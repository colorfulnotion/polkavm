// RO data = 1666/1668 bytes
// RW data = 16/1048656 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 68, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 145, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 226, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 229, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 72, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 120, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 191, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 206, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 136, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 170, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 0, 0, 0, 0, 142, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 186, 0, 0, 0, 0, 0, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2957
// Code size = 9179 bytes

      :                          @0
     0: 28 ad 02 00 00           jump @44
      :                          @1
     5: 28 f7 10 00 00           jump @190
      :                          @2
    10: 28 11 14                 jump @275
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 c0 19                 jump @415
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 82 7b                    a4 = u64 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 98 ba 04                 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 56 04 01           a1 = 0x10456
   170: 50 10 04 71 1a           ra = 4, jump @425
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 14                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 3e                 jump @21 if a2 != 0
      :                          @17
   209: 82 10 80 00              ra = u64 [sp + 0x80]
   213: 95 11 88 00              sp = sp + 0x88
   217: 28 15 19                 jump @415
      :                          @18
   220: 82 7b                    a4 = u64 [a0]
   222: 33 09 81 00              a2 = 0x81
   226: 95 17 7f                 a0 = sp + 0x7f
   229: 33 02 57                 t0 = 0x57
   232: 01                       fallthrough
      :                          @19
   233: 64 9c                    a5 = a2
   235: 98 ba 04                 a3 = a4 >> 0x4
   238: 84 bb 0f                 a4 = a4 & 0xf
   241: 88 b3 0a                 t1 = a4 <u 0xa
   244: 33 09 30                 a2 = 0x30
   247: da 32 09                 a2 = t0 if t1 == 0
   250: be b9 09                 i32 a2 = a2 + a4
   253: 78 79                    u8 [a0] = a2
   255: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   258: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   261: 64 ab                    a4 = a3
   263: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   266: 28 30                    jump @23
      :                          @21
   268: 82 7b                    a4 = u64 [a0]
   270: 33 09 81 00              a2 = 0x81
   274: 95 17 7f                 a0 = sp + 0x7f
   277: 33 02 37                 t0 = 0x37
   280: 01                       fallthrough
      :                          @22
   281: 64 9c                    a5 = a2
   283: 98 ba 04                 a3 = a4 >> 0x4
   286: 84 bb 0f                 a4 = a4 & 0xf
   289: 88 b3 0a                 t1 = a4 <u 0xa
   292: 33 09 30                 a2 = 0x30
   295: da 32 09                 a2 = t0 if t1 == 0
   298: be b9 09                 i32 a2 = a2 + a4
   301: 78 79                    u8 [a0] = a2
   303: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   306: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   309: 64 ab                    a4 = a3
   311: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   314: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   317: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   322: 9a 9b 81 00              a4 = 0x81 - a2
   326: 64 1a                    a3 = sp
   328: c8 7a 0a                 a3 = a3 + a0
   331: 33 09 02                 a2 = 0x2
   334: 64 87                    a0 = a1
   336: 33 08 56 04 01           a1 = 0x10456
   341: 50 10 08 c6 19           ra = 8, jump @425
      :                          @25 [@dyn 4]
   346: 82 10 80 00              ra = u64 [sp + 0x80]
   350: 95 11 88 00              sp = sp + 0x88
   354: 32 00                    ret
      :                          @26
   356: 00                       trap
      :                          @27 [@dyn 5]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 85                    s0 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 5a 20                 a3 = u64 [s0 + 0x20]
   377: 82 8b 18                 a4 = u64 [a1 + 0x18]
   380: 64 76                    s1 = a0
   382: 33 08 08 04 01           a1 = 0x10408
   387: 33 09 01                 a2 = 0x1
   390: 64 a7                    a0 = a3
   392: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   396: 7b 15                    u64 [sp] = s0
   398: 78 17 08                 u8 [sp + 0x8] = a0
   401: 46 11 09                 u8 [sp + 9] = 0
   404: 7b 16 10                 u64 [sp + 0x10] = s1
   407: 33 05 02                 s0 = 0x2
   410: 64 17                    a0 = sp
   412: 95 18 10                 a1 = sp + 0x10
   415: 33 09 02                 a2 = 0x2
   418: 50 10 0e 5c 20           ra = 14, jump @569
      :                          @29 [@dyn 7]
   423: 95 67 08                 a0 = s1 + 0x8
   426: 7b 17 10                 u64 [sp + 0x10] = a0
   429: 64 17                    a0 = sp
   431: 95 18 10                 a1 = sp + 0x10
   434: 64 59                    a2 = s0
   436: 50 10 10 4a 20           ra = 16, jump @569
      :                          @30 [@dyn 8]
   441: 95 67 10                 a0 = s1 + 0x10
   444: 7b 17 10                 u64 [sp + 0x10] = a0
   447: 64 17                    a0 = sp
   449: 95 18 10                 a1 = sp + 0x10
   452: 64 59                    a2 = s0
   454: 50 10 12 38 20           ra = 18, jump @569
      :                          @31 [@dyn 9]
   459: 95 67 18                 a0 = s1 + 0x18
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 14 26 20           ra = 20, jump @569
      :                          @32 [@dyn 10]
   477: 95 67 20                 a0 = s1 + 0x20
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 16 14 20           ra = 22, jump @569
      :                          @33 [@dyn 11]
   495: 95 67 28                 a0 = s1 + 0x28
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 18 02 20           ra = 24, jump @569
      :                          @34 [@dyn 12]
   513: 95 67 30                 a0 = s1 + 0x30
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 1a f0 1f           ra = 26, jump @569
      :                          @35 [@dyn 13]
   531: 95 67 38                 a0 = s1 + 0x38
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 1c de 1f           ra = 28, jump @569
      :                          @36 [@dyn 14]
   549: 95 67 40                 a0 = s1 + 0x40
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1e cc 1f           ra = 30, jump @569
      :                          @37 [@dyn 15]
   567: 95 67 48                 a0 = s1 + 0x48
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 20 ba 1f           ra = 32, jump @569
      :                          @38 [@dyn 16]
   585: 95 67 50                 a0 = s1 + 0x50
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 22 a8 1f           ra = 34, jump @569
      :                          @39 [@dyn 17]
   603: 95 67 58                 a0 = s1 + 0x58
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 24 96 1f           ra = 36, jump @569
      :                          @40 [@dyn 18]
   621: 95 67 60                 a0 = s1 + 0x60
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 26 84 1f           ra = 38, jump @569
      :                          @41 [@dyn 19]
   639: 33 07 01                 a0 = 0x1
   642: 7c 18 08                 a1 = u8 [sp + 0x8]
   645: 52 08 1a                 jump @43 if a1 != 0
      :                          @42
   648: 82 17                    a0 = u64 [sp]
   650: 82 78 28                 a1 = u64 [a0 + 0x28]
   653: 82 77 20                 a0 = u64 [a0 + 0x20]
   656: 82 8a 18                 a3 = u64 [a1 + 0x18]
   659: 33 08 55 04 01           a1 = 0x10455
   664: 33 09 01                 a2 = 0x1
   667: b4 a0 01 28              ra = 40, jump [a3]
      :                          @43 [@dyn 20]
   671: 82 10 28                 ra = u64 [sp + 0x28]
   674: 82 15 20                 s0 = u64 [sp + 0x20]
   677: 82 16 18                 s1 = u64 [sp + 0x18]
   680: 95 11 30                 sp = sp + 0x30
   683: 32 00                    ret
      :                          @44 [export #0: 'refine']
   685: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   689: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   693: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   697: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   701: 95 11 b0 b4 fe           sp = sp + 0xfffffffffffeb4b0
   706: 33 0c 00 00 01           a5 = 0x10000
   711: 55 18 04 09              jump @46 if a1 >=u 4
      :                          @45
   715: 33 06                    s1 = 0
   717: 28 5a 01                 jump @68
      :                          @46
   720: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
   723: 51 06 54 01              jump @68 if s1 == 0
      :                          @47
   727: 95 7a 04                 a3 = a0 + 0x4
   730: 7d a8                    a1 = i8 [a3]
   732: 80 79                    a2 = u32 [a0]
   734: 33 05 01                 s0 = 0x1
   737: 59 08 3d                 jump @56 if a1 >=s 0
      :                          @48
   740: 84 87 ff 00              a0 = a1 & 0xff
   744: 33 05 02                 s0 = 0x2
   747: 53 27 c0 00 2d           jump @54 if a0 <u 192
      :                          @49
   752: 33 05 03                 s0 = 0x3
   755: 53 27 e0 00 25           jump @54 if a0 <u 224
      :                          @50
   760: 33 05 04                 s0 = 0x4
   763: 53 27 f0 00 1d           jump @54 if a0 <u 240
      :                          @51
   768: 33 05 05                 s0 = 0x5
   771: 53 27 f8 00 15           jump @54 if a0 <u 248
      :                          @52
   776: 33 05 06                 s0 = 0x6
   779: 53 27 fc 00 0d           jump @54 if a0 <u 252
      :                          @53
   784: 88 77 fe 00              a0 = a0 <u 0xfe
   788: 9a 75 08                 s0 = 0x8 - a0
   791: 01                       fallthrough
      :                          @54
   792: ae 56 06                 jump @56 if s1 >=u s0
      :                          @55
   795: 28 e0 0d                 jump @189
      :                          @56
   798: 7b 19 70                 u64 [sp + 0x70] = a2
   801: 7b 1a 68                 u64 [sp + 0x68] = a3
   804: 64 a7                    a0 = a3
   806: 64 58                    a1 = s0
   808: 50 10 2a 15 20           ra = 42, jump @586
      :                          @57 [@dyn 21]
   813: 64 58                    a1 = s0
   815: 64 75                    s0 = a0
   817: e4 86 07                 a0 = maxu(s1, a1)
   820: 7b 18 60                 u64 [sp + 0x60] = a1
   823: c9 87 07                 a0 = a0 - a1
   826: d8 57 08                 a1 = a0 <u s0
   829: e4 57 07                 a0 = maxu(a0, s0)
   832: c9 57 07                 a0 = a0 - s0
   835: 88 77 20                 a0 = a0 <u 0x20
   838: d4 87 07                 a0 = a0 | a1
   841: 52 07 d6 00              jump @67 if a0 != 0
      :                          @58
   845: 7b 15 78                 u64 [sp + 0x78] = s0
   848: 33 07 11 00 03           a0 = 0x30011
   853: 33 09 24                 a2 = 0x24
   856: 33 0a 03                 a3 = 0x3
   859: 7b 17 58                 u64 [sp + 0x58] = a0
   862: 33 08                    a1 = 0
   864: 33 0b                    a4 = 0
   866: 33 0c                    a5 = 0
   868: 0a 12                    ecalli 18 // 'fetch'
   870: 01                       fallthrough
      :                          @59
   871: 95 18 d0 50 01           a1 = sp + 0x150d0
   876: 33 06 24                 s1 = 0x24
   879: 55 15 08 6e              jump @64 if s0 >=u 8
      :                          @60
   883: 95 17 78                 a0 = sp + 0x78
   886: 7b 87 60 01              u64 [a1 + 0x160] = a0
   890: 33 07 06                 a0 = 0x6
   893: 7b 87 68 01              u64 [a1 + 0x168] = a0
   897: 33 07 78 03 01           a0 = 0x10378
   902: 7b 17 80 00              u64 [sp + 0x80] = a0
   906: 49 21 88 00 01           u64 [sp + 136] = 0x1
   911: 49 21 a0 00              u64 [sp + 160] = 0
   915: 95 18 30 52 01           a1 = sp + 0x15230
   920: 7b 18 90 00              u64 [sp + 0x90] = a1
   924: 49 21 98 00 01           u64 [sp + 152] = 0x1
   929: 95 17 c8 40 01           a0 = sp + 0x140c8
   934: 95 18 80 00              a1 = sp + 0x80
   938: 95 15 80 40 01           s0 = sp + 0x14080
   943: 50 10 2c b4 12           ra = 44, jump @332
      :                          @61 [@dyn 22]
   948: 82 5a 50                 a3 = u64 [s0 + 0x50]
   951: 82 5b 58                 a4 = u64 [s0 + 0x58]
   954: 82 55 48                 s0 = u64 [s0 + 0x48]
   957: 33 07 02                 a0 = 0x2
   960: 33 08                    a1 = 0
   962: 33 09                    a2 = 0
   964: 7b 1a 70                 u64 [sp + 0x70] = a3
   967: 33 00 2e                 ra = 0x2e
   970: 0a 64                    ecalli 100 // 'log'
   972: 01                       fallthrough
      :                          @62 [@dyn 23]
   973: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
   978: 55 38 00 00 f0 73        jump @69 if a1 >=u 4293918720
      :                          @63
   984: 82 1c 58                 a5 = u64 [sp + 0x58]
   987: 28 4c                    jump @68
      :                          @64
   989: 82 17 68                 a0 = u64 [sp + 0x68]
   992: 82 18 60                 a1 = u64 [sp + 0x60]
   995: c8 87 07                 a0 = a0 + a1
   998: 80 75                    s0 = u32 [a0]
  1000: 80 78 04                 a1 = u32 [a0 + 0x4]
  1003: 7b 18 68                 u64 [sp + 0x68] = a1
  1006: 80 77 08                 a0 = u32 [a0 + 0x8]
  1009: 7b 17 60                 u64 [sp + 0x60] = a0
  1012: 95 17 80 00              a0 = sp + 0x80
  1016: 33 09 00 40 01           a2 = 0x14000
  1021: 33 08                    a1 = 0
  1023: 50 10 30 90 15           ra = 48, jump @400
      :                          @65 [@dyn 24]
  1028: 95 19 80 00              a2 = sp + 0x80
  1032: 33 0b 00 40 01           a4 = 0x14000
  1037: 82 17 70                 a0 = u64 [sp + 0x70]
  1040: 82 18 58                 a1 = u64 [sp + 0x58]
  1043: 33 0a                    a3 = 0
  1045: 0a 11                    ecalli 17 // 'historical_lookup'
  1047: 01                       fallthrough
      :                          @66
  1048: 95 78 01                 a1 = a0 + 0x1
  1051: 55 18 04 5c              jump @75 if a1 >=u 4
      :                          @67
  1055: 33 06                    s1 = 0
  1057: 33 0c 00 00 01           a5 = 0x10000
  1062: 01                       fallthrough
      :                          @68
  1063: 64 c7                    a0 = a5
  1065: 64 68                    a1 = s1
  1067: 33 09 50 4b 01           a2 = 0x14b50
  1072: c8 91 01                 sp = sp + a2
  1075: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1079: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1083: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1087: 95 11 f8 07              sp = sp + 0x7f8
  1091: 32 00                    ret
      :                          @69
  1093: 33 07 40 00 03           a0 = 0x30040
  1098: 95 77 00 00 10           a0 = a0 + 0x100000
  1103: 33 0c 11 00 03           a5 = 0x30011
  1108: 82 16 70                 s1 = u64 [sp + 0x70]
  1111: 01                       fallthrough
      :                          @70
  1112: 82 78                    a1 = u64 [a0]
  1114: c9 87 09                 a2 = a0 - a1
  1117: ab 69 15                 jump @74 if a2 != s1
      :                          @71
  1120: c9 58 09                 a2 = a1 - s0
  1123: 01                       fallthrough
      :                          @72
  1124: 82 7a                    a3 = u64 [a0]
  1126: ab 8a f2                 jump @70 if a3 != a1
      :                          @73
  1129: 7b 79                    u64 [a0] = a2
  1131: 33 0b                    a4 = 0
  1133: 33 06 24                 s1 = 0x24
  1136: 28 b7                    jump @68
      :                          @74
  1138: 33 06 24                 s1 = 0x24
  1141: 28 b2                    jump @68
      :                          @75
  1143: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1146: 53 18 03 a5              jump @67 if a1 <u 3
      :                          @76
  1150: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1153: 51 18 06 9e              jump @67 if a1 == 6
      :                          @77
  1157: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1160: 53 18 03 97              jump @67 if a1 <u 3
      :                          @78
  1164: 7c 18 82 00              a1 = u8 [sp + 0x82]
  1168: 7c 19 81 00              a2 = u8 [sp + 0x81]
  1172: 7c 1a 80 00              a3 = u8 [sp + 0x80]
  1176: 97 88 10                 a1 = a1 << 0x10
  1179: 97 99 08                 a2 = a2 << 0x8
  1182: d4 98 08                 a1 = a1 | a2
  1185: d4 a8 08                 a1 = a1 | a3
  1188: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1191: ac 89 78 ff              jump @67 if a2 <u a1
      :                          @79
  1195: 7c 17 85 00              a0 = u8 [sp + 0x85]
  1199: 7c 1a 84 00              a3 = u8 [sp + 0x84]
  1203: 7c 1b 83 00              a4 = u8 [sp + 0x83]
  1207: 97 77 10                 a0 = a0 << 0x10
  1210: 97 aa 08                 a3 = a3 << 0x8
  1213: d4 a7 07                 a0 = a0 | a3
  1216: d4 b7 07                 a0 = a0 | a4
  1219: c9 89 09                 a2 = a2 - a1
  1222: ac 79 59 ff              jump @67 if a2 <u a0
      :                          @80
  1226: c9 79 06                 s1 = a2 - a0
  1229: 53 16 04 52 ff           jump @67 if s1 <u 4
      :                          @81
  1234: 95 12 8b 00              t0 = sp + 0x8b
  1238: c8 28 03                 t1 = a1 + t0
  1241: c8 37 0b                 a4 = a0 + t1
  1244: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1247: 7b 15 08                 u64 [sp + 0x8] = s0
  1250: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1253: 7c ba                    a3 = u8 [a4]
  1255: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1258: 97 cc 10                 a5 = a5 << 0x10
  1261: 97 55 08                 s0 = s0 << 0x8
  1264: d4 5c 0c                 a5 = a5 | s0
  1267: d4 c9 09                 a2 = a2 | a5
  1270: 97 99 08                 a2 = a2 << 0x8
  1273: d4 a9 0c                 a5 = a2 | a3
  1276: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1279: ac c6 20 ff              jump @67 if s1 <u a5
      :                          @82
  1283: 7c 19 87 00              a2 = u8 [sp + 0x87]
  1287: 7c 1a 86 00              a3 = u8 [sp + 0x86]
  1291: 97 99 08                 a2 = a2 << 0x8
  1294: 7c 16 8a 00              s1 = u8 [sp + 0x8a]
  1298: 7c 15 89 00              s0 = u8 [sp + 0x89]
  1302: d4 a9 09                 a2 = a2 | a3
  1305: 7c 1a 88 00              a3 = u8 [sp + 0x88]
  1309: 97 66 10                 s1 = s1 << 0x10
  1312: 97 55 08                 s0 = s0 << 0x8
  1315: d4 65 05                 s0 = s0 | s1
  1318: d4 5a 0a                 a3 = a3 | s0
  1321: 49 11 70 ff ff ef        u64 [sp + 112] = 0xffffffffffefffff
  1327: 95 bb 04                 a4 = a4 + 0x4
  1330: 33 04 80 40 01           t2 = 0x14080
  1335: c8 41 06                 s1 = sp + t2
  1338: 7b 69                    u64 [s1] = a2
  1340: 7b 6a 08                 u64 [s1 + 0x8] = a3
  1343: 7b 62 10                 u64 [s1 + 0x10] = t0
  1346: 7b 68 18                 u64 [s1 + 0x18] = a1
  1349: 7b 63 20                 u64 [s1 + 0x20] = t1
  1352: 7b 67 28                 u64 [s1 + 0x28] = a0
  1355: 7b 6b 30                 u64 [s1 + 0x30] = a4
  1358: 7b 6c 38                 u64 [s1 + 0x38] = a5
  1361: 7b 66 48                 u64 [s1 + 0x48] = s1
  1364: 33 08 06                 a1 = 0x6
  1367: 7b 68 50                 u64 [s1 + 0x50] = a1
  1370: 95 17 88 40 01           a0 = sp + 0x14088
  1375: 7b 67 58                 u64 [s1 + 0x58] = a0
  1378: 7b 68 60                 u64 [s1 + 0x60] = a1
  1381: 95 17 90 40 01           a0 = sp + 0x14090
  1386: 7b 67 68                 u64 [s1 + 0x68] = a0
  1389: 7b 68 70                 u64 [s1 + 0x70] = a1
  1392: 95 17 98 40 01           a0 = sp + 0x14098
  1397: 7b 67 78                 u64 [s1 + 0x78] = a0
  1400: 7b 68 80 00              u64 [s1 + 0x80] = a1
  1404: 95 17 a0 40 01           a0 = sp + 0x140a0
  1409: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1413: 7b 68 90 00              u64 [s1 + 0x90] = a1
  1417: 95 17 a8 40 01           a0 = sp + 0x140a8
  1422: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1426: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  1430: 95 17 b0 40 01           a0 = sp + 0x140b0
  1435: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1439: 7b 68 b0 00              u64 [s1 + 0xb0] = a1
  1443: 95 17 b8 40 01           a0 = sp + 0x140b8
  1448: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1452: 7b 18 58                 u64 [sp + 0x58] = a1
  1455: 7b 68 c0 00              u64 [s1 + 0xc0] = a1
  1459: 33 07 78 00 01           a0 = 0x10078
  1464: 95 16 d0 50 01           s1 = sp + 0x150d0
  1469: 7b 67 60 01              u64 [s1 + 0x160] = a0
  1473: 49 26 68 01 08           u64 [s1 + 360] = 0x8
  1478: 49 26 80 01              u64 [s1 + 384] = 0
  1482: 95 18 c8 40 01           a1 = sp + 0x140c8
  1487: 7b 68 70 01              u64 [s1 + 0x170] = a1
  1491: 49 26 78 01 08           u64 [s1 + 376] = 0x8
  1496: 95 17 58 51 01           a0 = sp + 0x15158
  1501: 95 18 30 52 01           a1 = sp + 0x15230
  1506: 50 10 32 81 10           ra = 50, jump @332
      :                          @83 [@dyn 25]
  1511: 82 65 90 00              s0 = u64 [s1 + 0x90]
  1515: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  1519: 82 66 88 00              s1 = u64 [s1 + 0x88]
  1523: 33 07 02                 a0 = 0x2
  1526: 33 08                    a1 = 0
  1528: 33 09                    a2 = 0
  1530: 64 5a                    a3 = s0
  1532: 33 00 34                 ra = 0x34
  1535: 0a 64                    ecalli 100 // 'log'
  1537: 01                       fallthrough
      :                          @84 [@dyn 26]
  1538: 82 17 70                 a0 = u64 [sp + 0x70]
  1541: c8 67 07                 a0 = a0 + s1
  1544: 53 37 00 00 f0 25        jump @90 if a0 <u 4293918720
      :                          @85
  1550: 33 07 40 00 03           a0 = 0x30040
  1555: 95 77 00 00 10           a0 = a0 + 0x100000
  1560: 01                       fallthrough
      :                          @86
  1561: 82 78                    a1 = u64 [a0]
  1563: c9 87 09                 a2 = a0 - a1
  1566: ab 59 0f                 jump @90 if a2 != s0
      :                          @87
  1569: c9 68 09                 a2 = a1 - s1
  1572: 01                       fallthrough
      :                          @88
  1573: 82 7a                    a3 = u64 [a0]
  1575: ab 8a f2                 jump @86 if a3 != a1
      :                          @89
  1578: 7b 79                    u64 [a0] = a2
  1580: 01                       fallthrough
      :                          @90
  1581: 95 15 80 40 01           s0 = sp + 0x14080
  1586: 82 57 30                 a0 = u64 [s0 + 0x30]
  1589: 82 58 38                 a1 = u64 [s0 + 0x38]
  1592: 33 09                    a2 = 0
  1594: 0a 14                    ecalli 20 // 'machine'
  1596: 7b 57 40                 u64 [s0 + 0x40] = a0
  1599: 95 17 c0 40 01           a0 = sp + 0x140c0
  1604: 95 16 d0 50 01           s1 = sp + 0x150d0
  1609: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1613: 82 17 58                 a0 = u64 [sp + 0x58]
  1616: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1620: 33 07 18 01 01           a0 = 0x10118
  1625: 7b 57 48                 u64 [s0 + 0x48] = a0
  1628: 95 17 58 51 01           a0 = sp + 0x15158
  1633: 7b 57 58                 u64 [s0 + 0x58] = a0
  1636: 49 15 50 01              u64 [s0 + 80] = 0x1
  1640: 49 15 60 01              u64 [s0 + 96] = 0x1
  1644: 49 15 68                 u64 [s0 + 104] = 0
  1647: 95 17 30 52 01           a0 = sp + 0x15230
  1652: 95 18 c8 40 01           a1 = sp + 0x140c8
  1657: 50 10 36 ea 0f           ra = 54, jump @332
      :                          @91 [@dyn 27]
  1662: 82 65 68 01              s0 = u64 [s1 + 0x168]
  1666: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  1670: 82 66 60 01              s1 = u64 [s1 + 0x160]
  1674: 33 07 02                 a0 = 0x2
  1677: 33 08                    a1 = 0
  1679: 33 09                    a2 = 0
  1681: 64 5a                    a3 = s0
  1683: 33 00 38                 ra = 0x38
  1686: 0a 64                    ecalli 100 // 'log'
  1688: 01                       fallthrough
      :                          @92 [@dyn 28]
  1689: 82 17 70                 a0 = u64 [sp + 0x70]
  1692: c8 67 07                 a0 = a0 + s1
  1695: 53 37 00 00 f0 25        jump @98 if a0 <u 4293918720
      :                          @93
  1701: 33 07 40 00 03           a0 = 0x30040
  1706: 95 77 00 00 10           a0 = a0 + 0x100000
  1711: 01                       fallthrough
      :                          @94
  1712: 82 78                    a1 = u64 [a0]
  1714: c9 87 09                 a2 = a0 - a1
  1717: ab 59 0f                 jump @98 if a2 != s0
      :                          @95
  1720: c9 68 09                 a2 = a1 - s1
  1723: 01                       fallthrough
      :                          @96
  1724: 82 7a                    a3 = u64 [a0]
  1726: ab 8a f2                 jump @94 if a3 != a1
      :                          @97
  1729: 7b 79                    u64 [a0] = a2
  1731: 01                       fallthrough
      :                          @98
  1732: 95 19 80 40 01           a2 = sp + 0x14080
  1737: 82 97                    a0 = u64 [a2]
  1739: 7b 17 48                 u64 [sp + 0x48] = a0
  1742: 82 97 08                 a0 = u64 [a2 + 0x8]
  1745: 7b 17 40                 u64 [sp + 0x40] = a0
  1748: 82 97 10                 a0 = u64 [a2 + 0x10]
  1751: 7b 17 38                 u64 [sp + 0x38] = a0
  1754: 82 95 18                 s0 = u64 [a2 + 0x18]
  1757: 82 98 20                 a1 = u64 [a2 + 0x20]
  1760: 7b 18 30                 u64 [sp + 0x30] = a1
  1763: 80 97 40                 a0 = u32 [a2 + 0x40]
  1766: 82 96 28                 s1 = u64 [a2 + 0x28]
  1769: 49 11 50 ff 0f           u64 [sp + 80] = 0xfff
  1774: 95 59 ff 0f              a2 = s0 + 0xfff
  1778: 98 99 0c                 a2 = a2 >> 0xc
  1781: 33 08 10                 a1 = 0x10
  1784: 7b 17 58                 u64 [sp + 0x58] = a0
  1787: 0a 17                    ecalli 23 // 'zero'
  1789: 01                       fallthrough
      :                          @99
  1790: 51 07 17                 jump @101 if a0 == 0
      :                          @100
  1793: 33 0a 44 06 01           a3 = 0x10644
  1798: 33 07 02                 a0 = 0x2
  1801: 33 0b 3e                 a4 = 0x3e
  1804: 33 08                    a1 = 0
  1806: 33 09                    a2 = 0
  1808: 0a 64                    ecalli 100 // 'log'
  1810: 28 e0 00                 jump @114
      :                          @101
  1813: 7b 16 28                 u64 [sp + 0x28] = s1
  1816: 82 17 50                 a0 = u64 [sp + 0x50]
  1819: c8 67 07                 a0 = a0 + s1
  1822: 98 77 0c                 a0 = a0 >> 0xc
  1825: 82 19 48                 a2 = u64 [sp + 0x48]
  1828: c8 79 09                 a2 = a2 + a0
  1831: 7b 15 48                 u64 [sp + 0x48] = s0
  1834: 95 57 ff ff 00           a0 = s0 + 0xffff
  1839: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1844: 95 75 00 00 02           s0 = a0 + 0x20000
  1849: 98 58 0c                 a1 = s0 >> 0xc
  1852: 82 17 58                 a0 = u64 [sp + 0x58]
  1855: 0a 17                    ecalli 23 // 'zero'
  1857: 01                       fallthrough
      :                          @102
  1858: 51 07 17                 jump @104 if a0 == 0
      :                          @103
  1861: 33 0a 06 06 01           a3 = 0x10606
  1866: 33 07 02                 a0 = 0x2
  1869: 33 0b 3e                 a4 = 0x3e
  1872: 33 08                    a1 = 0
  1874: 33 09                    a2 = 0
  1876: 0a 64                    ecalli 100 // 'log'
  1878: 28 9c 00                 jump @114
      :                          @104
  1881: 82 16 50                 s1 = u64 [sp + 0x50]
  1884: 82 17 40                 a0 = u64 [sp + 0x40]
  1887: c8 76 06                 s1 = s1 + a0
  1890: 98 69 0c                 a2 = s1 >> 0xc
  1893: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  1897: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1907: c9 78 08                 a1 = a1 - a0
  1910: 98 88 0c                 a1 = a1 >> 0xc
  1913: 82 17 58                 a0 = u64 [sp + 0x58]
  1916: 0a 17                    ecalli 23 // 'zero'
  1918: 01                       fallthrough
      :                          @105
  1919: 51 07 16                 jump @107 if a0 == 0
      :                          @106
  1922: 33 0a ca 05 01           a3 = 0x105ca
  1927: 33 07 02                 a0 = 0x2
  1930: 33 0b 3c                 a4 = 0x3c
  1933: 33 08                    a1 = 0
  1935: 33 09                    a2 = 0
  1937: 0a 64                    ecalli 100 // 'log'
  1939: 28 5f                    jump @114
      :                          @107
  1941: 33 09 00 00 01           a2 = 0x10000
  1946: 82 17 58                 a0 = u64 [sp + 0x58]
  1949: 82 18 38                 a1 = u64 [sp + 0x38]
  1952: 82 1a 48                 a3 = u64 [sp + 0x48]
  1955: 0a 16                    ecalli 22 // 'poke'
  1957: 01                       fallthrough
      :                          @108
  1958: 51 07 16                 jump @110 if a0 == 0
      :                          @109
  1961: 33 0a 8c 05 01           a3 = 0x1058c
  1966: 33 07 02                 a0 = 0x2
  1969: 33 0b 3e                 a4 = 0x3e
  1972: 33 08                    a1 = 0
  1974: 33 09                    a2 = 0
  1976: 0a 64                    ecalli 100 // 'log'
  1978: 28 38                    jump @114
      :                          @110
  1980: 82 17 58                 a0 = u64 [sp + 0x58]
  1983: 82 18 30                 a1 = u64 [sp + 0x30]
  1986: 64 59                    a2 = s0
  1988: 82 1a 28                 a3 = u64 [sp + 0x28]
  1991: 0a 16                    ecalli 22 // 'poke'
  1993: 01                       fallthrough
      :                          @111
  1994: 51 07 16                 jump @113 if a0 == 0
      :                          @112
  1997: 33 0a 4e 05 01           a3 = 0x1054e
  2002: 33 07 02                 a0 = 0x2
  2005: 33 0b 3e                 a4 = 0x3e
  2008: 33 08                    a1 = 0
  2010: 33 09                    a2 = 0
  2012: 0a 64                    ecalli 100 // 'log'
  2014: 28 14                    jump @114
      :                          @113
  2016: 33 0a 20 05 01           a3 = 0x10520
  2021: 33 07 02                 a0 = 0x2
  2024: 33 0b 2e                 a4 = 0x2e
  2027: 33 08                    a1 = 0
  2029: 33 09                    a2 = 0
  2031: 0a 64                    ecalli 100 // 'log'
  2033: 01                       fallthrough
      :                          @114
  2034: 33 05 08 10              s0 = 0x1008
  2038: 95 17 c8 40 01           a0 = sp + 0x140c8
  2043: 33 08                    a1 = 0
  2045: 33 09 08 10              a2 = 0x1008
  2049: 50 10 3a 8e 11           ra = 58, jump @400
      :                          @115 [@dyn 29]
  2054: 95 17 d0 50 01           a0 = sp + 0x150d0
  2059: 49 07                    u64 [a0 + 0] = 0
  2061: 95 17 c8 40 01           a0 = sp + 0x140c8
  2066: 33 0a 06                 a3 = 0x6
  2069: 33 08                    a1 = 0
  2071: 7b 15 30                 u64 [sp + 0x30] = s0
  2074: 64 59                    a2 = s0
  2076: 33 0b                    a4 = 0
  2078: 33 0c                    a5 = 0
  2080: 0a 12                    ecalli 18 // 'fetch'
  2082: 01                       fallthrough
      :                          @116
  2083: 95 18 d0 50 01           a1 = sp + 0x150d0
  2088: 7b 87 18                 u64 [a1 + 0x18] = a0
  2091: 33 0a                    a3 = 0
  2093: 51 17 ff ad 02           jump @143 if a0 == 4294967295
      :                          @117
  2098: 33 07 06                 a0 = 0x6
  2101: 7b 17 58                 u64 [sp + 0x58] = a0
  2104: 33 07 58 01 01           a0 = 0x10158
  2109: 7b 17 28                 u64 [sp + 0x28] = a0
  2112: 33 07 a0 01 01           a0 = 0x101a0
  2117: 7b 17 20                 u64 [sp + 0x20] = a0
  2120: 33 07 00 00 01           a0 = 0x10000
  2125: 7b 17 18                 u64 [sp + 0x18] = a0
  2128: 33 06 40 00 03           s1 = 0x30040
  2133: 95 66 00 00 10           s1 = s1 + 0x100000
  2138: 33 07 f8 01 01           a0 = 0x101f8
  2143: 7b 17 10                 u64 [sp + 0x10] = a0
  2146: 28 3c                    jump @120
      :                          @118
  2148: 95 17 d0 50 01           a0 = sp + 0x150d0
  2153: 82 7b                    a4 = u64 [a0]
  2155: 95 bb 01                 a4 = a4 + 0x1
  2158: 7b 7b                    u64 [a0] = a4
  2160: 95 17 c8 40 01           a0 = sp + 0x140c8
  2165: 33 0a 06                 a3 = 0x6
  2168: 33 08                    a1 = 0
  2170: 82 19 30                 a2 = u64 [sp + 0x30]
  2173: 33 0c                    a5 = 0
  2175: 0a 12                    ecalli 18 // 'fetch'
  2177: 01                       fallthrough
      :                          @119
  2178: 82 18 48                 a1 = u64 [sp + 0x48]
  2181: 97 88 0c                 a1 = a1 << 0xc
  2184: 82 1a 50                 a3 = u64 [sp + 0x50]
  2187: 82 19 40                 a2 = u64 [sp + 0x40]
  2190: da 98 0a                 a3 = a1 if a2 == 0
  2193: 95 18 d0 50 01           a1 = sp + 0x150d0
  2198: 7b 87 18                 u64 [a1 + 0x18] = a0
  2201: 51 17 ff 41 02           jump @143 if a0 == 4294967295
      :                          @120
  2206: 7b 1a 50                 u64 [sp + 0x50] = a3
  2209: 7b 88 88 00              u64 [a1 + 0x88] = a1
  2213: 82 17 58                 a0 = u64 [sp + 0x58]
  2216: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2220: 95 19 e8 50 01           a2 = sp + 0x150e8
  2225: 7b 89 98 00              u64 [a1 + 0x98] = a2
  2229: 7b 87 a0 00              u64 [a1 + 0xa0] = a0
  2233: 82 17 28                 a0 = u64 [sp + 0x28]
  2236: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2240: 49 28 68 01 02           u64 [a1 + 360] = 0x2
  2245: 49 28 80 01              u64 [a1 + 384] = 0
  2249: 95 19 58 51 01           a2 = sp + 0x15158
  2254: 7b 89 70 01              u64 [a1 + 0x170] = a2
  2258: 49 28 78 01 02           u64 [a1 + 376] = 0x2
  2263: 95 17 f0 50 01           a0 = sp + 0x150f0
  2268: 95 18 30 52 01           a1 = sp + 0x15230
  2273: 50 10 3c 82 0d           ra = 60, jump @332
      :                          @121 [@dyn 30]
  2278: 95 17 d0 50 01           a0 = sp + 0x150d0
  2283: 82 75 28                 s0 = u64 [a0 + 0x28]
  2286: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2289: 82 77 20                 a0 = u64 [a0 + 0x20]
  2292: 7b 17 48                 u64 [sp + 0x48] = a0
  2295: 33 07 02                 a0 = 0x2
  2298: 33 08                    a1 = 0
  2300: 33 09                    a2 = 0
  2302: 64 5a                    a3 = s0
  2304: 33 00 3e                 ra = 0x3e
  2307: 0a 64                    ecalli 100 // 'log'
  2309: 01                       fallthrough
      :                          @122 [@dyn 31]
  2310: 82 1b 48                 a4 = u64 [sp + 0x48]
  2313: 82 17 70                 a0 = u64 [sp + 0x70]
  2316: c8 b7 07                 a0 = a0 + a4
  2319: 53 37 00 00 f0 1a        jump @127 if a0 <u 4293918720
      :                          @123
  2325: 82 67                    a0 = u64 [s1]
  2327: c9 76 08                 a1 = s1 - a0
  2330: ab 58 0f                 jump @127 if a1 != s0
      :                          @124
  2333: c9 b7 08                 a1 = a0 - a4
  2336: 01                       fallthrough
      :                          @125
  2337: 82 69                    a2 = u64 [s1]
  2339: ab 79 f2                 jump @123 if a2 != a0
      :                          @126
  2342: 7b 68                    u64 [s1] = a1
  2344: 01                       fallthrough
      :                          @127
  2345: 95 18 80 40 01           a1 = sp + 0x14080
  2350: 80 87 48                 a0 = u32 [a1 + 0x48]
  2353: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2356: 95 19 d0 50 01           a2 = sp + 0x150d0
  2361: 7b 97 08                 u64 [a2 + 0x8] = a0
  2364: 7b 98 10                 u64 [a2 + 0x10] = a1
  2367: 82 99                    a2 = u64 [a2]
  2369: 7b 19 40                 u64 [sp + 0x40] = a2
  2372: 33 09 01                 a2 = 0x1
  2375: 7b 18 48                 u64 [sp + 0x48] = a1
  2378: 0a 17                    ecalli 23 // 'zero'
  2380: 95 19 d0 50 01           a2 = sp + 0x150d0
  2385: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2389: 95 17 d8 50 01           a0 = sp + 0x150d8
  2394: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2398: 82 17 58                 a0 = u64 [sp + 0x58]
  2401: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2405: 95 18 e0 50 01           a1 = sp + 0x150e0
  2410: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2414: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2418: 95 18 c8 51 01           a1 = sp + 0x151c8
  2423: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2427: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2431: 82 17 20                 a0 = u64 [sp + 0x20]
  2434: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2438: 49 29 90 00 03           u64 [a2 + 144] = 0x3
  2443: 49 29 a8 00              u64 [a2 + 168] = 0
  2447: 95 17 30 52 01           a0 = sp + 0x15230
  2452: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2456: 49 29 a0 00 03           u64 [a2 + 160] = 0x3
  2461: 95 17 f0 50 01           a0 = sp + 0x150f0
  2466: 95 18 58 51 01           a1 = sp + 0x15158
  2471: 50 10 40 bc 0c           ra = 64, jump @332
      :                          @128 [@dyn 32]
  2476: 95 17 d0 50 01           a0 = sp + 0x150d0
  2481: 82 75 28                 s0 = u64 [a0 + 0x28]
  2484: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2487: 82 77 20                 a0 = u64 [a0 + 0x20]
  2490: 7b 17 38                 u64 [sp + 0x38] = a0
  2493: 33 07 02                 a0 = 0x2
  2496: 33 08                    a1 = 0
  2498: 33 09                    a2 = 0
  2500: 64 5a                    a3 = s0
  2502: 33 00 42                 ra = 0x42
  2505: 0a 64                    ecalli 100 // 'log'
  2507: 01                       fallthrough
      :                          @129 [@dyn 33]
  2508: 82 1b 38                 a4 = u64 [sp + 0x38]
  2511: 82 17 70                 a0 = u64 [sp + 0x70]
  2514: c8 b7 07                 a0 = a0 + a4
  2517: 53 37 00 00 f0 1a        jump @134 if a0 <u 4293918720
      :                          @130
  2523: 82 67                    a0 = u64 [s1]
  2525: c9 76 08                 a1 = s1 - a0
  2528: ab 58 0f                 jump @134 if a1 != s0
      :                          @131
  2531: c9 b7 08                 a1 = a0 - a4
  2534: 01                       fallthrough
      :                          @132
  2535: 82 69                    a2 = u64 [s1]
  2537: ab 79 f2                 jump @130 if a2 != a0
      :                          @133
  2540: 7b 68                    u64 [s1] = a1
  2542: 01                       fallthrough
      :                          @134
  2543: 95 1a d0 50 01           a3 = sp + 0x150d0
  2548: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2551: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2554: 95 18 c8 40 01           a1 = sp + 0x140c8
  2559: 7b a8 00 01              u64 [a3 + 0x100] = a1
  2563: 97 99 0c                 a2 = a2 << 0xc
  2566: 7b a9 08 01              u64 [a3 + 0x108] = a2
  2570: 33 0a 00 10              a3 = 0x1000
  2574: 95 18 d0 40 01           a1 = sp + 0x140d0
  2579: 0a 16                    ecalli 22 // 'poke'
  2581: 95 19 d0 50 01           a2 = sp + 0x150d0
  2586: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2590: 95 17 d8 50 01           a0 = sp + 0x150d8
  2595: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2599: 82 17 58                 a0 = u64 [sp + 0x58]
  2602: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2606: 95 18 d0 51 01           a1 = sp + 0x151d0
  2611: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2615: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2619: 95 18 d8 51 01           a1 = sp + 0x151d8
  2624: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2628: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2632: 82 18 18                 a1 = u64 [sp + 0x18]
  2635: 7b 98 90 01              u64 [a2 + 0x190] = a1
  2639: 7b 97 98 01              u64 [a2 + 0x198] = a0
  2643: 95 18 f0 51 01           a1 = sp + 0x151f0
  2648: 7b 98 a0 01              u64 [a2 + 0x1a0] = a1
  2652: 7b 97 a8 01              u64 [a2 + 0x1a8] = a0
  2656: 82 17 10                 a0 = u64 [sp + 0x10]
  2659: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2663: 49 29 90 00 05           u64 [a2 + 144] = 0x5
  2668: 49 29 a8 00              u64 [a2 + 168] = 0
  2672: 95 17 30 52 01           a0 = sp + 0x15230
  2677: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2681: 49 29 a0 00 05           u64 [a2 + 160] = 0x5
  2686: 95 17 f0 50 01           a0 = sp + 0x150f0
  2691: 95 18 58 51 01           a1 = sp + 0x15158
  2696: 50 10 44 db 0b           ra = 68, jump @332
      :                          @135 [@dyn 34]
  2701: 95 17 d0 50 01           a0 = sp + 0x150d0
  2706: 82 75 28                 s0 = u64 [a0 + 0x28]
  2709: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2712: 82 77 20                 a0 = u64 [a0 + 0x20]
  2715: 7b 17 38                 u64 [sp + 0x38] = a0
  2718: 33 07 02                 a0 = 0x2
  2721: 33 08                    a1 = 0
  2723: 33 09                    a2 = 0
  2725: 64 5a                    a3 = s0
  2727: 33 00 46                 ra = 0x46
  2730: 0a 64                    ecalli 100 // 'log'
  2732: 01                       fallthrough
      :                          @136 [@dyn 35]
  2733: 82 1b 38                 a4 = u64 [sp + 0x38]
  2736: 82 17 70                 a0 = u64 [sp + 0x70]
  2739: c8 b7 07                 a0 = a0 + a4
  2742: 53 37 00 00 f0 ae fd     jump @118 if a0 <u 4293918720
      :                          @137
  2749: 82 67                    a0 = u64 [s1]
  2751: c9 76 08                 a1 = s1 - a0
  2754: ab 58 a2 fd              jump @118 if a1 != s0
      :                          @138
  2758: c9 b7 08                 a1 = a0 - a4
  2761: 01                       fallthrough
      :                          @139
  2762: 82 69                    a2 = u64 [s1]
  2764: ab 79 f1                 jump @137 if a2 != a0
      :                          @140
  2767: 7b 68                    u64 [s1] = a1
  2769: 33 0a                    a3 = 0
  2771: 01                       fallthrough
      :                          @141
  2772: ab 79 e9                 jump @137 if a2 != a0
      :                          @142
  2775: 28 8d fd                 jump @118
      :                          @143
  2778: 49 18 50                 u64 [a1 + 80] = 0
  2781: 49 18 48                 u64 [a1 + 72] = 0
  2784: 49 18 40                 u64 [a1 + 64] = 0
  2787: 49 18 38                 u64 [a1 + 56] = 0
  2790: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2800: 7b 87 20                 u64 [a1 + 0x20] = a0
  2803: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2813: 7b 87 28                 u64 [a1 + 0x28] = a0
  2816: 82 87                    a0 = u64 [a1]
  2818: 49 18 30                 u64 [a1 + 48] = 0
  2821: 49 28 80 00              u64 [a1 + 128] = 0
  2825: 7b 8a 58                 u64 [a1 + 0x58] = a3
  2828: 97 77 0c                 a0 = a0 << 0xc
  2831: 7b 87 60                 u64 [a1 + 0x60] = a0
  2834: 82 17 08                 a0 = u64 [sp + 0x8]
  2837: 7b 87 68                 u64 [a1 + 0x68] = a0
  2840: 82 17 68                 a0 = u64 [sp + 0x68]
  2843: 7b 87 70                 u64 [a1 + 0x70] = a0
  2846: 82 17 60                 a0 = u64 [sp + 0x60]
  2849: 7b 87 78                 u64 [a1 + 0x78] = a0
  2852: 95 17 f0 50 01           a0 = sp + 0x150f0
  2857: 7b 87 20 01              u64 [a1 + 0x120] = a0
  2861: 33 07 0a                 a0 = 0xa
  2864: 7b 87 28 01              u64 [a1 + 0x128] = a0
  2868: 33 07 68 02 01           a0 = 0x10268
  2873: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2877: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  2882: 49 28 80 01              u64 [a1 + 384] = 0
  2886: 95 17 f0 51 01           a0 = sp + 0x151f0
  2891: 7b 87 70 01              u64 [a1 + 0x170] = a0
  2895: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  2900: 95 17 58 51 01           a0 = sp + 0x15158
  2905: 95 16 d0 50 01           s1 = sp + 0x150d0
  2910: 95 18 30 52 01           a1 = sp + 0x15230
  2915: 50 10 48 00 0b           ra = 72, jump @332
      :                          @144 [@dyn 36]
  2920: 82 65 90 00              s0 = u64 [s1 + 0x90]
  2924: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  2928: 82 66 88 00              s1 = u64 [s1 + 0x88]
  2932: 33 07 02                 a0 = 0x2
  2935: 33 08                    a1 = 0
  2937: 33 09                    a2 = 0
  2939: 64 5a                    a3 = s0
  2941: 33 00 4a                 ra = 0x4a
  2944: 0a 64                    ecalli 100 // 'log'
  2946: 01                       fallthrough
      :                          @145 [@dyn 37]
  2947: 82 17 70                 a0 = u64 [sp + 0x70]
  2950: c8 67 07                 a0 = a0 + s1
  2953: 53 37 00 00 f0 25        jump @151 if a0 <u 4293918720
      :                          @146
  2959: 33 07 40 00 03           a0 = 0x30040
  2964: 95 77 00 00 10           a0 = a0 + 0x100000
  2969: 01                       fallthrough
      :                          @147
  2970: 82 78                    a1 = u64 [a0]
  2972: c9 87 09                 a2 = a0 - a1
  2975: ab 59 0f                 jump @151 if a2 != s0
      :                          @148
  2978: c9 68 09                 a2 = a1 - s1
  2981: 01                       fallthrough
      :                          @149
  2982: 82 7a                    a3 = u64 [a0]
  2984: ab 8a f2                 jump @147 if a3 != a1
      :                          @150
  2987: 7b 79                    u64 [a0] = a2
  2989: 01                       fallthrough
      :                          @151
  2990: 95 14 d0 50 01           t2 = sp + 0x150d0
  2995: 82 43 20                 t1 = u64 [t2 + 0x20]
  2998: 82 49 28                 a2 = u64 [t2 + 0x28]
  3001: 82 40 30                 ra = u64 [t2 + 0x30]
  3004: 82 4a 38                 a3 = u64 [t2 + 0x38]
  3007: 82 4b 40                 a4 = u64 [t2 + 0x40]
  3010: 82 4c 48                 a5 = u64 [t2 + 0x48]
  3013: 82 46 50                 s1 = u64 [t2 + 0x50]
  3016: 82 45 58                 s0 = u64 [t2 + 0x58]
  3019: 82 42 60                 t0 = u64 [t2 + 0x60]
  3022: 49 24 88 00 00 00 01     u64 [t2 + 136] = 0x10000
  3029: 82 47 68                 a0 = u64 [t2 + 0x68]
  3032: 7b 43 90 00              u64 [t2 + 0x90] = t1
  3036: 82 48 70                 a1 = u64 [t2 + 0x70]
  3039: 7b 49 98 00              u64 [t2 + 0x98] = a2
  3043: 82 49 78                 a2 = u64 [t2 + 0x78]
  3046: 7b 40 a0 00              u64 [t2 + 0xa0] = ra
  3050: 82 43 80 00              t1 = u64 [t2 + 0x80]
  3054: 7b 4a a8 00              u64 [t2 + 0xa8] = a3
  3058: 7b 4b b0 00              u64 [t2 + 0xb0] = a4
  3062: 7b 4c b8 00              u64 [t2 + 0xb8] = a5
  3066: 7b 46 c0 00              u64 [t2 + 0xc0] = s1
  3070: 7b 45 c8 00              u64 [t2 + 0xc8] = s0
  3074: 7b 42 d0 00              u64 [t2 + 0xd0] = t0
  3078: 7b 47 d8 00              u64 [t2 + 0xd8] = a0
  3082: 7b 48 e0 00              u64 [t2 + 0xe0] = a1
  3086: 95 18 d0 50 01           a1 = sp + 0x150d0
  3091: 7b 89 e8 00              u64 [a1 + 0xe8] = a2
  3095: 7b 83 f0 00              u64 [a1 + 0xf0] = t1
  3099: 33 07 06                 a0 = 0x6
  3102: 7b 17 60                 u64 [sp + 0x60] = a0
  3105: 33 07 a0 02 01           a0 = 0x102a0
  3110: 7b 17 38                 u64 [sp + 0x38] = a0
  3113: 33 07 d8 02 01           a0 = 0x102d8
  3118: 7b 17 30                 u64 [sp + 0x30] = a0
  3121: 33 06 40 00 03           s1 = 0x30040
  3126: 95 66 00 00 10           s1 = s1 + 0x100000
  3131: 01                       fallthrough
      :                          @152
  3132: 7b 88 08 01              u64 [a1 + 0x108] = a1
  3136: 82 17 60                 a0 = u64 [sp + 0x60]
  3139: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3143: 82 17 38                 a0 = u64 [sp + 0x38]
  3146: 7b 87 60 01              u64 [a1 + 0x160] = a0
  3150: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  3155: 49 28 80 01              u64 [a1 + 384] = 0
  3159: 95 19 d8 51 01           a2 = sp + 0x151d8
  3164: 7b 89 70 01              u64 [a1 + 0x170] = a2
  3168: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3173: 95 17 f0 51 01           a0 = sp + 0x151f0
  3178: 95 18 30 52 01           a1 = sp + 0x15230
  3183: 50 10 4c f4 09           ra = 76, jump @332
      :                          @153 [@dyn 38]
  3188: 95 17 d0 50 01           a0 = sp + 0x150d0
  3193: 82 75 28 01              s0 = u64 [a0 + 0x128]
  3197: 82 7b 30 01              a4 = u64 [a0 + 0x130]
  3201: 82 77 20 01              a0 = u64 [a0 + 0x120]
  3205: 7b 17 68                 u64 [sp + 0x68] = a0
  3208: 33 07 02                 a0 = 0x2
  3211: 33 08                    a1 = 0
  3213: 33 09                    a2 = 0
  3215: 64 5a                    a3 = s0
  3217: 33 00 4e                 ra = 0x4e
  3220: 0a 64                    ecalli 100 // 'log'
  3222: 01                       fallthrough
      :                          @154 [@dyn 39]
  3223: 82 1b 68                 a4 = u64 [sp + 0x68]
  3226: 82 17 70                 a0 = u64 [sp + 0x70]
  3229: c8 b7 07                 a0 = a0 + a4
  3232: 53 37 00 00 f0 1a        jump @159 if a0 <u 4293918720
      :                          @155
  3238: 82 67                    a0 = u64 [s1]
  3240: c9 76 08                 a1 = s1 - a0
  3243: ab 58 0f                 jump @159 if a1 != s0
      :                          @156
  3246: c9 b7 08                 a1 = a0 - a4
  3249: 01                       fallthrough
      :                          @157
  3250: 82 69                    a2 = u64 [s1]
  3252: ab 79 f2                 jump @155 if a2 != a0
      :                          @158
  3255: 7b 68                    u64 [s1] = a1
  3257: 01                       fallthrough
      :                          @159
  3258: 95 17 80 40 01           a0 = sp + 0x14080
  3263: 82 77 40                 a0 = u64 [a0 + 0x40]
  3266: 95 18 58 51 01           a1 = sp + 0x15158
  3271: 0a 19                    ecalli 25 // 'invoke'
  3273: 95 19 d0 50 01           a2 = sp + 0x150d0
  3278: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  3282: 7b 98 00 01              u64 [a2 + 0x100] = a1
  3286: 95 17 c0 40 01           a0 = sp + 0x140c0
  3291: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3295: 82 17 60                 a0 = u64 [sp + 0x60]
  3298: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3302: 95 18 c8 51 01           a1 = sp + 0x151c8
  3307: 7b 98 70 01              u64 [a2 + 0x170] = a1
  3311: 7b 97 78 01              u64 [a2 + 0x178] = a0
  3315: 95 18 d0 51 01           a1 = sp + 0x151d0
  3320: 7b 98 80 01              u64 [a2 + 0x180] = a1
  3324: 7b 97 88 01              u64 [a2 + 0x188] = a0
  3328: 82 17 30                 a0 = u64 [sp + 0x30]
  3331: 7b 97 20 01              u64 [a2 + 0x120] = a0
  3335: 49 29 28 01 03           u64 [a2 + 296] = 0x3
  3340: 49 29 40 01              u64 [a2 + 320] = 0
  3344: 95 17 30 52 01           a0 = sp + 0x15230
  3349: 7b 97 30 01              u64 [a2 + 0x130] = a0
  3353: 49 29 38 01 03           u64 [a2 + 312] = 0x3
  3358: 95 17 d8 51 01           a0 = sp + 0x151d8
  3363: 95 18 f0 51 01           a1 = sp + 0x151f0
  3368: 50 10 50 3b 09           ra = 80, jump @332
      :                          @160 [@dyn 40]
  3373: 95 17 d0 50 01           a0 = sp + 0x150d0
  3378: 82 75 10 01              s0 = u64 [a0 + 0x110]
  3382: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  3386: 82 77 08 01              a0 = u64 [a0 + 0x108]
  3390: 7b 17 68                 u64 [sp + 0x68] = a0
  3393: 33 07 02                 a0 = 0x2
  3396: 33 08                    a1 = 0
  3398: 33 09                    a2 = 0
  3400: 64 5a                    a3 = s0
  3402: 33 00 52                 ra = 0x52
  3405: 0a 64                    ecalli 100 // 'log'
  3407: 01                       fallthrough
      :                          @161 [@dyn 41]
  3408: 82 1b 68                 a4 = u64 [sp + 0x68]
  3411: 82 17 70                 a0 = u64 [sp + 0x70]
  3414: c8 b7 07                 a0 = a0 + a4
  3417: 53 37 00 00 f0 1a        jump @166 if a0 <u 4293918720
      :                          @162
  3423: 82 67                    a0 = u64 [s1]
  3425: c9 76 08                 a1 = s1 - a0
  3428: ab 58 0f                 jump @166 if a1 != s0
      :                          @163
  3431: c9 b7 08                 a1 = a0 - a4
  3434: 01                       fallthrough
      :                          @164
  3435: 82 69                    a2 = u64 [s1]
  3437: ab 79 f2                 jump @162 if a2 != a0
      :                          @165
  3440: 7b 68                    u64 [s1] = a1
  3442: 01                       fallthrough
      :                          @166
  3443: 95 18 d0 50 01           a1 = sp + 0x150d0
  3448: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
  3452: 82 88 00 01              a1 = u64 [a1 + 0x100]
  3456: 85 77 03                 a0 = a0 ^ 0x3
  3459: 85 88 64                 a1 = a1 ^ 0x64
  3462: d4 87 05                 s0 = a0 | a1
  3465: 95 17 f0 50 01           a0 = sp + 0x150f0
  3470: 33 09 68                 a2 = 0x68
  3473: 95 18 60 51 01           a1 = sp + 0x15160
  3478: 50 10 54 47 0b           ra = 84, jump @382
      :                          @167 [@dyn 42]
  3483: 95 17 d0 50 01           a0 = sp + 0x150d0
  3488: 82 78 58                 a1 = u64 [a0 + 0x58]
  3491: 7b 18 68                 u64 [sp + 0x68] = a1
  3494: 52 05 93 00              jump @170 if s0 != 0
      :                          @168
  3498: 82 78 60                 a1 = u64 [a0 + 0x60]
  3501: 7b 18 48                 u64 [sp + 0x48] = a1
  3504: 82 75 68                 s0 = u64 [a0 + 0x68]
  3507: 7b 15 40                 u64 [sp + 0x40] = s0
  3510: 82 78 70                 a1 = u64 [a0 + 0x70]
  3513: 7b 18 58                 u64 [sp + 0x58] = a1
  3516: 82 78 78                 a1 = u64 [a0 + 0x78]
  3519: 7b 18 50                 u64 [sp + 0x50] = a1
  3522: 49 27 58 01              u64 [a0 + 344] = 0
  3526: 49 27 50 01              u64 [a0 + 336] = 0
  3530: 49 27 48 01              u64 [a0 + 328] = 0
  3534: 49 27 40 01              u64 [a0 + 320] = 0
  3538: 49 27 38 01              u64 [a0 + 312] = 0
  3542: 49 27 30 01              u64 [a0 + 304] = 0
  3546: 49 27 28 01              u64 [a0 + 296] = 0
  3550: 49 27 20 01              u64 [a0 + 288] = 0
  3554: 95 17 30 52 01           a0 = sp + 0x15230
  3559: 33 09 00 01              a2 = 0x100
  3563: 33 08                    a1 = 0
  3565: 50 10 56 a2 0b           ra = 86, jump @400
      :                          @169 [@dyn 43]
  3570: 95 17 80 40 01           a0 = sp + 0x14080
  3575: 82 77 40                 a0 = u64 [a0 + 0x40]
  3578: 95 18 f0 51 01           a1 = sp + 0x151f0
  3583: 82 19 48                 a2 = u64 [sp + 0x48]
  3586: 64 5a                    a3 = s0
  3588: 0a 15                    ecalli 21 // 'peek'
  3590: 95 17 80 40 01           a0 = sp + 0x14080
  3595: 82 77 40                 a0 = u64 [a0 + 0x40]
  3598: 95 18 30 52 01           a1 = sp + 0x15230
  3603: 82 19 58                 a2 = u64 [sp + 0x58]
  3606: 82 15 50                 s0 = u64 [sp + 0x50]
  3609: 64 5a                    a3 = s0
  3611: 0a 15                    ecalli 21 // 'peek'
  3613: 95 18 f0 51 01           a1 = sp + 0x151f0
  3618: 95 1a 30 52 01           a3 = sp + 0x15230
  3623: 82 17 68                 a0 = u64 [sp + 0x68]
  3626: 82 19 40                 a2 = u64 [sp + 0x40]
  3629: 64 5b                    a4 = s0
  3631: 0a 64                    ecalli 100 // 'log'
  3633: 95 18 d0 50 01           a1 = sp + 0x150d0
  3638: 28 06 fe                 jump @152
      :                          @170
  3641: 95 17 d0 40 01           a0 = sp + 0x140d0
  3646: 33 09 00 10              a2 = 0x1000
  3650: 33 05 00 10              s0 = 0x1000
  3654: 33 08                    a1 = 0
  3656: 50 10 58 47 0b           ra = 88, jump @400
      :                          @171 [@dyn 44]
  3661: 95 1a 80 40 01           a3 = sp + 0x14080
  3666: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3669: 7a a7 48                 u32 [a3 + 0x48] = a0
  3672: 82 16 68                 s1 = u64 [sp + 0x68]
  3675: 98 68 0c                 a1 = s1 >> 0xc
  3678: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3681: 33 0a 00 10              a3 = 0x1000
  3685: 95 18 d0 40 01           a1 = sp + 0x140d0
  3690: 64 69                    a2 = s1
  3692: 0a 15                    ecalli 21 // 'peek'
  3694: 83 55 08                 i32 s0 = s0 + 0x8
  3697: 95 17 c8 40 01           a0 = sp + 0x140c8
  3702: 64 58                    a1 = s0
  3704: 0a 13                    ecalli 19 // 'export'
  3706: 33 09 00 10              a2 = 0x1000
  3710: 95 17 d0 40 01           a0 = sp + 0x140d0
  3715: 33 08                    a1 = 0
  3717: 50 10 5a 0a 0b           ra = 90, jump @400
      :                          @172 [@dyn 45]
  3722: 95 1a 80 40 01           a3 = sp + 0x14080
  3727: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3730: 7a a7 48                 u32 [a3 + 0x48] = a0
  3733: 95 69 00 10              a2 = s1 + 0x1000
  3737: 98 98 0c                 a1 = a2 >> 0xc
  3740: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3743: 33 0a 00 10              a3 = 0x1000
  3747: 95 18 d0 40 01           a1 = sp + 0x140d0
  3752: 0a 15                    ecalli 21 // 'peek'
  3754: 95 17 c8 40 01           a0 = sp + 0x140c8
  3759: 64 58                    a1 = s0
  3761: 0a 13                    ecalli 19 // 'export'
  3763: 33 09 00 10              a2 = 0x1000
  3767: 95 17 d0 40 01           a0 = sp + 0x140d0
  3772: 33 08                    a1 = 0
  3774: 50 10 5c d1 0a           ra = 92, jump @400
      :                          @173 [@dyn 46]
  3779: 95 1a 80 40 01           a3 = sp + 0x14080
  3784: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3787: 7a a7 48                 u32 [a3 + 0x48] = a0
  3790: 95 69 00 20              a2 = s1 + 0x2000
  3794: 98 98 0c                 a1 = a2 >> 0xc
  3797: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3800: 33 0a 00 10              a3 = 0x1000
  3804: 95 18 d0 40 01           a1 = sp + 0x140d0
  3809: 0a 15                    ecalli 21 // 'peek'
  3811: 95 17 c8 40 01           a0 = sp + 0x140c8
  3816: 64 58                    a1 = s0
  3818: 0a 13                    ecalli 19 // 'export'
  3820: 33 09 00 10              a2 = 0x1000
  3824: 95 17 d0 40 01           a0 = sp + 0x140d0
  3829: 33 08                    a1 = 0
  3831: 50 10 5e 98 0a           ra = 94, jump @400
      :                          @174 [@dyn 47]
  3836: 95 18 80 40 01           a1 = sp + 0x14080
  3841: 82 87 40                 a0 = u64 [a1 + 0x40]
  3844: 7a 87 48                 u32 [a1 + 0x48] = a0
  3847: 95 1a 80 40 01           a3 = sp + 0x14080
  3852: 95 69 00 30              a2 = s1 + 0x3000
  3856: 98 98 0c                 a1 = a2 >> 0xc
  3859: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3862: 33 0a 00 10              a3 = 0x1000
  3866: 95 18 d0 40 01           a1 = sp + 0x140d0
  3871: 0a 15                    ecalli 21 // 'peek'
  3873: 95 17 c8 40 01           a0 = sp + 0x140c8
  3878: 64 58                    a1 = s0
  3880: 64 56                    s1 = s0
  3882: 0a 13                    ecalli 19 // 'export'
  3884: 33 09 00 10              a2 = 0x1000
  3888: 95 17 d0 40 01           a0 = sp + 0x140d0
  3893: 33 08                    a1 = 0
  3895: 50 10 60 58 0a           ra = 96, jump @400
      :                          @175 [@dyn 48]
  3900: 95 1a 80 40 01           a3 = sp + 0x14080
  3905: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3908: 7a a7 48                 u32 [a3 + 0x48] = a0
  3911: 82 15 68                 s0 = u64 [sp + 0x68]
  3914: 95 59 00 40              a2 = s0 + 0x4000
  3918: 98 98 0c                 a1 = a2 >> 0xc
  3921: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3924: 33 0a 00 10              a3 = 0x1000
  3928: 95 18 d0 40 01           a1 = sp + 0x140d0
  3933: 0a 15                    ecalli 21 // 'peek'
  3935: 95 17 c8 40 01           a0 = sp + 0x140c8
  3940: 64 68                    a1 = s1
  3942: 0a 13                    ecalli 19 // 'export'
  3944: 33 09 00 10              a2 = 0x1000
  3948: 95 17 d0 40 01           a0 = sp + 0x140d0
  3953: 33 08                    a1 = 0
  3955: 50 10 62 1c 0a           ra = 98, jump @400
      :                          @176 [@dyn 49]
  3960: 95 18 80 40 01           a1 = sp + 0x14080
  3965: 82 87 40                 a0 = u64 [a1 + 0x40]
  3968: 7a 87 48                 u32 [a1 + 0x48] = a0
  3971: 95 1a 80 40 01           a3 = sp + 0x14080
  3976: 95 59 00 50              a2 = s0 + 0x5000
  3980: 98 98 0c                 a1 = a2 >> 0xc
  3983: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3986: 33 0a 00 10              a3 = 0x1000
  3990: 95 18 d0 40 01           a1 = sp + 0x140d0
  3995: 0a 15                    ecalli 21 // 'peek'
  3997: 95 17 c8 40 01           a0 = sp + 0x140c8
  4002: 7b 16 60                 u64 [sp + 0x60] = s1
  4005: 64 68                    a1 = s1
  4007: 0a 13                    ecalli 19 // 'export'
  4009: 33 09 00 10              a2 = 0x1000
  4013: 95 17 d0 40 01           a0 = sp + 0x140d0
  4018: 33 08                    a1 = 0
  4020: 50 10 64 db 09           ra = 100, jump @400
      :                          @177 [@dyn 50]
  4025: 95 1a 80 40 01           a3 = sp + 0x14080
  4030: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4033: 7a a7 48                 u32 [a3 + 0x48] = a0
  4036: 95 59 00 60              a2 = s0 + 0x6000
  4040: 98 98 0c                 a1 = a2 >> 0xc
  4043: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4046: 33 0a 00 10              a3 = 0x1000
  4050: 95 18 d0 40 01           a1 = sp + 0x140d0
  4055: 0a 15                    ecalli 21 // 'peek'
  4057: 95 17 c8 40 01           a0 = sp + 0x140c8
  4062: 64 68                    a1 = s1
  4064: 0a 13                    ecalli 19 // 'export'
  4066: 33 09 00 10              a2 = 0x1000
  4070: 95 17 d0 40 01           a0 = sp + 0x140d0
  4075: 33 08                    a1 = 0
  4077: 50 10 66 a2 09           ra = 102, jump @400
      :                          @178 [@dyn 51]
  4082: 95 18 80 40 01           a1 = sp + 0x14080
  4087: 82 87 40                 a0 = u64 [a1 + 0x40]
  4090: 7a 87 48                 u32 [a1 + 0x48] = a0
  4093: 95 1a 80 40 01           a3 = sp + 0x14080
  4098: 95 59 00 70              a2 = s0 + 0x7000
  4102: 98 98 0c                 a1 = a2 >> 0xc
  4105: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4108: 33 0a 00 10              a3 = 0x1000
  4112: 95 18 d0 40 01           a1 = sp + 0x140d0
  4117: 0a 15                    ecalli 21 // 'peek'
  4119: 95 17 c8 40 01           a0 = sp + 0x140c8
  4124: 82 16 60                 s1 = u64 [sp + 0x60]
  4127: 64 68                    a1 = s1
  4129: 0a 13                    ecalli 19 // 'export'
  4131: 33 09 00 10              a2 = 0x1000
  4135: 95 17 d0 40 01           a0 = sp + 0x140d0
  4140: 33 08                    a1 = 0
  4142: 50 10 68 61 09           ra = 104, jump @400
      :                          @179 [@dyn 52]
  4147: 95 1a 80 40 01           a3 = sp + 0x14080
  4152: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4155: 7a a7 48                 u32 [a3 + 0x48] = a0
  4158: 95 59 00 80 00           a2 = s0 + 0x8000
  4163: 98 98 0c                 a1 = a2 >> 0xc
  4166: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4169: 95 15 80 40 01           s0 = sp + 0x14080
  4174: 33 0a 00 10              a3 = 0x1000
  4178: 95 18 d0 40 01           a1 = sp + 0x140d0
  4183: 0a 15                    ecalli 21 // 'peek'
  4185: 95 17 c8 40 01           a0 = sp + 0x140c8
  4190: 64 68                    a1 = s1
  4192: 0a 13                    ecalli 19 // 'export'
  4194: 82 57 40                 a0 = u64 [s0 + 0x40]
  4197: 0a 1a                    ecalli 26 // 'expunge'
  4199: 33 07 06                 a0 = 0x6
  4202: 95 18 d0 50 01           a1 = sp + 0x150d0
  4207: 7b 87 10 01              u64 [a1 + 0x110] = a0
  4211: 33 07 38 03 01           a0 = 0x10338
  4216: 7b 87 60 01              u64 [a1 + 0x160] = a0
  4220: 95 17 d8 51 01           a0 = sp + 0x151d8
  4225: 7b 87 70 01              u64 [a1 + 0x170] = a0
  4229: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  4234: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  4239: 7b 88 08 01              u64 [a1 + 0x108] = a1
  4243: 49 28 80 01              u64 [a1 + 384] = 0
  4247: 95 16 d0 50 01           s1 = sp + 0x150d0
  4252: 95 17 f0 51 01           a0 = sp + 0x151f0
  4257: 95 18 30 52 01           a1 = sp + 0x15230
  4262: 50 10 6a bd 05           ra = 106, jump @332
      :                          @180 [@dyn 53]
  4267: 82 65 28 01              s0 = u64 [s1 + 0x128]
  4271: 82 6b 30 01              a4 = u64 [s1 + 0x130]
  4275: 82 66 20 01              s1 = u64 [s1 + 0x120]
  4279: 33 07 02                 a0 = 0x2
  4282: 33 08                    a1 = 0
  4284: 33 09                    a2 = 0
  4286: 64 5a                    a3 = s0
  4288: 33 00 6c                 ra = 0x6c
  4291: 0a 64                    ecalli 100 // 'log'
  4293: 01                       fallthrough
      :                          @181 [@dyn 54]
  4294: 82 17 70                 a0 = u64 [sp + 0x70]
  4297: c8 67 07                 a0 = a0 + s1
  4300: 53 37 00 00 f0 53 f3     jump @67 if a0 <u 4293918720
      :                          @182
  4307: 33 07 40 00 03           a0 = 0x30040
  4312: 95 77 00 00 10           a0 = a0 + 0x100000
  4317: 01                       fallthrough
      :                          @183
  4318: 82 78                    a1 = u64 [a0]
  4320: c9 87 09                 a2 = a0 - a1
  4323: ab 59 3c f3              jump @67 if a2 != s0
      :                          @184
  4327: c9 68 09                 a2 = a1 - s1
  4330: 01                       fallthrough
      :                          @185
  4331: 82 7a                    a3 = u64 [a0]
  4333: ab 8a f1                 jump @183 if a3 != a1
      :                          @186
  4336: 7b 79                    u64 [a0] = a2
  4338: 33 0b                    a4 = 0
  4340: 01                       fallthrough
      :                          @187
  4341: ab 8a e9                 jump @183 if a3 != a1
      :                          @188
  4344: 28 27 f3                 jump @67
      :                          @189
  4347: 00                       trap
      :                          @190 [export #1: 'accumulate']
  4348: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4352: 7b 10 90 00              u64 [sp + 0x90] = ra
  4356: 7b 15 88 00              u64 [sp + 0x88] = s0
  4360: 7b 16 80 00              u64 [sp + 0x80] = s1
  4364: 51 08 f3 02              jump @271 if a1 == 0
      :                          @191
  4368: 64 85                    s0 = a1
  4370: 7d 78                    a1 = i8 [a0]
  4372: 33 06 01                 s1 = 0x1
  4375: 59 08 37                 jump @198 if a1 >=s 0
      :                          @192
  4378: 84 89 ff 00              a2 = a1 & 0xff
  4382: 33 06 02                 s1 = 0x2
  4385: 53 29 c0 00 2d           jump @198 if a2 <u 192
      :                          @193
  4390: 33 06 03                 s1 = 0x3
  4393: 53 29 e0 00 25           jump @198 if a2 <u 224
      :                          @194
  4398: 33 06 04                 s1 = 0x4
  4401: 53 29 f0 00 1d           jump @198 if a2 <u 240
      :                          @195
  4406: 33 06 05                 s1 = 0x5
  4409: 53 29 f8 00 15           jump @198 if a2 <u 248
      :                          @196
  4414: 33 06 06                 s1 = 0x6
  4417: 53 29 fc 00 0d           jump @198 if a2 <u 252
      :                          @197
  4422: 88 98 fe 00              a1 = a2 <u 0xfe
  4426: 9a 86 08                 s1 = 0x8 - a1
  4429: 01                       fallthrough
      :                          @198
  4430: ac 65 b1 02              jump @271 if s0 <u s1
      :                          @199
  4434: 64 68                    a1 = s1
  4436: 7b 17                    u64 [sp] = a0
  4438: 50 10 6e e7 11           ra = 110, jump @586
      :                          @200 [@dyn 55]
  4443: 82 17                    a0 = u64 [sp]
  4445: aa 65 a2 02              jump @271 if s0 == s1
      :                          @201
  4449: c8 67 07                 a0 = a0 + s1
  4452: 7d 78                    a1 = i8 [a0]
  4454: c9 65 05                 s0 = s0 - s1
  4457: 33 06 01                 s1 = 0x1
  4460: 59 08 37                 jump @208 if a1 >=s 0
      :                          @202
  4463: 84 89 ff 00              a2 = a1 & 0xff
  4467: 33 06 02                 s1 = 0x2
  4470: 53 29 c0 00 2d           jump @208 if a2 <u 192
      :                          @203
  4475: 33 06 03                 s1 = 0x3
  4478: 53 29 e0 00 25           jump @208 if a2 <u 224
      :                          @204
  4483: 33 06 04                 s1 = 0x4
  4486: 53 29 f0 00 1d           jump @208 if a2 <u 240
      :                          @205
  4491: 33 06 05                 s1 = 0x5
  4494: 53 29 f8 00 15           jump @208 if a2 <u 248
      :                          @206
  4499: 33 06 06                 s1 = 0x6
  4502: 53 29 fc 00 0d           jump @208 if a2 <u 252
      :                          @207
  4507: 88 98 fe 00              a1 = a2 <u 0xfe
  4511: 9a 86 08                 s1 = 0x8 - a1
  4514: 01                       fallthrough
      :                          @208
  4515: ac 65 5c 02              jump @271 if s0 <u s1
      :                          @209
  4519: 64 68                    a1 = s1
  4521: 7b 17                    u64 [sp] = a0
  4523: 50 10 70 92 11           ra = 112, jump @586
      :                          @210 [@dyn 56]
  4528: 82 17                    a0 = u64 [sp]
  4530: c8 67 07                 a0 = a0 + s1
  4533: c9 65 0a                 a3 = s0 - s1
  4536: 7b 1a                    u64 [sp] = a3
  4538: ab 65 07                 jump @212 if s0 != s1
      :                          @211
  4541: 33 06                    s1 = 0
  4543: 28 42                    jump @220
      :                          @212
  4545: 7d 78                    a1 = i8 [a0]
  4547: 33 06 01                 s1 = 0x1
  4550: 59 08 37                 jump @219 if a1 >=s 0
      :                          @213
  4553: 84 89 ff 00              a2 = a1 & 0xff
  4557: 33 06 02                 s1 = 0x2
  4560: 53 29 c0 00 2d           jump @219 if a2 <u 192
      :                          @214
  4565: 33 06 03                 s1 = 0x3
  4568: 53 29 e0 00 25           jump @219 if a2 <u 224
      :                          @215
  4573: 33 06 04                 s1 = 0x4
  4576: 53 29 f0 00 1d           jump @219 if a2 <u 240
      :                          @216
  4581: 33 06 05                 s1 = 0x5
  4584: 53 29 f8 00 15           jump @219 if a2 <u 248
      :                          @217
  4589: 33 06 06                 s1 = 0x6
  4592: 53 29 fc 00 0d           jump @219 if a2 <u 252
      :                          @218
  4597: 88 98 fe 00              a1 = a2 <u 0xfe
  4601: 9a 86 08                 s1 = 0x8 - a1
  4604: 01                       fallthrough
      :                          @219
  4605: ac 6a 02 02              jump @271 if a3 <u s1
      :                          @220
  4609: 64 68                    a1 = s1
  4611: 64 75                    s0 = a0
  4613: 50 10 72 38 11           ra = 114, jump @586
      :                          @221 [@dyn 57]
  4618: 51 07 f5 01              jump @271 if a0 == 0
      :                          @222
  4622: 82 17                    a0 = u64 [sp]
  4624: e4 67 07                 a0 = maxu(a0, s1)
  4627: c9 67 07                 a0 = a0 - s1
  4630: 53 17 60 e9 01           jump @271 if a0 <u 96
      :                          @223
  4635: c8 56 08                 a1 = s1 + s0
  4638: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  4641: 95 87 60                 a0 = a1 + 0x60
  4644: 7b 17                    u64 [sp] = a0
  4646: 51 06 4c                 jump @234 if s1 == 0
      :                          @224
  4649: 7d 78                    a1 = i8 [a0]
  4651: 33 05 01                 s0 = 0x1
  4654: 59 08 37                 jump @231 if a1 >=s 0
      :                          @225
  4657: 84 89 ff 00              a2 = a1 & 0xff
  4661: 33 05 02                 s0 = 0x2
  4664: 53 29 c0 00 2d           jump @231 if a2 <u 192
      :                          @226
  4669: 33 05 03                 s0 = 0x3
  4672: 53 29 e0 00 25           jump @231 if a2 <u 224
      :                          @227
  4677: 33 05 04                 s0 = 0x4
  4680: 53 29 f0 00 1d           jump @231 if a2 <u 240
      :                          @228
  4685: 33 05 05                 s0 = 0x5
  4688: 53 29 f8 00 15           jump @231 if a2 <u 248
      :                          @229
  4693: 33 05 06                 s0 = 0x6
  4696: 53 29 fc 00 0d           jump @231 if a2 <u 252
      :                          @230
  4701: 88 98 fe 00              a1 = a2 <u 0xfe
  4705: 9a 85 08                 s0 = 0x8 - a1
  4708: 01                       fallthrough
      :                          @231
  4709: ac 56 b3 01              jump @272 if s1 <u s0
      :                          @232
  4713: 64 58                    a1 = s0
  4715: 50 10 74 d2 10           ra = 116, jump @586
      :                          @233 [@dyn 58]
  4720: 28 07                    jump @235
      :                          @234
  4722: 33 05                    s0 = 0
  4724: 33 07                    a0 = 0
  4726: 01                       fallthrough
      :                          @235
  4727: e4 56 08                 a1 = maxu(s1, s0)
  4730: c9 58 08                 a1 = a1 - s0
  4733: e4 78 08                 a1 = maxu(a1, a0)
  4736: c9 78 08                 a1 = a1 - a0
  4739: 33 09 20                 a2 = 0x20
  4742: ac 98 79 01              jump @271 if a1 <u a2
      :                          @236
  4746: 82 19                    a2 = u64 [sp]
  4748: c8 95 05                 s0 = s0 + a2
  4751: c8 57 07                 a0 = a0 + s0
  4754: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  4757: 95 77 20                 a0 = a0 + 0x20
  4760: 7b 17                    u64 [sp] = a0
  4762: 51 05 4c                 jump @247 if s0 == 0
      :                          @237
  4765: 7d 78                    a1 = i8 [a0]
  4767: 33 06 01                 s1 = 0x1
  4770: 59 08 37                 jump @244 if a1 >=s 0
      :                          @238
  4773: 84 89 ff 00              a2 = a1 & 0xff
  4777: 33 06 02                 s1 = 0x2
  4780: 53 29 c0 00 2d           jump @244 if a2 <u 192
      :                          @239
  4785: 33 06 03                 s1 = 0x3
  4788: 53 29 e0 00 25           jump @244 if a2 <u 224
      :                          @240
  4793: 33 06 04                 s1 = 0x4
  4796: 53 29 f0 00 1d           jump @244 if a2 <u 240
      :                          @241
  4801: 33 06 05                 s1 = 0x5
  4804: 53 29 f8 00 15           jump @244 if a2 <u 248
      :                          @242
  4809: 33 06 06                 s1 = 0x6
  4812: 53 29 fc 00 0d           jump @244 if a2 <u 252
      :                          @243
  4817: 88 98 fe 00              a1 = a2 <u 0xfe
  4821: 9a 86 08                 s1 = 0x8 - a1
  4824: 01                       fallthrough
      :                          @244
  4825: ac 65 40 01              jump @273 if s0 <u s1
      :                          @245
  4829: 64 68                    a1 = s1
  4831: 50 10 76 5e 10           ra = 118, jump @586
      :                          @246 [@dyn 59]
  4836: 28 05                    jump @248
      :                          @247
  4838: 33 06                    s1 = 0
  4840: 01                       fallthrough
      :                          @248
  4841: ae 56 16 01              jump @271 if s1 >=u s0
      :                          @249
  4845: 82 17                    a0 = u64 [sp]
  4847: c8 67 07                 a0 = a0 + s1
  4850: 7c 78                    a1 = u8 [a0]
  4852: 52 08 0b 01              jump @271 if a1 != 0
      :                          @250
  4856: e4 65 08                 a1 = maxu(s0, s1)
  4859: c9 68 08                 a1 = a1 - s1
  4862: 95 77 01                 a0 = a0 + 0x1
  4865: 33 09 01                 a2 = 0x1
  4868: e4 98 06                 s1 = maxu(a1, a2)
  4871: 33 09 02                 a2 = 0x2
  4874: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  4877: ae 98 0b                 jump @252 if a1 >=u a2
      :                          @251
  4880: 64 76                    s1 = a0
  4882: 33 05                    s0 = 0
  4884: 33 07                    a0 = 0
  4886: 28 50                    jump @262
      :                          @252
  4888: 7d 78                    a1 = i8 [a0]
  4890: 33 05 01                 s0 = 0x1
  4893: 59 08 37                 jump @259 if a1 >=s 0
      :                          @253
  4896: 84 89 ff 00              a2 = a1 & 0xff
  4900: 33 05 02                 s0 = 0x2
  4903: 53 29 c0 00 2d           jump @259 if a2 <u 192
      :                          @254
  4908: 33 05 03                 s0 = 0x3
  4911: 53 29 e0 00 25           jump @259 if a2 <u 224
      :                          @255
  4916: 33 05 04                 s0 = 0x4
  4919: 53 29 f0 00 1d           jump @259 if a2 <u 240
      :                          @256
  4924: 33 05 05                 s0 = 0x5
  4927: 53 29 f8 00 15           jump @259 if a2 <u 248
      :                          @257
  4932: 33 05 06                 s0 = 0x6
  4935: 53 29 fc 00 0d           jump @259 if a2 <u 252
      :                          @258
  4940: 88 98 fe 00              a1 = a2 <u 0xfe
  4944: 9a 85 08                 s0 = 0x8 - a1
  4947: 01                       fallthrough
      :                          @259
  4948: 7b 1a                    u64 [sp] = a3
  4950: ac 5a c4 00              jump @274 if a3 <u s0
      :                          @260
  4954: 64 76                    s1 = a0
  4956: 64 58                    a1 = s0
  4958: 50 10 78 df 0f           ra = 120, jump @586
      :                          @261 [@dyn 60]
  4963: 82 1a                    a3 = u64 [sp]
  4965: 01                       fallthrough
      :                          @262
  4966: e4 5a 08                 a1 = maxu(a3, s0)
  4969: c9 58 08                 a1 = a1 - s0
  4972: e6 78 07                 a0 = minu(a1, a0)
  4975: 52 17 24 90 00           jump @271 if a0 != 36
      :                          @263
  4980: c8 56 07                 a0 = s1 + s0
  4983: 7b 17 08                 u64 [sp + 0x8] = a0
  4986: 80 78 20                 a1 = u32 [a0 + 0x20]
  4989: 7b 18 10                 u64 [sp + 0x10] = a1
  4992: 0a 0e                    ecalli 14 // 'solicit'
  4994: 95 17 08                 a0 = sp + 0x8
  4997: 7b 17 60                 u64 [sp + 0x60] = a0
  5000: 33 07 06                 a0 = 0x6
  5003: 7b 17 68                 u64 [sp + 0x68] = a0
  5006: 95 18 10                 a1 = sp + 0x10
  5009: 7b 18 70                 u64 [sp + 0x70] = a1
  5012: 7b 17 78                 u64 [sp + 0x78] = a0
  5015: 33 07 b8 03 01           a0 = 0x103b8
  5020: 7b 17 30                 u64 [sp + 0x30] = a0
  5023: 49 11 38 02              u64 [sp + 56] = 0x2
  5027: 49 11 50                 u64 [sp + 80] = 0
  5030: 95 18 60                 a1 = sp + 0x60
  5033: 7b 18 40                 u64 [sp + 0x40] = a1
  5036: 49 11 48 02              u64 [sp + 72] = 0x2
  5040: 95 17 18                 a0 = sp + 0x18
  5043: 95 18 30                 a1 = sp + 0x30
  5046: 50 10 7a ad 02           ra = 122, jump @332
      :                          @264 [@dyn 61]
  5051: 82 15 20                 s0 = u64 [sp + 0x20]
  5054: 82 1b 28                 a4 = u64 [sp + 0x28]
  5057: 82 16 18                 s1 = u64 [sp + 0x18]
  5060: 33 07 02                 a0 = 0x2
  5063: 33 08                    a1 = 0
  5065: 33 09                    a2 = 0
  5067: 64 5a                    a3 = s0
  5069: 33 00 7c                 ra = 0x7c
  5072: 0a 64                    ecalli 100 // 'log'
  5074: 01                       fallthrough
      :                          @265 [@dyn 62]
  5075: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  5080: 53 38 00 00 f0 27        jump @271 if a1 <u 4293918720
      :                          @266
  5086: 33 07 40 00 03           a0 = 0x30040
  5091: 95 77 00 00 10           a0 = a0 + 0x100000
  5096: 01                       fallthrough
      :                          @267
  5097: 82 78                    a1 = u64 [a0]
  5099: c9 87 09                 a2 = a0 - a1
  5102: ab 59 11                 jump @271 if a2 != s0
      :                          @268
  5105: c9 68 09                 a2 = a1 - s1
  5108: 01                       fallthrough
      :                          @269
  5109: 82 7a                    a3 = u64 [a0]
  5111: ab 8a f2                 jump @267 if a3 != a1
      :                          @270
  5114: 7b 79                    u64 [a0] = a2
  5116: 33 0b                    a4 = 0
  5118: 01                       fallthrough
      :                          @271
  5119: 33 07 00 00 01           a0 = 0x10000
  5124: 33 08                    a1 = 0
  5126: 82 10 90 00              ra = u64 [sp + 0x90]
  5130: 82 15 88 00              s0 = u64 [sp + 0x88]
  5134: 82 16 80 00              s1 = u64 [sp + 0x80]
  5138: 95 11 98 00              sp = sp + 0x98
  5142: 32 00                    ret
      :                          @272
  5144: 00                       trap
      :                          @273
  5145: 00                       trap
      :                          @274
  5146: 00                       trap
      :                          @275 [export #2: 'on_transfer']
  5147: 33 07 00 00 01           a0 = 0x10000
  5152: 33 08                    a1 = 0
  5154: 32 00                    ret
      :                          @276
  5156: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5159: 7b 10 40                 u64 [sp + 0x40] = ra
  5162: 7b 15 38                 u64 [sp + 0x38] = s0
  5165: 7b 16 30                 u64 [sp + 0x30] = s1
  5168: c8 89 09                 a2 = a2 + a1
  5171: ac 89 52                 jump @284 if a2 <u a1
      :                          @277
  5174: 64 75                    s0 = a0
  5176: 82 77                    a0 = u64 [a0]
  5178: 97 78 01                 a1 = a0 << 0x1
  5181: 33 0a 08                 a3 = 0x8
  5184: e4 a9 09                 a2 = maxu(a2, a3)
  5187: e4 98 06                 s1 = maxu(a1, a2)
  5190: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5193: 98 88 3f                 a1 = a1 >> 0x3f
  5196: 51 07 12                 jump @279 if a0 == 0
      :                          @278
  5199: 82 59 08                 a2 = u64 [s0 + 0x8]
  5202: 7b 19 18                 u64 [sp + 0x18] = a2
  5205: 49 11 20 01              u64 [sp + 32] = 0x1
  5209: 7b 17 28                 u64 [sp + 0x28] = a0
  5212: 28 06                    jump @280
      :                          @279
  5214: 49 11 20                 u64 [sp + 32] = 0
  5217: 01                       fallthrough
      :                          @280
  5218: 64 17                    a0 = sp
  5220: 95 1a 18                 a3 = sp + 0x18
  5223: 64 69                    a2 = s1
  5225: 50 10 7e 32              ra = 126, jump @288
      :                          @281 [@dyn 63]
  5229: 82 18                    a1 = u64 [sp]
  5231: 82 17 08                 a0 = u64 [sp + 0x8]
  5234: 51 08 14                 jump @285 if a1 == 0
      :                          @282
  5237: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5247: aa 87 0d                 jump @286 if a0 == a1
      :                          @283
  5250: 52 07 18                 jump @287 if a0 != 0
      :                          @284
  5253: 00                       trap
      :                          @285
  5254: 7b 57 08                 u64 [s0 + 0x8] = a0
  5257: 7b 56                    u64 [s0] = s1
  5259: 01                       fallthrough
      :                          @286
  5260: 82 10 40                 ra = u64 [sp + 0x40]
  5263: 82 15 38                 s0 = u64 [sp + 0x38]
  5266: 82 16 30                 s1 = u64 [sp + 0x30]
  5269: 95 11 48                 sp = sp + 0x48
  5272: 32 00                    ret
      :                          @287
  5274: 00                       trap
      :                          @288
  5275: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5278: 7b 10 30                 u64 [sp + 0x30] = ra
  5281: 7b 15 28                 u64 [sp + 0x28] = s0
  5284: 7b 16 20                 u64 [sp + 0x20] = s1
  5287: 64 95                    s0 = a2
  5289: 64 72                    t0 = a0
  5291: 51 08 7a                 jump @298 if a1 == 0
      :                          @289
  5294: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5297: 51 07 7d                 jump @299 if a0 == 0
      :                          @290
  5300: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5303: 51 09 ab 00              jump @306 if a2 == 0
      :                          @291
  5307: 82 a8                    a1 = u64 [a3]
  5309: 33 06 40 00 03           s1 = 0x30040
  5314: 33 03 00 00 10           t1 = 0x100000
  5319: c8 36 06                 s1 = s1 + t1
  5322: 01                       fallthrough
      :                          @292
  5323: 82 6a                    a3 = u64 [s1]
  5325: c8 5a 07                 a0 = a3 + s0
  5328: ac a7 d0 00              jump @312 if a0 <u a3
      :                          @293
  5332: 95 7b 01                 a4 = a0 + 0x1
  5335: 88 bc 01                 a5 = a4 <u 0x1
  5338: d8 b3 0b                 a4 = t1 <u a4
  5341: d4 cb 0b                 a4 = a4 | a5
  5344: 52 0b c0 00              jump @312 if a4 != 0
      :                          @294
  5348: 82 6b                    a4 = u64 [s1]
  5350: ab ab e5                 jump @292 if a4 != a3
      :                          @295
  5353: 7b 67                    u64 [s1] = a0
  5355: 33 0c                    a5 = 0
  5357: 7b 12 18                 u64 [sp + 0x18] = t0
  5360: 33 0a 40 00 03           a3 = 0x30040
  5365: 33 0b 00 00 10           a4 = 0x100000
  5370: 7b 1a                    u64 [sp] = a3
  5372: c8 ba 0a                 a3 = a3 + a4
  5375: c9 7a 07                 a0 = a3 - a0
  5378: 7b 17 10                 u64 [sp + 0x10] = a0
  5381: 7b 18 08                 u64 [sp + 0x8] = a1
  5384: 64 96                    s1 = a2
  5386: 50 20 80 00 d3 03        ra = 128, jump @382
      :                          @296 [@dyn 64]
  5392: 54 36 00 00 10 98 00     jump @313 if s1 <=u 1048576
      :                          @297
  5399: 82 12 18                 t0 = u64 [sp + 0x18]
  5402: 82 18 10                 a1 = u64 [sp + 0x10]
  5405: 33 07                    a0 = 0
  5407: 7b 28 08                 u64 [t0 + 0x8] = a1
  5410: 28 b5 00                 jump @319
      :                          @298
  5413: 49 12 08                 u64 [t0 + 8] = 0
  5416: 33 07 01                 a0 = 0x1
  5419: 28 ac 00                 jump @319
      :                          @299
  5422: 33 09 40 00 03           a2 = 0x30040
  5427: 33 07 00 00 10           a0 = 0x100000
  5432: c8 79 09                 a2 = a2 + a0
  5435: 01                       fallthrough
      :                          @300
  5436: 82 9a                    a3 = u64 [a2]
  5438: c8 5a 08                 a1 = a3 + s0
  5441: ac a8 5f                 jump @312 if a1 <u a3
      :                          @301
  5444: 95 8b 01                 a4 = a1 + 0x1
  5447: 88 bc 01                 a5 = a4 <u 0x1
  5450: d8 b7 0b                 a4 = a0 <u a4
  5453: d4 cb 0b                 a4 = a4 | a5
  5456: 52 0b 50                 jump @312 if a4 != 0
      :                          @302
  5459: 82 9b                    a4 = u64 [a2]
  5461: ab ab e7                 jump @300 if a4 != a3
      :                          @303
  5464: 7b 98                    u64 [a2] = a1
  5466: 33 0c                    a5 = 0
  5468: 01                       fallthrough
      :                          @304
  5469: ab ab df                 jump @300 if a4 != a3
      :                          @305
  5472: 28 31                    jump @311
      :                          @306
  5474: 33 09 40 00 03           a2 = 0x30040
  5479: 33 07 00 00 10           a0 = 0x100000
  5484: c8 79 09                 a2 = a2 + a0
  5487: 01                       fallthrough
      :                          @307
  5488: 82 9a                    a3 = u64 [a2]
  5490: c8 5a 08                 a1 = a3 + s0
  5493: ac a8 2b                 jump @312 if a1 <u a3
      :                          @308
  5496: 95 8b 01                 a4 = a1 + 0x1
  5499: 88 bc 01                 a5 = a4 <u 0x1
  5502: d8 b7 0b                 a4 = a0 <u a4
  5505: d4 cb 0b                 a4 = a4 | a5
  5508: 52 0b 1c                 jump @312 if a4 != 0
      :                          @309
  5511: 82 9b                    a4 = u64 [a2]
  5513: ab ab e7                 jump @307 if a4 != a3
      :                          @310
  5516: 7b 98                    u64 [a2] = a1
  5518: 33 0c                    a5 = 0
  5520: 01                       fallthrough
      :                          @311
  5521: 33 07 40 00 13           a0 = 0x130040
  5526: c9 87 08                 a1 = a0 - a1
  5529: 33 07                    a0 = 0
  5531: 7b 28 08                 u64 [t0 + 0x8] = a1
  5534: 28 39                    jump @319
      :                          @312
  5536: 33 07 01                 a0 = 0x1
  5539: 7b 27 08                 u64 [t0 + 0x8] = a0
  5542: 28 31                    jump @319
      :                          @313
  5544: 64 6c                    a5 = s1
  5546: 82 17                    a0 = u64 [sp]
  5548: 95 77 00 00 10           a0 = a0 + 0x100000
  5553: 82 12 18                 t0 = u64 [sp + 0x18]
  5556: 82 16 08                 s1 = u64 [sp + 0x8]
  5559: 01                       fallthrough
      :                          @314
  5560: 82 78                    a1 = u64 [a0]
  5562: c9 87 09                 a2 = a0 - a1
  5565: ab 69 11                 jump @318 if a2 != s1
      :                          @315
  5568: c9 c8 09                 a2 = a1 - a5
  5571: 01                       fallthrough
      :                          @316
  5572: 82 7a                    a3 = u64 [a0]
  5574: ab 8a f2                 jump @314 if a3 != a1
      :                          @317
  5577: 7b 79                    u64 [a0] = a2
  5579: 33 0b                    a4 = 0
  5581: 01                       fallthrough
      :                          @318
  5582: 82 18 10                 a1 = u64 [sp + 0x10]
  5585: 33 07                    a0 = 0
  5587: 7b 28 08                 u64 [t0 + 0x8] = a1
  5590: 01                       fallthrough
      :                          @319
  5591: 7b 25 10                 u64 [t0 + 0x10] = s0
  5594: 7b 27                    u64 [t0] = a0
  5596: 82 10 30                 ra = u64 [sp + 0x30]
  5599: 82 15 28                 s0 = u64 [sp + 0x28]
  5602: 82 16 20                 s1 = u64 [sp + 0x20]
  5605: 95 11 38                 sp = sp + 0x38
  5608: 32 00                    ret
      :                          @320
  5610: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5613: 7b 10 40                 u64 [sp + 0x40] = ra
  5616: 7b 15 38                 u64 [sp + 0x38] = s0
  5619: 7b 16 30                 u64 [sp + 0x30] = s1
  5622: 95 88 01                 a1 = a1 + 0x1
  5625: 51 08 54                 jump @328 if a1 == 0
      :                          @321
  5628: 64 75                    s0 = a0
  5630: 82 77                    a0 = u64 [a0]
  5632: 97 79 01                 a2 = a0 << 0x1
  5635: 33 0a 08                 a3 = 0x8
  5638: e4 a8 08                 a1 = maxu(a1, a3)
  5641: e4 89 06                 s1 = maxu(a2, a1)
  5644: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5647: 98 88 3f                 a1 = a1 >> 0x3f
  5650: 51 07 12                 jump @323 if a0 == 0
      :                          @322
  5653: 82 59 08                 a2 = u64 [s0 + 0x8]
  5656: 7b 19 18                 u64 [sp + 0x18] = a2
  5659: 49 11 20 01              u64 [sp + 32] = 0x1
  5663: 7b 17 28                 u64 [sp + 0x28] = a0
  5666: 28 06                    jump @324
      :                          @323
  5668: 49 11 20                 u64 [sp + 32] = 0
  5671: 01                       fallthrough
      :                          @324
  5672: 64 17                    a0 = sp
  5674: 95 1a 18                 a3 = sp + 0x18
  5677: 64 69                    a2 = s1
  5679: 50 20 82 00 6c fe        ra = 130, jump @288
      :                          @325 [@dyn 65]
  5685: 82 18                    a1 = u64 [sp]
  5687: 82 17 08                 a0 = u64 [sp + 0x8]
  5690: 51 08 14                 jump @329 if a1 == 0
      :                          @326
  5693: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5703: aa 87 0d                 jump @330 if a0 == a1
      :                          @327
  5706: 52 07 18                 jump @331 if a0 != 0
      :                          @328
  5709: 00                       trap
      :                          @329
  5710: 7b 57 08                 u64 [s0 + 0x8] = a0
  5713: 7b 56                    u64 [s0] = s1
  5715: 01                       fallthrough
      :                          @330
  5716: 82 10 40                 ra = u64 [sp + 0x40]
  5719: 82 15 38                 s0 = u64 [sp + 0x38]
  5722: 82 16 30                 s1 = u64 [sp + 0x30]
  5725: 95 11 48                 sp = sp + 0x48
  5728: 32 00                    ret
      :                          @331
  5730: 00                       trap
      :                          @332
  5731: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5734: 7b 10 30                 u64 [sp + 0x30] = ra
  5737: 7b 15 28                 u64 [sp + 0x28] = s0
  5740: 7b 16 20                 u64 [sp + 0x20] = s1
  5743: 64 89                    a2 = a1
  5745: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5748: 64 75                    s0 = a0
  5750: 51 0a 35                 jump @337 if a3 == 0
      :                          @333
  5753: 82 98                    a1 = u64 [a2]
  5755: 33 07                    a0 = 0
  5757: 95 8b 08                 a4 = a1 + 0x8
  5760: 01                       fallthrough
      :                          @334
  5761: 82 bc                    a5 = u64 [a4]
  5763: c8 c7 07                 a0 = a0 + a5
  5766: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5769: 95 bb 10                 a4 = a4 + 0x10
  5772: 52 0a f5                 jump @334 if a3 != 0
      :                          @335
  5775: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5778: 51 0a 24                 jump @339 if a3 == 0
      :                          @336
  5781: 82 88 08                 a1 = u64 [a1 + 0x8]
  5784: 8e 88                    a1 = a1 >u 0
  5786: 88 7a 10                 a3 = a0 <u 0x10
  5789: 85 aa 01                 a3 = a3 ^ 0x1
  5792: d4 a8 08                 a1 = a1 | a3
  5795: 89 7a                    a3 = a0 <s 0
  5797: e0 a8 08                 a1 = a1 & ~a3
  5800: 52 08 0a                 jump @338 if a1 != 0
      :                          @337
  5803: 33 07                    a0 = 0
  5805: 33 08 01                 a1 = 0x1
  5808: 28 4a                    jump @347
      :                          @338
  5810: 97 77 01                 a0 = a0 << 0x1
  5813: 01                       fallthrough
      :                          @339
  5814: 51 07 40                 jump @346 if a0 == 0
      :                          @340
  5817: 57 07 79                 jump @352 if a0 <s 0
      :                          @341
  5820: 64 52                    t0 = s0
  5822: 33 0b 40 00 03           a4 = 0x30040
  5827: 33 08 00 00 10           a1 = 0x100000
  5832: c8 8b 0b                 a4 = a4 + a1
  5835: 01                       fallthrough
      :                          @342
  5836: 82 bc                    a5 = u64 [a4]
  5838: c8 7c 0a                 a3 = a5 + a0
  5841: ac ca 5f                 jump @350 if a3 <u a5
      :                          @343
  5844: 95 a5 01                 s0 = a3 + 0x1
  5847: 88 56 01                 s1 = s0 <u 0x1
  5850: d8 58 05                 s0 = a1 <u s0
  5853: d4 65 05                 s0 = s0 | s1
  5856: 52 05 50                 jump @350 if s0 != 0
      :                          @344
  5859: 82 b6                    s1 = u64 [a4]
  5861: ab c6 e7                 jump @342 if s1 != a5
      :                          @345
  5864: 7b ba                    u64 [a4] = a3
  5866: 33 08 40 00 13           a1 = 0x130040
  5871: c9 a8 08                 a1 = a1 - a3
  5874: 64 25                    s0 = t0
  5876: 28 06                    jump @347
      :                          @346
  5878: 33 08 01                 a1 = 0x1
  5881: 01                       fallthrough
      :                          @347
  5882: 7b 17                    u64 [sp] = a0
  5884: 7b 18 08                 u64 [sp + 0x8] = a1
  5887: 49 11 10                 u64 [sp + 16] = 0
  5890: 33 08 d8 03 01           a1 = 0x103d8
  5895: 64 17                    a0 = sp
  5897: 50 20 84 00 8b 06        ra = 132, jump @477
      :                          @348 [@dyn 66]
  5903: 52 07 22                 jump @351 if a0 != 0
      :                          @349
  5906: 82 17 10                 a0 = u64 [sp + 0x10]
  5909: 82 18 08                 a1 = u64 [sp + 0x8]
  5912: 82 19                    a2 = u64 [sp]
  5914: 7b 57 10                 u64 [s0 + 0x10] = a0
  5917: 7b 58 08                 u64 [s0 + 0x8] = a1
  5920: 7b 59                    u64 [s0] = a2
  5922: 82 10 30                 ra = u64 [sp + 0x30]
  5925: 82 15 28                 s0 = u64 [sp + 0x28]
  5928: 82 16 20                 s1 = u64 [sp + 0x20]
  5931: 95 11 38                 sp = sp + 0x38
  5934: 32 00                    ret
      :                          @350
  5936: 00                       trap
      :                          @351
  5937: 00                       trap
      :                          @352
  5938: 00                       trap
      :                          @353 [@dyn 67]
  5939: 82 72                    t0 = u64 [a0]
  5941: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  5946: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  5951: ac 9a 28                 jump @359 if a3 <u a2
      :                          @354
  5954: 82 77 08                 a0 = u64 [a0 + 0x8]
  5957: 33 09 40 00 03           a2 = 0x30040
  5962: 95 99 00 00 10           a2 = a2 + 0x100000
  5967: 01                       fallthrough
      :                          @355
  5968: 82 9a                    a3 = u64 [a2]
  5970: c9 a9 0b                 a4 = a2 - a3
  5973: ab 7b 12                 jump @359 if a4 != a0
      :                          @356
  5976: c9 2a 0b                 a4 = a3 - t0
  5979: 01                       fallthrough
      :                          @357
  5980: 82 9c                    a5 = u64 [a2]
  5982: ab ac f2                 jump @355 if a5 != a3
      :                          @358
  5985: 7b 9b                    u64 [a2] = a4
  5987: 33 08                    a1 = 0
  5989: 32 00                    ret
      :                          @359
  5991: 32 00                    ret
      :                          @360 [@dyn 68]
  5993: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5996: 7b 10 18                 u64 [sp + 0x18] = ra
  5999: 7b 15 10                 u64 [sp + 0x10] = s0
  6002: 7b 16 08                 u64 [sp + 0x8] = s1
  6005: 64 75                    s0 = a0
  6007: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6010: 82 77                    a0 = u64 [a0]
  6012: c9 a7 07                 a0 = a0 - a3
  6015: 64 96                    s1 = a2
  6017: ac 97 2b                 jump @363 if a0 <u a2
      :                          @361
  6020: 7b 1a                    u64 [sp] = a3
  6022: 82 57 08                 a0 = u64 [s0 + 0x8]
  6025: c8 a7 07                 a0 = a0 + a3
  6028: 64 69                    a2 = s1
  6030: 50 20 8a 00 4f 01        ra = 138, jump @382
      :                          @362 [@dyn 69]
  6036: 82 17                    a0 = u64 [sp]
  6038: c8 76 06                 s1 = s1 + a0
  6041: 7b 56 10                 u64 [s0 + 0x10] = s1
  6044: 33 07                    a0 = 0
  6046: 82 10 18                 ra = u64 [sp + 0x18]
  6049: 82 15 10                 s0 = u64 [sp + 0x10]
  6052: 82 16 08                 s1 = u64 [sp + 0x8]
  6055: 95 11 20                 sp = sp + 0x20
  6058: 32 00                    ret
      :                          @363
  6060: 64 57                    a0 = s0
  6062: 7b 18                    u64 [sp] = a1
  6064: 64 a8                    a1 = a3
  6066: 64 69                    a2 = s1
  6068: 50 20 8c 00 70 fc        ra = 140, jump @276
      :                          @364 [@dyn 70]
  6074: 82 18                    a1 = u64 [sp]
  6076: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6079: 28 c5                    jump @361
      :                          @365 [@dyn 71]
  6081: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6084: 7b 10 20                 u64 [sp + 0x20] = ra
  6087: 7b 15 18                 u64 [sp + 0x18] = s0
  6090: 7b 16 10                 u64 [sp + 0x10] = s1
  6093: 64 86                    s1 = a1
  6095: 83 88                    i32 a1 = a1 + 0
  6097: 33 09 80 00              a2 = 0x80
  6101: 64 7a                    a3 = a0
  6103: ae 98 2c                 jump @370 if a1 >=u a2
      :                          @366
  6106: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6109: 82 a7                    a0 = u64 [a3]
  6111: ab 78 13                 jump @369 if a1 != a0
      :                          @367
  6114: 64 a7                    a0 = a3
  6116: 64 a5                    s0 = a3
  6118: 50 20 90 00 04 fe        ra = 144, jump @320
      :                          @368 [@dyn 72]
  6124: 64 5a                    a3 = s0
  6126: 82 58 10                 a1 = u64 [s0 + 0x10]
  6129: 01                       fallthrough
      :                          @369
  6130: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6133: c8 87 07                 a0 = a0 + a1
  6136: 78 76                    u8 [a0] = s1
  6138: 95 88 01                 a1 = a1 + 0x1
  6141: 7b a8 10                 u64 [a3 + 0x10] = a1
  6144: 28 ac 00                 jump @378
      :                          @370
  6147: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6150: 48 11 0c                 u32 [sp + 12] = 0
  6153: 52 07 1c                 jump @372 if a0 != 0
      :                          @371
  6156: 98 67 06                 a0 = s1 >> 0x6
  6159: 86 77 c0 00              a0 = a0 | 0xc0
  6163: 78 17 0c                 u8 [sp + 0xc] = a0
  6166: 84 67 3f                 a0 = s1 & 0x3f
  6169: 86 77 80 00              a0 = a0 | 0x80
  6173: 78 17 0d                 u8 [sp + 0xd] = a0
  6176: 33 06 02                 s1 = 0x2
  6179: 28 63                    jump @375
      :                          @372
  6181: 8b 67 10                 i32 a0 = s1 >> 0x10
  6184: 52 07 29                 jump @374 if a0 != 0
      :                          @373
  6187: 98 67 0c                 a0 = s1 >> 0xc
  6190: 86 77 e0 00              a0 = a0 | 0xe0
  6194: 78 17 0c                 u8 [sp + 0xc] = a0
  6197: 97 67 34                 a0 = s1 << 0x34
  6200: 98 77 3a                 a0 = a0 >> 0x3a
  6203: 95 77 80 00              a0 = a0 + 0x80
  6207: 78 17 0d                 u8 [sp + 0xd] = a0
  6210: 84 67 3f                 a0 = s1 & 0x3f
  6213: 86 77 80 00              a0 = a0 | 0x80
  6217: 78 17 0e                 u8 [sp + 0xe] = a0
  6220: 33 06 03                 s1 = 0x3
  6223: 28 37                    jump @375
      :                          @374
  6225: 97 67 2b                 a0 = s1 << 0x2b
  6228: 98 77 3d                 a0 = a0 >> 0x3d
  6231: 95 77 f0 00              a0 = a0 + 0xf0
  6235: 78 17 0c                 u8 [sp + 0xc] = a0
  6238: 97 67 2e                 a0 = s1 << 0x2e
  6241: 98 77 3a                 a0 = a0 >> 0x3a
  6244: 95 77 80 00              a0 = a0 + 0x80
  6248: 78 17 0d                 u8 [sp + 0xd] = a0
  6251: 97 67 34                 a0 = s1 << 0x34
  6254: 98 77 3a                 a0 = a0 >> 0x3a
  6257: 95 77 80 00              a0 = a0 + 0x80
  6261: 78 17 0e                 u8 [sp + 0xe] = a0
  6264: 84 67 3f                 a0 = s1 & 0x3f
  6267: 86 77 80 00              a0 = a0 | 0x80
  6271: 78 17 0f                 u8 [sp + 0xf] = a0
  6274: 33 06 04                 s1 = 0x4
  6277: 01                       fallthrough
      :                          @375
  6278: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6281: 82 a7                    a0 = u64 [a3]
  6283: c9 57 07                 a0 = a0 - s0
  6286: ac 67 2e                 jump @379 if a0 <u s1
      :                          @376
  6289: 7b 1a                    u64 [sp] = a3
  6291: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6294: c8 57 07                 a0 = a0 + s0
  6297: 95 18 0c                 a1 = sp + 0xc
  6300: 64 69                    a2 = s1
  6302: 50 20 92 00 3f           ra = 146, jump @382
      :                          @377 [@dyn 73]
  6307: c8 56 06                 s1 = s1 + s0
  6310: 82 17                    a0 = u64 [sp]
  6312: 7b 76 10                 u64 [a0 + 0x10] = s1
  6315: 01                       fallthrough
      :                          @378
  6316: 33 07                    a0 = 0
  6318: 82 10 20                 ra = u64 [sp + 0x20]
  6321: 82 15 18                 s0 = u64 [sp + 0x18]
  6324: 82 16 10                 s1 = u64 [sp + 0x10]
  6327: 95 11 28                 sp = sp + 0x28
  6330: 32 00                    ret
      :                          @379
  6332: 64 a7                    a0 = a3
  6334: 64 58                    a1 = s0
  6336: 64 69                    a2 = s1
  6338: 64 a5                    s0 = a3
  6340: 50 20 94 00 60 fb        ra = 148, jump @276
      :                          @380 [@dyn 74]
  6346: 64 5a                    a3 = s0
  6348: 82 55 10                 s0 = u64 [s0 + 0x10]
  6351: 28 c2                    jump @376
      :                          @381 [@dyn 75]
  6353: 64 8a                    a3 = a1
  6355: 33 08 d8 03 01           a1 = 0x103d8
  6360: 64 a9                    a2 = a3
  6362: 28 ba 04                 jump @477
      :                          @382
  6365: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6368: 7b 10 18                 u64 [sp + 0x18] = ra
  6371: 7b 15 10                 u64 [sp + 0x10] = s0
  6374: 7b 16 08                 u64 [sp + 0x8] = s1
  6377: 53 19 10 64              jump @391 if a2 <u 16
      :                          @383
  6381: 8d 7a                    i32 a3 = -a0
  6383: 84 a2 07                 t0 = a3 & 0x7
  6386: c8 27 0b                 a4 = a0 + t0
  6389: 51 02 15                 jump @386 if t0 == 0
      :                          @384
  6392: 64 8c                    a5 = a1
  6394: 64 75                    s0 = a0
  6396: 01                       fallthrough
      :                          @385
  6397: 7c ca                    a3 = u8 [a5]
  6399: 78 5a                    u8 [s0] = a3
  6401: 95 55 01                 s0 = s0 + 0x1
  6404: 95 cc 01                 a5 = a5 + 0x1
  6407: ac b5 f6                 jump @385 if s0 <u a4
      :                          @386
  6410: c8 28 03                 t1 = a1 + t0
  6413: c9 29 02                 t0 = a2 - t0
  6416: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6419: 84 38 07                 a1 = t1 & 0x7
  6422: c8 4b 0a                 a3 = a4 + t2
  6425: 51 08 3b                 jump @393 if a1 == 0
      :                          @387
  6428: 58 04 4b                 jump @396 if t2 <=s 0
      :                          @388
  6431: 97 38 03                 a1 = t1 << 0x3
  6434: 84 80 38                 ra = a1 & 0x38
  6437: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6440: 82 c5                    s0 = u64 [a5]
  6442: 8d 88                    i32 a1 = -a1
  6444: 84 88 38                 a1 = a1 & 0x38
  6447: 95 cc 08                 a5 = a5 + 0x8
  6450: 01                       fallthrough
      :                          @389
  6451: 82 c6                    s1 = u64 [a5]
  6453: d0 05 05                 s0 = s0 >> ra
  6456: cf 86 09                 a2 = s1 << a1
  6459: d4 59 09                 a2 = a2 | s0
  6462: 7b b9                    u64 [a4] = a2
  6464: 95 bb 08                 a4 = a4 + 0x8
  6467: 95 cc 08                 a5 = a5 + 0x8
  6470: 64 65                    s0 = s1
  6472: ac ab eb                 jump @389 if a4 <u a3
      :                          @390
  6475: 28 1c                    jump @396
      :                          @391
  6477: 64 7a                    a3 = a0
  6479: 52 09 21                 jump @397 if a2 != 0
      :                          @392
  6482: 28 2f                    jump @399
      :                          @393
  6484: 58 04 13                 jump @396 if t2 <=s 0
      :                          @394
  6487: 64 38                    a1 = t1
  6489: 01                       fallthrough
      :                          @395
  6490: 82 89                    a2 = u64 [a1]
  6492: 7b b9                    u64 [a4] = a2
  6494: 95 bb 08                 a4 = a4 + 0x8
  6497: 95 88 08                 a1 = a1 + 0x8
  6500: ac ab f6                 jump @395 if a4 <u a3
      :                          @396
  6503: c8 43 08                 a1 = t1 + t2
  6506: 84 29 07                 a2 = t0 & 0x7
  6509: 51 09 14                 jump @399 if a2 == 0
      :                          @397
  6512: c8 a9 09                 a2 = a2 + a3
  6515: 01                       fallthrough
      :                          @398
  6516: 7c 8b                    a4 = u8 [a1]
  6518: 78 ab                    u8 [a3] = a4
  6520: 95 aa 01                 a3 = a3 + 0x1
  6523: 95 88 01                 a1 = a1 + 0x1
  6526: ac 9a f6                 jump @398 if a3 <u a2
      :                          @399
  6529: 82 10 18                 ra = u64 [sp + 0x18]
  6532: 82 15 10                 s0 = u64 [sp + 0x10]
  6535: 82 16 08                 s1 = u64 [sp + 0x8]
  6538: 95 11 20                 sp = sp + 0x20
  6541: 32 00                    ret
      :                          @400
  6543: 53 19 10 48              jump @409 if a2 <u 16
      :                          @401
  6547: 8d 7a                    i32 a3 = -a0
  6549: 84 aa 07                 a3 = a3 & 0x7
  6552: c8 a7 0b                 a4 = a0 + a3
  6555: 51 0a 0e                 jump @404 if a3 == 0
      :                          @402
  6558: 64 7c                    a5 = a0
  6560: 01                       fallthrough
      :                          @403
  6561: 78 c8                    u8 [a5] = a1
  6563: 95 cc 01                 a5 = a5 + 0x1
  6566: ac bc fb                 jump @403 if a5 <u a4
      :                          @404
  6569: c9 a9 03                 t1 = a2 - a3
  6572: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6575: c8 cb 0a                 a3 = a4 + a5
  6578: 58 0c 1d                 jump @407 if a5 <=s 0
      :                          @405
  6581: 84 82 ff 00              t0 = a1 & 0xff
  6585: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6595: ca 92 0c                 a5 = t0 * a2
  6598: 01                       fallthrough
      :                          @406
  6599: 7b bc                    u64 [a4] = a5
  6601: 95 bb 08                 a4 = a4 + 0x8
  6604: ac ab fb                 jump @406 if a4 <u a3
      :                          @407
  6607: 84 39 07                 a2 = t1 & 0x7
  6610: 52 09 0a                 jump @410 if a2 != 0
      :                          @408
  6613: 28 13                    jump @412
      :                          @409
  6615: 64 7a                    a3 = a0
  6617: 51 09 0f                 jump @412 if a2 == 0
      :                          @410
  6620: c8 a9 09                 a2 = a2 + a3
  6623: 01                       fallthrough
      :                          @411
  6624: 78 a8                    u8 [a3] = a1
  6626: 95 aa 01                 a3 = a3 + 0x1
  6629: ac 9a fb                 jump @411 if a3 <u a2
      :                          @412
  6632: 32 00                    ret
      :                          @413 [@dyn 76]
  6634: 82 77                    a0 = u64 [a0]
  6636: 01                       fallthrough
      :                          @414
  6637: 28                       jump @414
      :                          @415
  6638: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6641: 7b 10 50                 u64 [sp + 0x50] = ra
  6644: 7b 15 48                 u64 [sp + 0x48] = s0
  6647: 7b 16 40                 u64 [sp + 0x40] = s1
  6650: 82 79                    a2 = u64 [a0]
  6652: 7b 18                    u64 [sp] = a1
  6654: 98 9a 04                 a3 = a2 >> 0x4
  6657: 33 08 27                 a1 = 0x27
  6660: 53 2a 71 02 84 00        jump @418 if a3 <u 625
      :                          @416
  6666: 33 08 27                 a1 = 0x27
  6669: 95 1a 3e                 a3 = sp + 0x3e
  6672: 3a 07 00 00 03           a0 = u64 [0x30000]
  6677: 7b 17 10                 u64 [sp + 0x10] = a0
  6680: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6686: 33 00 7b 14              ra = 0x147b
  6690: 33 0c 58 04 01           a5 = 0x10458
  6695: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6701: 33 05 9c                 s0 = 0xffffffffffffff9c
  6704: 01                       fallthrough
      :                          @417
  6705: 64 93                    t1 = a2
  6707: 82 17 10                 a0 = u64 [sp + 0x10]
  6710: d6 79 09                 a2 = a2 mulhu a0
  6713: 98 99 0b                 a2 = a2 >> 0xb
  6716: 82 17 08                 a0 = u64 [sp + 0x8]
  6719: c0 79 0b                 i32 a4 = a2 * a0
  6722: c8 3b 06                 s1 = a4 + t1
  6725: 97 6b 30                 a4 = s1 << 0x30
  6728: 98 bb 32                 a4 = a4 >> 0x32
  6731: ca 0b 0b                 a4 = a4 * ra
  6734: 98 b7 11                 a0 = a4 >> 0x11
  6737: 98 bb 10                 a4 = a4 >> 0x10
  6740: 84 bb fe 07              a4 = a4 & 0x7fe
  6744: ca 57 07                 a0 = a0 * s0
  6747: c8 67 07                 a0 = a0 + s1
  6750: 97 77 31                 a0 = a0 << 0x31
  6753: 98 77 30                 a0 = a0 >> 0x30
  6756: c8 cb 0b                 a4 = a4 + a5
  6759: 7c b6                    s1 = u8 [a4]
  6761: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6764: c8 c7 07                 a0 = a0 + a5
  6767: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6770: 7c 77                    a0 = u8 [a0]
  6772: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6775: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6778: 78 a2 01                 u8 [a3 + 0x1] = t0
  6781: 78 a7                    u8 [a3] = a0
  6783: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6786: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6789: ac 34 ac                 jump @417 if t2 <u t1
      :                          @418
  6792: 54 19 63 3b              jump @420 if a2 <=u 99
      :                          @419
  6796: 97 97 30                 a0 = a2 << 0x30
  6799: 98 77 32                 a0 = a0 >> 0x32
  6802: 96 77 7b 14              a0 = a0 * 0x147b
  6806: 98 77 11                 a0 = a0 >> 0x11
  6809: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6812: c8 a9 09                 a2 = a2 + a3
  6815: 97 99 31                 a2 = a2 << 0x31
  6818: 98 99 30                 a2 = a2 >> 0x30
  6821: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6824: 33 0a 58 04 01           a3 = 0x10458
  6829: c8 a9 09                 a2 = a2 + a3
  6832: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6835: 7c 99                    a2 = u8 [a2]
  6837: 95 1b 19                 a4 = sp + 0x19
  6840: c8 8b 0b                 a4 = a4 + a1
  6843: 78 ba 01                 u8 [a4 + 0x1] = a3
  6846: 78 b9                    u8 [a4] = a2
  6848: 64 79                    a2 = a0
  6850: 01                       fallthrough
      :                          @420
  6851: 55 19 0a 14              jump @422 if a2 >=u 10
      :                          @421
  6855: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6858: 95 17 19                 a0 = sp + 0x19
  6861: c8 87 07                 a0 = a0 + a1
  6864: 83 99 30                 i32 a2 = a2 + 0x30
  6867: 78 79                    u8 [a0] = a2
  6869: 28 21                    jump @423
      :                          @422
  6871: 97 99 01                 a2 = a2 << 0x1
  6874: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6877: 33 07 58 04 01           a0 = 0x10458
  6882: c8 97 07                 a0 = a0 + a2
  6885: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6888: 7c 77                    a0 = u8 [a0]
  6890: 95 1a 19                 a3 = sp + 0x19
  6893: c8 8a 0a                 a3 = a3 + a1
  6896: 78 a9 01                 u8 [a3 + 0x1] = a2
  6899: 78 a7                    u8 [a3] = a0
  6901: 01                       fallthrough
      :                          @423
  6902: 95 1a 19                 a3 = sp + 0x19
  6905: c8 8a 0a                 a3 = a3 + a1
  6908: 9a 8b 27                 a4 = 0x27 - a1
  6911: 33 08 08 04 01           a1 = 0x10408
  6916: 82 17                    a0 = u64 [sp]
  6918: 33 09                    a2 = 0
  6920: 50 20 9a 00 13           ra = 154, jump @425
      :                          @424 [@dyn 77]
  6925: 82 10 50                 ra = u64 [sp + 0x50]
  6928: 82 15 48                 s0 = u64 [sp + 0x48]
  6931: 82 16 40                 s1 = u64 [sp + 0x40]
  6934: 95 11 58                 sp = sp + 0x58
  6937: 32 00                    ret
      :                          @425
  6939: 95 11 98                 sp = sp + 0xffffffffffffff98
  6942: 7b 10 60                 u64 [sp + 0x60] = ra
  6945: 7b 15 58                 u64 [sp + 0x58] = s0
  6948: 7b 16 50                 u64 [sp + 0x50] = s1
  6951: 80 73 34                 t1 = u32 [a0 + 0x34]
  6954: 7b 1a 20                 u64 [sp + 0x20] = a3
  6957: 64 9c                    a5 = a2
  6959: 84 36 01                 s1 = t1 & 0x1
  6962: 33 02 2b                 t0 = 0x2b
  6965: 33 09 00 00 11           a2 = 0x110000
  6970: 84 3a 04                 a3 = t1 & 0x4
  6973: 7b 1b 28                 u64 [sp + 0x28] = a4
  6976: c8 b6 04                 t2 = s1 + a4
  6979: 7b 1c 30                 u64 [sp + 0x30] = a5
  6982: 52 0a 10                 jump @428 if a3 != 0
      :                          @426
  6985: 49 11 38                 u64 [sp + 56] = 0
  6988: 82 78                    a1 = u64 [a0]
  6990: 94 69 2b                 a2 = 0x2b if s1 != 0
  6993: 52 08 35                 jump @432 if a1 != 0
      :                          @427
  6996: 28 56                    jump @437
      :                          @428
  6998: 7b 18 38                 u64 [sp + 0x38] = a1
  7001: 33 09                    a2 = 0
  7003: 51 0c 1b                 jump @431 if a5 == 0
      :                          @429
  7006: 82 1b 38                 a4 = u64 [sp + 0x38]
  7009: 01                       fallthrough
      :                          @430
  7010: 7d b5                    s0 = i8 [a4]
  7012: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7015: 85 5a 01                 a3 = s0 ^ 0x1
  7018: c8 a9 09                 a2 = a2 + a3
  7021: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7024: 95 bb 01                 a4 = a4 + 0x1
  7027: 52 0c ef                 jump @430 if a5 != 0
      :                          @431
  7030: c8 94 04                 t2 = t2 + a2
  7033: 33 09 00 00 11           a2 = 0x110000
  7038: 82 78                    a1 = u64 [a0]
  7040: db 62 09                 a2 = t0 if s1 != 0
  7043: 51 08 27                 jump @437 if a1 == 0
      :                          @432
  7046: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7049: ae a4 21                 jump @437 if t2 >=u a3
      :                          @433
  7052: 84 38 08                 a1 = t1 & 0x8
  7055: 52 08 51                 jump @440 if a1 != 0
      :                          @434
  7058: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7061: c9 4a 0a                 a3 = a3 - t2
  7064: 7b 19 18                 u64 [sp + 0x18] = a2
  7067: 5a 16 01 a0 00           jump @447 if s1 >s 1
      :                          @435
  7072: 52 06 ad 00              jump @449 if s1 != 0
      :                          @436
  7076: 7b 1a 10                 u64 [sp + 0x10] = a3
  7079: 28 ac 00                 jump @450
      :                          @437
  7082: 82 75 20                 s0 = u64 [a0 + 0x20]
  7085: 82 76 28                 s1 = u64 [a0 + 0x28]
  7088: 64 57                    a0 = s0
  7090: 64 68                    a1 = s1
  7092: 82 1a 38                 a3 = u64 [sp + 0x38]
  7095: 82 1b 30                 a4 = u64 [sp + 0x30]
  7098: 50 20 9c 00 75 01        ra = 156, jump @470
      :                          @438 [@dyn 78]
  7104: 33 08 01                 a1 = 0x1
  7107: 52 07 be 00              jump @455 if a0 != 0
      :                          @439
  7111: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7114: 64 57                    a0 = s0
  7116: 82 18 20                 a1 = u64 [sp + 0x20]
  7119: 82 19 28                 a2 = u64 [sp + 0x28]
  7122: 82 10 60                 ra = u64 [sp + 0x60]
  7125: 82 15 58                 s0 = u64 [sp + 0x58]
  7128: 82 16 50                 s1 = u64 [sp + 0x50]
  7131: 95 11 68                 sp = sp + 0x68
  7134: 32 0c                    jump [a5]
      :                          @440
  7136: 7b 1a 40                 u64 [sp + 0x40] = a3
  7139: 64 45                    s0 = t2
  7141: 81 78 30                 a1 = i32 [a0 + 0x30]
  7144: 7b 18 10                 u64 [sp + 0x10] = a1
  7147: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7150: 7b 1a 08                 u64 [sp + 0x8] = a3
  7153: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7156: 82 78 28                 a1 = u64 [a0 + 0x28]
  7159: 48 17 30 30              u32 [a0 + 48] = 0x30
  7163: 7b 17                    u64 [sp] = a0
  7165: 46 17 38 01              u8 [a0 + 56] = 0x1
  7169: 7b 1a 48                 u64 [sp + 0x48] = a3
  7172: 64 a7                    a0 = a3
  7174: 64 86                    s1 = a1
  7176: 82 1a 38                 a3 = u64 [sp + 0x38]
  7179: 82 1b 30                 a4 = u64 [sp + 0x30]
  7182: 50 20 9e 00 21 01        ra = 158, jump @470
      :                          @441 [@dyn 79]
  7188: 52 07 69                 jump @454 if a0 != 0
      :                          @442
  7191: 82 17 40                 a0 = u64 [sp + 0x40]
  7194: c9 57 05                 s0 = a0 - s0
  7197: 95 55 01                 s0 = s0 + 0x1
  7200: 01                       fallthrough
      :                          @443
  7201: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7204: 51 05 cb 00              jump @465 if s0 == 0
      :                          @444
  7208: 82 69 20                 a2 = u64 [s1 + 0x20]
  7211: 33 08 30                 a1 = 0x30
  7214: 82 17 48                 a0 = u64 [sp + 0x48]
  7217: b4 90 02 a0 00           ra = 160, jump [a2]
      :                          @445 [@dyn 80]
  7222: 51 07 eb                 jump @443 if a0 == 0
      :                          @446
  7225: 28 44                    jump @454
      :                          @447
  7227: 52 16 02 12              jump @449 if s1 != 2
      :                          @448
  7231: 98 a6 01                 s1 = a3 >> 0x1
  7234: 95 a8 01                 a1 = a3 + 0x1
  7237: 98 88 01                 a1 = a1 >> 0x1
  7240: 7b 18 10                 u64 [sp + 0x10] = a1
  7243: 28 08                    jump @450
      :                          @449
  7245: 64 a6                    s1 = a3
  7247: 49 11 10                 u64 [sp + 16] = 0
  7250: 01                       fallthrough
      :                          @450
  7251: 82 78 20                 a1 = u64 [a0 + 0x20]
  7254: 7b 18 48                 u64 [sp + 0x48] = a1
  7257: 82 75 28                 s0 = u64 [a0 + 0x28]
  7260: 81 77 30                 a0 = i32 [a0 + 0x30]
  7263: 7b 17 40                 u64 [sp + 0x40] = a0
  7266: 95 66 01                 s1 = s1 + 0x1
  7269: 01                       fallthrough
      :                          @451
  7270: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7273: 51 06 28                 jump @456 if s1 == 0
      :                          @452
  7276: 82 59 20                 a2 = u64 [s0 + 0x20]
  7279: 82 17 48                 a0 = u64 [sp + 0x48]
  7282: 82 18 40                 a1 = u64 [sp + 0x40]
  7285: b4 90 02 a2 00           ra = 162, jump [a2]
      :                          @453 [@dyn 81]
  7290: 51 07 ec                 jump @451 if a0 == 0
      :                          @454
  7293: 33 08 01                 a1 = 0x1
  7296: 01                       fallthrough
      :                          @455
  7297: 64 87                    a0 = a1
  7299: 82 10 60                 ra = u64 [sp + 0x60]
  7302: 82 15 58                 s0 = u64 [sp + 0x58]
  7305: 82 16 50                 s1 = u64 [sp + 0x50]
  7308: 95 11 68                 sp = sp + 0x68
  7311: 32 00                    ret
      :                          @456
  7313: 82 16 48                 s1 = u64 [sp + 0x48]
  7316: 64 67                    a0 = s1
  7318: 64 58                    a1 = s0
  7320: 82 19 18                 a2 = u64 [sp + 0x18]
  7323: 82 1a 38                 a3 = u64 [sp + 0x38]
  7326: 82 1b 30                 a4 = u64 [sp + 0x30]
  7329: 50 20 a4 00 8e 00        ra = 164, jump @470
      :                          @457 [@dyn 82]
  7335: 33 08 01                 a1 = 0x1
  7338: 52 07 d7                 jump @455 if a0 != 0
      :                          @458
  7341: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7344: 64 67                    a0 = s1
  7346: 82 18 20                 a1 = u64 [sp + 0x20]
  7349: 82 19 28                 a2 = u64 [sp + 0x28]
  7352: b4 a0 02 a6 00           ra = 166, jump [a3]
      :                          @459 [@dyn 83]
  7357: 33 08 01                 a1 = 0x1
  7360: 52 07 c1                 jump @455 if a0 != 0
      :                          @460
  7363: 82 17 10                 a0 = u64 [sp + 0x10]
  7366: 9a 77                    a0 = -a0
  7368: 7b 17 38                 u64 [sp + 0x38] = a0
  7371: 33 06 ff                 s1 = 0xffffffffffffffff
  7374: 01                       fallthrough
      :                          @461
  7375: 82 17 38                 a0 = u64 [sp + 0x38]
  7378: c8 67 07                 a0 = a0 + s1
  7381: 51 17 ff 45              jump @468 if a0 == 4294967295
      :                          @462
  7385: 82 59 20                 a2 = u64 [s0 + 0x20]
  7388: 82 17 48                 a0 = u64 [sp + 0x48]
  7391: 82 18 40                 a1 = u64 [sp + 0x40]
  7394: b4 90 02 a8 00           ra = 168, jump [a2]
      :                          @463 [@dyn 84]
  7399: 95 66 01                 s1 = s1 + 0x1
  7402: 51 07 e5                 jump @461 if a0 == 0
      :                          @464
  7405: 28 39                    jump @469
      :                          @465
  7407: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7410: 82 17 48                 a0 = u64 [sp + 0x48]
  7413: 82 18 20                 a1 = u64 [sp + 0x20]
  7416: 82 19 28                 a2 = u64 [sp + 0x28]
  7419: b4 a0 02 aa 00           ra = 170, jump [a3]
      :                          @466 [@dyn 85]
  7424: 33 08 01                 a1 = 0x1
  7427: 52 07 7e ff              jump @455 if a0 != 0
      :                          @467
  7431: 33 08                    a1 = 0
  7433: 82 16                    s1 = u64 [sp]
  7435: 82 17 10                 a0 = u64 [sp + 0x10]
  7438: 7a 67 30                 u32 [s1 + 0x30] = a0
  7441: 82 17 08                 a0 = u64 [sp + 0x8]
  7444: 78 67 38                 u8 [s1 + 0x38] = a0
  7447: 28 6a ff                 jump @455
      :                          @468
  7450: 82 16 10                 s1 = u64 [sp + 0x10]
  7453: 82 17 10                 a0 = u64 [sp + 0x10]
  7456: d8 76 08                 a1 = s1 <u a0
  7459: 28 5e ff                 jump @455
      :                          @469
  7462: 82 17 10                 a0 = u64 [sp + 0x10]
  7465: d8 76 08                 a1 = s1 <u a0
  7468: 28 55 ff                 jump @455
      :                          @470
  7471: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7474: 7b 10 20                 u64 [sp + 0x20] = ra
  7477: 7b 15 18                 u64 [sp + 0x18] = s0
  7480: 7b 16 10                 u64 [sp + 0x10] = s1
  7483: 83 9c                    i32 a5 = a2 + 0
  7485: 33 02 00 00 11           t0 = 0x110000
  7490: 64 a6                    s1 = a3
  7492: 64 85                    s0 = a1
  7494: 64 7a                    a3 = a0
  7496: aa 2c 21                 jump @473 if a5 == t0
      :                          @471
  7499: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7502: 64 a7                    a0 = a3
  7504: 64 98                    a1 = a2
  7506: 7b 1b 08                 u64 [sp + 0x8] = a4
  7509: 7b 1a                    u64 [sp] = a3
  7511: b4 c0 02 ac 00           ra = 172, jump [a5]
      :                          @472 [@dyn 86]
  7516: 82 1a                    a3 = u64 [sp]
  7518: 82 1b 08                 a4 = u64 [sp + 0x8]
  7521: 64 78                    a1 = a0
  7523: 33 07 01                 a0 = 0x1
  7526: 52 08 20                 jump @476 if a1 != 0
      :                          @473
  7529: 51 06 1a                 jump @475 if s1 == 0
      :                          @474
  7532: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7535: 64 a7                    a0 = a3
  7537: 64 68                    a1 = s1
  7539: 64 b9                    a2 = a4
  7541: 82 10 20                 ra = u64 [sp + 0x20]
  7544: 82 15 18                 s0 = u64 [sp + 0x18]
  7547: 82 16 10                 s1 = u64 [sp + 0x10]
  7550: 95 11 28                 sp = sp + 0x28
  7553: 32 0c                    jump [a5]
      :                          @475
  7555: 33 07                    a0 = 0
  7557: 01                       fallthrough
      :                          @476
  7558: 82 10 20                 ra = u64 [sp + 0x20]
  7561: 82 15 18                 s0 = u64 [sp + 0x18]
  7564: 82 16 10                 s1 = u64 [sp + 0x10]
  7567: 95 11 28                 sp = sp + 0x28
  7570: 32 00                    ret
      :                          @477
  7572: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7576: 7b 10 80 00              u64 [sp + 0x80] = ra
  7580: 7b 15 78                 u64 [sp + 0x78] = s0
  7583: 7b 16 70                 u64 [sp + 0x70] = s1
  7586: 49 11 60 20              u64 [sp + 96] = 0x20
  7590: 33 0a 03                 a3 = 0x3
  7593: 78 1a 68                 u8 [sp + 0x68] = a3
  7596: 82 96 20                 s1 = u64 [a2 + 0x20]
  7599: 49 11 30                 u64 [sp + 48] = 0
  7602: 49 11 40                 u64 [sp + 64] = 0
  7605: 7b 17 50                 u64 [sp + 0x50] = a0
  7608: 7b 18 58                 u64 [sp + 0x58] = a1
  7611: 51 06 0a 01              jump @499 if s1 == 0
      :                          @478
  7615: 82 97 28                 a0 = u64 [a2 + 0x28]
  7618: 51 07 79 01              jump @509 if a0 == 0
      :                          @479
  7622: 49 11 28                 u64 [sp + 40] = 0
  7625: 82 95                    s0 = u64 [a2]
  7627: 7b 19 08                 u64 [sp + 0x8] = a2
  7630: 82 98 10                 a1 = u64 [a2 + 0x10]
  7633: 7b 18 18                 u64 [sp + 0x18] = a1
  7636: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7639: 97 88 03                 a1 = a1 << 0x3
  7642: 98 88 03                 a1 = a1 >> 0x3
  7645: 95 88 01                 a1 = a1 + 0x1
  7648: 7b 18                    u64 [sp] = a1
  7650: 95 55 08                 s0 = s0 + 0x8
  7653: 96 78 38                 a1 = a0 * 0x38
  7656: 95 66 18                 s1 = s1 + 0x18
  7659: 33 07 98 00              a0 = 0x98
  7663: 7b 17 10                 u64 [sp + 0x10] = a0
  7666: 01                       fallthrough
      :                          @480
  7667: 7b 18 20                 u64 [sp + 0x20] = a1
  7670: 82 59                    a2 = u64 [s0]
  7672: 51 09 18                 jump @483 if a2 == 0
      :                          @481
  7675: 82 1a 58                 a3 = u64 [sp + 0x58]
  7678: 82 17 50                 a0 = u64 [sp + 0x50]
  7681: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7684: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7687: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @482 [@dyn 87]
  7692: 52 07 55 01              jump @512 if a0 != 0
      :                          @483
  7696: 81 67 10                 a0 = i32 [s1 + 0x10]
  7699: 7a 17 60                 u32 [sp + 0x60] = a0
  7702: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7705: 78 17 68                 u8 [sp + 0x68] = a0
  7708: 81 67 14                 a0 = i32 [s1 + 0x14]
  7711: 7a 17 64                 u32 [sp + 0x64] = a0
  7714: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7717: 82 67                    a0 = u64 [s1]
  7719: 51 08 26                 jump @488 if a1 == 0
      :                          @484
  7722: 52 18 01 16              jump @486 if a1 != 1
      :                          @485
  7726: 97 77 04                 a0 = a0 << 0x4
  7729: 82 18 18                 a1 = u64 [sp + 0x18]
  7732: c8 87 07                 a0 = a0 + a1
  7735: 82 78 08                 a1 = u64 [a0 + 0x8]
  7738: 82 19 10                 a2 = u64 [sp + 0x10]
  7741: aa 98 07                 jump @487 if a1 == a2
      :                          @486
  7744: 33 08                    a1 = 0
  7746: 28 0f                    jump @489
      :                          @487
  7748: 82 77                    a0 = u64 [a0]
  7750: 82 77                    a0 = u64 [a0]
  7752: 33 08 01                 a1 = 0x1
  7755: 28 06                    jump @489
      :                          @488
  7757: 33 08 01                 a1 = 0x1
  7760: 01                       fallthrough
      :                          @489
  7761: 7b 18 30                 u64 [sp + 0x30] = a1
  7764: 7b 17 38                 u64 [sp + 0x38] = a0
  7767: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7770: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7773: 51 08 26                 jump @494 if a1 == 0
      :                          @490
  7776: 52 18 01 16              jump @492 if a1 != 1
      :                          @491
  7780: 97 77 04                 a0 = a0 << 0x4
  7783: 82 18 18                 a1 = u64 [sp + 0x18]
  7786: c8 87 07                 a0 = a0 + a1
  7789: 82 78 08                 a1 = u64 [a0 + 0x8]
  7792: 82 19 10                 a2 = u64 [sp + 0x10]
  7795: aa 98 07                 jump @493 if a1 == a2
      :                          @492
  7798: 33 08                    a1 = 0
  7800: 28 0f                    jump @495
      :                          @493
  7802: 82 77                    a0 = u64 [a0]
  7804: 82 77                    a0 = u64 [a0]
  7806: 33 08 01                 a1 = 0x1
  7809: 28 06                    jump @495
      :                          @494
  7811: 33 08 01                 a1 = 0x1
  7814: 01                       fallthrough
      :                          @495
  7815: 7b 18 40                 u64 [sp + 0x40] = a1
  7818: 7b 17 48                 u64 [sp + 0x48] = a0
  7821: 82 67 08                 a0 = u64 [s1 + 0x8]
  7824: 97 77 04                 a0 = a0 << 0x4
  7827: 82 18 18                 a1 = u64 [sp + 0x18]
  7830: c8 78 08                 a1 = a1 + a0
  7833: 82 87                    a0 = u64 [a1]
  7835: 82 89 08                 a2 = u64 [a1 + 0x8]
  7838: 95 18 30                 a1 = sp + 0x30
  7841: b4 90 02 b0 00           ra = 176, jump [a2]
      :                          @496 [@dyn 88]
  7846: 52 07 bb 00              jump @512 if a0 != 0
      :                          @497
  7850: 95 55 10                 s0 = s0 + 0x10
  7853: 82 18 20                 a1 = u64 [sp + 0x20]
  7856: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7859: 95 66 38                 s1 = s1 + 0x38
  7862: 82 17 28                 a0 = u64 [sp + 0x28]
  7865: 95 77 01                 a0 = a0 + 0x1
  7868: 7b 17 28                 u64 [sp + 0x28] = a0
  7871: 52 08 34 ff              jump @480 if a1 != 0
      :                          @498
  7875: 28 6b                    jump @507
      :                          @499
  7877: 82 97 18                 a0 = u64 [a2 + 0x18]
  7880: 51 07 73                 jump @509 if a0 == 0
      :                          @500
  7883: 82 95 10                 s0 = u64 [a2 + 0x10]
  7886: 33 0a                    a3 = 0
  7888: 97 78 04                 a1 = a0 << 0x4
  7891: c8 58 08                 a1 = a1 + s0
  7894: 7b 18 20                 u64 [sp + 0x20] = a1
  7897: 7b 19 08                 u64 [sp + 0x8] = a2
  7900: 82 96                    s1 = u64 [a2]
  7902: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7905: 97 77 04                 a0 = a0 << 0x4
  7908: 98 77 04                 a0 = a0 >> 0x4
  7911: 95 77 01                 a0 = a0 + 0x1
  7914: 7b 17                    u64 [sp] = a0
  7916: 95 66 08                 s1 = s1 + 0x8
  7919: 01                       fallthrough
      :                          @501
  7920: 7b 1a 28                 u64 [sp + 0x28] = a3
  7923: 82 69                    a2 = u64 [s1]
  7925: 51 09 17                 jump @504 if a2 == 0
      :                          @502
  7928: 82 1a 58                 a3 = u64 [sp + 0x58]
  7931: 82 17 50                 a0 = u64 [sp + 0x50]
  7934: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7937: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7940: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @503 [@dyn 89]
  7945: 52 07 58                 jump @512 if a0 != 0
      :                          @504
  7948: 82 57                    a0 = u64 [s0]
  7950: 82 59 08                 a2 = u64 [s0 + 0x8]
  7953: 95 18 30                 a1 = sp + 0x30
  7956: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @505 [@dyn 90]
  7961: 52 07 48                 jump @512 if a0 != 0
      :                          @506
  7964: 95 66 10                 s1 = s1 + 0x10
  7967: 95 55 10                 s0 = s0 + 0x10
  7970: 82 1a 28                 a3 = u64 [sp + 0x28]
  7973: 95 aa 01                 a3 = a3 + 0x1
  7976: 82 17 20                 a0 = u64 [sp + 0x20]
  7979: ab 75 c5                 jump @501 if s0 != a0
      :                          @507
  7982: 82 19 08                 a2 = u64 [sp + 0x8]
  7985: 82 1a                    a3 = u64 [sp]
  7987: 82 97 08                 a0 = u64 [a2 + 0x8]
  7990: ac 7a 0d                 jump @510 if a3 <u a0
      :                          @508
  7993: 28 2d                    jump @513
      :                          @509
  7995: 33 0a                    a3 = 0
  7997: 82 97 08                 a0 = u64 [a2 + 0x8]
  8000: 54 07 26                 jump @513 if a0 <=u 0
      :                          @510
  8003: 82 97                    a0 = u64 [a2]
  8005: 97 a8 04                 a1 = a3 << 0x4
  8008: c8 87 09                 a2 = a0 + a1
  8011: 82 1a 58                 a3 = u64 [sp + 0x58]
  8014: 82 17 50                 a0 = u64 [sp + 0x50]
  8017: 82 98                    a1 = u64 [a2]
  8019: 82 99 08                 a2 = u64 [a2 + 0x8]
  8022: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8025: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @511 [@dyn 91]
  8030: 51 07 08                 jump @513 if a0 == 0
      :                          @512
  8033: 33 07 01                 a0 = 0x1
  8036: 28 05                    jump @514
      :                          @513
  8038: 33 07                    a0 = 0
  8040: 01                       fallthrough
      :                          @514
  8041: 82 10 80 00              ra = u64 [sp + 0x80]
  8045: 82 15 78                 s0 = u64 [sp + 0x78]
  8048: 82 16 70                 s1 = u64 [sp + 0x70]
  8051: 95 11 88 00              sp = sp + 0x88
  8055: 32 00                    ret
      :                          @515 [@dyn 92]
  8057: 32 00                    ret
      :                          @516 [@dyn 93]
  8059: 95 11 80                 sp = sp + 0xffffffffffffff80
  8062: 7b 10 78                 u64 [sp + 0x78] = ra
  8065: 7b 15 70                 u64 [sp + 0x70] = s0
  8068: 7b 16 68                 u64 [sp + 0x68] = s1
  8071: 64 92                    t0 = a2
  8073: 33 00                    ra = 0
  8075: 33 0b                    a4 = 0
  8077: 33 05                    s0 = 0
  8079: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8089: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8095: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8105: 82 79 10                 a2 = u64 [a0 + 0x10]
  8108: 7b 19 48                 u64 [sp + 0x48] = a2
  8111: 82 79                    a2 = u64 [a0]
  8113: 7b 19 38                 u64 [sp + 0x38] = a2
  8116: 82 77 08                 a0 = u64 [a0 + 0x8]
  8119: 7b 17 30                 u64 [sp + 0x30] = a0
  8122: 33 07 48 04 01           a0 = 0x10448
  8127: 7b 17 08                 u64 [sp + 0x8] = a0
  8130: 3a 07 08 00 03           a0 = u64 [0x30008]
  8135: 7b 17 60                 u64 [sp + 0x60] = a0
  8138: 7b 18 58                 u64 [sp + 0x58] = a1
  8141: 95 88 08                 a1 = a1 + 0x8
  8144: 7b 18                    u64 [sp] = a1
  8146: 33 0c 0a                 a5 = 0xa
  8149: 7b 12 20                 u64 [sp + 0x20] = t0
  8152: 7b 13 18                 u64 [sp + 0x18] = t1
  8155: 7b 14 10                 u64 [sp + 0x10] = t2
  8158: 28 3b                    jump @520
      :                          @517
  8160: 64 06                    s1 = ra
  8162: c8 89 07                 a0 = a2 + a1
  8165: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8168: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8171: 88 77 01                 a0 = a0 <u 0x1
  8174: 01                       fallthrough
      :                          @518
  8175: 82 1a 48                 a3 = u64 [sp + 0x48]
  8178: 78 a7                    u8 [a3] = a0
  8180: 82 17 30                 a0 = u64 [sp + 0x30]
  8183: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8186: 82 17 38                 a0 = u64 [sp + 0x38]
  8189: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @519 [@dyn 94]
  8194: 64 5b                    a4 = s0
  8196: 82 12 20                 t0 = u64 [sp + 0x20]
  8199: 82 13 18                 t1 = u64 [sp + 0x18]
  8202: 82 14 10                 t2 = u64 [sp + 0x10]
  8205: 64 60                    ra = s1
  8207: 33 0c 0a                 a5 = 0xa
  8210: 82 15 40                 s0 = u64 [sp + 0x40]
  8213: 52 07 64 01              jump @561 if a0 != 0
      :                          @520
  8217: 84 57 ff 00              a0 = s0 & 0xff
  8221: 52 07 58 01              jump @560 if a0 != 0
      :                          @521
  8225: 7b 1b 50                 u64 [sp + 0x50] = a4
  8228: ae 02 0a                 jump @524 if t0 >=u ra
      :                          @522
  8231: 28 ef 00                 jump @551
      :                          @523
  8234: ac 02 ec 00              jump @551 if t0 <u ra
      :                          @524
  8238: c9 02 08                 a1 = t0 - ra
  8241: 82 16 58                 s1 = u64 [sp + 0x58]
  8244: c8 06 06                 s1 = s1 + ra
  8247: 55 18 10 1d              jump @530 if a1 >=u 16
      :                          @525
  8251: aa 02 d8 00              jump @550 if t0 == ra
      :                          @526
  8255: 33 0a                    a3 = 0
  8257: 01                       fallthrough
      :                          @527
  8258: c8 a6 07                 a0 = s1 + a3
  8261: 7c 77                    a0 = u8 [a0]
  8263: aa c7 a5 00              jump @545 if a0 == a5
      :                          @528
  8267: 95 aa 01                 a3 = a3 + 0x1
  8270: ab a8 f4                 jump @527 if a1 != a3
      :                          @529
  8273: 28 c2 00                 jump @550
      :                          @530
  8276: 95 69 07                 a2 = s1 + 0x7
  8279: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8282: c9 6a 07                 a0 = a3 - s1
  8285: d3 6a 0a                 a3 = a3 ^ s1
  8288: 88 aa 01                 a3 = a3 <u 0x1
  8291: 88 7b 01                 a4 = a0 <u 0x1
  8294: d4 ba 0a                 a3 = a3 | a4
  8297: 51 0a 45                 jump @536 if a3 == 0
      :                          @531
  8300: 33 07                    a0 = 0
  8302: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8305: 82 1b                    a4 = u64 [sp]
  8307: c8 0b 0b                 a4 = a4 + ra
  8310: 28 08                    jump @533
      :                          @532
  8312: 82 1b                    a4 = u64 [sp]
  8314: c8 0b 0b                 a4 = a4 + ra
  8317: 01                       fallthrough
      :                          @533
  8318: c8 76 0c                 a5 = s1 + a0
  8321: 82 cc                    a5 = u64 [a5]
  8323: c8 7b 09                 a2 = a4 + a0
  8326: 82 99                    a2 = u64 [a2]
  8328: d3 4c 05                 s0 = a5 ^ t2
  8331: c8 35 05                 s0 = s0 + t1
  8334: e0 c5 0c                 a5 = s0 & ~a5
  8337: d3 49 05                 s0 = a2 ^ t2
  8340: c8 35 05                 s0 = s0 + t1
  8343: e0 95 09                 a2 = s0 & ~a2
  8346: d4 c9 09                 a2 = a2 | a5
  8349: 82 1c 60                 a5 = u64 [sp + 0x60]
  8352: d2 c9 09                 a2 = a2 & a5
  8355: 52 09 1f                 jump @539 if a2 != 0
      :                          @534
  8358: 95 77 10                 a0 = a0 + 0x10
  8361: ae 7a d5                 jump @533 if a3 >=u a0
      :                          @535
  8364: 28 16                    jump @539
      :                          @536
  8366: c8 a6 0b                 a4 = s1 + a3
  8369: 7c bb                    a4 = u8 [a4]
  8371: aa cb 51                 jump @548 if a4 == a5
      :                          @537
  8374: 95 aa 01                 a3 = a3 + 0x1
  8377: ab a7 f5                 jump @536 if a0 != a3
      :                          @538
  8380: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8383: ae 7a b9                 jump @532 if a3 >=u a0
      :                          @539
  8386: aa 87 9b 00              jump @557 if a0 == a1
      :                          @540
  8390: 33 0a                    a3 = 0
  8392: c8 76 06                 s1 = s1 + a0
  8395: c9 72 08                 a1 = t0 - a0
  8398: c9 08 08                 a1 = a1 - ra
  8401: 33 0c 0a                 a5 = 0xa
  8404: 82 1b 50                 a4 = u64 [sp + 0x50]
  8407: 01                       fallthrough
      :                          @541
  8408: c8 a6 09                 a2 = s1 + a3
  8411: 7c 99                    a2 = u8 [a2]
  8413: aa c9 0b                 jump @544 if a2 == a5
      :                          @542
  8416: 95 aa 01                 a3 = a3 + 0x1
  8419: ab a8 f5                 jump @541 if a1 != a3
      :                          @543
  8422: 28 2d                    jump @550
      :                          @544
  8424: c8 7a 0a                 a3 = a3 + a0
  8427: 01                       fallthrough
      :                          @545
  8428: c8 0a 0a                 a3 = a3 + ra
  8431: 95 a0 01                 ra = a3 + 0x1
  8434: ae 2a 38 ff              jump @523 if a3 >=u t0
      :                          @546
  8438: 82 17 58                 a0 = u64 [sp + 0x58]
  8441: c8 7a 0a                 a3 = a3 + a0
  8444: 7c a7                    a0 = u8 [a3]
  8446: ab c7 2c ff              jump @523 if a0 != a5
      :                          @547
  8450: 28 62                    jump @558
      :                          @548
  8452: 82 1b 50                 a4 = u64 [sp + 0x50]
  8455: c8 0a 0a                 a3 = a3 + ra
  8458: 95 a0 01                 ra = a3 + 0x1
  8461: ac 2a e9                 jump @546 if a3 <u t0
      :                          @549
  8464: 28 1a ff                 jump @523
      :                          @550
  8467: 64 20                    ra = t0
  8469: 01                       fallthrough
      :                          @551
  8470: 49 11 40 01              u64 [sp + 64] = 0x1
  8474: 64 b5                    s0 = a4
  8476: 64 26                    s1 = t0
  8478: aa 2b 57                 jump @560 if a4 == t0
      :                          @552
  8481: 82 17 48                 a0 = u64 [sp + 0x48]
  8484: 7c 77                    a0 = u8 [a0]
  8486: 51 07 23                 jump @555 if a0 == 0
      :                          @553
  8489: 82 17 30                 a0 = u64 [sp + 0x30]
  8492: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8495: 33 09 04                 a2 = 0x4
  8498: 82 17 38                 a0 = u64 [sp + 0x38]
  8501: 82 18 08                 a1 = u64 [sp + 0x8]
  8504: 7b 10 28                 u64 [sp + 0x28] = ra
  8507: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @554 [@dyn 95]
  8512: 82 1b 50                 a4 = u64 [sp + 0x50]
  8515: 82 10 28                 ra = u64 [sp + 0x28]
  8518: 52 07 33                 jump @561 if a0 != 0
      :                          @555
  8521: c9 b6 09                 a2 = s1 - a4
  8524: 82 18 58                 a1 = u64 [sp + 0x58]
  8527: c8 b8 08                 a1 = a1 + a4
  8530: ab b6 8e fe              jump @517 if s1 != a4
      :                          @556
  8534: 64 06                    s1 = ra
  8536: 33 07                    a0 = 0
  8538: 28 95 fe                 jump @518
      :                          @557
  8541: 64 20                    ra = t0
  8543: 82 1b 50                 a4 = u64 [sp + 0x50]
  8546: 28 b4                    jump @551
      :                          @558
  8548: 49 11 40                 u64 [sp + 64] = 0
  8551: 64 05                    s0 = ra
  8553: 64 06                    s1 = ra
  8555: 82 17 48                 a0 = u64 [sp + 0x48]
  8558: 7c 77                    a0 = u8 [a0]
  8560: 52 07 b9                 jump @553 if a0 != 0
      :                          @559
  8563: 28 d6                    jump @555
      :                          @560
  8565: 33 07                    a0 = 0
  8567: 28 06                    jump @562
      :                          @561
  8569: 33 07 01                 a0 = 0x1
  8572: 01                       fallthrough
      :                          @562
  8573: 82 10 78                 ra = u64 [sp + 0x78]
  8576: 82 15 70                 s0 = u64 [sp + 0x70]
  8579: 82 16 68                 s1 = u64 [sp + 0x68]
  8582: 95 11 80 00              sp = sp + 0x80
  8586: 32 00                    ret
      :                          @563 [@dyn 96]
  8588: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8591: 7b 10 20                 u64 [sp + 0x20] = ra
  8594: 7b 15 18                 u64 [sp + 0x18] = s0
  8597: 7b 16 10                 u64 [sp + 0x10] = s1
  8600: 82 75 10                 s0 = u64 [a0 + 0x10]
  8603: 7c 59                    a2 = u8 [s0]
  8605: 82 7b                    a4 = u64 [a0]
  8607: 82 76 08                 s1 = u64 [a0 + 0x8]
  8610: 51 09 33                 jump @567 if a2 == 0
      :                          @564
  8613: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8616: 7b 18 08                 u64 [sp + 0x8] = a1
  8619: 33 08 48 04 01           a1 = 0x10448
  8624: 33 09 04                 a2 = 0x4
  8627: 64 b7                    a0 = a4
  8629: 7b 1b                    u64 [sp] = a4
  8631: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @565 [@dyn 97]
  8636: 82 18 08                 a1 = u64 [sp + 0x8]
  8639: 82 1b                    a4 = u64 [sp]
  8641: 51 07 14                 jump @567 if a0 == 0
      :                          @566
  8644: 33 07 01                 a0 = 0x1
  8647: 82 10 20                 ra = u64 [sp + 0x20]
  8650: 82 15 18                 s0 = u64 [sp + 0x18]
  8653: 82 16 10                 s1 = u64 [sp + 0x10]
  8656: 95 11 28                 sp = sp + 0x28
  8659: 32 00                    ret
      :                          @567
  8661: 83 87                    i32 a0 = a1 + 0
  8663: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8666: 88 77 01                 a0 = a0 <u 0x1
  8669: 78 57                    u8 [s0] = a0
  8671: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8674: 64 b7                    a0 = a4
  8676: 82 10 20                 ra = u64 [sp + 0x20]
  8679: 82 15 18                 s0 = u64 [sp + 0x18]
  8682: 82 16 10                 s1 = u64 [sp + 0x10]
  8685: 95 11 28                 sp = sp + 0x28
  8688: 32 0c                    jump [a5]
      :                          @568 [@dyn 98]
  8690: 64 8a                    a3 = a1
  8692: 33 08 10 04 01           a1 = 0x10410
  8697: 64 a9                    a2 = a3
  8699: 28 99 fb                 jump @477
      :                          @569
  8702: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8706: 7b 10 88 00              u64 [sp + 0x88] = ra
  8710: 7b 15 80 00              u64 [sp + 0x80] = s0
  8714: 7b 16 78                 u64 [sp + 0x78] = s1
  8717: 64 75                    s0 = a0
  8719: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8722: 64 8b                    a4 = a1
  8724: 33 08 01                 a1 = 0x1
  8727: 33 06 01                 s1 = 0x1
  8730: 51 07 1d                 jump @571 if a0 == 0
      :                          @570
  8733: 78 56 08                 u8 [s0 + 0x8] = s1
  8736: 46 15 09 01              u8 [s0 + 9] = 0x1
  8740: 64 57                    a0 = s0
  8742: 82 10 88 00              ra = u64 [sp + 0x88]
  8746: 82 15 80 00              s0 = u64 [sp + 0x80]
  8750: 82 16 78                 s1 = u64 [sp + 0x78]
  8753: 95 11 90 00              sp = sp + 0x90
  8757: 32 00                    ret
      :                          @571
  8759: 64 9a                    a3 = a2
  8761: 82 5c                    a5 = u64 [s0]
  8763: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8766: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8769: 84 79 04                 a2 = a0 & 0x4
  8772: 52 09 45                 jump @577 if a2 != 0
      :                          @572
  8775: 51 08 32                 jump @575 if a1 == 0
      :                          @573
  8778: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8781: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8784: 82 83 18                 t1 = u64 [a1 + 0x18]
  8787: 33 08 50 04 01           a1 = 0x10450
  8792: 33 09 02                 a2 = 0x2
  8795: 64 a6                    s1 = a3
  8797: 7b 1b 10                 u64 [sp + 0x10] = a4
  8800: 7b 1c 08                 u64 [sp + 0x8] = a5
  8803: b4 30 02 c6 00           ra = 198, jump [t1]
      :                          @574 [@dyn 99]
  8808: 82 1c 08                 a5 = u64 [sp + 0x8]
  8811: 82 1b 10                 a4 = u64 [sp + 0x10]
  8814: 64 6a                    a3 = s1
  8816: 33 08 01                 a1 = 0x1
  8819: 33 06 01                 s1 = 0x1
  8822: 52 07 a7                 jump @570 if a0 != 0
      :                          @575
  8825: 64 b7                    a0 = a4
  8827: 64 c8                    a1 = a5
  8829: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @576 [@dyn 100]
  8834: 33 08 01                 a1 = 0x1
  8837: 64 76                    s1 = a0
  8839: 28 96                    jump @570
      :                          @577
  8841: 52 08 37                 jump @581 if a1 != 0
      :                          @578
  8844: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8847: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8850: 82 83 18                 t1 = u64 [a1 + 0x18]
  8853: 33 08 54 04 01           a1 = 0x10454
  8858: 33 09 01                 a2 = 0x1
  8861: 33 06 01                 s1 = 0x1
  8864: 7b 1a                    u64 [sp] = a3
  8866: 7b 1b 10                 u64 [sp + 0x10] = a4
  8869: 7b 1c 08                 u64 [sp + 0x8] = a5
  8872: b4 30 02 ca 00           ra = 202, jump [t1]
      :                          @579 [@dyn 101]
  8877: 82 1c 08                 a5 = u64 [sp + 0x8]
  8880: 82 1b 10                 a4 = u64 [sp + 0x10]
  8883: 82 1a                    a3 = u64 [sp]
  8885: 33 08 01                 a1 = 0x1
  8888: 52 07 65 ff              jump @570 if a0 != 0
      :                          @580
  8892: 81 c7 34                 a0 = i32 [a5 + 0x34]
  8895: 01                       fallthrough
      :                          @581
  8896: 33 06 01                 s1 = 0x1
  8899: 78 16 37                 u8 [sp + 0x37] = s1
  8902: 82 c8 20                 a1 = u64 [a5 + 0x20]
  8905: 82 c9 28                 a2 = u64 [a5 + 0x28]
  8908: 7b 18 18                 u64 [sp + 0x18] = a1
  8911: 7b 19 20                 u64 [sp + 0x20] = a2
  8914: 95 18 37                 a1 = sp + 0x37
  8917: 7b 18 28                 u64 [sp + 0x28] = a1
  8920: 81 c8 30                 a1 = i32 [a5 + 0x30]
  8923: 7c c9 38                 a2 = u8 [a5 + 0x38]
  8926: 82 c3                    t1 = u64 [a5]
  8928: 82 c4 08                 t2 = u64 [a5 + 0x8]
  8931: 82 c0 10                 ra = u64 [a5 + 0x10]
  8934: 82 c2 18                 t0 = u64 [a5 + 0x18]
  8937: 7a 17 6c                 u32 [sp + 0x6c] = a0
  8940: 7a 18 68                 u32 [sp + 0x68] = a1
  8943: 78 19 70                 u8 [sp + 0x70] = a2
  8946: 7b 13 38                 u64 [sp + 0x38] = t1
  8949: 7b 14 40                 u64 [sp + 0x40] = t2
  8952: 7b 10 48                 u64 [sp + 0x48] = ra
  8955: 7b 12 50                 u64 [sp + 0x50] = t0
  8958: 95 17 18                 a0 = sp + 0x18
  8961: 7b 17 58                 u64 [sp + 0x58] = a0
  8964: 33 07 10 04 01           a0 = 0x10410
  8969: 7b 17 60                 u64 [sp + 0x60] = a0
  8972: 95 18 38                 a1 = sp + 0x38
  8975: 64 b7                    a0 = a4
  8977: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @582 [@dyn 102]
  8982: 52 07 21                 jump @585 if a0 != 0
      :                          @583
  8985: 82 18 60                 a1 = u64 [sp + 0x60]
  8988: 82 17 58                 a0 = u64 [sp + 0x58]
  8991: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8994: 33 08 52 04 01           a1 = 0x10452
  8999: 33 09 02                 a2 = 0x2
  9002: b4 a0 02 ce 00           ra = 206, jump [a3]
      :                          @584 [@dyn 103]
  9007: 64 76                    s1 = a0
  9009: 33 08 01                 a1 = 0x1
  9012: 28 e9 fe                 jump @570
      :                          @585
  9015: 33 08 01                 a1 = 0x1
  9018: 28 e3 fe                 jump @570
      :                          @586
  9021: 51 08 9b 00              jump @607 if a1 == 0
      :                          @587
  9025: 64 79                    a2 = a0
  9027: 7c 77                    a0 = u8 [a0]
  9029: 51 07 91 00              jump @606 if a0 == 0
      :                          @588
  9033: 51 27 ff 00 90 00        jump @608 if a0 == 255
      :                          @589
  9039: 6c 7a                    a3 = sext.b a0
  9041: 57 0a 09                 jump @591 if a3 <s 0
      :                          @590
  9044: 33 0a                    a3 = 0
  9046: 33 08                    a1 = 0
  9048: 28 73                    jump @605
      :                          @591
  9050: 55 27 c0 00 0d           jump @593 if a0 >=u 192
      :                          @592
  9055: 33 0a 01                 a3 = 0x1
  9058: 33 0b 80                 a4 = 0xffffffffffffff80
  9061: 28 4a                    jump @602
      :                          @593
  9063: 55 27 e0 00 0e           jump @595 if a0 >=u 224
      :                          @594
  9068: 33 0a 02                 a3 = 0x2
  9071: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9075: 28 3c                    jump @602
      :                          @595
  9077: 55 27 f0 00 0e           jump @597 if a0 >=u 240
      :                          @596
  9082: 33 0a 03                 a3 = 0x3
  9085: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9089: 28 2e                    jump @602
      :                          @597
  9091: 55 27 f8 00 0e           jump @599 if a0 >=u 248
      :                          @598
  9096: 33 0a 04                 a3 = 0x4
  9099: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9103: 28 20                    jump @602
      :                          @599
  9105: 55 27 fc 00 0e           jump @601 if a0 >=u 252
      :                          @600
  9110: 33 0a 05                 a3 = 0x5
  9113: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9117: 28 12                    jump @602
      :                          @601
  9119: 88 7a fe 00              a3 = a0 <u 0xfe
  9123: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9127: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9131: 85 aa 07                 a3 = a3 ^ 0x7
  9134: 01                       fallthrough
      :                          @602
  9135: ae 8a 2b                 jump @609 if a3 >=u a1
      :                          @603
  9138: 33 08                    a1 = 0
  9140: c8 b7 07                 a0 = a0 + a4
  9143: 64 ab                    a4 = a3
  9145: 01                       fallthrough
      :                          @604
  9146: c8 b9 0c                 a5 = a2 + a4
  9149: 7c cc                    a5 = u8 [a5]
  9151: 97 88 08                 a1 = a1 << 0x8
  9154: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9157: d4 c8 08                 a1 = a1 | a5
  9160: 52 0b f2                 jump @604 if a4 != 0
      :                          @605
  9163: 8a a9 03                 i32 a2 = a3 << 0x3
  9166: cf 97 07                 a0 = a0 << a2
  9169: c8 87 07                 a0 = a0 + a1
  9172: 32 00                    ret
      :                          @606
  9174: 32 00                    ret
      :                          @607
  9176: 00                       trap
      :                          @608
  9177: 00                       trap
      :                          @609
  9178: 00                       trap
