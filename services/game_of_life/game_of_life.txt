// RO data = 1666/1668 bytes
// RW data = 16/1048656 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 86, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 68, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 120, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 145, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 223, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 226, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 229, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 72, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 120, 2, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 176, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 191, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 206, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 3, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 136, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 170, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 138, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 196, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2988
// Code size = 9289 bytes

      :                          @0
     0: 28 ad 02 00 00           jump @44
      :                          @1
     5: 28 63 11 00 00           jump @202
      :                          @2
    10: 28 7e 14                 jump @287
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 2e 1a                 jump @427
      :                          @6
    49: 82 7b                    a4 = u64 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 98 ba 04                 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 82 7b                    a4 = u64 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 98 ba 04                 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 56 04 01           a1 = 0x10456
   170: 50 10 04 df 1a           ra = 4, jump @437
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 14                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 3e                 jump @21 if a2 != 0
      :                          @17
   209: 82 10 80 00              ra = u64 [sp + 0x80]
   213: 95 11 88 00              sp = sp + 0x88
   217: 28 83 19                 jump @427
      :                          @18
   220: 82 7b                    a4 = u64 [a0]
   222: 33 09 81 00              a2 = 0x81
   226: 95 17 7f                 a0 = sp + 0x7f
   229: 33 02 57                 t0 = 0x57
   232: 01                       fallthrough
      :                          @19
   233: 64 9c                    a5 = a2
   235: 98 ba 04                 a3 = a4 >> 0x4
   238: 84 bb 0f                 a4 = a4 & 0xf
   241: 88 b3 0a                 t1 = a4 <u 0xa
   244: 33 09 30                 a2 = 0x30
   247: da 32 09                 a2 = t0 if t1 == 0
   250: be b9 09                 i32 a2 = a2 + a4
   253: 78 79                    u8 [a0] = a2
   255: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   258: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   261: 64 ab                    a4 = a3
   263: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   266: 28 30                    jump @23
      :                          @21
   268: 82 7b                    a4 = u64 [a0]
   270: 33 09 81 00              a2 = 0x81
   274: 95 17 7f                 a0 = sp + 0x7f
   277: 33 02 37                 t0 = 0x37
   280: 01                       fallthrough
      :                          @22
   281: 64 9c                    a5 = a2
   283: 98 ba 04                 a3 = a4 >> 0x4
   286: 84 bb 0f                 a4 = a4 & 0xf
   289: 88 b3 0a                 t1 = a4 <u 0xa
   292: 33 09 30                 a2 = 0x30
   295: da 32 09                 a2 = t0 if t1 == 0
   298: be b9 09                 i32 a2 = a2 + a4
   301: 78 79                    u8 [a0] = a2
   303: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   306: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   309: 64 ab                    a4 = a3
   311: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   314: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   317: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   322: 9a 9b 81 00              a4 = 0x81 - a2
   326: 64 1a                    a3 = sp
   328: c8 7a 0a                 a3 = a3 + a0
   331: 33 09 02                 a2 = 0x2
   334: 64 87                    a0 = a1
   336: 33 08 56 04 01           a1 = 0x10456
   341: 50 10 08 34 1a           ra = 8, jump @437
      :                          @25 [@dyn 4]
   346: 82 10 80 00              ra = u64 [sp + 0x80]
   350: 95 11 88 00              sp = sp + 0x88
   354: 32 00                    ret
      :                          @26
   356: 00                       trap
      :                          @27 [@dyn 5]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 85                    s0 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 5a 20                 a3 = u64 [s0 + 0x20]
   377: 82 8b 18                 a4 = u64 [a1 + 0x18]
   380: 64 76                    s1 = a0
   382: 33 08 08 04 01           a1 = 0x10408
   387: 33 09 01                 a2 = 0x1
   390: 64 a7                    a0 = a3
   392: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   396: 7b 15                    u64 [sp] = s0
   398: 78 17 08                 u8 [sp + 0x8] = a0
   401: 46 11 09                 u8 [sp + 9] = 0
   404: 7b 16 10                 u64 [sp + 0x10] = s1
   407: 33 05 02                 s0 = 0x2
   410: 64 17                    a0 = sp
   412: 95 18 10                 a1 = sp + 0x10
   415: 33 09 02                 a2 = 0x2
   418: 50 10 0e ca 20           ra = 14, jump @581
      :                          @29 [@dyn 7]
   423: 95 67 08                 a0 = s1 + 0x8
   426: 7b 17 10                 u64 [sp + 0x10] = a0
   429: 64 17                    a0 = sp
   431: 95 18 10                 a1 = sp + 0x10
   434: 64 59                    a2 = s0
   436: 50 10 10 b8 20           ra = 16, jump @581
      :                          @30 [@dyn 8]
   441: 95 67 10                 a0 = s1 + 0x10
   444: 7b 17 10                 u64 [sp + 0x10] = a0
   447: 64 17                    a0 = sp
   449: 95 18 10                 a1 = sp + 0x10
   452: 64 59                    a2 = s0
   454: 50 10 12 a6 20           ra = 18, jump @581
      :                          @31 [@dyn 9]
   459: 95 67 18                 a0 = s1 + 0x18
   462: 7b 17 10                 u64 [sp + 0x10] = a0
   465: 64 17                    a0 = sp
   467: 95 18 10                 a1 = sp + 0x10
   470: 64 59                    a2 = s0
   472: 50 10 14 94 20           ra = 20, jump @581
      :                          @32 [@dyn 10]
   477: 95 67 20                 a0 = s1 + 0x20
   480: 7b 17 10                 u64 [sp + 0x10] = a0
   483: 64 17                    a0 = sp
   485: 95 18 10                 a1 = sp + 0x10
   488: 64 59                    a2 = s0
   490: 50 10 16 82 20           ra = 22, jump @581
      :                          @33 [@dyn 11]
   495: 95 67 28                 a0 = s1 + 0x28
   498: 7b 17 10                 u64 [sp + 0x10] = a0
   501: 64 17                    a0 = sp
   503: 95 18 10                 a1 = sp + 0x10
   506: 64 59                    a2 = s0
   508: 50 10 18 70 20           ra = 24, jump @581
      :                          @34 [@dyn 12]
   513: 95 67 30                 a0 = s1 + 0x30
   516: 7b 17 10                 u64 [sp + 0x10] = a0
   519: 64 17                    a0 = sp
   521: 95 18 10                 a1 = sp + 0x10
   524: 64 59                    a2 = s0
   526: 50 10 1a 5e 20           ra = 26, jump @581
      :                          @35 [@dyn 13]
   531: 95 67 38                 a0 = s1 + 0x38
   534: 7b 17 10                 u64 [sp + 0x10] = a0
   537: 64 17                    a0 = sp
   539: 95 18 10                 a1 = sp + 0x10
   542: 64 59                    a2 = s0
   544: 50 10 1c 4c 20           ra = 28, jump @581
      :                          @36 [@dyn 14]
   549: 95 67 40                 a0 = s1 + 0x40
   552: 7b 17 10                 u64 [sp + 0x10] = a0
   555: 64 17                    a0 = sp
   557: 95 18 10                 a1 = sp + 0x10
   560: 64 59                    a2 = s0
   562: 50 10 1e 3a 20           ra = 30, jump @581
      :                          @37 [@dyn 15]
   567: 95 67 48                 a0 = s1 + 0x48
   570: 7b 17 10                 u64 [sp + 0x10] = a0
   573: 64 17                    a0 = sp
   575: 95 18 10                 a1 = sp + 0x10
   578: 64 59                    a2 = s0
   580: 50 10 20 28 20           ra = 32, jump @581
      :                          @38 [@dyn 16]
   585: 95 67 50                 a0 = s1 + 0x50
   588: 7b 17 10                 u64 [sp + 0x10] = a0
   591: 64 17                    a0 = sp
   593: 95 18 10                 a1 = sp + 0x10
   596: 64 59                    a2 = s0
   598: 50 10 22 16 20           ra = 34, jump @581
      :                          @39 [@dyn 17]
   603: 95 67 58                 a0 = s1 + 0x58
   606: 7b 17 10                 u64 [sp + 0x10] = a0
   609: 64 17                    a0 = sp
   611: 95 18 10                 a1 = sp + 0x10
   614: 64 59                    a2 = s0
   616: 50 10 24 04 20           ra = 36, jump @581
      :                          @40 [@dyn 18]
   621: 95 67 60                 a0 = s1 + 0x60
   624: 7b 17 10                 u64 [sp + 0x10] = a0
   627: 64 17                    a0 = sp
   629: 95 18 10                 a1 = sp + 0x10
   632: 64 59                    a2 = s0
   634: 50 10 26 f2 1f           ra = 38, jump @581
      :                          @41 [@dyn 19]
   639: 33 07 01                 a0 = 0x1
   642: 7c 18 08                 a1 = u8 [sp + 0x8]
   645: 52 08 1a                 jump @43 if a1 != 0
      :                          @42
   648: 82 17                    a0 = u64 [sp]
   650: 82 78 28                 a1 = u64 [a0 + 0x28]
   653: 82 77 20                 a0 = u64 [a0 + 0x20]
   656: 82 8a 18                 a3 = u64 [a1 + 0x18]
   659: 33 08 55 04 01           a1 = 0x10455
   664: 33 09 01                 a2 = 0x1
   667: b4 a0 01 28              ra = 40, jump [a3]
      :                          @43 [@dyn 20]
   671: 82 10 28                 ra = u64 [sp + 0x28]
   674: 82 15 20                 s0 = u64 [sp + 0x20]
   677: 82 16 18                 s1 = u64 [sp + 0x18]
   680: 95 11 30                 sp = sp + 0x30
   683: 32 00                    ret
      :                          @44 [export #0: 'refine']
   685: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   689: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   693: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   697: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   701: 95 11 b0 b4 fe           sp = sp + 0xfffffffffffeb4b0
   706: 64 85                    s0 = a1
   708: 64 7a                    a3 = a0
   710: 33 07 00 00 01           a0 = 0x10000
   715: 53 15 04 d5 00           jump @68 if s0 <u 4
      :                          @45
   720: 7d a8                    a1 = i8 [a3]
   722: 33 06 01                 s1 = 0x1
   725: 59 08 37                 jump @52 if a1 >=s 0
      :                          @46
   728: 84 89 ff 00              a2 = a1 & 0xff
   732: 33 06 02                 s1 = 0x2
   735: 53 29 c0 00 2d           jump @52 if a2 <u 192
      :                          @47
   740: 33 06 03                 s1 = 0x3
   743: 53 29 e0 00 25           jump @52 if a2 <u 224
      :                          @48
   748: 33 06 04                 s1 = 0x4
   751: 53 29 f0 00 1d           jump @52 if a2 <u 240
      :                          @49
   756: 33 06 05                 s1 = 0x5
   759: 53 29 f8 00 15           jump @52 if a2 <u 248
      :                          @50
   764: 33 06 06                 s1 = 0x6
   767: 53 29 fc 00 0d           jump @52 if a2 <u 252
      :                          @51
   772: 88 98 fe 00              a1 = a2 <u 0xfe
   776: 9a 86 08                 s1 = 0x8 - a1
   779: 01                       fallthrough
      :                          @52
   780: ac 65 94 00              jump @68 if s0 <u s1
      :                          @53
   784: 64 a7                    a0 = a3
   786: 64 68                    a1 = s1
   788: 7b 1a 70                 u64 [sp + 0x70] = a3
   791: 50 10 2a 94 20           ra = 42, jump @598
      :                          @54 [@dyn 21]
   796: 82 1a 70                 a3 = u64 [sp + 0x70]
   799: c8 6a 0a                 a3 = a3 + s1
   802: 7b 17 68                 u64 [sp + 0x68] = a0
   805: 7b 1a 70                 u64 [sp + 0x70] = a3
   808: ab 65 0c                 jump @56 if s0 != s1
      :                          @55
   811: 33 08                    a1 = 0
   813: 49 11 60                 u64 [sp + 96] = 0
   816: 33 05                    s0 = 0
   818: 28 5f                    jump @67
      :                          @56
   820: 7d a8                    a1 = i8 [a3]
   822: c9 65 06                 s1 = s0 - s1
   825: 33 05 01                 s0 = 0x1
   828: 59 08 37                 jump @63 if a1 >=s 0
      :                          @57
   831: 84 89 ff 00              a2 = a1 & 0xff
   835: 33 05 02                 s0 = 0x2
   838: 53 29 c0 00 2d           jump @63 if a2 <u 192
      :                          @58
   843: 33 05 03                 s0 = 0x3
   846: 53 29 e0 00 25           jump @63 if a2 <u 224
      :                          @59
   851: 33 05 04                 s0 = 0x4
   854: 53 29 f0 00 1d           jump @63 if a2 <u 240
      :                          @60
   859: 33 05 05                 s0 = 0x5
   862: 53 29 f8 00 15           jump @63 if a2 <u 248
      :                          @61
   867: 33 05 06                 s0 = 0x6
   870: 53 29 fc 00 0d           jump @63 if a2 <u 252
      :                          @62
   875: 88 99 fe 00              a2 = a2 <u 0xfe
   879: 9a 95 08                 s0 = 0x8 - a2
   882: 01                       fallthrough
      :                          @63
   883: ae 56 06                 jump @65 if s1 >=u s0
      :                          @64
   886: 28 f1 0d                 jump @201
      :                          @65
   889: 64 a7                    a0 = a3
   891: 64 58                    a1 = s0
   893: 50 10 2c 2e 20           ra = 44, jump @598
      :                          @66 [@dyn 22]
   898: e4 56 08                 a1 = maxu(s1, s0)
   901: 7b 15 60                 u64 [sp + 0x60] = s0
   904: c9 58 08                 a1 = a1 - s0
   907: 64 75                    s0 = a0
   909: ac 78 0e 01              jump @79 if a1 <u a0
      :                          @67
   913: e4 58 07                 a0 = maxu(a1, s0)
   916: c9 57 09                 a2 = a0 - s0
   919: 33 07 00 00 01           a0 = 0x10000
   924: 55 19 20 23              jump @70 if a2 >=u 32
      :                          @68
   928: 33 06                    s1 = 0
   930: 01                       fallthrough
      :                          @69
   931: 64 68                    a1 = s1
   933: 33 09 50 4b 01           a2 = 0x14b50
   938: c8 91 01                 sp = sp + a2
   941: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   945: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   949: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   953: 95 11 f8 07              sp = sp + 0x7f8
   957: 32 00                    ret
      :                          @70
   959: 7b 15 78                 u64 [sp + 0x78] = s0
   962: 33 07 11 00 03           a0 = 0x30011
   967: 33 09 24                 a2 = 0x24
   970: 33 0a 03                 a3 = 0x3
   973: 7b 17 58                 u64 [sp + 0x58] = a0
   976: 33 08                    a1 = 0
   978: 33 0b                    a4 = 0
   980: 33 0c                    a5 = 0
   982: 0a 12                    ecalli 18 // 'fetch'
   984: 01                       fallthrough
      :                          @71
   985: 95 18 d0 50 01           a1 = sp + 0x150d0
   990: 33 06 24                 s1 = 0x24
   993: 55 15 08 6f              jump @76 if s0 >=u 8
      :                          @72
   997: 95 17 78                 a0 = sp + 0x78
  1000: 7b 87 60 01              u64 [a1 + 0x160] = a0
  1004: 33 07 06                 a0 = 0x6
  1007: 7b 87 68 01              u64 [a1 + 0x168] = a0
  1011: 33 07 78 03 01           a0 = 0x10378
  1016: 7b 17 80 00              u64 [sp + 0x80] = a0
  1020: 49 21 88 00 01           u64 [sp + 136] = 0x1
  1025: 49 21 a0 00              u64 [sp + 160] = 0
  1029: 95 18 30 52 01           a1 = sp + 0x15230
  1034: 7b 18 90 00              u64 [sp + 0x90] = a1
  1038: 49 21 98 00 01           u64 [sp + 152] = 0x1
  1043: 95 17 c8 40 01           a0 = sp + 0x140c8
  1048: 95 18 80 00              a1 = sp + 0x80
  1052: 95 15 80 40 01           s0 = sp + 0x14080
  1057: 50 10 2e b0 12           ra = 46, jump @344
      :                          @73 [@dyn 23]
  1062: 82 5a 50                 a3 = u64 [s0 + 0x50]
  1065: 82 5b 58                 a4 = u64 [s0 + 0x58]
  1068: 82 55 48                 s0 = u64 [s0 + 0x48]
  1071: 33 07 02                 a0 = 0x2
  1074: 33 08                    a1 = 0
  1076: 33 09                    a2 = 0
  1078: 7b 1a 70                 u64 [sp + 0x70] = a3
  1081: 33 00 30                 ra = 0x30
  1084: 0a 64                    ecalli 100 // 'log'
  1086: 01                       fallthrough
      :                          @74 [@dyn 24]
  1087: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
  1092: 55 38 00 00 f0 61        jump @80 if a1 >=u 4293918720
      :                          @75
  1098: 82 17 58                 a0 = u64 [sp + 0x58]
  1101: 28 56 ff                 jump @69
      :                          @76
  1104: 82 17 70                 a0 = u64 [sp + 0x70]
  1107: 82 18 60                 a1 = u64 [sp + 0x60]
  1110: c8 87 07                 a0 = a0 + a1
  1113: 80 75                    s0 = u32 [a0]
  1115: 80 78 04                 a1 = u32 [a0 + 0x4]
  1118: 7b 18 70                 u64 [sp + 0x70] = a1
  1121: 80 77 08                 a0 = u32 [a0 + 0x8]
  1124: 7b 17 60                 u64 [sp + 0x60] = a0
  1127: 95 17 80 00              a0 = sp + 0x80
  1131: 33 09 00 40 01           a2 = 0x14000
  1136: 33 08                    a1 = 0
  1138: 50 10 32 8b 15           ra = 50, jump @412
      :                          @77 [@dyn 25]
  1143: 82 17 68                 a0 = u64 [sp + 0x68]
  1146: 97 77 20                 a0 = a0 << 0x20
  1149: 98 77 20                 a0 = a0 >> 0x20
  1152: 95 19 80 00              a2 = sp + 0x80
  1156: 33 0b 00 40 01           a4 = 0x14000
  1161: 82 18 58                 a1 = u64 [sp + 0x58]
  1164: 33 0a                    a3 = 0
  1166: 33 00 34                 ra = 0x34
  1169: 0a 11                    ecalli 17 // 'historical_lookup'
  1171: 01                       fallthrough
      :                          @78 [@dyn 26]
  1172: 95 78 01                 a1 = a0 + 0x1
  1175: 55 18 04 3e              jump @87 if a1 >=u 4
      :                          @79
  1179: 33 06                    s1 = 0
  1181: 33 07 00 00 01           a0 = 0x10000
  1186: 28 01 ff                 jump @69
      :                          @80
  1189: 33 07 40 00 03           a0 = 0x30040
  1194: 95 7c 00 00 10           a5 = a0 + 0x100000
  1199: 33 07 11 00 03           a0 = 0x30011
  1204: 82 12 70                 t0 = u64 [sp + 0x70]
  1207: 01                       fallthrough
      :                          @81
  1208: 82 c8                    a1 = u64 [a5]
  1210: c9 8c 09                 a2 = a5 - a1
  1213: ab 29 e6 fe              jump @69 if a2 != t0
      :                          @82
  1217: c9 58 09                 a2 = a1 - s0
  1220: 01                       fallthrough
      :                          @83
  1221: 82 ca                    a3 = u64 [a5]
  1223: ab 8a f1                 jump @81 if a3 != a1
      :                          @84
  1226: 7b c9                    u64 [a5] = a2
  1228: 33 0b                    a4 = 0
  1230: 01                       fallthrough
      :                          @85
  1231: ab 8a e9                 jump @81 if a3 != a1
      :                          @86
  1234: 28 d1 fe                 jump @69
      :                          @87
  1237: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1240: 53 18 03 c3              jump @79 if a1 <u 3
      :                          @88
  1244: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1247: 51 18 06 bc              jump @79 if a1 == 6
      :                          @89
  1251: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1254: 53 18 03 b5              jump @79 if a1 <u 3
      :                          @90
  1258: 7c 18 82 00              a1 = u8 [sp + 0x82]
  1262: 7c 19 81 00              a2 = u8 [sp + 0x81]
  1266: 7c 1a 80 00              a3 = u8 [sp + 0x80]
  1270: 97 88 10                 a1 = a1 << 0x10
  1273: 97 99 08                 a2 = a2 << 0x8
  1276: d4 98 08                 a1 = a1 | a2
  1279: d4 a8 08                 a1 = a1 | a3
  1282: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1285: ac 89 96                 jump @79 if a2 <u a1
      :                          @91
  1288: 7c 17 85 00              a0 = u8 [sp + 0x85]
  1292: 7c 1a 84 00              a3 = u8 [sp + 0x84]
  1296: 7c 1b 83 00              a4 = u8 [sp + 0x83]
  1300: 97 77 10                 a0 = a0 << 0x10
  1303: 97 aa 08                 a3 = a3 << 0x8
  1306: d4 a7 07                 a0 = a0 | a3
  1309: d4 b7 07                 a0 = a0 | a4
  1312: c9 89 09                 a2 = a2 - a1
  1315: ac 79 78 ff              jump @79 if a2 <u a0
      :                          @92
  1319: c9 79 06                 s1 = a2 - a0
  1322: 53 16 04 71 ff           jump @79 if s1 <u 4
      :                          @93
  1327: 95 12 8b 00              t0 = sp + 0x8b
  1331: c8 28 03                 t1 = a1 + t0
  1334: c8 37 09                 a2 = a0 + t1
  1337: 7c 9c 03                 a5 = u8 [a2 + 0x3]
  1340: 7b 15 08                 u64 [sp + 0x8] = s0
  1343: 7c 95 02                 s0 = u8 [a2 + 0x2]
  1346: 7c 9b                    a4 = u8 [a2]
  1348: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  1351: 97 cc 10                 a5 = a5 << 0x10
  1354: 97 55 08                 s0 = s0 << 0x8
  1357: d4 5c 0c                 a5 = a5 | s0
  1360: d4 ca 0a                 a3 = a3 | a5
  1363: 97 aa 08                 a3 = a3 << 0x8
  1366: d4 ba 0c                 a5 = a3 | a4
  1369: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1372: ac c6 3f ff              jump @79 if s1 <u a5
      :                          @94
  1376: 7c 1a 87 00              a3 = u8 [sp + 0x87]
  1380: 7c 1b 86 00              a4 = u8 [sp + 0x86]
  1384: 97 aa 08                 a3 = a3 << 0x8
  1387: 7c 16 8a 00              s1 = u8 [sp + 0x8a]
  1391: 7c 15 89 00              s0 = u8 [sp + 0x89]
  1395: d4 ba 0a                 a3 = a3 | a4
  1398: 7c 1b 88 00              a4 = u8 [sp + 0x88]
  1402: 97 66 10                 s1 = s1 << 0x10
  1405: 97 55 08                 s0 = s0 << 0x8
  1408: d4 65 05                 s0 = s0 | s1
  1411: d4 5b 0b                 a4 = a4 | s0
  1414: 33 04 80 40 01           t2 = 0x14080
  1419: c8 41 05                 s0 = sp + t2
  1422: 7b 5a                    u64 [s0] = a3
  1424: 7b 5b 08                 u64 [s0 + 0x8] = a4
  1427: 7b 52 10                 u64 [s0 + 0x10] = t0
  1430: 7b 58 18                 u64 [s0 + 0x18] = a1
  1433: 7b 53 20                 u64 [s0 + 0x20] = t1
  1436: 7b 57 28                 u64 [s0 + 0x28] = a0
  1439: 95 99 04                 a2 = a2 + 0x4
  1442: 7b 59 30                 u64 [s0 + 0x30] = a2
  1445: 49 11 68 ff ff ef        u64 [sp + 104] = 0xffffffffffefffff
  1451: 7b 5c 38                 u64 [s0 + 0x38] = a5
  1454: 7b 55 48                 u64 [s0 + 0x48] = s0
  1457: 95 17 88 40 01           a0 = sp + 0x14088
  1462: 7b 57 58                 u64 [s0 + 0x58] = a0
  1465: 95 17 90 40 01           a0 = sp + 0x14090
  1470: 7b 57 68                 u64 [s0 + 0x68] = a0
  1473: 95 17 98 40 01           a0 = sp + 0x14098
  1478: 7b 57 78                 u64 [s0 + 0x78] = a0
  1481: 95 17 a0 40 01           a0 = sp + 0x140a0
  1486: 7b 57 88 00              u64 [s0 + 0x88] = a0
  1490: 95 17 a8 40 01           a0 = sp + 0x140a8
  1495: 7b 57 98 00              u64 [s0 + 0x98] = a0
  1499: 95 17 b0 40 01           a0 = sp + 0x140b0
  1504: 7b 57 a8 00              u64 [s0 + 0xa8] = a0
  1508: 95 17 b8 40 01           a0 = sp + 0x140b8
  1513: 7b 57 b8 00              u64 [s0 + 0xb8] = a0
  1517: 33 07 78 00 01           a0 = 0x10078
  1522: 95 16 d0 50 01           s1 = sp + 0x150d0
  1527: 7b 67 60 01              u64 [s1 + 0x160] = a0
  1531: 95 17 c8 40 01           a0 = sp + 0x140c8
  1536: 7b 67 70 01              u64 [s1 + 0x170] = a0
  1540: 49 26 68 01 08           u64 [s1 + 360] = 0x8
  1545: 49 26 78 01 08           u64 [s1 + 376] = 0x8
  1550: 33 07 06                 a0 = 0x6
  1553: 7b 57 50                 u64 [s0 + 0x50] = a0
  1556: 7b 57 60                 u64 [s0 + 0x60] = a0
  1559: 7b 57 70                 u64 [s0 + 0x70] = a0
  1562: 7b 57 80 00              u64 [s0 + 0x80] = a0
  1566: 7b 57 90 00              u64 [s0 + 0x90] = a0
  1570: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  1574: 7b 57 b0 00              u64 [s0 + 0xb0] = a0
  1578: 7b 17 58                 u64 [sp + 0x58] = a0
  1581: 7b 57 c0 00              u64 [s0 + 0xc0] = a0
  1585: 49 26 80 01              u64 [s1 + 384] = 0
  1589: 95 17 58 51 01           a0 = sp + 0x15158
  1594: 95 18 30 52 01           a1 = sp + 0x15230
  1599: 50 10 36 92 10           ra = 54, jump @344
      :                          @95 [@dyn 27]
  1604: 82 65 90 00              s0 = u64 [s1 + 0x90]
  1608: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  1612: 82 66 88 00              s1 = u64 [s1 + 0x88]
  1616: 33 07 02                 a0 = 0x2
  1619: 33 08                    a1 = 0
  1621: 33 09                    a2 = 0
  1623: 64 5a                    a3 = s0
  1625: 33 00 38                 ra = 0x38
  1628: 0a 64                    ecalli 100 // 'log'
  1630: 01                       fallthrough
      :                          @96 [@dyn 28]
  1631: 82 17 68                 a0 = u64 [sp + 0x68]
  1634: c8 67 07                 a0 = a0 + s1
  1637: 53 37 00 00 f0 25        jump @102 if a0 <u 4293918720
      :                          @97
  1643: 33 07 40 00 03           a0 = 0x30040
  1648: 95 77 00 00 10           a0 = a0 + 0x100000
  1653: 01                       fallthrough
      :                          @98
  1654: 82 78                    a1 = u64 [a0]
  1656: c9 87 09                 a2 = a0 - a1
  1659: ab 59 0f                 jump @102 if a2 != s0
      :                          @99
  1662: c9 68 09                 a2 = a1 - s1
  1665: 01                       fallthrough
      :                          @100
  1666: 82 7a                    a3 = u64 [a0]
  1668: ab 8a f2                 jump @98 if a3 != a1
      :                          @101
  1671: 7b 79                    u64 [a0] = a2
  1673: 01                       fallthrough
      :                          @102
  1674: 95 15 80 40 01           s0 = sp + 0x14080
  1679: 82 57 30                 a0 = u64 [s0 + 0x30]
  1682: 82 58 38                 a1 = u64 [s0 + 0x38]
  1685: 33 09                    a2 = 0
  1687: 0a 14                    ecalli 20 // 'machine'
  1689: 7b 57 40                 u64 [s0 + 0x40] = a0
  1692: 95 17 c0 40 01           a0 = sp + 0x140c0
  1697: 95 16 d0 50 01           s1 = sp + 0x150d0
  1702: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1706: 82 17 58                 a0 = u64 [sp + 0x58]
  1709: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1713: 33 07 18 01 01           a0 = 0x10118
  1718: 7b 57 48                 u64 [s0 + 0x48] = a0
  1721: 95 17 58 51 01           a0 = sp + 0x15158
  1726: 7b 57 58                 u64 [s0 + 0x58] = a0
  1729: 49 15 50 01              u64 [s0 + 80] = 0x1
  1733: 49 15 60 01              u64 [s0 + 96] = 0x1
  1737: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  1747: 7b 17 58                 u64 [sp + 0x58] = a0
  1750: 49 15 68                 u64 [s0 + 104] = 0
  1753: 95 17 30 52 01           a0 = sp + 0x15230
  1758: 95 18 c8 40 01           a1 = sp + 0x140c8
  1763: 50 10 3a ee 0f           ra = 58, jump @344
      :                          @103 [@dyn 29]
  1768: 82 65 68 01              s0 = u64 [s1 + 0x168]
  1772: 82 6b 70 01              a4 = u64 [s1 + 0x170]
  1776: 82 66 60 01              s1 = u64 [s1 + 0x160]
  1780: 33 07 02                 a0 = 0x2
  1783: 33 08                    a1 = 0
  1785: 33 09                    a2 = 0
  1787: 64 5a                    a3 = s0
  1789: 33 00 3c                 ra = 0x3c
  1792: 0a 64                    ecalli 100 // 'log'
  1794: 01                       fallthrough
      :                          @104 [@dyn 30]
  1795: 82 17 68                 a0 = u64 [sp + 0x68]
  1798: c8 67 07                 a0 = a0 + s1
  1801: 53 37 00 00 f0 25        jump @110 if a0 <u 4293918720
      :                          @105
  1807: 33 07 40 00 03           a0 = 0x30040
  1812: 95 77 00 00 10           a0 = a0 + 0x100000
  1817: 01                       fallthrough
      :                          @106
  1818: 82 78                    a1 = u64 [a0]
  1820: c9 87 09                 a2 = a0 - a1
  1823: ab 59 0f                 jump @110 if a2 != s0
      :                          @107
  1826: c9 68 09                 a2 = a1 - s1
  1829: 01                       fallthrough
      :                          @108
  1830: 82 7a                    a3 = u64 [a0]
  1832: ab 8a f2                 jump @106 if a3 != a1
      :                          @109
  1835: 7b 79                    u64 [a0] = a2
  1837: 01                       fallthrough
      :                          @110
  1838: 95 18 80 40 01           a1 = sp + 0x14080
  1843: 82 87                    a0 = u64 [a1]
  1845: 7b 17 40                 u64 [sp + 0x40] = a0
  1848: 82 87 08                 a0 = u64 [a1 + 0x8]
  1851: 7b 17 38                 u64 [sp + 0x38] = a0
  1854: 82 87 10                 a0 = u64 [a1 + 0x10]
  1857: 7b 17 30                 u64 [sp + 0x30] = a0
  1860: 82 89 18                 a2 = u64 [a1 + 0x18]
  1863: 82 87 20                 a0 = u64 [a1 + 0x20]
  1866: 7b 17 28                 u64 [sp + 0x28] = a0
  1869: 82 87 40                 a0 = u64 [a1 + 0x40]
  1872: 82 88 28                 a1 = u64 [a1 + 0x28]
  1875: 7b 18 48                 u64 [sp + 0x48] = a1
  1878: 7b 19 50                 u64 [sp + 0x50] = a2
  1881: 95 99 ff 0f              a2 = a2 + 0xfff
  1885: 98 99 0c                 a2 = a2 >> 0xc
  1888: 82 16 58                 s1 = u64 [sp + 0x58]
  1891: d2 76 06                 s1 = s1 & a0
  1894: 33 08 10                 a1 = 0x10
  1897: 64 67                    a0 = s1
  1899: 0a 17                    ecalli 23 // 'zero'
  1901: 01                       fallthrough
      :                          @111
  1902: 51 07 17                 jump @113 if a0 == 0
      :                          @112
  1905: 33 0a 44 06 01           a3 = 0x10644
  1910: 33 07 02                 a0 = 0x2
  1913: 33 0b 3e                 a4 = 0x3e
  1916: 33 08                    a1 = 0
  1918: 33 09                    a2 = 0
  1920: 0a 64                    ecalli 100 // 'log'
  1922: 28 dc 00                 jump @126
      :                          @113
  1925: 82 17 48                 a0 = u64 [sp + 0x48]
  1928: 95 77 ff 0f              a0 = a0 + 0xfff
  1932: 98 77 0c                 a0 = a0 >> 0xc
  1935: 82 19 40                 a2 = u64 [sp + 0x40]
  1938: c8 79 09                 a2 = a2 + a0
  1941: 82 18 50                 a1 = u64 [sp + 0x50]
  1944: 95 87 ff ff 00           a0 = a1 + 0xffff
  1949: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1954: 95 77 00 00 02           a0 = a0 + 0x20000
  1959: 7b 17 58                 u64 [sp + 0x58] = a0
  1962: 98 78 0c                 a1 = a0 >> 0xc
  1965: 64 67                    a0 = s1
  1967: 0a 17                    ecalli 23 // 'zero'
  1969: 01                       fallthrough
      :                          @114
  1970: 51 07 17                 jump @116 if a0 == 0
      :                          @115
  1973: 33 0a 06 06 01           a3 = 0x10606
  1978: 33 07 02                 a0 = 0x2
  1981: 33 0b 3e                 a4 = 0x3e
  1984: 33 08                    a1 = 0
  1986: 33 09                    a2 = 0
  1988: 0a 64                    ecalli 100 // 'log'
  1990: 28 98 00                 jump @126
      :                          @116
  1993: 82 17 38                 a0 = u64 [sp + 0x38]
  1996: 95 75 ff 0f              s0 = a0 + 0xfff
  2000: 98 59 0c                 a2 = s0 >> 0xc
  2003: 84 57 00 f0              a0 = s0 & 0xfffffffffffff000
  2007: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2017: c9 78 08                 a1 = a1 - a0
  2020: 98 88 0c                 a1 = a1 >> 0xc
  2023: 64 67                    a0 = s1
  2025: 0a 17                    ecalli 23 // 'zero'
  2027: 01                       fallthrough
      :                          @117
  2028: 51 07 16                 jump @119 if a0 == 0
      :                          @118
  2031: 33 0a ca 05 01           a3 = 0x105ca
  2036: 33 07 02                 a0 = 0x2
  2039: 33 0b 3c                 a4 = 0x3c
  2042: 33 08                    a1 = 0
  2044: 33 09                    a2 = 0
  2046: 0a 64                    ecalli 100 // 'log'
  2048: 28 5e                    jump @126
      :                          @119
  2050: 33 09 00 00 01           a2 = 0x10000
  2055: 64 67                    a0 = s1
  2057: 82 18 30                 a1 = u64 [sp + 0x30]
  2060: 82 1a 50                 a3 = u64 [sp + 0x50]
  2063: 0a 16                    ecalli 22 // 'poke'
  2065: 01                       fallthrough
      :                          @120
  2066: 51 07 16                 jump @122 if a0 == 0
      :                          @121
  2069: 33 0a 8c 05 01           a3 = 0x1058c
  2074: 33 07 02                 a0 = 0x2
  2077: 33 0b 3e                 a4 = 0x3e
  2080: 33 08                    a1 = 0
  2082: 33 09                    a2 = 0
  2084: 0a 64                    ecalli 100 // 'log'
  2086: 28 38                    jump @126
      :                          @122
  2088: 64 67                    a0 = s1
  2090: 82 18 28                 a1 = u64 [sp + 0x28]
  2093: 82 19 58                 a2 = u64 [sp + 0x58]
  2096: 82 1a 48                 a3 = u64 [sp + 0x48]
  2099: 0a 16                    ecalli 22 // 'poke'
  2101: 01                       fallthrough
      :                          @123
  2102: 51 07 16                 jump @125 if a0 == 0
      :                          @124
  2105: 33 0a 4e 05 01           a3 = 0x1054e
  2110: 33 07 02                 a0 = 0x2
  2113: 33 0b 3e                 a4 = 0x3e
  2116: 33 08                    a1 = 0
  2118: 33 09                    a2 = 0
  2120: 0a 64                    ecalli 100 // 'log'
  2122: 28 14                    jump @126
      :                          @125
  2124: 33 0a 20 05 01           a3 = 0x10520
  2129: 33 07 02                 a0 = 0x2
  2132: 33 0b 2e                 a4 = 0x2e
  2135: 33 08                    a1 = 0
  2137: 33 09                    a2 = 0
  2139: 0a 64                    ecalli 100 // 'log'
  2141: 01                       fallthrough
      :                          @126
  2142: 33 05 08 10              s0 = 0x1008
  2146: 95 17 c8 40 01           a0 = sp + 0x140c8
  2151: 33 08                    a1 = 0
  2153: 33 09 08 10              a2 = 0x1008
  2157: 50 10 3e 90 11           ra = 62, jump @412
      :                          @127 [@dyn 31]
  2162: 95 17 d0 50 01           a0 = sp + 0x150d0
  2167: 49 07                    u64 [a0 + 0] = 0
  2169: 95 17 c8 40 01           a0 = sp + 0x140c8
  2174: 33 0a 06                 a3 = 0x6
  2177: 33 08                    a1 = 0
  2179: 7b 15 30                 u64 [sp + 0x30] = s0
  2182: 64 59                    a2 = s0
  2184: 33 0b                    a4 = 0
  2186: 33 0c                    a5 = 0
  2188: 0a 12                    ecalli 18 // 'fetch'
  2190: 01                       fallthrough
      :                          @128
  2191: 95 18 d0 50 01           a1 = sp + 0x150d0
  2196: 7b 87 18                 u64 [a1 + 0x18] = a0
  2199: 33 0a                    a3 = 0
  2201: 51 17 ff ad 02           jump @155 if a0 == 4294967295
      :                          @129
  2206: 33 07 06                 a0 = 0x6
  2209: 7b 17 58                 u64 [sp + 0x58] = a0
  2212: 33 07 58 01 01           a0 = 0x10158
  2217: 7b 17 28                 u64 [sp + 0x28] = a0
  2220: 33 07 a0 01 01           a0 = 0x101a0
  2225: 7b 17 20                 u64 [sp + 0x20] = a0
  2228: 33 07 00 00 01           a0 = 0x10000
  2233: 7b 17 18                 u64 [sp + 0x18] = a0
  2236: 33 06 40 00 03           s1 = 0x30040
  2241: 95 66 00 00 10           s1 = s1 + 0x100000
  2246: 33 07 f8 01 01           a0 = 0x101f8
  2251: 7b 17 10                 u64 [sp + 0x10] = a0
  2254: 28 3c                    jump @132
      :                          @130
  2256: 95 17 d0 50 01           a0 = sp + 0x150d0
  2261: 82 7b                    a4 = u64 [a0]
  2263: 95 bb 01                 a4 = a4 + 0x1
  2266: 7b 7b                    u64 [a0] = a4
  2268: 95 17 c8 40 01           a0 = sp + 0x140c8
  2273: 33 0a 06                 a3 = 0x6
  2276: 33 08                    a1 = 0
  2278: 82 19 30                 a2 = u64 [sp + 0x30]
  2281: 33 0c                    a5 = 0
  2283: 0a 12                    ecalli 18 // 'fetch'
  2285: 01                       fallthrough
      :                          @131
  2286: 82 18 48                 a1 = u64 [sp + 0x48]
  2289: 97 88 0c                 a1 = a1 << 0xc
  2292: 82 1a 50                 a3 = u64 [sp + 0x50]
  2295: 82 19 40                 a2 = u64 [sp + 0x40]
  2298: da 98 0a                 a3 = a1 if a2 == 0
  2301: 95 18 d0 50 01           a1 = sp + 0x150d0
  2306: 7b 87 18                 u64 [a1 + 0x18] = a0
  2309: 51 17 ff 41 02           jump @155 if a0 == 4294967295
      :                          @132
  2314: 7b 1a 50                 u64 [sp + 0x50] = a3
  2317: 7b 88 88 00              u64 [a1 + 0x88] = a1
  2321: 82 17 58                 a0 = u64 [sp + 0x58]
  2324: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2328: 95 19 e8 50 01           a2 = sp + 0x150e8
  2333: 7b 89 98 00              u64 [a1 + 0x98] = a2
  2337: 7b 87 a0 00              u64 [a1 + 0xa0] = a0
  2341: 82 17 28                 a0 = u64 [sp + 0x28]
  2344: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2348: 49 28 68 01 02           u64 [a1 + 360] = 0x2
  2353: 49 28 80 01              u64 [a1 + 384] = 0
  2357: 95 19 58 51 01           a2 = sp + 0x15158
  2362: 7b 89 70 01              u64 [a1 + 0x170] = a2
  2366: 49 28 78 01 02           u64 [a1 + 376] = 0x2
  2371: 95 17 f0 50 01           a0 = sp + 0x150f0
  2376: 95 18 30 52 01           a1 = sp + 0x15230
  2381: 50 10 40 84 0d           ra = 64, jump @344
      :                          @133 [@dyn 32]
  2386: 95 17 d0 50 01           a0 = sp + 0x150d0
  2391: 82 75 28                 s0 = u64 [a0 + 0x28]
  2394: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2397: 82 77 20                 a0 = u64 [a0 + 0x20]
  2400: 7b 17 48                 u64 [sp + 0x48] = a0
  2403: 33 07 02                 a0 = 0x2
  2406: 33 08                    a1 = 0
  2408: 33 09                    a2 = 0
  2410: 64 5a                    a3 = s0
  2412: 33 00 42                 ra = 0x42
  2415: 0a 64                    ecalli 100 // 'log'
  2417: 01                       fallthrough
      :                          @134 [@dyn 33]
  2418: 82 1b 48                 a4 = u64 [sp + 0x48]
  2421: 82 17 68                 a0 = u64 [sp + 0x68]
  2424: c8 b7 07                 a0 = a0 + a4
  2427: 53 37 00 00 f0 1a        jump @139 if a0 <u 4293918720
      :                          @135
  2433: 82 67                    a0 = u64 [s1]
  2435: c9 76 08                 a1 = s1 - a0
  2438: ab 58 0f                 jump @139 if a1 != s0
      :                          @136
  2441: c9 b7 08                 a1 = a0 - a4
  2444: 01                       fallthrough
      :                          @137
  2445: 82 69                    a2 = u64 [s1]
  2447: ab 79 f2                 jump @135 if a2 != a0
      :                          @138
  2450: 7b 68                    u64 [s1] = a1
  2452: 01                       fallthrough
      :                          @139
  2453: 95 18 80 40 01           a1 = sp + 0x14080
  2458: 80 87 48                 a0 = u32 [a1 + 0x48]
  2461: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2464: 95 19 d0 50 01           a2 = sp + 0x150d0
  2469: 7b 97 08                 u64 [a2 + 0x8] = a0
  2472: 7b 98 10                 u64 [a2 + 0x10] = a1
  2475: 82 99                    a2 = u64 [a2]
  2477: 7b 19 40                 u64 [sp + 0x40] = a2
  2480: 33 09 01                 a2 = 0x1
  2483: 7b 18 48                 u64 [sp + 0x48] = a1
  2486: 0a 17                    ecalli 23 // 'zero'
  2488: 95 19 d0 50 01           a2 = sp + 0x150d0
  2493: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  2497: 95 17 d8 50 01           a0 = sp + 0x150d8
  2502: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2506: 82 17 58                 a0 = u64 [sp + 0x58]
  2509: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2513: 95 18 e0 50 01           a1 = sp + 0x150e0
  2518: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2522: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2526: 95 18 c8 51 01           a1 = sp + 0x151c8
  2531: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2535: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2539: 82 17 20                 a0 = u64 [sp + 0x20]
  2542: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2546: 49 29 90 00 03           u64 [a2 + 144] = 0x3
  2551: 49 29 a8 00              u64 [a2 + 168] = 0
  2555: 95 17 30 52 01           a0 = sp + 0x15230
  2560: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2564: 49 29 a0 00 03           u64 [a2 + 160] = 0x3
  2569: 95 17 f0 50 01           a0 = sp + 0x150f0
  2574: 95 18 58 51 01           a1 = sp + 0x15158
  2579: 50 10 44 be 0c           ra = 68, jump @344
      :                          @140 [@dyn 34]
  2584: 95 17 d0 50 01           a0 = sp + 0x150d0
  2589: 82 75 28                 s0 = u64 [a0 + 0x28]
  2592: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2595: 82 77 20                 a0 = u64 [a0 + 0x20]
  2598: 7b 17 38                 u64 [sp + 0x38] = a0
  2601: 33 07 02                 a0 = 0x2
  2604: 33 08                    a1 = 0
  2606: 33 09                    a2 = 0
  2608: 64 5a                    a3 = s0
  2610: 33 00 46                 ra = 0x46
  2613: 0a 64                    ecalli 100 // 'log'
  2615: 01                       fallthrough
      :                          @141 [@dyn 35]
  2616: 82 1b 38                 a4 = u64 [sp + 0x38]
  2619: 82 17 68                 a0 = u64 [sp + 0x68]
  2622: c8 b7 07                 a0 = a0 + a4
  2625: 53 37 00 00 f0 1a        jump @146 if a0 <u 4293918720
      :                          @142
  2631: 82 67                    a0 = u64 [s1]
  2633: c9 76 08                 a1 = s1 - a0
  2636: ab 58 0f                 jump @146 if a1 != s0
      :                          @143
  2639: c9 b7 08                 a1 = a0 - a4
  2642: 01                       fallthrough
      :                          @144
  2643: 82 69                    a2 = u64 [s1]
  2645: ab 79 f2                 jump @142 if a2 != a0
      :                          @145
  2648: 7b 68                    u64 [s1] = a1
  2650: 01                       fallthrough
      :                          @146
  2651: 95 1a d0 50 01           a3 = sp + 0x150d0
  2656: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2659: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2662: 95 18 c8 40 01           a1 = sp + 0x140c8
  2667: 7b a8 00 01              u64 [a3 + 0x100] = a1
  2671: 97 99 0c                 a2 = a2 << 0xc
  2674: 7b a9 08 01              u64 [a3 + 0x108] = a2
  2678: 33 0a 00 10              a3 = 0x1000
  2682: 95 18 d0 40 01           a1 = sp + 0x140d0
  2687: 0a 16                    ecalli 22 // 'poke'
  2689: 95 19 d0 50 01           a2 = sp + 0x150d0
  2694: 7b 97 20 01              u64 [a2 + 0x120] = a0
  2698: 95 17 d8 50 01           a0 = sp + 0x150d8
  2703: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2707: 82 17 58                 a0 = u64 [sp + 0x58]
  2710: 7b 97 68 01              u64 [a2 + 0x168] = a0
  2714: 95 18 d0 51 01           a1 = sp + 0x151d0
  2719: 7b 98 70 01              u64 [a2 + 0x170] = a1
  2723: 7b 97 78 01              u64 [a2 + 0x178] = a0
  2727: 95 18 d8 51 01           a1 = sp + 0x151d8
  2732: 7b 98 80 01              u64 [a2 + 0x180] = a1
  2736: 7b 97 88 01              u64 [a2 + 0x188] = a0
  2740: 82 18 18                 a1 = u64 [sp + 0x18]
  2743: 7b 98 90 01              u64 [a2 + 0x190] = a1
  2747: 7b 97 98 01              u64 [a2 + 0x198] = a0
  2751: 95 18 f0 51 01           a1 = sp + 0x151f0
  2756: 7b 98 a0 01              u64 [a2 + 0x1a0] = a1
  2760: 7b 97 a8 01              u64 [a2 + 0x1a8] = a0
  2764: 82 17 10                 a0 = u64 [sp + 0x10]
  2767: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2771: 49 29 90 00 05           u64 [a2 + 144] = 0x5
  2776: 49 29 a8 00              u64 [a2 + 168] = 0
  2780: 95 17 30 52 01           a0 = sp + 0x15230
  2785: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2789: 49 29 a0 00 05           u64 [a2 + 160] = 0x5
  2794: 95 17 f0 50 01           a0 = sp + 0x150f0
  2799: 95 18 58 51 01           a1 = sp + 0x15158
  2804: 50 10 48 dd 0b           ra = 72, jump @344
      :                          @147 [@dyn 36]
  2809: 95 17 d0 50 01           a0 = sp + 0x150d0
  2814: 82 75 28                 s0 = u64 [a0 + 0x28]
  2817: 82 7b 30                 a4 = u64 [a0 + 0x30]
  2820: 82 77 20                 a0 = u64 [a0 + 0x20]
  2823: 7b 17 38                 u64 [sp + 0x38] = a0
  2826: 33 07 02                 a0 = 0x2
  2829: 33 08                    a1 = 0
  2831: 33 09                    a2 = 0
  2833: 64 5a                    a3 = s0
  2835: 33 00 4a                 ra = 0x4a
  2838: 0a 64                    ecalli 100 // 'log'
  2840: 01                       fallthrough
      :                          @148 [@dyn 37]
  2841: 82 1b 38                 a4 = u64 [sp + 0x38]
  2844: 82 17 68                 a0 = u64 [sp + 0x68]
  2847: c8 b7 07                 a0 = a0 + a4
  2850: 53 37 00 00 f0 ae fd     jump @130 if a0 <u 4293918720
      :                          @149
  2857: 82 67                    a0 = u64 [s1]
  2859: c9 76 08                 a1 = s1 - a0
  2862: ab 58 a2 fd              jump @130 if a1 != s0
      :                          @150
  2866: c9 b7 08                 a1 = a0 - a4
  2869: 01                       fallthrough
      :                          @151
  2870: 82 69                    a2 = u64 [s1]
  2872: ab 79 f1                 jump @149 if a2 != a0
      :                          @152
  2875: 7b 68                    u64 [s1] = a1
  2877: 33 0a                    a3 = 0
  2879: 01                       fallthrough
      :                          @153
  2880: ab 79 e9                 jump @149 if a2 != a0
      :                          @154
  2883: 28 8d fd                 jump @130
      :                          @155
  2886: 49 18 50                 u64 [a1 + 80] = 0
  2889: 49 18 48                 u64 [a1 + 72] = 0
  2892: 49 18 40                 u64 [a1 + 64] = 0
  2895: 49 18 38                 u64 [a1 + 56] = 0
  2898: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  2908: 7b 87 20                 u64 [a1 + 0x20] = a0
  2911: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  2921: 7b 87 28                 u64 [a1 + 0x28] = a0
  2924: 82 87                    a0 = u64 [a1]
  2926: 49 18 30                 u64 [a1 + 48] = 0
  2929: 49 28 80 00              u64 [a1 + 128] = 0
  2933: 7b 8a 58                 u64 [a1 + 0x58] = a3
  2936: 97 77 0c                 a0 = a0 << 0xc
  2939: 7b 87 60                 u64 [a1 + 0x60] = a0
  2942: 82 17 08                 a0 = u64 [sp + 0x8]
  2945: 7b 87 68                 u64 [a1 + 0x68] = a0
  2948: 82 17 70                 a0 = u64 [sp + 0x70]
  2951: 7b 87 70                 u64 [a1 + 0x70] = a0
  2954: 82 17 60                 a0 = u64 [sp + 0x60]
  2957: 7b 87 78                 u64 [a1 + 0x78] = a0
  2960: 95 17 f0 50 01           a0 = sp + 0x150f0
  2965: 7b 87 20 01              u64 [a1 + 0x120] = a0
  2969: 33 07 0a                 a0 = 0xa
  2972: 7b 87 28 01              u64 [a1 + 0x128] = a0
  2976: 33 07 68 02 01           a0 = 0x10268
  2981: 7b 87 60 01              u64 [a1 + 0x160] = a0
  2985: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  2990: 49 28 80 01              u64 [a1 + 384] = 0
  2994: 95 17 f0 51 01           a0 = sp + 0x151f0
  2999: 7b 87 70 01              u64 [a1 + 0x170] = a0
  3003: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3008: 95 17 58 51 01           a0 = sp + 0x15158
  3013: 95 16 d0 50 01           s1 = sp + 0x150d0
  3018: 95 18 30 52 01           a1 = sp + 0x15230
  3023: 50 10 4c 02 0b           ra = 76, jump @344
      :                          @156 [@dyn 38]
  3028: 82 65 90 00              s0 = u64 [s1 + 0x90]
  3032: 82 6b 98 00              a4 = u64 [s1 + 0x98]
  3036: 82 66 88 00              s1 = u64 [s1 + 0x88]
  3040: 33 07 02                 a0 = 0x2
  3043: 33 08                    a1 = 0
  3045: 33 09                    a2 = 0
  3047: 64 5a                    a3 = s0
  3049: 33 00 4e                 ra = 0x4e
  3052: 0a 64                    ecalli 100 // 'log'
  3054: 01                       fallthrough
      :                          @157 [@dyn 39]
  3055: 82 17 68                 a0 = u64 [sp + 0x68]
  3058: c8 67 07                 a0 = a0 + s1
  3061: 53 37 00 00 f0 25        jump @163 if a0 <u 4293918720
      :                          @158
  3067: 33 07 40 00 03           a0 = 0x30040
  3072: 95 77 00 00 10           a0 = a0 + 0x100000
  3077: 01                       fallthrough
      :                          @159
  3078: 82 78                    a1 = u64 [a0]
  3080: c9 87 09                 a2 = a0 - a1
  3083: ab 59 0f                 jump @163 if a2 != s0
      :                          @160
  3086: c9 68 09                 a2 = a1 - s1
  3089: 01                       fallthrough
      :                          @161
  3090: 82 7a                    a3 = u64 [a0]
  3092: ab 8a f2                 jump @159 if a3 != a1
      :                          @162
  3095: 7b 79                    u64 [a0] = a2
  3097: 01                       fallthrough
      :                          @163
  3098: 95 14 d0 50 01           t2 = sp + 0x150d0
  3103: 82 43 20                 t1 = u64 [t2 + 0x20]
  3106: 82 49 28                 a2 = u64 [t2 + 0x28]
  3109: 82 40 30                 ra = u64 [t2 + 0x30]
  3112: 82 4a 38                 a3 = u64 [t2 + 0x38]
  3115: 82 4b 40                 a4 = u64 [t2 + 0x40]
  3118: 82 4c 48                 a5 = u64 [t2 + 0x48]
  3121: 82 46 50                 s1 = u64 [t2 + 0x50]
  3124: 82 45 58                 s0 = u64 [t2 + 0x58]
  3127: 82 42 60                 t0 = u64 [t2 + 0x60]
  3130: 49 24 88 00 00 00 01     u64 [t2 + 136] = 0x10000
  3137: 82 47 68                 a0 = u64 [t2 + 0x68]
  3140: 7b 43 90 00              u64 [t2 + 0x90] = t1
  3144: 82 48 70                 a1 = u64 [t2 + 0x70]
  3147: 7b 49 98 00              u64 [t2 + 0x98] = a2
  3151: 82 49 78                 a2 = u64 [t2 + 0x78]
  3154: 7b 40 a0 00              u64 [t2 + 0xa0] = ra
  3158: 82 43 80 00              t1 = u64 [t2 + 0x80]
  3162: 7b 4a a8 00              u64 [t2 + 0xa8] = a3
  3166: 7b 4b b0 00              u64 [t2 + 0xb0] = a4
  3170: 7b 4c b8 00              u64 [t2 + 0xb8] = a5
  3174: 7b 46 c0 00              u64 [t2 + 0xc0] = s1
  3178: 7b 45 c8 00              u64 [t2 + 0xc8] = s0
  3182: 7b 42 d0 00              u64 [t2 + 0xd0] = t0
  3186: 7b 47 d8 00              u64 [t2 + 0xd8] = a0
  3190: 7b 48 e0 00              u64 [t2 + 0xe0] = a1
  3194: 95 18 d0 50 01           a1 = sp + 0x150d0
  3199: 7b 89 e8 00              u64 [a1 + 0xe8] = a2
  3203: 7b 83 f0 00              u64 [a1 + 0xf0] = t1
  3207: 33 07 06                 a0 = 0x6
  3210: 7b 17 60                 u64 [sp + 0x60] = a0
  3213: 33 07 a0 02 01           a0 = 0x102a0
  3218: 7b 17 38                 u64 [sp + 0x38] = a0
  3221: 33 07 d8 02 01           a0 = 0x102d8
  3226: 7b 17 30                 u64 [sp + 0x30] = a0
  3229: 33 06 40 00 03           s1 = 0x30040
  3234: 95 66 00 00 10           s1 = s1 + 0x100000
  3239: 01                       fallthrough
      :                          @164
  3240: 7b 88 08 01              u64 [a1 + 0x108] = a1
  3244: 82 17 60                 a0 = u64 [sp + 0x60]
  3247: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3251: 82 17 38                 a0 = u64 [sp + 0x38]
  3254: 7b 87 60 01              u64 [a1 + 0x160] = a0
  3258: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  3263: 49 28 80 01              u64 [a1 + 384] = 0
  3267: 95 19 d8 51 01           a2 = sp + 0x151d8
  3272: 7b 89 70 01              u64 [a1 + 0x170] = a2
  3276: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  3281: 95 17 f0 51 01           a0 = sp + 0x151f0
  3286: 95 18 30 52 01           a1 = sp + 0x15230
  3291: 50 10 50 f6 09           ra = 80, jump @344
      :                          @165 [@dyn 40]
  3296: 95 17 d0 50 01           a0 = sp + 0x150d0
  3301: 82 75 28 01              s0 = u64 [a0 + 0x128]
  3305: 82 7b 30 01              a4 = u64 [a0 + 0x130]
  3309: 82 77 20 01              a0 = u64 [a0 + 0x120]
  3313: 7b 17 70                 u64 [sp + 0x70] = a0
  3316: 33 07 02                 a0 = 0x2
  3319: 33 08                    a1 = 0
  3321: 33 09                    a2 = 0
  3323: 64 5a                    a3 = s0
  3325: 33 00 52                 ra = 0x52
  3328: 0a 64                    ecalli 100 // 'log'
  3330: 01                       fallthrough
      :                          @166 [@dyn 41]
  3331: 82 1b 70                 a4 = u64 [sp + 0x70]
  3334: 82 17 68                 a0 = u64 [sp + 0x68]
  3337: c8 b7 07                 a0 = a0 + a4
  3340: 53 37 00 00 f0 1a        jump @171 if a0 <u 4293918720
      :                          @167
  3346: 82 67                    a0 = u64 [s1]
  3348: c9 76 08                 a1 = s1 - a0
  3351: ab 58 0f                 jump @171 if a1 != s0
      :                          @168
  3354: c9 b7 08                 a1 = a0 - a4
  3357: 01                       fallthrough
      :                          @169
  3358: 82 69                    a2 = u64 [s1]
  3360: ab 79 f2                 jump @167 if a2 != a0
      :                          @170
  3363: 7b 68                    u64 [s1] = a1
  3365: 01                       fallthrough
      :                          @171
  3366: 95 17 80 40 01           a0 = sp + 0x14080
  3371: 82 77 40                 a0 = u64 [a0 + 0x40]
  3374: 95 18 58 51 01           a1 = sp + 0x15158
  3379: 0a 19                    ecalli 25 // 'invoke'
  3381: 95 19 d0 50 01           a2 = sp + 0x150d0
  3386: 7b 97 f8 00              u64 [a2 + 0xf8] = a0
  3390: 7b 98 00 01              u64 [a2 + 0x100] = a1
  3394: 95 17 c0 40 01           a0 = sp + 0x140c0
  3399: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3403: 82 17 60                 a0 = u64 [sp + 0x60]
  3406: 7b 97 68 01              u64 [a2 + 0x168] = a0
  3410: 95 18 c8 51 01           a1 = sp + 0x151c8
  3415: 7b 98 70 01              u64 [a2 + 0x170] = a1
  3419: 7b 97 78 01              u64 [a2 + 0x178] = a0
  3423: 95 18 d0 51 01           a1 = sp + 0x151d0
  3428: 7b 98 80 01              u64 [a2 + 0x180] = a1
  3432: 7b 97 88 01              u64 [a2 + 0x188] = a0
  3436: 82 17 30                 a0 = u64 [sp + 0x30]
  3439: 7b 97 20 01              u64 [a2 + 0x120] = a0
  3443: 49 29 28 01 03           u64 [a2 + 296] = 0x3
  3448: 49 29 40 01              u64 [a2 + 320] = 0
  3452: 95 17 30 52 01           a0 = sp + 0x15230
  3457: 7b 97 30 01              u64 [a2 + 0x130] = a0
  3461: 49 29 38 01 03           u64 [a2 + 312] = 0x3
  3466: 95 17 d8 51 01           a0 = sp + 0x151d8
  3471: 95 18 f0 51 01           a1 = sp + 0x151f0
  3476: 50 10 54 3d 09           ra = 84, jump @344
      :                          @172 [@dyn 42]
  3481: 95 17 d0 50 01           a0 = sp + 0x150d0
  3486: 82 75 10 01              s0 = u64 [a0 + 0x110]
  3490: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  3494: 82 77 08 01              a0 = u64 [a0 + 0x108]
  3498: 7b 17 70                 u64 [sp + 0x70] = a0
  3501: 33 07 02                 a0 = 0x2
  3504: 33 08                    a1 = 0
  3506: 33 09                    a2 = 0
  3508: 64 5a                    a3 = s0
  3510: 33 00 56                 ra = 0x56
  3513: 0a 64                    ecalli 100 // 'log'
  3515: 01                       fallthrough
      :                          @173 [@dyn 43]
  3516: 82 1b 70                 a4 = u64 [sp + 0x70]
  3519: 82 17 68                 a0 = u64 [sp + 0x68]
  3522: c8 b7 07                 a0 = a0 + a4
  3525: 53 37 00 00 f0 1a        jump @178 if a0 <u 4293918720
      :                          @174
  3531: 82 67                    a0 = u64 [s1]
  3533: c9 76 08                 a1 = s1 - a0
  3536: ab 58 0f                 jump @178 if a1 != s0
      :                          @175
  3539: c9 b7 08                 a1 = a0 - a4
  3542: 01                       fallthrough
      :                          @176
  3543: 82 69                    a2 = u64 [s1]
  3545: ab 79 f2                 jump @174 if a2 != a0
      :                          @177
  3548: 7b 68                    u64 [s1] = a1
  3550: 01                       fallthrough
      :                          @178
  3551: 95 18 d0 50 01           a1 = sp + 0x150d0
  3556: 82 87 f8 00              a0 = u64 [a1 + 0xf8]
  3560: 82 88 00 01              a1 = u64 [a1 + 0x100]
  3564: 85 77 03                 a0 = a0 ^ 0x3
  3567: 85 88 64                 a1 = a1 ^ 0x64
  3570: d4 87 05                 s0 = a0 | a1
  3573: 95 17 f0 50 01           a0 = sp + 0x150f0
  3578: 33 09 68                 a2 = 0x68
  3581: 95 18 60 51 01           a1 = sp + 0x15160
  3586: 50 10 58 49 0b           ra = 88, jump @394
      :                          @179 [@dyn 44]
  3591: 95 17 d0 50 01           a0 = sp + 0x150d0
  3596: 82 78 58                 a1 = u64 [a0 + 0x58]
  3599: 7b 18 70                 u64 [sp + 0x70] = a1
  3602: 52 05 93 00              jump @182 if s0 != 0
      :                          @180
  3606: 82 78 60                 a1 = u64 [a0 + 0x60]
  3609: 7b 18 48                 u64 [sp + 0x48] = a1
  3612: 82 75 68                 s0 = u64 [a0 + 0x68]
  3615: 7b 15 40                 u64 [sp + 0x40] = s0
  3618: 82 78 70                 a1 = u64 [a0 + 0x70]
  3621: 7b 18 58                 u64 [sp + 0x58] = a1
  3624: 82 78 78                 a1 = u64 [a0 + 0x78]
  3627: 7b 18 50                 u64 [sp + 0x50] = a1
  3630: 49 27 58 01              u64 [a0 + 344] = 0
  3634: 49 27 50 01              u64 [a0 + 336] = 0
  3638: 49 27 48 01              u64 [a0 + 328] = 0
  3642: 49 27 40 01              u64 [a0 + 320] = 0
  3646: 49 27 38 01              u64 [a0 + 312] = 0
  3650: 49 27 30 01              u64 [a0 + 304] = 0
  3654: 49 27 28 01              u64 [a0 + 296] = 0
  3658: 49 27 20 01              u64 [a0 + 288] = 0
  3662: 95 17 30 52 01           a0 = sp + 0x15230
  3667: 33 09 00 01              a2 = 0x100
  3671: 33 08                    a1 = 0
  3673: 50 10 5a a4 0b           ra = 90, jump @412
      :                          @181 [@dyn 45]
  3678: 95 17 80 40 01           a0 = sp + 0x14080
  3683: 82 77 40                 a0 = u64 [a0 + 0x40]
  3686: 95 18 f0 51 01           a1 = sp + 0x151f0
  3691: 82 19 48                 a2 = u64 [sp + 0x48]
  3694: 64 5a                    a3 = s0
  3696: 0a 15                    ecalli 21 // 'peek'
  3698: 95 17 80 40 01           a0 = sp + 0x14080
  3703: 82 77 40                 a0 = u64 [a0 + 0x40]
  3706: 95 18 30 52 01           a1 = sp + 0x15230
  3711: 82 19 58                 a2 = u64 [sp + 0x58]
  3714: 82 15 50                 s0 = u64 [sp + 0x50]
  3717: 64 5a                    a3 = s0
  3719: 0a 15                    ecalli 21 // 'peek'
  3721: 95 18 f0 51 01           a1 = sp + 0x151f0
  3726: 95 1a 30 52 01           a3 = sp + 0x15230
  3731: 82 17 70                 a0 = u64 [sp + 0x70]
  3734: 82 19 40                 a2 = u64 [sp + 0x40]
  3737: 64 5b                    a4 = s0
  3739: 0a 64                    ecalli 100 // 'log'
  3741: 95 18 d0 50 01           a1 = sp + 0x150d0
  3746: 28 06 fe                 jump @164
      :                          @182
  3749: 95 17 d0 40 01           a0 = sp + 0x140d0
  3754: 33 09 00 10              a2 = 0x1000
  3758: 33 05 00 10              s0 = 0x1000
  3762: 33 08                    a1 = 0
  3764: 50 10 5c 49 0b           ra = 92, jump @412
      :                          @183 [@dyn 46]
  3769: 95 1a 80 40 01           a3 = sp + 0x14080
  3774: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3777: 7a a7 48                 u32 [a3 + 0x48] = a0
  3780: 82 16 70                 s1 = u64 [sp + 0x70]
  3783: 98 68 0c                 a1 = s1 >> 0xc
  3786: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3789: 33 0a 00 10              a3 = 0x1000
  3793: 95 18 d0 40 01           a1 = sp + 0x140d0
  3798: 64 69                    a2 = s1
  3800: 0a 15                    ecalli 21 // 'peek'
  3802: 83 55 08                 i32 s0 = s0 + 0x8
  3805: 95 17 c8 40 01           a0 = sp + 0x140c8
  3810: 64 58                    a1 = s0
  3812: 0a 13                    ecalli 19 // 'export'
  3814: 33 09 00 10              a2 = 0x1000
  3818: 95 17 d0 40 01           a0 = sp + 0x140d0
  3823: 33 08                    a1 = 0
  3825: 50 10 5e 0c 0b           ra = 94, jump @412
      :                          @184 [@dyn 47]
  3830: 95 1a 80 40 01           a3 = sp + 0x14080
  3835: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3838: 7a a7 48                 u32 [a3 + 0x48] = a0
  3841: 95 69 00 10              a2 = s1 + 0x1000
  3845: 98 98 0c                 a1 = a2 >> 0xc
  3848: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3851: 33 0a 00 10              a3 = 0x1000
  3855: 95 18 d0 40 01           a1 = sp + 0x140d0
  3860: 0a 15                    ecalli 21 // 'peek'
  3862: 95 17 c8 40 01           a0 = sp + 0x140c8
  3867: 64 58                    a1 = s0
  3869: 0a 13                    ecalli 19 // 'export'
  3871: 33 09 00 10              a2 = 0x1000
  3875: 95 17 d0 40 01           a0 = sp + 0x140d0
  3880: 33 08                    a1 = 0
  3882: 50 10 60 d3 0a           ra = 96, jump @412
      :                          @185 [@dyn 48]
  3887: 95 1a 80 40 01           a3 = sp + 0x14080
  3892: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3895: 7a a7 48                 u32 [a3 + 0x48] = a0
  3898: 95 69 00 20              a2 = s1 + 0x2000
  3902: 98 98 0c                 a1 = a2 >> 0xc
  3905: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3908: 33 0a 00 10              a3 = 0x1000
  3912: 95 18 d0 40 01           a1 = sp + 0x140d0
  3917: 0a 15                    ecalli 21 // 'peek'
  3919: 95 17 c8 40 01           a0 = sp + 0x140c8
  3924: 64 58                    a1 = s0
  3926: 0a 13                    ecalli 19 // 'export'
  3928: 33 09 00 10              a2 = 0x1000
  3932: 95 17 d0 40 01           a0 = sp + 0x140d0
  3937: 33 08                    a1 = 0
  3939: 50 10 62 9a 0a           ra = 98, jump @412
      :                          @186 [@dyn 49]
  3944: 95 18 80 40 01           a1 = sp + 0x14080
  3949: 82 87 40                 a0 = u64 [a1 + 0x40]
  3952: 7a 87 48                 u32 [a1 + 0x48] = a0
  3955: 95 1a 80 40 01           a3 = sp + 0x14080
  3960: 95 69 00 30              a2 = s1 + 0x3000
  3964: 98 98 0c                 a1 = a2 >> 0xc
  3967: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3970: 33 0a 00 10              a3 = 0x1000
  3974: 95 18 d0 40 01           a1 = sp + 0x140d0
  3979: 0a 15                    ecalli 21 // 'peek'
  3981: 95 17 c8 40 01           a0 = sp + 0x140c8
  3986: 64 58                    a1 = s0
  3988: 64 56                    s1 = s0
  3990: 0a 13                    ecalli 19 // 'export'
  3992: 33 09 00 10              a2 = 0x1000
  3996: 95 17 d0 40 01           a0 = sp + 0x140d0
  4001: 33 08                    a1 = 0
  4003: 50 10 64 5a 0a           ra = 100, jump @412
      :                          @187 [@dyn 50]
  4008: 95 1a 80 40 01           a3 = sp + 0x14080
  4013: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4016: 7a a7 48                 u32 [a3 + 0x48] = a0
  4019: 82 15 70                 s0 = u64 [sp + 0x70]
  4022: 95 59 00 40              a2 = s0 + 0x4000
  4026: 98 98 0c                 a1 = a2 >> 0xc
  4029: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4032: 33 0a 00 10              a3 = 0x1000
  4036: 95 18 d0 40 01           a1 = sp + 0x140d0
  4041: 0a 15                    ecalli 21 // 'peek'
  4043: 95 17 c8 40 01           a0 = sp + 0x140c8
  4048: 64 68                    a1 = s1
  4050: 0a 13                    ecalli 19 // 'export'
  4052: 33 09 00 10              a2 = 0x1000
  4056: 95 17 d0 40 01           a0 = sp + 0x140d0
  4061: 33 08                    a1 = 0
  4063: 50 10 66 1e 0a           ra = 102, jump @412
      :                          @188 [@dyn 51]
  4068: 95 18 80 40 01           a1 = sp + 0x14080
  4073: 82 87 40                 a0 = u64 [a1 + 0x40]
  4076: 7a 87 48                 u32 [a1 + 0x48] = a0
  4079: 95 1a 80 40 01           a3 = sp + 0x14080
  4084: 95 59 00 50              a2 = s0 + 0x5000
  4088: 98 98 0c                 a1 = a2 >> 0xc
  4091: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4094: 33 0a 00 10              a3 = 0x1000
  4098: 95 18 d0 40 01           a1 = sp + 0x140d0
  4103: 0a 15                    ecalli 21 // 'peek'
  4105: 95 17 c8 40 01           a0 = sp + 0x140c8
  4110: 7b 16 60                 u64 [sp + 0x60] = s1
  4113: 64 68                    a1 = s1
  4115: 0a 13                    ecalli 19 // 'export'
  4117: 33 09 00 10              a2 = 0x1000
  4121: 95 17 d0 40 01           a0 = sp + 0x140d0
  4126: 33 08                    a1 = 0
  4128: 50 10 68 dd 09           ra = 104, jump @412
      :                          @189 [@dyn 52]
  4133: 95 1a 80 40 01           a3 = sp + 0x14080
  4138: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4141: 7a a7 48                 u32 [a3 + 0x48] = a0
  4144: 95 59 00 60              a2 = s0 + 0x6000
  4148: 98 98 0c                 a1 = a2 >> 0xc
  4151: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4154: 33 0a 00 10              a3 = 0x1000
  4158: 95 18 d0 40 01           a1 = sp + 0x140d0
  4163: 0a 15                    ecalli 21 // 'peek'
  4165: 95 17 c8 40 01           a0 = sp + 0x140c8
  4170: 64 68                    a1 = s1
  4172: 0a 13                    ecalli 19 // 'export'
  4174: 33 09 00 10              a2 = 0x1000
  4178: 95 17 d0 40 01           a0 = sp + 0x140d0
  4183: 33 08                    a1 = 0
  4185: 50 10 6a a4 09           ra = 106, jump @412
      :                          @190 [@dyn 53]
  4190: 95 18 80 40 01           a1 = sp + 0x14080
  4195: 82 87 40                 a0 = u64 [a1 + 0x40]
  4198: 7a 87 48                 u32 [a1 + 0x48] = a0
  4201: 95 1a 80 40 01           a3 = sp + 0x14080
  4206: 95 59 00 70              a2 = s0 + 0x7000
  4210: 98 98 0c                 a1 = a2 >> 0xc
  4213: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4216: 33 0a 00 10              a3 = 0x1000
  4220: 95 18 d0 40 01           a1 = sp + 0x140d0
  4225: 0a 15                    ecalli 21 // 'peek'
  4227: 95 17 c8 40 01           a0 = sp + 0x140c8
  4232: 82 16 60                 s1 = u64 [sp + 0x60]
  4235: 64 68                    a1 = s1
  4237: 0a 13                    ecalli 19 // 'export'
  4239: 33 09 00 10              a2 = 0x1000
  4243: 95 17 d0 40 01           a0 = sp + 0x140d0
  4248: 33 08                    a1 = 0
  4250: 50 10 6c 63 09           ra = 108, jump @412
      :                          @191 [@dyn 54]
  4255: 95 1a 80 40 01           a3 = sp + 0x14080
  4260: 82 a7 40                 a0 = u64 [a3 + 0x40]
  4263: 7a a7 48                 u32 [a3 + 0x48] = a0
  4266: 95 59 00 80 00           a2 = s0 + 0x8000
  4271: 98 98 0c                 a1 = a2 >> 0xc
  4274: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  4277: 95 15 80 40 01           s0 = sp + 0x14080
  4282: 33 0a 00 10              a3 = 0x1000
  4286: 95 18 d0 40 01           a1 = sp + 0x140d0
  4291: 0a 15                    ecalli 21 // 'peek'
  4293: 95 17 c8 40 01           a0 = sp + 0x140c8
  4298: 64 68                    a1 = s1
  4300: 0a 13                    ecalli 19 // 'export'
  4302: 82 57 40                 a0 = u64 [s0 + 0x40]
  4305: 0a 1a                    ecalli 26 // 'expunge'
  4307: 33 07 06                 a0 = 0x6
  4310: 95 18 d0 50 01           a1 = sp + 0x150d0
  4315: 7b 87 10 01              u64 [a1 + 0x110] = a0
  4319: 33 07 38 03 01           a0 = 0x10338
  4324: 7b 87 60 01              u64 [a1 + 0x160] = a0
  4328: 95 17 d8 51 01           a0 = sp + 0x151d8
  4333: 7b 87 70 01              u64 [a1 + 0x170] = a0
  4337: 49 28 68 01 01           u64 [a1 + 360] = 0x1
  4342: 49 28 78 01 01           u64 [a1 + 376] = 0x1
  4347: 7b 88 08 01              u64 [a1 + 0x108] = a1
  4351: 49 28 80 01              u64 [a1 + 384] = 0
  4355: 95 16 d0 50 01           s1 = sp + 0x150d0
  4360: 95 17 f0 51 01           a0 = sp + 0x151f0
  4365: 95 18 30 52 01           a1 = sp + 0x15230
  4370: 50 10 6e bf 05           ra = 110, jump @344
      :                          @192 [@dyn 55]
  4375: 82 65 28 01              s0 = u64 [s1 + 0x128]
  4379: 82 6b 30 01              a4 = u64 [s1 + 0x130]
  4383: 82 66 20 01              s1 = u64 [s1 + 0x120]
  4387: 33 07 02                 a0 = 0x2
  4390: 33 08                    a1 = 0
  4392: 33 09                    a2 = 0
  4394: 64 5a                    a3 = s0
  4396: 33 00 70                 ra = 0x70
  4399: 0a 64                    ecalli 100 // 'log'
  4401: 01                       fallthrough
      :                          @193 [@dyn 56]
  4402: 82 17 68                 a0 = u64 [sp + 0x68]
  4405: c8 67 07                 a0 = a0 + s1
  4408: 53 37 00 00 f0 63 f3     jump @79 if a0 <u 4293918720
      :                          @194
  4415: 33 07 40 00 03           a0 = 0x30040
  4420: 95 77 00 00 10           a0 = a0 + 0x100000
  4425: 01                       fallthrough
      :                          @195
  4426: 82 78                    a1 = u64 [a0]
  4428: c9 87 09                 a2 = a0 - a1
  4431: ab 59 4c f3              jump @79 if a2 != s0
      :                          @196
  4435: c9 68 09                 a2 = a1 - s1
  4438: 01                       fallthrough
      :                          @197
  4439: 82 7a                    a3 = u64 [a0]
  4441: ab 8a f1                 jump @195 if a3 != a1
      :                          @198
  4444: 7b 79                    u64 [a0] = a2
  4446: 33 0b                    a4 = 0
  4448: 01                       fallthrough
      :                          @199
  4449: ab 8a e9                 jump @195 if a3 != a1
      :                          @200
  4452: 28 37 f3                 jump @79
      :                          @201
  4455: 00                       trap
      :                          @202 [export #1: 'accumulate']
  4456: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  4460: 7b 10 90 00              u64 [sp + 0x90] = ra
  4464: 7b 15 88 00              u64 [sp + 0x88] = s0
  4468: 7b 16 80 00              u64 [sp + 0x80] = s1
  4472: 51 08 f4 02              jump @283 if a1 == 0
      :                          @203
  4476: 64 85                    s0 = a1
  4478: 7d 78                    a1 = i8 [a0]
  4480: 33 06 01                 s1 = 0x1
  4483: 59 08 37                 jump @210 if a1 >=s 0
      :                          @204
  4486: 84 89 ff 00              a2 = a1 & 0xff
  4490: 33 06 02                 s1 = 0x2
  4493: 53 29 c0 00 2d           jump @210 if a2 <u 192
      :                          @205
  4498: 33 06 03                 s1 = 0x3
  4501: 53 29 e0 00 25           jump @210 if a2 <u 224
      :                          @206
  4506: 33 06 04                 s1 = 0x4
  4509: 53 29 f0 00 1d           jump @210 if a2 <u 240
      :                          @207
  4514: 33 06 05                 s1 = 0x5
  4517: 53 29 f8 00 15           jump @210 if a2 <u 248
      :                          @208
  4522: 33 06 06                 s1 = 0x6
  4525: 53 29 fc 00 0d           jump @210 if a2 <u 252
      :                          @209
  4530: 88 98 fe 00              a1 = a2 <u 0xfe
  4534: 9a 86 08                 s1 = 0x8 - a1
  4537: 01                       fallthrough
      :                          @210
  4538: ac 65 b2 02              jump @283 if s0 <u s1
      :                          @211
  4542: 64 68                    a1 = s1
  4544: 7b 17                    u64 [sp] = a0
  4546: 50 10 72 e9 11           ra = 114, jump @598
      :                          @212 [@dyn 57]
  4551: 82 17                    a0 = u64 [sp]
  4553: aa 65 a3 02              jump @283 if s0 == s1
      :                          @213
  4557: c8 67 07                 a0 = a0 + s1
  4560: 7d 78                    a1 = i8 [a0]
  4562: c9 65 05                 s0 = s0 - s1
  4565: 33 06 01                 s1 = 0x1
  4568: 59 08 37                 jump @220 if a1 >=s 0
      :                          @214
  4571: 84 89 ff 00              a2 = a1 & 0xff
  4575: 33 06 02                 s1 = 0x2
  4578: 53 29 c0 00 2d           jump @220 if a2 <u 192
      :                          @215
  4583: 33 06 03                 s1 = 0x3
  4586: 53 29 e0 00 25           jump @220 if a2 <u 224
      :                          @216
  4591: 33 06 04                 s1 = 0x4
  4594: 53 29 f0 00 1d           jump @220 if a2 <u 240
      :                          @217
  4599: 33 06 05                 s1 = 0x5
  4602: 53 29 f8 00 15           jump @220 if a2 <u 248
      :                          @218
  4607: 33 06 06                 s1 = 0x6
  4610: 53 29 fc 00 0d           jump @220 if a2 <u 252
      :                          @219
  4615: 88 98 fe 00              a1 = a2 <u 0xfe
  4619: 9a 86 08                 s1 = 0x8 - a1
  4622: 01                       fallthrough
      :                          @220
  4623: ac 65 5d 02              jump @283 if s0 <u s1
      :                          @221
  4627: 64 68                    a1 = s1
  4629: 7b 17                    u64 [sp] = a0
  4631: 50 10 74 94 11           ra = 116, jump @598
      :                          @222 [@dyn 58]
  4636: 82 17                    a0 = u64 [sp]
  4638: c8 67 07                 a0 = a0 + s1
  4641: c9 65 0a                 a3 = s0 - s1
  4644: 7b 1a                    u64 [sp] = a3
  4646: ab 65 07                 jump @224 if s0 != s1
      :                          @223
  4649: 33 06                    s1 = 0
  4651: 28 42                    jump @232
      :                          @224
  4653: 7d 78                    a1 = i8 [a0]
  4655: 33 06 01                 s1 = 0x1
  4658: 59 08 37                 jump @231 if a1 >=s 0
      :                          @225
  4661: 84 89 ff 00              a2 = a1 & 0xff
  4665: 33 06 02                 s1 = 0x2
  4668: 53 29 c0 00 2d           jump @231 if a2 <u 192
      :                          @226
  4673: 33 06 03                 s1 = 0x3
  4676: 53 29 e0 00 25           jump @231 if a2 <u 224
      :                          @227
  4681: 33 06 04                 s1 = 0x4
  4684: 53 29 f0 00 1d           jump @231 if a2 <u 240
      :                          @228
  4689: 33 06 05                 s1 = 0x5
  4692: 53 29 f8 00 15           jump @231 if a2 <u 248
      :                          @229
  4697: 33 06 06                 s1 = 0x6
  4700: 53 29 fc 00 0d           jump @231 if a2 <u 252
      :                          @230
  4705: 88 98 fe 00              a1 = a2 <u 0xfe
  4709: 9a 86 08                 s1 = 0x8 - a1
  4712: 01                       fallthrough
      :                          @231
  4713: ac 6a 03 02              jump @283 if a3 <u s1
      :                          @232
  4717: 64 68                    a1 = s1
  4719: 64 75                    s0 = a0
  4721: 50 10 76 3a 11           ra = 118, jump @598
      :                          @233 [@dyn 59]
  4726: 51 07 f6 01              jump @283 if a0 == 0
      :                          @234
  4730: 82 17                    a0 = u64 [sp]
  4732: e4 67 07                 a0 = maxu(a0, s1)
  4735: c9 67 07                 a0 = a0 - s1
  4738: 53 17 60 ea 01           jump @283 if a0 <u 96
      :                          @235
  4743: c8 56 08                 a1 = s1 + s0
  4746: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  4749: 95 87 60                 a0 = a1 + 0x60
  4752: 7b 17                    u64 [sp] = a0
  4754: 51 06 4c                 jump @246 if s1 == 0
      :                          @236
  4757: 7d 78                    a1 = i8 [a0]
  4759: 33 05 01                 s0 = 0x1
  4762: 59 08 37                 jump @243 if a1 >=s 0
      :                          @237
  4765: 84 89 ff 00              a2 = a1 & 0xff
  4769: 33 05 02                 s0 = 0x2
  4772: 53 29 c0 00 2d           jump @243 if a2 <u 192
      :                          @238
  4777: 33 05 03                 s0 = 0x3
  4780: 53 29 e0 00 25           jump @243 if a2 <u 224
      :                          @239
  4785: 33 05 04                 s0 = 0x4
  4788: 53 29 f0 00 1d           jump @243 if a2 <u 240
      :                          @240
  4793: 33 05 05                 s0 = 0x5
  4796: 53 29 f8 00 15           jump @243 if a2 <u 248
      :                          @241
  4801: 33 05 06                 s0 = 0x6
  4804: 53 29 fc 00 0d           jump @243 if a2 <u 252
      :                          @242
  4809: 88 98 fe 00              a1 = a2 <u 0xfe
  4813: 9a 85 08                 s0 = 0x8 - a1
  4816: 01                       fallthrough
      :                          @243
  4817: ac 56 b4 01              jump @284 if s1 <u s0
      :                          @244
  4821: 64 58                    a1 = s0
  4823: 50 10 78 d4 10           ra = 120, jump @598
      :                          @245 [@dyn 60]
  4828: 28 07                    jump @247
      :                          @246
  4830: 33 05                    s0 = 0
  4832: 33 07                    a0 = 0
  4834: 01                       fallthrough
      :                          @247
  4835: e4 56 08                 a1 = maxu(s1, s0)
  4838: c9 58 08                 a1 = a1 - s0
  4841: e4 78 08                 a1 = maxu(a1, a0)
  4844: c9 78 08                 a1 = a1 - a0
  4847: 33 09 20                 a2 = 0x20
  4850: ac 98 7a 01              jump @283 if a1 <u a2
      :                          @248
  4854: 82 19                    a2 = u64 [sp]
  4856: c8 95 05                 s0 = s0 + a2
  4859: c8 57 07                 a0 = a0 + s0
  4862: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  4865: 95 77 20                 a0 = a0 + 0x20
  4868: 7b 17                    u64 [sp] = a0
  4870: 51 05 4c                 jump @259 if s0 == 0
      :                          @249
  4873: 7d 78                    a1 = i8 [a0]
  4875: 33 06 01                 s1 = 0x1
  4878: 59 08 37                 jump @256 if a1 >=s 0
      :                          @250
  4881: 84 89 ff 00              a2 = a1 & 0xff
  4885: 33 06 02                 s1 = 0x2
  4888: 53 29 c0 00 2d           jump @256 if a2 <u 192
      :                          @251
  4893: 33 06 03                 s1 = 0x3
  4896: 53 29 e0 00 25           jump @256 if a2 <u 224
      :                          @252
  4901: 33 06 04                 s1 = 0x4
  4904: 53 29 f0 00 1d           jump @256 if a2 <u 240
      :                          @253
  4909: 33 06 05                 s1 = 0x5
  4912: 53 29 f8 00 15           jump @256 if a2 <u 248
      :                          @254
  4917: 33 06 06                 s1 = 0x6
  4920: 53 29 fc 00 0d           jump @256 if a2 <u 252
      :                          @255
  4925: 88 98 fe 00              a1 = a2 <u 0xfe
  4929: 9a 86 08                 s1 = 0x8 - a1
  4932: 01                       fallthrough
      :                          @256
  4933: ac 65 41 01              jump @285 if s0 <u s1
      :                          @257
  4937: 64 68                    a1 = s1
  4939: 50 10 7a 60 10           ra = 122, jump @598
      :                          @258 [@dyn 61]
  4944: 28 05                    jump @260
      :                          @259
  4946: 33 06                    s1 = 0
  4948: 01                       fallthrough
      :                          @260
  4949: ae 56 17 01              jump @283 if s1 >=u s0
      :                          @261
  4953: 82 17                    a0 = u64 [sp]
  4955: c8 67 07                 a0 = a0 + s1
  4958: 7c 78                    a1 = u8 [a0]
  4960: 52 08 0c 01              jump @283 if a1 != 0
      :                          @262
  4964: e4 65 08                 a1 = maxu(s0, s1)
  4967: c9 68 08                 a1 = a1 - s1
  4970: 95 77 01                 a0 = a0 + 0x1
  4973: 33 09 01                 a2 = 0x1
  4976: e4 98 06                 s1 = maxu(a1, a2)
  4979: 33 09 02                 a2 = 0x2
  4982: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  4985: ae 98 0b                 jump @264 if a1 >=u a2
      :                          @263
  4988: 64 76                    s1 = a0
  4990: 33 05                    s0 = 0
  4992: 33 07                    a0 = 0
  4994: 28 50                    jump @274
      :                          @264
  4996: 7d 78                    a1 = i8 [a0]
  4998: 33 05 01                 s0 = 0x1
  5001: 59 08 37                 jump @271 if a1 >=s 0
      :                          @265
  5004: 84 89 ff 00              a2 = a1 & 0xff
  5008: 33 05 02                 s0 = 0x2
  5011: 53 29 c0 00 2d           jump @271 if a2 <u 192
      :                          @266
  5016: 33 05 03                 s0 = 0x3
  5019: 53 29 e0 00 25           jump @271 if a2 <u 224
      :                          @267
  5024: 33 05 04                 s0 = 0x4
  5027: 53 29 f0 00 1d           jump @271 if a2 <u 240
      :                          @268
  5032: 33 05 05                 s0 = 0x5
  5035: 53 29 f8 00 15           jump @271 if a2 <u 248
      :                          @269
  5040: 33 05 06                 s0 = 0x6
  5043: 53 29 fc 00 0d           jump @271 if a2 <u 252
      :                          @270
  5048: 88 98 fe 00              a1 = a2 <u 0xfe
  5052: 9a 85 08                 s0 = 0x8 - a1
  5055: 01                       fallthrough
      :                          @271
  5056: 7b 1a                    u64 [sp] = a3
  5058: ac 5a c5 00              jump @286 if a3 <u s0
      :                          @272
  5062: 64 76                    s1 = a0
  5064: 64 58                    a1 = s0
  5066: 50 10 7c e1 0f           ra = 124, jump @598
      :                          @273 [@dyn 62]
  5071: 82 1a                    a3 = u64 [sp]
  5073: 01                       fallthrough
      :                          @274
  5074: e4 5a 08                 a1 = maxu(a3, s0)
  5077: c9 58 08                 a1 = a1 - s0
  5080: e6 78 07                 a0 = minu(a1, a0)
  5083: 52 17 24 91 00           jump @283 if a0 != 36
      :                          @275
  5088: c8 56 07                 a0 = s1 + s0
  5091: 7b 17 08                 u64 [sp + 0x8] = a0
  5094: 80 78 20                 a1 = u32 [a0 + 0x20]
  5097: 7b 18 10                 u64 [sp + 0x10] = a1
  5100: 0a 0e                    ecalli 14 // 'solicit'
  5102: 95 17 08                 a0 = sp + 0x8
  5105: 7b 17 60                 u64 [sp + 0x60] = a0
  5108: 33 07 06                 a0 = 0x6
  5111: 7b 17 68                 u64 [sp + 0x68] = a0
  5114: 95 18 10                 a1 = sp + 0x10
  5117: 7b 18 70                 u64 [sp + 0x70] = a1
  5120: 7b 17 78                 u64 [sp + 0x78] = a0
  5123: 33 07 b8 03 01           a0 = 0x103b8
  5128: 7b 17 30                 u64 [sp + 0x30] = a0
  5131: 49 11 38 02              u64 [sp + 56] = 0x2
  5135: 49 11 50                 u64 [sp + 80] = 0
  5138: 95 18 60                 a1 = sp + 0x60
  5141: 7b 18 40                 u64 [sp + 0x40] = a1
  5144: 49 11 48 02              u64 [sp + 72] = 0x2
  5148: 95 17 18                 a0 = sp + 0x18
  5151: 95 18 30                 a1 = sp + 0x30
  5154: 50 10 7e af 02           ra = 126, jump @344
      :                          @276 [@dyn 63]
  5159: 82 15 20                 s0 = u64 [sp + 0x20]
  5162: 82 1b 28                 a4 = u64 [sp + 0x28]
  5165: 82 16 18                 s1 = u64 [sp + 0x18]
  5168: 33 07 02                 a0 = 0x2
  5171: 33 08                    a1 = 0
  5173: 33 09                    a2 = 0
  5175: 64 5a                    a3 = s0
  5177: 33 00 80 00              ra = 0x80
  5181: 0a 64                    ecalli 100 // 'log'
  5183: 01                       fallthrough
      :                          @277 [@dyn 64]
  5184: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  5189: 53 38 00 00 f0 27        jump @283 if a1 <u 4293918720
      :                          @278
  5195: 33 07 40 00 03           a0 = 0x30040
  5200: 95 77 00 00 10           a0 = a0 + 0x100000
  5205: 01                       fallthrough
      :                          @279
  5206: 82 78                    a1 = u64 [a0]
  5208: c9 87 09                 a2 = a0 - a1
  5211: ab 59 11                 jump @283 if a2 != s0
      :                          @280
  5214: c9 68 09                 a2 = a1 - s1
  5217: 01                       fallthrough
      :                          @281
  5218: 82 7a                    a3 = u64 [a0]
  5220: ab 8a f2                 jump @279 if a3 != a1
      :                          @282
  5223: 7b 79                    u64 [a0] = a2
  5225: 33 0b                    a4 = 0
  5227: 01                       fallthrough
      :                          @283
  5228: 33 07 00 00 01           a0 = 0x10000
  5233: 33 08                    a1 = 0
  5235: 82 10 90 00              ra = u64 [sp + 0x90]
  5239: 82 15 88 00              s0 = u64 [sp + 0x88]
  5243: 82 16 80 00              s1 = u64 [sp + 0x80]
  5247: 95 11 98 00              sp = sp + 0x98
  5251: 32 00                    ret
      :                          @284
  5253: 00                       trap
      :                          @285
  5254: 00                       trap
      :                          @286
  5255: 00                       trap
      :                          @287 [export #2: 'on_transfer']
  5256: 33 07 00 00 01           a0 = 0x10000
  5261: 33 08                    a1 = 0
  5263: 32 00                    ret
      :                          @288
  5265: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5268: 7b 10 40                 u64 [sp + 0x40] = ra
  5271: 7b 15 38                 u64 [sp + 0x38] = s0
  5274: 7b 16 30                 u64 [sp + 0x30] = s1
  5277: c8 89 09                 a2 = a2 + a1
  5280: ac 89 53                 jump @296 if a2 <u a1
      :                          @289
  5283: 64 75                    s0 = a0
  5285: 82 77                    a0 = u64 [a0]
  5287: 97 78 01                 a1 = a0 << 0x1
  5290: 33 0a 08                 a3 = 0x8
  5293: e4 a9 09                 a2 = maxu(a2, a3)
  5296: e4 98 06                 s1 = maxu(a1, a2)
  5299: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5302: 98 88 3f                 a1 = a1 >> 0x3f
  5305: 51 07 12                 jump @291 if a0 == 0
      :                          @290
  5308: 82 59 08                 a2 = u64 [s0 + 0x8]
  5311: 7b 19 18                 u64 [sp + 0x18] = a2
  5314: 49 11 20 01              u64 [sp + 32] = 0x1
  5318: 7b 17 28                 u64 [sp + 0x28] = a0
  5321: 28 06                    jump @292
      :                          @291
  5323: 49 11 20                 u64 [sp + 32] = 0
  5326: 01                       fallthrough
      :                          @292
  5327: 64 17                    a0 = sp
  5329: 95 1a 18                 a3 = sp + 0x18
  5332: 64 69                    a2 = s1
  5334: 50 20 82 00 33           ra = 130, jump @300
      :                          @293 [@dyn 65]
  5339: 82 18                    a1 = u64 [sp]
  5341: 82 17 08                 a0 = u64 [sp + 0x8]
  5344: 51 08 14                 jump @297 if a1 == 0
      :                          @294
  5347: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5357: aa 87 0d                 jump @298 if a0 == a1
      :                          @295
  5360: 52 07 18                 jump @299 if a0 != 0
      :                          @296
  5363: 00                       trap
      :                          @297
  5364: 7b 57 08                 u64 [s0 + 0x8] = a0
  5367: 7b 56                    u64 [s0] = s1
  5369: 01                       fallthrough
      :                          @298
  5370: 82 10 40                 ra = u64 [sp + 0x40]
  5373: 82 15 38                 s0 = u64 [sp + 0x38]
  5376: 82 16 30                 s1 = u64 [sp + 0x30]
  5379: 95 11 48                 sp = sp + 0x48
  5382: 32 00                    ret
      :                          @299
  5384: 00                       trap
      :                          @300
  5385: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5388: 7b 10 30                 u64 [sp + 0x30] = ra
  5391: 7b 15 28                 u64 [sp + 0x28] = s0
  5394: 7b 16 20                 u64 [sp + 0x20] = s1
  5397: 64 95                    s0 = a2
  5399: 64 72                    t0 = a0
  5401: 51 08 7a                 jump @310 if a1 == 0
      :                          @301
  5404: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5407: 51 07 7d                 jump @311 if a0 == 0
      :                          @302
  5410: 82 a9 10                 a2 = u64 [a3 + 0x10]
  5413: 51 09 ab 00              jump @318 if a2 == 0
      :                          @303
  5417: 82 a8                    a1 = u64 [a3]
  5419: 33 06 40 00 03           s1 = 0x30040
  5424: 33 03 00 00 10           t1 = 0x100000
  5429: c8 36 06                 s1 = s1 + t1
  5432: 01                       fallthrough
      :                          @304
  5433: 82 6a                    a3 = u64 [s1]
  5435: c8 5a 07                 a0 = a3 + s0
  5438: ac a7 d0 00              jump @324 if a0 <u a3
      :                          @305
  5442: 95 7b 01                 a4 = a0 + 0x1
  5445: 88 bc 01                 a5 = a4 <u 0x1
  5448: d8 b3 0b                 a4 = t1 <u a4
  5451: d4 cb 0b                 a4 = a4 | a5
  5454: 52 0b c0 00              jump @324 if a4 != 0
      :                          @306
  5458: 82 6b                    a4 = u64 [s1]
  5460: ab ab e5                 jump @304 if a4 != a3
      :                          @307
  5463: 7b 67                    u64 [s1] = a0
  5465: 33 0c                    a5 = 0
  5467: 7b 12 18                 u64 [sp + 0x18] = t0
  5470: 33 0a 40 00 03           a3 = 0x30040
  5475: 33 0b 00 00 10           a4 = 0x100000
  5480: 7b 1a                    u64 [sp] = a3
  5482: c8 ba 0a                 a3 = a3 + a4
  5485: c9 7a 07                 a0 = a3 - a0
  5488: 7b 17 10                 u64 [sp + 0x10] = a0
  5491: 7b 18 08                 u64 [sp + 0x8] = a1
  5494: 64 96                    s1 = a2
  5496: 50 20 84 00 d3 03        ra = 132, jump @394
      :                          @308 [@dyn 66]
  5502: 54 36 00 00 10 98 00     jump @325 if s1 <=u 1048576
      :                          @309
  5509: 82 12 18                 t0 = u64 [sp + 0x18]
  5512: 82 18 10                 a1 = u64 [sp + 0x10]
  5515: 33 07                    a0 = 0
  5517: 7b 28 08                 u64 [t0 + 0x8] = a1
  5520: 28 b5 00                 jump @331
      :                          @310
  5523: 49 12 08                 u64 [t0 + 8] = 0
  5526: 33 07 01                 a0 = 0x1
  5529: 28 ac 00                 jump @331
      :                          @311
  5532: 33 09 40 00 03           a2 = 0x30040
  5537: 33 07 00 00 10           a0 = 0x100000
  5542: c8 79 09                 a2 = a2 + a0
  5545: 01                       fallthrough
      :                          @312
  5546: 82 9a                    a3 = u64 [a2]
  5548: c8 5a 08                 a1 = a3 + s0
  5551: ac a8 5f                 jump @324 if a1 <u a3
      :                          @313
  5554: 95 8b 01                 a4 = a1 + 0x1
  5557: 88 bc 01                 a5 = a4 <u 0x1
  5560: d8 b7 0b                 a4 = a0 <u a4
  5563: d4 cb 0b                 a4 = a4 | a5
  5566: 52 0b 50                 jump @324 if a4 != 0
      :                          @314
  5569: 82 9b                    a4 = u64 [a2]
  5571: ab ab e7                 jump @312 if a4 != a3
      :                          @315
  5574: 7b 98                    u64 [a2] = a1
  5576: 33 0c                    a5 = 0
  5578: 01                       fallthrough
      :                          @316
  5579: ab ab df                 jump @312 if a4 != a3
      :                          @317
  5582: 28 31                    jump @323
      :                          @318
  5584: 33 09 40 00 03           a2 = 0x30040
  5589: 33 07 00 00 10           a0 = 0x100000
  5594: c8 79 09                 a2 = a2 + a0
  5597: 01                       fallthrough
      :                          @319
  5598: 82 9a                    a3 = u64 [a2]
  5600: c8 5a 08                 a1 = a3 + s0
  5603: ac a8 2b                 jump @324 if a1 <u a3
      :                          @320
  5606: 95 8b 01                 a4 = a1 + 0x1
  5609: 88 bc 01                 a5 = a4 <u 0x1
  5612: d8 b7 0b                 a4 = a0 <u a4
  5615: d4 cb 0b                 a4 = a4 | a5
  5618: 52 0b 1c                 jump @324 if a4 != 0
      :                          @321
  5621: 82 9b                    a4 = u64 [a2]
  5623: ab ab e7                 jump @319 if a4 != a3
      :                          @322
  5626: 7b 98                    u64 [a2] = a1
  5628: 33 0c                    a5 = 0
  5630: 01                       fallthrough
      :                          @323
  5631: 33 07 40 00 13           a0 = 0x130040
  5636: c9 87 08                 a1 = a0 - a1
  5639: 33 07                    a0 = 0
  5641: 7b 28 08                 u64 [t0 + 0x8] = a1
  5644: 28 39                    jump @331
      :                          @324
  5646: 33 07 01                 a0 = 0x1
  5649: 7b 27 08                 u64 [t0 + 0x8] = a0
  5652: 28 31                    jump @331
      :                          @325
  5654: 64 6c                    a5 = s1
  5656: 82 17                    a0 = u64 [sp]
  5658: 95 77 00 00 10           a0 = a0 + 0x100000
  5663: 82 12 18                 t0 = u64 [sp + 0x18]
  5666: 82 16 08                 s1 = u64 [sp + 0x8]
  5669: 01                       fallthrough
      :                          @326
  5670: 82 78                    a1 = u64 [a0]
  5672: c9 87 09                 a2 = a0 - a1
  5675: ab 69 11                 jump @330 if a2 != s1
      :                          @327
  5678: c9 c8 09                 a2 = a1 - a5
  5681: 01                       fallthrough
      :                          @328
  5682: 82 7a                    a3 = u64 [a0]
  5684: ab 8a f2                 jump @326 if a3 != a1
      :                          @329
  5687: 7b 79                    u64 [a0] = a2
  5689: 33 0b                    a4 = 0
  5691: 01                       fallthrough
      :                          @330
  5692: 82 18 10                 a1 = u64 [sp + 0x10]
  5695: 33 07                    a0 = 0
  5697: 7b 28 08                 u64 [t0 + 0x8] = a1
  5700: 01                       fallthrough
      :                          @331
  5701: 7b 25 10                 u64 [t0 + 0x10] = s0
  5704: 7b 27                    u64 [t0] = a0
  5706: 82 10 30                 ra = u64 [sp + 0x30]
  5709: 82 15 28                 s0 = u64 [sp + 0x28]
  5712: 82 16 20                 s1 = u64 [sp + 0x20]
  5715: 95 11 38                 sp = sp + 0x38
  5718: 32 00                    ret
      :                          @332
  5720: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5723: 7b 10 40                 u64 [sp + 0x40] = ra
  5726: 7b 15 38                 u64 [sp + 0x38] = s0
  5729: 7b 16 30                 u64 [sp + 0x30] = s1
  5732: 95 88 01                 a1 = a1 + 0x1
  5735: 51 08 54                 jump @340 if a1 == 0
      :                          @333
  5738: 64 75                    s0 = a0
  5740: 82 77                    a0 = u64 [a0]
  5742: 97 79 01                 a2 = a0 << 0x1
  5745: 33 0a 08                 a3 = 0x8
  5748: e4 a8 08                 a1 = maxu(a1, a3)
  5751: e4 89 06                 s1 = maxu(a2, a1)
  5754: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5757: 98 88 3f                 a1 = a1 >> 0x3f
  5760: 51 07 12                 jump @335 if a0 == 0
      :                          @334
  5763: 82 59 08                 a2 = u64 [s0 + 0x8]
  5766: 7b 19 18                 u64 [sp + 0x18] = a2
  5769: 49 11 20 01              u64 [sp + 32] = 0x1
  5773: 7b 17 28                 u64 [sp + 0x28] = a0
  5776: 28 06                    jump @336
      :                          @335
  5778: 49 11 20                 u64 [sp + 32] = 0
  5781: 01                       fallthrough
      :                          @336
  5782: 64 17                    a0 = sp
  5784: 95 1a 18                 a3 = sp + 0x18
  5787: 64 69                    a2 = s1
  5789: 50 20 86 00 6c fe        ra = 134, jump @300
      :                          @337 [@dyn 67]
  5795: 82 18                    a1 = u64 [sp]
  5797: 82 17 08                 a0 = u64 [sp + 0x8]
  5800: 51 08 14                 jump @341 if a1 == 0
      :                          @338
  5803: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5813: aa 87 0d                 jump @342 if a0 == a1
      :                          @339
  5816: 52 07 18                 jump @343 if a0 != 0
      :                          @340
  5819: 00                       trap
      :                          @341
  5820: 7b 57 08                 u64 [s0 + 0x8] = a0
  5823: 7b 56                    u64 [s0] = s1
  5825: 01                       fallthrough
      :                          @342
  5826: 82 10 40                 ra = u64 [sp + 0x40]
  5829: 82 15 38                 s0 = u64 [sp + 0x38]
  5832: 82 16 30                 s1 = u64 [sp + 0x30]
  5835: 95 11 48                 sp = sp + 0x48
  5838: 32 00                    ret
      :                          @343
  5840: 00                       trap
      :                          @344
  5841: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5844: 7b 10 30                 u64 [sp + 0x30] = ra
  5847: 7b 15 28                 u64 [sp + 0x28] = s0
  5850: 7b 16 20                 u64 [sp + 0x20] = s1
  5853: 64 89                    a2 = a1
  5855: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5858: 64 75                    s0 = a0
  5860: 51 0a 35                 jump @349 if a3 == 0
      :                          @345
  5863: 82 98                    a1 = u64 [a2]
  5865: 33 07                    a0 = 0
  5867: 95 8b 08                 a4 = a1 + 0x8
  5870: 01                       fallthrough
      :                          @346
  5871: 82 bc                    a5 = u64 [a4]
  5873: c8 c7 07                 a0 = a0 + a5
  5876: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5879: 95 bb 10                 a4 = a4 + 0x10
  5882: 52 0a f5                 jump @346 if a3 != 0
      :                          @347
  5885: 82 9a 18                 a3 = u64 [a2 + 0x18]
  5888: 51 0a 24                 jump @351 if a3 == 0
      :                          @348
  5891: 82 88 08                 a1 = u64 [a1 + 0x8]
  5894: 8e 88                    a1 = a1 >u 0
  5896: 88 7a 10                 a3 = a0 <u 0x10
  5899: 85 aa 01                 a3 = a3 ^ 0x1
  5902: d4 a8 08                 a1 = a1 | a3
  5905: 89 7a                    a3 = a0 <s 0
  5907: e0 a8 08                 a1 = a1 & ~a3
  5910: 52 08 0a                 jump @350 if a1 != 0
      :                          @349
  5913: 33 07                    a0 = 0
  5915: 33 08 01                 a1 = 0x1
  5918: 28 4a                    jump @359
      :                          @350
  5920: 97 77 01                 a0 = a0 << 0x1
  5923: 01                       fallthrough
      :                          @351
  5924: 51 07 40                 jump @358 if a0 == 0
      :                          @352
  5927: 57 07 79                 jump @364 if a0 <s 0
      :                          @353
  5930: 64 52                    t0 = s0
  5932: 33 0b 40 00 03           a4 = 0x30040
  5937: 33 08 00 00 10           a1 = 0x100000
  5942: c8 8b 0b                 a4 = a4 + a1
  5945: 01                       fallthrough
      :                          @354
  5946: 82 bc                    a5 = u64 [a4]
  5948: c8 7c 0a                 a3 = a5 + a0
  5951: ac ca 5f                 jump @362 if a3 <u a5
      :                          @355
  5954: 95 a5 01                 s0 = a3 + 0x1
  5957: 88 56 01                 s1 = s0 <u 0x1
  5960: d8 58 05                 s0 = a1 <u s0
  5963: d4 65 05                 s0 = s0 | s1
  5966: 52 05 50                 jump @362 if s0 != 0
      :                          @356
  5969: 82 b6                    s1 = u64 [a4]
  5971: ab c6 e7                 jump @354 if s1 != a5
      :                          @357
  5974: 7b ba                    u64 [a4] = a3
  5976: 33 08 40 00 13           a1 = 0x130040
  5981: c9 a8 08                 a1 = a1 - a3
  5984: 64 25                    s0 = t0
  5986: 28 06                    jump @359
      :                          @358
  5988: 33 08 01                 a1 = 0x1
  5991: 01                       fallthrough
      :                          @359
  5992: 7b 17                    u64 [sp] = a0
  5994: 7b 18 08                 u64 [sp + 0x8] = a1
  5997: 49 11 10                 u64 [sp + 16] = 0
  6000: 33 08 d8 03 01           a1 = 0x103d8
  6005: 64 17                    a0 = sp
  6007: 50 20 88 00 8b 06        ra = 136, jump @489
      :                          @360 [@dyn 68]
  6013: 52 07 22                 jump @363 if a0 != 0
      :                          @361
  6016: 82 17 10                 a0 = u64 [sp + 0x10]
  6019: 82 18 08                 a1 = u64 [sp + 0x8]
  6022: 82 19                    a2 = u64 [sp]
  6024: 7b 57 10                 u64 [s0 + 0x10] = a0
  6027: 7b 58 08                 u64 [s0 + 0x8] = a1
  6030: 7b 59                    u64 [s0] = a2
  6032: 82 10 30                 ra = u64 [sp + 0x30]
  6035: 82 15 28                 s0 = u64 [sp + 0x28]
  6038: 82 16 20                 s1 = u64 [sp + 0x20]
  6041: 95 11 38                 sp = sp + 0x38
  6044: 32 00                    ret
      :                          @362
  6046: 00                       trap
      :                          @363
  6047: 00                       trap
      :                          @364
  6048: 00                       trap
      :                          @365 [@dyn 69]
  6049: 82 72                    t0 = u64 [a0]
  6051: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  6056: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  6061: ac 9a 28                 jump @371 if a3 <u a2
      :                          @366
  6064: 82 77 08                 a0 = u64 [a0 + 0x8]
  6067: 33 09 40 00 03           a2 = 0x30040
  6072: 95 99 00 00 10           a2 = a2 + 0x100000
  6077: 01                       fallthrough
      :                          @367
  6078: 82 9a                    a3 = u64 [a2]
  6080: c9 a9 0b                 a4 = a2 - a3
  6083: ab 7b 12                 jump @371 if a4 != a0
      :                          @368
  6086: c9 2a 0b                 a4 = a3 - t0
  6089: 01                       fallthrough
      :                          @369
  6090: 82 9c                    a5 = u64 [a2]
  6092: ab ac f2                 jump @367 if a5 != a3
      :                          @370
  6095: 7b 9b                    u64 [a2] = a4
  6097: 33 08                    a1 = 0
  6099: 32 00                    ret
      :                          @371
  6101: 32 00                    ret
      :                          @372 [@dyn 70]
  6103: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6106: 7b 10 18                 u64 [sp + 0x18] = ra
  6109: 7b 15 10                 u64 [sp + 0x10] = s0
  6112: 7b 16 08                 u64 [sp + 0x8] = s1
  6115: 64 75                    s0 = a0
  6117: 82 7a 10                 a3 = u64 [a0 + 0x10]
  6120: 82 77                    a0 = u64 [a0]
  6122: c9 a7 07                 a0 = a0 - a3
  6125: 64 96                    s1 = a2
  6127: ac 97 2b                 jump @375 if a0 <u a2
      :                          @373
  6130: 7b 1a                    u64 [sp] = a3
  6132: 82 57 08                 a0 = u64 [s0 + 0x8]
  6135: c8 a7 07                 a0 = a0 + a3
  6138: 64 69                    a2 = s1
  6140: 50 20 8e 00 4f 01        ra = 142, jump @394
      :                          @374 [@dyn 71]
  6146: 82 17                    a0 = u64 [sp]
  6148: c8 76 06                 s1 = s1 + a0
  6151: 7b 56 10                 u64 [s0 + 0x10] = s1
  6154: 33 07                    a0 = 0
  6156: 82 10 18                 ra = u64 [sp + 0x18]
  6159: 82 15 10                 s0 = u64 [sp + 0x10]
  6162: 82 16 08                 s1 = u64 [sp + 0x8]
  6165: 95 11 20                 sp = sp + 0x20
  6168: 32 00                    ret
      :                          @375
  6170: 64 57                    a0 = s0
  6172: 7b 18                    u64 [sp] = a1
  6174: 64 a8                    a1 = a3
  6176: 64 69                    a2 = s1
  6178: 50 20 90 00 6f fc        ra = 144, jump @288
      :                          @376 [@dyn 72]
  6184: 82 18                    a1 = u64 [sp]
  6186: 82 5a 10                 a3 = u64 [s0 + 0x10]
  6189: 28 c5                    jump @373
      :                          @377 [@dyn 73]
  6191: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6194: 7b 10 20                 u64 [sp + 0x20] = ra
  6197: 7b 15 18                 u64 [sp + 0x18] = s0
  6200: 7b 16 10                 u64 [sp + 0x10] = s1
  6203: 64 86                    s1 = a1
  6205: 83 88                    i32 a1 = a1 + 0
  6207: 33 09 80 00              a2 = 0x80
  6211: 64 7a                    a3 = a0
  6213: ae 98 2c                 jump @382 if a1 >=u a2
      :                          @378
  6216: 82 a8 10                 a1 = u64 [a3 + 0x10]
  6219: 82 a7                    a0 = u64 [a3]
  6221: ab 78 13                 jump @381 if a1 != a0
      :                          @379
  6224: 64 a7                    a0 = a3
  6226: 64 a5                    s0 = a3
  6228: 50 20 94 00 04 fe        ra = 148, jump @332
      :                          @380 [@dyn 74]
  6234: 64 5a                    a3 = s0
  6236: 82 58 10                 a1 = u64 [s0 + 0x10]
  6239: 01                       fallthrough
      :                          @381
  6240: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6243: c8 87 07                 a0 = a0 + a1
  6246: 78 76                    u8 [a0] = s1
  6248: 95 88 01                 a1 = a1 + 0x1
  6251: 7b a8 10                 u64 [a3 + 0x10] = a1
  6254: 28 ac 00                 jump @390
      :                          @382
  6257: 8b 67 0b                 i32 a0 = s1 >> 0xb
  6260: 48 11 0c                 u32 [sp + 12] = 0
  6263: 52 07 1c                 jump @384 if a0 != 0
      :                          @383
  6266: 98 67 06                 a0 = s1 >> 0x6
  6269: 86 77 c0 00              a0 = a0 | 0xc0
  6273: 78 17 0c                 u8 [sp + 0xc] = a0
  6276: 84 67 3f                 a0 = s1 & 0x3f
  6279: 86 77 80 00              a0 = a0 | 0x80
  6283: 78 17 0d                 u8 [sp + 0xd] = a0
  6286: 33 06 02                 s1 = 0x2
  6289: 28 63                    jump @387
      :                          @384
  6291: 8b 67 10                 i32 a0 = s1 >> 0x10
  6294: 52 07 29                 jump @386 if a0 != 0
      :                          @385
  6297: 98 67 0c                 a0 = s1 >> 0xc
  6300: 86 77 e0 00              a0 = a0 | 0xe0
  6304: 78 17 0c                 u8 [sp + 0xc] = a0
  6307: 97 67 34                 a0 = s1 << 0x34
  6310: 98 77 3a                 a0 = a0 >> 0x3a
  6313: 95 77 80 00              a0 = a0 + 0x80
  6317: 78 17 0d                 u8 [sp + 0xd] = a0
  6320: 84 67 3f                 a0 = s1 & 0x3f
  6323: 86 77 80 00              a0 = a0 | 0x80
  6327: 78 17 0e                 u8 [sp + 0xe] = a0
  6330: 33 06 03                 s1 = 0x3
  6333: 28 37                    jump @387
      :                          @386
  6335: 97 67 2b                 a0 = s1 << 0x2b
  6338: 98 77 3d                 a0 = a0 >> 0x3d
  6341: 95 77 f0 00              a0 = a0 + 0xf0
  6345: 78 17 0c                 u8 [sp + 0xc] = a0
  6348: 97 67 2e                 a0 = s1 << 0x2e
  6351: 98 77 3a                 a0 = a0 >> 0x3a
  6354: 95 77 80 00              a0 = a0 + 0x80
  6358: 78 17 0d                 u8 [sp + 0xd] = a0
  6361: 97 67 34                 a0 = s1 << 0x34
  6364: 98 77 3a                 a0 = a0 >> 0x3a
  6367: 95 77 80 00              a0 = a0 + 0x80
  6371: 78 17 0e                 u8 [sp + 0xe] = a0
  6374: 84 67 3f                 a0 = s1 & 0x3f
  6377: 86 77 80 00              a0 = a0 | 0x80
  6381: 78 17 0f                 u8 [sp + 0xf] = a0
  6384: 33 06 04                 s1 = 0x4
  6387: 01                       fallthrough
      :                          @387
  6388: 82 a5 10                 s0 = u64 [a3 + 0x10]
  6391: 82 a7                    a0 = u64 [a3]
  6393: c9 57 07                 a0 = a0 - s0
  6396: ac 67 2e                 jump @391 if a0 <u s1
      :                          @388
  6399: 7b 1a                    u64 [sp] = a3
  6401: 82 a7 08                 a0 = u64 [a3 + 0x8]
  6404: c8 57 07                 a0 = a0 + s0
  6407: 95 18 0c                 a1 = sp + 0xc
  6410: 64 69                    a2 = s1
  6412: 50 20 96 00 3f           ra = 150, jump @394
      :                          @389 [@dyn 75]
  6417: c8 56 06                 s1 = s1 + s0
  6420: 82 17                    a0 = u64 [sp]
  6422: 7b 76 10                 u64 [a0 + 0x10] = s1
  6425: 01                       fallthrough
      :                          @390
  6426: 33 07                    a0 = 0
  6428: 82 10 20                 ra = u64 [sp + 0x20]
  6431: 82 15 18                 s0 = u64 [sp + 0x18]
  6434: 82 16 10                 s1 = u64 [sp + 0x10]
  6437: 95 11 28                 sp = sp + 0x28
  6440: 32 00                    ret
      :                          @391
  6442: 64 a7                    a0 = a3
  6444: 64 58                    a1 = s0
  6446: 64 69                    a2 = s1
  6448: 64 a5                    s0 = a3
  6450: 50 20 98 00 5f fb        ra = 152, jump @288
      :                          @392 [@dyn 76]
  6456: 64 5a                    a3 = s0
  6458: 82 55 10                 s0 = u64 [s0 + 0x10]
  6461: 28 c2                    jump @388
      :                          @393 [@dyn 77]
  6463: 64 8a                    a3 = a1
  6465: 33 08 d8 03 01           a1 = 0x103d8
  6470: 64 a9                    a2 = a3
  6472: 28 ba 04                 jump @489
      :                          @394
  6475: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  6478: 7b 10 18                 u64 [sp + 0x18] = ra
  6481: 7b 15 10                 u64 [sp + 0x10] = s0
  6484: 7b 16 08                 u64 [sp + 0x8] = s1
  6487: 53 19 10 64              jump @403 if a2 <u 16
      :                          @395
  6491: 8d 7a                    i32 a3 = -a0
  6493: 84 a2 07                 t0 = a3 & 0x7
  6496: c8 27 0b                 a4 = a0 + t0
  6499: 51 02 15                 jump @398 if t0 == 0
      :                          @396
  6502: 64 8c                    a5 = a1
  6504: 64 75                    s0 = a0
  6506: 01                       fallthrough
      :                          @397
  6507: 7c ca                    a3 = u8 [a5]
  6509: 78 5a                    u8 [s0] = a3
  6511: 95 55 01                 s0 = s0 + 0x1
  6514: 95 cc 01                 a5 = a5 + 0x1
  6517: ac b5 f6                 jump @397 if s0 <u a4
      :                          @398
  6520: c8 28 03                 t1 = a1 + t0
  6523: c9 29 02                 t0 = a2 - t0
  6526: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  6529: 84 38 07                 a1 = t1 & 0x7
  6532: c8 4b 0a                 a3 = a4 + t2
  6535: 51 08 3b                 jump @405 if a1 == 0
      :                          @399
  6538: 58 04 4b                 jump @408 if t2 <=s 0
      :                          @400
  6541: 97 38 03                 a1 = t1 << 0x3
  6544: 84 80 38                 ra = a1 & 0x38
  6547: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6550: 82 c5                    s0 = u64 [a5]
  6552: 8d 88                    i32 a1 = -a1
  6554: 84 88 38                 a1 = a1 & 0x38
  6557: 95 cc 08                 a5 = a5 + 0x8
  6560: 01                       fallthrough
      :                          @401
  6561: 82 c6                    s1 = u64 [a5]
  6563: d0 05 05                 s0 = s0 >> ra
  6566: cf 86 09                 a2 = s1 << a1
  6569: d4 59 09                 a2 = a2 | s0
  6572: 7b b9                    u64 [a4] = a2
  6574: 95 bb 08                 a4 = a4 + 0x8
  6577: 95 cc 08                 a5 = a5 + 0x8
  6580: 64 65                    s0 = s1
  6582: ac ab eb                 jump @401 if a4 <u a3
      :                          @402
  6585: 28 1c                    jump @408
      :                          @403
  6587: 64 7a                    a3 = a0
  6589: 52 09 21                 jump @409 if a2 != 0
      :                          @404
  6592: 28 2f                    jump @411
      :                          @405
  6594: 58 04 13                 jump @408 if t2 <=s 0
      :                          @406
  6597: 64 38                    a1 = t1
  6599: 01                       fallthrough
      :                          @407
  6600: 82 89                    a2 = u64 [a1]
  6602: 7b b9                    u64 [a4] = a2
  6604: 95 bb 08                 a4 = a4 + 0x8
  6607: 95 88 08                 a1 = a1 + 0x8
  6610: ac ab f6                 jump @407 if a4 <u a3
      :                          @408
  6613: c8 43 08                 a1 = t1 + t2
  6616: 84 29 07                 a2 = t0 & 0x7
  6619: 51 09 14                 jump @411 if a2 == 0
      :                          @409
  6622: c8 a9 09                 a2 = a2 + a3
  6625: 01                       fallthrough
      :                          @410
  6626: 7c 8b                    a4 = u8 [a1]
  6628: 78 ab                    u8 [a3] = a4
  6630: 95 aa 01                 a3 = a3 + 0x1
  6633: 95 88 01                 a1 = a1 + 0x1
  6636: ac 9a f6                 jump @410 if a3 <u a2
      :                          @411
  6639: 82 10 18                 ra = u64 [sp + 0x18]
  6642: 82 15 10                 s0 = u64 [sp + 0x10]
  6645: 82 16 08                 s1 = u64 [sp + 0x8]
  6648: 95 11 20                 sp = sp + 0x20
  6651: 32 00                    ret
      :                          @412
  6653: 53 19 10 48              jump @421 if a2 <u 16
      :                          @413
  6657: 8d 7a                    i32 a3 = -a0
  6659: 84 aa 07                 a3 = a3 & 0x7
  6662: c8 a7 0b                 a4 = a0 + a3
  6665: 51 0a 0e                 jump @416 if a3 == 0
      :                          @414
  6668: 64 7c                    a5 = a0
  6670: 01                       fallthrough
      :                          @415
  6671: 78 c8                    u8 [a5] = a1
  6673: 95 cc 01                 a5 = a5 + 0x1
  6676: ac bc fb                 jump @415 if a5 <u a4
      :                          @416
  6679: c9 a9 03                 t1 = a2 - a3
  6682: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  6685: c8 cb 0a                 a3 = a4 + a5
  6688: 58 0c 1d                 jump @419 if a5 <=s 0
      :                          @417
  6691: 84 82 ff 00              t0 = a1 & 0xff
  6695: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  6705: ca 92 0c                 a5 = t0 * a2
  6708: 01                       fallthrough
      :                          @418
  6709: 7b bc                    u64 [a4] = a5
  6711: 95 bb 08                 a4 = a4 + 0x8
  6714: ac ab fb                 jump @418 if a4 <u a3
      :                          @419
  6717: 84 39 07                 a2 = t1 & 0x7
  6720: 52 09 0a                 jump @422 if a2 != 0
      :                          @420
  6723: 28 13                    jump @424
      :                          @421
  6725: 64 7a                    a3 = a0
  6727: 51 09 0f                 jump @424 if a2 == 0
      :                          @422
  6730: c8 a9 09                 a2 = a2 + a3
  6733: 01                       fallthrough
      :                          @423
  6734: 78 a8                    u8 [a3] = a1
  6736: 95 aa 01                 a3 = a3 + 0x1
  6739: ac 9a fb                 jump @423 if a3 <u a2
      :                          @424
  6742: 32 00                    ret
      :                          @425 [@dyn 78]
  6744: 82 77                    a0 = u64 [a0]
  6746: 01                       fallthrough
      :                          @426
  6747: 28                       jump @426
      :                          @427
  6748: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6751: 7b 10 50                 u64 [sp + 0x50] = ra
  6754: 7b 15 48                 u64 [sp + 0x48] = s0
  6757: 7b 16 40                 u64 [sp + 0x40] = s1
  6760: 82 79                    a2 = u64 [a0]
  6762: 7b 18                    u64 [sp] = a1
  6764: 98 9a 04                 a3 = a2 >> 0x4
  6767: 33 08 27                 a1 = 0x27
  6770: 53 2a 71 02 84 00        jump @430 if a3 <u 625
      :                          @428
  6776: 33 08 27                 a1 = 0x27
  6779: 95 1a 3e                 a3 = sp + 0x3e
  6782: 3a 07 00 00 03           a0 = u64 [0x30000]
  6787: 7b 17 10                 u64 [sp + 0x10] = a0
  6790: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6796: 33 00 7b 14              ra = 0x147b
  6800: 33 0c 58 04 01           a5 = 0x10458
  6805: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6811: 33 05 9c                 s0 = 0xffffffffffffff9c
  6814: 01                       fallthrough
      :                          @429
  6815: 64 93                    t1 = a2
  6817: 82 17 10                 a0 = u64 [sp + 0x10]
  6820: d6 79 09                 a2 = a2 mulhu a0
  6823: 98 99 0b                 a2 = a2 >> 0xb
  6826: 82 17 08                 a0 = u64 [sp + 0x8]
  6829: c0 79 0b                 i32 a4 = a2 * a0
  6832: c8 3b 06                 s1 = a4 + t1
  6835: 97 6b 30                 a4 = s1 << 0x30
  6838: 98 bb 32                 a4 = a4 >> 0x32
  6841: ca 0b 0b                 a4 = a4 * ra
  6844: 98 b7 11                 a0 = a4 >> 0x11
  6847: 98 bb 10                 a4 = a4 >> 0x10
  6850: 84 bb fe 07              a4 = a4 & 0x7fe
  6854: ca 57 07                 a0 = a0 * s0
  6857: c8 67 07                 a0 = a0 + s1
  6860: 97 77 31                 a0 = a0 << 0x31
  6863: 98 77 30                 a0 = a0 >> 0x30
  6866: c8 cb 0b                 a4 = a4 + a5
  6869: 7c b6                    s1 = u8 [a4]
  6871: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6874: c8 c7 07                 a0 = a0 + a5
  6877: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6880: 7c 77                    a0 = u8 [a0]
  6882: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6885: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6888: 78 a2 01                 u8 [a3 + 0x1] = t0
  6891: 78 a7                    u8 [a3] = a0
  6893: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6896: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6899: ac 34 ac                 jump @429 if t2 <u t1
      :                          @430
  6902: 54 19 63 3b              jump @432 if a2 <=u 99
      :                          @431
  6906: 97 97 30                 a0 = a2 << 0x30
  6909: 98 77 32                 a0 = a0 >> 0x32
  6912: 96 77 7b 14              a0 = a0 * 0x147b
  6916: 98 77 11                 a0 = a0 >> 0x11
  6919: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6922: c8 a9 09                 a2 = a2 + a3
  6925: 97 99 31                 a2 = a2 << 0x31
  6928: 98 99 30                 a2 = a2 >> 0x30
  6931: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6934: 33 0a 58 04 01           a3 = 0x10458
  6939: c8 a9 09                 a2 = a2 + a3
  6942: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6945: 7c 99                    a2 = u8 [a2]
  6947: 95 1b 19                 a4 = sp + 0x19
  6950: c8 8b 0b                 a4 = a4 + a1
  6953: 78 ba 01                 u8 [a4 + 0x1] = a3
  6956: 78 b9                    u8 [a4] = a2
  6958: 64 79                    a2 = a0
  6960: 01                       fallthrough
      :                          @432
  6961: 55 19 0a 14              jump @434 if a2 >=u 10
      :                          @433
  6965: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6968: 95 17 19                 a0 = sp + 0x19
  6971: c8 87 07                 a0 = a0 + a1
  6974: 83 99 30                 i32 a2 = a2 + 0x30
  6977: 78 79                    u8 [a0] = a2
  6979: 28 21                    jump @435
      :                          @434
  6981: 97 99 01                 a2 = a2 << 0x1
  6984: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6987: 33 07 58 04 01           a0 = 0x10458
  6992: c8 97 07                 a0 = a0 + a2
  6995: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6998: 7c 77                    a0 = u8 [a0]
  7000: 95 1a 19                 a3 = sp + 0x19
  7003: c8 8a 0a                 a3 = a3 + a1
  7006: 78 a9 01                 u8 [a3 + 0x1] = a2
  7009: 78 a7                    u8 [a3] = a0
  7011: 01                       fallthrough
      :                          @435
  7012: 95 1a 19                 a3 = sp + 0x19
  7015: c8 8a 0a                 a3 = a3 + a1
  7018: 9a 8b 27                 a4 = 0x27 - a1
  7021: 33 08 08 04 01           a1 = 0x10408
  7026: 82 17                    a0 = u64 [sp]
  7028: 33 09                    a2 = 0
  7030: 50 20 9e 00 13           ra = 158, jump @437
      :                          @436 [@dyn 79]
  7035: 82 10 50                 ra = u64 [sp + 0x50]
  7038: 82 15 48                 s0 = u64 [sp + 0x48]
  7041: 82 16 40                 s1 = u64 [sp + 0x40]
  7044: 95 11 58                 sp = sp + 0x58
  7047: 32 00                    ret
      :                          @437
  7049: 95 11 98                 sp = sp + 0xffffffffffffff98
  7052: 7b 10 60                 u64 [sp + 0x60] = ra
  7055: 7b 15 58                 u64 [sp + 0x58] = s0
  7058: 7b 16 50                 u64 [sp + 0x50] = s1
  7061: 80 73 34                 t1 = u32 [a0 + 0x34]
  7064: 7b 1a 20                 u64 [sp + 0x20] = a3
  7067: 64 9c                    a5 = a2
  7069: 84 36 01                 s1 = t1 & 0x1
  7072: 33 02 2b                 t0 = 0x2b
  7075: 33 09 00 00 11           a2 = 0x110000
  7080: 84 3a 04                 a3 = t1 & 0x4
  7083: 7b 1b 28                 u64 [sp + 0x28] = a4
  7086: c8 b6 04                 t2 = s1 + a4
  7089: 7b 1c 30                 u64 [sp + 0x30] = a5
  7092: 52 0a 10                 jump @440 if a3 != 0
      :                          @438
  7095: 49 11 38                 u64 [sp + 56] = 0
  7098: 82 78                    a1 = u64 [a0]
  7100: 94 69 2b                 a2 = 0x2b if s1 != 0
  7103: 52 08 35                 jump @444 if a1 != 0
      :                          @439
  7106: 28 56                    jump @449
      :                          @440
  7108: 7b 18 38                 u64 [sp + 0x38] = a1
  7111: 33 09                    a2 = 0
  7113: 51 0c 1b                 jump @443 if a5 == 0
      :                          @441
  7116: 82 1b 38                 a4 = u64 [sp + 0x38]
  7119: 01                       fallthrough
      :                          @442
  7120: 7d b5                    s0 = i8 [a4]
  7122: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  7125: 85 5a 01                 a3 = s0 ^ 0x1
  7128: c8 a9 09                 a2 = a2 + a3
  7131: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  7134: 95 bb 01                 a4 = a4 + 0x1
  7137: 52 0c ef                 jump @442 if a5 != 0
      :                          @443
  7140: c8 94 04                 t2 = t2 + a2
  7143: 33 09 00 00 11           a2 = 0x110000
  7148: 82 78                    a1 = u64 [a0]
  7150: db 62 09                 a2 = t0 if s1 != 0
  7153: 51 08 27                 jump @449 if a1 == 0
      :                          @444
  7156: 82 7a 08                 a3 = u64 [a0 + 0x8]
  7159: ae a4 21                 jump @449 if t2 >=u a3
      :                          @445
  7162: 84 38 08                 a1 = t1 & 0x8
  7165: 52 08 51                 jump @452 if a1 != 0
      :                          @446
  7168: 7c 76 38                 s1 = u8 [a0 + 0x38]
  7171: c9 4a 0a                 a3 = a3 - t2
  7174: 7b 19 18                 u64 [sp + 0x18] = a2
  7177: 5a 16 01 a0 00           jump @459 if s1 >s 1
      :                          @447
  7182: 52 06 ad 00              jump @461 if s1 != 0
      :                          @448
  7186: 7b 1a 10                 u64 [sp + 0x10] = a3
  7189: 28 ac 00                 jump @462
      :                          @449
  7192: 82 75 20                 s0 = u64 [a0 + 0x20]
  7195: 82 76 28                 s1 = u64 [a0 + 0x28]
  7198: 64 57                    a0 = s0
  7200: 64 68                    a1 = s1
  7202: 82 1a 38                 a3 = u64 [sp + 0x38]
  7205: 82 1b 30                 a4 = u64 [sp + 0x30]
  7208: 50 20 a0 00 75 01        ra = 160, jump @482
      :                          @450 [@dyn 80]
  7214: 33 08 01                 a1 = 0x1
  7217: 52 07 be 00              jump @467 if a0 != 0
      :                          @451
  7221: 82 6c 18                 a5 = u64 [s1 + 0x18]
  7224: 64 57                    a0 = s0
  7226: 82 18 20                 a1 = u64 [sp + 0x20]
  7229: 82 19 28                 a2 = u64 [sp + 0x28]
  7232: 82 10 60                 ra = u64 [sp + 0x60]
  7235: 82 15 58                 s0 = u64 [sp + 0x58]
  7238: 82 16 50                 s1 = u64 [sp + 0x50]
  7241: 95 11 68                 sp = sp + 0x68
  7244: 32 0c                    jump [a5]
      :                          @452
  7246: 7b 1a 40                 u64 [sp + 0x40] = a3
  7249: 64 45                    s0 = t2
  7251: 81 78 30                 a1 = i32 [a0 + 0x30]
  7254: 7b 18 10                 u64 [sp + 0x10] = a1
  7257: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  7260: 7b 1a 08                 u64 [sp + 0x8] = a3
  7263: 82 7a 20                 a3 = u64 [a0 + 0x20]
  7266: 82 78 28                 a1 = u64 [a0 + 0x28]
  7269: 48 17 30 30              u32 [a0 + 48] = 0x30
  7273: 7b 17                    u64 [sp] = a0
  7275: 46 17 38 01              u8 [a0 + 56] = 0x1
  7279: 7b 1a 48                 u64 [sp + 0x48] = a3
  7282: 64 a7                    a0 = a3
  7284: 64 86                    s1 = a1
  7286: 82 1a 38                 a3 = u64 [sp + 0x38]
  7289: 82 1b 30                 a4 = u64 [sp + 0x30]
  7292: 50 20 a2 00 21 01        ra = 162, jump @482
      :                          @453 [@dyn 81]
  7298: 52 07 69                 jump @466 if a0 != 0
      :                          @454
  7301: 82 17 40                 a0 = u64 [sp + 0x40]
  7304: c9 57 05                 s0 = a0 - s0
  7307: 95 55 01                 s0 = s0 + 0x1
  7310: 01                       fallthrough
      :                          @455
  7311: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  7314: 51 05 cb 00              jump @477 if s0 == 0
      :                          @456
  7318: 82 69 20                 a2 = u64 [s1 + 0x20]
  7321: 33 08 30                 a1 = 0x30
  7324: 82 17 48                 a0 = u64 [sp + 0x48]
  7327: b4 90 02 a4 00           ra = 164, jump [a2]
      :                          @457 [@dyn 82]
  7332: 51 07 eb                 jump @455 if a0 == 0
      :                          @458
  7335: 28 44                    jump @466
      :                          @459
  7337: 52 16 02 12              jump @461 if s1 != 2
      :                          @460
  7341: 98 a6 01                 s1 = a3 >> 0x1
  7344: 95 a8 01                 a1 = a3 + 0x1
  7347: 98 88 01                 a1 = a1 >> 0x1
  7350: 7b 18 10                 u64 [sp + 0x10] = a1
  7353: 28 08                    jump @462
      :                          @461
  7355: 64 a6                    s1 = a3
  7357: 49 11 10                 u64 [sp + 16] = 0
  7360: 01                       fallthrough
      :                          @462
  7361: 82 78 20                 a1 = u64 [a0 + 0x20]
  7364: 7b 18 48                 u64 [sp + 0x48] = a1
  7367: 82 75 28                 s0 = u64 [a0 + 0x28]
  7370: 81 77 30                 a0 = i32 [a0 + 0x30]
  7373: 7b 17 40                 u64 [sp + 0x40] = a0
  7376: 95 66 01                 s1 = s1 + 0x1
  7379: 01                       fallthrough
      :                          @463
  7380: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7383: 51 06 28                 jump @468 if s1 == 0
      :                          @464
  7386: 82 59 20                 a2 = u64 [s0 + 0x20]
  7389: 82 17 48                 a0 = u64 [sp + 0x48]
  7392: 82 18 40                 a1 = u64 [sp + 0x40]
  7395: b4 90 02 a6 00           ra = 166, jump [a2]
      :                          @465 [@dyn 83]
  7400: 51 07 ec                 jump @463 if a0 == 0
      :                          @466
  7403: 33 08 01                 a1 = 0x1
  7406: 01                       fallthrough
      :                          @467
  7407: 64 87                    a0 = a1
  7409: 82 10 60                 ra = u64 [sp + 0x60]
  7412: 82 15 58                 s0 = u64 [sp + 0x58]
  7415: 82 16 50                 s1 = u64 [sp + 0x50]
  7418: 95 11 68                 sp = sp + 0x68
  7421: 32 00                    ret
      :                          @468
  7423: 82 16 48                 s1 = u64 [sp + 0x48]
  7426: 64 67                    a0 = s1
  7428: 64 58                    a1 = s0
  7430: 82 19 18                 a2 = u64 [sp + 0x18]
  7433: 82 1a 38                 a3 = u64 [sp + 0x38]
  7436: 82 1b 30                 a4 = u64 [sp + 0x30]
  7439: 50 20 a8 00 8e 00        ra = 168, jump @482
      :                          @469 [@dyn 84]
  7445: 33 08 01                 a1 = 0x1
  7448: 52 07 d7                 jump @467 if a0 != 0
      :                          @470
  7451: 82 5a 18                 a3 = u64 [s0 + 0x18]
  7454: 64 67                    a0 = s1
  7456: 82 18 20                 a1 = u64 [sp + 0x20]
  7459: 82 19 28                 a2 = u64 [sp + 0x28]
  7462: b4 a0 02 aa 00           ra = 170, jump [a3]
      :                          @471 [@dyn 85]
  7467: 33 08 01                 a1 = 0x1
  7470: 52 07 c1                 jump @467 if a0 != 0
      :                          @472
  7473: 82 17 10                 a0 = u64 [sp + 0x10]
  7476: 9a 77                    a0 = -a0
  7478: 7b 17 38                 u64 [sp + 0x38] = a0
  7481: 33 06 ff                 s1 = 0xffffffffffffffff
  7484: 01                       fallthrough
      :                          @473
  7485: 82 17 38                 a0 = u64 [sp + 0x38]
  7488: c8 67 07                 a0 = a0 + s1
  7491: 51 17 ff 45              jump @480 if a0 == 4294967295
      :                          @474
  7495: 82 59 20                 a2 = u64 [s0 + 0x20]
  7498: 82 17 48                 a0 = u64 [sp + 0x48]
  7501: 82 18 40                 a1 = u64 [sp + 0x40]
  7504: b4 90 02 ac 00           ra = 172, jump [a2]
      :                          @475 [@dyn 86]
  7509: 95 66 01                 s1 = s1 + 0x1
  7512: 51 07 e5                 jump @473 if a0 == 0
      :                          @476
  7515: 28 39                    jump @481
      :                          @477
  7517: 82 6a 18                 a3 = u64 [s1 + 0x18]
  7520: 82 17 48                 a0 = u64 [sp + 0x48]
  7523: 82 18 20                 a1 = u64 [sp + 0x20]
  7526: 82 19 28                 a2 = u64 [sp + 0x28]
  7529: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @478 [@dyn 87]
  7534: 33 08 01                 a1 = 0x1
  7537: 52 07 7e ff              jump @467 if a0 != 0
      :                          @479
  7541: 33 08                    a1 = 0
  7543: 82 16                    s1 = u64 [sp]
  7545: 82 17 10                 a0 = u64 [sp + 0x10]
  7548: 7a 67 30                 u32 [s1 + 0x30] = a0
  7551: 82 17 08                 a0 = u64 [sp + 0x8]
  7554: 78 67 38                 u8 [s1 + 0x38] = a0
  7557: 28 6a ff                 jump @467
      :                          @480
  7560: 82 16 10                 s1 = u64 [sp + 0x10]
  7563: 82 17 10                 a0 = u64 [sp + 0x10]
  7566: d8 76 08                 a1 = s1 <u a0
  7569: 28 5e ff                 jump @467
      :                          @481
  7572: 82 17 10                 a0 = u64 [sp + 0x10]
  7575: d8 76 08                 a1 = s1 <u a0
  7578: 28 55 ff                 jump @467
      :                          @482
  7581: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  7584: 7b 10 20                 u64 [sp + 0x20] = ra
  7587: 7b 15 18                 u64 [sp + 0x18] = s0
  7590: 7b 16 10                 u64 [sp + 0x10] = s1
  7593: 83 9c                    i32 a5 = a2 + 0
  7595: 33 02 00 00 11           t0 = 0x110000
  7600: 64 a6                    s1 = a3
  7602: 64 85                    s0 = a1
  7604: 64 7a                    a3 = a0
  7606: aa 2c 21                 jump @485 if a5 == t0
      :                          @483
  7609: 82 5c 20                 a5 = u64 [s0 + 0x20]
  7612: 64 a7                    a0 = a3
  7614: 64 98                    a1 = a2
  7616: 7b 1b 08                 u64 [sp + 0x8] = a4
  7619: 7b 1a                    u64 [sp] = a3
  7621: b4 c0 02 b0 00           ra = 176, jump [a5]
      :                          @484 [@dyn 88]
  7626: 82 1a                    a3 = u64 [sp]
  7628: 82 1b 08                 a4 = u64 [sp + 0x8]
  7631: 64 78                    a1 = a0
  7633: 33 07 01                 a0 = 0x1
  7636: 52 08 20                 jump @488 if a1 != 0
      :                          @485
  7639: 51 06 1a                 jump @487 if s1 == 0
      :                          @486
  7642: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7645: 64 a7                    a0 = a3
  7647: 64 68                    a1 = s1
  7649: 64 b9                    a2 = a4
  7651: 82 10 20                 ra = u64 [sp + 0x20]
  7654: 82 15 18                 s0 = u64 [sp + 0x18]
  7657: 82 16 10                 s1 = u64 [sp + 0x10]
  7660: 95 11 28                 sp = sp + 0x28
  7663: 32 0c                    jump [a5]
      :                          @487
  7665: 33 07                    a0 = 0
  7667: 01                       fallthrough
      :                          @488
  7668: 82 10 20                 ra = u64 [sp + 0x20]
  7671: 82 15 18                 s0 = u64 [sp + 0x18]
  7674: 82 16 10                 s1 = u64 [sp + 0x10]
  7677: 95 11 28                 sp = sp + 0x28
  7680: 32 00                    ret
      :                          @489
  7682: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7686: 7b 10 80 00              u64 [sp + 0x80] = ra
  7690: 7b 15 78                 u64 [sp + 0x78] = s0
  7693: 7b 16 70                 u64 [sp + 0x70] = s1
  7696: 49 11 60 20              u64 [sp + 96] = 0x20
  7700: 33 0a 03                 a3 = 0x3
  7703: 78 1a 68                 u8 [sp + 0x68] = a3
  7706: 82 96 20                 s1 = u64 [a2 + 0x20]
  7709: 49 11 30                 u64 [sp + 48] = 0
  7712: 49 11 40                 u64 [sp + 64] = 0
  7715: 7b 17 50                 u64 [sp + 0x50] = a0
  7718: 7b 18 58                 u64 [sp + 0x58] = a1
  7721: 51 06 0a 01              jump @511 if s1 == 0
      :                          @490
  7725: 82 97 28                 a0 = u64 [a2 + 0x28]
  7728: 51 07 79 01              jump @521 if a0 == 0
      :                          @491
  7732: 49 11 28                 u64 [sp + 40] = 0
  7735: 82 95                    s0 = u64 [a2]
  7737: 7b 19 08                 u64 [sp + 0x8] = a2
  7740: 82 98 10                 a1 = u64 [a2 + 0x10]
  7743: 7b 18 18                 u64 [sp + 0x18] = a1
  7746: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7749: 97 88 03                 a1 = a1 << 0x3
  7752: 98 88 03                 a1 = a1 >> 0x3
  7755: 95 88 01                 a1 = a1 + 0x1
  7758: 7b 18                    u64 [sp] = a1
  7760: 95 55 08                 s0 = s0 + 0x8
  7763: 96 78 38                 a1 = a0 * 0x38
  7766: 95 66 18                 s1 = s1 + 0x18
  7769: 33 07 9c 00              a0 = 0x9c
  7773: 7b 17 10                 u64 [sp + 0x10] = a0
  7776: 01                       fallthrough
      :                          @492
  7777: 7b 18 20                 u64 [sp + 0x20] = a1
  7780: 82 59                    a2 = u64 [s0]
  7782: 51 09 18                 jump @495 if a2 == 0
      :                          @493
  7785: 82 1a 58                 a3 = u64 [sp + 0x58]
  7788: 82 17 50                 a0 = u64 [sp + 0x50]
  7791: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7794: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7797: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @494 [@dyn 89]
  7802: 52 07 55 01              jump @524 if a0 != 0
      :                          @495
  7806: 81 67 10                 a0 = i32 [s1 + 0x10]
  7809: 7a 17 60                 u32 [sp + 0x60] = a0
  7812: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7815: 78 17 68                 u8 [sp + 0x68] = a0
  7818: 81 67 14                 a0 = i32 [s1 + 0x14]
  7821: 7a 17 64                 u32 [sp + 0x64] = a0
  7824: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7827: 82 67                    a0 = u64 [s1]
  7829: 51 08 26                 jump @500 if a1 == 0
      :                          @496
  7832: 52 18 01 16              jump @498 if a1 != 1
      :                          @497
  7836: 97 77 04                 a0 = a0 << 0x4
  7839: 82 18 18                 a1 = u64 [sp + 0x18]
  7842: c8 87 07                 a0 = a0 + a1
  7845: 82 78 08                 a1 = u64 [a0 + 0x8]
  7848: 82 19 10                 a2 = u64 [sp + 0x10]
  7851: aa 98 07                 jump @499 if a1 == a2
      :                          @498
  7854: 33 08                    a1 = 0
  7856: 28 0f                    jump @501
      :                          @499
  7858: 82 77                    a0 = u64 [a0]
  7860: 82 77                    a0 = u64 [a0]
  7862: 33 08 01                 a1 = 0x1
  7865: 28 06                    jump @501
      :                          @500
  7867: 33 08 01                 a1 = 0x1
  7870: 01                       fallthrough
      :                          @501
  7871: 7b 18 30                 u64 [sp + 0x30] = a1
  7874: 7b 17 38                 u64 [sp + 0x38] = a0
  7877: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7880: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7883: 51 08 26                 jump @506 if a1 == 0
      :                          @502
  7886: 52 18 01 16              jump @504 if a1 != 1
      :                          @503
  7890: 97 77 04                 a0 = a0 << 0x4
  7893: 82 18 18                 a1 = u64 [sp + 0x18]
  7896: c8 87 07                 a0 = a0 + a1
  7899: 82 78 08                 a1 = u64 [a0 + 0x8]
  7902: 82 19 10                 a2 = u64 [sp + 0x10]
  7905: aa 98 07                 jump @505 if a1 == a2
      :                          @504
  7908: 33 08                    a1 = 0
  7910: 28 0f                    jump @507
      :                          @505
  7912: 82 77                    a0 = u64 [a0]
  7914: 82 77                    a0 = u64 [a0]
  7916: 33 08 01                 a1 = 0x1
  7919: 28 06                    jump @507
      :                          @506
  7921: 33 08 01                 a1 = 0x1
  7924: 01                       fallthrough
      :                          @507
  7925: 7b 18 40                 u64 [sp + 0x40] = a1
  7928: 7b 17 48                 u64 [sp + 0x48] = a0
  7931: 82 67 08                 a0 = u64 [s1 + 0x8]
  7934: 97 77 04                 a0 = a0 << 0x4
  7937: 82 18 18                 a1 = u64 [sp + 0x18]
  7940: c8 78 08                 a1 = a1 + a0
  7943: 82 87                    a0 = u64 [a1]
  7945: 82 89 08                 a2 = u64 [a1 + 0x8]
  7948: 95 18 30                 a1 = sp + 0x30
  7951: b4 90 02 b4 00           ra = 180, jump [a2]
      :                          @508 [@dyn 90]
  7956: 52 07 bb 00              jump @524 if a0 != 0
      :                          @509
  7960: 95 55 10                 s0 = s0 + 0x10
  7963: 82 18 20                 a1 = u64 [sp + 0x20]
  7966: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7969: 95 66 38                 s1 = s1 + 0x38
  7972: 82 17 28                 a0 = u64 [sp + 0x28]
  7975: 95 77 01                 a0 = a0 + 0x1
  7978: 7b 17 28                 u64 [sp + 0x28] = a0
  7981: 52 08 34 ff              jump @492 if a1 != 0
      :                          @510
  7985: 28 6b                    jump @519
      :                          @511
  7987: 82 97 18                 a0 = u64 [a2 + 0x18]
  7990: 51 07 73                 jump @521 if a0 == 0
      :                          @512
  7993: 82 95 10                 s0 = u64 [a2 + 0x10]
  7996: 33 0a                    a3 = 0
  7998: 97 78 04                 a1 = a0 << 0x4
  8001: c8 58 08                 a1 = a1 + s0
  8004: 7b 18 20                 u64 [sp + 0x20] = a1
  8007: 7b 19 08                 u64 [sp + 0x8] = a2
  8010: 82 96                    s1 = u64 [a2]
  8012: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8015: 97 77 04                 a0 = a0 << 0x4
  8018: 98 77 04                 a0 = a0 >> 0x4
  8021: 95 77 01                 a0 = a0 + 0x1
  8024: 7b 17                    u64 [sp] = a0
  8026: 95 66 08                 s1 = s1 + 0x8
  8029: 01                       fallthrough
      :                          @513
  8030: 7b 1a 28                 u64 [sp + 0x28] = a3
  8033: 82 69                    a2 = u64 [s1]
  8035: 51 09 17                 jump @516 if a2 == 0
      :                          @514
  8038: 82 1a 58                 a3 = u64 [sp + 0x58]
  8041: 82 17 50                 a0 = u64 [sp + 0x50]
  8044: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  8047: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8050: b4 a0 02 b6 00           ra = 182, jump [a3]
      :                          @515 [@dyn 91]
  8055: 52 07 58                 jump @524 if a0 != 0
      :                          @516
  8058: 82 57                    a0 = u64 [s0]
  8060: 82 59 08                 a2 = u64 [s0 + 0x8]
  8063: 95 18 30                 a1 = sp + 0x30
  8066: b4 90 02 b8 00           ra = 184, jump [a2]
      :                          @517 [@dyn 92]
  8071: 52 07 48                 jump @524 if a0 != 0
      :                          @518
  8074: 95 66 10                 s1 = s1 + 0x10
  8077: 95 55 10                 s0 = s0 + 0x10
  8080: 82 1a 28                 a3 = u64 [sp + 0x28]
  8083: 95 aa 01                 a3 = a3 + 0x1
  8086: 82 17 20                 a0 = u64 [sp + 0x20]
  8089: ab 75 c5                 jump @513 if s0 != a0
      :                          @519
  8092: 82 19 08                 a2 = u64 [sp + 0x8]
  8095: 82 1a                    a3 = u64 [sp]
  8097: 82 97 08                 a0 = u64 [a2 + 0x8]
  8100: ac 7a 0d                 jump @522 if a3 <u a0
      :                          @520
  8103: 28 2d                    jump @525
      :                          @521
  8105: 33 0a                    a3 = 0
  8107: 82 97 08                 a0 = u64 [a2 + 0x8]
  8110: 54 07 26                 jump @525 if a0 <=u 0
      :                          @522
  8113: 82 97                    a0 = u64 [a2]
  8115: 97 a8 04                 a1 = a3 << 0x4
  8118: c8 87 09                 a2 = a0 + a1
  8121: 82 1a 58                 a3 = u64 [sp + 0x58]
  8124: 82 17 50                 a0 = u64 [sp + 0x50]
  8127: 82 98                    a1 = u64 [a2]
  8129: 82 99 08                 a2 = u64 [a2 + 0x8]
  8132: 82 aa 18                 a3 = u64 [a3 + 0x18]
  8135: b4 a0 02 ba 00           ra = 186, jump [a3]
      :                          @523 [@dyn 93]
  8140: 51 07 08                 jump @525 if a0 == 0
      :                          @524
  8143: 33 07 01                 a0 = 0x1
  8146: 28 05                    jump @526
      :                          @525
  8148: 33 07                    a0 = 0
  8150: 01                       fallthrough
      :                          @526
  8151: 82 10 80 00              ra = u64 [sp + 0x80]
  8155: 82 15 78                 s0 = u64 [sp + 0x78]
  8158: 82 16 70                 s1 = u64 [sp + 0x70]
  8161: 95 11 88 00              sp = sp + 0x88
  8165: 32 00                    ret
      :                          @527 [@dyn 94]
  8167: 32 00                    ret
      :                          @528 [@dyn 95]
  8169: 95 11 80                 sp = sp + 0xffffffffffffff80
  8172: 7b 10 78                 u64 [sp + 0x78] = ra
  8175: 7b 15 70                 u64 [sp + 0x70] = s0
  8178: 7b 16 68                 u64 [sp + 0x68] = s1
  8181: 64 92                    t0 = a2
  8183: 33 00                    ra = 0
  8185: 33 0b                    a4 = 0
  8187: 33 05                    s0 = 0
  8189: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  8199: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  8205: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  8215: 82 79 10                 a2 = u64 [a0 + 0x10]
  8218: 7b 19 48                 u64 [sp + 0x48] = a2
  8221: 82 79                    a2 = u64 [a0]
  8223: 7b 19 38                 u64 [sp + 0x38] = a2
  8226: 82 77 08                 a0 = u64 [a0 + 0x8]
  8229: 7b 17 30                 u64 [sp + 0x30] = a0
  8232: 33 07 48 04 01           a0 = 0x10448
  8237: 7b 17 08                 u64 [sp + 0x8] = a0
  8240: 3a 07 08 00 03           a0 = u64 [0x30008]
  8245: 7b 17 60                 u64 [sp + 0x60] = a0
  8248: 7b 18 58                 u64 [sp + 0x58] = a1
  8251: 95 88 08                 a1 = a1 + 0x8
  8254: 7b 18                    u64 [sp] = a1
  8256: 33 0c 0a                 a5 = 0xa
  8259: 7b 12 20                 u64 [sp + 0x20] = t0
  8262: 7b 13 18                 u64 [sp + 0x18] = t1
  8265: 7b 14 10                 u64 [sp + 0x10] = t2
  8268: 28 3b                    jump @532
      :                          @529
  8270: 64 06                    s1 = ra
  8272: c8 89 07                 a0 = a2 + a1
  8275: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  8278: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8281: 88 77 01                 a0 = a0 <u 0x1
  8284: 01                       fallthrough
      :                          @530
  8285: 82 1a 48                 a3 = u64 [sp + 0x48]
  8288: 78 a7                    u8 [a3] = a0
  8290: 82 17 30                 a0 = u64 [sp + 0x30]
  8293: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8296: 82 17 38                 a0 = u64 [sp + 0x38]
  8299: b4 a0 02 c0 00           ra = 192, jump [a3]
      :                          @531 [@dyn 96]
  8304: 64 5b                    a4 = s0
  8306: 82 12 20                 t0 = u64 [sp + 0x20]
  8309: 82 13 18                 t1 = u64 [sp + 0x18]
  8312: 82 14 10                 t2 = u64 [sp + 0x10]
  8315: 64 60                    ra = s1
  8317: 33 0c 0a                 a5 = 0xa
  8320: 82 15 40                 s0 = u64 [sp + 0x40]
  8323: 52 07 64 01              jump @573 if a0 != 0
      :                          @532
  8327: 84 57 ff 00              a0 = s0 & 0xff
  8331: 52 07 58 01              jump @572 if a0 != 0
      :                          @533
  8335: 7b 1b 50                 u64 [sp + 0x50] = a4
  8338: ae 02 0a                 jump @536 if t0 >=u ra
      :                          @534
  8341: 28 ef 00                 jump @563
      :                          @535
  8344: ac 02 ec 00              jump @563 if t0 <u ra
      :                          @536
  8348: c9 02 08                 a1 = t0 - ra
  8351: 82 16 58                 s1 = u64 [sp + 0x58]
  8354: c8 06 06                 s1 = s1 + ra
  8357: 55 18 10 1d              jump @542 if a1 >=u 16
      :                          @537
  8361: aa 02 d8 00              jump @562 if t0 == ra
      :                          @538
  8365: 33 0a                    a3 = 0
  8367: 01                       fallthrough
      :                          @539
  8368: c8 a6 07                 a0 = s1 + a3
  8371: 7c 77                    a0 = u8 [a0]
  8373: aa c7 a5 00              jump @557 if a0 == a5
      :                          @540
  8377: 95 aa 01                 a3 = a3 + 0x1
  8380: ab a8 f4                 jump @539 if a1 != a3
      :                          @541
  8383: 28 c2 00                 jump @562
      :                          @542
  8386: 95 69 07                 a2 = s1 + 0x7
  8389: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  8392: c9 6a 07                 a0 = a3 - s1
  8395: d3 6a 0a                 a3 = a3 ^ s1
  8398: 88 aa 01                 a3 = a3 <u 0x1
  8401: 88 7b 01                 a4 = a0 <u 0x1
  8404: d4 ba 0a                 a3 = a3 | a4
  8407: 51 0a 45                 jump @548 if a3 == 0
      :                          @543
  8410: 33 07                    a0 = 0
  8412: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8415: 82 1b                    a4 = u64 [sp]
  8417: c8 0b 0b                 a4 = a4 + ra
  8420: 28 08                    jump @545
      :                          @544
  8422: 82 1b                    a4 = u64 [sp]
  8424: c8 0b 0b                 a4 = a4 + ra
  8427: 01                       fallthrough
      :                          @545
  8428: c8 76 0c                 a5 = s1 + a0
  8431: 82 cc                    a5 = u64 [a5]
  8433: c8 7b 09                 a2 = a4 + a0
  8436: 82 99                    a2 = u64 [a2]
  8438: d3 4c 05                 s0 = a5 ^ t2
  8441: c8 35 05                 s0 = s0 + t1
  8444: e0 c5 0c                 a5 = s0 & ~a5
  8447: d3 49 05                 s0 = a2 ^ t2
  8450: c8 35 05                 s0 = s0 + t1
  8453: e0 95 09                 a2 = s0 & ~a2
  8456: d4 c9 09                 a2 = a2 | a5
  8459: 82 1c 60                 a5 = u64 [sp + 0x60]
  8462: d2 c9 09                 a2 = a2 & a5
  8465: 52 09 1f                 jump @551 if a2 != 0
      :                          @546
  8468: 95 77 10                 a0 = a0 + 0x10
  8471: ae 7a d5                 jump @545 if a3 >=u a0
      :                          @547
  8474: 28 16                    jump @551
      :                          @548
  8476: c8 a6 0b                 a4 = s1 + a3
  8479: 7c bb                    a4 = u8 [a4]
  8481: aa cb 51                 jump @560 if a4 == a5
      :                          @549
  8484: 95 aa 01                 a3 = a3 + 0x1
  8487: ab a7 f5                 jump @548 if a0 != a3
      :                          @550
  8490: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  8493: ae 7a b9                 jump @544 if a3 >=u a0
      :                          @551
  8496: aa 87 9b 00              jump @569 if a0 == a1
      :                          @552
  8500: 33 0a                    a3 = 0
  8502: c8 76 06                 s1 = s1 + a0
  8505: c9 72 08                 a1 = t0 - a0
  8508: c9 08 08                 a1 = a1 - ra
  8511: 33 0c 0a                 a5 = 0xa
  8514: 82 1b 50                 a4 = u64 [sp + 0x50]
  8517: 01                       fallthrough
      :                          @553
  8518: c8 a6 09                 a2 = s1 + a3
  8521: 7c 99                    a2 = u8 [a2]
  8523: aa c9 0b                 jump @556 if a2 == a5
      :                          @554
  8526: 95 aa 01                 a3 = a3 + 0x1
  8529: ab a8 f5                 jump @553 if a1 != a3
      :                          @555
  8532: 28 2d                    jump @562
      :                          @556
  8534: c8 7a 0a                 a3 = a3 + a0
  8537: 01                       fallthrough
      :                          @557
  8538: c8 0a 0a                 a3 = a3 + ra
  8541: 95 a0 01                 ra = a3 + 0x1
  8544: ae 2a 38 ff              jump @535 if a3 >=u t0
      :                          @558
  8548: 82 17 58                 a0 = u64 [sp + 0x58]
  8551: c8 7a 0a                 a3 = a3 + a0
  8554: 7c a7                    a0 = u8 [a3]
  8556: ab c7 2c ff              jump @535 if a0 != a5
      :                          @559
  8560: 28 62                    jump @570
      :                          @560
  8562: 82 1b 50                 a4 = u64 [sp + 0x50]
  8565: c8 0a 0a                 a3 = a3 + ra
  8568: 95 a0 01                 ra = a3 + 0x1
  8571: ac 2a e9                 jump @558 if a3 <u t0
      :                          @561
  8574: 28 1a ff                 jump @535
      :                          @562
  8577: 64 20                    ra = t0
  8579: 01                       fallthrough
      :                          @563
  8580: 49 11 40 01              u64 [sp + 64] = 0x1
  8584: 64 b5                    s0 = a4
  8586: 64 26                    s1 = t0
  8588: aa 2b 57                 jump @572 if a4 == t0
      :                          @564
  8591: 82 17 48                 a0 = u64 [sp + 0x48]
  8594: 7c 77                    a0 = u8 [a0]
  8596: 51 07 23                 jump @567 if a0 == 0
      :                          @565
  8599: 82 17 30                 a0 = u64 [sp + 0x30]
  8602: 82 7a 18                 a3 = u64 [a0 + 0x18]
  8605: 33 09 04                 a2 = 0x4
  8608: 82 17 38                 a0 = u64 [sp + 0x38]
  8611: 82 18 08                 a1 = u64 [sp + 0x8]
  8614: 7b 10 28                 u64 [sp + 0x28] = ra
  8617: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @566 [@dyn 97]
  8622: 82 1b 50                 a4 = u64 [sp + 0x50]
  8625: 82 10 28                 ra = u64 [sp + 0x28]
  8628: 52 07 33                 jump @573 if a0 != 0
      :                          @567
  8631: c9 b6 09                 a2 = s1 - a4
  8634: 82 18 58                 a1 = u64 [sp + 0x58]
  8637: c8 b8 08                 a1 = a1 + a4
  8640: ab b6 8e fe              jump @529 if s1 != a4
      :                          @568
  8644: 64 06                    s1 = ra
  8646: 33 07                    a0 = 0
  8648: 28 95 fe                 jump @530
      :                          @569
  8651: 64 20                    ra = t0
  8653: 82 1b 50                 a4 = u64 [sp + 0x50]
  8656: 28 b4                    jump @563
      :                          @570
  8658: 49 11 40                 u64 [sp + 64] = 0
  8661: 64 05                    s0 = ra
  8663: 64 06                    s1 = ra
  8665: 82 17 48                 a0 = u64 [sp + 0x48]
  8668: 7c 77                    a0 = u8 [a0]
  8670: 52 07 b9                 jump @565 if a0 != 0
      :                          @571
  8673: 28 d6                    jump @567
      :                          @572
  8675: 33 07                    a0 = 0
  8677: 28 06                    jump @574
      :                          @573
  8679: 33 07 01                 a0 = 0x1
  8682: 01                       fallthrough
      :                          @574
  8683: 82 10 78                 ra = u64 [sp + 0x78]
  8686: 82 15 70                 s0 = u64 [sp + 0x70]
  8689: 82 16 68                 s1 = u64 [sp + 0x68]
  8692: 95 11 80 00              sp = sp + 0x80
  8696: 32 00                    ret
      :                          @575 [@dyn 98]
  8698: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  8701: 7b 10 20                 u64 [sp + 0x20] = ra
  8704: 7b 15 18                 u64 [sp + 0x18] = s0
  8707: 7b 16 10                 u64 [sp + 0x10] = s1
  8710: 82 75 10                 s0 = u64 [a0 + 0x10]
  8713: 7c 59                    a2 = u8 [s0]
  8715: 82 7b                    a4 = u64 [a0]
  8717: 82 76 08                 s1 = u64 [a0 + 0x8]
  8720: 51 09 33                 jump @579 if a2 == 0
      :                          @576
  8723: 82 6a 18                 a3 = u64 [s1 + 0x18]
  8726: 7b 18 08                 u64 [sp + 0x8] = a1
  8729: 33 08 48 04 01           a1 = 0x10448
  8734: 33 09 04                 a2 = 0x4
  8737: 64 b7                    a0 = a4
  8739: 7b 1b                    u64 [sp] = a4
  8741: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @577 [@dyn 99]
  8746: 82 18 08                 a1 = u64 [sp + 0x8]
  8749: 82 1b                    a4 = u64 [sp]
  8751: 51 07 14                 jump @579 if a0 == 0
      :                          @578
  8754: 33 07 01                 a0 = 0x1
  8757: 82 10 20                 ra = u64 [sp + 0x20]
  8760: 82 15 18                 s0 = u64 [sp + 0x18]
  8763: 82 16 10                 s1 = u64 [sp + 0x10]
  8766: 95 11 28                 sp = sp + 0x28
  8769: 32 00                    ret
      :                          @579
  8771: 83 87                    i32 a0 = a1 + 0
  8773: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  8776: 88 77 01                 a0 = a0 <u 0x1
  8779: 78 57                    u8 [s0] = a0
  8781: 82 6c 20                 a5 = u64 [s1 + 0x20]
  8784: 64 b7                    a0 = a4
  8786: 82 10 20                 ra = u64 [sp + 0x20]
  8789: 82 15 18                 s0 = u64 [sp + 0x18]
  8792: 82 16 10                 s1 = u64 [sp + 0x10]
  8795: 95 11 28                 sp = sp + 0x28
  8798: 32 0c                    jump [a5]
      :                          @580 [@dyn 100]
  8800: 64 8a                    a3 = a1
  8802: 33 08 10 04 01           a1 = 0x10410
  8807: 64 a9                    a2 = a3
  8809: 28 99 fb                 jump @489
      :                          @581
  8812: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  8816: 7b 10 88 00              u64 [sp + 0x88] = ra
  8820: 7b 15 80 00              u64 [sp + 0x80] = s0
  8824: 7b 16 78                 u64 [sp + 0x78] = s1
  8827: 64 75                    s0 = a0
  8829: 7c 77 08                 a0 = u8 [a0 + 0x8]
  8832: 64 8b                    a4 = a1
  8834: 33 08 01                 a1 = 0x1
  8837: 33 06 01                 s1 = 0x1
  8840: 51 07 1d                 jump @583 if a0 == 0
      :                          @582
  8843: 78 56 08                 u8 [s0 + 0x8] = s1
  8846: 46 15 09 01              u8 [s0 + 9] = 0x1
  8850: 64 57                    a0 = s0
  8852: 82 10 88 00              ra = u64 [sp + 0x88]
  8856: 82 15 80 00              s0 = u64 [sp + 0x80]
  8860: 82 16 78                 s1 = u64 [sp + 0x78]
  8863: 95 11 90 00              sp = sp + 0x90
  8867: 32 00                    ret
      :                          @583
  8869: 64 9a                    a3 = a2
  8871: 82 5c                    a5 = u64 [s0]
  8873: 80 c7 34                 a0 = u32 [a5 + 0x34]
  8876: 7c 58 09                 a1 = u8 [s0 + 0x9]
  8879: 84 79 04                 a2 = a0 & 0x4
  8882: 52 09 45                 jump @589 if a2 != 0
      :                          @584
  8885: 51 08 32                 jump @587 if a1 == 0
      :                          @585
  8888: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8891: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8894: 82 83 18                 t1 = u64 [a1 + 0x18]
  8897: 33 08 50 04 01           a1 = 0x10450
  8902: 33 09 02                 a2 = 0x2
  8905: 64 a6                    s1 = a3
  8907: 7b 1b 10                 u64 [sp + 0x10] = a4
  8910: 7b 1c 08                 u64 [sp + 0x8] = a5
  8913: b4 30 02 ca 00           ra = 202, jump [t1]
      :                          @586 [@dyn 101]
  8918: 82 1c 08                 a5 = u64 [sp + 0x8]
  8921: 82 1b 10                 a4 = u64 [sp + 0x10]
  8924: 64 6a                    a3 = s1
  8926: 33 08 01                 a1 = 0x1
  8929: 33 06 01                 s1 = 0x1
  8932: 52 07 a7                 jump @582 if a0 != 0
      :                          @587
  8935: 64 b7                    a0 = a4
  8937: 64 c8                    a1 = a5
  8939: b4 a0 02 cc 00           ra = 204, jump [a3]
      :                          @588 [@dyn 102]
  8944: 33 08 01                 a1 = 0x1
  8947: 64 76                    s1 = a0
  8949: 28 96                    jump @582
      :                          @589
  8951: 52 08 37                 jump @593 if a1 != 0
      :                          @590
  8954: 82 c8 28                 a1 = u64 [a5 + 0x28]
  8957: 82 c7 20                 a0 = u64 [a5 + 0x20]
  8960: 82 83 18                 t1 = u64 [a1 + 0x18]
  8963: 33 08 54 04 01           a1 = 0x10454
  8968: 33 09 01                 a2 = 0x1
  8971: 33 06 01                 s1 = 0x1
  8974: 7b 1a                    u64 [sp] = a3
  8976: 7b 1b 10                 u64 [sp + 0x10] = a4
  8979: 7b 1c 08                 u64 [sp + 0x8] = a5
  8982: b4 30 02 ce 00           ra = 206, jump [t1]
      :                          @591 [@dyn 103]
  8987: 82 1c 08                 a5 = u64 [sp + 0x8]
  8990: 82 1b 10                 a4 = u64 [sp + 0x10]
  8993: 82 1a                    a3 = u64 [sp]
  8995: 33 08 01                 a1 = 0x1
  8998: 52 07 65 ff              jump @582 if a0 != 0
      :                          @592
  9002: 81 c7 34                 a0 = i32 [a5 + 0x34]
  9005: 01                       fallthrough
      :                          @593
  9006: 33 06 01                 s1 = 0x1
  9009: 78 16 37                 u8 [sp + 0x37] = s1
  9012: 82 c8 20                 a1 = u64 [a5 + 0x20]
  9015: 82 c9 28                 a2 = u64 [a5 + 0x28]
  9018: 7b 18 18                 u64 [sp + 0x18] = a1
  9021: 7b 19 20                 u64 [sp + 0x20] = a2
  9024: 95 18 37                 a1 = sp + 0x37
  9027: 7b 18 28                 u64 [sp + 0x28] = a1
  9030: 81 c8 30                 a1 = i32 [a5 + 0x30]
  9033: 7c c9 38                 a2 = u8 [a5 + 0x38]
  9036: 82 c3                    t1 = u64 [a5]
  9038: 82 c4 08                 t2 = u64 [a5 + 0x8]
  9041: 82 c0 10                 ra = u64 [a5 + 0x10]
  9044: 82 c2 18                 t0 = u64 [a5 + 0x18]
  9047: 7a 17 6c                 u32 [sp + 0x6c] = a0
  9050: 7a 18 68                 u32 [sp + 0x68] = a1
  9053: 78 19 70                 u8 [sp + 0x70] = a2
  9056: 7b 13 38                 u64 [sp + 0x38] = t1
  9059: 7b 14 40                 u64 [sp + 0x40] = t2
  9062: 7b 10 48                 u64 [sp + 0x48] = ra
  9065: 7b 12 50                 u64 [sp + 0x50] = t0
  9068: 95 17 18                 a0 = sp + 0x18
  9071: 7b 17 58                 u64 [sp + 0x58] = a0
  9074: 33 07 10 04 01           a0 = 0x10410
  9079: 7b 17 60                 u64 [sp + 0x60] = a0
  9082: 95 18 38                 a1 = sp + 0x38
  9085: 64 b7                    a0 = a4
  9087: b4 a0 02 d0 00           ra = 208, jump [a3]
      :                          @594 [@dyn 104]
  9092: 52 07 21                 jump @597 if a0 != 0
      :                          @595
  9095: 82 18 60                 a1 = u64 [sp + 0x60]
  9098: 82 17 58                 a0 = u64 [sp + 0x58]
  9101: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9104: 33 08 52 04 01           a1 = 0x10452
  9109: 33 09 02                 a2 = 0x2
  9112: b4 a0 02 d2 00           ra = 210, jump [a3]
      :                          @596 [@dyn 105]
  9117: 64 76                    s1 = a0
  9119: 33 08 01                 a1 = 0x1
  9122: 28 e9 fe                 jump @582
      :                          @597
  9125: 33 08 01                 a1 = 0x1
  9128: 28 e3 fe                 jump @582
      :                          @598
  9131: 51 08 9b 00              jump @619 if a1 == 0
      :                          @599
  9135: 64 79                    a2 = a0
  9137: 7c 77                    a0 = u8 [a0]
  9139: 51 07 91 00              jump @618 if a0 == 0
      :                          @600
  9143: 51 27 ff 00 90 00        jump @620 if a0 == 255
      :                          @601
  9149: 6c 7a                    a3 = sext.b a0
  9151: 57 0a 09                 jump @603 if a3 <s 0
      :                          @602
  9154: 33 0a                    a3 = 0
  9156: 33 08                    a1 = 0
  9158: 28 73                    jump @617
      :                          @603
  9160: 55 27 c0 00 0d           jump @605 if a0 >=u 192
      :                          @604
  9165: 33 0a 01                 a3 = 0x1
  9168: 33 0b 80                 a4 = 0xffffffffffffff80
  9171: 28 4a                    jump @614
      :                          @605
  9173: 55 27 e0 00 0e           jump @607 if a0 >=u 224
      :                          @606
  9178: 33 0a 02                 a3 = 0x2
  9181: 33 0b 40 ff              a4 = 0xffffffffffffff40
  9185: 28 3c                    jump @614
      :                          @607
  9187: 55 27 f0 00 0e           jump @609 if a0 >=u 240
      :                          @608
  9192: 33 0a 03                 a3 = 0x3
  9195: 33 0b 20 ff              a4 = 0xffffffffffffff20
  9199: 28 2e                    jump @614
      :                          @609
  9201: 55 27 f8 00 0e           jump @611 if a0 >=u 248
      :                          @610
  9206: 33 0a 04                 a3 = 0x4
  9209: 33 0b 10 ff              a4 = 0xffffffffffffff10
  9213: 28 20                    jump @614
      :                          @611
  9215: 55 27 fc 00 0e           jump @613 if a0 >=u 252
      :                          @612
  9220: 33 0a 05                 a3 = 0x5
  9223: 33 0b 08 ff              a4 = 0xffffffffffffff08
  9227: 28 12                    jump @614
      :                          @613
  9229: 88 7a fe 00              a3 = a0 <u 0xfe
  9233: 33 0b 04 ff              a4 = 0xffffffffffffff04
  9237: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  9241: 85 aa 07                 a3 = a3 ^ 0x7
  9244: 01                       fallthrough
      :                          @614
  9245: ae 8a 2b                 jump @621 if a3 >=u a1
      :                          @615
  9248: 33 08                    a1 = 0
  9250: c8 b7 07                 a0 = a0 + a4
  9253: 64 ab                    a4 = a3
  9255: 01                       fallthrough
      :                          @616
  9256: c8 b9 0c                 a5 = a2 + a4
  9259: 7c cc                    a5 = u8 [a5]
  9261: 97 88 08                 a1 = a1 << 0x8
  9264: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  9267: d4 c8 08                 a1 = a1 | a5
  9270: 52 0b f2                 jump @616 if a4 != 0
      :                          @617
  9273: 8a a9 03                 i32 a2 = a3 << 0x3
  9276: cf 97 07                 a0 = a0 << a2
  9279: c8 87 07                 a0 = a0 + a1
  9282: 32 00                    ret
      :                          @618
  9284: 32 00                    ret
      :                          @619
  9286: 00                       trap
      :                          @620
  9287: 00                       trap
      :                          @621
  9288: 00                       trap
