// RO data = 1572/1572 bytes
// RW data = 8/1052752 bytes
// Stack size = 1048576 bytes
// RO data = [0, 16, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 80, 97, 114, 101, 110, 116, 58, 32, 112, 97, 103, 101, 115, 32, 109, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 8, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 21, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 102, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 70, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 119, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 38, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 8, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 83, 116, 97, 114, 116, 70, 101, 116, 99, 104, 80, 97, 114, 101, 110, 116, 58, 32, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 74, 1, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 102, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 102, 105, 114, 115, 116, 32, 115, 101, 103, 109, 101, 110, 116, 32, 109, 61, 32, 112, 97, 103, 101, 95, 105, 100, 61, 0, 0, 0, 0, 0, 0, 0, 152, 1, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 112, 97, 103, 101, 115, 95, 114, 101, 115, 117, 108, 116, 61, 86, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 224, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 234, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 18, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 58, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 61, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 111, 109, 101, 103, 97, 95, 56, 61, 0, 160, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 175, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 190, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 100, 111, 110, 101, 32, 119, 105, 116, 104, 32, 99, 104, 105, 108, 100, 32, 86, 77, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 248, 2, 1, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 70, 105, 114, 115, 116, 32, 116, 105, 109, 101, 32, 115, 101, 116, 117, 112, 58, 32, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 0, 0, 0, 0, 56, 3, 1, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 80, 97, 114, 101, 110, 116, 58, 32, 115, 111, 108, 105, 99, 105, 116, 32, 99, 111, 100, 101, 95, 104, 97, 115, 104, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 111, 100, 101, 95, 108, 101, 110, 103, 116, 104, 61, 0, 120, 3, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 154, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 2438
// Code size = 7608 bytes

      :                          @0
     0: 28 b8 00 00 00           jump @15
      :                          @1
     5: 28 24 0f 00 00           jump @184
      :                          @2
    10: 28 ca 11                 jump @248
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 14                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 3e                 jump @9 if a2 != 0
      :                          @5
    36: 82 10 80 00              ra = u64 [sp + 0x80]
    40: 95 11 88 00              sp = sp + 0x88
    44: 28 63 17                 jump @388
      :                          @6
    47: 82 7b                    a4 = u64 [a0]
    49: 33 09 81 00              a2 = 0x81
    53: 95 17 7f                 a0 = sp + 0x7f
    56: 33 02 57                 t0 = 0x57
    59: 01                       fallthrough
      :                          @7
    60: 64 9c                    a5 = a2
    62: 98 ba 04                 a3 = a4 >> 0x4
    65: 84 bb 0f                 a4 = a4 & 0xf
    68: 88 b3 0a                 t1 = a4 <u 0xa
    71: 33 09 30                 a2 = 0x30
    74: da 32 09                 a2 = t0 if t1 == 0
    77: be b9 09                 i32 a2 = a2 + a4
    80: 78 79                    u8 [a0] = a2
    82: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    85: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    88: 64 ab                    a4 = a3
    90: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    93: 28 30                    jump @11
      :                          @9
    95: 82 7b                    a4 = u64 [a0]
    97: 33 09 81 00              a2 = 0x81
   101: 95 17 7f                 a0 = sp + 0x7f
   104: 33 02 37                 t0 = 0x37
   107: 01                       fallthrough
      :                          @10
   108: 64 9c                    a5 = a2
   110: 98 ba 04                 a3 = a4 >> 0x4
   113: 84 bb 0f                 a4 = a4 & 0xf
   116: 88 b3 0a                 t1 = a4 <u 0xa
   119: 33 09 30                 a2 = 0x30
   122: da 32 09                 a2 = t0 if t1 == 0
   125: be b9 09                 i32 a2 = a2 + a4
   128: 78 79                    u8 [a0] = a2
   130: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   133: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   136: 64 ab                    a4 = a3
   138: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   141: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   144: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   149: 9a 9b 81 00              a4 = 0x81 - a2
   153: 64 1a                    a3 = sp
   155: c8 7a 0a                 a3 = a3 + a0
   158: 33 09 02                 a2 = 0x2
   161: 64 87                    a0 = a1
   163: 33 08 f8 03 01           a1 = 0x103f8
   168: 50 10 04 13 18           ra = 4, jump @398
      :                          @13 [@dyn 2]
   173: 82 10 80 00              ra = u64 [sp + 0x80]
   177: 95 11 88 00              sp = sp + 0x88
   181: 32 00                    ret
      :                          @14
   183: 00                       trap
      :                          @15 [export #0: 'refine']
   184: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   188: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   192: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   196: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   200: 95 11 08 b5 fe           sp = sp + 0xfffffffffffeb508
   205: 64 86                    s1 = a1
   207: 64 7a                    a3 = a0
   209: 33 07 00 00 01           a0 = 0x10000
   214: 53 16 04 43              jump @24 if s1 <u 4
      :                          @16
   218: 7d a8                    a1 = i8 [a3]
   220: 33 05 01                 s0 = 0x1
   223: 59 08 37                 jump @23 if a1 >=s 0
      :                          @17
   226: 84 89 ff 00              a2 = a1 & 0xff
   230: 33 05 02                 s0 = 0x2
   233: 53 29 c0 00 2d           jump @23 if a2 <u 192
      :                          @18
   238: 33 05 03                 s0 = 0x3
   241: 53 29 e0 00 25           jump @23 if a2 <u 224
      :                          @19
   246: 33 05 04                 s0 = 0x4
   249: 53 29 f0 00 1d           jump @23 if a2 <u 240
      :                          @20
   254: 33 05 05                 s0 = 0x5
   257: 53 29 f8 00 15           jump @23 if a2 <u 248
      :                          @21
   262: 33 05 06                 s0 = 0x6
   265: 53 29 fc 00 0d           jump @23 if a2 <u 252
      :                          @22
   270: 88 98 fe 00              a1 = a2 <u 0xfe
   274: 9a 85 08                 s0 = 0x8 - a1
   277: 01                       fallthrough
      :                          @23
   278: ae 56 07                 jump @25 if s1 >=u s0
      :                          @24
   281: 33 06                    s1 = 0
   283: 28 61                    jump @36
      :                          @25
   285: 64 a7                    a0 = a3
   287: 64 58                    a1 = s0
   289: 7b 1a 78                 u64 [sp + 0x78] = a3
   292: 50 10 06 f6 1b           ra = 6, jump @488
      :                          @26 [@dyn 3]
   297: aa 56 4b                 jump @35 if s1 == s0
      :                          @27
   300: 82 17 78                 a0 = u64 [sp + 0x78]
   303: c8 57 07                 a0 = a0 + s0
   306: 7d 78                    a1 = i8 [a0]
   308: c9 56 0a                 a3 = s1 - s0
   311: 33 06 01                 s1 = 0x1
   314: 59 08 37                 jump @34 if a1 >=s 0
      :                          @28
   317: 84 89 ff 00              a2 = a1 & 0xff
   321: 33 06 02                 s1 = 0x2
   324: 53 29 c0 00 2d           jump @34 if a2 <u 192
      :                          @29
   329: 33 06 03                 s1 = 0x3
   332: 53 29 e0 00 25           jump @34 if a2 <u 224
      :                          @30
   337: 33 06 04                 s1 = 0x4
   340: 53 29 f0 00 1d           jump @34 if a2 <u 240
      :                          @31
   345: 33 06 05                 s1 = 0x5
   348: 53 29 f8 00 15           jump @34 if a2 <u 248
      :                          @32
   353: 33 06 06                 s1 = 0x6
   356: 53 29 fc 00 0d           jump @34 if a2 <u 252
      :                          @33
   361: 88 98 fe 00              a1 = a2 <u 0xfe
   365: 9a 86 08                 s1 = 0x8 - a1
   368: 01                       fallthrough
      :                          @34
   369: ae 6a 27                 jump @37 if a3 >=u s1
      :                          @35
   372: 33 06                    s1 = 0
   374: 33 07 00 00 01           a0 = 0x10000
   379: 01                       fallthrough
      :                          @36
   380: 64 68                    a1 = s1
   382: 33 09 f8 4a 01           a2 = 0x14af8
   387: c8 91 01                 sp = sp + a2
   390: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   394: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   398: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   402: 95 11 f8 07              sp = sp + 0x7f8
   406: 32 00                    ret
      :                          @37
   408: 64 68                    a1 = s1
   410: 7b 1a 78                 u64 [sp + 0x78] = a3
   413: 64 75                    s0 = a0
   415: 50 10 08 7b 1b           ra = 8, jump @488
      :                          @38 [@dyn 4]
   420: c8 56 0a                 a3 = s1 + s0
   423: 82 15 78                 s0 = u64 [sp + 0x78]
   426: 7b 17 70                 u64 [sp + 0x70] = a0
   429: 7b 1a 68                 u64 [sp + 0x68] = a3
   432: ab 65 0b                 jump @40 if s0 != s1
      :                          @39
   435: 33 08                    a1 = 0
   437: 33 06                    s1 = 0
   439: 33 05                    s0 = 0
   441: 28 5a                    jump @50
      :                          @40
   443: 7d a8                    a1 = i8 [a3]
   445: c9 65 05                 s0 = s0 - s1
   448: 33 06 01                 s1 = 0x1
   451: 59 08 37                 jump @47 if a1 >=s 0
      :                          @41
   454: 84 89 ff 00              a2 = a1 & 0xff
   458: 33 06 02                 s1 = 0x2
   461: 53 29 c0 00 2d           jump @47 if a2 <u 192
      :                          @42
   466: 33 06 03                 s1 = 0x3
   469: 53 29 e0 00 25           jump @47 if a2 <u 224
      :                          @43
   474: 33 06 04                 s1 = 0x4
   477: 53 29 f0 00 1d           jump @47 if a2 <u 240
      :                          @44
   482: 33 06 05                 s1 = 0x5
   485: 53 29 f8 00 15           jump @47 if a2 <u 248
      :                          @45
   490: 33 06 06                 s1 = 0x6
   493: 53 29 fc 00 0d           jump @47 if a2 <u 252
      :                          @46
   498: 88 99 fe 00              a2 = a2 <u 0xfe
   502: 9a 96 08                 s1 = 0x8 - a2
   505: 01                       fallthrough
      :                          @47
   506: ac 65 2e 0d              jump @183 if s0 <u s1
      :                          @48
   510: 64 a7                    a0 = a3
   512: 64 68                    a1 = s1
   514: 50 10 0a 18 1b           ra = 10, jump @488
      :                          @49 [@dyn 5]
   519: e4 65 08                 a1 = maxu(s0, s1)
   522: c9 68 08                 a1 = a1 - s1
   525: 64 75                    s0 = a0
   527: ac 78 65 ff              jump @35 if a1 <u a0
      :                          @50
   531: e4 58 07                 a0 = maxu(a1, s0)
   534: c9 57 09                 a2 = a0 - s0
   537: 33 07 00 00 01           a0 = 0x10000
   542: 53 19 20 fb fe           jump @24 if a2 <u 32
      :                          @51
   547: 7b 16 60                 u64 [sp + 0x60] = s1
   550: 7b 15 80 00              u64 [sp + 0x80] = s0
   554: 33 07 09 00 03           a0 = 0x30009
   559: 33 09 24                 a2 = 0x24
   562: 33 0a 03                 a3 = 0x3
   565: 7b 17 78                 u64 [sp + 0x78] = a0
   568: 33 08                    a1 = 0
   570: 33 0b                    a4 = 0
   572: 33 0c                    a5 = 0
   574: 0a 01                    ecalli 1 // 'fetch'
   576: 01                       fallthrough
      :                          @52
   577: 95 18 d8 50 01           a1 = sp + 0x150d8
   582: 33 06 24                 s1 = 0x24
   585: 55 15 08 71              jump @57 if s0 >=u 8
      :                          @53
   589: 95 17 80 00              a0 = sp + 0x80
   593: 7b 87 00 01              u64 [a1 + 0x100] = a0
   597: 33 07 02                 a0 = 0x2
   600: 7b 87 08 01              u64 [a1 + 0x108] = a0
   604: 33 07 68 03 01           a0 = 0x10368
   609: 7b 17 88 00              u64 [sp + 0x88] = a0
   613: 49 21 90 00 01           u64 [sp + 144] = 0x1
   618: 49 21 a8 00              u64 [sp + 168] = 0
   622: 95 18 d8 51 01           a1 = sp + 0x151d8
   627: 7b 18 98 00              u64 [sp + 0x98] = a1
   631: 49 21 a0 00 01           u64 [sp + 160] = 0x1
   636: 95 17 d0 40 01           a0 = sp + 0x140d0
   641: 95 18 88 00              a1 = sp + 0x88
   645: 95 15 88 40 01           s0 = sp + 0x14088
   650: 50 10 0c 90 11           ra = 12, jump @305
      :                          @54 [@dyn 6]
   655: 82 5a 50                 a3 = u64 [s0 + 0x50]
   658: 82 5b 58                 a4 = u64 [s0 + 0x58]
   661: 82 55 48                 s0 = u64 [s0 + 0x48]
   664: 33 07 02                 a0 = 0x2
   667: 33 08                    a1 = 0
   669: 33 09                    a2 = 0
   671: 7b 1a 70                 u64 [sp + 0x70] = a3
   674: 33 00 0e                 ra = 0xe
   677: 0a 64                    ecalli 100 // 'log'
   679: 01                       fallthrough
      :                          @55 [@dyn 7]
   680: 95 58 ff ff ef           a1 = s0 + 0xffffffffffefffff
   685: 55 38 00 00 f0 0e 03     jump @86 if a1 >=u 4293918720
      :                          @56
   692: 82 17 78                 a0 = u64 [sp + 0x78]
   695: 28 c5 fe                 jump @36
      :                          @57
   698: 82 17 68                 a0 = u64 [sp + 0x68]
   701: 82 18 60                 a1 = u64 [sp + 0x60]
   704: c8 87 07                 a0 = a0 + a1
   707: 80 75                    s0 = u32 [a0]
   709: 80 78 04                 a1 = u32 [a0 + 0x4]
   712: 7b 18 68                 u64 [sp + 0x68] = a1
   715: 80 77 08                 a0 = u32 [a0 + 0x8]
   718: 7b 17 60                 u64 [sp + 0x60] = a0
   721: 95 17 88 00              a0 = sp + 0x88
   725: 33 09 00 40 01           a2 = 0x14000
   730: 33 08                    a1 = 0
   732: 50 10 10 54 14           ra = 16, jump @373
      :                          @58 [@dyn 8]
   737: 82 17 70                 a0 = u64 [sp + 0x70]
   740: 97 77 20                 a0 = a0 << 0x20
   743: 98 77 20                 a0 = a0 >> 0x20
   746: 95 19 88 00              a2 = sp + 0x88
   750: 33 0b 00 40 01           a4 = 0x14000
   755: 82 18 78                 a1 = u64 [sp + 0x78]
   758: 33 0a                    a3 = 0
   760: 33 00 12                 ra = 0x12
   763: 0a 06                    ecalli 6 // 'historical_lookup'
   765: 01                       fallthrough
      :                          @59 [@dyn 9]
   766: 95 78 01                 a1 = a0 + 0x1
   769: 53 18 04 73 fe           jump @35 if a1 <u 4
      :                          @60
   774: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
   777: 53 18 03 6b fe           jump @35 if a1 <u 3
      :                          @61
   782: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
   785: 51 18 06 63 fe           jump @35 if a1 == 6
      :                          @62
   790: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
   793: 53 18 03 5b fe           jump @35 if a1 <u 3
      :                          @63
   798: 7c 18 8a 00              a1 = u8 [sp + 0x8a]
   802: 7c 19 89 00              a2 = u8 [sp + 0x89]
   806: 7c 1a 88 00              a3 = u8 [sp + 0x88]
   810: 97 88 10                 a1 = a1 << 0x10
   813: 97 99 08                 a2 = a2 << 0x8
   816: d4 98 08                 a1 = a1 | a2
   819: d4 a8 08                 a1 = a1 | a3
   822: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
   825: ac 89 3b fe              jump @35 if a2 <u a1
      :                          @64
   829: 7c 17 8d 00              a0 = u8 [sp + 0x8d]
   833: 7c 1a 8c 00              a3 = u8 [sp + 0x8c]
   837: 7c 1b 8b 00              a4 = u8 [sp + 0x8b]
   841: 97 77 10                 a0 = a0 << 0x10
   844: 97 aa 08                 a3 = a3 << 0x8
   847: d4 a7 07                 a0 = a0 | a3
   850: d4 b7 07                 a0 = a0 | a4
   853: c9 89 09                 a2 = a2 - a1
   856: ac 79 1c fe              jump @35 if a2 <u a0
      :                          @65
   860: c9 79 06                 s1 = a2 - a0
   863: 53 16 04 15 fe           jump @35 if s1 <u 4
      :                          @66
   868: 95 12 93 00              t0 = sp + 0x93
   872: c8 28 03                 t1 = a1 + t0
   875: c8 37 09                 a2 = a0 + t1
   878: 7c 9c 03                 a5 = u8 [a2 + 0x3]
   881: 7b 15 08                 u64 [sp + 0x8] = s0
   884: 7c 95 02                 s0 = u8 [a2 + 0x2]
   887: 7c 9b                    a4 = u8 [a2]
   889: 7c 9a 01                 a3 = u8 [a2 + 0x1]
   892: 97 cc 10                 a5 = a5 << 0x10
   895: 97 55 08                 s0 = s0 << 0x8
   898: d4 5c 0c                 a5 = a5 | s0
   901: d4 ca 0a                 a3 = a3 | a5
   904: 97 aa 08                 a3 = a3 << 0x8
   907: d4 ba 0c                 a5 = a3 | a4
   910: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
   913: ac c6 e3 fd              jump @35 if s1 <u a5
      :                          @67
   917: 7c 1a 8f 00              a3 = u8 [sp + 0x8f]
   921: 7c 1b 8e 00              a4 = u8 [sp + 0x8e]
   925: 97 aa 08                 a3 = a3 << 0x8
   928: 7c 16 92 00              s1 = u8 [sp + 0x92]
   932: 7c 15 91 00              s0 = u8 [sp + 0x91]
   936: d4 ba 0a                 a3 = a3 | a4
   939: 7c 1b 90 00              a4 = u8 [sp + 0x90]
   943: 97 66 10                 s1 = s1 << 0x10
   946: 97 55 08                 s0 = s0 << 0x8
   949: d4 65 05                 s0 = s0 | s1
   952: d4 5b 0b                 a4 = a4 | s0
   955: 33 04 88 40 01           t2 = 0x14088
   960: c8 41 06                 s1 = sp + t2
   963: 7b 6a                    u64 [s1] = a3
   965: 7b 6b 08                 u64 [s1 + 0x8] = a4
   968: 7b 62 10                 u64 [s1 + 0x10] = t0
   971: 7b 68 18                 u64 [s1 + 0x18] = a1
   974: 7b 63 20                 u64 [s1 + 0x20] = t1
   977: 7b 67 28                 u64 [s1 + 0x28] = a0
   980: 95 99 04                 a2 = a2 + 0x4
   983: 7b 69 30                 u64 [s1 + 0x30] = a2
   986: 49 11 78 ff ff ef        u64 [sp + 120] = 0xffffffffffefffff
   992: 7b 6c 38                 u64 [s1 + 0x38] = a5
   995: 7b 66 48                 u64 [s1 + 0x48] = s1
   998: 95 17 90 40 01           a0 = sp + 0x14090
  1003: 7b 67 58                 u64 [s1 + 0x58] = a0
  1006: 95 17 98 40 01           a0 = sp + 0x14098
  1011: 7b 67 68                 u64 [s1 + 0x68] = a0
  1014: 95 17 a0 40 01           a0 = sp + 0x140a0
  1019: 7b 67 78                 u64 [s1 + 0x78] = a0
  1022: 95 17 a8 40 01           a0 = sp + 0x140a8
  1027: 7b 67 88 00              u64 [s1 + 0x88] = a0
  1031: 95 17 b0 40 01           a0 = sp + 0x140b0
  1036: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1040: 95 17 b8 40 01           a0 = sp + 0x140b8
  1045: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  1049: 95 17 c0 40 01           a0 = sp + 0x140c0
  1054: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1058: 33 07 88 00 01           a0 = 0x10088
  1063: 95 15 d8 50 01           s0 = sp + 0x150d8
  1068: 7b 57 00 01              u64 [s0 + 0x100] = a0
  1072: 95 17 d0 40 01           a0 = sp + 0x140d0
  1077: 7b 57 10 01              u64 [s0 + 0x110] = a0
  1081: 49 25 08 01 08           u64 [s0 + 264] = 0x8
  1086: 49 25 18 01 08           u64 [s0 + 280] = 0x8
  1091: 33 07 02                 a0 = 0x2
  1094: 7b 67 50                 u64 [s1 + 0x50] = a0
  1097: 7b 67 60                 u64 [s1 + 0x60] = a0
  1100: 7b 67 70                 u64 [s1 + 0x70] = a0
  1103: 7b 67 80 00              u64 [s1 + 0x80] = a0
  1107: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1111: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  1115: 7b 67 b0 00              u64 [s1 + 0xb0] = a0
  1119: 7b 17 70                 u64 [sp + 0x70] = a0
  1122: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  1126: 49 25 20 01              u64 [s0 + 288] = 0
  1130: 95 17 00 51 01           a0 = sp + 0x15100
  1135: 95 18 d8 51 01           a1 = sp + 0x151d8
  1140: 50 10 14 a6 0f           ra = 20, jump @305
      :                          @68 [@dyn 10]
  1145: 82 56 30                 s1 = u64 [s0 + 0x30]
  1148: 82 5b 38                 a4 = u64 [s0 + 0x38]
  1151: 82 55 28                 s0 = u64 [s0 + 0x28]
  1154: 33 07 02                 a0 = 0x2
  1157: 33 08                    a1 = 0
  1159: 33 09                    a2 = 0
  1161: 64 6a                    a3 = s1
  1163: 33 00 16                 ra = 0x16
  1166: 0a 64                    ecalli 100 // 'log'
  1168: 01                       fallthrough
      :                          @69 [@dyn 11]
  1169: 82 17 78                 a0 = u64 [sp + 0x78]
  1172: c8 57 07                 a0 = a0 + s0
  1175: 53 37 00 00 f0 25        jump @75 if a0 <u 4293918720
      :                          @70
  1181: 33 07 40 10 03           a0 = 0x31040
  1186: 95 77 00 00 10           a0 = a0 + 0x100000
  1191: 01                       fallthrough
      :                          @71
  1192: 82 78                    a1 = u64 [a0]
  1194: c9 87 09                 a2 = a0 - a1
  1197: ab 69 0f                 jump @75 if a2 != s1
      :                          @72
  1200: c9 58 09                 a2 = a1 - s0
  1203: 01                       fallthrough
      :                          @73
  1204: 82 7a                    a3 = u64 [a0]
  1206: ab 8a f2                 jump @71 if a3 != a1
      :                          @74
  1209: 7b 79                    u64 [a0] = a2
  1211: 01                       fallthrough
      :                          @75
  1212: 95 16 88 40 01           s1 = sp + 0x14088
  1217: 82 67 30                 a0 = u64 [s1 + 0x30]
  1220: 82 68 38                 a1 = u64 [s1 + 0x38]
  1223: 33 09                    a2 = 0
  1225: 0a 08                    ecalli 8 // 'machine'
  1227: 7b 67 40                 u64 [s1 + 0x40] = a0
  1230: 95 17 c8 40 01           a0 = sp + 0x140c8
  1235: 95 15 d8 50 01           s0 = sp + 0x150d8
  1240: 7b 57 28                 u64 [s0 + 0x28] = a0
  1243: 82 17 70                 a0 = u64 [sp + 0x70]
  1246: 7b 57 30                 u64 [s0 + 0x30] = a0
  1249: 33 07 28 01 01           a0 = 0x10128
  1254: 7b 67 48                 u64 [s1 + 0x48] = a0
  1257: 95 17 00 51 01           a0 = sp + 0x15100
  1262: 7b 67 58                 u64 [s1 + 0x58] = a0
  1265: 49 16 50 01              u64 [s1 + 80] = 0x1
  1269: 49 16 60 01              u64 [s1 + 96] = 0x1
  1273: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  1283: 7b 17 70                 u64 [sp + 0x70] = a0
  1286: 49 16 68                 u64 [s1 + 104] = 0
  1289: 95 17 d8 51 01           a0 = sp + 0x151d8
  1294: 95 18 d0 40 01           a1 = sp + 0x140d0
  1299: 50 10 18 07 0f           ra = 24, jump @305
      :                          @76 [@dyn 12]
  1304: 82 56 08 01              s1 = u64 [s0 + 0x108]
  1308: 82 5b 10 01              a4 = u64 [s0 + 0x110]
  1312: 82 55 00 01              s0 = u64 [s0 + 0x100]
  1316: 33 07 02                 a0 = 0x2
  1319: 33 08                    a1 = 0
  1321: 33 09                    a2 = 0
  1323: 64 6a                    a3 = s1
  1325: 33 00 1a                 ra = 0x1a
  1328: 0a 64                    ecalli 100 // 'log'
  1330: 01                       fallthrough
      :                          @77 [@dyn 13]
  1331: 82 17 78                 a0 = u64 [sp + 0x78]
  1334: c8 57 07                 a0 = a0 + s0
  1337: 53 37 00 00 f0 25        jump @83 if a0 <u 4293918720
      :                          @78
  1343: 33 07 40 10 03           a0 = 0x31040
  1348: 95 77 00 00 10           a0 = a0 + 0x100000
  1353: 01                       fallthrough
      :                          @79
  1354: 82 78                    a1 = u64 [a0]
  1356: c9 87 09                 a2 = a0 - a1
  1359: ab 69 0f                 jump @83 if a2 != s1
      :                          @80
  1362: c9 58 09                 a2 = a1 - s0
  1365: 01                       fallthrough
      :                          @81
  1366: 82 7a                    a3 = u64 [a0]
  1368: ab 8a f2                 jump @79 if a3 != a1
      :                          @82
  1371: 7b 79                    u64 [a0] = a2
  1373: 01                       fallthrough
      :                          @83
  1374: 33 05 ff 0f              s0 = 0xfff
  1378: 95 18 88 40 01           a1 = sp + 0x14088
  1383: 82 87                    a0 = u64 [a1]
  1385: 7b 17 48                 u64 [sp + 0x48] = a0
  1388: 82 87 08                 a0 = u64 [a1 + 0x8]
  1391: 7b 17 40                 u64 [sp + 0x40] = a0
  1394: 82 87 10                 a0 = u64 [a1 + 0x10]
  1397: 7b 17 38                 u64 [sp + 0x38] = a0
  1400: 82 89 18                 a2 = u64 [a1 + 0x18]
  1403: 82 87 20                 a0 = u64 [a1 + 0x20]
  1406: 7b 17 30                 u64 [sp + 0x30] = a0
  1409: 82 87 40                 a0 = u64 [a1 + 0x40]
  1412: 82 88 28                 a1 = u64 [a1 + 0x28]
  1415: 7b 18 50                 u64 [sp + 0x50] = a1
  1418: 7b 19 58                 u64 [sp + 0x58] = a2
  1421: c8 59 09                 a2 = a2 + s0
  1424: 98 99 0c                 a2 = a2 >> 0xc
  1427: 82 16 70                 s1 = u64 [sp + 0x70]
  1430: d2 76 06                 s1 = s1 & a0
  1433: 33 08 10                 a1 = 0x10
  1436: 33 0a 04                 a3 = 0x4
  1439: 64 67                    a0 = s1
  1441: 0a 0b                    ecalli 11 // 'pages'
  1443: 01                       fallthrough
      :                          @84
  1444: 51 07 47                 jump @93 if a0 == 0
      :                          @85
  1447: 33 0a e6 05 01           a3 = 0x105e6
  1452: 33 07 02                 a0 = 0x2
  1455: 33 0b 3e                 a4 = 0x3e
  1458: 33 08                    a1 = 0
  1460: 33 09                    a2 = 0
  1462: 0a 64                    ecalli 100 // 'log'
  1464: 28 12 01                 jump @106
      :                          @86
  1467: 33 07 40 10 03           a0 = 0x31040
  1472: 95 7c 00 00 10           a5 = a0 + 0x100000
  1477: 33 07 09 00 03           a0 = 0x30009
  1482: 82 12 70                 t0 = u64 [sp + 0x70]
  1485: 01                       fallthrough
      :                          @87
  1486: 82 c8                    a1 = u64 [a5]
  1488: c9 8c 09                 a2 = a5 - a1
  1491: ab 29 a9 fb              jump @36 if a2 != t0
      :                          @88
  1495: c9 58 09                 a2 = a1 - s0
  1498: 01                       fallthrough
      :                          @89
  1499: 82 ca                    a3 = u64 [a5]
  1501: ab 8a f1                 jump @87 if a3 != a1
      :                          @90
  1504: 7b c9                    u64 [a5] = a2
  1506: 33 0b                    a4 = 0
  1508: 01                       fallthrough
      :                          @91
  1509: ab 8a e9                 jump @87 if a3 != a1
      :                          @92
  1512: 28 94 fb                 jump @36
      :                          @93
  1515: 82 17 50                 a0 = u64 [sp + 0x50]
  1518: 95 77 ff 0f              a0 = a0 + 0xfff
  1522: 98 77 0c                 a0 = a0 >> 0xc
  1525: 82 19 48                 a2 = u64 [sp + 0x48]
  1528: c8 79 09                 a2 = a2 + a0
  1531: 82 18 58                 a1 = u64 [sp + 0x58]
  1534: 95 87 ff ff 00           a0 = a1 + 0xffff
  1539: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  1544: 95 77 00 00 02           a0 = a0 + 0x20000
  1549: 7b 17 70                 u64 [sp + 0x70] = a0
  1552: 98 78 0c                 a1 = a0 >> 0xc
  1555: 33 0a 04                 a3 = 0x4
  1558: 64 67                    a0 = s1
  1560: 0a 0b                    ecalli 11 // 'pages'
  1562: 01                       fallthrough
      :                          @94
  1563: 51 07 17                 jump @96 if a0 == 0
      :                          @95
  1566: 33 0a a8 05 01           a3 = 0x105a8
  1571: 33 07 02                 a0 = 0x2
  1574: 33 0b 3e                 a4 = 0x3e
  1577: 33 08                    a1 = 0
  1579: 33 09                    a2 = 0
  1581: 0a 64                    ecalli 100 // 'log'
  1583: 28 9b 00                 jump @106
      :                          @96
  1586: 82 17 40                 a0 = u64 [sp + 0x40]
  1589: 95 75 ff 0f              s0 = a0 + 0xfff
  1593: 98 59 0c                 a2 = s0 >> 0xc
  1596: 84 57 00 f0              a0 = s0 & 0xfffffffffffff000
  1600: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  1610: c9 78 08                 a1 = a1 - a0
  1613: 98 88 0c                 a1 = a1 >> 0xc
  1616: 33 0a 04                 a3 = 0x4
  1619: 64 67                    a0 = s1
  1621: 0a 0b                    ecalli 11 // 'pages'
  1623: 01                       fallthrough
      :                          @97
  1624: 51 07 16                 jump @99 if a0 == 0
      :                          @98
  1627: 33 0a 6c 05 01           a3 = 0x1056c
  1632: 33 07 02                 a0 = 0x2
  1635: 33 0b 3c                 a4 = 0x3c
  1638: 33 08                    a1 = 0
  1640: 33 09                    a2 = 0
  1642: 0a 64                    ecalli 100 // 'log'
  1644: 28 5e                    jump @106
      :                          @99
  1646: 33 09 00 00 01           a2 = 0x10000
  1651: 64 67                    a0 = s1
  1653: 82 18 38                 a1 = u64 [sp + 0x38]
  1656: 82 1a 58                 a3 = u64 [sp + 0x58]
  1659: 0a 0a                    ecalli 10 // 'poke'
  1661: 01                       fallthrough
      :                          @100
  1662: 51 07 16                 jump @102 if a0 == 0
      :                          @101
  1665: 33 0a 2e 05 01           a3 = 0x1052e
  1670: 33 07 02                 a0 = 0x2
  1673: 33 0b 3e                 a4 = 0x3e
  1676: 33 08                    a1 = 0
  1678: 33 09                    a2 = 0
  1680: 0a 64                    ecalli 100 // 'log'
  1682: 28 38                    jump @106
      :                          @102
  1684: 64 67                    a0 = s1
  1686: 82 18 30                 a1 = u64 [sp + 0x30]
  1689: 82 19 70                 a2 = u64 [sp + 0x70]
  1692: 82 1a 50                 a3 = u64 [sp + 0x50]
  1695: 0a 0a                    ecalli 10 // 'poke'
  1697: 01                       fallthrough
      :                          @103
  1698: 51 07 16                 jump @105 if a0 == 0
      :                          @104
  1701: 33 0a f0 04 01           a3 = 0x104f0
  1706: 33 07 02                 a0 = 0x2
  1709: 33 0b 3e                 a4 = 0x3e
  1712: 33 08                    a1 = 0
  1714: 33 09                    a2 = 0
  1716: 0a 64                    ecalli 100 // 'log'
  1718: 28 14                    jump @106
      :                          @105
  1720: 33 0a c2 04 01           a3 = 0x104c2
  1725: 33 07 02                 a0 = 0x2
  1728: 33 0b 2e                 a4 = 0x2e
  1731: 33 08                    a1 = 0
  1733: 33 09                    a2 = 0
  1735: 0a 64                    ecalli 100 // 'log'
  1737: 01                       fallthrough
      :                          @106
  1738: 33 09 08 10              a2 = 0x1008
  1742: 95 17 d0 40 01           a0 = sp + 0x140d0
  1747: 33 08                    a1 = 0
  1749: 7b 19 50                 u64 [sp + 0x50] = a2
  1752: 50 10 1c 58 10           ra = 28, jump @373
      :                          @107 [@dyn 14]
  1757: 49 11 18                 u64 [sp + 24] = 0
  1760: 95 17 d8 50 01           a0 = sp + 0x150d8
  1765: 49 07                    u64 [a0 + 0] = 0
  1767: 33 05 40 10 03           s0 = 0x31040
  1772: 33 0b 00 00 10           a4 = 0x100000
  1777: 33 07 38 01 01           a0 = 0x10138
  1782: 7b 17 40                 u64 [sp + 0x40] = a0
  1785: 33 07 02                 a0 = 0x2
  1788: 7b 17 70                 u64 [sp + 0x70] = a0
  1791: 33 07 78 01 01           a0 = 0x10178
  1796: 7b 17 38                 u64 [sp + 0x38] = a0
  1799: 33 07 c0 01 01           a0 = 0x101c0
  1804: 7b 17 10                 u64 [sp + 0x10] = a0
  1807: 33 07 f8 01 01           a0 = 0x101f8
  1812: 7b 17 30                 u64 [sp + 0x30] = a0
  1815: 33 07 00 00 01           a0 = 0x10000
  1820: 7b 17 28                 u64 [sp + 0x28] = a0
  1823: 33 07 50 02 01           a0 = 0x10250
  1828: 7b 17 20                 u64 [sp + 0x20] = a0
  1831: 7b 15 48                 u64 [sp + 0x48] = s0
  1834: c8 b5 05                 s0 = s0 + a4
  1837: 28 14                    jump @109
      :                          @108
  1839: 95 18 d8 50 01           a1 = sp + 0x150d8
  1844: 82 87                    a0 = u64 [a1]
  1846: 95 77 01                 a0 = a0 + 0x1
  1849: 7b 87                    u64 [a1] = a0
  1851: 33 0b 00 00 10           a4 = 0x100000
  1856: 01                       fallthrough
      :                          @109
  1857: 82 58                    a1 = u64 [s0]
  1859: 95 87 12                 a0 = a1 + 0x12
  1862: ac 87 e1 07              jump @182 if a0 <u a1
      :                          @110
  1866: 95 79 01                 a2 = a0 + 0x1
  1869: 88 9a 01                 a3 = a2 <u 0x1
  1872: d8 9b 09                 a2 = a4 <u a2
  1875: d4 a9 09                 a2 = a2 | a3
  1878: 52 09 d1 07              jump @182 if a2 != 0
      :                          @111
  1882: 82 59                    a2 = u64 [s0]
  1884: ab 89 e5                 jump @109 if a2 != a1
      :                          @112
  1887: 7b 57                    u64 [s0] = a0
  1889: 82 16 48                 s1 = u64 [sp + 0x48]
  1892: c9 76 06                 s1 = s1 - a0
  1895: c8 b6 06                 s1 = s1 + a4
  1898: 33 09 12                 a2 = 0x12
  1901: 64 67                    a0 = s1
  1903: 82 18 40                 a1 = u64 [sp + 0x40]
  1906: 50 10 1e 0c 0f           ra = 30, jump @355
      :                          @113 [@dyn 15]
  1911: 33 07 02                 a0 = 0x2
  1914: 33 0b 12                 a4 = 0x12
  1917: 33 08                    a1 = 0
  1919: 33 09                    a2 = 0
  1921: 64 6a                    a3 = s1
  1923: 33 00 20                 ra = 0x20
  1926: 0a 64                    ecalli 100 // 'log'
  1928: 01                       fallthrough
      :                          @114 [@dyn 16]
  1929: 82 57                    a0 = u64 [s0]
  1931: c9 75 08                 a1 = s0 - a0
  1934: ab 68 0f                 jump @118 if a1 != s1
      :                          @115
  1937: 95 78 ee                 a1 = a0 + 0xffffffffffffffee
  1940: 01                       fallthrough
      :                          @116
  1941: 82 59                    a2 = u64 [s0]
  1943: ab 79 f2                 jump @114 if a2 != a0
      :                          @117
  1946: 7b 58                    u64 [s0] = a1
  1948: 01                       fallthrough
      :                          @118
  1949: 95 17 d8 50 01           a0 = sp + 0x150d8
  1954: 82 7b                    a4 = u64 [a0]
  1956: 95 17 d0 40 01           a0 = sp + 0x140d0
  1961: 33 0a 06                 a3 = 0x6
  1964: 33 08                    a1 = 0
  1966: 82 19 50                 a2 = u64 [sp + 0x50]
  1969: 33 0c                    a5 = 0
  1971: 0a 01                    ecalli 1 // 'fetch'
  1973: 01                       fallthrough
      :                          @119
  1974: 95 19 d8 50 01           a2 = sp + 0x150d8
  1979: 7b 97 18                 u64 [a2 + 0x18] = a0
  1982: 51 17 ff d7 02           jump @152 if a0 == 4294967295
      :                          @120
  1987: 7b 99 28                 u64 [a2 + 0x28] = a2
  1990: 82 17 70                 a0 = u64 [sp + 0x70]
  1993: 7b 97 30                 u64 [a2 + 0x30] = a0
  1996: 95 18 f0 50 01           a1 = sp + 0x150f0
  2001: 7b 98 38                 u64 [a2 + 0x38] = a1
  2004: 7b 97 40                 u64 [a2 + 0x40] = a0
  2007: 82 17 38                 a0 = u64 [sp + 0x38]
  2010: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2014: 49 29 08 01 02           u64 [a2 + 264] = 0x2
  2019: 49 29 20 01              u64 [a2 + 288] = 0
  2023: 95 18 00 51 01           a1 = sp + 0x15100
  2028: 7b 98 10 01              u64 [a2 + 0x110] = a1
  2032: 49 29 18 01 02           u64 [a2 + 280] = 0x2
  2037: 95 17 98 51 01           a0 = sp + 0x15198
  2042: 95 18 d8 51 01           a1 = sp + 0x151d8
  2047: 50 10 22 1b 0c           ra = 34, jump @305
      :                          @121 [@dyn 17]
  2052: 95 17 d8 50 01           a0 = sp + 0x150d8
  2057: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2061: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2065: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2069: 7b 17 58                 u64 [sp + 0x58] = a0
  2072: 33 07 02                 a0 = 0x2
  2075: 33 08                    a1 = 0
  2077: 33 09                    a2 = 0
  2079: 64 6a                    a3 = s1
  2081: 33 00 24                 ra = 0x24
  2084: 0a 64                    ecalli 100 // 'log'
  2086: 01                       fallthrough
      :                          @122 [@dyn 18]
  2087: 82 1b 58                 a4 = u64 [sp + 0x58]
  2090: 82 17 78                 a0 = u64 [sp + 0x78]
  2093: c8 b7 07                 a0 = a0 + a4
  2096: 53 37 00 00 f0 1a        jump @127 if a0 <u 4293918720
      :                          @123
  2102: 82 57                    a0 = u64 [s0]
  2104: c9 75 08                 a1 = s0 - a0
  2107: ab 68 0f                 jump @127 if a1 != s1
      :                          @124
  2110: c9 b7 08                 a1 = a0 - a4
  2113: 01                       fallthrough
      :                          @125
  2114: 82 59                    a2 = u64 [s0]
  2116: ab 79 f2                 jump @123 if a2 != a0
      :                          @126
  2119: 7b 58                    u64 [s0] = a1
  2121: 01                       fallthrough
      :                          @127
  2122: 95 18 88 40 01           a1 = sp + 0x14088
  2127: 80 87 48                 a0 = u32 [a1 + 0x48]
  2130: 80 88 4c                 a1 = u32 [a1 + 0x4c]
  2133: 95 1a d8 50 01           a3 = sp + 0x150d8
  2138: 82 a9                    a2 = u64 [a3]
  2140: 7b a7 08                 u64 [a3 + 0x8] = a0
  2143: 7b a8 10                 u64 [a3 + 0x10] = a1
  2146: 52 09 a2 00              jump @136 if a2 != 0
      :                          @128
  2150: 95 17 e0 50 01           a0 = sp + 0x150e0
  2155: 7b a7 28                 u64 [a3 + 0x28] = a0
  2158: 82 17 70                 a0 = u64 [sp + 0x70]
  2161: 7b a7 30                 u64 [a3 + 0x30] = a0
  2164: 95 18 e8 50 01           a1 = sp + 0x150e8
  2169: 7b a8 38                 u64 [a3 + 0x38] = a1
  2172: 7b a7 40                 u64 [a3 + 0x40] = a0
  2175: 82 17 10                 a0 = u64 [sp + 0x10]
  2178: 7b a7 00 01              u64 [a3 + 0x100] = a0
  2182: 49 2a 08 01 02           u64 [a3 + 264] = 0x2
  2187: 49 2a 20 01              u64 [a3 + 288] = 0
  2191: 95 18 00 51 01           a1 = sp + 0x15100
  2196: 7b a8 10 01              u64 [a3 + 0x110] = a1
  2200: 49 2a 18 01 02           u64 [a3 + 280] = 0x2
  2205: 95 17 98 51 01           a0 = sp + 0x15198
  2210: 95 18 d8 51 01           a1 = sp + 0x151d8
  2215: 50 10 26 73 0b           ra = 38, jump @305
      :                          @129 [@dyn 19]
  2220: 95 17 d8 50 01           a0 = sp + 0x150d8
  2225: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2229: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2233: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2237: 7b 17 58                 u64 [sp + 0x58] = a0
  2240: 33 07 02                 a0 = 0x2
  2243: 33 08                    a1 = 0
  2245: 33 09                    a2 = 0
  2247: 64 6a                    a3 = s1
  2249: 33 00 28                 ra = 0x28
  2252: 0a 64                    ecalli 100 // 'log'
  2254: 01                       fallthrough
      :                          @130 [@dyn 20]
  2255: 82 1b 58                 a4 = u64 [sp + 0x58]
  2258: 82 17 78                 a0 = u64 [sp + 0x78]
  2261: c8 b7 07                 a0 = a0 + a4
  2264: 53 37 00 00 f0 1a        jump @135 if a0 <u 4293918720
      :                          @131
  2270: 82 57                    a0 = u64 [s0]
  2272: c9 75 08                 a1 = s0 - a0
  2275: ab 68 0f                 jump @135 if a1 != s1
      :                          @132
  2278: c9 b7 08                 a1 = a0 - a4
  2281: 01                       fallthrough
      :                          @133
  2282: 82 59                    a2 = u64 [s0]
  2284: ab 79 f2                 jump @131 if a2 != a0
      :                          @134
  2287: 7b 58                    u64 [s0] = a1
  2289: 01                       fallthrough
      :                          @135
  2290: 95 17 d8 50 01           a0 = sp + 0x150d8
  2295: 82 78 10                 a1 = u64 [a0 + 0x10]
  2298: 82 77 08                 a0 = u64 [a0 + 0x8]
  2301: 97 89 0c                 a2 = a1 << 0xc
  2304: 7b 19 18                 u64 [sp + 0x18] = a2
  2307: 01                       fallthrough
      :                          @136
  2308: 33 09 01                 a2 = 0x1
  2311: 33 0a 04                 a3 = 0x4
  2314: 0a 0b                    ecalli 11 // 'pages'
  2316: 95 19 d8 50 01           a2 = sp + 0x150d8
  2321: 7b 97 20                 u64 [a2 + 0x20] = a0
  2324: 95 17 e0 50 01           a0 = sp + 0x150e0
  2329: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2333: 82 17 70                 a0 = u64 [sp + 0x70]
  2336: 7b 97 08 01              u64 [a2 + 0x108] = a0
  2340: 95 18 e8 50 01           a1 = sp + 0x150e8
  2345: 7b 98 10 01              u64 [a2 + 0x110] = a1
  2349: 7b 97 18 01              u64 [a2 + 0x118] = a0
  2353: 95 18 f8 50 01           a1 = sp + 0x150f8
  2358: 7b 98 20 01              u64 [a2 + 0x120] = a1
  2362: 7b 97 28 01              u64 [a2 + 0x128] = a0
  2366: 82 17 30                 a0 = u64 [sp + 0x30]
  2369: 7b 97 28                 u64 [a2 + 0x28] = a0
  2372: 49 19 30 03              u64 [a2 + 48] = 0x3
  2376: 49 19 48                 u64 [a2 + 72] = 0
  2379: 95 17 d8 51 01           a0 = sp + 0x151d8
  2384: 7b 97 38                 u64 [a2 + 0x38] = a0
  2387: 49 19 40 03              u64 [a2 + 64] = 0x3
  2391: 95 17 98 51 01           a0 = sp + 0x15198
  2396: 95 18 00 51 01           a1 = sp + 0x15100
  2401: 50 10 2a b9 0a           ra = 42, jump @305
      :                          @137 [@dyn 21]
  2406: 95 17 d8 50 01           a0 = sp + 0x150d8
  2411: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2415: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2419: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2423: 7b 17 58                 u64 [sp + 0x58] = a0
  2426: 33 07 02                 a0 = 0x2
  2429: 33 08                    a1 = 0
  2431: 33 09                    a2 = 0
  2433: 64 6a                    a3 = s1
  2435: 33 00 2c                 ra = 0x2c
  2438: 0a 64                    ecalli 100 // 'log'
  2440: 01                       fallthrough
      :                          @138 [@dyn 22]
  2441: 82 1b 58                 a4 = u64 [sp + 0x58]
  2444: 82 17 78                 a0 = u64 [sp + 0x78]
  2447: c8 b7 07                 a0 = a0 + a4
  2450: 53 37 00 00 f0 1a        jump @143 if a0 <u 4293918720
      :                          @139
  2456: 82 57                    a0 = u64 [s0]
  2458: c9 75 08                 a1 = s0 - a0
  2461: ab 68 0f                 jump @143 if a1 != s1
      :                          @140
  2464: c9 b7 08                 a1 = a0 - a4
  2467: 01                       fallthrough
      :                          @141
  2468: 82 59                    a2 = u64 [s0]
  2470: ab 79 f2                 jump @139 if a2 != a0
      :                          @142
  2473: 7b 58                    u64 [s0] = a1
  2475: 01                       fallthrough
      :                          @143
  2476: 95 1a d8 50 01           a3 = sp + 0x150d8
  2481: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2484: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2487: 95 18 d0 40 01           a1 = sp + 0x140d0
  2492: 7b a8 98 00              u64 [a3 + 0x98] = a1
  2496: 97 99 0c                 a2 = a2 << 0xc
  2499: 7b a9 a0 00              u64 [a3 + 0xa0] = a2
  2503: 33 0a 00 10              a3 = 0x1000
  2507: 95 18 d8 40 01           a1 = sp + 0x140d8
  2512: 0a 0a                    ecalli 10 // 'poke'
  2514: 95 19 d8 50 01           a2 = sp + 0x150d8
  2519: 7b 97 a8 00              u64 [a2 + 0xa8] = a0
  2523: 95 17 e0 50 01           a0 = sp + 0x150e0
  2528: 7b 97 00 01              u64 [a2 + 0x100] = a0
  2532: 82 17 70                 a0 = u64 [sp + 0x70]
  2535: 7b 97 08 01              u64 [a2 + 0x108] = a0
  2539: 95 18 70 51 01           a1 = sp + 0x15170
  2544: 7b 98 10 01              u64 [a2 + 0x110] = a1
  2548: 7b 97 18 01              u64 [a2 + 0x118] = a0
  2552: 95 18 78 51 01           a1 = sp + 0x15178
  2557: 7b 98 20 01              u64 [a2 + 0x120] = a1
  2561: 7b 97 28 01              u64 [a2 + 0x128] = a0
  2565: 82 18 28                 a1 = u64 [sp + 0x28]
  2568: 7b 98 30 01              u64 [a2 + 0x130] = a1
  2572: 7b 97 38 01              u64 [a2 + 0x138] = a0
  2576: 95 18 80 51 01           a1 = sp + 0x15180
  2581: 7b 98 40 01              u64 [a2 + 0x140] = a1
  2585: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2589: 82 17 20                 a0 = u64 [sp + 0x20]
  2592: 7b 97 28                 u64 [a2 + 0x28] = a0
  2595: 49 19 30 05              u64 [a2 + 48] = 0x5
  2599: 49 19 48                 u64 [a2 + 72] = 0
  2602: 95 17 d8 51 01           a0 = sp + 0x151d8
  2607: 7b 97 38                 u64 [a2 + 0x38] = a0
  2610: 49 19 40 05              u64 [a2 + 64] = 0x5
  2614: 95 17 98 51 01           a0 = sp + 0x15198
  2619: 95 18 00 51 01           a1 = sp + 0x15100
  2624: 50 10 2e da 09           ra = 46, jump @305
      :                          @144 [@dyn 23]
  2629: 95 17 d8 50 01           a0 = sp + 0x150d8
  2634: 82 76 c8 00              s1 = u64 [a0 + 0xc8]
  2638: 82 7b d0 00              a4 = u64 [a0 + 0xd0]
  2642: 82 77 c0 00              a0 = u64 [a0 + 0xc0]
  2646: 7b 17 58                 u64 [sp + 0x58] = a0
  2649: 33 07 02                 a0 = 0x2
  2652: 33 08                    a1 = 0
  2654: 33 09                    a2 = 0
  2656: 64 6a                    a3 = s1
  2658: 33 00 30                 ra = 0x30
  2661: 0a 64                    ecalli 100 // 'log'
  2663: 01                       fallthrough
      :                          @145 [@dyn 24]
  2664: 82 1b 58                 a4 = u64 [sp + 0x58]
  2667: 82 17 78                 a0 = u64 [sp + 0x78]
  2670: c8 b7 07                 a0 = a0 + a4
  2673: 53 37 00 00 f0 be fc     jump @108 if a0 <u 4293918720
      :                          @146
  2680: 82 57                    a0 = u64 [s0]
  2682: c9 75 08                 a1 = s0 - a0
  2685: ab 68 b2 fc              jump @108 if a1 != s1
      :                          @147
  2689: c9 b7 08                 a1 = a0 - a4
  2692: 01                       fallthrough
      :                          @148
  2693: 82 59                    a2 = u64 [s0]
  2695: ab 79 f1                 jump @146 if a2 != a0
      :                          @149
  2698: 7b 58                    u64 [s0] = a1
  2700: 33 0a                    a3 = 0
  2702: 01                       fallthrough
      :                          @150
  2703: ab 79 e9                 jump @146 if a2 != a0
      :                          @151
  2706: 28 9d fc                 jump @108
      :                          @152
  2709: 82 97                    a0 = u64 [a2]
  2711: 97 77 0c                 a0 = a0 << 0xc
  2714: 49 19 28 ff ff ff 0f     u64 [a2 + 40] = 0xfffffff
  2721: 14 08 00 00 ff ff 00 00 00 00 a1 = 0xffff0000
  2731: 7b 98 30                 u64 [a2 + 0x30] = a1
  2734: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2744: 7b 98 38                 u64 [a2 + 0x38] = a1
  2747: 49 19 40                 u64 [a2 + 64] = 0
  2750: 49 19 48                 u64 [a2 + 72] = 0
  2753: 49 19 50                 u64 [a2 + 80] = 0
  2756: 49 19 58                 u64 [a2 + 88] = 0
  2759: 49 19 60                 u64 [a2 + 96] = 0
  2762: 82 18 18                 a1 = u64 [sp + 0x18]
  2765: 7b 98 68                 u64 [a2 + 0x68] = a1
  2768: 7b 97 70                 u64 [a2 + 0x70] = a0
  2771: 82 17 08                 a0 = u64 [sp + 0x8]
  2774: 7b 97 78                 u64 [a2 + 0x78] = a0
  2777: 82 17 68                 a0 = u64 [sp + 0x68]
  2780: 7b 97 80 00              u64 [a2 + 0x80] = a0
  2784: 82 17 60                 a0 = u64 [sp + 0x60]
  2787: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2791: 49 29 90 00              u64 [a2 + 144] = 0
  2795: 33 07 02                 a0 = 0x2
  2798: 7b 17 48                 u64 [sp + 0x48] = a0
  2801: 33 07 c8 02 01           a0 = 0x102c8
  2806: 7b 17 40                 u64 [sp + 0x40] = a0
  2809: 33 07 40 10 03           a0 = 0x31040
  2814: 95 77 00 00 10           a0 = a0 + 0x100000
  2819: 7b 17 38                 u64 [sp + 0x38] = a0
  2822: 95 16 d8 50 01           s1 = sp + 0x150d8
  2827: 01                       fallthrough
      :                          @153
  2828: 95 17 88 40 01           a0 = sp + 0x14088
  2833: 82 77 40                 a0 = u64 [a0 + 0x40]
  2836: 95 18 00 51 01           a1 = sp + 0x15100
  2841: 0a 0c                    ecalli 12 // 'invoke'
  2843: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2847: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2851: 95 17 c8 40 01           a0 = sp + 0x140c8
  2856: 7b 67 00 01              u64 [s1 + 0x100] = a0
  2860: 82 17 48                 a0 = u64 [sp + 0x48]
  2863: 7b 67 08 01              u64 [s1 + 0x108] = a0
  2867: 95 18 70 51 01           a1 = sp + 0x15170
  2872: 7b 68 10 01              u64 [s1 + 0x110] = a1
  2876: 7b 67 18 01              u64 [s1 + 0x118] = a0
  2880: 95 18 78 51 01           a1 = sp + 0x15178
  2885: 7b 68 20 01              u64 [s1 + 0x120] = a1
  2889: 7b 67 28 01              u64 [s1 + 0x128] = a0
  2893: 82 17 40                 a0 = u64 [sp + 0x40]
  2896: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  2900: 49 26 c8 00 03           u64 [s1 + 200] = 0x3
  2905: 49 26 e0 00              u64 [s1 + 224] = 0
  2909: 95 18 d8 51 01           a1 = sp + 0x151d8
  2914: 7b 68 d0 00              u64 [s1 + 0xd0] = a1
  2918: 49 26 d8 00 03           u64 [s1 + 216] = 0x3
  2923: 95 17 80 51 01           a0 = sp + 0x15180
  2928: 95 18 98 51 01           a1 = sp + 0x15198
  2933: 50 10 32 a5 08           ra = 50, jump @305
      :                          @154 [@dyn 25]
  2938: 82 65 b0 00              s0 = u64 [s1 + 0xb0]
  2942: 82 6b b8 00              a4 = u64 [s1 + 0xb8]
  2946: 82 66 a8 00              s1 = u64 [s1 + 0xa8]
  2950: 33 07 02                 a0 = 0x2
  2953: 33 08                    a1 = 0
  2955: 33 09                    a2 = 0
  2957: 64 5a                    a3 = s0
  2959: 33 00 34                 ra = 0x34
  2962: 0a 64                    ecalli 100 // 'log'
  2964: 01                       fallthrough
      :                          @155 [@dyn 26]
  2965: 82 17 78                 a0 = u64 [sp + 0x78]
  2968: c8 67 07                 a0 = a0 + s1
  2971: 82 1b 38                 a4 = u64 [sp + 0x38]
  2974: 53 37 00 00 f0 1a        jump @160 if a0 <u 4293918720
      :                          @156
  2980: 82 b7                    a0 = u64 [a4]
  2982: c9 7b 08                 a1 = a4 - a0
  2985: ab 58 0f                 jump @160 if a1 != s0
      :                          @157
  2988: c9 67 08                 a1 = a0 - s1
  2991: 01                       fallthrough
      :                          @158
  2992: 82 b9                    a2 = u64 [a4]
  2994: ab 79 f2                 jump @156 if a2 != a0
      :                          @159
  2997: 7b b8                    u64 [a4] = a1
  2999: 01                       fallthrough
      :                          @160
  3000: 95 19 d8 50 01           a2 = sp + 0x150d8
  3005: 82 97 98 00              a0 = u64 [a2 + 0x98]
  3009: 82 98 a0 00              a1 = u64 [a2 + 0xa0]
  3013: 85 77 03                 a0 = a0 ^ 0x3
  3016: 82 9a 68                 a3 = u64 [a2 + 0x68]
  3019: 7b 1a 68                 u64 [sp + 0x68] = a3
  3022: 85 88 64                 a1 = a1 ^ 0x64
  3025: d4 87 07                 a0 = a0 | a1
  3028: 52 07 91 00              jump @163 if a0 != 0
      :                          @161
  3032: 82 97 70                 a0 = u64 [a2 + 0x70]
  3035: 7b 17 58                 u64 [sp + 0x58] = a0
  3038: 82 97 78                 a0 = u64 [a2 + 0x78]
  3041: 7b 17 70                 u64 [sp + 0x70] = a0
  3044: 82 97 80 00              a0 = u64 [a2 + 0x80]
  3048: 7b 17 60                 u64 [sp + 0x60] = a0
  3051: 82 97 88 00              a0 = u64 [a2 + 0x88]
  3055: 7b 17 50                 u64 [sp + 0x50] = a0
  3058: 49 29 f8 00              u64 [a2 + 248] = 0
  3062: 49 29 f0 00              u64 [a2 + 240] = 0
  3066: 49 29 e8 00              u64 [a2 + 232] = 0
  3070: 49 29 e0 00              u64 [a2 + 224] = 0
  3074: 49 29 d8 00              u64 [a2 + 216] = 0
  3078: 49 29 d0 00              u64 [a2 + 208] = 0
  3082: 49 29 c8 00              u64 [a2 + 200] = 0
  3086: 49 29 c0 00              u64 [a2 + 192] = 0
  3090: 95 17 d8 51 01           a0 = sp + 0x151d8
  3095: 33 09 00 01              a2 = 0x100
  3099: 33 08                    a1 = 0
  3101: 95 16 d8 50 01           s1 = sp + 0x150d8
  3106: 50 10 36 0e 0b           ra = 54, jump @373
      :                          @162 [@dyn 27]
  3111: 95 15 88 40 01           s0 = sp + 0x14088
  3116: 82 57 40                 a0 = u64 [s0 + 0x40]
  3119: 95 18 98 51 01           a1 = sp + 0x15198
  3124: 82 19 58                 a2 = u64 [sp + 0x58]
  3127: 82 1a 70                 a3 = u64 [sp + 0x70]
  3130: 0a 09                    ecalli 9 // 'peek'
  3132: 82 57 40                 a0 = u64 [s0 + 0x40]
  3135: 95 18 d8 51 01           a1 = sp + 0x151d8
  3140: 82 19 60                 a2 = u64 [sp + 0x60]
  3143: 82 15 50                 s0 = u64 [sp + 0x50]
  3146: 64 5a                    a3 = s0
  3148: 0a 09                    ecalli 9 // 'peek'
  3150: 95 18 98 51 01           a1 = sp + 0x15198
  3155: 95 1a d8 51 01           a3 = sp + 0x151d8
  3160: 82 17 68                 a0 = u64 [sp + 0x68]
  3163: 82 19 70                 a2 = u64 [sp + 0x70]
  3166: 64 5b                    a4 = s0
  3168: 0a 64                    ecalli 100 // 'log'
  3170: 28 aa fe                 jump @153
      :                          @163
  3173: 95 17 d8 40 01           a0 = sp + 0x140d8
  3178: 33 09 00 10              a2 = 0x1000
  3182: 33 06 00 10              s1 = 0x1000
  3186: 33 08                    a1 = 0
  3188: 50 10 38 bc 0a           ra = 56, jump @373
      :                          @164 [@dyn 28]
  3193: 95 1a 88 40 01           a3 = sp + 0x14088
  3198: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3201: 7a a7 48                 u32 [a3 + 0x48] = a0
  3204: 82 15 68                 s0 = u64 [sp + 0x68]
  3207: 98 58 0c                 a1 = s0 >> 0xc
  3210: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3213: 33 0a 00 10              a3 = 0x1000
  3217: 95 18 d8 40 01           a1 = sp + 0x140d8
  3222: 64 59                    a2 = s0
  3224: 0a 09                    ecalli 9 // 'peek'
  3226: 83 66 08                 i32 s1 = s1 + 0x8
  3229: 95 17 d0 40 01           a0 = sp + 0x140d0
  3234: 64 68                    a1 = s1
  3236: 0a 07                    ecalli 7 // 'export'
  3238: 33 09 00 10              a2 = 0x1000
  3242: 95 17 d8 40 01           a0 = sp + 0x140d8
  3247: 33 08                    a1 = 0
  3249: 50 10 3a 7f 0a           ra = 58, jump @373
      :                          @165 [@dyn 29]
  3254: 95 1a 88 40 01           a3 = sp + 0x14088
  3259: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3262: 7a a7 48                 u32 [a3 + 0x48] = a0
  3265: 95 59 00 10              a2 = s0 + 0x1000
  3269: 98 98 0c                 a1 = a2 >> 0xc
  3272: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3275: 33 0a 00 10              a3 = 0x1000
  3279: 95 18 d8 40 01           a1 = sp + 0x140d8
  3284: 0a 09                    ecalli 9 // 'peek'
  3286: 95 17 d0 40 01           a0 = sp + 0x140d0
  3291: 64 68                    a1 = s1
  3293: 0a 07                    ecalli 7 // 'export'
  3295: 33 09 00 10              a2 = 0x1000
  3299: 95 17 d8 40 01           a0 = sp + 0x140d8
  3304: 33 08                    a1 = 0
  3306: 50 10 3c 46 0a           ra = 60, jump @373
      :                          @166 [@dyn 30]
  3311: 95 1a 88 40 01           a3 = sp + 0x14088
  3316: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3319: 7a a7 48                 u32 [a3 + 0x48] = a0
  3322: 95 59 00 20              a2 = s0 + 0x2000
  3326: 98 98 0c                 a1 = a2 >> 0xc
  3329: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3332: 33 0a 00 10              a3 = 0x1000
  3336: 95 18 d8 40 01           a1 = sp + 0x140d8
  3341: 0a 09                    ecalli 9 // 'peek'
  3343: 95 17 d0 40 01           a0 = sp + 0x140d0
  3348: 64 68                    a1 = s1
  3350: 0a 07                    ecalli 7 // 'export'
  3352: 33 09 00 10              a2 = 0x1000
  3356: 95 17 d8 40 01           a0 = sp + 0x140d8
  3361: 33 08                    a1 = 0
  3363: 50 10 3e 0d 0a           ra = 62, jump @373
      :                          @167 [@dyn 31]
  3368: 95 18 88 40 01           a1 = sp + 0x14088
  3373: 82 87 40                 a0 = u64 [a1 + 0x40]
  3376: 7a 87 48                 u32 [a1 + 0x48] = a0
  3379: 95 1a 88 40 01           a3 = sp + 0x14088
  3384: 95 59 00 30              a2 = s0 + 0x3000
  3388: 98 98 0c                 a1 = a2 >> 0xc
  3391: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3394: 33 0a 00 10              a3 = 0x1000
  3398: 95 18 d8 40 01           a1 = sp + 0x140d8
  3403: 0a 09                    ecalli 9 // 'peek'
  3405: 95 17 d0 40 01           a0 = sp + 0x140d0
  3410: 64 68                    a1 = s1
  3412: 64 65                    s0 = s1
  3414: 0a 07                    ecalli 7 // 'export'
  3416: 33 09 00 10              a2 = 0x1000
  3420: 95 17 d8 40 01           a0 = sp + 0x140d8
  3425: 33 08                    a1 = 0
  3427: 50 10 40 cd 09           ra = 64, jump @373
      :                          @168 [@dyn 32]
  3432: 95 1a 88 40 01           a3 = sp + 0x14088
  3437: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3440: 7a a7 48                 u32 [a3 + 0x48] = a0
  3443: 82 16 68                 s1 = u64 [sp + 0x68]
  3446: 95 69 00 40              a2 = s1 + 0x4000
  3450: 98 98 0c                 a1 = a2 >> 0xc
  3453: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3456: 33 0a 00 10              a3 = 0x1000
  3460: 95 18 d8 40 01           a1 = sp + 0x140d8
  3465: 0a 09                    ecalli 9 // 'peek'
  3467: 95 17 d0 40 01           a0 = sp + 0x140d0
  3472: 64 58                    a1 = s0
  3474: 0a 07                    ecalli 7 // 'export'
  3476: 33 09 00 10              a2 = 0x1000
  3480: 95 17 d8 40 01           a0 = sp + 0x140d8
  3485: 33 08                    a1 = 0
  3487: 50 10 42 91 09           ra = 66, jump @373
      :                          @169 [@dyn 33]
  3492: 95 18 88 40 01           a1 = sp + 0x14088
  3497: 82 87 40                 a0 = u64 [a1 + 0x40]
  3500: 7a 87 48                 u32 [a1 + 0x48] = a0
  3503: 95 1a 88 40 01           a3 = sp + 0x14088
  3508: 95 69 00 50              a2 = s1 + 0x5000
  3512: 98 98 0c                 a1 = a2 >> 0xc
  3515: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3518: 33 0a 00 10              a3 = 0x1000
  3522: 95 18 d8 40 01           a1 = sp + 0x140d8
  3527: 0a 09                    ecalli 9 // 'peek'
  3529: 95 17 d0 40 01           a0 = sp + 0x140d0
  3534: 7b 15 70                 u64 [sp + 0x70] = s0
  3537: 64 58                    a1 = s0
  3539: 0a 07                    ecalli 7 // 'export'
  3541: 33 09 00 10              a2 = 0x1000
  3545: 95 17 d8 40 01           a0 = sp + 0x140d8
  3550: 33 08                    a1 = 0
  3552: 50 10 44 50 09           ra = 68, jump @373
      :                          @170 [@dyn 34]
  3557: 95 1a 88 40 01           a3 = sp + 0x14088
  3562: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3565: 7a a7 48                 u32 [a3 + 0x48] = a0
  3568: 95 69 00 60              a2 = s1 + 0x6000
  3572: 98 98 0c                 a1 = a2 >> 0xc
  3575: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3578: 33 0a 00 10              a3 = 0x1000
  3582: 95 18 d8 40 01           a1 = sp + 0x140d8
  3587: 0a 09                    ecalli 9 // 'peek'
  3589: 95 17 d0 40 01           a0 = sp + 0x140d0
  3594: 64 58                    a1 = s0
  3596: 0a 07                    ecalli 7 // 'export'
  3598: 33 09 00 10              a2 = 0x1000
  3602: 95 17 d8 40 01           a0 = sp + 0x140d8
  3607: 33 08                    a1 = 0
  3609: 50 10 46 17 09           ra = 70, jump @373
      :                          @171 [@dyn 35]
  3614: 95 18 88 40 01           a1 = sp + 0x14088
  3619: 82 87 40                 a0 = u64 [a1 + 0x40]
  3622: 7a 87 48                 u32 [a1 + 0x48] = a0
  3625: 95 1a 88 40 01           a3 = sp + 0x14088
  3630: 95 69 00 70              a2 = s1 + 0x7000
  3634: 98 98 0c                 a1 = a2 >> 0xc
  3637: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3640: 33 0a 00 10              a3 = 0x1000
  3644: 95 18 d8 40 01           a1 = sp + 0x140d8
  3649: 0a 09                    ecalli 9 // 'peek'
  3651: 95 17 d0 40 01           a0 = sp + 0x140d0
  3656: 82 15 70                 s0 = u64 [sp + 0x70]
  3659: 64 58                    a1 = s0
  3661: 0a 07                    ecalli 7 // 'export'
  3663: 33 09 00 10              a2 = 0x1000
  3667: 95 17 d8 40 01           a0 = sp + 0x140d8
  3672: 33 08                    a1 = 0
  3674: 50 10 48 d6 08           ra = 72, jump @373
      :                          @172 [@dyn 36]
  3679: 95 1a 88 40 01           a3 = sp + 0x14088
  3684: 82 a7 40                 a0 = u64 [a3 + 0x40]
  3687: 7a a7 48                 u32 [a3 + 0x48] = a0
  3690: 95 69 00 80 00           a2 = s1 + 0x8000
  3695: 98 98 0c                 a1 = a2 >> 0xc
  3698: 7a a8 4c                 u32 [a3 + 0x4c] = a1
  3701: 95 16 88 40 01           s1 = sp + 0x14088
  3706: 33 0a 00 10              a3 = 0x1000
  3710: 95 18 d8 40 01           a1 = sp + 0x140d8
  3715: 0a 09                    ecalli 9 // 'peek'
  3717: 95 17 d0 40 01           a0 = sp + 0x140d0
  3722: 64 58                    a1 = s0
  3724: 0a 07                    ecalli 7 // 'export'
  3726: 82 67 40                 a0 = u64 [s1 + 0x40]
  3729: 0a 0d                    ecalli 13 // 'expunge'
  3731: 33 07 02                 a0 = 0x2
  3734: 95 18 d8 50 01           a1 = sp + 0x150d8
  3739: 7b 87 b0 00              u64 [a1 + 0xb0] = a0
  3743: 33 07 28 03 01           a0 = 0x10328
  3748: 7b 87 00 01              u64 [a1 + 0x100] = a0
  3752: 95 17 80 51 01           a0 = sp + 0x15180
  3757: 7b 87 10 01              u64 [a1 + 0x110] = a0
  3761: 49 28 08 01 01           u64 [a1 + 264] = 0x1
  3766: 49 28 18 01 01           u64 [a1 + 280] = 0x1
  3771: 7b 88 a8 00              u64 [a1 + 0xa8] = a1
  3775: 49 28 20 01              u64 [a1 + 288] = 0
  3779: 95 16 d8 50 01           s1 = sp + 0x150d8
  3784: 95 17 98 51 01           a0 = sp + 0x15198
  3789: 95 18 d8 51 01           a1 = sp + 0x151d8
  3794: 50 10 4a 48 05           ra = 74, jump @305
      :                          @173 [@dyn 37]
  3799: 82 65 c8 00              s0 = u64 [s1 + 0xc8]
  3803: 82 6b d0 00              a4 = u64 [s1 + 0xd0]
  3807: 82 66 c0 00              s1 = u64 [s1 + 0xc0]
  3811: 33 07 02                 a0 = 0x2
  3814: 33 08                    a1 = 0
  3816: 33 09                    a2 = 0
  3818: 64 5a                    a3 = s0
  3820: 33 00 4c                 ra = 0x4c
  3823: 0a 64                    ecalli 100 // 'log'
  3825: 01                       fallthrough
      :                          @174 [@dyn 38]
  3826: 82 17 78                 a0 = u64 [sp + 0x78]
  3829: c8 67 07                 a0 = a0 + s1
  3832: 53 37 00 00 f0 7c f2     jump @35 if a0 <u 4293918720
      :                          @175
  3839: 33 07 40 10 03           a0 = 0x31040
  3844: 95 77 00 00 10           a0 = a0 + 0x100000
  3849: 01                       fallthrough
      :                          @176
  3850: 82 78                    a1 = u64 [a0]
  3852: c9 87 09                 a2 = a0 - a1
  3855: ab 59 65 f2              jump @35 if a2 != s0
      :                          @177
  3859: c9 68 09                 a2 = a1 - s1
  3862: 01                       fallthrough
      :                          @178
  3863: 82 7a                    a3 = u64 [a0]
  3865: ab 8a f1                 jump @176 if a3 != a1
      :                          @179
  3868: 7b 79                    u64 [a0] = a2
  3870: 33 0b                    a4 = 0
  3872: 01                       fallthrough
      :                          @180
  3873: ab 8a e9                 jump @176 if a3 != a1
      :                          @181
  3876: 28 50 f2                 jump @35
      :                          @182
  3879: 00                       trap
      :                          @183
  3880: 00                       trap
      :                          @184 [export #1: 'accumulate']
  3881: 51 08 a2 02              jump @247 if a1 == 0
      :                          @185
  3885: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  3889: 7b 10 90 00              u64 [sp + 0x90] = ra
  3893: 7b 15 88 00              u64 [sp + 0x88] = s0
  3897: 7b 16 80 00              u64 [sp + 0x80] = s1
  3901: 64 85                    s0 = a1
  3903: 7d 78                    a1 = i8 [a0]
  3905: 33 06 01                 s1 = 0x1
  3908: 59 08 37                 jump @192 if a1 >=s 0
      :                          @186
  3911: 84 89 ff 00              a2 = a1 & 0xff
  3915: 33 06 02                 s1 = 0x2
  3918: 53 29 c0 00 2d           jump @192 if a2 <u 192
      :                          @187
  3923: 33 06 03                 s1 = 0x3
  3926: 53 29 e0 00 25           jump @192 if a2 <u 224
      :                          @188
  3931: 33 06 04                 s1 = 0x4
  3934: 53 29 f0 00 1d           jump @192 if a2 <u 240
      :                          @189
  3939: 33 06 05                 s1 = 0x5
  3942: 53 29 f8 00 15           jump @192 if a2 <u 248
      :                          @190
  3947: 33 06 06                 s1 = 0x6
  3950: 53 29 fc 00 0d           jump @192 if a2 <u 252
      :                          @191
  3955: 88 98 fe 00              a1 = a2 <u 0xfe
  3959: 9a 86 08                 s1 = 0x8 - a1
  3962: 01                       fallthrough
      :                          @192
  3963: ac 65 37 02              jump @246 if s0 <u s1
      :                          @193
  3967: 64 68                    a1 = s1
  3969: 7b 17                    u64 [sp] = a0
  3971: 50 10 4e 97 0d           ra = 78, jump @488
      :                          @194 [@dyn 39]
  3976: 82 17                    a0 = u64 [sp]
  3978: aa 65 28 02              jump @246 if s0 == s1
      :                          @195
  3982: c8 67 07                 a0 = a0 + s1
  3985: 7d 78                    a1 = i8 [a0]
  3987: c9 65 0a                 a3 = s0 - s1
  3990: 33 05 01                 s0 = 0x1
  3993: 59 08 37                 jump @202 if a1 >=s 0
      :                          @196
  3996: 84 89 ff 00              a2 = a1 & 0xff
  4000: 33 05 02                 s0 = 0x2
  4003: 53 29 c0 00 2d           jump @202 if a2 <u 192
      :                          @197
  4008: 33 05 03                 s0 = 0x3
  4011: 53 29 e0 00 25           jump @202 if a2 <u 224
      :                          @198
  4016: 33 05 04                 s0 = 0x4
  4019: 53 29 f0 00 1d           jump @202 if a2 <u 240
      :                          @199
  4024: 33 05 05                 s0 = 0x5
  4027: 53 29 f8 00 15           jump @202 if a2 <u 248
      :                          @200
  4032: 33 05 06                 s0 = 0x6
  4035: 53 29 fc 00 0d           jump @202 if a2 <u 252
      :                          @201
  4040: 88 98 fe 00              a1 = a2 <u 0xfe
  4044: 9a 85 08                 s0 = 0x8 - a1
  4047: 01                       fallthrough
      :                          @202
  4048: ac 5a e2 01              jump @246 if a3 <u s0
      :                          @203
  4052: 64 58                    a1 = s0
  4054: 7b 1a                    u64 [sp] = a3
  4056: 64 76                    s1 = a0
  4058: 50 10 50 40 0d           ra = 80, jump @488
      :                          @204 [@dyn 40]
  4063: c8 65 07                 a0 = s0 + s1
  4066: 82 16                    s1 = u64 [sp]
  4068: ab 56 0b                 jump @206 if s1 != s0
      :                          @205
  4071: 33 08                    a1 = 0
  4073: 33 00 52                 ra = 0x52
  4076: 28 2e 0d                 jump @488
      :                          @206
  4079: 7d 79                    a2 = i8 [a0]
  4081: c9 56 06                 s1 = s1 - s0
  4084: 33 08 01                 a1 = 0x1
  4087: 59 09 44                 jump @213 if a2 >=s 0
      :                          @207
  4090: 84 99 ff 00              a2 = a2 & 0xff
  4094: 33 0a c0 00              a3 = 0xc0
  4098: 33 08 02                 a1 = 0x2
  4101: ac a9 36                 jump @213 if a2 <u a3
      :                          @208
  4104: 33 0a e0 00              a3 = 0xe0
  4108: 33 08 03                 a1 = 0x3
  4111: ac a9 2c                 jump @213 if a2 <u a3
      :                          @209
  4114: 33 0a f0 00              a3 = 0xf0
  4118: 33 08 04                 a1 = 0x4
  4121: ac a9 22                 jump @213 if a2 <u a3
      :                          @210
  4124: 33 0a f8 00              a3 = 0xf8
  4128: 33 08 05                 a1 = 0x5
  4131: ac a9 18                 jump @213 if a2 <u a3
      :                          @211
  4134: 33 0a fc 00              a3 = 0xfc
  4138: 33 08 06                 a1 = 0x6
  4141: ac a9 0e                 jump @213 if a2 <u a3
      :                          @212
  4144: 88 98 fe 00              a1 = a2 <u 0xfe
  4148: 33 09 08                 a2 = 0x8
  4151: c9 89 08                 a1 = a2 - a1
  4154: 01                       fallthrough
      :                          @213
  4155: ac 86 77 01              jump @246 if s1 <u a1
      :                          @214
  4159: 50 10 52 db 0c           ra = 82, jump @488
      :                          @215 [@dyn 41]
  4164: 33 07 2d 00 03           a0 = 0x3002d
  4169: 33 09 08 10              a2 = 0x1008
  4173: 33 0a 0f                 a3 = 0xf
  4176: 33 08                    a1 = 0
  4178: 33 0b                    a4 = 0
  4180: 33 0c                    a5 = 0
  4182: 33 00 54                 ra = 0x54
  4185: 0a 01                    ecalli 1 // 'fetch'
  4187: 01                       fallthrough
      :                          @216 [@dyn 42]
  4188: 51 07 56 01              jump @246 if a0 == 0
      :                          @217
  4192: 95 76 80                 s1 = a0 + 0xffffffffffffff80
  4195: 51 06 4f 01              jump @246 if s1 == 0
      :                          @218
  4199: 35 07 ad 00 03           a0 = i8 [0x300ad]
  4204: 33 05 01                 s0 = 0x1
  4207: 59 07 37                 jump @225 if a0 >=s 0
      :                          @219
  4210: 84 77 ff 00              a0 = a0 & 0xff
  4214: 33 05 02                 s0 = 0x2
  4217: 53 27 c0 00 2d           jump @225 if a0 <u 192
      :                          @220
  4222: 33 05 03                 s0 = 0x3
  4225: 53 27 e0 00 25           jump @225 if a0 <u 224
      :                          @221
  4230: 33 05 04                 s0 = 0x4
  4233: 53 27 f0 00 1d           jump @225 if a0 <u 240
      :                          @222
  4238: 33 05 05                 s0 = 0x5
  4241: 53 27 f8 00 15           jump @225 if a0 <u 248
      :                          @223
  4246: 33 05 06                 s0 = 0x6
  4249: 53 27 fc 00 0d           jump @225 if a0 <u 252
      :                          @224
  4254: 88 77 fe 00              a0 = a0 <u 0xfe
  4258: 9a 75 08                 s0 = 0x8 - a0
  4261: 01                       fallthrough
      :                          @225
  4262: ac 56 0c 01              jump @246 if s1 <u s0
      :                          @226
  4266: 33 07 2d 00 03           a0 = 0x3002d
  4271: 7b 17                    u64 [sp] = a0
  4273: 95 77 80 00              a0 = a0 + 0x80
  4277: 64 58                    a1 = s0
  4279: 50 10 56 63 0c           ra = 86, jump @488
      :                          @227 [@dyn 43]
  4284: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
  4287: c8 67 07                 a0 = a0 + s1
  4290: 51 07 f0 00              jump @246 if a0 == 0
      :                          @228
  4294: 82 18                    a1 = u64 [sp]
  4296: c8 85 05                 s0 = s0 + a1
  4299: 95 55 81 00              s0 = s0 + 0x81
  4303: 7d 58                    a1 = i8 [s0]
  4305: 33 06 01                 s1 = 0x1
  4308: 59 08 45                 jump @236 if a1 >=s 0
      :                          @229
  4311: 84 88 ff 00              a1 = a1 & 0xff
  4315: 33 09 c0 00              a2 = 0xc0
  4319: 33 06 02                 s1 = 0x2
  4322: ac 98 33                 jump @235 if a1 <u a2
      :                          @230
  4325: 33 09 e0 00              a2 = 0xe0
  4329: 33 06 03                 s1 = 0x3
  4332: ac 98 29                 jump @235 if a1 <u a2
      :                          @231
  4335: 33 09 f0 00              a2 = 0xf0
  4339: 33 06 04                 s1 = 0x4
  4342: ac 98 1f                 jump @235 if a1 <u a2
      :                          @232
  4345: 33 09 f8 00              a2 = 0xf8
  4349: 33 06 05                 s1 = 0x5
  4352: ac 98 15                 jump @235 if a1 <u a2
      :                          @233
  4355: 33 09 fc 00              a2 = 0xfc
  4359: 33 06 06                 s1 = 0x6
  4362: ac 98 0b                 jump @235 if a1 <u a2
      :                          @234
  4365: 88 88 fe 00              a1 = a1 <u 0xfe
  4369: 9a 86 08                 s1 = 0x8 - a1
  4372: 01                       fallthrough
      :                          @235
  4373: ac 67 9d 00              jump @246 if a0 <u s1
      :                          @236
  4377: 64 57                    a0 = s0
  4379: 64 68                    a1 = s1
  4381: 50 10 58 fd 0b           ra = 88, jump @488
      :                          @237 [@dyn 44]
  4386: 52 17 24 90 00           jump @246 if a0 != 36
      :                          @238
  4391: c8 56 07                 a0 = s1 + s0
  4394: 7b 17 08                 u64 [sp + 0x8] = a0
  4397: 80 78 20                 a1 = u32 [a0 + 0x20]
  4400: 7b 18 10                 u64 [sp + 0x10] = a1
  4403: 0a 17                    ecalli 23 // 'solicit'
  4405: 95 17 08                 a0 = sp + 0x8
  4408: 7b 17 60                 u64 [sp + 0x60] = a0
  4411: 33 07 02                 a0 = 0x2
  4414: 7b 17 68                 u64 [sp + 0x68] = a0
  4417: 95 18 10                 a1 = sp + 0x10
  4420: 7b 18 70                 u64 [sp + 0x70] = a1
  4423: 7b 17 78                 u64 [sp + 0x78] = a0
  4426: 33 07 a8 03 01           a0 = 0x103a8
  4431: 7b 17 30                 u64 [sp + 0x30] = a0
  4434: 49 11 38 02              u64 [sp + 56] = 0x2
  4438: 49 11 50                 u64 [sp + 80] = 0
  4441: 95 18 60                 a1 = sp + 0x60
  4444: 7b 18 40                 u64 [sp + 0x40] = a1
  4447: 49 11 48 02              u64 [sp + 72] = 0x2
  4451: 95 17 18                 a0 = sp + 0x18
  4454: 95 18 30                 a1 = sp + 0x30
  4457: 50 10 5a b1 02           ra = 90, jump @305
      :                          @239 [@dyn 45]
  4462: 82 15 20                 s0 = u64 [sp + 0x20]
  4465: 82 1b 28                 a4 = u64 [sp + 0x28]
  4468: 82 16 18                 s1 = u64 [sp + 0x18]
  4471: 33 07 02                 a0 = 0x2
  4474: 33 08                    a1 = 0
  4476: 33 09                    a2 = 0
  4478: 64 5a                    a3 = s0
  4480: 33 00 5c                 ra = 0x5c
  4483: 0a 64                    ecalli 100 // 'log'
  4485: 01                       fallthrough
      :                          @240 [@dyn 46]
  4486: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
  4491: 53 38 00 00 f0 27        jump @246 if a1 <u 4293918720
      :                          @241
  4497: 33 07 40 10 03           a0 = 0x31040
  4502: 95 77 00 00 10           a0 = a0 + 0x100000
  4507: 01                       fallthrough
      :                          @242
  4508: 82 78                    a1 = u64 [a0]
  4510: c9 87 09                 a2 = a0 - a1
  4513: ab 59 11                 jump @246 if a2 != s0
      :                          @243
  4516: c9 68 09                 a2 = a1 - s1
  4519: 01                       fallthrough
      :                          @244
  4520: 82 7a                    a3 = u64 [a0]
  4522: ab 8a f2                 jump @242 if a3 != a1
      :                          @245
  4525: 7b 79                    u64 [a0] = a2
  4527: 33 0b                    a4 = 0
  4529: 01                       fallthrough
      :                          @246
  4530: 82 10 90 00              ra = u64 [sp + 0x90]
  4534: 82 15 88 00              s0 = u64 [sp + 0x88]
  4538: 82 16 80 00              s1 = u64 [sp + 0x80]
  4542: 95 11 98 00              sp = sp + 0x98
  4546: 33 07 00 00 01           a0 = 0x10000
  4551: 33 08                    a1 = 0
  4553: 32 00                    ret
      :                          @247
  4555: 33 07 00 00 01           a0 = 0x10000
  4560: 33 08                    a1 = 0
  4562: 32 00                    ret
      :                          @248 [export #2: 'on_transfer']
  4564: 33 07 00 00 01           a0 = 0x10000
  4569: 33 08                    a1 = 0
  4571: 32 00                    ret
      :                          @249
  4573: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4576: 7b 10 40                 u64 [sp + 0x40] = ra
  4579: 7b 15 38                 u64 [sp + 0x38] = s0
  4582: 7b 16 30                 u64 [sp + 0x30] = s1
  4585: c8 89 09                 a2 = a2 + a1
  4588: ac 89 52                 jump @257 if a2 <u a1
      :                          @250
  4591: 64 75                    s0 = a0
  4593: 82 77                    a0 = u64 [a0]
  4595: 97 78 01                 a1 = a0 << 0x1
  4598: 33 0a 08                 a3 = 0x8
  4601: e4 a9 09                 a2 = maxu(a2, a3)
  4604: e4 98 06                 s1 = maxu(a1, a2)
  4607: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4610: 98 88 3f                 a1 = a1 >> 0x3f
  4613: 51 07 12                 jump @252 if a0 == 0
      :                          @251
  4616: 82 59 08                 a2 = u64 [s0 + 0x8]
  4619: 7b 19 18                 u64 [sp + 0x18] = a2
  4622: 49 11 20 01              u64 [sp + 32] = 0x1
  4626: 7b 17 28                 u64 [sp + 0x28] = a0
  4629: 28 06                    jump @253
      :                          @252
  4631: 49 11 20                 u64 [sp + 32] = 0
  4634: 01                       fallthrough
      :                          @253
  4635: 64 17                    a0 = sp
  4637: 95 1a 18                 a3 = sp + 0x18
  4640: 64 69                    a2 = s1
  4642: 50 10 5e 32              ra = 94, jump @261
      :                          @254 [@dyn 47]
  4646: 82 18                    a1 = u64 [sp]
  4648: 82 17 08                 a0 = u64 [sp + 0x8]
  4651: 51 08 14                 jump @258 if a1 == 0
      :                          @255
  4654: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4664: aa 87 0d                 jump @259 if a0 == a1
      :                          @256
  4667: 52 07 18                 jump @260 if a0 != 0
      :                          @257
  4670: 00                       trap
      :                          @258
  4671: 7b 57 08                 u64 [s0 + 0x8] = a0
  4674: 7b 56                    u64 [s0] = s1
  4676: 01                       fallthrough
      :                          @259
  4677: 82 10 40                 ra = u64 [sp + 0x40]
  4680: 82 15 38                 s0 = u64 [sp + 0x38]
  4683: 82 16 30                 s1 = u64 [sp + 0x30]
  4686: 95 11 48                 sp = sp + 0x48
  4689: 32 00                    ret
      :                          @260
  4691: 00                       trap
      :                          @261
  4692: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4695: 7b 10 30                 u64 [sp + 0x30] = ra
  4698: 7b 15 28                 u64 [sp + 0x28] = s0
  4701: 7b 16 20                 u64 [sp + 0x20] = s1
  4704: 64 95                    s0 = a2
  4706: 64 72                    t0 = a0
  4708: 51 08 79                 jump @271 if a1 == 0
      :                          @262
  4711: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4714: 51 07 7c                 jump @272 if a0 == 0
      :                          @263
  4717: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4720: 51 09 aa 00              jump @279 if a2 == 0
      :                          @264
  4724: 82 a8                    a1 = u64 [a3]
  4726: 33 06 40 10 03           s1 = 0x31040
  4731: 33 03 00 00 10           t1 = 0x100000
  4736: c8 36 06                 s1 = s1 + t1
  4739: 01                       fallthrough
      :                          @265
  4740: 82 6a                    a3 = u64 [s1]
  4742: c8 5a 07                 a0 = a3 + s0
  4745: ac a7 cf 00              jump @285 if a0 <u a3
      :                          @266
  4749: 95 7b 01                 a4 = a0 + 0x1
  4752: 88 bc 01                 a5 = a4 <u 0x1
  4755: d8 b3 0b                 a4 = t1 <u a4
  4758: d4 cb 0b                 a4 = a4 | a5
  4761: 52 0b bf 00              jump @285 if a4 != 0
      :                          @267
  4765: 82 6b                    a4 = u64 [s1]
  4767: ab ab e5                 jump @265 if a4 != a3
      :                          @268
  4770: 7b 67                    u64 [s1] = a0
  4772: 33 0c                    a5 = 0
  4774: 7b 12 18                 u64 [sp + 0x18] = t0
  4777: 33 0a 40 10 03           a3 = 0x31040
  4782: 33 0b 00 00 10           a4 = 0x100000
  4787: 7b 1a                    u64 [sp] = a3
  4789: c8 ba 0a                 a3 = a3 + a4
  4792: c9 7a 07                 a0 = a3 - a0
  4795: 7b 17 10                 u64 [sp + 0x10] = a0
  4798: 7b 18 08                 u64 [sp + 0x8] = a1
  4801: 64 96                    s1 = a2
  4803: 50 10 60 bb 03           ra = 96, jump @355
      :                          @269 [@dyn 48]
  4808: 54 36 00 00 10 98 00     jump @286 if s1 <=u 1048576
      :                          @270
  4815: 82 12 18                 t0 = u64 [sp + 0x18]
  4818: 82 18 10                 a1 = u64 [sp + 0x10]
  4821: 33 07                    a0 = 0
  4823: 7b 28 08                 u64 [t0 + 0x8] = a1
  4826: 28 b5 00                 jump @292
      :                          @271
  4829: 49 12 08                 u64 [t0 + 8] = 0
  4832: 33 07 01                 a0 = 0x1
  4835: 28 ac 00                 jump @292
      :                          @272
  4838: 33 09 40 10 03           a2 = 0x31040
  4843: 33 07 00 00 10           a0 = 0x100000
  4848: c8 79 09                 a2 = a2 + a0
  4851: 01                       fallthrough
      :                          @273
  4852: 82 9a                    a3 = u64 [a2]
  4854: c8 5a 08                 a1 = a3 + s0
  4857: ac a8 5f                 jump @285 if a1 <u a3
      :                          @274
  4860: 95 8b 01                 a4 = a1 + 0x1
  4863: 88 bc 01                 a5 = a4 <u 0x1
  4866: d8 b7 0b                 a4 = a0 <u a4
  4869: d4 cb 0b                 a4 = a4 | a5
  4872: 52 0b 50                 jump @285 if a4 != 0
      :                          @275
  4875: 82 9b                    a4 = u64 [a2]
  4877: ab ab e7                 jump @273 if a4 != a3
      :                          @276
  4880: 7b 98                    u64 [a2] = a1
  4882: 33 0c                    a5 = 0
  4884: 01                       fallthrough
      :                          @277
  4885: ab ab df                 jump @273 if a4 != a3
      :                          @278
  4888: 28 31                    jump @284
      :                          @279
  4890: 33 09 40 10 03           a2 = 0x31040
  4895: 33 07 00 00 10           a0 = 0x100000
  4900: c8 79 09                 a2 = a2 + a0
  4903: 01                       fallthrough
      :                          @280
  4904: 82 9a                    a3 = u64 [a2]
  4906: c8 5a 08                 a1 = a3 + s0
  4909: ac a8 2b                 jump @285 if a1 <u a3
      :                          @281
  4912: 95 8b 01                 a4 = a1 + 0x1
  4915: 88 bc 01                 a5 = a4 <u 0x1
  4918: d8 b7 0b                 a4 = a0 <u a4
  4921: d4 cb 0b                 a4 = a4 | a5
  4924: 52 0b 1c                 jump @285 if a4 != 0
      :                          @282
  4927: 82 9b                    a4 = u64 [a2]
  4929: ab ab e7                 jump @280 if a4 != a3
      :                          @283
  4932: 7b 98                    u64 [a2] = a1
  4934: 33 0c                    a5 = 0
  4936: 01                       fallthrough
      :                          @284
  4937: 33 07 40 10 13           a0 = 0x131040
  4942: c9 87 08                 a1 = a0 - a1
  4945: 33 07                    a0 = 0
  4947: 7b 28 08                 u64 [t0 + 0x8] = a1
  4950: 28 39                    jump @292
      :                          @285
  4952: 33 07 01                 a0 = 0x1
  4955: 7b 27 08                 u64 [t0 + 0x8] = a0
  4958: 28 31                    jump @292
      :                          @286
  4960: 64 6c                    a5 = s1
  4962: 82 17                    a0 = u64 [sp]
  4964: 95 77 00 00 10           a0 = a0 + 0x100000
  4969: 82 12 18                 t0 = u64 [sp + 0x18]
  4972: 82 16 08                 s1 = u64 [sp + 0x8]
  4975: 01                       fallthrough
      :                          @287
  4976: 82 78                    a1 = u64 [a0]
  4978: c9 87 09                 a2 = a0 - a1
  4981: ab 69 11                 jump @291 if a2 != s1
      :                          @288
  4984: c9 c8 09                 a2 = a1 - a5
  4987: 01                       fallthrough
      :                          @289
  4988: 82 7a                    a3 = u64 [a0]
  4990: ab 8a f2                 jump @287 if a3 != a1
      :                          @290
  4993: 7b 79                    u64 [a0] = a2
  4995: 33 0b                    a4 = 0
  4997: 01                       fallthrough
      :                          @291
  4998: 82 18 10                 a1 = u64 [sp + 0x10]
  5001: 33 07                    a0 = 0
  5003: 7b 28 08                 u64 [t0 + 0x8] = a1
  5006: 01                       fallthrough
      :                          @292
  5007: 7b 25 10                 u64 [t0 + 0x10] = s0
  5010: 7b 27                    u64 [t0] = a0
  5012: 82 10 30                 ra = u64 [sp + 0x30]
  5015: 82 15 28                 s0 = u64 [sp + 0x28]
  5018: 82 16 20                 s1 = u64 [sp + 0x20]
  5021: 95 11 38                 sp = sp + 0x38
  5024: 32 00                    ret
      :                          @293
  5026: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  5029: 7b 10 40                 u64 [sp + 0x40] = ra
  5032: 7b 15 38                 u64 [sp + 0x38] = s0
  5035: 7b 16 30                 u64 [sp + 0x30] = s1
  5038: 95 88 01                 a1 = a1 + 0x1
  5041: 51 08 53                 jump @301 if a1 == 0
      :                          @294
  5044: 64 75                    s0 = a0
  5046: 82 77                    a0 = u64 [a0]
  5048: 97 79 01                 a2 = a0 << 0x1
  5051: 33 0a 08                 a3 = 0x8
  5054: e4 a8 08                 a1 = maxu(a1, a3)
  5057: e4 89 06                 s1 = maxu(a2, a1)
  5060: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  5063: 98 88 3f                 a1 = a1 >> 0x3f
  5066: 51 07 12                 jump @296 if a0 == 0
      :                          @295
  5069: 82 59 08                 a2 = u64 [s0 + 0x8]
  5072: 7b 19 18                 u64 [sp + 0x18] = a2
  5075: 49 11 20 01              u64 [sp + 32] = 0x1
  5079: 7b 17 28                 u64 [sp + 0x28] = a0
  5082: 28 06                    jump @297
      :                          @296
  5084: 49 11 20                 u64 [sp + 32] = 0
  5087: 01                       fallthrough
      :                          @297
  5088: 64 17                    a0 = sp
  5090: 95 1a 18                 a3 = sp + 0x18
  5093: 64 69                    a2 = s1
  5095: 50 10 62 6d fe           ra = 98, jump @261
      :                          @298 [@dyn 49]
  5100: 82 18                    a1 = u64 [sp]
  5102: 82 17 08                 a0 = u64 [sp + 0x8]
  5105: 51 08 14                 jump @302 if a1 == 0
      :                          @299
  5108: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  5118: aa 87 0d                 jump @303 if a0 == a1
      :                          @300
  5121: 52 07 18                 jump @304 if a0 != 0
      :                          @301
  5124: 00                       trap
      :                          @302
  5125: 7b 57 08                 u64 [s0 + 0x8] = a0
  5128: 7b 56                    u64 [s0] = s1
  5130: 01                       fallthrough
      :                          @303
  5131: 82 10 40                 ra = u64 [sp + 0x40]
  5134: 82 15 38                 s0 = u64 [sp + 0x38]
  5137: 82 16 30                 s1 = u64 [sp + 0x30]
  5140: 95 11 48                 sp = sp + 0x48
  5143: 32 00                    ret
      :                          @304
  5145: 00                       trap
      :                          @305
  5146: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  5149: 7b 10 30                 u64 [sp + 0x30] = ra
  5152: 7b 15 28                 u64 [sp + 0x28] = s0
  5155: 7b 16 20                 u64 [sp + 0x20] = s1
  5158: 82 8a 08                 a3 = u64 [a1 + 0x8]
  5161: 64 75                    s0 = a0
  5163: 51 0a 35                 jump @310 if a3 == 0
      :                          @306
  5166: 82 89                    a2 = u64 [a1]
  5168: 33 07                    a0 = 0
  5170: 95 9b 08                 a4 = a2 + 0x8
  5173: 01                       fallthrough
      :                          @307
  5174: 82 bc                    a5 = u64 [a4]
  5176: c8 c7 07                 a0 = a0 + a5
  5179: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5182: 95 bb 10                 a4 = a4 + 0x10
  5185: 52 0a f5                 jump @307 if a3 != 0
      :                          @308
  5188: 82 8a 18                 a3 = u64 [a1 + 0x18]
  5191: 51 0a 24                 jump @312 if a3 == 0
      :                          @309
  5194: 82 99 08                 a2 = u64 [a2 + 0x8]
  5197: 8e 99                    a2 = a2 >u 0
  5199: 88 7a 10                 a3 = a0 <u 0x10
  5202: 85 aa 01                 a3 = a3 ^ 0x1
  5205: d4 a9 09                 a2 = a2 | a3
  5208: 89 7a                    a3 = a0 <s 0
  5210: e0 a9 09                 a2 = a2 & ~a3
  5213: 52 09 0a                 jump @311 if a2 != 0
      :                          @310
  5216: 33 07                    a0 = 0
  5218: 33 09 01                 a2 = 0x1
  5221: 28 4a                    jump @320
      :                          @311
  5223: 97 77 01                 a0 = a0 << 0x1
  5226: 01                       fallthrough
      :                          @312
  5227: 51 07 40                 jump @319 if a0 == 0
      :                          @313
  5230: 57 07 73                 jump @325 if a0 <s 0
      :                          @314
  5233: 64 52                    t0 = s0
  5235: 33 0b 40 10 03           a4 = 0x31040
  5240: 33 09 00 00 10           a2 = 0x100000
  5245: c8 9b 0b                 a4 = a4 + a2
  5248: 01                       fallthrough
      :                          @315
  5249: 82 bc                    a5 = u64 [a4]
  5251: c8 7c 0a                 a3 = a5 + a0
  5254: ac ca 59                 jump @323 if a3 <u a5
      :                          @316
  5257: 95 a5 01                 s0 = a3 + 0x1
  5260: 88 56 01                 s1 = s0 <u 0x1
  5263: d8 59 05                 s0 = a2 <u s0
  5266: d4 65 05                 s0 = s0 | s1
  5269: 52 05 4a                 jump @323 if s0 != 0
      :                          @317
  5272: 82 b6                    s1 = u64 [a4]
  5274: ab c6 e7                 jump @315 if s1 != a5
      :                          @318
  5277: 7b ba                    u64 [a4] = a3
  5279: 33 09 40 10 13           a2 = 0x131040
  5284: c9 a9 09                 a2 = a2 - a3
  5287: 64 25                    s0 = t0
  5289: 28 06                    jump @320
      :                          @319
  5291: 33 09 01                 a2 = 0x1
  5294: 01                       fallthrough
      :                          @320
  5295: 7b 17                    u64 [sp] = a0
  5297: 7b 19 08                 u64 [sp + 0x8] = a2
  5300: 49 11 10                 u64 [sp + 16] = 0
  5303: 64 17                    a0 = sp
  5305: 50 10 64 79 06           ra = 100, jump @450
      :                          @321 [@dyn 50]
  5310: 52 07 22                 jump @324 if a0 != 0
      :                          @322
  5313: 82 17 10                 a0 = u64 [sp + 0x10]
  5316: 82 18 08                 a1 = u64 [sp + 0x8]
  5319: 82 19                    a2 = u64 [sp]
  5321: 7b 57 10                 u64 [s0 + 0x10] = a0
  5324: 7b 58 08                 u64 [s0 + 0x8] = a1
  5327: 7b 59                    u64 [s0] = a2
  5329: 82 10 30                 ra = u64 [sp + 0x30]
  5332: 82 15 28                 s0 = u64 [sp + 0x28]
  5335: 82 16 20                 s1 = u64 [sp + 0x20]
  5338: 95 11 38                 sp = sp + 0x38
  5341: 32 00                    ret
      :                          @323
  5343: 00                       trap
      :                          @324
  5344: 00                       trap
      :                          @325
  5345: 00                       trap
      :                          @326 [@dyn 51]
  5346: 82 72                    t0 = u64 [a0]
  5348: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  5353: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  5358: ac 9a 28                 jump @332 if a3 <u a2
      :                          @327
  5361: 82 77 08                 a0 = u64 [a0 + 0x8]
  5364: 33 09 40 10 03           a2 = 0x31040
  5369: 95 99 00 00 10           a2 = a2 + 0x100000
  5374: 01                       fallthrough
      :                          @328
  5375: 82 9a                    a3 = u64 [a2]
  5377: c9 a9 0b                 a4 = a2 - a3
  5380: ab 7b 12                 jump @332 if a4 != a0
      :                          @329
  5383: c9 2a 0b                 a4 = a3 - t0
  5386: 01                       fallthrough
      :                          @330
  5387: 82 9c                    a5 = u64 [a2]
  5389: ab ac f2                 jump @328 if a5 != a3
      :                          @331
  5392: 7b 9b                    u64 [a2] = a4
  5394: 33 08                    a1 = 0
  5396: 32 00                    ret
      :                          @332
  5398: 32 00                    ret
      :                          @333 [@dyn 52]
  5400: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5403: 7b 10 18                 u64 [sp + 0x18] = ra
  5406: 7b 15 10                 u64 [sp + 0x10] = s0
  5409: 7b 16 08                 u64 [sp + 0x8] = s1
  5412: 64 75                    s0 = a0
  5414: 82 7a 10                 a3 = u64 [a0 + 0x10]
  5417: 82 77                    a0 = u64 [a0]
  5419: c9 a7 07                 a0 = a0 - a3
  5422: 64 96                    s1 = a2
  5424: ac 97 2a                 jump @336 if a0 <u a2
      :                          @334
  5427: 7b 1a                    u64 [sp] = a3
  5429: 82 57 08                 a0 = u64 [s0 + 0x8]
  5432: c8 a7 07                 a0 = a0 + a3
  5435: 64 69                    a2 = s1
  5437: 50 10 6a 41 01           ra = 106, jump @355
      :                          @335 [@dyn 53]
  5442: 82 17                    a0 = u64 [sp]
  5444: c8 76 06                 s1 = s1 + a0
  5447: 7b 56 10                 u64 [s0 + 0x10] = s1
  5450: 33 07                    a0 = 0
  5452: 82 10 18                 ra = u64 [sp + 0x18]
  5455: 82 15 10                 s0 = u64 [sp + 0x10]
  5458: 82 16 08                 s1 = u64 [sp + 0x8]
  5461: 95 11 20                 sp = sp + 0x20
  5464: 32 00                    ret
      :                          @336
  5466: 64 57                    a0 = s0
  5468: 7b 18                    u64 [sp] = a1
  5470: 64 a8                    a1 = a3
  5472: 64 69                    a2 = s1
  5474: 50 10 6c 7b fc           ra = 108, jump @249
      :                          @337 [@dyn 54]
  5479: 82 18                    a1 = u64 [sp]
  5481: 82 5a 10                 a3 = u64 [s0 + 0x10]
  5484: 28 c7                    jump @334
      :                          @338 [@dyn 55]
  5486: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5489: 7b 10 20                 u64 [sp + 0x20] = ra
  5492: 7b 15 18                 u64 [sp + 0x18] = s0
  5495: 7b 16 10                 u64 [sp + 0x10] = s1
  5498: 64 86                    s1 = a1
  5500: 83 88                    i32 a1 = a1 + 0
  5502: 33 09 80 00              a2 = 0x80
  5506: 64 7a                    a3 = a0
  5508: ae 98 2b                 jump @343 if a1 >=u a2
      :                          @339
  5511: 82 a8 10                 a1 = u64 [a3 + 0x10]
  5514: 82 a7                    a0 = u64 [a3]
  5516: ab 78 12                 jump @342 if a1 != a0
      :                          @340
  5519: 64 a7                    a0 = a3
  5521: 64 a5                    s0 = a3
  5523: 50 10 70 0f fe           ra = 112, jump @293
      :                          @341 [@dyn 56]
  5528: 64 5a                    a3 = s0
  5530: 82 58 10                 a1 = u64 [s0 + 0x10]
  5533: 01                       fallthrough
      :                          @342
  5534: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5537: c8 87 07                 a0 = a0 + a1
  5540: 78 76                    u8 [a0] = s1
  5542: 95 88 01                 a1 = a1 + 0x1
  5545: 7b a8 10                 u64 [a3 + 0x10] = a1
  5548: 28 ab 00                 jump @351
      :                          @343
  5551: 8b 67 0b                 i32 a0 = s1 >> 0xb
  5554: 48 11 0c                 u32 [sp + 12] = 0
  5557: 52 07 1c                 jump @345 if a0 != 0
      :                          @344
  5560: 98 67 06                 a0 = s1 >> 0x6
  5563: 86 77 c0 00              a0 = a0 | 0xc0
  5567: 78 17 0c                 u8 [sp + 0xc] = a0
  5570: 84 67 3f                 a0 = s1 & 0x3f
  5573: 86 77 80 00              a0 = a0 | 0x80
  5577: 78 17 0d                 u8 [sp + 0xd] = a0
  5580: 33 06 02                 s1 = 0x2
  5583: 28 63                    jump @348
      :                          @345
  5585: 8b 67 10                 i32 a0 = s1 >> 0x10
  5588: 52 07 29                 jump @347 if a0 != 0
      :                          @346
  5591: 98 67 0c                 a0 = s1 >> 0xc
  5594: 86 77 e0 00              a0 = a0 | 0xe0
  5598: 78 17 0c                 u8 [sp + 0xc] = a0
  5601: 97 67 34                 a0 = s1 << 0x34
  5604: 98 77 3a                 a0 = a0 >> 0x3a
  5607: 95 77 80 00              a0 = a0 + 0x80
  5611: 78 17 0d                 u8 [sp + 0xd] = a0
  5614: 84 67 3f                 a0 = s1 & 0x3f
  5617: 86 77 80 00              a0 = a0 | 0x80
  5621: 78 17 0e                 u8 [sp + 0xe] = a0
  5624: 33 06 03                 s1 = 0x3
  5627: 28 37                    jump @348
      :                          @347
  5629: 97 67 2b                 a0 = s1 << 0x2b
  5632: 98 77 3d                 a0 = a0 >> 0x3d
  5635: 95 77 f0 00              a0 = a0 + 0xf0
  5639: 78 17 0c                 u8 [sp + 0xc] = a0
  5642: 97 67 2e                 a0 = s1 << 0x2e
  5645: 98 77 3a                 a0 = a0 >> 0x3a
  5648: 95 77 80 00              a0 = a0 + 0x80
  5652: 78 17 0d                 u8 [sp + 0xd] = a0
  5655: 97 67 34                 a0 = s1 << 0x34
  5658: 98 77 3a                 a0 = a0 >> 0x3a
  5661: 95 77 80 00              a0 = a0 + 0x80
  5665: 78 17 0e                 u8 [sp + 0xe] = a0
  5668: 84 67 3f                 a0 = s1 & 0x3f
  5671: 86 77 80 00              a0 = a0 | 0x80
  5675: 78 17 0f                 u8 [sp + 0xf] = a0
  5678: 33 06 04                 s1 = 0x4
  5681: 01                       fallthrough
      :                          @348
  5682: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5685: 82 a7                    a0 = u64 [a3]
  5687: c9 57 07                 a0 = a0 - s0
  5690: ac 67 2d                 jump @352 if a0 <u s1
      :                          @349
  5693: 7b 1a                    u64 [sp] = a3
  5695: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5698: c8 57 07                 a0 = a0 + s0
  5701: 95 18 0c                 a1 = sp + 0xc
  5704: 64 69                    a2 = s1
  5706: 50 10 72 34              ra = 114, jump @355
      :                          @350 [@dyn 57]
  5710: c8 56 06                 s1 = s1 + s0
  5713: 82 17                    a0 = u64 [sp]
  5715: 7b 76 10                 u64 [a0 + 0x10] = s1
  5718: 01                       fallthrough
      :                          @351
  5719: 33 07                    a0 = 0
  5721: 82 10 20                 ra = u64 [sp + 0x20]
  5724: 82 15 18                 s0 = u64 [sp + 0x18]
  5727: 82 16 10                 s1 = u64 [sp + 0x10]
  5730: 95 11 28                 sp = sp + 0x28
  5733: 32 00                    ret
      :                          @352
  5735: 64 a7                    a0 = a3
  5737: 64 58                    a1 = s0
  5739: 64 69                    a2 = s1
  5741: 64 a5                    s0 = a3
  5743: 50 10 74 6e fb           ra = 116, jump @249
      :                          @353 [@dyn 58]
  5748: 64 5a                    a3 = s0
  5750: 82 55 10                 s0 = u64 [s0 + 0x10]
  5753: 28 c4                    jump @349
      :                          @354 [@dyn 59]
  5755: 28 b7 04                 jump @450
      :                          @355
  5758: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5761: 7b 10 18                 u64 [sp + 0x18] = ra
  5764: 7b 15 10                 u64 [sp + 0x10] = s0
  5767: 7b 16 08                 u64 [sp + 0x8] = s1
  5770: 53 19 10 64              jump @364 if a2 <u 16
      :                          @356
  5774: 8d 7a                    i32 a3 = -a0
  5776: 84 a2 07                 t0 = a3 & 0x7
  5779: c8 27 0b                 a4 = a0 + t0
  5782: 51 02 15                 jump @359 if t0 == 0
      :                          @357
  5785: 64 8c                    a5 = a1
  5787: 64 75                    s0 = a0
  5789: 01                       fallthrough
      :                          @358
  5790: 7c ca                    a3 = u8 [a5]
  5792: 78 5a                    u8 [s0] = a3
  5794: 95 55 01                 s0 = s0 + 0x1
  5797: 95 cc 01                 a5 = a5 + 0x1
  5800: ac b5 f6                 jump @358 if s0 <u a4
      :                          @359
  5803: c8 28 03                 t1 = a1 + t0
  5806: c9 29 02                 t0 = a2 - t0
  5809: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5812: 84 38 07                 a1 = t1 & 0x7
  5815: c8 4b 0a                 a3 = a4 + t2
  5818: 51 08 3b                 jump @366 if a1 == 0
      :                          @360
  5821: 58 04 4b                 jump @369 if t2 <=s 0
      :                          @361
  5824: 97 38 03                 a1 = t1 << 0x3
  5827: 84 80 38                 ra = a1 & 0x38
  5830: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5833: 82 c5                    s0 = u64 [a5]
  5835: 8d 88                    i32 a1 = -a1
  5837: 84 88 38                 a1 = a1 & 0x38
  5840: 95 cc 08                 a5 = a5 + 0x8
  5843: 01                       fallthrough
      :                          @362
  5844: 82 c6                    s1 = u64 [a5]
  5846: d0 05 05                 s0 = s0 >> ra
  5849: cf 86 09                 a2 = s1 << a1
  5852: d4 59 09                 a2 = a2 | s0
  5855: 7b b9                    u64 [a4] = a2
  5857: 95 bb 08                 a4 = a4 + 0x8
  5860: 95 cc 08                 a5 = a5 + 0x8
  5863: 64 65                    s0 = s1
  5865: ac ab eb                 jump @362 if a4 <u a3
      :                          @363
  5868: 28 1c                    jump @369
      :                          @364
  5870: 64 7a                    a3 = a0
  5872: 52 09 21                 jump @370 if a2 != 0
      :                          @365
  5875: 28 2f                    jump @372
      :                          @366
  5877: 58 04 13                 jump @369 if t2 <=s 0
      :                          @367
  5880: 64 38                    a1 = t1
  5882: 01                       fallthrough
      :                          @368
  5883: 82 89                    a2 = u64 [a1]
  5885: 7b b9                    u64 [a4] = a2
  5887: 95 bb 08                 a4 = a4 + 0x8
  5890: 95 88 08                 a1 = a1 + 0x8
  5893: ac ab f6                 jump @368 if a4 <u a3
      :                          @369
  5896: c8 43 08                 a1 = t1 + t2
  5899: 84 29 07                 a2 = t0 & 0x7
  5902: 51 09 14                 jump @372 if a2 == 0
      :                          @370
  5905: c8 a9 09                 a2 = a2 + a3
  5908: 01                       fallthrough
      :                          @371
  5909: 7c 8b                    a4 = u8 [a1]
  5911: 78 ab                    u8 [a3] = a4
  5913: 95 aa 01                 a3 = a3 + 0x1
  5916: 95 88 01                 a1 = a1 + 0x1
  5919: ac 9a f6                 jump @371 if a3 <u a2
      :                          @372
  5922: 82 10 18                 ra = u64 [sp + 0x18]
  5925: 82 15 10                 s0 = u64 [sp + 0x10]
  5928: 82 16 08                 s1 = u64 [sp + 0x8]
  5931: 95 11 20                 sp = sp + 0x20
  5934: 32 00                    ret
      :                          @373
  5936: 53 19 10 48              jump @382 if a2 <u 16
      :                          @374
  5940: 8d 7a                    i32 a3 = -a0
  5942: 84 aa 07                 a3 = a3 & 0x7
  5945: c8 a7 0b                 a4 = a0 + a3
  5948: 51 0a 0e                 jump @377 if a3 == 0
      :                          @375
  5951: 64 7c                    a5 = a0
  5953: 01                       fallthrough
      :                          @376
  5954: 78 c8                    u8 [a5] = a1
  5956: 95 cc 01                 a5 = a5 + 0x1
  5959: ac bc fb                 jump @376 if a5 <u a4
      :                          @377
  5962: c9 a9 03                 t1 = a2 - a3
  5965: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5968: c8 cb 0a                 a3 = a4 + a5
  5971: 58 0c 1d                 jump @380 if a5 <=s 0
      :                          @378
  5974: 84 82 ff 00              t0 = a1 & 0xff
  5978: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5988: ca 92 0c                 a5 = t0 * a2
  5991: 01                       fallthrough
      :                          @379
  5992: 7b bc                    u64 [a4] = a5
  5994: 95 bb 08                 a4 = a4 + 0x8
  5997: ac ab fb                 jump @379 if a4 <u a3
      :                          @380
  6000: 84 39 07                 a2 = t1 & 0x7
  6003: 52 09 0a                 jump @383 if a2 != 0
      :                          @381
  6006: 28 13                    jump @385
      :                          @382
  6008: 64 7a                    a3 = a0
  6010: 51 09 0f                 jump @385 if a2 == 0
      :                          @383
  6013: c8 a9 09                 a2 = a2 + a3
  6016: 01                       fallthrough
      :                          @384
  6017: 78 a8                    u8 [a3] = a1
  6019: 95 aa 01                 a3 = a3 + 0x1
  6022: ac 9a fb                 jump @384 if a3 <u a2
      :                          @385
  6025: 32 00                    ret
      :                          @386 [@dyn 60]
  6027: 82 77                    a0 = u64 [a0]
  6029: 01                       fallthrough
      :                          @387
  6030: 28                       jump @387
      :                          @388
  6031: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  6034: 7b 10 50                 u64 [sp + 0x50] = ra
  6037: 7b 15 48                 u64 [sp + 0x48] = s0
  6040: 7b 16 40                 u64 [sp + 0x40] = s1
  6043: 82 79                    a2 = u64 [a0]
  6045: 7b 18                    u64 [sp] = a1
  6047: 98 9a 04                 a3 = a2 >> 0x4
  6050: 33 08 27                 a1 = 0x27
  6053: 53 2a 71 02 84 00        jump @391 if a3 <u 625
      :                          @389
  6059: 33 08 27                 a1 = 0x27
  6062: 95 1a 3e                 a3 = sp + 0x3e
  6065: 3a 07 00 00 03           a0 = u64 [0x30000]
  6070: 7b 17 10                 u64 [sp + 0x10] = a0
  6073: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  6079: 33 00 7b 14              ra = 0x147b
  6083: 33 0c fa 03 01           a5 = 0x103fa
  6088: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  6094: 33 05 9c                 s0 = 0xffffffffffffff9c
  6097: 01                       fallthrough
      :                          @390
  6098: 64 93                    t1 = a2
  6100: 82 17 10                 a0 = u64 [sp + 0x10]
  6103: d6 79 09                 a2 = a2 mulhu a0
  6106: 98 99 0b                 a2 = a2 >> 0xb
  6109: 82 17 08                 a0 = u64 [sp + 0x8]
  6112: c0 79 0b                 i32 a4 = a2 * a0
  6115: c8 3b 06                 s1 = a4 + t1
  6118: 97 6b 30                 a4 = s1 << 0x30
  6121: 98 bb 32                 a4 = a4 >> 0x32
  6124: ca 0b 0b                 a4 = a4 * ra
  6127: 98 b7 11                 a0 = a4 >> 0x11
  6130: 98 bb 10                 a4 = a4 >> 0x10
  6133: 84 bb fe 07              a4 = a4 & 0x7fe
  6137: ca 57 07                 a0 = a0 * s0
  6140: c8 67 07                 a0 = a0 + s1
  6143: 97 77 31                 a0 = a0 << 0x31
  6146: 98 77 30                 a0 = a0 >> 0x30
  6149: c8 cb 0b                 a4 = a4 + a5
  6152: 7c b6                    s1 = u8 [a4]
  6154: 7c bb 01                 a4 = u8 [a4 + 0x1]
  6157: c8 c7 07                 a0 = a0 + a5
  6160: 7c 72 01                 t0 = u8 [a0 + 0x1]
  6163: 7c 77                    a0 = u8 [a0]
  6165: 78 ab ff                 u8 [a3 + 0xffffffffffffffff] = a4
  6168: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  6171: 78 a2 01                 u8 [a3 + 0x1] = t0
  6174: 78 a7                    u8 [a3] = a0
  6176: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  6179: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  6182: ac 34 ac                 jump @390 if t2 <u t1
      :                          @391
  6185: 54 19 63 3b              jump @393 if a2 <=u 99
      :                          @392
  6189: 97 97 30                 a0 = a2 << 0x30
  6192: 98 77 32                 a0 = a0 >> 0x32
  6195: 96 77 7b 14              a0 = a0 * 0x147b
  6199: 98 77 11                 a0 = a0 >> 0x11
  6202: 96 7a 9c                 a3 = a0 * 0xffffffffffffff9c
  6205: c8 a9 09                 a2 = a2 + a3
  6208: 97 99 31                 a2 = a2 << 0x31
  6211: 98 99 30                 a2 = a2 >> 0x30
  6214: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6217: 33 0a fa 03 01           a3 = 0x103fa
  6222: c8 a9 09                 a2 = a2 + a3
  6225: 7c 9a 01                 a3 = u8 [a2 + 0x1]
  6228: 7c 99                    a2 = u8 [a2]
  6230: 95 1b 19                 a4 = sp + 0x19
  6233: c8 8b 0b                 a4 = a4 + a1
  6236: 78 ba 01                 u8 [a4 + 0x1] = a3
  6239: 78 b9                    u8 [a4] = a2
  6241: 64 79                    a2 = a0
  6243: 01                       fallthrough
      :                          @393
  6244: 55 19 0a 14              jump @395 if a2 >=u 10
      :                          @394
  6248: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6251: 95 17 19                 a0 = sp + 0x19
  6254: c8 87 07                 a0 = a0 + a1
  6257: 83 99 30                 i32 a2 = a2 + 0x30
  6260: 78 79                    u8 [a0] = a2
  6262: 28 21                    jump @396
      :                          @395
  6264: 97 99 01                 a2 = a2 << 0x1
  6267: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  6270: 33 07 fa 03 01           a0 = 0x103fa
  6275: c8 97 07                 a0 = a0 + a2
  6278: 7c 79 01                 a2 = u8 [a0 + 0x1]
  6281: 7c 77                    a0 = u8 [a0]
  6283: 95 1a 19                 a3 = sp + 0x19
  6286: c8 8a 0a                 a3 = a3 + a1
  6289: 78 a9 01                 u8 [a3 + 0x1] = a2
  6292: 78 a7                    u8 [a3] = a0
  6294: 01                       fallthrough
      :                          @396
  6295: 95 1a 19                 a3 = sp + 0x19
  6298: c8 8a 0a                 a3 = a3 + a1
  6301: 9a 8b 27                 a4 = 0x27 - a1
  6304: 33 08 f8 03 01           a1 = 0x103f8
  6309: 82 17                    a0 = u64 [sp]
  6311: 33 09                    a2 = 0
  6313: 50 10 7a 12              ra = 122, jump @398
      :                          @397 [@dyn 61]
  6317: 82 10 50                 ra = u64 [sp + 0x50]
  6320: 82 15 48                 s0 = u64 [sp + 0x48]
  6323: 82 16 40                 s1 = u64 [sp + 0x40]
  6326: 95 11 58                 sp = sp + 0x58
  6329: 32 00                    ret
      :                          @398
  6331: 95 11 98                 sp = sp + 0xffffffffffffff98
  6334: 7b 10 60                 u64 [sp + 0x60] = ra
  6337: 7b 15 58                 u64 [sp + 0x58] = s0
  6340: 7b 16 50                 u64 [sp + 0x50] = s1
  6343: 80 73 34                 t1 = u32 [a0 + 0x34]
  6346: 7b 1a 20                 u64 [sp + 0x20] = a3
  6349: 64 9c                    a5 = a2
  6351: 84 36 01                 s1 = t1 & 0x1
  6354: 33 02 2b                 t0 = 0x2b
  6357: 33 09 00 00 11           a2 = 0x110000
  6362: 84 3a 04                 a3 = t1 & 0x4
  6365: 7b 1b 28                 u64 [sp + 0x28] = a4
  6368: c8 b6 04                 t2 = s1 + a4
  6371: 7b 1c 30                 u64 [sp + 0x30] = a5
  6374: 52 0a 10                 jump @401 if a3 != 0
      :                          @399
  6377: 49 11 38                 u64 [sp + 56] = 0
  6380: 82 78                    a1 = u64 [a0]
  6382: 94 69 2b                 a2 = 0x2b if s1 != 0
  6385: 52 08 35                 jump @405 if a1 != 0
      :                          @400
  6388: 28 56                    jump @410
      :                          @401
  6390: 7b 18 38                 u64 [sp + 0x38] = a1
  6393: 33 09                    a2 = 0
  6395: 51 0c 1b                 jump @404 if a5 == 0
      :                          @402
  6398: 82 1b 38                 a4 = u64 [sp + 0x38]
  6401: 01                       fallthrough
      :                          @403
  6402: 7d b5                    s0 = i8 [a4]
  6404: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  6407: 85 5a 01                 a3 = s0 ^ 0x1
  6410: c8 a9 09                 a2 = a2 + a3
  6413: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  6416: 95 bb 01                 a4 = a4 + 0x1
  6419: 52 0c ef                 jump @403 if a5 != 0
      :                          @404
  6422: c8 94 04                 t2 = t2 + a2
  6425: 33 09 00 00 11           a2 = 0x110000
  6430: 82 78                    a1 = u64 [a0]
  6432: db 62 09                 a2 = t0 if s1 != 0
  6435: 51 08 27                 jump @410 if a1 == 0
      :                          @405
  6438: 82 7a 08                 a3 = u64 [a0 + 0x8]
  6441: ae a4 21                 jump @410 if t2 >=u a3
      :                          @406
  6444: 84 38 08                 a1 = t1 & 0x8
  6447: 52 08 50                 jump @413 if a1 != 0
      :                          @407
  6450: 7c 76 38                 s1 = u8 [a0 + 0x38]
  6453: c9 4a 0a                 a3 = a3 - t2
  6456: 7b 19 18                 u64 [sp + 0x18] = a2
  6459: 5a 16 01 9e 00           jump @420 if s1 >s 1
      :                          @408
  6464: 52 06 ab 00              jump @422 if s1 != 0
      :                          @409
  6468: 7b 1a 10                 u64 [sp + 0x10] = a3
  6471: 28 aa 00                 jump @423
      :                          @410
  6474: 82 75 20                 s0 = u64 [a0 + 0x20]
  6477: 82 76 28                 s1 = u64 [a0 + 0x28]
  6480: 64 57                    a0 = s0
  6482: 64 68                    a1 = s1
  6484: 82 1a 38                 a3 = u64 [sp + 0x38]
  6487: 82 1b 30                 a4 = u64 [sp + 0x30]
  6490: 50 10 7c 73 01           ra = 124, jump @443
      :                          @411 [@dyn 62]
  6495: 33 08 01                 a1 = 0x1
  6498: 52 07 bd 00              jump @428 if a0 != 0
      :                          @412
  6502: 82 6c 18                 a5 = u64 [s1 + 0x18]
  6505: 64 57                    a0 = s0
  6507: 82 18 20                 a1 = u64 [sp + 0x20]
  6510: 82 19 28                 a2 = u64 [sp + 0x28]
  6513: 82 10 60                 ra = u64 [sp + 0x60]
  6516: 82 15 58                 s0 = u64 [sp + 0x58]
  6519: 82 16 50                 s1 = u64 [sp + 0x50]
  6522: 95 11 68                 sp = sp + 0x68
  6525: 32 0c                    jump [a5]
      :                          @413
  6527: 7b 1a 40                 u64 [sp + 0x40] = a3
  6530: 64 45                    s0 = t2
  6532: 81 78 30                 a1 = i32 [a0 + 0x30]
  6535: 7b 18 10                 u64 [sp + 0x10] = a1
  6538: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  6541: 7b 1a 08                 u64 [sp + 0x8] = a3
  6544: 82 7a 20                 a3 = u64 [a0 + 0x20]
  6547: 82 78 28                 a1 = u64 [a0 + 0x28]
  6550: 48 17 30 30              u32 [a0 + 48] = 0x30
  6554: 7b 17                    u64 [sp] = a0
  6556: 46 17 38 01              u8 [a0 + 56] = 0x1
  6560: 7b 1a 48                 u64 [sp + 0x48] = a3
  6563: 64 a7                    a0 = a3
  6565: 64 86                    s1 = a1
  6567: 82 1a 38                 a3 = u64 [sp + 0x38]
  6570: 82 1b 30                 a4 = u64 [sp + 0x30]
  6573: 50 10 7e 20 01           ra = 126, jump @443
      :                          @414 [@dyn 63]
  6578: 52 07 69                 jump @427 if a0 != 0
      :                          @415
  6581: 82 17 40                 a0 = u64 [sp + 0x40]
  6584: c9 57 05                 s0 = a0 - s0
  6587: 95 55 01                 s0 = s0 + 0x1
  6590: 01                       fallthrough
      :                          @416
  6591: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6594: 51 05 cb 00              jump @438 if s0 == 0
      :                          @417
  6598: 82 69 20                 a2 = u64 [s1 + 0x20]
  6601: 33 08 30                 a1 = 0x30
  6604: 82 17 48                 a0 = u64 [sp + 0x48]
  6607: b4 90 02 80 00           ra = 128, jump [a2]
      :                          @418 [@dyn 64]
  6612: 51 07 eb                 jump @416 if a0 == 0
      :                          @419
  6615: 28 44                    jump @427
      :                          @420
  6617: 52 16 02 12              jump @422 if s1 != 2
      :                          @421
  6621: 98 a6 01                 s1 = a3 >> 0x1
  6624: 95 a8 01                 a1 = a3 + 0x1
  6627: 98 88 01                 a1 = a1 >> 0x1
  6630: 7b 18 10                 u64 [sp + 0x10] = a1
  6633: 28 08                    jump @423
      :                          @422
  6635: 64 a6                    s1 = a3
  6637: 49 11 10                 u64 [sp + 16] = 0
  6640: 01                       fallthrough
      :                          @423
  6641: 82 78 20                 a1 = u64 [a0 + 0x20]
  6644: 7b 18 48                 u64 [sp + 0x48] = a1
  6647: 82 75 28                 s0 = u64 [a0 + 0x28]
  6650: 81 77 30                 a0 = i32 [a0 + 0x30]
  6653: 7b 17 40                 u64 [sp + 0x40] = a0
  6656: 95 66 01                 s1 = s1 + 0x1
  6659: 01                       fallthrough
      :                          @424
  6660: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6663: 51 06 28                 jump @429 if s1 == 0
      :                          @425
  6666: 82 59 20                 a2 = u64 [s0 + 0x20]
  6669: 82 17 48                 a0 = u64 [sp + 0x48]
  6672: 82 18 40                 a1 = u64 [sp + 0x40]
  6675: b4 90 02 82 00           ra = 130, jump [a2]
      :                          @426 [@dyn 65]
  6680: 51 07 ec                 jump @424 if a0 == 0
      :                          @427
  6683: 33 08 01                 a1 = 0x1
  6686: 01                       fallthrough
      :                          @428
  6687: 64 87                    a0 = a1
  6689: 82 10 60                 ra = u64 [sp + 0x60]
  6692: 82 15 58                 s0 = u64 [sp + 0x58]
  6695: 82 16 50                 s1 = u64 [sp + 0x50]
  6698: 95 11 68                 sp = sp + 0x68
  6701: 32 00                    ret
      :                          @429
  6703: 82 16 48                 s1 = u64 [sp + 0x48]
  6706: 64 67                    a0 = s1
  6708: 64 58                    a1 = s0
  6710: 82 19 18                 a2 = u64 [sp + 0x18]
  6713: 82 1a 38                 a3 = u64 [sp + 0x38]
  6716: 82 1b 30                 a4 = u64 [sp + 0x30]
  6719: 50 20 84 00 8e 00        ra = 132, jump @443
      :                          @430 [@dyn 66]
  6725: 33 08 01                 a1 = 0x1
  6728: 52 07 d7                 jump @428 if a0 != 0
      :                          @431
  6731: 82 5a 18                 a3 = u64 [s0 + 0x18]
  6734: 64 67                    a0 = s1
  6736: 82 18 20                 a1 = u64 [sp + 0x20]
  6739: 82 19 28                 a2 = u64 [sp + 0x28]
  6742: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @432 [@dyn 67]
  6747: 33 08 01                 a1 = 0x1
  6750: 52 07 c1                 jump @428 if a0 != 0
      :                          @433
  6753: 82 17 10                 a0 = u64 [sp + 0x10]
  6756: 9a 77                    a0 = -a0
  6758: 7b 17 38                 u64 [sp + 0x38] = a0
  6761: 33 06 ff                 s1 = 0xffffffffffffffff
  6764: 01                       fallthrough
      :                          @434
  6765: 82 17 38                 a0 = u64 [sp + 0x38]
  6768: c8 67 07                 a0 = a0 + s1
  6771: 51 17 ff 45              jump @441 if a0 == 4294967295
      :                          @435
  6775: 82 59 20                 a2 = u64 [s0 + 0x20]
  6778: 82 17 48                 a0 = u64 [sp + 0x48]
  6781: 82 18 40                 a1 = u64 [sp + 0x40]
  6784: b4 90 02 88 00           ra = 136, jump [a2]
      :                          @436 [@dyn 68]
  6789: 95 66 01                 s1 = s1 + 0x1
  6792: 51 07 e5                 jump @434 if a0 == 0
      :                          @437
  6795: 28 39                    jump @442
      :                          @438
  6797: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6800: 82 17 48                 a0 = u64 [sp + 0x48]
  6803: 82 18 20                 a1 = u64 [sp + 0x20]
  6806: 82 19 28                 a2 = u64 [sp + 0x28]
  6809: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @439 [@dyn 69]
  6814: 33 08 01                 a1 = 0x1
  6817: 52 07 7e ff              jump @428 if a0 != 0
      :                          @440
  6821: 33 08                    a1 = 0
  6823: 82 16                    s1 = u64 [sp]
  6825: 82 17 10                 a0 = u64 [sp + 0x10]
  6828: 7a 67 30                 u32 [s1 + 0x30] = a0
  6831: 82 17 08                 a0 = u64 [sp + 0x8]
  6834: 78 67 38                 u8 [s1 + 0x38] = a0
  6837: 28 6a ff                 jump @428
      :                          @441
  6840: 82 16 10                 s1 = u64 [sp + 0x10]
  6843: 82 17 10                 a0 = u64 [sp + 0x10]
  6846: d8 76 08                 a1 = s1 <u a0
  6849: 28 5e ff                 jump @428
      :                          @442
  6852: 82 17 10                 a0 = u64 [sp + 0x10]
  6855: d8 76 08                 a1 = s1 <u a0
  6858: 28 55 ff                 jump @428
      :                          @443
  6861: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6864: 7b 10 20                 u64 [sp + 0x20] = ra
  6867: 7b 15 18                 u64 [sp + 0x18] = s0
  6870: 7b 16 10                 u64 [sp + 0x10] = s1
  6873: 83 9c                    i32 a5 = a2 + 0
  6875: 33 02 00 00 11           t0 = 0x110000
  6880: 64 a6                    s1 = a3
  6882: 64 85                    s0 = a1
  6884: 64 7a                    a3 = a0
  6886: aa 2c 21                 jump @446 if a5 == t0
      :                          @444
  6889: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6892: 64 a7                    a0 = a3
  6894: 64 98                    a1 = a2
  6896: 7b 1b 08                 u64 [sp + 0x8] = a4
  6899: 7b 1a                    u64 [sp] = a3
  6901: b4 c0 02 8c 00           ra = 140, jump [a5]
      :                          @445 [@dyn 70]
  6906: 82 1a                    a3 = u64 [sp]
  6908: 82 1b 08                 a4 = u64 [sp + 0x8]
  6911: 64 78                    a1 = a0
  6913: 33 07 01                 a0 = 0x1
  6916: 52 08 20                 jump @449 if a1 != 0
      :                          @446
  6919: 51 06 1a                 jump @448 if s1 == 0
      :                          @447
  6922: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6925: 64 a7                    a0 = a3
  6927: 64 68                    a1 = s1
  6929: 64 b9                    a2 = a4
  6931: 82 10 20                 ra = u64 [sp + 0x20]
  6934: 82 15 18                 s0 = u64 [sp + 0x18]
  6937: 82 16 10                 s1 = u64 [sp + 0x10]
  6940: 95 11 28                 sp = sp + 0x28
  6943: 32 0c                    jump [a5]
      :                          @448
  6945: 33 07                    a0 = 0
  6947: 01                       fallthrough
      :                          @449
  6948: 82 10 20                 ra = u64 [sp + 0x20]
  6951: 82 15 18                 s0 = u64 [sp + 0x18]
  6954: 82 16 10                 s1 = u64 [sp + 0x10]
  6957: 95 11 28                 sp = sp + 0x28
  6960: 32 00                    ret
      :                          @450
  6962: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6966: 7b 10 80 00              u64 [sp + 0x80] = ra
  6970: 7b 15 78                 u64 [sp + 0x78] = s0
  6973: 7b 16 70                 u64 [sp + 0x70] = s1
  6976: 49 11 60 20              u64 [sp + 96] = 0x20
  6980: 33 09 03                 a2 = 0x3
  6983: 78 19 68                 u8 [sp + 0x68] = a2
  6986: 49 11 30                 u64 [sp + 48] = 0
  6989: 49 11 40                 u64 [sp + 64] = 0
  6992: 82 86 20                 s1 = u64 [a1 + 0x20]
  6995: 7b 17 50                 u64 [sp + 0x50] = a0
  6998: 33 07 c8 03 01           a0 = 0x103c8
  7003: 7b 17 58                 u64 [sp + 0x58] = a0
  7006: 51 06 08 01              jump @472 if s1 == 0
      :                          @451
  7010: 82 87 28                 a0 = u64 [a1 + 0x28]
  7013: 51 07 77 01              jump @482 if a0 == 0
      :                          @452
  7017: 33 09                    a2 = 0
  7019: 82 85                    s0 = u64 [a1]
  7021: 7b 18 08                 u64 [sp + 0x8] = a1
  7024: 82 88 10                 a1 = u64 [a1 + 0x10]
  7027: 7b 18 18                 u64 [sp + 0x18] = a1
  7030: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  7033: 97 88 03                 a1 = a1 << 0x3
  7036: 98 88 03                 a1 = a1 >> 0x3
  7039: 95 88 01                 a1 = a1 + 0x1
  7042: 7b 18                    u64 [sp] = a1
  7044: 95 55 08                 s0 = s0 + 0x8
  7047: 96 78 38                 a1 = a0 * 0x38
  7050: 95 66 18                 s1 = s1 + 0x18
  7053: 33 07 78                 a0 = 0x78
  7056: 7b 17 10                 u64 [sp + 0x10] = a0
  7059: 01                       fallthrough
      :                          @453
  7060: 7b 18 20                 u64 [sp + 0x20] = a1
  7063: 7b 19 28                 u64 [sp + 0x28] = a2
  7066: 82 59                    a2 = u64 [s0]
  7068: 51 09 18                 jump @456 if a2 == 0
      :                          @454
  7071: 82 1a 58                 a3 = u64 [sp + 0x58]
  7074: 82 17 50                 a0 = u64 [sp + 0x50]
  7077: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  7080: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7083: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @455 [@dyn 71]
  7088: 52 07 52 01              jump @485 if a0 != 0
      :                          @456
  7092: 81 67 10                 a0 = i32 [s1 + 0x10]
  7095: 7a 17 60                 u32 [sp + 0x60] = a0
  7098: 7c 67 18                 a0 = u8 [s1 + 0x18]
  7101: 78 17 68                 u8 [sp + 0x68] = a0
  7104: 81 67 14                 a0 = i32 [s1 + 0x14]
  7107: 7a 17 64                 u32 [sp + 0x64] = a0
  7110: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7113: 82 67                    a0 = u64 [s1]
  7115: 51 08 26                 jump @461 if a1 == 0
      :                          @457
  7118: 52 18 01 16              jump @459 if a1 != 1
      :                          @458
  7122: 97 77 04                 a0 = a0 << 0x4
  7125: 82 18 18                 a1 = u64 [sp + 0x18]
  7128: c8 87 07                 a0 = a0 + a1
  7131: 82 78 08                 a1 = u64 [a0 + 0x8]
  7134: 82 19 10                 a2 = u64 [sp + 0x10]
  7137: aa 98 07                 jump @460 if a1 == a2
      :                          @459
  7140: 33 08                    a1 = 0
  7142: 28 0f                    jump @462
      :                          @460
  7144: 82 77                    a0 = u64 [a0]
  7146: 82 77                    a0 = u64 [a0]
  7148: 33 08 01                 a1 = 0x1
  7151: 28 06                    jump @462
      :                          @461
  7153: 33 08 01                 a1 = 0x1
  7156: 01                       fallthrough
      :                          @462
  7157: 7b 18 30                 u64 [sp + 0x30] = a1
  7160: 7b 17 38                 u64 [sp + 0x38] = a0
  7163: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  7166: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  7169: 51 08 26                 jump @467 if a1 == 0
      :                          @463
  7172: 52 18 01 16              jump @465 if a1 != 1
      :                          @464
  7176: 97 77 04                 a0 = a0 << 0x4
  7179: 82 18 18                 a1 = u64 [sp + 0x18]
  7182: c8 87 07                 a0 = a0 + a1
  7185: 82 78 08                 a1 = u64 [a0 + 0x8]
  7188: 82 19 10                 a2 = u64 [sp + 0x10]
  7191: aa 98 07                 jump @466 if a1 == a2
      :                          @465
  7194: 33 08                    a1 = 0
  7196: 28 0f                    jump @468
      :                          @466
  7198: 82 77                    a0 = u64 [a0]
  7200: 82 77                    a0 = u64 [a0]
  7202: 33 08 01                 a1 = 0x1
  7205: 28 06                    jump @468
      :                          @467
  7207: 33 08 01                 a1 = 0x1
  7210: 01                       fallthrough
      :                          @468
  7211: 7b 18 40                 u64 [sp + 0x40] = a1
  7214: 7b 17 48                 u64 [sp + 0x48] = a0
  7217: 82 67 08                 a0 = u64 [s1 + 0x8]
  7220: 97 77 04                 a0 = a0 << 0x4
  7223: 82 18 18                 a1 = u64 [sp + 0x18]
  7226: c8 78 08                 a1 = a1 + a0
  7229: 82 87                    a0 = u64 [a1]
  7231: 82 89 08                 a2 = u64 [a1 + 0x8]
  7234: 95 18 30                 a1 = sp + 0x30
  7237: b4 90 02 90 00           ra = 144, jump [a2]
      :                          @469 [@dyn 72]
  7242: 52 07 b8 00              jump @485 if a0 != 0
      :                          @470
  7246: 95 55 10                 s0 = s0 + 0x10
  7249: 82 18 20                 a1 = u64 [sp + 0x20]
  7252: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  7255: 95 66 38                 s1 = s1 + 0x38
  7258: 82 19 28                 a2 = u64 [sp + 0x28]
  7261: 95 99 01                 a2 = a2 + 0x1
  7264: 52 08 34 ff              jump @453 if a1 != 0
      :                          @471
  7268: 28 6b                    jump @480
      :                          @472
  7270: 82 87 18                 a0 = u64 [a1 + 0x18]
  7273: 51 07 73                 jump @482 if a0 == 0
      :                          @473
  7276: 82 85 10                 s0 = u64 [a1 + 0x10]
  7279: 33 0a                    a3 = 0
  7281: 97 79 04                 a2 = a0 << 0x4
  7284: c8 59 09                 a2 = a2 + s0
  7287: 7b 19 20                 u64 [sp + 0x20] = a2
  7290: 7b 18 08                 u64 [sp + 0x8] = a1
  7293: 82 86                    s1 = u64 [a1]
  7295: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7298: 97 77 04                 a0 = a0 << 0x4
  7301: 98 77 04                 a0 = a0 >> 0x4
  7304: 95 77 01                 a0 = a0 + 0x1
  7307: 7b 17                    u64 [sp] = a0
  7309: 95 66 08                 s1 = s1 + 0x8
  7312: 01                       fallthrough
      :                          @474
  7313: 7b 1a 28                 u64 [sp + 0x28] = a3
  7316: 82 69                    a2 = u64 [s1]
  7318: 51 09 17                 jump @477 if a2 == 0
      :                          @475
  7321: 82 1a 58                 a3 = u64 [sp + 0x58]
  7324: 82 17 50                 a0 = u64 [sp + 0x50]
  7327: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  7330: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7333: b4 a0 02 92 00           ra = 146, jump [a3]
      :                          @476 [@dyn 73]
  7338: 52 07 58                 jump @485 if a0 != 0
      :                          @477
  7341: 82 57                    a0 = u64 [s0]
  7343: 82 59 08                 a2 = u64 [s0 + 0x8]
  7346: 95 18 30                 a1 = sp + 0x30
  7349: b4 90 02 94 00           ra = 148, jump [a2]
      :                          @478 [@dyn 74]
  7354: 52 07 48                 jump @485 if a0 != 0
      :                          @479
  7357: 95 66 10                 s1 = s1 + 0x10
  7360: 95 55 10                 s0 = s0 + 0x10
  7363: 82 1a 28                 a3 = u64 [sp + 0x28]
  7366: 95 aa 01                 a3 = a3 + 0x1
  7369: 82 17 20                 a0 = u64 [sp + 0x20]
  7372: ab 75 c5                 jump @474 if s0 != a0
      :                          @480
  7375: 82 18 08                 a1 = u64 [sp + 0x8]
  7378: 82 1a                    a3 = u64 [sp]
  7380: 82 87 08                 a0 = u64 [a1 + 0x8]
  7383: ac 7a 0d                 jump @483 if a3 <u a0
      :                          @481
  7386: 28 2d                    jump @486
      :                          @482
  7388: 33 0a                    a3 = 0
  7390: 82 87 08                 a0 = u64 [a1 + 0x8]
  7393: 54 07 26                 jump @486 if a0 <=u 0
      :                          @483
  7396: 82 87                    a0 = u64 [a1]
  7398: 97 a8 04                 a1 = a3 << 0x4
  7401: c8 87 09                 a2 = a0 + a1
  7404: 82 1a 58                 a3 = u64 [sp + 0x58]
  7407: 82 17 50                 a0 = u64 [sp + 0x50]
  7410: 82 98                    a1 = u64 [a2]
  7412: 82 99 08                 a2 = u64 [a2 + 0x8]
  7415: 82 aa 18                 a3 = u64 [a3 + 0x18]
  7418: b4 a0 02 96 00           ra = 150, jump [a3]
      :                          @484 [@dyn 75]
  7423: 51 07 08                 jump @486 if a0 == 0
      :                          @485
  7426: 33 07 01                 a0 = 0x1
  7429: 28 05                    jump @487
      :                          @486
  7431: 33 07                    a0 = 0
  7433: 01                       fallthrough
      :                          @487
  7434: 82 10 80 00              ra = u64 [sp + 0x80]
  7438: 82 15 78                 s0 = u64 [sp + 0x78]
  7441: 82 16 70                 s1 = u64 [sp + 0x70]
  7444: 95 11 88 00              sp = sp + 0x88
  7448: 32 00                    ret
      :                          @488
  7450: 51 08 9b 00              jump @509 if a1 == 0
      :                          @489
  7454: 64 79                    a2 = a0
  7456: 7c 77                    a0 = u8 [a0]
  7458: 51 07 91 00              jump @508 if a0 == 0
      :                          @490
  7462: 51 27 ff 00 90 00        jump @510 if a0 == 255
      :                          @491
  7468: 6c 7a                    a3 = sext.b a0
  7470: 57 0a 09                 jump @493 if a3 <s 0
      :                          @492
  7473: 33 0a                    a3 = 0
  7475: 33 08                    a1 = 0
  7477: 28 73                    jump @507
      :                          @493
  7479: 55 27 c0 00 0d           jump @495 if a0 >=u 192
      :                          @494
  7484: 33 0a 01                 a3 = 0x1
  7487: 33 0b 80                 a4 = 0xffffffffffffff80
  7490: 28 4a                    jump @504
      :                          @495
  7492: 55 27 e0 00 0e           jump @497 if a0 >=u 224
      :                          @496
  7497: 33 0a 02                 a3 = 0x2
  7500: 33 0b 40 ff              a4 = 0xffffffffffffff40
  7504: 28 3c                    jump @504
      :                          @497
  7506: 55 27 f0 00 0e           jump @499 if a0 >=u 240
      :                          @498
  7511: 33 0a 03                 a3 = 0x3
  7514: 33 0b 20 ff              a4 = 0xffffffffffffff20
  7518: 28 2e                    jump @504
      :                          @499
  7520: 55 27 f8 00 0e           jump @501 if a0 >=u 248
      :                          @500
  7525: 33 0a 04                 a3 = 0x4
  7528: 33 0b 10 ff              a4 = 0xffffffffffffff10
  7532: 28 20                    jump @504
      :                          @501
  7534: 55 27 fc 00 0e           jump @503 if a0 >=u 252
      :                          @502
  7539: 33 0a 05                 a3 = 0x5
  7542: 33 0b 08 ff              a4 = 0xffffffffffffff08
  7546: 28 12                    jump @504
      :                          @503
  7548: 88 7a fe 00              a3 = a0 <u 0xfe
  7552: 33 0b 04 ff              a4 = 0xffffffffffffff04
  7556: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  7560: 85 aa 07                 a3 = a3 ^ 0x7
  7563: 01                       fallthrough
      :                          @504
  7564: ae 8a 2b                 jump @511 if a3 >=u a1
      :                          @505
  7567: 33 08                    a1 = 0
  7569: c8 b7 07                 a0 = a0 + a4
  7572: 64 ab                    a4 = a3
  7574: 01                       fallthrough
      :                          @506
  7575: c8 b9 0c                 a5 = a2 + a4
  7578: 7c cc                    a5 = u8 [a5]
  7580: 97 88 08                 a1 = a1 << 0x8
  7583: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  7586: d4 c8 08                 a1 = a1 | a5
  7589: 52 0b f2                 jump @506 if a4 != 0
      :                          @507
  7592: 8a a9 03                 i32 a2 = a3 << 0x3
  7595: cf 97 07                 a0 = a0 << a2
  7598: c8 87 07                 a0 = a0 + a1
  7601: 32 00                    ret
      :                          @508
  7603: 32 00                    ret
      :                          @509
  7605: 00                       trap
      :                          @510
  7606: 00                       trap
      :                          @511
  7607: 00                       trap
