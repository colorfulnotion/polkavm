// RO data = 570/572 bytes
// RW data = 8/4128 bytes
// Stack size = 409600 bytes
// RO data = [70, 105, 110, 105, 115, 104, 32, 103, 108, 105, 100, 101, 114, 32, 105, 110, 105, 116, 44, 32, 112, 108, 97, 99, 101, 100, 32, 0, 0, 0, 0, 0, 83, 116, 101, 112, 95, 110, 58, 32, 9, 0, 0, 0, 0, 0, 0, 0, 32, 103, 108, 105, 100, 101, 114, 115, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 44, 32, 116, 111, 116, 97, 108, 95, 115, 116, 101, 112, 115, 58, 32, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 99, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 44, 32, 70, 101, 116, 99, 104, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 168, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 178, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 101, 120, 112, 111, 114, 116, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 44, 32, 100, 111, 110, 101, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 240, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 251, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 2259
// Code size = 6751 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 f3 0e 00 00           jump @230
      :                          @2
    10: 28 f7 0e                 jump @231
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 71 14                 jump @369
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 70 01 01           a2 = 0x10170
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 1f 15           ra = 4, jump @379
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 ba 13                 jump @369
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 70 01 01           a2 = 0x10170
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 68 14           ra = 8, jump @379
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 03 13                 jump @369
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 70 01 01           a2 = 0x10170
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c b1 13           ra = 12, jump @379
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   579: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   583: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   587: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   591: 95 11 88 c3 fd           sp = sp + 0xfffffffffffdc388
   596: 53 18 04 7c 0c           jump @222 if a1 <u 4
      :                          @40
   601: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
   604: 51 08 74 0c              jump @222 if a1 == 0
      :                          @41
   608: 95 76 04                 s1 = a0 + 0x4
   611: 7d 6a                    a3 = i8 [s1]
   613: 84 ac ff 00              a5 = a3 & 0xff
   617: 33 09 01                 a2 = 0x1
   620: 59 0a 44                 jump @49 if a3 >=s 0
      :                          @42
   623: 33 0a c0 00              a3 = 0xc0
   627: 33 09 02                 a2 = 0x2
   630: ac ac 36                 jump @48 if a5 <u a3
      :                          @43
   633: 33 0a e0 00              a3 = 0xe0
   637: 33 09 03                 a2 = 0x3
   640: ac ac 2c                 jump @48 if a5 <u a3
      :                          @44
   643: 33 0a f0 00              a3 = 0xf0
   647: 33 09 04                 a2 = 0x4
   650: ac ac 22                 jump @48 if a5 <u a3
      :                          @45
   653: 33 0a f8 00              a3 = 0xf8
   657: 33 09 05                 a2 = 0x5
   660: ac ac 18                 jump @48 if a5 <u a3
      :                          @46
   663: 33 0a fc 00              a3 = 0xfc
   667: 33 09 06                 a2 = 0x6
   670: ac ac 0e                 jump @48 if a5 <u a3
      :                          @47
   673: 88 c9 fe 00              a2 = a5 <u 0xfe
   677: 33 0a 08                 a3 = 0x8
   680: c9 9a 09                 a2 = a3 - a2
   683: 01                       fallthrough
      :                          @48
   684: ac 98 4a 0c              jump @228 if a1 <u a2
      :                          @49
   688: 51 0c 91 00              jump @68 if a5 == 0
      :                          @50
   692: 51 2c ff 00 41 0c        jump @227 if a5 == 255
      :                          @51
   698: 6c ca                    a3 = sext.b a5
   700: 57 0a 09                 jump @53 if a3 <s 0
      :                          @52
   703: 33 05                    s0 = 0
   705: 33 0a                    a3 = 0
   707: 28 74                    jump @67
      :                          @53
   709: 55 2c c0 00 0d           jump @55 if a5 >=u 192
      :                          @54
   714: 33 05 01                 s0 = 0x1
   717: 33 07 80                 a0 = 0xffffffffffffff80
   720: 28 4a                    jump @64
      :                          @55
   722: 55 2c e0 00 0e           jump @57 if a5 >=u 224
      :                          @56
   727: 33 05 02                 s0 = 0x2
   730: 33 07 40 ff              a0 = 0xffffffffffffff40
   734: 28 3c                    jump @64
      :                          @57
   736: 55 2c f0 00 0e           jump @59 if a5 >=u 240
      :                          @58
   741: 33 05 03                 s0 = 0x3
   744: 33 07 20 ff              a0 = 0xffffffffffffff20
   748: 28 2e                    jump @64
      :                          @59
   750: 55 2c f8 00 0e           jump @61 if a5 >=u 248
      :                          @60
   755: 33 05 04                 s0 = 0x4
   758: 33 07 10 ff              a0 = 0xffffffffffffff10
   762: 28 20                    jump @64
      :                          @61
   764: 55 2c fc 00 0e           jump @63 if a5 >=u 252
      :                          @62
   769: 33 05 05                 s0 = 0x5
   772: 33 07 08 ff              a0 = 0xffffffffffffff08
   776: 28 12                    jump @64
      :                          @63
   778: 88 ca fe 00              a3 = a5 <u 0xfe
   782: 33 07 04 ff              a0 = 0xffffffffffffff04
   786: 93 a7 02 ff              a0 = 0xffffffffffffff02 if a3 == 0
   790: 85 a5 07                 s0 = a3 ^ 0x7
   793: 01                       fallthrough
      :                          @64
   794: ae 95 dd 0b              jump @229 if s0 >=u a2
      :                          @65
   798: 33 0a                    a3 = 0
   800: c8 7c 0c                 a5 = a5 + a0
   803: 64 5b                    a4 = s0
   805: 01                       fallthrough
      :                          @66
   806: c8 b6 07                 a0 = s1 + a4
   809: 7c 77                    a0 = u8 [a0]
   811: 97 aa 08                 a3 = a3 << 0x8
   814: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   817: d4 7a 0a                 a3 = a3 | a0
   820: 52 0b f2                 jump @66 if a4 != 0
      :                          @67
   823: 8a 57 03                 i32 a0 = s0 << 0x3
   826: cf 7c 0c                 a5 = a5 << a0
   829: c8 ac 0c                 a5 = a5 + a3
   832: 01                       fallthrough
      :                          @68
   833: e4 98 07                 a0 = maxu(a1, a2)
   836: c9 97 07                 a0 = a0 - a2
   839: d8 c7 08                 a1 = a0 <u a5
   842: e4 c7 07                 a0 = maxu(a0, a5)
   845: c9 c7 07                 a0 = a0 - a5
   848: 88 77 20                 a0 = a0 <u 0x20
   851: d4 87 07                 a0 = a0 | a1
   854: 52 07 7a 0b              jump @222 if a0 != 0
      :                          @69
   858: 95 15 3c 91 00           s0 = sp + 0x913c
   863: 49 11 08 ff ef           u64 [sp + 8] = 0xffffffffffffefff
   868: c8 96 06                 s1 = s1 + a2
   871: 95 17 3c 01              a0 = sp + 0x13c
   875: 33 09 00 90 00           a2 = 0x9000
   880: 33 08                    a1 = 0
   882: 50 10 0e e2 10           ra = 14, jump @354
      :                          @70 [@dyn 7]
   887: 81 67                    a0 = i32 [s1]
   889: 7a 57                    u32 [s0] = a0
   891: 81 67 04                 a0 = i32 [s1 + 0x4]
   894: 7a 57 04                 u32 [s0 + 0x4] = a0
   897: 81 67 08                 a0 = i32 [s1 + 0x8]
   900: 7a 57 08                 u32 [s0 + 0x8] = a0
   903: 7b 55 14                 u64 [s0 + 0x14] = s0
   906: 33 07 06                 a0 = 0x6
   909: 7b 57 1c                 u64 [s0 + 0x1c] = a0
   912: 95 18 40 91 00           a1 = sp + 0x9140
   917: 7b 58 24                 u64 [s0 + 0x24] = a1
   920: 7b 57 2c                 u64 [s0 + 0x2c] = a0
   923: 95 18 44 91 00           a1 = sp + 0x9144
   928: 7b 58 34                 u64 [s0 + 0x34] = a1
   931: 7b 57 3c                 u64 [s0 + 0x3c] = a0
   934: 33 07 78 00 01           a0 = 0x10078
   939: 95 19 58 b4 01           a2 = sp + 0x1b458
   944: 7b 97                    u64 [a2] = a0
   946: 49 19 08 03              u64 [a2 + 8] = 0x3
   950: 49 19 20                 u64 [a2 + 32] = 0
   953: 95 18 50 91 00           a1 = sp + 0x9150
   958: 7b 98 10                 u64 [a2 + 0x10] = a1
   961: 49 19 18 03              u64 [a2 + 24] = 0x3
   965: 95 17 58 24 01           a0 = sp + 0x12458
   970: 95 18 58 b4 01           a1 = sp + 0x1b458
   975: 50 10 10 72 0d           ra = 16, jump @287
      :                          @71 [@dyn 8]
   980: 95 17 58 24 01           a0 = sp + 0x12458
   985: 82 75 08                 s0 = u64 [a0 + 0x8]
   988: 82 7b 10                 a4 = u64 [a0 + 0x10]
   991: 82 76                    s1 = u64 [a0]
   993: 33 07 02                 a0 = 0x2
   996: 33 08                    a1 = 0
   998: 33 09                    a2 = 0
  1000: 64 5a                    a3 = s0
  1002: 33 00 12                 ra = 0x12
  1005: 0a 64                    ecalli 100 // 'log'
  1007: 01                       fallthrough
      :                          @72 [@dyn 9]
  1008: 82 17 08                 a0 = u64 [sp + 0x8]
  1011: c8 67 07                 a0 = a0 + s1
  1014: 53 27 00 f0 23           jump @78 if a0 <u 4294963200
      :                          @73
  1019: 33 07 10 00 03           a0 = 0x30010
  1024: 95 77 00 10              a0 = a0 + 0x1000
  1028: 01                       fallthrough
      :                          @74
  1029: 82 78                    a1 = u64 [a0]
  1031: c9 87 09                 a2 = a0 - a1
  1034: ab 59 0f                 jump @78 if a2 != s0
      :                          @75
  1037: c9 68 09                 a2 = a1 - s1
  1040: 01                       fallthrough
      :                          @76
  1041: 82 7a                    a3 = u64 [a0]
  1043: ab 8a f2                 jump @74 if a3 != a1
      :                          @77
  1046: 7b 79                    u64 [a0] = a2
  1048: 01                       fallthrough
      :                          @78
  1049: 95 16 3c 91 00           s1 = sp + 0x913c
  1054: 48 16 0c                 u32 [s1 + 12] = 0
  1057: 95 17 3c 01              a0 = sp + 0x13c
  1061: 33 09 00 10              a2 = 0x1000
  1065: 33 0a 06                 a3 = 0x6
  1068: 33 08                    a1 = 0
  1070: 33 0b                    a4 = 0
  1072: 33 0c                    a5 = 0
  1074: 0a 12                    ecalli 18 // 'fetch'
  1076: 01                       fallthrough
      :                          @79
  1077: 95 18 3c 01              a1 = sp + 0x13c
  1081: 33 05 ff                 s0 = 0xffffffffffffffff
  1084: 33 09 00 10              a2 = 0x1000
  1088: aa 57 49 01              jump @97 if a0 == s0
      :                          @80
  1092: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1095: 83 77 01                 i32 a0 = a0 + 0x1
  1098: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1101: 95 87 00 10              a0 = a1 + 0x1000
  1105: 33 0a 06                 a3 = 0x6
  1108: 33 0b 01                 a4 = 0x1
  1111: 33 08                    a1 = 0
  1113: 33 0c                    a5 = 0
  1115: 0a 12                    ecalli 18 // 'fetch'
  1117: 01                       fallthrough
      :                          @81
  1118: 51 17 ff 2b 01           jump @97 if a0 == 4294967295
      :                          @82
  1123: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1126: 83 77 01                 i32 a0 = a0 + 0x1
  1129: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1132: 95 18 3c 01              a1 = sp + 0x13c
  1136: 95 87 00 20              a0 = a1 + 0x2000
  1140: 33 09 00 10              a2 = 0x1000
  1144: 33 0a 06                 a3 = 0x6
  1147: 33 0b 02                 a4 = 0x2
  1150: 33 05 ff                 s0 = 0xffffffffffffffff
  1153: 33 08                    a1 = 0
  1155: 33 0c                    a5 = 0
  1157: 0a 12                    ecalli 18 // 'fetch'
  1159: 01                       fallthrough
      :                          @83
  1160: 51 17 ff 01 01           jump @97 if a0 == 4294967295
      :                          @84
  1165: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1168: 83 77 01                 i32 a0 = a0 + 0x1
  1171: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1174: 95 18 3c 01              a1 = sp + 0x13c
  1178: 95 87 00 30              a0 = a1 + 0x3000
  1182: 33 09 00 10              a2 = 0x1000
  1186: 33 0a 06                 a3 = 0x6
  1189: 33 0b 03                 a4 = 0x3
  1192: 33 08                    a1 = 0
  1194: 33 0c                    a5 = 0
  1196: 0a 12                    ecalli 18 // 'fetch'
  1198: 01                       fallthrough
      :                          @85
  1199: 51 17 ff da 00           jump @97 if a0 == 4294967295
      :                          @86
  1204: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1207: 83 77 01                 i32 a0 = a0 + 0x1
  1210: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1213: 95 18 3c 01              a1 = sp + 0x13c
  1217: 95 87 00 40              a0 = a1 + 0x4000
  1221: 33 09 00 10              a2 = 0x1000
  1225: 33 0a 06                 a3 = 0x6
  1228: 33 0b 04                 a4 = 0x4
  1231: 33 05 ff                 s0 = 0xffffffffffffffff
  1234: 33 08                    a1 = 0
  1236: 33 0c                    a5 = 0
  1238: 0a 12                    ecalli 18 // 'fetch'
  1240: 01                       fallthrough
      :                          @87
  1241: 51 17 ff b0 00           jump @97 if a0 == 4294967295
      :                          @88
  1246: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1249: 83 77 01                 i32 a0 = a0 + 0x1
  1252: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1255: 95 18 3c 01              a1 = sp + 0x13c
  1259: 95 87 00 50              a0 = a1 + 0x5000
  1263: 33 09 00 10              a2 = 0x1000
  1267: 33 0a 06                 a3 = 0x6
  1270: 33 0b 05                 a4 = 0x5
  1273: 33 08                    a1 = 0
  1275: 33 0c                    a5 = 0
  1277: 0a 12                    ecalli 18 // 'fetch'
  1279: 01                       fallthrough
      :                          @89
  1280: 51 17 ff 89 00           jump @97 if a0 == 4294967295
      :                          @90
  1285: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1288: 83 77 01                 i32 a0 = a0 + 0x1
  1291: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1294: 95 18 3c 01              a1 = sp + 0x13c
  1298: 95 87 00 60              a0 = a1 + 0x6000
  1302: 33 09 00 10              a2 = 0x1000
  1306: 33 0a 06                 a3 = 0x6
  1309: 33 0b 06                 a4 = 0x6
  1312: 33 05 ff                 s0 = 0xffffffffffffffff
  1315: 33 08                    a1 = 0
  1317: 33 0c                    a5 = 0
  1319: 0a 12                    ecalli 18 // 'fetch'
  1321: 01                       fallthrough
      :                          @91
  1322: 51 17 ff 5f              jump @97 if a0 == 4294967295
      :                          @92
  1326: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1329: 83 77 01                 i32 a0 = a0 + 0x1
  1332: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1335: 95 18 3c 01              a1 = sp + 0x13c
  1339: 95 87 00 70              a0 = a1 + 0x7000
  1343: 33 09 00 10              a2 = 0x1000
  1347: 33 0a 06                 a3 = 0x6
  1350: 33 0b 07                 a4 = 0x7
  1353: 33 08                    a1 = 0
  1355: 33 0c                    a5 = 0
  1357: 0a 12                    ecalli 18 // 'fetch'
  1359: 01                       fallthrough
      :                          @93
  1360: 51 17 ff 39              jump @97 if a0 == 4294967295
      :                          @94
  1364: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1367: 83 77 01                 i32 a0 = a0 + 0x1
  1370: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1373: 95 18 3c 01              a1 = sp + 0x13c
  1377: 95 87 00 80 00           a0 = a1 + 0x8000
  1382: 33 09 00 10              a2 = 0x1000
  1386: 33 0a 06                 a3 = 0x6
  1389: 33 0b 08                 a4 = 0x8
  1392: 33 05 ff                 s0 = 0xffffffffffffffff
  1395: 33 08                    a1 = 0
  1397: 33 0c                    a5 = 0
  1399: 0a 12                    ecalli 18 // 'fetch'
  1401: 01                       fallthrough
      :                          @95
  1402: 51 17 ff 0f              jump @97 if a0 == 4294967295
      :                          @96
  1406: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1409: 83 77 01                 i32 a0 = a0 + 0x1
  1412: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1415: 28 06                    jump @98
      :                          @97
  1417: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1420: 01                       fallthrough
      :                          @98
  1421: 95 18 3c 91 00           a1 = sp + 0x913c
  1426: 58 07 9d 00              jump @109 if a0 <=s 0
      :                          @99
  1430: 95 17 3c 91 00           a0 = sp + 0x913c
  1435: 95 19 58 b4 01           a2 = sp + 0x1b458
  1440: 7b 97                    u64 [a2] = a0
  1442: 33 07 06                 a0 = 0x6
  1445: 7b 97 08                 u64 [a2 + 0x8] = a0
  1448: 95 17 48 91 00           a0 = sp + 0x9148
  1453: 7b 97 10                 u64 [a2 + 0x10] = a0
  1456: 33 07 02                 a0 = 0x2
  1459: 7b 97 18                 u64 [a2 + 0x18] = a0
  1462: 33 07 c0 00 01           a0 = 0x100c0
  1467: 7b 87 14                 u64 [a1 + 0x14] = a0
  1470: 49 18 1c 03              u64 [a1 + 28] = 0x3
  1474: 49 18 34                 u64 [a1 + 52] = 0
  1477: 95 17 58 b4 01           a0 = sp + 0x1b458
  1482: 7b 87 24                 u64 [a1 + 0x24] = a0
  1485: 49 18 2c 02              u64 [a1 + 44] = 0x2
  1489: 95 17 58 24 01           a0 = sp + 0x12458
  1494: 95 18 50 91 00           a1 = sp + 0x9150
  1499: 50 10 14 66 0b           ra = 20, jump @287
      :                          @100 [@dyn 10]
  1504: 95 17 58 24 01           a0 = sp + 0x12458
  1509: 82 75 08                 s0 = u64 [a0 + 0x8]
  1512: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1515: 82 76                    s1 = u64 [a0]
  1517: 33 07 02                 a0 = 0x2
  1520: 33 08                    a1 = 0
  1522: 33 09                    a2 = 0
  1524: 64 5a                    a3 = s0
  1526: 33 00 16                 ra = 0x16
  1529: 0a 64                    ecalli 100 // 'log'
  1531: 01                       fallthrough
      :                          @101 [@dyn 11]
  1532: 82 17 08                 a0 = u64 [sp + 0x8]
  1535: c8 67 07                 a0 = a0 + s1
  1538: 53 27 00 f0 4e 01        jump @128 if a0 <u 4294963200
      :                          @102
  1544: 33 07 10 00 03           a0 = 0x30010
  1549: 95 77 00 10              a0 = a0 + 0x1000
  1553: 01                       fallthrough
      :                          @103
  1554: 82 78                    a1 = u64 [a0]
  1556: c9 87 09                 a2 = a0 - a1
  1559: ab 59 39 01              jump @128 if a2 != s0
      :                          @104
  1563: c9 68 09                 a2 = a1 - s1
  1566: 01                       fallthrough
      :                          @105
  1567: 82 7a                    a3 = u64 [a0]
  1569: ab 8a f1                 jump @103 if a3 != a1
      :                          @106
  1572: 7b 79                    u64 [a0] = a2
  1574: 33 0b                    a4 = 0
  1576: 01                       fallthrough
      :                          @107
  1577: ab 8a e9                 jump @103 if a3 != a1
      :                          @108
  1580: 28 24 01                 jump @128
      :                          @109
  1583: 80 85 04                 s0 = u32 [a1 + 0x4]
  1586: 95 17 3c 01              a0 = sp + 0x13c
  1590: 33 09 00 90 00           a2 = 0x9000
  1595: 33 08                    a1 = 0
  1597: 50 10 18 17 0e           ra = 24, jump @354
      :                          @110 [@dyn 12]
  1602: 51 05 7c                 jump @118 if s0 == 0
      :                          @111
  1605: 33 0c                    a5 = 0
  1607: 33 08                    a1 = 0
  1609: 97 59 02                 a2 = s0 << 0x2
  1612: 64 54                    t2 = s0
  1614: c8 59 09                 a2 = a2 + s0
  1617: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
  1627: 33 02 04 01              t0 = 0x104
  1631: 33 03 d0 02              t1 = 0x2d0
  1635: 33 05 01                 s0 = 0x1
  1638: 95 10 3c 01              ra = sp + 0x13c
  1642: 01                       fallthrough
      :                          @112
  1643: aa 3c 57                 jump @119 if a5 == t1
      :                          @113
  1646: d6 a8 07                 a0 = a1 mulhu a3
  1649: 98 77 03                 a0 = a0 >> 0x3
  1652: ca 27 06                 s1 = a0 * t0
  1655: 95 67 04 01              a0 = s1 + 0x104
  1659: c8 c0 0b                 a4 = ra + a5
  1662: c8 b6 06                 s1 = s1 + a4
  1665: 78 65 83 00              u8 [s1 + 0x83] = s0
  1669: c8 c7 07                 a0 = a0 + a5
  1672: 95 7b fe                 a4 = a0 + 0xfffffffffffffffe
  1675: 98 bb 0c                 a4 = a4 >> 0xc
  1678: 78 65 c4 00              u8 [s1 + 0xc4] = s0
  1682: 52 0b 60 08              jump @224 if a4 != 0
      :                          @114
  1686: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
  1689: 98 bb 0c                 a4 = a4 >> 0xc
  1692: 78 65 02 01              u8 [s1 + 0x102] = s0
  1696: 52 0b 53 08              jump @225 if a4 != 0
      :                          @115
  1700: 98 77 0c                 a0 = a0 >> 0xc
  1703: 78 65 03 01              u8 [s1 + 0x103] = s0
  1707: 52 07 49 08              jump @226 if a0 != 0
      :                          @116
  1711: 78 65 04 01              u8 [s1 + 0x104] = s0
  1715: 95 cc 05                 a5 = a5 + 0x5
  1718: 95 88 01                 a1 = a1 + 0x1
  1721: ab c9 b2                 jump @112 if a2 != a5
      :                          @117
  1724: 28 0b                    jump @120
      :                          @118
  1726: 33 04                    t2 = 0
  1728: 28 07                    jump @120
      :                          @119
  1730: 33 04 90 00              t2 = 0x90
  1734: 01                       fallthrough
      :                          @120
  1735: 95 19 3c 91 00           a2 = sp + 0x913c
  1740: 7a 94 10                 u32 [a2 + 0x10] = t2
  1743: 95 17 4c 91 00           a0 = sp + 0x914c
  1748: 95 18 58 24 01           a1 = sp + 0x12458
  1753: 7b 87                    u64 [a1] = a0
  1755: 33 07 76                 a0 = 0x76
  1758: 7b 87 08                 u64 [a1 + 0x8] = a0
  1761: 33 07 38 00 01           a0 = 0x10038
  1766: 7b 97 14                 u64 [a2 + 0x14] = a0
  1769: 49 19 1c 02              u64 [a2 + 28] = 0x2
  1773: 49 19 34                 u64 [a2 + 52] = 0
  1776: 95 17 58 24 01           a0 = sp + 0x12458
  1781: 7b 97 24                 u64 [a2 + 0x24] = a0
  1784: 49 19 2c 01              u64 [a2 + 44] = 0x1
  1788: 95 17 58 b4 01           a0 = sp + 0x1b458
  1793: 95 18 50 91 00           a1 = sp + 0x9150
  1798: 50 10 1a 3b 0a           ra = 26, jump @287
      :                          @121 [@dyn 13]
  1803: 95 17 58 b4 01           a0 = sp + 0x1b458
  1808: 82 75 08                 s0 = u64 [a0 + 0x8]
  1811: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1814: 82 76                    s1 = u64 [a0]
  1816: 33 07 02                 a0 = 0x2
  1819: 33 08                    a1 = 0
  1821: 33 09                    a2 = 0
  1823: 64 5a                    a3 = s0
  1825: 33 00 1c                 ra = 0x1c
  1828: 0a 64                    ecalli 100 // 'log'
  1830: 01                       fallthrough
      :                          @122 [@dyn 14]
  1831: 82 17 08                 a0 = u64 [sp + 0x8]
  1834: c8 67 07                 a0 = a0 + s1
  1837: 53 27 00 f0 23           jump @128 if a0 <u 4294963200
      :                          @123
  1842: 33 07 10 00 03           a0 = 0x30010
  1847: 95 77 00 10              a0 = a0 + 0x1000
  1851: 01                       fallthrough
      :                          @124
  1852: 82 78                    a1 = u64 [a0]
  1854: c9 87 09                 a2 = a0 - a1
  1857: ab 59 0f                 jump @128 if a2 != s0
      :                          @125
  1860: c9 68 09                 a2 = a1 - s1
  1863: 01                       fallthrough
      :                          @126
  1864: 82 7a                    a3 = u64 [a0]
  1866: ab 8a f2                 jump @124 if a3 != a1
      :                          @127
  1869: 7b 79                    u64 [a0] = a2
  1871: 01                       fallthrough
      :                          @128
  1872: 95 17 3c 91 00           a0 = sp + 0x913c
  1877: 81 77 08                 a0 = i32 [a0 + 0x8]
  1880: 7b 17 00 01              u64 [sp + 0x100] = a0
  1884: 51 07 7c 06              jump @214 if a0 == 0
      :                          @129
  1888: 33 04                    t2 = 0
  1890: 95 18 50 91 00           a1 = sp + 0x9150
  1895: 95 87 81 91 00           a0 = a1 + 0x9181
  1900: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1904: 95 18 3c 01              a1 = sp + 0x13c
  1908: 95 15 50 91 00           s0 = sp + 0x9150
  1913: 95 5a 43 31              a3 = s0 + 0x3143
  1917: 7b 1a f0 00              u64 [sp + 0xf0] = a3
  1921: 95 5a 83 31              a3 = s0 + 0x3183
  1925: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  1929: 95 5a c3 31              a3 = s0 + 0x31c3
  1933: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  1937: 95 5b c3 61              a4 = s0 + 0x61c3
  1941: 7b 1b d8 00              u64 [sp + 0xd8] = a4
  1945: 95 5b 03 62              a4 = s0 + 0x6203
  1949: 7b 1b d0 00              u64 [sp + 0xd0] = a4
  1953: 95 87 00 10              a0 = a1 + 0x1000
  1957: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1961: 95 87 00 20              a0 = a1 + 0x2000
  1965: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1969: 95 87 00 30              a0 = a1 + 0x3000
  1973: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1977: 95 87 00 40              a0 = a1 + 0x4000
  1981: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1985: 95 87 00 50              a0 = a1 + 0x5000
  1989: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  1993: 95 87 00 60              a0 = a1 + 0x6000
  1997: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2001: 95 87 00 70              a0 = a1 + 0x7000
  2005: 7b 17 98 00              u64 [sp + 0x98] = a0
  2009: 95 88 00 80 00           a1 = a1 + 0x8000
  2014: 7b 18 90 00              u64 [sp + 0x90] = a1
  2018: 95 58 43 62              a1 = s0 + 0x6243
  2022: 7b 18 88 00              u64 [sp + 0x88] = a1
  2026: 95 18 58 b4 01           a1 = sp + 0x1b458
  2031: 95 82 00 10              t0 = a1 + 0x1000
  2035: 7b 12 78                 u64 [sp + 0x78] = t0
  2038: 95 8b 00 20              a4 = a1 + 0x2000
  2042: 7b 1b 70                 u64 [sp + 0x70] = a4
  2045: 95 8c 00 40              a5 = a1 + 0x4000
  2049: 7b 1c 68                 u64 [sp + 0x68] = a5
  2052: 95 1c 58 24 01           a5 = sp + 0x12458
  2057: 95 cb 40 30              a4 = a5 + 0x3040
  2061: 7b 1b 60                 u64 [sp + 0x60] = a4
  2064: 95 86 00 50              s1 = a1 + 0x5000
  2068: 7b 16 58                 u64 [sp + 0x58] = s1
  2071: 33 06                    s1 = 0
  2073: 95 8b 00 30              a4 = a1 + 0x3000
  2077: 7b 1b 50                 u64 [sp + 0x50] = a4
  2080: 95 cb 00 30              a4 = a5 + 0x3000
  2084: 7b 1b 48                 u64 [sp + 0x48] = a4
  2087: 95 c9 80 30              a2 = a5 + 0x3080
  2091: 7b 19 40                 u64 [sp + 0x40] = a2
  2094: 95 83 00 70              t1 = a1 + 0x7000
  2098: 7b 13 38                 u64 [sp + 0x38] = t1
  2101: 95 87 00 80 00           a0 = a1 + 0x8000
  2106: 7b 17 30                 u64 [sp + 0x30] = a0
  2109: 95 88 00 60              a1 = a1 + 0x6000
  2113: 7b 18 28                 u64 [sp + 0x28] = a1
  2116: 95 c7 40 60              a0 = a5 + 0x6040
  2120: 7b 17 20                 u64 [sp + 0x20] = a0
  2123: 95 c7 00 60              a0 = a5 + 0x6000
  2127: 7b 17 18                 u64 [sp + 0x18] = a0
  2130: 95 c7 80 60              a0 = a5 + 0x6080
  2134: 7b 17 10                 u64 [sp + 0x10] = a0
  2137: 49 21 80 00 04 93 00     u64 [sp + 128] = 0x9304
  2144: 33 05 c2 00              s0 = 0xc2
  2148: 01                       fallthrough
      :                          @130
  2149: 95 17 50 91 00           a0 = sp + 0x9150
  2154: 33 08                    a1 = 0
  2156: 82 19 80 00              a2 = u64 [sp + 0x80]
  2160: 50 10 1e e4 0b           ra = 30, jump @354
      :                          @131 [@dyn 15]
  2165: 83 66 01                 i32 s1 = s1 + 0x1
  2168: 7b 16 08 01              u64 [sp + 0x108] = s1
  2172: 95 17 13 92 00           a0 = sp + 0x9213
  2177: 95 18 3c 01              a1 = sp + 0x13c
  2181: 33 0a 01                 a3 = 0x1
  2184: 95 13 50 91 00           t1 = sp + 0x9150
  2189: 33 02 40                 t0 = 0x40
  2192: 01                       fallthrough
      :                          @132
  2193: 64 a9                    a2 = a3
  2195: 33 0a 40                 a3 = 0x40
  2198: 64 7b                    a4 = a0
  2200: 64 8c                    a5 = a1
  2202: 01                       fallthrough
      :                          @133
  2203: 7c c6                    s1 = u8 [a5]
  2205: 78 b6                    u8 [a4] = s1
  2207: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2210: 95 cc 01                 a5 = a5 + 0x1
  2213: 95 bb 01                 a4 = a4 + 0x1
  2216: 52 0a f3                 jump @133 if a3 != 0
      :                          @134
  2219: 88 9a 40                 a3 = a2 <u 0x40
  2222: c8 9a 0a                 a3 = a3 + a2
  2225: 95 88 40                 a1 = a1 + 0x40
  2228: 95 77 c2 00              a0 = a0 + 0xc2
  2232: ac 29 d9                 jump @132 if a2 <u t0
      :                          @135
  2235: 33 0a 01                 a3 = 0x1
  2238: 95 17 53 92 00           a0 = sp + 0x9253
  2243: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  2247: 01                       fallthrough
      :                          @136
  2248: 64 a9                    a2 = a3
  2250: 33 0a 40                 a3 = 0x40
  2253: 64 7b                    a4 = a0
  2255: 64 8c                    a5 = a1
  2257: 01                       fallthrough
      :                          @137
  2258: 7c c6                    s1 = u8 [a5]
  2260: 78 b6                    u8 [a4] = s1
  2262: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2265: 95 cc 01                 a5 = a5 + 0x1
  2268: 95 bb 01                 a4 = a4 + 0x1
  2271: 52 0a f3                 jump @137 if a3 != 0
      :                          @138
  2274: 88 9a 40                 a3 = a2 <u 0x40
  2277: c8 9a 0a                 a3 = a3 + a2
  2280: 95 88 40                 a1 = a1 + 0x40
  2283: 95 77 c2 00              a0 = a0 + 0xc2
  2287: ac 29 d9                 jump @136 if a2 <u t0
      :                          @139
  2290: 33 0a 01                 a3 = 0x1
  2293: 95 17 93 92 00           a0 = sp + 0x9293
  2298: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  2302: 01                       fallthrough
      :                          @140
  2303: 64 a9                    a2 = a3
  2305: 33 0a 40                 a3 = 0x40
  2308: 64 7b                    a4 = a0
  2310: 64 8c                    a5 = a1
  2312: 01                       fallthrough
      :                          @141
  2313: 7c c6                    s1 = u8 [a5]
  2315: 78 b6                    u8 [a4] = s1
  2317: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2320: 95 cc 01                 a5 = a5 + 0x1
  2323: 95 bb 01                 a4 = a4 + 0x1
  2326: 52 0a f3                 jump @141 if a3 != 0
      :                          @142
  2329: 88 9a 40                 a3 = a2 <u 0x40
  2332: c8 9a 0a                 a3 = a3 + a2
  2335: 95 88 40                 a1 = a1 + 0x40
  2338: 95 77 c2 00              a0 = a0 + 0xc2
  2342: ac 29 d9                 jump @140 if a2 <u t0
      :                          @143
  2345: 33 0a 01                 a3 = 0x1
  2348: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  2352: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  2356: 01                       fallthrough
      :                          @144
  2357: 64 a9                    a2 = a3
  2359: 33 0a 40                 a3 = 0x40
  2362: 64 7b                    a4 = a0
  2364: 64 8c                    a5 = a1
  2366: 01                       fallthrough
      :                          @145
  2367: 7c c6                    s1 = u8 [a5]
  2369: 78 b6                    u8 [a4] = s1
  2371: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2374: 95 cc 01                 a5 = a5 + 0x1
  2377: 95 bb 01                 a4 = a4 + 0x1
  2380: 52 0a f3                 jump @145 if a3 != 0
      :                          @146
  2383: 88 9a 40                 a3 = a2 <u 0x40
  2386: c8 9a 0a                 a3 = a3 + a2
  2389: 95 88 40                 a1 = a1 + 0x40
  2392: 95 77 c2 00              a0 = a0 + 0xc2
  2396: ac 29 d9                 jump @144 if a2 <u t0
      :                          @147
  2399: 33 0a 01                 a3 = 0x1
  2402: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  2406: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  2410: 01                       fallthrough
      :                          @148
  2411: 64 a9                    a2 = a3
  2413: 33 0a 40                 a3 = 0x40
  2416: 64 7b                    a4 = a0
  2418: 64 8c                    a5 = a1
  2420: 01                       fallthrough
      :                          @149
  2421: 7c c6                    s1 = u8 [a5]
  2423: 78 b6                    u8 [a4] = s1
  2425: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2428: 95 cc 01                 a5 = a5 + 0x1
  2431: 95 bb 01                 a4 = a4 + 0x1
  2434: 52 0a f3                 jump @149 if a3 != 0
      :                          @150
  2437: 88 9a 40                 a3 = a2 <u 0x40
  2440: c8 9a 0a                 a3 = a3 + a2
  2443: 95 88 40                 a1 = a1 + 0x40
  2446: 95 77 c2 00              a0 = a0 + 0xc2
  2450: ac 29 d9                 jump @148 if a2 <u t0
      :                          @151
  2453: 33 0a 01                 a3 = 0x1
  2456: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  2460: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2464: 01                       fallthrough
      :                          @152
  2465: 64 a9                    a2 = a3
  2467: 33 0a 40                 a3 = 0x40
  2470: 64 7b                    a4 = a0
  2472: 64 8c                    a5 = a1
  2474: 01                       fallthrough
      :                          @153
  2475: 7c c6                    s1 = u8 [a5]
  2477: 78 b6                    u8 [a4] = s1
  2479: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2482: 95 cc 01                 a5 = a5 + 0x1
  2485: 95 bb 01                 a4 = a4 + 0x1
  2488: 52 0a f3                 jump @153 if a3 != 0
      :                          @154
  2491: 88 9a 40                 a3 = a2 <u 0x40
  2494: c8 9a 0a                 a3 = a3 + a2
  2497: 95 88 40                 a1 = a1 + 0x40
  2500: 95 77 c2 00              a0 = a0 + 0xc2
  2504: ac 29 d9                 jump @152 if a2 <u t0
      :                          @155
  2507: 33 0a 01                 a3 = 0x1
  2510: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2514: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2518: 01                       fallthrough
      :                          @156
  2519: 64 a9                    a2 = a3
  2521: 33 0a 40                 a3 = 0x40
  2524: 64 7b                    a4 = a0
  2526: 64 8c                    a5 = a1
  2528: 01                       fallthrough
      :                          @157
  2529: 7c c6                    s1 = u8 [a5]
  2531: 78 b6                    u8 [a4] = s1
  2533: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2536: 95 cc 01                 a5 = a5 + 0x1
  2539: 95 bb 01                 a4 = a4 + 0x1
  2542: 52 0a f3                 jump @157 if a3 != 0
      :                          @158
  2545: 88 9a 40                 a3 = a2 <u 0x40
  2548: c8 9a 0a                 a3 = a3 + a2
  2551: 95 88 40                 a1 = a1 + 0x40
  2554: 95 77 c2 00              a0 = a0 + 0xc2
  2558: ac 29 d9                 jump @156 if a2 <u t0
      :                          @159
  2561: 33 0a 01                 a3 = 0x1
  2564: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  2568: 82 18 98 00              a1 = u64 [sp + 0x98]
  2572: 01                       fallthrough
      :                          @160
  2573: 64 a9                    a2 = a3
  2575: 33 0a 40                 a3 = 0x40
  2578: 64 7b                    a4 = a0
  2580: 64 8c                    a5 = a1
  2582: 01                       fallthrough
      :                          @161
  2583: 7c c6                    s1 = u8 [a5]
  2585: 78 b6                    u8 [a4] = s1
  2587: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2590: 95 cc 01                 a5 = a5 + 0x1
  2593: 95 bb 01                 a4 = a4 + 0x1
  2596: 52 0a f3                 jump @161 if a3 != 0
      :                          @162
  2599: 88 9a 40                 a3 = a2 <u 0x40
  2602: c8 9a 0a                 a3 = a3 + a2
  2605: 95 88 40                 a1 = a1 + 0x40
  2608: 95 77 c2 00              a0 = a0 + 0xc2
  2612: ac 29 d9                 jump @160 if a2 <u t0
      :                          @163
  2615: 33 0a 01                 a3 = 0x1
  2618: 82 17 88 00              a0 = u64 [sp + 0x88]
  2622: 82 18 90 00              a1 = u64 [sp + 0x90]
  2626: 01                       fallthrough
      :                          @164
  2627: 64 a9                    a2 = a3
  2629: 33 0a 40                 a3 = 0x40
  2632: 64 7b                    a4 = a0
  2634: 64 8c                    a5 = a1
  2636: 01                       fallthrough
      :                          @165
  2637: 7c c6                    s1 = u8 [a5]
  2639: 78 b6                    u8 [a4] = s1
  2641: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2644: 95 cc 01                 a5 = a5 + 0x1
  2647: 95 bb 01                 a4 = a4 + 0x1
  2650: 52 0a f3                 jump @165 if a3 != 0
      :                          @166
  2653: 88 9a 40                 a3 = a2 <u 0x40
  2656: c8 9a 0a                 a3 = a3 + a2
  2659: 95 88 40                 a1 = a1 + 0x40
  2662: 95 77 c2 00              a0 = a0 + 0xc2
  2666: ac 29 d9                 jump @164 if a2 <u t0
      :                          @167
  2669: 33 07 01                 a0 = 0x1
  2672: 33 0c 00 90 00           a5 = 0x9000
  2677: 33 06 c0 00              s1 = 0xc0
  2681: 01                       fallthrough
      :                          @168
  2682: 88 78 c0 00              a1 = a0 <u 0xc0
  2686: c8 73 09                 a2 = t1 + a0
  2689: c8 c9 0a                 a3 = a2 + a5
  2692: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  2696: 95 77 01                 a0 = a0 + 0x1
  2699: da 86 07                 a0 = s1 if a1 == 0
  2702: 85 88 01                 a1 = a1 ^ 0x1
  2705: 78 9b                    u8 [a2] = a4
  2707: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  2711: 88 7b c1 00              a4 = a0 <u 0xc1
  2715: 85 bb 01                 a4 = a4 ^ 0x1
  2718: d4 b8 08                 a1 = a1 | a4
  2721: 78 a9 42 02              u8 [a3 + 0x242] = a2
  2725: 51 08 d5                 jump @168 if a1 == 0
      :                          @169
  2728: 33 07 01                 a0 = 0x1
  2731: 01                       fallthrough
      :                          @170
  2732: 88 78 c0 00              a1 = a0 <u 0xc0
  2736: ca 57 09                 a2 = a0 * s0
  2739: c8 39 09                 a2 = a2 + t1
  2742: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  2746: 85 8b 01                 a4 = a1 ^ 0x1
  2749: 95 77 01                 a0 = a0 + 0x1
  2752: da 86 07                 a0 = s1 if a1 == 0
  2755: 78 9a                    u8 [a2] = a3
  2757: 7c 98 01                 a1 = u8 [a2 + 0x1]
  2760: 88 7a c1 00              a3 = a0 <u 0xc1
  2764: 85 aa 01                 a3 = a3 ^ 0x1
  2767: d4 ba 0a                 a3 = a3 | a4
  2770: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  2774: 51 0a d6                 jump @170 if a3 == 0
      :                          @171
  2777: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  2781: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  2785: 95 19 3c 91 00           a2 = sp + 0x913c
  2790: 78 97 14                 u8 [a2 + 0x14] = a0
  2793: 7c a7                    a0 = u8 [a3]
  2795: 7c 98 96 01              a1 = u8 [a2 + 0x196]
  2799: 78 97 d5 00              u8 [a2 + 0xd5] = a0
  2803: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  2807: 7c 97 d7 00              a0 = u8 [a2 + 0xd7]
  2811: 78 a7 82 01              u8 [a3 + 0x182] = a0
  2815: 95 17 58 24 01           a0 = sp + 0x12458
  2820: 33 09 00 90 00           a2 = 0x9000
  2825: 33 08                    a1 = 0
  2827: 50 10 20 49 09           ra = 32, jump @354
      :                          @172 [@dyn 16]
  2832: 95 13 50 91 00           t1 = sp + 0x9150
  2837: 33 0b 01                 a4 = 0x1
  2840: 28 15                    jump @174
      :                          @173
  2842: 82 1b 18 01              a4 = u64 [sp + 0x118]
  2846: 88 b7 c1 00              a0 = a4 <u 0xc1
  2850: 82 18 10 01              a1 = u64 [sp + 0x110]
  2854: d2 87 07                 a0 = a0 & a1
  2857: 51 07 f0 00              jump @184 if a0 == 0
      :                          @174
  2861: 95 b7 ff                 a0 = a4 + 0xffffffffffffffff
  2864: 56 27 c1 00 c1 03        jump @223 if a0 >u 193
      :                          @175
  2870: 95 b8 01                 a1 = a4 + 0x1
  2873: 88 b9 c0 00              a2 = a4 <u 0xc0
  2877: 7b 18 20 01              u64 [sp + 0x120] = a1
  2881: 7b 19 10 01              u64 [sp + 0x110] = a2
  2885: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  2889: 7b 18 18 01              u64 [sp + 0x118] = a1
  2893: 33 0c 01                 a5 = 0x1
  2896: 7b 1b 30 01              u64 [sp + 0x130] = a4
  2900: 7b 17 28 01              u64 [sp + 0x128] = a0
  2904: 28 37                    jump @178
      :                          @176
  2906: 33 0a                    a3 = 0
  2908: 01                       fallthrough
      :                          @177
  2909: 88 c8 c0 00              a1 = a5 <u 0xc0
  2913: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  2917: 82 17 28 01              a0 = u64 [sp + 0x128]
  2921: 96 79 c0 00              a2 = a0 * 0xc0
  2925: 95 1b 58 24 01           a4 = sp + 0x12458
  2930: c8 b9 09                 a2 = a2 + a4
  2933: c8 09 09                 a2 = a2 + ra
  2936: 88 6b c1 00              a4 = s1 <u 0xc1
  2940: d2 b8 08                 a1 = a1 & a4
  2943: 78 9a                    u8 [a2] = a3
  2945: 64 6c                    a5 = s1
  2947: 95 13 50 91 00           t1 = sp + 0x9150
  2952: 82 1b 30 01              a4 = u64 [sp + 0x130]
  2956: 51 08 8e                 jump @173 if a1 == 0
      :                          @178
  2959: 95 c6 01                 s1 = a5 + 0x1
  2962: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  2965: 96 79 c2 00              a2 = a0 * 0xc2
  2969: c8 93 08                 a1 = t1 + a2
  2972: c8 08 0a                 a3 = a1 + ra
  2975: 7c aa                    a3 = u8 [a3]
  2977: c8 c8 09                 a2 = a1 + a5
  2980: 7c 99                    a2 = u8 [a2]
  2982: c8 68 08                 a1 = a1 + s1
  2985: 7c 88                    a1 = u8 [a1]
  2987: 96 bb c2 00              a4 = a4 * 0xc2
  2991: c8 b3 02                 t0 = t1 + a4
  2994: c8 02 0b                 a4 = t0 + ra
  2997: 7c bb                    a4 = u8 [a4]
  2999: c8 a9 09                 a2 = a2 + a3
  3002: c8 b8 08                 a1 = a1 + a4
  3005: c8 98 08                 a1 = a1 + a2
  3008: c8 62 09                 a2 = t0 + s1
  3011: 7c 99                    a2 = u8 [a2]
  3013: 82 17 20 01              a0 = u64 [sp + 0x120]
  3017: 96 7a c2 00              a3 = a0 * 0xc2
  3021: c8 a3 03                 t1 = t1 + a3
  3024: c8 03 0b                 a4 = t1 + ra
  3027: 7c bb                    a4 = u8 [a4]
  3029: c8 c3 0a                 a3 = t1 + a5
  3032: 7c a4                    t2 = u8 [a3]
  3034: c8 63 03                 t1 = t1 + s1
  3037: 7c 35                    s0 = u8 [t1]
  3039: c8 c2 02                 t0 = t0 + a5
  3042: 7c 2a                    a3 = u8 [t0]
  3044: c8 b9 09                 a2 = a2 + a4
  3047: c8 49 09                 a2 = a2 + t2
  3050: c8 98 08                 a1 = a1 + a2
  3053: be 58 09                 i32 a2 = a1 + s0
  3056: 51 0a 1a                 jump @182 if a3 == 0
      :                          @179
  3059: 33 05 c0 00              s0 = 0xc0
  3063: 52 1a 01 63 ff           jump @176 if a3 != 1
      :                          @180
  3068: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  3071: 33 0a 01                 a3 = 0x1
  3074: 52 19 02 58 ff           jump @176 if a2 != 2
      :                          @181
  3079: 28 56 ff                 jump @177
      :                          @182
  3082: 33 0a 01                 a3 = 0x1
  3085: 33 05 c0 00              s0 = 0xc0
  3089: 52 19 03 49 ff           jump @176 if a2 != 3
      :                          @183
  3094: 28 47 ff                 jump @177
      :                          @184
  3097: 95 17 58 b4 01           a0 = sp + 0x1b458
  3102: 33 09 00 90 00           a2 = 0x9000
  3107: 95 16 58 b4 01           s1 = sp + 0x1b458
  3112: 33 08                    a1 = 0
  3114: 50 10 22 2a 08           ra = 34, jump @354
      :                          @185 [@dyn 17]
  3119: 33 07 40                 a0 = 0x40
  3122: 95 15 58 24 01           s0 = sp + 0x12458
  3127: 01                       fallthrough
      :                          @186
  3128: 7b 17 30 01              u64 [sp + 0x130] = a0
  3132: 33 09 40                 a2 = 0x40
  3135: 64 67                    a0 = s1
  3137: 64 58                    a1 = s0
  3139: 50 10 24 5f 07           ra = 36, jump @336
      :                          @187 [@dyn 18]
  3144: 82 17 30 01              a0 = u64 [sp + 0x130]
  3148: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3151: 95 55 c0 00              s0 = s0 + 0xc0
  3155: 95 66 40                 s1 = s1 + 0x40
  3158: 52 07 e2                 jump @186 if a0 != 0
      :                          @188
  3161: 33 07 40                 a0 = 0x40
  3164: 95 15 98 24 01           s0 = sp + 0x12498
  3169: 82 16 78                 s1 = u64 [sp + 0x78]
  3172: 01                       fallthrough
      :                          @189
  3173: 7b 17 30 01              u64 [sp + 0x130] = a0
  3177: 33 09 40                 a2 = 0x40
  3180: 64 67                    a0 = s1
  3182: 64 58                    a1 = s0
  3184: 50 10 26 32 07           ra = 38, jump @336
      :                          @190 [@dyn 19]
  3189: 82 17 30 01              a0 = u64 [sp + 0x130]
  3193: 95 66 40                 s1 = s1 + 0x40
  3196: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3199: 95 55 c0 00              s0 = s0 + 0xc0
  3203: 52 07 e2                 jump @189 if a0 != 0
      :                          @191
  3206: 33 07 40                 a0 = 0x40
  3209: 95 15 d8 24 01           s0 = sp + 0x124d8
  3214: 82 16 70                 s1 = u64 [sp + 0x70]
  3217: 01                       fallthrough
      :                          @192
  3218: 7b 17 30 01              u64 [sp + 0x130] = a0
  3222: 33 09 40                 a2 = 0x40
  3225: 64 67                    a0 = s1
  3227: 64 58                    a1 = s0
  3229: 50 10 28 05 07           ra = 40, jump @336
      :                          @193 [@dyn 20]
  3234: 82 17 30 01              a0 = u64 [sp + 0x130]
  3238: 95 66 40                 s1 = s1 + 0x40
  3241: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3244: 95 55 c0 00              s0 = s0 + 0xc0
  3248: 52 07 e2                 jump @192 if a0 != 0
      :                          @194
  3251: 33 07 40                 a0 = 0x40
  3254: 82 15 48                 s0 = u64 [sp + 0x48]
  3257: 82 16 50                 s1 = u64 [sp + 0x50]
  3260: 01                       fallthrough
      :                          @195
  3261: 7b 17 30 01              u64 [sp + 0x130] = a0
  3265: 33 09 40                 a2 = 0x40
  3268: 64 67                    a0 = s1
  3270: 64 58                    a1 = s0
  3272: 50 10 2a da 06           ra = 42, jump @336
      :                          @196 [@dyn 21]
  3277: 82 17 30 01              a0 = u64 [sp + 0x130]
  3281: 95 66 40                 s1 = s1 + 0x40
  3284: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3287: 95 55 c0 00              s0 = s0 + 0xc0
  3291: 52 07 e2                 jump @195 if a0 != 0
      :                          @197
  3294: 33 07 40                 a0 = 0x40
  3297: 82 15 60                 s0 = u64 [sp + 0x60]
  3300: 82 16 68                 s1 = u64 [sp + 0x68]
  3303: 01                       fallthrough
      :                          @198
  3304: 7b 17 30 01              u64 [sp + 0x130] = a0
  3308: 33 09 40                 a2 = 0x40
  3311: 64 67                    a0 = s1
  3313: 64 58                    a1 = s0
  3315: 50 10 2c af 06           ra = 44, jump @336
      :                          @199 [@dyn 22]
  3320: 82 17 30 01              a0 = u64 [sp + 0x130]
  3324: 95 66 40                 s1 = s1 + 0x40
  3327: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3330: 95 55 c0 00              s0 = s0 + 0xc0
  3334: 52 07 e2                 jump @198 if a0 != 0
      :                          @200
  3337: 33 07 40                 a0 = 0x40
  3340: 82 15 40                 s0 = u64 [sp + 0x40]
  3343: 82 16 58                 s1 = u64 [sp + 0x58]
  3346: 01                       fallthrough
      :                          @201
  3347: 7b 17 30 01              u64 [sp + 0x130] = a0
  3351: 33 09 40                 a2 = 0x40
  3354: 64 67                    a0 = s1
  3356: 64 58                    a1 = s0
  3358: 50 10 2e 84 06           ra = 46, jump @336
      :                          @202 [@dyn 23]
  3363: 82 17 30 01              a0 = u64 [sp + 0x130]
  3367: 95 66 40                 s1 = s1 + 0x40
  3370: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3373: 95 55 c0 00              s0 = s0 + 0xc0
  3377: 52 07 e2                 jump @201 if a0 != 0
      :                          @203
  3380: 33 07 40                 a0 = 0x40
  3383: 82 15 18                 s0 = u64 [sp + 0x18]
  3386: 82 16 28                 s1 = u64 [sp + 0x28]
  3389: 01                       fallthrough
      :                          @204
  3390: 7b 17 30 01              u64 [sp + 0x130] = a0
  3394: 33 09 40                 a2 = 0x40
  3397: 64 67                    a0 = s1
  3399: 64 58                    a1 = s0
  3401: 50 10 30 59 06           ra = 48, jump @336
      :                          @205 [@dyn 24]
  3406: 82 17 30 01              a0 = u64 [sp + 0x130]
  3410: 95 66 40                 s1 = s1 + 0x40
  3413: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3416: 95 55 c0 00              s0 = s0 + 0xc0
  3420: 52 07 e2                 jump @204 if a0 != 0
      :                          @206
  3423: 33 07 40                 a0 = 0x40
  3426: 82 15 20                 s0 = u64 [sp + 0x20]
  3429: 82 16 38                 s1 = u64 [sp + 0x38]
  3432: 01                       fallthrough
      :                          @207
  3433: 7b 17 30 01              u64 [sp + 0x130] = a0
  3437: 33 09 40                 a2 = 0x40
  3440: 64 67                    a0 = s1
  3442: 64 58                    a1 = s0
  3444: 50 10 32 2e 06           ra = 50, jump @336
      :                          @208 [@dyn 25]
  3449: 82 17 30 01              a0 = u64 [sp + 0x130]
  3453: 95 66 40                 s1 = s1 + 0x40
  3456: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3459: 95 55 c0 00              s0 = s0 + 0xc0
  3463: 52 07 e2                 jump @207 if a0 != 0
      :                          @209
  3466: 33 07 40                 a0 = 0x40
  3469: 82 15 10                 s0 = u64 [sp + 0x10]
  3472: 82 16 30                 s1 = u64 [sp + 0x30]
  3475: 01                       fallthrough
      :                          @210
  3476: 7b 17 30 01              u64 [sp + 0x130] = a0
  3480: 33 09 40                 a2 = 0x40
  3483: 64 67                    a0 = s1
  3485: 64 58                    a1 = s0
  3487: 50 10 34 03 06           ra = 52, jump @336
      :                          @211 [@dyn 26]
  3492: 82 17 30 01              a0 = u64 [sp + 0x130]
  3496: 95 66 40                 s1 = s1 + 0x40
  3499: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3502: 95 55 c0 00              s0 = s0 + 0xc0
  3506: 52 07 e2                 jump @210 if a0 != 0
      :                          @212
  3509: 95 17 3c 01              a0 = sp + 0x13c
  3513: 95 18 58 b4 01           a1 = sp + 0x1b458
  3518: 33 09 00 90 00           a2 = 0x9000
  3523: 50 10 36 df 05           ra = 54, jump @336
      :                          @213 [@dyn 27]
  3528: 82 17 00 01              a0 = u64 [sp + 0x100]
  3532: 82 16 08 01              s1 = u64 [sp + 0x108]
  3536: 33 05 c2 00              s0 = 0xc2
  3540: ab 76 91 fa              jump @130 if s1 != a0
      :                          @214
  3544: 95 15 3c 01              s0 = sp + 0x13c
  3548: 33 06 00 10              s1 = 0x1000
  3552: 95 17 3c 01              a0 = sp + 0x13c
  3556: 33 08 00 10              a1 = 0x1000
  3560: 0a 13                    ecalli 19 // 'export'
  3562: c8 65 07                 a0 = s0 + s1
  3565: 33 08 00 10              a1 = 0x1000
  3569: 0a 13                    ecalli 19 // 'export'
  3571: 95 57 00 20              a0 = s0 + 0x2000
  3575: 33 08 00 10              a1 = 0x1000
  3579: 0a 13                    ecalli 19 // 'export'
  3581: 95 57 00 30              a0 = s0 + 0x3000
  3585: 33 08 00 10              a1 = 0x1000
  3589: 0a 13                    ecalli 19 // 'export'
  3591: 95 57 00 40              a0 = s0 + 0x4000
  3595: 33 08 00 10              a1 = 0x1000
  3599: 0a 13                    ecalli 19 // 'export'
  3601: 95 57 00 50              a0 = s0 + 0x5000
  3605: 33 08 00 10              a1 = 0x1000
  3609: 0a 13                    ecalli 19 // 'export'
  3611: 95 57 00 60              a0 = s0 + 0x6000
  3615: 33 08 00 10              a1 = 0x1000
  3619: 0a 13                    ecalli 19 // 'export'
  3621: 95 57 00 70              a0 = s0 + 0x7000
  3625: 33 08 00 10              a1 = 0x1000
  3629: 0a 13                    ecalli 19 // 'export'
  3631: 95 57 00 80 00           a0 = s0 + 0x8000
  3636: 33 08 00 10              a1 = 0x1000
  3640: 0a 13                    ecalli 19 // 'export'
  3642: 95 17 3c 91 00           a0 = sp + 0x913c
  3647: 95 18 58 b4 01           a1 = sp + 0x1b458
  3652: 7b 87                    u64 [a1] = a0
  3654: 33 07 06                 a0 = 0x6
  3657: 7b 87 08                 u64 [a1 + 0x8] = a0
  3660: 33 07 28 00 01           a0 = 0x10028
  3665: 7b 87 10                 u64 [a1 + 0x10] = a0
  3668: 33 07 0a                 a0 = 0xa
  3671: 7b 87 18                 u64 [a1 + 0x18] = a0
  3674: 33 07 10 01 01           a0 = 0x10110
  3679: 95 18 3c 91 00           a1 = sp + 0x913c
  3684: 7b 87 14                 u64 [a1 + 0x14] = a0
  3687: 49 18 1c 03              u64 [a1 + 28] = 0x3
  3691: 95 17 58 b4 01           a0 = sp + 0x1b458
  3696: 7b 87 24                 u64 [a1 + 0x24] = a0
  3699: 49 18 2c 02              u64 [a1 + 44] = 0x2
  3703: 49 18 34                 u64 [a1 + 52] = 0
  3706: 95 17 58 24 01           a0 = sp + 0x12458
  3711: 95 18 50 91 00           a1 = sp + 0x9150
  3716: 50 10 38 bd 02           ra = 56, jump @287
      :                          @215 [@dyn 28]
  3721: 95 17 58 24 01           a0 = sp + 0x12458
  3726: 82 75 08                 s0 = u64 [a0 + 0x8]
  3729: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3732: 82 76                    s1 = u64 [a0]
  3734: 33 07 02                 a0 = 0x2
  3737: 33 08                    a1 = 0
  3739: 33 09                    a2 = 0
  3741: 64 5a                    a3 = s0
  3743: 33 00 3a                 ra = 0x3a
  3746: 0a 64                    ecalli 100 // 'log'
  3748: 01                       fallthrough
      :                          @216 [@dyn 29]
  3749: 82 17 08                 a0 = u64 [sp + 0x8]
  3752: c8 67 07                 a0 = a0 + s1
  3755: 53 27 00 f0 25           jump @222 if a0 <u 4294963200
      :                          @217
  3760: 33 07 10 00 03           a0 = 0x30010
  3765: 95 77 00 10              a0 = a0 + 0x1000
  3769: 01                       fallthrough
      :                          @218
  3770: 82 78                    a1 = u64 [a0]
  3772: c9 87 09                 a2 = a0 - a1
  3775: ab 59 11                 jump @222 if a2 != s0
      :                          @219
  3778: c9 68 09                 a2 = a1 - s1
  3781: 01                       fallthrough
      :                          @220
  3782: 82 7a                    a3 = u64 [a0]
  3784: ab 8a f2                 jump @218 if a3 != a1
      :                          @221
  3787: 7b 79                    u64 [a0] = a2
  3789: 33 0b                    a4 = 0
  3791: 01                       fallthrough
      :                          @222
  3792: 33 07 00 00 01           a0 = 0x10000
  3797: 33 08                    a1 = 0
  3799: 33 09 78 3c 02           a2 = 0x23c78
  3804: c8 91 01                 sp = sp + a2
  3807: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3811: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3815: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3819: 95 11 f8 07              sp = sp + 0x7f8
  3823: 32 00                    ret
      :                          @223
  3825: 00                       trap
      :                          @224
  3826: 00                       trap
      :                          @225
  3827: 00                       trap
      :                          @226
  3828: 00                       trap
      :                          @227
  3829: 00                       trap
      :                          @228
  3830: 00                       trap
      :                          @229
  3831: 00                       trap
      :                          @230 [export #1: 'accumulate']
  3832: 33 07 00 00 01           a0 = 0x10000
  3837: 33 08                    a1 = 0
  3839: 32 00                    ret
      :                          @231 [export #2: 'on_transfer']
  3841: 33 07 00 00 01           a0 = 0x10000
  3846: 33 08                    a1 = 0
  3848: 32 00                    ret
      :                          @232
  3850: 00                       trap
      :                          @233
  3851: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3854: 7b 10 40                 u64 [sp + 0x40] = ra
  3857: 7b 15 38                 u64 [sp + 0x38] = s0
  3860: 7b 16 30                 u64 [sp + 0x30] = s1
  3863: c8 89 09                 a2 = a2 + a1
  3866: ac 89 52                 jump @241 if a2 <u a1
      :                          @234
  3869: 64 75                    s0 = a0
  3871: 82 77                    a0 = u64 [a0]
  3873: 97 78 01                 a1 = a0 << 0x1
  3876: 33 0a 08                 a3 = 0x8
  3879: e4 a9 09                 a2 = maxu(a2, a3)
  3882: e4 98 06                 s1 = maxu(a1, a2)
  3885: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3888: 98 88 3f                 a1 = a1 >> 0x3f
  3891: 51 07 12                 jump @236 if a0 == 0
      :                          @235
  3894: 82 59 08                 a2 = u64 [s0 + 0x8]
  3897: 7b 19 18                 u64 [sp + 0x18] = a2
  3900: 49 11 20 01              u64 [sp + 32] = 0x1
  3904: 7b 17 28                 u64 [sp + 0x28] = a0
  3907: 28 06                    jump @237
      :                          @236
  3909: 49 11 20                 u64 [sp + 32] = 0
  3912: 01                       fallthrough
      :                          @237
  3913: 64 17                    a0 = sp
  3915: 95 1a 18                 a3 = sp + 0x18
  3918: 64 69                    a2 = s1
  3920: 50 10 3c 31              ra = 60, jump @244
      :                          @238 [@dyn 30]
  3924: 82 18                    a1 = u64 [sp]
  3926: 82 17 08                 a0 = u64 [sp + 0x8]
  3929: 51 08 14                 jump @242 if a1 == 0
      :                          @239
  3932: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3942: aa 87 0d                 jump @243 if a0 == a1
      :                          @240
  3945: 52 07 a1                 jump @232 if a0 != 0
      :                          @241
  3948: 00                       trap
      :                          @242
  3949: 7b 57 08                 u64 [s0 + 0x8] = a0
  3952: 7b 56                    u64 [s0] = s1
  3954: 01                       fallthrough
      :                          @243
  3955: 82 10 40                 ra = u64 [sp + 0x40]
  3958: 82 15 38                 s0 = u64 [sp + 0x38]
  3961: 82 16 30                 s1 = u64 [sp + 0x30]
  3964: 95 11 48                 sp = sp + 0x48
  3967: 32 00                    ret
      :                          @244
  3969: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3972: 7b 10 30                 u64 [sp + 0x30] = ra
  3975: 7b 15 28                 u64 [sp + 0x28] = s0
  3978: 7b 16 20                 u64 [sp + 0x20] = s1
  3981: 64 95                    s0 = a2
  3983: 64 72                    t0 = a0
  3985: 51 08 76                 jump @254 if a1 == 0
      :                          @245
  3988: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3991: 51 07 79                 jump @255 if a0 == 0
      :                          @246
  3994: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3997: 51 09 a6 00              jump @262 if a2 == 0
      :                          @247
  4001: 82 a8                    a1 = u64 [a3]
  4003: 33 06 10 00 03           s1 = 0x30010
  4008: 33 03 00 10              t1 = 0x1000
  4012: c8 36 06                 s1 = s1 + t1
  4015: 01                       fallthrough
      :                          @248
  4016: 82 6a                    a3 = u64 [s1]
  4018: c8 5a 07                 a0 = a3 + s0
  4021: ac a7 cb 00              jump @268 if a0 <u a3
      :                          @249
  4025: 95 7b 01                 a4 = a0 + 0x1
  4028: 88 bc 01                 a5 = a4 <u 0x1
  4031: d8 b3 0b                 a4 = t1 <u a4
  4034: d4 cb 0b                 a4 = a4 | a5
  4037: 52 0b bb 00              jump @268 if a4 != 0
      :                          @250
  4041: 82 6b                    a4 = u64 [s1]
  4043: ab ab e5                 jump @248 if a4 != a3
      :                          @251
  4046: 7b 67                    u64 [s1] = a0
  4048: 33 0c                    a5 = 0
  4050: 7b 12 18                 u64 [sp + 0x18] = t0
  4053: 33 0a 10 00 03           a3 = 0x30010
  4058: 33 0b 00 10              a4 = 0x1000
  4062: 7b 1a                    u64 [sp] = a3
  4064: c8 ba 0a                 a3 = a3 + a4
  4067: c9 7a 07                 a0 = a3 - a0
  4070: 7b 17 10                 u64 [sp + 0x10] = a0
  4073: 7b 18 08                 u64 [sp + 0x8] = a1
  4076: 64 96                    s1 = a2
  4078: 50 10 3e b4 03           ra = 62, jump @336
      :                          @252 [@dyn 31]
  4083: 54 26 00 10 95 00        jump @269 if s1 <=u 4096
      :                          @253
  4089: 82 12 18                 t0 = u64 [sp + 0x18]
  4092: 82 18 10                 a1 = u64 [sp + 0x10]
  4095: 33 07                    a0 = 0
  4097: 7b 28 08                 u64 [t0 + 0x8] = a1
  4100: 28 b2 00                 jump @275
      :                          @254
  4103: 49 12 08                 u64 [t0 + 8] = 0
  4106: 33 07 01                 a0 = 0x1
  4109: 28 a9 00                 jump @275
      :                          @255
  4112: 33 09 10 00 03           a2 = 0x30010
  4117: 33 07 00 10              a0 = 0x1000
  4121: c8 79 09                 a2 = a2 + a0
  4124: 01                       fallthrough
      :                          @256
  4125: 82 9a                    a3 = u64 [a2]
  4127: c8 5a 08                 a1 = a3 + s0
  4130: ac a8 5e                 jump @268 if a1 <u a3
      :                          @257
  4133: 95 8b 01                 a4 = a1 + 0x1
  4136: 88 bc 01                 a5 = a4 <u 0x1
  4139: d8 b7 0b                 a4 = a0 <u a4
  4142: d4 cb 0b                 a4 = a4 | a5
  4145: 52 0b 4f                 jump @268 if a4 != 0
      :                          @258
  4148: 82 9b                    a4 = u64 [a2]
  4150: ab ab e7                 jump @256 if a4 != a3
      :                          @259
  4153: 7b 98                    u64 [a2] = a1
  4155: 33 0c                    a5 = 0
  4157: 01                       fallthrough
      :                          @260
  4158: ab ab df                 jump @256 if a4 != a3
      :                          @261
  4161: 28 30                    jump @267
      :                          @262
  4163: 33 09 10 00 03           a2 = 0x30010
  4168: 33 07 00 10              a0 = 0x1000
  4172: c8 79 09                 a2 = a2 + a0
  4175: 01                       fallthrough
      :                          @263
  4176: 82 9a                    a3 = u64 [a2]
  4178: c8 5a 08                 a1 = a3 + s0
  4181: ac a8 2b                 jump @268 if a1 <u a3
      :                          @264
  4184: 95 8b 01                 a4 = a1 + 0x1
  4187: 88 bc 01                 a5 = a4 <u 0x1
  4190: d8 b7 0b                 a4 = a0 <u a4
  4193: d4 cb 0b                 a4 = a4 | a5
  4196: 52 0b 1c                 jump @268 if a4 != 0
      :                          @265
  4199: 82 9b                    a4 = u64 [a2]
  4201: ab ab e7                 jump @263 if a4 != a3
      :                          @266
  4204: 7b 98                    u64 [a2] = a1
  4206: 33 0c                    a5 = 0
  4208: 01                       fallthrough
      :                          @267
  4209: 33 07 10 10 03           a0 = 0x31010
  4214: c9 87 08                 a1 = a0 - a1
  4217: 33 07                    a0 = 0
  4219: 7b 28 08                 u64 [t0 + 0x8] = a1
  4222: 28 38                    jump @275
      :                          @268
  4224: 33 07 01                 a0 = 0x1
  4227: 7b 27 08                 u64 [t0 + 0x8] = a0
  4230: 28 30                    jump @275
      :                          @269
  4232: 64 6c                    a5 = s1
  4234: 82 17                    a0 = u64 [sp]
  4236: 95 77 00 10              a0 = a0 + 0x1000
  4240: 82 12 18                 t0 = u64 [sp + 0x18]
  4243: 82 16 08                 s1 = u64 [sp + 0x8]
  4246: 01                       fallthrough
      :                          @270
  4247: 82 78                    a1 = u64 [a0]
  4249: c9 87 09                 a2 = a0 - a1
  4252: ab 69 11                 jump @274 if a2 != s1
      :                          @271
  4255: c9 c8 09                 a2 = a1 - a5
  4258: 01                       fallthrough
      :                          @272
  4259: 82 7a                    a3 = u64 [a0]
  4261: ab 8a f2                 jump @270 if a3 != a1
      :                          @273
  4264: 7b 79                    u64 [a0] = a2
  4266: 33 0b                    a4 = 0
  4268: 01                       fallthrough
      :                          @274
  4269: 82 18 10                 a1 = u64 [sp + 0x10]
  4272: 33 07                    a0 = 0
  4274: 7b 28 08                 u64 [t0 + 0x8] = a1
  4277: 01                       fallthrough
      :                          @275
  4278: 7b 25 10                 u64 [t0 + 0x10] = s0
  4281: 7b 27                    u64 [t0] = a0
  4283: 82 10 30                 ra = u64 [sp + 0x30]
  4286: 82 15 28                 s0 = u64 [sp + 0x28]
  4289: 82 16 20                 s1 = u64 [sp + 0x20]
  4292: 95 11 38                 sp = sp + 0x38
  4295: 32 00                    ret
      :                          @276
  4297: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4300: 7b 10 40                 u64 [sp + 0x40] = ra
  4303: 7b 15 38                 u64 [sp + 0x38] = s0
  4306: 7b 16 30                 u64 [sp + 0x30] = s1
  4309: 95 88 01                 a1 = a1 + 0x1
  4312: 51 08 54                 jump @284 if a1 == 0
      :                          @277
  4315: 64 75                    s0 = a0
  4317: 82 77                    a0 = u64 [a0]
  4319: 97 79 01                 a2 = a0 << 0x1
  4322: 33 0a 08                 a3 = 0x8
  4325: e4 a8 08                 a1 = maxu(a1, a3)
  4328: e4 89 06                 s1 = maxu(a2, a1)
  4331: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4334: 98 88 3f                 a1 = a1 >> 0x3f
  4337: 51 07 12                 jump @279 if a0 == 0
      :                          @278
  4340: 82 59 08                 a2 = u64 [s0 + 0x8]
  4343: 7b 19 18                 u64 [sp + 0x18] = a2
  4346: 49 11 20 01              u64 [sp + 32] = 0x1
  4350: 7b 17 28                 u64 [sp + 0x28] = a0
  4353: 28 06                    jump @280
      :                          @279
  4355: 49 11 20                 u64 [sp + 32] = 0
  4358: 01                       fallthrough
      :                          @280
  4359: 64 17                    a0 = sp
  4361: 95 1a 18                 a3 = sp + 0x18
  4364: 64 69                    a2 = s1
  4366: 50 10 40 73 fe           ra = 64, jump @244
      :                          @281 [@dyn 32]
  4371: 82 18                    a1 = u64 [sp]
  4373: 82 17 08                 a0 = u64 [sp + 0x8]
  4376: 51 08 15                 jump @285 if a1 == 0
      :                          @282
  4379: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4389: aa 87 0e                 jump @286 if a0 == a1
      :                          @283
  4392: 52 07 e2 fd              jump @232 if a0 != 0
      :                          @284
  4396: 00                       trap
      :                          @285
  4397: 7b 57 08                 u64 [s0 + 0x8] = a0
  4400: 7b 56                    u64 [s0] = s1
  4402: 01                       fallthrough
      :                          @286
  4403: 82 10 40                 ra = u64 [sp + 0x40]
  4406: 82 15 38                 s0 = u64 [sp + 0x38]
  4409: 82 16 30                 s1 = u64 [sp + 0x30]
  4412: 95 11 48                 sp = sp + 0x48
  4415: 32 00                    ret
      :                          @287
  4417: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4420: 7b 10 30                 u64 [sp + 0x30] = ra
  4423: 7b 15 28                 u64 [sp + 0x28] = s0
  4426: 7b 16 20                 u64 [sp + 0x20] = s1
  4429: 82 8a 08                 a3 = u64 [a1 + 0x8]
  4432: 64 75                    s0 = a0
  4434: 51 0a 35                 jump @292 if a3 == 0
      :                          @288
  4437: 82 89                    a2 = u64 [a1]
  4439: 33 07                    a0 = 0
  4441: 95 9b 08                 a4 = a2 + 0x8
  4444: 01                       fallthrough
      :                          @289
  4445: 82 bc                    a5 = u64 [a4]
  4447: c8 c7 07                 a0 = a0 + a5
  4450: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4453: 95 bb 10                 a4 = a4 + 0x10
  4456: 52 0a f5                 jump @289 if a3 != 0
      :                          @290
  4459: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4462: 51 0a 24                 jump @294 if a3 == 0
      :                          @291
  4465: 82 99 08                 a2 = u64 [a2 + 0x8]
  4468: 8e 99                    a2 = a2 >u 0
  4470: 88 7a 10                 a3 = a0 <u 0x10
  4473: 85 aa 01                 a3 = a3 ^ 0x1
  4476: d4 a9 09                 a2 = a2 | a3
  4479: 89 7a                    a3 = a0 <s 0
  4481: e0 a9 09                 a2 = a2 & ~a3
  4484: 52 09 0a                 jump @293 if a2 != 0
      :                          @292
  4487: 33 07                    a0 = 0
  4489: 33 09 01                 a2 = 0x1
  4492: 28 4b                    jump @302
      :                          @293
  4494: 97 77 01                 a0 = a0 << 0x1
  4497: 01                       fallthrough
      :                          @294
  4498: 51 07 41                 jump @301 if a0 == 0
      :                          @295
  4501: 57 07 73                 jump @306 if a0 <s 0
      :                          @296
  4504: 64 52                    t0 = s0
  4506: 33 0b 10 00 03           a4 = 0x30010
  4511: 33 09 00 10              a2 = 0x1000
  4515: c8 9b 0b                 a4 = a4 + a2
  4518: 01                       fallthrough
      :                          @297
  4519: 82 bc                    a5 = u64 [a4]
  4521: c8 7c 0a                 a3 = a5 + a0
  4524: ac ca 5e fd              jump @232 if a3 <u a5
      :                          @298
  4528: 95 a5 01                 s0 = a3 + 0x1
  4531: 88 56 01                 s1 = s0 <u 0x1
  4534: d8 59 05                 s0 = a2 <u s0
  4537: d4 65 05                 s0 = s0 | s1
  4540: 52 05 4e fd              jump @232 if s0 != 0
      :                          @299
  4544: 82 b6                    s1 = u64 [a4]
  4546: ab c6 e5                 jump @297 if s1 != a5
      :                          @300
  4549: 7b ba                    u64 [a4] = a3
  4551: 33 09 10 10 03           a2 = 0x31010
  4556: c9 a9 09                 a2 = a2 - a3
  4559: 64 25                    s0 = t0
  4561: 28 06                    jump @302
      :                          @301
  4563: 33 09 01                 a2 = 0x1
  4566: 01                       fallthrough
      :                          @302
  4567: 7b 17                    u64 [sp] = a0
  4569: 7b 19 08                 u64 [sp + 0x8] = a2
  4572: 49 11 10                 u64 [sp + 16] = 0
  4575: 64 17                    a0 = sp
  4577: 50 10 42 80 06           ra = 66, jump @433
      :                          @303 [@dyn 33]
  4582: 52 07 21                 jump @305 if a0 != 0
      :                          @304
  4585: 82 17 10                 a0 = u64 [sp + 0x10]
  4588: 82 18 08                 a1 = u64 [sp + 0x8]
  4591: 82 19                    a2 = u64 [sp]
  4593: 7b 57 10                 u64 [s0 + 0x10] = a0
  4596: 7b 58 08                 u64 [s0 + 0x8] = a1
  4599: 7b 59                    u64 [s0] = a2
  4601: 82 10 30                 ra = u64 [sp + 0x30]
  4604: 82 15 28                 s0 = u64 [sp + 0x28]
  4607: 82 16 20                 s1 = u64 [sp + 0x20]
  4610: 95 11 38                 sp = sp + 0x38
  4613: 32 00                    ret
      :                          @305
  4615: 00                       trap
      :                          @306
  4616: 00                       trap
      :                          @307 [@dyn 34]
  4617: 82 72                    t0 = u64 [a0]
  4619: 33 09 00 f0              a2 = 0xfffffffffffff000
  4623: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  4627: ac 9a 27                 jump @313 if a3 <u a2
      :                          @308
  4630: 82 77 08                 a0 = u64 [a0 + 0x8]
  4633: 33 09 10 00 03           a2 = 0x30010
  4638: 95 99 00 10              a2 = a2 + 0x1000
  4642: 01                       fallthrough
      :                          @309
  4643: 82 9a                    a3 = u64 [a2]
  4645: c9 a9 0b                 a4 = a2 - a3
  4648: ab 7b 12                 jump @313 if a4 != a0
      :                          @310
  4651: c9 2a 0b                 a4 = a3 - t0
  4654: 01                       fallthrough
      :                          @311
  4655: 82 9c                    a5 = u64 [a2]
  4657: ab ac f2                 jump @309 if a5 != a3
      :                          @312
  4660: 7b 9b                    u64 [a2] = a4
  4662: 33 08                    a1 = 0
  4664: 32 00                    ret
      :                          @313
  4666: 32 00                    ret
      :                          @314 [@dyn 35]
  4668: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4671: 7b 10 18                 u64 [sp + 0x18] = ra
  4674: 7b 15 10                 u64 [sp + 0x10] = s0
  4677: 7b 16 08                 u64 [sp + 0x8] = s1
  4680: 64 75                    s0 = a0
  4682: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4685: 82 77                    a0 = u64 [a0]
  4687: c9 a7 07                 a0 = a0 - a3
  4690: 64 96                    s1 = a2
  4692: ac 97 2a                 jump @317 if a0 <u a2
      :                          @315
  4695: 7b 1a                    u64 [sp] = a3
  4697: 82 57 08                 a0 = u64 [s0 + 0x8]
  4700: c8 a7 07                 a0 = a0 + a3
  4703: 64 69                    a2 = s1
  4705: 50 10 48 41 01           ra = 72, jump @336
      :                          @316 [@dyn 36]
  4710: 82 17                    a0 = u64 [sp]
  4712: c8 76 06                 s1 = s1 + a0
  4715: 7b 56 10                 u64 [s0 + 0x10] = s1
  4718: 33 07                    a0 = 0
  4720: 82 10 18                 ra = u64 [sp + 0x18]
  4723: 82 15 10                 s0 = u64 [sp + 0x10]
  4726: 82 16 08                 s1 = u64 [sp + 0x8]
  4729: 95 11 20                 sp = sp + 0x20
  4732: 32 00                    ret
      :                          @317
  4734: 64 57                    a0 = s0
  4736: 7b 18                    u64 [sp] = a1
  4738: 64 a8                    a1 = a3
  4740: 64 69                    a2 = s1
  4742: 50 10 4a 85 fc           ra = 74, jump @233
      :                          @318 [@dyn 37]
  4747: 82 18                    a1 = u64 [sp]
  4749: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4752: 28 c7                    jump @315
      :                          @319 [@dyn 38]
  4754: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4757: 7b 10 20                 u64 [sp + 0x20] = ra
  4760: 7b 15 18                 u64 [sp + 0x18] = s0
  4763: 7b 16 10                 u64 [sp + 0x10] = s1
  4766: 64 86                    s1 = a1
  4768: 83 88                    i32 a1 = a1 + 0
  4770: 33 09 80 00              a2 = 0x80
  4774: 64 7a                    a3 = a0
  4776: ae 98 2b                 jump @324 if a1 >=u a2
      :                          @320
  4779: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4782: 82 a7                    a0 = u64 [a3]
  4784: ab 78 12                 jump @323 if a1 != a0
      :                          @321
  4787: 64 a7                    a0 = a3
  4789: 64 a5                    s0 = a3
  4791: 50 10 4e 12 fe           ra = 78, jump @276
      :                          @322 [@dyn 39]
  4796: 64 5a                    a3 = s0
  4798: 82 58 10                 a1 = u64 [s0 + 0x10]
  4801: 01                       fallthrough
      :                          @323
  4802: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4805: c8 87 07                 a0 = a0 + a1
  4808: 78 76                    u8 [a0] = s1
  4810: 95 88 01                 a1 = a1 + 0x1
  4813: 7b a8 10                 u64 [a3 + 0x10] = a1
  4816: 28 ab 00                 jump @332
      :                          @324
  4819: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4822: 48 11 0c                 u32 [sp + 12] = 0
  4825: 52 07 1c                 jump @326 if a0 != 0
      :                          @325
  4828: 98 67 06                 a0 = s1 >> 0x6
  4831: 86 77 c0 00              a0 = a0 | 0xc0
  4835: 78 17 0c                 u8 [sp + 0xc] = a0
  4838: 84 67 3f                 a0 = s1 & 0x3f
  4841: 86 77 80 00              a0 = a0 | 0x80
  4845: 78 17 0d                 u8 [sp + 0xd] = a0
  4848: 33 06 02                 s1 = 0x2
  4851: 28 63                    jump @329
      :                          @326
  4853: 8b 67 10                 i32 a0 = s1 >> 0x10
  4856: 52 07 29                 jump @328 if a0 != 0
      :                          @327
  4859: 98 67 0c                 a0 = s1 >> 0xc
  4862: 86 77 e0 00              a0 = a0 | 0xe0
  4866: 78 17 0c                 u8 [sp + 0xc] = a0
  4869: 97 67 34                 a0 = s1 << 0x34
  4872: 98 77 3a                 a0 = a0 >> 0x3a
  4875: 95 77 80 00              a0 = a0 + 0x80
  4879: 78 17 0d                 u8 [sp + 0xd] = a0
  4882: 84 67 3f                 a0 = s1 & 0x3f
  4885: 86 77 80 00              a0 = a0 | 0x80
  4889: 78 17 0e                 u8 [sp + 0xe] = a0
  4892: 33 06 03                 s1 = 0x3
  4895: 28 37                    jump @329
      :                          @328
  4897: 97 67 2b                 a0 = s1 << 0x2b
  4900: 98 77 3d                 a0 = a0 >> 0x3d
  4903: 95 77 f0 00              a0 = a0 + 0xf0
  4907: 78 17 0c                 u8 [sp + 0xc] = a0
  4910: 97 67 2e                 a0 = s1 << 0x2e
  4913: 98 77 3a                 a0 = a0 >> 0x3a
  4916: 95 77 80 00              a0 = a0 + 0x80
  4920: 78 17 0d                 u8 [sp + 0xd] = a0
  4923: 97 67 34                 a0 = s1 << 0x34
  4926: 98 77 3a                 a0 = a0 >> 0x3a
  4929: 95 77 80 00              a0 = a0 + 0x80
  4933: 78 17 0e                 u8 [sp + 0xe] = a0
  4936: 84 67 3f                 a0 = s1 & 0x3f
  4939: 86 77 80 00              a0 = a0 | 0x80
  4943: 78 17 0f                 u8 [sp + 0xf] = a0
  4946: 33 06 04                 s1 = 0x4
  4949: 01                       fallthrough
      :                          @329
  4950: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4953: 82 a7                    a0 = u64 [a3]
  4955: c9 57 07                 a0 = a0 - s0
  4958: ac 67 2d                 jump @333 if a0 <u s1
      :                          @330
  4961: 7b 1a                    u64 [sp] = a3
  4963: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4966: c8 57 07                 a0 = a0 + s0
  4969: 95 18 0c                 a1 = sp + 0xc
  4972: 64 69                    a2 = s1
  4974: 50 10 50 34              ra = 80, jump @336
      :                          @331 [@dyn 40]
  4978: c8 56 06                 s1 = s1 + s0
  4981: 82 17                    a0 = u64 [sp]
  4983: 7b 76 10                 u64 [a0 + 0x10] = s1
  4986: 01                       fallthrough
      :                          @332
  4987: 33 07                    a0 = 0
  4989: 82 10 20                 ra = u64 [sp + 0x20]
  4992: 82 15 18                 s0 = u64 [sp + 0x18]
  4995: 82 16 10                 s1 = u64 [sp + 0x10]
  4998: 95 11 28                 sp = sp + 0x28
  5001: 32 00                    ret
      :                          @333
  5003: 64 a7                    a0 = a3
  5005: 64 58                    a1 = s0
  5007: 64 69                    a2 = s1
  5009: 64 a5                    s0 = a3
  5011: 50 10 52 78 fb           ra = 82, jump @233
      :                          @334 [@dyn 41]
  5016: 64 5a                    a3 = s0
  5018: 82 55 10                 s0 = u64 [s0 + 0x10]
  5021: 28 c4                    jump @330
      :                          @335 [@dyn 42]
  5023: 28 c2 04                 jump @433
      :                          @336
  5026: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5029: 7b 10 18                 u64 [sp + 0x18] = ra
  5032: 7b 15 10                 u64 [sp + 0x10] = s0
  5035: 7b 16 08                 u64 [sp + 0x8] = s1
  5038: 53 19 10 64              jump @345 if a2 <u 16
      :                          @337
  5042: 8d 7a                    i32 a3 = -a0
  5044: 84 a2 07                 t0 = a3 & 0x7
  5047: c8 27 0b                 a4 = a0 + t0
  5050: 51 02 15                 jump @340 if t0 == 0
      :                          @338
  5053: 64 8c                    a5 = a1
  5055: 64 75                    s0 = a0
  5057: 01                       fallthrough
      :                          @339
  5058: 7c ca                    a3 = u8 [a5]
  5060: 78 5a                    u8 [s0] = a3
  5062: 95 55 01                 s0 = s0 + 0x1
  5065: 95 cc 01                 a5 = a5 + 0x1
  5068: ac b5 f6                 jump @339 if s0 <u a4
      :                          @340
  5071: c8 28 03                 t1 = a1 + t0
  5074: c9 29 02                 t0 = a2 - t0
  5077: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5080: 84 38 07                 a1 = t1 & 0x7
  5083: c8 4b 0a                 a3 = a4 + t2
  5086: 51 08 3b                 jump @347 if a1 == 0
      :                          @341
  5089: 58 04 4b                 jump @350 if t2 <=s 0
      :                          @342
  5092: 97 38 03                 a1 = t1 << 0x3
  5095: 84 80 38                 ra = a1 & 0x38
  5098: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5101: 82 c5                    s0 = u64 [a5]
  5103: 8d 88                    i32 a1 = -a1
  5105: 84 88 38                 a1 = a1 & 0x38
  5108: 95 cc 08                 a5 = a5 + 0x8
  5111: 01                       fallthrough
      :                          @343
  5112: 82 c6                    s1 = u64 [a5]
  5114: d0 05 05                 s0 = s0 >> ra
  5117: cf 86 09                 a2 = s1 << a1
  5120: d4 59 09                 a2 = a2 | s0
  5123: 7b b9                    u64 [a4] = a2
  5125: 95 bb 08                 a4 = a4 + 0x8
  5128: 95 cc 08                 a5 = a5 + 0x8
  5131: 64 65                    s0 = s1
  5133: ac ab eb                 jump @343 if a4 <u a3
      :                          @344
  5136: 28 1c                    jump @350
      :                          @345
  5138: 64 7a                    a3 = a0
  5140: 52 09 21                 jump @351 if a2 != 0
      :                          @346
  5143: 28 2f                    jump @353
      :                          @347
  5145: 58 04 13                 jump @350 if t2 <=s 0
      :                          @348
  5148: 64 38                    a1 = t1
  5150: 01                       fallthrough
      :                          @349
  5151: 82 89                    a2 = u64 [a1]
  5153: 7b b9                    u64 [a4] = a2
  5155: 95 bb 08                 a4 = a4 + 0x8
  5158: 95 88 08                 a1 = a1 + 0x8
  5161: ac ab f6                 jump @349 if a4 <u a3
      :                          @350
  5164: c8 43 08                 a1 = t1 + t2
  5167: 84 29 07                 a2 = t0 & 0x7
  5170: 51 09 14                 jump @353 if a2 == 0
      :                          @351
  5173: c8 a9 09                 a2 = a2 + a3
  5176: 01                       fallthrough
      :                          @352
  5177: 7c 8b                    a4 = u8 [a1]
  5179: 78 ab                    u8 [a3] = a4
  5181: 95 aa 01                 a3 = a3 + 0x1
  5184: 95 88 01                 a1 = a1 + 0x1
  5187: ac 9a f6                 jump @352 if a3 <u a2
      :                          @353
  5190: 82 10 18                 ra = u64 [sp + 0x18]
  5193: 82 15 10                 s0 = u64 [sp + 0x10]
  5196: 82 16 08                 s1 = u64 [sp + 0x8]
  5199: 95 11 20                 sp = sp + 0x20
  5202: 32 00                    ret
      :                          @354
  5204: 53 19 10 48              jump @363 if a2 <u 16
      :                          @355
  5208: 8d 7a                    i32 a3 = -a0
  5210: 84 aa 07                 a3 = a3 & 0x7
  5213: c8 a7 0b                 a4 = a0 + a3
  5216: 51 0a 0e                 jump @358 if a3 == 0
      :                          @356
  5219: 64 7c                    a5 = a0
  5221: 01                       fallthrough
      :                          @357
  5222: 78 c8                    u8 [a5] = a1
  5224: 95 cc 01                 a5 = a5 + 0x1
  5227: ac bc fb                 jump @357 if a5 <u a4
      :                          @358
  5230: c9 a9 03                 t1 = a2 - a3
  5233: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5236: c8 cb 0a                 a3 = a4 + a5
  5239: 58 0c 1d                 jump @361 if a5 <=s 0
      :                          @359
  5242: 84 82 ff 00              t0 = a1 & 0xff
  5246: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5256: ca 92 0c                 a5 = t0 * a2
  5259: 01                       fallthrough
      :                          @360
  5260: 7b bc                    u64 [a4] = a5
  5262: 95 bb 08                 a4 = a4 + 0x8
  5265: ac ab fb                 jump @360 if a4 <u a3
      :                          @361
  5268: 84 39 07                 a2 = t1 & 0x7
  5271: 52 09 0a                 jump @364 if a2 != 0
      :                          @362
  5274: 28 13                    jump @366
      :                          @363
  5276: 64 7a                    a3 = a0
  5278: 51 09 0f                 jump @366 if a2 == 0
      :                          @364
  5281: c8 a9 09                 a2 = a2 + a3
  5284: 01                       fallthrough
      :                          @365
  5285: 78 a8                    u8 [a3] = a1
  5287: 95 aa 01                 a3 = a3 + 0x1
  5290: ac 9a fb                 jump @365 if a3 <u a2
      :                          @366
  5293: 32 00                    ret
      :                          @367 [@dyn 43]
  5295: 82 77                    a0 = u64 [a0]
  5297: 01                       fallthrough
      :                          @368
  5298: 28                       jump @368
      :                          @369
  5299: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  5302: 7b 10 58                 u64 [sp + 0x58] = ra
  5305: 7b 15 50                 u64 [sp + 0x50] = s0
  5308: 7b 16 48                 u64 [sp + 0x48] = s1
  5311: 7b 19 08                 u64 [sp + 0x8] = a2
  5314: 7b 18                    u64 [sp] = a1
  5316: 98 7a 04                 a3 = a0 >> 0x4
  5319: 33 09 27                 a2 = 0x27
  5322: 53 2a 71 02 81 00        jump @372 if a3 <u 625
      :                          @370
  5328: 33 09 27                 a2 = 0x27
  5331: 95 1b 46                 a4 = sp + 0x46
  5334: 3a 08 00 00 03           a1 = u64 [0x30000]
  5339: 7b 18 18                 u64 [sp + 0x18] = a1
  5342: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  5348: 33 03 7b 14              t1 = 0x147b
  5352: 33 05 72 01 01           s0 = 0x10172
  5357: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  5363: 01                       fallthrough
      :                          @371
  5364: 64 74                    t2 = a0
  5366: 82 17 18                 a0 = u64 [sp + 0x18]
  5369: d6 74 07                 a0 = t2 mulhu a0
  5372: 98 77 0b                 a0 = a0 >> 0xb
  5375: 82 18 10                 a1 = u64 [sp + 0x10]
  5378: c0 87 02                 i32 t0 = a0 * a1
  5381: c8 42 0a                 a3 = t0 + t2
  5384: 97 a2 30                 t0 = a3 << 0x30
  5387: 98 28 32                 a1 = t0 >> 0x32
  5390: ca 38 08                 a1 = a1 * t1
  5393: 98 8c 11                 a5 = a1 >> 0x11
  5396: 98 88 10                 a1 = a1 >> 0x10
  5399: 84 88 fe 07              a1 = a1 & 0x7fe
  5403: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  5406: c8 ca 0a                 a3 = a3 + a5
  5409: 97 aa 31                 a3 = a3 << 0x31
  5412: 98 aa 30                 a3 = a3 >> 0x30
  5415: c8 58 08                 a1 = a1 + s0
  5418: 7c 8c                    a5 = u8 [a1]
  5420: 7c 88 01                 a1 = u8 [a1 + 0x1]
  5423: c8 5a 0a                 a3 = a3 + s0
  5426: 7c a6 01                 s1 = u8 [a3 + 0x1]
  5429: 7c aa                    a3 = u8 [a3]
  5431: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  5434: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  5437: 78 b6 01                 u8 [a4 + 0x1] = s1
  5440: 78 ba                    u8 [a4] = a3
  5442: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  5445: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  5448: ac 40 ac                 jump @371 if ra <u t2
      :                          @372
  5451: 54 17 63 3b              jump @374 if a0 <=u 99
      :                          @373
  5455: 97 78 30                 a1 = a0 << 0x30
  5458: 98 88 32                 a1 = a1 >> 0x32
  5461: 96 88 7b 14              a1 = a1 * 0x147b
  5465: 98 88 11                 a1 = a1 >> 0x11
  5468: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  5471: c8 a7 07                 a0 = a0 + a3
  5474: 97 77 31                 a0 = a0 << 0x31
  5477: 98 77 30                 a0 = a0 >> 0x30
  5480: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5483: 33 0a 72 01 01           a3 = 0x10172
  5488: c8 a7 07                 a0 = a0 + a3
  5491: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  5494: 7c 77                    a0 = u8 [a0]
  5496: 95 1b 21                 a4 = sp + 0x21
  5499: c8 9b 0b                 a4 = a4 + a2
  5502: 78 ba 01                 u8 [a4 + 0x1] = a3
  5505: 78 b7                    u8 [a4] = a0
  5507: 64 87                    a0 = a1
  5509: 01                       fallthrough
      :                          @374
  5510: 55 17 0a 14              jump @376 if a0 >=u 10
      :                          @375
  5514: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5517: 95 18 21                 a1 = sp + 0x21
  5520: c8 98 08                 a1 = a1 + a2
  5523: 83 77 30                 i32 a0 = a0 + 0x30
  5526: 78 87                    u8 [a1] = a0
  5528: 28 21                    jump @377
      :                          @376
  5530: 97 77 01                 a0 = a0 << 0x1
  5533: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5536: 33 08 72 01 01           a1 = 0x10172
  5541: c8 87 07                 a0 = a0 + a1
  5544: 7c 78 01                 a1 = u8 [a0 + 0x1]
  5547: 7c 77                    a0 = u8 [a0]
  5549: 95 1a 21                 a3 = sp + 0x21
  5552: c8 9a 0a                 a3 = a3 + a2
  5555: 78 a8 01                 u8 [a3 + 0x1] = a1
  5558: 78 a7                    u8 [a3] = a0
  5560: 01                       fallthrough
      :                          @377
  5561: 95 1b 21                 a4 = sp + 0x21
  5564: c8 9b 0b                 a4 = a4 + a2
  5567: 9a 9c 27                 a5 = 0x27 - a2
  5570: 33 09 70 01 01           a2 = 0x10170
  5575: 82 17 08                 a0 = u64 [sp + 0x8]
  5578: 82 18                    a1 = u64 [sp]
  5580: 33 0a                    a3 = 0
  5582: 50 10 58 12              ra = 88, jump @379
      :                          @378 [@dyn 44]
  5586: 82 10 58                 ra = u64 [sp + 0x58]
  5589: 82 15 50                 s0 = u64 [sp + 0x50]
  5592: 82 16 48                 s1 = u64 [sp + 0x48]
  5595: 95 11 60                 sp = sp + 0x60
  5598: 32 00                    ret
      :                          @379
  5600: 95 11 98                 sp = sp + 0xffffffffffffff98
  5603: 7b 10 60                 u64 [sp + 0x60] = ra
  5606: 7b 15 58                 u64 [sp + 0x58] = s0
  5609: 7b 16 50                 u64 [sp + 0x50] = s1
  5612: 7b 1b 18                 u64 [sp + 0x18] = a4
  5615: 51 08 4f                 jump @386 if a1 == 0
      :                          @380
  5618: 80 76 34                 s1 = u32 [a0 + 0x34]
  5621: 84 68 01                 a1 = s1 & 0x1
  5624: 33 0b 2b                 a4 = 0x2b
  5627: 33 05 00 00 11           s0 = 0x110000
  5632: db 8b 05                 s0 = a4 if a1 != 0
  5635: 7b 15 28                 u64 [sp + 0x28] = s0
  5638: c8 c8 02                 t0 = a1 + a5
  5641: 84 68 04                 a1 = s1 & 0x4
  5644: 51 08 42                 jump @387 if a1 == 0
      :                          @381
  5647: 7b 19 30                 u64 [sp + 0x30] = a2
  5650: 33 08                    a1 = 0
  5652: 51 0a 1a                 jump @384 if a3 == 0
      :                          @382
  5655: 64 a5                    s0 = a3
  5657: 01                       fallthrough
      :                          @383
  5658: 7d 9b                    a4 = i8 [a2]
  5660: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  5663: 85 bb 01                 a4 = a4 ^ 0x1
  5666: c8 b8 08                 a1 = a1 + a4
  5669: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5672: 95 99 01                 a2 = a2 + 0x1
  5675: 52 05 ef                 jump @383 if s0 != 0
      :                          @384
  5678: c8 82 02                 t0 = t0 + a1
  5681: 7b 1a 38                 u64 [sp + 0x38] = a3
  5684: 82 78                    a1 = u64 [a0]
  5686: 7b 1c 20                 u64 [sp + 0x20] = a5
  5689: 52 08 23                 jump @388 if a1 != 0
      :                          @385
  5692: 28 41                    jump @393
      :                          @386
  5694: 81 76 34                 s1 = i32 [a0 + 0x34]
  5697: 95 c2 01                 t0 = a5 + 0x1
  5700: 49 11 28 2d              u64 [sp + 40] = 0x2d
  5704: 84 68 04                 a1 = s1 & 0x4
  5707: 52 08 c4                 jump @381 if a1 != 0
      :                          @387
  5710: 49 11 30                 u64 [sp + 48] = 0
  5713: 7b 1a 38                 u64 [sp + 0x38] = a3
  5716: 82 78                    a1 = u64 [a0]
  5718: 7b 1c 20                 u64 [sp + 0x20] = a5
  5721: 51 08 24                 jump @393 if a1 == 0
      :                          @388
  5724: 82 75 08                 s0 = u64 [a0 + 0x8]
  5727: ae 52 1e                 jump @393 if t0 >=u s0
      :                          @389
  5730: 84 66 08                 s1 = s1 & 0x8
  5733: 52 06 50                 jump @396 if s1 != 0
      :                          @390
  5736: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5739: c9 25 0a                 a3 = s0 - t0
  5742: 5a 19 01 a1 00           jump @403 if a2 >s 1
      :                          @391
  5747: 52 09 ae 00              jump @405 if a2 != 0
      :                          @392
  5751: 7b 1a 10                 u64 [sp + 0x10] = a3
  5754: 28 ad 00                 jump @406
      :                          @393
  5757: 82 75 20                 s0 = u64 [a0 + 0x20]
  5760: 82 76 28                 s1 = u64 [a0 + 0x28]
  5763: 64 57                    a0 = s0
  5765: 64 68                    a1 = s1
  5767: 82 19 28                 a2 = u64 [sp + 0x28]
  5770: 82 1a 30                 a3 = u64 [sp + 0x30]
  5773: 82 1b 38                 a4 = u64 [sp + 0x38]
  5776: 50 10 5a 6d 01           ra = 90, jump @426
      :                          @394 [@dyn 45]
  5781: 33 08 01                 a1 = 0x1
  5784: 52 07 bc 00              jump @411 if a0 != 0
      :                          @395
  5788: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5791: 64 57                    a0 = s0
  5793: 82 18 18                 a1 = u64 [sp + 0x18]
  5796: 82 19 20                 a2 = u64 [sp + 0x20]
  5799: 82 10 60                 ra = u64 [sp + 0x60]
  5802: 82 15 58                 s0 = u64 [sp + 0x58]
  5805: 82 16 50                 s1 = u64 [sp + 0x50]
  5808: 95 11 68                 sp = sp + 0x68
  5811: 32 0c                    jump [a5]
      :                          @396
  5813: 7b 12 40                 u64 [sp + 0x40] = t0
  5816: 81 78 30                 a1 = i32 [a0 + 0x30]
  5819: 7b 18 08                 u64 [sp + 0x8] = a1
  5822: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5825: 7b 19                    u64 [sp] = a2
  5827: 82 79 20                 a2 = u64 [a0 + 0x20]
  5830: 82 76 28                 s1 = u64 [a0 + 0x28]
  5833: 48 17 30 30              u32 [a0 + 48] = 0x30
  5837: 7b 17 10                 u64 [sp + 0x10] = a0
  5840: 46 17 38 01              u8 [a0 + 56] = 0x1
  5844: 7b 19 48                 u64 [sp + 0x48] = a2
  5847: 64 97                    a0 = a2
  5849: 64 68                    a1 = s1
  5851: 82 19 28                 a2 = u64 [sp + 0x28]
  5854: 82 1a 30                 a3 = u64 [sp + 0x30]
  5857: 82 1b 38                 a4 = u64 [sp + 0x38]
  5860: 50 10 5c 19 01           ra = 92, jump @426
      :                          @397 [@dyn 46]
  5865: 52 07 67                 jump @410 if a0 != 0
      :                          @398
  5868: 82 17 40                 a0 = u64 [sp + 0x40]
  5871: c9 75 05                 s0 = s0 - a0
  5874: 95 55 01                 s0 = s0 + 0x1
  5877: 01                       fallthrough
      :                          @399
  5878: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5881: 51 05 c6 00              jump @421 if s0 == 0
      :                          @400
  5885: 82 69 20                 a2 = u64 [s1 + 0x20]
  5888: 33 08 30                 a1 = 0x30
  5891: 82 17 48                 a0 = u64 [sp + 0x48]
  5894: b4 90 01 5e              ra = 94, jump [a2]
      :                          @401 [@dyn 47]
  5898: 51 07 ec                 jump @399 if a0 == 0
      :                          @402
  5901: 28 43                    jump @410
      :                          @403
  5903: 52 19 02 12              jump @405 if a2 != 2
      :                          @404
  5907: 98 a9 01                 a2 = a3 >> 0x1
  5910: 95 a8 01                 a1 = a3 + 0x1
  5913: 98 88 01                 a1 = a1 >> 0x1
  5916: 7b 18 10                 u64 [sp + 0x10] = a1
  5919: 28 08                    jump @406
      :                          @405
  5921: 64 a9                    a2 = a3
  5923: 49 11 10                 u64 [sp + 16] = 0
  5926: 01                       fallthrough
      :                          @406
  5927: 82 78 20                 a1 = u64 [a0 + 0x20]
  5930: 7b 18 48                 u64 [sp + 0x48] = a1
  5933: 82 76 28                 s1 = u64 [a0 + 0x28]
  5936: 81 77 30                 a0 = i32 [a0 + 0x30]
  5939: 7b 17 40                 u64 [sp + 0x40] = a0
  5942: 95 95 01                 s0 = a2 + 0x1
  5945: 01                       fallthrough
      :                          @407
  5946: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5949: 51 05 27                 jump @412 if s0 == 0
      :                          @408
  5952: 82 69 20                 a2 = u64 [s1 + 0x20]
  5955: 82 17 48                 a0 = u64 [sp + 0x48]
  5958: 82 18 40                 a1 = u64 [sp + 0x40]
  5961: b4 90 01 60              ra = 96, jump [a2]
      :                          @409 [@dyn 48]
  5965: 51 07 ed                 jump @407 if a0 == 0
      :                          @410
  5968: 33 08 01                 a1 = 0x1
  5971: 01                       fallthrough
      :                          @411
  5972: 64 87                    a0 = a1
  5974: 82 10 60                 ra = u64 [sp + 0x60]
  5977: 82 15 58                 s0 = u64 [sp + 0x58]
  5980: 82 16 50                 s1 = u64 [sp + 0x50]
  5983: 95 11 68                 sp = sp + 0x68
  5986: 32 00                    ret
      :                          @412
  5988: 82 15 48                 s0 = u64 [sp + 0x48]
  5991: 64 57                    a0 = s0
  5993: 64 68                    a1 = s1
  5995: 82 19 28                 a2 = u64 [sp + 0x28]
  5998: 82 1a 30                 a3 = u64 [sp + 0x30]
  6001: 82 1b 38                 a4 = u64 [sp + 0x38]
  6004: 50 10 62 89 00           ra = 98, jump @426
      :                          @413 [@dyn 49]
  6009: 33 08 01                 a1 = 0x1
  6012: 52 07 d8                 jump @411 if a0 != 0
      :                          @414
  6015: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6018: 64 57                    a0 = s0
  6020: 82 18 18                 a1 = u64 [sp + 0x18]
  6023: 82 19 20                 a2 = u64 [sp + 0x20]
  6026: b4 a0 01 64              ra = 100, jump [a3]
      :                          @415 [@dyn 50]
  6030: 33 08 01                 a1 = 0x1
  6033: 52 07 c3                 jump @411 if a0 != 0
      :                          @416
  6036: 82 17 10                 a0 = u64 [sp + 0x10]
  6039: 9a 77                    a0 = -a0
  6041: 7b 17 38                 u64 [sp + 0x38] = a0
  6044: 33 05 ff                 s0 = 0xffffffffffffffff
  6047: 01                       fallthrough
      :                          @417
  6048: 82 17 38                 a0 = u64 [sp + 0x38]
  6051: c8 57 07                 a0 = a0 + s0
  6054: 51 17 ff 42              jump @424 if a0 == 4294967295
      :                          @418
  6058: 82 69 20                 a2 = u64 [s1 + 0x20]
  6061: 82 17 48                 a0 = u64 [sp + 0x48]
  6064: 82 18 40                 a1 = u64 [sp + 0x40]
  6067: b4 90 01 66              ra = 102, jump [a2]
      :                          @419 [@dyn 51]
  6071: 95 55 01                 s0 = s0 + 0x1
  6074: 51 07 e6                 jump @417 if a0 == 0
      :                          @420
  6077: 28 37                    jump @425
      :                          @421
  6079: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6082: 82 17 48                 a0 = u64 [sp + 0x48]
  6085: 82 18 18                 a1 = u64 [sp + 0x18]
  6088: 82 19 20                 a2 = u64 [sp + 0x20]
  6091: b4 a0 01 68              ra = 104, jump [a3]
      :                          @422 [@dyn 52]
  6095: 33 08 01                 a1 = 0x1
  6098: 52 07 82                 jump @411 if a0 != 0
      :                          @423
  6101: 33 08                    a1 = 0
  6103: 82 17 10                 a0 = u64 [sp + 0x10]
  6106: 82 19 08                 a2 = u64 [sp + 0x8]
  6109: 7a 79 30                 u32 [a0 + 0x30] = a2
  6112: 82 19                    a2 = u64 [sp]
  6114: 78 79 38                 u8 [a0 + 0x38] = a2
  6117: 28 6f ff                 jump @411
      :                          @424
  6120: 82 15 10                 s0 = u64 [sp + 0x10]
  6123: 82 17 10                 a0 = u64 [sp + 0x10]
  6126: d8 75 08                 a1 = s0 <u a0
  6129: 28 63 ff                 jump @411
      :                          @425
  6132: 82 17 10                 a0 = u64 [sp + 0x10]
  6135: d8 75 08                 a1 = s0 <u a0
  6138: 28 5a ff                 jump @411
      :                          @426
  6141: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6144: 7b 10 20                 u64 [sp + 0x20] = ra
  6147: 7b 15 18                 u64 [sp + 0x18] = s0
  6150: 7b 16 10                 u64 [sp + 0x10] = s1
  6153: 83 9c                    i32 a5 = a2 + 0
  6155: 33 02 00 00 11           t0 = 0x110000
  6160: 64 a6                    s1 = a3
  6162: 64 85                    s0 = a1
  6164: 64 7a                    a3 = a0
  6166: aa 2c 20                 jump @429 if a5 == t0
      :                          @427
  6169: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6172: 64 a7                    a0 = a3
  6174: 64 98                    a1 = a2
  6176: 7b 1b 08                 u64 [sp + 0x8] = a4
  6179: 7b 1a                    u64 [sp] = a3
  6181: b4 c0 01 6a              ra = 106, jump [a5]
      :                          @428 [@dyn 53]
  6185: 82 1a                    a3 = u64 [sp]
  6187: 82 1b 08                 a4 = u64 [sp + 0x8]
  6190: 64 78                    a1 = a0
  6192: 33 07 01                 a0 = 0x1
  6195: 52 08 20                 jump @432 if a1 != 0
      :                          @429
  6198: 51 06 1a                 jump @431 if s1 == 0
      :                          @430
  6201: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6204: 64 a7                    a0 = a3
  6206: 64 68                    a1 = s1
  6208: 64 b9                    a2 = a4
  6210: 82 10 20                 ra = u64 [sp + 0x20]
  6213: 82 15 18                 s0 = u64 [sp + 0x18]
  6216: 82 16 10                 s1 = u64 [sp + 0x10]
  6219: 95 11 28                 sp = sp + 0x28
  6222: 32 0c                    jump [a5]
      :                          @431
  6224: 33 07                    a0 = 0
  6226: 01                       fallthrough
      :                          @432
  6227: 82 10 20                 ra = u64 [sp + 0x20]
  6230: 82 15 18                 s0 = u64 [sp + 0x18]
  6233: 82 16 10                 s1 = u64 [sp + 0x10]
  6236: 95 11 28                 sp = sp + 0x28
  6239: 32 00                    ret
      :                          @433
  6241: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6245: 7b 10 80 00              u64 [sp + 0x80] = ra
  6249: 7b 15 78                 u64 [sp + 0x78] = s0
  6252: 7b 16 70                 u64 [sp + 0x70] = s1
  6255: 49 11 60 20              u64 [sp + 96] = 0x20
  6259: 33 09 03                 a2 = 0x3
  6262: 78 19 68                 u8 [sp + 0x68] = a2
  6265: 49 11 30                 u64 [sp + 48] = 0
  6268: 49 11 40                 u64 [sp + 64] = 0
  6271: 82 86 20                 s1 = u64 [a1 + 0x20]
  6274: 7b 17 50                 u64 [sp + 0x50] = a0
  6277: 33 07 40 01 01           a0 = 0x10140
  6282: 7b 17 58                 u64 [sp + 0x58] = a0
  6285: 51 06 06 01              jump @455 if s1 == 0
      :                          @434
  6289: 82 87 28                 a0 = u64 [a1 + 0x28]
  6292: 51 07 73 01              jump @465 if a0 == 0
      :                          @435
  6296: 33 09                    a2 = 0
  6298: 82 85                    s0 = u64 [a1]
  6300: 7b 18 08                 u64 [sp + 0x8] = a1
  6303: 82 88 10                 a1 = u64 [a1 + 0x10]
  6306: 7b 18 18                 u64 [sp + 0x18] = a1
  6309: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  6312: 97 88 03                 a1 = a1 << 0x3
  6315: 98 88 03                 a1 = a1 >> 0x3
  6318: 95 88 01                 a1 = a1 + 0x1
  6321: 7b 18                    u64 [sp] = a1
  6323: 95 55 08                 s0 = s0 + 0x8
  6326: 96 78 38                 a1 = a0 * 0x38
  6329: 95 66 18                 s1 = s1 + 0x18
  6332: 33 07 56                 a0 = 0x56
  6335: 7b 17 10                 u64 [sp + 0x10] = a0
  6338: 01                       fallthrough
      :                          @436
  6339: 7b 18 20                 u64 [sp + 0x20] = a1
  6342: 7b 19 28                 u64 [sp + 0x28] = a2
  6345: 82 59                    a2 = u64 [s0]
  6347: 51 09 17                 jump @439 if a2 == 0
      :                          @437
  6350: 82 1a 58                 a3 = u64 [sp + 0x58]
  6353: 82 17 50                 a0 = u64 [sp + 0x50]
  6356: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  6359: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6362: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @438 [@dyn 54]
  6366: 52 07 4e 01              jump @468 if a0 != 0
      :                          @439
  6370: 81 67 10                 a0 = i32 [s1 + 0x10]
  6373: 7a 17 60                 u32 [sp + 0x60] = a0
  6376: 7c 67 18                 a0 = u8 [s1 + 0x18]
  6379: 78 17 68                 u8 [sp + 0x68] = a0
  6382: 81 67 14                 a0 = i32 [s1 + 0x14]
  6385: 7a 17 64                 u32 [sp + 0x64] = a0
  6388: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6391: 82 67                    a0 = u64 [s1]
  6393: 51 08 26                 jump @444 if a1 == 0
      :                          @440
  6396: 52 18 01 16              jump @442 if a1 != 1
      :                          @441
  6400: 97 77 04                 a0 = a0 << 0x4
  6403: 82 18 18                 a1 = u64 [sp + 0x18]
  6406: c8 87 07                 a0 = a0 + a1
  6409: 82 78 08                 a1 = u64 [a0 + 0x8]
  6412: 82 19 10                 a2 = u64 [sp + 0x10]
  6415: aa 98 07                 jump @443 if a1 == a2
      :                          @442
  6418: 33 08                    a1 = 0
  6420: 28 0f                    jump @445
      :                          @443
  6422: 82 77                    a0 = u64 [a0]
  6424: 82 77                    a0 = u64 [a0]
  6426: 33 08 01                 a1 = 0x1
  6429: 28 06                    jump @445
      :                          @444
  6431: 33 08 01                 a1 = 0x1
  6434: 01                       fallthrough
      :                          @445
  6435: 7b 18 30                 u64 [sp + 0x30] = a1
  6438: 7b 17 38                 u64 [sp + 0x38] = a0
  6441: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  6444: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  6447: 51 08 26                 jump @450 if a1 == 0
      :                          @446
  6450: 52 18 01 16              jump @448 if a1 != 1
      :                          @447
  6454: 97 77 04                 a0 = a0 << 0x4
  6457: 82 18 18                 a1 = u64 [sp + 0x18]
  6460: c8 87 07                 a0 = a0 + a1
  6463: 82 78 08                 a1 = u64 [a0 + 0x8]
  6466: 82 19 10                 a2 = u64 [sp + 0x10]
  6469: aa 98 07                 jump @449 if a1 == a2
      :                          @448
  6472: 33 08                    a1 = 0
  6474: 28 0f                    jump @451
      :                          @449
  6476: 82 77                    a0 = u64 [a0]
  6478: 82 77                    a0 = u64 [a0]
  6480: 33 08 01                 a1 = 0x1
  6483: 28 06                    jump @451
      :                          @450
  6485: 33 08 01                 a1 = 0x1
  6488: 01                       fallthrough
      :                          @451
  6489: 7b 18 40                 u64 [sp + 0x40] = a1
  6492: 7b 17 48                 u64 [sp + 0x48] = a0
  6495: 82 67 08                 a0 = u64 [s1 + 0x8]
  6498: 97 77 04                 a0 = a0 << 0x4
  6501: 82 18 18                 a1 = u64 [sp + 0x18]
  6504: c8 78 08                 a1 = a1 + a0
  6507: 82 87                    a0 = u64 [a1]
  6509: 82 89 08                 a2 = u64 [a1 + 0x8]
  6512: 95 18 30                 a1 = sp + 0x30
  6515: b4 90 01 6e              ra = 110, jump [a2]
      :                          @452 [@dyn 55]
  6519: 52 07 b5 00              jump @468 if a0 != 0
      :                          @453
  6523: 95 55 10                 s0 = s0 + 0x10
  6526: 82 18 20                 a1 = u64 [sp + 0x20]
  6529: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  6532: 95 66 38                 s1 = s1 + 0x38
  6535: 82 19 28                 a2 = u64 [sp + 0x28]
  6538: 95 99 01                 a2 = a2 + 0x1
  6541: 52 08 36 ff              jump @436 if a1 != 0
      :                          @454
  6545: 28 69                    jump @463
      :                          @455
  6547: 82 87 18                 a0 = u64 [a1 + 0x18]
  6550: 51 07 71                 jump @465 if a0 == 0
      :                          @456
  6553: 82 85 10                 s0 = u64 [a1 + 0x10]
  6556: 33 0a                    a3 = 0
  6558: 97 79 04                 a2 = a0 << 0x4
  6561: c8 59 09                 a2 = a2 + s0
  6564: 7b 19 20                 u64 [sp + 0x20] = a2
  6567: 7b 18 08                 u64 [sp + 0x8] = a1
  6570: 82 86                    s1 = u64 [a1]
  6572: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6575: 97 77 04                 a0 = a0 << 0x4
  6578: 98 77 04                 a0 = a0 >> 0x4
  6581: 95 77 01                 a0 = a0 + 0x1
  6584: 7b 17                    u64 [sp] = a0
  6586: 95 66 08                 s1 = s1 + 0x8
  6589: 01                       fallthrough
      :                          @457
  6590: 7b 1a 28                 u64 [sp + 0x28] = a3
  6593: 82 69                    a2 = u64 [s1]
  6595: 51 09 16                 jump @460 if a2 == 0
      :                          @458
  6598: 82 1a 58                 a3 = u64 [sp + 0x58]
  6601: 82 17 50                 a0 = u64 [sp + 0x50]
  6604: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6607: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6610: b4 a0 01 70              ra = 112, jump [a3]
      :                          @459 [@dyn 56]
  6614: 52 07 56                 jump @468 if a0 != 0
      :                          @460
  6617: 82 57                    a0 = u64 [s0]
  6619: 82 59 08                 a2 = u64 [s0 + 0x8]
  6622: 95 18 30                 a1 = sp + 0x30
  6625: b4 90 01 72              ra = 114, jump [a2]
      :                          @461 [@dyn 57]
  6629: 52 07 47                 jump @468 if a0 != 0
      :                          @462
  6632: 95 66 10                 s1 = s1 + 0x10
  6635: 95 55 10                 s0 = s0 + 0x10
  6638: 82 1a 28                 a3 = u64 [sp + 0x28]
  6641: 95 aa 01                 a3 = a3 + 0x1
  6644: 82 17 20                 a0 = u64 [sp + 0x20]
  6647: ab 75 c7                 jump @457 if s0 != a0
      :                          @463
  6650: 82 18 08                 a1 = u64 [sp + 0x8]
  6653: 82 1a                    a3 = u64 [sp]
  6655: 82 87 08                 a0 = u64 [a1 + 0x8]
  6658: ac 7a 0d                 jump @466 if a3 <u a0
      :                          @464
  6661: 28 2c                    jump @469
      :                          @465
  6663: 33 0a                    a3 = 0
  6665: 82 87 08                 a0 = u64 [a1 + 0x8]
  6668: 54 07 25                 jump @469 if a0 <=u 0
      :                          @466
  6671: 82 87                    a0 = u64 [a1]
  6673: 97 a8 04                 a1 = a3 << 0x4
  6676: c8 87 09                 a2 = a0 + a1
  6679: 82 1a 58                 a3 = u64 [sp + 0x58]
  6682: 82 17 50                 a0 = u64 [sp + 0x50]
  6685: 82 98                    a1 = u64 [a2]
  6687: 82 99 08                 a2 = u64 [a2 + 0x8]
  6690: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6693: b4 a0 01 74              ra = 116, jump [a3]
      :                          @467 [@dyn 58]
  6697: 51 07 08                 jump @469 if a0 == 0
      :                          @468
  6700: 33 07 01                 a0 = 0x1
  6703: 28 05                    jump @470
      :                          @469
  6705: 33 07                    a0 = 0
  6707: 01                       fallthrough
      :                          @470
  6708: 82 10 80 00              ra = u64 [sp + 0x80]
  6712: 82 15 78                 s0 = u64 [sp + 0x78]
  6715: 82 16 70                 s1 = u64 [sp + 0x70]
  6718: 95 11 88 00              sp = sp + 0x88
  6722: 32 00                    ret
      :                          @471 [@dyn 59]
  6724: 81 77                    a0 = i32 [a0]
  6726: 89 7a                    a3 = a0 <s 0
  6728: 85 a9 01                 a2 = a3 ^ 0x1
  6731: 97 7b 20                 a4 = a0 << 0x20
  6734: 98 bb 20                 a4 = a4 >> 0x20
  6737: 9a 77                    a0 = -a0
  6739: da ab 07                 a0 = a4 if a3 == 0
  6742: 64 8a                    a3 = a1
  6744: 64 98                    a1 = a2
  6746: 64 a9                    a2 = a3
  6748: 28 57 fa                 jump @369
