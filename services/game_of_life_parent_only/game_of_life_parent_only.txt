// RO data = 570/572 bytes
// RW data = 8/1048608 bytes
// Stack size = 1048576 bytes
// RO data = [70, 105, 110, 105, 115, 104, 32, 103, 108, 105, 100, 101, 114, 32, 105, 110, 105, 116, 44, 32, 112, 108, 97, 99, 101, 100, 32, 0, 0, 0, 0, 0, 83, 116, 101, 112, 95, 110, 58, 32, 9, 0, 0, 0, 0, 0, 0, 0, 32, 103, 108, 105, 100, 101, 114, 115, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 44, 32, 116, 111, 116, 97, 108, 95, 115, 116, 101, 112, 115, 58, 32, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 99, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 44, 32, 70, 101, 116, 99, 104, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 168, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 178, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 101, 120, 112, 111, 114, 116, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 44, 32, 100, 111, 110, 101, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 240, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 251, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 2315
// Code size = 6941 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 a8 0f 00 00           jump @251
      :                          @2
    10: 28 ac 0f                 jump @252
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 2f 15                 jump @392
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 70 01 01           a2 = 0x10170
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 dd 15           ra = 4, jump @402
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 78 14                 jump @392
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 70 01 01           a2 = 0x10170
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 26 15           ra = 8, jump @402
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 c1 13                 jump @392
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 70 01 01           a2 = 0x10170
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c 6f 14           ra = 12, jump @402
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   579: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   583: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   587: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   591: 95 11 88 c3 fd           sp = sp + 0xfffffffffffdc388
   596: 53 18 04 31 0d           jump @243 if a1 <u 4
      :                          @40
   601: 7d 7b                    a4 = i8 [a0]
   603: 84 ba ff 00              a3 = a4 & 0xff
   607: 33 09 01                 a2 = 0x1
   610: 59 0b 40                 jump @47 if a4 >=s 0
      :                          @41
   613: 33 0b c0 00              a4 = 0xc0
   617: 33 09 02                 a2 = 0x2
   620: ac ba 36                 jump @47 if a3 <u a4
      :                          @42
   623: 33 0b e0 00              a4 = 0xe0
   627: 33 09 03                 a2 = 0x3
   630: ac ba 2c                 jump @47 if a3 <u a4
      :                          @43
   633: 33 0b f0 00              a4 = 0xf0
   637: 33 09 04                 a2 = 0x4
   640: ac ba 22                 jump @47 if a3 <u a4
      :                          @44
   643: 33 0b f8 00              a4 = 0xf8
   647: 33 09 05                 a2 = 0x5
   650: ac ba 18                 jump @47 if a3 <u a4
      :                          @45
   653: 33 0b fc 00              a4 = 0xfc
   657: 33 09 06                 a2 = 0x6
   660: ac ba 0e                 jump @47 if a3 <u a4
      :                          @46
   663: 88 a9 fe 00              a2 = a3 <u 0xfe
   667: 33 0b 08                 a4 = 0x8
   670: c9 9b 09                 a2 = a4 - a2
   673: 01                       fallthrough
      :                          @47
   674: ac 98 e3 0c              jump @243 if a1 <u a2
      :                          @48
   678: 51 0a 52                 jump @59 if a3 == 0
      :                          @49
   681: 51 2a ff 00 01 0d        jump @248 if a3 == 255
      :                          @50
   687: 6c ab                    a4 = sext.b a3
   689: 59 0b 47                 jump @59 if a4 >=s 0
      :                          @51
   692: 33 0c c0 00              a5 = 0xc0
   696: 33 0b 01                 a4 = 0x1
   699: ac ca 33                 jump @57 if a3 <u a5
      :                          @52
   702: 33 0c e0 00              a5 = 0xe0
   706: 33 0b 02                 a4 = 0x2
   709: ac ca 29                 jump @57 if a3 <u a5
      :                          @53
   712: 33 0c f0 00              a5 = 0xf0
   716: 33 0b 03                 a4 = 0x3
   719: ac ca 1f                 jump @57 if a3 <u a5
      :                          @54
   722: 33 0c f8 00              a5 = 0xf8
   726: 33 0b 04                 a4 = 0x4
   729: ac ca 15                 jump @57 if a3 <u a5
      :                          @55
   732: 33 0c fc 00              a5 = 0xfc
   736: 33 0b 05                 a4 = 0x5
   739: ac ca 0b                 jump @57 if a3 <u a5
      :                          @56
   742: 88 aa fe 00              a3 = a3 <u 0xfe
   746: 85 ab 07                 a4 = a3 ^ 0x7
   749: 01                       fallthrough
      :                          @57
   750: ae 9b be 0c              jump @250 if a4 >=u a2
      :                          @58
   754: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   757: 52 0b fd                 jump @58 if a4 != 0
      :                          @59
   760: c8 79 05                 s0 = a2 + a0
   763: ab 98 0c                 jump @61 if a1 != a2
      :                          @60
   766: 33 08                    a1 = 0
   768: 33 09                    a2 = 0
   770: 33 06                    s1 = 0
   772: 28 f7 00                 jump @89
      :                          @61
   775: 7d 5b                    a4 = i8 [s0]
   777: c9 98 08                 a1 = a1 - a2
   780: 84 ba ff 00              a3 = a4 & 0xff
   784: 33 09 01                 a2 = 0x1
   787: 59 0b 40                 jump @68 if a4 >=s 0
      :                          @62
   790: 33 0b c0 00              a4 = 0xc0
   794: 33 09 02                 a2 = 0x2
   797: ac ba 36                 jump @68 if a3 <u a4
      :                          @63
   800: 33 0b e0 00              a4 = 0xe0
   804: 33 09 03                 a2 = 0x3
   807: ac ba 2c                 jump @68 if a3 <u a4
      :                          @64
   810: 33 0b f0 00              a4 = 0xf0
   814: 33 09 04                 a2 = 0x4
   817: ac ba 22                 jump @68 if a3 <u a4
      :                          @65
   820: 33 0b f8 00              a4 = 0xf8
   824: 33 09 05                 a2 = 0x5
   827: ac ba 18                 jump @68 if a3 <u a4
      :                          @66
   830: 33 0b fc 00              a4 = 0xfc
   834: 33 09 06                 a2 = 0x6
   837: ac ba 0e                 jump @68 if a3 <u a4
      :                          @67
   840: 88 a9 fe 00              a2 = a3 <u 0xfe
   844: 33 0b 08                 a4 = 0x8
   847: c9 9b 09                 a2 = a4 - a2
   850: 01                       fallthrough
      :                          @68
   851: ac 98 58 0c              jump @249 if a1 <u a2
      :                          @69
   855: 51 0a 14                 jump @73 if a3 == 0
      :                          @70
   858: 51 2a ff 00 50 0c        jump @248 if a3 == 255
      :                          @71
   864: 6c ab                    a4 = sext.b a3
   866: 57 0b 14                 jump @74 if a4 <s 0
      :                          @72
   869: 33 0b                    a4 = 0
   871: 33 06                    s1 = 0
   873: 28 7f                    jump @88
      :                          @73
   875: 33 06                    s1 = 0
   877: e4 98 08                 a1 = maxu(a1, a2)
   880: c9 98 08                 a1 = a1 - a2
   883: 28 88 00                 jump @89
      :                          @74
   886: 55 2a c0 00 0d           jump @76 if a3 >=u 192
      :                          @75
   891: 33 0b 01                 a4 = 0x1
   894: 33 0c 80                 a5 = 0xffffffffffffff80
   897: 28 4a                    jump @85
      :                          @76
   899: 55 2a e0 00 0e           jump @78 if a3 >=u 224
      :                          @77
   904: 33 0b 02                 a4 = 0x2
   907: 33 0c 40 ff              a5 = 0xffffffffffffff40
   911: 28 3c                    jump @85
      :                          @78
   913: 55 2a f0 00 0e           jump @80 if a3 >=u 240
      :                          @79
   918: 33 0b 03                 a4 = 0x3
   921: 33 0c 20 ff              a5 = 0xffffffffffffff20
   925: 28 2e                    jump @85
      :                          @80
   927: 55 2a f8 00 0e           jump @82 if a3 >=u 248
      :                          @81
   932: 33 0b 04                 a4 = 0x4
   935: 33 0c 10 ff              a5 = 0xffffffffffffff10
   939: 28 20                    jump @85
      :                          @82
   941: 55 2a fc 00 0e           jump @84 if a3 >=u 252
      :                          @83
   946: 33 0b 05                 a4 = 0x5
   949: 33 0c 08 ff              a5 = 0xffffffffffffff08
   953: 28 12                    jump @85
      :                          @84
   955: 88 ab fe 00              a4 = a3 <u 0xfe
   959: 33 0c 04 ff              a5 = 0xffffffffffffff04
   963: 93 bc 02 ff              a5 = 0xffffffffffffff02 if a4 == 0
   967: 85 bb 07                 a4 = a4 ^ 0x7
   970: 01                       fallthrough
      :                          @85
   971: ae 9b e1 0b              jump @250 if a4 >=u a2
      :                          @86
   975: 33 06                    s1 = 0
   977: c8 ca 0a                 a3 = a3 + a5
   980: 64 bc                    a5 = a4
   982: 01                       fallthrough
      :                          @87
   983: c8 c5 07                 a0 = s0 + a5
   986: 7c 77                    a0 = u8 [a0]
   988: 97 66 08                 s1 = s1 << 0x8
   991: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   994: d4 76 06                 s1 = s1 | a0
   997: 52 0c f2                 jump @87 if a5 != 0
      :                          @88
  1000: 8a b7 03                 i32 a0 = a4 << 0x3
  1003: cf 7a 07                 a0 = a3 << a0
  1006: c8 76 06                 s1 = s1 + a0
  1009: e4 98 08                 a1 = maxu(a1, a2)
  1012: c9 98 08                 a1 = a1 - a2
  1015: ac 68 8e 0b              jump @243 if a1 <u s1
      :                          @89
  1019: e4 68 07                 a0 = maxu(a1, s1)
  1022: c9 67 07                 a0 = a0 - s1
  1025: 53 17 20 84 0b           jump @243 if a0 <u 32
      :                          @90
  1030: 95 16 3c 91 00           s1 = sp + 0x913c
  1035: 49 11 08 ff ff ef        u64 [sp + 8] = 0xffffffffffefffff
  1041: c8 95 05                 s0 = s0 + a2
  1044: 95 17 3c 01              a0 = sp + 0x13c
  1048: 33 09 00 90 00           a2 = 0x9000
  1053: 33 08                    a1 = 0
  1055: 50 10 0e f3 10           ra = 14, jump @377
      :                          @91 [@dyn 7]
  1060: 81 57                    a0 = i32 [s0]
  1062: 7a 67                    u32 [s1] = a0
  1064: 81 57 04                 a0 = i32 [s0 + 0x4]
  1067: 7a 67 04                 u32 [s1 + 0x4] = a0
  1070: 81 57 08                 a0 = i32 [s0 + 0x8]
  1073: 7a 67 08                 u32 [s1 + 0x8] = a0
  1076: 7b 66 14                 u64 [s1 + 0x14] = s1
  1079: 33 07 06                 a0 = 0x6
  1082: 7b 67 1c                 u64 [s1 + 0x1c] = a0
  1085: 95 18 40 91 00           a1 = sp + 0x9140
  1090: 7b 68 24                 u64 [s1 + 0x24] = a1
  1093: 7b 67 2c                 u64 [s1 + 0x2c] = a0
  1096: 95 18 44 91 00           a1 = sp + 0x9144
  1101: 7b 68 34                 u64 [s1 + 0x34] = a1
  1104: 7b 67 3c                 u64 [s1 + 0x3c] = a0
  1107: 33 07 78 00 01           a0 = 0x10078
  1112: 95 19 58 b4 01           a2 = sp + 0x1b458
  1117: 7b 97                    u64 [a2] = a0
  1119: 49 19 08 03              u64 [a2 + 8] = 0x3
  1123: 49 19 20                 u64 [a2 + 32] = 0
  1126: 95 18 50 91 00           a1 = sp + 0x9150
  1131: 7b 98 10                 u64 [a2 + 0x10] = a1
  1134: 49 19 18 03              u64 [a2 + 24] = 0x3
  1138: 95 17 58 24 01           a0 = sp + 0x12458
  1143: 95 18 58 b4 01           a1 = sp + 0x1b458
  1148: 50 10 10 80 0d           ra = 16, jump @309
      :                          @92 [@dyn 8]
  1153: 95 17 58 24 01           a0 = sp + 0x12458
  1158: 82 75 08                 s0 = u64 [a0 + 0x8]
  1161: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1164: 82 76                    s1 = u64 [a0]
  1166: 33 07 02                 a0 = 0x2
  1169: 33 08                    a1 = 0
  1171: 33 09                    a2 = 0
  1173: 64 5a                    a3 = s0
  1175: 33 00 12                 ra = 0x12
  1178: 0a 64                    ecalli 100 // 'log'
  1180: 01                       fallthrough
      :                          @93 [@dyn 9]
  1181: 82 17 08                 a0 = u64 [sp + 0x8]
  1184: c8 67 07                 a0 = a0 + s1
  1187: 53 37 00 00 f0 25        jump @99 if a0 <u 4293918720
      :                          @94
  1193: 33 07 10 00 03           a0 = 0x30010
  1198: 95 77 00 00 10           a0 = a0 + 0x100000
  1203: 01                       fallthrough
      :                          @95
  1204: 82 78                    a1 = u64 [a0]
  1206: c9 87 09                 a2 = a0 - a1
  1209: ab 59 0f                 jump @99 if a2 != s0
      :                          @96
  1212: c9 68 09                 a2 = a1 - s1
  1215: 01                       fallthrough
      :                          @97
  1216: 82 7a                    a3 = u64 [a0]
  1218: ab 8a f2                 jump @95 if a3 != a1
      :                          @98
  1221: 7b 79                    u64 [a0] = a2
  1223: 01                       fallthrough
      :                          @99
  1224: 95 16 3c 91 00           s1 = sp + 0x913c
  1229: 48 16 0c                 u32 [s1 + 12] = 0
  1232: 95 17 3c 01              a0 = sp + 0x13c
  1236: 33 09 00 10              a2 = 0x1000
  1240: 33 0a 06                 a3 = 0x6
  1243: 33 08                    a1 = 0
  1245: 33 0b                    a4 = 0
  1247: 33 0c                    a5 = 0
  1249: 0a 12                    ecalli 18 // 'fetch'
  1251: 01                       fallthrough
      :                          @100
  1252: 95 18 3c 01              a1 = sp + 0x13c
  1256: 33 05 ff                 s0 = 0xffffffffffffffff
  1259: 33 09 00 10              a2 = 0x1000
  1263: aa 57 49 01              jump @118 if a0 == s0
      :                          @101
  1267: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1270: 83 77 01                 i32 a0 = a0 + 0x1
  1273: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1276: 95 87 00 10              a0 = a1 + 0x1000
  1280: 33 0a 06                 a3 = 0x6
  1283: 33 0b 01                 a4 = 0x1
  1286: 33 08                    a1 = 0
  1288: 33 0c                    a5 = 0
  1290: 0a 12                    ecalli 18 // 'fetch'
  1292: 01                       fallthrough
      :                          @102
  1293: 51 17 ff 2b 01           jump @118 if a0 == 4294967295
      :                          @103
  1298: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1301: 83 77 01                 i32 a0 = a0 + 0x1
  1304: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1307: 95 18 3c 01              a1 = sp + 0x13c
  1311: 95 87 00 20              a0 = a1 + 0x2000
  1315: 33 09 00 10              a2 = 0x1000
  1319: 33 0a 06                 a3 = 0x6
  1322: 33 0b 02                 a4 = 0x2
  1325: 33 05 ff                 s0 = 0xffffffffffffffff
  1328: 33 08                    a1 = 0
  1330: 33 0c                    a5 = 0
  1332: 0a 12                    ecalli 18 // 'fetch'
  1334: 01                       fallthrough
      :                          @104
  1335: 51 17 ff 01 01           jump @118 if a0 == 4294967295
      :                          @105
  1340: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1343: 83 77 01                 i32 a0 = a0 + 0x1
  1346: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1349: 95 18 3c 01              a1 = sp + 0x13c
  1353: 95 87 00 30              a0 = a1 + 0x3000
  1357: 33 09 00 10              a2 = 0x1000
  1361: 33 0a 06                 a3 = 0x6
  1364: 33 0b 03                 a4 = 0x3
  1367: 33 08                    a1 = 0
  1369: 33 0c                    a5 = 0
  1371: 0a 12                    ecalli 18 // 'fetch'
  1373: 01                       fallthrough
      :                          @106
  1374: 51 17 ff da 00           jump @118 if a0 == 4294967295
      :                          @107
  1379: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1382: 83 77 01                 i32 a0 = a0 + 0x1
  1385: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1388: 95 18 3c 01              a1 = sp + 0x13c
  1392: 95 87 00 40              a0 = a1 + 0x4000
  1396: 33 09 00 10              a2 = 0x1000
  1400: 33 0a 06                 a3 = 0x6
  1403: 33 0b 04                 a4 = 0x4
  1406: 33 05 ff                 s0 = 0xffffffffffffffff
  1409: 33 08                    a1 = 0
  1411: 33 0c                    a5 = 0
  1413: 0a 12                    ecalli 18 // 'fetch'
  1415: 01                       fallthrough
      :                          @108
  1416: 51 17 ff b0 00           jump @118 if a0 == 4294967295
      :                          @109
  1421: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1424: 83 77 01                 i32 a0 = a0 + 0x1
  1427: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1430: 95 18 3c 01              a1 = sp + 0x13c
  1434: 95 87 00 50              a0 = a1 + 0x5000
  1438: 33 09 00 10              a2 = 0x1000
  1442: 33 0a 06                 a3 = 0x6
  1445: 33 0b 05                 a4 = 0x5
  1448: 33 08                    a1 = 0
  1450: 33 0c                    a5 = 0
  1452: 0a 12                    ecalli 18 // 'fetch'
  1454: 01                       fallthrough
      :                          @110
  1455: 51 17 ff 89 00           jump @118 if a0 == 4294967295
      :                          @111
  1460: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1463: 83 77 01                 i32 a0 = a0 + 0x1
  1466: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1469: 95 18 3c 01              a1 = sp + 0x13c
  1473: 95 87 00 60              a0 = a1 + 0x6000
  1477: 33 09 00 10              a2 = 0x1000
  1481: 33 0a 06                 a3 = 0x6
  1484: 33 0b 06                 a4 = 0x6
  1487: 33 05 ff                 s0 = 0xffffffffffffffff
  1490: 33 08                    a1 = 0
  1492: 33 0c                    a5 = 0
  1494: 0a 12                    ecalli 18 // 'fetch'
  1496: 01                       fallthrough
      :                          @112
  1497: 51 17 ff 5f              jump @118 if a0 == 4294967295
      :                          @113
  1501: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1504: 83 77 01                 i32 a0 = a0 + 0x1
  1507: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1510: 95 18 3c 01              a1 = sp + 0x13c
  1514: 95 87 00 70              a0 = a1 + 0x7000
  1518: 33 09 00 10              a2 = 0x1000
  1522: 33 0a 06                 a3 = 0x6
  1525: 33 0b 07                 a4 = 0x7
  1528: 33 08                    a1 = 0
  1530: 33 0c                    a5 = 0
  1532: 0a 12                    ecalli 18 // 'fetch'
  1534: 01                       fallthrough
      :                          @114
  1535: 51 17 ff 39              jump @118 if a0 == 4294967295
      :                          @115
  1539: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1542: 83 77 01                 i32 a0 = a0 + 0x1
  1545: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1548: 95 18 3c 01              a1 = sp + 0x13c
  1552: 95 87 00 80 00           a0 = a1 + 0x8000
  1557: 33 09 00 10              a2 = 0x1000
  1561: 33 0a 06                 a3 = 0x6
  1564: 33 0b 08                 a4 = 0x8
  1567: 33 05 ff                 s0 = 0xffffffffffffffff
  1570: 33 08                    a1 = 0
  1572: 33 0c                    a5 = 0
  1574: 0a 12                    ecalli 18 // 'fetch'
  1576: 01                       fallthrough
      :                          @116
  1577: 51 17 ff 0f              jump @118 if a0 == 4294967295
      :                          @117
  1581: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1584: 83 77 01                 i32 a0 = a0 + 0x1
  1587: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1590: 28 06                    jump @119
      :                          @118
  1592: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1595: 01                       fallthrough
      :                          @119
  1596: 95 18 3c 91 00           a1 = sp + 0x913c
  1601: 58 07 9f 00              jump @130 if a0 <=s 0
      :                          @120
  1605: 95 17 3c 91 00           a0 = sp + 0x913c
  1610: 95 19 58 b4 01           a2 = sp + 0x1b458
  1615: 7b 97                    u64 [a2] = a0
  1617: 33 07 06                 a0 = 0x6
  1620: 7b 97 08                 u64 [a2 + 0x8] = a0
  1623: 95 17 48 91 00           a0 = sp + 0x9148
  1628: 7b 97 10                 u64 [a2 + 0x10] = a0
  1631: 33 07 02                 a0 = 0x2
  1634: 7b 97 18                 u64 [a2 + 0x18] = a0
  1637: 33 07 c0 00 01           a0 = 0x100c0
  1642: 7b 87 14                 u64 [a1 + 0x14] = a0
  1645: 49 18 1c 03              u64 [a1 + 28] = 0x3
  1649: 49 18 34                 u64 [a1 + 52] = 0
  1652: 95 17 58 b4 01           a0 = sp + 0x1b458
  1657: 7b 87 24                 u64 [a1 + 0x24] = a0
  1660: 49 18 2c 02              u64 [a1 + 44] = 0x2
  1664: 95 17 58 24 01           a0 = sp + 0x12458
  1669: 95 18 50 91 00           a1 = sp + 0x9150
  1674: 50 10 14 72 0b           ra = 20, jump @309
      :                          @121 [@dyn 10]
  1679: 95 17 58 24 01           a0 = sp + 0x12458
  1684: 82 75 08                 s0 = u64 [a0 + 0x8]
  1687: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1690: 82 76                    s1 = u64 [a0]
  1692: 33 07 02                 a0 = 0x2
  1695: 33 08                    a1 = 0
  1697: 33 09                    a2 = 0
  1699: 64 5a                    a3 = s0
  1701: 33 00 16                 ra = 0x16
  1704: 0a 64                    ecalli 100 // 'log'
  1706: 01                       fallthrough
      :                          @122 [@dyn 11]
  1707: 82 17 08                 a0 = u64 [sp + 0x8]
  1710: c8 67 07                 a0 = a0 + s1
  1713: 53 37 00 00 f0 52 01     jump @149 if a0 <u 4293918720
      :                          @123
  1720: 33 07 10 00 03           a0 = 0x30010
  1725: 95 77 00 00 10           a0 = a0 + 0x100000
  1730: 01                       fallthrough
      :                          @124
  1731: 82 78                    a1 = u64 [a0]
  1733: c9 87 09                 a2 = a0 - a1
  1736: ab 59 3b 01              jump @149 if a2 != s0
      :                          @125
  1740: c9 68 09                 a2 = a1 - s1
  1743: 01                       fallthrough
      :                          @126
  1744: 82 7a                    a3 = u64 [a0]
  1746: ab 8a f1                 jump @124 if a3 != a1
      :                          @127
  1749: 7b 79                    u64 [a0] = a2
  1751: 33 0b                    a4 = 0
  1753: 01                       fallthrough
      :                          @128
  1754: ab 8a e9                 jump @124 if a3 != a1
      :                          @129
  1757: 28 26 01                 jump @149
      :                          @130
  1760: 80 85 04                 s0 = u32 [a1 + 0x4]
  1763: 95 17 3c 01              a0 = sp + 0x13c
  1767: 33 09 00 90 00           a2 = 0x9000
  1772: 33 08                    a1 = 0
  1774: 50 10 18 24 0e           ra = 24, jump @377
      :                          @131 [@dyn 12]
  1779: 51 05 7c                 jump @139 if s0 == 0
      :                          @132
  1782: 33 0c                    a5 = 0
  1784: 33 08                    a1 = 0
  1786: 97 59 02                 a2 = s0 << 0x2
  1789: 64 54                    t2 = s0
  1791: c8 59 09                 a2 = a2 + s0
  1794: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
  1804: 33 02 04 01              t0 = 0x104
  1808: 33 03 d0 02              t1 = 0x2d0
  1812: 33 05 01                 s0 = 0x1
  1815: 95 10 3c 01              ra = sp + 0x13c
  1819: 01                       fallthrough
      :                          @133
  1820: aa 3c 57                 jump @140 if a5 == t1
      :                          @134
  1823: d6 a8 07                 a0 = a1 mulhu a3
  1826: 98 77 03                 a0 = a0 >> 0x3
  1829: ca 27 06                 s1 = a0 * t0
  1832: 95 67 04 01              a0 = s1 + 0x104
  1836: c8 c0 0b                 a4 = ra + a5
  1839: c8 b6 06                 s1 = s1 + a4
  1842: 78 65 83 00              u8 [s1 + 0x83] = s0
  1846: c8 c7 07                 a0 = a0 + a5
  1849: 95 7b fe                 a4 = a0 + 0xfffffffffffffffe
  1852: 98 bb 0c                 a4 = a4 >> 0xc
  1855: 78 65 c4 00              u8 [s1 + 0xc4] = s0
  1859: 52 0b 64 08              jump @245 if a4 != 0
      :                          @135
  1863: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
  1866: 98 bb 0c                 a4 = a4 >> 0xc
  1869: 78 65 02 01              u8 [s1 + 0x102] = s0
  1873: 52 0b 57 08              jump @246 if a4 != 0
      :                          @136
  1877: 98 77 0c                 a0 = a0 >> 0xc
  1880: 78 65 03 01              u8 [s1 + 0x103] = s0
  1884: 52 07 4d 08              jump @247 if a0 != 0
      :                          @137
  1888: 78 65 04 01              u8 [s1 + 0x104] = s0
  1892: 95 cc 05                 a5 = a5 + 0x5
  1895: 95 88 01                 a1 = a1 + 0x1
  1898: ab c9 b2                 jump @133 if a2 != a5
      :                          @138
  1901: 28 0b                    jump @141
      :                          @139
  1903: 33 04                    t2 = 0
  1905: 28 07                    jump @141
      :                          @140
  1907: 33 04 90 00              t2 = 0x90
  1911: 01                       fallthrough
      :                          @141
  1912: 95 19 3c 91 00           a2 = sp + 0x913c
  1917: 7a 94 10                 u32 [a2 + 0x10] = t2
  1920: 95 17 4c 91 00           a0 = sp + 0x914c
  1925: 95 18 58 24 01           a1 = sp + 0x12458
  1930: 7b 87                    u64 [a1] = a0
  1932: 33 07 76                 a0 = 0x76
  1935: 7b 87 08                 u64 [a1 + 0x8] = a0
  1938: 33 07 38 00 01           a0 = 0x10038
  1943: 7b 97 14                 u64 [a2 + 0x14] = a0
  1946: 49 19 1c 02              u64 [a2 + 28] = 0x2
  1950: 49 19 34                 u64 [a2 + 52] = 0
  1953: 95 17 58 24 01           a0 = sp + 0x12458
  1958: 7b 97 24                 u64 [a2 + 0x24] = a0
  1961: 49 19 2c 01              u64 [a2 + 44] = 0x1
  1965: 95 17 58 b4 01           a0 = sp + 0x1b458
  1970: 95 18 50 91 00           a1 = sp + 0x9150
  1975: 50 10 1a 45 0a           ra = 26, jump @309
      :                          @142 [@dyn 13]
  1980: 95 17 58 b4 01           a0 = sp + 0x1b458
  1985: 82 75 08                 s0 = u64 [a0 + 0x8]
  1988: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1991: 82 76                    s1 = u64 [a0]
  1993: 33 07 02                 a0 = 0x2
  1996: 33 08                    a1 = 0
  1998: 33 09                    a2 = 0
  2000: 64 5a                    a3 = s0
  2002: 33 00 1c                 ra = 0x1c
  2005: 0a 64                    ecalli 100 // 'log'
  2007: 01                       fallthrough
      :                          @143 [@dyn 14]
  2008: 82 17 08                 a0 = u64 [sp + 0x8]
  2011: c8 67 07                 a0 = a0 + s1
  2014: 53 37 00 00 f0 25        jump @149 if a0 <u 4293918720
      :                          @144
  2020: 33 07 10 00 03           a0 = 0x30010
  2025: 95 77 00 00 10           a0 = a0 + 0x100000
  2030: 01                       fallthrough
      :                          @145
  2031: 82 78                    a1 = u64 [a0]
  2033: c9 87 09                 a2 = a0 - a1
  2036: ab 59 0f                 jump @149 if a2 != s0
      :                          @146
  2039: c9 68 09                 a2 = a1 - s1
  2042: 01                       fallthrough
      :                          @147
  2043: 82 7a                    a3 = u64 [a0]
  2045: ab 8a f2                 jump @145 if a3 != a1
      :                          @148
  2048: 7b 79                    u64 [a0] = a2
  2050: 01                       fallthrough
      :                          @149
  2051: 95 17 3c 91 00           a0 = sp + 0x913c
  2056: 81 77 08                 a0 = i32 [a0 + 0x8]
  2059: 7b 17 00 01              u64 [sp + 0x100] = a0
  2063: 51 07 7c 06              jump @235 if a0 == 0
      :                          @150
  2067: 33 04                    t2 = 0
  2069: 95 18 50 91 00           a1 = sp + 0x9150
  2074: 95 87 81 91 00           a0 = a1 + 0x9181
  2079: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2083: 95 18 3c 01              a1 = sp + 0x13c
  2087: 95 15 50 91 00           s0 = sp + 0x9150
  2092: 95 5a 43 31              a3 = s0 + 0x3143
  2096: 7b 1a f0 00              u64 [sp + 0xf0] = a3
  2100: 95 5a 83 31              a3 = s0 + 0x3183
  2104: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  2108: 95 5a c3 31              a3 = s0 + 0x31c3
  2112: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  2116: 95 5b c3 61              a4 = s0 + 0x61c3
  2120: 7b 1b d8 00              u64 [sp + 0xd8] = a4
  2124: 95 5b 03 62              a4 = s0 + 0x6203
  2128: 7b 1b d0 00              u64 [sp + 0xd0] = a4
  2132: 95 87 00 10              a0 = a1 + 0x1000
  2136: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2140: 95 87 00 20              a0 = a1 + 0x2000
  2144: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2148: 95 87 00 30              a0 = a1 + 0x3000
  2152: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2156: 95 87 00 40              a0 = a1 + 0x4000
  2160: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2164: 95 87 00 50              a0 = a1 + 0x5000
  2168: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2172: 95 87 00 60              a0 = a1 + 0x6000
  2176: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2180: 95 87 00 70              a0 = a1 + 0x7000
  2184: 7b 17 98 00              u64 [sp + 0x98] = a0
  2188: 95 88 00 80 00           a1 = a1 + 0x8000
  2193: 7b 18 90 00              u64 [sp + 0x90] = a1
  2197: 95 58 43 62              a1 = s0 + 0x6243
  2201: 7b 18 88 00              u64 [sp + 0x88] = a1
  2205: 95 18 58 b4 01           a1 = sp + 0x1b458
  2210: 95 82 00 10              t0 = a1 + 0x1000
  2214: 7b 12 78                 u64 [sp + 0x78] = t0
  2217: 95 8b 00 20              a4 = a1 + 0x2000
  2221: 7b 1b 70                 u64 [sp + 0x70] = a4
  2224: 95 8c 00 40              a5 = a1 + 0x4000
  2228: 7b 1c 68                 u64 [sp + 0x68] = a5
  2231: 95 1c 58 24 01           a5 = sp + 0x12458
  2236: 95 cb 40 30              a4 = a5 + 0x3040
  2240: 7b 1b 60                 u64 [sp + 0x60] = a4
  2243: 95 86 00 50              s1 = a1 + 0x5000
  2247: 7b 16 58                 u64 [sp + 0x58] = s1
  2250: 33 06                    s1 = 0
  2252: 95 8b 00 30              a4 = a1 + 0x3000
  2256: 7b 1b 50                 u64 [sp + 0x50] = a4
  2259: 95 cb 00 30              a4 = a5 + 0x3000
  2263: 7b 1b 48                 u64 [sp + 0x48] = a4
  2266: 95 c9 80 30              a2 = a5 + 0x3080
  2270: 7b 19 40                 u64 [sp + 0x40] = a2
  2273: 95 83 00 70              t1 = a1 + 0x7000
  2277: 7b 13 38                 u64 [sp + 0x38] = t1
  2280: 95 87 00 80 00           a0 = a1 + 0x8000
  2285: 7b 17 30                 u64 [sp + 0x30] = a0
  2288: 95 88 00 60              a1 = a1 + 0x6000
  2292: 7b 18 28                 u64 [sp + 0x28] = a1
  2295: 95 c7 40 60              a0 = a5 + 0x6040
  2299: 7b 17 20                 u64 [sp + 0x20] = a0
  2302: 95 c7 00 60              a0 = a5 + 0x6000
  2306: 7b 17 18                 u64 [sp + 0x18] = a0
  2309: 95 c7 80 60              a0 = a5 + 0x6080
  2313: 7b 17 10                 u64 [sp + 0x10] = a0
  2316: 49 21 80 00 04 93 00     u64 [sp + 128] = 0x9304
  2323: 33 05 c2 00              s0 = 0xc2
  2327: 01                       fallthrough
      :                          @151
  2328: 95 17 50 91 00           a0 = sp + 0x9150
  2333: 33 08                    a1 = 0
  2335: 82 19 80 00              a2 = u64 [sp + 0x80]
  2339: 50 10 1e ef 0b           ra = 30, jump @377
      :                          @152 [@dyn 15]
  2344: 83 66 01                 i32 s1 = s1 + 0x1
  2347: 7b 16 08 01              u64 [sp + 0x108] = s1
  2351: 95 17 13 92 00           a0 = sp + 0x9213
  2356: 95 18 3c 01              a1 = sp + 0x13c
  2360: 33 0a 01                 a3 = 0x1
  2363: 95 13 50 91 00           t1 = sp + 0x9150
  2368: 33 02 40                 t0 = 0x40
  2371: 01                       fallthrough
      :                          @153
  2372: 64 a9                    a2 = a3
  2374: 33 0a 40                 a3 = 0x40
  2377: 64 7b                    a4 = a0
  2379: 64 8c                    a5 = a1
  2381: 01                       fallthrough
      :                          @154
  2382: 7c c6                    s1 = u8 [a5]
  2384: 78 b6                    u8 [a4] = s1
  2386: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2389: 95 cc 01                 a5 = a5 + 0x1
  2392: 95 bb 01                 a4 = a4 + 0x1
  2395: 52 0a f3                 jump @154 if a3 != 0
      :                          @155
  2398: 88 9a 40                 a3 = a2 <u 0x40
  2401: c8 9a 0a                 a3 = a3 + a2
  2404: 95 88 40                 a1 = a1 + 0x40
  2407: 95 77 c2 00              a0 = a0 + 0xc2
  2411: ac 29 d9                 jump @153 if a2 <u t0
      :                          @156
  2414: 33 0a 01                 a3 = 0x1
  2417: 95 17 53 92 00           a0 = sp + 0x9253
  2422: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  2426: 01                       fallthrough
      :                          @157
  2427: 64 a9                    a2 = a3
  2429: 33 0a 40                 a3 = 0x40
  2432: 64 7b                    a4 = a0
  2434: 64 8c                    a5 = a1
  2436: 01                       fallthrough
      :                          @158
  2437: 7c c6                    s1 = u8 [a5]
  2439: 78 b6                    u8 [a4] = s1
  2441: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2444: 95 cc 01                 a5 = a5 + 0x1
  2447: 95 bb 01                 a4 = a4 + 0x1
  2450: 52 0a f3                 jump @158 if a3 != 0
      :                          @159
  2453: 88 9a 40                 a3 = a2 <u 0x40
  2456: c8 9a 0a                 a3 = a3 + a2
  2459: 95 88 40                 a1 = a1 + 0x40
  2462: 95 77 c2 00              a0 = a0 + 0xc2
  2466: ac 29 d9                 jump @157 if a2 <u t0
      :                          @160
  2469: 33 0a 01                 a3 = 0x1
  2472: 95 17 93 92 00           a0 = sp + 0x9293
  2477: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  2481: 01                       fallthrough
      :                          @161
  2482: 64 a9                    a2 = a3
  2484: 33 0a 40                 a3 = 0x40
  2487: 64 7b                    a4 = a0
  2489: 64 8c                    a5 = a1
  2491: 01                       fallthrough
      :                          @162
  2492: 7c c6                    s1 = u8 [a5]
  2494: 78 b6                    u8 [a4] = s1
  2496: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2499: 95 cc 01                 a5 = a5 + 0x1
  2502: 95 bb 01                 a4 = a4 + 0x1
  2505: 52 0a f3                 jump @162 if a3 != 0
      :                          @163
  2508: 88 9a 40                 a3 = a2 <u 0x40
  2511: c8 9a 0a                 a3 = a3 + a2
  2514: 95 88 40                 a1 = a1 + 0x40
  2517: 95 77 c2 00              a0 = a0 + 0xc2
  2521: ac 29 d9                 jump @161 if a2 <u t0
      :                          @164
  2524: 33 0a 01                 a3 = 0x1
  2527: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  2531: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  2535: 01                       fallthrough
      :                          @165
  2536: 64 a9                    a2 = a3
  2538: 33 0a 40                 a3 = 0x40
  2541: 64 7b                    a4 = a0
  2543: 64 8c                    a5 = a1
  2545: 01                       fallthrough
      :                          @166
  2546: 7c c6                    s1 = u8 [a5]
  2548: 78 b6                    u8 [a4] = s1
  2550: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2553: 95 cc 01                 a5 = a5 + 0x1
  2556: 95 bb 01                 a4 = a4 + 0x1
  2559: 52 0a f3                 jump @166 if a3 != 0
      :                          @167
  2562: 88 9a 40                 a3 = a2 <u 0x40
  2565: c8 9a 0a                 a3 = a3 + a2
  2568: 95 88 40                 a1 = a1 + 0x40
  2571: 95 77 c2 00              a0 = a0 + 0xc2
  2575: ac 29 d9                 jump @165 if a2 <u t0
      :                          @168
  2578: 33 0a 01                 a3 = 0x1
  2581: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  2585: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  2589: 01                       fallthrough
      :                          @169
  2590: 64 a9                    a2 = a3
  2592: 33 0a 40                 a3 = 0x40
  2595: 64 7b                    a4 = a0
  2597: 64 8c                    a5 = a1
  2599: 01                       fallthrough
      :                          @170
  2600: 7c c6                    s1 = u8 [a5]
  2602: 78 b6                    u8 [a4] = s1
  2604: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2607: 95 cc 01                 a5 = a5 + 0x1
  2610: 95 bb 01                 a4 = a4 + 0x1
  2613: 52 0a f3                 jump @170 if a3 != 0
      :                          @171
  2616: 88 9a 40                 a3 = a2 <u 0x40
  2619: c8 9a 0a                 a3 = a3 + a2
  2622: 95 88 40                 a1 = a1 + 0x40
  2625: 95 77 c2 00              a0 = a0 + 0xc2
  2629: ac 29 d9                 jump @169 if a2 <u t0
      :                          @172
  2632: 33 0a 01                 a3 = 0x1
  2635: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  2639: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2643: 01                       fallthrough
      :                          @173
  2644: 64 a9                    a2 = a3
  2646: 33 0a 40                 a3 = 0x40
  2649: 64 7b                    a4 = a0
  2651: 64 8c                    a5 = a1
  2653: 01                       fallthrough
      :                          @174
  2654: 7c c6                    s1 = u8 [a5]
  2656: 78 b6                    u8 [a4] = s1
  2658: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2661: 95 cc 01                 a5 = a5 + 0x1
  2664: 95 bb 01                 a4 = a4 + 0x1
  2667: 52 0a f3                 jump @174 if a3 != 0
      :                          @175
  2670: 88 9a 40                 a3 = a2 <u 0x40
  2673: c8 9a 0a                 a3 = a3 + a2
  2676: 95 88 40                 a1 = a1 + 0x40
  2679: 95 77 c2 00              a0 = a0 + 0xc2
  2683: ac 29 d9                 jump @173 if a2 <u t0
      :                          @176
  2686: 33 0a 01                 a3 = 0x1
  2689: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2693: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2697: 01                       fallthrough
      :                          @177
  2698: 64 a9                    a2 = a3
  2700: 33 0a 40                 a3 = 0x40
  2703: 64 7b                    a4 = a0
  2705: 64 8c                    a5 = a1
  2707: 01                       fallthrough
      :                          @178
  2708: 7c c6                    s1 = u8 [a5]
  2710: 78 b6                    u8 [a4] = s1
  2712: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2715: 95 cc 01                 a5 = a5 + 0x1
  2718: 95 bb 01                 a4 = a4 + 0x1
  2721: 52 0a f3                 jump @178 if a3 != 0
      :                          @179
  2724: 88 9a 40                 a3 = a2 <u 0x40
  2727: c8 9a 0a                 a3 = a3 + a2
  2730: 95 88 40                 a1 = a1 + 0x40
  2733: 95 77 c2 00              a0 = a0 + 0xc2
  2737: ac 29 d9                 jump @177 if a2 <u t0
      :                          @180
  2740: 33 0a 01                 a3 = 0x1
  2743: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  2747: 82 18 98 00              a1 = u64 [sp + 0x98]
  2751: 01                       fallthrough
      :                          @181
  2752: 64 a9                    a2 = a3
  2754: 33 0a 40                 a3 = 0x40
  2757: 64 7b                    a4 = a0
  2759: 64 8c                    a5 = a1
  2761: 01                       fallthrough
      :                          @182
  2762: 7c c6                    s1 = u8 [a5]
  2764: 78 b6                    u8 [a4] = s1
  2766: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2769: 95 cc 01                 a5 = a5 + 0x1
  2772: 95 bb 01                 a4 = a4 + 0x1
  2775: 52 0a f3                 jump @182 if a3 != 0
      :                          @183
  2778: 88 9a 40                 a3 = a2 <u 0x40
  2781: c8 9a 0a                 a3 = a3 + a2
  2784: 95 88 40                 a1 = a1 + 0x40
  2787: 95 77 c2 00              a0 = a0 + 0xc2
  2791: ac 29 d9                 jump @181 if a2 <u t0
      :                          @184
  2794: 33 0a 01                 a3 = 0x1
  2797: 82 17 88 00              a0 = u64 [sp + 0x88]
  2801: 82 18 90 00              a1 = u64 [sp + 0x90]
  2805: 01                       fallthrough
      :                          @185
  2806: 64 a9                    a2 = a3
  2808: 33 0a 40                 a3 = 0x40
  2811: 64 7b                    a4 = a0
  2813: 64 8c                    a5 = a1
  2815: 01                       fallthrough
      :                          @186
  2816: 7c c6                    s1 = u8 [a5]
  2818: 78 b6                    u8 [a4] = s1
  2820: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2823: 95 cc 01                 a5 = a5 + 0x1
  2826: 95 bb 01                 a4 = a4 + 0x1
  2829: 52 0a f3                 jump @186 if a3 != 0
      :                          @187
  2832: 88 9a 40                 a3 = a2 <u 0x40
  2835: c8 9a 0a                 a3 = a3 + a2
  2838: 95 88 40                 a1 = a1 + 0x40
  2841: 95 77 c2 00              a0 = a0 + 0xc2
  2845: ac 29 d9                 jump @185 if a2 <u t0
      :                          @188
  2848: 33 07 01                 a0 = 0x1
  2851: 33 0c 00 90 00           a5 = 0x9000
  2856: 33 06 c0 00              s1 = 0xc0
  2860: 01                       fallthrough
      :                          @189
  2861: 88 78 c0 00              a1 = a0 <u 0xc0
  2865: c8 73 09                 a2 = t1 + a0
  2868: c8 c9 0a                 a3 = a2 + a5
  2871: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  2875: 95 77 01                 a0 = a0 + 0x1
  2878: da 86 07                 a0 = s1 if a1 == 0
  2881: 85 88 01                 a1 = a1 ^ 0x1
  2884: 78 9b                    u8 [a2] = a4
  2886: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  2890: 88 7b c1 00              a4 = a0 <u 0xc1
  2894: 85 bb 01                 a4 = a4 ^ 0x1
  2897: d4 b8 08                 a1 = a1 | a4
  2900: 78 a9 42 02              u8 [a3 + 0x242] = a2
  2904: 51 08 d5                 jump @189 if a1 == 0
      :                          @190
  2907: 33 07 01                 a0 = 0x1
  2910: 01                       fallthrough
      :                          @191
  2911: 88 78 c0 00              a1 = a0 <u 0xc0
  2915: ca 57 09                 a2 = a0 * s0
  2918: c8 39 09                 a2 = a2 + t1
  2921: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  2925: 85 8b 01                 a4 = a1 ^ 0x1
  2928: 95 77 01                 a0 = a0 + 0x1
  2931: da 86 07                 a0 = s1 if a1 == 0
  2934: 78 9a                    u8 [a2] = a3
  2936: 7c 98 01                 a1 = u8 [a2 + 0x1]
  2939: 88 7a c1 00              a3 = a0 <u 0xc1
  2943: 85 aa 01                 a3 = a3 ^ 0x1
  2946: d4 ba 0a                 a3 = a3 | a4
  2949: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  2953: 51 0a d6                 jump @191 if a3 == 0
      :                          @192
  2956: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  2960: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  2964: 95 19 3c 91 00           a2 = sp + 0x913c
  2969: 78 97 14                 u8 [a2 + 0x14] = a0
  2972: 7c a7                    a0 = u8 [a3]
  2974: 7c 98 96 01              a1 = u8 [a2 + 0x196]
  2978: 78 97 d5 00              u8 [a2 + 0xd5] = a0
  2982: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  2986: 7c 97 d7 00              a0 = u8 [a2 + 0xd7]
  2990: 78 a7 82 01              u8 [a3 + 0x182] = a0
  2994: 95 17 58 24 01           a0 = sp + 0x12458
  2999: 33 09 00 90 00           a2 = 0x9000
  3004: 33 08                    a1 = 0
  3006: 50 10 20 54 09           ra = 32, jump @377
      :                          @193 [@dyn 16]
  3011: 95 13 50 91 00           t1 = sp + 0x9150
  3016: 33 0b 01                 a4 = 0x1
  3019: 28 15                    jump @195
      :                          @194
  3021: 82 1b 18 01              a4 = u64 [sp + 0x118]
  3025: 88 b7 c1 00              a0 = a4 <u 0xc1
  3029: 82 18 10 01              a1 = u64 [sp + 0x110]
  3033: d2 87 07                 a0 = a0 & a1
  3036: 51 07 f0 00              jump @205 if a0 == 0
      :                          @195
  3040: 95 b7 ff                 a0 = a4 + 0xffffffffffffffff
  3043: 56 27 c1 00 c3 03        jump @244 if a0 >u 193
      :                          @196
  3049: 95 b8 01                 a1 = a4 + 0x1
  3052: 88 b9 c0 00              a2 = a4 <u 0xc0
  3056: 7b 18 20 01              u64 [sp + 0x120] = a1
  3060: 7b 19 10 01              u64 [sp + 0x110] = a2
  3064: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  3068: 7b 18 18 01              u64 [sp + 0x118] = a1
  3072: 33 0c 01                 a5 = 0x1
  3075: 7b 1b 30 01              u64 [sp + 0x130] = a4
  3079: 7b 17 28 01              u64 [sp + 0x128] = a0
  3083: 28 37                    jump @199
      :                          @197
  3085: 33 0a                    a3 = 0
  3087: 01                       fallthrough
      :                          @198
  3088: 88 c8 c0 00              a1 = a5 <u 0xc0
  3092: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  3096: 82 17 28 01              a0 = u64 [sp + 0x128]
  3100: 96 79 c0 00              a2 = a0 * 0xc0
  3104: 95 1b 58 24 01           a4 = sp + 0x12458
  3109: c8 b9 09                 a2 = a2 + a4
  3112: c8 09 09                 a2 = a2 + ra
  3115: 88 6b c1 00              a4 = s1 <u 0xc1
  3119: d2 b8 08                 a1 = a1 & a4
  3122: 78 9a                    u8 [a2] = a3
  3124: 64 6c                    a5 = s1
  3126: 95 13 50 91 00           t1 = sp + 0x9150
  3131: 82 1b 30 01              a4 = u64 [sp + 0x130]
  3135: 51 08 8e                 jump @194 if a1 == 0
      :                          @199
  3138: 95 c6 01                 s1 = a5 + 0x1
  3141: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  3144: 96 79 c2 00              a2 = a0 * 0xc2
  3148: c8 93 08                 a1 = t1 + a2
  3151: c8 08 0a                 a3 = a1 + ra
  3154: 7c aa                    a3 = u8 [a3]
  3156: c8 c8 09                 a2 = a1 + a5
  3159: 7c 99                    a2 = u8 [a2]
  3161: c8 68 08                 a1 = a1 + s1
  3164: 7c 88                    a1 = u8 [a1]
  3166: 96 bb c2 00              a4 = a4 * 0xc2
  3170: c8 b3 02                 t0 = t1 + a4
  3173: c8 02 0b                 a4 = t0 + ra
  3176: 7c bb                    a4 = u8 [a4]
  3178: c8 a9 09                 a2 = a2 + a3
  3181: c8 b8 08                 a1 = a1 + a4
  3184: c8 98 08                 a1 = a1 + a2
  3187: c8 62 09                 a2 = t0 + s1
  3190: 7c 99                    a2 = u8 [a2]
  3192: 82 17 20 01              a0 = u64 [sp + 0x120]
  3196: 96 7a c2 00              a3 = a0 * 0xc2
  3200: c8 a3 03                 t1 = t1 + a3
  3203: c8 03 0b                 a4 = t1 + ra
  3206: 7c bb                    a4 = u8 [a4]
  3208: c8 c3 0a                 a3 = t1 + a5
  3211: 7c a4                    t2 = u8 [a3]
  3213: c8 63 03                 t1 = t1 + s1
  3216: 7c 35                    s0 = u8 [t1]
  3218: c8 c2 02                 t0 = t0 + a5
  3221: 7c 2a                    a3 = u8 [t0]
  3223: c8 b9 09                 a2 = a2 + a4
  3226: c8 49 09                 a2 = a2 + t2
  3229: c8 98 08                 a1 = a1 + a2
  3232: be 58 09                 i32 a2 = a1 + s0
  3235: 51 0a 1a                 jump @203 if a3 == 0
      :                          @200
  3238: 33 05 c0 00              s0 = 0xc0
  3242: 52 1a 01 63 ff           jump @197 if a3 != 1
      :                          @201
  3247: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  3250: 33 0a 01                 a3 = 0x1
  3253: 52 19 02 58 ff           jump @197 if a2 != 2
      :                          @202
  3258: 28 56 ff                 jump @198
      :                          @203
  3261: 33 0a 01                 a3 = 0x1
  3264: 33 05 c0 00              s0 = 0xc0
  3268: 52 19 03 49 ff           jump @197 if a2 != 3
      :                          @204
  3273: 28 47 ff                 jump @198
      :                          @205
  3276: 95 17 58 b4 01           a0 = sp + 0x1b458
  3281: 33 09 00 90 00           a2 = 0x9000
  3286: 95 16 58 b4 01           s1 = sp + 0x1b458
  3291: 33 08                    a1 = 0
  3293: 50 10 22 35 08           ra = 34, jump @377
      :                          @206 [@dyn 17]
  3298: 33 07 40                 a0 = 0x40
  3301: 95 15 58 24 01           s0 = sp + 0x12458
  3306: 01                       fallthrough
      :                          @207
  3307: 7b 17 30 01              u64 [sp + 0x130] = a0
  3311: 33 09 40                 a2 = 0x40
  3314: 64 67                    a0 = s1
  3316: 64 58                    a1 = s0
  3318: 50 10 24 6a 07           ra = 36, jump @359
      :                          @208 [@dyn 18]
  3323: 82 17 30 01              a0 = u64 [sp + 0x130]
  3327: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3330: 95 55 c0 00              s0 = s0 + 0xc0
  3334: 95 66 40                 s1 = s1 + 0x40
  3337: 52 07 e2                 jump @207 if a0 != 0
      :                          @209
  3340: 33 07 40                 a0 = 0x40
  3343: 95 15 98 24 01           s0 = sp + 0x12498
  3348: 82 16 78                 s1 = u64 [sp + 0x78]
  3351: 01                       fallthrough
      :                          @210
  3352: 7b 17 30 01              u64 [sp + 0x130] = a0
  3356: 33 09 40                 a2 = 0x40
  3359: 64 67                    a0 = s1
  3361: 64 58                    a1 = s0
  3363: 50 10 26 3d 07           ra = 38, jump @359
      :                          @211 [@dyn 19]
  3368: 82 17 30 01              a0 = u64 [sp + 0x130]
  3372: 95 66 40                 s1 = s1 + 0x40
  3375: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3378: 95 55 c0 00              s0 = s0 + 0xc0
  3382: 52 07 e2                 jump @210 if a0 != 0
      :                          @212
  3385: 33 07 40                 a0 = 0x40
  3388: 95 15 d8 24 01           s0 = sp + 0x124d8
  3393: 82 16 70                 s1 = u64 [sp + 0x70]
  3396: 01                       fallthrough
      :                          @213
  3397: 7b 17 30 01              u64 [sp + 0x130] = a0
  3401: 33 09 40                 a2 = 0x40
  3404: 64 67                    a0 = s1
  3406: 64 58                    a1 = s0
  3408: 50 10 28 10 07           ra = 40, jump @359
      :                          @214 [@dyn 20]
  3413: 82 17 30 01              a0 = u64 [sp + 0x130]
  3417: 95 66 40                 s1 = s1 + 0x40
  3420: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3423: 95 55 c0 00              s0 = s0 + 0xc0
  3427: 52 07 e2                 jump @213 if a0 != 0
      :                          @215
  3430: 33 07 40                 a0 = 0x40
  3433: 82 15 48                 s0 = u64 [sp + 0x48]
  3436: 82 16 50                 s1 = u64 [sp + 0x50]
  3439: 01                       fallthrough
      :                          @216
  3440: 7b 17 30 01              u64 [sp + 0x130] = a0
  3444: 33 09 40                 a2 = 0x40
  3447: 64 67                    a0 = s1
  3449: 64 58                    a1 = s0
  3451: 50 10 2a e5 06           ra = 42, jump @359
      :                          @217 [@dyn 21]
  3456: 82 17 30 01              a0 = u64 [sp + 0x130]
  3460: 95 66 40                 s1 = s1 + 0x40
  3463: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3466: 95 55 c0 00              s0 = s0 + 0xc0
  3470: 52 07 e2                 jump @216 if a0 != 0
      :                          @218
  3473: 33 07 40                 a0 = 0x40
  3476: 82 15 60                 s0 = u64 [sp + 0x60]
  3479: 82 16 68                 s1 = u64 [sp + 0x68]
  3482: 01                       fallthrough
      :                          @219
  3483: 7b 17 30 01              u64 [sp + 0x130] = a0
  3487: 33 09 40                 a2 = 0x40
  3490: 64 67                    a0 = s1
  3492: 64 58                    a1 = s0
  3494: 50 10 2c ba 06           ra = 44, jump @359
      :                          @220 [@dyn 22]
  3499: 82 17 30 01              a0 = u64 [sp + 0x130]
  3503: 95 66 40                 s1 = s1 + 0x40
  3506: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3509: 95 55 c0 00              s0 = s0 + 0xc0
  3513: 52 07 e2                 jump @219 if a0 != 0
      :                          @221
  3516: 33 07 40                 a0 = 0x40
  3519: 82 15 40                 s0 = u64 [sp + 0x40]
  3522: 82 16 58                 s1 = u64 [sp + 0x58]
  3525: 01                       fallthrough
      :                          @222
  3526: 7b 17 30 01              u64 [sp + 0x130] = a0
  3530: 33 09 40                 a2 = 0x40
  3533: 64 67                    a0 = s1
  3535: 64 58                    a1 = s0
  3537: 50 10 2e 8f 06           ra = 46, jump @359
      :                          @223 [@dyn 23]
  3542: 82 17 30 01              a0 = u64 [sp + 0x130]
  3546: 95 66 40                 s1 = s1 + 0x40
  3549: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3552: 95 55 c0 00              s0 = s0 + 0xc0
  3556: 52 07 e2                 jump @222 if a0 != 0
      :                          @224
  3559: 33 07 40                 a0 = 0x40
  3562: 82 15 18                 s0 = u64 [sp + 0x18]
  3565: 82 16 28                 s1 = u64 [sp + 0x28]
  3568: 01                       fallthrough
      :                          @225
  3569: 7b 17 30 01              u64 [sp + 0x130] = a0
  3573: 33 09 40                 a2 = 0x40
  3576: 64 67                    a0 = s1
  3578: 64 58                    a1 = s0
  3580: 50 10 30 64 06           ra = 48, jump @359
      :                          @226 [@dyn 24]
  3585: 82 17 30 01              a0 = u64 [sp + 0x130]
  3589: 95 66 40                 s1 = s1 + 0x40
  3592: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3595: 95 55 c0 00              s0 = s0 + 0xc0
  3599: 52 07 e2                 jump @225 if a0 != 0
      :                          @227
  3602: 33 07 40                 a0 = 0x40
  3605: 82 15 20                 s0 = u64 [sp + 0x20]
  3608: 82 16 38                 s1 = u64 [sp + 0x38]
  3611: 01                       fallthrough
      :                          @228
  3612: 7b 17 30 01              u64 [sp + 0x130] = a0
  3616: 33 09 40                 a2 = 0x40
  3619: 64 67                    a0 = s1
  3621: 64 58                    a1 = s0
  3623: 50 10 32 39 06           ra = 50, jump @359
      :                          @229 [@dyn 25]
  3628: 82 17 30 01              a0 = u64 [sp + 0x130]
  3632: 95 66 40                 s1 = s1 + 0x40
  3635: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3638: 95 55 c0 00              s0 = s0 + 0xc0
  3642: 52 07 e2                 jump @228 if a0 != 0
      :                          @230
  3645: 33 07 40                 a0 = 0x40
  3648: 82 15 10                 s0 = u64 [sp + 0x10]
  3651: 82 16 30                 s1 = u64 [sp + 0x30]
  3654: 01                       fallthrough
      :                          @231
  3655: 7b 17 30 01              u64 [sp + 0x130] = a0
  3659: 33 09 40                 a2 = 0x40
  3662: 64 67                    a0 = s1
  3664: 64 58                    a1 = s0
  3666: 50 10 34 0e 06           ra = 52, jump @359
      :                          @232 [@dyn 26]
  3671: 82 17 30 01              a0 = u64 [sp + 0x130]
  3675: 95 66 40                 s1 = s1 + 0x40
  3678: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3681: 95 55 c0 00              s0 = s0 + 0xc0
  3685: 52 07 e2                 jump @231 if a0 != 0
      :                          @233
  3688: 95 17 3c 01              a0 = sp + 0x13c
  3692: 95 18 58 b4 01           a1 = sp + 0x1b458
  3697: 33 09 00 90 00           a2 = 0x9000
  3702: 50 10 36 ea 05           ra = 54, jump @359
      :                          @234 [@dyn 27]
  3707: 82 17 00 01              a0 = u64 [sp + 0x100]
  3711: 82 16 08 01              s1 = u64 [sp + 0x108]
  3715: 33 05 c2 00              s0 = 0xc2
  3719: ab 76 91 fa              jump @151 if s1 != a0
      :                          @235
  3723: 95 15 3c 01              s0 = sp + 0x13c
  3727: 33 06 00 10              s1 = 0x1000
  3731: 95 17 3c 01              a0 = sp + 0x13c
  3735: 33 08 00 10              a1 = 0x1000
  3739: 0a 13                    ecalli 19 // 'export'
  3741: c8 65 07                 a0 = s0 + s1
  3744: 33 08 00 10              a1 = 0x1000
  3748: 0a 13                    ecalli 19 // 'export'
  3750: 95 57 00 20              a0 = s0 + 0x2000
  3754: 33 08 00 10              a1 = 0x1000
  3758: 0a 13                    ecalli 19 // 'export'
  3760: 95 57 00 30              a0 = s0 + 0x3000
  3764: 33 08 00 10              a1 = 0x1000
  3768: 0a 13                    ecalli 19 // 'export'
  3770: 95 57 00 40              a0 = s0 + 0x4000
  3774: 33 08 00 10              a1 = 0x1000
  3778: 0a 13                    ecalli 19 // 'export'
  3780: 95 57 00 50              a0 = s0 + 0x5000
  3784: 33 08 00 10              a1 = 0x1000
  3788: 0a 13                    ecalli 19 // 'export'
  3790: 95 57 00 60              a0 = s0 + 0x6000
  3794: 33 08 00 10              a1 = 0x1000
  3798: 0a 13                    ecalli 19 // 'export'
  3800: 95 57 00 70              a0 = s0 + 0x7000
  3804: 33 08 00 10              a1 = 0x1000
  3808: 0a 13                    ecalli 19 // 'export'
  3810: 95 57 00 80 00           a0 = s0 + 0x8000
  3815: 33 08 00 10              a1 = 0x1000
  3819: 0a 13                    ecalli 19 // 'export'
  3821: 95 17 3c 91 00           a0 = sp + 0x913c
  3826: 95 18 58 b4 01           a1 = sp + 0x1b458
  3831: 7b 87                    u64 [a1] = a0
  3833: 33 07 06                 a0 = 0x6
  3836: 7b 87 08                 u64 [a1 + 0x8] = a0
  3839: 33 07 28 00 01           a0 = 0x10028
  3844: 7b 87 10                 u64 [a1 + 0x10] = a0
  3847: 33 07 0a                 a0 = 0xa
  3850: 7b 87 18                 u64 [a1 + 0x18] = a0
  3853: 33 07 10 01 01           a0 = 0x10110
  3858: 95 18 3c 91 00           a1 = sp + 0x913c
  3863: 7b 87 14                 u64 [a1 + 0x14] = a0
  3866: 49 18 1c 03              u64 [a1 + 28] = 0x3
  3870: 95 17 58 b4 01           a0 = sp + 0x1b458
  3875: 7b 87 24                 u64 [a1 + 0x24] = a0
  3878: 49 18 2c 02              u64 [a1 + 44] = 0x2
  3882: 49 18 34                 u64 [a1 + 52] = 0
  3885: 95 17 58 24 01           a0 = sp + 0x12458
  3890: 95 18 50 91 00           a1 = sp + 0x9150
  3895: 50 10 38 c5 02           ra = 56, jump @309
      :                          @236 [@dyn 28]
  3900: 95 17 58 24 01           a0 = sp + 0x12458
  3905: 82 75 08                 s0 = u64 [a0 + 0x8]
  3908: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3911: 82 76                    s1 = u64 [a0]
  3913: 33 07 02                 a0 = 0x2
  3916: 33 08                    a1 = 0
  3918: 33 09                    a2 = 0
  3920: 64 5a                    a3 = s0
  3922: 33 00 3a                 ra = 0x3a
  3925: 0a 64                    ecalli 100 // 'log'
  3927: 01                       fallthrough
      :                          @237 [@dyn 29]
  3928: 82 17 08                 a0 = u64 [sp + 0x8]
  3931: c8 67 07                 a0 = a0 + s1
  3934: 53 37 00 00 f0 27        jump @243 if a0 <u 4293918720
      :                          @238
  3940: 33 07 10 00 03           a0 = 0x30010
  3945: 95 77 00 00 10           a0 = a0 + 0x100000
  3950: 01                       fallthrough
      :                          @239
  3951: 82 78                    a1 = u64 [a0]
  3953: c9 87 09                 a2 = a0 - a1
  3956: ab 59 11                 jump @243 if a2 != s0
      :                          @240
  3959: c9 68 09                 a2 = a1 - s1
  3962: 01                       fallthrough
      :                          @241
  3963: 82 7a                    a3 = u64 [a0]
  3965: ab 8a f2                 jump @239 if a3 != a1
      :                          @242
  3968: 7b 79                    u64 [a0] = a2
  3970: 33 0b                    a4 = 0
  3972: 01                       fallthrough
      :                          @243
  3973: 33 07 00 00 01           a0 = 0x10000
  3978: 33 08                    a1 = 0
  3980: 33 09 78 3c 02           a2 = 0x23c78
  3985: c8 91 01                 sp = sp + a2
  3988: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3992: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3996: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  4000: 95 11 f8 07              sp = sp + 0x7f8
  4004: 32 00                    ret
      :                          @244
  4006: 00                       trap
      :                          @245
  4007: 00                       trap
      :                          @246
  4008: 00                       trap
      :                          @247
  4009: 00                       trap
      :                          @248
  4010: 00                       trap
      :                          @249
  4011: 00                       trap
      :                          @250
  4012: 00                       trap
      :                          @251 [export #1: 'accumulate']
  4013: 33 07 00 00 01           a0 = 0x10000
  4018: 33 08                    a1 = 0
  4020: 32 00                    ret
      :                          @252 [export #2: 'on_transfer']
  4022: 33 07 00 00 01           a0 = 0x10000
  4027: 33 08                    a1 = 0
  4029: 32 00                    ret
      :                          @253
  4031: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4034: 7b 10 40                 u64 [sp + 0x40] = ra
  4037: 7b 15 38                 u64 [sp + 0x38] = s0
  4040: 7b 16 30                 u64 [sp + 0x30] = s1
  4043: c8 89 09                 a2 = a2 + a1
  4046: ac 89 52                 jump @261 if a2 <u a1
      :                          @254
  4049: 64 75                    s0 = a0
  4051: 82 77                    a0 = u64 [a0]
  4053: 97 78 01                 a1 = a0 << 0x1
  4056: 33 0a 08                 a3 = 0x8
  4059: e4 a9 09                 a2 = maxu(a2, a3)
  4062: e4 98 06                 s1 = maxu(a1, a2)
  4065: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4068: 98 88 3f                 a1 = a1 >> 0x3f
  4071: 51 07 12                 jump @256 if a0 == 0
      :                          @255
  4074: 82 59 08                 a2 = u64 [s0 + 0x8]
  4077: 7b 19 18                 u64 [sp + 0x18] = a2
  4080: 49 11 20 01              u64 [sp + 32] = 0x1
  4084: 7b 17 28                 u64 [sp + 0x28] = a0
  4087: 28 06                    jump @257
      :                          @256
  4089: 49 11 20                 u64 [sp + 32] = 0
  4092: 01                       fallthrough
      :                          @257
  4093: 64 17                    a0 = sp
  4095: 95 1a 18                 a3 = sp + 0x18
  4098: 64 69                    a2 = s1
  4100: 50 10 3c 32              ra = 60, jump @265
      :                          @258 [@dyn 30]
  4104: 82 18                    a1 = u64 [sp]
  4106: 82 17 08                 a0 = u64 [sp + 0x8]
  4109: 51 08 14                 jump @262 if a1 == 0
      :                          @259
  4112: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4122: aa 87 0d                 jump @263 if a0 == a1
      :                          @260
  4125: 52 07 18                 jump @264 if a0 != 0
      :                          @261
  4128: 00                       trap
      :                          @262
  4129: 7b 57 08                 u64 [s0 + 0x8] = a0
  4132: 7b 56                    u64 [s0] = s1
  4134: 01                       fallthrough
      :                          @263
  4135: 82 10 40                 ra = u64 [sp + 0x40]
  4138: 82 15 38                 s0 = u64 [sp + 0x38]
  4141: 82 16 30                 s1 = u64 [sp + 0x30]
  4144: 95 11 48                 sp = sp + 0x48
  4147: 32 00                    ret
      :                          @264
  4149: 00                       trap
      :                          @265
  4150: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4153: 7b 10 30                 u64 [sp + 0x30] = ra
  4156: 7b 15 28                 u64 [sp + 0x28] = s0
  4159: 7b 16 20                 u64 [sp + 0x20] = s1
  4162: 64 95                    s0 = a2
  4164: 64 72                    t0 = a0
  4166: 51 08 79                 jump @275 if a1 == 0
      :                          @266
  4169: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4172: 51 07 7c                 jump @276 if a0 == 0
      :                          @267
  4175: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4178: 51 09 aa 00              jump @283 if a2 == 0
      :                          @268
  4182: 82 a8                    a1 = u64 [a3]
  4184: 33 06 10 00 03           s1 = 0x30010
  4189: 33 03 00 00 10           t1 = 0x100000
  4194: c8 36 06                 s1 = s1 + t1
  4197: 01                       fallthrough
      :                          @269
  4198: 82 6a                    a3 = u64 [s1]
  4200: c8 5a 07                 a0 = a3 + s0
  4203: ac a7 cf 00              jump @289 if a0 <u a3
      :                          @270
  4207: 95 7b 01                 a4 = a0 + 0x1
  4210: 88 bc 01                 a5 = a4 <u 0x1
  4213: d8 b3 0b                 a4 = t1 <u a4
  4216: d4 cb 0b                 a4 = a4 | a5
  4219: 52 0b bf 00              jump @289 if a4 != 0
      :                          @271
  4223: 82 6b                    a4 = u64 [s1]
  4225: ab ab e5                 jump @269 if a4 != a3
      :                          @272
  4228: 7b 67                    u64 [s1] = a0
  4230: 33 0c                    a5 = 0
  4232: 7b 12 18                 u64 [sp + 0x18] = t0
  4235: 33 0a 10 00 03           a3 = 0x30010
  4240: 33 0b 00 00 10           a4 = 0x100000
  4245: 7b 1a                    u64 [sp] = a3
  4247: c8 ba 0a                 a3 = a3 + a4
  4250: c9 7a 07                 a0 = a3 - a0
  4253: 7b 17 10                 u64 [sp + 0x10] = a0
  4256: 7b 18 08                 u64 [sp + 0x8] = a1
  4259: 64 96                    s1 = a2
  4261: 50 10 3e bb 03           ra = 62, jump @359
      :                          @273 [@dyn 31]
  4266: 54 36 00 00 10 98 00     jump @290 if s1 <=u 1048576
      :                          @274
  4273: 82 12 18                 t0 = u64 [sp + 0x18]
  4276: 82 18 10                 a1 = u64 [sp + 0x10]
  4279: 33 07                    a0 = 0
  4281: 7b 28 08                 u64 [t0 + 0x8] = a1
  4284: 28 b5 00                 jump @296
      :                          @275
  4287: 49 12 08                 u64 [t0 + 8] = 0
  4290: 33 07 01                 a0 = 0x1
  4293: 28 ac 00                 jump @296
      :                          @276
  4296: 33 09 10 00 03           a2 = 0x30010
  4301: 33 07 00 00 10           a0 = 0x100000
  4306: c8 79 09                 a2 = a2 + a0
  4309: 01                       fallthrough
      :                          @277
  4310: 82 9a                    a3 = u64 [a2]
  4312: c8 5a 08                 a1 = a3 + s0
  4315: ac a8 5f                 jump @289 if a1 <u a3
      :                          @278
  4318: 95 8b 01                 a4 = a1 + 0x1
  4321: 88 bc 01                 a5 = a4 <u 0x1
  4324: d8 b7 0b                 a4 = a0 <u a4
  4327: d4 cb 0b                 a4 = a4 | a5
  4330: 52 0b 50                 jump @289 if a4 != 0
      :                          @279
  4333: 82 9b                    a4 = u64 [a2]
  4335: ab ab e7                 jump @277 if a4 != a3
      :                          @280
  4338: 7b 98                    u64 [a2] = a1
  4340: 33 0c                    a5 = 0
  4342: 01                       fallthrough
      :                          @281
  4343: ab ab df                 jump @277 if a4 != a3
      :                          @282
  4346: 28 31                    jump @288
      :                          @283
  4348: 33 09 10 00 03           a2 = 0x30010
  4353: 33 07 00 00 10           a0 = 0x100000
  4358: c8 79 09                 a2 = a2 + a0
  4361: 01                       fallthrough
      :                          @284
  4362: 82 9a                    a3 = u64 [a2]
  4364: c8 5a 08                 a1 = a3 + s0
  4367: ac a8 2b                 jump @289 if a1 <u a3
      :                          @285
  4370: 95 8b 01                 a4 = a1 + 0x1
  4373: 88 bc 01                 a5 = a4 <u 0x1
  4376: d8 b7 0b                 a4 = a0 <u a4
  4379: d4 cb 0b                 a4 = a4 | a5
  4382: 52 0b 1c                 jump @289 if a4 != 0
      :                          @286
  4385: 82 9b                    a4 = u64 [a2]
  4387: ab ab e7                 jump @284 if a4 != a3
      :                          @287
  4390: 7b 98                    u64 [a2] = a1
  4392: 33 0c                    a5 = 0
  4394: 01                       fallthrough
      :                          @288
  4395: 33 07 10 00 13           a0 = 0x130010
  4400: c9 87 08                 a1 = a0 - a1
  4403: 33 07                    a0 = 0
  4405: 7b 28 08                 u64 [t0 + 0x8] = a1
  4408: 28 39                    jump @296
      :                          @289
  4410: 33 07 01                 a0 = 0x1
  4413: 7b 27 08                 u64 [t0 + 0x8] = a0
  4416: 28 31                    jump @296
      :                          @290
  4418: 64 6c                    a5 = s1
  4420: 82 17                    a0 = u64 [sp]
  4422: 95 77 00 00 10           a0 = a0 + 0x100000
  4427: 82 12 18                 t0 = u64 [sp + 0x18]
  4430: 82 16 08                 s1 = u64 [sp + 0x8]
  4433: 01                       fallthrough
      :                          @291
  4434: 82 78                    a1 = u64 [a0]
  4436: c9 87 09                 a2 = a0 - a1
  4439: ab 69 11                 jump @295 if a2 != s1
      :                          @292
  4442: c9 c8 09                 a2 = a1 - a5
  4445: 01                       fallthrough
      :                          @293
  4446: 82 7a                    a3 = u64 [a0]
  4448: ab 8a f2                 jump @291 if a3 != a1
      :                          @294
  4451: 7b 79                    u64 [a0] = a2
  4453: 33 0b                    a4 = 0
  4455: 01                       fallthrough
      :                          @295
  4456: 82 18 10                 a1 = u64 [sp + 0x10]
  4459: 33 07                    a0 = 0
  4461: 7b 28 08                 u64 [t0 + 0x8] = a1
  4464: 01                       fallthrough
      :                          @296
  4465: 7b 25 10                 u64 [t0 + 0x10] = s0
  4468: 7b 27                    u64 [t0] = a0
  4470: 82 10 30                 ra = u64 [sp + 0x30]
  4473: 82 15 28                 s0 = u64 [sp + 0x28]
  4476: 82 16 20                 s1 = u64 [sp + 0x20]
  4479: 95 11 38                 sp = sp + 0x38
  4482: 32 00                    ret
      :                          @297
  4484: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4487: 7b 10 40                 u64 [sp + 0x40] = ra
  4490: 7b 15 38                 u64 [sp + 0x38] = s0
  4493: 7b 16 30                 u64 [sp + 0x30] = s1
  4496: 95 88 01                 a1 = a1 + 0x1
  4499: 51 08 53                 jump @305 if a1 == 0
      :                          @298
  4502: 64 75                    s0 = a0
  4504: 82 77                    a0 = u64 [a0]
  4506: 97 79 01                 a2 = a0 << 0x1
  4509: 33 0a 08                 a3 = 0x8
  4512: e4 a8 08                 a1 = maxu(a1, a3)
  4515: e4 89 06                 s1 = maxu(a2, a1)
  4518: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4521: 98 88 3f                 a1 = a1 >> 0x3f
  4524: 51 07 12                 jump @300 if a0 == 0
      :                          @299
  4527: 82 59 08                 a2 = u64 [s0 + 0x8]
  4530: 7b 19 18                 u64 [sp + 0x18] = a2
  4533: 49 11 20 01              u64 [sp + 32] = 0x1
  4537: 7b 17 28                 u64 [sp + 0x28] = a0
  4540: 28 06                    jump @301
      :                          @300
  4542: 49 11 20                 u64 [sp + 32] = 0
  4545: 01                       fallthrough
      :                          @301
  4546: 64 17                    a0 = sp
  4548: 95 1a 18                 a3 = sp + 0x18
  4551: 64 69                    a2 = s1
  4553: 50 10 40 6d fe           ra = 64, jump @265
      :                          @302 [@dyn 32]
  4558: 82 18                    a1 = u64 [sp]
  4560: 82 17 08                 a0 = u64 [sp + 0x8]
  4563: 51 08 14                 jump @306 if a1 == 0
      :                          @303
  4566: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4576: aa 87 0d                 jump @307 if a0 == a1
      :                          @304
  4579: 52 07 18                 jump @308 if a0 != 0
      :                          @305
  4582: 00                       trap
      :                          @306
  4583: 7b 57 08                 u64 [s0 + 0x8] = a0
  4586: 7b 56                    u64 [s0] = s1
  4588: 01                       fallthrough
      :                          @307
  4589: 82 10 40                 ra = u64 [sp + 0x40]
  4592: 82 15 38                 s0 = u64 [sp + 0x38]
  4595: 82 16 30                 s1 = u64 [sp + 0x30]
  4598: 95 11 48                 sp = sp + 0x48
  4601: 32 00                    ret
      :                          @308
  4603: 00                       trap
      :                          @309
  4604: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4607: 7b 10 30                 u64 [sp + 0x30] = ra
  4610: 7b 15 28                 u64 [sp + 0x28] = s0
  4613: 7b 16 20                 u64 [sp + 0x20] = s1
  4616: 82 8a 08                 a3 = u64 [a1 + 0x8]
  4619: 64 75                    s0 = a0
  4621: 51 0a 35                 jump @314 if a3 == 0
      :                          @310
  4624: 82 89                    a2 = u64 [a1]
  4626: 33 07                    a0 = 0
  4628: 95 9b 08                 a4 = a2 + 0x8
  4631: 01                       fallthrough
      :                          @311
  4632: 82 bc                    a5 = u64 [a4]
  4634: c8 c7 07                 a0 = a0 + a5
  4637: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4640: 95 bb 10                 a4 = a4 + 0x10
  4643: 52 0a f5                 jump @311 if a3 != 0
      :                          @312
  4646: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4649: 51 0a 24                 jump @316 if a3 == 0
      :                          @313
  4652: 82 99 08                 a2 = u64 [a2 + 0x8]
  4655: 8e 99                    a2 = a2 >u 0
  4657: 88 7a 10                 a3 = a0 <u 0x10
  4660: 85 aa 01                 a3 = a3 ^ 0x1
  4663: d4 a9 09                 a2 = a2 | a3
  4666: 89 7a                    a3 = a0 <s 0
  4668: e0 a9 09                 a2 = a2 & ~a3
  4671: 52 09 0a                 jump @315 if a2 != 0
      :                          @314
  4674: 33 07                    a0 = 0
  4676: 33 09 01                 a2 = 0x1
  4679: 28 4a                    jump @324
      :                          @315
  4681: 97 77 01                 a0 = a0 << 0x1
  4684: 01                       fallthrough
      :                          @316
  4685: 51 07 40                 jump @323 if a0 == 0
      :                          @317
  4688: 57 07 73                 jump @329 if a0 <s 0
      :                          @318
  4691: 64 52                    t0 = s0
  4693: 33 0b 10 00 03           a4 = 0x30010
  4698: 33 09 00 00 10           a2 = 0x100000
  4703: c8 9b 0b                 a4 = a4 + a2
  4706: 01                       fallthrough
      :                          @319
  4707: 82 bc                    a5 = u64 [a4]
  4709: c8 7c 0a                 a3 = a5 + a0
  4712: ac ca 59                 jump @327 if a3 <u a5
      :                          @320
  4715: 95 a5 01                 s0 = a3 + 0x1
  4718: 88 56 01                 s1 = s0 <u 0x1
  4721: d8 59 05                 s0 = a2 <u s0
  4724: d4 65 05                 s0 = s0 | s1
  4727: 52 05 4a                 jump @327 if s0 != 0
      :                          @321
  4730: 82 b6                    s1 = u64 [a4]
  4732: ab c6 e7                 jump @319 if s1 != a5
      :                          @322
  4735: 7b ba                    u64 [a4] = a3
  4737: 33 09 10 00 13           a2 = 0x130010
  4742: c9 a9 09                 a2 = a2 - a3
  4745: 64 25                    s0 = t0
  4747: 28 06                    jump @324
      :                          @323
  4749: 33 09 01                 a2 = 0x1
  4752: 01                       fallthrough
      :                          @324
  4753: 7b 17                    u64 [sp] = a0
  4755: 7b 19 08                 u64 [sp + 0x8] = a2
  4758: 49 11 10                 u64 [sp + 16] = 0
  4761: 64 17                    a0 = sp
  4763: 50 10 42 84 06           ra = 66, jump @456
      :                          @325 [@dyn 33]
  4768: 52 07 22                 jump @328 if a0 != 0
      :                          @326
  4771: 82 17 10                 a0 = u64 [sp + 0x10]
  4774: 82 18 08                 a1 = u64 [sp + 0x8]
  4777: 82 19                    a2 = u64 [sp]
  4779: 7b 57 10                 u64 [s0 + 0x10] = a0
  4782: 7b 58 08                 u64 [s0 + 0x8] = a1
  4785: 7b 59                    u64 [s0] = a2
  4787: 82 10 30                 ra = u64 [sp + 0x30]
  4790: 82 15 28                 s0 = u64 [sp + 0x28]
  4793: 82 16 20                 s1 = u64 [sp + 0x20]
  4796: 95 11 38                 sp = sp + 0x38
  4799: 32 00                    ret
      :                          @327
  4801: 00                       trap
      :                          @328
  4802: 00                       trap
      :                          @329
  4803: 00                       trap
      :                          @330 [@dyn 34]
  4804: 82 72                    t0 = u64 [a0]
  4806: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  4811: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  4816: ac 9a 28                 jump @336 if a3 <u a2
      :                          @331
  4819: 82 77 08                 a0 = u64 [a0 + 0x8]
  4822: 33 09 10 00 03           a2 = 0x30010
  4827: 95 99 00 00 10           a2 = a2 + 0x100000
  4832: 01                       fallthrough
      :                          @332
  4833: 82 9a                    a3 = u64 [a2]
  4835: c9 a9 0b                 a4 = a2 - a3
  4838: ab 7b 12                 jump @336 if a4 != a0
      :                          @333
  4841: c9 2a 0b                 a4 = a3 - t0
  4844: 01                       fallthrough
      :                          @334
  4845: 82 9c                    a5 = u64 [a2]
  4847: ab ac f2                 jump @332 if a5 != a3
      :                          @335
  4850: 7b 9b                    u64 [a2] = a4
  4852: 33 08                    a1 = 0
  4854: 32 00                    ret
      :                          @336
  4856: 32 00                    ret
      :                          @337 [@dyn 35]
  4858: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4861: 7b 10 18                 u64 [sp + 0x18] = ra
  4864: 7b 15 10                 u64 [sp + 0x10] = s0
  4867: 7b 16 08                 u64 [sp + 0x8] = s1
  4870: 64 75                    s0 = a0
  4872: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4875: 82 77                    a0 = u64 [a0]
  4877: c9 a7 07                 a0 = a0 - a3
  4880: 64 96                    s1 = a2
  4882: ac 97 2a                 jump @340 if a0 <u a2
      :                          @338
  4885: 7b 1a                    u64 [sp] = a3
  4887: 82 57 08                 a0 = u64 [s0 + 0x8]
  4890: c8 a7 07                 a0 = a0 + a3
  4893: 64 69                    a2 = s1
  4895: 50 10 48 41 01           ra = 72, jump @359
      :                          @339 [@dyn 36]
  4900: 82 17                    a0 = u64 [sp]
  4902: c8 76 06                 s1 = s1 + a0
  4905: 7b 56 10                 u64 [s0 + 0x10] = s1
  4908: 33 07                    a0 = 0
  4910: 82 10 18                 ra = u64 [sp + 0x18]
  4913: 82 15 10                 s0 = u64 [sp + 0x10]
  4916: 82 16 08                 s1 = u64 [sp + 0x8]
  4919: 95 11 20                 sp = sp + 0x20
  4922: 32 00                    ret
      :                          @340
  4924: 64 57                    a0 = s0
  4926: 7b 18                    u64 [sp] = a1
  4928: 64 a8                    a1 = a3
  4930: 64 69                    a2 = s1
  4932: 50 10 4a 7b fc           ra = 74, jump @253
      :                          @341 [@dyn 37]
  4937: 82 18                    a1 = u64 [sp]
  4939: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4942: 28 c7                    jump @338
      :                          @342 [@dyn 38]
  4944: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4947: 7b 10 20                 u64 [sp + 0x20] = ra
  4950: 7b 15 18                 u64 [sp + 0x18] = s0
  4953: 7b 16 10                 u64 [sp + 0x10] = s1
  4956: 64 86                    s1 = a1
  4958: 83 88                    i32 a1 = a1 + 0
  4960: 33 09 80 00              a2 = 0x80
  4964: 64 7a                    a3 = a0
  4966: ae 98 2b                 jump @347 if a1 >=u a2
      :                          @343
  4969: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4972: 82 a7                    a0 = u64 [a3]
  4974: ab 78 12                 jump @346 if a1 != a0
      :                          @344
  4977: 64 a7                    a0 = a3
  4979: 64 a5                    s0 = a3
  4981: 50 10 4e 0f fe           ra = 78, jump @297
      :                          @345 [@dyn 39]
  4986: 64 5a                    a3 = s0
  4988: 82 58 10                 a1 = u64 [s0 + 0x10]
  4991: 01                       fallthrough
      :                          @346
  4992: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4995: c8 87 07                 a0 = a0 + a1
  4998: 78 76                    u8 [a0] = s1
  5000: 95 88 01                 a1 = a1 + 0x1
  5003: 7b a8 10                 u64 [a3 + 0x10] = a1
  5006: 28 ab 00                 jump @355
      :                          @347
  5009: 8b 67 0b                 i32 a0 = s1 >> 0xb
  5012: 48 11 0c                 u32 [sp + 12] = 0
  5015: 52 07 1c                 jump @349 if a0 != 0
      :                          @348
  5018: 98 67 06                 a0 = s1 >> 0x6
  5021: 86 77 c0 00              a0 = a0 | 0xc0
  5025: 78 17 0c                 u8 [sp + 0xc] = a0
  5028: 84 67 3f                 a0 = s1 & 0x3f
  5031: 86 77 80 00              a0 = a0 | 0x80
  5035: 78 17 0d                 u8 [sp + 0xd] = a0
  5038: 33 06 02                 s1 = 0x2
  5041: 28 63                    jump @352
      :                          @349
  5043: 8b 67 10                 i32 a0 = s1 >> 0x10
  5046: 52 07 29                 jump @351 if a0 != 0
      :                          @350
  5049: 98 67 0c                 a0 = s1 >> 0xc
  5052: 86 77 e0 00              a0 = a0 | 0xe0
  5056: 78 17 0c                 u8 [sp + 0xc] = a0
  5059: 97 67 34                 a0 = s1 << 0x34
  5062: 98 77 3a                 a0 = a0 >> 0x3a
  5065: 95 77 80 00              a0 = a0 + 0x80
  5069: 78 17 0d                 u8 [sp + 0xd] = a0
  5072: 84 67 3f                 a0 = s1 & 0x3f
  5075: 86 77 80 00              a0 = a0 | 0x80
  5079: 78 17 0e                 u8 [sp + 0xe] = a0
  5082: 33 06 03                 s1 = 0x3
  5085: 28 37                    jump @352
      :                          @351
  5087: 97 67 2b                 a0 = s1 << 0x2b
  5090: 98 77 3d                 a0 = a0 >> 0x3d
  5093: 95 77 f0 00              a0 = a0 + 0xf0
  5097: 78 17 0c                 u8 [sp + 0xc] = a0
  5100: 97 67 2e                 a0 = s1 << 0x2e
  5103: 98 77 3a                 a0 = a0 >> 0x3a
  5106: 95 77 80 00              a0 = a0 + 0x80
  5110: 78 17 0d                 u8 [sp + 0xd] = a0
  5113: 97 67 34                 a0 = s1 << 0x34
  5116: 98 77 3a                 a0 = a0 >> 0x3a
  5119: 95 77 80 00              a0 = a0 + 0x80
  5123: 78 17 0e                 u8 [sp + 0xe] = a0
  5126: 84 67 3f                 a0 = s1 & 0x3f
  5129: 86 77 80 00              a0 = a0 | 0x80
  5133: 78 17 0f                 u8 [sp + 0xf] = a0
  5136: 33 06 04                 s1 = 0x4
  5139: 01                       fallthrough
      :                          @352
  5140: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5143: 82 a7                    a0 = u64 [a3]
  5145: c9 57 07                 a0 = a0 - s0
  5148: ac 67 2d                 jump @356 if a0 <u s1
      :                          @353
  5151: 7b 1a                    u64 [sp] = a3
  5153: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5156: c8 57 07                 a0 = a0 + s0
  5159: 95 18 0c                 a1 = sp + 0xc
  5162: 64 69                    a2 = s1
  5164: 50 10 50 34              ra = 80, jump @359
      :                          @354 [@dyn 40]
  5168: c8 56 06                 s1 = s1 + s0
  5171: 82 17                    a0 = u64 [sp]
  5173: 7b 76 10                 u64 [a0 + 0x10] = s1
  5176: 01                       fallthrough
      :                          @355
  5177: 33 07                    a0 = 0
  5179: 82 10 20                 ra = u64 [sp + 0x20]
  5182: 82 15 18                 s0 = u64 [sp + 0x18]
  5185: 82 16 10                 s1 = u64 [sp + 0x10]
  5188: 95 11 28                 sp = sp + 0x28
  5191: 32 00                    ret
      :                          @356
  5193: 64 a7                    a0 = a3
  5195: 64 58                    a1 = s0
  5197: 64 69                    a2 = s1
  5199: 64 a5                    s0 = a3
  5201: 50 10 52 6e fb           ra = 82, jump @253
      :                          @357 [@dyn 41]
  5206: 64 5a                    a3 = s0
  5208: 82 55 10                 s0 = u64 [s0 + 0x10]
  5211: 28 c4                    jump @353
      :                          @358 [@dyn 42]
  5213: 28 c2 04                 jump @456
      :                          @359
  5216: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5219: 7b 10 18                 u64 [sp + 0x18] = ra
  5222: 7b 15 10                 u64 [sp + 0x10] = s0
  5225: 7b 16 08                 u64 [sp + 0x8] = s1
  5228: 53 19 10 64              jump @368 if a2 <u 16
      :                          @360
  5232: 8d 7a                    i32 a3 = -a0
  5234: 84 a2 07                 t0 = a3 & 0x7
  5237: c8 27 0b                 a4 = a0 + t0
  5240: 51 02 15                 jump @363 if t0 == 0
      :                          @361
  5243: 64 8c                    a5 = a1
  5245: 64 75                    s0 = a0
  5247: 01                       fallthrough
      :                          @362
  5248: 7c ca                    a3 = u8 [a5]
  5250: 78 5a                    u8 [s0] = a3
  5252: 95 55 01                 s0 = s0 + 0x1
  5255: 95 cc 01                 a5 = a5 + 0x1
  5258: ac b5 f6                 jump @362 if s0 <u a4
      :                          @363
  5261: c8 28 03                 t1 = a1 + t0
  5264: c9 29 02                 t0 = a2 - t0
  5267: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5270: 84 38 07                 a1 = t1 & 0x7
  5273: c8 4b 0a                 a3 = a4 + t2
  5276: 51 08 3b                 jump @370 if a1 == 0
      :                          @364
  5279: 58 04 4b                 jump @373 if t2 <=s 0
      :                          @365
  5282: 97 38 03                 a1 = t1 << 0x3
  5285: 84 80 38                 ra = a1 & 0x38
  5288: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5291: 82 c5                    s0 = u64 [a5]
  5293: 8d 88                    i32 a1 = -a1
  5295: 84 88 38                 a1 = a1 & 0x38
  5298: 95 cc 08                 a5 = a5 + 0x8
  5301: 01                       fallthrough
      :                          @366
  5302: 82 c6                    s1 = u64 [a5]
  5304: d0 05 05                 s0 = s0 >> ra
  5307: cf 86 09                 a2 = s1 << a1
  5310: d4 59 09                 a2 = a2 | s0
  5313: 7b b9                    u64 [a4] = a2
  5315: 95 bb 08                 a4 = a4 + 0x8
  5318: 95 cc 08                 a5 = a5 + 0x8
  5321: 64 65                    s0 = s1
  5323: ac ab eb                 jump @366 if a4 <u a3
      :                          @367
  5326: 28 1c                    jump @373
      :                          @368
  5328: 64 7a                    a3 = a0
  5330: 52 09 21                 jump @374 if a2 != 0
      :                          @369
  5333: 28 2f                    jump @376
      :                          @370
  5335: 58 04 13                 jump @373 if t2 <=s 0
      :                          @371
  5338: 64 38                    a1 = t1
  5340: 01                       fallthrough
      :                          @372
  5341: 82 89                    a2 = u64 [a1]
  5343: 7b b9                    u64 [a4] = a2
  5345: 95 bb 08                 a4 = a4 + 0x8
  5348: 95 88 08                 a1 = a1 + 0x8
  5351: ac ab f6                 jump @372 if a4 <u a3
      :                          @373
  5354: c8 43 08                 a1 = t1 + t2
  5357: 84 29 07                 a2 = t0 & 0x7
  5360: 51 09 14                 jump @376 if a2 == 0
      :                          @374
  5363: c8 a9 09                 a2 = a2 + a3
  5366: 01                       fallthrough
      :                          @375
  5367: 7c 8b                    a4 = u8 [a1]
  5369: 78 ab                    u8 [a3] = a4
  5371: 95 aa 01                 a3 = a3 + 0x1
  5374: 95 88 01                 a1 = a1 + 0x1
  5377: ac 9a f6                 jump @375 if a3 <u a2
      :                          @376
  5380: 82 10 18                 ra = u64 [sp + 0x18]
  5383: 82 15 10                 s0 = u64 [sp + 0x10]
  5386: 82 16 08                 s1 = u64 [sp + 0x8]
  5389: 95 11 20                 sp = sp + 0x20
  5392: 32 00                    ret
      :                          @377
  5394: 53 19 10 48              jump @386 if a2 <u 16
      :                          @378
  5398: 8d 7a                    i32 a3 = -a0
  5400: 84 aa 07                 a3 = a3 & 0x7
  5403: c8 a7 0b                 a4 = a0 + a3
  5406: 51 0a 0e                 jump @381 if a3 == 0
      :                          @379
  5409: 64 7c                    a5 = a0
  5411: 01                       fallthrough
      :                          @380
  5412: 78 c8                    u8 [a5] = a1
  5414: 95 cc 01                 a5 = a5 + 0x1
  5417: ac bc fb                 jump @380 if a5 <u a4
      :                          @381
  5420: c9 a9 03                 t1 = a2 - a3
  5423: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5426: c8 cb 0a                 a3 = a4 + a5
  5429: 58 0c 1d                 jump @384 if a5 <=s 0
      :                          @382
  5432: 84 82 ff 00              t0 = a1 & 0xff
  5436: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5446: ca 92 0c                 a5 = t0 * a2
  5449: 01                       fallthrough
      :                          @383
  5450: 7b bc                    u64 [a4] = a5
  5452: 95 bb 08                 a4 = a4 + 0x8
  5455: ac ab fb                 jump @383 if a4 <u a3
      :                          @384
  5458: 84 39 07                 a2 = t1 & 0x7
  5461: 52 09 0a                 jump @387 if a2 != 0
      :                          @385
  5464: 28 13                    jump @389
      :                          @386
  5466: 64 7a                    a3 = a0
  5468: 51 09 0f                 jump @389 if a2 == 0
      :                          @387
  5471: c8 a9 09                 a2 = a2 + a3
  5474: 01                       fallthrough
      :                          @388
  5475: 78 a8                    u8 [a3] = a1
  5477: 95 aa 01                 a3 = a3 + 0x1
  5480: ac 9a fb                 jump @388 if a3 <u a2
      :                          @389
  5483: 32 00                    ret
      :                          @390 [@dyn 43]
  5485: 82 77                    a0 = u64 [a0]
  5487: 01                       fallthrough
      :                          @391
  5488: 28                       jump @391
      :                          @392
  5489: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  5492: 7b 10 58                 u64 [sp + 0x58] = ra
  5495: 7b 15 50                 u64 [sp + 0x50] = s0
  5498: 7b 16 48                 u64 [sp + 0x48] = s1
  5501: 7b 19 08                 u64 [sp + 0x8] = a2
  5504: 7b 18                    u64 [sp] = a1
  5506: 98 7a 04                 a3 = a0 >> 0x4
  5509: 33 09 27                 a2 = 0x27
  5512: 53 2a 71 02 81 00        jump @395 if a3 <u 625
      :                          @393
  5518: 33 09 27                 a2 = 0x27
  5521: 95 1b 46                 a4 = sp + 0x46
  5524: 3a 08 00 00 03           a1 = u64 [0x30000]
  5529: 7b 18 18                 u64 [sp + 0x18] = a1
  5532: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  5538: 33 03 7b 14              t1 = 0x147b
  5542: 33 05 72 01 01           s0 = 0x10172
  5547: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  5553: 01                       fallthrough
      :                          @394
  5554: 64 74                    t2 = a0
  5556: 82 17 18                 a0 = u64 [sp + 0x18]
  5559: d6 74 07                 a0 = t2 mulhu a0
  5562: 98 77 0b                 a0 = a0 >> 0xb
  5565: 82 18 10                 a1 = u64 [sp + 0x10]
  5568: c0 87 02                 i32 t0 = a0 * a1
  5571: c8 42 0a                 a3 = t0 + t2
  5574: 97 a2 30                 t0 = a3 << 0x30
  5577: 98 28 32                 a1 = t0 >> 0x32
  5580: ca 38 08                 a1 = a1 * t1
  5583: 98 8c 11                 a5 = a1 >> 0x11
  5586: 98 88 10                 a1 = a1 >> 0x10
  5589: 84 88 fe 07              a1 = a1 & 0x7fe
  5593: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  5596: c8 ca 0a                 a3 = a3 + a5
  5599: 97 aa 31                 a3 = a3 << 0x31
  5602: 98 aa 30                 a3 = a3 >> 0x30
  5605: c8 58 08                 a1 = a1 + s0
  5608: 7c 8c                    a5 = u8 [a1]
  5610: 7c 88 01                 a1 = u8 [a1 + 0x1]
  5613: c8 5a 0a                 a3 = a3 + s0
  5616: 7c a6 01                 s1 = u8 [a3 + 0x1]
  5619: 7c aa                    a3 = u8 [a3]
  5621: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  5624: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  5627: 78 b6 01                 u8 [a4 + 0x1] = s1
  5630: 78 ba                    u8 [a4] = a3
  5632: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  5635: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  5638: ac 40 ac                 jump @394 if ra <u t2
      :                          @395
  5641: 54 17 63 3b              jump @397 if a0 <=u 99
      :                          @396
  5645: 97 78 30                 a1 = a0 << 0x30
  5648: 98 88 32                 a1 = a1 >> 0x32
  5651: 96 88 7b 14              a1 = a1 * 0x147b
  5655: 98 88 11                 a1 = a1 >> 0x11
  5658: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  5661: c8 a7 07                 a0 = a0 + a3
  5664: 97 77 31                 a0 = a0 << 0x31
  5667: 98 77 30                 a0 = a0 >> 0x30
  5670: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5673: 33 0a 72 01 01           a3 = 0x10172
  5678: c8 a7 07                 a0 = a0 + a3
  5681: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  5684: 7c 77                    a0 = u8 [a0]
  5686: 95 1b 21                 a4 = sp + 0x21
  5689: c8 9b 0b                 a4 = a4 + a2
  5692: 78 ba 01                 u8 [a4 + 0x1] = a3
  5695: 78 b7                    u8 [a4] = a0
  5697: 64 87                    a0 = a1
  5699: 01                       fallthrough
      :                          @397
  5700: 55 17 0a 14              jump @399 if a0 >=u 10
      :                          @398
  5704: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5707: 95 18 21                 a1 = sp + 0x21
  5710: c8 98 08                 a1 = a1 + a2
  5713: 83 77 30                 i32 a0 = a0 + 0x30
  5716: 78 87                    u8 [a1] = a0
  5718: 28 21                    jump @400
      :                          @399
  5720: 97 77 01                 a0 = a0 << 0x1
  5723: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5726: 33 08 72 01 01           a1 = 0x10172
  5731: c8 87 07                 a0 = a0 + a1
  5734: 7c 78 01                 a1 = u8 [a0 + 0x1]
  5737: 7c 77                    a0 = u8 [a0]
  5739: 95 1a 21                 a3 = sp + 0x21
  5742: c8 9a 0a                 a3 = a3 + a2
  5745: 78 a8 01                 u8 [a3 + 0x1] = a1
  5748: 78 a7                    u8 [a3] = a0
  5750: 01                       fallthrough
      :                          @400
  5751: 95 1b 21                 a4 = sp + 0x21
  5754: c8 9b 0b                 a4 = a4 + a2
  5757: 9a 9c 27                 a5 = 0x27 - a2
  5760: 33 09 70 01 01           a2 = 0x10170
  5765: 82 17 08                 a0 = u64 [sp + 0x8]
  5768: 82 18                    a1 = u64 [sp]
  5770: 33 0a                    a3 = 0
  5772: 50 10 58 12              ra = 88, jump @402
      :                          @401 [@dyn 44]
  5776: 82 10 58                 ra = u64 [sp + 0x58]
  5779: 82 15 50                 s0 = u64 [sp + 0x50]
  5782: 82 16 48                 s1 = u64 [sp + 0x48]
  5785: 95 11 60                 sp = sp + 0x60
  5788: 32 00                    ret
      :                          @402
  5790: 95 11 98                 sp = sp + 0xffffffffffffff98
  5793: 7b 10 60                 u64 [sp + 0x60] = ra
  5796: 7b 15 58                 u64 [sp + 0x58] = s0
  5799: 7b 16 50                 u64 [sp + 0x50] = s1
  5802: 7b 1b 18                 u64 [sp + 0x18] = a4
  5805: 51 08 4f                 jump @409 if a1 == 0
      :                          @403
  5808: 80 76 34                 s1 = u32 [a0 + 0x34]
  5811: 84 68 01                 a1 = s1 & 0x1
  5814: 33 0b 2b                 a4 = 0x2b
  5817: 33 05 00 00 11           s0 = 0x110000
  5822: db 8b 05                 s0 = a4 if a1 != 0
  5825: 7b 15 28                 u64 [sp + 0x28] = s0
  5828: c8 c8 02                 t0 = a1 + a5
  5831: 84 68 04                 a1 = s1 & 0x4
  5834: 51 08 42                 jump @410 if a1 == 0
      :                          @404
  5837: 7b 19 30                 u64 [sp + 0x30] = a2
  5840: 33 08                    a1 = 0
  5842: 51 0a 1a                 jump @407 if a3 == 0
      :                          @405
  5845: 64 a5                    s0 = a3
  5847: 01                       fallthrough
      :                          @406
  5848: 7d 9b                    a4 = i8 [a2]
  5850: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  5853: 85 bb 01                 a4 = a4 ^ 0x1
  5856: c8 b8 08                 a1 = a1 + a4
  5859: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5862: 95 99 01                 a2 = a2 + 0x1
  5865: 52 05 ef                 jump @406 if s0 != 0
      :                          @407
  5868: c8 82 02                 t0 = t0 + a1
  5871: 7b 1a 38                 u64 [sp + 0x38] = a3
  5874: 82 78                    a1 = u64 [a0]
  5876: 7b 1c 20                 u64 [sp + 0x20] = a5
  5879: 52 08 23                 jump @411 if a1 != 0
      :                          @408
  5882: 28 41                    jump @416
      :                          @409
  5884: 81 76 34                 s1 = i32 [a0 + 0x34]
  5887: 95 c2 01                 t0 = a5 + 0x1
  5890: 49 11 28 2d              u64 [sp + 40] = 0x2d
  5894: 84 68 04                 a1 = s1 & 0x4
  5897: 52 08 c4                 jump @404 if a1 != 0
      :                          @410
  5900: 49 11 30                 u64 [sp + 48] = 0
  5903: 7b 1a 38                 u64 [sp + 0x38] = a3
  5906: 82 78                    a1 = u64 [a0]
  5908: 7b 1c 20                 u64 [sp + 0x20] = a5
  5911: 51 08 24                 jump @416 if a1 == 0
      :                          @411
  5914: 82 75 08                 s0 = u64 [a0 + 0x8]
  5917: ae 52 1e                 jump @416 if t0 >=u s0
      :                          @412
  5920: 84 66 08                 s1 = s1 & 0x8
  5923: 52 06 50                 jump @419 if s1 != 0
      :                          @413
  5926: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5929: c9 25 0a                 a3 = s0 - t0
  5932: 5a 19 01 a1 00           jump @426 if a2 >s 1
      :                          @414
  5937: 52 09 ae 00              jump @428 if a2 != 0
      :                          @415
  5941: 7b 1a 10                 u64 [sp + 0x10] = a3
  5944: 28 ad 00                 jump @429
      :                          @416
  5947: 82 75 20                 s0 = u64 [a0 + 0x20]
  5950: 82 76 28                 s1 = u64 [a0 + 0x28]
  5953: 64 57                    a0 = s0
  5955: 64 68                    a1 = s1
  5957: 82 19 28                 a2 = u64 [sp + 0x28]
  5960: 82 1a 30                 a3 = u64 [sp + 0x30]
  5963: 82 1b 38                 a4 = u64 [sp + 0x38]
  5966: 50 10 5a 6d 01           ra = 90, jump @449
      :                          @417 [@dyn 45]
  5971: 33 08 01                 a1 = 0x1
  5974: 52 07 bc 00              jump @434 if a0 != 0
      :                          @418
  5978: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5981: 64 57                    a0 = s0
  5983: 82 18 18                 a1 = u64 [sp + 0x18]
  5986: 82 19 20                 a2 = u64 [sp + 0x20]
  5989: 82 10 60                 ra = u64 [sp + 0x60]
  5992: 82 15 58                 s0 = u64 [sp + 0x58]
  5995: 82 16 50                 s1 = u64 [sp + 0x50]
  5998: 95 11 68                 sp = sp + 0x68
  6001: 32 0c                    jump [a5]
      :                          @419
  6003: 7b 12 40                 u64 [sp + 0x40] = t0
  6006: 81 78 30                 a1 = i32 [a0 + 0x30]
  6009: 7b 18 08                 u64 [sp + 0x8] = a1
  6012: 7c 79 38                 a2 = u8 [a0 + 0x38]
  6015: 7b 19                    u64 [sp] = a2
  6017: 82 79 20                 a2 = u64 [a0 + 0x20]
  6020: 82 76 28                 s1 = u64 [a0 + 0x28]
  6023: 48 17 30 30              u32 [a0 + 48] = 0x30
  6027: 7b 17 10                 u64 [sp + 0x10] = a0
  6030: 46 17 38 01              u8 [a0 + 56] = 0x1
  6034: 7b 19 48                 u64 [sp + 0x48] = a2
  6037: 64 97                    a0 = a2
  6039: 64 68                    a1 = s1
  6041: 82 19 28                 a2 = u64 [sp + 0x28]
  6044: 82 1a 30                 a3 = u64 [sp + 0x30]
  6047: 82 1b 38                 a4 = u64 [sp + 0x38]
  6050: 50 10 5c 19 01           ra = 92, jump @449
      :                          @420 [@dyn 46]
  6055: 52 07 67                 jump @433 if a0 != 0
      :                          @421
  6058: 82 17 40                 a0 = u64 [sp + 0x40]
  6061: c9 75 05                 s0 = s0 - a0
  6064: 95 55 01                 s0 = s0 + 0x1
  6067: 01                       fallthrough
      :                          @422
  6068: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6071: 51 05 c6 00              jump @444 if s0 == 0
      :                          @423
  6075: 82 69 20                 a2 = u64 [s1 + 0x20]
  6078: 33 08 30                 a1 = 0x30
  6081: 82 17 48                 a0 = u64 [sp + 0x48]
  6084: b4 90 01 5e              ra = 94, jump [a2]
      :                          @424 [@dyn 47]
  6088: 51 07 ec                 jump @422 if a0 == 0
      :                          @425
  6091: 28 43                    jump @433
      :                          @426
  6093: 52 19 02 12              jump @428 if a2 != 2
      :                          @427
  6097: 98 a9 01                 a2 = a3 >> 0x1
  6100: 95 a8 01                 a1 = a3 + 0x1
  6103: 98 88 01                 a1 = a1 >> 0x1
  6106: 7b 18 10                 u64 [sp + 0x10] = a1
  6109: 28 08                    jump @429
      :                          @428
  6111: 64 a9                    a2 = a3
  6113: 49 11 10                 u64 [sp + 16] = 0
  6116: 01                       fallthrough
      :                          @429
  6117: 82 78 20                 a1 = u64 [a0 + 0x20]
  6120: 7b 18 48                 u64 [sp + 0x48] = a1
  6123: 82 76 28                 s1 = u64 [a0 + 0x28]
  6126: 81 77 30                 a0 = i32 [a0 + 0x30]
  6129: 7b 17 40                 u64 [sp + 0x40] = a0
  6132: 95 95 01                 s0 = a2 + 0x1
  6135: 01                       fallthrough
      :                          @430
  6136: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6139: 51 05 27                 jump @435 if s0 == 0
      :                          @431
  6142: 82 69 20                 a2 = u64 [s1 + 0x20]
  6145: 82 17 48                 a0 = u64 [sp + 0x48]
  6148: 82 18 40                 a1 = u64 [sp + 0x40]
  6151: b4 90 01 60              ra = 96, jump [a2]
      :                          @432 [@dyn 48]
  6155: 51 07 ed                 jump @430 if a0 == 0
      :                          @433
  6158: 33 08 01                 a1 = 0x1
  6161: 01                       fallthrough
      :                          @434
  6162: 64 87                    a0 = a1
  6164: 82 10 60                 ra = u64 [sp + 0x60]
  6167: 82 15 58                 s0 = u64 [sp + 0x58]
  6170: 82 16 50                 s1 = u64 [sp + 0x50]
  6173: 95 11 68                 sp = sp + 0x68
  6176: 32 00                    ret
      :                          @435
  6178: 82 15 48                 s0 = u64 [sp + 0x48]
  6181: 64 57                    a0 = s0
  6183: 64 68                    a1 = s1
  6185: 82 19 28                 a2 = u64 [sp + 0x28]
  6188: 82 1a 30                 a3 = u64 [sp + 0x30]
  6191: 82 1b 38                 a4 = u64 [sp + 0x38]
  6194: 50 10 62 89 00           ra = 98, jump @449
      :                          @436 [@dyn 49]
  6199: 33 08 01                 a1 = 0x1
  6202: 52 07 d8                 jump @434 if a0 != 0
      :                          @437
  6205: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6208: 64 57                    a0 = s0
  6210: 82 18 18                 a1 = u64 [sp + 0x18]
  6213: 82 19 20                 a2 = u64 [sp + 0x20]
  6216: b4 a0 01 64              ra = 100, jump [a3]
      :                          @438 [@dyn 50]
  6220: 33 08 01                 a1 = 0x1
  6223: 52 07 c3                 jump @434 if a0 != 0
      :                          @439
  6226: 82 17 10                 a0 = u64 [sp + 0x10]
  6229: 9a 77                    a0 = -a0
  6231: 7b 17 38                 u64 [sp + 0x38] = a0
  6234: 33 05 ff                 s0 = 0xffffffffffffffff
  6237: 01                       fallthrough
      :                          @440
  6238: 82 17 38                 a0 = u64 [sp + 0x38]
  6241: c8 57 07                 a0 = a0 + s0
  6244: 51 17 ff 42              jump @447 if a0 == 4294967295
      :                          @441
  6248: 82 69 20                 a2 = u64 [s1 + 0x20]
  6251: 82 17 48                 a0 = u64 [sp + 0x48]
  6254: 82 18 40                 a1 = u64 [sp + 0x40]
  6257: b4 90 01 66              ra = 102, jump [a2]
      :                          @442 [@dyn 51]
  6261: 95 55 01                 s0 = s0 + 0x1
  6264: 51 07 e6                 jump @440 if a0 == 0
      :                          @443
  6267: 28 37                    jump @448
      :                          @444
  6269: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6272: 82 17 48                 a0 = u64 [sp + 0x48]
  6275: 82 18 18                 a1 = u64 [sp + 0x18]
  6278: 82 19 20                 a2 = u64 [sp + 0x20]
  6281: b4 a0 01 68              ra = 104, jump [a3]
      :                          @445 [@dyn 52]
  6285: 33 08 01                 a1 = 0x1
  6288: 52 07 82                 jump @434 if a0 != 0
      :                          @446
  6291: 33 08                    a1 = 0
  6293: 82 17 10                 a0 = u64 [sp + 0x10]
  6296: 82 19 08                 a2 = u64 [sp + 0x8]
  6299: 7a 79 30                 u32 [a0 + 0x30] = a2
  6302: 82 19                    a2 = u64 [sp]
  6304: 78 79 38                 u8 [a0 + 0x38] = a2
  6307: 28 6f ff                 jump @434
      :                          @447
  6310: 82 15 10                 s0 = u64 [sp + 0x10]
  6313: 82 17 10                 a0 = u64 [sp + 0x10]
  6316: d8 75 08                 a1 = s0 <u a0
  6319: 28 63 ff                 jump @434
      :                          @448
  6322: 82 17 10                 a0 = u64 [sp + 0x10]
  6325: d8 75 08                 a1 = s0 <u a0
  6328: 28 5a ff                 jump @434
      :                          @449
  6331: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6334: 7b 10 20                 u64 [sp + 0x20] = ra
  6337: 7b 15 18                 u64 [sp + 0x18] = s0
  6340: 7b 16 10                 u64 [sp + 0x10] = s1
  6343: 83 9c                    i32 a5 = a2 + 0
  6345: 33 02 00 00 11           t0 = 0x110000
  6350: 64 a6                    s1 = a3
  6352: 64 85                    s0 = a1
  6354: 64 7a                    a3 = a0
  6356: aa 2c 20                 jump @452 if a5 == t0
      :                          @450
  6359: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6362: 64 a7                    a0 = a3
  6364: 64 98                    a1 = a2
  6366: 7b 1b 08                 u64 [sp + 0x8] = a4
  6369: 7b 1a                    u64 [sp] = a3
  6371: b4 c0 01 6a              ra = 106, jump [a5]
      :                          @451 [@dyn 53]
  6375: 82 1a                    a3 = u64 [sp]
  6377: 82 1b 08                 a4 = u64 [sp + 0x8]
  6380: 64 78                    a1 = a0
  6382: 33 07 01                 a0 = 0x1
  6385: 52 08 20                 jump @455 if a1 != 0
      :                          @452
  6388: 51 06 1a                 jump @454 if s1 == 0
      :                          @453
  6391: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6394: 64 a7                    a0 = a3
  6396: 64 68                    a1 = s1
  6398: 64 b9                    a2 = a4
  6400: 82 10 20                 ra = u64 [sp + 0x20]
  6403: 82 15 18                 s0 = u64 [sp + 0x18]
  6406: 82 16 10                 s1 = u64 [sp + 0x10]
  6409: 95 11 28                 sp = sp + 0x28
  6412: 32 0c                    jump [a5]
      :                          @454
  6414: 33 07                    a0 = 0
  6416: 01                       fallthrough
      :                          @455
  6417: 82 10 20                 ra = u64 [sp + 0x20]
  6420: 82 15 18                 s0 = u64 [sp + 0x18]
  6423: 82 16 10                 s1 = u64 [sp + 0x10]
  6426: 95 11 28                 sp = sp + 0x28
  6429: 32 00                    ret
      :                          @456
  6431: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6435: 7b 10 80 00              u64 [sp + 0x80] = ra
  6439: 7b 15 78                 u64 [sp + 0x78] = s0
  6442: 7b 16 70                 u64 [sp + 0x70] = s1
  6445: 49 11 60 20              u64 [sp + 96] = 0x20
  6449: 33 09 03                 a2 = 0x3
  6452: 78 19 68                 u8 [sp + 0x68] = a2
  6455: 49 11 30                 u64 [sp + 48] = 0
  6458: 49 11 40                 u64 [sp + 64] = 0
  6461: 82 86 20                 s1 = u64 [a1 + 0x20]
  6464: 7b 17 50                 u64 [sp + 0x50] = a0
  6467: 33 07 40 01 01           a0 = 0x10140
  6472: 7b 17 58                 u64 [sp + 0x58] = a0
  6475: 51 06 06 01              jump @478 if s1 == 0
      :                          @457
  6479: 82 87 28                 a0 = u64 [a1 + 0x28]
  6482: 51 07 73 01              jump @488 if a0 == 0
      :                          @458
  6486: 33 09                    a2 = 0
  6488: 82 85                    s0 = u64 [a1]
  6490: 7b 18 08                 u64 [sp + 0x8] = a1
  6493: 82 88 10                 a1 = u64 [a1 + 0x10]
  6496: 7b 18 18                 u64 [sp + 0x18] = a1
  6499: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  6502: 97 88 03                 a1 = a1 << 0x3
  6505: 98 88 03                 a1 = a1 >> 0x3
  6508: 95 88 01                 a1 = a1 + 0x1
  6511: 7b 18                    u64 [sp] = a1
  6513: 95 55 08                 s0 = s0 + 0x8
  6516: 96 78 38                 a1 = a0 * 0x38
  6519: 95 66 18                 s1 = s1 + 0x18
  6522: 33 07 56                 a0 = 0x56
  6525: 7b 17 10                 u64 [sp + 0x10] = a0
  6528: 01                       fallthrough
      :                          @459
  6529: 7b 18 20                 u64 [sp + 0x20] = a1
  6532: 7b 19 28                 u64 [sp + 0x28] = a2
  6535: 82 59                    a2 = u64 [s0]
  6537: 51 09 17                 jump @462 if a2 == 0
      :                          @460
  6540: 82 1a 58                 a3 = u64 [sp + 0x58]
  6543: 82 17 50                 a0 = u64 [sp + 0x50]
  6546: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  6549: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6552: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @461 [@dyn 54]
  6556: 52 07 4e 01              jump @491 if a0 != 0
      :                          @462
  6560: 81 67 10                 a0 = i32 [s1 + 0x10]
  6563: 7a 17 60                 u32 [sp + 0x60] = a0
  6566: 7c 67 18                 a0 = u8 [s1 + 0x18]
  6569: 78 17 68                 u8 [sp + 0x68] = a0
  6572: 81 67 14                 a0 = i32 [s1 + 0x14]
  6575: 7a 17 64                 u32 [sp + 0x64] = a0
  6578: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6581: 82 67                    a0 = u64 [s1]
  6583: 51 08 26                 jump @467 if a1 == 0
      :                          @463
  6586: 52 18 01 16              jump @465 if a1 != 1
      :                          @464
  6590: 97 77 04                 a0 = a0 << 0x4
  6593: 82 18 18                 a1 = u64 [sp + 0x18]
  6596: c8 87 07                 a0 = a0 + a1
  6599: 82 78 08                 a1 = u64 [a0 + 0x8]
  6602: 82 19 10                 a2 = u64 [sp + 0x10]
  6605: aa 98 07                 jump @466 if a1 == a2
      :                          @465
  6608: 33 08                    a1 = 0
  6610: 28 0f                    jump @468
      :                          @466
  6612: 82 77                    a0 = u64 [a0]
  6614: 82 77                    a0 = u64 [a0]
  6616: 33 08 01                 a1 = 0x1
  6619: 28 06                    jump @468
      :                          @467
  6621: 33 08 01                 a1 = 0x1
  6624: 01                       fallthrough
      :                          @468
  6625: 7b 18 30                 u64 [sp + 0x30] = a1
  6628: 7b 17 38                 u64 [sp + 0x38] = a0
  6631: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  6634: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  6637: 51 08 26                 jump @473 if a1 == 0
      :                          @469
  6640: 52 18 01 16              jump @471 if a1 != 1
      :                          @470
  6644: 97 77 04                 a0 = a0 << 0x4
  6647: 82 18 18                 a1 = u64 [sp + 0x18]
  6650: c8 87 07                 a0 = a0 + a1
  6653: 82 78 08                 a1 = u64 [a0 + 0x8]
  6656: 82 19 10                 a2 = u64 [sp + 0x10]
  6659: aa 98 07                 jump @472 if a1 == a2
      :                          @471
  6662: 33 08                    a1 = 0
  6664: 28 0f                    jump @474
      :                          @472
  6666: 82 77                    a0 = u64 [a0]
  6668: 82 77                    a0 = u64 [a0]
  6670: 33 08 01                 a1 = 0x1
  6673: 28 06                    jump @474
      :                          @473
  6675: 33 08 01                 a1 = 0x1
  6678: 01                       fallthrough
      :                          @474
  6679: 7b 18 40                 u64 [sp + 0x40] = a1
  6682: 7b 17 48                 u64 [sp + 0x48] = a0
  6685: 82 67 08                 a0 = u64 [s1 + 0x8]
  6688: 97 77 04                 a0 = a0 << 0x4
  6691: 82 18 18                 a1 = u64 [sp + 0x18]
  6694: c8 78 08                 a1 = a1 + a0
  6697: 82 87                    a0 = u64 [a1]
  6699: 82 89 08                 a2 = u64 [a1 + 0x8]
  6702: 95 18 30                 a1 = sp + 0x30
  6705: b4 90 01 6e              ra = 110, jump [a2]
      :                          @475 [@dyn 55]
  6709: 52 07 b5 00              jump @491 if a0 != 0
      :                          @476
  6713: 95 55 10                 s0 = s0 + 0x10
  6716: 82 18 20                 a1 = u64 [sp + 0x20]
  6719: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  6722: 95 66 38                 s1 = s1 + 0x38
  6725: 82 19 28                 a2 = u64 [sp + 0x28]
  6728: 95 99 01                 a2 = a2 + 0x1
  6731: 52 08 36 ff              jump @459 if a1 != 0
      :                          @477
  6735: 28 69                    jump @486
      :                          @478
  6737: 82 87 18                 a0 = u64 [a1 + 0x18]
  6740: 51 07 71                 jump @488 if a0 == 0
      :                          @479
  6743: 82 85 10                 s0 = u64 [a1 + 0x10]
  6746: 33 0a                    a3 = 0
  6748: 97 79 04                 a2 = a0 << 0x4
  6751: c8 59 09                 a2 = a2 + s0
  6754: 7b 19 20                 u64 [sp + 0x20] = a2
  6757: 7b 18 08                 u64 [sp + 0x8] = a1
  6760: 82 86                    s1 = u64 [a1]
  6762: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6765: 97 77 04                 a0 = a0 << 0x4
  6768: 98 77 04                 a0 = a0 >> 0x4
  6771: 95 77 01                 a0 = a0 + 0x1
  6774: 7b 17                    u64 [sp] = a0
  6776: 95 66 08                 s1 = s1 + 0x8
  6779: 01                       fallthrough
      :                          @480
  6780: 7b 1a 28                 u64 [sp + 0x28] = a3
  6783: 82 69                    a2 = u64 [s1]
  6785: 51 09 16                 jump @483 if a2 == 0
      :                          @481
  6788: 82 1a 58                 a3 = u64 [sp + 0x58]
  6791: 82 17 50                 a0 = u64 [sp + 0x50]
  6794: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6797: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6800: b4 a0 01 70              ra = 112, jump [a3]
      :                          @482 [@dyn 56]
  6804: 52 07 56                 jump @491 if a0 != 0
      :                          @483
  6807: 82 57                    a0 = u64 [s0]
  6809: 82 59 08                 a2 = u64 [s0 + 0x8]
  6812: 95 18 30                 a1 = sp + 0x30
  6815: b4 90 01 72              ra = 114, jump [a2]
      :                          @484 [@dyn 57]
  6819: 52 07 47                 jump @491 if a0 != 0
      :                          @485
  6822: 95 66 10                 s1 = s1 + 0x10
  6825: 95 55 10                 s0 = s0 + 0x10
  6828: 82 1a 28                 a3 = u64 [sp + 0x28]
  6831: 95 aa 01                 a3 = a3 + 0x1
  6834: 82 17 20                 a0 = u64 [sp + 0x20]
  6837: ab 75 c7                 jump @480 if s0 != a0
      :                          @486
  6840: 82 18 08                 a1 = u64 [sp + 0x8]
  6843: 82 1a                    a3 = u64 [sp]
  6845: 82 87 08                 a0 = u64 [a1 + 0x8]
  6848: ac 7a 0d                 jump @489 if a3 <u a0
      :                          @487
  6851: 28 2c                    jump @492
      :                          @488
  6853: 33 0a                    a3 = 0
  6855: 82 87 08                 a0 = u64 [a1 + 0x8]
  6858: 54 07 25                 jump @492 if a0 <=u 0
      :                          @489
  6861: 82 87                    a0 = u64 [a1]
  6863: 97 a8 04                 a1 = a3 << 0x4
  6866: c8 87 09                 a2 = a0 + a1
  6869: 82 1a 58                 a3 = u64 [sp + 0x58]
  6872: 82 17 50                 a0 = u64 [sp + 0x50]
  6875: 82 98                    a1 = u64 [a2]
  6877: 82 99 08                 a2 = u64 [a2 + 0x8]
  6880: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6883: b4 a0 01 74              ra = 116, jump [a3]
      :                          @490 [@dyn 58]
  6887: 51 07 08                 jump @492 if a0 == 0
      :                          @491
  6890: 33 07 01                 a0 = 0x1
  6893: 28 05                    jump @493
      :                          @492
  6895: 33 07                    a0 = 0
  6897: 01                       fallthrough
      :                          @493
  6898: 82 10 80 00              ra = u64 [sp + 0x80]
  6902: 82 15 78                 s0 = u64 [sp + 0x78]
  6905: 82 16 70                 s1 = u64 [sp + 0x70]
  6908: 95 11 88 00              sp = sp + 0x88
  6912: 32 00                    ret
      :                          @494 [@dyn 59]
  6914: 81 77                    a0 = i32 [a0]
  6916: 89 7a                    a3 = a0 <s 0
  6918: 85 a9 01                 a2 = a3 ^ 0x1
  6921: 97 7b 20                 a4 = a0 << 0x20
  6924: 98 bb 20                 a4 = a4 >> 0x20
  6927: 9a 77                    a0 = -a0
  6929: da ab 07                 a0 = a4 if a3 == 0
  6932: 64 8a                    a3 = a1
  6934: 64 98                    a1 = a2
  6936: 64 a9                    a2 = a3
  6938: 28 57 fa                 jump @392
