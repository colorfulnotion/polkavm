// RO data = 570/572 bytes
// RW data = 8/1048608 bytes
// Stack size = 1048576 bytes
// RO data = [70, 105, 110, 105, 115, 104, 32, 103, 108, 105, 100, 101, 114, 32, 105, 110, 105, 116, 44, 32, 112, 108, 97, 99, 101, 100, 32, 0, 0, 0, 0, 0, 83, 116, 101, 112, 95, 110, 58, 32, 9, 0, 0, 0, 0, 0, 0, 0, 32, 103, 108, 105, 100, 101, 114, 115, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 44, 32, 116, 111, 116, 97, 108, 95, 115, 116, 101, 112, 115, 58, 32, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 99, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 44, 32, 70, 101, 116, 99, 104, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 168, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 178, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 101, 120, 112, 111, 114, 116, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 44, 32, 100, 111, 110, 101, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 240, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 251, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 2261
// Code size = 6769 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 fc 0e 00 00           jump @230
      :                          @2
    10: 28 00 0f                 jump @231
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 83 14                 jump @371
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 70 01 01           a2 = 0x10170
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 31 15           ra = 4, jump @381
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 cc 13                 jump @371
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 70 01 01           a2 = 0x10170
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 7a 14           ra = 8, jump @381
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 15 13                 jump @371
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 70 01 01           a2 = 0x10170
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c c3 13           ra = 12, jump @381
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   579: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   583: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   587: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   591: 95 11 88 c3 fd           sp = sp + 0xfffffffffffdc388
   596: 53 18 04 85 0c           jump @222 if a1 <u 4
      :                          @40
   601: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
   604: 51 08 7d 0c              jump @222 if a1 == 0
      :                          @41
   608: 95 76 04                 s1 = a0 + 0x4
   611: 7d 6a                    a3 = i8 [s1]
   613: 84 ac ff 00              a5 = a3 & 0xff
   617: 33 09 01                 a2 = 0x1
   620: 59 0a 44                 jump @49 if a3 >=s 0
      :                          @42
   623: 33 0a c0 00              a3 = 0xc0
   627: 33 09 02                 a2 = 0x2
   630: ac ac 36                 jump @48 if a5 <u a3
      :                          @43
   633: 33 0a e0 00              a3 = 0xe0
   637: 33 09 03                 a2 = 0x3
   640: ac ac 2c                 jump @48 if a5 <u a3
      :                          @44
   643: 33 0a f0 00              a3 = 0xf0
   647: 33 09 04                 a2 = 0x4
   650: ac ac 22                 jump @48 if a5 <u a3
      :                          @45
   653: 33 0a f8 00              a3 = 0xf8
   657: 33 09 05                 a2 = 0x5
   660: ac ac 18                 jump @48 if a5 <u a3
      :                          @46
   663: 33 0a fc 00              a3 = 0xfc
   667: 33 09 06                 a2 = 0x6
   670: ac ac 0e                 jump @48 if a5 <u a3
      :                          @47
   673: 88 c9 fe 00              a2 = a5 <u 0xfe
   677: 33 0a 08                 a3 = 0x8
   680: c9 9a 09                 a2 = a3 - a2
   683: 01                       fallthrough
      :                          @48
   684: ac 98 53 0c              jump @228 if a1 <u a2
      :                          @49
   688: 51 0c 91 00              jump @68 if a5 == 0
      :                          @50
   692: 51 2c ff 00 4a 0c        jump @227 if a5 == 255
      :                          @51
   698: 6c ca                    a3 = sext.b a5
   700: 57 0a 09                 jump @53 if a3 <s 0
      :                          @52
   703: 33 05                    s0 = 0
   705: 33 0a                    a3 = 0
   707: 28 74                    jump @67
      :                          @53
   709: 55 2c c0 00 0d           jump @55 if a5 >=u 192
      :                          @54
   714: 33 05 01                 s0 = 0x1
   717: 33 07 80                 a0 = 0xffffffffffffff80
   720: 28 4a                    jump @64
      :                          @55
   722: 55 2c e0 00 0e           jump @57 if a5 >=u 224
      :                          @56
   727: 33 05 02                 s0 = 0x2
   730: 33 07 40 ff              a0 = 0xffffffffffffff40
   734: 28 3c                    jump @64
      :                          @57
   736: 55 2c f0 00 0e           jump @59 if a5 >=u 240
      :                          @58
   741: 33 05 03                 s0 = 0x3
   744: 33 07 20 ff              a0 = 0xffffffffffffff20
   748: 28 2e                    jump @64
      :                          @59
   750: 55 2c f8 00 0e           jump @61 if a5 >=u 248
      :                          @60
   755: 33 05 04                 s0 = 0x4
   758: 33 07 10 ff              a0 = 0xffffffffffffff10
   762: 28 20                    jump @64
      :                          @61
   764: 55 2c fc 00 0e           jump @63 if a5 >=u 252
      :                          @62
   769: 33 05 05                 s0 = 0x5
   772: 33 07 08 ff              a0 = 0xffffffffffffff08
   776: 28 12                    jump @64
      :                          @63
   778: 88 ca fe 00              a3 = a5 <u 0xfe
   782: 33 07 04 ff              a0 = 0xffffffffffffff04
   786: 93 a7 02 ff              a0 = 0xffffffffffffff02 if a3 == 0
   790: 85 a5 07                 s0 = a3 ^ 0x7
   793: 01                       fallthrough
      :                          @64
   794: ae 95 e6 0b              jump @229 if s0 >=u a2
      :                          @65
   798: 33 0a                    a3 = 0
   800: c8 7c 0c                 a5 = a5 + a0
   803: 64 5b                    a4 = s0
   805: 01                       fallthrough
      :                          @66
   806: c8 b6 07                 a0 = s1 + a4
   809: 7c 77                    a0 = u8 [a0]
   811: 97 aa 08                 a3 = a3 << 0x8
   814: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   817: d4 7a 0a                 a3 = a3 | a0
   820: 52 0b f2                 jump @66 if a4 != 0
      :                          @67
   823: 8a 57 03                 i32 a0 = s0 << 0x3
   826: cf 7c 0c                 a5 = a5 << a0
   829: c8 ac 0c                 a5 = a5 + a3
   832: 01                       fallthrough
      :                          @68
   833: e4 98 07                 a0 = maxu(a1, a2)
   836: c9 97 07                 a0 = a0 - a2
   839: d8 c7 08                 a1 = a0 <u a5
   842: e4 c7 07                 a0 = maxu(a0, a5)
   845: c9 c7 07                 a0 = a0 - a5
   848: 88 77 20                 a0 = a0 <u 0x20
   851: d4 87 07                 a0 = a0 | a1
   854: 52 07 83 0b              jump @222 if a0 != 0
      :                          @69
   858: 95 15 3c 91 00           s0 = sp + 0x913c
   863: 49 11 08 ff ff ef        u64 [sp + 8] = 0xffffffffffefffff
   869: c8 96 06                 s1 = s1 + a2
   872: 95 17 3c 01              a0 = sp + 0x13c
   876: 33 09 00 90 00           a2 = 0x9000
   881: 33 08                    a1 = 0
   883: 50 10 0e f3 10           ra = 14, jump @356
      :                          @70 [@dyn 7]
   888: 81 67                    a0 = i32 [s1]
   890: 7a 57                    u32 [s0] = a0
   892: 81 67 04                 a0 = i32 [s1 + 0x4]
   895: 7a 57 04                 u32 [s0 + 0x4] = a0
   898: 81 67 08                 a0 = i32 [s1 + 0x8]
   901: 7a 57 08                 u32 [s0 + 0x8] = a0
   904: 7b 55 14                 u64 [s0 + 0x14] = s0
   907: 33 07 06                 a0 = 0x6
   910: 7b 57 1c                 u64 [s0 + 0x1c] = a0
   913: 95 18 40 91 00           a1 = sp + 0x9140
   918: 7b 58 24                 u64 [s0 + 0x24] = a1
   921: 7b 57 2c                 u64 [s0 + 0x2c] = a0
   924: 95 18 44 91 00           a1 = sp + 0x9144
   929: 7b 58 34                 u64 [s0 + 0x34] = a1
   932: 7b 57 3c                 u64 [s0 + 0x3c] = a0
   935: 33 07 78 00 01           a0 = 0x10078
   940: 95 19 58 b4 01           a2 = sp + 0x1b458
   945: 7b 97                    u64 [a2] = a0
   947: 49 19 08 03              u64 [a2 + 8] = 0x3
   951: 49 19 20                 u64 [a2 + 32] = 0
   954: 95 18 50 91 00           a1 = sp + 0x9150
   959: 7b 98 10                 u64 [a2 + 0x10] = a1
   962: 49 19 18 03              u64 [a2 + 24] = 0x3
   966: 95 17 58 24 01           a0 = sp + 0x12458
   971: 95 18 58 b4 01           a1 = sp + 0x1b458
   976: 50 10 10 80 0d           ra = 16, jump @288
      :                          @71 [@dyn 8]
   981: 95 17 58 24 01           a0 = sp + 0x12458
   986: 82 75 08                 s0 = u64 [a0 + 0x8]
   989: 82 7b 10                 a4 = u64 [a0 + 0x10]
   992: 82 76                    s1 = u64 [a0]
   994: 33 07 02                 a0 = 0x2
   997: 33 08                    a1 = 0
   999: 33 09                    a2 = 0
  1001: 64 5a                    a3 = s0
  1003: 33 00 12                 ra = 0x12
  1006: 0a 64                    ecalli 100 // 'log'
  1008: 01                       fallthrough
      :                          @72 [@dyn 9]
  1009: 82 17 08                 a0 = u64 [sp + 0x8]
  1012: c8 67 07                 a0 = a0 + s1
  1015: 53 37 00 00 f0 25        jump @78 if a0 <u 4293918720
      :                          @73
  1021: 33 07 10 00 03           a0 = 0x30010
  1026: 95 77 00 00 10           a0 = a0 + 0x100000
  1031: 01                       fallthrough
      :                          @74
  1032: 82 78                    a1 = u64 [a0]
  1034: c9 87 09                 a2 = a0 - a1
  1037: ab 59 0f                 jump @78 if a2 != s0
      :                          @75
  1040: c9 68 09                 a2 = a1 - s1
  1043: 01                       fallthrough
      :                          @76
  1044: 82 7a                    a3 = u64 [a0]
  1046: ab 8a f2                 jump @74 if a3 != a1
      :                          @77
  1049: 7b 79                    u64 [a0] = a2
  1051: 01                       fallthrough
      :                          @78
  1052: 95 16 3c 91 00           s1 = sp + 0x913c
  1057: 48 16 0c                 u32 [s1 + 12] = 0
  1060: 95 17 3c 01              a0 = sp + 0x13c
  1064: 33 09 00 10              a2 = 0x1000
  1068: 33 0a 06                 a3 = 0x6
  1071: 33 08                    a1 = 0
  1073: 33 0b                    a4 = 0
  1075: 33 0c                    a5 = 0
  1077: 0a 12                    ecalli 18 // 'fetch'
  1079: 01                       fallthrough
      :                          @79
  1080: 95 18 3c 01              a1 = sp + 0x13c
  1084: 33 05 ff                 s0 = 0xffffffffffffffff
  1087: 33 09 00 10              a2 = 0x1000
  1091: aa 57 49 01              jump @97 if a0 == s0
      :                          @80
  1095: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1098: 83 77 01                 i32 a0 = a0 + 0x1
  1101: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1104: 95 87 00 10              a0 = a1 + 0x1000
  1108: 33 0a 06                 a3 = 0x6
  1111: 33 0b 01                 a4 = 0x1
  1114: 33 08                    a1 = 0
  1116: 33 0c                    a5 = 0
  1118: 0a 12                    ecalli 18 // 'fetch'
  1120: 01                       fallthrough
      :                          @81
  1121: 51 17 ff 2b 01           jump @97 if a0 == 4294967295
      :                          @82
  1126: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1129: 83 77 01                 i32 a0 = a0 + 0x1
  1132: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1135: 95 18 3c 01              a1 = sp + 0x13c
  1139: 95 87 00 20              a0 = a1 + 0x2000
  1143: 33 09 00 10              a2 = 0x1000
  1147: 33 0a 06                 a3 = 0x6
  1150: 33 0b 02                 a4 = 0x2
  1153: 33 05 ff                 s0 = 0xffffffffffffffff
  1156: 33 08                    a1 = 0
  1158: 33 0c                    a5 = 0
  1160: 0a 12                    ecalli 18 // 'fetch'
  1162: 01                       fallthrough
      :                          @83
  1163: 51 17 ff 01 01           jump @97 if a0 == 4294967295
      :                          @84
  1168: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1171: 83 77 01                 i32 a0 = a0 + 0x1
  1174: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1177: 95 18 3c 01              a1 = sp + 0x13c
  1181: 95 87 00 30              a0 = a1 + 0x3000
  1185: 33 09 00 10              a2 = 0x1000
  1189: 33 0a 06                 a3 = 0x6
  1192: 33 0b 03                 a4 = 0x3
  1195: 33 08                    a1 = 0
  1197: 33 0c                    a5 = 0
  1199: 0a 12                    ecalli 18 // 'fetch'
  1201: 01                       fallthrough
      :                          @85
  1202: 51 17 ff da 00           jump @97 if a0 == 4294967295
      :                          @86
  1207: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1210: 83 77 01                 i32 a0 = a0 + 0x1
  1213: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1216: 95 18 3c 01              a1 = sp + 0x13c
  1220: 95 87 00 40              a0 = a1 + 0x4000
  1224: 33 09 00 10              a2 = 0x1000
  1228: 33 0a 06                 a3 = 0x6
  1231: 33 0b 04                 a4 = 0x4
  1234: 33 05 ff                 s0 = 0xffffffffffffffff
  1237: 33 08                    a1 = 0
  1239: 33 0c                    a5 = 0
  1241: 0a 12                    ecalli 18 // 'fetch'
  1243: 01                       fallthrough
      :                          @87
  1244: 51 17 ff b0 00           jump @97 if a0 == 4294967295
      :                          @88
  1249: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1252: 83 77 01                 i32 a0 = a0 + 0x1
  1255: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1258: 95 18 3c 01              a1 = sp + 0x13c
  1262: 95 87 00 50              a0 = a1 + 0x5000
  1266: 33 09 00 10              a2 = 0x1000
  1270: 33 0a 06                 a3 = 0x6
  1273: 33 0b 05                 a4 = 0x5
  1276: 33 08                    a1 = 0
  1278: 33 0c                    a5 = 0
  1280: 0a 12                    ecalli 18 // 'fetch'
  1282: 01                       fallthrough
      :                          @89
  1283: 51 17 ff 89 00           jump @97 if a0 == 4294967295
      :                          @90
  1288: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1291: 83 77 01                 i32 a0 = a0 + 0x1
  1294: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1297: 95 18 3c 01              a1 = sp + 0x13c
  1301: 95 87 00 60              a0 = a1 + 0x6000
  1305: 33 09 00 10              a2 = 0x1000
  1309: 33 0a 06                 a3 = 0x6
  1312: 33 0b 06                 a4 = 0x6
  1315: 33 05 ff                 s0 = 0xffffffffffffffff
  1318: 33 08                    a1 = 0
  1320: 33 0c                    a5 = 0
  1322: 0a 12                    ecalli 18 // 'fetch'
  1324: 01                       fallthrough
      :                          @91
  1325: 51 17 ff 5f              jump @97 if a0 == 4294967295
      :                          @92
  1329: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1332: 83 77 01                 i32 a0 = a0 + 0x1
  1335: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1338: 95 18 3c 01              a1 = sp + 0x13c
  1342: 95 87 00 70              a0 = a1 + 0x7000
  1346: 33 09 00 10              a2 = 0x1000
  1350: 33 0a 06                 a3 = 0x6
  1353: 33 0b 07                 a4 = 0x7
  1356: 33 08                    a1 = 0
  1358: 33 0c                    a5 = 0
  1360: 0a 12                    ecalli 18 // 'fetch'
  1362: 01                       fallthrough
      :                          @93
  1363: 51 17 ff 39              jump @97 if a0 == 4294967295
      :                          @94
  1367: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1370: 83 77 01                 i32 a0 = a0 + 0x1
  1373: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1376: 95 18 3c 01              a1 = sp + 0x13c
  1380: 95 87 00 80 00           a0 = a1 + 0x8000
  1385: 33 09 00 10              a2 = 0x1000
  1389: 33 0a 06                 a3 = 0x6
  1392: 33 0b 08                 a4 = 0x8
  1395: 33 05 ff                 s0 = 0xffffffffffffffff
  1398: 33 08                    a1 = 0
  1400: 33 0c                    a5 = 0
  1402: 0a 12                    ecalli 18 // 'fetch'
  1404: 01                       fallthrough
      :                          @95
  1405: 51 17 ff 0f              jump @97 if a0 == 4294967295
      :                          @96
  1409: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1412: 83 77 01                 i32 a0 = a0 + 0x1
  1415: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1418: 28 06                    jump @98
      :                          @97
  1420: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1423: 01                       fallthrough
      :                          @98
  1424: 95 18 3c 91 00           a1 = sp + 0x913c
  1429: 58 07 9f 00              jump @109 if a0 <=s 0
      :                          @99
  1433: 95 17 3c 91 00           a0 = sp + 0x913c
  1438: 95 19 58 b4 01           a2 = sp + 0x1b458
  1443: 7b 97                    u64 [a2] = a0
  1445: 33 07 06                 a0 = 0x6
  1448: 7b 97 08                 u64 [a2 + 0x8] = a0
  1451: 95 17 48 91 00           a0 = sp + 0x9148
  1456: 7b 97 10                 u64 [a2 + 0x10] = a0
  1459: 33 07 02                 a0 = 0x2
  1462: 7b 97 18                 u64 [a2 + 0x18] = a0
  1465: 33 07 c0 00 01           a0 = 0x100c0
  1470: 7b 87 14                 u64 [a1 + 0x14] = a0
  1473: 49 18 1c 03              u64 [a1 + 28] = 0x3
  1477: 49 18 34                 u64 [a1 + 52] = 0
  1480: 95 17 58 b4 01           a0 = sp + 0x1b458
  1485: 7b 87 24                 u64 [a1 + 0x24] = a0
  1488: 49 18 2c 02              u64 [a1 + 44] = 0x2
  1492: 95 17 58 24 01           a0 = sp + 0x12458
  1497: 95 18 50 91 00           a1 = sp + 0x9150
  1502: 50 10 14 72 0b           ra = 20, jump @288
      :                          @100 [@dyn 10]
  1507: 95 17 58 24 01           a0 = sp + 0x12458
  1512: 82 75 08                 s0 = u64 [a0 + 0x8]
  1515: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1518: 82 76                    s1 = u64 [a0]
  1520: 33 07 02                 a0 = 0x2
  1523: 33 08                    a1 = 0
  1525: 33 09                    a2 = 0
  1527: 64 5a                    a3 = s0
  1529: 33 00 16                 ra = 0x16
  1532: 0a 64                    ecalli 100 // 'log'
  1534: 01                       fallthrough
      :                          @101 [@dyn 11]
  1535: 82 17 08                 a0 = u64 [sp + 0x8]
  1538: c8 67 07                 a0 = a0 + s1
  1541: 53 37 00 00 f0 52 01     jump @128 if a0 <u 4293918720
      :                          @102
  1548: 33 07 10 00 03           a0 = 0x30010
  1553: 95 77 00 00 10           a0 = a0 + 0x100000
  1558: 01                       fallthrough
      :                          @103
  1559: 82 78                    a1 = u64 [a0]
  1561: c9 87 09                 a2 = a0 - a1
  1564: ab 59 3b 01              jump @128 if a2 != s0
      :                          @104
  1568: c9 68 09                 a2 = a1 - s1
  1571: 01                       fallthrough
      :                          @105
  1572: 82 7a                    a3 = u64 [a0]
  1574: ab 8a f1                 jump @103 if a3 != a1
      :                          @106
  1577: 7b 79                    u64 [a0] = a2
  1579: 33 0b                    a4 = 0
  1581: 01                       fallthrough
      :                          @107
  1582: ab 8a e9                 jump @103 if a3 != a1
      :                          @108
  1585: 28 26 01                 jump @128
      :                          @109
  1588: 80 85 04                 s0 = u32 [a1 + 0x4]
  1591: 95 17 3c 01              a0 = sp + 0x13c
  1595: 33 09 00 90 00           a2 = 0x9000
  1600: 33 08                    a1 = 0
  1602: 50 10 18 24 0e           ra = 24, jump @356
      :                          @110 [@dyn 12]
  1607: 51 05 7c                 jump @118 if s0 == 0
      :                          @111
  1610: 33 0c                    a5 = 0
  1612: 33 08                    a1 = 0
  1614: 97 59 02                 a2 = s0 << 0x2
  1617: 64 54                    t2 = s0
  1619: c8 59 09                 a2 = a2 + s0
  1622: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
  1632: 33 02 04 01              t0 = 0x104
  1636: 33 03 d0 02              t1 = 0x2d0
  1640: 33 05 01                 s0 = 0x1
  1643: 95 10 3c 01              ra = sp + 0x13c
  1647: 01                       fallthrough
      :                          @112
  1648: aa 3c 57                 jump @119 if a5 == t1
      :                          @113
  1651: d6 a8 07                 a0 = a1 mulhu a3
  1654: 98 77 03                 a0 = a0 >> 0x3
  1657: ca 27 06                 s1 = a0 * t0
  1660: 95 67 04 01              a0 = s1 + 0x104
  1664: c8 c0 0b                 a4 = ra + a5
  1667: c8 b6 06                 s1 = s1 + a4
  1670: 78 65 83 00              u8 [s1 + 0x83] = s0
  1674: c8 c7 07                 a0 = a0 + a5
  1677: 95 7b fe                 a4 = a0 + 0xfffffffffffffffe
  1680: 98 bb 0c                 a4 = a4 >> 0xc
  1683: 78 65 c4 00              u8 [s1 + 0xc4] = s0
  1687: 52 0b 64 08              jump @224 if a4 != 0
      :                          @114
  1691: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
  1694: 98 bb 0c                 a4 = a4 >> 0xc
  1697: 78 65 02 01              u8 [s1 + 0x102] = s0
  1701: 52 0b 57 08              jump @225 if a4 != 0
      :                          @115
  1705: 98 77 0c                 a0 = a0 >> 0xc
  1708: 78 65 03 01              u8 [s1 + 0x103] = s0
  1712: 52 07 4d 08              jump @226 if a0 != 0
      :                          @116
  1716: 78 65 04 01              u8 [s1 + 0x104] = s0
  1720: 95 cc 05                 a5 = a5 + 0x5
  1723: 95 88 01                 a1 = a1 + 0x1
  1726: ab c9 b2                 jump @112 if a2 != a5
      :                          @117
  1729: 28 0b                    jump @120
      :                          @118
  1731: 33 04                    t2 = 0
  1733: 28 07                    jump @120
      :                          @119
  1735: 33 04 90 00              t2 = 0x90
  1739: 01                       fallthrough
      :                          @120
  1740: 95 19 3c 91 00           a2 = sp + 0x913c
  1745: 7a 94 10                 u32 [a2 + 0x10] = t2
  1748: 95 17 4c 91 00           a0 = sp + 0x914c
  1753: 95 18 58 24 01           a1 = sp + 0x12458
  1758: 7b 87                    u64 [a1] = a0
  1760: 33 07 76                 a0 = 0x76
  1763: 7b 87 08                 u64 [a1 + 0x8] = a0
  1766: 33 07 38 00 01           a0 = 0x10038
  1771: 7b 97 14                 u64 [a2 + 0x14] = a0
  1774: 49 19 1c 02              u64 [a2 + 28] = 0x2
  1778: 49 19 34                 u64 [a2 + 52] = 0
  1781: 95 17 58 24 01           a0 = sp + 0x12458
  1786: 7b 97 24                 u64 [a2 + 0x24] = a0
  1789: 49 19 2c 01              u64 [a2 + 44] = 0x1
  1793: 95 17 58 b4 01           a0 = sp + 0x1b458
  1798: 95 18 50 91 00           a1 = sp + 0x9150
  1803: 50 10 1a 45 0a           ra = 26, jump @288
      :                          @121 [@dyn 13]
  1808: 95 17 58 b4 01           a0 = sp + 0x1b458
  1813: 82 75 08                 s0 = u64 [a0 + 0x8]
  1816: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1819: 82 76                    s1 = u64 [a0]
  1821: 33 07 02                 a0 = 0x2
  1824: 33 08                    a1 = 0
  1826: 33 09                    a2 = 0
  1828: 64 5a                    a3 = s0
  1830: 33 00 1c                 ra = 0x1c
  1833: 0a 64                    ecalli 100 // 'log'
  1835: 01                       fallthrough
      :                          @122 [@dyn 14]
  1836: 82 17 08                 a0 = u64 [sp + 0x8]
  1839: c8 67 07                 a0 = a0 + s1
  1842: 53 37 00 00 f0 25        jump @128 if a0 <u 4293918720
      :                          @123
  1848: 33 07 10 00 03           a0 = 0x30010
  1853: 95 77 00 00 10           a0 = a0 + 0x100000
  1858: 01                       fallthrough
      :                          @124
  1859: 82 78                    a1 = u64 [a0]
  1861: c9 87 09                 a2 = a0 - a1
  1864: ab 59 0f                 jump @128 if a2 != s0
      :                          @125
  1867: c9 68 09                 a2 = a1 - s1
  1870: 01                       fallthrough
      :                          @126
  1871: 82 7a                    a3 = u64 [a0]
  1873: ab 8a f2                 jump @124 if a3 != a1
      :                          @127
  1876: 7b 79                    u64 [a0] = a2
  1878: 01                       fallthrough
      :                          @128
  1879: 95 17 3c 91 00           a0 = sp + 0x913c
  1884: 81 77 08                 a0 = i32 [a0 + 0x8]
  1887: 7b 17 00 01              u64 [sp + 0x100] = a0
  1891: 51 07 7c 06              jump @214 if a0 == 0
      :                          @129
  1895: 33 04                    t2 = 0
  1897: 95 18 50 91 00           a1 = sp + 0x9150
  1902: 95 87 81 91 00           a0 = a1 + 0x9181
  1907: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1911: 95 18 3c 01              a1 = sp + 0x13c
  1915: 95 15 50 91 00           s0 = sp + 0x9150
  1920: 95 5a 43 31              a3 = s0 + 0x3143
  1924: 7b 1a f0 00              u64 [sp + 0xf0] = a3
  1928: 95 5a 83 31              a3 = s0 + 0x3183
  1932: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  1936: 95 5a c3 31              a3 = s0 + 0x31c3
  1940: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  1944: 95 5b c3 61              a4 = s0 + 0x61c3
  1948: 7b 1b d8 00              u64 [sp + 0xd8] = a4
  1952: 95 5b 03 62              a4 = s0 + 0x6203
  1956: 7b 1b d0 00              u64 [sp + 0xd0] = a4
  1960: 95 87 00 10              a0 = a1 + 0x1000
  1964: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1968: 95 87 00 20              a0 = a1 + 0x2000
  1972: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1976: 95 87 00 30              a0 = a1 + 0x3000
  1980: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1984: 95 87 00 40              a0 = a1 + 0x4000
  1988: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1992: 95 87 00 50              a0 = a1 + 0x5000
  1996: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2000: 95 87 00 60              a0 = a1 + 0x6000
  2004: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2008: 95 87 00 70              a0 = a1 + 0x7000
  2012: 7b 17 98 00              u64 [sp + 0x98] = a0
  2016: 95 88 00 80 00           a1 = a1 + 0x8000
  2021: 7b 18 90 00              u64 [sp + 0x90] = a1
  2025: 95 58 43 62              a1 = s0 + 0x6243
  2029: 7b 18 88 00              u64 [sp + 0x88] = a1
  2033: 95 18 58 b4 01           a1 = sp + 0x1b458
  2038: 95 82 00 10              t0 = a1 + 0x1000
  2042: 7b 12 78                 u64 [sp + 0x78] = t0
  2045: 95 8b 00 20              a4 = a1 + 0x2000
  2049: 7b 1b 70                 u64 [sp + 0x70] = a4
  2052: 95 8c 00 40              a5 = a1 + 0x4000
  2056: 7b 1c 68                 u64 [sp + 0x68] = a5
  2059: 95 1c 58 24 01           a5 = sp + 0x12458
  2064: 95 cb 40 30              a4 = a5 + 0x3040
  2068: 7b 1b 60                 u64 [sp + 0x60] = a4
  2071: 95 86 00 50              s1 = a1 + 0x5000
  2075: 7b 16 58                 u64 [sp + 0x58] = s1
  2078: 33 06                    s1 = 0
  2080: 95 8b 00 30              a4 = a1 + 0x3000
  2084: 7b 1b 50                 u64 [sp + 0x50] = a4
  2087: 95 cb 00 30              a4 = a5 + 0x3000
  2091: 7b 1b 48                 u64 [sp + 0x48] = a4
  2094: 95 c9 80 30              a2 = a5 + 0x3080
  2098: 7b 19 40                 u64 [sp + 0x40] = a2
  2101: 95 83 00 70              t1 = a1 + 0x7000
  2105: 7b 13 38                 u64 [sp + 0x38] = t1
  2108: 95 87 00 80 00           a0 = a1 + 0x8000
  2113: 7b 17 30                 u64 [sp + 0x30] = a0
  2116: 95 88 00 60              a1 = a1 + 0x6000
  2120: 7b 18 28                 u64 [sp + 0x28] = a1
  2123: 95 c7 40 60              a0 = a5 + 0x6040
  2127: 7b 17 20                 u64 [sp + 0x20] = a0
  2130: 95 c7 00 60              a0 = a5 + 0x6000
  2134: 7b 17 18                 u64 [sp + 0x18] = a0
  2137: 95 c7 80 60              a0 = a5 + 0x6080
  2141: 7b 17 10                 u64 [sp + 0x10] = a0
  2144: 49 21 80 00 04 93 00     u64 [sp + 128] = 0x9304
  2151: 33 05 c2 00              s0 = 0xc2
  2155: 01                       fallthrough
      :                          @130
  2156: 95 17 50 91 00           a0 = sp + 0x9150
  2161: 33 08                    a1 = 0
  2163: 82 19 80 00              a2 = u64 [sp + 0x80]
  2167: 50 10 1e ef 0b           ra = 30, jump @356
      :                          @131 [@dyn 15]
  2172: 83 66 01                 i32 s1 = s1 + 0x1
  2175: 7b 16 08 01              u64 [sp + 0x108] = s1
  2179: 95 17 13 92 00           a0 = sp + 0x9213
  2184: 95 18 3c 01              a1 = sp + 0x13c
  2188: 33 0a 01                 a3 = 0x1
  2191: 95 13 50 91 00           t1 = sp + 0x9150
  2196: 33 02 40                 t0 = 0x40
  2199: 01                       fallthrough
      :                          @132
  2200: 64 a9                    a2 = a3
  2202: 33 0a 40                 a3 = 0x40
  2205: 64 7b                    a4 = a0
  2207: 64 8c                    a5 = a1
  2209: 01                       fallthrough
      :                          @133
  2210: 7c c6                    s1 = u8 [a5]
  2212: 78 b6                    u8 [a4] = s1
  2214: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2217: 95 cc 01                 a5 = a5 + 0x1
  2220: 95 bb 01                 a4 = a4 + 0x1
  2223: 52 0a f3                 jump @133 if a3 != 0
      :                          @134
  2226: 88 9a 40                 a3 = a2 <u 0x40
  2229: c8 9a 0a                 a3 = a3 + a2
  2232: 95 88 40                 a1 = a1 + 0x40
  2235: 95 77 c2 00              a0 = a0 + 0xc2
  2239: ac 29 d9                 jump @132 if a2 <u t0
      :                          @135
  2242: 33 0a 01                 a3 = 0x1
  2245: 95 17 53 92 00           a0 = sp + 0x9253
  2250: 82 18 c8 00              a1 = u64 [sp + 0xc8]
  2254: 01                       fallthrough
      :                          @136
  2255: 64 a9                    a2 = a3
  2257: 33 0a 40                 a3 = 0x40
  2260: 64 7b                    a4 = a0
  2262: 64 8c                    a5 = a1
  2264: 01                       fallthrough
      :                          @137
  2265: 7c c6                    s1 = u8 [a5]
  2267: 78 b6                    u8 [a4] = s1
  2269: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2272: 95 cc 01                 a5 = a5 + 0x1
  2275: 95 bb 01                 a4 = a4 + 0x1
  2278: 52 0a f3                 jump @137 if a3 != 0
      :                          @138
  2281: 88 9a 40                 a3 = a2 <u 0x40
  2284: c8 9a 0a                 a3 = a3 + a2
  2287: 95 88 40                 a1 = a1 + 0x40
  2290: 95 77 c2 00              a0 = a0 + 0xc2
  2294: ac 29 d9                 jump @136 if a2 <u t0
      :                          @139
  2297: 33 0a 01                 a3 = 0x1
  2300: 95 17 93 92 00           a0 = sp + 0x9293
  2305: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  2309: 01                       fallthrough
      :                          @140
  2310: 64 a9                    a2 = a3
  2312: 33 0a 40                 a3 = 0x40
  2315: 64 7b                    a4 = a0
  2317: 64 8c                    a5 = a1
  2319: 01                       fallthrough
      :                          @141
  2320: 7c c6                    s1 = u8 [a5]
  2322: 78 b6                    u8 [a4] = s1
  2324: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2327: 95 cc 01                 a5 = a5 + 0x1
  2330: 95 bb 01                 a4 = a4 + 0x1
  2333: 52 0a f3                 jump @141 if a3 != 0
      :                          @142
  2336: 88 9a 40                 a3 = a2 <u 0x40
  2339: c8 9a 0a                 a3 = a3 + a2
  2342: 95 88 40                 a1 = a1 + 0x40
  2345: 95 77 c2 00              a0 = a0 + 0xc2
  2349: ac 29 d9                 jump @140 if a2 <u t0
      :                          @143
  2352: 33 0a 01                 a3 = 0x1
  2355: 82 17 f0 00              a0 = u64 [sp + 0xf0]
  2359: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  2363: 01                       fallthrough
      :                          @144
  2364: 64 a9                    a2 = a3
  2366: 33 0a 40                 a3 = 0x40
  2369: 64 7b                    a4 = a0
  2371: 64 8c                    a5 = a1
  2373: 01                       fallthrough
      :                          @145
  2374: 7c c6                    s1 = u8 [a5]
  2376: 78 b6                    u8 [a4] = s1
  2378: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2381: 95 cc 01                 a5 = a5 + 0x1
  2384: 95 bb 01                 a4 = a4 + 0x1
  2387: 52 0a f3                 jump @145 if a3 != 0
      :                          @146
  2390: 88 9a 40                 a3 = a2 <u 0x40
  2393: c8 9a 0a                 a3 = a3 + a2
  2396: 95 88 40                 a1 = a1 + 0x40
  2399: 95 77 c2 00              a0 = a0 + 0xc2
  2403: ac 29 d9                 jump @144 if a2 <u t0
      :                          @147
  2406: 33 0a 01                 a3 = 0x1
  2409: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  2413: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  2417: 01                       fallthrough
      :                          @148
  2418: 64 a9                    a2 = a3
  2420: 33 0a 40                 a3 = 0x40
  2423: 64 7b                    a4 = a0
  2425: 64 8c                    a5 = a1
  2427: 01                       fallthrough
      :                          @149
  2428: 7c c6                    s1 = u8 [a5]
  2430: 78 b6                    u8 [a4] = s1
  2432: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2435: 95 cc 01                 a5 = a5 + 0x1
  2438: 95 bb 01                 a4 = a4 + 0x1
  2441: 52 0a f3                 jump @149 if a3 != 0
      :                          @150
  2444: 88 9a 40                 a3 = a2 <u 0x40
  2447: c8 9a 0a                 a3 = a3 + a2
  2450: 95 88 40                 a1 = a1 + 0x40
  2453: 95 77 c2 00              a0 = a0 + 0xc2
  2457: ac 29 d9                 jump @148 if a2 <u t0
      :                          @151
  2460: 33 0a 01                 a3 = 0x1
  2463: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  2467: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2471: 01                       fallthrough
      :                          @152
  2472: 64 a9                    a2 = a3
  2474: 33 0a 40                 a3 = 0x40
  2477: 64 7b                    a4 = a0
  2479: 64 8c                    a5 = a1
  2481: 01                       fallthrough
      :                          @153
  2482: 7c c6                    s1 = u8 [a5]
  2484: 78 b6                    u8 [a4] = s1
  2486: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2489: 95 cc 01                 a5 = a5 + 0x1
  2492: 95 bb 01                 a4 = a4 + 0x1
  2495: 52 0a f3                 jump @153 if a3 != 0
      :                          @154
  2498: 88 9a 40                 a3 = a2 <u 0x40
  2501: c8 9a 0a                 a3 = a3 + a2
  2504: 95 88 40                 a1 = a1 + 0x40
  2507: 95 77 c2 00              a0 = a0 + 0xc2
  2511: ac 29 d9                 jump @152 if a2 <u t0
      :                          @155
  2514: 33 0a 01                 a3 = 0x1
  2517: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2521: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2525: 01                       fallthrough
      :                          @156
  2526: 64 a9                    a2 = a3
  2528: 33 0a 40                 a3 = 0x40
  2531: 64 7b                    a4 = a0
  2533: 64 8c                    a5 = a1
  2535: 01                       fallthrough
      :                          @157
  2536: 7c c6                    s1 = u8 [a5]
  2538: 78 b6                    u8 [a4] = s1
  2540: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2543: 95 cc 01                 a5 = a5 + 0x1
  2546: 95 bb 01                 a4 = a4 + 0x1
  2549: 52 0a f3                 jump @157 if a3 != 0
      :                          @158
  2552: 88 9a 40                 a3 = a2 <u 0x40
  2555: c8 9a 0a                 a3 = a3 + a2
  2558: 95 88 40                 a1 = a1 + 0x40
  2561: 95 77 c2 00              a0 = a0 + 0xc2
  2565: ac 29 d9                 jump @156 if a2 <u t0
      :                          @159
  2568: 33 0a 01                 a3 = 0x1
  2571: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  2575: 82 18 98 00              a1 = u64 [sp + 0x98]
  2579: 01                       fallthrough
      :                          @160
  2580: 64 a9                    a2 = a3
  2582: 33 0a 40                 a3 = 0x40
  2585: 64 7b                    a4 = a0
  2587: 64 8c                    a5 = a1
  2589: 01                       fallthrough
      :                          @161
  2590: 7c c6                    s1 = u8 [a5]
  2592: 78 b6                    u8 [a4] = s1
  2594: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2597: 95 cc 01                 a5 = a5 + 0x1
  2600: 95 bb 01                 a4 = a4 + 0x1
  2603: 52 0a f3                 jump @161 if a3 != 0
      :                          @162
  2606: 88 9a 40                 a3 = a2 <u 0x40
  2609: c8 9a 0a                 a3 = a3 + a2
  2612: 95 88 40                 a1 = a1 + 0x40
  2615: 95 77 c2 00              a0 = a0 + 0xc2
  2619: ac 29 d9                 jump @160 if a2 <u t0
      :                          @163
  2622: 33 0a 01                 a3 = 0x1
  2625: 82 17 88 00              a0 = u64 [sp + 0x88]
  2629: 82 18 90 00              a1 = u64 [sp + 0x90]
  2633: 01                       fallthrough
      :                          @164
  2634: 64 a9                    a2 = a3
  2636: 33 0a 40                 a3 = 0x40
  2639: 64 7b                    a4 = a0
  2641: 64 8c                    a5 = a1
  2643: 01                       fallthrough
      :                          @165
  2644: 7c c6                    s1 = u8 [a5]
  2646: 78 b6                    u8 [a4] = s1
  2648: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2651: 95 cc 01                 a5 = a5 + 0x1
  2654: 95 bb 01                 a4 = a4 + 0x1
  2657: 52 0a f3                 jump @165 if a3 != 0
      :                          @166
  2660: 88 9a 40                 a3 = a2 <u 0x40
  2663: c8 9a 0a                 a3 = a3 + a2
  2666: 95 88 40                 a1 = a1 + 0x40
  2669: 95 77 c2 00              a0 = a0 + 0xc2
  2673: ac 29 d9                 jump @164 if a2 <u t0
      :                          @167
  2676: 33 07 01                 a0 = 0x1
  2679: 33 0c 00 90 00           a5 = 0x9000
  2684: 33 06 c0 00              s1 = 0xc0
  2688: 01                       fallthrough
      :                          @168
  2689: 88 78 c0 00              a1 = a0 <u 0xc0
  2693: c8 73 09                 a2 = t1 + a0
  2696: c8 c9 0a                 a3 = a2 + a5
  2699: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  2703: 95 77 01                 a0 = a0 + 0x1
  2706: da 86 07                 a0 = s1 if a1 == 0
  2709: 85 88 01                 a1 = a1 ^ 0x1
  2712: 78 9b                    u8 [a2] = a4
  2714: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  2718: 88 7b c1 00              a4 = a0 <u 0xc1
  2722: 85 bb 01                 a4 = a4 ^ 0x1
  2725: d4 b8 08                 a1 = a1 | a4
  2728: 78 a9 42 02              u8 [a3 + 0x242] = a2
  2732: 51 08 d5                 jump @168 if a1 == 0
      :                          @169
  2735: 33 07 01                 a0 = 0x1
  2738: 01                       fallthrough
      :                          @170
  2739: 88 78 c0 00              a1 = a0 <u 0xc0
  2743: ca 57 09                 a2 = a0 * s0
  2746: c8 39 09                 a2 = a2 + t1
  2749: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  2753: 85 8b 01                 a4 = a1 ^ 0x1
  2756: 95 77 01                 a0 = a0 + 0x1
  2759: da 86 07                 a0 = s1 if a1 == 0
  2762: 78 9a                    u8 [a2] = a3
  2764: 7c 98 01                 a1 = u8 [a2 + 0x1]
  2767: 88 7a c1 00              a3 = a0 <u 0xc1
  2771: 85 aa 01                 a3 = a3 ^ 0x1
  2774: d4 ba 0a                 a3 = a3 | a4
  2777: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  2781: 51 0a d6                 jump @170 if a3 == 0
      :                          @171
  2784: 82 1a f8 00              a3 = u64 [sp + 0xf8]
  2788: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  2792: 95 19 3c 91 00           a2 = sp + 0x913c
  2797: 78 97 14                 u8 [a2 + 0x14] = a0
  2800: 7c a7                    a0 = u8 [a3]
  2802: 7c 98 96 01              a1 = u8 [a2 + 0x196]
  2806: 78 97 d5 00              u8 [a2 + 0xd5] = a0
  2810: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  2814: 7c 97 d7 00              a0 = u8 [a2 + 0xd7]
  2818: 78 a7 82 01              u8 [a3 + 0x182] = a0
  2822: 95 17 58 24 01           a0 = sp + 0x12458
  2827: 33 09 00 90 00           a2 = 0x9000
  2832: 33 08                    a1 = 0
  2834: 50 10 20 54 09           ra = 32, jump @356
      :                          @172 [@dyn 16]
  2839: 95 13 50 91 00           t1 = sp + 0x9150
  2844: 33 0b 01                 a4 = 0x1
  2847: 28 15                    jump @174
      :                          @173
  2849: 82 1b 18 01              a4 = u64 [sp + 0x118]
  2853: 88 b7 c1 00              a0 = a4 <u 0xc1
  2857: 82 18 10 01              a1 = u64 [sp + 0x110]
  2861: d2 87 07                 a0 = a0 & a1
  2864: 51 07 f0 00              jump @184 if a0 == 0
      :                          @174
  2868: 95 b7 ff                 a0 = a4 + 0xffffffffffffffff
  2871: 56 27 c1 00 c3 03        jump @223 if a0 >u 193
      :                          @175
  2877: 95 b8 01                 a1 = a4 + 0x1
  2880: 88 b9 c0 00              a2 = a4 <u 0xc0
  2884: 7b 18 20 01              u64 [sp + 0x120] = a1
  2888: 7b 19 10 01              u64 [sp + 0x110] = a2
  2892: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  2896: 7b 18 18 01              u64 [sp + 0x118] = a1
  2900: 33 0c 01                 a5 = 0x1
  2903: 7b 1b 30 01              u64 [sp + 0x130] = a4
  2907: 7b 17 28 01              u64 [sp + 0x128] = a0
  2911: 28 37                    jump @178
      :                          @176
  2913: 33 0a                    a3 = 0
  2915: 01                       fallthrough
      :                          @177
  2916: 88 c8 c0 00              a1 = a5 <u 0xc0
  2920: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  2924: 82 17 28 01              a0 = u64 [sp + 0x128]
  2928: 96 79 c0 00              a2 = a0 * 0xc0
  2932: 95 1b 58 24 01           a4 = sp + 0x12458
  2937: c8 b9 09                 a2 = a2 + a4
  2940: c8 09 09                 a2 = a2 + ra
  2943: 88 6b c1 00              a4 = s1 <u 0xc1
  2947: d2 b8 08                 a1 = a1 & a4
  2950: 78 9a                    u8 [a2] = a3
  2952: 64 6c                    a5 = s1
  2954: 95 13 50 91 00           t1 = sp + 0x9150
  2959: 82 1b 30 01              a4 = u64 [sp + 0x130]
  2963: 51 08 8e                 jump @173 if a1 == 0
      :                          @178
  2966: 95 c6 01                 s1 = a5 + 0x1
  2969: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  2972: 96 79 c2 00              a2 = a0 * 0xc2
  2976: c8 93 08                 a1 = t1 + a2
  2979: c8 08 0a                 a3 = a1 + ra
  2982: 7c aa                    a3 = u8 [a3]
  2984: c8 c8 09                 a2 = a1 + a5
  2987: 7c 99                    a2 = u8 [a2]
  2989: c8 68 08                 a1 = a1 + s1
  2992: 7c 88                    a1 = u8 [a1]
  2994: 96 bb c2 00              a4 = a4 * 0xc2
  2998: c8 b3 02                 t0 = t1 + a4
  3001: c8 02 0b                 a4 = t0 + ra
  3004: 7c bb                    a4 = u8 [a4]
  3006: c8 a9 09                 a2 = a2 + a3
  3009: c8 b8 08                 a1 = a1 + a4
  3012: c8 98 08                 a1 = a1 + a2
  3015: c8 62 09                 a2 = t0 + s1
  3018: 7c 99                    a2 = u8 [a2]
  3020: 82 17 20 01              a0 = u64 [sp + 0x120]
  3024: 96 7a c2 00              a3 = a0 * 0xc2
  3028: c8 a3 03                 t1 = t1 + a3
  3031: c8 03 0b                 a4 = t1 + ra
  3034: 7c bb                    a4 = u8 [a4]
  3036: c8 c3 0a                 a3 = t1 + a5
  3039: 7c a4                    t2 = u8 [a3]
  3041: c8 63 03                 t1 = t1 + s1
  3044: 7c 35                    s0 = u8 [t1]
  3046: c8 c2 02                 t0 = t0 + a5
  3049: 7c 2a                    a3 = u8 [t0]
  3051: c8 b9 09                 a2 = a2 + a4
  3054: c8 49 09                 a2 = a2 + t2
  3057: c8 98 08                 a1 = a1 + a2
  3060: be 58 09                 i32 a2 = a1 + s0
  3063: 51 0a 1a                 jump @182 if a3 == 0
      :                          @179
  3066: 33 05 c0 00              s0 = 0xc0
  3070: 52 1a 01 63 ff           jump @176 if a3 != 1
      :                          @180
  3075: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  3078: 33 0a 01                 a3 = 0x1
  3081: 52 19 02 58 ff           jump @176 if a2 != 2
      :                          @181
  3086: 28 56 ff                 jump @177
      :                          @182
  3089: 33 0a 01                 a3 = 0x1
  3092: 33 05 c0 00              s0 = 0xc0
  3096: 52 19 03 49 ff           jump @176 if a2 != 3
      :                          @183
  3101: 28 47 ff                 jump @177
      :                          @184
  3104: 95 17 58 b4 01           a0 = sp + 0x1b458
  3109: 33 09 00 90 00           a2 = 0x9000
  3114: 95 16 58 b4 01           s1 = sp + 0x1b458
  3119: 33 08                    a1 = 0
  3121: 50 10 22 35 08           ra = 34, jump @356
      :                          @185 [@dyn 17]
  3126: 33 07 40                 a0 = 0x40
  3129: 95 15 58 24 01           s0 = sp + 0x12458
  3134: 01                       fallthrough
      :                          @186
  3135: 7b 17 30 01              u64 [sp + 0x130] = a0
  3139: 33 09 40                 a2 = 0x40
  3142: 64 67                    a0 = s1
  3144: 64 58                    a1 = s0
  3146: 50 10 24 6a 07           ra = 36, jump @338
      :                          @187 [@dyn 18]
  3151: 82 17 30 01              a0 = u64 [sp + 0x130]
  3155: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3158: 95 55 c0 00              s0 = s0 + 0xc0
  3162: 95 66 40                 s1 = s1 + 0x40
  3165: 52 07 e2                 jump @186 if a0 != 0
      :                          @188
  3168: 33 07 40                 a0 = 0x40
  3171: 95 15 98 24 01           s0 = sp + 0x12498
  3176: 82 16 78                 s1 = u64 [sp + 0x78]
  3179: 01                       fallthrough
      :                          @189
  3180: 7b 17 30 01              u64 [sp + 0x130] = a0
  3184: 33 09 40                 a2 = 0x40
  3187: 64 67                    a0 = s1
  3189: 64 58                    a1 = s0
  3191: 50 10 26 3d 07           ra = 38, jump @338
      :                          @190 [@dyn 19]
  3196: 82 17 30 01              a0 = u64 [sp + 0x130]
  3200: 95 66 40                 s1 = s1 + 0x40
  3203: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3206: 95 55 c0 00              s0 = s0 + 0xc0
  3210: 52 07 e2                 jump @189 if a0 != 0
      :                          @191
  3213: 33 07 40                 a0 = 0x40
  3216: 95 15 d8 24 01           s0 = sp + 0x124d8
  3221: 82 16 70                 s1 = u64 [sp + 0x70]
  3224: 01                       fallthrough
      :                          @192
  3225: 7b 17 30 01              u64 [sp + 0x130] = a0
  3229: 33 09 40                 a2 = 0x40
  3232: 64 67                    a0 = s1
  3234: 64 58                    a1 = s0
  3236: 50 10 28 10 07           ra = 40, jump @338
      :                          @193 [@dyn 20]
  3241: 82 17 30 01              a0 = u64 [sp + 0x130]
  3245: 95 66 40                 s1 = s1 + 0x40
  3248: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3251: 95 55 c0 00              s0 = s0 + 0xc0
  3255: 52 07 e2                 jump @192 if a0 != 0
      :                          @194
  3258: 33 07 40                 a0 = 0x40
  3261: 82 15 48                 s0 = u64 [sp + 0x48]
  3264: 82 16 50                 s1 = u64 [sp + 0x50]
  3267: 01                       fallthrough
      :                          @195
  3268: 7b 17 30 01              u64 [sp + 0x130] = a0
  3272: 33 09 40                 a2 = 0x40
  3275: 64 67                    a0 = s1
  3277: 64 58                    a1 = s0
  3279: 50 10 2a e5 06           ra = 42, jump @338
      :                          @196 [@dyn 21]
  3284: 82 17 30 01              a0 = u64 [sp + 0x130]
  3288: 95 66 40                 s1 = s1 + 0x40
  3291: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3294: 95 55 c0 00              s0 = s0 + 0xc0
  3298: 52 07 e2                 jump @195 if a0 != 0
      :                          @197
  3301: 33 07 40                 a0 = 0x40
  3304: 82 15 60                 s0 = u64 [sp + 0x60]
  3307: 82 16 68                 s1 = u64 [sp + 0x68]
  3310: 01                       fallthrough
      :                          @198
  3311: 7b 17 30 01              u64 [sp + 0x130] = a0
  3315: 33 09 40                 a2 = 0x40
  3318: 64 67                    a0 = s1
  3320: 64 58                    a1 = s0
  3322: 50 10 2c ba 06           ra = 44, jump @338
      :                          @199 [@dyn 22]
  3327: 82 17 30 01              a0 = u64 [sp + 0x130]
  3331: 95 66 40                 s1 = s1 + 0x40
  3334: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3337: 95 55 c0 00              s0 = s0 + 0xc0
  3341: 52 07 e2                 jump @198 if a0 != 0
      :                          @200
  3344: 33 07 40                 a0 = 0x40
  3347: 82 15 40                 s0 = u64 [sp + 0x40]
  3350: 82 16 58                 s1 = u64 [sp + 0x58]
  3353: 01                       fallthrough
      :                          @201
  3354: 7b 17 30 01              u64 [sp + 0x130] = a0
  3358: 33 09 40                 a2 = 0x40
  3361: 64 67                    a0 = s1
  3363: 64 58                    a1 = s0
  3365: 50 10 2e 8f 06           ra = 46, jump @338
      :                          @202 [@dyn 23]
  3370: 82 17 30 01              a0 = u64 [sp + 0x130]
  3374: 95 66 40                 s1 = s1 + 0x40
  3377: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3380: 95 55 c0 00              s0 = s0 + 0xc0
  3384: 52 07 e2                 jump @201 if a0 != 0
      :                          @203
  3387: 33 07 40                 a0 = 0x40
  3390: 82 15 18                 s0 = u64 [sp + 0x18]
  3393: 82 16 28                 s1 = u64 [sp + 0x28]
  3396: 01                       fallthrough
      :                          @204
  3397: 7b 17 30 01              u64 [sp + 0x130] = a0
  3401: 33 09 40                 a2 = 0x40
  3404: 64 67                    a0 = s1
  3406: 64 58                    a1 = s0
  3408: 50 10 30 64 06           ra = 48, jump @338
      :                          @205 [@dyn 24]
  3413: 82 17 30 01              a0 = u64 [sp + 0x130]
  3417: 95 66 40                 s1 = s1 + 0x40
  3420: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3423: 95 55 c0 00              s0 = s0 + 0xc0
  3427: 52 07 e2                 jump @204 if a0 != 0
      :                          @206
  3430: 33 07 40                 a0 = 0x40
  3433: 82 15 20                 s0 = u64 [sp + 0x20]
  3436: 82 16 38                 s1 = u64 [sp + 0x38]
  3439: 01                       fallthrough
      :                          @207
  3440: 7b 17 30 01              u64 [sp + 0x130] = a0
  3444: 33 09 40                 a2 = 0x40
  3447: 64 67                    a0 = s1
  3449: 64 58                    a1 = s0
  3451: 50 10 32 39 06           ra = 50, jump @338
      :                          @208 [@dyn 25]
  3456: 82 17 30 01              a0 = u64 [sp + 0x130]
  3460: 95 66 40                 s1 = s1 + 0x40
  3463: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3466: 95 55 c0 00              s0 = s0 + 0xc0
  3470: 52 07 e2                 jump @207 if a0 != 0
      :                          @209
  3473: 33 07 40                 a0 = 0x40
  3476: 82 15 10                 s0 = u64 [sp + 0x10]
  3479: 82 16 30                 s1 = u64 [sp + 0x30]
  3482: 01                       fallthrough
      :                          @210
  3483: 7b 17 30 01              u64 [sp + 0x130] = a0
  3487: 33 09 40                 a2 = 0x40
  3490: 64 67                    a0 = s1
  3492: 64 58                    a1 = s0
  3494: 50 10 34 0e 06           ra = 52, jump @338
      :                          @211 [@dyn 26]
  3499: 82 17 30 01              a0 = u64 [sp + 0x130]
  3503: 95 66 40                 s1 = s1 + 0x40
  3506: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3509: 95 55 c0 00              s0 = s0 + 0xc0
  3513: 52 07 e2                 jump @210 if a0 != 0
      :                          @212
  3516: 95 17 3c 01              a0 = sp + 0x13c
  3520: 95 18 58 b4 01           a1 = sp + 0x1b458
  3525: 33 09 00 90 00           a2 = 0x9000
  3530: 50 10 36 ea 05           ra = 54, jump @338
      :                          @213 [@dyn 27]
  3535: 82 17 00 01              a0 = u64 [sp + 0x100]
  3539: 82 16 08 01              s1 = u64 [sp + 0x108]
  3543: 33 05 c2 00              s0 = 0xc2
  3547: ab 76 91 fa              jump @130 if s1 != a0
      :                          @214
  3551: 95 15 3c 01              s0 = sp + 0x13c
  3555: 33 06 00 10              s1 = 0x1000
  3559: 95 17 3c 01              a0 = sp + 0x13c
  3563: 33 08 00 10              a1 = 0x1000
  3567: 0a 13                    ecalli 19 // 'export'
  3569: c8 65 07                 a0 = s0 + s1
  3572: 33 08 00 10              a1 = 0x1000
  3576: 0a 13                    ecalli 19 // 'export'
  3578: 95 57 00 20              a0 = s0 + 0x2000
  3582: 33 08 00 10              a1 = 0x1000
  3586: 0a 13                    ecalli 19 // 'export'
  3588: 95 57 00 30              a0 = s0 + 0x3000
  3592: 33 08 00 10              a1 = 0x1000
  3596: 0a 13                    ecalli 19 // 'export'
  3598: 95 57 00 40              a0 = s0 + 0x4000
  3602: 33 08 00 10              a1 = 0x1000
  3606: 0a 13                    ecalli 19 // 'export'
  3608: 95 57 00 50              a0 = s0 + 0x5000
  3612: 33 08 00 10              a1 = 0x1000
  3616: 0a 13                    ecalli 19 // 'export'
  3618: 95 57 00 60              a0 = s0 + 0x6000
  3622: 33 08 00 10              a1 = 0x1000
  3626: 0a 13                    ecalli 19 // 'export'
  3628: 95 57 00 70              a0 = s0 + 0x7000
  3632: 33 08 00 10              a1 = 0x1000
  3636: 0a 13                    ecalli 19 // 'export'
  3638: 95 57 00 80 00           a0 = s0 + 0x8000
  3643: 33 08 00 10              a1 = 0x1000
  3647: 0a 13                    ecalli 19 // 'export'
  3649: 95 17 3c 91 00           a0 = sp + 0x913c
  3654: 95 18 58 b4 01           a1 = sp + 0x1b458
  3659: 7b 87                    u64 [a1] = a0
  3661: 33 07 06                 a0 = 0x6
  3664: 7b 87 08                 u64 [a1 + 0x8] = a0
  3667: 33 07 28 00 01           a0 = 0x10028
  3672: 7b 87 10                 u64 [a1 + 0x10] = a0
  3675: 33 07 0a                 a0 = 0xa
  3678: 7b 87 18                 u64 [a1 + 0x18] = a0
  3681: 33 07 10 01 01           a0 = 0x10110
  3686: 95 18 3c 91 00           a1 = sp + 0x913c
  3691: 7b 87 14                 u64 [a1 + 0x14] = a0
  3694: 49 18 1c 03              u64 [a1 + 28] = 0x3
  3698: 95 17 58 b4 01           a0 = sp + 0x1b458
  3703: 7b 87 24                 u64 [a1 + 0x24] = a0
  3706: 49 18 2c 02              u64 [a1 + 44] = 0x2
  3710: 49 18 34                 u64 [a1 + 52] = 0
  3713: 95 17 58 24 01           a0 = sp + 0x12458
  3718: 95 18 50 91 00           a1 = sp + 0x9150
  3723: 50 10 38 c5 02           ra = 56, jump @288
      :                          @215 [@dyn 28]
  3728: 95 17 58 24 01           a0 = sp + 0x12458
  3733: 82 75 08                 s0 = u64 [a0 + 0x8]
  3736: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3739: 82 76                    s1 = u64 [a0]
  3741: 33 07 02                 a0 = 0x2
  3744: 33 08                    a1 = 0
  3746: 33 09                    a2 = 0
  3748: 64 5a                    a3 = s0
  3750: 33 00 3a                 ra = 0x3a
  3753: 0a 64                    ecalli 100 // 'log'
  3755: 01                       fallthrough
      :                          @216 [@dyn 29]
  3756: 82 17 08                 a0 = u64 [sp + 0x8]
  3759: c8 67 07                 a0 = a0 + s1
  3762: 53 37 00 00 f0 27        jump @222 if a0 <u 4293918720
      :                          @217
  3768: 33 07 10 00 03           a0 = 0x30010
  3773: 95 77 00 00 10           a0 = a0 + 0x100000
  3778: 01                       fallthrough
      :                          @218
  3779: 82 78                    a1 = u64 [a0]
  3781: c9 87 09                 a2 = a0 - a1
  3784: ab 59 11                 jump @222 if a2 != s0
      :                          @219
  3787: c9 68 09                 a2 = a1 - s1
  3790: 01                       fallthrough
      :                          @220
  3791: 82 7a                    a3 = u64 [a0]
  3793: ab 8a f2                 jump @218 if a3 != a1
      :                          @221
  3796: 7b 79                    u64 [a0] = a2
  3798: 33 0b                    a4 = 0
  3800: 01                       fallthrough
      :                          @222
  3801: 33 07 00 00 01           a0 = 0x10000
  3806: 33 08                    a1 = 0
  3808: 33 09 78 3c 02           a2 = 0x23c78
  3813: c8 91 01                 sp = sp + a2
  3816: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3820: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3824: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3828: 95 11 f8 07              sp = sp + 0x7f8
  3832: 32 00                    ret
      :                          @223
  3834: 00                       trap
      :                          @224
  3835: 00                       trap
      :                          @225
  3836: 00                       trap
      :                          @226
  3837: 00                       trap
      :                          @227
  3838: 00                       trap
      :                          @228
  3839: 00                       trap
      :                          @229
  3840: 00                       trap
      :                          @230 [export #1: 'accumulate']
  3841: 33 07 00 00 01           a0 = 0x10000
  3846: 33 08                    a1 = 0
  3848: 32 00                    ret
      :                          @231 [export #2: 'on_transfer']
  3850: 33 07 00 00 01           a0 = 0x10000
  3855: 33 08                    a1 = 0
  3857: 32 00                    ret
      :                          @232
  3859: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3862: 7b 10 40                 u64 [sp + 0x40] = ra
  3865: 7b 15 38                 u64 [sp + 0x38] = s0
  3868: 7b 16 30                 u64 [sp + 0x30] = s1
  3871: c8 89 09                 a2 = a2 + a1
  3874: ac 89 52                 jump @240 if a2 <u a1
      :                          @233
  3877: 64 75                    s0 = a0
  3879: 82 77                    a0 = u64 [a0]
  3881: 97 78 01                 a1 = a0 << 0x1
  3884: 33 0a 08                 a3 = 0x8
  3887: e4 a9 09                 a2 = maxu(a2, a3)
  3890: e4 98 06                 s1 = maxu(a1, a2)
  3893: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3896: 98 88 3f                 a1 = a1 >> 0x3f
  3899: 51 07 12                 jump @235 if a0 == 0
      :                          @234
  3902: 82 59 08                 a2 = u64 [s0 + 0x8]
  3905: 7b 19 18                 u64 [sp + 0x18] = a2
  3908: 49 11 20 01              u64 [sp + 32] = 0x1
  3912: 7b 17 28                 u64 [sp + 0x28] = a0
  3915: 28 06                    jump @236
      :                          @235
  3917: 49 11 20                 u64 [sp + 32] = 0
  3920: 01                       fallthrough
      :                          @236
  3921: 64 17                    a0 = sp
  3923: 95 1a 18                 a3 = sp + 0x18
  3926: 64 69                    a2 = s1
  3928: 50 10 3c 32              ra = 60, jump @244
      :                          @237 [@dyn 30]
  3932: 82 18                    a1 = u64 [sp]
  3934: 82 17 08                 a0 = u64 [sp + 0x8]
  3937: 51 08 14                 jump @241 if a1 == 0
      :                          @238
  3940: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3950: aa 87 0d                 jump @242 if a0 == a1
      :                          @239
  3953: 52 07 18                 jump @243 if a0 != 0
      :                          @240
  3956: 00                       trap
      :                          @241
  3957: 7b 57 08                 u64 [s0 + 0x8] = a0
  3960: 7b 56                    u64 [s0] = s1
  3962: 01                       fallthrough
      :                          @242
  3963: 82 10 40                 ra = u64 [sp + 0x40]
  3966: 82 15 38                 s0 = u64 [sp + 0x38]
  3969: 82 16 30                 s1 = u64 [sp + 0x30]
  3972: 95 11 48                 sp = sp + 0x48
  3975: 32 00                    ret
      :                          @243
  3977: 00                       trap
      :                          @244
  3978: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3981: 7b 10 30                 u64 [sp + 0x30] = ra
  3984: 7b 15 28                 u64 [sp + 0x28] = s0
  3987: 7b 16 20                 u64 [sp + 0x20] = s1
  3990: 64 95                    s0 = a2
  3992: 64 72                    t0 = a0
  3994: 51 08 79                 jump @254 if a1 == 0
      :                          @245
  3997: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4000: 51 07 7c                 jump @255 if a0 == 0
      :                          @246
  4003: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4006: 51 09 aa 00              jump @262 if a2 == 0
      :                          @247
  4010: 82 a8                    a1 = u64 [a3]
  4012: 33 06 10 00 03           s1 = 0x30010
  4017: 33 03 00 00 10           t1 = 0x100000
  4022: c8 36 06                 s1 = s1 + t1
  4025: 01                       fallthrough
      :                          @248
  4026: 82 6a                    a3 = u64 [s1]
  4028: c8 5a 07                 a0 = a3 + s0
  4031: ac a7 cf 00              jump @268 if a0 <u a3
      :                          @249
  4035: 95 7b 01                 a4 = a0 + 0x1
  4038: 88 bc 01                 a5 = a4 <u 0x1
  4041: d8 b3 0b                 a4 = t1 <u a4
  4044: d4 cb 0b                 a4 = a4 | a5
  4047: 52 0b bf 00              jump @268 if a4 != 0
      :                          @250
  4051: 82 6b                    a4 = u64 [s1]
  4053: ab ab e5                 jump @248 if a4 != a3
      :                          @251
  4056: 7b 67                    u64 [s1] = a0
  4058: 33 0c                    a5 = 0
  4060: 7b 12 18                 u64 [sp + 0x18] = t0
  4063: 33 0a 10 00 03           a3 = 0x30010
  4068: 33 0b 00 00 10           a4 = 0x100000
  4073: 7b 1a                    u64 [sp] = a3
  4075: c8 ba 0a                 a3 = a3 + a4
  4078: c9 7a 07                 a0 = a3 - a0
  4081: 7b 17 10                 u64 [sp + 0x10] = a0
  4084: 7b 18 08                 u64 [sp + 0x8] = a1
  4087: 64 96                    s1 = a2
  4089: 50 10 3e bb 03           ra = 62, jump @338
      :                          @252 [@dyn 31]
  4094: 54 36 00 00 10 98 00     jump @269 if s1 <=u 1048576
      :                          @253
  4101: 82 12 18                 t0 = u64 [sp + 0x18]
  4104: 82 18 10                 a1 = u64 [sp + 0x10]
  4107: 33 07                    a0 = 0
  4109: 7b 28 08                 u64 [t0 + 0x8] = a1
  4112: 28 b5 00                 jump @275
      :                          @254
  4115: 49 12 08                 u64 [t0 + 8] = 0
  4118: 33 07 01                 a0 = 0x1
  4121: 28 ac 00                 jump @275
      :                          @255
  4124: 33 09 10 00 03           a2 = 0x30010
  4129: 33 07 00 00 10           a0 = 0x100000
  4134: c8 79 09                 a2 = a2 + a0
  4137: 01                       fallthrough
      :                          @256
  4138: 82 9a                    a3 = u64 [a2]
  4140: c8 5a 08                 a1 = a3 + s0
  4143: ac a8 5f                 jump @268 if a1 <u a3
      :                          @257
  4146: 95 8b 01                 a4 = a1 + 0x1
  4149: 88 bc 01                 a5 = a4 <u 0x1
  4152: d8 b7 0b                 a4 = a0 <u a4
  4155: d4 cb 0b                 a4 = a4 | a5
  4158: 52 0b 50                 jump @268 if a4 != 0
      :                          @258
  4161: 82 9b                    a4 = u64 [a2]
  4163: ab ab e7                 jump @256 if a4 != a3
      :                          @259
  4166: 7b 98                    u64 [a2] = a1
  4168: 33 0c                    a5 = 0
  4170: 01                       fallthrough
      :                          @260
  4171: ab ab df                 jump @256 if a4 != a3
      :                          @261
  4174: 28 31                    jump @267
      :                          @262
  4176: 33 09 10 00 03           a2 = 0x30010
  4181: 33 07 00 00 10           a0 = 0x100000
  4186: c8 79 09                 a2 = a2 + a0
  4189: 01                       fallthrough
      :                          @263
  4190: 82 9a                    a3 = u64 [a2]
  4192: c8 5a 08                 a1 = a3 + s0
  4195: ac a8 2b                 jump @268 if a1 <u a3
      :                          @264
  4198: 95 8b 01                 a4 = a1 + 0x1
  4201: 88 bc 01                 a5 = a4 <u 0x1
  4204: d8 b7 0b                 a4 = a0 <u a4
  4207: d4 cb 0b                 a4 = a4 | a5
  4210: 52 0b 1c                 jump @268 if a4 != 0
      :                          @265
  4213: 82 9b                    a4 = u64 [a2]
  4215: ab ab e7                 jump @263 if a4 != a3
      :                          @266
  4218: 7b 98                    u64 [a2] = a1
  4220: 33 0c                    a5 = 0
  4222: 01                       fallthrough
      :                          @267
  4223: 33 07 10 00 13           a0 = 0x130010
  4228: c9 87 08                 a1 = a0 - a1
  4231: 33 07                    a0 = 0
  4233: 7b 28 08                 u64 [t0 + 0x8] = a1
  4236: 28 39                    jump @275
      :                          @268
  4238: 33 07 01                 a0 = 0x1
  4241: 7b 27 08                 u64 [t0 + 0x8] = a0
  4244: 28 31                    jump @275
      :                          @269
  4246: 64 6c                    a5 = s1
  4248: 82 17                    a0 = u64 [sp]
  4250: 95 77 00 00 10           a0 = a0 + 0x100000
  4255: 82 12 18                 t0 = u64 [sp + 0x18]
  4258: 82 16 08                 s1 = u64 [sp + 0x8]
  4261: 01                       fallthrough
      :                          @270
  4262: 82 78                    a1 = u64 [a0]
  4264: c9 87 09                 a2 = a0 - a1
  4267: ab 69 11                 jump @274 if a2 != s1
      :                          @271
  4270: c9 c8 09                 a2 = a1 - a5
  4273: 01                       fallthrough
      :                          @272
  4274: 82 7a                    a3 = u64 [a0]
  4276: ab 8a f2                 jump @270 if a3 != a1
      :                          @273
  4279: 7b 79                    u64 [a0] = a2
  4281: 33 0b                    a4 = 0
  4283: 01                       fallthrough
      :                          @274
  4284: 82 18 10                 a1 = u64 [sp + 0x10]
  4287: 33 07                    a0 = 0
  4289: 7b 28 08                 u64 [t0 + 0x8] = a1
  4292: 01                       fallthrough
      :                          @275
  4293: 7b 25 10                 u64 [t0 + 0x10] = s0
  4296: 7b 27                    u64 [t0] = a0
  4298: 82 10 30                 ra = u64 [sp + 0x30]
  4301: 82 15 28                 s0 = u64 [sp + 0x28]
  4304: 82 16 20                 s1 = u64 [sp + 0x20]
  4307: 95 11 38                 sp = sp + 0x38
  4310: 32 00                    ret
      :                          @276
  4312: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4315: 7b 10 40                 u64 [sp + 0x40] = ra
  4318: 7b 15 38                 u64 [sp + 0x38] = s0
  4321: 7b 16 30                 u64 [sp + 0x30] = s1
  4324: 95 88 01                 a1 = a1 + 0x1
  4327: 51 08 53                 jump @284 if a1 == 0
      :                          @277
  4330: 64 75                    s0 = a0
  4332: 82 77                    a0 = u64 [a0]
  4334: 97 79 01                 a2 = a0 << 0x1
  4337: 33 0a 08                 a3 = 0x8
  4340: e4 a8 08                 a1 = maxu(a1, a3)
  4343: e4 89 06                 s1 = maxu(a2, a1)
  4346: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4349: 98 88 3f                 a1 = a1 >> 0x3f
  4352: 51 07 12                 jump @279 if a0 == 0
      :                          @278
  4355: 82 59 08                 a2 = u64 [s0 + 0x8]
  4358: 7b 19 18                 u64 [sp + 0x18] = a2
  4361: 49 11 20 01              u64 [sp + 32] = 0x1
  4365: 7b 17 28                 u64 [sp + 0x28] = a0
  4368: 28 06                    jump @280
      :                          @279
  4370: 49 11 20                 u64 [sp + 32] = 0
  4373: 01                       fallthrough
      :                          @280
  4374: 64 17                    a0 = sp
  4376: 95 1a 18                 a3 = sp + 0x18
  4379: 64 69                    a2 = s1
  4381: 50 10 40 6d fe           ra = 64, jump @244
      :                          @281 [@dyn 32]
  4386: 82 18                    a1 = u64 [sp]
  4388: 82 17 08                 a0 = u64 [sp + 0x8]
  4391: 51 08 14                 jump @285 if a1 == 0
      :                          @282
  4394: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4404: aa 87 0d                 jump @286 if a0 == a1
      :                          @283
  4407: 52 07 18                 jump @287 if a0 != 0
      :                          @284
  4410: 00                       trap
      :                          @285
  4411: 7b 57 08                 u64 [s0 + 0x8] = a0
  4414: 7b 56                    u64 [s0] = s1
  4416: 01                       fallthrough
      :                          @286
  4417: 82 10 40                 ra = u64 [sp + 0x40]
  4420: 82 15 38                 s0 = u64 [sp + 0x38]
  4423: 82 16 30                 s1 = u64 [sp + 0x30]
  4426: 95 11 48                 sp = sp + 0x48
  4429: 32 00                    ret
      :                          @287
  4431: 00                       trap
      :                          @288
  4432: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4435: 7b 10 30                 u64 [sp + 0x30] = ra
  4438: 7b 15 28                 u64 [sp + 0x28] = s0
  4441: 7b 16 20                 u64 [sp + 0x20] = s1
  4444: 82 8a 08                 a3 = u64 [a1 + 0x8]
  4447: 64 75                    s0 = a0
  4449: 51 0a 35                 jump @293 if a3 == 0
      :                          @289
  4452: 82 89                    a2 = u64 [a1]
  4454: 33 07                    a0 = 0
  4456: 95 9b 08                 a4 = a2 + 0x8
  4459: 01                       fallthrough
      :                          @290
  4460: 82 bc                    a5 = u64 [a4]
  4462: c8 c7 07                 a0 = a0 + a5
  4465: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4468: 95 bb 10                 a4 = a4 + 0x10
  4471: 52 0a f5                 jump @290 if a3 != 0
      :                          @291
  4474: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4477: 51 0a 24                 jump @295 if a3 == 0
      :                          @292
  4480: 82 99 08                 a2 = u64 [a2 + 0x8]
  4483: 8e 99                    a2 = a2 >u 0
  4485: 88 7a 10                 a3 = a0 <u 0x10
  4488: 85 aa 01                 a3 = a3 ^ 0x1
  4491: d4 a9 09                 a2 = a2 | a3
  4494: 89 7a                    a3 = a0 <s 0
  4496: e0 a9 09                 a2 = a2 & ~a3
  4499: 52 09 0a                 jump @294 if a2 != 0
      :                          @293
  4502: 33 07                    a0 = 0
  4504: 33 09 01                 a2 = 0x1
  4507: 28 4a                    jump @303
      :                          @294
  4509: 97 77 01                 a0 = a0 << 0x1
  4512: 01                       fallthrough
      :                          @295
  4513: 51 07 40                 jump @302 if a0 == 0
      :                          @296
  4516: 57 07 73                 jump @308 if a0 <s 0
      :                          @297
  4519: 64 52                    t0 = s0
  4521: 33 0b 10 00 03           a4 = 0x30010
  4526: 33 09 00 00 10           a2 = 0x100000
  4531: c8 9b 0b                 a4 = a4 + a2
  4534: 01                       fallthrough
      :                          @298
  4535: 82 bc                    a5 = u64 [a4]
  4537: c8 7c 0a                 a3 = a5 + a0
  4540: ac ca 59                 jump @306 if a3 <u a5
      :                          @299
  4543: 95 a5 01                 s0 = a3 + 0x1
  4546: 88 56 01                 s1 = s0 <u 0x1
  4549: d8 59 05                 s0 = a2 <u s0
  4552: d4 65 05                 s0 = s0 | s1
  4555: 52 05 4a                 jump @306 if s0 != 0
      :                          @300
  4558: 82 b6                    s1 = u64 [a4]
  4560: ab c6 e7                 jump @298 if s1 != a5
      :                          @301
  4563: 7b ba                    u64 [a4] = a3
  4565: 33 09 10 00 13           a2 = 0x130010
  4570: c9 a9 09                 a2 = a2 - a3
  4573: 64 25                    s0 = t0
  4575: 28 06                    jump @303
      :                          @302
  4577: 33 09 01                 a2 = 0x1
  4580: 01                       fallthrough
      :                          @303
  4581: 7b 17                    u64 [sp] = a0
  4583: 7b 19 08                 u64 [sp + 0x8] = a2
  4586: 49 11 10                 u64 [sp + 16] = 0
  4589: 64 17                    a0 = sp
  4591: 50 10 42 84 06           ra = 66, jump @435
      :                          @304 [@dyn 33]
  4596: 52 07 22                 jump @307 if a0 != 0
      :                          @305
  4599: 82 17 10                 a0 = u64 [sp + 0x10]
  4602: 82 18 08                 a1 = u64 [sp + 0x8]
  4605: 82 19                    a2 = u64 [sp]
  4607: 7b 57 10                 u64 [s0 + 0x10] = a0
  4610: 7b 58 08                 u64 [s0 + 0x8] = a1
  4613: 7b 59                    u64 [s0] = a2
  4615: 82 10 30                 ra = u64 [sp + 0x30]
  4618: 82 15 28                 s0 = u64 [sp + 0x28]
  4621: 82 16 20                 s1 = u64 [sp + 0x20]
  4624: 95 11 38                 sp = sp + 0x38
  4627: 32 00                    ret
      :                          @306
  4629: 00                       trap
      :                          @307
  4630: 00                       trap
      :                          @308
  4631: 00                       trap
      :                          @309 [@dyn 34]
  4632: 82 72                    t0 = u64 [a0]
  4634: 33 09 00 00 f0           a2 = 0xfffffffffff00000
  4639: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
  4644: ac 9a 28                 jump @315 if a3 <u a2
      :                          @310
  4647: 82 77 08                 a0 = u64 [a0 + 0x8]
  4650: 33 09 10 00 03           a2 = 0x30010
  4655: 95 99 00 00 10           a2 = a2 + 0x100000
  4660: 01                       fallthrough
      :                          @311
  4661: 82 9a                    a3 = u64 [a2]
  4663: c9 a9 0b                 a4 = a2 - a3
  4666: ab 7b 12                 jump @315 if a4 != a0
      :                          @312
  4669: c9 2a 0b                 a4 = a3 - t0
  4672: 01                       fallthrough
      :                          @313
  4673: 82 9c                    a5 = u64 [a2]
  4675: ab ac f2                 jump @311 if a5 != a3
      :                          @314
  4678: 7b 9b                    u64 [a2] = a4
  4680: 33 08                    a1 = 0
  4682: 32 00                    ret
      :                          @315
  4684: 32 00                    ret
      :                          @316 [@dyn 35]
  4686: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4689: 7b 10 18                 u64 [sp + 0x18] = ra
  4692: 7b 15 10                 u64 [sp + 0x10] = s0
  4695: 7b 16 08                 u64 [sp + 0x8] = s1
  4698: 64 75                    s0 = a0
  4700: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4703: 82 77                    a0 = u64 [a0]
  4705: c9 a7 07                 a0 = a0 - a3
  4708: 64 96                    s1 = a2
  4710: ac 97 2a                 jump @319 if a0 <u a2
      :                          @317
  4713: 7b 1a                    u64 [sp] = a3
  4715: 82 57 08                 a0 = u64 [s0 + 0x8]
  4718: c8 a7 07                 a0 = a0 + a3
  4721: 64 69                    a2 = s1
  4723: 50 10 48 41 01           ra = 72, jump @338
      :                          @318 [@dyn 36]
  4728: 82 17                    a0 = u64 [sp]
  4730: c8 76 06                 s1 = s1 + a0
  4733: 7b 56 10                 u64 [s0 + 0x10] = s1
  4736: 33 07                    a0 = 0
  4738: 82 10 18                 ra = u64 [sp + 0x18]
  4741: 82 15 10                 s0 = u64 [sp + 0x10]
  4744: 82 16 08                 s1 = u64 [sp + 0x8]
  4747: 95 11 20                 sp = sp + 0x20
  4750: 32 00                    ret
      :                          @319
  4752: 64 57                    a0 = s0
  4754: 7b 18                    u64 [sp] = a1
  4756: 64 a8                    a1 = a3
  4758: 64 69                    a2 = s1
  4760: 50 10 4a 7b fc           ra = 74, jump @232
      :                          @320 [@dyn 37]
  4765: 82 18                    a1 = u64 [sp]
  4767: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4770: 28 c7                    jump @317
      :                          @321 [@dyn 38]
  4772: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4775: 7b 10 20                 u64 [sp + 0x20] = ra
  4778: 7b 15 18                 u64 [sp + 0x18] = s0
  4781: 7b 16 10                 u64 [sp + 0x10] = s1
  4784: 64 86                    s1 = a1
  4786: 83 88                    i32 a1 = a1 + 0
  4788: 33 09 80 00              a2 = 0x80
  4792: 64 7a                    a3 = a0
  4794: ae 98 2b                 jump @326 if a1 >=u a2
      :                          @322
  4797: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4800: 82 a7                    a0 = u64 [a3]
  4802: ab 78 12                 jump @325 if a1 != a0
      :                          @323
  4805: 64 a7                    a0 = a3
  4807: 64 a5                    s0 = a3
  4809: 50 10 4e 0f fe           ra = 78, jump @276
      :                          @324 [@dyn 39]
  4814: 64 5a                    a3 = s0
  4816: 82 58 10                 a1 = u64 [s0 + 0x10]
  4819: 01                       fallthrough
      :                          @325
  4820: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4823: c8 87 07                 a0 = a0 + a1
  4826: 78 76                    u8 [a0] = s1
  4828: 95 88 01                 a1 = a1 + 0x1
  4831: 7b a8 10                 u64 [a3 + 0x10] = a1
  4834: 28 ab 00                 jump @334
      :                          @326
  4837: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4840: 48 11 0c                 u32 [sp + 12] = 0
  4843: 52 07 1c                 jump @328 if a0 != 0
      :                          @327
  4846: 98 67 06                 a0 = s1 >> 0x6
  4849: 86 77 c0 00              a0 = a0 | 0xc0
  4853: 78 17 0c                 u8 [sp + 0xc] = a0
  4856: 84 67 3f                 a0 = s1 & 0x3f
  4859: 86 77 80 00              a0 = a0 | 0x80
  4863: 78 17 0d                 u8 [sp + 0xd] = a0
  4866: 33 06 02                 s1 = 0x2
  4869: 28 63                    jump @331
      :                          @328
  4871: 8b 67 10                 i32 a0 = s1 >> 0x10
  4874: 52 07 29                 jump @330 if a0 != 0
      :                          @329
  4877: 98 67 0c                 a0 = s1 >> 0xc
  4880: 86 77 e0 00              a0 = a0 | 0xe0
  4884: 78 17 0c                 u8 [sp + 0xc] = a0
  4887: 97 67 34                 a0 = s1 << 0x34
  4890: 98 77 3a                 a0 = a0 >> 0x3a
  4893: 95 77 80 00              a0 = a0 + 0x80
  4897: 78 17 0d                 u8 [sp + 0xd] = a0
  4900: 84 67 3f                 a0 = s1 & 0x3f
  4903: 86 77 80 00              a0 = a0 | 0x80
  4907: 78 17 0e                 u8 [sp + 0xe] = a0
  4910: 33 06 03                 s1 = 0x3
  4913: 28 37                    jump @331
      :                          @330
  4915: 97 67 2b                 a0 = s1 << 0x2b
  4918: 98 77 3d                 a0 = a0 >> 0x3d
  4921: 95 77 f0 00              a0 = a0 + 0xf0
  4925: 78 17 0c                 u8 [sp + 0xc] = a0
  4928: 97 67 2e                 a0 = s1 << 0x2e
  4931: 98 77 3a                 a0 = a0 >> 0x3a
  4934: 95 77 80 00              a0 = a0 + 0x80
  4938: 78 17 0d                 u8 [sp + 0xd] = a0
  4941: 97 67 34                 a0 = s1 << 0x34
  4944: 98 77 3a                 a0 = a0 >> 0x3a
  4947: 95 77 80 00              a0 = a0 + 0x80
  4951: 78 17 0e                 u8 [sp + 0xe] = a0
  4954: 84 67 3f                 a0 = s1 & 0x3f
  4957: 86 77 80 00              a0 = a0 | 0x80
  4961: 78 17 0f                 u8 [sp + 0xf] = a0
  4964: 33 06 04                 s1 = 0x4
  4967: 01                       fallthrough
      :                          @331
  4968: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4971: 82 a7                    a0 = u64 [a3]
  4973: c9 57 07                 a0 = a0 - s0
  4976: ac 67 2d                 jump @335 if a0 <u s1
      :                          @332
  4979: 7b 1a                    u64 [sp] = a3
  4981: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4984: c8 57 07                 a0 = a0 + s0
  4987: 95 18 0c                 a1 = sp + 0xc
  4990: 64 69                    a2 = s1
  4992: 50 10 50 34              ra = 80, jump @338
      :                          @333 [@dyn 40]
  4996: c8 56 06                 s1 = s1 + s0
  4999: 82 17                    a0 = u64 [sp]
  5001: 7b 76 10                 u64 [a0 + 0x10] = s1
  5004: 01                       fallthrough
      :                          @334
  5005: 33 07                    a0 = 0
  5007: 82 10 20                 ra = u64 [sp + 0x20]
  5010: 82 15 18                 s0 = u64 [sp + 0x18]
  5013: 82 16 10                 s1 = u64 [sp + 0x10]
  5016: 95 11 28                 sp = sp + 0x28
  5019: 32 00                    ret
      :                          @335
  5021: 64 a7                    a0 = a3
  5023: 64 58                    a1 = s0
  5025: 64 69                    a2 = s1
  5027: 64 a5                    s0 = a3
  5029: 50 10 52 6e fb           ra = 82, jump @232
      :                          @336 [@dyn 41]
  5034: 64 5a                    a3 = s0
  5036: 82 55 10                 s0 = u64 [s0 + 0x10]
  5039: 28 c4                    jump @332
      :                          @337 [@dyn 42]
  5041: 28 c2 04                 jump @435
      :                          @338
  5044: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5047: 7b 10 18                 u64 [sp + 0x18] = ra
  5050: 7b 15 10                 u64 [sp + 0x10] = s0
  5053: 7b 16 08                 u64 [sp + 0x8] = s1
  5056: 53 19 10 64              jump @347 if a2 <u 16
      :                          @339
  5060: 8d 7a                    i32 a3 = -a0
  5062: 84 a2 07                 t0 = a3 & 0x7
  5065: c8 27 0b                 a4 = a0 + t0
  5068: 51 02 15                 jump @342 if t0 == 0
      :                          @340
  5071: 64 8c                    a5 = a1
  5073: 64 75                    s0 = a0
  5075: 01                       fallthrough
      :                          @341
  5076: 7c ca                    a3 = u8 [a5]
  5078: 78 5a                    u8 [s0] = a3
  5080: 95 55 01                 s0 = s0 + 0x1
  5083: 95 cc 01                 a5 = a5 + 0x1
  5086: ac b5 f6                 jump @341 if s0 <u a4
      :                          @342
  5089: c8 28 03                 t1 = a1 + t0
  5092: c9 29 02                 t0 = a2 - t0
  5095: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5098: 84 38 07                 a1 = t1 & 0x7
  5101: c8 4b 0a                 a3 = a4 + t2
  5104: 51 08 3b                 jump @349 if a1 == 0
      :                          @343
  5107: 58 04 4b                 jump @352 if t2 <=s 0
      :                          @344
  5110: 97 38 03                 a1 = t1 << 0x3
  5113: 84 80 38                 ra = a1 & 0x38
  5116: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5119: 82 c5                    s0 = u64 [a5]
  5121: 8d 88                    i32 a1 = -a1
  5123: 84 88 38                 a1 = a1 & 0x38
  5126: 95 cc 08                 a5 = a5 + 0x8
  5129: 01                       fallthrough
      :                          @345
  5130: 82 c6                    s1 = u64 [a5]
  5132: d0 05 05                 s0 = s0 >> ra
  5135: cf 86 09                 a2 = s1 << a1
  5138: d4 59 09                 a2 = a2 | s0
  5141: 7b b9                    u64 [a4] = a2
  5143: 95 bb 08                 a4 = a4 + 0x8
  5146: 95 cc 08                 a5 = a5 + 0x8
  5149: 64 65                    s0 = s1
  5151: ac ab eb                 jump @345 if a4 <u a3
      :                          @346
  5154: 28 1c                    jump @352
      :                          @347
  5156: 64 7a                    a3 = a0
  5158: 52 09 21                 jump @353 if a2 != 0
      :                          @348
  5161: 28 2f                    jump @355
      :                          @349
  5163: 58 04 13                 jump @352 if t2 <=s 0
      :                          @350
  5166: 64 38                    a1 = t1
  5168: 01                       fallthrough
      :                          @351
  5169: 82 89                    a2 = u64 [a1]
  5171: 7b b9                    u64 [a4] = a2
  5173: 95 bb 08                 a4 = a4 + 0x8
  5176: 95 88 08                 a1 = a1 + 0x8
  5179: ac ab f6                 jump @351 if a4 <u a3
      :                          @352
  5182: c8 43 08                 a1 = t1 + t2
  5185: 84 29 07                 a2 = t0 & 0x7
  5188: 51 09 14                 jump @355 if a2 == 0
      :                          @353
  5191: c8 a9 09                 a2 = a2 + a3
  5194: 01                       fallthrough
      :                          @354
  5195: 7c 8b                    a4 = u8 [a1]
  5197: 78 ab                    u8 [a3] = a4
  5199: 95 aa 01                 a3 = a3 + 0x1
  5202: 95 88 01                 a1 = a1 + 0x1
  5205: ac 9a f6                 jump @354 if a3 <u a2
      :                          @355
  5208: 82 10 18                 ra = u64 [sp + 0x18]
  5211: 82 15 10                 s0 = u64 [sp + 0x10]
  5214: 82 16 08                 s1 = u64 [sp + 0x8]
  5217: 95 11 20                 sp = sp + 0x20
  5220: 32 00                    ret
      :                          @356
  5222: 53 19 10 48              jump @365 if a2 <u 16
      :                          @357
  5226: 8d 7a                    i32 a3 = -a0
  5228: 84 aa 07                 a3 = a3 & 0x7
  5231: c8 a7 0b                 a4 = a0 + a3
  5234: 51 0a 0e                 jump @360 if a3 == 0
      :                          @358
  5237: 64 7c                    a5 = a0
  5239: 01                       fallthrough
      :                          @359
  5240: 78 c8                    u8 [a5] = a1
  5242: 95 cc 01                 a5 = a5 + 0x1
  5245: ac bc fb                 jump @359 if a5 <u a4
      :                          @360
  5248: c9 a9 03                 t1 = a2 - a3
  5251: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5254: c8 cb 0a                 a3 = a4 + a5
  5257: 58 0c 1d                 jump @363 if a5 <=s 0
      :                          @361
  5260: 84 82 ff 00              t0 = a1 & 0xff
  5264: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5274: ca 92 0c                 a5 = t0 * a2
  5277: 01                       fallthrough
      :                          @362
  5278: 7b bc                    u64 [a4] = a5
  5280: 95 bb 08                 a4 = a4 + 0x8
  5283: ac ab fb                 jump @362 if a4 <u a3
      :                          @363
  5286: 84 39 07                 a2 = t1 & 0x7
  5289: 52 09 0a                 jump @366 if a2 != 0
      :                          @364
  5292: 28 13                    jump @368
      :                          @365
  5294: 64 7a                    a3 = a0
  5296: 51 09 0f                 jump @368 if a2 == 0
      :                          @366
  5299: c8 a9 09                 a2 = a2 + a3
  5302: 01                       fallthrough
      :                          @367
  5303: 78 a8                    u8 [a3] = a1
  5305: 95 aa 01                 a3 = a3 + 0x1
  5308: ac 9a fb                 jump @367 if a3 <u a2
      :                          @368
  5311: 32 00                    ret
      :                          @369 [@dyn 43]
  5313: 82 77                    a0 = u64 [a0]
  5315: 01                       fallthrough
      :                          @370
  5316: 28                       jump @370
      :                          @371
  5317: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  5320: 7b 10 58                 u64 [sp + 0x58] = ra
  5323: 7b 15 50                 u64 [sp + 0x50] = s0
  5326: 7b 16 48                 u64 [sp + 0x48] = s1
  5329: 7b 19 08                 u64 [sp + 0x8] = a2
  5332: 7b 18                    u64 [sp] = a1
  5334: 98 7a 04                 a3 = a0 >> 0x4
  5337: 33 09 27                 a2 = 0x27
  5340: 53 2a 71 02 81 00        jump @374 if a3 <u 625
      :                          @372
  5346: 33 09 27                 a2 = 0x27
  5349: 95 1b 46                 a4 = sp + 0x46
  5352: 3a 08 00 00 03           a1 = u64 [0x30000]
  5357: 7b 18 18                 u64 [sp + 0x18] = a1
  5360: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  5366: 33 03 7b 14              t1 = 0x147b
  5370: 33 05 72 01 01           s0 = 0x10172
  5375: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  5381: 01                       fallthrough
      :                          @373
  5382: 64 74                    t2 = a0
  5384: 82 17 18                 a0 = u64 [sp + 0x18]
  5387: d6 74 07                 a0 = t2 mulhu a0
  5390: 98 77 0b                 a0 = a0 >> 0xb
  5393: 82 18 10                 a1 = u64 [sp + 0x10]
  5396: c0 87 02                 i32 t0 = a0 * a1
  5399: c8 42 0a                 a3 = t0 + t2
  5402: 97 a2 30                 t0 = a3 << 0x30
  5405: 98 28 32                 a1 = t0 >> 0x32
  5408: ca 38 08                 a1 = a1 * t1
  5411: 98 8c 11                 a5 = a1 >> 0x11
  5414: 98 88 10                 a1 = a1 >> 0x10
  5417: 84 88 fe 07              a1 = a1 & 0x7fe
  5421: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  5424: c8 ca 0a                 a3 = a3 + a5
  5427: 97 aa 31                 a3 = a3 << 0x31
  5430: 98 aa 30                 a3 = a3 >> 0x30
  5433: c8 58 08                 a1 = a1 + s0
  5436: 7c 8c                    a5 = u8 [a1]
  5438: 7c 88 01                 a1 = u8 [a1 + 0x1]
  5441: c8 5a 0a                 a3 = a3 + s0
  5444: 7c a6 01                 s1 = u8 [a3 + 0x1]
  5447: 7c aa                    a3 = u8 [a3]
  5449: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  5452: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  5455: 78 b6 01                 u8 [a4 + 0x1] = s1
  5458: 78 ba                    u8 [a4] = a3
  5460: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  5463: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  5466: ac 40 ac                 jump @373 if ra <u t2
      :                          @374
  5469: 54 17 63 3b              jump @376 if a0 <=u 99
      :                          @375
  5473: 97 78 30                 a1 = a0 << 0x30
  5476: 98 88 32                 a1 = a1 >> 0x32
  5479: 96 88 7b 14              a1 = a1 * 0x147b
  5483: 98 88 11                 a1 = a1 >> 0x11
  5486: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  5489: c8 a7 07                 a0 = a0 + a3
  5492: 97 77 31                 a0 = a0 << 0x31
  5495: 98 77 30                 a0 = a0 >> 0x30
  5498: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5501: 33 0a 72 01 01           a3 = 0x10172
  5506: c8 a7 07                 a0 = a0 + a3
  5509: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  5512: 7c 77                    a0 = u8 [a0]
  5514: 95 1b 21                 a4 = sp + 0x21
  5517: c8 9b 0b                 a4 = a4 + a2
  5520: 78 ba 01                 u8 [a4 + 0x1] = a3
  5523: 78 b7                    u8 [a4] = a0
  5525: 64 87                    a0 = a1
  5527: 01                       fallthrough
      :                          @376
  5528: 55 17 0a 14              jump @378 if a0 >=u 10
      :                          @377
  5532: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5535: 95 18 21                 a1 = sp + 0x21
  5538: c8 98 08                 a1 = a1 + a2
  5541: 83 77 30                 i32 a0 = a0 + 0x30
  5544: 78 87                    u8 [a1] = a0
  5546: 28 21                    jump @379
      :                          @378
  5548: 97 77 01                 a0 = a0 << 0x1
  5551: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5554: 33 08 72 01 01           a1 = 0x10172
  5559: c8 87 07                 a0 = a0 + a1
  5562: 7c 78 01                 a1 = u8 [a0 + 0x1]
  5565: 7c 77                    a0 = u8 [a0]
  5567: 95 1a 21                 a3 = sp + 0x21
  5570: c8 9a 0a                 a3 = a3 + a2
  5573: 78 a8 01                 u8 [a3 + 0x1] = a1
  5576: 78 a7                    u8 [a3] = a0
  5578: 01                       fallthrough
      :                          @379
  5579: 95 1b 21                 a4 = sp + 0x21
  5582: c8 9b 0b                 a4 = a4 + a2
  5585: 9a 9c 27                 a5 = 0x27 - a2
  5588: 33 09 70 01 01           a2 = 0x10170
  5593: 82 17 08                 a0 = u64 [sp + 0x8]
  5596: 82 18                    a1 = u64 [sp]
  5598: 33 0a                    a3 = 0
  5600: 50 10 58 12              ra = 88, jump @381
      :                          @380 [@dyn 44]
  5604: 82 10 58                 ra = u64 [sp + 0x58]
  5607: 82 15 50                 s0 = u64 [sp + 0x50]
  5610: 82 16 48                 s1 = u64 [sp + 0x48]
  5613: 95 11 60                 sp = sp + 0x60
  5616: 32 00                    ret
      :                          @381
  5618: 95 11 98                 sp = sp + 0xffffffffffffff98
  5621: 7b 10 60                 u64 [sp + 0x60] = ra
  5624: 7b 15 58                 u64 [sp + 0x58] = s0
  5627: 7b 16 50                 u64 [sp + 0x50] = s1
  5630: 7b 1b 18                 u64 [sp + 0x18] = a4
  5633: 51 08 4f                 jump @388 if a1 == 0
      :                          @382
  5636: 80 76 34                 s1 = u32 [a0 + 0x34]
  5639: 84 68 01                 a1 = s1 & 0x1
  5642: 33 0b 2b                 a4 = 0x2b
  5645: 33 05 00 00 11           s0 = 0x110000
  5650: db 8b 05                 s0 = a4 if a1 != 0
  5653: 7b 15 28                 u64 [sp + 0x28] = s0
  5656: c8 c8 02                 t0 = a1 + a5
  5659: 84 68 04                 a1 = s1 & 0x4
  5662: 51 08 42                 jump @389 if a1 == 0
      :                          @383
  5665: 7b 19 30                 u64 [sp + 0x30] = a2
  5668: 33 08                    a1 = 0
  5670: 51 0a 1a                 jump @386 if a3 == 0
      :                          @384
  5673: 64 a5                    s0 = a3
  5675: 01                       fallthrough
      :                          @385
  5676: 7d 9b                    a4 = i8 [a2]
  5678: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  5681: 85 bb 01                 a4 = a4 ^ 0x1
  5684: c8 b8 08                 a1 = a1 + a4
  5687: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5690: 95 99 01                 a2 = a2 + 0x1
  5693: 52 05 ef                 jump @385 if s0 != 0
      :                          @386
  5696: c8 82 02                 t0 = t0 + a1
  5699: 7b 1a 38                 u64 [sp + 0x38] = a3
  5702: 82 78                    a1 = u64 [a0]
  5704: 7b 1c 20                 u64 [sp + 0x20] = a5
  5707: 52 08 23                 jump @390 if a1 != 0
      :                          @387
  5710: 28 41                    jump @395
      :                          @388
  5712: 81 76 34                 s1 = i32 [a0 + 0x34]
  5715: 95 c2 01                 t0 = a5 + 0x1
  5718: 49 11 28 2d              u64 [sp + 40] = 0x2d
  5722: 84 68 04                 a1 = s1 & 0x4
  5725: 52 08 c4                 jump @383 if a1 != 0
      :                          @389
  5728: 49 11 30                 u64 [sp + 48] = 0
  5731: 7b 1a 38                 u64 [sp + 0x38] = a3
  5734: 82 78                    a1 = u64 [a0]
  5736: 7b 1c 20                 u64 [sp + 0x20] = a5
  5739: 51 08 24                 jump @395 if a1 == 0
      :                          @390
  5742: 82 75 08                 s0 = u64 [a0 + 0x8]
  5745: ae 52 1e                 jump @395 if t0 >=u s0
      :                          @391
  5748: 84 66 08                 s1 = s1 & 0x8
  5751: 52 06 50                 jump @398 if s1 != 0
      :                          @392
  5754: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5757: c9 25 0a                 a3 = s0 - t0
  5760: 5a 19 01 a1 00           jump @405 if a2 >s 1
      :                          @393
  5765: 52 09 ae 00              jump @407 if a2 != 0
      :                          @394
  5769: 7b 1a 10                 u64 [sp + 0x10] = a3
  5772: 28 ad 00                 jump @408
      :                          @395
  5775: 82 75 20                 s0 = u64 [a0 + 0x20]
  5778: 82 76 28                 s1 = u64 [a0 + 0x28]
  5781: 64 57                    a0 = s0
  5783: 64 68                    a1 = s1
  5785: 82 19 28                 a2 = u64 [sp + 0x28]
  5788: 82 1a 30                 a3 = u64 [sp + 0x30]
  5791: 82 1b 38                 a4 = u64 [sp + 0x38]
  5794: 50 10 5a 6d 01           ra = 90, jump @428
      :                          @396 [@dyn 45]
  5799: 33 08 01                 a1 = 0x1
  5802: 52 07 bc 00              jump @413 if a0 != 0
      :                          @397
  5806: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5809: 64 57                    a0 = s0
  5811: 82 18 18                 a1 = u64 [sp + 0x18]
  5814: 82 19 20                 a2 = u64 [sp + 0x20]
  5817: 82 10 60                 ra = u64 [sp + 0x60]
  5820: 82 15 58                 s0 = u64 [sp + 0x58]
  5823: 82 16 50                 s1 = u64 [sp + 0x50]
  5826: 95 11 68                 sp = sp + 0x68
  5829: 32 0c                    jump [a5]
      :                          @398
  5831: 7b 12 40                 u64 [sp + 0x40] = t0
  5834: 81 78 30                 a1 = i32 [a0 + 0x30]
  5837: 7b 18 08                 u64 [sp + 0x8] = a1
  5840: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5843: 7b 19                    u64 [sp] = a2
  5845: 82 79 20                 a2 = u64 [a0 + 0x20]
  5848: 82 76 28                 s1 = u64 [a0 + 0x28]
  5851: 48 17 30 30              u32 [a0 + 48] = 0x30
  5855: 7b 17 10                 u64 [sp + 0x10] = a0
  5858: 46 17 38 01              u8 [a0 + 56] = 0x1
  5862: 7b 19 48                 u64 [sp + 0x48] = a2
  5865: 64 97                    a0 = a2
  5867: 64 68                    a1 = s1
  5869: 82 19 28                 a2 = u64 [sp + 0x28]
  5872: 82 1a 30                 a3 = u64 [sp + 0x30]
  5875: 82 1b 38                 a4 = u64 [sp + 0x38]
  5878: 50 10 5c 19 01           ra = 92, jump @428
      :                          @399 [@dyn 46]
  5883: 52 07 67                 jump @412 if a0 != 0
      :                          @400
  5886: 82 17 40                 a0 = u64 [sp + 0x40]
  5889: c9 75 05                 s0 = s0 - a0
  5892: 95 55 01                 s0 = s0 + 0x1
  5895: 01                       fallthrough
      :                          @401
  5896: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5899: 51 05 c6 00              jump @423 if s0 == 0
      :                          @402
  5903: 82 69 20                 a2 = u64 [s1 + 0x20]
  5906: 33 08 30                 a1 = 0x30
  5909: 82 17 48                 a0 = u64 [sp + 0x48]
  5912: b4 90 01 5e              ra = 94, jump [a2]
      :                          @403 [@dyn 47]
  5916: 51 07 ec                 jump @401 if a0 == 0
      :                          @404
  5919: 28 43                    jump @412
      :                          @405
  5921: 52 19 02 12              jump @407 if a2 != 2
      :                          @406
  5925: 98 a9 01                 a2 = a3 >> 0x1
  5928: 95 a8 01                 a1 = a3 + 0x1
  5931: 98 88 01                 a1 = a1 >> 0x1
  5934: 7b 18 10                 u64 [sp + 0x10] = a1
  5937: 28 08                    jump @408
      :                          @407
  5939: 64 a9                    a2 = a3
  5941: 49 11 10                 u64 [sp + 16] = 0
  5944: 01                       fallthrough
      :                          @408
  5945: 82 78 20                 a1 = u64 [a0 + 0x20]
  5948: 7b 18 48                 u64 [sp + 0x48] = a1
  5951: 82 76 28                 s1 = u64 [a0 + 0x28]
  5954: 81 77 30                 a0 = i32 [a0 + 0x30]
  5957: 7b 17 40                 u64 [sp + 0x40] = a0
  5960: 95 95 01                 s0 = a2 + 0x1
  5963: 01                       fallthrough
      :                          @409
  5964: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5967: 51 05 27                 jump @414 if s0 == 0
      :                          @410
  5970: 82 69 20                 a2 = u64 [s1 + 0x20]
  5973: 82 17 48                 a0 = u64 [sp + 0x48]
  5976: 82 18 40                 a1 = u64 [sp + 0x40]
  5979: b4 90 01 60              ra = 96, jump [a2]
      :                          @411 [@dyn 48]
  5983: 51 07 ed                 jump @409 if a0 == 0
      :                          @412
  5986: 33 08 01                 a1 = 0x1
  5989: 01                       fallthrough
      :                          @413
  5990: 64 87                    a0 = a1
  5992: 82 10 60                 ra = u64 [sp + 0x60]
  5995: 82 15 58                 s0 = u64 [sp + 0x58]
  5998: 82 16 50                 s1 = u64 [sp + 0x50]
  6001: 95 11 68                 sp = sp + 0x68
  6004: 32 00                    ret
      :                          @414
  6006: 82 15 48                 s0 = u64 [sp + 0x48]
  6009: 64 57                    a0 = s0
  6011: 64 68                    a1 = s1
  6013: 82 19 28                 a2 = u64 [sp + 0x28]
  6016: 82 1a 30                 a3 = u64 [sp + 0x30]
  6019: 82 1b 38                 a4 = u64 [sp + 0x38]
  6022: 50 10 62 89 00           ra = 98, jump @428
      :                          @415 [@dyn 49]
  6027: 33 08 01                 a1 = 0x1
  6030: 52 07 d8                 jump @413 if a0 != 0
      :                          @416
  6033: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6036: 64 57                    a0 = s0
  6038: 82 18 18                 a1 = u64 [sp + 0x18]
  6041: 82 19 20                 a2 = u64 [sp + 0x20]
  6044: b4 a0 01 64              ra = 100, jump [a3]
      :                          @417 [@dyn 50]
  6048: 33 08 01                 a1 = 0x1
  6051: 52 07 c3                 jump @413 if a0 != 0
      :                          @418
  6054: 82 17 10                 a0 = u64 [sp + 0x10]
  6057: 9a 77                    a0 = -a0
  6059: 7b 17 38                 u64 [sp + 0x38] = a0
  6062: 33 05 ff                 s0 = 0xffffffffffffffff
  6065: 01                       fallthrough
      :                          @419
  6066: 82 17 38                 a0 = u64 [sp + 0x38]
  6069: c8 57 07                 a0 = a0 + s0
  6072: 51 17 ff 42              jump @426 if a0 == 4294967295
      :                          @420
  6076: 82 69 20                 a2 = u64 [s1 + 0x20]
  6079: 82 17 48                 a0 = u64 [sp + 0x48]
  6082: 82 18 40                 a1 = u64 [sp + 0x40]
  6085: b4 90 01 66              ra = 102, jump [a2]
      :                          @421 [@dyn 51]
  6089: 95 55 01                 s0 = s0 + 0x1
  6092: 51 07 e6                 jump @419 if a0 == 0
      :                          @422
  6095: 28 37                    jump @427
      :                          @423
  6097: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6100: 82 17 48                 a0 = u64 [sp + 0x48]
  6103: 82 18 18                 a1 = u64 [sp + 0x18]
  6106: 82 19 20                 a2 = u64 [sp + 0x20]
  6109: b4 a0 01 68              ra = 104, jump [a3]
      :                          @424 [@dyn 52]
  6113: 33 08 01                 a1 = 0x1
  6116: 52 07 82                 jump @413 if a0 != 0
      :                          @425
  6119: 33 08                    a1 = 0
  6121: 82 17 10                 a0 = u64 [sp + 0x10]
  6124: 82 19 08                 a2 = u64 [sp + 0x8]
  6127: 7a 79 30                 u32 [a0 + 0x30] = a2
  6130: 82 19                    a2 = u64 [sp]
  6132: 78 79 38                 u8 [a0 + 0x38] = a2
  6135: 28 6f ff                 jump @413
      :                          @426
  6138: 82 15 10                 s0 = u64 [sp + 0x10]
  6141: 82 17 10                 a0 = u64 [sp + 0x10]
  6144: d8 75 08                 a1 = s0 <u a0
  6147: 28 63 ff                 jump @413
      :                          @427
  6150: 82 17 10                 a0 = u64 [sp + 0x10]
  6153: d8 75 08                 a1 = s0 <u a0
  6156: 28 5a ff                 jump @413
      :                          @428
  6159: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6162: 7b 10 20                 u64 [sp + 0x20] = ra
  6165: 7b 15 18                 u64 [sp + 0x18] = s0
  6168: 7b 16 10                 u64 [sp + 0x10] = s1
  6171: 83 9c                    i32 a5 = a2 + 0
  6173: 33 02 00 00 11           t0 = 0x110000
  6178: 64 a6                    s1 = a3
  6180: 64 85                    s0 = a1
  6182: 64 7a                    a3 = a0
  6184: aa 2c 20                 jump @431 if a5 == t0
      :                          @429
  6187: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6190: 64 a7                    a0 = a3
  6192: 64 98                    a1 = a2
  6194: 7b 1b 08                 u64 [sp + 0x8] = a4
  6197: 7b 1a                    u64 [sp] = a3
  6199: b4 c0 01 6a              ra = 106, jump [a5]
      :                          @430 [@dyn 53]
  6203: 82 1a                    a3 = u64 [sp]
  6205: 82 1b 08                 a4 = u64 [sp + 0x8]
  6208: 64 78                    a1 = a0
  6210: 33 07 01                 a0 = 0x1
  6213: 52 08 20                 jump @434 if a1 != 0
      :                          @431
  6216: 51 06 1a                 jump @433 if s1 == 0
      :                          @432
  6219: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6222: 64 a7                    a0 = a3
  6224: 64 68                    a1 = s1
  6226: 64 b9                    a2 = a4
  6228: 82 10 20                 ra = u64 [sp + 0x20]
  6231: 82 15 18                 s0 = u64 [sp + 0x18]
  6234: 82 16 10                 s1 = u64 [sp + 0x10]
  6237: 95 11 28                 sp = sp + 0x28
  6240: 32 0c                    jump [a5]
      :                          @433
  6242: 33 07                    a0 = 0
  6244: 01                       fallthrough
      :                          @434
  6245: 82 10 20                 ra = u64 [sp + 0x20]
  6248: 82 15 18                 s0 = u64 [sp + 0x18]
  6251: 82 16 10                 s1 = u64 [sp + 0x10]
  6254: 95 11 28                 sp = sp + 0x28
  6257: 32 00                    ret
      :                          @435
  6259: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6263: 7b 10 80 00              u64 [sp + 0x80] = ra
  6267: 7b 15 78                 u64 [sp + 0x78] = s0
  6270: 7b 16 70                 u64 [sp + 0x70] = s1
  6273: 49 11 60 20              u64 [sp + 96] = 0x20
  6277: 33 09 03                 a2 = 0x3
  6280: 78 19 68                 u8 [sp + 0x68] = a2
  6283: 49 11 30                 u64 [sp + 48] = 0
  6286: 49 11 40                 u64 [sp + 64] = 0
  6289: 82 86 20                 s1 = u64 [a1 + 0x20]
  6292: 7b 17 50                 u64 [sp + 0x50] = a0
  6295: 33 07 40 01 01           a0 = 0x10140
  6300: 7b 17 58                 u64 [sp + 0x58] = a0
  6303: 51 06 06 01              jump @457 if s1 == 0
      :                          @436
  6307: 82 87 28                 a0 = u64 [a1 + 0x28]
  6310: 51 07 73 01              jump @467 if a0 == 0
      :                          @437
  6314: 33 09                    a2 = 0
  6316: 82 85                    s0 = u64 [a1]
  6318: 7b 18 08                 u64 [sp + 0x8] = a1
  6321: 82 88 10                 a1 = u64 [a1 + 0x10]
  6324: 7b 18 18                 u64 [sp + 0x18] = a1
  6327: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  6330: 97 88 03                 a1 = a1 << 0x3
  6333: 98 88 03                 a1 = a1 >> 0x3
  6336: 95 88 01                 a1 = a1 + 0x1
  6339: 7b 18                    u64 [sp] = a1
  6341: 95 55 08                 s0 = s0 + 0x8
  6344: 96 78 38                 a1 = a0 * 0x38
  6347: 95 66 18                 s1 = s1 + 0x18
  6350: 33 07 56                 a0 = 0x56
  6353: 7b 17 10                 u64 [sp + 0x10] = a0
  6356: 01                       fallthrough
      :                          @438
  6357: 7b 18 20                 u64 [sp + 0x20] = a1
  6360: 7b 19 28                 u64 [sp + 0x28] = a2
  6363: 82 59                    a2 = u64 [s0]
  6365: 51 09 17                 jump @441 if a2 == 0
      :                          @439
  6368: 82 1a 58                 a3 = u64 [sp + 0x58]
  6371: 82 17 50                 a0 = u64 [sp + 0x50]
  6374: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  6377: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6380: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @440 [@dyn 54]
  6384: 52 07 4e 01              jump @470 if a0 != 0
      :                          @441
  6388: 81 67 10                 a0 = i32 [s1 + 0x10]
  6391: 7a 17 60                 u32 [sp + 0x60] = a0
  6394: 7c 67 18                 a0 = u8 [s1 + 0x18]
  6397: 78 17 68                 u8 [sp + 0x68] = a0
  6400: 81 67 14                 a0 = i32 [s1 + 0x14]
  6403: 7a 17 64                 u32 [sp + 0x64] = a0
  6406: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6409: 82 67                    a0 = u64 [s1]
  6411: 51 08 26                 jump @446 if a1 == 0
      :                          @442
  6414: 52 18 01 16              jump @444 if a1 != 1
      :                          @443
  6418: 97 77 04                 a0 = a0 << 0x4
  6421: 82 18 18                 a1 = u64 [sp + 0x18]
  6424: c8 87 07                 a0 = a0 + a1
  6427: 82 78 08                 a1 = u64 [a0 + 0x8]
  6430: 82 19 10                 a2 = u64 [sp + 0x10]
  6433: aa 98 07                 jump @445 if a1 == a2
      :                          @444
  6436: 33 08                    a1 = 0
  6438: 28 0f                    jump @447
      :                          @445
  6440: 82 77                    a0 = u64 [a0]
  6442: 82 77                    a0 = u64 [a0]
  6444: 33 08 01                 a1 = 0x1
  6447: 28 06                    jump @447
      :                          @446
  6449: 33 08 01                 a1 = 0x1
  6452: 01                       fallthrough
      :                          @447
  6453: 7b 18 30                 u64 [sp + 0x30] = a1
  6456: 7b 17 38                 u64 [sp + 0x38] = a0
  6459: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  6462: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  6465: 51 08 26                 jump @452 if a1 == 0
      :                          @448
  6468: 52 18 01 16              jump @450 if a1 != 1
      :                          @449
  6472: 97 77 04                 a0 = a0 << 0x4
  6475: 82 18 18                 a1 = u64 [sp + 0x18]
  6478: c8 87 07                 a0 = a0 + a1
  6481: 82 78 08                 a1 = u64 [a0 + 0x8]
  6484: 82 19 10                 a2 = u64 [sp + 0x10]
  6487: aa 98 07                 jump @451 if a1 == a2
      :                          @450
  6490: 33 08                    a1 = 0
  6492: 28 0f                    jump @453
      :                          @451
  6494: 82 77                    a0 = u64 [a0]
  6496: 82 77                    a0 = u64 [a0]
  6498: 33 08 01                 a1 = 0x1
  6501: 28 06                    jump @453
      :                          @452
  6503: 33 08 01                 a1 = 0x1
  6506: 01                       fallthrough
      :                          @453
  6507: 7b 18 40                 u64 [sp + 0x40] = a1
  6510: 7b 17 48                 u64 [sp + 0x48] = a0
  6513: 82 67 08                 a0 = u64 [s1 + 0x8]
  6516: 97 77 04                 a0 = a0 << 0x4
  6519: 82 18 18                 a1 = u64 [sp + 0x18]
  6522: c8 78 08                 a1 = a1 + a0
  6525: 82 87                    a0 = u64 [a1]
  6527: 82 89 08                 a2 = u64 [a1 + 0x8]
  6530: 95 18 30                 a1 = sp + 0x30
  6533: b4 90 01 6e              ra = 110, jump [a2]
      :                          @454 [@dyn 55]
  6537: 52 07 b5 00              jump @470 if a0 != 0
      :                          @455
  6541: 95 55 10                 s0 = s0 + 0x10
  6544: 82 18 20                 a1 = u64 [sp + 0x20]
  6547: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  6550: 95 66 38                 s1 = s1 + 0x38
  6553: 82 19 28                 a2 = u64 [sp + 0x28]
  6556: 95 99 01                 a2 = a2 + 0x1
  6559: 52 08 36 ff              jump @438 if a1 != 0
      :                          @456
  6563: 28 69                    jump @465
      :                          @457
  6565: 82 87 18                 a0 = u64 [a1 + 0x18]
  6568: 51 07 71                 jump @467 if a0 == 0
      :                          @458
  6571: 82 85 10                 s0 = u64 [a1 + 0x10]
  6574: 33 0a                    a3 = 0
  6576: 97 79 04                 a2 = a0 << 0x4
  6579: c8 59 09                 a2 = a2 + s0
  6582: 7b 19 20                 u64 [sp + 0x20] = a2
  6585: 7b 18 08                 u64 [sp + 0x8] = a1
  6588: 82 86                    s1 = u64 [a1]
  6590: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6593: 97 77 04                 a0 = a0 << 0x4
  6596: 98 77 04                 a0 = a0 >> 0x4
  6599: 95 77 01                 a0 = a0 + 0x1
  6602: 7b 17                    u64 [sp] = a0
  6604: 95 66 08                 s1 = s1 + 0x8
  6607: 01                       fallthrough
      :                          @459
  6608: 7b 1a 28                 u64 [sp + 0x28] = a3
  6611: 82 69                    a2 = u64 [s1]
  6613: 51 09 16                 jump @462 if a2 == 0
      :                          @460
  6616: 82 1a 58                 a3 = u64 [sp + 0x58]
  6619: 82 17 50                 a0 = u64 [sp + 0x50]
  6622: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6625: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6628: b4 a0 01 70              ra = 112, jump [a3]
      :                          @461 [@dyn 56]
  6632: 52 07 56                 jump @470 if a0 != 0
      :                          @462
  6635: 82 57                    a0 = u64 [s0]
  6637: 82 59 08                 a2 = u64 [s0 + 0x8]
  6640: 95 18 30                 a1 = sp + 0x30
  6643: b4 90 01 72              ra = 114, jump [a2]
      :                          @463 [@dyn 57]
  6647: 52 07 47                 jump @470 if a0 != 0
      :                          @464
  6650: 95 66 10                 s1 = s1 + 0x10
  6653: 95 55 10                 s0 = s0 + 0x10
  6656: 82 1a 28                 a3 = u64 [sp + 0x28]
  6659: 95 aa 01                 a3 = a3 + 0x1
  6662: 82 17 20                 a0 = u64 [sp + 0x20]
  6665: ab 75 c7                 jump @459 if s0 != a0
      :                          @465
  6668: 82 18 08                 a1 = u64 [sp + 0x8]
  6671: 82 1a                    a3 = u64 [sp]
  6673: 82 87 08                 a0 = u64 [a1 + 0x8]
  6676: ac 7a 0d                 jump @468 if a3 <u a0
      :                          @466
  6679: 28 2c                    jump @471
      :                          @467
  6681: 33 0a                    a3 = 0
  6683: 82 87 08                 a0 = u64 [a1 + 0x8]
  6686: 54 07 25                 jump @471 if a0 <=u 0
      :                          @468
  6689: 82 87                    a0 = u64 [a1]
  6691: 97 a8 04                 a1 = a3 << 0x4
  6694: c8 87 09                 a2 = a0 + a1
  6697: 82 1a 58                 a3 = u64 [sp + 0x58]
  6700: 82 17 50                 a0 = u64 [sp + 0x50]
  6703: 82 98                    a1 = u64 [a2]
  6705: 82 99 08                 a2 = u64 [a2 + 0x8]
  6708: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6711: b4 a0 01 74              ra = 116, jump [a3]
      :                          @469 [@dyn 58]
  6715: 51 07 08                 jump @471 if a0 == 0
      :                          @470
  6718: 33 07 01                 a0 = 0x1
  6721: 28 05                    jump @472
      :                          @471
  6723: 33 07                    a0 = 0
  6725: 01                       fallthrough
      :                          @472
  6726: 82 10 80 00              ra = u64 [sp + 0x80]
  6730: 82 15 78                 s0 = u64 [sp + 0x78]
  6733: 82 16 70                 s1 = u64 [sp + 0x70]
  6736: 95 11 88 00              sp = sp + 0x88
  6740: 32 00                    ret
      :                          @473 [@dyn 59]
  6742: 81 77                    a0 = i32 [a0]
  6744: 89 7a                    a3 = a0 <s 0
  6746: 85 a9 01                 a2 = a3 ^ 0x1
  6749: 97 7b 20                 a4 = a0 << 0x20
  6752: 98 bb 20                 a4 = a4 >> 0x20
  6755: 9a 77                    a0 = -a0
  6757: da ab 07                 a0 = a4 if a3 == 0
  6760: 64 8a                    a3 = a1
  6762: 64 98                    a1 = a2
  6764: 64 a9                    a2 = a3
  6766: 28 57 fa                 jump @371
