// RO data = 570/572 bytes
// RW data = 8/16773152 bytes
// Stack size = 16773120 bytes
// RO data = [70, 105, 110, 105, 115, 104, 32, 103, 108, 105, 100, 101, 114, 32, 105, 110, 105, 116, 44, 32, 112, 108, 97, 99, 101, 100, 32, 0, 0, 0, 0, 0, 83, 116, 101, 112, 95, 110, 58, 32, 9, 0, 0, 0, 0, 0, 0, 0, 32, 103, 108, 105, 100, 101, 114, 115, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 44, 32, 103, 108, 105, 100, 101, 114, 115, 58, 32, 44, 32, 116, 111, 116, 97, 108, 95, 115, 116, 101, 112, 115, 58, 32, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 99, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 44, 32, 70, 101, 116, 99, 104, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 168, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 178, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 44, 32, 101, 120, 112, 111, 114, 116, 101, 100, 32, 32, 115, 101, 103, 109, 101, 110, 116, 115, 44, 32, 100, 111, 110, 101, 0, 0, 0, 0, 0, 0, 32, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 240, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 251, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 2275
// Code size = 6858 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 26 0f 00 00           jump @230
      :                          @2
    10: 28 2a 0f                 jump @231
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 dc 14                 jump @371
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 70 01 01           a2 = 0x10170
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 8a 15           ra = 4, jump @381
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 25 14                 jump @371
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 70 01 01           a2 = 0x10170
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 d3 14           ra = 8, jump @381
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 6e 13                 jump @371
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 70 01 01           a2 = 0x10170
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c 1c 14           ra = 12, jump @381
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   579: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   583: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   587: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   591: 95 11 90 c3 fd           sp = sp + 0xfffffffffffdc390
   596: 53 18 04 af 0c           jump @222 if a1 <u 4
      :                          @40
   601: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
   604: 51 08 a7 0c              jump @222 if a1 == 0
      :                          @41
   608: 95 76 04                 s1 = a0 + 0x4
   611: 7d 6a                    a3 = i8 [s1]
   613: 84 ac ff 00              a5 = a3 & 0xff
   617: 33 09 01                 a2 = 0x1
   620: 59 0a 44                 jump @49 if a3 >=s 0
      :                          @42
   623: 33 0a c0 00              a3 = 0xc0
   627: 33 09 02                 a2 = 0x2
   630: ac ac 36                 jump @48 if a5 <u a3
      :                          @43
   633: 33 0a e0 00              a3 = 0xe0
   637: 33 09 03                 a2 = 0x3
   640: ac ac 2c                 jump @48 if a5 <u a3
      :                          @44
   643: 33 0a f0 00              a3 = 0xf0
   647: 33 09 04                 a2 = 0x4
   650: ac ac 22                 jump @48 if a5 <u a3
      :                          @45
   653: 33 0a f8 00              a3 = 0xf8
   657: 33 09 05                 a2 = 0x5
   660: ac ac 18                 jump @48 if a5 <u a3
      :                          @46
   663: 33 0a fc 00              a3 = 0xfc
   667: 33 09 06                 a2 = 0x6
   670: ac ac 0e                 jump @48 if a5 <u a3
      :                          @47
   673: 88 c9 fe 00              a2 = a5 <u 0xfe
   677: 33 0a 08                 a3 = 0x8
   680: c9 9a 09                 a2 = a3 - a2
   683: 01                       fallthrough
      :                          @48
   684: ac 98 7d 0c              jump @228 if a1 <u a2
      :                          @49
   688: 51 0c 91 00              jump @68 if a5 == 0
      :                          @50
   692: 51 2c ff 00 74 0c        jump @227 if a5 == 255
      :                          @51
   698: 6c ca                    a3 = sext.b a5
   700: 57 0a 09                 jump @53 if a3 <s 0
      :                          @52
   703: 33 05                    s0 = 0
   705: 33 0a                    a3 = 0
   707: 28 74                    jump @67
      :                          @53
   709: 55 2c c0 00 0d           jump @55 if a5 >=u 192
      :                          @54
   714: 33 05 01                 s0 = 0x1
   717: 33 07 80                 a0 = 0xffffffffffffff80
   720: 28 4a                    jump @64
      :                          @55
   722: 55 2c e0 00 0e           jump @57 if a5 >=u 224
      :                          @56
   727: 33 05 02                 s0 = 0x2
   730: 33 07 40 ff              a0 = 0xffffffffffffff40
   734: 28 3c                    jump @64
      :                          @57
   736: 55 2c f0 00 0e           jump @59 if a5 >=u 240
      :                          @58
   741: 33 05 03                 s0 = 0x3
   744: 33 07 20 ff              a0 = 0xffffffffffffff20
   748: 28 2e                    jump @64
      :                          @59
   750: 55 2c f8 00 0e           jump @61 if a5 >=u 248
      :                          @60
   755: 33 05 04                 s0 = 0x4
   758: 33 07 10 ff              a0 = 0xffffffffffffff10
   762: 28 20                    jump @64
      :                          @61
   764: 55 2c fc 00 0e           jump @63 if a5 >=u 252
      :                          @62
   769: 33 05 05                 s0 = 0x5
   772: 33 07 08 ff              a0 = 0xffffffffffffff08
   776: 28 12                    jump @64
      :                          @63
   778: 88 ca fe 00              a3 = a5 <u 0xfe
   782: 33 07 04 ff              a0 = 0xffffffffffffff04
   786: 93 a7 02 ff              a0 = 0xffffffffffffff02 if a3 == 0
   790: 85 a5 07                 s0 = a3 ^ 0x7
   793: 01                       fallthrough
      :                          @64
   794: ae 95 10 0c              jump @229 if s0 >=u a2
      :                          @65
   798: 33 0a                    a3 = 0
   800: c8 7c 0c                 a5 = a5 + a0
   803: 64 5b                    a4 = s0
   805: 01                       fallthrough
      :                          @66
   806: c8 b6 07                 a0 = s1 + a4
   809: 7c 77                    a0 = u8 [a0]
   811: 97 aa 08                 a3 = a3 << 0x8
   814: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   817: d4 7a 0a                 a3 = a3 | a0
   820: 52 0b f2                 jump @66 if a4 != 0
      :                          @67
   823: 8a 57 03                 i32 a0 = s0 << 0x3
   826: cf 7c 0c                 a5 = a5 << a0
   829: c8 ac 0c                 a5 = a5 + a3
   832: 01                       fallthrough
      :                          @68
   833: e4 98 07                 a0 = maxu(a1, a2)
   836: c9 97 07                 a0 = a0 - a2
   839: d8 c7 08                 a1 = a0 <u a5
   842: e4 c7 07                 a0 = maxu(a0, a5)
   845: c9 c7 07                 a0 = a0 - a5
   848: 88 77 20                 a0 = a0 <u 0x20
   851: d4 87 07                 a0 = a0 | a1
   854: 52 07 ad 0b              jump @222 if a0 != 0
      :                          @69
   858: 95 15 34 91 00           s0 = sp + 0x9134
   863: c8 96 06                 s1 = s1 + a2
   866: 95 17 34 01              a0 = sp + 0x134
   870: 33 09 00 90 00           a2 = 0x9000
   875: 33 08                    a1 = 0
   877: 50 10 0e 52 11           ra = 14, jump @356
      :                          @70 [@dyn 7]
   882: 81 67                    a0 = i32 [s1]
   884: 7a 57                    u32 [s0] = a0
   886: 81 67 04                 a0 = i32 [s1 + 0x4]
   889: 7a 57 04                 u32 [s0 + 0x4] = a0
   892: 81 67 08                 a0 = i32 [s1 + 0x8]
   895: 7a 57 08                 u32 [s0 + 0x8] = a0
   898: 7b 55 14                 u64 [s0 + 0x14] = s0
   901: 33 07 06                 a0 = 0x6
   904: 7b 57 1c                 u64 [s0 + 0x1c] = a0
   907: 95 18 38 91 00           a1 = sp + 0x9138
   912: 7b 58 24                 u64 [s0 + 0x24] = a1
   915: 7b 57 2c                 u64 [s0 + 0x2c] = a0
   918: 95 18 3c 91 00           a1 = sp + 0x913c
   923: 7b 58 34                 u64 [s0 + 0x34] = a1
   926: 7b 57 3c                 u64 [s0 + 0x3c] = a0
   929: 33 07 78 00 01           a0 = 0x10078
   934: 95 19 50 b4 01           a2 = sp + 0x1b450
   939: 7b 97                    u64 [a2] = a0
   941: 49 19 08 03              u64 [a2 + 8] = 0x3
   945: 49 19 20                 u64 [a2 + 32] = 0
   948: 95 18 48 91 00           a1 = sp + 0x9148
   953: 7b 98 10                 u64 [a2 + 0x10] = a1
   956: 49 19 18 03              u64 [a2 + 24] = 0x3
   960: 95 17 50 24 01           a0 = sp + 0x12450
   965: 95 18 50 b4 01           a1 = sp + 0x1b450
   970: 50 10 10 ce 0d           ra = 16, jump @288
      :                          @71 [@dyn 8]
   975: 95 17 50 24 01           a0 = sp + 0x12450
   980: 82 76 08                 s1 = u64 [a0 + 0x8]
   983: 82 7b 10                 a4 = u64 [a0 + 0x10]
   986: 82 75                    s0 = u64 [a0]
   988: 33 07 02                 a0 = 0x2
   991: 33 08                    a1 = 0
   993: 33 09                    a2 = 0
   995: 64 6a                    a3 = s1
   997: 33 00 12                 ra = 0x12
  1000: 0a 64                    ecalli 100 // 'log'
  1002: 01                       fallthrough
      :                          @72 [@dyn 9]
  1003: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  1009: 53 48 01 10 00 ff 32     jump @78 if a1 <u 4278194177
      :                          @73
  1016: 64 62                    t0 = s1
  1018: 33 07 10 00 03           a0 = 0x30010
  1023: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1029: 33 09 ff ef ff 00        a2 = 0xffefff
  1035: 01                       fallthrough
      :                          @74
  1036: 82 8a                    a3 = u64 [a1]
  1038: c8 97 0b                 a4 = a0 + a2
  1041: c9 ab 0b                 a4 = a4 - a3
  1044: ab 2b 0f                 jump @78 if a4 != t0
      :                          @75
  1047: c9 5a 0b                 a4 = a3 - s0
  1050: 01                       fallthrough
      :                          @76
  1051: 82 8c                    a5 = u64 [a1]
  1053: ab ac ef                 jump @74 if a5 != a3
      :                          @77
  1056: 7b 8b                    u64 [a1] = a4
  1058: 01                       fallthrough
      :                          @78
  1059: 95 16 34 91 00           s1 = sp + 0x9134
  1064: 48 16 0c                 u32 [s1 + 12] = 0
  1067: 95 17 34 01              a0 = sp + 0x134
  1071: 33 09 00 10              a2 = 0x1000
  1075: 33 0a 06                 a3 = 0x6
  1078: 33 08                    a1 = 0
  1080: 33 0b                    a4 = 0
  1082: 33 0c                    a5 = 0
  1084: 0a 12                    ecalli 18 // 'fetch'
  1086: 01                       fallthrough
      :                          @79
  1087: 95 18 34 01              a1 = sp + 0x134
  1091: 33 05 ff                 s0 = 0xffffffffffffffff
  1094: 33 09 00 10              a2 = 0x1000
  1098: aa 57 49 01              jump @97 if a0 == s0
      :                          @80
  1102: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1105: 83 77 01                 i32 a0 = a0 + 0x1
  1108: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1111: 95 87 00 10              a0 = a1 + 0x1000
  1115: 33 0a 06                 a3 = 0x6
  1118: 33 0b 01                 a4 = 0x1
  1121: 33 08                    a1 = 0
  1123: 33 0c                    a5 = 0
  1125: 0a 12                    ecalli 18 // 'fetch'
  1127: 01                       fallthrough
      :                          @81
  1128: 51 17 ff 2b 01           jump @97 if a0 == 4294967295
      :                          @82
  1133: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1136: 83 77 01                 i32 a0 = a0 + 0x1
  1139: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1142: 95 18 34 01              a1 = sp + 0x134
  1146: 95 87 00 20              a0 = a1 + 0x2000
  1150: 33 09 00 10              a2 = 0x1000
  1154: 33 0a 06                 a3 = 0x6
  1157: 33 0b 02                 a4 = 0x2
  1160: 33 05 ff                 s0 = 0xffffffffffffffff
  1163: 33 08                    a1 = 0
  1165: 33 0c                    a5 = 0
  1167: 0a 12                    ecalli 18 // 'fetch'
  1169: 01                       fallthrough
      :                          @83
  1170: 51 17 ff 01 01           jump @97 if a0 == 4294967295
      :                          @84
  1175: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1178: 83 77 01                 i32 a0 = a0 + 0x1
  1181: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1184: 95 18 34 01              a1 = sp + 0x134
  1188: 95 87 00 30              a0 = a1 + 0x3000
  1192: 33 09 00 10              a2 = 0x1000
  1196: 33 0a 06                 a3 = 0x6
  1199: 33 0b 03                 a4 = 0x3
  1202: 33 08                    a1 = 0
  1204: 33 0c                    a5 = 0
  1206: 0a 12                    ecalli 18 // 'fetch'
  1208: 01                       fallthrough
      :                          @85
  1209: 51 17 ff da 00           jump @97 if a0 == 4294967295
      :                          @86
  1214: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1217: 83 77 01                 i32 a0 = a0 + 0x1
  1220: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1223: 95 18 34 01              a1 = sp + 0x134
  1227: 95 87 00 40              a0 = a1 + 0x4000
  1231: 33 09 00 10              a2 = 0x1000
  1235: 33 0a 06                 a3 = 0x6
  1238: 33 0b 04                 a4 = 0x4
  1241: 33 05 ff                 s0 = 0xffffffffffffffff
  1244: 33 08                    a1 = 0
  1246: 33 0c                    a5 = 0
  1248: 0a 12                    ecalli 18 // 'fetch'
  1250: 01                       fallthrough
      :                          @87
  1251: 51 17 ff b0 00           jump @97 if a0 == 4294967295
      :                          @88
  1256: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1259: 83 77 01                 i32 a0 = a0 + 0x1
  1262: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1265: 95 18 34 01              a1 = sp + 0x134
  1269: 95 87 00 50              a0 = a1 + 0x5000
  1273: 33 09 00 10              a2 = 0x1000
  1277: 33 0a 06                 a3 = 0x6
  1280: 33 0b 05                 a4 = 0x5
  1283: 33 08                    a1 = 0
  1285: 33 0c                    a5 = 0
  1287: 0a 12                    ecalli 18 // 'fetch'
  1289: 01                       fallthrough
      :                          @89
  1290: 51 17 ff 89 00           jump @97 if a0 == 4294967295
      :                          @90
  1295: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1298: 83 77 01                 i32 a0 = a0 + 0x1
  1301: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1304: 95 18 34 01              a1 = sp + 0x134
  1308: 95 87 00 60              a0 = a1 + 0x6000
  1312: 33 09 00 10              a2 = 0x1000
  1316: 33 0a 06                 a3 = 0x6
  1319: 33 0b 06                 a4 = 0x6
  1322: 33 05 ff                 s0 = 0xffffffffffffffff
  1325: 33 08                    a1 = 0
  1327: 33 0c                    a5 = 0
  1329: 0a 12                    ecalli 18 // 'fetch'
  1331: 01                       fallthrough
      :                          @91
  1332: 51 17 ff 5f              jump @97 if a0 == 4294967295
      :                          @92
  1336: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1339: 83 77 01                 i32 a0 = a0 + 0x1
  1342: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1345: 95 18 34 01              a1 = sp + 0x134
  1349: 95 87 00 70              a0 = a1 + 0x7000
  1353: 33 09 00 10              a2 = 0x1000
  1357: 33 0a 06                 a3 = 0x6
  1360: 33 0b 07                 a4 = 0x7
  1363: 33 08                    a1 = 0
  1365: 33 0c                    a5 = 0
  1367: 0a 12                    ecalli 18 // 'fetch'
  1369: 01                       fallthrough
      :                          @93
  1370: 51 17 ff 39              jump @97 if a0 == 4294967295
      :                          @94
  1374: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1377: 83 77 01                 i32 a0 = a0 + 0x1
  1380: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1383: 95 18 34 01              a1 = sp + 0x134
  1387: 95 87 00 80 00           a0 = a1 + 0x8000
  1392: 33 09 00 10              a2 = 0x1000
  1396: 33 0a 06                 a3 = 0x6
  1399: 33 0b 08                 a4 = 0x8
  1402: 33 05 ff                 s0 = 0xffffffffffffffff
  1405: 33 08                    a1 = 0
  1407: 33 0c                    a5 = 0
  1409: 0a 12                    ecalli 18 // 'fetch'
  1411: 01                       fallthrough
      :                          @95
  1412: 51 17 ff 0f              jump @97 if a0 == 4294967295
      :                          @96
  1416: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1419: 83 77 01                 i32 a0 = a0 + 0x1
  1422: 7a 67 0c                 u32 [s1 + 0xc] = a0
  1425: 28 06                    jump @98
      :                          @97
  1427: 81 67 0c                 a0 = i32 [s1 + 0xc]
  1430: 01                       fallthrough
      :                          @98
  1431: 95 18 34 91 00           a1 = sp + 0x9134
  1436: 58 07 ac 00              jump @109 if a0 <=s 0
      :                          @99
  1440: 95 17 34 91 00           a0 = sp + 0x9134
  1445: 95 19 50 b4 01           a2 = sp + 0x1b450
  1450: 7b 97                    u64 [a2] = a0
  1452: 33 07 06                 a0 = 0x6
  1455: 7b 97 08                 u64 [a2 + 0x8] = a0
  1458: 95 17 40 91 00           a0 = sp + 0x9140
  1463: 7b 97 10                 u64 [a2 + 0x10] = a0
  1466: 33 07 02                 a0 = 0x2
  1469: 7b 97 18                 u64 [a2 + 0x18] = a0
  1472: 33 07 c0 00 01           a0 = 0x100c0
  1477: 7b 87 14                 u64 [a1 + 0x14] = a0
  1480: 49 18 1c 03              u64 [a1 + 28] = 0x3
  1484: 49 18 34                 u64 [a1 + 52] = 0
  1487: 95 17 50 b4 01           a0 = sp + 0x1b450
  1492: 7b 87 24                 u64 [a1 + 0x24] = a0
  1495: 49 18 2c 02              u64 [a1 + 44] = 0x2
  1499: 95 17 50 24 01           a0 = sp + 0x12450
  1504: 95 18 48 91 00           a1 = sp + 0x9148
  1509: 50 10 14 b3 0b           ra = 20, jump @288
      :                          @100 [@dyn 10]
  1514: 95 17 50 24 01           a0 = sp + 0x12450
  1519: 82 76 08                 s1 = u64 [a0 + 0x8]
  1522: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1525: 82 75                    s0 = u64 [a0]
  1527: 33 07 02                 a0 = 0x2
  1530: 33 08                    a1 = 0
  1532: 33 09                    a2 = 0
  1534: 64 6a                    a3 = s1
  1536: 33 00 16                 ra = 0x16
  1539: 0a 64                    ecalli 100 // 'log'
  1541: 01                       fallthrough
      :                          @101 [@dyn 11]
  1542: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  1548: 53 48 01 10 00 ff 6c 01  jump @128 if a1 <u 4278194177
      :                          @102
  1556: 64 62                    t0 = s1
  1558: 33 07 10 00 03           a0 = 0x30010
  1563: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1569: 33 09 ff ef ff 00        a2 = 0xffefff
  1575: 01                       fallthrough
      :                          @103
  1576: 82 8a                    a3 = u64 [a1]
  1578: c8 97 0b                 a4 = a0 + a2
  1581: c9 ab 0b                 a4 = a4 - a3
  1584: ab 2b 48 01              jump @128 if a4 != t0
      :                          @104
  1588: c9 5a 0b                 a4 = a3 - s0
  1591: 01                       fallthrough
      :                          @105
  1592: 82 8c                    a5 = u64 [a1]
  1594: ab ac ee                 jump @103 if a5 != a3
      :                          @106
  1597: 7b 8b                    u64 [a1] = a4
  1599: 33 06                    s1 = 0
  1601: 01                       fallthrough
      :                          @107
  1602: ab ac e6                 jump @103 if a5 != a3
      :                          @108
  1605: 28 33 01                 jump @128
      :                          @109
  1608: 80 85 04                 s0 = u32 [a1 + 0x4]
  1611: 95 17 34 01              a0 = sp + 0x134
  1615: 33 09 00 90 00           a2 = 0x9000
  1620: 33 08                    a1 = 0
  1622: 50 10 18 69 0e           ra = 24, jump @356
      :                          @110 [@dyn 12]
  1627: 51 05 7c                 jump @118 if s0 == 0
      :                          @111
  1630: 33 0c                    a5 = 0
  1632: 33 08                    a1 = 0
  1634: 97 59 02                 a2 = s0 << 0x2
  1637: 64 54                    t2 = s0
  1639: c8 59 09                 a2 = a2 + s0
  1642: 14 0a ab aa aa aa aa aa aa aa a3 = 0xaaaaaaaaaaaaaaab
  1652: 33 02 04 01              t0 = 0x104
  1656: 33 03 d0 02              t1 = 0x2d0
  1660: 33 05 01                 s0 = 0x1
  1663: 95 10 34 01              ra = sp + 0x134
  1667: 01                       fallthrough
      :                          @112
  1668: aa 3c 57                 jump @119 if a5 == t1
      :                          @113
  1671: d6 a8 07                 a0 = a1 mulhu a3
  1674: 98 77 03                 a0 = a0 >> 0x3
  1677: ca 27 06                 s1 = a0 * t0
  1680: 95 67 04 01              a0 = s1 + 0x104
  1684: c8 c0 0b                 a4 = ra + a5
  1687: c8 b6 06                 s1 = s1 + a4
  1690: 78 65 83 00              u8 [s1 + 0x83] = s0
  1694: c8 c7 07                 a0 = a0 + a5
  1697: 95 7b fe                 a4 = a0 + 0xfffffffffffffffe
  1700: 98 bb 0c                 a4 = a4 >> 0xc
  1703: 78 65 c4 00              u8 [s1 + 0xc4] = s0
  1707: 52 0b 7a 08              jump @224 if a4 != 0
      :                          @114
  1711: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
  1714: 98 bb 0c                 a4 = a4 >> 0xc
  1717: 78 65 02 01              u8 [s1 + 0x102] = s0
  1721: 52 0b 6d 08              jump @225 if a4 != 0
      :                          @115
  1725: 98 77 0c                 a0 = a0 >> 0xc
  1728: 78 65 03 01              u8 [s1 + 0x103] = s0
  1732: 52 07 63 08              jump @226 if a0 != 0
      :                          @116
  1736: 78 65 04 01              u8 [s1 + 0x104] = s0
  1740: 95 cc 05                 a5 = a5 + 0x5
  1743: 95 88 01                 a1 = a1 + 0x1
  1746: ab c9 b2                 jump @112 if a2 != a5
      :                          @117
  1749: 28 0b                    jump @120
      :                          @118
  1751: 33 04                    t2 = 0
  1753: 28 07                    jump @120
      :                          @119
  1755: 33 04 90 00              t2 = 0x90
  1759: 01                       fallthrough
      :                          @120
  1760: 95 19 34 91 00           a2 = sp + 0x9134
  1765: 7a 94 10                 u32 [a2 + 0x10] = t2
  1768: 95 17 44 91 00           a0 = sp + 0x9144
  1773: 95 18 50 24 01           a1 = sp + 0x12450
  1778: 7b 87                    u64 [a1] = a0
  1780: 33 07 76                 a0 = 0x76
  1783: 7b 87 08                 u64 [a1 + 0x8] = a0
  1786: 33 07 38 00 01           a0 = 0x10038
  1791: 7b 97 14                 u64 [a2 + 0x14] = a0
  1794: 49 19 1c 02              u64 [a2 + 28] = 0x2
  1798: 49 19 34                 u64 [a2 + 52] = 0
  1801: 95 17 50 24 01           a0 = sp + 0x12450
  1806: 7b 97 24                 u64 [a2 + 0x24] = a0
  1809: 49 19 2c 01              u64 [a2 + 44] = 0x1
  1813: 95 17 50 b4 01           a0 = sp + 0x1b450
  1818: 95 18 48 91 00           a1 = sp + 0x9148
  1823: 50 10 1a 79 0a           ra = 26, jump @288
      :                          @121 [@dyn 13]
  1828: 95 17 50 b4 01           a0 = sp + 0x1b450
  1833: 82 76 08                 s1 = u64 [a0 + 0x8]
  1836: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1839: 82 75                    s0 = u64 [a0]
  1841: 33 07 02                 a0 = 0x2
  1844: 33 08                    a1 = 0
  1846: 33 09                    a2 = 0
  1848: 64 6a                    a3 = s1
  1850: 33 00 1c                 ra = 0x1c
  1853: 0a 64                    ecalli 100 // 'log'
  1855: 01                       fallthrough
      :                          @122 [@dyn 14]
  1856: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  1862: 53 48 01 10 00 ff 32     jump @128 if a1 <u 4278194177
      :                          @123
  1869: 64 62                    t0 = s1
  1871: 33 07 10 00 03           a0 = 0x30010
  1876: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1882: 33 09 ff ef ff 00        a2 = 0xffefff
  1888: 01                       fallthrough
      :                          @124
  1889: 82 8a                    a3 = u64 [a1]
  1891: c8 97 0b                 a4 = a0 + a2
  1894: c9 ab 0b                 a4 = a4 - a3
  1897: ab 2b 0f                 jump @128 if a4 != t0
      :                          @125
  1900: c9 5a 0b                 a4 = a3 - s0
  1903: 01                       fallthrough
      :                          @126
  1904: 82 8c                    a5 = u64 [a1]
  1906: ab ac ef                 jump @124 if a5 != a3
      :                          @127
  1909: 7b 8b                    u64 [a1] = a4
  1911: 01                       fallthrough
      :                          @128
  1912: 95 17 34 91 00           a0 = sp + 0x9134
  1917: 81 77 08                 a0 = i32 [a0 + 0x8]
  1920: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  1924: 51 07 7a 06              jump @214 if a0 == 0
      :                          @129
  1928: 33 04                    t2 = 0
  1930: 95 18 48 91 00           a1 = sp + 0x9148
  1935: 95 87 81 91 00           a0 = a1 + 0x9181
  1940: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  1944: 95 18 34 01              a1 = sp + 0x134
  1948: 95 15 48 91 00           s0 = sp + 0x9148
  1953: 95 5a 43 31              a3 = s0 + 0x3143
  1957: 7b 1a e8 00              u64 [sp + 0xe8] = a3
  1961: 95 5a 83 31              a3 = s0 + 0x3183
  1965: 7b 1a e0 00              u64 [sp + 0xe0] = a3
  1969: 95 5a c3 31              a3 = s0 + 0x31c3
  1973: 7b 1a d8 00              u64 [sp + 0xd8] = a3
  1977: 95 5b c3 61              a4 = s0 + 0x61c3
  1981: 7b 1b d0 00              u64 [sp + 0xd0] = a4
  1985: 95 5b 03 62              a4 = s0 + 0x6203
  1989: 7b 1b c8 00              u64 [sp + 0xc8] = a4
  1993: 95 87 00 10              a0 = a1 + 0x1000
  1997: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2001: 95 87 00 20              a0 = a1 + 0x2000
  2005: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2009: 95 87 00 30              a0 = a1 + 0x3000
  2013: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2017: 95 87 00 40              a0 = a1 + 0x4000
  2021: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2025: 95 87 00 50              a0 = a1 + 0x5000
  2029: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  2033: 95 87 00 60              a0 = a1 + 0x6000
  2037: 7b 17 98 00              u64 [sp + 0x98] = a0
  2041: 95 87 00 70              a0 = a1 + 0x7000
  2045: 7b 17 90 00              u64 [sp + 0x90] = a0
  2049: 95 88 00 80 00           a1 = a1 + 0x8000
  2054: 7b 18 88 00              u64 [sp + 0x88] = a1
  2058: 95 58 43 62              a1 = s0 + 0x6243
  2062: 7b 18 80 00              u64 [sp + 0x80] = a1
  2066: 95 18 50 b4 01           a1 = sp + 0x1b450
  2071: 95 82 00 10              t0 = a1 + 0x1000
  2075: 7b 12 70                 u64 [sp + 0x70] = t0
  2078: 95 8b 00 20              a4 = a1 + 0x2000
  2082: 7b 1b 68                 u64 [sp + 0x68] = a4
  2085: 95 8c 00 40              a5 = a1 + 0x4000
  2089: 7b 1c 60                 u64 [sp + 0x60] = a5
  2092: 95 1c 50 24 01           a5 = sp + 0x12450
  2097: 95 cb 40 30              a4 = a5 + 0x3040
  2101: 7b 1b 58                 u64 [sp + 0x58] = a4
  2104: 95 86 00 50              s1 = a1 + 0x5000
  2108: 7b 16 50                 u64 [sp + 0x50] = s1
  2111: 33 06                    s1 = 0
  2113: 95 8b 00 30              a4 = a1 + 0x3000
  2117: 7b 1b 48                 u64 [sp + 0x48] = a4
  2120: 95 cb 00 30              a4 = a5 + 0x3000
  2124: 7b 1b 40                 u64 [sp + 0x40] = a4
  2127: 95 c9 80 30              a2 = a5 + 0x3080
  2131: 7b 19 38                 u64 [sp + 0x38] = a2
  2134: 95 83 00 70              t1 = a1 + 0x7000
  2138: 7b 13 30                 u64 [sp + 0x30] = t1
  2141: 95 87 00 80 00           a0 = a1 + 0x8000
  2146: 7b 17 28                 u64 [sp + 0x28] = a0
  2149: 95 88 00 60              a1 = a1 + 0x6000
  2153: 7b 18 20                 u64 [sp + 0x20] = a1
  2156: 95 c7 40 60              a0 = a5 + 0x6040
  2160: 7b 17 18                 u64 [sp + 0x18] = a0
  2163: 95 c7 00 60              a0 = a5 + 0x6000
  2167: 7b 17 10                 u64 [sp + 0x10] = a0
  2170: 95 c7 80 60              a0 = a5 + 0x6080
  2174: 7b 17 08                 u64 [sp + 0x8] = a0
  2177: 49 11 78 04 93 00        u64 [sp + 120] = 0x9304
  2183: 33 05 c2 00              s0 = 0xc2
  2187: 01                       fallthrough
      :                          @130
  2188: 95 17 48 91 00           a0 = sp + 0x9148
  2193: 33 08                    a1 = 0
  2195: 82 19 78                 a2 = u64 [sp + 0x78]
  2198: 50 10 1e 29 0c           ra = 30, jump @356
      :                          @131 [@dyn 15]
  2203: 83 66 01                 i32 s1 = s1 + 0x1
  2206: 7b 16 00 01              u64 [sp + 0x100] = s1
  2210: 95 17 0b 92 00           a0 = sp + 0x920b
  2215: 95 18 34 01              a1 = sp + 0x134
  2219: 33 0a 01                 a3 = 0x1
  2222: 95 13 48 91 00           t1 = sp + 0x9148
  2227: 33 02 40                 t0 = 0x40
  2230: 01                       fallthrough
      :                          @132
  2231: 64 a9                    a2 = a3
  2233: 33 0a 40                 a3 = 0x40
  2236: 64 7b                    a4 = a0
  2238: 64 8c                    a5 = a1
  2240: 01                       fallthrough
      :                          @133
  2241: 7c c6                    s1 = u8 [a5]
  2243: 78 b6                    u8 [a4] = s1
  2245: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2248: 95 cc 01                 a5 = a5 + 0x1
  2251: 95 bb 01                 a4 = a4 + 0x1
  2254: 52 0a f3                 jump @133 if a3 != 0
      :                          @134
  2257: 88 9a 40                 a3 = a2 <u 0x40
  2260: c8 9a 0a                 a3 = a3 + a2
  2263: 95 88 40                 a1 = a1 + 0x40
  2266: 95 77 c2 00              a0 = a0 + 0xc2
  2270: ac 29 d9                 jump @132 if a2 <u t0
      :                          @135
  2273: 33 0a 01                 a3 = 0x1
  2276: 95 17 4b 92 00           a0 = sp + 0x924b
  2281: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  2285: 01                       fallthrough
      :                          @136
  2286: 64 a9                    a2 = a3
  2288: 33 0a 40                 a3 = 0x40
  2291: 64 7b                    a4 = a0
  2293: 64 8c                    a5 = a1
  2295: 01                       fallthrough
      :                          @137
  2296: 7c c6                    s1 = u8 [a5]
  2298: 78 b6                    u8 [a4] = s1
  2300: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2303: 95 cc 01                 a5 = a5 + 0x1
  2306: 95 bb 01                 a4 = a4 + 0x1
  2309: 52 0a f3                 jump @137 if a3 != 0
      :                          @138
  2312: 88 9a 40                 a3 = a2 <u 0x40
  2315: c8 9a 0a                 a3 = a3 + a2
  2318: 95 88 40                 a1 = a1 + 0x40
  2321: 95 77 c2 00              a0 = a0 + 0xc2
  2325: ac 29 d9                 jump @136 if a2 <u t0
      :                          @139
  2328: 33 0a 01                 a3 = 0x1
  2331: 95 17 8b 92 00           a0 = sp + 0x928b
  2336: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  2340: 01                       fallthrough
      :                          @140
  2341: 64 a9                    a2 = a3
  2343: 33 0a 40                 a3 = 0x40
  2346: 64 7b                    a4 = a0
  2348: 64 8c                    a5 = a1
  2350: 01                       fallthrough
      :                          @141
  2351: 7c c6                    s1 = u8 [a5]
  2353: 78 b6                    u8 [a4] = s1
  2355: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2358: 95 cc 01                 a5 = a5 + 0x1
  2361: 95 bb 01                 a4 = a4 + 0x1
  2364: 52 0a f3                 jump @141 if a3 != 0
      :                          @142
  2367: 88 9a 40                 a3 = a2 <u 0x40
  2370: c8 9a 0a                 a3 = a3 + a2
  2373: 95 88 40                 a1 = a1 + 0x40
  2376: 95 77 c2 00              a0 = a0 + 0xc2
  2380: ac 29 d9                 jump @140 if a2 <u t0
      :                          @143
  2383: 33 0a 01                 a3 = 0x1
  2386: 82 17 e8 00              a0 = u64 [sp + 0xe8]
  2390: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  2394: 01                       fallthrough
      :                          @144
  2395: 64 a9                    a2 = a3
  2397: 33 0a 40                 a3 = 0x40
  2400: 64 7b                    a4 = a0
  2402: 64 8c                    a5 = a1
  2404: 01                       fallthrough
      :                          @145
  2405: 7c c6                    s1 = u8 [a5]
  2407: 78 b6                    u8 [a4] = s1
  2409: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2412: 95 cc 01                 a5 = a5 + 0x1
  2415: 95 bb 01                 a4 = a4 + 0x1
  2418: 52 0a f3                 jump @145 if a3 != 0
      :                          @146
  2421: 88 9a 40                 a3 = a2 <u 0x40
  2424: c8 9a 0a                 a3 = a3 + a2
  2427: 95 88 40                 a1 = a1 + 0x40
  2430: 95 77 c2 00              a0 = a0 + 0xc2
  2434: ac 29 d9                 jump @144 if a2 <u t0
      :                          @147
  2437: 33 0a 01                 a3 = 0x1
  2440: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  2444: 82 18 a8 00              a1 = u64 [sp + 0xa8]
  2448: 01                       fallthrough
      :                          @148
  2449: 64 a9                    a2 = a3
  2451: 33 0a 40                 a3 = 0x40
  2454: 64 7b                    a4 = a0
  2456: 64 8c                    a5 = a1
  2458: 01                       fallthrough
      :                          @149
  2459: 7c c6                    s1 = u8 [a5]
  2461: 78 b6                    u8 [a4] = s1
  2463: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2466: 95 cc 01                 a5 = a5 + 0x1
  2469: 95 bb 01                 a4 = a4 + 0x1
  2472: 52 0a f3                 jump @149 if a3 != 0
      :                          @150
  2475: 88 9a 40                 a3 = a2 <u 0x40
  2478: c8 9a 0a                 a3 = a3 + a2
  2481: 95 88 40                 a1 = a1 + 0x40
  2484: 95 77 c2 00              a0 = a0 + 0xc2
  2488: ac 29 d9                 jump @148 if a2 <u t0
      :                          @151
  2491: 33 0a 01                 a3 = 0x1
  2494: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2498: 82 18 a0 00              a1 = u64 [sp + 0xa0]
  2502: 01                       fallthrough
      :                          @152
  2503: 64 a9                    a2 = a3
  2505: 33 0a 40                 a3 = 0x40
  2508: 64 7b                    a4 = a0
  2510: 64 8c                    a5 = a1
  2512: 01                       fallthrough
      :                          @153
  2513: 7c c6                    s1 = u8 [a5]
  2515: 78 b6                    u8 [a4] = s1
  2517: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2520: 95 cc 01                 a5 = a5 + 0x1
  2523: 95 bb 01                 a4 = a4 + 0x1
  2526: 52 0a f3                 jump @153 if a3 != 0
      :                          @154
  2529: 88 9a 40                 a3 = a2 <u 0x40
  2532: c8 9a 0a                 a3 = a3 + a2
  2535: 95 88 40                 a1 = a1 + 0x40
  2538: 95 77 c2 00              a0 = a0 + 0xc2
  2542: ac 29 d9                 jump @152 if a2 <u t0
      :                          @155
  2545: 33 0a 01                 a3 = 0x1
  2548: 82 17 d0 00              a0 = u64 [sp + 0xd0]
  2552: 82 18 98 00              a1 = u64 [sp + 0x98]
  2556: 01                       fallthrough
      :                          @156
  2557: 64 a9                    a2 = a3
  2559: 33 0a 40                 a3 = 0x40
  2562: 64 7b                    a4 = a0
  2564: 64 8c                    a5 = a1
  2566: 01                       fallthrough
      :                          @157
  2567: 7c c6                    s1 = u8 [a5]
  2569: 78 b6                    u8 [a4] = s1
  2571: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2574: 95 cc 01                 a5 = a5 + 0x1
  2577: 95 bb 01                 a4 = a4 + 0x1
  2580: 52 0a f3                 jump @157 if a3 != 0
      :                          @158
  2583: 88 9a 40                 a3 = a2 <u 0x40
  2586: c8 9a 0a                 a3 = a3 + a2
  2589: 95 88 40                 a1 = a1 + 0x40
  2592: 95 77 c2 00              a0 = a0 + 0xc2
  2596: ac 29 d9                 jump @156 if a2 <u t0
      :                          @159
  2599: 33 0a 01                 a3 = 0x1
  2602: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  2606: 82 18 90 00              a1 = u64 [sp + 0x90]
  2610: 01                       fallthrough
      :                          @160
  2611: 64 a9                    a2 = a3
  2613: 33 0a 40                 a3 = 0x40
  2616: 64 7b                    a4 = a0
  2618: 64 8c                    a5 = a1
  2620: 01                       fallthrough
      :                          @161
  2621: 7c c6                    s1 = u8 [a5]
  2623: 78 b6                    u8 [a4] = s1
  2625: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2628: 95 cc 01                 a5 = a5 + 0x1
  2631: 95 bb 01                 a4 = a4 + 0x1
  2634: 52 0a f3                 jump @161 if a3 != 0
      :                          @162
  2637: 88 9a 40                 a3 = a2 <u 0x40
  2640: c8 9a 0a                 a3 = a3 + a2
  2643: 95 88 40                 a1 = a1 + 0x40
  2646: 95 77 c2 00              a0 = a0 + 0xc2
  2650: ac 29 d9                 jump @160 if a2 <u t0
      :                          @163
  2653: 33 0a 01                 a3 = 0x1
  2656: 82 17 80 00              a0 = u64 [sp + 0x80]
  2660: 82 18 88 00              a1 = u64 [sp + 0x88]
  2664: 01                       fallthrough
      :                          @164
  2665: 64 a9                    a2 = a3
  2667: 33 0a 40                 a3 = 0x40
  2670: 64 7b                    a4 = a0
  2672: 64 8c                    a5 = a1
  2674: 01                       fallthrough
      :                          @165
  2675: 7c c6                    s1 = u8 [a5]
  2677: 78 b6                    u8 [a4] = s1
  2679: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  2682: 95 cc 01                 a5 = a5 + 0x1
  2685: 95 bb 01                 a4 = a4 + 0x1
  2688: 52 0a f3                 jump @165 if a3 != 0
      :                          @166
  2691: 88 9a 40                 a3 = a2 <u 0x40
  2694: c8 9a 0a                 a3 = a3 + a2
  2697: 95 88 40                 a1 = a1 + 0x40
  2700: 95 77 c2 00              a0 = a0 + 0xc2
  2704: ac 29 d9                 jump @164 if a2 <u t0
      :                          @167
  2707: 33 07 01                 a0 = 0x1
  2710: 33 0c 00 90 00           a5 = 0x9000
  2715: 33 06 c0 00              s1 = 0xc0
  2719: 01                       fallthrough
      :                          @168
  2720: 88 78 c0 00              a1 = a0 <u 0xc0
  2724: c8 73 09                 a2 = t1 + a0
  2727: c8 c9 0a                 a3 = a2 + a5
  2730: 7c ab 80 01              a4 = u8 [a3 + 0x180]
  2734: 95 77 01                 a0 = a0 + 0x1
  2737: da 86 07                 a0 = s1 if a1 == 0
  2740: 85 88 01                 a1 = a1 ^ 0x1
  2743: 78 9b                    u8 [a2] = a4
  2745: 7c 99 c2 00              a2 = u8 [a2 + 0xc2]
  2749: 88 7b c1 00              a4 = a0 <u 0xc1
  2753: 85 bb 01                 a4 = a4 ^ 0x1
  2756: d4 b8 08                 a1 = a1 | a4
  2759: 78 a9 42 02              u8 [a3 + 0x242] = a2
  2763: 51 08 d5                 jump @168 if a1 == 0
      :                          @169
  2766: 33 07 01                 a0 = 0x1
  2769: 01                       fallthrough
      :                          @170
  2770: 88 78 c0 00              a1 = a0 <u 0xc0
  2774: ca 57 09                 a2 = a0 * s0
  2777: c8 39 09                 a2 = a2 + t1
  2780: 7c 9a c0 00              a3 = u8 [a2 + 0xc0]
  2784: 85 8b 01                 a4 = a1 ^ 0x1
  2787: 95 77 01                 a0 = a0 + 0x1
  2790: da 86 07                 a0 = s1 if a1 == 0
  2793: 78 9a                    u8 [a2] = a3
  2795: 7c 98 01                 a1 = u8 [a2 + 0x1]
  2798: 88 7a c1 00              a3 = a0 <u 0xc1
  2802: 85 aa 01                 a3 = a3 ^ 0x1
  2805: d4 ba 0a                 a3 = a3 | a4
  2808: 78 98 c1 00              u8 [a2 + 0xc1] = a1
  2812: 51 0a d6                 jump @170 if a3 == 0
      :                          @171
  2815: 82 1a f0 00              a3 = u64 [sp + 0xf0]
  2819: 7c a7 bf 00              a0 = u8 [a3 + 0xbf]
  2823: 95 19 34 91 00           a2 = sp + 0x9134
  2828: 78 97 14                 u8 [a2 + 0x14] = a0
  2831: 7c a7                    a0 = u8 [a3]
  2833: 7c 98 96 01              a1 = u8 [a2 + 0x196]
  2837: 78 97 d5 00              u8 [a2 + 0xd5] = a0
  2841: 78 a8 c1 00              u8 [a3 + 0xc1] = a1
  2845: 7c 97 d7 00              a0 = u8 [a2 + 0xd7]
  2849: 78 a7 82 01              u8 [a3 + 0x182] = a0
  2853: 95 17 50 24 01           a0 = sp + 0x12450
  2858: 33 09 00 90 00           a2 = 0x9000
  2863: 33 08                    a1 = 0
  2865: 50 10 20 8e 09           ra = 32, jump @356
      :                          @172 [@dyn 16]
  2870: 95 13 48 91 00           t1 = sp + 0x9148
  2875: 33 0b 01                 a4 = 0x1
  2878: 28 15                    jump @174
      :                          @173
  2880: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2884: 88 b7 c1 00              a0 = a4 <u 0xc1
  2888: 82 18 08 01              a1 = u64 [sp + 0x108]
  2892: d2 87 07                 a0 = a0 & a1
  2895: 51 07 f0 00              jump @184 if a0 == 0
      :                          @174
  2899: 95 b7 ff                 a0 = a4 + 0xffffffffffffffff
  2902: 56 27 c1 00 ce 03        jump @223 if a0 >u 193
      :                          @175
  2908: 95 b8 01                 a1 = a4 + 0x1
  2911: 88 b9 c0 00              a2 = a4 <u 0xc0
  2915: 7b 18 18 01              u64 [sp + 0x118] = a1
  2919: 7b 19 08 01              u64 [sp + 0x108] = a2
  2923: 93 98 c0 00              a1 = 0xc0 if a2 == 0
  2927: 7b 18 10 01              u64 [sp + 0x110] = a1
  2931: 33 0c 01                 a5 = 0x1
  2934: 7b 1b 28 01              u64 [sp + 0x128] = a4
  2938: 7b 17 20 01              u64 [sp + 0x120] = a0
  2942: 28 37                    jump @178
      :                          @176
  2944: 33 0a                    a3 = 0
  2946: 01                       fallthrough
      :                          @177
  2947: 88 c8 c0 00              a1 = a5 <u 0xc0
  2951: 93 86 c0 00              s1 = 0xc0 if a1 == 0
  2955: 82 17 20 01              a0 = u64 [sp + 0x120]
  2959: 96 79 c0 00              a2 = a0 * 0xc0
  2963: 95 1b 50 24 01           a4 = sp + 0x12450
  2968: c8 b9 09                 a2 = a2 + a4
  2971: c8 09 09                 a2 = a2 + ra
  2974: 88 6b c1 00              a4 = s1 <u 0xc1
  2978: d2 b8 08                 a1 = a1 & a4
  2981: 78 9a                    u8 [a2] = a3
  2983: 64 6c                    a5 = s1
  2985: 95 13 48 91 00           t1 = sp + 0x9148
  2990: 82 1b 28 01              a4 = u64 [sp + 0x128]
  2994: 51 08 8e                 jump @173 if a1 == 0
      :                          @178
  2997: 95 c6 01                 s1 = a5 + 0x1
  3000: 95 c0 ff                 ra = a5 + 0xffffffffffffffff
  3003: 96 79 c2 00              a2 = a0 * 0xc2
  3007: c8 93 08                 a1 = t1 + a2
  3010: c8 08 0a                 a3 = a1 + ra
  3013: 7c aa                    a3 = u8 [a3]
  3015: c8 c8 09                 a2 = a1 + a5
  3018: 7c 99                    a2 = u8 [a2]
  3020: c8 68 08                 a1 = a1 + s1
  3023: 7c 88                    a1 = u8 [a1]
  3025: 96 bb c2 00              a4 = a4 * 0xc2
  3029: c8 b3 02                 t0 = t1 + a4
  3032: c8 02 0b                 a4 = t0 + ra
  3035: 7c bb                    a4 = u8 [a4]
  3037: c8 a9 09                 a2 = a2 + a3
  3040: c8 b8 08                 a1 = a1 + a4
  3043: c8 98 08                 a1 = a1 + a2
  3046: c8 62 09                 a2 = t0 + s1
  3049: 7c 99                    a2 = u8 [a2]
  3051: 82 17 18 01              a0 = u64 [sp + 0x118]
  3055: 96 7a c2 00              a3 = a0 * 0xc2
  3059: c8 a3 03                 t1 = t1 + a3
  3062: c8 03 0b                 a4 = t1 + ra
  3065: 7c bb                    a4 = u8 [a4]
  3067: c8 c3 0a                 a3 = t1 + a5
  3070: 7c a4                    t2 = u8 [a3]
  3072: c8 63 03                 t1 = t1 + s1
  3075: 7c 35                    s0 = u8 [t1]
  3077: c8 c2 02                 t0 = t0 + a5
  3080: 7c 2a                    a3 = u8 [t0]
  3082: c8 b9 09                 a2 = a2 + a4
  3085: c8 49 09                 a2 = a2 + t2
  3088: c8 98 08                 a1 = a1 + a2
  3091: be 58 09                 i32 a2 = a1 + s0
  3094: 51 0a 1a                 jump @182 if a3 == 0
      :                          @179
  3097: 33 05 c0 00              s0 = 0xc0
  3101: 52 1a 01 63 ff           jump @176 if a3 != 1
      :                          @180
  3106: 84 99 fe                 a2 = a2 & 0xfffffffffffffffe
  3109: 33 0a 01                 a3 = 0x1
  3112: 52 19 02 58 ff           jump @176 if a2 != 2
      :                          @181
  3117: 28 56 ff                 jump @177
      :                          @182
  3120: 33 0a 01                 a3 = 0x1
  3123: 33 05 c0 00              s0 = 0xc0
  3127: 52 19 03 49 ff           jump @176 if a2 != 3
      :                          @183
  3132: 28 47 ff                 jump @177
      :                          @184
  3135: 95 17 50 b4 01           a0 = sp + 0x1b450
  3140: 33 09 00 90 00           a2 = 0x9000
  3145: 95 16 50 b4 01           s1 = sp + 0x1b450
  3150: 33 08                    a1 = 0
  3152: 50 10 22 6f 08           ra = 34, jump @356
      :                          @185 [@dyn 17]
  3157: 33 07 40                 a0 = 0x40
  3160: 95 15 50 24 01           s0 = sp + 0x12450
  3165: 01                       fallthrough
      :                          @186
  3166: 7b 17 28 01              u64 [sp + 0x128] = a0
  3170: 33 09 40                 a2 = 0x40
  3173: 64 67                    a0 = s1
  3175: 64 58                    a1 = s0
  3177: 50 10 24 a4 07           ra = 36, jump @338
      :                          @187 [@dyn 18]
  3182: 82 17 28 01              a0 = u64 [sp + 0x128]
  3186: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3189: 95 55 c0 00              s0 = s0 + 0xc0
  3193: 95 66 40                 s1 = s1 + 0x40
  3196: 52 07 e2                 jump @186 if a0 != 0
      :                          @188
  3199: 33 07 40                 a0 = 0x40
  3202: 95 15 90 24 01           s0 = sp + 0x12490
  3207: 82 16 70                 s1 = u64 [sp + 0x70]
  3210: 01                       fallthrough
      :                          @189
  3211: 7b 17 28 01              u64 [sp + 0x128] = a0
  3215: 33 09 40                 a2 = 0x40
  3218: 64 67                    a0 = s1
  3220: 64 58                    a1 = s0
  3222: 50 10 26 77 07           ra = 38, jump @338
      :                          @190 [@dyn 19]
  3227: 82 17 28 01              a0 = u64 [sp + 0x128]
  3231: 95 66 40                 s1 = s1 + 0x40
  3234: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3237: 95 55 c0 00              s0 = s0 + 0xc0
  3241: 52 07 e2                 jump @189 if a0 != 0
      :                          @191
  3244: 33 07 40                 a0 = 0x40
  3247: 95 15 d0 24 01           s0 = sp + 0x124d0
  3252: 82 16 68                 s1 = u64 [sp + 0x68]
  3255: 01                       fallthrough
      :                          @192
  3256: 7b 17 28 01              u64 [sp + 0x128] = a0
  3260: 33 09 40                 a2 = 0x40
  3263: 64 67                    a0 = s1
  3265: 64 58                    a1 = s0
  3267: 50 10 28 4a 07           ra = 40, jump @338
      :                          @193 [@dyn 20]
  3272: 82 17 28 01              a0 = u64 [sp + 0x128]
  3276: 95 66 40                 s1 = s1 + 0x40
  3279: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3282: 95 55 c0 00              s0 = s0 + 0xc0
  3286: 52 07 e2                 jump @192 if a0 != 0
      :                          @194
  3289: 33 07 40                 a0 = 0x40
  3292: 82 15 40                 s0 = u64 [sp + 0x40]
  3295: 82 16 48                 s1 = u64 [sp + 0x48]
  3298: 01                       fallthrough
      :                          @195
  3299: 7b 17 28 01              u64 [sp + 0x128] = a0
  3303: 33 09 40                 a2 = 0x40
  3306: 64 67                    a0 = s1
  3308: 64 58                    a1 = s0
  3310: 50 10 2a 1f 07           ra = 42, jump @338
      :                          @196 [@dyn 21]
  3315: 82 17 28 01              a0 = u64 [sp + 0x128]
  3319: 95 66 40                 s1 = s1 + 0x40
  3322: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3325: 95 55 c0 00              s0 = s0 + 0xc0
  3329: 52 07 e2                 jump @195 if a0 != 0
      :                          @197
  3332: 33 07 40                 a0 = 0x40
  3335: 82 15 58                 s0 = u64 [sp + 0x58]
  3338: 82 16 60                 s1 = u64 [sp + 0x60]
  3341: 01                       fallthrough
      :                          @198
  3342: 7b 17 28 01              u64 [sp + 0x128] = a0
  3346: 33 09 40                 a2 = 0x40
  3349: 64 67                    a0 = s1
  3351: 64 58                    a1 = s0
  3353: 50 10 2c f4 06           ra = 44, jump @338
      :                          @199 [@dyn 22]
  3358: 82 17 28 01              a0 = u64 [sp + 0x128]
  3362: 95 66 40                 s1 = s1 + 0x40
  3365: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3368: 95 55 c0 00              s0 = s0 + 0xc0
  3372: 52 07 e2                 jump @198 if a0 != 0
      :                          @200
  3375: 33 07 40                 a0 = 0x40
  3378: 82 15 38                 s0 = u64 [sp + 0x38]
  3381: 82 16 50                 s1 = u64 [sp + 0x50]
  3384: 01                       fallthrough
      :                          @201
  3385: 7b 17 28 01              u64 [sp + 0x128] = a0
  3389: 33 09 40                 a2 = 0x40
  3392: 64 67                    a0 = s1
  3394: 64 58                    a1 = s0
  3396: 50 10 2e c9 06           ra = 46, jump @338
      :                          @202 [@dyn 23]
  3401: 82 17 28 01              a0 = u64 [sp + 0x128]
  3405: 95 66 40                 s1 = s1 + 0x40
  3408: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3411: 95 55 c0 00              s0 = s0 + 0xc0
  3415: 52 07 e2                 jump @201 if a0 != 0
      :                          @203
  3418: 33 07 40                 a0 = 0x40
  3421: 82 15 10                 s0 = u64 [sp + 0x10]
  3424: 82 16 20                 s1 = u64 [sp + 0x20]
  3427: 01                       fallthrough
      :                          @204
  3428: 7b 17 28 01              u64 [sp + 0x128] = a0
  3432: 33 09 40                 a2 = 0x40
  3435: 64 67                    a0 = s1
  3437: 64 58                    a1 = s0
  3439: 50 10 30 9e 06           ra = 48, jump @338
      :                          @205 [@dyn 24]
  3444: 82 17 28 01              a0 = u64 [sp + 0x128]
  3448: 95 66 40                 s1 = s1 + 0x40
  3451: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3454: 95 55 c0 00              s0 = s0 + 0xc0
  3458: 52 07 e2                 jump @204 if a0 != 0
      :                          @206
  3461: 33 07 40                 a0 = 0x40
  3464: 82 15 18                 s0 = u64 [sp + 0x18]
  3467: 82 16 30                 s1 = u64 [sp + 0x30]
  3470: 01                       fallthrough
      :                          @207
  3471: 7b 17 28 01              u64 [sp + 0x128] = a0
  3475: 33 09 40                 a2 = 0x40
  3478: 64 67                    a0 = s1
  3480: 64 58                    a1 = s0
  3482: 50 10 32 73 06           ra = 50, jump @338
      :                          @208 [@dyn 25]
  3487: 82 17 28 01              a0 = u64 [sp + 0x128]
  3491: 95 66 40                 s1 = s1 + 0x40
  3494: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3497: 95 55 c0 00              s0 = s0 + 0xc0
  3501: 52 07 e2                 jump @207 if a0 != 0
      :                          @209
  3504: 33 07 40                 a0 = 0x40
  3507: 82 15 08                 s0 = u64 [sp + 0x8]
  3510: 82 16 28                 s1 = u64 [sp + 0x28]
  3513: 01                       fallthrough
      :                          @210
  3514: 7b 17 28 01              u64 [sp + 0x128] = a0
  3518: 33 09 40                 a2 = 0x40
  3521: 64 67                    a0 = s1
  3523: 64 58                    a1 = s0
  3525: 50 10 34 48 06           ra = 52, jump @338
      :                          @211 [@dyn 26]
  3530: 82 17 28 01              a0 = u64 [sp + 0x128]
  3534: 95 66 40                 s1 = s1 + 0x40
  3537: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3540: 95 55 c0 00              s0 = s0 + 0xc0
  3544: 52 07 e2                 jump @210 if a0 != 0
      :                          @212
  3547: 95 17 34 01              a0 = sp + 0x134
  3551: 95 18 50 b4 01           a1 = sp + 0x1b450
  3556: 33 09 00 90 00           a2 = 0x9000
  3561: 50 10 36 24 06           ra = 54, jump @338
      :                          @213 [@dyn 27]
  3566: 82 17 f8 00              a0 = u64 [sp + 0xf8]
  3570: 82 16 00 01              s1 = u64 [sp + 0x100]
  3574: 33 05 c2 00              s0 = 0xc2
  3578: ab 76 92 fa              jump @130 if s1 != a0
      :                          @214
  3582: 95 15 34 01              s0 = sp + 0x134
  3586: 33 06 00 10              s1 = 0x1000
  3590: 95 17 34 01              a0 = sp + 0x134
  3594: 33 08 00 10              a1 = 0x1000
  3598: 0a 13                    ecalli 19 // 'export'
  3600: c8 65 07                 a0 = s0 + s1
  3603: 33 08 00 10              a1 = 0x1000
  3607: 0a 13                    ecalli 19 // 'export'
  3609: 95 57 00 20              a0 = s0 + 0x2000
  3613: 33 08 00 10              a1 = 0x1000
  3617: 0a 13                    ecalli 19 // 'export'
  3619: 95 57 00 30              a0 = s0 + 0x3000
  3623: 33 08 00 10              a1 = 0x1000
  3627: 0a 13                    ecalli 19 // 'export'
  3629: 95 57 00 40              a0 = s0 + 0x4000
  3633: 33 08 00 10              a1 = 0x1000
  3637: 0a 13                    ecalli 19 // 'export'
  3639: 95 57 00 50              a0 = s0 + 0x5000
  3643: 33 08 00 10              a1 = 0x1000
  3647: 0a 13                    ecalli 19 // 'export'
  3649: 95 57 00 60              a0 = s0 + 0x6000
  3653: 33 08 00 10              a1 = 0x1000
  3657: 0a 13                    ecalli 19 // 'export'
  3659: 95 57 00 70              a0 = s0 + 0x7000
  3663: 33 08 00 10              a1 = 0x1000
  3667: 0a 13                    ecalli 19 // 'export'
  3669: 95 57 00 80 00           a0 = s0 + 0x8000
  3674: 33 08 00 10              a1 = 0x1000
  3678: 0a 13                    ecalli 19 // 'export'
  3680: 95 17 34 91 00           a0 = sp + 0x9134
  3685: 95 18 50 b4 01           a1 = sp + 0x1b450
  3690: 7b 87                    u64 [a1] = a0
  3692: 33 07 06                 a0 = 0x6
  3695: 7b 87 08                 u64 [a1 + 0x8] = a0
  3698: 33 07 28 00 01           a0 = 0x10028
  3703: 7b 87 10                 u64 [a1 + 0x10] = a0
  3706: 33 07 0a                 a0 = 0xa
  3709: 7b 87 18                 u64 [a1 + 0x18] = a0
  3712: 33 07 10 01 01           a0 = 0x10110
  3717: 95 18 34 91 00           a1 = sp + 0x9134
  3722: 7b 87 14                 u64 [a1 + 0x14] = a0
  3725: 49 18 1c 03              u64 [a1 + 28] = 0x3
  3729: 95 17 50 b4 01           a0 = sp + 0x1b450
  3734: 7b 87 24                 u64 [a1 + 0x24] = a0
  3737: 49 18 2c 02              u64 [a1 + 44] = 0x2
  3741: 49 18 34                 u64 [a1 + 52] = 0
  3744: 95 17 50 24 01           a0 = sp + 0x12450
  3749: 95 18 48 91 00           a1 = sp + 0x9148
  3754: 50 10 38 ee 02           ra = 56, jump @288
      :                          @215 [@dyn 28]
  3759: 95 17 50 24 01           a0 = sp + 0x12450
  3764: 82 76 08                 s1 = u64 [a0 + 0x8]
  3767: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3770: 82 75                    s0 = u64 [a0]
  3772: 33 07 02                 a0 = 0x2
  3775: 33 08                    a1 = 0
  3777: 33 09                    a2 = 0
  3779: 64 6a                    a3 = s1
  3781: 33 00 3a                 ra = 0x3a
  3784: 0a 64                    ecalli 100 // 'log'
  3786: 01                       fallthrough
      :                          @216 [@dyn 29]
  3787: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  3793: 53 48 01 10 00 ff 32     jump @222 if a1 <u 4278194177
      :                          @217
  3800: 64 62                    t0 = s1
  3802: 33 07 10 00 03           a0 = 0x30010
  3807: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  3813: 33 09 ff ef ff 00        a2 = 0xffefff
  3819: 01                       fallthrough
      :                          @218
  3820: 82 8a                    a3 = u64 [a1]
  3822: c8 97 0b                 a4 = a0 + a2
  3825: c9 ab 0b                 a4 = a4 - a3
  3828: ab 2b 0f                 jump @222 if a4 != t0
      :                          @219
  3831: c9 5a 0b                 a4 = a3 - s0
  3834: 01                       fallthrough
      :                          @220
  3835: 82 8c                    a5 = u64 [a1]
  3837: ab ac ef                 jump @218 if a5 != a3
      :                          @221
  3840: 7b 8b                    u64 [a1] = a4
  3842: 01                       fallthrough
      :                          @222
  3843: 33 07 00 00 01           a0 = 0x10000
  3848: 33 08                    a1 = 0
  3850: 33 09 70 3c 02           a2 = 0x23c70
  3855: c8 91 01                 sp = sp + a2
  3858: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3862: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3866: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3870: 95 11 f8 07              sp = sp + 0x7f8
  3874: 32 00                    ret
      :                          @223
  3876: 00                       trap
      :                          @224
  3877: 00                       trap
      :                          @225
  3878: 00                       trap
      :                          @226
  3879: 00                       trap
      :                          @227
  3880: 00                       trap
      :                          @228
  3881: 00                       trap
      :                          @229
  3882: 00                       trap
      :                          @230 [export #1: 'accumulate']
  3883: 33 07 00 00 01           a0 = 0x10000
  3888: 33 08                    a1 = 0
  3890: 32 00                    ret
      :                          @231 [export #2: 'on_transfer']
  3892: 33 07 00 00 01           a0 = 0x10000
  3897: 33 08                    a1 = 0
  3899: 32 00                    ret
      :                          @232
  3901: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3904: 7b 10 40                 u64 [sp + 0x40] = ra
  3907: 7b 15 38                 u64 [sp + 0x38] = s0
  3910: 7b 16 30                 u64 [sp + 0x30] = s1
  3913: c8 89 09                 a2 = a2 + a1
  3916: ac 89 52                 jump @240 if a2 <u a1
      :                          @233
  3919: 64 75                    s0 = a0
  3921: 82 77                    a0 = u64 [a0]
  3923: 97 78 01                 a1 = a0 << 0x1
  3926: 33 0a 08                 a3 = 0x8
  3929: e4 a9 09                 a2 = maxu(a2, a3)
  3932: e4 98 06                 s1 = maxu(a1, a2)
  3935: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3938: 98 88 3f                 a1 = a1 >> 0x3f
  3941: 51 07 12                 jump @235 if a0 == 0
      :                          @234
  3944: 82 59 08                 a2 = u64 [s0 + 0x8]
  3947: 7b 19 18                 u64 [sp + 0x18] = a2
  3950: 49 11 20 01              u64 [sp + 32] = 0x1
  3954: 7b 17 28                 u64 [sp + 0x28] = a0
  3957: 28 06                    jump @236
      :                          @235
  3959: 49 11 20                 u64 [sp + 32] = 0
  3962: 01                       fallthrough
      :                          @236
  3963: 64 17                    a0 = sp
  3965: 95 1a 18                 a3 = sp + 0x18
  3968: 64 69                    a2 = s1
  3970: 50 10 3c 32              ra = 60, jump @244
      :                          @237 [@dyn 30]
  3974: 82 18                    a1 = u64 [sp]
  3976: 82 17 08                 a0 = u64 [sp + 0x8]
  3979: 51 08 14                 jump @241 if a1 == 0
      :                          @238
  3982: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3992: aa 87 0d                 jump @242 if a0 == a1
      :                          @239
  3995: 52 07 18                 jump @243 if a0 != 0
      :                          @240
  3998: 00                       trap
      :                          @241
  3999: 7b 57 08                 u64 [s0 + 0x8] = a0
  4002: 7b 56                    u64 [s0] = s1
  4004: 01                       fallthrough
      :                          @242
  4005: 82 10 40                 ra = u64 [sp + 0x40]
  4008: 82 15 38                 s0 = u64 [sp + 0x38]
  4011: 82 16 30                 s1 = u64 [sp + 0x30]
  4014: 95 11 48                 sp = sp + 0x48
  4017: 32 00                    ret
      :                          @243
  4019: 00                       trap
      :                          @244
  4020: 64 93                    t1 = a2
  4022: 64 72                    t0 = a0
  4024: 51 08 8f 00              jump @254 if a1 == 0
      :                          @245
  4028: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  4031: 7b 10 38                 u64 [sp + 0x38] = ra
  4034: 7b 15 30                 u64 [sp + 0x30] = s0
  4037: 7b 16 28                 u64 [sp + 0x28] = s1
  4040: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4043: 51 07 89 00              jump @255 if a0 == 0
      :                          @246
  4047: 82 a9 10                 a2 = u64 [a3 + 0x10]
  4050: 51 09 ba 00              jump @262 if a2 == 0
      :                          @247
  4054: 82 a8                    a1 = u64 [a3]
  4056: 33 06 10 00 03           s1 = 0x30010
  4061: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  4067: 33 05 ff ef ff 00        s0 = 0xffefff
  4073: 01                       fallthrough
      :                          @248
  4074: 82 6a                    a3 = u64 [s1]
  4076: c8 3a 07                 a0 = a3 + t1
  4079: ac a7 e0 00              jump @268 if a0 <u a3
      :                          @249
  4083: 95 7b 01                 a4 = a0 + 0x1
  4086: 88 bc 01                 a5 = a4 <u 0x1
  4089: d8 b5 0b                 a4 = s0 <u a4
  4092: d4 cb 0b                 a4 = a4 | a5
  4095: 52 0b d0 00              jump @268 if a4 != 0
      :                          @250
  4099: 82 6b                    a4 = u64 [s1]
  4101: ab ab e5                 jump @248 if a4 != a3
      :                          @251
  4104: 7b 67                    u64 [s1] = a0
  4106: 33 0c                    a5 = 0
  4108: 7b 13 10                 u64 [sp + 0x10] = t1
  4111: 7b 12 20                 u64 [sp + 0x20] = t0
  4114: 33 05 ff ef ff 00        s0 = 0xffefff
  4120: 33 0a 10 00 03           a3 = 0x30010
  4125: 7b 1a                    u64 [sp] = a3
  4127: c8 5a 0a                 a3 = a3 + s0
  4130: c9 7a 07                 a0 = a3 - a0
  4133: 7b 17 18                 u64 [sp + 0x18] = a0
  4136: 7b 18 08                 u64 [sp + 0x8] = a1
  4139: 64 96                    s1 = a2
  4141: 50 10 3e e0 03           ra = 62, jump @338
      :                          @252 [@dyn 31]
  4146: ae 65 a5 00              jump @269 if s0 >=u s1
      :                          @253
  4150: 82 12 20                 t0 = u64 [sp + 0x20]
  4153: 82 13 10                 t1 = u64 [sp + 0x10]
  4156: 82 18 18                 a1 = u64 [sp + 0x18]
  4159: 33 07                    a0 = 0
  4161: 7b 28 08                 u64 [t0 + 0x8] = a1
  4164: 28 c9 00                 jump @275
      :                          @254
  4167: 49 12 08                 u64 [t0 + 8] = 0
  4170: 33 07 01                 a0 = 0x1
  4173: 7b 23 10                 u64 [t0 + 0x10] = t1
  4176: 7b 27                    u64 [t0] = a0
  4178: 32 00                    ret
      :                          @255
  4180: 33 07 10 00 03           a0 = 0x30010
  4185: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  4191: 33 09 ff ef ff 00        a2 = 0xffefff
  4197: 01                       fallthrough
      :                          @256
  4198: 82 7a                    a3 = u64 [a0]
  4200: c8 3a 08                 a1 = a3 + t1
  4203: ac a8 64                 jump @268 if a1 <u a3
      :                          @257
  4206: 95 8b 01                 a4 = a1 + 0x1
  4209: 88 bc 01                 a5 = a4 <u 0x1
  4212: d8 b9 0b                 a4 = a2 <u a4
  4215: d4 cb 0b                 a4 = a4 | a5
  4218: 52 0b 55                 jump @268 if a4 != 0
      :                          @258
  4221: 82 7b                    a4 = u64 [a0]
  4223: ab ab e7                 jump @256 if a4 != a3
      :                          @259
  4226: 7b 78                    u64 [a0] = a1
  4228: 33 0c                    a5 = 0
  4230: 01                       fallthrough
      :                          @260
  4231: ab ab df                 jump @256 if a4 != a3
      :                          @261
  4234: 28 35                    jump @267
      :                          @262
  4236: 33 07 10 00 03           a0 = 0x30010
  4241: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  4247: 33 09 ff ef ff 00        a2 = 0xffefff
  4253: 01                       fallthrough
      :                          @263
  4254: 82 7a                    a3 = u64 [a0]
  4256: c8 3a 08                 a1 = a3 + t1
  4259: ac a8 2c                 jump @268 if a1 <u a3
      :                          @264
  4262: 95 8b 01                 a4 = a1 + 0x1
  4265: 88 bc 01                 a5 = a4 <u 0x1
  4268: d8 b9 0b                 a4 = a2 <u a4
  4271: d4 cb 0b                 a4 = a4 | a5
  4274: 52 0b 1d                 jump @268 if a4 != 0
      :                          @265
  4277: 82 7b                    a4 = u64 [a0]
  4279: ab ab e7                 jump @263 if a4 != a3
      :                          @266
  4282: 7b 78                    u64 [a0] = a1
  4284: 33 0c                    a5 = 0
  4286: 01                       fallthrough
      :                          @267
  4287: 33 07 0f f0 02 01        a0 = 0x102f00f
  4293: c9 87 08                 a1 = a0 - a1
  4296: 33 07                    a0 = 0
  4298: 7b 28 08                 u64 [t0 + 0x8] = a1
  4301: 28 40                    jump @275
      :                          @268
  4303: 33 07 01                 a0 = 0x1
  4306: 7b 27 08                 u64 [t0 + 0x8] = a0
  4309: 28 38                    jump @275
      :                          @269
  4311: 64 6c                    a5 = s1
  4313: 82 16                    s1 = u64 [sp]
  4315: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
  4321: 82 12 20                 t0 = u64 [sp + 0x20]
  4324: 82 14 08                 t2 = u64 [sp + 0x8]
  4327: 82 13 10                 t1 = u64 [sp + 0x10]
  4330: 01                       fallthrough
      :                          @270
  4331: 82 78                    a1 = u64 [a0]
  4333: c8 56 09                 a2 = s1 + s0
  4336: c9 89 09                 a2 = a2 - a1
  4339: ab 49 11                 jump @274 if a2 != t2
      :                          @271
  4342: c9 c8 09                 a2 = a1 - a5
  4345: 01                       fallthrough
      :                          @272
  4346: 82 7a                    a3 = u64 [a0]
  4348: ab 8a ef                 jump @270 if a3 != a1
      :                          @273
  4351: 7b 79                    u64 [a0] = a2
  4353: 33 0b                    a4 = 0
  4355: 01                       fallthrough
      :                          @274
  4356: 82 18 18                 a1 = u64 [sp + 0x18]
  4359: 33 07                    a0 = 0
  4361: 7b 28 08                 u64 [t0 + 0x8] = a1
  4364: 01                       fallthrough
      :                          @275
  4365: 82 10 38                 ra = u64 [sp + 0x38]
  4368: 82 15 30                 s0 = u64 [sp + 0x30]
  4371: 82 16 28                 s1 = u64 [sp + 0x28]
  4374: 95 11 40                 sp = sp + 0x40
  4377: 7b 23 10                 u64 [t0 + 0x10] = t1
  4380: 7b 27                    u64 [t0] = a0
  4382: 32 00                    ret
      :                          @276
  4384: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  4387: 7b 10 40                 u64 [sp + 0x40] = ra
  4390: 7b 15 38                 u64 [sp + 0x38] = s0
  4393: 7b 16 30                 u64 [sp + 0x30] = s1
  4396: 95 88 01                 a1 = a1 + 0x1
  4399: 51 08 53                 jump @284 if a1 == 0
      :                          @277
  4402: 64 75                    s0 = a0
  4404: 82 77                    a0 = u64 [a0]
  4406: 97 79 01                 a2 = a0 << 0x1
  4409: 33 0a 08                 a3 = 0x8
  4412: e4 a8 08                 a1 = maxu(a1, a3)
  4415: e4 89 06                 s1 = maxu(a2, a1)
  4418: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  4421: 98 88 3f                 a1 = a1 >> 0x3f
  4424: 51 07 12                 jump @279 if a0 == 0
      :                          @278
  4427: 82 59 08                 a2 = u64 [s0 + 0x8]
  4430: 7b 19 18                 u64 [sp + 0x18] = a2
  4433: 49 11 20 01              u64 [sp + 32] = 0x1
  4437: 7b 17 28                 u64 [sp + 0x28] = a0
  4440: 28 06                    jump @280
      :                          @279
  4442: 49 11 20                 u64 [sp + 32] = 0
  4445: 01                       fallthrough
      :                          @280
  4446: 64 17                    a0 = sp
  4448: 95 1a 18                 a3 = sp + 0x18
  4451: 64 69                    a2 = s1
  4453: 50 10 40 4f fe           ra = 64, jump @244
      :                          @281 [@dyn 32]
  4458: 82 18                    a1 = u64 [sp]
  4460: 82 17 08                 a0 = u64 [sp + 0x8]
  4463: 51 08 14                 jump @285 if a1 == 0
      :                          @282
  4466: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  4476: aa 87 0d                 jump @286 if a0 == a1
      :                          @283
  4479: 52 07 18                 jump @287 if a0 != 0
      :                          @284
  4482: 00                       trap
      :                          @285
  4483: 7b 57 08                 u64 [s0 + 0x8] = a0
  4486: 7b 56                    u64 [s0] = s1
  4488: 01                       fallthrough
      :                          @286
  4489: 82 10 40                 ra = u64 [sp + 0x40]
  4492: 82 15 38                 s0 = u64 [sp + 0x38]
  4495: 82 16 30                 s1 = u64 [sp + 0x30]
  4498: 95 11 48                 sp = sp + 0x48
  4501: 32 00                    ret
      :                          @287
  4503: 00                       trap
      :                          @288
  4504: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  4507: 7b 10 30                 u64 [sp + 0x30] = ra
  4510: 7b 15 28                 u64 [sp + 0x28] = s0
  4513: 7b 16 20                 u64 [sp + 0x20] = s1
  4516: 82 8a 08                 a3 = u64 [a1 + 0x8]
  4519: 64 75                    s0 = a0
  4521: 51 0a 35                 jump @293 if a3 == 0
      :                          @289
  4524: 82 89                    a2 = u64 [a1]
  4526: 33 07                    a0 = 0
  4528: 95 9b 08                 a4 = a2 + 0x8
  4531: 01                       fallthrough
      :                          @290
  4532: 82 bc                    a5 = u64 [a4]
  4534: c8 c7 07                 a0 = a0 + a5
  4537: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4540: 95 bb 10                 a4 = a4 + 0x10
  4543: 52 0a f5                 jump @290 if a3 != 0
      :                          @291
  4546: 82 8a 18                 a3 = u64 [a1 + 0x18]
  4549: 51 0a 24                 jump @295 if a3 == 0
      :                          @292
  4552: 82 99 08                 a2 = u64 [a2 + 0x8]
  4555: 8e 99                    a2 = a2 >u 0
  4557: 88 7a 10                 a3 = a0 <u 0x10
  4560: 85 aa 01                 a3 = a3 ^ 0x1
  4563: d4 a9 09                 a2 = a2 | a3
  4566: 89 7a                    a3 = a0 <s 0
  4568: e0 a9 09                 a2 = a2 & ~a3
  4571: 52 09 0a                 jump @294 if a2 != 0
      :                          @293
  4574: 33 07                    a0 = 0
  4576: 33 09 01                 a2 = 0x1
  4579: 28 4f                    jump @303
      :                          @294
  4581: 97 77 01                 a0 = a0 << 0x1
  4584: 01                       fallthrough
      :                          @295
  4585: 51 07 45                 jump @302 if a0 == 0
      :                          @296
  4588: 57 07 78                 jump @308 if a0 <s 0
      :                          @297
  4591: 64 52                    t0 = s0
  4593: 33 09 10 00 03           a2 = 0x30010
  4598: 95 99 00 f0 ff 00        a2 = a2 + 0xfff000
  4604: 33 0b ff ef ff 00        a4 = 0xffefff
  4610: 01                       fallthrough
      :                          @298
  4611: 82 9c                    a5 = u64 [a2]
  4613: c8 7c 0a                 a3 = a5 + a0
  4616: ac ca 5a                 jump @306 if a3 <u a5
      :                          @299
  4619: 95 a5 01                 s0 = a3 + 0x1
  4622: 88 56 01                 s1 = s0 <u 0x1
  4625: d8 5b 05                 s0 = a4 <u s0
  4628: d4 65 05                 s0 = s0 | s1
  4631: 52 05 4b                 jump @306 if s0 != 0
      :                          @300
  4634: 82 96                    s1 = u64 [a2]
  4636: ab c6 e7                 jump @298 if s1 != a5
      :                          @301
  4639: 7b 9a                    u64 [a2] = a3
  4641: 33 09 0f f0 02 01        a2 = 0x102f00f
  4647: c9 a9 09                 a2 = a2 - a3
  4650: 64 25                    s0 = t0
  4652: 28 06                    jump @303
      :                          @302
  4654: 33 09 01                 a2 = 0x1
  4657: 01                       fallthrough
      :                          @303
  4658: 7b 17                    u64 [sp] = a0
  4660: 7b 19 08                 u64 [sp + 0x8] = a2
  4663: 49 11 10                 u64 [sp + 16] = 0
  4666: 64 17                    a0 = sp
  4668: 50 10 42 90 06           ra = 66, jump @435
      :                          @304 [@dyn 33]
  4673: 52 07 22                 jump @307 if a0 != 0
      :                          @305
  4676: 82 17 10                 a0 = u64 [sp + 0x10]
  4679: 82 18 08                 a1 = u64 [sp + 0x8]
  4682: 82 19                    a2 = u64 [sp]
  4684: 7b 57 10                 u64 [s0 + 0x10] = a0
  4687: 7b 58 08                 u64 [s0 + 0x8] = a1
  4690: 7b 59                    u64 [s0] = a2
  4692: 82 10 30                 ra = u64 [sp + 0x30]
  4695: 82 15 28                 s0 = u64 [sp + 0x28]
  4698: 82 16 20                 s1 = u64 [sp + 0x20]
  4701: 95 11 38                 sp = sp + 0x38
  4704: 32 00                    ret
      :                          @306
  4706: 00                       trap
      :                          @307
  4707: 00                       trap
      :                          @308
  4708: 00                       trap
      :                          @309 [@dyn 34]
  4709: 82 72                    t0 = u64 [a0]
  4711: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
  4717: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
  4723: ac 9a 32                 jump @315 if a3 <u a2
      :                          @310
  4726: 82 73 08                 t1 = u64 [a0 + 0x8]
  4729: 33 04 10 00 03           t2 = 0x30010
  4734: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
  4740: 33 0b ff ef ff 00        a4 = 0xffefff
  4746: 01                       fallthrough
      :                          @311
  4747: 82 ac                    a5 = u64 [a3]
  4749: c8 b4 09                 a2 = t2 + a4
  4752: c9 c9 09                 a2 = a2 - a5
  4755: ab 39 12                 jump @315 if a2 != t1
      :                          @312
  4758: c9 2c 09                 a2 = a5 - t0
  4761: 01                       fallthrough
      :                          @313
  4762: 82 a7                    a0 = u64 [a3]
  4764: ab c7 ef                 jump @311 if a0 != a5
      :                          @314
  4767: 7b a9                    u64 [a3] = a2
  4769: 33 08                    a1 = 0
  4771: 32 00                    ret
      :                          @315
  4773: 32 00                    ret
      :                          @316 [@dyn 35]
  4775: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4778: 7b 10 18                 u64 [sp + 0x18] = ra
  4781: 7b 15 10                 u64 [sp + 0x10] = s0
  4784: 7b 16 08                 u64 [sp + 0x8] = s1
  4787: 64 75                    s0 = a0
  4789: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4792: 82 77                    a0 = u64 [a0]
  4794: c9 a7 07                 a0 = a0 - a3
  4797: 64 96                    s1 = a2
  4799: ac 97 2a                 jump @319 if a0 <u a2
      :                          @317
  4802: 7b 1a                    u64 [sp] = a3
  4804: 82 57 08                 a0 = u64 [s0 + 0x8]
  4807: c8 a7 07                 a0 = a0 + a3
  4810: 64 69                    a2 = s1
  4812: 50 10 48 41 01           ra = 72, jump @338
      :                          @318 [@dyn 36]
  4817: 82 17                    a0 = u64 [sp]
  4819: c8 76 06                 s1 = s1 + a0
  4822: 7b 56 10                 u64 [s0 + 0x10] = s1
  4825: 33 07                    a0 = 0
  4827: 82 10 18                 ra = u64 [sp + 0x18]
  4830: 82 15 10                 s0 = u64 [sp + 0x10]
  4833: 82 16 08                 s1 = u64 [sp + 0x8]
  4836: 95 11 20                 sp = sp + 0x20
  4839: 32 00                    ret
      :                          @319
  4841: 64 57                    a0 = s0
  4843: 7b 18                    u64 [sp] = a1
  4845: 64 a8                    a1 = a3
  4847: 64 69                    a2 = s1
  4849: 50 10 4a 4c fc           ra = 74, jump @232
      :                          @320 [@dyn 37]
  4854: 82 18                    a1 = u64 [sp]
  4856: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4859: 28 c7                    jump @317
      :                          @321 [@dyn 38]
  4861: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4864: 7b 10 20                 u64 [sp + 0x20] = ra
  4867: 7b 15 18                 u64 [sp + 0x18] = s0
  4870: 7b 16 10                 u64 [sp + 0x10] = s1
  4873: 64 86                    s1 = a1
  4875: 83 88                    i32 a1 = a1 + 0
  4877: 33 09 80 00              a2 = 0x80
  4881: 64 7a                    a3 = a0
  4883: ae 98 2b                 jump @326 if a1 >=u a2
      :                          @322
  4886: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4889: 82 a7                    a0 = u64 [a3]
  4891: ab 78 12                 jump @325 if a1 != a0
      :                          @323
  4894: 64 a7                    a0 = a3
  4896: 64 a5                    s0 = a3
  4898: 50 10 4e fe fd           ra = 78, jump @276
      :                          @324 [@dyn 39]
  4903: 64 5a                    a3 = s0
  4905: 82 58 10                 a1 = u64 [s0 + 0x10]
  4908: 01                       fallthrough
      :                          @325
  4909: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4912: c8 87 07                 a0 = a0 + a1
  4915: 78 76                    u8 [a0] = s1
  4917: 95 88 01                 a1 = a1 + 0x1
  4920: 7b a8 10                 u64 [a3 + 0x10] = a1
  4923: 28 ab 00                 jump @334
      :                          @326
  4926: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4929: 48 11 0c                 u32 [sp + 12] = 0
  4932: 52 07 1c                 jump @328 if a0 != 0
      :                          @327
  4935: 98 67 06                 a0 = s1 >> 0x6
  4938: 86 77 c0 00              a0 = a0 | 0xc0
  4942: 78 17 0c                 u8 [sp + 0xc] = a0
  4945: 84 67 3f                 a0 = s1 & 0x3f
  4948: 86 77 80 00              a0 = a0 | 0x80
  4952: 78 17 0d                 u8 [sp + 0xd] = a0
  4955: 33 06 02                 s1 = 0x2
  4958: 28 63                    jump @331
      :                          @328
  4960: 8b 67 10                 i32 a0 = s1 >> 0x10
  4963: 52 07 29                 jump @330 if a0 != 0
      :                          @329
  4966: 98 67 0c                 a0 = s1 >> 0xc
  4969: 86 77 e0 00              a0 = a0 | 0xe0
  4973: 78 17 0c                 u8 [sp + 0xc] = a0
  4976: 97 67 34                 a0 = s1 << 0x34
  4979: 98 77 3a                 a0 = a0 >> 0x3a
  4982: 95 77 80 00              a0 = a0 + 0x80
  4986: 78 17 0d                 u8 [sp + 0xd] = a0
  4989: 84 67 3f                 a0 = s1 & 0x3f
  4992: 86 77 80 00              a0 = a0 | 0x80
  4996: 78 17 0e                 u8 [sp + 0xe] = a0
  4999: 33 06 03                 s1 = 0x3
  5002: 28 37                    jump @331
      :                          @330
  5004: 97 67 2b                 a0 = s1 << 0x2b
  5007: 98 77 3d                 a0 = a0 >> 0x3d
  5010: 95 77 f0 00              a0 = a0 + 0xf0
  5014: 78 17 0c                 u8 [sp + 0xc] = a0
  5017: 97 67 2e                 a0 = s1 << 0x2e
  5020: 98 77 3a                 a0 = a0 >> 0x3a
  5023: 95 77 80 00              a0 = a0 + 0x80
  5027: 78 17 0d                 u8 [sp + 0xd] = a0
  5030: 97 67 34                 a0 = s1 << 0x34
  5033: 98 77 3a                 a0 = a0 >> 0x3a
  5036: 95 77 80 00              a0 = a0 + 0x80
  5040: 78 17 0e                 u8 [sp + 0xe] = a0
  5043: 84 67 3f                 a0 = s1 & 0x3f
  5046: 86 77 80 00              a0 = a0 | 0x80
  5050: 78 17 0f                 u8 [sp + 0xf] = a0
  5053: 33 06 04                 s1 = 0x4
  5056: 01                       fallthrough
      :                          @331
  5057: 82 a5 10                 s0 = u64 [a3 + 0x10]
  5060: 82 a7                    a0 = u64 [a3]
  5062: c9 57 07                 a0 = a0 - s0
  5065: ac 67 2d                 jump @335 if a0 <u s1
      :                          @332
  5068: 7b 1a                    u64 [sp] = a3
  5070: 82 a7 08                 a0 = u64 [a3 + 0x8]
  5073: c8 57 07                 a0 = a0 + s0
  5076: 95 18 0c                 a1 = sp + 0xc
  5079: 64 69                    a2 = s1
  5081: 50 10 50 34              ra = 80, jump @338
      :                          @333 [@dyn 40]
  5085: c8 56 06                 s1 = s1 + s0
  5088: 82 17                    a0 = u64 [sp]
  5090: 7b 76 10                 u64 [a0 + 0x10] = s1
  5093: 01                       fallthrough
      :                          @334
  5094: 33 07                    a0 = 0
  5096: 82 10 20                 ra = u64 [sp + 0x20]
  5099: 82 15 18                 s0 = u64 [sp + 0x18]
  5102: 82 16 10                 s1 = u64 [sp + 0x10]
  5105: 95 11 28                 sp = sp + 0x28
  5108: 32 00                    ret
      :                          @335
  5110: 64 a7                    a0 = a3
  5112: 64 58                    a1 = s0
  5114: 64 69                    a2 = s1
  5116: 64 a5                    s0 = a3
  5118: 50 10 52 3f fb           ra = 82, jump @232
      :                          @336 [@dyn 41]
  5123: 64 5a                    a3 = s0
  5125: 82 55 10                 s0 = u64 [s0 + 0x10]
  5128: 28 c4                    jump @332
      :                          @337 [@dyn 42]
  5130: 28 c2 04                 jump @435
      :                          @338
  5133: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  5136: 7b 10 18                 u64 [sp + 0x18] = ra
  5139: 7b 15 10                 u64 [sp + 0x10] = s0
  5142: 7b 16 08                 u64 [sp + 0x8] = s1
  5145: 53 19 10 64              jump @347 if a2 <u 16
      :                          @339
  5149: 8d 7a                    i32 a3 = -a0
  5151: 84 a2 07                 t0 = a3 & 0x7
  5154: c8 27 0b                 a4 = a0 + t0
  5157: 51 02 15                 jump @342 if t0 == 0
      :                          @340
  5160: 64 8c                    a5 = a1
  5162: 64 75                    s0 = a0
  5164: 01                       fallthrough
      :                          @341
  5165: 7c ca                    a3 = u8 [a5]
  5167: 78 5a                    u8 [s0] = a3
  5169: 95 55 01                 s0 = s0 + 0x1
  5172: 95 cc 01                 a5 = a5 + 0x1
  5175: ac b5 f6                 jump @341 if s0 <u a4
      :                          @342
  5178: c8 28 03                 t1 = a1 + t0
  5181: c9 29 02                 t0 = a2 - t0
  5184: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  5187: 84 38 07                 a1 = t1 & 0x7
  5190: c8 4b 0a                 a3 = a4 + t2
  5193: 51 08 3b                 jump @349 if a1 == 0
      :                          @343
  5196: 58 04 4b                 jump @352 if t2 <=s 0
      :                          @344
  5199: 97 38 03                 a1 = t1 << 0x3
  5202: 84 80 38                 ra = a1 & 0x38
  5205: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5208: 82 c5                    s0 = u64 [a5]
  5210: 8d 88                    i32 a1 = -a1
  5212: 84 88 38                 a1 = a1 & 0x38
  5215: 95 cc 08                 a5 = a5 + 0x8
  5218: 01                       fallthrough
      :                          @345
  5219: 82 c6                    s1 = u64 [a5]
  5221: d0 05 05                 s0 = s0 >> ra
  5224: cf 86 09                 a2 = s1 << a1
  5227: d4 59 09                 a2 = a2 | s0
  5230: 7b b9                    u64 [a4] = a2
  5232: 95 bb 08                 a4 = a4 + 0x8
  5235: 95 cc 08                 a5 = a5 + 0x8
  5238: 64 65                    s0 = s1
  5240: ac ab eb                 jump @345 if a4 <u a3
      :                          @346
  5243: 28 1c                    jump @352
      :                          @347
  5245: 64 7a                    a3 = a0
  5247: 52 09 21                 jump @353 if a2 != 0
      :                          @348
  5250: 28 2f                    jump @355
      :                          @349
  5252: 58 04 13                 jump @352 if t2 <=s 0
      :                          @350
  5255: 64 38                    a1 = t1
  5257: 01                       fallthrough
      :                          @351
  5258: 82 89                    a2 = u64 [a1]
  5260: 7b b9                    u64 [a4] = a2
  5262: 95 bb 08                 a4 = a4 + 0x8
  5265: 95 88 08                 a1 = a1 + 0x8
  5268: ac ab f6                 jump @351 if a4 <u a3
      :                          @352
  5271: c8 43 08                 a1 = t1 + t2
  5274: 84 29 07                 a2 = t0 & 0x7
  5277: 51 09 14                 jump @355 if a2 == 0
      :                          @353
  5280: c8 a9 09                 a2 = a2 + a3
  5283: 01                       fallthrough
      :                          @354
  5284: 7c 8b                    a4 = u8 [a1]
  5286: 78 ab                    u8 [a3] = a4
  5288: 95 aa 01                 a3 = a3 + 0x1
  5291: 95 88 01                 a1 = a1 + 0x1
  5294: ac 9a f6                 jump @354 if a3 <u a2
      :                          @355
  5297: 82 10 18                 ra = u64 [sp + 0x18]
  5300: 82 15 10                 s0 = u64 [sp + 0x10]
  5303: 82 16 08                 s1 = u64 [sp + 0x8]
  5306: 95 11 20                 sp = sp + 0x20
  5309: 32 00                    ret
      :                          @356
  5311: 53 19 10 48              jump @365 if a2 <u 16
      :                          @357
  5315: 8d 7a                    i32 a3 = -a0
  5317: 84 aa 07                 a3 = a3 & 0x7
  5320: c8 a7 0b                 a4 = a0 + a3
  5323: 51 0a 0e                 jump @360 if a3 == 0
      :                          @358
  5326: 64 7c                    a5 = a0
  5328: 01                       fallthrough
      :                          @359
  5329: 78 c8                    u8 [a5] = a1
  5331: 95 cc 01                 a5 = a5 + 0x1
  5334: ac bc fb                 jump @359 if a5 <u a4
      :                          @360
  5337: c9 a9 03                 t1 = a2 - a3
  5340: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  5343: c8 cb 0a                 a3 = a4 + a5
  5346: 58 0c 1d                 jump @363 if a5 <=s 0
      :                          @361
  5349: 84 82 ff 00              t0 = a1 & 0xff
  5353: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  5363: ca 92 0c                 a5 = t0 * a2
  5366: 01                       fallthrough
      :                          @362
  5367: 7b bc                    u64 [a4] = a5
  5369: 95 bb 08                 a4 = a4 + 0x8
  5372: ac ab fb                 jump @362 if a4 <u a3
      :                          @363
  5375: 84 39 07                 a2 = t1 & 0x7
  5378: 52 09 0a                 jump @366 if a2 != 0
      :                          @364
  5381: 28 13                    jump @368
      :                          @365
  5383: 64 7a                    a3 = a0
  5385: 51 09 0f                 jump @368 if a2 == 0
      :                          @366
  5388: c8 a9 09                 a2 = a2 + a3
  5391: 01                       fallthrough
      :                          @367
  5392: 78 a8                    u8 [a3] = a1
  5394: 95 aa 01                 a3 = a3 + 0x1
  5397: ac 9a fb                 jump @367 if a3 <u a2
      :                          @368
  5400: 32 00                    ret
      :                          @369 [@dyn 43]
  5402: 82 77                    a0 = u64 [a0]
  5404: 01                       fallthrough
      :                          @370
  5405: 28                       jump @370
      :                          @371
  5406: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  5409: 7b 10 58                 u64 [sp + 0x58] = ra
  5412: 7b 15 50                 u64 [sp + 0x50] = s0
  5415: 7b 16 48                 u64 [sp + 0x48] = s1
  5418: 7b 19 08                 u64 [sp + 0x8] = a2
  5421: 7b 18                    u64 [sp] = a1
  5423: 98 7a 04                 a3 = a0 >> 0x4
  5426: 33 09 27                 a2 = 0x27
  5429: 53 2a 71 02 81 00        jump @374 if a3 <u 625
      :                          @372
  5435: 33 09 27                 a2 = 0x27
  5438: 95 1b 46                 a4 = sp + 0x46
  5441: 3a 08 00 00 03           a1 = u64 [0x30000]
  5446: 7b 18 18                 u64 [sp + 0x18] = a1
  5449: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  5455: 33 03 7b 14              t1 = 0x147b
  5459: 33 05 72 01 01           s0 = 0x10172
  5464: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  5470: 01                       fallthrough
      :                          @373
  5471: 64 74                    t2 = a0
  5473: 82 17 18                 a0 = u64 [sp + 0x18]
  5476: d6 74 07                 a0 = t2 mulhu a0
  5479: 98 77 0b                 a0 = a0 >> 0xb
  5482: 82 18 10                 a1 = u64 [sp + 0x10]
  5485: c0 87 02                 i32 t0 = a0 * a1
  5488: c8 42 0a                 a3 = t0 + t2
  5491: 97 a2 30                 t0 = a3 << 0x30
  5494: 98 28 32                 a1 = t0 >> 0x32
  5497: ca 38 08                 a1 = a1 * t1
  5500: 98 8c 11                 a5 = a1 >> 0x11
  5503: 98 88 10                 a1 = a1 >> 0x10
  5506: 84 88 fe 07              a1 = a1 & 0x7fe
  5510: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  5513: c8 ca 0a                 a3 = a3 + a5
  5516: 97 aa 31                 a3 = a3 << 0x31
  5519: 98 aa 30                 a3 = a3 >> 0x30
  5522: c8 58 08                 a1 = a1 + s0
  5525: 7c 8c                    a5 = u8 [a1]
  5527: 7c 88 01                 a1 = u8 [a1 + 0x1]
  5530: c8 5a 0a                 a3 = a3 + s0
  5533: 7c a6 01                 s1 = u8 [a3 + 0x1]
  5536: 7c aa                    a3 = u8 [a3]
  5538: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  5541: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  5544: 78 b6 01                 u8 [a4 + 0x1] = s1
  5547: 78 ba                    u8 [a4] = a3
  5549: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  5552: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  5555: ac 40 ac                 jump @373 if ra <u t2
      :                          @374
  5558: 54 17 63 3b              jump @376 if a0 <=u 99
      :                          @375
  5562: 97 78 30                 a1 = a0 << 0x30
  5565: 98 88 32                 a1 = a1 >> 0x32
  5568: 96 88 7b 14              a1 = a1 * 0x147b
  5572: 98 88 11                 a1 = a1 >> 0x11
  5575: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  5578: c8 a7 07                 a0 = a0 + a3
  5581: 97 77 31                 a0 = a0 << 0x31
  5584: 98 77 30                 a0 = a0 >> 0x30
  5587: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5590: 33 0a 72 01 01           a3 = 0x10172
  5595: c8 a7 07                 a0 = a0 + a3
  5598: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  5601: 7c 77                    a0 = u8 [a0]
  5603: 95 1b 21                 a4 = sp + 0x21
  5606: c8 9b 0b                 a4 = a4 + a2
  5609: 78 ba 01                 u8 [a4 + 0x1] = a3
  5612: 78 b7                    u8 [a4] = a0
  5614: 64 87                    a0 = a1
  5616: 01                       fallthrough
      :                          @376
  5617: 55 17 0a 14              jump @378 if a0 >=u 10
      :                          @377
  5621: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5624: 95 18 21                 a1 = sp + 0x21
  5627: c8 98 08                 a1 = a1 + a2
  5630: 83 77 30                 i32 a0 = a0 + 0x30
  5633: 78 87                    u8 [a1] = a0
  5635: 28 21                    jump @379
      :                          @378
  5637: 97 77 01                 a0 = a0 << 0x1
  5640: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  5643: 33 08 72 01 01           a1 = 0x10172
  5648: c8 87 07                 a0 = a0 + a1
  5651: 7c 78 01                 a1 = u8 [a0 + 0x1]
  5654: 7c 77                    a0 = u8 [a0]
  5656: 95 1a 21                 a3 = sp + 0x21
  5659: c8 9a 0a                 a3 = a3 + a2
  5662: 78 a8 01                 u8 [a3 + 0x1] = a1
  5665: 78 a7                    u8 [a3] = a0
  5667: 01                       fallthrough
      :                          @379
  5668: 95 1b 21                 a4 = sp + 0x21
  5671: c8 9b 0b                 a4 = a4 + a2
  5674: 9a 9c 27                 a5 = 0x27 - a2
  5677: 33 09 70 01 01           a2 = 0x10170
  5682: 82 17 08                 a0 = u64 [sp + 0x8]
  5685: 82 18                    a1 = u64 [sp]
  5687: 33 0a                    a3 = 0
  5689: 50 10 58 12              ra = 88, jump @381
      :                          @380 [@dyn 44]
  5693: 82 10 58                 ra = u64 [sp + 0x58]
  5696: 82 15 50                 s0 = u64 [sp + 0x50]
  5699: 82 16 48                 s1 = u64 [sp + 0x48]
  5702: 95 11 60                 sp = sp + 0x60
  5705: 32 00                    ret
      :                          @381
  5707: 95 11 98                 sp = sp + 0xffffffffffffff98
  5710: 7b 10 60                 u64 [sp + 0x60] = ra
  5713: 7b 15 58                 u64 [sp + 0x58] = s0
  5716: 7b 16 50                 u64 [sp + 0x50] = s1
  5719: 7b 1b 18                 u64 [sp + 0x18] = a4
  5722: 51 08 4f                 jump @388 if a1 == 0
      :                          @382
  5725: 80 76 34                 s1 = u32 [a0 + 0x34]
  5728: 84 68 01                 a1 = s1 & 0x1
  5731: 33 0b 2b                 a4 = 0x2b
  5734: 33 05 00 00 11           s0 = 0x110000
  5739: db 8b 05                 s0 = a4 if a1 != 0
  5742: 7b 15 28                 u64 [sp + 0x28] = s0
  5745: c8 c8 02                 t0 = a1 + a5
  5748: 84 68 04                 a1 = s1 & 0x4
  5751: 51 08 42                 jump @389 if a1 == 0
      :                          @383
  5754: 7b 19 30                 u64 [sp + 0x30] = a2
  5757: 33 08                    a1 = 0
  5759: 51 0a 1a                 jump @386 if a3 == 0
      :                          @384
  5762: 64 a5                    s0 = a3
  5764: 01                       fallthrough
      :                          @385
  5765: 7d 9b                    a4 = i8 [a2]
  5767: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  5770: 85 bb 01                 a4 = a4 ^ 0x1
  5773: c8 b8 08                 a1 = a1 + a4
  5776: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5779: 95 99 01                 a2 = a2 + 0x1
  5782: 52 05 ef                 jump @385 if s0 != 0
      :                          @386
  5785: c8 82 02                 t0 = t0 + a1
  5788: 7b 1a 38                 u64 [sp + 0x38] = a3
  5791: 82 78                    a1 = u64 [a0]
  5793: 7b 1c 20                 u64 [sp + 0x20] = a5
  5796: 52 08 23                 jump @390 if a1 != 0
      :                          @387
  5799: 28 41                    jump @395
      :                          @388
  5801: 81 76 34                 s1 = i32 [a0 + 0x34]
  5804: 95 c2 01                 t0 = a5 + 0x1
  5807: 49 11 28 2d              u64 [sp + 40] = 0x2d
  5811: 84 68 04                 a1 = s1 & 0x4
  5814: 52 08 c4                 jump @383 if a1 != 0
      :                          @389
  5817: 49 11 30                 u64 [sp + 48] = 0
  5820: 7b 1a 38                 u64 [sp + 0x38] = a3
  5823: 82 78                    a1 = u64 [a0]
  5825: 7b 1c 20                 u64 [sp + 0x20] = a5
  5828: 51 08 24                 jump @395 if a1 == 0
      :                          @390
  5831: 82 75 08                 s0 = u64 [a0 + 0x8]
  5834: ae 52 1e                 jump @395 if t0 >=u s0
      :                          @391
  5837: 84 66 08                 s1 = s1 & 0x8
  5840: 52 06 50                 jump @398 if s1 != 0
      :                          @392
  5843: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5846: c9 25 0a                 a3 = s0 - t0
  5849: 5a 19 01 a1 00           jump @405 if a2 >s 1
      :                          @393
  5854: 52 09 ae 00              jump @407 if a2 != 0
      :                          @394
  5858: 7b 1a 10                 u64 [sp + 0x10] = a3
  5861: 28 ad 00                 jump @408
      :                          @395
  5864: 82 75 20                 s0 = u64 [a0 + 0x20]
  5867: 82 76 28                 s1 = u64 [a0 + 0x28]
  5870: 64 57                    a0 = s0
  5872: 64 68                    a1 = s1
  5874: 82 19 28                 a2 = u64 [sp + 0x28]
  5877: 82 1a 30                 a3 = u64 [sp + 0x30]
  5880: 82 1b 38                 a4 = u64 [sp + 0x38]
  5883: 50 10 5a 6d 01           ra = 90, jump @428
      :                          @396 [@dyn 45]
  5888: 33 08 01                 a1 = 0x1
  5891: 52 07 bc 00              jump @413 if a0 != 0
      :                          @397
  5895: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5898: 64 57                    a0 = s0
  5900: 82 18 18                 a1 = u64 [sp + 0x18]
  5903: 82 19 20                 a2 = u64 [sp + 0x20]
  5906: 82 10 60                 ra = u64 [sp + 0x60]
  5909: 82 15 58                 s0 = u64 [sp + 0x58]
  5912: 82 16 50                 s1 = u64 [sp + 0x50]
  5915: 95 11 68                 sp = sp + 0x68
  5918: 32 0c                    jump [a5]
      :                          @398
  5920: 7b 12 40                 u64 [sp + 0x40] = t0
  5923: 81 78 30                 a1 = i32 [a0 + 0x30]
  5926: 7b 18 08                 u64 [sp + 0x8] = a1
  5929: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5932: 7b 19                    u64 [sp] = a2
  5934: 82 79 20                 a2 = u64 [a0 + 0x20]
  5937: 82 76 28                 s1 = u64 [a0 + 0x28]
  5940: 48 17 30 30              u32 [a0 + 48] = 0x30
  5944: 7b 17 10                 u64 [sp + 0x10] = a0
  5947: 46 17 38 01              u8 [a0 + 56] = 0x1
  5951: 7b 19 48                 u64 [sp + 0x48] = a2
  5954: 64 97                    a0 = a2
  5956: 64 68                    a1 = s1
  5958: 82 19 28                 a2 = u64 [sp + 0x28]
  5961: 82 1a 30                 a3 = u64 [sp + 0x30]
  5964: 82 1b 38                 a4 = u64 [sp + 0x38]
  5967: 50 10 5c 19 01           ra = 92, jump @428
      :                          @399 [@dyn 46]
  5972: 52 07 67                 jump @412 if a0 != 0
      :                          @400
  5975: 82 17 40                 a0 = u64 [sp + 0x40]
  5978: c9 75 05                 s0 = s0 - a0
  5981: 95 55 01                 s0 = s0 + 0x1
  5984: 01                       fallthrough
      :                          @401
  5985: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5988: 51 05 c6 00              jump @423 if s0 == 0
      :                          @402
  5992: 82 69 20                 a2 = u64 [s1 + 0x20]
  5995: 33 08 30                 a1 = 0x30
  5998: 82 17 48                 a0 = u64 [sp + 0x48]
  6001: b4 90 01 5e              ra = 94, jump [a2]
      :                          @403 [@dyn 47]
  6005: 51 07 ec                 jump @401 if a0 == 0
      :                          @404
  6008: 28 43                    jump @412
      :                          @405
  6010: 52 19 02 12              jump @407 if a2 != 2
      :                          @406
  6014: 98 a9 01                 a2 = a3 >> 0x1
  6017: 95 a8 01                 a1 = a3 + 0x1
  6020: 98 88 01                 a1 = a1 >> 0x1
  6023: 7b 18 10                 u64 [sp + 0x10] = a1
  6026: 28 08                    jump @408
      :                          @407
  6028: 64 a9                    a2 = a3
  6030: 49 11 10                 u64 [sp + 16] = 0
  6033: 01                       fallthrough
      :                          @408
  6034: 82 78 20                 a1 = u64 [a0 + 0x20]
  6037: 7b 18 48                 u64 [sp + 0x48] = a1
  6040: 82 76 28                 s1 = u64 [a0 + 0x28]
  6043: 81 77 30                 a0 = i32 [a0 + 0x30]
  6046: 7b 17 40                 u64 [sp + 0x40] = a0
  6049: 95 95 01                 s0 = a2 + 0x1
  6052: 01                       fallthrough
      :                          @409
  6053: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  6056: 51 05 27                 jump @414 if s0 == 0
      :                          @410
  6059: 82 69 20                 a2 = u64 [s1 + 0x20]
  6062: 82 17 48                 a0 = u64 [sp + 0x48]
  6065: 82 18 40                 a1 = u64 [sp + 0x40]
  6068: b4 90 01 60              ra = 96, jump [a2]
      :                          @411 [@dyn 48]
  6072: 51 07 ed                 jump @409 if a0 == 0
      :                          @412
  6075: 33 08 01                 a1 = 0x1
  6078: 01                       fallthrough
      :                          @413
  6079: 64 87                    a0 = a1
  6081: 82 10 60                 ra = u64 [sp + 0x60]
  6084: 82 15 58                 s0 = u64 [sp + 0x58]
  6087: 82 16 50                 s1 = u64 [sp + 0x50]
  6090: 95 11 68                 sp = sp + 0x68
  6093: 32 00                    ret
      :                          @414
  6095: 82 15 48                 s0 = u64 [sp + 0x48]
  6098: 64 57                    a0 = s0
  6100: 64 68                    a1 = s1
  6102: 82 19 28                 a2 = u64 [sp + 0x28]
  6105: 82 1a 30                 a3 = u64 [sp + 0x30]
  6108: 82 1b 38                 a4 = u64 [sp + 0x38]
  6111: 50 10 62 89 00           ra = 98, jump @428
      :                          @415 [@dyn 49]
  6116: 33 08 01                 a1 = 0x1
  6119: 52 07 d8                 jump @413 if a0 != 0
      :                          @416
  6122: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6125: 64 57                    a0 = s0
  6127: 82 18 18                 a1 = u64 [sp + 0x18]
  6130: 82 19 20                 a2 = u64 [sp + 0x20]
  6133: b4 a0 01 64              ra = 100, jump [a3]
      :                          @417 [@dyn 50]
  6137: 33 08 01                 a1 = 0x1
  6140: 52 07 c3                 jump @413 if a0 != 0
      :                          @418
  6143: 82 17 10                 a0 = u64 [sp + 0x10]
  6146: 9a 77                    a0 = -a0
  6148: 7b 17 38                 u64 [sp + 0x38] = a0
  6151: 33 05 ff                 s0 = 0xffffffffffffffff
  6154: 01                       fallthrough
      :                          @419
  6155: 82 17 38                 a0 = u64 [sp + 0x38]
  6158: c8 57 07                 a0 = a0 + s0
  6161: 51 17 ff 42              jump @426 if a0 == 4294967295
      :                          @420
  6165: 82 69 20                 a2 = u64 [s1 + 0x20]
  6168: 82 17 48                 a0 = u64 [sp + 0x48]
  6171: 82 18 40                 a1 = u64 [sp + 0x40]
  6174: b4 90 01 66              ra = 102, jump [a2]
      :                          @421 [@dyn 51]
  6178: 95 55 01                 s0 = s0 + 0x1
  6181: 51 07 e6                 jump @419 if a0 == 0
      :                          @422
  6184: 28 37                    jump @427
      :                          @423
  6186: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6189: 82 17 48                 a0 = u64 [sp + 0x48]
  6192: 82 18 18                 a1 = u64 [sp + 0x18]
  6195: 82 19 20                 a2 = u64 [sp + 0x20]
  6198: b4 a0 01 68              ra = 104, jump [a3]
      :                          @424 [@dyn 52]
  6202: 33 08 01                 a1 = 0x1
  6205: 52 07 82                 jump @413 if a0 != 0
      :                          @425
  6208: 33 08                    a1 = 0
  6210: 82 17 10                 a0 = u64 [sp + 0x10]
  6213: 82 19 08                 a2 = u64 [sp + 0x8]
  6216: 7a 79 30                 u32 [a0 + 0x30] = a2
  6219: 82 19                    a2 = u64 [sp]
  6221: 78 79 38                 u8 [a0 + 0x38] = a2
  6224: 28 6f ff                 jump @413
      :                          @426
  6227: 82 15 10                 s0 = u64 [sp + 0x10]
  6230: 82 17 10                 a0 = u64 [sp + 0x10]
  6233: d8 75 08                 a1 = s0 <u a0
  6236: 28 63 ff                 jump @413
      :                          @427
  6239: 82 17 10                 a0 = u64 [sp + 0x10]
  6242: d8 75 08                 a1 = s0 <u a0
  6245: 28 5a ff                 jump @413
      :                          @428
  6248: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6251: 7b 10 20                 u64 [sp + 0x20] = ra
  6254: 7b 15 18                 u64 [sp + 0x18] = s0
  6257: 7b 16 10                 u64 [sp + 0x10] = s1
  6260: 83 9c                    i32 a5 = a2 + 0
  6262: 33 02 00 00 11           t0 = 0x110000
  6267: 64 a6                    s1 = a3
  6269: 64 85                    s0 = a1
  6271: 64 7a                    a3 = a0
  6273: aa 2c 20                 jump @431 if a5 == t0
      :                          @429
  6276: 82 5c 20                 a5 = u64 [s0 + 0x20]
  6279: 64 a7                    a0 = a3
  6281: 64 98                    a1 = a2
  6283: 7b 1b 08                 u64 [sp + 0x8] = a4
  6286: 7b 1a                    u64 [sp] = a3
  6288: b4 c0 01 6a              ra = 106, jump [a5]
      :                          @430 [@dyn 53]
  6292: 82 1a                    a3 = u64 [sp]
  6294: 82 1b 08                 a4 = u64 [sp + 0x8]
  6297: 64 78                    a1 = a0
  6299: 33 07 01                 a0 = 0x1
  6302: 52 08 20                 jump @434 if a1 != 0
      :                          @431
  6305: 51 06 1a                 jump @433 if s1 == 0
      :                          @432
  6308: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6311: 64 a7                    a0 = a3
  6313: 64 68                    a1 = s1
  6315: 64 b9                    a2 = a4
  6317: 82 10 20                 ra = u64 [sp + 0x20]
  6320: 82 15 18                 s0 = u64 [sp + 0x18]
  6323: 82 16 10                 s1 = u64 [sp + 0x10]
  6326: 95 11 28                 sp = sp + 0x28
  6329: 32 0c                    jump [a5]
      :                          @433
  6331: 33 07                    a0 = 0
  6333: 01                       fallthrough
      :                          @434
  6334: 82 10 20                 ra = u64 [sp + 0x20]
  6337: 82 15 18                 s0 = u64 [sp + 0x18]
  6340: 82 16 10                 s1 = u64 [sp + 0x10]
  6343: 95 11 28                 sp = sp + 0x28
  6346: 32 00                    ret
      :                          @435
  6348: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6352: 7b 10 80 00              u64 [sp + 0x80] = ra
  6356: 7b 15 78                 u64 [sp + 0x78] = s0
  6359: 7b 16 70                 u64 [sp + 0x70] = s1
  6362: 49 11 60 20              u64 [sp + 96] = 0x20
  6366: 33 09 03                 a2 = 0x3
  6369: 78 19 68                 u8 [sp + 0x68] = a2
  6372: 49 11 30                 u64 [sp + 48] = 0
  6375: 49 11 40                 u64 [sp + 64] = 0
  6378: 82 86 20                 s1 = u64 [a1 + 0x20]
  6381: 7b 17 50                 u64 [sp + 0x50] = a0
  6384: 33 07 40 01 01           a0 = 0x10140
  6389: 7b 17 58                 u64 [sp + 0x58] = a0
  6392: 51 06 06 01              jump @457 if s1 == 0
      :                          @436
  6396: 82 87 28                 a0 = u64 [a1 + 0x28]
  6399: 51 07 73 01              jump @467 if a0 == 0
      :                          @437
  6403: 33 09                    a2 = 0
  6405: 82 85                    s0 = u64 [a1]
  6407: 7b 18 08                 u64 [sp + 0x8] = a1
  6410: 82 88 10                 a1 = u64 [a1 + 0x10]
  6413: 7b 18 18                 u64 [sp + 0x18] = a1
  6416: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  6419: 97 88 03                 a1 = a1 << 0x3
  6422: 98 88 03                 a1 = a1 >> 0x3
  6425: 95 88 01                 a1 = a1 + 0x1
  6428: 7b 18                    u64 [sp] = a1
  6430: 95 55 08                 s0 = s0 + 0x8
  6433: 96 78 38                 a1 = a0 * 0x38
  6436: 95 66 18                 s1 = s1 + 0x18
  6439: 33 07 56                 a0 = 0x56
  6442: 7b 17 10                 u64 [sp + 0x10] = a0
  6445: 01                       fallthrough
      :                          @438
  6446: 7b 18 20                 u64 [sp + 0x20] = a1
  6449: 7b 19 28                 u64 [sp + 0x28] = a2
  6452: 82 59                    a2 = u64 [s0]
  6454: 51 09 17                 jump @441 if a2 == 0
      :                          @439
  6457: 82 1a 58                 a3 = u64 [sp + 0x58]
  6460: 82 17 50                 a0 = u64 [sp + 0x50]
  6463: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  6466: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6469: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @440 [@dyn 54]
  6473: 52 07 4e 01              jump @470 if a0 != 0
      :                          @441
  6477: 81 67 10                 a0 = i32 [s1 + 0x10]
  6480: 7a 17 60                 u32 [sp + 0x60] = a0
  6483: 7c 67 18                 a0 = u8 [s1 + 0x18]
  6486: 78 17 68                 u8 [sp + 0x68] = a0
  6489: 81 67 14                 a0 = i32 [s1 + 0x14]
  6492: 7a 17 64                 u32 [sp + 0x64] = a0
  6495: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6498: 82 67                    a0 = u64 [s1]
  6500: 51 08 26                 jump @446 if a1 == 0
      :                          @442
  6503: 52 18 01 16              jump @444 if a1 != 1
      :                          @443
  6507: 97 77 04                 a0 = a0 << 0x4
  6510: 82 18 18                 a1 = u64 [sp + 0x18]
  6513: c8 87 07                 a0 = a0 + a1
  6516: 82 78 08                 a1 = u64 [a0 + 0x8]
  6519: 82 19 10                 a2 = u64 [sp + 0x10]
  6522: aa 98 07                 jump @445 if a1 == a2
      :                          @444
  6525: 33 08                    a1 = 0
  6527: 28 0f                    jump @447
      :                          @445
  6529: 82 77                    a0 = u64 [a0]
  6531: 82 77                    a0 = u64 [a0]
  6533: 33 08 01                 a1 = 0x1
  6536: 28 06                    jump @447
      :                          @446
  6538: 33 08 01                 a1 = 0x1
  6541: 01                       fallthrough
      :                          @447
  6542: 7b 18 30                 u64 [sp + 0x30] = a1
  6545: 7b 17 38                 u64 [sp + 0x38] = a0
  6548: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  6551: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  6554: 51 08 26                 jump @452 if a1 == 0
      :                          @448
  6557: 52 18 01 16              jump @450 if a1 != 1
      :                          @449
  6561: 97 77 04                 a0 = a0 << 0x4
  6564: 82 18 18                 a1 = u64 [sp + 0x18]
  6567: c8 87 07                 a0 = a0 + a1
  6570: 82 78 08                 a1 = u64 [a0 + 0x8]
  6573: 82 19 10                 a2 = u64 [sp + 0x10]
  6576: aa 98 07                 jump @451 if a1 == a2
      :                          @450
  6579: 33 08                    a1 = 0
  6581: 28 0f                    jump @453
      :                          @451
  6583: 82 77                    a0 = u64 [a0]
  6585: 82 77                    a0 = u64 [a0]
  6587: 33 08 01                 a1 = 0x1
  6590: 28 06                    jump @453
      :                          @452
  6592: 33 08 01                 a1 = 0x1
  6595: 01                       fallthrough
      :                          @453
  6596: 7b 18 40                 u64 [sp + 0x40] = a1
  6599: 7b 17 48                 u64 [sp + 0x48] = a0
  6602: 82 67 08                 a0 = u64 [s1 + 0x8]
  6605: 97 77 04                 a0 = a0 << 0x4
  6608: 82 18 18                 a1 = u64 [sp + 0x18]
  6611: c8 78 08                 a1 = a1 + a0
  6614: 82 87                    a0 = u64 [a1]
  6616: 82 89 08                 a2 = u64 [a1 + 0x8]
  6619: 95 18 30                 a1 = sp + 0x30
  6622: b4 90 01 6e              ra = 110, jump [a2]
      :                          @454 [@dyn 55]
  6626: 52 07 b5 00              jump @470 if a0 != 0
      :                          @455
  6630: 95 55 10                 s0 = s0 + 0x10
  6633: 82 18 20                 a1 = u64 [sp + 0x20]
  6636: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  6639: 95 66 38                 s1 = s1 + 0x38
  6642: 82 19 28                 a2 = u64 [sp + 0x28]
  6645: 95 99 01                 a2 = a2 + 0x1
  6648: 52 08 36 ff              jump @438 if a1 != 0
      :                          @456
  6652: 28 69                    jump @465
      :                          @457
  6654: 82 87 18                 a0 = u64 [a1 + 0x18]
  6657: 51 07 71                 jump @467 if a0 == 0
      :                          @458
  6660: 82 85 10                 s0 = u64 [a1 + 0x10]
  6663: 33 0a                    a3 = 0
  6665: 97 79 04                 a2 = a0 << 0x4
  6668: c8 59 09                 a2 = a2 + s0
  6671: 7b 19 20                 u64 [sp + 0x20] = a2
  6674: 7b 18 08                 u64 [sp + 0x8] = a1
  6677: 82 86                    s1 = u64 [a1]
  6679: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6682: 97 77 04                 a0 = a0 << 0x4
  6685: 98 77 04                 a0 = a0 >> 0x4
  6688: 95 77 01                 a0 = a0 + 0x1
  6691: 7b 17                    u64 [sp] = a0
  6693: 95 66 08                 s1 = s1 + 0x8
  6696: 01                       fallthrough
      :                          @459
  6697: 7b 1a 28                 u64 [sp + 0x28] = a3
  6700: 82 69                    a2 = u64 [s1]
  6702: 51 09 16                 jump @462 if a2 == 0
      :                          @460
  6705: 82 1a 58                 a3 = u64 [sp + 0x58]
  6708: 82 17 50                 a0 = u64 [sp + 0x50]
  6711: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6714: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6717: b4 a0 01 70              ra = 112, jump [a3]
      :                          @461 [@dyn 56]
  6721: 52 07 56                 jump @470 if a0 != 0
      :                          @462
  6724: 82 57                    a0 = u64 [s0]
  6726: 82 59 08                 a2 = u64 [s0 + 0x8]
  6729: 95 18 30                 a1 = sp + 0x30
  6732: b4 90 01 72              ra = 114, jump [a2]
      :                          @463 [@dyn 57]
  6736: 52 07 47                 jump @470 if a0 != 0
      :                          @464
  6739: 95 66 10                 s1 = s1 + 0x10
  6742: 95 55 10                 s0 = s0 + 0x10
  6745: 82 1a 28                 a3 = u64 [sp + 0x28]
  6748: 95 aa 01                 a3 = a3 + 0x1
  6751: 82 17 20                 a0 = u64 [sp + 0x20]
  6754: ab 75 c7                 jump @459 if s0 != a0
      :                          @465
  6757: 82 18 08                 a1 = u64 [sp + 0x8]
  6760: 82 1a                    a3 = u64 [sp]
  6762: 82 87 08                 a0 = u64 [a1 + 0x8]
  6765: ac 7a 0d                 jump @468 if a3 <u a0
      :                          @466
  6768: 28 2c                    jump @471
      :                          @467
  6770: 33 0a                    a3 = 0
  6772: 82 87 08                 a0 = u64 [a1 + 0x8]
  6775: 54 07 25                 jump @471 if a0 <=u 0
      :                          @468
  6778: 82 87                    a0 = u64 [a1]
  6780: 97 a8 04                 a1 = a3 << 0x4
  6783: c8 87 09                 a2 = a0 + a1
  6786: 82 1a 58                 a3 = u64 [sp + 0x58]
  6789: 82 17 50                 a0 = u64 [sp + 0x50]
  6792: 82 98                    a1 = u64 [a2]
  6794: 82 99 08                 a2 = u64 [a2 + 0x8]
  6797: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6800: b4 a0 01 74              ra = 116, jump [a3]
      :                          @469 [@dyn 58]
  6804: 51 07 08                 jump @471 if a0 == 0
      :                          @470
  6807: 33 07 01                 a0 = 0x1
  6810: 28 05                    jump @472
      :                          @471
  6812: 33 07                    a0 = 0
  6814: 01                       fallthrough
      :                          @472
  6815: 82 10 80 00              ra = u64 [sp + 0x80]
  6819: 82 15 78                 s0 = u64 [sp + 0x78]
  6822: 82 16 70                 s1 = u64 [sp + 0x70]
  6825: 95 11 88 00              sp = sp + 0x88
  6829: 32 00                    ret
      :                          @473 [@dyn 59]
  6831: 81 77                    a0 = i32 [a0]
  6833: 89 7a                    a3 = a0 <s 0
  6835: 85 a9 01                 a2 = a3 ^ 0x1
  6838: 97 7b 20                 a4 = a0 << 0x20
  6841: 98 bb 20                 a4 = a4 >> 0x20
  6844: 9a 77                    a0 = -a0
  6846: da ab 07                 a0 = a4 if a3 == 0
  6849: 64 8a                    a3 = a1
  6851: 64 98                    a1 = a2
  6853: 64 a9                    a2 = a3
  6855: 28 57 fa                 jump @371
