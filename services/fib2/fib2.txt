// RO data = 36/36 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [6, 0, 255, 255, 8, 0, 255, 255, 10, 0, 255, 255, 12, 0, 255, 255, 14, 0, 255, 255, 16, 0, 255, 255, 22, 0, 255, 255, 24, 0, 255, 255, 26, 0, 255, 255]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 1076
// Code size = 3428 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 96 00 00 00           jump @13
      :                          @2
    10: 28 ad 0b                 jump @122
      :                          @3 [export #0: 'refine']
    13: 95 11 d8                 sp = sp + 0xffffffffffffffd8
    16: 7b 10 20                 u64 [sp + 0x20] = ra
    19: 7b 15 18                 u64 [sp + 0x18] = s0
    22: 7b 16 10                 u64 [sp + 0x10] = s1
    25: 49 11 08                 u64 [sp + 8] = 0
    28: 49 01                    u64 [sp + 0] = 0
    30: 64 17                    a0 = sp
    32: 33 09 10                 a2 = 0x10
    35: 33 0a 05                 a3 = 0x5
    38: 33 08                    a1 = 0
    40: 33 0b                    a4 = 0
    42: 33 0c                    a5 = 0
    44: 0a 12                    ecalli 18 // 'fetch'
    46: 01                       fallthrough
      :                          @4
    47: 51 17 ff 42              jump @11 if a0 == 4294967295
      :                          @5
    51: 81 17 04                 a0 = i32 [sp + 0x4]
    54: 81 18 08                 a1 = i32 [sp + 0x8]
    57: 81 15                    s0 = i32 [sp]
    59: be 78 08                 i32 a1 = a1 + a0
    62: 83 59 01                 i32 a2 = s0 + 0x1
    65: 7a 19                    u32 [sp] = a2
    67: 7a 18 04                 u32 [sp + 0x4] = a1
    70: 7a 17 08                 u32 [sp + 0x8] = a0
    73: 64 17                    a0 = sp
    75: 33 08 10                 a1 = 0x10
    78: 0a 13                    ecalli 19 // 'export'
    80: 01                       fallthrough
      :                          @6
    81: 51 05 37                 jump @12 if s0 == 0
      :                          @7
    84: 8d 55                    i32 s0 = -s0
    86: 33 06 01                 s1 = 0x1
    89: 01                       fallthrough
      :                          @8
    90: 7a 16 0c                 u32 [sp + 0xc] = s1
    93: 64 17                    a0 = sp
    95: 33 08 10                 a1 = 0x10
    98: 0a 13                    ecalli 19 // 'export'
   100: 01                       fallthrough
      :                          @9
   101: 83 66 01                 i32 s1 = s1 + 0x1
   104: be 65 07                 i32 a0 = s0 + s1
   107: 52 17 01 ef              jump @8 if a0 != 1
      :                          @10
   111: 28 19                    jump @12
      :                          @11
   113: 14 07 01 00 00 00 01 00 00 00 a0 = 0x100000001
   123: 7b 17                    u64 [sp] = a0
   125: 48 11 08                 u32 [sp + 8] = 0
   128: 64 17                    a0 = sp
   130: 33 08 10                 a1 = 0x10
   133: 0a 13                    ecalli 19 // 'export'
   135: 01                       fallthrough
      :                          @12
   136: 64 17                    a0 = sp
   138: 33 08 10                 a1 = 0x10
   141: 82 10 20                 ra = u64 [sp + 0x20]
   144: 82 15 18                 s0 = u64 [sp + 0x18]
   147: 82 16 10                 s1 = u64 [sp + 0x10]
   150: 95 11 28                 sp = sp + 0x28
   153: 32 00                    ret
      :                          @13 [export #1: 'accumulate']
   155: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   159: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   163: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   167: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   171: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
   175: 95 8b f8                 a4 = a1 + 0xfffffffffffffff8
   178: 33 03 00 00 01           t1 = 0x10000
   183: 51 0b 52                 jump @22 if a4 == 0
      :                          @14
   186: 95 76 08                 s1 = a0 + 0x8
   189: 7d 6c                    a5 = i8 [s1]
   191: 84 c8 ff 00              a1 = a5 & 0xff
   195: 33 09 01                 a2 = 0x1
   198: 59 0c 40                 jump @21 if a5 >=s 0
      :                          @15
   201: 33 0c c0 00              a5 = 0xc0
   205: 33 09 02                 a2 = 0x2
   208: ac c8 36                 jump @21 if a1 <u a5
      :                          @16
   211: 33 0c e0 00              a5 = 0xe0
   215: 33 09 03                 a2 = 0x3
   218: ac c8 2c                 jump @21 if a1 <u a5
      :                          @17
   221: 33 0c f0 00              a5 = 0xf0
   225: 33 09 04                 a2 = 0x4
   228: ac c8 22                 jump @21 if a1 <u a5
      :                          @18
   231: 33 0c f8 00              a5 = 0xf8
   235: 33 09 05                 a2 = 0x5
   238: ac c8 18                 jump @21 if a1 <u a5
      :                          @19
   241: 33 0c fc 00              a5 = 0xfc
   245: 33 09 06                 a2 = 0x6
   248: ac c8 0e                 jump @21 if a1 <u a5
      :                          @20
   251: 88 89 fe 00              a2 = a1 <u 0xfe
   255: 33 0c 08                 a5 = 0x8
   258: c9 9c 09                 a2 = a5 - a2
   261: 01                       fallthrough
      :                          @21
   262: ae 9b 1e                 jump @24 if a4 >=u a2
      :                          @22
   265: 33 08                    a1 = 0
   267: 01                       fallthrough
      :                          @23
   268: 64 37                    a0 = t1
   270: 95 11 a0 03              sp = sp + 0x3a0
   274: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   278: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   282: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   286: 95 11 f8 07              sp = sp + 0x7f8
   290: 32 00                    ret
      :                          @24
   292: 51 08 e8                 jump @23 if a1 == 0
      :                          @25
   295: 33 0c ff 00              a5 = 0xff
   299: aa c8 86 0a              jump @116 if a1 == a5
      :                          @26
   303: 80 72 04                 t0 = u32 [a0 + 0x4]
   306: 6c 87                    a0 = sext.b a1
   308: 57 07 09                 jump @28 if a0 <s 0
      :                          @27
   311: 33 07                    a0 = 0
   313: 33 05                    s0 = 0
   315: 28 74                    jump @42
      :                          @28
   317: 55 28 c0 00 0d           jump @30 if a1 >=u 192
      :                          @29
   322: 33 07 01                 a0 = 0x1
   325: 33 0c 80                 a5 = 0xffffffffffffff80
   328: 28 4a                    jump @39
      :                          @30
   330: 55 28 e0 00 0e           jump @32 if a1 >=u 224
      :                          @31
   335: 33 07 02                 a0 = 0x2
   338: 33 0c 40 ff              a5 = 0xffffffffffffff40
   342: 28 3c                    jump @39
      :                          @32
   344: 55 28 f0 00 0e           jump @34 if a1 >=u 240
      :                          @33
   349: 33 07 03                 a0 = 0x3
   352: 33 0c 20 ff              a5 = 0xffffffffffffff20
   356: 28 2e                    jump @39
      :                          @34
   358: 55 28 f8 00 0e           jump @36 if a1 >=u 248
      :                          @35
   363: 33 07 04                 a0 = 0x4
   366: 33 0c 10 ff              a5 = 0xffffffffffffff10
   370: 28 20                    jump @39
      :                          @36
   372: 55 28 fc 00 0e           jump @38 if a1 >=u 252
      :                          @37
   377: 33 07 05                 a0 = 0x5
   380: 33 0c 08 ff              a5 = 0xffffffffffffff08
   384: 28 12                    jump @39
      :                          @38
   386: 88 87 fe 00              a0 = a1 <u 0xfe
   390: 33 0c 04 ff              a5 = 0xffffffffffffff04
   394: 93 7c 02 ff              a5 = 0xffffffffffffff02 if a0 == 0
   398: 85 77 07                 a0 = a0 ^ 0x7
   401: 01                       fallthrough
      :                          @39
   402: ae 97 20 0a              jump @117 if a0 >=u a2
      :                          @40
   406: 33 05                    s0 = 0
   408: c8 c8 08                 a1 = a1 + a5
   411: 64 7c                    a5 = a0
   413: 01                       fallthrough
      :                          @41
   414: c8 c6 0a                 a3 = s1 + a5
   417: 7c aa                    a3 = u8 [a3]
   419: 97 55 08                 s0 = s0 << 0x8
   422: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   425: d4 a5 05                 s0 = s0 | a3
   428: 52 0c f2                 jump @41 if a5 != 0
      :                          @42
   431: 8a 77 03                 i32 a0 = a0 << 0x3
   434: cf 78 07                 a0 = a1 << a0
   437: 9a 77                    a0 = -a0
   439: aa 75 52 ff              jump @22 if s0 == a0
      :                          @43
   443: e4 9b 07                 a0 = maxu(a4, a2)
   446: c9 97 07                 a0 = a0 - a2
   449: 53 17 60 48 ff           jump @22 if a0 <u 96
      :                          @44
   454: c8 69 09                 a2 = a2 + s1
   457: 95 78 a0                 a1 = a0 + 0xffffffffffffffa0
   460: 95 96 60                 s1 = a2 + 0x60
   463: 51 08 65                 jump @57 if a1 == 0
      :                          @45
   466: 7d 6a                    a3 = i8 [s1]
   468: 84 ac ff 00              a5 = a3 & 0xff
   472: 33 09 01                 a2 = 0x1
   475: 59 0a 40                 jump @52 if a3 >=s 0
      :                          @46
   478: 33 0a c0 00              a3 = 0xc0
   482: 33 09 02                 a2 = 0x2
   485: ac ac 36                 jump @52 if a5 <u a3
      :                          @47
   488: 33 0a e0 00              a3 = 0xe0
   492: 33 09 03                 a2 = 0x3
   495: ac ac 2c                 jump @52 if a5 <u a3
      :                          @48
   498: 33 0a f0 00              a3 = 0xf0
   502: 33 09 04                 a2 = 0x4
   505: ac ac 22                 jump @52 if a5 <u a3
      :                          @49
   508: 33 0a f8 00              a3 = 0xf8
   512: 33 09 05                 a2 = 0x5
   515: ac ac 18                 jump @52 if a5 <u a3
      :                          @50
   518: 33 0a fc 00              a3 = 0xfc
   522: 33 09 06                 a2 = 0x6
   525: ac ac 0e                 jump @52 if a5 <u a3
      :                          @51
   528: 88 c9 fe 00              a2 = a5 <u 0xfe
   532: 33 0a 08                 a3 = 0x8
   535: c9 9a 09                 a2 = a3 - a2
   538: 01                       fallthrough
      :                          @52
   539: ac 98 98 09              jump @118 if a1 <u a2
      :                          @53
   543: 51 0c 97 00              jump @73 if a5 == 0
      :                          @54
   547: 51 2c ff 00 8e 09        jump @116 if a5 == 255
      :                          @55
   553: 6c ca                    a3 = sext.b a5
   555: 57 0a 0f                 jump @58 if a3 <s 0
      :                          @56
   558: 33 05                    s0 = 0
   560: 33 0a                    a3 = 0
   562: 28 7a                    jump @72
      :                          @57
   564: 33 09                    a2 = 0
   566: 33 0c                    a5 = 0
   568: 28 7e                    jump @73
      :                          @58
   570: 55 2c c0 00 0d           jump @60 if a5 >=u 192
      :                          @59
   575: 33 05 01                 s0 = 0x1
   578: 33 0b 80                 a4 = 0xffffffffffffff80
   581: 28 4a                    jump @69
      :                          @60
   583: 55 2c e0 00 0e           jump @62 if a5 >=u 224
      :                          @61
   588: 33 05 02                 s0 = 0x2
   591: 33 0b 40 ff              a4 = 0xffffffffffffff40
   595: 28 3c                    jump @69
      :                          @62
   597: 55 2c f0 00 0e           jump @64 if a5 >=u 240
      :                          @63
   602: 33 05 03                 s0 = 0x3
   605: 33 0b 20 ff              a4 = 0xffffffffffffff20
   609: 28 2e                    jump @69
      :                          @64
   611: 55 2c f8 00 0e           jump @66 if a5 >=u 248
      :                          @65
   616: 33 05 04                 s0 = 0x4
   619: 33 0b 10 ff              a4 = 0xffffffffffffff10
   623: 28 20                    jump @69
      :                          @66
   625: 55 2c fc 00 0e           jump @68 if a5 >=u 252
      :                          @67
   630: 33 05 05                 s0 = 0x5
   633: 33 0b 08 ff              a4 = 0xffffffffffffff08
   637: 28 12                    jump @69
      :                          @68
   639: 88 ca fe 00              a3 = a5 <u 0xfe
   643: 33 0b 04 ff              a4 = 0xffffffffffffff04
   647: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
   651: 85 a5 07                 s0 = a3 ^ 0x7
   654: 01                       fallthrough
      :                          @69
   655: ae 95 26 09              jump @120 if s0 >=u a2
      :                          @70
   659: 33 0a                    a3 = 0
   661: c8 bc 0c                 a5 = a5 + a4
   664: 64 5b                    a4 = s0
   666: 01                       fallthrough
      :                          @71
   667: c8 b6 07                 a0 = s1 + a4
   670: 7c 77                    a0 = u8 [a0]
   672: 97 aa 08                 a3 = a3 << 0x8
   675: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   678: d4 7a 0a                 a3 = a3 | a0
   681: 52 0b f2                 jump @71 if a4 != 0
      :                          @72
   684: 8a 57 03                 i32 a0 = s0 << 0x3
   687: cf 7c 0c                 a5 = a5 << a0
   690: c8 ac 0c                 a5 = a5 + a3
   693: 01                       fallthrough
      :                          @73
   694: e4 98 07                 a0 = maxu(a1, a2)
   697: c9 97 07                 a0 = a0 - a2
   700: e4 c7 08                 a1 = maxu(a0, a5)
   703: c9 c8 08                 a1 = a1 - a5
   706: 53 18 21 47 fe           jump @22 if a1 <u 33
      :                          @74
   711: c8 69 09                 a2 = a2 + s1
   714: c8 9c 0c                 a5 = a5 + a2
   717: 7c c7 20                 a0 = u8 [a5 + 0x20]
   720: 7b 12 20                 u64 [sp + 0x20] = t0
   723: 51 07 09                 jump @76 if a0 == 0
      :                          @75
   726: 33 0a                    a3 = 0
   728: 33 09                    a2 = 0
   730: 28 6e                    jump @89
      :                          @76
   732: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
   735: 95 c6 21                 s1 = a5 + 0x21
   738: 51 0a 54                 jump @87 if a3 == 0
      :                          @77
   741: 7d 67                    a0 = i8 [s1]
   743: 33 05 01                 s0 = 0x1
   746: 59 07 37                 jump @84 if a0 >=s 0
      :                          @78
   749: 84 77 ff 00              a0 = a0 & 0xff
   753: 33 05 02                 s0 = 0x2
   756: 53 27 c0 00 2d           jump @84 if a0 <u 192
      :                          @79
   761: 33 05 03                 s0 = 0x3
   764: 53 27 e0 00 25           jump @84 if a0 <u 224
      :                          @80
   769: 33 05 04                 s0 = 0x4
   772: 53 27 f0 00 1d           jump @84 if a0 <u 240
      :                          @81
   777: 33 05 05                 s0 = 0x5
   780: 53 27 f8 00 15           jump @84 if a0 <u 248
      :                          @82
   785: 33 05 06                 s0 = 0x6
   788: 53 27 fc 00 0d           jump @84 if a0 <u 252
      :                          @83
   793: 88 77 fe 00              a0 = a0 <u 0xfe
   797: 9a 75 08                 s0 = 0x8 - a0
   800: 01                       fallthrough
      :                          @84
   801: 7b 1a 18                 u64 [sp + 0x18] = a3
   804: ac 5a 92 08              jump @121 if a3 <u s0
      :                          @85
   808: 64 67                    a0 = s1
   810: 64 58                    a1 = s0
   812: 50 10 02 a1 09           ra = 2, jump @154
      :                          @86 [@dyn 1]
   817: 82 1a 18                 a3 = u64 [sp + 0x18]
   820: 28 07                    jump @88
      :                          @87
   822: 33 05                    s0 = 0
   824: 33 07                    a0 = 0
   826: 01                       fallthrough
      :                          @88
   827: c8 56 09                 a2 = s1 + s0
   830: e4 5a 08                 a1 = maxu(a3, s0)
   833: c9 58 08                 a1 = a1 - s0
   836: e6 78 0a                 a3 = minu(a1, a0)
   839: 01                       fallthrough
      :                          @89
   840: 46 11 29                 u8 [sp + 41] = 0
   843: 81 95                    s0 = i32 [a2]
   845: 95 17 29                 a0 = sp + 0x29
   848: 33 08 01                 a1 = 0x1
   851: 7b 19 10                 u64 [sp + 0x10] = a2
   854: 7b 1a 18                 u64 [sp + 0x18] = a3
   857: 0a 03                    ecalli 3 // 'write'
   859: 46 11 2a 6a              u8 [sp + 42] = 0x6a
   863: 46 11 2b 61              u8 [sp + 43] = 0x61
   867: 46 11 2c 6d              u8 [sp + 44] = 0x6d
   871: 46 11 2d 44              u8 [sp + 45] = 0x44
   875: 46 11 2e 4f              u8 [sp + 46] = 0x4f
   879: 46 11 2f 54              u8 [sp + 47] = 0x54
   883: 46 11 30 6a              u8 [sp + 48] = 0x6a
   887: 46 11 31 0d              u8 [sp + 49] = 0xd
   891: 46 11 32 4a              u8 [sp + 50] = 0x4a
   895: 46 11 33 19              u8 [sp + 51] = 0x19
   899: 46 11 34 d1 00           u8 [sp + 52] = 0xd1
   904: 46 11 35 99 00           u8 [sp + 53] = 0x99
   909: 46 11 36 50              u8 [sp + 54] = 0x50
   913: 46 11 37 57              u8 [sp + 55] = 0x57
   917: 46 11 38 13              u8 [sp + 56] = 0x13
   921: 46 11 39 fc 00           u8 [sp + 57] = 0xfc
   926: 46 11 3a 65              u8 [sp + 58] = 0x65
   930: 46 11 3b f5 00           u8 [sp + 59] = 0xf5
   935: 46 11 3c 31              u8 [sp + 60] = 0x31
   939: 46 11 3d 03              u8 [sp + 61] = 0x3
   943: 46 11 3e 8e 00           u8 [sp + 62] = 0x8e
   948: 46 11 3f 73              u8 [sp + 63] = 0x73
   952: 33 0b f1 00              a4 = 0xf1
   956: 78 1b 40                 u8 [sp + 0x40] = a4
   959: 46 11 41 d8 00           u8 [sp + 65] = 0xd8
   964: 46 11 42 85 00           u8 [sp + 66] = 0x85
   969: 46 11 43 64              u8 [sp + 67] = 0x64
   973: 46 11 44 56              u8 [sp + 68] = 0x56
   977: 46 11 45 32              u8 [sp + 69] = 0x32
   981: 46 11 46 c8 00           u8 [sp + 70] = 0xc8
   986: 33 06 ae 00              s1 = 0xae
   990: 78 16 47                 u8 [sp + 0x47] = s1
   993: 46 11 48 50              u8 [sp + 72] = 0x50
   997: 33 0c 3c                 a5 = 0x3c
  1000: 78 1c 49                 u8 [sp + 0x49] = a5
  1003: 46 11 4a 4f              u8 [sp + 74] = 0x4f
  1007: 46 11 4b 0c              u8 [sp + 75] = 0xc
  1011: 46 11 4c 4d              u8 [sp + 76] = 0x4d
  1015: 46 11 4d 5e              u8 [sp + 77] = 0x5e
  1019: 46 11 4e 19              u8 [sp + 78] = 0x19
  1023: 46 11 4f a7 00           u8 [sp + 79] = 0xa7
  1028: 46 11 50 bf 00           u8 [sp + 80] = 0xbf
  1033: 46 11 51 a9 00           u8 [sp + 81] = 0xa9
  1038: 46 11 52 bb 00           u8 [sp + 82] = 0xbb
  1043: 46 11 53 0f              u8 [sp + 83] = 0xf
  1047: 46 11 54 a4 00           u8 [sp + 84] = 0xa4
  1052: 46 11 55 96 00           u8 [sp + 85] = 0x96
  1057: 46 11 56 87 00           u8 [sp + 86] = 0x87
  1062: 46 11 57 47              u8 [sp + 87] = 0x47
  1066: 46 11 58 e6 00           u8 [sp + 88] = 0xe6
  1071: 46 11 59 3d              u8 [sp + 89] = 0x3d
  1075: 78 1c 5a                 u8 [sp + 0x5a] = a5
  1078: 78 1b 5b                 u8 [sp + 0x5b] = a4
  1081: 46 11 5c e7 00           u8 [sp + 92] = 0xe7
  1086: 46 11 5d 4a              u8 [sp + 93] = 0x4a
  1090: 46 11 5e 49              u8 [sp + 94] = 0x49
  1094: 46 11 5f dd 00           u8 [sp + 95] = 0xdd
  1099: 46 11 60 c4 00           u8 [sp + 96] = 0xc4
  1104: 46 11 61 a6 00           u8 [sp + 97] = 0xa6
  1109: 46 11 62 ec 00           u8 [sp + 98] = 0xec
  1114: 46 11 63 a8 00           u8 [sp + 99] = 0xa8
  1119: 46 11 64 9a 00           u8 [sp + 100] = 0x9a
  1124: 46 11 65 6a              u8 [sp + 101] = 0x6a
  1128: 46 11 66 6f              u8 [sp + 102] = 0x6f
  1132: 46 11 67 33              u8 [sp + 103] = 0x33
  1136: 46 11 68 9d 00           u8 [sp + 104] = 0x9d
  1141: 46 11 69 a3 00           u8 [sp + 105] = 0xa3
  1146: 46 11 6a 33              u8 [sp + 106] = 0x33
  1150: 46 11 6b 7f              u8 [sp + 107] = 0x7f
  1154: 46 11 6c d2 00           u8 [sp + 108] = 0xd2
  1159: 46 11 6d eb 00           u8 [sp + 109] = 0xeb
  1164: 46 11 6e 55              u8 [sp + 110] = 0x55
  1168: 46 11 6f 07              u8 [sp + 111] = 0x7
  1172: 95 17 70                 a0 = sp + 0x70
  1175: 33 09 00 01              a2 = 0x100
  1179: 33 08                    a1 = 0
  1181: 50 10 04 d5 07           ra = 4, jump @141
      :                          @90 [@dyn 2]
  1186: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  1189: 56 17 08 d4 00           jump @93 if a0 >u 8
      :                          @91
  1194: 97 77 02                 a0 = a0 << 0x2
  1197: 33 08 00 00 01           a1 = 0x10000
  1202: c8 87 07                 a0 = a0 + a1
  1205: 81 77                    a0 = i32 [a0]
  1207: c8 87 07                 a0 = a0 + a1
  1210: 82 16 20                 s1 = u64 [sp + 0x20]
  1213: 32 07                    jump [a0]
      :                          @92 [@dyn 3]
  1215: 95 18 2a                 a1 = sp + 0x2a
  1218: 33 09 03                 a2 = 0x3
  1221: 95 1a 70                 a3 = sp + 0x70
  1224: 33 0c 00 01              a5 = 0x100
  1228: 64 67                    a0 = s1
  1230: 33 0b                    a4 = 0
  1232: 0a 02                    ecalli 2 // 'read'
  1234: 95 16 ff 07              s1 = sp + 0x7ff
  1238: 95 66 78 03              s1 = s1 + 0x378
  1242: 46 16 01 01              u8 [s1 + 1] = 0x1
  1246: 7b 17 70 01              u64 [sp + 0x170] = a0
  1250: 95 17 ff 07              a0 = sp + 0x7ff
  1254: 95 77 79 03              a0 = a0 + 0x379
  1258: 33 08 01                 a1 = 0x1
  1261: 95 19 70 01              a2 = sp + 0x170
  1265: 33 0a 08                 a3 = 0x8
  1268: 0a 03                    ecalli 3 // 'write'
  1270: 95 17 2a                 a0 = sp + 0x2a
  1273: 33 08 03                 a1 = 0x3
  1276: 95 19 2d                 a2 = sp + 0x2d
  1279: 33 0a 03                 a3 = 0x3
  1282: 0a 03                    ecalli 3 // 'write'
  1284: 46 16 01 02              u8 [s1 + 1] = 0x2
  1288: 7b 17 70 01              u64 [sp + 0x170] = a0
  1292: 95 17 ff 07              a0 = sp + 0x7ff
  1296: 95 77 79 03              a0 = a0 + 0x379
  1300: 33 08 01                 a1 = 0x1
  1303: 95 19 70 01              a2 = sp + 0x170
  1307: 33 0a 08                 a3 = 0x8
  1310: 0a 03                    ecalli 3 // 'write'
  1312: 95 18 2a                 a1 = sp + 0x2a
  1315: 33 09 03                 a2 = 0x3
  1318: 95 1a 70                 a3 = sp + 0x70
  1321: 33 0c 00 01              a5 = 0x100
  1325: 82 17 20                 a0 = u64 [sp + 0x20]
  1328: 33 0b                    a4 = 0
  1330: 0a 02                    ecalli 2 // 'read'
  1332: 46 16 01 05              u8 [s1 + 1] = 0x5
  1336: 7b 17 70 01              u64 [sp + 0x170] = a0
  1340: 95 17 ff 07              a0 = sp + 0x7ff
  1344: 95 77 79 03              a0 = a0 + 0x379
  1348: 33 08 01                 a1 = 0x1
  1351: 95 19 70 01              a2 = sp + 0x170
  1355: 33 0a 08                 a3 = 0x8
  1358: 0a 03                    ecalli 3 // 'write'
  1360: 95 17 2a                 a0 = sp + 0x2a
  1363: 33 08                    a1 = 0
  1365: 0a 0f                    ecalli 15 // 'forget'
  1367: 46 16 01 06              u8 [s1 + 1] = 0x6
  1371: 7b 17 70 01              u64 [sp + 0x170] = a0
  1375: 95 17 ff 07              a0 = sp + 0x7ff
  1379: 95 77 79 03              a0 = a0 + 0x379
  1383: 33 08 01                 a1 = 0x1
  1386: 95 19 70 01              a2 = sp + 0x170
  1390: 33 0a 08                 a3 = 0x8
  1393: 0a 03                    ecalli 3 // 'write'
  1395: 82 19 20                 a2 = u64 [sp + 0x20]
  1398: 28 69 05                 jump @107
      :                          @93
  1401: 82 19 20                 a2 = u64 [sp + 0x20]
  1404: 95 16 ff 07              s1 = sp + 0x7ff
  1408: 95 66 78 03              s1 = s1 + 0x378
  1412: 52 25 00 04 5b 05        jump @107 if s0 != 1024
      :                          @94
  1418: 7b 15 08                 u64 [sp + 0x8] = s0
  1421: 33 05 27 ea 0d           s0 = 0xdea27
  1426: 95 17 30                 a0 = sp + 0x30
  1429: 33 08 03                 a1 = 0x3
  1432: 33 09 27 ea 0d           a2 = 0xdea27
  1437: 33 0a 27 ea 0d           a3 = 0xdea27
  1442: 0a 09                    ecalli 9 // 'new'
  1444: 46 16 01 01              u8 [s1 + 1] = 0x1
  1448: 7b 17 70 01              u64 [sp + 0x170] = a0
  1452: 95 17 ff 07              a0 = sp + 0x7ff
  1456: 95 77 79 03              a0 = a0 + 0x379
  1460: 33 08 01                 a1 = 0x1
  1463: 95 19 70 01              a2 = sp + 0x170
  1467: 33 0a 08                 a3 = 0x8
  1470: 0a 03                    ecalli 3 // 'write'
  1472: 95 17 30                 a0 = sp + 0x30
  1475: 64 58                    a1 = s0
  1477: 64 59                    a2 = s0
  1479: 0a 0a                    ecalli 10 // 'upgrade'
  1481: 46 16 01 02              u8 [s1 + 1] = 0x2
  1485: 7b 17 70 01              u64 [sp + 0x170] = a0
  1489: 95 17 ff 07              a0 = sp + 0x7ff
  1493: 95 77 79 03              a0 = a0 + 0x379
  1497: 33 08 01                 a1 = 0x1
  1500: 95 19 70 01              a2 = sp + 0x170
  1504: 33 0a 08                 a3 = 0x8
  1507: 0a 03                    ecalli 3 // 'write'
  1509: 48 21 70 01 8f 03        u32 [sp + 368] = 0x38f
  1515: 48 21 78 01              u32 [sp + 376] = 0
  1519: 7a 15 74 01              u32 [sp + 0x174] = s0
  1523: 82 15 08                 s0 = u64 [sp + 0x8]
  1526: 33 08 01                 a1 = 0x1
  1529: 33 09 01                 a2 = 0x1
  1532: 95 1a 70 01              a3 = sp + 0x170
  1536: 33 0b 01                 a4 = 0x1
  1539: 33 07                    a0 = 0
  1541: 0a 05                    ecalli 5 // 'bless'
  1543: 46 06 05                 u8 [s1 + 0] = 0x5
  1546: 7b 67 01                 u64 [s1 + 0x1] = a0
  1549: 95 17 ff 07              a0 = sp + 0x7ff
  1553: 95 77 78 03              a0 = a0 + 0x378
  1557: 33 08 01                 a1 = 0x1
  1560: 95 19 ff 07              a2 = sp + 0x7ff
  1564: 95 99 79 03              a2 = a2 + 0x379
  1568: 33 0a 08                 a3 = 0x8
  1571: 0a 03                    ecalli 3 // 'write'
  1573: 82 19 20                 a2 = u64 [sp + 0x20]
  1576: 28 b7 04                 jump @107
      :                          @95 [@dyn 4]
  1579: 95 18 2a                 a1 = sp + 0x2a
  1582: 33 09 03                 a2 = 0x3
  1585: 95 1a 70                 a3 = sp + 0x70
  1588: 33 0c 00 01              a5 = 0x100
  1592: 64 67                    a0 = s1
  1594: 33 0b                    a4 = 0
  1596: 0a 02                    ecalli 2 // 'read'
  1598: 95 16 ff 07              s1 = sp + 0x7ff
  1602: 95 66 78 03              s1 = s1 + 0x378
  1606: 46 16 01 01              u8 [s1 + 1] = 0x1
  1610: 7b 17 70 01              u64 [sp + 0x170] = a0
  1614: 95 17 ff 07              a0 = sp + 0x7ff
  1618: 95 77 79 03              a0 = a0 + 0x379
  1622: 33 08 01                 a1 = 0x1
  1625: 95 19 70 01              a2 = sp + 0x170
  1629: 33 0a 08                 a3 = 0x8
  1632: 0a 03                    ecalli 3 // 'write'
  1634: 95 17 2a                 a0 = sp + 0x2a
  1637: 33 08 03                 a1 = 0x3
  1640: 33 09                    a2 = 0
  1642: 33 0a                    a3 = 0
  1644: 0a 03                    ecalli 3 // 'write'
  1646: 46 16 01 02              u8 [s1 + 1] = 0x2
  1650: 7b 17 70 01              u64 [sp + 0x170] = a0
  1654: 95 17 ff 07              a0 = sp + 0x7ff
  1658: 95 77 79 03              a0 = a0 + 0x379
  1662: 33 08 01                 a1 = 0x1
  1665: 95 19 70 01              a2 = sp + 0x170
  1669: 33 0a 08                 a3 = 0x8
  1672: 0a 03                    ecalli 3 // 'write'
  1674: 95 18 2a                 a1 = sp + 0x2a
  1677: 33 09 03                 a2 = 0x3
  1680: 95 1a 70                 a3 = sp + 0x70
  1683: 33 0c 00 01              a5 = 0x100
  1687: 82 17 20                 a0 = u64 [sp + 0x20]
  1690: 33 0b                    a4 = 0
  1692: 0a 02                    ecalli 2 // 'read'
  1694: 46 16 01 05              u8 [s1 + 1] = 0x5
  1698: 7b 17 70 01              u64 [sp + 0x170] = a0
  1702: 95 17 ff 07              a0 = sp + 0x7ff
  1706: 95 77 79 03              a0 = a0 + 0x379
  1710: 33 08 01                 a1 = 0x1
  1713: 95 19 70 01              a2 = sp + 0x170
  1717: 33 0a 08                 a3 = 0x8
  1720: 0a 03                    ecalli 3 // 'write'
  1722: 95 17 30                 a0 = sp + 0x30
  1725: 33 08 03                 a1 = 0x3
  1728: 0a 0e                    ecalli 14 // 'solicit'
  1730: 46 16 01 06              u8 [s1 + 1] = 0x6
  1734: 7b 17 70 01              u64 [sp + 0x170] = a0
  1738: 95 17 ff 07              a0 = sp + 0x7ff
  1742: 95 77 79 03              a0 = a0 + 0x379
  1746: 33 08 01                 a1 = 0x1
  1749: 95 19 70 01              a2 = sp + 0x170
  1753: 33 0a 08                 a3 = 0x8
  1756: 0a 03                    ecalli 3 // 'write'
  1758: 82 19 20                 a2 = u64 [sp + 0x20]
  1761: 28 fe 03                 jump @107
      :                          @96 [@dyn 5]
  1764: 95 17 30                 a0 = sp + 0x30
  1767: 33 08 03                 a1 = 0x3
  1770: 0a 0e                    ecalli 14 // 'solicit'
  1772: 95 16 ff 07              s1 = sp + 0x7ff
  1776: 95 66 78 03              s1 = s1 + 0x378
  1780: 46 16 01 01              u8 [s1 + 1] = 0x1
  1784: 7b 17 70 01              u64 [sp + 0x170] = a0
  1788: 95 17 ff 07              a0 = sp + 0x7ff
  1792: 95 77 79 03              a0 = a0 + 0x379
  1796: 33 08 01                 a1 = 0x1
  1799: 95 19 70 01              a2 = sp + 0x170
  1803: 33 0a 08                 a3 = 0x8
  1806: 0a 03                    ecalli 3 // 'write'
  1808: 95 17 30                 a0 = sp + 0x30
  1811: 33 08 03                 a1 = 0x3
  1814: 0a 0d                    ecalli 13 // 'query'
  1816: 46 16 01 02              u8 [s1 + 1] = 0x2
  1820: 7b 17 70 01              u64 [sp + 0x170] = a0
  1824: 95 17 ff 07              a0 = sp + 0x7ff
  1828: 95 77 79 03              a0 = a0 + 0x379
  1832: 33 08 01                 a1 = 0x1
  1835: 95 19 70 01              a2 = sp + 0x170
  1839: 33 0a 08                 a3 = 0x8
  1842: 0a 03                    ecalli 3 // 'write'
  1844: 95 17 50                 a0 = sp + 0x50
  1847: 33 08 03                 a1 = 0x3
  1850: 0a 0d                    ecalli 13 // 'query'
  1852: 46 16 01 05              u8 [s1 + 1] = 0x5
  1856: 7b 17 70 01              u64 [sp + 0x170] = a0
  1860: 95 17 ff 07              a0 = sp + 0x7ff
  1864: 95 77 79 03              a0 = a0 + 0x379
  1868: 33 08 01                 a1 = 0x1
  1871: 95 19 70 01              a2 = sp + 0x170
  1875: 33 0a 08                 a3 = 0x8
  1878: 0a 03                    ecalli 3 // 'write'
  1880: 82 19 20                 a2 = u64 [sp + 0x20]
  1883: 28 84 03                 jump @107
      :                          @97 [@dyn 6]
  1886: 95 17 30                 a0 = sp + 0x30
  1889: 33 08 03                 a1 = 0x3
  1892: 0a 0f                    ecalli 15 // 'forget'
  1894: 95 16 ff 07              s1 = sp + 0x7ff
  1898: 95 66 78 03              s1 = s1 + 0x378
  1902: 46 16 01 01              u8 [s1 + 1] = 0x1
  1906: 7b 17 70 01              u64 [sp + 0x170] = a0
  1910: 95 17 ff 07              a0 = sp + 0x7ff
  1914: 95 77 79 03              a0 = a0 + 0x379
  1918: 33 08 01                 a1 = 0x1
  1921: 95 19 70 01              a2 = sp + 0x170
  1925: 33 0a 08                 a3 = 0x8
  1928: 0a 03                    ecalli 3 // 'write'
  1930: 95 17 30                 a0 = sp + 0x30
  1933: 33 08 03                 a1 = 0x3
  1936: 0a 0d                    ecalli 13 // 'query'
  1938: 46 16 01 02              u8 [s1 + 1] = 0x2
  1942: 7b 17 70 01              u64 [sp + 0x170] = a0
  1946: 95 17 ff 07              a0 = sp + 0x7ff
  1950: 95 77 79 03              a0 = a0 + 0x379
  1954: 33 08 01                 a1 = 0x1
  1957: 95 19 70 01              a2 = sp + 0x170
  1961: 33 0a 08                 a3 = 0x8
  1964: 0a 03                    ecalli 3 // 'write'
  1966: 95 18 50                 a1 = sp + 0x50
  1969: 95 19 70                 a2 = sp + 0x70
  1972: 33 0b 03                 a4 = 0x3
  1975: 7b 15 08                 u64 [sp + 0x8] = s0
  1978: 82 15 20                 s0 = u64 [sp + 0x20]
  1981: 64 57                    a0 = s0
  1983: 33 0a                    a3 = 0
  1985: 0a 01                    ecalli 1 // 'lookup'
  1987: 46 16 01 05              u8 [s1 + 1] = 0x5
  1991: 7b 17 70 01              u64 [sp + 0x170] = a0
  1995: 95 17 ff 07              a0 = sp + 0x7ff
  1999: 95 77 79 03              a0 = a0 + 0x379
  2003: 33 08 01                 a1 = 0x1
  2006: 95 19 70 01              a2 = sp + 0x170
  2010: 33 0a 08                 a3 = 0x8
  2013: 0a 03                    ecalli 3 // 'write'
  2015: 33 07 e8 03              a0 = 0x3e8
  2019: 95 18 2a                 a1 = sp + 0x2a
  2022: 0a 06                    ecalli 6 // 'assign'
  2024: 46 16 01 06              u8 [s1 + 1] = 0x6
  2028: 7b 17 70 01              u64 [sp + 0x170] = a0
  2032: 95 17 ff 07              a0 = sp + 0x7ff
  2036: 95 77 79 03              a0 = a0 + 0x379
  2040: 33 08 01                 a1 = 0x1
  2043: 95 19 70 01              a2 = sp + 0x170
  2047: 33 0a 08                 a3 = 0x8
  2050: 0a 03                    ecalli 3 // 'write'
  2052: 64 59                    a2 = s0
  2054: 82 15 08                 s0 = u64 [sp + 0x8]
  2057: 28 d6 02                 jump @107
      :                          @98 [@dyn 7]
  2060: 95 18 30                 a1 = sp + 0x30
  2063: 95 19 70                 a2 = sp + 0x70
  2066: 33 0b 03                 a4 = 0x3
  2069: 64 67                    a0 = s1
  2071: 33 0a                    a3 = 0
  2073: 0a 01                    ecalli 1 // 'lookup'
  2075: 95 16 ff 07              s1 = sp + 0x7ff
  2079: 95 66 78 03              s1 = s1 + 0x378
  2083: 46 16 01 01              u8 [s1 + 1] = 0x1
  2087: 7b 17 70 01              u64 [sp + 0x170] = a0
  2091: 95 17 ff 07              a0 = sp + 0x7ff
  2095: 95 77 79 03              a0 = a0 + 0x379
  2099: 33 08 01                 a1 = 0x1
  2102: 95 19 70 01              a2 = sp + 0x170
  2106: 33 0a 08                 a3 = 0x8
  2109: 0a 03                    ecalli 3 // 'write'
  2111: 95 17 30                 a0 = sp + 0x30
  2114: 33 08 03                 a1 = 0x3
  2117: 0a 0d                    ecalli 13 // 'query'
  2119: 46 16 01 02              u8 [s1 + 1] = 0x2
  2123: 7b 17 70 01              u64 [sp + 0x170] = a0
  2127: 95 17 ff 07              a0 = sp + 0x7ff
  2131: 95 77 79 03              a0 = a0 + 0x379
  2135: 33 08 01                 a1 = 0x1
  2138: 95 19 70 01              a2 = sp + 0x170
  2142: 33 0a 08                 a3 = 0x8
  2145: 0a 03                    ecalli 3 // 'write'
  2147: 95 18 30                 a1 = sp + 0x30
  2150: 82 17 20                 a0 = u64 [sp + 0x20]
  2153: 0a 0c                    ecalli 12 // 'eject'
  2155: 46 16 01 05              u8 [s1 + 1] = 0x5
  2159: 7b 17 70 01              u64 [sp + 0x170] = a0
  2163: 95 17 ff 07              a0 = sp + 0x7ff
  2167: 95 77 79 03              a0 = a0 + 0x379
  2171: 33 08 01                 a1 = 0x1
  2174: 95 19 70 01              a2 = sp + 0x170
  2178: 33 0a 08                 a3 = 0x8
  2181: 0a 03                    ecalli 3 // 'write'
  2183: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  2193: 95 1a 30                 a3 = sp + 0x30
  2196: 33 08                    a1 = 0
  2198: 33 09                    a2 = 0
  2200: 33 0b                    a4 = 0
  2202: 0a 05                    ecalli 5 // 'bless'
  2204: 46 16 01 06              u8 [s1 + 1] = 0x6
  2208: 7b 17 70 01              u64 [sp + 0x170] = a0
  2212: 95 17 ff 07              a0 = sp + 0x7ff
  2216: 95 77 79 03              a0 = a0 + 0x379
  2220: 33 08 01                 a1 = 0x1
  2223: 95 19 70 01              a2 = sp + 0x170
  2227: 33 0a 08                 a3 = 0x8
  2230: 0a 03                    ecalli 3 // 'write'
  2232: 82 19 20                 a2 = u64 [sp + 0x20]
  2235: 28 24 02                 jump @107
      :                          @99 [@dyn 8]
  2238: 7b 15 08                 u64 [sp + 0x8] = s0
  2241: 95 17 30                 a0 = sp + 0x30
  2244: 33 08 03                 a1 = 0x3
  2247: 0a 0e                    ecalli 14 // 'solicit'
  2249: 95 15 ff 07              s0 = sp + 0x7ff
  2253: 95 55 78 03              s0 = s0 + 0x378
  2257: 46 15 01 01              u8 [s0 + 1] = 0x1
  2261: 7b 17 70 01              u64 [sp + 0x170] = a0
  2265: 95 17 ff 07              a0 = sp + 0x7ff
  2269: 95 77 79 03              a0 = a0 + 0x379
  2273: 33 08 01                 a1 = 0x1
  2276: 95 19 70 01              a2 = sp + 0x170
  2280: 33 0a 08                 a3 = 0x8
  2283: 0a 03                    ecalli 3 // 'write'
  2285: 95 17 30                 a0 = sp + 0x30
  2288: 33 08 03                 a1 = 0x3
  2291: 0a 0d                    ecalli 13 // 'query'
  2293: 46 15 01 02              u8 [s0 + 1] = 0x2
  2297: 7b 17 70 01              u64 [sp + 0x170] = a0
  2301: 95 17 ff 07              a0 = sp + 0x7ff
  2305: 95 77 79 03              a0 = a0 + 0x379
  2309: 33 08 01                 a1 = 0x1
  2312: 95 19 70 01              a2 = sp + 0x170
  2316: 33 0a 08                 a3 = 0x8
  2319: 0a 03                    ecalli 3 // 'write'
  2321: 95 15 70 01              s0 = sp + 0x170
  2325: 33 09 00 0a              a2 = 0xa00
  2329: 95 17 70 01              a0 = sp + 0x170
  2333: 33 08                    a1 = 0
  2335: 50 10 12 53 03           ra = 18, jump @141
      :                          @100 [@dyn 9]
  2340: 33 06 50                 s1 = 0x50
  2343: 01                       fallthrough
      :                          @101
  2344: 95 18 30                 a1 = sp + 0x30
  2347: 33 09 20                 a2 = 0x20
  2350: 64 57                    a0 = s0
  2352: 50 10 14 90 02           ra = 20, jump @123
      :                          @102 [@dyn 10]
  2357: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2360: 95 55 20                 s0 = s0 + 0x20
  2363: 52 06 ed                 jump @101 if s1 != 0
      :                          @103
  2366: 95 18 70 01              a1 = sp + 0x170
  2370: 33 07                    a0 = 0
  2372: 0a 06                    ecalli 6 // 'assign'
  2374: 95 16 ff 07              s1 = sp + 0x7ff
  2378: 95 66 78 03              s1 = s1 + 0x378
  2382: 46 06 05                 u8 [s1 + 0] = 0x5
  2385: 7b 67 01                 u64 [s1 + 0x1] = a0
  2388: 95 17 ff 07              a0 = sp + 0x7ff
  2392: 95 77 78 03              a0 = a0 + 0x378
  2396: 33 08 01                 a1 = 0x1
  2399: 95 19 ff 07              a2 = sp + 0x7ff
  2403: 95 99 79 03              a2 = a2 + 0x379
  2407: 33 0a 08                 a3 = 0x8
  2410: 0a 03                    ecalli 3 // 'write'
  2412: 82 19 20                 a2 = u64 [sp + 0x20]
  2415: 82 15 08                 s0 = u64 [sp + 0x8]
  2418: 28 6d 01                 jump @107
      :                          @104 [@dyn 11]
  2421: 95 17 30                 a0 = sp + 0x30
  2424: 33 08 03                 a1 = 0x3
  2427: 0a 0f                    ecalli 15 // 'forget'
  2429: 95 16 ff 07              s1 = sp + 0x7ff
  2433: 95 66 78 03              s1 = s1 + 0x378
  2437: 46 16 01 01              u8 [s1 + 1] = 0x1
  2441: 7b 17 70 01              u64 [sp + 0x170] = a0
  2445: 95 17 ff 07              a0 = sp + 0x7ff
  2449: 95 77 79 03              a0 = a0 + 0x379
  2453: 33 08 01                 a1 = 0x1
  2456: 95 19 70 01              a2 = sp + 0x170
  2460: 33 0a 08                 a3 = 0x8
  2463: 0a 03                    ecalli 3 // 'write'
  2465: 95 17 30                 a0 = sp + 0x30
  2468: 33 08 03                 a1 = 0x3
  2471: 0a 0d                    ecalli 13 // 'query'
  2473: 46 16 01 02              u8 [s1 + 1] = 0x2
  2477: 7b 17 70 01              u64 [sp + 0x170] = a0
  2481: 95 17 ff 07              a0 = sp + 0x7ff
  2485: 95 77 79 03              a0 = a0 + 0x379
  2489: 33 08 01                 a1 = 0x1
  2492: 95 19 70 01              a2 = sp + 0x170
  2496: 33 0a 08                 a3 = 0x8
  2499: 0a 03                    ecalli 3 // 'write'
  2501: 82 19 20                 a2 = u64 [sp + 0x20]
  2504: 28 17 01                 jump @107
      :                          @105 [@dyn 12]
  2507: 95 18 30                 a1 = sp + 0x30
  2510: 95 19 70                 a2 = sp + 0x70
  2513: 33 0b 03                 a4 = 0x3
  2516: 64 67                    a0 = s1
  2518: 33 0a                    a3 = 0
  2520: 0a 01                    ecalli 1 // 'lookup'
  2522: 95 16 ff 07              s1 = sp + 0x7ff
  2526: 95 66 78 03              s1 = s1 + 0x378
  2530: 46 16 01 01              u8 [s1 + 1] = 0x1
  2534: 7b 17 70 01              u64 [sp + 0x170] = a0
  2538: 95 17 ff 07              a0 = sp + 0x7ff
  2542: 95 77 79 03              a0 = a0 + 0x379
  2546: 33 08 01                 a1 = 0x1
  2549: 95 19 70 01              a2 = sp + 0x170
  2553: 33 0a 08                 a3 = 0x8
  2556: 0a 03                    ecalli 3 // 'write'
  2558: 95 17 30                 a0 = sp + 0x30
  2561: 33 08 03                 a1 = 0x3
  2564: 0a 0d                    ecalli 13 // 'query'
  2566: 46 16 01 02              u8 [s1 + 1] = 0x2
  2570: 7b 17 70 01              u64 [sp + 0x170] = a0
  2574: 95 17 ff 07              a0 = sp + 0x7ff
  2578: 95 77 79 03              a0 = a0 + 0x379
  2582: 33 08 01                 a1 = 0x1
  2585: 95 19 70 01              a2 = sp + 0x170
  2589: 33 0a 08                 a3 = 0x8
  2592: 0a 03                    ecalli 3 // 'write'
  2594: 82 19 20                 a2 = u64 [sp + 0x20]
  2597: 28 ba 00                 jump @107
      :                          @106 [@dyn 13]
  2600: 95 18 2a                 a1 = sp + 0x2a
  2603: 33 09 03                 a2 = 0x3
  2606: 95 1a 70                 a3 = sp + 0x70
  2609: 33 0c 00 01              a5 = 0x100
  2613: 64 67                    a0 = s1
  2615: 33 0b                    a4 = 0
  2617: 0a 02                    ecalli 2 // 'read'
  2619: 95 16 ff 07              s1 = sp + 0x7ff
  2623: 95 66 78 03              s1 = s1 + 0x378
  2627: 46 16 01 01              u8 [s1 + 1] = 0x1
  2631: 7b 17 70 01              u64 [sp + 0x170] = a0
  2635: 95 17 ff 07              a0 = sp + 0x7ff
  2639: 95 77 79 03              a0 = a0 + 0x379
  2643: 33 08 01                 a1 = 0x1
  2646: 95 19 70 01              a2 = sp + 0x170
  2650: 33 0a 08                 a3 = 0x8
  2653: 0a 03                    ecalli 3 // 'write'
  2655: 95 17 2a                 a0 = sp + 0x2a
  2658: 33 08 03                 a1 = 0x3
  2661: 33 09                    a2 = 0
  2663: 33 0a                    a3 = 0
  2665: 0a 03                    ecalli 3 // 'write'
  2667: 46 16 01 02              u8 [s1 + 1] = 0x2
  2671: 7b 17 70 01              u64 [sp + 0x170] = a0
  2675: 95 17 ff 07              a0 = sp + 0x7ff
  2679: 95 77 79 03              a0 = a0 + 0x379
  2683: 33 08 01                 a1 = 0x1
  2686: 95 19 70 01              a2 = sp + 0x170
  2690: 33 0a 08                 a3 = 0x8
  2693: 0a 03                    ecalli 3 // 'write'
  2695: 95 18 2a                 a1 = sp + 0x2a
  2698: 33 09 03                 a2 = 0x3
  2701: 95 1a 70                 a3 = sp + 0x70
  2704: 33 0c 00 01              a5 = 0x100
  2708: 82 17 20                 a0 = u64 [sp + 0x20]
  2711: 33 0b                    a4 = 0
  2713: 0a 02                    ecalli 2 // 'read'
  2715: 46 16 01 05              u8 [s1 + 1] = 0x5
  2719: 7b 17 70 01              u64 [sp + 0x170] = a0
  2723: 95 17 ff 07              a0 = sp + 0x7ff
  2727: 95 77 79 03              a0 = a0 + 0x379
  2731: 33 08 01                 a1 = 0x1
  2734: 95 19 70 01              a2 = sp + 0x170
  2738: 33 0a 08                 a3 = 0x8
  2741: 0a 03                    ecalli 3 // 'write'
  2743: 95 17 30                 a0 = sp + 0x30
  2746: 33 08 03                 a1 = 0x3
  2749: 0a 0e                    ecalli 14 // 'solicit'
  2751: 46 16 01 06              u8 [s1 + 1] = 0x6
  2755: 7b 17 70 01              u64 [sp + 0x170] = a0
  2759: 95 17 ff 07              a0 = sp + 0x7ff
  2763: 95 77 79 03              a0 = a0 + 0x379
  2767: 33 08 01                 a1 = 0x1
  2770: 95 19 70 01              a2 = sp + 0x170
  2774: 33 0a 08                 a3 = 0x8
  2777: 0a 03                    ecalli 3 // 'write'
  2779: 82 19 20                 a2 = u64 [sp + 0x20]
  2782: 01                       fallthrough
      :                          @107
  2783: 95 18 70                 a1 = sp + 0x70
  2786: 64 97                    a0 = a2
  2788: 0a 04                    ecalli 4 // 'info'
  2790: 46 16 01 08              u8 [s1 + 1] = 0x8
  2794: 7b 17 70 01              u64 [sp + 0x170] = a0
  2798: 95 17 ff 07              a0 = sp + 0x7ff
  2802: 95 77 79 03              a0 = a0 + 0x379
  2806: 33 08 01                 a1 = 0x1
  2809: 95 19 70 01              a2 = sp + 0x170
  2813: 33 0a 08                 a3 = 0x8
  2816: 0a 03                    ecalli 3 // 'write'
  2818: 0a                       ecalli 0 // 'gas'
  2819: 46 16 01 09              u8 [s1 + 1] = 0x9
  2823: 7b 17 70 01              u64 [sp + 0x170] = a0
  2827: 95 17 ff 07              a0 = sp + 0x7ff
  2831: 95 77 79 03              a0 = a0 + 0x379
  2835: 33 08 01                 a1 = 0x1
  2838: 95 19 70 01              a2 = sp + 0x170
  2842: 33 0a 08                 a3 = 0x8
  2845: 0a 03                    ecalli 3 // 'write'
  2847: 01                       fallthrough
      :                          @108
  2848: 49 21 88 01              u64 [sp + 392] = 0
  2852: 49 21 80 01              u64 [sp + 384] = 0
  2856: 49 21 78 01              u64 [sp + 376] = 0
  2860: 49 21 70 01              u64 [sp + 368] = 0
  2864: 82 19 18                 a2 = u64 [sp + 0x18]
  2867: 55 19 21 81 00           jump @119 if a2 >=u 33
      :                          @109
  2872: 64 56                    s1 = s0
  2874: 97 55 20                 s0 = s0 << 0x20
  2877: 98 55 20                 s0 = s0 >> 0x20
  2880: 95 17 70 01              a0 = sp + 0x170
  2884: 82 18 10                 a1 = u64 [sp + 0x10]
  2887: 50 10 1c 79              ra = 28, jump @123
      :                          @110 [@dyn 14]
  2891: 3a 08 00 00 03           a1 = u64 [0x30000]
  2896: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  2906: ca 75 07                 a0 = s0 * a0
  2909: ae 87 44                 jump @115 if a0 >=u a1
      :                          @111
  2912: 51 16 09 07              jump @113 if s1 == 9
      :                          @112
  2916: 0a 08                    ecalli 8 // 'checkpoint'
  2918: 01                       fallthrough
      :                          @113
  2919: 95 57 2a                 a0 = s0 + 0x2a
  2922: 95 19 ff 07              a2 = sp + 0x7ff
  2926: 95 99 78 03              a2 = a2 + 0x378
  2930: 46 09 07                 u8 [a2 + 0] = 0x7
  2933: 7b 97 01                 u64 [a2 + 0x1] = a0
  2936: 95 17 ff 07              a0 = sp + 0x7ff
  2940: 95 77 78 03              a0 = a0 + 0x378
  2944: 33 08 01                 a1 = 0x1
  2947: 95 19 ff 07              a2 = sp + 0x7ff
  2951: 95 99 79 03              a2 = a2 + 0x379
  2955: 33 0a 08                 a3 = 0x8
  2958: 33 00 1e                 ra = 0x1e
  2961: 0a 03                    ecalli 3 // 'write'
  2963: 33 07                    a0 = 0
  2965: 33 08 01                 a1 = 0x1
  2968: 32 07                    jump [a0]
      :                          @114 [@dyn 15]
  2970: 33 07                    a0 = 0
  2972: 33 08 01                 a1 = 0x1
  2975: 32 07                    jump [a0]
      :                          @115
  2977: 95 17 70 01              a0 = sp + 0x170
  2981: 0a 10                    ecalli 16 // 'oyield'
  2983: 33 08 20                 a1 = 0x20
  2986: 95 13 70 01              t1 = sp + 0x170
  2990: 28 5e f5                 jump @23
      :                          @116
  2993: 00                       trap
      :                          @117
  2994: 00                       trap
      :                          @118
  2995: 00                       trap
      :                          @119
  2996: 00                       trap
      :                          @120
  2997: 00                       trap
      :                          @121
  2998: 00                       trap
      :                          @122 [export #2: 'on_transfer']
  2999: 33 07 00 00 01           a0 = 0x10000
  3004: 33 08                    a1 = 0
  3006: 32 00                    ret
      :                          @123
  3008: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3011: 7b 10 18                 u64 [sp + 0x18] = ra
  3014: 7b 15 10                 u64 [sp + 0x10] = s0
  3017: 7b 16 08                 u64 [sp + 0x8] = s1
  3020: 53 19 10 64              jump @132 if a2 <u 16
      :                          @124
  3024: 8d 7a                    i32 a3 = -a0
  3026: 84 a2 07                 t0 = a3 & 0x7
  3029: c8 27 0b                 a4 = a0 + t0
  3032: 51 02 15                 jump @127 if t0 == 0
      :                          @125
  3035: 64 8c                    a5 = a1
  3037: 64 75                    s0 = a0
  3039: 01                       fallthrough
      :                          @126
  3040: 7c ca                    a3 = u8 [a5]
  3042: 78 5a                    u8 [s0] = a3
  3044: 95 55 01                 s0 = s0 + 0x1
  3047: 95 cc 01                 a5 = a5 + 0x1
  3050: ac b5 f6                 jump @126 if s0 <u a4
      :                          @127
  3053: c8 28 03                 t1 = a1 + t0
  3056: c9 29 02                 t0 = a2 - t0
  3059: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3062: 84 38 07                 a1 = t1 & 0x7
  3065: c8 4b 0a                 a3 = a4 + t2
  3068: 51 08 3b                 jump @134 if a1 == 0
      :                          @128
  3071: 58 04 4b                 jump @137 if t2 <=s 0
      :                          @129
  3074: 97 38 03                 a1 = t1 << 0x3
  3077: 84 80 38                 ra = a1 & 0x38
  3080: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3083: 82 c5                    s0 = u64 [a5]
  3085: 8d 88                    i32 a1 = -a1
  3087: 84 88 38                 a1 = a1 & 0x38
  3090: 95 cc 08                 a5 = a5 + 0x8
  3093: 01                       fallthrough
      :                          @130
  3094: 82 c6                    s1 = u64 [a5]
  3096: d0 05 05                 s0 = s0 >> ra
  3099: cf 86 09                 a2 = s1 << a1
  3102: d4 59 09                 a2 = a2 | s0
  3105: 7b b9                    u64 [a4] = a2
  3107: 95 bb 08                 a4 = a4 + 0x8
  3110: 95 cc 08                 a5 = a5 + 0x8
  3113: 64 65                    s0 = s1
  3115: ac ab eb                 jump @130 if a4 <u a3
      :                          @131
  3118: 28 1c                    jump @137
      :                          @132
  3120: 64 7a                    a3 = a0
  3122: 52 09 21                 jump @138 if a2 != 0
      :                          @133
  3125: 28 2f                    jump @140
      :                          @134
  3127: 58 04 13                 jump @137 if t2 <=s 0
      :                          @135
  3130: 64 38                    a1 = t1
  3132: 01                       fallthrough
      :                          @136
  3133: 82 89                    a2 = u64 [a1]
  3135: 7b b9                    u64 [a4] = a2
  3137: 95 bb 08                 a4 = a4 + 0x8
  3140: 95 88 08                 a1 = a1 + 0x8
  3143: ac ab f6                 jump @136 if a4 <u a3
      :                          @137
  3146: c8 43 08                 a1 = t1 + t2
  3149: 84 29 07                 a2 = t0 & 0x7
  3152: 51 09 14                 jump @140 if a2 == 0
      :                          @138
  3155: c8 a9 09                 a2 = a2 + a3
  3158: 01                       fallthrough
      :                          @139
  3159: 7c 8b                    a4 = u8 [a1]
  3161: 78 ab                    u8 [a3] = a4
  3163: 95 aa 01                 a3 = a3 + 0x1
  3166: 95 88 01                 a1 = a1 + 0x1
  3169: ac 9a f6                 jump @139 if a3 <u a2
      :                          @140
  3172: 82 10 18                 ra = u64 [sp + 0x18]
  3175: 82 15 10                 s0 = u64 [sp + 0x10]
  3178: 82 16 08                 s1 = u64 [sp + 0x8]
  3181: 95 11 20                 sp = sp + 0x20
  3184: 32 00                    ret
      :                          @141
  3186: 53 19 10 48              jump @150 if a2 <u 16
      :                          @142
  3190: 8d 7a                    i32 a3 = -a0
  3192: 84 aa 07                 a3 = a3 & 0x7
  3195: c8 a7 0b                 a4 = a0 + a3
  3198: 51 0a 0e                 jump @145 if a3 == 0
      :                          @143
  3201: 64 7c                    a5 = a0
  3203: 01                       fallthrough
      :                          @144
  3204: 78 c8                    u8 [a5] = a1
  3206: 95 cc 01                 a5 = a5 + 0x1
  3209: ac bc fb                 jump @144 if a5 <u a4
      :                          @145
  3212: c9 a9 03                 t1 = a2 - a3
  3215: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3218: c8 cb 0a                 a3 = a4 + a5
  3221: 58 0c 1d                 jump @148 if a5 <=s 0
      :                          @146
  3224: 84 82 ff 00              t0 = a1 & 0xff
  3228: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  3238: ca 92 0c                 a5 = t0 * a2
  3241: 01                       fallthrough
      :                          @147
  3242: 7b bc                    u64 [a4] = a5
  3244: 95 bb 08                 a4 = a4 + 0x8
  3247: ac ab fb                 jump @147 if a4 <u a3
      :                          @148
  3250: 84 39 07                 a2 = t1 & 0x7
  3253: 52 09 0a                 jump @151 if a2 != 0
      :                          @149
  3256: 28 13                    jump @153
      :                          @150
  3258: 64 7a                    a3 = a0
  3260: 51 09 0f                 jump @153 if a2 == 0
      :                          @151
  3263: c8 a9 09                 a2 = a2 + a3
  3266: 01                       fallthrough
      :                          @152
  3267: 78 a8                    u8 [a3] = a1
  3269: 95 aa 01                 a3 = a3 + 0x1
  3272: ac 9a fb                 jump @152 if a3 <u a2
      :                          @153
  3275: 32 00                    ret
      :                          @154
  3277: 64 79                    a2 = a0
  3279: 7c 77                    a0 = u8 [a0]
  3281: 51 07 60 f6              jump @86 if a0 == 0
      :                          @155
  3285: 51 27 ff 00 8d 00        jump @173 if a0 == 255
      :                          @156
  3291: 6c 7a                    a3 = sext.b a0
  3293: 57 0a 09                 jump @158 if a3 <s 0
      :                          @157
  3296: 33 0a                    a3 = 0
  3298: 33 08                    a1 = 0
  3300: 28 73                    jump @172
      :                          @158
  3302: 55 27 c0 00 0d           jump @160 if a0 >=u 192
      :                          @159
  3307: 33 0a 01                 a3 = 0x1
  3310: 33 0b 80                 a4 = 0xffffffffffffff80
  3313: 28 4a                    jump @169
      :                          @160
  3315: 55 27 e0 00 0e           jump @162 if a0 >=u 224
      :                          @161
  3320: 33 0a 02                 a3 = 0x2
  3323: 33 0b 40 ff              a4 = 0xffffffffffffff40
  3327: 28 3c                    jump @169
      :                          @162
  3329: 55 27 f0 00 0e           jump @164 if a0 >=u 240
      :                          @163
  3334: 33 0a 03                 a3 = 0x3
  3337: 33 0b 20 ff              a4 = 0xffffffffffffff20
  3341: 28 2e                    jump @169
      :                          @164
  3343: 55 27 f8 00 0e           jump @166 if a0 >=u 248
      :                          @165
  3348: 33 0a 04                 a3 = 0x4
  3351: 33 0b 10 ff              a4 = 0xffffffffffffff10
  3355: 28 20                    jump @169
      :                          @166
  3357: 55 27 fc 00 0e           jump @168 if a0 >=u 252
      :                          @167
  3362: 33 0a 05                 a3 = 0x5
  3365: 33 0b 08 ff              a4 = 0xffffffffffffff08
  3369: 28 12                    jump @169
      :                          @168
  3371: 88 7a fe 00              a3 = a0 <u 0xfe
  3375: 33 0b 04 ff              a4 = 0xffffffffffffff04
  3379: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  3383: 85 aa 07                 a3 = a3 ^ 0x7
  3386: 01                       fallthrough
      :                          @169
  3387: ae 8a 28                 jump @174 if a3 >=u a1
      :                          @170
  3390: 33 08                    a1 = 0
  3392: c8 b7 07                 a0 = a0 + a4
  3395: 64 ab                    a4 = a3
  3397: 01                       fallthrough
      :                          @171
  3398: c8 b9 0c                 a5 = a2 + a4
  3401: 7c cc                    a5 = u8 [a5]
  3403: 97 88 08                 a1 = a1 << 0x8
  3406: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  3409: d4 c8 08                 a1 = a1 | a5
  3412: 52 0b f2                 jump @171 if a4 != 0
      :                          @172
  3415: 8a a9 03                 i32 a2 = a3 << 0x3
  3418: cf 97 07                 a0 = a0 << a2
  3421: c8 87 07                 a0 = a0 + a1
  3424: 32 00                    ret
      :                          @173
  3426: 00                       trap
      :                          @174
  3427: 00                       trap
