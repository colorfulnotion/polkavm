// RO data = 36/36 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [10, 0, 255, 255, 12, 0, 255, 255, 14, 0, 255, 255, 16, 0, 255, 255, 18, 0, 255, 255, 20, 0, 255, 255, 26, 0, 255, 255, 28, 0, 255, 255, 30, 0, 255, 255]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 941
// Code size = 3021 bytes

      :                          @0
     0: 28 ab 00 00 00           jump @27
      :                          @1
     5: 28 21 01 00 00           jump @36
      :                          @2
    10: 28 b2 0a                 jump @111
      :                          @3
    13: 51 08 9b 00              jump @24 if a1 == 0
      :                          @4
    17: 64 79                    a2 = a0
    19: 7c 77                    a0 = u8 [a0]
    21: 51 07 91 00              jump @23 if a0 == 0
      :                          @5
    25: 51 27 ff 00 90 00        jump @25 if a0 == 255
      :                          @6
    31: 6c 7a                    a3 = sext.b a0
    33: 57 0a 09                 jump @8 if a3 <s 0
      :                          @7
    36: 33 0a                    a3 = 0
    38: 33 08                    a1 = 0
    40: 28 73                    jump @22
      :                          @8
    42: 55 27 c0 00 0d           jump @10 if a0 >=u 192
      :                          @9
    47: 33 0a 01                 a3 = 0x1
    50: 33 0b 80                 a4 = 0xffffffffffffff80
    53: 28 4a                    jump @19
      :                          @10
    55: 55 27 e0 00 0e           jump @12 if a0 >=u 224
      :                          @11
    60: 33 0a 02                 a3 = 0x2
    63: 33 0b 40 ff              a4 = 0xffffffffffffff40
    67: 28 3c                    jump @19
      :                          @12
    69: 55 27 f0 00 0e           jump @14 if a0 >=u 240
      :                          @13
    74: 33 0a 03                 a3 = 0x3
    77: 33 0b 20 ff              a4 = 0xffffffffffffff20
    81: 28 2e                    jump @19
      :                          @14
    83: 55 27 f8 00 0e           jump @16 if a0 >=u 248
      :                          @15
    88: 33 0a 04                 a3 = 0x4
    91: 33 0b 10 ff              a4 = 0xffffffffffffff10
    95: 28 20                    jump @19
      :                          @16
    97: 55 27 fc 00 0e           jump @18 if a0 >=u 252
      :                          @17
   102: 33 0a 05                 a3 = 0x5
   105: 33 0b 08 ff              a4 = 0xffffffffffffff08
   109: 28 12                    jump @19
      :                          @18
   111: 88 7a fe 00              a3 = a0 <u 0xfe
   115: 33 0b 04 ff              a4 = 0xffffffffffffff04
   119: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
   123: 85 aa 07                 a3 = a3 ^ 0x7
   126: 01                       fallthrough
      :                          @19
   127: ae 8a 2b                 jump @26 if a3 >=u a1
      :                          @20
   130: 33 08                    a1 = 0
   132: c8 b7 07                 a0 = a0 + a4
   135: 64 ab                    a4 = a3
   137: 01                       fallthrough
      :                          @21
   138: c8 b9 0c                 a5 = a2 + a4
   141: 7c cc                    a5 = u8 [a5]
   143: 97 88 08                 a1 = a1 << 0x8
   146: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   149: d4 c8 08                 a1 = a1 | a5
   152: 52 0b f2                 jump @21 if a4 != 0
      :                          @22
   155: 8a a9 03                 i32 a2 = a3 << 0x3
   158: cf 97 07                 a0 = a0 << a2
   161: c8 87 07                 a0 = a0 + a1
   164: 32 00                    ret
      :                          @23
   166: 32 00                    ret
      :                          @24
   168: 00                       trap
      :                          @25
   169: 00                       trap
      :                          @26
   170: 00                       trap
      :                          @27 [export #0: 'refine']
   171: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   174: 7b 10 18                 u64 [sp + 0x18] = ra
   177: 7b 15 10                 u64 [sp + 0x10] = s0
   180: 48 11 08                 u32 [sp + 8] = 0
   183: 49 01                    u64 [sp + 0] = 0
   185: 64 17                    a0 = sp
   187: 33 09 0c                 a2 = 0xc
   190: 33 0a 05                 a3 = 0x5
   193: 33 08                    a1 = 0
   195: 33 0b                    a4 = 0
   197: 33 0c                    a5 = 0
   199: 0a 12                    ecalli 18 // 'fetch'
   201: 01                       fallthrough
      :                          @28
   202: 51 17 ff 35              jump @34 if a0 == 4294967295
      :                          @29
   206: 81 17 04                 a0 = i32 [sp + 0x4]
   209: 81 18 08                 a1 = i32 [sp + 0x8]
   212: 81 15                    s0 = i32 [sp]
   214: be 78 08                 i32 a1 = a1 + a0
   217: 83 59 01                 i32 a2 = s0 + 0x1
   220: 7a 19                    u32 [sp] = a2
   222: 7a 18 04                 u32 [sp + 0x4] = a1
   225: 7a 17 08                 u32 [sp + 0x8] = a0
   228: 64 17                    a0 = sp
   230: 33 08 0c                 a1 = 0xc
   233: 0a 13                    ecalli 19 // 'export'
   235: 01                       fallthrough
      :                          @30
   236: 51 05 2a                 jump @35 if s0 == 0
      :                          @31
   239: 64 17                    a0 = sp
   241: 33 08 0c                 a1 = 0xc
   244: 0a 13                    ecalli 19 // 'export'
   246: 01                       fallthrough
      :                          @32
   247: 83 55 ff                 i32 s0 = s0 + 0xffffffffffffffff
   250: 52 05 f5                 jump @31 if s0 != 0
      :                          @33
   253: 28 19                    jump @35
      :                          @34
   255: 14 07 01 00 00 00 01 00 00 00 a0 = 0x100000001
   265: 7b 17                    u64 [sp] = a0
   267: 48 11 08                 u32 [sp + 8] = 0
   270: 64 17                    a0 = sp
   272: 33 08 0c                 a1 = 0xc
   275: 0a 13                    ecalli 19 // 'export'
   277: 01                       fallthrough
      :                          @35
   278: 33 08 0c                 a1 = 0xc
   281: 64 17                    a0 = sp
   283: 82 10 18                 ra = u64 [sp + 0x18]
   286: 82 15 10                 s0 = u64 [sp + 0x10]
   289: 95 11 20                 sp = sp + 0x20
   292: 32 00                    ret
      :                          @36 [export #1: 'accumulate']
   294: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   298: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   302: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   306: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   310: 95 11 58 fc              sp = sp + 0xfffffffffffffc58
   314: 64 85                    s0 = a1
   316: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
   319: 51 05 77 09              jump @105 if s0 == 0
      :                          @37
   323: 95 7b 08                 a4 = a0 + 0x8
   326: 7d b8                    a1 = i8 [a4]
   328: 33 06 01                 s1 = 0x1
   331: 5a 08 69                 jump @45 if a1 >s 0
      :                          @38
   334: 84 88 ff 00              a1 = a1 & 0xff
   338: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
   341: 84 99 ff 00              a2 = a2 & 0xff
   345: 33 0a bf 00              a3 = 0xbf
   349: 33 06 02                 s1 = 0x2
   352: ac a9 54                 jump @45 if a2 <u a3
      :                          @39
   355: 84 89 e0 00              a2 = a1 & 0xe0
   359: 33 0a c0 00              a3 = 0xc0
   363: 33 06 03                 s1 = 0x3
   366: aa a9 46                 jump @45 if a2 == a3
      :                          @40
   369: 84 89 f0 00              a2 = a1 & 0xf0
   373: 33 0a e0 00              a3 = 0xe0
   377: 33 06 04                 s1 = 0x4
   380: aa a9 38                 jump @45 if a2 == a3
      :                          @41
   383: 84 89 f8 00              a2 = a1 & 0xf8
   387: 33 0a f0 00              a3 = 0xf0
   391: 33 06 05                 s1 = 0x5
   394: aa a9 2a                 jump @45 if a2 == a3
      :                          @42
   397: 84 89 fc 00              a2 = a1 & 0xfc
   401: 33 0a f8 00              a3 = 0xf8
   405: 33 06 06                 s1 = 0x6
   408: aa a9 1c                 jump @45 if a2 == a3
      :                          @43
   411: 84 89 fe 00              a2 = a1 & 0xfe
   415: 33 0a fc 00              a3 = 0xfc
   419: 33 06 07                 s1 = 0x7
   422: aa a9 0e                 jump @45 if a2 == a3
      :                          @44
   425: 88 88 fe 00              a1 = a1 <u 0xfe
   429: 85 86 01                 s1 = a1 ^ 0x1
   432: 97 66 03                 s1 = s1 << 0x3
   435: 01                       fallthrough
      :                          @45
   436: 7b 15 20                 u64 [sp + 0x20] = s0
   439: ac 65 00 09              jump @106 if s0 <u s1
      :                          @46
   443: 80 77 04                 a0 = u32 [a0 + 0x4]
   446: 7b 17 28                 u64 [sp + 0x28] = a0
   449: 64 b5                    s0 = a4
   451: 64 b7                    a0 = a4
   453: 64 68                    a1 = s1
   455: 50 10 02 46 fe           ra = 2, jump @3
      :                          @47 [@dyn 1]
   460: 51 07 29                 jump @52 if a0 == 0
      :                          @48
   463: 82 19 20                 a2 = u64 [sp + 0x20]
   466: aa 69 e7 08              jump @108 if a2 == s1
      :                          @49
   470: c8 56 07                 a0 = s1 + s0
   473: 7c 78                    a1 = u8 [a0]
   475: 95 7b 01                 a4 = a0 + 0x1
   478: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
   481: c8 79 05                 s0 = a2 + a0
   484: 51 08 18                 jump @53 if a1 == 0
      :                          @50
   487: 33 06                    s1 = 0
   489: 33 0a                    a3 = 0
   491: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   494: 52 08 a1 00              jump @67 if a1 != 0
      :                          @51
   498: 28 23 01                 jump @79
      :                          @52
   501: 33 06                    s1 = 0
   503: 33 0a                    a3 = 0
   505: 28 1c 01                 jump @79
      :                          @53
   508: 51 05 79                 jump @65 if s0 == 0
      :                          @54
   511: 7d b7                    a0 = i8 [a4]
   513: 33 06 01                 s1 = 0x1
   516: 5a 07 5a                 jump @62 if a0 >s 0
      :                          @55
   519: 84 77 ff 00              a0 = a0 & 0xff
   523: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   526: 84 88 ff 00              a1 = a1 & 0xff
   530: 33 06 02                 s1 = 0x2
   533: 53 28 bf 00 49           jump @62 if a1 <u 191
      :                          @56
   538: 84 78 e0 00              a1 = a0 & 0xe0
   542: 33 06 03                 s1 = 0x3
   545: 51 28 c0 00 3d           jump @62 if a1 == 192
      :                          @57
   550: 84 78 f0 00              a1 = a0 & 0xf0
   554: 33 06 04                 s1 = 0x4
   557: 51 28 e0 00 31           jump @62 if a1 == 224
      :                          @58
   562: 84 78 f8 00              a1 = a0 & 0xf8
   566: 33 06 05                 s1 = 0x5
   569: 51 28 f0 00 25           jump @62 if a1 == 240
      :                          @59
   574: 84 78 fc 00              a1 = a0 & 0xfc
   578: 33 06 06                 s1 = 0x6
   581: 51 28 f8 00 19           jump @62 if a1 == 248
      :                          @60
   586: 84 78 fe 00              a1 = a0 & 0xfe
   590: 33 06 07                 s1 = 0x7
   593: 51 28 fc 00 0d           jump @62 if a1 == 252
      :                          @61
   598: 33 06 08                 s1 = 0x8
   601: 53 27 fe 00 1c           jump @65 if a0 <u 254
      :                          @62
   606: ac 65 5c 08              jump @109 if s0 <u s1
      :                          @63
   610: 64 b7                    a0 = a4
   612: 64 68                    a1 = s1
   614: 7b 1b 20                 u64 [sp + 0x20] = a4
   617: 50 10 04 a4 fd           ra = 4, jump @3
      :                          @64 [@dyn 2]
   622: 82 1b 20                 a4 = u64 [sp + 0x20]
   625: 64 7a                    a3 = a0
   627: 28 07                    jump @66
      :                          @65
   629: 33 06                    s1 = 0
   631: 33 0a                    a3 = 0
   633: 01                       fallthrough
      :                          @66
   634: c8 6b 07                 a0 = a4 + s1
   637: c8 a7 0b                 a4 = a0 + a3
   640: c8 a6 06                 s1 = s1 + a3
   643: c9 65 05                 s0 = s0 - s1
   646: 64 76                    s1 = a0
   648: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   651: 51 08 8a 00              jump @79 if a1 == 0
      :                          @67
   655: 95 b7 40                 a0 = a4 + 0x40
   658: 7d 7b                    a4 = i8 [a0]
   660: 33 09 01                 a2 = 0x1
   663: 5a 0b 72                 jump @77 if a4 >s 0
      :                          @68
   666: 64 65                    s0 = s1
   668: 84 b6 ff 00              s1 = a4 & 0xff
   672: 83 69 ff                 i32 a2 = s1 + 0xffffffffffffffff
   675: 84 9b ff 00              a4 = a2 & 0xff
   679: 33 0c bf 00              a5 = 0xbf
   683: 33 09 02                 a2 = 0x2
   686: ac cb 54                 jump @75 if a4 <u a5
      :                          @69
   689: 84 6b e0 00              a4 = s1 & 0xe0
   693: 33 0c c0 00              a5 = 0xc0
   697: 33 09 03                 a2 = 0x3
   700: aa cb 46                 jump @75 if a4 == a5
      :                          @70
   703: 84 6b f0 00              a4 = s1 & 0xf0
   707: 33 0c e0 00              a5 = 0xe0
   711: 33 09 04                 a2 = 0x4
   714: aa cb 38                 jump @75 if a4 == a5
      :                          @71
   717: 84 6b f8 00              a4 = s1 & 0xf8
   721: 33 0c f0 00              a5 = 0xf0
   725: 33 09 05                 a2 = 0x5
   728: aa cb 2a                 jump @75 if a4 == a5
      :                          @72
   731: 84 6b fc 00              a4 = s1 & 0xfc
   735: 33 0c f8 00              a5 = 0xf8
   739: 33 09 06                 a2 = 0x6
   742: aa cb 1c                 jump @75 if a4 == a5
      :                          @73
   745: 84 6b fe 00              a4 = s1 & 0xfe
   749: 33 0c fc 00              a5 = 0xfc
   753: 33 09 07                 a2 = 0x7
   756: aa cb 0e                 jump @75 if a4 == a5
      :                          @74
   759: 33 0b fe 00              a4 = 0xfe
   763: 33 09 08                 a2 = 0x8
   766: ac b6 b3 07              jump @104 if s1 <u a4
      :                          @75
   770: ac 98 b9 07              jump @110 if a1 <u a2
      :                          @76
   774: 64 56                    s1 = s0
   776: 01                       fallthrough
      :                          @77
   777: 64 98                    a1 = a2
   779: 64 a5                    s0 = a3
   781: 50 10 06 00 fd           ra = 6, jump @3
      :                          @78 [@dyn 3]
   786: 64 5a                    a3 = s0
   788: 01                       fallthrough
      :                          @79
   789: 46 11 31                 u8 [sp + 49] = 0
   792: 81 65                    s0 = i32 [s1]
   794: 95 17 31                 a0 = sp + 0x31
   797: 33 08 01                 a1 = 0x1
   800: 7b 16 18                 u64 [sp + 0x18] = s1
   803: 64 69                    a2 = s1
   805: 7b 1a 20                 u64 [sp + 0x20] = a3
   808: 0a 03                    ecalli 3 // 'write'
   810: 46 11 32 6a              u8 [sp + 50] = 0x6a
   814: 46 11 33 61              u8 [sp + 51] = 0x61
   818: 46 11 34 6d              u8 [sp + 52] = 0x6d
   822: 46 11 35 44              u8 [sp + 53] = 0x44
   826: 46 11 36 4f              u8 [sp + 54] = 0x4f
   830: 46 11 37 54              u8 [sp + 55] = 0x54
   834: 46 11 38 6a              u8 [sp + 56] = 0x6a
   838: 46 11 39 0d              u8 [sp + 57] = 0xd
   842: 46 11 3a 4a              u8 [sp + 58] = 0x4a
   846: 46 11 3b 19              u8 [sp + 59] = 0x19
   850: 46 11 3c d1 00           u8 [sp + 60] = 0xd1
   855: 46 11 3d 99 00           u8 [sp + 61] = 0x99
   860: 46 11 3e 50              u8 [sp + 62] = 0x50
   864: 46 11 3f 57              u8 [sp + 63] = 0x57
   868: 46 11 40 13              u8 [sp + 64] = 0x13
   872: 46 11 41 fc 00           u8 [sp + 65] = 0xfc
   877: 46 11 42 65              u8 [sp + 66] = 0x65
   881: 46 11 43 f5 00           u8 [sp + 67] = 0xf5
   886: 46 11 44 31              u8 [sp + 68] = 0x31
   890: 46 11 45 03              u8 [sp + 69] = 0x3
   894: 46 11 46 8e 00           u8 [sp + 70] = 0x8e
   899: 46 11 47 73              u8 [sp + 71] = 0x73
   903: 33 0b f1 00              a4 = 0xf1
   907: 78 1b 48                 u8 [sp + 0x48] = a4
   910: 46 11 49 d8 00           u8 [sp + 73] = 0xd8
   915: 46 11 4a 85 00           u8 [sp + 74] = 0x85
   920: 46 11 4b 64              u8 [sp + 75] = 0x64
   924: 46 11 4c 56              u8 [sp + 76] = 0x56
   928: 46 11 4d 32              u8 [sp + 77] = 0x32
   932: 46 11 4e c8 00           u8 [sp + 78] = 0xc8
   937: 46 11 4f ae 00           u8 [sp + 79] = 0xae
   942: 46 11 50 50              u8 [sp + 80] = 0x50
   946: 33 0c 3c                 a5 = 0x3c
   949: 78 1c 51                 u8 [sp + 0x51] = a5
   952: 46 11 52 4f              u8 [sp + 82] = 0x4f
   956: 46 11 53 0c              u8 [sp + 83] = 0xc
   960: 46 11 54 4d              u8 [sp + 84] = 0x4d
   964: 46 11 55 5e              u8 [sp + 85] = 0x5e
   968: 46 11 56 19              u8 [sp + 86] = 0x19
   972: 46 11 57 a7 00           u8 [sp + 87] = 0xa7
   977: 46 11 58 bf 00           u8 [sp + 88] = 0xbf
   982: 46 11 59 a9 00           u8 [sp + 89] = 0xa9
   987: 46 11 5a bb 00           u8 [sp + 90] = 0xbb
   992: 46 11 5b 0f              u8 [sp + 91] = 0xf
   996: 46 11 5c a4 00           u8 [sp + 92] = 0xa4
  1001: 46 11 5d 96 00           u8 [sp + 93] = 0x96
  1006: 46 11 5e 87 00           u8 [sp + 94] = 0x87
  1011: 46 11 5f 47              u8 [sp + 95] = 0x47
  1015: 46 11 60 e6 00           u8 [sp + 96] = 0xe6
  1020: 46 11 61 3d              u8 [sp + 97] = 0x3d
  1024: 78 1c 62                 u8 [sp + 0x62] = a5
  1027: 78 1b 63                 u8 [sp + 0x63] = a4
  1030: 46 11 64 e7 00           u8 [sp + 100] = 0xe7
  1035: 46 11 65 4a              u8 [sp + 101] = 0x4a
  1039: 46 11 66 49              u8 [sp + 102] = 0x49
  1043: 46 11 67 dd 00           u8 [sp + 103] = 0xdd
  1048: 46 11 68 c4 00           u8 [sp + 104] = 0xc4
  1053: 46 11 69 a6 00           u8 [sp + 105] = 0xa6
  1058: 46 11 6a ec 00           u8 [sp + 106] = 0xec
  1063: 46 11 6b a8 00           u8 [sp + 107] = 0xa8
  1068: 46 11 6c 9a 00           u8 [sp + 108] = 0x9a
  1073: 46 11 6d 6a              u8 [sp + 109] = 0x6a
  1077: 46 11 6e 6f              u8 [sp + 110] = 0x6f
  1081: 46 11 6f 33              u8 [sp + 111] = 0x33
  1085: 46 11 70 9d 00           u8 [sp + 112] = 0x9d
  1090: 46 11 71 a3 00           u8 [sp + 113] = 0xa3
  1095: 46 11 72 33              u8 [sp + 114] = 0x33
  1099: 46 11 73 7f              u8 [sp + 115] = 0x7f
  1103: 46 11 74 d2 00           u8 [sp + 116] = 0xd2
  1108: 46 11 75 eb 00           u8 [sp + 117] = 0xeb
  1113: 46 11 76 55              u8 [sp + 118] = 0x55
  1117: 46 11 77 07              u8 [sp + 119] = 0x7
  1121: 95 16 ff 07              s1 = sp + 0x7ff
  1125: 95 66 80 03              s1 = s1 + 0x380
  1129: 95 17 78                 a0 = sp + 0x78
  1132: 33 09 00 01              a2 = 0x100
  1136: 33 08                    a1 = 0
  1138: 50 10 08 00 07           ra = 8, jump @130
      :                          @80 [@dyn 4]
  1143: 7b 15 10                 u64 [sp + 0x10] = s0
  1146: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  1149: 82 15 28                 s0 = u64 [sp + 0x28]
  1152: 56 17 08 4a 05           jump @95 if a0 >u 8
      :                          @81
  1157: 97 77 02                 a0 = a0 << 0x2
  1160: 33 08 00 00 01           a1 = 0x10000
  1165: c8 87 07                 a0 = a0 + a1
  1168: 81 77                    a0 = i32 [a0]
  1170: c8 87 07                 a0 = a0 + a1
  1173: 32 07                    jump [a0]
      :                          @82 [@dyn 5]
  1175: 95 18 32                 a1 = sp + 0x32
  1178: 33 09 03                 a2 = 0x3
  1181: 95 1a 78                 a3 = sp + 0x78
  1184: 33 0c 00 01              a5 = 0x100
  1188: 64 57                    a0 = s0
  1190: 33 0b                    a4 = 0
  1192: 0a 02                    ecalli 2 // 'read'
  1194: 95 16 ff 07              s1 = sp + 0x7ff
  1198: 95 66 80 03              s1 = s1 + 0x380
  1202: 46 16 01 01              u8 [s1 + 1] = 0x1
  1206: 7b 17 78 01              u64 [sp + 0x178] = a0
  1210: 95 17 ff 07              a0 = sp + 0x7ff
  1214: 95 77 81 03              a0 = a0 + 0x381
  1218: 33 08 01                 a1 = 0x1
  1221: 95 19 78 01              a2 = sp + 0x178
  1225: 33 0a 08                 a3 = 0x8
  1228: 0a 03                    ecalli 3 // 'write'
  1230: 95 17 32                 a0 = sp + 0x32
  1233: 33 08 03                 a1 = 0x3
  1236: 95 19 35                 a2 = sp + 0x35
  1239: 33 0a 03                 a3 = 0x3
  1242: 0a 03                    ecalli 3 // 'write'
  1244: 46 16 01 02              u8 [s1 + 1] = 0x2
  1248: 7b 17 78 01              u64 [sp + 0x178] = a0
  1252: 95 17 ff 07              a0 = sp + 0x7ff
  1256: 95 77 81 03              a0 = a0 + 0x381
  1260: 33 08 01                 a1 = 0x1
  1263: 95 19 78 01              a2 = sp + 0x178
  1267: 33 0a 08                 a3 = 0x8
  1270: 0a 03                    ecalli 3 // 'write'
  1272: 95 18 32                 a1 = sp + 0x32
  1275: 33 09 03                 a2 = 0x3
  1278: 95 1a 78                 a3 = sp + 0x78
  1281: 33 0c 00 01              a5 = 0x100
  1285: 64 57                    a0 = s0
  1287: 33 0b                    a4 = 0
  1289: 0a 02                    ecalli 2 // 'read'
  1291: 46 16 01 05              u8 [s1 + 1] = 0x5
  1295: 7b 17 78 01              u64 [sp + 0x178] = a0
  1299: 95 17 ff 07              a0 = sp + 0x7ff
  1303: 95 77 81 03              a0 = a0 + 0x381
  1307: 33 08 01                 a1 = 0x1
  1310: 95 19 78 01              a2 = sp + 0x178
  1314: 33 0a 08                 a3 = 0x8
  1317: 0a 03                    ecalli 3 // 'write'
  1319: 95 17 32                 a0 = sp + 0x32
  1322: 33 08                    a1 = 0
  1324: 0a 0f                    ecalli 15 // 'forget'
  1326: 46 16 01 06              u8 [s1 + 1] = 0x6
  1330: 7b 17 78 01              u64 [sp + 0x178] = a0
  1334: 95 17 ff 07              a0 = sp + 0x7ff
  1338: 95 77 81 03              a0 = a0 + 0x381
  1342: 33 08 01                 a1 = 0x1
  1345: 95 19 78 01              a2 = sp + 0x178
  1349: 33 0a 08                 a3 = 0x8
  1352: 0a 03                    ecalli 3 // 'write'
  1354: 28 80 04                 jump @95
      :                          @83 [@dyn 6]
  1357: 95 18 32                 a1 = sp + 0x32
  1360: 33 09 03                 a2 = 0x3
  1363: 95 1a 78                 a3 = sp + 0x78
  1366: 33 0c 00 01              a5 = 0x100
  1370: 64 57                    a0 = s0
  1372: 33 0b                    a4 = 0
  1374: 0a 02                    ecalli 2 // 'read'
  1376: 95 16 ff 07              s1 = sp + 0x7ff
  1380: 95 66 80 03              s1 = s1 + 0x380
  1384: 46 16 01 01              u8 [s1 + 1] = 0x1
  1388: 7b 17 78 01              u64 [sp + 0x178] = a0
  1392: 95 17 ff 07              a0 = sp + 0x7ff
  1396: 95 77 81 03              a0 = a0 + 0x381
  1400: 33 08 01                 a1 = 0x1
  1403: 95 19 78 01              a2 = sp + 0x178
  1407: 33 0a 08                 a3 = 0x8
  1410: 0a 03                    ecalli 3 // 'write'
  1412: 95 17 32                 a0 = sp + 0x32
  1415: 33 08 03                 a1 = 0x3
  1418: 33 09                    a2 = 0
  1420: 33 0a                    a3 = 0
  1422: 0a 03                    ecalli 3 // 'write'
  1424: 46 16 01 02              u8 [s1 + 1] = 0x2
  1428: 7b 17 78 01              u64 [sp + 0x178] = a0
  1432: 95 17 ff 07              a0 = sp + 0x7ff
  1436: 95 77 81 03              a0 = a0 + 0x381
  1440: 33 08 01                 a1 = 0x1
  1443: 95 19 78 01              a2 = sp + 0x178
  1447: 33 0a 08                 a3 = 0x8
  1450: 0a 03                    ecalli 3 // 'write'
  1452: 95 18 32                 a1 = sp + 0x32
  1455: 33 09 03                 a2 = 0x3
  1458: 95 1a 78                 a3 = sp + 0x78
  1461: 33 0c 00 01              a5 = 0x100
  1465: 64 57                    a0 = s0
  1467: 33 0b                    a4 = 0
  1469: 0a 02                    ecalli 2 // 'read'
  1471: 46 16 01 05              u8 [s1 + 1] = 0x5
  1475: 7b 17 78 01              u64 [sp + 0x178] = a0
  1479: 95 17 ff 07              a0 = sp + 0x7ff
  1483: 95 77 81 03              a0 = a0 + 0x381
  1487: 33 08 01                 a1 = 0x1
  1490: 95 19 78 01              a2 = sp + 0x178
  1494: 33 0a 08                 a3 = 0x8
  1497: 0a 03                    ecalli 3 // 'write'
  1499: 95 17 38                 a0 = sp + 0x38
  1502: 33 08 03                 a1 = 0x3
  1505: 0a 0e                    ecalli 14 // 'solicit'
  1507: 46 16 01 06              u8 [s1 + 1] = 0x6
  1511: 7b 17 78 01              u64 [sp + 0x178] = a0
  1515: 95 17 ff 07              a0 = sp + 0x7ff
  1519: 95 77 81 03              a0 = a0 + 0x381
  1523: 33 08 01                 a1 = 0x1
  1526: 95 19 78 01              a2 = sp + 0x178
  1530: 33 0a 08                 a3 = 0x8
  1533: 0a 03                    ecalli 3 // 'write'
  1535: 28 cb 03                 jump @95
      :                          @84 [@dyn 7]
  1538: 95 17 38                 a0 = sp + 0x38
  1541: 33 08 03                 a1 = 0x3
  1544: 0a 0e                    ecalli 14 // 'solicit'
  1546: 95 16 ff 07              s1 = sp + 0x7ff
  1550: 95 66 80 03              s1 = s1 + 0x380
  1554: 46 16 01 01              u8 [s1 + 1] = 0x1
  1558: 7b 17 78 01              u64 [sp + 0x178] = a0
  1562: 95 17 ff 07              a0 = sp + 0x7ff
  1566: 95 77 81 03              a0 = a0 + 0x381
  1570: 33 08 01                 a1 = 0x1
  1573: 95 19 78 01              a2 = sp + 0x178
  1577: 33 0a 08                 a3 = 0x8
  1580: 0a 03                    ecalli 3 // 'write'
  1582: 95 17 38                 a0 = sp + 0x38
  1585: 33 08 03                 a1 = 0x3
  1588: 0a 0d                    ecalli 13 // 'query'
  1590: 46 16 01 02              u8 [s1 + 1] = 0x2
  1594: 7b 17 78 01              u64 [sp + 0x178] = a0
  1598: 95 17 ff 07              a0 = sp + 0x7ff
  1602: 95 77 81 03              a0 = a0 + 0x381
  1606: 33 08 01                 a1 = 0x1
  1609: 95 19 78 01              a2 = sp + 0x178
  1613: 33 0a 08                 a3 = 0x8
  1616: 0a 03                    ecalli 3 // 'write'
  1618: 95 17 58                 a0 = sp + 0x58
  1621: 33 08 03                 a1 = 0x3
  1624: 0a 0d                    ecalli 13 // 'query'
  1626: 46 16 01 05              u8 [s1 + 1] = 0x5
  1630: 7b 17 78 01              u64 [sp + 0x178] = a0
  1634: 95 17 ff 07              a0 = sp + 0x7ff
  1638: 95 77 81 03              a0 = a0 + 0x381
  1642: 33 08 01                 a1 = 0x1
  1645: 95 19 78 01              a2 = sp + 0x178
  1649: 33 0a 08                 a3 = 0x8
  1652: 0a 03                    ecalli 3 // 'write'
  1654: 28 54 03                 jump @95
      :                          @85 [@dyn 8]
  1657: 95 17 38                 a0 = sp + 0x38
  1660: 33 08 03                 a1 = 0x3
  1663: 0a 0f                    ecalli 15 // 'forget'
  1665: 95 16 ff 07              s1 = sp + 0x7ff
  1669: 95 66 80 03              s1 = s1 + 0x380
  1673: 46 16 01 01              u8 [s1 + 1] = 0x1
  1677: 7b 17 78 01              u64 [sp + 0x178] = a0
  1681: 95 17 ff 07              a0 = sp + 0x7ff
  1685: 95 77 81 03              a0 = a0 + 0x381
  1689: 33 08 01                 a1 = 0x1
  1692: 95 19 78 01              a2 = sp + 0x178
  1696: 33 0a 08                 a3 = 0x8
  1699: 0a 03                    ecalli 3 // 'write'
  1701: 95 17 38                 a0 = sp + 0x38
  1704: 33 08 03                 a1 = 0x3
  1707: 0a 0d                    ecalli 13 // 'query'
  1709: 46 16 01 02              u8 [s1 + 1] = 0x2
  1713: 7b 17 78 01              u64 [sp + 0x178] = a0
  1717: 95 17 ff 07              a0 = sp + 0x7ff
  1721: 95 77 81 03              a0 = a0 + 0x381
  1725: 33 08 01                 a1 = 0x1
  1728: 95 19 78 01              a2 = sp + 0x178
  1732: 33 0a 08                 a3 = 0x8
  1735: 0a 03                    ecalli 3 // 'write'
  1737: 95 18 58                 a1 = sp + 0x58
  1740: 95 19 78                 a2 = sp + 0x78
  1743: 33 0b 03                 a4 = 0x3
  1746: 64 57                    a0 = s0
  1748: 33 0a                    a3 = 0
  1750: 0a 01                    ecalli 1 // 'lookup'
  1752: 46 16 01 05              u8 [s1 + 1] = 0x5
  1756: 7b 17 78 01              u64 [sp + 0x178] = a0
  1760: 95 17 ff 07              a0 = sp + 0x7ff
  1764: 95 77 81 03              a0 = a0 + 0x381
  1768: 33 08 01                 a1 = 0x1
  1771: 95 19 78 01              a2 = sp + 0x178
  1775: 33 0a 08                 a3 = 0x8
  1778: 0a 03                    ecalli 3 // 'write'
  1780: 33 07 e8 03              a0 = 0x3e8
  1784: 95 18 32                 a1 = sp + 0x32
  1787: 0a 06                    ecalli 6 // 'assign'
  1789: 46 16 01 06              u8 [s1 + 1] = 0x6
  1793: 7b 17 78 01              u64 [sp + 0x178] = a0
  1797: 95 17 ff 07              a0 = sp + 0x7ff
  1801: 95 77 81 03              a0 = a0 + 0x381
  1805: 33 08 01                 a1 = 0x1
  1808: 95 19 78 01              a2 = sp + 0x178
  1812: 33 0a 08                 a3 = 0x8
  1815: 0a 03                    ecalli 3 // 'write'
  1817: 28 b1 02                 jump @95
      :                          @86 [@dyn 9]
  1820: 95 18 38                 a1 = sp + 0x38
  1823: 95 19 78                 a2 = sp + 0x78
  1826: 33 0b 03                 a4 = 0x3
  1829: 64 57                    a0 = s0
  1831: 33 0a                    a3 = 0
  1833: 0a 01                    ecalli 1 // 'lookup'
  1835: 95 16 ff 07              s1 = sp + 0x7ff
  1839: 95 66 80 03              s1 = s1 + 0x380
  1843: 46 16 01 01              u8 [s1 + 1] = 0x1
  1847: 7b 17 78 01              u64 [sp + 0x178] = a0
  1851: 95 17 ff 07              a0 = sp + 0x7ff
  1855: 95 77 81 03              a0 = a0 + 0x381
  1859: 33 08 01                 a1 = 0x1
  1862: 95 19 78 01              a2 = sp + 0x178
  1866: 33 0a 08                 a3 = 0x8
  1869: 0a 03                    ecalli 3 // 'write'
  1871: 95 17 38                 a0 = sp + 0x38
  1874: 33 08 03                 a1 = 0x3
  1877: 0a 0d                    ecalli 13 // 'query'
  1879: 46 16 01 02              u8 [s1 + 1] = 0x2
  1883: 7b 17 78 01              u64 [sp + 0x178] = a0
  1887: 95 17 ff 07              a0 = sp + 0x7ff
  1891: 95 77 81 03              a0 = a0 + 0x381
  1895: 33 08 01                 a1 = 0x1
  1898: 95 19 78 01              a2 = sp + 0x178
  1902: 33 0a 08                 a3 = 0x8
  1905: 0a 03                    ecalli 3 // 'write'
  1907: 95 18 38                 a1 = sp + 0x38
  1910: 64 57                    a0 = s0
  1912: 0a 0c                    ecalli 12 // 'eject'
  1914: 46 16 01 05              u8 [s1 + 1] = 0x5
  1918: 7b 17 78 01              u64 [sp + 0x178] = a0
  1922: 95 17 ff 07              a0 = sp + 0x7ff
  1926: 95 77 81 03              a0 = a0 + 0x381
  1930: 33 08 01                 a1 = 0x1
  1933: 95 19 78 01              a2 = sp + 0x178
  1937: 33 0a 08                 a3 = 0x8
  1940: 0a 03                    ecalli 3 // 'write'
  1942: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  1952: 95 1a 38                 a3 = sp + 0x38
  1955: 33 08                    a1 = 0
  1957: 33 09                    a2 = 0
  1959: 33 0b                    a4 = 0
  1961: 0a 05                    ecalli 5 // 'bless'
  1963: 46 16 01 06              u8 [s1 + 1] = 0x6
  1967: 7b 17 78 01              u64 [sp + 0x178] = a0
  1971: 95 17 ff 07              a0 = sp + 0x7ff
  1975: 95 77 81 03              a0 = a0 + 0x381
  1979: 33 08 01                 a1 = 0x1
  1982: 95 19 78 01              a2 = sp + 0x178
  1986: 33 0a 08                 a3 = 0x8
  1989: 0a 03                    ecalli 3 // 'write'
  1991: 28 03 02                 jump @95
      :                          @87 [@dyn 10]
  1994: 95 17 38                 a0 = sp + 0x38
  1997: 33 08 03                 a1 = 0x3
  2000: 0a 0e                    ecalli 14 // 'solicit'
  2002: 95 15 ff 07              s0 = sp + 0x7ff
  2006: 95 55 80 03              s0 = s0 + 0x380
  2010: 46 15 01 01              u8 [s0 + 1] = 0x1
  2014: 7b 17 78 01              u64 [sp + 0x178] = a0
  2018: 95 17 ff 07              a0 = sp + 0x7ff
  2022: 95 77 81 03              a0 = a0 + 0x381
  2026: 33 08 01                 a1 = 0x1
  2029: 95 19 78 01              a2 = sp + 0x178
  2033: 33 0a 08                 a3 = 0x8
  2036: 0a 03                    ecalli 3 // 'write'
  2038: 95 17 38                 a0 = sp + 0x38
  2041: 33 08 03                 a1 = 0x3
  2044: 0a 0d                    ecalli 13 // 'query'
  2046: 46 15 01 02              u8 [s0 + 1] = 0x2
  2050: 7b 17 78 01              u64 [sp + 0x178] = a0
  2054: 95 17 ff 07              a0 = sp + 0x7ff
  2058: 95 77 81 03              a0 = a0 + 0x381
  2062: 33 08 01                 a1 = 0x1
  2065: 95 19 78 01              a2 = sp + 0x178
  2069: 33 0a 08                 a3 = 0x8
  2072: 0a 03                    ecalli 3 // 'write'
  2074: 95 15 78 01              s0 = sp + 0x178
  2078: 33 09 00 0a              a2 = 0xa00
  2082: 95 17 78 01              a0 = sp + 0x178
  2086: 33 08                    a1 = 0
  2088: 50 10 16 4a 03           ra = 22, jump @130
      :                          @88 [@dyn 11]
  2093: 33 06 50                 s1 = 0x50
  2096: 01                       fallthrough
      :                          @89
  2097: 95 18 38                 a1 = sp + 0x38
  2100: 33 09 20                 a2 = 0x20
  2103: 64 57                    a0 = s0
  2105: 50 10 18 87 02           ra = 24, jump @112
      :                          @90 [@dyn 12]
  2110: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2113: 95 55 20                 s0 = s0 + 0x20
  2116: 52 06 ed                 jump @89 if s1 != 0
      :                          @91
  2119: 95 18 78 01              a1 = sp + 0x178
  2123: 33 07                    a0 = 0
  2125: 0a 06                    ecalli 6 // 'assign'
  2127: 95 16 ff 07              s1 = sp + 0x7ff
  2131: 95 66 80 03              s1 = s1 + 0x380
  2135: 46 06 05                 u8 [s1 + 0] = 0x5
  2138: 7b 67 01                 u64 [s1 + 0x1] = a0
  2141: 95 17 ff 07              a0 = sp + 0x7ff
  2145: 95 77 80 03              a0 = a0 + 0x380
  2149: 33 08 01                 a1 = 0x1
  2152: 95 19 ff 07              a2 = sp + 0x7ff
  2156: 95 99 81 03              a2 = a2 + 0x381
  2160: 33 0a 08                 a3 = 0x8
  2163: 0a 03                    ecalli 3 // 'write'
  2165: 82 15 28                 s0 = u64 [sp + 0x28]
  2168: 28 52 01                 jump @95
      :                          @92 [@dyn 13]
  2171: 95 17 38                 a0 = sp + 0x38
  2174: 33 08 03                 a1 = 0x3
  2177: 0a 0f                    ecalli 15 // 'forget'
  2179: 95 16 ff 07              s1 = sp + 0x7ff
  2183: 95 66 80 03              s1 = s1 + 0x380
  2187: 46 16 01 01              u8 [s1 + 1] = 0x1
  2191: 7b 17 78 01              u64 [sp + 0x178] = a0
  2195: 95 17 ff 07              a0 = sp + 0x7ff
  2199: 95 77 81 03              a0 = a0 + 0x381
  2203: 33 08 01                 a1 = 0x1
  2206: 95 19 78 01              a2 = sp + 0x178
  2210: 33 0a 08                 a3 = 0x8
  2213: 0a 03                    ecalli 3 // 'write'
  2215: 95 17 38                 a0 = sp + 0x38
  2218: 33 08 03                 a1 = 0x3
  2221: 0a 0d                    ecalli 13 // 'query'
  2223: 46 16 01 02              u8 [s1 + 1] = 0x2
  2227: 7b 17 78 01              u64 [sp + 0x178] = a0
  2231: 95 17 ff 07              a0 = sp + 0x7ff
  2235: 95 77 81 03              a0 = a0 + 0x381
  2239: 33 08 01                 a1 = 0x1
  2242: 95 19 78 01              a2 = sp + 0x178
  2246: 33 0a 08                 a3 = 0x8
  2249: 0a 03                    ecalli 3 // 'write'
  2251: 28 ff 00                 jump @95
      :                          @93 [@dyn 14]
  2254: 95 18 38                 a1 = sp + 0x38
  2257: 95 19 78                 a2 = sp + 0x78
  2260: 33 0b 03                 a4 = 0x3
  2263: 64 57                    a0 = s0
  2265: 33 0a                    a3 = 0
  2267: 0a 01                    ecalli 1 // 'lookup'
  2269: 95 16 ff 07              s1 = sp + 0x7ff
  2273: 95 66 80 03              s1 = s1 + 0x380
  2277: 46 16 01 01              u8 [s1 + 1] = 0x1
  2281: 7b 17 78 01              u64 [sp + 0x178] = a0
  2285: 95 17 ff 07              a0 = sp + 0x7ff
  2289: 95 77 81 03              a0 = a0 + 0x381
  2293: 33 08 01                 a1 = 0x1
  2296: 95 19 78 01              a2 = sp + 0x178
  2300: 33 0a 08                 a3 = 0x8
  2303: 0a 03                    ecalli 3 // 'write'
  2305: 95 17 38                 a0 = sp + 0x38
  2308: 33 08 03                 a1 = 0x3
  2311: 0a 0d                    ecalli 13 // 'query'
  2313: 46 16 01 02              u8 [s1 + 1] = 0x2
  2317: 7b 17 78 01              u64 [sp + 0x178] = a0
  2321: 95 17 ff 07              a0 = sp + 0x7ff
  2325: 95 77 81 03              a0 = a0 + 0x381
  2329: 33 08 01                 a1 = 0x1
  2332: 95 19 78 01              a2 = sp + 0x178
  2336: 33 0a 08                 a3 = 0x8
  2339: 0a 03                    ecalli 3 // 'write'
  2341: 28 a5 00                 jump @95
      :                          @94 [@dyn 15]
  2344: 33 09 27 ea 0d           a2 = 0xdea27
  2349: 7b 19 08                 u64 [sp + 0x8] = a2
  2352: 95 17 38                 a0 = sp + 0x38
  2355: 33 08 03                 a1 = 0x3
  2358: 33 0a 27 ea 0d           a3 = 0xdea27
  2363: 0a 09                    ecalli 9 // 'new'
  2365: 95 16 ff 07              s1 = sp + 0x7ff
  2369: 95 66 80 03              s1 = s1 + 0x380
  2373: 46 16 01 01              u8 [s1 + 1] = 0x1
  2377: 7b 17 78 01              u64 [sp + 0x178] = a0
  2381: 95 17 ff 07              a0 = sp + 0x7ff
  2385: 95 77 81 03              a0 = a0 + 0x381
  2389: 33 08 01                 a1 = 0x1
  2392: 95 19 78 01              a2 = sp + 0x178
  2396: 33 0a 08                 a3 = 0x8
  2399: 0a 03                    ecalli 3 // 'write'
  2401: 95 17 38                 a0 = sp + 0x38
  2404: 82 15 08                 s0 = u64 [sp + 0x8]
  2407: 64 58                    a1 = s0
  2409: 64 59                    a2 = s0
  2411: 0a 0a                    ecalli 10 // 'upgrade'
  2413: 46 16 01 02              u8 [s1 + 1] = 0x2
  2417: 7b 17 78 01              u64 [sp + 0x178] = a0
  2421: 95 17 ff 07              a0 = sp + 0x7ff
  2425: 95 77 81 03              a0 = a0 + 0x381
  2429: 33 08 01                 a1 = 0x1
  2432: 95 19 78 01              a2 = sp + 0x178
  2436: 33 0a 08                 a3 = 0x8
  2439: 0a 03                    ecalli 3 // 'write'
  2441: 48 21 78 01 8f 03        u32 [sp + 376] = 0x38f
  2447: 48 21 80 01              u32 [sp + 384] = 0
  2451: 7a 15 7c 01              u32 [sp + 0x17c] = s0
  2455: 33 08 01                 a1 = 0x1
  2458: 33 09 01                 a2 = 0x1
  2461: 95 1a 78 01              a3 = sp + 0x178
  2465: 33 0b 01                 a4 = 0x1
  2468: 33 07                    a0 = 0
  2470: 0a 05                    ecalli 5 // 'bless'
  2472: 46 06 05                 u8 [s1 + 0] = 0x5
  2475: 7b 67 01                 u64 [s1 + 0x1] = a0
  2478: 95 17 ff 07              a0 = sp + 0x7ff
  2482: 95 77 80 03              a0 = a0 + 0x380
  2486: 33 08 01                 a1 = 0x1
  2489: 95 19 ff 07              a2 = sp + 0x7ff
  2493: 95 99 81 03              a2 = a2 + 0x381
  2497: 33 0a 08                 a3 = 0x8
  2500: 0a 03                    ecalli 3 // 'write'
  2502: 82 15 28                 s0 = u64 [sp + 0x28]
  2505: 01                       fallthrough
      :                          @95
  2506: 95 18 78                 a1 = sp + 0x78
  2509: 64 57                    a0 = s0
  2511: 0a 04                    ecalli 4 // 'info'
  2513: 46 16 01 08              u8 [s1 + 1] = 0x8
  2517: 7b 17 78 01              u64 [sp + 0x178] = a0
  2521: 95 17 ff 07              a0 = sp + 0x7ff
  2525: 95 77 81 03              a0 = a0 + 0x381
  2529: 33 08 01                 a1 = 0x1
  2532: 95 19 78 01              a2 = sp + 0x178
  2536: 33 0a 08                 a3 = 0x8
  2539: 0a 03                    ecalli 3 // 'write'
  2541: 0a                       ecalli 0 // 'gas'
  2542: 46 16 01 09              u8 [s1 + 1] = 0x9
  2546: 7b 17 78 01              u64 [sp + 0x178] = a0
  2550: 95 17 ff 07              a0 = sp + 0x7ff
  2554: 95 77 81 03              a0 = a0 + 0x381
  2558: 33 08 01                 a1 = 0x1
  2561: 95 19 78 01              a2 = sp + 0x178
  2565: 33 0a 08                 a3 = 0x8
  2568: 0a 03                    ecalli 3 // 'write'
  2570: 01                       fallthrough
      :                          @96
  2571: 49 21 90 01              u64 [sp + 400] = 0
  2575: 49 21 88 01              u64 [sp + 392] = 0
  2579: 49 21 80 01              u64 [sp + 384] = 0
  2583: 49 21 78 01              u64 [sp + 376] = 0
  2587: 82 19 20                 a2 = u64 [sp + 0x20]
  2590: 55 19 21 9a 00           jump @107 if a2 >=u 33
      :                          @97
  2595: 82 16 10                 s1 = u64 [sp + 0x10]
  2598: 97 65 20                 s0 = s1 << 0x20
  2601: 98 55 20                 s0 = s0 >> 0x20
  2604: 95 17 78 01              a0 = sp + 0x178
  2608: 82 18 18                 a1 = u64 [sp + 0x18]
  2611: 50 10 20 8d 00           ra = 32, jump @112
      :                          @98 [@dyn 16]
  2616: 3a 08 00 00 03           a1 = u64 [0x30000]
  2621: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  2631: ca 75 07                 a0 = s0 * a0
  2634: ae 87 44                 jump @103 if a0 >=u a1
      :                          @99
  2637: 51 16 09 07              jump @101 if s1 == 9
      :                          @100
  2641: 0a 08                    ecalli 8 // 'checkpoint'
  2643: 01                       fallthrough
      :                          @101
  2644: 95 57 2a                 a0 = s0 + 0x2a
  2647: 95 19 ff 07              a2 = sp + 0x7ff
  2651: 95 99 80 03              a2 = a2 + 0x380
  2655: 46 09 07                 u8 [a2 + 0] = 0x7
  2658: 7b 97 01                 u64 [a2 + 0x1] = a0
  2661: 95 17 ff 07              a0 = sp + 0x7ff
  2665: 95 77 80 03              a0 = a0 + 0x380
  2669: 33 08 01                 a1 = 0x1
  2672: 95 19 ff 07              a2 = sp + 0x7ff
  2676: 95 99 81 03              a2 = a2 + 0x381
  2680: 33 0a 08                 a3 = 0x8
  2683: 33 00 22                 ra = 0x22
  2686: 0a 03                    ecalli 3 // 'write'
  2688: 33 07                    a0 = 0
  2690: 33 08 01                 a1 = 0x1
  2693: 32 07                    jump [a0]
      :                          @102 [@dyn 17]
  2695: 33 07                    a0 = 0
  2697: 33 08 01                 a1 = 0x1
  2700: 32 07                    jump [a0]
      :                          @103
  2702: 95 17 78 01              a0 = sp + 0x178
  2706: 0a 10                    ecalli 16 // 'oyield'
  2708: 33 08 20                 a1 = 0x20
  2711: 95 17 78 01              a0 = sp + 0x178
  2715: 95 11 a8 03              sp = sp + 0x3a8
  2719: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2723: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2727: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2731: 95 11 f8 07              sp = sp + 0x7f8
  2735: 32 00                    ret
      :                          @104
  2737: 64 56                    s1 = s0
  2739: 28 62 f8                 jump @79
      :                          @105
  2742: 00                       trap
      :                          @106
  2743: 00                       trap
      :                          @107
  2744: 00                       trap
      :                          @108
  2745: 00                       trap
      :                          @109
  2746: 00                       trap
      :                          @110
  2747: 00                       trap
      :                          @111 [export #2: 'on_transfer']
  2748: 33 07                    a0 = 0
  2750: 32 00                    ret
      :                          @112
  2752: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2755: 7b 10 18                 u64 [sp + 0x18] = ra
  2758: 7b 15 10                 u64 [sp + 0x10] = s0
  2761: 7b 16 08                 u64 [sp + 0x8] = s1
  2764: 53 19 10 64              jump @121 if a2 <u 16
      :                          @113
  2768: 8d 7a                    i32 a3 = -a0
  2770: 84 a2 07                 t0 = a3 & 0x7
  2773: c8 27 0b                 a4 = a0 + t0
  2776: 51 02 15                 jump @116 if t0 == 0
      :                          @114
  2779: 64 8c                    a5 = a1
  2781: 64 75                    s0 = a0
  2783: 01                       fallthrough
      :                          @115
  2784: 7c ca                    a3 = u8 [a5]
  2786: 78 5a                    u8 [s0] = a3
  2788: 95 55 01                 s0 = s0 + 0x1
  2791: 95 cc 01                 a5 = a5 + 0x1
  2794: ac b5 f6                 jump @115 if s0 <u a4
      :                          @116
  2797: c8 28 03                 t1 = a1 + t0
  2800: c9 29 02                 t0 = a2 - t0
  2803: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2806: 84 38 07                 a1 = t1 & 0x7
  2809: c8 4b 0a                 a3 = a4 + t2
  2812: 51 08 3b                 jump @123 if a1 == 0
      :                          @117
  2815: 58 04 4b                 jump @126 if t2 <=s 0
      :                          @118
  2818: 97 38 03                 a1 = t1 << 0x3
  2821: 84 80 38                 ra = a1 & 0x38
  2824: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2827: 82 c5                    s0 = u64 [a5]
  2829: 8d 88                    i32 a1 = -a1
  2831: 84 88 38                 a1 = a1 & 0x38
  2834: 95 cc 08                 a5 = a5 + 0x8
  2837: 01                       fallthrough
      :                          @119
  2838: 82 c6                    s1 = u64 [a5]
  2840: d0 05 05                 s0 = s0 >> ra
  2843: cf 86 09                 a2 = s1 << a1
  2846: d4 59 09                 a2 = a2 | s0
  2849: 7b b9                    u64 [a4] = a2
  2851: 95 bb 08                 a4 = a4 + 0x8
  2854: 95 cc 08                 a5 = a5 + 0x8
  2857: 64 65                    s0 = s1
  2859: ac ab eb                 jump @119 if a4 <u a3
      :                          @120
  2862: 28 1c                    jump @126
      :                          @121
  2864: 64 7a                    a3 = a0
  2866: 52 09 21                 jump @127 if a2 != 0
      :                          @122
  2869: 28 2f                    jump @129
      :                          @123
  2871: 58 04 13                 jump @126 if t2 <=s 0
      :                          @124
  2874: 64 38                    a1 = t1
  2876: 01                       fallthrough
      :                          @125
  2877: 82 89                    a2 = u64 [a1]
  2879: 7b b9                    u64 [a4] = a2
  2881: 95 bb 08                 a4 = a4 + 0x8
  2884: 95 88 08                 a1 = a1 + 0x8
  2887: ac ab f6                 jump @125 if a4 <u a3
      :                          @126
  2890: c8 43 08                 a1 = t1 + t2
  2893: 84 29 07                 a2 = t0 & 0x7
  2896: 51 09 14                 jump @129 if a2 == 0
      :                          @127
  2899: c8 a9 09                 a2 = a2 + a3
  2902: 01                       fallthrough
      :                          @128
  2903: 7c 8b                    a4 = u8 [a1]
  2905: 78 ab                    u8 [a3] = a4
  2907: 95 aa 01                 a3 = a3 + 0x1
  2910: 95 88 01                 a1 = a1 + 0x1
  2913: ac 9a f6                 jump @128 if a3 <u a2
      :                          @129
  2916: 82 10 18                 ra = u64 [sp + 0x18]
  2919: 82 15 10                 s0 = u64 [sp + 0x10]
  2922: 82 16 08                 s1 = u64 [sp + 0x8]
  2925: 95 11 20                 sp = sp + 0x20
  2928: 32 00                    ret
      :                          @130
  2930: 53 19 10 48              jump @139 if a2 <u 16
      :                          @131
  2934: 8d 7a                    i32 a3 = -a0
  2936: 84 aa 07                 a3 = a3 & 0x7
  2939: c8 a7 0b                 a4 = a0 + a3
  2942: 51 0a 0e                 jump @134 if a3 == 0
      :                          @132
  2945: 64 7c                    a5 = a0
  2947: 01                       fallthrough
      :                          @133
  2948: 78 c8                    u8 [a5] = a1
  2950: 95 cc 01                 a5 = a5 + 0x1
  2953: ac bc fb                 jump @133 if a5 <u a4
      :                          @134
  2956: c9 a9 03                 t1 = a2 - a3
  2959: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2962: c8 cb 0a                 a3 = a4 + a5
  2965: 58 0c 1d                 jump @137 if a5 <=s 0
      :                          @135
  2968: 84 82 ff 00              t0 = a1 & 0xff
  2972: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  2982: ca 92 0c                 a5 = t0 * a2
  2985: 01                       fallthrough
      :                          @136
  2986: 7b bc                    u64 [a4] = a5
  2988: 95 bb 08                 a4 = a4 + 0x8
  2991: ac ab fb                 jump @136 if a4 <u a3
      :                          @137
  2994: 84 39 07                 a2 = t1 & 0x7
  2997: 52 09 0a                 jump @140 if a2 != 0
      :                          @138
  3000: 28 13                    jump @142
      :                          @139
  3002: 64 7a                    a3 = a0
  3004: 51 09 0f                 jump @142 if a2 == 0
      :                          @140
  3007: c8 a9 09                 a2 = a2 + a3
  3010: 01                       fallthrough
      :                          @141
  3011: 78 a8                    u8 [a3] = a1
  3013: 95 aa 01                 a3 = a3 + 0x1
  3016: ac 9a fb                 jump @141 if a3 <u a2
      :                          @142
  3019: 32 00                    ret
