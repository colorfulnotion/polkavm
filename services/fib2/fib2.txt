// RO data = 36/36 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [10, 0, 255, 255, 12, 0, 255, 255, 14, 0, 255, 255, 16, 0, 255, 255, 18, 0, 255, 255, 20, 0, 255, 255, 26, 0, 255, 255, 28, 0, 255, 255, 30, 0, 255, 255]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 1018
// Code size = 3274 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 96 00 00 00           jump @13
      :                          @2
    10: 28 11 0b                 jump @86
      :                          @3 [export #0: 'refine']
    13: 95 11 d8                 sp = sp + 0xffffffffffffffd8
    16: 7b 10 20                 u64 [sp + 0x20] = ra
    19: 7b 15 18                 u64 [sp + 0x18] = s0
    22: 7b 16 10                 u64 [sp + 0x10] = s1
    25: 49 11 08                 u64 [sp + 8] = 0
    28: 49 01                    u64 [sp + 0] = 0
    30: 64 17                    a0 = sp
    32: 33 09 10                 a2 = 0x10
    35: 33 0a 05                 a3 = 0x5
    38: 33 08                    a1 = 0
    40: 33 0b                    a4 = 0
    42: 33 0c                    a5 = 0
    44: 0a 12                    ecalli 18 // 'fetch'
    46: 01                       fallthrough
      :                          @4
    47: 51 17 ff 42              jump @11 if a0 == 4294967295
      :                          @5
    51: 81 17 04                 a0 = i32 [sp + 0x4]
    54: 81 18 08                 a1 = i32 [sp + 0x8]
    57: 81 15                    s0 = i32 [sp]
    59: be 78 08                 i32 a1 = a1 + a0
    62: 83 59 01                 i32 a2 = s0 + 0x1
    65: 7a 19                    u32 [sp] = a2
    67: 7a 18 04                 u32 [sp + 0x4] = a1
    70: 7a 17 08                 u32 [sp + 0x8] = a0
    73: 64 17                    a0 = sp
    75: 33 08 10                 a1 = 0x10
    78: 0a 13                    ecalli 19 // 'export'
    80: 01                       fallthrough
      :                          @6
    81: 51 05 37                 jump @12 if s0 == 0
      :                          @7
    84: 8d 55                    i32 s0 = -s0
    86: 33 06 01                 s1 = 0x1
    89: 01                       fallthrough
      :                          @8
    90: 7a 16 0c                 u32 [sp + 0xc] = s1
    93: 64 17                    a0 = sp
    95: 33 08 10                 a1 = 0x10
    98: 0a 13                    ecalli 19 // 'export'
   100: 01                       fallthrough
      :                          @9
   101: 83 66 01                 i32 s1 = s1 + 0x1
   104: be 65 07                 i32 a0 = s0 + s1
   107: 52 17 01 ef              jump @8 if a0 != 1
      :                          @10
   111: 28 19                    jump @12
      :                          @11
   113: 14 07 01 00 00 00 01 00 00 00 a0 = 0x100000001
   123: 7b 17                    u64 [sp] = a0
   125: 48 11 08                 u32 [sp + 8] = 0
   128: 64 17                    a0 = sp
   130: 33 08 10                 a1 = 0x10
   133: 0a 13                    ecalli 19 // 'export'
   135: 01                       fallthrough
      :                          @12
   136: 33 08 10                 a1 = 0x10
   139: 64 17                    a0 = sp
   141: 82 10 20                 ra = u64 [sp + 0x20]
   144: 82 15 18                 s0 = u64 [sp + 0x18]
   147: 82 16 10                 s1 = u64 [sp + 0x10]
   150: 95 11 28                 sp = sp + 0x28
   153: 32 00                    ret
      :                          @13 [export #1: 'accumulate']
   155: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   159: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   163: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   167: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   171: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
   175: 64 86                    s1 = a1
   177: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
   180: 33 0b ff                 a4 = 0xffffffffffffffff
   183: 51 06 49 0a              jump @82 if s1 == 0
      :                          @14
   187: 95 7c 08                 a5 = a0 + 0x8
   190: 7d c8                    a1 = i8 [a5]
   192: 33 05 01                 s0 = 0x1
   195: 5a 08 69                 jump @22 if a1 >s 0
      :                          @15
   198: 84 88 ff 00              a1 = a1 & 0xff
   202: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
   205: 84 99 ff 00              a2 = a2 & 0xff
   209: 33 0a bf 00              a3 = 0xbf
   213: 33 05 02                 s0 = 0x2
   216: ac a9 54                 jump @22 if a2 <u a3
      :                          @16
   219: 84 89 e0 00              a2 = a1 & 0xe0
   223: 33 0a c0 00              a3 = 0xc0
   227: 33 05 03                 s0 = 0x3
   230: aa a9 46                 jump @22 if a2 == a3
      :                          @17
   233: 84 89 f0 00              a2 = a1 & 0xf0
   237: 33 0a e0 00              a3 = 0xe0
   241: 33 05 04                 s0 = 0x4
   244: aa a9 38                 jump @22 if a2 == a3
      :                          @18
   247: 84 89 f8 00              a2 = a1 & 0xf8
   251: 33 0a f0 00              a3 = 0xf0
   255: 33 05 05                 s0 = 0x5
   258: aa a9 2a                 jump @22 if a2 == a3
      :                          @19
   261: 84 89 fc 00              a2 = a1 & 0xfc
   265: 33 0a f8 00              a3 = 0xf8
   269: 33 05 06                 s0 = 0x6
   272: aa a9 1c                 jump @22 if a2 == a3
      :                          @20
   275: 84 89 fe 00              a2 = a1 & 0xfe
   279: 33 0a fc 00              a3 = 0xfc
   283: 33 05 07                 s0 = 0x7
   286: aa a9 0e                 jump @22 if a2 == a3
      :                          @21
   289: 88 88 fe 00              a1 = a1 <u 0xfe
   293: 85 85 01                 s0 = a1 ^ 0x1
   296: 97 55 03                 s0 = s0 << 0x3
   299: 01                       fallthrough
      :                          @22
   300: ac 56 d4 09              jump @82 if s1 <u s0
      :                          @23
   304: 80 77 04                 a0 = u32 [a0 + 0x4]
   307: 7b 17 18                 u64 [sp + 0x18] = a0
   310: 64 c7                    a0 = a5
   312: 64 58                    a1 = s0
   314: 7b 1c 20                 u64 [sp + 0x20] = a5
   317: 50 10 02 ef 0a           ra = 2, jump @118
      :                          @24 [@dyn 1]
   322: 8e 77                    a0 = a0 >u 0
   324: d8 65 08                 a1 = s0 <u s1
   327: d2 87 07                 a0 = a0 & a1
   330: 51 07 29                 jump @28 if a0 == 0
      :                          @25
   333: 82 17 20                 a0 = u64 [sp + 0x20]
   336: c8 57 07                 a0 = a0 + s0
   339: 7c 78                    a1 = u8 [a0]
   341: e4 56 06                 s1 = maxu(s1, s0)
   344: 95 7c 01                 a5 = a0 + 0x1
   347: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
   350: c8 76 06                 s1 = s1 + a0
   353: 33 0b ff                 a4 = 0xffffffffffffffff
   356: 51 08 15                 jump @29 if a1 == 0
      :                          @26
   359: 33 0a                    a3 = 0
   361: 33 09                    a2 = 0
   363: 55 16 40 b6 00           jump @43 if s1 >=u 64
      :                          @27
   368: 28 90 09                 jump @82
      :                          @28
   371: 33 0b ff                 a4 = 0xffffffffffffffff
   374: 28 8a 09                 jump @82
      :                          @29
   377: 51 06 89 00              jump @41 if s1 == 0
      :                          @30
   381: 7d c7                    a0 = i8 [a5]
   383: 33 05 01                 s0 = 0x1
   386: 5a 07 68                 jump @38 if a0 >s 0
      :                          @31
   389: 84 77 ff 00              a0 = a0 & 0xff
   393: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   396: 84 8a ff 00              a3 = a1 & 0xff
   400: 33 09 bf 00              a2 = 0xbf
   404: 33 05 02                 s0 = 0x2
   407: ac 9a 53                 jump @38 if a3 <u a2
      :                          @32
   410: 84 7a e0 00              a3 = a0 & 0xe0
   414: 33 09 c0 00              a2 = 0xc0
   418: 33 05 03                 s0 = 0x3
   421: aa 9a 45                 jump @38 if a3 == a2
      :                          @33
   424: 84 7a f0 00              a3 = a0 & 0xf0
   428: 33 09 e0 00              a2 = 0xe0
   432: 33 05 04                 s0 = 0x4
   435: aa 9a 37                 jump @38 if a3 == a2
      :                          @34
   438: 84 7a f8 00              a3 = a0 & 0xf8
   442: 33 09 f0 00              a2 = 0xf0
   446: 33 05 05                 s0 = 0x5
   449: aa 9a 29                 jump @38 if a3 == a2
      :                          @35
   452: 84 7a fc 00              a3 = a0 & 0xfc
   456: 33 09 f8 00              a2 = 0xf8
   460: 33 05 06                 s0 = 0x6
   463: aa 9a 1b                 jump @38 if a3 == a2
      :                          @36
   466: 84 7a fe 00              a3 = a0 & 0xfe
   470: 33 09 fc 00              a2 = 0xfc
   474: 33 05 07                 s0 = 0x7
   477: aa 9a 0d                 jump @38 if a3 == a2
      :                          @37
   480: 33 09 fd 00              a2 = 0xfd
   484: 33 05 08                 s0 = 0x8
   487: ae 79 1b                 jump @41 if a2 >=u a0
      :                          @38
   490: ac 56 2f 09              jump @84 if s1 <u s0
      :                          @39
   494: 64 c7                    a0 = a5
   496: 64 58                    a1 = s0
   498: 7b 1c 20                 u64 [sp + 0x20] = a5
   501: 50 10 04 37 0a           ra = 4, jump @118
      :                          @40 [@dyn 2]
   506: 82 1c 20                 a5 = u64 [sp + 0x20]
   509: 33 0b ff                 a4 = 0xffffffffffffffff
   512: 28 07                    jump @42
      :                          @41
   514: 33 05                    s0 = 0
   516: 33 07                    a0 = 0
   518: 01                       fallthrough
      :                          @42
   519: c8 5c 09                 a2 = a5 + s0
   522: e4 56 08                 a1 = maxu(s1, s0)
   525: c9 58 08                 a1 = a1 - s0
   528: e6 78 0a                 a3 = minu(a1, a0)
   531: c8 79 0c                 a5 = a2 + a0
   534: e4 78 06                 s1 = maxu(a1, a0)
   537: c9 76 06                 s1 = s1 - a0
   540: 53 16 40 e4 08           jump @82 if s1 <u 64
      :                          @43
   545: 95 68 c0                 a1 = s1 + 0xffffffffffffffc0
   548: 51 08 88 00              jump @55 if a1 == 0
      :                          @44
   552: 95 c7 40                 a0 = a5 + 0x40
   555: 7d 7b                    a4 = i8 [a0]
   557: 33 06 01                 s1 = 0x1
   560: 5a 0b 6c                 jump @53 if a4 >s 0
      :                          @45
   563: 84 b5 ff 00              s0 = a4 & 0xff
   567: 83 5b ff                 i32 a4 = s0 + 0xffffffffffffffff
   570: 84 bb ff 00              a4 = a4 & 0xff
   574: 33 0c bf 00              a5 = 0xbf
   578: 33 06 02                 s1 = 0x2
   581: ac cb 53                 jump @52 if a4 <u a5
      :                          @46
   584: 84 5b e0 00              a4 = s0 & 0xe0
   588: 33 0c c0 00              a5 = 0xc0
   592: 33 06 03                 s1 = 0x3
   595: aa cb 45                 jump @52 if a4 == a5
      :                          @47
   598: 84 5b f0 00              a4 = s0 & 0xf0
   602: 33 0c e0 00              a5 = 0xe0
   606: 33 06 04                 s1 = 0x4
   609: aa cb 37                 jump @52 if a4 == a5
      :                          @48
   612: 84 5b f8 00              a4 = s0 & 0xf8
   616: 33 0c f0 00              a5 = 0xf0
   620: 33 06 05                 s1 = 0x5
   623: aa cb 29                 jump @52 if a4 == a5
      :                          @49
   626: 84 5b fc 00              a4 = s0 & 0xfc
   630: 33 0c f8 00              a5 = 0xf8
   634: 33 06 06                 s1 = 0x6
   637: aa cb 1b                 jump @52 if a4 == a5
      :                          @50
   640: 84 5b fe 00              a4 = s0 & 0xfe
   644: 33 0c fc 00              a5 = 0xfc
   648: 33 06 07                 s1 = 0x7
   651: aa cb 0d                 jump @52 if a4 == a5
      :                          @51
   654: 33 0b fe 00              a4 = 0xfe
   658: 33 06 08                 s1 = 0x8
   661: ac b5 17                 jump @55 if s0 <u a4
      :                          @52
   664: ac 68 82 08              jump @85 if a1 <u s1
      :                          @53
   668: 64 68                    a1 = s1
   670: 64 96                    s1 = a2
   672: 64 a5                    s0 = a3
   674: 50 10 06 8a 09           ra = 6, jump @118
      :                          @54 [@dyn 3]
   679: 64 5a                    a3 = s0
   681: 64 69                    a2 = s1
   683: 01                       fallthrough
      :                          @55
   684: 46 11 29                 u8 [sp + 41] = 0
   687: 81 95                    s0 = i32 [a2]
   689: 95 17 29                 a0 = sp + 0x29
   692: 33 08 01                 a1 = 0x1
   695: 7b 19 08                 u64 [sp + 0x8] = a2
   698: 7b 1a 10                 u64 [sp + 0x10] = a3
   701: 0a 03                    ecalli 3 // 'write'
   703: 46 11 2a 6a              u8 [sp + 42] = 0x6a
   707: 46 11 2b 61              u8 [sp + 43] = 0x61
   711: 46 11 2c 6d              u8 [sp + 44] = 0x6d
   715: 46 11 2d 44              u8 [sp + 45] = 0x44
   719: 46 11 2e 4f              u8 [sp + 46] = 0x4f
   723: 46 11 2f 54              u8 [sp + 47] = 0x54
   727: 46 11 30 6a              u8 [sp + 48] = 0x6a
   731: 46 11 31 0d              u8 [sp + 49] = 0xd
   735: 46 11 32 4a              u8 [sp + 50] = 0x4a
   739: 46 11 33 19              u8 [sp + 51] = 0x19
   743: 46 11 34 d1 00           u8 [sp + 52] = 0xd1
   748: 46 11 35 99 00           u8 [sp + 53] = 0x99
   753: 46 11 36 50              u8 [sp + 54] = 0x50
   757: 46 11 37 57              u8 [sp + 55] = 0x57
   761: 46 11 38 13              u8 [sp + 56] = 0x13
   765: 46 11 39 fc 00           u8 [sp + 57] = 0xfc
   770: 46 11 3a 65              u8 [sp + 58] = 0x65
   774: 46 11 3b f5 00           u8 [sp + 59] = 0xf5
   779: 46 11 3c 31              u8 [sp + 60] = 0x31
   783: 46 11 3d 03              u8 [sp + 61] = 0x3
   787: 46 11 3e 8e 00           u8 [sp + 62] = 0x8e
   792: 46 11 3f 73              u8 [sp + 63] = 0x73
   796: 33 0b f1 00              a4 = 0xf1
   800: 78 1b 40                 u8 [sp + 0x40] = a4
   803: 46 11 41 d8 00           u8 [sp + 65] = 0xd8
   808: 46 11 42 85 00           u8 [sp + 66] = 0x85
   813: 46 11 43 64              u8 [sp + 67] = 0x64
   817: 46 11 44 56              u8 [sp + 68] = 0x56
   821: 46 11 45 32              u8 [sp + 69] = 0x32
   825: 46 11 46 c8 00           u8 [sp + 70] = 0xc8
   830: 33 06 ae 00              s1 = 0xae
   834: 78 16 47                 u8 [sp + 0x47] = s1
   837: 46 11 48 50              u8 [sp + 72] = 0x50
   841: 33 0c 3c                 a5 = 0x3c
   844: 78 1c 49                 u8 [sp + 0x49] = a5
   847: 46 11 4a 4f              u8 [sp + 74] = 0x4f
   851: 46 11 4b 0c              u8 [sp + 75] = 0xc
   855: 46 11 4c 4d              u8 [sp + 76] = 0x4d
   859: 46 11 4d 5e              u8 [sp + 77] = 0x5e
   863: 46 11 4e 19              u8 [sp + 78] = 0x19
   867: 46 11 4f a7 00           u8 [sp + 79] = 0xa7
   872: 46 11 50 bf 00           u8 [sp + 80] = 0xbf
   877: 46 11 51 a9 00           u8 [sp + 81] = 0xa9
   882: 46 11 52 bb 00           u8 [sp + 82] = 0xbb
   887: 46 11 53 0f              u8 [sp + 83] = 0xf
   891: 46 11 54 a4 00           u8 [sp + 84] = 0xa4
   896: 46 11 55 96 00           u8 [sp + 85] = 0x96
   901: 46 11 56 87 00           u8 [sp + 86] = 0x87
   906: 46 11 57 47              u8 [sp + 87] = 0x47
   910: 46 11 58 e6 00           u8 [sp + 88] = 0xe6
   915: 46 11 59 3d              u8 [sp + 89] = 0x3d
   919: 78 1c 5a                 u8 [sp + 0x5a] = a5
   922: 78 1b 5b                 u8 [sp + 0x5b] = a4
   925: 46 11 5c e7 00           u8 [sp + 92] = 0xe7
   930: 46 11 5d 4a              u8 [sp + 93] = 0x4a
   934: 46 11 5e 49              u8 [sp + 94] = 0x49
   938: 46 11 5f dd 00           u8 [sp + 95] = 0xdd
   943: 46 11 60 c4 00           u8 [sp + 96] = 0xc4
   948: 46 11 61 a6 00           u8 [sp + 97] = 0xa6
   953: 46 11 62 ec 00           u8 [sp + 98] = 0xec
   958: 46 11 63 a8 00           u8 [sp + 99] = 0xa8
   963: 46 11 64 9a 00           u8 [sp + 100] = 0x9a
   968: 46 11 65 6a              u8 [sp + 101] = 0x6a
   972: 46 11 66 6f              u8 [sp + 102] = 0x6f
   976: 46 11 67 33              u8 [sp + 103] = 0x33
   980: 46 11 68 9d 00           u8 [sp + 104] = 0x9d
   985: 46 11 69 a3 00           u8 [sp + 105] = 0xa3
   990: 46 11 6a 33              u8 [sp + 106] = 0x33
   994: 46 11 6b 7f              u8 [sp + 107] = 0x7f
   998: 46 11 6c d2 00           u8 [sp + 108] = 0xd2
  1003: 46 11 6d eb 00           u8 [sp + 109] = 0xeb
  1008: 46 11 6e 55              u8 [sp + 110] = 0x55
  1012: 46 11 6f 07              u8 [sp + 111] = 0x7
  1016: 95 17 70                 a0 = sp + 0x70
  1019: 33 09 00 01              a2 = 0x100
  1023: 33 08                    a1 = 0
  1025: 50 10 08 d0 07           ra = 8, jump @105
      :                          @56 [@dyn 4]
  1030: 7b 15 20                 u64 [sp + 0x20] = s0
  1033: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  1036: 56 17 08 d0 00           jump @59 if a0 >u 8
      :                          @57
  1041: 97 77 02                 a0 = a0 << 0x2
  1044: 33 08 00 00 01           a1 = 0x10000
  1049: c8 87 07                 a0 = a0 + a1
  1052: 81 77                    a0 = i32 [a0]
  1054: c8 87 07                 a0 = a0 + a1
  1057: 82 16 18                 s1 = u64 [sp + 0x18]
  1060: 32 07                    jump [a0]
      :                          @58 [@dyn 5]
  1062: 95 18 2a                 a1 = sp + 0x2a
  1065: 33 09 03                 a2 = 0x3
  1068: 95 1a 70                 a3 = sp + 0x70
  1071: 33 0c 00 01              a5 = 0x100
  1075: 64 67                    a0 = s1
  1077: 33 0b                    a4 = 0
  1079: 0a 02                    ecalli 2 // 'read'
  1081: 95 15 ff 07              s0 = sp + 0x7ff
  1085: 95 55 78 03              s0 = s0 + 0x378
  1089: 46 15 01 01              u8 [s0 + 1] = 0x1
  1093: 7b 17 70 01              u64 [sp + 0x170] = a0
  1097: 95 17 ff 07              a0 = sp + 0x7ff
  1101: 95 77 79 03              a0 = a0 + 0x379
  1105: 33 08 01                 a1 = 0x1
  1108: 95 19 70 01              a2 = sp + 0x170
  1112: 33 0a 08                 a3 = 0x8
  1115: 0a 03                    ecalli 3 // 'write'
  1117: 95 17 2a                 a0 = sp + 0x2a
  1120: 33 08 03                 a1 = 0x3
  1123: 95 19 2d                 a2 = sp + 0x2d
  1126: 33 0a 03                 a3 = 0x3
  1129: 0a 03                    ecalli 3 // 'write'
  1131: 46 15 01 02              u8 [s0 + 1] = 0x2
  1135: 7b 17 70 01              u64 [sp + 0x170] = a0
  1139: 95 17 ff 07              a0 = sp + 0x7ff
  1143: 95 77 79 03              a0 = a0 + 0x379
  1147: 33 08 01                 a1 = 0x1
  1150: 95 19 70 01              a2 = sp + 0x170
  1154: 33 0a 08                 a3 = 0x8
  1157: 0a 03                    ecalli 3 // 'write'
  1159: 95 18 2a                 a1 = sp + 0x2a
  1162: 33 09 03                 a2 = 0x3
  1165: 95 1a 70                 a3 = sp + 0x70
  1168: 33 0c 00 01              a5 = 0x100
  1172: 64 67                    a0 = s1
  1174: 33 0b                    a4 = 0
  1176: 0a 02                    ecalli 2 // 'read'
  1178: 46 15 01 05              u8 [s0 + 1] = 0x5
  1182: 7b 17 70 01              u64 [sp + 0x170] = a0
  1186: 95 17 ff 07              a0 = sp + 0x7ff
  1190: 95 77 79 03              a0 = a0 + 0x379
  1194: 33 08 01                 a1 = 0x1
  1197: 95 19 70 01              a2 = sp + 0x170
  1201: 33 0a 08                 a3 = 0x8
  1204: 0a 03                    ecalli 3 // 'write'
  1206: 95 17 2a                 a0 = sp + 0x2a
  1209: 33 08                    a1 = 0
  1211: 0a 0f                    ecalli 15 // 'forget'
  1213: 46 15 01 06              u8 [s0 + 1] = 0x6
  1217: 7b 17 70 01              u64 [sp + 0x170] = a0
  1221: 95 17 ff 07              a0 = sp + 0x7ff
  1225: 95 77 79 03              a0 = a0 + 0x379
  1229: 33 08 01                 a1 = 0x1
  1232: 95 19 70 01              a2 = sp + 0x170
  1236: 33 0a 08                 a3 = 0x8
  1239: 0a 03                    ecalli 3 // 'write'
  1241: 28 55 05                 jump @73
      :                          @59
  1244: 82 16 18                 s1 = u64 [sp + 0x18]
  1247: 82 18 20                 a1 = u64 [sp + 0x20]
  1250: 95 15 ff 07              s0 = sp + 0x7ff
  1254: 95 55 78 03              s0 = s0 + 0x378
  1258: 52 28 00 04 44 05        jump @73 if a1 != 1024
      :                          @60
  1264: 33 05 27 ea 0d           s0 = 0xdea27
  1269: 95 17 30                 a0 = sp + 0x30
  1272: 33 08 03                 a1 = 0x3
  1275: 33 09 27 ea 0d           a2 = 0xdea27
  1280: 33 0a 27 ea 0d           a3 = 0xdea27
  1285: 0a 09                    ecalli 9 // 'new'
  1287: 95 19 ff 07              a2 = sp + 0x7ff
  1291: 95 99 78 03              a2 = a2 + 0x378
  1295: 46 19 01 01              u8 [a2 + 1] = 0x1
  1299: 7b 17 70 01              u64 [sp + 0x170] = a0
  1303: 95 17 ff 07              a0 = sp + 0x7ff
  1307: 95 77 79 03              a0 = a0 + 0x379
  1311: 33 08 01                 a1 = 0x1
  1314: 95 19 70 01              a2 = sp + 0x170
  1318: 33 0a 08                 a3 = 0x8
  1321: 0a 03                    ecalli 3 // 'write'
  1323: 95 17 30                 a0 = sp + 0x30
  1326: 64 58                    a1 = s0
  1328: 64 59                    a2 = s0
  1330: 0a 0a                    ecalli 10 // 'upgrade'
  1332: 95 19 ff 07              a2 = sp + 0x7ff
  1336: 95 99 78 03              a2 = a2 + 0x378
  1340: 46 19 01 02              u8 [a2 + 1] = 0x2
  1344: 7b 17 70 01              u64 [sp + 0x170] = a0
  1348: 95 17 ff 07              a0 = sp + 0x7ff
  1352: 95 77 79 03              a0 = a0 + 0x379
  1356: 33 08 01                 a1 = 0x1
  1359: 95 19 70 01              a2 = sp + 0x170
  1363: 33 0a 08                 a3 = 0x8
  1366: 0a 03                    ecalli 3 // 'write'
  1368: 48 21 70 01 8f 03        u32 [sp + 368] = 0x38f
  1374: 48 21 78 01              u32 [sp + 376] = 0
  1378: 7a 15 74 01              u32 [sp + 0x174] = s0
  1382: 95 15 ff 07              s0 = sp + 0x7ff
  1386: 95 55 78 03              s0 = s0 + 0x378
  1390: 33 08 01                 a1 = 0x1
  1393: 33 09 01                 a2 = 0x1
  1396: 95 1a 70 01              a3 = sp + 0x170
  1400: 33 0b 01                 a4 = 0x1
  1403: 33 07                    a0 = 0
  1405: 0a 05                    ecalli 5 // 'bless'
  1407: 46 05 05                 u8 [s0 + 0] = 0x5
  1410: 7b 57 01                 u64 [s0 + 0x1] = a0
  1413: 95 17 ff 07              a0 = sp + 0x7ff
  1417: 95 77 78 03              a0 = a0 + 0x378
  1421: 33 08 01                 a1 = 0x1
  1424: 95 19 ff 07              a2 = sp + 0x7ff
  1428: 95 99 79 03              a2 = a2 + 0x379
  1432: 33 0a 08                 a3 = 0x8
  1435: 0a 03                    ecalli 3 // 'write'
  1437: 28 91 04                 jump @73
      :                          @61 [@dyn 6]
  1440: 95 18 2a                 a1 = sp + 0x2a
  1443: 33 09 03                 a2 = 0x3
  1446: 95 1a 70                 a3 = sp + 0x70
  1449: 33 0c 00 01              a5 = 0x100
  1453: 64 67                    a0 = s1
  1455: 33 0b                    a4 = 0
  1457: 0a 02                    ecalli 2 // 'read'
  1459: 95 15 ff 07              s0 = sp + 0x7ff
  1463: 95 55 78 03              s0 = s0 + 0x378
  1467: 46 15 01 01              u8 [s0 + 1] = 0x1
  1471: 7b 17 70 01              u64 [sp + 0x170] = a0
  1475: 95 17 ff 07              a0 = sp + 0x7ff
  1479: 95 77 79 03              a0 = a0 + 0x379
  1483: 33 08 01                 a1 = 0x1
  1486: 95 19 70 01              a2 = sp + 0x170
  1490: 33 0a 08                 a3 = 0x8
  1493: 0a 03                    ecalli 3 // 'write'
  1495: 95 17 2a                 a0 = sp + 0x2a
  1498: 33 08 03                 a1 = 0x3
  1501: 33 09                    a2 = 0
  1503: 33 0a                    a3 = 0
  1505: 0a 03                    ecalli 3 // 'write'
  1507: 46 15 01 02              u8 [s0 + 1] = 0x2
  1511: 7b 17 70 01              u64 [sp + 0x170] = a0
  1515: 95 17 ff 07              a0 = sp + 0x7ff
  1519: 95 77 79 03              a0 = a0 + 0x379
  1523: 33 08 01                 a1 = 0x1
  1526: 95 19 70 01              a2 = sp + 0x170
  1530: 33 0a 08                 a3 = 0x8
  1533: 0a 03                    ecalli 3 // 'write'
  1535: 95 18 2a                 a1 = sp + 0x2a
  1538: 33 09 03                 a2 = 0x3
  1541: 95 1a 70                 a3 = sp + 0x70
  1544: 33 0c 00 01              a5 = 0x100
  1548: 64 67                    a0 = s1
  1550: 33 0b                    a4 = 0
  1552: 0a 02                    ecalli 2 // 'read'
  1554: 46 15 01 05              u8 [s0 + 1] = 0x5
  1558: 7b 17 70 01              u64 [sp + 0x170] = a0
  1562: 95 17 ff 07              a0 = sp + 0x7ff
  1566: 95 77 79 03              a0 = a0 + 0x379
  1570: 33 08 01                 a1 = 0x1
  1573: 95 19 70 01              a2 = sp + 0x170
  1577: 33 0a 08                 a3 = 0x8
  1580: 0a 03                    ecalli 3 // 'write'
  1582: 95 17 30                 a0 = sp + 0x30
  1585: 33 08 03                 a1 = 0x3
  1588: 0a 0e                    ecalli 14 // 'solicit'
  1590: 46 15 01 06              u8 [s0 + 1] = 0x6
  1594: 7b 17 70 01              u64 [sp + 0x170] = a0
  1598: 95 17 ff 07              a0 = sp + 0x7ff
  1602: 95 77 79 03              a0 = a0 + 0x379
  1606: 33 08 01                 a1 = 0x1
  1609: 95 19 70 01              a2 = sp + 0x170
  1613: 33 0a 08                 a3 = 0x8
  1616: 0a 03                    ecalli 3 // 'write'
  1618: 28 dc 03                 jump @73
      :                          @62 [@dyn 7]
  1621: 95 17 30                 a0 = sp + 0x30
  1624: 33 08 03                 a1 = 0x3
  1627: 0a 0e                    ecalli 14 // 'solicit'
  1629: 95 15 ff 07              s0 = sp + 0x7ff
  1633: 95 55 78 03              s0 = s0 + 0x378
  1637: 46 15 01 01              u8 [s0 + 1] = 0x1
  1641: 7b 17 70 01              u64 [sp + 0x170] = a0
  1645: 95 17 ff 07              a0 = sp + 0x7ff
  1649: 95 77 79 03              a0 = a0 + 0x379
  1653: 33 08 01                 a1 = 0x1
  1656: 95 19 70 01              a2 = sp + 0x170
  1660: 33 0a 08                 a3 = 0x8
  1663: 0a 03                    ecalli 3 // 'write'
  1665: 95 17 30                 a0 = sp + 0x30
  1668: 33 08 03                 a1 = 0x3
  1671: 0a 0d                    ecalli 13 // 'query'
  1673: 46 15 01 02              u8 [s0 + 1] = 0x2
  1677: 7b 17 70 01              u64 [sp + 0x170] = a0
  1681: 95 17 ff 07              a0 = sp + 0x7ff
  1685: 95 77 79 03              a0 = a0 + 0x379
  1689: 33 08 01                 a1 = 0x1
  1692: 95 19 70 01              a2 = sp + 0x170
  1696: 33 0a 08                 a3 = 0x8
  1699: 0a 03                    ecalli 3 // 'write'
  1701: 95 17 50                 a0 = sp + 0x50
  1704: 33 08 03                 a1 = 0x3
  1707: 0a 0d                    ecalli 13 // 'query'
  1709: 46 15 01 05              u8 [s0 + 1] = 0x5
  1713: 7b 17 70 01              u64 [sp + 0x170] = a0
  1717: 95 17 ff 07              a0 = sp + 0x7ff
  1721: 95 77 79 03              a0 = a0 + 0x379
  1725: 33 08 01                 a1 = 0x1
  1728: 95 19 70 01              a2 = sp + 0x170
  1732: 33 0a 08                 a3 = 0x8
  1735: 0a 03                    ecalli 3 // 'write'
  1737: 28 65 03                 jump @73
      :                          @63 [@dyn 8]
  1740: 95 17 30                 a0 = sp + 0x30
  1743: 33 08 03                 a1 = 0x3
  1746: 0a 0f                    ecalli 15 // 'forget'
  1748: 95 15 ff 07              s0 = sp + 0x7ff
  1752: 95 55 78 03              s0 = s0 + 0x378
  1756: 46 15 01 01              u8 [s0 + 1] = 0x1
  1760: 7b 17 70 01              u64 [sp + 0x170] = a0
  1764: 95 17 ff 07              a0 = sp + 0x7ff
  1768: 95 77 79 03              a0 = a0 + 0x379
  1772: 33 08 01                 a1 = 0x1
  1775: 95 19 70 01              a2 = sp + 0x170
  1779: 33 0a 08                 a3 = 0x8
  1782: 0a 03                    ecalli 3 // 'write'
  1784: 95 17 30                 a0 = sp + 0x30
  1787: 33 08 03                 a1 = 0x3
  1790: 0a 0d                    ecalli 13 // 'query'
  1792: 46 15 01 02              u8 [s0 + 1] = 0x2
  1796: 7b 17 70 01              u64 [sp + 0x170] = a0
  1800: 95 17 ff 07              a0 = sp + 0x7ff
  1804: 95 77 79 03              a0 = a0 + 0x379
  1808: 33 08 01                 a1 = 0x1
  1811: 95 19 70 01              a2 = sp + 0x170
  1815: 33 0a 08                 a3 = 0x8
  1818: 0a 03                    ecalli 3 // 'write'
  1820: 95 18 50                 a1 = sp + 0x50
  1823: 95 19 70                 a2 = sp + 0x70
  1826: 33 0b 03                 a4 = 0x3
  1829: 64 67                    a0 = s1
  1831: 33 0a                    a3 = 0
  1833: 0a 01                    ecalli 1 // 'lookup'
  1835: 46 15 01 05              u8 [s0 + 1] = 0x5
  1839: 7b 17 70 01              u64 [sp + 0x170] = a0
  1843: 95 17 ff 07              a0 = sp + 0x7ff
  1847: 95 77 79 03              a0 = a0 + 0x379
  1851: 33 08 01                 a1 = 0x1
  1854: 95 19 70 01              a2 = sp + 0x170
  1858: 33 0a 08                 a3 = 0x8
  1861: 0a 03                    ecalli 3 // 'write'
  1863: 33 07 e8 03              a0 = 0x3e8
  1867: 95 18 2a                 a1 = sp + 0x2a
  1870: 0a 06                    ecalli 6 // 'assign'
  1872: 46 15 01 06              u8 [s0 + 1] = 0x6
  1876: 7b 17 70 01              u64 [sp + 0x170] = a0
  1880: 95 17 ff 07              a0 = sp + 0x7ff
  1884: 95 77 79 03              a0 = a0 + 0x379
  1888: 33 08 01                 a1 = 0x1
  1891: 95 19 70 01              a2 = sp + 0x170
  1895: 33 0a 08                 a3 = 0x8
  1898: 0a 03                    ecalli 3 // 'write'
  1900: 28 c2 02                 jump @73
      :                          @64 [@dyn 9]
  1903: 95 18 30                 a1 = sp + 0x30
  1906: 95 19 70                 a2 = sp + 0x70
  1909: 33 0b 03                 a4 = 0x3
  1912: 64 67                    a0 = s1
  1914: 33 0a                    a3 = 0
  1916: 0a 01                    ecalli 1 // 'lookup'
  1918: 95 15 ff 07              s0 = sp + 0x7ff
  1922: 95 55 78 03              s0 = s0 + 0x378
  1926: 46 15 01 01              u8 [s0 + 1] = 0x1
  1930: 7b 17 70 01              u64 [sp + 0x170] = a0
  1934: 95 17 ff 07              a0 = sp + 0x7ff
  1938: 95 77 79 03              a0 = a0 + 0x379
  1942: 33 08 01                 a1 = 0x1
  1945: 95 19 70 01              a2 = sp + 0x170
  1949: 33 0a 08                 a3 = 0x8
  1952: 0a 03                    ecalli 3 // 'write'
  1954: 95 17 30                 a0 = sp + 0x30
  1957: 33 08 03                 a1 = 0x3
  1960: 0a 0d                    ecalli 13 // 'query'
  1962: 46 15 01 02              u8 [s0 + 1] = 0x2
  1966: 7b 17 70 01              u64 [sp + 0x170] = a0
  1970: 95 17 ff 07              a0 = sp + 0x7ff
  1974: 95 77 79 03              a0 = a0 + 0x379
  1978: 33 08 01                 a1 = 0x1
  1981: 95 19 70 01              a2 = sp + 0x170
  1985: 33 0a 08                 a3 = 0x8
  1988: 0a 03                    ecalli 3 // 'write'
  1990: 95 18 30                 a1 = sp + 0x30
  1993: 64 67                    a0 = s1
  1995: 0a 0c                    ecalli 12 // 'eject'
  1997: 46 15 01 05              u8 [s0 + 1] = 0x5
  2001: 7b 17 70 01              u64 [sp + 0x170] = a0
  2005: 95 17 ff 07              a0 = sp + 0x7ff
  2009: 95 77 79 03              a0 = a0 + 0x379
  2013: 33 08 01                 a1 = 0x1
  2016: 95 19 70 01              a2 = sp + 0x170
  2020: 33 0a 08                 a3 = 0x8
  2023: 0a 03                    ecalli 3 // 'write'
  2025: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  2035: 95 1a 30                 a3 = sp + 0x30
  2038: 33 08                    a1 = 0
  2040: 33 09                    a2 = 0
  2042: 33 0b                    a4 = 0
  2044: 0a 05                    ecalli 5 // 'bless'
  2046: 46 15 01 06              u8 [s0 + 1] = 0x6
  2050: 7b 17 70 01              u64 [sp + 0x170] = a0
  2054: 95 17 ff 07              a0 = sp + 0x7ff
  2058: 95 77 79 03              a0 = a0 + 0x379
  2062: 33 08 01                 a1 = 0x1
  2065: 95 19 70 01              a2 = sp + 0x170
  2069: 33 0a 08                 a3 = 0x8
  2072: 0a 03                    ecalli 3 // 'write'
  2074: 28 14 02                 jump @73
      :                          @65 [@dyn 10]
  2077: 95 17 30                 a0 = sp + 0x30
  2080: 33 08 03                 a1 = 0x3
  2083: 0a 0e                    ecalli 14 // 'solicit'
  2085: 95 15 ff 07              s0 = sp + 0x7ff
  2089: 95 55 78 03              s0 = s0 + 0x378
  2093: 46 15 01 01              u8 [s0 + 1] = 0x1
  2097: 7b 17 70 01              u64 [sp + 0x170] = a0
  2101: 95 17 ff 07              a0 = sp + 0x7ff
  2105: 95 77 79 03              a0 = a0 + 0x379
  2109: 33 08 01                 a1 = 0x1
  2112: 95 19 70 01              a2 = sp + 0x170
  2116: 33 0a 08                 a3 = 0x8
  2119: 0a 03                    ecalli 3 // 'write'
  2121: 95 17 30                 a0 = sp + 0x30
  2124: 33 08 03                 a1 = 0x3
  2127: 0a 0d                    ecalli 13 // 'query'
  2129: 46 15 01 02              u8 [s0 + 1] = 0x2
  2133: 7b 17 70 01              u64 [sp + 0x170] = a0
  2137: 95 17 ff 07              a0 = sp + 0x7ff
  2141: 95 77 79 03              a0 = a0 + 0x379
  2145: 33 08 01                 a1 = 0x1
  2148: 95 19 70 01              a2 = sp + 0x170
  2152: 33 0a 08                 a3 = 0x8
  2155: 0a 03                    ecalli 3 // 'write'
  2157: 95 15 70 01              s0 = sp + 0x170
  2161: 33 09 00 0a              a2 = 0xa00
  2165: 95 17 70 01              a0 = sp + 0x170
  2169: 33 08                    a1 = 0
  2171: 50 10 16 56 03           ra = 22, jump @105
      :                          @66 [@dyn 11]
  2176: 33 06 50                 s1 = 0x50
  2179: 01                       fallthrough
      :                          @67
  2180: 95 18 30                 a1 = sp + 0x30
  2183: 33 09 20                 a2 = 0x20
  2186: 64 57                    a0 = s0
  2188: 50 10 18 93 02           ra = 24, jump @87
      :                          @68 [@dyn 12]
  2193: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2196: 95 55 20                 s0 = s0 + 0x20
  2199: 52 06 ed                 jump @67 if s1 != 0
      :                          @69
  2202: 95 18 70 01              a1 = sp + 0x170
  2206: 33 07                    a0 = 0
  2208: 0a 06                    ecalli 6 // 'assign'
  2210: 95 15 ff 07              s0 = sp + 0x7ff
  2214: 95 55 78 03              s0 = s0 + 0x378
  2218: 46 05 05                 u8 [s0 + 0] = 0x5
  2221: 7b 57 01                 u64 [s0 + 0x1] = a0
  2224: 95 17 ff 07              a0 = sp + 0x7ff
  2228: 95 77 78 03              a0 = a0 + 0x378
  2232: 33 08 01                 a1 = 0x1
  2235: 95 19 ff 07              a2 = sp + 0x7ff
  2239: 95 99 79 03              a2 = a2 + 0x379
  2243: 33 0a 08                 a3 = 0x8
  2246: 0a 03                    ecalli 3 // 'write'
  2248: 82 16 18                 s1 = u64 [sp + 0x18]
  2251: 28 63 01                 jump @73
      :                          @70 [@dyn 13]
  2254: 95 17 30                 a0 = sp + 0x30
  2257: 33 08 03                 a1 = 0x3
  2260: 0a 0f                    ecalli 15 // 'forget'
  2262: 95 15 ff 07              s0 = sp + 0x7ff
  2266: 95 55 78 03              s0 = s0 + 0x378
  2270: 46 15 01 01              u8 [s0 + 1] = 0x1
  2274: 7b 17 70 01              u64 [sp + 0x170] = a0
  2278: 95 17 ff 07              a0 = sp + 0x7ff
  2282: 95 77 79 03              a0 = a0 + 0x379
  2286: 33 08 01                 a1 = 0x1
  2289: 95 19 70 01              a2 = sp + 0x170
  2293: 33 0a 08                 a3 = 0x8
  2296: 0a 03                    ecalli 3 // 'write'
  2298: 95 17 30                 a0 = sp + 0x30
  2301: 33 08 03                 a1 = 0x3
  2304: 0a 0d                    ecalli 13 // 'query'
  2306: 46 15 01 02              u8 [s0 + 1] = 0x2
  2310: 7b 17 70 01              u64 [sp + 0x170] = a0
  2314: 95 17 ff 07              a0 = sp + 0x7ff
  2318: 95 77 79 03              a0 = a0 + 0x379
  2322: 33 08 01                 a1 = 0x1
  2325: 95 19 70 01              a2 = sp + 0x170
  2329: 33 0a 08                 a3 = 0x8
  2332: 0a 03                    ecalli 3 // 'write'
  2334: 28 10 01                 jump @73
      :                          @71 [@dyn 14]
  2337: 95 18 30                 a1 = sp + 0x30
  2340: 95 19 70                 a2 = sp + 0x70
  2343: 33 0b 03                 a4 = 0x3
  2346: 64 67                    a0 = s1
  2348: 33 0a                    a3 = 0
  2350: 0a 01                    ecalli 1 // 'lookup'
  2352: 95 15 ff 07              s0 = sp + 0x7ff
  2356: 95 55 78 03              s0 = s0 + 0x378
  2360: 46 15 01 01              u8 [s0 + 1] = 0x1
  2364: 7b 17 70 01              u64 [sp + 0x170] = a0
  2368: 95 17 ff 07              a0 = sp + 0x7ff
  2372: 95 77 79 03              a0 = a0 + 0x379
  2376: 33 08 01                 a1 = 0x1
  2379: 95 19 70 01              a2 = sp + 0x170
  2383: 33 0a 08                 a3 = 0x8
  2386: 0a 03                    ecalli 3 // 'write'
  2388: 95 17 30                 a0 = sp + 0x30
  2391: 33 08 03                 a1 = 0x3
  2394: 0a 0d                    ecalli 13 // 'query'
  2396: 46 15 01 02              u8 [s0 + 1] = 0x2
  2400: 7b 17 70 01              u64 [sp + 0x170] = a0
  2404: 95 17 ff 07              a0 = sp + 0x7ff
  2408: 95 77 79 03              a0 = a0 + 0x379
  2412: 33 08 01                 a1 = 0x1
  2415: 95 19 70 01              a2 = sp + 0x170
  2419: 33 0a 08                 a3 = 0x8
  2422: 0a 03                    ecalli 3 // 'write'
  2424: 28 b6 00                 jump @73
      :                          @72 [@dyn 15]
  2427: 95 18 2a                 a1 = sp + 0x2a
  2430: 33 09 03                 a2 = 0x3
  2433: 95 1a 70                 a3 = sp + 0x70
  2436: 33 0c 00 01              a5 = 0x100
  2440: 64 67                    a0 = s1
  2442: 33 0b                    a4 = 0
  2444: 0a 02                    ecalli 2 // 'read'
  2446: 95 15 ff 07              s0 = sp + 0x7ff
  2450: 95 55 78 03              s0 = s0 + 0x378
  2454: 46 15 01 01              u8 [s0 + 1] = 0x1
  2458: 7b 17 70 01              u64 [sp + 0x170] = a0
  2462: 95 17 ff 07              a0 = sp + 0x7ff
  2466: 95 77 79 03              a0 = a0 + 0x379
  2470: 33 08 01                 a1 = 0x1
  2473: 95 19 70 01              a2 = sp + 0x170
  2477: 33 0a 08                 a3 = 0x8
  2480: 0a 03                    ecalli 3 // 'write'
  2482: 95 17 2a                 a0 = sp + 0x2a
  2485: 33 08 03                 a1 = 0x3
  2488: 33 09                    a2 = 0
  2490: 33 0a                    a3 = 0
  2492: 0a 03                    ecalli 3 // 'write'
  2494: 46 15 01 02              u8 [s0 + 1] = 0x2
  2498: 7b 17 70 01              u64 [sp + 0x170] = a0
  2502: 95 17 ff 07              a0 = sp + 0x7ff
  2506: 95 77 79 03              a0 = a0 + 0x379
  2510: 33 08 01                 a1 = 0x1
  2513: 95 19 70 01              a2 = sp + 0x170
  2517: 33 0a 08                 a3 = 0x8
  2520: 0a 03                    ecalli 3 // 'write'
  2522: 95 18 2a                 a1 = sp + 0x2a
  2525: 33 09 03                 a2 = 0x3
  2528: 95 1a 70                 a3 = sp + 0x70
  2531: 33 0c 00 01              a5 = 0x100
  2535: 64 67                    a0 = s1
  2537: 33 0b                    a4 = 0
  2539: 0a 02                    ecalli 2 // 'read'
  2541: 46 15 01 05              u8 [s0 + 1] = 0x5
  2545: 7b 17 70 01              u64 [sp + 0x170] = a0
  2549: 95 17 ff 07              a0 = sp + 0x7ff
  2553: 95 77 79 03              a0 = a0 + 0x379
  2557: 33 08 01                 a1 = 0x1
  2560: 95 19 70 01              a2 = sp + 0x170
  2564: 33 0a 08                 a3 = 0x8
  2567: 0a 03                    ecalli 3 // 'write'
  2569: 95 17 30                 a0 = sp + 0x30
  2572: 33 08 03                 a1 = 0x3
  2575: 0a 0e                    ecalli 14 // 'solicit'
  2577: 46 15 01 06              u8 [s0 + 1] = 0x6
  2581: 7b 17 70 01              u64 [sp + 0x170] = a0
  2585: 95 17 ff 07              a0 = sp + 0x7ff
  2589: 95 77 79 03              a0 = a0 + 0x379
  2593: 33 08 01                 a1 = 0x1
  2596: 95 19 70 01              a2 = sp + 0x170
  2600: 33 0a 08                 a3 = 0x8
  2603: 0a 03                    ecalli 3 // 'write'
  2605: 01                       fallthrough
      :                          @73
  2606: 95 18 70                 a1 = sp + 0x70
  2609: 64 67                    a0 = s1
  2611: 0a 04                    ecalli 4 // 'info'
  2613: 46 15 01 08              u8 [s0 + 1] = 0x8
  2617: 7b 17 70 01              u64 [sp + 0x170] = a0
  2621: 95 17 ff 07              a0 = sp + 0x7ff
  2625: 95 77 79 03              a0 = a0 + 0x379
  2629: 33 08 01                 a1 = 0x1
  2632: 95 19 70 01              a2 = sp + 0x170
  2636: 33 0a 08                 a3 = 0x8
  2639: 0a 03                    ecalli 3 // 'write'
  2641: 0a                       ecalli 0 // 'gas'
  2642: 46 15 01 09              u8 [s0 + 1] = 0x9
  2646: 7b 17 70 01              u64 [sp + 0x170] = a0
  2650: 95 17 ff 07              a0 = sp + 0x7ff
  2654: 95 77 79 03              a0 = a0 + 0x379
  2658: 33 08 01                 a1 = 0x1
  2661: 95 19 70 01              a2 = sp + 0x170
  2665: 33 0a 08                 a3 = 0x8
  2668: 0a 03                    ecalli 3 // 'write'
  2670: 01                       fallthrough
      :                          @74
  2671: 49 21 88 01              u64 [sp + 392] = 0
  2675: 49 21 80 01              u64 [sp + 384] = 0
  2679: 49 21 78 01              u64 [sp + 376] = 0
  2683: 49 21 70 01              u64 [sp + 368] = 0
  2687: 82 19 10                 a2 = u64 [sp + 0x10]
  2690: 55 19 21 96 00           jump @83 if a2 >=u 33
      :                          @75
  2695: 82 16 20                 s1 = u64 [sp + 0x20]
  2698: 97 65 20                 s0 = s1 << 0x20
  2701: 98 55 20                 s0 = s0 >> 0x20
  2704: 95 17 70 01              a0 = sp + 0x170
  2708: 82 18 08                 a1 = u64 [sp + 0x8]
  2711: 50 10 20 88 00           ra = 32, jump @87
      :                          @76 [@dyn 16]
  2716: 3a 08 00 00 03           a1 = u64 [0x30000]
  2721: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  2731: ca 75 07                 a0 = s0 * a0
  2734: ae 87 44                 jump @81 if a0 >=u a1
      :                          @77
  2737: 51 16 09 07              jump @79 if s1 == 9
      :                          @78
  2741: 0a 08                    ecalli 8 // 'checkpoint'
  2743: 01                       fallthrough
      :                          @79
  2744: 95 57 2a                 a0 = s0 + 0x2a
  2747: 95 19 ff 07              a2 = sp + 0x7ff
  2751: 95 99 78 03              a2 = a2 + 0x378
  2755: 46 09 07                 u8 [a2 + 0] = 0x7
  2758: 7b 97 01                 u64 [a2 + 0x1] = a0
  2761: 95 17 ff 07              a0 = sp + 0x7ff
  2765: 95 77 78 03              a0 = a0 + 0x378
  2769: 33 08 01                 a1 = 0x1
  2772: 95 19 ff 07              a2 = sp + 0x7ff
  2776: 95 99 79 03              a2 = a2 + 0x379
  2780: 33 0a 08                 a3 = 0x8
  2783: 33 00 22                 ra = 0x22
  2786: 0a 03                    ecalli 3 // 'write'
  2788: 33 07                    a0 = 0
  2790: 33 08 01                 a1 = 0x1
  2793: 32 07                    jump [a0]
      :                          @80 [@dyn 17]
  2795: 33 07                    a0 = 0
  2797: 33 08 01                 a1 = 0x1
  2800: 32 07                    jump [a0]
      :                          @81
  2802: 95 17 70 01              a0 = sp + 0x170
  2806: 0a 10                    ecalli 16 // 'oyield'
  2808: 33 08 20                 a1 = 0x20
  2811: 95 1b 70 01              a4 = sp + 0x170
  2815: 01                       fallthrough
      :                          @82
  2816: 64 b7                    a0 = a4
  2818: 95 11 a0 03              sp = sp + 0x3a0
  2822: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2826: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2830: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2834: 95 11 f8 07              sp = sp + 0x7f8
  2838: 32 00                    ret
      :                          @83
  2840: 00                       trap
      :                          @84
  2841: 00                       trap
      :                          @85
  2842: 00                       trap
      :                          @86 [export #2: 'on_transfer']
  2843: 33 07                    a0 = 0
  2845: 32 00                    ret
      :                          @87
  2847: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2850: 7b 10 18                 u64 [sp + 0x18] = ra
  2853: 7b 15 10                 u64 [sp + 0x10] = s0
  2856: 7b 16 08                 u64 [sp + 0x8] = s1
  2859: 53 19 10 64              jump @96 if a2 <u 16
      :                          @88
  2863: 8d 7a                    i32 a3 = -a0
  2865: 84 a2 07                 t0 = a3 & 0x7
  2868: c8 27 0b                 a4 = a0 + t0
  2871: 51 02 15                 jump @91 if t0 == 0
      :                          @89
  2874: 64 8c                    a5 = a1
  2876: 64 75                    s0 = a0
  2878: 01                       fallthrough
      :                          @90
  2879: 7c ca                    a3 = u8 [a5]
  2881: 78 5a                    u8 [s0] = a3
  2883: 95 55 01                 s0 = s0 + 0x1
  2886: 95 cc 01                 a5 = a5 + 0x1
  2889: ac b5 f6                 jump @90 if s0 <u a4
      :                          @91
  2892: c8 28 03                 t1 = a1 + t0
  2895: c9 29 02                 t0 = a2 - t0
  2898: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2901: 84 38 07                 a1 = t1 & 0x7
  2904: c8 4b 0a                 a3 = a4 + t2
  2907: 51 08 3b                 jump @98 if a1 == 0
      :                          @92
  2910: 58 04 4b                 jump @101 if t2 <=s 0
      :                          @93
  2913: 97 38 03                 a1 = t1 << 0x3
  2916: 84 80 38                 ra = a1 & 0x38
  2919: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2922: 82 c5                    s0 = u64 [a5]
  2924: 8d 88                    i32 a1 = -a1
  2926: 84 88 38                 a1 = a1 & 0x38
  2929: 95 cc 08                 a5 = a5 + 0x8
  2932: 01                       fallthrough
      :                          @94
  2933: 82 c6                    s1 = u64 [a5]
  2935: d0 05 05                 s0 = s0 >> ra
  2938: cf 86 09                 a2 = s1 << a1
  2941: d4 59 09                 a2 = a2 | s0
  2944: 7b b9                    u64 [a4] = a2
  2946: 95 bb 08                 a4 = a4 + 0x8
  2949: 95 cc 08                 a5 = a5 + 0x8
  2952: 64 65                    s0 = s1
  2954: ac ab eb                 jump @94 if a4 <u a3
      :                          @95
  2957: 28 1c                    jump @101
      :                          @96
  2959: 64 7a                    a3 = a0
  2961: 52 09 21                 jump @102 if a2 != 0
      :                          @97
  2964: 28 2f                    jump @104
      :                          @98
  2966: 58 04 13                 jump @101 if t2 <=s 0
      :                          @99
  2969: 64 38                    a1 = t1
  2971: 01                       fallthrough
      :                          @100
  2972: 82 89                    a2 = u64 [a1]
  2974: 7b b9                    u64 [a4] = a2
  2976: 95 bb 08                 a4 = a4 + 0x8
  2979: 95 88 08                 a1 = a1 + 0x8
  2982: ac ab f6                 jump @100 if a4 <u a3
      :                          @101
  2985: c8 43 08                 a1 = t1 + t2
  2988: 84 29 07                 a2 = t0 & 0x7
  2991: 51 09 14                 jump @104 if a2 == 0
      :                          @102
  2994: c8 a9 09                 a2 = a2 + a3
  2997: 01                       fallthrough
      :                          @103
  2998: 7c 8b                    a4 = u8 [a1]
  3000: 78 ab                    u8 [a3] = a4
  3002: 95 aa 01                 a3 = a3 + 0x1
  3005: 95 88 01                 a1 = a1 + 0x1
  3008: ac 9a f6                 jump @103 if a3 <u a2
      :                          @104
  3011: 82 10 18                 ra = u64 [sp + 0x18]
  3014: 82 15 10                 s0 = u64 [sp + 0x10]
  3017: 82 16 08                 s1 = u64 [sp + 0x8]
  3020: 95 11 20                 sp = sp + 0x20
  3023: 32 00                    ret
      :                          @105
  3025: 53 19 10 48              jump @114 if a2 <u 16
      :                          @106
  3029: 8d 7a                    i32 a3 = -a0
  3031: 84 aa 07                 a3 = a3 & 0x7
  3034: c8 a7 0b                 a4 = a0 + a3
  3037: 51 0a 0e                 jump @109 if a3 == 0
      :                          @107
  3040: 64 7c                    a5 = a0
  3042: 01                       fallthrough
      :                          @108
  3043: 78 c8                    u8 [a5] = a1
  3045: 95 cc 01                 a5 = a5 + 0x1
  3048: ac bc fb                 jump @108 if a5 <u a4
      :                          @109
  3051: c9 a9 03                 t1 = a2 - a3
  3054: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3057: c8 cb 0a                 a3 = a4 + a5
  3060: 58 0c 1d                 jump @112 if a5 <=s 0
      :                          @110
  3063: 84 82 ff 00              t0 = a1 & 0xff
  3067: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  3077: ca 92 0c                 a5 = t0 * a2
  3080: 01                       fallthrough
      :                          @111
  3081: 7b bc                    u64 [a4] = a5
  3083: 95 bb 08                 a4 = a4 + 0x8
  3086: ac ab fb                 jump @111 if a4 <u a3
      :                          @112
  3089: 84 39 07                 a2 = t1 & 0x7
  3092: 52 09 0a                 jump @115 if a2 != 0
      :                          @113
  3095: 28 13                    jump @117
      :                          @114
  3097: 64 7a                    a3 = a0
  3099: 51 09 0f                 jump @117 if a2 == 0
      :                          @115
  3102: c8 a9 09                 a2 = a2 + a3
  3105: 01                       fallthrough
      :                          @116
  3106: 78 a8                    u8 [a3] = a1
  3108: 95 aa 01                 a3 = a3 + 0x1
  3111: ac 9a fb                 jump @116 if a3 <u a2
      :                          @117
  3114: 32 00                    ret
      :                          @118
  3116: 51 08 9b 00              jump @139 if a1 == 0
      :                          @119
  3120: 64 79                    a2 = a0
  3122: 7c 77                    a0 = u8 [a0]
  3124: 51 07 91 00              jump @138 if a0 == 0
      :                          @120
  3128: 51 27 ff 00 90 00        jump @140 if a0 == 255
      :                          @121
  3134: 6c 7a                    a3 = sext.b a0
  3136: 57 0a 09                 jump @123 if a3 <s 0
      :                          @122
  3139: 33 0a                    a3 = 0
  3141: 33 08                    a1 = 0
  3143: 28 73                    jump @137
      :                          @123
  3145: 55 27 c0 00 0d           jump @125 if a0 >=u 192
      :                          @124
  3150: 33 0a 01                 a3 = 0x1
  3153: 33 0b 80                 a4 = 0xffffffffffffff80
  3156: 28 4a                    jump @134
      :                          @125
  3158: 55 27 e0 00 0e           jump @127 if a0 >=u 224
      :                          @126
  3163: 33 0a 02                 a3 = 0x2
  3166: 33 0b 40 ff              a4 = 0xffffffffffffff40
  3170: 28 3c                    jump @134
      :                          @127
  3172: 55 27 f0 00 0e           jump @129 if a0 >=u 240
      :                          @128
  3177: 33 0a 03                 a3 = 0x3
  3180: 33 0b 20 ff              a4 = 0xffffffffffffff20
  3184: 28 2e                    jump @134
      :                          @129
  3186: 55 27 f8 00 0e           jump @131 if a0 >=u 248
      :                          @130
  3191: 33 0a 04                 a3 = 0x4
  3194: 33 0b 10 ff              a4 = 0xffffffffffffff10
  3198: 28 20                    jump @134
      :                          @131
  3200: 55 27 fc 00 0e           jump @133 if a0 >=u 252
      :                          @132
  3205: 33 0a 05                 a3 = 0x5
  3208: 33 0b 08 ff              a4 = 0xffffffffffffff08
  3212: 28 12                    jump @134
      :                          @133
  3214: 88 7a fe 00              a3 = a0 <u 0xfe
  3218: 33 0b 04 ff              a4 = 0xffffffffffffff04
  3222: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  3226: 85 aa 07                 a3 = a3 ^ 0x7
  3229: 01                       fallthrough
      :                          @134
  3230: ae 8a 2b                 jump @141 if a3 >=u a1
      :                          @135
  3233: 33 08                    a1 = 0
  3235: c8 b7 07                 a0 = a0 + a4
  3238: 64 ab                    a4 = a3
  3240: 01                       fallthrough
      :                          @136
  3241: c8 b9 0c                 a5 = a2 + a4
  3244: 7c cc                    a5 = u8 [a5]
  3246: 97 88 08                 a1 = a1 << 0x8
  3249: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  3252: d4 c8 08                 a1 = a1 | a5
  3255: 52 0b f2                 jump @136 if a4 != 0
      :                          @137
  3258: 8a a9 03                 i32 a2 = a3 << 0x3
  3261: cf 97 07                 a0 = a0 << a2
  3264: c8 87 07                 a0 = a0 + a1
  3267: 32 00                    ret
      :                          @138
  3269: 32 00                    ret
      :                          @139
  3271: 00                       trap
      :                          @140
  3272: 00                       trap
      :                          @141
  3273: 00                       trap
