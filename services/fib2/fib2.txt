// RO data = 36/36 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [10, 0, 255, 255, 12, 0, 255, 255, 14, 0, 255, 255, 16, 0, 255, 255, 18, 0, 255, 255, 20, 0, 255, 255, 26, 0, 255, 255, 28, 0, 255, 255, 30, 0, 255, 255]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 948
// Code size = 3040 bytes

      :                          @0
     0: 28 ab 00 00 00           jump @27
      :                          @1
     5: 28 34 01 00 00           jump @37
      :                          @2
    10: 28 c5 0a                 jump @112
      :                          @3
    13: 51 08 9b 00              jump @24 if a1 == 0
      :                          @4
    17: 64 79                    a2 = a0
    19: 7c 77                    a0 = u8 [a0]
    21: 51 07 91 00              jump @23 if a0 == 0
      :                          @5
    25: 51 27 ff 00 90 00        jump @25 if a0 == 255
      :                          @6
    31: 6c 7a                    a3 = sext.b a0
    33: 57 0a 09                 jump @8 if a3 <s 0
      :                          @7
    36: 33 0a                    a3 = 0
    38: 33 08                    a1 = 0
    40: 28 73                    jump @22
      :                          @8
    42: 55 27 c0 00 0d           jump @10 if a0 >=u 192
      :                          @9
    47: 33 0a 01                 a3 = 0x1
    50: 33 0b 80                 a4 = 0xffffffffffffff80
    53: 28 4a                    jump @19
      :                          @10
    55: 55 27 e0 00 0e           jump @12 if a0 >=u 224
      :                          @11
    60: 33 0a 02                 a3 = 0x2
    63: 33 0b 40 ff              a4 = 0xffffffffffffff40
    67: 28 3c                    jump @19
      :                          @12
    69: 55 27 f0 00 0e           jump @14 if a0 >=u 240
      :                          @13
    74: 33 0a 03                 a3 = 0x3
    77: 33 0b 20 ff              a4 = 0xffffffffffffff20
    81: 28 2e                    jump @19
      :                          @14
    83: 55 27 f8 00 0e           jump @16 if a0 >=u 248
      :                          @15
    88: 33 0a 04                 a3 = 0x4
    91: 33 0b 10 ff              a4 = 0xffffffffffffff10
    95: 28 20                    jump @19
      :                          @16
    97: 55 27 fc 00 0e           jump @18 if a0 >=u 252
      :                          @17
   102: 33 0a 05                 a3 = 0x5
   105: 33 0b 08 ff              a4 = 0xffffffffffffff08
   109: 28 12                    jump @19
      :                          @18
   111: 88 7a fe 00              a3 = a0 <u 0xfe
   115: 33 0b 04 ff              a4 = 0xffffffffffffff04
   119: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
   123: 85 aa 07                 a3 = a3 ^ 0x7
   126: 01                       fallthrough
      :                          @19
   127: ae 8a 2b                 jump @26 if a3 >=u a1
      :                          @20
   130: 33 08                    a1 = 0
   132: c8 b7 07                 a0 = a0 + a4
   135: 64 ab                    a4 = a3
   137: 01                       fallthrough
      :                          @21
   138: c8 b9 0c                 a5 = a2 + a4
   141: 7c cc                    a5 = u8 [a5]
   143: 97 88 08                 a1 = a1 << 0x8
   146: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   149: d4 c8 08                 a1 = a1 | a5
   152: 52 0b f2                 jump @21 if a4 != 0
      :                          @22
   155: 8a a9 03                 i32 a2 = a3 << 0x3
   158: cf 97 07                 a0 = a0 << a2
   161: c8 87 07                 a0 = a0 + a1
   164: 32 00                    ret
      :                          @23
   166: 32 00                    ret
      :                          @24
   168: 00                       trap
      :                          @25
   169: 00                       trap
      :                          @26
   170: 00                       trap
      :                          @27 [export #0: 'refine']
   171: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   174: 7b 10 20                 u64 [sp + 0x20] = ra
   177: 7b 15 18                 u64 [sp + 0x18] = s0
   180: 7b 16 10                 u64 [sp + 0x10] = s1
   183: 49 11 08                 u64 [sp + 8] = 0
   186: 49 01                    u64 [sp + 0] = 0
   188: 64 17                    a0 = sp
   190: 33 09 10                 a2 = 0x10
   193: 33 0a 05                 a3 = 0x5
   196: 33 08                    a1 = 0
   198: 33 0b                    a4 = 0
   200: 33 0c                    a5 = 0
   202: 0a 12                    ecalli 18 // 'fetch'
   204: 01                       fallthrough
      :                          @28
   205: 51 17 ff 42              jump @35 if a0 == 4294967295
      :                          @29
   209: 81 17 04                 a0 = i32 [sp + 0x4]
   212: 81 18 08                 a1 = i32 [sp + 0x8]
   215: 81 15                    s0 = i32 [sp]
   217: be 78 08                 i32 a1 = a1 + a0
   220: 83 59 01                 i32 a2 = s0 + 0x1
   223: 7a 19                    u32 [sp] = a2
   225: 7a 18 04                 u32 [sp + 0x4] = a1
   228: 7a 17 08                 u32 [sp + 0x8] = a0
   231: 64 17                    a0 = sp
   233: 33 08 10                 a1 = 0x10
   236: 0a 13                    ecalli 19 // 'export'
   238: 01                       fallthrough
      :                          @30
   239: 51 05 37                 jump @36 if s0 == 0
      :                          @31
   242: 8d 55                    i32 s0 = -s0
   244: 33 06 01                 s1 = 0x1
   247: 01                       fallthrough
      :                          @32
   248: 7a 16 0c                 u32 [sp + 0xc] = s1
   251: 64 17                    a0 = sp
   253: 33 08 10                 a1 = 0x10
   256: 0a 13                    ecalli 19 // 'export'
   258: 01                       fallthrough
      :                          @33
   259: 83 66 01                 i32 s1 = s1 + 0x1
   262: be 65 07                 i32 a0 = s0 + s1
   265: 52 17 01 ef              jump @32 if a0 != 1
      :                          @34
   269: 28 19                    jump @36
      :                          @35
   271: 14 07 01 00 00 00 01 00 00 00 a0 = 0x100000001
   281: 7b 17                    u64 [sp] = a0
   283: 48 11 08                 u32 [sp + 8] = 0
   286: 64 17                    a0 = sp
   288: 33 08 10                 a1 = 0x10
   291: 0a 13                    ecalli 19 // 'export'
   293: 01                       fallthrough
      :                          @36
   294: 33 08 10                 a1 = 0x10
   297: 64 17                    a0 = sp
   299: 82 10 20                 ra = u64 [sp + 0x20]
   302: 82 15 18                 s0 = u64 [sp + 0x18]
   305: 82 16 10                 s1 = u64 [sp + 0x10]
   308: 95 11 28                 sp = sp + 0x28
   311: 32 00                    ret
      :                          @37 [export #1: 'accumulate']
   313: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   317: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   321: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   325: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   329: 95 11 58 fc              sp = sp + 0xfffffffffffffc58
   333: 64 85                    s0 = a1
   335: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
   338: 51 05 77 09              jump @106 if s0 == 0
      :                          @38
   342: 95 7b 08                 a4 = a0 + 0x8
   345: 7d b8                    a1 = i8 [a4]
   347: 33 06 01                 s1 = 0x1
   350: 5a 08 69                 jump @46 if a1 >s 0
      :                          @39
   353: 84 88 ff 00              a1 = a1 & 0xff
   357: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
   360: 84 99 ff 00              a2 = a2 & 0xff
   364: 33 0a bf 00              a3 = 0xbf
   368: 33 06 02                 s1 = 0x2
   371: ac a9 54                 jump @46 if a2 <u a3
      :                          @40
   374: 84 89 e0 00              a2 = a1 & 0xe0
   378: 33 0a c0 00              a3 = 0xc0
   382: 33 06 03                 s1 = 0x3
   385: aa a9 46                 jump @46 if a2 == a3
      :                          @41
   388: 84 89 f0 00              a2 = a1 & 0xf0
   392: 33 0a e0 00              a3 = 0xe0
   396: 33 06 04                 s1 = 0x4
   399: aa a9 38                 jump @46 if a2 == a3
      :                          @42
   402: 84 89 f8 00              a2 = a1 & 0xf8
   406: 33 0a f0 00              a3 = 0xf0
   410: 33 06 05                 s1 = 0x5
   413: aa a9 2a                 jump @46 if a2 == a3
      :                          @43
   416: 84 89 fc 00              a2 = a1 & 0xfc
   420: 33 0a f8 00              a3 = 0xf8
   424: 33 06 06                 s1 = 0x6
   427: aa a9 1c                 jump @46 if a2 == a3
      :                          @44
   430: 84 89 fe 00              a2 = a1 & 0xfe
   434: 33 0a fc 00              a3 = 0xfc
   438: 33 06 07                 s1 = 0x7
   441: aa a9 0e                 jump @46 if a2 == a3
      :                          @45
   444: 88 88 fe 00              a1 = a1 <u 0xfe
   448: 85 86 01                 s1 = a1 ^ 0x1
   451: 97 66 03                 s1 = s1 << 0x3
   454: 01                       fallthrough
      :                          @46
   455: 7b 15 20                 u64 [sp + 0x20] = s0
   458: ac 65 00 09              jump @107 if s0 <u s1
      :                          @47
   462: 80 77 04                 a0 = u32 [a0 + 0x4]
   465: 7b 17 28                 u64 [sp + 0x28] = a0
   468: 64 b5                    s0 = a4
   470: 64 b7                    a0 = a4
   472: 64 68                    a1 = s1
   474: 50 10 02 33 fe           ra = 2, jump @3
      :                          @48 [@dyn 1]
   479: 51 07 29                 jump @53 if a0 == 0
      :                          @49
   482: 82 19 20                 a2 = u64 [sp + 0x20]
   485: aa 69 e7 08              jump @109 if a2 == s1
      :                          @50
   489: c8 56 07                 a0 = s1 + s0
   492: 7c 78                    a1 = u8 [a0]
   494: 95 7b 01                 a4 = a0 + 0x1
   497: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
   500: c8 79 05                 s0 = a2 + a0
   503: 51 08 18                 jump @54 if a1 == 0
      :                          @51
   506: 33 06                    s1 = 0
   508: 33 0a                    a3 = 0
   510: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   513: 52 08 a1 00              jump @68 if a1 != 0
      :                          @52
   517: 28 23 01                 jump @80
      :                          @53
   520: 33 06                    s1 = 0
   522: 33 0a                    a3 = 0
   524: 28 1c 01                 jump @80
      :                          @54
   527: 51 05 79                 jump @66 if s0 == 0
      :                          @55
   530: 7d b7                    a0 = i8 [a4]
   532: 33 06 01                 s1 = 0x1
   535: 5a 07 5a                 jump @63 if a0 >s 0
      :                          @56
   538: 84 77 ff 00              a0 = a0 & 0xff
   542: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   545: 84 88 ff 00              a1 = a1 & 0xff
   549: 33 06 02                 s1 = 0x2
   552: 53 28 bf 00 49           jump @63 if a1 <u 191
      :                          @57
   557: 84 78 e0 00              a1 = a0 & 0xe0
   561: 33 06 03                 s1 = 0x3
   564: 51 28 c0 00 3d           jump @63 if a1 == 192
      :                          @58
   569: 84 78 f0 00              a1 = a0 & 0xf0
   573: 33 06 04                 s1 = 0x4
   576: 51 28 e0 00 31           jump @63 if a1 == 224
      :                          @59
   581: 84 78 f8 00              a1 = a0 & 0xf8
   585: 33 06 05                 s1 = 0x5
   588: 51 28 f0 00 25           jump @63 if a1 == 240
      :                          @60
   593: 84 78 fc 00              a1 = a0 & 0xfc
   597: 33 06 06                 s1 = 0x6
   600: 51 28 f8 00 19           jump @63 if a1 == 248
      :                          @61
   605: 84 78 fe 00              a1 = a0 & 0xfe
   609: 33 06 07                 s1 = 0x7
   612: 51 28 fc 00 0d           jump @63 if a1 == 252
      :                          @62
   617: 33 06 08                 s1 = 0x8
   620: 53 27 fe 00 1c           jump @66 if a0 <u 254
      :                          @63
   625: ac 65 5c 08              jump @110 if s0 <u s1
      :                          @64
   629: 64 b7                    a0 = a4
   631: 64 68                    a1 = s1
   633: 7b 1b 20                 u64 [sp + 0x20] = a4
   636: 50 10 04 91 fd           ra = 4, jump @3
      :                          @65 [@dyn 2]
   641: 82 1b 20                 a4 = u64 [sp + 0x20]
   644: 64 7a                    a3 = a0
   646: 28 07                    jump @67
      :                          @66
   648: 33 06                    s1 = 0
   650: 33 0a                    a3 = 0
   652: 01                       fallthrough
      :                          @67
   653: c8 6b 07                 a0 = a4 + s1
   656: c8 a7 0b                 a4 = a0 + a3
   659: c8 a6 06                 s1 = s1 + a3
   662: c9 65 05                 s0 = s0 - s1
   665: 64 76                    s1 = a0
   667: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   670: 51 08 8a 00              jump @80 if a1 == 0
      :                          @68
   674: 95 b7 40                 a0 = a4 + 0x40
   677: 7d 7b                    a4 = i8 [a0]
   679: 33 09 01                 a2 = 0x1
   682: 5a 0b 72                 jump @78 if a4 >s 0
      :                          @69
   685: 64 65                    s0 = s1
   687: 84 b6 ff 00              s1 = a4 & 0xff
   691: 83 69 ff                 i32 a2 = s1 + 0xffffffffffffffff
   694: 84 9b ff 00              a4 = a2 & 0xff
   698: 33 0c bf 00              a5 = 0xbf
   702: 33 09 02                 a2 = 0x2
   705: ac cb 54                 jump @76 if a4 <u a5
      :                          @70
   708: 84 6b e0 00              a4 = s1 & 0xe0
   712: 33 0c c0 00              a5 = 0xc0
   716: 33 09 03                 a2 = 0x3
   719: aa cb 46                 jump @76 if a4 == a5
      :                          @71
   722: 84 6b f0 00              a4 = s1 & 0xf0
   726: 33 0c e0 00              a5 = 0xe0
   730: 33 09 04                 a2 = 0x4
   733: aa cb 38                 jump @76 if a4 == a5
      :                          @72
   736: 84 6b f8 00              a4 = s1 & 0xf8
   740: 33 0c f0 00              a5 = 0xf0
   744: 33 09 05                 a2 = 0x5
   747: aa cb 2a                 jump @76 if a4 == a5
      :                          @73
   750: 84 6b fc 00              a4 = s1 & 0xfc
   754: 33 0c f8 00              a5 = 0xf8
   758: 33 09 06                 a2 = 0x6
   761: aa cb 1c                 jump @76 if a4 == a5
      :                          @74
   764: 84 6b fe 00              a4 = s1 & 0xfe
   768: 33 0c fc 00              a5 = 0xfc
   772: 33 09 07                 a2 = 0x7
   775: aa cb 0e                 jump @76 if a4 == a5
      :                          @75
   778: 33 0b fe 00              a4 = 0xfe
   782: 33 09 08                 a2 = 0x8
   785: ac b6 b3 07              jump @105 if s1 <u a4
      :                          @76
   789: ac 98 b9 07              jump @111 if a1 <u a2
      :                          @77
   793: 64 56                    s1 = s0
   795: 01                       fallthrough
      :                          @78
   796: 64 98                    a1 = a2
   798: 64 a5                    s0 = a3
   800: 50 10 06 ed fc           ra = 6, jump @3
      :                          @79 [@dyn 3]
   805: 64 5a                    a3 = s0
   807: 01                       fallthrough
      :                          @80
   808: 46 11 31                 u8 [sp + 49] = 0
   811: 81 65                    s0 = i32 [s1]
   813: 95 17 31                 a0 = sp + 0x31
   816: 33 08 01                 a1 = 0x1
   819: 7b 16 18                 u64 [sp + 0x18] = s1
   822: 64 69                    a2 = s1
   824: 7b 1a 20                 u64 [sp + 0x20] = a3
   827: 0a 03                    ecalli 3 // 'write'
   829: 46 11 32 6a              u8 [sp + 50] = 0x6a
   833: 46 11 33 61              u8 [sp + 51] = 0x61
   837: 46 11 34 6d              u8 [sp + 52] = 0x6d
   841: 46 11 35 44              u8 [sp + 53] = 0x44
   845: 46 11 36 4f              u8 [sp + 54] = 0x4f
   849: 46 11 37 54              u8 [sp + 55] = 0x54
   853: 46 11 38 6a              u8 [sp + 56] = 0x6a
   857: 46 11 39 0d              u8 [sp + 57] = 0xd
   861: 46 11 3a 4a              u8 [sp + 58] = 0x4a
   865: 46 11 3b 19              u8 [sp + 59] = 0x19
   869: 46 11 3c d1 00           u8 [sp + 60] = 0xd1
   874: 46 11 3d 99 00           u8 [sp + 61] = 0x99
   879: 46 11 3e 50              u8 [sp + 62] = 0x50
   883: 46 11 3f 57              u8 [sp + 63] = 0x57
   887: 46 11 40 13              u8 [sp + 64] = 0x13
   891: 46 11 41 fc 00           u8 [sp + 65] = 0xfc
   896: 46 11 42 65              u8 [sp + 66] = 0x65
   900: 46 11 43 f5 00           u8 [sp + 67] = 0xf5
   905: 46 11 44 31              u8 [sp + 68] = 0x31
   909: 46 11 45 03              u8 [sp + 69] = 0x3
   913: 46 11 46 8e 00           u8 [sp + 70] = 0x8e
   918: 46 11 47 73              u8 [sp + 71] = 0x73
   922: 33 0b f1 00              a4 = 0xf1
   926: 78 1b 48                 u8 [sp + 0x48] = a4
   929: 46 11 49 d8 00           u8 [sp + 73] = 0xd8
   934: 46 11 4a 85 00           u8 [sp + 74] = 0x85
   939: 46 11 4b 64              u8 [sp + 75] = 0x64
   943: 46 11 4c 56              u8 [sp + 76] = 0x56
   947: 46 11 4d 32              u8 [sp + 77] = 0x32
   951: 46 11 4e c8 00           u8 [sp + 78] = 0xc8
   956: 46 11 4f ae 00           u8 [sp + 79] = 0xae
   961: 46 11 50 50              u8 [sp + 80] = 0x50
   965: 33 0c 3c                 a5 = 0x3c
   968: 78 1c 51                 u8 [sp + 0x51] = a5
   971: 46 11 52 4f              u8 [sp + 82] = 0x4f
   975: 46 11 53 0c              u8 [sp + 83] = 0xc
   979: 46 11 54 4d              u8 [sp + 84] = 0x4d
   983: 46 11 55 5e              u8 [sp + 85] = 0x5e
   987: 46 11 56 19              u8 [sp + 86] = 0x19
   991: 46 11 57 a7 00           u8 [sp + 87] = 0xa7
   996: 46 11 58 bf 00           u8 [sp + 88] = 0xbf
  1001: 46 11 59 a9 00           u8 [sp + 89] = 0xa9
  1006: 46 11 5a bb 00           u8 [sp + 90] = 0xbb
  1011: 46 11 5b 0f              u8 [sp + 91] = 0xf
  1015: 46 11 5c a4 00           u8 [sp + 92] = 0xa4
  1020: 46 11 5d 96 00           u8 [sp + 93] = 0x96
  1025: 46 11 5e 87 00           u8 [sp + 94] = 0x87
  1030: 46 11 5f 47              u8 [sp + 95] = 0x47
  1034: 46 11 60 e6 00           u8 [sp + 96] = 0xe6
  1039: 46 11 61 3d              u8 [sp + 97] = 0x3d
  1043: 78 1c 62                 u8 [sp + 0x62] = a5
  1046: 78 1b 63                 u8 [sp + 0x63] = a4
  1049: 46 11 64 e7 00           u8 [sp + 100] = 0xe7
  1054: 46 11 65 4a              u8 [sp + 101] = 0x4a
  1058: 46 11 66 49              u8 [sp + 102] = 0x49
  1062: 46 11 67 dd 00           u8 [sp + 103] = 0xdd
  1067: 46 11 68 c4 00           u8 [sp + 104] = 0xc4
  1072: 46 11 69 a6 00           u8 [sp + 105] = 0xa6
  1077: 46 11 6a ec 00           u8 [sp + 106] = 0xec
  1082: 46 11 6b a8 00           u8 [sp + 107] = 0xa8
  1087: 46 11 6c 9a 00           u8 [sp + 108] = 0x9a
  1092: 46 11 6d 6a              u8 [sp + 109] = 0x6a
  1096: 46 11 6e 6f              u8 [sp + 110] = 0x6f
  1100: 46 11 6f 33              u8 [sp + 111] = 0x33
  1104: 46 11 70 9d 00           u8 [sp + 112] = 0x9d
  1109: 46 11 71 a3 00           u8 [sp + 113] = 0xa3
  1114: 46 11 72 33              u8 [sp + 114] = 0x33
  1118: 46 11 73 7f              u8 [sp + 115] = 0x7f
  1122: 46 11 74 d2 00           u8 [sp + 116] = 0xd2
  1127: 46 11 75 eb 00           u8 [sp + 117] = 0xeb
  1132: 46 11 76 55              u8 [sp + 118] = 0x55
  1136: 46 11 77 07              u8 [sp + 119] = 0x7
  1140: 95 16 ff 07              s1 = sp + 0x7ff
  1144: 95 66 80 03              s1 = s1 + 0x380
  1148: 95 17 78                 a0 = sp + 0x78
  1151: 33 09 00 01              a2 = 0x100
  1155: 33 08                    a1 = 0
  1157: 50 10 08 00 07           ra = 8, jump @131
      :                          @81 [@dyn 4]
  1162: 7b 15 10                 u64 [sp + 0x10] = s0
  1165: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  1168: 82 15 28                 s0 = u64 [sp + 0x28]
  1171: 56 17 08 4a 05           jump @96 if a0 >u 8
      :                          @82
  1176: 97 77 02                 a0 = a0 << 0x2
  1179: 33 08 00 00 01           a1 = 0x10000
  1184: c8 87 07                 a0 = a0 + a1
  1187: 81 77                    a0 = i32 [a0]
  1189: c8 87 07                 a0 = a0 + a1
  1192: 32 07                    jump [a0]
      :                          @83 [@dyn 5]
  1194: 95 18 32                 a1 = sp + 0x32
  1197: 33 09 03                 a2 = 0x3
  1200: 95 1a 78                 a3 = sp + 0x78
  1203: 33 0c 00 01              a5 = 0x100
  1207: 64 57                    a0 = s0
  1209: 33 0b                    a4 = 0
  1211: 0a 02                    ecalli 2 // 'read'
  1213: 95 16 ff 07              s1 = sp + 0x7ff
  1217: 95 66 80 03              s1 = s1 + 0x380
  1221: 46 16 01 01              u8 [s1 + 1] = 0x1
  1225: 7b 17 78 01              u64 [sp + 0x178] = a0
  1229: 95 17 ff 07              a0 = sp + 0x7ff
  1233: 95 77 81 03              a0 = a0 + 0x381
  1237: 33 08 01                 a1 = 0x1
  1240: 95 19 78 01              a2 = sp + 0x178
  1244: 33 0a 08                 a3 = 0x8
  1247: 0a 03                    ecalli 3 // 'write'
  1249: 95 17 32                 a0 = sp + 0x32
  1252: 33 08 03                 a1 = 0x3
  1255: 95 19 35                 a2 = sp + 0x35
  1258: 33 0a 03                 a3 = 0x3
  1261: 0a 03                    ecalli 3 // 'write'
  1263: 46 16 01 02              u8 [s1 + 1] = 0x2
  1267: 7b 17 78 01              u64 [sp + 0x178] = a0
  1271: 95 17 ff 07              a0 = sp + 0x7ff
  1275: 95 77 81 03              a0 = a0 + 0x381
  1279: 33 08 01                 a1 = 0x1
  1282: 95 19 78 01              a2 = sp + 0x178
  1286: 33 0a 08                 a3 = 0x8
  1289: 0a 03                    ecalli 3 // 'write'
  1291: 95 18 32                 a1 = sp + 0x32
  1294: 33 09 03                 a2 = 0x3
  1297: 95 1a 78                 a3 = sp + 0x78
  1300: 33 0c 00 01              a5 = 0x100
  1304: 64 57                    a0 = s0
  1306: 33 0b                    a4 = 0
  1308: 0a 02                    ecalli 2 // 'read'
  1310: 46 16 01 05              u8 [s1 + 1] = 0x5
  1314: 7b 17 78 01              u64 [sp + 0x178] = a0
  1318: 95 17 ff 07              a0 = sp + 0x7ff
  1322: 95 77 81 03              a0 = a0 + 0x381
  1326: 33 08 01                 a1 = 0x1
  1329: 95 19 78 01              a2 = sp + 0x178
  1333: 33 0a 08                 a3 = 0x8
  1336: 0a 03                    ecalli 3 // 'write'
  1338: 95 17 32                 a0 = sp + 0x32
  1341: 33 08                    a1 = 0
  1343: 0a 0f                    ecalli 15 // 'forget'
  1345: 46 16 01 06              u8 [s1 + 1] = 0x6
  1349: 7b 17 78 01              u64 [sp + 0x178] = a0
  1353: 95 17 ff 07              a0 = sp + 0x7ff
  1357: 95 77 81 03              a0 = a0 + 0x381
  1361: 33 08 01                 a1 = 0x1
  1364: 95 19 78 01              a2 = sp + 0x178
  1368: 33 0a 08                 a3 = 0x8
  1371: 0a 03                    ecalli 3 // 'write'
  1373: 28 80 04                 jump @96
      :                          @84 [@dyn 6]
  1376: 95 18 32                 a1 = sp + 0x32
  1379: 33 09 03                 a2 = 0x3
  1382: 95 1a 78                 a3 = sp + 0x78
  1385: 33 0c 00 01              a5 = 0x100
  1389: 64 57                    a0 = s0
  1391: 33 0b                    a4 = 0
  1393: 0a 02                    ecalli 2 // 'read'
  1395: 95 16 ff 07              s1 = sp + 0x7ff
  1399: 95 66 80 03              s1 = s1 + 0x380
  1403: 46 16 01 01              u8 [s1 + 1] = 0x1
  1407: 7b 17 78 01              u64 [sp + 0x178] = a0
  1411: 95 17 ff 07              a0 = sp + 0x7ff
  1415: 95 77 81 03              a0 = a0 + 0x381
  1419: 33 08 01                 a1 = 0x1
  1422: 95 19 78 01              a2 = sp + 0x178
  1426: 33 0a 08                 a3 = 0x8
  1429: 0a 03                    ecalli 3 // 'write'
  1431: 95 17 32                 a0 = sp + 0x32
  1434: 33 08 03                 a1 = 0x3
  1437: 33 09                    a2 = 0
  1439: 33 0a                    a3 = 0
  1441: 0a 03                    ecalli 3 // 'write'
  1443: 46 16 01 02              u8 [s1 + 1] = 0x2
  1447: 7b 17 78 01              u64 [sp + 0x178] = a0
  1451: 95 17 ff 07              a0 = sp + 0x7ff
  1455: 95 77 81 03              a0 = a0 + 0x381
  1459: 33 08 01                 a1 = 0x1
  1462: 95 19 78 01              a2 = sp + 0x178
  1466: 33 0a 08                 a3 = 0x8
  1469: 0a 03                    ecalli 3 // 'write'
  1471: 95 18 32                 a1 = sp + 0x32
  1474: 33 09 03                 a2 = 0x3
  1477: 95 1a 78                 a3 = sp + 0x78
  1480: 33 0c 00 01              a5 = 0x100
  1484: 64 57                    a0 = s0
  1486: 33 0b                    a4 = 0
  1488: 0a 02                    ecalli 2 // 'read'
  1490: 46 16 01 05              u8 [s1 + 1] = 0x5
  1494: 7b 17 78 01              u64 [sp + 0x178] = a0
  1498: 95 17 ff 07              a0 = sp + 0x7ff
  1502: 95 77 81 03              a0 = a0 + 0x381
  1506: 33 08 01                 a1 = 0x1
  1509: 95 19 78 01              a2 = sp + 0x178
  1513: 33 0a 08                 a3 = 0x8
  1516: 0a 03                    ecalli 3 // 'write'
  1518: 95 17 38                 a0 = sp + 0x38
  1521: 33 08 03                 a1 = 0x3
  1524: 0a 0e                    ecalli 14 // 'solicit'
  1526: 46 16 01 06              u8 [s1 + 1] = 0x6
  1530: 7b 17 78 01              u64 [sp + 0x178] = a0
  1534: 95 17 ff 07              a0 = sp + 0x7ff
  1538: 95 77 81 03              a0 = a0 + 0x381
  1542: 33 08 01                 a1 = 0x1
  1545: 95 19 78 01              a2 = sp + 0x178
  1549: 33 0a 08                 a3 = 0x8
  1552: 0a 03                    ecalli 3 // 'write'
  1554: 28 cb 03                 jump @96
      :                          @85 [@dyn 7]
  1557: 95 17 38                 a0 = sp + 0x38
  1560: 33 08 03                 a1 = 0x3
  1563: 0a 0e                    ecalli 14 // 'solicit'
  1565: 95 16 ff 07              s1 = sp + 0x7ff
  1569: 95 66 80 03              s1 = s1 + 0x380
  1573: 46 16 01 01              u8 [s1 + 1] = 0x1
  1577: 7b 17 78 01              u64 [sp + 0x178] = a0
  1581: 95 17 ff 07              a0 = sp + 0x7ff
  1585: 95 77 81 03              a0 = a0 + 0x381
  1589: 33 08 01                 a1 = 0x1
  1592: 95 19 78 01              a2 = sp + 0x178
  1596: 33 0a 08                 a3 = 0x8
  1599: 0a 03                    ecalli 3 // 'write'
  1601: 95 17 38                 a0 = sp + 0x38
  1604: 33 08 03                 a1 = 0x3
  1607: 0a 0d                    ecalli 13 // 'query'
  1609: 46 16 01 02              u8 [s1 + 1] = 0x2
  1613: 7b 17 78 01              u64 [sp + 0x178] = a0
  1617: 95 17 ff 07              a0 = sp + 0x7ff
  1621: 95 77 81 03              a0 = a0 + 0x381
  1625: 33 08 01                 a1 = 0x1
  1628: 95 19 78 01              a2 = sp + 0x178
  1632: 33 0a 08                 a3 = 0x8
  1635: 0a 03                    ecalli 3 // 'write'
  1637: 95 17 58                 a0 = sp + 0x58
  1640: 33 08 03                 a1 = 0x3
  1643: 0a 0d                    ecalli 13 // 'query'
  1645: 46 16 01 05              u8 [s1 + 1] = 0x5
  1649: 7b 17 78 01              u64 [sp + 0x178] = a0
  1653: 95 17 ff 07              a0 = sp + 0x7ff
  1657: 95 77 81 03              a0 = a0 + 0x381
  1661: 33 08 01                 a1 = 0x1
  1664: 95 19 78 01              a2 = sp + 0x178
  1668: 33 0a 08                 a3 = 0x8
  1671: 0a 03                    ecalli 3 // 'write'
  1673: 28 54 03                 jump @96
      :                          @86 [@dyn 8]
  1676: 95 17 38                 a0 = sp + 0x38
  1679: 33 08 03                 a1 = 0x3
  1682: 0a 0f                    ecalli 15 // 'forget'
  1684: 95 16 ff 07              s1 = sp + 0x7ff
  1688: 95 66 80 03              s1 = s1 + 0x380
  1692: 46 16 01 01              u8 [s1 + 1] = 0x1
  1696: 7b 17 78 01              u64 [sp + 0x178] = a0
  1700: 95 17 ff 07              a0 = sp + 0x7ff
  1704: 95 77 81 03              a0 = a0 + 0x381
  1708: 33 08 01                 a1 = 0x1
  1711: 95 19 78 01              a2 = sp + 0x178
  1715: 33 0a 08                 a3 = 0x8
  1718: 0a 03                    ecalli 3 // 'write'
  1720: 95 17 38                 a0 = sp + 0x38
  1723: 33 08 03                 a1 = 0x3
  1726: 0a 0d                    ecalli 13 // 'query'
  1728: 46 16 01 02              u8 [s1 + 1] = 0x2
  1732: 7b 17 78 01              u64 [sp + 0x178] = a0
  1736: 95 17 ff 07              a0 = sp + 0x7ff
  1740: 95 77 81 03              a0 = a0 + 0x381
  1744: 33 08 01                 a1 = 0x1
  1747: 95 19 78 01              a2 = sp + 0x178
  1751: 33 0a 08                 a3 = 0x8
  1754: 0a 03                    ecalli 3 // 'write'
  1756: 95 18 58                 a1 = sp + 0x58
  1759: 95 19 78                 a2 = sp + 0x78
  1762: 33 0b 03                 a4 = 0x3
  1765: 64 57                    a0 = s0
  1767: 33 0a                    a3 = 0
  1769: 0a 01                    ecalli 1 // 'lookup'
  1771: 46 16 01 05              u8 [s1 + 1] = 0x5
  1775: 7b 17 78 01              u64 [sp + 0x178] = a0
  1779: 95 17 ff 07              a0 = sp + 0x7ff
  1783: 95 77 81 03              a0 = a0 + 0x381
  1787: 33 08 01                 a1 = 0x1
  1790: 95 19 78 01              a2 = sp + 0x178
  1794: 33 0a 08                 a3 = 0x8
  1797: 0a 03                    ecalli 3 // 'write'
  1799: 33 07 e8 03              a0 = 0x3e8
  1803: 95 18 32                 a1 = sp + 0x32
  1806: 0a 06                    ecalli 6 // 'assign'
  1808: 46 16 01 06              u8 [s1 + 1] = 0x6
  1812: 7b 17 78 01              u64 [sp + 0x178] = a0
  1816: 95 17 ff 07              a0 = sp + 0x7ff
  1820: 95 77 81 03              a0 = a0 + 0x381
  1824: 33 08 01                 a1 = 0x1
  1827: 95 19 78 01              a2 = sp + 0x178
  1831: 33 0a 08                 a3 = 0x8
  1834: 0a 03                    ecalli 3 // 'write'
  1836: 28 b1 02                 jump @96
      :                          @87 [@dyn 9]
  1839: 95 18 38                 a1 = sp + 0x38
  1842: 95 19 78                 a2 = sp + 0x78
  1845: 33 0b 03                 a4 = 0x3
  1848: 64 57                    a0 = s0
  1850: 33 0a                    a3 = 0
  1852: 0a 01                    ecalli 1 // 'lookup'
  1854: 95 16 ff 07              s1 = sp + 0x7ff
  1858: 95 66 80 03              s1 = s1 + 0x380
  1862: 46 16 01 01              u8 [s1 + 1] = 0x1
  1866: 7b 17 78 01              u64 [sp + 0x178] = a0
  1870: 95 17 ff 07              a0 = sp + 0x7ff
  1874: 95 77 81 03              a0 = a0 + 0x381
  1878: 33 08 01                 a1 = 0x1
  1881: 95 19 78 01              a2 = sp + 0x178
  1885: 33 0a 08                 a3 = 0x8
  1888: 0a 03                    ecalli 3 // 'write'
  1890: 95 17 38                 a0 = sp + 0x38
  1893: 33 08 03                 a1 = 0x3
  1896: 0a 0d                    ecalli 13 // 'query'
  1898: 46 16 01 02              u8 [s1 + 1] = 0x2
  1902: 7b 17 78 01              u64 [sp + 0x178] = a0
  1906: 95 17 ff 07              a0 = sp + 0x7ff
  1910: 95 77 81 03              a0 = a0 + 0x381
  1914: 33 08 01                 a1 = 0x1
  1917: 95 19 78 01              a2 = sp + 0x178
  1921: 33 0a 08                 a3 = 0x8
  1924: 0a 03                    ecalli 3 // 'write'
  1926: 95 18 38                 a1 = sp + 0x38
  1929: 64 57                    a0 = s0
  1931: 0a 0c                    ecalli 12 // 'eject'
  1933: 46 16 01 05              u8 [s1 + 1] = 0x5
  1937: 7b 17 78 01              u64 [sp + 0x178] = a0
  1941: 95 17 ff 07              a0 = sp + 0x7ff
  1945: 95 77 81 03              a0 = a0 + 0x381
  1949: 33 08 01                 a1 = 0x1
  1952: 95 19 78 01              a2 = sp + 0x178
  1956: 33 0a 08                 a3 = 0x8
  1959: 0a 03                    ecalli 3 // 'write'
  1961: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  1971: 95 1a 38                 a3 = sp + 0x38
  1974: 33 08                    a1 = 0
  1976: 33 09                    a2 = 0
  1978: 33 0b                    a4 = 0
  1980: 0a 05                    ecalli 5 // 'bless'
  1982: 46 16 01 06              u8 [s1 + 1] = 0x6
  1986: 7b 17 78 01              u64 [sp + 0x178] = a0
  1990: 95 17 ff 07              a0 = sp + 0x7ff
  1994: 95 77 81 03              a0 = a0 + 0x381
  1998: 33 08 01                 a1 = 0x1
  2001: 95 19 78 01              a2 = sp + 0x178
  2005: 33 0a 08                 a3 = 0x8
  2008: 0a 03                    ecalli 3 // 'write'
  2010: 28 03 02                 jump @96
      :                          @88 [@dyn 10]
  2013: 95 17 38                 a0 = sp + 0x38
  2016: 33 08 03                 a1 = 0x3
  2019: 0a 0e                    ecalli 14 // 'solicit'
  2021: 95 15 ff 07              s0 = sp + 0x7ff
  2025: 95 55 80 03              s0 = s0 + 0x380
  2029: 46 15 01 01              u8 [s0 + 1] = 0x1
  2033: 7b 17 78 01              u64 [sp + 0x178] = a0
  2037: 95 17 ff 07              a0 = sp + 0x7ff
  2041: 95 77 81 03              a0 = a0 + 0x381
  2045: 33 08 01                 a1 = 0x1
  2048: 95 19 78 01              a2 = sp + 0x178
  2052: 33 0a 08                 a3 = 0x8
  2055: 0a 03                    ecalli 3 // 'write'
  2057: 95 17 38                 a0 = sp + 0x38
  2060: 33 08 03                 a1 = 0x3
  2063: 0a 0d                    ecalli 13 // 'query'
  2065: 46 15 01 02              u8 [s0 + 1] = 0x2
  2069: 7b 17 78 01              u64 [sp + 0x178] = a0
  2073: 95 17 ff 07              a0 = sp + 0x7ff
  2077: 95 77 81 03              a0 = a0 + 0x381
  2081: 33 08 01                 a1 = 0x1
  2084: 95 19 78 01              a2 = sp + 0x178
  2088: 33 0a 08                 a3 = 0x8
  2091: 0a 03                    ecalli 3 // 'write'
  2093: 95 15 78 01              s0 = sp + 0x178
  2097: 33 09 00 0a              a2 = 0xa00
  2101: 95 17 78 01              a0 = sp + 0x178
  2105: 33 08                    a1 = 0
  2107: 50 10 16 4a 03           ra = 22, jump @131
      :                          @89 [@dyn 11]
  2112: 33 06 50                 s1 = 0x50
  2115: 01                       fallthrough
      :                          @90
  2116: 95 18 38                 a1 = sp + 0x38
  2119: 33 09 20                 a2 = 0x20
  2122: 64 57                    a0 = s0
  2124: 50 10 18 87 02           ra = 24, jump @113
      :                          @91 [@dyn 12]
  2129: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2132: 95 55 20                 s0 = s0 + 0x20
  2135: 52 06 ed                 jump @90 if s1 != 0
      :                          @92
  2138: 95 18 78 01              a1 = sp + 0x178
  2142: 33 07                    a0 = 0
  2144: 0a 06                    ecalli 6 // 'assign'
  2146: 95 16 ff 07              s1 = sp + 0x7ff
  2150: 95 66 80 03              s1 = s1 + 0x380
  2154: 46 06 05                 u8 [s1 + 0] = 0x5
  2157: 7b 67 01                 u64 [s1 + 0x1] = a0
  2160: 95 17 ff 07              a0 = sp + 0x7ff
  2164: 95 77 80 03              a0 = a0 + 0x380
  2168: 33 08 01                 a1 = 0x1
  2171: 95 19 ff 07              a2 = sp + 0x7ff
  2175: 95 99 81 03              a2 = a2 + 0x381
  2179: 33 0a 08                 a3 = 0x8
  2182: 0a 03                    ecalli 3 // 'write'
  2184: 82 15 28                 s0 = u64 [sp + 0x28]
  2187: 28 52 01                 jump @96
      :                          @93 [@dyn 13]
  2190: 95 17 38                 a0 = sp + 0x38
  2193: 33 08 03                 a1 = 0x3
  2196: 0a 0f                    ecalli 15 // 'forget'
  2198: 95 16 ff 07              s1 = sp + 0x7ff
  2202: 95 66 80 03              s1 = s1 + 0x380
  2206: 46 16 01 01              u8 [s1 + 1] = 0x1
  2210: 7b 17 78 01              u64 [sp + 0x178] = a0
  2214: 95 17 ff 07              a0 = sp + 0x7ff
  2218: 95 77 81 03              a0 = a0 + 0x381
  2222: 33 08 01                 a1 = 0x1
  2225: 95 19 78 01              a2 = sp + 0x178
  2229: 33 0a 08                 a3 = 0x8
  2232: 0a 03                    ecalli 3 // 'write'
  2234: 95 17 38                 a0 = sp + 0x38
  2237: 33 08 03                 a1 = 0x3
  2240: 0a 0d                    ecalli 13 // 'query'
  2242: 46 16 01 02              u8 [s1 + 1] = 0x2
  2246: 7b 17 78 01              u64 [sp + 0x178] = a0
  2250: 95 17 ff 07              a0 = sp + 0x7ff
  2254: 95 77 81 03              a0 = a0 + 0x381
  2258: 33 08 01                 a1 = 0x1
  2261: 95 19 78 01              a2 = sp + 0x178
  2265: 33 0a 08                 a3 = 0x8
  2268: 0a 03                    ecalli 3 // 'write'
  2270: 28 ff 00                 jump @96
      :                          @94 [@dyn 14]
  2273: 95 18 38                 a1 = sp + 0x38
  2276: 95 19 78                 a2 = sp + 0x78
  2279: 33 0b 03                 a4 = 0x3
  2282: 64 57                    a0 = s0
  2284: 33 0a                    a3 = 0
  2286: 0a 01                    ecalli 1 // 'lookup'
  2288: 95 16 ff 07              s1 = sp + 0x7ff
  2292: 95 66 80 03              s1 = s1 + 0x380
  2296: 46 16 01 01              u8 [s1 + 1] = 0x1
  2300: 7b 17 78 01              u64 [sp + 0x178] = a0
  2304: 95 17 ff 07              a0 = sp + 0x7ff
  2308: 95 77 81 03              a0 = a0 + 0x381
  2312: 33 08 01                 a1 = 0x1
  2315: 95 19 78 01              a2 = sp + 0x178
  2319: 33 0a 08                 a3 = 0x8
  2322: 0a 03                    ecalli 3 // 'write'
  2324: 95 17 38                 a0 = sp + 0x38
  2327: 33 08 03                 a1 = 0x3
  2330: 0a 0d                    ecalli 13 // 'query'
  2332: 46 16 01 02              u8 [s1 + 1] = 0x2
  2336: 7b 17 78 01              u64 [sp + 0x178] = a0
  2340: 95 17 ff 07              a0 = sp + 0x7ff
  2344: 95 77 81 03              a0 = a0 + 0x381
  2348: 33 08 01                 a1 = 0x1
  2351: 95 19 78 01              a2 = sp + 0x178
  2355: 33 0a 08                 a3 = 0x8
  2358: 0a 03                    ecalli 3 // 'write'
  2360: 28 a5 00                 jump @96
      :                          @95 [@dyn 15]
  2363: 33 09 27 ea 0d           a2 = 0xdea27
  2368: 7b 19 08                 u64 [sp + 0x8] = a2
  2371: 95 17 38                 a0 = sp + 0x38
  2374: 33 08 03                 a1 = 0x3
  2377: 33 0a 27 ea 0d           a3 = 0xdea27
  2382: 0a 09                    ecalli 9 // 'new'
  2384: 95 16 ff 07              s1 = sp + 0x7ff
  2388: 95 66 80 03              s1 = s1 + 0x380
  2392: 46 16 01 01              u8 [s1 + 1] = 0x1
  2396: 7b 17 78 01              u64 [sp + 0x178] = a0
  2400: 95 17 ff 07              a0 = sp + 0x7ff
  2404: 95 77 81 03              a0 = a0 + 0x381
  2408: 33 08 01                 a1 = 0x1
  2411: 95 19 78 01              a2 = sp + 0x178
  2415: 33 0a 08                 a3 = 0x8
  2418: 0a 03                    ecalli 3 // 'write'
  2420: 95 17 38                 a0 = sp + 0x38
  2423: 82 15 08                 s0 = u64 [sp + 0x8]
  2426: 64 58                    a1 = s0
  2428: 64 59                    a2 = s0
  2430: 0a 0a                    ecalli 10 // 'upgrade'
  2432: 46 16 01 02              u8 [s1 + 1] = 0x2
  2436: 7b 17 78 01              u64 [sp + 0x178] = a0
  2440: 95 17 ff 07              a0 = sp + 0x7ff
  2444: 95 77 81 03              a0 = a0 + 0x381
  2448: 33 08 01                 a1 = 0x1
  2451: 95 19 78 01              a2 = sp + 0x178
  2455: 33 0a 08                 a3 = 0x8
  2458: 0a 03                    ecalli 3 // 'write'
  2460: 48 21 78 01 8f 03        u32 [sp + 376] = 0x38f
  2466: 48 21 80 01              u32 [sp + 384] = 0
  2470: 7a 15 7c 01              u32 [sp + 0x17c] = s0
  2474: 33 08 01                 a1 = 0x1
  2477: 33 09 01                 a2 = 0x1
  2480: 95 1a 78 01              a3 = sp + 0x178
  2484: 33 0b 01                 a4 = 0x1
  2487: 33 07                    a0 = 0
  2489: 0a 05                    ecalli 5 // 'bless'
  2491: 46 06 05                 u8 [s1 + 0] = 0x5
  2494: 7b 67 01                 u64 [s1 + 0x1] = a0
  2497: 95 17 ff 07              a0 = sp + 0x7ff
  2501: 95 77 80 03              a0 = a0 + 0x380
  2505: 33 08 01                 a1 = 0x1
  2508: 95 19 ff 07              a2 = sp + 0x7ff
  2512: 95 99 81 03              a2 = a2 + 0x381
  2516: 33 0a 08                 a3 = 0x8
  2519: 0a 03                    ecalli 3 // 'write'
  2521: 82 15 28                 s0 = u64 [sp + 0x28]
  2524: 01                       fallthrough
      :                          @96
  2525: 95 18 78                 a1 = sp + 0x78
  2528: 64 57                    a0 = s0
  2530: 0a 04                    ecalli 4 // 'info'
  2532: 46 16 01 08              u8 [s1 + 1] = 0x8
  2536: 7b 17 78 01              u64 [sp + 0x178] = a0
  2540: 95 17 ff 07              a0 = sp + 0x7ff
  2544: 95 77 81 03              a0 = a0 + 0x381
  2548: 33 08 01                 a1 = 0x1
  2551: 95 19 78 01              a2 = sp + 0x178
  2555: 33 0a 08                 a3 = 0x8
  2558: 0a 03                    ecalli 3 // 'write'
  2560: 0a                       ecalli 0 // 'gas'
  2561: 46 16 01 09              u8 [s1 + 1] = 0x9
  2565: 7b 17 78 01              u64 [sp + 0x178] = a0
  2569: 95 17 ff 07              a0 = sp + 0x7ff
  2573: 95 77 81 03              a0 = a0 + 0x381
  2577: 33 08 01                 a1 = 0x1
  2580: 95 19 78 01              a2 = sp + 0x178
  2584: 33 0a 08                 a3 = 0x8
  2587: 0a 03                    ecalli 3 // 'write'
  2589: 01                       fallthrough
      :                          @97
  2590: 49 21 90 01              u64 [sp + 400] = 0
  2594: 49 21 88 01              u64 [sp + 392] = 0
  2598: 49 21 80 01              u64 [sp + 384] = 0
  2602: 49 21 78 01              u64 [sp + 376] = 0
  2606: 82 19 20                 a2 = u64 [sp + 0x20]
  2609: 55 19 21 9a 00           jump @108 if a2 >=u 33
      :                          @98
  2614: 82 16 10                 s1 = u64 [sp + 0x10]
  2617: 97 65 20                 s0 = s1 << 0x20
  2620: 98 55 20                 s0 = s0 >> 0x20
  2623: 95 17 78 01              a0 = sp + 0x178
  2627: 82 18 18                 a1 = u64 [sp + 0x18]
  2630: 50 10 20 8d 00           ra = 32, jump @113
      :                          @99 [@dyn 16]
  2635: 3a 08 00 00 03           a1 = u64 [0x30000]
  2640: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  2650: ca 75 07                 a0 = s0 * a0
  2653: ae 87 44                 jump @104 if a0 >=u a1
      :                          @100
  2656: 51 16 09 07              jump @102 if s1 == 9
      :                          @101
  2660: 0a 08                    ecalli 8 // 'checkpoint'
  2662: 01                       fallthrough
      :                          @102
  2663: 95 57 2a                 a0 = s0 + 0x2a
  2666: 95 19 ff 07              a2 = sp + 0x7ff
  2670: 95 99 80 03              a2 = a2 + 0x380
  2674: 46 09 07                 u8 [a2 + 0] = 0x7
  2677: 7b 97 01                 u64 [a2 + 0x1] = a0
  2680: 95 17 ff 07              a0 = sp + 0x7ff
  2684: 95 77 80 03              a0 = a0 + 0x380
  2688: 33 08 01                 a1 = 0x1
  2691: 95 19 ff 07              a2 = sp + 0x7ff
  2695: 95 99 81 03              a2 = a2 + 0x381
  2699: 33 0a 08                 a3 = 0x8
  2702: 33 00 22                 ra = 0x22
  2705: 0a 03                    ecalli 3 // 'write'
  2707: 33 07                    a0 = 0
  2709: 33 08 01                 a1 = 0x1
  2712: 32 07                    jump [a0]
      :                          @103 [@dyn 17]
  2714: 33 07                    a0 = 0
  2716: 33 08 01                 a1 = 0x1
  2719: 32 07                    jump [a0]
      :                          @104
  2721: 95 17 78 01              a0 = sp + 0x178
  2725: 0a 10                    ecalli 16 // 'oyield'
  2727: 33 08 20                 a1 = 0x20
  2730: 95 17 78 01              a0 = sp + 0x178
  2734: 95 11 a8 03              sp = sp + 0x3a8
  2738: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2742: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2746: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2750: 95 11 f8 07              sp = sp + 0x7f8
  2754: 32 00                    ret
      :                          @105
  2756: 64 56                    s1 = s0
  2758: 28 62 f8                 jump @80
      :                          @106
  2761: 00                       trap
      :                          @107
  2762: 00                       trap
      :                          @108
  2763: 00                       trap
      :                          @109
  2764: 00                       trap
      :                          @110
  2765: 00                       trap
      :                          @111
  2766: 00                       trap
      :                          @112 [export #2: 'on_transfer']
  2767: 33 07                    a0 = 0
  2769: 32 00                    ret
      :                          @113
  2771: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2774: 7b 10 18                 u64 [sp + 0x18] = ra
  2777: 7b 15 10                 u64 [sp + 0x10] = s0
  2780: 7b 16 08                 u64 [sp + 0x8] = s1
  2783: 53 19 10 64              jump @122 if a2 <u 16
      :                          @114
  2787: 8d 7a                    i32 a3 = -a0
  2789: 84 a2 07                 t0 = a3 & 0x7
  2792: c8 27 0b                 a4 = a0 + t0
  2795: 51 02 15                 jump @117 if t0 == 0
      :                          @115
  2798: 64 8c                    a5 = a1
  2800: 64 75                    s0 = a0
  2802: 01                       fallthrough
      :                          @116
  2803: 7c ca                    a3 = u8 [a5]
  2805: 78 5a                    u8 [s0] = a3
  2807: 95 55 01                 s0 = s0 + 0x1
  2810: 95 cc 01                 a5 = a5 + 0x1
  2813: ac b5 f6                 jump @116 if s0 <u a4
      :                          @117
  2816: c8 28 03                 t1 = a1 + t0
  2819: c9 29 02                 t0 = a2 - t0
  2822: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2825: 84 38 07                 a1 = t1 & 0x7
  2828: c8 4b 0a                 a3 = a4 + t2
  2831: 51 08 3b                 jump @124 if a1 == 0
      :                          @118
  2834: 58 04 4b                 jump @127 if t2 <=s 0
      :                          @119
  2837: 97 38 03                 a1 = t1 << 0x3
  2840: 84 80 38                 ra = a1 & 0x38
  2843: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2846: 82 c5                    s0 = u64 [a5]
  2848: 8d 88                    i32 a1 = -a1
  2850: 84 88 38                 a1 = a1 & 0x38
  2853: 95 cc 08                 a5 = a5 + 0x8
  2856: 01                       fallthrough
      :                          @120
  2857: 82 c6                    s1 = u64 [a5]
  2859: d0 05 05                 s0 = s0 >> ra
  2862: cf 86 09                 a2 = s1 << a1
  2865: d4 59 09                 a2 = a2 | s0
  2868: 7b b9                    u64 [a4] = a2
  2870: 95 bb 08                 a4 = a4 + 0x8
  2873: 95 cc 08                 a5 = a5 + 0x8
  2876: 64 65                    s0 = s1
  2878: ac ab eb                 jump @120 if a4 <u a3
      :                          @121
  2881: 28 1c                    jump @127
      :                          @122
  2883: 64 7a                    a3 = a0
  2885: 52 09 21                 jump @128 if a2 != 0
      :                          @123
  2888: 28 2f                    jump @130
      :                          @124
  2890: 58 04 13                 jump @127 if t2 <=s 0
      :                          @125
  2893: 64 38                    a1 = t1
  2895: 01                       fallthrough
      :                          @126
  2896: 82 89                    a2 = u64 [a1]
  2898: 7b b9                    u64 [a4] = a2
  2900: 95 bb 08                 a4 = a4 + 0x8
  2903: 95 88 08                 a1 = a1 + 0x8
  2906: ac ab f6                 jump @126 if a4 <u a3
      :                          @127
  2909: c8 43 08                 a1 = t1 + t2
  2912: 84 29 07                 a2 = t0 & 0x7
  2915: 51 09 14                 jump @130 if a2 == 0
      :                          @128
  2918: c8 a9 09                 a2 = a2 + a3
  2921: 01                       fallthrough
      :                          @129
  2922: 7c 8b                    a4 = u8 [a1]
  2924: 78 ab                    u8 [a3] = a4
  2926: 95 aa 01                 a3 = a3 + 0x1
  2929: 95 88 01                 a1 = a1 + 0x1
  2932: ac 9a f6                 jump @129 if a3 <u a2
      :                          @130
  2935: 82 10 18                 ra = u64 [sp + 0x18]
  2938: 82 15 10                 s0 = u64 [sp + 0x10]
  2941: 82 16 08                 s1 = u64 [sp + 0x8]
  2944: 95 11 20                 sp = sp + 0x20
  2947: 32 00                    ret
      :                          @131
  2949: 53 19 10 48              jump @140 if a2 <u 16
      :                          @132
  2953: 8d 7a                    i32 a3 = -a0
  2955: 84 aa 07                 a3 = a3 & 0x7
  2958: c8 a7 0b                 a4 = a0 + a3
  2961: 51 0a 0e                 jump @135 if a3 == 0
      :                          @133
  2964: 64 7c                    a5 = a0
  2966: 01                       fallthrough
      :                          @134
  2967: 78 c8                    u8 [a5] = a1
  2969: 95 cc 01                 a5 = a5 + 0x1
  2972: ac bc fb                 jump @134 if a5 <u a4
      :                          @135
  2975: c9 a9 03                 t1 = a2 - a3
  2978: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2981: c8 cb 0a                 a3 = a4 + a5
  2984: 58 0c 1d                 jump @138 if a5 <=s 0
      :                          @136
  2987: 84 82 ff 00              t0 = a1 & 0xff
  2991: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  3001: ca 92 0c                 a5 = t0 * a2
  3004: 01                       fallthrough
      :                          @137
  3005: 7b bc                    u64 [a4] = a5
  3007: 95 bb 08                 a4 = a4 + 0x8
  3010: ac ab fb                 jump @137 if a4 <u a3
      :                          @138
  3013: 84 39 07                 a2 = t1 & 0x7
  3016: 52 09 0a                 jump @141 if a2 != 0
      :                          @139
  3019: 28 13                    jump @143
      :                          @140
  3021: 64 7a                    a3 = a0
  3023: 51 09 0f                 jump @143 if a2 == 0
      :                          @141
  3026: c8 a9 09                 a2 = a2 + a3
  3029: 01                       fallthrough
      :                          @142
  3030: 78 a8                    u8 [a3] = a1
  3032: 95 aa 01                 a3 = a3 + 0x1
  3035: ac 9a fb                 jump @142 if a3 <u a2
      :                          @143
  3038: 32 00                    ret
