// RO data = 36/36 bytes
// RW data = 8/8 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [10, 0, 255, 255, 12, 0, 255, 255, 14, 0, 255, 255, 16, 0, 255, 255, 18, 0, 255, 255, 20, 0, 255, 255, 26, 0, 255, 255, 28, 0, 255, 255, 30, 0, 255, 255]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85]
// Instructions = 1016
// Code size = 3260 bytes

      :                          @0
     0: 28 ab 00 00 00           jump @27
      :                          @1
     5: 28 34 01 00 00           jump @37
      :                          @2
    10: 28 a1 0b                 jump @114
      :                          @3
    13: 51 08 9b 00              jump @24 if a1 == 0
      :                          @4
    17: 64 79                    a2 = a0
    19: 7c 77                    a0 = u8 [a0]
    21: 51 07 91 00              jump @23 if a0 == 0
      :                          @5
    25: 51 27 ff 00 90 00        jump @25 if a0 == 255
      :                          @6
    31: 6c 7a                    a3 = sext.b a0
    33: 57 0a 09                 jump @8 if a3 <s 0
      :                          @7
    36: 33 0a                    a3 = 0
    38: 33 08                    a1 = 0
    40: 28 73                    jump @22
      :                          @8
    42: 55 27 c0 00 0d           jump @10 if a0 >=u 192
      :                          @9
    47: 33 0a 01                 a3 = 0x1
    50: 33 0b 80                 a4 = 0xffffffffffffff80
    53: 28 4a                    jump @19
      :                          @10
    55: 55 27 e0 00 0e           jump @12 if a0 >=u 224
      :                          @11
    60: 33 0a 02                 a3 = 0x2
    63: 33 0b 40 ff              a4 = 0xffffffffffffff40
    67: 28 3c                    jump @19
      :                          @12
    69: 55 27 f0 00 0e           jump @14 if a0 >=u 240
      :                          @13
    74: 33 0a 03                 a3 = 0x3
    77: 33 0b 20 ff              a4 = 0xffffffffffffff20
    81: 28 2e                    jump @19
      :                          @14
    83: 55 27 f8 00 0e           jump @16 if a0 >=u 248
      :                          @15
    88: 33 0a 04                 a3 = 0x4
    91: 33 0b 10 ff              a4 = 0xffffffffffffff10
    95: 28 20                    jump @19
      :                          @16
    97: 55 27 fc 00 0e           jump @18 if a0 >=u 252
      :                          @17
   102: 33 0a 05                 a3 = 0x5
   105: 33 0b 08 ff              a4 = 0xffffffffffffff08
   109: 28 12                    jump @19
      :                          @18
   111: 88 7a fe 00              a3 = a0 <u 0xfe
   115: 33 0b 04 ff              a4 = 0xffffffffffffff04
   119: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
   123: 85 aa 07                 a3 = a3 ^ 0x7
   126: 01                       fallthrough
      :                          @19
   127: ae 8a 2b                 jump @26 if a3 >=u a1
      :                          @20
   130: 33 08                    a1 = 0
   132: c8 b7 07                 a0 = a0 + a4
   135: 64 ab                    a4 = a3
   137: 01                       fallthrough
      :                          @21
   138: c8 b9 0c                 a5 = a2 + a4
   141: 7c cc                    a5 = u8 [a5]
   143: 97 88 08                 a1 = a1 << 0x8
   146: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
   149: d4 c8 08                 a1 = a1 | a5
   152: 52 0b f2                 jump @21 if a4 != 0
      :                          @22
   155: 8a a9 03                 i32 a2 = a3 << 0x3
   158: cf 97 07                 a0 = a0 << a2
   161: c8 87 07                 a0 = a0 + a1
   164: 32 00                    ret
      :                          @23
   166: 32 00                    ret
      :                          @24
   168: 00                       trap
      :                          @25
   169: 00                       trap
      :                          @26
   170: 00                       trap
      :                          @27 [export #0: 'refine']
   171: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   174: 7b 10 20                 u64 [sp + 0x20] = ra
   177: 7b 15 18                 u64 [sp + 0x18] = s0
   180: 7b 16 10                 u64 [sp + 0x10] = s1
   183: 49 11 08                 u64 [sp + 8] = 0
   186: 49 01                    u64 [sp + 0] = 0
   188: 64 17                    a0 = sp
   190: 33 09 10                 a2 = 0x10
   193: 33 0a 05                 a3 = 0x5
   196: 33 08                    a1 = 0
   198: 33 0b                    a4 = 0
   200: 33 0c                    a5 = 0
   202: 0a 12                    ecalli 18 // 'fetch'
   204: 01                       fallthrough
      :                          @28
   205: 51 17 ff 42              jump @35 if a0 == 4294967295
      :                          @29
   209: 81 17 04                 a0 = i32 [sp + 0x4]
   212: 81 18 08                 a1 = i32 [sp + 0x8]
   215: 81 15                    s0 = i32 [sp]
   217: be 78 08                 i32 a1 = a1 + a0
   220: 83 59 01                 i32 a2 = s0 + 0x1
   223: 7a 19                    u32 [sp] = a2
   225: 7a 18 04                 u32 [sp + 0x4] = a1
   228: 7a 17 08                 u32 [sp + 0x8] = a0
   231: 64 17                    a0 = sp
   233: 33 08 10                 a1 = 0x10
   236: 0a 13                    ecalli 19 // 'export'
   238: 01                       fallthrough
      :                          @30
   239: 51 05 37                 jump @36 if s0 == 0
      :                          @31
   242: 8d 55                    i32 s0 = -s0
   244: 33 06 01                 s1 = 0x1
   247: 01                       fallthrough
      :                          @32
   248: 7a 16 0c                 u32 [sp + 0xc] = s1
   251: 64 17                    a0 = sp
   253: 33 08 10                 a1 = 0x10
   256: 0a 13                    ecalli 19 // 'export'
   258: 01                       fallthrough
      :                          @33
   259: 83 66 01                 i32 s1 = s1 + 0x1
   262: be 65 07                 i32 a0 = s0 + s1
   265: 52 17 01 ef              jump @32 if a0 != 1
      :                          @34
   269: 28 19                    jump @36
      :                          @35
   271: 14 07 01 00 00 00 01 00 00 00 a0 = 0x100000001
   281: 7b 17                    u64 [sp] = a0
   283: 48 11 08                 u32 [sp + 8] = 0
   286: 64 17                    a0 = sp
   288: 33 08 10                 a1 = 0x10
   291: 0a 13                    ecalli 19 // 'export'
   293: 01                       fallthrough
      :                          @36
   294: 33 08 10                 a1 = 0x10
   297: 64 17                    a0 = sp
   299: 82 10 20                 ra = u64 [sp + 0x20]
   302: 82 15 18                 s0 = u64 [sp + 0x18]
   305: 82 16 10                 s1 = u64 [sp + 0x10]
   308: 95 11 28                 sp = sp + 0x28
   311: 32 00                    ret
      :                          @37 [export #1: 'accumulate']
   313: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   317: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   321: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   325: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   329: 95 11 60 fc              sp = sp + 0xfffffffffffffc60
   333: 64 85                    s0 = a1
   335: 95 55 f8                 s0 = s0 + 0xfffffffffffffff8
   338: 51 05 53 0a              jump @108 if s0 == 0
      :                          @38
   342: 95 7b 08                 a4 = a0 + 0x8
   345: 7d b8                    a1 = i8 [a4]
   347: 33 06 01                 s1 = 0x1
   350: 5a 08 69                 jump @46 if a1 >s 0
      :                          @39
   353: 84 88 ff 00              a1 = a1 & 0xff
   357: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
   360: 84 99 ff 00              a2 = a2 & 0xff
   364: 33 0a bf 00              a3 = 0xbf
   368: 33 06 02                 s1 = 0x2
   371: ac a9 54                 jump @46 if a2 <u a3
      :                          @40
   374: 84 89 e0 00              a2 = a1 & 0xe0
   378: 33 0a c0 00              a3 = 0xc0
   382: 33 06 03                 s1 = 0x3
   385: aa a9 46                 jump @46 if a2 == a3
      :                          @41
   388: 84 89 f0 00              a2 = a1 & 0xf0
   392: 33 0a e0 00              a3 = 0xe0
   396: 33 06 04                 s1 = 0x4
   399: aa a9 38                 jump @46 if a2 == a3
      :                          @42
   402: 84 89 f8 00              a2 = a1 & 0xf8
   406: 33 0a f0 00              a3 = 0xf0
   410: 33 06 05                 s1 = 0x5
   413: aa a9 2a                 jump @46 if a2 == a3
      :                          @43
   416: 84 89 fc 00              a2 = a1 & 0xfc
   420: 33 0a f8 00              a3 = 0xf8
   424: 33 06 06                 s1 = 0x6
   427: aa a9 1c                 jump @46 if a2 == a3
      :                          @44
   430: 84 89 fe 00              a2 = a1 & 0xfe
   434: 33 0a fc 00              a3 = 0xfc
   438: 33 06 07                 s1 = 0x7
   441: aa a9 0e                 jump @46 if a2 == a3
      :                          @45
   444: 88 88 fe 00              a1 = a1 <u 0xfe
   448: 85 86 01                 s1 = a1 ^ 0x1
   451: 97 66 03                 s1 = s1 << 0x3
   454: 01                       fallthrough
      :                          @46
   455: 7b 15 18                 u64 [sp + 0x18] = s0
   458: ac 65 dc 09              jump @109 if s0 <u s1
      :                          @47
   462: 80 77 04                 a0 = u32 [a0 + 0x4]
   465: 7b 17 20                 u64 [sp + 0x20] = a0
   468: 64 b5                    s0 = a4
   470: 64 b7                    a0 = a4
   472: 64 68                    a1 = s1
   474: 50 10 02 33 fe           ra = 2, jump @3
      :                          @48 [@dyn 1]
   479: 51 07 29                 jump @53 if a0 == 0
      :                          @49
   482: 82 19 18                 a2 = u64 [sp + 0x18]
   485: aa 69 c3 09              jump @111 if a2 == s1
      :                          @50
   489: c8 56 07                 a0 = s1 + s0
   492: 7c 78                    a1 = u8 [a0]
   494: 95 7b 01                 a4 = a0 + 0x1
   497: 85 67 ff                 a0 = s1 ^ 0xffffffffffffffff
   500: c8 79 05                 s0 = a2 + a0
   503: 51 08 18                 jump @54 if a1 == 0
      :                          @51
   506: 33 06                    s1 = 0
   508: 33 0a                    a3 = 0
   510: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   513: 52 08 a1 00              jump @68 if a1 != 0
      :                          @52
   517: 28 23 01                 jump @80
      :                          @53
   520: 33 06                    s1 = 0
   522: 33 0a                    a3 = 0
   524: 28 1c 01                 jump @80
      :                          @54
   527: 51 05 79                 jump @66 if s0 == 0
      :                          @55
   530: 7d b7                    a0 = i8 [a4]
   532: 33 06 01                 s1 = 0x1
   535: 5a 07 5a                 jump @63 if a0 >s 0
      :                          @56
   538: 84 77 ff 00              a0 = a0 & 0xff
   542: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
   545: 84 88 ff 00              a1 = a1 & 0xff
   549: 33 06 02                 s1 = 0x2
   552: 53 28 bf 00 49           jump @63 if a1 <u 191
      :                          @57
   557: 84 78 e0 00              a1 = a0 & 0xe0
   561: 33 06 03                 s1 = 0x3
   564: 51 28 c0 00 3d           jump @63 if a1 == 192
      :                          @58
   569: 84 78 f0 00              a1 = a0 & 0xf0
   573: 33 06 04                 s1 = 0x4
   576: 51 28 e0 00 31           jump @63 if a1 == 224
      :                          @59
   581: 84 78 f8 00              a1 = a0 & 0xf8
   585: 33 06 05                 s1 = 0x5
   588: 51 28 f0 00 25           jump @63 if a1 == 240
      :                          @60
   593: 84 78 fc 00              a1 = a0 & 0xfc
   597: 33 06 06                 s1 = 0x6
   600: 51 28 f8 00 19           jump @63 if a1 == 248
      :                          @61
   605: 84 78 fe 00              a1 = a0 & 0xfe
   609: 33 06 07                 s1 = 0x7
   612: 51 28 fc 00 0d           jump @63 if a1 == 252
      :                          @62
   617: 33 06 08                 s1 = 0x8
   620: 53 27 fe 00 1c           jump @66 if a0 <u 254
      :                          @63
   625: ac 65 38 09              jump @112 if s0 <u s1
      :                          @64
   629: 64 b7                    a0 = a4
   631: 64 68                    a1 = s1
   633: 7b 1b 18                 u64 [sp + 0x18] = a4
   636: 50 10 04 91 fd           ra = 4, jump @3
      :                          @65 [@dyn 2]
   641: 82 1b 18                 a4 = u64 [sp + 0x18]
   644: 64 7a                    a3 = a0
   646: 28 07                    jump @67
      :                          @66
   648: 33 06                    s1 = 0
   650: 33 0a                    a3 = 0
   652: 01                       fallthrough
      :                          @67
   653: c8 6b 07                 a0 = a4 + s1
   656: c8 a7 0b                 a4 = a0 + a3
   659: c8 a6 06                 s1 = s1 + a3
   662: c9 65 05                 s0 = s0 - s1
   665: 64 76                    s1 = a0
   667: 95 58 c0                 a1 = s0 + 0xffffffffffffffc0
   670: 51 08 8a 00              jump @80 if a1 == 0
      :                          @68
   674: 95 b7 40                 a0 = a4 + 0x40
   677: 7d 7b                    a4 = i8 [a0]
   679: 33 09 01                 a2 = 0x1
   682: 5a 0b 72                 jump @78 if a4 >s 0
      :                          @69
   685: 64 65                    s0 = s1
   687: 84 b6 ff 00              s1 = a4 & 0xff
   691: 83 69 ff                 i32 a2 = s1 + 0xffffffffffffffff
   694: 84 9b ff 00              a4 = a2 & 0xff
   698: 33 0c bf 00              a5 = 0xbf
   702: 33 09 02                 a2 = 0x2
   705: ac cb 54                 jump @76 if a4 <u a5
      :                          @70
   708: 84 6b e0 00              a4 = s1 & 0xe0
   712: 33 0c c0 00              a5 = 0xc0
   716: 33 09 03                 a2 = 0x3
   719: aa cb 46                 jump @76 if a4 == a5
      :                          @71
   722: 84 6b f0 00              a4 = s1 & 0xf0
   726: 33 0c e0 00              a5 = 0xe0
   730: 33 09 04                 a2 = 0x4
   733: aa cb 38                 jump @76 if a4 == a5
      :                          @72
   736: 84 6b f8 00              a4 = s1 & 0xf8
   740: 33 0c f0 00              a5 = 0xf0
   744: 33 09 05                 a2 = 0x5
   747: aa cb 2a                 jump @76 if a4 == a5
      :                          @73
   750: 84 6b fc 00              a4 = s1 & 0xfc
   754: 33 0c f8 00              a5 = 0xf8
   758: 33 09 06                 a2 = 0x6
   761: aa cb 1c                 jump @76 if a4 == a5
      :                          @74
   764: 84 6b fe 00              a4 = s1 & 0xfe
   768: 33 0c fc 00              a5 = 0xfc
   772: 33 09 07                 a2 = 0x7
   775: aa cb 0e                 jump @76 if a4 == a5
      :                          @75
   778: 33 0b fe 00              a4 = 0xfe
   782: 33 09 08                 a2 = 0x8
   785: ac b6 8f 08              jump @107 if s1 <u a4
      :                          @76
   789: ac 98 95 08              jump @113 if a1 <u a2
      :                          @77
   793: 64 56                    s1 = s0
   795: 01                       fallthrough
      :                          @78
   796: 64 98                    a1 = a2
   798: 64 a5                    s0 = a3
   800: 50 10 06 ed fc           ra = 6, jump @3
      :                          @79 [@dyn 3]
   805: 64 5a                    a3 = s0
   807: 01                       fallthrough
      :                          @80
   808: 46 11 29                 u8 [sp + 41] = 0
   811: 81 65                    s0 = i32 [s1]
   813: 95 17 29                 a0 = sp + 0x29
   816: 33 08 01                 a1 = 0x1
   819: 7b 16 10                 u64 [sp + 0x10] = s1
   822: 64 69                    a2 = s1
   824: 7b 1a 18                 u64 [sp + 0x18] = a3
   827: 0a 03                    ecalli 3 // 'write'
   829: 46 11 2a 6a              u8 [sp + 42] = 0x6a
   833: 46 11 2b 61              u8 [sp + 43] = 0x61
   837: 46 11 2c 6d              u8 [sp + 44] = 0x6d
   841: 46 11 2d 44              u8 [sp + 45] = 0x44
   845: 46 11 2e 4f              u8 [sp + 46] = 0x4f
   849: 46 11 2f 54              u8 [sp + 47] = 0x54
   853: 46 11 30 6a              u8 [sp + 48] = 0x6a
   857: 46 11 31 0d              u8 [sp + 49] = 0xd
   861: 46 11 32 4a              u8 [sp + 50] = 0x4a
   865: 46 11 33 19              u8 [sp + 51] = 0x19
   869: 46 11 34 d1 00           u8 [sp + 52] = 0xd1
   874: 46 11 35 99 00           u8 [sp + 53] = 0x99
   879: 46 11 36 50              u8 [sp + 54] = 0x50
   883: 46 11 37 57              u8 [sp + 55] = 0x57
   887: 46 11 38 13              u8 [sp + 56] = 0x13
   891: 46 11 39 fc 00           u8 [sp + 57] = 0xfc
   896: 46 11 3a 65              u8 [sp + 58] = 0x65
   900: 46 11 3b f5 00           u8 [sp + 59] = 0xf5
   905: 46 11 3c 31              u8 [sp + 60] = 0x31
   909: 46 11 3d 03              u8 [sp + 61] = 0x3
   913: 46 11 3e 8e 00           u8 [sp + 62] = 0x8e
   918: 46 11 3f 73              u8 [sp + 63] = 0x73
   922: 33 0b f1 00              a4 = 0xf1
   926: 78 1b 40                 u8 [sp + 0x40] = a4
   929: 46 11 41 d8 00           u8 [sp + 65] = 0xd8
   934: 46 11 42 85 00           u8 [sp + 66] = 0x85
   939: 46 11 43 64              u8 [sp + 67] = 0x64
   943: 46 11 44 56              u8 [sp + 68] = 0x56
   947: 46 11 45 32              u8 [sp + 69] = 0x32
   951: 46 11 46 c8 00           u8 [sp + 70] = 0xc8
   956: 33 06 ae 00              s1 = 0xae
   960: 78 16 47                 u8 [sp + 0x47] = s1
   963: 46 11 48 50              u8 [sp + 72] = 0x50
   967: 33 0c 3c                 a5 = 0x3c
   970: 78 1c 49                 u8 [sp + 0x49] = a5
   973: 46 11 4a 4f              u8 [sp + 74] = 0x4f
   977: 46 11 4b 0c              u8 [sp + 75] = 0xc
   981: 46 11 4c 4d              u8 [sp + 76] = 0x4d
   985: 46 11 4d 5e              u8 [sp + 77] = 0x5e
   989: 46 11 4e 19              u8 [sp + 78] = 0x19
   993: 46 11 4f a7 00           u8 [sp + 79] = 0xa7
   998: 46 11 50 bf 00           u8 [sp + 80] = 0xbf
  1003: 46 11 51 a9 00           u8 [sp + 81] = 0xa9
  1008: 46 11 52 bb 00           u8 [sp + 82] = 0xbb
  1013: 46 11 53 0f              u8 [sp + 83] = 0xf
  1017: 46 11 54 a4 00           u8 [sp + 84] = 0xa4
  1022: 46 11 55 96 00           u8 [sp + 85] = 0x96
  1027: 46 11 56 87 00           u8 [sp + 86] = 0x87
  1032: 46 11 57 47              u8 [sp + 87] = 0x47
  1036: 46 11 58 e6 00           u8 [sp + 88] = 0xe6
  1041: 46 11 59 3d              u8 [sp + 89] = 0x3d
  1045: 78 1c 5a                 u8 [sp + 0x5a] = a5
  1048: 78 1b 5b                 u8 [sp + 0x5b] = a4
  1051: 46 11 5c e7 00           u8 [sp + 92] = 0xe7
  1056: 46 11 5d 4a              u8 [sp + 93] = 0x4a
  1060: 46 11 5e 49              u8 [sp + 94] = 0x49
  1064: 46 11 5f dd 00           u8 [sp + 95] = 0xdd
  1069: 46 11 60 c4 00           u8 [sp + 96] = 0xc4
  1074: 46 11 61 a6 00           u8 [sp + 97] = 0xa6
  1079: 46 11 62 ec 00           u8 [sp + 98] = 0xec
  1084: 46 11 63 a8 00           u8 [sp + 99] = 0xa8
  1089: 46 11 64 9a 00           u8 [sp + 100] = 0x9a
  1094: 46 11 65 6a              u8 [sp + 101] = 0x6a
  1098: 46 11 66 6f              u8 [sp + 102] = 0x6f
  1102: 46 11 67 33              u8 [sp + 103] = 0x33
  1106: 46 11 68 9d 00           u8 [sp + 104] = 0x9d
  1111: 46 11 69 a3 00           u8 [sp + 105] = 0xa3
  1116: 46 11 6a 33              u8 [sp + 106] = 0x33
  1120: 46 11 6b 7f              u8 [sp + 107] = 0x7f
  1124: 46 11 6c d2 00           u8 [sp + 108] = 0xd2
  1129: 46 11 6d eb 00           u8 [sp + 109] = 0xeb
  1134: 46 11 6e 55              u8 [sp + 110] = 0x55
  1138: 46 11 6f 07              u8 [sp + 111] = 0x7
  1142: 95 17 70                 a0 = sp + 0x70
  1145: 33 09 00 01              a2 = 0x100
  1149: 33 08                    a1 = 0
  1151: 50 10 08 e2 07           ra = 8, jump @133
      :                          @81 [@dyn 4]
  1156: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  1159: 56 17 08 d4 00           jump @84 if a0 >u 8
      :                          @82
  1164: 97 77 02                 a0 = a0 << 0x2
  1167: 33 08 00 00 01           a1 = 0x10000
  1172: c8 87 07                 a0 = a0 + a1
  1175: 81 77                    a0 = i32 [a0]
  1177: c8 87 07                 a0 = a0 + a1
  1180: 82 16 20                 s1 = u64 [sp + 0x20]
  1183: 32 07                    jump [a0]
      :                          @83 [@dyn 5]
  1185: 95 18 2a                 a1 = sp + 0x2a
  1188: 33 09 03                 a2 = 0x3
  1191: 95 1a 70                 a3 = sp + 0x70
  1194: 33 0c 00 01              a5 = 0x100
  1198: 64 67                    a0 = s1
  1200: 33 0b                    a4 = 0
  1202: 0a 02                    ecalli 2 // 'read'
  1204: 95 16 ff 07              s1 = sp + 0x7ff
  1208: 95 66 78 03              s1 = s1 + 0x378
  1212: 46 16 01 01              u8 [s1 + 1] = 0x1
  1216: 7b 17 70 01              u64 [sp + 0x170] = a0
  1220: 95 17 ff 07              a0 = sp + 0x7ff
  1224: 95 77 79 03              a0 = a0 + 0x379
  1228: 33 08 01                 a1 = 0x1
  1231: 95 19 70 01              a2 = sp + 0x170
  1235: 33 0a 08                 a3 = 0x8
  1238: 0a 03                    ecalli 3 // 'write'
  1240: 95 17 2a                 a0 = sp + 0x2a
  1243: 33 08 03                 a1 = 0x3
  1246: 95 19 2d                 a2 = sp + 0x2d
  1249: 33 0a 03                 a3 = 0x3
  1252: 0a 03                    ecalli 3 // 'write'
  1254: 46 16 01 02              u8 [s1 + 1] = 0x2
  1258: 7b 17 70 01              u64 [sp + 0x170] = a0
  1262: 95 17 ff 07              a0 = sp + 0x7ff
  1266: 95 77 79 03              a0 = a0 + 0x379
  1270: 33 08 01                 a1 = 0x1
  1273: 95 19 70 01              a2 = sp + 0x170
  1277: 33 0a 08                 a3 = 0x8
  1280: 0a 03                    ecalli 3 // 'write'
  1282: 95 18 2a                 a1 = sp + 0x2a
  1285: 33 09 03                 a2 = 0x3
  1288: 95 1a 70                 a3 = sp + 0x70
  1291: 33 0c 00 01              a5 = 0x100
  1295: 82 17 20                 a0 = u64 [sp + 0x20]
  1298: 33 0b                    a4 = 0
  1300: 0a 02                    ecalli 2 // 'read'
  1302: 46 16 01 05              u8 [s1 + 1] = 0x5
  1306: 7b 17 70 01              u64 [sp + 0x170] = a0
  1310: 95 17 ff 07              a0 = sp + 0x7ff
  1314: 95 77 79 03              a0 = a0 + 0x379
  1318: 33 08 01                 a1 = 0x1
  1321: 95 19 70 01              a2 = sp + 0x170
  1325: 33 0a 08                 a3 = 0x8
  1328: 0a 03                    ecalli 3 // 'write'
  1330: 95 17 2a                 a0 = sp + 0x2a
  1333: 33 08                    a1 = 0
  1335: 0a 0f                    ecalli 15 // 'forget'
  1337: 46 16 01 06              u8 [s1 + 1] = 0x6
  1341: 7b 17 70 01              u64 [sp + 0x170] = a0
  1345: 95 17 ff 07              a0 = sp + 0x7ff
  1349: 95 77 79 03              a0 = a0 + 0x379
  1353: 33 08 01                 a1 = 0x1
  1356: 95 19 70 01              a2 = sp + 0x170
  1360: 33 0a 08                 a3 = 0x8
  1363: 0a 03                    ecalli 3 // 'write'
  1365: 82 1b 20                 a4 = u64 [sp + 0x20]
  1368: 28 62 05                 jump @98
      :                          @84
  1371: 82 1b 20                 a4 = u64 [sp + 0x20]
  1374: 95 16 ff 07              s1 = sp + 0x7ff
  1378: 95 66 78 03              s1 = s1 + 0x378
  1382: 52 25 00 04 54 05        jump @98 if s0 != 1024
      :                          @85
  1388: 7b 15 08                 u64 [sp + 0x8] = s0
  1391: 33 05 27 ea 0d           s0 = 0xdea27
  1396: 95 17 30                 a0 = sp + 0x30
  1399: 33 08 03                 a1 = 0x3
  1402: 33 09 27 ea 0d           a2 = 0xdea27
  1407: 33 0a 27 ea 0d           a3 = 0xdea27
  1412: 0a 09                    ecalli 9 // 'new'
  1414: 46 16 01 01              u8 [s1 + 1] = 0x1
  1418: 7b 17 70 01              u64 [sp + 0x170] = a0
  1422: 95 17 ff 07              a0 = sp + 0x7ff
  1426: 95 77 79 03              a0 = a0 + 0x379
  1430: 33 08 01                 a1 = 0x1
  1433: 95 19 70 01              a2 = sp + 0x170
  1437: 33 0a 08                 a3 = 0x8
  1440: 0a 03                    ecalli 3 // 'write'
  1442: 95 17 30                 a0 = sp + 0x30
  1445: 64 58                    a1 = s0
  1447: 64 59                    a2 = s0
  1449: 0a 0a                    ecalli 10 // 'upgrade'
  1451: 46 16 01 02              u8 [s1 + 1] = 0x2
  1455: 7b 17 70 01              u64 [sp + 0x170] = a0
  1459: 95 17 ff 07              a0 = sp + 0x7ff
  1463: 95 77 79 03              a0 = a0 + 0x379
  1467: 33 08 01                 a1 = 0x1
  1470: 95 19 70 01              a2 = sp + 0x170
  1474: 33 0a 08                 a3 = 0x8
  1477: 0a 03                    ecalli 3 // 'write'
  1479: 48 21 70 01 8f 03        u32 [sp + 368] = 0x38f
  1485: 48 21 78 01              u32 [sp + 376] = 0
  1489: 7a 15 74 01              u32 [sp + 0x174] = s0
  1493: 82 15 08                 s0 = u64 [sp + 0x8]
  1496: 33 08 01                 a1 = 0x1
  1499: 33 09 01                 a2 = 0x1
  1502: 95 1a 70 01              a3 = sp + 0x170
  1506: 33 0b 01                 a4 = 0x1
  1509: 33 07                    a0 = 0
  1511: 0a 05                    ecalli 5 // 'bless'
  1513: 46 06 05                 u8 [s1 + 0] = 0x5
  1516: 7b 67 01                 u64 [s1 + 0x1] = a0
  1519: 95 17 ff 07              a0 = sp + 0x7ff
  1523: 95 77 78 03              a0 = a0 + 0x378
  1527: 33 08 01                 a1 = 0x1
  1530: 95 19 ff 07              a2 = sp + 0x7ff
  1534: 95 99 79 03              a2 = a2 + 0x379
  1538: 33 0a 08                 a3 = 0x8
  1541: 0a 03                    ecalli 3 // 'write'
  1543: 82 1b 20                 a4 = u64 [sp + 0x20]
  1546: 28 b0 04                 jump @98
      :                          @86 [@dyn 6]
  1549: 95 18 2a                 a1 = sp + 0x2a
  1552: 33 09 03                 a2 = 0x3
  1555: 95 1a 70                 a3 = sp + 0x70
  1558: 33 0c 00 01              a5 = 0x100
  1562: 64 67                    a0 = s1
  1564: 33 0b                    a4 = 0
  1566: 0a 02                    ecalli 2 // 'read'
  1568: 95 16 ff 07              s1 = sp + 0x7ff
  1572: 95 66 78 03              s1 = s1 + 0x378
  1576: 46 16 01 01              u8 [s1 + 1] = 0x1
  1580: 7b 17 70 01              u64 [sp + 0x170] = a0
  1584: 95 17 ff 07              a0 = sp + 0x7ff
  1588: 95 77 79 03              a0 = a0 + 0x379
  1592: 33 08 01                 a1 = 0x1
  1595: 95 19 70 01              a2 = sp + 0x170
  1599: 33 0a 08                 a3 = 0x8
  1602: 0a 03                    ecalli 3 // 'write'
  1604: 95 17 2a                 a0 = sp + 0x2a
  1607: 33 08 03                 a1 = 0x3
  1610: 33 09                    a2 = 0
  1612: 33 0a                    a3 = 0
  1614: 0a 03                    ecalli 3 // 'write'
  1616: 46 16 01 02              u8 [s1 + 1] = 0x2
  1620: 7b 17 70 01              u64 [sp + 0x170] = a0
  1624: 95 17 ff 07              a0 = sp + 0x7ff
  1628: 95 77 79 03              a0 = a0 + 0x379
  1632: 33 08 01                 a1 = 0x1
  1635: 95 19 70 01              a2 = sp + 0x170
  1639: 33 0a 08                 a3 = 0x8
  1642: 0a 03                    ecalli 3 // 'write'
  1644: 95 18 2a                 a1 = sp + 0x2a
  1647: 33 09 03                 a2 = 0x3
  1650: 95 1a 70                 a3 = sp + 0x70
  1653: 33 0c 00 01              a5 = 0x100
  1657: 82 17 20                 a0 = u64 [sp + 0x20]
  1660: 33 0b                    a4 = 0
  1662: 0a 02                    ecalli 2 // 'read'
  1664: 46 16 01 05              u8 [s1 + 1] = 0x5
  1668: 7b 17 70 01              u64 [sp + 0x170] = a0
  1672: 95 17 ff 07              a0 = sp + 0x7ff
  1676: 95 77 79 03              a0 = a0 + 0x379
  1680: 33 08 01                 a1 = 0x1
  1683: 95 19 70 01              a2 = sp + 0x170
  1687: 33 0a 08                 a3 = 0x8
  1690: 0a 03                    ecalli 3 // 'write'
  1692: 95 17 30                 a0 = sp + 0x30
  1695: 33 08 03                 a1 = 0x3
  1698: 0a 0e                    ecalli 14 // 'solicit'
  1700: 46 16 01 06              u8 [s1 + 1] = 0x6
  1704: 7b 17 70 01              u64 [sp + 0x170] = a0
  1708: 95 17 ff 07              a0 = sp + 0x7ff
  1712: 95 77 79 03              a0 = a0 + 0x379
  1716: 33 08 01                 a1 = 0x1
  1719: 95 19 70 01              a2 = sp + 0x170
  1723: 33 0a 08                 a3 = 0x8
  1726: 0a 03                    ecalli 3 // 'write'
  1728: 82 1b 20                 a4 = u64 [sp + 0x20]
  1731: 28 f7 03                 jump @98
      :                          @87 [@dyn 7]
  1734: 95 17 30                 a0 = sp + 0x30
  1737: 33 08 03                 a1 = 0x3
  1740: 0a 0e                    ecalli 14 // 'solicit'
  1742: 95 16 ff 07              s1 = sp + 0x7ff
  1746: 95 66 78 03              s1 = s1 + 0x378
  1750: 46 16 01 01              u8 [s1 + 1] = 0x1
  1754: 7b 17 70 01              u64 [sp + 0x170] = a0
  1758: 95 17 ff 07              a0 = sp + 0x7ff
  1762: 95 77 79 03              a0 = a0 + 0x379
  1766: 33 08 01                 a1 = 0x1
  1769: 95 19 70 01              a2 = sp + 0x170
  1773: 33 0a 08                 a3 = 0x8
  1776: 0a 03                    ecalli 3 // 'write'
  1778: 95 17 30                 a0 = sp + 0x30
  1781: 33 08 03                 a1 = 0x3
  1784: 0a 0d                    ecalli 13 // 'query'
  1786: 46 16 01 02              u8 [s1 + 1] = 0x2
  1790: 7b 17 70 01              u64 [sp + 0x170] = a0
  1794: 95 17 ff 07              a0 = sp + 0x7ff
  1798: 95 77 79 03              a0 = a0 + 0x379
  1802: 33 08 01                 a1 = 0x1
  1805: 95 19 70 01              a2 = sp + 0x170
  1809: 33 0a 08                 a3 = 0x8
  1812: 0a 03                    ecalli 3 // 'write'
  1814: 95 17 50                 a0 = sp + 0x50
  1817: 33 08 03                 a1 = 0x3
  1820: 0a 0d                    ecalli 13 // 'query'
  1822: 46 16 01 05              u8 [s1 + 1] = 0x5
  1826: 7b 17 70 01              u64 [sp + 0x170] = a0
  1830: 95 17 ff 07              a0 = sp + 0x7ff
  1834: 95 77 79 03              a0 = a0 + 0x379
  1838: 33 08 01                 a1 = 0x1
  1841: 95 19 70 01              a2 = sp + 0x170
  1845: 33 0a 08                 a3 = 0x8
  1848: 0a 03                    ecalli 3 // 'write'
  1850: 82 1b 20                 a4 = u64 [sp + 0x20]
  1853: 28 7d 03                 jump @98
      :                          @88 [@dyn 8]
  1856: 95 17 30                 a0 = sp + 0x30
  1859: 33 08 03                 a1 = 0x3
  1862: 0a 0f                    ecalli 15 // 'forget'
  1864: 95 16 ff 07              s1 = sp + 0x7ff
  1868: 95 66 78 03              s1 = s1 + 0x378
  1872: 46 16 01 01              u8 [s1 + 1] = 0x1
  1876: 7b 17 70 01              u64 [sp + 0x170] = a0
  1880: 95 17 ff 07              a0 = sp + 0x7ff
  1884: 95 77 79 03              a0 = a0 + 0x379
  1888: 33 08 01                 a1 = 0x1
  1891: 95 19 70 01              a2 = sp + 0x170
  1895: 33 0a 08                 a3 = 0x8
  1898: 0a 03                    ecalli 3 // 'write'
  1900: 95 17 30                 a0 = sp + 0x30
  1903: 33 08 03                 a1 = 0x3
  1906: 0a 0d                    ecalli 13 // 'query'
  1908: 46 16 01 02              u8 [s1 + 1] = 0x2
  1912: 7b 17 70 01              u64 [sp + 0x170] = a0
  1916: 95 17 ff 07              a0 = sp + 0x7ff
  1920: 95 77 79 03              a0 = a0 + 0x379
  1924: 33 08 01                 a1 = 0x1
  1927: 95 19 70 01              a2 = sp + 0x170
  1931: 33 0a 08                 a3 = 0x8
  1934: 0a 03                    ecalli 3 // 'write'
  1936: 95 18 50                 a1 = sp + 0x50
  1939: 95 19 70                 a2 = sp + 0x70
  1942: 33 0b 03                 a4 = 0x3
  1945: 82 17 20                 a0 = u64 [sp + 0x20]
  1948: 33 0a                    a3 = 0
  1950: 0a 01                    ecalli 1 // 'lookup'
  1952: 46 16 01 05              u8 [s1 + 1] = 0x5
  1956: 7b 17 70 01              u64 [sp + 0x170] = a0
  1960: 95 17 ff 07              a0 = sp + 0x7ff
  1964: 95 77 79 03              a0 = a0 + 0x379
  1968: 33 08 01                 a1 = 0x1
  1971: 95 19 70 01              a2 = sp + 0x170
  1975: 33 0a 08                 a3 = 0x8
  1978: 0a 03                    ecalli 3 // 'write'
  1980: 33 07 e8 03              a0 = 0x3e8
  1984: 95 18 2a                 a1 = sp + 0x2a
  1987: 0a 06                    ecalli 6 // 'assign'
  1989: 46 16 01 06              u8 [s1 + 1] = 0x6
  1993: 7b 17 70 01              u64 [sp + 0x170] = a0
  1997: 95 17 ff 07              a0 = sp + 0x7ff
  2001: 95 77 79 03              a0 = a0 + 0x379
  2005: 33 08 01                 a1 = 0x1
  2008: 95 19 70 01              a2 = sp + 0x170
  2012: 33 0a 08                 a3 = 0x8
  2015: 0a 03                    ecalli 3 // 'write'
  2017: 82 1b 20                 a4 = u64 [sp + 0x20]
  2020: 28 d6 02                 jump @98
      :                          @89 [@dyn 9]
  2023: 95 18 30                 a1 = sp + 0x30
  2026: 95 19 70                 a2 = sp + 0x70
  2029: 33 0b 03                 a4 = 0x3
  2032: 64 67                    a0 = s1
  2034: 33 0a                    a3 = 0
  2036: 0a 01                    ecalli 1 // 'lookup'
  2038: 95 16 ff 07              s1 = sp + 0x7ff
  2042: 95 66 78 03              s1 = s1 + 0x378
  2046: 46 16 01 01              u8 [s1 + 1] = 0x1
  2050: 7b 17 70 01              u64 [sp + 0x170] = a0
  2054: 95 17 ff 07              a0 = sp + 0x7ff
  2058: 95 77 79 03              a0 = a0 + 0x379
  2062: 33 08 01                 a1 = 0x1
  2065: 95 19 70 01              a2 = sp + 0x170
  2069: 33 0a 08                 a3 = 0x8
  2072: 0a 03                    ecalli 3 // 'write'
  2074: 95 17 30                 a0 = sp + 0x30
  2077: 33 08 03                 a1 = 0x3
  2080: 0a 0d                    ecalli 13 // 'query'
  2082: 46 16 01 02              u8 [s1 + 1] = 0x2
  2086: 7b 17 70 01              u64 [sp + 0x170] = a0
  2090: 95 17 ff 07              a0 = sp + 0x7ff
  2094: 95 77 79 03              a0 = a0 + 0x379
  2098: 33 08 01                 a1 = 0x1
  2101: 95 19 70 01              a2 = sp + 0x170
  2105: 33 0a 08                 a3 = 0x8
  2108: 0a 03                    ecalli 3 // 'write'
  2110: 95 18 30                 a1 = sp + 0x30
  2113: 82 17 20                 a0 = u64 [sp + 0x20]
  2116: 0a 0c                    ecalli 12 // 'eject'
  2118: 46 16 01 05              u8 [s1 + 1] = 0x5
  2122: 7b 17 70 01              u64 [sp + 0x170] = a0
  2126: 95 17 ff 07              a0 = sp + 0x7ff
  2130: 95 77 79 03              a0 = a0 + 0x379
  2134: 33 08 01                 a1 = 0x1
  2137: 95 19 70 01              a2 = sp + 0x170
  2141: 33 0a 08                 a3 = 0x8
  2144: 0a 03                    ecalli 3 // 'write'
  2146: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  2156: 95 1a 30                 a3 = sp + 0x30
  2159: 33 08                    a1 = 0
  2161: 33 09                    a2 = 0
  2163: 33 0b                    a4 = 0
  2165: 0a 05                    ecalli 5 // 'bless'
  2167: 46 16 01 06              u8 [s1 + 1] = 0x6
  2171: 7b 17 70 01              u64 [sp + 0x170] = a0
  2175: 95 17 ff 07              a0 = sp + 0x7ff
  2179: 95 77 79 03              a0 = a0 + 0x379
  2183: 33 08 01                 a1 = 0x1
  2186: 95 19 70 01              a2 = sp + 0x170
  2190: 33 0a 08                 a3 = 0x8
  2193: 0a 03                    ecalli 3 // 'write'
  2195: 82 1b 20                 a4 = u64 [sp + 0x20]
  2198: 28 24 02                 jump @98
      :                          @90 [@dyn 10]
  2201: 7b 15 08                 u64 [sp + 0x8] = s0
  2204: 95 17 30                 a0 = sp + 0x30
  2207: 33 08 03                 a1 = 0x3
  2210: 0a 0e                    ecalli 14 // 'solicit'
  2212: 95 15 ff 07              s0 = sp + 0x7ff
  2216: 95 55 78 03              s0 = s0 + 0x378
  2220: 46 15 01 01              u8 [s0 + 1] = 0x1
  2224: 7b 17 70 01              u64 [sp + 0x170] = a0
  2228: 95 17 ff 07              a0 = sp + 0x7ff
  2232: 95 77 79 03              a0 = a0 + 0x379
  2236: 33 08 01                 a1 = 0x1
  2239: 95 19 70 01              a2 = sp + 0x170
  2243: 33 0a 08                 a3 = 0x8
  2246: 0a 03                    ecalli 3 // 'write'
  2248: 95 17 30                 a0 = sp + 0x30
  2251: 33 08 03                 a1 = 0x3
  2254: 0a 0d                    ecalli 13 // 'query'
  2256: 46 15 01 02              u8 [s0 + 1] = 0x2
  2260: 7b 17 70 01              u64 [sp + 0x170] = a0
  2264: 95 17 ff 07              a0 = sp + 0x7ff
  2268: 95 77 79 03              a0 = a0 + 0x379
  2272: 33 08 01                 a1 = 0x1
  2275: 95 19 70 01              a2 = sp + 0x170
  2279: 33 0a 08                 a3 = 0x8
  2282: 0a 03                    ecalli 3 // 'write'
  2284: 95 15 70 01              s0 = sp + 0x170
  2288: 33 09 00 0a              a2 = 0xa00
  2292: 95 17 70 01              a0 = sp + 0x170
  2296: 33 08                    a1 = 0
  2298: 50 10 16 67 03           ra = 22, jump @133
      :                          @91 [@dyn 11]
  2303: 33 06 50                 s1 = 0x50
  2306: 01                       fallthrough
      :                          @92
  2307: 95 18 30                 a1 = sp + 0x30
  2310: 33 09 20                 a2 = 0x20
  2313: 64 57                    a0 = s0
  2315: 50 10 18 a4 02           ra = 24, jump @115
      :                          @93 [@dyn 12]
  2320: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2323: 95 55 20                 s0 = s0 + 0x20
  2326: 52 06 ed                 jump @92 if s1 != 0
      :                          @94
  2329: 95 18 70 01              a1 = sp + 0x170
  2333: 33 07                    a0 = 0
  2335: 0a 06                    ecalli 6 // 'assign'
  2337: 95 16 ff 07              s1 = sp + 0x7ff
  2341: 95 66 78 03              s1 = s1 + 0x378
  2345: 46 06 05                 u8 [s1 + 0] = 0x5
  2348: 7b 67 01                 u64 [s1 + 0x1] = a0
  2351: 95 17 ff 07              a0 = sp + 0x7ff
  2355: 95 77 78 03              a0 = a0 + 0x378
  2359: 33 08 01                 a1 = 0x1
  2362: 95 19 ff 07              a2 = sp + 0x7ff
  2366: 95 99 79 03              a2 = a2 + 0x379
  2370: 33 0a 08                 a3 = 0x8
  2373: 0a 03                    ecalli 3 // 'write'
  2375: 82 1b 20                 a4 = u64 [sp + 0x20]
  2378: 82 15 08                 s0 = u64 [sp + 0x8]
  2381: 28 6d 01                 jump @98
      :                          @95 [@dyn 13]
  2384: 95 17 30                 a0 = sp + 0x30
  2387: 33 08 03                 a1 = 0x3
  2390: 0a 0f                    ecalli 15 // 'forget'
  2392: 95 16 ff 07              s1 = sp + 0x7ff
  2396: 95 66 78 03              s1 = s1 + 0x378
  2400: 46 16 01 01              u8 [s1 + 1] = 0x1
  2404: 7b 17 70 01              u64 [sp + 0x170] = a0
  2408: 95 17 ff 07              a0 = sp + 0x7ff
  2412: 95 77 79 03              a0 = a0 + 0x379
  2416: 33 08 01                 a1 = 0x1
  2419: 95 19 70 01              a2 = sp + 0x170
  2423: 33 0a 08                 a3 = 0x8
  2426: 0a 03                    ecalli 3 // 'write'
  2428: 95 17 30                 a0 = sp + 0x30
  2431: 33 08 03                 a1 = 0x3
  2434: 0a 0d                    ecalli 13 // 'query'
  2436: 46 16 01 02              u8 [s1 + 1] = 0x2
  2440: 7b 17 70 01              u64 [sp + 0x170] = a0
  2444: 95 17 ff 07              a0 = sp + 0x7ff
  2448: 95 77 79 03              a0 = a0 + 0x379
  2452: 33 08 01                 a1 = 0x1
  2455: 95 19 70 01              a2 = sp + 0x170
  2459: 33 0a 08                 a3 = 0x8
  2462: 0a 03                    ecalli 3 // 'write'
  2464: 82 1b 20                 a4 = u64 [sp + 0x20]
  2467: 28 17 01                 jump @98
      :                          @96 [@dyn 14]
  2470: 95 18 30                 a1 = sp + 0x30
  2473: 95 19 70                 a2 = sp + 0x70
  2476: 33 0b 03                 a4 = 0x3
  2479: 64 67                    a0 = s1
  2481: 33 0a                    a3 = 0
  2483: 0a 01                    ecalli 1 // 'lookup'
  2485: 95 16 ff 07              s1 = sp + 0x7ff
  2489: 95 66 78 03              s1 = s1 + 0x378
  2493: 46 16 01 01              u8 [s1 + 1] = 0x1
  2497: 7b 17 70 01              u64 [sp + 0x170] = a0
  2501: 95 17 ff 07              a0 = sp + 0x7ff
  2505: 95 77 79 03              a0 = a0 + 0x379
  2509: 33 08 01                 a1 = 0x1
  2512: 95 19 70 01              a2 = sp + 0x170
  2516: 33 0a 08                 a3 = 0x8
  2519: 0a 03                    ecalli 3 // 'write'
  2521: 95 17 30                 a0 = sp + 0x30
  2524: 33 08 03                 a1 = 0x3
  2527: 0a 0d                    ecalli 13 // 'query'
  2529: 46 16 01 02              u8 [s1 + 1] = 0x2
  2533: 7b 17 70 01              u64 [sp + 0x170] = a0
  2537: 95 17 ff 07              a0 = sp + 0x7ff
  2541: 95 77 79 03              a0 = a0 + 0x379
  2545: 33 08 01                 a1 = 0x1
  2548: 95 19 70 01              a2 = sp + 0x170
  2552: 33 0a 08                 a3 = 0x8
  2555: 0a 03                    ecalli 3 // 'write'
  2557: 82 1b 20                 a4 = u64 [sp + 0x20]
  2560: 28 ba 00                 jump @98
      :                          @97 [@dyn 15]
  2563: 95 18 2a                 a1 = sp + 0x2a
  2566: 33 09 03                 a2 = 0x3
  2569: 95 1a 70                 a3 = sp + 0x70
  2572: 33 0c 00 01              a5 = 0x100
  2576: 64 67                    a0 = s1
  2578: 33 0b                    a4 = 0
  2580: 0a 02                    ecalli 2 // 'read'
  2582: 95 16 ff 07              s1 = sp + 0x7ff
  2586: 95 66 78 03              s1 = s1 + 0x378
  2590: 46 16 01 01              u8 [s1 + 1] = 0x1
  2594: 7b 17 70 01              u64 [sp + 0x170] = a0
  2598: 95 17 ff 07              a0 = sp + 0x7ff
  2602: 95 77 79 03              a0 = a0 + 0x379
  2606: 33 08 01                 a1 = 0x1
  2609: 95 19 70 01              a2 = sp + 0x170
  2613: 33 0a 08                 a3 = 0x8
  2616: 0a 03                    ecalli 3 // 'write'
  2618: 95 17 2a                 a0 = sp + 0x2a
  2621: 33 08 03                 a1 = 0x3
  2624: 33 09                    a2 = 0
  2626: 33 0a                    a3 = 0
  2628: 0a 03                    ecalli 3 // 'write'
  2630: 46 16 01 02              u8 [s1 + 1] = 0x2
  2634: 7b 17 70 01              u64 [sp + 0x170] = a0
  2638: 95 17 ff 07              a0 = sp + 0x7ff
  2642: 95 77 79 03              a0 = a0 + 0x379
  2646: 33 08 01                 a1 = 0x1
  2649: 95 19 70 01              a2 = sp + 0x170
  2653: 33 0a 08                 a3 = 0x8
  2656: 0a 03                    ecalli 3 // 'write'
  2658: 95 18 2a                 a1 = sp + 0x2a
  2661: 33 09 03                 a2 = 0x3
  2664: 95 1a 70                 a3 = sp + 0x70
  2667: 33 0c 00 01              a5 = 0x100
  2671: 82 17 20                 a0 = u64 [sp + 0x20]
  2674: 33 0b                    a4 = 0
  2676: 0a 02                    ecalli 2 // 'read'
  2678: 46 16 01 05              u8 [s1 + 1] = 0x5
  2682: 7b 17 70 01              u64 [sp + 0x170] = a0
  2686: 95 17 ff 07              a0 = sp + 0x7ff
  2690: 95 77 79 03              a0 = a0 + 0x379
  2694: 33 08 01                 a1 = 0x1
  2697: 95 19 70 01              a2 = sp + 0x170
  2701: 33 0a 08                 a3 = 0x8
  2704: 0a 03                    ecalli 3 // 'write'
  2706: 95 17 30                 a0 = sp + 0x30
  2709: 33 08 03                 a1 = 0x3
  2712: 0a 0e                    ecalli 14 // 'solicit'
  2714: 46 16 01 06              u8 [s1 + 1] = 0x6
  2718: 7b 17 70 01              u64 [sp + 0x170] = a0
  2722: 95 17 ff 07              a0 = sp + 0x7ff
  2726: 95 77 79 03              a0 = a0 + 0x379
  2730: 33 08 01                 a1 = 0x1
  2733: 95 19 70 01              a2 = sp + 0x170
  2737: 33 0a 08                 a3 = 0x8
  2740: 0a 03                    ecalli 3 // 'write'
  2742: 82 1b 20                 a4 = u64 [sp + 0x20]
  2745: 01                       fallthrough
      :                          @98
  2746: 95 18 70                 a1 = sp + 0x70
  2749: 64 b7                    a0 = a4
  2751: 0a 04                    ecalli 4 // 'info'
  2753: 46 16 01 08              u8 [s1 + 1] = 0x8
  2757: 7b 17 70 01              u64 [sp + 0x170] = a0
  2761: 95 17 ff 07              a0 = sp + 0x7ff
  2765: 95 77 79 03              a0 = a0 + 0x379
  2769: 33 08 01                 a1 = 0x1
  2772: 95 19 70 01              a2 = sp + 0x170
  2776: 33 0a 08                 a3 = 0x8
  2779: 0a 03                    ecalli 3 // 'write'
  2781: 0a                       ecalli 0 // 'gas'
  2782: 46 16 01 09              u8 [s1 + 1] = 0x9
  2786: 7b 17 70 01              u64 [sp + 0x170] = a0
  2790: 95 17 ff 07              a0 = sp + 0x7ff
  2794: 95 77 79 03              a0 = a0 + 0x379
  2798: 33 08 01                 a1 = 0x1
  2801: 95 19 70 01              a2 = sp + 0x170
  2805: 33 0a 08                 a3 = 0x8
  2808: 0a 03                    ecalli 3 // 'write'
  2810: 01                       fallthrough
      :                          @99
  2811: 49 21 88 01              u64 [sp + 392] = 0
  2815: 49 21 80 01              u64 [sp + 384] = 0
  2819: 49 21 78 01              u64 [sp + 376] = 0
  2823: 49 21 70 01              u64 [sp + 368] = 0
  2827: 82 19 18                 a2 = u64 [sp + 0x18]
  2830: 55 19 21 99 00           jump @110 if a2 >=u 33
      :                          @100
  2835: 64 56                    s1 = s0
  2837: 97 55 20                 s0 = s0 << 0x20
  2840: 98 55 20                 s0 = s0 >> 0x20
  2843: 95 17 70 01              a0 = sp + 0x170
  2847: 82 18 10                 a1 = u64 [sp + 0x10]
  2850: 50 10 20 8d 00           ra = 32, jump @115
      :                          @101 [@dyn 16]
  2855: 3a 08 00 00 03           a1 = u64 [0x30000]
  2860: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  2870: ca 75 07                 a0 = s0 * a0
  2873: ae 87 44                 jump @106 if a0 >=u a1
      :                          @102
  2876: 51 16 09 07              jump @104 if s1 == 9
      :                          @103
  2880: 0a 08                    ecalli 8 // 'checkpoint'
  2882: 01                       fallthrough
      :                          @104
  2883: 95 57 2a                 a0 = s0 + 0x2a
  2886: 95 19 ff 07              a2 = sp + 0x7ff
  2890: 95 99 78 03              a2 = a2 + 0x378
  2894: 46 09 07                 u8 [a2 + 0] = 0x7
  2897: 7b 97 01                 u64 [a2 + 0x1] = a0
  2900: 95 17 ff 07              a0 = sp + 0x7ff
  2904: 95 77 78 03              a0 = a0 + 0x378
  2908: 33 08 01                 a1 = 0x1
  2911: 95 19 ff 07              a2 = sp + 0x7ff
  2915: 95 99 79 03              a2 = a2 + 0x379
  2919: 33 0a 08                 a3 = 0x8
  2922: 33 00 22                 ra = 0x22
  2925: 0a 03                    ecalli 3 // 'write'
  2927: 33 07                    a0 = 0
  2929: 33 08 01                 a1 = 0x1
  2932: 32 07                    jump [a0]
      :                          @105 [@dyn 17]
  2934: 33 07                    a0 = 0
  2936: 33 08 01                 a1 = 0x1
  2939: 32 07                    jump [a0]
      :                          @106
  2941: 95 17 70 01              a0 = sp + 0x170
  2945: 0a 10                    ecalli 16 // 'oyield'
  2947: 33 08 20                 a1 = 0x20
  2950: 95 17 70 01              a0 = sp + 0x170
  2954: 95 11 a0 03              sp = sp + 0x3a0
  2958: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  2962: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  2966: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  2970: 95 11 f8 07              sp = sp + 0x7f8
  2974: 32 00                    ret
      :                          @107
  2976: 64 56                    s1 = s0
  2978: 28 86 f7                 jump @80
      :                          @108
  2981: 00                       trap
      :                          @109
  2982: 00                       trap
      :                          @110
  2983: 00                       trap
      :                          @111
  2984: 00                       trap
      :                          @112
  2985: 00                       trap
      :                          @113
  2986: 00                       trap
      :                          @114 [export #2: 'on_transfer']
  2987: 33 07                    a0 = 0
  2989: 32 00                    ret
      :                          @115
  2991: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2994: 7b 10 18                 u64 [sp + 0x18] = ra
  2997: 7b 15 10                 u64 [sp + 0x10] = s0
  3000: 7b 16 08                 u64 [sp + 0x8] = s1
  3003: 53 19 10 64              jump @124 if a2 <u 16
      :                          @116
  3007: 8d 7a                    i32 a3 = -a0
  3009: 84 a2 07                 t0 = a3 & 0x7
  3012: c8 27 0b                 a4 = a0 + t0
  3015: 51 02 15                 jump @119 if t0 == 0
      :                          @117
  3018: 64 8c                    a5 = a1
  3020: 64 75                    s0 = a0
  3022: 01                       fallthrough
      :                          @118
  3023: 7c ca                    a3 = u8 [a5]
  3025: 78 5a                    u8 [s0] = a3
  3027: 95 55 01                 s0 = s0 + 0x1
  3030: 95 cc 01                 a5 = a5 + 0x1
  3033: ac b5 f6                 jump @118 if s0 <u a4
      :                          @119
  3036: c8 28 03                 t1 = a1 + t0
  3039: c9 29 02                 t0 = a2 - t0
  3042: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3045: 84 38 07                 a1 = t1 & 0x7
  3048: c8 4b 0a                 a3 = a4 + t2
  3051: 51 08 3b                 jump @126 if a1 == 0
      :                          @120
  3054: 58 04 4b                 jump @129 if t2 <=s 0
      :                          @121
  3057: 97 38 03                 a1 = t1 << 0x3
  3060: 84 80 38                 ra = a1 & 0x38
  3063: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3066: 82 c5                    s0 = u64 [a5]
  3068: 8d 88                    i32 a1 = -a1
  3070: 84 88 38                 a1 = a1 & 0x38
  3073: 95 cc 08                 a5 = a5 + 0x8
  3076: 01                       fallthrough
      :                          @122
  3077: 82 c6                    s1 = u64 [a5]
  3079: d0 05 05                 s0 = s0 >> ra
  3082: cf 86 09                 a2 = s1 << a1
  3085: d4 59 09                 a2 = a2 | s0
  3088: 7b b9                    u64 [a4] = a2
  3090: 95 bb 08                 a4 = a4 + 0x8
  3093: 95 cc 08                 a5 = a5 + 0x8
  3096: 64 65                    s0 = s1
  3098: ac ab eb                 jump @122 if a4 <u a3
      :                          @123
  3101: 28 1c                    jump @129
      :                          @124
  3103: 64 7a                    a3 = a0
  3105: 52 09 21                 jump @130 if a2 != 0
      :                          @125
  3108: 28 2f                    jump @132
      :                          @126
  3110: 58 04 13                 jump @129 if t2 <=s 0
      :                          @127
  3113: 64 38                    a1 = t1
  3115: 01                       fallthrough
      :                          @128
  3116: 82 89                    a2 = u64 [a1]
  3118: 7b b9                    u64 [a4] = a2
  3120: 95 bb 08                 a4 = a4 + 0x8
  3123: 95 88 08                 a1 = a1 + 0x8
  3126: ac ab f6                 jump @128 if a4 <u a3
      :                          @129
  3129: c8 43 08                 a1 = t1 + t2
  3132: 84 29 07                 a2 = t0 & 0x7
  3135: 51 09 14                 jump @132 if a2 == 0
      :                          @130
  3138: c8 a9 09                 a2 = a2 + a3
  3141: 01                       fallthrough
      :                          @131
  3142: 7c 8b                    a4 = u8 [a1]
  3144: 78 ab                    u8 [a3] = a4
  3146: 95 aa 01                 a3 = a3 + 0x1
  3149: 95 88 01                 a1 = a1 + 0x1
  3152: ac 9a f6                 jump @131 if a3 <u a2
      :                          @132
  3155: 82 10 18                 ra = u64 [sp + 0x18]
  3158: 82 15 10                 s0 = u64 [sp + 0x10]
  3161: 82 16 08                 s1 = u64 [sp + 0x8]
  3164: 95 11 20                 sp = sp + 0x20
  3167: 32 00                    ret
      :                          @133
  3169: 53 19 10 48              jump @142 if a2 <u 16
      :                          @134
  3173: 8d 7a                    i32 a3 = -a0
  3175: 84 aa 07                 a3 = a3 & 0x7
  3178: c8 a7 0b                 a4 = a0 + a3
  3181: 51 0a 0e                 jump @137 if a3 == 0
      :                          @135
  3184: 64 7c                    a5 = a0
  3186: 01                       fallthrough
      :                          @136
  3187: 78 c8                    u8 [a5] = a1
  3189: 95 cc 01                 a5 = a5 + 0x1
  3192: ac bc fb                 jump @136 if a5 <u a4
      :                          @137
  3195: c9 a9 03                 t1 = a2 - a3
  3198: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3201: c8 cb 0a                 a3 = a4 + a5
  3204: 58 0c 1d                 jump @140 if a5 <=s 0
      :                          @138
  3207: 84 82 ff 00              t0 = a1 & 0xff
  3211: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  3221: ca 92 0c                 a5 = t0 * a2
  3224: 01                       fallthrough
      :                          @139
  3225: 7b bc                    u64 [a4] = a5
  3227: 95 bb 08                 a4 = a4 + 0x8
  3230: ac ab fb                 jump @139 if a4 <u a3
      :                          @140
  3233: 84 39 07                 a2 = t1 & 0x7
  3236: 52 09 0a                 jump @143 if a2 != 0
      :                          @141
  3239: 28 13                    jump @145
      :                          @142
  3241: 64 7a                    a3 = a0
  3243: 51 09 0f                 jump @145 if a2 == 0
      :                          @143
  3246: c8 a9 09                 a2 = a2 + a3
  3249: 01                       fallthrough
      :                          @144
  3250: 78 a8                    u8 [a3] = a1
  3252: 95 aa 01                 a3 = a3 + 0x1
  3255: ac 9a fb                 jump @144 if a3 <u a2
      :                          @145
  3258: 32 00                    ret
