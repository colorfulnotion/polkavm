// RO data = 3496/3496 bytes
// RW data = 24/4144 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [84, 0, 255, 255, 108, 0, 255, 255, 126, 0, 255, 255, 144, 0, 255, 255, 168, 0, 255, 255, 192, 0, 255, 255, 214, 0, 255, 255, 226, 0, 255, 255, 238, 0, 255, 255, 0, 1, 255, 255, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 247, 255, 255, 255, 255, 255, 255, 255, 119, 105, 95, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 103, 116, 104, 61, 32, 110, 117, 109, 95, 112, 97, 121, 108, 111, 97, 100, 61, 32, 110, 117, 109, 95, 99, 104, 105, 108, 100, 95, 118, 109, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 110, 117, 109, 95, 99, 104, 105, 108, 100, 95, 118, 109, 61, 101, 120, 112, 117, 110, 103, 101, 32, 105, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 44, 32, 103, 111, 116, 32, 105, 110, 118, 111, 107, 101, 32, 105, 61, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 112, 101, 101, 107, 32, 105, 61, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 120, 112, 111, 114, 116, 32, 105, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 40, 41, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 98, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 111, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 125, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 145, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 159, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 172, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 182, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 209, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 231, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 243, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 182, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 252, 0, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 14, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 61, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 87, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 107, 1, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 152, 1, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 175, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 195, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 215, 1, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 87, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 244, 1, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 10, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 39, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 87, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 66, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 95, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 39, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 123, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 87, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 175, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 192, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 238, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 175, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 45, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 77, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 39, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 95, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 140, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 39, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 95, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 87, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 175, 3, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 197, 3, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 87, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 216, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 233, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 8, 4, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 41, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 34, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 63, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 132, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 175, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 233, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 99, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 29, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 119, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 139, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 194, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 154, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 1, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 124, 1, 0, 0, 0, 0, 0, 0, 236, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 253, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5149
// Code size = 16066 bytes

      :                          @0
     0: 28 d9 00 00 00           jump @18
      :                          @1
     5: 28 86 0c 00 00           jump @185
      :                          @2
    10: 28 a6 29                 jump @579
      :                          @3 [@dyn 1]
    13: 33 09 02                 a2 = 0x2
    16: 64 87                    a0 = a1
    18: 33 08 a7 05 01           a1 = 0x105a7
    23: 28 ef 32                 jump @781
      :                          @4 [@dyn 2]
    26: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    30: 7b 10 80 00              u64 [sp + 0x80] = ra
    34: 80 89 34                 a2 = u32 [a1 + 0x34]
    37: 84 9a 10                 a3 = a2 & 0x10
    40: 52 0a 16                 jump @7 if a3 != 0
      :                          @5
    43: 84 99 20                 a2 = a2 & 0x20
    46: 52 09 51                 jump @11 if a2 != 0
      :                          @6
    49: 82 77                    a0 = u64 [a0]
    51: 82 10 80 00              ra = u64 [sp + 0x80]
    55: 95 11 88 00              sp = sp + 0x88
    59: 28 35 2f                 jump @719
      :                          @7
    62: 82 7b                    a4 = u64 [a0]
    64: 33 09 81 00              a2 = 0x81
    68: 95 17 7f                 a0 = sp + 0x7f
    71: 33 02 57                 t0 = 0x57
    74: 01                       fallthrough
      :                          @8
    75: 64 9c                    a5 = a2
    77: 98 ba 04                 a3 = a4 >> 0x4
    80: 84 bb 0f                 a4 = a4 & 0xf
    83: 88 b3 0a                 t1 = a4 <u 0xa
    86: 33 09 30                 a2 = 0x30
    89: da 32 09                 a2 = t0 if t1 == 0
    92: be b9 09                 i32 a2 = a2 + a4
    95: 78 79                    u8 [a0] = a2
    97: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   100: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   103: 64 ab                    a4 = a3
   105: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   108: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   111: 56 27 80 00 69           jump @17 if a0 >u 128
      :                          @10
   116: 9a 9b 81 00              a4 = 0x81 - a2
   120: 64 1a                    a3 = sp
   122: c8 7a 0a                 a3 = a3 + a0
   125: 28 42                    jump @15
      :                          @11
   127: 82 7b                    a4 = u64 [a0]
   129: 33 09 81 00              a2 = 0x81
   133: 95 17 7f                 a0 = sp + 0x7f
   136: 33 02 37                 t0 = 0x37
   139: 01                       fallthrough
      :                          @12
   140: 64 9c                    a5 = a2
   142: 98 ba 04                 a3 = a4 >> 0x4
   145: 84 bb 0f                 a4 = a4 & 0xf
   148: 88 b3 0a                 t1 = a4 <u 0xa
   151: 33 09 30                 a2 = 0x30
   154: da 32 09                 a2 = t0 if t1 == 0
   157: be b9 09                 i32 a2 = a2 + a4
   160: 78 79                    u8 [a0] = a2
   162: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   165: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   168: 64 ab                    a4 = a3
   170: 52 0a e2                 jump @12 if a3 != 0
      :                          @13
   173: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   176: 56 27 80 00 28           jump @17 if a0 >u 128
      :                          @14
   181: 9a 9b 81 00              a4 = 0x81 - a2
   185: 64 1a                    a3 = sp
   187: c8 7a 0a                 a3 = a3 + a0
   190: 01                       fallthrough
      :                          @15
   191: 33 09 02                 a2 = 0x2
   194: 64 87                    a0 = a1
   196: 33 08 dd 04 01           a1 = 0x104dd
   201: 50 10 06 c4 2f           ra = 6, jump @729
      :                          @16 [@dyn 3]
   206: 82 10 80 00              ra = u64 [sp + 0x80]
   210: 95 11 88 00              sp = sp + 0x88
   214: 32 00                    ret
      :                          @17
   216: 00                       trap
      :                          @18 [export #0: 'refine']
   217: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   221: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   225: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   229: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   233: 95 11 c0 b3              sp = sp + 0xffffffffffffb3c0
   237: 33 06 00 00 01           s1 = 0x10000
   242: 53 18 04 86 00           jump @30 if a1 <u 4
      :                          @19
   247: 95 85 fc                 s0 = a1 + 0xfffffffffffffffc
   250: 51 05 7e                 jump @30 if s0 == 0
      :                          @20
   253: 95 79 04                 a2 = a0 + 0x4
   256: 7d 9a                    a3 = i8 [a2]
   258: 80 7b                    a4 = u32 [a0]
   260: 33 08 01                 a1 = 0x1
   263: 59 0a 45                 jump @28 if a3 >=s 0
      :                          @21
   266: 84 a7 ff 00              a0 = a3 & 0xff
   270: 33 0a c0 00              a3 = 0xc0
   274: 33 08 02                 a1 = 0x2
   277: ac a7 33                 jump @27 if a0 <u a3
      :                          @22
   280: 33 0a e0 00              a3 = 0xe0
   284: 33 08 03                 a1 = 0x3
   287: ac a7 29                 jump @27 if a0 <u a3
      :                          @23
   290: 33 0a f0 00              a3 = 0xf0
   294: 33 08 04                 a1 = 0x4
   297: ac a7 1f                 jump @27 if a0 <u a3
      :                          @24
   300: 33 0a f8 00              a3 = 0xf8
   304: 33 08 05                 a1 = 0x5
   307: ac a7 15                 jump @27 if a0 <u a3
      :                          @25
   310: 33 0a fc 00              a3 = 0xfc
   314: 33 08 06                 a1 = 0x6
   317: ac a7 0b                 jump @27 if a0 <u a3
      :                          @26
   320: 88 77 fe 00              a0 = a0 <u 0xfe
   324: 9a 78 08                 a1 = 0x8 - a0
   327: 01                       fallthrough
      :                          @27
   328: ac 85 00 0b              jump @178 if s0 <u a1
      :                          @28
   332: 7b 1b 90 00              u64 [sp + 0x90] = a4
   336: 7b 18 40                 u64 [sp + 0x40] = a1
   339: 7b 19 38                 u64 [sp + 0x38] = a2
   342: 64 97                    a0 = a2
   344: 50 10 08 ef 39           ra = 8, jump @946
      :                          @29 [@dyn 4]
   349: 82 19 40                 a2 = u64 [sp + 0x40]
   352: e4 95 08                 a1 = maxu(s0, a2)
   355: c9 98 08                 a1 = a1 - a2
   358: d8 78 09                 a2 = a1 <u a0
   361: e4 78 08                 a1 = maxu(a1, a0)
   364: c9 78 08                 a1 = a1 - a0
   367: 88 88 20                 a1 = a1 <u 0x20
   370: d4 98 08                 a1 = a1 | a2
   373: 51 08 21                 jump @32 if a1 == 0
      :                          @30
   376: 33 08                    a1 = 0
   378: 01                       fallthrough
      :                          @31
   379: 64 67                    a0 = s1
   381: 33 09 40 4c              a2 = 0x4c40
   385: c8 91 01                 sp = sp + a2
   388: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   392: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   396: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   400: 95 11 f8 07              sp = sp + 0x7f8
   404: 32 00                    ret
      :                          @32
   406: 7b 17 98 00              u64 [sp + 0x98] = a0
   410: 48 21 c0 00              u32 [sp + 192] = 0
   414: 49 21 b8 00              u64 [sp + 184] = 0
   418: 49 21 b0 00              u64 [sp + 176] = 0
   422: 49 21 a8 00              u64 [sp + 168] = 0
   426: 49 21 a0 00              u64 [sp + 160] = 0
   430: 95 17 a0 00              a0 = sp + 0xa0
   434: 33 09 24                 a2 = 0x24
   437: 33 0a 03                 a3 = 0x3
   440: 33 0b                    a4 = 0
   442: 33 0c                    a5 = 0
   444: 0a 12                    ecalli 18 // 'fetch'
   446: 01                       fallthrough
      :                          @33
   447: 82 17 98 00              a0 = u64 [sp + 0x98]
   451: 95 16 a0 00              s1 = sp + 0xa0
   455: 33 08 24                 a1 = 0x24
   458: 53 17 08 b1              jump @31 if a0 <u 8
      :                          @34
   462: 95 17 c8 00              a0 = sp + 0xc8
   466: 33 09 00 02              a2 = 0x200
   470: 33 08                    a1 = 0
   472: 50 10 0a 39 2d           ra = 10, jump @704
      :                          @35 [@dyn 5]
   477: 95 18 a0 00              a1 = sp + 0xa0
   481: 95 19 c8 00              a2 = sp + 0xc8
   485: 33 0b 00 02              a4 = 0x200
   489: 33 05 ff                 s0 = 0xffffffffffffffff
   492: 82 17 90 00              a0 = u64 [sp + 0x90]
   496: 33 0a                    a3 = 0
   498: 0a 11                    ecalli 17 // 'historical_lookup'
   500: 01                       fallthrough
      :                          @36
   501: 7b 17 70                 u64 [sp + 0x70] = a0
   504: 51 17 ff 45 0a           jump @176 if a0 == 4294967295
      :                          @37
   509: 95 18 48 43              a1 = sp + 0x4348
   513: 95 1a 38 33              a3 = sp + 0x3338
   517: 82 17 98 00              a0 = u64 [sp + 0x98]
   521: 95 16 30 23              s1 = sp + 0x2330
   525: 49 21 90 00 ff ef        u64 [sp + 144] = 0xffffffffffffefff
   531: 98 77 03                 a0 = a0 >> 0x3
   534: 7b 17 c8 02              u64 [sp + 0x2c8] = a0
   538: 49 21 08 03              u64 [sp + 776] = 0
   542: 49 21 00 03              u64 [sp + 768] = 0
   546: 49 21 f8 02              u64 [sp + 760] = 0
   550: 49 21 f0 02              u64 [sp + 752] = 0
   554: 49 21 e8 02              u64 [sp + 744] = 0
   558: 49 21 e0 02              u64 [sp + 736] = 0
   562: 49 21 d8 02              u64 [sp + 728] = 0
   566: 49 21 d0 02              u64 [sp + 720] = 0
   570: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   573: 7b 17 10 03              u64 [sp + 0x310] = a0
   577: 95 17 98 00              a0 = sp + 0x98
   581: 7b 87 c8 00              u64 [a1 + 0xc8] = a0
   585: 33 09 04                 a2 = 0x4
   588: 7b 89 d0 00              u64 [a1 + 0xd0] = a2
   592: 95 17 c8 02              a0 = sp + 0x2c8
   596: 7b 87 d8 00              u64 [a1 + 0xd8] = a0
   600: 7b 89 e0 00              u64 [a1 + 0xe0] = a2
   604: 95 17 10 03              a0 = sp + 0x310
   608: 7b 87 e8 00              u64 [a1 + 0xe8] = a0
   612: 7b 19 88 00              u64 [sp + 0x88] = a2
   616: 7b 89 f0 00              u64 [a1 + 0xf0] = a2
   620: 33 07 08 06 01           a0 = 0x10608
   625: 7b a7                    u64 [a3] = a0
   627: 49 1a 08 03              u64 [a3 + 8] = 0x3
   631: 49 1a 20                 u64 [a3 + 32] = 0
   634: 95 18 10 44              a1 = sp + 0x4410
   638: 7b a8 10                 u64 [a3 + 0x10] = a1
   641: 49 1a 18 03              u64 [a3 + 24] = 0x3
   645: 95 17 30 23              a0 = sp + 0x2330
   649: 95 18 38 33              a1 = sp + 0x3338
   653: 50 10 0c 5d 29           ra = 12, jump @636
      :                          @38 [@dyn 6]
   658: 82 65 08                 s0 = u64 [s1 + 0x8]
   661: 82 6b 10                 a4 = u64 [s1 + 0x10]
   664: 82 66                    s1 = u64 [s1]
   666: 33 07 02                 a0 = 0x2
   669: 33 08                    a1 = 0
   671: 33 09                    a2 = 0
   673: 64 5a                    a3 = s0
   675: 33 00 0e                 ra = 0xe
   678: 0a 64                    ecalli 100 // 'log'
   680: 01                       fallthrough
      :                          @39 [@dyn 7]
   681: 82 17 90 00              a0 = u64 [sp + 0x90]
   685: c8 67 07                 a0 = a0 + s1
   688: 33 0c 20 00 03           a5 = 0x30020
   693: 53 27 00 f0 20           jump @45 if a0 <u 4294963200
      :                          @40
   698: 95 c7 00 10              a0 = a5 + 0x1000
   702: 01                       fallthrough
      :                          @41
   703: 82 78                    a1 = u64 [a0]
   705: c9 87 09                 a2 = a0 - a1
   708: ab 59 11                 jump @45 if a2 != s0
      :                          @42
   711: c9 68 09                 a2 = a1 - s1
   714: 01                       fallthrough
      :                          @43
   715: 82 7a                    a3 = u64 [a0]
   717: ab 8a f2                 jump @41 if a3 != a1
      :                          @44
   720: 7b 79                    u64 [a0] = a2
   722: 33 0b                    a4 = 0
   724: 01                       fallthrough
      :                          @45
   725: 7b 1c 58                 u64 [sp + 0x58] = a5
   728: 82 18 10 03              a1 = u64 [sp + 0x310]
   732: 82 17 98 00              a0 = u64 [sp + 0x98]
   736: 7b 17 50                 u64 [sp + 0x50] = a0
   739: 7b 18 68                 u64 [sp + 0x68] = a1
   742: 51 08 d7 00              jump @59 if a1 == 0
      :                          @46
   746: 33 05                    s0 = 0
   748: 33 07 18 07 01           a0 = 0x10718
   753: 7b 17 60                 u64 [sp + 0x60] = a0
   756: 82 17 58                 a0 = u64 [sp + 0x58]
   759: 95 76 00 10              s1 = a0 + 0x1000
   763: 28 10                    jump @48
      :                          @47
   765: 82 15 80 00              s0 = u64 [sp + 0x80]
   769: 95 55 01                 s0 = s0 + 0x1
   772: 82 17 68                 a0 = u64 [sp + 0x68]
   775: aa 75 b6 00              jump @59 if s0 == a0
      :                          @48
   779: 95 17 c8 00              a0 = sp + 0xc8
   783: 82 18 70                 a1 = u64 [sp + 0x70]
   786: 33 09                    a2 = 0
   788: 0a 14                    ecalli 20 // 'machine'
   790: 01                       fallthrough
      :                          @49
   791: 95 18 20 13              a1 = sp + 0x1320
   795: 7b 87 08                 u64 [a1 + 0x8] = a0
   798: 51 15 10 29 09           jump @177 if s0 == 16
      :                          @50
   803: 7b 15 80 00              u64 [sp + 0x80] = s0
   807: 97 58 02                 a1 = s0 << 0x2
   810: 95 19 d0 02              a2 = sp + 0x2d0
   814: c8 98 08                 a1 = a1 + a2
   817: 7a 87                    u32 [a1] = a0
   819: 95 18 30 23              a1 = sp + 0x2330
   823: 95 17 28 13              a0 = sp + 0x1328
   827: 7b 87                    u64 [a1] = a0
   829: 82 17 88 00              a0 = u64 [sp + 0x88]
   833: 7b 87 08                 u64 [a1 + 0x8] = a0
   836: 95 17 48 43              a0 = sp + 0x4348
   840: 82 18 60                 a1 = u64 [sp + 0x60]
   843: 7b 78 c8 00              u64 [a0 + 0xc8] = a1
   847: 49 27 d0 00 01           u64 [a0 + 208] = 0x1
   852: 49 27 e8 00              u64 [a0 + 232] = 0
   856: 95 19 30 23              a2 = sp + 0x2330
   860: 7b 79 d8 00              u64 [a0 + 0xd8] = a2
   864: 49 27 e0 00 01           u64 [a0 + 224] = 0x1
   869: 95 17 38 33              a0 = sp + 0x3338
   873: 95 18 10 44              a1 = sp + 0x4410
   877: 50 10 10 7d 28           ra = 16, jump @636
      :                          @51 [@dyn 8]
   882: 95 17 38 33              a0 = sp + 0x3338
   886: 82 75 08                 s0 = u64 [a0 + 0x8]
   889: 82 7b 10                 a4 = u64 [a0 + 0x10]
   892: 82 77                    a0 = u64 [a0]
   894: 7b 17 78                 u64 [sp + 0x78] = a0
   897: 33 07 02                 a0 = 0x2
   900: 33 08                    a1 = 0
   902: 33 09                    a2 = 0
   904: 64 5a                    a3 = s0
   906: 33 00 12                 ra = 0x12
   909: 0a 64                    ecalli 100 // 'log'
   911: 01                       fallthrough
      :                          @52 [@dyn 9]
   912: 82 1b 78                 a4 = u64 [sp + 0x78]
   915: 82 17 90 00              a0 = u64 [sp + 0x90]
   919: c8 b7 07                 a0 = a0 + a4
   922: 53 27 00 f0 63 ff        jump @47 if a0 <u 4294963200
      :                          @53
   928: 82 67                    a0 = u64 [s1]
   930: c9 76 08                 a1 = s1 - a0
   933: ab 58 58 ff              jump @47 if a1 != s0
      :                          @54
   937: c9 b7 08                 a1 = a0 - a4
   940: 01                       fallthrough
      :                          @55
   941: 82 69                    a2 = u64 [s1]
   943: ab 79 f1                 jump @53 if a2 != a0
      :                          @56
   946: 7b 68                    u64 [s1] = a1
   948: 33 0a                    a3 = 0
   950: 01                       fallthrough
      :                          @57
   951: ab 79 e9                 jump @53 if a2 != a0
      :                          @58
   954: 28 43 ff                 jump @47
      :                          @59
   957: 33 06 08 10              s1 = 0x1008
   961: 95 17 18 03              a0 = sp + 0x318
   965: 33 08                    a1 = 0
   967: 33 09 08 10              a2 = 0x1008
   971: 50 10 14 46 2b           ra = 20, jump @704
      :                          @60 [@dyn 10]
   976: 95 15 20 13              s0 = sp + 0x1320
   980: 49 05                    u64 [s0 + 0] = 0
   982: 95 17 18 03              a0 = sp + 0x318
   986: 33 0a 06                 a3 = 0x6
   989: 33 08                    a1 = 0
   991: 7b 16 80 00              u64 [sp + 0x80] = s1
   995: 64 69                    a2 = s1
   997: 33 0b                    a4 = 0
   999: 33 0c                    a5 = 0
  1001: 0a 12                    ecalli 18 // 'fetch'
  1003: 01                       fallthrough
      :                          @61
  1004: 7b 57 08                 u64 [s0 + 0x8] = a0
  1007: 51 17 ff 29 01           jump @80 if a0 == 4294967295
      :                          @62
  1012: 33 07 38 06 01           a0 = 0x10638
  1017: 7b 17 78                 u64 [sp + 0x78] = a0
  1020: 33 07 a9 05 01           a0 = 0x105a9
  1025: 7b 17 60                 u64 [sp + 0x60] = a0
  1028: 33 07 c0 05 01           a0 = 0x105c0
  1033: 7b 17 68                 u64 [sp + 0x68] = a0
  1036: 82 17 58                 a0 = u64 [sp + 0x58]
  1039: 95 77 00 10              a0 = a0 + 0x1000
  1043: 7b 17 70                 u64 [sp + 0x70] = a0
  1046: 28 4c                    jump @68
      :                          @63
  1048: 80 16 18 03              s1 = u32 [sp + 0x318]
  1052: 80 15 1c 03              s0 = u32 [sp + 0x31c]
  1056: 33 09 01                 a2 = 0x1
  1059: 64 67                    a0 = s1
  1061: 64 58                    a1 = s0
  1063: 0a 17                    ecalli 23 // 'zero'
  1065: 01                       fallthrough
      :                          @64
  1066: 51 07 c9 00              jump @77 if a0 == 0
      :                          @65
  1070: 33 0b 17                 a4 = 0x17
  1073: 33 07                    a0 = 0
  1075: 33 08                    a1 = 0
  1077: 33 09                    a2 = 0
  1079: 82 1a 68                 a3 = u64 [sp + 0x68]
  1082: 0a 64                    ecalli 100 // 'log'
  1084: 01                       fallthrough
      :                          @66
  1085: 95 15 20 13              s0 = sp + 0x1320
  1089: 82 5b                    a4 = u64 [s0]
  1091: 95 bb 01                 a4 = a4 + 0x1
  1094: 7b 5b                    u64 [s0] = a4
  1096: 95 17 18 03              a0 = sp + 0x318
  1100: 33 0a 06                 a3 = 0x6
  1103: 33 08                    a1 = 0
  1105: 82 19 80 00              a2 = u64 [sp + 0x80]
  1109: 33 0c                    a5 = 0
  1111: 0a 12                    ecalli 18 // 'fetch'
  1113: 01                       fallthrough
      :                          @67
  1114: 7b 57 08                 u64 [s0 + 0x8] = a0
  1117: 51 17 ff bb 00           jump @80 if a0 == 4294967295
      :                          @68
  1122: 95 18 38 33              a1 = sp + 0x3338
  1126: 95 17 20 13              a0 = sp + 0x1320
  1130: 7b 87                    u64 [a1] = a0
  1132: 82 17 88 00              a0 = u64 [sp + 0x88]
  1136: 7b 87 08                 u64 [a1 + 0x8] = a0
  1139: 95 19 28 13              a2 = sp + 0x1328
  1143: 7b 89 10                 u64 [a1 + 0x10] = a2
  1146: 7b 87 18                 u64 [a1 + 0x18] = a0
  1149: 95 17 48 43              a0 = sp + 0x4348
  1153: 82 18 78                 a1 = u64 [sp + 0x78]
  1156: 7b 78 c8 00              u64 [a0 + 0xc8] = a1
  1160: 49 27 d0 00 02           u64 [a0 + 208] = 0x2
  1165: 49 27 e8 00              u64 [a0 + 232] = 0
  1169: 95 19 38 33              a2 = sp + 0x3338
  1173: 7b 79 d8 00              u64 [a0 + 0xd8] = a2
  1177: 49 27 e0 00 02           u64 [a0 + 224] = 0x2
  1182: 95 17 30 23              a0 = sp + 0x2330
  1186: 95 18 10 44              a1 = sp + 0x4410
  1190: 50 10 16 44 27           ra = 22, jump @636
      :                          @69 [@dyn 11]
  1195: 95 17 30 23              a0 = sp + 0x2330
  1199: 82 75 08                 s0 = u64 [a0 + 0x8]
  1202: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1205: 82 76                    s1 = u64 [a0]
  1207: 33 07 02                 a0 = 0x2
  1210: 33 08                    a1 = 0
  1212: 33 09                    a2 = 0
  1214: 64 5a                    a3 = s0
  1216: 33 00 18                 ra = 0x18
  1219: 0a 64                    ecalli 100 // 'log'
  1221: 01                       fallthrough
      :                          @70 [@dyn 12]
  1222: 82 17 90 00              a0 = u64 [sp + 0x90]
  1226: c8 67 07                 a0 = a0 + s1
  1229: 82 1b 70                 a4 = u64 [sp + 0x70]
  1232: 53 27 00 f0 48 ff        jump @63 if a0 <u 4294963200
      :                          @71
  1238: 82 b7                    a0 = u64 [a4]
  1240: c9 7b 08                 a1 = a4 - a0
  1243: ab 58 3d ff              jump @63 if a1 != s0
      :                          @72
  1247: c9 67 08                 a1 = a0 - s1
  1250: 01                       fallthrough
      :                          @73
  1251: 82 b9                    a2 = u64 [a4]
  1253: ab 79 f1                 jump @71 if a2 != a0
      :                          @74
  1256: 7b b8                    u64 [a4] = a1
  1258: 33 0a                    a3 = 0
  1260: 01                       fallthrough
      :                          @75
  1261: ab 79 e9                 jump @71 if a2 != a0
      :                          @76
  1264: 28 28 ff                 jump @63
      :                          @77
  1267: 97 59 0c                 a2 = s0 << 0xc
  1270: 33 0a 00 10              a3 = 0x1000
  1274: 64 67                    a0 = s1
  1276: 95 18 20 03              a1 = sp + 0x320
  1280: 0a 16                    ecalli 22 // 'poke'
  1282: 01                       fallthrough
      :                          @78
  1283: 51 07 3a ff              jump @66 if a0 == 0
      :                          @79
  1287: 33 0b 17                 a4 = 0x17
  1290: 33 07                    a0 = 0
  1292: 33 08                    a1 = 0
  1294: 33 09                    a2 = 0
  1296: 82 1a 60                 a3 = u64 [sp + 0x60]
  1299: 0a 64                    ecalli 100 // 'log'
  1301: 28 28 ff                 jump @66
      :                          @80
  1304: 95 17 28 13              a0 = sp + 0x1328
  1308: 33 08                    a1 = 0
  1310: 82 15 80 00              s0 = u64 [sp + 0x80]
  1314: 64 59                    a2 = s0
  1316: 50 10 1a ed 29           ra = 26, jump @704
      :                          @81 [@dyn 13]
  1321: 95 17 30 23              a0 = sp + 0x2330
  1325: 33 08                    a1 = 0
  1327: 64 59                    a2 = s0
  1329: 50 10 1c e0 29           ra = 28, jump @704
      :                          @82 [@dyn 14]
  1334: 95 17 38 33              a0 = sp + 0x3338
  1338: 33 08                    a1 = 0
  1340: 64 59                    a2 = s0
  1342: 50 10 1e d3 29           ra = 30, jump @704
      :                          @83 [@dyn 15]
  1347: 95 16 48 43              s1 = sp + 0x4348
  1351: 49 06                    u64 [s1 + 0] = 0
  1353: 49 16 f8                 u64 [s1 + 4294967288] = 0
  1356: 95 17 10 03              a0 = sp + 0x310
  1360: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1364: 82 17 88 00              a0 = u64 [sp + 0x88]
  1368: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  1372: 33 07 58 06 01           a0 = 0x10658
  1377: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  1381: 49 26 d0 00 01           u64 [s1 + 208] = 0x1
  1386: 49 26 e8 00              u64 [s1 + 232] = 0
  1390: 95 18 e0 43              a1 = sp + 0x43e0
  1394: 7b 68 d8 00              u64 [s1 + 0xd8] = a1
  1398: 49 26 e0 00 01           u64 [s1 + 224] = 0x1
  1403: 95 17 58 43              a0 = sp + 0x4358
  1407: 95 18 10 44              a1 = sp + 0x4410
  1411: 50 10 20 67 26           ra = 32, jump @636
      :                          @84 [@dyn 16]
  1416: 82 65 18                 s0 = u64 [s1 + 0x18]
  1419: 82 6b 20                 a4 = u64 [s1 + 0x20]
  1422: 82 66 10                 s1 = u64 [s1 + 0x10]
  1425: 33 07 02                 a0 = 0x2
  1428: 33 08                    a1 = 0
  1430: 33 09                    a2 = 0
  1432: 64 5a                    a3 = s0
  1434: 33 00 22                 ra = 0x22
  1437: 0a 64                    ecalli 100 // 'log'
  1439: 01                       fallthrough
      :                          @85 [@dyn 17]
  1440: 82 17 90 00              a0 = u64 [sp + 0x90]
  1444: c8 67 07                 a0 = a0 + s1
  1447: 82 19 58                 a2 = u64 [sp + 0x58]
  1450: 53 27 00 f0 20           jump @91 if a0 <u 4294963200
      :                          @86
  1455: 95 97 00 10              a0 = a2 + 0x1000
  1459: 01                       fallthrough
      :                          @87
  1460: 82 78                    a1 = u64 [a0]
  1462: c9 87 09                 a2 = a0 - a1
  1465: ab 59 11                 jump @91 if a2 != s0
      :                          @88
  1468: c9 68 09                 a2 = a1 - s1
  1471: 01                       fallthrough
      :                          @89
  1472: 82 7a                    a3 = u64 [a0]
  1474: ab 8a f2                 jump @87 if a3 != a1
      :                          @90
  1477: 7b 79                    u64 [a0] = a2
  1479: 33 0b                    a4 = 0
  1481: 01                       fallthrough
      :                          @91
  1482: 82 17 10 03              a0 = u64 [sp + 0x310]
  1486: 7b 17 48                 u64 [sp + 0x48] = a0
  1489: 51 07 62 06              jump @175 if a0 == 0
      :                          @92
  1493: 82 17 38                 a0 = u64 [sp + 0x38]
  1496: 82 18 40                 a1 = u64 [sp + 0x40]
  1499: c8 87 07                 a0 = a0 + a1
  1502: 7b 17 40                 u64 [sp + 0x40] = a0
  1505: 51 07 68 06              jump @179 if a0 == 0
      :                          @93
  1509: 33 08                    a1 = 0
  1511: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  1521: 7b 17 18                 u64 [sp + 0x18] = a0
  1524: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  1534: 7b 17 10                 u64 [sp + 0x10] = a0
  1537: 33 07 a9 05 01           a0 = 0x105a9
  1542: 7b 17 08                 u64 [sp + 0x8] = a0
  1545: 33 07 02                 a0 = 0x2
  1548: 7b 17 68                 u64 [sp + 0x68] = a0
  1551: 49 11 60 08 10           u64 [sp + 96] = 0x1008
  1556: 28 0f                    jump @95
      :                          @94
  1558: 82 18 78                 a1 = u64 [sp + 0x78]
  1561: 95 88 01                 a1 = a1 + 0x1
  1564: 82 17 48                 a0 = u64 [sp + 0x48]
  1567: aa 78 31 05              jump @162 if a1 == a0
      :                          @95
  1571: 7b 18 78                 u64 [sp + 0x78] = a1
  1574: 95 16 48 43              s1 = sp + 0x4348
  1578: 7b 68 08                 u64 [s1 + 0x8] = a1
  1581: 95 17 28 13              a0 = sp + 0x1328
  1585: 33 08                    a1 = 0
  1587: 82 15 60                 s0 = u64 [sp + 0x60]
  1590: 64 59                    a2 = s0
  1592: 50 10 24 d9 28           ra = 36, jump @704
      :                          @96 [@dyn 18]
  1597: 95 17 30 23              a0 = sp + 0x2330
  1601: 33 08                    a1 = 0
  1603: 64 59                    a2 = s0
  1605: 50 10 26 cc 28           ra = 38, jump @704
      :                          @97 [@dyn 19]
  1610: 95 17 38 33              a0 = sp + 0x3338
  1614: 33 08                    a1 = 0
  1616: 64 59                    a2 = s0
  1618: 82 15 78                 s0 = u64 [sp + 0x78]
  1621: 50 10 28 bc 28           ra = 40, jump @704
      :                          @98 [@dyn 20]
  1626: 49 16 f8                 u64 [s1 + 4294967288] = 0
  1629: 49 06                    u64 [s1 + 0] = 0
  1631: 51 15 10 e8 05           jump @177 if s0 == 16
      :                          @99
  1636: 97 58 03                 a1 = s0 << 0x3
  1639: 95 87 08                 a0 = a1 + 0x8
  1642: 82 19 50                 a2 = u64 [sp + 0x50]
  1645: ac 79 1c 06              jump @183 if a2 <u a0
      :                          @100
  1649: 82 17 40                 a0 = u64 [sp + 0x40]
  1652: c8 87 07                 a0 = a0 + a1
  1655: 7c 78 05                 a1 = u8 [a0 + 0x5]
  1658: 7c 79 04                 a2 = u8 [a0 + 0x4]
  1661: 7c 7a 06                 a3 = u8 [a0 + 0x6]
  1664: 7d 7b 07                 a4 = i8 [a0 + 0x7]
  1667: 97 88 08                 a1 = a1 << 0x8
  1670: d4 98 08                 a1 = a1 | a2
  1673: 97 aa 10                 a3 = a3 << 0x10
  1676: 97 bb 18                 a4 = a4 << 0x18
  1679: d4 ba 0a                 a3 = a3 | a4
  1682: d4 a8 08                 a1 = a1 | a3
  1685: 33 09 38 00 01           a2 = 0x10038
  1690: 7b 19 80 00              u64 [sp + 0x80] = a2
  1694: 52 18 01 08 04           jump @153 if a1 != 1
      :                          @101
  1699: 97 58 02                 a1 = s0 << 0x2
  1702: 95 19 d0 02              a2 = sp + 0x2d0
  1706: c8 98 08                 a1 = a1 + a2
  1709: 80 89                    a2 = u32 [a1]
  1711: 83 92                    i32 t0 = a2 + 0
  1713: 7c 7a                    a3 = u8 [a0]
  1715: 7c 78 01                 a1 = u8 [a0 + 0x1]
  1718: 7c 7b 02                 a4 = u8 [a0 + 0x2]
  1721: 7c 7c 03                 a5 = u8 [a0 + 0x3]
  1724: 49 16 10 00 00 01        u64 [s1 + 16] = 0x10000
  1730: 82 17 18                 a0 = u64 [sp + 0x18]
  1733: 7b 67 18                 u64 [s1 + 0x18] = a0
  1736: 82 17 10                 a0 = u64 [sp + 0x10]
  1739: 7b 67 20                 u64 [s1 + 0x20] = a0
  1742: 95 17 70 43              a0 = sp + 0x4370
  1746: 49 17 20                 u64 [a0 + 32] = 0
  1749: 49 17 18                 u64 [a0 + 24] = 0
  1752: 49 17 10                 u64 [a0 + 16] = 0
  1755: 49 17 08                 u64 [a0 + 8] = 0
  1758: 49 07                    u64 [a0 + 0] = 0
  1760: 49 16 50 02              u64 [s1 + 80] = 0x2
  1764: 95 17 a0 43              a0 = sp + 0x43a0
  1768: 49 17 20                 u64 [a0 + 32] = 0
  1771: 49 17 18                 u64 [a0 + 24] = 0
  1774: 49 17 10                 u64 [a0 + 16] = 0
  1777: 49 17 08                 u64 [a0 + 8] = 0
  1780: 49 07                    u64 [a0 + 0] = 0
  1782: 7b 19 70                 u64 [sp + 0x70] = a2
  1785: 64 97                    a0 = a2
  1787: 51 02 3a 01              jump @121 if t0 == 0
      :                          @102
  1791: 7b 18 20                 u64 [sp + 0x20] = a1
  1794: 7b 1c 28                 u64 [sp + 0x28] = a5
  1797: 7b 1b 30                 u64 [sp + 0x30] = a4
  1800: 7b 1a 38                 u64 [sp + 0x38] = a3
  1803: 52 12 01 5f              jump @109 if t0 != 1
      :                          @103
  1807: 33 09 00 10              a2 = 0x1000
  1811: 95 17 18 44              a0 = sp + 0x4418
  1815: 33 08                    a1 = 0
  1817: 50 10 2a f8 27           ra = 42, jump @704
      :                          @104 [@dyn 21]
  1822: 48 26 c8 00              u32 [s1 + 200] = 0
  1826: 48 26 cc 00 10           u32 [s1 + 204] = 0x10
  1831: 33 09 00 00 01           a2 = 0x10000
  1836: 33 0a 00 10              a3 = 0x1000
  1840: 33 07                    a0 = 0
  1842: 95 18 18 44              a1 = sp + 0x4418
  1846: 0a 15                    ecalli 21 // 'peek'
  1848: 01                       fallthrough
      :                          @105
  1849: 51 07 14                 jump @107 if a0 == 0
      :                          @106
  1852: 33 0a d7 05 01           a3 = 0x105d7
  1857: 33 0b 15                 a4 = 0x15
  1860: 33 07                    a0 = 0
  1862: 33 08                    a1 = 0
  1864: 33 09                    a2 = 0
  1866: 0a 64                    ecalli 100 // 'log'
  1868: 01                       fallthrough
      :                          @107
  1869: 95 17 28 13              a0 = sp + 0x1328
  1873: 95 18 10 44              a1 = sp + 0x4410
  1877: 82 19 60                 a2 = u64 [sp + 0x60]
  1880: 50 10 2c 07 27           ra = 44, jump @686
      :                          @108 [@dyn 22]
  1885: 33 07 01                 a0 = 0x1
  1888: 95 18 30 23              a1 = sp + 0x2330
  1892: 7a 87 08                 u32 [a1 + 0x8] = a0
  1895: 28 c1 00                 jump @120
      :                          @109
  1898: 64 65                    s0 = s1
  1900: 82 16 70                 s1 = u64 [sp + 0x70]
  1903: 83 66 fe                 i32 s1 = s1 + 0xfffffffffffffffe
  1906: 33 09 00 10              a2 = 0x1000
  1910: 95 17 18 44              a0 = sp + 0x4418
  1914: 33 08                    a1 = 0
  1916: 50 10 2e 95 27           ra = 46, jump @704
      :                          @110 [@dyn 23]
  1921: 7a 56 c8 00              u32 [s0 + 0xc8] = s1
  1925: 48 25 cc 00 10           u32 [s0 + 204] = 0x10
  1930: 97 67 20                 a0 = s1 << 0x20
  1933: 98 77 20                 a0 = a0 >> 0x20
  1936: 33 09 00 00 01           a2 = 0x10000
  1941: 33 0a 00 10              a3 = 0x1000
  1945: 95 18 18 44              a1 = sp + 0x4418
  1949: 0a 15                    ecalli 21 // 'peek'
  1951: 01                       fallthrough
      :                          @111
  1952: 51 07 14                 jump @113 if a0 == 0
      :                          @112
  1955: 33 0a d7 05 01           a3 = 0x105d7
  1960: 33 0b 15                 a4 = 0x15
  1963: 33 07                    a0 = 0
  1965: 33 08                    a1 = 0
  1967: 33 09                    a2 = 0
  1969: 0a 64                    ecalli 100 // 'log'
  1971: 01                       fallthrough
      :                          @113
  1972: 95 17 28 13              a0 = sp + 0x1328
  1976: 95 18 10 44              a1 = sp + 0x4410
  1980: 82 19 60                 a2 = u64 [sp + 0x60]
  1983: 50 10 30 a0 26           ra = 48, jump @686
      :                          @114 [@dyn 24]
  1988: 82 16 70                 s1 = u64 [sp + 0x70]
  1991: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
  1994: 33 09 00 10              a2 = 0x1000
  1998: 95 15 18 44              s0 = sp + 0x4418
  2002: 64 57                    a0 = s0
  2004: 33 08                    a1 = 0
  2006: 50 10 32 3b 27           ra = 50, jump @704
      :                          @115 [@dyn 25]
  2011: 95 17 48 43              a0 = sp + 0x4348
  2015: 7a 76 c8 00              u32 [a0 + 0xc8] = s1
  2019: 48 27 cc 00 10           u32 [a0 + 204] = 0x10
  2024: 97 67 20                 a0 = s1 << 0x20
  2027: 98 77 20                 a0 = a0 >> 0x20
  2030: 33 09 00 00 01           a2 = 0x10000
  2035: 33 0a 00 10              a3 = 0x1000
  2039: 64 58                    a1 = s0
  2041: 0a 15                    ecalli 21 // 'peek'
  2043: 01                       fallthrough
      :                          @116
  2044: 51 07 14                 jump @118 if a0 == 0
      :                          @117
  2047: 33 0a d7 05 01           a3 = 0x105d7
  2052: 33 0b 15                 a4 = 0x15
  2055: 33 07                    a0 = 0
  2057: 33 08                    a1 = 0
  2059: 33 09                    a2 = 0
  2061: 0a 64                    ecalli 100 // 'log'
  2063: 01                       fallthrough
      :                          @118
  2064: 95 17 30 23              a0 = sp + 0x2330
  2068: 95 18 10 44              a1 = sp + 0x4410
  2072: 82 19 60                 a2 = u64 [sp + 0x60]
  2075: 50 10 34 44 26           ra = 52, jump @686
      :                          @119 [@dyn 26]
  2080: 95 17 30 23              a0 = sp + 0x2330
  2084: 81 77 08                 a0 = i32 [a0 + 0x8]
  2087: 01                       fallthrough
      :                          @120
  2088: 82 1a 38                 a3 = u64 [sp + 0x38]
  2091: 82 1b 30                 a4 = u64 [sp + 0x30]
  2094: 82 1c 28                 a5 = u64 [sp + 0x28]
  2097: 82 18 20                 a1 = u64 [sp + 0x20]
  2100: 01                       fallthrough
      :                          @121
  2101: 97 85 08                 s0 = a1 << 0x8
  2104: d4 a5 08                 a1 = s0 | a3
  2107: 97 b6 10                 s1 = a4 << 0x10
  2110: 97 c9 18                 a2 = a5 << 0x18
  2113: d4 69 09                 a2 = a2 | s1
  2116: 95 1a 48 43              a3 = sp + 0x4348
  2120: d4 98 08                 a1 = a1 | a2
  2123: 95 1b 20 13              a4 = sp + 0x1320
  2127: 82 15 70                 s0 = u64 [sp + 0x70]
  2130: 7a b5 08                 u32 [a4 + 0x8] = s0
  2133: 81 b9 10                 a2 = i32 [a4 + 0x10]
  2136: 48 1b 0c 10              u32 [a4 + 12] = 0x10
  2140: 95 1b 30 23              a4 = sp + 0x2330
  2144: 7a b5                    u32 [a4] = s0
  2146: 48 1b 04 11              u32 [a4 + 4] = 0x11
  2150: 7a a9 04                 u32 [a3 + 0x4] = a2
  2153: 7a a7                    u32 [a3] = a0
  2155: 7a a8 f8                 u32 [a3 + 0xfffffffffffffff8] = a1
  2158: 33 08 10                 a1 = 0x10
  2161: 33 09 01                 a2 = 0x1
  2164: 64 57                    a0 = s0
  2166: 0a 17                    ecalli 23 // 'zero'
  2168: 01                       fallthrough
      :                          @122
  2169: 51 07 15                 jump @124 if a0 == 0
      :                          @123
  2172: 33 0a c0 05 01           a3 = 0x105c0
  2177: 33 0b 17                 a4 = 0x17
  2180: 33 07                    a0 = 0
  2182: 33 08                    a1 = 0
  2184: 33 09                    a2 = 0
  2186: 0a 64                    ecalli 100 // 'log'
  2188: 28 26                    jump @127
      :                          @124
  2190: 33 09 00 00 01           a2 = 0x10000
  2195: 33 0a 00 10              a3 = 0x1000
  2199: 64 57                    a0 = s0
  2201: 95 18 30 13              a1 = sp + 0x1330
  2205: 0a 16                    ecalli 22 // 'poke'
  2207: 01                       fallthrough
      :                          @125
  2208: 51 07 12                 jump @127 if a0 == 0
      :                          @126
  2211: 33 0b 17                 a4 = 0x17
  2214: 33 07                    a0 = 0
  2216: 33 08                    a1 = 0
  2218: 33 09                    a2 = 0
  2220: 82 1a 08                 a3 = u64 [sp + 0x8]
  2223: 0a 64                    ecalli 100 // 'log'
  2225: 01                       fallthrough
      :                          @127
  2226: 95 17 30 23              a0 = sp + 0x2330
  2230: 80 76                    s1 = u32 [a0]
  2232: 80 75 04                 s0 = u32 [a0 + 0x4]
  2235: 33 09 01                 a2 = 0x1
  2238: 64 67                    a0 = s1
  2240: 64 58                    a1 = s0
  2242: 0a 17                    ecalli 23 // 'zero'
  2244: 01                       fallthrough
      :                          @128
  2245: 51 07 15                 jump @130 if a0 == 0
      :                          @129
  2248: 33 0a c0 05 01           a3 = 0x105c0
  2253: 33 0b 17                 a4 = 0x17
  2256: 33 07                    a0 = 0
  2258: 33 08                    a1 = 0
  2260: 33 09                    a2 = 0
  2262: 0a 64                    ecalli 100 // 'log'
  2264: 28 24                    jump @133
      :                          @130
  2266: 97 59 0c                 a2 = s0 << 0xc
  2269: 33 0a 00 10              a3 = 0x1000
  2273: 64 67                    a0 = s1
  2275: 95 18 38 23              a1 = sp + 0x2338
  2279: 0a 16                    ecalli 22 // 'poke'
  2281: 01                       fallthrough
      :                          @131
  2282: 51 07 12                 jump @133 if a0 == 0
      :                          @132
  2285: 33 0b 17                 a4 = 0x17
  2288: 33 07                    a0 = 0
  2290: 33 08                    a1 = 0
  2292: 33 09                    a2 = 0
  2294: 82 1a 08                 a3 = u64 [sp + 0x8]
  2297: 0a 64                    ecalli 100 // 'log'
  2299: 01                       fallthrough
      :                          @133
  2300: 95 18 58 43              a1 = sp + 0x4358
  2304: 82 17 70                 a0 = u64 [sp + 0x70]
  2307: 0a 19                    ecalli 25 // 'invoke'
  2309: 33 07 98 06 01           a0 = 0x10698
  2314: 95 15 48 43              s0 = sp + 0x4348
  2318: 7b 57 c8 00              u64 [s0 + 0xc8] = a0
  2322: 95 17 50 43              a0 = sp + 0x4350
  2326: 7b 57 98 00              u64 [s0 + 0x98] = a0
  2330: 82 17 88 00              a0 = u64 [sp + 0x88]
  2334: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  2338: 95 17 1f 54              a0 = sp + 0x541f
  2342: 7b 57 a8 00              u64 [s0 + 0xa8] = a0
  2346: 82 17 68                 a0 = u64 [sp + 0x68]
  2349: 7b 57 b0 00              u64 [s0 + 0xb0] = a0
  2353: 49 25 d0 00 02           u64 [s0 + 208] = 0x2
  2358: 49 25 e8 00              u64 [s0 + 232] = 0
  2362: 95 18 e0 43              a1 = sp + 0x43e0
  2366: 7b 58 d8 00              u64 [s0 + 0xd8] = a1
  2370: 49 25 e0 00 02           u64 [s0 + 224] = 0x2
  2375: 95 17 c8 43              a0 = sp + 0x43c8
  2379: 95 18 10 44              a1 = sp + 0x4410
  2383: 50 10 36 9b 22           ra = 54, jump @636
      :                          @134 [@dyn 27]
  2388: 82 56 88 00              s1 = u64 [s0 + 0x88]
  2392: 82 5b 90 00              a4 = u64 [s0 + 0x90]
  2396: 82 55 80 00              s0 = u64 [s0 + 0x80]
  2400: 33 07 02                 a0 = 0x2
  2403: 33 08                    a1 = 0
  2405: 33 09                    a2 = 0
  2407: 64 6a                    a3 = s1
  2409: 33 00 38                 ra = 0x38
  2412: 0a 64                    ecalli 100 // 'log'
  2414: 01                       fallthrough
      :                          @135 [@dyn 28]
  2415: 82 17 90 00              a0 = u64 [sp + 0x90]
  2419: c8 57 07                 a0 = a0 + s0
  2422: 82 1c 58                 a5 = u64 [sp + 0x58]
  2425: 33 02 00 10              t0 = 0x1000
  2429: 53 27 00 f0 1c           jump @140 if a0 <u 4294963200
      :                          @136
  2434: c8 2c 08                 a1 = a5 + t0
  2437: 82 87                    a0 = u64 [a1]
  2439: c9 78 09                 a2 = a1 - a0
  2442: ab 69 0f                 jump @140 if a2 != s1
      :                          @137
  2445: c9 57 09                 a2 = a0 - s0
  2448: 01                       fallthrough
      :                          @138
  2449: 82 8a                    a3 = u64 [a1]
  2451: ab 7a ef                 jump @136 if a3 != a0
      :                          @139
  2454: 7b 89                    u64 [a1] = a2
  2456: 01                       fallthrough
      :                          @140
  2457: 95 15 48 43              s0 = sp + 0x4348
  2461: 82 59 50                 a2 = u64 [s0 + 0x50]
  2464: 33 0a 00 10              a3 = 0x1000
  2468: 82 17 70                 a0 = u64 [sp + 0x70]
  2471: 95 18 40 33              a1 = sp + 0x3340
  2475: 0a 15                    ecalli 21 // 'peek'
  2477: 33 07 b8 06 01           a0 = 0x106b8
  2482: 7b 57 98 00              u64 [s0 + 0x98] = a0
  2486: 95 17 50 43              a0 = sp + 0x4350
  2490: 7b 57 c8 00              u64 [s0 + 0xc8] = a0
  2494: 82 17 88 00              a0 = u64 [sp + 0x88]
  2498: 7b 57 d0 00              u64 [s0 + 0xd0] = a0
  2502: 82 18 80 00              a1 = u64 [sp + 0x80]
  2506: 7b 58 d8 00              u64 [s0 + 0xd8] = a1
  2510: 7b 57 e0 00              u64 [s0 + 0xe0] = a0
  2514: 95 17 1f 54              a0 = sp + 0x541f
  2518: 7b 57 e8 00              u64 [s0 + 0xe8] = a0
  2522: 82 17 68                 a0 = u64 [sp + 0x68]
  2525: 7b 57 f0 00              u64 [s0 + 0xf0] = a0
  2529: 49 25 a0 00 03           u64 [s0 + 160] = 0x3
  2534: 49 25 b8 00              u64 [s0 + 184] = 0
  2538: 95 17 10 44              a0 = sp + 0x4410
  2542: 7b 57 a8 00              u64 [s0 + 0xa8] = a0
  2546: 49 25 b0 00 03           u64 [s0 + 176] = 0x3
  2551: 95 17 c8 43              a0 = sp + 0x43c8
  2555: 95 18 e0 43              a1 = sp + 0x43e0
  2559: 50 10 3a eb 21           ra = 58, jump @636
      :                          @141 [@dyn 29]
  2564: 82 56 88 00              s1 = u64 [s0 + 0x88]
  2568: 82 5b 90 00              a4 = u64 [s0 + 0x90]
  2572: 82 55 80 00              s0 = u64 [s0 + 0x80]
  2576: 33 07 02                 a0 = 0x2
  2579: 33 08                    a1 = 0
  2581: 33 09                    a2 = 0
  2583: 64 6a                    a3 = s1
  2585: 33 00 3c                 ra = 0x3c
  2588: 0a 64                    ecalli 100 // 'log'
  2590: 01                       fallthrough
      :                          @142 [@dyn 30]
  2591: 33 02 00 10              t0 = 0x1000
  2595: 82 1c 58                 a5 = u64 [sp + 0x58]
  2598: 82 17 90 00              a0 = u64 [sp + 0x90]
  2602: c8 57 07                 a0 = a0 + s0
  2605: 53 27 00 f0 1c           jump @147 if a0 <u 4294963200
      :                          @143
  2610: c8 2c 08                 a1 = a5 + t0
  2613: 82 87                    a0 = u64 [a1]
  2615: c9 78 09                 a2 = a1 - a0
  2618: ab 69 0f                 jump @147 if a2 != s1
      :                          @144
  2621: c9 57 09                 a2 = a0 - s0
  2624: 01                       fallthrough
      :                          @145
  2625: 82 8a                    a3 = u64 [a1]
  2627: ab 7a ef                 jump @143 if a3 != a0
      :                          @146
  2630: 7b 89                    u64 [a1] = a2
  2632: 01                       fallthrough
      :                          @147
  2633: 95 18 38 33              a1 = sp + 0x3338
  2637: 81 87 08                 a0 = i32 [a1 + 0x8]
  2640: 82 15 70                 s0 = u64 [sp + 0x70]
  2643: 7a 85                    u32 [a1] = s0
  2645: 48 18 04 10              u32 [a1 + 4] = 0x10
  2649: 95 16 48 43              s1 = sp + 0x4348
  2653: 7a 67 fc                 u32 [s1 + 0xfffffffffffffffc] = a0
  2656: 33 08 10                 a1 = 0x10
  2659: 33 09 01                 a2 = 0x1
  2662: 64 57                    a0 = s0
  2664: 0a 17                    ecalli 23 // 'zero'
  2666: 01                       fallthrough
      :                          @148
  2667: 51 07 15                 jump @150 if a0 == 0
      :                          @149
  2670: 33 0a c0 05 01           a3 = 0x105c0
  2675: 33 0b 17                 a4 = 0x17
  2678: 33 07                    a0 = 0
  2680: 33 08                    a1 = 0
  2682: 33 09                    a2 = 0
  2684: 0a 64                    ecalli 100 // 'log'
  2686: 28 28                    jump @153
      :                          @150
  2688: 33 09 00 00 01           a2 = 0x10000
  2693: 33 0a 00 10              a3 = 0x1000
  2697: 64 57                    a0 = s0
  2699: 95 18 40 33              a1 = sp + 0x3340
  2703: 0a 16                    ecalli 22 // 'poke'
  2705: 01                       fallthrough
      :                          @151
  2706: 51 07 14                 jump @153 if a0 == 0
      :                          @152
  2709: 33 0a a9 05 01           a3 = 0x105a9
  2714: 33 0b 17                 a4 = 0x17
  2717: 33 07                    a0 = 0
  2719: 33 08                    a1 = 0
  2721: 33 09                    a2 = 0
  2723: 0a 64                    ecalli 100 // 'log'
  2725: 01                       fallthrough
      :                          @153
  2726: 95 17 38 33              a0 = sp + 0x3338
  2730: 82 18 60                 a1 = u64 [sp + 0x60]
  2733: 0a 13                    ecalli 19 // 'export'
  2735: 33 07 e8 06 01           a0 = 0x106e8
  2740: 7b 67 10                 u64 [s1 + 0x10] = a0
  2743: 95 17 50 43              a0 = sp + 0x4350
  2747: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  2751: 82 17 88 00              a0 = u64 [sp + 0x88]
  2755: 7b 67 d0 00              u64 [s1 + 0xd0] = a0
  2759: 82 18 80 00              a1 = u64 [sp + 0x80]
  2763: 7b 68 d8 00              u64 [s1 + 0xd8] = a1
  2767: 7b 67 e0 00              u64 [s1 + 0xe0] = a0
  2771: 95 17 1f 54              a0 = sp + 0x541f
  2775: 7b 67 e8 00              u64 [s1 + 0xe8] = a0
  2779: 82 17 68                 a0 = u64 [sp + 0x68]
  2782: 7b 67 f0 00              u64 [s1 + 0xf0] = a0
  2786: 49 16 18 03              u64 [s1 + 24] = 0x3
  2790: 49 16 30                 u64 [s1 + 48] = 0
  2793: 95 17 10 44              a0 = sp + 0x4410
  2797: 7b 67 20                 u64 [s1 + 0x20] = a0
  2800: 49 16 28 03              u64 [s1 + 40] = 0x3
  2804: 95 17 e0 43              a0 = sp + 0x43e0
  2808: 95 18 58 43              a1 = sp + 0x4358
  2812: 50 10 3e ee 20           ra = 62, jump @636
      :                          @154 [@dyn 31]
  2817: 82 65 a0 00              s0 = u64 [s1 + 0xa0]
  2821: 82 6b a8 00              a4 = u64 [s1 + 0xa8]
  2825: 82 66 98 00              s1 = u64 [s1 + 0x98]
  2829: 33 07 02                 a0 = 0x2
  2832: 33 08                    a1 = 0
  2834: 33 09                    a2 = 0
  2836: 64 5a                    a3 = s0
  2838: 33 00 40                 ra = 0x40
  2841: 0a 64                    ecalli 100 // 'log'
  2843: 01                       fallthrough
      :                          @155 [@dyn 32]
  2844: 82 17 90 00              a0 = u64 [sp + 0x90]
  2848: c8 67 07                 a0 = a0 + s1
  2851: 82 1c 58                 a5 = u64 [sp + 0x58]
  2854: 33 02 00 10              t0 = 0x1000
  2858: 53 27 00 f0 ec fa        jump @94 if a0 <u 4294963200
      :                          @156
  2864: c8 2c 08                 a1 = a5 + t0
  2867: 82 87                    a0 = u64 [a1]
  2869: c9 78 09                 a2 = a1 - a0
  2872: ab 59 de fa              jump @94 if a2 != s0
      :                          @157
  2876: c9 67 09                 a2 = a0 - s1
  2879: 01                       fallthrough
      :                          @158
  2880: 82 8a                    a3 = u64 [a1]
  2882: ab 7a ee                 jump @156 if a3 != a0
      :                          @159
  2885: 7b 89                    u64 [a1] = a2
  2887: 33 0b                    a4 = 0
  2889: 01                       fallthrough
      :                          @160
  2890: ab 7a e6                 jump @156 if a3 != a0
      :                          @161
  2893: 28 c9 fa                 jump @94
      :                          @162
  2896: 82 17 10 03              a0 = u64 [sp + 0x310]
  2900: 7b 17 60                 u64 [sp + 0x60] = a0
  2903: 51 07 dc 00              jump @175 if a0 == 0
      :                          @163
  2907: 33 08                    a1 = 0
  2909: 33 07 68 06 01           a0 = 0x10668
  2914: 7b 17 50                 u64 [sp + 0x50] = a0
  2917: 95 c6 00 10              s1 = a5 + 0x1000
  2921: 28 0f                    jump @165
      :                          @164
  2923: 82 18 78                 a1 = u64 [sp + 0x78]
  2926: 95 88 01                 a1 = a1 + 0x1
  2929: 82 17 60                 a0 = u64 [sp + 0x60]
  2932: aa 78 bf 00              jump @175 if a1 == a0
      :                          @165
  2936: 95 15 48 43              s0 = sp + 0x4348
  2940: 7b 58 80 00              u64 [s0 + 0x80] = a1
  2944: 51 18 10 c7 00           jump @177 if a1 == 16
      :                          @166
  2949: 7b 18 78                 u64 [sp + 0x78] = a1
  2952: 97 87 02                 a0 = a1 << 0x2
  2955: 95 18 d0 02              a1 = sp + 0x2d0
  2959: c8 87 07                 a0 = a0 + a1
  2962: 80 77                    a0 = u32 [a0]
  2964: 0a 1a                    ecalli 26 // 'expunge'
  2966: 95 17 c8 43              a0 = sp + 0x43c8
  2970: 7b 57 c8 00              u64 [s0 + 0xc8] = a0
  2974: 82 17 88 00              a0 = u64 [sp + 0x88]
  2978: 7b 57 d0 00              u64 [s0 + 0xd0] = a0
  2982: 82 18 80 00              a1 = u64 [sp + 0x80]
  2986: 7b 58 d8 00              u64 [s0 + 0xd8] = a1
  2990: 7b 57 e0 00              u64 [s0 + 0xe0] = a0
  2994: 95 17 1f 54              a0 = sp + 0x541f
  2998: 7b 57 e8 00              u64 [s0 + 0xe8] = a0
  3002: 82 17 68                 a0 = u64 [sp + 0x68]
  3005: 7b 57 f0 00              u64 [s0 + 0xf0] = a0
  3009: 82 17 50                 a0 = u64 [sp + 0x50]
  3012: 7b 57 10                 u64 [s0 + 0x10] = a0
  3015: 49 15 18 03              u64 [s0 + 24] = 0x3
  3019: 49 15 30                 u64 [s0 + 48] = 0
  3022: 95 18 10 44              a1 = sp + 0x4410
  3026: 7b 58 20                 u64 [s0 + 0x20] = a1
  3029: 49 15 28 03              u64 [s0 + 40] = 0x3
  3033: 95 17 e0 43              a0 = sp + 0x43e0
  3037: 95 18 58 43              a1 = sp + 0x4358
  3041: 50 10 42 09 20           ra = 66, jump @636
      :                          @167 [@dyn 33]
  3046: 64 57                    a0 = s0
  3048: 82 55 a0 00              s0 = u64 [s0 + 0xa0]
  3052: 82 7b a8 00              a4 = u64 [a0 + 0xa8]
  3056: 82 77 98 00              a0 = u64 [a0 + 0x98]
  3060: 7b 17 70                 u64 [sp + 0x70] = a0
  3063: 33 07 02                 a0 = 0x2
  3066: 33 08                    a1 = 0
  3068: 33 09                    a2 = 0
  3070: 64 5a                    a3 = s0
  3072: 33 00 44                 ra = 0x44
  3075: 0a 64                    ecalli 100 // 'log'
  3077: 01                       fallthrough
      :                          @168 [@dyn 34]
  3078: 82 1b 70                 a4 = u64 [sp + 0x70]
  3081: 82 17 90 00              a0 = u64 [sp + 0x90]
  3085: c8 b7 07                 a0 = a0 + a4
  3088: 53 27 00 f0 5b ff        jump @164 if a0 <u 4294963200
      :                          @169
  3094: 82 67                    a0 = u64 [s1]
  3096: c9 76 08                 a1 = s1 - a0
  3099: ab 58 50 ff              jump @164 if a1 != s0
      :                          @170
  3103: c9 b7 08                 a1 = a0 - a4
  3106: 01                       fallthrough
      :                          @171
  3107: 82 69                    a2 = u64 [s1]
  3109: ab 79 f1                 jump @169 if a2 != a0
      :                          @172
  3112: 7b 68                    u64 [s1] = a1
  3114: 33 0a                    a3 = 0
  3116: 01                       fallthrough
      :                          @173
  3117: ab 79 e9                 jump @169 if a2 != a0
      :                          @174
  3120: 28 3b ff                 jump @164
      :                          @175
  3123: 95 16 40 43              s1 = sp + 0x4340
  3127: 33 08 10                 a1 = 0x10
  3130: 28 41 f5                 jump @31
      :                          @176
  3133: 33 08                    a1 = 0
  3135: 33 06 00 00 01           s1 = 0x10000
  3140: 28 37 f5                 jump @31
      :                          @177
  3143: 00                       trap
      :                          @178
  3144: 00                       trap
      :                          @179
  3145: 95 16 48 43              s1 = sp + 0x4348
  3149: 49 16 08                 u64 [s1 + 8] = 0
  3152: 33 05 08 10              s0 = 0x1008
  3156: 95 17 28 13              a0 = sp + 0x1328
  3160: 33 08                    a1 = 0
  3162: 33 09 08 10              a2 = 0x1008
  3166: 50 10 46 b3 22           ra = 70, jump @704
      :                          @180 [@dyn 35]
  3171: 95 17 30 23              a0 = sp + 0x2330
  3175: 33 08                    a1 = 0
  3177: 64 59                    a2 = s0
  3179: 50 10 48 a6 22           ra = 72, jump @704
      :                          @181 [@dyn 36]
  3184: 95 17 38 33              a0 = sp + 0x3338
  3188: 33 08                    a1 = 0
  3190: 64 59                    a2 = s0
  3192: 50 10 4a 99 22           ra = 74, jump @704
      :                          @182 [@dyn 37]
  3197: 49 16 f8                 u64 [s1 + 4294967288] = 0
  3200: 49 06                    u64 [s1 + 0] = 0
  3202: 82 18 50                 a1 = u64 [sp + 0x50]
  3205: 55 18 08 05              jump @184 if a1 >=u 8
      :                          @183
  3209: 00                       trap
      :                          @184
  3210: 00                       trap
      :                          @185 [export #1: 'accumulate']
  3211: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  3215: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  3219: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  3223: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  3227: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  3231: 33 09 08                 a2 = 0x8
  3234: ac 98 08 01              jump @218 if a1 <u a2
      :                          @186
  3238: 52 07 06                 jump @188 if a0 != 0
      :                          @187
  3241: 28 02 1d                 jump @574
      :                          @188
  3244: 95 79 04                 a2 = a0 + 0x4
  3247: 52 09 06                 jump @190 if a2 != 0
      :                          @189
  3250: 28 fa 1c                 jump @575
      :                          @190
  3253: 7c 79 04                 a2 = u8 [a0 + 0x4]
  3256: 7b 19 40                 u64 [sp + 0x40] = a2
  3259: 7c 79 05                 a2 = u8 [a0 + 0x5]
  3262: 7b 19 28                 u64 [sp + 0x28] = a2
  3265: 7c 79 06                 a2 = u8 [a0 + 0x6]
  3268: 7b 19 38                 u64 [sp + 0x38] = a2
  3271: 7c 79 07                 a2 = u8 [a0 + 0x7]
  3274: 7b 19 30                 u64 [sp + 0x30] = a2
  3277: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  3280: 95 75 08                 s0 = a0 + 0x8
  3283: 51 0a 45                 jump @200 if a3 == 0
      :                          @191
  3286: 7d 58                    a1 = i8 [s0]
  3288: 33 06 01                 s1 = 0x1
  3291: 59 08 40                 jump @201 if a1 >=s 0
      :                          @192
  3294: 84 89 ff 00              a2 = a1 & 0xff
  3298: 33 06 02                 s1 = 0x2
  3301: 53 29 c0 00 2d           jump @198 if a2 <u 192
      :                          @193
  3306: 33 06 03                 s1 = 0x3
  3309: 53 29 e0 00 25           jump @198 if a2 <u 224
      :                          @194
  3314: 33 06 04                 s1 = 0x4
  3317: 53 29 f0 00 1d           jump @198 if a2 <u 240
      :                          @195
  3322: 33 06 05                 s1 = 0x5
  3325: 53 29 f8 00 15           jump @198 if a2 <u 248
      :                          @196
  3330: 33 06 06                 s1 = 0x6
  3333: 53 29 fc 00 0d           jump @198 if a2 <u 252
      :                          @197
  3338: 88 98 fe 00              a1 = a2 <u 0xfe
  3342: 9a 86 08                 s1 = 0x8 - a1
  3345: 01                       fallthrough
      :                          @198
  3346: ae 6a 09                 jump @201 if a3 >=u s1
      :                          @199
  3349: 28 95 00                 jump @218
      :                          @200
  3352: 33 06                    s1 = 0
  3354: 01                       fallthrough
      :                          @201
  3355: 7b 16 48                 u64 [sp + 0x48] = s1
  3358: 64 57                    a0 = s0
  3360: 64 68                    a1 = s1
  3362: 64 a6                    s1 = a3
  3364: 50 10 4c 23 2e           ra = 76, jump @946
      :                          @202 [@dyn 38]
  3369: 82 1a 48                 a3 = u64 [sp + 0x48]
  3372: 51 07 7e                 jump @218 if a0 == 0
      :                          @203
  3375: e4 a6 07                 a0 = maxu(s1, a3)
  3378: c9 a7 07                 a0 = a0 - a3
  3381: 53 17 60 75              jump @218 if a0 <u 96
      :                          @204
  3385: c8 5a 08                 a1 = a3 + s0
  3388: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  3391: 95 87 60                 a0 = a1 + 0x60
  3394: 7b 17 48                 u64 [sp + 0x48] = a0
  3397: 51 06 4e                 jump @216 if s1 == 0
      :                          @205
  3400: 7d 78                    a1 = i8 [a0]
  3402: 33 05 01                 s0 = 0x1
  3405: 59 08 37                 jump @212 if a1 >=s 0
      :                          @206
  3408: 84 89 ff 00              a2 = a1 & 0xff
  3412: 33 05 02                 s0 = 0x2
  3415: 53 29 c0 00 2d           jump @212 if a2 <u 192
      :                          @207
  3420: 33 05 03                 s0 = 0x3
  3423: 53 29 e0 00 25           jump @212 if a2 <u 224
      :                          @208
  3428: 33 05 04                 s0 = 0x4
  3431: 53 29 f0 00 1d           jump @212 if a2 <u 240
      :                          @209
  3436: 33 05 05                 s0 = 0x5
  3439: 53 29 f8 00 15           jump @212 if a2 <u 248
      :                          @210
  3444: 33 05 06                 s0 = 0x6
  3447: 53 29 fc 00 0d           jump @212 if a2 <u 252
      :                          @211
  3452: 88 98 fe 00              a1 = a2 <u 0xfe
  3456: 9a 85 08                 s0 = 0x8 - a1
  3459: 01                       fallthrough
      :                          @212
  3460: ae 56 06                 jump @214 if s1 >=u s0
      :                          @213
  3463: 28 26 1c                 jump @576
      :                          @214
  3466: 64 58                    a1 = s0
  3468: 50 10 4e bb 2d           ra = 78, jump @946
      :                          @215 [@dyn 39]
  3473: 28 07                    jump @217
      :                          @216
  3475: 33 05                    s0 = 0
  3477: 33 07                    a0 = 0
  3479: 01                       fallthrough
      :                          @217
  3480: e4 56 08                 a1 = maxu(s1, s0)
  3483: c9 58 08                 a1 = a1 - s0
  3486: e4 78 08                 a1 = maxu(a1, a0)
  3489: c9 78 08                 a1 = a1 - a0
  3492: 33 09 21                 a2 = 0x21
  3495: ae 98 23                 jump @220 if a1 >=u a2
      :                          @218
  3498: 33 08                    a1 = 0
  3500: 33 05 00 00 01           s0 = 0x10000
  3505: 01                       fallthrough
      :                          @219
  3506: 64 57                    a0 = s0
  3508: 95 11 40 04              sp = sp + 0x440
  3512: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3516: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3520: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3524: 95 11 f8 07              sp = sp + 0x7f8
  3528: 32 00                    ret
      :                          @220
  3530: 82 19 48                 a2 = u64 [sp + 0x48]
  3533: c8 95 05                 s0 = s0 + a2
  3536: c8 57 07                 a0 = a0 + s0
  3539: 7c 79 20                 a2 = u8 [a0 + 0x20]
  3542: 51 09 0a                 jump @222 if a2 == 0
      :                          @221
  3545: 33 06                    s1 = 0
  3547: 33 0a                    a3 = 0
  3549: 28 85 00                 jump @237
      :                          @222
  3552: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  3555: 95 75 21                 s0 = a0 + 0x21
  3558: 51 0a 56                 jump @234 if a3 == 0
      :                          @223
  3561: 7d 57                    a0 = i8 [s0]
  3563: 33 06 01                 s1 = 0x1
  3566: 59 07 37                 jump @230 if a0 >=s 0
      :                          @224
  3569: 84 77 ff 00              a0 = a0 & 0xff
  3573: 33 06 02                 s1 = 0x2
  3576: 53 27 c0 00 2d           jump @230 if a0 <u 192
      :                          @225
  3581: 33 06 03                 s1 = 0x3
  3584: 53 27 e0 00 25           jump @230 if a0 <u 224
      :                          @226
  3589: 33 06 04                 s1 = 0x4
  3592: 53 27 f0 00 1d           jump @230 if a0 <u 240
      :                          @227
  3597: 33 06 05                 s1 = 0x5
  3600: 53 27 f8 00 15           jump @230 if a0 <u 248
      :                          @228
  3605: 33 06 06                 s1 = 0x6
  3608: 53 27 fc 00 0d           jump @230 if a0 <u 252
      :                          @229
  3613: 88 77 fe 00              a0 = a0 <u 0xfe
  3617: 9a 76 08                 s1 = 0x8 - a0
  3620: 01                       fallthrough
      :                          @230
  3621: 7b 1a 48                 u64 [sp + 0x48] = a3
  3624: ae 6a 06                 jump @232 if a3 >=u s1
      :                          @231
  3627: 28 84 1b                 jump @578
      :                          @232
  3630: 64 57                    a0 = s0
  3632: 64 68                    a1 = s1
  3634: 50 10 50 15 2d           ra = 80, jump @946
      :                          @233 [@dyn 40]
  3639: 82 1a 48                 a3 = u64 [sp + 0x48]
  3642: 28 07                    jump @235
      :                          @234
  3644: 33 06                    s1 = 0
  3646: 33 07                    a0 = 0
  3648: 01                       fallthrough
      :                          @235
  3649: e4 6a 08                 a1 = maxu(a3, s1)
  3652: c9 68 08                 a1 = a1 - s1
  3655: e6 78 0a                 a3 = minu(a1, a0)
  3658: c8 56 06                 s1 = s1 + s0
  3661: 52 1a 24 15              jump @237 if a3 != 36
      :                          @236
  3665: 80 68 20                 a1 = u32 [s1 + 0x20]
  3668: 64 67                    a0 = s1
  3670: 0a 0e                    ecalli 14 // 'solicit'
  3672: 33 08                    a1 = 0
  3674: 33 05 00 00 01           s0 = 0x10000
  3679: 28 53 ff                 jump @219
      :                          @237
  3682: 82 17 28                 a0 = u64 [sp + 0x28]
  3685: 97 77 08                 a0 = a0 << 0x8
  3688: 82 18 40                 a1 = u64 [sp + 0x40]
  3691: d4 87 07                 a0 = a0 | a1
  3694: 82 18 38                 a1 = u64 [sp + 0x38]
  3697: 97 88 10                 a1 = a1 << 0x10
  3700: 82 19 30                 a2 = u64 [sp + 0x30]
  3703: 97 99 18                 a2 = a2 << 0x18
  3706: d4 98 08                 a1 = a1 | a2
  3709: d4 87 07                 a0 = a0 | a1
  3712: 7b 17 30                 u64 [sp + 0x30] = a0
  3715: 46 11 51                 u8 [sp + 81] = 0
  3718: 81 65                    s0 = i32 [s1]
  3720: 95 17 51                 a0 = sp + 0x51
  3723: 33 08 01                 a1 = 0x1
  3726: 7b 16 18                 u64 [sp + 0x18] = s1
  3729: 64 69                    a2 = s1
  3731: 7b 1a 20                 u64 [sp + 0x20] = a3
  3734: 0a 03                    ecalli 3 // 'write'
  3736: 46 11 52 6a              u8 [sp + 82] = 0x6a
  3740: 46 11 53 61              u8 [sp + 83] = 0x61
  3744: 46 11 54 6d              u8 [sp + 84] = 0x6d
  3748: 46 11 55 44              u8 [sp + 85] = 0x44
  3752: 46 11 56 4f              u8 [sp + 86] = 0x4f
  3756: 46 11 57 54              u8 [sp + 87] = 0x54
  3760: 46 11 58 6a              u8 [sp + 88] = 0x6a
  3764: 46 11 59 0d              u8 [sp + 89] = 0xd
  3768: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  3772: 46 11 5b 19              u8 [sp + 91] = 0x19
  3776: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  3781: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  3786: 46 11 5e 50              u8 [sp + 94] = 0x50
  3790: 46 11 5f 57              u8 [sp + 95] = 0x57
  3794: 46 11 60 13              u8 [sp + 96] = 0x13
  3798: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  3803: 46 11 62 65              u8 [sp + 98] = 0x65
  3807: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  3812: 46 11 64 31              u8 [sp + 100] = 0x31
  3816: 46 11 65 03              u8 [sp + 101] = 0x3
  3820: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  3825: 46 11 67 73              u8 [sp + 103] = 0x73
  3829: 33 0b f1 00              a4 = 0xf1
  3833: 78 1b 68                 u8 [sp + 0x68] = a4
  3836: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  3841: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  3846: 46 11 6b 64              u8 [sp + 107] = 0x64
  3850: 46 11 6c 56              u8 [sp + 108] = 0x56
  3854: 46 11 6d 32              u8 [sp + 109] = 0x32
  3858: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  3863: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  3868: 46 11 70 50              u8 [sp + 112] = 0x50
  3872: 33 0c 3c                 a5 = 0x3c
  3875: 78 1c 71                 u8 [sp + 0x71] = a5
  3878: 46 11 72 4f              u8 [sp + 114] = 0x4f
  3882: 46 11 73 0c              u8 [sp + 115] = 0xc
  3886: 46 11 74 4d              u8 [sp + 116] = 0x4d
  3890: 46 11 75 5e              u8 [sp + 117] = 0x5e
  3894: 46 11 76 19              u8 [sp + 118] = 0x19
  3898: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  3903: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  3908: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  3913: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  3918: 46 11 7b 0f              u8 [sp + 123] = 0xf
  3922: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  3927: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  3932: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  3937: 46 11 7f 47              u8 [sp + 127] = 0x47
  3941: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  3947: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  3952: 78 1c 82 00              u8 [sp + 0x82] = a5
  3956: 78 1b 83 00              u8 [sp + 0x83] = a4
  3960: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  3966: 95 16 ff 07              s1 = sp + 0x7ff
  3970: 95 66 99 03              s1 = s1 + 0x399
  3974: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  3979: 46 21 86 00 49           u8 [sp + 134] = 0x49
  3984: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  3990: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  3996: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  4002: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  4008: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  4014: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  4020: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  4025: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  4030: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  4035: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  4041: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  4047: 46 21 92 00 33           u8 [sp + 146] = 0x33
  4052: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  4057: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  4063: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  4069: 46 21 96 00 55           u8 [sp + 150] = 0x55
  4074: 46 21 97 00 07           u8 [sp + 151] = 0x7
  4079: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  4084: 95 17 98 00              a0 = sp + 0x98
  4088: 33 09 00 01              a2 = 0x100
  4092: 33 08                    a1 = 0
  4094: 50 10 52 13 1f           ra = 82, jump @704
      :                          @238 [@dyn 41]
  4099: 7b 15 28                 u64 [sp + 0x28] = s0
  4102: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  4105: 33 09 38 00 01           a2 = 0x10038
  4110: 7b 19 38                 u64 [sp + 0x38] = a2
  4113: 33 09 04                 a2 = 0x4
  4116: 7b 19 40                 u64 [sp + 0x40] = a2
  4119: 54 17 09 07              jump @240 if a0 <=u 9
      :                          @239
  4123: 28 b3 17                 jump @547
      :                          @240
  4126: 97 77 02                 a0 = a0 << 0x2
  4129: 33 08 00 00 01           a1 = 0x10000
  4134: c8 87 07                 a0 = a0 + a1
  4137: 81 77                    a0 = i32 [a0]
  4139: c8 87 07                 a0 = a0 + a1
  4142: 32 07                    jump [a0]
      :                          @241 [@dyn 42]
  4144: 95 18 52                 a1 = sp + 0x52
  4147: 33 09 03                 a2 = 0x3
  4150: 95 1a 98 00              a3 = sp + 0x98
  4154: 33 0c 00 01              a5 = 0x100
  4158: 82 17 30                 a0 = u64 [sp + 0x30]
  4161: 33 0b                    a4 = 0
  4163: 0a 02                    ecalli 2 // 'read'
  4165: 7b 67 70                 u64 [s1 + 0x70] = a0
  4168: 33 07 40 00 01           a0 = 0x10040
  4173: 7b 17 10                 u64 [sp + 0x10] = a0
  4176: 7b 67 18                 u64 [s1 + 0x18] = a0
  4179: 82 18 40                 a1 = u64 [sp + 0x40]
  4182: 7b 68 20                 u64 [s1 + 0x20] = a1
  4185: 95 17 ff 07              a0 = sp + 0x7ff
  4189: 95 77 09 04              a0 = a0 + 0x409
  4193: 7b 67 28                 u64 [s1 + 0x28] = a0
  4196: 7b 68 30                 u64 [s1 + 0x30] = a1
  4199: 33 07 28 07 01           a0 = 0x10728
  4204: 7b 17 98 01              u64 [sp + 0x198] = a0
  4208: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4213: 49 21 b8 01              u64 [sp + 440] = 0
  4217: 95 17 ff 07              a0 = sp + 0x7ff
  4221: 95 77 b1 03              a0 = a0 + 0x3b1
  4225: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4229: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4234: 95 17 ff 07              a0 = sp + 0x7ff
  4238: 95 77 e1 03              a0 = a0 + 0x3e1
  4242: 95 18 98 01              a1 = sp + 0x198
  4246: 50 10 56 54 1b           ra = 86, jump @636
      :                          @242 [@dyn 43]
  4251: 82 65 50                 s0 = u64 [s1 + 0x50]
  4254: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4257: 95 17 ff 07              a0 = sp + 0x7ff
  4261: 95 77 99 03              a0 = a0 + 0x399
  4265: 82 76 48                 s1 = u64 [a0 + 0x48]
  4268: 33 07 02                 a0 = 0x2
  4271: 33 08                    a1 = 0
  4273: 33 09                    a2 = 0
  4275: 64 5a                    a3 = s0
  4277: 33 00 58                 ra = 0x58
  4280: 0a 64                    ecalli 100 // 'log'
  4282: 01                       fallthrough
      :                          @243 [@dyn 44]
  4283: 82 17 48                 a0 = u64 [sp + 0x48]
  4286: c8 67 07                 a0 = a0 + s1
  4289: 53 27 00 f0 23           jump @249 if a0 <u 4294963200
      :                          @244
  4294: 33 07 20 00 03           a0 = 0x30020
  4299: 95 77 00 10              a0 = a0 + 0x1000
  4303: 01                       fallthrough
      :                          @245
  4304: 82 78                    a1 = u64 [a0]
  4306: c9 87 09                 a2 = a0 - a1
  4309: ab 59 0f                 jump @249 if a2 != s0
      :                          @246
  4312: c9 68 09                 a2 = a1 - s1
  4315: 01                       fallthrough
      :                          @247
  4316: 82 7a                    a3 = u64 [a0]
  4318: ab 8a f2                 jump @245 if a3 != a1
      :                          @248
  4321: 7b 79                    u64 [a0] = a2
  4323: 01                       fallthrough
      :                          @249
  4324: 95 16 ff 07              s1 = sp + 0x7ff
  4328: 95 66 99 03              s1 = s1 + 0x399
  4332: 82 67 70                 a0 = u64 [s1 + 0x70]
  4335: 33 08 01                 a1 = 0x1
  4338: 50 10 5a f3 2a           ra = 90, jump @970
      :                          @250 [@dyn 45]
  4343: 95 17 52                 a0 = sp + 0x52
  4346: 33 08 03                 a1 = 0x3
  4349: 95 19 55                 a2 = sp + 0x55
  4352: 33 0a 03                 a3 = 0x3
  4355: 0a 03                    ecalli 3 // 'write'
  4357: 7b 67 78                 u64 [s1 + 0x78] = a0
  4360: 82 17 10                 a0 = u64 [sp + 0x10]
  4363: 7b 67 18                 u64 [s1 + 0x18] = a0
  4366: 95 17 ff 07              a0 = sp + 0x7ff
  4370: 95 77 11 04              a0 = a0 + 0x411
  4374: 7b 67 28                 u64 [s1 + 0x28] = a0
  4377: 33 07 58 07 01           a0 = 0x10758
  4382: 7b 17 98 01              u64 [sp + 0x198] = a0
  4386: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4391: 49 21 b8 01              u64 [sp + 440] = 0
  4395: 95 17 ff 07              a0 = sp + 0x7ff
  4399: 95 77 b1 03              a0 = a0 + 0x3b1
  4403: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4407: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4412: 82 17 40                 a0 = u64 [sp + 0x40]
  4415: 7b 67 20                 u64 [s1 + 0x20] = a0
  4418: 7b 67 30                 u64 [s1 + 0x30] = a0
  4421: 95 17 ff 07              a0 = sp + 0x7ff
  4425: 95 77 e1 03              a0 = a0 + 0x3e1
  4429: 95 18 98 01              a1 = sp + 0x198
  4433: 50 10 5c 99 1a           ra = 92, jump @636
      :                          @251 [@dyn 46]
  4438: 82 65 50                 s0 = u64 [s1 + 0x50]
  4441: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4444: 82 66 48                 s1 = u64 [s1 + 0x48]
  4447: 33 07 02                 a0 = 0x2
  4450: 33 08                    a1 = 0
  4452: 33 09                    a2 = 0
  4454: 64 5a                    a3 = s0
  4456: 33 00 5e                 ra = 0x5e
  4459: 0a 64                    ecalli 100 // 'log'
  4461: 01                       fallthrough
      :                          @252 [@dyn 47]
  4462: 82 17 48                 a0 = u64 [sp + 0x48]
  4465: c8 67 07                 a0 = a0 + s1
  4468: 53 27 00 f0 23           jump @258 if a0 <u 4294963200
      :                          @253
  4473: 33 07 20 00 03           a0 = 0x30020
  4478: 95 77 00 10              a0 = a0 + 0x1000
  4482: 01                       fallthrough
      :                          @254
  4483: 82 78                    a1 = u64 [a0]
  4485: c9 87 09                 a2 = a0 - a1
  4488: ab 59 0f                 jump @258 if a2 != s0
      :                          @255
  4491: c9 68 09                 a2 = a1 - s1
  4494: 01                       fallthrough
      :                          @256
  4495: 82 7a                    a3 = u64 [a0]
  4497: ab 8a f2                 jump @254 if a3 != a1
      :                          @257
  4500: 7b 79                    u64 [a0] = a2
  4502: 01                       fallthrough
      :                          @258
  4503: 95 16 ff 07              s1 = sp + 0x7ff
  4507: 95 66 99 03              s1 = s1 + 0x399
  4511: 82 67 78                 a0 = u64 [s1 + 0x78]
  4514: 33 08 02                 a1 = 0x2
  4517: 33 05 02                 s0 = 0x2
  4520: 50 10 60 3d 2a           ra = 96, jump @970
      :                          @259 [@dyn 48]
  4525: 95 18 52                 a1 = sp + 0x52
  4528: 33 09 03                 a2 = 0x3
  4531: 95 1a 98 00              a3 = sp + 0x98
  4535: 33 0c 00 01              a5 = 0x100
  4539: 82 17 30                 a0 = u64 [sp + 0x30]
  4542: 33 0b                    a4 = 0
  4544: 0a 02                    ecalli 2 // 'read'
  4546: 7b 67 80 00              u64 [s1 + 0x80] = a0
  4550: 82 17 38                 a0 = u64 [sp + 0x38]
  4553: 7b 67 18                 u64 [s1 + 0x18] = a0
  4556: 82 18 40                 a1 = u64 [sp + 0x40]
  4559: 7b 68 20                 u64 [s1 + 0x20] = a1
  4562: 95 17 ff 07              a0 = sp + 0x7ff
  4566: 95 77 19 04              a0 = a0 + 0x419
  4570: 7b 67 28                 u64 [s1 + 0x28] = a0
  4573: 7b 68 30                 u64 [s1 + 0x30] = a1
  4576: 33 07 88 07 01           a0 = 0x10788
  4581: 7b 17 98 01              u64 [sp + 0x198] = a0
  4585: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4590: 49 21 b8 01              u64 [sp + 440] = 0
  4594: 95 17 ff 07              a0 = sp + 0x7ff
  4598: 95 77 b1 03              a0 = a0 + 0x3b1
  4602: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4606: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  4610: 95 17 ff 07              a0 = sp + 0x7ff
  4614: 95 77 e1 03              a0 = a0 + 0x3e1
  4618: 95 18 98 01              a1 = sp + 0x198
  4622: 50 10 62 dc 19           ra = 98, jump @636
      :                          @260 [@dyn 49]
  4627: 82 65 50                 s0 = u64 [s1 + 0x50]
  4630: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4633: 82 66 48                 s1 = u64 [s1 + 0x48]
  4636: 33 07 02                 a0 = 0x2
  4639: 33 08                    a1 = 0
  4641: 33 09                    a2 = 0
  4643: 64 5a                    a3 = s0
  4645: 33 00 64                 ra = 0x64
  4648: 0a 64                    ecalli 100 // 'log'
  4650: 01                       fallthrough
      :                          @261 [@dyn 50]
  4651: 82 17 48                 a0 = u64 [sp + 0x48]
  4654: c8 67 07                 a0 = a0 + s1
  4657: 53 27 00 f0 23           jump @267 if a0 <u 4294963200
      :                          @262
  4662: 33 07 20 00 03           a0 = 0x30020
  4667: 95 77 00 10              a0 = a0 + 0x1000
  4671: 01                       fallthrough
      :                          @263
  4672: 82 78                    a1 = u64 [a0]
  4674: c9 87 09                 a2 = a0 - a1
  4677: ab 59 0f                 jump @267 if a2 != s0
      :                          @264
  4680: c9 68 09                 a2 = a1 - s1
  4683: 01                       fallthrough
      :                          @265
  4684: 82 7a                    a3 = u64 [a0]
  4686: ab 8a f2                 jump @263 if a3 != a1
      :                          @266
  4689: 7b 79                    u64 [a0] = a2
  4691: 01                       fallthrough
      :                          @267
  4692: 95 16 ff 07              s1 = sp + 0x7ff
  4696: 95 66 99 03              s1 = s1 + 0x399
  4700: 82 67 80 00              a0 = u64 [s1 + 0x80]
  4704: 33 08 05                 a1 = 0x5
  4707: 50 10 66 82 29           ra = 102, jump @970
      :                          @268 [@dyn 51]
  4712: 95 17 52                 a0 = sp + 0x52
  4715: 33 08                    a1 = 0
  4717: 0a 0f                    ecalli 15 // 'forget'
  4719: 7b 67                    u64 [s1] = a0
  4721: 33 07 48 00 01           a0 = 0x10048
  4726: 7b 67 18                 u64 [s1 + 0x18] = a0
  4729: 33 07 b8 07 01           a0 = 0x107b8
  4734: 7b 17 98 01              u64 [sp + 0x198] = a0
  4738: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4743: 49 21 b8 01              u64 [sp + 440] = 0
  4747: 95 17 ff 07              a0 = sp + 0x7ff
  4751: 95 77 b1 03              a0 = a0 + 0x3b1
  4755: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4759: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4764: 82 17 40                 a0 = u64 [sp + 0x40]
  4767: 7b 67 20                 u64 [s1 + 0x20] = a0
  4770: 7b 66 28                 u64 [s1 + 0x28] = s1
  4773: 7b 67 30                 u64 [s1 + 0x30] = a0
  4776: 95 17 ff 07              a0 = sp + 0x7ff
  4780: 95 77 e1 03              a0 = a0 + 0x3e1
  4784: 95 18 98 01              a1 = sp + 0x198
  4788: 50 10 68 36 19           ra = 104, jump @636
      :                          @269 [@dyn 52]
  4793: 82 65 50                 s0 = u64 [s1 + 0x50]
  4796: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4799: 82 66 48                 s1 = u64 [s1 + 0x48]
  4802: 33 07 02                 a0 = 0x2
  4805: 33 08                    a1 = 0
  4807: 33 09                    a2 = 0
  4809: 64 5a                    a3 = s0
  4811: 33 00 6a                 ra = 0x6a
  4814: 0a 64                    ecalli 100 // 'log'
  4816: 01                       fallthrough
      :                          @270 [@dyn 53]
  4817: 82 17 48                 a0 = u64 [sp + 0x48]
  4820: c8 67 07                 a0 = a0 + s1
  4823: 53 27 00 f0 f8 09        jump @405 if a0 <u 4294963200
      :                          @271
  4829: 33 07 20 00 03           a0 = 0x30020
  4834: 95 77 00 10              a0 = a0 + 0x1000
  4838: 01                       fallthrough
      :                          @272
  4839: 82 78                    a1 = u64 [a0]
  4841: c9 87 09                 a2 = a0 - a1
  4844: ab 59 e3 09              jump @405 if a2 != s0
      :                          @273
  4848: c9 68 09                 a2 = a1 - s1
  4851: 01                       fallthrough
      :                          @274
  4852: 82 7a                    a3 = u64 [a0]
  4854: ab 8a f1                 jump @272 if a3 != a1
      :                          @275
  4857: 7b 79                    u64 [a0] = a2
  4859: 33 0b                    a4 = 0
  4861: 01                       fallthrough
      :                          @276
  4862: ab 8a e9                 jump @272 if a3 != a1
      :                          @277
  4865: 28 ce 09                 jump @405
      :                          @278 [@dyn 54]
  4868: 95 18 52                 a1 = sp + 0x52
  4871: 33 09 03                 a2 = 0x3
  4874: 95 1a 98 00              a3 = sp + 0x98
  4878: 33 0c 00 01              a5 = 0x100
  4882: 82 17 30                 a0 = u64 [sp + 0x30]
  4885: 33 0b                    a4 = 0
  4887: 0a 02                    ecalli 2 // 'read'
  4889: 7b 67 78                 u64 [s1 + 0x78] = a0
  4892: 82 17 38                 a0 = u64 [sp + 0x38]
  4895: 7b 67 18                 u64 [s1 + 0x18] = a0
  4898: 82 18 40                 a1 = u64 [sp + 0x40]
  4901: 7b 68 20                 u64 [s1 + 0x20] = a1
  4904: 95 17 ff 07              a0 = sp + 0x7ff
  4908: 95 77 11 04              a0 = a0 + 0x411
  4912: 7b 67 28                 u64 [s1 + 0x28] = a0
  4915: 7b 68 30                 u64 [s1 + 0x30] = a1
  4918: 33 07 e8 07 01           a0 = 0x107e8
  4923: 7b 17 98 01              u64 [sp + 0x198] = a0
  4927: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4932: 49 21 b8 01              u64 [sp + 440] = 0
  4936: 95 17 ff 07              a0 = sp + 0x7ff
  4940: 95 77 b1 03              a0 = a0 + 0x3b1
  4944: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4948: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4953: 95 17 ff 07              a0 = sp + 0x7ff
  4957: 95 77 e1 03              a0 = a0 + 0x3e1
  4961: 95 18 98 01              a1 = sp + 0x198
  4965: 50 10 6e 85 18           ra = 110, jump @636
      :                          @279 [@dyn 55]
  4970: 82 65 50                 s0 = u64 [s1 + 0x50]
  4973: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4976: 95 17 ff 07              a0 = sp + 0x7ff
  4980: 95 77 99 03              a0 = a0 + 0x399
  4984: 82 76 48                 s1 = u64 [a0 + 0x48]
  4987: 33 07 02                 a0 = 0x2
  4990: 33 08                    a1 = 0
  4992: 33 09                    a2 = 0
  4994: 64 5a                    a3 = s0
  4996: 33 00 70                 ra = 0x70
  4999: 0a 64                    ecalli 100 // 'log'
  5001: 01                       fallthrough
      :                          @280 [@dyn 56]
  5002: 82 17 48                 a0 = u64 [sp + 0x48]
  5005: c8 67 07                 a0 = a0 + s1
  5008: 53 27 00 f0 23           jump @286 if a0 <u 4294963200
      :                          @281
  5013: 33 07 20 00 03           a0 = 0x30020
  5018: 95 77 00 10              a0 = a0 + 0x1000
  5022: 01                       fallthrough
      :                          @282
  5023: 82 78                    a1 = u64 [a0]
  5025: c9 87 09                 a2 = a0 - a1
  5028: ab 59 0f                 jump @286 if a2 != s0
      :                          @283
  5031: c9 68 09                 a2 = a1 - s1
  5034: 01                       fallthrough
      :                          @284
  5035: 82 7a                    a3 = u64 [a0]
  5037: ab 8a f2                 jump @282 if a3 != a1
      :                          @285
  5040: 7b 79                    u64 [a0] = a2
  5042: 01                       fallthrough
      :                          @286
  5043: 95 16 ff 07              s1 = sp + 0x7ff
  5047: 95 66 99 03              s1 = s1 + 0x399
  5051: 82 67 78                 a0 = u64 [s1 + 0x78]
  5054: 33 08 01                 a1 = 0x1
  5057: 50 10 72 24 28           ra = 114, jump @970
      :                          @287 [@dyn 57]
  5062: 95 17 52                 a0 = sp + 0x52
  5065: 33 08 03                 a1 = 0x3
  5068: 33 09                    a2 = 0
  5070: 33 0a                    a3 = 0
  5072: 0a 03                    ecalli 3 // 'write'
  5074: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5078: 95 17 ff 07              a0 = sp + 0x7ff
  5082: 95 77 19 04              a0 = a0 + 0x419
  5086: 7b 67 28                 u64 [s1 + 0x28] = a0
  5089: 33 07 18 08 01           a0 = 0x10818
  5094: 7b 17 98 01              u64 [sp + 0x198] = a0
  5098: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5103: 49 21 b8 01              u64 [sp + 440] = 0
  5107: 95 17 ff 07              a0 = sp + 0x7ff
  5111: 95 77 b1 03              a0 = a0 + 0x3b1
  5115: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5119: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5124: 82 17 38                 a0 = u64 [sp + 0x38]
  5127: 7b 67 18                 u64 [s1 + 0x18] = a0
  5130: 82 17 40                 a0 = u64 [sp + 0x40]
  5133: 7b 67 20                 u64 [s1 + 0x20] = a0
  5136: 7b 67 30                 u64 [s1 + 0x30] = a0
  5139: 95 17 ff 07              a0 = sp + 0x7ff
  5143: 95 77 e1 03              a0 = a0 + 0x3e1
  5147: 95 18 98 01              a1 = sp + 0x198
  5151: 50 10 74 cb 17           ra = 116, jump @636
      :                          @288 [@dyn 58]
  5156: 82 65 50                 s0 = u64 [s1 + 0x50]
  5159: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5162: 82 66 48                 s1 = u64 [s1 + 0x48]
  5165: 33 07 02                 a0 = 0x2
  5168: 33 08                    a1 = 0
  5170: 33 09                    a2 = 0
  5172: 64 5a                    a3 = s0
  5174: 33 00 76                 ra = 0x76
  5177: 0a 64                    ecalli 100 // 'log'
  5179: 01                       fallthrough
      :                          @289 [@dyn 59]
  5180: 82 17 48                 a0 = u64 [sp + 0x48]
  5183: c8 67 07                 a0 = a0 + s1
  5186: 53 27 00 f0 23           jump @295 if a0 <u 4294963200
      :                          @290
  5191: 33 07 20 00 03           a0 = 0x30020
  5196: 95 77 00 10              a0 = a0 + 0x1000
  5200: 01                       fallthrough
      :                          @291
  5201: 82 78                    a1 = u64 [a0]
  5203: c9 87 09                 a2 = a0 - a1
  5206: ab 59 0f                 jump @295 if a2 != s0
      :                          @292
  5209: c9 68 09                 a2 = a1 - s1
  5212: 01                       fallthrough
      :                          @293
  5213: 82 7a                    a3 = u64 [a0]
  5215: ab 8a f2                 jump @291 if a3 != a1
      :                          @294
  5218: 7b 79                    u64 [a0] = a2
  5220: 01                       fallthrough
      :                          @295
  5221: 95 16 ff 07              s1 = sp + 0x7ff
  5225: 95 66 99 03              s1 = s1 + 0x399
  5229: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5233: 33 08 02                 a1 = 0x2
  5236: 33 05 02                 s0 = 0x2
  5239: 50 10 78 6e 27           ra = 120, jump @970
      :                          @296 [@dyn 60]
  5244: 95 18 52                 a1 = sp + 0x52
  5247: 33 09 03                 a2 = 0x3
  5250: 95 1a 98 00              a3 = sp + 0x98
  5254: 33 0c 00 01              a5 = 0x100
  5258: 82 17 30                 a0 = u64 [sp + 0x30]
  5261: 33 0b                    a4 = 0
  5263: 0a 02                    ecalli 2 // 'read'
  5265: 7b 67                    u64 [s1] = a0
  5267: 33 07 40 00 01           a0 = 0x10040
  5272: 7b 67 18                 u64 [s1 + 0x18] = a0
  5275: 33 07 48 08 01           a0 = 0x10848
  5280: 7b 17 98 01              u64 [sp + 0x198] = a0
  5284: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5289: 49 21 b8 01              u64 [sp + 440] = 0
  5293: 95 17 ff 07              a0 = sp + 0x7ff
  5297: 95 77 b1 03              a0 = a0 + 0x3b1
  5301: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5305: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5309: 82 17 40                 a0 = u64 [sp + 0x40]
  5312: 7b 67 20                 u64 [s1 + 0x20] = a0
  5315: 7b 66 28                 u64 [s1 + 0x28] = s1
  5318: 7b 67 30                 u64 [s1 + 0x30] = a0
  5321: 95 17 ff 07              a0 = sp + 0x7ff
  5325: 95 77 e1 03              a0 = a0 + 0x3e1
  5329: 95 18 98 01              a1 = sp + 0x198
  5333: 50 10 7a 15 17           ra = 122, jump @636
      :                          @297 [@dyn 61]
  5338: 82 65 50                 s0 = u64 [s1 + 0x50]
  5341: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5344: 82 66 48                 s1 = u64 [s1 + 0x48]
  5347: 33 07 02                 a0 = 0x2
  5350: 33 08                    a1 = 0
  5352: 33 09                    a2 = 0
  5354: 64 5a                    a3 = s0
  5356: 33 00 7c                 ra = 0x7c
  5359: 0a 64                    ecalli 100 // 'log'
  5361: 01                       fallthrough
      :                          @298 [@dyn 62]
  5362: 82 17 48                 a0 = u64 [sp + 0x48]
  5365: c8 67 07                 a0 = a0 + s1
  5368: 53 27 00 f0 30 02        jump @332 if a0 <u 4294963200
      :                          @299
  5374: 33 07 20 00 03           a0 = 0x30020
  5379: 95 77 00 10              a0 = a0 + 0x1000
  5383: 01                       fallthrough
      :                          @300
  5384: 82 78                    a1 = u64 [a0]
  5386: c9 87 09                 a2 = a0 - a1
  5389: ab 59 1b 02              jump @332 if a2 != s0
      :                          @301
  5393: c9 68 09                 a2 = a1 - s1
  5396: 01                       fallthrough
      :                          @302
  5397: 82 7a                    a3 = u64 [a0]
  5399: ab 8a f1                 jump @300 if a3 != a1
      :                          @303
  5402: 7b 79                    u64 [a0] = a2
  5404: 33 0b                    a4 = 0
  5406: 01                       fallthrough
      :                          @304
  5407: ab 8a e9                 jump @300 if a3 != a1
      :                          @305
  5410: 28 06 02                 jump @332
      :                          @306 [@dyn 63]
  5413: 33 05 03                 s0 = 0x3
  5416: 95 17 58                 a0 = sp + 0x58
  5419: 33 08 03                 a1 = 0x3
  5422: 0a 0e                    ecalli 14 // 'solicit'
  5424: 7b 67 78                 u64 [s1 + 0x78] = a0
  5427: 82 17 38                 a0 = u64 [sp + 0x38]
  5430: 7b 67 18                 u64 [s1 + 0x18] = a0
  5433: 82 18 40                 a1 = u64 [sp + 0x40]
  5436: 7b 68 20                 u64 [s1 + 0x20] = a1
  5439: 95 17 ff 07              a0 = sp + 0x7ff
  5443: 95 77 11 04              a0 = a0 + 0x411
  5447: 7b 67 28                 u64 [s1 + 0x28] = a0
  5450: 7b 68 30                 u64 [s1 + 0x30] = a1
  5453: 33 07 78 08 01           a0 = 0x10878
  5458: 7b 17 98 01              u64 [sp + 0x198] = a0
  5462: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  5466: 49 21 b8 01              u64 [sp + 440] = 0
  5470: 95 17 ff 07              a0 = sp + 0x7ff
  5474: 95 77 b1 03              a0 = a0 + 0x3b1
  5478: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5482: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5487: 95 17 ff 07              a0 = sp + 0x7ff
  5491: 95 77 e1 03              a0 = a0 + 0x3e1
  5495: 95 18 98 01              a1 = sp + 0x198
  5499: 50 20 80 00 6f 16        ra = 128, jump @636
      :                          @307 [@dyn 64]
  5505: 82 65 50                 s0 = u64 [s1 + 0x50]
  5508: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5511: 95 17 ff 07              a0 = sp + 0x7ff
  5515: 95 77 99 03              a0 = a0 + 0x399
  5519: 82 76 48                 s1 = u64 [a0 + 0x48]
  5522: 33 07 02                 a0 = 0x2
  5525: 33 08                    a1 = 0
  5527: 33 09                    a2 = 0
  5529: 64 5a                    a3 = s0
  5531: 33 00 82 00              ra = 0x82
  5535: 0a 64                    ecalli 100 // 'log'
  5537: 01                       fallthrough
      :                          @308 [@dyn 65]
  5538: 82 17 48                 a0 = u64 [sp + 0x48]
  5541: c8 67 07                 a0 = a0 + s1
  5544: 53 27 00 f0 23           jump @314 if a0 <u 4294963200
      :                          @309
  5549: 33 07 20 00 03           a0 = 0x30020
  5554: 95 77 00 10              a0 = a0 + 0x1000
  5558: 01                       fallthrough
      :                          @310
  5559: 82 78                    a1 = u64 [a0]
  5561: c9 87 09                 a2 = a0 - a1
  5564: ab 59 0f                 jump @314 if a2 != s0
      :                          @311
  5567: c9 68 09                 a2 = a1 - s1
  5570: 01                       fallthrough
      :                          @312
  5571: 82 7a                    a3 = u64 [a0]
  5573: ab 8a f2                 jump @310 if a3 != a1
      :                          @313
  5576: 7b 79                    u64 [a0] = a2
  5578: 01                       fallthrough
      :                          @314
  5579: 95 16 ff 07              s1 = sp + 0x7ff
  5583: 95 66 99 03              s1 = s1 + 0x399
  5587: 82 67 78                 a0 = u64 [s1 + 0x78]
  5590: 33 08 01                 a1 = 0x1
  5593: 50 20 84 00 0c 26        ra = 132, jump @970
      :                          @315 [@dyn 66]
  5599: 95 17 58                 a0 = sp + 0x58
  5602: 33 08 03                 a1 = 0x3
  5605: 0a 0d                    ecalli 13 // 'query'
  5607: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5611: 95 17 ff 07              a0 = sp + 0x7ff
  5615: 95 77 19 04              a0 = a0 + 0x419
  5619: 7b 67 28                 u64 [s1 + 0x28] = a0
  5622: 33 07 a8 08 01           a0 = 0x108a8
  5627: 7b 17 98 01              u64 [sp + 0x198] = a0
  5631: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5636: 49 21 b8 01              u64 [sp + 440] = 0
  5640: 95 17 ff 07              a0 = sp + 0x7ff
  5644: 95 77 b1 03              a0 = a0 + 0x3b1
  5648: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5652: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5657: 82 17 38                 a0 = u64 [sp + 0x38]
  5660: 7b 67 18                 u64 [s1 + 0x18] = a0
  5663: 82 17 40                 a0 = u64 [sp + 0x40]
  5666: 7b 67 20                 u64 [s1 + 0x20] = a0
  5669: 7b 67 30                 u64 [s1 + 0x30] = a0
  5672: 95 17 ff 07              a0 = sp + 0x7ff
  5676: 95 77 e1 03              a0 = a0 + 0x3e1
  5680: 95 18 98 01              a1 = sp + 0x198
  5684: 50 20 86 00 b6 15        ra = 134, jump @636
      :                          @316 [@dyn 67]
  5690: 82 65 50                 s0 = u64 [s1 + 0x50]
  5693: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5696: 82 66 48                 s1 = u64 [s1 + 0x48]
  5699: 33 07 02                 a0 = 0x2
  5702: 33 08                    a1 = 0
  5704: 33 09                    a2 = 0
  5706: 64 5a                    a3 = s0
  5708: 33 00 88 00              ra = 0x88
  5712: 0a 64                    ecalli 100 // 'log'
  5714: 01                       fallthrough
      :                          @317 [@dyn 68]
  5715: 82 17 48                 a0 = u64 [sp + 0x48]
  5718: c8 67 07                 a0 = a0 + s1
  5721: 53 27 00 f0 23           jump @323 if a0 <u 4294963200
      :                          @318
  5726: 33 07 20 00 03           a0 = 0x30020
  5731: 95 77 00 10              a0 = a0 + 0x1000
  5735: 01                       fallthrough
      :                          @319
  5736: 82 78                    a1 = u64 [a0]
  5738: c9 87 09                 a2 = a0 - a1
  5741: ab 59 0f                 jump @323 if a2 != s0
      :                          @320
  5744: c9 68 09                 a2 = a1 - s1
  5747: 01                       fallthrough
      :                          @321
  5748: 82 7a                    a3 = u64 [a0]
  5750: ab 8a f2                 jump @319 if a3 != a1
      :                          @322
  5753: 7b 79                    u64 [a0] = a2
  5755: 01                       fallthrough
      :                          @323
  5756: 95 16 ff 07              s1 = sp + 0x7ff
  5760: 95 66 99 03              s1 = s1 + 0x399
  5764: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5768: 33 08 02                 a1 = 0x2
  5771: 33 05 02                 s0 = 0x2
  5774: 50 20 8a 00 57 25        ra = 138, jump @970
      :                          @324 [@dyn 69]
  5780: 95 17 78                 a0 = sp + 0x78
  5783: 33 08 03                 a1 = 0x3
  5786: 0a 0d                    ecalli 13 // 'query'
  5788: 7b 67                    u64 [s1] = a0
  5790: 33 07 40 00 01           a0 = 0x10040
  5795: 7b 67 18                 u64 [s1 + 0x18] = a0
  5798: 33 07 d8 08 01           a0 = 0x108d8
  5803: 7b 17 98 01              u64 [sp + 0x198] = a0
  5807: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5812: 49 21 b8 01              u64 [sp + 440] = 0
  5816: 95 17 ff 07              a0 = sp + 0x7ff
  5820: 95 77 b1 03              a0 = a0 + 0x3b1
  5824: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5828: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5832: 82 17 40                 a0 = u64 [sp + 0x40]
  5835: 7b 67 20                 u64 [s1 + 0x20] = a0
  5838: 7b 66 28                 u64 [s1 + 0x28] = s1
  5841: 7b 67 30                 u64 [s1 + 0x30] = a0
  5844: 95 17 ff 07              a0 = sp + 0x7ff
  5848: 95 77 e1 03              a0 = a0 + 0x3e1
  5852: 95 18 98 01              a1 = sp + 0x198
  5856: 50 20 8c 00 0a 15        ra = 140, jump @636
      :                          @325 [@dyn 70]
  5862: 82 65 50                 s0 = u64 [s1 + 0x50]
  5865: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5868: 82 66 48                 s1 = u64 [s1 + 0x48]
  5871: 33 07 02                 a0 = 0x2
  5874: 33 08                    a1 = 0
  5876: 33 09                    a2 = 0
  5878: 64 5a                    a3 = s0
  5880: 33 00 8e 00              ra = 0x8e
  5884: 0a 64                    ecalli 100 // 'log'
  5886: 01                       fallthrough
      :                          @326 [@dyn 71]
  5887: 82 17 48                 a0 = u64 [sp + 0x48]
  5890: c8 67 07                 a0 = a0 + s1
  5893: 53 27 00 f0 23           jump @332 if a0 <u 4294963200
      :                          @327
  5898: 33 07 20 00 03           a0 = 0x30020
  5903: 95 77 00 10              a0 = a0 + 0x1000
  5907: 01                       fallthrough
      :                          @328
  5908: 82 78                    a1 = u64 [a0]
  5910: c9 87 09                 a2 = a0 - a1
  5913: ab 59 0f                 jump @332 if a2 != s0
      :                          @329
  5916: c9 68 09                 a2 = a1 - s1
  5919: 01                       fallthrough
      :                          @330
  5920: 82 7a                    a3 = u64 [a0]
  5922: ab 8a f2                 jump @328 if a3 != a1
      :                          @331
  5925: 7b 79                    u64 [a0] = a2
  5927: 01                       fallthrough
      :                          @332
  5928: 95 16 ff 07              s1 = sp + 0x7ff
  5932: 95 66 99 03              s1 = s1 + 0x399
  5936: 82 67                    a0 = u64 [s1]
  5938: 33 08 05                 a1 = 0x5
  5941: 33 00 1e 01              ra = 0x11e
  5945: 28 ac 24                 jump @970
      :                          @333 [@dyn 72]
  5948: 33 05 03                 s0 = 0x3
  5951: 95 17 58                 a0 = sp + 0x58
  5954: 33 08 03                 a1 = 0x3
  5957: 0a 0f                    ecalli 15 // 'forget'
  5959: 7b 67 78                 u64 [s1 + 0x78] = a0
  5962: 82 17 38                 a0 = u64 [sp + 0x38]
  5965: 7b 67 18                 u64 [s1 + 0x18] = a0
  5968: 82 17 40                 a0 = u64 [sp + 0x40]
  5971: 7b 67 20                 u64 [s1 + 0x20] = a0
  5974: 95 18 ff 07              a1 = sp + 0x7ff
  5978: 95 88 11 04              a1 = a1 + 0x411
  5982: 7b 68 28                 u64 [s1 + 0x28] = a1
  5985: 7b 67 30                 u64 [s1 + 0x30] = a0
  5988: 33 07 08 09 01           a0 = 0x10908
  5993: 7b 17 98 01              u64 [sp + 0x198] = a0
  5997: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  6001: 49 21 b8 01              u64 [sp + 440] = 0
  6005: 95 17 ff 07              a0 = sp + 0x7ff
  6009: 95 77 b1 03              a0 = a0 + 0x3b1
  6013: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6017: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6022: 95 17 ff 07              a0 = sp + 0x7ff
  6026: 95 77 e1 03              a0 = a0 + 0x3e1
  6030: 95 18 98 01              a1 = sp + 0x198
  6034: 50 20 92 00 58 14        ra = 146, jump @636
      :                          @334 [@dyn 73]
  6040: 82 65 50                 s0 = u64 [s1 + 0x50]
  6043: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6046: 95 17 ff 07              a0 = sp + 0x7ff
  6050: 95 77 99 03              a0 = a0 + 0x399
  6054: 82 76 48                 s1 = u64 [a0 + 0x48]
  6057: 33 07 02                 a0 = 0x2
  6060: 33 08                    a1 = 0
  6062: 33 09                    a2 = 0
  6064: 64 5a                    a3 = s0
  6066: 33 00 94 00              ra = 0x94
  6070: 0a 64                    ecalli 100 // 'log'
  6072: 01                       fallthrough
      :                          @335 [@dyn 74]
  6073: 82 17 48                 a0 = u64 [sp + 0x48]
  6076: c8 67 07                 a0 = a0 + s1
  6079: 53 27 00 f0 23           jump @341 if a0 <u 4294963200
      :                          @336
  6084: 33 07 20 00 03           a0 = 0x30020
  6089: 95 77 00 10              a0 = a0 + 0x1000
  6093: 01                       fallthrough
      :                          @337
  6094: 82 78                    a1 = u64 [a0]
  6096: c9 87 09                 a2 = a0 - a1
  6099: ab 59 0f                 jump @341 if a2 != s0
      :                          @338
  6102: c9 68 09                 a2 = a1 - s1
  6105: 01                       fallthrough
      :                          @339
  6106: 82 7a                    a3 = u64 [a0]
  6108: ab 8a f2                 jump @337 if a3 != a1
      :                          @340
  6111: 7b 79                    u64 [a0] = a2
  6113: 01                       fallthrough
      :                          @341
  6114: 95 15 ff 07              s0 = sp + 0x7ff
  6118: 95 55 99 03              s0 = s0 + 0x399
  6122: 82 57 78                 a0 = u64 [s0 + 0x78]
  6125: 33 08 01                 a1 = 0x1
  6128: 50 20 96 00 f5 23        ra = 150, jump @970
      :                          @342 [@dyn 75]
  6134: 95 17 58                 a0 = sp + 0x58
  6137: 33 08 03                 a1 = 0x3
  6140: 0a 0d                    ecalli 13 // 'query'
  6142: 7b 17 10                 u64 [sp + 0x10] = a0
  6145: 95 17 ff 07              a0 = sp + 0x7ff
  6149: 95 77 11 04              a0 = a0 + 0x411
  6153: 7b 57 28                 u64 [s0 + 0x28] = a0
  6156: 33 07 38 09 01           a0 = 0x10938
  6161: 7b 17 98 01              u64 [sp + 0x198] = a0
  6165: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6170: 49 21 b8 01              u64 [sp + 440] = 0
  6174: 95 17 ff 07              a0 = sp + 0x7ff
  6178: 95 77 b1 03              a0 = a0 + 0x3b1
  6182: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6186: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6191: 82 17 38                 a0 = u64 [sp + 0x38]
  6194: 7b 57 18                 u64 [s0 + 0x18] = a0
  6197: 82 17 40                 a0 = u64 [sp + 0x40]
  6200: 7b 57 20                 u64 [s0 + 0x20] = a0
  6203: 7b 57 30                 u64 [s0 + 0x30] = a0
  6206: 95 17 ff 07              a0 = sp + 0x7ff
  6210: 95 77 e1 03              a0 = a0 + 0x3e1
  6214: 95 18 98 01              a1 = sp + 0x198
  6218: 50 20 98 00 a0 13        ra = 152, jump @636
      :                          @343 [@dyn 76]
  6224: 82 56 50                 s1 = u64 [s0 + 0x50]
  6227: 82 5b 58                 a4 = u64 [s0 + 0x58]
  6230: 82 55 48                 s0 = u64 [s0 + 0x48]
  6233: 33 07 02                 a0 = 0x2
  6236: 33 08                    a1 = 0
  6238: 33 09                    a2 = 0
  6240: 64 6a                    a3 = s1
  6242: 33 00 9a 00              ra = 0x9a
  6246: 0a 64                    ecalli 100 // 'log'
  6248: 01                       fallthrough
      :                          @344 [@dyn 77]
  6249: 82 17 48                 a0 = u64 [sp + 0x48]
  6252: c8 57 07                 a0 = a0 + s0
  6255: 53 27 00 f0 23           jump @350 if a0 <u 4294963200
      :                          @345
  6260: 33 07 20 00 03           a0 = 0x30020
  6265: 95 77 00 10              a0 = a0 + 0x1000
  6269: 01                       fallthrough
      :                          @346
  6270: 82 78                    a1 = u64 [a0]
  6272: c9 87 09                 a2 = a0 - a1
  6275: ab 69 0f                 jump @350 if a2 != s1
      :                          @347
  6278: c9 58 09                 a2 = a1 - s0
  6281: 01                       fallthrough
      :                          @348
  6282: 82 7a                    a3 = u64 [a0]
  6284: ab 8a f2                 jump @346 if a3 != a1
      :                          @349
  6287: 7b 79                    u64 [a0] = a2
  6289: 01                       fallthrough
      :                          @350
  6290: 33 08 02                 a1 = 0x2
  6293: 33 05 02                 s0 = 0x2
  6296: 82 17 10                 a0 = u64 [sp + 0x10]
  6299: 50 20 9c 00 4a 23        ra = 156, jump @970
      :                          @351 [@dyn 78]
  6305: 95 18 78                 a1 = sp + 0x78
  6308: 95 19 98 00              a2 = sp + 0x98
  6312: 33 0b 03                 a4 = 0x3
  6315: 82 17 30                 a0 = u64 [sp + 0x30]
  6318: 33 0a                    a3 = 0
  6320: 0a 01                    ecalli 1 // 'lookup'
  6322: 95 16 ff 07              s1 = sp + 0x7ff
  6326: 95 66 99 03              s1 = s1 + 0x399
  6330: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6334: 33 07 40 00 01           a0 = 0x10040
  6339: 7b 67 18                 u64 [s1 + 0x18] = a0
  6342: 82 18 40                 a1 = u64 [sp + 0x40]
  6345: 7b 68 20                 u64 [s1 + 0x20] = a1
  6348: 95 17 ff 07              a0 = sp + 0x7ff
  6352: 95 77 19 04              a0 = a0 + 0x419
  6356: 7b 67 28                 u64 [s1 + 0x28] = a0
  6359: 7b 68 30                 u64 [s1 + 0x30] = a1
  6362: 33 07 68 09 01           a0 = 0x10968
  6367: 7b 17 98 01              u64 [sp + 0x198] = a0
  6371: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6376: 49 21 b8 01              u64 [sp + 440] = 0
  6380: 95 17 ff 07              a0 = sp + 0x7ff
  6384: 95 77 b1 03              a0 = a0 + 0x3b1
  6388: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6392: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6396: 95 17 ff 07              a0 = sp + 0x7ff
  6400: 95 77 e1 03              a0 = a0 + 0x3e1
  6404: 95 18 98 01              a1 = sp + 0x198
  6408: 50 20 9e 00 e2 12        ra = 158, jump @636
      :                          @352 [@dyn 79]
  6414: 82 65 50                 s0 = u64 [s1 + 0x50]
  6417: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6420: 82 66 48                 s1 = u64 [s1 + 0x48]
  6423: 33 07 02                 a0 = 0x2
  6426: 33 08                    a1 = 0
  6428: 33 09                    a2 = 0
  6430: 64 5a                    a3 = s0
  6432: 33 00 a0 00              ra = 0xa0
  6436: 0a 64                    ecalli 100 // 'log'
  6438: 01                       fallthrough
      :                          @353 [@dyn 80]
  6439: 82 17 48                 a0 = u64 [sp + 0x48]
  6442: c8 67 07                 a0 = a0 + s1
  6445: 53 27 00 f0 23           jump @359 if a0 <u 4294963200
      :                          @354
  6450: 33 07 20 00 03           a0 = 0x30020
  6455: 95 77 00 10              a0 = a0 + 0x1000
  6459: 01                       fallthrough
      :                          @355
  6460: 82 78                    a1 = u64 [a0]
  6462: c9 87 09                 a2 = a0 - a1
  6465: ab 59 0f                 jump @359 if a2 != s0
      :                          @356
  6468: c9 68 09                 a2 = a1 - s1
  6471: 01                       fallthrough
      :                          @357
  6472: 82 7a                    a3 = u64 [a0]
  6474: ab 8a f2                 jump @355 if a3 != a1
      :                          @358
  6477: 7b 79                    u64 [a0] = a2
  6479: 01                       fallthrough
      :                          @359
  6480: 95 16 ff 07              s1 = sp + 0x7ff
  6484: 95 66 99 03              s1 = s1 + 0x399
  6488: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6492: 33 08 05                 a1 = 0x5
  6495: 50 20 a2 00 86 22        ra = 162, jump @970
      :                          @360 [@dyn 81]
  6501: 33 07 e8 03              a0 = 0x3e8
  6505: 95 18 52                 a1 = sp + 0x52
  6508: 0a 06                    ecalli 6 // 'assign'
  6510: 7b 67                    u64 [s1] = a0
  6512: 33 07 30 00 01           a0 = 0x10030
  6517: 7b 67 18                 u64 [s1 + 0x18] = a0
  6520: 33 07 98 09 01           a0 = 0x10998
  6525: 7b 17 98 01              u64 [sp + 0x198] = a0
  6529: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6534: 49 21 b8 01              u64 [sp + 440] = 0
  6538: 95 17 ff 07              a0 = sp + 0x7ff
  6542: 95 77 b1 03              a0 = a0 + 0x3b1
  6546: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6550: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6555: 82 17 40                 a0 = u64 [sp + 0x40]
  6558: 7b 67 20                 u64 [s1 + 0x20] = a0
  6561: 7b 66 28                 u64 [s1 + 0x28] = s1
  6564: 7b 67 30                 u64 [s1 + 0x30] = a0
  6567: 95 17 ff 07              a0 = sp + 0x7ff
  6571: 95 77 e1 03              a0 = a0 + 0x3e1
  6575: 95 18 98 01              a1 = sp + 0x198
  6579: 50 20 a4 00 37 12        ra = 164, jump @636
      :                          @361 [@dyn 82]
  6585: 82 65 50                 s0 = u64 [s1 + 0x50]
  6588: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6591: 82 66 48                 s1 = u64 [s1 + 0x48]
  6594: 33 07 02                 a0 = 0x2
  6597: 33 08                    a1 = 0
  6599: 33 09                    a2 = 0
  6601: 64 5a                    a3 = s0
  6603: 33 00 a6 00              ra = 0xa6
  6607: 0a 64                    ecalli 100 // 'log'
  6609: 01                       fallthrough
      :                          @362 [@dyn 83]
  6610: 82 17 48                 a0 = u64 [sp + 0x48]
  6613: c8 67 07                 a0 = a0 + s1
  6616: 53 27 00 f0 f7 02        jump @405 if a0 <u 4294963200
      :                          @363
  6622: 33 07 20 00 03           a0 = 0x30020
  6627: 95 77 00 10              a0 = a0 + 0x1000
  6631: 01                       fallthrough
      :                          @364
  6632: 82 78                    a1 = u64 [a0]
  6634: c9 87 09                 a2 = a0 - a1
  6637: ab 59 e2 02              jump @405 if a2 != s0
      :                          @365
  6641: c9 68 09                 a2 = a1 - s1
  6644: 01                       fallthrough
      :                          @366
  6645: 82 7a                    a3 = u64 [a0]
  6647: ab 8a f1                 jump @364 if a3 != a1
      :                          @367
  6650: 7b 79                    u64 [a0] = a2
  6652: 33 0b                    a4 = 0
  6654: 01                       fallthrough
      :                          @368
  6655: ab 8a e9                 jump @364 if a3 != a1
      :                          @369
  6658: 28 cd 02                 jump @405
      :                          @370 [@dyn 84]
  6661: 95 18 58                 a1 = sp + 0x58
  6664: 95 19 98 00              a2 = sp + 0x98
  6668: 33 0b 03                 a4 = 0x3
  6671: 82 17 30                 a0 = u64 [sp + 0x30]
  6674: 33 0a                    a3 = 0
  6676: 0a 01                    ecalli 1 // 'lookup'
  6678: 7b 67 70                 u64 [s1 + 0x70] = a0
  6681: 82 17 38                 a0 = u64 [sp + 0x38]
  6684: 7b 67 18                 u64 [s1 + 0x18] = a0
  6687: 82 18 40                 a1 = u64 [sp + 0x40]
  6690: 7b 68 20                 u64 [s1 + 0x20] = a1
  6693: 95 17 ff 07              a0 = sp + 0x7ff
  6697: 95 77 09 04              a0 = a0 + 0x409
  6701: 7b 67 28                 u64 [s1 + 0x28] = a0
  6704: 7b 68 30                 u64 [s1 + 0x30] = a1
  6707: 33 07 c8 09 01           a0 = 0x109c8
  6712: 7b 17 98 01              u64 [sp + 0x198] = a0
  6716: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6721: 49 21 b8 01              u64 [sp + 440] = 0
  6725: 95 17 ff 07              a0 = sp + 0x7ff
  6729: 95 77 b1 03              a0 = a0 + 0x3b1
  6733: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6737: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6742: 95 17 ff 07              a0 = sp + 0x7ff
  6746: 95 77 e1 03              a0 = a0 + 0x3e1
  6750: 95 18 98 01              a1 = sp + 0x198
  6754: 50 20 aa 00 88 11        ra = 170, jump @636
      :                          @371 [@dyn 85]
  6760: 82 65 50                 s0 = u64 [s1 + 0x50]
  6763: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6766: 95 17 ff 07              a0 = sp + 0x7ff
  6770: 95 77 99 03              a0 = a0 + 0x399
  6774: 82 76 48                 s1 = u64 [a0 + 0x48]
  6777: 33 07 02                 a0 = 0x2
  6780: 33 08                    a1 = 0
  6782: 33 09                    a2 = 0
  6784: 64 5a                    a3 = s0
  6786: 33 00 ac 00              ra = 0xac
  6790: 0a 64                    ecalli 100 // 'log'
  6792: 01                       fallthrough
      :                          @372 [@dyn 86]
  6793: 82 17 48                 a0 = u64 [sp + 0x48]
  6796: c8 67 07                 a0 = a0 + s1
  6799: 53 27 00 f0 23           jump @378 if a0 <u 4294963200
      :                          @373
  6804: 33 07 20 00 03           a0 = 0x30020
  6809: 95 77 00 10              a0 = a0 + 0x1000
  6813: 01                       fallthrough
      :                          @374
  6814: 82 78                    a1 = u64 [a0]
  6816: c9 87 09                 a2 = a0 - a1
  6819: ab 59 0f                 jump @378 if a2 != s0
      :                          @375
  6822: c9 68 09                 a2 = a1 - s1
  6825: 01                       fallthrough
      :                          @376
  6826: 82 7a                    a3 = u64 [a0]
  6828: ab 8a f2                 jump @374 if a3 != a1
      :                          @377
  6831: 7b 79                    u64 [a0] = a2
  6833: 01                       fallthrough
      :                          @378
  6834: 95 16 ff 07              s1 = sp + 0x7ff
  6838: 95 66 99 03              s1 = s1 + 0x399
  6842: 82 67 70                 a0 = u64 [s1 + 0x70]
  6845: 33 08 01                 a1 = 0x1
  6848: 50 20 ae 00 25 21        ra = 174, jump @970
      :                          @379 [@dyn 87]
  6854: 95 17 58                 a0 = sp + 0x58
  6857: 33 08 03                 a1 = 0x3
  6860: 0a 0d                    ecalli 13 // 'query'
  6862: 7b 67 78                 u64 [s1 + 0x78] = a0
  6865: 95 17 ff 07              a0 = sp + 0x7ff
  6869: 95 77 11 04              a0 = a0 + 0x411
  6873: 7b 67 28                 u64 [s1 + 0x28] = a0
  6876: 33 07 a8 08 01           a0 = 0x108a8
  6881: 7b 17 98 01              u64 [sp + 0x198] = a0
  6885: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6890: 49 21 b8 01              u64 [sp + 440] = 0
  6894: 95 17 ff 07              a0 = sp + 0x7ff
  6898: 95 77 b1 03              a0 = a0 + 0x3b1
  6902: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6906: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6911: 82 17 38                 a0 = u64 [sp + 0x38]
  6914: 7b 67 18                 u64 [s1 + 0x18] = a0
  6917: 82 17 40                 a0 = u64 [sp + 0x40]
  6920: 7b 67 20                 u64 [s1 + 0x20] = a0
  6923: 7b 67 30                 u64 [s1 + 0x30] = a0
  6926: 95 17 ff 07              a0 = sp + 0x7ff
  6930: 95 77 e1 03              a0 = a0 + 0x3e1
  6934: 95 18 98 01              a1 = sp + 0x198
  6938: 50 20 b0 00 d0 10        ra = 176, jump @636
      :                          @380 [@dyn 88]
  6944: 82 65 50                 s0 = u64 [s1 + 0x50]
  6947: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6950: 82 66 48                 s1 = u64 [s1 + 0x48]
  6953: 33 07 02                 a0 = 0x2
  6956: 33 08                    a1 = 0
  6958: 33 09                    a2 = 0
  6960: 64 5a                    a3 = s0
  6962: 33 00 b2 00              ra = 0xb2
  6966: 0a 64                    ecalli 100 // 'log'
  6968: 01                       fallthrough
      :                          @381 [@dyn 89]
  6969: 82 17 48                 a0 = u64 [sp + 0x48]
  6972: c8 67 07                 a0 = a0 + s1
  6975: 53 27 00 f0 23           jump @387 if a0 <u 4294963200
      :                          @382
  6980: 33 07 20 00 03           a0 = 0x30020
  6985: 95 77 00 10              a0 = a0 + 0x1000
  6989: 01                       fallthrough
      :                          @383
  6990: 82 78                    a1 = u64 [a0]
  6992: c9 87 09                 a2 = a0 - a1
  6995: ab 59 0f                 jump @387 if a2 != s0
      :                          @384
  6998: c9 68 09                 a2 = a1 - s1
  7001: 01                       fallthrough
      :                          @385
  7002: 82 7a                    a3 = u64 [a0]
  7004: ab 8a f2                 jump @383 if a3 != a1
      :                          @386
  7007: 7b 79                    u64 [a0] = a2
  7009: 01                       fallthrough
      :                          @387
  7010: 95 16 ff 07              s1 = sp + 0x7ff
  7014: 95 66 99 03              s1 = s1 + 0x399
  7018: 82 67 78                 a0 = u64 [s1 + 0x78]
  7021: 33 08 02                 a1 = 0x2
  7024: 33 05 02                 s0 = 0x2
  7027: 50 20 b4 00 72 20        ra = 180, jump @970
      :                          @388 [@dyn 90]
  7033: 95 18 58                 a1 = sp + 0x58
  7036: 82 17 30                 a0 = u64 [sp + 0x30]
  7039: 0a 0c                    ecalli 12 // 'eject'
  7041: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7045: 33 07 28 00 01           a0 = 0x10028
  7050: 7b 17 10                 u64 [sp + 0x10] = a0
  7053: 7b 67 18                 u64 [s1 + 0x18] = a0
  7056: 82 18 40                 a1 = u64 [sp + 0x40]
  7059: 7b 68 20                 u64 [s1 + 0x20] = a1
  7062: 95 17 ff 07              a0 = sp + 0x7ff
  7066: 95 77 19 04              a0 = a0 + 0x419
  7070: 7b 67 28                 u64 [s1 + 0x28] = a0
  7073: 7b 68 30                 u64 [s1 + 0x30] = a1
  7076: 33 07 f8 09 01           a0 = 0x109f8
  7081: 7b 17 98 01              u64 [sp + 0x198] = a0
  7085: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7090: 49 21 b8 01              u64 [sp + 440] = 0
  7094: 95 17 ff 07              a0 = sp + 0x7ff
  7098: 95 77 b1 03              a0 = a0 + 0x3b1
  7102: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7106: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7110: 95 17 ff 07              a0 = sp + 0x7ff
  7114: 95 77 e1 03              a0 = a0 + 0x3e1
  7118: 95 18 98 01              a1 = sp + 0x198
  7122: 50 20 b6 00 18 10        ra = 182, jump @636
      :                          @389 [@dyn 91]
  7128: 82 65 50                 s0 = u64 [s1 + 0x50]
  7131: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7134: 82 66 48                 s1 = u64 [s1 + 0x48]
  7137: 33 07 02                 a0 = 0x2
  7140: 33 08                    a1 = 0
  7142: 33 09                    a2 = 0
  7144: 64 5a                    a3 = s0
  7146: 33 00 b8 00              ra = 0xb8
  7150: 0a 64                    ecalli 100 // 'log'
  7152: 01                       fallthrough
      :                          @390 [@dyn 92]
  7153: 82 17 48                 a0 = u64 [sp + 0x48]
  7156: c8 67 07                 a0 = a0 + s1
  7159: 53 27 00 f0 23           jump @396 if a0 <u 4294963200
      :                          @391
  7164: 33 07 20 00 03           a0 = 0x30020
  7169: 95 77 00 10              a0 = a0 + 0x1000
  7173: 01                       fallthrough
      :                          @392
  7174: 82 78                    a1 = u64 [a0]
  7176: c9 87 09                 a2 = a0 - a1
  7179: ab 59 0f                 jump @396 if a2 != s0
      :                          @393
  7182: c9 68 09                 a2 = a1 - s1
  7185: 01                       fallthrough
      :                          @394
  7186: 82 7a                    a3 = u64 [a0]
  7188: ab 8a f2                 jump @392 if a3 != a1
      :                          @395
  7191: 7b 79                    u64 [a0] = a2
  7193: 01                       fallthrough
      :                          @396
  7194: 95 16 ff 07              s1 = sp + 0x7ff
  7198: 95 66 99 03              s1 = s1 + 0x399
  7202: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7206: 33 08 05                 a1 = 0x5
  7209: 50 20 ba 00 bc 1f        ra = 186, jump @970
      :                          @397 [@dyn 93]
  7215: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  7225: 95 1a 58                 a3 = sp + 0x58
  7228: 33 08                    a1 = 0
  7230: 33 09                    a2 = 0
  7232: 33 0b                    a4 = 0
  7234: 0a 05                    ecalli 5 // 'bless'
  7236: 7b 67                    u64 [s1] = a0
  7238: 82 17 10                 a0 = u64 [sp + 0x10]
  7241: 7b 67 18                 u64 [s1 + 0x18] = a0
  7244: 33 07 28 0a 01           a0 = 0x10a28
  7249: 7b 17 98 01              u64 [sp + 0x198] = a0
  7253: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7258: 49 21 b8 01              u64 [sp + 440] = 0
  7262: 95 17 ff 07              a0 = sp + 0x7ff
  7266: 95 77 b1 03              a0 = a0 + 0x3b1
  7270: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7274: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7279: 82 17 40                 a0 = u64 [sp + 0x40]
  7282: 7b 67 20                 u64 [s1 + 0x20] = a0
  7285: 7b 66 28                 u64 [s1 + 0x28] = s1
  7288: 7b 67 30                 u64 [s1 + 0x30] = a0
  7291: 95 17 ff 07              a0 = sp + 0x7ff
  7295: 95 77 e1 03              a0 = a0 + 0x3e1
  7299: 95 18 98 01              a1 = sp + 0x198
  7303: 50 20 bc 00 63 0f        ra = 188, jump @636
      :                          @398 [@dyn 94]
  7309: 82 65 50                 s0 = u64 [s1 + 0x50]
  7312: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7315: 82 66 48                 s1 = u64 [s1 + 0x48]
  7318: 33 07 02                 a0 = 0x2
  7321: 33 08                    a1 = 0
  7323: 33 09                    a2 = 0
  7325: 64 5a                    a3 = s0
  7327: 33 00 be 00              ra = 0xbe
  7331: 0a 64                    ecalli 100 // 'log'
  7333: 01                       fallthrough
      :                          @399 [@dyn 95]
  7334: 82 17 48                 a0 = u64 [sp + 0x48]
  7337: c8 67 07                 a0 = a0 + s1
  7340: 53 27 00 f0 23           jump @405 if a0 <u 4294963200
      :                          @400
  7345: 33 07 20 00 03           a0 = 0x30020
  7350: 95 77 00 10              a0 = a0 + 0x1000
  7354: 01                       fallthrough
      :                          @401
  7355: 82 78                    a1 = u64 [a0]
  7357: c9 87 09                 a2 = a0 - a1
  7360: ab 59 0f                 jump @405 if a2 != s0
      :                          @402
  7363: c9 68 09                 a2 = a1 - s1
  7366: 01                       fallthrough
      :                          @403
  7367: 82 7a                    a3 = u64 [a0]
  7369: ab 8a f2                 jump @401 if a3 != a1
      :                          @404
  7372: 7b 79                    u64 [a0] = a2
  7374: 01                       fallthrough
      :                          @405
  7375: 95 16 ff 07              s1 = sp + 0x7ff
  7379: 95 66 99 03              s1 = s1 + 0x399
  7383: 82 67                    a0 = u64 [s1]
  7385: 33 08 06                 a1 = 0x6
  7388: 33 00 1e 01              ra = 0x11e
  7392: 28 05 1f                 jump @970
      :                          @406 [@dyn 96]
  7395: 33 05 03                 s0 = 0x3
  7398: 95 17 58                 a0 = sp + 0x58
  7401: 33 08 03                 a1 = 0x3
  7404: 0a 0e                    ecalli 14 // 'solicit'
  7406: 7b 67 70                 u64 [s1 + 0x70] = a0
  7409: 33 08 01                 a1 = 0x1
  7412: 50 20 c2 00 f1 1e        ra = 194, jump @970
      :                          @407 [@dyn 97]
  7418: 82 17 38                 a0 = u64 [sp + 0x38]
  7421: 7b 67 18                 u64 [s1 + 0x18] = a0
  7424: 82 18 40                 a1 = u64 [sp + 0x40]
  7427: 7b 68 20                 u64 [s1 + 0x20] = a1
  7430: 95 17 ff 07              a0 = sp + 0x7ff
  7434: 95 77 09 04              a0 = a0 + 0x409
  7438: 7b 67 28                 u64 [s1 + 0x28] = a0
  7441: 7b 68 30                 u64 [s1 + 0x30] = a1
  7444: 33 07 58 0a 01           a0 = 0x10a58
  7449: 7b 17 98 01              u64 [sp + 0x198] = a0
  7453: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  7457: 49 21 b8 01              u64 [sp + 440] = 0
  7461: 95 17 ff 07              a0 = sp + 0x7ff
  7465: 95 77 b1 03              a0 = a0 + 0x3b1
  7469: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7473: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7478: 95 17 ff 07              a0 = sp + 0x7ff
  7482: 95 77 e1 03              a0 = a0 + 0x3e1
  7486: 95 18 98 01              a1 = sp + 0x198
  7490: 50 20 c4 00 a8 0e        ra = 196, jump @636
      :                          @408 [@dyn 98]
  7496: 82 65 50                 s0 = u64 [s1 + 0x50]
  7499: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7502: 95 17 ff 07              a0 = sp + 0x7ff
  7506: 95 77 99 03              a0 = a0 + 0x399
  7510: 82 76 48                 s1 = u64 [a0 + 0x48]
  7513: 33 07 02                 a0 = 0x2
  7516: 33 08                    a1 = 0
  7518: 33 09                    a2 = 0
  7520: 64 5a                    a3 = s0
  7522: 33 00 c6 00              ra = 0xc6
  7526: 0a 64                    ecalli 100 // 'log'
  7528: 01                       fallthrough
      :                          @409 [@dyn 99]
  7529: 82 17 48                 a0 = u64 [sp + 0x48]
  7532: c8 67 07                 a0 = a0 + s1
  7535: 53 27 00 f0 23           jump @415 if a0 <u 4294963200
      :                          @410
  7540: 33 07 20 00 03           a0 = 0x30020
  7545: 95 77 00 10              a0 = a0 + 0x1000
  7549: 01                       fallthrough
      :                          @411
  7550: 82 78                    a1 = u64 [a0]
  7552: c9 87 09                 a2 = a0 - a1
  7555: ab 59 0f                 jump @415 if a2 != s0
      :                          @412
  7558: c9 68 09                 a2 = a1 - s1
  7561: 01                       fallthrough
      :                          @413
  7562: 82 7a                    a3 = u64 [a0]
  7564: ab 8a f2                 jump @411 if a3 != a1
      :                          @414
  7567: 7b 79                    u64 [a0] = a2
  7569: 01                       fallthrough
      :                          @415
  7570: 95 17 58                 a0 = sp + 0x58
  7573: 33 08 03                 a1 = 0x3
  7576: 0a 0d                    ecalli 13 // 'query'
  7578: 95 18 ff 07              a1 = sp + 0x7ff
  7582: 95 88 99 03              a1 = a1 + 0x399
  7586: 7b 87 78                 u64 [a1 + 0x78] = a0
  7589: 95 17 ff 07              a0 = sp + 0x7ff
  7593: 95 77 11 04              a0 = a0 + 0x411
  7597: 7b 87 28                 u64 [a1 + 0x28] = a0
  7600: 33 07 a8 08 01           a0 = 0x108a8
  7605: 7b 17 98 01              u64 [sp + 0x198] = a0
  7609: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7614: 49 21 b8 01              u64 [sp + 440] = 0
  7618: 95 17 ff 07              a0 = sp + 0x7ff
  7622: 95 77 b1 03              a0 = a0 + 0x3b1
  7626: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7630: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7635: 82 17 38                 a0 = u64 [sp + 0x38]
  7638: 7b 87 18                 u64 [a1 + 0x18] = a0
  7641: 82 17 40                 a0 = u64 [sp + 0x40]
  7644: 7b 87 20                 u64 [a1 + 0x20] = a0
  7647: 7b 87 30                 u64 [a1 + 0x30] = a0
  7650: 95 17 ff 07              a0 = sp + 0x7ff
  7654: 95 77 e1 03              a0 = a0 + 0x3e1
  7658: 95 18 98 01              a1 = sp + 0x198
  7662: 95 15 98 01              s0 = sp + 0x198
  7666: 50 20 c8 00 f8 0d        ra = 200, jump @636
      :                          @416 [@dyn 100]
  7672: 95 17 ff 07              a0 = sp + 0x7ff
  7676: 95 77 99 03              a0 = a0 + 0x399
  7680: 82 76 50                 s1 = u64 [a0 + 0x50]
  7683: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7686: 82 77 48                 a0 = u64 [a0 + 0x48]
  7689: 7b 17 10                 u64 [sp + 0x10] = a0
  7692: 33 07 02                 a0 = 0x2
  7695: 33 08                    a1 = 0
  7697: 33 09                    a2 = 0
  7699: 64 6a                    a3 = s1
  7701: 33 00 ca 00              ra = 0xca
  7705: 0a 64                    ecalli 100 // 'log'
  7707: 01                       fallthrough
      :                          @417 [@dyn 101]
  7708: 82 1c 10                 a5 = u64 [sp + 0x10]
  7711: 82 17 48                 a0 = u64 [sp + 0x48]
  7714: c8 c7 07                 a0 = a0 + a5
  7717: 53 27 00 f0 23           jump @423 if a0 <u 4294963200
      :                          @418
  7722: 33 07 20 00 03           a0 = 0x30020
  7727: 95 77 00 10              a0 = a0 + 0x1000
  7731: 01                       fallthrough
      :                          @419
  7732: 82 78                    a1 = u64 [a0]
  7734: c9 87 09                 a2 = a0 - a1
  7737: ab 69 0f                 jump @423 if a2 != s1
      :                          @420
  7740: c9 c8 09                 a2 = a1 - a5
  7743: 01                       fallthrough
      :                          @421
  7744: 82 7a                    a3 = u64 [a0]
  7746: ab 8a f2                 jump @419 if a3 != a1
      :                          @422
  7749: 7b 79                    u64 [a0] = a2
  7751: 01                       fallthrough
      :                          @423
  7752: 95 17 ff 07              a0 = sp + 0x7ff
  7756: 95 77 99 03              a0 = a0 + 0x399
  7760: 82 77 78                 a0 = u64 [a0 + 0x78]
  7763: 33 08 02                 a1 = 0x2
  7766: 50 20 cc 00 8f 1d        ra = 204, jump @970
      :                          @424 [@dyn 102]
  7772: 33 09 00 0a              a2 = 0xa00
  7776: 95 17 98 01              a0 = sp + 0x198
  7780: 33 08                    a1 = 0
  7782: 50 20 ce 00 ab 10        ra = 206, jump @704
      :                          @425 [@dyn 103]
  7788: 33 06 50                 s1 = 0x50
  7791: 01                       fallthrough
      :                          @426
  7792: 95 18 58                 a1 = sp + 0x58
  7795: 33 09 20                 a2 = 0x20
  7798: 64 57                    a0 = s0
  7800: 50 20 d0 00 e7 0f        ra = 208, jump @686
      :                          @427 [@dyn 104]
  7806: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7809: 95 55 20                 s0 = s0 + 0x20
  7812: 52 06 ec                 jump @426 if s1 != 0
      :                          @428
  7815: 95 18 98 01              a1 = sp + 0x198
  7819: 33 07                    a0 = 0
  7821: 0a 06                    ecalli 6 // 'assign'
  7823: 95 16 ff 07              s1 = sp + 0x7ff
  7827: 95 66 99 03              s1 = s1 + 0x399
  7831: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7835: 95 17 ff 07              a0 = sp + 0x7ff
  7839: 95 77 19 04              a0 = a0 + 0x419
  7843: 7b 67 58                 u64 [s1 + 0x58] = a0
  7846: 33 07 88 0a 01           a0 = 0x10a88
  7851: 7b 67 18                 u64 [s1 + 0x18] = a0
  7854: 49 16 20 03              u64 [s1 + 32] = 0x3
  7858: 95 17 ff 07              a0 = sp + 0x7ff
  7862: 95 77 e1 03              a0 = a0 + 0x3e1
  7866: 7b 67 28                 u64 [s1 + 0x28] = a0
  7869: 49 16 30 02              u64 [s1 + 48] = 0x2
  7873: 82 17 38                 a0 = u64 [sp + 0x38]
  7876: 7b 67 48                 u64 [s1 + 0x48] = a0
  7879: 82 17 40                 a0 = u64 [sp + 0x40]
  7882: 7b 67 50                 u64 [s1 + 0x50] = a0
  7885: 7b 67 60                 u64 [s1 + 0x60] = a0
  7888: 49 16 38                 u64 [s1 + 56] = 0
  7891: 95 17 ff 07              a0 = sp + 0x7ff
  7895: 95 77 99 03              a0 = a0 + 0x399
  7899: 95 18 ff 07              a1 = sp + 0x7ff
  7903: 95 88 b1 03              a1 = a1 + 0x3b1
  7907: 50 20 d2 00 07 0d        ra = 210, jump @636
      :                          @429 [@dyn 105]
  7913: 82 65 08                 s0 = u64 [s1 + 0x8]
  7916: 82 6b 10                 a4 = u64 [s1 + 0x10]
  7919: 82 66                    s1 = u64 [s1]
  7921: 33 07 02                 a0 = 0x2
  7924: 33 08                    a1 = 0
  7926: 33 09                    a2 = 0
  7928: 64 5a                    a3 = s0
  7930: 33 00 d4 00              ra = 0xd4
  7934: 0a 64                    ecalli 100 // 'log'
  7936: 01                       fallthrough
      :                          @430 [@dyn 106]
  7937: 82 17 48                 a0 = u64 [sp + 0x48]
  7940: c8 67 07                 a0 = a0 + s1
  7943: 53 27 00 f0 1d 05        jump @501 if a0 <u 4294963200
      :                          @431
  7949: 33 07 20 00 03           a0 = 0x30020
  7954: 95 77 00 10              a0 = a0 + 0x1000
  7958: 01                       fallthrough
      :                          @432
  7959: 82 78                    a1 = u64 [a0]
  7961: c9 87 09                 a2 = a0 - a1
  7964: ab 59 08 05              jump @501 if a2 != s0
      :                          @433
  7968: c9 68 09                 a2 = a1 - s1
  7971: 01                       fallthrough
      :                          @434
  7972: 82 7a                    a3 = u64 [a0]
  7974: ab 8a f1                 jump @432 if a3 != a1
      :                          @435
  7977: 7b 79                    u64 [a0] = a2
  7979: 33 0b                    a4 = 0
  7981: 01                       fallthrough
      :                          @436
  7982: ab 8a e9                 jump @432 if a3 != a1
      :                          @437
  7985: 28 f3 04                 jump @501
      :                          @438 [@dyn 107]
  7988: 33 05 03                 s0 = 0x3
  7991: 95 17 58                 a0 = sp + 0x58
  7994: 33 08 03                 a1 = 0x3
  7997: 0a 0f                    ecalli 15 // 'forget'
  7999: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8003: 82 17 38                 a0 = u64 [sp + 0x38]
  8006: 7b 67 18                 u64 [s1 + 0x18] = a0
  8009: 82 18 40                 a1 = u64 [sp + 0x40]
  8012: 7b 68 20                 u64 [s1 + 0x20] = a1
  8015: 95 17 ff 07              a0 = sp + 0x7ff
  8019: 95 77 19 04              a0 = a0 + 0x419
  8023: 7b 67 28                 u64 [s1 + 0x28] = a0
  8026: 7b 68 30                 u64 [s1 + 0x30] = a1
  8029: 33 07 08 09 01           a0 = 0x10908
  8034: 7b 17 98 01              u64 [sp + 0x198] = a0
  8038: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  8042: 49 21 b8 01              u64 [sp + 440] = 0
  8046: 95 17 ff 07              a0 = sp + 0x7ff
  8050: 95 77 b1 03              a0 = a0 + 0x3b1
  8054: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8058: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8063: 95 17 ff 07              a0 = sp + 0x7ff
  8067: 95 77 e1 03              a0 = a0 + 0x3e1
  8071: 95 18 98 01              a1 = sp + 0x198
  8075: 50 20 d8 00 5f 0c        ra = 216, jump @636
      :                          @439 [@dyn 108]
  8081: 82 65 50                 s0 = u64 [s1 + 0x50]
  8084: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8087: 95 17 ff 07              a0 = sp + 0x7ff
  8091: 95 77 99 03              a0 = a0 + 0x399
  8095: 82 76 48                 s1 = u64 [a0 + 0x48]
  8098: 33 07 02                 a0 = 0x2
  8101: 33 08                    a1 = 0
  8103: 33 09                    a2 = 0
  8105: 64 5a                    a3 = s0
  8107: 33 00 da 00              ra = 0xda
  8111: 0a 64                    ecalli 100 // 'log'
  8113: 01                       fallthrough
      :                          @440 [@dyn 109]
  8114: 82 17 48                 a0 = u64 [sp + 0x48]
  8117: c8 67 07                 a0 = a0 + s1
  8120: 53 27 00 f0 23           jump @446 if a0 <u 4294963200
      :                          @441
  8125: 33 07 20 00 03           a0 = 0x30020
  8130: 95 77 00 10              a0 = a0 + 0x1000
  8134: 01                       fallthrough
      :                          @442
  8135: 82 78                    a1 = u64 [a0]
  8137: c9 87 09                 a2 = a0 - a1
  8140: ab 59 0f                 jump @446 if a2 != s0
      :                          @443
  8143: c9 68 09                 a2 = a1 - s1
  8146: 01                       fallthrough
      :                          @444
  8147: 82 7a                    a3 = u64 [a0]
  8149: ab 8a f2                 jump @442 if a3 != a1
      :                          @445
  8152: 7b 79                    u64 [a0] = a2
  8154: 01                       fallthrough
      :                          @446
  8155: 95 16 ff 07              s1 = sp + 0x7ff
  8159: 95 66 99 03              s1 = s1 + 0x399
  8163: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8167: 33 08 01                 a1 = 0x1
  8170: 50 20 dc 00 fb 1b        ra = 220, jump @970
      :                          @447 [@dyn 110]
  8176: 95 17 58                 a0 = sp + 0x58
  8179: 33 08 03                 a1 = 0x3
  8182: 0a 0d                    ecalli 13 // 'query'
  8184: 7b 67                    u64 [s1] = a0
  8186: 33 07 b8 0a 01           a0 = 0x10ab8
  8191: 7b 17 98 01              u64 [sp + 0x198] = a0
  8195: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8200: 49 21 b8 01              u64 [sp + 440] = 0
  8204: 95 17 ff 07              a0 = sp + 0x7ff
  8208: 95 77 b1 03              a0 = a0 + 0x3b1
  8212: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8216: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8221: 82 17 38                 a0 = u64 [sp + 0x38]
  8224: 7b 67 18                 u64 [s1 + 0x18] = a0
  8227: 82 17 40                 a0 = u64 [sp + 0x40]
  8230: 7b 67 20                 u64 [s1 + 0x20] = a0
  8233: 7b 66 28                 u64 [s1 + 0x28] = s1
  8236: 7b 67 30                 u64 [s1 + 0x30] = a0
  8239: 95 17 ff 07              a0 = sp + 0x7ff
  8243: 95 77 e1 03              a0 = a0 + 0x3e1
  8247: 95 18 98 01              a1 = sp + 0x198
  8251: 50 20 de 00 af 0b        ra = 222, jump @636
      :                          @448 [@dyn 111]
  8257: 82 65 50                 s0 = u64 [s1 + 0x50]
  8260: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8263: 82 66 48                 s1 = u64 [s1 + 0x48]
  8266: 33 07 02                 a0 = 0x2
  8269: 33 08                    a1 = 0
  8271: 33 09                    a2 = 0
  8273: 64 5a                    a3 = s0
  8275: 33 00 e0 00              ra = 0xe0
  8279: 0a 64                    ecalli 100 // 'log'
  8281: 01                       fallthrough
      :                          @449 [@dyn 112]
  8282: 82 17 48                 a0 = u64 [sp + 0x48]
  8285: c8 67 07                 a0 = a0 + s1
  8288: 53 27 00 f0 83 01        jump @474 if a0 <u 4294963200
      :                          @450
  8294: 33 07 20 00 03           a0 = 0x30020
  8299: 95 77 00 10              a0 = a0 + 0x1000
  8303: 01                       fallthrough
      :                          @451
  8304: 82 78                    a1 = u64 [a0]
  8306: c9 87 09                 a2 = a0 - a1
  8309: ab 59 6e 01              jump @474 if a2 != s0
      :                          @452
  8313: c9 68 09                 a2 = a1 - s1
  8316: 01                       fallthrough
      :                          @453
  8317: 82 7a                    a3 = u64 [a0]
  8319: ab 8a f1                 jump @451 if a3 != a1
      :                          @454
  8322: 7b 79                    u64 [a0] = a2
  8324: 33 0b                    a4 = 0
  8326: 01                       fallthrough
      :                          @455
  8327: ab 8a e9                 jump @451 if a3 != a1
      :                          @456
  8330: 28 59 01                 jump @474
      :                          @457 [@dyn 113]
  8333: 95 18 58                 a1 = sp + 0x58
  8336: 95 19 98 00              a2 = sp + 0x98
  8340: 33 0b 03                 a4 = 0x3
  8343: 82 17 30                 a0 = u64 [sp + 0x30]
  8346: 33 0a                    a3 = 0
  8348: 0a 01                    ecalli 1 // 'lookup'
  8350: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8354: 82 17 38                 a0 = u64 [sp + 0x38]
  8357: 7b 67 18                 u64 [s1 + 0x18] = a0
  8360: 82 18 40                 a1 = u64 [sp + 0x40]
  8363: 7b 68 20                 u64 [s1 + 0x20] = a1
  8366: 95 17 ff 07              a0 = sp + 0x7ff
  8370: 95 77 19 04              a0 = a0 + 0x419
  8374: 7b 67 28                 u64 [s1 + 0x28] = a0
  8377: 7b 68 30                 u64 [s1 + 0x30] = a1
  8380: 33 07 e8 0a 01           a0 = 0x10ae8
  8385: 7b 17 98 01              u64 [sp + 0x198] = a0
  8389: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8394: 49 21 b8 01              u64 [sp + 440] = 0
  8398: 95 17 ff 07              a0 = sp + 0x7ff
  8402: 95 77 b1 03              a0 = a0 + 0x3b1
  8406: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8410: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8415: 95 17 ff 07              a0 = sp + 0x7ff
  8419: 95 77 e1 03              a0 = a0 + 0x3e1
  8423: 95 18 98 01              a1 = sp + 0x198
  8427: 50 20 e4 00 ff 0a        ra = 228, jump @636
      :                          @458 [@dyn 114]
  8433: 82 65 50                 s0 = u64 [s1 + 0x50]
  8436: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8439: 95 17 ff 07              a0 = sp + 0x7ff
  8443: 95 77 99 03              a0 = a0 + 0x399
  8447: 82 76 48                 s1 = u64 [a0 + 0x48]
  8450: 33 07 02                 a0 = 0x2
  8453: 33 08                    a1 = 0
  8455: 33 09                    a2 = 0
  8457: 64 5a                    a3 = s0
  8459: 33 00 e6 00              ra = 0xe6
  8463: 0a 64                    ecalli 100 // 'log'
  8465: 01                       fallthrough
      :                          @459 [@dyn 115]
  8466: 82 17 48                 a0 = u64 [sp + 0x48]
  8469: c8 67 07                 a0 = a0 + s1
  8472: 53 27 00 f0 23           jump @465 if a0 <u 4294963200
      :                          @460
  8477: 33 07 20 00 03           a0 = 0x30020
  8482: 95 77 00 10              a0 = a0 + 0x1000
  8486: 01                       fallthrough
      :                          @461
  8487: 82 78                    a1 = u64 [a0]
  8489: c9 87 09                 a2 = a0 - a1
  8492: ab 59 0f                 jump @465 if a2 != s0
      :                          @462
  8495: c9 68 09                 a2 = a1 - s1
  8498: 01                       fallthrough
      :                          @463
  8499: 82 7a                    a3 = u64 [a0]
  8501: ab 8a f2                 jump @461 if a3 != a1
      :                          @464
  8504: 7b 79                    u64 [a0] = a2
  8506: 01                       fallthrough
      :                          @465
  8507: 95 16 ff 07              s1 = sp + 0x7ff
  8511: 95 66 99 03              s1 = s1 + 0x399
  8515: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8519: 33 08 01                 a1 = 0x1
  8522: 50 20 e8 00 9b 1a        ra = 232, jump @970
      :                          @466 [@dyn 116]
  8528: 95 17 58                 a0 = sp + 0x58
  8531: 33 08 03                 a1 = 0x3
  8534: 0a 0d                    ecalli 13 // 'query'
  8536: 7b 67                    u64 [s1] = a0
  8538: 33 07 18 0b 01           a0 = 0x10b18
  8543: 7b 17 98 01              u64 [sp + 0x198] = a0
  8547: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8552: 49 21 b8 01              u64 [sp + 440] = 0
  8556: 95 17 ff 07              a0 = sp + 0x7ff
  8560: 95 77 b1 03              a0 = a0 + 0x3b1
  8564: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8568: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8573: 82 17 38                 a0 = u64 [sp + 0x38]
  8576: 7b 67 18                 u64 [s1 + 0x18] = a0
  8579: 82 17 40                 a0 = u64 [sp + 0x40]
  8582: 7b 67 20                 u64 [s1 + 0x20] = a0
  8585: 7b 66 28                 u64 [s1 + 0x28] = s1
  8588: 7b 67 30                 u64 [s1 + 0x30] = a0
  8591: 95 17 ff 07              a0 = sp + 0x7ff
  8595: 95 77 e1 03              a0 = a0 + 0x3e1
  8599: 95 18 98 01              a1 = sp + 0x198
  8603: 50 20 ea 00 4f 0a        ra = 234, jump @636
      :                          @467 [@dyn 117]
  8609: 82 65 50                 s0 = u64 [s1 + 0x50]
  8612: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8615: 82 66 48                 s1 = u64 [s1 + 0x48]
  8618: 33 07 02                 a0 = 0x2
  8621: 33 08                    a1 = 0
  8623: 33 09                    a2 = 0
  8625: 64 5a                    a3 = s0
  8627: 33 00 ec 00              ra = 0xec
  8631: 0a 64                    ecalli 100 // 'log'
  8633: 01                       fallthrough
      :                          @468 [@dyn 118]
  8634: 82 17 48                 a0 = u64 [sp + 0x48]
  8637: c8 67 07                 a0 = a0 + s1
  8640: 53 27 00 f0 23           jump @474 if a0 <u 4294963200
      :                          @469
  8645: 33 07 20 00 03           a0 = 0x30020
  8650: 95 77 00 10              a0 = a0 + 0x1000
  8654: 01                       fallthrough
      :                          @470
  8655: 82 78                    a1 = u64 [a0]
  8657: c9 87 09                 a2 = a0 - a1
  8660: ab 59 0f                 jump @474 if a2 != s0
      :                          @471
  8663: c9 68 09                 a2 = a1 - s1
  8666: 01                       fallthrough
      :                          @472
  8667: 82 7a                    a3 = u64 [a0]
  8669: ab 8a f2                 jump @470 if a3 != a1
      :                          @473
  8672: 7b 79                    u64 [a0] = a2
  8674: 01                       fallthrough
      :                          @474
  8675: 95 16 ff 07              s1 = sp + 0x7ff
  8679: 95 66 99 03              s1 = s1 + 0x399
  8683: 82 67                    a0 = u64 [s1]
  8685: 33 08 02                 a1 = 0x2
  8688: 33 00 1e 01              ra = 0x11e
  8692: 28 f1 19                 jump @970
      :                          @475 [@dyn 119]
  8695: 95 17 58                 a0 = sp + 0x58
  8698: 33 08 03                 a1 = 0x3
  8701: 33 09 8f 03              a2 = 0x38f
  8705: 33 0a 8f 03              a3 = 0x38f
  8709: 0a 09                    ecalli 9 // 'new'
  8711: 7b 67 70                 u64 [s1 + 0x70] = a0
  8714: 82 17 38                 a0 = u64 [sp + 0x38]
  8717: 7b 67 18                 u64 [s1 + 0x18] = a0
  8720: 82 18 40                 a1 = u64 [sp + 0x40]
  8723: 7b 68 20                 u64 [s1 + 0x20] = a1
  8726: 95 17 ff 07              a0 = sp + 0x7ff
  8730: 95 77 09 04              a0 = a0 + 0x409
  8734: 7b 67 28                 u64 [s1 + 0x28] = a0
  8737: 7b 68 30                 u64 [s1 + 0x30] = a1
  8740: 33 07 48 0b 01           a0 = 0x10b48
  8745: 7b 17 98 01              u64 [sp + 0x198] = a0
  8749: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8754: 49 21 b8 01              u64 [sp + 440] = 0
  8758: 95 17 ff 07              a0 = sp + 0x7ff
  8762: 95 77 b1 03              a0 = a0 + 0x3b1
  8766: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8770: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8775: 95 17 ff 07              a0 = sp + 0x7ff
  8779: 95 77 e1 03              a0 = a0 + 0x3e1
  8783: 95 18 98 01              a1 = sp + 0x198
  8787: 50 20 f0 00 97 09        ra = 240, jump @636
      :                          @476 [@dyn 120]
  8793: 82 65 50                 s0 = u64 [s1 + 0x50]
  8796: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8799: 95 17 ff 07              a0 = sp + 0x7ff
  8803: 95 77 99 03              a0 = a0 + 0x399
  8807: 82 76 48                 s1 = u64 [a0 + 0x48]
  8810: 33 07 02                 a0 = 0x2
  8813: 33 08                    a1 = 0
  8815: 33 09                    a2 = 0
  8817: 64 5a                    a3 = s0
  8819: 33 00 f2 00              ra = 0xf2
  8823: 0a 64                    ecalli 100 // 'log'
  8825: 01                       fallthrough
      :                          @477 [@dyn 121]
  8826: 82 17 48                 a0 = u64 [sp + 0x48]
  8829: c8 67 07                 a0 = a0 + s1
  8832: 53 27 00 f0 23           jump @483 if a0 <u 4294963200
      :                          @478
  8837: 33 07 20 00 03           a0 = 0x30020
  8842: 95 77 00 10              a0 = a0 + 0x1000
  8846: 01                       fallthrough
      :                          @479
  8847: 82 78                    a1 = u64 [a0]
  8849: c9 87 09                 a2 = a0 - a1
  8852: ab 59 0f                 jump @483 if a2 != s0
      :                          @480
  8855: c9 68 09                 a2 = a1 - s1
  8858: 01                       fallthrough
      :                          @481
  8859: 82 7a                    a3 = u64 [a0]
  8861: ab 8a f2                 jump @479 if a3 != a1
      :                          @482
  8864: 7b 79                    u64 [a0] = a2
  8866: 01                       fallthrough
      :                          @483
  8867: 95 16 ff 07              s1 = sp + 0x7ff
  8871: 95 66 99 03              s1 = s1 + 0x399
  8875: 82 67 70                 a0 = u64 [s1 + 0x70]
  8878: 33 08 01                 a1 = 0x1
  8881: 50 20 f4 00 34 19        ra = 244, jump @970
      :                          @484 [@dyn 122]
  8887: 95 17 58                 a0 = sp + 0x58
  8890: 33 08 8f 03              a1 = 0x38f
  8894: 33 09 8f 03              a2 = 0x38f
  8898: 0a 0a                    ecalli 10 // 'upgrade'
  8900: 7b 67 78                 u64 [s1 + 0x78] = a0
  8903: 95 17 ff 07              a0 = sp + 0x7ff
  8907: 95 77 11 04              a0 = a0 + 0x411
  8911: 7b 67 28                 u64 [s1 + 0x28] = a0
  8914: 33 07 78 0b 01           a0 = 0x10b78
  8919: 7b 17 98 01              u64 [sp + 0x198] = a0
  8923: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8928: 49 21 b8 01              u64 [sp + 440] = 0
  8932: 95 17 ff 07              a0 = sp + 0x7ff
  8936: 95 77 b1 03              a0 = a0 + 0x3b1
  8940: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8944: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8949: 82 17 38                 a0 = u64 [sp + 0x38]
  8952: 7b 67 18                 u64 [s1 + 0x18] = a0
  8955: 82 17 40                 a0 = u64 [sp + 0x40]
  8958: 7b 67 20                 u64 [s1 + 0x20] = a0
  8961: 7b 67 30                 u64 [s1 + 0x30] = a0
  8964: 95 17 ff 07              a0 = sp + 0x7ff
  8968: 95 77 e1 03              a0 = a0 + 0x3e1
  8972: 95 18 98 01              a1 = sp + 0x198
  8976: 50 20 f6 00 da 08        ra = 246, jump @636
      :                          @485 [@dyn 123]
  8982: 82 65 50                 s0 = u64 [s1 + 0x50]
  8985: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8988: 82 66 48                 s1 = u64 [s1 + 0x48]
  8991: 33 07 02                 a0 = 0x2
  8994: 33 08                    a1 = 0
  8996: 33 09                    a2 = 0
  8998: 64 5a                    a3 = s0
  9000: 33 00 f8 00              ra = 0xf8
  9004: 0a 64                    ecalli 100 // 'log'
  9006: 01                       fallthrough
      :                          @486 [@dyn 124]
  9007: 82 17 48                 a0 = u64 [sp + 0x48]
  9010: c8 67 07                 a0 = a0 + s1
  9013: 53 27 00 f0 23           jump @492 if a0 <u 4294963200
      :                          @487
  9018: 33 07 20 00 03           a0 = 0x30020
  9023: 95 77 00 10              a0 = a0 + 0x1000
  9027: 01                       fallthrough
      :                          @488
  9028: 82 78                    a1 = u64 [a0]
  9030: c9 87 09                 a2 = a0 - a1
  9033: ab 59 0f                 jump @492 if a2 != s0
      :                          @489
  9036: c9 68 09                 a2 = a1 - s1
  9039: 01                       fallthrough
      :                          @490
  9040: 82 7a                    a3 = u64 [a0]
  9042: ab 8a f2                 jump @488 if a3 != a1
      :                          @491
  9045: 7b 79                    u64 [a0] = a2
  9047: 01                       fallthrough
      :                          @492
  9048: 95 16 ff 07              s1 = sp + 0x7ff
  9052: 95 66 99 03              s1 = s1 + 0x399
  9056: 82 67 78                 a0 = u64 [s1 + 0x78]
  9059: 33 08 02                 a1 = 0x2
  9062: 33 05 02                 s0 = 0x2
  9065: 50 20 fa 00 7c 18        ra = 250, jump @970
      :                          @493 [@dyn 125]
  9071: 48 06 8f 03              u32 [s1 + 0] = 0x38f
  9075: 48 16 08                 u32 [s1 + 8] = 0
  9078: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
  9083: 33 08 01                 a1 = 0x1
  9086: 33 09 01                 a2 = 0x1
  9089: 95 1a ff 07              a3 = sp + 0x7ff
  9093: 95 aa 99 03              a3 = a3 + 0x399
  9097: 33 0b 01                 a4 = 0x1
  9100: 33 07                    a0 = 0
  9102: 0a 05                    ecalli 5 // 'bless'
  9104: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9108: 95 17 ff 07              a0 = sp + 0x7ff
  9112: 95 77 19 04              a0 = a0 + 0x419
  9116: 7b 67 28                 u64 [s1 + 0x28] = a0
  9119: 33 07 a8 0b 01           a0 = 0x10ba8
  9124: 7b 17 98 01              u64 [sp + 0x198] = a0
  9128: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9133: 49 21 b8 01              u64 [sp + 440] = 0
  9137: 95 17 ff 07              a0 = sp + 0x7ff
  9141: 95 77 b1 03              a0 = a0 + 0x3b1
  9145: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9149: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9153: 82 17 38                 a0 = u64 [sp + 0x38]
  9156: 7b 67 18                 u64 [s1 + 0x18] = a0
  9159: 82 17 40                 a0 = u64 [sp + 0x40]
  9162: 7b 67 20                 u64 [s1 + 0x20] = a0
  9165: 7b 67 30                 u64 [s1 + 0x30] = a0
  9168: 95 17 ff 07              a0 = sp + 0x7ff
  9172: 95 77 e1 03              a0 = a0 + 0x3e1
  9176: 95 18 98 01              a1 = sp + 0x198
  9180: 50 20 fc 00 0e 08        ra = 252, jump @636
      :                          @494 [@dyn 126]
  9186: 82 65 50                 s0 = u64 [s1 + 0x50]
  9189: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9192: 82 66 48                 s1 = u64 [s1 + 0x48]
  9195: 33 07 02                 a0 = 0x2
  9198: 33 08                    a1 = 0
  9200: 33 09                    a2 = 0
  9202: 64 5a                    a3 = s0
  9204: 33 00 fe 00              ra = 0xfe
  9208: 0a 64                    ecalli 100 // 'log'
  9210: 01                       fallthrough
      :                          @495 [@dyn 127]
  9211: 82 17 48                 a0 = u64 [sp + 0x48]
  9214: c8 67 07                 a0 = a0 + s1
  9217: 53 27 00 f0 23           jump @501 if a0 <u 4294963200
      :                          @496
  9222: 33 07 20 00 03           a0 = 0x30020
  9227: 95 77 00 10              a0 = a0 + 0x1000
  9231: 01                       fallthrough
      :                          @497
  9232: 82 78                    a1 = u64 [a0]
  9234: c9 87 09                 a2 = a0 - a1
  9237: ab 59 0f                 jump @501 if a2 != s0
      :                          @498
  9240: c9 68 09                 a2 = a1 - s1
  9243: 01                       fallthrough
      :                          @499
  9244: 82 7a                    a3 = u64 [a0]
  9246: ab 8a f2                 jump @497 if a3 != a1
      :                          @500
  9249: 7b 79                    u64 [a0] = a2
  9251: 01                       fallthrough
      :                          @501
  9252: 95 16 ff 07              s1 = sp + 0x7ff
  9256: 95 66 99 03              s1 = s1 + 0x399
  9260: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9264: 33 08 05                 a1 = 0x5
  9267: 33 00 1e 01              ra = 0x11e
  9271: 28 ae 17                 jump @970
      :                          @502 [@dyn 128]
  9274: 95 17 55                 a0 = sp + 0x55
  9277: 33 08 03                 a1 = 0x3
  9280: 33 09                    a2 = 0
  9282: 33 0a                    a3 = 0
  9284: 0a 03                    ecalli 3 // 'write'
  9286: 7b 67 68                 u64 [s1 + 0x68] = a0
  9289: 33 07 40 00 01           a0 = 0x10040
  9294: 7b 17 10                 u64 [sp + 0x10] = a0
  9297: 7b 67 18                 u64 [s1 + 0x18] = a0
  9300: 82 18 40                 a1 = u64 [sp + 0x40]
  9303: 7b 68 20                 u64 [s1 + 0x20] = a1
  9306: 95 17 ff 07              a0 = sp + 0x7ff
  9310: 95 77 01 04              a0 = a0 + 0x401
  9314: 7b 67 28                 u64 [s1 + 0x28] = a0
  9317: 7b 68 30                 u64 [s1 + 0x30] = a1
  9320: 33 07 d8 0b 01           a0 = 0x10bd8
  9325: 7b 17 98 01              u64 [sp + 0x198] = a0
  9329: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9334: 49 21 b8 01              u64 [sp + 440] = 0
  9338: 95 17 ff 07              a0 = sp + 0x7ff
  9342: 95 77 b1 03              a0 = a0 + 0x3b1
  9346: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9350: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9355: 95 17 ff 07              a0 = sp + 0x7ff
  9359: 95 77 e1 03              a0 = a0 + 0x3e1
  9363: 95 18 98 01              a1 = sp + 0x198
  9367: 50 20 02 01 53 07        ra = 258, jump @636
      :                          @503 [@dyn 129]
  9373: 82 65 50                 s0 = u64 [s1 + 0x50]
  9376: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9379: 95 17 ff 07              a0 = sp + 0x7ff
  9383: 95 77 99 03              a0 = a0 + 0x399
  9387: 82 76 48                 s1 = u64 [a0 + 0x48]
  9390: 33 07 02                 a0 = 0x2
  9393: 33 08                    a1 = 0
  9395: 33 09                    a2 = 0
  9397: 64 5a                    a3 = s0
  9399: 33 00 04 01              ra = 0x104
  9403: 0a 64                    ecalli 100 // 'log'
  9405: 01                       fallthrough
      :                          @504 [@dyn 130]
  9406: 82 17 48                 a0 = u64 [sp + 0x48]
  9409: c8 67 07                 a0 = a0 + s1
  9412: 33 08 20 00 03           a1 = 0x30020
  9417: 7b 18 08                 u64 [sp + 0x8] = a1
  9420: 53 27 00 f0 21           jump @510 if a0 <u 4294963200
      :                          @505
  9425: 82 18 08                 a1 = u64 [sp + 0x8]
  9428: 95 87 00 10              a0 = a1 + 0x1000
  9432: 01                       fallthrough
      :                          @506
  9433: 82 78                    a1 = u64 [a0]
  9435: c9 87 09                 a2 = a0 - a1
  9438: ab 59 0f                 jump @510 if a2 != s0
      :                          @507
  9441: c9 68 09                 a2 = a1 - s1
  9444: 01                       fallthrough
      :                          @508
  9445: 82 7a                    a3 = u64 [a0]
  9447: ab 8a f2                 jump @506 if a3 != a1
      :                          @509
  9450: 7b 79                    u64 [a0] = a2
  9452: 01                       fallthrough
      :                          @510
  9453: 95 16 ff 07              s1 = sp + 0x7ff
  9457: 95 66 99 03              s1 = s1 + 0x399
  9461: 82 67 68                 a0 = u64 [s1 + 0x68]
  9464: 33 08 01                 a1 = 0x1
  9467: 50 20 06 01 ea 16        ra = 262, jump @970
      :                          @511 [@dyn 131]
  9473: 95 17 55                 a0 = sp + 0x55
  9476: 33 08 03                 a1 = 0x3
  9479: 95 19 52                 a2 = sp + 0x52
  9482: 33 0a 03                 a3 = 0x3
  9485: 0a 03                    ecalli 3 // 'write'
  9487: 7b 67 70                 u64 [s1 + 0x70] = a0
  9490: 95 17 ff 07              a0 = sp + 0x7ff
  9494: 95 77 09 04              a0 = a0 + 0x409
  9498: 7b 67 28                 u64 [s1 + 0x28] = a0
  9501: 33 07 08 0c 01           a0 = 0x10c08
  9506: 7b 17 98 01              u64 [sp + 0x198] = a0
  9510: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9515: 49 21 b8 01              u64 [sp + 440] = 0
  9519: 95 17 ff 07              a0 = sp + 0x7ff
  9523: 95 77 b1 03              a0 = a0 + 0x3b1
  9527: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9531: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9536: 82 17 10                 a0 = u64 [sp + 0x10]
  9539: 7b 67 18                 u64 [s1 + 0x18] = a0
  9542: 82 17 40                 a0 = u64 [sp + 0x40]
  9545: 7b 67 20                 u64 [s1 + 0x20] = a0
  9548: 7b 67 30                 u64 [s1 + 0x30] = a0
  9551: 95 17 ff 07              a0 = sp + 0x7ff
  9555: 95 77 e1 03              a0 = a0 + 0x3e1
  9559: 95 18 98 01              a1 = sp + 0x198
  9563: 50 20 08 01 8f 06        ra = 264, jump @636
      :                          @512 [@dyn 132]
  9569: 82 65 50                 s0 = u64 [s1 + 0x50]
  9572: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9575: 82 66 48                 s1 = u64 [s1 + 0x48]
  9578: 33 07 02                 a0 = 0x2
  9581: 33 08                    a1 = 0
  9583: 33 09                    a2 = 0
  9585: 64 5a                    a3 = s0
  9587: 33 00 0a 01              ra = 0x10a
  9591: 0a 64                    ecalli 100 // 'log'
  9593: 01                       fallthrough
      :                          @513 [@dyn 133]
  9594: 82 17 48                 a0 = u64 [sp + 0x48]
  9597: c8 67 07                 a0 = a0 + s1
  9600: 53 27 00 f0 21           jump @519 if a0 <u 4294963200
      :                          @514
  9605: 82 18 08                 a1 = u64 [sp + 0x8]
  9608: 95 87 00 10              a0 = a1 + 0x1000
  9612: 01                       fallthrough
      :                          @515
  9613: 82 78                    a1 = u64 [a0]
  9615: c9 87 09                 a2 = a0 - a1
  9618: ab 59 0f                 jump @519 if a2 != s0
      :                          @516
  9621: c9 68 09                 a2 = a1 - s1
  9624: 01                       fallthrough
      :                          @517
  9625: 82 7a                    a3 = u64 [a0]
  9627: ab 8a f2                 jump @515 if a3 != a1
      :                          @518
  9630: 7b 79                    u64 [a0] = a2
  9632: 01                       fallthrough
      :                          @519
  9633: 95 16 ff 07              s1 = sp + 0x7ff
  9637: 95 66 99 03              s1 = s1 + 0x399
  9641: 82 67 70                 a0 = u64 [s1 + 0x70]
  9644: 33 08 02                 a1 = 0x2
  9647: 33 05 02                 s0 = 0x2
  9650: 50 20 0c 01 33 16        ra = 268, jump @970
      :                          @520 [@dyn 134]
  9656: 95 17 55                 a0 = sp + 0x55
  9659: 33 08 03                 a1 = 0x3
  9662: 33 09                    a2 = 0
  9664: 33 0a                    a3 = 0
  9666: 0a 03                    ecalli 3 // 'write'
  9668: 7b 67 78                 u64 [s1 + 0x78] = a0
  9671: 82 17 38                 a0 = u64 [sp + 0x38]
  9674: 7b 67 18                 u64 [s1 + 0x18] = a0
  9677: 82 18 40                 a1 = u64 [sp + 0x40]
  9680: 7b 68 20                 u64 [s1 + 0x20] = a1
  9683: 95 17 ff 07              a0 = sp + 0x7ff
  9687: 95 77 11 04              a0 = a0 + 0x411
  9691: 7b 67 28                 u64 [s1 + 0x28] = a0
  9694: 7b 68 30                 u64 [s1 + 0x30] = a1
  9697: 33 07 38 0c 01           a0 = 0x10c38
  9702: 7b 17 98 01              u64 [sp + 0x198] = a0
  9706: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9711: 49 21 b8 01              u64 [sp + 440] = 0
  9715: 95 17 ff 07              a0 = sp + 0x7ff
  9719: 95 77 b1 03              a0 = a0 + 0x3b1
  9723: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9727: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9731: 95 17 ff 07              a0 = sp + 0x7ff
  9735: 95 77 e1 03              a0 = a0 + 0x3e1
  9739: 95 18 98 01              a1 = sp + 0x198
  9743: 50 20 0e 01 db 05        ra = 270, jump @636
      :                          @521 [@dyn 135]
  9749: 82 65 50                 s0 = u64 [s1 + 0x50]
  9752: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9755: 82 66 48                 s1 = u64 [s1 + 0x48]
  9758: 33 07 02                 a0 = 0x2
  9761: 33 08                    a1 = 0
  9763: 33 09                    a2 = 0
  9765: 64 5a                    a3 = s0
  9767: 33 00 10 01              ra = 0x110
  9771: 0a 64                    ecalli 100 // 'log'
  9773: 01                       fallthrough
      :                          @522 [@dyn 136]
  9774: 82 17 48                 a0 = u64 [sp + 0x48]
  9777: c8 67 07                 a0 = a0 + s1
  9780: 53 27 00 f0 21           jump @528 if a0 <u 4294963200
      :                          @523
  9785: 82 18 08                 a1 = u64 [sp + 0x8]
  9788: 95 87 00 10              a0 = a1 + 0x1000
  9792: 01                       fallthrough
      :                          @524
  9793: 82 78                    a1 = u64 [a0]
  9795: c9 87 09                 a2 = a0 - a1
  9798: ab 59 0f                 jump @528 if a2 != s0
      :                          @525
  9801: c9 68 09                 a2 = a1 - s1
  9804: 01                       fallthrough
      :                          @526
  9805: 82 7a                    a3 = u64 [a0]
  9807: ab 8a f2                 jump @524 if a3 != a1
      :                          @527
  9810: 7b 79                    u64 [a0] = a2
  9812: 01                       fallthrough
      :                          @528
  9813: 95 16 ff 07              s1 = sp + 0x7ff
  9817: 95 66 99 03              s1 = s1 + 0x399
  9821: 82 67 78                 a0 = u64 [s1 + 0x78]
  9824: 33 08 05                 a1 = 0x5
  9827: 50 20 12 01 82 15        ra = 274, jump @970
      :                          @529 [@dyn 137]
  9833: 95 18 55                 a1 = sp + 0x55
  9836: 33 09 03                 a2 = 0x3
  9839: 95 1a 98 00              a3 = sp + 0x98
  9843: 33 0c 00 01              a5 = 0x100
  9847: 82 17 30                 a0 = u64 [sp + 0x30]
  9850: 33 0b                    a4 = 0
  9852: 0a 02                    ecalli 2 // 'read'
  9854: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9858: 95 17 ff 07              a0 = sp + 0x7ff
  9862: 95 77 19 04              a0 = a0 + 0x419
  9866: 7b 67 28                 u64 [s1 + 0x28] = a0
  9869: 33 07 68 0c 01           a0 = 0x10c68
  9874: 7b 17 98 01              u64 [sp + 0x198] = a0
  9878: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9883: 49 21 b8 01              u64 [sp + 440] = 0
  9887: 95 17 ff 07              a0 = sp + 0x7ff
  9891: 95 77 b1 03              a0 = a0 + 0x3b1
  9895: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9899: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9904: 82 17 10                 a0 = u64 [sp + 0x10]
  9907: 7b 67 18                 u64 [s1 + 0x18] = a0
  9910: 82 17 40                 a0 = u64 [sp + 0x40]
  9913: 7b 67 20                 u64 [s1 + 0x20] = a0
  9916: 7b 67 30                 u64 [s1 + 0x30] = a0
  9919: 95 17 ff 07              a0 = sp + 0x7ff
  9923: 95 77 e1 03              a0 = a0 + 0x3e1
  9927: 95 18 98 01              a1 = sp + 0x198
  9931: 50 20 14 01 1f 05        ra = 276, jump @636
      :                          @530 [@dyn 138]
  9937: 82 65 50                 s0 = u64 [s1 + 0x50]
  9940: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9943: 82 66 48                 s1 = u64 [s1 + 0x48]
  9946: 33 07 02                 a0 = 0x2
  9949: 33 08                    a1 = 0
  9951: 33 09                    a2 = 0
  9953: 64 5a                    a3 = s0
  9955: 33 00 16 01              ra = 0x116
  9959: 0a 64                    ecalli 100 // 'log'
  9961: 01                       fallthrough
      :                          @531 [@dyn 139]
  9962: 82 17 48                 a0 = u64 [sp + 0x48]
  9965: c8 67 07                 a0 = a0 + s1
  9968: 53 27 00 f0 21           jump @537 if a0 <u 4294963200
      :                          @532
  9973: 82 18 08                 a1 = u64 [sp + 0x8]
  9976: 95 87 00 10              a0 = a1 + 0x1000
  9980: 01                       fallthrough
      :                          @533
  9981: 82 78                    a1 = u64 [a0]
  9983: c9 87 09                 a2 = a0 - a1
  9986: ab 59 0f                 jump @537 if a2 != s0
      :                          @534
  9989: c9 68 09                 a2 = a1 - s1
  9992: 01                       fallthrough
      :                          @535
  9993: 82 7a                    a3 = u64 [a0]
  9995: ab 8a f2                 jump @533 if a3 != a1
      :                          @536
  9998: 7b 79                    u64 [a0] = a2
 10000: 01                       fallthrough
      :                          @537
 10001: 95 16 ff 07              s1 = sp + 0x7ff
 10005: 95 66 99 03              s1 = s1 + 0x399
 10009: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10013: 33 08 06                 a1 = 0x6
 10016: 50 20 18 01 c5 14        ra = 280, jump @970
      :                          @538 [@dyn 140]
 10022: 95 17 55                 a0 = sp + 0x55
 10025: 33 08 03                 a1 = 0x3
 10028: 33 09                    a2 = 0
 10030: 33 0a                    a3 = 0
 10032: 0a 03                    ecalli 3 // 'write'
 10034: 7b 67                    u64 [s1] = a0
 10036: 82 17 10                 a0 = u64 [sp + 0x10]
 10039: 7b 67 18                 u64 [s1 + 0x18] = a0
 10042: 33 07 98 0c 01           a0 = 0x10c98
 10047: 7b 17 98 01              u64 [sp + 0x198] = a0
 10051: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10056: 49 21 b8 01              u64 [sp + 440] = 0
 10060: 95 17 ff 07              a0 = sp + 0x7ff
 10064: 95 77 b1 03              a0 = a0 + 0x3b1
 10068: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10072: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10077: 82 17 40                 a0 = u64 [sp + 0x40]
 10080: 7b 67 20                 u64 [s1 + 0x20] = a0
 10083: 7b 66 28                 u64 [s1 + 0x28] = s1
 10086: 7b 67 30                 u64 [s1 + 0x30] = a0
 10089: 95 17 ff 07              a0 = sp + 0x7ff
 10093: 95 77 e1 03              a0 = a0 + 0x3e1
 10097: 95 18 98 01              a1 = sp + 0x198
 10101: 50 20 1a 01 75 04        ra = 282, jump @636
      :                          @539 [@dyn 141]
 10107: 82 65 50                 s0 = u64 [s1 + 0x50]
 10110: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10113: 82 66 48                 s1 = u64 [s1 + 0x48]
 10116: 33 07 02                 a0 = 0x2
 10119: 33 08                    a1 = 0
 10121: 33 09                    a2 = 0
 10123: 64 5a                    a3 = s0
 10125: 33 00 1c 01              ra = 0x11c
 10129: 0a 64                    ecalli 100 // 'log'
 10131: 01                       fallthrough
      :                          @540 [@dyn 142]
 10132: 82 17 48                 a0 = u64 [sp + 0x48]
 10135: c8 67 07                 a0 = a0 + s1
 10138: 53 27 00 f0 21           jump @546 if a0 <u 4294963200
      :                          @541
 10143: 82 18 08                 a1 = u64 [sp + 0x8]
 10146: 95 87 00 10              a0 = a1 + 0x1000
 10150: 01                       fallthrough
      :                          @542
 10151: 82 78                    a1 = u64 [a0]
 10153: c9 87 09                 a2 = a0 - a1
 10156: ab 59 0f                 jump @546 if a2 != s0
      :                          @543
 10159: c9 68 09                 a2 = a1 - s1
 10162: 01                       fallthrough
      :                          @544
 10163: 82 7a                    a3 = u64 [a0]
 10165: ab 8a f2                 jump @542 if a3 != a1
      :                          @545
 10168: 7b 79                    u64 [a0] = a2
 10170: 01                       fallthrough
      :                          @546
 10171: 95 16 ff 07              s1 = sp + 0x7ff
 10175: 95 66 99 03              s1 = s1 + 0x399
 10179: 82 67                    a0 = u64 [s1]
 10181: 33 08 07                 a1 = 0x7
 10184: 50 20 1e 01 1d 14        ra = 286, jump @970
      :                          @547 [@dyn 143]
 10190: 95 18 98 00              a1 = sp + 0x98
 10194: 82 17 30                 a0 = u64 [sp + 0x30]
 10197: 0a 04                    ecalli 4 // 'info'
 10199: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10203: 33 08 08                 a1 = 0x8
 10206: 50 20 20 01 07 14        ra = 288, jump @970
      :                          @548 [@dyn 144]
 10212: 82 17 38                 a0 = u64 [sp + 0x38]
 10215: 7b 67 18                 u64 [s1 + 0x18] = a0
 10218: 82 18 40                 a1 = u64 [sp + 0x40]
 10221: 7b 68 20                 u64 [s1 + 0x20] = a1
 10224: 95 17 ff 07              a0 = sp + 0x7ff
 10228: 95 77 19 04              a0 = a0 + 0x419
 10232: 7b 67 28                 u64 [s1 + 0x28] = a0
 10235: 7b 68 30                 u64 [s1 + 0x30] = a1
 10238: 33 07 c8 0c 01           a0 = 0x10cc8
 10243: 7b 17 98 01              u64 [sp + 0x198] = a0
 10247: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10252: 49 21 b8 01              u64 [sp + 440] = 0
 10256: 95 17 ff 07              a0 = sp + 0x7ff
 10260: 95 77 b1 03              a0 = a0 + 0x3b1
 10264: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10268: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10273: 95 17 ff 07              a0 = sp + 0x7ff
 10277: 95 77 e1 03              a0 = a0 + 0x3e1
 10281: 95 18 98 01              a1 = sp + 0x198
 10285: 50 20 22 01 bd 03        ra = 290, jump @636
      :                          @549 [@dyn 145]
 10291: 82 65 50                 s0 = u64 [s1 + 0x50]
 10294: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10297: 95 17 ff 07              a0 = sp + 0x7ff
 10301: 95 77 99 03              a0 = a0 + 0x399
 10305: 82 76 48                 s1 = u64 [a0 + 0x48]
 10308: 33 07 02                 a0 = 0x2
 10311: 33 08                    a1 = 0
 10313: 33 09                    a2 = 0
 10315: 64 5a                    a3 = s0
 10317: 33 00 24 01              ra = 0x124
 10321: 0a 64                    ecalli 100 // 'log'
 10323: 01                       fallthrough
      :                          @550 [@dyn 146]
 10324: 82 17 48                 a0 = u64 [sp + 0x48]
 10327: c8 67 07                 a0 = a0 + s1
 10330: 53 27 00 f0 25           jump @556 if a0 <u 4294963200
      :                          @551
 10335: 33 07 20 00 03           a0 = 0x30020
 10340: 95 77 00 10              a0 = a0 + 0x1000
 10344: 01                       fallthrough
      :                          @552
 10345: 82 78                    a1 = u64 [a0]
 10347: c9 87 09                 a2 = a0 - a1
 10350: ab 59 11                 jump @556 if a2 != s0
      :                          @553
 10353: c9 68 09                 a2 = a1 - s1
 10356: 01                       fallthrough
      :                          @554
 10357: 82 7a                    a3 = u64 [a0]
 10359: ab 8a f2                 jump @552 if a3 != a1
      :                          @555
 10362: 7b 79                    u64 [a0] = a2
 10364: 0a                       ecalli 0 // 'gas'
 10365: 28 04                    jump @557
      :                          @556
 10367: 0a                       ecalli 0 // 'gas'
 10368: 01                       fallthrough
      :                          @557
 10369: 95 16 ff 07              s1 = sp + 0x7ff
 10373: 95 66 99 03              s1 = s1 + 0x399
 10377: 7b 67                    u64 [s1] = a0
 10379: 33 08 09                 a1 = 0x9
 10382: 50 20 26 01 57 13        ra = 294, jump @970
      :                          @558 [@dyn 147]
 10388: 82 17 38                 a0 = u64 [sp + 0x38]
 10391: 7b 67 18                 u64 [s1 + 0x18] = a0
 10394: 82 17 40                 a0 = u64 [sp + 0x40]
 10397: 7b 67 20                 u64 [s1 + 0x20] = a0
 10400: 7b 66 28                 u64 [s1 + 0x28] = s1
 10403: 7b 67 30                 u64 [s1 + 0x30] = a0
 10406: 33 07 f8 0c 01           a0 = 0x10cf8
 10411: 7b 17 98 01              u64 [sp + 0x198] = a0
 10415: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10420: 49 21 b8 01              u64 [sp + 440] = 0
 10424: 95 17 ff 07              a0 = sp + 0x7ff
 10428: 95 77 b1 03              a0 = a0 + 0x3b1
 10432: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10436: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10441: 95 17 ff 07              a0 = sp + 0x7ff
 10445: 95 77 e1 03              a0 = a0 + 0x3e1
 10449: 95 18 98 01              a1 = sp + 0x198
 10453: 50 20 28 01 15 03        ra = 296, jump @636
      :                          @559 [@dyn 148]
 10459: 82 65 50                 s0 = u64 [s1 + 0x50]
 10462: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10465: 82 66 48                 s1 = u64 [s1 + 0x48]
 10468: 33 07 02                 a0 = 0x2
 10471: 33 08                    a1 = 0
 10473: 33 09                    a2 = 0
 10475: 64 5a                    a3 = s0
 10477: 33 00 2a 01              ra = 0x12a
 10481: 0a 64                    ecalli 100 // 'log'
 10483: 01                       fallthrough
      :                          @560 [@dyn 149]
 10484: 82 17 48                 a0 = u64 [sp + 0x48]
 10487: c8 67 07                 a0 = a0 + s1
 10490: 53 27 00 f0 25           jump @566 if a0 <u 4294963200
      :                          @561
 10495: 33 07 20 00 03           a0 = 0x30020
 10500: 95 77 00 10              a0 = a0 + 0x1000
 10504: 01                       fallthrough
      :                          @562
 10505: 82 78                    a1 = u64 [a0]
 10507: c9 87 09                 a2 = a0 - a1
 10510: ab 59 11                 jump @566 if a2 != s0
      :                          @563
 10513: c9 68 09                 a2 = a1 - s1
 10516: 01                       fallthrough
      :                          @564
 10517: 82 7a                    a3 = u64 [a0]
 10519: ab 8a f2                 jump @562 if a3 != a1
      :                          @565
 10522: 7b 79                    u64 [a0] = a2
 10524: 33 0b                    a4 = 0
 10526: 01                       fallthrough
      :                          @566
 10527: 49 21 b0 01              u64 [sp + 432] = 0
 10531: 49 21 a8 01              u64 [sp + 424] = 0
 10535: 49 21 a0 01              u64 [sp + 416] = 0
 10539: 49 21 98 01              u64 [sp + 408] = 0
 10543: 82 19 20                 a2 = u64 [sp + 0x20]
 10546: 82 1a 28                 a3 = u64 [sp + 0x28]
 10549: 55 19 21 79              jump @577 if a2 >=u 33
      :                          @567
 10553: 97 a6 20                 s1 = a3 << 0x20
 10556: 98 66 20                 s1 = s1 >> 0x20
 10559: 95 17 98 01              a0 = sp + 0x198
 10563: 95 15 98 01              s0 = sp + 0x198
 10567: 82 18 18                 a1 = u64 [sp + 0x18]
 10570: 50 20 2c 01 15 05        ra = 300, jump @686
      :                          @568 [@dyn 150]
 10576: 3a 08 00 00 03           a1 = u64 [0x30000]
 10581: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 10591: ca 76 07                 a0 = s1 * a0
 10594: ae 87 2c                 jump @573 if a0 >=u a1
      :                          @569
 10597: 82 18 28                 a1 = u64 [sp + 0x28]
 10600: 51 18 09 18              jump @571 if a1 == 9
      :                          @570
 10604: 0a 08                    ecalli 8 // 'checkpoint'
 10606: 33 0a ae 04 01           a3 = 0x104ae
 10611: 33 07 02                 a0 = 0x2
 10614: 33 0b 11                 a4 = 0x11
 10617: 33 08                    a1 = 0
 10619: 33 09                    a2 = 0
 10621: 0a 64                    ecalli 100 // 'log'
 10623: 01                       fallthrough
      :                          @571
 10624: 95 67 2a                 a0 = s1 + 0x2a
 10627: 33 08 07                 a1 = 0x7
 10630: 50 20 2e 01 5f 12        ra = 302, jump @970
      :                          @572 [@dyn 151]
 10636: 32 07                    jump [a0]
      :                          @573
 10638: 95 17 98 01              a0 = sp + 0x198
 10642: 0a 10                    ecalli 16 // 'oyield'
 10644: 33 0a 3d 03 01           a3 = 0x1033d
 10649: 33 07 02                 a0 = 0x2
 10652: 33 0b 10                 a4 = 0x10
 10655: 33 08                    a1 = 0
 10657: 33 09                    a2 = 0
 10659: 0a 64                    ecalli 100 // 'log'
 10661: 33 08 20                 a1 = 0x20
 10664: 28 0a e4                 jump @219
      :                          @574
 10667: 00                       trap
      :                          @575
 10668: 00                       trap
      :                          @576
 10669: 00                       trap
      :                          @577
 10670: 00                       trap
      :                          @578
 10671: 00                       trap
      :                          @579 [export #2: 'on_transfer']
 10672: 33 07 00 00 01           a0 = 0x10000
 10677: 33 08                    a1 = 0
 10679: 32 00                    ret
      :                          @580
 10681: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 10684: 7b 10 40                 u64 [sp + 0x40] = ra
 10687: 7b 15 38                 u64 [sp + 0x38] = s0
 10690: 7b 16 30                 u64 [sp + 0x30] = s1
 10693: c8 89 09                 a2 = a2 + a1
 10696: ac 89 53                 jump @588 if a2 <u a1
      :                          @581
 10699: 64 75                    s0 = a0
 10701: 82 77                    a0 = u64 [a0]
 10703: 97 78 01                 a1 = a0 << 0x1
 10706: 33 0a 08                 a3 = 0x8
 10709: e4 a9 09                 a2 = maxu(a2, a3)
 10712: e4 98 06                 s1 = maxu(a1, a2)
 10715: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 10718: 98 88 3f                 a1 = a1 >> 0x3f
 10721: 51 07 12                 jump @583 if a0 == 0
      :                          @582
 10724: 82 59 08                 a2 = u64 [s0 + 0x8]
 10727: 7b 19 18                 u64 [sp + 0x18] = a2
 10730: 49 11 20 01              u64 [sp + 32] = 0x1
 10734: 7b 17 28                 u64 [sp + 0x28] = a0
 10737: 28 06                    jump @584
      :                          @583
 10739: 49 11 20                 u64 [sp + 32] = 0
 10742: 01                       fallthrough
      :                          @584
 10743: 64 17                    a0 = sp
 10745: 95 1a 18                 a3 = sp + 0x18
 10748: 64 69                    a2 = s1
 10750: 50 20 30 01 33           ra = 304, jump @592
      :                          @585 [@dyn 152]
 10755: 82 18                    a1 = u64 [sp]
 10757: 82 17 08                 a0 = u64 [sp + 0x8]
 10760: 51 08 14                 jump @589 if a1 == 0
      :                          @586
 10763: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 10773: aa 87 0d                 jump @590 if a0 == a1
      :                          @587
 10776: 52 07 18                 jump @591 if a0 != 0
      :                          @588
 10779: 00                       trap
      :                          @589
 10780: 7b 57 08                 u64 [s0 + 0x8] = a0
 10783: 7b 56                    u64 [s0] = s1
 10785: 01                       fallthrough
      :                          @590
 10786: 82 10 40                 ra = u64 [sp + 0x40]
 10789: 82 15 38                 s0 = u64 [sp + 0x38]
 10792: 82 16 30                 s1 = u64 [sp + 0x30]
 10795: 95 11 48                 sp = sp + 0x48
 10798: 32 00                    ret
      :                          @591
 10800: 00                       trap
      :                          @592
 10801: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10804: 7b 10 30                 u64 [sp + 0x30] = ra
 10807: 7b 15 28                 u64 [sp + 0x28] = s0
 10810: 7b 16 20                 u64 [sp + 0x20] = s1
 10813: 64 96                    s1 = a2
 10815: 64 73                    t1 = a0
 10817: 51 08 6f                 jump @602 if a1 == 0
      :                          @593
 10820: 82 a7 08                 a0 = u64 [a3 + 0x8]
 10823: 51 07 72                 jump @603 if a0 == 0
      :                          @594
 10826: 82 a9 10                 a2 = u64 [a3 + 0x10]
 10829: 51 09 9f 00              jump @610 if a2 == 0
      :                          @595
 10833: 82 a8                    a1 = u64 [a3]
 10835: 33 02 00 10              t0 = 0x1000
 10839: 33 04 20 00 03           t2 = 0x30020
 10844: c8 24 07                 a0 = t2 + t0
 10847: 01                       fallthrough
      :                          @596
 10848: 82 7a                    a3 = u64 [a0]
 10850: c8 6a 05                 s0 = a3 + s1
 10853: ac a5 c3 00              jump @616 if s0 <u a3
      :                          @597
 10857: 95 5b 01                 a4 = s0 + 0x1
 10860: 88 bc 01                 a5 = a4 <u 0x1
 10863: d8 b2 0b                 a4 = t0 <u a4
 10866: d4 cb 0b                 a4 = a4 | a5
 10869: 52 0b b3 00              jump @616 if a4 != 0
      :                          @598
 10873: 82 7b                    a4 = u64 [a0]
 10875: ab ab e5                 jump @596 if a4 != a3
      :                          @599
 10878: 7b 75                    u64 [a0] = s0
 10880: 33 0c                    a5 = 0
 10882: 7b 13 18                 u64 [sp + 0x18] = t1
 10885: c9 54 07                 a0 = t2 - s0
 10888: 95 77 00 10              a0 = a0 + 0x1000
 10892: 7b 17 10                 u64 [sp + 0x10] = a0
 10895: 7b 18 08                 u64 [sp + 0x8] = a1
 10898: 64 95                    s0 = a2
 10900: 7b 14                    u64 [sp] = t2
 10902: 50 20 32 01 c9 03        ra = 306, jump @686
      :                          @600 [@dyn 153]
 10908: 54 25 00 10 94 00        jump @617 if s0 <=u 4096
      :                          @601
 10914: 82 13 18                 t1 = u64 [sp + 0x18]
 10917: 82 18 10                 a1 = u64 [sp + 0x10]
 10920: 33 07                    a0 = 0
 10922: 7b 38 08                 u64 [t1 + 0x8] = a1
 10925: 28 b1 00                 jump @623
      :                          @602
 10928: 49 13 08                 u64 [t1 + 8] = 0
 10931: 33 07 01                 a0 = 0x1
 10934: 28 a8 00                 jump @623
      :                          @603
 10937: 33 07 00 10              a0 = 0x1000
 10941: 33 02 20 00 03           t0 = 0x30020
 10946: c8 72 09                 a2 = t0 + a0
 10949: 01                       fallthrough
      :                          @604
 10950: 82 9b                    a4 = u64 [a2]
 10952: c8 6b 0a                 a3 = a4 + s1
 10955: ac ba 5d                 jump @616 if a3 <u a4
      :                          @605
 10958: 95 ac 01                 a5 = a3 + 0x1
 10961: 88 c8 01                 a1 = a5 <u 0x1
 10964: d8 c7 0c                 a5 = a0 <u a5
 10967: d4 c8 08                 a1 = a1 | a5
 10970: 52 08 4e                 jump @616 if a1 != 0
      :                          @606
 10973: 82 98                    a1 = u64 [a2]
 10975: ab b8 e7                 jump @604 if a1 != a4
      :                          @607
 10978: 7b 9a                    u64 [a2] = a3
 10980: 33 0c                    a5 = 0
 10982: 01                       fallthrough
      :                          @608
 10983: ab b8 df                 jump @604 if a1 != a4
      :                          @609
 10986: 28 30                    jump @615
      :                          @610
 10988: 33 07 00 10              a0 = 0x1000
 10992: 33 02 20 00 03           t0 = 0x30020
 10997: c8 72 09                 a2 = t0 + a0
 11000: 01                       fallthrough
      :                          @611
 11001: 82 9b                    a4 = u64 [a2]
 11003: c8 6b 0a                 a3 = a4 + s1
 11006: ac ba 2a                 jump @616 if a3 <u a4
      :                          @612
 11009: 95 ac 01                 a5 = a3 + 0x1
 11012: 88 c8 01                 a1 = a5 <u 0x1
 11015: d8 c7 0c                 a5 = a0 <u a5
 11018: d4 c8 08                 a1 = a1 | a5
 11021: 52 08 1b                 jump @616 if a1 != 0
      :                          @613
 11024: 82 98                    a1 = u64 [a2]
 11026: ab b8 e7                 jump @611 if a1 != a4
      :                          @614
 11029: 7b 9a                    u64 [a2] = a3
 11031: 33 0c                    a5 = 0
 11033: 01                       fallthrough
      :                          @615
 11034: c9 a2 07                 a0 = t0 - a3
 11037: 95 78 00 10              a1 = a0 + 0x1000
 11041: 33 07                    a0 = 0
 11043: 7b 38 08                 u64 [t1 + 0x8] = a1
 11046: 28 38                    jump @623
      :                          @616
 11048: 33 07 01                 a0 = 0x1
 11051: 7b 37 08                 u64 [t1 + 0x8] = a0
 11054: 28 30                    jump @623
      :                          @617
 11056: 64 5c                    a5 = s0
 11058: 82 18                    a1 = u64 [sp]
 11060: 95 87 00 10              a0 = a1 + 0x1000
 11064: 82 13 18                 t1 = u64 [sp + 0x18]
 11067: 82 15 08                 s0 = u64 [sp + 0x8]
 11070: 01                       fallthrough
      :                          @618
 11071: 82 78                    a1 = u64 [a0]
 11073: c9 87 09                 a2 = a0 - a1
 11076: ab 59 11                 jump @622 if a2 != s0
      :                          @619
 11079: c9 c8 09                 a2 = a1 - a5
 11082: 01                       fallthrough
      :                          @620
 11083: 82 7a                    a3 = u64 [a0]
 11085: ab 8a f2                 jump @618 if a3 != a1
      :                          @621
 11088: 7b 79                    u64 [a0] = a2
 11090: 33 0b                    a4 = 0
 11092: 01                       fallthrough
      :                          @622
 11093: 82 18 10                 a1 = u64 [sp + 0x10]
 11096: 33 07                    a0 = 0
 11098: 7b 38 08                 u64 [t1 + 0x8] = a1
 11101: 01                       fallthrough
      :                          @623
 11102: 7b 36 10                 u64 [t1 + 0x10] = s1
 11105: 7b 37                    u64 [t1] = a0
 11107: 82 10 30                 ra = u64 [sp + 0x30]
 11110: 82 15 28                 s0 = u64 [sp + 0x28]
 11113: 82 16 20                 s1 = u64 [sp + 0x20]
 11116: 95 11 38                 sp = sp + 0x38
 11119: 32 00                    ret
      :                          @624
 11121: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 11124: 7b 10 40                 u64 [sp + 0x40] = ra
 11127: 7b 15 38                 u64 [sp + 0x38] = s0
 11130: 7b 16 30                 u64 [sp + 0x30] = s1
 11133: 95 88 01                 a1 = a1 + 0x1
 11136: 51 08 54                 jump @632 if a1 == 0
      :                          @625
 11139: 64 75                    s0 = a0
 11141: 82 77                    a0 = u64 [a0]
 11143: 97 79 01                 a2 = a0 << 0x1
 11146: 33 0a 08                 a3 = 0x8
 11149: e4 a8 08                 a1 = maxu(a1, a3)
 11152: e4 89 06                 s1 = maxu(a2, a1)
 11155: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 11158: 98 88 3f                 a1 = a1 >> 0x3f
 11161: 51 07 12                 jump @627 if a0 == 0
      :                          @626
 11164: 82 59 08                 a2 = u64 [s0 + 0x8]
 11167: 7b 19 18                 u64 [sp + 0x18] = a2
 11170: 49 11 20 01              u64 [sp + 32] = 0x1
 11174: 7b 17 28                 u64 [sp + 0x28] = a0
 11177: 28 06                    jump @628
      :                          @627
 11179: 49 11 20                 u64 [sp + 32] = 0
 11182: 01                       fallthrough
      :                          @628
 11183: 64 17                    a0 = sp
 11185: 95 1a 18                 a3 = sp + 0x18
 11188: 64 69                    a2 = s1
 11190: 50 20 34 01 7b fe        ra = 308, jump @592
      :                          @629 [@dyn 154]
 11196: 82 18                    a1 = u64 [sp]
 11198: 82 17 08                 a0 = u64 [sp + 0x8]
 11201: 51 08 14                 jump @633 if a1 == 0
      :                          @630
 11204: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 11214: aa 87 0d                 jump @634 if a0 == a1
      :                          @631
 11217: 52 07 18                 jump @635 if a0 != 0
      :                          @632
 11220: 00                       trap
      :                          @633
 11221: 7b 57 08                 u64 [s0 + 0x8] = a0
 11224: 7b 56                    u64 [s0] = s1
 11226: 01                       fallthrough
      :                          @634
 11227: 82 10 40                 ra = u64 [sp + 0x40]
 11230: 82 15 38                 s0 = u64 [sp + 0x38]
 11233: 82 16 30                 s1 = u64 [sp + 0x30]
 11236: 95 11 48                 sp = sp + 0x48
 11239: 32 00                    ret
      :                          @635
 11241: 00                       trap
      :                          @636
 11242: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11245: 7b 10 30                 u64 [sp + 0x30] = ra
 11248: 7b 15 28                 u64 [sp + 0x28] = s0
 11251: 7b 16 20                 u64 [sp + 0x20] = s1
 11254: 64 89                    a2 = a1
 11256: 82 8a 08                 a3 = u64 [a1 + 0x8]
 11259: 64 75                    s0 = a0
 11261: 51 0a 35                 jump @641 if a3 == 0
      :                          @637
 11264: 82 98                    a1 = u64 [a2]
 11266: 33 07                    a0 = 0
 11268: 95 8b 08                 a4 = a1 + 0x8
 11271: 01                       fallthrough
      :                          @638
 11272: 82 bc                    a5 = u64 [a4]
 11274: c8 c7 07                 a0 = a0 + a5
 11277: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 11280: 95 bb 10                 a4 = a4 + 0x10
 11283: 52 0a f5                 jump @638 if a3 != 0
      :                          @639
 11286: 82 9a 18                 a3 = u64 [a2 + 0x18]
 11289: 51 0a 24                 jump @643 if a3 == 0
      :                          @640
 11292: 82 88 08                 a1 = u64 [a1 + 0x8]
 11295: 8e 88                    a1 = a1 >u 0
 11297: 88 7a 10                 a3 = a0 <u 0x10
 11300: 85 aa 01                 a3 = a3 ^ 0x1
 11303: d4 a8 08                 a1 = a1 | a3
 11306: 89 7a                    a3 = a0 <s 0
 11308: e0 a8 08                 a1 = a1 & ~a3
 11311: 52 08 0a                 jump @642 if a1 != 0
      :                          @641
 11314: 33 07                    a0 = 0
 11316: 33 08 01                 a1 = 0x1
 11319: 28 48                    jump @651
      :                          @642
 11321: 97 77 01                 a0 = a0 << 0x1
 11324: 01                       fallthrough
      :                          @643
 11325: 51 07 3e                 jump @650 if a0 == 0
      :                          @644
 11328: 57 07 77                 jump @656 if a0 <s 0
      :                          @645
 11331: 64 53                    t1 = s0
 11333: 33 08 00 10              a1 = 0x1000
 11337: 33 02 20 00 03           t0 = 0x30020
 11342: c8 82 0b                 a4 = t0 + a1
 11345: 01                       fallthrough
      :                          @646
 11346: 82 bc                    a5 = u64 [a4]
 11348: c8 7c 0a                 a3 = a5 + a0
 11351: ac ca 5e                 jump @654 if a3 <u a5
      :                          @647
 11354: 95 a5 01                 s0 = a3 + 0x1
 11357: 88 56 01                 s1 = s0 <u 0x1
 11360: d8 58 05                 s0 = a1 <u s0
 11363: d4 65 05                 s0 = s0 | s1
 11366: 52 05 4f                 jump @654 if s0 != 0
      :                          @648
 11369: 82 b6                    s1 = u64 [a4]
 11371: ab c6 e7                 jump @646 if s1 != a5
      :                          @649
 11374: 7b ba                    u64 [a4] = a3
 11376: c9 a2 08                 a1 = t0 - a3
 11379: 95 88 00 10              a1 = a1 + 0x1000
 11383: 64 35                    s0 = t1
 11385: 28 06                    jump @651
      :                          @650
 11387: 33 08 01                 a1 = 0x1
 11390: 01                       fallthrough
      :                          @651
 11391: 7b 17                    u64 [sp] = a0
 11393: 7b 18 08                 u64 [sp + 0x8] = a1
 11396: 49 11 10                 u64 [sp + 16] = 0
 11399: 33 08 28 0d 01           a1 = 0x10d28
 11404: 64 17                    a0 = sp
 11406: 50 20 36 01 56 0a        ra = 310, jump @854
      :                          @652 [@dyn 155]
 11412: 52 07 22                 jump @655 if a0 != 0
      :                          @653
 11415: 82 17 10                 a0 = u64 [sp + 0x10]
 11418: 82 18 08                 a1 = u64 [sp + 0x8]
 11421: 82 19                    a2 = u64 [sp]
 11423: 7b 57 10                 u64 [s0 + 0x10] = a0
 11426: 7b 58 08                 u64 [s0 + 0x8] = a1
 11429: 7b 59                    u64 [s0] = a2
 11431: 82 10 30                 ra = u64 [sp + 0x30]
 11434: 82 15 28                 s0 = u64 [sp + 0x28]
 11437: 82 16 20                 s1 = u64 [sp + 0x20]
 11440: 95 11 38                 sp = sp + 0x38
 11443: 32 00                    ret
      :                          @654
 11445: 00                       trap
      :                          @655
 11446: 00                       trap
      :                          @656
 11447: 00                       trap
      :                          @657 [@dyn 156]
 11448: 82 72                    t0 = u64 [a0]
 11450: 33 09 00 f0              a2 = 0xfffffffffffff000
 11454: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 11458: ac 9a 27                 jump @663 if a3 <u a2
      :                          @658
 11461: 82 77 08                 a0 = u64 [a0 + 0x8]
 11464: 33 09 20 00 03           a2 = 0x30020
 11469: 95 99 00 10              a2 = a2 + 0x1000
 11473: 01                       fallthrough
      :                          @659
 11474: 82 9a                    a3 = u64 [a2]
 11476: c9 a9 0b                 a4 = a2 - a3
 11479: ab 7b 12                 jump @663 if a4 != a0
      :                          @660
 11482: c9 2a 0b                 a4 = a3 - t0
 11485: 01                       fallthrough
      :                          @661
 11486: 82 9c                    a5 = u64 [a2]
 11488: ab ac f2                 jump @659 if a5 != a3
      :                          @662
 11491: 7b 9b                    u64 [a2] = a4
 11493: 33 08                    a1 = 0
 11495: 32 00                    ret
      :                          @663
 11497: 32 00                    ret
      :                          @664 [@dyn 157]
 11499: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11502: 7b 10 18                 u64 [sp + 0x18] = ra
 11505: 7b 15 10                 u64 [sp + 0x10] = s0
 11508: 7b 16 08                 u64 [sp + 0x8] = s1
 11511: 64 75                    s0 = a0
 11513: 82 7a 10                 a3 = u64 [a0 + 0x10]
 11516: 82 77                    a0 = u64 [a0]
 11518: c9 a7 07                 a0 = a0 - a3
 11521: 64 96                    s1 = a2
 11523: ac 97 2b                 jump @667 if a0 <u a2
      :                          @665
 11526: 7b 1a                    u64 [sp] = a3
 11528: 82 57 08                 a0 = u64 [s0 + 0x8]
 11531: c8 a7 07                 a0 = a0 + a3
 11534: 64 69                    a2 = s1
 11536: 50 20 3c 01 4f 01        ra = 316, jump @686
      :                          @666 [@dyn 158]
 11542: 82 17                    a0 = u64 [sp]
 11544: c8 76 06                 s1 = s1 + a0
 11547: 7b 56 10                 u64 [s0 + 0x10] = s1
 11550: 33 07                    a0 = 0
 11552: 82 10 18                 ra = u64 [sp + 0x18]
 11555: 82 15 10                 s0 = u64 [sp + 0x10]
 11558: 82 16 08                 s1 = u64 [sp + 0x8]
 11561: 95 11 20                 sp = sp + 0x20
 11564: 32 00                    ret
      :                          @667
 11566: 64 57                    a0 = s0
 11568: 7b 18                    u64 [sp] = a1
 11570: 64 a8                    a1 = a3
 11572: 64 69                    a2 = s1
 11574: 50 20 3e 01 83 fc        ra = 318, jump @580
      :                          @668 [@dyn 159]
 11580: 82 18                    a1 = u64 [sp]
 11582: 82 5a 10                 a3 = u64 [s0 + 0x10]
 11585: 28 c5                    jump @665
      :                          @669 [@dyn 160]
 11587: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 11590: 7b 10 20                 u64 [sp + 0x20] = ra
 11593: 7b 15 18                 u64 [sp + 0x18] = s0
 11596: 7b 16 10                 u64 [sp + 0x10] = s1
 11599: 64 86                    s1 = a1
 11601: 83 88                    i32 a1 = a1 + 0
 11603: 33 09 80 00              a2 = 0x80
 11607: 64 7a                    a3 = a0
 11609: ae 98 2c                 jump @674 if a1 >=u a2
      :                          @670
 11612: 82 a8 10                 a1 = u64 [a3 + 0x10]
 11615: 82 a7                    a0 = u64 [a3]
 11617: ab 78 13                 jump @673 if a1 != a0
      :                          @671
 11620: 64 a7                    a0 = a3
 11622: 64 a5                    s0 = a3
 11624: 50 20 42 01 09 fe        ra = 322, jump @624
      :                          @672 [@dyn 161]
 11630: 64 5a                    a3 = s0
 11632: 82 58 10                 a1 = u64 [s0 + 0x10]
 11635: 01                       fallthrough
      :                          @673
 11636: 82 a7 08                 a0 = u64 [a3 + 0x8]
 11639: c8 87 07                 a0 = a0 + a1
 11642: 78 76                    u8 [a0] = s1
 11644: 95 88 01                 a1 = a1 + 0x1
 11647: 7b a8 10                 u64 [a3 + 0x10] = a1
 11650: 28 ac 00                 jump @682
      :                          @674
 11653: 8b 67 0b                 i32 a0 = s1 >> 0xb
 11656: 48 11 0c                 u32 [sp + 12] = 0
 11659: 52 07 1c                 jump @676 if a0 != 0
      :                          @675
 11662: 98 67 06                 a0 = s1 >> 0x6
 11665: 86 77 c0 00              a0 = a0 | 0xc0
 11669: 78 17 0c                 u8 [sp + 0xc] = a0
 11672: 84 67 3f                 a0 = s1 & 0x3f
 11675: 86 77 80 00              a0 = a0 | 0x80
 11679: 78 17 0d                 u8 [sp + 0xd] = a0
 11682: 33 06 02                 s1 = 0x2
 11685: 28 63                    jump @679
      :                          @676
 11687: 8b 67 10                 i32 a0 = s1 >> 0x10
 11690: 52 07 29                 jump @678 if a0 != 0
      :                          @677
 11693: 98 67 0c                 a0 = s1 >> 0xc
 11696: 86 77 e0 00              a0 = a0 | 0xe0
 11700: 78 17 0c                 u8 [sp + 0xc] = a0
 11703: 97 67 34                 a0 = s1 << 0x34
 11706: 98 77 3a                 a0 = a0 >> 0x3a
 11709: 95 77 80 00              a0 = a0 + 0x80
 11713: 78 17 0d                 u8 [sp + 0xd] = a0
 11716: 84 67 3f                 a0 = s1 & 0x3f
 11719: 86 77 80 00              a0 = a0 | 0x80
 11723: 78 17 0e                 u8 [sp + 0xe] = a0
 11726: 33 06 03                 s1 = 0x3
 11729: 28 37                    jump @679
      :                          @678
 11731: 97 67 2b                 a0 = s1 << 0x2b
 11734: 98 77 3d                 a0 = a0 >> 0x3d
 11737: 95 77 f0 00              a0 = a0 + 0xf0
 11741: 78 17 0c                 u8 [sp + 0xc] = a0
 11744: 97 67 2e                 a0 = s1 << 0x2e
 11747: 98 77 3a                 a0 = a0 >> 0x3a
 11750: 95 77 80 00              a0 = a0 + 0x80
 11754: 78 17 0d                 u8 [sp + 0xd] = a0
 11757: 97 67 34                 a0 = s1 << 0x34
 11760: 98 77 3a                 a0 = a0 >> 0x3a
 11763: 95 77 80 00              a0 = a0 + 0x80
 11767: 78 17 0e                 u8 [sp + 0xe] = a0
 11770: 84 67 3f                 a0 = s1 & 0x3f
 11773: 86 77 80 00              a0 = a0 | 0x80
 11777: 78 17 0f                 u8 [sp + 0xf] = a0
 11780: 33 06 04                 s1 = 0x4
 11783: 01                       fallthrough
      :                          @679
 11784: 82 a5 10                 s0 = u64 [a3 + 0x10]
 11787: 82 a7                    a0 = u64 [a3]
 11789: c9 57 07                 a0 = a0 - s0
 11792: ac 67 2e                 jump @683 if a0 <u s1
      :                          @680
 11795: 7b 1a                    u64 [sp] = a3
 11797: 82 a7 08                 a0 = u64 [a3 + 0x8]
 11800: c8 57 07                 a0 = a0 + s0
 11803: 95 18 0c                 a1 = sp + 0xc
 11806: 64 69                    a2 = s1
 11808: 50 20 44 01 3f           ra = 324, jump @686
      :                          @681 [@dyn 162]
 11813: c8 56 06                 s1 = s1 + s0
 11816: 82 17                    a0 = u64 [sp]
 11818: 7b 76 10                 u64 [a0 + 0x10] = s1
 11821: 01                       fallthrough
      :                          @682
 11822: 33 07                    a0 = 0
 11824: 82 10 20                 ra = u64 [sp + 0x20]
 11827: 82 15 18                 s0 = u64 [sp + 0x18]
 11830: 82 16 10                 s1 = u64 [sp + 0x10]
 11833: 95 11 28                 sp = sp + 0x28
 11836: 32 00                    ret
      :                          @683
 11838: 64 a7                    a0 = a3
 11840: 64 58                    a1 = s0
 11842: 64 69                    a2 = s1
 11844: 64 a5                    s0 = a3
 11846: 50 20 46 01 73 fb        ra = 326, jump @580
      :                          @684 [@dyn 163]
 11852: 64 5a                    a3 = s0
 11854: 82 55 10                 s0 = u64 [s0 + 0x10]
 11857: 28 c2                    jump @680
      :                          @685 [@dyn 164]
 11859: 64 8a                    a3 = a1
 11861: 33 08 28 0d 01           a1 = 0x10d28
 11866: 64 a9                    a2 = a3
 11868: 28 88 08                 jump @854
      :                          @686
 11871: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11874: 7b 10 18                 u64 [sp + 0x18] = ra
 11877: 7b 15 10                 u64 [sp + 0x10] = s0
 11880: 7b 16 08                 u64 [sp + 0x8] = s1
 11883: 53 19 10 64              jump @695 if a2 <u 16
      :                          @687
 11887: 8d 7a                    i32 a3 = -a0
 11889: 84 a2 07                 t0 = a3 & 0x7
 11892: c8 27 0b                 a4 = a0 + t0
 11895: 51 02 15                 jump @690 if t0 == 0
      :                          @688
 11898: 64 8c                    a5 = a1
 11900: 64 75                    s0 = a0
 11902: 01                       fallthrough
      :                          @689
 11903: 7c ca                    a3 = u8 [a5]
 11905: 78 5a                    u8 [s0] = a3
 11907: 95 55 01                 s0 = s0 + 0x1
 11910: 95 cc 01                 a5 = a5 + 0x1
 11913: ac b5 f6                 jump @689 if s0 <u a4
      :                          @690
 11916: c8 28 03                 t1 = a1 + t0
 11919: c9 29 02                 t0 = a2 - t0
 11922: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 11925: 84 38 07                 a1 = t1 & 0x7
 11928: c8 4b 0a                 a3 = a4 + t2
 11931: 51 08 3b                 jump @697 if a1 == 0
      :                          @691
 11934: 58 04 4b                 jump @700 if t2 <=s 0
      :                          @692
 11937: 97 38 03                 a1 = t1 << 0x3
 11940: 84 80 38                 ra = a1 & 0x38
 11943: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 11946: 82 c5                    s0 = u64 [a5]
 11948: 8d 88                    i32 a1 = -a1
 11950: 84 88 38                 a1 = a1 & 0x38
 11953: 95 cc 08                 a5 = a5 + 0x8
 11956: 01                       fallthrough
      :                          @693
 11957: 82 c6                    s1 = u64 [a5]
 11959: d0 05 05                 s0 = s0 >> ra
 11962: cf 86 09                 a2 = s1 << a1
 11965: d4 59 09                 a2 = a2 | s0
 11968: 7b b9                    u64 [a4] = a2
 11970: 95 bb 08                 a4 = a4 + 0x8
 11973: 95 cc 08                 a5 = a5 + 0x8
 11976: 64 65                    s0 = s1
 11978: ac ab eb                 jump @693 if a4 <u a3
      :                          @694
 11981: 28 1c                    jump @700
      :                          @695
 11983: 64 7a                    a3 = a0
 11985: 52 09 21                 jump @701 if a2 != 0
      :                          @696
 11988: 28 2f                    jump @703
      :                          @697
 11990: 58 04 13                 jump @700 if t2 <=s 0
      :                          @698
 11993: 64 38                    a1 = t1
 11995: 01                       fallthrough
      :                          @699
 11996: 82 89                    a2 = u64 [a1]
 11998: 7b b9                    u64 [a4] = a2
 12000: 95 bb 08                 a4 = a4 + 0x8
 12003: 95 88 08                 a1 = a1 + 0x8
 12006: ac ab f6                 jump @699 if a4 <u a3
      :                          @700
 12009: c8 43 08                 a1 = t1 + t2
 12012: 84 29 07                 a2 = t0 & 0x7
 12015: 51 09 14                 jump @703 if a2 == 0
      :                          @701
 12018: c8 a9 09                 a2 = a2 + a3
 12021: 01                       fallthrough
      :                          @702
 12022: 7c 8b                    a4 = u8 [a1]
 12024: 78 ab                    u8 [a3] = a4
 12026: 95 aa 01                 a3 = a3 + 0x1
 12029: 95 88 01                 a1 = a1 + 0x1
 12032: ac 9a f6                 jump @702 if a3 <u a2
      :                          @703
 12035: 82 10 18                 ra = u64 [sp + 0x18]
 12038: 82 15 10                 s0 = u64 [sp + 0x10]
 12041: 82 16 08                 s1 = u64 [sp + 0x8]
 12044: 95 11 20                 sp = sp + 0x20
 12047: 32 00                    ret
      :                          @704
 12049: 53 19 10 48              jump @713 if a2 <u 16
      :                          @705
 12053: 8d 7a                    i32 a3 = -a0
 12055: 84 aa 07                 a3 = a3 & 0x7
 12058: c8 a7 0b                 a4 = a0 + a3
 12061: 51 0a 0e                 jump @708 if a3 == 0
      :                          @706
 12064: 64 7c                    a5 = a0
 12066: 01                       fallthrough
      :                          @707
 12067: 78 c8                    u8 [a5] = a1
 12069: 95 cc 01                 a5 = a5 + 0x1
 12072: ac bc fb                 jump @707 if a5 <u a4
      :                          @708
 12075: c9 a9 03                 t1 = a2 - a3
 12078: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 12081: c8 cb 0a                 a3 = a4 + a5
 12084: 58 0c 1d                 jump @711 if a5 <=s 0
      :                          @709
 12087: 84 82 ff 00              t0 = a1 & 0xff
 12091: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 12101: ca 92 0c                 a5 = t0 * a2
 12104: 01                       fallthrough
      :                          @710
 12105: 7b bc                    u64 [a4] = a5
 12107: 95 bb 08                 a4 = a4 + 0x8
 12110: ac ab fb                 jump @710 if a4 <u a3
      :                          @711
 12113: 84 39 07                 a2 = t1 & 0x7
 12116: 52 09 0a                 jump @714 if a2 != 0
      :                          @712
 12119: 28 13                    jump @716
      :                          @713
 12121: 64 7a                    a3 = a0
 12123: 51 09 0f                 jump @716 if a2 == 0
      :                          @714
 12126: c8 a9 09                 a2 = a2 + a3
 12129: 01                       fallthrough
      :                          @715
 12130: 78 a8                    u8 [a3] = a1
 12132: 95 aa 01                 a3 = a3 + 0x1
 12135: ac 9a fb                 jump @715 if a3 <u a2
      :                          @716
 12138: 32 00                    ret
      :                          @717 [@dyn 165]
 12140: 82 77                    a0 = u64 [a0]
 12142: 01                       fallthrough
      :                          @718
 12143: 28                       jump @718
      :                          @719
 12144: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 12147: 7b 10 50                 u64 [sp + 0x50] = ra
 12150: 7b 15 48                 u64 [sp + 0x48] = s0
 12153: 7b 16 40                 u64 [sp + 0x40] = s1
 12156: 7b 18                    u64 [sp] = a1
 12158: 98 79 04                 a2 = a0 >> 0x4
 12161: 33 08 27                 a1 = 0x27
 12164: 33 0a df 04 01           a3 = 0x104df
 12169: 53 29 71 02 7b           jump @722 if a2 <u 625
      :                          @720
 12174: 33 08 27                 a1 = 0x27
 12177: 95 1b 3e                 a4 = sp + 0x3e
 12180: 3a 09 08 00 03           a2 = u64 [0x30008]
 12185: 7b 19 10                 u64 [sp + 0x10] = a2
 12188: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 12194: 33 03 7b 14              t1 = 0x147b
 12198: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 12204: 01                       fallthrough
      :                          @721
 12205: 64 72                    t0 = a0
 12207: 82 17 10                 a0 = u64 [sp + 0x10]
 12210: d6 72 07                 a0 = t0 mulhu a0
 12213: 98 77 0b                 a0 = a0 >> 0xb
 12216: 82 19 08                 a2 = u64 [sp + 0x8]
 12219: c0 97 09                 i32 a2 = a0 * a2
 12222: c8 29 06                 s1 = a2 + t0
 12225: 97 69 30                 a2 = s1 << 0x30
 12228: 98 99 32                 a2 = a2 >> 0x32
 12231: ca 39 09                 a2 = a2 * t1
 12234: 98 94 11                 t2 = a2 >> 0x11
 12237: 98 99 10                 a2 = a2 >> 0x10
 12240: 84 99 fe 07              a2 = a2 & 0x7fe
 12244: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
 12247: c8 6c 0c                 a5 = a5 + s1
 12250: 97 cc 31                 a5 = a5 << 0x31
 12253: 98 cc 30                 a5 = a5 >> 0x30
 12256: c8 a9 09                 a2 = a2 + a3
 12259: 7c 96                    s1 = u8 [a2]
 12261: 7c 99 01                 a2 = u8 [a2 + 0x1]
 12264: c8 ac 0c                 a5 = a5 + a3
 12267: 7c c5 01                 s0 = u8 [a5 + 0x1]
 12270: 7c cc                    a5 = u8 [a5]
 12272: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
 12275: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
 12278: 78 b5 01                 u8 [a4 + 0x1] = s0
 12281: 78 bc                    u8 [a4] = a5
 12283: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 12286: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 12289: ac 20 ac                 jump @721 if ra <u t0
      :                          @722
 12292: 54 17 63 36              jump @724 if a0 <=u 99
      :                          @723
 12296: 97 79 30                 a2 = a0 << 0x30
 12299: 98 99 32                 a2 = a2 >> 0x32
 12302: 96 99 7b 14              a2 = a2 * 0x147b
 12306: 98 99 11                 a2 = a2 >> 0x11
 12309: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
 12312: c8 b7 07                 a0 = a0 + a4
 12315: 97 77 31                 a0 = a0 << 0x31
 12318: 98 77 30                 a0 = a0 >> 0x30
 12321: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 12324: c8 a7 07                 a0 = a0 + a3
 12327: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 12330: 7c 77                    a0 = u8 [a0]
 12332: 95 1c 19                 a5 = sp + 0x19
 12335: c8 8c 0c                 a5 = a5 + a1
 12338: 78 cb 01                 u8 [a5 + 0x1] = a4
 12341: 78 c7                    u8 [a5] = a0
 12343: 64 97                    a0 = a2
 12345: 01                       fallthrough
      :                          @724
 12346: 55 17 0a 14              jump @726 if a0 >=u 10
      :                          @725
 12350: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12353: 95 19 19                 a2 = sp + 0x19
 12356: c8 89 09                 a2 = a2 + a1
 12359: 83 77 30                 i32 a0 = a0 + 0x30
 12362: 78 97                    u8 [a2] = a0
 12364: 28 1c                    jump @727
      :                          @726
 12366: 97 77 01                 a0 = a0 << 0x1
 12369: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 12372: c8 a7 07                 a0 = a0 + a3
 12375: 7c 79 01                 a2 = u8 [a0 + 0x1]
 12378: 7c 77                    a0 = u8 [a0]
 12380: 95 1a 19                 a3 = sp + 0x19
 12383: c8 8a 0a                 a3 = a3 + a1
 12386: 78 a9 01                 u8 [a3 + 0x1] = a2
 12389: 78 a7                    u8 [a3] = a0
 12391: 01                       fallthrough
      :                          @727
 12392: 95 1a 19                 a3 = sp + 0x19
 12395: c8 8a 0a                 a3 = a3 + a1
 12398: 9a 8b 27                 a4 = 0x27 - a1
 12401: 33 08 c0 04 01           a1 = 0x104c0
 12406: 82 17                    a0 = u64 [sp]
 12408: 33 09                    a2 = 0
 12410: 50 20 4c 01 13           ra = 332, jump @729
      :                          @728 [@dyn 166]
 12415: 82 10 50                 ra = u64 [sp + 0x50]
 12418: 82 15 48                 s0 = u64 [sp + 0x48]
 12421: 82 16 40                 s1 = u64 [sp + 0x40]
 12424: 95 11 58                 sp = sp + 0x58
 12427: 32 00                    ret
      :                          @729
 12429: 95 11 98                 sp = sp + 0xffffffffffffff98
 12432: 7b 10 60                 u64 [sp + 0x60] = ra
 12435: 7b 15 58                 u64 [sp + 0x58] = s0
 12438: 7b 16 50                 u64 [sp + 0x50] = s1
 12441: 80 73 34                 t1 = u32 [a0 + 0x34]
 12444: 7b 1a 20                 u64 [sp + 0x20] = a3
 12447: 64 9c                    a5 = a2
 12449: 84 36 01                 s1 = t1 & 0x1
 12452: 33 02 2b                 t0 = 0x2b
 12455: 33 09 00 00 11           a2 = 0x110000
 12460: 84 3a 04                 a3 = t1 & 0x4
 12463: 7b 1b 28                 u64 [sp + 0x28] = a4
 12466: c8 b6 04                 t2 = s1 + a4
 12469: 7b 1c 30                 u64 [sp + 0x30] = a5
 12472: 52 0a 10                 jump @732 if a3 != 0
      :                          @730
 12475: 49 11 38                 u64 [sp + 56] = 0
 12478: 82 78                    a1 = u64 [a0]
 12480: 94 69 2b                 a2 = 0x2b if s1 != 0
 12483: 52 08 35                 jump @736 if a1 != 0
      :                          @731
 12486: 28 56                    jump @741
      :                          @732
 12488: 7b 18 38                 u64 [sp + 0x38] = a1
 12491: 33 09                    a2 = 0
 12493: 51 0c 1b                 jump @735 if a5 == 0
      :                          @733
 12496: 82 1b 38                 a4 = u64 [sp + 0x38]
 12499: 01                       fallthrough
      :                          @734
 12500: 7d b5                    s0 = i8 [a4]
 12502: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 12505: 85 5a 01                 a3 = s0 ^ 0x1
 12508: c8 a9 09                 a2 = a2 + a3
 12511: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 12514: 95 bb 01                 a4 = a4 + 0x1
 12517: 52 0c ef                 jump @734 if a5 != 0
      :                          @735
 12520: c8 94 04                 t2 = t2 + a2
 12523: 33 09 00 00 11           a2 = 0x110000
 12528: 82 78                    a1 = u64 [a0]
 12530: db 62 09                 a2 = t0 if s1 != 0
 12533: 51 08 27                 jump @741 if a1 == 0
      :                          @736
 12536: 82 7a 08                 a3 = u64 [a0 + 0x8]
 12539: ae a4 21                 jump @741 if t2 >=u a3
      :                          @737
 12542: 84 38 08                 a1 = t1 & 0x8
 12545: 52 08 51                 jump @744 if a1 != 0
      :                          @738
 12548: 7c 76 38                 s1 = u8 [a0 + 0x38]
 12551: c9 4a 0a                 a3 = a3 - t2
 12554: 7b 19 18                 u64 [sp + 0x18] = a2
 12557: 5a 16 01 a0 00           jump @751 if s1 >s 1
      :                          @739
 12562: 52 06 ad 00              jump @753 if s1 != 0
      :                          @740
 12566: 7b 1a 10                 u64 [sp + 0x10] = a3
 12569: 28 ac 00                 jump @754
      :                          @741
 12572: 82 75 20                 s0 = u64 [a0 + 0x20]
 12575: 82 76 28                 s1 = u64 [a0 + 0x28]
 12578: 64 57                    a0 = s0
 12580: 64 68                    a1 = s1
 12582: 82 1a 38                 a3 = u64 [sp + 0x38]
 12585: 82 1b 30                 a4 = u64 [sp + 0x30]
 12588: 50 20 4e 01 75 01        ra = 334, jump @774
      :                          @742 [@dyn 167]
 12594: 33 08 01                 a1 = 0x1
 12597: 52 07 be 00              jump @759 if a0 != 0
      :                          @743
 12601: 82 6c 18                 a5 = u64 [s1 + 0x18]
 12604: 64 57                    a0 = s0
 12606: 82 18 20                 a1 = u64 [sp + 0x20]
 12609: 82 19 28                 a2 = u64 [sp + 0x28]
 12612: 82 10 60                 ra = u64 [sp + 0x60]
 12615: 82 15 58                 s0 = u64 [sp + 0x58]
 12618: 82 16 50                 s1 = u64 [sp + 0x50]
 12621: 95 11 68                 sp = sp + 0x68
 12624: 32 0c                    jump [a5]
      :                          @744
 12626: 7b 1a 40                 u64 [sp + 0x40] = a3
 12629: 64 45                    s0 = t2
 12631: 81 78 30                 a1 = i32 [a0 + 0x30]
 12634: 7b 18 10                 u64 [sp + 0x10] = a1
 12637: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 12640: 7b 1a 08                 u64 [sp + 0x8] = a3
 12643: 82 7a 20                 a3 = u64 [a0 + 0x20]
 12646: 82 78 28                 a1 = u64 [a0 + 0x28]
 12649: 48 17 30 30              u32 [a0 + 48] = 0x30
 12653: 7b 17                    u64 [sp] = a0
 12655: 46 17 38 01              u8 [a0 + 56] = 0x1
 12659: 7b 1a 48                 u64 [sp + 0x48] = a3
 12662: 64 a7                    a0 = a3
 12664: 64 86                    s1 = a1
 12666: 82 1a 38                 a3 = u64 [sp + 0x38]
 12669: 82 1b 30                 a4 = u64 [sp + 0x30]
 12672: 50 20 50 01 21 01        ra = 336, jump @774
      :                          @745 [@dyn 168]
 12678: 52 07 69                 jump @758 if a0 != 0
      :                          @746
 12681: 82 17 40                 a0 = u64 [sp + 0x40]
 12684: c9 57 05                 s0 = a0 - s0
 12687: 95 55 01                 s0 = s0 + 0x1
 12690: 01                       fallthrough
      :                          @747
 12691: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 12694: 51 05 cb 00              jump @769 if s0 == 0
      :                          @748
 12698: 82 69 20                 a2 = u64 [s1 + 0x20]
 12701: 33 08 30                 a1 = 0x30
 12704: 82 17 48                 a0 = u64 [sp + 0x48]
 12707: b4 90 02 52 01           ra = 338, jump [a2]
      :                          @749 [@dyn 169]
 12712: 51 07 eb                 jump @747 if a0 == 0
      :                          @750
 12715: 28 44                    jump @758
      :                          @751
 12717: 52 16 02 12              jump @753 if s1 != 2
      :                          @752
 12721: 98 a6 01                 s1 = a3 >> 0x1
 12724: 95 a8 01                 a1 = a3 + 0x1
 12727: 98 88 01                 a1 = a1 >> 0x1
 12730: 7b 18 10                 u64 [sp + 0x10] = a1
 12733: 28 08                    jump @754
      :                          @753
 12735: 64 a6                    s1 = a3
 12737: 49 11 10                 u64 [sp + 16] = 0
 12740: 01                       fallthrough
      :                          @754
 12741: 82 78 20                 a1 = u64 [a0 + 0x20]
 12744: 7b 18 48                 u64 [sp + 0x48] = a1
 12747: 82 75 28                 s0 = u64 [a0 + 0x28]
 12750: 81 77 30                 a0 = i32 [a0 + 0x30]
 12753: 7b 17 40                 u64 [sp + 0x40] = a0
 12756: 95 66 01                 s1 = s1 + 0x1
 12759: 01                       fallthrough
      :                          @755
 12760: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 12763: 51 06 28                 jump @760 if s1 == 0
      :                          @756
 12766: 82 59 20                 a2 = u64 [s0 + 0x20]
 12769: 82 17 48                 a0 = u64 [sp + 0x48]
 12772: 82 18 40                 a1 = u64 [sp + 0x40]
 12775: b4 90 02 54 01           ra = 340, jump [a2]
      :                          @757 [@dyn 170]
 12780: 51 07 ec                 jump @755 if a0 == 0
      :                          @758
 12783: 33 08 01                 a1 = 0x1
 12786: 01                       fallthrough
      :                          @759
 12787: 64 87                    a0 = a1
 12789: 82 10 60                 ra = u64 [sp + 0x60]
 12792: 82 15 58                 s0 = u64 [sp + 0x58]
 12795: 82 16 50                 s1 = u64 [sp + 0x50]
 12798: 95 11 68                 sp = sp + 0x68
 12801: 32 00                    ret
      :                          @760
 12803: 82 16 48                 s1 = u64 [sp + 0x48]
 12806: 64 67                    a0 = s1
 12808: 64 58                    a1 = s0
 12810: 82 19 18                 a2 = u64 [sp + 0x18]
 12813: 82 1a 38                 a3 = u64 [sp + 0x38]
 12816: 82 1b 30                 a4 = u64 [sp + 0x30]
 12819: 50 20 56 01 8e 00        ra = 342, jump @774
      :                          @761 [@dyn 171]
 12825: 33 08 01                 a1 = 0x1
 12828: 52 07 d7                 jump @759 if a0 != 0
      :                          @762
 12831: 82 5a 18                 a3 = u64 [s0 + 0x18]
 12834: 64 67                    a0 = s1
 12836: 82 18 20                 a1 = u64 [sp + 0x20]
 12839: 82 19 28                 a2 = u64 [sp + 0x28]
 12842: b4 a0 02 58 01           ra = 344, jump [a3]
      :                          @763 [@dyn 172]
 12847: 33 08 01                 a1 = 0x1
 12850: 52 07 c1                 jump @759 if a0 != 0
      :                          @764
 12853: 82 17 10                 a0 = u64 [sp + 0x10]
 12856: 9a 77                    a0 = -a0
 12858: 7b 17 38                 u64 [sp + 0x38] = a0
 12861: 33 06 ff                 s1 = 0xffffffffffffffff
 12864: 01                       fallthrough
      :                          @765
 12865: 82 17 38                 a0 = u64 [sp + 0x38]
 12868: c8 67 07                 a0 = a0 + s1
 12871: 51 17 ff 45              jump @772 if a0 == 4294967295
      :                          @766
 12875: 82 59 20                 a2 = u64 [s0 + 0x20]
 12878: 82 17 48                 a0 = u64 [sp + 0x48]
 12881: 82 18 40                 a1 = u64 [sp + 0x40]
 12884: b4 90 02 5a 01           ra = 346, jump [a2]
      :                          @767 [@dyn 173]
 12889: 95 66 01                 s1 = s1 + 0x1
 12892: 51 07 e5                 jump @765 if a0 == 0
      :                          @768
 12895: 28 39                    jump @773
      :                          @769
 12897: 82 6a 18                 a3 = u64 [s1 + 0x18]
 12900: 82 17 48                 a0 = u64 [sp + 0x48]
 12903: 82 18 20                 a1 = u64 [sp + 0x20]
 12906: 82 19 28                 a2 = u64 [sp + 0x28]
 12909: b4 a0 02 5c 01           ra = 348, jump [a3]
      :                          @770 [@dyn 174]
 12914: 33 08 01                 a1 = 0x1
 12917: 52 07 7e ff              jump @759 if a0 != 0
      :                          @771
 12921: 33 08                    a1 = 0
 12923: 82 16                    s1 = u64 [sp]
 12925: 82 17 10                 a0 = u64 [sp + 0x10]
 12928: 7a 67 30                 u32 [s1 + 0x30] = a0
 12931: 82 17 08                 a0 = u64 [sp + 0x8]
 12934: 78 67 38                 u8 [s1 + 0x38] = a0
 12937: 28 6a ff                 jump @759
      :                          @772
 12940: 82 16 10                 s1 = u64 [sp + 0x10]
 12943: 82 17 10                 a0 = u64 [sp + 0x10]
 12946: d8 76 08                 a1 = s1 <u a0
 12949: 28 5e ff                 jump @759
      :                          @773
 12952: 82 17 10                 a0 = u64 [sp + 0x10]
 12955: d8 76 08                 a1 = s1 <u a0
 12958: 28 55 ff                 jump @759
      :                          @774
 12961: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12964: 7b 10 20                 u64 [sp + 0x20] = ra
 12967: 7b 15 18                 u64 [sp + 0x18] = s0
 12970: 7b 16 10                 u64 [sp + 0x10] = s1
 12973: 83 9c                    i32 a5 = a2 + 0
 12975: 33 02 00 00 11           t0 = 0x110000
 12980: 64 a6                    s1 = a3
 12982: 64 85                    s0 = a1
 12984: 64 7a                    a3 = a0
 12986: aa 2c 21                 jump @777 if a5 == t0
      :                          @775
 12989: 82 5c 20                 a5 = u64 [s0 + 0x20]
 12992: 64 a7                    a0 = a3
 12994: 64 98                    a1 = a2
 12996: 7b 1b 08                 u64 [sp + 0x8] = a4
 12999: 7b 1a                    u64 [sp] = a3
 13001: b4 c0 02 5e 01           ra = 350, jump [a5]
      :                          @776 [@dyn 175]
 13006: 82 1a                    a3 = u64 [sp]
 13008: 82 1b 08                 a4 = u64 [sp + 0x8]
 13011: 64 78                    a1 = a0
 13013: 33 07 01                 a0 = 0x1
 13016: 52 08 20                 jump @780 if a1 != 0
      :                          @777
 13019: 51 06 1a                 jump @779 if s1 == 0
      :                          @778
 13022: 82 5c 18                 a5 = u64 [s0 + 0x18]
 13025: 64 a7                    a0 = a3
 13027: 64 68                    a1 = s1
 13029: 64 b9                    a2 = a4
 13031: 82 10 20                 ra = u64 [sp + 0x20]
 13034: 82 15 18                 s0 = u64 [sp + 0x18]
 13037: 82 16 10                 s1 = u64 [sp + 0x10]
 13040: 95 11 28                 sp = sp + 0x28
 13043: 32 0c                    jump [a5]
      :                          @779
 13045: 33 07                    a0 = 0
 13047: 01                       fallthrough
      :                          @780
 13048: 82 10 20                 ra = u64 [sp + 0x20]
 13051: 82 15 18                 s0 = u64 [sp + 0x18]
 13054: 82 16 10                 s1 = u64 [sp + 0x10]
 13057: 95 11 28                 sp = sp + 0x28
 13060: 32 00                    ret
      :                          @781
 13062: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13065: 7b 10 40                 u64 [sp + 0x40] = ra
 13068: 7b 15 38                 u64 [sp + 0x38] = s0
 13071: 7b 16 30                 u64 [sp + 0x30] = s1
 13074: 82 74                    t2 = u64 [a0]
 13076: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13079: d4 a4 0b                 a4 = t2 | a3
 13082: 64 93                    t1 = a2
 13084: 64 85                    s0 = a1
 13086: 51 0b ab 03              jump @853 if a4 == 0
      :                          @782
 13090: 7b 17 08                 u64 [sp + 0x8] = a0
 13093: 51 0a f5 00              jump @801 if a3 == 0
      :                          @783
 13097: 82 7c 18                 a5 = u64 [a0 + 0x18]
 13100: 33 0a                    a3 = 0
 13102: 49 11 18 02              u64 [sp + 24] = 0x2
 13106: 95 53 02                 t1 = s0 + 0x2
 13109: 95 cc 01                 a5 = a5 + 0x1
 13112: 33 00 00 00 11           ra = 0x110000
 13117: 33 07 df 00              a0 = 0xdf
 13121: 7b 15 10                 u64 [sp + 0x10] = s0
 13124: 64 59                    a2 = s0
 13126: 28 12                    jump @786
      :                          @784
 13128: 95 98 01                 a1 = a2 + 0x1
 13131: 01                       fallthrough
      :                          @785
 13132: c9 9a 0a                 a3 = a3 - a2
 13135: c8 8a 0a                 a3 = a3 + a1
 13138: 64 89                    a2 = a1
 13140: aa 05 bc 00              jump @800 if s0 == ra
      :                          @786
 13144: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 13147: 51 0c 68                 jump @795 if a5 == 0
      :                          @787
 13150: aa 39 b2 00              jump @800 if a2 == t1
      :                          @788
 13154: 7d 98                    a1 = i8 [a2]
 13156: 84 85 ff 00              s0 = a1 & 0xff
 13160: 59 08 e0                 jump @784 if a1 >=s 0
      :                          @789
 13163: 7c 98 01                 a1 = u8 [a2 + 0x1]
 13166: 84 56 1f                 s1 = s0 & 0x1f
 13169: 84 8b 3f                 a4 = a1 & 0x3f
 13172: ae 57 35                 jump @793 if a0 >=u s0
      :                          @790
 13175: 7c 98 02                 a1 = u8 [a2 + 0x2]
 13178: 97 bb 06                 a4 = a4 << 0x6
 13181: 84 88 3f                 a1 = a1 & 0x3f
 13184: d4 8b 02                 t0 = a4 | a1
 13187: 53 25 f0 00 31           jump @794 if s0 <u 240
      :                          @791
 13192: 7c 98 03                 a1 = u8 [a2 + 0x3]
 13195: 97 66 3d                 s1 = s1 << 0x3d
 13198: 98 66 2b                 s1 = s1 >> 0x2b
 13201: 97 22 06                 t0 = t0 << 0x6
 13204: 84 88 3f                 a1 = a1 & 0x3f
 13207: d4 82 05                 s0 = t0 | a1
 13210: d4 65 05                 s0 = s0 | s1
 13213: aa 05 73                 jump @800 if s0 == ra
      :                          @792
 13216: 95 98 04                 a1 = a2 + 0x4
 13219: 33 07 df 00              a0 = 0xdf
 13223: 28 a5                    jump @785
      :                          @793
 13225: 95 98 02                 a1 = a2 + 0x2
 13228: 97 65 06                 s0 = s1 << 0x6
 13231: d4 b5 05                 s0 = s0 | a4
 13234: 28 9a                    jump @785
      :                          @794
 13236: 95 98 03                 a1 = a2 + 0x3
 13239: 97 66 0c                 s1 = s1 << 0xc
 13242: d4 62 05                 s0 = t0 | s1
 13245: 33 07 df 00              a0 = 0xdf
 13249: 28 8b                    jump @785
      :                          @795
 13251: aa 39 4d                 jump @800 if a2 == t1
      :                          @796
 13254: 7d 98                    a1 = i8 [a2]
 13256: 59 08 b6 02              jump @843 if a1 >=s 0
      :                          @797
 13260: 84 88 ff 00              a1 = a1 & 0xff
 13264: 33 0b e0 00              a4 = 0xe0
 13268: ac b8 aa 02              jump @843 if a1 <u a4
      :                          @798
 13272: 33 0b f0 00              a4 = 0xf0
 13276: ac b8 a2 02              jump @843 if a1 <u a4
      :                          @799
 13280: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 13283: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 13286: 84 bb 3f                 a4 = a4 & 0x3f
 13289: 84 cc 3f                 a5 = a5 & 0x3f
 13292: 7c 99 03                 a2 = u8 [a2 + 0x3]
 13295: 97 88 3d                 a1 = a1 << 0x3d
 13298: 98 88 2b                 a1 = a1 >> 0x2b
 13301: 97 bb 0c                 a4 = a4 << 0xc
 13304: 97 cc 06                 a5 = a5 << 0x6
 13307: d4 cb 0b                 a4 = a4 | a5
 13310: 84 99 3f                 a2 = a2 & 0x3f
 13313: d4 b9 09                 a2 = a2 | a4
 13316: d4 98 08                 a1 = a1 | a2
 13319: 33 09 00 00 11           a2 = 0x110000
 13324: ab 98 72 02              jump @843 if a1 != a2
      :                          @800
 13328: 82 13 18                 t1 = u64 [sp + 0x18]
 13331: 82 15 10                 s0 = u64 [sp + 0x10]
 13334: 82 17 08                 a0 = u64 [sp + 0x8]
 13337: 01                       fallthrough
      :                          @801
 13338: 51 04 af 02              jump @853 if t2 == 0
      :                          @802
 13342: 82 7c 08                 a5 = u64 [a0 + 0x8]
 13345: 7b 13 18                 u64 [sp + 0x18] = t1
 13348: 7b 15 10                 u64 [sp + 0x10] = s0
 13351: 55 13 20 29              jump @808 if t1 >=u 32
      :                          @803
 13355: 33 09                    a2 = 0
 13357: 51 03 1c                 jump @806 if t1 == 0
      :                          @804
 13360: 64 58                    a1 = s0
 13362: 64 3a                    a3 = t1
 13364: 01                       fallthrough
      :                          @805
 13365: 7d 8b                    a4 = i8 [a1]
 13367: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13370: 85 bb 01                 a4 = a4 ^ 0x1
 13373: c8 b9 09                 a2 = a2 + a4
 13376: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13379: 95 88 01                 a1 = a1 + 0x1
 13382: 52 0a ef                 jump @805 if a3 != 0
      :                          @806
 13385: ac c9 95 01              jump @825 if a2 <u a5
      :                          @807
 13389: 28 7c 02                 jump @853
      :                          @808
 13392: 7b 1c                    u64 [sp] = a5
 13394: 95 58 07                 a1 = s0 + 0x7
 13397: 64 5c                    a5 = s0
 13399: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 13402: c9 5c 0b                 a4 = a5 - s0
 13405: c8 b3 02                 t0 = t1 + a4
 13408: 84 2a 07                 a3 = t0 & 0x7
 13411: 33 08                    a1 = 0
 13413: aa c5 17                 jump @810 if s0 == a5
      :                          @809
 13416: 7d c6                    s1 = i8 [a5]
 13418: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 13421: 85 69 01                 a2 = s1 ^ 0x1
 13424: c8 98 08                 a1 = a1 + a2
 13427: 95 bb 01                 a4 = a4 + 0x1
 13430: 95 cc 01                 a5 = a5 + 0x1
 13433: 52 0b ef                 jump @809 if a4 != 0
      :                          @810
 13436: 33 0b                    a4 = 0
 13438: 51 0a 1e                 jump @813 if a3 == 0
      :                          @811
 13441: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 13444: c8 5c 0c                 a5 = a5 + s0
 13447: 01                       fallthrough
      :                          @812
 13448: 7d c7                    a0 = i8 [a5]
 13450: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 13453: 85 77 01                 a0 = a0 ^ 0x1
 13456: c8 7b 0b                 a4 = a4 + a0
 13459: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13462: 95 cc 01                 a5 = a5 + 0x1
 13465: 52 0a ef                 jump @812 if a3 != 0
      :                          @813
 13468: 98 20 03                 ra = t0 >> 0x3
 13471: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 13481: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 13491: 7b 17 28                 u64 [sp + 0x28] = a0
 13494: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 13504: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 13514: 7b 17 20                 u64 [sp + 0x20] = a0
 13517: c8 8b 09                 a2 = a4 + a1
 13520: 28 2d                    jump @815
      :                          @814
 13522: 97 45 03                 s0 = t2 << 0x3
 13525: c8 35 05                 s0 = s0 + t1
 13528: c9 40 00                 ra = ra - t2
 13531: 84 46 03                 s1 = t2 & 0x3
 13534: 82 1b 28                 a4 = u64 [sp + 0x28]
 13537: d2 b2 07                 a0 = t0 & a4
 13540: 98 28 08                 a1 = t0 >> 0x8
 13543: d2 b8 08                 a1 = a1 & a4
 13546: c8 87 07                 a0 = a0 + a1
 13549: 82 18 20                 a1 = u64 [sp + 0x20]
 13552: ca 87 07                 a0 = a0 * a1
 13555: 98 77 30                 a0 = a0 >> 0x30
 13558: c8 79 09                 a2 = a2 + a0
 13561: 52 06 8e 00              jump @822 if s1 != 0
      :                          @815
 13565: 51 00 79                 jump @820 if ra == 0
      :                          @816
 13568: 64 53                    t1 = s0
 13570: 33 07 c0 00              a0 = 0xc0
 13574: e6 70 04                 t2 = minu(ra, a0)
 13577: 33 02                    t0 = 0
 13579: 98 48 02                 a1 = t2 >> 0x2
 13582: 51 08 c4                 jump @814 if a1 == 0
      :                          @817
 13585: 97 88 05                 a1 = a1 << 0x5
 13588: c8 38 08                 a1 = a1 + t1
 13591: 64 36                    s1 = t1
 13593: 01                       fallthrough
      :                          @818
 13594: 82 67                    a0 = u64 [s1]
 13596: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 13599: 98 cc 07                 a5 = a5 >> 0x7
 13602: 98 77 06                 a0 = a0 >> 0x6
 13605: 82 6b 08                 a4 = u64 [s1 + 0x8]
 13608: d4 c7 07                 a0 = a0 | a5
 13611: d2 a7 07                 a0 = a0 & a3
 13614: c8 27 07                 a0 = a0 + t0
 13617: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 13620: 98 cc 07                 a5 = a5 >> 0x7
 13623: 82 65 10                 s0 = u64 [s1 + 0x10]
 13626: 98 bb 06                 a4 = a4 >> 0x6
 13629: d4 cb 0b                 a4 = a4 | a5
 13632: d2 ab 0b                 a4 = a4 & a3
 13635: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 13638: 98 cc 07                 a5 = a5 >> 0x7
 13641: 98 55 06                 s0 = s0 >> 0x6
 13644: d4 5c 0c                 a5 = a5 | s0
 13647: 82 65 18                 s0 = u64 [s1 + 0x18]
 13650: d2 ac 0c                 a5 = a5 & a3
 13653: c8 cb 0b                 a4 = a4 + a5
 13656: c8 b7 07                 a0 = a0 + a4
 13659: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 13662: 98 bb 07                 a4 = a4 >> 0x7
 13665: 98 55 06                 s0 = s0 >> 0x6
 13668: d4 5b 0b                 a4 = a4 | s0
 13671: d2 ab 0b                 a4 = a4 & a3
 13674: 95 66 20                 s1 = s1 + 0x20
 13677: c8 7b 02                 t0 = a4 + a0
 13680: ab 86 aa                 jump @818 if s1 != a1
      :                          @819
 13683: 28 5f ff                 jump @814
      :                          @820
 13686: 82 13 18                 t1 = u64 [sp + 0x18]
 13689: 82 15 10                 s0 = u64 [sp + 0x10]
 13692: 82 17 08                 a0 = u64 [sp + 0x8]
 13695: 82 1c                    a5 = u64 [sp]
 13697: ac c9 5d                 jump @825 if a2 <u a5
      :                          @821
 13700: 28 45 01                 jump @853
      :                          @822
 13703: 33 08                    a1 = 0
 13705: 84 47 fc 00              a0 = t2 & 0xfc
 13709: 97 77 03                 a0 = a0 << 0x3
 13712: c8 73 0b                 a4 = t1 + a0
 13715: 97 66 03                 s1 = s1 << 0x3
 13718: 82 13 18                 t1 = u64 [sp + 0x18]
 13721: 82 15 10                 s0 = u64 [sp + 0x10]
 13724: 01                       fallthrough
      :                          @823
 13725: 82 b7                    a0 = u64 [a4]
 13727: 95 bb 08                 a4 = a4 + 0x8
 13730: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 13733: 98 cc 07                 a5 = a5 >> 0x7
 13736: 98 77 06                 a0 = a0 >> 0x6
 13739: d4 c7 07                 a0 = a0 | a5
 13742: d2 a7 07                 a0 = a0 & a3
 13745: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 13748: c8 78 08                 a1 = a1 + a0
 13751: 52 06 e6                 jump @823 if s1 != 0
      :                          @824
 13754: 82 1a 28                 a3 = u64 [sp + 0x28]
 13757: d2 a8 07                 a0 = a1 & a3
 13760: 98 88 08                 a1 = a1 >> 0x8
 13763: d2 a8 08                 a1 = a1 & a3
 13766: c8 87 07                 a0 = a0 + a1
 13769: 82 18 20                 a1 = u64 [sp + 0x20]
 13772: ca 87 07                 a0 = a0 * a1
 13775: 98 77 30                 a0 = a0 >> 0x30
 13778: c8 79 09                 a2 = a2 + a0
 13781: 82 17 08                 a0 = u64 [sp + 0x8]
 13784: 82 1c                    a5 = u64 [sp]
 13786: ae c9 ef 00              jump @853 if a2 >=u a5
      :                          @825
 13790: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 13793: 33 08                    a1 = 0
 13795: 33 0b 01                 a4 = 0x1
 13798: c9 9c 0c                 a5 = a5 - a2
 13801: ad ab 0c                 jump @828 if a4 <s a3
      :                          @826
 13804: 51 0a 1a                 jump @830 if a3 == 0
      :                          @827
 13807: 64 c8                    a1 = a5
 13809: 49 01                    u64 [sp + 0] = 0
 13811: 28 16                    jump @831
      :                          @828
 13813: 52 1a 02 11              jump @830 if a3 != 2
      :                          @829
 13817: 98 c8 01                 a1 = a5 >> 0x1
 13820: 95 c9 01                 a2 = a5 + 0x1
 13823: 98 99 01                 a2 = a2 >> 0x1
 13826: 7b 19                    u64 [sp] = a2
 13828: 28 05                    jump @831
      :                          @830
 13830: 7b 1c                    u64 [sp] = a5
 13832: 01                       fallthrough
      :                          @831
 13833: 82 79 20                 a2 = u64 [a0 + 0x20]
 13836: 7b 19 28                 u64 [sp + 0x28] = a2
 13839: 82 75 28                 s0 = u64 [a0 + 0x28]
 13842: 81 77 30                 a0 = i32 [a0 + 0x30]
 13845: 7b 17 20                 u64 [sp + 0x20] = a0
 13848: 95 86 01                 s1 = a1 + 0x1
 13851: 01                       fallthrough
      :                          @832
 13852: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 13855: 51 06 19                 jump @836 if s1 == 0
      :                          @833
 13858: 82 59 20                 a2 = u64 [s0 + 0x20]
 13861: 82 17 28                 a0 = u64 [sp + 0x28]
 13864: 82 18 20                 a1 = u64 [sp + 0x20]
 13867: b4 90 02 60 01           ra = 352, jump [a2]
      :                          @834 [@dyn 176]
 13872: 51 07 ec                 jump @832 if a0 == 0
      :                          @835
 13875: 33 07 01                 a0 = 0x1
 13878: 28 72                    jump @849
      :                          @836
 13880: 82 5a 18                 a3 = u64 [s0 + 0x18]
 13883: 82 17 28                 a0 = u64 [sp + 0x28]
 13886: 82 18 10                 a1 = u64 [sp + 0x10]
 13889: 82 19 18                 a2 = u64 [sp + 0x18]
 13892: b4 a0 02 62 01           ra = 354, jump [a3]
      :                          @837 [@dyn 177]
 13897: 64 78                    a1 = a0
 13899: 33 07 01                 a0 = 0x1
 13902: 52 08 5a                 jump @849 if a1 != 0
      :                          @838
 13905: 82 17                    a0 = u64 [sp]
 13907: 9a 77                    a0 = -a0
 13909: 7b 17 18                 u64 [sp + 0x18] = a0
 13912: 33 06 ff                 s1 = 0xffffffffffffffff
 13915: 01                       fallthrough
      :                          @839
 13916: 82 17 18                 a0 = u64 [sp + 0x18]
 13919: c8 67 07                 a0 = a0 + s1
 13922: 33 08 ff                 a1 = 0xffffffffffffffff
 13925: aa 87 34                 jump @847 if a0 == a1
      :                          @840
 13928: 82 59 20                 a2 = u64 [s0 + 0x20]
 13931: 82 17 28                 a0 = u64 [sp + 0x28]
 13934: 82 18 20                 a1 = u64 [sp + 0x20]
 13937: b4 90 02 64 01           ra = 356, jump [a2]
      :                          @841 [@dyn 178]
 13942: 95 66 01                 s1 = s1 + 0x1
 13945: 51 07 e3                 jump @839 if a0 == 0
      :                          @842
 13948: 28 26                    jump @848
      :                          @843
 13950: 82 13 18                 t1 = u64 [sp + 0x18]
 13953: 82 15 10                 s0 = u64 [sp + 0x10]
 13956: 51 0a 35                 jump @851 if a3 == 0
      :                          @844
 13959: ae 3a 2f                 jump @850 if a3 >=u t1
      :                          @845
 13962: c8 a5 08                 a1 = s0 + a3
 13965: 7d 88                    a1 = i8 [a1]
 13967: 33 09 c0                 a2 = 0xffffffffffffffc0
 13970: af 98 27                 jump @851 if a1 >=s a2
      :                          @846
 13973: 33 08                    a1 = 0
 13975: 28 25                    jump @852
      :                          @847
 13977: 82 16                    s1 = u64 [sp]
 13979: 82 17                    a0 = u64 [sp]
 13981: d8 76 07                 a0 = s1 <u a0
 13984: 28 08                    jump @849
      :                          @848
 13986: 82 17                    a0 = u64 [sp]
 13988: d8 76 07                 a0 = s1 <u a0
 13991: 01                       fallthrough
      :                          @849
 13992: 82 10 40                 ra = u64 [sp + 0x40]
 13995: 82 15 38                 s0 = u64 [sp + 0x38]
 13998: 82 16 30                 s1 = u64 [sp + 0x30]
 14001: 95 11 48                 sp = sp + 0x48
 14004: 32 00                    ret
      :                          @850
 14006: ab 3a df                 jump @846 if a3 != t1
      :                          @851
 14009: 64 58                    a1 = s0
 14011: 01                       fallthrough
      :                          @852
 14012: 82 17 08                 a0 = u64 [sp + 0x8]
 14015: db 8a 03                 t1 = a3 if a1 != 0
 14018: db 88 05                 s0 = a1 if a1 != 0
 14021: 52 04 59 fd              jump @802 if t2 != 0
      :                          @853
 14025: 82 78 28                 a1 = u64 [a0 + 0x28]
 14028: 82 77 20                 a0 = u64 [a0 + 0x20]
 14031: 82 8c 18                 a5 = u64 [a1 + 0x18]
 14034: 64 58                    a1 = s0
 14036: 64 39                    a2 = t1
 14038: 82 10 40                 ra = u64 [sp + 0x40]
 14041: 82 15 38                 s0 = u64 [sp + 0x38]
 14044: 82 16 30                 s1 = u64 [sp + 0x30]
 14047: 95 11 48                 sp = sp + 0x48
 14050: 32 0c                    jump [a5]
      :                          @854
 14052: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 14056: 7b 10 80 00              u64 [sp + 0x80] = ra
 14060: 7b 15 78                 u64 [sp + 0x78] = s0
 14063: 7b 16 70                 u64 [sp + 0x70] = s1
 14066: 49 11 60 20              u64 [sp + 96] = 0x20
 14070: 33 0a 03                 a3 = 0x3
 14073: 78 1a 68                 u8 [sp + 0x68] = a3
 14076: 82 96 20                 s1 = u64 [a2 + 0x20]
 14079: 49 11 30                 u64 [sp + 48] = 0
 14082: 49 11 40                 u64 [sp + 64] = 0
 14085: 7b 17 50                 u64 [sp + 0x50] = a0
 14088: 7b 18 58                 u64 [sp + 0x58] = a1
 14091: 51 06 0a 01              jump @876 if s1 == 0
      :                          @855
 14095: 82 97 28                 a0 = u64 [a2 + 0x28]
 14098: 51 07 79 01              jump @886 if a0 == 0
      :                          @856
 14102: 49 11 28                 u64 [sp + 40] = 0
 14105: 82 95                    s0 = u64 [a2]
 14107: 7b 19 08                 u64 [sp + 0x8] = a2
 14110: 82 98 10                 a1 = u64 [a2 + 0x10]
 14113: 7b 18 18                 u64 [sp + 0x18] = a1
 14116: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 14119: 97 88 03                 a1 = a1 << 0x3
 14122: 98 88 03                 a1 = a1 >> 0x3
 14125: 95 88 01                 a1 = a1 + 0x1
 14128: 7b 18                    u64 [sp] = a1
 14130: 95 55 08                 s0 = s0 + 0x8
 14133: 96 78 38                 a1 = a0 * 0x38
 14136: 95 66 18                 s1 = s1 + 0x18
 14139: 33 07 4a 01              a0 = 0x14a
 14143: 7b 17 10                 u64 [sp + 0x10] = a0
 14146: 01                       fallthrough
      :                          @857
 14147: 7b 18 20                 u64 [sp + 0x20] = a1
 14150: 82 59                    a2 = u64 [s0]
 14152: 51 09 18                 jump @860 if a2 == 0
      :                          @858
 14155: 82 1a 58                 a3 = u64 [sp + 0x58]
 14158: 82 17 50                 a0 = u64 [sp + 0x50]
 14161: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 14164: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14167: b4 a0 02 66 01           ra = 358, jump [a3]
      :                          @859 [@dyn 179]
 14172: 52 07 55 01              jump @889 if a0 != 0
      :                          @860
 14176: 81 67 10                 a0 = i32 [s1 + 0x10]
 14179: 7a 17 60                 u32 [sp + 0x60] = a0
 14182: 7c 67 18                 a0 = u8 [s1 + 0x18]
 14185: 78 17 68                 u8 [sp + 0x68] = a0
 14188: 81 67 14                 a0 = i32 [s1 + 0x14]
 14191: 7a 17 64                 u32 [sp + 0x64] = a0
 14194: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14197: 82 67                    a0 = u64 [s1]
 14199: 51 08 26                 jump @865 if a1 == 0
      :                          @861
 14202: 52 18 01 16              jump @863 if a1 != 1
      :                          @862
 14206: 97 77 04                 a0 = a0 << 0x4
 14209: 82 18 18                 a1 = u64 [sp + 0x18]
 14212: c8 87 07                 a0 = a0 + a1
 14215: 82 78 08                 a1 = u64 [a0 + 0x8]
 14218: 82 19 10                 a2 = u64 [sp + 0x10]
 14221: aa 98 07                 jump @864 if a1 == a2
      :                          @863
 14224: 33 08                    a1 = 0
 14226: 28 0f                    jump @866
      :                          @864
 14228: 82 77                    a0 = u64 [a0]
 14230: 82 77                    a0 = u64 [a0]
 14232: 33 08 01                 a1 = 0x1
 14235: 28 06                    jump @866
      :                          @865
 14237: 33 08 01                 a1 = 0x1
 14240: 01                       fallthrough
      :                          @866
 14241: 7b 18 30                 u64 [sp + 0x30] = a1
 14244: 7b 17 38                 u64 [sp + 0x38] = a0
 14247: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 14250: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 14253: 51 08 26                 jump @871 if a1 == 0
      :                          @867
 14256: 52 18 01 16              jump @869 if a1 != 1
      :                          @868
 14260: 97 77 04                 a0 = a0 << 0x4
 14263: 82 18 18                 a1 = u64 [sp + 0x18]
 14266: c8 87 07                 a0 = a0 + a1
 14269: 82 78 08                 a1 = u64 [a0 + 0x8]
 14272: 82 19 10                 a2 = u64 [sp + 0x10]
 14275: aa 98 07                 jump @870 if a1 == a2
      :                          @869
 14278: 33 08                    a1 = 0
 14280: 28 0f                    jump @872
      :                          @870
 14282: 82 77                    a0 = u64 [a0]
 14284: 82 77                    a0 = u64 [a0]
 14286: 33 08 01                 a1 = 0x1
 14289: 28 06                    jump @872
      :                          @871
 14291: 33 08 01                 a1 = 0x1
 14294: 01                       fallthrough
      :                          @872
 14295: 7b 18 40                 u64 [sp + 0x40] = a1
 14298: 7b 17 48                 u64 [sp + 0x48] = a0
 14301: 82 67 08                 a0 = u64 [s1 + 0x8]
 14304: 97 77 04                 a0 = a0 << 0x4
 14307: 82 18 18                 a1 = u64 [sp + 0x18]
 14310: c8 78 08                 a1 = a1 + a0
 14313: 82 87                    a0 = u64 [a1]
 14315: 82 89 08                 a2 = u64 [a1 + 0x8]
 14318: 95 18 30                 a1 = sp + 0x30
 14321: b4 90 02 68 01           ra = 360, jump [a2]
      :                          @873 [@dyn 180]
 14326: 52 07 bb 00              jump @889 if a0 != 0
      :                          @874
 14330: 95 55 10                 s0 = s0 + 0x10
 14333: 82 18 20                 a1 = u64 [sp + 0x20]
 14336: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 14339: 95 66 38                 s1 = s1 + 0x38
 14342: 82 17 28                 a0 = u64 [sp + 0x28]
 14345: 95 77 01                 a0 = a0 + 0x1
 14348: 7b 17 28                 u64 [sp + 0x28] = a0
 14351: 52 08 34 ff              jump @857 if a1 != 0
      :                          @875
 14355: 28 6b                    jump @884
      :                          @876
 14357: 82 97 18                 a0 = u64 [a2 + 0x18]
 14360: 51 07 73                 jump @886 if a0 == 0
      :                          @877
 14363: 82 95 10                 s0 = u64 [a2 + 0x10]
 14366: 33 0a                    a3 = 0
 14368: 97 78 04                 a1 = a0 << 0x4
 14371: c8 58 08                 a1 = a1 + s0
 14374: 7b 18 20                 u64 [sp + 0x20] = a1
 14377: 7b 19 08                 u64 [sp + 0x8] = a2
 14380: 82 96                    s1 = u64 [a2]
 14382: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 14385: 97 77 04                 a0 = a0 << 0x4
 14388: 98 77 04                 a0 = a0 >> 0x4
 14391: 95 77 01                 a0 = a0 + 0x1
 14394: 7b 17                    u64 [sp] = a0
 14396: 95 66 08                 s1 = s1 + 0x8
 14399: 01                       fallthrough
      :                          @878
 14400: 7b 1a 28                 u64 [sp + 0x28] = a3
 14403: 82 69                    a2 = u64 [s1]
 14405: 51 09 17                 jump @881 if a2 == 0
      :                          @879
 14408: 82 1a 58                 a3 = u64 [sp + 0x58]
 14411: 82 17 50                 a0 = u64 [sp + 0x50]
 14414: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14417: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14420: b4 a0 02 6a 01           ra = 362, jump [a3]
      :                          @880 [@dyn 181]
 14425: 52 07 58                 jump @889 if a0 != 0
      :                          @881
 14428: 82 57                    a0 = u64 [s0]
 14430: 82 59 08                 a2 = u64 [s0 + 0x8]
 14433: 95 18 30                 a1 = sp + 0x30
 14436: b4 90 02 6c 01           ra = 364, jump [a2]
      :                          @882 [@dyn 182]
 14441: 52 07 48                 jump @889 if a0 != 0
      :                          @883
 14444: 95 66 10                 s1 = s1 + 0x10
 14447: 95 55 10                 s0 = s0 + 0x10
 14450: 82 1a 28                 a3 = u64 [sp + 0x28]
 14453: 95 aa 01                 a3 = a3 + 0x1
 14456: 82 17 20                 a0 = u64 [sp + 0x20]
 14459: ab 75 c5                 jump @878 if s0 != a0
      :                          @884
 14462: 82 19 08                 a2 = u64 [sp + 0x8]
 14465: 82 1a                    a3 = u64 [sp]
 14467: 82 97 08                 a0 = u64 [a2 + 0x8]
 14470: ac 7a 0d                 jump @887 if a3 <u a0
      :                          @885
 14473: 28 2d                    jump @890
      :                          @886
 14475: 33 0a                    a3 = 0
 14477: 82 97 08                 a0 = u64 [a2 + 0x8]
 14480: 54 07 26                 jump @890 if a0 <=u 0
      :                          @887
 14483: 82 97                    a0 = u64 [a2]
 14485: 97 a8 04                 a1 = a3 << 0x4
 14488: c8 87 09                 a2 = a0 + a1
 14491: 82 1a 58                 a3 = u64 [sp + 0x58]
 14494: 82 17 50                 a0 = u64 [sp + 0x50]
 14497: 82 98                    a1 = u64 [a2]
 14499: 82 99 08                 a2 = u64 [a2 + 0x8]
 14502: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14505: b4 a0 02 6e 01           ra = 366, jump [a3]
      :                          @888 [@dyn 183]
 14510: 51 07 08                 jump @890 if a0 == 0
      :                          @889
 14513: 33 07 01                 a0 = 0x1
 14516: 28 05                    jump @891
      :                          @890
 14518: 33 07                    a0 = 0
 14520: 01                       fallthrough
      :                          @891
 14521: 82 10 80 00              ra = u64 [sp + 0x80]
 14525: 82 15 78                 s0 = u64 [sp + 0x78]
 14528: 82 16 70                 s1 = u64 [sp + 0x70]
 14531: 95 11 88 00              sp = sp + 0x88
 14535: 32 00                    ret
      :                          @892 [@dyn 184]
 14537: 32 00                    ret
      :                          @893 [@dyn 185]
 14539: 95 11 88                 sp = sp + 0xffffffffffffff88
 14542: 7b 10 70                 u64 [sp + 0x70] = ra
 14545: 7b 15 68                 u64 [sp + 0x68] = s0
 14548: 7b 16 60                 u64 [sp + 0x60] = s1
 14551: 64 93                    t1 = a2
 14553: 33 0c                    a5 = 0
 14555: 33 02                    t0 = 0
 14557: 33 0b                    a4 = 0
 14559: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 14569: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 14575: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 14585: 82 79 10                 a2 = u64 [a0 + 0x10]
 14588: 7b 19 48                 u64 [sp + 0x48] = a2
 14591: 82 79                    a2 = u64 [a0]
 14593: 7b 19 30                 u64 [sp + 0x30] = a2
 14596: 82 77 08                 a0 = u64 [a0 + 0x8]
 14599: 7b 17 28                 u64 [sp + 0x28] = a0
 14602: 7b 18 50                 u64 [sp + 0x50] = a1
 14605: 95 88 08                 a1 = a1 + 0x8
 14608: 7b 18                    u64 [sp] = a1
 14610: 33 07 d1 04 01           a0 = 0x104d1
 14615: 7b 17 08                 u64 [sp + 0x8] = a0
 14618: 33 05 0a                 s0 = 0xa
 14621: 7b 13 20                 u64 [sp + 0x20] = t1
 14624: 7b 14 18                 u64 [sp + 0x18] = t2
 14627: 7b 10 10                 u64 [sp + 0x10] = ra
 14630: 28 3a                    jump @897
      :                          @894
 14632: c8 89 07                 a0 = a2 + a1
 14635: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 14638: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 14641: 88 77 01                 a0 = a0 <u 0x1
 14644: 01                       fallthrough
      :                          @895
 14645: 82 1a 48                 a3 = u64 [sp + 0x48]
 14648: 78 a7                    u8 [a3] = a0
 14650: 82 17 28                 a0 = u64 [sp + 0x28]
 14653: 82 7a 18                 a3 = u64 [a0 + 0x18]
 14656: 82 17 30                 a0 = u64 [sp + 0x30]
 14659: b4 a0 02 74 01           ra = 372, jump [a3]
      :                          @896 [@dyn 186]
 14664: 64 52                    t0 = s0
 14666: 82 13 20                 t1 = u64 [sp + 0x20]
 14669: 82 14 18                 t2 = u64 [sp + 0x18]
 14672: 82 10 10                 ra = u64 [sp + 0x10]
 14675: 82 1c 58                 a5 = u64 [sp + 0x58]
 14678: 33 05 0a                 s0 = 0xa
 14681: 82 1b 38                 a4 = u64 [sp + 0x38]
 14684: 52 07 67 01              jump @938 if a0 != 0
      :                          @897
 14688: 84 b7 ff 00              a0 = a4 & 0xff
 14692: 52 07 5b 01              jump @937 if a0 != 0
      :                          @898
 14696: 7b 12 40                 u64 [sp + 0x40] = t0
 14699: ae c3 0a                 jump @901 if t1 >=u a5
      :                          @899
 14702: 28 f4 00                 jump @928
      :                          @900
 14705: ac c3 f1 00              jump @928 if t1 <u a5
      :                          @901
 14709: c9 c3 08                 a1 = t1 - a5
 14712: 82 16 50                 s1 = u64 [sp + 0x50]
 14715: c8 c6 06                 s1 = s1 + a5
 14718: 55 18 10 1d              jump @907 if a1 >=u 16
      :                          @902
 14722: aa c3 dd 00              jump @927 if t1 == a5
      :                          @903
 14726: 33 0a                    a3 = 0
 14728: 01                       fallthrough
      :                          @904
 14729: c8 a6 07                 a0 = s1 + a3
 14732: 7c 77                    a0 = u8 [a0]
 14734: aa 57 aa 00              jump @922 if a0 == s0
      :                          @905
 14738: 95 aa 01                 a3 = a3 + 0x1
 14741: ab a8 f4                 jump @904 if a1 != a3
      :                          @906
 14744: 28 c7 00                 jump @927
      :                          @907
 14747: 95 69 07                 a2 = s1 + 0x7
 14750: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 14753: c9 6a 07                 a0 = a3 - s1
 14756: d3 6a 0a                 a3 = a3 ^ s1
 14759: 88 aa 01                 a3 = a3 <u 0x1
 14762: 88 7b 01                 a4 = a0 <u 0x1
 14765: d4 ba 0a                 a3 = a3 | a4
 14768: 7b 1c 58                 u64 [sp + 0x58] = a5
 14771: 51 0a 44                 jump @913 if a3 == 0
      :                          @908
 14774: 33 07                    a0 = 0
 14776: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 14779: 01                       fallthrough
      :                          @909
 14780: 82 1b 58                 a4 = u64 [sp + 0x58]
 14783: 82 19                    a2 = u64 [sp]
 14785: c8 9b 0b                 a4 = a4 + a2
 14788: 01                       fallthrough
      :                          @910
 14789: c8 76 0c                 a5 = s1 + a0
 14792: 82 cc                    a5 = u64 [a5]
 14794: c8 7b 09                 a2 = a4 + a0
 14797: 82 99                    a2 = u64 [a2]
 14799: d3 0c 05                 s0 = a5 ^ ra
 14802: c8 45 05                 s0 = s0 + t2
 14805: e0 c5 0c                 a5 = s0 & ~a5
 14808: d3 09 05                 s0 = a2 ^ ra
 14811: 3a 0a 10 00 03           a3 = u64 [0x30010]
 14816: c8 45 05                 s0 = s0 + t2
 14819: e0 95 09                 a2 = s0 & ~a2
 14822: d4 c9 09                 a2 = a2 | a5
 14825: d2 a9 09                 a2 = a2 & a3
 14828: 52 09 1f                 jump @916 if a2 != 0
      :                          @911
 14831: 95 77 10                 a0 = a0 + 0x10
 14834: ae 72 d3                 jump @910 if t0 >=u a0
      :                          @912
 14837: 28 16                    jump @916
      :                          @913
 14839: c8 a6 0b                 a4 = s1 + a3
 14842: 7c bb                    a4 = u8 [a4]
 14844: aa 5b 54                 jump @925 if a4 == s0
      :                          @914
 14847: 95 aa 01                 a3 = a3 + 0x1
 14850: ab a7 f5                 jump @913 if a0 != a3
      :                          @915
 14853: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 14856: ae 72 b4                 jump @909 if t0 >=u a0
      :                          @916
 14859: aa 87 99 00              jump @934 if a0 == a1
      :                          @917
 14863: 33 0a                    a3 = 0
 14865: c8 76 06                 s1 = s1 + a0
 14868: c9 73 08                 a1 = t1 - a0
 14871: 82 1c 58                 a5 = u64 [sp + 0x58]
 14874: c9 c8 08                 a1 = a1 - a5
 14877: 33 05 0a                 s0 = 0xa
 14880: 82 12 40                 t0 = u64 [sp + 0x40]
 14883: 01                       fallthrough
      :                          @918
 14884: c8 a6 09                 a2 = s1 + a3
 14887: 7c 99                    a2 = u8 [a2]
 14889: aa 59 0b                 jump @921 if a2 == s0
      :                          @919
 14892: 95 aa 01                 a3 = a3 + 0x1
 14895: ab a8 f5                 jump @918 if a1 != a3
      :                          @920
 14898: 28 2d                    jump @927
      :                          @921
 14900: c8 7a 0a                 a3 = a3 + a0
 14903: 01                       fallthrough
      :                          @922
 14904: c8 ca 0a                 a3 = a3 + a5
 14907: 95 ac 01                 a5 = a3 + 0x1
 14910: ae 3a 33 ff              jump @900 if a3 >=u t1
      :                          @923
 14914: 82 17 50                 a0 = u64 [sp + 0x50]
 14917: c8 7a 0a                 a3 = a3 + a0
 14920: 7c a7                    a0 = u8 [a3]
 14922: ab 57 27 ff              jump @900 if a0 != s0
      :                          @924
 14926: 28 5d                    jump @935
      :                          @925
 14928: 82 1c 58                 a5 = u64 [sp + 0x58]
 14931: c8 ca 0a                 a3 = a3 + a5
 14934: 95 ac 01                 a5 = a3 + 0x1
 14937: ac 3a e9                 jump @923 if a3 <u t1
      :                          @926
 14940: 28 15 ff                 jump @900
      :                          @927
 14943: 64 3c                    a5 = t1
 14945: 01                       fallthrough
      :                          @928
 14946: 7b 1c 58                 u64 [sp + 0x58] = a5
 14949: 49 11 38 01              u64 [sp + 56] = 0x1
 14953: 64 25                    s0 = t0
 14955: 64 36                    s1 = t1
 14957: aa 32 52                 jump @937 if t0 == t1
      :                          @929
 14960: 82 17 48                 a0 = u64 [sp + 0x48]
 14963: 7c 77                    a0 = u8 [a0]
 14965: 51 07 1d                 jump @932 if a0 == 0
      :                          @930
 14968: 82 17 28                 a0 = u64 [sp + 0x28]
 14971: 82 7a 18                 a3 = u64 [a0 + 0x18]
 14974: 33 09 04                 a2 = 0x4
 14977: 82 17 30                 a0 = u64 [sp + 0x30]
 14980: 82 18 08                 a1 = u64 [sp + 0x8]
 14983: b4 a0 02 76 01           ra = 374, jump [a3]
      :                          @931 [@dyn 187]
 14988: 82 12 40                 t0 = u64 [sp + 0x40]
 14991: 52 07 34                 jump @938 if a0 != 0
      :                          @932
 14994: c9 26 09                 a2 = s1 - t0
 14997: 82 18 50                 a1 = u64 [sp + 0x50]
 15000: c8 28 08                 a1 = a1 + t0
 15003: ab 26 8d fe              jump @894 if s1 != t0
      :                          @933
 15007: 33 07                    a0 = 0
 15009: 28 94 fe                 jump @895
      :                          @934
 15012: 64 3c                    a5 = t1
 15014: 82 12 40                 t0 = u64 [sp + 0x40]
 15017: 28 b9                    jump @928
      :                          @935
 15019: 49 11 38                 u64 [sp + 56] = 0
 15022: 64 c6                    s1 = a5
 15024: 64 c5                    s0 = a5
 15026: 7b 1c 58                 u64 [sp + 0x58] = a5
 15029: 82 17 48                 a0 = u64 [sp + 0x48]
 15032: 7c 77                    a0 = u8 [a0]
 15034: 52 07 be                 jump @930 if a0 != 0
      :                          @936
 15037: 28 d5                    jump @932
      :                          @937
 15039: 33 07                    a0 = 0
 15041: 28 06                    jump @939
      :                          @938
 15043: 33 07 01                 a0 = 0x1
 15046: 01                       fallthrough
      :                          @939
 15047: 82 10 70                 ra = u64 [sp + 0x70]
 15050: 82 15 68                 s0 = u64 [sp + 0x68]
 15053: 82 16 60                 s1 = u64 [sp + 0x60]
 15056: 95 11 78                 sp = sp + 0x78
 15059: 32 00                    ret
      :                          @940 [@dyn 188]
 15061: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15064: 7b 10 20                 u64 [sp + 0x20] = ra
 15067: 7b 15 18                 u64 [sp + 0x18] = s0
 15070: 7b 16 10                 u64 [sp + 0x10] = s1
 15073: 82 75 10                 s0 = u64 [a0 + 0x10]
 15076: 7c 59                    a2 = u8 [s0]
 15078: 82 7b                    a4 = u64 [a0]
 15080: 82 76 08                 s1 = u64 [a0 + 0x8]
 15083: 51 09 33                 jump @944 if a2 == 0
      :                          @941
 15086: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15089: 7b 18 08                 u64 [sp + 0x8] = a1
 15092: 33 08 d1 04 01           a1 = 0x104d1
 15097: 33 09 04                 a2 = 0x4
 15100: 64 b7                    a0 = a4
 15102: 7b 1b                    u64 [sp] = a4
 15104: b4 a0 02 7a 01           ra = 378, jump [a3]
      :                          @942 [@dyn 189]
 15109: 82 18 08                 a1 = u64 [sp + 0x8]
 15112: 82 1b                    a4 = u64 [sp]
 15114: 51 07 14                 jump @944 if a0 == 0
      :                          @943
 15117: 33 07 01                 a0 = 0x1
 15120: 82 10 20                 ra = u64 [sp + 0x20]
 15123: 82 15 18                 s0 = u64 [sp + 0x18]
 15126: 82 16 10                 s1 = u64 [sp + 0x10]
 15129: 95 11 28                 sp = sp + 0x28
 15132: 32 00                    ret
      :                          @944
 15134: 83 87                    i32 a0 = a1 + 0
 15136: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15139: 88 77 01                 a0 = a0 <u 0x1
 15142: 78 57                    u8 [s0] = a0
 15144: 82 6c 20                 a5 = u64 [s1 + 0x20]
 15147: 64 b7                    a0 = a4
 15149: 82 10 20                 ra = u64 [sp + 0x20]
 15152: 82 15 18                 s0 = u64 [sp + 0x18]
 15155: 82 16 10                 s1 = u64 [sp + 0x10]
 15158: 95 11 28                 sp = sp + 0x28
 15161: 32 0c                    jump [a5]
      :                          @945 [@dyn 190]
 15163: 64 8a                    a3 = a1
 15165: 33 08 58 0d 01           a1 = 0x10d58
 15170: 64 a9                    a2 = a3
 15172: 28 a0 fb                 jump @854
      :                          @946
 15175: 51 08 9b 00              jump @967 if a1 == 0
      :                          @947
 15179: 64 79                    a2 = a0
 15181: 7c 77                    a0 = u8 [a0]
 15183: 51 07 91 00              jump @966 if a0 == 0
      :                          @948
 15187: 51 27 ff 00 90 00        jump @968 if a0 == 255
      :                          @949
 15193: 6c 7a                    a3 = sext.b a0
 15195: 57 0a 09                 jump @951 if a3 <s 0
      :                          @950
 15198: 33 0a                    a3 = 0
 15200: 33 08                    a1 = 0
 15202: 28 73                    jump @965
      :                          @951
 15204: 55 27 c0 00 0d           jump @953 if a0 >=u 192
      :                          @952
 15209: 33 0a 01                 a3 = 0x1
 15212: 33 0b 80                 a4 = 0xffffffffffffff80
 15215: 28 4a                    jump @962
      :                          @953
 15217: 55 27 e0 00 0e           jump @955 if a0 >=u 224
      :                          @954
 15222: 33 0a 02                 a3 = 0x2
 15225: 33 0b 40 ff              a4 = 0xffffffffffffff40
 15229: 28 3c                    jump @962
      :                          @955
 15231: 55 27 f0 00 0e           jump @957 if a0 >=u 240
      :                          @956
 15236: 33 0a 03                 a3 = 0x3
 15239: 33 0b 20 ff              a4 = 0xffffffffffffff20
 15243: 28 2e                    jump @962
      :                          @957
 15245: 55 27 f8 00 0e           jump @959 if a0 >=u 248
      :                          @958
 15250: 33 0a 04                 a3 = 0x4
 15253: 33 0b 10 ff              a4 = 0xffffffffffffff10
 15257: 28 20                    jump @962
      :                          @959
 15259: 55 27 fc 00 0e           jump @961 if a0 >=u 252
      :                          @960
 15264: 33 0a 05                 a3 = 0x5
 15267: 33 0b 08 ff              a4 = 0xffffffffffffff08
 15271: 28 12                    jump @962
      :                          @961
 15273: 88 7a fe 00              a3 = a0 <u 0xfe
 15277: 33 0b 04 ff              a4 = 0xffffffffffffff04
 15281: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 15285: 85 aa 07                 a3 = a3 ^ 0x7
 15288: 01                       fallthrough
      :                          @962
 15289: ae 8a 2b                 jump @969 if a3 >=u a1
      :                          @963
 15292: 33 08                    a1 = 0
 15294: c8 b7 07                 a0 = a0 + a4
 15297: 64 ab                    a4 = a3
 15299: 01                       fallthrough
      :                          @964
 15300: c8 b9 0c                 a5 = a2 + a4
 15303: 7c cc                    a5 = u8 [a5]
 15305: 97 88 08                 a1 = a1 << 0x8
 15308: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 15311: d4 c8 08                 a1 = a1 | a5
 15314: 52 0b f2                 jump @964 if a4 != 0
      :                          @965
 15317: 8a a9 03                 i32 a2 = a3 << 0x3
 15320: cf 97 07                 a0 = a0 << a2
 15323: c8 87 07                 a0 = a0 + a1
 15326: 32 00                    ret
      :                          @966
 15328: 32 00                    ret
      :                          @967
 15330: 00                       trap
      :                          @968
 15331: 00                       trap
      :                          @969
 15332: 00                       trap
      :                          @970
 15333: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 15337: 7b 10 00 01              u64 [sp + 0x100] = ra
 15341: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 15345: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 15349: 7b 17                    u64 [sp] = a0
 15351: 78 18 0f                 u8 [sp + 0xf] = a1
 15354: 7b 17 10                 u64 [sp + 0x10] = a0
 15357: 95 16 0f                 s1 = sp + 0xf
 15360: 33 05 01                 s0 = 0x1
 15363: 95 17 0f                 a0 = sp + 0xf
 15366: 33 08 01                 a1 = 0x1
 15369: 95 19 10                 a2 = sp + 0x10
 15372: 33 0a 08                 a3 = 0x8
 15375: 0a 03                    ecalli 3 // 'write'
 15377: 7b 16 60                 u64 [sp + 0x60] = s1
 15380: 33 07 82 01              a0 = 0x182
 15384: 7b 17 68                 u64 [sp + 0x68] = a0
 15387: 64 17                    a0 = sp
 15389: 7b 17 70                 u64 [sp + 0x70] = a0
 15392: 33 07 04                 a0 = 0x4
 15395: 7b 17 78                 u64 [sp + 0x78] = a0
 15398: 49 21 80 00 02           u64 [sp + 128] = 0x2
 15403: 49 21 90 00 02           u64 [sp + 144] = 0x2
 15408: 49 21 a0 00              u64 [sp + 160] = 0
 15412: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 15422: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 15426: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 15431: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 15436: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 15441: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 15445: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 15449: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 15454: 33 08 88 0d 01           a1 = 0x10d88
 15459: 7b 18 30                 u64 [sp + 0x30] = a1
 15462: 49 11 38 02              u64 [sp + 56] = 0x2
 15466: 95 18 80 00              a1 = sp + 0x80
 15470: 7b 18 50                 u64 [sp + 0x50] = a1
 15473: 49 11 58 02              u64 [sp + 88] = 0x2
 15477: 95 18 60                 a1 = sp + 0x60
 15480: 7b 18 40                 u64 [sp + 0x40] = a1
 15483: 49 11 48 02              u64 [sp + 72] = 0x2
 15487: 95 17 18                 a0 = sp + 0x18
 15490: 95 18 30                 a1 = sp + 0x30
 15493: 50 20 7e 01 65 ef        ra = 382, jump @636
      :                          @971 [@dyn 191]
 15499: 82 15 20                 s0 = u64 [sp + 0x20]
 15502: 82 1b 28                 a4 = u64 [sp + 0x28]
 15505: 82 16 18                 s1 = u64 [sp + 0x18]
 15508: 33 07 02                 a0 = 0x2
 15511: 33 08                    a1 = 0
 15513: 33 09                    a2 = 0
 15515: 64 5a                    a3 = s0
 15517: 33 00 80 01              ra = 0x180
 15521: 0a 64                    ecalli 100 // 'log'
 15523: 01                       fallthrough
      :                          @972 [@dyn 192]
 15524: 33 07 00 f0              a0 = 0xfffffffffffff000
 15528: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 15532: ac 78 23                 jump @978 if a1 <u a0
      :                          @973
 15535: 33 07 20 00 03           a0 = 0x30020
 15540: 95 77 00 10              a0 = a0 + 0x1000
 15544: 01                       fallthrough
      :                          @974
 15545: 82 78                    a1 = u64 [a0]
 15547: c9 87 09                 a2 = a0 - a1
 15550: ab 59 11                 jump @978 if a2 != s0
      :                          @975
 15553: c9 68 09                 a2 = a1 - s1
 15556: 01                       fallthrough
      :                          @976
 15557: 82 7a                    a3 = u64 [a0]
 15559: ab 8a f2                 jump @974 if a3 != a1
      :                          @977
 15562: 7b 79                    u64 [a0] = a2
 15564: 33 0b                    a4 = 0
 15566: 01                       fallthrough
      :                          @978
 15567: 82 10 00 01              ra = u64 [sp + 0x100]
 15571: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 15575: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 15579: 95 11 08 01              sp = sp + 0x108
 15583: 32 00                    ret
      :                          @979 [@dyn 193]
 15585: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 15589: 7b 10 90 00              u64 [sp + 0x90] = ra
 15593: 7b 15 88 00              u64 [sp + 0x88] = s0
 15597: 7b 16 80 00              u64 [sp + 0x80] = s1
 15601: 64 85                    s0 = a1
 15603: 82 86 28                 s1 = u64 [a1 + 0x28]
 15606: 82 8a 20                 a3 = u64 [a1 + 0x20]
 15609: 82 6b 18                 a4 = u64 [s1 + 0x18]
 15612: 7b 17 10                 u64 [sp + 0x10] = a0
 15615: 33 08 c0 04 01           a1 = 0x104c0
 15620: 33 09 01                 a2 = 0x1
 15623: 7b 1a 18                 u64 [sp + 0x18] = a3
 15626: 64 a7                    a0 = a3
 15628: 7b 1b 08                 u64 [sp + 0x8] = a4
 15631: b4 b0 02 84 01           ra = 388, jump [a4]
      :                          @980 [@dyn 194]
 15636: 51 07 09                 jump @982 if a0 == 0
      :                          @981
 15639: 33 09 01                 a2 = 0x1
 15642: 28 d2 00                 jump @994
      :                          @982
 15645: 80 58 34                 a1 = u32 [s0 + 0x34]
 15648: 84 87 04                 a0 = a1 & 0x4
 15651: 52 07 21                 jump @986 if a0 != 0
      :                          @983
 15654: 82 17 10                 a0 = u64 [sp + 0x10]
 15657: 64 58                    a1 = s0
 15659: 50 20 86 01 d5 00        ra = 390, jump @995
      :                          @984 [@dyn 195]
 15665: 33 09 01                 a2 = 0x1
 15668: 52 07 b8 00              jump @994 if a0 != 0
      :                          @985
 15672: 82 57 28                 a0 = u64 [s0 + 0x28]
 15675: 82 5a 20                 a3 = u64 [s0 + 0x20]
 15678: 82 7b 18                 a4 = u64 [a0 + 0x18]
 15681: 28 99 00                 jump @992
      :                          @986
 15684: 7b 18                    u64 [sp] = a1
 15686: 33 08 db 04 01           a1 = 0x104db
 15691: 33 09 01                 a2 = 0x1
 15694: 82 17 18                 a0 = u64 [sp + 0x18]
 15697: 82 1a 08                 a3 = u64 [sp + 0x8]
 15700: b4 a0 02 88 01           ra = 392, jump [a3]
      :                          @987 [@dyn 196]
 15705: 33 09 01                 a2 = 0x1
 15708: 82 18 18                 a1 = u64 [sp + 0x18]
 15711: 52 07 8d 00              jump @994 if a0 != 0
      :                          @988
 15715: 46 11 3f 01              u8 [sp + 63] = 0x1
 15719: 7b 18 20                 u64 [sp + 0x20] = a1
 15722: 7b 16 28                 u64 [sp + 0x28] = s1
 15725: 95 17 3f                 a0 = sp + 0x3f
 15728: 7b 17 30                 u64 [sp + 0x30] = a0
 15731: 81 57 30                 a0 = i32 [s0 + 0x30]
 15734: 7c 58 38                 a1 = u8 [s0 + 0x38]
 15737: 82 59                    a2 = u64 [s0]
 15739: 82 5a 08                 a3 = u64 [s0 + 0x8]
 15742: 82 5b 10                 a4 = u64 [s0 + 0x10]
 15745: 82 5c 18                 a5 = u64 [s0 + 0x18]
 15748: 82 16                    s1 = u64 [sp]
 15750: 7a 16 74                 u32 [sp + 0x74] = s1
 15753: 7a 17 70                 u32 [sp + 0x70] = a0
 15756: 78 18 78                 u8 [sp + 0x78] = a1
 15759: 7b 19 40                 u64 [sp + 0x40] = a2
 15762: 7b 1a 48                 u64 [sp + 0x48] = a3
 15765: 7b 1b 50                 u64 [sp + 0x50] = a4
 15768: 7b 1c 58                 u64 [sp + 0x58] = a5
 15771: 95 17 20                 a0 = sp + 0x20
 15774: 7b 17 60                 u64 [sp + 0x60] = a0
 15777: 33 07 58 0d 01           a0 = 0x10d58
 15782: 7b 17 68                 u64 [sp + 0x68] = a0
 15785: 95 18 40                 a1 = sp + 0x40
 15788: 82 17 10                 a0 = u64 [sp + 0x10]
 15791: 50 20 8a 01 51           ra = 394, jump @995
      :                          @989 [@dyn 197]
 15796: 52 07 63 ff              jump @981 if a0 != 0
      :                          @990
 15800: 82 18 68                 a1 = u64 [sp + 0x68]
 15803: 82 17 60                 a0 = u64 [sp + 0x60]
 15806: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15809: 33 08 d9 04 01           a1 = 0x104d9
 15814: 33 09 02                 a2 = 0x2
 15817: b4 a0 02 8c 01           ra = 396, jump [a3]
      :                          @991 [@dyn 198]
 15822: 82 1a 18                 a3 = u64 [sp + 0x18]
 15825: 82 1b 08                 a4 = u64 [sp + 0x8]
 15828: 33 09 01                 a2 = 0x1
 15831: 52 07 15                 jump @994 if a0 != 0
      :                          @992
 15834: 33 08 dc 04 01           a1 = 0x104dc
 15839: 33 09 01                 a2 = 0x1
 15842: 64 a7                    a0 = a3
 15844: b4 b0 02 8e 01           ra = 398, jump [a4]
      :                          @993 [@dyn 199]
 15849: 64 79                    a2 = a0
 15851: 01                       fallthrough
      :                          @994
 15852: 64 97                    a0 = a2
 15854: 82 10 90 00              ra = u64 [sp + 0x90]
 15858: 82 15 88 00              s0 = u64 [sp + 0x88]
 15862: 82 16 80 00              s1 = u64 [sp + 0x80]
 15866: 95 11 98 00              sp = sp + 0x98
 15870: 32 00                    ret
      :                          @995
 15872: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 15876: 7b 10 80 00              u64 [sp + 0x80] = ra
 15880: 80 89 34                 a2 = u32 [a1 + 0x34]
 15883: 84 9a 10                 a3 = a2 & 0x10
 15886: 52 0a 16                 jump @998 if a3 != 0
      :                          @996
 15889: 84 99 20                 a2 = a2 & 0x20
 15892: 52 09 52                 jump @1002 if a2 != 0
      :                          @997
 15895: 7c 77                    a0 = u8 [a0]
 15897: 82 10 80 00              ra = u64 [sp + 0x80]
 15901: 95 11 88 00              sp = sp + 0x88
 15905: 28 4f f1                 jump @719
      :                          @998
 15908: 7c 77                    a0 = u8 [a0]
 15910: 33 0b 81 00              a4 = 0x81
 15914: 95 19 7f                 a2 = sp + 0x7f
 15917: 33 02 57                 t0 = 0x57
 15920: 01                       fallthrough
      :                          @999
 15921: 64 bc                    a5 = a4
 15923: 84 7b 0f                 a4 = a0 & 0xf
 15926: 97 77 38                 a0 = a0 << 0x38
 15929: 98 77 3c                 a0 = a0 >> 0x3c
 15932: 88 b3 0a                 t1 = a4 <u 0xa
 15935: 33 0a 30                 a3 = 0x30
 15938: da 32 0a                 a3 = t0 if t1 == 0
 15941: be ba 0a                 i32 a3 = a3 + a4
 15944: 78 9a                    u8 [a2] = a3
 15946: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15949: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 15952: 52 07 e1                 jump @999 if a0 != 0
      :                          @1000
 15955: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 15958: 56 27 80 00 6b           jump @1008 if a0 >u 128
      :                          @1001
 15963: 9a bb 81 00              a4 = 0x81 - a4
 15967: 64 1a                    a3 = sp
 15969: c8 7a 0a                 a3 = a3 + a0
 15972: 28 43                    jump @1006
      :                          @1002
 15974: 7c 77                    a0 = u8 [a0]
 15976: 33 0b 81 00              a4 = 0x81
 15980: 95 19 7f                 a2 = sp + 0x7f
 15983: 33 02 37                 t0 = 0x37
 15986: 01                       fallthrough
      :                          @1003
 15987: 64 bc                    a5 = a4
 15989: 84 7b 0f                 a4 = a0 & 0xf
 15992: 97 77 38                 a0 = a0 << 0x38
 15995: 98 77 3c                 a0 = a0 >> 0x3c
 15998: 88 b3 0a                 t1 = a4 <u 0xa
 16001: 33 0a 30                 a3 = 0x30
 16004: da 32 0a                 a3 = t0 if t1 == 0
 16007: be ba 0a                 i32 a3 = a3 + a4
 16010: 78 9a                    u8 [a2] = a3
 16012: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 16015: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 16018: 52 07 e1                 jump @1003 if a0 != 0
      :                          @1004
 16021: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 16024: 56 27 80 00 29           jump @1008 if a0 >u 128
      :                          @1005
 16029: 9a bb 81 00              a4 = 0x81 - a4
 16033: 64 1a                    a3 = sp
 16035: c8 7a 0a                 a3 = a3 + a0
 16038: 01                       fallthrough
      :                          @1006
 16039: 33 09 02                 a2 = 0x2
 16042: 64 87                    a0 = a1
 16044: 33 08 dd 04 01           a1 = 0x104dd
 16049: 50 20 90 01 dc f1        ra = 400, jump @729
      :                          @1007 [@dyn 200]
 16055: 82 10 80 00              ra = u64 [sp + 0x80]
 16059: 95 11 88 00              sp = sp + 0x88
 16063: 32 00                    ret
      :                          @1008
 16065: 00                       trap
