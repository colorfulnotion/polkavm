// RO data = 3864/3864 bytes
// RW data = 24/4144 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [82, 0, 255, 255, 106, 0, 255, 255, 124, 0, 255, 255, 142, 0, 255, 255, 166, 0, 255, 255, 190, 0, 255, 255, 212, 0, 255, 255, 224, 0, 255, 255, 236, 0, 255, 255, 254, 0, 255, 255, 0, 16, 0, 0, 0, 0, 0, 0, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 101, 120, 112, 117, 110, 103, 101, 32, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 32, 111, 117, 116, 112, 117, 116, 61, 247, 255, 255, 255, 255, 255, 255, 255, 110, 117, 109, 95, 99, 104, 105, 108, 100, 95, 118, 109, 61, 32, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 112, 111, 107, 101, 32, 109, 61, 32, 115, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 44, 32, 103, 111, 116, 32, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 32, 115, 101, 103, 95, 98, 117, 102, 61, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 102, 111, 111, 70, 101, 120, 112, 111, 114, 116, 32, 105, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 91, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 40, 41, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 117, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 129, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 149, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 163, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 170, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 193, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 203, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 209, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 229, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 249, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 25, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 42, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 69, 1, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 90, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 101, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 114, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 151, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 160, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 178, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 225, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 15, 2, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 60, 2, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 123, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 152, 2, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 174, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 203, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 230, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 203, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 31, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 76, 3, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 100, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 128, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 146, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 164, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 209, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 241, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 203, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 3, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 20, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 48, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 203, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 3, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 68, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 83, 4, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 105, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 124, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 141, 4, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 172, 4, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 205, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 198, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 227, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 40, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 236, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 141, 4, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 7, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 193, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 27, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 47, 5, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 19, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 62, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 54, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 0, 0, 62, 1, 0, 0, 0, 0, 0, 0, 70, 1, 0, 0, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 122, 1, 0, 0, 0, 0, 0, 0, 57, 6, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 74, 6, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5306
// Code size = 16622 bytes

      :                          @0
     0: 28 61 03 00 00           jump @60
      :                          @1
     5: 28 8c 0e 00 00           jump @196
      :                          @2
    10: 28 ab 2b                 jump @590
      :                          @3 [@dyn 1]
    13: 33 09 02                 a2 = 0x2
    16: 64 87                    a0 = a1
    18: 33 08 37 06 01           a1 = 0x10637
    23: 28 0c 35                 jump @794
      :                          @4 [@dyn 2]
    26: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    30: 7b 10 80 00              u64 [sp + 0x80] = ra
    34: 64 82                    t0 = a1
    36: 80 88 34                 a1 = u32 [a1 + 0x34]
    39: 84 89 10                 a2 = a1 & 0x10
    42: 52 09 1b                 jump @7 if a2 != 0
      :                          @5
    45: 84 88 20                 a1 = a1 & 0x20
    48: 52 08 5c                 jump @11 if a1 != 0
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 08 01                 a1 = 0x1
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 33 31                 jump @730
      :                          @7
    69: 7c 77                    a0 = u8 [a0]
    71: 33 0a 81 00              a3 = 0x81
    75: 95 18 7f                 a1 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @8
    82: 64 ab                    a4 = a3
    84: 84 7a 0f                 a3 = a0 & 0xf
    87: 97 77 38                 a0 = a0 << 0x38
    90: 98 77 3c                 a0 = a0 >> 0x3c
    93: 88 ac 0a                 a5 = a3 <u 0xa
    96: 33 09 30                 a2 = 0x30
    99: da c3 09                 a2 = t1 if a5 == 0
   102: be a9 09                 i32 a2 = a2 + a3
   105: 78 89                    u8 [a1] = a2
   107: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   110: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   113: 52 07 e1                 jump @8 if a0 != 0
      :                          @9
   116: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   119: 56 27 80 00 72           jump @17 if a0 >u 128
      :                          @10
   124: 9a ac 81 00              a5 = 0x81 - a3
   128: 64 1b                    a4 = sp
   130: c8 7b 0b                 a4 = a4 + a0
   133: 33 09 6d 05 01           a2 = 0x1056d
   138: 28 48                    jump @15
      :                          @11
   140: 7c 77                    a0 = u8 [a0]
   142: 33 0a 81 00              a3 = 0x81
   146: 95 18 7f                 a1 = sp + 0x7f
   149: 33 03 37                 t1 = 0x37
   152: 01                       fallthrough
      :                          @12
   153: 64 ab                    a4 = a3
   155: 84 7a 0f                 a3 = a0 & 0xf
   158: 97 77 38                 a0 = a0 << 0x38
   161: 98 77 3c                 a0 = a0 >> 0x3c
   164: 88 ac 0a                 a5 = a3 <u 0xa
   167: 33 09 30                 a2 = 0x30
   170: da c3 09                 a2 = t1 if a5 == 0
   173: be a9 09                 i32 a2 = a2 + a3
   176: 78 89                    u8 [a1] = a2
   178: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
   181: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
   184: 52 07 e1                 jump @12 if a0 != 0
      :                          @13
   187: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   190: 56 27 80 00 2b           jump @17 if a0 >u 128
      :                          @14
   195: 9a ac 81 00              a5 = 0x81 - a3
   199: 64 1b                    a4 = sp
   201: c8 7b 0b                 a4 = a4 + a0
   204: 33 09 6d 05 01           a2 = 0x1056d
   209: 01                       fallthrough
      :                          @15
   210: 33 08 01                 a1 = 0x1
   213: 33 0a 02                 a3 = 0x2
   216: 64 27                    a0 = t0
   218: 50 10 06 be 31           ra = 6, jump @740
      :                          @16 [@dyn 3]
   223: 82 10 80 00              ra = u64 [sp + 0x80]
   227: 95 11 88 00              sp = sp + 0x88
   231: 32 00                    ret
      :                          @17
   233: 00                       trap
      :                          @18 [@dyn 4]
   234: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   238: 7b 10 80 00              u64 [sp + 0x80] = ra
   242: 64 82                    t0 = a1
   244: 80 88 34                 a1 = u32 [a1 + 0x34]
   247: 84 89 10                 a2 = a1 & 0x10
   250: 52 09 28                 jump @21 if a2 != 0
      :                          @19
   253: 84 88 20                 a1 = a1 & 0x20
   256: 52 08 68                 jump @25 if a1 != 0
      :                          @20
   259: 81 77                    a0 = i32 [a0]
   261: 89 79                    a2 = a0 <s 0
   263: 85 98 01                 a1 = a2 ^ 0x1
   266: 97 7a 20                 a3 = a0 << 0x20
   269: 98 aa 20                 a3 = a3 >> 0x20
   272: 9a 77                    a0 = -a0
   274: da 9a 07                 a0 = a3 if a2 == 0
   277: 64 29                    a2 = t0
   279: 82 10 80 00              ra = u64 [sp + 0x80]
   283: 95 11 88 00              sp = sp + 0x88
   287: 28 56 30                 jump @730
      :                          @21
   290: 81 7a                    a3 = i32 [a0]
   292: 33 08 81 00              a1 = 0x81
   296: 95 17 7f                 a0 = sp + 0x7f
   299: 33 03 57                 t1 = 0x57
   302: 01                       fallthrough
      :                          @22
   303: 64 8b                    a4 = a1
   305: 8b ac 04                 i32 a5 = a3 >> 0x4
   308: 84 aa 0f                 a3 = a3 & 0xf
   311: 88 a8 0a                 a1 = a3 <u 0xa
   314: 33 09 30                 a2 = 0x30
   317: da 83 09                 a2 = t1 if a1 == 0
   320: be a9 09                 i32 a2 = a2 + a3
   323: 78 79                    u8 [a0] = a2
   325: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   328: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   331: 64 ca                    a3 = a5
   333: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   336: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   339: 56 27 80 00 71           jump @31 if a0 >u 128
      :                          @24
   344: 9a 8c 81 00              a5 = 0x81 - a1
   348: 64 1b                    a4 = sp
   350: c8 7b 0b                 a4 = a4 + a0
   353: 33 09 6d 05 01           a2 = 0x1056d
   358: 28 47                    jump @29
      :                          @25
   360: 81 7a                    a3 = i32 [a0]
   362: 33 08 81 00              a1 = 0x81
   366: 95 17 7f                 a0 = sp + 0x7f
   369: 33 03 37                 t1 = 0x37
   372: 01                       fallthrough
      :                          @26
   373: 64 8b                    a4 = a1
   375: 8b ac 04                 i32 a5 = a3 >> 0x4
   378: 84 aa 0f                 a3 = a3 & 0xf
   381: 88 a8 0a                 a1 = a3 <u 0xa
   384: 33 09 30                 a2 = 0x30
   387: da 83 09                 a2 = t1 if a1 == 0
   390: be a9 09                 i32 a2 = a2 + a3
   393: 78 79                    u8 [a0] = a2
   395: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   398: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   401: 64 ca                    a3 = a5
   403: 52 0c e2                 jump @26 if a5 != 0
      :                          @27
   406: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   409: 56 27 80 00 2b           jump @31 if a0 >u 128
      :                          @28
   414: 9a 8c 81 00              a5 = 0x81 - a1
   418: 64 1b                    a4 = sp
   420: c8 7b 0b                 a4 = a4 + a0
   423: 33 09 6d 05 01           a2 = 0x1056d
   428: 01                       fallthrough
      :                          @29
   429: 33 08 01                 a1 = 0x1
   432: 33 0a 02                 a3 = 0x2
   435: 64 27                    a0 = t0
   437: 50 10 0a e3 30           ra = 10, jump @740
      :                          @30 [@dyn 5]
   442: 82 10 80 00              ra = u64 [sp + 0x80]
   446: 95 11 88 00              sp = sp + 0x88
   450: 32 00                    ret
      :                          @31
   452: 00                       trap
      :                          @32 [@dyn 6]
   453: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   457: 7b 10 80 00              u64 [sp + 0x80] = ra
   461: 64 82                    t0 = a1
   463: 80 88 34                 a1 = u32 [a1 + 0x34]
   466: 84 89 10                 a2 = a1 & 0x10
   469: 52 09 1b                 jump @35 if a2 != 0
      :                          @33
   472: 84 88 20                 a1 = a1 & 0x20
   475: 52 08 5b                 jump @39 if a1 != 0
      :                          @34
   478: 80 77                    a0 = u32 [a0]
   480: 33 08 01                 a1 = 0x1
   483: 64 29                    a2 = t0
   485: 82 10 80 00              ra = u64 [sp + 0x80]
   489: 95 11 88 00              sp = sp + 0x88
   493: 28 88 2f                 jump @730
      :                          @35
   496: 81 7a                    a3 = i32 [a0]
   498: 33 08 81 00              a1 = 0x81
   502: 95 17 7f                 a0 = sp + 0x7f
   505: 33 03 57                 t1 = 0x57
   508: 01                       fallthrough
      :                          @36
   509: 64 8b                    a4 = a1
   511: 8b ac 04                 i32 a5 = a3 >> 0x4
   514: 84 aa 0f                 a3 = a3 & 0xf
   517: 88 a8 0a                 a1 = a3 <u 0xa
   520: 33 09 30                 a2 = 0x30
   523: da 83 09                 a2 = t1 if a1 == 0
   526: be a9 09                 i32 a2 = a2 + a3
   529: 78 79                    u8 [a0] = a2
   531: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   534: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   537: 64 ca                    a3 = a5
   539: 52 0c e2                 jump @36 if a5 != 0
      :                          @37
   542: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   545: 56 27 80 00 71           jump @45 if a0 >u 128
      :                          @38
   550: 9a 8c 81 00              a5 = 0x81 - a1
   554: 64 1b                    a4 = sp
   556: c8 7b 0b                 a4 = a4 + a0
   559: 33 09 6d 05 01           a2 = 0x1056d
   564: 28 47                    jump @43
      :                          @39
   566: 81 7a                    a3 = i32 [a0]
   568: 33 08 81 00              a1 = 0x81
   572: 95 17 7f                 a0 = sp + 0x7f
   575: 33 03 37                 t1 = 0x37
   578: 01                       fallthrough
      :                          @40
   579: 64 8b                    a4 = a1
   581: 8b ac 04                 i32 a5 = a3 >> 0x4
   584: 84 aa 0f                 a3 = a3 & 0xf
   587: 88 a8 0a                 a1 = a3 <u 0xa
   590: 33 09 30                 a2 = 0x30
   593: da 83 09                 a2 = t1 if a1 == 0
   596: be a9 09                 i32 a2 = a2 + a3
   599: 78 79                    u8 [a0] = a2
   601: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   604: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   607: 64 ca                    a3 = a5
   609: 52 0c e2                 jump @40 if a5 != 0
      :                          @41
   612: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   615: 56 27 80 00 2b           jump @45 if a0 >u 128
      :                          @42
   620: 9a 8c 81 00              a5 = 0x81 - a1
   624: 64 1b                    a4 = sp
   626: c8 7b 0b                 a4 = a4 + a0
   629: 33 09 6d 05 01           a2 = 0x1056d
   634: 01                       fallthrough
      :                          @43
   635: 33 08 01                 a1 = 0x1
   638: 33 0a 02                 a3 = 0x2
   641: 64 27                    a0 = t0
   643: 50 10 0e 15 30           ra = 14, jump @740
      :                          @44 [@dyn 7]
   648: 82 10 80 00              ra = u64 [sp + 0x80]
   652: 95 11 88 00              sp = sp + 0x88
   656: 32 00                    ret
      :                          @45
   658: 00                       trap
      :                          @46 [@dyn 8]
   659: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   663: 7b 10 80 00              u64 [sp + 0x80] = ra
   667: 64 82                    t0 = a1
   669: 80 88 34                 a1 = u32 [a1 + 0x34]
   672: 84 89 10                 a2 = a1 & 0x10
   675: 52 09 1b                 jump @49 if a2 != 0
      :                          @47
   678: 84 88 20                 a1 = a1 & 0x20
   681: 52 08 5b                 jump @53 if a1 != 0
      :                          @48
   684: 82 77                    a0 = u64 [a0]
   686: 33 08 01                 a1 = 0x1
   689: 64 29                    a2 = t0
   691: 82 10 80 00              ra = u64 [sp + 0x80]
   695: 95 11 88 00              sp = sp + 0x88
   699: 28 ba 2e                 jump @730
      :                          @49
   702: 82 7a                    a3 = u64 [a0]
   704: 33 08 81 00              a1 = 0x81
   708: 95 17 7f                 a0 = sp + 0x7f
   711: 33 03 57                 t1 = 0x57
   714: 01                       fallthrough
      :                          @50
   715: 64 8b                    a4 = a1
   717: 98 ac 04                 a5 = a3 >> 0x4
   720: 84 aa 0f                 a3 = a3 & 0xf
   723: 88 a8 0a                 a1 = a3 <u 0xa
   726: 33 09 30                 a2 = 0x30
   729: da 83 09                 a2 = t1 if a1 == 0
   732: be a9 09                 i32 a2 = a2 + a3
   735: 78 79                    u8 [a0] = a2
   737: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   740: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   743: 64 ca                    a3 = a5
   745: 52 0c e2                 jump @50 if a5 != 0
      :                          @51
   748: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   751: 56 27 80 00 71           jump @59 if a0 >u 128
      :                          @52
   756: 9a 8c 81 00              a5 = 0x81 - a1
   760: 64 1b                    a4 = sp
   762: c8 7b 0b                 a4 = a4 + a0
   765: 33 09 6d 05 01           a2 = 0x1056d
   770: 28 47                    jump @57
      :                          @53
   772: 82 7a                    a3 = u64 [a0]
   774: 33 08 81 00              a1 = 0x81
   778: 95 17 7f                 a0 = sp + 0x7f
   781: 33 03 37                 t1 = 0x37
   784: 01                       fallthrough
      :                          @54
   785: 64 8b                    a4 = a1
   787: 98 ac 04                 a5 = a3 >> 0x4
   790: 84 aa 0f                 a3 = a3 & 0xf
   793: 88 a8 0a                 a1 = a3 <u 0xa
   796: 33 09 30                 a2 = 0x30
   799: da 83 09                 a2 = t1 if a1 == 0
   802: be a9 09                 i32 a2 = a2 + a3
   805: 78 79                    u8 [a0] = a2
   807: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   810: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   813: 64 ca                    a3 = a5
   815: 52 0c e2                 jump @54 if a5 != 0
      :                          @55
   818: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   821: 56 27 80 00 2b           jump @59 if a0 >u 128
      :                          @56
   826: 9a 8c 81 00              a5 = 0x81 - a1
   830: 64 1b                    a4 = sp
   832: c8 7b 0b                 a4 = a4 + a0
   835: 33 09 6d 05 01           a2 = 0x1056d
   840: 01                       fallthrough
      :                          @57
   841: 33 08 01                 a1 = 0x1
   844: 33 0a 02                 a3 = 0x2
   847: 64 27                    a0 = t0
   849: 50 10 12 47 2f           ra = 18, jump @740
      :                          @58 [@dyn 9]
   854: 82 10 80 00              ra = u64 [sp + 0x80]
   858: 95 11 88 00              sp = sp + 0x88
   862: 32 00                    ret
      :                          @59
   864: 00                       trap
      :                          @60 [export #0: 'refine']
   865: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   869: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   873: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   877: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   881: 95 11 00 f8              sp = sp + 0xfffffffffffff800
   885: 95 11 70 fb              sp = sp + 0xfffffffffffffb70
   889: 33 09 04                 a2 = 0x4
   892: 33 0a 00 00 01           a3 = 0x10000
   897: ac 98 86 00              jump @73 if a1 <u a2
      :                          @61
   901: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
   904: 51 0b 7f                 jump @73 if a4 == 0
      :                          @62
   907: 7d 78 04                 a1 = i8 [a0 + 0x4]
   910: 80 7a                    a3 = u32 [a0]
   912: 33 06 01                 s1 = 0x1
   915: 59 08 3b                 jump @70 if a1 >=s 0
      :                          @63
   918: 84 88 ff 00              a1 = a1 & 0xff
   922: 33 06 02                 s1 = 0x2
   925: 53 28 c0 00 2d           jump @69 if a1 <u 192
      :                          @64
   930: 33 06 03                 s1 = 0x3
   933: 53 28 e0 00 25           jump @69 if a1 <u 224
      :                          @65
   938: 33 06 04                 s1 = 0x4
   941: 53 28 f0 00 1d           jump @69 if a1 <u 240
      :                          @66
   946: 33 06 05                 s1 = 0x5
   949: 53 28 f8 00 15           jump @69 if a1 <u 248
      :                          @67
   954: 33 06 06                 s1 = 0x6
   957: 53 28 fc 00 0d           jump @69 if a1 <u 252
      :                          @68
   962: 88 88 fe 00              a1 = a1 <u 0xfe
   966: 9a 86 08                 s1 = 0x8 - a1
   969: 01                       fallthrough
      :                          @69
   970: ac 6b c6 0a              jump @195 if a4 <u s1
      :                          @70
   974: 7b 1a 80 00              u64 [sp + 0x80] = a3
   978: 95 77 04                 a0 = a0 + 0x4
   981: 64 68                    a1 = s1
   983: 7b 1b 88 00              u64 [sp + 0x88] = a4
   987: 50 10 14 89 39           ra = 20, jump @959
      :                          @71 [@dyn 10]
   992: 64 75                    s0 = a0
   994: 82 17 88 00              a0 = u64 [sp + 0x88]
   998: e4 67 07                 a0 = maxu(a0, s1)
  1001: c9 67 07                 a0 = a0 - s1
  1004: d8 57 08                 a1 = a0 <u s0
  1007: e4 57 07                 a0 = maxu(a0, s0)
  1010: c9 57 07                 a0 = a0 - s0
  1013: 88 77 20                 a0 = a0 <u 0x20
  1016: d4 87 07                 a0 = a0 | a1
  1019: 51 07 2b                 jump @75 if a0 == 0
      :                          @72
  1022: 33 08                    a1 = 0
  1024: 33 0a 00 00 01           a3 = 0x10000
  1029: 28 05                    jump @74
      :                          @73
  1031: 33 08                    a1 = 0
  1033: 01                       fallthrough
      :                          @74
  1034: 64 a7                    a0 = a3
  1036: 95 11 f8 07              sp = sp + 0x7f8
  1040: 95 11 98 04              sp = sp + 0x498
  1044: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1048: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1052: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1056: 95 11 f8 07              sp = sp + 0x7f8
  1060: 32 00                    ret
      :                          @75
  1062: 48 21 b0 00              u32 [sp + 176] = 0
  1066: 49 21 a8 00              u64 [sp + 168] = 0
  1070: 49 21 a0 00              u64 [sp + 160] = 0
  1074: 49 21 98 00              u64 [sp + 152] = 0
  1078: 49 21 90 00              u64 [sp + 144] = 0
  1082: 95 17 90 00              a0 = sp + 0x90
  1086: 33 09 24                 a2 = 0x24
  1089: 33 0a 03                 a3 = 0x3
  1092: 33 08                    a1 = 0
  1094: 33 0b                    a4 = 0
  1096: 33 0c                    a5 = 0
  1098: 0a 12                    ecalli 18 // 'fetch'
  1100: 01                       fallthrough
      :                          @76
  1101: 95 1a 90 00              a3 = sp + 0x90
  1105: 33 08 24                 a1 = 0x24
  1108: 53 15 08 b6              jump @74 if s0 <u 8
      :                          @77
  1112: 95 17 b8 00              a0 = sp + 0xb8
  1116: 33 09 00 02              a2 = 0x200
  1120: 33 08                    a1 = 0
  1122: 50 10 16 b4 2c           ra = 22, jump @715
      :                          @78 [@dyn 11]
  1127: 95 18 90 00              a1 = sp + 0x90
  1131: 95 19 b8 00              a2 = sp + 0xb8
  1135: 33 0b 00 02              a4 = 0x200
  1139: 82 17 80 00              a0 = u64 [sp + 0x80]
  1143: 33 0a                    a3 = 0
  1145: 0a 11                    ecalli 17 // 'historical_lookup'
  1147: 01                       fallthrough
      :                          @79
  1148: 7b 17 60                 u64 [sp + 0x60] = a0
  1151: 51 17 ff 7f ff           jump @72 if a0 == 4294967295
      :                          @80
  1156: 95 15 88 13              s0 = sp + 0x1388
  1160: 49 21 f0 02              u64 [sp + 752] = 0
  1164: 49 21 e8 02              u64 [sp + 744] = 0
  1168: 49 21 e0 02              u64 [sp + 736] = 0
  1172: 49 21 d8 02              u64 [sp + 728] = 0
  1176: 49 21 d0 02              u64 [sp + 720] = 0
  1180: 49 21 c8 02              u64 [sp + 712] = 0
  1184: 49 21 c0 02              u64 [sp + 704] = 0
  1188: 49 21 b8 02              u64 [sp + 696] = 0
  1192: 48 21 fc 02 01           u32 [sp + 764] = 0x1
  1197: 0a                       ecalli 0 // 'gas'
  1198: 7b 17 00 03              u64 [sp + 0x300] = a0
  1202: 95 17 fc 02              a0 = sp + 0x2fc
  1206: 7b 17 08 03              u64 [sp + 0x308] = a0
  1210: 33 07 08                 a0 = 0x8
  1213: 7b 17 48                 u64 [sp + 0x48] = a0
  1216: 7b 17 10 03              u64 [sp + 0x310] = a0
  1220: 95 17 00 03              a0 = sp + 0x300
  1224: 7b 17 18 03              u64 [sp + 0x318] = a0
  1228: 33 07 58 06 01           a0 = 0x10658
  1233: 7b 17 80 03              u64 [sp + 0x380] = a0
  1237: 49 21 88 03 02           u64 [sp + 904] = 0x2
  1242: 49 21 a0 03              u64 [sp + 928] = 0
  1246: 95 18 08 03              a1 = sp + 0x308
  1250: 7b 18 90 03              u64 [sp + 0x390] = a1
  1254: 33 06 ff ef              s1 = 0xffffffffffffefff
  1258: 7b 16 88 00              u64 [sp + 0x88] = s1
  1262: 49 21 98 03 02           u64 [sp + 920] = 0x2
  1267: 33 07 10                 a0 = 0x10
  1270: 7b 17 80 00              u64 [sp + 0x80] = a0
  1274: 7b 17 20 03              u64 [sp + 0x320] = a0
  1278: 95 17 d8 13              a0 = sp + 0x13d8
  1282: 95 18 80 03              a1 = sp + 0x380
  1286: 50 10 18 e9 28           ra = 24, jump @647
      :                          @81 [@dyn 12]
  1291: 82 56 58                 s1 = u64 [s0 + 0x58]
  1294: 82 5b 60                 a4 = u64 [s0 + 0x60]
  1297: 82 55 50                 s0 = u64 [s0 + 0x50]
  1300: 33 07 02                 a0 = 0x2
  1303: 33 08                    a1 = 0
  1305: 33 09                    a2 = 0
  1307: 64 6a                    a3 = s1
  1309: 33 00 1a                 ra = 0x1a
  1312: 0a 64                    ecalli 100 // 'log'
  1314: 01                       fallthrough
      :                          @82 [@dyn 13]
  1315: 82 17 88 00              a0 = u64 [sp + 0x88]
  1319: c8 57 07                 a0 = a0 + s0
  1322: 33 0c 20 00 03           a5 = 0x30020
  1327: 53 27 00 f0 20           jump @88 if a0 <u 4294963200
      :                          @83
  1332: 95 c7 00 10              a0 = a5 + 0x1000
  1336: 01                       fallthrough
      :                          @84
  1337: 82 78                    a1 = u64 [a0]
  1339: c9 87 09                 a2 = a0 - a1
  1342: ab 69 11                 jump @88 if a2 != s1
      :                          @85
  1345: c9 58 09                 a2 = a1 - s0
  1348: 01                       fallthrough
      :                          @86
  1349: 82 7a                    a3 = u64 [a0]
  1351: ab 8a f2                 jump @84 if a3 != a1
      :                          @87
  1354: 7b 79                    u64 [a0] = a2
  1356: 33 0b                    a4 = 0
  1358: 01                       fallthrough
      :                          @88
  1359: 7b 1c 78                 u64 [sp + 0x78] = a5
  1362: 81 17 fc 02              a0 = i32 [sp + 0x2fc]
  1366: 7b 17 58                 u64 [sp + 0x58] = a0
  1369: 58 07 cf 00              jump @102 if a0 <=s 0
      :                          @89
  1373: 33 06                    s1 = 0
  1375: 33 07 88 08 01           a0 = 0x10888
  1380: 7b 17 50                 u64 [sp + 0x50] = a0
  1383: 82 17 78                 a0 = u64 [sp + 0x78]
  1386: 95 75 00 10              s0 = a0 + 0x1000
  1390: 28 0f                    jump @91
      :                          @90
  1392: 82 16 70                 s1 = u64 [sp + 0x70]
  1395: 95 66 01                 s1 = s1 + 0x1
  1398: 82 17 58                 a0 = u64 [sp + 0x58]
  1401: aa 76 af 00              jump @102 if s1 == a0
      :                          @91
  1405: 95 17 b8 00              a0 = sp + 0xb8
  1409: 82 18 60                 a1 = u64 [sp + 0x60]
  1412: 33 09                    a2 = 0
  1414: 0a 14                    ecalli 20 // 'machine'
  1416: 01                       fallthrough
      :                          @92
  1417: 95 19 88 13              a2 = sp + 0x1388
  1421: 7b 97 b8 00              u64 [a2 + 0xb8] = a0
  1425: 51 16 10 fe 08           jump @194 if s1 == 16
      :                          @93
  1430: 7b 16 70                 u64 [sp + 0x70] = s1
  1433: 97 68 02                 a1 = s1 << 0x2
  1436: 95 1a b8 02              a3 = sp + 0x2b8
  1440: c8 a8 08                 a1 = a1 + a3
  1443: 7a 87                    u32 [a1] = a0
  1445: 95 17 40 14              a0 = sp + 0x1440
  1449: 7b 97 50                 u64 [a2 + 0x50] = a0
  1452: 82 17 80 00              a0 = u64 [sp + 0x80]
  1456: 7b 97 58                 u64 [a2 + 0x58] = a0
  1459: 82 17 50                 a0 = u64 [sp + 0x50]
  1462: 7b 17 80 03              u64 [sp + 0x380] = a0
  1466: 49 21 88 03 01           u64 [sp + 904] = 0x1
  1471: 49 21 a0 03              u64 [sp + 928] = 0
  1475: 95 18 d8 13              a1 = sp + 0x13d8
  1479: 7b 18 90 03              u64 [sp + 0x390] = a1
  1483: 49 21 98 03 01           u64 [sp + 920] = 0x1
  1488: 95 17 08 03              a0 = sp + 0x308
  1492: 95 18 80 03              a1 = sp + 0x380
  1496: 50 10 1c 17 28           ra = 28, jump @647
      :                          @94 [@dyn 14]
  1501: 82 16 10 03              s1 = u64 [sp + 0x310]
  1505: 82 1b 18 03              a4 = u64 [sp + 0x318]
  1509: 82 17 08 03              a0 = u64 [sp + 0x308]
  1513: 7b 17 68                 u64 [sp + 0x68] = a0
  1516: 33 07 02                 a0 = 0x2
  1519: 33 08                    a1 = 0
  1521: 33 09                    a2 = 0
  1523: 64 6a                    a3 = s1
  1525: 33 00 1e                 ra = 0x1e
  1528: 0a 64                    ecalli 100 // 'log'
  1530: 01                       fallthrough
      :                          @95 [@dyn 15]
  1531: 82 1b 68                 a4 = u64 [sp + 0x68]
  1534: 82 17 88 00              a0 = u64 [sp + 0x88]
  1538: c8 b7 07                 a0 = a0 + a4
  1541: 53 27 00 f0 6b ff        jump @90 if a0 <u 4294963200
      :                          @96
  1547: 82 57                    a0 = u64 [s0]
  1549: c9 75 08                 a1 = s0 - a0
  1552: ab 68 60 ff              jump @90 if a1 != s1
      :                          @97
  1556: c9 b7 08                 a1 = a0 - a4
  1559: 01                       fallthrough
      :                          @98
  1560: 82 59                    a2 = u64 [s0]
  1562: ab 79 f1                 jump @96 if a2 != a0
      :                          @99
  1565: 7b 58                    u64 [s0] = a1
  1567: 33 0a                    a3 = 0
  1569: 01                       fallthrough
      :                          @100
  1570: ab 79 e9                 jump @96 if a2 != a0
      :                          @101
  1573: 28 4b ff                 jump @90
      :                          @102
  1576: 49 21 08 03 00 00 01     u64 [sp + 776] = 0x10000
  1583: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  1593: 7b 17 10 03              u64 [sp + 0x310] = a0
  1597: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  1607: 7b 17 18 03              u64 [sp + 0x318] = a0
  1611: 49 21 20 03              u64 [sp + 800] = 0
  1615: 49 21 28 03              u64 [sp + 808] = 0
  1619: 49 21 30 03              u64 [sp + 816] = 0
  1623: 49 21 38 03              u64 [sp + 824] = 0
  1627: 49 21 40 03              u64 [sp + 832] = 0
  1631: 14 07 00 00 ff fe 00 00 00 00 a0 = 0xfeff0000
  1641: 7b 17 48 03              u64 [sp + 0x348] = a0
  1645: 49 21 50 03              u64 [sp + 848] = 0
  1649: 49 21 58 03              u64 [sp + 856] = 0
  1653: 49 21 60 03              u64 [sp + 864] = 0
  1657: 49 21 68 03              u64 [sp + 872] = 0
  1661: 49 21 70 03              u64 [sp + 880] = 0
  1665: 95 17 fc 02              a0 = sp + 0x2fc
  1669: 95 16 88 13              s1 = sp + 0x1388
  1673: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  1677: 82 17 48                 a0 = u64 [sp + 0x48]
  1680: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  1684: 33 07 78 06 01           a0 = 0x10678
  1689: 7b 17 80 03              u64 [sp + 0x380] = a0
  1693: 49 21 88 03 01           u64 [sp + 904] = 0x1
  1698: 49 21 a0 03              u64 [sp + 928] = 0
  1702: 95 18 40 14              a1 = sp + 0x1440
  1706: 7b 18 90 03              u64 [sp + 0x390] = a1
  1710: 49 21 98 03 01           u64 [sp + 920] = 0x1
  1715: 95 17 d8 13              a0 = sp + 0x13d8
  1719: 95 18 80 03              a1 = sp + 0x380
  1723: 50 10 20 34 27           ra = 32, jump @647
      :                          @103 [@dyn 16]
  1728: 82 65 58                 s0 = u64 [s1 + 0x58]
  1731: 82 6b 60                 a4 = u64 [s1 + 0x60]
  1734: 82 66 50                 s1 = u64 [s1 + 0x50]
  1737: 33 07 02                 a0 = 0x2
  1740: 33 08                    a1 = 0
  1742: 33 09                    a2 = 0
  1744: 64 5a                    a3 = s0
  1746: 33 00 22                 ra = 0x22
  1749: 0a 64                    ecalli 100 // 'log'
  1751: 01                       fallthrough
      :                          @104 [@dyn 17]
  1752: 82 17 88 00              a0 = u64 [sp + 0x88]
  1756: c8 67 07                 a0 = a0 + s1
  1759: 53 27 00 f0 23           jump @110 if a0 <u 4294963200
      :                          @105
  1764: 82 18 78                 a1 = u64 [sp + 0x78]
  1767: 95 87 00 10              a0 = a1 + 0x1000
  1771: 01                       fallthrough
      :                          @106
  1772: 82 78                    a1 = u64 [a0]
  1774: c9 87 09                 a2 = a0 - a1
  1777: ab 59 11                 jump @110 if a2 != s0
      :                          @107
  1780: c9 68 09                 a2 = a1 - s1
  1783: 01                       fallthrough
      :                          @108
  1784: 82 7a                    a3 = u64 [a0]
  1786: ab 8a f2                 jump @106 if a3 != a1
      :                          @109
  1789: 7b 79                    u64 [a0] = a2
  1791: 33 0b                    a4 = 0
  1793: 01                       fallthrough
      :                          @110
  1794: 80 17 b8 02              a0 = u32 [sp + 0x2b8]
  1798: 7b 17 48                 u64 [sp + 0x48] = a0
  1801: 7a 17 7c 03              u32 [sp + 0x37c] = a0
  1805: 33 05 08 10              s0 = 0x1008
  1809: 95 17 80 03              a0 = sp + 0x380
  1813: 33 08                    a1 = 0
  1815: 33 09 08 10              a2 = 0x1008
  1819: 50 10 24 fb 29           ra = 36, jump @715
      :                          @111 [@dyn 18]
  1824: 95 16 88 13              s1 = sp + 0x1388
  1828: 49 06                    u64 [s1 + 0] = 0
  1830: 95 17 88 03              a0 = sp + 0x388
  1834: 7b 67 08                 u64 [s1 + 0x8] = a0
  1837: 95 17 80 03              a0 = sp + 0x380
  1841: 33 0a 06                 a3 = 0x6
  1844: 33 08                    a1 = 0
  1846: 7b 15 70                 u64 [sp + 0x70] = s0
  1849: 64 59                    a2 = s0
  1851: 33 0b                    a4 = 0
  1853: 33 0c                    a5 = 0
  1855: 0a 12                    ecalli 18 // 'fetch'
  1857: 01                       fallthrough
      :                          @112
  1858: 7b 67 10                 u64 [s1 + 0x10] = a0
  1861: 51 17 ff 52 02           jump @139 if a0 == 4294967295
      :                          @113
  1866: 33 07 88 06 01           a0 = 0x10688
  1871: 7b 17 68                 u64 [sp + 0x68] = a0
  1874: 33 07 a8 06 01           a0 = 0x106a8
  1879: 7b 17 60                 u64 [sp + 0x60] = a0
  1882: 33 07 28 00 01           a0 = 0x10028
  1887: 7b 17 58                 u64 [sp + 0x58] = a0
  1890: 33 07 d8 06 01           a0 = 0x106d8
  1895: 7b 17 50                 u64 [sp + 0x50] = a0
  1898: 28 26                    jump @116
      :                          @114
  1900: 95 16 88 13              s1 = sp + 0x1388
  1904: 82 6b                    a4 = u64 [s1]
  1906: 95 bb 01                 a4 = a4 + 0x1
  1909: 7b 6b                    u64 [s1] = a4
  1911: 95 17 80 03              a0 = sp + 0x380
  1915: 33 0a 06                 a3 = 0x6
  1918: 33 08                    a1 = 0
  1920: 82 19 70                 a2 = u64 [sp + 0x70]
  1923: 33 0c                    a5 = 0
  1925: 0a 12                    ecalli 18 // 'fetch'
  1927: 01                       fallthrough
      :                          @115
  1928: 7b 67 10                 u64 [s1 + 0x10] = a0
  1931: 51 17 ff 0c 02           jump @139 if a0 == 4294967295
      :                          @116
  1936: 7b 66 b8 00              u64 [s1 + 0xb8] = s1
  1940: 82 17 80 00              a0 = u64 [sp + 0x80]
  1944: 7b 67 c0 00              u64 [s1 + 0xc0] = a0
  1948: 95 18 98 13              a1 = sp + 0x1398
  1952: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  1956: 7b 67 d0 00              u64 [s1 + 0xd0] = a0
  1960: 82 17 68                 a0 = u64 [sp + 0x68]
  1963: 7b 67 50                 u64 [s1 + 0x50] = a0
  1966: 49 16 58 02              u64 [s1 + 88] = 0x2
  1970: 49 16 70                 u64 [s1 + 112] = 0
  1973: 95 18 40 14              a1 = sp + 0x1440
  1977: 7b 68 60                 u64 [s1 + 0x60] = a1
  1980: 49 16 68 02              u64 [s1 + 104] = 0x2
  1984: 95 17 28 14              a0 = sp + 0x1428
  1988: 95 18 d8 13              a1 = sp + 0x13d8
  1992: 50 10 26 27 26           ra = 38, jump @647
      :                          @117 [@dyn 19]
  1997: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  2001: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  2005: 95 17 88 13              a0 = sp + 0x1388
  2009: 82 76 a0 00              s1 = u64 [a0 + 0xa0]
  2013: 33 07 02                 a0 = 0x2
  2016: 33 08                    a1 = 0
  2018: 33 09                    a2 = 0
  2020: 64 5a                    a3 = s0
  2022: 33 00 28                 ra = 0x28
  2025: 0a 64                    ecalli 100 // 'log'
  2027: 01                       fallthrough
      :                          @118 [@dyn 20]
  2028: 82 17 88 00              a0 = u64 [sp + 0x88]
  2032: c8 67 07                 a0 = a0 + s1
  2035: 82 1c 78                 a5 = u64 [sp + 0x78]
  2038: 33 02 00 10              t0 = 0x1000
  2042: 53 27 00 f0 1c           jump @123 if a0 <u 4294963200
      :                          @119
  2047: c8 2c 08                 a1 = a5 + t0
  2050: 82 87                    a0 = u64 [a1]
  2052: c9 78 09                 a2 = a1 - a0
  2055: ab 59 0f                 jump @123 if a2 != s0
      :                          @120
  2058: c9 67 09                 a2 = a0 - s1
  2061: 01                       fallthrough
      :                          @121
  2062: 82 8a                    a3 = u64 [a1]
  2064: ab 7a ef                 jump @119 if a3 != a0
      :                          @122
  2067: 7b 89                    u64 [a1] = a2
  2069: 01                       fallthrough
      :                          @123
  2070: 80 17 80 03              a0 = u32 [sp + 0x380]
  2074: 80 18 84 03              a1 = u32 [sp + 0x384]
  2078: 95 16 88 13              s1 = sp + 0x1388
  2082: 7b 67 18                 u64 [s1 + 0x18] = a0
  2085: 7b 68 20                 u64 [s1 + 0x20] = a1
  2088: 33 09 01                 a2 = 0x1
  2091: 0a 17                    ecalli 23 // 'zero'
  2093: 7b 67 28                 u64 [s1 + 0x28] = a0
  2096: 95 17 a0 13              a0 = sp + 0x13a0
  2100: 7b 67 50                 u64 [s1 + 0x50] = a0
  2103: 82 17 80 00              a0 = u64 [sp + 0x80]
  2107: 7b 67 58                 u64 [s1 + 0x58] = a0
  2110: 95 18 a8 13              a1 = sp + 0x13a8
  2114: 7b 68 60                 u64 [s1 + 0x60] = a1
  2117: 7b 67 68                 u64 [s1 + 0x68] = a0
  2120: 95 18 b0 13              a1 = sp + 0x13b0
  2124: 7b 68 70                 u64 [s1 + 0x70] = a1
  2127: 7b 67 78                 u64 [s1 + 0x78] = a0
  2130: 82 17 60                 a0 = u64 [sp + 0x60]
  2133: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2137: 49 26 c0 00 03           u64 [s1 + 192] = 0x3
  2142: 49 26 d8 00              u64 [s1 + 216] = 0
  2146: 95 17 d8 13              a0 = sp + 0x13d8
  2150: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  2154: 49 26 d0 00 03           u64 [s1 + 208] = 0x3
  2159: 95 17 28 14              a0 = sp + 0x1428
  2163: 95 18 40 14              a1 = sp + 0x1440
  2167: 50 10 2a 78 25           ra = 42, jump @647
      :                          @124 [@dyn 21]
  2172: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  2176: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  2180: 82 66 a0 00              s1 = u64 [s1 + 0xa0]
  2184: 33 07 02                 a0 = 0x2
  2187: 33 08                    a1 = 0
  2189: 33 09                    a2 = 0
  2191: 64 5a                    a3 = s0
  2193: 33 00 2c                 ra = 0x2c
  2196: 0a 64                    ecalli 100 // 'log'
  2198: 01                       fallthrough
      :                          @125 [@dyn 22]
  2199: 33 02 00 10              t0 = 0x1000
  2203: 82 1c 78                 a5 = u64 [sp + 0x78]
  2206: 82 17 88 00              a0 = u64 [sp + 0x88]
  2210: c8 67 07                 a0 = a0 + s1
  2213: 53 27 00 f0 1c           jump @130 if a0 <u 4294963200
      :                          @126
  2218: c8 2c 08                 a1 = a5 + t0
  2221: 82 87                    a0 = u64 [a1]
  2223: c9 78 09                 a2 = a1 - a0
  2226: ab 59 0f                 jump @130 if a2 != s0
      :                          @127
  2229: c9 67 09                 a2 = a0 - s1
  2232: 01                       fallthrough
      :                          @128
  2233: 82 8a                    a3 = u64 [a1]
  2235: ab 7a ef                 jump @126 if a3 != a0
      :                          @129
  2238: 7b 89                    u64 [a1] = a2
  2240: 01                       fallthrough
      :                          @130
  2241: 95 16 88 13              s1 = sp + 0x1388
  2245: 82 69 20                 a2 = u64 [s1 + 0x20]
  2248: 82 67 18                 a0 = u64 [s1 + 0x18]
  2251: 95 18 80 03              a1 = sp + 0x380
  2255: 7b 68 40                 u64 [s1 + 0x40] = a1
  2258: 97 99 0c                 a2 = a2 << 0xc
  2261: 7b 69 48                 u64 [s1 + 0x48] = a2
  2264: 33 0a 00 10              a3 = 0x1000
  2268: 95 18 88 03              a1 = sp + 0x388
  2272: 0a 16                    ecalli 22 // 'poke'
  2274: 7b 67 30                 u64 [s1 + 0x30] = a0
  2277: 95 17 a0 13              a0 = sp + 0x13a0
  2281: 7b 67 50                 u64 [s1 + 0x50] = a0
  2284: 82 17 80 00              a0 = u64 [sp + 0x80]
  2288: 7b 67 58                 u64 [s1 + 0x58] = a0
  2291: 95 18 c8 13              a1 = sp + 0x13c8
  2295: 7b 68 60                 u64 [s1 + 0x60] = a1
  2298: 7b 67 68                 u64 [s1 + 0x68] = a0
  2301: 95 18 d0 13              a1 = sp + 0x13d0
  2305: 7b 68 70                 u64 [s1 + 0x70] = a1
  2308: 7b 67 78                 u64 [s1 + 0x78] = a0
  2311: 82 18 58                 a1 = u64 [sp + 0x58]
  2314: 7b 68 80 00              u64 [s1 + 0x80] = a1
  2318: 7b 67 88 00              u64 [s1 + 0x88] = a0
  2322: 95 18 b8 13              a1 = sp + 0x13b8
  2326: 7b 68 90 00              u64 [s1 + 0x90] = a1
  2330: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2334: 82 17 50                 a0 = u64 [sp + 0x50]
  2337: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2341: 49 26 c0 00 05           u64 [s1 + 192] = 0x5
  2346: 49 26 d8 00              u64 [s1 + 216] = 0
  2350: 95 17 d8 13              a0 = sp + 0x13d8
  2354: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  2358: 49 26 d0 00 05           u64 [s1 + 208] = 0x5
  2363: 95 17 28 14              a0 = sp + 0x1428
  2367: 95 18 40 14              a1 = sp + 0x1440
  2371: 50 10 2e ac 24           ra = 46, jump @647
      :                          @131 [@dyn 23]
  2376: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  2380: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  2384: 82 66 a0 00              s1 = u64 [s1 + 0xa0]
  2388: 33 07 02                 a0 = 0x2
  2391: 33 08                    a1 = 0
  2393: 33 09                    a2 = 0
  2395: 64 5a                    a3 = s0
  2397: 33 00 30                 ra = 0x30
  2400: 0a 64                    ecalli 100 // 'log'
  2402: 01                       fallthrough
      :                          @132 [@dyn 24]
  2403: 33 02 00 10              t0 = 0x1000
  2407: 82 1c 78                 a5 = u64 [sp + 0x78]
  2410: 82 17 88 00              a0 = u64 [sp + 0x88]
  2414: c8 67 07                 a0 = a0 + s1
  2417: 53 27 00 f0 fb fd        jump @114 if a0 <u 4294963200
      :                          @133
  2423: c8 2c 08                 a1 = a5 + t0
  2426: 82 87                    a0 = u64 [a1]
  2428: c9 78 09                 a2 = a1 - a0
  2431: ab 59 ed fd              jump @114 if a2 != s0
      :                          @134
  2435: c9 67 09                 a2 = a0 - s1
  2438: 01                       fallthrough
      :                          @135
  2439: 82 8a                    a3 = u64 [a1]
  2441: ab 7a ee                 jump @133 if a3 != a0
      :                          @136
  2444: 7b 89                    u64 [a1] = a2
  2446: 33 0b                    a4 = 0
  2448: 01                       fallthrough
      :                          @137
  2449: ab 7a e6                 jump @133 if a3 != a0
      :                          @138
  2452: 28 d8 fd                 jump @114
      :                          @139
  2455: 95 18 08 03              a1 = sp + 0x308
  2459: 82 17 48                 a0 = u64 [sp + 0x48]
  2462: 0a 19                    ecalli 25 // 'invoke'
  2464: 0a                       ecalli 0 // 'gas'
  2465: 7b 17 00 03              u64 [sp + 0x300] = a0
  2469: 95 17 7c 03              a0 = sp + 0x37c
  2473: 7b 67 50                 u64 [s1 + 0x50] = a0
  2476: 33 07 0c                 a0 = 0xc
  2479: 7b 17 50                 u64 [sp + 0x50] = a0
  2482: 7b 67 58                 u64 [s1 + 0x58] = a0
  2485: 95 17 b0 13              a0 = sp + 0x13b0
  2489: 7b 67 60                 u64 [s1 + 0x60] = a0
  2492: 33 07 02                 a0 = 0x2
  2495: 7b 17 68                 u64 [sp + 0x68] = a0
  2498: 7b 67 68                 u64 [s1 + 0x68] = a0
  2501: 95 17 00 03              a0 = sp + 0x300
  2505: 7b 67 70                 u64 [s1 + 0x70] = a0
  2508: 82 17 80 00              a0 = u64 [sp + 0x80]
  2512: 7b 67 78                 u64 [s1 + 0x78] = a0
  2515: 33 07 28 07 01           a0 = 0x10728
  2520: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  2524: 49 26 c0 00 03           u64 [s1 + 192] = 0x3
  2529: 49 26 d8 00              u64 [s1 + 216] = 0
  2533: 95 18 d8 13              a1 = sp + 0x13d8
  2537: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  2541: 49 26 d0 00 03           u64 [s1 + 208] = 0x3
  2546: 95 17 28 14              a0 = sp + 0x1428
  2550: 95 18 40 14              a1 = sp + 0x1440
  2554: 50 10 32 f5 23           ra = 50, jump @647
      :                          @140 [@dyn 25]
  2559: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  2563: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  2567: 95 17 88 13              a0 = sp + 0x1388
  2571: 82 76 a0 00              s1 = u64 [a0 + 0xa0]
  2575: 33 07 02                 a0 = 0x2
  2578: 33 08                    a1 = 0
  2580: 33 09                    a2 = 0
  2582: 64 5a                    a3 = s0
  2584: 33 00 34                 ra = 0x34
  2587: 0a 64                    ecalli 100 // 'log'
  2589: 01                       fallthrough
      :                          @141 [@dyn 26]
  2590: 82 17 88 00              a0 = u64 [sp + 0x88]
  2594: c8 67 07                 a0 = a0 + s1
  2597: 53 27 00 f0 23           jump @147 if a0 <u 4294963200
      :                          @142
  2602: 82 18 78                 a1 = u64 [sp + 0x78]
  2605: 95 87 00 10              a0 = a1 + 0x1000
  2609: 01                       fallthrough
      :                          @143
  2610: 82 78                    a1 = u64 [a0]
  2612: c9 87 09                 a2 = a0 - a1
  2615: ab 59 11                 jump @147 if a2 != s0
      :                          @144
  2618: c9 68 09                 a2 = a1 - s1
  2621: 01                       fallthrough
      :                          @145
  2622: 82 7a                    a3 = u64 [a0]
  2624: ab 8a f2                 jump @143 if a3 != a1
      :                          @146
  2627: 7b 79                    u64 [a0] = a2
  2629: 33 0b                    a4 = 0
  2631: 01                       fallthrough
      :                          @147
  2632: 95 17 88 13              a0 = sp + 0x1388
  2636: 48 17 38                 u32 [a0 + 56] = 0
  2639: 49 17 30                 u64 [a0 + 48] = 0
  2642: 82 79                    a2 = u64 [a0]
  2644: 33 08 04                 a1 = 0x4
  2647: 7b 18 58                 u64 [sp + 0x58] = a1
  2650: 33 08 48 00 01           a1 = 0x10048
  2655: 7b 18 48                 u64 [sp + 0x48] = a1
  2658: 7b 19 40                 u64 [sp + 0x40] = a2
  2661: 51 19 ff d0 02           jump @177 if a2 == 4294967295
      :                          @148
  2666: 33 08                    a1 = 0
  2668: 81 19 7c 03              a2 = i32 [sp + 0x37c]
  2672: 7b 19 10                 u64 [sp + 0x10] = a2
  2675: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  2685: 7b 17 38                 u64 [sp + 0x38] = a0
  2688: 33 09 28 00 01           a2 = 0x10028
  2693: 7b 19 30                 u64 [sp + 0x30] = a2
  2696: 33 09 c8 07 01           a2 = 0x107c8
  2701: 7b 19 28                 u64 [sp + 0x28] = a2
  2704: 33 09 18 08 01           a2 = 0x10818
  2709: 7b 19 08                 u64 [sp + 0x8] = a2
  2712: 82 16 78                 s1 = u64 [sp + 0x78]
  2715: 95 66 00 10              s1 = s1 + 0x1000
  2719: 49 11 20 08 10           u64 [sp + 32] = 0x1008
  2724: 33 07 93 01 01           a0 = 0x10193
  2729: 7b 17 18                 u64 [sp + 0x18] = a0
  2732: 28 0f                    jump @150
      :                          @149
  2734: 82 19 70                 a2 = u64 [sp + 0x70]
  2737: 95 98 01                 a1 = a2 + 0x1
  2740: 82 17 40                 a0 = u64 [sp + 0x40]
  2743: aa 79 7e 02              jump @177 if a2 == a0
      :                          @150
  2747: 95 1b 88 13              a4 = sp + 0x1388
  2751: 7b b8 40                 u64 [a4 + 0x40] = a1
  2754: 7b 18 70                 u64 [sp + 0x70] = a1
  2757: 97 89 0c                 a2 = a1 << 0xc
  2760: 80 17 7c 03              a0 = u32 [sp + 0x37c]
  2764: 82 b8 08                 a1 = u64 [a4 + 0x8]
  2767: 95 99 00 00 01           a2 = a2 + 0x10000
  2772: 82 1a 38                 a3 = u64 [sp + 0x38]
  2775: d2 a9 09                 a2 = a2 & a3
  2778: 7b b9 48                 u64 [a4 + 0x48] = a2
  2781: 33 0a 00 10              a3 = 0x1000
  2785: 0a 15                    ecalli 21 // 'peek'
  2787: 95 17 7c 03              a0 = sp + 0x37c
  2791: 95 19 88 13              a2 = sp + 0x1388
  2795: 7b 97 50                 u64 [a2 + 0x50] = a0
  2798: 82 17 50                 a0 = u64 [sp + 0x50]
  2801: 7b 97 58                 u64 [a2 + 0x58] = a0
  2804: 95 17 90 13              a0 = sp + 0x1390
  2808: 7b 97 60                 u64 [a2 + 0x60] = a0
  2811: 82 17 80 00              a0 = u64 [sp + 0x80]
  2815: 7b 97 68                 u64 [a2 + 0x68] = a0
  2818: 95 18 d0 13              a1 = sp + 0x13d0
  2822: 7b 98 70                 u64 [a2 + 0x70] = a1
  2825: 7b 97 78                 u64 [a2 + 0x78] = a0
  2828: 82 18 30                 a1 = u64 [sp + 0x30]
  2831: 7b 98 80 00              u64 [a2 + 0x80] = a1
  2835: 7b 97 88 00              u64 [a2 + 0x88] = a0
  2839: 95 17 b0 13              a0 = sp + 0x13b0
  2843: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2847: 82 17 68                 a0 = u64 [sp + 0x68]
  2850: 7b 97 98 00              u64 [a2 + 0x98] = a0
  2854: 82 17 28                 a0 = u64 [sp + 0x28]
  2857: 7b 97 b8 00              u64 [a2 + 0xb8] = a0
  2861: 49 29 c0 00 05           u64 [a2 + 192] = 0x5
  2866: 49 29 d8 00              u64 [a2 + 216] = 0
  2870: 95 18 d8 13              a1 = sp + 0x13d8
  2874: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
  2878: 49 29 d0 00 05           u64 [a2 + 208] = 0x5
  2883: 95 17 28 14              a0 = sp + 0x1428
  2887: 95 18 40 14              a1 = sp + 0x1440
  2891: 50 10 36 a4 22           ra = 54, jump @647
      :                          @151 [@dyn 27]
  2896: 95 17 88 13              a0 = sp + 0x1388
  2900: 82 75 a8 00              s0 = u64 [a0 + 0xa8]
  2904: 82 7b b0 00              a4 = u64 [a0 + 0xb0]
  2908: 82 77 a0 00              a0 = u64 [a0 + 0xa0]
  2912: 7b 17 60                 u64 [sp + 0x60] = a0
  2915: 33 07 02                 a0 = 0x2
  2918: 33 08                    a1 = 0
  2920: 33 09                    a2 = 0
  2922: 64 5a                    a3 = s0
  2924: 33 00 38                 ra = 0x38
  2927: 0a 64                    ecalli 100 // 'log'
  2929: 01                       fallthrough
      :                          @152 [@dyn 28]
  2930: 82 1b 60                 a4 = u64 [sp + 0x60]
  2933: 82 17 88 00              a0 = u64 [sp + 0x88]
  2937: c8 b7 07                 a0 = a0 + a4
  2940: 53 27 00 f0 19           jump @157 if a0 <u 4294963200
      :                          @153
  2945: 82 67                    a0 = u64 [s1]
  2947: c9 76 08                 a1 = s1 - a0
  2950: ab 58 0f                 jump @157 if a1 != s0
      :                          @154
  2953: c9 b7 08                 a1 = a0 - a4
  2956: 01                       fallthrough
      :                          @155
  2957: 82 69                    a2 = u64 [s1]
  2959: ab 79 f2                 jump @153 if a2 != a0
      :                          @156
  2962: 7b 68                    u64 [s1] = a1
  2964: 01                       fallthrough
      :                          @157
  2965: 95 19 88 13              a2 = sp + 0x1388
  2969: 82 97 40                 a0 = u64 [a2 + 0x40]
  2972: 82 98                    a1 = u64 [a2]
  2974: ab 87 ad 00              jump @166 if a0 != a1
      :                          @158
  2978: 83 77 10                 i32 a0 = a0 + 0x10
  2981: 82 18 10                 a1 = u64 [sp + 0x10]
  2984: 7a 18 80 03              u32 [sp + 0x380] = a1
  2988: 7a 17 84 03              u32 [sp + 0x384] = a0
  2992: 95 17 80 03              a0 = sp + 0x380
  2996: 7b 97 b8 00              u64 [a2 + 0xb8] = a0
  3000: 82 17 58                 a0 = u64 [sp + 0x58]
  3003: 7b 97 c0 00              u64 [a2 + 0xc0] = a0
  3007: 95 18 84 03              a1 = sp + 0x384
  3011: 7b 98 c8 00              u64 [a2 + 0xc8] = a1
  3015: 7b 97 d0 00              u64 [a2 + 0xd0] = a0
  3019: 82 17 08                 a0 = u64 [sp + 0x8]
  3022: 7b 97 50                 u64 [a2 + 0x50] = a0
  3025: 49 19 58 02              u64 [a2 + 88] = 0x2
  3029: 49 19 70                 u64 [a2 + 112] = 0
  3032: 95 17 40 14              a0 = sp + 0x1440
  3036: 7b 97 60                 u64 [a2 + 0x60] = a0
  3039: 49 19 68 02              u64 [a2 + 104] = 0x2
  3043: 95 17 28 14              a0 = sp + 0x1428
  3047: 95 18 d8 13              a1 = sp + 0x13d8
  3051: 50 10 3a 04 22           ra = 58, jump @647
      :                          @159 [@dyn 29]
  3056: 95 17 88 13              a0 = sp + 0x1388
  3060: 82 75 a8 00              s0 = u64 [a0 + 0xa8]
  3064: 82 7b b0 00              a4 = u64 [a0 + 0xb0]
  3068: 82 77 a0 00              a0 = u64 [a0 + 0xa0]
  3072: 7b 17 60                 u64 [sp + 0x60] = a0
  3075: 33 07 02                 a0 = 0x2
  3078: 33 08                    a1 = 0
  3080: 33 09                    a2 = 0
  3082: 64 5a                    a3 = s0
  3084: 33 00 3c                 ra = 0x3c
  3087: 0a 64                    ecalli 100 // 'log'
  3089: 01                       fallthrough
      :                          @160 [@dyn 30]
  3090: 82 1b 60                 a4 = u64 [sp + 0x60]
  3093: 82 17 88 00              a0 = u64 [sp + 0x88]
  3097: c8 b7 07                 a0 = a0 + a4
  3100: 53 27 00 f0 19           jump @165 if a0 <u 4294963200
      :                          @161
  3105: 82 67                    a0 = u64 [s1]
  3107: c9 76 08                 a1 = s1 - a0
  3110: ab 58 0f                 jump @165 if a1 != s0
      :                          @162
  3113: c9 b7 08                 a1 = a0 - a4
  3116: 01                       fallthrough
      :                          @163
  3117: 82 69                    a2 = u64 [s1]
  3119: ab 79 f2                 jump @161 if a2 != a0
      :                          @164
  3122: 7b 68                    u64 [s1] = a1
  3124: 01                       fallthrough
      :                          @165
  3125: 95 17 88 13              a0 = sp + 0x1388
  3129: 82 18 70                 a1 = u64 [sp + 0x70]
  3132: 7a 78 30                 u32 [a0 + 0x30] = a1
  3135: 95 18 bc 13              a1 = sp + 0x13bc
  3139: 81 17 88 03              a0 = i32 [sp + 0x388]
  3143: 7a 87                    u32 [a1] = a0
  3145: 28 13                    jump @168
      :                          @166
  3147: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  3150: 95 18 c0 13              a1 = sp + 0x13c0
  3154: ab 97 0a                 jump @168 if a0 != a2
      :                          @167
  3157: 81 17 88 03              a0 = i32 [sp + 0x388]
  3161: 7a 87                    u32 [a1] = a0
  3163: 01                       fallthrough
      :                          @168
  3164: 95 17 80 03              a0 = sp + 0x380
  3168: 82 18 20                 a1 = u64 [sp + 0x20]
  3171: 0a 13                    ecalli 19 // 'export'
  3173: 33 07 02                 a0 = 0x2
  3176: 33 0b 04                 a4 = 0x4
  3179: 33 08                    a1 = 0
  3181: 33 09                    a2 = 0
  3183: 82 1a 18                 a3 = u64 [sp + 0x18]
  3186: 0a 64                    ecalli 100 // 'log'
  3188: 0a                       ecalli 0 // 'gas'
  3189: 7b 17 00 03              u64 [sp + 0x300] = a0
  3193: 33 07 38 08 01           a0 = 0x10838
  3198: 95 15 88 13              s0 = sp + 0x1388
  3202: 7b 57 b8 00              u64 [s0 + 0xb8] = a0
  3206: 95 17 c8 13              a0 = sp + 0x13c8
  3210: 7b 57 50                 u64 [s0 + 0x50] = a0
  3213: 82 17 80 00              a0 = u64 [sp + 0x80]
  3217: 7b 57 58                 u64 [s0 + 0x58] = a0
  3220: 82 18 48                 a1 = u64 [sp + 0x48]
  3223: 7b 58 60                 u64 [s0 + 0x60] = a1
  3226: 7b 57 68                 u64 [s0 + 0x68] = a0
  3229: 95 18 b0 13              a1 = sp + 0x13b0
  3233: 7b 58 70                 u64 [s0 + 0x70] = a1
  3236: 82 18 68                 a1 = u64 [sp + 0x68]
  3239: 7b 58 78                 u64 [s0 + 0x78] = a1
  3242: 95 18 00 03              a1 = sp + 0x300
  3246: 7b 58 80 00              u64 [s0 + 0x80] = a1
  3250: 7b 57 88 00              u64 [s0 + 0x88] = a0
  3254: 95 17 b8 13              a0 = sp + 0x13b8
  3258: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3262: 82 17 58                 a0 = u64 [sp + 0x58]
  3265: 7b 57 98 00              u64 [s0 + 0x98] = a0
  3269: 49 25 c0 00 05           u64 [s0 + 192] = 0x5
  3274: 49 25 d8 00              u64 [s0 + 216] = 0
  3278: 95 18 d8 13              a1 = sp + 0x13d8
  3282: 7b 58 c8 00              u64 [s0 + 0xc8] = a1
  3286: 49 25 d0 00 05           u64 [s0 + 208] = 0x5
  3291: 95 17 28 14              a0 = sp + 0x1428
  3295: 95 18 40 14              a1 = sp + 0x1440
  3299: 50 10 3e 0c 21           ra = 62, jump @647
      :                          @169 [@dyn 31]
  3304: 82 57 a8 00              a0 = u64 [s0 + 0xa8]
  3308: 82 5b b0 00              a4 = u64 [s0 + 0xb0]
  3312: 82 58 a0 00              a1 = u64 [s0 + 0xa0]
  3316: 7b 18 60                 u64 [sp + 0x60] = a1
  3319: 64 75                    s0 = a0
  3321: 33 07 02                 a0 = 0x2
  3324: 33 08                    a1 = 0
  3326: 33 09                    a2 = 0
  3328: 64 5a                    a3 = s0
  3330: 33 00 40                 ra = 0x40
  3333: 0a 64                    ecalli 100 // 'log'
  3335: 01                       fallthrough
      :                          @170 [@dyn 32]
  3336: 82 1b 60                 a4 = u64 [sp + 0x60]
  3339: 82 17 88 00              a0 = u64 [sp + 0x88]
  3343: c8 b7 07                 a0 = a0 + a4
  3346: 53 27 00 f0 9c fd        jump @149 if a0 <u 4294963200
      :                          @171
  3352: 82 67                    a0 = u64 [s1]
  3354: c9 76 08                 a1 = s1 - a0
  3357: ab 58 91 fd              jump @149 if a1 != s0
      :                          @172
  3361: c9 b7 08                 a1 = a0 - a4
  3364: 01                       fallthrough
      :                          @173
  3365: 82 69                    a2 = u64 [s1]
  3367: ab 79 f1                 jump @171 if a2 != a0
      :                          @174
  3370: 7b 68                    u64 [s1] = a1
  3372: 33 0a                    a3 = 0
  3374: 01                       fallthrough
      :                          @175
  3375: ab 79 e9                 jump @171 if a2 != a0
      :                          @176
  3378: 28 7c fd                 jump @149
      :                          @177
  3381: 95 17 bc 13              a0 = sp + 0x13bc
  3385: 95 18 c0 13              a1 = sp + 0x13c0
  3389: 95 19 b8 13              a2 = sp + 0x13b8
  3393: 95 16 88 13              s1 = sp + 0x1388
  3397: 7b 69 50                 u64 [s1 + 0x50] = a2
  3400: 82 19 58                 a2 = u64 [sp + 0x58]
  3403: 7b 69 58                 u64 [s1 + 0x58] = a2
  3406: 7b 67 60                 u64 [s1 + 0x60] = a0
  3409: 7b 69 68                 u64 [s1 + 0x68] = a2
  3412: 7b 68 70                 u64 [s1 + 0x70] = a1
  3415: 7b 69 78                 u64 [s1 + 0x78] = a2
  3418: 33 07 58 07 01           a0 = 0x10758
  3423: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  3427: 49 26 c0 00 03           u64 [s1 + 192] = 0x3
  3432: 49 26 d8 00              u64 [s1 + 216] = 0
  3436: 95 18 d8 13              a1 = sp + 0x13d8
  3440: 7b 68 c8 00              u64 [s1 + 0xc8] = a1
  3444: 49 26 d0 00 03           u64 [s1 + 208] = 0x3
  3449: 95 17 28 14              a0 = sp + 0x1428
  3453: 95 18 40 14              a1 = sp + 0x1440
  3457: 50 10 42 6e 20           ra = 66, jump @647
      :                          @178 [@dyn 33]
  3462: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  3466: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  3470: 82 66 a0 00              s1 = u64 [s1 + 0xa0]
  3474: 33 07 02                 a0 = 0x2
  3477: 33 08                    a1 = 0
  3479: 33 09                    a2 = 0
  3481: 64 5a                    a3 = s0
  3483: 33 00 44                 ra = 0x44
  3486: 0a 64                    ecalli 100 // 'log'
  3488: 01                       fallthrough
      :                          @179 [@dyn 34]
  3489: 82 17 88 00              a0 = u64 [sp + 0x88]
  3493: c8 67 07                 a0 = a0 + s1
  3496: 53 27 00 f0 21           jump @185 if a0 <u 4294963200
      :                          @180
  3501: 82 18 78                 a1 = u64 [sp + 0x78]
  3504: 95 87 00 10              a0 = a1 + 0x1000
  3508: 01                       fallthrough
      :                          @181
  3509: 82 78                    a1 = u64 [a0]
  3511: c9 87 09                 a2 = a0 - a1
  3514: ab 59 0f                 jump @185 if a2 != s0
      :                          @182
  3517: c9 68 09                 a2 = a1 - s1
  3520: 01                       fallthrough
      :                          @183
  3521: 82 7a                    a3 = u64 [a0]
  3523: ab 8a f2                 jump @181 if a3 != a1
      :                          @184
  3526: 7b 79                    u64 [a0] = a2
  3528: 01                       fallthrough
      :                          @185
  3529: 80 17 7c 03              a0 = u32 [sp + 0x37c]
  3533: 0a 1a                    ecalli 26 // 'expunge'
  3535: 0a                       ecalli 0 // 'gas'
  3536: 7b 17 00 03              u64 [sp + 0x300] = a0
  3540: 95 17 7c 03              a0 = sp + 0x37c
  3544: 95 16 88 13              s1 = sp + 0x1388
  3548: 7b 67 50                 u64 [s1 + 0x50] = a0
  3551: 82 17 50                 a0 = u64 [sp + 0x50]
  3554: 7b 67 58                 u64 [s1 + 0x58] = a0
  3557: 82 17 48                 a0 = u64 [sp + 0x48]
  3560: 7b 67 60                 u64 [s1 + 0x60] = a0
  3563: 95 17 b0 13              a0 = sp + 0x13b0
  3567: 7b 67 70                 u64 [s1 + 0x70] = a0
  3570: 82 17 68                 a0 = u64 [sp + 0x68]
  3573: 7b 67 78                 u64 [s1 + 0x78] = a0
  3576: 95 17 00 03              a0 = sp + 0x300
  3580: 7b 67 80 00              u64 [s1 + 0x80] = a0
  3584: 82 17 80 00              a0 = u64 [sp + 0x80]
  3588: 7b 67 68                 u64 [s1 + 0x68] = a0
  3591: 7b 67 88 00              u64 [s1 + 0x88] = a0
  3595: 33 07 88 07 01           a0 = 0x10788
  3600: 7b 67 b8 00              u64 [s1 + 0xb8] = a0
  3604: 95 17 d8 13              a0 = sp + 0x13d8
  3608: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  3612: 49 26 c0 00 04           u64 [s1 + 192] = 0x4
  3617: 49 26 d0 00 04           u64 [s1 + 208] = 0x4
  3622: 49 26 d8 00              u64 [s1 + 216] = 0
  3626: 95 17 28 14              a0 = sp + 0x1428
  3630: 95 18 40 14              a1 = sp + 0x1440
  3634: 50 10 46 bd 1f           ra = 70, jump @647
      :                          @186 [@dyn 35]
  3639: 82 65 a8 00              s0 = u64 [s1 + 0xa8]
  3643: 82 6b b0 00              a4 = u64 [s1 + 0xb0]
  3647: 82 66 a0 00              s1 = u64 [s1 + 0xa0]
  3651: 33 07 02                 a0 = 0x2
  3654: 33 08                    a1 = 0
  3656: 33 09                    a2 = 0
  3658: 64 5a                    a3 = s0
  3660: 33 00 48                 ra = 0x48
  3663: 0a 64                    ecalli 100 // 'log'
  3665: 01                       fallthrough
      :                          @187 [@dyn 36]
  3666: 82 17 88 00              a0 = u64 [sp + 0x88]
  3670: c8 67 07                 a0 = a0 + s1
  3673: 53 27 00 f0 2c           jump @193 if a0 <u 4294963200
      :                          @188
  3678: 82 18 78                 a1 = u64 [sp + 0x78]
  3681: 95 87 00 10              a0 = a1 + 0x1000
  3685: 01                       fallthrough
      :                          @189
  3686: 82 78                    a1 = u64 [a0]
  3688: c9 87 09                 a2 = a0 - a1
  3691: ab 59 1a                 jump @193 if a2 != s0
      :                          @190
  3694: c9 68 09                 a2 = a1 - s1
  3697: 01                       fallthrough
      :                          @191
  3698: 82 7a                    a3 = u64 [a0]
  3700: ab 8a f2                 jump @189 if a3 != a1
      :                          @192
  3703: 7b 79                    u64 [a0] = a2
  3705: 33 0b                    a4 = 0
  3707: 95 1a b8 13              a3 = sp + 0x13b8
  3711: 33 08 0c                 a1 = 0xc
  3714: 28 88 f5                 jump @74
      :                          @193
  3717: 95 1a b8 13              a3 = sp + 0x13b8
  3721: 33 08 0c                 a1 = 0xc
  3724: 28 7e f5                 jump @74
      :                          @194
  3727: 00                       trap
      :                          @195
  3728: 00                       trap
      :                          @196 [export #1: 'accumulate']
  3729: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  3733: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  3737: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  3741: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  3745: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  3749: 33 09 08                 a2 = 0x8
  3752: ac 98 08 01              jump @229 if a1 <u a2
      :                          @197
  3756: 52 07 06                 jump @199 if a0 != 0
      :                          @198
  3759: 28 01 1d                 jump @585
      :                          @199
  3762: 95 79 04                 a2 = a0 + 0x4
  3765: 52 09 06                 jump @201 if a2 != 0
      :                          @200
  3768: 28 f9 1c                 jump @586
      :                          @201
  3771: 7c 79 04                 a2 = u8 [a0 + 0x4]
  3774: 7b 19 40                 u64 [sp + 0x40] = a2
  3777: 7c 79 05                 a2 = u8 [a0 + 0x5]
  3780: 7b 19 28                 u64 [sp + 0x28] = a2
  3783: 7c 79 06                 a2 = u8 [a0 + 0x6]
  3786: 7b 19 38                 u64 [sp + 0x38] = a2
  3789: 7c 79 07                 a2 = u8 [a0 + 0x7]
  3792: 7b 19 30                 u64 [sp + 0x30] = a2
  3795: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  3798: 95 75 08                 s0 = a0 + 0x8
  3801: 51 0a 45                 jump @211 if a3 == 0
      :                          @202
  3804: 7d 58                    a1 = i8 [s0]
  3806: 33 06 01                 s1 = 0x1
  3809: 59 08 40                 jump @212 if a1 >=s 0
      :                          @203
  3812: 84 89 ff 00              a2 = a1 & 0xff
  3816: 33 06 02                 s1 = 0x2
  3819: 53 29 c0 00 2d           jump @209 if a2 <u 192
      :                          @204
  3824: 33 06 03                 s1 = 0x3
  3827: 53 29 e0 00 25           jump @209 if a2 <u 224
      :                          @205
  3832: 33 06 04                 s1 = 0x4
  3835: 53 29 f0 00 1d           jump @209 if a2 <u 240
      :                          @206
  3840: 33 06 05                 s1 = 0x5
  3843: 53 29 f8 00 15           jump @209 if a2 <u 248
      :                          @207
  3848: 33 06 06                 s1 = 0x6
  3851: 53 29 fc 00 0d           jump @209 if a2 <u 252
      :                          @208
  3856: 88 98 fe 00              a1 = a2 <u 0xfe
  3860: 9a 86 08                 s1 = 0x8 - a1
  3863: 01                       fallthrough
      :                          @209
  3864: ae 6a 09                 jump @212 if a3 >=u s1
      :                          @210
  3867: 28 95 00                 jump @229
      :                          @211
  3870: 33 06                    s1 = 0
  3872: 01                       fallthrough
      :                          @212
  3873: 7b 16 48                 u64 [sp + 0x48] = s1
  3876: 64 57                    a0 = s0
  3878: 64 68                    a1 = s1
  3880: 64 a6                    s1 = a3
  3882: 50 10 4a 3a 2e           ra = 74, jump @959
      :                          @213 [@dyn 37]
  3887: 82 1a 48                 a3 = u64 [sp + 0x48]
  3890: 51 07 7e                 jump @229 if a0 == 0
      :                          @214
  3893: e4 a6 07                 a0 = maxu(s1, a3)
  3896: c9 a7 07                 a0 = a0 - a3
  3899: 53 17 60 75              jump @229 if a0 <u 96
      :                          @215
  3903: c8 5a 08                 a1 = a3 + s0
  3906: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  3909: 95 87 60                 a0 = a1 + 0x60
  3912: 7b 17 48                 u64 [sp + 0x48] = a0
  3915: 51 06 4e                 jump @227 if s1 == 0
      :                          @216
  3918: 7d 78                    a1 = i8 [a0]
  3920: 33 05 01                 s0 = 0x1
  3923: 59 08 37                 jump @223 if a1 >=s 0
      :                          @217
  3926: 84 89 ff 00              a2 = a1 & 0xff
  3930: 33 05 02                 s0 = 0x2
  3933: 53 29 c0 00 2d           jump @223 if a2 <u 192
      :                          @218
  3938: 33 05 03                 s0 = 0x3
  3941: 53 29 e0 00 25           jump @223 if a2 <u 224
      :                          @219
  3946: 33 05 04                 s0 = 0x4
  3949: 53 29 f0 00 1d           jump @223 if a2 <u 240
      :                          @220
  3954: 33 05 05                 s0 = 0x5
  3957: 53 29 f8 00 15           jump @223 if a2 <u 248
      :                          @221
  3962: 33 05 06                 s0 = 0x6
  3965: 53 29 fc 00 0d           jump @223 if a2 <u 252
      :                          @222
  3970: 88 98 fe 00              a1 = a2 <u 0xfe
  3974: 9a 85 08                 s0 = 0x8 - a1
  3977: 01                       fallthrough
      :                          @223
  3978: ae 56 06                 jump @225 if s1 >=u s0
      :                          @224
  3981: 28 25 1c                 jump @587
      :                          @225
  3984: 64 58                    a1 = s0
  3986: 50 10 4c d2 2d           ra = 76, jump @959
      :                          @226 [@dyn 38]
  3991: 28 07                    jump @228
      :                          @227
  3993: 33 05                    s0 = 0
  3995: 33 07                    a0 = 0
  3997: 01                       fallthrough
      :                          @228
  3998: e4 56 08                 a1 = maxu(s1, s0)
  4001: c9 58 08                 a1 = a1 - s0
  4004: e4 78 08                 a1 = maxu(a1, a0)
  4007: c9 78 08                 a1 = a1 - a0
  4010: 33 09 21                 a2 = 0x21
  4013: ae 98 23                 jump @231 if a1 >=u a2
      :                          @229
  4016: 33 08                    a1 = 0
  4018: 33 05 00 00 01           s0 = 0x10000
  4023: 01                       fallthrough
      :                          @230
  4024: 64 57                    a0 = s0
  4026: 95 11 40 04              sp = sp + 0x440
  4030: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  4034: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  4038: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  4042: 95 11 f8 07              sp = sp + 0x7f8
  4046: 32 00                    ret
      :                          @231
  4048: 82 19 48                 a2 = u64 [sp + 0x48]
  4051: c8 95 05                 s0 = s0 + a2
  4054: c8 57 07                 a0 = a0 + s0
  4057: 7c 79 20                 a2 = u8 [a0 + 0x20]
  4060: 51 09 0a                 jump @233 if a2 == 0
      :                          @232
  4063: 33 06                    s1 = 0
  4065: 33 0a                    a3 = 0
  4067: 28 85 00                 jump @248
      :                          @233
  4070: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  4073: 95 75 21                 s0 = a0 + 0x21
  4076: 51 0a 56                 jump @245 if a3 == 0
      :                          @234
  4079: 7d 57                    a0 = i8 [s0]
  4081: 33 06 01                 s1 = 0x1
  4084: 59 07 37                 jump @241 if a0 >=s 0
      :                          @235
  4087: 84 77 ff 00              a0 = a0 & 0xff
  4091: 33 06 02                 s1 = 0x2
  4094: 53 27 c0 00 2d           jump @241 if a0 <u 192
      :                          @236
  4099: 33 06 03                 s1 = 0x3
  4102: 53 27 e0 00 25           jump @241 if a0 <u 224
      :                          @237
  4107: 33 06 04                 s1 = 0x4
  4110: 53 27 f0 00 1d           jump @241 if a0 <u 240
      :                          @238
  4115: 33 06 05                 s1 = 0x5
  4118: 53 27 f8 00 15           jump @241 if a0 <u 248
      :                          @239
  4123: 33 06 06                 s1 = 0x6
  4126: 53 27 fc 00 0d           jump @241 if a0 <u 252
      :                          @240
  4131: 88 77 fe 00              a0 = a0 <u 0xfe
  4135: 9a 76 08                 s1 = 0x8 - a0
  4138: 01                       fallthrough
      :                          @241
  4139: 7b 1a 48                 u64 [sp + 0x48] = a3
  4142: ae 6a 06                 jump @243 if a3 >=u s1
      :                          @242
  4145: 28 83 1b                 jump @589
      :                          @243
  4148: 64 57                    a0 = s0
  4150: 64 68                    a1 = s1
  4152: 50 10 4e 2c 2d           ra = 78, jump @959
      :                          @244 [@dyn 39]
  4157: 82 1a 48                 a3 = u64 [sp + 0x48]
  4160: 28 07                    jump @246
      :                          @245
  4162: 33 06                    s1 = 0
  4164: 33 07                    a0 = 0
  4166: 01                       fallthrough
      :                          @246
  4167: e4 6a 08                 a1 = maxu(a3, s1)
  4170: c9 68 08                 a1 = a1 - s1
  4173: e6 78 0a                 a3 = minu(a1, a0)
  4176: c8 56 06                 s1 = s1 + s0
  4179: 52 1a 24 15              jump @248 if a3 != 36
      :                          @247
  4183: 80 68 20                 a1 = u32 [s1 + 0x20]
  4186: 64 67                    a0 = s1
  4188: 0a 0e                    ecalli 14 // 'solicit'
  4190: 33 08                    a1 = 0
  4192: 33 05 00 00 01           s0 = 0x10000
  4197: 28 53 ff                 jump @230
      :                          @248
  4200: 82 17 28                 a0 = u64 [sp + 0x28]
  4203: 97 77 08                 a0 = a0 << 0x8
  4206: 82 18 40                 a1 = u64 [sp + 0x40]
  4209: d4 87 07                 a0 = a0 | a1
  4212: 82 18 38                 a1 = u64 [sp + 0x38]
  4215: 97 88 10                 a1 = a1 << 0x10
  4218: 82 19 30                 a2 = u64 [sp + 0x30]
  4221: 97 99 18                 a2 = a2 << 0x18
  4224: d4 98 08                 a1 = a1 | a2
  4227: d4 87 07                 a0 = a0 | a1
  4230: 7b 17 30                 u64 [sp + 0x30] = a0
  4233: 46 11 51                 u8 [sp + 81] = 0
  4236: 81 65                    s0 = i32 [s1]
  4238: 95 17 51                 a0 = sp + 0x51
  4241: 33 08 01                 a1 = 0x1
  4244: 7b 16 18                 u64 [sp + 0x18] = s1
  4247: 64 69                    a2 = s1
  4249: 7b 1a 20                 u64 [sp + 0x20] = a3
  4252: 0a 03                    ecalli 3 // 'write'
  4254: 46 11 52 6a              u8 [sp + 82] = 0x6a
  4258: 46 11 53 61              u8 [sp + 83] = 0x61
  4262: 46 11 54 6d              u8 [sp + 84] = 0x6d
  4266: 46 11 55 44              u8 [sp + 85] = 0x44
  4270: 46 11 56 4f              u8 [sp + 86] = 0x4f
  4274: 46 11 57 54              u8 [sp + 87] = 0x54
  4278: 46 11 58 6a              u8 [sp + 88] = 0x6a
  4282: 46 11 59 0d              u8 [sp + 89] = 0xd
  4286: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  4290: 46 11 5b 19              u8 [sp + 91] = 0x19
  4294: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  4299: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  4304: 46 11 5e 50              u8 [sp + 94] = 0x50
  4308: 46 11 5f 57              u8 [sp + 95] = 0x57
  4312: 46 11 60 13              u8 [sp + 96] = 0x13
  4316: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  4321: 46 11 62 65              u8 [sp + 98] = 0x65
  4325: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  4330: 46 11 64 31              u8 [sp + 100] = 0x31
  4334: 46 11 65 03              u8 [sp + 101] = 0x3
  4338: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  4343: 46 11 67 73              u8 [sp + 103] = 0x73
  4347: 33 0b f1 00              a4 = 0xf1
  4351: 78 1b 68                 u8 [sp + 0x68] = a4
  4354: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  4359: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  4364: 46 11 6b 64              u8 [sp + 107] = 0x64
  4368: 46 11 6c 56              u8 [sp + 108] = 0x56
  4372: 46 11 6d 32              u8 [sp + 109] = 0x32
  4376: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  4381: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  4386: 46 11 70 50              u8 [sp + 112] = 0x50
  4390: 33 0c 3c                 a5 = 0x3c
  4393: 78 1c 71                 u8 [sp + 0x71] = a5
  4396: 46 11 72 4f              u8 [sp + 114] = 0x4f
  4400: 46 11 73 0c              u8 [sp + 115] = 0xc
  4404: 46 11 74 4d              u8 [sp + 116] = 0x4d
  4408: 46 11 75 5e              u8 [sp + 117] = 0x5e
  4412: 46 11 76 19              u8 [sp + 118] = 0x19
  4416: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  4421: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  4426: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  4431: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  4436: 46 11 7b 0f              u8 [sp + 123] = 0xf
  4440: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  4445: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  4450: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  4455: 46 11 7f 47              u8 [sp + 127] = 0x47
  4459: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  4465: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  4470: 78 1c 82 00              u8 [sp + 0x82] = a5
  4474: 78 1b 83 00              u8 [sp + 0x83] = a4
  4478: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  4484: 95 16 ff 07              s1 = sp + 0x7ff
  4488: 95 66 99 03              s1 = s1 + 0x399
  4492: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  4497: 46 21 86 00 49           u8 [sp + 134] = 0x49
  4502: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  4508: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  4514: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  4520: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  4526: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  4532: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  4538: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  4543: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  4548: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  4553: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  4559: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  4565: 46 21 92 00 33           u8 [sp + 146] = 0x33
  4570: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  4575: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  4581: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  4587: 46 21 96 00 55           u8 [sp + 150] = 0x55
  4592: 46 21 97 00 07           u8 [sp + 151] = 0x7
  4597: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  4602: 95 17 98 00              a0 = sp + 0x98
  4606: 33 09 00 01              a2 = 0x100
  4610: 33 08                    a1 = 0
  4612: 50 10 50 12 1f           ra = 80, jump @715
      :                          @249 [@dyn 40]
  4617: 7b 15 28                 u64 [sp + 0x28] = s0
  4620: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  4623: 33 09 48 00 01           a2 = 0x10048
  4628: 7b 19 38                 u64 [sp + 0x38] = a2
  4631: 33 09 10                 a2 = 0x10
  4634: 7b 19 40                 u64 [sp + 0x40] = a2
  4637: 54 17 09 07              jump @251 if a0 <=u 9
      :                          @250
  4641: 28 b2 17                 jump @558
      :                          @251
  4644: 97 77 02                 a0 = a0 << 0x2
  4647: 33 08 00 00 01           a1 = 0x10000
  4652: c8 87 07                 a0 = a0 + a1
  4655: 81 77                    a0 = i32 [a0]
  4657: c8 87 07                 a0 = a0 + a1
  4660: 32 07                    jump [a0]
      :                          @252 [@dyn 41]
  4662: 95 18 52                 a1 = sp + 0x52
  4665: 33 09 03                 a2 = 0x3
  4668: 95 1a 98 00              a3 = sp + 0x98
  4672: 33 0c 00 01              a5 = 0x100
  4676: 82 17 30                 a0 = u64 [sp + 0x30]
  4679: 33 0b                    a4 = 0
  4681: 0a 02                    ecalli 2 // 'read'
  4683: 7b 67 70                 u64 [s1 + 0x70] = a0
  4686: 33 07 50 00 01           a0 = 0x10050
  4691: 7b 17 10                 u64 [sp + 0x10] = a0
  4694: 7b 67 18                 u64 [s1 + 0x18] = a0
  4697: 82 18 40                 a1 = u64 [sp + 0x40]
  4700: 7b 68 20                 u64 [s1 + 0x20] = a1
  4703: 95 17 ff 07              a0 = sp + 0x7ff
  4707: 95 77 09 04              a0 = a0 + 0x409
  4711: 7b 67 28                 u64 [s1 + 0x28] = a0
  4714: 7b 68 30                 u64 [s1 + 0x30] = a1
  4717: 33 07 98 08 01           a0 = 0x10898
  4722: 7b 17 98 01              u64 [sp + 0x198] = a0
  4726: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4731: 49 21 b8 01              u64 [sp + 440] = 0
  4735: 95 17 ff 07              a0 = sp + 0x7ff
  4739: 95 77 b1 03              a0 = a0 + 0x3b1
  4743: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4747: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4752: 95 17 ff 07              a0 = sp + 0x7ff
  4756: 95 77 e1 03              a0 = a0 + 0x3e1
  4760: 95 18 98 01              a1 = sp + 0x198
  4764: 50 10 54 53 1b           ra = 84, jump @647
      :                          @253 [@dyn 42]
  4769: 82 65 50                 s0 = u64 [s1 + 0x50]
  4772: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4775: 95 17 ff 07              a0 = sp + 0x7ff
  4779: 95 77 99 03              a0 = a0 + 0x399
  4783: 82 76 48                 s1 = u64 [a0 + 0x48]
  4786: 33 07 02                 a0 = 0x2
  4789: 33 08                    a1 = 0
  4791: 33 09                    a2 = 0
  4793: 64 5a                    a3 = s0
  4795: 33 00 56                 ra = 0x56
  4798: 0a 64                    ecalli 100 // 'log'
  4800: 01                       fallthrough
      :                          @254 [@dyn 43]
  4801: 82 17 48                 a0 = u64 [sp + 0x48]
  4804: c8 67 07                 a0 = a0 + s1
  4807: 53 27 00 f0 23           jump @260 if a0 <u 4294963200
      :                          @255
  4812: 33 07 20 00 03           a0 = 0x30020
  4817: 95 77 00 10              a0 = a0 + 0x1000
  4821: 01                       fallthrough
      :                          @256
  4822: 82 78                    a1 = u64 [a0]
  4824: c9 87 09                 a2 = a0 - a1
  4827: ab 59 0f                 jump @260 if a2 != s0
      :                          @257
  4830: c9 68 09                 a2 = a1 - s1
  4833: 01                       fallthrough
      :                          @258
  4834: 82 7a                    a3 = u64 [a0]
  4836: ab 8a f2                 jump @256 if a3 != a1
      :                          @259
  4839: 7b 79                    u64 [a0] = a2
  4841: 01                       fallthrough
      :                          @260
  4842: 95 16 ff 07              s1 = sp + 0x7ff
  4846: 95 66 99 03              s1 = s1 + 0x399
  4850: 82 67 70                 a0 = u64 [s1 + 0x70]
  4853: 33 08 01                 a1 = 0x1
  4856: 50 10 58 0a 2b           ra = 88, jump @983
      :                          @261 [@dyn 44]
  4861: 95 17 52                 a0 = sp + 0x52
  4864: 33 08 03                 a1 = 0x3
  4867: 95 19 55                 a2 = sp + 0x55
  4870: 33 0a 03                 a3 = 0x3
  4873: 0a 03                    ecalli 3 // 'write'
  4875: 7b 67 78                 u64 [s1 + 0x78] = a0
  4878: 82 17 10                 a0 = u64 [sp + 0x10]
  4881: 7b 67 18                 u64 [s1 + 0x18] = a0
  4884: 95 17 ff 07              a0 = sp + 0x7ff
  4888: 95 77 11 04              a0 = a0 + 0x411
  4892: 7b 67 28                 u64 [s1 + 0x28] = a0
  4895: 33 07 c8 08 01           a0 = 0x108c8
  4900: 7b 17 98 01              u64 [sp + 0x198] = a0
  4904: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4909: 49 21 b8 01              u64 [sp + 440] = 0
  4913: 95 17 ff 07              a0 = sp + 0x7ff
  4917: 95 77 b1 03              a0 = a0 + 0x3b1
  4921: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4925: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4930: 82 17 40                 a0 = u64 [sp + 0x40]
  4933: 7b 67 20                 u64 [s1 + 0x20] = a0
  4936: 7b 67 30                 u64 [s1 + 0x30] = a0
  4939: 95 17 ff 07              a0 = sp + 0x7ff
  4943: 95 77 e1 03              a0 = a0 + 0x3e1
  4947: 95 18 98 01              a1 = sp + 0x198
  4951: 50 10 5a 98 1a           ra = 90, jump @647
      :                          @262 [@dyn 45]
  4956: 82 65 50                 s0 = u64 [s1 + 0x50]
  4959: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4962: 82 66 48                 s1 = u64 [s1 + 0x48]
  4965: 33 07 02                 a0 = 0x2
  4968: 33 08                    a1 = 0
  4970: 33 09                    a2 = 0
  4972: 64 5a                    a3 = s0
  4974: 33 00 5c                 ra = 0x5c
  4977: 0a 64                    ecalli 100 // 'log'
  4979: 01                       fallthrough
      :                          @263 [@dyn 46]
  4980: 82 17 48                 a0 = u64 [sp + 0x48]
  4983: c8 67 07                 a0 = a0 + s1
  4986: 53 27 00 f0 23           jump @269 if a0 <u 4294963200
      :                          @264
  4991: 33 07 20 00 03           a0 = 0x30020
  4996: 95 77 00 10              a0 = a0 + 0x1000
  5000: 01                       fallthrough
      :                          @265
  5001: 82 78                    a1 = u64 [a0]
  5003: c9 87 09                 a2 = a0 - a1
  5006: ab 59 0f                 jump @269 if a2 != s0
      :                          @266
  5009: c9 68 09                 a2 = a1 - s1
  5012: 01                       fallthrough
      :                          @267
  5013: 82 7a                    a3 = u64 [a0]
  5015: ab 8a f2                 jump @265 if a3 != a1
      :                          @268
  5018: 7b 79                    u64 [a0] = a2
  5020: 01                       fallthrough
      :                          @269
  5021: 95 16 ff 07              s1 = sp + 0x7ff
  5025: 95 66 99 03              s1 = s1 + 0x399
  5029: 82 67 78                 a0 = u64 [s1 + 0x78]
  5032: 33 08 02                 a1 = 0x2
  5035: 33 05 02                 s0 = 0x2
  5038: 50 10 5e 54 2a           ra = 94, jump @983
      :                          @270 [@dyn 47]
  5043: 95 18 52                 a1 = sp + 0x52
  5046: 33 09 03                 a2 = 0x3
  5049: 95 1a 98 00              a3 = sp + 0x98
  5053: 33 0c 00 01              a5 = 0x100
  5057: 82 17 30                 a0 = u64 [sp + 0x30]
  5060: 33 0b                    a4 = 0
  5062: 0a 02                    ecalli 2 // 'read'
  5064: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5068: 82 17 38                 a0 = u64 [sp + 0x38]
  5071: 7b 67 18                 u64 [s1 + 0x18] = a0
  5074: 82 18 40                 a1 = u64 [sp + 0x40]
  5077: 7b 68 20                 u64 [s1 + 0x20] = a1
  5080: 95 17 ff 07              a0 = sp + 0x7ff
  5084: 95 77 19 04              a0 = a0 + 0x419
  5088: 7b 67 28                 u64 [s1 + 0x28] = a0
  5091: 7b 68 30                 u64 [s1 + 0x30] = a1
  5094: 33 07 f8 08 01           a0 = 0x108f8
  5099: 7b 17 98 01              u64 [sp + 0x198] = a0
  5103: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5108: 49 21 b8 01              u64 [sp + 440] = 0
  5112: 95 17 ff 07              a0 = sp + 0x7ff
  5116: 95 77 b1 03              a0 = a0 + 0x3b1
  5120: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5124: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5128: 95 17 ff 07              a0 = sp + 0x7ff
  5132: 95 77 e1 03              a0 = a0 + 0x3e1
  5136: 95 18 98 01              a1 = sp + 0x198
  5140: 50 10 60 db 19           ra = 96, jump @647
      :                          @271 [@dyn 48]
  5145: 82 65 50                 s0 = u64 [s1 + 0x50]
  5148: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5151: 82 66 48                 s1 = u64 [s1 + 0x48]
  5154: 33 07 02                 a0 = 0x2
  5157: 33 08                    a1 = 0
  5159: 33 09                    a2 = 0
  5161: 64 5a                    a3 = s0
  5163: 33 00 62                 ra = 0x62
  5166: 0a 64                    ecalli 100 // 'log'
  5168: 01                       fallthrough
      :                          @272 [@dyn 49]
  5169: 82 17 48                 a0 = u64 [sp + 0x48]
  5172: c8 67 07                 a0 = a0 + s1
  5175: 53 27 00 f0 23           jump @278 if a0 <u 4294963200
      :                          @273
  5180: 33 07 20 00 03           a0 = 0x30020
  5185: 95 77 00 10              a0 = a0 + 0x1000
  5189: 01                       fallthrough
      :                          @274
  5190: 82 78                    a1 = u64 [a0]
  5192: c9 87 09                 a2 = a0 - a1
  5195: ab 59 0f                 jump @278 if a2 != s0
      :                          @275
  5198: c9 68 09                 a2 = a1 - s1
  5201: 01                       fallthrough
      :                          @276
  5202: 82 7a                    a3 = u64 [a0]
  5204: ab 8a f2                 jump @274 if a3 != a1
      :                          @277
  5207: 7b 79                    u64 [a0] = a2
  5209: 01                       fallthrough
      :                          @278
  5210: 95 16 ff 07              s1 = sp + 0x7ff
  5214: 95 66 99 03              s1 = s1 + 0x399
  5218: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5222: 33 08 05                 a1 = 0x5
  5225: 50 10 64 99 29           ra = 100, jump @983
      :                          @279 [@dyn 50]
  5230: 95 17 52                 a0 = sp + 0x52
  5233: 33 08                    a1 = 0
  5235: 0a 0f                    ecalli 15 // 'forget'
  5237: 7b 67                    u64 [s1] = a0
  5239: 33 07 60 00 01           a0 = 0x10060
  5244: 7b 67 18                 u64 [s1 + 0x18] = a0
  5247: 33 07 28 09 01           a0 = 0x10928
  5252: 7b 17 98 01              u64 [sp + 0x198] = a0
  5256: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5261: 49 21 b8 01              u64 [sp + 440] = 0
  5265: 95 17 ff 07              a0 = sp + 0x7ff
  5269: 95 77 b1 03              a0 = a0 + 0x3b1
  5273: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5277: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5282: 82 17 40                 a0 = u64 [sp + 0x40]
  5285: 7b 67 20                 u64 [s1 + 0x20] = a0
  5288: 7b 66 28                 u64 [s1 + 0x28] = s1
  5291: 7b 67 30                 u64 [s1 + 0x30] = a0
  5294: 95 17 ff 07              a0 = sp + 0x7ff
  5298: 95 77 e1 03              a0 = a0 + 0x3e1
  5302: 95 18 98 01              a1 = sp + 0x198
  5306: 50 10 66 35 19           ra = 102, jump @647
      :                          @280 [@dyn 51]
  5311: 82 65 50                 s0 = u64 [s1 + 0x50]
  5314: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5317: 82 66 48                 s1 = u64 [s1 + 0x48]
  5320: 33 07 02                 a0 = 0x2
  5323: 33 08                    a1 = 0
  5325: 33 09                    a2 = 0
  5327: 64 5a                    a3 = s0
  5329: 33 00 68                 ra = 0x68
  5332: 0a 64                    ecalli 100 // 'log'
  5334: 01                       fallthrough
      :                          @281 [@dyn 52]
  5335: 82 17 48                 a0 = u64 [sp + 0x48]
  5338: c8 67 07                 a0 = a0 + s1
  5341: 53 27 00 f0 f7 09        jump @416 if a0 <u 4294963200
      :                          @282
  5347: 33 07 20 00 03           a0 = 0x30020
  5352: 95 77 00 10              a0 = a0 + 0x1000
  5356: 01                       fallthrough
      :                          @283
  5357: 82 78                    a1 = u64 [a0]
  5359: c9 87 09                 a2 = a0 - a1
  5362: ab 59 e2 09              jump @416 if a2 != s0
      :                          @284
  5366: c9 68 09                 a2 = a1 - s1
  5369: 01                       fallthrough
      :                          @285
  5370: 82 7a                    a3 = u64 [a0]
  5372: ab 8a f1                 jump @283 if a3 != a1
      :                          @286
  5375: 7b 79                    u64 [a0] = a2
  5377: 33 0b                    a4 = 0
  5379: 01                       fallthrough
      :                          @287
  5380: ab 8a e9                 jump @283 if a3 != a1
      :                          @288
  5383: 28 cd 09                 jump @416
      :                          @289 [@dyn 53]
  5386: 95 18 52                 a1 = sp + 0x52
  5389: 33 09 03                 a2 = 0x3
  5392: 95 1a 98 00              a3 = sp + 0x98
  5396: 33 0c 00 01              a5 = 0x100
  5400: 82 17 30                 a0 = u64 [sp + 0x30]
  5403: 33 0b                    a4 = 0
  5405: 0a 02                    ecalli 2 // 'read'
  5407: 7b 67 78                 u64 [s1 + 0x78] = a0
  5410: 82 17 38                 a0 = u64 [sp + 0x38]
  5413: 7b 67 18                 u64 [s1 + 0x18] = a0
  5416: 82 18 40                 a1 = u64 [sp + 0x40]
  5419: 7b 68 20                 u64 [s1 + 0x20] = a1
  5422: 95 17 ff 07              a0 = sp + 0x7ff
  5426: 95 77 11 04              a0 = a0 + 0x411
  5430: 7b 67 28                 u64 [s1 + 0x28] = a0
  5433: 7b 68 30                 u64 [s1 + 0x30] = a1
  5436: 33 07 58 09 01           a0 = 0x10958
  5441: 7b 17 98 01              u64 [sp + 0x198] = a0
  5445: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5450: 49 21 b8 01              u64 [sp + 440] = 0
  5454: 95 17 ff 07              a0 = sp + 0x7ff
  5458: 95 77 b1 03              a0 = a0 + 0x3b1
  5462: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5466: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5471: 95 17 ff 07              a0 = sp + 0x7ff
  5475: 95 77 e1 03              a0 = a0 + 0x3e1
  5479: 95 18 98 01              a1 = sp + 0x198
  5483: 50 10 6c 84 18           ra = 108, jump @647
      :                          @290 [@dyn 54]
  5488: 82 65 50                 s0 = u64 [s1 + 0x50]
  5491: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5494: 95 17 ff 07              a0 = sp + 0x7ff
  5498: 95 77 99 03              a0 = a0 + 0x399
  5502: 82 76 48                 s1 = u64 [a0 + 0x48]
  5505: 33 07 02                 a0 = 0x2
  5508: 33 08                    a1 = 0
  5510: 33 09                    a2 = 0
  5512: 64 5a                    a3 = s0
  5514: 33 00 6e                 ra = 0x6e
  5517: 0a 64                    ecalli 100 // 'log'
  5519: 01                       fallthrough
      :                          @291 [@dyn 55]
  5520: 82 17 48                 a0 = u64 [sp + 0x48]
  5523: c8 67 07                 a0 = a0 + s1
  5526: 53 27 00 f0 23           jump @297 if a0 <u 4294963200
      :                          @292
  5531: 33 07 20 00 03           a0 = 0x30020
  5536: 95 77 00 10              a0 = a0 + 0x1000
  5540: 01                       fallthrough
      :                          @293
  5541: 82 78                    a1 = u64 [a0]
  5543: c9 87 09                 a2 = a0 - a1
  5546: ab 59 0f                 jump @297 if a2 != s0
      :                          @294
  5549: c9 68 09                 a2 = a1 - s1
  5552: 01                       fallthrough
      :                          @295
  5553: 82 7a                    a3 = u64 [a0]
  5555: ab 8a f2                 jump @293 if a3 != a1
      :                          @296
  5558: 7b 79                    u64 [a0] = a2
  5560: 01                       fallthrough
      :                          @297
  5561: 95 16 ff 07              s1 = sp + 0x7ff
  5565: 95 66 99 03              s1 = s1 + 0x399
  5569: 82 67 78                 a0 = u64 [s1 + 0x78]
  5572: 33 08 01                 a1 = 0x1
  5575: 50 10 70 3b 28           ra = 112, jump @983
      :                          @298 [@dyn 56]
  5580: 95 17 52                 a0 = sp + 0x52
  5583: 33 08 03                 a1 = 0x3
  5586: 33 09                    a2 = 0
  5588: 33 0a                    a3 = 0
  5590: 0a 03                    ecalli 3 // 'write'
  5592: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5596: 95 17 ff 07              a0 = sp + 0x7ff
  5600: 95 77 19 04              a0 = a0 + 0x419
  5604: 7b 67 28                 u64 [s1 + 0x28] = a0
  5607: 33 07 88 09 01           a0 = 0x10988
  5612: 7b 17 98 01              u64 [sp + 0x198] = a0
  5616: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5621: 49 21 b8 01              u64 [sp + 440] = 0
  5625: 95 17 ff 07              a0 = sp + 0x7ff
  5629: 95 77 b1 03              a0 = a0 + 0x3b1
  5633: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5637: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5642: 82 17 38                 a0 = u64 [sp + 0x38]
  5645: 7b 67 18                 u64 [s1 + 0x18] = a0
  5648: 82 17 40                 a0 = u64 [sp + 0x40]
  5651: 7b 67 20                 u64 [s1 + 0x20] = a0
  5654: 7b 67 30                 u64 [s1 + 0x30] = a0
  5657: 95 17 ff 07              a0 = sp + 0x7ff
  5661: 95 77 e1 03              a0 = a0 + 0x3e1
  5665: 95 18 98 01              a1 = sp + 0x198
  5669: 50 10 72 ca 17           ra = 114, jump @647
      :                          @299 [@dyn 57]
  5674: 82 65 50                 s0 = u64 [s1 + 0x50]
  5677: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5680: 82 66 48                 s1 = u64 [s1 + 0x48]
  5683: 33 07 02                 a0 = 0x2
  5686: 33 08                    a1 = 0
  5688: 33 09                    a2 = 0
  5690: 64 5a                    a3 = s0
  5692: 33 00 74                 ra = 0x74
  5695: 0a 64                    ecalli 100 // 'log'
  5697: 01                       fallthrough
      :                          @300 [@dyn 58]
  5698: 82 17 48                 a0 = u64 [sp + 0x48]
  5701: c8 67 07                 a0 = a0 + s1
  5704: 53 27 00 f0 23           jump @306 if a0 <u 4294963200
      :                          @301
  5709: 33 07 20 00 03           a0 = 0x30020
  5714: 95 77 00 10              a0 = a0 + 0x1000
  5718: 01                       fallthrough
      :                          @302
  5719: 82 78                    a1 = u64 [a0]
  5721: c9 87 09                 a2 = a0 - a1
  5724: ab 59 0f                 jump @306 if a2 != s0
      :                          @303
  5727: c9 68 09                 a2 = a1 - s1
  5730: 01                       fallthrough
      :                          @304
  5731: 82 7a                    a3 = u64 [a0]
  5733: ab 8a f2                 jump @302 if a3 != a1
      :                          @305
  5736: 7b 79                    u64 [a0] = a2
  5738: 01                       fallthrough
      :                          @306
  5739: 95 16 ff 07              s1 = sp + 0x7ff
  5743: 95 66 99 03              s1 = s1 + 0x399
  5747: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5751: 33 08 02                 a1 = 0x2
  5754: 33 05 02                 s0 = 0x2
  5757: 50 10 76 85 27           ra = 118, jump @983
      :                          @307 [@dyn 59]
  5762: 95 18 52                 a1 = sp + 0x52
  5765: 33 09 03                 a2 = 0x3
  5768: 95 1a 98 00              a3 = sp + 0x98
  5772: 33 0c 00 01              a5 = 0x100
  5776: 82 17 30                 a0 = u64 [sp + 0x30]
  5779: 33 0b                    a4 = 0
  5781: 0a 02                    ecalli 2 // 'read'
  5783: 7b 67                    u64 [s1] = a0
  5785: 33 07 50 00 01           a0 = 0x10050
  5790: 7b 67 18                 u64 [s1 + 0x18] = a0
  5793: 33 07 b8 09 01           a0 = 0x109b8
  5798: 7b 17 98 01              u64 [sp + 0x198] = a0
  5802: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5807: 49 21 b8 01              u64 [sp + 440] = 0
  5811: 95 17 ff 07              a0 = sp + 0x7ff
  5815: 95 77 b1 03              a0 = a0 + 0x3b1
  5819: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5823: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5827: 82 17 40                 a0 = u64 [sp + 0x40]
  5830: 7b 67 20                 u64 [s1 + 0x20] = a0
  5833: 7b 66 28                 u64 [s1 + 0x28] = s1
  5836: 7b 67 30                 u64 [s1 + 0x30] = a0
  5839: 95 17 ff 07              a0 = sp + 0x7ff
  5843: 95 77 e1 03              a0 = a0 + 0x3e1
  5847: 95 18 98 01              a1 = sp + 0x198
  5851: 50 10 78 14 17           ra = 120, jump @647
      :                          @308 [@dyn 60]
  5856: 82 65 50                 s0 = u64 [s1 + 0x50]
  5859: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5862: 82 66 48                 s1 = u64 [s1 + 0x48]
  5865: 33 07 02                 a0 = 0x2
  5868: 33 08                    a1 = 0
  5870: 33 09                    a2 = 0
  5872: 64 5a                    a3 = s0
  5874: 33 00 7a                 ra = 0x7a
  5877: 0a 64                    ecalli 100 // 'log'
  5879: 01                       fallthrough
      :                          @309 [@dyn 61]
  5880: 82 17 48                 a0 = u64 [sp + 0x48]
  5883: c8 67 07                 a0 = a0 + s1
  5886: 53 27 00 f0 2f 02        jump @343 if a0 <u 4294963200
      :                          @310
  5892: 33 07 20 00 03           a0 = 0x30020
  5897: 95 77 00 10              a0 = a0 + 0x1000
  5901: 01                       fallthrough
      :                          @311
  5902: 82 78                    a1 = u64 [a0]
  5904: c9 87 09                 a2 = a0 - a1
  5907: ab 59 1a 02              jump @343 if a2 != s0
      :                          @312
  5911: c9 68 09                 a2 = a1 - s1
  5914: 01                       fallthrough
      :                          @313
  5915: 82 7a                    a3 = u64 [a0]
  5917: ab 8a f1                 jump @311 if a3 != a1
      :                          @314
  5920: 7b 79                    u64 [a0] = a2
  5922: 33 0b                    a4 = 0
  5924: 01                       fallthrough
      :                          @315
  5925: ab 8a e9                 jump @311 if a3 != a1
      :                          @316
  5928: 28 05 02                 jump @343
      :                          @317 [@dyn 62]
  5931: 33 05 03                 s0 = 0x3
  5934: 95 17 58                 a0 = sp + 0x58
  5937: 33 08 03                 a1 = 0x3
  5940: 0a 0e                    ecalli 14 // 'solicit'
  5942: 7b 67 78                 u64 [s1 + 0x78] = a0
  5945: 82 17 38                 a0 = u64 [sp + 0x38]
  5948: 7b 67 18                 u64 [s1 + 0x18] = a0
  5951: 82 18 40                 a1 = u64 [sp + 0x40]
  5954: 7b 68 20                 u64 [s1 + 0x20] = a1
  5957: 95 17 ff 07              a0 = sp + 0x7ff
  5961: 95 77 11 04              a0 = a0 + 0x411
  5965: 7b 67 28                 u64 [s1 + 0x28] = a0
  5968: 7b 68 30                 u64 [s1 + 0x30] = a1
  5971: 33 07 e8 09 01           a0 = 0x109e8
  5976: 7b 17 98 01              u64 [sp + 0x198] = a0
  5980: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  5984: 49 21 b8 01              u64 [sp + 440] = 0
  5988: 95 17 ff 07              a0 = sp + 0x7ff
  5992: 95 77 b1 03              a0 = a0 + 0x3b1
  5996: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6000: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6005: 95 17 ff 07              a0 = sp + 0x7ff
  6009: 95 77 e1 03              a0 = a0 + 0x3e1
  6013: 95 18 98 01              a1 = sp + 0x198
  6017: 50 10 7e 6e 16           ra = 126, jump @647
      :                          @318 [@dyn 63]
  6022: 82 65 50                 s0 = u64 [s1 + 0x50]
  6025: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6028: 95 17 ff 07              a0 = sp + 0x7ff
  6032: 95 77 99 03              a0 = a0 + 0x399
  6036: 82 76 48                 s1 = u64 [a0 + 0x48]
  6039: 33 07 02                 a0 = 0x2
  6042: 33 08                    a1 = 0
  6044: 33 09                    a2 = 0
  6046: 64 5a                    a3 = s0
  6048: 33 00 80 00              ra = 0x80
  6052: 0a 64                    ecalli 100 // 'log'
  6054: 01                       fallthrough
      :                          @319 [@dyn 64]
  6055: 82 17 48                 a0 = u64 [sp + 0x48]
  6058: c8 67 07                 a0 = a0 + s1
  6061: 53 27 00 f0 23           jump @325 if a0 <u 4294963200
      :                          @320
  6066: 33 07 20 00 03           a0 = 0x30020
  6071: 95 77 00 10              a0 = a0 + 0x1000
  6075: 01                       fallthrough
      :                          @321
  6076: 82 78                    a1 = u64 [a0]
  6078: c9 87 09                 a2 = a0 - a1
  6081: ab 59 0f                 jump @325 if a2 != s0
      :                          @322
  6084: c9 68 09                 a2 = a1 - s1
  6087: 01                       fallthrough
      :                          @323
  6088: 82 7a                    a3 = u64 [a0]
  6090: ab 8a f2                 jump @321 if a3 != a1
      :                          @324
  6093: 7b 79                    u64 [a0] = a2
  6095: 01                       fallthrough
      :                          @325
  6096: 95 16 ff 07              s1 = sp + 0x7ff
  6100: 95 66 99 03              s1 = s1 + 0x399
  6104: 82 67 78                 a0 = u64 [s1 + 0x78]
  6107: 33 08 01                 a1 = 0x1
  6110: 50 20 82 00 24 26        ra = 130, jump @983
      :                          @326 [@dyn 65]
  6116: 95 17 58                 a0 = sp + 0x58
  6119: 33 08 03                 a1 = 0x3
  6122: 0a 0d                    ecalli 13 // 'query'
  6124: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6128: 95 17 ff 07              a0 = sp + 0x7ff
  6132: 95 77 19 04              a0 = a0 + 0x419
  6136: 7b 67 28                 u64 [s1 + 0x28] = a0
  6139: 33 07 18 0a 01           a0 = 0x10a18
  6144: 7b 17 98 01              u64 [sp + 0x198] = a0
  6148: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6153: 49 21 b8 01              u64 [sp + 440] = 0
  6157: 95 17 ff 07              a0 = sp + 0x7ff
  6161: 95 77 b1 03              a0 = a0 + 0x3b1
  6165: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6169: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6174: 82 17 38                 a0 = u64 [sp + 0x38]
  6177: 7b 67 18                 u64 [s1 + 0x18] = a0
  6180: 82 17 40                 a0 = u64 [sp + 0x40]
  6183: 7b 67 20                 u64 [s1 + 0x20] = a0
  6186: 7b 67 30                 u64 [s1 + 0x30] = a0
  6189: 95 17 ff 07              a0 = sp + 0x7ff
  6193: 95 77 e1 03              a0 = a0 + 0x3e1
  6197: 95 18 98 01              a1 = sp + 0x198
  6201: 50 20 84 00 b6 15        ra = 132, jump @647
      :                          @327 [@dyn 66]
  6207: 82 65 50                 s0 = u64 [s1 + 0x50]
  6210: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6213: 82 66 48                 s1 = u64 [s1 + 0x48]
  6216: 33 07 02                 a0 = 0x2
  6219: 33 08                    a1 = 0
  6221: 33 09                    a2 = 0
  6223: 64 5a                    a3 = s0
  6225: 33 00 86 00              ra = 0x86
  6229: 0a 64                    ecalli 100 // 'log'
  6231: 01                       fallthrough
      :                          @328 [@dyn 67]
  6232: 82 17 48                 a0 = u64 [sp + 0x48]
  6235: c8 67 07                 a0 = a0 + s1
  6238: 53 27 00 f0 23           jump @334 if a0 <u 4294963200
      :                          @329
  6243: 33 07 20 00 03           a0 = 0x30020
  6248: 95 77 00 10              a0 = a0 + 0x1000
  6252: 01                       fallthrough
      :                          @330
  6253: 82 78                    a1 = u64 [a0]
  6255: c9 87 09                 a2 = a0 - a1
  6258: ab 59 0f                 jump @334 if a2 != s0
      :                          @331
  6261: c9 68 09                 a2 = a1 - s1
  6264: 01                       fallthrough
      :                          @332
  6265: 82 7a                    a3 = u64 [a0]
  6267: ab 8a f2                 jump @330 if a3 != a1
      :                          @333
  6270: 7b 79                    u64 [a0] = a2
  6272: 01                       fallthrough
      :                          @334
  6273: 95 16 ff 07              s1 = sp + 0x7ff
  6277: 95 66 99 03              s1 = s1 + 0x399
  6281: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6285: 33 08 02                 a1 = 0x2
  6288: 33 05 02                 s0 = 0x2
  6291: 50 20 88 00 6f 25        ra = 136, jump @983
      :                          @335 [@dyn 68]
  6297: 95 17 78                 a0 = sp + 0x78
  6300: 33 08 03                 a1 = 0x3
  6303: 0a 0d                    ecalli 13 // 'query'
  6305: 7b 67                    u64 [s1] = a0
  6307: 33 07 50 00 01           a0 = 0x10050
  6312: 7b 67 18                 u64 [s1 + 0x18] = a0
  6315: 33 07 48 0a 01           a0 = 0x10a48
  6320: 7b 17 98 01              u64 [sp + 0x198] = a0
  6324: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6329: 49 21 b8 01              u64 [sp + 440] = 0
  6333: 95 17 ff 07              a0 = sp + 0x7ff
  6337: 95 77 b1 03              a0 = a0 + 0x3b1
  6341: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6345: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6349: 82 17 40                 a0 = u64 [sp + 0x40]
  6352: 7b 67 20                 u64 [s1 + 0x20] = a0
  6355: 7b 66 28                 u64 [s1 + 0x28] = s1
  6358: 7b 67 30                 u64 [s1 + 0x30] = a0
  6361: 95 17 ff 07              a0 = sp + 0x7ff
  6365: 95 77 e1 03              a0 = a0 + 0x3e1
  6369: 95 18 98 01              a1 = sp + 0x198
  6373: 50 20 8a 00 0a 15        ra = 138, jump @647
      :                          @336 [@dyn 69]
  6379: 82 65 50                 s0 = u64 [s1 + 0x50]
  6382: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6385: 82 66 48                 s1 = u64 [s1 + 0x48]
  6388: 33 07 02                 a0 = 0x2
  6391: 33 08                    a1 = 0
  6393: 33 09                    a2 = 0
  6395: 64 5a                    a3 = s0
  6397: 33 00 8c 00              ra = 0x8c
  6401: 0a 64                    ecalli 100 // 'log'
  6403: 01                       fallthrough
      :                          @337 [@dyn 70]
  6404: 82 17 48                 a0 = u64 [sp + 0x48]
  6407: c8 67 07                 a0 = a0 + s1
  6410: 53 27 00 f0 23           jump @343 if a0 <u 4294963200
      :                          @338
  6415: 33 07 20 00 03           a0 = 0x30020
  6420: 95 77 00 10              a0 = a0 + 0x1000
  6424: 01                       fallthrough
      :                          @339
  6425: 82 78                    a1 = u64 [a0]
  6427: c9 87 09                 a2 = a0 - a1
  6430: ab 59 0f                 jump @343 if a2 != s0
      :                          @340
  6433: c9 68 09                 a2 = a1 - s1
  6436: 01                       fallthrough
      :                          @341
  6437: 82 7a                    a3 = u64 [a0]
  6439: ab 8a f2                 jump @339 if a3 != a1
      :                          @342
  6442: 7b 79                    u64 [a0] = a2
  6444: 01                       fallthrough
      :                          @343
  6445: 95 16 ff 07              s1 = sp + 0x7ff
  6449: 95 66 99 03              s1 = s1 + 0x399
  6453: 82 67                    a0 = u64 [s1]
  6455: 33 08 05                 a1 = 0x5
  6458: 33 00 1c 01              ra = 0x11c
  6462: 28 c4 24                 jump @983
      :                          @344 [@dyn 71]
  6465: 33 05 03                 s0 = 0x3
  6468: 95 17 58                 a0 = sp + 0x58
  6471: 33 08 03                 a1 = 0x3
  6474: 0a 0f                    ecalli 15 // 'forget'
  6476: 7b 67 78                 u64 [s1 + 0x78] = a0
  6479: 82 17 38                 a0 = u64 [sp + 0x38]
  6482: 7b 67 18                 u64 [s1 + 0x18] = a0
  6485: 82 17 40                 a0 = u64 [sp + 0x40]
  6488: 7b 67 20                 u64 [s1 + 0x20] = a0
  6491: 95 18 ff 07              a1 = sp + 0x7ff
  6495: 95 88 11 04              a1 = a1 + 0x411
  6499: 7b 68 28                 u64 [s1 + 0x28] = a1
  6502: 7b 67 30                 u64 [s1 + 0x30] = a0
  6505: 33 07 78 0a 01           a0 = 0x10a78
  6510: 7b 17 98 01              u64 [sp + 0x198] = a0
  6514: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  6518: 49 21 b8 01              u64 [sp + 440] = 0
  6522: 95 17 ff 07              a0 = sp + 0x7ff
  6526: 95 77 b1 03              a0 = a0 + 0x3b1
  6530: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6534: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6539: 95 17 ff 07              a0 = sp + 0x7ff
  6543: 95 77 e1 03              a0 = a0 + 0x3e1
  6547: 95 18 98 01              a1 = sp + 0x198
  6551: 50 20 90 00 58 14        ra = 144, jump @647
      :                          @345 [@dyn 72]
  6557: 82 65 50                 s0 = u64 [s1 + 0x50]
  6560: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6563: 95 17 ff 07              a0 = sp + 0x7ff
  6567: 95 77 99 03              a0 = a0 + 0x399
  6571: 82 76 48                 s1 = u64 [a0 + 0x48]
  6574: 33 07 02                 a0 = 0x2
  6577: 33 08                    a1 = 0
  6579: 33 09                    a2 = 0
  6581: 64 5a                    a3 = s0
  6583: 33 00 92 00              ra = 0x92
  6587: 0a 64                    ecalli 100 // 'log'
  6589: 01                       fallthrough
      :                          @346 [@dyn 73]
  6590: 82 17 48                 a0 = u64 [sp + 0x48]
  6593: c8 67 07                 a0 = a0 + s1
  6596: 53 27 00 f0 23           jump @352 if a0 <u 4294963200
      :                          @347
  6601: 33 07 20 00 03           a0 = 0x30020
  6606: 95 77 00 10              a0 = a0 + 0x1000
  6610: 01                       fallthrough
      :                          @348
  6611: 82 78                    a1 = u64 [a0]
  6613: c9 87 09                 a2 = a0 - a1
  6616: ab 59 0f                 jump @352 if a2 != s0
      :                          @349
  6619: c9 68 09                 a2 = a1 - s1
  6622: 01                       fallthrough
      :                          @350
  6623: 82 7a                    a3 = u64 [a0]
  6625: ab 8a f2                 jump @348 if a3 != a1
      :                          @351
  6628: 7b 79                    u64 [a0] = a2
  6630: 01                       fallthrough
      :                          @352
  6631: 95 15 ff 07              s0 = sp + 0x7ff
  6635: 95 55 99 03              s0 = s0 + 0x399
  6639: 82 57 78                 a0 = u64 [s0 + 0x78]
  6642: 33 08 01                 a1 = 0x1
  6645: 50 20 94 00 0d 24        ra = 148, jump @983
      :                          @353 [@dyn 74]
  6651: 95 17 58                 a0 = sp + 0x58
  6654: 33 08 03                 a1 = 0x3
  6657: 0a 0d                    ecalli 13 // 'query'
  6659: 7b 17 10                 u64 [sp + 0x10] = a0
  6662: 95 17 ff 07              a0 = sp + 0x7ff
  6666: 95 77 11 04              a0 = a0 + 0x411
  6670: 7b 57 28                 u64 [s0 + 0x28] = a0
  6673: 33 07 a8 0a 01           a0 = 0x10aa8
  6678: 7b 17 98 01              u64 [sp + 0x198] = a0
  6682: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6687: 49 21 b8 01              u64 [sp + 440] = 0
  6691: 95 17 ff 07              a0 = sp + 0x7ff
  6695: 95 77 b1 03              a0 = a0 + 0x3b1
  6699: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6703: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6708: 82 17 38                 a0 = u64 [sp + 0x38]
  6711: 7b 57 18                 u64 [s0 + 0x18] = a0
  6714: 82 17 40                 a0 = u64 [sp + 0x40]
  6717: 7b 57 20                 u64 [s0 + 0x20] = a0
  6720: 7b 57 30                 u64 [s0 + 0x30] = a0
  6723: 95 17 ff 07              a0 = sp + 0x7ff
  6727: 95 77 e1 03              a0 = a0 + 0x3e1
  6731: 95 18 98 01              a1 = sp + 0x198
  6735: 50 20 96 00 a0 13        ra = 150, jump @647
      :                          @354 [@dyn 75]
  6741: 82 56 50                 s1 = u64 [s0 + 0x50]
  6744: 82 5b 58                 a4 = u64 [s0 + 0x58]
  6747: 82 55 48                 s0 = u64 [s0 + 0x48]
  6750: 33 07 02                 a0 = 0x2
  6753: 33 08                    a1 = 0
  6755: 33 09                    a2 = 0
  6757: 64 6a                    a3 = s1
  6759: 33 00 98 00              ra = 0x98
  6763: 0a 64                    ecalli 100 // 'log'
  6765: 01                       fallthrough
      :                          @355 [@dyn 76]
  6766: 82 17 48                 a0 = u64 [sp + 0x48]
  6769: c8 57 07                 a0 = a0 + s0
  6772: 53 27 00 f0 23           jump @361 if a0 <u 4294963200
      :                          @356
  6777: 33 07 20 00 03           a0 = 0x30020
  6782: 95 77 00 10              a0 = a0 + 0x1000
  6786: 01                       fallthrough
      :                          @357
  6787: 82 78                    a1 = u64 [a0]
  6789: c9 87 09                 a2 = a0 - a1
  6792: ab 69 0f                 jump @361 if a2 != s1
      :                          @358
  6795: c9 58 09                 a2 = a1 - s0
  6798: 01                       fallthrough
      :                          @359
  6799: 82 7a                    a3 = u64 [a0]
  6801: ab 8a f2                 jump @357 if a3 != a1
      :                          @360
  6804: 7b 79                    u64 [a0] = a2
  6806: 01                       fallthrough
      :                          @361
  6807: 33 08 02                 a1 = 0x2
  6810: 33 05 02                 s0 = 0x2
  6813: 82 17 10                 a0 = u64 [sp + 0x10]
  6816: 50 20 9a 00 62 23        ra = 154, jump @983
      :                          @362 [@dyn 77]
  6822: 95 18 78                 a1 = sp + 0x78
  6825: 95 19 98 00              a2 = sp + 0x98
  6829: 33 0b 03                 a4 = 0x3
  6832: 82 17 30                 a0 = u64 [sp + 0x30]
  6835: 33 0a                    a3 = 0
  6837: 0a 01                    ecalli 1 // 'lookup'
  6839: 95 16 ff 07              s1 = sp + 0x7ff
  6843: 95 66 99 03              s1 = s1 + 0x399
  6847: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6851: 33 07 50 00 01           a0 = 0x10050
  6856: 7b 67 18                 u64 [s1 + 0x18] = a0
  6859: 82 18 40                 a1 = u64 [sp + 0x40]
  6862: 7b 68 20                 u64 [s1 + 0x20] = a1
  6865: 95 17 ff 07              a0 = sp + 0x7ff
  6869: 95 77 19 04              a0 = a0 + 0x419
  6873: 7b 67 28                 u64 [s1 + 0x28] = a0
  6876: 7b 68 30                 u64 [s1 + 0x30] = a1
  6879: 33 07 d8 0a 01           a0 = 0x10ad8
  6884: 7b 17 98 01              u64 [sp + 0x198] = a0
  6888: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6893: 49 21 b8 01              u64 [sp + 440] = 0
  6897: 95 17 ff 07              a0 = sp + 0x7ff
  6901: 95 77 b1 03              a0 = a0 + 0x3b1
  6905: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6909: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6913: 95 17 ff 07              a0 = sp + 0x7ff
  6917: 95 77 e1 03              a0 = a0 + 0x3e1
  6921: 95 18 98 01              a1 = sp + 0x198
  6925: 50 20 9c 00 e2 12        ra = 156, jump @647
      :                          @363 [@dyn 78]
  6931: 82 65 50                 s0 = u64 [s1 + 0x50]
  6934: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6937: 82 66 48                 s1 = u64 [s1 + 0x48]
  6940: 33 07 02                 a0 = 0x2
  6943: 33 08                    a1 = 0
  6945: 33 09                    a2 = 0
  6947: 64 5a                    a3 = s0
  6949: 33 00 9e 00              ra = 0x9e
  6953: 0a 64                    ecalli 100 // 'log'
  6955: 01                       fallthrough
      :                          @364 [@dyn 79]
  6956: 82 17 48                 a0 = u64 [sp + 0x48]
  6959: c8 67 07                 a0 = a0 + s1
  6962: 53 27 00 f0 23           jump @370 if a0 <u 4294963200
      :                          @365
  6967: 33 07 20 00 03           a0 = 0x30020
  6972: 95 77 00 10              a0 = a0 + 0x1000
  6976: 01                       fallthrough
      :                          @366
  6977: 82 78                    a1 = u64 [a0]
  6979: c9 87 09                 a2 = a0 - a1
  6982: ab 59 0f                 jump @370 if a2 != s0
      :                          @367
  6985: c9 68 09                 a2 = a1 - s1
  6988: 01                       fallthrough
      :                          @368
  6989: 82 7a                    a3 = u64 [a0]
  6991: ab 8a f2                 jump @366 if a3 != a1
      :                          @369
  6994: 7b 79                    u64 [a0] = a2
  6996: 01                       fallthrough
      :                          @370
  6997: 95 16 ff 07              s1 = sp + 0x7ff
  7001: 95 66 99 03              s1 = s1 + 0x399
  7005: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7009: 33 08 05                 a1 = 0x5
  7012: 50 20 a0 00 9e 22        ra = 160, jump @983
      :                          @371 [@dyn 80]
  7018: 33 07 e8 03              a0 = 0x3e8
  7022: 95 18 52                 a1 = sp + 0x52
  7025: 0a 06                    ecalli 6 // 'assign'
  7027: 7b 67                    u64 [s1] = a0
  7029: 33 07 38 00 01           a0 = 0x10038
  7034: 7b 67 18                 u64 [s1 + 0x18] = a0
  7037: 33 07 08 0b 01           a0 = 0x10b08
  7042: 7b 17 98 01              u64 [sp + 0x198] = a0
  7046: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7051: 49 21 b8 01              u64 [sp + 440] = 0
  7055: 95 17 ff 07              a0 = sp + 0x7ff
  7059: 95 77 b1 03              a0 = a0 + 0x3b1
  7063: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7067: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7072: 82 17 40                 a0 = u64 [sp + 0x40]
  7075: 7b 67 20                 u64 [s1 + 0x20] = a0
  7078: 7b 66 28                 u64 [s1 + 0x28] = s1
  7081: 7b 67 30                 u64 [s1 + 0x30] = a0
  7084: 95 17 ff 07              a0 = sp + 0x7ff
  7088: 95 77 e1 03              a0 = a0 + 0x3e1
  7092: 95 18 98 01              a1 = sp + 0x198
  7096: 50 20 a2 00 37 12        ra = 162, jump @647
      :                          @372 [@dyn 81]
  7102: 82 65 50                 s0 = u64 [s1 + 0x50]
  7105: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7108: 82 66 48                 s1 = u64 [s1 + 0x48]
  7111: 33 07 02                 a0 = 0x2
  7114: 33 08                    a1 = 0
  7116: 33 09                    a2 = 0
  7118: 64 5a                    a3 = s0
  7120: 33 00 a4 00              ra = 0xa4
  7124: 0a 64                    ecalli 100 // 'log'
  7126: 01                       fallthrough
      :                          @373 [@dyn 82]
  7127: 82 17 48                 a0 = u64 [sp + 0x48]
  7130: c8 67 07                 a0 = a0 + s1
  7133: 53 27 00 f0 f7 02        jump @416 if a0 <u 4294963200
      :                          @374
  7139: 33 07 20 00 03           a0 = 0x30020
  7144: 95 77 00 10              a0 = a0 + 0x1000
  7148: 01                       fallthrough
      :                          @375
  7149: 82 78                    a1 = u64 [a0]
  7151: c9 87 09                 a2 = a0 - a1
  7154: ab 59 e2 02              jump @416 if a2 != s0
      :                          @376
  7158: c9 68 09                 a2 = a1 - s1
  7161: 01                       fallthrough
      :                          @377
  7162: 82 7a                    a3 = u64 [a0]
  7164: ab 8a f1                 jump @375 if a3 != a1
      :                          @378
  7167: 7b 79                    u64 [a0] = a2
  7169: 33 0b                    a4 = 0
  7171: 01                       fallthrough
      :                          @379
  7172: ab 8a e9                 jump @375 if a3 != a1
      :                          @380
  7175: 28 cd 02                 jump @416
      :                          @381 [@dyn 83]
  7178: 95 18 58                 a1 = sp + 0x58
  7181: 95 19 98 00              a2 = sp + 0x98
  7185: 33 0b 03                 a4 = 0x3
  7188: 82 17 30                 a0 = u64 [sp + 0x30]
  7191: 33 0a                    a3 = 0
  7193: 0a 01                    ecalli 1 // 'lookup'
  7195: 7b 67 70                 u64 [s1 + 0x70] = a0
  7198: 82 17 38                 a0 = u64 [sp + 0x38]
  7201: 7b 67 18                 u64 [s1 + 0x18] = a0
  7204: 82 18 40                 a1 = u64 [sp + 0x40]
  7207: 7b 68 20                 u64 [s1 + 0x20] = a1
  7210: 95 17 ff 07              a0 = sp + 0x7ff
  7214: 95 77 09 04              a0 = a0 + 0x409
  7218: 7b 67 28                 u64 [s1 + 0x28] = a0
  7221: 7b 68 30                 u64 [s1 + 0x30] = a1
  7224: 33 07 38 0b 01           a0 = 0x10b38
  7229: 7b 17 98 01              u64 [sp + 0x198] = a0
  7233: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7238: 49 21 b8 01              u64 [sp + 440] = 0
  7242: 95 17 ff 07              a0 = sp + 0x7ff
  7246: 95 77 b1 03              a0 = a0 + 0x3b1
  7250: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7254: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7259: 95 17 ff 07              a0 = sp + 0x7ff
  7263: 95 77 e1 03              a0 = a0 + 0x3e1
  7267: 95 18 98 01              a1 = sp + 0x198
  7271: 50 20 a8 00 88 11        ra = 168, jump @647
      :                          @382 [@dyn 84]
  7277: 82 65 50                 s0 = u64 [s1 + 0x50]
  7280: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7283: 95 17 ff 07              a0 = sp + 0x7ff
  7287: 95 77 99 03              a0 = a0 + 0x399
  7291: 82 76 48                 s1 = u64 [a0 + 0x48]
  7294: 33 07 02                 a0 = 0x2
  7297: 33 08                    a1 = 0
  7299: 33 09                    a2 = 0
  7301: 64 5a                    a3 = s0
  7303: 33 00 aa 00              ra = 0xaa
  7307: 0a 64                    ecalli 100 // 'log'
  7309: 01                       fallthrough
      :                          @383 [@dyn 85]
  7310: 82 17 48                 a0 = u64 [sp + 0x48]
  7313: c8 67 07                 a0 = a0 + s1
  7316: 53 27 00 f0 23           jump @389 if a0 <u 4294963200
      :                          @384
  7321: 33 07 20 00 03           a0 = 0x30020
  7326: 95 77 00 10              a0 = a0 + 0x1000
  7330: 01                       fallthrough
      :                          @385
  7331: 82 78                    a1 = u64 [a0]
  7333: c9 87 09                 a2 = a0 - a1
  7336: ab 59 0f                 jump @389 if a2 != s0
      :                          @386
  7339: c9 68 09                 a2 = a1 - s1
  7342: 01                       fallthrough
      :                          @387
  7343: 82 7a                    a3 = u64 [a0]
  7345: ab 8a f2                 jump @385 if a3 != a1
      :                          @388
  7348: 7b 79                    u64 [a0] = a2
  7350: 01                       fallthrough
      :                          @389
  7351: 95 16 ff 07              s1 = sp + 0x7ff
  7355: 95 66 99 03              s1 = s1 + 0x399
  7359: 82 67 70                 a0 = u64 [s1 + 0x70]
  7362: 33 08 01                 a1 = 0x1
  7365: 50 20 ac 00 3d 21        ra = 172, jump @983
      :                          @390 [@dyn 86]
  7371: 95 17 58                 a0 = sp + 0x58
  7374: 33 08 03                 a1 = 0x3
  7377: 0a 0d                    ecalli 13 // 'query'
  7379: 7b 67 78                 u64 [s1 + 0x78] = a0
  7382: 95 17 ff 07              a0 = sp + 0x7ff
  7386: 95 77 11 04              a0 = a0 + 0x411
  7390: 7b 67 28                 u64 [s1 + 0x28] = a0
  7393: 33 07 18 0a 01           a0 = 0x10a18
  7398: 7b 17 98 01              u64 [sp + 0x198] = a0
  7402: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7407: 49 21 b8 01              u64 [sp + 440] = 0
  7411: 95 17 ff 07              a0 = sp + 0x7ff
  7415: 95 77 b1 03              a0 = a0 + 0x3b1
  7419: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7423: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7428: 82 17 38                 a0 = u64 [sp + 0x38]
  7431: 7b 67 18                 u64 [s1 + 0x18] = a0
  7434: 82 17 40                 a0 = u64 [sp + 0x40]
  7437: 7b 67 20                 u64 [s1 + 0x20] = a0
  7440: 7b 67 30                 u64 [s1 + 0x30] = a0
  7443: 95 17 ff 07              a0 = sp + 0x7ff
  7447: 95 77 e1 03              a0 = a0 + 0x3e1
  7451: 95 18 98 01              a1 = sp + 0x198
  7455: 50 20 ae 00 d0 10        ra = 174, jump @647
      :                          @391 [@dyn 87]
  7461: 82 65 50                 s0 = u64 [s1 + 0x50]
  7464: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7467: 82 66 48                 s1 = u64 [s1 + 0x48]
  7470: 33 07 02                 a0 = 0x2
  7473: 33 08                    a1 = 0
  7475: 33 09                    a2 = 0
  7477: 64 5a                    a3 = s0
  7479: 33 00 b0 00              ra = 0xb0
  7483: 0a 64                    ecalli 100 // 'log'
  7485: 01                       fallthrough
      :                          @392 [@dyn 88]
  7486: 82 17 48                 a0 = u64 [sp + 0x48]
  7489: c8 67 07                 a0 = a0 + s1
  7492: 53 27 00 f0 23           jump @398 if a0 <u 4294963200
      :                          @393
  7497: 33 07 20 00 03           a0 = 0x30020
  7502: 95 77 00 10              a0 = a0 + 0x1000
  7506: 01                       fallthrough
      :                          @394
  7507: 82 78                    a1 = u64 [a0]
  7509: c9 87 09                 a2 = a0 - a1
  7512: ab 59 0f                 jump @398 if a2 != s0
      :                          @395
  7515: c9 68 09                 a2 = a1 - s1
  7518: 01                       fallthrough
      :                          @396
  7519: 82 7a                    a3 = u64 [a0]
  7521: ab 8a f2                 jump @394 if a3 != a1
      :                          @397
  7524: 7b 79                    u64 [a0] = a2
  7526: 01                       fallthrough
      :                          @398
  7527: 95 16 ff 07              s1 = sp + 0x7ff
  7531: 95 66 99 03              s1 = s1 + 0x399
  7535: 82 67 78                 a0 = u64 [s1 + 0x78]
  7538: 33 08 02                 a1 = 0x2
  7541: 33 05 02                 s0 = 0x2
  7544: 50 20 b2 00 8a 20        ra = 178, jump @983
      :                          @399 [@dyn 89]
  7550: 95 18 58                 a1 = sp + 0x58
  7553: 82 17 30                 a0 = u64 [sp + 0x30]
  7556: 0a 0c                    ecalli 12 // 'eject'
  7558: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7562: 33 07 30 00 01           a0 = 0x10030
  7567: 7b 17 10                 u64 [sp + 0x10] = a0
  7570: 7b 67 18                 u64 [s1 + 0x18] = a0
  7573: 82 18 40                 a1 = u64 [sp + 0x40]
  7576: 7b 68 20                 u64 [s1 + 0x20] = a1
  7579: 95 17 ff 07              a0 = sp + 0x7ff
  7583: 95 77 19 04              a0 = a0 + 0x419
  7587: 7b 67 28                 u64 [s1 + 0x28] = a0
  7590: 7b 68 30                 u64 [s1 + 0x30] = a1
  7593: 33 07 68 0b 01           a0 = 0x10b68
  7598: 7b 17 98 01              u64 [sp + 0x198] = a0
  7602: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7607: 49 21 b8 01              u64 [sp + 440] = 0
  7611: 95 17 ff 07              a0 = sp + 0x7ff
  7615: 95 77 b1 03              a0 = a0 + 0x3b1
  7619: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7623: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7627: 95 17 ff 07              a0 = sp + 0x7ff
  7631: 95 77 e1 03              a0 = a0 + 0x3e1
  7635: 95 18 98 01              a1 = sp + 0x198
  7639: 50 20 b4 00 18 10        ra = 180, jump @647
      :                          @400 [@dyn 90]
  7645: 82 65 50                 s0 = u64 [s1 + 0x50]
  7648: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7651: 82 66 48                 s1 = u64 [s1 + 0x48]
  7654: 33 07 02                 a0 = 0x2
  7657: 33 08                    a1 = 0
  7659: 33 09                    a2 = 0
  7661: 64 5a                    a3 = s0
  7663: 33 00 b6 00              ra = 0xb6
  7667: 0a 64                    ecalli 100 // 'log'
  7669: 01                       fallthrough
      :                          @401 [@dyn 91]
  7670: 82 17 48                 a0 = u64 [sp + 0x48]
  7673: c8 67 07                 a0 = a0 + s1
  7676: 53 27 00 f0 23           jump @407 if a0 <u 4294963200
      :                          @402
  7681: 33 07 20 00 03           a0 = 0x30020
  7686: 95 77 00 10              a0 = a0 + 0x1000
  7690: 01                       fallthrough
      :                          @403
  7691: 82 78                    a1 = u64 [a0]
  7693: c9 87 09                 a2 = a0 - a1
  7696: ab 59 0f                 jump @407 if a2 != s0
      :                          @404
  7699: c9 68 09                 a2 = a1 - s1
  7702: 01                       fallthrough
      :                          @405
  7703: 82 7a                    a3 = u64 [a0]
  7705: ab 8a f2                 jump @403 if a3 != a1
      :                          @406
  7708: 7b 79                    u64 [a0] = a2
  7710: 01                       fallthrough
      :                          @407
  7711: 95 16 ff 07              s1 = sp + 0x7ff
  7715: 95 66 99 03              s1 = s1 + 0x399
  7719: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7723: 33 08 05                 a1 = 0x5
  7726: 50 20 b8 00 d4 1f        ra = 184, jump @983
      :                          @408 [@dyn 92]
  7732: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  7742: 95 1a 58                 a3 = sp + 0x58
  7745: 33 08                    a1 = 0
  7747: 33 09                    a2 = 0
  7749: 33 0b                    a4 = 0
  7751: 0a 05                    ecalli 5 // 'bless'
  7753: 7b 67                    u64 [s1] = a0
  7755: 82 17 10                 a0 = u64 [sp + 0x10]
  7758: 7b 67 18                 u64 [s1 + 0x18] = a0
  7761: 33 07 98 0b 01           a0 = 0x10b98
  7766: 7b 17 98 01              u64 [sp + 0x198] = a0
  7770: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7775: 49 21 b8 01              u64 [sp + 440] = 0
  7779: 95 17 ff 07              a0 = sp + 0x7ff
  7783: 95 77 b1 03              a0 = a0 + 0x3b1
  7787: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7791: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7796: 82 17 40                 a0 = u64 [sp + 0x40]
  7799: 7b 67 20                 u64 [s1 + 0x20] = a0
  7802: 7b 66 28                 u64 [s1 + 0x28] = s1
  7805: 7b 67 30                 u64 [s1 + 0x30] = a0
  7808: 95 17 ff 07              a0 = sp + 0x7ff
  7812: 95 77 e1 03              a0 = a0 + 0x3e1
  7816: 95 18 98 01              a1 = sp + 0x198
  7820: 50 20 ba 00 63 0f        ra = 186, jump @647
      :                          @409 [@dyn 93]
  7826: 82 65 50                 s0 = u64 [s1 + 0x50]
  7829: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7832: 82 66 48                 s1 = u64 [s1 + 0x48]
  7835: 33 07 02                 a0 = 0x2
  7838: 33 08                    a1 = 0
  7840: 33 09                    a2 = 0
  7842: 64 5a                    a3 = s0
  7844: 33 00 bc 00              ra = 0xbc
  7848: 0a 64                    ecalli 100 // 'log'
  7850: 01                       fallthrough
      :                          @410 [@dyn 94]
  7851: 82 17 48                 a0 = u64 [sp + 0x48]
  7854: c8 67 07                 a0 = a0 + s1
  7857: 53 27 00 f0 23           jump @416 if a0 <u 4294963200
      :                          @411
  7862: 33 07 20 00 03           a0 = 0x30020
  7867: 95 77 00 10              a0 = a0 + 0x1000
  7871: 01                       fallthrough
      :                          @412
  7872: 82 78                    a1 = u64 [a0]
  7874: c9 87 09                 a2 = a0 - a1
  7877: ab 59 0f                 jump @416 if a2 != s0
      :                          @413
  7880: c9 68 09                 a2 = a1 - s1
  7883: 01                       fallthrough
      :                          @414
  7884: 82 7a                    a3 = u64 [a0]
  7886: ab 8a f2                 jump @412 if a3 != a1
      :                          @415
  7889: 7b 79                    u64 [a0] = a2
  7891: 01                       fallthrough
      :                          @416
  7892: 95 16 ff 07              s1 = sp + 0x7ff
  7896: 95 66 99 03              s1 = s1 + 0x399
  7900: 82 67                    a0 = u64 [s1]
  7902: 33 08 06                 a1 = 0x6
  7905: 33 00 1c 01              ra = 0x11c
  7909: 28 1d 1f                 jump @983
      :                          @417 [@dyn 95]
  7912: 33 05 03                 s0 = 0x3
  7915: 95 17 58                 a0 = sp + 0x58
  7918: 33 08 03                 a1 = 0x3
  7921: 0a 0e                    ecalli 14 // 'solicit'
  7923: 7b 67 70                 u64 [s1 + 0x70] = a0
  7926: 33 08 01                 a1 = 0x1
  7929: 50 20 c0 00 09 1f        ra = 192, jump @983
      :                          @418 [@dyn 96]
  7935: 82 17 38                 a0 = u64 [sp + 0x38]
  7938: 7b 67 18                 u64 [s1 + 0x18] = a0
  7941: 82 18 40                 a1 = u64 [sp + 0x40]
  7944: 7b 68 20                 u64 [s1 + 0x20] = a1
  7947: 95 17 ff 07              a0 = sp + 0x7ff
  7951: 95 77 09 04              a0 = a0 + 0x409
  7955: 7b 67 28                 u64 [s1 + 0x28] = a0
  7958: 7b 68 30                 u64 [s1 + 0x30] = a1
  7961: 33 07 c8 0b 01           a0 = 0x10bc8
  7966: 7b 17 98 01              u64 [sp + 0x198] = a0
  7970: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  7974: 49 21 b8 01              u64 [sp + 440] = 0
  7978: 95 17 ff 07              a0 = sp + 0x7ff
  7982: 95 77 b1 03              a0 = a0 + 0x3b1
  7986: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7990: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7995: 95 17 ff 07              a0 = sp + 0x7ff
  7999: 95 77 e1 03              a0 = a0 + 0x3e1
  8003: 95 18 98 01              a1 = sp + 0x198
  8007: 50 20 c2 00 a8 0e        ra = 194, jump @647
      :                          @419 [@dyn 97]
  8013: 82 65 50                 s0 = u64 [s1 + 0x50]
  8016: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8019: 95 17 ff 07              a0 = sp + 0x7ff
  8023: 95 77 99 03              a0 = a0 + 0x399
  8027: 82 76 48                 s1 = u64 [a0 + 0x48]
  8030: 33 07 02                 a0 = 0x2
  8033: 33 08                    a1 = 0
  8035: 33 09                    a2 = 0
  8037: 64 5a                    a3 = s0
  8039: 33 00 c4 00              ra = 0xc4
  8043: 0a 64                    ecalli 100 // 'log'
  8045: 01                       fallthrough
      :                          @420 [@dyn 98]
  8046: 82 17 48                 a0 = u64 [sp + 0x48]
  8049: c8 67 07                 a0 = a0 + s1
  8052: 53 27 00 f0 23           jump @426 if a0 <u 4294963200
      :                          @421
  8057: 33 07 20 00 03           a0 = 0x30020
  8062: 95 77 00 10              a0 = a0 + 0x1000
  8066: 01                       fallthrough
      :                          @422
  8067: 82 78                    a1 = u64 [a0]
  8069: c9 87 09                 a2 = a0 - a1
  8072: ab 59 0f                 jump @426 if a2 != s0
      :                          @423
  8075: c9 68 09                 a2 = a1 - s1
  8078: 01                       fallthrough
      :                          @424
  8079: 82 7a                    a3 = u64 [a0]
  8081: ab 8a f2                 jump @422 if a3 != a1
      :                          @425
  8084: 7b 79                    u64 [a0] = a2
  8086: 01                       fallthrough
      :                          @426
  8087: 95 17 58                 a0 = sp + 0x58
  8090: 33 08 03                 a1 = 0x3
  8093: 0a 0d                    ecalli 13 // 'query'
  8095: 95 18 ff 07              a1 = sp + 0x7ff
  8099: 95 88 99 03              a1 = a1 + 0x399
  8103: 7b 87 78                 u64 [a1 + 0x78] = a0
  8106: 95 17 ff 07              a0 = sp + 0x7ff
  8110: 95 77 11 04              a0 = a0 + 0x411
  8114: 7b 87 28                 u64 [a1 + 0x28] = a0
  8117: 33 07 18 0a 01           a0 = 0x10a18
  8122: 7b 17 98 01              u64 [sp + 0x198] = a0
  8126: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8131: 49 21 b8 01              u64 [sp + 440] = 0
  8135: 95 17 ff 07              a0 = sp + 0x7ff
  8139: 95 77 b1 03              a0 = a0 + 0x3b1
  8143: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8147: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8152: 82 17 38                 a0 = u64 [sp + 0x38]
  8155: 7b 87 18                 u64 [a1 + 0x18] = a0
  8158: 82 17 40                 a0 = u64 [sp + 0x40]
  8161: 7b 87 20                 u64 [a1 + 0x20] = a0
  8164: 7b 87 30                 u64 [a1 + 0x30] = a0
  8167: 95 17 ff 07              a0 = sp + 0x7ff
  8171: 95 77 e1 03              a0 = a0 + 0x3e1
  8175: 95 18 98 01              a1 = sp + 0x198
  8179: 95 15 98 01              s0 = sp + 0x198
  8183: 50 20 c6 00 f8 0d        ra = 198, jump @647
      :                          @427 [@dyn 99]
  8189: 95 17 ff 07              a0 = sp + 0x7ff
  8193: 95 77 99 03              a0 = a0 + 0x399
  8197: 82 76 50                 s1 = u64 [a0 + 0x50]
  8200: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8203: 82 77 48                 a0 = u64 [a0 + 0x48]
  8206: 7b 17 10                 u64 [sp + 0x10] = a0
  8209: 33 07 02                 a0 = 0x2
  8212: 33 08                    a1 = 0
  8214: 33 09                    a2 = 0
  8216: 64 6a                    a3 = s1
  8218: 33 00 c8 00              ra = 0xc8
  8222: 0a 64                    ecalli 100 // 'log'
  8224: 01                       fallthrough
      :                          @428 [@dyn 100]
  8225: 82 1c 10                 a5 = u64 [sp + 0x10]
  8228: 82 17 48                 a0 = u64 [sp + 0x48]
  8231: c8 c7 07                 a0 = a0 + a5
  8234: 53 27 00 f0 23           jump @434 if a0 <u 4294963200
      :                          @429
  8239: 33 07 20 00 03           a0 = 0x30020
  8244: 95 77 00 10              a0 = a0 + 0x1000
  8248: 01                       fallthrough
      :                          @430
  8249: 82 78                    a1 = u64 [a0]
  8251: c9 87 09                 a2 = a0 - a1
  8254: ab 69 0f                 jump @434 if a2 != s1
      :                          @431
  8257: c9 c8 09                 a2 = a1 - a5
  8260: 01                       fallthrough
      :                          @432
  8261: 82 7a                    a3 = u64 [a0]
  8263: ab 8a f2                 jump @430 if a3 != a1
      :                          @433
  8266: 7b 79                    u64 [a0] = a2
  8268: 01                       fallthrough
      :                          @434
  8269: 95 17 ff 07              a0 = sp + 0x7ff
  8273: 95 77 99 03              a0 = a0 + 0x399
  8277: 82 77 78                 a0 = u64 [a0 + 0x78]
  8280: 33 08 02                 a1 = 0x2
  8283: 50 20 ca 00 a7 1d        ra = 202, jump @983
      :                          @435 [@dyn 101]
  8289: 33 09 00 0a              a2 = 0xa00
  8293: 95 17 98 01              a0 = sp + 0x198
  8297: 33 08                    a1 = 0
  8299: 50 20 cc 00 ab 10        ra = 204, jump @715
      :                          @436 [@dyn 102]
  8305: 33 06 50                 s1 = 0x50
  8308: 01                       fallthrough
      :                          @437
  8309: 95 18 58                 a1 = sp + 0x58
  8312: 33 09 20                 a2 = 0x20
  8315: 64 57                    a0 = s0
  8317: 50 20 ce 00 e7 0f        ra = 206, jump @697
      :                          @438 [@dyn 103]
  8323: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  8326: 95 55 20                 s0 = s0 + 0x20
  8329: 52 06 ec                 jump @437 if s1 != 0
      :                          @439
  8332: 95 18 98 01              a1 = sp + 0x198
  8336: 33 07                    a0 = 0
  8338: 0a 06                    ecalli 6 // 'assign'
  8340: 95 16 ff 07              s1 = sp + 0x7ff
  8344: 95 66 99 03              s1 = s1 + 0x399
  8348: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8352: 95 17 ff 07              a0 = sp + 0x7ff
  8356: 95 77 19 04              a0 = a0 + 0x419
  8360: 7b 67 58                 u64 [s1 + 0x58] = a0
  8363: 33 07 f8 0b 01           a0 = 0x10bf8
  8368: 7b 67 18                 u64 [s1 + 0x18] = a0
  8371: 49 16 20 03              u64 [s1 + 32] = 0x3
  8375: 95 17 ff 07              a0 = sp + 0x7ff
  8379: 95 77 e1 03              a0 = a0 + 0x3e1
  8383: 7b 67 28                 u64 [s1 + 0x28] = a0
  8386: 49 16 30 02              u64 [s1 + 48] = 0x2
  8390: 82 17 38                 a0 = u64 [sp + 0x38]
  8393: 7b 67 48                 u64 [s1 + 0x48] = a0
  8396: 82 17 40                 a0 = u64 [sp + 0x40]
  8399: 7b 67 50                 u64 [s1 + 0x50] = a0
  8402: 7b 67 60                 u64 [s1 + 0x60] = a0
  8405: 49 16 38                 u64 [s1 + 56] = 0
  8408: 95 17 ff 07              a0 = sp + 0x7ff
  8412: 95 77 99 03              a0 = a0 + 0x399
  8416: 95 18 ff 07              a1 = sp + 0x7ff
  8420: 95 88 b1 03              a1 = a1 + 0x3b1
  8424: 50 20 d0 00 07 0d        ra = 208, jump @647
      :                          @440 [@dyn 104]
  8430: 82 65 08                 s0 = u64 [s1 + 0x8]
  8433: 82 6b 10                 a4 = u64 [s1 + 0x10]
  8436: 82 66                    s1 = u64 [s1]
  8438: 33 07 02                 a0 = 0x2
  8441: 33 08                    a1 = 0
  8443: 33 09                    a2 = 0
  8445: 64 5a                    a3 = s0
  8447: 33 00 d2 00              ra = 0xd2
  8451: 0a 64                    ecalli 100 // 'log'
  8453: 01                       fallthrough
      :                          @441 [@dyn 105]
  8454: 82 17 48                 a0 = u64 [sp + 0x48]
  8457: c8 67 07                 a0 = a0 + s1
  8460: 53 27 00 f0 1d 05        jump @512 if a0 <u 4294963200
      :                          @442
  8466: 33 07 20 00 03           a0 = 0x30020
  8471: 95 77 00 10              a0 = a0 + 0x1000
  8475: 01                       fallthrough
      :                          @443
  8476: 82 78                    a1 = u64 [a0]
  8478: c9 87 09                 a2 = a0 - a1
  8481: ab 59 08 05              jump @512 if a2 != s0
      :                          @444
  8485: c9 68 09                 a2 = a1 - s1
  8488: 01                       fallthrough
      :                          @445
  8489: 82 7a                    a3 = u64 [a0]
  8491: ab 8a f1                 jump @443 if a3 != a1
      :                          @446
  8494: 7b 79                    u64 [a0] = a2
  8496: 33 0b                    a4 = 0
  8498: 01                       fallthrough
      :                          @447
  8499: ab 8a e9                 jump @443 if a3 != a1
      :                          @448
  8502: 28 f3 04                 jump @512
      :                          @449 [@dyn 106]
  8505: 33 05 03                 s0 = 0x3
  8508: 95 17 58                 a0 = sp + 0x58
  8511: 33 08 03                 a1 = 0x3
  8514: 0a 0f                    ecalli 15 // 'forget'
  8516: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8520: 82 17 38                 a0 = u64 [sp + 0x38]
  8523: 7b 67 18                 u64 [s1 + 0x18] = a0
  8526: 82 18 40                 a1 = u64 [sp + 0x40]
  8529: 7b 68 20                 u64 [s1 + 0x20] = a1
  8532: 95 17 ff 07              a0 = sp + 0x7ff
  8536: 95 77 19 04              a0 = a0 + 0x419
  8540: 7b 67 28                 u64 [s1 + 0x28] = a0
  8543: 7b 68 30                 u64 [s1 + 0x30] = a1
  8546: 33 07 78 0a 01           a0 = 0x10a78
  8551: 7b 17 98 01              u64 [sp + 0x198] = a0
  8555: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  8559: 49 21 b8 01              u64 [sp + 440] = 0
  8563: 95 17 ff 07              a0 = sp + 0x7ff
  8567: 95 77 b1 03              a0 = a0 + 0x3b1
  8571: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8575: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8580: 95 17 ff 07              a0 = sp + 0x7ff
  8584: 95 77 e1 03              a0 = a0 + 0x3e1
  8588: 95 18 98 01              a1 = sp + 0x198
  8592: 50 20 d6 00 5f 0c        ra = 214, jump @647
      :                          @450 [@dyn 107]
  8598: 82 65 50                 s0 = u64 [s1 + 0x50]
  8601: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8604: 95 17 ff 07              a0 = sp + 0x7ff
  8608: 95 77 99 03              a0 = a0 + 0x399
  8612: 82 76 48                 s1 = u64 [a0 + 0x48]
  8615: 33 07 02                 a0 = 0x2
  8618: 33 08                    a1 = 0
  8620: 33 09                    a2 = 0
  8622: 64 5a                    a3 = s0
  8624: 33 00 d8 00              ra = 0xd8
  8628: 0a 64                    ecalli 100 // 'log'
  8630: 01                       fallthrough
      :                          @451 [@dyn 108]
  8631: 82 17 48                 a0 = u64 [sp + 0x48]
  8634: c8 67 07                 a0 = a0 + s1
  8637: 53 27 00 f0 23           jump @457 if a0 <u 4294963200
      :                          @452
  8642: 33 07 20 00 03           a0 = 0x30020
  8647: 95 77 00 10              a0 = a0 + 0x1000
  8651: 01                       fallthrough
      :                          @453
  8652: 82 78                    a1 = u64 [a0]
  8654: c9 87 09                 a2 = a0 - a1
  8657: ab 59 0f                 jump @457 if a2 != s0
      :                          @454
  8660: c9 68 09                 a2 = a1 - s1
  8663: 01                       fallthrough
      :                          @455
  8664: 82 7a                    a3 = u64 [a0]
  8666: ab 8a f2                 jump @453 if a3 != a1
      :                          @456
  8669: 7b 79                    u64 [a0] = a2
  8671: 01                       fallthrough
      :                          @457
  8672: 95 16 ff 07              s1 = sp + 0x7ff
  8676: 95 66 99 03              s1 = s1 + 0x399
  8680: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8684: 33 08 01                 a1 = 0x1
  8687: 50 20 da 00 13 1c        ra = 218, jump @983
      :                          @458 [@dyn 109]
  8693: 95 17 58                 a0 = sp + 0x58
  8696: 33 08 03                 a1 = 0x3
  8699: 0a 0d                    ecalli 13 // 'query'
  8701: 7b 67                    u64 [s1] = a0
  8703: 33 07 28 0c 01           a0 = 0x10c28
  8708: 7b 17 98 01              u64 [sp + 0x198] = a0
  8712: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8717: 49 21 b8 01              u64 [sp + 440] = 0
  8721: 95 17 ff 07              a0 = sp + 0x7ff
  8725: 95 77 b1 03              a0 = a0 + 0x3b1
  8729: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8733: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8738: 82 17 38                 a0 = u64 [sp + 0x38]
  8741: 7b 67 18                 u64 [s1 + 0x18] = a0
  8744: 82 17 40                 a0 = u64 [sp + 0x40]
  8747: 7b 67 20                 u64 [s1 + 0x20] = a0
  8750: 7b 66 28                 u64 [s1 + 0x28] = s1
  8753: 7b 67 30                 u64 [s1 + 0x30] = a0
  8756: 95 17 ff 07              a0 = sp + 0x7ff
  8760: 95 77 e1 03              a0 = a0 + 0x3e1
  8764: 95 18 98 01              a1 = sp + 0x198
  8768: 50 20 dc 00 af 0b        ra = 220, jump @647
      :                          @459 [@dyn 110]
  8774: 82 65 50                 s0 = u64 [s1 + 0x50]
  8777: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8780: 82 66 48                 s1 = u64 [s1 + 0x48]
  8783: 33 07 02                 a0 = 0x2
  8786: 33 08                    a1 = 0
  8788: 33 09                    a2 = 0
  8790: 64 5a                    a3 = s0
  8792: 33 00 de 00              ra = 0xde
  8796: 0a 64                    ecalli 100 // 'log'
  8798: 01                       fallthrough
      :                          @460 [@dyn 111]
  8799: 82 17 48                 a0 = u64 [sp + 0x48]
  8802: c8 67 07                 a0 = a0 + s1
  8805: 53 27 00 f0 83 01        jump @485 if a0 <u 4294963200
      :                          @461
  8811: 33 07 20 00 03           a0 = 0x30020
  8816: 95 77 00 10              a0 = a0 + 0x1000
  8820: 01                       fallthrough
      :                          @462
  8821: 82 78                    a1 = u64 [a0]
  8823: c9 87 09                 a2 = a0 - a1
  8826: ab 59 6e 01              jump @485 if a2 != s0
      :                          @463
  8830: c9 68 09                 a2 = a1 - s1
  8833: 01                       fallthrough
      :                          @464
  8834: 82 7a                    a3 = u64 [a0]
  8836: ab 8a f1                 jump @462 if a3 != a1
      :                          @465
  8839: 7b 79                    u64 [a0] = a2
  8841: 33 0b                    a4 = 0
  8843: 01                       fallthrough
      :                          @466
  8844: ab 8a e9                 jump @462 if a3 != a1
      :                          @467
  8847: 28 59 01                 jump @485
      :                          @468 [@dyn 112]
  8850: 95 18 58                 a1 = sp + 0x58
  8853: 95 19 98 00              a2 = sp + 0x98
  8857: 33 0b 03                 a4 = 0x3
  8860: 82 17 30                 a0 = u64 [sp + 0x30]
  8863: 33 0a                    a3 = 0
  8865: 0a 01                    ecalli 1 // 'lookup'
  8867: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8871: 82 17 38                 a0 = u64 [sp + 0x38]
  8874: 7b 67 18                 u64 [s1 + 0x18] = a0
  8877: 82 18 40                 a1 = u64 [sp + 0x40]
  8880: 7b 68 20                 u64 [s1 + 0x20] = a1
  8883: 95 17 ff 07              a0 = sp + 0x7ff
  8887: 95 77 19 04              a0 = a0 + 0x419
  8891: 7b 67 28                 u64 [s1 + 0x28] = a0
  8894: 7b 68 30                 u64 [s1 + 0x30] = a1
  8897: 33 07 58 0c 01           a0 = 0x10c58
  8902: 7b 17 98 01              u64 [sp + 0x198] = a0
  8906: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8911: 49 21 b8 01              u64 [sp + 440] = 0
  8915: 95 17 ff 07              a0 = sp + 0x7ff
  8919: 95 77 b1 03              a0 = a0 + 0x3b1
  8923: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8927: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8932: 95 17 ff 07              a0 = sp + 0x7ff
  8936: 95 77 e1 03              a0 = a0 + 0x3e1
  8940: 95 18 98 01              a1 = sp + 0x198
  8944: 50 20 e2 00 ff 0a        ra = 226, jump @647
      :                          @469 [@dyn 113]
  8950: 82 65 50                 s0 = u64 [s1 + 0x50]
  8953: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8956: 95 17 ff 07              a0 = sp + 0x7ff
  8960: 95 77 99 03              a0 = a0 + 0x399
  8964: 82 76 48                 s1 = u64 [a0 + 0x48]
  8967: 33 07 02                 a0 = 0x2
  8970: 33 08                    a1 = 0
  8972: 33 09                    a2 = 0
  8974: 64 5a                    a3 = s0
  8976: 33 00 e4 00              ra = 0xe4
  8980: 0a 64                    ecalli 100 // 'log'
  8982: 01                       fallthrough
      :                          @470 [@dyn 114]
  8983: 82 17 48                 a0 = u64 [sp + 0x48]
  8986: c8 67 07                 a0 = a0 + s1
  8989: 53 27 00 f0 23           jump @476 if a0 <u 4294963200
      :                          @471
  8994: 33 07 20 00 03           a0 = 0x30020
  8999: 95 77 00 10              a0 = a0 + 0x1000
  9003: 01                       fallthrough
      :                          @472
  9004: 82 78                    a1 = u64 [a0]
  9006: c9 87 09                 a2 = a0 - a1
  9009: ab 59 0f                 jump @476 if a2 != s0
      :                          @473
  9012: c9 68 09                 a2 = a1 - s1
  9015: 01                       fallthrough
      :                          @474
  9016: 82 7a                    a3 = u64 [a0]
  9018: ab 8a f2                 jump @472 if a3 != a1
      :                          @475
  9021: 7b 79                    u64 [a0] = a2
  9023: 01                       fallthrough
      :                          @476
  9024: 95 16 ff 07              s1 = sp + 0x7ff
  9028: 95 66 99 03              s1 = s1 + 0x399
  9032: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9036: 33 08 01                 a1 = 0x1
  9039: 50 20 e6 00 b3 1a        ra = 230, jump @983
      :                          @477 [@dyn 115]
  9045: 95 17 58                 a0 = sp + 0x58
  9048: 33 08 03                 a1 = 0x3
  9051: 0a 0d                    ecalli 13 // 'query'
  9053: 7b 67                    u64 [s1] = a0
  9055: 33 07 88 0c 01           a0 = 0x10c88
  9060: 7b 17 98 01              u64 [sp + 0x198] = a0
  9064: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9069: 49 21 b8 01              u64 [sp + 440] = 0
  9073: 95 17 ff 07              a0 = sp + 0x7ff
  9077: 95 77 b1 03              a0 = a0 + 0x3b1
  9081: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9085: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9090: 82 17 38                 a0 = u64 [sp + 0x38]
  9093: 7b 67 18                 u64 [s1 + 0x18] = a0
  9096: 82 17 40                 a0 = u64 [sp + 0x40]
  9099: 7b 67 20                 u64 [s1 + 0x20] = a0
  9102: 7b 66 28                 u64 [s1 + 0x28] = s1
  9105: 7b 67 30                 u64 [s1 + 0x30] = a0
  9108: 95 17 ff 07              a0 = sp + 0x7ff
  9112: 95 77 e1 03              a0 = a0 + 0x3e1
  9116: 95 18 98 01              a1 = sp + 0x198
  9120: 50 20 e8 00 4f 0a        ra = 232, jump @647
      :                          @478 [@dyn 116]
  9126: 82 65 50                 s0 = u64 [s1 + 0x50]
  9129: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9132: 82 66 48                 s1 = u64 [s1 + 0x48]
  9135: 33 07 02                 a0 = 0x2
  9138: 33 08                    a1 = 0
  9140: 33 09                    a2 = 0
  9142: 64 5a                    a3 = s0
  9144: 33 00 ea 00              ra = 0xea
  9148: 0a 64                    ecalli 100 // 'log'
  9150: 01                       fallthrough
      :                          @479 [@dyn 117]
  9151: 82 17 48                 a0 = u64 [sp + 0x48]
  9154: c8 67 07                 a0 = a0 + s1
  9157: 53 27 00 f0 23           jump @485 if a0 <u 4294963200
      :                          @480
  9162: 33 07 20 00 03           a0 = 0x30020
  9167: 95 77 00 10              a0 = a0 + 0x1000
  9171: 01                       fallthrough
      :                          @481
  9172: 82 78                    a1 = u64 [a0]
  9174: c9 87 09                 a2 = a0 - a1
  9177: ab 59 0f                 jump @485 if a2 != s0
      :                          @482
  9180: c9 68 09                 a2 = a1 - s1
  9183: 01                       fallthrough
      :                          @483
  9184: 82 7a                    a3 = u64 [a0]
  9186: ab 8a f2                 jump @481 if a3 != a1
      :                          @484
  9189: 7b 79                    u64 [a0] = a2
  9191: 01                       fallthrough
      :                          @485
  9192: 95 16 ff 07              s1 = sp + 0x7ff
  9196: 95 66 99 03              s1 = s1 + 0x399
  9200: 82 67                    a0 = u64 [s1]
  9202: 33 08 02                 a1 = 0x2
  9205: 33 00 1c 01              ra = 0x11c
  9209: 28 09 1a                 jump @983
      :                          @486 [@dyn 118]
  9212: 95 17 58                 a0 = sp + 0x58
  9215: 33 08 03                 a1 = 0x3
  9218: 33 09 8f 03              a2 = 0x38f
  9222: 33 0a 8f 03              a3 = 0x38f
  9226: 0a 09                    ecalli 9 // 'new'
  9228: 7b 67 70                 u64 [s1 + 0x70] = a0
  9231: 82 17 38                 a0 = u64 [sp + 0x38]
  9234: 7b 67 18                 u64 [s1 + 0x18] = a0
  9237: 82 18 40                 a1 = u64 [sp + 0x40]
  9240: 7b 68 20                 u64 [s1 + 0x20] = a1
  9243: 95 17 ff 07              a0 = sp + 0x7ff
  9247: 95 77 09 04              a0 = a0 + 0x409
  9251: 7b 67 28                 u64 [s1 + 0x28] = a0
  9254: 7b 68 30                 u64 [s1 + 0x30] = a1
  9257: 33 07 b8 0c 01           a0 = 0x10cb8
  9262: 7b 17 98 01              u64 [sp + 0x198] = a0
  9266: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9271: 49 21 b8 01              u64 [sp + 440] = 0
  9275: 95 17 ff 07              a0 = sp + 0x7ff
  9279: 95 77 b1 03              a0 = a0 + 0x3b1
  9283: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9287: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9292: 95 17 ff 07              a0 = sp + 0x7ff
  9296: 95 77 e1 03              a0 = a0 + 0x3e1
  9300: 95 18 98 01              a1 = sp + 0x198
  9304: 50 20 ee 00 97 09        ra = 238, jump @647
      :                          @487 [@dyn 119]
  9310: 82 65 50                 s0 = u64 [s1 + 0x50]
  9313: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9316: 95 17 ff 07              a0 = sp + 0x7ff
  9320: 95 77 99 03              a0 = a0 + 0x399
  9324: 82 76 48                 s1 = u64 [a0 + 0x48]
  9327: 33 07 02                 a0 = 0x2
  9330: 33 08                    a1 = 0
  9332: 33 09                    a2 = 0
  9334: 64 5a                    a3 = s0
  9336: 33 00 f0 00              ra = 0xf0
  9340: 0a 64                    ecalli 100 // 'log'
  9342: 01                       fallthrough
      :                          @488 [@dyn 120]
  9343: 82 17 48                 a0 = u64 [sp + 0x48]
  9346: c8 67 07                 a0 = a0 + s1
  9349: 53 27 00 f0 23           jump @494 if a0 <u 4294963200
      :                          @489
  9354: 33 07 20 00 03           a0 = 0x30020
  9359: 95 77 00 10              a0 = a0 + 0x1000
  9363: 01                       fallthrough
      :                          @490
  9364: 82 78                    a1 = u64 [a0]
  9366: c9 87 09                 a2 = a0 - a1
  9369: ab 59 0f                 jump @494 if a2 != s0
      :                          @491
  9372: c9 68 09                 a2 = a1 - s1
  9375: 01                       fallthrough
      :                          @492
  9376: 82 7a                    a3 = u64 [a0]
  9378: ab 8a f2                 jump @490 if a3 != a1
      :                          @493
  9381: 7b 79                    u64 [a0] = a2
  9383: 01                       fallthrough
      :                          @494
  9384: 95 16 ff 07              s1 = sp + 0x7ff
  9388: 95 66 99 03              s1 = s1 + 0x399
  9392: 82 67 70                 a0 = u64 [s1 + 0x70]
  9395: 33 08 01                 a1 = 0x1
  9398: 50 20 f2 00 4c 19        ra = 242, jump @983
      :                          @495 [@dyn 121]
  9404: 95 17 58                 a0 = sp + 0x58
  9407: 33 08 8f 03              a1 = 0x38f
  9411: 33 09 8f 03              a2 = 0x38f
  9415: 0a 0a                    ecalli 10 // 'upgrade'
  9417: 7b 67 78                 u64 [s1 + 0x78] = a0
  9420: 95 17 ff 07              a0 = sp + 0x7ff
  9424: 95 77 11 04              a0 = a0 + 0x411
  9428: 7b 67 28                 u64 [s1 + 0x28] = a0
  9431: 33 07 e8 0c 01           a0 = 0x10ce8
  9436: 7b 17 98 01              u64 [sp + 0x198] = a0
  9440: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9445: 49 21 b8 01              u64 [sp + 440] = 0
  9449: 95 17 ff 07              a0 = sp + 0x7ff
  9453: 95 77 b1 03              a0 = a0 + 0x3b1
  9457: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9461: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9466: 82 17 38                 a0 = u64 [sp + 0x38]
  9469: 7b 67 18                 u64 [s1 + 0x18] = a0
  9472: 82 17 40                 a0 = u64 [sp + 0x40]
  9475: 7b 67 20                 u64 [s1 + 0x20] = a0
  9478: 7b 67 30                 u64 [s1 + 0x30] = a0
  9481: 95 17 ff 07              a0 = sp + 0x7ff
  9485: 95 77 e1 03              a0 = a0 + 0x3e1
  9489: 95 18 98 01              a1 = sp + 0x198
  9493: 50 20 f4 00 da 08        ra = 244, jump @647
      :                          @496 [@dyn 122]
  9499: 82 65 50                 s0 = u64 [s1 + 0x50]
  9502: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9505: 82 66 48                 s1 = u64 [s1 + 0x48]
  9508: 33 07 02                 a0 = 0x2
  9511: 33 08                    a1 = 0
  9513: 33 09                    a2 = 0
  9515: 64 5a                    a3 = s0
  9517: 33 00 f6 00              ra = 0xf6
  9521: 0a 64                    ecalli 100 // 'log'
  9523: 01                       fallthrough
      :                          @497 [@dyn 123]
  9524: 82 17 48                 a0 = u64 [sp + 0x48]
  9527: c8 67 07                 a0 = a0 + s1
  9530: 53 27 00 f0 23           jump @503 if a0 <u 4294963200
      :                          @498
  9535: 33 07 20 00 03           a0 = 0x30020
  9540: 95 77 00 10              a0 = a0 + 0x1000
  9544: 01                       fallthrough
      :                          @499
  9545: 82 78                    a1 = u64 [a0]
  9547: c9 87 09                 a2 = a0 - a1
  9550: ab 59 0f                 jump @503 if a2 != s0
      :                          @500
  9553: c9 68 09                 a2 = a1 - s1
  9556: 01                       fallthrough
      :                          @501
  9557: 82 7a                    a3 = u64 [a0]
  9559: ab 8a f2                 jump @499 if a3 != a1
      :                          @502
  9562: 7b 79                    u64 [a0] = a2
  9564: 01                       fallthrough
      :                          @503
  9565: 95 16 ff 07              s1 = sp + 0x7ff
  9569: 95 66 99 03              s1 = s1 + 0x399
  9573: 82 67 78                 a0 = u64 [s1 + 0x78]
  9576: 33 08 02                 a1 = 0x2
  9579: 33 05 02                 s0 = 0x2
  9582: 50 20 f8 00 94 18        ra = 248, jump @983
      :                          @504 [@dyn 124]
  9588: 48 06 8f 03              u32 [s1 + 0] = 0x38f
  9592: 48 16 08                 u32 [s1 + 8] = 0
  9595: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
  9600: 33 08 01                 a1 = 0x1
  9603: 33 09 01                 a2 = 0x1
  9606: 95 1a ff 07              a3 = sp + 0x7ff
  9610: 95 aa 99 03              a3 = a3 + 0x399
  9614: 33 0b 01                 a4 = 0x1
  9617: 33 07                    a0 = 0
  9619: 0a 05                    ecalli 5 // 'bless'
  9621: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9625: 95 17 ff 07              a0 = sp + 0x7ff
  9629: 95 77 19 04              a0 = a0 + 0x419
  9633: 7b 67 28                 u64 [s1 + 0x28] = a0
  9636: 33 07 18 0d 01           a0 = 0x10d18
  9641: 7b 17 98 01              u64 [sp + 0x198] = a0
  9645: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9650: 49 21 b8 01              u64 [sp + 440] = 0
  9654: 95 17 ff 07              a0 = sp + 0x7ff
  9658: 95 77 b1 03              a0 = a0 + 0x3b1
  9662: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9666: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9670: 82 17 38                 a0 = u64 [sp + 0x38]
  9673: 7b 67 18                 u64 [s1 + 0x18] = a0
  9676: 82 17 40                 a0 = u64 [sp + 0x40]
  9679: 7b 67 20                 u64 [s1 + 0x20] = a0
  9682: 7b 67 30                 u64 [s1 + 0x30] = a0
  9685: 95 17 ff 07              a0 = sp + 0x7ff
  9689: 95 77 e1 03              a0 = a0 + 0x3e1
  9693: 95 18 98 01              a1 = sp + 0x198
  9697: 50 20 fa 00 0e 08        ra = 250, jump @647
      :                          @505 [@dyn 125]
  9703: 82 65 50                 s0 = u64 [s1 + 0x50]
  9706: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9709: 82 66 48                 s1 = u64 [s1 + 0x48]
  9712: 33 07 02                 a0 = 0x2
  9715: 33 08                    a1 = 0
  9717: 33 09                    a2 = 0
  9719: 64 5a                    a3 = s0
  9721: 33 00 fc 00              ra = 0xfc
  9725: 0a 64                    ecalli 100 // 'log'
  9727: 01                       fallthrough
      :                          @506 [@dyn 126]
  9728: 82 17 48                 a0 = u64 [sp + 0x48]
  9731: c8 67 07                 a0 = a0 + s1
  9734: 53 27 00 f0 23           jump @512 if a0 <u 4294963200
      :                          @507
  9739: 33 07 20 00 03           a0 = 0x30020
  9744: 95 77 00 10              a0 = a0 + 0x1000
  9748: 01                       fallthrough
      :                          @508
  9749: 82 78                    a1 = u64 [a0]
  9751: c9 87 09                 a2 = a0 - a1
  9754: ab 59 0f                 jump @512 if a2 != s0
      :                          @509
  9757: c9 68 09                 a2 = a1 - s1
  9760: 01                       fallthrough
      :                          @510
  9761: 82 7a                    a3 = u64 [a0]
  9763: ab 8a f2                 jump @508 if a3 != a1
      :                          @511
  9766: 7b 79                    u64 [a0] = a2
  9768: 01                       fallthrough
      :                          @512
  9769: 95 16 ff 07              s1 = sp + 0x7ff
  9773: 95 66 99 03              s1 = s1 + 0x399
  9777: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9781: 33 08 05                 a1 = 0x5
  9784: 33 00 1c 01              ra = 0x11c
  9788: 28 c6 17                 jump @983
      :                          @513 [@dyn 127]
  9791: 95 17 55                 a0 = sp + 0x55
  9794: 33 08 03                 a1 = 0x3
  9797: 33 09                    a2 = 0
  9799: 33 0a                    a3 = 0
  9801: 0a 03                    ecalli 3 // 'write'
  9803: 7b 67 68                 u64 [s1 + 0x68] = a0
  9806: 33 07 50 00 01           a0 = 0x10050
  9811: 7b 17 10                 u64 [sp + 0x10] = a0
  9814: 7b 67 18                 u64 [s1 + 0x18] = a0
  9817: 82 18 40                 a1 = u64 [sp + 0x40]
  9820: 7b 68 20                 u64 [s1 + 0x20] = a1
  9823: 95 17 ff 07              a0 = sp + 0x7ff
  9827: 95 77 01 04              a0 = a0 + 0x401
  9831: 7b 67 28                 u64 [s1 + 0x28] = a0
  9834: 7b 68 30                 u64 [s1 + 0x30] = a1
  9837: 33 07 48 0d 01           a0 = 0x10d48
  9842: 7b 17 98 01              u64 [sp + 0x198] = a0
  9846: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9851: 49 21 b8 01              u64 [sp + 440] = 0
  9855: 95 17 ff 07              a0 = sp + 0x7ff
  9859: 95 77 b1 03              a0 = a0 + 0x3b1
  9863: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9867: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9872: 95 17 ff 07              a0 = sp + 0x7ff
  9876: 95 77 e1 03              a0 = a0 + 0x3e1
  9880: 95 18 98 01              a1 = sp + 0x198
  9884: 50 20 00 01 53 07        ra = 256, jump @647
      :                          @514 [@dyn 128]
  9890: 82 65 50                 s0 = u64 [s1 + 0x50]
  9893: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9896: 95 17 ff 07              a0 = sp + 0x7ff
  9900: 95 77 99 03              a0 = a0 + 0x399
  9904: 82 76 48                 s1 = u64 [a0 + 0x48]
  9907: 33 07 02                 a0 = 0x2
  9910: 33 08                    a1 = 0
  9912: 33 09                    a2 = 0
  9914: 64 5a                    a3 = s0
  9916: 33 00 02 01              ra = 0x102
  9920: 0a 64                    ecalli 100 // 'log'
  9922: 01                       fallthrough
      :                          @515 [@dyn 129]
  9923: 82 17 48                 a0 = u64 [sp + 0x48]
  9926: c8 67 07                 a0 = a0 + s1
  9929: 33 08 20 00 03           a1 = 0x30020
  9934: 7b 18 08                 u64 [sp + 0x8] = a1
  9937: 53 27 00 f0 21           jump @521 if a0 <u 4294963200
      :                          @516
  9942: 82 18 08                 a1 = u64 [sp + 0x8]
  9945: 95 87 00 10              a0 = a1 + 0x1000
  9949: 01                       fallthrough
      :                          @517
  9950: 82 78                    a1 = u64 [a0]
  9952: c9 87 09                 a2 = a0 - a1
  9955: ab 59 0f                 jump @521 if a2 != s0
      :                          @518
  9958: c9 68 09                 a2 = a1 - s1
  9961: 01                       fallthrough
      :                          @519
  9962: 82 7a                    a3 = u64 [a0]
  9964: ab 8a f2                 jump @517 if a3 != a1
      :                          @520
  9967: 7b 79                    u64 [a0] = a2
  9969: 01                       fallthrough
      :                          @521
  9970: 95 16 ff 07              s1 = sp + 0x7ff
  9974: 95 66 99 03              s1 = s1 + 0x399
  9978: 82 67 68                 a0 = u64 [s1 + 0x68]
  9981: 33 08 01                 a1 = 0x1
  9984: 50 20 04 01 02 17        ra = 260, jump @983
      :                          @522 [@dyn 130]
  9990: 95 17 55                 a0 = sp + 0x55
  9993: 33 08 03                 a1 = 0x3
  9996: 95 19 52                 a2 = sp + 0x52
  9999: 33 0a 03                 a3 = 0x3
 10002: 0a 03                    ecalli 3 // 'write'
 10004: 7b 67 70                 u64 [s1 + 0x70] = a0
 10007: 95 17 ff 07              a0 = sp + 0x7ff
 10011: 95 77 09 04              a0 = a0 + 0x409
 10015: 7b 67 28                 u64 [s1 + 0x28] = a0
 10018: 33 07 78 0d 01           a0 = 0x10d78
 10023: 7b 17 98 01              u64 [sp + 0x198] = a0
 10027: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10032: 49 21 b8 01              u64 [sp + 440] = 0
 10036: 95 17 ff 07              a0 = sp + 0x7ff
 10040: 95 77 b1 03              a0 = a0 + 0x3b1
 10044: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10048: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10053: 82 17 10                 a0 = u64 [sp + 0x10]
 10056: 7b 67 18                 u64 [s1 + 0x18] = a0
 10059: 82 17 40                 a0 = u64 [sp + 0x40]
 10062: 7b 67 20                 u64 [s1 + 0x20] = a0
 10065: 7b 67 30                 u64 [s1 + 0x30] = a0
 10068: 95 17 ff 07              a0 = sp + 0x7ff
 10072: 95 77 e1 03              a0 = a0 + 0x3e1
 10076: 95 18 98 01              a1 = sp + 0x198
 10080: 50 20 06 01 8f 06        ra = 262, jump @647
      :                          @523 [@dyn 131]
 10086: 82 65 50                 s0 = u64 [s1 + 0x50]
 10089: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10092: 82 66 48                 s1 = u64 [s1 + 0x48]
 10095: 33 07 02                 a0 = 0x2
 10098: 33 08                    a1 = 0
 10100: 33 09                    a2 = 0
 10102: 64 5a                    a3 = s0
 10104: 33 00 08 01              ra = 0x108
 10108: 0a 64                    ecalli 100 // 'log'
 10110: 01                       fallthrough
      :                          @524 [@dyn 132]
 10111: 82 17 48                 a0 = u64 [sp + 0x48]
 10114: c8 67 07                 a0 = a0 + s1
 10117: 53 27 00 f0 21           jump @530 if a0 <u 4294963200
      :                          @525
 10122: 82 18 08                 a1 = u64 [sp + 0x8]
 10125: 95 87 00 10              a0 = a1 + 0x1000
 10129: 01                       fallthrough
      :                          @526
 10130: 82 78                    a1 = u64 [a0]
 10132: c9 87 09                 a2 = a0 - a1
 10135: ab 59 0f                 jump @530 if a2 != s0
      :                          @527
 10138: c9 68 09                 a2 = a1 - s1
 10141: 01                       fallthrough
      :                          @528
 10142: 82 7a                    a3 = u64 [a0]
 10144: ab 8a f2                 jump @526 if a3 != a1
      :                          @529
 10147: 7b 79                    u64 [a0] = a2
 10149: 01                       fallthrough
      :                          @530
 10150: 95 16 ff 07              s1 = sp + 0x7ff
 10154: 95 66 99 03              s1 = s1 + 0x399
 10158: 82 67 70                 a0 = u64 [s1 + 0x70]
 10161: 33 08 02                 a1 = 0x2
 10164: 33 05 02                 s0 = 0x2
 10167: 50 20 0a 01 4b 16        ra = 266, jump @983
      :                          @531 [@dyn 133]
 10173: 95 17 55                 a0 = sp + 0x55
 10176: 33 08 03                 a1 = 0x3
 10179: 33 09                    a2 = 0
 10181: 33 0a                    a3 = 0
 10183: 0a 03                    ecalli 3 // 'write'
 10185: 7b 67 78                 u64 [s1 + 0x78] = a0
 10188: 82 17 38                 a0 = u64 [sp + 0x38]
 10191: 7b 67 18                 u64 [s1 + 0x18] = a0
 10194: 82 18 40                 a1 = u64 [sp + 0x40]
 10197: 7b 68 20                 u64 [s1 + 0x20] = a1
 10200: 95 17 ff 07              a0 = sp + 0x7ff
 10204: 95 77 11 04              a0 = a0 + 0x411
 10208: 7b 67 28                 u64 [s1 + 0x28] = a0
 10211: 7b 68 30                 u64 [s1 + 0x30] = a1
 10214: 33 07 a8 0d 01           a0 = 0x10da8
 10219: 7b 17 98 01              u64 [sp + 0x198] = a0
 10223: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10228: 49 21 b8 01              u64 [sp + 440] = 0
 10232: 95 17 ff 07              a0 = sp + 0x7ff
 10236: 95 77 b1 03              a0 = a0 + 0x3b1
 10240: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10244: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 10248: 95 17 ff 07              a0 = sp + 0x7ff
 10252: 95 77 e1 03              a0 = a0 + 0x3e1
 10256: 95 18 98 01              a1 = sp + 0x198
 10260: 50 20 0c 01 db 05        ra = 268, jump @647
      :                          @532 [@dyn 134]
 10266: 82 65 50                 s0 = u64 [s1 + 0x50]
 10269: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10272: 82 66 48                 s1 = u64 [s1 + 0x48]
 10275: 33 07 02                 a0 = 0x2
 10278: 33 08                    a1 = 0
 10280: 33 09                    a2 = 0
 10282: 64 5a                    a3 = s0
 10284: 33 00 0e 01              ra = 0x10e
 10288: 0a 64                    ecalli 100 // 'log'
 10290: 01                       fallthrough
      :                          @533 [@dyn 135]
 10291: 82 17 48                 a0 = u64 [sp + 0x48]
 10294: c8 67 07                 a0 = a0 + s1
 10297: 53 27 00 f0 21           jump @539 if a0 <u 4294963200
      :                          @534
 10302: 82 18 08                 a1 = u64 [sp + 0x8]
 10305: 95 87 00 10              a0 = a1 + 0x1000
 10309: 01                       fallthrough
      :                          @535
 10310: 82 78                    a1 = u64 [a0]
 10312: c9 87 09                 a2 = a0 - a1
 10315: ab 59 0f                 jump @539 if a2 != s0
      :                          @536
 10318: c9 68 09                 a2 = a1 - s1
 10321: 01                       fallthrough
      :                          @537
 10322: 82 7a                    a3 = u64 [a0]
 10324: ab 8a f2                 jump @535 if a3 != a1
      :                          @538
 10327: 7b 79                    u64 [a0] = a2
 10329: 01                       fallthrough
      :                          @539
 10330: 95 16 ff 07              s1 = sp + 0x7ff
 10334: 95 66 99 03              s1 = s1 + 0x399
 10338: 82 67 78                 a0 = u64 [s1 + 0x78]
 10341: 33 08 05                 a1 = 0x5
 10344: 50 20 10 01 9a 15        ra = 272, jump @983
      :                          @540 [@dyn 136]
 10350: 95 18 55                 a1 = sp + 0x55
 10353: 33 09 03                 a2 = 0x3
 10356: 95 1a 98 00              a3 = sp + 0x98
 10360: 33 0c 00 01              a5 = 0x100
 10364: 82 17 30                 a0 = u64 [sp + 0x30]
 10367: 33 0b                    a4 = 0
 10369: 0a 02                    ecalli 2 // 'read'
 10371: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10375: 95 17 ff 07              a0 = sp + 0x7ff
 10379: 95 77 19 04              a0 = a0 + 0x419
 10383: 7b 67 28                 u64 [s1 + 0x28] = a0
 10386: 33 07 d8 0d 01           a0 = 0x10dd8
 10391: 7b 17 98 01              u64 [sp + 0x198] = a0
 10395: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10400: 49 21 b8 01              u64 [sp + 440] = 0
 10404: 95 17 ff 07              a0 = sp + 0x7ff
 10408: 95 77 b1 03              a0 = a0 + 0x3b1
 10412: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10416: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10421: 82 17 10                 a0 = u64 [sp + 0x10]
 10424: 7b 67 18                 u64 [s1 + 0x18] = a0
 10427: 82 17 40                 a0 = u64 [sp + 0x40]
 10430: 7b 67 20                 u64 [s1 + 0x20] = a0
 10433: 7b 67 30                 u64 [s1 + 0x30] = a0
 10436: 95 17 ff 07              a0 = sp + 0x7ff
 10440: 95 77 e1 03              a0 = a0 + 0x3e1
 10444: 95 18 98 01              a1 = sp + 0x198
 10448: 50 20 12 01 1f 05        ra = 274, jump @647
      :                          @541 [@dyn 137]
 10454: 82 65 50                 s0 = u64 [s1 + 0x50]
 10457: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10460: 82 66 48                 s1 = u64 [s1 + 0x48]
 10463: 33 07 02                 a0 = 0x2
 10466: 33 08                    a1 = 0
 10468: 33 09                    a2 = 0
 10470: 64 5a                    a3 = s0
 10472: 33 00 14 01              ra = 0x114
 10476: 0a 64                    ecalli 100 // 'log'
 10478: 01                       fallthrough
      :                          @542 [@dyn 138]
 10479: 82 17 48                 a0 = u64 [sp + 0x48]
 10482: c8 67 07                 a0 = a0 + s1
 10485: 53 27 00 f0 21           jump @548 if a0 <u 4294963200
      :                          @543
 10490: 82 18 08                 a1 = u64 [sp + 0x8]
 10493: 95 87 00 10              a0 = a1 + 0x1000
 10497: 01                       fallthrough
      :                          @544
 10498: 82 78                    a1 = u64 [a0]
 10500: c9 87 09                 a2 = a0 - a1
 10503: ab 59 0f                 jump @548 if a2 != s0
      :                          @545
 10506: c9 68 09                 a2 = a1 - s1
 10509: 01                       fallthrough
      :                          @546
 10510: 82 7a                    a3 = u64 [a0]
 10512: ab 8a f2                 jump @544 if a3 != a1
      :                          @547
 10515: 7b 79                    u64 [a0] = a2
 10517: 01                       fallthrough
      :                          @548
 10518: 95 16 ff 07              s1 = sp + 0x7ff
 10522: 95 66 99 03              s1 = s1 + 0x399
 10526: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10530: 33 08 06                 a1 = 0x6
 10533: 50 20 16 01 dd 14        ra = 278, jump @983
      :                          @549 [@dyn 139]
 10539: 95 17 55                 a0 = sp + 0x55
 10542: 33 08 03                 a1 = 0x3
 10545: 33 09                    a2 = 0
 10547: 33 0a                    a3 = 0
 10549: 0a 03                    ecalli 3 // 'write'
 10551: 7b 67                    u64 [s1] = a0
 10553: 82 17 10                 a0 = u64 [sp + 0x10]
 10556: 7b 67 18                 u64 [s1 + 0x18] = a0
 10559: 33 07 08 0e 01           a0 = 0x10e08
 10564: 7b 17 98 01              u64 [sp + 0x198] = a0
 10568: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10573: 49 21 b8 01              u64 [sp + 440] = 0
 10577: 95 17 ff 07              a0 = sp + 0x7ff
 10581: 95 77 b1 03              a0 = a0 + 0x3b1
 10585: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10589: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10594: 82 17 40                 a0 = u64 [sp + 0x40]
 10597: 7b 67 20                 u64 [s1 + 0x20] = a0
 10600: 7b 66 28                 u64 [s1 + 0x28] = s1
 10603: 7b 67 30                 u64 [s1 + 0x30] = a0
 10606: 95 17 ff 07              a0 = sp + 0x7ff
 10610: 95 77 e1 03              a0 = a0 + 0x3e1
 10614: 95 18 98 01              a1 = sp + 0x198
 10618: 50 20 18 01 75 04        ra = 280, jump @647
      :                          @550 [@dyn 140]
 10624: 82 65 50                 s0 = u64 [s1 + 0x50]
 10627: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10630: 82 66 48                 s1 = u64 [s1 + 0x48]
 10633: 33 07 02                 a0 = 0x2
 10636: 33 08                    a1 = 0
 10638: 33 09                    a2 = 0
 10640: 64 5a                    a3 = s0
 10642: 33 00 1a 01              ra = 0x11a
 10646: 0a 64                    ecalli 100 // 'log'
 10648: 01                       fallthrough
      :                          @551 [@dyn 141]
 10649: 82 17 48                 a0 = u64 [sp + 0x48]
 10652: c8 67 07                 a0 = a0 + s1
 10655: 53 27 00 f0 21           jump @557 if a0 <u 4294963200
      :                          @552
 10660: 82 18 08                 a1 = u64 [sp + 0x8]
 10663: 95 87 00 10              a0 = a1 + 0x1000
 10667: 01                       fallthrough
      :                          @553
 10668: 82 78                    a1 = u64 [a0]
 10670: c9 87 09                 a2 = a0 - a1
 10673: ab 59 0f                 jump @557 if a2 != s0
      :                          @554
 10676: c9 68 09                 a2 = a1 - s1
 10679: 01                       fallthrough
      :                          @555
 10680: 82 7a                    a3 = u64 [a0]
 10682: ab 8a f2                 jump @553 if a3 != a1
      :                          @556
 10685: 7b 79                    u64 [a0] = a2
 10687: 01                       fallthrough
      :                          @557
 10688: 95 16 ff 07              s1 = sp + 0x7ff
 10692: 95 66 99 03              s1 = s1 + 0x399
 10696: 82 67                    a0 = u64 [s1]
 10698: 33 08 07                 a1 = 0x7
 10701: 50 20 1c 01 35 14        ra = 284, jump @983
      :                          @558 [@dyn 142]
 10707: 95 18 98 00              a1 = sp + 0x98
 10711: 82 17 30                 a0 = u64 [sp + 0x30]
 10714: 0a 04                    ecalli 4 // 'info'
 10716: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10720: 33 08 08                 a1 = 0x8
 10723: 50 20 1e 01 1f 14        ra = 286, jump @983
      :                          @559 [@dyn 143]
 10729: 82 17 38                 a0 = u64 [sp + 0x38]
 10732: 7b 67 18                 u64 [s1 + 0x18] = a0
 10735: 82 18 40                 a1 = u64 [sp + 0x40]
 10738: 7b 68 20                 u64 [s1 + 0x20] = a1
 10741: 95 17 ff 07              a0 = sp + 0x7ff
 10745: 95 77 19 04              a0 = a0 + 0x419
 10749: 7b 67 28                 u64 [s1 + 0x28] = a0
 10752: 7b 68 30                 u64 [s1 + 0x30] = a1
 10755: 33 07 38 0e 01           a0 = 0x10e38
 10760: 7b 17 98 01              u64 [sp + 0x198] = a0
 10764: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10769: 49 21 b8 01              u64 [sp + 440] = 0
 10773: 95 17 ff 07              a0 = sp + 0x7ff
 10777: 95 77 b1 03              a0 = a0 + 0x3b1
 10781: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10785: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10790: 95 17 ff 07              a0 = sp + 0x7ff
 10794: 95 77 e1 03              a0 = a0 + 0x3e1
 10798: 95 18 98 01              a1 = sp + 0x198
 10802: 50 20 20 01 bd 03        ra = 288, jump @647
      :                          @560 [@dyn 144]
 10808: 82 65 50                 s0 = u64 [s1 + 0x50]
 10811: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10814: 95 17 ff 07              a0 = sp + 0x7ff
 10818: 95 77 99 03              a0 = a0 + 0x399
 10822: 82 76 48                 s1 = u64 [a0 + 0x48]
 10825: 33 07 02                 a0 = 0x2
 10828: 33 08                    a1 = 0
 10830: 33 09                    a2 = 0
 10832: 64 5a                    a3 = s0
 10834: 33 00 22 01              ra = 0x122
 10838: 0a 64                    ecalli 100 // 'log'
 10840: 01                       fallthrough
      :                          @561 [@dyn 145]
 10841: 82 17 48                 a0 = u64 [sp + 0x48]
 10844: c8 67 07                 a0 = a0 + s1
 10847: 53 27 00 f0 25           jump @567 if a0 <u 4294963200
      :                          @562
 10852: 33 07 20 00 03           a0 = 0x30020
 10857: 95 77 00 10              a0 = a0 + 0x1000
 10861: 01                       fallthrough
      :                          @563
 10862: 82 78                    a1 = u64 [a0]
 10864: c9 87 09                 a2 = a0 - a1
 10867: ab 59 11                 jump @567 if a2 != s0
      :                          @564
 10870: c9 68 09                 a2 = a1 - s1
 10873: 01                       fallthrough
      :                          @565
 10874: 82 7a                    a3 = u64 [a0]
 10876: ab 8a f2                 jump @563 if a3 != a1
      :                          @566
 10879: 7b 79                    u64 [a0] = a2
 10881: 0a                       ecalli 0 // 'gas'
 10882: 28 04                    jump @568
      :                          @567
 10884: 0a                       ecalli 0 // 'gas'
 10885: 01                       fallthrough
      :                          @568
 10886: 95 16 ff 07              s1 = sp + 0x7ff
 10890: 95 66 99 03              s1 = s1 + 0x399
 10894: 7b 67                    u64 [s1] = a0
 10896: 33 08 09                 a1 = 0x9
 10899: 50 20 24 01 6f 13        ra = 292, jump @983
      :                          @569 [@dyn 146]
 10905: 82 17 38                 a0 = u64 [sp + 0x38]
 10908: 7b 67 18                 u64 [s1 + 0x18] = a0
 10911: 82 17 40                 a0 = u64 [sp + 0x40]
 10914: 7b 67 20                 u64 [s1 + 0x20] = a0
 10917: 7b 66 28                 u64 [s1 + 0x28] = s1
 10920: 7b 67 30                 u64 [s1 + 0x30] = a0
 10923: 33 07 68 0e 01           a0 = 0x10e68
 10928: 7b 17 98 01              u64 [sp + 0x198] = a0
 10932: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10937: 49 21 b8 01              u64 [sp + 440] = 0
 10941: 95 17 ff 07              a0 = sp + 0x7ff
 10945: 95 77 b1 03              a0 = a0 + 0x3b1
 10949: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10953: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10958: 95 17 ff 07              a0 = sp + 0x7ff
 10962: 95 77 e1 03              a0 = a0 + 0x3e1
 10966: 95 18 98 01              a1 = sp + 0x198
 10970: 50 20 26 01 15 03        ra = 294, jump @647
      :                          @570 [@dyn 147]
 10976: 82 65 50                 s0 = u64 [s1 + 0x50]
 10979: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10982: 82 66 48                 s1 = u64 [s1 + 0x48]
 10985: 33 07 02                 a0 = 0x2
 10988: 33 08                    a1 = 0
 10990: 33 09                    a2 = 0
 10992: 64 5a                    a3 = s0
 10994: 33 00 28 01              ra = 0x128
 10998: 0a 64                    ecalli 100 // 'log'
 11000: 01                       fallthrough
      :                          @571 [@dyn 148]
 11001: 82 17 48                 a0 = u64 [sp + 0x48]
 11004: c8 67 07                 a0 = a0 + s1
 11007: 53 27 00 f0 25           jump @577 if a0 <u 4294963200
      :                          @572
 11012: 33 07 20 00 03           a0 = 0x30020
 11017: 95 77 00 10              a0 = a0 + 0x1000
 11021: 01                       fallthrough
      :                          @573
 11022: 82 78                    a1 = u64 [a0]
 11024: c9 87 09                 a2 = a0 - a1
 11027: ab 59 11                 jump @577 if a2 != s0
      :                          @574
 11030: c9 68 09                 a2 = a1 - s1
 11033: 01                       fallthrough
      :                          @575
 11034: 82 7a                    a3 = u64 [a0]
 11036: ab 8a f2                 jump @573 if a3 != a1
      :                          @576
 11039: 7b 79                    u64 [a0] = a2
 11041: 33 0b                    a4 = 0
 11043: 01                       fallthrough
      :                          @577
 11044: 49 21 b0 01              u64 [sp + 432] = 0
 11048: 49 21 a8 01              u64 [sp + 424] = 0
 11052: 49 21 a0 01              u64 [sp + 416] = 0
 11056: 49 21 98 01              u64 [sp + 408] = 0
 11060: 82 19 20                 a2 = u64 [sp + 0x20]
 11063: 82 1a 28                 a3 = u64 [sp + 0x28]
 11066: 55 19 21 79              jump @588 if a2 >=u 33
      :                          @578
 11070: 97 a6 20                 s1 = a3 << 0x20
 11073: 98 66 20                 s1 = s1 >> 0x20
 11076: 95 17 98 01              a0 = sp + 0x198
 11080: 95 15 98 01              s0 = sp + 0x198
 11084: 82 18 18                 a1 = u64 [sp + 0x18]
 11087: 50 20 2a 01 15 05        ra = 298, jump @697
      :                          @579 [@dyn 149]
 11093: 3a 08 00 00 03           a1 = u64 [0x30000]
 11098: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 11108: ca 76 07                 a0 = s1 * a0
 11111: ae 87 2c                 jump @584 if a0 >=u a1
      :                          @580
 11114: 82 18 28                 a1 = u64 [sp + 0x28]
 11117: 51 18 09 18              jump @582 if a1 == 9
      :                          @581
 11121: 0a 08                    ecalli 8 // 'checkpoint'
 11123: 33 0a 52 05 01           a3 = 0x10552
 11128: 33 07 02                 a0 = 0x2
 11131: 33 0b 11                 a4 = 0x11
 11134: 33 08                    a1 = 0
 11136: 33 09                    a2 = 0
 11138: 0a 64                    ecalli 100 // 'log'
 11140: 01                       fallthrough
      :                          @582
 11141: 95 67 2a                 a0 = s1 + 0x2a
 11144: 33 08 07                 a1 = 0x7
 11147: 50 20 2c 01 77 12        ra = 300, jump @983
      :                          @583 [@dyn 150]
 11153: 32 07                    jump [a0]
      :                          @584
 11155: 95 17 98 01              a0 = sp + 0x198
 11159: 0a 10                    ecalli 16 // 'oyield'
 11161: 33 0a e1 03 01           a3 = 0x103e1
 11166: 33 07 02                 a0 = 0x2
 11169: 33 0b 10                 a4 = 0x10
 11172: 33 08                    a1 = 0
 11174: 33 09                    a2 = 0
 11176: 0a 64                    ecalli 100 // 'log'
 11178: 33 08 20                 a1 = 0x20
 11181: 28 0b e4                 jump @230
      :                          @585
 11184: 00                       trap
      :                          @586
 11185: 00                       trap
      :                          @587
 11186: 00                       trap
      :                          @588
 11187: 00                       trap
      :                          @589
 11188: 00                       trap
      :                          @590 [export #2: 'on_transfer']
 11189: 33 07 00 00 01           a0 = 0x10000
 11194: 33 08                    a1 = 0
 11196: 32 00                    ret
      :                          @591
 11198: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 11201: 7b 10 40                 u64 [sp + 0x40] = ra
 11204: 7b 15 38                 u64 [sp + 0x38] = s0
 11207: 7b 16 30                 u64 [sp + 0x30] = s1
 11210: c8 89 09                 a2 = a2 + a1
 11213: ac 89 53                 jump @599 if a2 <u a1
      :                          @592
 11216: 64 75                    s0 = a0
 11218: 82 77                    a0 = u64 [a0]
 11220: 97 78 01                 a1 = a0 << 0x1
 11223: 33 0a 08                 a3 = 0x8
 11226: e4 a9 09                 a2 = maxu(a2, a3)
 11229: e4 98 06                 s1 = maxu(a1, a2)
 11232: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 11235: 98 88 3f                 a1 = a1 >> 0x3f
 11238: 51 07 12                 jump @594 if a0 == 0
      :                          @593
 11241: 82 59 08                 a2 = u64 [s0 + 0x8]
 11244: 7b 19 18                 u64 [sp + 0x18] = a2
 11247: 49 11 20 01              u64 [sp + 32] = 0x1
 11251: 7b 17 28                 u64 [sp + 0x28] = a0
 11254: 28 06                    jump @595
      :                          @594
 11256: 49 11 20                 u64 [sp + 32] = 0
 11259: 01                       fallthrough
      :                          @595
 11260: 64 17                    a0 = sp
 11262: 95 1a 18                 a3 = sp + 0x18
 11265: 64 69                    a2 = s1
 11267: 50 20 2e 01 33           ra = 302, jump @603
      :                          @596 [@dyn 151]
 11272: 82 18                    a1 = u64 [sp]
 11274: 82 17 08                 a0 = u64 [sp + 0x8]
 11277: 51 08 14                 jump @600 if a1 == 0
      :                          @597
 11280: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 11290: aa 87 0d                 jump @601 if a0 == a1
      :                          @598
 11293: 52 07 18                 jump @602 if a0 != 0
      :                          @599
 11296: 00                       trap
      :                          @600
 11297: 7b 57 08                 u64 [s0 + 0x8] = a0
 11300: 7b 56                    u64 [s0] = s1
 11302: 01                       fallthrough
      :                          @601
 11303: 82 10 40                 ra = u64 [sp + 0x40]
 11306: 82 15 38                 s0 = u64 [sp + 0x38]
 11309: 82 16 30                 s1 = u64 [sp + 0x30]
 11312: 95 11 48                 sp = sp + 0x48
 11315: 32 00                    ret
      :                          @602
 11317: 00                       trap
      :                          @603
 11318: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11321: 7b 10 30                 u64 [sp + 0x30] = ra
 11324: 7b 15 28                 u64 [sp + 0x28] = s0
 11327: 7b 16 20                 u64 [sp + 0x20] = s1
 11330: 64 96                    s1 = a2
 11332: 64 73                    t1 = a0
 11334: 51 08 6f                 jump @613 if a1 == 0
      :                          @604
 11337: 82 a7 08                 a0 = u64 [a3 + 0x8]
 11340: 51 07 72                 jump @614 if a0 == 0
      :                          @605
 11343: 82 a9 10                 a2 = u64 [a3 + 0x10]
 11346: 51 09 9f 00              jump @621 if a2 == 0
      :                          @606
 11350: 82 a8                    a1 = u64 [a3]
 11352: 33 02 00 10              t0 = 0x1000
 11356: 33 04 20 00 03           t2 = 0x30020
 11361: c8 24 07                 a0 = t2 + t0
 11364: 01                       fallthrough
      :                          @607
 11365: 82 7a                    a3 = u64 [a0]
 11367: c8 6a 05                 s0 = a3 + s1
 11370: ac a5 c3 00              jump @627 if s0 <u a3
      :                          @608
 11374: 95 5b 01                 a4 = s0 + 0x1
 11377: 88 bc 01                 a5 = a4 <u 0x1
 11380: d8 b2 0b                 a4 = t0 <u a4
 11383: d4 cb 0b                 a4 = a4 | a5
 11386: 52 0b b3 00              jump @627 if a4 != 0
      :                          @609
 11390: 82 7b                    a4 = u64 [a0]
 11392: ab ab e5                 jump @607 if a4 != a3
      :                          @610
 11395: 7b 75                    u64 [a0] = s0
 11397: 33 0c                    a5 = 0
 11399: 7b 13 18                 u64 [sp + 0x18] = t1
 11402: c9 54 07                 a0 = t2 - s0
 11405: 95 77 00 10              a0 = a0 + 0x1000
 11409: 7b 17 10                 u64 [sp + 0x10] = a0
 11412: 7b 18 08                 u64 [sp + 0x8] = a1
 11415: 64 95                    s0 = a2
 11417: 7b 14                    u64 [sp] = t2
 11419: 50 20 30 01 c9 03        ra = 304, jump @697
      :                          @611 [@dyn 152]
 11425: 54 25 00 10 94 00        jump @628 if s0 <=u 4096
      :                          @612
 11431: 82 13 18                 t1 = u64 [sp + 0x18]
 11434: 82 18 10                 a1 = u64 [sp + 0x10]
 11437: 33 07                    a0 = 0
 11439: 7b 38 08                 u64 [t1 + 0x8] = a1
 11442: 28 b1 00                 jump @634
      :                          @613
 11445: 49 13 08                 u64 [t1 + 8] = 0
 11448: 33 07 01                 a0 = 0x1
 11451: 28 a8 00                 jump @634
      :                          @614
 11454: 33 07 00 10              a0 = 0x1000
 11458: 33 02 20 00 03           t0 = 0x30020
 11463: c8 72 09                 a2 = t0 + a0
 11466: 01                       fallthrough
      :                          @615
 11467: 82 9b                    a4 = u64 [a2]
 11469: c8 6b 0a                 a3 = a4 + s1
 11472: ac ba 5d                 jump @627 if a3 <u a4
      :                          @616
 11475: 95 ac 01                 a5 = a3 + 0x1
 11478: 88 c8 01                 a1 = a5 <u 0x1
 11481: d8 c7 0c                 a5 = a0 <u a5
 11484: d4 c8 08                 a1 = a1 | a5
 11487: 52 08 4e                 jump @627 if a1 != 0
      :                          @617
 11490: 82 98                    a1 = u64 [a2]
 11492: ab b8 e7                 jump @615 if a1 != a4
      :                          @618
 11495: 7b 9a                    u64 [a2] = a3
 11497: 33 0c                    a5 = 0
 11499: 01                       fallthrough
      :                          @619
 11500: ab b8 df                 jump @615 if a1 != a4
      :                          @620
 11503: 28 30                    jump @626
      :                          @621
 11505: 33 07 00 10              a0 = 0x1000
 11509: 33 02 20 00 03           t0 = 0x30020
 11514: c8 72 09                 a2 = t0 + a0
 11517: 01                       fallthrough
      :                          @622
 11518: 82 9b                    a4 = u64 [a2]
 11520: c8 6b 0a                 a3 = a4 + s1
 11523: ac ba 2a                 jump @627 if a3 <u a4
      :                          @623
 11526: 95 ac 01                 a5 = a3 + 0x1
 11529: 88 c8 01                 a1 = a5 <u 0x1
 11532: d8 c7 0c                 a5 = a0 <u a5
 11535: d4 c8 08                 a1 = a1 | a5
 11538: 52 08 1b                 jump @627 if a1 != 0
      :                          @624
 11541: 82 98                    a1 = u64 [a2]
 11543: ab b8 e7                 jump @622 if a1 != a4
      :                          @625
 11546: 7b 9a                    u64 [a2] = a3
 11548: 33 0c                    a5 = 0
 11550: 01                       fallthrough
      :                          @626
 11551: c9 a2 07                 a0 = t0 - a3
 11554: 95 78 00 10              a1 = a0 + 0x1000
 11558: 33 07                    a0 = 0
 11560: 7b 38 08                 u64 [t1 + 0x8] = a1
 11563: 28 38                    jump @634
      :                          @627
 11565: 33 07 01                 a0 = 0x1
 11568: 7b 37 08                 u64 [t1 + 0x8] = a0
 11571: 28 30                    jump @634
      :                          @628
 11573: 64 5c                    a5 = s0
 11575: 82 18                    a1 = u64 [sp]
 11577: 95 87 00 10              a0 = a1 + 0x1000
 11581: 82 13 18                 t1 = u64 [sp + 0x18]
 11584: 82 15 08                 s0 = u64 [sp + 0x8]
 11587: 01                       fallthrough
      :                          @629
 11588: 82 78                    a1 = u64 [a0]
 11590: c9 87 09                 a2 = a0 - a1
 11593: ab 59 11                 jump @633 if a2 != s0
      :                          @630
 11596: c9 c8 09                 a2 = a1 - a5
 11599: 01                       fallthrough
      :                          @631
 11600: 82 7a                    a3 = u64 [a0]
 11602: ab 8a f2                 jump @629 if a3 != a1
      :                          @632
 11605: 7b 79                    u64 [a0] = a2
 11607: 33 0b                    a4 = 0
 11609: 01                       fallthrough
      :                          @633
 11610: 82 18 10                 a1 = u64 [sp + 0x10]
 11613: 33 07                    a0 = 0
 11615: 7b 38 08                 u64 [t1 + 0x8] = a1
 11618: 01                       fallthrough
      :                          @634
 11619: 7b 36 10                 u64 [t1 + 0x10] = s1
 11622: 7b 37                    u64 [t1] = a0
 11624: 82 10 30                 ra = u64 [sp + 0x30]
 11627: 82 15 28                 s0 = u64 [sp + 0x28]
 11630: 82 16 20                 s1 = u64 [sp + 0x20]
 11633: 95 11 38                 sp = sp + 0x38
 11636: 32 00                    ret
      :                          @635
 11638: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 11641: 7b 10 40                 u64 [sp + 0x40] = ra
 11644: 7b 15 38                 u64 [sp + 0x38] = s0
 11647: 7b 16 30                 u64 [sp + 0x30] = s1
 11650: 95 88 01                 a1 = a1 + 0x1
 11653: 51 08 54                 jump @643 if a1 == 0
      :                          @636
 11656: 64 75                    s0 = a0
 11658: 82 77                    a0 = u64 [a0]
 11660: 97 79 01                 a2 = a0 << 0x1
 11663: 33 0a 08                 a3 = 0x8
 11666: e4 a8 08                 a1 = maxu(a1, a3)
 11669: e4 89 06                 s1 = maxu(a2, a1)
 11672: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 11675: 98 88 3f                 a1 = a1 >> 0x3f
 11678: 51 07 12                 jump @638 if a0 == 0
      :                          @637
 11681: 82 59 08                 a2 = u64 [s0 + 0x8]
 11684: 7b 19 18                 u64 [sp + 0x18] = a2
 11687: 49 11 20 01              u64 [sp + 32] = 0x1
 11691: 7b 17 28                 u64 [sp + 0x28] = a0
 11694: 28 06                    jump @639
      :                          @638
 11696: 49 11 20                 u64 [sp + 32] = 0
 11699: 01                       fallthrough
      :                          @639
 11700: 64 17                    a0 = sp
 11702: 95 1a 18                 a3 = sp + 0x18
 11705: 64 69                    a2 = s1
 11707: 50 20 32 01 7b fe        ra = 306, jump @603
      :                          @640 [@dyn 153]
 11713: 82 18                    a1 = u64 [sp]
 11715: 82 17 08                 a0 = u64 [sp + 0x8]
 11718: 51 08 14                 jump @644 if a1 == 0
      :                          @641
 11721: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 11731: aa 87 0d                 jump @645 if a0 == a1
      :                          @642
 11734: 52 07 18                 jump @646 if a0 != 0
      :                          @643
 11737: 00                       trap
      :                          @644
 11738: 7b 57 08                 u64 [s0 + 0x8] = a0
 11741: 7b 56                    u64 [s0] = s1
 11743: 01                       fallthrough
      :                          @645
 11744: 82 10 40                 ra = u64 [sp + 0x40]
 11747: 82 15 38                 s0 = u64 [sp + 0x38]
 11750: 82 16 30                 s1 = u64 [sp + 0x30]
 11753: 95 11 48                 sp = sp + 0x48
 11756: 32 00                    ret
      :                          @646
 11758: 00                       trap
      :                          @647
 11759: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11762: 7b 10 30                 u64 [sp + 0x30] = ra
 11765: 7b 15 28                 u64 [sp + 0x28] = s0
 11768: 7b 16 20                 u64 [sp + 0x20] = s1
 11771: 64 89                    a2 = a1
 11773: 82 8a 08                 a3 = u64 [a1 + 0x8]
 11776: 64 75                    s0 = a0
 11778: 51 0a 35                 jump @652 if a3 == 0
      :                          @648
 11781: 82 98                    a1 = u64 [a2]
 11783: 33 07                    a0 = 0
 11785: 95 8b 08                 a4 = a1 + 0x8
 11788: 01                       fallthrough
      :                          @649
 11789: 82 bc                    a5 = u64 [a4]
 11791: c8 c7 07                 a0 = a0 + a5
 11794: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 11797: 95 bb 10                 a4 = a4 + 0x10
 11800: 52 0a f5                 jump @649 if a3 != 0
      :                          @650
 11803: 82 9a 18                 a3 = u64 [a2 + 0x18]
 11806: 51 0a 24                 jump @654 if a3 == 0
      :                          @651
 11809: 82 88 08                 a1 = u64 [a1 + 0x8]
 11812: 8e 88                    a1 = a1 >u 0
 11814: 88 7a 10                 a3 = a0 <u 0x10
 11817: 85 aa 01                 a3 = a3 ^ 0x1
 11820: d4 a8 08                 a1 = a1 | a3
 11823: 89 7a                    a3 = a0 <s 0
 11825: e0 a8 08                 a1 = a1 & ~a3
 11828: 52 08 0a                 jump @653 if a1 != 0
      :                          @652
 11831: 33 07                    a0 = 0
 11833: 33 08 01                 a1 = 0x1
 11836: 28 48                    jump @662
      :                          @653
 11838: 97 77 01                 a0 = a0 << 0x1
 11841: 01                       fallthrough
      :                          @654
 11842: 51 07 3e                 jump @661 if a0 == 0
      :                          @655
 11845: 57 07 77                 jump @667 if a0 <s 0
      :                          @656
 11848: 64 53                    t1 = s0
 11850: 33 08 00 10              a1 = 0x1000
 11854: 33 02 20 00 03           t0 = 0x30020
 11859: c8 82 0b                 a4 = t0 + a1
 11862: 01                       fallthrough
      :                          @657
 11863: 82 bc                    a5 = u64 [a4]
 11865: c8 7c 0a                 a3 = a5 + a0
 11868: ac ca 5e                 jump @665 if a3 <u a5
      :                          @658
 11871: 95 a5 01                 s0 = a3 + 0x1
 11874: 88 56 01                 s1 = s0 <u 0x1
 11877: d8 58 05                 s0 = a1 <u s0
 11880: d4 65 05                 s0 = s0 | s1
 11883: 52 05 4f                 jump @665 if s0 != 0
      :                          @659
 11886: 82 b6                    s1 = u64 [a4]
 11888: ab c6 e7                 jump @657 if s1 != a5
      :                          @660
 11891: 7b ba                    u64 [a4] = a3
 11893: c9 a2 08                 a1 = t0 - a3
 11896: 95 88 00 10              a1 = a1 + 0x1000
 11900: 64 35                    s0 = t1
 11902: 28 06                    jump @662
      :                          @661
 11904: 33 08 01                 a1 = 0x1
 11907: 01                       fallthrough
      :                          @662
 11908: 7b 17                    u64 [sp] = a0
 11910: 7b 18 08                 u64 [sp + 0x8] = a1
 11913: 49 11 10                 u64 [sp + 16] = 0
 11916: 33 08 98 0e 01           a1 = 0x10e98
 11921: 64 17                    a0 = sp
 11923: 50 20 34 01 6e 0a        ra = 308, jump @867
      :                          @663 [@dyn 154]
 11929: 52 07 22                 jump @666 if a0 != 0
      :                          @664
 11932: 82 17 10                 a0 = u64 [sp + 0x10]
 11935: 82 18 08                 a1 = u64 [sp + 0x8]
 11938: 82 19                    a2 = u64 [sp]
 11940: 7b 57 10                 u64 [s0 + 0x10] = a0
 11943: 7b 58 08                 u64 [s0 + 0x8] = a1
 11946: 7b 59                    u64 [s0] = a2
 11948: 82 10 30                 ra = u64 [sp + 0x30]
 11951: 82 15 28                 s0 = u64 [sp + 0x28]
 11954: 82 16 20                 s1 = u64 [sp + 0x20]
 11957: 95 11 38                 sp = sp + 0x38
 11960: 32 00                    ret
      :                          @665
 11962: 00                       trap
      :                          @666
 11963: 00                       trap
      :                          @667
 11964: 00                       trap
      :                          @668 [@dyn 155]
 11965: 82 72                    t0 = u64 [a0]
 11967: 33 09 00 f0              a2 = 0xfffffffffffff000
 11971: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 11975: ac 9a 27                 jump @674 if a3 <u a2
      :                          @669
 11978: 82 77 08                 a0 = u64 [a0 + 0x8]
 11981: 33 09 20 00 03           a2 = 0x30020
 11986: 95 99 00 10              a2 = a2 + 0x1000
 11990: 01                       fallthrough
      :                          @670
 11991: 82 9a                    a3 = u64 [a2]
 11993: c9 a9 0b                 a4 = a2 - a3
 11996: ab 7b 12                 jump @674 if a4 != a0
      :                          @671
 11999: c9 2a 0b                 a4 = a3 - t0
 12002: 01                       fallthrough
      :                          @672
 12003: 82 9c                    a5 = u64 [a2]
 12005: ab ac f2                 jump @670 if a5 != a3
      :                          @673
 12008: 7b 9b                    u64 [a2] = a4
 12010: 33 08                    a1 = 0
 12012: 32 00                    ret
      :                          @674
 12014: 32 00                    ret
      :                          @675 [@dyn 156]
 12016: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 12019: 7b 10 18                 u64 [sp + 0x18] = ra
 12022: 7b 15 10                 u64 [sp + 0x10] = s0
 12025: 7b 16 08                 u64 [sp + 0x8] = s1
 12028: 64 75                    s0 = a0
 12030: 82 7a 10                 a3 = u64 [a0 + 0x10]
 12033: 82 77                    a0 = u64 [a0]
 12035: c9 a7 07                 a0 = a0 - a3
 12038: 64 96                    s1 = a2
 12040: ac 97 2b                 jump @678 if a0 <u a2
      :                          @676
 12043: 7b 1a                    u64 [sp] = a3
 12045: 82 57 08                 a0 = u64 [s0 + 0x8]
 12048: c8 a7 07                 a0 = a0 + a3
 12051: 64 69                    a2 = s1
 12053: 50 20 3a 01 4f 01        ra = 314, jump @697
      :                          @677 [@dyn 157]
 12059: 82 17                    a0 = u64 [sp]
 12061: c8 76 06                 s1 = s1 + a0
 12064: 7b 56 10                 u64 [s0 + 0x10] = s1
 12067: 33 07                    a0 = 0
 12069: 82 10 18                 ra = u64 [sp + 0x18]
 12072: 82 15 10                 s0 = u64 [sp + 0x10]
 12075: 82 16 08                 s1 = u64 [sp + 0x8]
 12078: 95 11 20                 sp = sp + 0x20
 12081: 32 00                    ret
      :                          @678
 12083: 64 57                    a0 = s0
 12085: 7b 18                    u64 [sp] = a1
 12087: 64 a8                    a1 = a3
 12089: 64 69                    a2 = s1
 12091: 50 20 3c 01 83 fc        ra = 316, jump @591
      :                          @679 [@dyn 158]
 12097: 82 18                    a1 = u64 [sp]
 12099: 82 5a 10                 a3 = u64 [s0 + 0x10]
 12102: 28 c5                    jump @676
      :                          @680 [@dyn 159]
 12104: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12107: 7b 10 20                 u64 [sp + 0x20] = ra
 12110: 7b 15 18                 u64 [sp + 0x18] = s0
 12113: 7b 16 10                 u64 [sp + 0x10] = s1
 12116: 64 86                    s1 = a1
 12118: 83 88                    i32 a1 = a1 + 0
 12120: 33 09 80 00              a2 = 0x80
 12124: 64 7a                    a3 = a0
 12126: ae 98 2c                 jump @685 if a1 >=u a2
      :                          @681
 12129: 82 a8 10                 a1 = u64 [a3 + 0x10]
 12132: 82 a7                    a0 = u64 [a3]
 12134: ab 78 13                 jump @684 if a1 != a0
      :                          @682
 12137: 64 a7                    a0 = a3
 12139: 64 a5                    s0 = a3
 12141: 50 20 40 01 09 fe        ra = 320, jump @635
      :                          @683 [@dyn 160]
 12147: 64 5a                    a3 = s0
 12149: 82 58 10                 a1 = u64 [s0 + 0x10]
 12152: 01                       fallthrough
      :                          @684
 12153: 82 a7 08                 a0 = u64 [a3 + 0x8]
 12156: c8 87 07                 a0 = a0 + a1
 12159: 78 76                    u8 [a0] = s1
 12161: 95 88 01                 a1 = a1 + 0x1
 12164: 7b a8 10                 u64 [a3 + 0x10] = a1
 12167: 28 ac 00                 jump @693
      :                          @685
 12170: 8b 67 0b                 i32 a0 = s1 >> 0xb
 12173: 48 11 0c                 u32 [sp + 12] = 0
 12176: 52 07 1c                 jump @687 if a0 != 0
      :                          @686
 12179: 98 67 06                 a0 = s1 >> 0x6
 12182: 86 77 c0 00              a0 = a0 | 0xc0
 12186: 78 17 0c                 u8 [sp + 0xc] = a0
 12189: 84 67 3f                 a0 = s1 & 0x3f
 12192: 86 77 80 00              a0 = a0 | 0x80
 12196: 78 17 0d                 u8 [sp + 0xd] = a0
 12199: 33 06 02                 s1 = 0x2
 12202: 28 63                    jump @690
      :                          @687
 12204: 8b 67 10                 i32 a0 = s1 >> 0x10
 12207: 52 07 29                 jump @689 if a0 != 0
      :                          @688
 12210: 98 67 0c                 a0 = s1 >> 0xc
 12213: 86 77 e0 00              a0 = a0 | 0xe0
 12217: 78 17 0c                 u8 [sp + 0xc] = a0
 12220: 97 67 34                 a0 = s1 << 0x34
 12223: 98 77 3a                 a0 = a0 >> 0x3a
 12226: 95 77 80 00              a0 = a0 + 0x80
 12230: 78 17 0d                 u8 [sp + 0xd] = a0
 12233: 84 67 3f                 a0 = s1 & 0x3f
 12236: 86 77 80 00              a0 = a0 | 0x80
 12240: 78 17 0e                 u8 [sp + 0xe] = a0
 12243: 33 06 03                 s1 = 0x3
 12246: 28 37                    jump @690
      :                          @689
 12248: 97 67 2b                 a0 = s1 << 0x2b
 12251: 98 77 3d                 a0 = a0 >> 0x3d
 12254: 95 77 f0 00              a0 = a0 + 0xf0
 12258: 78 17 0c                 u8 [sp + 0xc] = a0
 12261: 97 67 2e                 a0 = s1 << 0x2e
 12264: 98 77 3a                 a0 = a0 >> 0x3a
 12267: 95 77 80 00              a0 = a0 + 0x80
 12271: 78 17 0d                 u8 [sp + 0xd] = a0
 12274: 97 67 34                 a0 = s1 << 0x34
 12277: 98 77 3a                 a0 = a0 >> 0x3a
 12280: 95 77 80 00              a0 = a0 + 0x80
 12284: 78 17 0e                 u8 [sp + 0xe] = a0
 12287: 84 67 3f                 a0 = s1 & 0x3f
 12290: 86 77 80 00              a0 = a0 | 0x80
 12294: 78 17 0f                 u8 [sp + 0xf] = a0
 12297: 33 06 04                 s1 = 0x4
 12300: 01                       fallthrough
      :                          @690
 12301: 82 a5 10                 s0 = u64 [a3 + 0x10]
 12304: 82 a7                    a0 = u64 [a3]
 12306: c9 57 07                 a0 = a0 - s0
 12309: ac 67 2e                 jump @694 if a0 <u s1
      :                          @691
 12312: 7b 1a                    u64 [sp] = a3
 12314: 82 a7 08                 a0 = u64 [a3 + 0x8]
 12317: c8 57 07                 a0 = a0 + s0
 12320: 95 18 0c                 a1 = sp + 0xc
 12323: 64 69                    a2 = s1
 12325: 50 20 42 01 3f           ra = 322, jump @697
      :                          @692 [@dyn 161]
 12330: c8 56 06                 s1 = s1 + s0
 12333: 82 17                    a0 = u64 [sp]
 12335: 7b 76 10                 u64 [a0 + 0x10] = s1
 12338: 01                       fallthrough
      :                          @693
 12339: 33 07                    a0 = 0
 12341: 82 10 20                 ra = u64 [sp + 0x20]
 12344: 82 15 18                 s0 = u64 [sp + 0x18]
 12347: 82 16 10                 s1 = u64 [sp + 0x10]
 12350: 95 11 28                 sp = sp + 0x28
 12353: 32 00                    ret
      :                          @694
 12355: 64 a7                    a0 = a3
 12357: 64 58                    a1 = s0
 12359: 64 69                    a2 = s1
 12361: 64 a5                    s0 = a3
 12363: 50 20 44 01 73 fb        ra = 324, jump @591
      :                          @695 [@dyn 162]
 12369: 64 5a                    a3 = s0
 12371: 82 55 10                 s0 = u64 [s0 + 0x10]
 12374: 28 c2                    jump @691
      :                          @696 [@dyn 163]
 12376: 64 8a                    a3 = a1
 12378: 33 08 98 0e 01           a1 = 0x10e98
 12383: 64 a9                    a2 = a3
 12385: 28 a0 08                 jump @867
      :                          @697
 12388: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 12391: 7b 10 18                 u64 [sp + 0x18] = ra
 12394: 7b 15 10                 u64 [sp + 0x10] = s0
 12397: 7b 16 08                 u64 [sp + 0x8] = s1
 12400: 53 19 10 64              jump @706 if a2 <u 16
      :                          @698
 12404: 8d 7a                    i32 a3 = -a0
 12406: 84 a2 07                 t0 = a3 & 0x7
 12409: c8 27 0b                 a4 = a0 + t0
 12412: 51 02 15                 jump @701 if t0 == 0
      :                          @699
 12415: 64 8c                    a5 = a1
 12417: 64 75                    s0 = a0
 12419: 01                       fallthrough
      :                          @700
 12420: 7c ca                    a3 = u8 [a5]
 12422: 78 5a                    u8 [s0] = a3
 12424: 95 55 01                 s0 = s0 + 0x1
 12427: 95 cc 01                 a5 = a5 + 0x1
 12430: ac b5 f6                 jump @700 if s0 <u a4
      :                          @701
 12433: c8 28 03                 t1 = a1 + t0
 12436: c9 29 02                 t0 = a2 - t0
 12439: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 12442: 84 38 07                 a1 = t1 & 0x7
 12445: c8 4b 0a                 a3 = a4 + t2
 12448: 51 08 3b                 jump @708 if a1 == 0
      :                          @702
 12451: 58 04 4b                 jump @711 if t2 <=s 0
      :                          @703
 12454: 97 38 03                 a1 = t1 << 0x3
 12457: 84 80 38                 ra = a1 & 0x38
 12460: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 12463: 82 c5                    s0 = u64 [a5]
 12465: 8d 88                    i32 a1 = -a1
 12467: 84 88 38                 a1 = a1 & 0x38
 12470: 95 cc 08                 a5 = a5 + 0x8
 12473: 01                       fallthrough
      :                          @704
 12474: 82 c6                    s1 = u64 [a5]
 12476: d0 05 05                 s0 = s0 >> ra
 12479: cf 86 09                 a2 = s1 << a1
 12482: d4 59 09                 a2 = a2 | s0
 12485: 7b b9                    u64 [a4] = a2
 12487: 95 bb 08                 a4 = a4 + 0x8
 12490: 95 cc 08                 a5 = a5 + 0x8
 12493: 64 65                    s0 = s1
 12495: ac ab eb                 jump @704 if a4 <u a3
      :                          @705
 12498: 28 1c                    jump @711
      :                          @706
 12500: 64 7a                    a3 = a0
 12502: 52 09 21                 jump @712 if a2 != 0
      :                          @707
 12505: 28 2f                    jump @714
      :                          @708
 12507: 58 04 13                 jump @711 if t2 <=s 0
      :                          @709
 12510: 64 38                    a1 = t1
 12512: 01                       fallthrough
      :                          @710
 12513: 82 89                    a2 = u64 [a1]
 12515: 7b b9                    u64 [a4] = a2
 12517: 95 bb 08                 a4 = a4 + 0x8
 12520: 95 88 08                 a1 = a1 + 0x8
 12523: ac ab f6                 jump @710 if a4 <u a3
      :                          @711
 12526: c8 43 08                 a1 = t1 + t2
 12529: 84 29 07                 a2 = t0 & 0x7
 12532: 51 09 14                 jump @714 if a2 == 0
      :                          @712
 12535: c8 a9 09                 a2 = a2 + a3
 12538: 01                       fallthrough
      :                          @713
 12539: 7c 8b                    a4 = u8 [a1]
 12541: 78 ab                    u8 [a3] = a4
 12543: 95 aa 01                 a3 = a3 + 0x1
 12546: 95 88 01                 a1 = a1 + 0x1
 12549: ac 9a f6                 jump @713 if a3 <u a2
      :                          @714
 12552: 82 10 18                 ra = u64 [sp + 0x18]
 12555: 82 15 10                 s0 = u64 [sp + 0x10]
 12558: 82 16 08                 s1 = u64 [sp + 0x8]
 12561: 95 11 20                 sp = sp + 0x20
 12564: 32 00                    ret
      :                          @715
 12566: 53 19 10 48              jump @724 if a2 <u 16
      :                          @716
 12570: 8d 7a                    i32 a3 = -a0
 12572: 84 aa 07                 a3 = a3 & 0x7
 12575: c8 a7 0b                 a4 = a0 + a3
 12578: 51 0a 0e                 jump @719 if a3 == 0
      :                          @717
 12581: 64 7c                    a5 = a0
 12583: 01                       fallthrough
      :                          @718
 12584: 78 c8                    u8 [a5] = a1
 12586: 95 cc 01                 a5 = a5 + 0x1
 12589: ac bc fb                 jump @718 if a5 <u a4
      :                          @719
 12592: c9 a9 03                 t1 = a2 - a3
 12595: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 12598: c8 cb 0a                 a3 = a4 + a5
 12601: 58 0c 1d                 jump @722 if a5 <=s 0
      :                          @720
 12604: 84 82 ff 00              t0 = a1 & 0xff
 12608: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 12618: ca 92 0c                 a5 = t0 * a2
 12621: 01                       fallthrough
      :                          @721
 12622: 7b bc                    u64 [a4] = a5
 12624: 95 bb 08                 a4 = a4 + 0x8
 12627: ac ab fb                 jump @721 if a4 <u a3
      :                          @722
 12630: 84 39 07                 a2 = t1 & 0x7
 12633: 52 09 0a                 jump @725 if a2 != 0
      :                          @723
 12636: 28 13                    jump @727
      :                          @724
 12638: 64 7a                    a3 = a0
 12640: 51 09 0f                 jump @727 if a2 == 0
      :                          @725
 12643: c8 a9 09                 a2 = a2 + a3
 12646: 01                       fallthrough
      :                          @726
 12647: 78 a8                    u8 [a3] = a1
 12649: 95 aa 01                 a3 = a3 + 0x1
 12652: ac 9a fb                 jump @726 if a3 <u a2
      :                          @727
 12655: 32 00                    ret
      :                          @728 [@dyn 164]
 12657: 82 77                    a0 = u64 [a0]
 12659: 01                       fallthrough
      :                          @729
 12660: 28                       jump @729
      :                          @730
 12661: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 12664: 7b 10 58                 u64 [sp + 0x58] = ra
 12667: 7b 15 50                 u64 [sp + 0x50] = s0
 12670: 7b 16 48                 u64 [sp + 0x48] = s1
 12673: 7b 19 08                 u64 [sp + 0x8] = a2
 12676: 7b 18                    u64 [sp] = a1
 12678: 98 7a 04                 a3 = a0 >> 0x4
 12681: 33 09 27                 a2 = 0x27
 12684: 33 0b 6f 05 01           a4 = 0x1056f
 12689: 53 2a 71 02 7b           jump @733 if a3 <u 625
      :                          @731
 12694: 33 09 27                 a2 = 0x27
 12697: 95 1c 46                 a5 = sp + 0x46
 12700: 3a 08 08 00 03           a1 = u64 [0x30008]
 12705: 7b 18 18                 u64 [sp + 0x18] = a1
 12708: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
 12714: 33 03 7b 14              t1 = 0x147b
 12718: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
 12724: 01                       fallthrough
      :                          @732
 12725: 64 70                    ra = a0
 12727: 82 17 18                 a0 = u64 [sp + 0x18]
 12730: d6 70 07                 a0 = ra mulhu a0
 12733: 98 77 0b                 a0 = a0 >> 0xb
 12736: 82 18 10                 a1 = u64 [sp + 0x10]
 12739: c0 87 02                 i32 t0 = a0 * a1
 12742: c8 02 05                 s0 = t0 + ra
 12745: 97 52 30                 t0 = s0 << 0x30
 12748: 98 28 32                 a1 = t0 >> 0x32
 12751: ca 38 08                 a1 = a1 * t1
 12754: 98 8a 11                 a3 = a1 >> 0x11
 12757: 98 88 10                 a1 = a1 >> 0x10
 12760: 84 88 fe 07              a1 = a1 & 0x7fe
 12764: 96 aa 9c                 a3 = a3 * 0xffffffffffffff9c
 12767: c8 5a 0a                 a3 = a3 + s0
 12770: 97 aa 31                 a3 = a3 << 0x31
 12773: 98 aa 30                 a3 = a3 >> 0x30
 12776: c8 b8 08                 a1 = a1 + a4
 12779: 7c 85                    s0 = u8 [a1]
 12781: 7c 88 01                 a1 = u8 [a1 + 0x1]
 12784: c8 ba 0a                 a3 = a3 + a4
 12787: 7c a6 01                 s1 = u8 [a3 + 0x1]
 12790: 7c aa                    a3 = u8 [a3]
 12792: 78 c8 ff                 u8 [a5 + 0xffffffffffffffff] = a1
 12795: 78 c5 fe                 u8 [a5 + 0xfffffffffffffffe] = s0
 12798: 78 c6 01                 u8 [a5 + 0x1] = s1
 12801: 78 ca                    u8 [a5] = a3
 12803: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 12806: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
 12809: ac 04 ac                 jump @732 if t2 <u ra
      :                          @733
 12812: 54 17 63 36              jump @735 if a0 <=u 99
      :                          @734
 12816: 97 78 30                 a1 = a0 << 0x30
 12819: 98 88 32                 a1 = a1 >> 0x32
 12822: 96 88 7b 14              a1 = a1 * 0x147b
 12826: 98 88 11                 a1 = a1 >> 0x11
 12829: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
 12832: c8 a7 07                 a0 = a0 + a3
 12835: 97 77 31                 a0 = a0 << 0x31
 12838: 98 77 30                 a0 = a0 >> 0x30
 12841: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 12844: c8 b7 07                 a0 = a0 + a4
 12847: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 12850: 7c 77                    a0 = u8 [a0]
 12852: 95 1c 21                 a5 = sp + 0x21
 12855: c8 9c 0c                 a5 = a5 + a2
 12858: 78 ca 01                 u8 [a5 + 0x1] = a3
 12861: 78 c7                    u8 [a5] = a0
 12863: 64 87                    a0 = a1
 12865: 01                       fallthrough
      :                          @735
 12866: 55 17 0a 14              jump @737 if a0 >=u 10
      :                          @736
 12870: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 12873: 95 18 21                 a1 = sp + 0x21
 12876: c8 98 08                 a1 = a1 + a2
 12879: 83 77 30                 i32 a0 = a0 + 0x30
 12882: 78 87                    u8 [a1] = a0
 12884: 28 1c                    jump @738
      :                          @737
 12886: 97 77 01                 a0 = a0 << 0x1
 12889: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 12892: c8 b7 07                 a0 = a0 + a4
 12895: 7c 78 01                 a1 = u8 [a0 + 0x1]
 12898: 7c 77                    a0 = u8 [a0]
 12900: 95 1a 21                 a3 = sp + 0x21
 12903: c8 9a 0a                 a3 = a3 + a2
 12906: 78 a8 01                 u8 [a3 + 0x1] = a1
 12909: 78 a7                    u8 [a3] = a0
 12911: 01                       fallthrough
      :                          @738
 12912: 95 1b 21                 a4 = sp + 0x21
 12915: c8 9b 0b                 a4 = a4 + a2
 12918: 9a 9c 27                 a5 = 0x27 - a2
 12921: 33 09 68 05 01           a2 = 0x10568
 12926: 82 17 08                 a0 = u64 [sp + 0x8]
 12929: 82 18                    a1 = u64 [sp]
 12931: 33 0a                    a3 = 0
 12933: 50 20 4a 01 13           ra = 330, jump @740
      :                          @739 [@dyn 165]
 12938: 82 10 58                 ra = u64 [sp + 0x58]
 12941: 82 15 50                 s0 = u64 [sp + 0x50]
 12944: 82 16 48                 s1 = u64 [sp + 0x48]
 12947: 95 11 60                 sp = sp + 0x60
 12950: 32 00                    ret
      :                          @740
 12952: 95 11 98                 sp = sp + 0xffffffffffffff98
 12955: 7b 10 60                 u64 [sp + 0x60] = ra
 12958: 7b 15 58                 u64 [sp + 0x58] = s0
 12961: 7b 16 50                 u64 [sp + 0x50] = s1
 12964: 7b 1b 18                 u64 [sp + 0x18] = a4
 12967: 51 08 4f                 jump @747 if a1 == 0
      :                          @741
 12970: 80 76 34                 s1 = u32 [a0 + 0x34]
 12973: 84 68 01                 a1 = s1 & 0x1
 12976: 33 0b 2b                 a4 = 0x2b
 12979: 33 05 00 00 11           s0 = 0x110000
 12984: db 8b 05                 s0 = a4 if a1 != 0
 12987: 7b 15 28                 u64 [sp + 0x28] = s0
 12990: c8 c8 02                 t0 = a1 + a5
 12993: 84 68 04                 a1 = s1 & 0x4
 12996: 51 08 42                 jump @748 if a1 == 0
      :                          @742
 12999: 7b 19 30                 u64 [sp + 0x30] = a2
 13002: 33 08                    a1 = 0
 13004: 51 0a 1a                 jump @745 if a3 == 0
      :                          @743
 13007: 64 a5                    s0 = a3
 13009: 01                       fallthrough
      :                          @744
 13010: 7d 9b                    a4 = i8 [a2]
 13012: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13015: 85 bb 01                 a4 = a4 ^ 0x1
 13018: c8 b8 08                 a1 = a1 + a4
 13021: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 13024: 95 99 01                 a2 = a2 + 0x1
 13027: 52 05 ef                 jump @744 if s0 != 0
      :                          @745
 13030: c8 82 02                 t0 = t0 + a1
 13033: 7b 1a 38                 u64 [sp + 0x38] = a3
 13036: 82 78                    a1 = u64 [a0]
 13038: 7b 1c 20                 u64 [sp + 0x20] = a5
 13041: 52 08 23                 jump @749 if a1 != 0
      :                          @746
 13044: 28 41                    jump @754
      :                          @747
 13046: 81 76 34                 s1 = i32 [a0 + 0x34]
 13049: 95 c2 01                 t0 = a5 + 0x1
 13052: 49 11 28 2d              u64 [sp + 40] = 0x2d
 13056: 84 68 04                 a1 = s1 & 0x4
 13059: 52 08 c4                 jump @742 if a1 != 0
      :                          @748
 13062: 49 11 30                 u64 [sp + 48] = 0
 13065: 7b 1a 38                 u64 [sp + 0x38] = a3
 13068: 82 78                    a1 = u64 [a0]
 13070: 7b 1c 20                 u64 [sp + 0x20] = a5
 13073: 51 08 24                 jump @754 if a1 == 0
      :                          @749
 13076: 82 75 08                 s0 = u64 [a0 + 0x8]
 13079: ae 52 1e                 jump @754 if t0 >=u s0
      :                          @750
 13082: 84 66 08                 s1 = s1 & 0x8
 13085: 52 06 51                 jump @757 if s1 != 0
      :                          @751
 13088: 7c 79 38                 a2 = u8 [a0 + 0x38]
 13091: c9 25 0a                 a3 = s0 - t0
 13094: 5a 19 01 a4 00           jump @764 if a2 >s 1
      :                          @752
 13099: 52 09 b1 00              jump @766 if a2 != 0
      :                          @753
 13103: 7b 1a 10                 u64 [sp + 0x10] = a3
 13106: 28 b0 00                 jump @767
      :                          @754
 13109: 82 75 20                 s0 = u64 [a0 + 0x20]
 13112: 82 76 28                 s1 = u64 [a0 + 0x28]
 13115: 64 57                    a0 = s0
 13117: 64 68                    a1 = s1
 13119: 82 19 28                 a2 = u64 [sp + 0x28]
 13122: 82 1a 30                 a3 = u64 [sp + 0x30]
 13125: 82 1b 38                 a4 = u64 [sp + 0x38]
 13128: 50 20 4c 01 76 01        ra = 332, jump @787
      :                          @755 [@dyn 166]
 13134: 33 08 01                 a1 = 0x1
 13137: 52 07 bf 00              jump @772 if a0 != 0
      :                          @756
 13141: 82 6c 18                 a5 = u64 [s1 + 0x18]
 13144: 64 57                    a0 = s0
 13146: 82 18 18                 a1 = u64 [sp + 0x18]
 13149: 82 19 20                 a2 = u64 [sp + 0x20]
 13152: 82 10 60                 ra = u64 [sp + 0x60]
 13155: 82 15 58                 s0 = u64 [sp + 0x58]
 13158: 82 16 50                 s1 = u64 [sp + 0x50]
 13161: 95 11 68                 sp = sp + 0x68
 13164: 32 0c                    jump [a5]
      :                          @757
 13166: 7b 12 40                 u64 [sp + 0x40] = t0
 13169: 81 78 30                 a1 = i32 [a0 + 0x30]
 13172: 7b 18 08                 u64 [sp + 0x8] = a1
 13175: 7c 79 38                 a2 = u8 [a0 + 0x38]
 13178: 7b 19                    u64 [sp] = a2
 13180: 82 79 20                 a2 = u64 [a0 + 0x20]
 13183: 82 76 28                 s1 = u64 [a0 + 0x28]
 13186: 48 17 30 30              u32 [a0 + 48] = 0x30
 13190: 7b 17 10                 u64 [sp + 0x10] = a0
 13193: 46 17 38 01              u8 [a0 + 56] = 0x1
 13197: 7b 19 48                 u64 [sp + 0x48] = a2
 13200: 64 97                    a0 = a2
 13202: 64 68                    a1 = s1
 13204: 82 19 28                 a2 = u64 [sp + 0x28]
 13207: 82 1a 30                 a3 = u64 [sp + 0x30]
 13210: 82 1b 38                 a4 = u64 [sp + 0x38]
 13213: 50 20 4e 01 21 01        ra = 334, jump @787
      :                          @758 [@dyn 167]
 13219: 52 07 69                 jump @771 if a0 != 0
      :                          @759
 13222: 82 17 40                 a0 = u64 [sp + 0x40]
 13225: c9 75 05                 s0 = s0 - a0
 13228: 95 55 01                 s0 = s0 + 0x1
 13231: 01                       fallthrough
      :                          @760
 13232: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 13235: 51 05 cb 00              jump @782 if s0 == 0
      :                          @761
 13239: 82 69 20                 a2 = u64 [s1 + 0x20]
 13242: 33 08 30                 a1 = 0x30
 13245: 82 17 48                 a0 = u64 [sp + 0x48]
 13248: b4 90 02 50 01           ra = 336, jump [a2]
      :                          @762 [@dyn 168]
 13253: 51 07 eb                 jump @760 if a0 == 0
      :                          @763
 13256: 28 44                    jump @771
      :                          @764
 13258: 52 19 02 12              jump @766 if a2 != 2
      :                          @765
 13262: 98 a9 01                 a2 = a3 >> 0x1
 13265: 95 a8 01                 a1 = a3 + 0x1
 13268: 98 88 01                 a1 = a1 >> 0x1
 13271: 7b 18 10                 u64 [sp + 0x10] = a1
 13274: 28 08                    jump @767
      :                          @766
 13276: 64 a9                    a2 = a3
 13278: 49 11 10                 u64 [sp + 16] = 0
 13281: 01                       fallthrough
      :                          @767
 13282: 82 78 20                 a1 = u64 [a0 + 0x20]
 13285: 7b 18 48                 u64 [sp + 0x48] = a1
 13288: 82 76 28                 s1 = u64 [a0 + 0x28]
 13291: 81 77 30                 a0 = i32 [a0 + 0x30]
 13294: 7b 17 40                 u64 [sp + 0x40] = a0
 13297: 95 95 01                 s0 = a2 + 0x1
 13300: 01                       fallthrough
      :                          @768
 13301: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 13304: 51 05 28                 jump @773 if s0 == 0
      :                          @769
 13307: 82 69 20                 a2 = u64 [s1 + 0x20]
 13310: 82 17 48                 a0 = u64 [sp + 0x48]
 13313: 82 18 40                 a1 = u64 [sp + 0x40]
 13316: b4 90 02 52 01           ra = 338, jump [a2]
      :                          @770 [@dyn 169]
 13321: 51 07 ec                 jump @768 if a0 == 0
      :                          @771
 13324: 33 08 01                 a1 = 0x1
 13327: 01                       fallthrough
      :                          @772
 13328: 64 87                    a0 = a1
 13330: 82 10 60                 ra = u64 [sp + 0x60]
 13333: 82 15 58                 s0 = u64 [sp + 0x58]
 13336: 82 16 50                 s1 = u64 [sp + 0x50]
 13339: 95 11 68                 sp = sp + 0x68
 13342: 32 00                    ret
      :                          @773
 13344: 82 15 48                 s0 = u64 [sp + 0x48]
 13347: 64 57                    a0 = s0
 13349: 64 68                    a1 = s1
 13351: 82 19 28                 a2 = u64 [sp + 0x28]
 13354: 82 1a 30                 a3 = u64 [sp + 0x30]
 13357: 82 1b 38                 a4 = u64 [sp + 0x38]
 13360: 50 20 54 01 8e 00        ra = 340, jump @787
      :                          @774 [@dyn 170]
 13366: 33 08 01                 a1 = 0x1
 13369: 52 07 d7                 jump @772 if a0 != 0
      :                          @775
 13372: 82 6a 18                 a3 = u64 [s1 + 0x18]
 13375: 64 57                    a0 = s0
 13377: 82 18 18                 a1 = u64 [sp + 0x18]
 13380: 82 19 20                 a2 = u64 [sp + 0x20]
 13383: b4 a0 02 56 01           ra = 342, jump [a3]
      :                          @776 [@dyn 171]
 13388: 33 08 01                 a1 = 0x1
 13391: 52 07 c1                 jump @772 if a0 != 0
      :                          @777
 13394: 82 17 10                 a0 = u64 [sp + 0x10]
 13397: 9a 77                    a0 = -a0
 13399: 7b 17 38                 u64 [sp + 0x38] = a0
 13402: 33 05 ff                 s0 = 0xffffffffffffffff
 13405: 01                       fallthrough
      :                          @778
 13406: 82 17 38                 a0 = u64 [sp + 0x38]
 13409: c8 57 07                 a0 = a0 + s0
 13412: 51 17 ff 45              jump @785 if a0 == 4294967295
      :                          @779
 13416: 82 69 20                 a2 = u64 [s1 + 0x20]
 13419: 82 17 48                 a0 = u64 [sp + 0x48]
 13422: 82 18 40                 a1 = u64 [sp + 0x40]
 13425: b4 90 02 58 01           ra = 344, jump [a2]
      :                          @780 [@dyn 172]
 13430: 95 55 01                 s0 = s0 + 0x1
 13433: 51 07 e5                 jump @778 if a0 == 0
      :                          @781
 13436: 28 39                    jump @786
      :                          @782
 13438: 82 6a 18                 a3 = u64 [s1 + 0x18]
 13441: 82 17 48                 a0 = u64 [sp + 0x48]
 13444: 82 18 18                 a1 = u64 [sp + 0x18]
 13447: 82 19 20                 a2 = u64 [sp + 0x20]
 13450: b4 a0 02 5a 01           ra = 346, jump [a3]
      :                          @783 [@dyn 173]
 13455: 33 08 01                 a1 = 0x1
 13458: 52 07 7e ff              jump @772 if a0 != 0
      :                          @784
 13462: 33 08                    a1 = 0
 13464: 82 17 10                 a0 = u64 [sp + 0x10]
 13467: 82 19 08                 a2 = u64 [sp + 0x8]
 13470: 7a 79 30                 u32 [a0 + 0x30] = a2
 13473: 82 19                    a2 = u64 [sp]
 13475: 78 79 38                 u8 [a0 + 0x38] = a2
 13478: 28 6a ff                 jump @772
      :                          @785
 13481: 82 15 10                 s0 = u64 [sp + 0x10]
 13484: 82 17 10                 a0 = u64 [sp + 0x10]
 13487: d8 75 08                 a1 = s0 <u a0
 13490: 28 5e ff                 jump @772
      :                          @786
 13493: 82 17 10                 a0 = u64 [sp + 0x10]
 13496: d8 75 08                 a1 = s0 <u a0
 13499: 28 55 ff                 jump @772
      :                          @787
 13502: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 13505: 7b 10 20                 u64 [sp + 0x20] = ra
 13508: 7b 15 18                 u64 [sp + 0x18] = s0
 13511: 7b 16 10                 u64 [sp + 0x10] = s1
 13514: 83 9c                    i32 a5 = a2 + 0
 13516: 33 02 00 00 11           t0 = 0x110000
 13521: 64 a6                    s1 = a3
 13523: 64 85                    s0 = a1
 13525: 64 7a                    a3 = a0
 13527: aa 2c 21                 jump @790 if a5 == t0
      :                          @788
 13530: 82 5c 20                 a5 = u64 [s0 + 0x20]
 13533: 64 a7                    a0 = a3
 13535: 64 98                    a1 = a2
 13537: 7b 1b 08                 u64 [sp + 0x8] = a4
 13540: 7b 1a                    u64 [sp] = a3
 13542: b4 c0 02 5c 01           ra = 348, jump [a5]
      :                          @789 [@dyn 174]
 13547: 82 1a                    a3 = u64 [sp]
 13549: 82 1b 08                 a4 = u64 [sp + 0x8]
 13552: 64 78                    a1 = a0
 13554: 33 07 01                 a0 = 0x1
 13557: 52 08 20                 jump @793 if a1 != 0
      :                          @790
 13560: 51 06 1a                 jump @792 if s1 == 0
      :                          @791
 13563: 82 5c 18                 a5 = u64 [s0 + 0x18]
 13566: 64 a7                    a0 = a3
 13568: 64 68                    a1 = s1
 13570: 64 b9                    a2 = a4
 13572: 82 10 20                 ra = u64 [sp + 0x20]
 13575: 82 15 18                 s0 = u64 [sp + 0x18]
 13578: 82 16 10                 s1 = u64 [sp + 0x10]
 13581: 95 11 28                 sp = sp + 0x28
 13584: 32 0c                    jump [a5]
      :                          @792
 13586: 33 07                    a0 = 0
 13588: 01                       fallthrough
      :                          @793
 13589: 82 10 20                 ra = u64 [sp + 0x20]
 13592: 82 15 18                 s0 = u64 [sp + 0x18]
 13595: 82 16 10                 s1 = u64 [sp + 0x10]
 13598: 95 11 28                 sp = sp + 0x28
 13601: 32 00                    ret
      :                          @794
 13603: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13606: 7b 10 40                 u64 [sp + 0x40] = ra
 13609: 7b 15 38                 u64 [sp + 0x38] = s0
 13612: 7b 16 30                 u64 [sp + 0x30] = s1
 13615: 82 74                    t2 = u64 [a0]
 13617: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13620: d4 a4 0b                 a4 = t2 | a3
 13623: 64 93                    t1 = a2
 13625: 64 85                    s0 = a1
 13627: 51 0b ab 03              jump @866 if a4 == 0
      :                          @795
 13631: 7b 17 08                 u64 [sp + 0x8] = a0
 13634: 51 0a f5 00              jump @814 if a3 == 0
      :                          @796
 13638: 82 7c 18                 a5 = u64 [a0 + 0x18]
 13641: 33 0a                    a3 = 0
 13643: 49 11 18 02              u64 [sp + 24] = 0x2
 13647: 95 53 02                 t1 = s0 + 0x2
 13650: 95 cc 01                 a5 = a5 + 0x1
 13653: 33 00 00 00 11           ra = 0x110000
 13658: 33 07 df 00              a0 = 0xdf
 13662: 7b 15 10                 u64 [sp + 0x10] = s0
 13665: 64 59                    a2 = s0
 13667: 28 12                    jump @799
      :                          @797
 13669: 95 98 01                 a1 = a2 + 0x1
 13672: 01                       fallthrough
      :                          @798
 13673: c9 9a 0a                 a3 = a3 - a2
 13676: c8 8a 0a                 a3 = a3 + a1
 13679: 64 89                    a2 = a1
 13681: aa 05 bc 00              jump @813 if s0 == ra
      :                          @799
 13685: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 13688: 51 0c 68                 jump @808 if a5 == 0
      :                          @800
 13691: aa 39 b2 00              jump @813 if a2 == t1
      :                          @801
 13695: 7d 98                    a1 = i8 [a2]
 13697: 84 85 ff 00              s0 = a1 & 0xff
 13701: 59 08 e0                 jump @797 if a1 >=s 0
      :                          @802
 13704: 7c 98 01                 a1 = u8 [a2 + 0x1]
 13707: 84 56 1f                 s1 = s0 & 0x1f
 13710: 84 8b 3f                 a4 = a1 & 0x3f
 13713: ae 57 35                 jump @806 if a0 >=u s0
      :                          @803
 13716: 7c 98 02                 a1 = u8 [a2 + 0x2]
 13719: 97 bb 06                 a4 = a4 << 0x6
 13722: 84 88 3f                 a1 = a1 & 0x3f
 13725: d4 8b 02                 t0 = a4 | a1
 13728: 53 25 f0 00 31           jump @807 if s0 <u 240
      :                          @804
 13733: 7c 98 03                 a1 = u8 [a2 + 0x3]
 13736: 97 66 3d                 s1 = s1 << 0x3d
 13739: 98 66 2b                 s1 = s1 >> 0x2b
 13742: 97 22 06                 t0 = t0 << 0x6
 13745: 84 88 3f                 a1 = a1 & 0x3f
 13748: d4 82 05                 s0 = t0 | a1
 13751: d4 65 05                 s0 = s0 | s1
 13754: aa 05 73                 jump @813 if s0 == ra
      :                          @805
 13757: 95 98 04                 a1 = a2 + 0x4
 13760: 33 07 df 00              a0 = 0xdf
 13764: 28 a5                    jump @798
      :                          @806
 13766: 95 98 02                 a1 = a2 + 0x2
 13769: 97 65 06                 s0 = s1 << 0x6
 13772: d4 b5 05                 s0 = s0 | a4
 13775: 28 9a                    jump @798
      :                          @807
 13777: 95 98 03                 a1 = a2 + 0x3
 13780: 97 66 0c                 s1 = s1 << 0xc
 13783: d4 62 05                 s0 = t0 | s1
 13786: 33 07 df 00              a0 = 0xdf
 13790: 28 8b                    jump @798
      :                          @808
 13792: aa 39 4d                 jump @813 if a2 == t1
      :                          @809
 13795: 7d 98                    a1 = i8 [a2]
 13797: 59 08 b6 02              jump @856 if a1 >=s 0
      :                          @810
 13801: 84 88 ff 00              a1 = a1 & 0xff
 13805: 33 0b e0 00              a4 = 0xe0
 13809: ac b8 aa 02              jump @856 if a1 <u a4
      :                          @811
 13813: 33 0b f0 00              a4 = 0xf0
 13817: ac b8 a2 02              jump @856 if a1 <u a4
      :                          @812
 13821: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 13824: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 13827: 84 bb 3f                 a4 = a4 & 0x3f
 13830: 84 cc 3f                 a5 = a5 & 0x3f
 13833: 7c 99 03                 a2 = u8 [a2 + 0x3]
 13836: 97 88 3d                 a1 = a1 << 0x3d
 13839: 98 88 2b                 a1 = a1 >> 0x2b
 13842: 97 bb 0c                 a4 = a4 << 0xc
 13845: 97 cc 06                 a5 = a5 << 0x6
 13848: d4 cb 0b                 a4 = a4 | a5
 13851: 84 99 3f                 a2 = a2 & 0x3f
 13854: d4 b9 09                 a2 = a2 | a4
 13857: d4 98 08                 a1 = a1 | a2
 13860: 33 09 00 00 11           a2 = 0x110000
 13865: ab 98 72 02              jump @856 if a1 != a2
      :                          @813
 13869: 82 13 18                 t1 = u64 [sp + 0x18]
 13872: 82 15 10                 s0 = u64 [sp + 0x10]
 13875: 82 17 08                 a0 = u64 [sp + 0x8]
 13878: 01                       fallthrough
      :                          @814
 13879: 51 04 af 02              jump @866 if t2 == 0
      :                          @815
 13883: 82 7c 08                 a5 = u64 [a0 + 0x8]
 13886: 7b 13 18                 u64 [sp + 0x18] = t1
 13889: 7b 15 10                 u64 [sp + 0x10] = s0
 13892: 55 13 20 29              jump @821 if t1 >=u 32
      :                          @816
 13896: 33 09                    a2 = 0
 13898: 51 03 1c                 jump @819 if t1 == 0
      :                          @817
 13901: 64 58                    a1 = s0
 13903: 64 3a                    a3 = t1
 13905: 01                       fallthrough
      :                          @818
 13906: 7d 8b                    a4 = i8 [a1]
 13908: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13911: 85 bb 01                 a4 = a4 ^ 0x1
 13914: c8 b9 09                 a2 = a2 + a4
 13917: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13920: 95 88 01                 a1 = a1 + 0x1
 13923: 52 0a ef                 jump @818 if a3 != 0
      :                          @819
 13926: ac c9 95 01              jump @838 if a2 <u a5
      :                          @820
 13930: 28 7c 02                 jump @866
      :                          @821
 13933: 7b 1c                    u64 [sp] = a5
 13935: 95 58 07                 a1 = s0 + 0x7
 13938: 64 5c                    a5 = s0
 13940: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 13943: c9 5c 0b                 a4 = a5 - s0
 13946: c8 b3 02                 t0 = t1 + a4
 13949: 84 2a 07                 a3 = t0 & 0x7
 13952: 33 08                    a1 = 0
 13954: aa c5 17                 jump @823 if s0 == a5
      :                          @822
 13957: 7d c6                    s1 = i8 [a5]
 13959: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 13962: 85 69 01                 a2 = s1 ^ 0x1
 13965: c8 98 08                 a1 = a1 + a2
 13968: 95 bb 01                 a4 = a4 + 0x1
 13971: 95 cc 01                 a5 = a5 + 0x1
 13974: 52 0b ef                 jump @822 if a4 != 0
      :                          @823
 13977: 33 0b                    a4 = 0
 13979: 51 0a 1e                 jump @826 if a3 == 0
      :                          @824
 13982: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 13985: c8 5c 0c                 a5 = a5 + s0
 13988: 01                       fallthrough
      :                          @825
 13989: 7d c7                    a0 = i8 [a5]
 13991: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 13994: 85 77 01                 a0 = a0 ^ 0x1
 13997: c8 7b 0b                 a4 = a4 + a0
 14000: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 14003: 95 cc 01                 a5 = a5 + 0x1
 14006: 52 0a ef                 jump @825 if a3 != 0
      :                          @826
 14009: 98 20 03                 ra = t0 >> 0x3
 14012: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 14022: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 14032: 7b 17 28                 u64 [sp + 0x28] = a0
 14035: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 14045: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 14055: 7b 17 20                 u64 [sp + 0x20] = a0
 14058: c8 8b 09                 a2 = a4 + a1
 14061: 28 2d                    jump @828
      :                          @827
 14063: 97 45 03                 s0 = t2 << 0x3
 14066: c8 35 05                 s0 = s0 + t1
 14069: c9 40 00                 ra = ra - t2
 14072: 84 46 03                 s1 = t2 & 0x3
 14075: 82 1b 28                 a4 = u64 [sp + 0x28]
 14078: d2 b2 07                 a0 = t0 & a4
 14081: 98 28 08                 a1 = t0 >> 0x8
 14084: d2 b8 08                 a1 = a1 & a4
 14087: c8 87 07                 a0 = a0 + a1
 14090: 82 18 20                 a1 = u64 [sp + 0x20]
 14093: ca 87 07                 a0 = a0 * a1
 14096: 98 77 30                 a0 = a0 >> 0x30
 14099: c8 79 09                 a2 = a2 + a0
 14102: 52 06 8e 00              jump @835 if s1 != 0
      :                          @828
 14106: 51 00 79                 jump @833 if ra == 0
      :                          @829
 14109: 64 53                    t1 = s0
 14111: 33 07 c0 00              a0 = 0xc0
 14115: e6 70 04                 t2 = minu(ra, a0)
 14118: 33 02                    t0 = 0
 14120: 98 48 02                 a1 = t2 >> 0x2
 14123: 51 08 c4                 jump @827 if a1 == 0
      :                          @830
 14126: 97 88 05                 a1 = a1 << 0x5
 14129: c8 38 08                 a1 = a1 + t1
 14132: 64 36                    s1 = t1
 14134: 01                       fallthrough
      :                          @831
 14135: 82 67                    a0 = u64 [s1]
 14137: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 14140: 98 cc 07                 a5 = a5 >> 0x7
 14143: 98 77 06                 a0 = a0 >> 0x6
 14146: 82 6b 08                 a4 = u64 [s1 + 0x8]
 14149: d4 c7 07                 a0 = a0 | a5
 14152: d2 a7 07                 a0 = a0 & a3
 14155: c8 27 07                 a0 = a0 + t0
 14158: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 14161: 98 cc 07                 a5 = a5 >> 0x7
 14164: 82 65 10                 s0 = u64 [s1 + 0x10]
 14167: 98 bb 06                 a4 = a4 >> 0x6
 14170: d4 cb 0b                 a4 = a4 | a5
 14173: d2 ab 0b                 a4 = a4 & a3
 14176: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 14179: 98 cc 07                 a5 = a5 >> 0x7
 14182: 98 55 06                 s0 = s0 >> 0x6
 14185: d4 5c 0c                 a5 = a5 | s0
 14188: 82 65 18                 s0 = u64 [s1 + 0x18]
 14191: d2 ac 0c                 a5 = a5 & a3
 14194: c8 cb 0b                 a4 = a4 + a5
 14197: c8 b7 07                 a0 = a0 + a4
 14200: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 14203: 98 bb 07                 a4 = a4 >> 0x7
 14206: 98 55 06                 s0 = s0 >> 0x6
 14209: d4 5b 0b                 a4 = a4 | s0
 14212: d2 ab 0b                 a4 = a4 & a3
 14215: 95 66 20                 s1 = s1 + 0x20
 14218: c8 7b 02                 t0 = a4 + a0
 14221: ab 86 aa                 jump @831 if s1 != a1
      :                          @832
 14224: 28 5f ff                 jump @827
      :                          @833
 14227: 82 13 18                 t1 = u64 [sp + 0x18]
 14230: 82 15 10                 s0 = u64 [sp + 0x10]
 14233: 82 17 08                 a0 = u64 [sp + 0x8]
 14236: 82 1c                    a5 = u64 [sp]
 14238: ac c9 5d                 jump @838 if a2 <u a5
      :                          @834
 14241: 28 45 01                 jump @866
      :                          @835
 14244: 33 08                    a1 = 0
 14246: 84 47 fc 00              a0 = t2 & 0xfc
 14250: 97 77 03                 a0 = a0 << 0x3
 14253: c8 73 0b                 a4 = t1 + a0
 14256: 97 66 03                 s1 = s1 << 0x3
 14259: 82 13 18                 t1 = u64 [sp + 0x18]
 14262: 82 15 10                 s0 = u64 [sp + 0x10]
 14265: 01                       fallthrough
      :                          @836
 14266: 82 b7                    a0 = u64 [a4]
 14268: 95 bb 08                 a4 = a4 + 0x8
 14271: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 14274: 98 cc 07                 a5 = a5 >> 0x7
 14277: 98 77 06                 a0 = a0 >> 0x6
 14280: d4 c7 07                 a0 = a0 | a5
 14283: d2 a7 07                 a0 = a0 & a3
 14286: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 14289: c8 78 08                 a1 = a1 + a0
 14292: 52 06 e6                 jump @836 if s1 != 0
      :                          @837
 14295: 82 1a 28                 a3 = u64 [sp + 0x28]
 14298: d2 a8 07                 a0 = a1 & a3
 14301: 98 88 08                 a1 = a1 >> 0x8
 14304: d2 a8 08                 a1 = a1 & a3
 14307: c8 87 07                 a0 = a0 + a1
 14310: 82 18 20                 a1 = u64 [sp + 0x20]
 14313: ca 87 07                 a0 = a0 * a1
 14316: 98 77 30                 a0 = a0 >> 0x30
 14319: c8 79 09                 a2 = a2 + a0
 14322: 82 17 08                 a0 = u64 [sp + 0x8]
 14325: 82 1c                    a5 = u64 [sp]
 14327: ae c9 ef 00              jump @866 if a2 >=u a5
      :                          @838
 14331: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 14334: 33 08                    a1 = 0
 14336: 33 0b 01                 a4 = 0x1
 14339: c9 9c 0c                 a5 = a5 - a2
 14342: ad ab 0c                 jump @841 if a4 <s a3
      :                          @839
 14345: 51 0a 1a                 jump @843 if a3 == 0
      :                          @840
 14348: 64 c8                    a1 = a5
 14350: 49 01                    u64 [sp + 0] = 0
 14352: 28 16                    jump @844
      :                          @841
 14354: 52 1a 02 11              jump @843 if a3 != 2
      :                          @842
 14358: 98 c8 01                 a1 = a5 >> 0x1
 14361: 95 c9 01                 a2 = a5 + 0x1
 14364: 98 99 01                 a2 = a2 >> 0x1
 14367: 7b 19                    u64 [sp] = a2
 14369: 28 05                    jump @844
      :                          @843
 14371: 7b 1c                    u64 [sp] = a5
 14373: 01                       fallthrough
      :                          @844
 14374: 82 79 20                 a2 = u64 [a0 + 0x20]
 14377: 7b 19 28                 u64 [sp + 0x28] = a2
 14380: 82 75 28                 s0 = u64 [a0 + 0x28]
 14383: 81 77 30                 a0 = i32 [a0 + 0x30]
 14386: 7b 17 20                 u64 [sp + 0x20] = a0
 14389: 95 86 01                 s1 = a1 + 0x1
 14392: 01                       fallthrough
      :                          @845
 14393: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 14396: 51 06 19                 jump @849 if s1 == 0
      :                          @846
 14399: 82 59 20                 a2 = u64 [s0 + 0x20]
 14402: 82 17 28                 a0 = u64 [sp + 0x28]
 14405: 82 18 20                 a1 = u64 [sp + 0x20]
 14408: b4 90 02 5e 01           ra = 350, jump [a2]
      :                          @847 [@dyn 175]
 14413: 51 07 ec                 jump @845 if a0 == 0
      :                          @848
 14416: 33 07 01                 a0 = 0x1
 14419: 28 72                    jump @862
      :                          @849
 14421: 82 5a 18                 a3 = u64 [s0 + 0x18]
 14424: 82 17 28                 a0 = u64 [sp + 0x28]
 14427: 82 18 10                 a1 = u64 [sp + 0x10]
 14430: 82 19 18                 a2 = u64 [sp + 0x18]
 14433: b4 a0 02 60 01           ra = 352, jump [a3]
      :                          @850 [@dyn 176]
 14438: 64 78                    a1 = a0
 14440: 33 07 01                 a0 = 0x1
 14443: 52 08 5a                 jump @862 if a1 != 0
      :                          @851
 14446: 82 17                    a0 = u64 [sp]
 14448: 9a 77                    a0 = -a0
 14450: 7b 17 18                 u64 [sp + 0x18] = a0
 14453: 33 06 ff                 s1 = 0xffffffffffffffff
 14456: 01                       fallthrough
      :                          @852
 14457: 82 17 18                 a0 = u64 [sp + 0x18]
 14460: c8 67 07                 a0 = a0 + s1
 14463: 33 08 ff                 a1 = 0xffffffffffffffff
 14466: aa 87 34                 jump @860 if a0 == a1
      :                          @853
 14469: 82 59 20                 a2 = u64 [s0 + 0x20]
 14472: 82 17 28                 a0 = u64 [sp + 0x28]
 14475: 82 18 20                 a1 = u64 [sp + 0x20]
 14478: b4 90 02 62 01           ra = 354, jump [a2]
      :                          @854 [@dyn 177]
 14483: 95 66 01                 s1 = s1 + 0x1
 14486: 51 07 e3                 jump @852 if a0 == 0
      :                          @855
 14489: 28 26                    jump @861
      :                          @856
 14491: 82 13 18                 t1 = u64 [sp + 0x18]
 14494: 82 15 10                 s0 = u64 [sp + 0x10]
 14497: 51 0a 35                 jump @864 if a3 == 0
      :                          @857
 14500: ae 3a 2f                 jump @863 if a3 >=u t1
      :                          @858
 14503: c8 a5 08                 a1 = s0 + a3
 14506: 7d 88                    a1 = i8 [a1]
 14508: 33 09 c0                 a2 = 0xffffffffffffffc0
 14511: af 98 27                 jump @864 if a1 >=s a2
      :                          @859
 14514: 33 08                    a1 = 0
 14516: 28 25                    jump @865
      :                          @860
 14518: 82 16                    s1 = u64 [sp]
 14520: 82 17                    a0 = u64 [sp]
 14522: d8 76 07                 a0 = s1 <u a0
 14525: 28 08                    jump @862
      :                          @861
 14527: 82 17                    a0 = u64 [sp]
 14529: d8 76 07                 a0 = s1 <u a0
 14532: 01                       fallthrough
      :                          @862
 14533: 82 10 40                 ra = u64 [sp + 0x40]
 14536: 82 15 38                 s0 = u64 [sp + 0x38]
 14539: 82 16 30                 s1 = u64 [sp + 0x30]
 14542: 95 11 48                 sp = sp + 0x48
 14545: 32 00                    ret
      :                          @863
 14547: ab 3a df                 jump @859 if a3 != t1
      :                          @864
 14550: 64 58                    a1 = s0
 14552: 01                       fallthrough
      :                          @865
 14553: 82 17 08                 a0 = u64 [sp + 0x8]
 14556: db 8a 03                 t1 = a3 if a1 != 0
 14559: db 88 05                 s0 = a1 if a1 != 0
 14562: 52 04 59 fd              jump @815 if t2 != 0
      :                          @866
 14566: 82 78 28                 a1 = u64 [a0 + 0x28]
 14569: 82 77 20                 a0 = u64 [a0 + 0x20]
 14572: 82 8c 18                 a5 = u64 [a1 + 0x18]
 14575: 64 58                    a1 = s0
 14577: 64 39                    a2 = t1
 14579: 82 10 40                 ra = u64 [sp + 0x40]
 14582: 82 15 38                 s0 = u64 [sp + 0x38]
 14585: 82 16 30                 s1 = u64 [sp + 0x30]
 14588: 95 11 48                 sp = sp + 0x48
 14591: 32 0c                    jump [a5]
      :                          @867
 14593: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 14597: 7b 10 80 00              u64 [sp + 0x80] = ra
 14601: 7b 15 78                 u64 [sp + 0x78] = s0
 14604: 7b 16 70                 u64 [sp + 0x70] = s1
 14607: 49 11 60 20              u64 [sp + 96] = 0x20
 14611: 33 0a 03                 a3 = 0x3
 14614: 78 1a 68                 u8 [sp + 0x68] = a3
 14617: 82 96 20                 s1 = u64 [a2 + 0x20]
 14620: 49 11 30                 u64 [sp + 48] = 0
 14623: 49 11 40                 u64 [sp + 64] = 0
 14626: 7b 17 50                 u64 [sp + 0x50] = a0
 14629: 7b 18 58                 u64 [sp + 0x58] = a1
 14632: 51 06 0a 01              jump @889 if s1 == 0
      :                          @868
 14636: 82 97 28                 a0 = u64 [a2 + 0x28]
 14639: 51 07 79 01              jump @899 if a0 == 0
      :                          @869
 14643: 49 11 28                 u64 [sp + 40] = 0
 14646: 82 95                    s0 = u64 [a2]
 14648: 7b 19 08                 u64 [sp + 0x8] = a2
 14651: 82 98 10                 a1 = u64 [a2 + 0x10]
 14654: 7b 18 18                 u64 [sp + 0x18] = a1
 14657: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 14660: 97 88 03                 a1 = a1 << 0x3
 14663: 98 88 03                 a1 = a1 >> 0x3
 14666: 95 88 01                 a1 = a1 + 0x1
 14669: 7b 18                    u64 [sp] = a1
 14671: 95 55 08                 s0 = s0 + 0x8
 14674: 96 78 38                 a1 = a0 * 0x38
 14677: 95 66 18                 s1 = s1 + 0x18
 14680: 33 07 48 01              a0 = 0x148
 14684: 7b 17 10                 u64 [sp + 0x10] = a0
 14687: 01                       fallthrough
      :                          @870
 14688: 7b 18 20                 u64 [sp + 0x20] = a1
 14691: 82 59                    a2 = u64 [s0]
 14693: 51 09 18                 jump @873 if a2 == 0
      :                          @871
 14696: 82 1a 58                 a3 = u64 [sp + 0x58]
 14699: 82 17 50                 a0 = u64 [sp + 0x50]
 14702: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 14705: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14708: b4 a0 02 64 01           ra = 356, jump [a3]
      :                          @872 [@dyn 178]
 14713: 52 07 55 01              jump @902 if a0 != 0
      :                          @873
 14717: 81 67 10                 a0 = i32 [s1 + 0x10]
 14720: 7a 17 60                 u32 [sp + 0x60] = a0
 14723: 7c 67 18                 a0 = u8 [s1 + 0x18]
 14726: 78 17 68                 u8 [sp + 0x68] = a0
 14729: 81 67 14                 a0 = i32 [s1 + 0x14]
 14732: 7a 17 64                 u32 [sp + 0x64] = a0
 14735: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14738: 82 67                    a0 = u64 [s1]
 14740: 51 08 26                 jump @878 if a1 == 0
      :                          @874
 14743: 52 18 01 16              jump @876 if a1 != 1
      :                          @875
 14747: 97 77 04                 a0 = a0 << 0x4
 14750: 82 18 18                 a1 = u64 [sp + 0x18]
 14753: c8 87 07                 a0 = a0 + a1
 14756: 82 78 08                 a1 = u64 [a0 + 0x8]
 14759: 82 19 10                 a2 = u64 [sp + 0x10]
 14762: aa 98 07                 jump @877 if a1 == a2
      :                          @876
 14765: 33 08                    a1 = 0
 14767: 28 0f                    jump @879
      :                          @877
 14769: 82 77                    a0 = u64 [a0]
 14771: 82 77                    a0 = u64 [a0]
 14773: 33 08 01                 a1 = 0x1
 14776: 28 06                    jump @879
      :                          @878
 14778: 33 08 01                 a1 = 0x1
 14781: 01                       fallthrough
      :                          @879
 14782: 7b 18 30                 u64 [sp + 0x30] = a1
 14785: 7b 17 38                 u64 [sp + 0x38] = a0
 14788: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 14791: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 14794: 51 08 26                 jump @884 if a1 == 0
      :                          @880
 14797: 52 18 01 16              jump @882 if a1 != 1
      :                          @881
 14801: 97 77 04                 a0 = a0 << 0x4
 14804: 82 18 18                 a1 = u64 [sp + 0x18]
 14807: c8 87 07                 a0 = a0 + a1
 14810: 82 78 08                 a1 = u64 [a0 + 0x8]
 14813: 82 19 10                 a2 = u64 [sp + 0x10]
 14816: aa 98 07                 jump @883 if a1 == a2
      :                          @882
 14819: 33 08                    a1 = 0
 14821: 28 0f                    jump @885
      :                          @883
 14823: 82 77                    a0 = u64 [a0]
 14825: 82 77                    a0 = u64 [a0]
 14827: 33 08 01                 a1 = 0x1
 14830: 28 06                    jump @885
      :                          @884
 14832: 33 08 01                 a1 = 0x1
 14835: 01                       fallthrough
      :                          @885
 14836: 7b 18 40                 u64 [sp + 0x40] = a1
 14839: 7b 17 48                 u64 [sp + 0x48] = a0
 14842: 82 67 08                 a0 = u64 [s1 + 0x8]
 14845: 97 77 04                 a0 = a0 << 0x4
 14848: 82 18 18                 a1 = u64 [sp + 0x18]
 14851: c8 78 08                 a1 = a1 + a0
 14854: 82 87                    a0 = u64 [a1]
 14856: 82 89 08                 a2 = u64 [a1 + 0x8]
 14859: 95 18 30                 a1 = sp + 0x30
 14862: b4 90 02 66 01           ra = 358, jump [a2]
      :                          @886 [@dyn 179]
 14867: 52 07 bb 00              jump @902 if a0 != 0
      :                          @887
 14871: 95 55 10                 s0 = s0 + 0x10
 14874: 82 18 20                 a1 = u64 [sp + 0x20]
 14877: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 14880: 95 66 38                 s1 = s1 + 0x38
 14883: 82 17 28                 a0 = u64 [sp + 0x28]
 14886: 95 77 01                 a0 = a0 + 0x1
 14889: 7b 17 28                 u64 [sp + 0x28] = a0
 14892: 52 08 34 ff              jump @870 if a1 != 0
      :                          @888
 14896: 28 6b                    jump @897
      :                          @889
 14898: 82 97 18                 a0 = u64 [a2 + 0x18]
 14901: 51 07 73                 jump @899 if a0 == 0
      :                          @890
 14904: 82 95 10                 s0 = u64 [a2 + 0x10]
 14907: 33 0a                    a3 = 0
 14909: 97 78 04                 a1 = a0 << 0x4
 14912: c8 58 08                 a1 = a1 + s0
 14915: 7b 18 20                 u64 [sp + 0x20] = a1
 14918: 7b 19 08                 u64 [sp + 0x8] = a2
 14921: 82 96                    s1 = u64 [a2]
 14923: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 14926: 97 77 04                 a0 = a0 << 0x4
 14929: 98 77 04                 a0 = a0 >> 0x4
 14932: 95 77 01                 a0 = a0 + 0x1
 14935: 7b 17                    u64 [sp] = a0
 14937: 95 66 08                 s1 = s1 + 0x8
 14940: 01                       fallthrough
      :                          @891
 14941: 7b 1a 28                 u64 [sp + 0x28] = a3
 14944: 82 69                    a2 = u64 [s1]
 14946: 51 09 17                 jump @894 if a2 == 0
      :                          @892
 14949: 82 1a 58                 a3 = u64 [sp + 0x58]
 14952: 82 17 50                 a0 = u64 [sp + 0x50]
 14955: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14958: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14961: b4 a0 02 68 01           ra = 360, jump [a3]
      :                          @893 [@dyn 180]
 14966: 52 07 58                 jump @902 if a0 != 0
      :                          @894
 14969: 82 57                    a0 = u64 [s0]
 14971: 82 59 08                 a2 = u64 [s0 + 0x8]
 14974: 95 18 30                 a1 = sp + 0x30
 14977: b4 90 02 6a 01           ra = 362, jump [a2]
      :                          @895 [@dyn 181]
 14982: 52 07 48                 jump @902 if a0 != 0
      :                          @896
 14985: 95 66 10                 s1 = s1 + 0x10
 14988: 95 55 10                 s0 = s0 + 0x10
 14991: 82 1a 28                 a3 = u64 [sp + 0x28]
 14994: 95 aa 01                 a3 = a3 + 0x1
 14997: 82 17 20                 a0 = u64 [sp + 0x20]
 15000: ab 75 c5                 jump @891 if s0 != a0
      :                          @897
 15003: 82 19 08                 a2 = u64 [sp + 0x8]
 15006: 82 1a                    a3 = u64 [sp]
 15008: 82 97 08                 a0 = u64 [a2 + 0x8]
 15011: ac 7a 0d                 jump @900 if a3 <u a0
      :                          @898
 15014: 28 2d                    jump @903
      :                          @899
 15016: 33 0a                    a3 = 0
 15018: 82 97 08                 a0 = u64 [a2 + 0x8]
 15021: 54 07 26                 jump @903 if a0 <=u 0
      :                          @900
 15024: 82 97                    a0 = u64 [a2]
 15026: 97 a8 04                 a1 = a3 << 0x4
 15029: c8 87 09                 a2 = a0 + a1
 15032: 82 1a 58                 a3 = u64 [sp + 0x58]
 15035: 82 17 50                 a0 = u64 [sp + 0x50]
 15038: 82 98                    a1 = u64 [a2]
 15040: 82 99 08                 a2 = u64 [a2 + 0x8]
 15043: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15046: b4 a0 02 6c 01           ra = 364, jump [a3]
      :                          @901 [@dyn 182]
 15051: 51 07 08                 jump @903 if a0 == 0
      :                          @902
 15054: 33 07 01                 a0 = 0x1
 15057: 28 05                    jump @904
      :                          @903
 15059: 33 07                    a0 = 0
 15061: 01                       fallthrough
      :                          @904
 15062: 82 10 80 00              ra = u64 [sp + 0x80]
 15066: 82 15 78                 s0 = u64 [sp + 0x78]
 15069: 82 16 70                 s1 = u64 [sp + 0x70]
 15072: 95 11 88 00              sp = sp + 0x88
 15076: 32 00                    ret
      :                          @905 [@dyn 183]
 15078: 32 00                    ret
      :                          @906 [@dyn 184]
 15080: 95 11 88                 sp = sp + 0xffffffffffffff88
 15083: 7b 10 70                 u64 [sp + 0x70] = ra
 15086: 7b 15 68                 u64 [sp + 0x68] = s0
 15089: 7b 16 60                 u64 [sp + 0x60] = s1
 15092: 64 93                    t1 = a2
 15094: 33 0c                    a5 = 0
 15096: 33 02                    t0 = 0
 15098: 33 0b                    a4 = 0
 15100: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 15110: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 15116: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 15126: 82 79 10                 a2 = u64 [a0 + 0x10]
 15129: 7b 19 48                 u64 [sp + 0x48] = a2
 15132: 82 79                    a2 = u64 [a0]
 15134: 7b 19 30                 u64 [sp + 0x30] = a2
 15137: 82 77 08                 a0 = u64 [a0 + 0x8]
 15140: 7b 17 28                 u64 [sp + 0x28] = a0
 15143: 7b 18 50                 u64 [sp + 0x50] = a1
 15146: 95 88 08                 a1 = a1 + 0x8
 15149: 7b 18                    u64 [sp] = a1
 15151: 33 07 8b 01 01           a0 = 0x1018b
 15156: 7b 17 08                 u64 [sp + 0x8] = a0
 15159: 33 05 0a                 s0 = 0xa
 15162: 7b 13 20                 u64 [sp + 0x20] = t1
 15165: 7b 14 18                 u64 [sp + 0x18] = t2
 15168: 7b 10 10                 u64 [sp + 0x10] = ra
 15171: 28 3a                    jump @910
      :                          @907
 15173: c8 89 07                 a0 = a2 + a1
 15176: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 15179: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15182: 88 77 01                 a0 = a0 <u 0x1
 15185: 01                       fallthrough
      :                          @908
 15186: 82 1a 48                 a3 = u64 [sp + 0x48]
 15189: 78 a7                    u8 [a3] = a0
 15191: 82 17 28                 a0 = u64 [sp + 0x28]
 15194: 82 7a 18                 a3 = u64 [a0 + 0x18]
 15197: 82 17 30                 a0 = u64 [sp + 0x30]
 15200: b4 a0 02 72 01           ra = 370, jump [a3]
      :                          @909 [@dyn 185]
 15205: 64 52                    t0 = s0
 15207: 82 13 20                 t1 = u64 [sp + 0x20]
 15210: 82 14 18                 t2 = u64 [sp + 0x18]
 15213: 82 10 10                 ra = u64 [sp + 0x10]
 15216: 82 1c 58                 a5 = u64 [sp + 0x58]
 15219: 33 05 0a                 s0 = 0xa
 15222: 82 1b 38                 a4 = u64 [sp + 0x38]
 15225: 52 07 67 01              jump @951 if a0 != 0
      :                          @910
 15229: 84 b7 ff 00              a0 = a4 & 0xff
 15233: 52 07 5b 01              jump @950 if a0 != 0
      :                          @911
 15237: 7b 12 40                 u64 [sp + 0x40] = t0
 15240: ae c3 0a                 jump @914 if t1 >=u a5
      :                          @912
 15243: 28 f4 00                 jump @941
      :                          @913
 15246: ac c3 f1 00              jump @941 if t1 <u a5
      :                          @914
 15250: c9 c3 08                 a1 = t1 - a5
 15253: 82 16 50                 s1 = u64 [sp + 0x50]
 15256: c8 c6 06                 s1 = s1 + a5
 15259: 55 18 10 1d              jump @920 if a1 >=u 16
      :                          @915
 15263: aa c3 dd 00              jump @940 if t1 == a5
      :                          @916
 15267: 33 0a                    a3 = 0
 15269: 01                       fallthrough
      :                          @917
 15270: c8 a6 07                 a0 = s1 + a3
 15273: 7c 77                    a0 = u8 [a0]
 15275: aa 57 aa 00              jump @935 if a0 == s0
      :                          @918
 15279: 95 aa 01                 a3 = a3 + 0x1
 15282: ab a8 f4                 jump @917 if a1 != a3
      :                          @919
 15285: 28 c7 00                 jump @940
      :                          @920
 15288: 95 69 07                 a2 = s1 + 0x7
 15291: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 15294: c9 6a 07                 a0 = a3 - s1
 15297: d3 6a 0a                 a3 = a3 ^ s1
 15300: 88 aa 01                 a3 = a3 <u 0x1
 15303: 88 7b 01                 a4 = a0 <u 0x1
 15306: d4 ba 0a                 a3 = a3 | a4
 15309: 7b 1c 58                 u64 [sp + 0x58] = a5
 15312: 51 0a 44                 jump @926 if a3 == 0
      :                          @921
 15315: 33 07                    a0 = 0
 15317: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 15320: 01                       fallthrough
      :                          @922
 15321: 82 1b 58                 a4 = u64 [sp + 0x58]
 15324: 82 19                    a2 = u64 [sp]
 15326: c8 9b 0b                 a4 = a4 + a2
 15329: 01                       fallthrough
      :                          @923
 15330: c8 76 0c                 a5 = s1 + a0
 15333: 82 cc                    a5 = u64 [a5]
 15335: c8 7b 09                 a2 = a4 + a0
 15338: 82 99                    a2 = u64 [a2]
 15340: d3 0c 05                 s0 = a5 ^ ra
 15343: c8 45 05                 s0 = s0 + t2
 15346: e0 c5 0c                 a5 = s0 & ~a5
 15349: d3 09 05                 s0 = a2 ^ ra
 15352: 3a 0a 10 00 03           a3 = u64 [0x30010]
 15357: c8 45 05                 s0 = s0 + t2
 15360: e0 95 09                 a2 = s0 & ~a2
 15363: d4 c9 09                 a2 = a2 | a5
 15366: d2 a9 09                 a2 = a2 & a3
 15369: 52 09 1f                 jump @929 if a2 != 0
      :                          @924
 15372: 95 77 10                 a0 = a0 + 0x10
 15375: ae 72 d3                 jump @923 if t0 >=u a0
      :                          @925
 15378: 28 16                    jump @929
      :                          @926
 15380: c8 a6 0b                 a4 = s1 + a3
 15383: 7c bb                    a4 = u8 [a4]
 15385: aa 5b 54                 jump @938 if a4 == s0
      :                          @927
 15388: 95 aa 01                 a3 = a3 + 0x1
 15391: ab a7 f5                 jump @926 if a0 != a3
      :                          @928
 15394: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 15397: ae 72 b4                 jump @922 if t0 >=u a0
      :                          @929
 15400: aa 87 99 00              jump @947 if a0 == a1
      :                          @930
 15404: 33 0a                    a3 = 0
 15406: c8 76 06                 s1 = s1 + a0
 15409: c9 73 08                 a1 = t1 - a0
 15412: 82 1c 58                 a5 = u64 [sp + 0x58]
 15415: c9 c8 08                 a1 = a1 - a5
 15418: 33 05 0a                 s0 = 0xa
 15421: 82 12 40                 t0 = u64 [sp + 0x40]
 15424: 01                       fallthrough
      :                          @931
 15425: c8 a6 09                 a2 = s1 + a3
 15428: 7c 99                    a2 = u8 [a2]
 15430: aa 59 0b                 jump @934 if a2 == s0
      :                          @932
 15433: 95 aa 01                 a3 = a3 + 0x1
 15436: ab a8 f5                 jump @931 if a1 != a3
      :                          @933
 15439: 28 2d                    jump @940
      :                          @934
 15441: c8 7a 0a                 a3 = a3 + a0
 15444: 01                       fallthrough
      :                          @935
 15445: c8 ca 0a                 a3 = a3 + a5
 15448: 95 ac 01                 a5 = a3 + 0x1
 15451: ae 3a 33 ff              jump @913 if a3 >=u t1
      :                          @936
 15455: 82 17 50                 a0 = u64 [sp + 0x50]
 15458: c8 7a 0a                 a3 = a3 + a0
 15461: 7c a7                    a0 = u8 [a3]
 15463: ab 57 27 ff              jump @913 if a0 != s0
      :                          @937
 15467: 28 5d                    jump @948
      :                          @938
 15469: 82 1c 58                 a5 = u64 [sp + 0x58]
 15472: c8 ca 0a                 a3 = a3 + a5
 15475: 95 ac 01                 a5 = a3 + 0x1
 15478: ac 3a e9                 jump @936 if a3 <u t1
      :                          @939
 15481: 28 15 ff                 jump @913
      :                          @940
 15484: 64 3c                    a5 = t1
 15486: 01                       fallthrough
      :                          @941
 15487: 7b 1c 58                 u64 [sp + 0x58] = a5
 15490: 49 11 38 01              u64 [sp + 56] = 0x1
 15494: 64 25                    s0 = t0
 15496: 64 36                    s1 = t1
 15498: aa 32 52                 jump @950 if t0 == t1
      :                          @942
 15501: 82 17 48                 a0 = u64 [sp + 0x48]
 15504: 7c 77                    a0 = u8 [a0]
 15506: 51 07 1d                 jump @945 if a0 == 0
      :                          @943
 15509: 82 17 28                 a0 = u64 [sp + 0x28]
 15512: 82 7a 18                 a3 = u64 [a0 + 0x18]
 15515: 33 09 04                 a2 = 0x4
 15518: 82 17 30                 a0 = u64 [sp + 0x30]
 15521: 82 18 08                 a1 = u64 [sp + 0x8]
 15524: b4 a0 02 74 01           ra = 372, jump [a3]
      :                          @944 [@dyn 186]
 15529: 82 12 40                 t0 = u64 [sp + 0x40]
 15532: 52 07 34                 jump @951 if a0 != 0
      :                          @945
 15535: c9 26 09                 a2 = s1 - t0
 15538: 82 18 50                 a1 = u64 [sp + 0x50]
 15541: c8 28 08                 a1 = a1 + t0
 15544: ab 26 8d fe              jump @907 if s1 != t0
      :                          @946
 15548: 33 07                    a0 = 0
 15550: 28 94 fe                 jump @908
      :                          @947
 15553: 64 3c                    a5 = t1
 15555: 82 12 40                 t0 = u64 [sp + 0x40]
 15558: 28 b9                    jump @941
      :                          @948
 15560: 49 11 38                 u64 [sp + 56] = 0
 15563: 64 c6                    s1 = a5
 15565: 64 c5                    s0 = a5
 15567: 7b 1c 58                 u64 [sp + 0x58] = a5
 15570: 82 17 48                 a0 = u64 [sp + 0x48]
 15573: 7c 77                    a0 = u8 [a0]
 15575: 52 07 be                 jump @943 if a0 != 0
      :                          @949
 15578: 28 d5                    jump @945
      :                          @950
 15580: 33 07                    a0 = 0
 15582: 28 06                    jump @952
      :                          @951
 15584: 33 07 01                 a0 = 0x1
 15587: 01                       fallthrough
      :                          @952
 15588: 82 10 70                 ra = u64 [sp + 0x70]
 15591: 82 15 68                 s0 = u64 [sp + 0x68]
 15594: 82 16 60                 s1 = u64 [sp + 0x60]
 15597: 95 11 78                 sp = sp + 0x78
 15600: 32 00                    ret
      :                          @953 [@dyn 187]
 15602: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15605: 7b 10 20                 u64 [sp + 0x20] = ra
 15608: 7b 15 18                 u64 [sp + 0x18] = s0
 15611: 7b 16 10                 u64 [sp + 0x10] = s1
 15614: 82 75 10                 s0 = u64 [a0 + 0x10]
 15617: 7c 59                    a2 = u8 [s0]
 15619: 82 7b                    a4 = u64 [a0]
 15621: 82 76 08                 s1 = u64 [a0 + 0x8]
 15624: 51 09 33                 jump @957 if a2 == 0
      :                          @954
 15627: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15630: 7b 18 08                 u64 [sp + 0x8] = a1
 15633: 33 08 8b 01 01           a1 = 0x1018b
 15638: 33 09 04                 a2 = 0x4
 15641: 64 b7                    a0 = a4
 15643: 7b 1b                    u64 [sp] = a4
 15645: b4 a0 02 78 01           ra = 376, jump [a3]
      :                          @955 [@dyn 188]
 15650: 82 18 08                 a1 = u64 [sp + 0x8]
 15653: 82 1b                    a4 = u64 [sp]
 15655: 51 07 14                 jump @957 if a0 == 0
      :                          @956
 15658: 33 07 01                 a0 = 0x1
 15661: 82 10 20                 ra = u64 [sp + 0x20]
 15664: 82 15 18                 s0 = u64 [sp + 0x18]
 15667: 82 16 10                 s1 = u64 [sp + 0x10]
 15670: 95 11 28                 sp = sp + 0x28
 15673: 32 00                    ret
      :                          @957
 15675: 83 87                    i32 a0 = a1 + 0
 15677: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15680: 88 77 01                 a0 = a0 <u 0x1
 15683: 78 57                    u8 [s0] = a0
 15685: 82 6c 20                 a5 = u64 [s1 + 0x20]
 15688: 64 b7                    a0 = a4
 15690: 82 10 20                 ra = u64 [sp + 0x20]
 15693: 82 15 18                 s0 = u64 [sp + 0x18]
 15696: 82 16 10                 s1 = u64 [sp + 0x10]
 15699: 95 11 28                 sp = sp + 0x28
 15702: 32 0c                    jump [a5]
      :                          @958 [@dyn 189]
 15704: 64 8a                    a3 = a1
 15706: 33 08 c8 0e 01           a1 = 0x10ec8
 15711: 64 a9                    a2 = a3
 15713: 28 a0 fb                 jump @867
      :                          @959
 15716: 51 08 9b 00              jump @980 if a1 == 0
      :                          @960
 15720: 64 79                    a2 = a0
 15722: 7c 77                    a0 = u8 [a0]
 15724: 51 07 91 00              jump @979 if a0 == 0
      :                          @961
 15728: 51 27 ff 00 90 00        jump @981 if a0 == 255
      :                          @962
 15734: 6c 7a                    a3 = sext.b a0
 15736: 57 0a 09                 jump @964 if a3 <s 0
      :                          @963
 15739: 33 0a                    a3 = 0
 15741: 33 08                    a1 = 0
 15743: 28 73                    jump @978
      :                          @964
 15745: 55 27 c0 00 0d           jump @966 if a0 >=u 192
      :                          @965
 15750: 33 0a 01                 a3 = 0x1
 15753: 33 0b 80                 a4 = 0xffffffffffffff80
 15756: 28 4a                    jump @975
      :                          @966
 15758: 55 27 e0 00 0e           jump @968 if a0 >=u 224
      :                          @967
 15763: 33 0a 02                 a3 = 0x2
 15766: 33 0b 40 ff              a4 = 0xffffffffffffff40
 15770: 28 3c                    jump @975
      :                          @968
 15772: 55 27 f0 00 0e           jump @970 if a0 >=u 240
      :                          @969
 15777: 33 0a 03                 a3 = 0x3
 15780: 33 0b 20 ff              a4 = 0xffffffffffffff20
 15784: 28 2e                    jump @975
      :                          @970
 15786: 55 27 f8 00 0e           jump @972 if a0 >=u 248
      :                          @971
 15791: 33 0a 04                 a3 = 0x4
 15794: 33 0b 10 ff              a4 = 0xffffffffffffff10
 15798: 28 20                    jump @975
      :                          @972
 15800: 55 27 fc 00 0e           jump @974 if a0 >=u 252
      :                          @973
 15805: 33 0a 05                 a3 = 0x5
 15808: 33 0b 08 ff              a4 = 0xffffffffffffff08
 15812: 28 12                    jump @975
      :                          @974
 15814: 88 7a fe 00              a3 = a0 <u 0xfe
 15818: 33 0b 04 ff              a4 = 0xffffffffffffff04
 15822: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 15826: 85 aa 07                 a3 = a3 ^ 0x7
 15829: 01                       fallthrough
      :                          @975
 15830: ae 8a 2b                 jump @982 if a3 >=u a1
      :                          @976
 15833: 33 08                    a1 = 0
 15835: c8 b7 07                 a0 = a0 + a4
 15838: 64 ab                    a4 = a3
 15840: 01                       fallthrough
      :                          @977
 15841: c8 b9 0c                 a5 = a2 + a4
 15844: 7c cc                    a5 = u8 [a5]
 15846: 97 88 08                 a1 = a1 << 0x8
 15849: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 15852: d4 c8 08                 a1 = a1 | a5
 15855: 52 0b f2                 jump @977 if a4 != 0
      :                          @978
 15858: 8a a9 03                 i32 a2 = a3 << 0x3
 15861: cf 97 07                 a0 = a0 << a2
 15864: c8 87 07                 a0 = a0 + a1
 15867: 32 00                    ret
      :                          @979
 15869: 32 00                    ret
      :                          @980
 15871: 00                       trap
      :                          @981
 15872: 00                       trap
      :                          @982
 15873: 00                       trap
      :                          @983
 15874: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 15878: 7b 10 00 01              u64 [sp + 0x100] = ra
 15882: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 15886: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 15890: 7b 17                    u64 [sp] = a0
 15892: 78 18 0f                 u8 [sp + 0xf] = a1
 15895: 7b 17 10                 u64 [sp + 0x10] = a0
 15898: 95 16 0f                 s1 = sp + 0xf
 15901: 33 05 01                 s0 = 0x1
 15904: 95 17 0f                 a0 = sp + 0xf
 15907: 33 08 01                 a1 = 0x1
 15910: 95 19 10                 a2 = sp + 0x10
 15913: 33 0a 08                 a3 = 0x8
 15916: 0a 03                    ecalli 3 // 'write'
 15918: 7b 16 60                 u64 [sp + 0x60] = s1
 15921: 33 07 80 01              a0 = 0x180
 15925: 7b 17 68                 u64 [sp + 0x68] = a0
 15928: 64 17                    a0 = sp
 15930: 7b 17 70                 u64 [sp + 0x70] = a0
 15933: 33 07 10                 a0 = 0x10
 15936: 7b 17 78                 u64 [sp + 0x78] = a0
 15939: 49 21 80 00 02           u64 [sp + 128] = 0x2
 15944: 49 21 90 00 02           u64 [sp + 144] = 0x2
 15949: 49 21 a0 00              u64 [sp + 160] = 0
 15953: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 15963: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 15967: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 15972: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 15977: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 15982: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 15986: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 15990: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 15995: 33 08 f8 0e 01           a1 = 0x10ef8
 16000: 7b 18 30                 u64 [sp + 0x30] = a1
 16003: 49 11 38 02              u64 [sp + 56] = 0x2
 16007: 95 18 80 00              a1 = sp + 0x80
 16011: 7b 18 50                 u64 [sp + 0x50] = a1
 16014: 49 11 58 02              u64 [sp + 88] = 0x2
 16018: 95 18 60                 a1 = sp + 0x60
 16021: 7b 18 40                 u64 [sp + 0x40] = a1
 16024: 49 11 48 02              u64 [sp + 72] = 0x2
 16028: 95 17 18                 a0 = sp + 0x18
 16031: 95 18 30                 a1 = sp + 0x30
 16034: 50 20 7c 01 4d ef        ra = 380, jump @647
      :                          @984 [@dyn 190]
 16040: 82 15 20                 s0 = u64 [sp + 0x20]
 16043: 82 1b 28                 a4 = u64 [sp + 0x28]
 16046: 82 16 18                 s1 = u64 [sp + 0x18]
 16049: 33 07 02                 a0 = 0x2
 16052: 33 08                    a1 = 0
 16054: 33 09                    a2 = 0
 16056: 64 5a                    a3 = s0
 16058: 33 00 7e 01              ra = 0x17e
 16062: 0a 64                    ecalli 100 // 'log'
 16064: 01                       fallthrough
      :                          @985 [@dyn 191]
 16065: 33 07 00 f0              a0 = 0xfffffffffffff000
 16069: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 16073: ac 78 23                 jump @991 if a1 <u a0
      :                          @986
 16076: 33 07 20 00 03           a0 = 0x30020
 16081: 95 77 00 10              a0 = a0 + 0x1000
 16085: 01                       fallthrough
      :                          @987
 16086: 82 78                    a1 = u64 [a0]
 16088: c9 87 09                 a2 = a0 - a1
 16091: ab 59 11                 jump @991 if a2 != s0
      :                          @988
 16094: c9 68 09                 a2 = a1 - s1
 16097: 01                       fallthrough
      :                          @989
 16098: 82 7a                    a3 = u64 [a0]
 16100: ab 8a f2                 jump @987 if a3 != a1
      :                          @990
 16103: 7b 79                    u64 [a0] = a2
 16105: 33 0b                    a4 = 0
 16107: 01                       fallthrough
      :                          @991
 16108: 82 10 00 01              ra = u64 [sp + 0x100]
 16112: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 16116: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 16120: 95 11 08 01              sp = sp + 0x108
 16124: 32 00                    ret
      :                          @992 [@dyn 192]
 16126: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 16130: 7b 10 90 00              u64 [sp + 0x90] = ra
 16134: 7b 15 88 00              u64 [sp + 0x88] = s0
 16138: 7b 16 80 00              u64 [sp + 0x80] = s1
 16142: 64 85                    s0 = a1
 16144: 82 86 28                 s1 = u64 [a1 + 0x28]
 16147: 82 8a 20                 a3 = u64 [a1 + 0x20]
 16150: 82 6b 18                 a4 = u64 [s1 + 0x18]
 16153: 7b 17 10                 u64 [sp + 0x10] = a0
 16156: 33 08 68 05 01           a1 = 0x10568
 16161: 33 09 01                 a2 = 0x1
 16164: 7b 1a 18                 u64 [sp + 0x18] = a3
 16167: 64 a7                    a0 = a3
 16169: 7b 1b 08                 u64 [sp + 0x8] = a4
 16172: b4 b0 02 82 01           ra = 386, jump [a4]
      :                          @993 [@dyn 193]
 16177: 51 07 09                 jump @995 if a0 == 0
      :                          @994
 16180: 33 09 01                 a2 = 0x1
 16183: 28 d2 00                 jump @1007
      :                          @995
 16186: 80 58 34                 a1 = u32 [s0 + 0x34]
 16189: 84 87 04                 a0 = a1 & 0x4
 16192: 52 07 21                 jump @999 if a0 != 0
      :                          @996
 16195: 82 17 10                 a0 = u64 [sp + 0x10]
 16198: 64 58                    a1 = s0
 16200: 50 20 84 01 d5 00        ra = 388, jump @1008
      :                          @997 [@dyn 194]
 16206: 33 09 01                 a2 = 0x1
 16209: 52 07 b8 00              jump @1007 if a0 != 0
      :                          @998
 16213: 82 57 28                 a0 = u64 [s0 + 0x28]
 16216: 82 5a 20                 a3 = u64 [s0 + 0x20]
 16219: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16222: 28 99 00                 jump @1005
      :                          @999
 16225: 7b 18                    u64 [sp] = a1
 16227: 33 08 6b 05 01           a1 = 0x1056b
 16232: 33 09 01                 a2 = 0x1
 16235: 82 17 18                 a0 = u64 [sp + 0x18]
 16238: 82 1a 08                 a3 = u64 [sp + 0x8]
 16241: b4 a0 02 86 01           ra = 390, jump [a3]
      :                          @1000 [@dyn 195]
 16246: 33 09 01                 a2 = 0x1
 16249: 82 18 18                 a1 = u64 [sp + 0x18]
 16252: 52 07 8d 00              jump @1007 if a0 != 0
      :                          @1001
 16256: 46 11 3f 01              u8 [sp + 63] = 0x1
 16260: 7b 18 20                 u64 [sp + 0x20] = a1
 16263: 7b 16 28                 u64 [sp + 0x28] = s1
 16266: 95 17 3f                 a0 = sp + 0x3f
 16269: 7b 17 30                 u64 [sp + 0x30] = a0
 16272: 81 57 30                 a0 = i32 [s0 + 0x30]
 16275: 7c 58 38                 a1 = u8 [s0 + 0x38]
 16278: 82 59                    a2 = u64 [s0]
 16280: 82 5a 08                 a3 = u64 [s0 + 0x8]
 16283: 82 5b 10                 a4 = u64 [s0 + 0x10]
 16286: 82 5c 18                 a5 = u64 [s0 + 0x18]
 16289: 82 16                    s1 = u64 [sp]
 16291: 7a 16 74                 u32 [sp + 0x74] = s1
 16294: 7a 17 70                 u32 [sp + 0x70] = a0
 16297: 78 18 78                 u8 [sp + 0x78] = a1
 16300: 7b 19 40                 u64 [sp + 0x40] = a2
 16303: 7b 1a 48                 u64 [sp + 0x48] = a3
 16306: 7b 1b 50                 u64 [sp + 0x50] = a4
 16309: 7b 1c 58                 u64 [sp + 0x58] = a5
 16312: 95 17 20                 a0 = sp + 0x20
 16315: 7b 17 60                 u64 [sp + 0x60] = a0
 16318: 33 07 c8 0e 01           a0 = 0x10ec8
 16323: 7b 17 68                 u64 [sp + 0x68] = a0
 16326: 95 18 40                 a1 = sp + 0x40
 16329: 82 17 10                 a0 = u64 [sp + 0x10]
 16332: 50 20 88 01 51           ra = 392, jump @1008
      :                          @1002 [@dyn 196]
 16337: 52 07 63 ff              jump @994 if a0 != 0
      :                          @1003
 16341: 82 18 68                 a1 = u64 [sp + 0x68]
 16344: 82 17 60                 a0 = u64 [sp + 0x60]
 16347: 82 8a 18                 a3 = u64 [a1 + 0x18]
 16350: 33 08 69 05 01           a1 = 0x10569
 16355: 33 09 02                 a2 = 0x2
 16358: b4 a0 02 8a 01           ra = 394, jump [a3]
      :                          @1004 [@dyn 197]
 16363: 82 1a 18                 a3 = u64 [sp + 0x18]
 16366: 82 1b 08                 a4 = u64 [sp + 0x8]
 16369: 33 09 01                 a2 = 0x1
 16372: 52 07 15                 jump @1007 if a0 != 0
      :                          @1005
 16375: 33 08 6c 05 01           a1 = 0x1056c
 16380: 33 09 01                 a2 = 0x1
 16383: 64 a7                    a0 = a3
 16385: b4 b0 02 8c 01           ra = 396, jump [a4]
      :                          @1006 [@dyn 198]
 16390: 64 79                    a2 = a0
 16392: 01                       fallthrough
      :                          @1007
 16393: 64 97                    a0 = a2
 16395: 82 10 90 00              ra = u64 [sp + 0x90]
 16399: 82 15 88 00              s0 = u64 [sp + 0x88]
 16403: 82 16 80 00              s1 = u64 [sp + 0x80]
 16407: 95 11 98 00              sp = sp + 0x98
 16411: 32 00                    ret
      :                          @1008
 16413: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 16417: 7b 10 80 00              u64 [sp + 0x80] = ra
 16421: 64 82                    t0 = a1
 16423: 80 88 34                 a1 = u32 [a1 + 0x34]
 16426: 84 89 10                 a2 = a1 & 0x10
 16429: 52 09 1b                 jump @1011 if a2 != 0
      :                          @1009
 16432: 84 88 20                 a1 = a1 & 0x20
 16435: 52 08 5c                 jump @1015 if a1 != 0
      :                          @1010
 16438: 7c 77                    a0 = u8 [a0]
 16440: 33 08 01                 a1 = 0x1
 16443: 64 29                    a2 = t0
 16445: 82 10 80 00              ra = u64 [sp + 0x80]
 16449: 95 11 88 00              sp = sp + 0x88
 16453: 28 30 f1                 jump @730
      :                          @1011
 16456: 7c 77                    a0 = u8 [a0]
 16458: 33 0a 81 00              a3 = 0x81
 16462: 95 18 7f                 a1 = sp + 0x7f
 16465: 33 03 57                 t1 = 0x57
 16468: 01                       fallthrough
      :                          @1012
 16469: 64 ab                    a4 = a3
 16471: 84 7a 0f                 a3 = a0 & 0xf
 16474: 97 77 38                 a0 = a0 << 0x38
 16477: 98 77 3c                 a0 = a0 >> 0x3c
 16480: 88 ac 0a                 a5 = a3 <u 0xa
 16483: 33 09 30                 a2 = 0x30
 16486: da c3 09                 a2 = t1 if a5 == 0
 16489: be a9 09                 i32 a2 = a2 + a3
 16492: 78 89                    u8 [a1] = a2
 16494: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16497: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 16500: 52 07 e1                 jump @1012 if a0 != 0
      :                          @1013
 16503: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 16506: 56 27 80 00 73           jump @1021 if a0 >u 128
      :                          @1014
 16511: 9a ac 81 00              a5 = 0x81 - a3
 16515: 64 1b                    a4 = sp
 16517: c8 7b 0b                 a4 = a4 + a0
 16520: 33 09 6d 05 01           a2 = 0x1056d
 16525: 28 48                    jump @1019
      :                          @1015
 16527: 7c 77                    a0 = u8 [a0]
 16529: 33 0a 81 00              a3 = 0x81
 16533: 95 18 7f                 a1 = sp + 0x7f
 16536: 33 03 37                 t1 = 0x37
 16539: 01                       fallthrough
      :                          @1016
 16540: 64 ab                    a4 = a3
 16542: 84 7a 0f                 a3 = a0 & 0xf
 16545: 97 77 38                 a0 = a0 << 0x38
 16548: 98 77 3c                 a0 = a0 >> 0x3c
 16551: 88 ac 0a                 a5 = a3 <u 0xa
 16554: 33 09 30                 a2 = 0x30
 16557: da c3 09                 a2 = t1 if a5 == 0
 16560: be a9 09                 i32 a2 = a2 + a3
 16563: 78 89                    u8 [a1] = a2
 16565: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16568: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 16571: 52 07 e1                 jump @1016 if a0 != 0
      :                          @1017
 16574: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 16577: 56 27 80 00 2c           jump @1021 if a0 >u 128
      :                          @1018
 16582: 9a ac 81 00              a5 = 0x81 - a3
 16586: 64 1b                    a4 = sp
 16588: c8 7b 0b                 a4 = a4 + a0
 16591: 33 09 6d 05 01           a2 = 0x1056d
 16596: 01                       fallthrough
      :                          @1019
 16597: 33 08 01                 a1 = 0x1
 16600: 33 0a 02                 a3 = 0x2
 16603: 64 27                    a0 = t0
 16605: 50 20 8e 01 bb f1        ra = 398, jump @740
      :                          @1020 [@dyn 199]
 16611: 82 10 80 00              ra = u64 [sp + 0x80]
 16615: 95 11 88 00              sp = sp + 0x88
 16619: 32 00                    ret
      :                          @1021
 16621: 00                       trap
