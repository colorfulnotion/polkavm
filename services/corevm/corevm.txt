// RO data = 4672/4672 bytes
// RW data = 24/4176 bytes
// Stack size = 40960 bytes
// RO data = [136, 0, 255, 255, 160, 0, 255, 255, 178, 0, 255, 255, 196, 0, 255, 255, 220, 0, 255, 255, 244, 0, 255, 255, 10, 1, 255, 255, 22, 1, 255, 255, 34, 1, 255, 255, 52, 1, 255, 255, 0, 16, 0, 0, 0, 0, 0, 0, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 101, 120, 112, 117, 110, 103, 101, 32, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 32, 111, 117, 116, 112, 117, 116, 61, 247, 255, 255, 255, 255, 255, 255, 255, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 90, 69, 82, 79, 44, 32, 103, 111, 116, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 238, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 255, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 27, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 45, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 65, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 79, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 86, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 96, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 116, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 119, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 122, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 86, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 96, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 153, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 179, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 186, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 201, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 206, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 219, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 219, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 220, 1, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 201, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 39, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 60, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 71, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 114, 2, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 126, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 141, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 188, 2, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 234, 2, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 23, 3, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 66, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 86, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 3, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 139, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 168, 3, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 206, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 235, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 7, 4, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 45, 4, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 75, 4, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 127, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 154, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 172, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 190, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 219, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 127, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 237, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 254, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 26, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 127, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 237, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 46, 5, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 61, 5, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 83, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 150, 5, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 176, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 185, 5, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 212, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 232, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 252, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 5, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 42, 6, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 63, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 122, 1, 0, 0, 0, 0, 0, 0, 130, 1, 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 166, 1, 0, 0, 0, 0, 0, 0, 172, 1, 0, 0, 0, 0, 0, 0, 176, 1, 0, 0, 0, 0, 0, 0, 163, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 180, 8, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5546
// Code size = 17442 bytes

      :                          @0
     0: 28 e8 04 00 00           jump @86
      :                          @1
     5: 28 c7 14 00 00           jump @268
      :                          @2
    10: 28 bb 31                 jump @663
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 58 06 01           a1 = 0x10658
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2d                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 c8 01              a0 = 0x1c8
    73: 7b 17                    u64 [sp] = a0
    75: 01                       fallthrough
      :                          @6
    76: 95 67 01                 a0 = s1 + 0x1
    79: 7b 17 08                 u64 [sp + 0x8] = a0
    82: 7b 16 20                 u64 [sp + 0x20] = s1
    85: 95 17 10                 a0 = sp + 0x10
    88: 95 18 20                 a1 = sp + 0x20
    91: 82 19                    a2 = u64 [sp]
    93: 50 10 06 b7 3f           ra = 6, jump @966
      :                          @7 [@dyn 3]
    98: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   101: 82 16 08                 s1 = u64 [sp + 0x8]
   104: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   107: 7c 17 18                 a0 = u8 [sp + 0x18]
   110: 01                       fallthrough
      :                          @9
   111: 33 08 01                 a1 = 0x1
   114: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   117: 82 17 10                 a0 = u64 [sp + 0x10]
   120: 82 78 28                 a1 = u64 [a0 + 0x28]
   123: 82 77 20                 a0 = u64 [a0 + 0x20]
   126: 82 8a 18                 a3 = u64 [a1 + 0x18]
   129: 33 08 76 06 01           a1 = 0x10676
   134: 33 09 01                 a2 = 0x1
   137: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   141: 64 78                    a1 = a0
   143: 01                       fallthrough
      :                          @12
   144: 64 87                    a0 = a1
   146: 82 10 38                 ra = u64 [sp + 0x38]
   149: 82 15 30                 s0 = u64 [sp + 0x30]
   152: 82 16 28                 s1 = u64 [sp + 0x28]
   155: 95 11 40                 sp = sp + 0x40
   158: 32 00                    ret
      :                          @13 [@dyn 5]
   160: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   164: 7b 10 80 00              u64 [sp + 0x80] = ra
   168: 80 89 34                 a2 = u32 [a1 + 0x34]
   171: 82 77                    a0 = u64 [a0]
   173: 84 9a 10                 a3 = a2 & 0x10
   176: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   179: 84 99 20                 a2 = a2 & 0x20
   182: 52 09 51                 jump @20 if a2 != 0
      :                          @15
   185: 82 77                    a0 = u64 [a0]
   187: 82 10 80 00              ra = u64 [sp + 0x80]
   191: 95 11 88 00              sp = sp + 0x88
   195: 28 58 37                 jump @812
      :                          @16
   198: 82 7b                    a4 = u64 [a0]
   200: 33 09 81 00              a2 = 0x81
   204: 95 17 7f                 a0 = sp + 0x7f
   207: 33 02 57                 t0 = 0x57
   210: 01                       fallthrough
      :                          @17
   211: 64 9c                    a5 = a2
   213: 98 ba 04                 a3 = a4 >> 0x4
   216: 84 bb 0f                 a4 = a4 & 0xf
   219: 88 b3 0a                 t1 = a4 <u 0xa
   222: 33 09 30                 a2 = 0x30
   225: da 32 09                 a2 = t0 if t1 == 0
   228: be b9 09                 i32 a2 = a2 + a4
   231: 78 79                    u8 [a0] = a2
   233: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   236: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   239: 64 ab                    a4 = a3
   241: 52 0a e2                 jump @17 if a3 != 0
      :                          @18
   244: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   247: 56 27 80 00 69           jump @26 if a0 >u 128
      :                          @19
   252: 9a 9b 81 00              a4 = 0x81 - a2
   256: 64 1a                    a3 = sp
   258: c8 7a 0a                 a3 = a3 + a0
   261: 28 42                    jump @24
      :                          @20
   263: 82 7b                    a4 = u64 [a0]
   265: 33 09 81 00              a2 = 0x81
   269: 95 17 7f                 a0 = sp + 0x7f
   272: 33 02 37                 t0 = 0x37
   275: 01                       fallthrough
      :                          @21
   276: 64 9c                    a5 = a2
   278: 98 ba 04                 a3 = a4 >> 0x4
   281: 84 bb 0f                 a4 = a4 & 0xf
   284: 88 b3 0a                 t1 = a4 <u 0xa
   287: 33 09 30                 a2 = 0x30
   290: da 32 09                 a2 = t0 if t1 == 0
   293: be b9 09                 i32 a2 = a2 + a4
   296: 78 79                    u8 [a0] = a2
   298: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   301: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   304: 64 ab                    a4 = a3
   306: 52 0a e2                 jump @21 if a3 != 0
      :                          @22
   309: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   312: 56 27 80 00 28           jump @26 if a0 >u 128
      :                          @23
   317: 9a 9b 81 00              a4 = 0x81 - a2
   321: 64 1a                    a3 = sp
   323: c8 7a 0a                 a3 = a3 + a0
   326: 01                       fallthrough
      :                          @24
   327: 33 09 02                 a2 = 0x2
   330: 64 87                    a0 = a1
   332: 33 08 77 06 01           a1 = 0x10677
   337: 50 10 0c e7 37           ra = 12, jump @822
      :                          @25 [@dyn 6]
   342: 82 10 80 00              ra = u64 [sp + 0x80]
   346: 95 11 88 00              sp = sp + 0x88
   350: 32 00                    ret
      :                          @26
   352: 00                       trap
      :                          @27 [@dyn 7]
   353: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   357: 7b 10 80 00              u64 [sp + 0x80] = ra
   361: 80 89 34                 a2 = u32 [a1 + 0x34]
   364: 84 9a 10                 a3 = a2 & 0x10
   367: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   370: 84 99 20                 a2 = a2 & 0x20
   373: 52 09 52                 jump @34 if a2 != 0
      :                          @29
   376: 7c 77                    a0 = u8 [a0]
   378: 82 10 80 00              ra = u64 [sp + 0x80]
   382: 95 11 88 00              sp = sp + 0x88
   386: 28 99 36                 jump @812
      :                          @30
   389: 7c 77                    a0 = u8 [a0]
   391: 33 0b 81 00              a4 = 0x81
   395: 95 19 7f                 a2 = sp + 0x7f
   398: 33 02 57                 t0 = 0x57
   401: 01                       fallthrough
      :                          @31
   402: 64 bc                    a5 = a4
   404: 84 7b 0f                 a4 = a0 & 0xf
   407: 97 77 38                 a0 = a0 << 0x38
   410: 98 77 3c                 a0 = a0 >> 0x3c
   413: 88 b3 0a                 t1 = a4 <u 0xa
   416: 33 0a 30                 a3 = 0x30
   419: da 32 0a                 a3 = t0 if t1 == 0
   422: be ba 0a                 i32 a3 = a3 + a4
   425: 78 9a                    u8 [a2] = a3
   427: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   430: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   433: 52 07 e1                 jump @31 if a0 != 0
      :                          @32
   436: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   439: 56 27 80 00 6a           jump @40 if a0 >u 128
      :                          @33
   444: 9a bb 81 00              a4 = 0x81 - a4
   448: 64 1a                    a3 = sp
   450: c8 7a 0a                 a3 = a3 + a0
   453: 28 43                    jump @38
      :                          @34
   455: 7c 77                    a0 = u8 [a0]
   457: 33 0b 81 00              a4 = 0x81
   461: 95 19 7f                 a2 = sp + 0x7f
   464: 33 02 37                 t0 = 0x37
   467: 01                       fallthrough
      :                          @35
   468: 64 bc                    a5 = a4
   470: 84 7b 0f                 a4 = a0 & 0xf
   473: 97 77 38                 a0 = a0 << 0x38
   476: 98 77 3c                 a0 = a0 >> 0x3c
   479: 88 b3 0a                 t1 = a4 <u 0xa
   482: 33 0a 30                 a3 = 0x30
   485: da 32 0a                 a3 = t0 if t1 == 0
   488: be ba 0a                 i32 a3 = a3 + a4
   491: 78 9a                    u8 [a2] = a3
   493: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   496: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   499: 52 07 e1                 jump @35 if a0 != 0
      :                          @36
   502: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   505: 56 27 80 00 28           jump @40 if a0 >u 128
      :                          @37
   510: 9a bb 81 00              a4 = 0x81 - a4
   514: 64 1a                    a3 = sp
   516: c8 7a 0a                 a3 = a3 + a0
   519: 01                       fallthrough
      :                          @38
   520: 33 09 02                 a2 = 0x2
   523: 64 87                    a0 = a1
   525: 33 08 77 06 01           a1 = 0x10677
   530: 50 10 10 26 37           ra = 16, jump @822
      :                          @39 [@dyn 8]
   535: 82 10 80 00              ra = u64 [sp + 0x80]
   539: 95 11 88 00              sp = sp + 0x88
   543: 32 00                    ret
      :                          @40
   545: 00                       trap
      :                          @41 [@dyn 9]
   546: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   550: 7b 10 80 00              u64 [sp + 0x80] = ra
   554: 80 89 34                 a2 = u32 [a1 + 0x34]
   557: 84 9a 10                 a3 = a2 & 0x10
   560: 52 0a 16                 jump @44 if a3 != 0
      :                          @42
   563: 84 99 20                 a2 = a2 & 0x20
   566: 52 09 51                 jump @48 if a2 != 0
      :                          @43
   569: 80 77                    a0 = u32 [a0]
   571: 82 10 80 00              ra = u64 [sp + 0x80]
   575: 95 11 88 00              sp = sp + 0x88
   579: 28 d8 35                 jump @812
      :                          @44
   582: 81 7b                    a4 = i32 [a0]
   584: 33 09 81 00              a2 = 0x81
   588: 95 17 7f                 a0 = sp + 0x7f
   591: 33 02 57                 t0 = 0x57
   594: 01                       fallthrough
      :                          @45
   595: 64 9c                    a5 = a2
   597: 8b ba 04                 i32 a3 = a4 >> 0x4
   600: 84 bb 0f                 a4 = a4 & 0xf
   603: 88 b3 0a                 t1 = a4 <u 0xa
   606: 33 09 30                 a2 = 0x30
   609: da 32 09                 a2 = t0 if t1 == 0
   612: be b9 09                 i32 a2 = a2 + a4
   615: 78 79                    u8 [a0] = a2
   617: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   620: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   623: 64 ab                    a4 = a3
   625: 52 0a e2                 jump @45 if a3 != 0
      :                          @46
   628: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   631: 56 27 80 00 69           jump @54 if a0 >u 128
      :                          @47
   636: 9a 9b 81 00              a4 = 0x81 - a2
   640: 64 1a                    a3 = sp
   642: c8 7a 0a                 a3 = a3 + a0
   645: 28 42                    jump @52
      :                          @48
   647: 81 7b                    a4 = i32 [a0]
   649: 33 09 81 00              a2 = 0x81
   653: 95 17 7f                 a0 = sp + 0x7f
   656: 33 02 37                 t0 = 0x37
   659: 01                       fallthrough
      :                          @49
   660: 64 9c                    a5 = a2
   662: 8b ba 04                 i32 a3 = a4 >> 0x4
   665: 84 bb 0f                 a4 = a4 & 0xf
   668: 88 b3 0a                 t1 = a4 <u 0xa
   671: 33 09 30                 a2 = 0x30
   674: da 32 09                 a2 = t0 if t1 == 0
   677: be b9 09                 i32 a2 = a2 + a4
   680: 78 79                    u8 [a0] = a2
   682: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   685: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   688: 64 ab                    a4 = a3
   690: 52 0a e2                 jump @49 if a3 != 0
      :                          @50
   693: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   696: 56 27 80 00 28           jump @54 if a0 >u 128
      :                          @51
   701: 9a 9b 81 00              a4 = 0x81 - a2
   705: 64 1a                    a3 = sp
   707: c8 7a 0a                 a3 = a3 + a0
   710: 01                       fallthrough
      :                          @52
   711: 33 09 02                 a2 = 0x2
   714: 64 87                    a0 = a1
   716: 33 08 77 06 01           a1 = 0x10677
   721: 50 10 14 67 36           ra = 20, jump @822
      :                          @53 [@dyn 10]
   726: 82 10 80 00              ra = u64 [sp + 0x80]
   730: 95 11 88 00              sp = sp + 0x88
   734: 32 00                    ret
      :                          @54
   736: 00                       trap
      :                          @55 [@dyn 11]
   737: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   741: 7b 10 80 00              u64 [sp + 0x80] = ra
   745: 80 89 34                 a2 = u32 [a1 + 0x34]
   748: 84 9a 10                 a3 = a2 & 0x10
   751: 52 0a 16                 jump @58 if a3 != 0
      :                          @56
   754: 84 99 20                 a2 = a2 & 0x20
   757: 52 09 51                 jump @62 if a2 != 0
      :                          @57
   760: 82 77                    a0 = u64 [a0]
   762: 82 10 80 00              ra = u64 [sp + 0x80]
   766: 95 11 88 00              sp = sp + 0x88
   770: 28 19 35                 jump @812
      :                          @58
   773: 82 7b                    a4 = u64 [a0]
   775: 33 09 81 00              a2 = 0x81
   779: 95 17 7f                 a0 = sp + 0x7f
   782: 33 02 57                 t0 = 0x57
   785: 01                       fallthrough
      :                          @59
   786: 64 9c                    a5 = a2
   788: 98 ba 04                 a3 = a4 >> 0x4
   791: 84 bb 0f                 a4 = a4 & 0xf
   794: 88 b3 0a                 t1 = a4 <u 0xa
   797: 33 09 30                 a2 = 0x30
   800: da 32 09                 a2 = t0 if t1 == 0
   803: be b9 09                 i32 a2 = a2 + a4
   806: 78 79                    u8 [a0] = a2
   808: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   811: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   814: 64 ab                    a4 = a3
   816: 52 0a e2                 jump @59 if a3 != 0
      :                          @60
   819: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   822: 56 27 80 00 69           jump @68 if a0 >u 128
      :                          @61
   827: 9a 9b 81 00              a4 = 0x81 - a2
   831: 64 1a                    a3 = sp
   833: c8 7a 0a                 a3 = a3 + a0
   836: 28 42                    jump @66
      :                          @62
   838: 82 7b                    a4 = u64 [a0]
   840: 33 09 81 00              a2 = 0x81
   844: 95 17 7f                 a0 = sp + 0x7f
   847: 33 02 37                 t0 = 0x37
   850: 01                       fallthrough
      :                          @63
   851: 64 9c                    a5 = a2
   853: 98 ba 04                 a3 = a4 >> 0x4
   856: 84 bb 0f                 a4 = a4 & 0xf
   859: 88 b3 0a                 t1 = a4 <u 0xa
   862: 33 09 30                 a2 = 0x30
   865: da 32 09                 a2 = t0 if t1 == 0
   868: be b9 09                 i32 a2 = a2 + a4
   871: 78 79                    u8 [a0] = a2
   873: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   876: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   879: 64 ab                    a4 = a3
   881: 52 0a e2                 jump @63 if a3 != 0
      :                          @64
   884: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   887: 56 27 80 00 28           jump @68 if a0 >u 128
      :                          @65
   892: 9a 9b 81 00              a4 = 0x81 - a2
   896: 64 1a                    a3 = sp
   898: c8 7a 0a                 a3 = a3 + a0
   901: 01                       fallthrough
      :                          @66
   902: 33 09 02                 a2 = 0x2
   905: 64 87                    a0 = a1
   907: 33 08 77 06 01           a1 = 0x10677
   912: 50 10 18 a8 35           ra = 24, jump @822
      :                          @67 [@dyn 12]
   917: 82 10 80 00              ra = u64 [sp + 0x80]
   921: 95 11 88 00              sp = sp + 0x88
   925: 32 00                    ret
      :                          @68
   927: 00                       trap
      :                          @69 [@dyn 13]
   928: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   931: 7b 10 28                 u64 [sp + 0x28] = ra
   934: 7b 15 20                 u64 [sp + 0x20] = s0
   937: 7b 16 18                 u64 [sp + 0x18] = s1
   940: 64 85                    s0 = a1
   942: 82 88 28                 a1 = u64 [a1 + 0x28]
   945: 82 5a 20                 a3 = u64 [s0 + 0x20]
   948: 82 8b 18                 a4 = u64 [a1 + 0x18]
   951: 64 76                    s1 = a0
   953: 33 08 58 06 01           a1 = 0x10658
   958: 33 09 01                 a2 = 0x1
   961: 64 a7                    a0 = a3
   963: b4 b0 01 1c              ra = 28, jump [a4]
      :                          @70 [@dyn 14]
   967: 7b 15                    u64 [sp] = s0
   969: 78 17 08                 u8 [sp + 0x8] = a0
   972: 46 11 09                 u8 [sp + 9] = 0
   975: 7b 16 10                 u64 [sp + 0x10] = s1
   978: 33 05 0a                 s0 = 0xa
   981: 64 17                    a0 = sp
   983: 95 18 10                 a1 = sp + 0x10
   986: 33 09 0a                 a2 = 0xa
   989: 50 10 1e 37 3c           ra = 30, jump @966
      :                          @71 [@dyn 15]
   994: 95 67 08                 a0 = s1 + 0x8
   997: 7b 17 10                 u64 [sp + 0x10] = a0
  1000: 64 17                    a0 = sp
  1002: 95 18 10                 a1 = sp + 0x10
  1005: 64 59                    a2 = s0
  1007: 50 10 20 25 3c           ra = 32, jump @966
      :                          @72 [@dyn 16]
  1012: 95 67 10                 a0 = s1 + 0x10
  1015: 7b 17 10                 u64 [sp + 0x10] = a0
  1018: 64 17                    a0 = sp
  1020: 95 18 10                 a1 = sp + 0x10
  1023: 64 59                    a2 = s0
  1025: 50 10 22 13 3c           ra = 34, jump @966
      :                          @73 [@dyn 17]
  1030: 95 67 18                 a0 = s1 + 0x18
  1033: 7b 17 10                 u64 [sp + 0x10] = a0
  1036: 64 17                    a0 = sp
  1038: 95 18 10                 a1 = sp + 0x10
  1041: 64 59                    a2 = s0
  1043: 50 10 24 01 3c           ra = 36, jump @966
      :                          @74 [@dyn 18]
  1048: 95 67 20                 a0 = s1 + 0x20
  1051: 7b 17 10                 u64 [sp + 0x10] = a0
  1054: 64 17                    a0 = sp
  1056: 95 18 10                 a1 = sp + 0x10
  1059: 64 59                    a2 = s0
  1061: 50 10 26 ef 3b           ra = 38, jump @966
      :                          @75 [@dyn 19]
  1066: 95 67 28                 a0 = s1 + 0x28
  1069: 7b 17 10                 u64 [sp + 0x10] = a0
  1072: 64 17                    a0 = sp
  1074: 95 18 10                 a1 = sp + 0x10
  1077: 64 59                    a2 = s0
  1079: 50 10 28 dd 3b           ra = 40, jump @966
      :                          @76 [@dyn 20]
  1084: 95 67 30                 a0 = s1 + 0x30
  1087: 7b 17 10                 u64 [sp + 0x10] = a0
  1090: 64 17                    a0 = sp
  1092: 95 18 10                 a1 = sp + 0x10
  1095: 64 59                    a2 = s0
  1097: 50 10 2a cb 3b           ra = 42, jump @966
      :                          @77 [@dyn 21]
  1102: 95 67 38                 a0 = s1 + 0x38
  1105: 7b 17 10                 u64 [sp + 0x10] = a0
  1108: 64 17                    a0 = sp
  1110: 95 18 10                 a1 = sp + 0x10
  1113: 64 59                    a2 = s0
  1115: 50 10 2c b9 3b           ra = 44, jump @966
      :                          @78 [@dyn 22]
  1120: 95 67 40                 a0 = s1 + 0x40
  1123: 7b 17 10                 u64 [sp + 0x10] = a0
  1126: 64 17                    a0 = sp
  1128: 95 18 10                 a1 = sp + 0x10
  1131: 64 59                    a2 = s0
  1133: 50 10 2e a7 3b           ra = 46, jump @966
      :                          @79 [@dyn 23]
  1138: 95 67 48                 a0 = s1 + 0x48
  1141: 7b 17 10                 u64 [sp + 0x10] = a0
  1144: 64 17                    a0 = sp
  1146: 95 18 10                 a1 = sp + 0x10
  1149: 64 59                    a2 = s0
  1151: 50 10 30 95 3b           ra = 48, jump @966
      :                          @80 [@dyn 24]
  1156: 95 67 50                 a0 = s1 + 0x50
  1159: 7b 17 10                 u64 [sp + 0x10] = a0
  1162: 64 17                    a0 = sp
  1164: 95 18 10                 a1 = sp + 0x10
  1167: 64 59                    a2 = s0
  1169: 50 10 32 83 3b           ra = 50, jump @966
      :                          @81 [@dyn 25]
  1174: 95 67 58                 a0 = s1 + 0x58
  1177: 7b 17 10                 u64 [sp + 0x10] = a0
  1180: 64 17                    a0 = sp
  1182: 95 18 10                 a1 = sp + 0x10
  1185: 64 59                    a2 = s0
  1187: 50 10 34 71 3b           ra = 52, jump @966
      :                          @82 [@dyn 26]
  1192: 95 67 60                 a0 = s1 + 0x60
  1195: 7b 17 10                 u64 [sp + 0x10] = a0
  1198: 64 17                    a0 = sp
  1200: 95 18 10                 a1 = sp + 0x10
  1203: 64 59                    a2 = s0
  1205: 50 10 36 5f 3b           ra = 54, jump @966
      :                          @83 [@dyn 27]
  1210: 33 07 01                 a0 = 0x1
  1213: 7c 18 08                 a1 = u8 [sp + 0x8]
  1216: 52 08 1a                 jump @85 if a1 != 0
      :                          @84
  1219: 82 17                    a0 = u64 [sp]
  1221: 82 78 28                 a1 = u64 [a0 + 0x28]
  1224: 82 77 20                 a0 = u64 [a0 + 0x20]
  1227: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1230: 33 08 76 06 01           a1 = 0x10676
  1235: 33 09 01                 a2 = 0x1
  1238: b4 a0 01 38              ra = 56, jump [a3]
      :                          @85 [@dyn 28]
  1242: 82 10 28                 ra = u64 [sp + 0x28]
  1245: 82 15 20                 s0 = u64 [sp + 0x20]
  1248: 82 16 18                 s1 = u64 [sp + 0x18]
  1251: 95 11 30                 sp = sp + 0x30
  1254: 32 00                    ret
      :                          @86 [export #0: 'refine']
  1256: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1260: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1264: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1268: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1272: 95 11 48 d4              sp = sp + 0xffffffffffffd448
  1276: 33 0a 00 00 01           a3 = 0x10000
  1281: 53 18 04 df 00           jump @105 if a1 <u 4
      :                          @87
  1286: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1289: 51 0b d7 00              jump @105 if a4 == 0
      :                          @88
  1293: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1296: 80 7a                    a3 = u32 [a0]
  1298: 33 06 01                 s1 = 0x1
  1301: 59 08 3d                 jump @97 if a1 >=s 0
      :                          @89
  1304: 84 88 ff 00              a1 = a1 & 0xff
  1308: 33 06 02                 s1 = 0x2
  1311: 53 28 c0 00 2d           jump @95 if a1 <u 192
      :                          @90
  1316: 33 06 03                 s1 = 0x3
  1319: 53 28 e0 00 25           jump @95 if a1 <u 224
      :                          @91
  1324: 33 06 04                 s1 = 0x4
  1327: 53 28 f0 00 1d           jump @95 if a1 <u 240
      :                          @92
  1332: 33 06 05                 s1 = 0x5
  1335: 53 28 f8 00 15           jump @95 if a1 <u 248
      :                          @93
  1340: 33 06 06                 s1 = 0x6
  1343: 53 28 fc 00 0d           jump @95 if a1 <u 252
      :                          @94
  1348: 88 88 fe 00              a1 = a1 <u 0xfe
  1352: 9a 86 08                 s1 = 0x8 - a1
  1355: 01                       fallthrough
      :                          @95
  1356: ae 6b 06                 jump @97 if a4 >=u s1
      :                          @96
  1359: 28 7c 0f                 jump @267
      :                          @97
  1362: 7b 1a 68                 u64 [sp + 0x68] = a3
  1365: 95 77 04                 a0 = a0 + 0x4
  1368: 64 68                    a1 = s1
  1370: 7b 1b 70                 u64 [sp + 0x70] = a4
  1373: 50 10 3a f6 3b           ra = 58, jump @983
      :                          @98 [@dyn 29]
  1378: 64 75                    s0 = a0
  1380: 82 17 70                 a0 = u64 [sp + 0x70]
  1383: e4 67 07                 a0 = maxu(a0, s1)
  1386: c9 67 07                 a0 = a0 - s1
  1389: d8 57 08                 a1 = a0 <u s0
  1392: e4 57 07                 a0 = maxu(a0, s0)
  1395: c9 57 07                 a0 = a0 - s0
  1398: 88 77 20                 a0 = a0 <u 0x20
  1401: d4 87 07                 a0 = a0 | a1
  1404: 52 07 5b                 jump @104 if a0 != 0
      :                          @99
  1407: 48 21 98 00              u32 [sp + 152] = 0
  1411: 49 21 90 00              u64 [sp + 144] = 0
  1415: 49 21 88 00              u64 [sp + 136] = 0
  1419: 49 21 80 00              u64 [sp + 128] = 0
  1423: 49 11 78                 u64 [sp + 120] = 0
  1426: 95 17 78                 a0 = sp + 0x78
  1429: 33 09 24                 a2 = 0x24
  1432: 33 0a 03                 a3 = 0x3
  1435: 33 08                    a1 = 0
  1437: 33 0b                    a4 = 0
  1439: 33 0c                    a5 = 0
  1441: 0a 12                    ecalli 18 // 'fetch'
  1443: 01                       fallthrough
      :                          @100
  1444: 95 1a 78                 a3 = sp + 0x78
  1447: 33 08 24                 a1 = 0x24
  1450: 53 15 08 39              jump @106 if s0 <u 8
      :                          @101
  1454: 95 17 a0 00              a0 = sp + 0xa0
  1458: 33 09 00 20              a2 = 0x2000
  1462: 33 08                    a1 = 0
  1464: 50 10 3c 04 32           ra = 60, jump @797
      :                          @102 [@dyn 30]
  1469: 95 18 78                 a1 = sp + 0x78
  1472: 95 19 a0 00              a2 = sp + 0xa0
  1476: 33 0b 00 20              a4 = 0x2000
  1480: 82 17 68                 a0 = u64 [sp + 0x68]
  1483: 33 0a                    a3 = 0
  1485: 0a 11                    ecalli 17 // 'historical_lookup'
  1487: 01                       fallthrough
      :                          @103
  1488: 95 78 01                 a1 = a0 + 0x1
  1491: 55 18 04 2b              jump @107 if a1 >=u 4
      :                          @104
  1495: 33 08                    a1 = 0
  1497: 33 0a 00 00 01           a3 = 0x10000
  1502: 28 05                    jump @106
      :                          @105
  1504: 33 08                    a1 = 0
  1506: 01                       fallthrough
      :                          @106
  1507: 64 a7                    a0 = a3
  1509: 33 09 b8 2b              a2 = 0x2bb8
  1513: c8 91 01                 sp = sp + a2
  1516: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1520: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1524: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1528: 95 11 f8 07              sp = sp + 0x7f8
  1532: 32 00                    ret
      :                          @107
  1534: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1537: 53 18 03 d6              jump @104 if a1 <u 3
      :                          @108
  1541: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1544: 51 18 06 cf              jump @104 if a1 == 6
      :                          @109
  1548: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1551: 53 18 03 c8              jump @104 if a1 <u 3
      :                          @110
  1555: 7c 18 a2 00              a1 = u8 [sp + 0xa2]
  1559: 7c 19 a1 00              a2 = u8 [sp + 0xa1]
  1563: 7c 1a a0 00              a3 = u8 [sp + 0xa0]
  1567: 97 88 10                 a1 = a1 << 0x10
  1570: 97 99 08                 a2 = a2 << 0x8
  1573: d4 98 08                 a1 = a1 | a2
  1576: d4 a8 08                 a1 = a1 | a3
  1579: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1582: ac 89 a9                 jump @104 if a2 <u a1
      :                          @111
  1585: 7c 17 a5 00              a0 = u8 [sp + 0xa5]
  1589: 7c 1a a4 00              a3 = u8 [sp + 0xa4]
  1593: 7c 1b a3 00              a4 = u8 [sp + 0xa3]
  1597: 97 77 10                 a0 = a0 << 0x10
  1600: 97 aa 08                 a3 = a3 << 0x8
  1603: d4 a7 07                 a0 = a0 | a3
  1606: d4 b7 07                 a0 = a0 | a4
  1609: c9 89 09                 a2 = a2 - a1
  1612: ac 79 8b                 jump @104 if a2 <u a0
      :                          @112
  1615: c9 79 06                 s1 = a2 - a0
  1618: 53 16 04 85              jump @104 if s1 <u 4
      :                          @113
  1622: 95 12 ab 00              t0 = sp + 0xab
  1626: c8 28 03                 t1 = a1 + t0
  1629: c8 37 0b                 a4 = a0 + t1
  1632: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1635: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1638: 7c ba                    a3 = u8 [a4]
  1640: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1643: 97 cc 10                 a5 = a5 << 0x10
  1646: 97 55 08                 s0 = s0 << 0x8
  1649: d4 5c 0c                 a5 = a5 | s0
  1652: d4 c9 09                 a2 = a2 | a5
  1655: 97 99 08                 a2 = a2 << 0x8
  1658: d4 a9 0c                 a5 = a2 | a3
  1661: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1664: ac c6 57 ff              jump @104 if s1 <u a5
      :                          @114
  1668: 7c 19 a7 00              a2 = u8 [sp + 0xa7]
  1672: 95 1a a0 20              a3 = sp + 0x20a0
  1676: 7c 14 a6 00              t2 = u8 [sp + 0xa6]
  1680: 97 99 08                 a2 = a2 << 0x8
  1683: 7c 16 aa 00              s1 = u8 [sp + 0xaa]
  1687: 7c 15 a9 00              s0 = u8 [sp + 0xa9]
  1691: d4 49 04                 t2 = a2 | t2
  1694: 7c 19 a8 00              a2 = u8 [sp + 0xa8]
  1698: 97 66 10                 s1 = s1 << 0x10
  1701: 97 55 08                 s0 = s0 << 0x8
  1704: d4 65 05                 s0 = s0 | s1
  1707: d4 59 09                 a2 = a2 | s0
  1710: 33 05 ff ef              s0 = 0xffffffffffffefff
  1714: 7b 15 70                 u64 [sp + 0x70] = s0
  1717: 95 bb 04                 a4 = a4 + 0x4
  1720: 7b a4                    u64 [a3] = t2
  1722: 7b a9 08                 u64 [a3 + 0x8] = a2
  1725: 7b a2 10                 u64 [a3 + 0x10] = t0
  1728: 7b a8 18                 u64 [a3 + 0x18] = a1
  1731: 7b a3 20                 u64 [a3 + 0x20] = t1
  1734: 7b a7 28                 u64 [a3 + 0x28] = a0
  1737: 7b ab 30                 u64 [a3 + 0x30] = a4
  1740: 7b ac 38                 u64 [a3 + 0x38] = a5
  1743: 7b aa 50                 u64 [a3 + 0x50] = a3
  1746: 33 08 16                 a1 = 0x16
  1749: 7b a8 58                 u64 [a3 + 0x58] = a1
  1752: 95 17 a8 20              a0 = sp + 0x20a8
  1756: 7b a7 60                 u64 [a3 + 0x60] = a0
  1759: 7b a8 68                 u64 [a3 + 0x68] = a1
  1762: 95 17 b0 20              a0 = sp + 0x20b0
  1766: 7b a7 70                 u64 [a3 + 0x70] = a0
  1769: 7b a8 78                 u64 [a3 + 0x78] = a1
  1772: 95 17 b8 20              a0 = sp + 0x20b8
  1776: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1780: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1784: 95 17 c0 20              a0 = sp + 0x20c0
  1788: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1792: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1796: 95 17 c8 20              a0 = sp + 0x20c8
  1800: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1804: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1808: 95 17 d0 20              a0 = sp + 0x20d0
  1812: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1816: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1820: 95 17 d8 20              a0 = sp + 0x20d8
  1824: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1828: 7b 18 68                 u64 [sp + 0x68] = a1
  1831: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1835: 33 07 c0 08 01           a0 = 0x108c0
  1840: 95 16 f8 30              s1 = sp + 0x30f8
  1844: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1848: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1853: 49 26 68 01              u64 [s1 + 360] = 0
  1857: 95 18 f0 20              a1 = sp + 0x20f0
  1861: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1865: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1870: 95 17 88 31              a0 = sp + 0x3188
  1874: 95 18 40 32              a1 = sp + 0x3240
  1878: 50 10 3e 3f 2d           ra = 62, jump @729
      :                          @115 [@dyn 31]
  1883: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1887: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1891: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1895: 33 07 02                 a0 = 0x2
  1898: 33 08                    a1 = 0
  1900: 33 09                    a2 = 0
  1902: 64 5a                    a3 = s0
  1904: 33 00 40                 ra = 0x40
  1907: 0a 64                    ecalli 100 // 'log'
  1909: 01                       fallthrough
      :                          @116 [@dyn 32]
  1910: 82 17 70                 a0 = u64 [sp + 0x70]
  1913: c8 67 07                 a0 = a0 + s1
  1916: 33 0c 40 00 03           a5 = 0x30040
  1921: 53 27 00 f0 1e           jump @122 if a0 <u 4294963200
      :                          @117
  1926: 95 c7 00 10              a0 = a5 + 0x1000
  1930: 01                       fallthrough
      :                          @118
  1931: 82 78                    a1 = u64 [a0]
  1933: c9 87 09                 a2 = a0 - a1
  1936: ab 59 0f                 jump @122 if a2 != s0
      :                          @119
  1939: c9 68 09                 a2 = a1 - s1
  1942: 01                       fallthrough
      :                          @120
  1943: 82 7a                    a3 = u64 [a0]
  1945: ab 8a f2                 jump @118 if a3 != a1
      :                          @121
  1948: 7b 79                    u64 [a0] = a2
  1950: 01                       fallthrough
      :                          @122
  1951: 7b 1c 60                 u64 [sp + 0x60] = a5
  1954: 0a                       ecalli 0 // 'gas'
  1955: 95 18 a0 20              a1 = sp + 0x20a0
  1959: 7b 87 40                 u64 [a1 + 0x40] = a0
  1962: 95 17 e0 20              a0 = sp + 0x20e0
  1966: 95 16 f8 30              s1 = sp + 0x30f8
  1970: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1974: 82 17 68                 a0 = u64 [sp + 0x68]
  1977: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1981: 33 07 40 09 01           a0 = 0x10940
  1986: 7b 17 18                 u64 [sp + 0x18] = a0
  1989: 7b 87 50                 u64 [a1 + 0x50] = a0
  1992: 95 17 88 31              a0 = sp + 0x3188
  1996: 7b 87 60                 u64 [a1 + 0x60] = a0
  1999: 49 18 58 01              u64 [a1 + 88] = 0x1
  2003: 49 18 70                 u64 [a1 + 112] = 0
  2006: 49 18 68 01              u64 [a1 + 104] = 0x1
  2010: 95 17 40 32              a0 = sp + 0x3240
  2014: 95 18 f0 20              a1 = sp + 0x20f0
  2018: 50 10 42 b3 2c           ra = 66, jump @729
      :                          @123 [@dyn 33]
  2023: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2027: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2031: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2035: 33 07 02                 a0 = 0x2
  2038: 33 08                    a1 = 0
  2040: 33 09                    a2 = 0
  2042: 64 5a                    a3 = s0
  2044: 33 00 44                 ra = 0x44
  2047: 0a 64                    ecalli 100 // 'log'
  2049: 01                       fallthrough
      :                          @124 [@dyn 34]
  2050: 82 17 70                 a0 = u64 [sp + 0x70]
  2053: c8 67 07                 a0 = a0 + s1
  2056: 53 27 00 f0 21           jump @130 if a0 <u 4294963200
      :                          @125
  2061: 82 18 60                 a1 = u64 [sp + 0x60]
  2064: 95 87 00 10              a0 = a1 + 0x1000
  2068: 01                       fallthrough
      :                          @126
  2069: 82 78                    a1 = u64 [a0]
  2071: c9 87 09                 a2 = a0 - a1
  2074: ab 59 0f                 jump @130 if a2 != s0
      :                          @127
  2077: c9 68 09                 a2 = a1 - s1
  2080: 01                       fallthrough
      :                          @128
  2081: 82 7a                    a3 = u64 [a0]
  2083: ab 8a f2                 jump @126 if a3 != a1
      :                          @129
  2086: 7b 79                    u64 [a0] = a2
  2088: 01                       fallthrough
      :                          @130
  2089: 95 15 a0 20              s0 = sp + 0x20a0
  2093: 82 57 30                 a0 = u64 [s0 + 0x30]
  2096: 82 58 38                 a1 = u64 [s0 + 0x38]
  2099: 33 09                    a2 = 0
  2101: 0a 14                    ecalli 20 // 'machine'
  2103: 7b 57 48                 u64 [s0 + 0x48] = a0
  2106: 95 17 e8 20              a0 = sp + 0x20e8
  2110: 95 16 f8 30              s1 = sp + 0x30f8
  2114: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2118: 33 07 50 09 01           a0 = 0x10950
  2123: 7b 57 50                 u64 [s0 + 0x50] = a0
  2126: 95 17 88 31              a0 = sp + 0x3188
  2130: 7b 57 60                 u64 [s0 + 0x60] = a0
  2133: 49 15 58 01              u64 [s0 + 88] = 0x1
  2137: 49 15 68 01              u64 [s0 + 104] = 0x1
  2141: 82 17 68                 a0 = u64 [sp + 0x68]
  2144: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2148: 49 15 70                 u64 [s0 + 112] = 0
  2151: 95 17 40 32              a0 = sp + 0x3240
  2155: 95 18 f0 20              a1 = sp + 0x20f0
  2159: 50 10 46 26 2c           ra = 70, jump @729
      :                          @131 [@dyn 35]
  2164: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2168: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2172: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2176: 33 07 02                 a0 = 0x2
  2179: 33 08                    a1 = 0
  2181: 33 09                    a2 = 0
  2183: 64 5a                    a3 = s0
  2185: 33 00 48                 ra = 0x48
  2188: 0a 64                    ecalli 100 // 'log'
  2190: 01                       fallthrough
      :                          @132 [@dyn 36]
  2191: 82 17 70                 a0 = u64 [sp + 0x70]
  2194: c8 67 07                 a0 = a0 + s1
  2197: 53 27 00 f0 21           jump @138 if a0 <u 4294963200
      :                          @133
  2202: 82 18 60                 a1 = u64 [sp + 0x60]
  2205: 95 87 00 10              a0 = a1 + 0x1000
  2209: 01                       fallthrough
      :                          @134
  2210: 82 78                    a1 = u64 [a0]
  2212: c9 87 09                 a2 = a0 - a1
  2215: ab 59 0f                 jump @138 if a2 != s0
      :                          @135
  2218: c9 68 09                 a2 = a1 - s1
  2221: 01                       fallthrough
      :                          @136
  2222: 82 7a                    a3 = u64 [a0]
  2224: ab 8a f2                 jump @134 if a3 != a1
      :                          @137
  2227: 7b 79                    u64 [a0] = a2
  2229: 01                       fallthrough
      :                          @138
  2230: 95 19 a0 20              a2 = sp + 0x20a0
  2234: 82 97                    a0 = u64 [a2]
  2236: 7b 17 48                 u64 [sp + 0x48] = a0
  2239: 82 97 08                 a0 = u64 [a2 + 0x8]
  2242: 7b 17 40                 u64 [sp + 0x40] = a0
  2245: 82 97 10                 a0 = u64 [a2 + 0x10]
  2248: 7b 17 38                 u64 [sp + 0x38] = a0
  2251: 82 95 18                 s0 = u64 [a2 + 0x18]
  2254: 82 98 20                 a1 = u64 [a2 + 0x20]
  2257: 7b 18 30                 u64 [sp + 0x30] = a1
  2260: 80 97 48                 a0 = u32 [a2 + 0x48]
  2263: 82 96 28                 s1 = u64 [a2 + 0x28]
  2266: 49 11 50 ff 0f           u64 [sp + 80] = 0xfff
  2271: 95 59 ff 0f              a2 = s0 + 0xfff
  2275: 98 99 0c                 a2 = a2 >> 0xc
  2278: 33 08 10                 a1 = 0x10
  2281: 7b 17 58                 u64 [sp + 0x58] = a0
  2284: 0a 17                    ecalli 23 // 'zero'
  2286: 01                       fallthrough
      :                          @139
  2287: 51 07 17                 jump @141 if a0 == 0
      :                          @140
  2290: 33 0a 65 08 01           a3 = 0x10865
  2295: 33 07 02                 a0 = 0x2
  2298: 33 0b 3e                 a4 = 0x3e
  2301: 33 08                    a1 = 0
  2303: 33 09                    a2 = 0
  2305: 0a 64                    ecalli 100 // 'log'
  2307: 28 e0 00                 jump @154
      :                          @141
  2310: 7b 16 28                 u64 [sp + 0x28] = s1
  2313: 82 17 50                 a0 = u64 [sp + 0x50]
  2316: c8 67 07                 a0 = a0 + s1
  2319: 98 77 0c                 a0 = a0 >> 0xc
  2322: 82 19 48                 a2 = u64 [sp + 0x48]
  2325: c8 79 09                 a2 = a2 + a0
  2328: 7b 15 48                 u64 [sp + 0x48] = s0
  2331: 95 57 ff ff 00           a0 = s0 + 0xffff
  2336: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2341: 95 75 00 00 02           s0 = a0 + 0x20000
  2346: 98 58 0c                 a1 = s0 >> 0xc
  2349: 82 17 58                 a0 = u64 [sp + 0x58]
  2352: 0a 17                    ecalli 23 // 'zero'
  2354: 01                       fallthrough
      :                          @142
  2355: 51 07 17                 jump @144 if a0 == 0
      :                          @143
  2358: 33 0a 27 08 01           a3 = 0x10827
  2363: 33 07 02                 a0 = 0x2
  2366: 33 0b 3e                 a4 = 0x3e
  2369: 33 08                    a1 = 0
  2371: 33 09                    a2 = 0
  2373: 0a 64                    ecalli 100 // 'log'
  2375: 28 9c 00                 jump @154
      :                          @144
  2378: 82 16 50                 s1 = u64 [sp + 0x50]
  2381: 82 17 40                 a0 = u64 [sp + 0x40]
  2384: c8 76 06                 s1 = s1 + a0
  2387: 98 69 0c                 a2 = s1 >> 0xc
  2390: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2394: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2404: c9 78 08                 a1 = a1 - a0
  2407: 98 88 0c                 a1 = a1 >> 0xc
  2410: 82 17 58                 a0 = u64 [sp + 0x58]
  2413: 0a 17                    ecalli 23 // 'zero'
  2415: 01                       fallthrough
      :                          @145
  2416: 51 07 16                 jump @147 if a0 == 0
      :                          @146
  2419: 33 0a eb 07 01           a3 = 0x107eb
  2424: 33 07 02                 a0 = 0x2
  2427: 33 0b 3c                 a4 = 0x3c
  2430: 33 08                    a1 = 0
  2432: 33 09                    a2 = 0
  2434: 0a 64                    ecalli 100 // 'log'
  2436: 28 5f                    jump @154
      :                          @147
  2438: 33 09 00 00 01           a2 = 0x10000
  2443: 82 17 58                 a0 = u64 [sp + 0x58]
  2446: 82 18 38                 a1 = u64 [sp + 0x38]
  2449: 82 1a 48                 a3 = u64 [sp + 0x48]
  2452: 0a 16                    ecalli 22 // 'poke'
  2454: 01                       fallthrough
      :                          @148
  2455: 51 07 16                 jump @150 if a0 == 0
      :                          @149
  2458: 33 0a ad 07 01           a3 = 0x107ad
  2463: 33 07 02                 a0 = 0x2
  2466: 33 0b 3e                 a4 = 0x3e
  2469: 33 08                    a1 = 0
  2471: 33 09                    a2 = 0
  2473: 0a 64                    ecalli 100 // 'log'
  2475: 28 38                    jump @154
      :                          @150
  2477: 82 17 58                 a0 = u64 [sp + 0x58]
  2480: 82 18 30                 a1 = u64 [sp + 0x30]
  2483: 64 59                    a2 = s0
  2485: 82 1a 28                 a3 = u64 [sp + 0x28]
  2488: 0a 16                    ecalli 22 // 'poke'
  2490: 01                       fallthrough
      :                          @151
  2491: 51 07 16                 jump @153 if a0 == 0
      :                          @152
  2494: 33 0a 6f 07 01           a3 = 0x1076f
  2499: 33 07 02                 a0 = 0x2
  2502: 33 0b 3e                 a4 = 0x3e
  2505: 33 08                    a1 = 0
  2507: 33 09                    a2 = 0
  2509: 0a 64                    ecalli 100 // 'log'
  2511: 28 14                    jump @154
      :                          @153
  2513: 33 0a 41 07 01           a3 = 0x10741
  2518: 33 07 02                 a0 = 0x2
  2521: 33 0b 2e                 a4 = 0x2e
  2524: 33 08                    a1 = 0
  2526: 33 09                    a2 = 0
  2528: 0a 64                    ecalli 100 // 'log'
  2530: 01                       fallthrough
      :                          @154
  2531: 95 16 f8 30              s1 = sp + 0x30f8
  2535: 33 05 08 10              s0 = 0x1008
  2539: 95 17 f0 20              a0 = sp + 0x20f0
  2543: 33 08                    a1 = 0
  2545: 33 09 08 10              a2 = 0x1008
  2549: 50 10 4a c7 2d           ra = 74, jump @797
      :                          @155 [@dyn 37]
  2554: 49 06                    u64 [s1 + 0] = 0
  2556: 95 17 f8 20              a0 = sp + 0x20f8
  2560: 7b 67 08                 u64 [s1 + 0x8] = a0
  2563: 49 16 10                 u64 [s1 + 16] = 0
  2566: 49 16 18                 u64 [s1 + 24] = 0
  2569: 95 17 f0 20              a0 = sp + 0x20f0
  2573: 33 0a 06                 a3 = 0x6
  2576: 33 08                    a1 = 0
  2578: 7b 15 58                 u64 [sp + 0x58] = s0
  2581: 64 59                    a2 = s0
  2583: 33 0b                    a4 = 0
  2585: 33 0c                    a5 = 0
  2587: 0a 12                    ecalli 18 // 'fetch'
  2589: 01                       fallthrough
      :                          @156
  2590: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2594: 33 08 28 00 01           a1 = 0x10028
  2599: 7b 18 50                 u64 [sp + 0x50] = a1
  2602: 51 17 ff 53 02           jump @183 if a0 == 4294967295
      :                          @157
  2607: 33 07 60 09 01           a0 = 0x10960
  2612: 7b 17 48                 u64 [sp + 0x48] = a0
  2615: 33 07 80 09 01           a0 = 0x10980
  2620: 7b 17 40                 u64 [sp + 0x40] = a0
  2623: 33 07 b0 09 01           a0 = 0x109b0
  2628: 7b 17 38                 u64 [sp + 0x38] = a0
  2631: 28 27                    jump @160
      :                          @158
  2633: 95 16 f8 30              s1 = sp + 0x30f8
  2637: 82 6b                    a4 = u64 [s1]
  2639: 95 bb 01                 a4 = a4 + 0x1
  2642: 7b 6b                    u64 [s1] = a4
  2644: 95 17 f0 20              a0 = sp + 0x20f0
  2648: 33 0a 06                 a3 = 0x6
  2651: 33 08                    a1 = 0
  2653: 82 19 58                 a2 = u64 [sp + 0x58]
  2656: 33 0c                    a5 = 0
  2658: 0a 12                    ecalli 18 // 'fetch'
  2660: 01                       fallthrough
      :                          @159
  2661: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2665: 51 17 ff 14 02           jump @183 if a0 == 4294967295
      :                          @160
  2670: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2674: 82 17 68                 a0 = u64 [sp + 0x68]
  2677: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2681: 95 18 60 33              a1 = sp + 0x3360
  2685: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2689: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2693: 82 17 48                 a0 = u64 [sp + 0x48]
  2696: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2700: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2705: 49 26 68 01              u64 [s1 + 360] = 0
  2709: 95 18 88 31              a1 = sp + 0x3188
  2713: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2717: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2722: 95 17 20 31              a0 = sp + 0x3120
  2726: 95 18 40 32              a1 = sp + 0x3240
  2730: 50 10 4c eb 29           ra = 76, jump @729
      :                          @161 [@dyn 38]
  2735: 95 17 f8 30              a0 = sp + 0x30f8
  2739: 82 76 30                 s1 = u64 [a0 + 0x30]
  2742: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2745: 82 75 28                 s0 = u64 [a0 + 0x28]
  2748: 33 07 02                 a0 = 0x2
  2751: 33 08                    a1 = 0
  2753: 33 09                    a2 = 0
  2755: 64 6a                    a3 = s1
  2757: 33 00 4e                 ra = 0x4e
  2760: 0a 64                    ecalli 100 // 'log'
  2762: 01                       fallthrough
      :                          @162 [@dyn 39]
  2763: 82 17 70                 a0 = u64 [sp + 0x70]
  2766: c8 57 07                 a0 = a0 + s0
  2769: 82 1c 60                 a5 = u64 [sp + 0x60]
  2772: 33 02 00 10              t0 = 0x1000
  2776: 53 27 00 f0 1c           jump @167 if a0 <u 4294963200
      :                          @163
  2781: c8 2c 08                 a1 = a5 + t0
  2784: 82 87                    a0 = u64 [a1]
  2786: c9 78 09                 a2 = a1 - a0
  2789: ab 69 0f                 jump @167 if a2 != s1
      :                          @164
  2792: c9 57 09                 a2 = a0 - s0
  2795: 01                       fallthrough
      :                          @165
  2796: 82 8a                    a3 = u64 [a1]
  2798: ab 7a ef                 jump @163 if a3 != a0
      :                          @166
  2801: 7b 89                    u64 [a1] = a2
  2803: 01                       fallthrough
      :                          @167
  2804: 95 18 a0 20              a1 = sp + 0x20a0
  2808: 80 87 50                 a0 = u32 [a1 + 0x50]
  2811: 80 88 54                 a1 = u32 [a1 + 0x54]
  2814: 95 15 f8 30              s0 = sp + 0x30f8
  2818: 7b 57 10                 u64 [s0 + 0x10] = a0
  2821: 7b 58 18                 u64 [s0 + 0x18] = a1
  2824: 33 09 01                 a2 = 0x1
  2827: 0a 17                    ecalli 23 // 'zero'
  2829: 7b 57 48 02              u64 [s0 + 0x248] = a0
  2833: 95 17 08 31              a0 = sp + 0x3108
  2837: 7b 57 48 01              u64 [s0 + 0x148] = a0
  2841: 82 17 68                 a0 = u64 [sp + 0x68]
  2844: 7b 57 50 01              u64 [s0 + 0x150] = a0
  2848: 95 18 10 31              a1 = sp + 0x3110
  2852: 7b 58 58 01              u64 [s0 + 0x158] = a1
  2856: 7b 57 60 01              u64 [s0 + 0x160] = a0
  2860: 95 18 40 33              a1 = sp + 0x3340
  2864: 7b 58 68 01              u64 [s0 + 0x168] = a1
  2868: 7b 57 70 01              u64 [s0 + 0x170] = a0
  2872: 82 17 40                 a0 = u64 [sp + 0x40]
  2875: 7b 57 90 00              u64 [s0 + 0x90] = a0
  2879: 49 25 98 00 03           u64 [s0 + 152] = 0x3
  2884: 49 25 b0 00              u64 [s0 + 176] = 0
  2888: 95 17 40 32              a0 = sp + 0x3240
  2892: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  2896: 49 25 a8 00 03           u64 [s0 + 168] = 0x3
  2901: 95 17 20 31              a0 = sp + 0x3120
  2905: 95 18 88 31              a1 = sp + 0x3188
  2909: 50 10 50 38 29           ra = 80, jump @729
      :                          @168 [@dyn 40]
  2914: 82 56 30                 s1 = u64 [s0 + 0x30]
  2917: 82 5b 38                 a4 = u64 [s0 + 0x38]
  2920: 82 55 28                 s0 = u64 [s0 + 0x28]
  2923: 33 07 02                 a0 = 0x2
  2926: 33 08                    a1 = 0
  2928: 33 09                    a2 = 0
  2930: 64 6a                    a3 = s1
  2932: 33 00 52                 ra = 0x52
  2935: 0a 64                    ecalli 100 // 'log'
  2937: 01                       fallthrough
      :                          @169 [@dyn 41]
  2938: 33 02 00 10              t0 = 0x1000
  2942: 82 1c 60                 a5 = u64 [sp + 0x60]
  2945: 82 17 70                 a0 = u64 [sp + 0x70]
  2948: c8 57 07                 a0 = a0 + s0
  2951: 53 27 00 f0 1c           jump @174 if a0 <u 4294963200
      :                          @170
  2956: c8 2c 08                 a1 = a5 + t0
  2959: 82 87                    a0 = u64 [a1]
  2961: c9 78 09                 a2 = a1 - a0
  2964: ab 69 0f                 jump @174 if a2 != s1
      :                          @171
  2967: c9 57 09                 a2 = a0 - s0
  2970: 01                       fallthrough
      :                          @172
  2971: 82 8a                    a3 = u64 [a1]
  2973: ab 7a ef                 jump @170 if a3 != a0
      :                          @173
  2976: 7b 89                    u64 [a1] = a2
  2978: 01                       fallthrough
      :                          @174
  2979: 95 15 f8 30              s0 = sp + 0x30f8
  2983: 82 59 18                 a2 = u64 [s0 + 0x18]
  2986: 82 57 10                 a0 = u64 [s0 + 0x10]
  2989: 95 18 f0 20              a1 = sp + 0x20f0
  2993: 7b 58 78 02              u64 [s0 + 0x278] = a1
  2997: 97 99 0c                 a2 = a2 << 0xc
  3000: 7b 59 88 02              u64 [s0 + 0x288] = a2
  3004: 33 0a 00 10              a3 = 0x1000
  3008: 95 18 f8 20              a1 = sp + 0x20f8
  3012: 0a 16                    ecalli 22 // 'poke'
  3014: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3018: 95 17 08 31              a0 = sp + 0x3108
  3022: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3026: 82 17 68                 a0 = u64 [sp + 0x68]
  3029: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3033: 95 18 70 33              a1 = sp + 0x3370
  3037: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3041: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3045: 95 18 80 33              a1 = sp + 0x3380
  3049: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3053: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3057: 82 18 50                 a1 = u64 [sp + 0x50]
  3060: 7b 58 78 01              u64 [s0 + 0x178] = a1
  3064: 7b 57 80 01              u64 [s0 + 0x180] = a0
  3068: 95 18 00 32              a1 = sp + 0x3200
  3072: 7b 58 88 01              u64 [s0 + 0x188] = a1
  3076: 7b 57 90 01              u64 [s0 + 0x190] = a0
  3080: 82 17 38                 a0 = u64 [sp + 0x38]
  3083: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3087: 49 25 98 00 05           u64 [s0 + 152] = 0x5
  3092: 49 25 b0 00              u64 [s0 + 176] = 0
  3096: 95 17 40 32              a0 = sp + 0x3240
  3100: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  3104: 49 25 a8 00 05           u64 [s0 + 168] = 0x5
  3109: 95 17 20 31              a0 = sp + 0x3120
  3113: 95 18 88 31              a1 = sp + 0x3188
  3117: 50 10 54 68 28           ra = 84, jump @729
      :                          @175 [@dyn 42]
  3122: 82 56 30                 s1 = u64 [s0 + 0x30]
  3125: 82 5b 38                 a4 = u64 [s0 + 0x38]
  3128: 82 55 28                 s0 = u64 [s0 + 0x28]
  3131: 33 07 02                 a0 = 0x2
  3134: 33 08                    a1 = 0
  3136: 33 09                    a2 = 0
  3138: 64 6a                    a3 = s1
  3140: 33 00 56                 ra = 0x56
  3143: 0a 64                    ecalli 100 // 'log'
  3145: 01                       fallthrough
      :                          @176 [@dyn 43]
  3146: 33 02 00 10              t0 = 0x1000
  3150: 82 1c 60                 a5 = u64 [sp + 0x60]
  3153: 82 17 70                 a0 = u64 [sp + 0x70]
  3156: c8 57 07                 a0 = a0 + s0
  3159: 53 27 00 f0 f2 fd        jump @158 if a0 <u 4294963200
      :                          @177
  3165: c8 2c 08                 a1 = a5 + t0
  3168: 82 87                    a0 = u64 [a1]
  3170: c9 78 09                 a2 = a1 - a0
  3173: ab 69 e4 fd              jump @158 if a2 != s1
      :                          @178
  3177: c9 57 09                 a2 = a0 - s0
  3180: 01                       fallthrough
      :                          @179
  3181: 82 8a                    a3 = u64 [a1]
  3183: ab 7a ee                 jump @177 if a3 != a0
      :                          @180
  3186: 7b 89                    u64 [a1] = a2
  3188: 33 0b                    a4 = 0
  3190: 01                       fallthrough
      :                          @181
  3191: ab 7a e6                 jump @177 if a3 != a0
      :                          @182
  3194: 28 cf fd                 jump @158
      :                          @183
  3197: 82 69 18                 a2 = u64 [s1 + 0x18]
  3200: 95 9a 01                 a3 = a2 + 0x1
  3203: 82 67 10                 a0 = u64 [s1 + 0x10]
  3206: 33 08 f0 ef 0f           a1 = 0xfeff0
  3211: db 9a 08                 a1 = a3 if a2 != 0
  3214: 7b 68 18                 u64 [s1 + 0x18] = a1
  3217: 33 09 01                 a2 = 0x1
  3220: 0a 17                    ecalli 23 // 'zero'
  3222: 7b 67 20                 u64 [s1 + 0x20] = a0
  3225: 95 17 08 31              a0 = sp + 0x3108
  3229: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3233: 95 17 10 31              a0 = sp + 0x3110
  3237: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3241: 95 17 18 31              a0 = sp + 0x3118
  3245: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3249: 33 07 00 0a 01           a0 = 0x10a00
  3254: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3258: 95 17 40 32              a0 = sp + 0x3240
  3262: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  3266: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3271: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3276: 82 17 68                 a0 = u64 [sp + 0x68]
  3279: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3283: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3287: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3291: 49 26 b0 00              u64 [s1 + 176] = 0
  3295: 95 17 20 31              a0 = sp + 0x3120
  3299: 95 18 88 31              a1 = sp + 0x3188
  3303: 50 10 58 ae 27           ra = 88, jump @729
      :                          @184 [@dyn 44]
  3308: 82 65 30                 s0 = u64 [s1 + 0x30]
  3311: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3314: 95 17 f8 30              a0 = sp + 0x30f8
  3318: 82 76 28                 s1 = u64 [a0 + 0x28]
  3321: 33 07 02                 a0 = 0x2
  3324: 33 08                    a1 = 0
  3326: 33 09                    a2 = 0
  3328: 64 5a                    a3 = s0
  3330: 33 00 5a                 ra = 0x5a
  3333: 0a 64                    ecalli 100 // 'log'
  3335: 01                       fallthrough
      :                          @185 [@dyn 45]
  3336: 82 17 70                 a0 = u64 [sp + 0x70]
  3339: c8 67 07                 a0 = a0 + s1
  3342: 53 27 00 f0 23           jump @191 if a0 <u 4294963200
      :                          @186
  3347: 82 18 60                 a1 = u64 [sp + 0x60]
  3350: 95 87 00 10              a0 = a1 + 0x1000
  3354: 01                       fallthrough
      :                          @187
  3355: 82 78                    a1 = u64 [a0]
  3357: c9 87 09                 a2 = a0 - a1
  3360: ab 59 11                 jump @191 if a2 != s0
      :                          @188
  3363: c9 68 09                 a2 = a1 - s1
  3366: 01                       fallthrough
      :                          @189
  3367: 82 7a                    a3 = u64 [a0]
  3369: ab 8a f2                 jump @187 if a3 != a1
      :                          @190
  3372: 7b 79                    u64 [a0] = a2
  3374: 33 0b                    a4 = 0
  3376: 01                       fallthrough
      :                          @191
  3377: 95 16 f8 30              s1 = sp + 0x30f8
  3381: 49 16 58                 u64 [s1 + 88] = 0
  3384: 49 16 50                 u64 [s1 + 80] = 0
  3387: 49 16 48                 u64 [s1 + 72] = 0
  3390: 49 16 40                 u64 [s1 + 64] = 0
  3393: 49 16 38                 u64 [s1 + 56] = 0
  3396: 49 16 70                 u64 [s1 + 112] = 0
  3399: 49 16 78                 u64 [s1 + 120] = 0
  3402: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3412: 7b 67 28                 u64 [s1 + 0x28] = a0
  3415: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3425: 7b 67 30                 u64 [s1 + 0x30] = a0
  3428: 82 67                    a0 = u64 [s1]
  3430: 49 26 80 00              u64 [s1 + 128] = 0
  3434: 49 26 88 00              u64 [s1 + 136] = 0
  3438: 49 16 68                 u64 [s1 + 104] = 0
  3441: 7b 67 60                 u64 [s1 + 0x60] = a0
  3444: 95 17 20 31              a0 = sp + 0x3120
  3448: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3452: 33 07 1a                 a0 = 0x1a
  3455: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3459: 33 07 30 0a 01           a0 = 0x10a30
  3464: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3468: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3473: 49 26 68 01              u64 [s1 + 360] = 0
  3477: 95 17 00 32              a0 = sp + 0x3200
  3481: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3485: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3490: 95 17 88 31              a0 = sp + 0x3188
  3494: 95 18 40 32              a1 = sp + 0x3240
  3498: 50 10 5c eb 26           ra = 92, jump @729
      :                          @192 [@dyn 46]
  3503: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3507: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3511: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3515: 33 07 02                 a0 = 0x2
  3518: 33 08                    a1 = 0
  3520: 33 09                    a2 = 0
  3522: 64 5a                    a3 = s0
  3524: 33 00 5e                 ra = 0x5e
  3527: 0a 64                    ecalli 100 // 'log'
  3529: 01                       fallthrough
      :                          @193 [@dyn 47]
  3530: 82 17 70                 a0 = u64 [sp + 0x70]
  3533: c8 67 07                 a0 = a0 + s1
  3536: 82 13 60                 t1 = u64 [sp + 0x60]
  3539: 53 27 00 f0 1e           jump @199 if a0 <u 4294963200
      :                          @194
  3544: 95 37 00 10              a0 = t1 + 0x1000
  3548: 01                       fallthrough
      :                          @195
  3549: 82 78                    a1 = u64 [a0]
  3551: c9 87 09                 a2 = a0 - a1
  3554: ab 59 0f                 jump @199 if a2 != s0
      :                          @196
  3557: c9 68 09                 a2 = a1 - s1
  3560: 01                       fallthrough
      :                          @197
  3561: 82 7a                    a3 = u64 [a0]
  3563: ab 8a f2                 jump @195 if a3 != a1
      :                          @198
  3566: 7b 79                    u64 [a0] = a2
  3568: 01                       fallthrough
      :                          @199
  3569: 95 1c f8 30              a5 = sp + 0x30f8
  3573: 82 c7 28                 a0 = u64 [a5 + 0x28]
  3576: 82 c8 30                 a1 = u64 [a5 + 0x30]
  3579: 82 c9 38                 a2 = u64 [a5 + 0x38]
  3582: 82 ca 40                 a3 = u64 [a5 + 0x40]
  3585: 82 cb 48                 a4 = u64 [a5 + 0x48]
  3588: 82 c2 50                 t0 = u64 [a5 + 0x50]
  3591: 82 c6 58                 s1 = u64 [a5 + 0x58]
  3594: 49 2c 90 00 00 00 01     u64 [a5 + 144] = 0x10000
  3601: 82 c5 60                 s0 = u64 [a5 + 0x60]
  3604: 7b c7 98 00              u64 [a5 + 0x98] = a0
  3608: 82 c7 68                 a0 = u64 [a5 + 0x68]
  3611: 7b c8 a0 00              u64 [a5 + 0xa0] = a1
  3615: 82 c8 70                 a1 = u64 [a5 + 0x70]
  3618: 7b c9 a8 00              u64 [a5 + 0xa8] = a2
  3622: 82 c9 78                 a2 = u64 [a5 + 0x78]
  3625: 7b ca b0 00              u64 [a5 + 0xb0] = a3
  3629: 82 ca 80 00              a3 = u64 [a5 + 0x80]
  3633: 7b cb b8 00              u64 [a5 + 0xb8] = a4
  3637: 82 cb 88 00              a4 = u64 [a5 + 0x88]
  3641: 7b c2 c0 00              u64 [a5 + 0xc0] = t0
  3645: 7b c6 c8 00              u64 [a5 + 0xc8] = s1
  3649: 95 16 f8 30              s1 = sp + 0x30f8
  3653: 7b 65 d0 00              u64 [s1 + 0xd0] = s0
  3657: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  3661: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  3665: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
  3669: 7b 6a f0 00              u64 [s1 + 0xf0] = a3
  3673: 7b 6b f8 00              u64 [s1 + 0xf8] = a4
  3677: 33 07 40 0a 01           a0 = 0x10a40
  3682: 7b 17 48                 u64 [sp + 0x48] = a0
  3685: 95 37 00 10              a0 = t1 + 0x1000
  3689: 7b 17 40                 u64 [sp + 0x40] = a0
  3692: 01                       fallthrough
      :                          @200
  3693: 95 17 a0 20              a0 = sp + 0x20a0
  3697: 82 77 48                 a0 = u64 [a0 + 0x48]
  3700: 95 18 88 31              a1 = sp + 0x3188
  3704: 0a 19                    ecalli 25 // 'invoke'
  3706: 7b 18 58                 u64 [sp + 0x58] = a1
  3709: 7b 67 00 01              u64 [s1 + 0x100] = a0
  3713: 95 17 e8 20              a0 = sp + 0x20e8
  3717: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3721: 82 17 68                 a0 = u64 [sp + 0x68]
  3724: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3728: 95 18 f8 31              a1 = sp + 0x31f8
  3732: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3736: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3740: 95 18 e0 20              a1 = sp + 0x20e0
  3744: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3748: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3752: 82 17 48                 a0 = u64 [sp + 0x48]
  3755: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3759: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  3764: 49 26 28 01              u64 [s1 + 296] = 0
  3768: 95 17 40 32              a0 = sp + 0x3240
  3772: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3776: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  3781: 95 17 80 33              a0 = sp + 0x3380
  3785: 95 18 00 32              a1 = sp + 0x3200
  3789: 50 10 60 c8 25           ra = 96, jump @729
      :                          @201 [@dyn 48]
  3794: 82 65 90 02              s0 = u64 [s1 + 0x290]
  3798: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  3802: 95 17 f8 30              a0 = sp + 0x30f8
  3806: 82 76 88 02              s1 = u64 [a0 + 0x288]
  3810: 33 07 02                 a0 = 0x2
  3813: 33 08                    a1 = 0
  3815: 33 09                    a2 = 0
  3817: 64 5a                    a3 = s0
  3819: 33 00 62                 ra = 0x62
  3822: 0a 64                    ecalli 100 // 'log'
  3824: 01                       fallthrough
      :                          @202 [@dyn 49]
  3825: 82 17 70                 a0 = u64 [sp + 0x70]
  3828: c8 67 07                 a0 = a0 + s1
  3831: 82 1b 40                 a4 = u64 [sp + 0x40]
  3834: 53 27 00 f0 19           jump @207 if a0 <u 4294963200
      :                          @203
  3839: 82 b7                    a0 = u64 [a4]
  3841: c9 7b 08                 a1 = a4 - a0
  3844: ab 58 0f                 jump @207 if a1 != s0
      :                          @204
  3847: c9 67 08                 a1 = a0 - s1
  3850: 01                       fallthrough
      :                          @205
  3851: 82 b9                    a2 = u64 [a4]
  3853: ab 79 f2                 jump @203 if a2 != a0
      :                          @206
  3856: 7b b8                    u64 [a4] = a1
  3858: 01                       fallthrough
      :                          @207
  3859: 95 16 f8 30              s1 = sp + 0x30f8
  3863: 82 67 00 01              a0 = u64 [s1 + 0x100]
  3867: 51 07 ae 00              jump @212 if a0 == 0
      :                          @208
  3871: 85 77 03                 a0 = a0 ^ 0x3
  3874: 82 18 58                 a1 = u64 [sp + 0x58]
  3877: 85 88 64                 a1 = a1 ^ 0x64
  3880: d4 87 07                 a0 = a0 | a1
  3883: 52 07 42 ff              jump @200 if a0 != 0
      :                          @209
  3887: 95 17 20 31              a0 = sp + 0x3120
  3891: 33 09 68                 a2 = 0x68
  3894: 95 18 90 31              a1 = sp + 0x3190
  3898: 50 10 64 d0 27           ra = 100, jump @779
      :                          @210 [@dyn 50]
  3903: 82 67 60                 a0 = u64 [s1 + 0x60]
  3906: 7b 17 58                 u64 [sp + 0x58] = a0
  3909: 82 67 68                 a0 = u64 [s1 + 0x68]
  3912: 7b 17 28                 u64 [sp + 0x28] = a0
  3915: 82 65 70                 s0 = u64 [s1 + 0x70]
  3918: 7b 15 20                 u64 [sp + 0x20] = s0
  3921: 82 67 78                 a0 = u64 [s1 + 0x78]
  3924: 7b 17 38                 u64 [sp + 0x38] = a0
  3927: 82 67 80 00              a0 = u64 [s1 + 0x80]
  3931: 7b 17 30                 u64 [sp + 0x30] = a0
  3934: 49 26 40 01              u64 [s1 + 320] = 0
  3938: 49 26 38 01              u64 [s1 + 312] = 0
  3942: 49 26 30 01              u64 [s1 + 304] = 0
  3946: 49 26 28 01              u64 [s1 + 296] = 0
  3950: 49 26 20 01              u64 [s1 + 288] = 0
  3954: 49 26 18 01              u64 [s1 + 280] = 0
  3958: 49 26 10 01              u64 [s1 + 272] = 0
  3962: 49 26 08 01              u64 [s1 + 264] = 0
  3966: 95 17 40 32              a0 = sp + 0x3240
  3970: 33 09 00 01              a2 = 0x100
  3974: 33 08                    a1 = 0
  3976: 50 10 66 34 28           ra = 102, jump @797
      :                          @211 [@dyn 51]
  3981: 95 17 a0 20              a0 = sp + 0x20a0
  3985: 82 77 48                 a0 = u64 [a0 + 0x48]
  3988: 95 18 00 32              a1 = sp + 0x3200
  3992: 82 19 28                 a2 = u64 [sp + 0x28]
  3995: 64 5a                    a3 = s0
  3997: 0a 15                    ecalli 21 // 'peek'
  3999: 95 17 a0 20              a0 = sp + 0x20a0
  4003: 82 77 48                 a0 = u64 [a0 + 0x48]
  4006: 95 18 40 32              a1 = sp + 0x3240
  4010: 82 19 38                 a2 = u64 [sp + 0x38]
  4013: 82 15 30                 s0 = u64 [sp + 0x30]
  4016: 64 5a                    a3 = s0
  4018: 0a 15                    ecalli 21 // 'peek'
  4020: 95 18 00 32              a1 = sp + 0x3200
  4024: 95 1a 40 32              a3 = sp + 0x3240
  4028: 82 17 58                 a0 = u64 [sp + 0x58]
  4031: 82 19 20                 a2 = u64 [sp + 0x20]
  4034: 64 5b                    a4 = s0
  4036: 0a 64                    ecalli 100 // 'log'
  4038: 28 a7 fe                 jump @200
      :                          @212
  4041: 0a                       ecalli 0 // 'gas'
  4042: 95 18 a0 20              a1 = sp + 0x20a0
  4046: 7b 87 40                 u64 [a1 + 0x40] = a0
  4049: 95 17 e0 20              a0 = sp + 0x20e0
  4053: 7b 67 88 02              u64 [s1 + 0x288] = a0
  4057: 82 17 18                 a0 = u64 [sp + 0x18]
  4060: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4064: 95 17 80 33              a0 = sp + 0x3380
  4068: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4072: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4077: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4082: 82 17 68                 a0 = u64 [sp + 0x68]
  4085: 7b 67 90 02              u64 [s1 + 0x290] = a0
  4089: 49 26 68 01              u64 [s1 + 360] = 0
  4093: 95 17 00 32              a0 = sp + 0x3200
  4097: 95 18 40 32              a1 = sp + 0x3240
  4101: 50 10 68 90 24           ra = 104, jump @729
      :                          @213 [@dyn 52]
  4106: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4110: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4114: 95 17 f8 30              a0 = sp + 0x30f8
  4118: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4122: 33 07 02                 a0 = 0x2
  4125: 33 08                    a1 = 0
  4127: 33 09                    a2 = 0
  4129: 64 5a                    a3 = s0
  4131: 33 00 6a                 ra = 0x6a
  4134: 0a 64                    ecalli 100 // 'log'
  4136: 01                       fallthrough
      :                          @214 [@dyn 53]
  4137: 82 17 70                 a0 = u64 [sp + 0x70]
  4140: c8 67 07                 a0 = a0 + s1
  4143: 53 27 00 f0 23           jump @220 if a0 <u 4294963200
      :                          @215
  4148: 82 18 60                 a1 = u64 [sp + 0x60]
  4151: 95 87 00 10              a0 = a1 + 0x1000
  4155: 01                       fallthrough
      :                          @216
  4156: 82 78                    a1 = u64 [a0]
  4158: c9 87 09                 a2 = a0 - a1
  4161: ab 59 11                 jump @220 if a2 != s0
      :                          @217
  4164: c9 68 09                 a2 = a1 - s1
  4167: 01                       fallthrough
      :                          @218
  4168: 82 7a                    a3 = u64 [a0]
  4170: ab 8a f2                 jump @216 if a3 != a1
      :                          @219
  4173: 7b 79                    u64 [a0] = a2
  4175: 33 0b                    a4 = 0
  4177: 01                       fallthrough
      :                          @220
  4178: 95 17 a0 20              a0 = sp + 0x20a0
  4182: 82 77 48                 a0 = u64 [a0 + 0x48]
  4185: 95 16 f8 30              s1 = sp + 0x30f8
  4189: 48 26 50 02              u32 [s1 + 592] = 0
  4193: 49 26 48 02              u64 [s1 + 584] = 0
  4197: 82 69                    a2 = u64 [s1]
  4199: 7a 67 54 02              u32 [s1 + 0x254] = a0
  4203: 33 08 0e                 a1 = 0xe
  4206: 7b 18 48                 u64 [sp + 0x48] = a1
  4209: 7b 19 40                 u64 [sp + 0x40] = a2
  4212: 51 19 ff ff 02           jump @250 if a2 == 4294967295
      :                          @221
  4217: 33 08                    a1 = 0
  4219: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4229: 7b 19 38                 u64 [sp + 0x38] = a2
  4232: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4242: 7b 17 30                 u64 [sp + 0x30] = a0
  4245: 33 07 d0 0a 01           a0 = 0x10ad0
  4250: 7b 17 28                 u64 [sp + 0x28] = a0
  4253: 49 11 20 f0 ef 0f        u64 [sp + 32] = 0xfeff0
  4259: 33 07 02                 a0 = 0x2
  4262: 7b 17 18                 u64 [sp + 0x18] = a0
  4265: 33 07 12                 a0 = 0x12
  4268: 7b 17 10                 u64 [sp + 0x10] = a0
  4271: 33 07 20 0b 01           a0 = 0x10b20
  4276: 7b 17 08                 u64 [sp + 0x8] = a0
  4279: 28 13                    jump @223
      :                          @222
  4281: 82 19 58                 a2 = u64 [sp + 0x58]
  4284: 95 98 01                 a1 = a2 + 0x1
  4287: 95 16 f8 30              s1 = sp + 0x30f8
  4291: 82 17 40                 a0 = u64 [sp + 0x40]
  4294: aa 79 ad 02              jump @250 if a2 == a0
      :                          @223
  4298: 7b 68 58 02              u64 [s1 + 0x258] = a1
  4302: 7b 18 58                 u64 [sp + 0x58] = a1
  4305: 97 89 0c                 a2 = a1 << 0xc
  4308: 95 17 a0 20              a0 = sp + 0x20a0
  4312: 82 77 48                 a0 = u64 [a0 + 0x48]
  4315: 82 68 08                 a1 = u64 [s1 + 0x8]
  4318: 82 1a 38                 a3 = u64 [sp + 0x38]
  4321: c8 a9 09                 a2 = a2 + a3
  4324: 82 1a 30                 a3 = u64 [sp + 0x30]
  4327: d2 a9 09                 a2 = a2 & a3
  4330: 7b 69 60 02              u64 [s1 + 0x260] = a2
  4334: 33 0a 00 10              a3 = 0x1000
  4338: 0a 15                    ecalli 21 // 'peek'
  4340: 7b 67 68 02              u64 [s1 + 0x268] = a0
  4344: 95 17 e8 20              a0 = sp + 0x20e8
  4348: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4352: 82 17 68                 a0 = u64 [sp + 0x68]
  4355: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4359: 95 18 00 31              a1 = sp + 0x3100
  4363: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4367: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4371: 95 18 58 33              a1 = sp + 0x3358
  4375: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4379: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4383: 82 18 50                 a1 = u64 [sp + 0x50]
  4386: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4390: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4394: 95 18 60 33              a1 = sp + 0x3360
  4398: 7b 68 88 01              u64 [s1 + 0x188] = a1
  4402: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4406: 82 17 28                 a0 = u64 [sp + 0x28]
  4409: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4413: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4418: 49 26 28 01              u64 [s1 + 296] = 0
  4422: 95 18 40 32              a1 = sp + 0x3240
  4426: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4430: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4435: 95 17 80 33              a0 = sp + 0x3380
  4439: 95 18 00 32              a1 = sp + 0x3200
  4443: 50 10 6c 3a 23           ra = 108, jump @729
      :                          @224 [@dyn 54]
  4448: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4452: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4456: 95 17 f8 30              a0 = sp + 0x30f8
  4460: 82 76 88 02              s1 = u64 [a0 + 0x288]
  4464: 33 07 02                 a0 = 0x2
  4467: 33 08                    a1 = 0
  4469: 33 09                    a2 = 0
  4471: 64 5a                    a3 = s0
  4473: 33 00 6e                 ra = 0x6e
  4476: 0a 64                    ecalli 100 // 'log'
  4478: 01                       fallthrough
      :                          @225 [@dyn 55]
  4479: 82 17 70                 a0 = u64 [sp + 0x70]
  4482: c8 67 07                 a0 = a0 + s1
  4485: 82 1c 60                 a5 = u64 [sp + 0x60]
  4488: 33 02 00 10              t0 = 0x1000
  4492: 53 27 00 f0 1e           jump @230 if a0 <u 4294963200
      :                          @226
  4497: c8 2c 08                 a1 = a5 + t0
  4500: 82 87                    a0 = u64 [a1]
  4502: c9 78 09                 a2 = a1 - a0
  4505: ab 59 11                 jump @230 if a2 != s0
      :                          @227
  4508: c9 67 09                 a2 = a0 - s1
  4511: 01                       fallthrough
      :                          @228
  4512: 82 8a                    a3 = u64 [a1]
  4514: ab 7a ef                 jump @226 if a3 != a0
      :                          @229
  4517: 7b 89                    u64 [a1] = a2
  4519: 33 0b                    a4 = 0
  4521: 01                       fallthrough
      :                          @230
  4522: 95 16 f8 30              s1 = sp + 0x30f8
  4526: 81 67 54 02              a0 = i32 [s1 + 0x254]
  4530: 81 68 58 02              a1 = i32 [s1 + 0x258]
  4534: 95 19 a0 20              a2 = sp + 0x20a0
  4538: 7a 97 50                 u32 [a2 + 0x50] = a0
  4541: 82 17 20                 a0 = u64 [sp + 0x20]
  4544: be 87 07                 i32 a0 = a0 + a1
  4547: 7a 67 74 02              u32 [s1 + 0x274] = a0
  4551: 7a 97 54                 u32 [a2 + 0x54] = a0
  4554: 95 17 f0 20              a0 = sp + 0x20f0
  4558: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4562: 49 26 80 02 08           u64 [s1 + 640] = 0x8
  4567: 95 17 70 33              a0 = sp + 0x3370
  4571: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4575: 82 17 18                 a0 = u64 [sp + 0x18]
  4578: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4582: 95 17 4c 33              a0 = sp + 0x334c
  4586: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4590: 82 17 10                 a0 = u64 [sp + 0x10]
  4593: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4597: 95 18 6c 33              a1 = sp + 0x336c
  4601: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4605: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4609: 82 17 08                 a0 = u64 [sp + 0x8]
  4612: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4616: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  4621: 49 26 28 01              u64 [s1 + 296] = 0
  4625: 95 17 40 32              a0 = sp + 0x3240
  4629: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4633: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  4638: 95 17 80 33              a0 = sp + 0x3380
  4642: 95 18 00 32              a1 = sp + 0x3200
  4646: 50 10 70 6f 22           ra = 112, jump @729
      :                          @231 [@dyn 56]
  4651: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4655: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4659: 82 66 88 02              s1 = u64 [s1 + 0x288]
  4663: 33 07 02                 a0 = 0x2
  4666: 33 08                    a1 = 0
  4668: 33 09                    a2 = 0
  4670: 64 5a                    a3 = s0
  4672: 33 00 72                 ra = 0x72
  4675: 0a 64                    ecalli 100 // 'log'
  4677: 01                       fallthrough
      :                          @232 [@dyn 57]
  4678: 33 02 00 10              t0 = 0x1000
  4682: 82 1c 60                 a5 = u64 [sp + 0x60]
  4685: 82 17 70                 a0 = u64 [sp + 0x70]
  4688: c8 67 07                 a0 = a0 + s1
  4691: 53 27 00 f0 1c           jump @237 if a0 <u 4294963200
      :                          @233
  4696: c8 2c 08                 a1 = a5 + t0
  4699: 82 87                    a0 = u64 [a1]
  4701: c9 78 09                 a2 = a1 - a0
  4704: ab 59 0f                 jump @237 if a2 != s0
      :                          @234
  4707: c9 67 09                 a2 = a0 - s1
  4710: 01                       fallthrough
      :                          @235
  4711: 82 8a                    a3 = u64 [a1]
  4713: ab 7a ef                 jump @233 if a3 != a0
      :                          @236
  4716: 7b 89                    u64 [a1] = a2
  4718: 01                       fallthrough
      :                          @237
  4719: 95 16 f8 30              s1 = sp + 0x30f8
  4723: 82 67 58 02              a0 = u64 [s1 + 0x258]
  4727: 82 68                    a1 = u64 [s1]
  4729: ab 87 19                 jump @239 if a0 != a1
      :                          @238
  4732: 82 17 58                 a0 = u64 [sp + 0x58]
  4735: 7a 67 48 02              u32 [s1 + 0x248] = a0
  4739: 95 18 44 33              a1 = sp + 0x3344
  4743: 95 15 a0 20              s0 = sp + 0x20a0
  4747: 81 57 58                 a0 = i32 [s0 + 0x58]
  4750: 7a 87                    u32 [a1] = a0
  4752: 28 16                    jump @241
      :                          @239
  4754: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  4757: 95 18 48 33              a1 = sp + 0x3348
  4761: 95 15 a0 20              s0 = sp + 0x20a0
  4765: ab 97 09                 jump @241 if a0 != a2
      :                          @240
  4768: 81 57 58                 a0 = i32 [s0 + 0x58]
  4771: 7a 87                    u32 [a1] = a0
  4773: 01                       fallthrough
      :                          @241
  4774: 83 28 08                 i32 a1 = t0 + 0x8
  4777: 95 17 f0 20              a0 = sp + 0x20f0
  4781: 0a 13                    ecalli 19 // 'export'
  4783: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4787: 0a                       ecalli 0 // 'gas'
  4788: 7b 57 40                 u64 [s0 + 0x40] = a0
  4791: 33 07 50 0b 01           a0 = 0x10b50
  4796: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4800: 95 18 50 33              a1 = sp + 0x3350
  4804: 7b 68 48 01              u64 [s1 + 0x148] = a1
  4808: 82 17 68                 a0 = u64 [sp + 0x68]
  4811: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4815: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4819: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4823: 95 18 70 33              a1 = sp + 0x3370
  4827: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4831: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4835: 95 18 e0 20              a1 = sp + 0x20e0
  4839: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4843: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4847: 95 17 40 33              a0 = sp + 0x3340
  4851: 7b 67 88 01              u64 [s1 + 0x188] = a0
  4855: 82 17 48                 a0 = u64 [sp + 0x48]
  4858: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4862: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4867: 49 26 28 01              u64 [s1 + 296] = 0
  4871: 95 18 40 32              a1 = sp + 0x3240
  4875: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4879: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4884: 95 17 80 33              a0 = sp + 0x3380
  4888: 95 18 00 32              a1 = sp + 0x3200
  4892: 50 10 74 79 21           ra = 116, jump @729
      :                          @242 [@dyn 58]
  4897: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4901: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4905: 95 17 f8 30              a0 = sp + 0x30f8
  4909: 82 76 88 02              s1 = u64 [a0 + 0x288]
  4913: 33 07 02                 a0 = 0x2
  4916: 33 08                    a1 = 0
  4918: 33 09                    a2 = 0
  4920: 64 5a                    a3 = s0
  4922: 33 00 76                 ra = 0x76
  4925: 0a 64                    ecalli 100 // 'log'
  4927: 01                       fallthrough
      :                          @243 [@dyn 59]
  4928: 33 02 00 10              t0 = 0x1000
  4932: 82 17 70                 a0 = u64 [sp + 0x70]
  4935: c8 67 07                 a0 = a0 + s1
  4938: 82 1c 60                 a5 = u64 [sp + 0x60]
  4941: 53 27 00 f0 6c fd        jump @222 if a0 <u 4294963200
      :                          @244
  4947: c8 2c 08                 a1 = a5 + t0
  4950: 82 87                    a0 = u64 [a1]
  4952: c9 78 09                 a2 = a1 - a0
  4955: ab 59 5e fd              jump @222 if a2 != s0
      :                          @245
  4959: c9 67 09                 a2 = a0 - s1
  4962: 01                       fallthrough
      :                          @246
  4963: 82 8a                    a3 = u64 [a1]
  4965: ab 7a ee                 jump @244 if a3 != a0
      :                          @247
  4968: 7b 89                    u64 [a1] = a2
  4970: 33 0b                    a4 = 0
  4972: 01                       fallthrough
      :                          @248
  4973: ab 7a e6                 jump @244 if a3 != a0
      :                          @249
  4976: 28 49 fd                 jump @222
      :                          @250
  4979: 95 17 44 33              a0 = sp + 0x3344
  4983: 95 18 48 33              a1 = sp + 0x3348
  4987: 95 19 40 33              a2 = sp + 0x3340
  4991: 7b 69 48 01              u64 [s1 + 0x148] = a2
  4995: 82 19 48                 a2 = u64 [sp + 0x48]
  4998: 7b 69 50 01              u64 [s1 + 0x150] = a2
  5002: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5006: 7b 69 60 01              u64 [s1 + 0x160] = a2
  5010: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5014: 7b 69 70 01              u64 [s1 + 0x170] = a2
  5018: 33 07 70 0a 01           a0 = 0x10a70
  5023: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5027: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5032: 49 26 28 01              u64 [s1 + 296] = 0
  5036: 95 18 40 32              a1 = sp + 0x3240
  5040: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5044: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5049: 95 17 80 33              a0 = sp + 0x3380
  5053: 95 18 00 32              a1 = sp + 0x3200
  5057: 50 10 78 d4 20           ra = 120, jump @729
      :                          @251 [@dyn 60]
  5062: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5066: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5070: 95 17 f8 30              a0 = sp + 0x30f8
  5074: 82 76 88 02              s1 = u64 [a0 + 0x288]
  5078: 33 07 02                 a0 = 0x2
  5081: 33 08                    a1 = 0
  5083: 33 09                    a2 = 0
  5085: 64 5a                    a3 = s0
  5087: 33 00 7a                 ra = 0x7a
  5090: 0a 64                    ecalli 100 // 'log'
  5092: 01                       fallthrough
      :                          @252 [@dyn 61]
  5093: 82 17 70                 a0 = u64 [sp + 0x70]
  5096: c8 67 07                 a0 = a0 + s1
  5099: 53 27 00 f0 21           jump @258 if a0 <u 4294963200
      :                          @253
  5104: 82 18 60                 a1 = u64 [sp + 0x60]
  5107: 95 87 00 10              a0 = a1 + 0x1000
  5111: 01                       fallthrough
      :                          @254
  5112: 82 78                    a1 = u64 [a0]
  5114: c9 87 09                 a2 = a0 - a1
  5117: ab 59 0f                 jump @258 if a2 != s0
      :                          @255
  5120: c9 68 09                 a2 = a1 - s1
  5123: 01                       fallthrough
      :                          @256
  5124: 82 7a                    a3 = u64 [a0]
  5126: ab 8a f2                 jump @254 if a3 != a1
      :                          @257
  5129: 7b 79                    u64 [a0] = a2
  5131: 01                       fallthrough
      :                          @258
  5132: 95 15 a0 20              s0 = sp + 0x20a0
  5136: 82 57 48                 a0 = u64 [s0 + 0x48]
  5139: 0a 1a                    ecalli 26 // 'expunge'
  5141: 95 16 f8 30              s1 = sp + 0x30f8
  5145: 7b 67 78 02              u64 [s1 + 0x278] = a0
  5149: 0a                       ecalli 0 // 'gas'
  5150: 7b 57 40                 u64 [s0 + 0x40] = a0
  5153: 95 17 e8 20              a0 = sp + 0x20e8
  5157: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5161: 95 17 70 33              a0 = sp + 0x3370
  5165: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5169: 95 17 e0 20              a0 = sp + 0x20e0
  5173: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5177: 82 17 68                 a0 = u64 [sp + 0x68]
  5180: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5184: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5188: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5192: 33 07 a0 0a 01           a0 = 0x10aa0
  5197: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5201: 95 17 40 32              a0 = sp + 0x3240
  5205: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5209: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5214: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5219: 49 26 28 01              u64 [s1 + 296] = 0
  5223: 95 17 80 33              a0 = sp + 0x3380
  5227: 95 18 00 32              a1 = sp + 0x3200
  5231: 50 10 7c 26 20           ra = 124, jump @729
      :                          @259 [@dyn 62]
  5236: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5240: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5244: 82 66 88 02              s1 = u64 [s1 + 0x288]
  5248: 33 07 02                 a0 = 0x2
  5251: 33 08                    a1 = 0
  5253: 33 09                    a2 = 0
  5255: 64 5a                    a3 = s0
  5257: 33 00 7e                 ra = 0x7e
  5260: 0a 64                    ecalli 100 // 'log'
  5262: 01                       fallthrough
      :                          @260 [@dyn 63]
  5263: 82 17 70                 a0 = u64 [sp + 0x70]
  5266: c8 67 07                 a0 = a0 + s1
  5269: 53 27 00 f0 2c           jump @266 if a0 <u 4294963200
      :                          @261
  5274: 82 18 60                 a1 = u64 [sp + 0x60]
  5277: 95 87 00 10              a0 = a1 + 0x1000
  5281: 01                       fallthrough
      :                          @262
  5282: 82 78                    a1 = u64 [a0]
  5284: c9 87 09                 a2 = a0 - a1
  5287: ab 59 1a                 jump @266 if a2 != s0
      :                          @263
  5290: c9 68 09                 a2 = a1 - s1
  5293: 01                       fallthrough
      :                          @264
  5294: 82 7a                    a3 = u64 [a0]
  5296: ab 8a f2                 jump @262 if a3 != a1
      :                          @265
  5299: 7b 79                    u64 [a0] = a2
  5301: 33 0b                    a4 = 0
  5303: 95 1a 40 33              a3 = sp + 0x3340
  5307: 33 08 0c                 a1 = 0xc
  5310: 28 25 f1                 jump @106
      :                          @266
  5313: 95 1a 40 33              a3 = sp + 0x3340
  5317: 33 08 0c                 a1 = 0xc
  5320: 28 1b f1                 jump @106
      :                          @267
  5323: 00                       trap
      :                          @268 [export #1: 'accumulate']
  5324: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5328: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5332: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5336: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5340: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  5344: 33 09 08                 a2 = 0x8
  5347: ac 98 0a 01              jump @301 if a1 <u a2
      :                          @269
  5351: 52 07 06                 jump @271 if a0 != 0
      :                          @270
  5354: 28 d6 1c                 jump @658
      :                          @271
  5357: 95 79 04                 a2 = a0 + 0x4
  5360: 52 09 06                 jump @273 if a2 != 0
      :                          @272
  5363: 28 ce 1c                 jump @659
      :                          @273
  5366: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5369: 7b 19 40                 u64 [sp + 0x40] = a2
  5372: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5375: 7b 19 28                 u64 [sp + 0x28] = a2
  5378: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5381: 7b 19 38                 u64 [sp + 0x38] = a2
  5384: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5387: 7b 19 30                 u64 [sp + 0x30] = a2
  5390: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5393: 95 75 08                 s0 = a0 + 0x8
  5396: 51 0a 45                 jump @283 if a3 == 0
      :                          @274
  5399: 7d 58                    a1 = i8 [s0]
  5401: 33 06 01                 s1 = 0x1
  5404: 59 08 40                 jump @284 if a1 >=s 0
      :                          @275
  5407: 84 89 ff 00              a2 = a1 & 0xff
  5411: 33 06 02                 s1 = 0x2
  5414: 53 29 c0 00 2d           jump @281 if a2 <u 192
      :                          @276
  5419: 33 06 03                 s1 = 0x3
  5422: 53 29 e0 00 25           jump @281 if a2 <u 224
      :                          @277
  5427: 33 06 04                 s1 = 0x4
  5430: 53 29 f0 00 1d           jump @281 if a2 <u 240
      :                          @278
  5435: 33 06 05                 s1 = 0x5
  5438: 53 29 f8 00 15           jump @281 if a2 <u 248
      :                          @279
  5443: 33 06 06                 s1 = 0x6
  5446: 53 29 fc 00 0d           jump @281 if a2 <u 252
      :                          @280
  5451: 88 98 fe 00              a1 = a2 <u 0xfe
  5455: 9a 86 08                 s1 = 0x8 - a1
  5458: 01                       fallthrough
      :                          @281
  5459: ae 6a 09                 jump @284 if a3 >=u s1
      :                          @282
  5462: 28 97 00                 jump @301
      :                          @283
  5465: 33 06                    s1 = 0
  5467: 01                       fallthrough
      :                          @284
  5468: 7b 16 48                 u64 [sp + 0x48] = s1
  5471: 64 57                    a0 = s0
  5473: 64 68                    a1 = s1
  5475: 64 a6                    s1 = a3
  5477: 50 20 80 00 ee 2b        ra = 128, jump @983
      :                          @285 [@dyn 64]
  5483: 82 1a 48                 a3 = u64 [sp + 0x48]
  5486: 51 07 7f                 jump @301 if a0 == 0
      :                          @286
  5489: e4 a6 07                 a0 = maxu(s1, a3)
  5492: c9 a7 07                 a0 = a0 - a3
  5495: 53 17 60 76              jump @301 if a0 <u 96
      :                          @287
  5499: c8 5a 08                 a1 = a3 + s0
  5502: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5505: 95 87 60                 a0 = a1 + 0x60
  5508: 7b 17 48                 u64 [sp + 0x48] = a0
  5511: 51 06 4f                 jump @299 if s1 == 0
      :                          @288
  5514: 7d 78                    a1 = i8 [a0]
  5516: 33 05 01                 s0 = 0x1
  5519: 59 08 37                 jump @295 if a1 >=s 0
      :                          @289
  5522: 84 89 ff 00              a2 = a1 & 0xff
  5526: 33 05 02                 s0 = 0x2
  5529: 53 29 c0 00 2d           jump @295 if a2 <u 192
      :                          @290
  5534: 33 05 03                 s0 = 0x3
  5537: 53 29 e0 00 25           jump @295 if a2 <u 224
      :                          @291
  5542: 33 05 04                 s0 = 0x4
  5545: 53 29 f0 00 1d           jump @295 if a2 <u 240
      :                          @292
  5550: 33 05 05                 s0 = 0x5
  5553: 53 29 f8 00 15           jump @295 if a2 <u 248
      :                          @293
  5558: 33 05 06                 s0 = 0x6
  5561: 53 29 fc 00 0d           jump @295 if a2 <u 252
      :                          @294
  5566: 88 98 fe 00              a1 = a2 <u 0xfe
  5570: 9a 85 08                 s0 = 0x8 - a1
  5573: 01                       fallthrough
      :                          @295
  5574: ae 56 06                 jump @297 if s1 >=u s0
      :                          @296
  5577: 28 f9 1b                 jump @660
      :                          @297
  5580: 64 58                    a1 = s0
  5582: 50 20 82 00 85 2b        ra = 130, jump @983
      :                          @298 [@dyn 65]
  5588: 28 07                    jump @300
      :                          @299
  5590: 33 05                    s0 = 0
  5592: 33 07                    a0 = 0
  5594: 01                       fallthrough
      :                          @300
  5595: e4 56 08                 a1 = maxu(s1, s0)
  5598: c9 58 08                 a1 = a1 - s0
  5601: e4 78 08                 a1 = maxu(a1, a0)
  5604: c9 78 08                 a1 = a1 - a0
  5607: 33 09 21                 a2 = 0x21
  5610: ae 98 23                 jump @303 if a1 >=u a2
      :                          @301
  5613: 33 08                    a1 = 0
  5615: 33 05 00 00 01           s0 = 0x10000
  5620: 01                       fallthrough
      :                          @302
  5621: 64 57                    a0 = s0
  5623: 95 11 40 04              sp = sp + 0x440
  5627: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  5631: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  5635: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  5639: 95 11 f8 07              sp = sp + 0x7f8
  5643: 32 00                    ret
      :                          @303
  5645: 82 19 48                 a2 = u64 [sp + 0x48]
  5648: c8 95 05                 s0 = s0 + a2
  5651: c8 57 07                 a0 = a0 + s0
  5654: 7c 79 20                 a2 = u8 [a0 + 0x20]
  5657: 51 09 0a                 jump @305 if a2 == 0
      :                          @304
  5660: 33 06                    s1 = 0
  5662: 33 0a                    a3 = 0
  5664: 28 86 00                 jump @320
      :                          @305
  5667: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  5670: 95 75 21                 s0 = a0 + 0x21
  5673: 51 0a 57                 jump @317 if a3 == 0
      :                          @306
  5676: 7d 57                    a0 = i8 [s0]
  5678: 33 06 01                 s1 = 0x1
  5681: 59 07 37                 jump @313 if a0 >=s 0
      :                          @307
  5684: 84 77 ff 00              a0 = a0 & 0xff
  5688: 33 06 02                 s1 = 0x2
  5691: 53 27 c0 00 2d           jump @313 if a0 <u 192
      :                          @308
  5696: 33 06 03                 s1 = 0x3
  5699: 53 27 e0 00 25           jump @313 if a0 <u 224
      :                          @309
  5704: 33 06 04                 s1 = 0x4
  5707: 53 27 f0 00 1d           jump @313 if a0 <u 240
      :                          @310
  5712: 33 06 05                 s1 = 0x5
  5715: 53 27 f8 00 15           jump @313 if a0 <u 248
      :                          @311
  5720: 33 06 06                 s1 = 0x6
  5723: 53 27 fc 00 0d           jump @313 if a0 <u 252
      :                          @312
  5728: 88 77 fe 00              a0 = a0 <u 0xfe
  5732: 9a 76 08                 s1 = 0x8 - a0
  5735: 01                       fallthrough
      :                          @313
  5736: 7b 1a 48                 u64 [sp + 0x48] = a3
  5739: ae 6a 06                 jump @315 if a3 >=u s1
      :                          @314
  5742: 28 56 1b                 jump @662
      :                          @315
  5745: 64 57                    a0 = s0
  5747: 64 68                    a1 = s1
  5749: 50 20 84 00 de 2a        ra = 132, jump @983
      :                          @316 [@dyn 66]
  5755: 82 1a 48                 a3 = u64 [sp + 0x48]
  5758: 28 07                    jump @318
      :                          @317
  5760: 33 06                    s1 = 0
  5762: 33 07                    a0 = 0
  5764: 01                       fallthrough
      :                          @318
  5765: e4 6a 08                 a1 = maxu(a3, s1)
  5768: c9 68 08                 a1 = a1 - s1
  5771: e6 78 0a                 a3 = minu(a1, a0)
  5774: c8 56 06                 s1 = s1 + s0
  5777: 52 1a 24 15              jump @320 if a3 != 36
      :                          @319
  5781: 80 68 20                 a1 = u32 [s1 + 0x20]
  5784: 64 67                    a0 = s1
  5786: 0a 0e                    ecalli 14 // 'solicit'
  5788: 33 08                    a1 = 0
  5790: 33 05 00 00 01           s0 = 0x10000
  5795: 28 52 ff                 jump @302
      :                          @320
  5798: 82 17 28                 a0 = u64 [sp + 0x28]
  5801: 97 77 08                 a0 = a0 << 0x8
  5804: 82 18 40                 a1 = u64 [sp + 0x40]
  5807: d4 87 07                 a0 = a0 | a1
  5810: 82 18 38                 a1 = u64 [sp + 0x38]
  5813: 97 88 10                 a1 = a1 << 0x10
  5816: 82 19 30                 a2 = u64 [sp + 0x30]
  5819: 97 99 18                 a2 = a2 << 0x18
  5822: d4 98 08                 a1 = a1 | a2
  5825: d4 87 07                 a0 = a0 | a1
  5828: 7b 17 38                 u64 [sp + 0x38] = a0
  5831: 46 11 51                 u8 [sp + 81] = 0
  5834: 81 65                    s0 = i32 [s1]
  5836: 95 17 51                 a0 = sp + 0x51
  5839: 33 08 01                 a1 = 0x1
  5842: 7b 16 18                 u64 [sp + 0x18] = s1
  5845: 64 69                    a2 = s1
  5847: 7b 1a 20                 u64 [sp + 0x20] = a3
  5850: 0a 03                    ecalli 3 // 'write'
  5852: 46 11 52 6a              u8 [sp + 82] = 0x6a
  5856: 46 11 53 61              u8 [sp + 83] = 0x61
  5860: 46 11 54 6d              u8 [sp + 84] = 0x6d
  5864: 46 11 55 44              u8 [sp + 85] = 0x44
  5868: 46 11 56 4f              u8 [sp + 86] = 0x4f
  5872: 46 11 57 54              u8 [sp + 87] = 0x54
  5876: 46 11 58 6a              u8 [sp + 88] = 0x6a
  5880: 46 11 59 0d              u8 [sp + 89] = 0xd
  5884: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  5888: 46 11 5b 19              u8 [sp + 91] = 0x19
  5892: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  5897: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  5902: 46 11 5e 50              u8 [sp + 94] = 0x50
  5906: 46 11 5f 57              u8 [sp + 95] = 0x57
  5910: 46 11 60 13              u8 [sp + 96] = 0x13
  5914: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  5919: 46 11 62 65              u8 [sp + 98] = 0x65
  5923: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  5928: 46 11 64 31              u8 [sp + 100] = 0x31
  5932: 46 11 65 03              u8 [sp + 101] = 0x3
  5936: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  5941: 46 11 67 73              u8 [sp + 103] = 0x73
  5945: 33 0b f1 00              a4 = 0xf1
  5949: 78 1b 68                 u8 [sp + 0x68] = a4
  5952: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  5957: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  5962: 46 11 6b 64              u8 [sp + 107] = 0x64
  5966: 46 11 6c 56              u8 [sp + 108] = 0x56
  5970: 46 11 6d 32              u8 [sp + 109] = 0x32
  5974: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  5979: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  5984: 46 11 70 50              u8 [sp + 112] = 0x50
  5988: 33 0c 3c                 a5 = 0x3c
  5991: 78 1c 71                 u8 [sp + 0x71] = a5
  5994: 46 11 72 4f              u8 [sp + 114] = 0x4f
  5998: 46 11 73 0c              u8 [sp + 115] = 0xc
  6002: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6006: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6010: 46 11 76 19              u8 [sp + 118] = 0x19
  6014: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6019: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6024: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6029: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6034: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6038: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6043: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6048: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6053: 46 11 7f 47              u8 [sp + 127] = 0x47
  6057: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6063: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6068: 78 1c 82 00              u8 [sp + 0x82] = a5
  6072: 78 1b 83 00              u8 [sp + 0x83] = a4
  6076: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6082: 95 16 ff 07              s1 = sp + 0x7ff
  6086: 95 66 99 03              s1 = s1 + 0x399
  6090: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6095: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6100: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6106: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6112: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6118: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6124: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6130: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6136: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6141: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6146: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6151: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6157: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6163: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6168: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6173: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6179: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6185: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6190: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6195: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  6200: 95 17 98 00              a0 = sp + 0x98
  6204: 33 09 00 01              a2 = 0x100
  6208: 33 08                    a1 = 0
  6210: 50 20 86 00 7a 1f        ra = 134, jump @797
      :                          @321 [@dyn 67]
  6216: 7b 15 28                 u64 [sp + 0x28] = s0
  6219: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  6222: 33 05 48 00 01           s0 = 0x10048
  6227: 33 09 16                 a2 = 0x16
  6230: 7b 19 40                 u64 [sp + 0x40] = a2
  6233: 54 17 09 07              jump @323 if a0 <=u 9
      :                          @322
  6237: 28 a2 17                 jump @631
      :                          @323
  6240: 97 77 02                 a0 = a0 << 0x2
  6243: 33 08 00 00 01           a1 = 0x10000
  6248: c8 87 07                 a0 = a0 + a1
  6251: 81 77                    a0 = i32 [a0]
  6253: c8 87 07                 a0 = a0 + a1
  6256: 7b 15 30                 u64 [sp + 0x30] = s0
  6259: 32 07                    jump [a0]
      :                          @324 [@dyn 68]
  6261: 95 18 52                 a1 = sp + 0x52
  6264: 33 09 03                 a2 = 0x3
  6267: 95 1a 98 00              a3 = sp + 0x98
  6271: 33 0c 00 01              a5 = 0x100
  6275: 82 17 38                 a0 = u64 [sp + 0x38]
  6278: 33 0b                    a4 = 0
  6280: 0a 02                    ecalli 2 // 'read'
  6282: 7b 67 70                 u64 [s1 + 0x70] = a0
  6285: 33 07 50 00 01           a0 = 0x10050
  6290: 7b 17 10                 u64 [sp + 0x10] = a0
  6293: 7b 67 18                 u64 [s1 + 0x18] = a0
  6296: 82 18 40                 a1 = u64 [sp + 0x40]
  6299: 7b 68 20                 u64 [s1 + 0x20] = a1
  6302: 95 17 ff 07              a0 = sp + 0x7ff
  6306: 95 77 09 04              a0 = a0 + 0x409
  6310: 7b 67 28                 u64 [s1 + 0x28] = a0
  6313: 7b 68 30                 u64 [s1 + 0x30] = a1
  6316: 33 07 a0 0b 01           a0 = 0x10ba0
  6321: 7b 17 98 01              u64 [sp + 0x198] = a0
  6325: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6330: 49 21 b8 01              u64 [sp + 440] = 0
  6334: 95 17 ff 07              a0 = sp + 0x7ff
  6338: 95 77 b1 03              a0 = a0 + 0x3b1
  6342: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6346: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6351: 95 17 ff 07              a0 = sp + 0x7ff
  6355: 95 77 e1 03              a0 = a0 + 0x3e1
  6359: 95 18 98 01              a1 = sp + 0x198
  6363: 50 20 8a 00 ba 1b        ra = 138, jump @729
      :                          @325 [@dyn 69]
  6369: 82 65 50                 s0 = u64 [s1 + 0x50]
  6372: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6375: 95 17 ff 07              a0 = sp + 0x7ff
  6379: 95 77 99 03              a0 = a0 + 0x399
  6383: 82 76 48                 s1 = u64 [a0 + 0x48]
  6386: 33 07 02                 a0 = 0x2
  6389: 33 08                    a1 = 0
  6391: 33 09                    a2 = 0
  6393: 64 5a                    a3 = s0
  6395: 33 00 8c 00              ra = 0x8c
  6399: 0a 64                    ecalli 100 // 'log'
  6401: 01                       fallthrough
      :                          @326 [@dyn 70]
  6402: 82 17 48                 a0 = u64 [sp + 0x48]
  6405: c8 67 07                 a0 = a0 + s1
  6408: 53 27 00 f0 23           jump @332 if a0 <u 4294963200
      :                          @327
  6413: 33 07 40 00 03           a0 = 0x30040
  6418: 95 77 00 10              a0 = a0 + 0x1000
  6422: 01                       fallthrough
      :                          @328
  6423: 82 78                    a1 = u64 [a0]
  6425: c9 87 09                 a2 = a0 - a1
  6428: ab 59 0f                 jump @332 if a2 != s0
      :                          @329
  6431: c9 68 09                 a2 = a1 - s1
  6434: 01                       fallthrough
      :                          @330
  6435: 82 7a                    a3 = u64 [a0]
  6437: ab 8a f2                 jump @328 if a3 != a1
      :                          @331
  6440: 7b 79                    u64 [a0] = a2
  6442: 01                       fallthrough
      :                          @332
  6443: 95 16 ff 07              s1 = sp + 0x7ff
  6447: 95 66 99 03              s1 = s1 + 0x399
  6451: 82 67 70                 a0 = u64 [s1 + 0x70]
  6454: 33 08 01                 a1 = 0x1
  6457: 50 20 8e 00 b8 28        ra = 142, jump @1007
      :                          @333 [@dyn 71]
  6463: 95 17 52                 a0 = sp + 0x52
  6466: 33 08 03                 a1 = 0x3
  6469: 95 19 55                 a2 = sp + 0x55
  6472: 33 0a 03                 a3 = 0x3
  6475: 0a 03                    ecalli 3 // 'write'
  6477: 7b 67 78                 u64 [s1 + 0x78] = a0
  6480: 82 17 10                 a0 = u64 [sp + 0x10]
  6483: 7b 67 18                 u64 [s1 + 0x18] = a0
  6486: 95 17 ff 07              a0 = sp + 0x7ff
  6490: 95 77 11 04              a0 = a0 + 0x411
  6494: 7b 67 28                 u64 [s1 + 0x28] = a0
  6497: 33 07 d0 0b 01           a0 = 0x10bd0
  6502: 7b 17 98 01              u64 [sp + 0x198] = a0
  6506: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6511: 49 21 b8 01              u64 [sp + 440] = 0
  6515: 95 17 ff 07              a0 = sp + 0x7ff
  6519: 95 77 b1 03              a0 = a0 + 0x3b1
  6523: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6527: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6532: 82 17 40                 a0 = u64 [sp + 0x40]
  6535: 7b 67 20                 u64 [s1 + 0x20] = a0
  6538: 7b 67 30                 u64 [s1 + 0x30] = a0
  6541: 95 17 ff 07              a0 = sp + 0x7ff
  6545: 95 77 e1 03              a0 = a0 + 0x3e1
  6549: 95 18 98 01              a1 = sp + 0x198
  6553: 50 20 90 00 fc 1a        ra = 144, jump @729
      :                          @334 [@dyn 72]
  6559: 82 65 50                 s0 = u64 [s1 + 0x50]
  6562: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6565: 82 66 48                 s1 = u64 [s1 + 0x48]
  6568: 33 07 02                 a0 = 0x2
  6571: 33 08                    a1 = 0
  6573: 33 09                    a2 = 0
  6575: 64 5a                    a3 = s0
  6577: 33 00 92 00              ra = 0x92
  6581: 0a 64                    ecalli 100 // 'log'
  6583: 01                       fallthrough
      :                          @335 [@dyn 73]
  6584: 82 17 48                 a0 = u64 [sp + 0x48]
  6587: c8 67 07                 a0 = a0 + s1
  6590: 53 27 00 f0 23           jump @341 if a0 <u 4294963200
      :                          @336
  6595: 33 07 40 00 03           a0 = 0x30040
  6600: 95 77 00 10              a0 = a0 + 0x1000
  6604: 01                       fallthrough
      :                          @337
  6605: 82 78                    a1 = u64 [a0]
  6607: c9 87 09                 a2 = a0 - a1
  6610: ab 59 0f                 jump @341 if a2 != s0
      :                          @338
  6613: c9 68 09                 a2 = a1 - s1
  6616: 01                       fallthrough
      :                          @339
  6617: 82 7a                    a3 = u64 [a0]
  6619: ab 8a f2                 jump @337 if a3 != a1
      :                          @340
  6622: 7b 79                    u64 [a0] = a2
  6624: 01                       fallthrough
      :                          @341
  6625: 95 16 ff 07              s1 = sp + 0x7ff
  6629: 95 66 99 03              s1 = s1 + 0x399
  6633: 82 67 78                 a0 = u64 [s1 + 0x78]
  6636: 33 08 02                 a1 = 0x2
  6639: 33 05 02                 s0 = 0x2
  6642: 50 20 94 00 ff 27        ra = 148, jump @1007
      :                          @342 [@dyn 74]
  6648: 95 18 52                 a1 = sp + 0x52
  6651: 33 09 03                 a2 = 0x3
  6654: 95 1a 98 00              a3 = sp + 0x98
  6658: 33 0c 00 01              a5 = 0x100
  6662: 82 17 38                 a0 = u64 [sp + 0x38]
  6665: 33 0b                    a4 = 0
  6667: 0a 02                    ecalli 2 // 'read'
  6669: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6673: 82 17 30                 a0 = u64 [sp + 0x30]
  6676: 7b 67 18                 u64 [s1 + 0x18] = a0
  6679: 82 18 40                 a1 = u64 [sp + 0x40]
  6682: 7b 68 20                 u64 [s1 + 0x20] = a1
  6685: 95 17 ff 07              a0 = sp + 0x7ff
  6689: 95 77 19 04              a0 = a0 + 0x419
  6693: 7b 67 28                 u64 [s1 + 0x28] = a0
  6696: 7b 68 30                 u64 [s1 + 0x30] = a1
  6699: 33 07 00 0c 01           a0 = 0x10c00
  6704: 7b 17 98 01              u64 [sp + 0x198] = a0
  6708: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6713: 49 21 b8 01              u64 [sp + 440] = 0
  6717: 95 17 ff 07              a0 = sp + 0x7ff
  6721: 95 77 b1 03              a0 = a0 + 0x3b1
  6725: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6729: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6733: 95 17 ff 07              a0 = sp + 0x7ff
  6737: 95 77 e1 03              a0 = a0 + 0x3e1
  6741: 95 18 98 01              a1 = sp + 0x198
  6745: 50 20 96 00 3c 1a        ra = 150, jump @729
      :                          @343 [@dyn 75]
  6751: 82 65 50                 s0 = u64 [s1 + 0x50]
  6754: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6757: 82 66 48                 s1 = u64 [s1 + 0x48]
  6760: 33 07 02                 a0 = 0x2
  6763: 33 08                    a1 = 0
  6765: 33 09                    a2 = 0
  6767: 64 5a                    a3 = s0
  6769: 33 00 98 00              ra = 0x98
  6773: 0a 64                    ecalli 100 // 'log'
  6775: 01                       fallthrough
      :                          @344 [@dyn 76]
  6776: 82 17 48                 a0 = u64 [sp + 0x48]
  6779: c8 67 07                 a0 = a0 + s1
  6782: 53 27 00 f0 23           jump @350 if a0 <u 4294963200
      :                          @345
  6787: 33 07 40 00 03           a0 = 0x30040
  6792: 95 77 00 10              a0 = a0 + 0x1000
  6796: 01                       fallthrough
      :                          @346
  6797: 82 78                    a1 = u64 [a0]
  6799: c9 87 09                 a2 = a0 - a1
  6802: ab 59 0f                 jump @350 if a2 != s0
      :                          @347
  6805: c9 68 09                 a2 = a1 - s1
  6808: 01                       fallthrough
      :                          @348
  6809: 82 7a                    a3 = u64 [a0]
  6811: ab 8a f2                 jump @346 if a3 != a1
      :                          @349
  6814: 7b 79                    u64 [a0] = a2
  6816: 01                       fallthrough
      :                          @350
  6817: 95 16 ff 07              s1 = sp + 0x7ff
  6821: 95 66 99 03              s1 = s1 + 0x399
  6825: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6829: 33 08 05                 a1 = 0x5
  6832: 50 20 9a 00 41 27        ra = 154, jump @1007
      :                          @351 [@dyn 77]
  6838: 95 17 52                 a0 = sp + 0x52
  6841: 33 08                    a1 = 0
  6843: 0a 0f                    ecalli 15 // 'forget'
  6845: 7b 67                    u64 [s1] = a0
  6847: 33 07 60 00 01           a0 = 0x10060
  6852: 7b 67 18                 u64 [s1 + 0x18] = a0
  6855: 33 07 30 0c 01           a0 = 0x10c30
  6860: 7b 17 98 01              u64 [sp + 0x198] = a0
  6864: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6869: 49 21 b8 01              u64 [sp + 440] = 0
  6873: 95 17 ff 07              a0 = sp + 0x7ff
  6877: 95 77 b1 03              a0 = a0 + 0x3b1
  6881: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6885: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6890: 82 17 40                 a0 = u64 [sp + 0x40]
  6893: 7b 67 20                 u64 [s1 + 0x20] = a0
  6896: 7b 66 28                 u64 [s1 + 0x28] = s1
  6899: 7b 67 30                 u64 [s1 + 0x30] = a0
  6902: 95 17 ff 07              a0 = sp + 0x7ff
  6906: 95 77 e1 03              a0 = a0 + 0x3e1
  6910: 95 18 98 01              a1 = sp + 0x198
  6914: 50 20 9c 00 93 19        ra = 156, jump @729
      :                          @352 [@dyn 78]
  6920: 82 65 50                 s0 = u64 [s1 + 0x50]
  6923: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6926: 82 66 48                 s1 = u64 [s1 + 0x48]
  6929: 33 07 02                 a0 = 0x2
  6932: 33 08                    a1 = 0
  6934: 33 09                    a2 = 0
  6936: 64 5a                    a3 = s0
  6938: 33 00 9e 00              ra = 0x9e
  6942: 0a 64                    ecalli 100 // 'log'
  6944: 01                       fallthrough
      :                          @353 [@dyn 79]
  6945: 82 17 48                 a0 = u64 [sp + 0x48]
  6948: c8 67 07                 a0 = a0 + s1
  6951: 53 27 00 f0 e5 09        jump @488 if a0 <u 4294963200
      :                          @354
  6957: 33 07 40 00 03           a0 = 0x30040
  6962: 95 77 00 10              a0 = a0 + 0x1000
  6966: 01                       fallthrough
      :                          @355
  6967: 82 78                    a1 = u64 [a0]
  6969: c9 87 09                 a2 = a0 - a1
  6972: ab 59 d0 09              jump @488 if a2 != s0
      :                          @356
  6976: c9 68 09                 a2 = a1 - s1
  6979: 01                       fallthrough
      :                          @357
  6980: 82 7a                    a3 = u64 [a0]
  6982: ab 8a f1                 jump @355 if a3 != a1
      :                          @358
  6985: 7b 79                    u64 [a0] = a2
  6987: 33 0b                    a4 = 0
  6989: 01                       fallthrough
      :                          @359
  6990: ab 8a e9                 jump @355 if a3 != a1
      :                          @360
  6993: 28 bb 09                 jump @488
      :                          @361 [@dyn 80]
  6996: 95 18 52                 a1 = sp + 0x52
  6999: 33 09 03                 a2 = 0x3
  7002: 95 1a 98 00              a3 = sp + 0x98
  7006: 33 0c 00 01              a5 = 0x100
  7010: 82 17 38                 a0 = u64 [sp + 0x38]
  7013: 33 0b                    a4 = 0
  7015: 0a 02                    ecalli 2 // 'read'
  7017: 7b 67 78                 u64 [s1 + 0x78] = a0
  7020: 7b 65 18                 u64 [s1 + 0x18] = s0
  7023: 82 18 40                 a1 = u64 [sp + 0x40]
  7026: 7b 68 20                 u64 [s1 + 0x20] = a1
  7029: 95 17 ff 07              a0 = sp + 0x7ff
  7033: 95 77 11 04              a0 = a0 + 0x411
  7037: 7b 67 28                 u64 [s1 + 0x28] = a0
  7040: 7b 68 30                 u64 [s1 + 0x30] = a1
  7043: 33 07 60 0c 01           a0 = 0x10c60
  7048: 7b 17 98 01              u64 [sp + 0x198] = a0
  7052: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7057: 49 21 b8 01              u64 [sp + 440] = 0
  7061: 95 17 ff 07              a0 = sp + 0x7ff
  7065: 95 77 b1 03              a0 = a0 + 0x3b1
  7069: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7073: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7078: 95 17 ff 07              a0 = sp + 0x7ff
  7082: 95 77 e1 03              a0 = a0 + 0x3e1
  7086: 95 18 98 01              a1 = sp + 0x198
  7090: 50 20 a2 00 e3 18        ra = 162, jump @729
      :                          @362 [@dyn 81]
  7096: 82 65 50                 s0 = u64 [s1 + 0x50]
  7099: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7102: 95 17 ff 07              a0 = sp + 0x7ff
  7106: 95 77 99 03              a0 = a0 + 0x399
  7110: 82 76 48                 s1 = u64 [a0 + 0x48]
  7113: 33 07 02                 a0 = 0x2
  7116: 33 08                    a1 = 0
  7118: 33 09                    a2 = 0
  7120: 64 5a                    a3 = s0
  7122: 33 00 a4 00              ra = 0xa4
  7126: 0a 64                    ecalli 100 // 'log'
  7128: 01                       fallthrough
      :                          @363 [@dyn 82]
  7129: 82 17 48                 a0 = u64 [sp + 0x48]
  7132: c8 67 07                 a0 = a0 + s1
  7135: 53 27 00 f0 23           jump @369 if a0 <u 4294963200
      :                          @364
  7140: 33 07 40 00 03           a0 = 0x30040
  7145: 95 77 00 10              a0 = a0 + 0x1000
  7149: 01                       fallthrough
      :                          @365
  7150: 82 78                    a1 = u64 [a0]
  7152: c9 87 09                 a2 = a0 - a1
  7155: ab 59 0f                 jump @369 if a2 != s0
      :                          @366
  7158: c9 68 09                 a2 = a1 - s1
  7161: 01                       fallthrough
      :                          @367
  7162: 82 7a                    a3 = u64 [a0]
  7164: ab 8a f2                 jump @365 if a3 != a1
      :                          @368
  7167: 7b 79                    u64 [a0] = a2
  7169: 01                       fallthrough
      :                          @369
  7170: 95 16 ff 07              s1 = sp + 0x7ff
  7174: 95 66 99 03              s1 = s1 + 0x399
  7178: 82 67 78                 a0 = u64 [s1 + 0x78]
  7181: 33 08 01                 a1 = 0x1
  7184: 50 20 a6 00 e1 25        ra = 166, jump @1007
      :                          @370 [@dyn 83]
  7190: 95 17 52                 a0 = sp + 0x52
  7193: 33 08 03                 a1 = 0x3
  7196: 33 09                    a2 = 0
  7198: 33 0a                    a3 = 0
  7200: 0a 03                    ecalli 3 // 'write'
  7202: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7206: 95 17 ff 07              a0 = sp + 0x7ff
  7210: 95 77 19 04              a0 = a0 + 0x419
  7214: 7b 67 28                 u64 [s1 + 0x28] = a0
  7217: 33 07 90 0c 01           a0 = 0x10c90
  7222: 7b 17 98 01              u64 [sp + 0x198] = a0
  7226: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7231: 49 21 b8 01              u64 [sp + 440] = 0
  7235: 95 17 ff 07              a0 = sp + 0x7ff
  7239: 95 77 b1 03              a0 = a0 + 0x3b1
  7243: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7247: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7252: 33 07 50 00 01           a0 = 0x10050
  7257: 7b 17 10                 u64 [sp + 0x10] = a0
  7260: 7b 67 18                 u64 [s1 + 0x18] = a0
  7263: 82 17 40                 a0 = u64 [sp + 0x40]
  7266: 7b 67 20                 u64 [s1 + 0x20] = a0
  7269: 7b 67 30                 u64 [s1 + 0x30] = a0
  7272: 95 17 ff 07              a0 = sp + 0x7ff
  7276: 95 77 e1 03              a0 = a0 + 0x3e1
  7280: 95 18 98 01              a1 = sp + 0x198
  7284: 50 20 a8 00 21 18        ra = 168, jump @729
      :                          @371 [@dyn 84]
  7290: 82 65 50                 s0 = u64 [s1 + 0x50]
  7293: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7296: 82 66 48                 s1 = u64 [s1 + 0x48]
  7299: 33 07 02                 a0 = 0x2
  7302: 33 08                    a1 = 0
  7304: 33 09                    a2 = 0
  7306: 64 5a                    a3 = s0
  7308: 33 00 aa 00              ra = 0xaa
  7312: 0a 64                    ecalli 100 // 'log'
  7314: 01                       fallthrough
      :                          @372 [@dyn 85]
  7315: 82 17 48                 a0 = u64 [sp + 0x48]
  7318: c8 67 07                 a0 = a0 + s1
  7321: 53 27 00 f0 23           jump @378 if a0 <u 4294963200
      :                          @373
  7326: 33 07 40 00 03           a0 = 0x30040
  7331: 95 77 00 10              a0 = a0 + 0x1000
  7335: 01                       fallthrough
      :                          @374
  7336: 82 78                    a1 = u64 [a0]
  7338: c9 87 09                 a2 = a0 - a1
  7341: ab 59 0f                 jump @378 if a2 != s0
      :                          @375
  7344: c9 68 09                 a2 = a1 - s1
  7347: 01                       fallthrough
      :                          @376
  7348: 82 7a                    a3 = u64 [a0]
  7350: ab 8a f2                 jump @374 if a3 != a1
      :                          @377
  7353: 7b 79                    u64 [a0] = a2
  7355: 01                       fallthrough
      :                          @378
  7356: 95 16 ff 07              s1 = sp + 0x7ff
  7360: 95 66 99 03              s1 = s1 + 0x399
  7364: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7368: 33 08 02                 a1 = 0x2
  7371: 33 05 02                 s0 = 0x2
  7374: 50 20 ac 00 23 25        ra = 172, jump @1007
      :                          @379 [@dyn 86]
  7380: 95 18 52                 a1 = sp + 0x52
  7383: 33 09 03                 a2 = 0x3
  7386: 95 1a 98 00              a3 = sp + 0x98
  7390: 33 0c 00 01              a5 = 0x100
  7394: 82 17 38                 a0 = u64 [sp + 0x38]
  7397: 33 0b                    a4 = 0
  7399: 0a 02                    ecalli 2 // 'read'
  7401: 7b 67                    u64 [s1] = a0
  7403: 82 17 10                 a0 = u64 [sp + 0x10]
  7406: 7b 67 18                 u64 [s1 + 0x18] = a0
  7409: 33 07 c0 0c 01           a0 = 0x10cc0
  7414: 7b 17 98 01              u64 [sp + 0x198] = a0
  7418: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7423: 49 21 b8 01              u64 [sp + 440] = 0
  7427: 95 17 ff 07              a0 = sp + 0x7ff
  7431: 95 77 b1 03              a0 = a0 + 0x3b1
  7435: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7439: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7443: 82 17 40                 a0 = u64 [sp + 0x40]
  7446: 7b 67 20                 u64 [s1 + 0x20] = a0
  7449: 7b 66 28                 u64 [s1 + 0x28] = s1
  7452: 7b 67 30                 u64 [s1 + 0x30] = a0
  7455: 95 17 ff 07              a0 = sp + 0x7ff
  7459: 95 77 e1 03              a0 = a0 + 0x3e1
  7463: 95 18 98 01              a1 = sp + 0x198
  7467: 50 20 ae 00 6a 17        ra = 174, jump @729
      :                          @380 [@dyn 87]
  7473: 82 65 50                 s0 = u64 [s1 + 0x50]
  7476: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7479: 82 66 48                 s1 = u64 [s1 + 0x48]
  7482: 33 07 02                 a0 = 0x2
  7485: 33 08                    a1 = 0
  7487: 33 09                    a2 = 0
  7489: 64 5a                    a3 = s0
  7491: 33 00 b0 00              ra = 0xb0
  7495: 0a 64                    ecalli 100 // 'log'
  7497: 01                       fallthrough
      :                          @381 [@dyn 88]
  7498: 82 17 48                 a0 = u64 [sp + 0x48]
  7501: c8 67 07                 a0 = a0 + s1
  7504: 53 27 00 f0 24 02        jump @415 if a0 <u 4294963200
      :                          @382
  7510: 33 07 40 00 03           a0 = 0x30040
  7515: 95 77 00 10              a0 = a0 + 0x1000
  7519: 01                       fallthrough
      :                          @383
  7520: 82 78                    a1 = u64 [a0]
  7522: c9 87 09                 a2 = a0 - a1
  7525: ab 59 0f 02              jump @415 if a2 != s0
      :                          @384
  7529: c9 68 09                 a2 = a1 - s1
  7532: 01                       fallthrough
      :                          @385
  7533: 82 7a                    a3 = u64 [a0]
  7535: ab 8a f1                 jump @383 if a3 != a1
      :                          @386
  7538: 7b 79                    u64 [a0] = a2
  7540: 33 0b                    a4 = 0
  7542: 01                       fallthrough
      :                          @387
  7543: ab 8a e9                 jump @383 if a3 != a1
      :                          @388
  7546: 28 fa 01                 jump @415
      :                          @389 [@dyn 89]
  7549: 95 17 58                 a0 = sp + 0x58
  7552: 33 08 03                 a1 = 0x3
  7555: 0a 0e                    ecalli 14 // 'solicit'
  7557: 7b 67 78                 u64 [s1 + 0x78] = a0
  7560: 95 17 ff 07              a0 = sp + 0x7ff
  7564: 95 77 11 04              a0 = a0 + 0x411
  7568: 7b 67 28                 u64 [s1 + 0x28] = a0
  7571: 33 07 f0 0c 01           a0 = 0x10cf0
  7576: 7b 17 98 01              u64 [sp + 0x198] = a0
  7580: 7b 65 18                 u64 [s1 + 0x18] = s0
  7583: 82 18 40                 a1 = u64 [sp + 0x40]
  7586: 7b 68 20                 u64 [s1 + 0x20] = a1
  7589: 7b 68 30                 u64 [s1 + 0x30] = a1
  7592: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7597: 49 21 b8 01              u64 [sp + 440] = 0
  7601: 95 17 ff 07              a0 = sp + 0x7ff
  7605: 95 77 b1 03              a0 = a0 + 0x3b1
  7609: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7613: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7618: 95 17 ff 07              a0 = sp + 0x7ff
  7622: 95 77 e1 03              a0 = a0 + 0x3e1
  7626: 95 18 98 01              a1 = sp + 0x198
  7630: 50 20 b4 00 c7 16        ra = 180, jump @729
      :                          @390 [@dyn 90]
  7636: 82 65 50                 s0 = u64 [s1 + 0x50]
  7639: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7642: 95 17 ff 07              a0 = sp + 0x7ff
  7646: 95 77 99 03              a0 = a0 + 0x399
  7650: 82 76 48                 s1 = u64 [a0 + 0x48]
  7653: 33 07 02                 a0 = 0x2
  7656: 33 08                    a1 = 0
  7658: 33 09                    a2 = 0
  7660: 64 5a                    a3 = s0
  7662: 33 00 b6 00              ra = 0xb6
  7666: 0a 64                    ecalli 100 // 'log'
  7668: 01                       fallthrough
      :                          @391 [@dyn 91]
  7669: 82 17 48                 a0 = u64 [sp + 0x48]
  7672: c8 67 07                 a0 = a0 + s1
  7675: 53 27 00 f0 23           jump @397 if a0 <u 4294963200
      :                          @392
  7680: 33 07 40 00 03           a0 = 0x30040
  7685: 95 77 00 10              a0 = a0 + 0x1000
  7689: 01                       fallthrough
      :                          @393
  7690: 82 78                    a1 = u64 [a0]
  7692: c9 87 09                 a2 = a0 - a1
  7695: ab 59 0f                 jump @397 if a2 != s0
      :                          @394
  7698: c9 68 09                 a2 = a1 - s1
  7701: 01                       fallthrough
      :                          @395
  7702: 82 7a                    a3 = u64 [a0]
  7704: ab 8a f2                 jump @393 if a3 != a1
      :                          @396
  7707: 7b 79                    u64 [a0] = a2
  7709: 01                       fallthrough
      :                          @397
  7710: 95 16 ff 07              s1 = sp + 0x7ff
  7714: 95 66 99 03              s1 = s1 + 0x399
  7718: 82 67 78                 a0 = u64 [s1 + 0x78]
  7721: 33 08 01                 a1 = 0x1
  7724: 33 05 01                 s0 = 0x1
  7727: 50 20 b8 00 c2 23        ra = 184, jump @1007
      :                          @398 [@dyn 92]
  7733: 95 17 58                 a0 = sp + 0x58
  7736: 33 08 03                 a1 = 0x3
  7739: 0a 0d                    ecalli 13 // 'query'
  7741: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7745: 95 17 ff 07              a0 = sp + 0x7ff
  7749: 95 77 19 04              a0 = a0 + 0x419
  7753: 7b 67 48                 u64 [s1 + 0x48] = a0
  7756: 33 07 20 0d 01           a0 = 0x10d20
  7761: 7b 17 98 01              u64 [sp + 0x198] = a0
  7765: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  7770: 49 21 b8 01              u64 [sp + 440] = 0
  7774: 95 17 ff 07              a0 = sp + 0x7ff
  7778: 95 77 e1 03              a0 = a0 + 0x3e1
  7782: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7786: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7790: 82 17 40                 a0 = u64 [sp + 0x40]
  7793: 7b 67 50                 u64 [s1 + 0x50] = a0
  7796: 95 17 ff 07              a0 = sp + 0x7ff
  7800: 95 77 b1 03              a0 = a0 + 0x3b1
  7804: 95 18 98 01              a1 = sp + 0x198
  7808: 50 20 ba 00 15 16        ra = 186, jump @729
      :                          @399 [@dyn 93]
  7814: 82 65 20                 s0 = u64 [s1 + 0x20]
  7817: 82 6b 28                 a4 = u64 [s1 + 0x28]
  7820: 82 66 18                 s1 = u64 [s1 + 0x18]
  7823: 33 07 02                 a0 = 0x2
  7826: 33 08                    a1 = 0
  7828: 33 09                    a2 = 0
  7830: 64 5a                    a3 = s0
  7832: 33 00 bc 00              ra = 0xbc
  7836: 0a 64                    ecalli 100 // 'log'
  7838: 01                       fallthrough
      :                          @400 [@dyn 94]
  7839: 82 17 48                 a0 = u64 [sp + 0x48]
  7842: c8 67 07                 a0 = a0 + s1
  7845: 53 27 00 f0 23           jump @406 if a0 <u 4294963200
      :                          @401
  7850: 33 07 40 00 03           a0 = 0x30040
  7855: 95 77 00 10              a0 = a0 + 0x1000
  7859: 01                       fallthrough
      :                          @402
  7860: 82 78                    a1 = u64 [a0]
  7862: c9 87 09                 a2 = a0 - a1
  7865: ab 59 0f                 jump @406 if a2 != s0
      :                          @403
  7868: c9 68 09                 a2 = a1 - s1
  7871: 01                       fallthrough
      :                          @404
  7872: 82 7a                    a3 = u64 [a0]
  7874: ab 8a f2                 jump @402 if a3 != a1
      :                          @405
  7877: 7b 79                    u64 [a0] = a2
  7879: 01                       fallthrough
      :                          @406
  7880: 95 16 ff 07              s1 = sp + 0x7ff
  7884: 95 66 99 03              s1 = s1 + 0x399
  7888: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7892: 33 08 02                 a1 = 0x2
  7895: 33 05 02                 s0 = 0x2
  7898: 50 20 be 00 17 23        ra = 190, jump @1007
      :                          @407 [@dyn 95]
  7904: 95 17 78                 a0 = sp + 0x78
  7907: 33 08 03                 a1 = 0x3
  7910: 0a 0d                    ecalli 13 // 'query'
  7912: 7b 67                    u64 [s1] = a0
  7914: 33 07 50 00 01           a0 = 0x10050
  7919: 7b 67 18                 u64 [s1 + 0x18] = a0
  7922: 33 07 40 0d 01           a0 = 0x10d40
  7927: 7b 17 98 01              u64 [sp + 0x198] = a0
  7931: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7936: 49 21 b8 01              u64 [sp + 440] = 0
  7940: 95 17 ff 07              a0 = sp + 0x7ff
  7944: 95 77 b1 03              a0 = a0 + 0x3b1
  7948: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7952: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7956: 82 17 40                 a0 = u64 [sp + 0x40]
  7959: 7b 67 20                 u64 [s1 + 0x20] = a0
  7962: 7b 66 28                 u64 [s1 + 0x28] = s1
  7965: 7b 67 30                 u64 [s1 + 0x30] = a0
  7968: 95 17 ff 07              a0 = sp + 0x7ff
  7972: 95 77 e1 03              a0 = a0 + 0x3e1
  7976: 95 18 98 01              a1 = sp + 0x198
  7980: 50 20 c0 00 69 15        ra = 192, jump @729
      :                          @408 [@dyn 96]
  7986: 82 65 50                 s0 = u64 [s1 + 0x50]
  7989: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7992: 82 66 48                 s1 = u64 [s1 + 0x48]
  7995: 33 07 02                 a0 = 0x2
  7998: 33 08                    a1 = 0
  8000: 33 09                    a2 = 0
  8002: 64 5a                    a3 = s0
  8004: 33 00 c2 00              ra = 0xc2
  8008: 0a 64                    ecalli 100 // 'log'
  8010: 01                       fallthrough
      :                          @409 [@dyn 97]
  8011: 82 17 48                 a0 = u64 [sp + 0x48]
  8014: c8 67 07                 a0 = a0 + s1
  8017: 53 27 00 f0 23           jump @415 if a0 <u 4294963200
      :                          @410
  8022: 33 07 40 00 03           a0 = 0x30040
  8027: 95 77 00 10              a0 = a0 + 0x1000
  8031: 01                       fallthrough
      :                          @411
  8032: 82 78                    a1 = u64 [a0]
  8034: c9 87 09                 a2 = a0 - a1
  8037: ab 59 0f                 jump @415 if a2 != s0
      :                          @412
  8040: c9 68 09                 a2 = a1 - s1
  8043: 01                       fallthrough
      :                          @413
  8044: 82 7a                    a3 = u64 [a0]
  8046: ab 8a f2                 jump @411 if a3 != a1
      :                          @414
  8049: 7b 79                    u64 [a0] = a2
  8051: 01                       fallthrough
      :                          @415
  8052: 95 16 ff 07              s1 = sp + 0x7ff
  8056: 95 66 99 03              s1 = s1 + 0x399
  8060: 82 67                    a0 = u64 [s1]
  8062: 33 08 05                 a1 = 0x5
  8065: 33 00 52 01              ra = 0x152
  8069: 28 6c 22                 jump @1007
      :                          @416 [@dyn 98]
  8072: 95 17 58                 a0 = sp + 0x58
  8075: 33 08 03                 a1 = 0x3
  8078: 0a 0f                    ecalli 15 // 'forget'
  8080: 7b 67 70                 u64 [s1 + 0x70] = a0
  8083: 95 17 ff 07              a0 = sp + 0x7ff
  8087: 95 77 09 04              a0 = a0 + 0x409
  8091: 7b 67 28                 u64 [s1 + 0x28] = a0
  8094: 33 07 70 0d 01           a0 = 0x10d70
  8099: 7b 17 98 01              u64 [sp + 0x198] = a0
  8103: 7b 65 18                 u64 [s1 + 0x18] = s0
  8106: 82 18 40                 a1 = u64 [sp + 0x40]
  8109: 7b 68 20                 u64 [s1 + 0x20] = a1
  8112: 7b 68 30                 u64 [s1 + 0x30] = a1
  8115: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8120: 49 21 b8 01              u64 [sp + 440] = 0
  8124: 95 17 ff 07              a0 = sp + 0x7ff
  8128: 95 77 b1 03              a0 = a0 + 0x3b1
  8132: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8136: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8141: 95 17 ff 07              a0 = sp + 0x7ff
  8145: 95 77 e1 03              a0 = a0 + 0x3e1
  8149: 95 18 98 01              a1 = sp + 0x198
  8153: 50 20 c6 00 bc 14        ra = 198, jump @729
      :                          @417 [@dyn 99]
  8159: 82 65 50                 s0 = u64 [s1 + 0x50]
  8162: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8165: 95 17 ff 07              a0 = sp + 0x7ff
  8169: 95 77 99 03              a0 = a0 + 0x399
  8173: 82 76 48                 s1 = u64 [a0 + 0x48]
  8176: 33 07 02                 a0 = 0x2
  8179: 33 08                    a1 = 0
  8181: 33 09                    a2 = 0
  8183: 64 5a                    a3 = s0
  8185: 33 00 c8 00              ra = 0xc8
  8189: 0a 64                    ecalli 100 // 'log'
  8191: 01                       fallthrough
      :                          @418 [@dyn 100]
  8192: 82 17 48                 a0 = u64 [sp + 0x48]
  8195: c8 67 07                 a0 = a0 + s1
  8198: 53 27 00 f0 23           jump @424 if a0 <u 4294963200
      :                          @419
  8203: 33 07 40 00 03           a0 = 0x30040
  8208: 95 77 00 10              a0 = a0 + 0x1000
  8212: 01                       fallthrough
      :                          @420
  8213: 82 78                    a1 = u64 [a0]
  8215: c9 87 09                 a2 = a0 - a1
  8218: ab 59 0f                 jump @424 if a2 != s0
      :                          @421
  8221: c9 68 09                 a2 = a1 - s1
  8224: 01                       fallthrough
      :                          @422
  8225: 82 7a                    a3 = u64 [a0]
  8227: ab 8a f2                 jump @420 if a3 != a1
      :                          @423
  8230: 7b 79                    u64 [a0] = a2
  8232: 01                       fallthrough
      :                          @424
  8233: 95 16 ff 07              s1 = sp + 0x7ff
  8237: 95 66 99 03              s1 = s1 + 0x399
  8241: 82 67 70                 a0 = u64 [s1 + 0x70]
  8244: 33 08 01                 a1 = 0x1
  8247: 33 05 01                 s0 = 0x1
  8250: 50 20 ca 00 b7 21        ra = 202, jump @1007
      :                          @425 [@dyn 101]
  8256: 95 17 58                 a0 = sp + 0x58
  8259: 33 08 03                 a1 = 0x3
  8262: 0a 0d                    ecalli 13 // 'query'
  8264: 7b 67 78                 u64 [s1 + 0x78] = a0
  8267: 95 17 ff 07              a0 = sp + 0x7ff
  8271: 95 77 11 04              a0 = a0 + 0x411
  8275: 7b 67 48                 u64 [s1 + 0x48] = a0
  8278: 33 07 a0 0d 01           a0 = 0x10da0
  8283: 7b 17 98 01              u64 [sp + 0x198] = a0
  8287: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  8292: 49 21 b8 01              u64 [sp + 440] = 0
  8296: 95 17 ff 07              a0 = sp + 0x7ff
  8300: 95 77 e1 03              a0 = a0 + 0x3e1
  8304: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8308: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8312: 82 17 40                 a0 = u64 [sp + 0x40]
  8315: 7b 67 50                 u64 [s1 + 0x50] = a0
  8318: 95 17 ff 07              a0 = sp + 0x7ff
  8322: 95 77 b1 03              a0 = a0 + 0x3b1
  8326: 95 18 98 01              a1 = sp + 0x198
  8330: 50 20 cc 00 0b 14        ra = 204, jump @729
      :                          @426 [@dyn 102]
  8336: 82 65 20                 s0 = u64 [s1 + 0x20]
  8339: 82 6b 28                 a4 = u64 [s1 + 0x28]
  8342: 82 66 18                 s1 = u64 [s1 + 0x18]
  8345: 33 07 02                 a0 = 0x2
  8348: 33 08                    a1 = 0
  8350: 33 09                    a2 = 0
  8352: 64 5a                    a3 = s0
  8354: 33 00 ce 00              ra = 0xce
  8358: 0a 64                    ecalli 100 // 'log'
  8360: 01                       fallthrough
      :                          @427 [@dyn 103]
  8361: 82 17 48                 a0 = u64 [sp + 0x48]
  8364: c8 67 07                 a0 = a0 + s1
  8367: 53 27 00 f0 23           jump @433 if a0 <u 4294963200
      :                          @428
  8372: 33 07 40 00 03           a0 = 0x30040
  8377: 95 77 00 10              a0 = a0 + 0x1000
  8381: 01                       fallthrough
      :                          @429
  8382: 82 78                    a1 = u64 [a0]
  8384: c9 87 09                 a2 = a0 - a1
  8387: ab 59 0f                 jump @433 if a2 != s0
      :                          @430
  8390: c9 68 09                 a2 = a1 - s1
  8393: 01                       fallthrough
      :                          @431
  8394: 82 7a                    a3 = u64 [a0]
  8396: ab 8a f2                 jump @429 if a3 != a1
      :                          @432
  8399: 7b 79                    u64 [a0] = a2
  8401: 01                       fallthrough
      :                          @433
  8402: 95 16 ff 07              s1 = sp + 0x7ff
  8406: 95 66 99 03              s1 = s1 + 0x399
  8410: 82 67 78                 a0 = u64 [s1 + 0x78]
  8413: 33 08 02                 a1 = 0x2
  8416: 33 05 02                 s0 = 0x2
  8419: 50 20 d0 00 0e 21        ra = 208, jump @1007
      :                          @434 [@dyn 104]
  8425: 95 18 78                 a1 = sp + 0x78
  8428: 95 19 98 00              a2 = sp + 0x98
  8432: 33 0b 03                 a4 = 0x3
  8435: 82 17 38                 a0 = u64 [sp + 0x38]
  8438: 33 0a                    a3 = 0
  8440: 0a 01                    ecalli 1 // 'lookup'
  8442: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8446: 33 07 50 00 01           a0 = 0x10050
  8451: 7b 67 18                 u64 [s1 + 0x18] = a0
  8454: 95 17 ff 07              a0 = sp + 0x7ff
  8458: 95 77 19 04              a0 = a0 + 0x419
  8462: 7b 67 28                 u64 [s1 + 0x28] = a0
  8465: 33 07 c0 0d 01           a0 = 0x10dc0
  8470: 7b 17 98 01              u64 [sp + 0x198] = a0
  8474: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8479: 49 21 b8 01              u64 [sp + 440] = 0
  8483: 95 17 ff 07              a0 = sp + 0x7ff
  8487: 95 77 b1 03              a0 = a0 + 0x3b1
  8491: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8495: 82 17 40                 a0 = u64 [sp + 0x40]
  8498: 7b 67 20                 u64 [s1 + 0x20] = a0
  8501: 7b 67 30                 u64 [s1 + 0x30] = a0
  8504: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8508: 95 17 ff 07              a0 = sp + 0x7ff
  8512: 95 77 e1 03              a0 = a0 + 0x3e1
  8516: 95 18 98 01              a1 = sp + 0x198
  8520: 50 20 d2 00 4d 13        ra = 210, jump @729
      :                          @435 [@dyn 105]
  8526: 82 65 50                 s0 = u64 [s1 + 0x50]
  8529: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8532: 82 66 48                 s1 = u64 [s1 + 0x48]
  8535: 33 07 02                 a0 = 0x2
  8538: 33 08                    a1 = 0
  8540: 33 09                    a2 = 0
  8542: 64 5a                    a3 = s0
  8544: 33 00 d4 00              ra = 0xd4
  8548: 0a 64                    ecalli 100 // 'log'
  8550: 01                       fallthrough
      :                          @436 [@dyn 106]
  8551: 82 17 48                 a0 = u64 [sp + 0x48]
  8554: c8 67 07                 a0 = a0 + s1
  8557: 53 27 00 f0 23           jump @442 if a0 <u 4294963200
      :                          @437
  8562: 33 07 40 00 03           a0 = 0x30040
  8567: 95 77 00 10              a0 = a0 + 0x1000
  8571: 01                       fallthrough
      :                          @438
  8572: 82 78                    a1 = u64 [a0]
  8574: c9 87 09                 a2 = a0 - a1
  8577: ab 59 0f                 jump @442 if a2 != s0
      :                          @439
  8580: c9 68 09                 a2 = a1 - s1
  8583: 01                       fallthrough
      :                          @440
  8584: 82 7a                    a3 = u64 [a0]
  8586: ab 8a f2                 jump @438 if a3 != a1
      :                          @441
  8589: 7b 79                    u64 [a0] = a2
  8591: 01                       fallthrough
      :                          @442
  8592: 95 16 ff 07              s1 = sp + 0x7ff
  8596: 95 66 99 03              s1 = s1 + 0x399
  8600: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8604: 33 08 05                 a1 = 0x5
  8607: 50 20 d6 00 52 20        ra = 214, jump @1007
      :                          @443 [@dyn 107]
  8613: 33 07 e8 03              a0 = 0x3e8
  8617: 95 18 52                 a1 = sp + 0x52
  8620: 0a 06                    ecalli 6 // 'assign'
  8622: 7b 67                    u64 [s1] = a0
  8624: 33 07 38 00 01           a0 = 0x10038
  8629: 7b 67 18                 u64 [s1 + 0x18] = a0
  8632: 33 07 f0 0d 01           a0 = 0x10df0
  8637: 7b 17 98 01              u64 [sp + 0x198] = a0
  8641: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8646: 49 21 b8 01              u64 [sp + 440] = 0
  8650: 95 17 ff 07              a0 = sp + 0x7ff
  8654: 95 77 b1 03              a0 = a0 + 0x3b1
  8658: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8662: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8667: 82 17 40                 a0 = u64 [sp + 0x40]
  8670: 7b 67 20                 u64 [s1 + 0x20] = a0
  8673: 7b 66 28                 u64 [s1 + 0x28] = s1
  8676: 7b 67 30                 u64 [s1 + 0x30] = a0
  8679: 95 17 ff 07              a0 = sp + 0x7ff
  8683: 95 77 e1 03              a0 = a0 + 0x3e1
  8687: 95 18 98 01              a1 = sp + 0x198
  8691: 50 20 d8 00 a2 12        ra = 216, jump @729
      :                          @444 [@dyn 108]
  8697: 82 65 50                 s0 = u64 [s1 + 0x50]
  8700: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8703: 82 66 48                 s1 = u64 [s1 + 0x48]
  8706: 33 07 02                 a0 = 0x2
  8709: 33 08                    a1 = 0
  8711: 33 09                    a2 = 0
  8713: 64 5a                    a3 = s0
  8715: 33 00 da 00              ra = 0xda
  8719: 0a 64                    ecalli 100 // 'log'
  8721: 01                       fallthrough
      :                          @445 [@dyn 109]
  8722: 82 17 48                 a0 = u64 [sp + 0x48]
  8725: c8 67 07                 a0 = a0 + s1
  8728: 53 27 00 f0 f4 02        jump @488 if a0 <u 4294963200
      :                          @446
  8734: 33 07 40 00 03           a0 = 0x30040
  8739: 95 77 00 10              a0 = a0 + 0x1000
  8743: 01                       fallthrough
      :                          @447
  8744: 82 78                    a1 = u64 [a0]
  8746: c9 87 09                 a2 = a0 - a1
  8749: ab 59 df 02              jump @488 if a2 != s0
      :                          @448
  8753: c9 68 09                 a2 = a1 - s1
  8756: 01                       fallthrough
      :                          @449
  8757: 82 7a                    a3 = u64 [a0]
  8759: ab 8a f1                 jump @447 if a3 != a1
      :                          @450
  8762: 7b 79                    u64 [a0] = a2
  8764: 33 0b                    a4 = 0
  8766: 01                       fallthrough
      :                          @451
  8767: ab 8a e9                 jump @447 if a3 != a1
      :                          @452
  8770: 28 ca 02                 jump @488
      :                          @453 [@dyn 110]
  8773: 95 18 58                 a1 = sp + 0x58
  8776: 95 19 98 00              a2 = sp + 0x98
  8780: 33 0b 03                 a4 = 0x3
  8783: 82 17 38                 a0 = u64 [sp + 0x38]
  8786: 33 0a                    a3 = 0
  8788: 0a 01                    ecalli 1 // 'lookup'
  8790: 7b 67 70                 u64 [s1 + 0x70] = a0
  8793: 7b 65 18                 u64 [s1 + 0x18] = s0
  8796: 82 18 40                 a1 = u64 [sp + 0x40]
  8799: 7b 68 20                 u64 [s1 + 0x20] = a1
  8802: 95 17 ff 07              a0 = sp + 0x7ff
  8806: 95 77 09 04              a0 = a0 + 0x409
  8810: 7b 67 28                 u64 [s1 + 0x28] = a0
  8813: 7b 68 30                 u64 [s1 + 0x30] = a1
  8816: 33 07 20 0e 01           a0 = 0x10e20
  8821: 7b 17 98 01              u64 [sp + 0x198] = a0
  8825: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8830: 49 21 b8 01              u64 [sp + 440] = 0
  8834: 95 17 ff 07              a0 = sp + 0x7ff
  8838: 95 77 b1 03              a0 = a0 + 0x3b1
  8842: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8846: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8851: 95 17 ff 07              a0 = sp + 0x7ff
  8855: 95 77 e1 03              a0 = a0 + 0x3e1
  8859: 95 18 98 01              a1 = sp + 0x198
  8863: 50 20 de 00 f6 11        ra = 222, jump @729
      :                          @454 [@dyn 111]
  8869: 82 65 50                 s0 = u64 [s1 + 0x50]
  8872: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8875: 95 17 ff 07              a0 = sp + 0x7ff
  8879: 95 77 99 03              a0 = a0 + 0x399
  8883: 82 76 48                 s1 = u64 [a0 + 0x48]
  8886: 33 07 02                 a0 = 0x2
  8889: 33 08                    a1 = 0
  8891: 33 09                    a2 = 0
  8893: 64 5a                    a3 = s0
  8895: 33 00 e0 00              ra = 0xe0
  8899: 0a 64                    ecalli 100 // 'log'
  8901: 01                       fallthrough
      :                          @455 [@dyn 112]
  8902: 82 17 48                 a0 = u64 [sp + 0x48]
  8905: c8 67 07                 a0 = a0 + s1
  8908: 53 27 00 f0 23           jump @461 if a0 <u 4294963200
      :                          @456
  8913: 33 07 40 00 03           a0 = 0x30040
  8918: 95 77 00 10              a0 = a0 + 0x1000
  8922: 01                       fallthrough
      :                          @457
  8923: 82 78                    a1 = u64 [a0]
  8925: c9 87 09                 a2 = a0 - a1
  8928: ab 59 0f                 jump @461 if a2 != s0
      :                          @458
  8931: c9 68 09                 a2 = a1 - s1
  8934: 01                       fallthrough
      :                          @459
  8935: 82 7a                    a3 = u64 [a0]
  8937: ab 8a f2                 jump @457 if a3 != a1
      :                          @460
  8940: 7b 79                    u64 [a0] = a2
  8942: 01                       fallthrough
      :                          @461
  8943: 95 16 ff 07              s1 = sp + 0x7ff
  8947: 95 66 99 03              s1 = s1 + 0x399
  8951: 82 67 70                 a0 = u64 [s1 + 0x70]
  8954: 33 08 01                 a1 = 0x1
  8957: 50 20 e2 00 f4 1e        ra = 226, jump @1007
      :                          @462 [@dyn 113]
  8963: 95 17 58                 a0 = sp + 0x58
  8966: 33 08 03                 a1 = 0x3
  8969: 0a 0d                    ecalli 13 // 'query'
  8971: 7b 67 78                 u64 [s1 + 0x78] = a0
  8974: 95 17 ff 07              a0 = sp + 0x7ff
  8978: 95 77 11 04              a0 = a0 + 0x411
  8982: 7b 67 28                 u64 [s1 + 0x28] = a0
  8985: 33 07 50 0e 01           a0 = 0x10e50
  8990: 7b 17 98 01              u64 [sp + 0x198] = a0
  8994: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8999: 49 21 b8 01              u64 [sp + 440] = 0
  9003: 95 17 ff 07              a0 = sp + 0x7ff
  9007: 95 77 b1 03              a0 = a0 + 0x3b1
  9011: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9015: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9020: 82 17 30                 a0 = u64 [sp + 0x30]
  9023: 7b 67 18                 u64 [s1 + 0x18] = a0
  9026: 82 17 40                 a0 = u64 [sp + 0x40]
  9029: 7b 67 20                 u64 [s1 + 0x20] = a0
  9032: 7b 67 30                 u64 [s1 + 0x30] = a0
  9035: 95 17 ff 07              a0 = sp + 0x7ff
  9039: 95 77 e1 03              a0 = a0 + 0x3e1
  9043: 95 18 98 01              a1 = sp + 0x198
  9047: 50 20 e4 00 3e 11        ra = 228, jump @729
      :                          @463 [@dyn 114]
  9053: 82 65 50                 s0 = u64 [s1 + 0x50]
  9056: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9059: 82 66 48                 s1 = u64 [s1 + 0x48]
  9062: 33 07 02                 a0 = 0x2
  9065: 33 08                    a1 = 0
  9067: 33 09                    a2 = 0
  9069: 64 5a                    a3 = s0
  9071: 33 00 e6 00              ra = 0xe6
  9075: 0a 64                    ecalli 100 // 'log'
  9077: 01                       fallthrough
      :                          @464 [@dyn 115]
  9078: 82 17 48                 a0 = u64 [sp + 0x48]
  9081: c8 67 07                 a0 = a0 + s1
  9084: 53 27 00 f0 23           jump @470 if a0 <u 4294963200
      :                          @465
  9089: 33 07 40 00 03           a0 = 0x30040
  9094: 95 77 00 10              a0 = a0 + 0x1000
  9098: 01                       fallthrough
      :                          @466
  9099: 82 78                    a1 = u64 [a0]
  9101: c9 87 09                 a2 = a0 - a1
  9104: ab 59 0f                 jump @470 if a2 != s0
      :                          @467
  9107: c9 68 09                 a2 = a1 - s1
  9110: 01                       fallthrough
      :                          @468
  9111: 82 7a                    a3 = u64 [a0]
  9113: ab 8a f2                 jump @466 if a3 != a1
      :                          @469
  9116: 7b 79                    u64 [a0] = a2
  9118: 01                       fallthrough
      :                          @470
  9119: 95 16 ff 07              s1 = sp + 0x7ff
  9123: 95 66 99 03              s1 = s1 + 0x399
  9127: 82 67 78                 a0 = u64 [s1 + 0x78]
  9130: 33 08 02                 a1 = 0x2
  9133: 33 05 02                 s0 = 0x2
  9136: 50 20 e8 00 41 1e        ra = 232, jump @1007
      :                          @471 [@dyn 116]
  9142: 95 18 58                 a1 = sp + 0x58
  9145: 82 17 38                 a0 = u64 [sp + 0x38]
  9148: 0a 0c                    ecalli 12 // 'eject'
  9150: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9154: 33 07 30 00 01           a0 = 0x10030
  9159: 7b 17 10                 u64 [sp + 0x10] = a0
  9162: 7b 67 18                 u64 [s1 + 0x18] = a0
  9165: 82 18 40                 a1 = u64 [sp + 0x40]
  9168: 7b 68 20                 u64 [s1 + 0x20] = a1
  9171: 95 17 ff 07              a0 = sp + 0x7ff
  9175: 95 77 19 04              a0 = a0 + 0x419
  9179: 7b 67 28                 u64 [s1 + 0x28] = a0
  9182: 7b 68 30                 u64 [s1 + 0x30] = a1
  9185: 33 07 80 0e 01           a0 = 0x10e80
  9190: 7b 17 98 01              u64 [sp + 0x198] = a0
  9194: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9199: 49 21 b8 01              u64 [sp + 440] = 0
  9203: 95 17 ff 07              a0 = sp + 0x7ff
  9207: 95 77 b1 03              a0 = a0 + 0x3b1
  9211: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9215: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9219: 95 17 ff 07              a0 = sp + 0x7ff
  9223: 95 77 e1 03              a0 = a0 + 0x3e1
  9227: 95 18 98 01              a1 = sp + 0x198
  9231: 50 20 ea 00 86 10        ra = 234, jump @729
      :                          @472 [@dyn 117]
  9237: 82 65 50                 s0 = u64 [s1 + 0x50]
  9240: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9243: 82 66 48                 s1 = u64 [s1 + 0x48]
  9246: 33 07 02                 a0 = 0x2
  9249: 33 08                    a1 = 0
  9251: 33 09                    a2 = 0
  9253: 64 5a                    a3 = s0
  9255: 33 00 ec 00              ra = 0xec
  9259: 0a 64                    ecalli 100 // 'log'
  9261: 01                       fallthrough
      :                          @473 [@dyn 118]
  9262: 82 17 48                 a0 = u64 [sp + 0x48]
  9265: c8 67 07                 a0 = a0 + s1
  9268: 53 27 00 f0 23           jump @479 if a0 <u 4294963200
      :                          @474
  9273: 33 07 40 00 03           a0 = 0x30040
  9278: 95 77 00 10              a0 = a0 + 0x1000
  9282: 01                       fallthrough
      :                          @475
  9283: 82 78                    a1 = u64 [a0]
  9285: c9 87 09                 a2 = a0 - a1
  9288: ab 59 0f                 jump @479 if a2 != s0
      :                          @476
  9291: c9 68 09                 a2 = a1 - s1
  9294: 01                       fallthrough
      :                          @477
  9295: 82 7a                    a3 = u64 [a0]
  9297: ab 8a f2                 jump @475 if a3 != a1
      :                          @478
  9300: 7b 79                    u64 [a0] = a2
  9302: 01                       fallthrough
      :                          @479
  9303: 95 16 ff 07              s1 = sp + 0x7ff
  9307: 95 66 99 03              s1 = s1 + 0x399
  9311: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9315: 33 08 05                 a1 = 0x5
  9318: 50 20 ee 00 8b 1d        ra = 238, jump @1007
      :                          @480 [@dyn 119]
  9324: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  9334: 95 1a 58                 a3 = sp + 0x58
  9337: 33 08                    a1 = 0
  9339: 33 09                    a2 = 0
  9341: 33 0b                    a4 = 0
  9343: 0a 05                    ecalli 5 // 'bless'
  9345: 7b 67                    u64 [s1] = a0
  9347: 82 17 10                 a0 = u64 [sp + 0x10]
  9350: 7b 67 18                 u64 [s1 + 0x18] = a0
  9353: 33 07 b0 0e 01           a0 = 0x10eb0
  9358: 7b 17 98 01              u64 [sp + 0x198] = a0
  9362: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9367: 49 21 b8 01              u64 [sp + 440] = 0
  9371: 95 17 ff 07              a0 = sp + 0x7ff
  9375: 95 77 b1 03              a0 = a0 + 0x3b1
  9379: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9383: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9388: 82 17 40                 a0 = u64 [sp + 0x40]
  9391: 7b 67 20                 u64 [s1 + 0x20] = a0
  9394: 7b 66 28                 u64 [s1 + 0x28] = s1
  9397: 7b 67 30                 u64 [s1 + 0x30] = a0
  9400: 95 17 ff 07              a0 = sp + 0x7ff
  9404: 95 77 e1 03              a0 = a0 + 0x3e1
  9408: 95 18 98 01              a1 = sp + 0x198
  9412: 50 20 f0 00 d1 0f        ra = 240, jump @729
      :                          @481 [@dyn 120]
  9418: 82 65 50                 s0 = u64 [s1 + 0x50]
  9421: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9424: 82 66 48                 s1 = u64 [s1 + 0x48]
  9427: 33 07 02                 a0 = 0x2
  9430: 33 08                    a1 = 0
  9432: 33 09                    a2 = 0
  9434: 64 5a                    a3 = s0
  9436: 33 00 f2 00              ra = 0xf2
  9440: 0a 64                    ecalli 100 // 'log'
  9442: 01                       fallthrough
      :                          @482 [@dyn 121]
  9443: 82 17 48                 a0 = u64 [sp + 0x48]
  9446: c8 67 07                 a0 = a0 + s1
  9449: 53 27 00 f0 23           jump @488 if a0 <u 4294963200
      :                          @483
  9454: 33 07 40 00 03           a0 = 0x30040
  9459: 95 77 00 10              a0 = a0 + 0x1000
  9463: 01                       fallthrough
      :                          @484
  9464: 82 78                    a1 = u64 [a0]
  9466: c9 87 09                 a2 = a0 - a1
  9469: ab 59 0f                 jump @488 if a2 != s0
      :                          @485
  9472: c9 68 09                 a2 = a1 - s1
  9475: 01                       fallthrough
      :                          @486
  9476: 82 7a                    a3 = u64 [a0]
  9478: ab 8a f2                 jump @484 if a3 != a1
      :                          @487
  9481: 7b 79                    u64 [a0] = a2
  9483: 01                       fallthrough
      :                          @488
  9484: 95 16 ff 07              s1 = sp + 0x7ff
  9488: 95 66 99 03              s1 = s1 + 0x399
  9492: 82 67                    a0 = u64 [s1]
  9494: 33 08 06                 a1 = 0x6
  9497: 33 00 52 01              ra = 0x152
  9501: 28 d4 1c                 jump @1007
      :                          @489 [@dyn 122]
  9504: 95 17 58                 a0 = sp + 0x58
  9507: 33 08 03                 a1 = 0x3
  9510: 0a 0e                    ecalli 14 // 'solicit'
  9512: 7b 67 70                 u64 [s1 + 0x70] = a0
  9515: 33 08 01                 a1 = 0x1
  9518: 50 20 f6 00 c3 1c        ra = 246, jump @1007
      :                          @490 [@dyn 123]
  9524: 7b 65 18                 u64 [s1 + 0x18] = s0
  9527: 82 18 40                 a1 = u64 [sp + 0x40]
  9530: 7b 68 20                 u64 [s1 + 0x20] = a1
  9533: 95 17 ff 07              a0 = sp + 0x7ff
  9537: 95 77 09 04              a0 = a0 + 0x409
  9541: 7b 67 28                 u64 [s1 + 0x28] = a0
  9544: 7b 68 30                 u64 [s1 + 0x30] = a1
  9547: 33 07 e0 0e 01           a0 = 0x10ee0
  9552: 7b 17 98 01              u64 [sp + 0x198] = a0
  9556: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9561: 49 21 b8 01              u64 [sp + 440] = 0
  9565: 95 17 ff 07              a0 = sp + 0x7ff
  9569: 95 77 b1 03              a0 = a0 + 0x3b1
  9573: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9577: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9582: 95 17 ff 07              a0 = sp + 0x7ff
  9586: 95 77 e1 03              a0 = a0 + 0x3e1
  9590: 95 18 98 01              a1 = sp + 0x198
  9594: 50 20 f8 00 1b 0f        ra = 248, jump @729
      :                          @491 [@dyn 124]
  9600: 82 65 50                 s0 = u64 [s1 + 0x50]
  9603: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9606: 95 17 ff 07              a0 = sp + 0x7ff
  9610: 95 77 99 03              a0 = a0 + 0x399
  9614: 82 76 48                 s1 = u64 [a0 + 0x48]
  9617: 33 07 02                 a0 = 0x2
  9620: 33 08                    a1 = 0
  9622: 33 09                    a2 = 0
  9624: 64 5a                    a3 = s0
  9626: 33 00 fa 00              ra = 0xfa
  9630: 0a 64                    ecalli 100 // 'log'
  9632: 01                       fallthrough
      :                          @492 [@dyn 125]
  9633: 82 17 48                 a0 = u64 [sp + 0x48]
  9636: c8 67 07                 a0 = a0 + s1
  9639: 53 27 00 f0 23           jump @498 if a0 <u 4294963200
      :                          @493
  9644: 33 07 40 00 03           a0 = 0x30040
  9649: 95 77 00 10              a0 = a0 + 0x1000
  9653: 01                       fallthrough
      :                          @494
  9654: 82 78                    a1 = u64 [a0]
  9656: c9 87 09                 a2 = a0 - a1
  9659: ab 59 0f                 jump @498 if a2 != s0
      :                          @495
  9662: c9 68 09                 a2 = a1 - s1
  9665: 01                       fallthrough
      :                          @496
  9666: 82 7a                    a3 = u64 [a0]
  9668: ab 8a f2                 jump @494 if a3 != a1
      :                          @497
  9671: 7b 79                    u64 [a0] = a2
  9673: 01                       fallthrough
      :                          @498
  9674: 95 17 58                 a0 = sp + 0x58
  9677: 33 08 03                 a1 = 0x3
  9680: 0a 0d                    ecalli 13 // 'query'
  9682: 95 18 ff 07              a1 = sp + 0x7ff
  9686: 95 88 99 03              a1 = a1 + 0x399
  9690: 7b 87 78                 u64 [a1 + 0x78] = a0
  9693: 95 17 ff 07              a0 = sp + 0x7ff
  9697: 95 77 11 04              a0 = a0 + 0x411
  9701: 7b 87 28                 u64 [a1 + 0x28] = a0
  9704: 33 07 50 0e 01           a0 = 0x10e50
  9709: 7b 17 98 01              u64 [sp + 0x198] = a0
  9713: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9718: 49 21 b8 01              u64 [sp + 440] = 0
  9722: 95 17 ff 07              a0 = sp + 0x7ff
  9726: 95 77 b1 03              a0 = a0 + 0x3b1
  9730: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9734: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9739: 82 17 30                 a0 = u64 [sp + 0x30]
  9742: 7b 87 18                 u64 [a1 + 0x18] = a0
  9745: 82 17 40                 a0 = u64 [sp + 0x40]
  9748: 7b 87 20                 u64 [a1 + 0x20] = a0
  9751: 7b 87 30                 u64 [a1 + 0x30] = a0
  9754: 95 17 ff 07              a0 = sp + 0x7ff
  9758: 95 77 e1 03              a0 = a0 + 0x3e1
  9762: 95 18 98 01              a1 = sp + 0x198
  9766: 95 15 98 01              s0 = sp + 0x198
  9770: 50 20 fc 00 6b 0e        ra = 252, jump @729
      :                          @499 [@dyn 126]
  9776: 95 17 ff 07              a0 = sp + 0x7ff
  9780: 95 77 99 03              a0 = a0 + 0x399
  9784: 82 76 50                 s1 = u64 [a0 + 0x50]
  9787: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9790: 82 77 48                 a0 = u64 [a0 + 0x48]
  9793: 7b 17 10                 u64 [sp + 0x10] = a0
  9796: 33 07 02                 a0 = 0x2
  9799: 33 08                    a1 = 0
  9801: 33 09                    a2 = 0
  9803: 64 6a                    a3 = s1
  9805: 33 00 fe 00              ra = 0xfe
  9809: 0a 64                    ecalli 100 // 'log'
  9811: 01                       fallthrough
      :                          @500 [@dyn 127]
  9812: 82 1c 10                 a5 = u64 [sp + 0x10]
  9815: 82 17 48                 a0 = u64 [sp + 0x48]
  9818: c8 c7 07                 a0 = a0 + a5
  9821: 53 27 00 f0 23           jump @506 if a0 <u 4294963200
      :                          @501
  9826: 33 07 40 00 03           a0 = 0x30040
  9831: 95 77 00 10              a0 = a0 + 0x1000
  9835: 01                       fallthrough
      :                          @502
  9836: 82 78                    a1 = u64 [a0]
  9838: c9 87 09                 a2 = a0 - a1
  9841: ab 69 0f                 jump @506 if a2 != s1
      :                          @503
  9844: c9 c8 09                 a2 = a1 - a5
  9847: 01                       fallthrough
      :                          @504
  9848: 82 7a                    a3 = u64 [a0]
  9850: ab 8a f2                 jump @502 if a3 != a1
      :                          @505
  9853: 7b 79                    u64 [a0] = a2
  9855: 01                       fallthrough
      :                          @506
  9856: 95 17 ff 07              a0 = sp + 0x7ff
  9860: 95 77 99 03              a0 = a0 + 0x399
  9864: 82 77 78                 a0 = u64 [a0 + 0x78]
  9867: 33 08 02                 a1 = 0x2
  9870: 50 20 00 01 63 1b        ra = 256, jump @1007
      :                          @507 [@dyn 128]
  9876: 33 09 00 0a              a2 = 0xa00
  9880: 95 17 98 01              a0 = sp + 0x198
  9884: 33 08                    a1 = 0
  9886: 50 20 02 01 1e 11        ra = 258, jump @797
      :                          @508 [@dyn 129]
  9892: 33 06 50                 s1 = 0x50
  9895: 01                       fallthrough
      :                          @509
  9896: 95 18 58                 a1 = sp + 0x58
  9899: 33 09 20                 a2 = 0x20
  9902: 64 57                    a0 = s0
  9904: 50 20 04 01 5a 10        ra = 260, jump @779
      :                          @510 [@dyn 130]
  9910: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  9913: 95 55 20                 s0 = s0 + 0x20
  9916: 52 06 ec                 jump @509 if s1 != 0
      :                          @511
  9919: 95 18 98 01              a1 = sp + 0x198
  9923: 33 07                    a0 = 0
  9925: 0a 06                    ecalli 6 // 'assign'
  9927: 95 16 ff 07              s1 = sp + 0x7ff
  9931: 95 66 99 03              s1 = s1 + 0x399
  9935: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9939: 95 17 ff 07              a0 = sp + 0x7ff
  9943: 95 77 19 04              a0 = a0 + 0x419
  9947: 7b 67 58                 u64 [s1 + 0x58] = a0
  9950: 33 07 10 0f 01           a0 = 0x10f10
  9955: 7b 67 18                 u64 [s1 + 0x18] = a0
  9958: 49 16 20 03              u64 [s1 + 32] = 0x3
  9962: 95 17 ff 07              a0 = sp + 0x7ff
  9966: 95 77 e1 03              a0 = a0 + 0x3e1
  9970: 7b 67 28                 u64 [s1 + 0x28] = a0
  9973: 49 16 30 02              u64 [s1 + 48] = 0x2
  9977: 82 17 30                 a0 = u64 [sp + 0x30]
  9980: 7b 67 48                 u64 [s1 + 0x48] = a0
  9983: 82 17 40                 a0 = u64 [sp + 0x40]
  9986: 7b 67 50                 u64 [s1 + 0x50] = a0
  9989: 7b 67 60                 u64 [s1 + 0x60] = a0
  9992: 49 16 38                 u64 [s1 + 56] = 0
  9995: 95 17 ff 07              a0 = sp + 0x7ff
  9999: 95 77 99 03              a0 = a0 + 0x399
 10003: 95 18 ff 07              a1 = sp + 0x7ff
 10007: 95 88 b1 03              a1 = a1 + 0x3b1
 10011: 50 20 06 01 7a 0d        ra = 262, jump @729
      :                          @512 [@dyn 131]
 10017: 82 65 08                 s0 = u64 [s1 + 0x8]
 10020: 82 6b 10                 a4 = u64 [s1 + 0x10]
 10023: 82 66                    s1 = u64 [s1]
 10025: 33 07 02                 a0 = 0x2
 10028: 33 08                    a1 = 0
 10030: 33 09                    a2 = 0
 10032: 64 5a                    a3 = s0
 10034: 33 00 08 01              ra = 0x108
 10038: 0a 64                    ecalli 100 // 'log'
 10040: 01                       fallthrough
      :                          @513 [@dyn 132]
 10041: 82 17 48                 a0 = u64 [sp + 0x48]
 10044: c8 67 07                 a0 = a0 + s1
 10047: 53 27 00 f0 12 05        jump @584 if a0 <u 4294963200
      :                          @514
 10053: 33 07 40 00 03           a0 = 0x30040
 10058: 95 77 00 10              a0 = a0 + 0x1000
 10062: 01                       fallthrough
      :                          @515
 10063: 82 78                    a1 = u64 [a0]
 10065: c9 87 09                 a2 = a0 - a1
 10068: ab 59 fd 04              jump @584 if a2 != s0
      :                          @516
 10072: c9 68 09                 a2 = a1 - s1
 10075: 01                       fallthrough
      :                          @517
 10076: 82 7a                    a3 = u64 [a0]
 10078: ab 8a f1                 jump @515 if a3 != a1
      :                          @518
 10081: 7b 79                    u64 [a0] = a2
 10083: 33 0b                    a4 = 0
 10085: 01                       fallthrough
      :                          @519
 10086: ab 8a e9                 jump @515 if a3 != a1
      :                          @520
 10089: 28 e8 04                 jump @584
      :                          @521 [@dyn 133]
 10092: 95 17 58                 a0 = sp + 0x58
 10095: 33 08 03                 a1 = 0x3
 10098: 0a 0f                    ecalli 15 // 'forget'
 10100: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10104: 7b 65 18                 u64 [s1 + 0x18] = s0
 10107: 82 18 40                 a1 = u64 [sp + 0x40]
 10110: 7b 68 20                 u64 [s1 + 0x20] = a1
 10113: 95 17 ff 07              a0 = sp + 0x7ff
 10117: 95 77 19 04              a0 = a0 + 0x419
 10121: 7b 67 28                 u64 [s1 + 0x28] = a0
 10124: 7b 68 30                 u64 [s1 + 0x30] = a1
 10127: 33 07 70 0d 01           a0 = 0x10d70
 10132: 7b 17 98 01              u64 [sp + 0x198] = a0
 10136: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10141: 49 21 b8 01              u64 [sp + 440] = 0
 10145: 95 17 ff 07              a0 = sp + 0x7ff
 10149: 95 77 b1 03              a0 = a0 + 0x3b1
 10153: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10157: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10162: 95 17 ff 07              a0 = sp + 0x7ff
 10166: 95 77 e1 03              a0 = a0 + 0x3e1
 10170: 95 18 98 01              a1 = sp + 0x198
 10174: 50 20 0c 01 d7 0c        ra = 268, jump @729
      :                          @522 [@dyn 134]
 10180: 82 65 50                 s0 = u64 [s1 + 0x50]
 10183: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10186: 95 17 ff 07              a0 = sp + 0x7ff
 10190: 95 77 99 03              a0 = a0 + 0x399
 10194: 82 76 48                 s1 = u64 [a0 + 0x48]
 10197: 33 07 02                 a0 = 0x2
 10200: 33 08                    a1 = 0
 10202: 33 09                    a2 = 0
 10204: 64 5a                    a3 = s0
 10206: 33 00 0e 01              ra = 0x10e
 10210: 0a 64                    ecalli 100 // 'log'
 10212: 01                       fallthrough
      :                          @523 [@dyn 135]
 10213: 82 17 48                 a0 = u64 [sp + 0x48]
 10216: c8 67 07                 a0 = a0 + s1
 10219: 53 27 00 f0 23           jump @529 if a0 <u 4294963200
      :                          @524
 10224: 33 07 40 00 03           a0 = 0x30040
 10229: 95 77 00 10              a0 = a0 + 0x1000
 10233: 01                       fallthrough
      :                          @525
 10234: 82 78                    a1 = u64 [a0]
 10236: c9 87 09                 a2 = a0 - a1
 10239: ab 59 0f                 jump @529 if a2 != s0
      :                          @526
 10242: c9 68 09                 a2 = a1 - s1
 10245: 01                       fallthrough
      :                          @527
 10246: 82 7a                    a3 = u64 [a0]
 10248: ab 8a f2                 jump @525 if a3 != a1
      :                          @528
 10251: 7b 79                    u64 [a0] = a2
 10253: 01                       fallthrough
      :                          @529
 10254: 95 16 ff 07              s1 = sp + 0x7ff
 10258: 95 66 99 03              s1 = s1 + 0x399
 10262: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10266: 33 08 01                 a1 = 0x1
 10269: 50 20 10 01 d4 19        ra = 272, jump @1007
      :                          @530 [@dyn 136]
 10275: 95 17 58                 a0 = sp + 0x58
 10278: 33 08 03                 a1 = 0x3
 10281: 0a 0d                    ecalli 13 // 'query'
 10283: 7b 67                    u64 [s1] = a0
 10285: 33 07 40 0f 01           a0 = 0x10f40
 10290: 7b 17 98 01              u64 [sp + 0x198] = a0
 10294: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10299: 49 21 b8 01              u64 [sp + 440] = 0
 10303: 95 17 ff 07              a0 = sp + 0x7ff
 10307: 95 77 b1 03              a0 = a0 + 0x3b1
 10311: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10315: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10320: 82 17 30                 a0 = u64 [sp + 0x30]
 10323: 7b 67 18                 u64 [s1 + 0x18] = a0
 10326: 82 17 40                 a0 = u64 [sp + 0x40]
 10329: 7b 67 20                 u64 [s1 + 0x20] = a0
 10332: 7b 66 28                 u64 [s1 + 0x28] = s1
 10335: 7b 67 30                 u64 [s1 + 0x30] = a0
 10338: 95 17 ff 07              a0 = sp + 0x7ff
 10342: 95 77 e1 03              a0 = a0 + 0x3e1
 10346: 95 18 98 01              a1 = sp + 0x198
 10350: 50 20 12 01 27 0c        ra = 274, jump @729
      :                          @531 [@dyn 137]
 10356: 82 65 50                 s0 = u64 [s1 + 0x50]
 10359: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10362: 82 66 48                 s1 = u64 [s1 + 0x48]
 10365: 33 07 02                 a0 = 0x2
 10368: 33 08                    a1 = 0
 10370: 33 09                    a2 = 0
 10372: 64 5a                    a3 = s0
 10374: 33 00 14 01              ra = 0x114
 10378: 0a 64                    ecalli 100 // 'log'
 10380: 01                       fallthrough
      :                          @532 [@dyn 138]
 10381: 82 17 48                 a0 = u64 [sp + 0x48]
 10384: c8 67 07                 a0 = a0 + s1
 10387: 53 27 00 f0 80 01        jump @557 if a0 <u 4294963200
      :                          @533
 10393: 33 07 40 00 03           a0 = 0x30040
 10398: 95 77 00 10              a0 = a0 + 0x1000
 10402: 01                       fallthrough
      :                          @534
 10403: 82 78                    a1 = u64 [a0]
 10405: c9 87 09                 a2 = a0 - a1
 10408: ab 59 6b 01              jump @557 if a2 != s0
      :                          @535
 10412: c9 68 09                 a2 = a1 - s1
 10415: 01                       fallthrough
      :                          @536
 10416: 82 7a                    a3 = u64 [a0]
 10418: ab 8a f1                 jump @534 if a3 != a1
      :                          @537
 10421: 7b 79                    u64 [a0] = a2
 10423: 33 0b                    a4 = 0
 10425: 01                       fallthrough
      :                          @538
 10426: ab 8a e9                 jump @534 if a3 != a1
      :                          @539
 10429: 28 56 01                 jump @557
      :                          @540 [@dyn 139]
 10432: 95 18 58                 a1 = sp + 0x58
 10435: 95 19 98 00              a2 = sp + 0x98
 10439: 33 0b 03                 a4 = 0x3
 10442: 82 17 38                 a0 = u64 [sp + 0x38]
 10445: 33 0a                    a3 = 0
 10447: 0a 01                    ecalli 1 // 'lookup'
 10449: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10453: 7b 65 18                 u64 [s1 + 0x18] = s0
 10456: 82 18 40                 a1 = u64 [sp + 0x40]
 10459: 7b 68 20                 u64 [s1 + 0x20] = a1
 10462: 95 17 ff 07              a0 = sp + 0x7ff
 10466: 95 77 19 04              a0 = a0 + 0x419
 10470: 7b 67 28                 u64 [s1 + 0x28] = a0
 10473: 7b 68 30                 u64 [s1 + 0x30] = a1
 10476: 33 07 70 0f 01           a0 = 0x10f70
 10481: 7b 17 98 01              u64 [sp + 0x198] = a0
 10485: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10490: 49 21 b8 01              u64 [sp + 440] = 0
 10494: 95 17 ff 07              a0 = sp + 0x7ff
 10498: 95 77 b1 03              a0 = a0 + 0x3b1
 10502: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10506: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10511: 95 17 ff 07              a0 = sp + 0x7ff
 10515: 95 77 e1 03              a0 = a0 + 0x3e1
 10519: 95 18 98 01              a1 = sp + 0x198
 10523: 50 20 18 01 7a 0b        ra = 280, jump @729
      :                          @541 [@dyn 140]
 10529: 82 65 50                 s0 = u64 [s1 + 0x50]
 10532: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10535: 95 17 ff 07              a0 = sp + 0x7ff
 10539: 95 77 99 03              a0 = a0 + 0x399
 10543: 82 76 48                 s1 = u64 [a0 + 0x48]
 10546: 33 07 02                 a0 = 0x2
 10549: 33 08                    a1 = 0
 10551: 33 09                    a2 = 0
 10553: 64 5a                    a3 = s0
 10555: 33 00 1a 01              ra = 0x11a
 10559: 0a 64                    ecalli 100 // 'log'
 10561: 01                       fallthrough
      :                          @542 [@dyn 141]
 10562: 82 17 48                 a0 = u64 [sp + 0x48]
 10565: c8 67 07                 a0 = a0 + s1
 10568: 53 27 00 f0 23           jump @548 if a0 <u 4294963200
      :                          @543
 10573: 33 07 40 00 03           a0 = 0x30040
 10578: 95 77 00 10              a0 = a0 + 0x1000
 10582: 01                       fallthrough
      :                          @544
 10583: 82 78                    a1 = u64 [a0]
 10585: c9 87 09                 a2 = a0 - a1
 10588: ab 59 0f                 jump @548 if a2 != s0
      :                          @545
 10591: c9 68 09                 a2 = a1 - s1
 10594: 01                       fallthrough
      :                          @546
 10595: 82 7a                    a3 = u64 [a0]
 10597: ab 8a f2                 jump @544 if a3 != a1
      :                          @547
 10600: 7b 79                    u64 [a0] = a2
 10602: 01                       fallthrough
      :                          @548
 10603: 95 16 ff 07              s1 = sp + 0x7ff
 10607: 95 66 99 03              s1 = s1 + 0x399
 10611: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10615: 33 08 01                 a1 = 0x1
 10618: 50 20 1c 01 77 18        ra = 284, jump @1007
      :                          @549 [@dyn 142]
 10624: 95 17 58                 a0 = sp + 0x58
 10627: 33 08 03                 a1 = 0x3
 10630: 0a 0d                    ecalli 13 // 'query'
 10632: 7b 67                    u64 [s1] = a0
 10634: 33 07 a0 0f 01           a0 = 0x10fa0
 10639: 7b 17 98 01              u64 [sp + 0x198] = a0
 10643: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10648: 49 21 b8 01              u64 [sp + 440] = 0
 10652: 95 17 ff 07              a0 = sp + 0x7ff
 10656: 95 77 b1 03              a0 = a0 + 0x3b1
 10660: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10664: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10669: 82 17 30                 a0 = u64 [sp + 0x30]
 10672: 7b 67 18                 u64 [s1 + 0x18] = a0
 10675: 82 17 40                 a0 = u64 [sp + 0x40]
 10678: 7b 67 20                 u64 [s1 + 0x20] = a0
 10681: 7b 66 28                 u64 [s1 + 0x28] = s1
 10684: 7b 67 30                 u64 [s1 + 0x30] = a0
 10687: 95 17 ff 07              a0 = sp + 0x7ff
 10691: 95 77 e1 03              a0 = a0 + 0x3e1
 10695: 95 18 98 01              a1 = sp + 0x198
 10699: 50 20 1e 01 ca 0a        ra = 286, jump @729
      :                          @550 [@dyn 143]
 10705: 82 65 50                 s0 = u64 [s1 + 0x50]
 10708: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10711: 82 66 48                 s1 = u64 [s1 + 0x48]
 10714: 33 07 02                 a0 = 0x2
 10717: 33 08                    a1 = 0
 10719: 33 09                    a2 = 0
 10721: 64 5a                    a3 = s0
 10723: 33 00 20 01              ra = 0x120
 10727: 0a 64                    ecalli 100 // 'log'
 10729: 01                       fallthrough
      :                          @551 [@dyn 144]
 10730: 82 17 48                 a0 = u64 [sp + 0x48]
 10733: c8 67 07                 a0 = a0 + s1
 10736: 53 27 00 f0 23           jump @557 if a0 <u 4294963200
      :                          @552
 10741: 33 07 40 00 03           a0 = 0x30040
 10746: 95 77 00 10              a0 = a0 + 0x1000
 10750: 01                       fallthrough
      :                          @553
 10751: 82 78                    a1 = u64 [a0]
 10753: c9 87 09                 a2 = a0 - a1
 10756: ab 59 0f                 jump @557 if a2 != s0
      :                          @554
 10759: c9 68 09                 a2 = a1 - s1
 10762: 01                       fallthrough
      :                          @555
 10763: 82 7a                    a3 = u64 [a0]
 10765: ab 8a f2                 jump @553 if a3 != a1
      :                          @556
 10768: 7b 79                    u64 [a0] = a2
 10770: 01                       fallthrough
      :                          @557
 10771: 95 16 ff 07              s1 = sp + 0x7ff
 10775: 95 66 99 03              s1 = s1 + 0x399
 10779: 82 67                    a0 = u64 [s1]
 10781: 33 08 02                 a1 = 0x2
 10784: 33 00 52 01              ra = 0x152
 10788: 28 cd 17                 jump @1007
      :                          @558 [@dyn 145]
 10791: 95 17 58                 a0 = sp + 0x58
 10794: 33 08 03                 a1 = 0x3
 10797: 33 09 8f 03              a2 = 0x38f
 10801: 33 0a 8f 03              a3 = 0x38f
 10805: 0a 09                    ecalli 9 // 'new'
 10807: 7b 67 70                 u64 [s1 + 0x70] = a0
 10810: 7b 65 18                 u64 [s1 + 0x18] = s0
 10813: 82 18 40                 a1 = u64 [sp + 0x40]
 10816: 7b 68 20                 u64 [s1 + 0x20] = a1
 10819: 95 17 ff 07              a0 = sp + 0x7ff
 10823: 95 77 09 04              a0 = a0 + 0x409
 10827: 7b 67 28                 u64 [s1 + 0x28] = a0
 10830: 7b 68 30                 u64 [s1 + 0x30] = a1
 10833: 33 07 d0 0f 01           a0 = 0x10fd0
 10838: 7b 17 98 01              u64 [sp + 0x198] = a0
 10842: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10847: 49 21 b8 01              u64 [sp + 440] = 0
 10851: 95 17 ff 07              a0 = sp + 0x7ff
 10855: 95 77 b1 03              a0 = a0 + 0x3b1
 10859: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10863: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10868: 95 17 ff 07              a0 = sp + 0x7ff
 10872: 95 77 e1 03              a0 = a0 + 0x3e1
 10876: 95 18 98 01              a1 = sp + 0x198
 10880: 50 20 24 01 15 0a        ra = 292, jump @729
      :                          @559 [@dyn 146]
 10886: 82 65 50                 s0 = u64 [s1 + 0x50]
 10889: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10892: 95 17 ff 07              a0 = sp + 0x7ff
 10896: 95 77 99 03              a0 = a0 + 0x399
 10900: 82 76 48                 s1 = u64 [a0 + 0x48]
 10903: 33 07 02                 a0 = 0x2
 10906: 33 08                    a1 = 0
 10908: 33 09                    a2 = 0
 10910: 64 5a                    a3 = s0
 10912: 33 00 26 01              ra = 0x126
 10916: 0a 64                    ecalli 100 // 'log'
 10918: 01                       fallthrough
      :                          @560 [@dyn 147]
 10919: 82 17 48                 a0 = u64 [sp + 0x48]
 10922: c8 67 07                 a0 = a0 + s1
 10925: 53 27 00 f0 23           jump @566 if a0 <u 4294963200
      :                          @561
 10930: 33 07 40 00 03           a0 = 0x30040
 10935: 95 77 00 10              a0 = a0 + 0x1000
 10939: 01                       fallthrough
      :                          @562
 10940: 82 78                    a1 = u64 [a0]
 10942: c9 87 09                 a2 = a0 - a1
 10945: ab 59 0f                 jump @566 if a2 != s0
      :                          @563
 10948: c9 68 09                 a2 = a1 - s1
 10951: 01                       fallthrough
      :                          @564
 10952: 82 7a                    a3 = u64 [a0]
 10954: ab 8a f2                 jump @562 if a3 != a1
      :                          @565
 10957: 7b 79                    u64 [a0] = a2
 10959: 01                       fallthrough
      :                          @566
 10960: 95 16 ff 07              s1 = sp + 0x7ff
 10964: 95 66 99 03              s1 = s1 + 0x399
 10968: 82 67 70                 a0 = u64 [s1 + 0x70]
 10971: 33 08 01                 a1 = 0x1
 10974: 50 20 28 01 13 17        ra = 296, jump @1007
      :                          @567 [@dyn 148]
 10980: 95 17 58                 a0 = sp + 0x58
 10983: 33 08 8f 03              a1 = 0x38f
 10987: 33 09 8f 03              a2 = 0x38f
 10991: 0a 0a                    ecalli 10 // 'upgrade'
 10993: 7b 67 78                 u64 [s1 + 0x78] = a0
 10996: 95 17 ff 07              a0 = sp + 0x7ff
 11000: 95 77 11 04              a0 = a0 + 0x411
 11004: 7b 67 28                 u64 [s1 + 0x28] = a0
 11007: 33 07 00 10 01           a0 = 0x11000
 11012: 7b 17 98 01              u64 [sp + 0x198] = a0
 11016: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11021: 49 21 b8 01              u64 [sp + 440] = 0
 11025: 95 17 ff 07              a0 = sp + 0x7ff
 11029: 95 77 b1 03              a0 = a0 + 0x3b1
 11033: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11037: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11042: 82 17 30                 a0 = u64 [sp + 0x30]
 11045: 7b 67 18                 u64 [s1 + 0x18] = a0
 11048: 82 17 40                 a0 = u64 [sp + 0x40]
 11051: 7b 67 20                 u64 [s1 + 0x20] = a0
 11054: 7b 67 30                 u64 [s1 + 0x30] = a0
 11057: 95 17 ff 07              a0 = sp + 0x7ff
 11061: 95 77 e1 03              a0 = a0 + 0x3e1
 11065: 95 18 98 01              a1 = sp + 0x198
 11069: 50 20 2a 01 58 09        ra = 298, jump @729
      :                          @568 [@dyn 149]
 11075: 82 65 50                 s0 = u64 [s1 + 0x50]
 11078: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11081: 82 66 48                 s1 = u64 [s1 + 0x48]
 11084: 33 07 02                 a0 = 0x2
 11087: 33 08                    a1 = 0
 11089: 33 09                    a2 = 0
 11091: 64 5a                    a3 = s0
 11093: 33 00 2c 01              ra = 0x12c
 11097: 0a 64                    ecalli 100 // 'log'
 11099: 01                       fallthrough
      :                          @569 [@dyn 150]
 11100: 82 17 48                 a0 = u64 [sp + 0x48]
 11103: c8 67 07                 a0 = a0 + s1
 11106: 53 27 00 f0 23           jump @575 if a0 <u 4294963200
      :                          @570
 11111: 33 07 40 00 03           a0 = 0x30040
 11116: 95 77 00 10              a0 = a0 + 0x1000
 11120: 01                       fallthrough
      :                          @571
 11121: 82 78                    a1 = u64 [a0]
 11123: c9 87 09                 a2 = a0 - a1
 11126: ab 59 0f                 jump @575 if a2 != s0
      :                          @572
 11129: c9 68 09                 a2 = a1 - s1
 11132: 01                       fallthrough
      :                          @573
 11133: 82 7a                    a3 = u64 [a0]
 11135: ab 8a f2                 jump @571 if a3 != a1
      :                          @574
 11138: 7b 79                    u64 [a0] = a2
 11140: 01                       fallthrough
      :                          @575
 11141: 95 16 ff 07              s1 = sp + 0x7ff
 11145: 95 66 99 03              s1 = s1 + 0x399
 11149: 82 67 78                 a0 = u64 [s1 + 0x78]
 11152: 33 08 02                 a1 = 0x2
 11155: 33 05 02                 s0 = 0x2
 11158: 50 20 2e 01 5b 16        ra = 302, jump @1007
      :                          @576 [@dyn 151]
 11164: 48 06 8f 03              u32 [s1 + 0] = 0x38f
 11168: 48 16 08                 u32 [s1 + 8] = 0
 11171: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
 11176: 33 08 01                 a1 = 0x1
 11179: 33 09 01                 a2 = 0x1
 11182: 95 1a ff 07              a3 = sp + 0x7ff
 11186: 95 aa 99 03              a3 = a3 + 0x399
 11190: 33 0b 01                 a4 = 0x1
 11193: 33 07                    a0 = 0
 11195: 0a 05                    ecalli 5 // 'bless'
 11197: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11201: 95 17 ff 07              a0 = sp + 0x7ff
 11205: 95 77 19 04              a0 = a0 + 0x419
 11209: 7b 67 28                 u64 [s1 + 0x28] = a0
 11212: 33 07 30 10 01           a0 = 0x11030
 11217: 7b 17 98 01              u64 [sp + 0x198] = a0
 11221: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11226: 49 21 b8 01              u64 [sp + 440] = 0
 11230: 95 17 ff 07              a0 = sp + 0x7ff
 11234: 95 77 b1 03              a0 = a0 + 0x3b1
 11238: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11242: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11246: 82 17 30                 a0 = u64 [sp + 0x30]
 11249: 7b 67 18                 u64 [s1 + 0x18] = a0
 11252: 82 17 40                 a0 = u64 [sp + 0x40]
 11255: 7b 67 20                 u64 [s1 + 0x20] = a0
 11258: 7b 67 30                 u64 [s1 + 0x30] = a0
 11261: 95 17 ff 07              a0 = sp + 0x7ff
 11265: 95 77 e1 03              a0 = a0 + 0x3e1
 11269: 95 18 98 01              a1 = sp + 0x198
 11273: 50 20 30 01 8c 08        ra = 304, jump @729
      :                          @577 [@dyn 152]
 11279: 82 65 50                 s0 = u64 [s1 + 0x50]
 11282: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11285: 82 66 48                 s1 = u64 [s1 + 0x48]
 11288: 33 07 02                 a0 = 0x2
 11291: 33 08                    a1 = 0
 11293: 33 09                    a2 = 0
 11295: 64 5a                    a3 = s0
 11297: 33 00 32 01              ra = 0x132
 11301: 0a 64                    ecalli 100 // 'log'
 11303: 01                       fallthrough
      :                          @578 [@dyn 153]
 11304: 82 17 48                 a0 = u64 [sp + 0x48]
 11307: c8 67 07                 a0 = a0 + s1
 11310: 53 27 00 f0 23           jump @584 if a0 <u 4294963200
      :                          @579
 11315: 33 07 40 00 03           a0 = 0x30040
 11320: 95 77 00 10              a0 = a0 + 0x1000
 11324: 01                       fallthrough
      :                          @580
 11325: 82 78                    a1 = u64 [a0]
 11327: c9 87 09                 a2 = a0 - a1
 11330: ab 59 0f                 jump @584 if a2 != s0
      :                          @581
 11333: c9 68 09                 a2 = a1 - s1
 11336: 01                       fallthrough
      :                          @582
 11337: 82 7a                    a3 = u64 [a0]
 11339: ab 8a f2                 jump @580 if a3 != a1
      :                          @583
 11342: 7b 79                    u64 [a0] = a2
 11344: 01                       fallthrough
      :                          @584
 11345: 95 16 ff 07              s1 = sp + 0x7ff
 11349: 95 66 99 03              s1 = s1 + 0x399
 11353: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11357: 33 08 05                 a1 = 0x5
 11360: 33 00 52 01              ra = 0x152
 11364: 28 8d 15                 jump @1007
      :                          @585 [@dyn 154]
 11367: 95 17 55                 a0 = sp + 0x55
 11370: 33 08 03                 a1 = 0x3
 11373: 33 09                    a2 = 0
 11375: 33 0a                    a3 = 0
 11377: 0a 03                    ecalli 3 // 'write'
 11379: 7b 67 68                 u64 [s1 + 0x68] = a0
 11382: 33 07 50 00 01           a0 = 0x10050
 11387: 7b 17 10                 u64 [sp + 0x10] = a0
 11390: 7b 67 18                 u64 [s1 + 0x18] = a0
 11393: 82 18 40                 a1 = u64 [sp + 0x40]
 11396: 7b 68 20                 u64 [s1 + 0x20] = a1
 11399: 95 17 ff 07              a0 = sp + 0x7ff
 11403: 95 77 01 04              a0 = a0 + 0x401
 11407: 7b 67 28                 u64 [s1 + 0x28] = a0
 11410: 7b 68 30                 u64 [s1 + 0x30] = a1
 11413: 33 07 60 10 01           a0 = 0x11060
 11418: 7b 17 98 01              u64 [sp + 0x198] = a0
 11422: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11427: 49 21 b8 01              u64 [sp + 440] = 0
 11431: 95 17 ff 07              a0 = sp + 0x7ff
 11435: 95 77 b1 03              a0 = a0 + 0x3b1
 11439: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11443: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11448: 95 17 ff 07              a0 = sp + 0x7ff
 11452: 95 77 e1 03              a0 = a0 + 0x3e1
 11456: 95 18 98 01              a1 = sp + 0x198
 11460: 50 20 36 01 d1 07        ra = 310, jump @729
      :                          @586 [@dyn 155]
 11466: 82 65 50                 s0 = u64 [s1 + 0x50]
 11469: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11472: 95 17 ff 07              a0 = sp + 0x7ff
 11476: 95 77 99 03              a0 = a0 + 0x399
 11480: 82 76 48                 s1 = u64 [a0 + 0x48]
 11483: 33 07 02                 a0 = 0x2
 11486: 33 08                    a1 = 0
 11488: 33 09                    a2 = 0
 11490: 64 5a                    a3 = s0
 11492: 33 00 38 01              ra = 0x138
 11496: 0a 64                    ecalli 100 // 'log'
 11498: 01                       fallthrough
      :                          @587 [@dyn 156]
 11499: 82 17 48                 a0 = u64 [sp + 0x48]
 11502: c8 67 07                 a0 = a0 + s1
 11505: 33 08 40 00 03           a1 = 0x30040
 11510: 7b 18 08                 u64 [sp + 0x8] = a1
 11513: 53 27 00 f0 21           jump @593 if a0 <u 4294963200
      :                          @588
 11518: 82 18 08                 a1 = u64 [sp + 0x8]
 11521: 95 87 00 10              a0 = a1 + 0x1000
 11525: 01                       fallthrough
      :                          @589
 11526: 82 78                    a1 = u64 [a0]
 11528: c9 87 09                 a2 = a0 - a1
 11531: ab 59 0f                 jump @593 if a2 != s0
      :                          @590
 11534: c9 68 09                 a2 = a1 - s1
 11537: 01                       fallthrough
      :                          @591
 11538: 82 7a                    a3 = u64 [a0]
 11540: ab 8a f2                 jump @589 if a3 != a1
      :                          @592
 11543: 7b 79                    u64 [a0] = a2
 11545: 01                       fallthrough
      :                          @593
 11546: 95 16 ff 07              s1 = sp + 0x7ff
 11550: 95 66 99 03              s1 = s1 + 0x399
 11554: 82 67 68                 a0 = u64 [s1 + 0x68]
 11557: 33 08 01                 a1 = 0x1
 11560: 50 20 3a 01 c9 14        ra = 314, jump @1007
      :                          @594 [@dyn 157]
 11566: 95 17 55                 a0 = sp + 0x55
 11569: 33 08 03                 a1 = 0x3
 11572: 95 19 52                 a2 = sp + 0x52
 11575: 33 0a 03                 a3 = 0x3
 11578: 0a 03                    ecalli 3 // 'write'
 11580: 7b 67 70                 u64 [s1 + 0x70] = a0
 11583: 95 17 ff 07              a0 = sp + 0x7ff
 11587: 95 77 09 04              a0 = a0 + 0x409
 11591: 7b 67 28                 u64 [s1 + 0x28] = a0
 11594: 33 07 90 10 01           a0 = 0x11090
 11599: 7b 17 98 01              u64 [sp + 0x198] = a0
 11603: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11608: 49 21 b8 01              u64 [sp + 440] = 0
 11612: 95 17 ff 07              a0 = sp + 0x7ff
 11616: 95 77 b1 03              a0 = a0 + 0x3b1
 11620: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11624: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11629: 82 17 10                 a0 = u64 [sp + 0x10]
 11632: 7b 67 18                 u64 [s1 + 0x18] = a0
 11635: 82 17 40                 a0 = u64 [sp + 0x40]
 11638: 7b 67 20                 u64 [s1 + 0x20] = a0
 11641: 7b 67 30                 u64 [s1 + 0x30] = a0
 11644: 95 17 ff 07              a0 = sp + 0x7ff
 11648: 95 77 e1 03              a0 = a0 + 0x3e1
 11652: 95 18 98 01              a1 = sp + 0x198
 11656: 50 20 3c 01 0d 07        ra = 316, jump @729
      :                          @595 [@dyn 158]
 11662: 82 65 50                 s0 = u64 [s1 + 0x50]
 11665: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11668: 82 66 48                 s1 = u64 [s1 + 0x48]
 11671: 33 07 02                 a0 = 0x2
 11674: 33 08                    a1 = 0
 11676: 33 09                    a2 = 0
 11678: 64 5a                    a3 = s0
 11680: 33 00 3e 01              ra = 0x13e
 11684: 0a 64                    ecalli 100 // 'log'
 11686: 01                       fallthrough
      :                          @596 [@dyn 159]
 11687: 82 17 48                 a0 = u64 [sp + 0x48]
 11690: c8 67 07                 a0 = a0 + s1
 11693: 53 27 00 f0 21           jump @602 if a0 <u 4294963200
      :                          @597
 11698: 82 18 08                 a1 = u64 [sp + 0x8]
 11701: 95 87 00 10              a0 = a1 + 0x1000
 11705: 01                       fallthrough
      :                          @598
 11706: 82 78                    a1 = u64 [a0]
 11708: c9 87 09                 a2 = a0 - a1
 11711: ab 59 0f                 jump @602 if a2 != s0
      :                          @599
 11714: c9 68 09                 a2 = a1 - s1
 11717: 01                       fallthrough
      :                          @600
 11718: 82 7a                    a3 = u64 [a0]
 11720: ab 8a f2                 jump @598 if a3 != a1
      :                          @601
 11723: 7b 79                    u64 [a0] = a2
 11725: 01                       fallthrough
      :                          @602
 11726: 95 16 ff 07              s1 = sp + 0x7ff
 11730: 95 66 99 03              s1 = s1 + 0x399
 11734: 82 67 70                 a0 = u64 [s1 + 0x70]
 11737: 33 08 02                 a1 = 0x2
 11740: 33 05 02                 s0 = 0x2
 11743: 50 20 40 01 12 14        ra = 320, jump @1007
      :                          @603 [@dyn 160]
 11749: 95 17 55                 a0 = sp + 0x55
 11752: 33 08 03                 a1 = 0x3
 11755: 33 09                    a2 = 0
 11757: 33 0a                    a3 = 0
 11759: 0a 03                    ecalli 3 // 'write'
 11761: 7b 67 78                 u64 [s1 + 0x78] = a0
 11764: 82 17 10                 a0 = u64 [sp + 0x10]
 11767: 7b 67 18                 u64 [s1 + 0x18] = a0
 11770: 82 18 40                 a1 = u64 [sp + 0x40]
 11773: 7b 68 20                 u64 [s1 + 0x20] = a1
 11776: 95 17 ff 07              a0 = sp + 0x7ff
 11780: 95 77 11 04              a0 = a0 + 0x411
 11784: 7b 67 28                 u64 [s1 + 0x28] = a0
 11787: 7b 68 30                 u64 [s1 + 0x30] = a1
 11790: 33 07 c0 10 01           a0 = 0x110c0
 11795: 7b 17 98 01              u64 [sp + 0x198] = a0
 11799: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11804: 49 21 b8 01              u64 [sp + 440] = 0
 11808: 95 17 ff 07              a0 = sp + 0x7ff
 11812: 95 77 b1 03              a0 = a0 + 0x3b1
 11816: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11820: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11824: 95 17 ff 07              a0 = sp + 0x7ff
 11828: 95 77 e1 03              a0 = a0 + 0x3e1
 11832: 95 18 98 01              a1 = sp + 0x198
 11836: 50 20 42 01 59 06        ra = 322, jump @729
      :                          @604 [@dyn 161]
 11842: 82 65 50                 s0 = u64 [s1 + 0x50]
 11845: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11848: 82 66 48                 s1 = u64 [s1 + 0x48]
 11851: 33 07 02                 a0 = 0x2
 11854: 33 08                    a1 = 0
 11856: 33 09                    a2 = 0
 11858: 64 5a                    a3 = s0
 11860: 33 00 44 01              ra = 0x144
 11864: 0a 64                    ecalli 100 // 'log'
 11866: 01                       fallthrough
      :                          @605 [@dyn 162]
 11867: 82 17 48                 a0 = u64 [sp + 0x48]
 11870: c8 67 07                 a0 = a0 + s1
 11873: 53 27 00 f0 21           jump @611 if a0 <u 4294963200
      :                          @606
 11878: 82 18 08                 a1 = u64 [sp + 0x8]
 11881: 95 87 00 10              a0 = a1 + 0x1000
 11885: 01                       fallthrough
      :                          @607
 11886: 82 78                    a1 = u64 [a0]
 11888: c9 87 09                 a2 = a0 - a1
 11891: ab 59 0f                 jump @611 if a2 != s0
      :                          @608
 11894: c9 68 09                 a2 = a1 - s1
 11897: 01                       fallthrough
      :                          @609
 11898: 82 7a                    a3 = u64 [a0]
 11900: ab 8a f2                 jump @607 if a3 != a1
      :                          @610
 11903: 7b 79                    u64 [a0] = a2
 11905: 01                       fallthrough
      :                          @611
 11906: 95 16 ff 07              s1 = sp + 0x7ff
 11910: 95 66 99 03              s1 = s1 + 0x399
 11914: 82 67 78                 a0 = u64 [s1 + 0x78]
 11917: 33 08 05                 a1 = 0x5
 11920: 50 20 46 01 61 13        ra = 326, jump @1007
      :                          @612 [@dyn 163]
 11926: 95 18 55                 a1 = sp + 0x55
 11929: 33 09 03                 a2 = 0x3
 11932: 95 1a 98 00              a3 = sp + 0x98
 11936: 33 0c 00 01              a5 = 0x100
 11940: 82 17 38                 a0 = u64 [sp + 0x38]
 11943: 33 0b                    a4 = 0
 11945: 0a 02                    ecalli 2 // 'read'
 11947: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11951: 95 17 ff 07              a0 = sp + 0x7ff
 11955: 95 77 19 04              a0 = a0 + 0x419
 11959: 7b 67 28                 u64 [s1 + 0x28] = a0
 11962: 33 07 f0 10 01           a0 = 0x110f0
 11967: 7b 17 98 01              u64 [sp + 0x198] = a0
 11971: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11976: 49 21 b8 01              u64 [sp + 440] = 0
 11980: 95 17 ff 07              a0 = sp + 0x7ff
 11984: 95 77 b1 03              a0 = a0 + 0x3b1
 11988: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11992: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11997: 82 17 10                 a0 = u64 [sp + 0x10]
 12000: 7b 67 18                 u64 [s1 + 0x18] = a0
 12003: 82 17 40                 a0 = u64 [sp + 0x40]
 12006: 7b 67 20                 u64 [s1 + 0x20] = a0
 12009: 7b 67 30                 u64 [s1 + 0x30] = a0
 12012: 95 17 ff 07              a0 = sp + 0x7ff
 12016: 95 77 e1 03              a0 = a0 + 0x3e1
 12020: 95 18 98 01              a1 = sp + 0x198
 12024: 50 20 48 01 9d 05        ra = 328, jump @729
      :                          @613 [@dyn 164]
 12030: 82 65 50                 s0 = u64 [s1 + 0x50]
 12033: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12036: 82 66 48                 s1 = u64 [s1 + 0x48]
 12039: 33 07 02                 a0 = 0x2
 12042: 33 08                    a1 = 0
 12044: 33 09                    a2 = 0
 12046: 64 5a                    a3 = s0
 12048: 33 00 4a 01              ra = 0x14a
 12052: 0a 64                    ecalli 100 // 'log'
 12054: 01                       fallthrough
      :                          @614 [@dyn 165]
 12055: 82 17 48                 a0 = u64 [sp + 0x48]
 12058: c8 67 07                 a0 = a0 + s1
 12061: 53 27 00 f0 21           jump @620 if a0 <u 4294963200
      :                          @615
 12066: 82 18 08                 a1 = u64 [sp + 0x8]
 12069: 95 87 00 10              a0 = a1 + 0x1000
 12073: 01                       fallthrough
      :                          @616
 12074: 82 78                    a1 = u64 [a0]
 12076: c9 87 09                 a2 = a0 - a1
 12079: ab 59 0f                 jump @620 if a2 != s0
      :                          @617
 12082: c9 68 09                 a2 = a1 - s1
 12085: 01                       fallthrough
      :                          @618
 12086: 82 7a                    a3 = u64 [a0]
 12088: ab 8a f2                 jump @616 if a3 != a1
      :                          @619
 12091: 7b 79                    u64 [a0] = a2
 12093: 01                       fallthrough
      :                          @620
 12094: 95 16 ff 07              s1 = sp + 0x7ff
 12098: 95 66 99 03              s1 = s1 + 0x399
 12102: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12106: 33 08 06                 a1 = 0x6
 12109: 50 20 4c 01 a4 12        ra = 332, jump @1007
      :                          @621 [@dyn 166]
 12115: 95 17 55                 a0 = sp + 0x55
 12118: 33 08 03                 a1 = 0x3
 12121: 33 09                    a2 = 0
 12123: 33 0a                    a3 = 0
 12125: 0a 03                    ecalli 3 // 'write'
 12127: 7b 67                    u64 [s1] = a0
 12129: 82 17 10                 a0 = u64 [sp + 0x10]
 12132: 7b 67 18                 u64 [s1 + 0x18] = a0
 12135: 33 07 20 11 01           a0 = 0x11120
 12140: 7b 17 98 01              u64 [sp + 0x198] = a0
 12144: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12149: 49 21 b8 01              u64 [sp + 440] = 0
 12153: 95 17 ff 07              a0 = sp + 0x7ff
 12157: 95 77 b1 03              a0 = a0 + 0x3b1
 12161: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12165: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12170: 82 17 40                 a0 = u64 [sp + 0x40]
 12173: 7b 67 20                 u64 [s1 + 0x20] = a0
 12176: 7b 66 28                 u64 [s1 + 0x28] = s1
 12179: 7b 67 30                 u64 [s1 + 0x30] = a0
 12182: 95 17 ff 07              a0 = sp + 0x7ff
 12186: 95 77 e1 03              a0 = a0 + 0x3e1
 12190: 95 18 98 01              a1 = sp + 0x198
 12194: 50 20 4e 01 f3 04        ra = 334, jump @729
      :                          @622 [@dyn 167]
 12200: 82 65 50                 s0 = u64 [s1 + 0x50]
 12203: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12206: 82 66 48                 s1 = u64 [s1 + 0x48]
 12209: 33 07 02                 a0 = 0x2
 12212: 33 08                    a1 = 0
 12214: 33 09                    a2 = 0
 12216: 64 5a                    a3 = s0
 12218: 33 00 50 01              ra = 0x150
 12222: 0a 64                    ecalli 100 // 'log'
 12224: 01                       fallthrough
      :                          @623 [@dyn 168]
 12225: 82 17 48                 a0 = u64 [sp + 0x48]
 12228: c8 67 07                 a0 = a0 + s1
 12231: 53 27 00 f0 21           jump @629 if a0 <u 4294963200
      :                          @624
 12236: 82 18 08                 a1 = u64 [sp + 0x8]
 12239: 95 87 00 10              a0 = a1 + 0x1000
 12243: 01                       fallthrough
      :                          @625
 12244: 82 78                    a1 = u64 [a0]
 12246: c9 87 09                 a2 = a0 - a1
 12249: ab 59 0f                 jump @629 if a2 != s0
      :                          @626
 12252: c9 68 09                 a2 = a1 - s1
 12255: 01                       fallthrough
      :                          @627
 12256: 82 7a                    a3 = u64 [a0]
 12258: ab 8a f2                 jump @625 if a3 != a1
      :                          @628
 12261: 7b 79                    u64 [a0] = a2
 12263: 01                       fallthrough
      :                          @629
 12264: 95 16 ff 07              s1 = sp + 0x7ff
 12268: 95 66 99 03              s1 = s1 + 0x399
 12272: 82 67                    a0 = u64 [s1]
 12274: 33 08 07                 a1 = 0x7
 12277: 50 20 52 01 fc 11        ra = 338, jump @1007
      :                          @630 [@dyn 169]
 12283: 82 15 30                 s0 = u64 [sp + 0x30]
 12286: 01                       fallthrough
      :                          @631
 12287: 95 18 98 00              a1 = sp + 0x98
 12291: 82 17 38                 a0 = u64 [sp + 0x38]
 12294: 0a 04                    ecalli 4 // 'info'
 12296: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12300: 33 08 08                 a1 = 0x8
 12303: 50 20 54 01 e2 11        ra = 340, jump @1007
      :                          @632 [@dyn 170]
 12309: 7b 65 18                 u64 [s1 + 0x18] = s0
 12312: 82 18 40                 a1 = u64 [sp + 0x40]
 12315: 7b 68 20                 u64 [s1 + 0x20] = a1
 12318: 95 17 ff 07              a0 = sp + 0x7ff
 12322: 95 77 19 04              a0 = a0 + 0x419
 12326: 7b 67 28                 u64 [s1 + 0x28] = a0
 12329: 7b 68 30                 u64 [s1 + 0x30] = a1
 12332: 33 07 50 11 01           a0 = 0x11150
 12337: 7b 17 98 01              u64 [sp + 0x198] = a0
 12341: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12346: 49 21 b8 01              u64 [sp + 440] = 0
 12350: 95 17 ff 07              a0 = sp + 0x7ff
 12354: 95 77 b1 03              a0 = a0 + 0x3b1
 12358: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12362: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12367: 95 17 ff 07              a0 = sp + 0x7ff
 12371: 95 77 e1 03              a0 = a0 + 0x3e1
 12375: 95 18 98 01              a1 = sp + 0x198
 12379: 50 20 56 01 3a 04        ra = 342, jump @729
      :                          @633 [@dyn 171]
 12385: 82 65 50                 s0 = u64 [s1 + 0x50]
 12388: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12391: 95 17 ff 07              a0 = sp + 0x7ff
 12395: 95 77 99 03              a0 = a0 + 0x399
 12399: 82 76 48                 s1 = u64 [a0 + 0x48]
 12402: 33 07 02                 a0 = 0x2
 12405: 33 08                    a1 = 0
 12407: 33 09                    a2 = 0
 12409: 64 5a                    a3 = s0
 12411: 33 00 58 01              ra = 0x158
 12415: 0a 64                    ecalli 100 // 'log'
 12417: 01                       fallthrough
      :                          @634 [@dyn 172]
 12418: 82 17 48                 a0 = u64 [sp + 0x48]
 12421: c8 67 07                 a0 = a0 + s1
 12424: 53 27 00 f0 25           jump @640 if a0 <u 4294963200
      :                          @635
 12429: 33 07 40 00 03           a0 = 0x30040
 12434: 95 77 00 10              a0 = a0 + 0x1000
 12438: 01                       fallthrough
      :                          @636
 12439: 82 78                    a1 = u64 [a0]
 12441: c9 87 09                 a2 = a0 - a1
 12444: ab 59 11                 jump @640 if a2 != s0
      :                          @637
 12447: c9 68 09                 a2 = a1 - s1
 12450: 01                       fallthrough
      :                          @638
 12451: 82 7a                    a3 = u64 [a0]
 12453: ab 8a f2                 jump @636 if a3 != a1
      :                          @639
 12456: 7b 79                    u64 [a0] = a2
 12458: 0a                       ecalli 0 // 'gas'
 12459: 28 04                    jump @641
      :                          @640
 12461: 0a                       ecalli 0 // 'gas'
 12462: 01                       fallthrough
      :                          @641
 12463: 95 16 ff 07              s1 = sp + 0x7ff
 12467: 95 66 99 03              s1 = s1 + 0x399
 12471: 7b 67                    u64 [s1] = a0
 12473: 33 08 09                 a1 = 0x9
 12476: 50 20 5a 01 35 11        ra = 346, jump @1007
      :                          @642 [@dyn 173]
 12482: 7b 66 48                 u64 [s1 + 0x48] = s1
 12485: 82 17 40                 a0 = u64 [sp + 0x40]
 12488: 7b 67 50                 u64 [s1 + 0x50] = a0
 12491: 33 07 80 11 01           a0 = 0x11180
 12496: 7b 17 98 01              u64 [sp + 0x198] = a0
 12500: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 12505: 49 21 b8 01              u64 [sp + 440] = 0
 12509: 95 17 ff 07              a0 = sp + 0x7ff
 12513: 95 77 e1 03              a0 = a0 + 0x3e1
 12517: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12521: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 12526: 95 17 ff 07              a0 = sp + 0x7ff
 12530: 95 77 b1 03              a0 = a0 + 0x3b1
 12534: 95 18 98 01              a1 = sp + 0x198
 12538: 50 20 5c 01 9b 03        ra = 348, jump @729
      :                          @643 [@dyn 174]
 12544: 82 65 20                 s0 = u64 [s1 + 0x20]
 12547: 82 6b 28                 a4 = u64 [s1 + 0x28]
 12550: 82 66 18                 s1 = u64 [s1 + 0x18]
 12553: 33 07 02                 a0 = 0x2
 12556: 33 08                    a1 = 0
 12558: 33 09                    a2 = 0
 12560: 64 5a                    a3 = s0
 12562: 33 00 5e 01              ra = 0x15e
 12566: 0a 64                    ecalli 100 // 'log'
 12568: 01                       fallthrough
      :                          @644 [@dyn 175]
 12569: 82 17 48                 a0 = u64 [sp + 0x48]
 12572: c8 67 07                 a0 = a0 + s1
 12575: 53 27 00 f0 25           jump @650 if a0 <u 4294963200
      :                          @645
 12580: 33 07 40 00 03           a0 = 0x30040
 12585: 95 77 00 10              a0 = a0 + 0x1000
 12589: 01                       fallthrough
      :                          @646
 12590: 82 78                    a1 = u64 [a0]
 12592: c9 87 09                 a2 = a0 - a1
 12595: ab 59 11                 jump @650 if a2 != s0
      :                          @647
 12598: c9 68 09                 a2 = a1 - s1
 12601: 01                       fallthrough
      :                          @648
 12602: 82 7a                    a3 = u64 [a0]
 12604: ab 8a f2                 jump @646 if a3 != a1
      :                          @649
 12607: 7b 79                    u64 [a0] = a2
 12609: 33 0b                    a4 = 0
 12611: 01                       fallthrough
      :                          @650
 12612: 82 19 20                 a2 = u64 [sp + 0x20]
 12615: 82 1a 28                 a3 = u64 [sp + 0x28]
 12618: 55 19 21 79              jump @661 if a2 >=u 33
      :                          @651
 12622: 97 a6 20                 s1 = a3 << 0x20
 12625: 98 66 20                 s1 = s1 >> 0x20
 12628: 33 05 19 00 03           s0 = 0x30019
 12633: 33 07 19 00 03           a0 = 0x30019
 12638: 82 18 18                 a1 = u64 [sp + 0x18]
 12641: 50 20 60 01 a9 05        ra = 352, jump @779
      :                          @652 [@dyn 176]
 12647: 3a 08 00 00 03           a1 = u64 [0x30000]
 12652: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 12662: ca 76 07                 a0 = s1 * a0
 12665: ae 87 2c                 jump @657 if a0 >=u a1
      :                          @653
 12668: 82 18 28                 a1 = u64 [sp + 0x28]
 12671: 51 18 09 18              jump @655 if a1 == 9
      :                          @654
 12675: 0a 08                    ecalli 8 // 'checkpoint'
 12677: 33 0a 19 06 01           a3 = 0x10619
 12682: 33 07 02                 a0 = 0x2
 12685: 33 0b 11                 a4 = 0x11
 12688: 33 08                    a1 = 0
 12690: 33 09                    a2 = 0
 12692: 0a 64                    ecalli 100 // 'log'
 12694: 01                       fallthrough
      :                          @655
 12695: 95 67 2a                 a0 = s1 + 0x2a
 12698: 33 08 07                 a1 = 0x7
 12701: 50 20 62 01 54 10        ra = 354, jump @1007
      :                          @656 [@dyn 177]
 12707: 32 07                    jump [a0]
      :                          @657
 12709: 64 57                    a0 = s0
 12711: 0a 10                    ecalli 16 // 'oyield'
 12713: 33 0a de 00 01           a3 = 0x100de
 12718: 33 07 02                 a0 = 0x2
 12721: 33 0b 10                 a4 = 0x10
 12724: 33 08                    a1 = 0
 12726: 33 09                    a2 = 0
 12728: 0a 64                    ecalli 100 // 'log'
 12730: 33 08 20                 a1 = 0x20
 12733: 28 38 e4                 jump @302
      :                          @658
 12736: 00                       trap
      :                          @659
 12737: 00                       trap
      :                          @660
 12738: 00                       trap
      :                          @661
 12739: 00                       trap
      :                          @662
 12740: 00                       trap
      :                          @663 [export #2: 'on_transfer']
 12741: 95 11 88                 sp = sp + 0xffffffffffffff88
 12744: 7b 10 70                 u64 [sp + 0x70] = ra
 12747: 7b 15 68                 u64 [sp + 0x68] = s0
 12750: 7b 16 60                 u64 [sp + 0x60] = s1
 12753: 0a                       ecalli 0 // 'gas'
 12754: 7b 17                    u64 [sp] = a0
 12756: 33 08 04                 a1 = 0x4
 12759: 50 20 64 01 1a 10        ra = 356, jump @1007
      :                          @664 [@dyn 178]
 12765: 64 17                    a0 = sp
 12767: 7b 17 50                 u64 [sp + 0x50] = a0
 12770: 33 07 16                 a0 = 0x16
 12773: 7b 17 58                 u64 [sp + 0x58] = a0
 12776: 33 07 a0 11 01           a0 = 0x111a0
 12781: 7b 17 20                 u64 [sp + 0x20] = a0
 12784: 49 11 28 02              u64 [sp + 40] = 0x2
 12788: 49 11 40                 u64 [sp + 64] = 0
 12791: 95 17 50                 a0 = sp + 0x50
 12794: 7b 17 30                 u64 [sp + 0x30] = a0
 12797: 49 11 38 01              u64 [sp + 56] = 0x1
 12801: 95 17 08                 a0 = sp + 0x8
 12804: 95 18 20                 a1 = sp + 0x20
 12807: 50 20 66 01 8e 02        ra = 358, jump @729
      :                          @665 [@dyn 179]
 12813: 82 15 10                 s0 = u64 [sp + 0x10]
 12816: 82 1b 18                 a4 = u64 [sp + 0x18]
 12819: 82 16 08                 s1 = u64 [sp + 0x8]
 12822: 33 07 02                 a0 = 0x2
 12825: 33 08                    a1 = 0
 12827: 33 09                    a2 = 0
 12829: 64 5a                    a3 = s0
 12831: 33 00 68 01              ra = 0x168
 12835: 0a 64                    ecalli 100 // 'log'
 12837: 01                       fallthrough
      :                          @666 [@dyn 180]
 12838: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 12842: 53 28 00 f0 25           jump @672 if a1 <u 4294963200
      :                          @667
 12847: 33 07 40 00 03           a0 = 0x30040
 12852: 95 77 00 10              a0 = a0 + 0x1000
 12856: 01                       fallthrough
      :                          @668
 12857: 82 78                    a1 = u64 [a0]
 12859: c9 87 09                 a2 = a0 - a1
 12862: ab 59 11                 jump @672 if a2 != s0
      :                          @669
 12865: c9 68 09                 a2 = a1 - s1
 12868: 01                       fallthrough
      :                          @670
 12869: 82 7a                    a3 = u64 [a0]
 12871: ab 8a f2                 jump @668 if a3 != a1
      :                          @671
 12874: 7b 79                    u64 [a0] = a2
 12876: 33 0b                    a4 = 0
 12878: 01                       fallthrough
      :                          @672
 12879: 33 07 00 00 01           a0 = 0x10000
 12884: 33 08                    a1 = 0
 12886: 82 10 70                 ra = u64 [sp + 0x70]
 12889: 82 15 68                 s0 = u64 [sp + 0x68]
 12892: 82 16 60                 s1 = u64 [sp + 0x60]
 12895: 95 11 78                 sp = sp + 0x78
 12898: 32 00                    ret
      :                          @673
 12900: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 12903: 7b 10 40                 u64 [sp + 0x40] = ra
 12906: 7b 15 38                 u64 [sp + 0x38] = s0
 12909: 7b 16 30                 u64 [sp + 0x30] = s1
 12912: c8 89 09                 a2 = a2 + a1
 12915: ac 89 53                 jump @681 if a2 <u a1
      :                          @674
 12918: 64 75                    s0 = a0
 12920: 82 77                    a0 = u64 [a0]
 12922: 97 78 01                 a1 = a0 << 0x1
 12925: 33 0a 08                 a3 = 0x8
 12928: e4 a9 09                 a2 = maxu(a2, a3)
 12931: e4 98 06                 s1 = maxu(a1, a2)
 12934: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 12937: 98 88 3f                 a1 = a1 >> 0x3f
 12940: 51 07 12                 jump @676 if a0 == 0
      :                          @675
 12943: 82 59 08                 a2 = u64 [s0 + 0x8]
 12946: 7b 19 18                 u64 [sp + 0x18] = a2
 12949: 49 11 20 01              u64 [sp + 32] = 0x1
 12953: 7b 17 28                 u64 [sp + 0x28] = a0
 12956: 28 06                    jump @677
      :                          @676
 12958: 49 11 20                 u64 [sp + 32] = 0
 12961: 01                       fallthrough
      :                          @677
 12962: 64 17                    a0 = sp
 12964: 95 1a 18                 a3 = sp + 0x18
 12967: 64 69                    a2 = s1
 12969: 50 20 6a 01 33           ra = 362, jump @685
      :                          @678 [@dyn 181]
 12974: 82 18                    a1 = u64 [sp]
 12976: 82 17 08                 a0 = u64 [sp + 0x8]
 12979: 51 08 14                 jump @682 if a1 == 0
      :                          @679
 12982: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 12992: aa 87 0d                 jump @683 if a0 == a1
      :                          @680
 12995: 52 07 18                 jump @684 if a0 != 0
      :                          @681
 12998: 00                       trap
      :                          @682
 12999: 7b 57 08                 u64 [s0 + 0x8] = a0
 13002: 7b 56                    u64 [s0] = s1
 13004: 01                       fallthrough
      :                          @683
 13005: 82 10 40                 ra = u64 [sp + 0x40]
 13008: 82 15 38                 s0 = u64 [sp + 0x38]
 13011: 82 16 30                 s1 = u64 [sp + 0x30]
 13014: 95 11 48                 sp = sp + 0x48
 13017: 32 00                    ret
      :                          @684
 13019: 00                       trap
      :                          @685
 13020: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 13023: 7b 10 30                 u64 [sp + 0x30] = ra
 13026: 7b 15 28                 u64 [sp + 0x28] = s0
 13029: 7b 16 20                 u64 [sp + 0x20] = s1
 13032: 64 96                    s1 = a2
 13034: 64 73                    t1 = a0
 13036: 51 08 6f                 jump @695 if a1 == 0
      :                          @686
 13039: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13042: 51 07 72                 jump @696 if a0 == 0
      :                          @687
 13045: 82 a9 10                 a2 = u64 [a3 + 0x10]
 13048: 51 09 9f 00              jump @703 if a2 == 0
      :                          @688
 13052: 82 a8                    a1 = u64 [a3]
 13054: 33 02 00 10              t0 = 0x1000
 13058: 33 04 40 00 03           t2 = 0x30040
 13063: c8 24 07                 a0 = t2 + t0
 13066: 01                       fallthrough
      :                          @689
 13067: 82 7a                    a3 = u64 [a0]
 13069: c8 6a 05                 s0 = a3 + s1
 13072: ac a5 c3 00              jump @709 if s0 <u a3
      :                          @690
 13076: 95 5b 01                 a4 = s0 + 0x1
 13079: 88 bc 01                 a5 = a4 <u 0x1
 13082: d8 b2 0b                 a4 = t0 <u a4
 13085: d4 cb 0b                 a4 = a4 | a5
 13088: 52 0b b3 00              jump @709 if a4 != 0
      :                          @691
 13092: 82 7b                    a4 = u64 [a0]
 13094: ab ab e5                 jump @689 if a4 != a3
      :                          @692
 13097: 7b 75                    u64 [a0] = s0
 13099: 33 0c                    a5 = 0
 13101: 7b 13 18                 u64 [sp + 0x18] = t1
 13104: c9 54 07                 a0 = t2 - s0
 13107: 95 77 00 10              a0 = a0 + 0x1000
 13111: 7b 17 10                 u64 [sp + 0x10] = a0
 13114: 7b 18 08                 u64 [sp + 0x8] = a1
 13117: 64 95                    s0 = a2
 13119: 7b 14                    u64 [sp] = t2
 13121: 50 20 6c 01 c9 03        ra = 364, jump @779
      :                          @693 [@dyn 182]
 13127: 54 25 00 10 94 00        jump @710 if s0 <=u 4096
      :                          @694
 13133: 82 13 18                 t1 = u64 [sp + 0x18]
 13136: 82 18 10                 a1 = u64 [sp + 0x10]
 13139: 33 07                    a0 = 0
 13141: 7b 38 08                 u64 [t1 + 0x8] = a1
 13144: 28 b1 00                 jump @716
      :                          @695
 13147: 49 13 08                 u64 [t1 + 8] = 0
 13150: 33 07 01                 a0 = 0x1
 13153: 28 a8 00                 jump @716
      :                          @696
 13156: 33 07 00 10              a0 = 0x1000
 13160: 33 02 40 00 03           t0 = 0x30040
 13165: c8 72 09                 a2 = t0 + a0
 13168: 01                       fallthrough
      :                          @697
 13169: 82 9b                    a4 = u64 [a2]
 13171: c8 6b 0a                 a3 = a4 + s1
 13174: ac ba 5d                 jump @709 if a3 <u a4
      :                          @698
 13177: 95 ac 01                 a5 = a3 + 0x1
 13180: 88 c8 01                 a1 = a5 <u 0x1
 13183: d8 c7 0c                 a5 = a0 <u a5
 13186: d4 c8 08                 a1 = a1 | a5
 13189: 52 08 4e                 jump @709 if a1 != 0
      :                          @699
 13192: 82 98                    a1 = u64 [a2]
 13194: ab b8 e7                 jump @697 if a1 != a4
      :                          @700
 13197: 7b 9a                    u64 [a2] = a3
 13199: 33 0c                    a5 = 0
 13201: 01                       fallthrough
      :                          @701
 13202: ab b8 df                 jump @697 if a1 != a4
      :                          @702
 13205: 28 30                    jump @708
      :                          @703
 13207: 33 07 00 10              a0 = 0x1000
 13211: 33 02 40 00 03           t0 = 0x30040
 13216: c8 72 09                 a2 = t0 + a0
 13219: 01                       fallthrough
      :                          @704
 13220: 82 9b                    a4 = u64 [a2]
 13222: c8 6b 0a                 a3 = a4 + s1
 13225: ac ba 2a                 jump @709 if a3 <u a4
      :                          @705
 13228: 95 ac 01                 a5 = a3 + 0x1
 13231: 88 c8 01                 a1 = a5 <u 0x1
 13234: d8 c7 0c                 a5 = a0 <u a5
 13237: d4 c8 08                 a1 = a1 | a5
 13240: 52 08 1b                 jump @709 if a1 != 0
      :                          @706
 13243: 82 98                    a1 = u64 [a2]
 13245: ab b8 e7                 jump @704 if a1 != a4
      :                          @707
 13248: 7b 9a                    u64 [a2] = a3
 13250: 33 0c                    a5 = 0
 13252: 01                       fallthrough
      :                          @708
 13253: c9 a2 07                 a0 = t0 - a3
 13256: 95 78 00 10              a1 = a0 + 0x1000
 13260: 33 07                    a0 = 0
 13262: 7b 38 08                 u64 [t1 + 0x8] = a1
 13265: 28 38                    jump @716
      :                          @709
 13267: 33 07 01                 a0 = 0x1
 13270: 7b 37 08                 u64 [t1 + 0x8] = a0
 13273: 28 30                    jump @716
      :                          @710
 13275: 64 5c                    a5 = s0
 13277: 82 18                    a1 = u64 [sp]
 13279: 95 87 00 10              a0 = a1 + 0x1000
 13283: 82 13 18                 t1 = u64 [sp + 0x18]
 13286: 82 15 08                 s0 = u64 [sp + 0x8]
 13289: 01                       fallthrough
      :                          @711
 13290: 82 78                    a1 = u64 [a0]
 13292: c9 87 09                 a2 = a0 - a1
 13295: ab 59 11                 jump @715 if a2 != s0
      :                          @712
 13298: c9 c8 09                 a2 = a1 - a5
 13301: 01                       fallthrough
      :                          @713
 13302: 82 7a                    a3 = u64 [a0]
 13304: ab 8a f2                 jump @711 if a3 != a1
      :                          @714
 13307: 7b 79                    u64 [a0] = a2
 13309: 33 0b                    a4 = 0
 13311: 01                       fallthrough
      :                          @715
 13312: 82 18 10                 a1 = u64 [sp + 0x10]
 13315: 33 07                    a0 = 0
 13317: 7b 38 08                 u64 [t1 + 0x8] = a1
 13320: 01                       fallthrough
      :                          @716
 13321: 7b 36 10                 u64 [t1 + 0x10] = s1
 13324: 7b 37                    u64 [t1] = a0
 13326: 82 10 30                 ra = u64 [sp + 0x30]
 13329: 82 15 28                 s0 = u64 [sp + 0x28]
 13332: 82 16 20                 s1 = u64 [sp + 0x20]
 13335: 95 11 38                 sp = sp + 0x38
 13338: 32 00                    ret
      :                          @717
 13340: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13343: 7b 10 40                 u64 [sp + 0x40] = ra
 13346: 7b 15 38                 u64 [sp + 0x38] = s0
 13349: 7b 16 30                 u64 [sp + 0x30] = s1
 13352: 95 88 01                 a1 = a1 + 0x1
 13355: 51 08 54                 jump @725 if a1 == 0
      :                          @718
 13358: 64 75                    s0 = a0
 13360: 82 77                    a0 = u64 [a0]
 13362: 97 79 01                 a2 = a0 << 0x1
 13365: 33 0a 08                 a3 = 0x8
 13368: e4 a8 08                 a1 = maxu(a1, a3)
 13371: e4 89 06                 s1 = maxu(a2, a1)
 13374: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 13377: 98 88 3f                 a1 = a1 >> 0x3f
 13380: 51 07 12                 jump @720 if a0 == 0
      :                          @719
 13383: 82 59 08                 a2 = u64 [s0 + 0x8]
 13386: 7b 19 18                 u64 [sp + 0x18] = a2
 13389: 49 11 20 01              u64 [sp + 32] = 0x1
 13393: 7b 17 28                 u64 [sp + 0x28] = a0
 13396: 28 06                    jump @721
      :                          @720
 13398: 49 11 20                 u64 [sp + 32] = 0
 13401: 01                       fallthrough
      :                          @721
 13402: 64 17                    a0 = sp
 13404: 95 1a 18                 a3 = sp + 0x18
 13407: 64 69                    a2 = s1
 13409: 50 20 6e 01 7b fe        ra = 366, jump @685
      :                          @722 [@dyn 183]
 13415: 82 18                    a1 = u64 [sp]
 13417: 82 17 08                 a0 = u64 [sp + 0x8]
 13420: 51 08 14                 jump @726 if a1 == 0
      :                          @723
 13423: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 13433: aa 87 0d                 jump @727 if a0 == a1
      :                          @724
 13436: 52 07 18                 jump @728 if a0 != 0
      :                          @725
 13439: 00                       trap
      :                          @726
 13440: 7b 57 08                 u64 [s0 + 0x8] = a0
 13443: 7b 56                    u64 [s0] = s1
 13445: 01                       fallthrough
      :                          @727
 13446: 82 10 40                 ra = u64 [sp + 0x40]
 13449: 82 15 38                 s0 = u64 [sp + 0x38]
 13452: 82 16 30                 s1 = u64 [sp + 0x30]
 13455: 95 11 48                 sp = sp + 0x48
 13458: 32 00                    ret
      :                          @728
 13460: 00                       trap
      :                          @729
 13461: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 13464: 7b 10 30                 u64 [sp + 0x30] = ra
 13467: 7b 15 28                 u64 [sp + 0x28] = s0
 13470: 7b 16 20                 u64 [sp + 0x20] = s1
 13473: 64 89                    a2 = a1
 13475: 82 8a 08                 a3 = u64 [a1 + 0x8]
 13478: 64 75                    s0 = a0
 13480: 51 0a 35                 jump @734 if a3 == 0
      :                          @730
 13483: 82 98                    a1 = u64 [a2]
 13485: 33 07                    a0 = 0
 13487: 95 8b 08                 a4 = a1 + 0x8
 13490: 01                       fallthrough
      :                          @731
 13491: 82 bc                    a5 = u64 [a4]
 13493: c8 c7 07                 a0 = a0 + a5
 13496: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13499: 95 bb 10                 a4 = a4 + 0x10
 13502: 52 0a f5                 jump @731 if a3 != 0
      :                          @732
 13505: 82 9a 18                 a3 = u64 [a2 + 0x18]
 13508: 51 0a 24                 jump @736 if a3 == 0
      :                          @733
 13511: 82 88 08                 a1 = u64 [a1 + 0x8]
 13514: 8e 88                    a1 = a1 >u 0
 13516: 88 7a 10                 a3 = a0 <u 0x10
 13519: 85 aa 01                 a3 = a3 ^ 0x1
 13522: d4 a8 08                 a1 = a1 | a3
 13525: 89 7a                    a3 = a0 <s 0
 13527: e0 a8 08                 a1 = a1 & ~a3
 13530: 52 08 0a                 jump @735 if a1 != 0
      :                          @734
 13533: 33 07                    a0 = 0
 13535: 33 08 01                 a1 = 0x1
 13538: 28 48                    jump @744
      :                          @735
 13540: 97 77 01                 a0 = a0 << 0x1
 13543: 01                       fallthrough
      :                          @736
 13544: 51 07 3e                 jump @743 if a0 == 0
      :                          @737
 13547: 57 07 77                 jump @749 if a0 <s 0
      :                          @738
 13550: 64 53                    t1 = s0
 13552: 33 08 00 10              a1 = 0x1000
 13556: 33 02 40 00 03           t0 = 0x30040
 13561: c8 82 0b                 a4 = t0 + a1
 13564: 01                       fallthrough
      :                          @739
 13565: 82 bc                    a5 = u64 [a4]
 13567: c8 7c 0a                 a3 = a5 + a0
 13570: ac ca 5e                 jump @747 if a3 <u a5
      :                          @740
 13573: 95 a5 01                 s0 = a3 + 0x1
 13576: 88 56 01                 s1 = s0 <u 0x1
 13579: d8 58 05                 s0 = a1 <u s0
 13582: d4 65 05                 s0 = s0 | s1
 13585: 52 05 4f                 jump @747 if s0 != 0
      :                          @741
 13588: 82 b6                    s1 = u64 [a4]
 13590: ab c6 e7                 jump @739 if s1 != a5
      :                          @742
 13593: 7b ba                    u64 [a4] = a3
 13595: c9 a2 08                 a1 = t0 - a3
 13598: 95 88 00 10              a1 = a1 + 0x1000
 13602: 64 35                    s0 = t1
 13604: 28 06                    jump @744
      :                          @743
 13606: 33 08 01                 a1 = 0x1
 13609: 01                       fallthrough
      :                          @744
 13610: 7b 17                    u64 [sp] = a0
 13612: 7b 18 08                 u64 [sp + 0x8] = a1
 13615: 49 11 10                 u64 [sp + 16] = 0
 13618: 33 08 c0 11 01           a1 = 0x111c0
 13623: 64 17                    a0 = sp
 13625: 50 20 70 01 78 06        ra = 368, jump @874
      :                          @745 [@dyn 184]
 13631: 52 07 22                 jump @748 if a0 != 0
      :                          @746
 13634: 82 17 10                 a0 = u64 [sp + 0x10]
 13637: 82 18 08                 a1 = u64 [sp + 0x8]
 13640: 82 19                    a2 = u64 [sp]
 13642: 7b 57 10                 u64 [s0 + 0x10] = a0
 13645: 7b 58 08                 u64 [s0 + 0x8] = a1
 13648: 7b 59                    u64 [s0] = a2
 13650: 82 10 30                 ra = u64 [sp + 0x30]
 13653: 82 15 28                 s0 = u64 [sp + 0x28]
 13656: 82 16 20                 s1 = u64 [sp + 0x20]
 13659: 95 11 38                 sp = sp + 0x38
 13662: 32 00                    ret
      :                          @747
 13664: 00                       trap
      :                          @748
 13665: 00                       trap
      :                          @749
 13666: 00                       trap
      :                          @750 [@dyn 185]
 13667: 82 72                    t0 = u64 [a0]
 13669: 33 09 00 f0              a2 = 0xfffffffffffff000
 13673: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 13677: ac 9a 27                 jump @756 if a3 <u a2
      :                          @751
 13680: 82 77 08                 a0 = u64 [a0 + 0x8]
 13683: 33 09 40 00 03           a2 = 0x30040
 13688: 95 99 00 10              a2 = a2 + 0x1000
 13692: 01                       fallthrough
      :                          @752
 13693: 82 9a                    a3 = u64 [a2]
 13695: c9 a9 0b                 a4 = a2 - a3
 13698: ab 7b 12                 jump @756 if a4 != a0
      :                          @753
 13701: c9 2a 0b                 a4 = a3 - t0
 13704: 01                       fallthrough
      :                          @754
 13705: 82 9c                    a5 = u64 [a2]
 13707: ab ac f2                 jump @752 if a5 != a3
      :                          @755
 13710: 7b 9b                    u64 [a2] = a4
 13712: 33 08                    a1 = 0
 13714: 32 00                    ret
      :                          @756
 13716: 32 00                    ret
      :                          @757 [@dyn 186]
 13718: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13721: 7b 10 18                 u64 [sp + 0x18] = ra
 13724: 7b 15 10                 u64 [sp + 0x10] = s0
 13727: 7b 16 08                 u64 [sp + 0x8] = s1
 13730: 64 75                    s0 = a0
 13732: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13735: 82 77                    a0 = u64 [a0]
 13737: c9 a7 07                 a0 = a0 - a3
 13740: 64 96                    s1 = a2
 13742: ac 97 2b                 jump @760 if a0 <u a2
      :                          @758
 13745: 7b 1a                    u64 [sp] = a3
 13747: 82 57 08                 a0 = u64 [s0 + 0x8]
 13750: c8 a7 07                 a0 = a0 + a3
 13753: 64 69                    a2 = s1
 13755: 50 20 76 01 4f 01        ra = 374, jump @779
      :                          @759 [@dyn 187]
 13761: 82 17                    a0 = u64 [sp]
 13763: c8 76 06                 s1 = s1 + a0
 13766: 7b 56 10                 u64 [s0 + 0x10] = s1
 13769: 33 07                    a0 = 0
 13771: 82 10 18                 ra = u64 [sp + 0x18]
 13774: 82 15 10                 s0 = u64 [sp + 0x10]
 13777: 82 16 08                 s1 = u64 [sp + 0x8]
 13780: 95 11 20                 sp = sp + 0x20
 13783: 32 00                    ret
      :                          @760
 13785: 64 57                    a0 = s0
 13787: 7b 18                    u64 [sp] = a1
 13789: 64 a8                    a1 = a3
 13791: 64 69                    a2 = s1
 13793: 50 20 78 01 83 fc        ra = 376, jump @673
      :                          @761 [@dyn 188]
 13799: 82 18                    a1 = u64 [sp]
 13801: 82 5a 10                 a3 = u64 [s0 + 0x10]
 13804: 28 c5                    jump @758
      :                          @762 [@dyn 189]
 13806: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 13809: 7b 10 20                 u64 [sp + 0x20] = ra
 13812: 7b 15 18                 u64 [sp + 0x18] = s0
 13815: 7b 16 10                 u64 [sp + 0x10] = s1
 13818: 64 86                    s1 = a1
 13820: 83 88                    i32 a1 = a1 + 0
 13822: 33 09 80 00              a2 = 0x80
 13826: 64 7a                    a3 = a0
 13828: ae 98 2c                 jump @767 if a1 >=u a2
      :                          @763
 13831: 82 a8 10                 a1 = u64 [a3 + 0x10]
 13834: 82 a7                    a0 = u64 [a3]
 13836: ab 78 13                 jump @766 if a1 != a0
      :                          @764
 13839: 64 a7                    a0 = a3
 13841: 64 a5                    s0 = a3
 13843: 50 20 7c 01 09 fe        ra = 380, jump @717
      :                          @765 [@dyn 190]
 13849: 64 5a                    a3 = s0
 13851: 82 58 10                 a1 = u64 [s0 + 0x10]
 13854: 01                       fallthrough
      :                          @766
 13855: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13858: c8 87 07                 a0 = a0 + a1
 13861: 78 76                    u8 [a0] = s1
 13863: 95 88 01                 a1 = a1 + 0x1
 13866: 7b a8 10                 u64 [a3 + 0x10] = a1
 13869: 28 ac 00                 jump @775
      :                          @767
 13872: 8b 67 0b                 i32 a0 = s1 >> 0xb
 13875: 48 11 0c                 u32 [sp + 12] = 0
 13878: 52 07 1c                 jump @769 if a0 != 0
      :                          @768
 13881: 98 67 06                 a0 = s1 >> 0x6
 13884: 86 77 c0 00              a0 = a0 | 0xc0
 13888: 78 17 0c                 u8 [sp + 0xc] = a0
 13891: 84 67 3f                 a0 = s1 & 0x3f
 13894: 86 77 80 00              a0 = a0 | 0x80
 13898: 78 17 0d                 u8 [sp + 0xd] = a0
 13901: 33 06 02                 s1 = 0x2
 13904: 28 63                    jump @772
      :                          @769
 13906: 8b 67 10                 i32 a0 = s1 >> 0x10
 13909: 52 07 29                 jump @771 if a0 != 0
      :                          @770
 13912: 98 67 0c                 a0 = s1 >> 0xc
 13915: 86 77 e0 00              a0 = a0 | 0xe0
 13919: 78 17 0c                 u8 [sp + 0xc] = a0
 13922: 97 67 34                 a0 = s1 << 0x34
 13925: 98 77 3a                 a0 = a0 >> 0x3a
 13928: 95 77 80 00              a0 = a0 + 0x80
 13932: 78 17 0d                 u8 [sp + 0xd] = a0
 13935: 84 67 3f                 a0 = s1 & 0x3f
 13938: 86 77 80 00              a0 = a0 | 0x80
 13942: 78 17 0e                 u8 [sp + 0xe] = a0
 13945: 33 06 03                 s1 = 0x3
 13948: 28 37                    jump @772
      :                          @771
 13950: 97 67 2b                 a0 = s1 << 0x2b
 13953: 98 77 3d                 a0 = a0 >> 0x3d
 13956: 95 77 f0 00              a0 = a0 + 0xf0
 13960: 78 17 0c                 u8 [sp + 0xc] = a0
 13963: 97 67 2e                 a0 = s1 << 0x2e
 13966: 98 77 3a                 a0 = a0 >> 0x3a
 13969: 95 77 80 00              a0 = a0 + 0x80
 13973: 78 17 0d                 u8 [sp + 0xd] = a0
 13976: 97 67 34                 a0 = s1 << 0x34
 13979: 98 77 3a                 a0 = a0 >> 0x3a
 13982: 95 77 80 00              a0 = a0 + 0x80
 13986: 78 17 0e                 u8 [sp + 0xe] = a0
 13989: 84 67 3f                 a0 = s1 & 0x3f
 13992: 86 77 80 00              a0 = a0 | 0x80
 13996: 78 17 0f                 u8 [sp + 0xf] = a0
 13999: 33 06 04                 s1 = 0x4
 14002: 01                       fallthrough
      :                          @772
 14003: 82 a5 10                 s0 = u64 [a3 + 0x10]
 14006: 82 a7                    a0 = u64 [a3]
 14008: c9 57 07                 a0 = a0 - s0
 14011: ac 67 2e                 jump @776 if a0 <u s1
      :                          @773
 14014: 7b 1a                    u64 [sp] = a3
 14016: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14019: c8 57 07                 a0 = a0 + s0
 14022: 95 18 0c                 a1 = sp + 0xc
 14025: 64 69                    a2 = s1
 14027: 50 20 7e 01 3f           ra = 382, jump @779
      :                          @774 [@dyn 191]
 14032: c8 56 06                 s1 = s1 + s0
 14035: 82 17                    a0 = u64 [sp]
 14037: 7b 76 10                 u64 [a0 + 0x10] = s1
 14040: 01                       fallthrough
      :                          @775
 14041: 33 07                    a0 = 0
 14043: 82 10 20                 ra = u64 [sp + 0x20]
 14046: 82 15 18                 s0 = u64 [sp + 0x18]
 14049: 82 16 10                 s1 = u64 [sp + 0x10]
 14052: 95 11 28                 sp = sp + 0x28
 14055: 32 00                    ret
      :                          @776
 14057: 64 a7                    a0 = a3
 14059: 64 58                    a1 = s0
 14061: 64 69                    a2 = s1
 14063: 64 a5                    s0 = a3
 14065: 50 20 80 01 73 fb        ra = 384, jump @673
      :                          @777 [@dyn 192]
 14071: 64 5a                    a3 = s0
 14073: 82 55 10                 s0 = u64 [s0 + 0x10]
 14076: 28 c2                    jump @773
      :                          @778 [@dyn 193]
 14078: 64 8a                    a3 = a1
 14080: 33 08 c0 11 01           a1 = 0x111c0
 14085: 64 a9                    a2 = a3
 14087: 28 aa 04                 jump @874
      :                          @779
 14090: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 14093: 7b 10 18                 u64 [sp + 0x18] = ra
 14096: 7b 15 10                 u64 [sp + 0x10] = s0
 14099: 7b 16 08                 u64 [sp + 0x8] = s1
 14102: 53 19 10 64              jump @788 if a2 <u 16
      :                          @780
 14106: 8d 7a                    i32 a3 = -a0
 14108: 84 a2 07                 t0 = a3 & 0x7
 14111: c8 27 0b                 a4 = a0 + t0
 14114: 51 02 15                 jump @783 if t0 == 0
      :                          @781
 14117: 64 8c                    a5 = a1
 14119: 64 75                    s0 = a0
 14121: 01                       fallthrough
      :                          @782
 14122: 7c ca                    a3 = u8 [a5]
 14124: 78 5a                    u8 [s0] = a3
 14126: 95 55 01                 s0 = s0 + 0x1
 14129: 95 cc 01                 a5 = a5 + 0x1
 14132: ac b5 f6                 jump @782 if s0 <u a4
      :                          @783
 14135: c8 28 03                 t1 = a1 + t0
 14138: c9 29 02                 t0 = a2 - t0
 14141: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 14144: 84 38 07                 a1 = t1 & 0x7
 14147: c8 4b 0a                 a3 = a4 + t2
 14150: 51 08 3b                 jump @790 if a1 == 0
      :                          @784
 14153: 58 04 4b                 jump @793 if t2 <=s 0
      :                          @785
 14156: 97 38 03                 a1 = t1 << 0x3
 14159: 84 80 38                 ra = a1 & 0x38
 14162: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14165: 82 c5                    s0 = u64 [a5]
 14167: 8d 88                    i32 a1 = -a1
 14169: 84 88 38                 a1 = a1 & 0x38
 14172: 95 cc 08                 a5 = a5 + 0x8
 14175: 01                       fallthrough
      :                          @786
 14176: 82 c6                    s1 = u64 [a5]
 14178: d0 05 05                 s0 = s0 >> ra
 14181: cf 86 09                 a2 = s1 << a1
 14184: d4 59 09                 a2 = a2 | s0
 14187: 7b b9                    u64 [a4] = a2
 14189: 95 bb 08                 a4 = a4 + 0x8
 14192: 95 cc 08                 a5 = a5 + 0x8
 14195: 64 65                    s0 = s1
 14197: ac ab eb                 jump @786 if a4 <u a3
      :                          @787
 14200: 28 1c                    jump @793
      :                          @788
 14202: 64 7a                    a3 = a0
 14204: 52 09 21                 jump @794 if a2 != 0
      :                          @789
 14207: 28 2f                    jump @796
      :                          @790
 14209: 58 04 13                 jump @793 if t2 <=s 0
      :                          @791
 14212: 64 38                    a1 = t1
 14214: 01                       fallthrough
      :                          @792
 14215: 82 89                    a2 = u64 [a1]
 14217: 7b b9                    u64 [a4] = a2
 14219: 95 bb 08                 a4 = a4 + 0x8
 14222: 95 88 08                 a1 = a1 + 0x8
 14225: ac ab f6                 jump @792 if a4 <u a3
      :                          @793
 14228: c8 43 08                 a1 = t1 + t2
 14231: 84 29 07                 a2 = t0 & 0x7
 14234: 51 09 14                 jump @796 if a2 == 0
      :                          @794
 14237: c8 a9 09                 a2 = a2 + a3
 14240: 01                       fallthrough
      :                          @795
 14241: 7c 8b                    a4 = u8 [a1]
 14243: 78 ab                    u8 [a3] = a4
 14245: 95 aa 01                 a3 = a3 + 0x1
 14248: 95 88 01                 a1 = a1 + 0x1
 14251: ac 9a f6                 jump @795 if a3 <u a2
      :                          @796
 14254: 82 10 18                 ra = u64 [sp + 0x18]
 14257: 82 15 10                 s0 = u64 [sp + 0x10]
 14260: 82 16 08                 s1 = u64 [sp + 0x8]
 14263: 95 11 20                 sp = sp + 0x20
 14266: 32 00                    ret
      :                          @797
 14268: 53 19 10 48              jump @806 if a2 <u 16
      :                          @798
 14272: 8d 7a                    i32 a3 = -a0
 14274: 84 aa 07                 a3 = a3 & 0x7
 14277: c8 a7 0b                 a4 = a0 + a3
 14280: 51 0a 0e                 jump @801 if a3 == 0
      :                          @799
 14283: 64 7c                    a5 = a0
 14285: 01                       fallthrough
      :                          @800
 14286: 78 c8                    u8 [a5] = a1
 14288: 95 cc 01                 a5 = a5 + 0x1
 14291: ac bc fb                 jump @800 if a5 <u a4
      :                          @801
 14294: c9 a9 03                 t1 = a2 - a3
 14297: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14300: c8 cb 0a                 a3 = a4 + a5
 14303: 58 0c 1d                 jump @804 if a5 <=s 0
      :                          @802
 14306: 84 82 ff 00              t0 = a1 & 0xff
 14310: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 14320: ca 92 0c                 a5 = t0 * a2
 14323: 01                       fallthrough
      :                          @803
 14324: 7b bc                    u64 [a4] = a5
 14326: 95 bb 08                 a4 = a4 + 0x8
 14329: ac ab fb                 jump @803 if a4 <u a3
      :                          @804
 14332: 84 39 07                 a2 = t1 & 0x7
 14335: 52 09 0a                 jump @807 if a2 != 0
      :                          @805
 14338: 28 13                    jump @809
      :                          @806
 14340: 64 7a                    a3 = a0
 14342: 51 09 0f                 jump @809 if a2 == 0
      :                          @807
 14345: c8 a9 09                 a2 = a2 + a3
 14348: 01                       fallthrough
      :                          @808
 14349: 78 a8                    u8 [a3] = a1
 14351: 95 aa 01                 a3 = a3 + 0x1
 14354: ac 9a fb                 jump @808 if a3 <u a2
      :                          @809
 14357: 32 00                    ret
      :                          @810 [@dyn 194]
 14359: 82 77                    a0 = u64 [a0]
 14361: 01                       fallthrough
      :                          @811
 14362: 28                       jump @811
      :                          @812
 14363: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 14366: 7b 10 50                 u64 [sp + 0x50] = ra
 14369: 7b 15 48                 u64 [sp + 0x48] = s0
 14372: 7b 16 40                 u64 [sp + 0x40] = s1
 14375: 7b 18                    u64 [sp] = a1
 14377: 98 79 04                 a2 = a0 >> 0x4
 14380: 33 08 27                 a1 = 0x27
 14383: 33 0a 79 06 01           a3 = 0x10679
 14388: 53 29 71 02 7b           jump @815 if a2 <u 625
      :                          @813
 14393: 33 08 27                 a1 = 0x27
 14396: 95 1b 3e                 a4 = sp + 0x3e
 14399: 3a 09 08 00 03           a2 = u64 [0x30008]
 14404: 7b 19 10                 u64 [sp + 0x10] = a2
 14407: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 14413: 33 03 7b 14              t1 = 0x147b
 14417: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 14423: 01                       fallthrough
      :                          @814
 14424: 64 72                    t0 = a0
 14426: 82 17 10                 a0 = u64 [sp + 0x10]
 14429: d6 72 07                 a0 = t0 mulhu a0
 14432: 98 77 0b                 a0 = a0 >> 0xb
 14435: 82 19 08                 a2 = u64 [sp + 0x8]
 14438: c0 97 09                 i32 a2 = a0 * a2
 14441: c8 29 06                 s1 = a2 + t0
 14444: 97 69 30                 a2 = s1 << 0x30
 14447: 98 99 32                 a2 = a2 >> 0x32
 14450: ca 39 09                 a2 = a2 * t1
 14453: 98 94 11                 t2 = a2 >> 0x11
 14456: 98 99 10                 a2 = a2 >> 0x10
 14459: 84 99 fe 07              a2 = a2 & 0x7fe
 14463: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
 14466: c8 6c 0c                 a5 = a5 + s1
 14469: 97 cc 31                 a5 = a5 << 0x31
 14472: 98 cc 30                 a5 = a5 >> 0x30
 14475: c8 a9 09                 a2 = a2 + a3
 14478: 7c 96                    s1 = u8 [a2]
 14480: 7c 99 01                 a2 = u8 [a2 + 0x1]
 14483: c8 ac 0c                 a5 = a5 + a3
 14486: 7c c5 01                 s0 = u8 [a5 + 0x1]
 14489: 7c cc                    a5 = u8 [a5]
 14491: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
 14494: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
 14497: 78 b5 01                 u8 [a4 + 0x1] = s0
 14500: 78 bc                    u8 [a4] = a5
 14502: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14505: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 14508: ac 20 ac                 jump @814 if ra <u t0
      :                          @815
 14511: 54 17 63 36              jump @817 if a0 <=u 99
      :                          @816
 14515: 97 79 30                 a2 = a0 << 0x30
 14518: 98 99 32                 a2 = a2 >> 0x32
 14521: 96 99 7b 14              a2 = a2 * 0x147b
 14525: 98 99 11                 a2 = a2 >> 0x11
 14528: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
 14531: c8 b7 07                 a0 = a0 + a4
 14534: 97 77 31                 a0 = a0 << 0x31
 14537: 98 77 30                 a0 = a0 >> 0x30
 14540: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14543: c8 a7 07                 a0 = a0 + a3
 14546: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 14549: 7c 77                    a0 = u8 [a0]
 14551: 95 1c 19                 a5 = sp + 0x19
 14554: c8 8c 0c                 a5 = a5 + a1
 14557: 78 cb 01                 u8 [a5 + 0x1] = a4
 14560: 78 c7                    u8 [a5] = a0
 14562: 64 97                    a0 = a2
 14564: 01                       fallthrough
      :                          @817
 14565: 55 17 0a 14              jump @819 if a0 >=u 10
      :                          @818
 14569: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14572: 95 19 19                 a2 = sp + 0x19
 14575: c8 89 09                 a2 = a2 + a1
 14578: 83 77 30                 i32 a0 = a0 + 0x30
 14581: 78 97                    u8 [a2] = a0
 14583: 28 1c                    jump @820
      :                          @819
 14585: 97 77 01                 a0 = a0 << 0x1
 14588: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14591: c8 a7 07                 a0 = a0 + a3
 14594: 7c 79 01                 a2 = u8 [a0 + 0x1]
 14597: 7c 77                    a0 = u8 [a0]
 14599: 95 1a 19                 a3 = sp + 0x19
 14602: c8 8a 0a                 a3 = a3 + a1
 14605: 78 a9 01                 u8 [a3 + 0x1] = a2
 14608: 78 a7                    u8 [a3] = a0
 14610: 01                       fallthrough
      :                          @820
 14611: 95 1a 19                 a3 = sp + 0x19
 14614: c8 8a 0a                 a3 = a3 + a1
 14617: 9a 8b 27                 a4 = 0x27 - a1
 14620: 33 08 58 06 01           a1 = 0x10658
 14625: 82 17                    a0 = u64 [sp]
 14627: 33 09                    a2 = 0
 14629: 50 20 86 01 13           ra = 390, jump @822
      :                          @821 [@dyn 195]
 14634: 82 10 50                 ra = u64 [sp + 0x50]
 14637: 82 15 48                 s0 = u64 [sp + 0x48]
 14640: 82 16 40                 s1 = u64 [sp + 0x40]
 14643: 95 11 58                 sp = sp + 0x58
 14646: 32 00                    ret
      :                          @822
 14648: 95 11 98                 sp = sp + 0xffffffffffffff98
 14651: 7b 10 60                 u64 [sp + 0x60] = ra
 14654: 7b 15 58                 u64 [sp + 0x58] = s0
 14657: 7b 16 50                 u64 [sp + 0x50] = s1
 14660: 80 73 34                 t1 = u32 [a0 + 0x34]
 14663: 7b 1a 20                 u64 [sp + 0x20] = a3
 14666: 64 9c                    a5 = a2
 14668: 84 36 01                 s1 = t1 & 0x1
 14671: 33 02 2b                 t0 = 0x2b
 14674: 33 09 00 00 11           a2 = 0x110000
 14679: 84 3a 04                 a3 = t1 & 0x4
 14682: 7b 1b 28                 u64 [sp + 0x28] = a4
 14685: c8 b6 04                 t2 = s1 + a4
 14688: 7b 1c 30                 u64 [sp + 0x30] = a5
 14691: 52 0a 10                 jump @825 if a3 != 0
      :                          @823
 14694: 49 11 38                 u64 [sp + 56] = 0
 14697: 82 78                    a1 = u64 [a0]
 14699: 94 69 2b                 a2 = 0x2b if s1 != 0
 14702: 52 08 35                 jump @829 if a1 != 0
      :                          @824
 14705: 28 56                    jump @834
      :                          @825
 14707: 7b 18 38                 u64 [sp + 0x38] = a1
 14710: 33 09                    a2 = 0
 14712: 51 0c 1b                 jump @828 if a5 == 0
      :                          @826
 14715: 82 1b 38                 a4 = u64 [sp + 0x38]
 14718: 01                       fallthrough
      :                          @827
 14719: 7d b5                    s0 = i8 [a4]
 14721: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 14724: 85 5a 01                 a3 = s0 ^ 0x1
 14727: c8 a9 09                 a2 = a2 + a3
 14730: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 14733: 95 bb 01                 a4 = a4 + 0x1
 14736: 52 0c ef                 jump @827 if a5 != 0
      :                          @828
 14739: c8 94 04                 t2 = t2 + a2
 14742: 33 09 00 00 11           a2 = 0x110000
 14747: 82 78                    a1 = u64 [a0]
 14749: db 62 09                 a2 = t0 if s1 != 0
 14752: 51 08 27                 jump @834 if a1 == 0
      :                          @829
 14755: 82 7a 08                 a3 = u64 [a0 + 0x8]
 14758: ae a4 21                 jump @834 if t2 >=u a3
      :                          @830
 14761: 84 38 08                 a1 = t1 & 0x8
 14764: 52 08 51                 jump @837 if a1 != 0
      :                          @831
 14767: 7c 76 38                 s1 = u8 [a0 + 0x38]
 14770: c9 4a 0a                 a3 = a3 - t2
 14773: 7b 19 18                 u64 [sp + 0x18] = a2
 14776: 5a 16 01 a0 00           jump @844 if s1 >s 1
      :                          @832
 14781: 52 06 ad 00              jump @846 if s1 != 0
      :                          @833
 14785: 7b 1a 10                 u64 [sp + 0x10] = a3
 14788: 28 ac 00                 jump @847
      :                          @834
 14791: 82 75 20                 s0 = u64 [a0 + 0x20]
 14794: 82 76 28                 s1 = u64 [a0 + 0x28]
 14797: 64 57                    a0 = s0
 14799: 64 68                    a1 = s1
 14801: 82 1a 38                 a3 = u64 [sp + 0x38]
 14804: 82 1b 30                 a4 = u64 [sp + 0x30]
 14807: 50 20 88 01 75 01        ra = 392, jump @867
      :                          @835 [@dyn 196]
 14813: 33 08 01                 a1 = 0x1
 14816: 52 07 be 00              jump @852 if a0 != 0
      :                          @836
 14820: 82 6c 18                 a5 = u64 [s1 + 0x18]
 14823: 64 57                    a0 = s0
 14825: 82 18 20                 a1 = u64 [sp + 0x20]
 14828: 82 19 28                 a2 = u64 [sp + 0x28]
 14831: 82 10 60                 ra = u64 [sp + 0x60]
 14834: 82 15 58                 s0 = u64 [sp + 0x58]
 14837: 82 16 50                 s1 = u64 [sp + 0x50]
 14840: 95 11 68                 sp = sp + 0x68
 14843: 32 0c                    jump [a5]
      :                          @837
 14845: 7b 1a 40                 u64 [sp + 0x40] = a3
 14848: 64 45                    s0 = t2
 14850: 81 78 30                 a1 = i32 [a0 + 0x30]
 14853: 7b 18 10                 u64 [sp + 0x10] = a1
 14856: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 14859: 7b 1a 08                 u64 [sp + 0x8] = a3
 14862: 82 7a 20                 a3 = u64 [a0 + 0x20]
 14865: 82 78 28                 a1 = u64 [a0 + 0x28]
 14868: 48 17 30 30              u32 [a0 + 48] = 0x30
 14872: 7b 17                    u64 [sp] = a0
 14874: 46 17 38 01              u8 [a0 + 56] = 0x1
 14878: 7b 1a 48                 u64 [sp + 0x48] = a3
 14881: 64 a7                    a0 = a3
 14883: 64 86                    s1 = a1
 14885: 82 1a 38                 a3 = u64 [sp + 0x38]
 14888: 82 1b 30                 a4 = u64 [sp + 0x30]
 14891: 50 20 8a 01 21 01        ra = 394, jump @867
      :                          @838 [@dyn 197]
 14897: 52 07 69                 jump @851 if a0 != 0
      :                          @839
 14900: 82 17 40                 a0 = u64 [sp + 0x40]
 14903: c9 57 05                 s0 = a0 - s0
 14906: 95 55 01                 s0 = s0 + 0x1
 14909: 01                       fallthrough
      :                          @840
 14910: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 14913: 51 05 cb 00              jump @862 if s0 == 0
      :                          @841
 14917: 82 69 20                 a2 = u64 [s1 + 0x20]
 14920: 33 08 30                 a1 = 0x30
 14923: 82 17 48                 a0 = u64 [sp + 0x48]
 14926: b4 90 02 8c 01           ra = 396, jump [a2]
      :                          @842 [@dyn 198]
 14931: 51 07 eb                 jump @840 if a0 == 0
      :                          @843
 14934: 28 44                    jump @851
      :                          @844
 14936: 52 16 02 12              jump @846 if s1 != 2
      :                          @845
 14940: 98 a6 01                 s1 = a3 >> 0x1
 14943: 95 a8 01                 a1 = a3 + 0x1
 14946: 98 88 01                 a1 = a1 >> 0x1
 14949: 7b 18 10                 u64 [sp + 0x10] = a1
 14952: 28 08                    jump @847
      :                          @846
 14954: 64 a6                    s1 = a3
 14956: 49 11 10                 u64 [sp + 16] = 0
 14959: 01                       fallthrough
      :                          @847
 14960: 82 78 20                 a1 = u64 [a0 + 0x20]
 14963: 7b 18 48                 u64 [sp + 0x48] = a1
 14966: 82 75 28                 s0 = u64 [a0 + 0x28]
 14969: 81 77 30                 a0 = i32 [a0 + 0x30]
 14972: 7b 17 40                 u64 [sp + 0x40] = a0
 14975: 95 66 01                 s1 = s1 + 0x1
 14978: 01                       fallthrough
      :                          @848
 14979: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 14982: 51 06 28                 jump @853 if s1 == 0
      :                          @849
 14985: 82 59 20                 a2 = u64 [s0 + 0x20]
 14988: 82 17 48                 a0 = u64 [sp + 0x48]
 14991: 82 18 40                 a1 = u64 [sp + 0x40]
 14994: b4 90 02 8e 01           ra = 398, jump [a2]
      :                          @850 [@dyn 199]
 14999: 51 07 ec                 jump @848 if a0 == 0
      :                          @851
 15002: 33 08 01                 a1 = 0x1
 15005: 01                       fallthrough
      :                          @852
 15006: 64 87                    a0 = a1
 15008: 82 10 60                 ra = u64 [sp + 0x60]
 15011: 82 15 58                 s0 = u64 [sp + 0x58]
 15014: 82 16 50                 s1 = u64 [sp + 0x50]
 15017: 95 11 68                 sp = sp + 0x68
 15020: 32 00                    ret
      :                          @853
 15022: 82 16 48                 s1 = u64 [sp + 0x48]
 15025: 64 67                    a0 = s1
 15027: 64 58                    a1 = s0
 15029: 82 19 18                 a2 = u64 [sp + 0x18]
 15032: 82 1a 38                 a3 = u64 [sp + 0x38]
 15035: 82 1b 30                 a4 = u64 [sp + 0x30]
 15038: 50 20 90 01 8e 00        ra = 400, jump @867
      :                          @854 [@dyn 200]
 15044: 33 08 01                 a1 = 0x1
 15047: 52 07 d7                 jump @852 if a0 != 0
      :                          @855
 15050: 82 5a 18                 a3 = u64 [s0 + 0x18]
 15053: 64 67                    a0 = s1
 15055: 82 18 20                 a1 = u64 [sp + 0x20]
 15058: 82 19 28                 a2 = u64 [sp + 0x28]
 15061: b4 a0 02 92 01           ra = 402, jump [a3]
      :                          @856 [@dyn 201]
 15066: 33 08 01                 a1 = 0x1
 15069: 52 07 c1                 jump @852 if a0 != 0
      :                          @857
 15072: 82 17 10                 a0 = u64 [sp + 0x10]
 15075: 9a 77                    a0 = -a0
 15077: 7b 17 38                 u64 [sp + 0x38] = a0
 15080: 33 06 ff                 s1 = 0xffffffffffffffff
 15083: 01                       fallthrough
      :                          @858
 15084: 82 17 38                 a0 = u64 [sp + 0x38]
 15087: c8 67 07                 a0 = a0 + s1
 15090: 51 17 ff 45              jump @865 if a0 == 4294967295
      :                          @859
 15094: 82 59 20                 a2 = u64 [s0 + 0x20]
 15097: 82 17 48                 a0 = u64 [sp + 0x48]
 15100: 82 18 40                 a1 = u64 [sp + 0x40]
 15103: b4 90 02 94 01           ra = 404, jump [a2]
      :                          @860 [@dyn 202]
 15108: 95 66 01                 s1 = s1 + 0x1
 15111: 51 07 e5                 jump @858 if a0 == 0
      :                          @861
 15114: 28 39                    jump @866
      :                          @862
 15116: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15119: 82 17 48                 a0 = u64 [sp + 0x48]
 15122: 82 18 20                 a1 = u64 [sp + 0x20]
 15125: 82 19 28                 a2 = u64 [sp + 0x28]
 15128: b4 a0 02 96 01           ra = 406, jump [a3]
      :                          @863 [@dyn 203]
 15133: 33 08 01                 a1 = 0x1
 15136: 52 07 7e ff              jump @852 if a0 != 0
      :                          @864
 15140: 33 08                    a1 = 0
 15142: 82 16                    s1 = u64 [sp]
 15144: 82 17 10                 a0 = u64 [sp + 0x10]
 15147: 7a 67 30                 u32 [s1 + 0x30] = a0
 15150: 82 17 08                 a0 = u64 [sp + 0x8]
 15153: 78 67 38                 u8 [s1 + 0x38] = a0
 15156: 28 6a ff                 jump @852
      :                          @865
 15159: 82 16 10                 s1 = u64 [sp + 0x10]
 15162: 82 17 10                 a0 = u64 [sp + 0x10]
 15165: d8 76 08                 a1 = s1 <u a0
 15168: 28 5e ff                 jump @852
      :                          @866
 15171: 82 17 10                 a0 = u64 [sp + 0x10]
 15174: d8 76 08                 a1 = s1 <u a0
 15177: 28 55 ff                 jump @852
      :                          @867
 15180: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15183: 7b 10 20                 u64 [sp + 0x20] = ra
 15186: 7b 15 18                 u64 [sp + 0x18] = s0
 15189: 7b 16 10                 u64 [sp + 0x10] = s1
 15192: 83 9c                    i32 a5 = a2 + 0
 15194: 33 02 00 00 11           t0 = 0x110000
 15199: 64 a6                    s1 = a3
 15201: 64 85                    s0 = a1
 15203: 64 7a                    a3 = a0
 15205: aa 2c 21                 jump @870 if a5 == t0
      :                          @868
 15208: 82 5c 20                 a5 = u64 [s0 + 0x20]
 15211: 64 a7                    a0 = a3
 15213: 64 98                    a1 = a2
 15215: 7b 1b 08                 u64 [sp + 0x8] = a4
 15218: 7b 1a                    u64 [sp] = a3
 15220: b4 c0 02 98 01           ra = 408, jump [a5]
      :                          @869 [@dyn 204]
 15225: 82 1a                    a3 = u64 [sp]
 15227: 82 1b 08                 a4 = u64 [sp + 0x8]
 15230: 64 78                    a1 = a0
 15232: 33 07 01                 a0 = 0x1
 15235: 52 08 20                 jump @873 if a1 != 0
      :                          @870
 15238: 51 06 1a                 jump @872 if s1 == 0
      :                          @871
 15241: 82 5c 18                 a5 = u64 [s0 + 0x18]
 15244: 64 a7                    a0 = a3
 15246: 64 68                    a1 = s1
 15248: 64 b9                    a2 = a4
 15250: 82 10 20                 ra = u64 [sp + 0x20]
 15253: 82 15 18                 s0 = u64 [sp + 0x18]
 15256: 82 16 10                 s1 = u64 [sp + 0x10]
 15259: 95 11 28                 sp = sp + 0x28
 15262: 32 0c                    jump [a5]
      :                          @872
 15264: 33 07                    a0 = 0
 15266: 01                       fallthrough
      :                          @873
 15267: 82 10 20                 ra = u64 [sp + 0x20]
 15270: 82 15 18                 s0 = u64 [sp + 0x18]
 15273: 82 16 10                 s1 = u64 [sp + 0x10]
 15276: 95 11 28                 sp = sp + 0x28
 15279: 32 00                    ret
      :                          @874
 15281: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 15285: 7b 10 80 00              u64 [sp + 0x80] = ra
 15289: 7b 15 78                 u64 [sp + 0x78] = s0
 15292: 7b 16 70                 u64 [sp + 0x70] = s1
 15295: 49 11 60 20              u64 [sp + 96] = 0x20
 15299: 33 0a 03                 a3 = 0x3
 15302: 78 1a 68                 u8 [sp + 0x68] = a3
 15305: 82 96 20                 s1 = u64 [a2 + 0x20]
 15308: 49 11 30                 u64 [sp + 48] = 0
 15311: 49 11 40                 u64 [sp + 64] = 0
 15314: 7b 17 50                 u64 [sp + 0x50] = a0
 15317: 7b 18 58                 u64 [sp + 0x58] = a1
 15320: 51 06 0a 01              jump @896 if s1 == 0
      :                          @875
 15324: 82 97 28                 a0 = u64 [a2 + 0x28]
 15327: 51 07 79 01              jump @906 if a0 == 0
      :                          @876
 15331: 49 11 28                 u64 [sp + 40] = 0
 15334: 82 95                    s0 = u64 [a2]
 15336: 7b 19 08                 u64 [sp + 0x8] = a2
 15339: 82 98 10                 a1 = u64 [a2 + 0x10]
 15342: 7b 18 18                 u64 [sp + 0x18] = a1
 15345: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 15348: 97 88 03                 a1 = a1 << 0x3
 15351: 98 88 03                 a1 = a1 >> 0x3
 15354: 95 88 01                 a1 = a1 + 0x1
 15357: 7b 18                    u64 [sp] = a1
 15359: 95 55 08                 s0 = s0 + 0x8
 15362: 96 78 38                 a1 = a0 * 0x38
 15365: 95 66 18                 s1 = s1 + 0x18
 15368: 33 07 84 01              a0 = 0x184
 15372: 7b 17 10                 u64 [sp + 0x10] = a0
 15375: 01                       fallthrough
      :                          @877
 15376: 7b 18 20                 u64 [sp + 0x20] = a1
 15379: 82 59                    a2 = u64 [s0]
 15381: 51 09 18                 jump @880 if a2 == 0
      :                          @878
 15384: 82 1a 58                 a3 = u64 [sp + 0x58]
 15387: 82 17 50                 a0 = u64 [sp + 0x50]
 15390: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 15393: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15396: b4 a0 02 9a 01           ra = 410, jump [a3]
      :                          @879 [@dyn 205]
 15401: 52 07 55 01              jump @909 if a0 != 0
      :                          @880
 15405: 81 67 10                 a0 = i32 [s1 + 0x10]
 15408: 7a 17 60                 u32 [sp + 0x60] = a0
 15411: 7c 67 18                 a0 = u8 [s1 + 0x18]
 15414: 78 17 68                 u8 [sp + 0x68] = a0
 15417: 81 67 14                 a0 = i32 [s1 + 0x14]
 15420: 7a 17 64                 u32 [sp + 0x64] = a0
 15423: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 15426: 82 67                    a0 = u64 [s1]
 15428: 51 08 26                 jump @885 if a1 == 0
      :                          @881
 15431: 52 18 01 16              jump @883 if a1 != 1
      :                          @882
 15435: 97 77 04                 a0 = a0 << 0x4
 15438: 82 18 18                 a1 = u64 [sp + 0x18]
 15441: c8 87 07                 a0 = a0 + a1
 15444: 82 78 08                 a1 = u64 [a0 + 0x8]
 15447: 82 19 10                 a2 = u64 [sp + 0x10]
 15450: aa 98 07                 jump @884 if a1 == a2
      :                          @883
 15453: 33 08                    a1 = 0
 15455: 28 0f                    jump @886
      :                          @884
 15457: 82 77                    a0 = u64 [a0]
 15459: 82 77                    a0 = u64 [a0]
 15461: 33 08 01                 a1 = 0x1
 15464: 28 06                    jump @886
      :                          @885
 15466: 33 08 01                 a1 = 0x1
 15469: 01                       fallthrough
      :                          @886
 15470: 7b 18 30                 u64 [sp + 0x30] = a1
 15473: 7b 17 38                 u64 [sp + 0x38] = a0
 15476: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 15479: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 15482: 51 08 26                 jump @891 if a1 == 0
      :                          @887
 15485: 52 18 01 16              jump @889 if a1 != 1
      :                          @888
 15489: 97 77 04                 a0 = a0 << 0x4
 15492: 82 18 18                 a1 = u64 [sp + 0x18]
 15495: c8 87 07                 a0 = a0 + a1
 15498: 82 78 08                 a1 = u64 [a0 + 0x8]
 15501: 82 19 10                 a2 = u64 [sp + 0x10]
 15504: aa 98 07                 jump @890 if a1 == a2
      :                          @889
 15507: 33 08                    a1 = 0
 15509: 28 0f                    jump @892
      :                          @890
 15511: 82 77                    a0 = u64 [a0]
 15513: 82 77                    a0 = u64 [a0]
 15515: 33 08 01                 a1 = 0x1
 15518: 28 06                    jump @892
      :                          @891
 15520: 33 08 01                 a1 = 0x1
 15523: 01                       fallthrough
      :                          @892
 15524: 7b 18 40                 u64 [sp + 0x40] = a1
 15527: 7b 17 48                 u64 [sp + 0x48] = a0
 15530: 82 67 08                 a0 = u64 [s1 + 0x8]
 15533: 97 77 04                 a0 = a0 << 0x4
 15536: 82 18 18                 a1 = u64 [sp + 0x18]
 15539: c8 78 08                 a1 = a1 + a0
 15542: 82 87                    a0 = u64 [a1]
 15544: 82 89 08                 a2 = u64 [a1 + 0x8]
 15547: 95 18 30                 a1 = sp + 0x30
 15550: b4 90 02 9c 01           ra = 412, jump [a2]
      :                          @893 [@dyn 206]
 15555: 52 07 bb 00              jump @909 if a0 != 0
      :                          @894
 15559: 95 55 10                 s0 = s0 + 0x10
 15562: 82 18 20                 a1 = u64 [sp + 0x20]
 15565: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 15568: 95 66 38                 s1 = s1 + 0x38
 15571: 82 17 28                 a0 = u64 [sp + 0x28]
 15574: 95 77 01                 a0 = a0 + 0x1
 15577: 7b 17 28                 u64 [sp + 0x28] = a0
 15580: 52 08 34 ff              jump @877 if a1 != 0
      :                          @895
 15584: 28 6b                    jump @904
      :                          @896
 15586: 82 97 18                 a0 = u64 [a2 + 0x18]
 15589: 51 07 73                 jump @906 if a0 == 0
      :                          @897
 15592: 82 95 10                 s0 = u64 [a2 + 0x10]
 15595: 33 0a                    a3 = 0
 15597: 97 78 04                 a1 = a0 << 0x4
 15600: c8 58 08                 a1 = a1 + s0
 15603: 7b 18 20                 u64 [sp + 0x20] = a1
 15606: 7b 19 08                 u64 [sp + 0x8] = a2
 15609: 82 96                    s1 = u64 [a2]
 15611: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15614: 97 77 04                 a0 = a0 << 0x4
 15617: 98 77 04                 a0 = a0 >> 0x4
 15620: 95 77 01                 a0 = a0 + 0x1
 15623: 7b 17                    u64 [sp] = a0
 15625: 95 66 08                 s1 = s1 + 0x8
 15628: 01                       fallthrough
      :                          @898
 15629: 7b 1a 28                 u64 [sp + 0x28] = a3
 15632: 82 69                    a2 = u64 [s1]
 15634: 51 09 17                 jump @901 if a2 == 0
      :                          @899
 15637: 82 1a 58                 a3 = u64 [sp + 0x58]
 15640: 82 17 50                 a0 = u64 [sp + 0x50]
 15643: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 15646: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15649: b4 a0 02 9e 01           ra = 414, jump [a3]
      :                          @900 [@dyn 207]
 15654: 52 07 58                 jump @909 if a0 != 0
      :                          @901
 15657: 82 57                    a0 = u64 [s0]
 15659: 82 59 08                 a2 = u64 [s0 + 0x8]
 15662: 95 18 30                 a1 = sp + 0x30
 15665: b4 90 02 a0 01           ra = 416, jump [a2]
      :                          @902 [@dyn 208]
 15670: 52 07 48                 jump @909 if a0 != 0
      :                          @903
 15673: 95 66 10                 s1 = s1 + 0x10
 15676: 95 55 10                 s0 = s0 + 0x10
 15679: 82 1a 28                 a3 = u64 [sp + 0x28]
 15682: 95 aa 01                 a3 = a3 + 0x1
 15685: 82 17 20                 a0 = u64 [sp + 0x20]
 15688: ab 75 c5                 jump @898 if s0 != a0
      :                          @904
 15691: 82 19 08                 a2 = u64 [sp + 0x8]
 15694: 82 1a                    a3 = u64 [sp]
 15696: 82 97 08                 a0 = u64 [a2 + 0x8]
 15699: ac 7a 0d                 jump @907 if a3 <u a0
      :                          @905
 15702: 28 2d                    jump @910
      :                          @906
 15704: 33 0a                    a3 = 0
 15706: 82 97 08                 a0 = u64 [a2 + 0x8]
 15709: 54 07 26                 jump @910 if a0 <=u 0
      :                          @907
 15712: 82 97                    a0 = u64 [a2]
 15714: 97 a8 04                 a1 = a3 << 0x4
 15717: c8 87 09                 a2 = a0 + a1
 15720: 82 1a 58                 a3 = u64 [sp + 0x58]
 15723: 82 17 50                 a0 = u64 [sp + 0x50]
 15726: 82 98                    a1 = u64 [a2]
 15728: 82 99 08                 a2 = u64 [a2 + 0x8]
 15731: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15734: b4 a0 02 a2 01           ra = 418, jump [a3]
      :                          @908 [@dyn 209]
 15739: 51 07 08                 jump @910 if a0 == 0
      :                          @909
 15742: 33 07 01                 a0 = 0x1
 15745: 28 05                    jump @911
      :                          @910
 15747: 33 07                    a0 = 0
 15749: 01                       fallthrough
      :                          @911
 15750: 82 10 80 00              ra = u64 [sp + 0x80]
 15754: 82 15 78                 s0 = u64 [sp + 0x78]
 15757: 82 16 70                 s1 = u64 [sp + 0x70]
 15760: 95 11 88 00              sp = sp + 0x88
 15764: 32 00                    ret
      :                          @912 [@dyn 210]
 15766: 32 00                    ret
      :                          @913 [@dyn 211]
 15768: 95 11 88                 sp = sp + 0xffffffffffffff88
 15771: 7b 10 70                 u64 [sp + 0x70] = ra
 15774: 7b 15 68                 u64 [sp + 0x68] = s0
 15777: 7b 16 60                 u64 [sp + 0x60] = s1
 15780: 64 93                    t1 = a2
 15782: 33 0c                    a5 = 0
 15784: 33 02                    t0 = 0
 15786: 33 0b                    a4 = 0
 15788: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 15798: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 15804: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 15814: 82 79 10                 a2 = u64 [a0 + 0x10]
 15817: 7b 19 48                 u64 [sp + 0x48] = a2
 15820: 82 79                    a2 = u64 [a0]
 15822: 7b 19 30                 u64 [sp + 0x30] = a2
 15825: 82 77 08                 a0 = u64 [a0 + 0x8]
 15828: 7b 17 28                 u64 [sp + 0x28] = a0
 15831: 7b 18 50                 u64 [sp + 0x50] = a1
 15834: 95 88 08                 a1 = a1 + 0x8
 15837: 7b 18                    u64 [sp] = a1
 15839: 33 07 69 06 01           a0 = 0x10669
 15844: 7b 17 08                 u64 [sp + 0x8] = a0
 15847: 33 05 0a                 s0 = 0xa
 15850: 7b 13 20                 u64 [sp + 0x20] = t1
 15853: 7b 14 18                 u64 [sp + 0x18] = t2
 15856: 7b 10 10                 u64 [sp + 0x10] = ra
 15859: 28 3a                    jump @917
      :                          @914
 15861: c8 89 07                 a0 = a2 + a1
 15864: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 15867: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15870: 88 77 01                 a0 = a0 <u 0x1
 15873: 01                       fallthrough
      :                          @915
 15874: 82 1a 48                 a3 = u64 [sp + 0x48]
 15877: 78 a7                    u8 [a3] = a0
 15879: 82 17 28                 a0 = u64 [sp + 0x28]
 15882: 82 7a 18                 a3 = u64 [a0 + 0x18]
 15885: 82 17 30                 a0 = u64 [sp + 0x30]
 15888: b4 a0 02 a8 01           ra = 424, jump [a3]
      :                          @916 [@dyn 212]
 15893: 64 52                    t0 = s0
 15895: 82 13 20                 t1 = u64 [sp + 0x20]
 15898: 82 14 18                 t2 = u64 [sp + 0x18]
 15901: 82 10 10                 ra = u64 [sp + 0x10]
 15904: 82 1c 58                 a5 = u64 [sp + 0x58]
 15907: 33 05 0a                 s0 = 0xa
 15910: 82 1b 38                 a4 = u64 [sp + 0x38]
 15913: 52 07 67 01              jump @958 if a0 != 0
      :                          @917
 15917: 84 b7 ff 00              a0 = a4 & 0xff
 15921: 52 07 5b 01              jump @957 if a0 != 0
      :                          @918
 15925: 7b 12 40                 u64 [sp + 0x40] = t0
 15928: ae c3 0a                 jump @921 if t1 >=u a5
      :                          @919
 15931: 28 f4 00                 jump @948
      :                          @920
 15934: ac c3 f1 00              jump @948 if t1 <u a5
      :                          @921
 15938: c9 c3 08                 a1 = t1 - a5
 15941: 82 16 50                 s1 = u64 [sp + 0x50]
 15944: c8 c6 06                 s1 = s1 + a5
 15947: 55 18 10 1d              jump @927 if a1 >=u 16
      :                          @922
 15951: aa c3 dd 00              jump @947 if t1 == a5
      :                          @923
 15955: 33 0a                    a3 = 0
 15957: 01                       fallthrough
      :                          @924
 15958: c8 a6 07                 a0 = s1 + a3
 15961: 7c 77                    a0 = u8 [a0]
 15963: aa 57 aa 00              jump @942 if a0 == s0
      :                          @925
 15967: 95 aa 01                 a3 = a3 + 0x1
 15970: ab a8 f4                 jump @924 if a1 != a3
      :                          @926
 15973: 28 c7 00                 jump @947
      :                          @927
 15976: 95 69 07                 a2 = s1 + 0x7
 15979: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 15982: c9 6a 07                 a0 = a3 - s1
 15985: d3 6a 0a                 a3 = a3 ^ s1
 15988: 88 aa 01                 a3 = a3 <u 0x1
 15991: 88 7b 01                 a4 = a0 <u 0x1
 15994: d4 ba 0a                 a3 = a3 | a4
 15997: 7b 1c 58                 u64 [sp + 0x58] = a5
 16000: 51 0a 44                 jump @933 if a3 == 0
      :                          @928
 16003: 33 07                    a0 = 0
 16005: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16008: 01                       fallthrough
      :                          @929
 16009: 82 1b 58                 a4 = u64 [sp + 0x58]
 16012: 82 19                    a2 = u64 [sp]
 16014: c8 9b 0b                 a4 = a4 + a2
 16017: 01                       fallthrough
      :                          @930
 16018: c8 76 0c                 a5 = s1 + a0
 16021: 82 cc                    a5 = u64 [a5]
 16023: c8 7b 09                 a2 = a4 + a0
 16026: 82 99                    a2 = u64 [a2]
 16028: d3 0c 05                 s0 = a5 ^ ra
 16031: c8 45 05                 s0 = s0 + t2
 16034: e0 c5 0c                 a5 = s0 & ~a5
 16037: d3 09 05                 s0 = a2 ^ ra
 16040: 3a 0a 10 00 03           a3 = u64 [0x30010]
 16045: c8 45 05                 s0 = s0 + t2
 16048: e0 95 09                 a2 = s0 & ~a2
 16051: d4 c9 09                 a2 = a2 | a5
 16054: d2 a9 09                 a2 = a2 & a3
 16057: 52 09 1f                 jump @936 if a2 != 0
      :                          @931
 16060: 95 77 10                 a0 = a0 + 0x10
 16063: ae 72 d3                 jump @930 if t0 >=u a0
      :                          @932
 16066: 28 16                    jump @936
      :                          @933
 16068: c8 a6 0b                 a4 = s1 + a3
 16071: 7c bb                    a4 = u8 [a4]
 16073: aa 5b 54                 jump @945 if a4 == s0
      :                          @934
 16076: 95 aa 01                 a3 = a3 + 0x1
 16079: ab a7 f5                 jump @933 if a0 != a3
      :                          @935
 16082: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16085: ae 72 b4                 jump @929 if t0 >=u a0
      :                          @936
 16088: aa 87 99 00              jump @954 if a0 == a1
      :                          @937
 16092: 33 0a                    a3 = 0
 16094: c8 76 06                 s1 = s1 + a0
 16097: c9 73 08                 a1 = t1 - a0
 16100: 82 1c 58                 a5 = u64 [sp + 0x58]
 16103: c9 c8 08                 a1 = a1 - a5
 16106: 33 05 0a                 s0 = 0xa
 16109: 82 12 40                 t0 = u64 [sp + 0x40]
 16112: 01                       fallthrough
      :                          @938
 16113: c8 a6 09                 a2 = s1 + a3
 16116: 7c 99                    a2 = u8 [a2]
 16118: aa 59 0b                 jump @941 if a2 == s0
      :                          @939
 16121: 95 aa 01                 a3 = a3 + 0x1
 16124: ab a8 f5                 jump @938 if a1 != a3
      :                          @940
 16127: 28 2d                    jump @947
      :                          @941
 16129: c8 7a 0a                 a3 = a3 + a0
 16132: 01                       fallthrough
      :                          @942
 16133: c8 ca 0a                 a3 = a3 + a5
 16136: 95 ac 01                 a5 = a3 + 0x1
 16139: ae 3a 33 ff              jump @920 if a3 >=u t1
      :                          @943
 16143: 82 17 50                 a0 = u64 [sp + 0x50]
 16146: c8 7a 0a                 a3 = a3 + a0
 16149: 7c a7                    a0 = u8 [a3]
 16151: ab 57 27 ff              jump @920 if a0 != s0
      :                          @944
 16155: 28 5d                    jump @955
      :                          @945
 16157: 82 1c 58                 a5 = u64 [sp + 0x58]
 16160: c8 ca 0a                 a3 = a3 + a5
 16163: 95 ac 01                 a5 = a3 + 0x1
 16166: ac 3a e9                 jump @943 if a3 <u t1
      :                          @946
 16169: 28 15 ff                 jump @920
      :                          @947
 16172: 64 3c                    a5 = t1
 16174: 01                       fallthrough
      :                          @948
 16175: 7b 1c 58                 u64 [sp + 0x58] = a5
 16178: 49 11 38 01              u64 [sp + 56] = 0x1
 16182: 64 25                    s0 = t0
 16184: 64 36                    s1 = t1
 16186: aa 32 52                 jump @957 if t0 == t1
      :                          @949
 16189: 82 17 48                 a0 = u64 [sp + 0x48]
 16192: 7c 77                    a0 = u8 [a0]
 16194: 51 07 1d                 jump @952 if a0 == 0
      :                          @950
 16197: 82 17 28                 a0 = u64 [sp + 0x28]
 16200: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16203: 33 09 04                 a2 = 0x4
 16206: 82 17 30                 a0 = u64 [sp + 0x30]
 16209: 82 18 08                 a1 = u64 [sp + 0x8]
 16212: b4 a0 02 aa 01           ra = 426, jump [a3]
      :                          @951 [@dyn 213]
 16217: 82 12 40                 t0 = u64 [sp + 0x40]
 16220: 52 07 34                 jump @958 if a0 != 0
      :                          @952
 16223: c9 26 09                 a2 = s1 - t0
 16226: 82 18 50                 a1 = u64 [sp + 0x50]
 16229: c8 28 08                 a1 = a1 + t0
 16232: ab 26 8d fe              jump @914 if s1 != t0
      :                          @953
 16236: 33 07                    a0 = 0
 16238: 28 94 fe                 jump @915
      :                          @954
 16241: 64 3c                    a5 = t1
 16243: 82 12 40                 t0 = u64 [sp + 0x40]
 16246: 28 b9                    jump @948
      :                          @955
 16248: 49 11 38                 u64 [sp + 56] = 0
 16251: 64 c6                    s1 = a5
 16253: 64 c5                    s0 = a5
 16255: 7b 1c 58                 u64 [sp + 0x58] = a5
 16258: 82 17 48                 a0 = u64 [sp + 0x48]
 16261: 7c 77                    a0 = u8 [a0]
 16263: 52 07 be                 jump @950 if a0 != 0
      :                          @956
 16266: 28 d5                    jump @952
      :                          @957
 16268: 33 07                    a0 = 0
 16270: 28 06                    jump @959
      :                          @958
 16272: 33 07 01                 a0 = 0x1
 16275: 01                       fallthrough
      :                          @959
 16276: 82 10 70                 ra = u64 [sp + 0x70]
 16279: 82 15 68                 s0 = u64 [sp + 0x68]
 16282: 82 16 60                 s1 = u64 [sp + 0x60]
 16285: 95 11 78                 sp = sp + 0x78
 16288: 32 00                    ret
      :                          @960 [@dyn 214]
 16290: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16293: 7b 10 20                 u64 [sp + 0x20] = ra
 16296: 7b 15 18                 u64 [sp + 0x18] = s0
 16299: 7b 16 10                 u64 [sp + 0x10] = s1
 16302: 82 75 10                 s0 = u64 [a0 + 0x10]
 16305: 7c 59                    a2 = u8 [s0]
 16307: 82 7b                    a4 = u64 [a0]
 16309: 82 76 08                 s1 = u64 [a0 + 0x8]
 16312: 51 09 33                 jump @964 if a2 == 0
      :                          @961
 16315: 82 6a 18                 a3 = u64 [s1 + 0x18]
 16318: 7b 18 08                 u64 [sp + 0x8] = a1
 16321: 33 08 69 06 01           a1 = 0x10669
 16326: 33 09 04                 a2 = 0x4
 16329: 64 b7                    a0 = a4
 16331: 7b 1b                    u64 [sp] = a4
 16333: b4 a0 02 ae 01           ra = 430, jump [a3]
      :                          @962 [@dyn 215]
 16338: 82 18 08                 a1 = u64 [sp + 0x8]
 16341: 82 1b                    a4 = u64 [sp]
 16343: 51 07 14                 jump @964 if a0 == 0
      :                          @963
 16346: 33 07 01                 a0 = 0x1
 16349: 82 10 20                 ra = u64 [sp + 0x20]
 16352: 82 15 18                 s0 = u64 [sp + 0x18]
 16355: 82 16 10                 s1 = u64 [sp + 0x10]
 16358: 95 11 28                 sp = sp + 0x28
 16361: 32 00                    ret
      :                          @964
 16363: 83 87                    i32 a0 = a1 + 0
 16365: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 16368: 88 77 01                 a0 = a0 <u 0x1
 16371: 78 57                    u8 [s0] = a0
 16373: 82 6c 20                 a5 = u64 [s1 + 0x20]
 16376: 64 b7                    a0 = a4
 16378: 82 10 20                 ra = u64 [sp + 0x20]
 16381: 82 15 18                 s0 = u64 [sp + 0x18]
 16384: 82 16 10                 s1 = u64 [sp + 0x10]
 16387: 95 11 28                 sp = sp + 0x28
 16390: 32 0c                    jump [a5]
      :                          @965 [@dyn 216]
 16392: 64 8a                    a3 = a1
 16394: 33 08 f0 11 01           a1 = 0x111f0
 16399: 64 a9                    a2 = a3
 16401: 28 a0 fb                 jump @874
      :                          @966
 16404: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 16408: 7b 10 88 00              u64 [sp + 0x88] = ra
 16412: 7b 15 80 00              u64 [sp + 0x80] = s0
 16416: 7b 16 78                 u64 [sp + 0x78] = s1
 16419: 64 75                    s0 = a0
 16421: 7c 77 08                 a0 = u8 [a0 + 0x8]
 16424: 64 8b                    a4 = a1
 16426: 33 08 01                 a1 = 0x1
 16429: 33 06 01                 s1 = 0x1
 16432: 51 07 1d                 jump @968 if a0 == 0
      :                          @967
 16435: 78 56 08                 u8 [s0 + 0x8] = s1
 16438: 46 15 09 01              u8 [s0 + 9] = 0x1
 16442: 64 57                    a0 = s0
 16444: 82 10 88 00              ra = u64 [sp + 0x88]
 16448: 82 15 80 00              s0 = u64 [sp + 0x80]
 16452: 82 16 78                 s1 = u64 [sp + 0x78]
 16455: 95 11 90 00              sp = sp + 0x90
 16459: 32 00                    ret
      :                          @968
 16461: 64 9a                    a3 = a2
 16463: 82 5c                    a5 = u64 [s0]
 16465: 80 c7 34                 a0 = u32 [a5 + 0x34]
 16468: 7c 58 09                 a1 = u8 [s0 + 0x9]
 16471: 84 79 04                 a2 = a0 & 0x4
 16474: 52 09 45                 jump @974 if a2 != 0
      :                          @969
 16477: 51 08 32                 jump @972 if a1 == 0
      :                          @970
 16480: 82 c8 28                 a1 = u64 [a5 + 0x28]
 16483: 82 c7 20                 a0 = u64 [a5 + 0x20]
 16486: 82 83 18                 t1 = u64 [a1 + 0x18]
 16489: 33 08 71 06 01           a1 = 0x10671
 16494: 33 09 02                 a2 = 0x2
 16497: 64 a6                    s1 = a3
 16499: 7b 1b 10                 u64 [sp + 0x10] = a4
 16502: 7b 1c 08                 u64 [sp + 0x8] = a5
 16505: b4 30 02 b2 01           ra = 434, jump [t1]
      :                          @971 [@dyn 217]
 16510: 82 1c 08                 a5 = u64 [sp + 0x8]
 16513: 82 1b 10                 a4 = u64 [sp + 0x10]
 16516: 64 6a                    a3 = s1
 16518: 33 08 01                 a1 = 0x1
 16521: 33 06 01                 s1 = 0x1
 16524: 52 07 a7                 jump @967 if a0 != 0
      :                          @972
 16527: 64 b7                    a0 = a4
 16529: 64 c8                    a1 = a5
 16531: b4 a0 02 b4 01           ra = 436, jump [a3]
      :                          @973 [@dyn 218]
 16536: 33 08 01                 a1 = 0x1
 16539: 64 76                    s1 = a0
 16541: 28 96                    jump @967
      :                          @974
 16543: 52 08 37                 jump @978 if a1 != 0
      :                          @975
 16546: 82 c8 28                 a1 = u64 [a5 + 0x28]
 16549: 82 c7 20                 a0 = u64 [a5 + 0x20]
 16552: 82 83 18                 t1 = u64 [a1 + 0x18]
 16555: 33 08 75 06 01           a1 = 0x10675
 16560: 33 09 01                 a2 = 0x1
 16563: 33 06 01                 s1 = 0x1
 16566: 7b 1a                    u64 [sp] = a3
 16568: 7b 1b 10                 u64 [sp + 0x10] = a4
 16571: 7b 1c 08                 u64 [sp + 0x8] = a5
 16574: b4 30 02 b6 01           ra = 438, jump [t1]
      :                          @976 [@dyn 219]
 16579: 82 1c 08                 a5 = u64 [sp + 0x8]
 16582: 82 1b 10                 a4 = u64 [sp + 0x10]
 16585: 82 1a                    a3 = u64 [sp]
 16587: 33 08 01                 a1 = 0x1
 16590: 52 07 65 ff              jump @967 if a0 != 0
      :                          @977
 16594: 81 c7 34                 a0 = i32 [a5 + 0x34]
 16597: 01                       fallthrough
      :                          @978
 16598: 33 06 01                 s1 = 0x1
 16601: 78 16 37                 u8 [sp + 0x37] = s1
 16604: 82 c8 20                 a1 = u64 [a5 + 0x20]
 16607: 82 c9 28                 a2 = u64 [a5 + 0x28]
 16610: 7b 18 18                 u64 [sp + 0x18] = a1
 16613: 7b 19 20                 u64 [sp + 0x20] = a2
 16616: 95 18 37                 a1 = sp + 0x37
 16619: 7b 18 28                 u64 [sp + 0x28] = a1
 16622: 81 c8 30                 a1 = i32 [a5 + 0x30]
 16625: 7c c9 38                 a2 = u8 [a5 + 0x38]
 16628: 82 c3                    t1 = u64 [a5]
 16630: 82 c4 08                 t2 = u64 [a5 + 0x8]
 16633: 82 c0 10                 ra = u64 [a5 + 0x10]
 16636: 82 c2 18                 t0 = u64 [a5 + 0x18]
 16639: 7a 17 6c                 u32 [sp + 0x6c] = a0
 16642: 7a 18 68                 u32 [sp + 0x68] = a1
 16645: 78 19 70                 u8 [sp + 0x70] = a2
 16648: 7b 13 38                 u64 [sp + 0x38] = t1
 16651: 7b 14 40                 u64 [sp + 0x40] = t2
 16654: 7b 10 48                 u64 [sp + 0x48] = ra
 16657: 7b 12 50                 u64 [sp + 0x50] = t0
 16660: 95 17 18                 a0 = sp + 0x18
 16663: 7b 17 58                 u64 [sp + 0x58] = a0
 16666: 33 07 f0 11 01           a0 = 0x111f0
 16671: 7b 17 60                 u64 [sp + 0x60] = a0
 16674: 95 18 38                 a1 = sp + 0x38
 16677: 64 b7                    a0 = a4
 16679: b4 a0 02 b8 01           ra = 440, jump [a3]
      :                          @979 [@dyn 220]
 16684: 52 07 21                 jump @982 if a0 != 0
      :                          @980
 16687: 82 18 60                 a1 = u64 [sp + 0x60]
 16690: 82 17 58                 a0 = u64 [sp + 0x58]
 16693: 82 8a 18                 a3 = u64 [a1 + 0x18]
 16696: 33 08 73 06 01           a1 = 0x10673
 16701: 33 09 02                 a2 = 0x2
 16704: b4 a0 02 ba 01           ra = 442, jump [a3]
      :                          @981 [@dyn 221]
 16709: 64 76                    s1 = a0
 16711: 33 08 01                 a1 = 0x1
 16714: 28 e9 fe                 jump @967
      :                          @982
 16717: 33 08 01                 a1 = 0x1
 16720: 28 e3 fe                 jump @967
      :                          @983
 16723: 51 08 9b 00              jump @1004 if a1 == 0
      :                          @984
 16727: 64 79                    a2 = a0
 16729: 7c 77                    a0 = u8 [a0]
 16731: 51 07 91 00              jump @1003 if a0 == 0
      :                          @985
 16735: 51 27 ff 00 90 00        jump @1005 if a0 == 255
      :                          @986
 16741: 6c 7a                    a3 = sext.b a0
 16743: 57 0a 09                 jump @988 if a3 <s 0
      :                          @987
 16746: 33 0a                    a3 = 0
 16748: 33 08                    a1 = 0
 16750: 28 73                    jump @1002
      :                          @988
 16752: 55 27 c0 00 0d           jump @990 if a0 >=u 192
      :                          @989
 16757: 33 0a 01                 a3 = 0x1
 16760: 33 0b 80                 a4 = 0xffffffffffffff80
 16763: 28 4a                    jump @999
      :                          @990
 16765: 55 27 e0 00 0e           jump @992 if a0 >=u 224
      :                          @991
 16770: 33 0a 02                 a3 = 0x2
 16773: 33 0b 40 ff              a4 = 0xffffffffffffff40
 16777: 28 3c                    jump @999
      :                          @992
 16779: 55 27 f0 00 0e           jump @994 if a0 >=u 240
      :                          @993
 16784: 33 0a 03                 a3 = 0x3
 16787: 33 0b 20 ff              a4 = 0xffffffffffffff20
 16791: 28 2e                    jump @999
      :                          @994
 16793: 55 27 f8 00 0e           jump @996 if a0 >=u 248
      :                          @995
 16798: 33 0a 04                 a3 = 0x4
 16801: 33 0b 10 ff              a4 = 0xffffffffffffff10
 16805: 28 20                    jump @999
      :                          @996
 16807: 55 27 fc 00 0e           jump @998 if a0 >=u 252
      :                          @997
 16812: 33 0a 05                 a3 = 0x5
 16815: 33 0b 08 ff              a4 = 0xffffffffffffff08
 16819: 28 12                    jump @999
      :                          @998
 16821: 88 7a fe 00              a3 = a0 <u 0xfe
 16825: 33 0b 04 ff              a4 = 0xffffffffffffff04
 16829: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 16833: 85 aa 07                 a3 = a3 ^ 0x7
 16836: 01                       fallthrough
      :                          @999
 16837: ae 8a 2b                 jump @1006 if a3 >=u a1
      :                          @1000
 16840: 33 08                    a1 = 0
 16842: c8 b7 07                 a0 = a0 + a4
 16845: 64 ab                    a4 = a3
 16847: 01                       fallthrough
      :                          @1001
 16848: c8 b9 0c                 a5 = a2 + a4
 16851: 7c cc                    a5 = u8 [a5]
 16853: 97 88 08                 a1 = a1 << 0x8
 16856: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 16859: d4 c8 08                 a1 = a1 | a5
 16862: 52 0b f2                 jump @1001 if a4 != 0
      :                          @1002
 16865: 8a a9 03                 i32 a2 = a3 << 0x3
 16868: cf 97 07                 a0 = a0 << a2
 16871: c8 87 07                 a0 = a0 + a1
 16874: 32 00                    ret
      :                          @1003
 16876: 32 00                    ret
      :                          @1004
 16878: 00                       trap
      :                          @1005
 16879: 00                       trap
      :                          @1006
 16880: 00                       trap
      :                          @1007
 16881: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 16885: 7b 10 00 01              u64 [sp + 0x100] = ra
 16889: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 16893: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 16897: 7b 17                    u64 [sp] = a0
 16899: 78 18 0f                 u8 [sp + 0xf] = a1
 16902: 7b 17 10                 u64 [sp + 0x10] = a0
 16905: 95 16 0f                 s1 = sp + 0xf
 16908: 33 05 01                 s0 = 0x1
 16911: 95 17 0f                 a0 = sp + 0xf
 16914: 33 08 01                 a1 = 0x1
 16917: 95 19 10                 a2 = sp + 0x10
 16920: 33 0a 08                 a3 = 0x8
 16923: 0a 03                    ecalli 3 // 'write'
 16925: 7b 16 60                 u64 [sp + 0x60] = s1
 16928: 33 07 c0 01              a0 = 0x1c0
 16932: 7b 17 68                 u64 [sp + 0x68] = a0
 16935: 64 17                    a0 = sp
 16937: 7b 17 70                 u64 [sp + 0x70] = a0
 16940: 33 07 16                 a0 = 0x16
 16943: 7b 17 78                 u64 [sp + 0x78] = a0
 16946: 49 21 80 00 02           u64 [sp + 128] = 0x2
 16951: 49 21 90 00 02           u64 [sp + 144] = 0x2
 16956: 49 21 a0 00              u64 [sp + 160] = 0
 16960: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 16970: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 16974: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 16979: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 16984: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 16989: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 16993: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 16997: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 17002: 33 08 20 12 01           a1 = 0x11220
 17007: 7b 18 30                 u64 [sp + 0x30] = a1
 17010: 49 11 38 02              u64 [sp + 56] = 0x2
 17014: 95 18 80 00              a1 = sp + 0x80
 17018: 7b 18 50                 u64 [sp + 0x50] = a1
 17021: 49 11 58 02              u64 [sp + 88] = 0x2
 17025: 95 18 60                 a1 = sp + 0x60
 17028: 7b 18 40                 u64 [sp + 0x40] = a1
 17031: 49 11 48 02              u64 [sp + 72] = 0x2
 17035: 95 17 18                 a0 = sp + 0x18
 17038: 95 18 30                 a1 = sp + 0x30
 17041: 50 20 bc 01 04 f2        ra = 444, jump @729
      :                          @1008 [@dyn 222]
 17047: 82 15 20                 s0 = u64 [sp + 0x20]
 17050: 82 1b 28                 a4 = u64 [sp + 0x28]
 17053: 82 16 18                 s1 = u64 [sp + 0x18]
 17056: 33 07 02                 a0 = 0x2
 17059: 33 08                    a1 = 0
 17061: 33 09                    a2 = 0
 17063: 64 5a                    a3 = s0
 17065: 33 00 be 01              ra = 0x1be
 17069: 0a 64                    ecalli 100 // 'log'
 17071: 01                       fallthrough
      :                          @1009 [@dyn 223]
 17072: 33 07 00 f0              a0 = 0xfffffffffffff000
 17076: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 17080: ac 78 23                 jump @1015 if a1 <u a0
      :                          @1010
 17083: 33 07 40 00 03           a0 = 0x30040
 17088: 95 77 00 10              a0 = a0 + 0x1000
 17092: 01                       fallthrough
      :                          @1011
 17093: 82 78                    a1 = u64 [a0]
 17095: c9 87 09                 a2 = a0 - a1
 17098: ab 59 11                 jump @1015 if a2 != s0
      :                          @1012
 17101: c9 68 09                 a2 = a1 - s1
 17104: 01                       fallthrough
      :                          @1013
 17105: 82 7a                    a3 = u64 [a0]
 17107: ab 8a f2                 jump @1011 if a3 != a1
      :                          @1014
 17110: 7b 79                    u64 [a0] = a2
 17112: 33 0b                    a4 = 0
 17114: 01                       fallthrough
      :                          @1015
 17115: 82 10 00 01              ra = u64 [sp + 0x100]
 17119: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 17123: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 17127: 95 11 08 01              sp = sp + 0x108
 17131: 32 00                    ret
      :                          @1016 [@dyn 224]
 17133: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 17136: 7b 10 28                 u64 [sp + 0x28] = ra
 17139: 7b 15 20                 u64 [sp + 0x20] = s0
 17142: 7b 16 18                 u64 [sp + 0x18] = s1
 17145: 64 86                    s1 = a1
 17147: 82 88 28                 a1 = u64 [a1 + 0x28]
 17150: 82 6a 20                 a3 = u64 [s1 + 0x20]
 17153: 82 8b 18                 a4 = u64 [a1 + 0x18]
 17156: 64 75                    s0 = a0
 17158: 33 08 58 06 01           a1 = 0x10658
 17163: 33 09 01                 a2 = 0x1
 17166: 64 a7                    a0 = a3
 17168: b4 b0 02 c2 01           ra = 450, jump [a4]
      :                          @1017 [@dyn 225]
 17173: 7b 16                    u64 [sp] = s1
 17175: 78 17 08                 u8 [sp + 0x8] = a0
 17178: 46 11 09                 u8 [sp + 9] = 0
 17181: 7b 15 10                 u64 [sp + 0x10] = s0
 17184: 33 09 c8 01              a2 = 0x1c8
 17188: 64 17                    a0 = sp
 17190: 95 18 10                 a1 = sp + 0x10
 17193: 50 20 c4 01 eb fc        ra = 452, jump @966
      :                          @1018 [@dyn 226]
 17199: 33 07 01                 a0 = 0x1
 17202: 7c 18 08                 a1 = u8 [sp + 0x8]
 17205: 52 08 1b                 jump @1020 if a1 != 0
      :                          @1019
 17208: 82 17                    a0 = u64 [sp]
 17210: 82 78 28                 a1 = u64 [a0 + 0x28]
 17213: 82 77 20                 a0 = u64 [a0 + 0x20]
 17216: 82 8a 18                 a3 = u64 [a1 + 0x18]
 17219: 33 08 76 06 01           a1 = 0x10676
 17224: 33 09 01                 a2 = 0x1
 17227: b4 a0 02 c6 01           ra = 454, jump [a3]
      :                          @1020 [@dyn 227]
 17232: 82 10 28                 ra = u64 [sp + 0x28]
 17235: 82 15 20                 s0 = u64 [sp + 0x20]
 17238: 82 16 18                 s1 = u64 [sp + 0x18]
 17241: 95 11 30                 sp = sp + 0x30
 17244: 32 00                    ret
      :                          @1021 [@dyn 228]
 17246: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 17250: 7b 10 80 00              u64 [sp + 0x80] = ra
 17254: 80 89 34                 a2 = u32 [a1 + 0x34]
 17257: 82 77                    a0 = u64 [a0]
 17259: 84 9a 10                 a3 = a2 & 0x10
 17262: 52 0a 16                 jump @1024 if a3 != 0
      :                          @1022
 17265: 84 99 20                 a2 = a2 & 0x20
 17268: 52 09 52                 jump @1028 if a2 != 0
      :                          @1023
 17271: 7c 77                    a0 = u8 [a0]
 17273: 82 10 80 00              ra = u64 [sp + 0x80]
 17277: 95 11 88 00              sp = sp + 0x88
 17281: 28 9a f4                 jump @812
      :                          @1024
 17284: 7c 77                    a0 = u8 [a0]
 17286: 33 0b 81 00              a4 = 0x81
 17290: 95 19 7f                 a2 = sp + 0x7f
 17293: 33 02 57                 t0 = 0x57
 17296: 01                       fallthrough
      :                          @1025
 17297: 64 bc                    a5 = a4
 17299: 84 7b 0f                 a4 = a0 & 0xf
 17302: 97 77 38                 a0 = a0 << 0x38
 17305: 98 77 3c                 a0 = a0 >> 0x3c
 17308: 88 b3 0a                 t1 = a4 <u 0xa
 17311: 33 0a 30                 a3 = 0x30
 17314: da 32 0a                 a3 = t0 if t1 == 0
 17317: be ba 0a                 i32 a3 = a3 + a4
 17320: 78 9a                    u8 [a2] = a3
 17322: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 17325: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 17328: 52 07 e1                 jump @1025 if a0 != 0
      :                          @1026
 17331: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 17334: 56 27 80 00 6b           jump @1034 if a0 >u 128
      :                          @1027
 17339: 9a bb 81 00              a4 = 0x81 - a4
 17343: 64 1a                    a3 = sp
 17345: c8 7a 0a                 a3 = a3 + a0
 17348: 28 43                    jump @1032
      :                          @1028
 17350: 7c 77                    a0 = u8 [a0]
 17352: 33 0b 81 00              a4 = 0x81
 17356: 95 19 7f                 a2 = sp + 0x7f
 17359: 33 02 37                 t0 = 0x37
 17362: 01                       fallthrough
      :                          @1029
 17363: 64 bc                    a5 = a4
 17365: 84 7b 0f                 a4 = a0 & 0xf
 17368: 97 77 38                 a0 = a0 << 0x38
 17371: 98 77 3c                 a0 = a0 >> 0x3c
 17374: 88 b3 0a                 t1 = a4 <u 0xa
 17377: 33 0a 30                 a3 = 0x30
 17380: da 32 0a                 a3 = t0 if t1 == 0
 17383: be ba 0a                 i32 a3 = a3 + a4
 17386: 78 9a                    u8 [a2] = a3
 17388: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 17391: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 17394: 52 07 e1                 jump @1029 if a0 != 0
      :                          @1030
 17397: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 17400: 56 27 80 00 29           jump @1034 if a0 >u 128
      :                          @1031
 17405: 9a bb 81 00              a4 = 0x81 - a4
 17409: 64 1a                    a3 = sp
 17411: c8 7a 0a                 a3 = a3 + a0
 17414: 01                       fallthrough
      :                          @1032
 17415: 33 09 02                 a2 = 0x2
 17418: 64 87                    a0 = a1
 17420: 33 08 77 06 01           a1 = 0x10677
 17425: 50 20 ca 01 27 f5        ra = 458, jump @822
      :                          @1033 [@dyn 229]
 17431: 82 10 80 00              ra = u64 [sp + 0x80]
 17435: 95 11 88 00              sp = sp + 0x88
 17439: 32 00                    ret
      :                          @1034
 17441: 00                       trap
