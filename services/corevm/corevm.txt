// RO data = 4496/4496 bytes
// RW data = 24/4144 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [138, 0, 255, 255, 162, 0, 255, 255, 180, 0, 255, 255, 198, 0, 255, 255, 222, 0, 255, 255, 246, 0, 255, 255, 12, 1, 255, 255, 24, 1, 255, 255, 36, 1, 255, 255, 54, 1, 255, 255, 0, 16, 0, 0, 0, 0, 0, 0, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 101, 120, 112, 117, 110, 103, 101, 32, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 32, 111, 117, 116, 112, 117, 116, 61, 247, 255, 255, 255, 255, 255, 255, 255, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 44, 32, 103, 111, 116, 32, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 102, 111, 111, 70, 101, 120, 112, 111, 114, 116, 32, 105, 61, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 91, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 40, 41, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 104, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 11, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 49, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 70, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 80, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 93, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 119, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 70, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 80, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 137, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 163, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 170, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 190, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 203, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 203, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 204, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 222, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 239, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 10, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 31, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 42, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 102, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 204, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 111, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 158, 2, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 184, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 204, 2, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 249, 2, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 16, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 36, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 56, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 184, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 85, 3, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 107, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 136, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 184, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 163, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 192, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 136, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 220, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 184, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 235, 3, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 9, 4, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 16, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 33, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 61, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 79, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 16, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 126, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 136, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 161, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 189, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 136, 3, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 184, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 209, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 224, 4, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 246, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 184, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 9, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 26, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 57, 5, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 138, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 83, 5, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 112, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 229, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 121, 5, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 16, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 26, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 148, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 203, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 0, 0, 166, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 174, 1, 0, 0, 0, 0, 0, 0, 178, 1, 0, 0, 0, 0, 0, 0, 37, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 54, 8, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5793
// Code size = 18195 bytes

      :                          @0
     0: 28 f8 04 00 00           jump @87
      :                          @1
     5: 28 f2 14 00 00           jump @269
      :                          @2
    10: 28 29 32                 jump @663
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 52                 jump @10 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 c3 37                 jump @803
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   101: 56 27 80 00 6a           jump @16 if a0 >u 128
      :                          @9
   106: 9a bb 81 00              a4 = 0x81 - a4
   110: 64 1a                    a3 = sp
   112: c8 7a 0a                 a3 = a3 + a0
   115: 28 43                    jump @14
      :                          @10
   117: 7c 77                    a0 = u8 [a0]
   119: 33 0b 81 00              a4 = 0x81
   123: 95 19 7f                 a2 = sp + 0x7f
   126: 33 02 37                 t0 = 0x37
   129: 01                       fallthrough
      :                          @11
   130: 64 bc                    a5 = a4
   132: 84 7b 0f                 a4 = a0 & 0xf
   135: 97 77 38                 a0 = a0 << 0x38
   138: 98 77 3c                 a0 = a0 >> 0x3c
   141: 88 b3 0a                 t1 = a4 <u 0xa
   144: 33 0a 30                 a3 = 0x30
   147: da 32 0a                 a3 = t0 if t1 == 0
   150: be ba 0a                 i32 a3 = a3 + a4
   153: 78 9a                    u8 [a2] = a3
   155: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   158: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   161: 52 07 e1                 jump @11 if a0 != 0
      :                          @12
   164: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   167: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   172: 9a bb 81 00              a4 = 0x81 - a4
   176: 64 1a                    a3 = sp
   178: c8 7a 0a                 a3 = a3 + a0
   181: 01                       fallthrough
      :                          @14
   182: 33 09 02                 a2 = 0x2
   185: 64 87                    a0 = a1
   187: 33 08 f7 05 01           a1 = 0x105f7
   192: 50 10 04 50 38           ra = 4, jump @813
      :                          @15 [@dyn 2]
   197: 82 10 80 00              ra = u64 [sp + 0x80]
   201: 95 11 88 00              sp = sp + 0x88
   205: 32 00                    ret
      :                          @16
   207: 00                       trap
      :                          @17 [@dyn 3]
   208: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   211: 7b 10 38                 u64 [sp + 0x38] = ra
   214: 7b 15 30                 u64 [sp + 0x30] = s0
   217: 7b 16 28                 u64 [sp + 0x28] = s1
   220: 7b 18 08                 u64 [sp + 0x8] = a1
   223: 82 89 28                 a2 = u64 [a1 + 0x28]
   226: 82 76                    s1 = u64 [a0]
   228: 82 75 08                 s0 = u64 [a0 + 0x8]
   231: 82 87 20                 a0 = u64 [a1 + 0x20]
   234: 82 9a 18                 a3 = u64 [a2 + 0x18]
   237: 33 08 f0 05 01           a1 = 0x105f0
   242: 33 09 01                 a2 = 0x1
   245: b4 a0 01 08              ra = 8, jump [a3]
      :                          @18 [@dyn 4]
   249: 82 18 08                 a1 = u64 [sp + 0x8]
   252: 7b 18 10                 u64 [sp + 0x10] = a1
   255: 78 17 18                 u8 [sp + 0x18] = a0
   258: 46 11 19                 u8 [sp + 25] = 0
   261: 51 05 2c                 jump @23 if s0 == 0
      :                          @19
   264: 33 07 02                 a0 = 0x2
   267: 7b 17                    u64 [sp] = a0
   269: 01                       fallthrough
      :                          @20
   270: 95 67 01                 a0 = s1 + 0x1
   273: 7b 17 08                 u64 [sp + 0x8] = a0
   276: 7b 16 20                 u64 [sp + 0x20] = s1
   279: 95 17 10                 a0 = sp + 0x10
   282: 95 18 20                 a1 = sp + 0x20
   285: 82 19                    a2 = u64 [sp]
   287: 50 10 0a ab 42           ra = 10, jump @1030
      :                          @21 [@dyn 5]
   292: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   295: 82 16 08                 s1 = u64 [sp + 0x8]
   298: 52 05 e4                 jump @20 if s0 != 0
      :                          @22
   301: 7c 17 18                 a0 = u8 [sp + 0x18]
   304: 01                       fallthrough
      :                          @23
   305: 33 08 01                 a1 = 0x1
   308: 52 07 1e                 jump @26 if a0 != 0
      :                          @24
   311: 82 17 10                 a0 = u64 [sp + 0x10]
   314: 82 78 28                 a1 = u64 [a0 + 0x28]
   317: 82 77 20                 a0 = u64 [a0 + 0x20]
   320: 82 8a 18                 a3 = u64 [a1 + 0x18]
   323: 33 08 f6 05 01           a1 = 0x105f6
   328: 33 09 01                 a2 = 0x1
   331: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @25 [@dyn 6]
   335: 64 78                    a1 = a0
   337: 01                       fallthrough
      :                          @26
   338: 64 87                    a0 = a1
   340: 82 10 38                 ra = u64 [sp + 0x38]
   343: 82 15 30                 s0 = u64 [sp + 0x30]
   346: 82 16 28                 s1 = u64 [sp + 0x28]
   349: 95 11 40                 sp = sp + 0x40
   352: 32 00                    ret
      :                          @27 [@dyn 7]
   354: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   358: 7b 10 80 00              u64 [sp + 0x80] = ra
   362: 80 89 34                 a2 = u32 [a1 + 0x34]
   365: 82 77                    a0 = u64 [a0]
   367: 84 9a 10                 a3 = a2 & 0x10
   370: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   373: 84 99 20                 a2 = a2 & 0x20
   376: 52 09 51                 jump @34 if a2 != 0
      :                          @29
   379: 82 77                    a0 = u64 [a0]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 28 6e 36                 jump @803
      :                          @30
   392: 82 7b                    a4 = u64 [a0]
   394: 33 09 81 00              a2 = 0x81
   398: 95 17 7f                 a0 = sp + 0x7f
   401: 33 02 57                 t0 = 0x57
   404: 01                       fallthrough
      :                          @31
   405: 64 9c                    a5 = a2
   407: 98 ba 04                 a3 = a4 >> 0x4
   410: 84 bb 0f                 a4 = a4 & 0xf
   413: 88 b3 0a                 t1 = a4 <u 0xa
   416: 33 09 30                 a2 = 0x30
   419: da 32 09                 a2 = t0 if t1 == 0
   422: be b9 09                 i32 a2 = a2 + a4
   425: 78 79                    u8 [a0] = a2
   427: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   430: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   433: 64 ab                    a4 = a3
   435: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   438: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   441: 56 27 80 00 69           jump @40 if a0 >u 128
      :                          @33
   446: 9a 9b 81 00              a4 = 0x81 - a2
   450: 64 1a                    a3 = sp
   452: c8 7a 0a                 a3 = a3 + a0
   455: 28 42                    jump @38
      :                          @34
   457: 82 7b                    a4 = u64 [a0]
   459: 33 09 81 00              a2 = 0x81
   463: 95 17 7f                 a0 = sp + 0x7f
   466: 33 02 37                 t0 = 0x37
   469: 01                       fallthrough
      :                          @35
   470: 64 9c                    a5 = a2
   472: 98 ba 04                 a3 = a4 >> 0x4
   475: 84 bb 0f                 a4 = a4 & 0xf
   478: 88 b3 0a                 t1 = a4 <u 0xa
   481: 33 09 30                 a2 = 0x30
   484: da 32 09                 a2 = t0 if t1 == 0
   487: be b9 09                 i32 a2 = a2 + a4
   490: 78 79                    u8 [a0] = a2
   492: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   495: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   498: 64 ab                    a4 = a3
   500: 52 0a e2                 jump @35 if a3 != 0
      :                          @36
   503: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   506: 56 27 80 00 28           jump @40 if a0 >u 128
      :                          @37
   511: 9a 9b 81 00              a4 = 0x81 - a2
   515: 64 1a                    a3 = sp
   517: c8 7a 0a                 a3 = a3 + a0
   520: 01                       fallthrough
      :                          @38
   521: 33 09 02                 a2 = 0x2
   524: 64 87                    a0 = a1
   526: 33 08 f7 05 01           a1 = 0x105f7
   531: 50 10 10 fd 36           ra = 16, jump @813
      :                          @39 [@dyn 8]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 32 00                    ret
      :                          @40
   546: 00                       trap
      :                          @41 [@dyn 9]
   547: 33 09 02                 a2 = 0x2
   550: 64 87                    a0 = a1
   552: 33 08 c1 06 01           a1 = 0x106c1
   557: 28 5c 39                 jump @865
      :                          @42 [@dyn 10]
   560: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   564: 7b 10 80 00              u64 [sp + 0x80] = ra
   568: 80 89 34                 a2 = u32 [a1 + 0x34]
   571: 84 9a 10                 a3 = a2 & 0x10
   574: 52 0a 16                 jump @45 if a3 != 0
      :                          @43
   577: 84 99 20                 a2 = a2 & 0x20
   580: 52 09 52                 jump @49 if a2 != 0
      :                          @44
   583: 7c 77                    a0 = u8 [a0]
   585: 82 10 80 00              ra = u64 [sp + 0x80]
   589: 95 11 88 00              sp = sp + 0x88
   593: 28 a2 35                 jump @803
      :                          @45
   596: 7c 77                    a0 = u8 [a0]
   598: 33 0b 81 00              a4 = 0x81
   602: 95 19 7f                 a2 = sp + 0x7f
   605: 33 02 57                 t0 = 0x57
   608: 01                       fallthrough
      :                          @46
   609: 64 bc                    a5 = a4
   611: 84 7b 0f                 a4 = a0 & 0xf
   614: 97 77 38                 a0 = a0 << 0x38
   617: 98 77 3c                 a0 = a0 >> 0x3c
   620: 88 b3 0a                 t1 = a4 <u 0xa
   623: 33 0a 30                 a3 = 0x30
   626: da 32 0a                 a3 = t0 if t1 == 0
   629: be ba 0a                 i32 a3 = a3 + a4
   632: 78 9a                    u8 [a2] = a3
   634: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   637: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   640: 52 07 e1                 jump @46 if a0 != 0
      :                          @47
   643: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   646: 56 27 80 00 6a           jump @55 if a0 >u 128
      :                          @48
   651: 9a bb 81 00              a4 = 0x81 - a4
   655: 64 1a                    a3 = sp
   657: c8 7a 0a                 a3 = a3 + a0
   660: 28 43                    jump @53
      :                          @49
   662: 7c 77                    a0 = u8 [a0]
   664: 33 0b 81 00              a4 = 0x81
   668: 95 19 7f                 a2 = sp + 0x7f
   671: 33 02 37                 t0 = 0x37
   674: 01                       fallthrough
      :                          @50
   675: 64 bc                    a5 = a4
   677: 84 7b 0f                 a4 = a0 & 0xf
   680: 97 77 38                 a0 = a0 << 0x38
   683: 98 77 3c                 a0 = a0 >> 0x3c
   686: 88 b3 0a                 t1 = a4 <u 0xa
   689: 33 0a 30                 a3 = 0x30
   692: da 32 0a                 a3 = t0 if t1 == 0
   695: be ba 0a                 i32 a3 = a3 + a4
   698: 78 9a                    u8 [a2] = a3
   700: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   703: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   706: 52 07 e1                 jump @50 if a0 != 0
      :                          @51
   709: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   712: 56 27 80 00 28           jump @55 if a0 >u 128
      :                          @52
   717: 9a bb 81 00              a4 = 0x81 - a4
   721: 64 1a                    a3 = sp
   723: c8 7a 0a                 a3 = a3 + a0
   726: 01                       fallthrough
      :                          @53
   727: 33 09 02                 a2 = 0x2
   730: 64 87                    a0 = a1
   732: 33 08 f7 05 01           a1 = 0x105f7
   737: 50 10 16 2f 36           ra = 22, jump @813
      :                          @54 [@dyn 11]
   742: 82 10 80 00              ra = u64 [sp + 0x80]
   746: 95 11 88 00              sp = sp + 0x88
   750: 32 00                    ret
      :                          @55
   752: 00                       trap
      :                          @56 [@dyn 12]
   753: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   757: 7b 10 80 00              u64 [sp + 0x80] = ra
   761: 80 89 34                 a2 = u32 [a1 + 0x34]
   764: 84 9a 10                 a3 = a2 & 0x10
   767: 52 0a 16                 jump @59 if a3 != 0
      :                          @57
   770: 84 99 20                 a2 = a2 & 0x20
   773: 52 09 51                 jump @63 if a2 != 0
      :                          @58
   776: 82 77                    a0 = u64 [a0]
   778: 82 10 80 00              ra = u64 [sp + 0x80]
   782: 95 11 88 00              sp = sp + 0x88
   786: 28 e1 34                 jump @803
      :                          @59
   789: 82 7b                    a4 = u64 [a0]
   791: 33 09 81 00              a2 = 0x81
   795: 95 17 7f                 a0 = sp + 0x7f
   798: 33 02 57                 t0 = 0x57
   801: 01                       fallthrough
      :                          @60
   802: 64 9c                    a5 = a2
   804: 98 ba 04                 a3 = a4 >> 0x4
   807: 84 bb 0f                 a4 = a4 & 0xf
   810: 88 b3 0a                 t1 = a4 <u 0xa
   813: 33 09 30                 a2 = 0x30
   816: da 32 09                 a2 = t0 if t1 == 0
   819: be b9 09                 i32 a2 = a2 + a4
   822: 78 79                    u8 [a0] = a2
   824: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   827: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   830: 64 ab                    a4 = a3
   832: 52 0a e2                 jump @60 if a3 != 0
      :                          @61
   835: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   838: 56 27 80 00 69           jump @69 if a0 >u 128
      :                          @62
   843: 9a 9b 81 00              a4 = 0x81 - a2
   847: 64 1a                    a3 = sp
   849: c8 7a 0a                 a3 = a3 + a0
   852: 28 42                    jump @67
      :                          @63
   854: 82 7b                    a4 = u64 [a0]
   856: 33 09 81 00              a2 = 0x81
   860: 95 17 7f                 a0 = sp + 0x7f
   863: 33 02 37                 t0 = 0x37
   866: 01                       fallthrough
      :                          @64
   867: 64 9c                    a5 = a2
   869: 98 ba 04                 a3 = a4 >> 0x4
   872: 84 bb 0f                 a4 = a4 & 0xf
   875: 88 b3 0a                 t1 = a4 <u 0xa
   878: 33 09 30                 a2 = 0x30
   881: da 32 09                 a2 = t0 if t1 == 0
   884: be b9 09                 i32 a2 = a2 + a4
   887: 78 79                    u8 [a0] = a2
   889: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   892: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   895: 64 ab                    a4 = a3
   897: 52 0a e2                 jump @64 if a3 != 0
      :                          @65
   900: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   903: 56 27 80 00 28           jump @69 if a0 >u 128
      :                          @66
   908: 9a 9b 81 00              a4 = 0x81 - a2
   912: 64 1a                    a3 = sp
   914: c8 7a 0a                 a3 = a3 + a0
   917: 01                       fallthrough
      :                          @67
   918: 33 09 02                 a2 = 0x2
   921: 64 87                    a0 = a1
   923: 33 08 f7 05 01           a1 = 0x105f7
   928: 50 10 1a 70 35           ra = 26, jump @813
      :                          @68 [@dyn 13]
   933: 82 10 80 00              ra = u64 [sp + 0x80]
   937: 95 11 88 00              sp = sp + 0x88
   941: 32 00                    ret
      :                          @69
   943: 00                       trap
      :                          @70 [@dyn 14]
   944: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   947: 7b 10 28                 u64 [sp + 0x28] = ra
   950: 7b 15 20                 u64 [sp + 0x20] = s0
   953: 7b 16 18                 u64 [sp + 0x18] = s1
   956: 64 85                    s0 = a1
   958: 82 88 28                 a1 = u64 [a1 + 0x28]
   961: 82 5a 20                 a3 = u64 [s0 + 0x20]
   964: 82 8b 18                 a4 = u64 [a1 + 0x18]
   967: 64 76                    s1 = a0
   969: 33 08 f0 05 01           a1 = 0x105f0
   974: 33 09 01                 a2 = 0x1
   977: 64 a7                    a0 = a3
   979: b4 b0 01 1e              ra = 30, jump [a4]
      :                          @71 [@dyn 15]
   983: 7b 15                    u64 [sp] = s0
   985: 78 17 08                 u8 [sp + 0x8] = a0
   988: 46 11 09                 u8 [sp + 9] = 0
   991: 7b 16 10                 u64 [sp + 0x10] = s1
   994: 33 05 0e                 s0 = 0xe
   997: 64 17                    a0 = sp
   999: 95 18 10                 a1 = sp + 0x10
  1002: 33 09 0e                 a2 = 0xe
  1005: 50 10 20 dd 3f           ra = 32, jump @1030
      :                          @72 [@dyn 16]
  1010: 95 67 08                 a0 = s1 + 0x8
  1013: 7b 17 10                 u64 [sp + 0x10] = a0
  1016: 64 17                    a0 = sp
  1018: 95 18 10                 a1 = sp + 0x10
  1021: 64 59                    a2 = s0
  1023: 50 10 22 cb 3f           ra = 34, jump @1030
      :                          @73 [@dyn 17]
  1028: 95 67 10                 a0 = s1 + 0x10
  1031: 7b 17 10                 u64 [sp + 0x10] = a0
  1034: 64 17                    a0 = sp
  1036: 95 18 10                 a1 = sp + 0x10
  1039: 64 59                    a2 = s0
  1041: 50 10 24 b9 3f           ra = 36, jump @1030
      :                          @74 [@dyn 18]
  1046: 95 67 18                 a0 = s1 + 0x18
  1049: 7b 17 10                 u64 [sp + 0x10] = a0
  1052: 64 17                    a0 = sp
  1054: 95 18 10                 a1 = sp + 0x10
  1057: 64 59                    a2 = s0
  1059: 50 10 26 a7 3f           ra = 38, jump @1030
      :                          @75 [@dyn 19]
  1064: 95 67 20                 a0 = s1 + 0x20
  1067: 7b 17 10                 u64 [sp + 0x10] = a0
  1070: 64 17                    a0 = sp
  1072: 95 18 10                 a1 = sp + 0x10
  1075: 64 59                    a2 = s0
  1077: 50 10 28 95 3f           ra = 40, jump @1030
      :                          @76 [@dyn 20]
  1082: 95 67 28                 a0 = s1 + 0x28
  1085: 7b 17 10                 u64 [sp + 0x10] = a0
  1088: 64 17                    a0 = sp
  1090: 95 18 10                 a1 = sp + 0x10
  1093: 64 59                    a2 = s0
  1095: 50 10 2a 83 3f           ra = 42, jump @1030
      :                          @77 [@dyn 21]
  1100: 95 67 30                 a0 = s1 + 0x30
  1103: 7b 17 10                 u64 [sp + 0x10] = a0
  1106: 64 17                    a0 = sp
  1108: 95 18 10                 a1 = sp + 0x10
  1111: 64 59                    a2 = s0
  1113: 50 10 2c 71 3f           ra = 44, jump @1030
      :                          @78 [@dyn 22]
  1118: 95 67 38                 a0 = s1 + 0x38
  1121: 7b 17 10                 u64 [sp + 0x10] = a0
  1124: 64 17                    a0 = sp
  1126: 95 18 10                 a1 = sp + 0x10
  1129: 64 59                    a2 = s0
  1131: 50 10 2e 5f 3f           ra = 46, jump @1030
      :                          @79 [@dyn 23]
  1136: 95 67 40                 a0 = s1 + 0x40
  1139: 7b 17 10                 u64 [sp + 0x10] = a0
  1142: 64 17                    a0 = sp
  1144: 95 18 10                 a1 = sp + 0x10
  1147: 64 59                    a2 = s0
  1149: 50 10 30 4d 3f           ra = 48, jump @1030
      :                          @80 [@dyn 24]
  1154: 95 67 48                 a0 = s1 + 0x48
  1157: 7b 17 10                 u64 [sp + 0x10] = a0
  1160: 64 17                    a0 = sp
  1162: 95 18 10                 a1 = sp + 0x10
  1165: 64 59                    a2 = s0
  1167: 50 10 32 3b 3f           ra = 50, jump @1030
      :                          @81 [@dyn 25]
  1172: 95 67 50                 a0 = s1 + 0x50
  1175: 7b 17 10                 u64 [sp + 0x10] = a0
  1178: 64 17                    a0 = sp
  1180: 95 18 10                 a1 = sp + 0x10
  1183: 64 59                    a2 = s0
  1185: 50 10 34 29 3f           ra = 52, jump @1030
      :                          @82 [@dyn 26]
  1190: 95 67 58                 a0 = s1 + 0x58
  1193: 7b 17 10                 u64 [sp + 0x10] = a0
  1196: 64 17                    a0 = sp
  1198: 95 18 10                 a1 = sp + 0x10
  1201: 64 59                    a2 = s0
  1203: 50 10 36 17 3f           ra = 54, jump @1030
      :                          @83 [@dyn 27]
  1208: 95 67 60                 a0 = s1 + 0x60
  1211: 7b 17 10                 u64 [sp + 0x10] = a0
  1214: 64 17                    a0 = sp
  1216: 95 18 10                 a1 = sp + 0x10
  1219: 64 59                    a2 = s0
  1221: 50 10 38 05 3f           ra = 56, jump @1030
      :                          @84 [@dyn 28]
  1226: 33 07 01                 a0 = 0x1
  1229: 7c 18 08                 a1 = u8 [sp + 0x8]
  1232: 52 08 1a                 jump @86 if a1 != 0
      :                          @85
  1235: 82 17                    a0 = u64 [sp]
  1237: 82 78 28                 a1 = u64 [a0 + 0x28]
  1240: 82 77 20                 a0 = u64 [a0 + 0x20]
  1243: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1246: 33 08 f6 05 01           a1 = 0x105f6
  1251: 33 09 01                 a2 = 0x1
  1254: b4 a0 01 3a              ra = 58, jump [a3]
      :                          @86 [@dyn 29]
  1258: 82 10 28                 ra = u64 [sp + 0x28]
  1261: 82 15 20                 s0 = u64 [sp + 0x20]
  1264: 82 16 18                 s1 = u64 [sp + 0x18]
  1267: 95 11 30                 sp = sp + 0x30
  1270: 32 00                    ret
      :                          @87 [export #0: 'refine']
  1272: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1276: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1280: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1284: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1288: 95 11 40 d4              sp = sp + 0xffffffffffffd440
  1292: 33 0a 00 00 01           a3 = 0x10000
  1297: 53 18 04 e5 00           jump @106 if a1 <u 4
      :                          @88
  1302: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1305: 51 0b dd 00              jump @106 if a4 == 0
      :                          @89
  1309: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1312: 80 7a                    a3 = u32 [a0]
  1314: 33 06 01                 s1 = 0x1
  1317: 59 08 3d                 jump @98 if a1 >=s 0
      :                          @90
  1320: 84 88 ff 00              a1 = a1 & 0xff
  1324: 33 06 02                 s1 = 0x2
  1327: 53 28 c0 00 2d           jump @96 if a1 <u 192
      :                          @91
  1332: 33 06 03                 s1 = 0x3
  1335: 53 28 e0 00 25           jump @96 if a1 <u 224
      :                          @92
  1340: 33 06 04                 s1 = 0x4
  1343: 53 28 f0 00 1d           jump @96 if a1 <u 240
      :                          @93
  1348: 33 06 05                 s1 = 0x5
  1351: 53 28 f8 00 15           jump @96 if a1 <u 248
      :                          @94
  1356: 33 06 06                 s1 = 0x6
  1359: 53 28 fc 00 0d           jump @96 if a1 <u 252
      :                          @95
  1364: 88 88 fe 00              a1 = a1 <u 0xfe
  1368: 9a 86 08                 s1 = 0x8 - a1
  1371: 01                       fallthrough
      :                          @96
  1372: ae 6b 06                 jump @98 if a4 >=u s1
      :                          @97
  1375: 28 97 0f                 jump @268
      :                          @98
  1378: 7b 1a 78                 u64 [sp + 0x78] = a3
  1381: 95 77 04                 a0 = a0 + 0x4
  1384: 64 68                    a1 = s1
  1386: 7b 1b 80 00              u64 [sp + 0x80] = a4
  1390: 50 10 3c 9b 3f           ra = 60, jump @1047
      :                          @99 [@dyn 30]
  1395: 64 75                    s0 = a0
  1397: 82 17 80 00              a0 = u64 [sp + 0x80]
  1401: e4 67 07                 a0 = maxu(a0, s1)
  1404: c9 67 07                 a0 = a0 - s1
  1407: d8 57 08                 a1 = a0 <u s0
  1410: e4 57 07                 a0 = maxu(a0, s0)
  1413: c9 57 07                 a0 = a0 - s0
  1416: 88 77 20                 a0 = a0 <u 0x20
  1419: d4 87 07                 a0 = a0 | a1
  1422: 52 07 5f                 jump @105 if a0 != 0
      :                          @100
  1425: 48 21 a8 00              u32 [sp + 168] = 0
  1429: 49 21 a0 00              u64 [sp + 160] = 0
  1433: 49 21 98 00              u64 [sp + 152] = 0
  1437: 49 21 90 00              u64 [sp + 144] = 0
  1441: 49 21 88 00              u64 [sp + 136] = 0
  1445: 95 17 88 00              a0 = sp + 0x88
  1449: 33 09 24                 a2 = 0x24
  1452: 33 0a 03                 a3 = 0x3
  1455: 33 08                    a1 = 0
  1457: 33 0b                    a4 = 0
  1459: 33 0c                    a5 = 0
  1461: 0a 12                    ecalli 18 // 'fetch'
  1463: 01                       fallthrough
      :                          @101
  1464: 95 1a 88 00              a3 = sp + 0x88
  1468: 33 08 24                 a1 = 0x24
  1471: 53 15 08 3a              jump @107 if s0 <u 8
      :                          @102
  1475: 95 17 b0 00              a0 = sp + 0xb0
  1479: 33 09 00 20              a2 = 0x2000
  1483: 33 08                    a1 = 0
  1485: 50 10 3e c7 31           ra = 62, jump @788
      :                          @103 [@dyn 31]
  1490: 95 18 88 00              a1 = sp + 0x88
  1494: 95 19 b0 00              a2 = sp + 0xb0
  1498: 33 0b 00 20              a4 = 0x2000
  1502: 82 17 78                 a0 = u64 [sp + 0x78]
  1505: 33 0a                    a3 = 0
  1507: 0a 11                    ecalli 17 // 'historical_lookup'
  1509: 01                       fallthrough
      :                          @104
  1510: 95 78 01                 a1 = a0 + 0x1
  1513: 55 18 04 2b              jump @108 if a1 >=u 4
      :                          @105
  1517: 33 08                    a1 = 0
  1519: 33 0a 00 00 01           a3 = 0x10000
  1524: 28 05                    jump @107
      :                          @106
  1526: 33 08                    a1 = 0
  1528: 01                       fallthrough
      :                          @107
  1529: 64 a7                    a0 = a3
  1531: 33 09 c0 2b              a2 = 0x2bc0
  1535: c8 91 01                 sp = sp + a2
  1538: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1542: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1546: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1550: 95 11 f8 07              sp = sp + 0x7f8
  1554: 32 00                    ret
      :                          @108
  1556: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1559: 53 18 03 d6              jump @105 if a1 <u 3
      :                          @109
  1563: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1566: 51 18 06 cf              jump @105 if a1 == 6
      :                          @110
  1570: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1573: 53 18 03 c8              jump @105 if a1 <u 3
      :                          @111
  1577: 7c 18 b2 00              a1 = u8 [sp + 0xb2]
  1581: 7c 19 b1 00              a2 = u8 [sp + 0xb1]
  1585: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
  1589: 97 88 10                 a1 = a1 << 0x10
  1592: 97 99 08                 a2 = a2 << 0x8
  1595: d4 98 08                 a1 = a1 | a2
  1598: d4 a8 08                 a1 = a1 | a3
  1601: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1604: ac 89 a9                 jump @105 if a2 <u a1
      :                          @112
  1607: 7c 17 b5 00              a0 = u8 [sp + 0xb5]
  1611: 7c 1a b4 00              a3 = u8 [sp + 0xb4]
  1615: 7c 1b b3 00              a4 = u8 [sp + 0xb3]
  1619: 97 77 10                 a0 = a0 << 0x10
  1622: 97 aa 08                 a3 = a3 << 0x8
  1625: d4 a7 07                 a0 = a0 | a3
  1628: d4 b7 07                 a0 = a0 | a4
  1631: c9 89 09                 a2 = a2 - a1
  1634: ac 79 8b                 jump @105 if a2 <u a0
      :                          @113
  1637: c9 79 06                 s1 = a2 - a0
  1640: 53 16 04 85              jump @105 if s1 <u 4
      :                          @114
  1644: 95 12 bb 00              t0 = sp + 0xbb
  1648: c8 28 03                 t1 = a1 + t0
  1651: c8 37 0b                 a4 = a0 + t1
  1654: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1657: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1660: 7c ba                    a3 = u8 [a4]
  1662: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1665: 97 cc 10                 a5 = a5 << 0x10
  1668: 97 55 08                 s0 = s0 << 0x8
  1671: d4 5c 0c                 a5 = a5 | s0
  1674: d4 c9 09                 a2 = a2 | a5
  1677: 97 99 08                 a2 = a2 << 0x8
  1680: d4 a9 0c                 a5 = a2 | a3
  1683: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1686: ac c6 57 ff              jump @105 if s1 <u a5
      :                          @115
  1690: 7c 19 b7 00              a2 = u8 [sp + 0xb7]
  1694: 95 1a b0 20              a3 = sp + 0x20b0
  1698: 7c 14 b6 00              t2 = u8 [sp + 0xb6]
  1702: 97 99 08                 a2 = a2 << 0x8
  1705: 7c 16 ba 00              s1 = u8 [sp + 0xba]
  1709: 7c 15 b9 00              s0 = u8 [sp + 0xb9]
  1713: d4 49 04                 t2 = a2 | t2
  1716: 7c 19 b8 00              a2 = u8 [sp + 0xb8]
  1720: 97 66 10                 s1 = s1 << 0x10
  1723: 97 55 08                 s0 = s0 << 0x8
  1726: d4 65 05                 s0 = s0 | s1
  1729: d4 59 09                 a2 = a2 | s0
  1732: 33 05 ff ef              s0 = 0xffffffffffffefff
  1736: 7b 15 80 00              u64 [sp + 0x80] = s0
  1740: 95 bb 04                 a4 = a4 + 0x4
  1743: 7b a4                    u64 [a3] = t2
  1745: 7b a9 08                 u64 [a3 + 0x8] = a2
  1748: 7b a2 10                 u64 [a3 + 0x10] = t0
  1751: 7b a8 18                 u64 [a3 + 0x18] = a1
  1754: 7b a3 20                 u64 [a3 + 0x20] = t1
  1757: 7b a7 28                 u64 [a3 + 0x28] = a0
  1760: 7b ab 30                 u64 [a3 + 0x30] = a4
  1763: 7b ac 38                 u64 [a3 + 0x38] = a5
  1766: 7b aa 50                 u64 [a3 + 0x50] = a3
  1769: 33 08 18                 a1 = 0x18
  1772: 7b a8 58                 u64 [a3 + 0x58] = a1
  1775: 95 17 b8 20              a0 = sp + 0x20b8
  1779: 7b a7 60                 u64 [a3 + 0x60] = a0
  1782: 7b a8 68                 u64 [a3 + 0x68] = a1
  1785: 95 17 c0 20              a0 = sp + 0x20c0
  1789: 7b a7 70                 u64 [a3 + 0x70] = a0
  1792: 7b a8 78                 u64 [a3 + 0x78] = a1
  1795: 95 17 c8 20              a0 = sp + 0x20c8
  1799: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1803: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1807: 95 17 d0 20              a0 = sp + 0x20d0
  1811: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1815: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1819: 95 17 d8 20              a0 = sp + 0x20d8
  1823: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1827: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1831: 95 17 e0 20              a0 = sp + 0x20e0
  1835: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1839: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1843: 95 17 e8 20              a0 = sp + 0x20e8
  1847: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1851: 7b 18 78                 u64 [sp + 0x78] = a1
  1854: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1858: 33 07 40 08 01           a0 = 0x10840
  1863: 95 16 08 31              s1 = sp + 0x3108
  1867: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1871: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1876: 49 26 68 01              u64 [s1 + 360] = 0
  1880: 95 18 00 21              a1 = sp + 0x2100
  1884: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1888: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1893: 95 17 98 31              a0 = sp + 0x3198
  1897: 95 18 50 32              a1 = sp + 0x3250
  1901: 50 10 40 00 2d           ra = 64, jump @720
      :                          @116 [@dyn 32]
  1906: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1910: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1914: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1918: 33 07 02                 a0 = 0x2
  1921: 33 08                    a1 = 0
  1923: 33 09                    a2 = 0
  1925: 64 5a                    a3 = s0
  1927: 33 00 42                 ra = 0x42
  1930: 0a 64                    ecalli 100 // 'log'
  1932: 01                       fallthrough
      :                          @117 [@dyn 33]
  1933: 82 17 80 00              a0 = u64 [sp + 0x80]
  1937: c8 67 07                 a0 = a0 + s1
  1940: 33 0c 20 00 03           a5 = 0x30020
  1945: 53 27 00 f0 1e           jump @123 if a0 <u 4294963200
      :                          @118
  1950: 95 c7 00 10              a0 = a5 + 0x1000
  1954: 01                       fallthrough
      :                          @119
  1955: 82 78                    a1 = u64 [a0]
  1957: c9 87 09                 a2 = a0 - a1
  1960: ab 59 0f                 jump @123 if a2 != s0
      :                          @120
  1963: c9 68 09                 a2 = a1 - s1
  1966: 01                       fallthrough
      :                          @121
  1967: 82 7a                    a3 = u64 [a0]
  1969: ab 8a f2                 jump @119 if a3 != a1
      :                          @122
  1972: 7b 79                    u64 [a0] = a2
  1974: 01                       fallthrough
      :                          @123
  1975: 7b 1c 70                 u64 [sp + 0x70] = a5
  1978: 0a                       ecalli 0 // 'gas'
  1979: 95 18 b0 20              a1 = sp + 0x20b0
  1983: 7b 87 40                 u64 [a1 + 0x40] = a0
  1986: 95 17 f0 20              a0 = sp + 0x20f0
  1990: 95 16 08 31              s1 = sp + 0x3108
  1994: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1998: 82 17 78                 a0 = u64 [sp + 0x78]
  2001: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2005: 33 07 c0 08 01           a0 = 0x108c0
  2010: 7b 17 28                 u64 [sp + 0x28] = a0
  2013: 7b 87 50                 u64 [a1 + 0x50] = a0
  2016: 95 17 98 31              a0 = sp + 0x3198
  2020: 7b 87 60                 u64 [a1 + 0x60] = a0
  2023: 49 18 58 01              u64 [a1 + 88] = 0x1
  2027: 49 18 70                 u64 [a1 + 112] = 0
  2030: 49 18 68 01              u64 [a1 + 104] = 0x1
  2034: 95 17 50 32              a0 = sp + 0x3250
  2038: 95 18 00 21              a1 = sp + 0x2100
  2042: 50 10 44 73 2c           ra = 68, jump @720
      :                          @124 [@dyn 34]
  2047: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2051: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2055: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2059: 33 07 02                 a0 = 0x2
  2062: 33 08                    a1 = 0
  2064: 33 09                    a2 = 0
  2066: 64 5a                    a3 = s0
  2068: 33 00 46                 ra = 0x46
  2071: 0a 64                    ecalli 100 // 'log'
  2073: 01                       fallthrough
      :                          @125 [@dyn 35]
  2074: 82 17 80 00              a0 = u64 [sp + 0x80]
  2078: c8 67 07                 a0 = a0 + s1
  2081: 53 27 00 f0 21           jump @131 if a0 <u 4294963200
      :                          @126
  2086: 82 18 70                 a1 = u64 [sp + 0x70]
  2089: 95 87 00 10              a0 = a1 + 0x1000
  2093: 01                       fallthrough
      :                          @127
  2094: 82 78                    a1 = u64 [a0]
  2096: c9 87 09                 a2 = a0 - a1
  2099: ab 59 0f                 jump @131 if a2 != s0
      :                          @128
  2102: c9 68 09                 a2 = a1 - s1
  2105: 01                       fallthrough
      :                          @129
  2106: 82 7a                    a3 = u64 [a0]
  2108: ab 8a f2                 jump @127 if a3 != a1
      :                          @130
  2111: 7b 79                    u64 [a0] = a2
  2113: 01                       fallthrough
      :                          @131
  2114: 95 15 b0 20              s0 = sp + 0x20b0
  2118: 82 57 30                 a0 = u64 [s0 + 0x30]
  2121: 82 58 38                 a1 = u64 [s0 + 0x38]
  2124: 33 09                    a2 = 0
  2126: 0a 14                    ecalli 20 // 'machine'
  2128: 7b 57 48                 u64 [s0 + 0x48] = a0
  2131: 95 17 f8 20              a0 = sp + 0x20f8
  2135: 95 16 08 31              s1 = sp + 0x3108
  2139: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2143: 33 07 d0 08 01           a0 = 0x108d0
  2148: 7b 57 50                 u64 [s0 + 0x50] = a0
  2151: 95 17 98 31              a0 = sp + 0x3198
  2155: 7b 57 60                 u64 [s0 + 0x60] = a0
  2158: 49 15 58 01              u64 [s0 + 88] = 0x1
  2162: 49 15 68 01              u64 [s0 + 104] = 0x1
  2166: 82 17 78                 a0 = u64 [sp + 0x78]
  2169: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2173: 49 15 70                 u64 [s0 + 112] = 0
  2176: 95 17 50 32              a0 = sp + 0x3250
  2180: 95 18 00 21              a1 = sp + 0x2100
  2184: 50 10 48 e5 2b           ra = 72, jump @720
      :                          @132 [@dyn 36]
  2189: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2193: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2197: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2201: 33 07 02                 a0 = 0x2
  2204: 33 08                    a1 = 0
  2206: 33 09                    a2 = 0
  2208: 64 5a                    a3 = s0
  2210: 33 00 4a                 ra = 0x4a
  2213: 0a 64                    ecalli 100 // 'log'
  2215: 01                       fallthrough
      :                          @133 [@dyn 37]
  2216: 82 17 80 00              a0 = u64 [sp + 0x80]
  2220: c8 67 07                 a0 = a0 + s1
  2223: 53 27 00 f0 21           jump @139 if a0 <u 4294963200
      :                          @134
  2228: 82 18 70                 a1 = u64 [sp + 0x70]
  2231: 95 87 00 10              a0 = a1 + 0x1000
  2235: 01                       fallthrough
      :                          @135
  2236: 82 78                    a1 = u64 [a0]
  2238: c9 87 09                 a2 = a0 - a1
  2241: ab 59 0f                 jump @139 if a2 != s0
      :                          @136
  2244: c9 68 09                 a2 = a1 - s1
  2247: 01                       fallthrough
      :                          @137
  2248: 82 7a                    a3 = u64 [a0]
  2250: ab 8a f2                 jump @135 if a3 != a1
      :                          @138
  2253: 7b 79                    u64 [a0] = a2
  2255: 01                       fallthrough
      :                          @139
  2256: 95 19 b0 20              a2 = sp + 0x20b0
  2260: 82 97                    a0 = u64 [a2]
  2262: 7b 17 58                 u64 [sp + 0x58] = a0
  2265: 82 97 08                 a0 = u64 [a2 + 0x8]
  2268: 7b 17 50                 u64 [sp + 0x50] = a0
  2271: 82 97 10                 a0 = u64 [a2 + 0x10]
  2274: 7b 17 48                 u64 [sp + 0x48] = a0
  2277: 82 95 18                 s0 = u64 [a2 + 0x18]
  2280: 82 98 20                 a1 = u64 [a2 + 0x20]
  2283: 7b 18 40                 u64 [sp + 0x40] = a1
  2286: 80 97 48                 a0 = u32 [a2 + 0x48]
  2289: 82 96 28                 s1 = u64 [a2 + 0x28]
  2292: 49 11 60 ff 0f           u64 [sp + 96] = 0xfff
  2297: 95 59 ff 0f              a2 = s0 + 0xfff
  2301: 98 99 0c                 a2 = a2 >> 0xc
  2304: 33 08 10                 a1 = 0x10
  2307: 7b 17 68                 u64 [sp + 0x68] = a0
  2310: 0a 17                    ecalli 23 // 'zero'
  2312: 01                       fallthrough
      :                          @140
  2313: 51 07 17                 jump @142 if a0 == 0
      :                          @141
  2316: 33 0a e7 07 01           a3 = 0x107e7
  2321: 33 07 02                 a0 = 0x2
  2324: 33 0b 3e                 a4 = 0x3e
  2327: 33 08                    a1 = 0
  2329: 33 09                    a2 = 0
  2331: 0a 64                    ecalli 100 // 'log'
  2333: 28 e0 00                 jump @155
      :                          @142
  2336: 7b 16 38                 u64 [sp + 0x38] = s1
  2339: 82 17 60                 a0 = u64 [sp + 0x60]
  2342: c8 67 07                 a0 = a0 + s1
  2345: 98 77 0c                 a0 = a0 >> 0xc
  2348: 82 19 58                 a2 = u64 [sp + 0x58]
  2351: c8 79 09                 a2 = a2 + a0
  2354: 7b 15 58                 u64 [sp + 0x58] = s0
  2357: 95 57 ff ff 00           a0 = s0 + 0xffff
  2362: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2367: 95 75 00 00 02           s0 = a0 + 0x20000
  2372: 98 58 0c                 a1 = s0 >> 0xc
  2375: 82 17 68                 a0 = u64 [sp + 0x68]
  2378: 0a 17                    ecalli 23 // 'zero'
  2380: 01                       fallthrough
      :                          @143
  2381: 51 07 17                 jump @145 if a0 == 0
      :                          @144
  2384: 33 0a a9 07 01           a3 = 0x107a9
  2389: 33 07 02                 a0 = 0x2
  2392: 33 0b 3e                 a4 = 0x3e
  2395: 33 08                    a1 = 0
  2397: 33 09                    a2 = 0
  2399: 0a 64                    ecalli 100 // 'log'
  2401: 28 9c 00                 jump @155
      :                          @145
  2404: 82 16 60                 s1 = u64 [sp + 0x60]
  2407: 82 17 50                 a0 = u64 [sp + 0x50]
  2410: c8 76 06                 s1 = s1 + a0
  2413: 98 69 0c                 a2 = s1 >> 0xc
  2416: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2420: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2430: c9 78 08                 a1 = a1 - a0
  2433: 98 88 0c                 a1 = a1 >> 0xc
  2436: 82 17 68                 a0 = u64 [sp + 0x68]
  2439: 0a 17                    ecalli 23 // 'zero'
  2441: 01                       fallthrough
      :                          @146
  2442: 51 07 16                 jump @148 if a0 == 0
      :                          @147
  2445: 33 0a 6d 07 01           a3 = 0x1076d
  2450: 33 07 02                 a0 = 0x2
  2453: 33 0b 3c                 a4 = 0x3c
  2456: 33 08                    a1 = 0
  2458: 33 09                    a2 = 0
  2460: 0a 64                    ecalli 100 // 'log'
  2462: 28 5f                    jump @155
      :                          @148
  2464: 33 09 00 00 01           a2 = 0x10000
  2469: 82 17 68                 a0 = u64 [sp + 0x68]
  2472: 82 18 48                 a1 = u64 [sp + 0x48]
  2475: 82 1a 58                 a3 = u64 [sp + 0x58]
  2478: 0a 16                    ecalli 22 // 'poke'
  2480: 01                       fallthrough
      :                          @149
  2481: 51 07 16                 jump @151 if a0 == 0
      :                          @150
  2484: 33 0a 2f 07 01           a3 = 0x1072f
  2489: 33 07 02                 a0 = 0x2
  2492: 33 0b 3e                 a4 = 0x3e
  2495: 33 08                    a1 = 0
  2497: 33 09                    a2 = 0
  2499: 0a 64                    ecalli 100 // 'log'
  2501: 28 38                    jump @155
      :                          @151
  2503: 82 17 68                 a0 = u64 [sp + 0x68]
  2506: 82 18 40                 a1 = u64 [sp + 0x40]
  2509: 64 59                    a2 = s0
  2511: 82 1a 38                 a3 = u64 [sp + 0x38]
  2514: 0a 16                    ecalli 22 // 'poke'
  2516: 01                       fallthrough
      :                          @152
  2517: 51 07 16                 jump @154 if a0 == 0
      :                          @153
  2520: 33 0a f1 06 01           a3 = 0x106f1
  2525: 33 07 02                 a0 = 0x2
  2528: 33 0b 3e                 a4 = 0x3e
  2531: 33 08                    a1 = 0
  2533: 33 09                    a2 = 0
  2535: 0a 64                    ecalli 100 // 'log'
  2537: 28 14                    jump @155
      :                          @154
  2539: 33 0a c3 06 01           a3 = 0x106c3
  2544: 33 07 02                 a0 = 0x2
  2547: 33 0b 2e                 a4 = 0x2e
  2550: 33 08                    a1 = 0
  2552: 33 09                    a2 = 0
  2554: 0a 64                    ecalli 100 // 'log'
  2556: 01                       fallthrough
      :                          @155
  2557: 95 16 08 31              s1 = sp + 0x3108
  2561: 33 05 08 10              s0 = 0x1008
  2565: 95 17 00 21              a0 = sp + 0x2100
  2569: 33 08                    a1 = 0
  2571: 33 09 08 10              a2 = 0x1008
  2575: 50 10 4c 85 2d           ra = 76, jump @788
      :                          @156 [@dyn 38]
  2580: 49 06                    u64 [s1 + 0] = 0
  2582: 95 17 08 21              a0 = sp + 0x2108
  2586: 7b 67 08                 u64 [s1 + 0x8] = a0
  2589: 49 16 10                 u64 [s1 + 16] = 0
  2592: 49 16 18                 u64 [s1 + 24] = 0
  2595: 95 17 00 21              a0 = sp + 0x2100
  2599: 33 0a 06                 a3 = 0x6
  2602: 33 08                    a1 = 0
  2604: 7b 15 68                 u64 [sp + 0x68] = s0
  2607: 64 59                    a2 = s0
  2609: 33 0b                    a4 = 0
  2611: 33 0c                    a5 = 0
  2613: 0a 12                    ecalli 18 // 'fetch'
  2615: 01                       fallthrough
      :                          @157
  2616: 7b 67 60 02              u64 [s1 + 0x260] = a0
  2620: 33 08 28 00 01           a1 = 0x10028
  2625: 7b 18 58                 u64 [sp + 0x58] = a1
  2628: 51 17 ff 56 02           jump @184 if a0 == 4294967295
      :                          @158
  2633: 33 07 e0 08 01           a0 = 0x108e0
  2638: 7b 17 60                 u64 [sp + 0x60] = a0
  2641: 33 07 00 09 01           a0 = 0x10900
  2646: 7b 17 50                 u64 [sp + 0x50] = a0
  2649: 33 07 30 09 01           a0 = 0x10930
  2654: 7b 17 48                 u64 [sp + 0x48] = a0
  2657: 28 27                    jump @161
      :                          @159
  2659: 95 16 08 31              s1 = sp + 0x3108
  2663: 82 6b                    a4 = u64 [s1]
  2665: 95 bb 01                 a4 = a4 + 0x1
  2668: 7b 6b                    u64 [s1] = a4
  2670: 95 17 00 21              a0 = sp + 0x2100
  2674: 33 0a 06                 a3 = 0x6
  2677: 33 08                    a1 = 0
  2679: 82 19 68                 a2 = u64 [sp + 0x68]
  2682: 33 0c                    a5 = 0
  2684: 0a 12                    ecalli 18 // 'fetch'
  2686: 01                       fallthrough
      :                          @160
  2687: 7b 67 60 02              u64 [s1 + 0x260] = a0
  2691: 51 17 ff 17 02           jump @184 if a0 == 4294967295
      :                          @161
  2696: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2700: 82 17 78                 a0 = u64 [sp + 0x78]
  2703: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2707: 95 18 68 33              a1 = sp + 0x3368
  2711: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2715: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2719: 82 17 60                 a0 = u64 [sp + 0x60]
  2722: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2726: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2731: 49 26 68 01              u64 [s1 + 360] = 0
  2735: 95 18 98 31              a1 = sp + 0x3198
  2739: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2743: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2748: 95 17 30 31              a0 = sp + 0x3130
  2752: 95 18 50 32              a1 = sp + 0x3250
  2756: 50 10 4e a9 29           ra = 78, jump @720
      :                          @162 [@dyn 39]
  2761: 95 17 08 31              a0 = sp + 0x3108
  2765: 82 76 30                 s1 = u64 [a0 + 0x30]
  2768: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2771: 82 75 28                 s0 = u64 [a0 + 0x28]
  2774: 33 07 02                 a0 = 0x2
  2777: 33 08                    a1 = 0
  2779: 33 09                    a2 = 0
  2781: 64 6a                    a3 = s1
  2783: 33 00 50                 ra = 0x50
  2786: 0a 64                    ecalli 100 // 'log'
  2788: 01                       fallthrough
      :                          @163 [@dyn 40]
  2789: 82 17 80 00              a0 = u64 [sp + 0x80]
  2793: c8 57 07                 a0 = a0 + s0
  2796: 82 1c 70                 a5 = u64 [sp + 0x70]
  2799: 33 02 00 10              t0 = 0x1000
  2803: 53 27 00 f0 1c           jump @168 if a0 <u 4294963200
      :                          @164
  2808: c8 2c 08                 a1 = a5 + t0
  2811: 82 87                    a0 = u64 [a1]
  2813: c9 78 09                 a2 = a1 - a0
  2816: ab 69 0f                 jump @168 if a2 != s1
      :                          @165
  2819: c9 57 09                 a2 = a0 - s0
  2822: 01                       fallthrough
      :                          @166
  2823: 82 8a                    a3 = u64 [a1]
  2825: ab 7a ef                 jump @164 if a3 != a0
      :                          @167
  2828: 7b 89                    u64 [a1] = a2
  2830: 01                       fallthrough
      :                          @168
  2831: 95 18 b0 20              a1 = sp + 0x20b0
  2835: 80 87 50                 a0 = u32 [a1 + 0x50]
  2838: 80 88 54                 a1 = u32 [a1 + 0x54]
  2841: 95 15 08 31              s0 = sp + 0x3108
  2845: 7b 57 10                 u64 [s0 + 0x10] = a0
  2848: 7b 58 18                 u64 [s0 + 0x18] = a1
  2851: 33 09 01                 a2 = 0x1
  2854: 0a 17                    ecalli 23 // 'zero'
  2856: 7b 57 48 02              u64 [s0 + 0x248] = a0
  2860: 95 17 18 31              a0 = sp + 0x3118
  2864: 7b 57 48 01              u64 [s0 + 0x148] = a0
  2868: 82 17 78                 a0 = u64 [sp + 0x78]
  2871: 7b 57 50 01              u64 [s0 + 0x150] = a0
  2875: 95 18 20 31              a1 = sp + 0x3120
  2879: 7b 58 58 01              u64 [s0 + 0x158] = a1
  2883: 7b 57 60 01              u64 [s0 + 0x160] = a0
  2887: 95 18 50 33              a1 = sp + 0x3350
  2891: 7b 58 68 01              u64 [s0 + 0x168] = a1
  2895: 7b 57 70 01              u64 [s0 + 0x170] = a0
  2899: 82 17 50                 a0 = u64 [sp + 0x50]
  2902: 7b 57 90 00              u64 [s0 + 0x90] = a0
  2906: 49 25 98 00 03           u64 [s0 + 152] = 0x3
  2911: 49 25 b0 00              u64 [s0 + 176] = 0
  2915: 95 17 50 32              a0 = sp + 0x3250
  2919: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  2923: 49 25 a8 00 03           u64 [s0 + 168] = 0x3
  2928: 95 17 30 31              a0 = sp + 0x3130
  2932: 95 18 98 31              a1 = sp + 0x3198
  2936: 50 10 52 f5 28           ra = 82, jump @720
      :                          @169 [@dyn 41]
  2941: 82 56 30                 s1 = u64 [s0 + 0x30]
  2944: 82 5b 38                 a4 = u64 [s0 + 0x38]
  2947: 82 55 28                 s0 = u64 [s0 + 0x28]
  2950: 33 07 02                 a0 = 0x2
  2953: 33 08                    a1 = 0
  2955: 33 09                    a2 = 0
  2957: 64 6a                    a3 = s1
  2959: 33 00 54                 ra = 0x54
  2962: 0a 64                    ecalli 100 // 'log'
  2964: 01                       fallthrough
      :                          @170 [@dyn 42]
  2965: 33 02 00 10              t0 = 0x1000
  2969: 82 1c 70                 a5 = u64 [sp + 0x70]
  2972: 82 17 80 00              a0 = u64 [sp + 0x80]
  2976: c8 57 07                 a0 = a0 + s0
  2979: 53 27 00 f0 1c           jump @175 if a0 <u 4294963200
      :                          @171
  2984: c8 2c 08                 a1 = a5 + t0
  2987: 82 87                    a0 = u64 [a1]
  2989: c9 78 09                 a2 = a1 - a0
  2992: ab 69 0f                 jump @175 if a2 != s1
      :                          @172
  2995: c9 57 09                 a2 = a0 - s0
  2998: 01                       fallthrough
      :                          @173
  2999: 82 8a                    a3 = u64 [a1]
  3001: ab 7a ef                 jump @171 if a3 != a0
      :                          @174
  3004: 7b 89                    u64 [a1] = a2
  3006: 01                       fallthrough
      :                          @175
  3007: 95 15 08 31              s0 = sp + 0x3108
  3011: 82 59 18                 a2 = u64 [s0 + 0x18]
  3014: 82 57 10                 a0 = u64 [s0 + 0x10]
  3017: 95 18 00 21              a1 = sp + 0x2100
  3021: 7b 58 68 02              u64 [s0 + 0x268] = a1
  3025: 97 99 0c                 a2 = a2 << 0xc
  3028: 7b 59 78 02              u64 [s0 + 0x278] = a2
  3032: 33 0a 00 10              a3 = 0x1000
  3036: 95 18 08 21              a1 = sp + 0x2108
  3040: 0a 16                    ecalli 22 // 'poke'
  3042: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3046: 95 17 18 31              a0 = sp + 0x3118
  3050: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3054: 82 17 78                 a0 = u64 [sp + 0x78]
  3057: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3061: 95 18 70 33              a1 = sp + 0x3370
  3065: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3069: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3073: 95 18 80 33              a1 = sp + 0x3380
  3077: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3081: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3085: 82 18 58                 a1 = u64 [sp + 0x58]
  3088: 7b 58 78 01              u64 [s0 + 0x178] = a1
  3092: 7b 57 80 01              u64 [s0 + 0x180] = a0
  3096: 95 18 10 32              a1 = sp + 0x3210
  3100: 7b 58 88 01              u64 [s0 + 0x188] = a1
  3104: 7b 57 90 01              u64 [s0 + 0x190] = a0
  3108: 82 17 48                 a0 = u64 [sp + 0x48]
  3111: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3115: 49 25 98 00 05           u64 [s0 + 152] = 0x5
  3120: 49 25 b0 00              u64 [s0 + 176] = 0
  3124: 95 17 50 32              a0 = sp + 0x3250
  3128: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  3132: 49 25 a8 00 05           u64 [s0 + 168] = 0x5
  3137: 95 17 30 31              a0 = sp + 0x3130
  3141: 95 18 98 31              a1 = sp + 0x3198
  3145: 50 10 56 24 28           ra = 86, jump @720
      :                          @176 [@dyn 43]
  3150: 82 56 30                 s1 = u64 [s0 + 0x30]
  3153: 82 5b 38                 a4 = u64 [s0 + 0x38]
  3156: 82 55 28                 s0 = u64 [s0 + 0x28]
  3159: 33 07 02                 a0 = 0x2
  3162: 33 08                    a1 = 0
  3164: 33 09                    a2 = 0
  3166: 64 6a                    a3 = s1
  3168: 33 00 58                 ra = 0x58
  3171: 0a 64                    ecalli 100 // 'log'
  3173: 01                       fallthrough
      :                          @177 [@dyn 44]
  3174: 33 02 00 10              t0 = 0x1000
  3178: 82 1c 70                 a5 = u64 [sp + 0x70]
  3181: 82 17 80 00              a0 = u64 [sp + 0x80]
  3185: c8 57 07                 a0 = a0 + s0
  3188: 53 27 00 f0 ef fd        jump @159 if a0 <u 4294963200
      :                          @178
  3194: c8 2c 08                 a1 = a5 + t0
  3197: 82 87                    a0 = u64 [a1]
  3199: c9 78 09                 a2 = a1 - a0
  3202: ab 69 e1 fd              jump @159 if a2 != s1
      :                          @179
  3206: c9 57 09                 a2 = a0 - s0
  3209: 01                       fallthrough
      :                          @180
  3210: 82 8a                    a3 = u64 [a1]
  3212: ab 7a ee                 jump @178 if a3 != a0
      :                          @181
  3215: 7b 89                    u64 [a1] = a2
  3217: 33 0b                    a4 = 0
  3219: 01                       fallthrough
      :                          @182
  3220: ab 7a e6                 jump @178 if a3 != a0
      :                          @183
  3223: 28 cc fd                 jump @159
      :                          @184
  3226: 82 69 18                 a2 = u64 [s1 + 0x18]
  3229: 95 9a 01                 a3 = a2 + 0x1
  3232: 82 67 10                 a0 = u64 [s1 + 0x10]
  3235: 33 08 f0 ef 0f           a1 = 0xfeff0
  3240: db 9a 08                 a1 = a3 if a2 != 0
  3243: 7b 68 18                 u64 [s1 + 0x18] = a1
  3246: 33 09 01                 a2 = 0x1
  3249: 0a 17                    ecalli 23 // 'zero'
  3251: 7b 67 20                 u64 [s1 + 0x20] = a0
  3254: 95 17 18 31              a0 = sp + 0x3118
  3258: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3262: 95 17 20 31              a0 = sp + 0x3120
  3266: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3270: 95 17 28 31              a0 = sp + 0x3128
  3274: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3278: 33 07 80 09 01           a0 = 0x10980
  3283: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3287: 95 17 50 32              a0 = sp + 0x3250
  3291: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  3295: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3300: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3305: 82 17 78                 a0 = u64 [sp + 0x78]
  3308: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3312: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3316: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3320: 49 26 b0 00              u64 [s1 + 176] = 0
  3324: 95 17 30 31              a0 = sp + 0x3130
  3328: 95 18 98 31              a1 = sp + 0x3198
  3332: 50 10 5a 69 27           ra = 90, jump @720
      :                          @185 [@dyn 45]
  3337: 82 65 30                 s0 = u64 [s1 + 0x30]
  3340: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3343: 95 17 08 31              a0 = sp + 0x3108
  3347: 82 76 28                 s1 = u64 [a0 + 0x28]
  3350: 33 07 02                 a0 = 0x2
  3353: 33 08                    a1 = 0
  3355: 33 09                    a2 = 0
  3357: 64 5a                    a3 = s0
  3359: 33 00 5c                 ra = 0x5c
  3362: 0a 64                    ecalli 100 // 'log'
  3364: 01                       fallthrough
      :                          @186 [@dyn 46]
  3365: 82 17 80 00              a0 = u64 [sp + 0x80]
  3369: c8 67 07                 a0 = a0 + s1
  3372: 53 27 00 f0 23           jump @192 if a0 <u 4294963200
      :                          @187
  3377: 82 18 70                 a1 = u64 [sp + 0x70]
  3380: 95 87 00 10              a0 = a1 + 0x1000
  3384: 01                       fallthrough
      :                          @188
  3385: 82 78                    a1 = u64 [a0]
  3387: c9 87 09                 a2 = a0 - a1
  3390: ab 59 11                 jump @192 if a2 != s0
      :                          @189
  3393: c9 68 09                 a2 = a1 - s1
  3396: 01                       fallthrough
      :                          @190
  3397: 82 7a                    a3 = u64 [a0]
  3399: ab 8a f2                 jump @188 if a3 != a1
      :                          @191
  3402: 7b 79                    u64 [a0] = a2
  3404: 33 0b                    a4 = 0
  3406: 01                       fallthrough
      :                          @192
  3407: 95 16 08 31              s1 = sp + 0x3108
  3411: 49 16 58                 u64 [s1 + 88] = 0
  3414: 49 16 50                 u64 [s1 + 80] = 0
  3417: 49 16 48                 u64 [s1 + 72] = 0
  3420: 49 16 40                 u64 [s1 + 64] = 0
  3423: 49 16 38                 u64 [s1 + 56] = 0
  3426: 49 16 70                 u64 [s1 + 112] = 0
  3429: 49 16 78                 u64 [s1 + 120] = 0
  3432: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3442: 7b 67 28                 u64 [s1 + 0x28] = a0
  3445: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3455: 7b 67 30                 u64 [s1 + 0x30] = a0
  3458: 82 67                    a0 = u64 [s1]
  3460: 49 26 80 00              u64 [s1 + 128] = 0
  3464: 49 26 88 00              u64 [s1 + 136] = 0
  3468: 49 16 68                 u64 [s1 + 104] = 0
  3471: 7b 67 60                 u64 [s1 + 0x60] = a0
  3474: 95 17 30 31              a0 = sp + 0x3130
  3478: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3482: 33 07 1c                 a0 = 0x1c
  3485: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3489: 33 07 b0 09 01           a0 = 0x109b0
  3494: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3498: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3503: 49 26 68 01              u64 [s1 + 360] = 0
  3507: 95 17 10 32              a0 = sp + 0x3210
  3511: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3515: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3520: 95 17 98 31              a0 = sp + 0x3198
  3524: 95 18 50 32              a1 = sp + 0x3250
  3528: 50 10 5e a5 26           ra = 94, jump @720
      :                          @193 [@dyn 47]
  3533: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3537: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3541: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3545: 33 07 02                 a0 = 0x2
  3548: 33 08                    a1 = 0
  3550: 33 09                    a2 = 0
  3552: 64 5a                    a3 = s0
  3554: 33 00 60                 ra = 0x60
  3557: 0a 64                    ecalli 100 // 'log'
  3559: 01                       fallthrough
      :                          @194 [@dyn 48]
  3560: 82 17 80 00              a0 = u64 [sp + 0x80]
  3564: c8 67 07                 a0 = a0 + s1
  3567: 82 13 70                 t1 = u64 [sp + 0x70]
  3570: 53 27 00 f0 1e           jump @200 if a0 <u 4294963200
      :                          @195
  3575: 95 37 00 10              a0 = t1 + 0x1000
  3579: 01                       fallthrough
      :                          @196
  3580: 82 78                    a1 = u64 [a0]
  3582: c9 87 09                 a2 = a0 - a1
  3585: ab 59 0f                 jump @200 if a2 != s0
      :                          @197
  3588: c9 68 09                 a2 = a1 - s1
  3591: 01                       fallthrough
      :                          @198
  3592: 82 7a                    a3 = u64 [a0]
  3594: ab 8a f2                 jump @196 if a3 != a1
      :                          @199
  3597: 7b 79                    u64 [a0] = a2
  3599: 01                       fallthrough
      :                          @200
  3600: 95 1c 08 31              a5 = sp + 0x3108
  3604: 82 c7 28                 a0 = u64 [a5 + 0x28]
  3607: 82 c8 30                 a1 = u64 [a5 + 0x30]
  3610: 82 c9 38                 a2 = u64 [a5 + 0x38]
  3613: 82 ca 40                 a3 = u64 [a5 + 0x40]
  3616: 82 cb 48                 a4 = u64 [a5 + 0x48]
  3619: 82 c2 50                 t0 = u64 [a5 + 0x50]
  3622: 82 c6 58                 s1 = u64 [a5 + 0x58]
  3625: 49 2c 90 00 00 00 01     u64 [a5 + 144] = 0x10000
  3632: 82 c5 60                 s0 = u64 [a5 + 0x60]
  3635: 7b c7 98 00              u64 [a5 + 0x98] = a0
  3639: 82 c7 68                 a0 = u64 [a5 + 0x68]
  3642: 7b c8 a0 00              u64 [a5 + 0xa0] = a1
  3646: 82 c8 70                 a1 = u64 [a5 + 0x70]
  3649: 7b c9 a8 00              u64 [a5 + 0xa8] = a2
  3653: 82 c9 78                 a2 = u64 [a5 + 0x78]
  3656: 7b ca b0 00              u64 [a5 + 0xb0] = a3
  3660: 82 ca 80 00              a3 = u64 [a5 + 0x80]
  3664: 7b cb b8 00              u64 [a5 + 0xb8] = a4
  3668: 82 cb 88 00              a4 = u64 [a5 + 0x88]
  3672: 7b c2 c0 00              u64 [a5 + 0xc0] = t0
  3676: 7b c6 c8 00              u64 [a5 + 0xc8] = s1
  3680: 95 16 08 31              s1 = sp + 0x3108
  3684: 7b 65 d0 00              u64 [s1 + 0xd0] = s0
  3688: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  3692: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  3696: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
  3700: 7b 6a f0 00              u64 [s1 + 0xf0] = a3
  3704: 7b 6b f8 00              u64 [s1 + 0xf8] = a4
  3708: 33 07 c0 09 01           a0 = 0x109c0
  3713: 7b 17 60                 u64 [sp + 0x60] = a0
  3716: 95 37 00 10              a0 = t1 + 0x1000
  3720: 7b 17 50                 u64 [sp + 0x50] = a0
  3723: 01                       fallthrough
      :                          @201
  3724: 95 17 b0 20              a0 = sp + 0x20b0
  3728: 82 77 48                 a0 = u64 [a0 + 0x48]
  3731: 95 18 98 31              a1 = sp + 0x3198
  3735: 0a 19                    ecalli 25 // 'invoke'
  3737: 7b 18 68                 u64 [sp + 0x68] = a1
  3740: 7b 67 00 01              u64 [s1 + 0x100] = a0
  3744: 95 17 f8 20              a0 = sp + 0x20f8
  3748: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3752: 82 17 78                 a0 = u64 [sp + 0x78]
  3755: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3759: 95 18 08 32              a1 = sp + 0x3208
  3763: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3767: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3771: 95 18 f0 20              a1 = sp + 0x20f0
  3775: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3779: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3783: 82 17 60                 a0 = u64 [sp + 0x60]
  3786: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3790: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  3795: 49 26 28 01              u64 [s1 + 296] = 0
  3799: 95 17 50 32              a0 = sp + 0x3250
  3803: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3807: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  3812: 95 17 80 33              a0 = sp + 0x3380
  3816: 95 18 10 32              a1 = sp + 0x3210
  3820: 50 10 62 81 25           ra = 98, jump @720
      :                          @202 [@dyn 49]
  3825: 82 65 80 02              s0 = u64 [s1 + 0x280]
  3829: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  3833: 95 17 08 31              a0 = sp + 0x3108
  3837: 82 76 78 02              s1 = u64 [a0 + 0x278]
  3841: 33 07 02                 a0 = 0x2
  3844: 33 08                    a1 = 0
  3846: 33 09                    a2 = 0
  3848: 64 5a                    a3 = s0
  3850: 33 00 64                 ra = 0x64
  3853: 0a 64                    ecalli 100 // 'log'
  3855: 01                       fallthrough
      :                          @203 [@dyn 50]
  3856: 82 17 80 00              a0 = u64 [sp + 0x80]
  3860: c8 67 07                 a0 = a0 + s1
  3863: 82 1b 50                 a4 = u64 [sp + 0x50]
  3866: 53 27 00 f0 19           jump @208 if a0 <u 4294963200
      :                          @204
  3871: 82 b7                    a0 = u64 [a4]
  3873: c9 7b 08                 a1 = a4 - a0
  3876: ab 58 0f                 jump @208 if a1 != s0
      :                          @205
  3879: c9 67 08                 a1 = a0 - s1
  3882: 01                       fallthrough
      :                          @206
  3883: 82 b9                    a2 = u64 [a4]
  3885: ab 79 f2                 jump @204 if a2 != a0
      :                          @207
  3888: 7b b8                    u64 [a4] = a1
  3890: 01                       fallthrough
      :                          @208
  3891: 95 16 08 31              s1 = sp + 0x3108
  3895: 82 67 00 01              a0 = u64 [s1 + 0x100]
  3899: 51 07 ae 00              jump @213 if a0 == 0
      :                          @209
  3903: 85 77 03                 a0 = a0 ^ 0x3
  3906: 82 18 68                 a1 = u64 [sp + 0x68]
  3909: 85 88 64                 a1 = a1 ^ 0x64
  3912: d4 87 07                 a0 = a0 | a1
  3915: 52 07 41 ff              jump @201 if a0 != 0
      :                          @210
  3919: 95 17 30 31              a0 = sp + 0x3130
  3923: 33 09 68                 a2 = 0x68
  3926: 95 18 a0 31              a1 = sp + 0x31a0
  3930: 50 10 66 88 27           ra = 102, jump @770
      :                          @211 [@dyn 51]
  3935: 82 67 60                 a0 = u64 [s1 + 0x60]
  3938: 7b 17 68                 u64 [sp + 0x68] = a0
  3941: 82 67 68                 a0 = u64 [s1 + 0x68]
  3944: 7b 17 38                 u64 [sp + 0x38] = a0
  3947: 82 65 70                 s0 = u64 [s1 + 0x70]
  3950: 7b 15 30                 u64 [sp + 0x30] = s0
  3953: 82 67 78                 a0 = u64 [s1 + 0x78]
  3956: 7b 17 48                 u64 [sp + 0x48] = a0
  3959: 82 67 80 00              a0 = u64 [s1 + 0x80]
  3963: 7b 17 40                 u64 [sp + 0x40] = a0
  3966: 49 26 40 01              u64 [s1 + 320] = 0
  3970: 49 26 38 01              u64 [s1 + 312] = 0
  3974: 49 26 30 01              u64 [s1 + 304] = 0
  3978: 49 26 28 01              u64 [s1 + 296] = 0
  3982: 49 26 20 01              u64 [s1 + 288] = 0
  3986: 49 26 18 01              u64 [s1 + 280] = 0
  3990: 49 26 10 01              u64 [s1 + 272] = 0
  3994: 49 26 08 01              u64 [s1 + 264] = 0
  3998: 95 17 50 32              a0 = sp + 0x3250
  4002: 33 09 00 01              a2 = 0x100
  4006: 33 08                    a1 = 0
  4008: 50 10 68 ec 27           ra = 104, jump @788
      :                          @212 [@dyn 52]
  4013: 95 17 b0 20              a0 = sp + 0x20b0
  4017: 82 77 48                 a0 = u64 [a0 + 0x48]
  4020: 95 18 10 32              a1 = sp + 0x3210
  4024: 82 19 38                 a2 = u64 [sp + 0x38]
  4027: 64 5a                    a3 = s0
  4029: 0a 15                    ecalli 21 // 'peek'
  4031: 95 17 b0 20              a0 = sp + 0x20b0
  4035: 82 77 48                 a0 = u64 [a0 + 0x48]
  4038: 95 18 50 32              a1 = sp + 0x3250
  4042: 82 19 48                 a2 = u64 [sp + 0x48]
  4045: 82 15 40                 s0 = u64 [sp + 0x40]
  4048: 64 5a                    a3 = s0
  4050: 0a 15                    ecalli 21 // 'peek'
  4052: 95 18 10 32              a1 = sp + 0x3210
  4056: 95 1a 50 32              a3 = sp + 0x3250
  4060: 82 17 68                 a0 = u64 [sp + 0x68]
  4063: 82 19 30                 a2 = u64 [sp + 0x30]
  4066: 64 5b                    a4 = s0
  4068: 0a 64                    ecalli 100 // 'log'
  4070: 28 a6 fe                 jump @201
      :                          @213
  4073: 0a                       ecalli 0 // 'gas'
  4074: 95 18 b0 20              a1 = sp + 0x20b0
  4078: 7b 87 40                 u64 [a1 + 0x40] = a0
  4081: 95 17 f0 20              a0 = sp + 0x20f0
  4085: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4089: 82 17 28                 a0 = u64 [sp + 0x28]
  4092: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4096: 95 17 80 33              a0 = sp + 0x3380
  4100: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4104: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4109: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4114: 82 17 78                 a0 = u64 [sp + 0x78]
  4117: 7b 67 80 02              u64 [s1 + 0x280] = a0
  4121: 49 26 68 01              u64 [s1 + 360] = 0
  4125: 95 17 10 32              a0 = sp + 0x3210
  4129: 95 18 50 32              a1 = sp + 0x3250
  4133: 50 10 6a 48 24           ra = 106, jump @720
      :                          @214 [@dyn 53]
  4138: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4142: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4146: 95 17 08 31              a0 = sp + 0x3108
  4150: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4154: 33 07 02                 a0 = 0x2
  4157: 33 08                    a1 = 0
  4159: 33 09                    a2 = 0
  4161: 64 5a                    a3 = s0
  4163: 33 00 6c                 ra = 0x6c
  4166: 0a 64                    ecalli 100 // 'log'
  4168: 01                       fallthrough
      :                          @215 [@dyn 54]
  4169: 82 17 80 00              a0 = u64 [sp + 0x80]
  4173: c8 67 07                 a0 = a0 + s1
  4176: 53 27 00 f0 23           jump @221 if a0 <u 4294963200
      :                          @216
  4181: 82 18 70                 a1 = u64 [sp + 0x70]
  4184: 95 87 00 10              a0 = a1 + 0x1000
  4188: 01                       fallthrough
      :                          @217
  4189: 82 78                    a1 = u64 [a0]
  4191: c9 87 09                 a2 = a0 - a1
  4194: ab 59 11                 jump @221 if a2 != s0
      :                          @218
  4197: c9 68 09                 a2 = a1 - s1
  4200: 01                       fallthrough
      :                          @219
  4201: 82 7a                    a3 = u64 [a0]
  4203: ab 8a f2                 jump @217 if a3 != a1
      :                          @220
  4206: 7b 79                    u64 [a0] = a2
  4208: 33 0b                    a4 = 0
  4210: 01                       fallthrough
      :                          @221
  4211: 95 16 08 31              s1 = sp + 0x3108
  4215: 48 26 50 02              u32 [s1 + 592] = 0
  4219: 49 26 48 02              u64 [s1 + 584] = 0
  4223: 82 69                    a2 = u64 [s1]
  4225: 33 08 14                 a1 = 0x14
  4228: 7b 18 48                 u64 [sp + 0x48] = a1
  4231: 33 08 48 00 01           a1 = 0x10048
  4236: 7b 18 50                 u64 [sp + 0x50] = a1
  4239: 33 08 12                 a1 = 0x12
  4242: 7b 18 60                 u64 [sp + 0x60] = a1
  4245: 7b 19 40                 u64 [sp + 0x40] = a2
  4248: 51 19 ff f9 02           jump @251 if a2 == 4294967295
      :                          @222
  4253: 33 08                    a1 = 0
  4255: 95 19 b0 20              a2 = sp + 0x20b0
  4259: 82 99 48                 a2 = u64 [a2 + 0x48]
  4262: 7b 19 20                 u64 [sp + 0x20] = a2
  4265: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4275: 7b 19 38                 u64 [sp + 0x38] = a2
  4278: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4288: 7b 17 30                 u64 [sp + 0x30] = a0
  4291: 33 07 60 0a 01           a0 = 0x10a60
  4296: 7b 17 28                 u64 [sp + 0x28] = a0
  4299: 49 11 18 f0 ef 0f        u64 [sp + 24] = 0xfeff0
  4305: 33 07 06                 a0 = 0x6
  4308: 7b 17 10                 u64 [sp + 0x10] = a0
  4311: 33 07 b0 0a 01           a0 = 0x10ab0
  4316: 7b 17 08                 u64 [sp + 0x8] = a0
  4319: 28 13                    jump @224
      :                          @223
  4321: 82 19 68                 a2 = u64 [sp + 0x68]
  4324: 95 98 01                 a1 = a2 + 0x1
  4327: 95 16 08 31              s1 = sp + 0x3108
  4331: 82 17 40                 a0 = u64 [sp + 0x40]
  4334: aa 79 a3 02              jump @251 if a2 == a0
      :                          @224
  4338: 7b 68 58 02              u64 [s1 + 0x258] = a1
  4342: 7b 18 68                 u64 [sp + 0x68] = a1
  4345: 97 89 0c                 a2 = a1 << 0xc
  4348: 95 17 b0 20              a0 = sp + 0x20b0
  4352: 82 77 48                 a0 = u64 [a0 + 0x48]
  4355: 82 68 08                 a1 = u64 [s1 + 0x8]
  4358: 82 1a 38                 a3 = u64 [sp + 0x38]
  4361: c8 a9 09                 a2 = a2 + a3
  4364: 82 1a 30                 a3 = u64 [sp + 0x30]
  4367: d2 a9 09                 a2 = a2 & a3
  4370: 7b 69 60 02              u64 [s1 + 0x260] = a2
  4374: 33 0a 00 10              a3 = 0x1000
  4378: 0a 15                    ecalli 21 // 'peek'
  4380: 95 17 f8 20              a0 = sp + 0x20f8
  4384: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4388: 82 17 78                 a0 = u64 [sp + 0x78]
  4391: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4395: 95 18 10 31              a1 = sp + 0x3110
  4399: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4403: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4407: 95 18 68 33              a1 = sp + 0x3368
  4411: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4415: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4419: 82 18 58                 a1 = u64 [sp + 0x58]
  4422: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4426: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4430: 95 17 9f 33              a0 = sp + 0x339f
  4434: 7b 67 88 01              u64 [s1 + 0x188] = a0
  4438: 82 17 60                 a0 = u64 [sp + 0x60]
  4441: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4445: 82 17 28                 a0 = u64 [sp + 0x28]
  4448: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4452: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4457: 49 26 28 01              u64 [s1 + 296] = 0
  4461: 95 18 50 32              a1 = sp + 0x3250
  4465: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4469: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4474: 95 17 80 33              a0 = sp + 0x3380
  4478: 95 18 10 32              a1 = sp + 0x3210
  4482: 50 10 6e eb 22           ra = 110, jump @720
      :                          @225 [@dyn 55]
  4487: 82 65 80 02              s0 = u64 [s1 + 0x280]
  4491: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  4495: 95 17 08 31              a0 = sp + 0x3108
  4499: 82 76 78 02              s1 = u64 [a0 + 0x278]
  4503: 33 07 02                 a0 = 0x2
  4506: 33 08                    a1 = 0
  4508: 33 09                    a2 = 0
  4510: 64 5a                    a3 = s0
  4512: 33 00 70                 ra = 0x70
  4515: 0a 64                    ecalli 100 // 'log'
  4517: 01                       fallthrough
      :                          @226 [@dyn 56]
  4518: 82 17 80 00              a0 = u64 [sp + 0x80]
  4522: c8 67 07                 a0 = a0 + s1
  4525: 82 1c 70                 a5 = u64 [sp + 0x70]
  4528: 33 02 00 10              t0 = 0x1000
  4532: 53 27 00 f0 1e           jump @231 if a0 <u 4294963200
      :                          @227
  4537: c8 2c 08                 a1 = a5 + t0
  4540: 82 87                    a0 = u64 [a1]
  4542: c9 78 09                 a2 = a1 - a0
  4545: ab 59 11                 jump @231 if a2 != s0
      :                          @228
  4548: c9 67 09                 a2 = a0 - s1
  4551: 01                       fallthrough
      :                          @229
  4552: 82 8a                    a3 = u64 [a1]
  4554: ab 7a ef                 jump @227 if a3 != a0
      :                          @230
  4557: 7b 89                    u64 [a1] = a2
  4559: 33 0b                    a4 = 0
  4561: 01                       fallthrough
      :                          @231
  4562: 95 16 08 31              s1 = sp + 0x3108
  4566: 82 67 58 02              a0 = u64 [s1 + 0x258]
  4570: 82 68                    a1 = u64 [s1]
  4572: ab 87 c0 00              jump @240 if a0 != a1
      :                          @232
  4576: 82 18 18                 a1 = u64 [sp + 0x18]
  4579: be 87 07                 i32 a0 = a0 + a1
  4582: 95 18 b0 20              a1 = sp + 0x20b0
  4586: 82 19 20                 a2 = u64 [sp + 0x20]
  4589: 7a 89 50                 u32 [a1 + 0x50] = a2
  4592: 7a 87 54                 u32 [a1 + 0x54] = a0
  4595: 95 17 00 21              a0 = sp + 0x2100
  4599: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4603: 49 26 80 02 08           u64 [s1 + 640] = 0x8
  4608: 95 17 80 33              a0 = sp + 0x3380
  4612: 7b 67 68 02              u64 [s1 + 0x268] = a0
  4616: 82 17 10                 a0 = u64 [sp + 0x10]
  4619: 7b 67 70 02              u64 [s1 + 0x270] = a0
  4623: 82 17 08                 a0 = u64 [sp + 0x8]
  4626: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4630: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4635: 49 26 68 01              u64 [s1 + 360] = 0
  4639: 95 18 70 33              a1 = sp + 0x3370
  4643: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4647: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4652: 95 17 10 32              a0 = sp + 0x3210
  4656: 95 18 50 32              a1 = sp + 0x3250
  4660: 50 10 72 39 22           ra = 114, jump @720
      :                          @233 [@dyn 57]
  4665: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4669: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4673: 95 17 08 31              a0 = sp + 0x3108
  4677: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4681: 33 07 02                 a0 = 0x2
  4684: 33 08                    a1 = 0
  4686: 33 09                    a2 = 0
  4688: 64 5a                    a3 = s0
  4690: 33 00 74                 ra = 0x74
  4693: 0a 64                    ecalli 100 // 'log'
  4695: 01                       fallthrough
      :                          @234 [@dyn 58]
  4696: 33 02 00 10              t0 = 0x1000
  4700: 82 1c 70                 a5 = u64 [sp + 0x70]
  4703: 82 17 80 00              a0 = u64 [sp + 0x80]
  4707: c8 67 07                 a0 = a0 + s1
  4710: 53 27 00 f0 1c           jump @239 if a0 <u 4294963200
      :                          @235
  4715: c8 2c 08                 a1 = a5 + t0
  4718: 82 87                    a0 = u64 [a1]
  4720: c9 78 09                 a2 = a1 - a0
  4723: ab 59 0f                 jump @239 if a2 != s0
      :                          @236
  4726: c9 67 09                 a2 = a0 - s1
  4729: 01                       fallthrough
      :                          @237
  4730: 82 8a                    a3 = u64 [a1]
  4732: ab 7a ef                 jump @235 if a3 != a0
      :                          @238
  4735: 7b 89                    u64 [a1] = a2
  4737: 01                       fallthrough
      :                          @239
  4738: 95 16 08 31              s1 = sp + 0x3108
  4742: 82 17 68                 a0 = u64 [sp + 0x68]
  4745: 7a 67 48 02              u32 [s1 + 0x248] = a0
  4749: 95 18 54 33              a1 = sp + 0x3354
  4753: 95 15 b0 20              s0 = sp + 0x20b0
  4757: 81 57 58                 a0 = i32 [s0 + 0x58]
  4760: 7a 87                    u32 [a1] = a0
  4762: 28 16                    jump @242
      :                          @240
  4764: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  4767: 95 18 58 33              a1 = sp + 0x3358
  4771: 95 15 b0 20              s0 = sp + 0x20b0
  4775: ab 97 09                 jump @242 if a0 != a2
      :                          @241
  4778: 81 57 58                 a0 = i32 [s0 + 0x58]
  4781: 7a 87                    u32 [a1] = a0
  4783: 01                       fallthrough
      :                          @242
  4784: 83 28 08                 i32 a1 = t0 + 0x8
  4787: 95 17 00 21              a0 = sp + 0x2100
  4791: 0a 13                    ecalli 19 // 'export'
  4793: 33 0a 62 02 01           a3 = 0x10262
  4798: 33 07 02                 a0 = 0x2
  4801: 33 0b 04                 a4 = 0x4
  4804: 33 08                    a1 = 0
  4806: 33 09                    a2 = 0
  4808: 0a 64                    ecalli 100 // 'log'
  4810: 0a                       ecalli 0 // 'gas'
  4811: 7b 57 40                 u64 [s0 + 0x40] = a0
  4814: 33 07 c0 0a 01           a0 = 0x10ac0
  4819: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4823: 95 17 60 33              a0 = sp + 0x3360
  4827: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4831: 82 17 78                 a0 = u64 [sp + 0x78]
  4834: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4838: 82 18 50                 a1 = u64 [sp + 0x50]
  4841: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4845: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4849: 95 18 9f 33              a1 = sp + 0x339f
  4853: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4857: 82 18 60                 a1 = u64 [sp + 0x60]
  4860: 7b 68 70 01              u64 [s1 + 0x170] = a1
  4864: 95 18 f0 20              a1 = sp + 0x20f0
  4868: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4872: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4876: 95 17 50 33              a0 = sp + 0x3350
  4880: 7b 67 88 01              u64 [s1 + 0x188] = a0
  4884: 82 17 48                 a0 = u64 [sp + 0x48]
  4887: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4891: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4896: 49 26 28 01              u64 [s1 + 296] = 0
  4900: 95 18 50 32              a1 = sp + 0x3250
  4904: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4908: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4913: 95 17 80 33              a0 = sp + 0x3380
  4917: 95 18 10 32              a1 = sp + 0x3210
  4921: 50 10 76 34 21           ra = 118, jump @720
      :                          @243 [@dyn 59]
  4926: 82 65 80 02              s0 = u64 [s1 + 0x280]
  4930: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  4934: 95 17 08 31              a0 = sp + 0x3108
  4938: 82 76 78 02              s1 = u64 [a0 + 0x278]
  4942: 33 07 02                 a0 = 0x2
  4945: 33 08                    a1 = 0
  4947: 33 09                    a2 = 0
  4949: 64 5a                    a3 = s0
  4951: 33 00 78                 ra = 0x78
  4954: 0a 64                    ecalli 100 // 'log'
  4956: 01                       fallthrough
      :                          @244 [@dyn 60]
  4957: 33 02 00 10              t0 = 0x1000
  4961: 82 17 80 00              a0 = u64 [sp + 0x80]
  4965: c8 67 07                 a0 = a0 + s1
  4968: 82 1c 70                 a5 = u64 [sp + 0x70]
  4971: 53 27 00 f0 76 fd        jump @223 if a0 <u 4294963200
      :                          @245
  4977: c8 2c 08                 a1 = a5 + t0
  4980: 82 87                    a0 = u64 [a1]
  4982: c9 78 09                 a2 = a1 - a0
  4985: ab 59 68 fd              jump @223 if a2 != s0
      :                          @246
  4989: c9 67 09                 a2 = a0 - s1
  4992: 01                       fallthrough
      :                          @247
  4993: 82 8a                    a3 = u64 [a1]
  4995: ab 7a ee                 jump @245 if a3 != a0
      :                          @248
  4998: 7b 89                    u64 [a1] = a2
  5000: 33 0b                    a4 = 0
  5002: 01                       fallthrough
      :                          @249
  5003: ab 7a e6                 jump @245 if a3 != a0
      :                          @250
  5006: 28 53 fd                 jump @223
      :                          @251
  5009: 95 17 54 33              a0 = sp + 0x3354
  5013: 95 18 58 33              a1 = sp + 0x3358
  5017: 95 19 50 33              a2 = sp + 0x3350
  5021: 7b 69 48 01              u64 [s1 + 0x148] = a2
  5025: 82 19 48                 a2 = u64 [sp + 0x48]
  5028: 7b 69 50 01              u64 [s1 + 0x150] = a2
  5032: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5036: 7b 69 60 01              u64 [s1 + 0x160] = a2
  5040: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5044: 7b 69 70 01              u64 [s1 + 0x170] = a2
  5048: 33 07 f0 09 01           a0 = 0x109f0
  5053: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5057: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5062: 49 26 28 01              u64 [s1 + 296] = 0
  5066: 95 18 50 32              a1 = sp + 0x3250
  5070: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5074: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5079: 95 17 80 33              a0 = sp + 0x3380
  5083: 95 18 10 32              a1 = sp + 0x3210
  5087: 50 10 7a 8e 20           ra = 122, jump @720
      :                          @252 [@dyn 61]
  5092: 82 65 80 02              s0 = u64 [s1 + 0x280]
  5096: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  5100: 95 17 08 31              a0 = sp + 0x3108
  5104: 82 76 78 02              s1 = u64 [a0 + 0x278]
  5108: 33 07 02                 a0 = 0x2
  5111: 33 08                    a1 = 0
  5113: 33 09                    a2 = 0
  5115: 64 5a                    a3 = s0
  5117: 33 00 7c                 ra = 0x7c
  5120: 0a 64                    ecalli 100 // 'log'
  5122: 01                       fallthrough
      :                          @253 [@dyn 62]
  5123: 82 17 80 00              a0 = u64 [sp + 0x80]
  5127: c8 67 07                 a0 = a0 + s1
  5130: 53 27 00 f0 21           jump @259 if a0 <u 4294963200
      :                          @254
  5135: 82 18 70                 a1 = u64 [sp + 0x70]
  5138: 95 87 00 10              a0 = a1 + 0x1000
  5142: 01                       fallthrough
      :                          @255
  5143: 82 78                    a1 = u64 [a0]
  5145: c9 87 09                 a2 = a0 - a1
  5148: ab 59 0f                 jump @259 if a2 != s0
      :                          @256
  5151: c9 68 09                 a2 = a1 - s1
  5154: 01                       fallthrough
      :                          @257
  5155: 82 7a                    a3 = u64 [a0]
  5157: ab 8a f2                 jump @255 if a3 != a1
      :                          @258
  5160: 7b 79                    u64 [a0] = a2
  5162: 01                       fallthrough
      :                          @259
  5163: 95 15 b0 20              s0 = sp + 0x20b0
  5167: 82 57 48                 a0 = u64 [s0 + 0x48]
  5170: 0a 1a                    ecalli 26 // 'expunge'
  5172: 0a                       ecalli 0 // 'gas'
  5173: 7b 57 40                 u64 [s0 + 0x40] = a0
  5176: 95 17 f8 20              a0 = sp + 0x20f8
  5180: 95 16 08 31              s1 = sp + 0x3108
  5184: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5188: 82 17 50                 a0 = u64 [sp + 0x50]
  5191: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5195: 95 17 9f 33              a0 = sp + 0x339f
  5199: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5203: 82 17 60                 a0 = u64 [sp + 0x60]
  5206: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5210: 95 17 f0 20              a0 = sp + 0x20f0
  5214: 7b 67 78 01              u64 [s1 + 0x178] = a0
  5218: 82 17 78                 a0 = u64 [sp + 0x78]
  5221: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5225: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5229: 7b 67 80 01              u64 [s1 + 0x180] = a0
  5233: 33 07 20 0a 01           a0 = 0x10a20
  5238: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5242: 95 17 50 32              a0 = sp + 0x3250
  5246: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5250: 49 26 10 01 04           u64 [s1 + 272] = 0x4
  5255: 49 26 20 01 04           u64 [s1 + 288] = 0x4
  5260: 49 26 28 01              u64 [s1 + 296] = 0
  5264: 95 17 80 33              a0 = sp + 0x3380
  5268: 95 18 10 32              a1 = sp + 0x3210
  5272: 50 10 7e d5 1f           ra = 126, jump @720
      :                          @260 [@dyn 63]
  5277: 82 65 80 02              s0 = u64 [s1 + 0x280]
  5281: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  5285: 82 66 78 02              s1 = u64 [s1 + 0x278]
  5289: 33 07 02                 a0 = 0x2
  5292: 33 08                    a1 = 0
  5294: 33 09                    a2 = 0
  5296: 64 5a                    a3 = s0
  5298: 33 00 80 00              ra = 0x80
  5302: 0a 64                    ecalli 100 // 'log'
  5304: 01                       fallthrough
      :                          @261 [@dyn 64]
  5305: 82 17 80 00              a0 = u64 [sp + 0x80]
  5309: c8 67 07                 a0 = a0 + s1
  5312: 53 27 00 f0 2c           jump @267 if a0 <u 4294963200
      :                          @262
  5317: 82 18 70                 a1 = u64 [sp + 0x70]
  5320: 95 87 00 10              a0 = a1 + 0x1000
  5324: 01                       fallthrough
      :                          @263
  5325: 82 78                    a1 = u64 [a0]
  5327: c9 87 09                 a2 = a0 - a1
  5330: ab 59 1a                 jump @267 if a2 != s0
      :                          @264
  5333: c9 68 09                 a2 = a1 - s1
  5336: 01                       fallthrough
      :                          @265
  5337: 82 7a                    a3 = u64 [a0]
  5339: ab 8a f2                 jump @263 if a3 != a1
      :                          @266
  5342: 7b 79                    u64 [a0] = a2
  5344: 33 0b                    a4 = 0
  5346: 95 1a 50 33              a3 = sp + 0x3350
  5350: 33 08 0c                 a1 = 0xc
  5353: 28 10 f1                 jump @107
      :                          @267
  5356: 95 1a 50 33              a3 = sp + 0x3350
  5360: 33 08 0c                 a1 = 0xc
  5363: 28 06 f1                 jump @107
      :                          @268
  5366: 00                       trap
      :                          @269 [export #1: 'accumulate']
  5367: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5371: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5375: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5379: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5383: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  5387: 33 09 08                 a2 = 0x8
  5390: ac 98 0a 01              jump @302 if a1 <u a2
      :                          @270
  5394: 52 07 06                 jump @272 if a0 != 0
      :                          @271
  5397: 28 19 1d                 jump @658
      :                          @272
  5400: 95 79 04                 a2 = a0 + 0x4
  5403: 52 09 06                 jump @274 if a2 != 0
      :                          @273
  5406: 28 11 1d                 jump @659
      :                          @274
  5409: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5412: 7b 19 40                 u64 [sp + 0x40] = a2
  5415: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5418: 7b 19 28                 u64 [sp + 0x28] = a2
  5421: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5424: 7b 19 38                 u64 [sp + 0x38] = a2
  5427: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5430: 7b 19 30                 u64 [sp + 0x30] = a2
  5433: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5436: 95 75 08                 s0 = a0 + 0x8
  5439: 51 0a 45                 jump @284 if a3 == 0
      :                          @275
  5442: 7d 58                    a1 = i8 [s0]
  5444: 33 06 01                 s1 = 0x1
  5447: 59 08 40                 jump @285 if a1 >=s 0
      :                          @276
  5450: 84 89 ff 00              a2 = a1 & 0xff
  5454: 33 06 02                 s1 = 0x2
  5457: 53 29 c0 00 2d           jump @282 if a2 <u 192
      :                          @277
  5462: 33 06 03                 s1 = 0x3
  5465: 53 29 e0 00 25           jump @282 if a2 <u 224
      :                          @278
  5470: 33 06 04                 s1 = 0x4
  5473: 53 29 f0 00 1d           jump @282 if a2 <u 240
      :                          @279
  5478: 33 06 05                 s1 = 0x5
  5481: 53 29 f8 00 15           jump @282 if a2 <u 248
      :                          @280
  5486: 33 06 06                 s1 = 0x6
  5489: 53 29 fc 00 0d           jump @282 if a2 <u 252
      :                          @281
  5494: 88 98 fe 00              a1 = a2 <u 0xfe
  5498: 9a 86 08                 s1 = 0x8 - a1
  5501: 01                       fallthrough
      :                          @282
  5502: ae 6a 09                 jump @285 if a3 >=u s1
      :                          @283
  5505: 28 97 00                 jump @302
      :                          @284
  5508: 33 06                    s1 = 0
  5510: 01                       fallthrough
      :                          @285
  5511: 7b 16 48                 u64 [sp + 0x48] = s1
  5514: 64 57                    a0 = s0
  5516: 64 68                    a1 = s1
  5518: 64 a6                    s1 = a3
  5520: 50 20 82 00 79 2f        ra = 130, jump @1047
      :                          @286 [@dyn 65]
  5526: 82 1a 48                 a3 = u64 [sp + 0x48]
  5529: 51 07 7f                 jump @302 if a0 == 0
      :                          @287
  5532: e4 a6 07                 a0 = maxu(s1, a3)
  5535: c9 a7 07                 a0 = a0 - a3
  5538: 53 17 60 76              jump @302 if a0 <u 96
      :                          @288
  5542: c8 5a 08                 a1 = a3 + s0
  5545: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5548: 95 87 60                 a0 = a1 + 0x60
  5551: 7b 17 48                 u64 [sp + 0x48] = a0
  5554: 51 06 4f                 jump @300 if s1 == 0
      :                          @289
  5557: 7d 78                    a1 = i8 [a0]
  5559: 33 05 01                 s0 = 0x1
  5562: 59 08 37                 jump @296 if a1 >=s 0
      :                          @290
  5565: 84 89 ff 00              a2 = a1 & 0xff
  5569: 33 05 02                 s0 = 0x2
  5572: 53 29 c0 00 2d           jump @296 if a2 <u 192
      :                          @291
  5577: 33 05 03                 s0 = 0x3
  5580: 53 29 e0 00 25           jump @296 if a2 <u 224
      :                          @292
  5585: 33 05 04                 s0 = 0x4
  5588: 53 29 f0 00 1d           jump @296 if a2 <u 240
      :                          @293
  5593: 33 05 05                 s0 = 0x5
  5596: 53 29 f8 00 15           jump @296 if a2 <u 248
      :                          @294
  5601: 33 05 06                 s0 = 0x6
  5604: 53 29 fc 00 0d           jump @296 if a2 <u 252
      :                          @295
  5609: 88 98 fe 00              a1 = a2 <u 0xfe
  5613: 9a 85 08                 s0 = 0x8 - a1
  5616: 01                       fallthrough
      :                          @296
  5617: ae 56 06                 jump @298 if s1 >=u s0
      :                          @297
  5620: 28 3c 1c                 jump @660
      :                          @298
  5623: 64 58                    a1 = s0
  5625: 50 20 84 00 10 2f        ra = 132, jump @1047
      :                          @299 [@dyn 66]
  5631: 28 07                    jump @301
      :                          @300
  5633: 33 05                    s0 = 0
  5635: 33 07                    a0 = 0
  5637: 01                       fallthrough
      :                          @301
  5638: e4 56 08                 a1 = maxu(s1, s0)
  5641: c9 58 08                 a1 = a1 - s0
  5644: e4 78 08                 a1 = maxu(a1, a0)
  5647: c9 78 08                 a1 = a1 - a0
  5650: 33 09 21                 a2 = 0x21
  5653: ae 98 23                 jump @304 if a1 >=u a2
      :                          @302
  5656: 33 08                    a1 = 0
  5658: 33 05 00 00 01           s0 = 0x10000
  5663: 01                       fallthrough
      :                          @303
  5664: 64 57                    a0 = s0
  5666: 95 11 40 04              sp = sp + 0x440
  5670: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  5674: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  5678: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  5682: 95 11 f8 07              sp = sp + 0x7f8
  5686: 32 00                    ret
      :                          @304
  5688: 82 19 48                 a2 = u64 [sp + 0x48]
  5691: c8 95 05                 s0 = s0 + a2
  5694: c8 57 07                 a0 = a0 + s0
  5697: 7c 79 20                 a2 = u8 [a0 + 0x20]
  5700: 51 09 0a                 jump @306 if a2 == 0
      :                          @305
  5703: 33 06                    s1 = 0
  5705: 33 0a                    a3 = 0
  5707: 28 86 00                 jump @321
      :                          @306
  5710: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  5713: 95 75 21                 s0 = a0 + 0x21
  5716: 51 0a 57                 jump @318 if a3 == 0
      :                          @307
  5719: 7d 57                    a0 = i8 [s0]
  5721: 33 06 01                 s1 = 0x1
  5724: 59 07 37                 jump @314 if a0 >=s 0
      :                          @308
  5727: 84 77 ff 00              a0 = a0 & 0xff
  5731: 33 06 02                 s1 = 0x2
  5734: 53 27 c0 00 2d           jump @314 if a0 <u 192
      :                          @309
  5739: 33 06 03                 s1 = 0x3
  5742: 53 27 e0 00 25           jump @314 if a0 <u 224
      :                          @310
  5747: 33 06 04                 s1 = 0x4
  5750: 53 27 f0 00 1d           jump @314 if a0 <u 240
      :                          @311
  5755: 33 06 05                 s1 = 0x5
  5758: 53 27 f8 00 15           jump @314 if a0 <u 248
      :                          @312
  5763: 33 06 06                 s1 = 0x6
  5766: 53 27 fc 00 0d           jump @314 if a0 <u 252
      :                          @313
  5771: 88 77 fe 00              a0 = a0 <u 0xfe
  5775: 9a 76 08                 s1 = 0x8 - a0
  5778: 01                       fallthrough
      :                          @314
  5779: 7b 1a 48                 u64 [sp + 0x48] = a3
  5782: ae 6a 06                 jump @316 if a3 >=u s1
      :                          @315
  5785: 28 99 1b                 jump @662
      :                          @316
  5788: 64 57                    a0 = s0
  5790: 64 68                    a1 = s1
  5792: 50 20 86 00 69 2e        ra = 134, jump @1047
      :                          @317 [@dyn 67]
  5798: 82 1a 48                 a3 = u64 [sp + 0x48]
  5801: 28 07                    jump @319
      :                          @318
  5803: 33 06                    s1 = 0
  5805: 33 07                    a0 = 0
  5807: 01                       fallthrough
      :                          @319
  5808: e4 6a 08                 a1 = maxu(a3, s1)
  5811: c9 68 08                 a1 = a1 - s1
  5814: e6 78 0a                 a3 = minu(a1, a0)
  5817: c8 56 06                 s1 = s1 + s0
  5820: 52 1a 24 15              jump @321 if a3 != 36
      :                          @320
  5824: 80 68 20                 a1 = u32 [s1 + 0x20]
  5827: 64 67                    a0 = s1
  5829: 0a 0e                    ecalli 14 // 'solicit'
  5831: 33 08                    a1 = 0
  5833: 33 05 00 00 01           s0 = 0x10000
  5838: 28 52 ff                 jump @303
      :                          @321
  5841: 82 17 28                 a0 = u64 [sp + 0x28]
  5844: 97 77 08                 a0 = a0 << 0x8
  5847: 82 18 40                 a1 = u64 [sp + 0x40]
  5850: d4 87 07                 a0 = a0 | a1
  5853: 82 18 38                 a1 = u64 [sp + 0x38]
  5856: 97 88 10                 a1 = a1 << 0x10
  5859: 82 19 30                 a2 = u64 [sp + 0x30]
  5862: 97 99 18                 a2 = a2 << 0x18
  5865: d4 98 08                 a1 = a1 | a2
  5868: d4 87 07                 a0 = a0 | a1
  5871: 7b 17 30                 u64 [sp + 0x30] = a0
  5874: 46 11 51                 u8 [sp + 81] = 0
  5877: 81 65                    s0 = i32 [s1]
  5879: 95 17 51                 a0 = sp + 0x51
  5882: 33 08 01                 a1 = 0x1
  5885: 7b 16 18                 u64 [sp + 0x18] = s1
  5888: 64 69                    a2 = s1
  5890: 7b 1a 20                 u64 [sp + 0x20] = a3
  5893: 0a 03                    ecalli 3 // 'write'
  5895: 46 11 52 6a              u8 [sp + 82] = 0x6a
  5899: 46 11 53 61              u8 [sp + 83] = 0x61
  5903: 46 11 54 6d              u8 [sp + 84] = 0x6d
  5907: 46 11 55 44              u8 [sp + 85] = 0x44
  5911: 46 11 56 4f              u8 [sp + 86] = 0x4f
  5915: 46 11 57 54              u8 [sp + 87] = 0x54
  5919: 46 11 58 6a              u8 [sp + 88] = 0x6a
  5923: 46 11 59 0d              u8 [sp + 89] = 0xd
  5927: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  5931: 46 11 5b 19              u8 [sp + 91] = 0x19
  5935: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  5940: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  5945: 46 11 5e 50              u8 [sp + 94] = 0x50
  5949: 46 11 5f 57              u8 [sp + 95] = 0x57
  5953: 46 11 60 13              u8 [sp + 96] = 0x13
  5957: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  5962: 46 11 62 65              u8 [sp + 98] = 0x65
  5966: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  5971: 46 11 64 31              u8 [sp + 100] = 0x31
  5975: 46 11 65 03              u8 [sp + 101] = 0x3
  5979: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  5984: 46 11 67 73              u8 [sp + 103] = 0x73
  5988: 33 0b f1 00              a4 = 0xf1
  5992: 78 1b 68                 u8 [sp + 0x68] = a4
  5995: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6000: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6005: 46 11 6b 64              u8 [sp + 107] = 0x64
  6009: 46 11 6c 56              u8 [sp + 108] = 0x56
  6013: 46 11 6d 32              u8 [sp + 109] = 0x32
  6017: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6022: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6027: 46 11 70 50              u8 [sp + 112] = 0x50
  6031: 33 0c 3c                 a5 = 0x3c
  6034: 78 1c 71                 u8 [sp + 0x71] = a5
  6037: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6041: 46 11 73 0c              u8 [sp + 115] = 0xc
  6045: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6049: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6053: 46 11 76 19              u8 [sp + 118] = 0x19
  6057: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6062: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6067: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6072: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6077: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6081: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6086: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6091: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6096: 46 11 7f 47              u8 [sp + 127] = 0x47
  6100: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6106: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6111: 78 1c 82 00              u8 [sp + 0x82] = a5
  6115: 78 1b 83 00              u8 [sp + 0x83] = a4
  6119: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6125: 95 16 ff 07              s1 = sp + 0x7ff
  6129: 95 66 99 03              s1 = s1 + 0x399
  6133: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6138: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6143: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6149: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6155: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6161: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6167: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6173: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6179: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6184: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6189: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6194: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6200: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6206: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6211: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6216: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6222: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6228: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6233: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6238: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  6243: 95 17 98 00              a0 = sp + 0x98
  6247: 33 09 00 01              a2 = 0x100
  6251: 33 08                    a1 = 0
  6253: 50 20 88 00 27 1f        ra = 136, jump @788
      :                          @322 [@dyn 68]
  6259: 7b 15 28                 u64 [sp + 0x28] = s0
  6262: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  6265: 33 09 48 00 01           a2 = 0x10048
  6270: 7b 19 38                 u64 [sp + 0x38] = a2
  6273: 33 09 18                 a2 = 0x18
  6276: 7b 19 40                 u64 [sp + 0x40] = a2
  6279: 54 17 09 07              jump @324 if a0 <=u 9
      :                          @323
  6283: 28 c6 17                 jump @631
      :                          @324
  6286: 97 77 02                 a0 = a0 << 0x2
  6289: 33 08 00 00 01           a1 = 0x10000
  6294: c8 87 07                 a0 = a0 + a1
  6297: 81 77                    a0 = i32 [a0]
  6299: c8 87 07                 a0 = a0 + a1
  6302: 32 07                    jump [a0]
      :                          @325 [@dyn 69]
  6304: 95 18 52                 a1 = sp + 0x52
  6307: 33 09 03                 a2 = 0x3
  6310: 95 1a 98 00              a3 = sp + 0x98
  6314: 33 0c 00 01              a5 = 0x100
  6318: 82 17 30                 a0 = u64 [sp + 0x30]
  6321: 33 0b                    a4 = 0
  6323: 0a 02                    ecalli 2 // 'read'
  6325: 7b 67 70                 u64 [s1 + 0x70] = a0
  6328: 33 07 50 00 01           a0 = 0x10050
  6333: 7b 17 10                 u64 [sp + 0x10] = a0
  6336: 7b 67 18                 u64 [s1 + 0x18] = a0
  6339: 82 18 40                 a1 = u64 [sp + 0x40]
  6342: 7b 68 20                 u64 [s1 + 0x20] = a1
  6345: 95 17 ff 07              a0 = sp + 0x7ff
  6349: 95 77 09 04              a0 = a0 + 0x409
  6353: 7b 67 28                 u64 [s1 + 0x28] = a0
  6356: 7b 68 30                 u64 [s1 + 0x30] = a1
  6359: 33 07 10 0b 01           a0 = 0x10b10
  6364: 7b 17 98 01              u64 [sp + 0x198] = a0
  6368: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6373: 49 21 b8 01              u64 [sp + 440] = 0
  6377: 95 17 ff 07              a0 = sp + 0x7ff
  6381: 95 77 b1 03              a0 = a0 + 0x3b1
  6385: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6389: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6394: 95 17 ff 07              a0 = sp + 0x7ff
  6398: 95 77 e1 03              a0 = a0 + 0x3e1
  6402: 95 18 98 01              a1 = sp + 0x198
  6406: 50 20 8c 00 67 1b        ra = 140, jump @720
      :                          @326 [@dyn 70]
  6412: 82 65 50                 s0 = u64 [s1 + 0x50]
  6415: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6418: 95 17 ff 07              a0 = sp + 0x7ff
  6422: 95 77 99 03              a0 = a0 + 0x399
  6426: 82 76 48                 s1 = u64 [a0 + 0x48]
  6429: 33 07 02                 a0 = 0x2
  6432: 33 08                    a1 = 0
  6434: 33 09                    a2 = 0
  6436: 64 5a                    a3 = s0
  6438: 33 00 8e 00              ra = 0x8e
  6442: 0a 64                    ecalli 100 // 'log'
  6444: 01                       fallthrough
      :                          @327 [@dyn 71]
  6445: 82 17 48                 a0 = u64 [sp + 0x48]
  6448: c8 67 07                 a0 = a0 + s1
  6451: 53 27 00 f0 23           jump @333 if a0 <u 4294963200
      :                          @328
  6456: 33 07 20 00 03           a0 = 0x30020
  6461: 95 77 00 10              a0 = a0 + 0x1000
  6465: 01                       fallthrough
      :                          @329
  6466: 82 78                    a1 = u64 [a0]
  6468: c9 87 09                 a2 = a0 - a1
  6471: ab 59 0f                 jump @333 if a2 != s0
      :                          @330
  6474: c9 68 09                 a2 = a1 - s1
  6477: 01                       fallthrough
      :                          @331
  6478: 82 7a                    a3 = u64 [a0]
  6480: ab 8a f2                 jump @329 if a3 != a1
      :                          @332
  6483: 7b 79                    u64 [a0] = a2
  6485: 01                       fallthrough
      :                          @333
  6486: 95 16 ff 07              s1 = sp + 0x7ff
  6490: 95 66 99 03              s1 = s1 + 0x399
  6494: 82 67 70                 a0 = u64 [s1 + 0x70]
  6497: 33 08 01                 a1 = 0x1
  6500: 50 20 90 00 43 2c        ra = 144, jump @1071
      :                          @334 [@dyn 72]
  6506: 95 17 52                 a0 = sp + 0x52
  6509: 33 08 03                 a1 = 0x3
  6512: 95 19 55                 a2 = sp + 0x55
  6515: 33 0a 03                 a3 = 0x3
  6518: 0a 03                    ecalli 3 // 'write'
  6520: 7b 67 78                 u64 [s1 + 0x78] = a0
  6523: 82 17 10                 a0 = u64 [sp + 0x10]
  6526: 7b 67 18                 u64 [s1 + 0x18] = a0
  6529: 95 17 ff 07              a0 = sp + 0x7ff
  6533: 95 77 11 04              a0 = a0 + 0x411
  6537: 7b 67 28                 u64 [s1 + 0x28] = a0
  6540: 33 07 40 0b 01           a0 = 0x10b40
  6545: 7b 17 98 01              u64 [sp + 0x198] = a0
  6549: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6554: 49 21 b8 01              u64 [sp + 440] = 0
  6558: 95 17 ff 07              a0 = sp + 0x7ff
  6562: 95 77 b1 03              a0 = a0 + 0x3b1
  6566: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6570: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6575: 82 17 40                 a0 = u64 [sp + 0x40]
  6578: 7b 67 20                 u64 [s1 + 0x20] = a0
  6581: 7b 67 30                 u64 [s1 + 0x30] = a0
  6584: 95 17 ff 07              a0 = sp + 0x7ff
  6588: 95 77 e1 03              a0 = a0 + 0x3e1
  6592: 95 18 98 01              a1 = sp + 0x198
  6596: 50 20 92 00 a9 1a        ra = 146, jump @720
      :                          @335 [@dyn 73]
  6602: 82 65 50                 s0 = u64 [s1 + 0x50]
  6605: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6608: 82 66 48                 s1 = u64 [s1 + 0x48]
  6611: 33 07 02                 a0 = 0x2
  6614: 33 08                    a1 = 0
  6616: 33 09                    a2 = 0
  6618: 64 5a                    a3 = s0
  6620: 33 00 94 00              ra = 0x94
  6624: 0a 64                    ecalli 100 // 'log'
  6626: 01                       fallthrough
      :                          @336 [@dyn 74]
  6627: 82 17 48                 a0 = u64 [sp + 0x48]
  6630: c8 67 07                 a0 = a0 + s1
  6633: 53 27 00 f0 23           jump @342 if a0 <u 4294963200
      :                          @337
  6638: 33 07 20 00 03           a0 = 0x30020
  6643: 95 77 00 10              a0 = a0 + 0x1000
  6647: 01                       fallthrough
      :                          @338
  6648: 82 78                    a1 = u64 [a0]
  6650: c9 87 09                 a2 = a0 - a1
  6653: ab 59 0f                 jump @342 if a2 != s0
      :                          @339
  6656: c9 68 09                 a2 = a1 - s1
  6659: 01                       fallthrough
      :                          @340
  6660: 82 7a                    a3 = u64 [a0]
  6662: ab 8a f2                 jump @338 if a3 != a1
      :                          @341
  6665: 7b 79                    u64 [a0] = a2
  6667: 01                       fallthrough
      :                          @342
  6668: 95 16 ff 07              s1 = sp + 0x7ff
  6672: 95 66 99 03              s1 = s1 + 0x399
  6676: 82 67 78                 a0 = u64 [s1 + 0x78]
  6679: 33 08 02                 a1 = 0x2
  6682: 33 05 02                 s0 = 0x2
  6685: 50 20 96 00 8a 2b        ra = 150, jump @1071
      :                          @343 [@dyn 75]
  6691: 95 18 52                 a1 = sp + 0x52
  6694: 33 09 03                 a2 = 0x3
  6697: 95 1a 98 00              a3 = sp + 0x98
  6701: 33 0c 00 01              a5 = 0x100
  6705: 82 17 30                 a0 = u64 [sp + 0x30]
  6708: 33 0b                    a4 = 0
  6710: 0a 02                    ecalli 2 // 'read'
  6712: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6716: 82 17 38                 a0 = u64 [sp + 0x38]
  6719: 7b 67 18                 u64 [s1 + 0x18] = a0
  6722: 82 18 40                 a1 = u64 [sp + 0x40]
  6725: 7b 68 20                 u64 [s1 + 0x20] = a1
  6728: 95 17 ff 07              a0 = sp + 0x7ff
  6732: 95 77 19 04              a0 = a0 + 0x419
  6736: 7b 67 28                 u64 [s1 + 0x28] = a0
  6739: 7b 68 30                 u64 [s1 + 0x30] = a1
  6742: 33 07 70 0b 01           a0 = 0x10b70
  6747: 7b 17 98 01              u64 [sp + 0x198] = a0
  6751: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6756: 49 21 b8 01              u64 [sp + 440] = 0
  6760: 95 17 ff 07              a0 = sp + 0x7ff
  6764: 95 77 b1 03              a0 = a0 + 0x3b1
  6768: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6772: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6776: 95 17 ff 07              a0 = sp + 0x7ff
  6780: 95 77 e1 03              a0 = a0 + 0x3e1
  6784: 95 18 98 01              a1 = sp + 0x198
  6788: 50 20 98 00 e9 19        ra = 152, jump @720
      :                          @344 [@dyn 76]
  6794: 82 65 50                 s0 = u64 [s1 + 0x50]
  6797: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6800: 82 66 48                 s1 = u64 [s1 + 0x48]
  6803: 33 07 02                 a0 = 0x2
  6806: 33 08                    a1 = 0
  6808: 33 09                    a2 = 0
  6810: 64 5a                    a3 = s0
  6812: 33 00 9a 00              ra = 0x9a
  6816: 0a 64                    ecalli 100 // 'log'
  6818: 01                       fallthrough
      :                          @345 [@dyn 77]
  6819: 82 17 48                 a0 = u64 [sp + 0x48]
  6822: c8 67 07                 a0 = a0 + s1
  6825: 53 27 00 f0 23           jump @351 if a0 <u 4294963200
      :                          @346
  6830: 33 07 20 00 03           a0 = 0x30020
  6835: 95 77 00 10              a0 = a0 + 0x1000
  6839: 01                       fallthrough
      :                          @347
  6840: 82 78                    a1 = u64 [a0]
  6842: c9 87 09                 a2 = a0 - a1
  6845: ab 59 0f                 jump @351 if a2 != s0
      :                          @348
  6848: c9 68 09                 a2 = a1 - s1
  6851: 01                       fallthrough
      :                          @349
  6852: 82 7a                    a3 = u64 [a0]
  6854: ab 8a f2                 jump @347 if a3 != a1
      :                          @350
  6857: 7b 79                    u64 [a0] = a2
  6859: 01                       fallthrough
      :                          @351
  6860: 95 16 ff 07              s1 = sp + 0x7ff
  6864: 95 66 99 03              s1 = s1 + 0x399
  6868: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6872: 33 08 05                 a1 = 0x5
  6875: 50 20 9c 00 cc 2a        ra = 156, jump @1071
      :                          @352 [@dyn 78]
  6881: 95 17 52                 a0 = sp + 0x52
  6884: 33 08                    a1 = 0
  6886: 0a 0f                    ecalli 15 // 'forget'
  6888: 7b 67                    u64 [s1] = a0
  6890: 33 07 60 00 01           a0 = 0x10060
  6895: 7b 67 18                 u64 [s1 + 0x18] = a0
  6898: 33 07 a0 0b 01           a0 = 0x10ba0
  6903: 7b 17 98 01              u64 [sp + 0x198] = a0
  6907: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6912: 49 21 b8 01              u64 [sp + 440] = 0
  6916: 95 17 ff 07              a0 = sp + 0x7ff
  6920: 95 77 b1 03              a0 = a0 + 0x3b1
  6924: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6928: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6933: 82 17 40                 a0 = u64 [sp + 0x40]
  6936: 7b 67 20                 u64 [s1 + 0x20] = a0
  6939: 7b 66 28                 u64 [s1 + 0x28] = s1
  6942: 7b 67 30                 u64 [s1 + 0x30] = a0
  6945: 95 17 ff 07              a0 = sp + 0x7ff
  6949: 95 77 e1 03              a0 = a0 + 0x3e1
  6953: 95 18 98 01              a1 = sp + 0x198
  6957: 50 20 9e 00 40 19        ra = 158, jump @720
      :                          @353 [@dyn 79]
  6963: 82 65 50                 s0 = u64 [s1 + 0x50]
  6966: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6969: 82 66 48                 s1 = u64 [s1 + 0x48]
  6972: 33 07 02                 a0 = 0x2
  6975: 33 08                    a1 = 0
  6977: 33 09                    a2 = 0
  6979: 64 5a                    a3 = s0
  6981: 33 00 a0 00              ra = 0xa0
  6985: 0a 64                    ecalli 100 // 'log'
  6987: 01                       fallthrough
      :                          @354 [@dyn 80]
  6988: 82 17 48                 a0 = u64 [sp + 0x48]
  6991: c8 67 07                 a0 = a0 + s1
  6994: 53 27 00 f0 00 0a        jump @489 if a0 <u 4294963200
      :                          @355
  7000: 33 07 20 00 03           a0 = 0x30020
  7005: 95 77 00 10              a0 = a0 + 0x1000
  7009: 01                       fallthrough
      :                          @356
  7010: 82 78                    a1 = u64 [a0]
  7012: c9 87 09                 a2 = a0 - a1
  7015: ab 59 eb 09              jump @489 if a2 != s0
      :                          @357
  7019: c9 68 09                 a2 = a1 - s1
  7022: 01                       fallthrough
      :                          @358
  7023: 82 7a                    a3 = u64 [a0]
  7025: ab 8a f1                 jump @356 if a3 != a1
      :                          @359
  7028: 7b 79                    u64 [a0] = a2
  7030: 33 0b                    a4 = 0
  7032: 01                       fallthrough
      :                          @360
  7033: ab 8a e9                 jump @356 if a3 != a1
      :                          @361
  7036: 28 d6 09                 jump @489
      :                          @362 [@dyn 81]
  7039: 95 18 52                 a1 = sp + 0x52
  7042: 33 09 03                 a2 = 0x3
  7045: 95 1a 98 00              a3 = sp + 0x98
  7049: 33 0c 00 01              a5 = 0x100
  7053: 82 17 30                 a0 = u64 [sp + 0x30]
  7056: 33 0b                    a4 = 0
  7058: 0a 02                    ecalli 2 // 'read'
  7060: 7b 67 78                 u64 [s1 + 0x78] = a0
  7063: 82 17 38                 a0 = u64 [sp + 0x38]
  7066: 7b 67 18                 u64 [s1 + 0x18] = a0
  7069: 82 18 40                 a1 = u64 [sp + 0x40]
  7072: 7b 68 20                 u64 [s1 + 0x20] = a1
  7075: 95 17 ff 07              a0 = sp + 0x7ff
  7079: 95 77 11 04              a0 = a0 + 0x411
  7083: 7b 67 28                 u64 [s1 + 0x28] = a0
  7086: 7b 68 30                 u64 [s1 + 0x30] = a1
  7089: 33 07 d0 0b 01           a0 = 0x10bd0
  7094: 7b 17 98 01              u64 [sp + 0x198] = a0
  7098: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7103: 49 21 b8 01              u64 [sp + 440] = 0
  7107: 95 17 ff 07              a0 = sp + 0x7ff
  7111: 95 77 b1 03              a0 = a0 + 0x3b1
  7115: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7119: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7124: 95 17 ff 07              a0 = sp + 0x7ff
  7128: 95 77 e1 03              a0 = a0 + 0x3e1
  7132: 95 18 98 01              a1 = sp + 0x198
  7136: 50 20 a4 00 8d 18        ra = 164, jump @720
      :                          @363 [@dyn 82]
  7142: 82 65 50                 s0 = u64 [s1 + 0x50]
  7145: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7148: 95 17 ff 07              a0 = sp + 0x7ff
  7152: 95 77 99 03              a0 = a0 + 0x399
  7156: 82 76 48                 s1 = u64 [a0 + 0x48]
  7159: 33 07 02                 a0 = 0x2
  7162: 33 08                    a1 = 0
  7164: 33 09                    a2 = 0
  7166: 64 5a                    a3 = s0
  7168: 33 00 a6 00              ra = 0xa6
  7172: 0a 64                    ecalli 100 // 'log'
  7174: 01                       fallthrough
      :                          @364 [@dyn 83]
  7175: 82 17 48                 a0 = u64 [sp + 0x48]
  7178: c8 67 07                 a0 = a0 + s1
  7181: 53 27 00 f0 23           jump @370 if a0 <u 4294963200
      :                          @365
  7186: 33 07 20 00 03           a0 = 0x30020
  7191: 95 77 00 10              a0 = a0 + 0x1000
  7195: 01                       fallthrough
      :                          @366
  7196: 82 78                    a1 = u64 [a0]
  7198: c9 87 09                 a2 = a0 - a1
  7201: ab 59 0f                 jump @370 if a2 != s0
      :                          @367
  7204: c9 68 09                 a2 = a1 - s1
  7207: 01                       fallthrough
      :                          @368
  7208: 82 7a                    a3 = u64 [a0]
  7210: ab 8a f2                 jump @366 if a3 != a1
      :                          @369
  7213: 7b 79                    u64 [a0] = a2
  7215: 01                       fallthrough
      :                          @370
  7216: 95 16 ff 07              s1 = sp + 0x7ff
  7220: 95 66 99 03              s1 = s1 + 0x399
  7224: 82 67 78                 a0 = u64 [s1 + 0x78]
  7227: 33 08 01                 a1 = 0x1
  7230: 50 20 a8 00 69 29        ra = 168, jump @1071
      :                          @371 [@dyn 84]
  7236: 95 17 52                 a0 = sp + 0x52
  7239: 33 08 03                 a1 = 0x3
  7242: 33 09                    a2 = 0
  7244: 33 0a                    a3 = 0
  7246: 0a 03                    ecalli 3 // 'write'
  7248: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7252: 95 17 ff 07              a0 = sp + 0x7ff
  7256: 95 77 19 04              a0 = a0 + 0x419
  7260: 7b 67 28                 u64 [s1 + 0x28] = a0
  7263: 33 07 00 0c 01           a0 = 0x10c00
  7268: 7b 17 98 01              u64 [sp + 0x198] = a0
  7272: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7277: 49 21 b8 01              u64 [sp + 440] = 0
  7281: 95 17 ff 07              a0 = sp + 0x7ff
  7285: 95 77 b1 03              a0 = a0 + 0x3b1
  7289: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7293: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7298: 82 17 38                 a0 = u64 [sp + 0x38]
  7301: 7b 67 18                 u64 [s1 + 0x18] = a0
  7304: 82 17 40                 a0 = u64 [sp + 0x40]
  7307: 7b 67 20                 u64 [s1 + 0x20] = a0
  7310: 7b 67 30                 u64 [s1 + 0x30] = a0
  7313: 95 17 ff 07              a0 = sp + 0x7ff
  7317: 95 77 e1 03              a0 = a0 + 0x3e1
  7321: 95 18 98 01              a1 = sp + 0x198
  7325: 50 20 aa 00 d0 17        ra = 170, jump @720
      :                          @372 [@dyn 85]
  7331: 82 65 50                 s0 = u64 [s1 + 0x50]
  7334: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7337: 82 66 48                 s1 = u64 [s1 + 0x48]
  7340: 33 07 02                 a0 = 0x2
  7343: 33 08                    a1 = 0
  7345: 33 09                    a2 = 0
  7347: 64 5a                    a3 = s0
  7349: 33 00 ac 00              ra = 0xac
  7353: 0a 64                    ecalli 100 // 'log'
  7355: 01                       fallthrough
      :                          @373 [@dyn 86]
  7356: 82 17 48                 a0 = u64 [sp + 0x48]
  7359: c8 67 07                 a0 = a0 + s1
  7362: 53 27 00 f0 23           jump @379 if a0 <u 4294963200
      :                          @374
  7367: 33 07 20 00 03           a0 = 0x30020
  7372: 95 77 00 10              a0 = a0 + 0x1000
  7376: 01                       fallthrough
      :                          @375
  7377: 82 78                    a1 = u64 [a0]
  7379: c9 87 09                 a2 = a0 - a1
  7382: ab 59 0f                 jump @379 if a2 != s0
      :                          @376
  7385: c9 68 09                 a2 = a1 - s1
  7388: 01                       fallthrough
      :                          @377
  7389: 82 7a                    a3 = u64 [a0]
  7391: ab 8a f2                 jump @375 if a3 != a1
      :                          @378
  7394: 7b 79                    u64 [a0] = a2
  7396: 01                       fallthrough
      :                          @379
  7397: 95 16 ff 07              s1 = sp + 0x7ff
  7401: 95 66 99 03              s1 = s1 + 0x399
  7405: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7409: 33 08 02                 a1 = 0x2
  7412: 33 05 02                 s0 = 0x2
  7415: 50 20 ae 00 b0 28        ra = 174, jump @1071
      :                          @380 [@dyn 87]
  7421: 95 18 52                 a1 = sp + 0x52
  7424: 33 09 03                 a2 = 0x3
  7427: 95 1a 98 00              a3 = sp + 0x98
  7431: 33 0c 00 01              a5 = 0x100
  7435: 82 17 30                 a0 = u64 [sp + 0x30]
  7438: 33 0b                    a4 = 0
  7440: 0a 02                    ecalli 2 // 'read'
  7442: 7b 67                    u64 [s1] = a0
  7444: 33 07 50 00 01           a0 = 0x10050
  7449: 7b 67 18                 u64 [s1 + 0x18] = a0
  7452: 33 07 30 0c 01           a0 = 0x10c30
  7457: 7b 17 98 01              u64 [sp + 0x198] = a0
  7461: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7466: 49 21 b8 01              u64 [sp + 440] = 0
  7470: 95 17 ff 07              a0 = sp + 0x7ff
  7474: 95 77 b1 03              a0 = a0 + 0x3b1
  7478: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7482: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7486: 82 17 40                 a0 = u64 [sp + 0x40]
  7489: 7b 67 20                 u64 [s1 + 0x20] = a0
  7492: 7b 66 28                 u64 [s1 + 0x28] = s1
  7495: 7b 67 30                 u64 [s1 + 0x30] = a0
  7498: 95 17 ff 07              a0 = sp + 0x7ff
  7502: 95 77 e1 03              a0 = a0 + 0x3e1
  7506: 95 18 98 01              a1 = sp + 0x198
  7510: 50 20 b0 00 17 17        ra = 176, jump @720
      :                          @381 [@dyn 88]
  7516: 82 65 50                 s0 = u64 [s1 + 0x50]
  7519: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7522: 82 66 48                 s1 = u64 [s1 + 0x48]
  7525: 33 07 02                 a0 = 0x2
  7528: 33 08                    a1 = 0
  7530: 33 09                    a2 = 0
  7532: 64 5a                    a3 = s0
  7534: 33 00 b2 00              ra = 0xb2
  7538: 0a 64                    ecalli 100 // 'log'
  7540: 01                       fallthrough
      :                          @382 [@dyn 89]
  7541: 82 17 48                 a0 = u64 [sp + 0x48]
  7544: c8 67 07                 a0 = a0 + s1
  7547: 53 27 00 f0 30 02        jump @416 if a0 <u 4294963200
      :                          @383
  7553: 33 07 20 00 03           a0 = 0x30020
  7558: 95 77 00 10              a0 = a0 + 0x1000
  7562: 01                       fallthrough
      :                          @384
  7563: 82 78                    a1 = u64 [a0]
  7565: c9 87 09                 a2 = a0 - a1
  7568: ab 59 1b 02              jump @416 if a2 != s0
      :                          @385
  7572: c9 68 09                 a2 = a1 - s1
  7575: 01                       fallthrough
      :                          @386
  7576: 82 7a                    a3 = u64 [a0]
  7578: ab 8a f1                 jump @384 if a3 != a1
      :                          @387
  7581: 7b 79                    u64 [a0] = a2
  7583: 33 0b                    a4 = 0
  7585: 01                       fallthrough
      :                          @388
  7586: ab 8a e9                 jump @384 if a3 != a1
      :                          @389
  7589: 28 06 02                 jump @416
      :                          @390 [@dyn 90]
  7592: 33 05 03                 s0 = 0x3
  7595: 95 17 58                 a0 = sp + 0x58
  7598: 33 08 03                 a1 = 0x3
  7601: 0a 0e                    ecalli 14 // 'solicit'
  7603: 7b 67 78                 u64 [s1 + 0x78] = a0
  7606: 82 17 38                 a0 = u64 [sp + 0x38]
  7609: 7b 67 18                 u64 [s1 + 0x18] = a0
  7612: 82 18 40                 a1 = u64 [sp + 0x40]
  7615: 7b 68 20                 u64 [s1 + 0x20] = a1
  7618: 95 17 ff 07              a0 = sp + 0x7ff
  7622: 95 77 11 04              a0 = a0 + 0x411
  7626: 7b 67 28                 u64 [s1 + 0x28] = a0
  7629: 7b 68 30                 u64 [s1 + 0x30] = a1
  7632: 33 07 60 0c 01           a0 = 0x10c60
  7637: 7b 17 98 01              u64 [sp + 0x198] = a0
  7641: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  7645: 49 21 b8 01              u64 [sp + 440] = 0
  7649: 95 17 ff 07              a0 = sp + 0x7ff
  7653: 95 77 b1 03              a0 = a0 + 0x3b1
  7657: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7661: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7666: 95 17 ff 07              a0 = sp + 0x7ff
  7670: 95 77 e1 03              a0 = a0 + 0x3e1
  7674: 95 18 98 01              a1 = sp + 0x198
  7678: 50 20 b6 00 6f 16        ra = 182, jump @720
      :                          @391 [@dyn 91]
  7684: 82 65 50                 s0 = u64 [s1 + 0x50]
  7687: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7690: 95 17 ff 07              a0 = sp + 0x7ff
  7694: 95 77 99 03              a0 = a0 + 0x399
  7698: 82 76 48                 s1 = u64 [a0 + 0x48]
  7701: 33 07 02                 a0 = 0x2
  7704: 33 08                    a1 = 0
  7706: 33 09                    a2 = 0
  7708: 64 5a                    a3 = s0
  7710: 33 00 b8 00              ra = 0xb8
  7714: 0a 64                    ecalli 100 // 'log'
  7716: 01                       fallthrough
      :                          @392 [@dyn 92]
  7717: 82 17 48                 a0 = u64 [sp + 0x48]
  7720: c8 67 07                 a0 = a0 + s1
  7723: 53 27 00 f0 23           jump @398 if a0 <u 4294963200
      :                          @393
  7728: 33 07 20 00 03           a0 = 0x30020
  7733: 95 77 00 10              a0 = a0 + 0x1000
  7737: 01                       fallthrough
      :                          @394
  7738: 82 78                    a1 = u64 [a0]
  7740: c9 87 09                 a2 = a0 - a1
  7743: ab 59 0f                 jump @398 if a2 != s0
      :                          @395
  7746: c9 68 09                 a2 = a1 - s1
  7749: 01                       fallthrough
      :                          @396
  7750: 82 7a                    a3 = u64 [a0]
  7752: ab 8a f2                 jump @394 if a3 != a1
      :                          @397
  7755: 7b 79                    u64 [a0] = a2
  7757: 01                       fallthrough
      :                          @398
  7758: 95 16 ff 07              s1 = sp + 0x7ff
  7762: 95 66 99 03              s1 = s1 + 0x399
  7766: 82 67 78                 a0 = u64 [s1 + 0x78]
  7769: 33 08 01                 a1 = 0x1
  7772: 50 20 ba 00 4b 27        ra = 186, jump @1071
      :                          @399 [@dyn 93]
  7778: 95 17 58                 a0 = sp + 0x58
  7781: 33 08 03                 a1 = 0x3
  7784: 0a 0d                    ecalli 13 // 'query'
  7786: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7790: 95 17 ff 07              a0 = sp + 0x7ff
  7794: 95 77 19 04              a0 = a0 + 0x419
  7798: 7b 67 28                 u64 [s1 + 0x28] = a0
  7801: 33 07 90 0c 01           a0 = 0x10c90
  7806: 7b 17 98 01              u64 [sp + 0x198] = a0
  7810: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7815: 49 21 b8 01              u64 [sp + 440] = 0
  7819: 95 17 ff 07              a0 = sp + 0x7ff
  7823: 95 77 b1 03              a0 = a0 + 0x3b1
  7827: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7831: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7836: 82 17 38                 a0 = u64 [sp + 0x38]
  7839: 7b 67 18                 u64 [s1 + 0x18] = a0
  7842: 82 17 40                 a0 = u64 [sp + 0x40]
  7845: 7b 67 20                 u64 [s1 + 0x20] = a0
  7848: 7b 67 30                 u64 [s1 + 0x30] = a0
  7851: 95 17 ff 07              a0 = sp + 0x7ff
  7855: 95 77 e1 03              a0 = a0 + 0x3e1
  7859: 95 18 98 01              a1 = sp + 0x198
  7863: 50 20 bc 00 b6 15        ra = 188, jump @720
      :                          @400 [@dyn 94]
  7869: 82 65 50                 s0 = u64 [s1 + 0x50]
  7872: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7875: 82 66 48                 s1 = u64 [s1 + 0x48]
  7878: 33 07 02                 a0 = 0x2
  7881: 33 08                    a1 = 0
  7883: 33 09                    a2 = 0
  7885: 64 5a                    a3 = s0
  7887: 33 00 be 00              ra = 0xbe
  7891: 0a 64                    ecalli 100 // 'log'
  7893: 01                       fallthrough
      :                          @401 [@dyn 95]
  7894: 82 17 48                 a0 = u64 [sp + 0x48]
  7897: c8 67 07                 a0 = a0 + s1
  7900: 53 27 00 f0 23           jump @407 if a0 <u 4294963200
      :                          @402
  7905: 33 07 20 00 03           a0 = 0x30020
  7910: 95 77 00 10              a0 = a0 + 0x1000
  7914: 01                       fallthrough
      :                          @403
  7915: 82 78                    a1 = u64 [a0]
  7917: c9 87 09                 a2 = a0 - a1
  7920: ab 59 0f                 jump @407 if a2 != s0
      :                          @404
  7923: c9 68 09                 a2 = a1 - s1
  7926: 01                       fallthrough
      :                          @405
  7927: 82 7a                    a3 = u64 [a0]
  7929: ab 8a f2                 jump @403 if a3 != a1
      :                          @406
  7932: 7b 79                    u64 [a0] = a2
  7934: 01                       fallthrough
      :                          @407
  7935: 95 16 ff 07              s1 = sp + 0x7ff
  7939: 95 66 99 03              s1 = s1 + 0x399
  7943: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7947: 33 08 02                 a1 = 0x2
  7950: 33 05 02                 s0 = 0x2
  7953: 50 20 c0 00 96 26        ra = 192, jump @1071
      :                          @408 [@dyn 96]
  7959: 95 17 78                 a0 = sp + 0x78
  7962: 33 08 03                 a1 = 0x3
  7965: 0a 0d                    ecalli 13 // 'query'
  7967: 7b 67                    u64 [s1] = a0
  7969: 33 07 50 00 01           a0 = 0x10050
  7974: 7b 67 18                 u64 [s1 + 0x18] = a0
  7977: 33 07 c0 0c 01           a0 = 0x10cc0
  7982: 7b 17 98 01              u64 [sp + 0x198] = a0
  7986: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7991: 49 21 b8 01              u64 [sp + 440] = 0
  7995: 95 17 ff 07              a0 = sp + 0x7ff
  7999: 95 77 b1 03              a0 = a0 + 0x3b1
  8003: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8007: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8011: 82 17 40                 a0 = u64 [sp + 0x40]
  8014: 7b 67 20                 u64 [s1 + 0x20] = a0
  8017: 7b 66 28                 u64 [s1 + 0x28] = s1
  8020: 7b 67 30                 u64 [s1 + 0x30] = a0
  8023: 95 17 ff 07              a0 = sp + 0x7ff
  8027: 95 77 e1 03              a0 = a0 + 0x3e1
  8031: 95 18 98 01              a1 = sp + 0x198
  8035: 50 20 c2 00 0a 15        ra = 194, jump @720
      :                          @409 [@dyn 97]
  8041: 82 65 50                 s0 = u64 [s1 + 0x50]
  8044: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8047: 82 66 48                 s1 = u64 [s1 + 0x48]
  8050: 33 07 02                 a0 = 0x2
  8053: 33 08                    a1 = 0
  8055: 33 09                    a2 = 0
  8057: 64 5a                    a3 = s0
  8059: 33 00 c4 00              ra = 0xc4
  8063: 0a 64                    ecalli 100 // 'log'
  8065: 01                       fallthrough
      :                          @410 [@dyn 98]
  8066: 82 17 48                 a0 = u64 [sp + 0x48]
  8069: c8 67 07                 a0 = a0 + s1
  8072: 53 27 00 f0 23           jump @416 if a0 <u 4294963200
      :                          @411
  8077: 33 07 20 00 03           a0 = 0x30020
  8082: 95 77 00 10              a0 = a0 + 0x1000
  8086: 01                       fallthrough
      :                          @412
  8087: 82 78                    a1 = u64 [a0]
  8089: c9 87 09                 a2 = a0 - a1
  8092: ab 59 0f                 jump @416 if a2 != s0
      :                          @413
  8095: c9 68 09                 a2 = a1 - s1
  8098: 01                       fallthrough
      :                          @414
  8099: 82 7a                    a3 = u64 [a0]
  8101: ab 8a f2                 jump @412 if a3 != a1
      :                          @415
  8104: 7b 79                    u64 [a0] = a2
  8106: 01                       fallthrough
      :                          @416
  8107: 95 16 ff 07              s1 = sp + 0x7ff
  8111: 95 66 99 03              s1 = s1 + 0x399
  8115: 82 67                    a0 = u64 [s1]
  8117: 33 08 05                 a1 = 0x5
  8120: 33 00 54 01              ra = 0x154
  8124: 28 eb 25                 jump @1071
      :                          @417 [@dyn 99]
  8127: 33 05 03                 s0 = 0x3
  8130: 95 17 58                 a0 = sp + 0x58
  8133: 33 08 03                 a1 = 0x3
  8136: 0a 0f                    ecalli 15 // 'forget'
  8138: 7b 67 78                 u64 [s1 + 0x78] = a0
  8141: 82 17 38                 a0 = u64 [sp + 0x38]
  8144: 7b 67 18                 u64 [s1 + 0x18] = a0
  8147: 82 17 40                 a0 = u64 [sp + 0x40]
  8150: 7b 67 20                 u64 [s1 + 0x20] = a0
  8153: 95 18 ff 07              a1 = sp + 0x7ff
  8157: 95 88 11 04              a1 = a1 + 0x411
  8161: 7b 68 28                 u64 [s1 + 0x28] = a1
  8164: 7b 67 30                 u64 [s1 + 0x30] = a0
  8167: 33 07 f0 0c 01           a0 = 0x10cf0
  8172: 7b 17 98 01              u64 [sp + 0x198] = a0
  8176: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  8180: 49 21 b8 01              u64 [sp + 440] = 0
  8184: 95 17 ff 07              a0 = sp + 0x7ff
  8188: 95 77 b1 03              a0 = a0 + 0x3b1
  8192: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8196: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8201: 95 17 ff 07              a0 = sp + 0x7ff
  8205: 95 77 e1 03              a0 = a0 + 0x3e1
  8209: 95 18 98 01              a1 = sp + 0x198
  8213: 50 20 c8 00 58 14        ra = 200, jump @720
      :                          @418 [@dyn 100]
  8219: 82 65 50                 s0 = u64 [s1 + 0x50]
  8222: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8225: 95 17 ff 07              a0 = sp + 0x7ff
  8229: 95 77 99 03              a0 = a0 + 0x399
  8233: 82 76 48                 s1 = u64 [a0 + 0x48]
  8236: 33 07 02                 a0 = 0x2
  8239: 33 08                    a1 = 0
  8241: 33 09                    a2 = 0
  8243: 64 5a                    a3 = s0
  8245: 33 00 ca 00              ra = 0xca
  8249: 0a 64                    ecalli 100 // 'log'
  8251: 01                       fallthrough
      :                          @419 [@dyn 101]
  8252: 82 17 48                 a0 = u64 [sp + 0x48]
  8255: c8 67 07                 a0 = a0 + s1
  8258: 53 27 00 f0 23           jump @425 if a0 <u 4294963200
      :                          @420
  8263: 33 07 20 00 03           a0 = 0x30020
  8268: 95 77 00 10              a0 = a0 + 0x1000
  8272: 01                       fallthrough
      :                          @421
  8273: 82 78                    a1 = u64 [a0]
  8275: c9 87 09                 a2 = a0 - a1
  8278: ab 59 0f                 jump @425 if a2 != s0
      :                          @422
  8281: c9 68 09                 a2 = a1 - s1
  8284: 01                       fallthrough
      :                          @423
  8285: 82 7a                    a3 = u64 [a0]
  8287: ab 8a f2                 jump @421 if a3 != a1
      :                          @424
  8290: 7b 79                    u64 [a0] = a2
  8292: 01                       fallthrough
      :                          @425
  8293: 95 15 ff 07              s0 = sp + 0x7ff
  8297: 95 55 99 03              s0 = s0 + 0x399
  8301: 82 57 78                 a0 = u64 [s0 + 0x78]
  8304: 33 08 01                 a1 = 0x1
  8307: 50 20 cc 00 34 25        ra = 204, jump @1071
      :                          @426 [@dyn 102]
  8313: 95 17 58                 a0 = sp + 0x58
  8316: 33 08 03                 a1 = 0x3
  8319: 0a 0d                    ecalli 13 // 'query'
  8321: 7b 17 10                 u64 [sp + 0x10] = a0
  8324: 95 17 ff 07              a0 = sp + 0x7ff
  8328: 95 77 11 04              a0 = a0 + 0x411
  8332: 7b 57 28                 u64 [s0 + 0x28] = a0
  8335: 33 07 20 0d 01           a0 = 0x10d20
  8340: 7b 17 98 01              u64 [sp + 0x198] = a0
  8344: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8349: 49 21 b8 01              u64 [sp + 440] = 0
  8353: 95 17 ff 07              a0 = sp + 0x7ff
  8357: 95 77 b1 03              a0 = a0 + 0x3b1
  8361: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8365: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8370: 82 17 38                 a0 = u64 [sp + 0x38]
  8373: 7b 57 18                 u64 [s0 + 0x18] = a0
  8376: 82 17 40                 a0 = u64 [sp + 0x40]
  8379: 7b 57 20                 u64 [s0 + 0x20] = a0
  8382: 7b 57 30                 u64 [s0 + 0x30] = a0
  8385: 95 17 ff 07              a0 = sp + 0x7ff
  8389: 95 77 e1 03              a0 = a0 + 0x3e1
  8393: 95 18 98 01              a1 = sp + 0x198
  8397: 50 20 ce 00 a0 13        ra = 206, jump @720
      :                          @427 [@dyn 103]
  8403: 82 56 50                 s1 = u64 [s0 + 0x50]
  8406: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8409: 82 55 48                 s0 = u64 [s0 + 0x48]
  8412: 33 07 02                 a0 = 0x2
  8415: 33 08                    a1 = 0
  8417: 33 09                    a2 = 0
  8419: 64 6a                    a3 = s1
  8421: 33 00 d0 00              ra = 0xd0
  8425: 0a 64                    ecalli 100 // 'log'
  8427: 01                       fallthrough
      :                          @428 [@dyn 104]
  8428: 82 17 48                 a0 = u64 [sp + 0x48]
  8431: c8 57 07                 a0 = a0 + s0
  8434: 53 27 00 f0 23           jump @434 if a0 <u 4294963200
      :                          @429
  8439: 33 07 20 00 03           a0 = 0x30020
  8444: 95 77 00 10              a0 = a0 + 0x1000
  8448: 01                       fallthrough
      :                          @430
  8449: 82 78                    a1 = u64 [a0]
  8451: c9 87 09                 a2 = a0 - a1
  8454: ab 69 0f                 jump @434 if a2 != s1
      :                          @431
  8457: c9 58 09                 a2 = a1 - s0
  8460: 01                       fallthrough
      :                          @432
  8461: 82 7a                    a3 = u64 [a0]
  8463: ab 8a f2                 jump @430 if a3 != a1
      :                          @433
  8466: 7b 79                    u64 [a0] = a2
  8468: 01                       fallthrough
      :                          @434
  8469: 33 08 02                 a1 = 0x2
  8472: 33 05 02                 s0 = 0x2
  8475: 82 17 10                 a0 = u64 [sp + 0x10]
  8478: 50 20 d2 00 89 24        ra = 210, jump @1071
      :                          @435 [@dyn 105]
  8484: 95 18 78                 a1 = sp + 0x78
  8487: 95 19 98 00              a2 = sp + 0x98
  8491: 33 0b 03                 a4 = 0x3
  8494: 82 17 30                 a0 = u64 [sp + 0x30]
  8497: 33 0a                    a3 = 0
  8499: 0a 01                    ecalli 1 // 'lookup'
  8501: 95 16 ff 07              s1 = sp + 0x7ff
  8505: 95 66 99 03              s1 = s1 + 0x399
  8509: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8513: 33 07 50 00 01           a0 = 0x10050
  8518: 7b 67 18                 u64 [s1 + 0x18] = a0
  8521: 82 18 40                 a1 = u64 [sp + 0x40]
  8524: 7b 68 20                 u64 [s1 + 0x20] = a1
  8527: 95 17 ff 07              a0 = sp + 0x7ff
  8531: 95 77 19 04              a0 = a0 + 0x419
  8535: 7b 67 28                 u64 [s1 + 0x28] = a0
  8538: 7b 68 30                 u64 [s1 + 0x30] = a1
  8541: 33 07 50 0d 01           a0 = 0x10d50
  8546: 7b 17 98 01              u64 [sp + 0x198] = a0
  8550: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8555: 49 21 b8 01              u64 [sp + 440] = 0
  8559: 95 17 ff 07              a0 = sp + 0x7ff
  8563: 95 77 b1 03              a0 = a0 + 0x3b1
  8567: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8571: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8575: 95 17 ff 07              a0 = sp + 0x7ff
  8579: 95 77 e1 03              a0 = a0 + 0x3e1
  8583: 95 18 98 01              a1 = sp + 0x198
  8587: 50 20 d4 00 e2 12        ra = 212, jump @720
      :                          @436 [@dyn 106]
  8593: 82 65 50                 s0 = u64 [s1 + 0x50]
  8596: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8599: 82 66 48                 s1 = u64 [s1 + 0x48]
  8602: 33 07 02                 a0 = 0x2
  8605: 33 08                    a1 = 0
  8607: 33 09                    a2 = 0
  8609: 64 5a                    a3 = s0
  8611: 33 00 d6 00              ra = 0xd6
  8615: 0a 64                    ecalli 100 // 'log'
  8617: 01                       fallthrough
      :                          @437 [@dyn 107]
  8618: 82 17 48                 a0 = u64 [sp + 0x48]
  8621: c8 67 07                 a0 = a0 + s1
  8624: 53 27 00 f0 23           jump @443 if a0 <u 4294963200
      :                          @438
  8629: 33 07 20 00 03           a0 = 0x30020
  8634: 95 77 00 10              a0 = a0 + 0x1000
  8638: 01                       fallthrough
      :                          @439
  8639: 82 78                    a1 = u64 [a0]
  8641: c9 87 09                 a2 = a0 - a1
  8644: ab 59 0f                 jump @443 if a2 != s0
      :                          @440
  8647: c9 68 09                 a2 = a1 - s1
  8650: 01                       fallthrough
      :                          @441
  8651: 82 7a                    a3 = u64 [a0]
  8653: ab 8a f2                 jump @439 if a3 != a1
      :                          @442
  8656: 7b 79                    u64 [a0] = a2
  8658: 01                       fallthrough
      :                          @443
  8659: 95 16 ff 07              s1 = sp + 0x7ff
  8663: 95 66 99 03              s1 = s1 + 0x399
  8667: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8671: 33 08 05                 a1 = 0x5
  8674: 50 20 d8 00 c5 23        ra = 216, jump @1071
      :                          @444 [@dyn 108]
  8680: 33 07 e8 03              a0 = 0x3e8
  8684: 95 18 52                 a1 = sp + 0x52
  8687: 0a 06                    ecalli 6 // 'assign'
  8689: 7b 67                    u64 [s1] = a0
  8691: 33 07 38 00 01           a0 = 0x10038
  8696: 7b 67 18                 u64 [s1 + 0x18] = a0
  8699: 33 07 80 0d 01           a0 = 0x10d80
  8704: 7b 17 98 01              u64 [sp + 0x198] = a0
  8708: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8713: 49 21 b8 01              u64 [sp + 440] = 0
  8717: 95 17 ff 07              a0 = sp + 0x7ff
  8721: 95 77 b1 03              a0 = a0 + 0x3b1
  8725: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8729: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8734: 82 17 40                 a0 = u64 [sp + 0x40]
  8737: 7b 67 20                 u64 [s1 + 0x20] = a0
  8740: 7b 66 28                 u64 [s1 + 0x28] = s1
  8743: 7b 67 30                 u64 [s1 + 0x30] = a0
  8746: 95 17 ff 07              a0 = sp + 0x7ff
  8750: 95 77 e1 03              a0 = a0 + 0x3e1
  8754: 95 18 98 01              a1 = sp + 0x198
  8758: 50 20 da 00 37 12        ra = 218, jump @720
      :                          @445 [@dyn 109]
  8764: 82 65 50                 s0 = u64 [s1 + 0x50]
  8767: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8770: 82 66 48                 s1 = u64 [s1 + 0x48]
  8773: 33 07 02                 a0 = 0x2
  8776: 33 08                    a1 = 0
  8778: 33 09                    a2 = 0
  8780: 64 5a                    a3 = s0
  8782: 33 00 dc 00              ra = 0xdc
  8786: 0a 64                    ecalli 100 // 'log'
  8788: 01                       fallthrough
      :                          @446 [@dyn 110]
  8789: 82 17 48                 a0 = u64 [sp + 0x48]
  8792: c8 67 07                 a0 = a0 + s1
  8795: 53 27 00 f0 f7 02        jump @489 if a0 <u 4294963200
      :                          @447
  8801: 33 07 20 00 03           a0 = 0x30020
  8806: 95 77 00 10              a0 = a0 + 0x1000
  8810: 01                       fallthrough
      :                          @448
  8811: 82 78                    a1 = u64 [a0]
  8813: c9 87 09                 a2 = a0 - a1
  8816: ab 59 e2 02              jump @489 if a2 != s0
      :                          @449
  8820: c9 68 09                 a2 = a1 - s1
  8823: 01                       fallthrough
      :                          @450
  8824: 82 7a                    a3 = u64 [a0]
  8826: ab 8a f1                 jump @448 if a3 != a1
      :                          @451
  8829: 7b 79                    u64 [a0] = a2
  8831: 33 0b                    a4 = 0
  8833: 01                       fallthrough
      :                          @452
  8834: ab 8a e9                 jump @448 if a3 != a1
      :                          @453
  8837: 28 cd 02                 jump @489
      :                          @454 [@dyn 111]
  8840: 95 18 58                 a1 = sp + 0x58
  8843: 95 19 98 00              a2 = sp + 0x98
  8847: 33 0b 03                 a4 = 0x3
  8850: 82 17 30                 a0 = u64 [sp + 0x30]
  8853: 33 0a                    a3 = 0
  8855: 0a 01                    ecalli 1 // 'lookup'
  8857: 7b 67 70                 u64 [s1 + 0x70] = a0
  8860: 82 17 38                 a0 = u64 [sp + 0x38]
  8863: 7b 67 18                 u64 [s1 + 0x18] = a0
  8866: 82 18 40                 a1 = u64 [sp + 0x40]
  8869: 7b 68 20                 u64 [s1 + 0x20] = a1
  8872: 95 17 ff 07              a0 = sp + 0x7ff
  8876: 95 77 09 04              a0 = a0 + 0x409
  8880: 7b 67 28                 u64 [s1 + 0x28] = a0
  8883: 7b 68 30                 u64 [s1 + 0x30] = a1
  8886: 33 07 b0 0d 01           a0 = 0x10db0
  8891: 7b 17 98 01              u64 [sp + 0x198] = a0
  8895: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8900: 49 21 b8 01              u64 [sp + 440] = 0
  8904: 95 17 ff 07              a0 = sp + 0x7ff
  8908: 95 77 b1 03              a0 = a0 + 0x3b1
  8912: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8916: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8921: 95 17 ff 07              a0 = sp + 0x7ff
  8925: 95 77 e1 03              a0 = a0 + 0x3e1
  8929: 95 18 98 01              a1 = sp + 0x198
  8933: 50 20 e0 00 88 11        ra = 224, jump @720
      :                          @455 [@dyn 112]
  8939: 82 65 50                 s0 = u64 [s1 + 0x50]
  8942: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8945: 95 17 ff 07              a0 = sp + 0x7ff
  8949: 95 77 99 03              a0 = a0 + 0x399
  8953: 82 76 48                 s1 = u64 [a0 + 0x48]
  8956: 33 07 02                 a0 = 0x2
  8959: 33 08                    a1 = 0
  8961: 33 09                    a2 = 0
  8963: 64 5a                    a3 = s0
  8965: 33 00 e2 00              ra = 0xe2
  8969: 0a 64                    ecalli 100 // 'log'
  8971: 01                       fallthrough
      :                          @456 [@dyn 113]
  8972: 82 17 48                 a0 = u64 [sp + 0x48]
  8975: c8 67 07                 a0 = a0 + s1
  8978: 53 27 00 f0 23           jump @462 if a0 <u 4294963200
      :                          @457
  8983: 33 07 20 00 03           a0 = 0x30020
  8988: 95 77 00 10              a0 = a0 + 0x1000
  8992: 01                       fallthrough
      :                          @458
  8993: 82 78                    a1 = u64 [a0]
  8995: c9 87 09                 a2 = a0 - a1
  8998: ab 59 0f                 jump @462 if a2 != s0
      :                          @459
  9001: c9 68 09                 a2 = a1 - s1
  9004: 01                       fallthrough
      :                          @460
  9005: 82 7a                    a3 = u64 [a0]
  9007: ab 8a f2                 jump @458 if a3 != a1
      :                          @461
  9010: 7b 79                    u64 [a0] = a2
  9012: 01                       fallthrough
      :                          @462
  9013: 95 16 ff 07              s1 = sp + 0x7ff
  9017: 95 66 99 03              s1 = s1 + 0x399
  9021: 82 67 70                 a0 = u64 [s1 + 0x70]
  9024: 33 08 01                 a1 = 0x1
  9027: 50 20 e4 00 64 22        ra = 228, jump @1071
      :                          @463 [@dyn 114]
  9033: 95 17 58                 a0 = sp + 0x58
  9036: 33 08 03                 a1 = 0x3
  9039: 0a 0d                    ecalli 13 // 'query'
  9041: 7b 67 78                 u64 [s1 + 0x78] = a0
  9044: 95 17 ff 07              a0 = sp + 0x7ff
  9048: 95 77 11 04              a0 = a0 + 0x411
  9052: 7b 67 28                 u64 [s1 + 0x28] = a0
  9055: 33 07 90 0c 01           a0 = 0x10c90
  9060: 7b 17 98 01              u64 [sp + 0x198] = a0
  9064: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9069: 49 21 b8 01              u64 [sp + 440] = 0
  9073: 95 17 ff 07              a0 = sp + 0x7ff
  9077: 95 77 b1 03              a0 = a0 + 0x3b1
  9081: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9085: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9090: 82 17 38                 a0 = u64 [sp + 0x38]
  9093: 7b 67 18                 u64 [s1 + 0x18] = a0
  9096: 82 17 40                 a0 = u64 [sp + 0x40]
  9099: 7b 67 20                 u64 [s1 + 0x20] = a0
  9102: 7b 67 30                 u64 [s1 + 0x30] = a0
  9105: 95 17 ff 07              a0 = sp + 0x7ff
  9109: 95 77 e1 03              a0 = a0 + 0x3e1
  9113: 95 18 98 01              a1 = sp + 0x198
  9117: 50 20 e6 00 d0 10        ra = 230, jump @720
      :                          @464 [@dyn 115]
  9123: 82 65 50                 s0 = u64 [s1 + 0x50]
  9126: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9129: 82 66 48                 s1 = u64 [s1 + 0x48]
  9132: 33 07 02                 a0 = 0x2
  9135: 33 08                    a1 = 0
  9137: 33 09                    a2 = 0
  9139: 64 5a                    a3 = s0
  9141: 33 00 e8 00              ra = 0xe8
  9145: 0a 64                    ecalli 100 // 'log'
  9147: 01                       fallthrough
      :                          @465 [@dyn 116]
  9148: 82 17 48                 a0 = u64 [sp + 0x48]
  9151: c8 67 07                 a0 = a0 + s1
  9154: 53 27 00 f0 23           jump @471 if a0 <u 4294963200
      :                          @466
  9159: 33 07 20 00 03           a0 = 0x30020
  9164: 95 77 00 10              a0 = a0 + 0x1000
  9168: 01                       fallthrough
      :                          @467
  9169: 82 78                    a1 = u64 [a0]
  9171: c9 87 09                 a2 = a0 - a1
  9174: ab 59 0f                 jump @471 if a2 != s0
      :                          @468
  9177: c9 68 09                 a2 = a1 - s1
  9180: 01                       fallthrough
      :                          @469
  9181: 82 7a                    a3 = u64 [a0]
  9183: ab 8a f2                 jump @467 if a3 != a1
      :                          @470
  9186: 7b 79                    u64 [a0] = a2
  9188: 01                       fallthrough
      :                          @471
  9189: 95 16 ff 07              s1 = sp + 0x7ff
  9193: 95 66 99 03              s1 = s1 + 0x399
  9197: 82 67 78                 a0 = u64 [s1 + 0x78]
  9200: 33 08 02                 a1 = 0x2
  9203: 33 05 02                 s0 = 0x2
  9206: 50 20 ea 00 b1 21        ra = 234, jump @1071
      :                          @472 [@dyn 117]
  9212: 95 18 58                 a1 = sp + 0x58
  9215: 82 17 30                 a0 = u64 [sp + 0x30]
  9218: 0a 0c                    ecalli 12 // 'eject'
  9220: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9224: 33 07 30 00 01           a0 = 0x10030
  9229: 7b 17 10                 u64 [sp + 0x10] = a0
  9232: 7b 67 18                 u64 [s1 + 0x18] = a0
  9235: 82 18 40                 a1 = u64 [sp + 0x40]
  9238: 7b 68 20                 u64 [s1 + 0x20] = a1
  9241: 95 17 ff 07              a0 = sp + 0x7ff
  9245: 95 77 19 04              a0 = a0 + 0x419
  9249: 7b 67 28                 u64 [s1 + 0x28] = a0
  9252: 7b 68 30                 u64 [s1 + 0x30] = a1
  9255: 33 07 e0 0d 01           a0 = 0x10de0
  9260: 7b 17 98 01              u64 [sp + 0x198] = a0
  9264: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9269: 49 21 b8 01              u64 [sp + 440] = 0
  9273: 95 17 ff 07              a0 = sp + 0x7ff
  9277: 95 77 b1 03              a0 = a0 + 0x3b1
  9281: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9285: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9289: 95 17 ff 07              a0 = sp + 0x7ff
  9293: 95 77 e1 03              a0 = a0 + 0x3e1
  9297: 95 18 98 01              a1 = sp + 0x198
  9301: 50 20 ec 00 18 10        ra = 236, jump @720
      :                          @473 [@dyn 118]
  9307: 82 65 50                 s0 = u64 [s1 + 0x50]
  9310: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9313: 82 66 48                 s1 = u64 [s1 + 0x48]
  9316: 33 07 02                 a0 = 0x2
  9319: 33 08                    a1 = 0
  9321: 33 09                    a2 = 0
  9323: 64 5a                    a3 = s0
  9325: 33 00 ee 00              ra = 0xee
  9329: 0a 64                    ecalli 100 // 'log'
  9331: 01                       fallthrough
      :                          @474 [@dyn 119]
  9332: 82 17 48                 a0 = u64 [sp + 0x48]
  9335: c8 67 07                 a0 = a0 + s1
  9338: 53 27 00 f0 23           jump @480 if a0 <u 4294963200
      :                          @475
  9343: 33 07 20 00 03           a0 = 0x30020
  9348: 95 77 00 10              a0 = a0 + 0x1000
  9352: 01                       fallthrough
      :                          @476
  9353: 82 78                    a1 = u64 [a0]
  9355: c9 87 09                 a2 = a0 - a1
  9358: ab 59 0f                 jump @480 if a2 != s0
      :                          @477
  9361: c9 68 09                 a2 = a1 - s1
  9364: 01                       fallthrough
      :                          @478
  9365: 82 7a                    a3 = u64 [a0]
  9367: ab 8a f2                 jump @476 if a3 != a1
      :                          @479
  9370: 7b 79                    u64 [a0] = a2
  9372: 01                       fallthrough
      :                          @480
  9373: 95 16 ff 07              s1 = sp + 0x7ff
  9377: 95 66 99 03              s1 = s1 + 0x399
  9381: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9385: 33 08 05                 a1 = 0x5
  9388: 50 20 f0 00 fb 20        ra = 240, jump @1071
      :                          @481 [@dyn 120]
  9394: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  9404: 95 1a 58                 a3 = sp + 0x58
  9407: 33 08                    a1 = 0
  9409: 33 09                    a2 = 0
  9411: 33 0b                    a4 = 0
  9413: 0a 05                    ecalli 5 // 'bless'
  9415: 7b 67                    u64 [s1] = a0
  9417: 82 17 10                 a0 = u64 [sp + 0x10]
  9420: 7b 67 18                 u64 [s1 + 0x18] = a0
  9423: 33 07 10 0e 01           a0 = 0x10e10
  9428: 7b 17 98 01              u64 [sp + 0x198] = a0
  9432: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9437: 49 21 b8 01              u64 [sp + 440] = 0
  9441: 95 17 ff 07              a0 = sp + 0x7ff
  9445: 95 77 b1 03              a0 = a0 + 0x3b1
  9449: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9453: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9458: 82 17 40                 a0 = u64 [sp + 0x40]
  9461: 7b 67 20                 u64 [s1 + 0x20] = a0
  9464: 7b 66 28                 u64 [s1 + 0x28] = s1
  9467: 7b 67 30                 u64 [s1 + 0x30] = a0
  9470: 95 17 ff 07              a0 = sp + 0x7ff
  9474: 95 77 e1 03              a0 = a0 + 0x3e1
  9478: 95 18 98 01              a1 = sp + 0x198
  9482: 50 20 f2 00 63 0f        ra = 242, jump @720
      :                          @482 [@dyn 121]
  9488: 82 65 50                 s0 = u64 [s1 + 0x50]
  9491: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9494: 82 66 48                 s1 = u64 [s1 + 0x48]
  9497: 33 07 02                 a0 = 0x2
  9500: 33 08                    a1 = 0
  9502: 33 09                    a2 = 0
  9504: 64 5a                    a3 = s0
  9506: 33 00 f4 00              ra = 0xf4
  9510: 0a 64                    ecalli 100 // 'log'
  9512: 01                       fallthrough
      :                          @483 [@dyn 122]
  9513: 82 17 48                 a0 = u64 [sp + 0x48]
  9516: c8 67 07                 a0 = a0 + s1
  9519: 53 27 00 f0 23           jump @489 if a0 <u 4294963200
      :                          @484
  9524: 33 07 20 00 03           a0 = 0x30020
  9529: 95 77 00 10              a0 = a0 + 0x1000
  9533: 01                       fallthrough
      :                          @485
  9534: 82 78                    a1 = u64 [a0]
  9536: c9 87 09                 a2 = a0 - a1
  9539: ab 59 0f                 jump @489 if a2 != s0
      :                          @486
  9542: c9 68 09                 a2 = a1 - s1
  9545: 01                       fallthrough
      :                          @487
  9546: 82 7a                    a3 = u64 [a0]
  9548: ab 8a f2                 jump @485 if a3 != a1
      :                          @488
  9551: 7b 79                    u64 [a0] = a2
  9553: 01                       fallthrough
      :                          @489
  9554: 95 16 ff 07              s1 = sp + 0x7ff
  9558: 95 66 99 03              s1 = s1 + 0x399
  9562: 82 67                    a0 = u64 [s1]
  9564: 33 08 06                 a1 = 0x6
  9567: 33 00 54 01              ra = 0x154
  9571: 28 44 20                 jump @1071
      :                          @490 [@dyn 123]
  9574: 33 05 03                 s0 = 0x3
  9577: 95 17 58                 a0 = sp + 0x58
  9580: 33 08 03                 a1 = 0x3
  9583: 0a 0e                    ecalli 14 // 'solicit'
  9585: 7b 67 70                 u64 [s1 + 0x70] = a0
  9588: 33 08 01                 a1 = 0x1
  9591: 50 20 f8 00 30 20        ra = 248, jump @1071
      :                          @491 [@dyn 124]
  9597: 82 17 38                 a0 = u64 [sp + 0x38]
  9600: 7b 67 18                 u64 [s1 + 0x18] = a0
  9603: 82 18 40                 a1 = u64 [sp + 0x40]
  9606: 7b 68 20                 u64 [s1 + 0x20] = a1
  9609: 95 17 ff 07              a0 = sp + 0x7ff
  9613: 95 77 09 04              a0 = a0 + 0x409
  9617: 7b 67 28                 u64 [s1 + 0x28] = a0
  9620: 7b 68 30                 u64 [s1 + 0x30] = a1
  9623: 33 07 40 0e 01           a0 = 0x10e40
  9628: 7b 17 98 01              u64 [sp + 0x198] = a0
  9632: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  9636: 49 21 b8 01              u64 [sp + 440] = 0
  9640: 95 17 ff 07              a0 = sp + 0x7ff
  9644: 95 77 b1 03              a0 = a0 + 0x3b1
  9648: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9652: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9657: 95 17 ff 07              a0 = sp + 0x7ff
  9661: 95 77 e1 03              a0 = a0 + 0x3e1
  9665: 95 18 98 01              a1 = sp + 0x198
  9669: 50 20 fa 00 a8 0e        ra = 250, jump @720
      :                          @492 [@dyn 125]
  9675: 82 65 50                 s0 = u64 [s1 + 0x50]
  9678: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9681: 95 17 ff 07              a0 = sp + 0x7ff
  9685: 95 77 99 03              a0 = a0 + 0x399
  9689: 82 76 48                 s1 = u64 [a0 + 0x48]
  9692: 33 07 02                 a0 = 0x2
  9695: 33 08                    a1 = 0
  9697: 33 09                    a2 = 0
  9699: 64 5a                    a3 = s0
  9701: 33 00 fc 00              ra = 0xfc
  9705: 0a 64                    ecalli 100 // 'log'
  9707: 01                       fallthrough
      :                          @493 [@dyn 126]
  9708: 82 17 48                 a0 = u64 [sp + 0x48]
  9711: c8 67 07                 a0 = a0 + s1
  9714: 53 27 00 f0 23           jump @499 if a0 <u 4294963200
      :                          @494
  9719: 33 07 20 00 03           a0 = 0x30020
  9724: 95 77 00 10              a0 = a0 + 0x1000
  9728: 01                       fallthrough
      :                          @495
  9729: 82 78                    a1 = u64 [a0]
  9731: c9 87 09                 a2 = a0 - a1
  9734: ab 59 0f                 jump @499 if a2 != s0
      :                          @496
  9737: c9 68 09                 a2 = a1 - s1
  9740: 01                       fallthrough
      :                          @497
  9741: 82 7a                    a3 = u64 [a0]
  9743: ab 8a f2                 jump @495 if a3 != a1
      :                          @498
  9746: 7b 79                    u64 [a0] = a2
  9748: 01                       fallthrough
      :                          @499
  9749: 95 17 58                 a0 = sp + 0x58
  9752: 33 08 03                 a1 = 0x3
  9755: 0a 0d                    ecalli 13 // 'query'
  9757: 95 18 ff 07              a1 = sp + 0x7ff
  9761: 95 88 99 03              a1 = a1 + 0x399
  9765: 7b 87 78                 u64 [a1 + 0x78] = a0
  9768: 95 17 ff 07              a0 = sp + 0x7ff
  9772: 95 77 11 04              a0 = a0 + 0x411
  9776: 7b 87 28                 u64 [a1 + 0x28] = a0
  9779: 33 07 90 0c 01           a0 = 0x10c90
  9784: 7b 17 98 01              u64 [sp + 0x198] = a0
  9788: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9793: 49 21 b8 01              u64 [sp + 440] = 0
  9797: 95 17 ff 07              a0 = sp + 0x7ff
  9801: 95 77 b1 03              a0 = a0 + 0x3b1
  9805: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9809: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9814: 82 17 38                 a0 = u64 [sp + 0x38]
  9817: 7b 87 18                 u64 [a1 + 0x18] = a0
  9820: 82 17 40                 a0 = u64 [sp + 0x40]
  9823: 7b 87 20                 u64 [a1 + 0x20] = a0
  9826: 7b 87 30                 u64 [a1 + 0x30] = a0
  9829: 95 17 ff 07              a0 = sp + 0x7ff
  9833: 95 77 e1 03              a0 = a0 + 0x3e1
  9837: 95 18 98 01              a1 = sp + 0x198
  9841: 95 15 98 01              s0 = sp + 0x198
  9845: 50 20 fe 00 f8 0d        ra = 254, jump @720
      :                          @500 [@dyn 127]
  9851: 95 17 ff 07              a0 = sp + 0x7ff
  9855: 95 77 99 03              a0 = a0 + 0x399
  9859: 82 76 50                 s1 = u64 [a0 + 0x50]
  9862: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9865: 82 77 48                 a0 = u64 [a0 + 0x48]
  9868: 7b 17 10                 u64 [sp + 0x10] = a0
  9871: 33 07 02                 a0 = 0x2
  9874: 33 08                    a1 = 0
  9876: 33 09                    a2 = 0
  9878: 64 6a                    a3 = s1
  9880: 33 00 00 01              ra = 0x100
  9884: 0a 64                    ecalli 100 // 'log'
  9886: 01                       fallthrough
      :                          @501 [@dyn 128]
  9887: 82 1c 10                 a5 = u64 [sp + 0x10]
  9890: 82 17 48                 a0 = u64 [sp + 0x48]
  9893: c8 c7 07                 a0 = a0 + a5
  9896: 53 27 00 f0 23           jump @507 if a0 <u 4294963200
      :                          @502
  9901: 33 07 20 00 03           a0 = 0x30020
  9906: 95 77 00 10              a0 = a0 + 0x1000
  9910: 01                       fallthrough
      :                          @503
  9911: 82 78                    a1 = u64 [a0]
  9913: c9 87 09                 a2 = a0 - a1
  9916: ab 69 0f                 jump @507 if a2 != s1
      :                          @504
  9919: c9 c8 09                 a2 = a1 - a5
  9922: 01                       fallthrough
      :                          @505
  9923: 82 7a                    a3 = u64 [a0]
  9925: ab 8a f2                 jump @503 if a3 != a1
      :                          @506
  9928: 7b 79                    u64 [a0] = a2
  9930: 01                       fallthrough
      :                          @507
  9931: 95 17 ff 07              a0 = sp + 0x7ff
  9935: 95 77 99 03              a0 = a0 + 0x399
  9939: 82 77 78                 a0 = u64 [a0 + 0x78]
  9942: 33 08 02                 a1 = 0x2
  9945: 50 20 02 01 ce 1e        ra = 258, jump @1071
      :                          @508 [@dyn 129]
  9951: 33 09 00 0a              a2 = 0xa00
  9955: 95 17 98 01              a0 = sp + 0x198
  9959: 33 08                    a1 = 0
  9961: 50 20 04 01 ab 10        ra = 260, jump @788
      :                          @509 [@dyn 130]
  9967: 33 06 50                 s1 = 0x50
  9970: 01                       fallthrough
      :                          @510
  9971: 95 18 58                 a1 = sp + 0x58
  9974: 33 09 20                 a2 = 0x20
  9977: 64 57                    a0 = s0
  9979: 50 20 06 01 e7 0f        ra = 262, jump @770
      :                          @511 [@dyn 131]
  9985: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  9988: 95 55 20                 s0 = s0 + 0x20
  9991: 52 06 ec                 jump @510 if s1 != 0
      :                          @512
  9994: 95 18 98 01              a1 = sp + 0x198
  9998: 33 07                    a0 = 0
 10000: 0a 06                    ecalli 6 // 'assign'
 10002: 95 16 ff 07              s1 = sp + 0x7ff
 10006: 95 66 99 03              s1 = s1 + 0x399
 10010: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10014: 95 17 ff 07              a0 = sp + 0x7ff
 10018: 95 77 19 04              a0 = a0 + 0x419
 10022: 7b 67 58                 u64 [s1 + 0x58] = a0
 10025: 33 07 70 0e 01           a0 = 0x10e70
 10030: 7b 67 18                 u64 [s1 + 0x18] = a0
 10033: 49 16 20 03              u64 [s1 + 32] = 0x3
 10037: 95 17 ff 07              a0 = sp + 0x7ff
 10041: 95 77 e1 03              a0 = a0 + 0x3e1
 10045: 7b 67 28                 u64 [s1 + 0x28] = a0
 10048: 49 16 30 02              u64 [s1 + 48] = 0x2
 10052: 82 17 38                 a0 = u64 [sp + 0x38]
 10055: 7b 67 48                 u64 [s1 + 0x48] = a0
 10058: 82 17 40                 a0 = u64 [sp + 0x40]
 10061: 7b 67 50                 u64 [s1 + 0x50] = a0
 10064: 7b 67 60                 u64 [s1 + 0x60] = a0
 10067: 49 16 38                 u64 [s1 + 56] = 0
 10070: 95 17 ff 07              a0 = sp + 0x7ff
 10074: 95 77 99 03              a0 = a0 + 0x399
 10078: 95 18 ff 07              a1 = sp + 0x7ff
 10082: 95 88 b1 03              a1 = a1 + 0x3b1
 10086: 50 20 08 01 07 0d        ra = 264, jump @720
      :                          @513 [@dyn 132]
 10092: 82 65 08                 s0 = u64 [s1 + 0x8]
 10095: 82 6b 10                 a4 = u64 [s1 + 0x10]
 10098: 82 66                    s1 = u64 [s1]
 10100: 33 07 02                 a0 = 0x2
 10103: 33 08                    a1 = 0
 10105: 33 09                    a2 = 0
 10107: 64 5a                    a3 = s0
 10109: 33 00 0a 01              ra = 0x10a
 10113: 0a 64                    ecalli 100 // 'log'
 10115: 01                       fallthrough
      :                          @514 [@dyn 133]
 10116: 82 17 48                 a0 = u64 [sp + 0x48]
 10119: c8 67 07                 a0 = a0 + s1
 10122: 53 27 00 f0 1d 05        jump @585 if a0 <u 4294963200
      :                          @515
 10128: 33 07 20 00 03           a0 = 0x30020
 10133: 95 77 00 10              a0 = a0 + 0x1000
 10137: 01                       fallthrough
      :                          @516
 10138: 82 78                    a1 = u64 [a0]
 10140: c9 87 09                 a2 = a0 - a1
 10143: ab 59 08 05              jump @585 if a2 != s0
      :                          @517
 10147: c9 68 09                 a2 = a1 - s1
 10150: 01                       fallthrough
      :                          @518
 10151: 82 7a                    a3 = u64 [a0]
 10153: ab 8a f1                 jump @516 if a3 != a1
      :                          @519
 10156: 7b 79                    u64 [a0] = a2
 10158: 33 0b                    a4 = 0
 10160: 01                       fallthrough
      :                          @520
 10161: ab 8a e9                 jump @516 if a3 != a1
      :                          @521
 10164: 28 f3 04                 jump @585
      :                          @522 [@dyn 134]
 10167: 33 05 03                 s0 = 0x3
 10170: 95 17 58                 a0 = sp + 0x58
 10173: 33 08 03                 a1 = 0x3
 10176: 0a 0f                    ecalli 15 // 'forget'
 10178: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10182: 82 17 38                 a0 = u64 [sp + 0x38]
 10185: 7b 67 18                 u64 [s1 + 0x18] = a0
 10188: 82 18 40                 a1 = u64 [sp + 0x40]
 10191: 7b 68 20                 u64 [s1 + 0x20] = a1
 10194: 95 17 ff 07              a0 = sp + 0x7ff
 10198: 95 77 19 04              a0 = a0 + 0x419
 10202: 7b 67 28                 u64 [s1 + 0x28] = a0
 10205: 7b 68 30                 u64 [s1 + 0x30] = a1
 10208: 33 07 f0 0c 01           a0 = 0x10cf0
 10213: 7b 17 98 01              u64 [sp + 0x198] = a0
 10217: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 10221: 49 21 b8 01              u64 [sp + 440] = 0
 10225: 95 17 ff 07              a0 = sp + 0x7ff
 10229: 95 77 b1 03              a0 = a0 + 0x3b1
 10233: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10237: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10242: 95 17 ff 07              a0 = sp + 0x7ff
 10246: 95 77 e1 03              a0 = a0 + 0x3e1
 10250: 95 18 98 01              a1 = sp + 0x198
 10254: 50 20 0e 01 5f 0c        ra = 270, jump @720
      :                          @523 [@dyn 135]
 10260: 82 65 50                 s0 = u64 [s1 + 0x50]
 10263: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10266: 95 17 ff 07              a0 = sp + 0x7ff
 10270: 95 77 99 03              a0 = a0 + 0x399
 10274: 82 76 48                 s1 = u64 [a0 + 0x48]
 10277: 33 07 02                 a0 = 0x2
 10280: 33 08                    a1 = 0
 10282: 33 09                    a2 = 0
 10284: 64 5a                    a3 = s0
 10286: 33 00 10 01              ra = 0x110
 10290: 0a 64                    ecalli 100 // 'log'
 10292: 01                       fallthrough
      :                          @524 [@dyn 136]
 10293: 82 17 48                 a0 = u64 [sp + 0x48]
 10296: c8 67 07                 a0 = a0 + s1
 10299: 53 27 00 f0 23           jump @530 if a0 <u 4294963200
      :                          @525
 10304: 33 07 20 00 03           a0 = 0x30020
 10309: 95 77 00 10              a0 = a0 + 0x1000
 10313: 01                       fallthrough
      :                          @526
 10314: 82 78                    a1 = u64 [a0]
 10316: c9 87 09                 a2 = a0 - a1
 10319: ab 59 0f                 jump @530 if a2 != s0
      :                          @527
 10322: c9 68 09                 a2 = a1 - s1
 10325: 01                       fallthrough
      :                          @528
 10326: 82 7a                    a3 = u64 [a0]
 10328: ab 8a f2                 jump @526 if a3 != a1
      :                          @529
 10331: 7b 79                    u64 [a0] = a2
 10333: 01                       fallthrough
      :                          @530
 10334: 95 16 ff 07              s1 = sp + 0x7ff
 10338: 95 66 99 03              s1 = s1 + 0x399
 10342: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10346: 33 08 01                 a1 = 0x1
 10349: 50 20 12 01 3a 1d        ra = 274, jump @1071
      :                          @531 [@dyn 137]
 10355: 95 17 58                 a0 = sp + 0x58
 10358: 33 08 03                 a1 = 0x3
 10361: 0a 0d                    ecalli 13 // 'query'
 10363: 7b 67                    u64 [s1] = a0
 10365: 33 07 a0 0e 01           a0 = 0x10ea0
 10370: 7b 17 98 01              u64 [sp + 0x198] = a0
 10374: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10379: 49 21 b8 01              u64 [sp + 440] = 0
 10383: 95 17 ff 07              a0 = sp + 0x7ff
 10387: 95 77 b1 03              a0 = a0 + 0x3b1
 10391: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10395: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10400: 82 17 38                 a0 = u64 [sp + 0x38]
 10403: 7b 67 18                 u64 [s1 + 0x18] = a0
 10406: 82 17 40                 a0 = u64 [sp + 0x40]
 10409: 7b 67 20                 u64 [s1 + 0x20] = a0
 10412: 7b 66 28                 u64 [s1 + 0x28] = s1
 10415: 7b 67 30                 u64 [s1 + 0x30] = a0
 10418: 95 17 ff 07              a0 = sp + 0x7ff
 10422: 95 77 e1 03              a0 = a0 + 0x3e1
 10426: 95 18 98 01              a1 = sp + 0x198
 10430: 50 20 14 01 af 0b        ra = 276, jump @720
      :                          @532 [@dyn 138]
 10436: 82 65 50                 s0 = u64 [s1 + 0x50]
 10439: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10442: 82 66 48                 s1 = u64 [s1 + 0x48]
 10445: 33 07 02                 a0 = 0x2
 10448: 33 08                    a1 = 0
 10450: 33 09                    a2 = 0
 10452: 64 5a                    a3 = s0
 10454: 33 00 16 01              ra = 0x116
 10458: 0a 64                    ecalli 100 // 'log'
 10460: 01                       fallthrough
      :                          @533 [@dyn 139]
 10461: 82 17 48                 a0 = u64 [sp + 0x48]
 10464: c8 67 07                 a0 = a0 + s1
 10467: 53 27 00 f0 83 01        jump @558 if a0 <u 4294963200
      :                          @534
 10473: 33 07 20 00 03           a0 = 0x30020
 10478: 95 77 00 10              a0 = a0 + 0x1000
 10482: 01                       fallthrough
      :                          @535
 10483: 82 78                    a1 = u64 [a0]
 10485: c9 87 09                 a2 = a0 - a1
 10488: ab 59 6e 01              jump @558 if a2 != s0
      :                          @536
 10492: c9 68 09                 a2 = a1 - s1
 10495: 01                       fallthrough
      :                          @537
 10496: 82 7a                    a3 = u64 [a0]
 10498: ab 8a f1                 jump @535 if a3 != a1
      :                          @538
 10501: 7b 79                    u64 [a0] = a2
 10503: 33 0b                    a4 = 0
 10505: 01                       fallthrough
      :                          @539
 10506: ab 8a e9                 jump @535 if a3 != a1
      :                          @540
 10509: 28 59 01                 jump @558
      :                          @541 [@dyn 140]
 10512: 95 18 58                 a1 = sp + 0x58
 10515: 95 19 98 00              a2 = sp + 0x98
 10519: 33 0b 03                 a4 = 0x3
 10522: 82 17 30                 a0 = u64 [sp + 0x30]
 10525: 33 0a                    a3 = 0
 10527: 0a 01                    ecalli 1 // 'lookup'
 10529: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10533: 82 17 38                 a0 = u64 [sp + 0x38]
 10536: 7b 67 18                 u64 [s1 + 0x18] = a0
 10539: 82 18 40                 a1 = u64 [sp + 0x40]
 10542: 7b 68 20                 u64 [s1 + 0x20] = a1
 10545: 95 17 ff 07              a0 = sp + 0x7ff
 10549: 95 77 19 04              a0 = a0 + 0x419
 10553: 7b 67 28                 u64 [s1 + 0x28] = a0
 10556: 7b 68 30                 u64 [s1 + 0x30] = a1
 10559: 33 07 d0 0e 01           a0 = 0x10ed0
 10564: 7b 17 98 01              u64 [sp + 0x198] = a0
 10568: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10573: 49 21 b8 01              u64 [sp + 440] = 0
 10577: 95 17 ff 07              a0 = sp + 0x7ff
 10581: 95 77 b1 03              a0 = a0 + 0x3b1
 10585: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10589: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10594: 95 17 ff 07              a0 = sp + 0x7ff
 10598: 95 77 e1 03              a0 = a0 + 0x3e1
 10602: 95 18 98 01              a1 = sp + 0x198
 10606: 50 20 1a 01 ff 0a        ra = 282, jump @720
      :                          @542 [@dyn 141]
 10612: 82 65 50                 s0 = u64 [s1 + 0x50]
 10615: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10618: 95 17 ff 07              a0 = sp + 0x7ff
 10622: 95 77 99 03              a0 = a0 + 0x399
 10626: 82 76 48                 s1 = u64 [a0 + 0x48]
 10629: 33 07 02                 a0 = 0x2
 10632: 33 08                    a1 = 0
 10634: 33 09                    a2 = 0
 10636: 64 5a                    a3 = s0
 10638: 33 00 1c 01              ra = 0x11c
 10642: 0a 64                    ecalli 100 // 'log'
 10644: 01                       fallthrough
      :                          @543 [@dyn 142]
 10645: 82 17 48                 a0 = u64 [sp + 0x48]
 10648: c8 67 07                 a0 = a0 + s1
 10651: 53 27 00 f0 23           jump @549 if a0 <u 4294963200
      :                          @544
 10656: 33 07 20 00 03           a0 = 0x30020
 10661: 95 77 00 10              a0 = a0 + 0x1000
 10665: 01                       fallthrough
      :                          @545
 10666: 82 78                    a1 = u64 [a0]
 10668: c9 87 09                 a2 = a0 - a1
 10671: ab 59 0f                 jump @549 if a2 != s0
      :                          @546
 10674: c9 68 09                 a2 = a1 - s1
 10677: 01                       fallthrough
      :                          @547
 10678: 82 7a                    a3 = u64 [a0]
 10680: ab 8a f2                 jump @545 if a3 != a1
      :                          @548
 10683: 7b 79                    u64 [a0] = a2
 10685: 01                       fallthrough
      :                          @549
 10686: 95 16 ff 07              s1 = sp + 0x7ff
 10690: 95 66 99 03              s1 = s1 + 0x399
 10694: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10698: 33 08 01                 a1 = 0x1
 10701: 50 20 1e 01 da 1b        ra = 286, jump @1071
      :                          @550 [@dyn 143]
 10707: 95 17 58                 a0 = sp + 0x58
 10710: 33 08 03                 a1 = 0x3
 10713: 0a 0d                    ecalli 13 // 'query'
 10715: 7b 67                    u64 [s1] = a0
 10717: 33 07 00 0f 01           a0 = 0x10f00
 10722: 7b 17 98 01              u64 [sp + 0x198] = a0
 10726: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10731: 49 21 b8 01              u64 [sp + 440] = 0
 10735: 95 17 ff 07              a0 = sp + 0x7ff
 10739: 95 77 b1 03              a0 = a0 + 0x3b1
 10743: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10747: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10752: 82 17 38                 a0 = u64 [sp + 0x38]
 10755: 7b 67 18                 u64 [s1 + 0x18] = a0
 10758: 82 17 40                 a0 = u64 [sp + 0x40]
 10761: 7b 67 20                 u64 [s1 + 0x20] = a0
 10764: 7b 66 28                 u64 [s1 + 0x28] = s1
 10767: 7b 67 30                 u64 [s1 + 0x30] = a0
 10770: 95 17 ff 07              a0 = sp + 0x7ff
 10774: 95 77 e1 03              a0 = a0 + 0x3e1
 10778: 95 18 98 01              a1 = sp + 0x198
 10782: 50 20 20 01 4f 0a        ra = 288, jump @720
      :                          @551 [@dyn 144]
 10788: 82 65 50                 s0 = u64 [s1 + 0x50]
 10791: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10794: 82 66 48                 s1 = u64 [s1 + 0x48]
 10797: 33 07 02                 a0 = 0x2
 10800: 33 08                    a1 = 0
 10802: 33 09                    a2 = 0
 10804: 64 5a                    a3 = s0
 10806: 33 00 22 01              ra = 0x122
 10810: 0a 64                    ecalli 100 // 'log'
 10812: 01                       fallthrough
      :                          @552 [@dyn 145]
 10813: 82 17 48                 a0 = u64 [sp + 0x48]
 10816: c8 67 07                 a0 = a0 + s1
 10819: 53 27 00 f0 23           jump @558 if a0 <u 4294963200
      :                          @553
 10824: 33 07 20 00 03           a0 = 0x30020
 10829: 95 77 00 10              a0 = a0 + 0x1000
 10833: 01                       fallthrough
      :                          @554
 10834: 82 78                    a1 = u64 [a0]
 10836: c9 87 09                 a2 = a0 - a1
 10839: ab 59 0f                 jump @558 if a2 != s0
      :                          @555
 10842: c9 68 09                 a2 = a1 - s1
 10845: 01                       fallthrough
      :                          @556
 10846: 82 7a                    a3 = u64 [a0]
 10848: ab 8a f2                 jump @554 if a3 != a1
      :                          @557
 10851: 7b 79                    u64 [a0] = a2
 10853: 01                       fallthrough
      :                          @558
 10854: 95 16 ff 07              s1 = sp + 0x7ff
 10858: 95 66 99 03              s1 = s1 + 0x399
 10862: 82 67                    a0 = u64 [s1]
 10864: 33 08 02                 a1 = 0x2
 10867: 33 00 54 01              ra = 0x154
 10871: 28 30 1b                 jump @1071
      :                          @559 [@dyn 146]
 10874: 95 17 58                 a0 = sp + 0x58
 10877: 33 08 03                 a1 = 0x3
 10880: 33 09 8f 03              a2 = 0x38f
 10884: 33 0a 8f 03              a3 = 0x38f
 10888: 0a 09                    ecalli 9 // 'new'
 10890: 7b 67 70                 u64 [s1 + 0x70] = a0
 10893: 82 17 38                 a0 = u64 [sp + 0x38]
 10896: 7b 67 18                 u64 [s1 + 0x18] = a0
 10899: 82 18 40                 a1 = u64 [sp + 0x40]
 10902: 7b 68 20                 u64 [s1 + 0x20] = a1
 10905: 95 17 ff 07              a0 = sp + 0x7ff
 10909: 95 77 09 04              a0 = a0 + 0x409
 10913: 7b 67 28                 u64 [s1 + 0x28] = a0
 10916: 7b 68 30                 u64 [s1 + 0x30] = a1
 10919: 33 07 30 0f 01           a0 = 0x10f30
 10924: 7b 17 98 01              u64 [sp + 0x198] = a0
 10928: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10933: 49 21 b8 01              u64 [sp + 440] = 0
 10937: 95 17 ff 07              a0 = sp + 0x7ff
 10941: 95 77 b1 03              a0 = a0 + 0x3b1
 10945: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10949: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10954: 95 17 ff 07              a0 = sp + 0x7ff
 10958: 95 77 e1 03              a0 = a0 + 0x3e1
 10962: 95 18 98 01              a1 = sp + 0x198
 10966: 50 20 26 01 97 09        ra = 294, jump @720
      :                          @560 [@dyn 147]
 10972: 82 65 50                 s0 = u64 [s1 + 0x50]
 10975: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10978: 95 17 ff 07              a0 = sp + 0x7ff
 10982: 95 77 99 03              a0 = a0 + 0x399
 10986: 82 76 48                 s1 = u64 [a0 + 0x48]
 10989: 33 07 02                 a0 = 0x2
 10992: 33 08                    a1 = 0
 10994: 33 09                    a2 = 0
 10996: 64 5a                    a3 = s0
 10998: 33 00 28 01              ra = 0x128
 11002: 0a 64                    ecalli 100 // 'log'
 11004: 01                       fallthrough
      :                          @561 [@dyn 148]
 11005: 82 17 48                 a0 = u64 [sp + 0x48]
 11008: c8 67 07                 a0 = a0 + s1
 11011: 53 27 00 f0 23           jump @567 if a0 <u 4294963200
      :                          @562
 11016: 33 07 20 00 03           a0 = 0x30020
 11021: 95 77 00 10              a0 = a0 + 0x1000
 11025: 01                       fallthrough
      :                          @563
 11026: 82 78                    a1 = u64 [a0]
 11028: c9 87 09                 a2 = a0 - a1
 11031: ab 59 0f                 jump @567 if a2 != s0
      :                          @564
 11034: c9 68 09                 a2 = a1 - s1
 11037: 01                       fallthrough
      :                          @565
 11038: 82 7a                    a3 = u64 [a0]
 11040: ab 8a f2                 jump @563 if a3 != a1
      :                          @566
 11043: 7b 79                    u64 [a0] = a2
 11045: 01                       fallthrough
      :                          @567
 11046: 95 16 ff 07              s1 = sp + 0x7ff
 11050: 95 66 99 03              s1 = s1 + 0x399
 11054: 82 67 70                 a0 = u64 [s1 + 0x70]
 11057: 33 08 01                 a1 = 0x1
 11060: 50 20 2a 01 73 1a        ra = 298, jump @1071
      :                          @568 [@dyn 149]
 11066: 95 17 58                 a0 = sp + 0x58
 11069: 33 08 8f 03              a1 = 0x38f
 11073: 33 09 8f 03              a2 = 0x38f
 11077: 0a 0a                    ecalli 10 // 'upgrade'
 11079: 7b 67 78                 u64 [s1 + 0x78] = a0
 11082: 95 17 ff 07              a0 = sp + 0x7ff
 11086: 95 77 11 04              a0 = a0 + 0x411
 11090: 7b 67 28                 u64 [s1 + 0x28] = a0
 11093: 33 07 60 0f 01           a0 = 0x10f60
 11098: 7b 17 98 01              u64 [sp + 0x198] = a0
 11102: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11107: 49 21 b8 01              u64 [sp + 440] = 0
 11111: 95 17 ff 07              a0 = sp + 0x7ff
 11115: 95 77 b1 03              a0 = a0 + 0x3b1
 11119: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11123: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11128: 82 17 38                 a0 = u64 [sp + 0x38]
 11131: 7b 67 18                 u64 [s1 + 0x18] = a0
 11134: 82 17 40                 a0 = u64 [sp + 0x40]
 11137: 7b 67 20                 u64 [s1 + 0x20] = a0
 11140: 7b 67 30                 u64 [s1 + 0x30] = a0
 11143: 95 17 ff 07              a0 = sp + 0x7ff
 11147: 95 77 e1 03              a0 = a0 + 0x3e1
 11151: 95 18 98 01              a1 = sp + 0x198
 11155: 50 20 2c 01 da 08        ra = 300, jump @720
      :                          @569 [@dyn 150]
 11161: 82 65 50                 s0 = u64 [s1 + 0x50]
 11164: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11167: 82 66 48                 s1 = u64 [s1 + 0x48]
 11170: 33 07 02                 a0 = 0x2
 11173: 33 08                    a1 = 0
 11175: 33 09                    a2 = 0
 11177: 64 5a                    a3 = s0
 11179: 33 00 2e 01              ra = 0x12e
 11183: 0a 64                    ecalli 100 // 'log'
 11185: 01                       fallthrough
      :                          @570 [@dyn 151]
 11186: 82 17 48                 a0 = u64 [sp + 0x48]
 11189: c8 67 07                 a0 = a0 + s1
 11192: 53 27 00 f0 23           jump @576 if a0 <u 4294963200
      :                          @571
 11197: 33 07 20 00 03           a0 = 0x30020
 11202: 95 77 00 10              a0 = a0 + 0x1000
 11206: 01                       fallthrough
      :                          @572
 11207: 82 78                    a1 = u64 [a0]
 11209: c9 87 09                 a2 = a0 - a1
 11212: ab 59 0f                 jump @576 if a2 != s0
      :                          @573
 11215: c9 68 09                 a2 = a1 - s1
 11218: 01                       fallthrough
      :                          @574
 11219: 82 7a                    a3 = u64 [a0]
 11221: ab 8a f2                 jump @572 if a3 != a1
      :                          @575
 11224: 7b 79                    u64 [a0] = a2
 11226: 01                       fallthrough
      :                          @576
 11227: 95 16 ff 07              s1 = sp + 0x7ff
 11231: 95 66 99 03              s1 = s1 + 0x399
 11235: 82 67 78                 a0 = u64 [s1 + 0x78]
 11238: 33 08 02                 a1 = 0x2
 11241: 33 05 02                 s0 = 0x2
 11244: 50 20 30 01 bb 19        ra = 304, jump @1071
      :                          @577 [@dyn 152]
 11250: 48 06 8f 03              u32 [s1 + 0] = 0x38f
 11254: 48 16 08                 u32 [s1 + 8] = 0
 11257: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
 11262: 33 08 01                 a1 = 0x1
 11265: 33 09 01                 a2 = 0x1
 11268: 95 1a ff 07              a3 = sp + 0x7ff
 11272: 95 aa 99 03              a3 = a3 + 0x399
 11276: 33 0b 01                 a4 = 0x1
 11279: 33 07                    a0 = 0
 11281: 0a 05                    ecalli 5 // 'bless'
 11283: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11287: 95 17 ff 07              a0 = sp + 0x7ff
 11291: 95 77 19 04              a0 = a0 + 0x419
 11295: 7b 67 28                 u64 [s1 + 0x28] = a0
 11298: 33 07 90 0f 01           a0 = 0x10f90
 11303: 7b 17 98 01              u64 [sp + 0x198] = a0
 11307: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11312: 49 21 b8 01              u64 [sp + 440] = 0
 11316: 95 17 ff 07              a0 = sp + 0x7ff
 11320: 95 77 b1 03              a0 = a0 + 0x3b1
 11324: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11328: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11332: 82 17 38                 a0 = u64 [sp + 0x38]
 11335: 7b 67 18                 u64 [s1 + 0x18] = a0
 11338: 82 17 40                 a0 = u64 [sp + 0x40]
 11341: 7b 67 20                 u64 [s1 + 0x20] = a0
 11344: 7b 67 30                 u64 [s1 + 0x30] = a0
 11347: 95 17 ff 07              a0 = sp + 0x7ff
 11351: 95 77 e1 03              a0 = a0 + 0x3e1
 11355: 95 18 98 01              a1 = sp + 0x198
 11359: 50 20 32 01 0e 08        ra = 306, jump @720
      :                          @578 [@dyn 153]
 11365: 82 65 50                 s0 = u64 [s1 + 0x50]
 11368: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11371: 82 66 48                 s1 = u64 [s1 + 0x48]
 11374: 33 07 02                 a0 = 0x2
 11377: 33 08                    a1 = 0
 11379: 33 09                    a2 = 0
 11381: 64 5a                    a3 = s0
 11383: 33 00 34 01              ra = 0x134
 11387: 0a 64                    ecalli 100 // 'log'
 11389: 01                       fallthrough
      :                          @579 [@dyn 154]
 11390: 82 17 48                 a0 = u64 [sp + 0x48]
 11393: c8 67 07                 a0 = a0 + s1
 11396: 53 27 00 f0 23           jump @585 if a0 <u 4294963200
      :                          @580
 11401: 33 07 20 00 03           a0 = 0x30020
 11406: 95 77 00 10              a0 = a0 + 0x1000
 11410: 01                       fallthrough
      :                          @581
 11411: 82 78                    a1 = u64 [a0]
 11413: c9 87 09                 a2 = a0 - a1
 11416: ab 59 0f                 jump @585 if a2 != s0
      :                          @582
 11419: c9 68 09                 a2 = a1 - s1
 11422: 01                       fallthrough
      :                          @583
 11423: 82 7a                    a3 = u64 [a0]
 11425: ab 8a f2                 jump @581 if a3 != a1
      :                          @584
 11428: 7b 79                    u64 [a0] = a2
 11430: 01                       fallthrough
      :                          @585
 11431: 95 16 ff 07              s1 = sp + 0x7ff
 11435: 95 66 99 03              s1 = s1 + 0x399
 11439: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11443: 33 08 05                 a1 = 0x5
 11446: 33 00 54 01              ra = 0x154
 11450: 28 ed 18                 jump @1071
      :                          @586 [@dyn 155]
 11453: 95 17 55                 a0 = sp + 0x55
 11456: 33 08 03                 a1 = 0x3
 11459: 33 09                    a2 = 0
 11461: 33 0a                    a3 = 0
 11463: 0a 03                    ecalli 3 // 'write'
 11465: 7b 67 68                 u64 [s1 + 0x68] = a0
 11468: 33 07 50 00 01           a0 = 0x10050
 11473: 7b 17 10                 u64 [sp + 0x10] = a0
 11476: 7b 67 18                 u64 [s1 + 0x18] = a0
 11479: 82 18 40                 a1 = u64 [sp + 0x40]
 11482: 7b 68 20                 u64 [s1 + 0x20] = a1
 11485: 95 17 ff 07              a0 = sp + 0x7ff
 11489: 95 77 01 04              a0 = a0 + 0x401
 11493: 7b 67 28                 u64 [s1 + 0x28] = a0
 11496: 7b 68 30                 u64 [s1 + 0x30] = a1
 11499: 33 07 c0 0f 01           a0 = 0x10fc0
 11504: 7b 17 98 01              u64 [sp + 0x198] = a0
 11508: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11513: 49 21 b8 01              u64 [sp + 440] = 0
 11517: 95 17 ff 07              a0 = sp + 0x7ff
 11521: 95 77 b1 03              a0 = a0 + 0x3b1
 11525: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11529: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11534: 95 17 ff 07              a0 = sp + 0x7ff
 11538: 95 77 e1 03              a0 = a0 + 0x3e1
 11542: 95 18 98 01              a1 = sp + 0x198
 11546: 50 20 38 01 53 07        ra = 312, jump @720
      :                          @587 [@dyn 156]
 11552: 82 65 50                 s0 = u64 [s1 + 0x50]
 11555: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11558: 95 17 ff 07              a0 = sp + 0x7ff
 11562: 95 77 99 03              a0 = a0 + 0x399
 11566: 82 76 48                 s1 = u64 [a0 + 0x48]
 11569: 33 07 02                 a0 = 0x2
 11572: 33 08                    a1 = 0
 11574: 33 09                    a2 = 0
 11576: 64 5a                    a3 = s0
 11578: 33 00 3a 01              ra = 0x13a
 11582: 0a 64                    ecalli 100 // 'log'
 11584: 01                       fallthrough
      :                          @588 [@dyn 157]
 11585: 82 17 48                 a0 = u64 [sp + 0x48]
 11588: c8 67 07                 a0 = a0 + s1
 11591: 33 08 20 00 03           a1 = 0x30020
 11596: 7b 18 08                 u64 [sp + 0x8] = a1
 11599: 53 27 00 f0 21           jump @594 if a0 <u 4294963200
      :                          @589
 11604: 82 18 08                 a1 = u64 [sp + 0x8]
 11607: 95 87 00 10              a0 = a1 + 0x1000
 11611: 01                       fallthrough
      :                          @590
 11612: 82 78                    a1 = u64 [a0]
 11614: c9 87 09                 a2 = a0 - a1
 11617: ab 59 0f                 jump @594 if a2 != s0
      :                          @591
 11620: c9 68 09                 a2 = a1 - s1
 11623: 01                       fallthrough
      :                          @592
 11624: 82 7a                    a3 = u64 [a0]
 11626: ab 8a f2                 jump @590 if a3 != a1
      :                          @593
 11629: 7b 79                    u64 [a0] = a2
 11631: 01                       fallthrough
      :                          @594
 11632: 95 16 ff 07              s1 = sp + 0x7ff
 11636: 95 66 99 03              s1 = s1 + 0x399
 11640: 82 67 68                 a0 = u64 [s1 + 0x68]
 11643: 33 08 01                 a1 = 0x1
 11646: 50 20 3c 01 29 18        ra = 316, jump @1071
      :                          @595 [@dyn 158]
 11652: 95 17 55                 a0 = sp + 0x55
 11655: 33 08 03                 a1 = 0x3
 11658: 95 19 52                 a2 = sp + 0x52
 11661: 33 0a 03                 a3 = 0x3
 11664: 0a 03                    ecalli 3 // 'write'
 11666: 7b 67 70                 u64 [s1 + 0x70] = a0
 11669: 95 17 ff 07              a0 = sp + 0x7ff
 11673: 95 77 09 04              a0 = a0 + 0x409
 11677: 7b 67 28                 u64 [s1 + 0x28] = a0
 11680: 33 07 f0 0f 01           a0 = 0x10ff0
 11685: 7b 17 98 01              u64 [sp + 0x198] = a0
 11689: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11694: 49 21 b8 01              u64 [sp + 440] = 0
 11698: 95 17 ff 07              a0 = sp + 0x7ff
 11702: 95 77 b1 03              a0 = a0 + 0x3b1
 11706: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11710: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11715: 82 17 10                 a0 = u64 [sp + 0x10]
 11718: 7b 67 18                 u64 [s1 + 0x18] = a0
 11721: 82 17 40                 a0 = u64 [sp + 0x40]
 11724: 7b 67 20                 u64 [s1 + 0x20] = a0
 11727: 7b 67 30                 u64 [s1 + 0x30] = a0
 11730: 95 17 ff 07              a0 = sp + 0x7ff
 11734: 95 77 e1 03              a0 = a0 + 0x3e1
 11738: 95 18 98 01              a1 = sp + 0x198
 11742: 50 20 3e 01 8f 06        ra = 318, jump @720
      :                          @596 [@dyn 159]
 11748: 82 65 50                 s0 = u64 [s1 + 0x50]
 11751: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11754: 82 66 48                 s1 = u64 [s1 + 0x48]
 11757: 33 07 02                 a0 = 0x2
 11760: 33 08                    a1 = 0
 11762: 33 09                    a2 = 0
 11764: 64 5a                    a3 = s0
 11766: 33 00 40 01              ra = 0x140
 11770: 0a 64                    ecalli 100 // 'log'
 11772: 01                       fallthrough
      :                          @597 [@dyn 160]
 11773: 82 17 48                 a0 = u64 [sp + 0x48]
 11776: c8 67 07                 a0 = a0 + s1
 11779: 53 27 00 f0 21           jump @603 if a0 <u 4294963200
      :                          @598
 11784: 82 18 08                 a1 = u64 [sp + 0x8]
 11787: 95 87 00 10              a0 = a1 + 0x1000
 11791: 01                       fallthrough
      :                          @599
 11792: 82 78                    a1 = u64 [a0]
 11794: c9 87 09                 a2 = a0 - a1
 11797: ab 59 0f                 jump @603 if a2 != s0
      :                          @600
 11800: c9 68 09                 a2 = a1 - s1
 11803: 01                       fallthrough
      :                          @601
 11804: 82 7a                    a3 = u64 [a0]
 11806: ab 8a f2                 jump @599 if a3 != a1
      :                          @602
 11809: 7b 79                    u64 [a0] = a2
 11811: 01                       fallthrough
      :                          @603
 11812: 95 16 ff 07              s1 = sp + 0x7ff
 11816: 95 66 99 03              s1 = s1 + 0x399
 11820: 82 67 70                 a0 = u64 [s1 + 0x70]
 11823: 33 08 02                 a1 = 0x2
 11826: 33 05 02                 s0 = 0x2
 11829: 50 20 42 01 72 17        ra = 322, jump @1071
      :                          @604 [@dyn 161]
 11835: 95 17 55                 a0 = sp + 0x55
 11838: 33 08 03                 a1 = 0x3
 11841: 33 09                    a2 = 0
 11843: 33 0a                    a3 = 0
 11845: 0a 03                    ecalli 3 // 'write'
 11847: 7b 67 78                 u64 [s1 + 0x78] = a0
 11850: 82 17 38                 a0 = u64 [sp + 0x38]
 11853: 7b 67 18                 u64 [s1 + 0x18] = a0
 11856: 82 18 40                 a1 = u64 [sp + 0x40]
 11859: 7b 68 20                 u64 [s1 + 0x20] = a1
 11862: 95 17 ff 07              a0 = sp + 0x7ff
 11866: 95 77 11 04              a0 = a0 + 0x411
 11870: 7b 67 28                 u64 [s1 + 0x28] = a0
 11873: 7b 68 30                 u64 [s1 + 0x30] = a1
 11876: 33 07 20 10 01           a0 = 0x11020
 11881: 7b 17 98 01              u64 [sp + 0x198] = a0
 11885: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11890: 49 21 b8 01              u64 [sp + 440] = 0
 11894: 95 17 ff 07              a0 = sp + 0x7ff
 11898: 95 77 b1 03              a0 = a0 + 0x3b1
 11902: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11906: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11910: 95 17 ff 07              a0 = sp + 0x7ff
 11914: 95 77 e1 03              a0 = a0 + 0x3e1
 11918: 95 18 98 01              a1 = sp + 0x198
 11922: 50 20 44 01 db 05        ra = 324, jump @720
      :                          @605 [@dyn 162]
 11928: 82 65 50                 s0 = u64 [s1 + 0x50]
 11931: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11934: 82 66 48                 s1 = u64 [s1 + 0x48]
 11937: 33 07 02                 a0 = 0x2
 11940: 33 08                    a1 = 0
 11942: 33 09                    a2 = 0
 11944: 64 5a                    a3 = s0
 11946: 33 00 46 01              ra = 0x146
 11950: 0a 64                    ecalli 100 // 'log'
 11952: 01                       fallthrough
      :                          @606 [@dyn 163]
 11953: 82 17 48                 a0 = u64 [sp + 0x48]
 11956: c8 67 07                 a0 = a0 + s1
 11959: 53 27 00 f0 21           jump @612 if a0 <u 4294963200
      :                          @607
 11964: 82 18 08                 a1 = u64 [sp + 0x8]
 11967: 95 87 00 10              a0 = a1 + 0x1000
 11971: 01                       fallthrough
      :                          @608
 11972: 82 78                    a1 = u64 [a0]
 11974: c9 87 09                 a2 = a0 - a1
 11977: ab 59 0f                 jump @612 if a2 != s0
      :                          @609
 11980: c9 68 09                 a2 = a1 - s1
 11983: 01                       fallthrough
      :                          @610
 11984: 82 7a                    a3 = u64 [a0]
 11986: ab 8a f2                 jump @608 if a3 != a1
      :                          @611
 11989: 7b 79                    u64 [a0] = a2
 11991: 01                       fallthrough
      :                          @612
 11992: 95 16 ff 07              s1 = sp + 0x7ff
 11996: 95 66 99 03              s1 = s1 + 0x399
 12000: 82 67 78                 a0 = u64 [s1 + 0x78]
 12003: 33 08 05                 a1 = 0x5
 12006: 50 20 48 01 c1 16        ra = 328, jump @1071
      :                          @613 [@dyn 164]
 12012: 95 18 55                 a1 = sp + 0x55
 12015: 33 09 03                 a2 = 0x3
 12018: 95 1a 98 00              a3 = sp + 0x98
 12022: 33 0c 00 01              a5 = 0x100
 12026: 82 17 30                 a0 = u64 [sp + 0x30]
 12029: 33 0b                    a4 = 0
 12031: 0a 02                    ecalli 2 // 'read'
 12033: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12037: 95 17 ff 07              a0 = sp + 0x7ff
 12041: 95 77 19 04              a0 = a0 + 0x419
 12045: 7b 67 28                 u64 [s1 + 0x28] = a0
 12048: 33 07 50 10 01           a0 = 0x11050
 12053: 7b 17 98 01              u64 [sp + 0x198] = a0
 12057: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12062: 49 21 b8 01              u64 [sp + 440] = 0
 12066: 95 17 ff 07              a0 = sp + 0x7ff
 12070: 95 77 b1 03              a0 = a0 + 0x3b1
 12074: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12078: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12083: 82 17 10                 a0 = u64 [sp + 0x10]
 12086: 7b 67 18                 u64 [s1 + 0x18] = a0
 12089: 82 17 40                 a0 = u64 [sp + 0x40]
 12092: 7b 67 20                 u64 [s1 + 0x20] = a0
 12095: 7b 67 30                 u64 [s1 + 0x30] = a0
 12098: 95 17 ff 07              a0 = sp + 0x7ff
 12102: 95 77 e1 03              a0 = a0 + 0x3e1
 12106: 95 18 98 01              a1 = sp + 0x198
 12110: 50 20 4a 01 1f 05        ra = 330, jump @720
      :                          @614 [@dyn 165]
 12116: 82 65 50                 s0 = u64 [s1 + 0x50]
 12119: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12122: 82 66 48                 s1 = u64 [s1 + 0x48]
 12125: 33 07 02                 a0 = 0x2
 12128: 33 08                    a1 = 0
 12130: 33 09                    a2 = 0
 12132: 64 5a                    a3 = s0
 12134: 33 00 4c 01              ra = 0x14c
 12138: 0a 64                    ecalli 100 // 'log'
 12140: 01                       fallthrough
      :                          @615 [@dyn 166]
 12141: 82 17 48                 a0 = u64 [sp + 0x48]
 12144: c8 67 07                 a0 = a0 + s1
 12147: 53 27 00 f0 21           jump @621 if a0 <u 4294963200
      :                          @616
 12152: 82 18 08                 a1 = u64 [sp + 0x8]
 12155: 95 87 00 10              a0 = a1 + 0x1000
 12159: 01                       fallthrough
      :                          @617
 12160: 82 78                    a1 = u64 [a0]
 12162: c9 87 09                 a2 = a0 - a1
 12165: ab 59 0f                 jump @621 if a2 != s0
      :                          @618
 12168: c9 68 09                 a2 = a1 - s1
 12171: 01                       fallthrough
      :                          @619
 12172: 82 7a                    a3 = u64 [a0]
 12174: ab 8a f2                 jump @617 if a3 != a1
      :                          @620
 12177: 7b 79                    u64 [a0] = a2
 12179: 01                       fallthrough
      :                          @621
 12180: 95 16 ff 07              s1 = sp + 0x7ff
 12184: 95 66 99 03              s1 = s1 + 0x399
 12188: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12192: 33 08 06                 a1 = 0x6
 12195: 50 20 4e 01 04 16        ra = 334, jump @1071
      :                          @622 [@dyn 167]
 12201: 95 17 55                 a0 = sp + 0x55
 12204: 33 08 03                 a1 = 0x3
 12207: 33 09                    a2 = 0
 12209: 33 0a                    a3 = 0
 12211: 0a 03                    ecalli 3 // 'write'
 12213: 7b 67                    u64 [s1] = a0
 12215: 82 17 10                 a0 = u64 [sp + 0x10]
 12218: 7b 67 18                 u64 [s1 + 0x18] = a0
 12221: 33 07 80 10 01           a0 = 0x11080
 12226: 7b 17 98 01              u64 [sp + 0x198] = a0
 12230: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12235: 49 21 b8 01              u64 [sp + 440] = 0
 12239: 95 17 ff 07              a0 = sp + 0x7ff
 12243: 95 77 b1 03              a0 = a0 + 0x3b1
 12247: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12251: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12256: 82 17 40                 a0 = u64 [sp + 0x40]
 12259: 7b 67 20                 u64 [s1 + 0x20] = a0
 12262: 7b 66 28                 u64 [s1 + 0x28] = s1
 12265: 7b 67 30                 u64 [s1 + 0x30] = a0
 12268: 95 17 ff 07              a0 = sp + 0x7ff
 12272: 95 77 e1 03              a0 = a0 + 0x3e1
 12276: 95 18 98 01              a1 = sp + 0x198
 12280: 50 20 50 01 75 04        ra = 336, jump @720
      :                          @623 [@dyn 168]
 12286: 82 65 50                 s0 = u64 [s1 + 0x50]
 12289: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12292: 82 66 48                 s1 = u64 [s1 + 0x48]
 12295: 33 07 02                 a0 = 0x2
 12298: 33 08                    a1 = 0
 12300: 33 09                    a2 = 0
 12302: 64 5a                    a3 = s0
 12304: 33 00 52 01              ra = 0x152
 12308: 0a 64                    ecalli 100 // 'log'
 12310: 01                       fallthrough
      :                          @624 [@dyn 169]
 12311: 82 17 48                 a0 = u64 [sp + 0x48]
 12314: c8 67 07                 a0 = a0 + s1
 12317: 53 27 00 f0 21           jump @630 if a0 <u 4294963200
      :                          @625
 12322: 82 18 08                 a1 = u64 [sp + 0x8]
 12325: 95 87 00 10              a0 = a1 + 0x1000
 12329: 01                       fallthrough
      :                          @626
 12330: 82 78                    a1 = u64 [a0]
 12332: c9 87 09                 a2 = a0 - a1
 12335: ab 59 0f                 jump @630 if a2 != s0
      :                          @627
 12338: c9 68 09                 a2 = a1 - s1
 12341: 01                       fallthrough
      :                          @628
 12342: 82 7a                    a3 = u64 [a0]
 12344: ab 8a f2                 jump @626 if a3 != a1
      :                          @629
 12347: 7b 79                    u64 [a0] = a2
 12349: 01                       fallthrough
      :                          @630
 12350: 95 16 ff 07              s1 = sp + 0x7ff
 12354: 95 66 99 03              s1 = s1 + 0x399
 12358: 82 67                    a0 = u64 [s1]
 12360: 33 08 07                 a1 = 0x7
 12363: 50 20 54 01 5c 15        ra = 340, jump @1071
      :                          @631 [@dyn 170]
 12369: 95 18 98 00              a1 = sp + 0x98
 12373: 82 17 30                 a0 = u64 [sp + 0x30]
 12376: 0a 04                    ecalli 4 // 'info'
 12378: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12382: 33 08 08                 a1 = 0x8
 12385: 50 20 56 01 46 15        ra = 342, jump @1071
      :                          @632 [@dyn 171]
 12391: 82 17 38                 a0 = u64 [sp + 0x38]
 12394: 7b 67 18                 u64 [s1 + 0x18] = a0
 12397: 82 18 40                 a1 = u64 [sp + 0x40]
 12400: 7b 68 20                 u64 [s1 + 0x20] = a1
 12403: 95 17 ff 07              a0 = sp + 0x7ff
 12407: 95 77 19 04              a0 = a0 + 0x419
 12411: 7b 67 28                 u64 [s1 + 0x28] = a0
 12414: 7b 68 30                 u64 [s1 + 0x30] = a1
 12417: 33 07 b0 10 01           a0 = 0x110b0
 12422: 7b 17 98 01              u64 [sp + 0x198] = a0
 12426: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12431: 49 21 b8 01              u64 [sp + 440] = 0
 12435: 95 17 ff 07              a0 = sp + 0x7ff
 12439: 95 77 b1 03              a0 = a0 + 0x3b1
 12443: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12447: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12452: 95 17 ff 07              a0 = sp + 0x7ff
 12456: 95 77 e1 03              a0 = a0 + 0x3e1
 12460: 95 18 98 01              a1 = sp + 0x198
 12464: 50 20 58 01 bd 03        ra = 344, jump @720
      :                          @633 [@dyn 172]
 12470: 82 65 50                 s0 = u64 [s1 + 0x50]
 12473: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12476: 95 17 ff 07              a0 = sp + 0x7ff
 12480: 95 77 99 03              a0 = a0 + 0x399
 12484: 82 76 48                 s1 = u64 [a0 + 0x48]
 12487: 33 07 02                 a0 = 0x2
 12490: 33 08                    a1 = 0
 12492: 33 09                    a2 = 0
 12494: 64 5a                    a3 = s0
 12496: 33 00 5a 01              ra = 0x15a
 12500: 0a 64                    ecalli 100 // 'log'
 12502: 01                       fallthrough
      :                          @634 [@dyn 173]
 12503: 82 17 48                 a0 = u64 [sp + 0x48]
 12506: c8 67 07                 a0 = a0 + s1
 12509: 53 27 00 f0 25           jump @640 if a0 <u 4294963200
      :                          @635
 12514: 33 07 20 00 03           a0 = 0x30020
 12519: 95 77 00 10              a0 = a0 + 0x1000
 12523: 01                       fallthrough
      :                          @636
 12524: 82 78                    a1 = u64 [a0]
 12526: c9 87 09                 a2 = a0 - a1
 12529: ab 59 11                 jump @640 if a2 != s0
      :                          @637
 12532: c9 68 09                 a2 = a1 - s1
 12535: 01                       fallthrough
      :                          @638
 12536: 82 7a                    a3 = u64 [a0]
 12538: ab 8a f2                 jump @636 if a3 != a1
      :                          @639
 12541: 7b 79                    u64 [a0] = a2
 12543: 0a                       ecalli 0 // 'gas'
 12544: 28 04                    jump @641
      :                          @640
 12546: 0a                       ecalli 0 // 'gas'
 12547: 01                       fallthrough
      :                          @641
 12548: 95 16 ff 07              s1 = sp + 0x7ff
 12552: 95 66 99 03              s1 = s1 + 0x399
 12556: 7b 67                    u64 [s1] = a0
 12558: 33 08 09                 a1 = 0x9
 12561: 50 20 5c 01 96 14        ra = 348, jump @1071
      :                          @642 [@dyn 174]
 12567: 82 17 38                 a0 = u64 [sp + 0x38]
 12570: 7b 67 18                 u64 [s1 + 0x18] = a0
 12573: 82 17 40                 a0 = u64 [sp + 0x40]
 12576: 7b 67 20                 u64 [s1 + 0x20] = a0
 12579: 7b 66 28                 u64 [s1 + 0x28] = s1
 12582: 7b 67 30                 u64 [s1 + 0x30] = a0
 12585: 33 07 e0 10 01           a0 = 0x110e0
 12590: 7b 17 98 01              u64 [sp + 0x198] = a0
 12594: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12599: 49 21 b8 01              u64 [sp + 440] = 0
 12603: 95 17 ff 07              a0 = sp + 0x7ff
 12607: 95 77 b1 03              a0 = a0 + 0x3b1
 12611: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12615: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12620: 95 17 ff 07              a0 = sp + 0x7ff
 12624: 95 77 e1 03              a0 = a0 + 0x3e1
 12628: 95 18 98 01              a1 = sp + 0x198
 12632: 50 20 5e 01 15 03        ra = 350, jump @720
      :                          @643 [@dyn 175]
 12638: 82 65 50                 s0 = u64 [s1 + 0x50]
 12641: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12644: 82 66 48                 s1 = u64 [s1 + 0x48]
 12647: 33 07 02                 a0 = 0x2
 12650: 33 08                    a1 = 0
 12652: 33 09                    a2 = 0
 12654: 64 5a                    a3 = s0
 12656: 33 00 60 01              ra = 0x160
 12660: 0a 64                    ecalli 100 // 'log'
 12662: 01                       fallthrough
      :                          @644 [@dyn 176]
 12663: 82 17 48                 a0 = u64 [sp + 0x48]
 12666: c8 67 07                 a0 = a0 + s1
 12669: 53 27 00 f0 25           jump @650 if a0 <u 4294963200
      :                          @645
 12674: 33 07 20 00 03           a0 = 0x30020
 12679: 95 77 00 10              a0 = a0 + 0x1000
 12683: 01                       fallthrough
      :                          @646
 12684: 82 78                    a1 = u64 [a0]
 12686: c9 87 09                 a2 = a0 - a1
 12689: ab 59 11                 jump @650 if a2 != s0
      :                          @647
 12692: c9 68 09                 a2 = a1 - s1
 12695: 01                       fallthrough
      :                          @648
 12696: 82 7a                    a3 = u64 [a0]
 12698: ab 8a f2                 jump @646 if a3 != a1
      :                          @649
 12701: 7b 79                    u64 [a0] = a2
 12703: 33 0b                    a4 = 0
 12705: 01                       fallthrough
      :                          @650
 12706: 49 21 b0 01              u64 [sp + 432] = 0
 12710: 49 21 a8 01              u64 [sp + 424] = 0
 12714: 49 21 a0 01              u64 [sp + 416] = 0
 12718: 49 21 98 01              u64 [sp + 408] = 0
 12722: 82 19 20                 a2 = u64 [sp + 0x20]
 12725: 82 1a 28                 a3 = u64 [sp + 0x28]
 12728: 55 19 21 79              jump @661 if a2 >=u 33
      :                          @651
 12732: 97 a6 20                 s1 = a3 << 0x20
 12735: 98 66 20                 s1 = s1 >> 0x20
 12738: 95 17 98 01              a0 = sp + 0x198
 12742: 95 15 98 01              s0 = sp + 0x198
 12746: 82 18 18                 a1 = u64 [sp + 0x18]
 12749: 50 20 62 01 15 05        ra = 354, jump @770
      :                          @652 [@dyn 177]
 12755: 3a 08 00 00 03           a1 = u64 [0x30000]
 12760: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 12770: ca 76 07                 a0 = s1 * a0
 12773: ae 87 2c                 jump @657 if a0 >=u a1
      :                          @653
 12776: 82 18 28                 a1 = u64 [sp + 0x28]
 12779: 51 18 09 18              jump @655 if a1 == 9
      :                          @654
 12783: 0a 08                    ecalli 8 // 'checkpoint'
 12785: 33 0a df 05 01           a3 = 0x105df
 12790: 33 07 02                 a0 = 0x2
 12793: 33 0b 11                 a4 = 0x11
 12796: 33 08                    a1 = 0
 12798: 33 09                    a2 = 0
 12800: 0a 64                    ecalli 100 // 'log'
 12802: 01                       fallthrough
      :                          @655
 12803: 95 67 2a                 a0 = s1 + 0x2a
 12806: 33 08 07                 a1 = 0x7
 12809: 50 20 64 01 9e 13        ra = 356, jump @1071
      :                          @656 [@dyn 178]
 12815: 32 07                    jump [a0]
      :                          @657
 12817: 95 17 98 01              a0 = sp + 0x198
 12821: 0a 10                    ecalli 16 // 'oyield'
 12823: 33 0a ce 00 01           a3 = 0x100ce
 12828: 33 07 02                 a0 = 0x2
 12831: 33 0b 10                 a4 = 0x10
 12834: 33 08                    a1 = 0
 12836: 33 09                    a2 = 0
 12838: 0a 64                    ecalli 100 // 'log'
 12840: 33 08 20                 a1 = 0x20
 12843: 28 f5 e3                 jump @303
      :                          @658
 12846: 00                       trap
      :                          @659
 12847: 00                       trap
      :                          @660
 12848: 00                       trap
      :                          @661
 12849: 00                       trap
      :                          @662
 12850: 00                       trap
      :                          @663 [export #2: 'on_transfer']
 12851: 33 07 00 00 01           a0 = 0x10000
 12856: 33 08                    a1 = 0
 12858: 32 00                    ret
      :                          @664
 12860: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 12863: 7b 10 40                 u64 [sp + 0x40] = ra
 12866: 7b 15 38                 u64 [sp + 0x38] = s0
 12869: 7b 16 30                 u64 [sp + 0x30] = s1
 12872: c8 89 09                 a2 = a2 + a1
 12875: ac 89 53                 jump @672 if a2 <u a1
      :                          @665
 12878: 64 75                    s0 = a0
 12880: 82 77                    a0 = u64 [a0]
 12882: 97 78 01                 a1 = a0 << 0x1
 12885: 33 0a 08                 a3 = 0x8
 12888: e4 a9 09                 a2 = maxu(a2, a3)
 12891: e4 98 06                 s1 = maxu(a1, a2)
 12894: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 12897: 98 88 3f                 a1 = a1 >> 0x3f
 12900: 51 07 12                 jump @667 if a0 == 0
      :                          @666
 12903: 82 59 08                 a2 = u64 [s0 + 0x8]
 12906: 7b 19 18                 u64 [sp + 0x18] = a2
 12909: 49 11 20 01              u64 [sp + 32] = 0x1
 12913: 7b 17 28                 u64 [sp + 0x28] = a0
 12916: 28 06                    jump @668
      :                          @667
 12918: 49 11 20                 u64 [sp + 32] = 0
 12921: 01                       fallthrough
      :                          @668
 12922: 64 17                    a0 = sp
 12924: 95 1a 18                 a3 = sp + 0x18
 12927: 64 69                    a2 = s1
 12929: 50 20 66 01 33           ra = 358, jump @676
      :                          @669 [@dyn 179]
 12934: 82 18                    a1 = u64 [sp]
 12936: 82 17 08                 a0 = u64 [sp + 0x8]
 12939: 51 08 14                 jump @673 if a1 == 0
      :                          @670
 12942: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 12952: aa 87 0d                 jump @674 if a0 == a1
      :                          @671
 12955: 52 07 18                 jump @675 if a0 != 0
      :                          @672
 12958: 00                       trap
      :                          @673
 12959: 7b 57 08                 u64 [s0 + 0x8] = a0
 12962: 7b 56                    u64 [s0] = s1
 12964: 01                       fallthrough
      :                          @674
 12965: 82 10 40                 ra = u64 [sp + 0x40]
 12968: 82 15 38                 s0 = u64 [sp + 0x38]
 12971: 82 16 30                 s1 = u64 [sp + 0x30]
 12974: 95 11 48                 sp = sp + 0x48
 12977: 32 00                    ret
      :                          @675
 12979: 00                       trap
      :                          @676
 12980: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 12983: 7b 10 30                 u64 [sp + 0x30] = ra
 12986: 7b 15 28                 u64 [sp + 0x28] = s0
 12989: 7b 16 20                 u64 [sp + 0x20] = s1
 12992: 64 96                    s1 = a2
 12994: 64 73                    t1 = a0
 12996: 51 08 6f                 jump @686 if a1 == 0
      :                          @677
 12999: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13002: 51 07 72                 jump @687 if a0 == 0
      :                          @678
 13005: 82 a9 10                 a2 = u64 [a3 + 0x10]
 13008: 51 09 9f 00              jump @694 if a2 == 0
      :                          @679
 13012: 82 a8                    a1 = u64 [a3]
 13014: 33 02 00 10              t0 = 0x1000
 13018: 33 04 20 00 03           t2 = 0x30020
 13023: c8 24 07                 a0 = t2 + t0
 13026: 01                       fallthrough
      :                          @680
 13027: 82 7a                    a3 = u64 [a0]
 13029: c8 6a 05                 s0 = a3 + s1
 13032: ac a5 c3 00              jump @700 if s0 <u a3
      :                          @681
 13036: 95 5b 01                 a4 = s0 + 0x1
 13039: 88 bc 01                 a5 = a4 <u 0x1
 13042: d8 b2 0b                 a4 = t0 <u a4
 13045: d4 cb 0b                 a4 = a4 | a5
 13048: 52 0b b3 00              jump @700 if a4 != 0
      :                          @682
 13052: 82 7b                    a4 = u64 [a0]
 13054: ab ab e5                 jump @680 if a4 != a3
      :                          @683
 13057: 7b 75                    u64 [a0] = s0
 13059: 33 0c                    a5 = 0
 13061: 7b 13 18                 u64 [sp + 0x18] = t1
 13064: c9 54 07                 a0 = t2 - s0
 13067: 95 77 00 10              a0 = a0 + 0x1000
 13071: 7b 17 10                 u64 [sp + 0x10] = a0
 13074: 7b 18 08                 u64 [sp + 0x8] = a1
 13077: 64 95                    s0 = a2
 13079: 7b 14                    u64 [sp] = t2
 13081: 50 20 68 01 c9 03        ra = 360, jump @770
      :                          @684 [@dyn 180]
 13087: 54 25 00 10 94 00        jump @701 if s0 <=u 4096
      :                          @685
 13093: 82 13 18                 t1 = u64 [sp + 0x18]
 13096: 82 18 10                 a1 = u64 [sp + 0x10]
 13099: 33 07                    a0 = 0
 13101: 7b 38 08                 u64 [t1 + 0x8] = a1
 13104: 28 b1 00                 jump @707
      :                          @686
 13107: 49 13 08                 u64 [t1 + 8] = 0
 13110: 33 07 01                 a0 = 0x1
 13113: 28 a8 00                 jump @707
      :                          @687
 13116: 33 07 00 10              a0 = 0x1000
 13120: 33 02 20 00 03           t0 = 0x30020
 13125: c8 72 09                 a2 = t0 + a0
 13128: 01                       fallthrough
      :                          @688
 13129: 82 9b                    a4 = u64 [a2]
 13131: c8 6b 0a                 a3 = a4 + s1
 13134: ac ba 5d                 jump @700 if a3 <u a4
      :                          @689
 13137: 95 ac 01                 a5 = a3 + 0x1
 13140: 88 c8 01                 a1 = a5 <u 0x1
 13143: d8 c7 0c                 a5 = a0 <u a5
 13146: d4 c8 08                 a1 = a1 | a5
 13149: 52 08 4e                 jump @700 if a1 != 0
      :                          @690
 13152: 82 98                    a1 = u64 [a2]
 13154: ab b8 e7                 jump @688 if a1 != a4
      :                          @691
 13157: 7b 9a                    u64 [a2] = a3
 13159: 33 0c                    a5 = 0
 13161: 01                       fallthrough
      :                          @692
 13162: ab b8 df                 jump @688 if a1 != a4
      :                          @693
 13165: 28 30                    jump @699
      :                          @694
 13167: 33 07 00 10              a0 = 0x1000
 13171: 33 02 20 00 03           t0 = 0x30020
 13176: c8 72 09                 a2 = t0 + a0
 13179: 01                       fallthrough
      :                          @695
 13180: 82 9b                    a4 = u64 [a2]
 13182: c8 6b 0a                 a3 = a4 + s1
 13185: ac ba 2a                 jump @700 if a3 <u a4
      :                          @696
 13188: 95 ac 01                 a5 = a3 + 0x1
 13191: 88 c8 01                 a1 = a5 <u 0x1
 13194: d8 c7 0c                 a5 = a0 <u a5
 13197: d4 c8 08                 a1 = a1 | a5
 13200: 52 08 1b                 jump @700 if a1 != 0
      :                          @697
 13203: 82 98                    a1 = u64 [a2]
 13205: ab b8 e7                 jump @695 if a1 != a4
      :                          @698
 13208: 7b 9a                    u64 [a2] = a3
 13210: 33 0c                    a5 = 0
 13212: 01                       fallthrough
      :                          @699
 13213: c9 a2 07                 a0 = t0 - a3
 13216: 95 78 00 10              a1 = a0 + 0x1000
 13220: 33 07                    a0 = 0
 13222: 7b 38 08                 u64 [t1 + 0x8] = a1
 13225: 28 38                    jump @707
      :                          @700
 13227: 33 07 01                 a0 = 0x1
 13230: 7b 37 08                 u64 [t1 + 0x8] = a0
 13233: 28 30                    jump @707
      :                          @701
 13235: 64 5c                    a5 = s0
 13237: 82 18                    a1 = u64 [sp]
 13239: 95 87 00 10              a0 = a1 + 0x1000
 13243: 82 13 18                 t1 = u64 [sp + 0x18]
 13246: 82 15 08                 s0 = u64 [sp + 0x8]
 13249: 01                       fallthrough
      :                          @702
 13250: 82 78                    a1 = u64 [a0]
 13252: c9 87 09                 a2 = a0 - a1
 13255: ab 59 11                 jump @706 if a2 != s0
      :                          @703
 13258: c9 c8 09                 a2 = a1 - a5
 13261: 01                       fallthrough
      :                          @704
 13262: 82 7a                    a3 = u64 [a0]
 13264: ab 8a f2                 jump @702 if a3 != a1
      :                          @705
 13267: 7b 79                    u64 [a0] = a2
 13269: 33 0b                    a4 = 0
 13271: 01                       fallthrough
      :                          @706
 13272: 82 18 10                 a1 = u64 [sp + 0x10]
 13275: 33 07                    a0 = 0
 13277: 7b 38 08                 u64 [t1 + 0x8] = a1
 13280: 01                       fallthrough
      :                          @707
 13281: 7b 36 10                 u64 [t1 + 0x10] = s1
 13284: 7b 37                    u64 [t1] = a0
 13286: 82 10 30                 ra = u64 [sp + 0x30]
 13289: 82 15 28                 s0 = u64 [sp + 0x28]
 13292: 82 16 20                 s1 = u64 [sp + 0x20]
 13295: 95 11 38                 sp = sp + 0x38
 13298: 32 00                    ret
      :                          @708
 13300: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13303: 7b 10 40                 u64 [sp + 0x40] = ra
 13306: 7b 15 38                 u64 [sp + 0x38] = s0
 13309: 7b 16 30                 u64 [sp + 0x30] = s1
 13312: 95 88 01                 a1 = a1 + 0x1
 13315: 51 08 54                 jump @716 if a1 == 0
      :                          @709
 13318: 64 75                    s0 = a0
 13320: 82 77                    a0 = u64 [a0]
 13322: 97 79 01                 a2 = a0 << 0x1
 13325: 33 0a 08                 a3 = 0x8
 13328: e4 a8 08                 a1 = maxu(a1, a3)
 13331: e4 89 06                 s1 = maxu(a2, a1)
 13334: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 13337: 98 88 3f                 a1 = a1 >> 0x3f
 13340: 51 07 12                 jump @711 if a0 == 0
      :                          @710
 13343: 82 59 08                 a2 = u64 [s0 + 0x8]
 13346: 7b 19 18                 u64 [sp + 0x18] = a2
 13349: 49 11 20 01              u64 [sp + 32] = 0x1
 13353: 7b 17 28                 u64 [sp + 0x28] = a0
 13356: 28 06                    jump @712
      :                          @711
 13358: 49 11 20                 u64 [sp + 32] = 0
 13361: 01                       fallthrough
      :                          @712
 13362: 64 17                    a0 = sp
 13364: 95 1a 18                 a3 = sp + 0x18
 13367: 64 69                    a2 = s1
 13369: 50 20 6a 01 7b fe        ra = 362, jump @676
      :                          @713 [@dyn 181]
 13375: 82 18                    a1 = u64 [sp]
 13377: 82 17 08                 a0 = u64 [sp + 0x8]
 13380: 51 08 14                 jump @717 if a1 == 0
      :                          @714
 13383: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 13393: aa 87 0d                 jump @718 if a0 == a1
      :                          @715
 13396: 52 07 18                 jump @719 if a0 != 0
      :                          @716
 13399: 00                       trap
      :                          @717
 13400: 7b 57 08                 u64 [s0 + 0x8] = a0
 13403: 7b 56                    u64 [s0] = s1
 13405: 01                       fallthrough
      :                          @718
 13406: 82 10 40                 ra = u64 [sp + 0x40]
 13409: 82 15 38                 s0 = u64 [sp + 0x38]
 13412: 82 16 30                 s1 = u64 [sp + 0x30]
 13415: 95 11 48                 sp = sp + 0x48
 13418: 32 00                    ret
      :                          @719
 13420: 00                       trap
      :                          @720
 13421: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 13424: 7b 10 30                 u64 [sp + 0x30] = ra
 13427: 7b 15 28                 u64 [sp + 0x28] = s0
 13430: 7b 16 20                 u64 [sp + 0x20] = s1
 13433: 64 89                    a2 = a1
 13435: 82 8a 08                 a3 = u64 [a1 + 0x8]
 13438: 64 75                    s0 = a0
 13440: 51 0a 35                 jump @725 if a3 == 0
      :                          @721
 13443: 82 98                    a1 = u64 [a2]
 13445: 33 07                    a0 = 0
 13447: 95 8b 08                 a4 = a1 + 0x8
 13450: 01                       fallthrough
      :                          @722
 13451: 82 bc                    a5 = u64 [a4]
 13453: c8 c7 07                 a0 = a0 + a5
 13456: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13459: 95 bb 10                 a4 = a4 + 0x10
 13462: 52 0a f5                 jump @722 if a3 != 0
      :                          @723
 13465: 82 9a 18                 a3 = u64 [a2 + 0x18]
 13468: 51 0a 24                 jump @727 if a3 == 0
      :                          @724
 13471: 82 88 08                 a1 = u64 [a1 + 0x8]
 13474: 8e 88                    a1 = a1 >u 0
 13476: 88 7a 10                 a3 = a0 <u 0x10
 13479: 85 aa 01                 a3 = a3 ^ 0x1
 13482: d4 a8 08                 a1 = a1 | a3
 13485: 89 7a                    a3 = a0 <s 0
 13487: e0 a8 08                 a1 = a1 & ~a3
 13490: 52 08 0a                 jump @726 if a1 != 0
      :                          @725
 13493: 33 07                    a0 = 0
 13495: 33 08 01                 a1 = 0x1
 13498: 28 48                    jump @735
      :                          @726
 13500: 97 77 01                 a0 = a0 << 0x1
 13503: 01                       fallthrough
      :                          @727
 13504: 51 07 3e                 jump @734 if a0 == 0
      :                          @728
 13507: 57 07 77                 jump @740 if a0 <s 0
      :                          @729
 13510: 64 53                    t1 = s0
 13512: 33 08 00 10              a1 = 0x1000
 13516: 33 02 20 00 03           t0 = 0x30020
 13521: c8 82 0b                 a4 = t0 + a1
 13524: 01                       fallthrough
      :                          @730
 13525: 82 bc                    a5 = u64 [a4]
 13527: c8 7c 0a                 a3 = a5 + a0
 13530: ac ca 5e                 jump @738 if a3 <u a5
      :                          @731
 13533: 95 a5 01                 s0 = a3 + 0x1
 13536: 88 56 01                 s1 = s0 <u 0x1
 13539: d8 58 05                 s0 = a1 <u s0
 13542: d4 65 05                 s0 = s0 | s1
 13545: 52 05 4f                 jump @738 if s0 != 0
      :                          @732
 13548: 82 b6                    s1 = u64 [a4]
 13550: ab c6 e7                 jump @730 if s1 != a5
      :                          @733
 13553: 7b ba                    u64 [a4] = a3
 13555: c9 a2 08                 a1 = t0 - a3
 13558: 95 88 00 10              a1 = a1 + 0x1000
 13562: 64 35                    s0 = t1
 13564: 28 06                    jump @735
      :                          @734
 13566: 33 08 01                 a1 = 0x1
 13569: 01                       fallthrough
      :                          @735
 13570: 7b 17                    u64 [sp] = a0
 13572: 7b 18 08                 u64 [sp + 0x8] = a1
 13575: 49 11 10                 u64 [sp + 16] = 0
 13578: 33 08 10 11 01           a1 = 0x11110
 13583: 64 17                    a0 = sp
 13585: 50 20 6c 01 56 0a        ra = 364, jump @938
      :                          @736 [@dyn 182]
 13591: 52 07 22                 jump @739 if a0 != 0
      :                          @737
 13594: 82 17 10                 a0 = u64 [sp + 0x10]
 13597: 82 18 08                 a1 = u64 [sp + 0x8]
 13600: 82 19                    a2 = u64 [sp]
 13602: 7b 57 10                 u64 [s0 + 0x10] = a0
 13605: 7b 58 08                 u64 [s0 + 0x8] = a1
 13608: 7b 59                    u64 [s0] = a2
 13610: 82 10 30                 ra = u64 [sp + 0x30]
 13613: 82 15 28                 s0 = u64 [sp + 0x28]
 13616: 82 16 20                 s1 = u64 [sp + 0x20]
 13619: 95 11 38                 sp = sp + 0x38
 13622: 32 00                    ret
      :                          @738
 13624: 00                       trap
      :                          @739
 13625: 00                       trap
      :                          @740
 13626: 00                       trap
      :                          @741 [@dyn 183]
 13627: 82 72                    t0 = u64 [a0]
 13629: 33 09 00 f0              a2 = 0xfffffffffffff000
 13633: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 13637: ac 9a 27                 jump @747 if a3 <u a2
      :                          @742
 13640: 82 77 08                 a0 = u64 [a0 + 0x8]
 13643: 33 09 20 00 03           a2 = 0x30020
 13648: 95 99 00 10              a2 = a2 + 0x1000
 13652: 01                       fallthrough
      :                          @743
 13653: 82 9a                    a3 = u64 [a2]
 13655: c9 a9 0b                 a4 = a2 - a3
 13658: ab 7b 12                 jump @747 if a4 != a0
      :                          @744
 13661: c9 2a 0b                 a4 = a3 - t0
 13664: 01                       fallthrough
      :                          @745
 13665: 82 9c                    a5 = u64 [a2]
 13667: ab ac f2                 jump @743 if a5 != a3
      :                          @746
 13670: 7b 9b                    u64 [a2] = a4
 13672: 33 08                    a1 = 0
 13674: 32 00                    ret
      :                          @747
 13676: 32 00                    ret
      :                          @748 [@dyn 184]
 13678: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13681: 7b 10 18                 u64 [sp + 0x18] = ra
 13684: 7b 15 10                 u64 [sp + 0x10] = s0
 13687: 7b 16 08                 u64 [sp + 0x8] = s1
 13690: 64 75                    s0 = a0
 13692: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13695: 82 77                    a0 = u64 [a0]
 13697: c9 a7 07                 a0 = a0 - a3
 13700: 64 96                    s1 = a2
 13702: ac 97 2b                 jump @751 if a0 <u a2
      :                          @749
 13705: 7b 1a                    u64 [sp] = a3
 13707: 82 57 08                 a0 = u64 [s0 + 0x8]
 13710: c8 a7 07                 a0 = a0 + a3
 13713: 64 69                    a2 = s1
 13715: 50 20 72 01 4f 01        ra = 370, jump @770
      :                          @750 [@dyn 185]
 13721: 82 17                    a0 = u64 [sp]
 13723: c8 76 06                 s1 = s1 + a0
 13726: 7b 56 10                 u64 [s0 + 0x10] = s1
 13729: 33 07                    a0 = 0
 13731: 82 10 18                 ra = u64 [sp + 0x18]
 13734: 82 15 10                 s0 = u64 [sp + 0x10]
 13737: 82 16 08                 s1 = u64 [sp + 0x8]
 13740: 95 11 20                 sp = sp + 0x20
 13743: 32 00                    ret
      :                          @751
 13745: 64 57                    a0 = s0
 13747: 7b 18                    u64 [sp] = a1
 13749: 64 a8                    a1 = a3
 13751: 64 69                    a2 = s1
 13753: 50 20 74 01 83 fc        ra = 372, jump @664
      :                          @752 [@dyn 186]
 13759: 82 18                    a1 = u64 [sp]
 13761: 82 5a 10                 a3 = u64 [s0 + 0x10]
 13764: 28 c5                    jump @749
      :                          @753 [@dyn 187]
 13766: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 13769: 7b 10 20                 u64 [sp + 0x20] = ra
 13772: 7b 15 18                 u64 [sp + 0x18] = s0
 13775: 7b 16 10                 u64 [sp + 0x10] = s1
 13778: 64 86                    s1 = a1
 13780: 83 88                    i32 a1 = a1 + 0
 13782: 33 09 80 00              a2 = 0x80
 13786: 64 7a                    a3 = a0
 13788: ae 98 2c                 jump @758 if a1 >=u a2
      :                          @754
 13791: 82 a8 10                 a1 = u64 [a3 + 0x10]
 13794: 82 a7                    a0 = u64 [a3]
 13796: ab 78 13                 jump @757 if a1 != a0
      :                          @755
 13799: 64 a7                    a0 = a3
 13801: 64 a5                    s0 = a3
 13803: 50 20 78 01 09 fe        ra = 376, jump @708
      :                          @756 [@dyn 188]
 13809: 64 5a                    a3 = s0
 13811: 82 58 10                 a1 = u64 [s0 + 0x10]
 13814: 01                       fallthrough
      :                          @757
 13815: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13818: c8 87 07                 a0 = a0 + a1
 13821: 78 76                    u8 [a0] = s1
 13823: 95 88 01                 a1 = a1 + 0x1
 13826: 7b a8 10                 u64 [a3 + 0x10] = a1
 13829: 28 ac 00                 jump @766
      :                          @758
 13832: 8b 67 0b                 i32 a0 = s1 >> 0xb
 13835: 48 11 0c                 u32 [sp + 12] = 0
 13838: 52 07 1c                 jump @760 if a0 != 0
      :                          @759
 13841: 98 67 06                 a0 = s1 >> 0x6
 13844: 86 77 c0 00              a0 = a0 | 0xc0
 13848: 78 17 0c                 u8 [sp + 0xc] = a0
 13851: 84 67 3f                 a0 = s1 & 0x3f
 13854: 86 77 80 00              a0 = a0 | 0x80
 13858: 78 17 0d                 u8 [sp + 0xd] = a0
 13861: 33 06 02                 s1 = 0x2
 13864: 28 63                    jump @763
      :                          @760
 13866: 8b 67 10                 i32 a0 = s1 >> 0x10
 13869: 52 07 29                 jump @762 if a0 != 0
      :                          @761
 13872: 98 67 0c                 a0 = s1 >> 0xc
 13875: 86 77 e0 00              a0 = a0 | 0xe0
 13879: 78 17 0c                 u8 [sp + 0xc] = a0
 13882: 97 67 34                 a0 = s1 << 0x34
 13885: 98 77 3a                 a0 = a0 >> 0x3a
 13888: 95 77 80 00              a0 = a0 + 0x80
 13892: 78 17 0d                 u8 [sp + 0xd] = a0
 13895: 84 67 3f                 a0 = s1 & 0x3f
 13898: 86 77 80 00              a0 = a0 | 0x80
 13902: 78 17 0e                 u8 [sp + 0xe] = a0
 13905: 33 06 03                 s1 = 0x3
 13908: 28 37                    jump @763
      :                          @762
 13910: 97 67 2b                 a0 = s1 << 0x2b
 13913: 98 77 3d                 a0 = a0 >> 0x3d
 13916: 95 77 f0 00              a0 = a0 + 0xf0
 13920: 78 17 0c                 u8 [sp + 0xc] = a0
 13923: 97 67 2e                 a0 = s1 << 0x2e
 13926: 98 77 3a                 a0 = a0 >> 0x3a
 13929: 95 77 80 00              a0 = a0 + 0x80
 13933: 78 17 0d                 u8 [sp + 0xd] = a0
 13936: 97 67 34                 a0 = s1 << 0x34
 13939: 98 77 3a                 a0 = a0 >> 0x3a
 13942: 95 77 80 00              a0 = a0 + 0x80
 13946: 78 17 0e                 u8 [sp + 0xe] = a0
 13949: 84 67 3f                 a0 = s1 & 0x3f
 13952: 86 77 80 00              a0 = a0 | 0x80
 13956: 78 17 0f                 u8 [sp + 0xf] = a0
 13959: 33 06 04                 s1 = 0x4
 13962: 01                       fallthrough
      :                          @763
 13963: 82 a5 10                 s0 = u64 [a3 + 0x10]
 13966: 82 a7                    a0 = u64 [a3]
 13968: c9 57 07                 a0 = a0 - s0
 13971: ac 67 2e                 jump @767 if a0 <u s1
      :                          @764
 13974: 7b 1a                    u64 [sp] = a3
 13976: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13979: c8 57 07                 a0 = a0 + s0
 13982: 95 18 0c                 a1 = sp + 0xc
 13985: 64 69                    a2 = s1
 13987: 50 20 7a 01 3f           ra = 378, jump @770
      :                          @765 [@dyn 189]
 13992: c8 56 06                 s1 = s1 + s0
 13995: 82 17                    a0 = u64 [sp]
 13997: 7b 76 10                 u64 [a0 + 0x10] = s1
 14000: 01                       fallthrough
      :                          @766
 14001: 33 07                    a0 = 0
 14003: 82 10 20                 ra = u64 [sp + 0x20]
 14006: 82 15 18                 s0 = u64 [sp + 0x18]
 14009: 82 16 10                 s1 = u64 [sp + 0x10]
 14012: 95 11 28                 sp = sp + 0x28
 14015: 32 00                    ret
      :                          @767
 14017: 64 a7                    a0 = a3
 14019: 64 58                    a1 = s0
 14021: 64 69                    a2 = s1
 14023: 64 a5                    s0 = a3
 14025: 50 20 7c 01 73 fb        ra = 380, jump @664
      :                          @768 [@dyn 190]
 14031: 64 5a                    a3 = s0
 14033: 82 55 10                 s0 = u64 [s0 + 0x10]
 14036: 28 c2                    jump @764
      :                          @769 [@dyn 191]
 14038: 64 8a                    a3 = a1
 14040: 33 08 10 11 01           a1 = 0x11110
 14045: 64 a9                    a2 = a3
 14047: 28 88 08                 jump @938
      :                          @770
 14050: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 14053: 7b 10 18                 u64 [sp + 0x18] = ra
 14056: 7b 15 10                 u64 [sp + 0x10] = s0
 14059: 7b 16 08                 u64 [sp + 0x8] = s1
 14062: 53 19 10 64              jump @779 if a2 <u 16
      :                          @771
 14066: 8d 7a                    i32 a3 = -a0
 14068: 84 a2 07                 t0 = a3 & 0x7
 14071: c8 27 0b                 a4 = a0 + t0
 14074: 51 02 15                 jump @774 if t0 == 0
      :                          @772
 14077: 64 8c                    a5 = a1
 14079: 64 75                    s0 = a0
 14081: 01                       fallthrough
      :                          @773
 14082: 7c ca                    a3 = u8 [a5]
 14084: 78 5a                    u8 [s0] = a3
 14086: 95 55 01                 s0 = s0 + 0x1
 14089: 95 cc 01                 a5 = a5 + 0x1
 14092: ac b5 f6                 jump @773 if s0 <u a4
      :                          @774
 14095: c8 28 03                 t1 = a1 + t0
 14098: c9 29 02                 t0 = a2 - t0
 14101: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 14104: 84 38 07                 a1 = t1 & 0x7
 14107: c8 4b 0a                 a3 = a4 + t2
 14110: 51 08 3b                 jump @781 if a1 == 0
      :                          @775
 14113: 58 04 4b                 jump @784 if t2 <=s 0
      :                          @776
 14116: 97 38 03                 a1 = t1 << 0x3
 14119: 84 80 38                 ra = a1 & 0x38
 14122: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14125: 82 c5                    s0 = u64 [a5]
 14127: 8d 88                    i32 a1 = -a1
 14129: 84 88 38                 a1 = a1 & 0x38
 14132: 95 cc 08                 a5 = a5 + 0x8
 14135: 01                       fallthrough
      :                          @777
 14136: 82 c6                    s1 = u64 [a5]
 14138: d0 05 05                 s0 = s0 >> ra
 14141: cf 86 09                 a2 = s1 << a1
 14144: d4 59 09                 a2 = a2 | s0
 14147: 7b b9                    u64 [a4] = a2
 14149: 95 bb 08                 a4 = a4 + 0x8
 14152: 95 cc 08                 a5 = a5 + 0x8
 14155: 64 65                    s0 = s1
 14157: ac ab eb                 jump @777 if a4 <u a3
      :                          @778
 14160: 28 1c                    jump @784
      :                          @779
 14162: 64 7a                    a3 = a0
 14164: 52 09 21                 jump @785 if a2 != 0
      :                          @780
 14167: 28 2f                    jump @787
      :                          @781
 14169: 58 04 13                 jump @784 if t2 <=s 0
      :                          @782
 14172: 64 38                    a1 = t1
 14174: 01                       fallthrough
      :                          @783
 14175: 82 89                    a2 = u64 [a1]
 14177: 7b b9                    u64 [a4] = a2
 14179: 95 bb 08                 a4 = a4 + 0x8
 14182: 95 88 08                 a1 = a1 + 0x8
 14185: ac ab f6                 jump @783 if a4 <u a3
      :                          @784
 14188: c8 43 08                 a1 = t1 + t2
 14191: 84 29 07                 a2 = t0 & 0x7
 14194: 51 09 14                 jump @787 if a2 == 0
      :                          @785
 14197: c8 a9 09                 a2 = a2 + a3
 14200: 01                       fallthrough
      :                          @786
 14201: 7c 8b                    a4 = u8 [a1]
 14203: 78 ab                    u8 [a3] = a4
 14205: 95 aa 01                 a3 = a3 + 0x1
 14208: 95 88 01                 a1 = a1 + 0x1
 14211: ac 9a f6                 jump @786 if a3 <u a2
      :                          @787
 14214: 82 10 18                 ra = u64 [sp + 0x18]
 14217: 82 15 10                 s0 = u64 [sp + 0x10]
 14220: 82 16 08                 s1 = u64 [sp + 0x8]
 14223: 95 11 20                 sp = sp + 0x20
 14226: 32 00                    ret
      :                          @788
 14228: 53 19 10 48              jump @797 if a2 <u 16
      :                          @789
 14232: 8d 7a                    i32 a3 = -a0
 14234: 84 aa 07                 a3 = a3 & 0x7
 14237: c8 a7 0b                 a4 = a0 + a3
 14240: 51 0a 0e                 jump @792 if a3 == 0
      :                          @790
 14243: 64 7c                    a5 = a0
 14245: 01                       fallthrough
      :                          @791
 14246: 78 c8                    u8 [a5] = a1
 14248: 95 cc 01                 a5 = a5 + 0x1
 14251: ac bc fb                 jump @791 if a5 <u a4
      :                          @792
 14254: c9 a9 03                 t1 = a2 - a3
 14257: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14260: c8 cb 0a                 a3 = a4 + a5
 14263: 58 0c 1d                 jump @795 if a5 <=s 0
      :                          @793
 14266: 84 82 ff 00              t0 = a1 & 0xff
 14270: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 14280: ca 92 0c                 a5 = t0 * a2
 14283: 01                       fallthrough
      :                          @794
 14284: 7b bc                    u64 [a4] = a5
 14286: 95 bb 08                 a4 = a4 + 0x8
 14289: ac ab fb                 jump @794 if a4 <u a3
      :                          @795
 14292: 84 39 07                 a2 = t1 & 0x7
 14295: 52 09 0a                 jump @798 if a2 != 0
      :                          @796
 14298: 28 13                    jump @800
      :                          @797
 14300: 64 7a                    a3 = a0
 14302: 51 09 0f                 jump @800 if a2 == 0
      :                          @798
 14305: c8 a9 09                 a2 = a2 + a3
 14308: 01                       fallthrough
      :                          @799
 14309: 78 a8                    u8 [a3] = a1
 14311: 95 aa 01                 a3 = a3 + 0x1
 14314: ac 9a fb                 jump @799 if a3 <u a2
      :                          @800
 14317: 32 00                    ret
      :                          @801 [@dyn 192]
 14319: 82 77                    a0 = u64 [a0]
 14321: 01                       fallthrough
      :                          @802
 14322: 28                       jump @802
      :                          @803
 14323: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 14326: 7b 10 50                 u64 [sp + 0x50] = ra
 14329: 7b 15 48                 u64 [sp + 0x48] = s0
 14332: 7b 16 40                 u64 [sp + 0x40] = s1
 14335: 7b 18                    u64 [sp] = a1
 14337: 98 79 04                 a2 = a0 >> 0x4
 14340: 33 08 27                 a1 = 0x27
 14343: 33 0a f9 05 01           a3 = 0x105f9
 14348: 53 29 71 02 7b           jump @806 if a2 <u 625
      :                          @804
 14353: 33 08 27                 a1 = 0x27
 14356: 95 1b 3e                 a4 = sp + 0x3e
 14359: 3a 09 08 00 03           a2 = u64 [0x30008]
 14364: 7b 19 10                 u64 [sp + 0x10] = a2
 14367: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 14373: 33 03 7b 14              t1 = 0x147b
 14377: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 14383: 01                       fallthrough
      :                          @805
 14384: 64 72                    t0 = a0
 14386: 82 17 10                 a0 = u64 [sp + 0x10]
 14389: d6 72 07                 a0 = t0 mulhu a0
 14392: 98 77 0b                 a0 = a0 >> 0xb
 14395: 82 19 08                 a2 = u64 [sp + 0x8]
 14398: c0 97 09                 i32 a2 = a0 * a2
 14401: c8 29 06                 s1 = a2 + t0
 14404: 97 69 30                 a2 = s1 << 0x30
 14407: 98 99 32                 a2 = a2 >> 0x32
 14410: ca 39 09                 a2 = a2 * t1
 14413: 98 94 11                 t2 = a2 >> 0x11
 14416: 98 99 10                 a2 = a2 >> 0x10
 14419: 84 99 fe 07              a2 = a2 & 0x7fe
 14423: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
 14426: c8 6c 0c                 a5 = a5 + s1
 14429: 97 cc 31                 a5 = a5 << 0x31
 14432: 98 cc 30                 a5 = a5 >> 0x30
 14435: c8 a9 09                 a2 = a2 + a3
 14438: 7c 96                    s1 = u8 [a2]
 14440: 7c 99 01                 a2 = u8 [a2 + 0x1]
 14443: c8 ac 0c                 a5 = a5 + a3
 14446: 7c c5 01                 s0 = u8 [a5 + 0x1]
 14449: 7c cc                    a5 = u8 [a5]
 14451: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
 14454: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
 14457: 78 b5 01                 u8 [a4 + 0x1] = s0
 14460: 78 bc                    u8 [a4] = a5
 14462: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14465: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 14468: ac 20 ac                 jump @805 if ra <u t0
      :                          @806
 14471: 54 17 63 36              jump @808 if a0 <=u 99
      :                          @807
 14475: 97 79 30                 a2 = a0 << 0x30
 14478: 98 99 32                 a2 = a2 >> 0x32
 14481: 96 99 7b 14              a2 = a2 * 0x147b
 14485: 98 99 11                 a2 = a2 >> 0x11
 14488: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
 14491: c8 b7 07                 a0 = a0 + a4
 14494: 97 77 31                 a0 = a0 << 0x31
 14497: 98 77 30                 a0 = a0 >> 0x30
 14500: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14503: c8 a7 07                 a0 = a0 + a3
 14506: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 14509: 7c 77                    a0 = u8 [a0]
 14511: 95 1c 19                 a5 = sp + 0x19
 14514: c8 8c 0c                 a5 = a5 + a1
 14517: 78 cb 01                 u8 [a5 + 0x1] = a4
 14520: 78 c7                    u8 [a5] = a0
 14522: 64 97                    a0 = a2
 14524: 01                       fallthrough
      :                          @808
 14525: 55 17 0a 14              jump @810 if a0 >=u 10
      :                          @809
 14529: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14532: 95 19 19                 a2 = sp + 0x19
 14535: c8 89 09                 a2 = a2 + a1
 14538: 83 77 30                 i32 a0 = a0 + 0x30
 14541: 78 97                    u8 [a2] = a0
 14543: 28 1c                    jump @811
      :                          @810
 14545: 97 77 01                 a0 = a0 << 0x1
 14548: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14551: c8 a7 07                 a0 = a0 + a3
 14554: 7c 79 01                 a2 = u8 [a0 + 0x1]
 14557: 7c 77                    a0 = u8 [a0]
 14559: 95 1a 19                 a3 = sp + 0x19
 14562: c8 8a 0a                 a3 = a3 + a1
 14565: 78 a9 01                 u8 [a3 + 0x1] = a2
 14568: 78 a7                    u8 [a3] = a0
 14570: 01                       fallthrough
      :                          @811
 14571: 95 1a 19                 a3 = sp + 0x19
 14574: c8 8a 0a                 a3 = a3 + a1
 14577: 9a 8b 27                 a4 = 0x27 - a1
 14580: 33 08 f0 05 01           a1 = 0x105f0
 14585: 82 17                    a0 = u64 [sp]
 14587: 33 09                    a2 = 0
 14589: 50 20 82 01 13           ra = 386, jump @813
      :                          @812 [@dyn 193]
 14594: 82 10 50                 ra = u64 [sp + 0x50]
 14597: 82 15 48                 s0 = u64 [sp + 0x48]
 14600: 82 16 40                 s1 = u64 [sp + 0x40]
 14603: 95 11 58                 sp = sp + 0x58
 14606: 32 00                    ret
      :                          @813
 14608: 95 11 98                 sp = sp + 0xffffffffffffff98
 14611: 7b 10 60                 u64 [sp + 0x60] = ra
 14614: 7b 15 58                 u64 [sp + 0x58] = s0
 14617: 7b 16 50                 u64 [sp + 0x50] = s1
 14620: 80 73 34                 t1 = u32 [a0 + 0x34]
 14623: 7b 1a 20                 u64 [sp + 0x20] = a3
 14626: 64 9c                    a5 = a2
 14628: 84 36 01                 s1 = t1 & 0x1
 14631: 33 02 2b                 t0 = 0x2b
 14634: 33 09 00 00 11           a2 = 0x110000
 14639: 84 3a 04                 a3 = t1 & 0x4
 14642: 7b 1b 28                 u64 [sp + 0x28] = a4
 14645: c8 b6 04                 t2 = s1 + a4
 14648: 7b 1c 30                 u64 [sp + 0x30] = a5
 14651: 52 0a 10                 jump @816 if a3 != 0
      :                          @814
 14654: 49 11 38                 u64 [sp + 56] = 0
 14657: 82 78                    a1 = u64 [a0]
 14659: 94 69 2b                 a2 = 0x2b if s1 != 0
 14662: 52 08 35                 jump @820 if a1 != 0
      :                          @815
 14665: 28 56                    jump @825
      :                          @816
 14667: 7b 18 38                 u64 [sp + 0x38] = a1
 14670: 33 09                    a2 = 0
 14672: 51 0c 1b                 jump @819 if a5 == 0
      :                          @817
 14675: 82 1b 38                 a4 = u64 [sp + 0x38]
 14678: 01                       fallthrough
      :                          @818
 14679: 7d b5                    s0 = i8 [a4]
 14681: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 14684: 85 5a 01                 a3 = s0 ^ 0x1
 14687: c8 a9 09                 a2 = a2 + a3
 14690: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 14693: 95 bb 01                 a4 = a4 + 0x1
 14696: 52 0c ef                 jump @818 if a5 != 0
      :                          @819
 14699: c8 94 04                 t2 = t2 + a2
 14702: 33 09 00 00 11           a2 = 0x110000
 14707: 82 78                    a1 = u64 [a0]
 14709: db 62 09                 a2 = t0 if s1 != 0
 14712: 51 08 27                 jump @825 if a1 == 0
      :                          @820
 14715: 82 7a 08                 a3 = u64 [a0 + 0x8]
 14718: ae a4 21                 jump @825 if t2 >=u a3
      :                          @821
 14721: 84 38 08                 a1 = t1 & 0x8
 14724: 52 08 51                 jump @828 if a1 != 0
      :                          @822
 14727: 7c 76 38                 s1 = u8 [a0 + 0x38]
 14730: c9 4a 0a                 a3 = a3 - t2
 14733: 7b 19 18                 u64 [sp + 0x18] = a2
 14736: 5a 16 01 a0 00           jump @835 if s1 >s 1
      :                          @823
 14741: 52 06 ad 00              jump @837 if s1 != 0
      :                          @824
 14745: 7b 1a 10                 u64 [sp + 0x10] = a3
 14748: 28 ac 00                 jump @838
      :                          @825
 14751: 82 75 20                 s0 = u64 [a0 + 0x20]
 14754: 82 76 28                 s1 = u64 [a0 + 0x28]
 14757: 64 57                    a0 = s0
 14759: 64 68                    a1 = s1
 14761: 82 1a 38                 a3 = u64 [sp + 0x38]
 14764: 82 1b 30                 a4 = u64 [sp + 0x30]
 14767: 50 20 84 01 75 01        ra = 388, jump @858
      :                          @826 [@dyn 194]
 14773: 33 08 01                 a1 = 0x1
 14776: 52 07 be 00              jump @843 if a0 != 0
      :                          @827
 14780: 82 6c 18                 a5 = u64 [s1 + 0x18]
 14783: 64 57                    a0 = s0
 14785: 82 18 20                 a1 = u64 [sp + 0x20]
 14788: 82 19 28                 a2 = u64 [sp + 0x28]
 14791: 82 10 60                 ra = u64 [sp + 0x60]
 14794: 82 15 58                 s0 = u64 [sp + 0x58]
 14797: 82 16 50                 s1 = u64 [sp + 0x50]
 14800: 95 11 68                 sp = sp + 0x68
 14803: 32 0c                    jump [a5]
      :                          @828
 14805: 7b 1a 40                 u64 [sp + 0x40] = a3
 14808: 64 45                    s0 = t2
 14810: 81 78 30                 a1 = i32 [a0 + 0x30]
 14813: 7b 18 10                 u64 [sp + 0x10] = a1
 14816: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 14819: 7b 1a 08                 u64 [sp + 0x8] = a3
 14822: 82 7a 20                 a3 = u64 [a0 + 0x20]
 14825: 82 78 28                 a1 = u64 [a0 + 0x28]
 14828: 48 17 30 30              u32 [a0 + 48] = 0x30
 14832: 7b 17                    u64 [sp] = a0
 14834: 46 17 38 01              u8 [a0 + 56] = 0x1
 14838: 7b 1a 48                 u64 [sp + 0x48] = a3
 14841: 64 a7                    a0 = a3
 14843: 64 86                    s1 = a1
 14845: 82 1a 38                 a3 = u64 [sp + 0x38]
 14848: 82 1b 30                 a4 = u64 [sp + 0x30]
 14851: 50 20 86 01 21 01        ra = 390, jump @858
      :                          @829 [@dyn 195]
 14857: 52 07 69                 jump @842 if a0 != 0
      :                          @830
 14860: 82 17 40                 a0 = u64 [sp + 0x40]
 14863: c9 57 05                 s0 = a0 - s0
 14866: 95 55 01                 s0 = s0 + 0x1
 14869: 01                       fallthrough
      :                          @831
 14870: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 14873: 51 05 cb 00              jump @853 if s0 == 0
      :                          @832
 14877: 82 69 20                 a2 = u64 [s1 + 0x20]
 14880: 33 08 30                 a1 = 0x30
 14883: 82 17 48                 a0 = u64 [sp + 0x48]
 14886: b4 90 02 88 01           ra = 392, jump [a2]
      :                          @833 [@dyn 196]
 14891: 51 07 eb                 jump @831 if a0 == 0
      :                          @834
 14894: 28 44                    jump @842
      :                          @835
 14896: 52 16 02 12              jump @837 if s1 != 2
      :                          @836
 14900: 98 a6 01                 s1 = a3 >> 0x1
 14903: 95 a8 01                 a1 = a3 + 0x1
 14906: 98 88 01                 a1 = a1 >> 0x1
 14909: 7b 18 10                 u64 [sp + 0x10] = a1
 14912: 28 08                    jump @838
      :                          @837
 14914: 64 a6                    s1 = a3
 14916: 49 11 10                 u64 [sp + 16] = 0
 14919: 01                       fallthrough
      :                          @838
 14920: 82 78 20                 a1 = u64 [a0 + 0x20]
 14923: 7b 18 48                 u64 [sp + 0x48] = a1
 14926: 82 75 28                 s0 = u64 [a0 + 0x28]
 14929: 81 77 30                 a0 = i32 [a0 + 0x30]
 14932: 7b 17 40                 u64 [sp + 0x40] = a0
 14935: 95 66 01                 s1 = s1 + 0x1
 14938: 01                       fallthrough
      :                          @839
 14939: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 14942: 51 06 28                 jump @844 if s1 == 0
      :                          @840
 14945: 82 59 20                 a2 = u64 [s0 + 0x20]
 14948: 82 17 48                 a0 = u64 [sp + 0x48]
 14951: 82 18 40                 a1 = u64 [sp + 0x40]
 14954: b4 90 02 8a 01           ra = 394, jump [a2]
      :                          @841 [@dyn 197]
 14959: 51 07 ec                 jump @839 if a0 == 0
      :                          @842
 14962: 33 08 01                 a1 = 0x1
 14965: 01                       fallthrough
      :                          @843
 14966: 64 87                    a0 = a1
 14968: 82 10 60                 ra = u64 [sp + 0x60]
 14971: 82 15 58                 s0 = u64 [sp + 0x58]
 14974: 82 16 50                 s1 = u64 [sp + 0x50]
 14977: 95 11 68                 sp = sp + 0x68
 14980: 32 00                    ret
      :                          @844
 14982: 82 16 48                 s1 = u64 [sp + 0x48]
 14985: 64 67                    a0 = s1
 14987: 64 58                    a1 = s0
 14989: 82 19 18                 a2 = u64 [sp + 0x18]
 14992: 82 1a 38                 a3 = u64 [sp + 0x38]
 14995: 82 1b 30                 a4 = u64 [sp + 0x30]
 14998: 50 20 8c 01 8e 00        ra = 396, jump @858
      :                          @845 [@dyn 198]
 15004: 33 08 01                 a1 = 0x1
 15007: 52 07 d7                 jump @843 if a0 != 0
      :                          @846
 15010: 82 5a 18                 a3 = u64 [s0 + 0x18]
 15013: 64 67                    a0 = s1
 15015: 82 18 20                 a1 = u64 [sp + 0x20]
 15018: 82 19 28                 a2 = u64 [sp + 0x28]
 15021: b4 a0 02 8e 01           ra = 398, jump [a3]
      :                          @847 [@dyn 199]
 15026: 33 08 01                 a1 = 0x1
 15029: 52 07 c1                 jump @843 if a0 != 0
      :                          @848
 15032: 82 17 10                 a0 = u64 [sp + 0x10]
 15035: 9a 77                    a0 = -a0
 15037: 7b 17 38                 u64 [sp + 0x38] = a0
 15040: 33 06 ff                 s1 = 0xffffffffffffffff
 15043: 01                       fallthrough
      :                          @849
 15044: 82 17 38                 a0 = u64 [sp + 0x38]
 15047: c8 67 07                 a0 = a0 + s1
 15050: 51 17 ff 45              jump @856 if a0 == 4294967295
      :                          @850
 15054: 82 59 20                 a2 = u64 [s0 + 0x20]
 15057: 82 17 48                 a0 = u64 [sp + 0x48]
 15060: 82 18 40                 a1 = u64 [sp + 0x40]
 15063: b4 90 02 90 01           ra = 400, jump [a2]
      :                          @851 [@dyn 200]
 15068: 95 66 01                 s1 = s1 + 0x1
 15071: 51 07 e5                 jump @849 if a0 == 0
      :                          @852
 15074: 28 39                    jump @857
      :                          @853
 15076: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15079: 82 17 48                 a0 = u64 [sp + 0x48]
 15082: 82 18 20                 a1 = u64 [sp + 0x20]
 15085: 82 19 28                 a2 = u64 [sp + 0x28]
 15088: b4 a0 02 92 01           ra = 402, jump [a3]
      :                          @854 [@dyn 201]
 15093: 33 08 01                 a1 = 0x1
 15096: 52 07 7e ff              jump @843 if a0 != 0
      :                          @855
 15100: 33 08                    a1 = 0
 15102: 82 16                    s1 = u64 [sp]
 15104: 82 17 10                 a0 = u64 [sp + 0x10]
 15107: 7a 67 30                 u32 [s1 + 0x30] = a0
 15110: 82 17 08                 a0 = u64 [sp + 0x8]
 15113: 78 67 38                 u8 [s1 + 0x38] = a0
 15116: 28 6a ff                 jump @843
      :                          @856
 15119: 82 16 10                 s1 = u64 [sp + 0x10]
 15122: 82 17 10                 a0 = u64 [sp + 0x10]
 15125: d8 76 08                 a1 = s1 <u a0
 15128: 28 5e ff                 jump @843
      :                          @857
 15131: 82 17 10                 a0 = u64 [sp + 0x10]
 15134: d8 76 08                 a1 = s1 <u a0
 15137: 28 55 ff                 jump @843
      :                          @858
 15140: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15143: 7b 10 20                 u64 [sp + 0x20] = ra
 15146: 7b 15 18                 u64 [sp + 0x18] = s0
 15149: 7b 16 10                 u64 [sp + 0x10] = s1
 15152: 83 9c                    i32 a5 = a2 + 0
 15154: 33 02 00 00 11           t0 = 0x110000
 15159: 64 a6                    s1 = a3
 15161: 64 85                    s0 = a1
 15163: 64 7a                    a3 = a0
 15165: aa 2c 21                 jump @861 if a5 == t0
      :                          @859
 15168: 82 5c 20                 a5 = u64 [s0 + 0x20]
 15171: 64 a7                    a0 = a3
 15173: 64 98                    a1 = a2
 15175: 7b 1b 08                 u64 [sp + 0x8] = a4
 15178: 7b 1a                    u64 [sp] = a3
 15180: b4 c0 02 94 01           ra = 404, jump [a5]
      :                          @860 [@dyn 202]
 15185: 82 1a                    a3 = u64 [sp]
 15187: 82 1b 08                 a4 = u64 [sp + 0x8]
 15190: 64 78                    a1 = a0
 15192: 33 07 01                 a0 = 0x1
 15195: 52 08 20                 jump @864 if a1 != 0
      :                          @861
 15198: 51 06 1a                 jump @863 if s1 == 0
      :                          @862
 15201: 82 5c 18                 a5 = u64 [s0 + 0x18]
 15204: 64 a7                    a0 = a3
 15206: 64 68                    a1 = s1
 15208: 64 b9                    a2 = a4
 15210: 82 10 20                 ra = u64 [sp + 0x20]
 15213: 82 15 18                 s0 = u64 [sp + 0x18]
 15216: 82 16 10                 s1 = u64 [sp + 0x10]
 15219: 95 11 28                 sp = sp + 0x28
 15222: 32 0c                    jump [a5]
      :                          @863
 15224: 33 07                    a0 = 0
 15226: 01                       fallthrough
      :                          @864
 15227: 82 10 20                 ra = u64 [sp + 0x20]
 15230: 82 15 18                 s0 = u64 [sp + 0x18]
 15233: 82 16 10                 s1 = u64 [sp + 0x10]
 15236: 95 11 28                 sp = sp + 0x28
 15239: 32 00                    ret
      :                          @865
 15241: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 15244: 7b 10 40                 u64 [sp + 0x40] = ra
 15247: 7b 15 38                 u64 [sp + 0x38] = s0
 15250: 7b 16 30                 u64 [sp + 0x30] = s1
 15253: 82 74                    t2 = u64 [a0]
 15255: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15258: d4 a4 0b                 a4 = t2 | a3
 15261: 64 93                    t1 = a2
 15263: 64 85                    s0 = a1
 15265: 51 0b ab 03              jump @937 if a4 == 0
      :                          @866
 15269: 7b 17 08                 u64 [sp + 0x8] = a0
 15272: 51 0a f5 00              jump @885 if a3 == 0
      :                          @867
 15276: 82 7c 18                 a5 = u64 [a0 + 0x18]
 15279: 33 0a                    a3 = 0
 15281: 49 11 18 02              u64 [sp + 24] = 0x2
 15285: 95 53 02                 t1 = s0 + 0x2
 15288: 95 cc 01                 a5 = a5 + 0x1
 15291: 33 00 00 00 11           ra = 0x110000
 15296: 33 07 df 00              a0 = 0xdf
 15300: 7b 15 10                 u64 [sp + 0x10] = s0
 15303: 64 59                    a2 = s0
 15305: 28 12                    jump @870
      :                          @868
 15307: 95 98 01                 a1 = a2 + 0x1
 15310: 01                       fallthrough
      :                          @869
 15311: c9 9a 0a                 a3 = a3 - a2
 15314: c8 8a 0a                 a3 = a3 + a1
 15317: 64 89                    a2 = a1
 15319: aa 05 bc 00              jump @884 if s0 == ra
      :                          @870
 15323: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 15326: 51 0c 68                 jump @879 if a5 == 0
      :                          @871
 15329: aa 39 b2 00              jump @884 if a2 == t1
      :                          @872
 15333: 7d 98                    a1 = i8 [a2]
 15335: 84 85 ff 00              s0 = a1 & 0xff
 15339: 59 08 e0                 jump @868 if a1 >=s 0
      :                          @873
 15342: 7c 98 01                 a1 = u8 [a2 + 0x1]
 15345: 84 56 1f                 s1 = s0 & 0x1f
 15348: 84 8b 3f                 a4 = a1 & 0x3f
 15351: ae 57 35                 jump @877 if a0 >=u s0
      :                          @874
 15354: 7c 98 02                 a1 = u8 [a2 + 0x2]
 15357: 97 bb 06                 a4 = a4 << 0x6
 15360: 84 88 3f                 a1 = a1 & 0x3f
 15363: d4 8b 02                 t0 = a4 | a1
 15366: 53 25 f0 00 31           jump @878 if s0 <u 240
      :                          @875
 15371: 7c 98 03                 a1 = u8 [a2 + 0x3]
 15374: 97 66 3d                 s1 = s1 << 0x3d
 15377: 98 66 2b                 s1 = s1 >> 0x2b
 15380: 97 22 06                 t0 = t0 << 0x6
 15383: 84 88 3f                 a1 = a1 & 0x3f
 15386: d4 82 05                 s0 = t0 | a1
 15389: d4 65 05                 s0 = s0 | s1
 15392: aa 05 73                 jump @884 if s0 == ra
      :                          @876
 15395: 95 98 04                 a1 = a2 + 0x4
 15398: 33 07 df 00              a0 = 0xdf
 15402: 28 a5                    jump @869
      :                          @877
 15404: 95 98 02                 a1 = a2 + 0x2
 15407: 97 65 06                 s0 = s1 << 0x6
 15410: d4 b5 05                 s0 = s0 | a4
 15413: 28 9a                    jump @869
      :                          @878
 15415: 95 98 03                 a1 = a2 + 0x3
 15418: 97 66 0c                 s1 = s1 << 0xc
 15421: d4 62 05                 s0 = t0 | s1
 15424: 33 07 df 00              a0 = 0xdf
 15428: 28 8b                    jump @869
      :                          @879
 15430: aa 39 4d                 jump @884 if a2 == t1
      :                          @880
 15433: 7d 98                    a1 = i8 [a2]
 15435: 59 08 b6 02              jump @927 if a1 >=s 0
      :                          @881
 15439: 84 88 ff 00              a1 = a1 & 0xff
 15443: 33 0b e0 00              a4 = 0xe0
 15447: ac b8 aa 02              jump @927 if a1 <u a4
      :                          @882
 15451: 33 0b f0 00              a4 = 0xf0
 15455: ac b8 a2 02              jump @927 if a1 <u a4
      :                          @883
 15459: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 15462: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 15465: 84 bb 3f                 a4 = a4 & 0x3f
 15468: 84 cc 3f                 a5 = a5 & 0x3f
 15471: 7c 99 03                 a2 = u8 [a2 + 0x3]
 15474: 97 88 3d                 a1 = a1 << 0x3d
 15477: 98 88 2b                 a1 = a1 >> 0x2b
 15480: 97 bb 0c                 a4 = a4 << 0xc
 15483: 97 cc 06                 a5 = a5 << 0x6
 15486: d4 cb 0b                 a4 = a4 | a5
 15489: 84 99 3f                 a2 = a2 & 0x3f
 15492: d4 b9 09                 a2 = a2 | a4
 15495: d4 98 08                 a1 = a1 | a2
 15498: 33 09 00 00 11           a2 = 0x110000
 15503: ab 98 72 02              jump @927 if a1 != a2
      :                          @884
 15507: 82 13 18                 t1 = u64 [sp + 0x18]
 15510: 82 15 10                 s0 = u64 [sp + 0x10]
 15513: 82 17 08                 a0 = u64 [sp + 0x8]
 15516: 01                       fallthrough
      :                          @885
 15517: 51 04 af 02              jump @937 if t2 == 0
      :                          @886
 15521: 82 7c 08                 a5 = u64 [a0 + 0x8]
 15524: 7b 13 18                 u64 [sp + 0x18] = t1
 15527: 7b 15 10                 u64 [sp + 0x10] = s0
 15530: 55 13 20 29              jump @892 if t1 >=u 32
      :                          @887
 15534: 33 09                    a2 = 0
 15536: 51 03 1c                 jump @890 if t1 == 0
      :                          @888
 15539: 64 58                    a1 = s0
 15541: 64 3a                    a3 = t1
 15543: 01                       fallthrough
      :                          @889
 15544: 7d 8b                    a4 = i8 [a1]
 15546: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 15549: 85 bb 01                 a4 = a4 ^ 0x1
 15552: c8 b9 09                 a2 = a2 + a4
 15555: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15558: 95 88 01                 a1 = a1 + 0x1
 15561: 52 0a ef                 jump @889 if a3 != 0
      :                          @890
 15564: ac c9 95 01              jump @909 if a2 <u a5
      :                          @891
 15568: 28 7c 02                 jump @937
      :                          @892
 15571: 7b 1c                    u64 [sp] = a5
 15573: 95 58 07                 a1 = s0 + 0x7
 15576: 64 5c                    a5 = s0
 15578: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 15581: c9 5c 0b                 a4 = a5 - s0
 15584: c8 b3 02                 t0 = t1 + a4
 15587: 84 2a 07                 a3 = t0 & 0x7
 15590: 33 08                    a1 = 0
 15592: aa c5 17                 jump @894 if s0 == a5
      :                          @893
 15595: 7d c6                    s1 = i8 [a5]
 15597: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 15600: 85 69 01                 a2 = s1 ^ 0x1
 15603: c8 98 08                 a1 = a1 + a2
 15606: 95 bb 01                 a4 = a4 + 0x1
 15609: 95 cc 01                 a5 = a5 + 0x1
 15612: 52 0b ef                 jump @893 if a4 != 0
      :                          @894
 15615: 33 0b                    a4 = 0
 15617: 51 0a 1e                 jump @897 if a3 == 0
      :                          @895
 15620: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 15623: c8 5c 0c                 a5 = a5 + s0
 15626: 01                       fallthrough
      :                          @896
 15627: 7d c7                    a0 = i8 [a5]
 15629: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 15632: 85 77 01                 a0 = a0 ^ 0x1
 15635: c8 7b 0b                 a4 = a4 + a0
 15638: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15641: 95 cc 01                 a5 = a5 + 0x1
 15644: 52 0a ef                 jump @896 if a3 != 0
      :                          @897
 15647: 98 20 03                 ra = t0 >> 0x3
 15650: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 15660: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 15670: 7b 17 28                 u64 [sp + 0x28] = a0
 15673: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 15683: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 15693: 7b 17 20                 u64 [sp + 0x20] = a0
 15696: c8 8b 09                 a2 = a4 + a1
 15699: 28 2d                    jump @899
      :                          @898
 15701: 97 45 03                 s0 = t2 << 0x3
 15704: c8 35 05                 s0 = s0 + t1
 15707: c9 40 00                 ra = ra - t2
 15710: 84 46 03                 s1 = t2 & 0x3
 15713: 82 1b 28                 a4 = u64 [sp + 0x28]
 15716: d2 b2 07                 a0 = t0 & a4
 15719: 98 28 08                 a1 = t0 >> 0x8
 15722: d2 b8 08                 a1 = a1 & a4
 15725: c8 87 07                 a0 = a0 + a1
 15728: 82 18 20                 a1 = u64 [sp + 0x20]
 15731: ca 87 07                 a0 = a0 * a1
 15734: 98 77 30                 a0 = a0 >> 0x30
 15737: c8 79 09                 a2 = a2 + a0
 15740: 52 06 8e 00              jump @906 if s1 != 0
      :                          @899
 15744: 51 00 79                 jump @904 if ra == 0
      :                          @900
 15747: 64 53                    t1 = s0
 15749: 33 07 c0 00              a0 = 0xc0
 15753: e6 70 04                 t2 = minu(ra, a0)
 15756: 33 02                    t0 = 0
 15758: 98 48 02                 a1 = t2 >> 0x2
 15761: 51 08 c4                 jump @898 if a1 == 0
      :                          @901
 15764: 97 88 05                 a1 = a1 << 0x5
 15767: c8 38 08                 a1 = a1 + t1
 15770: 64 36                    s1 = t1
 15772: 01                       fallthrough
      :                          @902
 15773: 82 67                    a0 = u64 [s1]
 15775: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 15778: 98 cc 07                 a5 = a5 >> 0x7
 15781: 98 77 06                 a0 = a0 >> 0x6
 15784: 82 6b 08                 a4 = u64 [s1 + 0x8]
 15787: d4 c7 07                 a0 = a0 | a5
 15790: d2 a7 07                 a0 = a0 & a3
 15793: c8 27 07                 a0 = a0 + t0
 15796: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 15799: 98 cc 07                 a5 = a5 >> 0x7
 15802: 82 65 10                 s0 = u64 [s1 + 0x10]
 15805: 98 bb 06                 a4 = a4 >> 0x6
 15808: d4 cb 0b                 a4 = a4 | a5
 15811: d2 ab 0b                 a4 = a4 & a3
 15814: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 15817: 98 cc 07                 a5 = a5 >> 0x7
 15820: 98 55 06                 s0 = s0 >> 0x6
 15823: d4 5c 0c                 a5 = a5 | s0
 15826: 82 65 18                 s0 = u64 [s1 + 0x18]
 15829: d2 ac 0c                 a5 = a5 & a3
 15832: c8 cb 0b                 a4 = a4 + a5
 15835: c8 b7 07                 a0 = a0 + a4
 15838: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 15841: 98 bb 07                 a4 = a4 >> 0x7
 15844: 98 55 06                 s0 = s0 >> 0x6
 15847: d4 5b 0b                 a4 = a4 | s0
 15850: d2 ab 0b                 a4 = a4 & a3
 15853: 95 66 20                 s1 = s1 + 0x20
 15856: c8 7b 02                 t0 = a4 + a0
 15859: ab 86 aa                 jump @902 if s1 != a1
      :                          @903
 15862: 28 5f ff                 jump @898
      :                          @904
 15865: 82 13 18                 t1 = u64 [sp + 0x18]
 15868: 82 15 10                 s0 = u64 [sp + 0x10]
 15871: 82 17 08                 a0 = u64 [sp + 0x8]
 15874: 82 1c                    a5 = u64 [sp]
 15876: ac c9 5d                 jump @909 if a2 <u a5
      :                          @905
 15879: 28 45 01                 jump @937
      :                          @906
 15882: 33 08                    a1 = 0
 15884: 84 47 fc 00              a0 = t2 & 0xfc
 15888: 97 77 03                 a0 = a0 << 0x3
 15891: c8 73 0b                 a4 = t1 + a0
 15894: 97 66 03                 s1 = s1 << 0x3
 15897: 82 13 18                 t1 = u64 [sp + 0x18]
 15900: 82 15 10                 s0 = u64 [sp + 0x10]
 15903: 01                       fallthrough
      :                          @907
 15904: 82 b7                    a0 = u64 [a4]
 15906: 95 bb 08                 a4 = a4 + 0x8
 15909: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 15912: 98 cc 07                 a5 = a5 >> 0x7
 15915: 98 77 06                 a0 = a0 >> 0x6
 15918: d4 c7 07                 a0 = a0 | a5
 15921: d2 a7 07                 a0 = a0 & a3
 15924: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 15927: c8 78 08                 a1 = a1 + a0
 15930: 52 06 e6                 jump @907 if s1 != 0
      :                          @908
 15933: 82 1a 28                 a3 = u64 [sp + 0x28]
 15936: d2 a8 07                 a0 = a1 & a3
 15939: 98 88 08                 a1 = a1 >> 0x8
 15942: d2 a8 08                 a1 = a1 & a3
 15945: c8 87 07                 a0 = a0 + a1
 15948: 82 18 20                 a1 = u64 [sp + 0x20]
 15951: ca 87 07                 a0 = a0 * a1
 15954: 98 77 30                 a0 = a0 >> 0x30
 15957: c8 79 09                 a2 = a2 + a0
 15960: 82 17 08                 a0 = u64 [sp + 0x8]
 15963: 82 1c                    a5 = u64 [sp]
 15965: ae c9 ef 00              jump @937 if a2 >=u a5
      :                          @909
 15969: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 15972: 33 08                    a1 = 0
 15974: 33 0b 01                 a4 = 0x1
 15977: c9 9c 0c                 a5 = a5 - a2
 15980: ad ab 0c                 jump @912 if a4 <s a3
      :                          @910
 15983: 51 0a 1a                 jump @914 if a3 == 0
      :                          @911
 15986: 64 c8                    a1 = a5
 15988: 49 01                    u64 [sp + 0] = 0
 15990: 28 16                    jump @915
      :                          @912
 15992: 52 1a 02 11              jump @914 if a3 != 2
      :                          @913
 15996: 98 c8 01                 a1 = a5 >> 0x1
 15999: 95 c9 01                 a2 = a5 + 0x1
 16002: 98 99 01                 a2 = a2 >> 0x1
 16005: 7b 19                    u64 [sp] = a2
 16007: 28 05                    jump @915
      :                          @914
 16009: 7b 1c                    u64 [sp] = a5
 16011: 01                       fallthrough
      :                          @915
 16012: 82 79 20                 a2 = u64 [a0 + 0x20]
 16015: 7b 19 28                 u64 [sp + 0x28] = a2
 16018: 82 75 28                 s0 = u64 [a0 + 0x28]
 16021: 81 77 30                 a0 = i32 [a0 + 0x30]
 16024: 7b 17 20                 u64 [sp + 0x20] = a0
 16027: 95 86 01                 s1 = a1 + 0x1
 16030: 01                       fallthrough
      :                          @916
 16031: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 16034: 51 06 19                 jump @920 if s1 == 0
      :                          @917
 16037: 82 59 20                 a2 = u64 [s0 + 0x20]
 16040: 82 17 28                 a0 = u64 [sp + 0x28]
 16043: 82 18 20                 a1 = u64 [sp + 0x20]
 16046: b4 90 02 96 01           ra = 406, jump [a2]
      :                          @918 [@dyn 203]
 16051: 51 07 ec                 jump @916 if a0 == 0
      :                          @919
 16054: 33 07 01                 a0 = 0x1
 16057: 28 72                    jump @933
      :                          @920
 16059: 82 5a 18                 a3 = u64 [s0 + 0x18]
 16062: 82 17 28                 a0 = u64 [sp + 0x28]
 16065: 82 18 10                 a1 = u64 [sp + 0x10]
 16068: 82 19 18                 a2 = u64 [sp + 0x18]
 16071: b4 a0 02 98 01           ra = 408, jump [a3]
      :                          @921 [@dyn 204]
 16076: 64 78                    a1 = a0
 16078: 33 07 01                 a0 = 0x1
 16081: 52 08 5a                 jump @933 if a1 != 0
      :                          @922
 16084: 82 17                    a0 = u64 [sp]
 16086: 9a 77                    a0 = -a0
 16088: 7b 17 18                 u64 [sp + 0x18] = a0
 16091: 33 06 ff                 s1 = 0xffffffffffffffff
 16094: 01                       fallthrough
      :                          @923
 16095: 82 17 18                 a0 = u64 [sp + 0x18]
 16098: c8 67 07                 a0 = a0 + s1
 16101: 33 08 ff                 a1 = 0xffffffffffffffff
 16104: aa 87 34                 jump @931 if a0 == a1
      :                          @924
 16107: 82 59 20                 a2 = u64 [s0 + 0x20]
 16110: 82 17 28                 a0 = u64 [sp + 0x28]
 16113: 82 18 20                 a1 = u64 [sp + 0x20]
 16116: b4 90 02 9a 01           ra = 410, jump [a2]
      :                          @925 [@dyn 205]
 16121: 95 66 01                 s1 = s1 + 0x1
 16124: 51 07 e3                 jump @923 if a0 == 0
      :                          @926
 16127: 28 26                    jump @932
      :                          @927
 16129: 82 13 18                 t1 = u64 [sp + 0x18]
 16132: 82 15 10                 s0 = u64 [sp + 0x10]
 16135: 51 0a 35                 jump @935 if a3 == 0
      :                          @928
 16138: ae 3a 2f                 jump @934 if a3 >=u t1
      :                          @929
 16141: c8 a5 08                 a1 = s0 + a3
 16144: 7d 88                    a1 = i8 [a1]
 16146: 33 09 c0                 a2 = 0xffffffffffffffc0
 16149: af 98 27                 jump @935 if a1 >=s a2
      :                          @930
 16152: 33 08                    a1 = 0
 16154: 28 25                    jump @936
      :                          @931
 16156: 82 16                    s1 = u64 [sp]
 16158: 82 17                    a0 = u64 [sp]
 16160: d8 76 07                 a0 = s1 <u a0
 16163: 28 08                    jump @933
      :                          @932
 16165: 82 17                    a0 = u64 [sp]
 16167: d8 76 07                 a0 = s1 <u a0
 16170: 01                       fallthrough
      :                          @933
 16171: 82 10 40                 ra = u64 [sp + 0x40]
 16174: 82 15 38                 s0 = u64 [sp + 0x38]
 16177: 82 16 30                 s1 = u64 [sp + 0x30]
 16180: 95 11 48                 sp = sp + 0x48
 16183: 32 00                    ret
      :                          @934
 16185: ab 3a df                 jump @930 if a3 != t1
      :                          @935
 16188: 64 58                    a1 = s0
 16190: 01                       fallthrough
      :                          @936
 16191: 82 17 08                 a0 = u64 [sp + 0x8]
 16194: db 8a 03                 t1 = a3 if a1 != 0
 16197: db 88 05                 s0 = a1 if a1 != 0
 16200: 52 04 59 fd              jump @886 if t2 != 0
      :                          @937
 16204: 82 78 28                 a1 = u64 [a0 + 0x28]
 16207: 82 77 20                 a0 = u64 [a0 + 0x20]
 16210: 82 8c 18                 a5 = u64 [a1 + 0x18]
 16213: 64 58                    a1 = s0
 16215: 64 39                    a2 = t1
 16217: 82 10 40                 ra = u64 [sp + 0x40]
 16220: 82 15 38                 s0 = u64 [sp + 0x38]
 16223: 82 16 30                 s1 = u64 [sp + 0x30]
 16226: 95 11 48                 sp = sp + 0x48
 16229: 32 0c                    jump [a5]
      :                          @938
 16231: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 16235: 7b 10 80 00              u64 [sp + 0x80] = ra
 16239: 7b 15 78                 u64 [sp + 0x78] = s0
 16242: 7b 16 70                 u64 [sp + 0x70] = s1
 16245: 49 11 60 20              u64 [sp + 96] = 0x20
 16249: 33 0a 03                 a3 = 0x3
 16252: 78 1a 68                 u8 [sp + 0x68] = a3
 16255: 82 96 20                 s1 = u64 [a2 + 0x20]
 16258: 49 11 30                 u64 [sp + 48] = 0
 16261: 49 11 40                 u64 [sp + 64] = 0
 16264: 7b 17 50                 u64 [sp + 0x50] = a0
 16267: 7b 18 58                 u64 [sp + 0x58] = a1
 16270: 51 06 0a 01              jump @960 if s1 == 0
      :                          @939
 16274: 82 97 28                 a0 = u64 [a2 + 0x28]
 16277: 51 07 79 01              jump @970 if a0 == 0
      :                          @940
 16281: 49 11 28                 u64 [sp + 40] = 0
 16284: 82 95                    s0 = u64 [a2]
 16286: 7b 19 08                 u64 [sp + 0x8] = a2
 16289: 82 98 10                 a1 = u64 [a2 + 0x10]
 16292: 7b 18 18                 u64 [sp + 0x18] = a1
 16295: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16298: 97 88 03                 a1 = a1 << 0x3
 16301: 98 88 03                 a1 = a1 >> 0x3
 16304: 95 88 01                 a1 = a1 + 0x1
 16307: 7b 18                    u64 [sp] = a1
 16309: 95 55 08                 s0 = s0 + 0x8
 16312: 96 78 38                 a1 = a0 * 0x38
 16315: 95 66 18                 s1 = s1 + 0x18
 16318: 33 07 80 01              a0 = 0x180
 16322: 7b 17 10                 u64 [sp + 0x10] = a0
 16325: 01                       fallthrough
      :                          @941
 16326: 7b 18 20                 u64 [sp + 0x20] = a1
 16329: 82 59                    a2 = u64 [s0]
 16331: 51 09 18                 jump @944 if a2 == 0
      :                          @942
 16334: 82 1a 58                 a3 = u64 [sp + 0x58]
 16337: 82 17 50                 a0 = u64 [sp + 0x50]
 16340: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 16343: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16346: b4 a0 02 9c 01           ra = 412, jump [a3]
      :                          @943 [@dyn 206]
 16351: 52 07 55 01              jump @973 if a0 != 0
      :                          @944
 16355: 81 67 10                 a0 = i32 [s1 + 0x10]
 16358: 7a 17 60                 u32 [sp + 0x60] = a0
 16361: 7c 67 18                 a0 = u8 [s1 + 0x18]
 16364: 78 17 68                 u8 [sp + 0x68] = a0
 16367: 81 67 14                 a0 = i32 [s1 + 0x14]
 16370: 7a 17 64                 u32 [sp + 0x64] = a0
 16373: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 16376: 82 67                    a0 = u64 [s1]
 16378: 51 08 26                 jump @949 if a1 == 0
      :                          @945
 16381: 52 18 01 16              jump @947 if a1 != 1
      :                          @946
 16385: 97 77 04                 a0 = a0 << 0x4
 16388: 82 18 18                 a1 = u64 [sp + 0x18]
 16391: c8 87 07                 a0 = a0 + a1
 16394: 82 78 08                 a1 = u64 [a0 + 0x8]
 16397: 82 19 10                 a2 = u64 [sp + 0x10]
 16400: aa 98 07                 jump @948 if a1 == a2
      :                          @947
 16403: 33 08                    a1 = 0
 16405: 28 0f                    jump @950
      :                          @948
 16407: 82 77                    a0 = u64 [a0]
 16409: 82 77                    a0 = u64 [a0]
 16411: 33 08 01                 a1 = 0x1
 16414: 28 06                    jump @950
      :                          @949
 16416: 33 08 01                 a1 = 0x1
 16419: 01                       fallthrough
      :                          @950
 16420: 7b 18 30                 u64 [sp + 0x30] = a1
 16423: 7b 17 38                 u64 [sp + 0x38] = a0
 16426: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 16429: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 16432: 51 08 26                 jump @955 if a1 == 0
      :                          @951
 16435: 52 18 01 16              jump @953 if a1 != 1
      :                          @952
 16439: 97 77 04                 a0 = a0 << 0x4
 16442: 82 18 18                 a1 = u64 [sp + 0x18]
 16445: c8 87 07                 a0 = a0 + a1
 16448: 82 78 08                 a1 = u64 [a0 + 0x8]
 16451: 82 19 10                 a2 = u64 [sp + 0x10]
 16454: aa 98 07                 jump @954 if a1 == a2
      :                          @953
 16457: 33 08                    a1 = 0
 16459: 28 0f                    jump @956
      :                          @954
 16461: 82 77                    a0 = u64 [a0]
 16463: 82 77                    a0 = u64 [a0]
 16465: 33 08 01                 a1 = 0x1
 16468: 28 06                    jump @956
      :                          @955
 16470: 33 08 01                 a1 = 0x1
 16473: 01                       fallthrough
      :                          @956
 16474: 7b 18 40                 u64 [sp + 0x40] = a1
 16477: 7b 17 48                 u64 [sp + 0x48] = a0
 16480: 82 67 08                 a0 = u64 [s1 + 0x8]
 16483: 97 77 04                 a0 = a0 << 0x4
 16486: 82 18 18                 a1 = u64 [sp + 0x18]
 16489: c8 78 08                 a1 = a1 + a0
 16492: 82 87                    a0 = u64 [a1]
 16494: 82 89 08                 a2 = u64 [a1 + 0x8]
 16497: 95 18 30                 a1 = sp + 0x30
 16500: b4 90 02 9e 01           ra = 414, jump [a2]
      :                          @957 [@dyn 207]
 16505: 52 07 bb 00              jump @973 if a0 != 0
      :                          @958
 16509: 95 55 10                 s0 = s0 + 0x10
 16512: 82 18 20                 a1 = u64 [sp + 0x20]
 16515: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 16518: 95 66 38                 s1 = s1 + 0x38
 16521: 82 17 28                 a0 = u64 [sp + 0x28]
 16524: 95 77 01                 a0 = a0 + 0x1
 16527: 7b 17 28                 u64 [sp + 0x28] = a0
 16530: 52 08 34 ff              jump @941 if a1 != 0
      :                          @959
 16534: 28 6b                    jump @968
      :                          @960
 16536: 82 97 18                 a0 = u64 [a2 + 0x18]
 16539: 51 07 73                 jump @970 if a0 == 0
      :                          @961
 16542: 82 95 10                 s0 = u64 [a2 + 0x10]
 16545: 33 0a                    a3 = 0
 16547: 97 78 04                 a1 = a0 << 0x4
 16550: c8 58 08                 a1 = a1 + s0
 16553: 7b 18 20                 u64 [sp + 0x20] = a1
 16556: 7b 19 08                 u64 [sp + 0x8] = a2
 16559: 82 96                    s1 = u64 [a2]
 16561: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 16564: 97 77 04                 a0 = a0 << 0x4
 16567: 98 77 04                 a0 = a0 >> 0x4
 16570: 95 77 01                 a0 = a0 + 0x1
 16573: 7b 17                    u64 [sp] = a0
 16575: 95 66 08                 s1 = s1 + 0x8
 16578: 01                       fallthrough
      :                          @962
 16579: 7b 1a 28                 u64 [sp + 0x28] = a3
 16582: 82 69                    a2 = u64 [s1]
 16584: 51 09 17                 jump @965 if a2 == 0
      :                          @963
 16587: 82 1a 58                 a3 = u64 [sp + 0x58]
 16590: 82 17 50                 a0 = u64 [sp + 0x50]
 16593: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 16596: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16599: b4 a0 02 a0 01           ra = 416, jump [a3]
      :                          @964 [@dyn 208]
 16604: 52 07 58                 jump @973 if a0 != 0
      :                          @965
 16607: 82 57                    a0 = u64 [s0]
 16609: 82 59 08                 a2 = u64 [s0 + 0x8]
 16612: 95 18 30                 a1 = sp + 0x30
 16615: b4 90 02 a2 01           ra = 418, jump [a2]
      :                          @966 [@dyn 209]
 16620: 52 07 48                 jump @973 if a0 != 0
      :                          @967
 16623: 95 66 10                 s1 = s1 + 0x10
 16626: 95 55 10                 s0 = s0 + 0x10
 16629: 82 1a 28                 a3 = u64 [sp + 0x28]
 16632: 95 aa 01                 a3 = a3 + 0x1
 16635: 82 17 20                 a0 = u64 [sp + 0x20]
 16638: ab 75 c5                 jump @962 if s0 != a0
      :                          @968
 16641: 82 19 08                 a2 = u64 [sp + 0x8]
 16644: 82 1a                    a3 = u64 [sp]
 16646: 82 97 08                 a0 = u64 [a2 + 0x8]
 16649: ac 7a 0d                 jump @971 if a3 <u a0
      :                          @969
 16652: 28 2d                    jump @974
      :                          @970
 16654: 33 0a                    a3 = 0
 16656: 82 97 08                 a0 = u64 [a2 + 0x8]
 16659: 54 07 26                 jump @974 if a0 <=u 0
      :                          @971
 16662: 82 97                    a0 = u64 [a2]
 16664: 97 a8 04                 a1 = a3 << 0x4
 16667: c8 87 09                 a2 = a0 + a1
 16670: 82 1a 58                 a3 = u64 [sp + 0x58]
 16673: 82 17 50                 a0 = u64 [sp + 0x50]
 16676: 82 98                    a1 = u64 [a2]
 16678: 82 99 08                 a2 = u64 [a2 + 0x8]
 16681: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16684: b4 a0 02 a4 01           ra = 420, jump [a3]
      :                          @972 [@dyn 210]
 16689: 51 07 08                 jump @974 if a0 == 0
      :                          @973
 16692: 33 07 01                 a0 = 0x1
 16695: 28 05                    jump @975
      :                          @974
 16697: 33 07                    a0 = 0
 16699: 01                       fallthrough
      :                          @975
 16700: 82 10 80 00              ra = u64 [sp + 0x80]
 16704: 82 15 78                 s0 = u64 [sp + 0x78]
 16707: 82 16 70                 s1 = u64 [sp + 0x70]
 16710: 95 11 88 00              sp = sp + 0x88
 16714: 32 00                    ret
      :                          @976 [@dyn 211]
 16716: 32 00                    ret
      :                          @977 [@dyn 212]
 16718: 95 11 88                 sp = sp + 0xffffffffffffff88
 16721: 7b 10 70                 u64 [sp + 0x70] = ra
 16724: 7b 15 68                 u64 [sp + 0x68] = s0
 16727: 7b 16 60                 u64 [sp + 0x60] = s1
 16730: 64 93                    t1 = a2
 16732: 33 0c                    a5 = 0
 16734: 33 02                    t0 = 0
 16736: 33 0b                    a4 = 0
 16738: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 16748: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 16754: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 16764: 82 79 10                 a2 = u64 [a0 + 0x10]
 16767: 7b 19 48                 u64 [sp + 0x48] = a2
 16770: 82 79                    a2 = u64 [a0]
 16772: 7b 19 30                 u64 [sp + 0x30] = a2
 16775: 82 77 08                 a0 = u64 [a0 + 0x8]
 16778: 7b 17 28                 u64 [sp + 0x28] = a0
 16781: 7b 18 50                 u64 [sp + 0x50] = a1
 16784: 95 88 08                 a1 = a1 + 0x8
 16787: 7b 18                    u64 [sp] = a1
 16789: 33 07 5a 02 01           a0 = 0x1025a
 16794: 7b 17 08                 u64 [sp + 0x8] = a0
 16797: 33 05 0a                 s0 = 0xa
 16800: 7b 13 20                 u64 [sp + 0x20] = t1
 16803: 7b 14 18                 u64 [sp + 0x18] = t2
 16806: 7b 10 10                 u64 [sp + 0x10] = ra
 16809: 28 3a                    jump @981
      :                          @978
 16811: c8 89 07                 a0 = a2 + a1
 16814: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 16817: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 16820: 88 77 01                 a0 = a0 <u 0x1
 16823: 01                       fallthrough
      :                          @979
 16824: 82 1a 48                 a3 = u64 [sp + 0x48]
 16827: 78 a7                    u8 [a3] = a0
 16829: 82 17 28                 a0 = u64 [sp + 0x28]
 16832: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16835: 82 17 30                 a0 = u64 [sp + 0x30]
 16838: b4 a0 02 aa 01           ra = 426, jump [a3]
      :                          @980 [@dyn 213]
 16843: 64 52                    t0 = s0
 16845: 82 13 20                 t1 = u64 [sp + 0x20]
 16848: 82 14 18                 t2 = u64 [sp + 0x18]
 16851: 82 10 10                 ra = u64 [sp + 0x10]
 16854: 82 1c 58                 a5 = u64 [sp + 0x58]
 16857: 33 05 0a                 s0 = 0xa
 16860: 82 1b 38                 a4 = u64 [sp + 0x38]
 16863: 52 07 67 01              jump @1022 if a0 != 0
      :                          @981
 16867: 84 b7 ff 00              a0 = a4 & 0xff
 16871: 52 07 5b 01              jump @1021 if a0 != 0
      :                          @982
 16875: 7b 12 40                 u64 [sp + 0x40] = t0
 16878: ae c3 0a                 jump @985 if t1 >=u a5
      :                          @983
 16881: 28 f4 00                 jump @1012
      :                          @984
 16884: ac c3 f1 00              jump @1012 if t1 <u a5
      :                          @985
 16888: c9 c3 08                 a1 = t1 - a5
 16891: 82 16 50                 s1 = u64 [sp + 0x50]
 16894: c8 c6 06                 s1 = s1 + a5
 16897: 55 18 10 1d              jump @991 if a1 >=u 16
      :                          @986
 16901: aa c3 dd 00              jump @1011 if t1 == a5
      :                          @987
 16905: 33 0a                    a3 = 0
 16907: 01                       fallthrough
      :                          @988
 16908: c8 a6 07                 a0 = s1 + a3
 16911: 7c 77                    a0 = u8 [a0]
 16913: aa 57 aa 00              jump @1006 if a0 == s0
      :                          @989
 16917: 95 aa 01                 a3 = a3 + 0x1
 16920: ab a8 f4                 jump @988 if a1 != a3
      :                          @990
 16923: 28 c7 00                 jump @1011
      :                          @991
 16926: 95 69 07                 a2 = s1 + 0x7
 16929: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 16932: c9 6a 07                 a0 = a3 - s1
 16935: d3 6a 0a                 a3 = a3 ^ s1
 16938: 88 aa 01                 a3 = a3 <u 0x1
 16941: 88 7b 01                 a4 = a0 <u 0x1
 16944: d4 ba 0a                 a3 = a3 | a4
 16947: 7b 1c 58                 u64 [sp + 0x58] = a5
 16950: 51 0a 44                 jump @997 if a3 == 0
      :                          @992
 16953: 33 07                    a0 = 0
 16955: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16958: 01                       fallthrough
      :                          @993
 16959: 82 1b 58                 a4 = u64 [sp + 0x58]
 16962: 82 19                    a2 = u64 [sp]
 16964: c8 9b 0b                 a4 = a4 + a2
 16967: 01                       fallthrough
      :                          @994
 16968: c8 76 0c                 a5 = s1 + a0
 16971: 82 cc                    a5 = u64 [a5]
 16973: c8 7b 09                 a2 = a4 + a0
 16976: 82 99                    a2 = u64 [a2]
 16978: d3 0c 05                 s0 = a5 ^ ra
 16981: c8 45 05                 s0 = s0 + t2
 16984: e0 c5 0c                 a5 = s0 & ~a5
 16987: d3 09 05                 s0 = a2 ^ ra
 16990: 3a 0a 10 00 03           a3 = u64 [0x30010]
 16995: c8 45 05                 s0 = s0 + t2
 16998: e0 95 09                 a2 = s0 & ~a2
 17001: d4 c9 09                 a2 = a2 | a5
 17004: d2 a9 09                 a2 = a2 & a3
 17007: 52 09 1f                 jump @1000 if a2 != 0
      :                          @995
 17010: 95 77 10                 a0 = a0 + 0x10
 17013: ae 72 d3                 jump @994 if t0 >=u a0
      :                          @996
 17016: 28 16                    jump @1000
      :                          @997
 17018: c8 a6 0b                 a4 = s1 + a3
 17021: 7c bb                    a4 = u8 [a4]
 17023: aa 5b 54                 jump @1009 if a4 == s0
      :                          @998
 17026: 95 aa 01                 a3 = a3 + 0x1
 17029: ab a7 f5                 jump @997 if a0 != a3
      :                          @999
 17032: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 17035: ae 72 b4                 jump @993 if t0 >=u a0
      :                          @1000
 17038: aa 87 99 00              jump @1018 if a0 == a1
      :                          @1001
 17042: 33 0a                    a3 = 0
 17044: c8 76 06                 s1 = s1 + a0
 17047: c9 73 08                 a1 = t1 - a0
 17050: 82 1c 58                 a5 = u64 [sp + 0x58]
 17053: c9 c8 08                 a1 = a1 - a5
 17056: 33 05 0a                 s0 = 0xa
 17059: 82 12 40                 t0 = u64 [sp + 0x40]
 17062: 01                       fallthrough
      :                          @1002
 17063: c8 a6 09                 a2 = s1 + a3
 17066: 7c 99                    a2 = u8 [a2]
 17068: aa 59 0b                 jump @1005 if a2 == s0
      :                          @1003
 17071: 95 aa 01                 a3 = a3 + 0x1
 17074: ab a8 f5                 jump @1002 if a1 != a3
      :                          @1004
 17077: 28 2d                    jump @1011
      :                          @1005
 17079: c8 7a 0a                 a3 = a3 + a0
 17082: 01                       fallthrough
      :                          @1006
 17083: c8 ca 0a                 a3 = a3 + a5
 17086: 95 ac 01                 a5 = a3 + 0x1
 17089: ae 3a 33 ff              jump @984 if a3 >=u t1
      :                          @1007
 17093: 82 17 50                 a0 = u64 [sp + 0x50]
 17096: c8 7a 0a                 a3 = a3 + a0
 17099: 7c a7                    a0 = u8 [a3]
 17101: ab 57 27 ff              jump @984 if a0 != s0
      :                          @1008
 17105: 28 5d                    jump @1019
      :                          @1009
 17107: 82 1c 58                 a5 = u64 [sp + 0x58]
 17110: c8 ca 0a                 a3 = a3 + a5
 17113: 95 ac 01                 a5 = a3 + 0x1
 17116: ac 3a e9                 jump @1007 if a3 <u t1
      :                          @1010
 17119: 28 15 ff                 jump @984
      :                          @1011
 17122: 64 3c                    a5 = t1
 17124: 01                       fallthrough
      :                          @1012
 17125: 7b 1c 58                 u64 [sp + 0x58] = a5
 17128: 49 11 38 01              u64 [sp + 56] = 0x1
 17132: 64 25                    s0 = t0
 17134: 64 36                    s1 = t1
 17136: aa 32 52                 jump @1021 if t0 == t1
      :                          @1013
 17139: 82 17 48                 a0 = u64 [sp + 0x48]
 17142: 7c 77                    a0 = u8 [a0]
 17144: 51 07 1d                 jump @1016 if a0 == 0
      :                          @1014
 17147: 82 17 28                 a0 = u64 [sp + 0x28]
 17150: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17153: 33 09 04                 a2 = 0x4
 17156: 82 17 30                 a0 = u64 [sp + 0x30]
 17159: 82 18 08                 a1 = u64 [sp + 0x8]
 17162: b4 a0 02 ac 01           ra = 428, jump [a3]
      :                          @1015 [@dyn 214]
 17167: 82 12 40                 t0 = u64 [sp + 0x40]
 17170: 52 07 34                 jump @1022 if a0 != 0
      :                          @1016
 17173: c9 26 09                 a2 = s1 - t0
 17176: 82 18 50                 a1 = u64 [sp + 0x50]
 17179: c8 28 08                 a1 = a1 + t0
 17182: ab 26 8d fe              jump @978 if s1 != t0
      :                          @1017
 17186: 33 07                    a0 = 0
 17188: 28 94 fe                 jump @979
      :                          @1018
 17191: 64 3c                    a5 = t1
 17193: 82 12 40                 t0 = u64 [sp + 0x40]
 17196: 28 b9                    jump @1012
      :                          @1019
 17198: 49 11 38                 u64 [sp + 56] = 0
 17201: 64 c6                    s1 = a5
 17203: 64 c5                    s0 = a5
 17205: 7b 1c 58                 u64 [sp + 0x58] = a5
 17208: 82 17 48                 a0 = u64 [sp + 0x48]
 17211: 7c 77                    a0 = u8 [a0]
 17213: 52 07 be                 jump @1014 if a0 != 0
      :                          @1020
 17216: 28 d5                    jump @1016
      :                          @1021
 17218: 33 07                    a0 = 0
 17220: 28 06                    jump @1023
      :                          @1022
 17222: 33 07 01                 a0 = 0x1
 17225: 01                       fallthrough
      :                          @1023
 17226: 82 10 70                 ra = u64 [sp + 0x70]
 17229: 82 15 68                 s0 = u64 [sp + 0x68]
 17232: 82 16 60                 s1 = u64 [sp + 0x60]
 17235: 95 11 78                 sp = sp + 0x78
 17238: 32 00                    ret
      :                          @1024 [@dyn 215]
 17240: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17243: 7b 10 20                 u64 [sp + 0x20] = ra
 17246: 7b 15 18                 u64 [sp + 0x18] = s0
 17249: 7b 16 10                 u64 [sp + 0x10] = s1
 17252: 82 75 10                 s0 = u64 [a0 + 0x10]
 17255: 7c 59                    a2 = u8 [s0]
 17257: 82 7b                    a4 = u64 [a0]
 17259: 82 76 08                 s1 = u64 [a0 + 0x8]
 17262: 51 09 33                 jump @1028 if a2 == 0
      :                          @1025
 17265: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17268: 7b 18 08                 u64 [sp + 0x8] = a1
 17271: 33 08 5a 02 01           a1 = 0x1025a
 17276: 33 09 04                 a2 = 0x4
 17279: 64 b7                    a0 = a4
 17281: 7b 1b                    u64 [sp] = a4
 17283: b4 a0 02 b0 01           ra = 432, jump [a3]
      :                          @1026 [@dyn 216]
 17288: 82 18 08                 a1 = u64 [sp + 0x8]
 17291: 82 1b                    a4 = u64 [sp]
 17293: 51 07 14                 jump @1028 if a0 == 0
      :                          @1027
 17296: 33 07 01                 a0 = 0x1
 17299: 82 10 20                 ra = u64 [sp + 0x20]
 17302: 82 15 18                 s0 = u64 [sp + 0x18]
 17305: 82 16 10                 s1 = u64 [sp + 0x10]
 17308: 95 11 28                 sp = sp + 0x28
 17311: 32 00                    ret
      :                          @1028
 17313: 83 87                    i32 a0 = a1 + 0
 17315: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17318: 88 77 01                 a0 = a0 <u 0x1
 17321: 78 57                    u8 [s0] = a0
 17323: 82 6c 20                 a5 = u64 [s1 + 0x20]
 17326: 64 b7                    a0 = a4
 17328: 82 10 20                 ra = u64 [sp + 0x20]
 17331: 82 15 18                 s0 = u64 [sp + 0x18]
 17334: 82 16 10                 s1 = u64 [sp + 0x10]
 17337: 95 11 28                 sp = sp + 0x28
 17340: 32 0c                    jump [a5]
      :                          @1029 [@dyn 217]
 17342: 64 8a                    a3 = a1
 17344: 33 08 40 11 01           a1 = 0x11140
 17349: 64 a9                    a2 = a3
 17351: 28 a0 fb                 jump @938
      :                          @1030
 17354: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 17358: 7b 10 88 00              u64 [sp + 0x88] = ra
 17362: 7b 15 80 00              u64 [sp + 0x80] = s0
 17366: 7b 16 78                 u64 [sp + 0x78] = s1
 17369: 64 75                    s0 = a0
 17371: 7c 77 08                 a0 = u8 [a0 + 0x8]
 17374: 64 8b                    a4 = a1
 17376: 33 08 01                 a1 = 0x1
 17379: 33 06 01                 s1 = 0x1
 17382: 51 07 1d                 jump @1032 if a0 == 0
      :                          @1031
 17385: 78 56 08                 u8 [s0 + 0x8] = s1
 17388: 46 15 09 01              u8 [s0 + 9] = 0x1
 17392: 64 57                    a0 = s0
 17394: 82 10 88 00              ra = u64 [sp + 0x88]
 17398: 82 15 80 00              s0 = u64 [sp + 0x80]
 17402: 82 16 78                 s1 = u64 [sp + 0x78]
 17405: 95 11 90 00              sp = sp + 0x90
 17409: 32 00                    ret
      :                          @1032
 17411: 64 9a                    a3 = a2
 17413: 82 5c                    a5 = u64 [s0]
 17415: 80 c7 34                 a0 = u32 [a5 + 0x34]
 17418: 7c 58 09                 a1 = u8 [s0 + 0x9]
 17421: 84 79 04                 a2 = a0 & 0x4
 17424: 52 09 45                 jump @1038 if a2 != 0
      :                          @1033
 17427: 51 08 32                 jump @1036 if a1 == 0
      :                          @1034
 17430: 82 c8 28                 a1 = u64 [a5 + 0x28]
 17433: 82 c7 20                 a0 = u64 [a5 + 0x20]
 17436: 82 83 18                 t1 = u64 [a1 + 0x18]
 17439: 33 08 f1 05 01           a1 = 0x105f1
 17444: 33 09 02                 a2 = 0x2
 17447: 64 a6                    s1 = a3
 17449: 7b 1b 10                 u64 [sp + 0x10] = a4
 17452: 7b 1c 08                 u64 [sp + 0x8] = a5
 17455: b4 30 02 b4 01           ra = 436, jump [t1]
      :                          @1035 [@dyn 218]
 17460: 82 1c 08                 a5 = u64 [sp + 0x8]
 17463: 82 1b 10                 a4 = u64 [sp + 0x10]
 17466: 64 6a                    a3 = s1
 17468: 33 08 01                 a1 = 0x1
 17471: 33 06 01                 s1 = 0x1
 17474: 52 07 a7                 jump @1031 if a0 != 0
      :                          @1036
 17477: 64 b7                    a0 = a4
 17479: 64 c8                    a1 = a5
 17481: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @1037 [@dyn 219]
 17486: 33 08 01                 a1 = 0x1
 17489: 64 76                    s1 = a0
 17491: 28 96                    jump @1031
      :                          @1038
 17493: 52 08 37                 jump @1042 if a1 != 0
      :                          @1039
 17496: 82 c8 28                 a1 = u64 [a5 + 0x28]
 17499: 82 c7 20                 a0 = u64 [a5 + 0x20]
 17502: 82 83 18                 t1 = u64 [a1 + 0x18]
 17505: 33 08 f5 05 01           a1 = 0x105f5
 17510: 33 09 01                 a2 = 0x1
 17513: 33 06 01                 s1 = 0x1
 17516: 7b 1a                    u64 [sp] = a3
 17518: 7b 1b 10                 u64 [sp + 0x10] = a4
 17521: 7b 1c 08                 u64 [sp + 0x8] = a5
 17524: b4 30 02 b8 01           ra = 440, jump [t1]
      :                          @1040 [@dyn 220]
 17529: 82 1c 08                 a5 = u64 [sp + 0x8]
 17532: 82 1b 10                 a4 = u64 [sp + 0x10]
 17535: 82 1a                    a3 = u64 [sp]
 17537: 33 08 01                 a1 = 0x1
 17540: 52 07 65 ff              jump @1031 if a0 != 0
      :                          @1041
 17544: 81 c7 34                 a0 = i32 [a5 + 0x34]
 17547: 01                       fallthrough
      :                          @1042
 17548: 33 06 01                 s1 = 0x1
 17551: 78 16 37                 u8 [sp + 0x37] = s1
 17554: 82 c8 20                 a1 = u64 [a5 + 0x20]
 17557: 82 c9 28                 a2 = u64 [a5 + 0x28]
 17560: 7b 18 18                 u64 [sp + 0x18] = a1
 17563: 7b 19 20                 u64 [sp + 0x20] = a2
 17566: 95 18 37                 a1 = sp + 0x37
 17569: 7b 18 28                 u64 [sp + 0x28] = a1
 17572: 81 c8 30                 a1 = i32 [a5 + 0x30]
 17575: 7c c9 38                 a2 = u8 [a5 + 0x38]
 17578: 82 c3                    t1 = u64 [a5]
 17580: 82 c4 08                 t2 = u64 [a5 + 0x8]
 17583: 82 c0 10                 ra = u64 [a5 + 0x10]
 17586: 82 c2 18                 t0 = u64 [a5 + 0x18]
 17589: 7a 17 6c                 u32 [sp + 0x6c] = a0
 17592: 7a 18 68                 u32 [sp + 0x68] = a1
 17595: 78 19 70                 u8 [sp + 0x70] = a2
 17598: 7b 13 38                 u64 [sp + 0x38] = t1
 17601: 7b 14 40                 u64 [sp + 0x40] = t2
 17604: 7b 10 48                 u64 [sp + 0x48] = ra
 17607: 7b 12 50                 u64 [sp + 0x50] = t0
 17610: 95 17 18                 a0 = sp + 0x18
 17613: 7b 17 58                 u64 [sp + 0x58] = a0
 17616: 33 07 40 11 01           a0 = 0x11140
 17621: 7b 17 60                 u64 [sp + 0x60] = a0
 17624: 95 18 38                 a1 = sp + 0x38
 17627: 64 b7                    a0 = a4
 17629: b4 a0 02 ba 01           ra = 442, jump [a3]
      :                          @1043 [@dyn 221]
 17634: 52 07 21                 jump @1046 if a0 != 0
      :                          @1044
 17637: 82 18 60                 a1 = u64 [sp + 0x60]
 17640: 82 17 58                 a0 = u64 [sp + 0x58]
 17643: 82 8a 18                 a3 = u64 [a1 + 0x18]
 17646: 33 08 f3 05 01           a1 = 0x105f3
 17651: 33 09 02                 a2 = 0x2
 17654: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @1045 [@dyn 222]
 17659: 64 76                    s1 = a0
 17661: 33 08 01                 a1 = 0x1
 17664: 28 e9 fe                 jump @1031
      :                          @1046
 17667: 33 08 01                 a1 = 0x1
 17670: 28 e3 fe                 jump @1031
      :                          @1047
 17673: 51 08 9b 00              jump @1068 if a1 == 0
      :                          @1048
 17677: 64 79                    a2 = a0
 17679: 7c 77                    a0 = u8 [a0]
 17681: 51 07 91 00              jump @1067 if a0 == 0
      :                          @1049
 17685: 51 27 ff 00 90 00        jump @1069 if a0 == 255
      :                          @1050
 17691: 6c 7a                    a3 = sext.b a0
 17693: 57 0a 09                 jump @1052 if a3 <s 0
      :                          @1051
 17696: 33 0a                    a3 = 0
 17698: 33 08                    a1 = 0
 17700: 28 73                    jump @1066
      :                          @1052
 17702: 55 27 c0 00 0d           jump @1054 if a0 >=u 192
      :                          @1053
 17707: 33 0a 01                 a3 = 0x1
 17710: 33 0b 80                 a4 = 0xffffffffffffff80
 17713: 28 4a                    jump @1063
      :                          @1054
 17715: 55 27 e0 00 0e           jump @1056 if a0 >=u 224
      :                          @1055
 17720: 33 0a 02                 a3 = 0x2
 17723: 33 0b 40 ff              a4 = 0xffffffffffffff40
 17727: 28 3c                    jump @1063
      :                          @1056
 17729: 55 27 f0 00 0e           jump @1058 if a0 >=u 240
      :                          @1057
 17734: 33 0a 03                 a3 = 0x3
 17737: 33 0b 20 ff              a4 = 0xffffffffffffff20
 17741: 28 2e                    jump @1063
      :                          @1058
 17743: 55 27 f8 00 0e           jump @1060 if a0 >=u 248
      :                          @1059
 17748: 33 0a 04                 a3 = 0x4
 17751: 33 0b 10 ff              a4 = 0xffffffffffffff10
 17755: 28 20                    jump @1063
      :                          @1060
 17757: 55 27 fc 00 0e           jump @1062 if a0 >=u 252
      :                          @1061
 17762: 33 0a 05                 a3 = 0x5
 17765: 33 0b 08 ff              a4 = 0xffffffffffffff08
 17769: 28 12                    jump @1063
      :                          @1062
 17771: 88 7a fe 00              a3 = a0 <u 0xfe
 17775: 33 0b 04 ff              a4 = 0xffffffffffffff04
 17779: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 17783: 85 aa 07                 a3 = a3 ^ 0x7
 17786: 01                       fallthrough
      :                          @1063
 17787: ae 8a 2b                 jump @1070 if a3 >=u a1
      :                          @1064
 17790: 33 08                    a1 = 0
 17792: c8 b7 07                 a0 = a0 + a4
 17795: 64 ab                    a4 = a3
 17797: 01                       fallthrough
      :                          @1065
 17798: c8 b9 0c                 a5 = a2 + a4
 17801: 7c cc                    a5 = u8 [a5]
 17803: 97 88 08                 a1 = a1 << 0x8
 17806: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17809: d4 c8 08                 a1 = a1 | a5
 17812: 52 0b f2                 jump @1065 if a4 != 0
      :                          @1066
 17815: 8a a9 03                 i32 a2 = a3 << 0x3
 17818: cf 97 07                 a0 = a0 << a2
 17821: c8 87 07                 a0 = a0 + a1
 17824: 32 00                    ret
      :                          @1067
 17826: 32 00                    ret
      :                          @1068
 17828: 00                       trap
      :                          @1069
 17829: 00                       trap
      :                          @1070
 17830: 00                       trap
      :                          @1071
 17831: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 17835: 7b 10 00 01              u64 [sp + 0x100] = ra
 17839: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 17843: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 17847: 7b 17                    u64 [sp] = a0
 17849: 78 18 0f                 u8 [sp + 0xf] = a1
 17852: 7b 17 10                 u64 [sp + 0x10] = a0
 17855: 95 16 0f                 s1 = sp + 0xf
 17858: 33 05 01                 s0 = 0x1
 17861: 95 17 0f                 a0 = sp + 0xf
 17864: 33 08 01                 a1 = 0x1
 17867: 95 19 10                 a2 = sp + 0x10
 17870: 33 0a 08                 a3 = 0x8
 17873: 0a 03                    ecalli 3 // 'write'
 17875: 7b 16 60                 u64 [sp + 0x60] = s1
 17878: 33 07 c2 01              a0 = 0x1c2
 17882: 7b 17 68                 u64 [sp + 0x68] = a0
 17885: 64 17                    a0 = sp
 17887: 7b 17 70                 u64 [sp + 0x70] = a0
 17890: 33 07 18                 a0 = 0x18
 17893: 7b 17 78                 u64 [sp + 0x78] = a0
 17896: 49 21 80 00 02           u64 [sp + 128] = 0x2
 17901: 49 21 90 00 02           u64 [sp + 144] = 0x2
 17906: 49 21 a0 00              u64 [sp + 160] = 0
 17910: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 17920: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 17924: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 17929: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 17934: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 17939: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 17943: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 17947: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 17952: 33 08 70 11 01           a1 = 0x11170
 17957: 7b 18 30                 u64 [sp + 0x30] = a1
 17960: 49 11 38 02              u64 [sp + 56] = 0x2
 17964: 95 18 80 00              a1 = sp + 0x80
 17968: 7b 18 50                 u64 [sp + 0x50] = a1
 17971: 49 11 58 02              u64 [sp + 88] = 0x2
 17975: 95 18 60                 a1 = sp + 0x60
 17978: 7b 18 40                 u64 [sp + 0x40] = a1
 17981: 49 11 48 02              u64 [sp + 72] = 0x2
 17985: 95 17 18                 a0 = sp + 0x18
 17988: 95 18 30                 a1 = sp + 0x30
 17991: 50 20 be 01 26 ee        ra = 446, jump @720
      :                          @1072 [@dyn 223]
 17997: 82 15 20                 s0 = u64 [sp + 0x20]
 18000: 82 1b 28                 a4 = u64 [sp + 0x28]
 18003: 82 16 18                 s1 = u64 [sp + 0x18]
 18006: 33 07 02                 a0 = 0x2
 18009: 33 08                    a1 = 0
 18011: 33 09                    a2 = 0
 18013: 64 5a                    a3 = s0
 18015: 33 00 c0 01              ra = 0x1c0
 18019: 0a 64                    ecalli 100 // 'log'
 18021: 01                       fallthrough
      :                          @1073 [@dyn 224]
 18022: 33 07 00 f0              a0 = 0xfffffffffffff000
 18026: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 18030: ac 78 23                 jump @1079 if a1 <u a0
      :                          @1074
 18033: 33 07 20 00 03           a0 = 0x30020
 18038: 95 77 00 10              a0 = a0 + 0x1000
 18042: 01                       fallthrough
      :                          @1075
 18043: 82 78                    a1 = u64 [a0]
 18045: c9 87 09                 a2 = a0 - a1
 18048: ab 59 11                 jump @1079 if a2 != s0
      :                          @1076
 18051: c9 68 09                 a2 = a1 - s1
 18054: 01                       fallthrough
      :                          @1077
 18055: 82 7a                    a3 = u64 [a0]
 18057: ab 8a f2                 jump @1075 if a3 != a1
      :                          @1078
 18060: 7b 79                    u64 [a0] = a2
 18062: 33 0b                    a4 = 0
 18064: 01                       fallthrough
      :                          @1079
 18065: 82 10 00 01              ra = u64 [sp + 0x100]
 18069: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 18073: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 18077: 95 11 08 01              sp = sp + 0x108
 18081: 32 00                    ret
      :                          @1080 [@dyn 225]
 18083: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 18086: 7b 10 28                 u64 [sp + 0x28] = ra
 18089: 7b 15 20                 u64 [sp + 0x20] = s0
 18092: 7b 16 18                 u64 [sp + 0x18] = s1
 18095: 64 86                    s1 = a1
 18097: 82 88 28                 a1 = u64 [a1 + 0x28]
 18100: 82 6a 20                 a3 = u64 [s1 + 0x20]
 18103: 82 8b 18                 a4 = u64 [a1 + 0x18]
 18106: 64 75                    s0 = a0
 18108: 33 08 f0 05 01           a1 = 0x105f0
 18113: 33 09 01                 a2 = 0x1
 18116: 64 a7                    a0 = a3
 18118: b4 b0 02 c4 01           ra = 452, jump [a4]
      :                          @1081 [@dyn 226]
 18123: 7b 16                    u64 [sp] = s1
 18125: 78 17 08                 u8 [sp + 0x8] = a0
 18128: 46 11 09                 u8 [sp + 9] = 0
 18131: 7b 15 10                 u64 [sp + 0x10] = s0
 18134: 33 09 02                 a2 = 0x2
 18137: 64 17                    a0 = sp
 18139: 95 18 10                 a1 = sp + 0x10
 18142: 50 20 c6 01 ec fc        ra = 454, jump @1030
      :                          @1082 [@dyn 227]
 18148: 33 07 01                 a0 = 0x1
 18151: 7c 18 08                 a1 = u8 [sp + 0x8]
 18154: 52 08 1b                 jump @1084 if a1 != 0
      :                          @1083
 18157: 82 17                    a0 = u64 [sp]
 18159: 82 78 28                 a1 = u64 [a0 + 0x28]
 18162: 82 77 20                 a0 = u64 [a0 + 0x20]
 18165: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18168: 33 08 f6 05 01           a1 = 0x105f6
 18173: 33 09 01                 a2 = 0x1
 18176: b4 a0 02 c8 01           ra = 456, jump [a3]
      :                          @1084 [@dyn 228]
 18181: 82 10 28                 ra = u64 [sp + 0x28]
 18184: 82 15 20                 s0 = u64 [sp + 0x20]
 18187: 82 16 18                 s1 = u64 [sp + 0x18]
 18190: 95 11 30                 sp = sp + 0x30
 18193: 32 00                    ret
