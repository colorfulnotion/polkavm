// RO data = 4784/4784 bytes
// RW data = 24/1048672 bytes
// Stack size = 1048576 bytes
// RO data = [146, 0, 0, 0, 170, 0, 0, 0, 188, 0, 0, 0, 206, 0, 0, 0, 244, 0, 0, 0, 24, 1, 0, 0, 46, 1, 0, 0, 58, 1, 0, 0, 70, 1, 0, 0, 88, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 64, 110, 61, 101, 106, 101, 99, 116, 64, 110, 61, 101, 120, 112, 117, 110, 103, 101, 32, 32, 111, 117, 116, 112, 117, 116, 61, 121, 105, 101, 108, 100, 64, 110, 61, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 32, 64, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 32, 64, 110, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 88, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 93, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 128, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 160, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 16, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 96, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 0, 0, 0, 0, 0, 0, 208, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 24, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 0, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 0, 0, 152, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 216, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 0, 40, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 57, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 105, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 216, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 235, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 246, 4, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 0, 56, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 65, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 0, 0, 0, 0, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 0, 0, 0, 0, 144, 6, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 158, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 106, 97, 109, 64, 110, 61, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 112, 114, 101, 118, 32, 108, 101, 110, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 56, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 0, 0, 0, 200, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 122, 101, 114, 111, 32, 114, 101, 115, 117, 108, 116, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 50, 8, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 0, 128, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 200, 8, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 44, 32, 103, 111, 116, 32, 160, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 0, 240, 9, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 128, 11, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 200, 11, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 16, 12, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 200, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 207, 12, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 112, 103, 114, 97, 100, 101, 32, 64, 110, 61, 0, 0, 0, 0, 0, 32, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 72, 14, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 64, 110, 61, 0, 192, 14, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 0, 0, 0, 248, 14, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 112, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 133, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 154, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 156, 1, 0, 0, 0, 0, 0, 0, 162, 1, 0, 0, 0, 0, 0, 0, 170, 1, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 206, 1, 0, 0, 0, 0, 0, 0, 212, 1, 0, 0, 0, 0, 0, 0, 216, 1, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 114, 18, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 131, 18, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 6063
// Code size = 19330 bytes

      :                          @0
     0: 28 a0 04 00 00           jump @78
      :                          @1
     5: 28 6e 15 00 00           jump @273
      :                          @2
    10: 28 00 39                 jump @737
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 f0 0f 01           a1 = 0x10ff0
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2d                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 f0 01              a0 = 0x1f0
    73: 7b 17                    u64 [sp] = a0
    75: 01                       fallthrough
      :                          @6
    76: 95 67 01                 a0 = s1 + 0x1
    79: 7b 17 08                 u64 [sp + 0x8] = a0
    82: 7b 16 20                 u64 [sp + 0x20] = s1
    85: 95 17 10                 a0 = sp + 0x10
    88: 95 18 20                 a1 = sp + 0x20
    91: 82 19                    a2 = u64 [sp]
    93: 50 10 06 26 47           ra = 6, jump @1038
      :                          @7 [@dyn 3]
    98: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   101: 82 16 08                 s1 = u64 [sp + 0x8]
   104: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   107: 7c 17 18                 a0 = u8 [sp + 0x18]
   110: 01                       fallthrough
      :                          @9
   111: 33 08 01                 a1 = 0x1
   114: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   117: 82 17 10                 a0 = u64 [sp + 0x10]
   120: 82 78 28                 a1 = u64 [a0 + 0x28]
   123: 82 77 20                 a0 = u64 [a0 + 0x20]
   126: 82 8a 18                 a3 = u64 [a1 + 0x18]
   129: 33 08 45 10 01           a1 = 0x11045
   134: 33 09 01                 a2 = 0x1
   137: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   141: 64 78                    a1 = a0
   143: 01                       fallthrough
      :                          @12
   144: 64 87                    a0 = a1
   146: 82 10 38                 ra = u64 [sp + 0x38]
   149: 82 15 30                 s0 = u64 [sp + 0x30]
   152: 82 16 28                 s1 = u64 [sp + 0x28]
   155: 95 11 40                 sp = sp + 0x40
   158: 32 00                    ret
      :                          @13 [@dyn 5]
   160: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   164: 7b 10 80 00              u64 [sp + 0x80] = ra
   168: 80 89 34                 a2 = u32 [a1 + 0x34]
   171: 82 77                    a0 = u64 [a0]
   173: 84 9a 10                 a3 = a2 & 0x10
   176: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   179: 84 99 20                 a2 = a2 & 0x20
   182: 52 09 40                 jump @19 if a2 != 0
      :                          @15
   185: 82 77                    a0 = u64 [a0]
   187: 82 10 80 00              ra = u64 [sp + 0x80]
   191: 95 11 88 00              sp = sp + 0x88
   195: 28 b5 3e                 jump @884
      :                          @16
   198: 82 7b                    a4 = u64 [a0]
   200: 33 09 81 00              a2 = 0x81
   204: 95 17 7f                 a0 = sp + 0x7f
   207: 33 02 57                 t0 = 0x57
   210: 01                       fallthrough
      :                          @17
   211: 64 9c                    a5 = a2
   213: 98 ba 04                 a3 = a4 >> 0x4
   216: 84 bb 0f                 a4 = a4 & 0xf
   219: 88 b3 0a                 t1 = a4 <u 0xa
   222: 33 09 30                 a2 = 0x30
   225: da 32 09                 a2 = t0 if t1 == 0
   228: be b9 09                 i32 a2 = a2 + a4
   231: 78 79                    u8 [a0] = a2
   233: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   236: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   239: 64 ab                    a4 = a3
   241: 52 0a e2                 jump @17 if a3 != 0
      :                          @18
   244: 28 30                    jump @21
      :                          @19
   246: 82 7b                    a4 = u64 [a0]
   248: 33 09 81 00              a2 = 0x81
   252: 95 17 7f                 a0 = sp + 0x7f
   255: 33 02 37                 t0 = 0x37
   258: 01                       fallthrough
      :                          @20
   259: 64 9c                    a5 = a2
   261: 98 ba 04                 a3 = a4 >> 0x4
   264: 84 bb 0f                 a4 = a4 & 0xf
   267: 88 b3 0a                 t1 = a4 <u 0xa
   270: 33 09 30                 a2 = 0x30
   273: da 32 09                 a2 = t0 if t1 == 0
   276: be b9 09                 i32 a2 = a2 + a4
   279: 78 79                    u8 [a0] = a2
   281: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   284: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   287: 64 ab                    a4 = a3
   289: 52 0a e2                 jump @20 if a3 != 0
      :                          @21
   292: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   295: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   300: 9a 9b 81 00              a4 = 0x81 - a2
   304: 64 1a                    a3 = sp
   306: c8 7a 0a                 a3 = a3 + a0
   309: 33 09 02                 a2 = 0x2
   312: 64 87                    a0 = a1
   314: 33 08 46 10 01           a1 = 0x11046
   319: 50 10 0c 61 3f           ra = 12, jump @894
      :                          @23 [@dyn 6]
   324: 82 10 80 00              ra = u64 [sp + 0x80]
   328: 95 11 88 00              sp = sp + 0x88
   332: 32 00                    ret
      :                          @24
   334: 00                       trap
      :                          @25 [@dyn 7]
   335: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   339: 7b 10 80 00              u64 [sp + 0x80] = ra
   343: 80 89 34                 a2 = u32 [a1 + 0x34]
   346: 84 9a 10                 a3 = a2 & 0x10
   349: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   352: 84 99 20                 a2 = a2 & 0x20
   355: 52 09 41                 jump @31 if a2 != 0
      :                          @27
   358: 7c 77                    a0 = u8 [a0]
   360: 82 10 80 00              ra = u64 [sp + 0x80]
   364: 95 11 88 00              sp = sp + 0x88
   368: 28 08 3e                 jump @884
      :                          @28
   371: 7c 77                    a0 = u8 [a0]
   373: 33 0b 81 00              a4 = 0x81
   377: 95 19 7f                 a2 = sp + 0x7f
   380: 33 02 57                 t0 = 0x57
   383: 01                       fallthrough
      :                          @29
   384: 64 bc                    a5 = a4
   386: 84 7b 0f                 a4 = a0 & 0xf
   389: 97 77 38                 a0 = a0 << 0x38
   392: 98 77 3c                 a0 = a0 >> 0x3c
   395: 88 b3 0a                 t1 = a4 <u 0xa
   398: 33 0a 30                 a3 = 0x30
   401: da 32 0a                 a3 = t0 if t1 == 0
   404: be ba 0a                 i32 a3 = a3 + a4
   407: 78 9a                    u8 [a2] = a3
   409: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   412: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   415: 52 07 e1                 jump @29 if a0 != 0
      :                          @30
   418: 28 31                    jump @33
      :                          @31
   420: 7c 77                    a0 = u8 [a0]
   422: 33 0b 81 00              a4 = 0x81
   426: 95 19 7f                 a2 = sp + 0x7f
   429: 33 02 37                 t0 = 0x37
   432: 01                       fallthrough
      :                          @32
   433: 64 bc                    a5 = a4
   435: 84 7b 0f                 a4 = a0 & 0xf
   438: 97 77 38                 a0 = a0 << 0x38
   441: 98 77 3c                 a0 = a0 >> 0x3c
   444: 88 b3 0a                 t1 = a4 <u 0xa
   447: 33 0a 30                 a3 = 0x30
   450: da 32 0a                 a3 = t0 if t1 == 0
   453: be ba 0a                 i32 a3 = a3 + a4
   456: 78 9a                    u8 [a2] = a3
   458: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   461: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   464: 52 07 e1                 jump @32 if a0 != 0
      :                          @33
   467: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   470: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   475: 9a bb 81 00              a4 = 0x81 - a4
   479: 64 1a                    a3 = sp
   481: c8 7a 0a                 a3 = a3 + a0
   484: 33 09 02                 a2 = 0x2
   487: 64 87                    a0 = a1
   489: 33 08 46 10 01           a1 = 0x11046
   494: 50 10 10 b2 3e           ra = 16, jump @894
      :                          @35 [@dyn 8]
   499: 82 10 80 00              ra = u64 [sp + 0x80]
   503: 95 11 88 00              sp = sp + 0x88
   507: 32 00                    ret
      :                          @36
   509: 00                       trap
      :                          @37 [@dyn 9]
   510: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   514: 7b 10 80 00              u64 [sp + 0x80] = ra
   518: 80 89 34                 a2 = u32 [a1 + 0x34]
   521: 84 9a 10                 a3 = a2 & 0x10
   524: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   527: 84 99 20                 a2 = a2 & 0x20
   530: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   533: 80 77                    a0 = u32 [a0]
   535: 82 10 80 00              ra = u64 [sp + 0x80]
   539: 95 11 88 00              sp = sp + 0x88
   543: 28 59 3d                 jump @884
      :                          @40
   546: 81 7b                    a4 = i32 [a0]
   548: 33 09 81 00              a2 = 0x81
   552: 95 17 7f                 a0 = sp + 0x7f
   555: 33 02 57                 t0 = 0x57
   558: 01                       fallthrough
      :                          @41
   559: 64 9c                    a5 = a2
   561: 8b ba 04                 i32 a3 = a4 >> 0x4
   564: 84 bb 0f                 a4 = a4 & 0xf
   567: 88 b3 0a                 t1 = a4 <u 0xa
   570: 33 09 30                 a2 = 0x30
   573: da 32 09                 a2 = t0 if t1 == 0
   576: be b9 09                 i32 a2 = a2 + a4
   579: 78 79                    u8 [a0] = a2
   581: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   584: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   587: 64 ab                    a4 = a3
   589: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   592: 28 30                    jump @45
      :                          @43
   594: 81 7b                    a4 = i32 [a0]
   596: 33 09 81 00              a2 = 0x81
   600: 95 17 7f                 a0 = sp + 0x7f
   603: 33 02 37                 t0 = 0x37
   606: 01                       fallthrough
      :                          @44
   607: 64 9c                    a5 = a2
   609: 8b ba 04                 i32 a3 = a4 >> 0x4
   612: 84 bb 0f                 a4 = a4 & 0xf
   615: 88 b3 0a                 t1 = a4 <u 0xa
   618: 33 09 30                 a2 = 0x30
   621: da 32 09                 a2 = t0 if t1 == 0
   624: be b9 09                 i32 a2 = a2 + a4
   627: 78 79                    u8 [a0] = a2
   629: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   632: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   635: 64 ab                    a4 = a3
   637: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   640: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   643: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   648: 9a 9b 81 00              a4 = 0x81 - a2
   652: 64 1a                    a3 = sp
   654: c8 7a 0a                 a3 = a3 + a0
   657: 33 09 02                 a2 = 0x2
   660: 64 87                    a0 = a1
   662: 33 08 46 10 01           a1 = 0x11046
   667: 50 10 14 05 3e           ra = 20, jump @894
      :                          @47 [@dyn 10]
   672: 82 10 80 00              ra = u64 [sp + 0x80]
   676: 95 11 88 00              sp = sp + 0x88
   680: 32 00                    ret
      :                          @48
   682: 00                       trap
      :                          @49 [@dyn 11]
   683: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   687: 7b 10 80 00              u64 [sp + 0x80] = ra
   691: 80 89 34                 a2 = u32 [a1 + 0x34]
   694: 84 9a 10                 a3 = a2 & 0x10
   697: 52 0a 16                 jump @52 if a3 != 0
      :                          @50
   700: 84 99 20                 a2 = a2 & 0x20
   703: 52 09 40                 jump @55 if a2 != 0
      :                          @51
   706: 82 77                    a0 = u64 [a0]
   708: 82 10 80 00              ra = u64 [sp + 0x80]
   712: 95 11 88 00              sp = sp + 0x88
   716: 28 ac 3c                 jump @884
      :                          @52
   719: 82 7b                    a4 = u64 [a0]
   721: 33 09 81 00              a2 = 0x81
   725: 95 17 7f                 a0 = sp + 0x7f
   728: 33 02 57                 t0 = 0x57
   731: 01                       fallthrough
      :                          @53
   732: 64 9c                    a5 = a2
   734: 98 ba 04                 a3 = a4 >> 0x4
   737: 84 bb 0f                 a4 = a4 & 0xf
   740: 88 b3 0a                 t1 = a4 <u 0xa
   743: 33 09 30                 a2 = 0x30
   746: da 32 09                 a2 = t0 if t1 == 0
   749: be b9 09                 i32 a2 = a2 + a4
   752: 78 79                    u8 [a0] = a2
   754: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   757: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   760: 64 ab                    a4 = a3
   762: 52 0a e2                 jump @53 if a3 != 0
      :                          @54
   765: 28 30                    jump @57
      :                          @55
   767: 82 7b                    a4 = u64 [a0]
   769: 33 09 81 00              a2 = 0x81
   773: 95 17 7f                 a0 = sp + 0x7f
   776: 33 02 37                 t0 = 0x37
   779: 01                       fallthrough
      :                          @56
   780: 64 9c                    a5 = a2
   782: 98 ba 04                 a3 = a4 >> 0x4
   785: 84 bb 0f                 a4 = a4 & 0xf
   788: 88 b3 0a                 t1 = a4 <u 0xa
   791: 33 09 30                 a2 = 0x30
   794: da 32 09                 a2 = t0 if t1 == 0
   797: be b9 09                 i32 a2 = a2 + a4
   800: 78 79                    u8 [a0] = a2
   802: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   805: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   808: 64 ab                    a4 = a3
   810: 52 0a e2                 jump @56 if a3 != 0
      :                          @57
   813: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   816: 56 27 80 00 27           jump @60 if a0 >u 128
      :                          @58
   821: 9a 9b 81 00              a4 = 0x81 - a2
   825: 64 1a                    a3 = sp
   827: c8 7a 0a                 a3 = a3 + a0
   830: 33 09 02                 a2 = 0x2
   833: 64 87                    a0 = a1
   835: 33 08 46 10 01           a1 = 0x11046
   840: 50 10 18 58 3d           ra = 24, jump @894
      :                          @59 [@dyn 12]
   845: 82 10 80 00              ra = u64 [sp + 0x80]
   849: 95 11 88 00              sp = sp + 0x88
   853: 32 00                    ret
      :                          @60
   855: 00                       trap
      :                          @61 [@dyn 13]
   856: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   859: 7b 10 28                 u64 [sp + 0x28] = ra
   862: 7b 15 20                 u64 [sp + 0x20] = s0
   865: 7b 16 18                 u64 [sp + 0x18] = s1
   868: 64 85                    s0 = a1
   870: 82 88 28                 a1 = u64 [a1 + 0x28]
   873: 82 5a 20                 a3 = u64 [s0 + 0x20]
   876: 82 8b 18                 a4 = u64 [a1 + 0x18]
   879: 64 76                    s1 = a0
   881: 33 08 f0 0f 01           a1 = 0x10ff0
   886: 33 09 01                 a2 = 0x1
   889: 64 a7                    a0 = a3
   891: b4 b0 01 1c              ra = 28, jump [a4]
      :                          @62 [@dyn 14]
   895: 7b 15                    u64 [sp] = s0
   897: 78 17 08                 u8 [sp + 0x8] = a0
   900: 46 11 09                 u8 [sp + 9] = 0
   903: 7b 16 10                 u64 [sp + 0x10] = s1
   906: 33 05 0a                 s0 = 0xa
   909: 64 17                    a0 = sp
   911: 95 18 10                 a1 = sp + 0x10
   914: 33 09 0a                 a2 = 0xa
   917: 50 10 1e ee 43           ra = 30, jump @1038
      :                          @63 [@dyn 15]
   922: 95 67 08                 a0 = s1 + 0x8
   925: 7b 17 10                 u64 [sp + 0x10] = a0
   928: 64 17                    a0 = sp
   930: 95 18 10                 a1 = sp + 0x10
   933: 64 59                    a2 = s0
   935: 50 10 20 dc 43           ra = 32, jump @1038
      :                          @64 [@dyn 16]
   940: 95 67 10                 a0 = s1 + 0x10
   943: 7b 17 10                 u64 [sp + 0x10] = a0
   946: 64 17                    a0 = sp
   948: 95 18 10                 a1 = sp + 0x10
   951: 64 59                    a2 = s0
   953: 50 10 22 ca 43           ra = 34, jump @1038
      :                          @65 [@dyn 17]
   958: 95 67 18                 a0 = s1 + 0x18
   961: 7b 17 10                 u64 [sp + 0x10] = a0
   964: 64 17                    a0 = sp
   966: 95 18 10                 a1 = sp + 0x10
   969: 64 59                    a2 = s0
   971: 50 10 24 b8 43           ra = 36, jump @1038
      :                          @66 [@dyn 18]
   976: 95 67 20                 a0 = s1 + 0x20
   979: 7b 17 10                 u64 [sp + 0x10] = a0
   982: 64 17                    a0 = sp
   984: 95 18 10                 a1 = sp + 0x10
   987: 64 59                    a2 = s0
   989: 50 10 26 a6 43           ra = 38, jump @1038
      :                          @67 [@dyn 19]
   994: 95 67 28                 a0 = s1 + 0x28
   997: 7b 17 10                 u64 [sp + 0x10] = a0
  1000: 64 17                    a0 = sp
  1002: 95 18 10                 a1 = sp + 0x10
  1005: 64 59                    a2 = s0
  1007: 50 10 28 94 43           ra = 40, jump @1038
      :                          @68 [@dyn 20]
  1012: 95 67 30                 a0 = s1 + 0x30
  1015: 7b 17 10                 u64 [sp + 0x10] = a0
  1018: 64 17                    a0 = sp
  1020: 95 18 10                 a1 = sp + 0x10
  1023: 64 59                    a2 = s0
  1025: 50 10 2a 82 43           ra = 42, jump @1038
      :                          @69 [@dyn 21]
  1030: 95 67 38                 a0 = s1 + 0x38
  1033: 7b 17 10                 u64 [sp + 0x10] = a0
  1036: 64 17                    a0 = sp
  1038: 95 18 10                 a1 = sp + 0x10
  1041: 64 59                    a2 = s0
  1043: 50 10 2c 70 43           ra = 44, jump @1038
      :                          @70 [@dyn 22]
  1048: 95 67 40                 a0 = s1 + 0x40
  1051: 7b 17 10                 u64 [sp + 0x10] = a0
  1054: 64 17                    a0 = sp
  1056: 95 18 10                 a1 = sp + 0x10
  1059: 64 59                    a2 = s0
  1061: 50 10 2e 5e 43           ra = 46, jump @1038
      :                          @71 [@dyn 23]
  1066: 95 67 48                 a0 = s1 + 0x48
  1069: 7b 17 10                 u64 [sp + 0x10] = a0
  1072: 64 17                    a0 = sp
  1074: 95 18 10                 a1 = sp + 0x10
  1077: 64 59                    a2 = s0
  1079: 50 10 30 4c 43           ra = 48, jump @1038
      :                          @72 [@dyn 24]
  1084: 95 67 50                 a0 = s1 + 0x50
  1087: 7b 17 10                 u64 [sp + 0x10] = a0
  1090: 64 17                    a0 = sp
  1092: 95 18 10                 a1 = sp + 0x10
  1095: 64 59                    a2 = s0
  1097: 50 10 32 3a 43           ra = 50, jump @1038
      :                          @73 [@dyn 25]
  1102: 95 67 58                 a0 = s1 + 0x58
  1105: 7b 17 10                 u64 [sp + 0x10] = a0
  1108: 64 17                    a0 = sp
  1110: 95 18 10                 a1 = sp + 0x10
  1113: 64 59                    a2 = s0
  1115: 50 10 34 28 43           ra = 52, jump @1038
      :                          @74 [@dyn 26]
  1120: 95 67 60                 a0 = s1 + 0x60
  1123: 7b 17 10                 u64 [sp + 0x10] = a0
  1126: 64 17                    a0 = sp
  1128: 95 18 10                 a1 = sp + 0x10
  1131: 64 59                    a2 = s0
  1133: 50 10 36 16 43           ra = 54, jump @1038
      :                          @75 [@dyn 27]
  1138: 33 07 01                 a0 = 0x1
  1141: 7c 18 08                 a1 = u8 [sp + 0x8]
  1144: 52 08 1a                 jump @77 if a1 != 0
      :                          @76
  1147: 82 17                    a0 = u64 [sp]
  1149: 82 78 28                 a1 = u64 [a0 + 0x28]
  1152: 82 77 20                 a0 = u64 [a0 + 0x20]
  1155: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1158: 33 08 45 10 01           a1 = 0x11045
  1163: 33 09 01                 a2 = 0x1
  1166: b4 a0 01 38              ra = 56, jump [a3]
      :                          @77 [@dyn 28]
  1170: 82 10 28                 ra = u64 [sp + 0x28]
  1173: 82 15 20                 s0 = u64 [sp + 0x20]
  1176: 82 16 18                 s1 = u64 [sp + 0x18]
  1179: 95 11 30                 sp = sp + 0x30
  1182: 32 00                    ret
      :                          @78 [export #0: 'refine']
  1184: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1188: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1192: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1196: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1200: 95 11 38 d4              sp = sp + 0xffffffffffffd438
  1204: 64 86                    s1 = a1
  1206: 64 7a                    a3 = a0
  1208: 33 07 00 00 01           a0 = 0x10000
  1213: 53 16 04 cd 00           jump @102 if s1 <u 4
      :                          @79
  1218: 7d a8                    a1 = i8 [a3]
  1220: 33 05 01                 s0 = 0x1
  1223: 59 08 37                 jump @86 if a1 >=s 0
      :                          @80
  1226: 84 89 ff 00              a2 = a1 & 0xff
  1230: 33 05 02                 s0 = 0x2
  1233: 53 29 c0 00 2d           jump @86 if a2 <u 192
      :                          @81
  1238: 33 05 03                 s0 = 0x3
  1241: 53 29 e0 00 25           jump @86 if a2 <u 224
      :                          @82
  1246: 33 05 04                 s0 = 0x4
  1249: 53 29 f0 00 1d           jump @86 if a2 <u 240
      :                          @83
  1254: 33 05 05                 s0 = 0x5
  1257: 53 29 f8 00 15           jump @86 if a2 <u 248
      :                          @84
  1262: 33 05 06                 s0 = 0x6
  1265: 53 29 fc 00 0d           jump @86 if a2 <u 252
      :                          @85
  1270: 88 98 fe 00              a1 = a2 <u 0xfe
  1274: 9a 85 08                 s0 = 0x8 - a1
  1277: 01                       fallthrough
      :                          @86
  1278: ac 56 8c 00              jump @102 if s1 <u s0
      :                          @87
  1282: 64 a7                    a0 = a3
  1284: 64 58                    a1 = s0
  1286: 7b 1a 88 00              u64 [sp + 0x88] = a3
  1290: 50 10 3a b8 43           ra = 58, jump @1055
      :                          @88 [@dyn 29]
  1295: 7b 17 80 00              u64 [sp + 0x80] = a0
  1299: ab 56 09                 jump @90 if s1 != s0
      :                          @89
  1302: 33 08                    a1 = 0
  1304: 33 05                    s0 = 0
  1306: 28 61                    jump @101
      :                          @90
  1308: 82 17 88 00              a0 = u64 [sp + 0x88]
  1312: c8 57 07                 a0 = a0 + s0
  1315: 7d 78                    a1 = i8 [a0]
  1317: c9 56 05                 s0 = s1 - s0
  1320: 33 06 01                 s1 = 0x1
  1323: 59 08 37                 jump @97 if a1 >=s 0
      :                          @91
  1326: 84 88 ff 00              a1 = a1 & 0xff
  1330: 33 06 02                 s1 = 0x2
  1333: 53 28 c0 00 2d           jump @97 if a1 <u 192
      :                          @92
  1338: 33 06 03                 s1 = 0x3
  1341: 53 28 e0 00 25           jump @97 if a1 <u 224
      :                          @93
  1346: 33 06 04                 s1 = 0x4
  1349: 53 28 f0 00 1d           jump @97 if a1 <u 240
      :                          @94
  1354: 33 06 05                 s1 = 0x5
  1357: 53 28 f8 00 15           jump @97 if a1 <u 248
      :                          @95
  1362: 33 06 06                 s1 = 0x6
  1365: 53 28 fc 00 0d           jump @97 if a1 <u 252
      :                          @96
  1370: 88 88 fe 00              a1 = a1 <u 0xfe
  1374: 9a 86 08                 s1 = 0x8 - a1
  1377: 01                       fallthrough
      :                          @97
  1378: ae 65 06                 jump @99 if s0 >=u s1
      :                          @98
  1381: 28 0d 10                 jump @272
      :                          @99
  1384: 64 68                    a1 = s1
  1386: 50 10 3c 58 43           ra = 60, jump @1055
      :                          @100 [@dyn 30]
  1391: e4 65 08                 a1 = maxu(s0, s1)
  1394: c9 68 08                 a1 = a1 - s1
  1397: 64 75                    s0 = a0
  1399: ac 78 95 00              jump @109 if a1 <u a0
      :                          @101
  1403: e4 58 07                 a0 = maxu(a1, s0)
  1406: c9 57 09                 a2 = a0 - s0
  1409: 33 07 00 00 01           a0 = 0x10000
  1414: 55 19 20 20              jump @104 if a2 >=u 32
      :                          @102
  1418: 33 08                    a1 = 0
  1420: 01                       fallthrough
      :                          @103
  1421: 33 09 c8 2b              a2 = 0x2bc8
  1425: c8 91 01                 sp = sp + a2
  1428: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1432: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1436: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1440: 95 11 f8 07              sp = sp + 0x7f8
  1444: 32 00                    ret
      :                          @104
  1446: 48 21 b0 00              u32 [sp + 176] = 0
  1450: 49 21 a8 00              u64 [sp + 168] = 0
  1454: 49 21 a0 00              u64 [sp + 160] = 0
  1458: 49 21 98 00              u64 [sp + 152] = 0
  1462: 49 21 90 00              u64 [sp + 144] = 0
  1466: 95 17 90 00              a0 = sp + 0x90
  1470: 33 09 24                 a2 = 0x24
  1473: 33 0a 03                 a3 = 0x3
  1476: 33 08                    a1 = 0
  1478: 33 0b                    a4 = 0
  1480: 33 0c                    a5 = 0
  1482: 0a 12                    ecalli 18 // 'fetch'
  1484: 01                       fallthrough
      :                          @105
  1485: 95 17 90 00              a0 = sp + 0x90
  1489: 33 08 24                 a1 = 0x24
  1492: 53 15 08 b9              jump @103 if s0 <u 8
      :                          @106
  1496: 95 17 b8 00              a0 = sp + 0xb8
  1500: 33 09 00 20              a2 = 0x2000
  1504: 33 08                    a1 = 0
  1506: 50 10 3e 37 39           ra = 62, jump @869
      :                          @107 [@dyn 31]
  1511: 82 17 80 00              a0 = u64 [sp + 0x80]
  1515: 97 77 20                 a0 = a0 << 0x20
  1518: 98 77 20                 a0 = a0 >> 0x20
  1521: 95 18 90 00              a1 = sp + 0x90
  1525: 95 19 b8 00              a2 = sp + 0xb8
  1529: 33 0b 00 20              a4 = 0x2000
  1533: 33 0a                    a3 = 0
  1535: 33 00 40                 ra = 0x40
  1538: 0a 11                    ecalli 17 // 'historical_lookup'
  1540: 01                       fallthrough
      :                          @108 [@dyn 32]
  1541: 95 78 01                 a1 = a0 + 0x1
  1544: 55 18 04 0e              jump @110 if a1 >=u 4
      :                          @109
  1548: 33 08                    a1 = 0
  1550: 33 07 00 00 01           a0 = 0x10000
  1555: 28 7a ff                 jump @103
      :                          @110
  1558: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1561: 53 18 03 f3              jump @109 if a1 <u 3
      :                          @111
  1565: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1568: 51 18 06 ec              jump @109 if a1 == 6
      :                          @112
  1572: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1575: 53 18 03 e5              jump @109 if a1 <u 3
      :                          @113
  1579: 7c 18 ba 00              a1 = u8 [sp + 0xba]
  1583: 7c 19 b9 00              a2 = u8 [sp + 0xb9]
  1587: 7c 1a b8 00              a3 = u8 [sp + 0xb8]
  1591: 97 88 10                 a1 = a1 << 0x10
  1594: 97 99 08                 a2 = a2 << 0x8
  1597: d4 98 08                 a1 = a1 | a2
  1600: d4 a8 08                 a1 = a1 | a3
  1603: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1606: ac 89 c6                 jump @109 if a2 <u a1
      :                          @114
  1609: 7c 17 bd 00              a0 = u8 [sp + 0xbd]
  1613: 7c 1a bc 00              a3 = u8 [sp + 0xbc]
  1617: 7c 1b bb 00              a4 = u8 [sp + 0xbb]
  1621: 97 77 10                 a0 = a0 << 0x10
  1624: 97 aa 08                 a3 = a3 << 0x8
  1627: d4 a7 07                 a0 = a0 | a3
  1630: d4 b7 07                 a0 = a0 | a4
  1633: c9 89 09                 a2 = a2 - a1
  1636: ac 79 a8                 jump @109 if a2 <u a0
      :                          @115
  1639: c9 79 06                 s1 = a2 - a0
  1642: 53 16 04 a2              jump @109 if s1 <u 4
      :                          @116
  1646: 95 12 c3 00              t0 = sp + 0xc3
  1650: c8 28 03                 t1 = a1 + t0
  1653: c8 37 0b                 a4 = a0 + t1
  1656: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1659: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1662: 7c ba                    a3 = u8 [a4]
  1664: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1667: 97 cc 10                 a5 = a5 << 0x10
  1670: 97 55 08                 s0 = s0 << 0x8
  1673: d4 5c 0c                 a5 = a5 | s0
  1676: d4 c9 09                 a2 = a2 | a5
  1679: 97 99 08                 a2 = a2 << 0x8
  1682: d4 a9 0c                 a5 = a2 | a3
  1685: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1688: ac c6 74 ff              jump @109 if s1 <u a5
      :                          @117
  1692: 7c 19 bf 00              a2 = u8 [sp + 0xbf]
  1696: 95 1a b8 20              a3 = sp + 0x20b8
  1700: 7c 14 be 00              t2 = u8 [sp + 0xbe]
  1704: 97 99 08                 a2 = a2 << 0x8
  1707: 7c 16 c2 00              s1 = u8 [sp + 0xc2]
  1711: 7c 15 c1 00              s0 = u8 [sp + 0xc1]
  1715: d4 49 04                 t2 = a2 | t2
  1718: 7c 19 c0 00              a2 = u8 [sp + 0xc0]
  1722: 97 66 10                 s1 = s1 << 0x10
  1725: 97 55 08                 s0 = s0 << 0x8
  1728: d4 65 05                 s0 = s0 | s1
  1731: d4 59 09                 a2 = a2 | s0
  1734: 33 05 ff ff ef           s0 = 0xffffffffffefffff
  1739: 7b 15 88 00              u64 [sp + 0x88] = s0
  1743: 95 bb 04                 a4 = a4 + 0x4
  1746: 7b a4                    u64 [a3] = t2
  1748: 7b a9 08                 u64 [a3 + 0x8] = a2
  1751: 7b a2 10                 u64 [a3 + 0x10] = t0
  1754: 7b a8 18                 u64 [a3 + 0x18] = a1
  1757: 7b a3 20                 u64 [a3 + 0x20] = t1
  1760: 7b a7 28                 u64 [a3 + 0x28] = a0
  1763: 7b ab 30                 u64 [a3 + 0x30] = a4
  1766: 7b ac 38                 u64 [a3 + 0x38] = a5
  1769: 7b aa 50                 u64 [a3 + 0x50] = a3
  1772: 33 08 16                 a1 = 0x16
  1775: 7b a8 58                 u64 [a3 + 0x58] = a1
  1778: 95 17 c0 20              a0 = sp + 0x20c0
  1782: 7b a7 60                 u64 [a3 + 0x60] = a0
  1785: 7b a8 68                 u64 [a3 + 0x68] = a1
  1788: 95 17 c8 20              a0 = sp + 0x20c8
  1792: 7b a7 70                 u64 [a3 + 0x70] = a0
  1795: 7b a8 78                 u64 [a3 + 0x78] = a1
  1798: 95 17 d0 20              a0 = sp + 0x20d0
  1802: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1806: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1810: 95 17 d8 20              a0 = sp + 0x20d8
  1814: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1818: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1822: 95 17 e0 20              a0 = sp + 0x20e0
  1826: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1830: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1834: 95 17 e8 20              a0 = sp + 0x20e8
  1838: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1842: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1846: 95 17 f0 20              a0 = sp + 0x20f0
  1850: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1854: 7b 18 80 00              u64 [sp + 0x80] = a1
  1858: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1862: 33 07 00 01 01           a0 = 0x10100
  1867: 95 16 10 31              s1 = sp + 0x3110
  1871: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1875: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1880: 49 26 68 01              u64 [s1 + 360] = 0
  1884: 95 18 08 21              a1 = sp + 0x2108
  1888: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1892: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1897: 95 17 a0 31              a0 = sp + 0x31a0
  1901: 95 18 58 32              a1 = sp + 0x3258
  1905: 50 10 42 7b 34           ra = 66, jump @802
      :                          @118 [@dyn 33]
  1910: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1914: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1918: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1922: 33 07 03                 a0 = 0x3
  1925: 33 08                    a1 = 0
  1927: 33 09                    a2 = 0
  1929: 64 5a                    a3 = s0
  1931: 33 00 44                 ra = 0x44
  1934: 0a 64                    ecalli 100 // 'log'
  1936: 01                       fallthrough
      :                          @119 [@dyn 34]
  1937: 82 17 88 00              a0 = u64 [sp + 0x88]
  1941: c8 67 07                 a0 = a0 + s1
  1944: 53 37 00 00 f0 27        jump @125 if a0 <u 4293918720
      :                          @120
  1950: 33 07 50 00 03           a0 = 0x30050
  1955: 95 77 00 00 10           a0 = a0 + 0x100000
  1960: 01                       fallthrough
      :                          @121
  1961: 82 78                    a1 = u64 [a0]
  1963: c9 87 09                 a2 = a0 - a1
  1966: ab 59 11                 jump @125 if a2 != s0
      :                          @122
  1969: c9 68 09                 a2 = a1 - s1
  1972: 01                       fallthrough
      :                          @123
  1973: 82 7a                    a3 = u64 [a0]
  1975: ab 8a f2                 jump @121 if a3 != a1
      :                          @124
  1978: 7b 79                    u64 [a0] = a2
  1980: 0a                       ecalli 0 // 'gas'
  1981: 28 04                    jump @126
      :                          @125
  1983: 0a                       ecalli 0 // 'gas'
  1984: 01                       fallthrough
      :                          @126
  1985: 95 18 b8 20              a1 = sp + 0x20b8
  1989: 7b 87 40                 u64 [a1 + 0x40] = a0
  1992: 95 17 f8 20              a0 = sp + 0x20f8
  1996: 95 16 10 31              s1 = sp + 0x3110
  2000: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2004: 82 17 80 00              a0 = u64 [sp + 0x80]
  2008: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2012: 33 07 90 01 01           a0 = 0x10190
  2017: 7b 87 50                 u64 [a1 + 0x50] = a0
  2020: 95 17 a0 31              a0 = sp + 0x31a0
  2024: 7b 87 60                 u64 [a1 + 0x60] = a0
  2027: 49 18 58 01              u64 [a1 + 88] = 0x1
  2031: 49 18 70                 u64 [a1 + 112] = 0
  2034: 49 18 68 01              u64 [a1 + 104] = 0x1
  2038: 95 17 58 32              a0 = sp + 0x3258
  2042: 95 18 08 21              a1 = sp + 0x2108
  2046: 50 10 46 ee 33           ra = 70, jump @802
      :                          @127 [@dyn 35]
  2051: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2055: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2059: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2063: 33 07 04                 a0 = 0x4
  2066: 33 08                    a1 = 0
  2068: 33 09                    a2 = 0
  2070: 64 5a                    a3 = s0
  2072: 33 00 48                 ra = 0x48
  2075: 0a 64                    ecalli 100 // 'log'
  2077: 01                       fallthrough
      :                          @128 [@dyn 36]
  2078: 82 17 88 00              a0 = u64 [sp + 0x88]
  2082: c8 67 07                 a0 = a0 + s1
  2085: 53 37 00 00 f0 25        jump @134 if a0 <u 4293918720
      :                          @129
  2091: 33 07 50 00 03           a0 = 0x30050
  2096: 95 77 00 00 10           a0 = a0 + 0x100000
  2101: 01                       fallthrough
      :                          @130
  2102: 82 78                    a1 = u64 [a0]
  2104: c9 87 09                 a2 = a0 - a1
  2107: ab 59 0f                 jump @134 if a2 != s0
      :                          @131
  2110: c9 68 09                 a2 = a1 - s1
  2113: 01                       fallthrough
      :                          @132
  2114: 82 7a                    a3 = u64 [a0]
  2116: ab 8a f2                 jump @130 if a3 != a1
      :                          @133
  2119: 7b 79                    u64 [a0] = a2
  2121: 01                       fallthrough
      :                          @134
  2122: 95 15 b8 20              s0 = sp + 0x20b8
  2126: 82 57 30                 a0 = u64 [s0 + 0x30]
  2129: 82 58 38                 a1 = u64 [s0 + 0x38]
  2132: 33 09                    a2 = 0
  2134: 0a 14                    ecalli 20 // 'machine'
  2136: 7b 57 48                 u64 [s0 + 0x48] = a0
  2139: 95 17 00 21              a0 = sp + 0x2100
  2143: 95 16 10 31              s1 = sp + 0x3110
  2147: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2151: 33 07 16                 a0 = 0x16
  2154: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2158: 33 07 b8 01 01           a0 = 0x101b8
  2163: 7b 57 50                 u64 [s0 + 0x50] = a0
  2166: 95 17 a0 31              a0 = sp + 0x31a0
  2170: 7b 57 60                 u64 [s0 + 0x60] = a0
  2173: 49 15 58 01              u64 [s0 + 88] = 0x1
  2177: 49 15 68 01              u64 [s0 + 104] = 0x1
  2181: 14 07 ff ff ff ff 00 00 00 00 a0 = 0xffffffff
  2191: 7b 17 80 00              u64 [sp + 0x80] = a0
  2195: 49 15 70                 u64 [s0 + 112] = 0
  2198: 95 17 58 32              a0 = sp + 0x3258
  2202: 95 18 08 21              a1 = sp + 0x2108
  2206: 50 10 4a 4e 33           ra = 74, jump @802
      :                          @135 [@dyn 37]
  2211: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2215: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2219: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2223: 33 07 03                 a0 = 0x3
  2226: 33 08                    a1 = 0
  2228: 33 09                    a2 = 0
  2230: 64 5a                    a3 = s0
  2232: 33 00 4c                 ra = 0x4c
  2235: 0a 64                    ecalli 100 // 'log'
  2237: 01                       fallthrough
      :                          @136 [@dyn 38]
  2238: 82 17 88 00              a0 = u64 [sp + 0x88]
  2242: c8 67 07                 a0 = a0 + s1
  2245: 53 37 00 00 f0 25        jump @142 if a0 <u 4293918720
      :                          @137
  2251: 33 07 50 00 03           a0 = 0x30050
  2256: 95 77 00 00 10           a0 = a0 + 0x100000
  2261: 01                       fallthrough
      :                          @138
  2262: 82 78                    a1 = u64 [a0]
  2264: c9 87 09                 a2 = a0 - a1
  2267: ab 59 0f                 jump @142 if a2 != s0
      :                          @139
  2270: c9 68 09                 a2 = a1 - s1
  2273: 01                       fallthrough
      :                          @140
  2274: 82 7a                    a3 = u64 [a0]
  2276: ab 8a f2                 jump @138 if a3 != a1
      :                          @141
  2279: 7b 79                    u64 [a0] = a2
  2281: 01                       fallthrough
      :                          @142
  2282: 95 18 b8 20              a1 = sp + 0x20b8
  2286: 82 87                    a0 = u64 [a1]
  2288: 7b 17 68                 u64 [sp + 0x68] = a0
  2291: 82 87 08                 a0 = u64 [a1 + 0x8]
  2294: 7b 17 60                 u64 [sp + 0x60] = a0
  2297: 82 87 10                 a0 = u64 [a1 + 0x10]
  2300: 7b 17 58                 u64 [sp + 0x58] = a0
  2303: 82 89 18                 a2 = u64 [a1 + 0x18]
  2306: 82 87 20                 a0 = u64 [a1 + 0x20]
  2309: 7b 17 50                 u64 [sp + 0x50] = a0
  2312: 82 87 48                 a0 = u64 [a1 + 0x48]
  2315: 82 88 28                 a1 = u64 [a1 + 0x28]
  2318: 7b 18 70                 u64 [sp + 0x70] = a1
  2321: 7b 19 78                 u64 [sp + 0x78] = a2
  2324: 95 99 ff 0f              a2 = a2 + 0xfff
  2328: 98 99 0c                 a2 = a2 >> 0xc
  2331: 82 16 80 00              s1 = u64 [sp + 0x80]
  2335: d2 76 06                 s1 = s1 & a0
  2338: 33 08 10                 a1 = 0x10
  2341: 64 67                    a0 = s1
  2343: 0a 17                    ecalli 23 // 'zero'
  2345: 01                       fallthrough
      :                          @143
  2346: 51 07 17                 jump @145 if a0 == 0
      :                          @144
  2349: 33 0a 34 12 01           a3 = 0x11234
  2354: 33 07 02                 a0 = 0x2
  2357: 33 0b 3e                 a4 = 0x3e
  2360: 33 08                    a1 = 0
  2362: 33 09                    a2 = 0
  2364: 0a 64                    ecalli 100 // 'log'
  2366: 28 de 00                 jump @158
      :                          @145
  2369: 82 17 70                 a0 = u64 [sp + 0x70]
  2372: 95 77 ff 0f              a0 = a0 + 0xfff
  2376: 98 77 0c                 a0 = a0 >> 0xc
  2379: 82 19 68                 a2 = u64 [sp + 0x68]
  2382: c8 79 09                 a2 = a2 + a0
  2385: 82 18 78                 a1 = u64 [sp + 0x78]
  2388: 95 87 ff ff 00           a0 = a1 + 0xffff
  2393: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2398: 95 77 00 00 02           a0 = a0 + 0x20000
  2403: 7b 17 80 00              u64 [sp + 0x80] = a0
  2407: 98 78 0c                 a1 = a0 >> 0xc
  2410: 64 67                    a0 = s1
  2412: 0a 17                    ecalli 23 // 'zero'
  2414: 01                       fallthrough
      :                          @146
  2415: 51 07 17                 jump @148 if a0 == 0
      :                          @147
  2418: 33 0a f6 11 01           a3 = 0x111f6
  2423: 33 07 02                 a0 = 0x2
  2426: 33 0b 3e                 a4 = 0x3e
  2429: 33 08                    a1 = 0
  2431: 33 09                    a2 = 0
  2433: 0a 64                    ecalli 100 // 'log'
  2435: 28 99 00                 jump @158
      :                          @148
  2438: 82 17 60                 a0 = u64 [sp + 0x60]
  2441: 95 75 ff 0f              s0 = a0 + 0xfff
  2445: 98 59 0c                 a2 = s0 >> 0xc
  2448: 84 57 00 f0              a0 = s0 & 0xfffffffffffff000
  2452: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2462: c9 78 08                 a1 = a1 - a0
  2465: 98 88 0c                 a1 = a1 >> 0xc
  2468: 64 67                    a0 = s1
  2470: 0a 17                    ecalli 23 // 'zero'
  2472: 01                       fallthrough
      :                          @149
  2473: 51 07 16                 jump @151 if a0 == 0
      :                          @150
  2476: 33 0a ba 11 01           a3 = 0x111ba
  2481: 33 07 02                 a0 = 0x2
  2484: 33 0b 3c                 a4 = 0x3c
  2487: 33 08                    a1 = 0
  2489: 33 09                    a2 = 0
  2491: 0a 64                    ecalli 100 // 'log'
  2493: 28 5f                    jump @158
      :                          @151
  2495: 33 09 00 00 01           a2 = 0x10000
  2500: 64 67                    a0 = s1
  2502: 82 18 58                 a1 = u64 [sp + 0x58]
  2505: 82 1a 78                 a3 = u64 [sp + 0x78]
  2508: 0a 16                    ecalli 22 // 'poke'
  2510: 01                       fallthrough
      :                          @152
  2511: 51 07 16                 jump @154 if a0 == 0
      :                          @153
  2514: 33 0a 7c 11 01           a3 = 0x1117c
  2519: 33 07 02                 a0 = 0x2
  2522: 33 0b 3e                 a4 = 0x3e
  2525: 33 08                    a1 = 0
  2527: 33 09                    a2 = 0
  2529: 0a 64                    ecalli 100 // 'log'
  2531: 28 39                    jump @158
      :                          @154
  2533: 64 67                    a0 = s1
  2535: 82 18 50                 a1 = u64 [sp + 0x50]
  2538: 82 19 80 00              a2 = u64 [sp + 0x80]
  2542: 82 1a 70                 a3 = u64 [sp + 0x70]
  2545: 0a 16                    ecalli 22 // 'poke'
  2547: 01                       fallthrough
      :                          @155
  2548: 51 07 16                 jump @157 if a0 == 0
      :                          @156
  2551: 33 0a 3e 11 01           a3 = 0x1113e
  2556: 33 07 02                 a0 = 0x2
  2559: 33 0b 3e                 a4 = 0x3e
  2562: 33 08                    a1 = 0
  2564: 33 09                    a2 = 0
  2566: 0a 64                    ecalli 100 // 'log'
  2568: 28 14                    jump @158
      :                          @157
  2570: 33 0a 10 11 01           a3 = 0x11110
  2575: 33 07 02                 a0 = 0x2
  2578: 33 0b 2e                 a4 = 0x2e
  2581: 33 08                    a1 = 0
  2583: 33 09                    a2 = 0
  2585: 0a 64                    ecalli 100 // 'log'
  2587: 01                       fallthrough
      :                          @158
  2588: 33 05 08 10              s0 = 0x1008
  2592: 95 17 08 21              a0 = sp + 0x2108
  2596: 33 08                    a1 = 0
  2598: 33 09 08 10              a2 = 0x1008
  2602: 50 10 4e ef 34           ra = 78, jump @869
      :                          @159 [@dyn 39]
  2607: 95 16 10 31              s1 = sp + 0x3110
  2611: 49 06                    u64 [s1 + 0] = 0
  2613: 95 17 10 21              a0 = sp + 0x2110
  2617: 7b 67 08                 u64 [s1 + 0x8] = a0
  2620: 49 16 10                 u64 [s1 + 16] = 0
  2623: 49 16 18                 u64 [s1 + 24] = 0
  2626: 95 17 08 21              a0 = sp + 0x2108
  2630: 33 0a 06                 a3 = 0x6
  2633: 33 08                    a1 = 0
  2635: 7b 15 70                 u64 [sp + 0x70] = s0
  2638: 64 59                    a2 = s0
  2640: 33 0b                    a4 = 0
  2642: 33 0c                    a5 = 0
  2644: 0a 12                    ecalli 18 // 'fetch'
  2646: 01                       fallthrough
      :                          @160
  2647: 7b 67 58 02              u64 [s1 + 0x258] = a0
  2651: 51 17 ff 78 02           jump @187 if a0 == 4294967295
      :                          @161
  2656: 33 07 16                 a0 = 0x16
  2659: 7b 17 80 00              u64 [sp + 0x80] = a0
  2663: 33 07 f0 01 01           a0 = 0x101f0
  2668: 7b 17 68                 u64 [sp + 0x68] = a0
  2671: 33 07 30 02 01           a0 = 0x10230
  2676: 7b 17 60                 u64 [sp + 0x60] = a0
  2679: 33 07 28 00 01           a0 = 0x10028
  2684: 7b 17 58                 u64 [sp + 0x58] = a0
  2687: 33 05 50 00 03           s0 = 0x30050
  2692: 95 55 00 00 10           s0 = s0 + 0x100000
  2697: 33 07 80 02 01           a0 = 0x10280
  2702: 7b 17 50                 u64 [sp + 0x50] = a0
  2705: 28 27                    jump @164
      :                          @162
  2707: 95 16 10 31              s1 = sp + 0x3110
  2711: 82 6b                    a4 = u64 [s1]
  2713: 95 bb 01                 a4 = a4 + 0x1
  2716: 7b 6b                    u64 [s1] = a4
  2718: 95 17 08 21              a0 = sp + 0x2108
  2722: 33 0a 06                 a3 = 0x6
  2725: 33 08                    a1 = 0
  2727: 82 19 70                 a2 = u64 [sp + 0x70]
  2730: 33 0c                    a5 = 0
  2732: 0a 12                    ecalli 18 // 'fetch'
  2734: 01                       fallthrough
      :                          @163
  2735: 7b 67 58 02              u64 [s1 + 0x258] = a0
  2739: 51 17 ff 20 02           jump @187 if a0 == 4294967295
      :                          @164
  2744: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2748: 82 17 80 00              a0 = u64 [sp + 0x80]
  2752: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2756: 95 18 68 33              a1 = sp + 0x3368
  2760: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2764: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2768: 82 17 68                 a0 = u64 [sp + 0x68]
  2771: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2775: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2780: 49 26 68 01              u64 [s1 + 360] = 0
  2784: 95 18 a0 31              a1 = sp + 0x31a0
  2788: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2792: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2797: 95 17 38 31              a0 = sp + 0x3138
  2801: 95 18 58 32              a1 = sp + 0x3258
  2805: 50 10 50 f7 30           ra = 80, jump @802
      :                          @165 [@dyn 40]
  2810: 95 17 10 31              a0 = sp + 0x3110
  2814: 82 76 30                 s1 = u64 [a0 + 0x30]
  2817: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2820: 82 77 28                 a0 = u64 [a0 + 0x28]
  2823: 7b 17 78                 u64 [sp + 0x78] = a0
  2826: 33 07 04                 a0 = 0x4
  2829: 33 08                    a1 = 0
  2831: 33 09                    a2 = 0
  2833: 64 6a                    a3 = s1
  2835: 33 00 52                 ra = 0x52
  2838: 0a 64                    ecalli 100 // 'log'
  2840: 01                       fallthrough
      :                          @166 [@dyn 41]
  2841: 82 1b 78                 a4 = u64 [sp + 0x78]
  2844: 82 17 88 00              a0 = u64 [sp + 0x88]
  2848: c8 b7 07                 a0 = a0 + a4
  2851: 53 37 00 00 f0 1a        jump @171 if a0 <u 4293918720
      :                          @167
  2857: 82 57                    a0 = u64 [s0]
  2859: c9 75 08                 a1 = s0 - a0
  2862: ab 68 0f                 jump @171 if a1 != s1
      :                          @168
  2865: c9 b7 08                 a1 = a0 - a4
  2868: 01                       fallthrough
      :                          @169
  2869: 82 59                    a2 = u64 [s0]
  2871: ab 79 f2                 jump @167 if a2 != a0
      :                          @170
  2874: 7b 58                    u64 [s0] = a1
  2876: 01                       fallthrough
      :                          @171
  2877: 95 18 b8 20              a1 = sp + 0x20b8
  2881: 80 87 50                 a0 = u32 [a1 + 0x50]
  2884: 80 88 54                 a1 = u32 [a1 + 0x54]
  2887: 95 19 10 31              a2 = sp + 0x3110
  2891: 7b 97 10                 u64 [a2 + 0x10] = a0
  2894: 7b 98 18                 u64 [a2 + 0x18] = a1
  2897: 33 09 01                 a2 = 0x1
  2900: 0a 17                    ecalli 23 // 'zero'
  2902: 95 19 10 31              a2 = sp + 0x3110
  2906: 7b 97 60 02              u64 [a2 + 0x260] = a0
  2910: 95 17 20 31              a0 = sp + 0x3120
  2914: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2918: 82 17 80 00              a0 = u64 [sp + 0x80]
  2922: 7b 97 50 01              u64 [a2 + 0x150] = a0
  2926: 95 18 28 31              a1 = sp + 0x3128
  2930: 7b 98 58 01              u64 [a2 + 0x158] = a1
  2934: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2938: 95 18 70 33              a1 = sp + 0x3370
  2942: 7b 98 68 01              u64 [a2 + 0x168] = a1
  2946: 7b 97 70 01              u64 [a2 + 0x170] = a0
  2950: 82 17 60                 a0 = u64 [sp + 0x60]
  2953: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2957: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  2962: 49 29 b0 00              u64 [a2 + 176] = 0
  2966: 95 17 58 32              a0 = sp + 0x3258
  2970: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2974: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  2979: 95 17 38 31              a0 = sp + 0x3138
  2983: 95 18 a0 31              a1 = sp + 0x31a0
  2987: 50 10 54 41 30           ra = 84, jump @802
      :                          @172 [@dyn 42]
  2992: 95 17 10 31              a0 = sp + 0x3110
  2996: 82 76 30                 s1 = u64 [a0 + 0x30]
  2999: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3002: 82 77 28                 a0 = u64 [a0 + 0x28]
  3005: 7b 17 78                 u64 [sp + 0x78] = a0
  3008: 33 07 04                 a0 = 0x4
  3011: 33 08                    a1 = 0
  3013: 33 09                    a2 = 0
  3015: 64 6a                    a3 = s1
  3017: 33 00 56                 ra = 0x56
  3020: 0a 64                    ecalli 100 // 'log'
  3022: 01                       fallthrough
      :                          @173 [@dyn 43]
  3023: 82 1b 78                 a4 = u64 [sp + 0x78]
  3026: 82 17 88 00              a0 = u64 [sp + 0x88]
  3030: c8 b7 07                 a0 = a0 + a4
  3033: 53 37 00 00 f0 1a        jump @178 if a0 <u 4293918720
      :                          @174
  3039: 82 57                    a0 = u64 [s0]
  3041: c9 75 08                 a1 = s0 - a0
  3044: ab 68 0f                 jump @178 if a1 != s1
      :                          @175
  3047: c9 b7 08                 a1 = a0 - a4
  3050: 01                       fallthrough
      :                          @176
  3051: 82 59                    a2 = u64 [s0]
  3053: ab 79 f2                 jump @174 if a2 != a0
      :                          @177
  3056: 7b 58                    u64 [s0] = a1
  3058: 01                       fallthrough
      :                          @178
  3059: 95 1b 10 31              a4 = sp + 0x3110
  3063: 82 b9 18                 a2 = u64 [a4 + 0x18]
  3066: 82 b7 10                 a0 = u64 [a4 + 0x10]
  3069: 82 b8 08                 a1 = u64 [a4 + 0x8]
  3072: 95 1a 08 21              a3 = sp + 0x2108
  3076: 7b ba 70 02              u64 [a4 + 0x270] = a3
  3080: 97 99 0c                 a2 = a2 << 0xc
  3083: 7b b9 80 02              u64 [a4 + 0x280] = a2
  3087: 33 0a 00 10              a3 = 0x1000
  3091: 0a 16                    ecalli 22 // 'poke'
  3093: 95 19 10 31              a2 = sp + 0x3110
  3097: 7b 97 08 01              u64 [a2 + 0x108] = a0
  3101: 95 17 20 31              a0 = sp + 0x3120
  3105: 7b 97 48 01              u64 [a2 + 0x148] = a0
  3109: 82 17 80 00              a0 = u64 [sp + 0x80]
  3113: 7b 97 50 01              u64 [a2 + 0x150] = a0
  3117: 95 18 80 33              a1 = sp + 0x3380
  3121: 7b 98 58 01              u64 [a2 + 0x158] = a1
  3125: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3129: 95 18 90 33              a1 = sp + 0x3390
  3133: 7b 98 68 01              u64 [a2 + 0x168] = a1
  3137: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3141: 82 18 58                 a1 = u64 [sp + 0x58]
  3144: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3148: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3152: 95 18 18 32              a1 = sp + 0x3218
  3156: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3160: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3164: 82 17 50                 a0 = u64 [sp + 0x50]
  3167: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3171: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3176: 49 29 b0 00              u64 [a2 + 176] = 0
  3180: 95 17 58 32              a0 = sp + 0x3258
  3184: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3188: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3193: 95 17 38 31              a0 = sp + 0x3138
  3197: 95 18 a0 31              a1 = sp + 0x31a0
  3201: 50 10 58 6b 2f           ra = 88, jump @802
      :                          @179 [@dyn 44]
  3206: 95 17 10 31              a0 = sp + 0x3110
  3210: 82 76 30                 s1 = u64 [a0 + 0x30]
  3213: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3216: 82 77 28                 a0 = u64 [a0 + 0x28]
  3219: 7b 17 78                 u64 [sp + 0x78] = a0
  3222: 33 07 04                 a0 = 0x4
  3225: 33 08                    a1 = 0
  3227: 33 09                    a2 = 0
  3229: 64 6a                    a3 = s1
  3231: 33 00 5a                 ra = 0x5a
  3234: 0a 64                    ecalli 100 // 'log'
  3236: 01                       fallthrough
      :                          @180 [@dyn 45]
  3237: 82 1b 78                 a4 = u64 [sp + 0x78]
  3240: 82 17 88 00              a0 = u64 [sp + 0x88]
  3244: c8 b7 07                 a0 = a0 + a4
  3247: 53 37 00 00 f0 e4 fd     jump @162 if a0 <u 4293918720
      :                          @181
  3254: 82 57                    a0 = u64 [s0]
  3256: c9 75 08                 a1 = s0 - a0
  3259: ab 68 d8 fd              jump @162 if a1 != s1
      :                          @182
  3263: c9 b7 08                 a1 = a0 - a4
  3266: 01                       fallthrough
      :                          @183
  3267: 82 59                    a2 = u64 [s0]
  3269: ab 79 f1                 jump @181 if a2 != a0
      :                          @184
  3272: 7b 58                    u64 [s0] = a1
  3274: 33 0a                    a3 = 0
  3276: 01                       fallthrough
      :                          @185
  3277: ab 79 e9                 jump @181 if a2 != a0
      :                          @186
  3280: 28 c3 fd                 jump @162
      :                          @187
  3283: 82 69 18                 a2 = u64 [s1 + 0x18]
  3286: 95 9a 01                 a3 = a2 + 0x1
  3289: 33 08 f0 ef 0f           a1 = 0xfeff0
  3294: 82 67 10                 a0 = u64 [s1 + 0x10]
  3297: db 9a 08                 a1 = a3 if a2 != 0
  3300: 7b 68 18                 u64 [s1 + 0x18] = a1
  3303: 33 09 01                 a2 = 0x1
  3306: 0a 17                    ecalli 23 // 'zero'
  3308: 7b 67 20                 u64 [s1 + 0x20] = a0
  3311: 95 17 20 31              a0 = sp + 0x3120
  3315: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3319: 33 07 16                 a0 = 0x16
  3322: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3326: 95 18 28 31              a1 = sp + 0x3128
  3330: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3334: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3338: 95 18 30 31              a1 = sp + 0x3130
  3342: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3346: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3350: 33 07 e8 02 01           a0 = 0x102e8
  3355: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3359: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3364: 49 26 b0 00              u64 [s1 + 176] = 0
  3368: 95 18 58 32              a1 = sp + 0x3258
  3372: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  3376: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3381: 95 17 38 31              a0 = sp + 0x3138
  3385: 95 18 a0 31              a1 = sp + 0x31a0
  3389: 50 10 5c af 2e           ra = 92, jump @802
      :                          @188 [@dyn 46]
  3394: 82 65 30                 s0 = u64 [s1 + 0x30]
  3397: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3400: 82 66 28                 s1 = u64 [s1 + 0x28]
  3403: 33 07 04                 a0 = 0x4
  3406: 33 08                    a1 = 0
  3408: 33 09                    a2 = 0
  3410: 64 5a                    a3 = s0
  3412: 33 00 5e                 ra = 0x5e
  3415: 0a 64                    ecalli 100 // 'log'
  3417: 01                       fallthrough
      :                          @189 [@dyn 47]
  3418: 82 17 88 00              a0 = u64 [sp + 0x88]
  3422: c8 67 07                 a0 = a0 + s1
  3425: 53 37 00 00 f0 27        jump @195 if a0 <u 4293918720
      :                          @190
  3431: 33 07 50 00 03           a0 = 0x30050
  3436: 95 77 00 00 10           a0 = a0 + 0x100000
  3441: 01                       fallthrough
      :                          @191
  3442: 82 78                    a1 = u64 [a0]
  3444: c9 87 09                 a2 = a0 - a1
  3447: ab 59 11                 jump @195 if a2 != s0
      :                          @192
  3450: c9 68 09                 a2 = a1 - s1
  3453: 01                       fallthrough
      :                          @193
  3454: 82 7a                    a3 = u64 [a0]
  3456: ab 8a f2                 jump @191 if a3 != a1
      :                          @194
  3459: 7b 79                    u64 [a0] = a2
  3461: 33 0b                    a4 = 0
  3463: 01                       fallthrough
      :                          @195
  3464: 95 16 10 31              s1 = sp + 0x3110
  3468: 49 16 58                 u64 [s1 + 88] = 0
  3471: 49 16 50                 u64 [s1 + 80] = 0
  3474: 49 16 48                 u64 [s1 + 72] = 0
  3477: 49 16 40                 u64 [s1 + 64] = 0
  3480: 49 16 38                 u64 [s1 + 56] = 0
  3483: 49 16 70                 u64 [s1 + 112] = 0
  3486: 49 16 78                 u64 [s1 + 120] = 0
  3489: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3499: 7b 67 28                 u64 [s1 + 0x28] = a0
  3502: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3512: 7b 67 30                 u64 [s1 + 0x30] = a0
  3515: 82 67                    a0 = u64 [s1]
  3517: 49 26 80 00              u64 [s1 + 128] = 0
  3521: 49 26 88 00              u64 [s1 + 136] = 0
  3525: 49 16 68                 u64 [s1 + 104] = 0
  3528: 7b 67 60                 u64 [s1 + 0x60] = a0
  3531: 95 17 38 31              a0 = sp + 0x3138
  3535: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3539: 33 07 1a                 a0 = 0x1a
  3542: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3546: 33 07 38 03 01           a0 = 0x10338
  3551: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3555: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3560: 49 26 68 01              u64 [s1 + 360] = 0
  3564: 95 17 18 32              a0 = sp + 0x3218
  3568: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3572: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3577: 95 17 a0 31              a0 = sp + 0x31a0
  3581: 95 18 58 32              a1 = sp + 0x3258
  3585: 50 10 60 eb 2d           ra = 96, jump @802
      :                          @196 [@dyn 48]
  3590: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3594: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3598: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3602: 33 07 04                 a0 = 0x4
  3605: 33 08                    a1 = 0
  3607: 33 09                    a2 = 0
  3609: 64 5a                    a3 = s0
  3611: 33 00 62                 ra = 0x62
  3614: 0a 64                    ecalli 100 // 'log'
  3616: 01                       fallthrough
      :                          @197 [@dyn 49]
  3617: 82 17 88 00              a0 = u64 [sp + 0x88]
  3621: c8 67 07                 a0 = a0 + s1
  3624: 53 37 00 00 f0 25        jump @203 if a0 <u 4293918720
      :                          @198
  3630: 33 07 50 00 03           a0 = 0x30050
  3635: 95 77 00 00 10           a0 = a0 + 0x100000
  3640: 01                       fallthrough
      :                          @199
  3641: 82 78                    a1 = u64 [a0]
  3643: c9 87 09                 a2 = a0 - a1
  3646: ab 59 0f                 jump @203 if a2 != s0
      :                          @200
  3649: c9 68 09                 a2 = a1 - s1
  3652: 01                       fallthrough
      :                          @201
  3653: 82 7a                    a3 = u64 [a0]
  3655: ab 8a f2                 jump @199 if a3 != a1
      :                          @202
  3658: 7b 79                    u64 [a0] = a2
  3660: 01                       fallthrough
      :                          @203
  3661: 95 13 10 31              t1 = sp + 0x3110
  3665: 82 32 28                 t0 = u64 [t1 + 0x28]
  3668: 82 39 30                 a2 = u64 [t1 + 0x30]
  3671: 82 34 38                 t2 = u64 [t1 + 0x38]
  3674: 82 30 40                 ra = u64 [t1 + 0x40]
  3677: 82 3b 48                 a4 = u64 [t1 + 0x48]
  3680: 82 3c 50                 a5 = u64 [t1 + 0x50]
  3683: 82 36 58                 s1 = u64 [t1 + 0x58]
  3686: 82 35 60                 s0 = u64 [t1 + 0x60]
  3689: 49 23 90 00 00 00 01     u64 [t1 + 144] = 0x10000
  3696: 82 37 68                 a0 = u64 [t1 + 0x68]
  3699: 7b 32 98 00              u64 [t1 + 0x98] = t0
  3703: 82 38 70                 a1 = u64 [t1 + 0x70]
  3706: 7b 39 a0 00              u64 [t1 + 0xa0] = a2
  3710: 82 39 78                 a2 = u64 [t1 + 0x78]
  3713: 7b 34 a8 00              u64 [t1 + 0xa8] = t2
  3717: 82 3a 80 00              a3 = u64 [t1 + 0x80]
  3721: 7b 30 b0 00              u64 [t1 + 0xb0] = ra
  3725: 82 32 88 00              t0 = u64 [t1 + 0x88]
  3729: 7b 3b b8 00              u64 [t1 + 0xb8] = a4
  3733: 7b 3c c0 00              u64 [t1 + 0xc0] = a5
  3737: 7b 36 c8 00              u64 [t1 + 0xc8] = s1
  3741: 7b 35 d0 00              u64 [t1 + 0xd0] = s0
  3745: 95 15 10 31              s0 = sp + 0x3110
  3749: 7b 57 d8 00              u64 [s0 + 0xd8] = a0
  3753: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
  3757: 7b 59 e8 00              u64 [s0 + 0xe8] = a2
  3761: 7b 5a f0 00              u64 [s0 + 0xf0] = a3
  3765: 7b 52 f8 00              u64 [s0 + 0xf8] = t0
  3769: 33 07 16                 a0 = 0x16
  3772: 7b 17 70                 u64 [sp + 0x70] = a0
  3775: 33 07 68 03 01           a0 = 0x10368
  3780: 7b 17 68                 u64 [sp + 0x68] = a0
  3783: 33 06 50 00 03           s1 = 0x30050
  3788: 95 66 00 00 10           s1 = s1 + 0x100000
  3793: 01                       fallthrough
      :                          @204
  3794: 95 17 b8 20              a0 = sp + 0x20b8
  3798: 82 77 48                 a0 = u64 [a0 + 0x48]
  3801: 95 18 a0 31              a1 = sp + 0x31a0
  3805: 0a 19                    ecalli 25 // 'invoke'
  3807: 7b 18 78                 u64 [sp + 0x78] = a1
  3810: 7b 57 00 01              u64 [s0 + 0x100] = a0
  3814: 95 17 00 21              a0 = sp + 0x2100
  3818: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3822: 82 17 70                 a0 = u64 [sp + 0x70]
  3825: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3829: 95 18 10 32              a1 = sp + 0x3210
  3833: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3837: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3841: 95 18 f8 20              a1 = sp + 0x20f8
  3845: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3849: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3853: 82 17 68                 a0 = u64 [sp + 0x68]
  3856: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3860: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  3865: 49 25 28 01              u64 [s0 + 296] = 0
  3869: 95 17 58 32              a0 = sp + 0x3258
  3873: 7b 57 18 01              u64 [s0 + 0x118] = a0
  3877: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  3882: 95 17 90 33              a0 = sp + 0x3390
  3886: 95 18 18 32              a1 = sp + 0x3218
  3890: 50 10 64 ba 2c           ra = 100, jump @802
      :                          @205 [@dyn 50]
  3895: 95 17 10 31              a0 = sp + 0x3110
  3899: 82 75 88 02              s0 = u64 [a0 + 0x288]
  3903: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  3907: 82 77 80 02              a0 = u64 [a0 + 0x280]
  3911: 7b 17 80 00              u64 [sp + 0x80] = a0
  3915: 33 07 04                 a0 = 0x4
  3918: 33 08                    a1 = 0
  3920: 33 09                    a2 = 0
  3922: 64 5a                    a3 = s0
  3924: 33 00 66                 ra = 0x66
  3927: 0a 64                    ecalli 100 // 'log'
  3929: 01                       fallthrough
      :                          @206 [@dyn 51]
  3930: 82 1b 80 00              a4 = u64 [sp + 0x80]
  3934: 82 17 88 00              a0 = u64 [sp + 0x88]
  3938: c8 b7 07                 a0 = a0 + a4
  3941: 53 37 00 00 f0 1a        jump @211 if a0 <u 4293918720
      :                          @207
  3947: 82 67                    a0 = u64 [s1]
  3949: c9 76 08                 a1 = s1 - a0
  3952: ab 58 0f                 jump @211 if a1 != s0
      :                          @208
  3955: c9 b7 08                 a1 = a0 - a4
  3958: 01                       fallthrough
      :                          @209
  3959: 82 69                    a2 = u64 [s1]
  3961: ab 79 f2                 jump @207 if a2 != a0
      :                          @210
  3964: 7b 68                    u64 [s1] = a1
  3966: 01                       fallthrough
      :                          @211
  3967: 95 15 10 31              s0 = sp + 0x3110
  3971: 82 57 00 01              a0 = u64 [s0 + 0x100]
  3975: 51 07 b4 00              jump @216 if a0 == 0
      :                          @212
  3979: 85 77 03                 a0 = a0 ^ 0x3
  3982: 82 18 78                 a1 = u64 [sp + 0x78]
  3985: 85 88 64                 a1 = a1 ^ 0x64
  3988: d4 87 07                 a0 = a0 | a1
  3991: 52 07 3b ff              jump @204 if a0 != 0
      :                          @213
  3995: 95 17 38 31              a0 = sp + 0x3138
  3999: 33 09 68                 a2 = 0x68
  4002: 95 18 a8 31              a1 = sp + 0x31a8
  4006: 50 10 68 c1 2e           ra = 104, jump @851
      :                          @214 [@dyn 52]
  4011: 82 57 60                 a0 = u64 [s0 + 0x60]
  4014: 7b 17 78                 u64 [sp + 0x78] = a0
  4017: 82 57 68                 a0 = u64 [s0 + 0x68]
  4020: 7b 17 58                 u64 [sp + 0x58] = a0
  4023: 82 57 70                 a0 = u64 [s0 + 0x70]
  4026: 7b 17 80 00              u64 [sp + 0x80] = a0
  4030: 82 57 78                 a0 = u64 [s0 + 0x78]
  4033: 7b 17 60                 u64 [sp + 0x60] = a0
  4036: 95 17 10 31              a0 = sp + 0x3110
  4040: 82 75 80 00              s0 = u64 [a0 + 0x80]
  4044: 49 27 40 01              u64 [a0 + 320] = 0
  4048: 49 27 38 01              u64 [a0 + 312] = 0
  4052: 49 27 30 01              u64 [a0 + 304] = 0
  4056: 49 27 28 01              u64 [a0 + 296] = 0
  4060: 49 27 20 01              u64 [a0 + 288] = 0
  4064: 49 27 18 01              u64 [a0 + 280] = 0
  4068: 49 27 10 01              u64 [a0 + 272] = 0
  4072: 49 27 08 01              u64 [a0 + 264] = 0
  4076: 95 17 58 32              a0 = sp + 0x3258
  4080: 33 09 00 01              a2 = 0x100
  4084: 33 08                    a1 = 0
  4086: 50 10 6a 23 2f           ra = 106, jump @869
      :                          @215 [@dyn 53]
  4091: 95 17 b8 20              a0 = sp + 0x20b8
  4095: 82 77 48                 a0 = u64 [a0 + 0x48]
  4098: 95 18 18 32              a1 = sp + 0x3218
  4102: 82 19 58                 a2 = u64 [sp + 0x58]
  4105: 82 1a 80 00              a3 = u64 [sp + 0x80]
  4109: 0a 15                    ecalli 21 // 'peek'
  4111: 95 17 b8 20              a0 = sp + 0x20b8
  4115: 82 77 48                 a0 = u64 [a0 + 0x48]
  4118: 95 18 58 32              a1 = sp + 0x3258
  4122: 82 19 60                 a2 = u64 [sp + 0x60]
  4125: 64 5a                    a3 = s0
  4127: 0a 15                    ecalli 21 // 'peek'
  4129: 95 18 18 32              a1 = sp + 0x3218
  4133: 95 1a 58 32              a3 = sp + 0x3258
  4137: 82 17 78                 a0 = u64 [sp + 0x78]
  4140: 82 19 80 00              a2 = u64 [sp + 0x80]
  4144: 64 5b                    a4 = s0
  4146: 95 15 10 31              s0 = sp + 0x3110
  4150: 0a 64                    ecalli 100 // 'log'
  4152: 28 9a fe                 jump @204
      :                          @216
  4155: 0a                       ecalli 0 // 'gas'
  4156: 95 18 b8 20              a1 = sp + 0x20b8
  4160: 7b 87 40                 u64 [a1 + 0x40] = a0
  4163: 95 17 f8 20              a0 = sp + 0x20f8
  4167: 7b 57 80 02              u64 [s0 + 0x280] = a0
  4171: 33 07 16                 a0 = 0x16
  4174: 7b 57 88 02              u64 [s0 + 0x288] = a0
  4178: 33 07 90 01 01           a0 = 0x10190
  4183: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4187: 49 25 50 01 01           u64 [s0 + 336] = 0x1
  4192: 49 25 68 01              u64 [s0 + 360] = 0
  4196: 95 18 90 33              a1 = sp + 0x3390
  4200: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4204: 49 25 60 01 01           u64 [s0 + 352] = 0x1
  4209: 95 17 18 32              a0 = sp + 0x3218
  4213: 95 18 58 32              a1 = sp + 0x3258
  4217: 50 10 6c 73 2b           ra = 108, jump @802
      :                          @217 [@dyn 54]
  4222: 95 17 10 31              a0 = sp + 0x3110
  4226: 82 75 10 01              s0 = u64 [a0 + 0x110]
  4230: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  4234: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4238: 33 07 04                 a0 = 0x4
  4241: 33 08                    a1 = 0
  4243: 33 09                    a2 = 0
  4245: 64 5a                    a3 = s0
  4247: 33 00 6e                 ra = 0x6e
  4250: 0a 64                    ecalli 100 // 'log'
  4252: 01                       fallthrough
      :                          @218 [@dyn 55]
  4253: 82 17 88 00              a0 = u64 [sp + 0x88]
  4257: c8 67 07                 a0 = a0 + s1
  4260: 53 37 00 00 f0 27        jump @224 if a0 <u 4293918720
      :                          @219
  4266: 33 07 50 00 03           a0 = 0x30050
  4271: 95 77 00 00 10           a0 = a0 + 0x100000
  4276: 01                       fallthrough
      :                          @220
  4277: 82 78                    a1 = u64 [a0]
  4279: c9 87 09                 a2 = a0 - a1
  4282: ab 59 11                 jump @224 if a2 != s0
      :                          @221
  4285: c9 68 09                 a2 = a1 - s1
  4288: 01                       fallthrough
      :                          @222
  4289: 82 7a                    a3 = u64 [a0]
  4291: ab 8a f2                 jump @220 if a3 != a1
      :                          @223
  4294: 7b 79                    u64 [a0] = a2
  4296: 33 0b                    a4 = 0
  4298: 01                       fallthrough
      :                          @224
  4299: 95 17 b8 20              a0 = sp + 0x20b8
  4303: 82 78 48                 a1 = u64 [a0 + 0x48]
  4306: 95 15 10 31              s0 = sp + 0x3110
  4310: 82 59                    a2 = u64 [s0]
  4312: 7a 58 4c 02              u32 [s0 + 0x24c] = a1
  4316: 7b 19 60                 u64 [sp + 0x60] = a2
  4319: 51 19 ff 2e 03           jump @255 if a2 == 4294967295
      :                          @225
  4324: 33 08                    a1 = 0
  4326: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4336: 7b 19 58                 u64 [sp + 0x58] = a2
  4339: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4349: 7b 17 50                 u64 [sp + 0x50] = a0
  4352: 33 07 16                 a0 = 0x16
  4355: 7b 17 78                 u64 [sp + 0x78] = a0
  4358: 33 07 28 00 01           a0 = 0x10028
  4363: 7b 17 48                 u64 [sp + 0x48] = a0
  4366: 33 07 88 04 01           a0 = 0x10488
  4371: 7b 17 40                 u64 [sp + 0x40] = a0
  4374: 49 11 38 f0 ef 0f        u64 [sp + 56] = 0xfeff0
  4380: 33 07 02                 a0 = 0x2
  4383: 7b 17 30                 u64 [sp + 0x30] = a0
  4386: 33 07 12                 a0 = 0x12
  4389: 7b 17 28                 u64 [sp + 0x28] = a0
  4392: 33 07 08 05 01           a0 = 0x10508
  4397: 7b 17 20                 u64 [sp + 0x20] = a0
  4400: 33 06 50 00 03           s1 = 0x30050
  4405: 95 66 00 00 10           s1 = s1 + 0x100000
  4410: 33 07 0e                 a0 = 0xe
  4413: 7b 17 18                 u64 [sp + 0x18] = a0
  4416: 33 07 48 05 01           a0 = 0x10548
  4421: 7b 17 10                 u64 [sp + 0x10] = a0
  4424: 33 07 3c 00 03           a0 = 0x3003c
  4429: 7b 17 68                 u64 [sp + 0x68] = a0
  4432: 95 77 04                 a0 = a0 + 0x4
  4435: 7b 17 08                 u64 [sp + 0x8] = a0
  4438: 28 14                    jump @227
      :                          @226
  4440: 82 19 80 00              a2 = u64 [sp + 0x80]
  4444: 95 98 01                 a1 = a2 + 0x1
  4447: 95 15 10 31              s0 = sp + 0x3110
  4451: 82 17 60                 a0 = u64 [sp + 0x60]
  4454: aa 79 a7 02              jump @255 if a2 == a0
      :                          @227
  4458: 7b 58 50 02              u64 [s0 + 0x250] = a1
  4462: 7b 18 80 00              u64 [sp + 0x80] = a1
  4466: 97 89 0c                 a2 = a1 << 0xc
  4469: 95 17 b8 20              a0 = sp + 0x20b8
  4473: 82 77 48                 a0 = u64 [a0 + 0x48]
  4476: 82 58 08                 a1 = u64 [s0 + 0x8]
  4479: 82 1a 58                 a3 = u64 [sp + 0x58]
  4482: c8 a9 09                 a2 = a2 + a3
  4485: 82 1a 50                 a3 = u64 [sp + 0x50]
  4488: d2 a9 09                 a2 = a2 & a3
  4491: 7b 59 58 02              u64 [s0 + 0x258] = a2
  4495: 33 0a 00 10              a3 = 0x1000
  4499: 0a 15                    ecalli 21 // 'peek'
  4501: 7b 57 60 02              u64 [s0 + 0x260] = a0
  4505: 95 17 00 21              a0 = sp + 0x2100
  4509: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4513: 82 17 78                 a0 = u64 [sp + 0x78]
  4516: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4520: 95 18 18 31              a1 = sp + 0x3118
  4524: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4528: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4532: 95 18 68 33              a1 = sp + 0x3368
  4536: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4540: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4544: 82 18 48                 a1 = u64 [sp + 0x48]
  4547: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4551: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4555: 95 18 70 33              a1 = sp + 0x3370
  4559: 7b 58 88 01              u64 [s0 + 0x188] = a1
  4563: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4567: 82 17 40                 a0 = u64 [sp + 0x40]
  4570: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4574: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4579: 49 25 28 01              u64 [s0 + 296] = 0
  4583: 95 18 58 32              a1 = sp + 0x3258
  4587: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4591: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4596: 95 17 90 33              a0 = sp + 0x3390
  4600: 95 18 18 32              a1 = sp + 0x3218
  4604: 50 10 70 f0 29           ra = 112, jump @802
      :                          @228 [@dyn 56]
  4609: 95 17 10 31              a0 = sp + 0x3110
  4613: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4617: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4621: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4625: 7b 17 70                 u64 [sp + 0x70] = a0
  4628: 33 07 03                 a0 = 0x3
  4631: 33 08                    a1 = 0
  4633: 33 09                    a2 = 0
  4635: 64 5a                    a3 = s0
  4637: 33 00 72                 ra = 0x72
  4640: 0a 64                    ecalli 100 // 'log'
  4642: 01                       fallthrough
      :                          @229 [@dyn 57]
  4643: 82 1b 70                 a4 = u64 [sp + 0x70]
  4646: 82 17 88 00              a0 = u64 [sp + 0x88]
  4650: c8 b7 07                 a0 = a0 + a4
  4653: 53 37 00 00 f0 1a        jump @234 if a0 <u 4293918720
      :                          @230
  4659: 82 67                    a0 = u64 [s1]
  4661: c9 76 08                 a1 = s1 - a0
  4664: ab 58 0f                 jump @234 if a1 != s0
      :                          @231
  4667: c9 b7 08                 a1 = a0 - a4
  4670: 01                       fallthrough
      :                          @232
  4671: 82 69                    a2 = u64 [s1]
  4673: ab 79 f2                 jump @230 if a2 != a0
      :                          @233
  4676: 7b 68                    u64 [s1] = a1
  4678: 01                       fallthrough
      :                          @234
  4679: 95 1a 10 31              a3 = sp + 0x3110
  4683: 81 a7 4c 02              a0 = i32 [a3 + 0x24c]
  4687: 81 a8 50 02              a1 = i32 [a3 + 0x250]
  4691: 95 19 b8 20              a2 = sp + 0x20b8
  4695: 7a 97 50                 u32 [a2 + 0x50] = a0
  4698: 82 17 38                 a0 = u64 [sp + 0x38]
  4701: be 87 07                 i32 a0 = a0 + a1
  4704: 7a a7 6c 02              u32 [a3 + 0x26c] = a0
  4708: 7a 97 54                 u32 [a2 + 0x54] = a0
  4711: 95 17 08 21              a0 = sp + 0x2108
  4715: 7b a7 70 02              u64 [a3 + 0x270] = a0
  4719: 49 2a 78 02 08           u64 [a3 + 632] = 0x8
  4724: 95 17 80 33              a0 = sp + 0x3380
  4728: 7b a7 48 01              u64 [a3 + 0x148] = a0
  4732: 82 17 30                 a0 = u64 [sp + 0x30]
  4735: 7b a7 50 01              u64 [a3 + 0x150] = a0
  4739: 95 17 5c 33              a0 = sp + 0x335c
  4743: 7b a7 58 01              u64 [a3 + 0x158] = a0
  4747: 82 17 28                 a0 = u64 [sp + 0x28]
  4750: 7b a7 60 01              u64 [a3 + 0x160] = a0
  4754: 95 18 7c 33              a1 = sp + 0x337c
  4758: 7b a8 68 01              u64 [a3 + 0x168] = a1
  4762: 7b a7 70 01              u64 [a3 + 0x170] = a0
  4766: 82 17 20                 a0 = u64 [sp + 0x20]
  4769: 7b a7 08 01              u64 [a3 + 0x108] = a0
  4773: 49 2a 10 01 03           u64 [a3 + 272] = 0x3
  4778: 49 2a 28 01              u64 [a3 + 296] = 0
  4782: 95 17 58 32              a0 = sp + 0x3258
  4786: 7b a7 18 01              u64 [a3 + 0x118] = a0
  4790: 49 2a 20 01 03           u64 [a3 + 288] = 0x3
  4795: 95 17 90 33              a0 = sp + 0x3390
  4799: 95 18 18 32              a1 = sp + 0x3218
  4803: 50 10 74 29 29           ra = 116, jump @802
      :                          @235 [@dyn 58]
  4808: 95 17 10 31              a0 = sp + 0x3110
  4812: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4816: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4820: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4824: 7b 17 70                 u64 [sp + 0x70] = a0
  4827: 33 07 04                 a0 = 0x4
  4830: 33 08                    a1 = 0
  4832: 33 09                    a2 = 0
  4834: 64 5a                    a3 = s0
  4836: 33 00 76                 ra = 0x76
  4839: 0a 64                    ecalli 100 // 'log'
  4841: 01                       fallthrough
      :                          @236 [@dyn 59]
  4842: 82 1b 70                 a4 = u64 [sp + 0x70]
  4845: 82 17 88 00              a0 = u64 [sp + 0x88]
  4849: c8 b7 07                 a0 = a0 + a4
  4852: 53 37 00 00 f0 1a        jump @241 if a0 <u 4293918720
      :                          @237
  4858: 82 67                    a0 = u64 [s1]
  4860: c9 76 08                 a1 = s1 - a0
  4863: ab 58 0f                 jump @241 if a1 != s0
      :                          @238
  4866: c9 b7 08                 a1 = a0 - a4
  4869: 01                       fallthrough
      :                          @239
  4870: 82 69                    a2 = u64 [s1]
  4872: ab 79 f2                 jump @237 if a2 != a0
      :                          @240
  4875: 7b 68                    u64 [s1] = a1
  4877: 01                       fallthrough
      :                          @241
  4878: 95 15 10 31              s0 = sp + 0x3110
  4882: 82 57 50 02              a0 = u64 [s0 + 0x250]
  4886: 82 58                    a1 = u64 [s0]
  4888: ab 87 11                 jump @243 if a0 != a1
      :                          @242
  4891: 82 18 80 00              a1 = u64 [sp + 0x80]
  4895: 3d 08 3c 00 03           u32 [0x3003c] = a1
  4900: 82 17 08                 a0 = u64 [sp + 0x8]
  4903: 28 0f                    jump @245
      :                          @243
  4905: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4908: ab 87 14                 jump @246 if a0 != a1
      :                          @244
  4911: 82 17 68                 a0 = u64 [sp + 0x68]
  4914: 95 77 08                 a0 = a0 + 0x8
  4917: 01                       fallthrough
      :                          @245
  4918: 95 18 b8 20              a1 = sp + 0x20b8
  4922: 81 88 58                 a1 = i32 [a1 + 0x58]
  4925: 7a 78                    u32 [a0] = a1
  4927: 01                       fallthrough
      :                          @246
  4928: 33 08 08 10              a1 = 0x1008
  4932: 95 17 08 21              a0 = sp + 0x2108
  4936: 0a 13                    ecalli 19 // 'export'
  4938: 7b 57 70 02              u64 [s0 + 0x270] = a0
  4942: 0a                       ecalli 0 // 'gas'
  4943: 95 18 b8 20              a1 = sp + 0x20b8
  4947: 7b 87 40                 u64 [a1 + 0x40] = a0
  4950: 95 18 60 33              a1 = sp + 0x3360
  4954: 7b 58 48 01              u64 [s0 + 0x148] = a1
  4958: 82 17 78                 a0 = u64 [sp + 0x78]
  4961: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4965: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4969: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4973: 95 18 80 33              a1 = sp + 0x3380
  4977: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4981: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4985: 95 18 f8 20              a1 = sp + 0x20f8
  4989: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4993: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4997: 82 17 68                 a0 = u64 [sp + 0x68]
  5000: 7b 57 88 01              u64 [s0 + 0x188] = a0
  5004: 82 17 18                 a0 = u64 [sp + 0x18]
  5007: 7b 57 90 01              u64 [s0 + 0x190] = a0
  5011: 82 17 10                 a0 = u64 [sp + 0x10]
  5014: 7b 57 08 01              u64 [s0 + 0x108] = a0
  5018: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  5023: 49 25 28 01              u64 [s0 + 296] = 0
  5027: 95 18 58 32              a1 = sp + 0x3258
  5031: 7b 58 18 01              u64 [s0 + 0x118] = a1
  5035: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  5040: 95 17 90 33              a0 = sp + 0x3390
  5044: 95 18 18 32              a1 = sp + 0x3218
  5048: 50 10 78 34 28           ra = 120, jump @802
      :                          @247 [@dyn 60]
  5053: 95 17 10 31              a0 = sp + 0x3110
  5057: 82 75 88 02              s0 = u64 [a0 + 0x288]
  5061: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  5065: 82 77 80 02              a0 = u64 [a0 + 0x280]
  5069: 7b 17 70                 u64 [sp + 0x70] = a0
  5072: 33 07 04                 a0 = 0x4
  5075: 33 08                    a1 = 0
  5077: 33 09                    a2 = 0
  5079: 64 5a                    a3 = s0
  5081: 33 00 7a                 ra = 0x7a
  5084: 0a 64                    ecalli 100 // 'log'
  5086: 01                       fallthrough
      :                          @248 [@dyn 61]
  5087: 82 1b 70                 a4 = u64 [sp + 0x70]
  5090: 82 17 88 00              a0 = u64 [sp + 0x88]
  5094: c8 b7 07                 a0 = a0 + a4
  5097: 53 37 00 00 f0 6f fd     jump @226 if a0 <u 4293918720
      :                          @249
  5104: 82 67                    a0 = u64 [s1]
  5106: c9 76 08                 a1 = s1 - a0
  5109: ab 58 63 fd              jump @226 if a1 != s0
      :                          @250
  5113: c9 b7 08                 a1 = a0 - a4
  5116: 01                       fallthrough
      :                          @251
  5117: 82 69                    a2 = u64 [s1]
  5119: ab 79 f1                 jump @249 if a2 != a0
      :                          @252
  5122: 7b 68                    u64 [s1] = a1
  5124: 33 0a                    a3 = 0
  5126: 01                       fallthrough
      :                          @253
  5127: ab 79 e9                 jump @249 if a2 != a0
      :                          @254
  5130: 28 4e fd                 jump @226
      :                          @255
  5133: 33 07 3c 00 03           a0 = 0x3003c
  5138: 7b 57 48 01              u64 [s0 + 0x148] = a0
  5142: 33 08 0e                 a1 = 0xe
  5145: 7b 58 50 01              u64 [s0 + 0x150] = a1
  5149: 95 79 04                 a2 = a0 + 0x4
  5152: 7b 59 58 01              u64 [s0 + 0x158] = a2
  5156: 7b 58 60 01              u64 [s0 + 0x160] = a1
  5160: 95 77 08                 a0 = a0 + 0x8
  5163: 7b 57 68 01              u64 [s0 + 0x168] = a0
  5167: 7b 58 70 01              u64 [s0 + 0x170] = a1
  5171: 33 07 a8 03 01           a0 = 0x103a8
  5176: 7b 57 08 01              u64 [s0 + 0x108] = a0
  5180: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  5185: 49 25 28 01              u64 [s0 + 296] = 0
  5189: 95 18 58 32              a1 = sp + 0x3258
  5193: 7b 58 18 01              u64 [s0 + 0x118] = a1
  5197: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  5202: 95 17 90 33              a0 = sp + 0x3390
  5206: 95 18 18 32              a1 = sp + 0x3218
  5210: 50 10 7c 92 27           ra = 124, jump @802
      :                          @256 [@dyn 62]
  5215: 95 17 10 31              a0 = sp + 0x3110
  5219: 82 75 88 02              s0 = u64 [a0 + 0x288]
  5223: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  5227: 82 76 80 02              s1 = u64 [a0 + 0x280]
  5231: 33 07 03                 a0 = 0x3
  5234: 33 08                    a1 = 0
  5236: 33 09                    a2 = 0
  5238: 64 5a                    a3 = s0
  5240: 33 00 7e                 ra = 0x7e
  5243: 0a 64                    ecalli 100 // 'log'
  5245: 01                       fallthrough
      :                          @257 [@dyn 63]
  5246: 82 17 88 00              a0 = u64 [sp + 0x88]
  5250: c8 67 07                 a0 = a0 + s1
  5253: 53 37 00 00 f0 25        jump @263 if a0 <u 4293918720
      :                          @258
  5259: 33 07 50 00 03           a0 = 0x30050
  5264: 95 77 00 00 10           a0 = a0 + 0x100000
  5269: 01                       fallthrough
      :                          @259
  5270: 82 78                    a1 = u64 [a0]
  5272: c9 87 09                 a2 = a0 - a1
  5275: ab 59 0f                 jump @263 if a2 != s0
      :                          @260
  5278: c9 68 09                 a2 = a1 - s1
  5281: 01                       fallthrough
      :                          @261
  5282: 82 7a                    a3 = u64 [a0]
  5284: ab 8a f2                 jump @259 if a3 != a1
      :                          @262
  5287: 7b 79                    u64 [a0] = a2
  5289: 01                       fallthrough
      :                          @263
  5290: 95 15 b8 20              s0 = sp + 0x20b8
  5294: 82 57 48                 a0 = u64 [s0 + 0x48]
  5297: 0a 1a                    ecalli 26 // 'expunge'
  5299: 95 16 10 31              s1 = sp + 0x3110
  5303: 7b 67 70 02              u64 [s1 + 0x270] = a0
  5307: 0a                       ecalli 0 // 'gas'
  5308: 7b 57 40                 u64 [s0 + 0x40] = a0
  5311: 95 17 00 21              a0 = sp + 0x2100
  5315: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5319: 95 17 80 33              a0 = sp + 0x3380
  5323: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5327: 95 17 f8 20              a0 = sp + 0x20f8
  5331: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5335: 33 07 16                 a0 = 0x16
  5338: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5342: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5346: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5350: 33 07 f8 03 01           a0 = 0x103f8
  5355: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5359: 95 17 58 32              a0 = sp + 0x3258
  5363: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5367: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5372: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5377: 49 26 28 01              u64 [s1 + 296] = 0
  5381: 95 17 90 33              a0 = sp + 0x3390
  5385: 95 18 18 32              a1 = sp + 0x3218
  5389: 50 20 80 00 df 26        ra = 128, jump @802
      :                          @264 [@dyn 64]
  5395: 82 65 88 02              s0 = u64 [s1 + 0x288]
  5399: 82 6b 90 02              a4 = u64 [s1 + 0x290]
  5403: 82 66 80 02              s1 = u64 [s1 + 0x280]
  5407: 33 07 04                 a0 = 0x4
  5410: 33 08                    a1 = 0
  5412: 33 09                    a2 = 0
  5414: 64 5a                    a3 = s0
  5416: 33 00 82 00              ra = 0x82
  5420: 0a 64                    ecalli 100 // 'log'
  5422: 01                       fallthrough
      :                          @265 [@dyn 65]
  5423: 82 17 88 00              a0 = u64 [sp + 0x88]
  5427: c8 67 07                 a0 = a0 + s1
  5430: 53 37 00 00 f0 31        jump @271 if a0 <u 4293918720
      :                          @266
  5436: 33 07 50 00 03           a0 = 0x30050
  5441: 95 77 00 00 10           a0 = a0 + 0x100000
  5446: 01                       fallthrough
      :                          @267
  5447: 82 78                    a1 = u64 [a0]
  5449: c9 87 09                 a2 = a0 - a1
  5452: ab 59 1b                 jump @271 if a2 != s0
      :                          @268
  5455: c9 68 09                 a2 = a1 - s1
  5458: 01                       fallthrough
      :                          @269
  5459: 82 7a                    a3 = u64 [a0]
  5461: ab 8a f2                 jump @267 if a3 != a1
      :                          @270
  5464: 7b 79                    u64 [a0] = a2
  5466: 33 0b                    a4 = 0
  5468: 33 07 3c 00 03           a0 = 0x3003c
  5473: 33 08 0c                 a1 = 0xc
  5476: 28 29 f0                 jump @103
      :                          @271
  5479: 33 07 3c 00 03           a0 = 0x3003c
  5484: 33 08 0c                 a1 = 0xc
  5487: 28 1e f0                 jump @103
      :                          @272
  5490: 00                       trap
      :                          @273 [export #1: 'accumulate']
  5491: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5495: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5499: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5503: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5507: 95 11 b8 fb              sp = sp + 0xfffffffffffffbb8
  5511: 33 09 00 00 01           a2 = 0x10000
  5516: 51 08 b6 02              jump @353 if a1 == 0
      :                          @274
  5520: 64 86                    s1 = a1
  5522: 7d 78                    a1 = i8 [a0]
  5524: 33 05 01                 s0 = 0x1
  5527: 59 08 37                 jump @281 if a1 >=s 0
      :                          @275
  5530: 84 8a ff 00              a3 = a1 & 0xff
  5534: 33 05 02                 s0 = 0x2
  5537: 53 2a c0 00 2d           jump @281 if a3 <u 192
      :                          @276
  5542: 33 05 03                 s0 = 0x3
  5545: 53 2a e0 00 25           jump @281 if a3 <u 224
      :                          @277
  5550: 33 05 04                 s0 = 0x4
  5553: 53 2a f0 00 1d           jump @281 if a3 <u 240
      :                          @278
  5558: 33 05 05                 s0 = 0x5
  5561: 53 2a f8 00 15           jump @281 if a3 <u 248
      :                          @279
  5566: 33 05 06                 s0 = 0x6
  5569: 53 2a fc 00 0d           jump @281 if a3 <u 252
      :                          @280
  5574: 88 a8 fe 00              a1 = a3 <u 0xfe
  5578: 9a 85 08                 s0 = 0x8 - a1
  5581: 01                       fallthrough
      :                          @281
  5582: ae 56 08                 jump @283 if s1 >=u s0
      :                          @282
  5585: 33 08                    a1 = 0
  5587: 28 6f 02                 jump @353
      :                          @283
  5590: 64 58                    a1 = s0
  5592: 7b 17 38                 u64 [sp + 0x38] = a0
  5595: 50 20 84 00 e7 32        ra = 132, jump @1055
      :                          @284 [@dyn 66]
  5601: aa 56 59 02              jump @352 if s1 == s0
      :                          @285
  5605: 82 17 38                 a0 = u64 [sp + 0x38]
  5608: c8 57 07                 a0 = a0 + s0
  5611: 7d 78                    a1 = i8 [a0]
  5613: c9 56 06                 s1 = s1 - s0
  5616: 33 05 01                 s0 = 0x1
  5619: 59 08 37                 jump @292 if a1 >=s 0
      :                          @286
  5622: 84 89 ff 00              a2 = a1 & 0xff
  5626: 33 05 02                 s0 = 0x2
  5629: 53 29 c0 00 2d           jump @292 if a2 <u 192
      :                          @287
  5634: 33 05 03                 s0 = 0x3
  5637: 53 29 e0 00 25           jump @292 if a2 <u 224
      :                          @288
  5642: 33 05 04                 s0 = 0x4
  5645: 53 29 f0 00 1d           jump @292 if a2 <u 240
      :                          @289
  5650: 33 05 05                 s0 = 0x5
  5653: 53 29 f8 00 15           jump @292 if a2 <u 248
      :                          @290
  5658: 33 05 06                 s0 = 0x6
  5661: 53 29 fc 00 0d           jump @292 if a2 <u 252
      :                          @291
  5666: 88 98 fe 00              a1 = a2 <u 0xfe
  5670: 9a 85 08                 s0 = 0x8 - a1
  5673: 01                       fallthrough
      :                          @292
  5674: ac 56 10 02              jump @352 if s1 <u s0
      :                          @293
  5678: 64 58                    a1 = s0
  5680: 7b 17 38                 u64 [sp + 0x38] = a0
  5683: 50 20 86 00 8f 32        ra = 134, jump @1055
      :                          @294 [@dyn 67]
  5689: 82 1a 38                 a3 = u64 [sp + 0x38]
  5692: c8 5a 0a                 a3 = a3 + s0
  5695: c9 56 0b                 a4 = s1 - s0
  5698: ab 56 07                 jump @296 if s1 != s0
      :                          @295
  5701: 33 05                    s0 = 0
  5703: 28 42                    jump @304
      :                          @296
  5705: 7d a8                    a1 = i8 [a3]
  5707: 33 05 01                 s0 = 0x1
  5710: 59 08 37                 jump @303 if a1 >=s 0
      :                          @297
  5713: 84 89 ff 00              a2 = a1 & 0xff
  5717: 33 05 02                 s0 = 0x2
  5720: 53 29 c0 00 2d           jump @303 if a2 <u 192
      :                          @298
  5725: 33 05 03                 s0 = 0x3
  5728: 53 29 e0 00 25           jump @303 if a2 <u 224
      :                          @299
  5733: 33 05 04                 s0 = 0x4
  5736: 53 29 f0 00 1d           jump @303 if a2 <u 240
      :                          @300
  5741: 33 05 05                 s0 = 0x5
  5744: 53 29 f8 00 15           jump @303 if a2 <u 248
      :                          @301
  5749: 33 05 06                 s0 = 0x6
  5752: 53 29 fc 00 0d           jump @303 if a2 <u 252
      :                          @302
  5757: 88 98 fe 00              a1 = a2 <u 0xfe
  5761: 9a 85 08                 s0 = 0x8 - a1
  5764: 01                       fallthrough
      :                          @303
  5765: ac 5b b5 01              jump @352 if a4 <u s0
      :                          @304
  5769: 64 b6                    s1 = a4
  5771: 7b 17 30                 u64 [sp + 0x30] = a0
  5774: 7b 1a 38                 u64 [sp + 0x38] = a3
  5777: 64 a7                    a0 = a3
  5779: 64 58                    a1 = s0
  5781: 50 20 88 00 2d 32        ra = 136, jump @1055
      :                          @305 [@dyn 68]
  5787: 51 07 9f 01              jump @352 if a0 == 0
      :                          @306
  5791: e4 56 07                 a0 = maxu(s1, s0)
  5794: c9 57 07                 a0 = a0 - s0
  5797: 33 09 00 00 01           a2 = 0x10000
  5802: 53 17 60 27 ff           jump @282 if a0 <u 96
      :                          @307
  5807: 82 18 38                 a1 = u64 [sp + 0x38]
  5810: c8 85 05                 s0 = s0 + a1
  5813: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5816: 95 57 60                 a0 = s0 + 0x60
  5819: 7b 17 38                 u64 [sp + 0x38] = a0
  5822: 51 06 54                 jump @319 if s1 == 0
      :                          @308
  5825: 7d 78                    a1 = i8 [a0]
  5827: 33 05 01                 s0 = 0x1
  5830: 59 08 37                 jump @315 if a1 >=s 0
      :                          @309
  5833: 84 89 ff 00              a2 = a1 & 0xff
  5837: 33 05 02                 s0 = 0x2
  5840: 53 29 c0 00 2d           jump @315 if a2 <u 192
      :                          @310
  5845: 33 05 03                 s0 = 0x3
  5848: 53 29 e0 00 25           jump @315 if a2 <u 224
      :                          @311
  5853: 33 05 04                 s0 = 0x4
  5856: 53 29 f0 00 1d           jump @315 if a2 <u 240
      :                          @312
  5861: 33 05 05                 s0 = 0x5
  5864: 53 29 f8 00 15           jump @315 if a2 <u 248
      :                          @313
  5869: 33 05 06                 s0 = 0x6
  5872: 53 29 fc 00 0d           jump @315 if a2 <u 252
      :                          @314
  5877: 88 98 fe 00              a1 = a2 <u 0xfe
  5881: 9a 85 08                 s0 = 0x8 - a1
  5884: 01                       fallthrough
      :                          @315
  5885: ae 56 06                 jump @317 if s1 >=u s0
      :                          @316
  5888: 28 07 22                 jump @734
      :                          @317
  5891: 64 58                    a1 = s0
  5893: 50 20 8a 00 bd 31        ra = 138, jump @1055
      :                          @318 [@dyn 69]
  5899: 33 09 00 00 01           a2 = 0x10000
  5904: 28 07                    jump @320
      :                          @319
  5906: 33 05                    s0 = 0
  5908: 33 07                    a0 = 0
  5910: 01                       fallthrough
      :                          @320
  5911: e4 56 08                 a1 = maxu(s1, s0)
  5914: c9 58 08                 a1 = a1 - s0
  5917: e4 78 06                 s1 = maxu(a1, a0)
  5920: c9 76 06                 s1 = s1 - a0
  5923: 53 16 20 ae fe           jump @282 if s1 <u 32
      :                          @321
  5928: 82 18 38                 a1 = u64 [sp + 0x38]
  5931: c8 85 05                 s0 = s0 + a1
  5934: c8 57 07                 a0 = a0 + s0
  5937: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  5940: 95 77 20                 a0 = a0 + 0x20
  5943: 7b 17 38                 u64 [sp + 0x38] = a0
  5946: 51 06 54                 jump @333 if s1 == 0
      :                          @322
  5949: 7d 78                    a1 = i8 [a0]
  5951: 33 05 01                 s0 = 0x1
  5954: 59 08 37                 jump @329 if a1 >=s 0
      :                          @323
  5957: 84 89 ff 00              a2 = a1 & 0xff
  5961: 33 05 02                 s0 = 0x2
  5964: 53 29 c0 00 2d           jump @329 if a2 <u 192
      :                          @324
  5969: 33 05 03                 s0 = 0x3
  5972: 53 29 e0 00 25           jump @329 if a2 <u 224
      :                          @325
  5977: 33 05 04                 s0 = 0x4
  5980: 53 29 f0 00 1d           jump @329 if a2 <u 240
      :                          @326
  5985: 33 05 05                 s0 = 0x5
  5988: 53 29 f8 00 15           jump @329 if a2 <u 248
      :                          @327
  5993: 33 05 06                 s0 = 0x6
  5996: 53 29 fc 00 0d           jump @329 if a2 <u 252
      :                          @328
  6001: 88 98 fe 00              a1 = a2 <u 0xfe
  6005: 9a 85 08                 s0 = 0x8 - a1
  6008: 01                       fallthrough
      :                          @329
  6009: ae 56 06                 jump @331 if s1 >=u s0
      :                          @330
  6012: 28 8b 21                 jump @734
      :                          @331
  6015: 64 58                    a1 = s0
  6017: 50 20 8c 00 41 31        ra = 140, jump @1055
      :                          @332 [@dyn 70]
  6023: 33 09 00 00 01           a2 = 0x10000
  6028: 28 05                    jump @334
      :                          @333
  6030: 33 05                    s0 = 0
  6032: 01                       fallthrough
      :                          @334
  6033: ae 65 40 fe              jump @282 if s0 >=u s1
      :                          @335
  6037: 82 17 38                 a0 = u64 [sp + 0x38]
  6040: c8 57 07                 a0 = a0 + s0
  6043: 7c 78                    a1 = u8 [a0]
  6045: 51 08 0a                 jump @337 if a1 == 0
      :                          @336
  6048: 33 05                    s0 = 0
  6050: 33 0a                    a3 = 0
  6052: 28 b6 00                 jump @354
      :                          @337
  6055: e4 56 08                 a1 = maxu(s1, s0)
  6058: c9 58 08                 a1 = a1 - s0
  6061: 95 79 01                 a2 = a0 + 0x1
  6064: 33 07 01                 a0 = 0x1
  6067: e4 78 06                 s1 = maxu(a1, a0)
  6070: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  6073: 55 18 02 0a              jump @339 if a1 >=u 2
      :                          @338
  6077: 33 05                    s0 = 0
  6079: 33 07                    a0 = 0
  6081: 28 59                    jump @350
      :                          @339
  6083: 7d 97                    a0 = i8 [a2]
  6085: 33 05 01                 s0 = 0x1
  6088: 59 07 37                 jump @346 if a0 >=s 0
      :                          @340
  6091: 84 77 ff 00              a0 = a0 & 0xff
  6095: 33 05 02                 s0 = 0x2
  6098: 53 27 c0 00 2d           jump @346 if a0 <u 192
      :                          @341
  6103: 33 05 03                 s0 = 0x3
  6106: 53 27 e0 00 25           jump @346 if a0 <u 224
      :                          @342
  6111: 33 05 04                 s0 = 0x4
  6114: 53 27 f0 00 1d           jump @346 if a0 <u 240
      :                          @343
  6119: 33 05 05                 s0 = 0x5
  6122: 53 27 f8 00 15           jump @346 if a0 <u 248
      :                          @344
  6127: 33 05 06                 s0 = 0x6
  6130: 53 27 fc 00 0d           jump @346 if a0 <u 252
      :                          @345
  6135: 88 77 fe 00              a0 = a0 <u 0xfe
  6139: 9a 75 08                 s0 = 0x8 - a0
  6142: 01                       fallthrough
      :                          @346
  6143: 7b 16 38                 u64 [sp + 0x38] = s1
  6146: ae 56 06                 jump @348 if s1 >=u s0
      :                          @347
  6149: 28 04 21                 jump @736
      :                          @348
  6152: 64 97                    a0 = a2
  6154: 64 58                    a1 = s0
  6156: 64 96                    s1 = a2
  6158: 50 20 8e 00 b4 30        ra = 142, jump @1055
      :                          @349 [@dyn 71]
  6164: 64 69                    a2 = s1
  6166: 82 16 38                 s1 = u64 [sp + 0x38]
  6169: 01                       fallthrough
      :                          @350
  6170: e4 56 08                 a1 = maxu(s1, s0)
  6173: c9 58 08                 a1 = a1 - s0
  6176: e6 78 0a                 a3 = minu(a1, a0)
  6179: c8 95 05                 s0 = s0 + a2
  6182: 52 1a 24 34              jump @354 if a3 != 36
      :                          @351
  6186: 80 58 20                 a1 = u32 [s0 + 0x20]
  6189: 64 57                    a0 = s0
  6191: 0a 0e                    ecalli 14 // 'solicit'
  6193: 33 08                    a1 = 0
  6195: 33 09 00 00 01           a2 = 0x10000
  6200: 28 0a                    jump @353
      :                          @352
  6202: 33 08                    a1 = 0
  6204: 33 09 00 00 01           a2 = 0x10000
  6209: 01                       fallthrough
      :                          @353
  6210: 64 97                    a0 = a2
  6212: 95 11 48 04              sp = sp + 0x448
  6216: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  6220: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  6224: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  6228: 95 11 f8 07              sp = sp + 0x7f8
  6232: 32 00                    ret
      :                          @354
  6234: 46 11 47                 u8 [sp + 71] = 0
  6237: 80 57                    a0 = u32 [s0]
  6239: 7b 17 48                 u64 [sp + 0x48] = a0
  6242: 95 17 47                 a0 = sp + 0x47
  6245: 33 08 01                 a1 = 0x1
  6248: 7b 15 18                 u64 [sp + 0x18] = s0
  6251: 64 59                    a2 = s0
  6253: 7b 1a 28                 u64 [sp + 0x28] = a3
  6256: 0a 03                    ecalli 3 // 'write'
  6258: 46 11 52 6a              u8 [sp + 82] = 0x6a
  6262: 46 11 53 61              u8 [sp + 83] = 0x61
  6266: 46 11 54 6d              u8 [sp + 84] = 0x6d
  6270: 46 11 55 44              u8 [sp + 85] = 0x44
  6274: 46 11 56 4f              u8 [sp + 86] = 0x4f
  6278: 46 11 57 54              u8 [sp + 87] = 0x54
  6282: 46 11 58 6a              u8 [sp + 88] = 0x6a
  6286: 46 11 59 0d              u8 [sp + 89] = 0xd
  6290: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  6294: 46 11 5b 19              u8 [sp + 91] = 0x19
  6298: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  6303: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  6308: 46 11 5e 50              u8 [sp + 94] = 0x50
  6312: 46 11 5f 57              u8 [sp + 95] = 0x57
  6316: 46 11 60 13              u8 [sp + 96] = 0x13
  6320: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  6325: 46 11 62 65              u8 [sp + 98] = 0x65
  6329: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  6334: 46 11 64 31              u8 [sp + 100] = 0x31
  6338: 46 11 65 03              u8 [sp + 101] = 0x3
  6342: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  6347: 46 11 67 73              u8 [sp + 103] = 0x73
  6351: 33 0b f1 00              a4 = 0xf1
  6355: 78 1b 68                 u8 [sp + 0x68] = a4
  6358: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6363: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6368: 46 11 6b 64              u8 [sp + 107] = 0x64
  6372: 46 11 6c 56              u8 [sp + 108] = 0x56
  6376: 46 11 6d 32              u8 [sp + 109] = 0x32
  6380: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6385: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6390: 46 11 70 50              u8 [sp + 112] = 0x50
  6394: 33 0c 3c                 a5 = 0x3c
  6397: 78 1c 71                 u8 [sp + 0x71] = a5
  6400: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6404: 46 11 73 0c              u8 [sp + 115] = 0xc
  6408: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6412: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6416: 46 11 76 19              u8 [sp + 118] = 0x19
  6420: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6425: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6430: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6435: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6440: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6444: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6449: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6454: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6459: 46 11 7f 47              u8 [sp + 127] = 0x47
  6463: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6469: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6474: 78 1c 82 00              u8 [sp + 0x82] = a5
  6478: 95 16 ff 07              s1 = sp + 0x7ff
  6482: 95 66 a1 03              s1 = s1 + 0x3a1
  6486: 78 1b 83 00              u8 [sp + 0x83] = a4
  6490: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6496: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6501: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6506: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6512: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6518: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6524: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6530: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6536: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6542: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6547: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6552: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6557: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6563: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6569: 49 11 38 ff ff ef        u64 [sp + 56] = 0xffffffffffefffff
  6575: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6580: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6585: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6591: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6597: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6602: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6607: 14 05 ff ff ff ff 00 00 00 00 s0 = 0xffffffff
  6617: 95 17 98 00              a0 = sp + 0x98
  6621: 33 09 00 01              a2 = 0x100
  6625: 33 08                    a1 = 0
  6627: 50 20 90 00 36 25        ra = 144, jump @869
      :                          @355 [@dyn 72]
  6633: 82 17 48                 a0 = u64 [sp + 0x48]
  6636: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6639: 82 19 30                 a2 = u64 [sp + 0x30]
  6642: d2 59 09                 a2 = a2 & s0
  6645: 7b 19 30                 u64 [sp + 0x30] = a2
  6648: 54 17 09 07              jump @357 if a0 <=u 9
      :                          @356
  6652: 28 7f 1c                 jump @699
      :                          @357
  6655: 97 77 02                 a0 = a0 << 0x2
  6658: 33 08 00 00 01           a1 = 0x10000
  6663: c8 87 07                 a0 = a0 + a1
  6666: 81 77                    a0 = i32 [a0]
  6668: 32 07                    jump [a0]
      :                          @358 [@dyn 73]
  6670: 95 18 52                 a1 = sp + 0x52
  6673: 33 09 03                 a2 = 0x3
  6676: 95 1a 98 00              a3 = sp + 0x98
  6680: 33 0c 00 01              a5 = 0x100
  6684: 82 17 30                 a0 = u64 [sp + 0x30]
  6687: 33 0b                    a4 = 0
  6689: 0a 02                    ecalli 2 // 'read'
  6691: 7b 67 70                 u64 [s1 + 0x70] = a0
  6694: 95 77 01                 a0 = a0 + 0x1
  6697: 88 77 01                 a0 = a0 <u 0x1
  6700: 97 77 01                 a0 = a0 << 0x1
  6703: 7b 17 10                 u64 [sp + 0x10] = a0
  6706: 95 17 48                 a0 = sp + 0x48
  6709: 7b 67 18                 u64 [s1 + 0x18] = a0
  6712: 33 09 16                 a2 = 0x16
  6715: 7b 69 20                 u64 [s1 + 0x20] = a2
  6718: 95 17 ff 07              a0 = sp + 0x7ff
  6722: 95 77 11 04              a0 = a0 + 0x411
  6726: 7b 67 28                 u64 [s1 + 0x28] = a0
  6729: 7b 19 20                 u64 [sp + 0x20] = a2
  6732: 7b 69 30                 u64 [s1 + 0x30] = a2
  6735: 33 07 d0 05 01           a0 = 0x105d0
  6740: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6744: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6749: 49 21 c0 01              u64 [sp + 448] = 0
  6753: 95 17 ff 07              a0 = sp + 0x7ff
  6757: 95 77 b9 03              a0 = a0 + 0x3b9
  6761: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  6765: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6770: 95 17 ff 07              a0 = sp + 0x7ff
  6774: 95 77 e9 03              a0 = a0 + 0x3e9
  6778: 95 18 a0 01              a1 = sp + 0x1a0
  6782: 50 20 94 00 6e 21        ra = 148, jump @802
      :                          @359 [@dyn 74]
  6788: 95 17 ff 07              a0 = sp + 0x7ff
  6792: 95 77 a1 03              a0 = a0 + 0x3a1
  6796: 82 76 50                 s1 = u64 [a0 + 0x50]
  6799: 82 7b 58                 a4 = u64 [a0 + 0x58]
  6802: 82 75 48                 s0 = u64 [a0 + 0x48]
  6805: 82 17 10                 a0 = u64 [sp + 0x10]
  6808: 33 08                    a1 = 0
  6810: 33 09                    a2 = 0
  6812: 64 6a                    a3 = s1
  6814: 33 00 96 00              ra = 0x96
  6818: 0a 64                    ecalli 100 // 'log'
  6820: 01                       fallthrough
      :                          @360 [@dyn 75]
  6821: 82 17 38                 a0 = u64 [sp + 0x38]
  6824: c8 57 07                 a0 = a0 + s0
  6827: 53 37 00 00 f0 25        jump @366 if a0 <u 4293918720
      :                          @361
  6833: 33 07 50 00 03           a0 = 0x30050
  6838: 95 77 00 00 10           a0 = a0 + 0x100000
  6843: 01                       fallthrough
      :                          @362
  6844: 82 78                    a1 = u64 [a0]
  6846: c9 87 09                 a2 = a0 - a1
  6849: ab 69 0f                 jump @366 if a2 != s1
      :                          @363
  6852: c9 58 09                 a2 = a1 - s0
  6855: 01                       fallthrough
      :                          @364
  6856: 82 7a                    a3 = u64 [a0]
  6858: ab 8a f2                 jump @362 if a3 != a1
      :                          @365
  6861: 7b 79                    u64 [a0] = a2
  6863: 01                       fallthrough
      :                          @366
  6864: 95 16 ff 07              s1 = sp + 0x7ff
  6868: 95 66 a1 03              s1 = s1 + 0x3a1
  6872: 82 67 70                 a0 = u64 [s1 + 0x70]
  6875: 33 08 01                 a1 = 0x1
  6878: 50 20 98 00 82 2e        ra = 152, jump @1079
      :                          @367 [@dyn 76]
  6884: 95 17 52                 a0 = sp + 0x52
  6887: 33 08 03                 a1 = 0x3
  6890: 95 19 55                 a2 = sp + 0x55
  6893: 33 0a 03                 a3 = 0x3
  6896: 0a 03                    ecalli 3 // 'write'
  6898: 95 18 48                 a1 = sp + 0x48
  6901: 7b 68 18                 u64 [s1 + 0x18] = a1
  6904: 95 18 ff 07              a1 = sp + 0x7ff
  6908: 95 88 19 04              a1 = a1 + 0x419
  6912: 7b 68 28                 u64 [s1 + 0x28] = a1
  6915: 82 18 20                 a1 = u64 [sp + 0x20]
  6918: 7b 68 20                 u64 [s1 + 0x20] = a1
  6921: 7b 68 30                 u64 [s1 + 0x30] = a1
  6924: 33 08 18 06 01           a1 = 0x10618
  6929: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  6933: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6938: 49 21 c0 01              u64 [sp + 448] = 0
  6942: 95 18 ff 07              a1 = sp + 0x7ff
  6946: 95 88 b9 03              a1 = a1 + 0x3b9
  6950: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  6954: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6959: 7b 67 78                 u64 [s1 + 0x78] = a0
  6962: 95 77 01                 a0 = a0 + 0x1
  6965: 88 77 01                 a0 = a0 <u 0x1
  6968: 97 77 01                 a0 = a0 << 0x1
  6971: 7b 17 20                 u64 [sp + 0x20] = a0
  6974: 95 17 ff 07              a0 = sp + 0x7ff
  6978: 95 77 e9 03              a0 = a0 + 0x3e9
  6982: 95 18 a0 01              a1 = sp + 0x1a0
  6986: 50 20 9a 00 a2 20        ra = 154, jump @802
      :                          @368 [@dyn 77]
  6992: 82 65 50                 s0 = u64 [s1 + 0x50]
  6995: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6998: 82 66 48                 s1 = u64 [s1 + 0x48]
  7001: 82 17 20                 a0 = u64 [sp + 0x20]
  7004: 33 08                    a1 = 0
  7006: 33 09                    a2 = 0
  7008: 64 5a                    a3 = s0
  7010: 33 00 9c 00              ra = 0x9c
  7014: 0a 64                    ecalli 100 // 'log'
  7016: 01                       fallthrough
      :                          @369 [@dyn 78]
  7017: 82 17 38                 a0 = u64 [sp + 0x38]
  7020: c8 67 07                 a0 = a0 + s1
  7023: 53 37 00 00 f0 25        jump @375 if a0 <u 4293918720
      :                          @370
  7029: 33 07 50 00 03           a0 = 0x30050
  7034: 95 77 00 00 10           a0 = a0 + 0x100000
  7039: 01                       fallthrough
      :                          @371
  7040: 82 78                    a1 = u64 [a0]
  7042: c9 87 09                 a2 = a0 - a1
  7045: ab 59 0f                 jump @375 if a2 != s0
      :                          @372
  7048: c9 68 09                 a2 = a1 - s1
  7051: 01                       fallthrough
      :                          @373
  7052: 82 7a                    a3 = u64 [a0]
  7054: ab 8a f2                 jump @371 if a3 != a1
      :                          @374
  7057: 7b 79                    u64 [a0] = a2
  7059: 01                       fallthrough
      :                          @375
  7060: 95 15 ff 07              s0 = sp + 0x7ff
  7064: 95 55 a1 03              s0 = s0 + 0x3a1
  7068: 82 57 78                 a0 = u64 [s0 + 0x78]
  7071: 33 08 02                 a1 = 0x2
  7074: 33 06 02                 s1 = 0x2
  7077: 50 20 9e 00 bb 2d        ra = 158, jump @1079
      :                          @376 [@dyn 79]
  7083: 95 18 52                 a1 = sp + 0x52
  7086: 33 09 03                 a2 = 0x3
  7089: 95 1a 98 00              a3 = sp + 0x98
  7093: 33 0c 00 01              a5 = 0x100
  7097: 82 17 30                 a0 = u64 [sp + 0x30]
  7100: 33 0b                    a4 = 0
  7102: 0a 02                    ecalli 2 // 'read'
  7104: 7b 57 80 00              u64 [s0 + 0x80] = a0
  7108: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7111: 88 77 01                 a0 = a0 <u 0x1
  7114: 97 77 01                 a0 = a0 << 0x1
  7117: 7b 17 10                 u64 [sp + 0x10] = a0
  7120: 95 17 48                 a0 = sp + 0x48
  7123: 7b 57 18                 u64 [s0 + 0x18] = a0
  7126: 33 09 16                 a2 = 0x16
  7129: 7b 59 20                 u64 [s0 + 0x20] = a2
  7132: 95 17 ff 07              a0 = sp + 0x7ff
  7136: 95 77 21 04              a0 = a0 + 0x421
  7140: 7b 57 28                 u64 [s0 + 0x28] = a0
  7143: 7b 19 20                 u64 [sp + 0x20] = a2
  7146: 7b 59 30                 u64 [s0 + 0x30] = a2
  7149: 33 07 60 06 01           a0 = 0x10660
  7154: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7158: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7163: 49 21 c0 01              u64 [sp + 448] = 0
  7167: 95 17 ff 07              a0 = sp + 0x7ff
  7171: 95 77 b9 03              a0 = a0 + 0x3b9
  7175: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7179: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  7183: 95 17 ff 07              a0 = sp + 0x7ff
  7187: 95 77 e9 03              a0 = a0 + 0x3e9
  7191: 95 18 a0 01              a1 = sp + 0x1a0
  7195: 50 20 a0 00 d1 1f        ra = 160, jump @802
      :                          @377 [@dyn 80]
  7201: 82 56 50                 s1 = u64 [s0 + 0x50]
  7204: 82 5b 58                 a4 = u64 [s0 + 0x58]
  7207: 82 55 48                 s0 = u64 [s0 + 0x48]
  7210: 82 17 10                 a0 = u64 [sp + 0x10]
  7213: 33 08                    a1 = 0
  7215: 33 09                    a2 = 0
  7217: 64 6a                    a3 = s1
  7219: 33 00 a2 00              ra = 0xa2
  7223: 0a 64                    ecalli 100 // 'log'
  7225: 01                       fallthrough
      :                          @378 [@dyn 81]
  7226: 82 17 38                 a0 = u64 [sp + 0x38]
  7229: c8 57 07                 a0 = a0 + s0
  7232: 53 37 00 00 f0 25        jump @384 if a0 <u 4293918720
      :                          @379
  7238: 33 07 50 00 03           a0 = 0x30050
  7243: 95 77 00 00 10           a0 = a0 + 0x100000
  7248: 01                       fallthrough
      :                          @380
  7249: 82 78                    a1 = u64 [a0]
  7251: c9 87 09                 a2 = a0 - a1
  7254: ab 69 0f                 jump @384 if a2 != s1
      :                          @381
  7257: c9 58 09                 a2 = a1 - s0
  7260: 01                       fallthrough
      :                          @382
  7261: 82 7a                    a3 = u64 [a0]
  7263: ab 8a f2                 jump @380 if a3 != a1
      :                          @383
  7266: 7b 79                    u64 [a0] = a2
  7268: 01                       fallthrough
      :                          @384
  7269: 95 16 ff 07              s1 = sp + 0x7ff
  7273: 95 66 a1 03              s1 = s1 + 0x3a1
  7277: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7281: 33 08 05                 a1 = 0x5
  7284: 50 20 a4 00 ec 2c        ra = 164, jump @1079
      :                          @385 [@dyn 82]
  7290: 95 17 52                 a0 = sp + 0x52
  7293: 33 08                    a1 = 0
  7295: 0a 0f                    ecalli 15 // 'forget'
  7297: 95 18 48                 a1 = sp + 0x48
  7300: 7b 68 18                 u64 [s1 + 0x18] = a1
  7303: 82 18 20                 a1 = u64 [sp + 0x20]
  7306: 7b 68 20                 u64 [s1 + 0x20] = a1
  7309: 7b 68 30                 u64 [s1 + 0x30] = a1
  7312: 33 08 c8 06 01           a1 = 0x106c8
  7317: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7321: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7326: 49 21 c0 01              u64 [sp + 448] = 0
  7330: 95 18 ff 07              a1 = sp + 0x7ff
  7334: 95 88 b9 03              a1 = a1 + 0x3b9
  7338: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7342: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7347: 7b 67                    u64 [s1] = a0
  7349: 95 77 09                 a0 = a0 + 0x9
  7352: 88 77 01                 a0 = a0 <u 0x1
  7355: 97 77 01                 a0 = a0 << 0x1
  7358: 7b 17 20                 u64 [sp + 0x20] = a0
  7361: 7b 66 28                 u64 [s1 + 0x28] = s1
  7364: 95 17 ff 07              a0 = sp + 0x7ff
  7368: 95 77 e9 03              a0 = a0 + 0x3e9
  7372: 95 18 a0 01              a1 = sp + 0x1a0
  7376: 50 20 a6 00 1c 1f        ra = 166, jump @802
      :                          @386 [@dyn 83]
  7382: 82 65 50                 s0 = u64 [s1 + 0x50]
  7385: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7388: 82 66 48                 s1 = u64 [s1 + 0x48]
  7391: 82 17 20                 a0 = u64 [sp + 0x20]
  7394: 33 08                    a1 = 0
  7396: 33 09                    a2 = 0
  7398: 64 5a                    a3 = s0
  7400: 33 00 a8 00              ra = 0xa8
  7404: 0a 64                    ecalli 100 // 'log'
  7406: 01                       fallthrough
      :                          @387 [@dyn 84]
  7407: 82 17 38                 a0 = u64 [sp + 0x38]
  7410: c8 67 07                 a0 = a0 + s1
  7413: 53 37 00 00 f0 25        jump @393 if a0 <u 4293918720
      :                          @388
  7419: 33 07 50 00 03           a0 = 0x30050
  7424: 95 77 00 00 10           a0 = a0 + 0x100000
  7429: 01                       fallthrough
      :                          @389
  7430: 82 78                    a1 = u64 [a0]
  7432: c9 87 09                 a2 = a0 - a1
  7435: ab 59 0f                 jump @393 if a2 != s0
      :                          @390
  7438: c9 68 09                 a2 = a1 - s1
  7441: 01                       fallthrough
      :                          @391
  7442: 82 7a                    a3 = u64 [a0]
  7444: ab 8a f2                 jump @389 if a3 != a1
      :                          @392
  7447: 7b 79                    u64 [a0] = a2
  7449: 01                       fallthrough
      :                          @393
  7450: 95 16 ff 07              s1 = sp + 0x7ff
  7454: 95 66 a1 03              s1 = s1 + 0x3a1
  7458: 82 67                    a0 = u64 [s1]
  7460: 33 08 06                 a1 = 0x6
  7463: 33 00 76 01              ra = 0x176
  7467: 28 35 2c                 jump @1079
      :                          @394 [@dyn 85]
  7470: 95 18 52                 a1 = sp + 0x52
  7473: 33 09 03                 a2 = 0x3
  7476: 95 1a 98 00              a3 = sp + 0x98
  7480: 33 0c 00 01              a5 = 0x100
  7484: 82 17 30                 a0 = u64 [sp + 0x30]
  7487: 33 0b                    a4 = 0
  7489: 0a 02                    ecalli 2 // 'read'
  7491: 7b 67 78                 u64 [s1 + 0x78] = a0
  7494: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7497: 88 77 01                 a0 = a0 <u 0x1
  7500: 97 77 01                 a0 = a0 << 0x1
  7503: 7b 17 10                 u64 [sp + 0x10] = a0
  7506: 95 17 48                 a0 = sp + 0x48
  7509: 7b 67 18                 u64 [s1 + 0x18] = a0
  7512: 33 09 16                 a2 = 0x16
  7515: 7b 69 20                 u64 [s1 + 0x20] = a2
  7518: 95 17 ff 07              a0 = sp + 0x7ff
  7522: 95 77 19 04              a0 = a0 + 0x419
  7526: 7b 67 28                 u64 [s1 + 0x28] = a0
  7529: 7b 19 20                 u64 [sp + 0x20] = a2
  7532: 7b 69 30                 u64 [s1 + 0x30] = a2
  7535: 33 07 08 07 01           a0 = 0x10708
  7540: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7544: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7549: 49 21 c0 01              u64 [sp + 448] = 0
  7553: 95 17 ff 07              a0 = sp + 0x7ff
  7557: 95 77 b9 03              a0 = a0 + 0x3b9
  7561: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7565: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7570: 95 17 ff 07              a0 = sp + 0x7ff
  7574: 95 77 e9 03              a0 = a0 + 0x3e9
  7578: 95 18 a0 01              a1 = sp + 0x1a0
  7582: 50 20 ac 00 4e 1e        ra = 172, jump @802
      :                          @395 [@dyn 86]
  7588: 95 17 ff 07              a0 = sp + 0x7ff
  7592: 95 77 a1 03              a0 = a0 + 0x3a1
  7596: 82 76 50                 s1 = u64 [a0 + 0x50]
  7599: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7602: 82 75 48                 s0 = u64 [a0 + 0x48]
  7605: 82 17 10                 a0 = u64 [sp + 0x10]
  7608: 33 08                    a1 = 0
  7610: 33 09                    a2 = 0
  7612: 64 6a                    a3 = s1
  7614: 33 00 ae 00              ra = 0xae
  7618: 0a 64                    ecalli 100 // 'log'
  7620: 01                       fallthrough
      :                          @396 [@dyn 87]
  7621: 82 17 38                 a0 = u64 [sp + 0x38]
  7624: c8 57 07                 a0 = a0 + s0
  7627: 53 37 00 00 f0 25        jump @402 if a0 <u 4293918720
      :                          @397
  7633: 33 07 50 00 03           a0 = 0x30050
  7638: 95 77 00 00 10           a0 = a0 + 0x100000
  7643: 01                       fallthrough
      :                          @398
  7644: 82 78                    a1 = u64 [a0]
  7646: c9 87 09                 a2 = a0 - a1
  7649: ab 69 0f                 jump @402 if a2 != s1
      :                          @399
  7652: c9 58 09                 a2 = a1 - s0
  7655: 01                       fallthrough
      :                          @400
  7656: 82 7a                    a3 = u64 [a0]
  7658: ab 8a f2                 jump @398 if a3 != a1
      :                          @401
  7661: 7b 79                    u64 [a0] = a2
  7663: 01                       fallthrough
      :                          @402
  7664: 95 16 ff 07              s1 = sp + 0x7ff
  7668: 95 66 a1 03              s1 = s1 + 0x3a1
  7672: 82 67 78                 a0 = u64 [s1 + 0x78]
  7675: 33 08 01                 a1 = 0x1
  7678: 50 20 b0 00 62 2b        ra = 176, jump @1079
      :                          @403 [@dyn 88]
  7684: 95 17 52                 a0 = sp + 0x52
  7687: 33 08 03                 a1 = 0x3
  7690: 33 09                    a2 = 0
  7692: 33 0a                    a3 = 0
  7694: 0a 03                    ecalli 3 // 'write'
  7696: 95 18 48                 a1 = sp + 0x48
  7699: 7b 68 18                 u64 [s1 + 0x18] = a1
  7702: 95 18 ff 07              a1 = sp + 0x7ff
  7706: 95 88 21 04              a1 = a1 + 0x421
  7710: 7b 68 28                 u64 [s1 + 0x28] = a1
  7713: 82 18 20                 a1 = u64 [sp + 0x20]
  7716: 7b 68 20                 u64 [s1 + 0x20] = a1
  7719: 7b 68 30                 u64 [s1 + 0x30] = a1
  7722: 33 08 68 07 01           a1 = 0x10768
  7727: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7731: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7736: 49 21 c0 01              u64 [sp + 448] = 0
  7740: 95 18 ff 07              a1 = sp + 0x7ff
  7744: 95 88 b9 03              a1 = a1 + 0x3b9
  7748: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7752: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7757: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7761: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7764: 88 77 01                 a0 = a0 <u 0x1
  7767: 97 77 01                 a0 = a0 << 0x1
  7770: 7b 17 20                 u64 [sp + 0x20] = a0
  7773: 95 17 ff 07              a0 = sp + 0x7ff
  7777: 95 77 e9 03              a0 = a0 + 0x3e9
  7781: 95 18 a0 01              a1 = sp + 0x1a0
  7785: 50 20 b2 00 83 1d        ra = 178, jump @802
      :                          @404 [@dyn 89]
  7791: 82 65 50                 s0 = u64 [s1 + 0x50]
  7794: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7797: 82 66 48                 s1 = u64 [s1 + 0x48]
  7800: 82 17 20                 a0 = u64 [sp + 0x20]
  7803: 33 08                    a1 = 0
  7805: 33 09                    a2 = 0
  7807: 64 5a                    a3 = s0
  7809: 33 00 b4 00              ra = 0xb4
  7813: 0a 64                    ecalli 100 // 'log'
  7815: 01                       fallthrough
      :                          @405 [@dyn 90]
  7816: 82 17 38                 a0 = u64 [sp + 0x38]
  7819: c8 67 07                 a0 = a0 + s1
  7822: 53 37 00 00 f0 25        jump @411 if a0 <u 4293918720
      :                          @406
  7828: 33 07 50 00 03           a0 = 0x30050
  7833: 95 77 00 00 10           a0 = a0 + 0x100000
  7838: 01                       fallthrough
      :                          @407
  7839: 82 78                    a1 = u64 [a0]
  7841: c9 87 09                 a2 = a0 - a1
  7844: ab 59 0f                 jump @411 if a2 != s0
      :                          @408
  7847: c9 68 09                 a2 = a1 - s1
  7850: 01                       fallthrough
      :                          @409
  7851: 82 7a                    a3 = u64 [a0]
  7853: ab 8a f2                 jump @407 if a3 != a1
      :                          @410
  7856: 7b 79                    u64 [a0] = a2
  7858: 01                       fallthrough
      :                          @411
  7859: 95 16 ff 07              s1 = sp + 0x7ff
  7863: 95 66 a1 03              s1 = s1 + 0x3a1
  7867: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7871: 33 08 02                 a1 = 0x2
  7874: 33 05 02                 s0 = 0x2
  7877: 50 20 b6 00 9b 2a        ra = 182, jump @1079
      :                          @412 [@dyn 91]
  7883: 95 18 52                 a1 = sp + 0x52
  7886: 33 09 03                 a2 = 0x3
  7889: 95 1a 98 00              a3 = sp + 0x98
  7893: 33 0c 00 01              a5 = 0x100
  7897: 82 17 30                 a0 = u64 [sp + 0x30]
  7900: 33 0b                    a4 = 0
  7902: 0a 02                    ecalli 2 // 'read'
  7904: 95 18 48                 a1 = sp + 0x48
  7907: 7b 68 18                 u64 [s1 + 0x18] = a1
  7910: 33 08 16                 a1 = 0x16
  7913: 7b 68 20                 u64 [s1 + 0x20] = a1
  7916: 7b 68 30                 u64 [s1 + 0x30] = a1
  7919: 33 08 98 07 01           a1 = 0x10798
  7924: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7928: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7933: 49 21 c0 01              u64 [sp + 448] = 0
  7937: 95 18 ff 07              a1 = sp + 0x7ff
  7941: 95 88 b9 03              a1 = a1 + 0x3b9
  7945: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7949: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  7953: 7b 67                    u64 [s1] = a0
  7955: 95 77 01                 a0 = a0 + 0x1
  7958: 88 77 01                 a0 = a0 <u 0x1
  7961: 97 77 01                 a0 = a0 << 0x1
  7964: 7b 17 20                 u64 [sp + 0x20] = a0
  7967: 7b 66 28                 u64 [s1 + 0x28] = s1
  7970: 95 17 ff 07              a0 = sp + 0x7ff
  7974: 95 77 e9 03              a0 = a0 + 0x3e9
  7978: 95 18 a0 01              a1 = sp + 0x1a0
  7982: 50 20 b8 00 be 1c        ra = 184, jump @802
      :                          @413 [@dyn 92]
  7988: 82 65 50                 s0 = u64 [s1 + 0x50]
  7991: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7994: 82 66 48                 s1 = u64 [s1 + 0x48]
  7997: 82 17 20                 a0 = u64 [sp + 0x20]
  8000: 33 08                    a1 = 0
  8002: 33 09                    a2 = 0
  8004: 64 5a                    a3 = s0
  8006: 33 00 ba 00              ra = 0xba
  8010: 0a 64                    ecalli 100 // 'log'
  8012: 01                       fallthrough
      :                          @414 [@dyn 93]
  8013: 82 17 38                 a0 = u64 [sp + 0x38]
  8016: c8 67 07                 a0 = a0 + s1
  8019: 53 37 00 00 f0 57 02     jump @448 if a0 <u 4293918720
      :                          @415
  8026: 33 07 50 00 03           a0 = 0x30050
  8031: 95 77 00 00 10           a0 = a0 + 0x100000
  8036: 01                       fallthrough
      :                          @416
  8037: 82 78                    a1 = u64 [a0]
  8039: c9 87 09                 a2 = a0 - a1
  8042: ab 59 40 02              jump @448 if a2 != s0
      :                          @417
  8046: c9 68 09                 a2 = a1 - s1
  8049: 01                       fallthrough
      :                          @418
  8050: 82 7a                    a3 = u64 [a0]
  8052: ab 8a f1                 jump @416 if a3 != a1
      :                          @419
  8055: 7b 79                    u64 [a0] = a2
  8057: 33 0b                    a4 = 0
  8059: 01                       fallthrough
      :                          @420
  8060: ab 8a e9                 jump @416 if a3 != a1
      :                          @421
  8063: 28 2b 02                 jump @448
      :                          @422 [@dyn 94]
  8066: 33 05 03                 s0 = 0x3
  8069: 95 17 58                 a0 = sp + 0x58
  8072: 33 08 03                 a1 = 0x3
  8075: 0a 0e                    ecalli 14 // 'solicit'
  8077: 7b 67 78                 u64 [s1 + 0x78] = a0
  8080: 88 77 01                 a0 = a0 <u 0x1
  8083: 97 77 01                 a0 = a0 << 0x1
  8086: 7b 17 10                 u64 [sp + 0x10] = a0
  8089: 95 17 48                 a0 = sp + 0x48
  8092: 7b 67 18                 u64 [s1 + 0x18] = a0
  8095: 33 08 16                 a1 = 0x16
  8098: 7b 68 20                 u64 [s1 + 0x20] = a1
  8101: 95 17 ff 07              a0 = sp + 0x7ff
  8105: 95 77 19 04              a0 = a0 + 0x419
  8109: 7b 67 28                 u64 [s1 + 0x28] = a0
  8112: 7b 18 20                 u64 [sp + 0x20] = a1
  8115: 7b 68 30                 u64 [s1 + 0x30] = a1
  8118: 33 07 f0 07 01           a0 = 0x107f0
  8123: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8127: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  8131: 49 21 c0 01              u64 [sp + 448] = 0
  8135: 95 17 ff 07              a0 = sp + 0x7ff
  8139: 95 77 b9 03              a0 = a0 + 0x3b9
  8143: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8147: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8152: 95 17 ff 07              a0 = sp + 0x7ff
  8156: 95 77 e9 03              a0 = a0 + 0x3e9
  8160: 95 18 a0 01              a1 = sp + 0x1a0
  8164: 50 20 be 00 08 1c        ra = 190, jump @802
      :                          @423 [@dyn 95]
  8170: 95 17 ff 07              a0 = sp + 0x7ff
  8174: 95 77 a1 03              a0 = a0 + 0x3a1
  8178: 82 76 50                 s1 = u64 [a0 + 0x50]
  8181: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8184: 82 75 48                 s0 = u64 [a0 + 0x48]
  8187: 82 17 10                 a0 = u64 [sp + 0x10]
  8190: 33 08                    a1 = 0
  8192: 33 09                    a2 = 0
  8194: 64 6a                    a3 = s1
  8196: 33 00 c0 00              ra = 0xc0
  8200: 0a 64                    ecalli 100 // 'log'
  8202: 01                       fallthrough
      :                          @424 [@dyn 96]
  8203: 82 17 38                 a0 = u64 [sp + 0x38]
  8206: c8 57 07                 a0 = a0 + s0
  8209: 53 37 00 00 f0 25        jump @430 if a0 <u 4293918720
      :                          @425
  8215: 33 07 50 00 03           a0 = 0x30050
  8220: 95 77 00 00 10           a0 = a0 + 0x100000
  8225: 01                       fallthrough
      :                          @426
  8226: 82 78                    a1 = u64 [a0]
  8228: c9 87 09                 a2 = a0 - a1
  8231: ab 69 0f                 jump @430 if a2 != s1
      :                          @427
  8234: c9 58 09                 a2 = a1 - s0
  8237: 01                       fallthrough
      :                          @428
  8238: 82 7a                    a3 = u64 [a0]
  8240: ab 8a f2                 jump @426 if a3 != a1
      :                          @429
  8243: 7b 79                    u64 [a0] = a2
  8245: 01                       fallthrough
      :                          @430
  8246: 95 16 ff 07              s1 = sp + 0x7ff
  8250: 95 66 a1 03              s1 = s1 + 0x3a1
  8254: 82 67 78                 a0 = u64 [s1 + 0x78]
  8257: 33 08 01                 a1 = 0x1
  8260: 50 20 c2 00 1c 29        ra = 194, jump @1079
      :                          @431 [@dyn 97]
  8266: 95 17 58                 a0 = sp + 0x58
  8269: 33 08 03                 a1 = 0x3
  8272: 0a 0d                    ecalli 13 // 'query'
  8274: 95 18 48                 a1 = sp + 0x48
  8277: 7b 68 18                 u64 [s1 + 0x18] = a1
  8280: 95 18 ff 07              a1 = sp + 0x7ff
  8284: 95 88 21 04              a1 = a1 + 0x421
  8288: 7b 68 28                 u64 [s1 + 0x28] = a1
  8291: 82 18 20                 a1 = u64 [sp + 0x20]
  8294: 7b 68 20                 u64 [s1 + 0x20] = a1
  8297: 7b 68 30                 u64 [s1 + 0x30] = a1
  8300: 33 08 50 08 01           a1 = 0x10850
  8305: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8309: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8314: 49 21 c0 01              u64 [sp + 448] = 0
  8318: 95 18 ff 07              a1 = sp + 0x7ff
  8322: 95 88 b9 03              a1 = a1 + 0x3b9
  8326: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8330: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8335: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8339: 88 77 01                 a0 = a0 <u 0x1
  8342: 97 77 01                 a0 = a0 << 0x1
  8345: 7b 17 20                 u64 [sp + 0x20] = a0
  8348: 95 17 ff 07              a0 = sp + 0x7ff
  8352: 95 77 e9 03              a0 = a0 + 0x3e9
  8356: 95 18 a0 01              a1 = sp + 0x1a0
  8360: 50 20 c4 00 44 1b        ra = 196, jump @802
      :                          @432 [@dyn 98]
  8366: 82 65 50                 s0 = u64 [s1 + 0x50]
  8369: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8372: 82 66 48                 s1 = u64 [s1 + 0x48]
  8375: 82 17 20                 a0 = u64 [sp + 0x20]
  8378: 33 08                    a1 = 0
  8380: 33 09                    a2 = 0
  8382: 64 5a                    a3 = s0
  8384: 33 00 c6 00              ra = 0xc6
  8388: 0a 64                    ecalli 100 // 'log'
  8390: 01                       fallthrough
      :                          @433 [@dyn 99]
  8391: 82 17 38                 a0 = u64 [sp + 0x38]
  8394: c8 67 07                 a0 = a0 + s1
  8397: 53 37 00 00 f0 25        jump @439 if a0 <u 4293918720
      :                          @434
  8403: 33 07 50 00 03           a0 = 0x30050
  8408: 95 77 00 00 10           a0 = a0 + 0x100000
  8413: 01                       fallthrough
      :                          @435
  8414: 82 78                    a1 = u64 [a0]
  8416: c9 87 09                 a2 = a0 - a1
  8419: ab 59 0f                 jump @439 if a2 != s0
      :                          @436
  8422: c9 68 09                 a2 = a1 - s1
  8425: 01                       fallthrough
      :                          @437
  8426: 82 7a                    a3 = u64 [a0]
  8428: ab 8a f2                 jump @435 if a3 != a1
      :                          @438
  8431: 7b 79                    u64 [a0] = a2
  8433: 01                       fallthrough
      :                          @439
  8434: 95 16 ff 07              s1 = sp + 0x7ff
  8438: 95 66 a1 03              s1 = s1 + 0x3a1
  8442: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8446: 33 08 02                 a1 = 0x2
  8449: 33 05 02                 s0 = 0x2
  8452: 50 20 c8 00 5c 28        ra = 200, jump @1079
      :                          @440 [@dyn 100]
  8458: 95 17 78                 a0 = sp + 0x78
  8461: 33 08 03                 a1 = 0x3
  8464: 0a 0d                    ecalli 13 // 'query'
  8466: 95 18 48                 a1 = sp + 0x48
  8469: 7b 68 18                 u64 [s1 + 0x18] = a1
  8472: 33 08 16                 a1 = 0x16
  8475: 7b 68 20                 u64 [s1 + 0x20] = a1
  8478: 7b 68 30                 u64 [s1 + 0x30] = a1
  8481: 33 08 98 08 01           a1 = 0x10898
  8486: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8490: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8495: 49 21 c0 01              u64 [sp + 448] = 0
  8499: 95 18 ff 07              a1 = sp + 0x7ff
  8503: 95 88 b9 03              a1 = a1 + 0x3b9
  8507: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8511: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  8515: 7b 67                    u64 [s1] = a0
  8517: 95 77 01                 a0 = a0 + 0x1
  8520: 88 77 01                 a0 = a0 <u 0x1
  8523: 97 77 01                 a0 = a0 << 0x1
  8526: 7b 17 20                 u64 [sp + 0x20] = a0
  8529: 7b 66 28                 u64 [s1 + 0x28] = s1
  8532: 95 17 ff 07              a0 = sp + 0x7ff
  8536: 95 77 e9 03              a0 = a0 + 0x3e9
  8540: 95 18 a0 01              a1 = sp + 0x1a0
  8544: 50 20 ca 00 8c 1a        ra = 202, jump @802
      :                          @441 [@dyn 101]
  8550: 82 65 50                 s0 = u64 [s1 + 0x50]
  8553: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8556: 82 66 48                 s1 = u64 [s1 + 0x48]
  8559: 82 17 20                 a0 = u64 [sp + 0x20]
  8562: 33 08                    a1 = 0
  8564: 33 09                    a2 = 0
  8566: 64 5a                    a3 = s0
  8568: 33 00 cc 00              ra = 0xcc
  8572: 0a 64                    ecalli 100 // 'log'
  8574: 01                       fallthrough
      :                          @442 [@dyn 102]
  8575: 82 17 38                 a0 = u64 [sp + 0x38]
  8578: c8 67 07                 a0 = a0 + s1
  8581: 53 37 00 00 f0 25        jump @448 if a0 <u 4293918720
      :                          @443
  8587: 33 07 50 00 03           a0 = 0x30050
  8592: 95 77 00 00 10           a0 = a0 + 0x100000
  8597: 01                       fallthrough
      :                          @444
  8598: 82 78                    a1 = u64 [a0]
  8600: c9 87 09                 a2 = a0 - a1
  8603: ab 59 0f                 jump @448 if a2 != s0
      :                          @445
  8606: c9 68 09                 a2 = a1 - s1
  8609: 01                       fallthrough
      :                          @446
  8610: 82 7a                    a3 = u64 [a0]
  8612: ab 8a f2                 jump @444 if a3 != a1
      :                          @447
  8615: 7b 79                    u64 [a0] = a2
  8617: 01                       fallthrough
      :                          @448
  8618: 95 16 ff 07              s1 = sp + 0x7ff
  8622: 95 66 a1 03              s1 = s1 + 0x3a1
  8626: 82 67                    a0 = u64 [s1]
  8628: 33 08 05                 a1 = 0x5
  8631: 33 00 76 01              ra = 0x176
  8635: 28 a5 27                 jump @1079
      :                          @449 [@dyn 103]
  8638: 33 05 03                 s0 = 0x3
  8641: 95 17 58                 a0 = sp + 0x58
  8644: 33 08 03                 a1 = 0x3
  8647: 0a 0f                    ecalli 15 // 'forget'
  8649: 7b 67 68                 u64 [s1 + 0x68] = a0
  8652: 88 77 01                 a0 = a0 <u 0x1
  8655: 97 77 01                 a0 = a0 << 0x1
  8658: 7b 17 10                 u64 [sp + 0x10] = a0
  8661: 95 17 48                 a0 = sp + 0x48
  8664: 7b 67 18                 u64 [s1 + 0x18] = a0
  8667: 33 08 16                 a1 = 0x16
  8670: 7b 68 20                 u64 [s1 + 0x20] = a1
  8673: 95 17 ff 07              a0 = sp + 0x7ff
  8677: 95 77 09 04              a0 = a0 + 0x409
  8681: 7b 67 28                 u64 [s1 + 0x28] = a0
  8684: 7b 18 20                 u64 [sp + 0x20] = a1
  8687: 7b 68 30                 u64 [s1 + 0x30] = a1
  8690: 33 07 e0 08 01           a0 = 0x108e0
  8695: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8699: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  8703: 49 21 c0 01              u64 [sp + 448] = 0
  8707: 95 17 ff 07              a0 = sp + 0x7ff
  8711: 95 77 b9 03              a0 = a0 + 0x3b9
  8715: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8719: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8724: 95 17 ff 07              a0 = sp + 0x7ff
  8728: 95 77 e9 03              a0 = a0 + 0x3e9
  8732: 95 18 a0 01              a1 = sp + 0x1a0
  8736: 50 20 d0 00 cc 19        ra = 208, jump @802
      :                          @450 [@dyn 104]
  8742: 95 17 ff 07              a0 = sp + 0x7ff
  8746: 95 77 a1 03              a0 = a0 + 0x3a1
  8750: 82 76 50                 s1 = u64 [a0 + 0x50]
  8753: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8756: 82 75 48                 s0 = u64 [a0 + 0x48]
  8759: 82 17 10                 a0 = u64 [sp + 0x10]
  8762: 33 08                    a1 = 0
  8764: 33 09                    a2 = 0
  8766: 64 6a                    a3 = s1
  8768: 33 00 d2 00              ra = 0xd2
  8772: 0a 64                    ecalli 100 // 'log'
  8774: 01                       fallthrough
      :                          @451 [@dyn 105]
  8775: 82 17 38                 a0 = u64 [sp + 0x38]
  8778: c8 57 07                 a0 = a0 + s0
  8781: 53 37 00 00 f0 25        jump @457 if a0 <u 4293918720
      :                          @452
  8787: 33 07 50 00 03           a0 = 0x30050
  8792: 95 77 00 00 10           a0 = a0 + 0x100000
  8797: 01                       fallthrough
      :                          @453
  8798: 82 78                    a1 = u64 [a0]
  8800: c9 87 09                 a2 = a0 - a1
  8803: ab 69 0f                 jump @457 if a2 != s1
      :                          @454
  8806: c9 58 09                 a2 = a1 - s0
  8809: 01                       fallthrough
      :                          @455
  8810: 82 7a                    a3 = u64 [a0]
  8812: ab 8a f2                 jump @453 if a3 != a1
      :                          @456
  8815: 7b 79                    u64 [a0] = a2
  8817: 01                       fallthrough
      :                          @457
  8818: 95 16 ff 07              s1 = sp + 0x7ff
  8822: 95 66 a1 03              s1 = s1 + 0x3a1
  8826: 82 67 68                 a0 = u64 [s1 + 0x68]
  8829: 33 08 01                 a1 = 0x1
  8832: 50 20 d4 00 e0 26        ra = 212, jump @1079
      :                          @458 [@dyn 106]
  8838: 95 17 58                 a0 = sp + 0x58
  8841: 33 08 03                 a1 = 0x3
  8844: 0a 0d                    ecalli 13 // 'query'
  8846: 95 18 48                 a1 = sp + 0x48
  8849: 7b 68 18                 u64 [s1 + 0x18] = a1
  8852: 95 18 ff 07              a1 = sp + 0x7ff
  8856: 95 88 11 04              a1 = a1 + 0x411
  8860: 7b 68 28                 u64 [s1 + 0x28] = a1
  8863: 82 18 20                 a1 = u64 [sp + 0x20]
  8866: 7b 68 20                 u64 [s1 + 0x20] = a1
  8869: 7b 68 30                 u64 [s1 + 0x30] = a1
  8872: 33 08 28 09 01           a1 = 0x10928
  8877: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8881: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8886: 49 21 c0 01              u64 [sp + 448] = 0
  8890: 95 18 ff 07              a1 = sp + 0x7ff
  8894: 95 88 b9 03              a1 = a1 + 0x3b9
  8898: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8902: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8907: 7b 67 70                 u64 [s1 + 0x70] = a0
  8910: 8e 77                    a0 = a0 >u 0
  8912: 97 77 01                 a0 = a0 << 0x1
  8915: 7b 17 20                 u64 [sp + 0x20] = a0
  8918: 95 17 ff 07              a0 = sp + 0x7ff
  8922: 95 77 e9 03              a0 = a0 + 0x3e9
  8926: 95 18 a0 01              a1 = sp + 0x1a0
  8930: 50 20 d6 00 0a 19        ra = 214, jump @802
      :                          @459 [@dyn 107]
  8936: 82 65 50                 s0 = u64 [s1 + 0x50]
  8939: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8942: 82 66 48                 s1 = u64 [s1 + 0x48]
  8945: 82 17 20                 a0 = u64 [sp + 0x20]
  8948: 33 08                    a1 = 0
  8950: 33 09                    a2 = 0
  8952: 64 5a                    a3 = s0
  8954: 33 00 d8 00              ra = 0xd8
  8958: 0a 64                    ecalli 100 // 'log'
  8960: 01                       fallthrough
      :                          @460 [@dyn 108]
  8961: 82 17 38                 a0 = u64 [sp + 0x38]
  8964: c8 67 07                 a0 = a0 + s1
  8967: 53 37 00 00 f0 25        jump @466 if a0 <u 4293918720
      :                          @461
  8973: 33 07 50 00 03           a0 = 0x30050
  8978: 95 77 00 00 10           a0 = a0 + 0x100000
  8983: 01                       fallthrough
      :                          @462
  8984: 82 78                    a1 = u64 [a0]
  8986: c9 87 09                 a2 = a0 - a1
  8989: ab 59 0f                 jump @466 if a2 != s0
      :                          @463
  8992: c9 68 09                 a2 = a1 - s1
  8995: 01                       fallthrough
      :                          @464
  8996: 82 7a                    a3 = u64 [a0]
  8998: ab 8a f2                 jump @462 if a3 != a1
      :                          @465
  9001: 7b 79                    u64 [a0] = a2
  9003: 01                       fallthrough
      :                          @466
  9004: 95 15 ff 07              s0 = sp + 0x7ff
  9008: 95 55 a1 03              s0 = s0 + 0x3a1
  9012: 82 57 70                 a0 = u64 [s0 + 0x70]
  9015: 33 08 02                 a1 = 0x2
  9018: 33 06 02                 s1 = 0x2
  9021: 50 20 da 00 23 26        ra = 218, jump @1079
      :                          @467 [@dyn 109]
  9027: 95 18 78                 a1 = sp + 0x78
  9030: 95 19 98 00              a2 = sp + 0x98
  9034: 33 0b 03                 a4 = 0x3
  9037: 82 17 30                 a0 = u64 [sp + 0x30]
  9040: 33 0a                    a3 = 0
  9042: 0a 01                    ecalli 1 // 'lookup'
  9044: 7b 57 78                 u64 [s0 + 0x78] = a0
  9047: 95 77 01                 a0 = a0 + 0x1
  9050: 88 77 01                 a0 = a0 <u 0x1
  9053: 97 77 01                 a0 = a0 << 0x1
  9056: 7b 17 10                 u64 [sp + 0x10] = a0
  9059: 95 17 48                 a0 = sp + 0x48
  9062: 7b 57 18                 u64 [s0 + 0x18] = a0
  9065: 33 09 16                 a2 = 0x16
  9068: 7b 59 20                 u64 [s0 + 0x20] = a2
  9071: 95 17 ff 07              a0 = sp + 0x7ff
  9075: 95 77 19 04              a0 = a0 + 0x419
  9079: 7b 57 28                 u64 [s0 + 0x28] = a0
  9082: 7b 19 20                 u64 [sp + 0x20] = a2
  9085: 7b 59 30                 u64 [s0 + 0x30] = a2
  9088: 33 07 70 09 01           a0 = 0x10970
  9093: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9097: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9102: 49 21 c0 01              u64 [sp + 448] = 0
  9106: 95 17 ff 07              a0 = sp + 0x7ff
  9110: 95 77 b9 03              a0 = a0 + 0x3b9
  9114: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9118: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  9122: 95 17 ff 07              a0 = sp + 0x7ff
  9126: 95 77 e9 03              a0 = a0 + 0x3e9
  9130: 95 18 a0 01              a1 = sp + 0x1a0
  9134: 50 20 dc 00 3e 18        ra = 220, jump @802
      :                          @468 [@dyn 110]
  9140: 82 56 50                 s1 = u64 [s0 + 0x50]
  9143: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9146: 82 55 48                 s0 = u64 [s0 + 0x48]
  9149: 82 17 10                 a0 = u64 [sp + 0x10]
  9152: 33 08                    a1 = 0
  9154: 33 09                    a2 = 0
  9156: 64 6a                    a3 = s1
  9158: 33 00 de 00              ra = 0xde
  9162: 0a 64                    ecalli 100 // 'log'
  9164: 01                       fallthrough
      :                          @469 [@dyn 111]
  9165: 82 17 38                 a0 = u64 [sp + 0x38]
  9168: c8 57 07                 a0 = a0 + s0
  9171: 53 37 00 00 f0 25        jump @475 if a0 <u 4293918720
      :                          @470
  9177: 33 07 50 00 03           a0 = 0x30050
  9182: 95 77 00 00 10           a0 = a0 + 0x100000
  9187: 01                       fallthrough
      :                          @471
  9188: 82 78                    a1 = u64 [a0]
  9190: c9 87 09                 a2 = a0 - a1
  9193: ab 69 0f                 jump @475 if a2 != s1
      :                          @472
  9196: c9 58 09                 a2 = a1 - s0
  9199: 01                       fallthrough
      :                          @473
  9200: 82 7a                    a3 = u64 [a0]
  9202: ab 8a f2                 jump @471 if a3 != a1
      :                          @474
  9205: 7b 79                    u64 [a0] = a2
  9207: 01                       fallthrough
      :                          @475
  9208: 95 16 ff 07              s1 = sp + 0x7ff
  9212: 95 66 a1 03              s1 = s1 + 0x3a1
  9216: 82 67 78                 a0 = u64 [s1 + 0x78]
  9219: 33 08 05                 a1 = 0x5
  9222: 50 20 e0 00 5a 25        ra = 224, jump @1079
      :                          @476 [@dyn 112]
  9228: 33 07 e8 03              a0 = 0x3e8
  9232: 95 18 52                 a1 = sp + 0x52
  9235: 0a 06                    ecalli 6 // 'assign'
  9237: 95 18 48                 a1 = sp + 0x48
  9240: 7b 68 18                 u64 [s1 + 0x18] = a1
  9243: 95 18 ff 07              a1 = sp + 0x7ff
  9247: 95 88 21 04              a1 = a1 + 0x421
  9251: 7b 68 28                 u64 [s1 + 0x28] = a1
  9254: 82 18 20                 a1 = u64 [sp + 0x20]
  9257: 7b 68 20                 u64 [s1 + 0x20] = a1
  9260: 7b 68 30                 u64 [s1 + 0x30] = a1
  9263: 33 08 c0 09 01           a1 = 0x109c0
  9268: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9272: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9277: 49 21 c0 01              u64 [sp + 448] = 0
  9281: 95 18 ff 07              a1 = sp + 0x7ff
  9285: 95 88 b9 03              a1 = a1 + 0x3b9
  9289: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9293: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9298: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9302: 95 77 06                 a0 = a0 + 0x6
  9305: 88 77 01                 a0 = a0 <u 0x1
  9308: 97 77 01                 a0 = a0 << 0x1
  9311: 7b 17 20                 u64 [sp + 0x20] = a0
  9314: 95 17 ff 07              a0 = sp + 0x7ff
  9318: 95 77 e9 03              a0 = a0 + 0x3e9
  9322: 95 18 a0 01              a1 = sp + 0x1a0
  9326: 50 20 e2 00 7e 17        ra = 226, jump @802
      :                          @477 [@dyn 113]
  9332: 82 65 50                 s0 = u64 [s1 + 0x50]
  9335: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9338: 82 66 48                 s1 = u64 [s1 + 0x48]
  9341: 82 17 20                 a0 = u64 [sp + 0x20]
  9344: 33 08                    a1 = 0
  9346: 33 09                    a2 = 0
  9348: 64 5a                    a3 = s0
  9350: 33 00 e4 00              ra = 0xe4
  9354: 0a 64                    ecalli 100 // 'log'
  9356: 01                       fallthrough
      :                          @478 [@dyn 114]
  9357: 82 17 38                 a0 = u64 [sp + 0x38]
  9360: c8 67 07                 a0 = a0 + s1
  9363: 53 37 00 00 f0 25        jump @484 if a0 <u 4293918720
      :                          @479
  9369: 33 07 50 00 03           a0 = 0x30050
  9374: 95 77 00 00 10           a0 = a0 + 0x100000
  9379: 01                       fallthrough
      :                          @480
  9380: 82 78                    a1 = u64 [a0]
  9382: c9 87 09                 a2 = a0 - a1
  9385: ab 59 0f                 jump @484 if a2 != s0
      :                          @481
  9388: c9 68 09                 a2 = a1 - s1
  9391: 01                       fallthrough
      :                          @482
  9392: 82 7a                    a3 = u64 [a0]
  9394: ab 8a f2                 jump @480 if a3 != a1
      :                          @483
  9397: 7b 79                    u64 [a0] = a2
  9399: 01                       fallthrough
      :                          @484
  9400: 95 15 ff 07              s0 = sp + 0x7ff
  9404: 95 55 a1 03              s0 = s0 + 0x3a1
  9408: 82 57 80 00              a0 = u64 [s0 + 0x80]
  9412: 33 08 06                 a1 = 0x6
  9415: 50 20 e6 00 99 24        ra = 230, jump @1079
      :                          @485 [@dyn 115]
  9421: 33 07 9a 02              a0 = 0x29a
  9425: 95 18 58                 a1 = sp + 0x58
  9428: 33 09 03                 a2 = 0x3
  9431: 0a 1b                    ecalli 27 // 'provide'
  9433: 7b 17 20                 u64 [sp + 0x20] = a0
  9436: 95 77 04                 a0 = a0 + 0x4
  9439: 88 77 01                 a0 = a0 <u 0x1
  9442: 97 77 01                 a0 = a0 << 0x1
  9445: 7b 17 08                 u64 [sp + 0x8] = a0
  9448: 95 17 ff 07              a0 = sp + 0x7ff
  9452: 95 77 11 04              a0 = a0 + 0x411
  9456: 7b 57 48                 u64 [s0 + 0x48] = a0
  9459: 33 07 16                 a0 = 0x16
  9462: 7b 17 10                 u64 [sp + 0x10] = a0
  9465: 7b 57 50                 u64 [s0 + 0x50] = a0
  9468: 33 07 28 0a 01           a0 = 0x10a28
  9473: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9477: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9482: 49 21 c0 01              u64 [sp + 448] = 0
  9486: 95 17 ff 07              a0 = sp + 0x7ff
  9490: 95 77 e9 03              a0 = a0 + 0x3e9
  9494: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9498: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9503: 95 17 ff 07              a0 = sp + 0x7ff
  9507: 95 77 b9 03              a0 = a0 + 0x3b9
  9511: 95 18 a0 01              a1 = sp + 0x1a0
  9515: 50 20 e8 00 c1 16        ra = 232, jump @802
      :                          @486 [@dyn 116]
  9521: 82 56 20                 s1 = u64 [s0 + 0x20]
  9524: 82 5b 28                 a4 = u64 [s0 + 0x28]
  9527: 82 55 18                 s0 = u64 [s0 + 0x18]
  9530: 82 17 08                 a0 = u64 [sp + 0x8]
  9533: 33 08                    a1 = 0
  9535: 33 09                    a2 = 0
  9537: 64 6a                    a3 = s1
  9539: 33 00 ea 00              ra = 0xea
  9543: 0a 64                    ecalli 100 // 'log'
  9545: 01                       fallthrough
      :                          @487 [@dyn 117]
  9546: 82 17 38                 a0 = u64 [sp + 0x38]
  9549: c8 57 07                 a0 = a0 + s0
  9552: 53 37 00 00 f0 25        jump @493 if a0 <u 4293918720
      :                          @488
  9558: 33 07 50 00 03           a0 = 0x30050
  9563: 95 77 00 00 10           a0 = a0 + 0x100000
  9568: 01                       fallthrough
      :                          @489
  9569: 82 78                    a1 = u64 [a0]
  9571: c9 87 09                 a2 = a0 - a1
  9574: ab 69 0f                 jump @493 if a2 != s1
      :                          @490
  9577: c9 58 09                 a2 = a1 - s0
  9580: 01                       fallthrough
      :                          @491
  9581: 82 7a                    a3 = u64 [a0]
  9583: ab 8a f2                 jump @489 if a3 != a1
      :                          @492
  9586: 7b 79                    u64 [a0] = a2
  9588: 01                       fallthrough
      :                          @493
  9589: 33 08 07                 a1 = 0x7
  9592: 82 17 20                 a0 = u64 [sp + 0x20]
  9595: 50 20 ec 00 e5 23        ra = 236, jump @1079
      :                          @494 [@dyn 118]
  9601: 95 18 58                 a1 = sp + 0x58
  9604: 33 09 03                 a2 = 0x3
  9607: 82 17 30                 a0 = u64 [sp + 0x30]
  9610: 0a 1b                    ecalli 27 // 'provide'
  9612: 95 16 ff 07              s1 = sp + 0x7ff
  9616: 95 66 a1 03              s1 = s1 + 0x3a1
  9620: 82 18 10                 a1 = u64 [sp + 0x10]
  9623: 7b 68 50                 u64 [s1 + 0x50] = a1
  9626: 33 08 80 0a 01           a1 = 0x10a80
  9631: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9635: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9640: 49 21 c0 01              u64 [sp + 448] = 0
  9644: 95 18 ff 07              a1 = sp + 0x7ff
  9648: 95 88 e9 03              a1 = a1 + 0x3e9
  9652: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9656: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9661: 7b 67                    u64 [s1] = a0
  9663: 88 77 01                 a0 = a0 <u 0x1
  9666: 97 77 01                 a0 = a0 << 0x1
  9669: 7b 17 10                 u64 [sp + 0x10] = a0
  9672: 7b 66 48                 u64 [s1 + 0x48] = s1
  9675: 95 17 ff 07              a0 = sp + 0x7ff
  9679: 95 77 b9 03              a0 = a0 + 0x3b9
  9683: 95 18 a0 01              a1 = sp + 0x1a0
  9687: 50 20 ee 00 15 16        ra = 238, jump @802
      :                          @495 [@dyn 119]
  9693: 82 65 20                 s0 = u64 [s1 + 0x20]
  9696: 82 6b 28                 a4 = u64 [s1 + 0x28]
  9699: 82 66 18                 s1 = u64 [s1 + 0x18]
  9702: 82 17 10                 a0 = u64 [sp + 0x10]
  9705: 33 08                    a1 = 0
  9707: 33 09                    a2 = 0
  9709: 64 5a                    a3 = s0
  9711: 33 00 f0 00              ra = 0xf0
  9715: 0a 64                    ecalli 100 // 'log'
  9717: 01                       fallthrough
      :                          @496 [@dyn 120]
  9718: 82 17 38                 a0 = u64 [sp + 0x38]
  9721: c8 67 07                 a0 = a0 + s1
  9724: 53 37 00 00 f0 25        jump @502 if a0 <u 4293918720
      :                          @497
  9730: 33 07 50 00 03           a0 = 0x30050
  9735: 95 77 00 00 10           a0 = a0 + 0x100000
  9740: 01                       fallthrough
      :                          @498
  9741: 82 78                    a1 = u64 [a0]
  9743: c9 87 09                 a2 = a0 - a1
  9746: ab 59 0f                 jump @502 if a2 != s0
      :                          @499
  9749: c9 68 09                 a2 = a1 - s1
  9752: 01                       fallthrough
      :                          @500
  9753: 82 7a                    a3 = u64 [a0]
  9755: ab 8a f2                 jump @498 if a3 != a1
      :                          @501
  9758: 7b 79                    u64 [a0] = a2
  9760: 01                       fallthrough
      :                          @502
  9761: 33 08 08                 a1 = 0x8
  9764: 82 17 20                 a0 = u64 [sp + 0x20]
  9767: 50 20 f2 00 39 23        ra = 242, jump @1079
      :                          @503 [@dyn 121]
  9773: 95 16 ff 07              s1 = sp + 0x7ff
  9777: 95 66 a1 03              s1 = s1 + 0x3a1
  9781: 28 46 10                 jump @699
      :                          @504 [@dyn 122]
  9784: 33 05 03                 s0 = 0x3
  9787: 95 18 58                 a1 = sp + 0x58
  9790: 95 19 98 00              a2 = sp + 0x98
  9794: 33 0b 03                 a4 = 0x3
  9797: 82 17 30                 a0 = u64 [sp + 0x30]
  9800: 33 0a                    a3 = 0
  9802: 0a 01                    ecalli 1 // 'lookup'
  9804: 7b 17 98 01              u64 [sp + 0x198] = a0
  9808: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  9811: 88 77 01                 a0 = a0 <u 0x1
  9814: 97 77 01                 a0 = a0 << 0x1
  9817: 7b 17 10                 u64 [sp + 0x10] = a0
  9820: 95 17 48                 a0 = sp + 0x48
  9823: 7b 67 18                 u64 [s1 + 0x18] = a0
  9826: 33 08 16                 a1 = 0x16
  9829: 7b 68 20                 u64 [s1 + 0x20] = a1
  9832: 95 17 98 01              a0 = sp + 0x198
  9836: 7b 67 28                 u64 [s1 + 0x28] = a0
  9839: 7b 18 20                 u64 [sp + 0x20] = a1
  9842: 7b 68 30                 u64 [s1 + 0x30] = a1
  9845: 33 07 b8 0a 01           a0 = 0x10ab8
  9850: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9854: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  9858: 49 21 c0 01              u64 [sp + 448] = 0
  9862: 95 17 ff 07              a0 = sp + 0x7ff
  9866: 95 77 b9 03              a0 = a0 + 0x3b9
  9870: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9874: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9879: 95 17 ff 07              a0 = sp + 0x7ff
  9883: 95 77 e9 03              a0 = a0 + 0x3e9
  9887: 95 18 a0 01              a1 = sp + 0x1a0
  9891: 50 20 f6 00 49 15        ra = 246, jump @802
      :                          @505 [@dyn 123]
  9897: 95 17 ff 07              a0 = sp + 0x7ff
  9901: 95 77 a1 03              a0 = a0 + 0x3a1
  9905: 82 76 50                 s1 = u64 [a0 + 0x50]
  9908: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9911: 82 75 48                 s0 = u64 [a0 + 0x48]
  9914: 82 17 10                 a0 = u64 [sp + 0x10]
  9917: 33 08                    a1 = 0
  9919: 33 09                    a2 = 0
  9921: 64 6a                    a3 = s1
  9923: 33 00 f8 00              ra = 0xf8
  9927: 0a 64                    ecalli 100 // 'log'
  9929: 01                       fallthrough
      :                          @506 [@dyn 124]
  9930: 82 17 38                 a0 = u64 [sp + 0x38]
  9933: c8 57 07                 a0 = a0 + s0
  9936: 53 37 00 00 f0 25        jump @512 if a0 <u 4293918720
      :                          @507
  9942: 33 07 50 00 03           a0 = 0x30050
  9947: 95 77 00 00 10           a0 = a0 + 0x100000
  9952: 01                       fallthrough
      :                          @508
  9953: 82 78                    a1 = u64 [a0]
  9955: c9 87 09                 a2 = a0 - a1
  9958: ab 69 0f                 jump @512 if a2 != s1
      :                          @509
  9961: c9 58 09                 a2 = a1 - s0
  9964: 01                       fallthrough
      :                          @510
  9965: 82 7a                    a3 = u64 [a0]
  9967: ab 8a f2                 jump @508 if a3 != a1
      :                          @511
  9970: 7b 79                    u64 [a0] = a2
  9972: 01                       fallthrough
      :                          @512
  9973: 82 17 98 01              a0 = u64 [sp + 0x198]
  9977: 33 08 01                 a1 = 0x1
  9980: 50 20 fa 00 64 22        ra = 250, jump @1079
      :                          @513 [@dyn 125]
  9986: 95 17 58                 a0 = sp + 0x58
  9989: 33 08 03                 a1 = 0x3
  9992: 0a 0d                    ecalli 13 // 'query'
  9994: 95 16 ff 07              s1 = sp + 0x7ff
  9998: 95 66 a1 03              s1 = s1 + 0x3a1
 10002: 95 18 48                 a1 = sp + 0x48
 10005: 7b 68 18                 u64 [s1 + 0x18] = a1
 10008: 95 18 ff 07              a1 = sp + 0x7ff
 10012: 95 88 09 04              a1 = a1 + 0x409
 10016: 7b 68 28                 u64 [s1 + 0x28] = a1
 10019: 82 18 20                 a1 = u64 [sp + 0x20]
 10022: 7b 68 20                 u64 [s1 + 0x20] = a1
 10025: 7b 68 30                 u64 [s1 + 0x30] = a1
 10028: 33 08 28 09 01           a1 = 0x10928
 10033: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10037: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10042: 49 21 c0 01              u64 [sp + 448] = 0
 10046: 95 18 ff 07              a1 = sp + 0x7ff
 10050: 95 88 b9 03              a1 = a1 + 0x3b9
 10054: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10058: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10063: 7b 67 68                 u64 [s1 + 0x68] = a0
 10066: 8e 77                    a0 = a0 >u 0
 10068: 97 77 01                 a0 = a0 << 0x1
 10071: 7b 17 20                 u64 [sp + 0x20] = a0
 10074: 95 17 ff 07              a0 = sp + 0x7ff
 10078: 95 77 e9 03              a0 = a0 + 0x3e9
 10082: 95 18 a0 01              a1 = sp + 0x1a0
 10086: 50 20 fc 00 86 14        ra = 252, jump @802
      :                          @514 [@dyn 126]
 10092: 82 65 50                 s0 = u64 [s1 + 0x50]
 10095: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10098: 82 66 48                 s1 = u64 [s1 + 0x48]
 10101: 82 17 20                 a0 = u64 [sp + 0x20]
 10104: 33 08                    a1 = 0
 10106: 33 09                    a2 = 0
 10108: 64 5a                    a3 = s0
 10110: 33 00 fe 00              ra = 0xfe
 10114: 0a 64                    ecalli 100 // 'log'
 10116: 01                       fallthrough
      :                          @515 [@dyn 127]
 10117: 82 17 38                 a0 = u64 [sp + 0x38]
 10120: c8 67 07                 a0 = a0 + s1
 10123: 53 37 00 00 f0 25        jump @521 if a0 <u 4293918720
      :                          @516
 10129: 33 07 50 00 03           a0 = 0x30050
 10134: 95 77 00 00 10           a0 = a0 + 0x100000
 10139: 01                       fallthrough
      :                          @517
 10140: 82 78                    a1 = u64 [a0]
 10142: c9 87 09                 a2 = a0 - a1
 10145: ab 59 0f                 jump @521 if a2 != s0
      :                          @518
 10148: c9 68 09                 a2 = a1 - s1
 10151: 01                       fallthrough
      :                          @519
 10152: 82 7a                    a3 = u64 [a0]
 10154: ab 8a f2                 jump @517 if a3 != a1
      :                          @520
 10157: 7b 79                    u64 [a0] = a2
 10159: 01                       fallthrough
      :                          @521
 10160: 95 15 ff 07              s0 = sp + 0x7ff
 10164: 95 55 a1 03              s0 = s0 + 0x3a1
 10168: 82 57 68                 a0 = u64 [s0 + 0x68]
 10171: 33 08 02                 a1 = 0x2
 10174: 33 06 02                 s1 = 0x2
 10177: 50 20 00 01 9f 21        ra = 256, jump @1079
      :                          @522 [@dyn 128]
 10183: 95 18 58                 a1 = sp + 0x58
 10186: 82 17 30                 a0 = u64 [sp + 0x30]
 10189: 0a 0c                    ecalli 12 // 'eject'
 10191: 7b 57 70                 u64 [s0 + 0x70] = a0
 10194: 95 77 04                 a0 = a0 + 0x4
 10197: 88 77 01                 a0 = a0 <u 0x1
 10200: 97 77 01                 a0 = a0 << 0x1
 10203: 7b 17 10                 u64 [sp + 0x10] = a0
 10206: 95 17 48                 a0 = sp + 0x48
 10209: 7b 57 18                 u64 [s0 + 0x18] = a0
 10212: 33 08 16                 a1 = 0x16
 10215: 7b 58 20                 u64 [s0 + 0x20] = a1
 10218: 95 17 ff 07              a0 = sp + 0x7ff
 10222: 95 77 11 04              a0 = a0 + 0x411
 10226: 7b 57 28                 u64 [s0 + 0x28] = a0
 10229: 7b 18 20                 u64 [sp + 0x20] = a1
 10232: 7b 58 30                 u64 [s0 + 0x30] = a1
 10235: 33 07 00 0b 01           a0 = 0x10b00
 10240: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10244: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10249: 49 21 c0 01              u64 [sp + 448] = 0
 10253: 95 17 ff 07              a0 = sp + 0x7ff
 10257: 95 77 b9 03              a0 = a0 + 0x3b9
 10261: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10265: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 10269: 95 17 ff 07              a0 = sp + 0x7ff
 10273: 95 77 e9 03              a0 = a0 + 0x3e9
 10277: 95 18 a0 01              a1 = sp + 0x1a0
 10281: 50 20 02 01 c3 13        ra = 258, jump @802
      :                          @523 [@dyn 129]
 10287: 82 56 50                 s1 = u64 [s0 + 0x50]
 10290: 82 5b 58                 a4 = u64 [s0 + 0x58]
 10293: 82 55 48                 s0 = u64 [s0 + 0x48]
 10296: 82 17 10                 a0 = u64 [sp + 0x10]
 10299: 33 08                    a1 = 0
 10301: 33 09                    a2 = 0
 10303: 64 6a                    a3 = s1
 10305: 33 00 04 01              ra = 0x104
 10309: 0a 64                    ecalli 100 // 'log'
 10311: 01                       fallthrough
      :                          @524 [@dyn 130]
 10312: 82 17 38                 a0 = u64 [sp + 0x38]
 10315: c8 57 07                 a0 = a0 + s0
 10318: 53 37 00 00 f0 25        jump @530 if a0 <u 4293918720
      :                          @525
 10324: 33 07 50 00 03           a0 = 0x30050
 10329: 95 77 00 00 10           a0 = a0 + 0x100000
 10334: 01                       fallthrough
      :                          @526
 10335: 82 78                    a1 = u64 [a0]
 10337: c9 87 09                 a2 = a0 - a1
 10340: ab 69 0f                 jump @530 if a2 != s1
      :                          @527
 10343: c9 58 09                 a2 = a1 - s0
 10346: 01                       fallthrough
      :                          @528
 10347: 82 7a                    a3 = u64 [a0]
 10349: ab 8a f2                 jump @526 if a3 != a1
      :                          @529
 10352: 7b 79                    u64 [a0] = a2
 10354: 01                       fallthrough
      :                          @530
 10355: 95 16 ff 07              s1 = sp + 0x7ff
 10359: 95 66 a1 03              s1 = s1 + 0x3a1
 10363: 82 67 70                 a0 = u64 [s1 + 0x70]
 10366: 33 08 05                 a1 = 0x5
 10369: 50 20 06 01 df 20        ra = 262, jump @1079
      :                          @531 [@dyn 131]
 10375: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
 10385: 95 1a 58                 a3 = sp + 0x58
 10388: 33 08                    a1 = 0
 10390: 33 09                    a2 = 0
 10392: 33 0b                    a4 = 0
 10394: 0a 05                    ecalli 5 // 'bless'
 10396: 95 18 48                 a1 = sp + 0x48
 10399: 7b 68 18                 u64 [s1 + 0x18] = a1
 10402: 95 18 ff 07              a1 = sp + 0x7ff
 10406: 95 88 19 04              a1 = a1 + 0x419
 10410: 7b 68 28                 u64 [s1 + 0x28] = a1
 10413: 82 18 20                 a1 = u64 [sp + 0x20]
 10416: 7b 68 20                 u64 [s1 + 0x20] = a1
 10419: 7b 68 30                 u64 [s1 + 0x30] = a1
 10422: 33 08 30 0b 01           a1 = 0x10b30
 10427: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10431: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10436: 49 21 c0 01              u64 [sp + 448] = 0
 10440: 95 18 ff 07              a1 = sp + 0x7ff
 10444: 95 88 b9 03              a1 = a1 + 0x3b9
 10448: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10452: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10457: 7b 67 78                 u64 [s1 + 0x78] = a0
 10460: 95 77 04                 a0 = a0 + 0x4
 10463: 88 77 01                 a0 = a0 <u 0x1
 10466: 97 77 01                 a0 = a0 << 0x1
 10469: 7b 17 20                 u64 [sp + 0x20] = a0
 10472: 95 17 ff 07              a0 = sp + 0x7ff
 10476: 95 77 e9 03              a0 = a0 + 0x3e9
 10480: 95 18 a0 01              a1 = sp + 0x1a0
 10484: 50 20 08 01 f8 12        ra = 264, jump @802
      :                          @532 [@dyn 132]
 10490: 82 65 50                 s0 = u64 [s1 + 0x50]
 10493: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10496: 82 66 48                 s1 = u64 [s1 + 0x48]
 10499: 82 17 20                 a0 = u64 [sp + 0x20]
 10502: 33 08                    a1 = 0
 10504: 33 09                    a2 = 0
 10506: 64 5a                    a3 = s0
 10508: 33 00 0a 01              ra = 0x10a
 10512: 0a 64                    ecalli 100 // 'log'
 10514: 01                       fallthrough
      :                          @533 [@dyn 133]
 10515: 82 17 38                 a0 = u64 [sp + 0x38]
 10518: c8 67 07                 a0 = a0 + s1
 10521: 53 37 00 00 f0 25        jump @539 if a0 <u 4293918720
      :                          @534
 10527: 33 07 50 00 03           a0 = 0x30050
 10532: 95 77 00 00 10           a0 = a0 + 0x100000
 10537: 01                       fallthrough
      :                          @535
 10538: 82 78                    a1 = u64 [a0]
 10540: c9 87 09                 a2 = a0 - a1
 10543: ab 59 0f                 jump @539 if a2 != s0
      :                          @536
 10546: c9 68 09                 a2 = a1 - s1
 10549: 01                       fallthrough
      :                          @537
 10550: 82 7a                    a3 = u64 [a0]
 10552: ab 8a f2                 jump @535 if a3 != a1
      :                          @538
 10555: 7b 79                    u64 [a0] = a2
 10557: 01                       fallthrough
      :                          @539
 10558: 95 16 ff 07              s1 = sp + 0x7ff
 10562: 95 66 a1 03              s1 = s1 + 0x3a1
 10566: 82 67 78                 a0 = u64 [s1 + 0x78]
 10569: 33 08 06                 a1 = 0x6
 10572: 50 20 0c 01 14 20        ra = 268, jump @1079
      :                          @540 [@dyn 134]
 10578: 95 18 58                 a1 = sp + 0x58
 10581: 33 09 03                 a2 = 0x3
 10584: 82 17 30                 a0 = u64 [sp + 0x30]
 10587: 0a 1b                    ecalli 27 // 'provide'
 10589: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10593: 88 77 01                 a0 = a0 <u 0x1
 10596: 97 77 01                 a0 = a0 << 0x1
 10599: 7b 17 10                 u64 [sp + 0x10] = a0
 10602: 95 17 ff 07              a0 = sp + 0x7ff
 10606: 95 77 21 04              a0 = a0 + 0x421
 10610: 7b 67 48                 u64 [s1 + 0x48] = a0
 10613: 33 07 16                 a0 = 0x16
 10616: 7b 17 20                 u64 [sp + 0x20] = a0
 10619: 7b 67 50                 u64 [s1 + 0x50] = a0
 10622: 33 07 60 0b 01           a0 = 0x10b60
 10627: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10631: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10636: 49 21 c0 01              u64 [sp + 448] = 0
 10640: 95 17 ff 07              a0 = sp + 0x7ff
 10644: 95 77 e9 03              a0 = a0 + 0x3e9
 10648: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10652: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10657: 95 17 ff 07              a0 = sp + 0x7ff
 10661: 95 77 b9 03              a0 = a0 + 0x3b9
 10665: 95 18 a0 01              a1 = sp + 0x1a0
 10669: 50 20 0e 01 3f 12        ra = 270, jump @802
      :                          @541 [@dyn 135]
 10675: 82 65 20                 s0 = u64 [s1 + 0x20]
 10678: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10681: 82 66 18                 s1 = u64 [s1 + 0x18]
 10684: 82 17 10                 a0 = u64 [sp + 0x10]
 10687: 33 08                    a1 = 0
 10689: 33 09                    a2 = 0
 10691: 64 5a                    a3 = s0
 10693: 33 00 10 01              ra = 0x110
 10697: 0a 64                    ecalli 100 // 'log'
 10699: 01                       fallthrough
      :                          @542 [@dyn 136]
 10700: 82 17 38                 a0 = u64 [sp + 0x38]
 10703: c8 67 07                 a0 = a0 + s1
 10706: 53 37 00 00 f0 25        jump @548 if a0 <u 4293918720
      :                          @543
 10712: 33 07 50 00 03           a0 = 0x30050
 10717: 95 77 00 00 10           a0 = a0 + 0x100000
 10722: 01                       fallthrough
      :                          @544
 10723: 82 78                    a1 = u64 [a0]
 10725: c9 87 09                 a2 = a0 - a1
 10728: ab 59 0f                 jump @548 if a2 != s0
      :                          @545
 10731: c9 68 09                 a2 = a1 - s1
 10734: 01                       fallthrough
      :                          @546
 10735: 82 7a                    a3 = u64 [a0]
 10737: ab 8a f2                 jump @544 if a3 != a1
      :                          @547
 10740: 7b 79                    u64 [a0] = a2
 10742: 01                       fallthrough
      :                          @548
 10743: 95 16 ff 07              s1 = sp + 0x7ff
 10747: 95 66 a1 03              s1 = s1 + 0x3a1
 10751: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10755: 33 08 07                 a1 = 0x7
 10758: 50 20 12 01 5a 1f        ra = 274, jump @1079
      :                          @549 [@dyn 137]
 10764: 95 18 58                 a1 = sp + 0x58
 10767: 33 09 03                 a2 = 0x3
 10770: 82 17 30                 a0 = u64 [sp + 0x30]
 10773: 0a 1b                    ecalli 27 // 'provide'
 10775: 82 18 20                 a1 = u64 [sp + 0x20]
 10778: 7b 68 50                 u64 [s1 + 0x50] = a1
 10781: 33 08 a8 0b 01           a1 = 0x10ba8
 10786: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10790: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10795: 49 21 c0 01              u64 [sp + 448] = 0
 10799: 95 18 ff 07              a1 = sp + 0x7ff
 10803: 95 88 e9 03              a1 = a1 + 0x3e9
 10807: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10811: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10816: 7b 67                    u64 [s1] = a0
 10818: 95 77 09                 a0 = a0 + 0x9
 10821: 88 77 01                 a0 = a0 <u 0x1
 10824: 97 77 01                 a0 = a0 << 0x1
 10827: 7b 17 20                 u64 [sp + 0x20] = a0
 10830: 7b 66 48                 u64 [s1 + 0x48] = s1
 10833: 95 17 ff 07              a0 = sp + 0x7ff
 10837: 95 77 b9 03              a0 = a0 + 0x3b9
 10841: 95 18 a0 01              a1 = sp + 0x1a0
 10845: 50 20 14 01 8f 11        ra = 276, jump @802
      :                          @550 [@dyn 138]
 10851: 82 65 20                 s0 = u64 [s1 + 0x20]
 10854: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10857: 82 66 18                 s1 = u64 [s1 + 0x18]
 10860: 82 17 20                 a0 = u64 [sp + 0x20]
 10863: 33 08                    a1 = 0
 10865: 33 09                    a2 = 0
 10867: 64 5a                    a3 = s0
 10869: 33 00 16 01              ra = 0x116
 10873: 0a 64                    ecalli 100 // 'log'
 10875: 01                       fallthrough
      :                          @551 [@dyn 139]
 10876: 82 17 38                 a0 = u64 [sp + 0x38]
 10879: c8 67 07                 a0 = a0 + s1
 10882: 53 37 00 00 f0 25        jump @557 if a0 <u 4293918720
      :                          @552
 10888: 33 07 50 00 03           a0 = 0x30050
 10893: 95 77 00 00 10           a0 = a0 + 0x100000
 10898: 01                       fallthrough
      :                          @553
 10899: 82 78                    a1 = u64 [a0]
 10901: c9 87 09                 a2 = a0 - a1
 10904: ab 59 0f                 jump @557 if a2 != s0
      :                          @554
 10907: c9 68 09                 a2 = a1 - s1
 10910: 01                       fallthrough
      :                          @555
 10911: 82 7a                    a3 = u64 [a0]
 10913: ab 8a f2                 jump @553 if a3 != a1
      :                          @556
 10916: 7b 79                    u64 [a0] = a2
 10918: 01                       fallthrough
      :                          @557
 10919: 95 16 ff 07              s1 = sp + 0x7ff
 10923: 95 66 a1 03              s1 = s1 + 0x3a1
 10927: 82 67                    a0 = u64 [s1]
 10929: 33 08 08                 a1 = 0x8
 10932: 33 00 76 01              ra = 0x176
 10936: 28 a8 1e                 jump @1079
      :                          @558 [@dyn 140]
 10939: 33 05 03                 s0 = 0x3
 10942: 95 17 58                 a0 = sp + 0x58
 10945: 33 08 03                 a1 = 0x3
 10948: 0a 0e                    ecalli 14 // 'solicit'
 10950: 7b 67 70                 u64 [s1 + 0x70] = a0
 10953: 33 08 01                 a1 = 0x1
 10956: 50 20 1a 01 94 1e        ra = 282, jump @1079
      :                          @559 [@dyn 141]
 10962: 82 67 70                 a0 = u64 [s1 + 0x70]
 10965: 88 77 01                 a0 = a0 <u 0x1
 10968: 97 77 01                 a0 = a0 << 0x1
 10971: 7b 17 10                 u64 [sp + 0x10] = a0
 10974: 95 17 48                 a0 = sp + 0x48
 10977: 7b 67 18                 u64 [s1 + 0x18] = a0
 10980: 33 08 16                 a1 = 0x16
 10983: 7b 68 20                 u64 [s1 + 0x20] = a1
 10986: 95 17 ff 07              a0 = sp + 0x7ff
 10990: 95 77 11 04              a0 = a0 + 0x411
 10994: 7b 67 28                 u64 [s1 + 0x28] = a0
 10997: 7b 18 20                 u64 [sp + 0x20] = a1
 11000: 7b 68 30                 u64 [s1 + 0x30] = a1
 11003: 33 07 f0 07 01           a0 = 0x107f0
 11008: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11012: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11016: 49 21 c0 01              u64 [sp + 448] = 0
 11020: 95 17 ff 07              a0 = sp + 0x7ff
 11024: 95 77 b9 03              a0 = a0 + 0x3b9
 11028: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11032: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11037: 95 17 ff 07              a0 = sp + 0x7ff
 11041: 95 77 e9 03              a0 = a0 + 0x3e9
 11045: 95 18 a0 01              a1 = sp + 0x1a0
 11049: 50 20 1c 01 c3 10        ra = 284, jump @802
      :                          @560 [@dyn 142]
 11055: 95 17 ff 07              a0 = sp + 0x7ff
 11059: 95 77 a1 03              a0 = a0 + 0x3a1
 11063: 82 76 50                 s1 = u64 [a0 + 0x50]
 11066: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11069: 82 75 48                 s0 = u64 [a0 + 0x48]
 11072: 82 17 10                 a0 = u64 [sp + 0x10]
 11075: 33 08                    a1 = 0
 11077: 33 09                    a2 = 0
 11079: 64 6a                    a3 = s1
 11081: 33 00 1e 01              ra = 0x11e
 11085: 0a 64                    ecalli 100 // 'log'
 11087: 01                       fallthrough
      :                          @561 [@dyn 143]
 11088: 82 17 38                 a0 = u64 [sp + 0x38]
 11091: c8 57 07                 a0 = a0 + s0
 11094: 53 37 00 00 f0 25        jump @567 if a0 <u 4293918720
      :                          @562
 11100: 33 07 50 00 03           a0 = 0x30050
 11105: 95 77 00 00 10           a0 = a0 + 0x100000
 11110: 01                       fallthrough
      :                          @563
 11111: 82 78                    a1 = u64 [a0]
 11113: c9 87 09                 a2 = a0 - a1
 11116: ab 69 0f                 jump @567 if a2 != s1
      :                          @564
 11119: c9 58 09                 a2 = a1 - s0
 11122: 01                       fallthrough
      :                          @565
 11123: 82 7a                    a3 = u64 [a0]
 11125: ab 8a f2                 jump @563 if a3 != a1
      :                          @566
 11128: 7b 79                    u64 [a0] = a2
 11130: 01                       fallthrough
      :                          @567
 11131: 95 17 58                 a0 = sp + 0x58
 11134: 33 08 03                 a1 = 0x3
 11137: 0a 0d                    ecalli 13 // 'query'
 11139: 95 19 ff 07              a2 = sp + 0x7ff
 11143: 95 99 a1 03              a2 = a2 + 0x3a1
 11147: 95 18 48                 a1 = sp + 0x48
 11150: 7b 98 18                 u64 [a2 + 0x18] = a1
 11153: 95 18 ff 07              a1 = sp + 0x7ff
 11157: 95 88 19 04              a1 = a1 + 0x419
 11161: 7b 98 28                 u64 [a2 + 0x28] = a1
 11164: 82 18 20                 a1 = u64 [sp + 0x20]
 11167: 7b 98 20                 u64 [a2 + 0x20] = a1
 11170: 7b 98 30                 u64 [a2 + 0x30] = a1
 11173: 95 19 ff 07              a2 = sp + 0x7ff
 11177: 95 99 a1 03              a2 = a2 + 0x3a1
 11181: 33 08 e0 0b 01           a1 = 0x10be0
 11186: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11190: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11195: 49 21 c0 01              u64 [sp + 448] = 0
 11199: 95 18 ff 07              a1 = sp + 0x7ff
 11203: 95 88 b9 03              a1 = a1 + 0x3b9
 11207: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11211: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11216: 7b 97 78                 u64 [a2 + 0x78] = a0
 11219: 8e 77                    a0 = a0 >u 0
 11221: 97 77 01                 a0 = a0 << 0x1
 11224: 7b 17 20                 u64 [sp + 0x20] = a0
 11227: 95 17 ff 07              a0 = sp + 0x7ff
 11231: 95 77 e9 03              a0 = a0 + 0x3e9
 11235: 95 18 a0 01              a1 = sp + 0x1a0
 11239: 95 15 a0 01              s0 = sp + 0x1a0
 11243: 50 20 20 01 01 10        ra = 288, jump @802
      :                          @568 [@dyn 144]
 11249: 95 17 ff 07              a0 = sp + 0x7ff
 11253: 95 77 a1 03              a0 = a0 + 0x3a1
 11257: 82 76 50                 s1 = u64 [a0 + 0x50]
 11260: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11263: 82 77 48                 a0 = u64 [a0 + 0x48]
 11266: 7b 17 10                 u64 [sp + 0x10] = a0
 11269: 82 17 20                 a0 = u64 [sp + 0x20]
 11272: 33 08                    a1 = 0
 11274: 33 09                    a2 = 0
 11276: 64 6a                    a3 = s1
 11278: 33 00 22 01              ra = 0x122
 11282: 0a 64                    ecalli 100 // 'log'
 11284: 01                       fallthrough
      :                          @569 [@dyn 145]
 11285: 82 1c 10                 a5 = u64 [sp + 0x10]
 11288: 82 17 38                 a0 = u64 [sp + 0x38]
 11291: c8 c7 07                 a0 = a0 + a5
 11294: 53 37 00 00 f0 25        jump @575 if a0 <u 4293918720
      :                          @570
 11300: 33 07 50 00 03           a0 = 0x30050
 11305: 95 77 00 00 10           a0 = a0 + 0x100000
 11310: 01                       fallthrough
      :                          @571
 11311: 82 78                    a1 = u64 [a0]
 11313: c9 87 09                 a2 = a0 - a1
 11316: ab 69 0f                 jump @575 if a2 != s1
      :                          @572
 11319: c9 c8 09                 a2 = a1 - a5
 11322: 01                       fallthrough
      :                          @573
 11323: 82 7a                    a3 = u64 [a0]
 11325: ab 8a f2                 jump @571 if a3 != a1
      :                          @574
 11328: 7b 79                    u64 [a0] = a2
 11330: 01                       fallthrough
      :                          @575
 11331: 95 17 ff 07              a0 = sp + 0x7ff
 11335: 95 77 a1 03              a0 = a0 + 0x3a1
 11339: 82 77 78                 a0 = u64 [a0 + 0x78]
 11342: 33 08 02                 a1 = 0x2
 11345: 50 20 24 01 0f 1d        ra = 292, jump @1079
      :                          @576 [@dyn 146]
 11351: 33 09 00 0a              a2 = 0xa00
 11355: 95 17 a0 01              a0 = sp + 0x1a0
 11359: 33 08                    a1 = 0
 11361: 50 20 26 01 b8 12        ra = 294, jump @869
      :                          @577 [@dyn 147]
 11367: 33 06 50                 s1 = 0x50
 11370: 01                       fallthrough
      :                          @578
 11371: 95 18 58                 a1 = sp + 0x58
 11374: 33 09 20                 a2 = 0x20
 11377: 64 57                    a0 = s0
 11379: 50 20 28 01 f4 11        ra = 296, jump @851
      :                          @579 [@dyn 148]
 11385: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 11388: 95 55 20                 s0 = s0 + 0x20
 11391: 52 06 ec                 jump @578 if s1 != 0
      :                          @580
 11394: 95 18 a0 01              a1 = sp + 0x1a0
 11398: 33 07                    a0 = 0
 11400: 0a 06                    ecalli 6 // 'assign'
 11402: 95 15 ff 07              s0 = sp + 0x7ff
 11406: 95 55 a1 03              s0 = s0 + 0x3a1
 11410: 7b 57 80 00              u64 [s0 + 0x80] = a0
 11414: 88 77 01                 a0 = a0 <u 0x1
 11417: 97 77 01                 a0 = a0 << 0x1
 11420: 7b 17 20                 u64 [sp + 0x20] = a0
 11423: 95 17 48                 a0 = sp + 0x48
 11426: 7b 57 48                 u64 [s0 + 0x48] = a0
 11429: 33 07 16                 a0 = 0x16
 11432: 7b 57 50                 u64 [s0 + 0x50] = a0
 11435: 95 18 ff 07              a1 = sp + 0x7ff
 11439: 95 88 21 04              a1 = a1 + 0x421
 11443: 7b 58 58                 u64 [s0 + 0x58] = a1
 11446: 7b 57 60                 u64 [s0 + 0x60] = a0
 11449: 33 07 20 0c 01           a0 = 0x10c20
 11454: 7b 57 18                 u64 [s0 + 0x18] = a0
 11457: 49 15 20 03              u64 [s0 + 32] = 0x3
 11461: 49 15 38                 u64 [s0 + 56] = 0
 11464: 95 17 ff 07              a0 = sp + 0x7ff
 11468: 95 77 e9 03              a0 = a0 + 0x3e9
 11472: 7b 57 28                 u64 [s0 + 0x28] = a0
 11475: 49 15 30 02              u64 [s0 + 48] = 0x2
 11479: 95 17 ff 07              a0 = sp + 0x7ff
 11483: 95 77 a1 03              a0 = a0 + 0x3a1
 11487: 95 18 ff 07              a1 = sp + 0x7ff
 11491: 95 88 b9 03              a1 = a1 + 0x3b9
 11495: 50 20 2a 01 05 0f        ra = 298, jump @802
      :                          @581 [@dyn 149]
 11501: 82 56 08                 s1 = u64 [s0 + 0x8]
 11504: 82 5b 10                 a4 = u64 [s0 + 0x10]
 11507: 82 55                    s0 = u64 [s0]
 11509: 82 17 20                 a0 = u64 [sp + 0x20]
 11512: 33 08                    a1 = 0
 11514: 33 09                    a2 = 0
 11516: 64 6a                    a3 = s1
 11518: 33 00 2c 01              ra = 0x12c
 11522: 0a 64                    ecalli 100 // 'log'
 11524: 01                       fallthrough
      :                          @582 [@dyn 150]
 11525: 82 17 38                 a0 = u64 [sp + 0x38]
 11528: c8 57 07                 a0 = a0 + s0
 11531: 53 37 00 00 f0 79 05     jump @653 if a0 <u 4293918720
      :                          @583
 11538: 33 07 50 00 03           a0 = 0x30050
 11543: 95 77 00 00 10           a0 = a0 + 0x100000
 11548: 01                       fallthrough
      :                          @584
 11549: 82 78                    a1 = u64 [a0]
 11551: c9 87 09                 a2 = a0 - a1
 11554: ab 69 62 05              jump @653 if a2 != s1
      :                          @585
 11558: c9 58 09                 a2 = a1 - s0
 11561: 01                       fallthrough
      :                          @586
 11562: 82 7a                    a3 = u64 [a0]
 11564: ab 8a f1                 jump @584 if a3 != a1
      :                          @587
 11567: 7b 79                    u64 [a0] = a2
 11569: 33 0b                    a4 = 0
 11571: 01                       fallthrough
      :                          @588
 11572: ab 8a e9                 jump @584 if a3 != a1
      :                          @589
 11575: 28 4d 05                 jump @653
      :                          @590 [@dyn 151]
 11578: 33 05 03                 s0 = 0x3
 11581: 95 18 58                 a1 = sp + 0x58
 11584: 95 19 98 00              a2 = sp + 0x98
 11588: 33 0b 03                 a4 = 0x3
 11591: 82 17 30                 a0 = u64 [sp + 0x30]
 11594: 33 0a                    a3 = 0
 11596: 0a 01                    ecalli 1 // 'lookup'
 11598: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11602: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 11605: 88 77 01                 a0 = a0 <u 0x1
 11608: 97 77 01                 a0 = a0 << 0x1
 11611: 7b 17 10                 u64 [sp + 0x10] = a0
 11614: 95 17 48                 a0 = sp + 0x48
 11617: 7b 67 18                 u64 [s1 + 0x18] = a0
 11620: 33 08 16                 a1 = 0x16
 11623: 7b 68 20                 u64 [s1 + 0x20] = a1
 11626: 95 17 ff 07              a0 = sp + 0x7ff
 11630: 95 77 21 04              a0 = a0 + 0x421
 11634: 7b 67 28                 u64 [s1 + 0x28] = a0
 11637: 7b 18 20                 u64 [sp + 0x20] = a1
 11640: 7b 68 30                 u64 [s1 + 0x30] = a1
 11643: 33 07 68 0c 01           a0 = 0x10c68
 11648: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11652: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11656: 49 21 c0 01              u64 [sp + 448] = 0
 11660: 95 17 ff 07              a0 = sp + 0x7ff
 11664: 95 77 b9 03              a0 = a0 + 0x3b9
 11668: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11672: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11677: 95 17 ff 07              a0 = sp + 0x7ff
 11681: 95 77 e9 03              a0 = a0 + 0x3e9
 11685: 95 18 a0 01              a1 = sp + 0x1a0
 11689: 50 20 30 01 43 0e        ra = 304, jump @802
      :                          @591 [@dyn 152]
 11695: 95 17 ff 07              a0 = sp + 0x7ff
 11699: 95 77 a1 03              a0 = a0 + 0x3a1
 11703: 82 76 50                 s1 = u64 [a0 + 0x50]
 11706: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11709: 82 75 48                 s0 = u64 [a0 + 0x48]
 11712: 82 17 10                 a0 = u64 [sp + 0x10]
 11715: 33 08                    a1 = 0
 11717: 33 09                    a2 = 0
 11719: 64 6a                    a3 = s1
 11721: 33 00 32 01              ra = 0x132
 11725: 0a 64                    ecalli 100 // 'log'
 11727: 01                       fallthrough
      :                          @592 [@dyn 153]
 11728: 82 17 38                 a0 = u64 [sp + 0x38]
 11731: c8 57 07                 a0 = a0 + s0
 11734: 53 37 00 00 f0 25        jump @598 if a0 <u 4293918720
      :                          @593
 11740: 33 07 50 00 03           a0 = 0x30050
 11745: 95 77 00 00 10           a0 = a0 + 0x100000
 11750: 01                       fallthrough
      :                          @594
 11751: 82 78                    a1 = u64 [a0]
 11753: c9 87 09                 a2 = a0 - a1
 11756: ab 69 0f                 jump @598 if a2 != s1
      :                          @595
 11759: c9 58 09                 a2 = a1 - s0
 11762: 01                       fallthrough
      :                          @596
 11763: 82 7a                    a3 = u64 [a0]
 11765: ab 8a f2                 jump @594 if a3 != a1
      :                          @597
 11768: 7b 79                    u64 [a0] = a2
 11770: 01                       fallthrough
      :                          @598
 11771: 95 16 ff 07              s1 = sp + 0x7ff
 11775: 95 66 a1 03              s1 = s1 + 0x3a1
 11779: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11783: 33 08 01                 a1 = 0x1
 11786: 50 20 34 01 56 1b        ra = 308, jump @1079
      :                          @599 [@dyn 154]
 11792: 95 17 58                 a0 = sp + 0x58
 11795: 33 08 03                 a1 = 0x3
 11798: 0a 0d                    ecalli 13 // 'query'
 11800: 95 18 48                 a1 = sp + 0x48
 11803: 7b 68 18                 u64 [s1 + 0x18] = a1
 11806: 82 18 20                 a1 = u64 [sp + 0x20]
 11809: 7b 68 20                 u64 [s1 + 0x20] = a1
 11812: 7b 68 30                 u64 [s1 + 0x30] = a1
 11815: 33 08 28 09 01           a1 = 0x10928
 11820: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11824: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11829: 49 21 c0 01              u64 [sp + 448] = 0
 11833: 95 18 ff 07              a1 = sp + 0x7ff
 11837: 95 88 b9 03              a1 = a1 + 0x3b9
 11841: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11845: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11850: 7b 67                    u64 [s1] = a0
 11852: 8e 77                    a0 = a0 >u 0
 11854: 97 77 01                 a0 = a0 << 0x1
 11857: 7b 17 20                 u64 [sp + 0x20] = a0
 11860: 7b 66 28                 u64 [s1 + 0x28] = s1
 11863: 95 17 ff 07              a0 = sp + 0x7ff
 11867: 95 77 e9 03              a0 = a0 + 0x3e9
 11871: 95 18 a0 01              a1 = sp + 0x1a0
 11875: 50 20 36 01 89 0d        ra = 310, jump @802
      :                          @600 [@dyn 155]
 11881: 82 65 50                 s0 = u64 [s1 + 0x50]
 11884: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11887: 82 66 48                 s1 = u64 [s1 + 0x48]
 11890: 82 17 20                 a0 = u64 [sp + 0x20]
 11893: 33 08                    a1 = 0
 11895: 33 09                    a2 = 0
 11897: 64 5a                    a3 = s0
 11899: 33 00 38 01              ra = 0x138
 11903: 0a 64                    ecalli 100 // 'log'
 11905: 01                       fallthrough
      :                          @601 [@dyn 156]
 11906: 82 17 38                 a0 = u64 [sp + 0x38]
 11909: c8 67 07                 a0 = a0 + s1
 11912: 53 37 00 00 f0 96 01     jump @626 if a0 <u 4293918720
      :                          @602
 11919: 33 07 50 00 03           a0 = 0x30050
 11924: 95 77 00 00 10           a0 = a0 + 0x100000
 11929: 01                       fallthrough
      :                          @603
 11930: 82 78                    a1 = u64 [a0]
 11932: c9 87 09                 a2 = a0 - a1
 11935: ab 59 7f 01              jump @626 if a2 != s0
      :                          @604
 11939: c9 68 09                 a2 = a1 - s1
 11942: 01                       fallthrough
      :                          @605
 11943: 82 7a                    a3 = u64 [a0]
 11945: ab 8a f1                 jump @603 if a3 != a1
      :                          @606
 11948: 7b 79                    u64 [a0] = a2
 11950: 33 0b                    a4 = 0
 11952: 01                       fallthrough
      :                          @607
 11953: ab 8a e9                 jump @603 if a3 != a1
      :                          @608
 11956: 28 6a 01                 jump @626
      :                          @609 [@dyn 157]
 11959: 33 05 03                 s0 = 0x3
 11962: 95 17 58                 a0 = sp + 0x58
 11965: 33 08 03                 a1 = 0x3
 11968: 0a 0f                    ecalli 15 // 'forget'
 11970: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11974: 88 77 01                 a0 = a0 <u 0x1
 11977: 97 77 01                 a0 = a0 << 0x1
 11980: 7b 17 10                 u64 [sp + 0x10] = a0
 11983: 95 17 48                 a0 = sp + 0x48
 11986: 7b 67 18                 u64 [s1 + 0x18] = a0
 11989: 33 08 16                 a1 = 0x16
 11992: 7b 68 20                 u64 [s1 + 0x20] = a1
 11995: 95 17 ff 07              a0 = sp + 0x7ff
 11999: 95 77 21 04              a0 = a0 + 0x421
 12003: 7b 67 28                 u64 [s1 + 0x28] = a0
 12006: 7b 18 20                 u64 [sp + 0x20] = a1
 12009: 7b 68 30                 u64 [s1 + 0x30] = a1
 12012: 33 07 e0 08 01           a0 = 0x108e0
 12017: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12021: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12025: 49 21 c0 01              u64 [sp + 448] = 0
 12029: 95 17 ff 07              a0 = sp + 0x7ff
 12033: 95 77 b9 03              a0 = a0 + 0x3b9
 12037: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12041: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12046: 95 17 ff 07              a0 = sp + 0x7ff
 12050: 95 77 e9 03              a0 = a0 + 0x3e9
 12054: 95 18 a0 01              a1 = sp + 0x1a0
 12058: 50 20 3c 01 d2 0c        ra = 316, jump @802
      :                          @610 [@dyn 158]
 12064: 95 17 ff 07              a0 = sp + 0x7ff
 12068: 95 77 a1 03              a0 = a0 + 0x3a1
 12072: 82 76 50                 s1 = u64 [a0 + 0x50]
 12075: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12078: 82 75 48                 s0 = u64 [a0 + 0x48]
 12081: 82 17 10                 a0 = u64 [sp + 0x10]
 12084: 33 08                    a1 = 0
 12086: 33 09                    a2 = 0
 12088: 64 6a                    a3 = s1
 12090: 33 00 3e 01              ra = 0x13e
 12094: 0a 64                    ecalli 100 // 'log'
 12096: 01                       fallthrough
      :                          @611 [@dyn 159]
 12097: 82 17 38                 a0 = u64 [sp + 0x38]
 12100: c8 57 07                 a0 = a0 + s0
 12103: 53 37 00 00 f0 25        jump @617 if a0 <u 4293918720
      :                          @612
 12109: 33 07 50 00 03           a0 = 0x30050
 12114: 95 77 00 00 10           a0 = a0 + 0x100000
 12119: 01                       fallthrough
      :                          @613
 12120: 82 78                    a1 = u64 [a0]
 12122: c9 87 09                 a2 = a0 - a1
 12125: ab 69 0f                 jump @617 if a2 != s1
      :                          @614
 12128: c9 58 09                 a2 = a1 - s0
 12131: 01                       fallthrough
      :                          @615
 12132: 82 7a                    a3 = u64 [a0]
 12134: ab 8a f2                 jump @613 if a3 != a1
      :                          @616
 12137: 7b 79                    u64 [a0] = a2
 12139: 01                       fallthrough
      :                          @617
 12140: 95 16 ff 07              s1 = sp + 0x7ff
 12144: 95 66 a1 03              s1 = s1 + 0x3a1
 12148: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12152: 33 08 01                 a1 = 0x1
 12155: 50 20 40 01 e5 19        ra = 320, jump @1079
      :                          @618 [@dyn 160]
 12161: 95 17 58                 a0 = sp + 0x58
 12164: 33 08 03                 a1 = 0x3
 12167: 0a 0d                    ecalli 13 // 'query'
 12169: 95 18 48                 a1 = sp + 0x48
 12172: 7b 68 18                 u64 [s1 + 0x18] = a1
 12175: 82 18 20                 a1 = u64 [sp + 0x20]
 12178: 7b 68 20                 u64 [s1 + 0x20] = a1
 12181: 7b 68 30                 u64 [s1 + 0x30] = a1
 12184: 33 08 98 0c 01           a1 = 0x10c98
 12189: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12193: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12198: 49 21 c0 01              u64 [sp + 448] = 0
 12202: 95 18 ff 07              a1 = sp + 0x7ff
 12206: 95 88 b9 03              a1 = a1 + 0x3b9
 12210: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12214: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12219: 7b 67                    u64 [s1] = a0
 12221: 8e 77                    a0 = a0 >u 0
 12223: 97 77 01                 a0 = a0 << 0x1
 12226: 7b 17 20                 u64 [sp + 0x20] = a0
 12229: 7b 66 28                 u64 [s1 + 0x28] = s1
 12232: 95 17 ff 07              a0 = sp + 0x7ff
 12236: 95 77 e9 03              a0 = a0 + 0x3e9
 12240: 95 18 a0 01              a1 = sp + 0x1a0
 12244: 50 20 42 01 18 0c        ra = 322, jump @802
      :                          @619 [@dyn 161]
 12250: 82 65 50                 s0 = u64 [s1 + 0x50]
 12253: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12256: 82 66 48                 s1 = u64 [s1 + 0x48]
 12259: 82 17 20                 a0 = u64 [sp + 0x20]
 12262: 33 08                    a1 = 0
 12264: 33 09                    a2 = 0
 12266: 64 5a                    a3 = s0
 12268: 33 00 44 01              ra = 0x144
 12272: 0a 64                    ecalli 100 // 'log'
 12274: 01                       fallthrough
      :                          @620 [@dyn 162]
 12275: 82 17 38                 a0 = u64 [sp + 0x38]
 12278: c8 67 07                 a0 = a0 + s1
 12281: 53 37 00 00 f0 25        jump @626 if a0 <u 4293918720
      :                          @621
 12287: 33 07 50 00 03           a0 = 0x30050
 12292: 95 77 00 00 10           a0 = a0 + 0x100000
 12297: 01                       fallthrough
      :                          @622
 12298: 82 78                    a1 = u64 [a0]
 12300: c9 87 09                 a2 = a0 - a1
 12303: ab 59 0f                 jump @626 if a2 != s0
      :                          @623
 12306: c9 68 09                 a2 = a1 - s1
 12309: 01                       fallthrough
      :                          @624
 12310: 82 7a                    a3 = u64 [a0]
 12312: ab 8a f2                 jump @622 if a3 != a1
      :                          @625
 12315: 7b 79                    u64 [a0] = a2
 12317: 01                       fallthrough
      :                          @626
 12318: 95 16 ff 07              s1 = sp + 0x7ff
 12322: 95 66 a1 03              s1 = s1 + 0x3a1
 12326: 82 67                    a0 = u64 [s1]
 12328: 33 08 02                 a1 = 0x2
 12331: 33 00 76 01              ra = 0x176
 12335: 28 31 19                 jump @1079
      :                          @627 [@dyn 163]
 12338: 33 05 03                 s0 = 0x3
 12341: 95 17 58                 a0 = sp + 0x58
 12344: 33 08 03                 a1 = 0x3
 12347: 33 09 8f 03              a2 = 0x38f
 12351: 33 0a 8f 03              a3 = 0x38f
 12355: 0a 09                    ecalli 9 // 'new'
 12357: 8e 78                    a1 = a0 >u 0
 12359: 7b 67 70                 u64 [s1 + 0x70] = a0
 12362: 97 88 01                 a1 = a1 << 0x1
 12365: 7b 18 10                 u64 [sp + 0x10] = a1
 12368: 95 17 48                 a0 = sp + 0x48
 12371: 7b 67 18                 u64 [s1 + 0x18] = a0
 12374: 33 08 16                 a1 = 0x16
 12377: 7b 68 20                 u64 [s1 + 0x20] = a1
 12380: 95 17 ff 07              a0 = sp + 0x7ff
 12384: 95 77 11 04              a0 = a0 + 0x411
 12388: 7b 67 28                 u64 [s1 + 0x28] = a0
 12391: 7b 18 20                 u64 [sp + 0x20] = a1
 12394: 7b 68 30                 u64 [s1 + 0x30] = a1
 12397: 33 07 f0 0c 01           a0 = 0x10cf0
 12402: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12406: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12410: 49 21 c0 01              u64 [sp + 448] = 0
 12414: 95 17 ff 07              a0 = sp + 0x7ff
 12418: 95 77 b9 03              a0 = a0 + 0x3b9
 12422: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12426: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12431: 95 17 ff 07              a0 = sp + 0x7ff
 12435: 95 77 e9 03              a0 = a0 + 0x3e9
 12439: 95 18 a0 01              a1 = sp + 0x1a0
 12443: 50 20 48 01 51 0b        ra = 328, jump @802
      :                          @628 [@dyn 164]
 12449: 95 17 ff 07              a0 = sp + 0x7ff
 12453: 95 77 a1 03              a0 = a0 + 0x3a1
 12457: 82 76 50                 s1 = u64 [a0 + 0x50]
 12460: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12463: 82 75 48                 s0 = u64 [a0 + 0x48]
 12466: 82 17 10                 a0 = u64 [sp + 0x10]
 12469: 33 08                    a1 = 0
 12471: 33 09                    a2 = 0
 12473: 64 6a                    a3 = s1
 12475: 33 00 4a 01              ra = 0x14a
 12479: 0a 64                    ecalli 100 // 'log'
 12481: 01                       fallthrough
      :                          @629 [@dyn 165]
 12482: 82 17 38                 a0 = u64 [sp + 0x38]
 12485: c8 57 07                 a0 = a0 + s0
 12488: 53 37 00 00 f0 25        jump @635 if a0 <u 4293918720
      :                          @630
 12494: 33 07 50 00 03           a0 = 0x30050
 12499: 95 77 00 00 10           a0 = a0 + 0x100000
 12504: 01                       fallthrough
      :                          @631
 12505: 82 78                    a1 = u64 [a0]
 12507: c9 87 09                 a2 = a0 - a1
 12510: ab 69 0f                 jump @635 if a2 != s1
      :                          @632
 12513: c9 58 09                 a2 = a1 - s0
 12516: 01                       fallthrough
      :                          @633
 12517: 82 7a                    a3 = u64 [a0]
 12519: ab 8a f2                 jump @631 if a3 != a1
      :                          @634
 12522: 7b 79                    u64 [a0] = a2
 12524: 01                       fallthrough
      :                          @635
 12525: 95 16 ff 07              s1 = sp + 0x7ff
 12529: 95 66 a1 03              s1 = s1 + 0x3a1
 12533: 82 67 70                 a0 = u64 [s1 + 0x70]
 12536: 33 08 01                 a1 = 0x1
 12539: 50 20 4c 01 65 18        ra = 332, jump @1079
      :                          @636 [@dyn 166]
 12545: 95 17 58                 a0 = sp + 0x58
 12548: 33 08 8f 03              a1 = 0x38f
 12552: 33 09 8f 03              a2 = 0x38f
 12556: 0a 0a                    ecalli 10 // 'upgrade'
 12558: 95 18 48                 a1 = sp + 0x48
 12561: 7b 68 18                 u64 [s1 + 0x18] = a1
 12564: 95 18 ff 07              a1 = sp + 0x7ff
 12568: 95 88 19 04              a1 = a1 + 0x419
 12572: 7b 68 28                 u64 [s1 + 0x28] = a1
 12575: 82 18 20                 a1 = u64 [sp + 0x20]
 12578: 7b 68 20                 u64 [s1 + 0x20] = a1
 12581: 7b 68 30                 u64 [s1 + 0x30] = a1
 12584: 33 08 30 0d 01           a1 = 0x10d30
 12589: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12593: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12598: 49 21 c0 01              u64 [sp + 448] = 0
 12602: 95 18 ff 07              a1 = sp + 0x7ff
 12606: 95 88 b9 03              a1 = a1 + 0x3b9
 12610: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12614: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12619: 7b 67 78                 u64 [s1 + 0x78] = a0
 12622: 88 77 01                 a0 = a0 <u 0x1
 12625: 97 77 01                 a0 = a0 << 0x1
 12628: 7b 17 20                 u64 [sp + 0x20] = a0
 12631: 95 17 ff 07              a0 = sp + 0x7ff
 12635: 95 77 e9 03              a0 = a0 + 0x3e9
 12639: 95 18 a0 01              a1 = sp + 0x1a0
 12643: 50 20 4e 01 89 0a        ra = 334, jump @802
      :                          @637 [@dyn 167]
 12649: 82 65 50                 s0 = u64 [s1 + 0x50]
 12652: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12655: 82 66 48                 s1 = u64 [s1 + 0x48]
 12658: 82 17 20                 a0 = u64 [sp + 0x20]
 12661: 33 08                    a1 = 0
 12663: 33 09                    a2 = 0
 12665: 64 5a                    a3 = s0
 12667: 33 00 50 01              ra = 0x150
 12671: 0a 64                    ecalli 100 // 'log'
 12673: 01                       fallthrough
      :                          @638 [@dyn 168]
 12674: 82 17 38                 a0 = u64 [sp + 0x38]
 12677: c8 67 07                 a0 = a0 + s1
 12680: 53 37 00 00 f0 25        jump @644 if a0 <u 4293918720
      :                          @639
 12686: 33 07 50 00 03           a0 = 0x30050
 12691: 95 77 00 00 10           a0 = a0 + 0x100000
 12696: 01                       fallthrough
      :                          @640
 12697: 82 78                    a1 = u64 [a0]
 12699: c9 87 09                 a2 = a0 - a1
 12702: ab 59 0f                 jump @644 if a2 != s0
      :                          @641
 12705: c9 68 09                 a2 = a1 - s1
 12708: 01                       fallthrough
      :                          @642
 12709: 82 7a                    a3 = u64 [a0]
 12711: ab 8a f2                 jump @640 if a3 != a1
      :                          @643
 12714: 7b 79                    u64 [a0] = a2
 12716: 01                       fallthrough
      :                          @644
 12717: 95 15 ff 07              s0 = sp + 0x7ff
 12721: 95 55 a1 03              s0 = s0 + 0x3a1
 12725: 82 57 78                 a0 = u64 [s0 + 0x78]
 12728: 33 08 02                 a1 = 0x2
 12731: 33 06 02                 s1 = 0x2
 12734: 50 20 52 01 a2 17        ra = 338, jump @1079
      :                          @645 [@dyn 169]
 12740: 48 05 8f 03              u32 [s0 + 0] = 0x38f
 12744: 48 15 08                 u32 [s0 + 8] = 0
 12747: 48 15 04 8f 03           u32 [s0 + 4] = 0x38f
 12752: 33 08 01                 a1 = 0x1
 12755: 33 09 01                 a2 = 0x1
 12758: 95 1a ff 07              a3 = sp + 0x7ff
 12762: 95 aa a1 03              a3 = a3 + 0x3a1
 12766: 33 0b 01                 a4 = 0x1
 12769: 33 07                    a0 = 0
 12771: 0a 05                    ecalli 5 // 'bless'
 12773: 7b 57 80 00              u64 [s0 + 0x80] = a0
 12777: 88 77 01                 a0 = a0 <u 0x1
 12780: 97 77 01                 a0 = a0 << 0x1
 12783: 7b 17 20                 u64 [sp + 0x20] = a0
 12786: 95 17 48                 a0 = sp + 0x48
 12789: 7b 57 18                 u64 [s0 + 0x18] = a0
 12792: 33 07 16                 a0 = 0x16
 12795: 7b 57 20                 u64 [s0 + 0x20] = a0
 12798: 95 18 ff 07              a1 = sp + 0x7ff
 12802: 95 88 21 04              a1 = a1 + 0x421
 12806: 7b 58 28                 u64 [s0 + 0x28] = a1
 12809: 7b 57 30                 u64 [s0 + 0x30] = a0
 12812: 33 07 70 0d 01           a0 = 0x10d70
 12817: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12821: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12826: 49 21 c0 01              u64 [sp + 448] = 0
 12830: 95 17 ff 07              a0 = sp + 0x7ff
 12834: 95 77 b9 03              a0 = a0 + 0x3b9
 12838: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12842: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 12846: 95 17 ff 07              a0 = sp + 0x7ff
 12850: 95 77 e9 03              a0 = a0 + 0x3e9
 12854: 95 18 a0 01              a1 = sp + 0x1a0
 12858: 50 20 54 01 b2 09        ra = 340, jump @802
      :                          @646 [@dyn 170]
 12864: 82 56 50                 s1 = u64 [s0 + 0x50]
 12867: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12870: 82 55 48                 s0 = u64 [s0 + 0x48]
 12873: 82 17 20                 a0 = u64 [sp + 0x20]
 12876: 33 08                    a1 = 0
 12878: 33 09                    a2 = 0
 12880: 64 6a                    a3 = s1
 12882: 33 00 56 01              ra = 0x156
 12886: 0a 64                    ecalli 100 // 'log'
 12888: 01                       fallthrough
      :                          @647 [@dyn 171]
 12889: 82 17 38                 a0 = u64 [sp + 0x38]
 12892: c8 57 07                 a0 = a0 + s0
 12895: 53 37 00 00 f0 25        jump @653 if a0 <u 4293918720
      :                          @648
 12901: 33 07 50 00 03           a0 = 0x30050
 12906: 95 77 00 00 10           a0 = a0 + 0x100000
 12911: 01                       fallthrough
      :                          @649
 12912: 82 78                    a1 = u64 [a0]
 12914: c9 87 09                 a2 = a0 - a1
 12917: ab 69 0f                 jump @653 if a2 != s1
      :                          @650
 12920: c9 58 09                 a2 = a1 - s0
 12923: 01                       fallthrough
      :                          @651
 12924: 82 7a                    a3 = u64 [a0]
 12926: ab 8a f2                 jump @649 if a3 != a1
      :                          @652
 12929: 7b 79                    u64 [a0] = a2
 12931: 01                       fallthrough
      :                          @653
 12932: 95 16 ff 07              s1 = sp + 0x7ff
 12936: 95 66 a1 03              s1 = s1 + 0x3a1
 12940: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12944: 33 08 05                 a1 = 0x5
 12947: 33 00 76 01              ra = 0x176
 12951: 28 c9 16                 jump @1079
      :                          @654 [@dyn 172]
 12954: 33 05 03                 s0 = 0x3
 12957: 95 17 55                 a0 = sp + 0x55
 12960: 33 08 03                 a1 = 0x3
 12963: 33 09                    a2 = 0
 12965: 33 0a                    a3 = 0
 12967: 0a 03                    ecalli 3 // 'write'
 12969: 7b 67 68                 u64 [s1 + 0x68] = a0
 12972: 95 77 01                 a0 = a0 + 0x1
 12975: 88 77 01                 a0 = a0 <u 0x1
 12978: 97 77 01                 a0 = a0 << 0x1
 12981: 7b 17 10                 u64 [sp + 0x10] = a0
 12984: 95 17 48                 a0 = sp + 0x48
 12987: 7b 67 18                 u64 [s1 + 0x18] = a0
 12990: 33 08 16                 a1 = 0x16
 12993: 7b 68 20                 u64 [s1 + 0x20] = a1
 12996: 95 17 ff 07              a0 = sp + 0x7ff
 13000: 95 77 09 04              a0 = a0 + 0x409
 13004: 7b 67 28                 u64 [s1 + 0x28] = a0
 13007: 7b 18 20                 u64 [sp + 0x20] = a1
 13010: 7b 68 30                 u64 [s1 + 0x30] = a1
 13013: 33 07 b8 0d 01           a0 = 0x10db8
 13018: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13022: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 13026: 49 21 c0 01              u64 [sp + 448] = 0
 13030: 95 17 ff 07              a0 = sp + 0x7ff
 13034: 95 77 b9 03              a0 = a0 + 0x3b9
 13038: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13042: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13047: 95 17 ff 07              a0 = sp + 0x7ff
 13051: 95 77 e9 03              a0 = a0 + 0x3e9
 13055: 95 18 a0 01              a1 = sp + 0x1a0
 13059: 50 20 5a 01 e9 08        ra = 346, jump @802
      :                          @655 [@dyn 173]
 13065: 95 17 ff 07              a0 = sp + 0x7ff
 13069: 95 77 a1 03              a0 = a0 + 0x3a1
 13073: 82 76 50                 s1 = u64 [a0 + 0x50]
 13076: 82 7b 58                 a4 = u64 [a0 + 0x58]
 13079: 82 75 48                 s0 = u64 [a0 + 0x48]
 13082: 82 17 10                 a0 = u64 [sp + 0x10]
 13085: 33 08                    a1 = 0
 13087: 33 09                    a2 = 0
 13089: 64 6a                    a3 = s1
 13091: 33 00 5c 01              ra = 0x15c
 13095: 0a 64                    ecalli 100 // 'log'
 13097: 01                       fallthrough
      :                          @656 [@dyn 174]
 13098: 82 17 38                 a0 = u64 [sp + 0x38]
 13101: c8 57 07                 a0 = a0 + s0
 13104: 53 37 00 00 f0 25        jump @662 if a0 <u 4293918720
      :                          @657
 13110: 33 07 50 00 03           a0 = 0x30050
 13115: 95 77 00 00 10           a0 = a0 + 0x100000
 13120: 01                       fallthrough
      :                          @658
 13121: 82 78                    a1 = u64 [a0]
 13123: c9 87 09                 a2 = a0 - a1
 13126: ab 69 0f                 jump @662 if a2 != s1
      :                          @659
 13129: c9 58 09                 a2 = a1 - s0
 13132: 01                       fallthrough
      :                          @660
 13133: 82 7a                    a3 = u64 [a0]
 13135: ab 8a f2                 jump @658 if a3 != a1
      :                          @661
 13138: 7b 79                    u64 [a0] = a2
 13140: 01                       fallthrough
      :                          @662
 13141: 95 16 ff 07              s1 = sp + 0x7ff
 13145: 95 66 a1 03              s1 = s1 + 0x3a1
 13149: 82 67 68                 a0 = u64 [s1 + 0x68]
 13152: 33 08 01                 a1 = 0x1
 13155: 50 20 5e 01 fd 15        ra = 350, jump @1079
      :                          @663 [@dyn 175]
 13161: 95 17 55                 a0 = sp + 0x55
 13164: 33 08 03                 a1 = 0x3
 13167: 95 19 52                 a2 = sp + 0x52
 13170: 33 0a 03                 a3 = 0x3
 13173: 0a 03                    ecalli 3 // 'write'
 13175: 95 18 48                 a1 = sp + 0x48
 13178: 7b 68 18                 u64 [s1 + 0x18] = a1
 13181: 95 18 ff 07              a1 = sp + 0x7ff
 13185: 95 88 11 04              a1 = a1 + 0x411
 13189: 7b 68 28                 u64 [s1 + 0x28] = a1
 13192: 82 18 20                 a1 = u64 [sp + 0x20]
 13195: 7b 68 20                 u64 [s1 + 0x20] = a1
 13198: 7b 68 30                 u64 [s1 + 0x30] = a1
 13201: 33 08 e8 0d 01           a1 = 0x10de8
 13206: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13210: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13215: 49 21 c0 01              u64 [sp + 448] = 0
 13219: 95 18 ff 07              a1 = sp + 0x7ff
 13223: 95 88 b9 03              a1 = a1 + 0x3b9
 13227: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13231: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13236: 7b 67 70                 u64 [s1 + 0x70] = a0
 13239: 95 77 01                 a0 = a0 + 0x1
 13242: 88 77 01                 a0 = a0 <u 0x1
 13245: 97 77 01                 a0 = a0 << 0x1
 13248: 7b 17 20                 u64 [sp + 0x20] = a0
 13251: 95 17 ff 07              a0 = sp + 0x7ff
 13255: 95 77 e9 03              a0 = a0 + 0x3e9
 13259: 95 18 a0 01              a1 = sp + 0x1a0
 13263: 50 20 60 01 1d 08        ra = 352, jump @802
      :                          @664 [@dyn 176]
 13269: 82 65 50                 s0 = u64 [s1 + 0x50]
 13272: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13275: 82 66 48                 s1 = u64 [s1 + 0x48]
 13278: 82 17 20                 a0 = u64 [sp + 0x20]
 13281: 33 08                    a1 = 0
 13283: 33 09                    a2 = 0
 13285: 64 5a                    a3 = s0
 13287: 33 00 62 01              ra = 0x162
 13291: 0a 64                    ecalli 100 // 'log'
 13293: 01                       fallthrough
      :                          @665 [@dyn 177]
 13294: 82 17 38                 a0 = u64 [sp + 0x38]
 13297: c8 67 07                 a0 = a0 + s1
 13300: 53 37 00 00 f0 25        jump @671 if a0 <u 4293918720
      :                          @666
 13306: 33 07 50 00 03           a0 = 0x30050
 13311: 95 77 00 00 10           a0 = a0 + 0x100000
 13316: 01                       fallthrough
      :                          @667
 13317: 82 78                    a1 = u64 [a0]
 13319: c9 87 09                 a2 = a0 - a1
 13322: ab 59 0f                 jump @671 if a2 != s0
      :                          @668
 13325: c9 68 09                 a2 = a1 - s1
 13328: 01                       fallthrough
      :                          @669
 13329: 82 7a                    a3 = u64 [a0]
 13331: ab 8a f2                 jump @667 if a3 != a1
      :                          @670
 13334: 7b 79                    u64 [a0] = a2
 13336: 01                       fallthrough
      :                          @671
 13337: 95 15 ff 07              s0 = sp + 0x7ff
 13341: 95 55 a1 03              s0 = s0 + 0x3a1
 13345: 82 57 70                 a0 = u64 [s0 + 0x70]
 13348: 33 08 02                 a1 = 0x2
 13351: 50 20 64 01 39 15        ra = 356, jump @1079
      :                          @672 [@dyn 178]
 13357: 33 06 03                 s1 = 0x3
 13360: 95 17 55                 a0 = sp + 0x55
 13363: 33 08 03                 a1 = 0x3
 13366: 33 09                    a2 = 0
 13368: 33 0a                    a3 = 0
 13370: 0a 03                    ecalli 3 // 'write'
 13372: 7b 57 78                 u64 [s0 + 0x78] = a0
 13375: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 13378: 88 77 01                 a0 = a0 <u 0x1
 13381: 97 77 01                 a0 = a0 << 0x1
 13384: 7b 17 10                 u64 [sp + 0x10] = a0
 13387: 95 17 48                 a0 = sp + 0x48
 13390: 7b 57 18                 u64 [s0 + 0x18] = a0
 13393: 33 08 16                 a1 = 0x16
 13396: 7b 58 20                 u64 [s0 + 0x20] = a1
 13399: 95 17 ff 07              a0 = sp + 0x7ff
 13403: 95 77 19 04              a0 = a0 + 0x419
 13407: 7b 57 28                 u64 [s0 + 0x28] = a0
 13410: 7b 18 20                 u64 [sp + 0x20] = a1
 13413: 7b 58 30                 u64 [s0 + 0x30] = a1
 13416: 33 07 18 0e 01           a0 = 0x10e18
 13421: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13425: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13429: 49 21 c0 01              u64 [sp + 448] = 0
 13433: 95 17 ff 07              a0 = sp + 0x7ff
 13437: 95 77 b9 03              a0 = a0 + 0x3b9
 13441: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13445: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13450: 95 17 ff 07              a0 = sp + 0x7ff
 13454: 95 77 e9 03              a0 = a0 + 0x3e9
 13458: 95 18 a0 01              a1 = sp + 0x1a0
 13462: 50 20 66 01 56 07        ra = 358, jump @802
      :                          @673 [@dyn 179]
 13468: 82 56 50                 s1 = u64 [s0 + 0x50]
 13471: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13474: 82 55 48                 s0 = u64 [s0 + 0x48]
 13477: 82 17 10                 a0 = u64 [sp + 0x10]
 13480: 33 08                    a1 = 0
 13482: 33 09                    a2 = 0
 13484: 64 6a                    a3 = s1
 13486: 33 00 68 01              ra = 0x168
 13490: 0a 64                    ecalli 100 // 'log'
 13492: 01                       fallthrough
      :                          @674 [@dyn 180]
 13493: 82 17 38                 a0 = u64 [sp + 0x38]
 13496: c8 57 07                 a0 = a0 + s0
 13499: 53 37 00 00 f0 25        jump @680 if a0 <u 4293918720
      :                          @675
 13505: 33 07 50 00 03           a0 = 0x30050
 13510: 95 77 00 00 10           a0 = a0 + 0x100000
 13515: 01                       fallthrough
      :                          @676
 13516: 82 78                    a1 = u64 [a0]
 13518: c9 87 09                 a2 = a0 - a1
 13521: ab 69 0f                 jump @680 if a2 != s1
      :                          @677
 13524: c9 58 09                 a2 = a1 - s0
 13527: 01                       fallthrough
      :                          @678
 13528: 82 7a                    a3 = u64 [a0]
 13530: ab 8a f2                 jump @676 if a3 != a1
      :                          @679
 13533: 7b 79                    u64 [a0] = a2
 13535: 01                       fallthrough
      :                          @680
 13536: 95 16 ff 07              s1 = sp + 0x7ff
 13540: 95 66 a1 03              s1 = s1 + 0x3a1
 13544: 82 67 78                 a0 = u64 [s1 + 0x78]
 13547: 33 08 05                 a1 = 0x5
 13550: 50 20 6a 01 72 14        ra = 362, jump @1079
      :                          @681 [@dyn 181]
 13556: 95 18 55                 a1 = sp + 0x55
 13559: 33 09 03                 a2 = 0x3
 13562: 95 1a 98 00              a3 = sp + 0x98
 13566: 33 0c 00 01              a5 = 0x100
 13570: 82 17 30                 a0 = u64 [sp + 0x30]
 13573: 33 0b                    a4 = 0
 13575: 0a 02                    ecalli 2 // 'read'
 13577: 95 18 48                 a1 = sp + 0x48
 13580: 7b 68 18                 u64 [s1 + 0x18] = a1
 13583: 95 18 ff 07              a1 = sp + 0x7ff
 13587: 95 88 21 04              a1 = a1 + 0x421
 13591: 7b 68 28                 u64 [s1 + 0x28] = a1
 13594: 82 18 20                 a1 = u64 [sp + 0x20]
 13597: 7b 68 20                 u64 [s1 + 0x20] = a1
 13600: 7b 68 30                 u64 [s1 + 0x30] = a1
 13603: 33 08 60 0e 01           a1 = 0x10e60
 13608: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13612: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13617: 49 21 c0 01              u64 [sp + 448] = 0
 13621: 95 18 ff 07              a1 = sp + 0x7ff
 13625: 95 88 b9 03              a1 = a1 + 0x3b9
 13629: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13633: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13638: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13642: 95 77 01                 a0 = a0 + 0x1
 13645: 88 77 01                 a0 = a0 <u 0x1
 13648: 97 77 01                 a0 = a0 << 0x1
 13651: 7b 17 20                 u64 [sp + 0x20] = a0
 13654: 95 17 ff 07              a0 = sp + 0x7ff
 13658: 95 77 e9 03              a0 = a0 + 0x3e9
 13662: 95 18 a0 01              a1 = sp + 0x1a0
 13666: 50 20 6c 01 8a 06        ra = 364, jump @802
      :                          @682 [@dyn 182]
 13672: 82 65 50                 s0 = u64 [s1 + 0x50]
 13675: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13678: 82 66 48                 s1 = u64 [s1 + 0x48]
 13681: 82 17 20                 a0 = u64 [sp + 0x20]
 13684: 33 08                    a1 = 0
 13686: 33 09                    a2 = 0
 13688: 64 5a                    a3 = s0
 13690: 33 00 6e 01              ra = 0x16e
 13694: 0a 64                    ecalli 100 // 'log'
 13696: 01                       fallthrough
      :                          @683 [@dyn 183]
 13697: 82 17 38                 a0 = u64 [sp + 0x38]
 13700: c8 67 07                 a0 = a0 + s1
 13703: 53 37 00 00 f0 25        jump @689 if a0 <u 4293918720
      :                          @684
 13709: 33 07 50 00 03           a0 = 0x30050
 13714: 95 77 00 00 10           a0 = a0 + 0x100000
 13719: 01                       fallthrough
      :                          @685
 13720: 82 78                    a1 = u64 [a0]
 13722: c9 87 09                 a2 = a0 - a1
 13725: ab 59 0f                 jump @689 if a2 != s0
      :                          @686
 13728: c9 68 09                 a2 = a1 - s1
 13731: 01                       fallthrough
      :                          @687
 13732: 82 7a                    a3 = u64 [a0]
 13734: ab 8a f2                 jump @685 if a3 != a1
      :                          @688
 13737: 7b 79                    u64 [a0] = a2
 13739: 01                       fallthrough
      :                          @689
 13740: 95 15 ff 07              s0 = sp + 0x7ff
 13744: 95 55 a1 03              s0 = s0 + 0x3a1
 13748: 82 57 80 00              a0 = u64 [s0 + 0x80]
 13752: 33 08 06                 a1 = 0x6
 13755: 50 20 70 01 a5 13        ra = 368, jump @1079
      :                          @690 [@dyn 184]
 13761: 33 06 03                 s1 = 0x3
 13764: 95 17 55                 a0 = sp + 0x55
 13767: 33 08 03                 a1 = 0x3
 13770: 33 09                    a2 = 0
 13772: 33 0a                    a3 = 0
 13774: 0a 03                    ecalli 3 // 'write'
 13776: 7b 57                    u64 [s0] = a0
 13778: 95 77 01                 a0 = a0 + 0x1
 13781: 88 77 01                 a0 = a0 <u 0x1
 13784: 97 77 01                 a0 = a0 << 0x1
 13787: 7b 17 20                 u64 [sp + 0x20] = a0
 13790: 95 17 48                 a0 = sp + 0x48
 13793: 7b 57 18                 u64 [s0 + 0x18] = a0
 13796: 33 07 16                 a0 = 0x16
 13799: 7b 57 20                 u64 [s0 + 0x20] = a0
 13802: 7b 55 28                 u64 [s0 + 0x28] = s0
 13805: 7b 57 30                 u64 [s0 + 0x30] = a0
 13808: 33 07 90 0e 01           a0 = 0x10e90
 13813: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13817: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13821: 49 21 c0 01              u64 [sp + 448] = 0
 13825: 95 17 ff 07              a0 = sp + 0x7ff
 13829: 95 77 b9 03              a0 = a0 + 0x3b9
 13833: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13837: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13842: 95 17 ff 07              a0 = sp + 0x7ff
 13846: 95 77 e9 03              a0 = a0 + 0x3e9
 13850: 95 18 a0 01              a1 = sp + 0x1a0
 13854: 50 20 72 01 ce 05        ra = 370, jump @802
      :                          @691 [@dyn 185]
 13860: 82 56 50                 s1 = u64 [s0 + 0x50]
 13863: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13866: 82 55 48                 s0 = u64 [s0 + 0x48]
 13869: 82 17 20                 a0 = u64 [sp + 0x20]
 13872: 33 08                    a1 = 0
 13874: 33 09                    a2 = 0
 13876: 64 6a                    a3 = s1
 13878: 33 00 74 01              ra = 0x174
 13882: 0a 64                    ecalli 100 // 'log'
 13884: 01                       fallthrough
      :                          @692 [@dyn 186]
 13885: 82 17 38                 a0 = u64 [sp + 0x38]
 13888: c8 57 07                 a0 = a0 + s0
 13891: 53 37 00 00 f0 25        jump @698 if a0 <u 4293918720
      :                          @693
 13897: 33 07 50 00 03           a0 = 0x30050
 13902: 95 77 00 00 10           a0 = a0 + 0x100000
 13907: 01                       fallthrough
      :                          @694
 13908: 82 78                    a1 = u64 [a0]
 13910: c9 87 09                 a2 = a0 - a1
 13913: ab 69 0f                 jump @698 if a2 != s1
      :                          @695
 13916: c9 58 09                 a2 = a1 - s0
 13919: 01                       fallthrough
      :                          @696
 13920: 82 7a                    a3 = u64 [a0]
 13922: ab 8a f2                 jump @694 if a3 != a1
      :                          @697
 13925: 7b 79                    u64 [a0] = a2
 13927: 01                       fallthrough
      :                          @698
 13928: 95 16 ff 07              s1 = sp + 0x7ff
 13932: 95 66 a1 03              s1 = s1 + 0x3a1
 13936: 82 67                    a0 = u64 [s1]
 13938: 33 08 07                 a1 = 0x7
 13941: 50 20 76 01 eb 12        ra = 374, jump @1079
      :                          @699 [@dyn 187]
 13947: 95 18 98 00              a1 = sp + 0x98
 13951: 82 17 30                 a0 = u64 [sp + 0x30]
 13954: 0a 04                    ecalli 4 // 'info'
 13956: 64 75                    s0 = a0
 13958: 7b 67 78                 u64 [s1 + 0x78] = a0
 13961: 33 08 08                 a1 = 0x8
 13964: 50 20 78 01 d4 12        ra = 376, jump @1079
      :                          @700 [@dyn 188]
 13970: 88 57 01                 a0 = s0 <u 0x1
 13973: 97 77 01                 a0 = a0 << 0x1
 13976: 7b 17 20                 u64 [sp + 0x20] = a0
 13979: 95 17 48                 a0 = sp + 0x48
 13982: 7b 67 18                 u64 [s1 + 0x18] = a0
 13985: 33 08 16                 a1 = 0x16
 13988: 7b 68 20                 u64 [s1 + 0x20] = a1
 13991: 95 17 ff 07              a0 = sp + 0x7ff
 13995: 95 77 19 04              a0 = a0 + 0x419
 13999: 7b 67 28                 u64 [s1 + 0x28] = a0
 14002: 7b 18 30                 u64 [sp + 0x30] = a1
 14005: 7b 68 30                 u64 [s1 + 0x30] = a1
 14008: 33 07 c8 0e 01           a0 = 0x10ec8
 14013: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14017: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 14022: 49 21 c0 01              u64 [sp + 448] = 0
 14026: 95 17 ff 07              a0 = sp + 0x7ff
 14030: 95 77 b9 03              a0 = a0 + 0x3b9
 14034: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 14038: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 14043: 95 17 ff 07              a0 = sp + 0x7ff
 14047: 95 77 e9 03              a0 = a0 + 0x3e9
 14051: 95 18 a0 01              a1 = sp + 0x1a0
 14055: 50 20 7a 01 05 05        ra = 378, jump @802
      :                          @701 [@dyn 189]
 14061: 95 17 ff 07              a0 = sp + 0x7ff
 14065: 95 77 a1 03              a0 = a0 + 0x3a1
 14069: 82 76 50                 s1 = u64 [a0 + 0x50]
 14072: 82 7b 58                 a4 = u64 [a0 + 0x58]
 14075: 82 75 48                 s0 = u64 [a0 + 0x48]
 14078: 82 17 20                 a0 = u64 [sp + 0x20]
 14081: 33 08                    a1 = 0
 14083: 33 09                    a2 = 0
 14085: 64 6a                    a3 = s1
 14087: 33 00 7c 01              ra = 0x17c
 14091: 0a 64                    ecalli 100 // 'log'
 14093: 01                       fallthrough
      :                          @702 [@dyn 190]
 14094: 82 17 38                 a0 = u64 [sp + 0x38]
 14097: c8 57 07                 a0 = a0 + s0
 14100: 53 37 00 00 f0 27        jump @708 if a0 <u 4293918720
      :                          @703
 14106: 33 07 50 00 03           a0 = 0x30050
 14111: 95 77 00 00 10           a0 = a0 + 0x100000
 14116: 01                       fallthrough
      :                          @704
 14117: 82 78                    a1 = u64 [a0]
 14119: c9 87 09                 a2 = a0 - a1
 14122: ab 69 11                 jump @708 if a2 != s1
      :                          @705
 14125: c9 58 09                 a2 = a1 - s0
 14128: 01                       fallthrough
      :                          @706
 14129: 82 7a                    a3 = u64 [a0]
 14131: ab 8a f2                 jump @704 if a3 != a1
      :                          @707
 14134: 7b 79                    u64 [a0] = a2
 14136: 0a                       ecalli 0 // 'gas'
 14137: 28 04                    jump @709
      :                          @708
 14139: 0a                       ecalli 0 // 'gas'
 14140: 01                       fallthrough
      :                          @709
 14141: 95 16 ff 07              s1 = sp + 0x7ff
 14145: 95 66 a1 03              s1 = s1 + 0x3a1
 14149: 7b 67 80 00              u64 [s1 + 0x80] = a0
 14153: 33 08 09                 a1 = 0x9
 14156: 50 20 7e 01 14 12        ra = 382, jump @1079
      :                          @710 [@dyn 191]
 14162: 95 17 ff 07              a0 = sp + 0x7ff
 14166: 95 77 21 04              a0 = a0 + 0x421
 14170: 7b 67 48                 u64 [s1 + 0x48] = a0
 14173: 82 17 30                 a0 = u64 [sp + 0x30]
 14176: 7b 67 50                 u64 [s1 + 0x50] = a0
 14179: 33 07 18 0f 01           a0 = 0x10f18
 14184: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14188: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14193: 49 21 c0 01              u64 [sp + 448] = 0
 14197: 95 17 ff 07              a0 = sp + 0x7ff
 14201: 95 77 e9 03              a0 = a0 + 0x3e9
 14205: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 14209: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 14214: 95 17 ff 07              a0 = sp + 0x7ff
 14218: 95 77 b9 03              a0 = a0 + 0x3b9
 14222: 95 18 a0 01              a1 = sp + 0x1a0
 14226: 50 20 80 01 5a 04        ra = 384, jump @802
      :                          @711 [@dyn 192]
 14232: 82 65 20                 s0 = u64 [s1 + 0x20]
 14235: 82 6b 28                 a4 = u64 [s1 + 0x28]
 14238: 82 66 18                 s1 = u64 [s1 + 0x18]
 14241: 33 07 04                 a0 = 0x4
 14244: 33 08                    a1 = 0
 14246: 33 09                    a2 = 0
 14248: 64 5a                    a3 = s0
 14250: 33 00 82 01              ra = 0x182
 14254: 0a 64                    ecalli 100 // 'log'
 14256: 01                       fallthrough
      :                          @712 [@dyn 193]
 14257: 82 17 38                 a0 = u64 [sp + 0x38]
 14260: c8 67 07                 a0 = a0 + s1
 14263: 53 37 00 00 f0 27        jump @718 if a0 <u 4293918720
      :                          @713
 14269: 33 07 50 00 03           a0 = 0x30050
 14274: 95 77 00 00 10           a0 = a0 + 0x100000
 14279: 01                       fallthrough
      :                          @714
 14280: 82 78                    a1 = u64 [a0]
 14282: c9 87 09                 a2 = a0 - a1
 14285: ab 59 11                 jump @718 if a2 != s0
      :                          @715
 14288: c9 68 09                 a2 = a1 - s1
 14291: 01                       fallthrough
      :                          @716
 14292: 82 7a                    a3 = u64 [a0]
 14294: ab 8a f2                 jump @714 if a3 != a1
      :                          @717
 14297: 7b 79                    u64 [a0] = a2
 14299: 33 0b                    a4 = 0
 14301: 01                       fallthrough
      :                          @718
 14302: 82 19 28                 a2 = u64 [sp + 0x28]
 14305: 55 19 21 27 01           jump @735 if a2 >=u 33
      :                          @719
 14310: 33 05 19 00 03           s0 = 0x30019
 14315: 33 07 19 00 03           a0 = 0x30019
 14320: 82 18 18                 a1 = u64 [sp + 0x18]
 14323: 50 20 84 01 74 06        ra = 388, jump @851
      :                          @720 [@dyn 194]
 14329: 82 18 48                 a1 = u64 [sp + 0x48]
 14332: 3a 09 00 00 03           a2 = u64 [0x30000]
 14337: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 14347: ca 78 07                 a0 = a1 * a0
 14350: 95 16 ff 07              s1 = sp + 0x7ff
 14354: 95 66 a1 03              s1 = s1 + 0x3a1
 14358: ae 97 38                 jump @725 if a0 >=u a2
      :                          @721
 14361: 33 07 33                 a0 = 0x33
 14364: 51 18 09 27              jump @723 if a1 == 9
      :                          @722
 14368: 0a 08                    ecalli 8 // 'checkpoint'
 14370: 33 0a 38 0f 01           a3 = 0x10f38
 14375: 33 07 03                 a0 = 0x3
 14378: 33 0b 11                 a4 = 0x11
 14381: 33 08                    a1 = 0
 14383: 33 09                    a2 = 0
 14385: 0a 64                    ecalli 100 // 'log'
 14387: 82 17 48                 a0 = u64 [sp + 0x48]
 14390: 95 77 2a                 a0 = a0 + 0x2a
 14393: 33 08 07                 a1 = 0x7
 14396: 33 00 86 01              ra = 0x186
 14400: 28 20 11                 jump @1079
      :                          @723
 14403: 33 08 07                 a1 = 0x7
 14406: 50 20 86 01 1a 11        ra = 390, jump @1079
      :                          @724 [@dyn 195]
 14412: 32 07                    jump [a0]
      :                          @725
 14414: 64 57                    a0 = s0
 14416: 0a 10                    ecalli 16 // 'oyield'
 14418: 7b 67                    u64 [s1] = a0
 14420: 88 77 01                 a0 = a0 <u 0x1
 14423: 97 77 01                 a0 = a0 << 0x1
 14426: 7b 17 30                 u64 [sp + 0x30] = a0
 14429: 95 17 48                 a0 = sp + 0x48
 14432: 7b 67 18                 u64 [s1 + 0x18] = a0
 14435: 33 07 16                 a0 = 0x16
 14438: 7b 67 20                 u64 [s1 + 0x20] = a0
 14441: 7b 66 28                 u64 [s1 + 0x28] = s1
 14444: 7b 67 30                 u64 [s1 + 0x30] = a0
 14447: 33 07 50 0f 01           a0 = 0x10f50
 14452: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14456: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14461: 49 21 c0 01              u64 [sp + 448] = 0
 14465: 95 18 ff 07              a1 = sp + 0x7ff
 14469: 95 88 b9 03              a1 = a1 + 0x3b9
 14473: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 14477: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 14482: 95 17 ff 07              a0 = sp + 0x7ff
 14486: 95 77 e9 03              a0 = a0 + 0x3e9
 14490: 95 18 a0 01              a1 = sp + 0x1a0
 14494: 50 20 88 01 4e 03        ra = 392, jump @802
      :                          @726 [@dyn 196]
 14500: 95 17 ff 07              a0 = sp + 0x7ff
 14504: 95 77 a1 03              a0 = a0 + 0x3a1
 14508: 82 76 50                 s1 = u64 [a0 + 0x50]
 14511: 82 7b 58                 a4 = u64 [a0 + 0x58]
 14514: 82 75 48                 s0 = u64 [a0 + 0x48]
 14517: 82 17 30                 a0 = u64 [sp + 0x30]
 14520: 33 08                    a1 = 0
 14522: 33 09                    a2 = 0
 14524: 64 6a                    a3 = s1
 14526: 33 00 8a 01              ra = 0x18a
 14530: 0a 64                    ecalli 100 // 'log'
 14532: 01                       fallthrough
      :                          @727 [@dyn 197]
 14533: 82 17 38                 a0 = u64 [sp + 0x38]
 14536: c8 57 07                 a0 = a0 + s0
 14539: 53 37 00 00 f0 31        jump @733 if a0 <u 4293918720
      :                          @728
 14545: 33 07 50 00 03           a0 = 0x30050
 14550: 95 77 00 00 10           a0 = a0 + 0x100000
 14555: 01                       fallthrough
      :                          @729
 14556: 82 78                    a1 = u64 [a0]
 14558: c9 87 09                 a2 = a0 - a1
 14561: ab 69 1b                 jump @733 if a2 != s1
      :                          @730
 14564: c9 58 09                 a2 = a1 - s0
 14567: 01                       fallthrough
      :                          @731
 14568: 82 7a                    a3 = u64 [a0]
 14570: ab 8a f2                 jump @729 if a3 != a1
      :                          @732
 14573: 7b 79                    u64 [a0] = a2
 14575: 33 0b                    a4 = 0
 14577: 33 09 19 00 03           a2 = 0x30019
 14582: 33 08 20                 a1 = 0x20
 14585: 28 49 df                 jump @353
      :                          @733
 14588: 33 09 19 00 03           a2 = 0x30019
 14593: 33 08 20                 a1 = 0x20
 14596: 28 3e df                 jump @353
      :                          @734
 14599: 00                       trap
      :                          @735
 14600: 00                       trap
      :                          @736
 14601: 00                       trap
      :                          @737 [export #2: 'on_transfer']
 14602: 95 11 88                 sp = sp + 0xffffffffffffff88
 14605: 7b 10 70                 u64 [sp + 0x70] = ra
 14608: 7b 15 68                 u64 [sp + 0x68] = s0
 14611: 7b 16 60                 u64 [sp + 0x60] = s1
 14614: 0a                       ecalli 0 // 'gas'
 14615: 7b 17                    u64 [sp] = a0
 14617: 33 08 04                 a1 = 0x4
 14620: 50 20 8c 01 44 10        ra = 396, jump @1079
      :                          @738 [@dyn 198]
 14626: 64 17                    a0 = sp
 14628: 7b 17 50                 u64 [sp + 0x50] = a0
 14631: 33 07 16                 a0 = 0x16
 14634: 7b 17 58                 u64 [sp + 0x58] = a0
 14637: 33 07 a0 0f 01           a0 = 0x10fa0
 14642: 7b 17 20                 u64 [sp + 0x20] = a0
 14645: 49 11 28 02              u64 [sp + 40] = 0x2
 14649: 49 11 40                 u64 [sp + 64] = 0
 14652: 95 17 50                 a0 = sp + 0x50
 14655: 7b 17 30                 u64 [sp + 0x30] = a0
 14658: 49 11 38 01              u64 [sp + 56] = 0x1
 14662: 95 17 08                 a0 = sp + 0x8
 14665: 95 18 20                 a1 = sp + 0x20
 14668: 50 20 8e 01 a0 02        ra = 398, jump @802
      :                          @739 [@dyn 199]
 14674: 82 15 10                 s0 = u64 [sp + 0x10]
 14677: 82 1b 18                 a4 = u64 [sp + 0x18]
 14680: 82 16 08                 s1 = u64 [sp + 0x8]
 14683: 33 07 04                 a0 = 0x4
 14686: 33 08                    a1 = 0
 14688: 33 09                    a2 = 0
 14690: 64 5a                    a3 = s0
 14692: 33 00 90 01              ra = 0x190
 14696: 0a 64                    ecalli 100 // 'log'
 14698: 01                       fallthrough
      :                          @740 [@dyn 200]
 14699: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 14704: 53 38 00 00 f0 27        jump @746 if a1 <u 4293918720
      :                          @741
 14710: 33 07 50 00 03           a0 = 0x30050
 14715: 95 77 00 00 10           a0 = a0 + 0x100000
 14720: 01                       fallthrough
      :                          @742
 14721: 82 78                    a1 = u64 [a0]
 14723: c9 87 09                 a2 = a0 - a1
 14726: ab 59 11                 jump @746 if a2 != s0
      :                          @743
 14729: c9 68 09                 a2 = a1 - s1
 14732: 01                       fallthrough
      :                          @744
 14733: 82 7a                    a3 = u64 [a0]
 14735: ab 8a f2                 jump @742 if a3 != a1
      :                          @745
 14738: 7b 79                    u64 [a0] = a2
 14740: 33 0b                    a4 = 0
 14742: 01                       fallthrough
      :                          @746
 14743: 33 07 00 00 01           a0 = 0x10000
 14748: 33 08                    a1 = 0
 14750: 82 10 70                 ra = u64 [sp + 0x70]
 14753: 82 15 68                 s0 = u64 [sp + 0x68]
 14756: 82 16 60                 s1 = u64 [sp + 0x60]
 14759: 95 11 78                 sp = sp + 0x78
 14762: 32 00                    ret
      :                          @747
 14764: 00                       trap
      :                          @748
 14765: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14768: 7b 10 40                 u64 [sp + 0x40] = ra
 14771: 7b 15 38                 u64 [sp + 0x38] = s0
 14774: 7b 16 30                 u64 [sp + 0x30] = s1
 14777: c8 89 09                 a2 = a2 + a1
 14780: ac 89 53                 jump @756 if a2 <u a1
      :                          @749
 14783: 64 75                    s0 = a0
 14785: 82 77                    a0 = u64 [a0]
 14787: 97 78 01                 a1 = a0 << 0x1
 14790: 33 0a 08                 a3 = 0x8
 14793: e4 a9 09                 a2 = maxu(a2, a3)
 14796: e4 98 06                 s1 = maxu(a1, a2)
 14799: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14802: 98 88 3f                 a1 = a1 >> 0x3f
 14805: 51 07 12                 jump @751 if a0 == 0
      :                          @750
 14808: 82 59 08                 a2 = u64 [s0 + 0x8]
 14811: 7b 19 18                 u64 [sp + 0x18] = a2
 14814: 49 11 20 01              u64 [sp + 32] = 0x1
 14818: 7b 17 28                 u64 [sp + 0x28] = a0
 14821: 28 06                    jump @752
      :                          @751
 14823: 49 11 20                 u64 [sp + 32] = 0
 14826: 01                       fallthrough
      :                          @752
 14827: 64 17                    a0 = sp
 14829: 95 1a 18                 a3 = sp + 0x18
 14832: 64 69                    a2 = s1
 14834: 50 20 92 01 32           ra = 402, jump @759
      :                          @753 [@dyn 201]
 14839: 82 18                    a1 = u64 [sp]
 14841: 82 17 08                 a0 = u64 [sp + 0x8]
 14844: 51 08 14                 jump @757 if a1 == 0
      :                          @754
 14847: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 14857: aa 87 0d                 jump @758 if a0 == a1
      :                          @755
 14860: 52 07 a0                 jump @747 if a0 != 0
      :                          @756
 14863: 00                       trap
      :                          @757
 14864: 7b 57 08                 u64 [s0 + 0x8] = a0
 14867: 7b 56                    u64 [s0] = s1
 14869: 01                       fallthrough
      :                          @758
 14870: 82 10 40                 ra = u64 [sp + 0x40]
 14873: 82 15 38                 s0 = u64 [sp + 0x38]
 14876: 82 16 30                 s1 = u64 [sp + 0x30]
 14879: 95 11 48                 sp = sp + 0x48
 14882: 32 00                    ret
      :                          @759
 14884: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14887: 7b 10 30                 u64 [sp + 0x30] = ra
 14890: 7b 15 28                 u64 [sp + 0x28] = s0
 14893: 7b 16 20                 u64 [sp + 0x20] = s1
 14896: 64 95                    s0 = a2
 14898: 64 72                    t0 = a0
 14900: 51 08 7a                 jump @769 if a1 == 0
      :                          @760
 14903: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14906: 51 07 7d                 jump @770 if a0 == 0
      :                          @761
 14909: 82 a9 10                 a2 = u64 [a3 + 0x10]
 14912: 51 09 ab 00              jump @777 if a2 == 0
      :                          @762
 14916: 82 a8                    a1 = u64 [a3]
 14918: 33 06 50 00 03           s1 = 0x30050
 14923: 33 03 00 00 10           t1 = 0x100000
 14928: c8 36 06                 s1 = s1 + t1
 14931: 01                       fallthrough
      :                          @763
 14932: 82 6a                    a3 = u64 [s1]
 14934: c8 5a 07                 a0 = a3 + s0
 14937: ac a7 d0 00              jump @783 if a0 <u a3
      :                          @764
 14941: 95 7b 01                 a4 = a0 + 0x1
 14944: 88 bc 01                 a5 = a4 <u 0x1
 14947: d8 b3 0b                 a4 = t1 <u a4
 14950: d4 cb 0b                 a4 = a4 | a5
 14953: 52 0b c0 00              jump @783 if a4 != 0
      :                          @765
 14957: 82 6b                    a4 = u64 [s1]
 14959: ab ab e5                 jump @763 if a4 != a3
      :                          @766
 14962: 7b 67                    u64 [s1] = a0
 14964: 33 0c                    a5 = 0
 14966: 7b 12 18                 u64 [sp + 0x18] = t0
 14969: 33 0a 50 00 03           a3 = 0x30050
 14974: 33 0b 00 00 10           a4 = 0x100000
 14979: 7b 1a                    u64 [sp] = a3
 14981: c8 ba 0a                 a3 = a3 + a4
 14984: c9 7a 07                 a0 = a3 - a0
 14987: 7b 17 10                 u64 [sp + 0x10] = a0
 14990: 7b 18 08                 u64 [sp + 0x8] = a1
 14993: 64 96                    s1 = a2
 14995: 50 20 94 01 d4 03        ra = 404, jump @851
      :                          @767 [@dyn 202]
 15001: 54 36 00 00 10 98 00     jump @784 if s1 <=u 1048576
      :                          @768
 15008: 82 12 18                 t0 = u64 [sp + 0x18]
 15011: 82 18 10                 a1 = u64 [sp + 0x10]
 15014: 33 07                    a0 = 0
 15016: 7b 28 08                 u64 [t0 + 0x8] = a1
 15019: 28 b5 00                 jump @790
      :                          @769
 15022: 49 12 08                 u64 [t0 + 8] = 0
 15025: 33 07 01                 a0 = 0x1
 15028: 28 ac 00                 jump @790
      :                          @770
 15031: 33 09 50 00 03           a2 = 0x30050
 15036: 33 07 00 00 10           a0 = 0x100000
 15041: c8 79 09                 a2 = a2 + a0
 15044: 01                       fallthrough
      :                          @771
 15045: 82 9a                    a3 = u64 [a2]
 15047: c8 5a 08                 a1 = a3 + s0
 15050: ac a8 5f                 jump @783 if a1 <u a3
      :                          @772
 15053: 95 8b 01                 a4 = a1 + 0x1
 15056: 88 bc 01                 a5 = a4 <u 0x1
 15059: d8 b7 0b                 a4 = a0 <u a4
 15062: d4 cb 0b                 a4 = a4 | a5
 15065: 52 0b 50                 jump @783 if a4 != 0
      :                          @773
 15068: 82 9b                    a4 = u64 [a2]
 15070: ab ab e7                 jump @771 if a4 != a3
      :                          @774
 15073: 7b 98                    u64 [a2] = a1
 15075: 33 0c                    a5 = 0
 15077: 01                       fallthrough
      :                          @775
 15078: ab ab df                 jump @771 if a4 != a3
      :                          @776
 15081: 28 31                    jump @782
      :                          @777
 15083: 33 09 50 00 03           a2 = 0x30050
 15088: 33 07 00 00 10           a0 = 0x100000
 15093: c8 79 09                 a2 = a2 + a0
 15096: 01                       fallthrough
      :                          @778
 15097: 82 9a                    a3 = u64 [a2]
 15099: c8 5a 08                 a1 = a3 + s0
 15102: ac a8 2b                 jump @783 if a1 <u a3
      :                          @779
 15105: 95 8b 01                 a4 = a1 + 0x1
 15108: 88 bc 01                 a5 = a4 <u 0x1
 15111: d8 b7 0b                 a4 = a0 <u a4
 15114: d4 cb 0b                 a4 = a4 | a5
 15117: 52 0b 1c                 jump @783 if a4 != 0
      :                          @780
 15120: 82 9b                    a4 = u64 [a2]
 15122: ab ab e7                 jump @778 if a4 != a3
      :                          @781
 15125: 7b 98                    u64 [a2] = a1
 15127: 33 0c                    a5 = 0
 15129: 01                       fallthrough
      :                          @782
 15130: 33 07 50 00 13           a0 = 0x130050
 15135: c9 87 08                 a1 = a0 - a1
 15138: 33 07                    a0 = 0
 15140: 7b 28 08                 u64 [t0 + 0x8] = a1
 15143: 28 39                    jump @790
      :                          @783
 15145: 33 07 01                 a0 = 0x1
 15148: 7b 27 08                 u64 [t0 + 0x8] = a0
 15151: 28 31                    jump @790
      :                          @784
 15153: 64 6c                    a5 = s1
 15155: 82 17                    a0 = u64 [sp]
 15157: 95 77 00 00 10           a0 = a0 + 0x100000
 15162: 82 12 18                 t0 = u64 [sp + 0x18]
 15165: 82 16 08                 s1 = u64 [sp + 0x8]
 15168: 01                       fallthrough
      :                          @785
 15169: 82 78                    a1 = u64 [a0]
 15171: c9 87 09                 a2 = a0 - a1
 15174: ab 69 11                 jump @789 if a2 != s1
      :                          @786
 15177: c9 c8 09                 a2 = a1 - a5
 15180: 01                       fallthrough
      :                          @787
 15181: 82 7a                    a3 = u64 [a0]
 15183: ab 8a f2                 jump @785 if a3 != a1
      :                          @788
 15186: 7b 79                    u64 [a0] = a2
 15188: 33 0b                    a4 = 0
 15190: 01                       fallthrough
      :                          @789
 15191: 82 18 10                 a1 = u64 [sp + 0x10]
 15194: 33 07                    a0 = 0
 15196: 7b 28 08                 u64 [t0 + 0x8] = a1
 15199: 01                       fallthrough
      :                          @790
 15200: 7b 25 10                 u64 [t0 + 0x10] = s0
 15203: 7b 27                    u64 [t0] = a0
 15205: 82 10 30                 ra = u64 [sp + 0x30]
 15208: 82 15 28                 s0 = u64 [sp + 0x28]
 15211: 82 16 20                 s1 = u64 [sp + 0x20]
 15214: 95 11 38                 sp = sp + 0x38
 15217: 32 00                    ret
      :                          @791
 15219: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 15222: 7b 10 40                 u64 [sp + 0x40] = ra
 15225: 7b 15 38                 u64 [sp + 0x38] = s0
 15228: 7b 16 30                 u64 [sp + 0x30] = s1
 15231: 95 88 01                 a1 = a1 + 0x1
 15234: 51 08 55                 jump @799 if a1 == 0
      :                          @792
 15237: 64 75                    s0 = a0
 15239: 82 77                    a0 = u64 [a0]
 15241: 97 79 01                 a2 = a0 << 0x1
 15244: 33 0a 08                 a3 = 0x8
 15247: e4 a8 08                 a1 = maxu(a1, a3)
 15250: e4 89 06                 s1 = maxu(a2, a1)
 15253: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 15256: 98 88 3f                 a1 = a1 >> 0x3f
 15259: 51 07 12                 jump @794 if a0 == 0
      :                          @793
 15262: 82 59 08                 a2 = u64 [s0 + 0x8]
 15265: 7b 19 18                 u64 [sp + 0x18] = a2
 15268: 49 11 20 01              u64 [sp + 32] = 0x1
 15272: 7b 17 28                 u64 [sp + 0x28] = a0
 15275: 28 06                    jump @795
      :                          @794
 15277: 49 11 20                 u64 [sp + 32] = 0
 15280: 01                       fallthrough
      :                          @795
 15281: 64 17                    a0 = sp
 15283: 95 1a 18                 a3 = sp + 0x18
 15286: 64 69                    a2 = s1
 15288: 50 20 96 01 6c fe        ra = 406, jump @759
      :                          @796 [@dyn 203]
 15294: 82 18                    a1 = u64 [sp]
 15296: 82 17 08                 a0 = u64 [sp + 0x8]
 15299: 51 08 15                 jump @800 if a1 == 0
      :                          @797
 15302: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 15312: aa 87 0e                 jump @801 if a0 == a1
      :                          @798
 15315: 52 07 d9 fd              jump @747 if a0 != 0
      :                          @799
 15319: 00                       trap
      :                          @800
 15320: 7b 57 08                 u64 [s0 + 0x8] = a0
 15323: 7b 56                    u64 [s0] = s1
 15325: 01                       fallthrough
      :                          @801
 15326: 82 10 40                 ra = u64 [sp + 0x40]
 15329: 82 15 38                 s0 = u64 [sp + 0x38]
 15332: 82 16 30                 s1 = u64 [sp + 0x30]
 15335: 95 11 48                 sp = sp + 0x48
 15338: 32 00                    ret
      :                          @802
 15340: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 15343: 7b 10 30                 u64 [sp + 0x30] = ra
 15346: 7b 15 28                 u64 [sp + 0x28] = s0
 15349: 7b 16 20                 u64 [sp + 0x20] = s1
 15352: 64 89                    a2 = a1
 15354: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15357: 64 75                    s0 = a0
 15359: 51 0a 35                 jump @807 if a3 == 0
      :                          @803
 15362: 82 98                    a1 = u64 [a2]
 15364: 33 07                    a0 = 0
 15366: 95 8b 08                 a4 = a1 + 0x8
 15369: 01                       fallthrough
      :                          @804
 15370: 82 bc                    a5 = u64 [a4]
 15372: c8 c7 07                 a0 = a0 + a5
 15375: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15378: 95 bb 10                 a4 = a4 + 0x10
 15381: 52 0a f5                 jump @804 if a3 != 0
      :                          @805
 15384: 82 9a 18                 a3 = u64 [a2 + 0x18]
 15387: 51 0a 24                 jump @809 if a3 == 0
      :                          @806
 15390: 82 88 08                 a1 = u64 [a1 + 0x8]
 15393: 8e 88                    a1 = a1 >u 0
 15395: 88 7a 10                 a3 = a0 <u 0x10
 15398: 85 aa 01                 a3 = a3 ^ 0x1
 15401: d4 a8 08                 a1 = a1 | a3
 15404: 89 7a                    a3 = a0 <s 0
 15406: e0 a8 08                 a1 = a1 & ~a3
 15409: 52 08 0a                 jump @808 if a1 != 0
      :                          @807
 15412: 33 07                    a0 = 0
 15414: 33 08 01                 a1 = 0x1
 15417: 28 4c                    jump @817
      :                          @808
 15419: 97 77 01                 a0 = a0 << 0x1
 15422: 01                       fallthrough
      :                          @809
 15423: 51 07 42                 jump @816 if a0 == 0
      :                          @810
 15426: 57 07 7a                 jump @821 if a0 <s 0
      :                          @811
 15429: 64 52                    t0 = s0
 15431: 33 0b 50 00 03           a4 = 0x30050
 15436: 33 08 00 00 10           a1 = 0x100000
 15441: c8 8b 0b                 a4 = a4 + a1
 15444: 01                       fallthrough
      :                          @812
 15445: 82 bc                    a5 = u64 [a4]
 15447: c8 7c 0a                 a3 = a5 + a0
 15450: ac ca 52 fd              jump @747 if a3 <u a5
      :                          @813
 15454: 95 a5 01                 s0 = a3 + 0x1
 15457: 88 56 01                 s1 = s0 <u 0x1
 15460: d8 58 05                 s0 = a1 <u s0
 15463: d4 65 05                 s0 = s0 | s1
 15466: 52 05 42 fd              jump @747 if s0 != 0
      :                          @814
 15470: 82 b6                    s1 = u64 [a4]
 15472: ab c6 e5                 jump @812 if s1 != a5
      :                          @815
 15475: 7b ba                    u64 [a4] = a3
 15477: 33 08 50 00 13           a1 = 0x130050
 15482: c9 a8 08                 a1 = a1 - a3
 15485: 64 25                    s0 = t0
 15487: 28 06                    jump @817
      :                          @816
 15489: 33 08 01                 a1 = 0x1
 15492: 01                       fallthrough
      :                          @817
 15493: 7b 17                    u64 [sp] = a0
 15495: 7b 18 08                 u64 [sp + 0x8] = a1
 15498: 49 11 10                 u64 [sp + 16] = 0
 15501: 33 08 c0 0f 01           a1 = 0x10fc0
 15506: 64 17                    a0 = sp
 15508: 50 20 98 01 85 06        ra = 408, jump @946
      :                          @818 [@dyn 204]
 15514: 52 07 21                 jump @820 if a0 != 0
      :                          @819
 15517: 82 17 10                 a0 = u64 [sp + 0x10]
 15520: 82 18 08                 a1 = u64 [sp + 0x8]
 15523: 82 19                    a2 = u64 [sp]
 15525: 7b 57 10                 u64 [s0 + 0x10] = a0
 15528: 7b 58 08                 u64 [s0 + 0x8] = a1
 15531: 7b 59                    u64 [s0] = a2
 15533: 82 10 30                 ra = u64 [sp + 0x30]
 15536: 82 15 28                 s0 = u64 [sp + 0x28]
 15539: 82 16 20                 s1 = u64 [sp + 0x20]
 15542: 95 11 38                 sp = sp + 0x38
 15545: 32 00                    ret
      :                          @820
 15547: 00                       trap
      :                          @821
 15548: 00                       trap
      :                          @822 [@dyn 205]
 15549: 82 72                    t0 = u64 [a0]
 15551: 33 09 00 00 f0           a2 = 0xfffffffffff00000
 15556: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
 15561: ac 9a 28                 jump @828 if a3 <u a2
      :                          @823
 15564: 82 77 08                 a0 = u64 [a0 + 0x8]
 15567: 33 09 50 00 03           a2 = 0x30050
 15572: 95 99 00 00 10           a2 = a2 + 0x100000
 15577: 01                       fallthrough
      :                          @824
 15578: 82 9a                    a3 = u64 [a2]
 15580: c9 a9 0b                 a4 = a2 - a3
 15583: ab 7b 12                 jump @828 if a4 != a0
      :                          @825
 15586: c9 2a 0b                 a4 = a3 - t0
 15589: 01                       fallthrough
      :                          @826
 15590: 82 9c                    a5 = u64 [a2]
 15592: ab ac f2                 jump @824 if a5 != a3
      :                          @827
 15595: 7b 9b                    u64 [a2] = a4
 15597: 33 08                    a1 = 0
 15599: 32 00                    ret
      :                          @828
 15601: 32 00                    ret
      :                          @829 [@dyn 206]
 15603: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15606: 7b 10 18                 u64 [sp + 0x18] = ra
 15609: 7b 15 10                 u64 [sp + 0x10] = s0
 15612: 7b 16 08                 u64 [sp + 0x8] = s1
 15615: 64 75                    s0 = a0
 15617: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15620: 82 77                    a0 = u64 [a0]
 15622: c9 a7 07                 a0 = a0 - a3
 15625: 64 96                    s1 = a2
 15627: ac 97 2b                 jump @832 if a0 <u a2
      :                          @830
 15630: 7b 1a                    u64 [sp] = a3
 15632: 82 57 08                 a0 = u64 [s0 + 0x8]
 15635: c8 a7 07                 a0 = a0 + a3
 15638: 64 69                    a2 = s1
 15640: 50 20 9e 01 4f 01        ra = 414, jump @851
      :                          @831 [@dyn 207]
 15646: 82 17                    a0 = u64 [sp]
 15648: c8 76 06                 s1 = s1 + a0
 15651: 7b 56 10                 u64 [s0 + 0x10] = s1
 15654: 33 07                    a0 = 0
 15656: 82 10 18                 ra = u64 [sp + 0x18]
 15659: 82 15 10                 s0 = u64 [sp + 0x10]
 15662: 82 16 08                 s1 = u64 [sp + 0x8]
 15665: 95 11 20                 sp = sp + 0x20
 15668: 32 00                    ret
      :                          @832
 15670: 64 57                    a0 = s0
 15672: 7b 18                    u64 [sp] = a1
 15674: 64 a8                    a1 = a3
 15676: 64 69                    a2 = s1
 15678: 50 20 a0 01 6f fc        ra = 416, jump @748
      :                          @833 [@dyn 208]
 15684: 82 18                    a1 = u64 [sp]
 15686: 82 5a 10                 a3 = u64 [s0 + 0x10]
 15689: 28 c5                    jump @830
      :                          @834 [@dyn 209]
 15691: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15694: 7b 10 20                 u64 [sp + 0x20] = ra
 15697: 7b 15 18                 u64 [sp + 0x18] = s0
 15700: 7b 16 10                 u64 [sp + 0x10] = s1
 15703: 64 86                    s1 = a1
 15705: 83 88                    i32 a1 = a1 + 0
 15707: 33 09 80 00              a2 = 0x80
 15711: 64 7a                    a3 = a0
 15713: ae 98 2c                 jump @839 if a1 >=u a2
      :                          @835
 15716: 82 a8 10                 a1 = u64 [a3 + 0x10]
 15719: 82 a7                    a0 = u64 [a3]
 15721: ab 78 13                 jump @838 if a1 != a0
      :                          @836
 15724: 64 a7                    a0 = a3
 15726: 64 a5                    s0 = a3
 15728: 50 20 a4 01 03 fe        ra = 420, jump @791
      :                          @837 [@dyn 210]
 15734: 64 5a                    a3 = s0
 15736: 82 58 10                 a1 = u64 [s0 + 0x10]
 15739: 01                       fallthrough
      :                          @838
 15740: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15743: c8 87 07                 a0 = a0 + a1
 15746: 78 76                    u8 [a0] = s1
 15748: 95 88 01                 a1 = a1 + 0x1
 15751: 7b a8 10                 u64 [a3 + 0x10] = a1
 15754: 28 ac 00                 jump @847
      :                          @839
 15757: 8b 67 0b                 i32 a0 = s1 >> 0xb
 15760: 48 11 0c                 u32 [sp + 12] = 0
 15763: 52 07 1c                 jump @841 if a0 != 0
      :                          @840
 15766: 98 67 06                 a0 = s1 >> 0x6
 15769: 86 77 c0 00              a0 = a0 | 0xc0
 15773: 78 17 0c                 u8 [sp + 0xc] = a0
 15776: 84 67 3f                 a0 = s1 & 0x3f
 15779: 86 77 80 00              a0 = a0 | 0x80
 15783: 78 17 0d                 u8 [sp + 0xd] = a0
 15786: 33 06 02                 s1 = 0x2
 15789: 28 63                    jump @844
      :                          @841
 15791: 8b 67 10                 i32 a0 = s1 >> 0x10
 15794: 52 07 29                 jump @843 if a0 != 0
      :                          @842
 15797: 98 67 0c                 a0 = s1 >> 0xc
 15800: 86 77 e0 00              a0 = a0 | 0xe0
 15804: 78 17 0c                 u8 [sp + 0xc] = a0
 15807: 97 67 34                 a0 = s1 << 0x34
 15810: 98 77 3a                 a0 = a0 >> 0x3a
 15813: 95 77 80 00              a0 = a0 + 0x80
 15817: 78 17 0d                 u8 [sp + 0xd] = a0
 15820: 84 67 3f                 a0 = s1 & 0x3f
 15823: 86 77 80 00              a0 = a0 | 0x80
 15827: 78 17 0e                 u8 [sp + 0xe] = a0
 15830: 33 06 03                 s1 = 0x3
 15833: 28 37                    jump @844
      :                          @843
 15835: 97 67 2b                 a0 = s1 << 0x2b
 15838: 98 77 3d                 a0 = a0 >> 0x3d
 15841: 95 77 f0 00              a0 = a0 + 0xf0
 15845: 78 17 0c                 u8 [sp + 0xc] = a0
 15848: 97 67 2e                 a0 = s1 << 0x2e
 15851: 98 77 3a                 a0 = a0 >> 0x3a
 15854: 95 77 80 00              a0 = a0 + 0x80
 15858: 78 17 0d                 u8 [sp + 0xd] = a0
 15861: 97 67 34                 a0 = s1 << 0x34
 15864: 98 77 3a                 a0 = a0 >> 0x3a
 15867: 95 77 80 00              a0 = a0 + 0x80
 15871: 78 17 0e                 u8 [sp + 0xe] = a0
 15874: 84 67 3f                 a0 = s1 & 0x3f
 15877: 86 77 80 00              a0 = a0 | 0x80
 15881: 78 17 0f                 u8 [sp + 0xf] = a0
 15884: 33 06 04                 s1 = 0x4
 15887: 01                       fallthrough
      :                          @844
 15888: 82 a5 10                 s0 = u64 [a3 + 0x10]
 15891: 82 a7                    a0 = u64 [a3]
 15893: c9 57 07                 a0 = a0 - s0
 15896: ac 67 2e                 jump @848 if a0 <u s1
      :                          @845
 15899: 7b 1a                    u64 [sp] = a3
 15901: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15904: c8 57 07                 a0 = a0 + s0
 15907: 95 18 0c                 a1 = sp + 0xc
 15910: 64 69                    a2 = s1
 15912: 50 20 a6 01 3f           ra = 422, jump @851
      :                          @846 [@dyn 211]
 15917: c8 56 06                 s1 = s1 + s0
 15920: 82 17                    a0 = u64 [sp]
 15922: 7b 76 10                 u64 [a0 + 0x10] = s1
 15925: 01                       fallthrough
      :                          @847
 15926: 33 07                    a0 = 0
 15928: 82 10 20                 ra = u64 [sp + 0x20]
 15931: 82 15 18                 s0 = u64 [sp + 0x18]
 15934: 82 16 10                 s1 = u64 [sp + 0x10]
 15937: 95 11 28                 sp = sp + 0x28
 15940: 32 00                    ret
      :                          @848
 15942: 64 a7                    a0 = a3
 15944: 64 58                    a1 = s0
 15946: 64 69                    a2 = s1
 15948: 64 a5                    s0 = a3
 15950: 50 20 a8 01 5f fb        ra = 424, jump @748
      :                          @849 [@dyn 212]
 15956: 64 5a                    a3 = s0
 15958: 82 55 10                 s0 = u64 [s0 + 0x10]
 15961: 28 c2                    jump @845
      :                          @850 [@dyn 213]
 15963: 64 8a                    a3 = a1
 15965: 33 08 c0 0f 01           a1 = 0x10fc0
 15970: 64 a9                    a2 = a3
 15972: 28 b5 04                 jump @946
      :                          @851
 15975: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15978: 7b 10 18                 u64 [sp + 0x18] = ra
 15981: 7b 15 10                 u64 [sp + 0x10] = s0
 15984: 7b 16 08                 u64 [sp + 0x8] = s1
 15987: 53 19 10 64              jump @860 if a2 <u 16
      :                          @852
 15991: 8d 7a                    i32 a3 = -a0
 15993: 84 a2 07                 t0 = a3 & 0x7
 15996: c8 27 0b                 a4 = a0 + t0
 15999: 51 02 15                 jump @855 if t0 == 0
      :                          @853
 16002: 64 8c                    a5 = a1
 16004: 64 75                    s0 = a0
 16006: 01                       fallthrough
      :                          @854
 16007: 7c ca                    a3 = u8 [a5]
 16009: 78 5a                    u8 [s0] = a3
 16011: 95 55 01                 s0 = s0 + 0x1
 16014: 95 cc 01                 a5 = a5 + 0x1
 16017: ac b5 f6                 jump @854 if s0 <u a4
      :                          @855
 16020: c8 28 03                 t1 = a1 + t0
 16023: c9 29 02                 t0 = a2 - t0
 16026: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 16029: 84 38 07                 a1 = t1 & 0x7
 16032: c8 4b 0a                 a3 = a4 + t2
 16035: 51 08 3b                 jump @862 if a1 == 0
      :                          @856
 16038: 58 04 4b                 jump @865 if t2 <=s 0
      :                          @857
 16041: 97 38 03                 a1 = t1 << 0x3
 16044: 84 80 38                 ra = a1 & 0x38
 16047: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 16050: 82 c5                    s0 = u64 [a5]
 16052: 8d 88                    i32 a1 = -a1
 16054: 84 88 38                 a1 = a1 & 0x38
 16057: 95 cc 08                 a5 = a5 + 0x8
 16060: 01                       fallthrough
      :                          @858
 16061: 82 c6                    s1 = u64 [a5]
 16063: d0 05 05                 s0 = s0 >> ra
 16066: cf 86 09                 a2 = s1 << a1
 16069: d4 59 09                 a2 = a2 | s0
 16072: 7b b9                    u64 [a4] = a2
 16074: 95 bb 08                 a4 = a4 + 0x8
 16077: 95 cc 08                 a5 = a5 + 0x8
 16080: 64 65                    s0 = s1
 16082: ac ab eb                 jump @858 if a4 <u a3
      :                          @859
 16085: 28 1c                    jump @865
      :                          @860
 16087: 64 7a                    a3 = a0
 16089: 52 09 21                 jump @866 if a2 != 0
      :                          @861
 16092: 28 2f                    jump @868
      :                          @862
 16094: 58 04 13                 jump @865 if t2 <=s 0
      :                          @863
 16097: 64 38                    a1 = t1
 16099: 01                       fallthrough
      :                          @864
 16100: 82 89                    a2 = u64 [a1]
 16102: 7b b9                    u64 [a4] = a2
 16104: 95 bb 08                 a4 = a4 + 0x8
 16107: 95 88 08                 a1 = a1 + 0x8
 16110: ac ab f6                 jump @864 if a4 <u a3
      :                          @865
 16113: c8 43 08                 a1 = t1 + t2
 16116: 84 29 07                 a2 = t0 & 0x7
 16119: 51 09 14                 jump @868 if a2 == 0
      :                          @866
 16122: c8 a9 09                 a2 = a2 + a3
 16125: 01                       fallthrough
      :                          @867
 16126: 7c 8b                    a4 = u8 [a1]
 16128: 78 ab                    u8 [a3] = a4
 16130: 95 aa 01                 a3 = a3 + 0x1
 16133: 95 88 01                 a1 = a1 + 0x1
 16136: ac 9a f6                 jump @867 if a3 <u a2
      :                          @868
 16139: 82 10 18                 ra = u64 [sp + 0x18]
 16142: 82 15 10                 s0 = u64 [sp + 0x10]
 16145: 82 16 08                 s1 = u64 [sp + 0x8]
 16148: 95 11 20                 sp = sp + 0x20
 16151: 32 00                    ret
      :                          @869
 16153: 53 19 10 48              jump @878 if a2 <u 16
      :                          @870
 16157: 8d 7a                    i32 a3 = -a0
 16159: 84 aa 07                 a3 = a3 & 0x7
 16162: c8 a7 0b                 a4 = a0 + a3
 16165: 51 0a 0e                 jump @873 if a3 == 0
      :                          @871
 16168: 64 7c                    a5 = a0
 16170: 01                       fallthrough
      :                          @872
 16171: 78 c8                    u8 [a5] = a1
 16173: 95 cc 01                 a5 = a5 + 0x1
 16176: ac bc fb                 jump @872 if a5 <u a4
      :                          @873
 16179: c9 a9 03                 t1 = a2 - a3
 16182: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 16185: c8 cb 0a                 a3 = a4 + a5
 16188: 58 0c 1d                 jump @876 if a5 <=s 0
      :                          @874
 16191: 84 82 ff 00              t0 = a1 & 0xff
 16195: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 16205: ca 92 0c                 a5 = t0 * a2
 16208: 01                       fallthrough
      :                          @875
 16209: 7b bc                    u64 [a4] = a5
 16211: 95 bb 08                 a4 = a4 + 0x8
 16214: ac ab fb                 jump @875 if a4 <u a3
      :                          @876
 16217: 84 39 07                 a2 = t1 & 0x7
 16220: 52 09 0a                 jump @879 if a2 != 0
      :                          @877
 16223: 28 13                    jump @881
      :                          @878
 16225: 64 7a                    a3 = a0
 16227: 51 09 0f                 jump @881 if a2 == 0
      :                          @879
 16230: c8 a9 09                 a2 = a2 + a3
 16233: 01                       fallthrough
      :                          @880
 16234: 78 a8                    u8 [a3] = a1
 16236: 95 aa 01                 a3 = a3 + 0x1
 16239: ac 9a fb                 jump @880 if a3 <u a2
      :                          @881
 16242: 32 00                    ret
      :                          @882 [@dyn 214]
 16244: 82 77                    a0 = u64 [a0]
 16246: 01                       fallthrough
      :                          @883
 16247: 28                       jump @883
      :                          @884
 16248: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 16251: 7b 10 50                 u64 [sp + 0x50] = ra
 16254: 7b 15 48                 u64 [sp + 0x48] = s0
 16257: 7b 16 40                 u64 [sp + 0x40] = s1
 16260: 7b 18                    u64 [sp] = a1
 16262: 98 79 04                 a2 = a0 >> 0x4
 16265: 33 08 27                 a1 = 0x27
 16268: 53 29 71 02 81 00        jump @887 if a2 <u 625
      :                          @885
 16274: 33 08 27                 a1 = 0x27
 16277: 95 1a 3e                 a3 = sp + 0x3e
 16280: 3a 09 08 00 03           a2 = u64 [0x30008]
 16285: 7b 19 10                 u64 [sp + 0x10] = a2
 16288: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 16294: 33 04 7b 14              t2 = 0x147b
 16298: 33 0b 48 10 01           a4 = 0x11048
 16303: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 16309: 01                       fallthrough
      :                          @886
 16310: 64 72                    t0 = a0
 16312: 82 17 10                 a0 = u64 [sp + 0x10]
 16315: d6 72 07                 a0 = t0 mulhu a0
 16318: 98 77 0b                 a0 = a0 >> 0xb
 16321: 82 19 08                 a2 = u64 [sp + 0x8]
 16324: c0 97 0c                 i32 a5 = a0 * a2
 16327: c8 2c 06                 s1 = a5 + t0
 16330: 97 6c 30                 a5 = s1 << 0x30
 16333: 98 cc 32                 a5 = a5 >> 0x32
 16336: ca 4c 0c                 a5 = a5 * t2
 16339: 98 c3 11                 t1 = a5 >> 0x11
 16342: 98 cc 10                 a5 = a5 >> 0x10
 16345: 84 cc fe 07              a5 = a5 & 0x7fe
 16349: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 16352: c8 69 09                 a2 = a2 + s1
 16355: 97 99 31                 a2 = a2 << 0x31
 16358: 98 99 30                 a2 = a2 >> 0x30
 16361: c8 bc 0c                 a5 = a5 + a4
 16364: 7c c6                    s1 = u8 [a5]
 16366: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16369: c8 b9 09                 a2 = a2 + a4
 16372: 7c 95 01                 s0 = u8 [a2 + 0x1]
 16375: 7c 99                    a2 = u8 [a2]
 16377: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 16380: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 16383: 78 a5 01                 u8 [a3 + 0x1] = s0
 16386: 78 a9                    u8 [a3] = a2
 16388: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 16391: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 16394: ac 20 ac                 jump @886 if ra <u t0
      :                          @887
 16397: 54 17 63 3b              jump @889 if a0 <=u 99
      :                          @888
 16401: 97 79 30                 a2 = a0 << 0x30
 16404: 98 99 32                 a2 = a2 >> 0x32
 16407: 96 99 7b 14              a2 = a2 * 0x147b
 16411: 98 99 11                 a2 = a2 >> 0x11
 16414: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 16417: c8 a7 07                 a0 = a0 + a3
 16420: 97 77 31                 a0 = a0 << 0x31
 16423: 98 77 30                 a0 = a0 >> 0x30
 16426: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16429: 33 0a 48 10 01           a3 = 0x11048
 16434: c8 a7 07                 a0 = a0 + a3
 16437: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 16440: 7c 77                    a0 = u8 [a0]
 16442: 95 1b 19                 a4 = sp + 0x19
 16445: c8 8b 0b                 a4 = a4 + a1
 16448: 78 ba 01                 u8 [a4 + 0x1] = a3
 16451: 78 b7                    u8 [a4] = a0
 16453: 64 97                    a0 = a2
 16455: 01                       fallthrough
      :                          @889
 16456: 55 17 0a 14              jump @891 if a0 >=u 10
      :                          @890
 16460: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16463: 95 19 19                 a2 = sp + 0x19
 16466: c8 89 09                 a2 = a2 + a1
 16469: 83 77 30                 i32 a0 = a0 + 0x30
 16472: 78 97                    u8 [a2] = a0
 16474: 28 21                    jump @892
      :                          @891
 16476: 97 77 01                 a0 = a0 << 0x1
 16479: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16482: 33 09 48 10 01           a2 = 0x11048
 16487: c8 97 07                 a0 = a0 + a2
 16490: 7c 79 01                 a2 = u8 [a0 + 0x1]
 16493: 7c 77                    a0 = u8 [a0]
 16495: 95 1a 19                 a3 = sp + 0x19
 16498: c8 8a 0a                 a3 = a3 + a1
 16501: 78 a9 01                 u8 [a3 + 0x1] = a2
 16504: 78 a7                    u8 [a3] = a0
 16506: 01                       fallthrough
      :                          @892
 16507: 95 1a 19                 a3 = sp + 0x19
 16510: c8 8a 0a                 a3 = a3 + a1
 16513: 9a 8b 27                 a4 = 0x27 - a1
 16516: 33 08 f0 0f 01           a1 = 0x10ff0
 16521: 82 17                    a0 = u64 [sp]
 16523: 33 09                    a2 = 0
 16525: 50 20 ae 01 13           ra = 430, jump @894
      :                          @893 [@dyn 215]
 16530: 82 10 50                 ra = u64 [sp + 0x50]
 16533: 82 15 48                 s0 = u64 [sp + 0x48]
 16536: 82 16 40                 s1 = u64 [sp + 0x40]
 16539: 95 11 58                 sp = sp + 0x58
 16542: 32 00                    ret
      :                          @894
 16544: 95 11 98                 sp = sp + 0xffffffffffffff98
 16547: 7b 10 60                 u64 [sp + 0x60] = ra
 16550: 7b 15 58                 u64 [sp + 0x58] = s0
 16553: 7b 16 50                 u64 [sp + 0x50] = s1
 16556: 80 73 34                 t1 = u32 [a0 + 0x34]
 16559: 7b 1a 20                 u64 [sp + 0x20] = a3
 16562: 64 9c                    a5 = a2
 16564: 84 36 01                 s1 = t1 & 0x1
 16567: 33 02 2b                 t0 = 0x2b
 16570: 33 09 00 00 11           a2 = 0x110000
 16575: 84 3a 04                 a3 = t1 & 0x4
 16578: 7b 1b 28                 u64 [sp + 0x28] = a4
 16581: c8 b6 04                 t2 = s1 + a4
 16584: 7b 1c 30                 u64 [sp + 0x30] = a5
 16587: 52 0a 10                 jump @897 if a3 != 0
      :                          @895
 16590: 49 11 38                 u64 [sp + 56] = 0
 16593: 82 78                    a1 = u64 [a0]
 16595: 94 69 2b                 a2 = 0x2b if s1 != 0
 16598: 52 08 35                 jump @901 if a1 != 0
      :                          @896
 16601: 28 56                    jump @906
      :                          @897
 16603: 7b 18 38                 u64 [sp + 0x38] = a1
 16606: 33 09                    a2 = 0
 16608: 51 0c 1b                 jump @900 if a5 == 0
      :                          @898
 16611: 82 1b 38                 a4 = u64 [sp + 0x38]
 16614: 01                       fallthrough
      :                          @899
 16615: 7d b5                    s0 = i8 [a4]
 16617: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 16620: 85 5a 01                 a3 = s0 ^ 0x1
 16623: c8 a9 09                 a2 = a2 + a3
 16626: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16629: 95 bb 01                 a4 = a4 + 0x1
 16632: 52 0c ef                 jump @899 if a5 != 0
      :                          @900
 16635: c8 94 04                 t2 = t2 + a2
 16638: 33 09 00 00 11           a2 = 0x110000
 16643: 82 78                    a1 = u64 [a0]
 16645: db 62 09                 a2 = t0 if s1 != 0
 16648: 51 08 27                 jump @906 if a1 == 0
      :                          @901
 16651: 82 7a 08                 a3 = u64 [a0 + 0x8]
 16654: ae a4 21                 jump @906 if t2 >=u a3
      :                          @902
 16657: 84 38 08                 a1 = t1 & 0x8
 16660: 52 08 51                 jump @909 if a1 != 0
      :                          @903
 16663: 7c 76 38                 s1 = u8 [a0 + 0x38]
 16666: c9 4a 0a                 a3 = a3 - t2
 16669: 7b 19 18                 u64 [sp + 0x18] = a2
 16672: 5a 16 01 a0 00           jump @916 if s1 >s 1
      :                          @904
 16677: 52 06 ad 00              jump @918 if s1 != 0
      :                          @905
 16681: 7b 1a 10                 u64 [sp + 0x10] = a3
 16684: 28 ac 00                 jump @919
      :                          @906
 16687: 82 75 20                 s0 = u64 [a0 + 0x20]
 16690: 82 76 28                 s1 = u64 [a0 + 0x28]
 16693: 64 57                    a0 = s0
 16695: 64 68                    a1 = s1
 16697: 82 1a 38                 a3 = u64 [sp + 0x38]
 16700: 82 1b 30                 a4 = u64 [sp + 0x30]
 16703: 50 20 b0 01 75 01        ra = 432, jump @939
      :                          @907 [@dyn 216]
 16709: 33 08 01                 a1 = 0x1
 16712: 52 07 be 00              jump @924 if a0 != 0
      :                          @908
 16716: 82 6c 18                 a5 = u64 [s1 + 0x18]
 16719: 64 57                    a0 = s0
 16721: 82 18 20                 a1 = u64 [sp + 0x20]
 16724: 82 19 28                 a2 = u64 [sp + 0x28]
 16727: 82 10 60                 ra = u64 [sp + 0x60]
 16730: 82 15 58                 s0 = u64 [sp + 0x58]
 16733: 82 16 50                 s1 = u64 [sp + 0x50]
 16736: 95 11 68                 sp = sp + 0x68
 16739: 32 0c                    jump [a5]
      :                          @909
 16741: 7b 1a 40                 u64 [sp + 0x40] = a3
 16744: 64 45                    s0 = t2
 16746: 81 78 30                 a1 = i32 [a0 + 0x30]
 16749: 7b 18 10                 u64 [sp + 0x10] = a1
 16752: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 16755: 7b 1a 08                 u64 [sp + 0x8] = a3
 16758: 82 7a 20                 a3 = u64 [a0 + 0x20]
 16761: 82 78 28                 a1 = u64 [a0 + 0x28]
 16764: 48 17 30 30              u32 [a0 + 48] = 0x30
 16768: 7b 17                    u64 [sp] = a0
 16770: 46 17 38 01              u8 [a0 + 56] = 0x1
 16774: 7b 1a 48                 u64 [sp + 0x48] = a3
 16777: 64 a7                    a0 = a3
 16779: 64 86                    s1 = a1
 16781: 82 1a 38                 a3 = u64 [sp + 0x38]
 16784: 82 1b 30                 a4 = u64 [sp + 0x30]
 16787: 50 20 b2 01 21 01        ra = 434, jump @939
      :                          @910 [@dyn 217]
 16793: 52 07 69                 jump @923 if a0 != 0
      :                          @911
 16796: 82 17 40                 a0 = u64 [sp + 0x40]
 16799: c9 57 05                 s0 = a0 - s0
 16802: 95 55 01                 s0 = s0 + 0x1
 16805: 01                       fallthrough
      :                          @912
 16806: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 16809: 51 05 cb 00              jump @934 if s0 == 0
      :                          @913
 16813: 82 69 20                 a2 = u64 [s1 + 0x20]
 16816: 33 08 30                 a1 = 0x30
 16819: 82 17 48                 a0 = u64 [sp + 0x48]
 16822: b4 90 02 b4 01           ra = 436, jump [a2]
      :                          @914 [@dyn 218]
 16827: 51 07 eb                 jump @912 if a0 == 0
      :                          @915
 16830: 28 44                    jump @923
      :                          @916
 16832: 52 16 02 12              jump @918 if s1 != 2
      :                          @917
 16836: 98 a6 01                 s1 = a3 >> 0x1
 16839: 95 a8 01                 a1 = a3 + 0x1
 16842: 98 88 01                 a1 = a1 >> 0x1
 16845: 7b 18 10                 u64 [sp + 0x10] = a1
 16848: 28 08                    jump @919
      :                          @918
 16850: 64 a6                    s1 = a3
 16852: 49 11 10                 u64 [sp + 16] = 0
 16855: 01                       fallthrough
      :                          @919
 16856: 82 78 20                 a1 = u64 [a0 + 0x20]
 16859: 7b 18 48                 u64 [sp + 0x48] = a1
 16862: 82 75 28                 s0 = u64 [a0 + 0x28]
 16865: 81 77 30                 a0 = i32 [a0 + 0x30]
 16868: 7b 17 40                 u64 [sp + 0x40] = a0
 16871: 95 66 01                 s1 = s1 + 0x1
 16874: 01                       fallthrough
      :                          @920
 16875: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 16878: 51 06 28                 jump @925 if s1 == 0
      :                          @921
 16881: 82 59 20                 a2 = u64 [s0 + 0x20]
 16884: 82 17 48                 a0 = u64 [sp + 0x48]
 16887: 82 18 40                 a1 = u64 [sp + 0x40]
 16890: b4 90 02 b6 01           ra = 438, jump [a2]
      :                          @922 [@dyn 219]
 16895: 51 07 ec                 jump @920 if a0 == 0
      :                          @923
 16898: 33 08 01                 a1 = 0x1
 16901: 01                       fallthrough
      :                          @924
 16902: 64 87                    a0 = a1
 16904: 82 10 60                 ra = u64 [sp + 0x60]
 16907: 82 15 58                 s0 = u64 [sp + 0x58]
 16910: 82 16 50                 s1 = u64 [sp + 0x50]
 16913: 95 11 68                 sp = sp + 0x68
 16916: 32 00                    ret
      :                          @925
 16918: 82 16 48                 s1 = u64 [sp + 0x48]
 16921: 64 67                    a0 = s1
 16923: 64 58                    a1 = s0
 16925: 82 19 18                 a2 = u64 [sp + 0x18]
 16928: 82 1a 38                 a3 = u64 [sp + 0x38]
 16931: 82 1b 30                 a4 = u64 [sp + 0x30]
 16934: 50 20 b8 01 8e 00        ra = 440, jump @939
      :                          @926 [@dyn 220]
 16940: 33 08 01                 a1 = 0x1
 16943: 52 07 d7                 jump @924 if a0 != 0
      :                          @927
 16946: 82 5a 18                 a3 = u64 [s0 + 0x18]
 16949: 64 67                    a0 = s1
 16951: 82 18 20                 a1 = u64 [sp + 0x20]
 16954: 82 19 28                 a2 = u64 [sp + 0x28]
 16957: b4 a0 02 ba 01           ra = 442, jump [a3]
      :                          @928 [@dyn 221]
 16962: 33 08 01                 a1 = 0x1
 16965: 52 07 c1                 jump @924 if a0 != 0
      :                          @929
 16968: 82 17 10                 a0 = u64 [sp + 0x10]
 16971: 9a 77                    a0 = -a0
 16973: 7b 17 38                 u64 [sp + 0x38] = a0
 16976: 33 06 ff                 s1 = 0xffffffffffffffff
 16979: 01                       fallthrough
      :                          @930
 16980: 82 17 38                 a0 = u64 [sp + 0x38]
 16983: c8 67 07                 a0 = a0 + s1
 16986: 51 17 ff 45              jump @937 if a0 == 4294967295
      :                          @931
 16990: 82 59 20                 a2 = u64 [s0 + 0x20]
 16993: 82 17 48                 a0 = u64 [sp + 0x48]
 16996: 82 18 40                 a1 = u64 [sp + 0x40]
 16999: b4 90 02 bc 01           ra = 444, jump [a2]
      :                          @932 [@dyn 222]
 17004: 95 66 01                 s1 = s1 + 0x1
 17007: 51 07 e5                 jump @930 if a0 == 0
      :                          @933
 17010: 28 39                    jump @938
      :                          @934
 17012: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17015: 82 17 48                 a0 = u64 [sp + 0x48]
 17018: 82 18 20                 a1 = u64 [sp + 0x20]
 17021: 82 19 28                 a2 = u64 [sp + 0x28]
 17024: b4 a0 02 be 01           ra = 446, jump [a3]
      :                          @935 [@dyn 223]
 17029: 33 08 01                 a1 = 0x1
 17032: 52 07 7e ff              jump @924 if a0 != 0
      :                          @936
 17036: 33 08                    a1 = 0
 17038: 82 16                    s1 = u64 [sp]
 17040: 82 17 10                 a0 = u64 [sp + 0x10]
 17043: 7a 67 30                 u32 [s1 + 0x30] = a0
 17046: 82 17 08                 a0 = u64 [sp + 0x8]
 17049: 78 67 38                 u8 [s1 + 0x38] = a0
 17052: 28 6a ff                 jump @924
      :                          @937
 17055: 82 16 10                 s1 = u64 [sp + 0x10]
 17058: 82 17 10                 a0 = u64 [sp + 0x10]
 17061: d8 76 08                 a1 = s1 <u a0
 17064: 28 5e ff                 jump @924
      :                          @938
 17067: 82 17 10                 a0 = u64 [sp + 0x10]
 17070: d8 76 08                 a1 = s1 <u a0
 17073: 28 55 ff                 jump @924
      :                          @939
 17076: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17079: 7b 10 20                 u64 [sp + 0x20] = ra
 17082: 7b 15 18                 u64 [sp + 0x18] = s0
 17085: 7b 16 10                 u64 [sp + 0x10] = s1
 17088: 83 9c                    i32 a5 = a2 + 0
 17090: 33 02 00 00 11           t0 = 0x110000
 17095: 64 a6                    s1 = a3
 17097: 64 85                    s0 = a1
 17099: 64 7a                    a3 = a0
 17101: aa 2c 21                 jump @942 if a5 == t0
      :                          @940
 17104: 82 5c 20                 a5 = u64 [s0 + 0x20]
 17107: 64 a7                    a0 = a3
 17109: 64 98                    a1 = a2
 17111: 7b 1b 08                 u64 [sp + 0x8] = a4
 17114: 7b 1a                    u64 [sp] = a3
 17116: b4 c0 02 c0 01           ra = 448, jump [a5]
      :                          @941 [@dyn 224]
 17121: 82 1a                    a3 = u64 [sp]
 17123: 82 1b 08                 a4 = u64 [sp + 0x8]
 17126: 64 78                    a1 = a0
 17128: 33 07 01                 a0 = 0x1
 17131: 52 08 20                 jump @945 if a1 != 0
      :                          @942
 17134: 51 06 1a                 jump @944 if s1 == 0
      :                          @943
 17137: 82 5c 18                 a5 = u64 [s0 + 0x18]
 17140: 64 a7                    a0 = a3
 17142: 64 68                    a1 = s1
 17144: 64 b9                    a2 = a4
 17146: 82 10 20                 ra = u64 [sp + 0x20]
 17149: 82 15 18                 s0 = u64 [sp + 0x18]
 17152: 82 16 10                 s1 = u64 [sp + 0x10]
 17155: 95 11 28                 sp = sp + 0x28
 17158: 32 0c                    jump [a5]
      :                          @944
 17160: 33 07                    a0 = 0
 17162: 01                       fallthrough
      :                          @945
 17163: 82 10 20                 ra = u64 [sp + 0x20]
 17166: 82 15 18                 s0 = u64 [sp + 0x18]
 17169: 82 16 10                 s1 = u64 [sp + 0x10]
 17172: 95 11 28                 sp = sp + 0x28
 17175: 32 00                    ret
      :                          @946
 17177: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 17181: 7b 10 80 00              u64 [sp + 0x80] = ra
 17185: 7b 15 78                 u64 [sp + 0x78] = s0
 17188: 7b 16 70                 u64 [sp + 0x70] = s1
 17191: 49 11 60 20              u64 [sp + 96] = 0x20
 17195: 33 0a 03                 a3 = 0x3
 17198: 78 1a 68                 u8 [sp + 0x68] = a3
 17201: 82 96 20                 s1 = u64 [a2 + 0x20]
 17204: 49 11 30                 u64 [sp + 48] = 0
 17207: 49 11 40                 u64 [sp + 64] = 0
 17210: 7b 17 50                 u64 [sp + 0x50] = a0
 17213: 7b 18 58                 u64 [sp + 0x58] = a1
 17216: 51 06 0a 01              jump @968 if s1 == 0
      :                          @947
 17220: 82 97 28                 a0 = u64 [a2 + 0x28]
 17223: 51 07 79 01              jump @978 if a0 == 0
      :                          @948
 17227: 49 11 28                 u64 [sp + 40] = 0
 17230: 82 95                    s0 = u64 [a2]
 17232: 7b 19 08                 u64 [sp + 0x8] = a2
 17235: 82 98 10                 a1 = u64 [a2 + 0x10]
 17238: 7b 18 18                 u64 [sp + 0x18] = a1
 17241: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 17244: 97 88 03                 a1 = a1 << 0x3
 17247: 98 88 03                 a1 = a1 >> 0x3
 17250: 95 88 01                 a1 = a1 + 0x1
 17253: 7b 18                    u64 [sp] = a1
 17255: 95 55 08                 s0 = s0 + 0x8
 17258: 96 78 38                 a1 = a0 * 0x38
 17261: 95 66 18                 s1 = s1 + 0x18
 17264: 33 07 ac 01              a0 = 0x1ac
 17268: 7b 17 10                 u64 [sp + 0x10] = a0
 17271: 01                       fallthrough
      :                          @949
 17272: 7b 18 20                 u64 [sp + 0x20] = a1
 17275: 82 59                    a2 = u64 [s0]
 17277: 51 09 18                 jump @952 if a2 == 0
      :                          @950
 17280: 82 1a 58                 a3 = u64 [sp + 0x58]
 17283: 82 17 50                 a0 = u64 [sp + 0x50]
 17286: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 17289: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17292: b4 a0 02 c2 01           ra = 450, jump [a3]
      :                          @951 [@dyn 225]
 17297: 52 07 55 01              jump @981 if a0 != 0
      :                          @952
 17301: 81 67 10                 a0 = i32 [s1 + 0x10]
 17304: 7a 17 60                 u32 [sp + 0x60] = a0
 17307: 7c 67 18                 a0 = u8 [s1 + 0x18]
 17310: 78 17 68                 u8 [sp + 0x68] = a0
 17313: 81 67 14                 a0 = i32 [s1 + 0x14]
 17316: 7a 17 64                 u32 [sp + 0x64] = a0
 17319: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17322: 82 67                    a0 = u64 [s1]
 17324: 51 08 26                 jump @957 if a1 == 0
      :                          @953
 17327: 52 18 01 16              jump @955 if a1 != 1
      :                          @954
 17331: 97 77 04                 a0 = a0 << 0x4
 17334: 82 18 18                 a1 = u64 [sp + 0x18]
 17337: c8 87 07                 a0 = a0 + a1
 17340: 82 78 08                 a1 = u64 [a0 + 0x8]
 17343: 82 19 10                 a2 = u64 [sp + 0x10]
 17346: aa 98 07                 jump @956 if a1 == a2
      :                          @955
 17349: 33 08                    a1 = 0
 17351: 28 0f                    jump @958
      :                          @956
 17353: 82 77                    a0 = u64 [a0]
 17355: 82 77                    a0 = u64 [a0]
 17357: 33 08 01                 a1 = 0x1
 17360: 28 06                    jump @958
      :                          @957
 17362: 33 08 01                 a1 = 0x1
 17365: 01                       fallthrough
      :                          @958
 17366: 7b 18 30                 u64 [sp + 0x30] = a1
 17369: 7b 17 38                 u64 [sp + 0x38] = a0
 17372: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 17375: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 17378: 51 08 26                 jump @963 if a1 == 0
      :                          @959
 17381: 52 18 01 16              jump @961 if a1 != 1
      :                          @960
 17385: 97 77 04                 a0 = a0 << 0x4
 17388: 82 18 18                 a1 = u64 [sp + 0x18]
 17391: c8 87 07                 a0 = a0 + a1
 17394: 82 78 08                 a1 = u64 [a0 + 0x8]
 17397: 82 19 10                 a2 = u64 [sp + 0x10]
 17400: aa 98 07                 jump @962 if a1 == a2
      :                          @961
 17403: 33 08                    a1 = 0
 17405: 28 0f                    jump @964
      :                          @962
 17407: 82 77                    a0 = u64 [a0]
 17409: 82 77                    a0 = u64 [a0]
 17411: 33 08 01                 a1 = 0x1
 17414: 28 06                    jump @964
      :                          @963
 17416: 33 08 01                 a1 = 0x1
 17419: 01                       fallthrough
      :                          @964
 17420: 7b 18 40                 u64 [sp + 0x40] = a1
 17423: 7b 17 48                 u64 [sp + 0x48] = a0
 17426: 82 67 08                 a0 = u64 [s1 + 0x8]
 17429: 97 77 04                 a0 = a0 << 0x4
 17432: 82 18 18                 a1 = u64 [sp + 0x18]
 17435: c8 78 08                 a1 = a1 + a0
 17438: 82 87                    a0 = u64 [a1]
 17440: 82 89 08                 a2 = u64 [a1 + 0x8]
 17443: 95 18 30                 a1 = sp + 0x30
 17446: b4 90 02 c4 01           ra = 452, jump [a2]
      :                          @965 [@dyn 226]
 17451: 52 07 bb 00              jump @981 if a0 != 0
      :                          @966
 17455: 95 55 10                 s0 = s0 + 0x10
 17458: 82 18 20                 a1 = u64 [sp + 0x20]
 17461: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 17464: 95 66 38                 s1 = s1 + 0x38
 17467: 82 17 28                 a0 = u64 [sp + 0x28]
 17470: 95 77 01                 a0 = a0 + 0x1
 17473: 7b 17 28                 u64 [sp + 0x28] = a0
 17476: 52 08 34 ff              jump @949 if a1 != 0
      :                          @967
 17480: 28 6b                    jump @976
      :                          @968
 17482: 82 97 18                 a0 = u64 [a2 + 0x18]
 17485: 51 07 73                 jump @978 if a0 == 0
      :                          @969
 17488: 82 95 10                 s0 = u64 [a2 + 0x10]
 17491: 33 0a                    a3 = 0
 17493: 97 78 04                 a1 = a0 << 0x4
 17496: c8 58 08                 a1 = a1 + s0
 17499: 7b 18 20                 u64 [sp + 0x20] = a1
 17502: 7b 19 08                 u64 [sp + 0x8] = a2
 17505: 82 96                    s1 = u64 [a2]
 17507: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17510: 97 77 04                 a0 = a0 << 0x4
 17513: 98 77 04                 a0 = a0 >> 0x4
 17516: 95 77 01                 a0 = a0 + 0x1
 17519: 7b 17                    u64 [sp] = a0
 17521: 95 66 08                 s1 = s1 + 0x8
 17524: 01                       fallthrough
      :                          @970
 17525: 7b 1a 28                 u64 [sp + 0x28] = a3
 17528: 82 69                    a2 = u64 [s1]
 17530: 51 09 17                 jump @973 if a2 == 0
      :                          @971
 17533: 82 1a 58                 a3 = u64 [sp + 0x58]
 17536: 82 17 50                 a0 = u64 [sp + 0x50]
 17539: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17542: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17545: b4 a0 02 c6 01           ra = 454, jump [a3]
      :                          @972 [@dyn 227]
 17550: 52 07 58                 jump @981 if a0 != 0
      :                          @973
 17553: 82 57                    a0 = u64 [s0]
 17555: 82 59 08                 a2 = u64 [s0 + 0x8]
 17558: 95 18 30                 a1 = sp + 0x30
 17561: b4 90 02 c8 01           ra = 456, jump [a2]
      :                          @974 [@dyn 228]
 17566: 52 07 48                 jump @981 if a0 != 0
      :                          @975
 17569: 95 66 10                 s1 = s1 + 0x10
 17572: 95 55 10                 s0 = s0 + 0x10
 17575: 82 1a 28                 a3 = u64 [sp + 0x28]
 17578: 95 aa 01                 a3 = a3 + 0x1
 17581: 82 17 20                 a0 = u64 [sp + 0x20]
 17584: ab 75 c5                 jump @970 if s0 != a0
      :                          @976
 17587: 82 19 08                 a2 = u64 [sp + 0x8]
 17590: 82 1a                    a3 = u64 [sp]
 17592: 82 97 08                 a0 = u64 [a2 + 0x8]
 17595: ac 7a 0d                 jump @979 if a3 <u a0
      :                          @977
 17598: 28 2d                    jump @982
      :                          @978
 17600: 33 0a                    a3 = 0
 17602: 82 97 08                 a0 = u64 [a2 + 0x8]
 17605: 54 07 26                 jump @982 if a0 <=u 0
      :                          @979
 17608: 82 97                    a0 = u64 [a2]
 17610: 97 a8 04                 a1 = a3 << 0x4
 17613: c8 87 09                 a2 = a0 + a1
 17616: 82 1a 58                 a3 = u64 [sp + 0x58]
 17619: 82 17 50                 a0 = u64 [sp + 0x50]
 17622: 82 98                    a1 = u64 [a2]
 17624: 82 99 08                 a2 = u64 [a2 + 0x8]
 17627: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17630: b4 a0 02 ca 01           ra = 458, jump [a3]
      :                          @980 [@dyn 229]
 17635: 51 07 08                 jump @982 if a0 == 0
      :                          @981
 17638: 33 07 01                 a0 = 0x1
 17641: 28 05                    jump @983
      :                          @982
 17643: 33 07                    a0 = 0
 17645: 01                       fallthrough
      :                          @983
 17646: 82 10 80 00              ra = u64 [sp + 0x80]
 17650: 82 15 78                 s0 = u64 [sp + 0x78]
 17653: 82 16 70                 s1 = u64 [sp + 0x70]
 17656: 95 11 88 00              sp = sp + 0x88
 17660: 32 00                    ret
      :                          @984 [@dyn 230]
 17662: 32 00                    ret
      :                          @985 [@dyn 231]
 17664: 95 11 80                 sp = sp + 0xffffffffffffff80
 17667: 7b 10 78                 u64 [sp + 0x78] = ra
 17670: 7b 15 70                 u64 [sp + 0x70] = s0
 17673: 7b 16 68                 u64 [sp + 0x68] = s1
 17676: 64 92                    t0 = a2
 17678: 33 00                    ra = 0
 17680: 33 0b                    a4 = 0
 17682: 33 05                    s0 = 0
 17684: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 17694: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 17700: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 17710: 82 79 10                 a2 = u64 [a0 + 0x10]
 17713: 7b 19 48                 u64 [sp + 0x48] = a2
 17716: 82 79                    a2 = u64 [a0]
 17718: 7b 19 38                 u64 [sp + 0x38] = a2
 17721: 82 77 08                 a0 = u64 [a0 + 0x8]
 17724: 7b 17 30                 u64 [sp + 0x30] = a0
 17727: 33 07 38 10 01           a0 = 0x11038
 17732: 7b 17 08                 u64 [sp + 0x8] = a0
 17735: 3a 07 10 00 03           a0 = u64 [0x30010]
 17740: 7b 17 60                 u64 [sp + 0x60] = a0
 17743: 7b 18 58                 u64 [sp + 0x58] = a1
 17746: 95 88 08                 a1 = a1 + 0x8
 17749: 7b 18                    u64 [sp] = a1
 17751: 33 0c 0a                 a5 = 0xa
 17754: 7b 12 20                 u64 [sp + 0x20] = t0
 17757: 7b 13 18                 u64 [sp + 0x18] = t1
 17760: 7b 14 10                 u64 [sp + 0x10] = t2
 17763: 28 3b                    jump @989
      :                          @986
 17765: 64 06                    s1 = ra
 17767: c8 89 07                 a0 = a2 + a1
 17770: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 17773: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17776: 88 77 01                 a0 = a0 <u 0x1
 17779: 01                       fallthrough
      :                          @987
 17780: 82 1a 48                 a3 = u64 [sp + 0x48]
 17783: 78 a7                    u8 [a3] = a0
 17785: 82 17 30                 a0 = u64 [sp + 0x30]
 17788: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17791: 82 17 38                 a0 = u64 [sp + 0x38]
 17794: b4 a0 02 d0 01           ra = 464, jump [a3]
      :                          @988 [@dyn 232]
 17799: 64 5b                    a4 = s0
 17801: 82 12 20                 t0 = u64 [sp + 0x20]
 17804: 82 13 18                 t1 = u64 [sp + 0x18]
 17807: 82 14 10                 t2 = u64 [sp + 0x10]
 17810: 64 60                    ra = s1
 17812: 33 0c 0a                 a5 = 0xa
 17815: 82 15 40                 s0 = u64 [sp + 0x40]
 17818: 52 07 64 01              jump @1030 if a0 != 0
      :                          @989
 17822: 84 57 ff 00              a0 = s0 & 0xff
 17826: 52 07 58 01              jump @1029 if a0 != 0
      :                          @990
 17830: 7b 1b 50                 u64 [sp + 0x50] = a4
 17833: ae 02 0a                 jump @993 if t0 >=u ra
      :                          @991
 17836: 28 ef 00                 jump @1020
      :                          @992
 17839: ac 02 ec 00              jump @1020 if t0 <u ra
      :                          @993
 17843: c9 02 08                 a1 = t0 - ra
 17846: 82 16 58                 s1 = u64 [sp + 0x58]
 17849: c8 06 06                 s1 = s1 + ra
 17852: 55 18 10 1d              jump @999 if a1 >=u 16
      :                          @994
 17856: aa 02 d8 00              jump @1019 if t0 == ra
      :                          @995
 17860: 33 0a                    a3 = 0
 17862: 01                       fallthrough
      :                          @996
 17863: c8 a6 07                 a0 = s1 + a3
 17866: 7c 77                    a0 = u8 [a0]
 17868: aa c7 a5 00              jump @1014 if a0 == a5
      :                          @997
 17872: 95 aa 01                 a3 = a3 + 0x1
 17875: ab a8 f4                 jump @996 if a1 != a3
      :                          @998
 17878: 28 c2 00                 jump @1019
      :                          @999
 17881: 95 69 07                 a2 = s1 + 0x7
 17884: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 17887: c9 6a 07                 a0 = a3 - s1
 17890: d3 6a 0a                 a3 = a3 ^ s1
 17893: 88 aa 01                 a3 = a3 <u 0x1
 17896: 88 7b 01                 a4 = a0 <u 0x1
 17899: d4 ba 0a                 a3 = a3 | a4
 17902: 51 0a 45                 jump @1005 if a3 == 0
      :                          @1000
 17905: 33 07                    a0 = 0
 17907: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17910: 82 1b                    a4 = u64 [sp]
 17912: c8 0b 0b                 a4 = a4 + ra
 17915: 28 08                    jump @1002
      :                          @1001
 17917: 82 1b                    a4 = u64 [sp]
 17919: c8 0b 0b                 a4 = a4 + ra
 17922: 01                       fallthrough
      :                          @1002
 17923: c8 76 0c                 a5 = s1 + a0
 17926: 82 cc                    a5 = u64 [a5]
 17928: c8 7b 09                 a2 = a4 + a0
 17931: 82 99                    a2 = u64 [a2]
 17933: d3 4c 05                 s0 = a5 ^ t2
 17936: c8 35 05                 s0 = s0 + t1
 17939: e0 c5 0c                 a5 = s0 & ~a5
 17942: d3 49 05                 s0 = a2 ^ t2
 17945: c8 35 05                 s0 = s0 + t1
 17948: e0 95 09                 a2 = s0 & ~a2
 17951: d4 c9 09                 a2 = a2 | a5
 17954: 82 1c 60                 a5 = u64 [sp + 0x60]
 17957: d2 c9 09                 a2 = a2 & a5
 17960: 52 09 1f                 jump @1008 if a2 != 0
      :                          @1003
 17963: 95 77 10                 a0 = a0 + 0x10
 17966: ae 7a d5                 jump @1002 if a3 >=u a0
      :                          @1004
 17969: 28 16                    jump @1008
      :                          @1005
 17971: c8 a6 0b                 a4 = s1 + a3
 17974: 7c bb                    a4 = u8 [a4]
 17976: aa cb 51                 jump @1017 if a4 == a5
      :                          @1006
 17979: 95 aa 01                 a3 = a3 + 0x1
 17982: ab a7 f5                 jump @1005 if a0 != a3
      :                          @1007
 17985: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17988: ae 7a b9                 jump @1001 if a3 >=u a0
      :                          @1008
 17991: aa 87 9b 00              jump @1026 if a0 == a1
      :                          @1009
 17995: 33 0a                    a3 = 0
 17997: c8 76 06                 s1 = s1 + a0
 18000: c9 72 08                 a1 = t0 - a0
 18003: c9 08 08                 a1 = a1 - ra
 18006: 33 0c 0a                 a5 = 0xa
 18009: 82 1b 50                 a4 = u64 [sp + 0x50]
 18012: 01                       fallthrough
      :                          @1010
 18013: c8 a6 09                 a2 = s1 + a3
 18016: 7c 99                    a2 = u8 [a2]
 18018: aa c9 0b                 jump @1013 if a2 == a5
      :                          @1011
 18021: 95 aa 01                 a3 = a3 + 0x1
 18024: ab a8 f5                 jump @1010 if a1 != a3
      :                          @1012
 18027: 28 2d                    jump @1019
      :                          @1013
 18029: c8 7a 0a                 a3 = a3 + a0
 18032: 01                       fallthrough
      :                          @1014
 18033: c8 0a 0a                 a3 = a3 + ra
 18036: 95 a0 01                 ra = a3 + 0x1
 18039: ae 2a 38 ff              jump @992 if a3 >=u t0
      :                          @1015
 18043: 82 17 58                 a0 = u64 [sp + 0x58]
 18046: c8 7a 0a                 a3 = a3 + a0
 18049: 7c a7                    a0 = u8 [a3]
 18051: ab c7 2c ff              jump @992 if a0 != a5
      :                          @1016
 18055: 28 62                    jump @1027
      :                          @1017
 18057: 82 1b 50                 a4 = u64 [sp + 0x50]
 18060: c8 0a 0a                 a3 = a3 + ra
 18063: 95 a0 01                 ra = a3 + 0x1
 18066: ac 2a e9                 jump @1015 if a3 <u t0
      :                          @1018
 18069: 28 1a ff                 jump @992
      :                          @1019
 18072: 64 20                    ra = t0
 18074: 01                       fallthrough
      :                          @1020
 18075: 49 11 40 01              u64 [sp + 64] = 0x1
 18079: 64 b5                    s0 = a4
 18081: 64 26                    s1 = t0
 18083: aa 2b 57                 jump @1029 if a4 == t0
      :                          @1021
 18086: 82 17 48                 a0 = u64 [sp + 0x48]
 18089: 7c 77                    a0 = u8 [a0]
 18091: 51 07 23                 jump @1024 if a0 == 0
      :                          @1022
 18094: 82 17 30                 a0 = u64 [sp + 0x30]
 18097: 82 7a 18                 a3 = u64 [a0 + 0x18]
 18100: 33 09 04                 a2 = 0x4
 18103: 82 17 38                 a0 = u64 [sp + 0x38]
 18106: 82 18 08                 a1 = u64 [sp + 0x8]
 18109: 7b 10 28                 u64 [sp + 0x28] = ra
 18112: b4 a0 02 d2 01           ra = 466, jump [a3]
      :                          @1023 [@dyn 233]
 18117: 82 1b 50                 a4 = u64 [sp + 0x50]
 18120: 82 10 28                 ra = u64 [sp + 0x28]
 18123: 52 07 33                 jump @1030 if a0 != 0
      :                          @1024
 18126: c9 b6 09                 a2 = s1 - a4
 18129: 82 18 58                 a1 = u64 [sp + 0x58]
 18132: c8 b8 08                 a1 = a1 + a4
 18135: ab b6 8e fe              jump @986 if s1 != a4
      :                          @1025
 18139: 64 06                    s1 = ra
 18141: 33 07                    a0 = 0
 18143: 28 95 fe                 jump @987
      :                          @1026
 18146: 64 20                    ra = t0
 18148: 82 1b 50                 a4 = u64 [sp + 0x50]
 18151: 28 b4                    jump @1020
      :                          @1027
 18153: 49 11 40                 u64 [sp + 64] = 0
 18156: 64 05                    s0 = ra
 18158: 64 06                    s1 = ra
 18160: 82 17 48                 a0 = u64 [sp + 0x48]
 18163: 7c 77                    a0 = u8 [a0]
 18165: 52 07 b9                 jump @1022 if a0 != 0
      :                          @1028
 18168: 28 d6                    jump @1024
      :                          @1029
 18170: 33 07                    a0 = 0
 18172: 28 06                    jump @1031
      :                          @1030
 18174: 33 07 01                 a0 = 0x1
 18177: 01                       fallthrough
      :                          @1031
 18178: 82 10 78                 ra = u64 [sp + 0x78]
 18181: 82 15 70                 s0 = u64 [sp + 0x70]
 18184: 82 16 68                 s1 = u64 [sp + 0x68]
 18187: 95 11 80 00              sp = sp + 0x80
 18191: 32 00                    ret
      :                          @1032 [@dyn 234]
 18193: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18196: 7b 10 20                 u64 [sp + 0x20] = ra
 18199: 7b 15 18                 u64 [sp + 0x18] = s0
 18202: 7b 16 10                 u64 [sp + 0x10] = s1
 18205: 82 75 10                 s0 = u64 [a0 + 0x10]
 18208: 7c 59                    a2 = u8 [s0]
 18210: 82 7b                    a4 = u64 [a0]
 18212: 82 76 08                 s1 = u64 [a0 + 0x8]
 18215: 51 09 33                 jump @1036 if a2 == 0
      :                          @1033
 18218: 82 6a 18                 a3 = u64 [s1 + 0x18]
 18221: 7b 18 08                 u64 [sp + 0x8] = a1
 18224: 33 08 38 10 01           a1 = 0x11038
 18229: 33 09 04                 a2 = 0x4
 18232: 64 b7                    a0 = a4
 18234: 7b 1b                    u64 [sp] = a4
 18236: b4 a0 02 d6 01           ra = 470, jump [a3]
      :                          @1034 [@dyn 235]
 18241: 82 18 08                 a1 = u64 [sp + 0x8]
 18244: 82 1b                    a4 = u64 [sp]
 18246: 51 07 14                 jump @1036 if a0 == 0
      :                          @1035
 18249: 33 07 01                 a0 = 0x1
 18252: 82 10 20                 ra = u64 [sp + 0x20]
 18255: 82 15 18                 s0 = u64 [sp + 0x18]
 18258: 82 16 10                 s1 = u64 [sp + 0x10]
 18261: 95 11 28                 sp = sp + 0x28
 18264: 32 00                    ret
      :                          @1036
 18266: 83 87                    i32 a0 = a1 + 0
 18268: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 18271: 88 77 01                 a0 = a0 <u 0x1
 18274: 78 57                    u8 [s0] = a0
 18276: 82 6c 20                 a5 = u64 [s1 + 0x20]
 18279: 64 b7                    a0 = a4
 18281: 82 10 20                 ra = u64 [sp + 0x20]
 18284: 82 15 18                 s0 = u64 [sp + 0x18]
 18287: 82 16 10                 s1 = u64 [sp + 0x10]
 18290: 95 11 28                 sp = sp + 0x28
 18293: 32 0c                    jump [a5]
      :                          @1037 [@dyn 236]
 18295: 64 8a                    a3 = a1
 18297: 33 08 f8 0f 01           a1 = 0x10ff8
 18302: 64 a9                    a2 = a3
 18304: 28 99 fb                 jump @946
      :                          @1038
 18307: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 18311: 7b 10 88 00              u64 [sp + 0x88] = ra
 18315: 7b 15 80 00              u64 [sp + 0x80] = s0
 18319: 7b 16 78                 u64 [sp + 0x78] = s1
 18322: 64 75                    s0 = a0
 18324: 7c 77 08                 a0 = u8 [a0 + 0x8]
 18327: 64 8b                    a4 = a1
 18329: 33 08 01                 a1 = 0x1
 18332: 33 06 01                 s1 = 0x1
 18335: 51 07 1d                 jump @1040 if a0 == 0
      :                          @1039
 18338: 78 56 08                 u8 [s0 + 0x8] = s1
 18341: 46 15 09 01              u8 [s0 + 9] = 0x1
 18345: 64 57                    a0 = s0
 18347: 82 10 88 00              ra = u64 [sp + 0x88]
 18351: 82 15 80 00              s0 = u64 [sp + 0x80]
 18355: 82 16 78                 s1 = u64 [sp + 0x78]
 18358: 95 11 90 00              sp = sp + 0x90
 18362: 32 00                    ret
      :                          @1040
 18364: 64 9a                    a3 = a2
 18366: 82 5c                    a5 = u64 [s0]
 18368: 80 c7 34                 a0 = u32 [a5 + 0x34]
 18371: 7c 58 09                 a1 = u8 [s0 + 0x9]
 18374: 84 79 04                 a2 = a0 & 0x4
 18377: 52 09 45                 jump @1046 if a2 != 0
      :                          @1041
 18380: 51 08 32                 jump @1044 if a1 == 0
      :                          @1042
 18383: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18386: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18389: 82 83 18                 t1 = u64 [a1 + 0x18]
 18392: 33 08 40 10 01           a1 = 0x11040
 18397: 33 09 02                 a2 = 0x2
 18400: 64 a6                    s1 = a3
 18402: 7b 1b 10                 u64 [sp + 0x10] = a4
 18405: 7b 1c 08                 u64 [sp + 0x8] = a5
 18408: b4 30 02 da 01           ra = 474, jump [t1]
      :                          @1043 [@dyn 237]
 18413: 82 1c 08                 a5 = u64 [sp + 0x8]
 18416: 82 1b 10                 a4 = u64 [sp + 0x10]
 18419: 64 6a                    a3 = s1
 18421: 33 08 01                 a1 = 0x1
 18424: 33 06 01                 s1 = 0x1
 18427: 52 07 a7                 jump @1039 if a0 != 0
      :                          @1044
 18430: 64 b7                    a0 = a4
 18432: 64 c8                    a1 = a5
 18434: b4 a0 02 dc 01           ra = 476, jump [a3]
      :                          @1045 [@dyn 238]
 18439: 33 08 01                 a1 = 0x1
 18442: 64 76                    s1 = a0
 18444: 28 96                    jump @1039
      :                          @1046
 18446: 52 08 37                 jump @1050 if a1 != 0
      :                          @1047
 18449: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18452: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18455: 82 83 18                 t1 = u64 [a1 + 0x18]
 18458: 33 08 44 10 01           a1 = 0x11044
 18463: 33 09 01                 a2 = 0x1
 18466: 33 06 01                 s1 = 0x1
 18469: 7b 1a                    u64 [sp] = a3
 18471: 7b 1b 10                 u64 [sp + 0x10] = a4
 18474: 7b 1c 08                 u64 [sp + 0x8] = a5
 18477: b4 30 02 de 01           ra = 478, jump [t1]
      :                          @1048 [@dyn 239]
 18482: 82 1c 08                 a5 = u64 [sp + 0x8]
 18485: 82 1b 10                 a4 = u64 [sp + 0x10]
 18488: 82 1a                    a3 = u64 [sp]
 18490: 33 08 01                 a1 = 0x1
 18493: 52 07 65 ff              jump @1039 if a0 != 0
      :                          @1049
 18497: 81 c7 34                 a0 = i32 [a5 + 0x34]
 18500: 01                       fallthrough
      :                          @1050
 18501: 33 06 01                 s1 = 0x1
 18504: 78 16 37                 u8 [sp + 0x37] = s1
 18507: 82 c8 20                 a1 = u64 [a5 + 0x20]
 18510: 82 c9 28                 a2 = u64 [a5 + 0x28]
 18513: 7b 18 18                 u64 [sp + 0x18] = a1
 18516: 7b 19 20                 u64 [sp + 0x20] = a2
 18519: 95 18 37                 a1 = sp + 0x37
 18522: 7b 18 28                 u64 [sp + 0x28] = a1
 18525: 81 c8 30                 a1 = i32 [a5 + 0x30]
 18528: 7c c9 38                 a2 = u8 [a5 + 0x38]
 18531: 82 c3                    t1 = u64 [a5]
 18533: 82 c4 08                 t2 = u64 [a5 + 0x8]
 18536: 82 c0 10                 ra = u64 [a5 + 0x10]
 18539: 82 c2 18                 t0 = u64 [a5 + 0x18]
 18542: 7a 17 6c                 u32 [sp + 0x6c] = a0
 18545: 7a 18 68                 u32 [sp + 0x68] = a1
 18548: 78 19 70                 u8 [sp + 0x70] = a2
 18551: 7b 13 38                 u64 [sp + 0x38] = t1
 18554: 7b 14 40                 u64 [sp + 0x40] = t2
 18557: 7b 10 48                 u64 [sp + 0x48] = ra
 18560: 7b 12 50                 u64 [sp + 0x50] = t0
 18563: 95 17 18                 a0 = sp + 0x18
 18566: 7b 17 58                 u64 [sp + 0x58] = a0
 18569: 33 07 f8 0f 01           a0 = 0x10ff8
 18574: 7b 17 60                 u64 [sp + 0x60] = a0
 18577: 95 18 38                 a1 = sp + 0x38
 18580: 64 b7                    a0 = a4
 18582: b4 a0 02 e0 01           ra = 480, jump [a3]
      :                          @1051 [@dyn 240]
 18587: 52 07 21                 jump @1054 if a0 != 0
      :                          @1052
 18590: 82 18 60                 a1 = u64 [sp + 0x60]
 18593: 82 17 58                 a0 = u64 [sp + 0x58]
 18596: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18599: 33 08 42 10 01           a1 = 0x11042
 18604: 33 09 02                 a2 = 0x2
 18607: b4 a0 02 e2 01           ra = 482, jump [a3]
      :                          @1053 [@dyn 241]
 18612: 64 76                    s1 = a0
 18614: 33 08 01                 a1 = 0x1
 18617: 28 e9 fe                 jump @1039
      :                          @1054
 18620: 33 08 01                 a1 = 0x1
 18623: 28 e3 fe                 jump @1039
      :                          @1055
 18626: 51 08 9b 00              jump @1076 if a1 == 0
      :                          @1056
 18630: 64 79                    a2 = a0
 18632: 7c 77                    a0 = u8 [a0]
 18634: 51 07 91 00              jump @1075 if a0 == 0
      :                          @1057
 18638: 51 27 ff 00 90 00        jump @1077 if a0 == 255
      :                          @1058
 18644: 6c 7a                    a3 = sext.b a0
 18646: 57 0a 09                 jump @1060 if a3 <s 0
      :                          @1059
 18649: 33 0a                    a3 = 0
 18651: 33 08                    a1 = 0
 18653: 28 73                    jump @1074
      :                          @1060
 18655: 55 27 c0 00 0d           jump @1062 if a0 >=u 192
      :                          @1061
 18660: 33 0a 01                 a3 = 0x1
 18663: 33 0b 80                 a4 = 0xffffffffffffff80
 18666: 28 4a                    jump @1071
      :                          @1062
 18668: 55 27 e0 00 0e           jump @1064 if a0 >=u 224
      :                          @1063
 18673: 33 0a 02                 a3 = 0x2
 18676: 33 0b 40 ff              a4 = 0xffffffffffffff40
 18680: 28 3c                    jump @1071
      :                          @1064
 18682: 55 27 f0 00 0e           jump @1066 if a0 >=u 240
      :                          @1065
 18687: 33 0a 03                 a3 = 0x3
 18690: 33 0b 20 ff              a4 = 0xffffffffffffff20
 18694: 28 2e                    jump @1071
      :                          @1066
 18696: 55 27 f8 00 0e           jump @1068 if a0 >=u 248
      :                          @1067
 18701: 33 0a 04                 a3 = 0x4
 18704: 33 0b 10 ff              a4 = 0xffffffffffffff10
 18708: 28 20                    jump @1071
      :                          @1068
 18710: 55 27 fc 00 0e           jump @1070 if a0 >=u 252
      :                          @1069
 18715: 33 0a 05                 a3 = 0x5
 18718: 33 0b 08 ff              a4 = 0xffffffffffffff08
 18722: 28 12                    jump @1071
      :                          @1070
 18724: 88 7a fe 00              a3 = a0 <u 0xfe
 18728: 33 0b 04 ff              a4 = 0xffffffffffffff04
 18732: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 18736: 85 aa 07                 a3 = a3 ^ 0x7
 18739: 01                       fallthrough
      :                          @1071
 18740: ae 8a 2b                 jump @1078 if a3 >=u a1
      :                          @1072
 18743: 33 08                    a1 = 0
 18745: c8 b7 07                 a0 = a0 + a4
 18748: 64 ab                    a4 = a3
 18750: 01                       fallthrough
      :                          @1073
 18751: c8 b9 0c                 a5 = a2 + a4
 18754: 7c cc                    a5 = u8 [a5]
 18756: 97 88 08                 a1 = a1 << 0x8
 18759: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 18762: d4 c8 08                 a1 = a1 | a5
 18765: 52 0b f2                 jump @1073 if a4 != 0
      :                          @1074
 18768: 8a a9 03                 i32 a2 = a3 << 0x3
 18771: cf 97 07                 a0 = a0 << a2
 18774: c8 87 07                 a0 = a0 + a1
 18777: 32 00                    ret
      :                          @1075
 18779: 32 00                    ret
      :                          @1076
 18781: 00                       trap
      :                          @1077
 18782: 00                       trap
      :                          @1078
 18783: 00                       trap
      :                          @1079
 18784: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 18788: 7b 10 00 01              u64 [sp + 0x100] = ra
 18792: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 18796: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 18800: 7b 17                    u64 [sp] = a0
 18802: 78 18 0f                 u8 [sp + 0xf] = a1
 18805: 7b 17 10                 u64 [sp + 0x10] = a0
 18808: 95 16 0f                 s1 = sp + 0xf
 18811: 33 05 01                 s0 = 0x1
 18814: 95 17 0f                 a0 = sp + 0xf
 18817: 33 08 01                 a1 = 0x1
 18820: 95 19 10                 a2 = sp + 0x10
 18823: 33 0a 08                 a3 = 0x8
 18826: 0a 03                    ecalli 3 // 'write'
 18828: 7b 16 60                 u64 [sp + 0x60] = s1
 18831: 33 07 e8 01              a0 = 0x1e8
 18835: 7b 17 68                 u64 [sp + 0x68] = a0
 18838: 64 17                    a0 = sp
 18840: 7b 17 70                 u64 [sp + 0x70] = a0
 18843: 33 07 16                 a0 = 0x16
 18846: 7b 17 78                 u64 [sp + 0x78] = a0
 18849: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18854: 49 21 90 00 02           u64 [sp + 144] = 0x2
 18859: 49 21 a0 00              u64 [sp + 160] = 0
 18863: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 18873: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 18877: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 18882: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 18887: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 18892: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 18896: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 18900: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 18905: 33 08 90 12 01           a1 = 0x11290
 18910: 7b 18 30                 u64 [sp + 0x30] = a1
 18913: 49 11 38 02              u64 [sp + 56] = 0x2
 18917: 95 18 80 00              a1 = sp + 0x80
 18921: 7b 18 50                 u64 [sp + 0x50] = a1
 18924: 49 11 58 02              u64 [sp + 88] = 0x2
 18928: 95 18 60                 a1 = sp + 0x60
 18931: 7b 18 40                 u64 [sp + 0x40] = a1
 18934: 49 11 48 02              u64 [sp + 72] = 0x2
 18938: 95 17 18                 a0 = sp + 0x18
 18941: 95 18 30                 a1 = sp + 0x30
 18944: 50 20 e4 01 ec f1        ra = 484, jump @802
      :                          @1080 [@dyn 242]
 18950: 82 15 20                 s0 = u64 [sp + 0x20]
 18953: 82 1b 28                 a4 = u64 [sp + 0x28]
 18956: 82 16 18                 s1 = u64 [sp + 0x18]
 18959: 33 07 02                 a0 = 0x2
 18962: 33 08                    a1 = 0
 18964: 33 09                    a2 = 0
 18966: 64 5a                    a3 = s0
 18968: 33 00 e6 01              ra = 0x1e6
 18972: 0a 64                    ecalli 100 // 'log'
 18974: 01                       fallthrough
      :                          @1081 [@dyn 243]
 18975: 33 07 00 00 f0           a0 = 0xfffffffffff00000
 18980: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 18985: ac 78 24                 jump @1087 if a1 <u a0
      :                          @1082
 18988: 33 07 50 00 03           a0 = 0x30050
 18993: 95 77 00 00 10           a0 = a0 + 0x100000
 18998: 01                       fallthrough
      :                          @1083
 18999: 82 78                    a1 = u64 [a0]
 19001: c9 87 09                 a2 = a0 - a1
 19004: ab 59 11                 jump @1087 if a2 != s0
      :                          @1084
 19007: c9 68 09                 a2 = a1 - s1
 19010: 01                       fallthrough
      :                          @1085
 19011: 82 7a                    a3 = u64 [a0]
 19013: ab 8a f2                 jump @1083 if a3 != a1
      :                          @1086
 19016: 7b 79                    u64 [a0] = a2
 19018: 33 0b                    a4 = 0
 19020: 01                       fallthrough
      :                          @1087
 19021: 82 10 00 01              ra = u64 [sp + 0x100]
 19025: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 19029: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 19033: 95 11 08 01              sp = sp + 0x108
 19037: 32 00                    ret
      :                          @1088 [@dyn 244]
 19039: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 19042: 7b 10 28                 u64 [sp + 0x28] = ra
 19045: 7b 15 20                 u64 [sp + 0x20] = s0
 19048: 7b 16 18                 u64 [sp + 0x18] = s1
 19051: 64 86                    s1 = a1
 19053: 82 88 28                 a1 = u64 [a1 + 0x28]
 19056: 82 6a 20                 a3 = u64 [s1 + 0x20]
 19059: 82 8b 18                 a4 = u64 [a1 + 0x18]
 19062: 64 75                    s0 = a0
 19064: 33 08 f0 0f 01           a1 = 0x10ff0
 19069: 33 09 01                 a2 = 0x1
 19072: 64 a7                    a0 = a3
 19074: b4 b0 02 ea 01           ra = 490, jump [a4]
      :                          @1089 [@dyn 245]
 19079: 7b 16                    u64 [sp] = s1
 19081: 78 17 08                 u8 [sp + 0x8] = a0
 19084: 46 11 09                 u8 [sp + 9] = 0
 19087: 7b 15 10                 u64 [sp + 0x10] = s0
 19090: 33 09 f0 01              a2 = 0x1f0
 19094: 64 17                    a0 = sp
 19096: 95 18 10                 a1 = sp + 0x10
 19099: 50 20 ec 01 e8 fc        ra = 492, jump @1038
      :                          @1090 [@dyn 246]
 19105: 33 07 01                 a0 = 0x1
 19108: 7c 18 08                 a1 = u8 [sp + 0x8]
 19111: 52 08 1b                 jump @1092 if a1 != 0
      :                          @1091
 19114: 82 17                    a0 = u64 [sp]
 19116: 82 78 28                 a1 = u64 [a0 + 0x28]
 19119: 82 77 20                 a0 = u64 [a0 + 0x20]
 19122: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19125: 33 08 45 10 01           a1 = 0x11045
 19130: 33 09 01                 a2 = 0x1
 19133: b4 a0 02 ee 01           ra = 494, jump [a3]
      :                          @1092 [@dyn 247]
 19138: 82 10 28                 ra = u64 [sp + 0x28]
 19141: 82 15 20                 s0 = u64 [sp + 0x20]
 19144: 82 16 18                 s1 = u64 [sp + 0x18]
 19147: 95 11 30                 sp = sp + 0x30
 19150: 32 00                    ret
      :                          @1093 [@dyn 248]
 19152: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 19156: 7b 10 80 00              u64 [sp + 0x80] = ra
 19160: 80 89 34                 a2 = u32 [a1 + 0x34]
 19163: 82 77                    a0 = u64 [a0]
 19165: 84 9a 10                 a3 = a2 & 0x10
 19168: 52 0a 16                 jump @1096 if a3 != 0
      :                          @1094
 19171: 84 99 20                 a2 = a2 & 0x20
 19174: 52 09 41                 jump @1099 if a2 != 0
      :                          @1095
 19177: 7c 77                    a0 = u8 [a0]
 19179: 82 10 80 00              ra = u64 [sp + 0x80]
 19183: 95 11 88 00              sp = sp + 0x88
 19187: 28 85 f4                 jump @884
      :                          @1096
 19190: 7c 77                    a0 = u8 [a0]
 19192: 33 0b 81 00              a4 = 0x81
 19196: 95 19 7f                 a2 = sp + 0x7f
 19199: 33 02 57                 t0 = 0x57
 19202: 01                       fallthrough
      :                          @1097
 19203: 64 bc                    a5 = a4
 19205: 84 7b 0f                 a4 = a0 & 0xf
 19208: 97 77 38                 a0 = a0 << 0x38
 19211: 98 77 3c                 a0 = a0 >> 0x3c
 19214: 88 b3 0a                 t1 = a4 <u 0xa
 19217: 33 0a 30                 a3 = 0x30
 19220: da 32 0a                 a3 = t0 if t1 == 0
 19223: be ba 0a                 i32 a3 = a3 + a4
 19226: 78 9a                    u8 [a2] = a3
 19228: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19231: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19234: 52 07 e1                 jump @1097 if a0 != 0
      :                          @1098
 19237: 28 31                    jump @1101
      :                          @1099
 19239: 7c 77                    a0 = u8 [a0]
 19241: 33 0b 81 00              a4 = 0x81
 19245: 95 19 7f                 a2 = sp + 0x7f
 19248: 33 02 37                 t0 = 0x37
 19251: 01                       fallthrough
      :                          @1100
 19252: 64 bc                    a5 = a4
 19254: 84 7b 0f                 a4 = a0 & 0xf
 19257: 97 77 38                 a0 = a0 << 0x38
 19260: 98 77 3c                 a0 = a0 >> 0x3c
 19263: 88 b3 0a                 t1 = a4 <u 0xa
 19266: 33 0a 30                 a3 = 0x30
 19269: da 32 0a                 a3 = t0 if t1 == 0
 19272: be ba 0a                 i32 a3 = a3 + a4
 19275: 78 9a                    u8 [a2] = a3
 19277: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19280: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19283: 52 07 e1                 jump @1100 if a0 != 0
      :                          @1101
 19286: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 19289: 56 27 80 00 28           jump @1104 if a0 >u 128
      :                          @1102
 19294: 9a bb 81 00              a4 = 0x81 - a4
 19298: 64 1a                    a3 = sp
 19300: c8 7a 0a                 a3 = a3 + a0
 19303: 33 09 02                 a2 = 0x2
 19306: 64 87                    a0 = a1
 19308: 33 08 46 10 01           a1 = 0x11046
 19313: 50 20 f2 01 2f f5        ra = 498, jump @894
      :                          @1103 [@dyn 249]
 19319: 82 10 80 00              ra = u64 [sp + 0x80]
 19323: 95 11 88 00              sp = sp + 0x88
 19327: 32 00                    ret
      :                          @1104
 19329: 00                       trap
