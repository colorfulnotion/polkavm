// RO data = 4784/4784 bytes
// RW data = 24/16773200 bytes
// Stack size = 16773120 bytes
// RO data = [136, 0, 0, 0, 160, 0, 0, 0, 178, 0, 0, 0, 196, 0, 0, 0, 234, 0, 0, 0, 14, 1, 0, 0, 36, 1, 0, 0, 48, 1, 0, 0, 60, 1, 0, 0, 78, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 64, 110, 61, 101, 106, 101, 99, 116, 64, 110, 61, 101, 120, 112, 117, 110, 103, 101, 32, 32, 111, 117, 116, 112, 117, 116, 61, 121, 105, 101, 108, 100, 64, 110, 61, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 32, 64, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 32, 64, 110, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 88, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 93, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 128, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 160, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 16, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 96, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 0, 0, 0, 0, 0, 0, 208, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 24, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 0, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 0, 0, 152, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 216, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 0, 40, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 57, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 105, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 216, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 235, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 246, 4, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 0, 56, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 65, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 0, 0, 0, 0, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 0, 0, 0, 0, 144, 6, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 158, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 106, 97, 109, 64, 110, 61, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 112, 114, 101, 118, 32, 108, 101, 110, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 56, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 0, 0, 0, 200, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 122, 101, 114, 111, 32, 114, 101, 115, 117, 108, 116, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 50, 8, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 0, 128, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 200, 8, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 44, 32, 103, 111, 116, 32, 160, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 0, 240, 9, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 128, 11, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 200, 11, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 16, 12, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 128, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 200, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 207, 12, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 112, 103, 114, 97, 100, 101, 32, 64, 110, 61, 0, 0, 0, 0, 0, 32, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 72, 14, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 64, 110, 61, 0, 192, 14, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 0, 0, 0, 248, 14, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 112, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 133, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 144, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 146, 1, 0, 0, 0, 0, 0, 0, 152, 1, 0, 0, 0, 0, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 194, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 196, 1, 0, 0, 0, 0, 0, 0, 202, 1, 0, 0, 0, 0, 0, 0, 206, 1, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 114, 18, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 131, 18, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 6176
// Code size = 19938 bytes

      :                          @0
     0: 28 a0 04 00 00           jump @78
      :                          @1
     5: 28 31 16 00 00           jump @261
      :                          @2
    10: 28 1a 3b                 jump @700
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 f0 0f 01           a1 = 0x10ff0
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2d                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 e6 01              a0 = 0x1e6
    73: 7b 17                    u64 [sp] = a0
    75: 01                       fallthrough
      :                          @6
    76: 95 67 01                 a0 = s1 + 0x1
    79: 7b 17 08                 u64 [sp + 0x8] = a0
    82: 7b 16 20                 u64 [sp + 0x20] = s1
    85: 95 17 10                 a0 = sp + 0x10
    88: 95 18 20                 a1 = sp + 0x20
    91: 82 19                    a2 = u64 [sp]
    93: 50 10 06 7a 49           ra = 6, jump @1003
      :                          @7 [@dyn 3]
    98: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   101: 82 16 08                 s1 = u64 [sp + 0x8]
   104: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   107: 7c 17 18                 a0 = u8 [sp + 0x18]
   110: 01                       fallthrough
      :                          @9
   111: 33 08 01                 a1 = 0x1
   114: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   117: 82 17 10                 a0 = u64 [sp + 0x10]
   120: 82 78 28                 a1 = u64 [a0 + 0x28]
   123: 82 77 20                 a0 = u64 [a0 + 0x20]
   126: 82 8a 18                 a3 = u64 [a1 + 0x18]
   129: 33 08 45 10 01           a1 = 0x11045
   134: 33 09 01                 a2 = 0x1
   137: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   141: 64 78                    a1 = a0
   143: 01                       fallthrough
      :                          @12
   144: 64 87                    a0 = a1
   146: 82 10 38                 ra = u64 [sp + 0x38]
   149: 82 15 30                 s0 = u64 [sp + 0x30]
   152: 82 16 28                 s1 = u64 [sp + 0x28]
   155: 95 11 40                 sp = sp + 0x40
   158: 32 00                    ret
      :                          @13 [@dyn 5]
   160: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   164: 7b 10 80 00              u64 [sp + 0x80] = ra
   168: 80 89 34                 a2 = u32 [a1 + 0x34]
   171: 82 77                    a0 = u64 [a0]
   173: 84 9a 10                 a3 = a2 & 0x10
   176: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   179: 84 99 20                 a2 = a2 & 0x20
   182: 52 09 40                 jump @19 if a2 != 0
      :                          @15
   185: 82 77                    a0 = u64 [a0]
   187: 82 10 80 00              ra = u64 [sp + 0x80]
   191: 95 11 88 00              sp = sp + 0x88
   195: 28 09 41                 jump @849
      :                          @16
   198: 82 7b                    a4 = u64 [a0]
   200: 33 09 81 00              a2 = 0x81
   204: 95 17 7f                 a0 = sp + 0x7f
   207: 33 02 57                 t0 = 0x57
   210: 01                       fallthrough
      :                          @17
   211: 64 9c                    a5 = a2
   213: 98 ba 04                 a3 = a4 >> 0x4
   216: 84 bb 0f                 a4 = a4 & 0xf
   219: 88 b3 0a                 t1 = a4 <u 0xa
   222: 33 09 30                 a2 = 0x30
   225: da 32 09                 a2 = t0 if t1 == 0
   228: be b9 09                 i32 a2 = a2 + a4
   231: 78 79                    u8 [a0] = a2
   233: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   236: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   239: 64 ab                    a4 = a3
   241: 52 0a e2                 jump @17 if a3 != 0
      :                          @18
   244: 28 30                    jump @21
      :                          @19
   246: 82 7b                    a4 = u64 [a0]
   248: 33 09 81 00              a2 = 0x81
   252: 95 17 7f                 a0 = sp + 0x7f
   255: 33 02 37                 t0 = 0x37
   258: 01                       fallthrough
      :                          @20
   259: 64 9c                    a5 = a2
   261: 98 ba 04                 a3 = a4 >> 0x4
   264: 84 bb 0f                 a4 = a4 & 0xf
   267: 88 b3 0a                 t1 = a4 <u 0xa
   270: 33 09 30                 a2 = 0x30
   273: da 32 09                 a2 = t0 if t1 == 0
   276: be b9 09                 i32 a2 = a2 + a4
   279: 78 79                    u8 [a0] = a2
   281: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   284: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   287: 64 ab                    a4 = a3
   289: 52 0a e2                 jump @20 if a3 != 0
      :                          @21
   292: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   295: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   300: 9a 9b 81 00              a4 = 0x81 - a2
   304: 64 1a                    a3 = sp
   306: c8 7a 0a                 a3 = a3 + a0
   309: 33 09 02                 a2 = 0x2
   312: 64 87                    a0 = a1
   314: 33 08 46 10 01           a1 = 0x11046
   319: 50 10 0c b5 41           ra = 12, jump @859
      :                          @23 [@dyn 6]
   324: 82 10 80 00              ra = u64 [sp + 0x80]
   328: 95 11 88 00              sp = sp + 0x88
   332: 32 00                    ret
      :                          @24
   334: 00                       trap
      :                          @25 [@dyn 7]
   335: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   339: 7b 10 80 00              u64 [sp + 0x80] = ra
   343: 80 89 34                 a2 = u32 [a1 + 0x34]
   346: 84 9a 10                 a3 = a2 & 0x10
   349: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   352: 84 99 20                 a2 = a2 & 0x20
   355: 52 09 41                 jump @31 if a2 != 0
      :                          @27
   358: 7c 77                    a0 = u8 [a0]
   360: 82 10 80 00              ra = u64 [sp + 0x80]
   364: 95 11 88 00              sp = sp + 0x88
   368: 28 5c 40                 jump @849
      :                          @28
   371: 7c 77                    a0 = u8 [a0]
   373: 33 0b 81 00              a4 = 0x81
   377: 95 19 7f                 a2 = sp + 0x7f
   380: 33 02 57                 t0 = 0x57
   383: 01                       fallthrough
      :                          @29
   384: 64 bc                    a5 = a4
   386: 84 7b 0f                 a4 = a0 & 0xf
   389: 97 77 38                 a0 = a0 << 0x38
   392: 98 77 3c                 a0 = a0 >> 0x3c
   395: 88 b3 0a                 t1 = a4 <u 0xa
   398: 33 0a 30                 a3 = 0x30
   401: da 32 0a                 a3 = t0 if t1 == 0
   404: be ba 0a                 i32 a3 = a3 + a4
   407: 78 9a                    u8 [a2] = a3
   409: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   412: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   415: 52 07 e1                 jump @29 if a0 != 0
      :                          @30
   418: 28 31                    jump @33
      :                          @31
   420: 7c 77                    a0 = u8 [a0]
   422: 33 0b 81 00              a4 = 0x81
   426: 95 19 7f                 a2 = sp + 0x7f
   429: 33 02 37                 t0 = 0x37
   432: 01                       fallthrough
      :                          @32
   433: 64 bc                    a5 = a4
   435: 84 7b 0f                 a4 = a0 & 0xf
   438: 97 77 38                 a0 = a0 << 0x38
   441: 98 77 3c                 a0 = a0 >> 0x3c
   444: 88 b3 0a                 t1 = a4 <u 0xa
   447: 33 0a 30                 a3 = 0x30
   450: da 32 0a                 a3 = t0 if t1 == 0
   453: be ba 0a                 i32 a3 = a3 + a4
   456: 78 9a                    u8 [a2] = a3
   458: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   461: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   464: 52 07 e1                 jump @32 if a0 != 0
      :                          @33
   467: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   470: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   475: 9a bb 81 00              a4 = 0x81 - a4
   479: 64 1a                    a3 = sp
   481: c8 7a 0a                 a3 = a3 + a0
   484: 33 09 02                 a2 = 0x2
   487: 64 87                    a0 = a1
   489: 33 08 46 10 01           a1 = 0x11046
   494: 50 10 10 06 41           ra = 16, jump @859
      :                          @35 [@dyn 8]
   499: 82 10 80 00              ra = u64 [sp + 0x80]
   503: 95 11 88 00              sp = sp + 0x88
   507: 32 00                    ret
      :                          @36
   509: 00                       trap
      :                          @37 [@dyn 9]
   510: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   514: 7b 10 80 00              u64 [sp + 0x80] = ra
   518: 80 89 34                 a2 = u32 [a1 + 0x34]
   521: 84 9a 10                 a3 = a2 & 0x10
   524: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   527: 84 99 20                 a2 = a2 & 0x20
   530: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   533: 80 77                    a0 = u32 [a0]
   535: 82 10 80 00              ra = u64 [sp + 0x80]
   539: 95 11 88 00              sp = sp + 0x88
   543: 28 ad 3f                 jump @849
      :                          @40
   546: 81 7b                    a4 = i32 [a0]
   548: 33 09 81 00              a2 = 0x81
   552: 95 17 7f                 a0 = sp + 0x7f
   555: 33 02 57                 t0 = 0x57
   558: 01                       fallthrough
      :                          @41
   559: 64 9c                    a5 = a2
   561: 8b ba 04                 i32 a3 = a4 >> 0x4
   564: 84 bb 0f                 a4 = a4 & 0xf
   567: 88 b3 0a                 t1 = a4 <u 0xa
   570: 33 09 30                 a2 = 0x30
   573: da 32 09                 a2 = t0 if t1 == 0
   576: be b9 09                 i32 a2 = a2 + a4
   579: 78 79                    u8 [a0] = a2
   581: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   584: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   587: 64 ab                    a4 = a3
   589: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   592: 28 30                    jump @45
      :                          @43
   594: 81 7b                    a4 = i32 [a0]
   596: 33 09 81 00              a2 = 0x81
   600: 95 17 7f                 a0 = sp + 0x7f
   603: 33 02 37                 t0 = 0x37
   606: 01                       fallthrough
      :                          @44
   607: 64 9c                    a5 = a2
   609: 8b ba 04                 i32 a3 = a4 >> 0x4
   612: 84 bb 0f                 a4 = a4 & 0xf
   615: 88 b3 0a                 t1 = a4 <u 0xa
   618: 33 09 30                 a2 = 0x30
   621: da 32 09                 a2 = t0 if t1 == 0
   624: be b9 09                 i32 a2 = a2 + a4
   627: 78 79                    u8 [a0] = a2
   629: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   632: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   635: 64 ab                    a4 = a3
   637: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   640: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   643: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   648: 9a 9b 81 00              a4 = 0x81 - a2
   652: 64 1a                    a3 = sp
   654: c8 7a 0a                 a3 = a3 + a0
   657: 33 09 02                 a2 = 0x2
   660: 64 87                    a0 = a1
   662: 33 08 46 10 01           a1 = 0x11046
   667: 50 10 14 59 40           ra = 20, jump @859
      :                          @47 [@dyn 10]
   672: 82 10 80 00              ra = u64 [sp + 0x80]
   676: 95 11 88 00              sp = sp + 0x88
   680: 32 00                    ret
      :                          @48
   682: 00                       trap
      :                          @49 [@dyn 11]
   683: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   687: 7b 10 80 00              u64 [sp + 0x80] = ra
   691: 80 89 34                 a2 = u32 [a1 + 0x34]
   694: 84 9a 10                 a3 = a2 & 0x10
   697: 52 0a 16                 jump @52 if a3 != 0
      :                          @50
   700: 84 99 20                 a2 = a2 & 0x20
   703: 52 09 40                 jump @55 if a2 != 0
      :                          @51
   706: 82 77                    a0 = u64 [a0]
   708: 82 10 80 00              ra = u64 [sp + 0x80]
   712: 95 11 88 00              sp = sp + 0x88
   716: 28 00 3f                 jump @849
      :                          @52
   719: 82 7b                    a4 = u64 [a0]
   721: 33 09 81 00              a2 = 0x81
   725: 95 17 7f                 a0 = sp + 0x7f
   728: 33 02 57                 t0 = 0x57
   731: 01                       fallthrough
      :                          @53
   732: 64 9c                    a5 = a2
   734: 98 ba 04                 a3 = a4 >> 0x4
   737: 84 bb 0f                 a4 = a4 & 0xf
   740: 88 b3 0a                 t1 = a4 <u 0xa
   743: 33 09 30                 a2 = 0x30
   746: da 32 09                 a2 = t0 if t1 == 0
   749: be b9 09                 i32 a2 = a2 + a4
   752: 78 79                    u8 [a0] = a2
   754: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   757: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   760: 64 ab                    a4 = a3
   762: 52 0a e2                 jump @53 if a3 != 0
      :                          @54
   765: 28 30                    jump @57
      :                          @55
   767: 82 7b                    a4 = u64 [a0]
   769: 33 09 81 00              a2 = 0x81
   773: 95 17 7f                 a0 = sp + 0x7f
   776: 33 02 37                 t0 = 0x37
   779: 01                       fallthrough
      :                          @56
   780: 64 9c                    a5 = a2
   782: 98 ba 04                 a3 = a4 >> 0x4
   785: 84 bb 0f                 a4 = a4 & 0xf
   788: 88 b3 0a                 t1 = a4 <u 0xa
   791: 33 09 30                 a2 = 0x30
   794: da 32 09                 a2 = t0 if t1 == 0
   797: be b9 09                 i32 a2 = a2 + a4
   800: 78 79                    u8 [a0] = a2
   802: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   805: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   808: 64 ab                    a4 = a3
   810: 52 0a e2                 jump @56 if a3 != 0
      :                          @57
   813: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   816: 56 27 80 00 27           jump @60 if a0 >u 128
      :                          @58
   821: 9a 9b 81 00              a4 = 0x81 - a2
   825: 64 1a                    a3 = sp
   827: c8 7a 0a                 a3 = a3 + a0
   830: 33 09 02                 a2 = 0x2
   833: 64 87                    a0 = a1
   835: 33 08 46 10 01           a1 = 0x11046
   840: 50 10 18 ac 3f           ra = 24, jump @859
      :                          @59 [@dyn 12]
   845: 82 10 80 00              ra = u64 [sp + 0x80]
   849: 95 11 88 00              sp = sp + 0x88
   853: 32 00                    ret
      :                          @60
   855: 00                       trap
      :                          @61 [@dyn 13]
   856: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   859: 7b 10 28                 u64 [sp + 0x28] = ra
   862: 7b 15 20                 u64 [sp + 0x20] = s0
   865: 7b 16 18                 u64 [sp + 0x18] = s1
   868: 64 85                    s0 = a1
   870: 82 88 28                 a1 = u64 [a1 + 0x28]
   873: 82 5a 20                 a3 = u64 [s0 + 0x20]
   876: 82 8b 18                 a4 = u64 [a1 + 0x18]
   879: 64 76                    s1 = a0
   881: 33 08 f0 0f 01           a1 = 0x10ff0
   886: 33 09 01                 a2 = 0x1
   889: 64 a7                    a0 = a3
   891: b4 b0 01 1c              ra = 28, jump [a4]
      :                          @62 [@dyn 14]
   895: 7b 15                    u64 [sp] = s0
   897: 78 17 08                 u8 [sp + 0x8] = a0
   900: 46 11 09                 u8 [sp + 9] = 0
   903: 7b 16 10                 u64 [sp + 0x10] = s1
   906: 33 05 0a                 s0 = 0xa
   909: 64 17                    a0 = sp
   911: 95 18 10                 a1 = sp + 0x10
   914: 33 09 0a                 a2 = 0xa
   917: 50 10 1e 42 46           ra = 30, jump @1003
      :                          @63 [@dyn 15]
   922: 95 67 08                 a0 = s1 + 0x8
   925: 7b 17 10                 u64 [sp + 0x10] = a0
   928: 64 17                    a0 = sp
   930: 95 18 10                 a1 = sp + 0x10
   933: 64 59                    a2 = s0
   935: 50 10 20 30 46           ra = 32, jump @1003
      :                          @64 [@dyn 16]
   940: 95 67 10                 a0 = s1 + 0x10
   943: 7b 17 10                 u64 [sp + 0x10] = a0
   946: 64 17                    a0 = sp
   948: 95 18 10                 a1 = sp + 0x10
   951: 64 59                    a2 = s0
   953: 50 10 22 1e 46           ra = 34, jump @1003
      :                          @65 [@dyn 17]
   958: 95 67 18                 a0 = s1 + 0x18
   961: 7b 17 10                 u64 [sp + 0x10] = a0
   964: 64 17                    a0 = sp
   966: 95 18 10                 a1 = sp + 0x10
   969: 64 59                    a2 = s0
   971: 50 10 24 0c 46           ra = 36, jump @1003
      :                          @66 [@dyn 18]
   976: 95 67 20                 a0 = s1 + 0x20
   979: 7b 17 10                 u64 [sp + 0x10] = a0
   982: 64 17                    a0 = sp
   984: 95 18 10                 a1 = sp + 0x10
   987: 64 59                    a2 = s0
   989: 50 10 26 fa 45           ra = 38, jump @1003
      :                          @67 [@dyn 19]
   994: 95 67 28                 a0 = s1 + 0x28
   997: 7b 17 10                 u64 [sp + 0x10] = a0
  1000: 64 17                    a0 = sp
  1002: 95 18 10                 a1 = sp + 0x10
  1005: 64 59                    a2 = s0
  1007: 50 10 28 e8 45           ra = 40, jump @1003
      :                          @68 [@dyn 20]
  1012: 95 67 30                 a0 = s1 + 0x30
  1015: 7b 17 10                 u64 [sp + 0x10] = a0
  1018: 64 17                    a0 = sp
  1020: 95 18 10                 a1 = sp + 0x10
  1023: 64 59                    a2 = s0
  1025: 50 10 2a d6 45           ra = 42, jump @1003
      :                          @69 [@dyn 21]
  1030: 95 67 38                 a0 = s1 + 0x38
  1033: 7b 17 10                 u64 [sp + 0x10] = a0
  1036: 64 17                    a0 = sp
  1038: 95 18 10                 a1 = sp + 0x10
  1041: 64 59                    a2 = s0
  1043: 50 10 2c c4 45           ra = 44, jump @1003
      :                          @70 [@dyn 22]
  1048: 95 67 40                 a0 = s1 + 0x40
  1051: 7b 17 10                 u64 [sp + 0x10] = a0
  1054: 64 17                    a0 = sp
  1056: 95 18 10                 a1 = sp + 0x10
  1059: 64 59                    a2 = s0
  1061: 50 10 2e b2 45           ra = 46, jump @1003
      :                          @71 [@dyn 23]
  1066: 95 67 48                 a0 = s1 + 0x48
  1069: 7b 17 10                 u64 [sp + 0x10] = a0
  1072: 64 17                    a0 = sp
  1074: 95 18 10                 a1 = sp + 0x10
  1077: 64 59                    a2 = s0
  1079: 50 10 30 a0 45           ra = 48, jump @1003
      :                          @72 [@dyn 24]
  1084: 95 67 50                 a0 = s1 + 0x50
  1087: 7b 17 10                 u64 [sp + 0x10] = a0
  1090: 64 17                    a0 = sp
  1092: 95 18 10                 a1 = sp + 0x10
  1095: 64 59                    a2 = s0
  1097: 50 10 32 8e 45           ra = 50, jump @1003
      :                          @73 [@dyn 25]
  1102: 95 67 58                 a0 = s1 + 0x58
  1105: 7b 17 10                 u64 [sp + 0x10] = a0
  1108: 64 17                    a0 = sp
  1110: 95 18 10                 a1 = sp + 0x10
  1113: 64 59                    a2 = s0
  1115: 50 10 34 7c 45           ra = 52, jump @1003
      :                          @74 [@dyn 26]
  1120: 95 67 60                 a0 = s1 + 0x60
  1123: 7b 17 10                 u64 [sp + 0x10] = a0
  1126: 64 17                    a0 = sp
  1128: 95 18 10                 a1 = sp + 0x10
  1131: 64 59                    a2 = s0
  1133: 50 10 36 6a 45           ra = 54, jump @1003
      :                          @75 [@dyn 27]
  1138: 33 07 01                 a0 = 0x1
  1141: 7c 18 08                 a1 = u8 [sp + 0x8]
  1144: 52 08 1a                 jump @77 if a1 != 0
      :                          @76
  1147: 82 17                    a0 = u64 [sp]
  1149: 82 78 28                 a1 = u64 [a0 + 0x28]
  1152: 82 77 20                 a0 = u64 [a0 + 0x20]
  1155: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1158: 33 08 45 10 01           a1 = 0x11045
  1163: 33 09 01                 a2 = 0x1
  1166: b4 a0 01 38              ra = 56, jump [a3]
      :                          @77 [@dyn 28]
  1170: 82 10 28                 ra = u64 [sp + 0x28]
  1173: 82 15 20                 s0 = u64 [sp + 0x20]
  1176: 82 16 18                 s1 = u64 [sp + 0x18]
  1179: 95 11 30                 sp = sp + 0x30
  1182: 32 00                    ret
      :                          @78 [export #0: 'refine']
  1184: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1188: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1192: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1196: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1200: 95 11 30 d4              sp = sp + 0xffffffffffffd430
  1204: 33 0a 00 00 01           a3 = 0x10000
  1209: 53 18 04 e7 00           jump @97 if a1 <u 4
      :                          @79
  1214: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1217: 51 0b df 00              jump @97 if a4 == 0
      :                          @80
  1221: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1224: 80 7a                    a3 = u32 [a0]
  1226: 33 06 01                 s1 = 0x1
  1229: 59 08 3d                 jump @89 if a1 >=s 0
      :                          @81
  1232: 84 88 ff 00              a1 = a1 & 0xff
  1236: 33 06 02                 s1 = 0x2
  1239: 53 28 c0 00 2d           jump @87 if a1 <u 192
      :                          @82
  1244: 33 06 03                 s1 = 0x3
  1247: 53 28 e0 00 25           jump @87 if a1 <u 224
      :                          @83
  1252: 33 06 04                 s1 = 0x4
  1255: 53 28 f0 00 1d           jump @87 if a1 <u 240
      :                          @84
  1260: 33 06 05                 s1 = 0x5
  1263: 53 28 f8 00 15           jump @87 if a1 <u 248
      :                          @85
  1268: 33 06 06                 s1 = 0x6
  1271: 53 28 fc 00 0d           jump @87 if a1 <u 252
      :                          @86
  1276: 88 88 fe 00              a1 = a1 <u 0xfe
  1280: 9a 86 08                 s1 = 0x8 - a1
  1283: 01                       fallthrough
      :                          @87
  1284: ae 6b 06                 jump @89 if a4 >=u s1
      :                          @88
  1287: 28 2e 11                 jump @260
      :                          @89
  1290: 7b 1a 80 00              u64 [sp + 0x80] = a3
  1294: 95 77 04                 a0 = a0 + 0x4
  1297: 64 68                    a1 = s1
  1299: 7b 1b 88 00              u64 [sp + 0x88] = a4
  1303: 50 10 3a ff 45           ra = 58, jump @1020
      :                          @90 [@dyn 29]
  1308: 64 75                    s0 = a0
  1310: 82 17 88 00              a0 = u64 [sp + 0x88]
  1314: e4 67 07                 a0 = maxu(a0, s1)
  1317: c9 67 07                 a0 = a0 - s1
  1320: d8 57 08                 a1 = a0 <u s0
  1323: e4 57 07                 a0 = maxu(a0, s0)
  1326: c9 57 07                 a0 = a0 - s0
  1329: 88 77 20                 a0 = a0 <u 0x20
  1332: d4 87 07                 a0 = a0 | a1
  1335: 52 07 60                 jump @96 if a0 != 0
      :                          @91
  1338: 48 21 b0 00              u32 [sp + 176] = 0
  1342: 49 21 a8 00              u64 [sp + 168] = 0
  1346: 49 21 a0 00              u64 [sp + 160] = 0
  1350: 49 21 98 00              u64 [sp + 152] = 0
  1354: 49 21 90 00              u64 [sp + 144] = 0
  1358: 95 17 90 00              a0 = sp + 0x90
  1362: 33 09 24                 a2 = 0x24
  1365: 33 0a 03                 a3 = 0x3
  1368: 33 08                    a1 = 0
  1370: 33 0b                    a4 = 0
  1372: 33 0c                    a5 = 0
  1374: 0a 12                    ecalli 18 // 'fetch'
  1376: 01                       fallthrough
      :                          @92
  1377: 95 1a 90 00              a3 = sp + 0x90
  1381: 33 08 24                 a1 = 0x24
  1384: 53 15 08 3b              jump @98 if s0 <u 8
      :                          @93
  1388: 95 17 b8 00              a0 = sp + 0xb8
  1392: 33 09 00 20              a2 = 0x2000
  1396: 33 08                    a1 = 0
  1398: 50 10 3c f7 3b           ra = 60, jump @834
      :                          @94 [@dyn 30]
  1403: 95 18 90 00              a1 = sp + 0x90
  1407: 95 19 b8 00              a2 = sp + 0xb8
  1411: 33 0b 00 20              a4 = 0x2000
  1415: 82 17 80 00              a0 = u64 [sp + 0x80]
  1419: 33 0a                    a3 = 0
  1421: 0a 11                    ecalli 17 // 'historical_lookup'
  1423: 01                       fallthrough
      :                          @95
  1424: 95 78 01                 a1 = a0 + 0x1
  1427: 55 18 04 2b              jump @99 if a1 >=u 4
      :                          @96
  1431: 33 08                    a1 = 0
  1433: 33 0a 00 00 01           a3 = 0x10000
  1438: 28 05                    jump @98
      :                          @97
  1440: 33 08                    a1 = 0
  1442: 01                       fallthrough
      :                          @98
  1443: 64 a7                    a0 = a3
  1445: 33 09 d0 2b              a2 = 0x2bd0
  1449: c8 91 01                 sp = sp + a2
  1452: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1456: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1460: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1464: 95 11 f8 07              sp = sp + 0x7f8
  1468: 32 00                    ret
      :                          @99
  1470: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1473: 53 18 03 d6              jump @96 if a1 <u 3
      :                          @100
  1477: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1480: 51 18 06 cf              jump @96 if a1 == 6
      :                          @101
  1484: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1487: 53 18 03 c8              jump @96 if a1 <u 3
      :                          @102
  1491: 7c 18 ba 00              a1 = u8 [sp + 0xba]
  1495: 7c 19 b9 00              a2 = u8 [sp + 0xb9]
  1499: 7c 1a b8 00              a3 = u8 [sp + 0xb8]
  1503: 97 88 10                 a1 = a1 << 0x10
  1506: 97 99 08                 a2 = a2 << 0x8
  1509: d4 98 08                 a1 = a1 | a2
  1512: d4 a8 08                 a1 = a1 | a3
  1515: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1518: ac 89 a9                 jump @96 if a2 <u a1
      :                          @103
  1521: 7c 17 bd 00              a0 = u8 [sp + 0xbd]
  1525: 7c 1a bc 00              a3 = u8 [sp + 0xbc]
  1529: 7c 1b bb 00              a4 = u8 [sp + 0xbb]
  1533: 97 77 10                 a0 = a0 << 0x10
  1536: 97 aa 08                 a3 = a3 << 0x8
  1539: d4 a7 07                 a0 = a0 | a3
  1542: d4 b7 07                 a0 = a0 | a4
  1545: c9 89 09                 a2 = a2 - a1
  1548: ac 79 8b                 jump @96 if a2 <u a0
      :                          @104
  1551: c9 79 06                 s1 = a2 - a0
  1554: 53 16 04 85              jump @96 if s1 <u 4
      :                          @105
  1558: 95 12 c3 00              t0 = sp + 0xc3
  1562: c8 28 03                 t1 = a1 + t0
  1565: c8 37 0b                 a4 = a0 + t1
  1568: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1571: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1574: 7c ba                    a3 = u8 [a4]
  1576: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1579: 97 cc 10                 a5 = a5 << 0x10
  1582: 97 55 08                 s0 = s0 << 0x8
  1585: d4 5c 0c                 a5 = a5 | s0
  1588: d4 c9 09                 a2 = a2 | a5
  1591: 97 99 08                 a2 = a2 << 0x8
  1594: d4 a9 0c                 a5 = a2 | a3
  1597: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1600: ac c6 57 ff              jump @96 if s1 <u a5
      :                          @106
  1604: 7c 19 bf 00              a2 = u8 [sp + 0xbf]
  1608: 95 1a b8 20              a3 = sp + 0x20b8
  1612: 7c 14 be 00              t2 = u8 [sp + 0xbe]
  1616: 97 99 08                 a2 = a2 << 0x8
  1619: 7c 16 c2 00              s1 = u8 [sp + 0xc2]
  1623: 7c 15 c1 00              s0 = u8 [sp + 0xc1]
  1627: d4 49 04                 t2 = a2 | t2
  1630: 7c 19 c0 00              a2 = u8 [sp + 0xc0]
  1634: 97 66 10                 s1 = s1 << 0x10
  1637: 97 55 08                 s0 = s0 << 0x8
  1640: d4 65 05                 s0 = s0 | s1
  1643: d4 59 09                 a2 = a2 | s0
  1646: 95 bb 04                 a4 = a4 + 0x4
  1649: 7b a4                    u64 [a3] = t2
  1651: 7b a9 08                 u64 [a3 + 0x8] = a2
  1654: 7b a2 10                 u64 [a3 + 0x10] = t0
  1657: 7b a8 18                 u64 [a3 + 0x18] = a1
  1660: 7b a3 20                 u64 [a3 + 0x20] = t1
  1663: 7b a7 28                 u64 [a3 + 0x28] = a0
  1666: 7b ab 30                 u64 [a3 + 0x30] = a4
  1669: 7b ac 38                 u64 [a3 + 0x38] = a5
  1672: 7b aa 50                 u64 [a3 + 0x50] = a3
  1675: 33 08 16                 a1 = 0x16
  1678: 7b a8 58                 u64 [a3 + 0x58] = a1
  1681: 95 17 c0 20              a0 = sp + 0x20c0
  1685: 7b a7 60                 u64 [a3 + 0x60] = a0
  1688: 7b a8 68                 u64 [a3 + 0x68] = a1
  1691: 95 17 c8 20              a0 = sp + 0x20c8
  1695: 7b a7 70                 u64 [a3 + 0x70] = a0
  1698: 7b a8 78                 u64 [a3 + 0x78] = a1
  1701: 95 17 d0 20              a0 = sp + 0x20d0
  1705: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1709: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1713: 95 17 d8 20              a0 = sp + 0x20d8
  1717: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1721: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1725: 95 17 e0 20              a0 = sp + 0x20e0
  1729: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1733: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1737: 95 17 e8 20              a0 = sp + 0x20e8
  1741: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1745: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1749: 95 17 f0 20              a0 = sp + 0x20f0
  1753: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1757: 7b 18 88 00              u64 [sp + 0x88] = a1
  1761: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1765: 33 07 00 01 01           a0 = 0x10100
  1770: 95 16 10 31              s1 = sp + 0x3110
  1774: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1778: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1783: 49 26 68 01              u64 [s1 + 360] = 0
  1787: 95 18 08 21              a1 = sp + 0x2108
  1791: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1795: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1800: 95 17 a0 31              a0 = sp + 0x31a0
  1804: 95 18 58 32              a1 = sp + 0x3258
  1808: 50 10 3e 20 37           ra = 62, jump @766
      :                          @107 [@dyn 31]
  1813: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1817: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1821: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1825: 33 07 03                 a0 = 0x3
  1828: 33 08                    a1 = 0
  1830: 33 09                    a2 = 0
  1832: 64 5a                    a3 = s0
  1834: 33 00 40                 ra = 0x40
  1837: 0a 64                    ecalli 100 // 'log'
  1839: 01                       fallthrough
      :                          @108 [@dyn 32]
  1840: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  1846: 49 21 80 00 01 10 00 ff  u64 [sp + 128] = 0xffffffffff001001
  1854: 53 47 01 10 00 ff 38     jump @114 if a0 <u 4278194177
      :                          @109
  1861: 64 52                    t0 = s0
  1863: 64 65                    s0 = s1
  1865: 33 07 40 00 03           a0 = 0x30040
  1870: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1876: 33 09 ff ef ff 00        a2 = 0xffefff
  1882: 01                       fallthrough
      :                          @110
  1883: 82 8a                    a3 = u64 [a1]
  1885: c8 97 0b                 a4 = a0 + a2
  1888: c9 ab 0b                 a4 = a4 - a3
  1891: ab 2b 13                 jump @114 if a4 != t0
      :                          @111
  1894: c9 5a 0b                 a4 = a3 - s0
  1897: 01                       fallthrough
      :                          @112
  1898: 82 8c                    a5 = u64 [a1]
  1900: ab ac ef                 jump @110 if a5 != a3
      :                          @113
  1903: 7b 8b                    u64 [a1] = a4
  1905: 33 06                    s1 = 0
  1907: 0a                       ecalli 0 // 'gas'
  1908: 28 04                    jump @115
      :                          @114
  1910: 0a                       ecalli 0 // 'gas'
  1911: 01                       fallthrough
      :                          @115
  1912: 95 18 b8 20              a1 = sp + 0x20b8
  1916: 7b 87 40                 u64 [a1 + 0x40] = a0
  1919: 95 17 f8 20              a0 = sp + 0x20f8
  1923: 95 15 10 31              s0 = sp + 0x3110
  1927: 7b 57 90 00              u64 [s0 + 0x90] = a0
  1931: 82 17 88 00              a0 = u64 [sp + 0x88]
  1935: 7b 57 98 00              u64 [s0 + 0x98] = a0
  1939: 33 07 90 01 01           a0 = 0x10190
  1944: 7b 87 50                 u64 [a1 + 0x50] = a0
  1947: 95 17 a0 31              a0 = sp + 0x31a0
  1951: 7b 87 60                 u64 [a1 + 0x60] = a0
  1954: 49 18 58 01              u64 [a1 + 88] = 0x1
  1958: 49 18 70                 u64 [a1 + 112] = 0
  1961: 49 18 68 01              u64 [a1 + 104] = 0x1
  1965: 95 17 58 32              a0 = sp + 0x3258
  1969: 95 18 08 21              a1 = sp + 0x2108
  1973: 50 10 42 7b 36           ra = 66, jump @766
      :                          @116 [@dyn 33]
  1978: 82 56 50 01              s1 = u64 [s0 + 0x150]
  1982: 82 5b 58 01              a4 = u64 [s0 + 0x158]
  1986: 82 55 48 01              s0 = u64 [s0 + 0x148]
  1990: 33 07 04                 a0 = 0x4
  1993: 33 08                    a1 = 0
  1995: 33 09                    a2 = 0
  1997: 64 6a                    a3 = s1
  1999: 33 00 44                 ra = 0x44
  2002: 0a 64                    ecalli 100 // 'log'
  2004: 01                       fallthrough
      :                          @117 [@dyn 34]
  2005: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2011: 82 18 80 00              a1 = u64 [sp + 0x80]
  2015: ac 87 30                 jump @123 if a0 <u a1
      :                          @118
  2018: 64 62                    t0 = s1
  2020: 33 07 40 00 03           a0 = 0x30040
  2025: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  2031: 33 09 ff ef ff 00        a2 = 0xffefff
  2037: 01                       fallthrough
      :                          @119
  2038: 82 8a                    a3 = u64 [a1]
  2040: c8 97 0b                 a4 = a0 + a2
  2043: c9 ab 0b                 a4 = a4 - a3
  2046: ab 2b 11                 jump @123 if a4 != t0
      :                          @120
  2049: c9 5a 0b                 a4 = a3 - s0
  2052: 01                       fallthrough
      :                          @121
  2053: 82 8c                    a5 = u64 [a1]
  2055: ab ac ef                 jump @119 if a5 != a3
      :                          @122
  2058: 7b 8b                    u64 [a1] = a4
  2060: 33 06                    s1 = 0
  2062: 01                       fallthrough
      :                          @123
  2063: 95 15 b8 20              s0 = sp + 0x20b8
  2067: 82 57 30                 a0 = u64 [s0 + 0x30]
  2070: 82 58 38                 a1 = u64 [s0 + 0x38]
  2073: 33 09                    a2 = 0
  2075: 0a 14                    ecalli 20 // 'machine'
  2077: 7b 57 48                 u64 [s0 + 0x48] = a0
  2080: 95 17 00 21              a0 = sp + 0x2100
  2084: 95 18 10 31              a1 = sp + 0x3110
  2088: 7b 87 90 00              u64 [a1 + 0x90] = a0
  2092: 33 07 16                 a0 = 0x16
  2095: 7b 87 98 00              u64 [a1 + 0x98] = a0
  2099: 33 07 b8 01 01           a0 = 0x101b8
  2104: 7b 57 50                 u64 [s0 + 0x50] = a0
  2107: 95 17 a0 31              a0 = sp + 0x31a0
  2111: 7b 57 60                 u64 [s0 + 0x60] = a0
  2114: 49 15 58 01              u64 [s0 + 88] = 0x1
  2118: 49 15 68 01              u64 [s0 + 104] = 0x1
  2122: 49 15 70                 u64 [s0 + 112] = 0
  2125: 95 17 58 32              a0 = sp + 0x3258
  2129: 95 18 08 21              a1 = sp + 0x2108
  2133: 50 10 46 db 35           ra = 70, jump @766
      :                          @124 [@dyn 35]
  2138: 95 17 10 31              a0 = sp + 0x3110
  2142: 82 76 50 01              s1 = u64 [a0 + 0x150]
  2146: 82 7b 58 01              a4 = u64 [a0 + 0x158]
  2150: 82 75 48 01              s0 = u64 [a0 + 0x148]
  2154: 33 07 03                 a0 = 0x3
  2157: 33 08                    a1 = 0
  2159: 33 09                    a2 = 0
  2161: 64 6a                    a3 = s1
  2163: 33 00 48                 ra = 0x48
  2166: 0a 64                    ecalli 100 // 'log'
  2168: 01                       fallthrough
      :                          @125 [@dyn 36]
  2169: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  2175: 53 48 01 10 00 ff 32     jump @131 if a1 <u 4278194177
      :                          @126
  2182: 64 62                    t0 = s1
  2184: 33 07 40 00 03           a0 = 0x30040
  2189: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  2195: 33 09 ff ef ff 00        a2 = 0xffefff
  2201: 01                       fallthrough
      :                          @127
  2202: 82 8a                    a3 = u64 [a1]
  2204: c8 97 0b                 a4 = a0 + a2
  2207: c9 ab 0b                 a4 = a4 - a3
  2210: ab 2b 0f                 jump @131 if a4 != t0
      :                          @128
  2213: c9 5a 0b                 a4 = a3 - s0
  2216: 01                       fallthrough
      :                          @129
  2217: 82 8c                    a5 = u64 [a1]
  2219: ab ac ef                 jump @127 if a5 != a3
      :                          @130
  2222: 7b 8b                    u64 [a1] = a4
  2224: 01                       fallthrough
      :                          @131
  2225: 95 19 b8 20              a2 = sp + 0x20b8
  2229: 82 97                    a0 = u64 [a2]
  2231: 7b 17 78                 u64 [sp + 0x78] = a0
  2234: 82 97 08                 a0 = u64 [a2 + 0x8]
  2237: 7b 17 70                 u64 [sp + 0x70] = a0
  2240: 82 97 10                 a0 = u64 [a2 + 0x10]
  2243: 7b 17 68                 u64 [sp + 0x68] = a0
  2246: 82 95 18                 s0 = u64 [a2 + 0x18]
  2249: 82 98 20                 a1 = u64 [a2 + 0x20]
  2252: 7b 18 60                 u64 [sp + 0x60] = a1
  2255: 80 97 48                 a0 = u32 [a2 + 0x48]
  2258: 82 96 28                 s1 = u64 [a2 + 0x28]
  2261: 49 21 80 00 ff 0f        u64 [sp + 128] = 0xfff
  2267: 95 59 ff 0f              a2 = s0 + 0xfff
  2271: 98 99 0c                 a2 = a2 >> 0xc
  2274: 33 08 10                 a1 = 0x10
  2277: 7b 17 88 00              u64 [sp + 0x88] = a0
  2281: 0a 17                    ecalli 23 // 'zero'
  2283: 01                       fallthrough
      :                          @132
  2284: 51 07 17                 jump @134 if a0 == 0
      :                          @133
  2287: 33 0a 34 12 01           a3 = 0x11234
  2292: 33 07 02                 a0 = 0x2
  2295: 33 0b 3e                 a4 = 0x3e
  2298: 33 08                    a1 = 0
  2300: 33 09                    a2 = 0
  2302: 0a 64                    ecalli 100 // 'log'
  2304: 28 e6 00                 jump @147
      :                          @134
  2307: 7b 16 58                 u64 [sp + 0x58] = s1
  2310: 82 17 80 00              a0 = u64 [sp + 0x80]
  2314: c8 67 07                 a0 = a0 + s1
  2317: 98 77 0c                 a0 = a0 >> 0xc
  2320: 82 19 78                 a2 = u64 [sp + 0x78]
  2323: c8 79 09                 a2 = a2 + a0
  2326: 7b 15 78                 u64 [sp + 0x78] = s0
  2329: 95 57 ff ff 00           a0 = s0 + 0xffff
  2334: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2339: 95 75 00 00 02           s0 = a0 + 0x20000
  2344: 98 58 0c                 a1 = s0 >> 0xc
  2347: 82 17 88 00              a0 = u64 [sp + 0x88]
  2351: 0a 17                    ecalli 23 // 'zero'
  2353: 01                       fallthrough
      :                          @135
  2354: 51 07 17                 jump @137 if a0 == 0
      :                          @136
  2357: 33 0a f6 11 01           a3 = 0x111f6
  2362: 33 07 02                 a0 = 0x2
  2365: 33 0b 3e                 a4 = 0x3e
  2368: 33 08                    a1 = 0
  2370: 33 09                    a2 = 0
  2372: 0a 64                    ecalli 100 // 'log'
  2374: 28 a0 00                 jump @147
      :                          @137
  2377: 82 16 80 00              s1 = u64 [sp + 0x80]
  2381: 82 17 70                 a0 = u64 [sp + 0x70]
  2384: c8 76 06                 s1 = s1 + a0
  2387: 98 69 0c                 a2 = s1 >> 0xc
  2390: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2394: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2404: c9 78 08                 a1 = a1 - a0
  2407: 98 88 0c                 a1 = a1 >> 0xc
  2410: 82 17 88 00              a0 = u64 [sp + 0x88]
  2414: 0a 17                    ecalli 23 // 'zero'
  2416: 01                       fallthrough
      :                          @138
  2417: 51 07 16                 jump @140 if a0 == 0
      :                          @139
  2420: 33 0a ba 11 01           a3 = 0x111ba
  2425: 33 07 02                 a0 = 0x2
  2428: 33 0b 3c                 a4 = 0x3c
  2431: 33 08                    a1 = 0
  2433: 33 09                    a2 = 0
  2435: 0a 64                    ecalli 100 // 'log'
  2437: 28 61                    jump @147
      :                          @140
  2439: 33 09 00 00 01           a2 = 0x10000
  2444: 82 17 88 00              a0 = u64 [sp + 0x88]
  2448: 82 18 68                 a1 = u64 [sp + 0x68]
  2451: 82 1a 78                 a3 = u64 [sp + 0x78]
  2454: 0a 16                    ecalli 22 // 'poke'
  2456: 01                       fallthrough
      :                          @141
  2457: 51 07 16                 jump @143 if a0 == 0
      :                          @142
  2460: 33 0a 7c 11 01           a3 = 0x1117c
  2465: 33 07 02                 a0 = 0x2
  2468: 33 0b 3e                 a4 = 0x3e
  2471: 33 08                    a1 = 0
  2473: 33 09                    a2 = 0
  2475: 0a 64                    ecalli 100 // 'log'
  2477: 28 39                    jump @147
      :                          @143
  2479: 82 17 88 00              a0 = u64 [sp + 0x88]
  2483: 82 18 60                 a1 = u64 [sp + 0x60]
  2486: 64 59                    a2 = s0
  2488: 82 1a 58                 a3 = u64 [sp + 0x58]
  2491: 0a 16                    ecalli 22 // 'poke'
  2493: 01                       fallthrough
      :                          @144
  2494: 51 07 16                 jump @146 if a0 == 0
      :                          @145
  2497: 33 0a 3e 11 01           a3 = 0x1113e
  2502: 33 07 02                 a0 = 0x2
  2505: 33 0b 3e                 a4 = 0x3e
  2508: 33 08                    a1 = 0
  2510: 33 09                    a2 = 0
  2512: 0a 64                    ecalli 100 // 'log'
  2514: 28 14                    jump @147
      :                          @146
  2516: 33 0a 10 11 01           a3 = 0x11110
  2521: 33 07 02                 a0 = 0x2
  2524: 33 0b 2e                 a4 = 0x2e
  2527: 33 08                    a1 = 0
  2529: 33 09                    a2 = 0
  2531: 0a 64                    ecalli 100 // 'log'
  2533: 01                       fallthrough
      :                          @147
  2534: 33 05 08 10              s0 = 0x1008
  2538: 95 17 08 21              a0 = sp + 0x2108
  2542: 33 08                    a1 = 0
  2544: 33 09 08 10              a2 = 0x1008
  2548: 50 10 4a 79 37           ra = 74, jump @834
      :                          @148 [@dyn 37]
  2553: 95 16 10 31              s1 = sp + 0x3110
  2557: 49 06                    u64 [s1 + 0] = 0
  2559: 95 17 10 21              a0 = sp + 0x2110
  2563: 7b 67 08                 u64 [s1 + 0x8] = a0
  2566: 49 16 10                 u64 [s1 + 16] = 0
  2569: 49 16 18                 u64 [s1 + 24] = 0
  2572: 95 17 08 21              a0 = sp + 0x2108
  2576: 33 0a 06                 a3 = 0x6
  2579: 33 08                    a1 = 0
  2581: 7b 15 68                 u64 [sp + 0x68] = s0
  2584: 64 59                    a2 = s0
  2586: 33 0b                    a4 = 0
  2588: 33 0c                    a5 = 0
  2590: 0a 12                    ecalli 18 // 'fetch'
  2592: 01                       fallthrough
      :                          @149
  2593: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2597: 51 17 ff b4 02           jump @176 if a0 == 4294967295
      :                          @150
  2602: 33 07 16                 a0 = 0x16
  2605: 7b 17 88 00              u64 [sp + 0x88] = a0
  2609: 33 07 f0 01 01           a0 = 0x101f0
  2614: 7b 17 60                 u64 [sp + 0x60] = a0
  2617: 49 21 80 00 01 10 00 ff  u64 [sp + 128] = 0xffffffffff001001
  2625: 33 07 30 02 01           a0 = 0x10230
  2630: 7b 17 58                 u64 [sp + 0x58] = a0
  2633: 33 07 28 00 01           a0 = 0x10028
  2638: 7b 17 50                 u64 [sp + 0x50] = a0
  2641: 33 07 80 02 01           a0 = 0x10280
  2646: 7b 17 48                 u64 [sp + 0x48] = a0
  2649: 33 05 40 00 03           s0 = 0x30040
  2654: 28 27                    jump @153
      :                          @151
  2656: 95 16 10 31              s1 = sp + 0x3110
  2660: 82 6b                    a4 = u64 [s1]
  2662: 95 bb 01                 a4 = a4 + 0x1
  2665: 7b 6b                    u64 [s1] = a4
  2667: 95 17 08 21              a0 = sp + 0x2108
  2671: 33 0a 06                 a3 = 0x6
  2674: 33 08                    a1 = 0
  2676: 82 19 68                 a2 = u64 [sp + 0x68]
  2679: 33 0c                    a5 = 0
  2681: 0a 12                    ecalli 18 // 'fetch'
  2683: 01                       fallthrough
      :                          @152
  2684: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2688: 51 17 ff 59 02           jump @176 if a0 == 4294967295
      :                          @153
  2693: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2697: 82 17 88 00              a0 = u64 [sp + 0x88]
  2701: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2705: 95 18 78 33              a1 = sp + 0x3378
  2709: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2713: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2717: 82 17 60                 a0 = u64 [sp + 0x60]
  2720: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2724: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2729: 49 26 68 01              u64 [s1 + 360] = 0
  2733: 95 18 a0 31              a1 = sp + 0x31a0
  2737: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2741: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2746: 95 17 38 31              a0 = sp + 0x3138
  2750: 95 18 58 32              a1 = sp + 0x3258
  2754: 50 10 4c 6e 33           ra = 76, jump @766
      :                          @154 [@dyn 38]
  2759: 95 17 10 31              a0 = sp + 0x3110
  2763: 82 76 30                 s1 = u64 [a0 + 0x30]
  2766: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2769: 82 77 28                 a0 = u64 [a0 + 0x28]
  2772: 7b 17 78                 u64 [sp + 0x78] = a0
  2775: 33 07 04                 a0 = 0x4
  2778: 33 08                    a1 = 0
  2780: 33 09                    a2 = 0
  2782: 64 6a                    a3 = s1
  2784: 33 00 4e                 ra = 0x4e
  2787: 0a 64                    ecalli 100 // 'log'
  2789: 01                       fallthrough
      :                          @155 [@dyn 39]
  2790: 64 6c                    a5 = s1
  2792: 82 16 78                 s1 = u64 [sp + 0x78]
  2795: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  2801: 33 02 00 f0 ff 00        t0 = 0xfff000
  2807: 33 03 ff ef ff 00        t1 = 0xffefff
  2813: 82 18 80 00              a1 = u64 [sp + 0x80]
  2817: ac 87 1d                 jump @160 if a0 <u a1
      :                          @156
  2820: c8 25 08                 a1 = s0 + t0
  2823: 82 87                    a0 = u64 [a1]
  2825: c8 35 09                 a2 = s0 + t1
  2828: c9 79 09                 a2 = a2 - a0
  2831: ab c9 0f                 jump @160 if a2 != a5
      :                          @157
  2834: c9 67 09                 a2 = a0 - s1
  2837: 01                       fallthrough
      :                          @158
  2838: 82 8a                    a3 = u64 [a1]
  2840: ab 7a ec                 jump @156 if a3 != a0
      :                          @159
  2843: 7b 89                    u64 [a1] = a2
  2845: 01                       fallthrough
      :                          @160
  2846: 95 18 b8 20              a1 = sp + 0x20b8
  2850: 80 87 50                 a0 = u32 [a1 + 0x50]
  2853: 80 88 54                 a1 = u32 [a1 + 0x54]
  2856: 95 19 10 31              a2 = sp + 0x3110
  2860: 7b 97 10                 u64 [a2 + 0x10] = a0
  2863: 7b 98 18                 u64 [a2 + 0x18] = a1
  2866: 33 09 01                 a2 = 0x1
  2869: 7b 13 78                 u64 [sp + 0x78] = t1
  2872: 0a 17                    ecalli 23 // 'zero'
  2874: 95 19 10 31              a2 = sp + 0x3110
  2878: 7b 97 48 02              u64 [a2 + 0x248] = a0
  2882: 95 17 20 31              a0 = sp + 0x3120
  2886: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2890: 82 17 88 00              a0 = u64 [sp + 0x88]
  2894: 7b 97 50 01              u64 [a2 + 0x150] = a0
  2898: 95 18 28 31              a1 = sp + 0x3128
  2902: 7b 98 58 01              u64 [a2 + 0x158] = a1
  2906: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2910: 95 18 58 33              a1 = sp + 0x3358
  2914: 7b 98 68 01              u64 [a2 + 0x168] = a1
  2918: 7b 97 70 01              u64 [a2 + 0x170] = a0
  2922: 82 17 58                 a0 = u64 [sp + 0x58]
  2925: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2929: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  2934: 49 29 b0 00              u64 [a2 + 176] = 0
  2938: 95 17 58 32              a0 = sp + 0x3258
  2942: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2946: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  2951: 95 17 38 31              a0 = sp + 0x3138
  2955: 95 18 a0 31              a1 = sp + 0x31a0
  2959: 50 10 50 a1 32           ra = 80, jump @766
      :                          @161 [@dyn 40]
  2964: 95 17 10 31              a0 = sp + 0x3110
  2968: 82 76 30                 s1 = u64 [a0 + 0x30]
  2971: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2974: 82 77 28                 a0 = u64 [a0 + 0x28]
  2977: 7b 17 70                 u64 [sp + 0x70] = a0
  2980: 33 07 04                 a0 = 0x4
  2983: 33 08                    a1 = 0
  2985: 33 09                    a2 = 0
  2987: 64 6a                    a3 = s1
  2989: 33 00 52                 ra = 0x52
  2992: 0a 64                    ecalli 100 // 'log'
  2994: 01                       fallthrough
      :                          @162 [@dyn 41]
  2995: 64 63                    t1 = s1
  2997: 82 16 70                 s1 = u64 [sp + 0x70]
  3000: 82 1c 78                 a5 = u64 [sp + 0x78]
  3003: 33 02 00 f0 ff 00        t0 = 0xfff000
  3009: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  3015: 82 18 80 00              a1 = u64 [sp + 0x80]
  3019: ac 87 1d                 jump @167 if a0 <u a1
      :                          @163
  3022: c8 25 08                 a1 = s0 + t0
  3025: 82 87                    a0 = u64 [a1]
  3027: c8 c5 09                 a2 = s0 + a5
  3030: c9 79 09                 a2 = a2 - a0
  3033: ab 39 0f                 jump @167 if a2 != t1
      :                          @164
  3036: c9 67 09                 a2 = a0 - s1
  3039: 01                       fallthrough
      :                          @165
  3040: 82 8a                    a3 = u64 [a1]
  3042: ab 7a ec                 jump @163 if a3 != a0
      :                          @166
  3045: 7b 89                    u64 [a1] = a2
  3047: 01                       fallthrough
      :                          @167
  3048: 95 1b 10 31              a4 = sp + 0x3110
  3052: 82 b9 18                 a2 = u64 [a4 + 0x18]
  3055: 82 b7 10                 a0 = u64 [a4 + 0x10]
  3058: 82 b8 08                 a1 = u64 [a4 + 0x8]
  3061: 95 1a 08 21              a3 = sp + 0x2108
  3065: 7b ba 78 02              u64 [a4 + 0x278] = a3
  3069: 97 99 0c                 a2 = a2 << 0xc
  3072: 7b b9 88 02              u64 [a4 + 0x288] = a2
  3076: 33 0a 00 10              a3 = 0x1000
  3080: 0a 16                    ecalli 22 // 'poke'
  3082: 95 19 10 31              a2 = sp + 0x3110
  3086: 7b 97 08 01              u64 [a2 + 0x108] = a0
  3090: 95 17 20 31              a0 = sp + 0x3120
  3094: 7b 97 48 01              u64 [a2 + 0x148] = a0
  3098: 82 17 88 00              a0 = u64 [sp + 0x88]
  3102: 7b 97 50 01              u64 [a2 + 0x150] = a0
  3106: 95 18 88 33              a1 = sp + 0x3388
  3110: 7b 98 58 01              u64 [a2 + 0x158] = a1
  3114: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3118: 95 18 98 33              a1 = sp + 0x3398
  3122: 7b 98 68 01              u64 [a2 + 0x168] = a1
  3126: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3130: 82 18 50                 a1 = u64 [sp + 0x50]
  3133: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3137: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3141: 95 18 18 32              a1 = sp + 0x3218
  3145: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3149: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3153: 82 17 48                 a0 = u64 [sp + 0x48]
  3156: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3160: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3165: 49 29 b0 00              u64 [a2 + 176] = 0
  3169: 95 17 58 32              a0 = sp + 0x3258
  3173: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3177: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3182: 95 17 38 31              a0 = sp + 0x3138
  3186: 95 18 a0 31              a1 = sp + 0x31a0
  3190: 50 10 54 ba 31           ra = 84, jump @766
      :                          @168 [@dyn 42]
  3195: 95 17 10 31              a0 = sp + 0x3110
  3199: 82 76 30                 s1 = u64 [a0 + 0x30]
  3202: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3205: 82 77 28                 a0 = u64 [a0 + 0x28]
  3208: 7b 17 70                 u64 [sp + 0x70] = a0
  3211: 33 07 04                 a0 = 0x4
  3214: 33 08                    a1 = 0
  3216: 33 09                    a2 = 0
  3218: 64 6a                    a3 = s1
  3220: 33 00 56                 ra = 0x56
  3223: 0a 64                    ecalli 100 // 'log'
  3225: 01                       fallthrough
      :                          @169 [@dyn 43]
  3226: 64 63                    t1 = s1
  3228: 82 16 70                 s1 = u64 [sp + 0x70]
  3231: 82 1c 78                 a5 = u64 [sp + 0x78]
  3234: 33 02 00 f0 ff 00        t0 = 0xfff000
  3240: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  3246: 82 18 80 00              a1 = u64 [sp + 0x80]
  3250: ac 87 ae fd              jump @151 if a0 <u a1
      :                          @170
  3254: c8 25 08                 a1 = s0 + t0
  3257: 82 87                    a0 = u64 [a1]
  3259: c8 c5 09                 a2 = s0 + a5
  3262: c9 79 09                 a2 = a2 - a0
  3265: ab 39 9f fd              jump @151 if a2 != t1
      :                          @171
  3269: c9 67 09                 a2 = a0 - s1
  3272: 01                       fallthrough
      :                          @172
  3273: 82 8a                    a3 = u64 [a1]
  3275: ab 7a eb                 jump @170 if a3 != a0
      :                          @173
  3278: 7b 89                    u64 [a1] = a2
  3280: 33 0b                    a4 = 0
  3282: 01                       fallthrough
      :                          @174
  3283: ab 7a e3                 jump @170 if a3 != a0
      :                          @175
  3286: 28 8a fd                 jump @151
      :                          @176
  3289: 82 69 18                 a2 = u64 [s1 + 0x18]
  3292: 95 9a 01                 a3 = a2 + 0x1
  3295: 33 08 f0 ef 0f           a1 = 0xfeff0
  3300: 82 67 10                 a0 = u64 [s1 + 0x10]
  3303: db 9a 08                 a1 = a3 if a2 != 0
  3306: 7b 68 18                 u64 [s1 + 0x18] = a1
  3309: 33 09 01                 a2 = 0x1
  3312: 0a 17                    ecalli 23 // 'zero'
  3314: 7b 67 20                 u64 [s1 + 0x20] = a0
  3317: 95 17 20 31              a0 = sp + 0x3120
  3321: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3325: 33 07 16                 a0 = 0x16
  3328: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3332: 95 18 28 31              a1 = sp + 0x3128
  3336: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3340: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3344: 95 18 30 31              a1 = sp + 0x3130
  3348: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3352: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3356: 33 07 e8 02 01           a0 = 0x102e8
  3361: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3365: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3370: 49 26 b0 00              u64 [s1 + 176] = 0
  3374: 95 18 58 32              a1 = sp + 0x3258
  3378: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  3382: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3387: 95 17 38 31              a0 = sp + 0x3138
  3391: 95 18 a0 31              a1 = sp + 0x31a0
  3395: 50 10 58 ed 30           ra = 88, jump @766
      :                          @177 [@dyn 44]
  3400: 82 65 30                 s0 = u64 [s1 + 0x30]
  3403: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3406: 82 66 28                 s1 = u64 [s1 + 0x28]
  3409: 33 07 04                 a0 = 0x4
  3412: 33 08                    a1 = 0
  3414: 33 09                    a2 = 0
  3416: 64 5a                    a3 = s0
  3418: 33 00 5a                 ra = 0x5a
  3421: 0a 64                    ecalli 100 // 'log'
  3423: 01                       fallthrough
      :                          @178 [@dyn 45]
  3424: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  3430: 49 21 88 00 01 10 00 ff  u64 [sp + 136] = 0xffffffffff001001
  3438: 53 47 01 10 00 ff 34     jump @184 if a0 <u 4278194177
      :                          @179
  3445: 64 52                    t0 = s0
  3447: 64 65                    s0 = s1
  3449: 33 07 40 00 03           a0 = 0x30040
  3454: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  3460: 33 09 ff ef ff 00        a2 = 0xffefff
  3466: 01                       fallthrough
      :                          @180
  3467: 82 8a                    a3 = u64 [a1]
  3469: c8 97 0b                 a4 = a0 + a2
  3472: c9 ab 0b                 a4 = a4 - a3
  3475: ab 2b 0f                 jump @184 if a4 != t0
      :                          @181
  3478: c9 5a 0b                 a4 = a3 - s0
  3481: 01                       fallthrough
      :                          @182
  3482: 82 8c                    a5 = u64 [a1]
  3484: ab ac ef                 jump @180 if a5 != a3
      :                          @183
  3487: 7b 8b                    u64 [a1] = a4
  3489: 01                       fallthrough
      :                          @184
  3490: 95 16 10 31              s1 = sp + 0x3110
  3494: 49 16 58                 u64 [s1 + 88] = 0
  3497: 49 16 50                 u64 [s1 + 80] = 0
  3500: 49 16 48                 u64 [s1 + 72] = 0
  3503: 49 16 40                 u64 [s1 + 64] = 0
  3506: 49 16 38                 u64 [s1 + 56] = 0
  3509: 49 16 70                 u64 [s1 + 112] = 0
  3512: 49 16 78                 u64 [s1 + 120] = 0
  3515: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3525: 7b 67 28                 u64 [s1 + 0x28] = a0
  3528: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3538: 7b 67 30                 u64 [s1 + 0x30] = a0
  3541: 82 67                    a0 = u64 [s1]
  3543: 49 26 80 00              u64 [s1 + 128] = 0
  3547: 49 26 88 00              u64 [s1 + 136] = 0
  3551: 49 16 68                 u64 [s1 + 104] = 0
  3554: 7b 67 60                 u64 [s1 + 0x60] = a0
  3557: 95 17 38 31              a0 = sp + 0x3138
  3561: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3565: 33 07 1a                 a0 = 0x1a
  3568: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3572: 33 07 38 03 01           a0 = 0x10338
  3577: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3581: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3586: 49 26 68 01              u64 [s1 + 360] = 0
  3590: 95 17 18 32              a0 = sp + 0x3218
  3594: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3598: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3603: 95 17 a0 31              a0 = sp + 0x31a0
  3607: 95 18 58 32              a1 = sp + 0x3258
  3611: 50 10 5c 15 30           ra = 92, jump @766
      :                          @185 [@dyn 46]
  3616: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3620: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3624: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3628: 33 07 04                 a0 = 0x4
  3631: 33 08                    a1 = 0
  3633: 33 09                    a2 = 0
  3635: 64 5a                    a3 = s0
  3637: 33 00 5e                 ra = 0x5e
  3640: 0a 64                    ecalli 100 // 'log'
  3642: 01                       fallthrough
      :                          @186 [@dyn 47]
  3643: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  3649: 82 18 88 00              a1 = u64 [sp + 0x88]
  3653: ac 87 30                 jump @192 if a0 <u a1
      :                          @187
  3656: 64 52                    t0 = s0
  3658: 64 65                    s0 = s1
  3660: 33 07 40 00 03           a0 = 0x30040
  3665: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  3671: 33 09 ff ef ff 00        a2 = 0xffefff
  3677: 01                       fallthrough
      :                          @188
  3678: 82 8a                    a3 = u64 [a1]
  3680: c8 97 0b                 a4 = a0 + a2
  3683: c9 ab 0b                 a4 = a4 - a3
  3686: ab 2b 0f                 jump @192 if a4 != t0
      :                          @189
  3689: c9 5a 0b                 a4 = a3 - s0
  3692: 01                       fallthrough
      :                          @190
  3693: 82 8c                    a5 = u64 [a1]
  3695: ab ac ef                 jump @188 if a5 != a3
      :                          @191
  3698: 7b 8b                    u64 [a1] = a4
  3700: 01                       fallthrough
      :                          @192
  3701: 95 18 10 31              a1 = sp + 0x3110
  3705: 82 80 28                 ra = u64 [a1 + 0x28]
  3708: 82 87 30                 a0 = u64 [a1 + 0x30]
  3711: 7b 17 88 00              u64 [sp + 0x88] = a0
  3715: 82 87 38                 a0 = u64 [a1 + 0x38]
  3718: 7b 17 80 00              u64 [sp + 0x80] = a0
  3722: 82 8a 40                 a3 = u64 [a1 + 0x40]
  3725: 82 8b 48                 a4 = u64 [a1 + 0x48]
  3728: 82 8c 50                 a5 = u64 [a1 + 0x50]
  3731: 82 86 58                 s1 = u64 [a1 + 0x58]
  3734: 82 85 60                 s0 = u64 [a1 + 0x60]
  3737: 82 82 68                 t0 = u64 [a1 + 0x68]
  3740: 82 83 70                 t1 = u64 [a1 + 0x70]
  3743: 82 84 78                 t2 = u64 [a1 + 0x78]
  3746: 49 28 90 00 00 00 01     u64 [a1 + 144] = 0x10000
  3753: 82 87 80 00              a0 = u64 [a1 + 0x80]
  3757: 7b 80 98 00              u64 [a1 + 0x98] = ra
  3761: 82 80 88 00              ra = u64 [a1 + 0x88]
  3765: 82 19 88 00              a2 = u64 [sp + 0x88]
  3769: 7b 89 a0 00              u64 [a1 + 0xa0] = a2
  3773: 82 19 80 00              a2 = u64 [sp + 0x80]
  3777: 7b 89 a8 00              u64 [a1 + 0xa8] = a2
  3781: 7b 8a b0 00              u64 [a1 + 0xb0] = a3
  3785: 7b 8b b8 00              u64 [a1 + 0xb8] = a4
  3789: 7b 8c c0 00              u64 [a1 + 0xc0] = a5
  3793: 7b 86 c8 00              u64 [a1 + 0xc8] = s1
  3797: 95 16 10 31              s1 = sp + 0x3110
  3801: 7b 65 d0 00              u64 [s1 + 0xd0] = s0
  3805: 7b 62 d8 00              u64 [s1 + 0xd8] = t0
  3809: 7b 63 e0 00              u64 [s1 + 0xe0] = t1
  3813: 7b 64 e8 00              u64 [s1 + 0xe8] = t2
  3817: 7b 67 f0 00              u64 [s1 + 0xf0] = a0
  3821: 7b 60 f8 00              u64 [s1 + 0xf8] = ra
  3825: 33 07 16                 a0 = 0x16
  3828: 7b 17 80 00              u64 [sp + 0x80] = a0
  3832: 33 07 68 03 01           a0 = 0x10368
  3837: 7b 17 78                 u64 [sp + 0x78] = a0
  3840: 49 11 70 01 10 00 ff     u64 [sp + 112] = 0xffffffffff001001
  3847: 33 08 40 00 03           a1 = 0x30040
  3852: 7b 18 68                 u64 [sp + 0x68] = a1
  3855: 95 88 00 f0 ff 00        a1 = a1 + 0xfff000
  3861: 7b 18 60                 u64 [sp + 0x60] = a1
  3864: 49 11 58 ff ef ff 00     u64 [sp + 88] = 0xffefff
  3871: 01                       fallthrough
      :                          @193
  3872: 95 17 b8 20              a0 = sp + 0x20b8
  3876: 82 77 48                 a0 = u64 [a0 + 0x48]
  3879: 95 18 a0 31              a1 = sp + 0x31a0
  3883: 0a 19                    ecalli 25 // 'invoke'
  3885: 7b 18 88 00              u64 [sp + 0x88] = a1
  3889: 7b 67 00 01              u64 [s1 + 0x100] = a0
  3893: 95 17 00 21              a0 = sp + 0x2100
  3897: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3901: 82 17 80 00              a0 = u64 [sp + 0x80]
  3905: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3909: 95 18 10 32              a1 = sp + 0x3210
  3913: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3917: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3921: 95 18 f8 20              a1 = sp + 0x20f8
  3925: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3929: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3933: 82 17 78                 a0 = u64 [sp + 0x78]
  3936: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3940: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  3945: 49 26 28 01              u64 [s1 + 296] = 0
  3949: 95 17 58 32              a0 = sp + 0x3258
  3953: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3957: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  3962: 95 17 98 33              a0 = sp + 0x3398
  3966: 95 18 18 32              a1 = sp + 0x3218
  3970: 50 10 60 ae 2e           ra = 96, jump @766
      :                          @194 [@dyn 48]
  3975: 82 65 90 02              s0 = u64 [s1 + 0x290]
  3979: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  3983: 95 17 10 31              a0 = sp + 0x3110
  3987: 82 76 88 02              s1 = u64 [a0 + 0x288]
  3991: 33 07 04                 a0 = 0x4
  3994: 33 08                    a1 = 0
  3996: 33 09                    a2 = 0
  3998: 64 5a                    a3 = s0
  4000: 33 00 62                 ra = 0x62
  4003: 0a 64                    ecalli 100 // 'log'
  4005: 01                       fallthrough
      :                          @195 [@dyn 49]
  4006: 64 52                    t0 = s0
  4008: 64 65                    s0 = s1
  4010: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  4016: 82 18 70                 a1 = u64 [sp + 0x70]
  4019: 82 1b 68                 a4 = u64 [sp + 0x68]
  4022: 82 1c 60                 a5 = u64 [sp + 0x60]
  4025: 82 16 58                 s1 = u64 [sp + 0x58]
  4028: ac 87 1a                 jump @200 if a0 <u a1
      :                          @196
  4031: 82 c7                    a0 = u64 [a5]
  4033: c8 6b 08                 a1 = a4 + s1
  4036: c9 78 08                 a1 = a1 - a0
  4039: ab 28 0f                 jump @200 if a1 != t0
      :                          @197
  4042: c9 57 08                 a1 = a0 - s0
  4045: 01                       fallthrough
      :                          @198
  4046: 82 c9                    a2 = u64 [a5]
  4048: ab 79 ef                 jump @196 if a2 != a0
      :                          @199
  4051: 7b c8                    u64 [a5] = a1
  4053: 01                       fallthrough
      :                          @200
  4054: 95 16 10 31              s1 = sp + 0x3110
  4058: 82 67 00 01              a0 = u64 [s1 + 0x100]
  4062: 51 07 b1 00              jump @205 if a0 == 0
      :                          @201
  4066: 85 77 03                 a0 = a0 ^ 0x3
  4069: 82 18 88 00              a1 = u64 [sp + 0x88]
  4073: 85 88 64                 a1 = a1 ^ 0x64
  4076: d4 87 07                 a0 = a0 | a1
  4079: 52 07 31 ff              jump @193 if a0 != 0
      :                          @202
  4083: 95 17 38 31              a0 = sp + 0x3138
  4087: 33 09 68                 a2 = 0x68
  4090: 95 18 a8 31              a1 = sp + 0x31a8
  4094: 50 10 64 bd 30           ra = 100, jump @816
      :                          @203 [@dyn 50]
  4099: 82 67 60                 a0 = u64 [s1 + 0x60]
  4102: 7b 17 88 00              u64 [sp + 0x88] = a0
  4106: 82 67 68                 a0 = u64 [s1 + 0x68]
  4109: 7b 17 40                 u64 [sp + 0x40] = a0
  4112: 82 65 70                 s0 = u64 [s1 + 0x70]
  4115: 7b 15 38                 u64 [sp + 0x38] = s0
  4118: 82 67 78                 a0 = u64 [s1 + 0x78]
  4121: 7b 17 48                 u64 [sp + 0x48] = a0
  4124: 82 67 80 00              a0 = u64 [s1 + 0x80]
  4128: 7b 17 50                 u64 [sp + 0x50] = a0
  4131: 49 26 40 01              u64 [s1 + 320] = 0
  4135: 49 26 38 01              u64 [s1 + 312] = 0
  4139: 49 26 30 01              u64 [s1 + 304] = 0
  4143: 49 26 28 01              u64 [s1 + 296] = 0
  4147: 49 26 20 01              u64 [s1 + 288] = 0
  4151: 49 26 18 01              u64 [s1 + 280] = 0
  4155: 49 26 10 01              u64 [s1 + 272] = 0
  4159: 49 26 08 01              u64 [s1 + 264] = 0
  4163: 95 17 58 32              a0 = sp + 0x3258
  4167: 33 09 00 01              a2 = 0x100
  4171: 33 08                    a1 = 0
  4173: 50 10 66 20 31           ra = 102, jump @834
      :                          @204 [@dyn 51]
  4178: 95 17 b8 20              a0 = sp + 0x20b8
  4182: 82 77 48                 a0 = u64 [a0 + 0x48]
  4185: 95 18 18 32              a1 = sp + 0x3218
  4189: 82 19 40                 a2 = u64 [sp + 0x40]
  4192: 64 5a                    a3 = s0
  4194: 0a 15                    ecalli 21 // 'peek'
  4196: 95 17 b8 20              a0 = sp + 0x20b8
  4200: 82 77 48                 a0 = u64 [a0 + 0x48]
  4203: 95 18 58 32              a1 = sp + 0x3258
  4207: 82 19 48                 a2 = u64 [sp + 0x48]
  4210: 82 15 50                 s0 = u64 [sp + 0x50]
  4213: 64 5a                    a3 = s0
  4215: 0a 15                    ecalli 21 // 'peek'
  4217: 95 18 18 32              a1 = sp + 0x3218
  4221: 95 1a 58 32              a3 = sp + 0x3258
  4225: 82 17 88 00              a0 = u64 [sp + 0x88]
  4229: 82 19 38                 a2 = u64 [sp + 0x38]
  4232: 64 5b                    a4 = s0
  4234: 0a 64                    ecalli 100 // 'log'
  4236: 28 94 fe                 jump @193
      :                          @205
  4239: 0a                       ecalli 0 // 'gas'
  4240: 95 18 b8 20              a1 = sp + 0x20b8
  4244: 7b 87 40                 u64 [a1 + 0x40] = a0
  4247: 95 17 f8 20              a0 = sp + 0x20f8
  4251: 7b 67 88 02              u64 [s1 + 0x288] = a0
  4255: 33 07 16                 a0 = 0x16
  4258: 7b 67 90 02              u64 [s1 + 0x290] = a0
  4262: 33 07 90 01 01           a0 = 0x10190
  4267: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4271: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4276: 49 26 68 01              u64 [s1 + 360] = 0
  4280: 95 18 98 33              a1 = sp + 0x3398
  4284: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4288: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4293: 95 17 18 32              a0 = sp + 0x3218
  4297: 95 18 58 32              a1 = sp + 0x3258
  4301: 50 10 68 63 2d           ra = 104, jump @766
      :                          @206 [@dyn 52]
  4306: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4310: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4314: 82 66 08 01              s1 = u64 [s1 + 0x108]
  4318: 33 07 04                 a0 = 0x4
  4321: 33 08                    a1 = 0
  4323: 33 09                    a2 = 0
  4325: 64 5a                    a3 = s0
  4327: 33 00 6a                 ra = 0x6a
  4330: 0a 64                    ecalli 100 // 'log'
  4332: 01                       fallthrough
      :                          @207 [@dyn 53]
  4333: 95 68 00 10 00 ff        a1 = s1 + 0xffffffffff001000
  4339: 53 48 01 10 00 ff 34     jump @213 if a1 <u 4278194177
      :                          @208
  4346: 64 52                    t0 = s0
  4348: 64 65                    s0 = s1
  4350: 33 07 40 00 03           a0 = 0x30040
  4355: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  4361: 33 09 ff ef ff 00        a2 = 0xffefff
  4367: 01                       fallthrough
      :                          @209
  4368: 82 8a                    a3 = u64 [a1]
  4370: c8 97 0b                 a4 = a0 + a2
  4373: c9 ab 0b                 a4 = a4 - a3
  4376: ab 2b 0f                 jump @213 if a4 != t0
      :                          @210
  4379: c9 5a 0b                 a4 = a3 - s0
  4382: 01                       fallthrough
      :                          @211
  4383: 82 8c                    a5 = u64 [a1]
  4385: ab ac ef                 jump @209 if a5 != a3
      :                          @212
  4388: 7b 8b                    u64 [a1] = a4
  4390: 01                       fallthrough
      :                          @213
  4391: 95 17 b8 20              a0 = sp + 0x20b8
  4395: 82 77 48                 a0 = u64 [a0 + 0x48]
  4398: 95 18 10 31              a1 = sp + 0x3110
  4402: 82 89                    a2 = u64 [a1]
  4404: 48 28 50 02              u32 [a1 + 592] = 0
  4408: 7a 87 54 02              u32 [a1 + 0x254] = a0
  4412: 49 28 48 02              u64 [a1 + 584] = 0
  4416: 7b 19 58                 u64 [sp + 0x58] = a2
  4419: 51 19 ff 6e 03           jump @243 if a2 == 4294967295
      :                          @214
  4424: 33 08                    a1 = 0
  4426: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4436: 7b 19 50                 u64 [sp + 0x50] = a2
  4439: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4449: 7b 17 48                 u64 [sp + 0x48] = a0
  4452: 33 07 16                 a0 = 0x16
  4455: 7b 17 68                 u64 [sp + 0x68] = a0
  4458: 33 07 28 00 01           a0 = 0x10028
  4463: 7b 17 40                 u64 [sp + 0x40] = a0
  4466: 33 07 88 04 01           a0 = 0x10488
  4471: 7b 17 38                 u64 [sp + 0x38] = a0
  4474: 49 11 30 f0 ef 0f        u64 [sp + 48] = 0xfeff0
  4480: 33 07 02                 a0 = 0x2
  4483: 7b 17 28                 u64 [sp + 0x28] = a0
  4486: 33 07 12                 a0 = 0x12
  4489: 7b 17 20                 u64 [sp + 0x20] = a0
  4492: 33 07 08 05 01           a0 = 0x10508
  4497: 7b 17 18                 u64 [sp + 0x18] = a0
  4500: 33 07 0e                 a0 = 0xe
  4503: 7b 17 10                 u64 [sp + 0x10] = a0
  4506: 33 07 48 05 01           a0 = 0x10548
  4511: 7b 17 08                 u64 [sp + 0x8] = a0
  4514: 33 07 40 00 03           a0 = 0x30040
  4519: 7b 17 80 00              u64 [sp + 0x80] = a0
  4523: 49 21 88 00 01 10 00 ff  u64 [sp + 136] = 0xffffffffff001001
  4531: 28 0f                    jump @216
      :                          @215
  4533: 82 19 70                 a2 = u64 [sp + 0x70]
  4536: 95 98 01                 a1 = a2 + 0x1
  4539: 82 17 58                 a0 = u64 [sp + 0x58]
  4542: aa 79 f3 02              jump @243 if a2 == a0
      :                          @216
  4546: 95 1b 10 31              a4 = sp + 0x3110
  4550: 7b b8 58 02              u64 [a4 + 0x258] = a1
  4554: 7b 18 70                 u64 [sp + 0x70] = a1
  4557: 97 89 0c                 a2 = a1 << 0xc
  4560: 95 17 b8 20              a0 = sp + 0x20b8
  4564: 82 77 48                 a0 = u64 [a0 + 0x48]
  4567: 82 b8 08                 a1 = u64 [a4 + 0x8]
  4570: 82 1a 50                 a3 = u64 [sp + 0x50]
  4573: c8 a9 09                 a2 = a2 + a3
  4576: 82 1a 48                 a3 = u64 [sp + 0x48]
  4579: d2 a9 09                 a2 = a2 & a3
  4582: 7b b9 60 02              u64 [a4 + 0x260] = a2
  4586: 33 0a 00 10              a3 = 0x1000
  4590: 0a 15                    ecalli 21 // 'peek'
  4592: 95 19 10 31              a2 = sp + 0x3110
  4596: 7b 97 68 02              u64 [a2 + 0x268] = a0
  4600: 95 17 00 21              a0 = sp + 0x2100
  4604: 7b 97 48 01              u64 [a2 + 0x148] = a0
  4608: 82 17 68                 a0 = u64 [sp + 0x68]
  4611: 7b 97 50 01              u64 [a2 + 0x150] = a0
  4615: 95 18 18 31              a1 = sp + 0x3118
  4619: 7b 98 58 01              u64 [a2 + 0x158] = a1
  4623: 7b 97 60 01              u64 [a2 + 0x160] = a0
  4627: 95 18 70 33              a1 = sp + 0x3370
  4631: 7b 98 68 01              u64 [a2 + 0x168] = a1
  4635: 7b 97 70 01              u64 [a2 + 0x170] = a0
  4639: 82 18 40                 a1 = u64 [sp + 0x40]
  4642: 7b 98 78 01              u64 [a2 + 0x178] = a1
  4646: 7b 97 80 01              u64 [a2 + 0x180] = a0
  4650: 95 18 78 33              a1 = sp + 0x3378
  4654: 7b 98 88 01              u64 [a2 + 0x188] = a1
  4658: 7b 97 90 01              u64 [a2 + 0x190] = a0
  4662: 82 17 38                 a0 = u64 [sp + 0x38]
  4665: 7b 97 08 01              u64 [a2 + 0x108] = a0
  4669: 49 29 10 01 05           u64 [a2 + 272] = 0x5
  4674: 49 29 28 01              u64 [a2 + 296] = 0
  4678: 95 18 58 32              a1 = sp + 0x3258
  4682: 7b 98 18 01              u64 [a2 + 0x118] = a1
  4686: 49 29 20 01 05           u64 [a2 + 288] = 0x5
  4691: 95 16 10 31              s1 = sp + 0x3110
  4695: 95 17 98 33              a0 = sp + 0x3398
  4699: 95 18 18 32              a1 = sp + 0x3218
  4703: 50 10 6c d1 2b           ra = 108, jump @766
      :                          @217 [@dyn 54]
  4708: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4712: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4716: 82 66 88 02              s1 = u64 [s1 + 0x288]
  4720: 33 07 03                 a0 = 0x3
  4723: 33 08                    a1 = 0
  4725: 33 09                    a2 = 0
  4727: 64 5a                    a3 = s0
  4729: 33 00 6e                 ra = 0x6e
  4732: 0a 64                    ecalli 100 // 'log'
  4734: 01                       fallthrough
      :                          @218 [@dyn 55]
  4735: 64 6c                    a5 = s1
  4737: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  4743: 33 02 00 f0 ff 00        t0 = 0xfff000
  4749: 33 03 ff ef ff 00        t1 = 0xffefff
  4755: 82 18 88 00              a1 = u64 [sp + 0x88]
  4759: 82 16 80 00              s1 = u64 [sp + 0x80]
  4763: ac 87 1f                 jump @223 if a0 <u a1
      :                          @219
  4766: c8 26 08                 a1 = s1 + t0
  4769: 82 87                    a0 = u64 [a1]
  4771: c8 36 09                 a2 = s1 + t1
  4774: c9 79 09                 a2 = a2 - a0
  4777: ab 59 11                 jump @223 if a2 != s0
      :                          @220
  4780: c9 c7 09                 a2 = a0 - a5
  4783: 01                       fallthrough
      :                          @221
  4784: 82 8a                    a3 = u64 [a1]
  4786: ab 7a ec                 jump @219 if a3 != a0
      :                          @222
  4789: 7b 89                    u64 [a1] = a2
  4791: 33 0b                    a4 = 0
  4793: 01                       fallthrough
      :                          @223
  4794: 95 1a 10 31              a3 = sp + 0x3110
  4798: 81 a7 54 02              a0 = i32 [a3 + 0x254]
  4802: 81 a8 58 02              a1 = i32 [a3 + 0x258]
  4806: 95 19 b8 20              a2 = sp + 0x20b8
  4810: 7a 97 50                 u32 [a2 + 0x50] = a0
  4813: 82 17 30                 a0 = u64 [sp + 0x30]
  4816: be 87 07                 i32 a0 = a0 + a1
  4819: 7a a7 74 02              u32 [a3 + 0x274] = a0
  4823: 7a 97 54                 u32 [a2 + 0x54] = a0
  4826: 95 17 08 21              a0 = sp + 0x2108
  4830: 7b a7 78 02              u64 [a3 + 0x278] = a0
  4834: 49 2a 80 02 08           u64 [a3 + 640] = 0x8
  4839: 95 17 88 33              a0 = sp + 0x3388
  4843: 7b a7 48 01              u64 [a3 + 0x148] = a0
  4847: 82 17 28                 a0 = u64 [sp + 0x28]
  4850: 7b a7 50 01              u64 [a3 + 0x150] = a0
  4854: 95 17 64 33              a0 = sp + 0x3364
  4858: 7b a7 58 01              u64 [a3 + 0x158] = a0
  4862: 82 17 20                 a0 = u64 [sp + 0x20]
  4865: 7b a7 60 01              u64 [a3 + 0x160] = a0
  4869: 95 18 84 33              a1 = sp + 0x3384
  4873: 7b a8 68 01              u64 [a3 + 0x168] = a1
  4877: 7b a7 70 01              u64 [a3 + 0x170] = a0
  4881: 82 17 18                 a0 = u64 [sp + 0x18]
  4884: 7b a7 08 01              u64 [a3 + 0x108] = a0
  4888: 49 2a 10 01 03           u64 [a3 + 272] = 0x3
  4893: 49 2a 28 01              u64 [a3 + 296] = 0
  4897: 95 17 58 32              a0 = sp + 0x3258
  4901: 7b a7 18 01              u64 [a3 + 0x118] = a0
  4905: 49 2a 20 01 03           u64 [a3 + 288] = 0x3
  4910: 95 16 10 31              s1 = sp + 0x3110
  4914: 95 17 98 33              a0 = sp + 0x3398
  4918: 95 18 18 32              a1 = sp + 0x3218
  4922: 7b 13 78                 u64 [sp + 0x78] = t1
  4925: 50 10 70 f3 2a           ra = 112, jump @766
      :                          @224 [@dyn 56]
  4930: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4934: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4938: 82 67 88 02              a0 = u64 [s1 + 0x288]
  4942: 7b 17 60                 u64 [sp + 0x60] = a0
  4945: 33 07 04                 a0 = 0x4
  4948: 33 08                    a1 = 0
  4950: 33 09                    a2 = 0
  4952: 64 5a                    a3 = s0
  4954: 33 00 72                 ra = 0x72
  4957: 0a 64                    ecalli 100 // 'log'
  4959: 01                       fallthrough
      :                          @225 [@dyn 57]
  4960: 82 1c 80 00              a5 = u64 [sp + 0x80]
  4964: 64 56                    s1 = s0
  4966: 82 15 60                 s0 = u64 [sp + 0x60]
  4969: 82 13 78                 t1 = u64 [sp + 0x78]
  4972: 33 02 00 f0 ff 00        t0 = 0xfff000
  4978: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  4984: 82 18 88 00              a1 = u64 [sp + 0x88]
  4988: ac 87 1d                 jump @230 if a0 <u a1
      :                          @226
  4991: c8 2c 08                 a1 = a5 + t0
  4994: 82 87                    a0 = u64 [a1]
  4996: c8 3c 09                 a2 = a5 + t1
  4999: c9 79 09                 a2 = a2 - a0
  5002: ab 69 0f                 jump @230 if a2 != s1
      :                          @227
  5005: c9 57 09                 a2 = a0 - s0
  5008: 01                       fallthrough
      :                          @228
  5009: 82 8a                    a3 = u64 [a1]
  5011: ab 7a ec                 jump @226 if a3 != a0
      :                          @229
  5014: 7b 89                    u64 [a1] = a2
  5016: 01                       fallthrough
      :                          @230
  5017: 95 19 10 31              a2 = sp + 0x3110
  5021: 82 97 58 02              a0 = u64 [a2 + 0x258]
  5025: 82 98                    a1 = u64 [a2]
  5027: ab 87 19                 jump @232 if a0 != a1
      :                          @231
  5030: 82 17 70                 a0 = u64 [sp + 0x70]
  5033: 7a 97 48 02              u32 [a2 + 0x248] = a0
  5037: 95 18 5c 33              a1 = sp + 0x335c
  5041: 95 15 b8 20              s0 = sp + 0x20b8
  5045: 81 57 58                 a0 = i32 [s0 + 0x58]
  5048: 7a 87                    u32 [a1] = a0
  5050: 28 16                    jump @234
      :                          @232
  5052: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  5055: 95 18 60 33              a1 = sp + 0x3360
  5059: 95 15 b8 20              s0 = sp + 0x20b8
  5063: ab 97 09                 jump @234 if a0 != a2
      :                          @233
  5066: 81 57 58                 a0 = i32 [s0 + 0x58]
  5069: 7a 87                    u32 [a1] = a0
  5071: 01                       fallthrough
      :                          @234
  5072: 33 08 08 10              a1 = 0x1008
  5076: 95 17 08 21              a0 = sp + 0x2108
  5080: 0a 13                    ecalli 19 // 'export'
  5082: 95 18 10 31              a1 = sp + 0x3110
  5086: 7b 87 78 02              u64 [a1 + 0x278] = a0
  5090: 0a                       ecalli 0 // 'gas'
  5091: 7b 57 40                 u64 [s0 + 0x40] = a0
  5094: 95 18 68 33              a1 = sp + 0x3368
  5098: 95 19 10 31              a2 = sp + 0x3110
  5102: 7b 98 48 01              u64 [a2 + 0x148] = a1
  5106: 82 17 68                 a0 = u64 [sp + 0x68]
  5109: 7b 97 50 01              u64 [a2 + 0x150] = a0
  5113: 7b 98 58 01              u64 [a2 + 0x158] = a1
  5117: 7b 97 60 01              u64 [a2 + 0x160] = a0
  5121: 95 18 88 33              a1 = sp + 0x3388
  5125: 7b 98 68 01              u64 [a2 + 0x168] = a1
  5129: 7b 97 70 01              u64 [a2 + 0x170] = a0
  5133: 95 18 f8 20              a1 = sp + 0x20f8
  5137: 7b 98 78 01              u64 [a2 + 0x178] = a1
  5141: 7b 97 80 01              u64 [a2 + 0x180] = a0
  5145: 95 17 58 33              a0 = sp + 0x3358
  5149: 7b 97 88 01              u64 [a2 + 0x188] = a0
  5153: 82 17 10                 a0 = u64 [sp + 0x10]
  5156: 7b 97 90 01              u64 [a2 + 0x190] = a0
  5160: 82 17 08                 a0 = u64 [sp + 0x8]
  5163: 7b 97 08 01              u64 [a2 + 0x108] = a0
  5167: 49 29 10 01 05           u64 [a2 + 272] = 0x5
  5172: 49 29 28 01              u64 [a2 + 296] = 0
  5176: 95 18 58 32              a1 = sp + 0x3258
  5180: 7b 98 18 01              u64 [a2 + 0x118] = a1
  5184: 49 29 20 01 05           u64 [a2 + 288] = 0x5
  5189: 95 15 10 31              s0 = sp + 0x3110
  5193: 95 17 98 33              a0 = sp + 0x3398
  5197: 95 18 18 32              a1 = sp + 0x3218
  5201: 50 10 74 df 29           ra = 116, jump @766
      :                          @235 [@dyn 58]
  5206: 82 56 90 02              s1 = u64 [s0 + 0x290]
  5210: 82 5b 98 02              a4 = u64 [s0 + 0x298]
  5214: 82 55 88 02              s0 = u64 [s0 + 0x288]
  5218: 33 07 04                 a0 = 0x4
  5221: 33 08                    a1 = 0
  5223: 33 09                    a2 = 0
  5225: 64 6a                    a3 = s1
  5227: 33 00 76                 ra = 0x76
  5230: 0a 64                    ecalli 100 // 'log'
  5232: 01                       fallthrough
      :                          @236 [@dyn 59]
  5233: 64 63                    t1 = s1
  5235: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  5241: 82 18 88 00              a1 = u64 [sp + 0x88]
  5245: 33 02 00 f0 ff 00        t0 = 0xfff000
  5251: 82 1c 78                 a5 = u64 [sp + 0x78]
  5254: 82 16 80 00              s1 = u64 [sp + 0x80]
  5258: ac 87 2b fd              jump @215 if a0 <u a1
      :                          @237
  5262: c8 26 08                 a1 = s1 + t0
  5265: 82 87                    a0 = u64 [a1]
  5267: c8 c6 09                 a2 = s1 + a5
  5270: c9 79 09                 a2 = a2 - a0
  5273: ab 39 1c fd              jump @215 if a2 != t1
      :                          @238
  5277: c9 57 09                 a2 = a0 - s0
  5280: 01                       fallthrough
      :                          @239
  5281: 82 8a                    a3 = u64 [a1]
  5283: ab 7a eb                 jump @237 if a3 != a0
      :                          @240
  5286: 7b 89                    u64 [a1] = a2
  5288: 33 0b                    a4 = 0
  5290: 01                       fallthrough
      :                          @241
  5291: ab 7a e3                 jump @237 if a3 != a0
      :                          @242
  5294: 28 07 fd                 jump @215
      :                          @243
  5297: 95 17 5c 33              a0 = sp + 0x335c
  5301: 95 18 60 33              a1 = sp + 0x3360
  5305: 95 19 58 33              a2 = sp + 0x3358
  5309: 95 16 10 31              s1 = sp + 0x3110
  5313: 7b 69 48 01              u64 [s1 + 0x148] = a2
  5317: 33 09 0e                 a2 = 0xe
  5320: 7b 69 50 01              u64 [s1 + 0x150] = a2
  5324: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5328: 7b 69 60 01              u64 [s1 + 0x160] = a2
  5332: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5336: 7b 69 70 01              u64 [s1 + 0x170] = a2
  5340: 33 07 a8 03 01           a0 = 0x103a8
  5345: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5349: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5354: 49 26 28 01              u64 [s1 + 296] = 0
  5358: 95 18 58 32              a1 = sp + 0x3258
  5362: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5366: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5371: 95 17 98 33              a0 = sp + 0x3398
  5375: 95 18 18 32              a1 = sp + 0x3218
  5379: 50 10 78 2d 29           ra = 120, jump @766
      :                          @244 [@dyn 60]
  5384: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5388: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5392: 82 66 88 02              s1 = u64 [s1 + 0x288]
  5396: 33 07 03                 a0 = 0x3
  5399: 33 08                    a1 = 0
  5401: 33 09                    a2 = 0
  5403: 64 5a                    a3 = s0
  5405: 33 00 7a                 ra = 0x7a
  5408: 0a 64                    ecalli 100 // 'log'
  5410: 01                       fallthrough
      :                          @245 [@dyn 61]
  5411: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  5417: 49 21 88 00 01 10 00 ff  u64 [sp + 136] = 0xffffffffff001001
  5425: 53 47 01 10 00 ff 34     jump @251 if a0 <u 4278194177
      :                          @246
  5432: 64 52                    t0 = s0
  5434: 64 65                    s0 = s1
  5436: 33 07 40 00 03           a0 = 0x30040
  5441: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  5447: 33 09 ff ef ff 00        a2 = 0xffefff
  5453: 01                       fallthrough
      :                          @247
  5454: 82 8a                    a3 = u64 [a1]
  5456: c8 97 0b                 a4 = a0 + a2
  5459: c9 ab 0b                 a4 = a4 - a3
  5462: ab 2b 0f                 jump @251 if a4 != t0
      :                          @248
  5465: c9 5a 0b                 a4 = a3 - s0
  5468: 01                       fallthrough
      :                          @249
  5469: 82 8c                    a5 = u64 [a1]
  5471: ab ac ef                 jump @247 if a5 != a3
      :                          @250
  5474: 7b 8b                    u64 [a1] = a4
  5476: 01                       fallthrough
      :                          @251
  5477: 95 15 b8 20              s0 = sp + 0x20b8
  5481: 82 57 48                 a0 = u64 [s0 + 0x48]
  5484: 0a 1a                    ecalli 26 // 'expunge'
  5486: 95 16 10 31              s1 = sp + 0x3110
  5490: 7b 67 78 02              u64 [s1 + 0x278] = a0
  5494: 0a                       ecalli 0 // 'gas'
  5495: 7b 57 40                 u64 [s0 + 0x40] = a0
  5498: 95 17 00 21              a0 = sp + 0x2100
  5502: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5506: 95 17 88 33              a0 = sp + 0x3388
  5510: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5514: 95 17 f8 20              a0 = sp + 0x20f8
  5518: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5522: 33 07 16                 a0 = 0x16
  5525: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5529: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5533: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5537: 33 07 f8 03 01           a0 = 0x103f8
  5542: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5546: 95 17 58 32              a0 = sp + 0x3258
  5550: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5554: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5559: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5564: 49 26 28 01              u64 [s1 + 296] = 0
  5568: 95 17 98 33              a0 = sp + 0x3398
  5572: 95 18 18 32              a1 = sp + 0x3218
  5576: 50 10 7c 68 28           ra = 124, jump @766
      :                          @252 [@dyn 62]
  5581: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5585: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5589: 82 66 88 02              s1 = u64 [s1 + 0x288]
  5593: 33 07 04                 a0 = 0x4
  5596: 33 08                    a1 = 0
  5598: 33 09                    a2 = 0
  5600: 64 5a                    a3 = s0
  5602: 33 00 7e                 ra = 0x7e
  5605: 0a 64                    ecalli 100 // 'log'
  5607: 01                       fallthrough
      :                          @253 [@dyn 63]
  5608: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  5614: 82 18 88 00              a1 = u64 [sp + 0x88]
  5618: ac 87 39                 jump @259 if a0 <u a1
      :                          @254
  5621: 64 52                    t0 = s0
  5623: 64 65                    s0 = s1
  5625: 33 07 40 00 03           a0 = 0x30040
  5630: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  5636: 33 09 ff ef ff 00        a2 = 0xffefff
  5642: 01                       fallthrough
      :                          @255
  5643: 82 8a                    a3 = u64 [a1]
  5645: c8 97 0b                 a4 = a0 + a2
  5648: c9 ab 0b                 a4 = a4 - a3
  5651: ab 2b 18                 jump @259 if a4 != t0
      :                          @256
  5654: c9 5a 0b                 a4 = a3 - s0
  5657: 01                       fallthrough
      :                          @257
  5658: 82 8c                    a5 = u64 [a1]
  5660: ab ac ef                 jump @255 if a5 != a3
      :                          @258
  5663: 7b 8b                    u64 [a1] = a4
  5665: 95 1a 58 33              a3 = sp + 0x3358
  5669: 33 08 0c                 a1 = 0xc
  5672: 28 7b ef                 jump @98
      :                          @259
  5675: 95 1a 58 33              a3 = sp + 0x3358
  5679: 33 08 0c                 a1 = 0xc
  5682: 28 71 ef                 jump @98
      :                          @260
  5685: 00                       trap
      :                          @261 [export #1: 'accumulate']
  5686: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5690: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5694: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5698: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5702: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  5706: 33 09 08                 a2 = 0x8
  5709: ac 98 22 01              jump @297 if a1 <u a2
      :                          @262
  5713: 52 07 06                 jump @264 if a0 != 0
      :                          @263
  5716: 28 cc 24                 jump @696
      :                          @264
  5719: 95 79 04                 a2 = a0 + 0x4
  5722: 52 09 06                 jump @266 if a2 != 0
      :                          @265
  5725: 28 c3 24                 jump @696
      :                          @266
  5728: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5731: 7b 19 20                 u64 [sp + 0x20] = a2
  5734: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5737: 7b 19 10                 u64 [sp + 0x10] = a2
  5740: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5743: 7b 19 18                 u64 [sp + 0x18] = a2
  5746: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5749: 7b 19 28                 u64 [sp + 0x28] = a2
  5752: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5755: 95 75 08                 s0 = a0 + 0x8
  5758: 51 0a 45                 jump @276 if a3 == 0
      :                          @267
  5761: 7d 58                    a1 = i8 [s0]
  5763: 33 06 01                 s1 = 0x1
  5766: 59 08 40                 jump @277 if a1 >=s 0
      :                          @268
  5769: 84 89 ff 00              a2 = a1 & 0xff
  5773: 33 06 02                 s1 = 0x2
  5776: 53 29 c0 00 2d           jump @274 if a2 <u 192
      :                          @269
  5781: 33 06 03                 s1 = 0x3
  5784: 53 29 e0 00 25           jump @274 if a2 <u 224
      :                          @270
  5789: 33 06 04                 s1 = 0x4
  5792: 53 29 f0 00 1d           jump @274 if a2 <u 240
      :                          @271
  5797: 33 06 05                 s1 = 0x5
  5800: 53 29 f8 00 15           jump @274 if a2 <u 248
      :                          @272
  5805: 33 06 06                 s1 = 0x6
  5808: 53 29 fc 00 0d           jump @274 if a2 <u 252
      :                          @273
  5813: 88 98 fe 00              a1 = a2 <u 0xfe
  5817: 9a 86 08                 s1 = 0x8 - a1
  5820: 01                       fallthrough
      :                          @274
  5821: ae 6a 09                 jump @277 if a3 >=u s1
      :                          @275
  5824: 28 af 00                 jump @297
      :                          @276
  5827: 33 06                    s1 = 0
  5829: 01                       fallthrough
      :                          @277
  5830: 7b 16 30                 u64 [sp + 0x30] = s1
  5833: 64 57                    a0 = s0
  5835: 64 68                    a1 = s1
  5837: 64 a6                    s1 = a3
  5839: 50 20 80 00 47 34        ra = 128, jump @1020
      :                          @278 [@dyn 64]
  5845: 82 1a 30                 a3 = u64 [sp + 0x30]
  5848: 51 07 97 00              jump @297 if a0 == 0
      :                          @279
  5852: e4 a6 07                 a0 = maxu(s1, a3)
  5855: c9 a7 07                 a0 = a0 - a3
  5858: 53 17 60 8d 00           jump @297 if a0 <u 96
      :                          @280
  5863: c8 5a 08                 a1 = a3 + s0
  5866: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5869: 95 87 60                 a0 = a1 + 0x60
  5872: 7b 17 30                 u64 [sp + 0x30] = a0
  5875: 51 06 4f                 jump @292 if s1 == 0
      :                          @281
  5878: 7d 78                    a1 = i8 [a0]
  5880: 33 05 01                 s0 = 0x1
  5883: 59 08 37                 jump @288 if a1 >=s 0
      :                          @282
  5886: 84 89 ff 00              a2 = a1 & 0xff
  5890: 33 05 02                 s0 = 0x2
  5893: 53 29 c0 00 2d           jump @288 if a2 <u 192
      :                          @283
  5898: 33 05 03                 s0 = 0x3
  5901: 53 29 e0 00 25           jump @288 if a2 <u 224
      :                          @284
  5906: 33 05 04                 s0 = 0x4
  5909: 53 29 f0 00 1d           jump @288 if a2 <u 240
      :                          @285
  5914: 33 05 05                 s0 = 0x5
  5917: 53 29 f8 00 15           jump @288 if a2 <u 248
      :                          @286
  5922: 33 05 06                 s0 = 0x6
  5925: 53 29 fc 00 0d           jump @288 if a2 <u 252
      :                          @287
  5930: 88 98 fe 00              a1 = a2 <u 0xfe
  5934: 9a 85 08                 s0 = 0x8 - a1
  5937: 01                       fallthrough
      :                          @288
  5938: ae 56 06                 jump @290 if s1 >=u s0
      :                          @289
  5941: 28 ec 23                 jump @697
      :                          @290
  5944: 64 58                    a1 = s0
  5946: 50 20 82 00 dc 33        ra = 130, jump @1020
      :                          @291 [@dyn 65]
  5952: 28 07                    jump @293
      :                          @292
  5954: 33 05                    s0 = 0
  5956: 33 07                    a0 = 0
  5958: 01                       fallthrough
      :                          @293
  5959: e4 56 08                 a1 = maxu(s1, s0)
  5962: c9 58 08                 a1 = a1 - s0
  5965: e4 78 08                 a1 = maxu(a1, a0)
  5968: c9 78 08                 a1 = a1 - a0
  5971: 33 09 20                 a2 = 0x20
  5974: ac 98 19                 jump @297 if a1 <u a2
      :                          @294
  5977: 82 19 30                 a2 = u64 [sp + 0x30]
  5980: c8 95 05                 s0 = s0 + a2
  5983: c8 57 07                 a0 = a0 + s0
  5986: 52 17 e0 07              jump @296 if a0 != 4294967264
      :                          @295
  5990: 28 ba 23                 jump @696
      :                          @296
  5993: 33 09 29                 a2 = 0x29
  5996: ae 98 21                 jump @299 if a1 >=u a2
      :                          @297
  5999: 33 08                    a1 = 0
  6001: 33 07 00 00 01           a0 = 0x10000
  6006: 01                       fallthrough
      :                          @298
  6007: 95 11 40 04              sp = sp + 0x440
  6011: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  6015: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  6019: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  6023: 95 11 f8 07              sp = sp + 0x7f8
  6027: 32 00                    ret
      :                          @299
  6029: 7c 79 28                 a2 = u8 [a0 + 0x28]
  6032: 51 09 0a                 jump @301 if a2 == 0
      :                          @300
  6035: 33 06                    s1 = 0
  6037: 33 0a                    a3 = 0
  6039: 28 86 00                 jump @316
      :                          @301
  6042: 95 8a d7                 a3 = a1 + 0xffffffffffffffd7
  6045: 95 75 29                 s0 = a0 + 0x29
  6048: 51 0a 57                 jump @313 if a3 == 0
      :                          @302
  6051: 7d 57                    a0 = i8 [s0]
  6053: 33 06 01                 s1 = 0x1
  6056: 59 07 37                 jump @309 if a0 >=s 0
      :                          @303
  6059: 84 77 ff 00              a0 = a0 & 0xff
  6063: 33 06 02                 s1 = 0x2
  6066: 53 27 c0 00 2d           jump @309 if a0 <u 192
      :                          @304
  6071: 33 06 03                 s1 = 0x3
  6074: 53 27 e0 00 25           jump @309 if a0 <u 224
      :                          @305
  6079: 33 06 04                 s1 = 0x4
  6082: 53 27 f0 00 1d           jump @309 if a0 <u 240
      :                          @306
  6087: 33 06 05                 s1 = 0x5
  6090: 53 27 f8 00 15           jump @309 if a0 <u 248
      :                          @307
  6095: 33 06 06                 s1 = 0x6
  6098: 53 27 fc 00 0d           jump @309 if a0 <u 252
      :                          @308
  6103: 88 77 fe 00              a0 = a0 <u 0xfe
  6107: 9a 76 08                 s1 = 0x8 - a0
  6110: 01                       fallthrough
      :                          @309
  6111: 7b 1a 30                 u64 [sp + 0x30] = a3
  6114: ae 6a 06                 jump @311 if a3 >=u s1
      :                          @310
  6117: 28 3e 23                 jump @699
      :                          @311
  6120: 64 57                    a0 = s0
  6122: 64 68                    a1 = s1
  6124: 50 20 84 00 2a 33        ra = 132, jump @1020
      :                          @312 [@dyn 66]
  6130: 82 1a 30                 a3 = u64 [sp + 0x30]
  6133: 28 07                    jump @314
      :                          @313
  6135: 33 06                    s1 = 0
  6137: 33 07                    a0 = 0
  6139: 01                       fallthrough
      :                          @314
  6140: e4 6a 08                 a1 = maxu(a3, s1)
  6143: c9 68 08                 a1 = a1 - s1
  6146: e6 78 0a                 a3 = minu(a1, a0)
  6149: c8 56 06                 s1 = s1 + s0
  6152: 52 1a 24 15              jump @316 if a3 != 36
      :                          @315
  6156: 80 68 20                 a1 = u32 [s1 + 0x20]
  6159: 64 67                    a0 = s1
  6161: 0a 0e                    ecalli 14 // 'solicit'
  6163: 33 08                    a1 = 0
  6165: 33 07 00 00 01           a0 = 0x10000
  6170: 28 5d ff                 jump @298
      :                          @316
  6173: 82 17 10                 a0 = u64 [sp + 0x10]
  6176: 97 77 08                 a0 = a0 << 0x8
  6179: 82 18 20                 a1 = u64 [sp + 0x20]
  6182: d4 87 07                 a0 = a0 | a1
  6185: 82 18 18                 a1 = u64 [sp + 0x18]
  6188: 97 88 10                 a1 = a1 << 0x10
  6191: 46 11 3f                 u8 [sp + 63] = 0
  6194: 80 69                    a2 = u32 [s1]
  6196: 82 1b 28                 a4 = u64 [sp + 0x28]
  6199: 97 bb 18                 a4 = a4 << 0x18
  6202: d4 b8 08                 a1 = a1 | a4
  6205: d4 87 07                 a0 = a0 | a1
  6208: 7b 17 30                 u64 [sp + 0x30] = a0
  6211: 7b 19 40                 u64 [sp + 0x40] = a2
  6214: 95 17 3f                 a0 = sp + 0x3f
  6217: 33 08 01                 a1 = 0x1
  6220: 7b 16 18                 u64 [sp + 0x18] = s1
  6223: 64 69                    a2 = s1
  6225: 7b 1a 28                 u64 [sp + 0x28] = a3
  6228: 0a 03                    ecalli 3 // 'write'
  6230: 46 11 4a 6a              u8 [sp + 74] = 0x6a
  6234: 46 11 4b 61              u8 [sp + 75] = 0x61
  6238: 46 11 4c 6d              u8 [sp + 76] = 0x6d
  6242: 46 11 4d 44              u8 [sp + 77] = 0x44
  6246: 46 11 4e 4f              u8 [sp + 78] = 0x4f
  6250: 46 11 4f 54              u8 [sp + 79] = 0x54
  6254: 46 11 50 6a              u8 [sp + 80] = 0x6a
  6258: 46 11 51 0d              u8 [sp + 81] = 0xd
  6262: 46 11 52 4a              u8 [sp + 82] = 0x4a
  6266: 46 11 53 19              u8 [sp + 83] = 0x19
  6270: 46 11 54 d1 00           u8 [sp + 84] = 0xd1
  6275: 46 11 55 99 00           u8 [sp + 85] = 0x99
  6280: 46 11 56 50              u8 [sp + 86] = 0x50
  6284: 46 11 57 57              u8 [sp + 87] = 0x57
  6288: 46 11 58 13              u8 [sp + 88] = 0x13
  6292: 46 11 59 fc 00           u8 [sp + 89] = 0xfc
  6297: 46 11 5a 65              u8 [sp + 90] = 0x65
  6301: 46 11 5b f5 00           u8 [sp + 91] = 0xf5
  6306: 46 11 5c 31              u8 [sp + 92] = 0x31
  6310: 46 11 5d 03              u8 [sp + 93] = 0x3
  6314: 46 11 5e 8e 00           u8 [sp + 94] = 0x8e
  6319: 46 11 5f 73              u8 [sp + 95] = 0x73
  6323: 33 0b f1 00              a4 = 0xf1
  6327: 78 1b 60                 u8 [sp + 0x60] = a4
  6330: 46 11 61 d8 00           u8 [sp + 97] = 0xd8
  6335: 46 11 62 85 00           u8 [sp + 98] = 0x85
  6340: 46 11 63 64              u8 [sp + 99] = 0x64
  6344: 46 11 64 56              u8 [sp + 100] = 0x56
  6348: 46 11 65 32              u8 [sp + 101] = 0x32
  6352: 46 11 66 c8 00           u8 [sp + 102] = 0xc8
  6357: 46 11 67 ae 00           u8 [sp + 103] = 0xae
  6362: 46 11 68 50              u8 [sp + 104] = 0x50
  6366: 33 0c 3c                 a5 = 0x3c
  6369: 78 1c 69                 u8 [sp + 0x69] = a5
  6372: 46 11 6a 4f              u8 [sp + 106] = 0x4f
  6376: 46 11 6b 0c              u8 [sp + 107] = 0xc
  6380: 46 11 6c 4d              u8 [sp + 108] = 0x4d
  6384: 46 11 6d 5e              u8 [sp + 109] = 0x5e
  6388: 46 11 6e 19              u8 [sp + 110] = 0x19
  6392: 46 11 6f a7 00           u8 [sp + 111] = 0xa7
  6397: 46 11 70 bf 00           u8 [sp + 112] = 0xbf
  6402: 46 11 71 a9 00           u8 [sp + 113] = 0xa9
  6407: 46 11 72 bb 00           u8 [sp + 114] = 0xbb
  6412: 46 11 73 0f              u8 [sp + 115] = 0xf
  6416: 46 11 74 a4 00           u8 [sp + 116] = 0xa4
  6421: 46 11 75 96 00           u8 [sp + 117] = 0x96
  6426: 46 11 76 87 00           u8 [sp + 118] = 0x87
  6431: 46 11 77 47              u8 [sp + 119] = 0x47
  6435: 46 11 78 e6 00           u8 [sp + 120] = 0xe6
  6440: 46 11 79 3d              u8 [sp + 121] = 0x3d
  6444: 78 1c 7a                 u8 [sp + 0x7a] = a5
  6447: 78 1b 7b                 u8 [sp + 0x7b] = a4
  6450: 46 11 7c e7 00           u8 [sp + 124] = 0xe7
  6455: 46 11 7d 4a              u8 [sp + 125] = 0x4a
  6459: 46 11 7e 49              u8 [sp + 126] = 0x49
  6463: 46 11 7f dd 00           u8 [sp + 127] = 0xdd
  6468: 46 21 80 00 c4 00        u8 [sp + 128] = 0xc4
  6474: 46 21 81 00 a6 00        u8 [sp + 129] = 0xa6
  6480: 46 21 82 00 ec 00        u8 [sp + 130] = 0xec
  6486: 46 21 83 00 a8 00        u8 [sp + 131] = 0xa8
  6492: 46 21 84 00 9a 00        u8 [sp + 132] = 0x9a
  6498: 46 21 85 00 6a           u8 [sp + 133] = 0x6a
  6503: 46 21 86 00 6f           u8 [sp + 134] = 0x6f
  6508: 46 21 87 00 33           u8 [sp + 135] = 0x33
  6513: 46 21 88 00 9d 00        u8 [sp + 136] = 0x9d
  6519: 46 21 89 00 a3 00        u8 [sp + 137] = 0xa3
  6525: 46 21 8a 00 33           u8 [sp + 138] = 0x33
  6530: 46 21 8b 00 7f           u8 [sp + 139] = 0x7f
  6535: 46 21 8c 00 d2 00        u8 [sp + 140] = 0xd2
  6541: 46 21 8d 00 eb 00        u8 [sp + 141] = 0xeb
  6547: 46 21 8e 00 55           u8 [sp + 142] = 0x55
  6552: 46 21 8f 00 07           u8 [sp + 143] = 0x7
  6557: 95 16 ff 07              s1 = sp + 0x7ff
  6561: 95 66 99 03              s1 = s1 + 0x399
  6565: 95 17 90 00              a0 = sp + 0x90
  6569: 33 09 00 01              a2 = 0x100
  6573: 33 08                    a1 = 0
  6575: 50 20 86 00 be 27        ra = 134, jump @834
      :                          @317 [@dyn 67]
  6581: 82 17 40                 a0 = u64 [sp + 0x40]
  6584: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6587: 54 17 09 07              jump @319 if a0 <=u 9
      :                          @318
  6591: 28 b2 1e                 jump @661
      :                          @319
  6594: 97 77 02                 a0 = a0 << 0x2
  6597: 33 08 00 00 01           a1 = 0x10000
  6602: c8 87 07                 a0 = a0 + a1
  6605: 81 77                    a0 = i32 [a0]
  6607: 32 07                    jump [a0]
      :                          @320 [@dyn 68]
  6609: 95 18 4a                 a1 = sp + 0x4a
  6612: 33 09 03                 a2 = 0x3
  6615: 95 1a 90 00              a3 = sp + 0x90
  6619: 33 0c 00 01              a5 = 0x100
  6623: 82 17 30                 a0 = u64 [sp + 0x30]
  6626: 33 0b                    a4 = 0
  6628: 0a 02                    ecalli 2 // 'read'
  6630: 7b 67 70                 u64 [s1 + 0x70] = a0
  6633: 95 77 01                 a0 = a0 + 0x1
  6636: 88 77 01                 a0 = a0 <u 0x1
  6639: 97 77 01                 a0 = a0 << 0x1
  6642: 7b 17 10                 u64 [sp + 0x10] = a0
  6645: 95 17 40                 a0 = sp + 0x40
  6648: 7b 67 18                 u64 [s1 + 0x18] = a0
  6651: 33 09 16                 a2 = 0x16
  6654: 7b 69 20                 u64 [s1 + 0x20] = a2
  6657: 95 17 ff 07              a0 = sp + 0x7ff
  6661: 95 77 09 04              a0 = a0 + 0x409
  6665: 7b 67 28                 u64 [s1 + 0x28] = a0
  6668: 7b 19 20                 u64 [sp + 0x20] = a2
  6671: 7b 69 30                 u64 [s1 + 0x30] = a2
  6674: 33 07 d0 05 01           a0 = 0x105d0
  6679: 7b 17 98 01              u64 [sp + 0x198] = a0
  6683: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6688: 49 21 b8 01              u64 [sp + 440] = 0
  6692: 95 17 ff 07              a0 = sp + 0x7ff
  6696: 95 77 b1 03              a0 = a0 + 0x3b1
  6700: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6704: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6709: 95 17 ff 07              a0 = sp + 0x7ff
  6713: 95 77 e1 03              a0 = a0 + 0x3e1
  6717: 95 18 98 01              a1 = sp + 0x198
  6721: 50 20 8a 00 ef 23        ra = 138, jump @766
      :                          @321 [@dyn 69]
  6727: 82 65 50                 s0 = u64 [s1 + 0x50]
  6730: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6733: 82 66 48                 s1 = u64 [s1 + 0x48]
  6736: 82 17 10                 a0 = u64 [sp + 0x10]
  6739: 33 08                    a1 = 0
  6741: 33 09                    a2 = 0
  6743: 64 5a                    a3 = s0
  6745: 33 00 8c 00              ra = 0x8c
  6749: 0a 64                    ecalli 100 // 'log'
  6751: 01                       fallthrough
      :                          @322 [@dyn 70]
  6752: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  6758: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
  6765: 53 47 01 10 00 ff 36     jump @328 if a0 <u 4278194177
      :                          @323
  6772: 64 52                    t0 = s0
  6774: 64 65                    s0 = s1
  6776: 33 07 40 00 03           a0 = 0x30040
  6781: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  6787: 33 09 ff ef ff 00        a2 = 0xffefff
  6793: 01                       fallthrough
      :                          @324
  6794: 82 8a                    a3 = u64 [a1]
  6796: c8 97 0b                 a4 = a0 + a2
  6799: c9 ab 0b                 a4 = a4 - a3
  6802: ab 2b 11                 jump @328 if a4 != t0
      :                          @325
  6805: c9 5a 0b                 a4 = a3 - s0
  6808: 01                       fallthrough
      :                          @326
  6809: 82 8c                    a5 = u64 [a1]
  6811: ab ac ef                 jump @324 if a5 != a3
      :                          @327
  6814: 7b 8b                    u64 [a1] = a4
  6816: 33 06                    s1 = 0
  6818: 01                       fallthrough
      :                          @328
  6819: 95 15 ff 07              s0 = sp + 0x7ff
  6823: 95 55 99 03              s0 = s0 + 0x399
  6827: 82 57 70                 a0 = u64 [s0 + 0x70]
  6830: 33 08 01                 a1 = 0x1
  6833: 50 20 8e 00 03 31        ra = 142, jump @1044
      :                          @329 [@dyn 71]
  6839: 95 17 4a                 a0 = sp + 0x4a
  6842: 33 08 03                 a1 = 0x3
  6845: 95 19 4d                 a2 = sp + 0x4d
  6848: 33 0a 03                 a3 = 0x3
  6851: 0a 03                    ecalli 3 // 'write'
  6853: 95 18 40                 a1 = sp + 0x40
  6856: 7b 58 18                 u64 [s0 + 0x18] = a1
  6859: 95 18 ff 07              a1 = sp + 0x7ff
  6863: 95 88 11 04              a1 = a1 + 0x411
  6867: 7b 58 28                 u64 [s0 + 0x28] = a1
  6870: 82 18 20                 a1 = u64 [sp + 0x20]
  6873: 7b 58 20                 u64 [s0 + 0x20] = a1
  6876: 7b 58 30                 u64 [s0 + 0x30] = a1
  6879: 33 08 18 06 01           a1 = 0x10618
  6884: 7b 18 98 01              u64 [sp + 0x198] = a1
  6888: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6893: 49 21 b8 01              u64 [sp + 440] = 0
  6897: 95 18 ff 07              a1 = sp + 0x7ff
  6901: 95 88 b1 03              a1 = a1 + 0x3b1
  6905: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  6909: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6914: 7b 57 78                 u64 [s0 + 0x78] = a0
  6917: 95 77 01                 a0 = a0 + 0x1
  6920: 88 77 01                 a0 = a0 <u 0x1
  6923: 97 77 01                 a0 = a0 << 0x1
  6926: 7b 17 20                 u64 [sp + 0x20] = a0
  6929: 95 17 ff 07              a0 = sp + 0x7ff
  6933: 95 77 e1 03              a0 = a0 + 0x3e1
  6937: 95 18 98 01              a1 = sp + 0x198
  6941: 50 20 90 00 13 23        ra = 144, jump @766
      :                          @330 [@dyn 72]
  6947: 82 56 50                 s1 = u64 [s0 + 0x50]
  6950: 82 5b 58                 a4 = u64 [s0 + 0x58]
  6953: 82 55 48                 s0 = u64 [s0 + 0x48]
  6956: 82 17 20                 a0 = u64 [sp + 0x20]
  6959: 33 08                    a1 = 0
  6961: 33 09                    a2 = 0
  6963: 64 6a                    a3 = s1
  6965: 33 00 92 00              ra = 0x92
  6969: 0a 64                    ecalli 100 // 'log'
  6971: 01                       fallthrough
      :                          @331 [@dyn 73]
  6972: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  6978: 82 18 10                 a1 = u64 [sp + 0x10]
  6981: ac 87 2e                 jump @337 if a0 <u a1
      :                          @332
  6984: 64 62                    t0 = s1
  6986: 33 07 40 00 03           a0 = 0x30040
  6991: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  6997: 33 09 ff ef ff 00        a2 = 0xffefff
  7003: 01                       fallthrough
      :                          @333
  7004: 82 8a                    a3 = u64 [a1]
  7006: c8 97 0b                 a4 = a0 + a2
  7009: c9 ab 0b                 a4 = a4 - a3
  7012: ab 2b 0f                 jump @337 if a4 != t0
      :                          @334
  7015: c9 5a 0b                 a4 = a3 - s0
  7018: 01                       fallthrough
      :                          @335
  7019: 82 8c                    a5 = u64 [a1]
  7021: ab ac ef                 jump @333 if a5 != a3
      :                          @336
  7024: 7b 8b                    u64 [a1] = a4
  7026: 01                       fallthrough
      :                          @337
  7027: 95 15 ff 07              s0 = sp + 0x7ff
  7031: 95 55 99 03              s0 = s0 + 0x399
  7035: 82 57 78                 a0 = u64 [s0 + 0x78]
  7038: 33 08 02                 a1 = 0x2
  7041: 33 06 02                 s1 = 0x2
  7044: 50 20 94 00 30 30        ra = 148, jump @1044
      :                          @338 [@dyn 74]
  7050: 95 18 4a                 a1 = sp + 0x4a
  7053: 33 09 03                 a2 = 0x3
  7056: 95 1a 90 00              a3 = sp + 0x90
  7060: 33 0c 00 01              a5 = 0x100
  7064: 82 17 30                 a0 = u64 [sp + 0x30]
  7067: 33 0b                    a4 = 0
  7069: 0a 02                    ecalli 2 // 'read'
  7071: 7b 57 80 00              u64 [s0 + 0x80] = a0
  7075: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7078: 88 77 01                 a0 = a0 <u 0x1
  7081: 97 77 01                 a0 = a0 << 0x1
  7084: 7b 17 10                 u64 [sp + 0x10] = a0
  7087: 95 17 40                 a0 = sp + 0x40
  7090: 7b 57 18                 u64 [s0 + 0x18] = a0
  7093: 33 09 16                 a2 = 0x16
  7096: 7b 59 20                 u64 [s0 + 0x20] = a2
  7099: 95 17 ff 07              a0 = sp + 0x7ff
  7103: 95 77 19 04              a0 = a0 + 0x419
  7107: 7b 57 28                 u64 [s0 + 0x28] = a0
  7110: 7b 19 20                 u64 [sp + 0x20] = a2
  7113: 7b 59 30                 u64 [s0 + 0x30] = a2
  7116: 33 07 60 06 01           a0 = 0x10660
  7121: 7b 17 98 01              u64 [sp + 0x198] = a0
  7125: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7130: 49 21 b8 01              u64 [sp + 440] = 0
  7134: 95 17 ff 07              a0 = sp + 0x7ff
  7138: 95 77 b1 03              a0 = a0 + 0x3b1
  7142: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7146: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
  7150: 95 17 ff 07              a0 = sp + 0x7ff
  7154: 95 77 e1 03              a0 = a0 + 0x3e1
  7158: 95 18 98 01              a1 = sp + 0x198
  7162: 50 20 96 00 36 22        ra = 150, jump @766
      :                          @339 [@dyn 75]
  7168: 82 56 50                 s1 = u64 [s0 + 0x50]
  7171: 82 5b 58                 a4 = u64 [s0 + 0x58]
  7174: 82 55 48                 s0 = u64 [s0 + 0x48]
  7177: 82 17 10                 a0 = u64 [sp + 0x10]
  7180: 33 08                    a1 = 0
  7182: 33 09                    a2 = 0
  7184: 64 6a                    a3 = s1
  7186: 33 00 98 00              ra = 0x98
  7190: 0a 64                    ecalli 100 // 'log'
  7192: 01                       fallthrough
      :                          @340 [@dyn 76]
  7193: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  7199: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
  7206: 53 47 01 10 00 ff 34     jump @346 if a0 <u 4278194177
      :                          @341
  7213: 64 62                    t0 = s1
  7215: 33 07 40 00 03           a0 = 0x30040
  7220: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  7226: 33 09 ff ef ff 00        a2 = 0xffefff
  7232: 01                       fallthrough
      :                          @342
  7233: 82 8a                    a3 = u64 [a1]
  7235: c8 97 0b                 a4 = a0 + a2
  7238: c9 ab 0b                 a4 = a4 - a3
  7241: ab 2b 11                 jump @346 if a4 != t0
      :                          @343
  7244: c9 5a 0b                 a4 = a3 - s0
  7247: 01                       fallthrough
      :                          @344
  7248: 82 8c                    a5 = u64 [a1]
  7250: ab ac ef                 jump @342 if a5 != a3
      :                          @345
  7253: 7b 8b                    u64 [a1] = a4
  7255: 33 06                    s1 = 0
  7257: 01                       fallthrough
      :                          @346
  7258: 95 15 ff 07              s0 = sp + 0x7ff
  7262: 95 55 99 03              s0 = s0 + 0x399
  7266: 82 57 80 00              a0 = u64 [s0 + 0x80]
  7270: 33 08 05                 a1 = 0x5
  7273: 50 20 9a 00 4b 2f        ra = 154, jump @1044
      :                          @347 [@dyn 77]
  7279: 95 17 4a                 a0 = sp + 0x4a
  7282: 33 08                    a1 = 0
  7284: 0a 0f                    ecalli 15 // 'forget'
  7286: 95 18 40                 a1 = sp + 0x40
  7289: 7b 58 18                 u64 [s0 + 0x18] = a1
  7292: 82 18 20                 a1 = u64 [sp + 0x20]
  7295: 7b 58 20                 u64 [s0 + 0x20] = a1
  7298: 7b 58 30                 u64 [s0 + 0x30] = a1
  7301: 33 08 c8 06 01           a1 = 0x106c8
  7306: 7b 18 98 01              u64 [sp + 0x198] = a1
  7310: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7315: 49 21 b8 01              u64 [sp + 440] = 0
  7319: 95 18 ff 07              a1 = sp + 0x7ff
  7323: 95 88 b1 03              a1 = a1 + 0x3b1
  7327: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  7331: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7336: 7b 57                    u64 [s0] = a0
  7338: 95 77 09                 a0 = a0 + 0x9
  7341: 88 77 01                 a0 = a0 <u 0x1
  7344: 97 77 01                 a0 = a0 << 0x1
  7347: 7b 17 20                 u64 [sp + 0x20] = a0
  7350: 7b 55 28                 u64 [s0 + 0x28] = s0
  7353: 95 17 ff 07              a0 = sp + 0x7ff
  7357: 95 77 e1 03              a0 = a0 + 0x3e1
  7361: 95 18 98 01              a1 = sp + 0x198
  7365: 50 20 9c 00 6b 21        ra = 156, jump @766
      :                          @348 [@dyn 78]
  7371: 82 56 50                 s1 = u64 [s0 + 0x50]
  7374: 82 5b 58                 a4 = u64 [s0 + 0x58]
  7377: 82 55 48                 s0 = u64 [s0 + 0x48]
  7380: 82 17 20                 a0 = u64 [sp + 0x20]
  7383: 33 08                    a1 = 0
  7385: 33 09                    a2 = 0
  7387: 64 6a                    a3 = s1
  7389: 33 00 9e 00              ra = 0x9e
  7393: 0a 64                    ecalli 100 // 'log'
  7395: 01                       fallthrough
      :                          @349 [@dyn 79]
  7396: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  7402: 82 18 10                 a1 = u64 [sp + 0x10]
  7405: ac 87 2e                 jump @355 if a0 <u a1
      :                          @350
  7408: 64 62                    t0 = s1
  7410: 33 07 40 00 03           a0 = 0x30040
  7415: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  7421: 33 09 ff ef ff 00        a2 = 0xffefff
  7427: 01                       fallthrough
      :                          @351
  7428: 82 8a                    a3 = u64 [a1]
  7430: c8 97 0b                 a4 = a0 + a2
  7433: c9 ab 0b                 a4 = a4 - a3
  7436: ab 2b 0f                 jump @355 if a4 != t0
      :                          @352
  7439: c9 5a 0b                 a4 = a3 - s0
  7442: 01                       fallthrough
      :                          @353
  7443: 82 8c                    a5 = u64 [a1]
  7445: ab ac ef                 jump @351 if a5 != a3
      :                          @354
  7448: 7b 8b                    u64 [a1] = a4
  7450: 01                       fallthrough
      :                          @355
  7451: 95 16 ff 07              s1 = sp + 0x7ff
  7455: 95 66 99 03              s1 = s1 + 0x399
  7459: 82 67                    a0 = u64 [s1]
  7461: 33 08 06                 a1 = 0x6
  7464: 33 00 6c 01              ra = 0x16c
  7468: 28 88 2e                 jump @1044
      :                          @356 [@dyn 80]
  7471: 95 18 4a                 a1 = sp + 0x4a
  7474: 33 09 03                 a2 = 0x3
  7477: 95 1a 90 00              a3 = sp + 0x90
  7481: 33 0c 00 01              a5 = 0x100
  7485: 82 17 30                 a0 = u64 [sp + 0x30]
  7488: 33 0b                    a4 = 0
  7490: 0a 02                    ecalli 2 // 'read'
  7492: 7b 67 78                 u64 [s1 + 0x78] = a0
  7495: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7498: 88 77 01                 a0 = a0 <u 0x1
  7501: 97 77 01                 a0 = a0 << 0x1
  7504: 7b 17 10                 u64 [sp + 0x10] = a0
  7507: 95 17 40                 a0 = sp + 0x40
  7510: 7b 67 18                 u64 [s1 + 0x18] = a0
  7513: 33 09 16                 a2 = 0x16
  7516: 7b 69 20                 u64 [s1 + 0x20] = a2
  7519: 95 17 ff 07              a0 = sp + 0x7ff
  7523: 95 77 11 04              a0 = a0 + 0x411
  7527: 7b 67 28                 u64 [s1 + 0x28] = a0
  7530: 7b 19 20                 u64 [sp + 0x20] = a2
  7533: 7b 69 30                 u64 [s1 + 0x30] = a2
  7536: 33 07 08 07 01           a0 = 0x10708
  7541: 7b 17 98 01              u64 [sp + 0x198] = a0
  7545: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7550: 49 21 b8 01              u64 [sp + 440] = 0
  7554: 95 17 ff 07              a0 = sp + 0x7ff
  7558: 95 77 b1 03              a0 = a0 + 0x3b1
  7562: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7566: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7571: 95 17 ff 07              a0 = sp + 0x7ff
  7575: 95 77 e1 03              a0 = a0 + 0x3e1
  7579: 95 18 98 01              a1 = sp + 0x198
  7583: 50 20 a2 00 91 20        ra = 162, jump @766
      :                          @357 [@dyn 81]
  7589: 82 65 50                 s0 = u64 [s1 + 0x50]
  7592: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7595: 82 66 48                 s1 = u64 [s1 + 0x48]
  7598: 82 17 10                 a0 = u64 [sp + 0x10]
  7601: 33 08                    a1 = 0
  7603: 33 09                    a2 = 0
  7605: 64 5a                    a3 = s0
  7607: 33 00 a4 00              ra = 0xa4
  7611: 0a 64                    ecalli 100 // 'log'
  7613: 01                       fallthrough
      :                          @358 [@dyn 82]
  7614: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  7620: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
  7627: 53 47 01 10 00 ff 36     jump @364 if a0 <u 4278194177
      :                          @359
  7634: 64 52                    t0 = s0
  7636: 64 65                    s0 = s1
  7638: 33 07 40 00 03           a0 = 0x30040
  7643: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  7649: 33 09 ff ef ff 00        a2 = 0xffefff
  7655: 01                       fallthrough
      :                          @360
  7656: 82 8a                    a3 = u64 [a1]
  7658: c8 97 0b                 a4 = a0 + a2
  7661: c9 ab 0b                 a4 = a4 - a3
  7664: ab 2b 11                 jump @364 if a4 != t0
      :                          @361
  7667: c9 5a 0b                 a4 = a3 - s0
  7670: 01                       fallthrough
      :                          @362
  7671: 82 8c                    a5 = u64 [a1]
  7673: ab ac ef                 jump @360 if a5 != a3
      :                          @363
  7676: 7b 8b                    u64 [a1] = a4
  7678: 33 06                    s1 = 0
  7680: 01                       fallthrough
      :                          @364
  7681: 95 15 ff 07              s0 = sp + 0x7ff
  7685: 95 55 99 03              s0 = s0 + 0x399
  7689: 82 57 78                 a0 = u64 [s0 + 0x78]
  7692: 33 08 01                 a1 = 0x1
  7695: 50 20 a6 00 a5 2d        ra = 166, jump @1044
      :                          @365 [@dyn 83]
  7701: 95 17 4a                 a0 = sp + 0x4a
  7704: 33 08 03                 a1 = 0x3
  7707: 33 09                    a2 = 0
  7709: 33 0a                    a3 = 0
  7711: 0a 03                    ecalli 3 // 'write'
  7713: 95 18 40                 a1 = sp + 0x40
  7716: 7b 58 18                 u64 [s0 + 0x18] = a1
  7719: 95 18 ff 07              a1 = sp + 0x7ff
  7723: 95 88 19 04              a1 = a1 + 0x419
  7727: 7b 58 28                 u64 [s0 + 0x28] = a1
  7730: 82 18 20                 a1 = u64 [sp + 0x20]
  7733: 7b 58 20                 u64 [s0 + 0x20] = a1
  7736: 7b 58 30                 u64 [s0 + 0x30] = a1
  7739: 33 08 68 07 01           a1 = 0x10768
  7744: 7b 18 98 01              u64 [sp + 0x198] = a1
  7748: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7753: 49 21 b8 01              u64 [sp + 440] = 0
  7757: 95 18 ff 07              a1 = sp + 0x7ff
  7761: 95 88 b1 03              a1 = a1 + 0x3b1
  7765: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  7769: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7774: 7b 57 80 00              u64 [s0 + 0x80] = a0
  7778: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7781: 88 77 01                 a0 = a0 <u 0x1
  7784: 97 77 01                 a0 = a0 << 0x1
  7787: 7b 17 20                 u64 [sp + 0x20] = a0
  7790: 95 17 ff 07              a0 = sp + 0x7ff
  7794: 95 77 e1 03              a0 = a0 + 0x3e1
  7798: 95 18 98 01              a1 = sp + 0x198
  7802: 50 20 a8 00 b6 1f        ra = 168, jump @766
      :                          @366 [@dyn 84]
  7808: 82 56 50                 s1 = u64 [s0 + 0x50]
  7811: 82 5b 58                 a4 = u64 [s0 + 0x58]
  7814: 82 55 48                 s0 = u64 [s0 + 0x48]
  7817: 82 17 20                 a0 = u64 [sp + 0x20]
  7820: 33 08                    a1 = 0
  7822: 33 09                    a2 = 0
  7824: 64 6a                    a3 = s1
  7826: 33 00 aa 00              ra = 0xaa
  7830: 0a 64                    ecalli 100 // 'log'
  7832: 01                       fallthrough
      :                          @367 [@dyn 85]
  7833: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  7839: 82 18 10                 a1 = u64 [sp + 0x10]
  7842: ac 87 2e                 jump @373 if a0 <u a1
      :                          @368
  7845: 64 62                    t0 = s1
  7847: 33 07 40 00 03           a0 = 0x30040
  7852: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  7858: 33 09 ff ef ff 00        a2 = 0xffefff
  7864: 01                       fallthrough
      :                          @369
  7865: 82 8a                    a3 = u64 [a1]
  7867: c8 97 0b                 a4 = a0 + a2
  7870: c9 ab 0b                 a4 = a4 - a3
  7873: ab 2b 0f                 jump @373 if a4 != t0
      :                          @370
  7876: c9 5a 0b                 a4 = a3 - s0
  7879: 01                       fallthrough
      :                          @371
  7880: 82 8c                    a5 = u64 [a1]
  7882: ab ac ef                 jump @369 if a5 != a3
      :                          @372
  7885: 7b 8b                    u64 [a1] = a4
  7887: 01                       fallthrough
      :                          @373
  7888: 95 15 ff 07              s0 = sp + 0x7ff
  7892: 95 55 99 03              s0 = s0 + 0x399
  7896: 82 57 80 00              a0 = u64 [s0 + 0x80]
  7900: 33 08 02                 a1 = 0x2
  7903: 33 06 02                 s1 = 0x2
  7906: 50 20 ac 00 d2 2c        ra = 172, jump @1044
      :                          @374 [@dyn 86]
  7912: 95 18 4a                 a1 = sp + 0x4a
  7915: 33 09 03                 a2 = 0x3
  7918: 95 1a 90 00              a3 = sp + 0x90
  7922: 33 0c 00 01              a5 = 0x100
  7926: 82 17 30                 a0 = u64 [sp + 0x30]
  7929: 33 0b                    a4 = 0
  7931: 0a 02                    ecalli 2 // 'read'
  7933: 95 18 40                 a1 = sp + 0x40
  7936: 7b 58 18                 u64 [s0 + 0x18] = a1
  7939: 33 08 16                 a1 = 0x16
  7942: 7b 58 20                 u64 [s0 + 0x20] = a1
  7945: 7b 58 30                 u64 [s0 + 0x30] = a1
  7948: 33 08 98 07 01           a1 = 0x10798
  7953: 7b 18 98 01              u64 [sp + 0x198] = a1
  7957: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7962: 49 21 b8 01              u64 [sp + 440] = 0
  7966: 95 18 ff 07              a1 = sp + 0x7ff
  7970: 95 88 b1 03              a1 = a1 + 0x3b1
  7974: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  7978: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
  7982: 7b 57                    u64 [s0] = a0
  7984: 95 77 01                 a0 = a0 + 0x1
  7987: 88 77 01                 a0 = a0 <u 0x1
  7990: 97 77 01                 a0 = a0 << 0x1
  7993: 7b 17 20                 u64 [sp + 0x20] = a0
  7996: 7b 55 28                 u64 [s0 + 0x28] = s0
  7999: 95 17 ff 07              a0 = sp + 0x7ff
  8003: 95 77 e1 03              a0 = a0 + 0x3e1
  8007: 95 18 98 01              a1 = sp + 0x198
  8011: 50 20 ae 00 e5 1e        ra = 174, jump @766
      :                          @375 [@dyn 87]
  8017: 82 56 50                 s1 = u64 [s0 + 0x50]
  8020: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8023: 82 55 48                 s0 = u64 [s0 + 0x48]
  8026: 82 17 20                 a0 = u64 [sp + 0x20]
  8029: 33 08                    a1 = 0
  8031: 33 09                    a2 = 0
  8033: 64 6a                    a3 = s1
  8035: 33 00 b0 00              ra = 0xb0
  8039: 0a 64                    ecalli 100 // 'log'
  8041: 01                       fallthrough
      :                          @376 [@dyn 88]
  8042: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  8048: 53 48 01 10 00 ff 8d 02  jump @410 if a1 <u 4278194177
      :                          @377
  8056: 64 62                    t0 = s1
  8058: 33 07 40 00 03           a0 = 0x30040
  8063: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  8069: 33 09 ff ef ff 00        a2 = 0xffefff
  8075: 01                       fallthrough
      :                          @378
  8076: 82 8a                    a3 = u64 [a1]
  8078: c8 97 0b                 a4 = a0 + a2
  8081: c9 ab 0b                 a4 = a4 - a3
  8084: ab 2b 69 02              jump @410 if a4 != t0
      :                          @379
  8088: c9 5a 0b                 a4 = a3 - s0
  8091: 01                       fallthrough
      :                          @380
  8092: 82 8c                    a5 = u64 [a1]
  8094: ab ac ee                 jump @378 if a5 != a3
      :                          @381
  8097: 7b 8b                    u64 [a1] = a4
  8099: 33 06                    s1 = 0
  8101: 01                       fallthrough
      :                          @382
  8102: ab ac e6                 jump @378 if a5 != a3
      :                          @383
  8105: 28 54 02                 jump @410
      :                          @384 [@dyn 89]
  8108: 33 05 03                 s0 = 0x3
  8111: 95 17 50                 a0 = sp + 0x50
  8114: 33 08 03                 a1 = 0x3
  8117: 0a 0e                    ecalli 14 // 'solicit'
  8119: 7b 67 78                 u64 [s1 + 0x78] = a0
  8122: 88 77 01                 a0 = a0 <u 0x1
  8125: 97 77 01                 a0 = a0 << 0x1
  8128: 7b 17 10                 u64 [sp + 0x10] = a0
  8131: 95 17 40                 a0 = sp + 0x40
  8134: 7b 67 18                 u64 [s1 + 0x18] = a0
  8137: 33 08 16                 a1 = 0x16
  8140: 7b 68 20                 u64 [s1 + 0x20] = a1
  8143: 95 17 ff 07              a0 = sp + 0x7ff
  8147: 95 77 11 04              a0 = a0 + 0x411
  8151: 7b 67 28                 u64 [s1 + 0x28] = a0
  8154: 7b 18 20                 u64 [sp + 0x20] = a1
  8157: 7b 68 30                 u64 [s1 + 0x30] = a1
  8160: 33 07 f0 07 01           a0 = 0x107f0
  8165: 7b 17 98 01              u64 [sp + 0x198] = a0
  8169: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  8173: 49 21 b8 01              u64 [sp + 440] = 0
  8177: 95 17 ff 07              a0 = sp + 0x7ff
  8181: 95 77 b1 03              a0 = a0 + 0x3b1
  8185: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8189: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8194: 95 17 ff 07              a0 = sp + 0x7ff
  8198: 95 77 e1 03              a0 = a0 + 0x3e1
  8202: 95 18 98 01              a1 = sp + 0x198
  8206: 50 20 b4 00 22 1e        ra = 180, jump @766
      :                          @385 [@dyn 90]
  8212: 82 65 50                 s0 = u64 [s1 + 0x50]
  8215: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8218: 82 66 48                 s1 = u64 [s1 + 0x48]
  8221: 82 17 10                 a0 = u64 [sp + 0x10]
  8224: 33 08                    a1 = 0
  8226: 33 09                    a2 = 0
  8228: 64 5a                    a3 = s0
  8230: 33 00 b6 00              ra = 0xb6
  8234: 0a 64                    ecalli 100 // 'log'
  8236: 01                       fallthrough
      :                          @386 [@dyn 91]
  8237: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  8243: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
  8250: 53 47 01 10 00 ff 36     jump @392 if a0 <u 4278194177
      :                          @387
  8257: 64 52                    t0 = s0
  8259: 64 65                    s0 = s1
  8261: 33 07 40 00 03           a0 = 0x30040
  8266: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  8272: 33 09 ff ef ff 00        a2 = 0xffefff
  8278: 01                       fallthrough
      :                          @388
  8279: 82 8a                    a3 = u64 [a1]
  8281: c8 97 0b                 a4 = a0 + a2
  8284: c9 ab 0b                 a4 = a4 - a3
  8287: ab 2b 11                 jump @392 if a4 != t0
      :                          @389
  8290: c9 5a 0b                 a4 = a3 - s0
  8293: 01                       fallthrough
      :                          @390
  8294: 82 8c                    a5 = u64 [a1]
  8296: ab ac ef                 jump @388 if a5 != a3
      :                          @391
  8299: 7b 8b                    u64 [a1] = a4
  8301: 33 06                    s1 = 0
  8303: 01                       fallthrough
      :                          @392
  8304: 95 15 ff 07              s0 = sp + 0x7ff
  8308: 95 55 99 03              s0 = s0 + 0x399
  8312: 82 57 78                 a0 = u64 [s0 + 0x78]
  8315: 33 08 01                 a1 = 0x1
  8318: 50 20 b8 00 36 2b        ra = 184, jump @1044
      :                          @393 [@dyn 92]
  8324: 95 17 50                 a0 = sp + 0x50
  8327: 33 08 03                 a1 = 0x3
  8330: 0a 0d                    ecalli 13 // 'query'
  8332: 95 18 40                 a1 = sp + 0x40
  8335: 7b 58 18                 u64 [s0 + 0x18] = a1
  8338: 95 18 ff 07              a1 = sp + 0x7ff
  8342: 95 88 19 04              a1 = a1 + 0x419
  8346: 7b 58 28                 u64 [s0 + 0x28] = a1
  8349: 82 18 20                 a1 = u64 [sp + 0x20]
  8352: 7b 58 20                 u64 [s0 + 0x20] = a1
  8355: 7b 58 30                 u64 [s0 + 0x30] = a1
  8358: 33 08 50 08 01           a1 = 0x10850
  8363: 7b 18 98 01              u64 [sp + 0x198] = a1
  8367: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8372: 49 21 b8 01              u64 [sp + 440] = 0
  8376: 95 18 ff 07              a1 = sp + 0x7ff
  8380: 95 88 b1 03              a1 = a1 + 0x3b1
  8384: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  8388: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8393: 7b 57 80 00              u64 [s0 + 0x80] = a0
  8397: 88 77 01                 a0 = a0 <u 0x1
  8400: 97 77 01                 a0 = a0 << 0x1
  8403: 7b 17 20                 u64 [sp + 0x20] = a0
  8406: 95 17 ff 07              a0 = sp + 0x7ff
  8410: 95 77 e1 03              a0 = a0 + 0x3e1
  8414: 95 18 98 01              a1 = sp + 0x198
  8418: 50 20 ba 00 4e 1d        ra = 186, jump @766
      :                          @394 [@dyn 93]
  8424: 82 56 50                 s1 = u64 [s0 + 0x50]
  8427: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8430: 82 55 48                 s0 = u64 [s0 + 0x48]
  8433: 82 17 20                 a0 = u64 [sp + 0x20]
  8436: 33 08                    a1 = 0
  8438: 33 09                    a2 = 0
  8440: 64 6a                    a3 = s1
  8442: 33 00 bc 00              ra = 0xbc
  8446: 0a 64                    ecalli 100 // 'log'
  8448: 01                       fallthrough
      :                          @395 [@dyn 94]
  8449: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  8455: 82 18 10                 a1 = u64 [sp + 0x10]
  8458: ac 87 2e                 jump @401 if a0 <u a1
      :                          @396
  8461: 64 62                    t0 = s1
  8463: 33 07 40 00 03           a0 = 0x30040
  8468: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  8474: 33 09 ff ef ff 00        a2 = 0xffefff
  8480: 01                       fallthrough
      :                          @397
  8481: 82 8a                    a3 = u64 [a1]
  8483: c8 97 0b                 a4 = a0 + a2
  8486: c9 ab 0b                 a4 = a4 - a3
  8489: ab 2b 0f                 jump @401 if a4 != t0
      :                          @398
  8492: c9 5a 0b                 a4 = a3 - s0
  8495: 01                       fallthrough
      :                          @399
  8496: 82 8c                    a5 = u64 [a1]
  8498: ab ac ef                 jump @397 if a5 != a3
      :                          @400
  8501: 7b 8b                    u64 [a1] = a4
  8503: 01                       fallthrough
      :                          @401
  8504: 95 15 ff 07              s0 = sp + 0x7ff
  8508: 95 55 99 03              s0 = s0 + 0x399
  8512: 82 57 80 00              a0 = u64 [s0 + 0x80]
  8516: 33 08 02                 a1 = 0x2
  8519: 33 06 02                 s1 = 0x2
  8522: 50 20 be 00 6a 2a        ra = 190, jump @1044
      :                          @402 [@dyn 95]
  8528: 95 17 70                 a0 = sp + 0x70
  8531: 33 08 03                 a1 = 0x3
  8534: 0a 0d                    ecalli 13 // 'query'
  8536: 95 18 40                 a1 = sp + 0x40
  8539: 7b 58 18                 u64 [s0 + 0x18] = a1
  8542: 33 08 16                 a1 = 0x16
  8545: 7b 58 20                 u64 [s0 + 0x20] = a1
  8548: 7b 58 30                 u64 [s0 + 0x30] = a1
  8551: 33 08 98 08 01           a1 = 0x10898
  8556: 7b 18 98 01              u64 [sp + 0x198] = a1
  8560: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8565: 49 21 b8 01              u64 [sp + 440] = 0
  8569: 95 18 ff 07              a1 = sp + 0x7ff
  8573: 95 88 b1 03              a1 = a1 + 0x3b1
  8577: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  8581: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
  8585: 7b 57                    u64 [s0] = a0
  8587: 95 77 01                 a0 = a0 + 0x1
  8590: 88 77 01                 a0 = a0 <u 0x1
  8593: 97 77 01                 a0 = a0 << 0x1
  8596: 7b 17 20                 u64 [sp + 0x20] = a0
  8599: 7b 55 28                 u64 [s0 + 0x28] = s0
  8602: 95 17 ff 07              a0 = sp + 0x7ff
  8606: 95 77 e1 03              a0 = a0 + 0x3e1
  8610: 95 18 98 01              a1 = sp + 0x198
  8614: 50 20 c0 00 8a 1c        ra = 192, jump @766
      :                          @403 [@dyn 96]
  8620: 82 56 50                 s1 = u64 [s0 + 0x50]
  8623: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8626: 82 55 48                 s0 = u64 [s0 + 0x48]
  8629: 82 17 20                 a0 = u64 [sp + 0x20]
  8632: 33 08                    a1 = 0
  8634: 33 09                    a2 = 0
  8636: 64 6a                    a3 = s1
  8638: 33 00 c2 00              ra = 0xc2
  8642: 0a 64                    ecalli 100 // 'log'
  8644: 01                       fallthrough
      :                          @404 [@dyn 97]
  8645: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
  8651: 53 48 01 10 00 ff 32     jump @410 if a1 <u 4278194177
      :                          @405
  8658: 64 62                    t0 = s1
  8660: 33 07 40 00 03           a0 = 0x30040
  8665: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  8671: 33 09 ff ef ff 00        a2 = 0xffefff
  8677: 01                       fallthrough
      :                          @406
  8678: 82 8a                    a3 = u64 [a1]
  8680: c8 97 0b                 a4 = a0 + a2
  8683: c9 ab 0b                 a4 = a4 - a3
  8686: ab 2b 0f                 jump @410 if a4 != t0
      :                          @407
  8689: c9 5a 0b                 a4 = a3 - s0
  8692: 01                       fallthrough
      :                          @408
  8693: 82 8c                    a5 = u64 [a1]
  8695: ab ac ef                 jump @406 if a5 != a3
      :                          @409
  8698: 7b 8b                    u64 [a1] = a4
  8700: 01                       fallthrough
      :                          @410
  8701: 95 16 ff 07              s1 = sp + 0x7ff
  8705: 95 66 99 03              s1 = s1 + 0x399
  8709: 82 67                    a0 = u64 [s1]
  8711: 33 08 05                 a1 = 0x5
  8714: 33 00 6c 01              ra = 0x16c
  8718: 28 a6 29                 jump @1044
      :                          @411 [@dyn 98]
  8721: 33 05 03                 s0 = 0x3
  8724: 95 17 50                 a0 = sp + 0x50
  8727: 33 08 03                 a1 = 0x3
  8730: 0a 0f                    ecalli 15 // 'forget'
  8732: 7b 67 68                 u64 [s1 + 0x68] = a0
  8735: 88 77 01                 a0 = a0 <u 0x1
  8738: 97 77 01                 a0 = a0 << 0x1
  8741: 7b 17 10                 u64 [sp + 0x10] = a0
  8744: 95 17 40                 a0 = sp + 0x40
  8747: 7b 67 18                 u64 [s1 + 0x18] = a0
  8750: 33 08 16                 a1 = 0x16
  8753: 7b 68 20                 u64 [s1 + 0x20] = a1
  8756: 95 17 ff 07              a0 = sp + 0x7ff
  8760: 95 77 01 04              a0 = a0 + 0x401
  8764: 7b 67 28                 u64 [s1 + 0x28] = a0
  8767: 7b 18 20                 u64 [sp + 0x20] = a1
  8770: 7b 68 30                 u64 [s1 + 0x30] = a1
  8773: 33 07 e0 08 01           a0 = 0x108e0
  8778: 7b 17 98 01              u64 [sp + 0x198] = a0
  8782: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  8786: 49 21 b8 01              u64 [sp + 440] = 0
  8790: 95 17 ff 07              a0 = sp + 0x7ff
  8794: 95 77 b1 03              a0 = a0 + 0x3b1
  8798: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8802: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8807: 95 17 ff 07              a0 = sp + 0x7ff
  8811: 95 77 e1 03              a0 = a0 + 0x3e1
  8815: 95 18 98 01              a1 = sp + 0x198
  8819: 50 20 c6 00 bd 1b        ra = 198, jump @766
      :                          @412 [@dyn 99]
  8825: 82 65 50                 s0 = u64 [s1 + 0x50]
  8828: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8831: 82 66 48                 s1 = u64 [s1 + 0x48]
  8834: 82 17 10                 a0 = u64 [sp + 0x10]
  8837: 33 08                    a1 = 0
  8839: 33 09                    a2 = 0
  8841: 64 5a                    a3 = s0
  8843: 33 00 c8 00              ra = 0xc8
  8847: 0a 64                    ecalli 100 // 'log'
  8849: 01                       fallthrough
      :                          @413 [@dyn 100]
  8850: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  8856: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
  8863: 53 47 01 10 00 ff 36     jump @419 if a0 <u 4278194177
      :                          @414
  8870: 64 52                    t0 = s0
  8872: 64 65                    s0 = s1
  8874: 33 07 40 00 03           a0 = 0x30040
  8879: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  8885: 33 09 ff ef ff 00        a2 = 0xffefff
  8891: 01                       fallthrough
      :                          @415
  8892: 82 8a                    a3 = u64 [a1]
  8894: c8 97 0b                 a4 = a0 + a2
  8897: c9 ab 0b                 a4 = a4 - a3
  8900: ab 2b 11                 jump @419 if a4 != t0
      :                          @416
  8903: c9 5a 0b                 a4 = a3 - s0
  8906: 01                       fallthrough
      :                          @417
  8907: 82 8c                    a5 = u64 [a1]
  8909: ab ac ef                 jump @415 if a5 != a3
      :                          @418
  8912: 7b 8b                    u64 [a1] = a4
  8914: 33 06                    s1 = 0
  8916: 01                       fallthrough
      :                          @419
  8917: 95 15 ff 07              s0 = sp + 0x7ff
  8921: 95 55 99 03              s0 = s0 + 0x399
  8925: 82 57 68                 a0 = u64 [s0 + 0x68]
  8928: 33 08 01                 a1 = 0x1
  8931: 50 20 ca 00 d1 28        ra = 202, jump @1044
      :                          @420 [@dyn 101]
  8937: 95 17 50                 a0 = sp + 0x50
  8940: 33 08 03                 a1 = 0x3
  8943: 0a 0d                    ecalli 13 // 'query'
  8945: 95 18 40                 a1 = sp + 0x40
  8948: 7b 58 18                 u64 [s0 + 0x18] = a1
  8951: 95 18 ff 07              a1 = sp + 0x7ff
  8955: 95 88 09 04              a1 = a1 + 0x409
  8959: 7b 58 28                 u64 [s0 + 0x28] = a1
  8962: 82 18 20                 a1 = u64 [sp + 0x20]
  8965: 7b 58 20                 u64 [s0 + 0x20] = a1
  8968: 7b 58 30                 u64 [s0 + 0x30] = a1
  8971: 33 08 28 09 01           a1 = 0x10928
  8976: 7b 18 98 01              u64 [sp + 0x198] = a1
  8980: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8985: 49 21 b8 01              u64 [sp + 440] = 0
  8989: 95 18 ff 07              a1 = sp + 0x7ff
  8993: 95 88 b1 03              a1 = a1 + 0x3b1
  8997: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  9001: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9006: 7b 57 70                 u64 [s0 + 0x70] = a0
  9009: 8e 77                    a0 = a0 >u 0
  9011: 97 77 01                 a0 = a0 << 0x1
  9014: 7b 17 20                 u64 [sp + 0x20] = a0
  9017: 95 17 ff 07              a0 = sp + 0x7ff
  9021: 95 77 e1 03              a0 = a0 + 0x3e1
  9025: 95 18 98 01              a1 = sp + 0x198
  9029: 50 20 cc 00 eb 1a        ra = 204, jump @766
      :                          @421 [@dyn 102]
  9035: 82 56 50                 s1 = u64 [s0 + 0x50]
  9038: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9041: 82 55 48                 s0 = u64 [s0 + 0x48]
  9044: 82 17 20                 a0 = u64 [sp + 0x20]
  9047: 33 08                    a1 = 0
  9049: 33 09                    a2 = 0
  9051: 64 6a                    a3 = s1
  9053: 33 00 ce 00              ra = 0xce
  9057: 0a 64                    ecalli 100 // 'log'
  9059: 01                       fallthrough
      :                          @422 [@dyn 103]
  9060: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  9066: 82 18 10                 a1 = u64 [sp + 0x10]
  9069: ac 87 2e                 jump @428 if a0 <u a1
      :                          @423
  9072: 64 62                    t0 = s1
  9074: 33 07 40 00 03           a0 = 0x30040
  9079: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  9085: 33 09 ff ef ff 00        a2 = 0xffefff
  9091: 01                       fallthrough
      :                          @424
  9092: 82 8a                    a3 = u64 [a1]
  9094: c8 97 0b                 a4 = a0 + a2
  9097: c9 ab 0b                 a4 = a4 - a3
  9100: ab 2b 0f                 jump @428 if a4 != t0
      :                          @425
  9103: c9 5a 0b                 a4 = a3 - s0
  9106: 01                       fallthrough
      :                          @426
  9107: 82 8c                    a5 = u64 [a1]
  9109: ab ac ef                 jump @424 if a5 != a3
      :                          @427
  9112: 7b 8b                    u64 [a1] = a4
  9114: 01                       fallthrough
      :                          @428
  9115: 95 15 ff 07              s0 = sp + 0x7ff
  9119: 95 55 99 03              s0 = s0 + 0x399
  9123: 82 57 70                 a0 = u64 [s0 + 0x70]
  9126: 33 08 02                 a1 = 0x2
  9129: 33 06 02                 s1 = 0x2
  9132: 50 20 d0 00 08 28        ra = 208, jump @1044
      :                          @429 [@dyn 104]
  9138: 95 18 70                 a1 = sp + 0x70
  9141: 95 19 90 00              a2 = sp + 0x90
  9145: 33 0b 03                 a4 = 0x3
  9148: 82 17 30                 a0 = u64 [sp + 0x30]
  9151: 33 0a                    a3 = 0
  9153: 0a 01                    ecalli 1 // 'lookup'
  9155: 7b 57 78                 u64 [s0 + 0x78] = a0
  9158: 95 77 01                 a0 = a0 + 0x1
  9161: 88 77 01                 a0 = a0 <u 0x1
  9164: 97 77 01                 a0 = a0 << 0x1
  9167: 7b 17 10                 u64 [sp + 0x10] = a0
  9170: 95 17 40                 a0 = sp + 0x40
  9173: 7b 57 18                 u64 [s0 + 0x18] = a0
  9176: 33 09 16                 a2 = 0x16
  9179: 7b 59 20                 u64 [s0 + 0x20] = a2
  9182: 95 17 ff 07              a0 = sp + 0x7ff
  9186: 95 77 11 04              a0 = a0 + 0x411
  9190: 7b 57 28                 u64 [s0 + 0x28] = a0
  9193: 7b 19 20                 u64 [sp + 0x20] = a2
  9196: 7b 59 30                 u64 [s0 + 0x30] = a2
  9199: 33 07 70 09 01           a0 = 0x10970
  9204: 7b 17 98 01              u64 [sp + 0x198] = a0
  9208: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9213: 49 21 b8 01              u64 [sp + 440] = 0
  9217: 95 17 ff 07              a0 = sp + 0x7ff
  9221: 95 77 b1 03              a0 = a0 + 0x3b1
  9225: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9229: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
  9233: 95 17 ff 07              a0 = sp + 0x7ff
  9237: 95 77 e1 03              a0 = a0 + 0x3e1
  9241: 95 18 98 01              a1 = sp + 0x198
  9245: 50 20 d2 00 13 1a        ra = 210, jump @766
      :                          @430 [@dyn 105]
  9251: 82 56 50                 s1 = u64 [s0 + 0x50]
  9254: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9257: 82 55 48                 s0 = u64 [s0 + 0x48]
  9260: 82 17 10                 a0 = u64 [sp + 0x10]
  9263: 33 08                    a1 = 0
  9265: 33 09                    a2 = 0
  9267: 64 6a                    a3 = s1
  9269: 33 00 d4 00              ra = 0xd4
  9273: 0a 64                    ecalli 100 // 'log'
  9275: 01                       fallthrough
      :                          @431 [@dyn 106]
  9276: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  9282: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
  9289: 53 47 01 10 00 ff 34     jump @437 if a0 <u 4278194177
      :                          @432
  9296: 64 62                    t0 = s1
  9298: 33 07 40 00 03           a0 = 0x30040
  9303: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  9309: 33 09 ff ef ff 00        a2 = 0xffefff
  9315: 01                       fallthrough
      :                          @433
  9316: 82 8a                    a3 = u64 [a1]
  9318: c8 97 0b                 a4 = a0 + a2
  9321: c9 ab 0b                 a4 = a4 - a3
  9324: ab 2b 11                 jump @437 if a4 != t0
      :                          @434
  9327: c9 5a 0b                 a4 = a3 - s0
  9330: 01                       fallthrough
      :                          @435
  9331: 82 8c                    a5 = u64 [a1]
  9333: ab ac ef                 jump @433 if a5 != a3
      :                          @436
  9336: 7b 8b                    u64 [a1] = a4
  9338: 33 06                    s1 = 0
  9340: 01                       fallthrough
      :                          @437
  9341: 95 15 ff 07              s0 = sp + 0x7ff
  9345: 95 55 99 03              s0 = s0 + 0x399
  9349: 82 57 78                 a0 = u64 [s0 + 0x78]
  9352: 33 08 05                 a1 = 0x5
  9355: 50 20 d6 00 29 27        ra = 214, jump @1044
      :                          @438 [@dyn 107]
  9361: 33 07 e8 03              a0 = 0x3e8
  9365: 95 18 4a                 a1 = sp + 0x4a
  9368: 0a 06                    ecalli 6 // 'assign'
  9370: 95 18 40                 a1 = sp + 0x40
  9373: 7b 58 18                 u64 [s0 + 0x18] = a1
  9376: 95 18 ff 07              a1 = sp + 0x7ff
  9380: 95 88 19 04              a1 = a1 + 0x419
  9384: 7b 58 28                 u64 [s0 + 0x28] = a1
  9387: 82 18 20                 a1 = u64 [sp + 0x20]
  9390: 7b 58 20                 u64 [s0 + 0x20] = a1
  9393: 7b 58 30                 u64 [s0 + 0x30] = a1
  9396: 33 08 c0 09 01           a1 = 0x109c0
  9401: 7b 18 98 01              u64 [sp + 0x198] = a1
  9405: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9410: 49 21 b8 01              u64 [sp + 440] = 0
  9414: 95 18 ff 07              a1 = sp + 0x7ff
  9418: 95 88 b1 03              a1 = a1 + 0x3b1
  9422: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  9426: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9431: 7b 57 80 00              u64 [s0 + 0x80] = a0
  9435: 95 77 06                 a0 = a0 + 0x6
  9438: 88 77 01                 a0 = a0 <u 0x1
  9441: 97 77 01                 a0 = a0 << 0x1
  9444: 7b 17 20                 u64 [sp + 0x20] = a0
  9447: 95 17 ff 07              a0 = sp + 0x7ff
  9451: 95 77 e1 03              a0 = a0 + 0x3e1
  9455: 95 18 98 01              a1 = sp + 0x198
  9459: 50 20 d8 00 3d 19        ra = 216, jump @766
      :                          @439 [@dyn 108]
  9465: 82 56 50                 s1 = u64 [s0 + 0x50]
  9468: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9471: 82 55 48                 s0 = u64 [s0 + 0x48]
  9474: 82 17 20                 a0 = u64 [sp + 0x20]
  9477: 33 08                    a1 = 0
  9479: 33 09                    a2 = 0
  9481: 64 6a                    a3 = s1
  9483: 33 00 da 00              ra = 0xda
  9487: 0a 64                    ecalli 100 // 'log'
  9489: 01                       fallthrough
      :                          @440 [@dyn 109]
  9490: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  9496: 82 18 10                 a1 = u64 [sp + 0x10]
  9499: ac 87 2e                 jump @446 if a0 <u a1
      :                          @441
  9502: 64 62                    t0 = s1
  9504: 33 07 40 00 03           a0 = 0x30040
  9509: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  9515: 33 09 ff ef ff 00        a2 = 0xffefff
  9521: 01                       fallthrough
      :                          @442
  9522: 82 8a                    a3 = u64 [a1]
  9524: c8 97 0b                 a4 = a0 + a2
  9527: c9 ab 0b                 a4 = a4 - a3
  9530: ab 2b 0f                 jump @446 if a4 != t0
      :                          @443
  9533: c9 5a 0b                 a4 = a3 - s0
  9536: 01                       fallthrough
      :                          @444
  9537: 82 8c                    a5 = u64 [a1]
  9539: ab ac ef                 jump @442 if a5 != a3
      :                          @445
  9542: 7b 8b                    u64 [a1] = a4
  9544: 01                       fallthrough
      :                          @446
  9545: 95 16 ff 07              s1 = sp + 0x7ff
  9549: 95 66 99 03              s1 = s1 + 0x399
  9553: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9557: 33 08 06                 a1 = 0x6
  9560: 50 20 dc 00 5c 26        ra = 220, jump @1044
      :                          @447 [@dyn 110]
  9566: 33 07 9a 02              a0 = 0x29a
  9570: 95 18 50                 a1 = sp + 0x50
  9573: 33 09 03                 a2 = 0x3
  9576: 0a 1b                    ecalli 27 // 'provide'
  9578: 7b 17 20                 u64 [sp + 0x20] = a0
  9581: 95 77 04                 a0 = a0 + 0x4
  9584: 88 77 01                 a0 = a0 <u 0x1
  9587: 97 77 01                 a0 = a0 << 0x1
  9590: 7b 17 08                 u64 [sp + 0x8] = a0
  9593: 95 17 ff 07              a0 = sp + 0x7ff
  9597: 95 77 09 04              a0 = a0 + 0x409
  9601: 7b 67 48                 u64 [s1 + 0x48] = a0
  9604: 33 07 16                 a0 = 0x16
  9607: 7b 17 10                 u64 [sp + 0x10] = a0
  9610: 7b 67 50                 u64 [s1 + 0x50] = a0
  9613: 33 07 28 0a 01           a0 = 0x10a28
  9618: 7b 17 98 01              u64 [sp + 0x198] = a0
  9622: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  9627: 49 21 b8 01              u64 [sp + 440] = 0
  9631: 95 17 ff 07              a0 = sp + 0x7ff
  9635: 95 77 e1 03              a0 = a0 + 0x3e1
  9639: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9643: 49 21 b0 01 01           u64 [sp + 432] = 0x1
  9648: 95 17 ff 07              a0 = sp + 0x7ff
  9652: 95 77 b1 03              a0 = a0 + 0x3b1
  9656: 95 18 98 01              a1 = sp + 0x198
  9660: 50 20 de 00 74 18        ra = 222, jump @766
      :                          @448 [@dyn 111]
  9666: 82 65 20                 s0 = u64 [s1 + 0x20]
  9669: 82 6b 28                 a4 = u64 [s1 + 0x28]
  9672: 82 66 18                 s1 = u64 [s1 + 0x18]
  9675: 82 17 08                 a0 = u64 [sp + 0x8]
  9678: 33 08                    a1 = 0
  9680: 33 09                    a2 = 0
  9682: 64 5a                    a3 = s0
  9684: 33 00 e0 00              ra = 0xe0
  9688: 0a 64                    ecalli 100 // 'log'
  9690: 01                       fallthrough
      :                          @449 [@dyn 112]
  9691: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  9697: 49 11 08 01 10 00 ff     u64 [sp + 8] = 0xffffffffff001001
  9704: 53 47 01 10 00 ff 34     jump @455 if a0 <u 4278194177
      :                          @450
  9711: 64 52                    t0 = s0
  9713: 33 07 40 00 03           a0 = 0x30040
  9718: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  9724: 33 09 ff ef ff 00        a2 = 0xffefff
  9730: 01                       fallthrough
      :                          @451
  9731: 82 8a                    a3 = u64 [a1]
  9733: c8 97 0b                 a4 = a0 + a2
  9736: c9 ab 0b                 a4 = a4 - a3
  9739: ab 2b 11                 jump @455 if a4 != t0
      :                          @452
  9742: c9 6a 0b                 a4 = a3 - s1
  9745: 01                       fallthrough
      :                          @453
  9746: 82 8c                    a5 = u64 [a1]
  9748: ab ac ef                 jump @451 if a5 != a3
      :                          @454
  9751: 7b 8b                    u64 [a1] = a4
  9753: 33 05                    s0 = 0
  9755: 01                       fallthrough
      :                          @455
  9756: 33 08 07                 a1 = 0x7
  9759: 82 17 20                 a0 = u64 [sp + 0x20]
  9762: 50 20 e2 00 92 25        ra = 226, jump @1044
      :                          @456 [@dyn 113]
  9768: 95 18 50                 a1 = sp + 0x50
  9771: 33 09 03                 a2 = 0x3
  9774: 82 17 30                 a0 = u64 [sp + 0x30]
  9777: 0a 1b                    ecalli 27 // 'provide'
  9779: 95 16 ff 07              s1 = sp + 0x7ff
  9783: 95 66 99 03              s1 = s1 + 0x399
  9787: 82 18 10                 a1 = u64 [sp + 0x10]
  9790: 7b 68 50                 u64 [s1 + 0x50] = a1
  9793: 33 08 80 0a 01           a1 = 0x10a80
  9798: 7b 18 98 01              u64 [sp + 0x198] = a1
  9802: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  9807: 49 21 b8 01              u64 [sp + 440] = 0
  9811: 95 18 ff 07              a1 = sp + 0x7ff
  9815: 95 88 e1 03              a1 = a1 + 0x3e1
  9819: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  9823: 49 21 b0 01 01           u64 [sp + 432] = 0x1
  9828: 7b 67                    u64 [s1] = a0
  9830: 88 77 01                 a0 = a0 <u 0x1
  9833: 97 77 01                 a0 = a0 << 0x1
  9836: 7b 17 10                 u64 [sp + 0x10] = a0
  9839: 7b 66 48                 u64 [s1 + 0x48] = s1
  9842: 95 17 ff 07              a0 = sp + 0x7ff
  9846: 95 77 b1 03              a0 = a0 + 0x3b1
  9850: 95 18 98 01              a1 = sp + 0x198
  9854: 50 20 e4 00 b2 17        ra = 228, jump @766
      :                          @457 [@dyn 114]
  9860: 82 65 20                 s0 = u64 [s1 + 0x20]
  9863: 82 6b 28                 a4 = u64 [s1 + 0x28]
  9866: 82 66 18                 s1 = u64 [s1 + 0x18]
  9869: 82 17 10                 a0 = u64 [sp + 0x10]
  9872: 33 08                    a1 = 0
  9874: 33 09                    a2 = 0
  9876: 64 5a                    a3 = s0
  9878: 33 00 e6 00              ra = 0xe6
  9882: 0a 64                    ecalli 100 // 'log'
  9884: 01                       fallthrough
      :                          @458 [@dyn 115]
  9885: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
  9891: 82 18 08                 a1 = u64 [sp + 0x8]
  9894: ac 87 30                 jump @464 if a0 <u a1
      :                          @459
  9897: 64 52                    t0 = s0
  9899: 33 07 40 00 03           a0 = 0x30040
  9904: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  9910: 33 09 ff ef ff 00        a2 = 0xffefff
  9916: 01                       fallthrough
      :                          @460
  9917: 82 8a                    a3 = u64 [a1]
  9919: c8 97 0b                 a4 = a0 + a2
  9922: c9 ab 0b                 a4 = a4 - a3
  9925: ab 2b 11                 jump @464 if a4 != t0
      :                          @461
  9928: c9 6a 0b                 a4 = a3 - s1
  9931: 01                       fallthrough
      :                          @462
  9932: 82 8c                    a5 = u64 [a1]
  9934: ab ac ef                 jump @460 if a5 != a3
      :                          @463
  9937: 7b 8b                    u64 [a1] = a4
  9939: 33 05                    s0 = 0
  9941: 01                       fallthrough
      :                          @464
  9942: 33 08 08                 a1 = 0x8
  9945: 82 17 20                 a0 = u64 [sp + 0x20]
  9948: 50 20 e8 00 d8 24        ra = 232, jump @1044
      :                          @465 [@dyn 116]
  9954: 95 16 ff 07              s1 = sp + 0x7ff
  9958: 95 66 99 03              s1 = s1 + 0x399
  9962: 28 87 11                 jump @661
      :                          @466 [@dyn 117]
  9965: 33 05 03                 s0 = 0x3
  9968: 95 18 50                 a1 = sp + 0x50
  9971: 95 19 90 00              a2 = sp + 0x90
  9975: 33 0b 03                 a4 = 0x3
  9978: 82 17 30                 a0 = u64 [sp + 0x30]
  9981: 33 0a                    a3 = 0
  9983: 0a 01                    ecalli 1 // 'lookup'
  9985: 7b 17 90 01              u64 [sp + 0x190] = a0
  9989: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  9992: 88 77 01                 a0 = a0 <u 0x1
  9995: 97 77 01                 a0 = a0 << 0x1
  9998: 7b 17 10                 u64 [sp + 0x10] = a0
 10001: 95 17 40                 a0 = sp + 0x40
 10004: 7b 67 18                 u64 [s1 + 0x18] = a0
 10007: 33 08 16                 a1 = 0x16
 10010: 7b 68 20                 u64 [s1 + 0x20] = a1
 10013: 95 17 90 01              a0 = sp + 0x190
 10017: 7b 67 28                 u64 [s1 + 0x28] = a0
 10020: 7b 18 20                 u64 [sp + 0x20] = a1
 10023: 7b 68 30                 u64 [s1 + 0x30] = a1
 10026: 33 07 b8 0a 01           a0 = 0x10ab8
 10031: 7b 17 98 01              u64 [sp + 0x198] = a0
 10035: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 10039: 49 21 b8 01              u64 [sp + 440] = 0
 10043: 95 17 ff 07              a0 = sp + 0x7ff
 10047: 95 77 b1 03              a0 = a0 + 0x3b1
 10051: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10055: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10060: 95 17 ff 07              a0 = sp + 0x7ff
 10064: 95 77 e1 03              a0 = a0 + 0x3e1
 10068: 95 18 98 01              a1 = sp + 0x198
 10072: 50 20 ec 00 d8 16        ra = 236, jump @766
      :                          @467 [@dyn 118]
 10078: 82 65 50                 s0 = u64 [s1 + 0x50]
 10081: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10084: 82 66 48                 s1 = u64 [s1 + 0x48]
 10087: 82 17 10                 a0 = u64 [sp + 0x10]
 10090: 33 08                    a1 = 0
 10092: 33 09                    a2 = 0
 10094: 64 5a                    a3 = s0
 10096: 33 00 ee 00              ra = 0xee
 10100: 0a 64                    ecalli 100 // 'log'
 10102: 01                       fallthrough
      :                          @468 [@dyn 119]
 10103: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
 10109: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 10116: 53 47 01 10 00 ff 36     jump @474 if a0 <u 4278194177
      :                          @469
 10123: 64 52                    t0 = s0
 10125: 64 65                    s0 = s1
 10127: 33 07 40 00 03           a0 = 0x30040
 10132: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 10138: 33 09 ff ef ff 00        a2 = 0xffefff
 10144: 01                       fallthrough
      :                          @470
 10145: 82 8a                    a3 = u64 [a1]
 10147: c8 97 0b                 a4 = a0 + a2
 10150: c9 ab 0b                 a4 = a4 - a3
 10153: ab 2b 11                 jump @474 if a4 != t0
      :                          @471
 10156: c9 5a 0b                 a4 = a3 - s0
 10159: 01                       fallthrough
      :                          @472
 10160: 82 8c                    a5 = u64 [a1]
 10162: ab ac ef                 jump @470 if a5 != a3
      :                          @473
 10165: 7b 8b                    u64 [a1] = a4
 10167: 33 06                    s1 = 0
 10169: 01                       fallthrough
      :                          @474
 10170: 82 17 90 01              a0 = u64 [sp + 0x190]
 10174: 33 08 01                 a1 = 0x1
 10177: 50 20 f0 00 f3 23        ra = 240, jump @1044
      :                          @475 [@dyn 120]
 10183: 95 17 50                 a0 = sp + 0x50
 10186: 33 08 03                 a1 = 0x3
 10189: 0a 0d                    ecalli 13 // 'query'
 10191: 95 16 ff 07              s1 = sp + 0x7ff
 10195: 95 66 99 03              s1 = s1 + 0x399
 10199: 95 18 40                 a1 = sp + 0x40
 10202: 7b 68 18                 u64 [s1 + 0x18] = a1
 10205: 95 18 ff 07              a1 = sp + 0x7ff
 10209: 95 88 01 04              a1 = a1 + 0x401
 10213: 7b 68 28                 u64 [s1 + 0x28] = a1
 10216: 82 18 20                 a1 = u64 [sp + 0x20]
 10219: 7b 68 20                 u64 [s1 + 0x20] = a1
 10222: 7b 68 30                 u64 [s1 + 0x30] = a1
 10225: 33 08 28 09 01           a1 = 0x10928
 10230: 7b 18 98 01              u64 [sp + 0x198] = a1
 10234: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10239: 49 21 b8 01              u64 [sp + 440] = 0
 10243: 95 18 ff 07              a1 = sp + 0x7ff
 10247: 95 88 b1 03              a1 = a1 + 0x3b1
 10251: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 10255: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10260: 7b 67 68                 u64 [s1 + 0x68] = a0
 10263: 8e 77                    a0 = a0 >u 0
 10265: 97 77 01                 a0 = a0 << 0x1
 10268: 7b 17 20                 u64 [sp + 0x20] = a0
 10271: 95 17 ff 07              a0 = sp + 0x7ff
 10275: 95 77 e1 03              a0 = a0 + 0x3e1
 10279: 95 18 98 01              a1 = sp + 0x198
 10283: 50 20 f2 00 05 16        ra = 242, jump @766
      :                          @476 [@dyn 121]
 10289: 82 65 50                 s0 = u64 [s1 + 0x50]
 10292: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10295: 82 66 48                 s1 = u64 [s1 + 0x48]
 10298: 82 17 20                 a0 = u64 [sp + 0x20]
 10301: 33 08                    a1 = 0
 10303: 33 09                    a2 = 0
 10305: 64 5a                    a3 = s0
 10307: 33 00 f4 00              ra = 0xf4
 10311: 0a 64                    ecalli 100 // 'log'
 10313: 01                       fallthrough
      :                          @477 [@dyn 122]
 10314: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
 10320: 82 18 10                 a1 = u64 [sp + 0x10]
 10323: ac 87 30                 jump @483 if a0 <u a1
      :                          @478
 10326: 64 52                    t0 = s0
 10328: 64 65                    s0 = s1
 10330: 33 07 40 00 03           a0 = 0x30040
 10335: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 10341: 33 09 ff ef ff 00        a2 = 0xffefff
 10347: 01                       fallthrough
      :                          @479
 10348: 82 8a                    a3 = u64 [a1]
 10350: c8 97 0b                 a4 = a0 + a2
 10353: c9 ab 0b                 a4 = a4 - a3
 10356: ab 2b 0f                 jump @483 if a4 != t0
      :                          @480
 10359: c9 5a 0b                 a4 = a3 - s0
 10362: 01                       fallthrough
      :                          @481
 10363: 82 8c                    a5 = u64 [a1]
 10365: ab ac ef                 jump @479 if a5 != a3
      :                          @482
 10368: 7b 8b                    u64 [a1] = a4
 10370: 01                       fallthrough
      :                          @483
 10371: 95 15 ff 07              s0 = sp + 0x7ff
 10375: 95 55 99 03              s0 = s0 + 0x399
 10379: 82 57 68                 a0 = u64 [s0 + 0x68]
 10382: 33 08 02                 a1 = 0x2
 10385: 33 06 02                 s1 = 0x2
 10388: 50 20 f6 00 20 23        ra = 246, jump @1044
      :                          @484 [@dyn 123]
 10394: 95 18 50                 a1 = sp + 0x50
 10397: 82 17 30                 a0 = u64 [sp + 0x30]
 10400: 0a 0c                    ecalli 12 // 'eject'
 10402: 7b 57 70                 u64 [s0 + 0x70] = a0
 10405: 95 77 04                 a0 = a0 + 0x4
 10408: 88 77 01                 a0 = a0 <u 0x1
 10411: 97 77 01                 a0 = a0 << 0x1
 10414: 7b 17 10                 u64 [sp + 0x10] = a0
 10417: 95 17 40                 a0 = sp + 0x40
 10420: 7b 57 18                 u64 [s0 + 0x18] = a0
 10423: 33 08 16                 a1 = 0x16
 10426: 7b 58 20                 u64 [s0 + 0x20] = a1
 10429: 95 17 ff 07              a0 = sp + 0x7ff
 10433: 95 77 09 04              a0 = a0 + 0x409
 10437: 7b 57 28                 u64 [s0 + 0x28] = a0
 10440: 7b 18 20                 u64 [sp + 0x20] = a1
 10443: 7b 58 30                 u64 [s0 + 0x30] = a1
 10446: 33 07 00 0b 01           a0 = 0x10b00
 10451: 7b 17 98 01              u64 [sp + 0x198] = a0
 10455: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10460: 49 21 b8 01              u64 [sp + 440] = 0
 10464: 95 17 ff 07              a0 = sp + 0x7ff
 10468: 95 77 b1 03              a0 = a0 + 0x3b1
 10472: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10476: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
 10480: 95 17 ff 07              a0 = sp + 0x7ff
 10484: 95 77 e1 03              a0 = a0 + 0x3e1
 10488: 95 18 98 01              a1 = sp + 0x198
 10492: 50 20 f8 00 34 15        ra = 248, jump @766
      :                          @485 [@dyn 124]
 10498: 82 56 50                 s1 = u64 [s0 + 0x50]
 10501: 82 5b 58                 a4 = u64 [s0 + 0x58]
 10504: 82 55 48                 s0 = u64 [s0 + 0x48]
 10507: 82 17 10                 a0 = u64 [sp + 0x10]
 10510: 33 08                    a1 = 0
 10512: 33 09                    a2 = 0
 10514: 64 6a                    a3 = s1
 10516: 33 00 fa 00              ra = 0xfa
 10520: 0a 64                    ecalli 100 // 'log'
 10522: 01                       fallthrough
      :                          @486 [@dyn 125]
 10523: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 10529: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 10536: 53 47 01 10 00 ff 34     jump @492 if a0 <u 4278194177
      :                          @487
 10543: 64 62                    t0 = s1
 10545: 33 07 40 00 03           a0 = 0x30040
 10550: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 10556: 33 09 ff ef ff 00        a2 = 0xffefff
 10562: 01                       fallthrough
      :                          @488
 10563: 82 8a                    a3 = u64 [a1]
 10565: c8 97 0b                 a4 = a0 + a2
 10568: c9 ab 0b                 a4 = a4 - a3
 10571: ab 2b 11                 jump @492 if a4 != t0
      :                          @489
 10574: c9 5a 0b                 a4 = a3 - s0
 10577: 01                       fallthrough
      :                          @490
 10578: 82 8c                    a5 = u64 [a1]
 10580: ab ac ef                 jump @488 if a5 != a3
      :                          @491
 10583: 7b 8b                    u64 [a1] = a4
 10585: 33 06                    s1 = 0
 10587: 01                       fallthrough
      :                          @492
 10588: 95 15 ff 07              s0 = sp + 0x7ff
 10592: 95 55 99 03              s0 = s0 + 0x399
 10596: 82 57 70                 a0 = u64 [s0 + 0x70]
 10599: 33 08 05                 a1 = 0x5
 10602: 50 20 fc 00 4a 22        ra = 252, jump @1044
      :                          @493 [@dyn 126]
 10608: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
 10618: 95 1a 50                 a3 = sp + 0x50
 10621: 33 08                    a1 = 0
 10623: 33 09                    a2 = 0
 10625: 33 0b                    a4 = 0
 10627: 0a 05                    ecalli 5 // 'bless'
 10629: 95 18 40                 a1 = sp + 0x40
 10632: 7b 58 18                 u64 [s0 + 0x18] = a1
 10635: 95 18 ff 07              a1 = sp + 0x7ff
 10639: 95 88 11 04              a1 = a1 + 0x411
 10643: 7b 58 28                 u64 [s0 + 0x28] = a1
 10646: 82 18 20                 a1 = u64 [sp + 0x20]
 10649: 7b 58 20                 u64 [s0 + 0x20] = a1
 10652: 7b 58 30                 u64 [s0 + 0x30] = a1
 10655: 33 08 30 0b 01           a1 = 0x10b30
 10660: 7b 18 98 01              u64 [sp + 0x198] = a1
 10664: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10669: 49 21 b8 01              u64 [sp + 440] = 0
 10673: 95 18 ff 07              a1 = sp + 0x7ff
 10677: 95 88 b1 03              a1 = a1 + 0x3b1
 10681: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 10685: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10690: 7b 57 78                 u64 [s0 + 0x78] = a0
 10693: 95 77 04                 a0 = a0 + 0x4
 10696: 88 77 01                 a0 = a0 <u 0x1
 10699: 97 77 01                 a0 = a0 << 0x1
 10702: 7b 17 20                 u64 [sp + 0x20] = a0
 10705: 95 17 ff 07              a0 = sp + 0x7ff
 10709: 95 77 e1 03              a0 = a0 + 0x3e1
 10713: 95 18 98 01              a1 = sp + 0x198
 10717: 50 20 fe 00 53 14        ra = 254, jump @766
      :                          @494 [@dyn 127]
 10723: 82 56 50                 s1 = u64 [s0 + 0x50]
 10726: 82 5b 58                 a4 = u64 [s0 + 0x58]
 10729: 82 55 48                 s0 = u64 [s0 + 0x48]
 10732: 82 17 20                 a0 = u64 [sp + 0x20]
 10735: 33 08                    a1 = 0
 10737: 33 09                    a2 = 0
 10739: 64 6a                    a3 = s1
 10741: 33 00 00 01              ra = 0x100
 10745: 0a 64                    ecalli 100 // 'log'
 10747: 01                       fallthrough
      :                          @495 [@dyn 128]
 10748: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 10754: 82 18 10                 a1 = u64 [sp + 0x10]
 10757: ac 87 30                 jump @501 if a0 <u a1
      :                          @496
 10760: 64 62                    t0 = s1
 10762: 33 07 40 00 03           a0 = 0x30040
 10767: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 10773: 33 09 ff ef ff 00        a2 = 0xffefff
 10779: 01                       fallthrough
      :                          @497
 10780: 82 8a                    a3 = u64 [a1]
 10782: c8 97 0b                 a4 = a0 + a2
 10785: c9 ab 0b                 a4 = a4 - a3
 10788: ab 2b 11                 jump @501 if a4 != t0
      :                          @498
 10791: c9 5a 0b                 a4 = a3 - s0
 10794: 01                       fallthrough
      :                          @499
 10795: 82 8c                    a5 = u64 [a1]
 10797: ab ac ef                 jump @497 if a5 != a3
      :                          @500
 10800: 7b 8b                    u64 [a1] = a4
 10802: 33 06                    s1 = 0
 10804: 01                       fallthrough
      :                          @501
 10805: 95 15 ff 07              s0 = sp + 0x7ff
 10809: 95 55 99 03              s0 = s0 + 0x399
 10813: 82 57 78                 a0 = u64 [s0 + 0x78]
 10816: 33 08 06                 a1 = 0x6
 10819: 50 20 02 01 71 21        ra = 258, jump @1044
      :                          @502 [@dyn 129]
 10825: 95 18 50                 a1 = sp + 0x50
 10828: 33 09 03                 a2 = 0x3
 10831: 82 17 30                 a0 = u64 [sp + 0x30]
 10834: 0a 1b                    ecalli 27 // 'provide'
 10836: 7b 57 80 00              u64 [s0 + 0x80] = a0
 10840: 88 77 01                 a0 = a0 <u 0x1
 10843: 97 77 01                 a0 = a0 << 0x1
 10846: 7b 17 10                 u64 [sp + 0x10] = a0
 10849: 95 17 ff 07              a0 = sp + 0x7ff
 10853: 95 77 19 04              a0 = a0 + 0x419
 10857: 7b 57 48                 u64 [s0 + 0x48] = a0
 10860: 33 07 16                 a0 = 0x16
 10863: 7b 17 20                 u64 [sp + 0x20] = a0
 10866: 7b 57 50                 u64 [s0 + 0x50] = a0
 10869: 33 07 60 0b 01           a0 = 0x10b60
 10874: 7b 17 98 01              u64 [sp + 0x198] = a0
 10878: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 10883: 49 21 b8 01              u64 [sp + 440] = 0
 10887: 95 17 ff 07              a0 = sp + 0x7ff
 10891: 95 77 e1 03              a0 = a0 + 0x3e1
 10895: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10899: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 10904: 95 17 ff 07              a0 = sp + 0x7ff
 10908: 95 77 b1 03              a0 = a0 + 0x3b1
 10912: 95 18 98 01              a1 = sp + 0x198
 10916: 50 20 04 01 8c 13        ra = 260, jump @766
      :                          @503 [@dyn 130]
 10922: 82 56 20                 s1 = u64 [s0 + 0x20]
 10925: 82 5b 28                 a4 = u64 [s0 + 0x28]
 10928: 82 55 18                 s0 = u64 [s0 + 0x18]
 10931: 82 17 10                 a0 = u64 [sp + 0x10]
 10934: 33 08                    a1 = 0
 10936: 33 09                    a2 = 0
 10938: 64 6a                    a3 = s1
 10940: 33 00 06 01              ra = 0x106
 10944: 0a 64                    ecalli 100 // 'log'
 10946: 01                       fallthrough
      :                          @504 [@dyn 131]
 10947: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 10953: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 10960: 53 47 01 10 00 ff 34     jump @510 if a0 <u 4278194177
      :                          @505
 10967: 64 62                    t0 = s1
 10969: 33 07 40 00 03           a0 = 0x30040
 10974: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 10980: 33 09 ff ef ff 00        a2 = 0xffefff
 10986: 01                       fallthrough
      :                          @506
 10987: 82 8a                    a3 = u64 [a1]
 10989: c8 97 0b                 a4 = a0 + a2
 10992: c9 ab 0b                 a4 = a4 - a3
 10995: ab 2b 11                 jump @510 if a4 != t0
      :                          @507
 10998: c9 5a 0b                 a4 = a3 - s0
 11001: 01                       fallthrough
      :                          @508
 11002: 82 8c                    a5 = u64 [a1]
 11004: ab ac ef                 jump @506 if a5 != a3
      :                          @509
 11007: 7b 8b                    u64 [a1] = a4
 11009: 33 06                    s1 = 0
 11011: 01                       fallthrough
      :                          @510
 11012: 95 15 ff 07              s0 = sp + 0x7ff
 11016: 95 55 99 03              s0 = s0 + 0x399
 11020: 82 57 80 00              a0 = u64 [s0 + 0x80]
 11024: 33 08 07                 a1 = 0x7
 11027: 50 20 08 01 a1 20        ra = 264, jump @1044
      :                          @511 [@dyn 132]
 11033: 95 18 50                 a1 = sp + 0x50
 11036: 33 09 03                 a2 = 0x3
 11039: 82 17 30                 a0 = u64 [sp + 0x30]
 11042: 0a 1b                    ecalli 27 // 'provide'
 11044: 82 18 20                 a1 = u64 [sp + 0x20]
 11047: 7b 58 50                 u64 [s0 + 0x50] = a1
 11050: 33 08 a8 0b 01           a1 = 0x10ba8
 11055: 7b 18 98 01              u64 [sp + 0x198] = a1
 11059: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 11064: 49 21 b8 01              u64 [sp + 440] = 0
 11068: 95 18 ff 07              a1 = sp + 0x7ff
 11072: 95 88 e1 03              a1 = a1 + 0x3e1
 11076: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 11080: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 11085: 7b 57                    u64 [s0] = a0
 11087: 95 77 09                 a0 = a0 + 0x9
 11090: 88 77 01                 a0 = a0 <u 0x1
 11093: 97 77 01                 a0 = a0 << 0x1
 11096: 7b 17 20                 u64 [sp + 0x20] = a0
 11099: 7b 55 48                 u64 [s0 + 0x48] = s0
 11102: 95 17 ff 07              a0 = sp + 0x7ff
 11106: 95 77 b1 03              a0 = a0 + 0x3b1
 11110: 95 18 98 01              a1 = sp + 0x198
 11114: 50 20 0a 01 c6 12        ra = 266, jump @766
      :                          @512 [@dyn 133]
 11120: 82 56 20                 s1 = u64 [s0 + 0x20]
 11123: 82 5b 28                 a4 = u64 [s0 + 0x28]
 11126: 82 55 18                 s0 = u64 [s0 + 0x18]
 11129: 82 17 20                 a0 = u64 [sp + 0x20]
 11132: 33 08                    a1 = 0
 11134: 33 09                    a2 = 0
 11136: 64 6a                    a3 = s1
 11138: 33 00 0c 01              ra = 0x10c
 11142: 0a 64                    ecalli 100 // 'log'
 11144: 01                       fallthrough
      :                          @513 [@dyn 134]
 11145: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 11151: 82 18 10                 a1 = u64 [sp + 0x10]
 11154: ac 87 2e                 jump @519 if a0 <u a1
      :                          @514
 11157: 64 62                    t0 = s1
 11159: 33 07 40 00 03           a0 = 0x30040
 11164: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 11170: 33 09 ff ef ff 00        a2 = 0xffefff
 11176: 01                       fallthrough
      :                          @515
 11177: 82 8a                    a3 = u64 [a1]
 11179: c8 97 0b                 a4 = a0 + a2
 11182: c9 ab 0b                 a4 = a4 - a3
 11185: ab 2b 0f                 jump @519 if a4 != t0
      :                          @516
 11188: c9 5a 0b                 a4 = a3 - s0
 11191: 01                       fallthrough
      :                          @517
 11192: 82 8c                    a5 = u64 [a1]
 11194: ab ac ef                 jump @515 if a5 != a3
      :                          @518
 11197: 7b 8b                    u64 [a1] = a4
 11199: 01                       fallthrough
      :                          @519
 11200: 95 16 ff 07              s1 = sp + 0x7ff
 11204: 95 66 99 03              s1 = s1 + 0x399
 11208: 82 67                    a0 = u64 [s1]
 11210: 33 08 08                 a1 = 0x8
 11213: 33 00 6c 01              ra = 0x16c
 11217: 28 e3 1f                 jump @1044
      :                          @520 [@dyn 135]
 11220: 33 05 03                 s0 = 0x3
 11223: 95 17 50                 a0 = sp + 0x50
 11226: 33 08 03                 a1 = 0x3
 11229: 0a 0e                    ecalli 14 // 'solicit'
 11231: 7b 67 70                 u64 [s1 + 0x70] = a0
 11234: 33 08 01                 a1 = 0x1
 11237: 50 20 10 01 cf 1f        ra = 272, jump @1044
      :                          @521 [@dyn 136]
 11243: 82 67 70                 a0 = u64 [s1 + 0x70]
 11246: 88 77 01                 a0 = a0 <u 0x1
 11249: 97 77 01                 a0 = a0 << 0x1
 11252: 7b 17 10                 u64 [sp + 0x10] = a0
 11255: 95 17 40                 a0 = sp + 0x40
 11258: 7b 67 18                 u64 [s1 + 0x18] = a0
 11261: 33 08 16                 a1 = 0x16
 11264: 7b 68 20                 u64 [s1 + 0x20] = a1
 11267: 95 17 ff 07              a0 = sp + 0x7ff
 11271: 95 77 09 04              a0 = a0 + 0x409
 11275: 7b 67 28                 u64 [s1 + 0x28] = a0
 11278: 7b 18 20                 u64 [sp + 0x20] = a1
 11281: 7b 68 30                 u64 [s1 + 0x30] = a1
 11284: 33 07 f0 07 01           a0 = 0x107f0
 11289: 7b 17 98 01              u64 [sp + 0x198] = a0
 11293: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 11297: 49 21 b8 01              u64 [sp + 440] = 0
 11301: 95 17 ff 07              a0 = sp + 0x7ff
 11305: 95 77 b1 03              a0 = a0 + 0x3b1
 11309: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11313: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11318: 95 17 ff 07              a0 = sp + 0x7ff
 11322: 95 77 e1 03              a0 = a0 + 0x3e1
 11326: 95 18 98 01              a1 = sp + 0x198
 11330: 50 20 12 01 ee 11        ra = 274, jump @766
      :                          @522 [@dyn 137]
 11336: 82 65 50                 s0 = u64 [s1 + 0x50]
 11339: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11342: 82 66 48                 s1 = u64 [s1 + 0x48]
 11345: 82 17 10                 a0 = u64 [sp + 0x10]
 11348: 33 08                    a1 = 0
 11350: 33 09                    a2 = 0
 11352: 64 5a                    a3 = s0
 11354: 33 00 14 01              ra = 0x114
 11358: 0a 64                    ecalli 100 // 'log'
 11360: 01                       fallthrough
      :                          @523 [@dyn 138]
 11361: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
 11367: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 11374: 53 47 01 10 00 ff 36     jump @529 if a0 <u 4278194177
      :                          @524
 11381: 64 52                    t0 = s0
 11383: 64 65                    s0 = s1
 11385: 33 07 40 00 03           a0 = 0x30040
 11390: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 11396: 33 09 ff ef ff 00        a2 = 0xffefff
 11402: 01                       fallthrough
      :                          @525
 11403: 82 8a                    a3 = u64 [a1]
 11405: c8 97 0b                 a4 = a0 + a2
 11408: c9 ab 0b                 a4 = a4 - a3
 11411: ab 2b 11                 jump @529 if a4 != t0
      :                          @526
 11414: c9 5a 0b                 a4 = a3 - s0
 11417: 01                       fallthrough
      :                          @527
 11418: 82 8c                    a5 = u64 [a1]
 11420: ab ac ef                 jump @525 if a5 != a3
      :                          @528
 11423: 7b 8b                    u64 [a1] = a4
 11425: 33 06                    s1 = 0
 11427: 01                       fallthrough
      :                          @529
 11428: 95 17 50                 a0 = sp + 0x50
 11431: 33 08 03                 a1 = 0x3
 11434: 0a 0d                    ecalli 13 // 'query'
 11436: 95 19 ff 07              a2 = sp + 0x7ff
 11440: 95 99 99 03              a2 = a2 + 0x399
 11444: 95 18 40                 a1 = sp + 0x40
 11447: 7b 98 18                 u64 [a2 + 0x18] = a1
 11450: 95 18 ff 07              a1 = sp + 0x7ff
 11454: 95 88 11 04              a1 = a1 + 0x411
 11458: 7b 98 28                 u64 [a2 + 0x28] = a1
 11461: 82 18 20                 a1 = u64 [sp + 0x20]
 11464: 7b 98 20                 u64 [a2 + 0x20] = a1
 11467: 7b 98 30                 u64 [a2 + 0x30] = a1
 11470: 95 19 ff 07              a2 = sp + 0x7ff
 11474: 95 99 99 03              a2 = a2 + 0x399
 11478: 33 08 e0 0b 01           a1 = 0x10be0
 11483: 7b 18 98 01              u64 [sp + 0x198] = a1
 11487: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11492: 49 21 b8 01              u64 [sp + 440] = 0
 11496: 95 18 ff 07              a1 = sp + 0x7ff
 11500: 95 88 b1 03              a1 = a1 + 0x3b1
 11504: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 11508: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11513: 7b 97 78                 u64 [a2 + 0x78] = a0
 11516: 8e 77                    a0 = a0 >u 0
 11518: 97 77 01                 a0 = a0 << 0x1
 11521: 7b 17 20                 u64 [sp + 0x20] = a0
 11524: 95 17 ff 07              a0 = sp + 0x7ff
 11528: 95 77 e1 03              a0 = a0 + 0x3e1
 11532: 95 18 98 01              a1 = sp + 0x198
 11536: 95 15 98 01              s0 = sp + 0x198
 11540: 50 20 16 01 1c 11        ra = 278, jump @766
      :                          @530 [@dyn 139]
 11546: 95 17 ff 07              a0 = sp + 0x7ff
 11550: 95 77 99 03              a0 = a0 + 0x399
 11554: 82 76 50                 s1 = u64 [a0 + 0x50]
 11557: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11560: 82 77 48                 a0 = u64 [a0 + 0x48]
 11563: 7b 17 08                 u64 [sp + 0x8] = a0
 11566: 82 17 20                 a0 = u64 [sp + 0x20]
 11569: 33 08                    a1 = 0
 11571: 33 09                    a2 = 0
 11573: 64 6a                    a3 = s1
 11575: 33 00 18 01              ra = 0x118
 11579: 0a 64                    ecalli 100 // 'log'
 11581: 01                       fallthrough
      :                          @531 [@dyn 140]
 11582: 82 13 08                 t1 = u64 [sp + 0x8]
 11585: 95 37 00 10 00 ff        a0 = t1 + 0xffffffffff001000
 11591: 82 18 10                 a1 = u64 [sp + 0x10]
 11594: ac 87 30                 jump @537 if a0 <u a1
      :                          @532
 11597: 64 62                    t0 = s1
 11599: 33 07 40 00 03           a0 = 0x30040
 11604: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 11610: 33 09 ff ef ff 00        a2 = 0xffefff
 11616: 01                       fallthrough
      :                          @533
 11617: 82 8a                    a3 = u64 [a1]
 11619: c8 97 0b                 a4 = a0 + a2
 11622: c9 ab 0b                 a4 = a4 - a3
 11625: ab 2b 11                 jump @537 if a4 != t0
      :                          @534
 11628: c9 3a 0b                 a4 = a3 - t1
 11631: 01                       fallthrough
      :                          @535
 11632: 82 8c                    a5 = u64 [a1]
 11634: ab ac ef                 jump @533 if a5 != a3
      :                          @536
 11637: 7b 8b                    u64 [a1] = a4
 11639: 33 06                    s1 = 0
 11641: 01                       fallthrough
      :                          @537
 11642: 95 17 ff 07              a0 = sp + 0x7ff
 11646: 95 77 99 03              a0 = a0 + 0x399
 11650: 82 77 78                 a0 = u64 [a0 + 0x78]
 11653: 33 08 02                 a1 = 0x2
 11656: 50 20 1a 01 2c 1e        ra = 282, jump @1044
      :                          @538 [@dyn 141]
 11662: 33 09 00 0a              a2 = 0xa00
 11666: 95 17 98 01              a0 = sp + 0x198
 11670: 33 08                    a1 = 0
 11672: 50 20 1c 01 d5 13        ra = 284, jump @834
      :                          @539 [@dyn 142]
 11678: 33 06 50                 s1 = 0x50
 11681: 01                       fallthrough
      :                          @540
 11682: 95 18 50                 a1 = sp + 0x50
 11685: 33 09 20                 a2 = 0x20
 11688: 64 57                    a0 = s0
 11690: 50 20 1e 01 11 13        ra = 286, jump @816
      :                          @541 [@dyn 143]
 11696: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 11699: 95 55 20                 s0 = s0 + 0x20
 11702: 52 06 ec                 jump @540 if s1 != 0
      :                          @542
 11705: 95 18 98 01              a1 = sp + 0x198
 11709: 33 07                    a0 = 0
 11711: 0a 06                    ecalli 6 // 'assign'
 11713: 95 16 ff 07              s1 = sp + 0x7ff
 11717: 95 66 99 03              s1 = s1 + 0x399
 11721: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11725: 88 77 01                 a0 = a0 <u 0x1
 11728: 97 77 01                 a0 = a0 << 0x1
 11731: 7b 17 20                 u64 [sp + 0x20] = a0
 11734: 95 17 40                 a0 = sp + 0x40
 11737: 7b 67 48                 u64 [s1 + 0x48] = a0
 11740: 33 07 16                 a0 = 0x16
 11743: 7b 67 50                 u64 [s1 + 0x50] = a0
 11746: 95 18 ff 07              a1 = sp + 0x7ff
 11750: 95 88 19 04              a1 = a1 + 0x419
 11754: 7b 68 58                 u64 [s1 + 0x58] = a1
 11757: 7b 67 60                 u64 [s1 + 0x60] = a0
 11760: 33 07 20 0c 01           a0 = 0x10c20
 11765: 7b 67 18                 u64 [s1 + 0x18] = a0
 11768: 49 16 20 03              u64 [s1 + 32] = 0x3
 11772: 49 16 38                 u64 [s1 + 56] = 0
 11775: 95 17 ff 07              a0 = sp + 0x7ff
 11779: 95 77 e1 03              a0 = a0 + 0x3e1
 11783: 7b 67 28                 u64 [s1 + 0x28] = a0
 11786: 49 16 30 02              u64 [s1 + 48] = 0x2
 11790: 95 17 ff 07              a0 = sp + 0x7ff
 11794: 95 77 99 03              a0 = a0 + 0x399
 11798: 95 18 ff 07              a1 = sp + 0x7ff
 11802: 95 88 b1 03              a1 = a1 + 0x3b1
 11806: 50 20 20 01 12 10        ra = 288, jump @766
      :                          @543 [@dyn 144]
 11812: 82 65 08                 s0 = u64 [s1 + 0x8]
 11815: 82 6b 10                 a4 = u64 [s1 + 0x10]
 11818: 82 66                    s1 = u64 [s1]
 11820: 82 17 20                 a0 = u64 [sp + 0x20]
 11823: 33 08                    a1 = 0
 11825: 33 09                    a2 = 0
 11827: 64 5a                    a3 = s0
 11829: 33 00 22 01              ra = 0x122
 11833: 0a 64                    ecalli 100 // 'log'
 11835: 01                       fallthrough
      :                          @544 [@dyn 145]
 11836: 95 68 00 10 00 ff        a1 = s1 + 0xffffffffff001000
 11842: 53 48 01 10 00 ff e9 05  jump @615 if a1 <u 4278194177
      :                          @545
 11850: 64 52                    t0 = s0
 11852: 64 65                    s0 = s1
 11854: 33 07 40 00 03           a0 = 0x30040
 11859: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 11865: 33 09 ff ef ff 00        a2 = 0xffefff
 11871: 01                       fallthrough
      :                          @546
 11872: 82 8a                    a3 = u64 [a1]
 11874: c8 97 0b                 a4 = a0 + a2
 11877: c9 ab 0b                 a4 = a4 - a3
 11880: ab 2b c3 05              jump @615 if a4 != t0
      :                          @547
 11884: c9 5a 0b                 a4 = a3 - s0
 11887: 01                       fallthrough
      :                          @548
 11888: 82 8c                    a5 = u64 [a1]
 11890: ab ac ee                 jump @546 if a5 != a3
      :                          @549
 11893: 7b 8b                    u64 [a1] = a4
 11895: 33 06                    s1 = 0
 11897: 01                       fallthrough
      :                          @550
 11898: ab ac e6                 jump @546 if a5 != a3
      :                          @551
 11901: 28 ae 05                 jump @615
      :                          @552 [@dyn 146]
 11904: 33 05 03                 s0 = 0x3
 11907: 95 17 50                 a0 = sp + 0x50
 11910: 33 08 03                 a1 = 0x3
 11913: 0a 0f                    ecalli 15 // 'forget'
 11915: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11919: 88 77 01                 a0 = a0 <u 0x1
 11922: 97 77 01                 a0 = a0 << 0x1
 11925: 7b 17 10                 u64 [sp + 0x10] = a0
 11928: 95 17 40                 a0 = sp + 0x40
 11931: 7b 67 18                 u64 [s1 + 0x18] = a0
 11934: 33 08 16                 a1 = 0x16
 11937: 7b 68 20                 u64 [s1 + 0x20] = a1
 11940: 95 17 ff 07              a0 = sp + 0x7ff
 11944: 95 77 19 04              a0 = a0 + 0x419
 11948: 7b 67 28                 u64 [s1 + 0x28] = a0
 11951: 7b 18 20                 u64 [sp + 0x20] = a1
 11954: 7b 68 30                 u64 [s1 + 0x30] = a1
 11957: 33 07 e0 08 01           a0 = 0x108e0
 11962: 7b 17 98 01              u64 [sp + 0x198] = a0
 11966: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 11970: 49 21 b8 01              u64 [sp + 440] = 0
 11974: 95 17 ff 07              a0 = sp + 0x7ff
 11978: 95 77 b1 03              a0 = a0 + 0x3b1
 11982: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11986: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11991: 95 17 ff 07              a0 = sp + 0x7ff
 11995: 95 77 e1 03              a0 = a0 + 0x3e1
 11999: 95 18 98 01              a1 = sp + 0x198
 12003: 50 20 26 01 4d 0f        ra = 294, jump @766
      :                          @553 [@dyn 147]
 12009: 82 65 50                 s0 = u64 [s1 + 0x50]
 12012: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12015: 82 66 48                 s1 = u64 [s1 + 0x48]
 12018: 82 17 10                 a0 = u64 [sp + 0x10]
 12021: 33 08                    a1 = 0
 12023: 33 09                    a2 = 0
 12025: 64 5a                    a3 = s0
 12027: 33 00 28 01              ra = 0x128
 12031: 0a 64                    ecalli 100 // 'log'
 12033: 01                       fallthrough
      :                          @554 [@dyn 148]
 12034: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
 12040: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 12047: 53 47 01 10 00 ff 36     jump @560 if a0 <u 4278194177
      :                          @555
 12054: 64 52                    t0 = s0
 12056: 64 65                    s0 = s1
 12058: 33 07 40 00 03           a0 = 0x30040
 12063: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 12069: 33 09 ff ef ff 00        a2 = 0xffefff
 12075: 01                       fallthrough
      :                          @556
 12076: 82 8a                    a3 = u64 [a1]
 12078: c8 97 0b                 a4 = a0 + a2
 12081: c9 ab 0b                 a4 = a4 - a3
 12084: ab 2b 11                 jump @560 if a4 != t0
      :                          @557
 12087: c9 5a 0b                 a4 = a3 - s0
 12090: 01                       fallthrough
      :                          @558
 12091: 82 8c                    a5 = u64 [a1]
 12093: ab ac ef                 jump @556 if a5 != a3
      :                          @559
 12096: 7b 8b                    u64 [a1] = a4
 12098: 33 06                    s1 = 0
 12100: 01                       fallthrough
      :                          @560
 12101: 95 15 ff 07              s0 = sp + 0x7ff
 12105: 95 55 99 03              s0 = s0 + 0x399
 12109: 82 57 80 00              a0 = u64 [s0 + 0x80]
 12113: 33 08 01                 a1 = 0x1
 12116: 50 20 2a 01 60 1c        ra = 298, jump @1044
      :                          @561 [@dyn 149]
 12122: 95 17 50                 a0 = sp + 0x50
 12125: 33 08 03                 a1 = 0x3
 12128: 0a 0d                    ecalli 13 // 'query'
 12130: 95 18 40                 a1 = sp + 0x40
 12133: 7b 58 18                 u64 [s0 + 0x18] = a1
 12136: 82 18 20                 a1 = u64 [sp + 0x20]
 12139: 7b 58 20                 u64 [s0 + 0x20] = a1
 12142: 7b 58 30                 u64 [s0 + 0x30] = a1
 12145: 33 08 50 0c 01           a1 = 0x10c50
 12150: 7b 18 98 01              u64 [sp + 0x198] = a1
 12154: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12159: 49 21 b8 01              u64 [sp + 440] = 0
 12163: 95 18 ff 07              a1 = sp + 0x7ff
 12167: 95 88 b1 03              a1 = a1 + 0x3b1
 12171: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 12175: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12180: 7b 57                    u64 [s0] = a0
 12182: 8e 77                    a0 = a0 >u 0
 12184: 97 77 01                 a0 = a0 << 0x1
 12187: 7b 17 20                 u64 [sp + 0x20] = a0
 12190: 7b 55 28                 u64 [s0 + 0x28] = s0
 12193: 95 17 ff 07              a0 = sp + 0x7ff
 12197: 95 77 e1 03              a0 = a0 + 0x3e1
 12201: 95 18 98 01              a1 = sp + 0x198
 12205: 50 20 2c 01 83 0e        ra = 300, jump @766
      :                          @562 [@dyn 150]
 12211: 82 56 50                 s1 = u64 [s0 + 0x50]
 12214: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12217: 82 55 48                 s0 = u64 [s0 + 0x48]
 12220: 82 17 20                 a0 = u64 [sp + 0x20]
 12223: 33 08                    a1 = 0
 12225: 33 09                    a2 = 0
 12227: 64 6a                    a3 = s1
 12229: 33 00 2e 01              ra = 0x12e
 12233: 0a 64                    ecalli 100 // 'log'
 12235: 01                       fallthrough
      :                          @563 [@dyn 151]
 12236: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 12242: 82 18 10                 a1 = u64 [sp + 0x10]
 12245: ac 87 c7 01              jump @588 if a0 <u a1
      :                          @564
 12249: 64 62                    t0 = s1
 12251: 33 07 40 00 03           a0 = 0x30040
 12256: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 12262: 33 09 ff ef ff 00        a2 = 0xffefff
 12268: 01                       fallthrough
      :                          @565
 12269: 82 8a                    a3 = u64 [a1]
 12271: c8 97 0b                 a4 = a0 + a2
 12274: c9 ab 0b                 a4 = a4 - a3
 12277: ab 2b a7 01              jump @588 if a4 != t0
      :                          @566
 12281: c9 5a 0b                 a4 = a3 - s0
 12284: 01                       fallthrough
      :                          @567
 12285: 82 8c                    a5 = u64 [a1]
 12287: ab ac ee                 jump @565 if a5 != a3
      :                          @568
 12290: 7b 8b                    u64 [a1] = a4
 12292: 33 06                    s1 = 0
 12294: 01                       fallthrough
      :                          @569
 12295: ab ac e6                 jump @565 if a5 != a3
      :                          @570
 12298: 28 92 01                 jump @588
      :                          @571 [@dyn 152]
 12301: 33 05 03                 s0 = 0x3
 12304: 95 18 50                 a1 = sp + 0x50
 12307: 95 19 90 00              a2 = sp + 0x90
 12311: 33 0b 03                 a4 = 0x3
 12314: 82 17 30                 a0 = u64 [sp + 0x30]
 12317: 33 0a                    a3 = 0
 12319: 0a 01                    ecalli 1 // 'lookup'
 12321: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12325: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 12328: 88 77 01                 a0 = a0 <u 0x1
 12331: 97 77 01                 a0 = a0 << 0x1
 12334: 7b 17 10                 u64 [sp + 0x10] = a0
 12337: 95 17 40                 a0 = sp + 0x40
 12340: 7b 67 18                 u64 [s1 + 0x18] = a0
 12343: 33 08 16                 a1 = 0x16
 12346: 7b 68 20                 u64 [s1 + 0x20] = a1
 12349: 95 17 ff 07              a0 = sp + 0x7ff
 12353: 95 77 19 04              a0 = a0 + 0x419
 12357: 7b 67 28                 u64 [s1 + 0x28] = a0
 12360: 7b 18 20                 u64 [sp + 0x20] = a1
 12363: 7b 68 30                 u64 [s1 + 0x30] = a1
 12366: 33 07 98 0c 01           a0 = 0x10c98
 12371: 7b 17 98 01              u64 [sp + 0x198] = a0
 12375: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 12379: 49 21 b8 01              u64 [sp + 440] = 0
 12383: 95 17 ff 07              a0 = sp + 0x7ff
 12387: 95 77 b1 03              a0 = a0 + 0x3b1
 12391: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12395: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12400: 95 17 ff 07              a0 = sp + 0x7ff
 12404: 95 77 e1 03              a0 = a0 + 0x3e1
 12408: 95 18 98 01              a1 = sp + 0x198
 12412: 50 20 32 01 b4 0d        ra = 306, jump @766
      :                          @572 [@dyn 153]
 12418: 82 65 50                 s0 = u64 [s1 + 0x50]
 12421: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12424: 82 66 48                 s1 = u64 [s1 + 0x48]
 12427: 82 17 10                 a0 = u64 [sp + 0x10]
 12430: 33 08                    a1 = 0
 12432: 33 09                    a2 = 0
 12434: 64 5a                    a3 = s0
 12436: 33 00 34 01              ra = 0x134
 12440: 0a 64                    ecalli 100 // 'log'
 12442: 01                       fallthrough
      :                          @573 [@dyn 154]
 12443: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
 12449: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 12456: 53 47 01 10 00 ff 36     jump @579 if a0 <u 4278194177
      :                          @574
 12463: 64 52                    t0 = s0
 12465: 64 65                    s0 = s1
 12467: 33 07 40 00 03           a0 = 0x30040
 12472: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 12478: 33 09 ff ef ff 00        a2 = 0xffefff
 12484: 01                       fallthrough
      :                          @575
 12485: 82 8a                    a3 = u64 [a1]
 12487: c8 97 0b                 a4 = a0 + a2
 12490: c9 ab 0b                 a4 = a4 - a3
 12493: ab 2b 11                 jump @579 if a4 != t0
      :                          @576
 12496: c9 5a 0b                 a4 = a3 - s0
 12499: 01                       fallthrough
      :                          @577
 12500: 82 8c                    a5 = u64 [a1]
 12502: ab ac ef                 jump @575 if a5 != a3
      :                          @578
 12505: 7b 8b                    u64 [a1] = a4
 12507: 33 06                    s1 = 0
 12509: 01                       fallthrough
      :                          @579
 12510: 95 15 ff 07              s0 = sp + 0x7ff
 12514: 95 55 99 03              s0 = s0 + 0x399
 12518: 82 57 80 00              a0 = u64 [s0 + 0x80]
 12522: 33 08 01                 a1 = 0x1
 12525: 50 20 36 01 c7 1a        ra = 310, jump @1044
      :                          @580 [@dyn 155]
 12531: 95 17 50                 a0 = sp + 0x50
 12534: 33 08 03                 a1 = 0x3
 12537: 0a 0d                    ecalli 13 // 'query'
 12539: 95 18 40                 a1 = sp + 0x40
 12542: 7b 58 18                 u64 [s0 + 0x18] = a1
 12545: 82 18 20                 a1 = u64 [sp + 0x20]
 12548: 7b 58 20                 u64 [s0 + 0x20] = a1
 12551: 7b 58 30                 u64 [s0 + 0x30] = a1
 12554: 33 08 28 09 01           a1 = 0x10928
 12559: 7b 18 98 01              u64 [sp + 0x198] = a1
 12563: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12568: 49 21 b8 01              u64 [sp + 440] = 0
 12572: 95 18 ff 07              a1 = sp + 0x7ff
 12576: 95 88 b1 03              a1 = a1 + 0x3b1
 12580: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 12584: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12589: 7b 57                    u64 [s0] = a0
 12591: 8e 77                    a0 = a0 >u 0
 12593: 97 77 01                 a0 = a0 << 0x1
 12596: 7b 17 20                 u64 [sp + 0x20] = a0
 12599: 7b 55 28                 u64 [s0 + 0x28] = s0
 12602: 95 17 ff 07              a0 = sp + 0x7ff
 12606: 95 77 e1 03              a0 = a0 + 0x3e1
 12610: 95 18 98 01              a1 = sp + 0x198
 12614: 50 20 38 01 ea 0c        ra = 312, jump @766
      :                          @581 [@dyn 156]
 12620: 82 56 50                 s1 = u64 [s0 + 0x50]
 12623: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12626: 82 55 48                 s0 = u64 [s0 + 0x48]
 12629: 82 17 20                 a0 = u64 [sp + 0x20]
 12632: 33 08                    a1 = 0
 12634: 33 09                    a2 = 0
 12636: 64 6a                    a3 = s1
 12638: 33 00 3a 01              ra = 0x13a
 12642: 0a 64                    ecalli 100 // 'log'
 12644: 01                       fallthrough
      :                          @582 [@dyn 157]
 12645: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 12651: 82 18 10                 a1 = u64 [sp + 0x10]
 12654: ac 87 2e                 jump @588 if a0 <u a1
      :                          @583
 12657: 64 62                    t0 = s1
 12659: 33 07 40 00 03           a0 = 0x30040
 12664: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 12670: 33 09 ff ef ff 00        a2 = 0xffefff
 12676: 01                       fallthrough
      :                          @584
 12677: 82 8a                    a3 = u64 [a1]
 12679: c8 97 0b                 a4 = a0 + a2
 12682: c9 ab 0b                 a4 = a4 - a3
 12685: ab 2b 0f                 jump @588 if a4 != t0
      :                          @585
 12688: c9 5a 0b                 a4 = a3 - s0
 12691: 01                       fallthrough
      :                          @586
 12692: 82 8c                    a5 = u64 [a1]
 12694: ab ac ef                 jump @584 if a5 != a3
      :                          @587
 12697: 7b 8b                    u64 [a1] = a4
 12699: 01                       fallthrough
      :                          @588
 12700: 95 16 ff 07              s1 = sp + 0x7ff
 12704: 95 66 99 03              s1 = s1 + 0x399
 12708: 82 67                    a0 = u64 [s1]
 12710: 33 08 02                 a1 = 0x2
 12713: 33 00 6c 01              ra = 0x16c
 12717: 28 07 1a                 jump @1044
      :                          @589 [@dyn 158]
 12720: 33 05 03                 s0 = 0x3
 12723: 95 17 50                 a0 = sp + 0x50
 12726: 33 08 03                 a1 = 0x3
 12729: 33 09 8f 03              a2 = 0x38f
 12733: 33 0a 8f 03              a3 = 0x38f
 12737: 0a 09                    ecalli 9 // 'new'
 12739: 8e 78                    a1 = a0 >u 0
 12741: 7b 67 70                 u64 [s1 + 0x70] = a0
 12744: 97 88 01                 a1 = a1 << 0x1
 12747: 7b 18 10                 u64 [sp + 0x10] = a1
 12750: 95 17 40                 a0 = sp + 0x40
 12753: 7b 67 18                 u64 [s1 + 0x18] = a0
 12756: 33 08 16                 a1 = 0x16
 12759: 7b 68 20                 u64 [s1 + 0x20] = a1
 12762: 95 17 ff 07              a0 = sp + 0x7ff
 12766: 95 77 09 04              a0 = a0 + 0x409
 12770: 7b 67 28                 u64 [s1 + 0x28] = a0
 12773: 7b 18 20                 u64 [sp + 0x20] = a1
 12776: 7b 68 30                 u64 [s1 + 0x30] = a1
 12779: 33 07 f0 0c 01           a0 = 0x10cf0
 12784: 7b 17 98 01              u64 [sp + 0x198] = a0
 12788: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 12792: 49 21 b8 01              u64 [sp + 440] = 0
 12796: 95 17 ff 07              a0 = sp + 0x7ff
 12800: 95 77 b1 03              a0 = a0 + 0x3b1
 12804: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12808: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12813: 95 17 ff 07              a0 = sp + 0x7ff
 12817: 95 77 e1 03              a0 = a0 + 0x3e1
 12821: 95 18 98 01              a1 = sp + 0x198
 12825: 50 20 3e 01 17 0c        ra = 318, jump @766
      :                          @590 [@dyn 159]
 12831: 82 65 50                 s0 = u64 [s1 + 0x50]
 12834: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12837: 82 66 48                 s1 = u64 [s1 + 0x48]
 12840: 82 17 10                 a0 = u64 [sp + 0x10]
 12843: 33 08                    a1 = 0
 12845: 33 09                    a2 = 0
 12847: 64 5a                    a3 = s0
 12849: 33 00 40 01              ra = 0x140
 12853: 0a 64                    ecalli 100 // 'log'
 12855: 01                       fallthrough
      :                          @591 [@dyn 160]
 12856: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
 12862: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 12869: 53 47 01 10 00 ff 36     jump @597 if a0 <u 4278194177
      :                          @592
 12876: 64 52                    t0 = s0
 12878: 64 65                    s0 = s1
 12880: 33 07 40 00 03           a0 = 0x30040
 12885: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 12891: 33 09 ff ef ff 00        a2 = 0xffefff
 12897: 01                       fallthrough
      :                          @593
 12898: 82 8a                    a3 = u64 [a1]
 12900: c8 97 0b                 a4 = a0 + a2
 12903: c9 ab 0b                 a4 = a4 - a3
 12906: ab 2b 11                 jump @597 if a4 != t0
      :                          @594
 12909: c9 5a 0b                 a4 = a3 - s0
 12912: 01                       fallthrough
      :                          @595
 12913: 82 8c                    a5 = u64 [a1]
 12915: ab ac ef                 jump @593 if a5 != a3
      :                          @596
 12918: 7b 8b                    u64 [a1] = a4
 12920: 33 06                    s1 = 0
 12922: 01                       fallthrough
      :                          @597
 12923: 95 15 ff 07              s0 = sp + 0x7ff
 12927: 95 55 99 03              s0 = s0 + 0x399
 12931: 82 57 70                 a0 = u64 [s0 + 0x70]
 12934: 33 08 01                 a1 = 0x1
 12937: 50 20 42 01 2b 19        ra = 322, jump @1044
      :                          @598 [@dyn 161]
 12943: 95 17 50                 a0 = sp + 0x50
 12946: 33 08 8f 03              a1 = 0x38f
 12950: 33 09 8f 03              a2 = 0x38f
 12954: 0a 0a                    ecalli 10 // 'upgrade'
 12956: 95 18 40                 a1 = sp + 0x40
 12959: 7b 58 18                 u64 [s0 + 0x18] = a1
 12962: 95 18 ff 07              a1 = sp + 0x7ff
 12966: 95 88 11 04              a1 = a1 + 0x411
 12970: 7b 58 28                 u64 [s0 + 0x28] = a1
 12973: 82 18 20                 a1 = u64 [sp + 0x20]
 12976: 7b 58 20                 u64 [s0 + 0x20] = a1
 12979: 7b 58 30                 u64 [s0 + 0x30] = a1
 12982: 33 08 30 0d 01           a1 = 0x10d30
 12987: 7b 18 98 01              u64 [sp + 0x198] = a1
 12991: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12996: 49 21 b8 01              u64 [sp + 440] = 0
 13000: 95 18 ff 07              a1 = sp + 0x7ff
 13004: 95 88 b1 03              a1 = a1 + 0x3b1
 13008: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 13012: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 13017: 7b 57 78                 u64 [s0 + 0x78] = a0
 13020: 88 77 01                 a0 = a0 <u 0x1
 13023: 97 77 01                 a0 = a0 << 0x1
 13026: 7b 17 20                 u64 [sp + 0x20] = a0
 13029: 95 17 ff 07              a0 = sp + 0x7ff
 13033: 95 77 e1 03              a0 = a0 + 0x3e1
 13037: 95 18 98 01              a1 = sp + 0x198
 13041: 50 20 44 01 3f 0b        ra = 324, jump @766
      :                          @599 [@dyn 162]
 13047: 82 56 50                 s1 = u64 [s0 + 0x50]
 13050: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13053: 82 55 48                 s0 = u64 [s0 + 0x48]
 13056: 82 17 20                 a0 = u64 [sp + 0x20]
 13059: 33 08                    a1 = 0
 13061: 33 09                    a2 = 0
 13063: 64 6a                    a3 = s1
 13065: 33 00 46 01              ra = 0x146
 13069: 0a 64                    ecalli 100 // 'log'
 13071: 01                       fallthrough
      :                          @600 [@dyn 163]
 13072: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 13078: 82 18 10                 a1 = u64 [sp + 0x10]
 13081: ac 87 2e                 jump @606 if a0 <u a1
      :                          @601
 13084: 64 62                    t0 = s1
 13086: 33 07 40 00 03           a0 = 0x30040
 13091: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 13097: 33 09 ff ef ff 00        a2 = 0xffefff
 13103: 01                       fallthrough
      :                          @602
 13104: 82 8a                    a3 = u64 [a1]
 13106: c8 97 0b                 a4 = a0 + a2
 13109: c9 ab 0b                 a4 = a4 - a3
 13112: ab 2b 0f                 jump @606 if a4 != t0
      :                          @603
 13115: c9 5a 0b                 a4 = a3 - s0
 13118: 01                       fallthrough
      :                          @604
 13119: 82 8c                    a5 = u64 [a1]
 13121: ab ac ef                 jump @602 if a5 != a3
      :                          @605
 13124: 7b 8b                    u64 [a1] = a4
 13126: 01                       fallthrough
      :                          @606
 13127: 95 15 ff 07              s0 = sp + 0x7ff
 13131: 95 55 99 03              s0 = s0 + 0x399
 13135: 82 57 78                 a0 = u64 [s0 + 0x78]
 13138: 33 08 02                 a1 = 0x2
 13141: 33 06 02                 s1 = 0x2
 13144: 50 20 48 01 5c 18        ra = 328, jump @1044
      :                          @607 [@dyn 164]
 13150: 48 05 8f 03              u32 [s0 + 0] = 0x38f
 13154: 48 15 08                 u32 [s0 + 8] = 0
 13157: 48 15 04 8f 03           u32 [s0 + 4] = 0x38f
 13162: 33 08 01                 a1 = 0x1
 13165: 33 09 01                 a2 = 0x1
 13168: 95 1a ff 07              a3 = sp + 0x7ff
 13172: 95 aa 99 03              a3 = a3 + 0x399
 13176: 33 0b 01                 a4 = 0x1
 13179: 33 07                    a0 = 0
 13181: 0a 05                    ecalli 5 // 'bless'
 13183: 7b 57 80 00              u64 [s0 + 0x80] = a0
 13187: 88 77 01                 a0 = a0 <u 0x1
 13190: 97 77 01                 a0 = a0 << 0x1
 13193: 7b 17 20                 u64 [sp + 0x20] = a0
 13196: 95 17 40                 a0 = sp + 0x40
 13199: 7b 57 18                 u64 [s0 + 0x18] = a0
 13202: 33 07 16                 a0 = 0x16
 13205: 7b 57 20                 u64 [s0 + 0x20] = a0
 13208: 95 18 ff 07              a1 = sp + 0x7ff
 13212: 95 88 19 04              a1 = a1 + 0x419
 13216: 7b 58 28                 u64 [s0 + 0x28] = a1
 13219: 7b 57 30                 u64 [s0 + 0x30] = a0
 13222: 33 07 70 0d 01           a0 = 0x10d70
 13227: 7b 17 98 01              u64 [sp + 0x198] = a0
 13231: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 13236: 49 21 b8 01              u64 [sp + 440] = 0
 13240: 95 17 ff 07              a0 = sp + 0x7ff
 13244: 95 77 b1 03              a0 = a0 + 0x3b1
 13248: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 13252: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
 13256: 95 17 ff 07              a0 = sp + 0x7ff
 13260: 95 77 e1 03              a0 = a0 + 0x3e1
 13264: 95 18 98 01              a1 = sp + 0x198
 13268: 50 20 4a 01 5c 0a        ra = 330, jump @766
      :                          @608 [@dyn 165]
 13274: 82 56 50                 s1 = u64 [s0 + 0x50]
 13277: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13280: 82 55 48                 s0 = u64 [s0 + 0x48]
 13283: 82 17 20                 a0 = u64 [sp + 0x20]
 13286: 33 08                    a1 = 0
 13288: 33 09                    a2 = 0
 13290: 64 6a                    a3 = s1
 13292: 33 00 4c 01              ra = 0x14c
 13296: 0a 64                    ecalli 100 // 'log'
 13298: 01                       fallthrough
      :                          @609 [@dyn 166]
 13299: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
 13305: 53 48 01 10 00 ff 32     jump @615 if a1 <u 4278194177
      :                          @610
 13312: 64 62                    t0 = s1
 13314: 33 07 40 00 03           a0 = 0x30040
 13319: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 13325: 33 09 ff ef ff 00        a2 = 0xffefff
 13331: 01                       fallthrough
      :                          @611
 13332: 82 8a                    a3 = u64 [a1]
 13334: c8 97 0b                 a4 = a0 + a2
 13337: c9 ab 0b                 a4 = a4 - a3
 13340: ab 2b 0f                 jump @615 if a4 != t0
      :                          @612
 13343: c9 5a 0b                 a4 = a3 - s0
 13346: 01                       fallthrough
      :                          @613
 13347: 82 8c                    a5 = u64 [a1]
 13349: ab ac ef                 jump @611 if a5 != a3
      :                          @614
 13352: 7b 8b                    u64 [a1] = a4
 13354: 01                       fallthrough
      :                          @615
 13355: 95 16 ff 07              s1 = sp + 0x7ff
 13359: 95 66 99 03              s1 = s1 + 0x399
 13363: 82 67 80 00              a0 = u64 [s1 + 0x80]
 13367: 33 08 05                 a1 = 0x5
 13370: 33 00 6c 01              ra = 0x16c
 13374: 28 76 17                 jump @1044
      :                          @616 [@dyn 167]
 13377: 33 05 03                 s0 = 0x3
 13380: 95 17 4d                 a0 = sp + 0x4d
 13383: 33 08 03                 a1 = 0x3
 13386: 33 09                    a2 = 0
 13388: 33 0a                    a3 = 0
 13390: 0a 03                    ecalli 3 // 'write'
 13392: 7b 67 68                 u64 [s1 + 0x68] = a0
 13395: 95 77 01                 a0 = a0 + 0x1
 13398: 88 77 01                 a0 = a0 <u 0x1
 13401: 97 77 01                 a0 = a0 << 0x1
 13404: 7b 17 10                 u64 [sp + 0x10] = a0
 13407: 95 17 40                 a0 = sp + 0x40
 13410: 7b 67 18                 u64 [s1 + 0x18] = a0
 13413: 33 08 16                 a1 = 0x16
 13416: 7b 68 20                 u64 [s1 + 0x20] = a1
 13419: 95 17 ff 07              a0 = sp + 0x7ff
 13423: 95 77 01 04              a0 = a0 + 0x401
 13427: 7b 67 28                 u64 [s1 + 0x28] = a0
 13430: 7b 18 20                 u64 [sp + 0x20] = a1
 13433: 7b 68 30                 u64 [s1 + 0x30] = a1
 13436: 33 07 b8 0d 01           a0 = 0x10db8
 13441: 7b 17 98 01              u64 [sp + 0x198] = a0
 13445: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 13449: 49 21 b8 01              u64 [sp + 440] = 0
 13453: 95 17 ff 07              a0 = sp + 0x7ff
 13457: 95 77 b1 03              a0 = a0 + 0x3b1
 13461: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 13465: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 13470: 95 17 ff 07              a0 = sp + 0x7ff
 13474: 95 77 e1 03              a0 = a0 + 0x3e1
 13478: 95 18 98 01              a1 = sp + 0x198
 13482: 50 20 50 01 86 09        ra = 336, jump @766
      :                          @617 [@dyn 168]
 13488: 82 65 50                 s0 = u64 [s1 + 0x50]
 13491: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13494: 82 66 48                 s1 = u64 [s1 + 0x48]
 13497: 82 17 10                 a0 = u64 [sp + 0x10]
 13500: 33 08                    a1 = 0
 13502: 33 09                    a2 = 0
 13504: 64 5a                    a3 = s0
 13506: 33 00 52 01              ra = 0x152
 13510: 0a 64                    ecalli 100 // 'log'
 13512: 01                       fallthrough
      :                          @618 [@dyn 169]
 13513: 95 67 00 10 00 ff        a0 = s1 + 0xffffffffff001000
 13519: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 13526: 53 47 01 10 00 ff 36     jump @624 if a0 <u 4278194177
      :                          @619
 13533: 64 52                    t0 = s0
 13535: 64 65                    s0 = s1
 13537: 33 07 40 00 03           a0 = 0x30040
 13542: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 13548: 33 09 ff ef ff 00        a2 = 0xffefff
 13554: 01                       fallthrough
      :                          @620
 13555: 82 8a                    a3 = u64 [a1]
 13557: c8 97 0b                 a4 = a0 + a2
 13560: c9 ab 0b                 a4 = a4 - a3
 13563: ab 2b 11                 jump @624 if a4 != t0
      :                          @621
 13566: c9 5a 0b                 a4 = a3 - s0
 13569: 01                       fallthrough
      :                          @622
 13570: 82 8c                    a5 = u64 [a1]
 13572: ab ac ef                 jump @620 if a5 != a3
      :                          @623
 13575: 7b 8b                    u64 [a1] = a4
 13577: 33 06                    s1 = 0
 13579: 01                       fallthrough
      :                          @624
 13580: 95 15 ff 07              s0 = sp + 0x7ff
 13584: 95 55 99 03              s0 = s0 + 0x399
 13588: 82 57 68                 a0 = u64 [s0 + 0x68]
 13591: 33 08 01                 a1 = 0x1
 13594: 50 20 54 01 9a 16        ra = 340, jump @1044
      :                          @625 [@dyn 170]
 13600: 95 17 4d                 a0 = sp + 0x4d
 13603: 33 08 03                 a1 = 0x3
 13606: 95 19 4a                 a2 = sp + 0x4a
 13609: 33 0a 03                 a3 = 0x3
 13612: 0a 03                    ecalli 3 // 'write'
 13614: 95 18 40                 a1 = sp + 0x40
 13617: 7b 58 18                 u64 [s0 + 0x18] = a1
 13620: 95 18 ff 07              a1 = sp + 0x7ff
 13624: 95 88 09 04              a1 = a1 + 0x409
 13628: 7b 58 28                 u64 [s0 + 0x28] = a1
 13631: 82 18 20                 a1 = u64 [sp + 0x20]
 13634: 7b 58 20                 u64 [s0 + 0x20] = a1
 13637: 7b 58 30                 u64 [s0 + 0x30] = a1
 13640: 33 08 e8 0d 01           a1 = 0x10de8
 13645: 7b 18 98 01              u64 [sp + 0x198] = a1
 13649: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 13654: 49 21 b8 01              u64 [sp + 440] = 0
 13658: 95 18 ff 07              a1 = sp + 0x7ff
 13662: 95 88 b1 03              a1 = a1 + 0x3b1
 13666: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 13670: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 13675: 7b 57 70                 u64 [s0 + 0x70] = a0
 13678: 95 77 01                 a0 = a0 + 0x1
 13681: 88 77 01                 a0 = a0 <u 0x1
 13684: 97 77 01                 a0 = a0 << 0x1
 13687: 7b 17 20                 u64 [sp + 0x20] = a0
 13690: 95 17 ff 07              a0 = sp + 0x7ff
 13694: 95 77 e1 03              a0 = a0 + 0x3e1
 13698: 95 18 98 01              a1 = sp + 0x198
 13702: 50 20 56 01 aa 08        ra = 342, jump @766
      :                          @626 [@dyn 171]
 13708: 82 56 50                 s1 = u64 [s0 + 0x50]
 13711: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13714: 82 55 48                 s0 = u64 [s0 + 0x48]
 13717: 82 17 20                 a0 = u64 [sp + 0x20]
 13720: 33 08                    a1 = 0
 13722: 33 09                    a2 = 0
 13724: 64 6a                    a3 = s1
 13726: 33 00 58 01              ra = 0x158
 13730: 0a 64                    ecalli 100 // 'log'
 13732: 01                       fallthrough
      :                          @627 [@dyn 172]
 13733: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 13739: 82 18 10                 a1 = u64 [sp + 0x10]
 13742: ac 87 30                 jump @633 if a0 <u a1
      :                          @628
 13745: 64 62                    t0 = s1
 13747: 33 07 40 00 03           a0 = 0x30040
 13752: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 13758: 33 09 ff ef ff 00        a2 = 0xffefff
 13764: 01                       fallthrough
      :                          @629
 13765: 82 8a                    a3 = u64 [a1]
 13767: c8 97 0b                 a4 = a0 + a2
 13770: c9 ab 0b                 a4 = a4 - a3
 13773: ab 2b 11                 jump @633 if a4 != t0
      :                          @630
 13776: c9 5a 0b                 a4 = a3 - s0
 13779: 01                       fallthrough
      :                          @631
 13780: 82 8c                    a5 = u64 [a1]
 13782: ab ac ef                 jump @629 if a5 != a3
      :                          @632
 13785: 7b 8b                    u64 [a1] = a4
 13787: 33 06                    s1 = 0
 13789: 01                       fallthrough
      :                          @633
 13790: 95 15 ff 07              s0 = sp + 0x7ff
 13794: 95 55 99 03              s0 = s0 + 0x399
 13798: 82 57 70                 a0 = u64 [s0 + 0x70]
 13801: 33 08 02                 a1 = 0x2
 13804: 50 20 5a 01 c8 15        ra = 346, jump @1044
      :                          @634 [@dyn 173]
 13810: 33 06 03                 s1 = 0x3
 13813: 95 17 4d                 a0 = sp + 0x4d
 13816: 33 08 03                 a1 = 0x3
 13819: 33 09                    a2 = 0
 13821: 33 0a                    a3 = 0
 13823: 0a 03                    ecalli 3 // 'write'
 13825: 7b 57 78                 u64 [s0 + 0x78] = a0
 13828: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 13831: 88 77 01                 a0 = a0 <u 0x1
 13834: 97 77 01                 a0 = a0 << 0x1
 13837: 7b 17 10                 u64 [sp + 0x10] = a0
 13840: 95 17 40                 a0 = sp + 0x40
 13843: 7b 57 18                 u64 [s0 + 0x18] = a0
 13846: 33 08 16                 a1 = 0x16
 13849: 7b 58 20                 u64 [s0 + 0x20] = a1
 13852: 95 17 ff 07              a0 = sp + 0x7ff
 13856: 95 77 11 04              a0 = a0 + 0x411
 13860: 7b 57 28                 u64 [s0 + 0x28] = a0
 13863: 7b 18 20                 u64 [sp + 0x20] = a1
 13866: 7b 58 30                 u64 [s0 + 0x30] = a1
 13869: 33 07 18 0e 01           a0 = 0x10e18
 13874: 7b 17 98 01              u64 [sp + 0x198] = a0
 13878: 7b 16 a0 01              u64 [sp + 0x1a0] = s1
 13882: 49 21 b8 01              u64 [sp + 440] = 0
 13886: 95 17 ff 07              a0 = sp + 0x7ff
 13890: 95 77 b1 03              a0 = a0 + 0x3b1
 13894: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 13898: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 13903: 95 17 ff 07              a0 = sp + 0x7ff
 13907: 95 77 e1 03              a0 = a0 + 0x3e1
 13911: 95 18 98 01              a1 = sp + 0x198
 13915: 50 20 5c 01 d5 07        ra = 348, jump @766
      :                          @635 [@dyn 174]
 13921: 82 56 50                 s1 = u64 [s0 + 0x50]
 13924: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13927: 82 55 48                 s0 = u64 [s0 + 0x48]
 13930: 82 17 10                 a0 = u64 [sp + 0x10]
 13933: 33 08                    a1 = 0
 13935: 33 09                    a2 = 0
 13937: 64 6a                    a3 = s1
 13939: 33 00 5e 01              ra = 0x15e
 13943: 0a 64                    ecalli 100 // 'log'
 13945: 01                       fallthrough
      :                          @636 [@dyn 175]
 13946: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 13952: 49 11 10 01 10 00 ff     u64 [sp + 16] = 0xffffffffff001001
 13959: 53 47 01 10 00 ff 34     jump @642 if a0 <u 4278194177
      :                          @637
 13966: 64 62                    t0 = s1
 13968: 33 07 40 00 03           a0 = 0x30040
 13973: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 13979: 33 09 ff ef ff 00        a2 = 0xffefff
 13985: 01                       fallthrough
      :                          @638
 13986: 82 8a                    a3 = u64 [a1]
 13988: c8 97 0b                 a4 = a0 + a2
 13991: c9 ab 0b                 a4 = a4 - a3
 13994: ab 2b 11                 jump @642 if a4 != t0
      :                          @639
 13997: c9 5a 0b                 a4 = a3 - s0
 14000: 01                       fallthrough
      :                          @640
 14001: 82 8c                    a5 = u64 [a1]
 14003: ab ac ef                 jump @638 if a5 != a3
      :                          @641
 14006: 7b 8b                    u64 [a1] = a4
 14008: 33 06                    s1 = 0
 14010: 01                       fallthrough
      :                          @642
 14011: 95 15 ff 07              s0 = sp + 0x7ff
 14015: 95 55 99 03              s0 = s0 + 0x399
 14019: 82 57 78                 a0 = u64 [s0 + 0x78]
 14022: 33 08 05                 a1 = 0x5
 14025: 50 20 60 01 eb 14        ra = 352, jump @1044
      :                          @643 [@dyn 176]
 14031: 95 18 4d                 a1 = sp + 0x4d
 14034: 33 09 03                 a2 = 0x3
 14037: 95 1a 90 00              a3 = sp + 0x90
 14041: 33 0c 00 01              a5 = 0x100
 14045: 82 17 30                 a0 = u64 [sp + 0x30]
 14048: 33 0b                    a4 = 0
 14050: 0a 02                    ecalli 2 // 'read'
 14052: 95 18 40                 a1 = sp + 0x40
 14055: 7b 58 18                 u64 [s0 + 0x18] = a1
 14058: 95 18 ff 07              a1 = sp + 0x7ff
 14062: 95 88 19 04              a1 = a1 + 0x419
 14066: 7b 58 28                 u64 [s0 + 0x28] = a1
 14069: 82 18 20                 a1 = u64 [sp + 0x20]
 14072: 7b 58 20                 u64 [s0 + 0x20] = a1
 14075: 7b 58 30                 u64 [s0 + 0x30] = a1
 14078: 33 08 60 0e 01           a1 = 0x10e60
 14083: 7b 18 98 01              u64 [sp + 0x198] = a1
 14087: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 14092: 49 21 b8 01              u64 [sp + 440] = 0
 14096: 95 18 ff 07              a1 = sp + 0x7ff
 14100: 95 88 b1 03              a1 = a1 + 0x3b1
 14104: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 14108: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 14113: 7b 57 80 00              u64 [s0 + 0x80] = a0
 14117: 95 77 01                 a0 = a0 + 0x1
 14120: 88 77 01                 a0 = a0 <u 0x1
 14123: 97 77 01                 a0 = a0 << 0x1
 14126: 7b 17 20                 u64 [sp + 0x20] = a0
 14129: 95 17 ff 07              a0 = sp + 0x7ff
 14133: 95 77 e1 03              a0 = a0 + 0x3e1
 14137: 95 18 98 01              a1 = sp + 0x198
 14141: 50 20 62 01 f3 06        ra = 354, jump @766
      :                          @644 [@dyn 177]
 14147: 82 56 50                 s1 = u64 [s0 + 0x50]
 14150: 82 5b 58                 a4 = u64 [s0 + 0x58]
 14153: 82 55 48                 s0 = u64 [s0 + 0x48]
 14156: 82 17 20                 a0 = u64 [sp + 0x20]
 14159: 33 08                    a1 = 0
 14161: 33 09                    a2 = 0
 14163: 64 6a                    a3 = s1
 14165: 33 00 64 01              ra = 0x164
 14169: 0a 64                    ecalli 100 // 'log'
 14171: 01                       fallthrough
      :                          @645 [@dyn 178]
 14172: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 14178: 82 18 10                 a1 = u64 [sp + 0x10]
 14181: ac 87 30                 jump @651 if a0 <u a1
      :                          @646
 14184: 64 62                    t0 = s1
 14186: 33 07 40 00 03           a0 = 0x30040
 14191: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 14197: 33 09 ff ef ff 00        a2 = 0xffefff
 14203: 01                       fallthrough
      :                          @647
 14204: 82 8a                    a3 = u64 [a1]
 14206: c8 97 0b                 a4 = a0 + a2
 14209: c9 ab 0b                 a4 = a4 - a3
 14212: ab 2b 11                 jump @651 if a4 != t0
      :                          @648
 14215: c9 5a 0b                 a4 = a3 - s0
 14218: 01                       fallthrough
      :                          @649
 14219: 82 8c                    a5 = u64 [a1]
 14221: ab ac ef                 jump @647 if a5 != a3
      :                          @650
 14224: 7b 8b                    u64 [a1] = a4
 14226: 33 06                    s1 = 0
 14228: 01                       fallthrough
      :                          @651
 14229: 95 15 ff 07              s0 = sp + 0x7ff
 14233: 95 55 99 03              s0 = s0 + 0x399
 14237: 82 57 80 00              a0 = u64 [s0 + 0x80]
 14241: 33 08 06                 a1 = 0x6
 14244: 50 20 66 01 10 14        ra = 358, jump @1044
      :                          @652 [@dyn 179]
 14250: 33 06 03                 s1 = 0x3
 14253: 95 17 4d                 a0 = sp + 0x4d
 14256: 33 08 03                 a1 = 0x3
 14259: 33 09                    a2 = 0
 14261: 33 0a                    a3 = 0
 14263: 0a 03                    ecalli 3 // 'write'
 14265: 7b 57                    u64 [s0] = a0
 14267: 95 77 01                 a0 = a0 + 0x1
 14270: 88 77 01                 a0 = a0 <u 0x1
 14273: 97 77 01                 a0 = a0 << 0x1
 14276: 7b 17 20                 u64 [sp + 0x20] = a0
 14279: 95 17 40                 a0 = sp + 0x40
 14282: 7b 57 18                 u64 [s0 + 0x18] = a0
 14285: 33 07 16                 a0 = 0x16
 14288: 7b 57 20                 u64 [s0 + 0x20] = a0
 14291: 7b 55 28                 u64 [s0 + 0x28] = s0
 14294: 7b 57 30                 u64 [s0 + 0x30] = a0
 14297: 33 07 90 0e 01           a0 = 0x10e90
 14302: 7b 17 98 01              u64 [sp + 0x198] = a0
 14306: 7b 16 a0 01              u64 [sp + 0x1a0] = s1
 14310: 49 21 b8 01              u64 [sp + 440] = 0
 14314: 95 17 ff 07              a0 = sp + 0x7ff
 14318: 95 77 b1 03              a0 = a0 + 0x3b1
 14322: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 14326: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 14331: 95 17 ff 07              a0 = sp + 0x7ff
 14335: 95 77 e1 03              a0 = a0 + 0x3e1
 14339: 95 18 98 01              a1 = sp + 0x198
 14343: 50 20 68 01 29 06        ra = 360, jump @766
      :                          @653 [@dyn 180]
 14349: 82 56 50                 s1 = u64 [s0 + 0x50]
 14352: 82 5b 58                 a4 = u64 [s0 + 0x58]
 14355: 82 55 48                 s0 = u64 [s0 + 0x48]
 14358: 82 17 20                 a0 = u64 [sp + 0x20]
 14361: 33 08                    a1 = 0
 14363: 33 09                    a2 = 0
 14365: 64 6a                    a3 = s1
 14367: 33 00 6a 01              ra = 0x16a
 14371: 0a 64                    ecalli 100 // 'log'
 14373: 01                       fallthrough
      :                          @654 [@dyn 181]
 14374: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
 14380: 53 48 01 10 00 ff 32     jump @660 if a1 <u 4278194177
      :                          @655
 14387: 64 62                    t0 = s1
 14389: 33 07 40 00 03           a0 = 0x30040
 14394: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 14400: 33 09 ff ef ff 00        a2 = 0xffefff
 14406: 01                       fallthrough
      :                          @656
 14407: 82 8a                    a3 = u64 [a1]
 14409: c8 97 0b                 a4 = a0 + a2
 14412: c9 ab 0b                 a4 = a4 - a3
 14415: ab 2b 0f                 jump @660 if a4 != t0
      :                          @657
 14418: c9 5a 0b                 a4 = a3 - s0
 14421: 01                       fallthrough
      :                          @658
 14422: 82 8c                    a5 = u64 [a1]
 14424: ab ac ef                 jump @656 if a5 != a3
      :                          @659
 14427: 7b 8b                    u64 [a1] = a4
 14429: 01                       fallthrough
      :                          @660
 14430: 95 16 ff 07              s1 = sp + 0x7ff
 14434: 95 66 99 03              s1 = s1 + 0x399
 14438: 82 67                    a0 = u64 [s1]
 14440: 33 08 07                 a1 = 0x7
 14443: 50 20 6c 01 49 13        ra = 364, jump @1044
      :                          @661 [@dyn 182]
 14449: 95 18 90 00              a1 = sp + 0x90
 14453: 82 17 30                 a0 = u64 [sp + 0x30]
 14456: 0a 04                    ecalli 4 // 'info'
 14458: 64 75                    s0 = a0
 14460: 7b 67 78                 u64 [s1 + 0x78] = a0
 14463: 33 08 08                 a1 = 0x8
 14466: 50 20 6e 01 32 13        ra = 366, jump @1044
      :                          @662 [@dyn 183]
 14472: 88 57 01                 a0 = s0 <u 0x1
 14475: 97 77 01                 a0 = a0 << 0x1
 14478: 7b 17 20                 u64 [sp + 0x20] = a0
 14481: 95 17 40                 a0 = sp + 0x40
 14484: 7b 67 18                 u64 [s1 + 0x18] = a0
 14487: 33 08 16                 a1 = 0x16
 14490: 7b 68 20                 u64 [s1 + 0x20] = a1
 14493: 95 17 ff 07              a0 = sp + 0x7ff
 14497: 95 77 11 04              a0 = a0 + 0x411
 14501: 7b 67 28                 u64 [s1 + 0x28] = a0
 14504: 7b 18 30                 u64 [sp + 0x30] = a1
 14507: 7b 68 30                 u64 [s1 + 0x30] = a1
 14510: 33 07 c8 0e 01           a0 = 0x10ec8
 14515: 7b 17 98 01              u64 [sp + 0x198] = a0
 14519: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 14524: 49 21 b8 01              u64 [sp + 440] = 0
 14528: 95 17 ff 07              a0 = sp + 0x7ff
 14532: 95 77 b1 03              a0 = a0 + 0x3b1
 14536: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 14540: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 14545: 95 17 ff 07              a0 = sp + 0x7ff
 14549: 95 77 e1 03              a0 = a0 + 0x3e1
 14553: 95 18 98 01              a1 = sp + 0x198
 14557: 50 20 70 01 53 05        ra = 368, jump @766
      :                          @663 [@dyn 184]
 14563: 95 17 ff 07              a0 = sp + 0x7ff
 14567: 95 77 99 03              a0 = a0 + 0x399
 14571: 82 76 50                 s1 = u64 [a0 + 0x50]
 14574: 82 7b 58                 a4 = u64 [a0 + 0x58]
 14577: 82 75 48                 s0 = u64 [a0 + 0x48]
 14580: 82 17 20                 a0 = u64 [sp + 0x20]
 14583: 33 08                    a1 = 0
 14585: 33 09                    a2 = 0
 14587: 64 6a                    a3 = s1
 14589: 33 00 72 01              ra = 0x172
 14593: 0a 64                    ecalli 100 // 'log'
 14595: 01                       fallthrough
      :                          @664 [@dyn 185]
 14596: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 14602: 49 11 20 01 10 00 ff     u64 [sp + 32] = 0xffffffffff001001
 14609: 53 47 01 10 00 ff 36     jump @670 if a0 <u 4278194177
      :                          @665
 14616: 64 62                    t0 = s1
 14618: 33 07 40 00 03           a0 = 0x30040
 14623: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 14629: 33 09 ff ef ff 00        a2 = 0xffefff
 14635: 01                       fallthrough
      :                          @666
 14636: 82 8a                    a3 = u64 [a1]
 14638: c8 97 0b                 a4 = a0 + a2
 14641: c9 ab 0b                 a4 = a4 - a3
 14644: ab 2b 13                 jump @670 if a4 != t0
      :                          @667
 14647: c9 5a 0b                 a4 = a3 - s0
 14650: 01                       fallthrough
      :                          @668
 14651: 82 8c                    a5 = u64 [a1]
 14653: ab ac ef                 jump @666 if a5 != a3
      :                          @669
 14656: 7b 8b                    u64 [a1] = a4
 14658: 33 06                    s1 = 0
 14660: 0a                       ecalli 0 // 'gas'
 14661: 28 04                    jump @671
      :                          @670
 14663: 0a                       ecalli 0 // 'gas'
 14664: 01                       fallthrough
      :                          @671
 14665: 95 15 ff 07              s0 = sp + 0x7ff
 14669: 95 55 99 03              s0 = s0 + 0x399
 14673: 7b 57 80 00              u64 [s0 + 0x80] = a0
 14677: 33 08 09                 a1 = 0x9
 14680: 50 20 74 01 5c 12        ra = 372, jump @1044
      :                          @672 [@dyn 186]
 14686: 95 17 ff 07              a0 = sp + 0x7ff
 14690: 95 77 19 04              a0 = a0 + 0x419
 14694: 7b 57 48                 u64 [s0 + 0x48] = a0
 14697: 82 17 30                 a0 = u64 [sp + 0x30]
 14700: 7b 57 50                 u64 [s0 + 0x50] = a0
 14703: 33 07 18 0f 01           a0 = 0x10f18
 14708: 7b 17 98 01              u64 [sp + 0x198] = a0
 14712: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 14717: 49 21 b8 01              u64 [sp + 440] = 0
 14721: 95 17 ff 07              a0 = sp + 0x7ff
 14725: 95 77 e1 03              a0 = a0 + 0x3e1
 14729: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 14733: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 14738: 95 17 ff 07              a0 = sp + 0x7ff
 14742: 95 77 b1 03              a0 = a0 + 0x3b1
 14746: 95 18 98 01              a1 = sp + 0x198
 14750: 50 20 76 01 92 04        ra = 374, jump @766
      :                          @673 [@dyn 187]
 14756: 82 56 20                 s1 = u64 [s0 + 0x20]
 14759: 82 5b 28                 a4 = u64 [s0 + 0x28]
 14762: 82 55 18                 s0 = u64 [s0 + 0x18]
 14765: 33 07 04                 a0 = 0x4
 14768: 33 08                    a1 = 0
 14770: 33 09                    a2 = 0
 14772: 64 6a                    a3 = s1
 14774: 33 00 78 01              ra = 0x178
 14778: 0a 64                    ecalli 100 // 'log'
 14780: 01                       fallthrough
      :                          @674 [@dyn 188]
 14781: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
 14787: 82 18 20                 a1 = u64 [sp + 0x20]
 14790: ac 87 2e                 jump @680 if a0 <u a1
      :                          @675
 14793: 64 62                    t0 = s1
 14795: 33 07 40 00 03           a0 = 0x30040
 14800: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 14806: 33 09 ff ef ff 00        a2 = 0xffefff
 14812: 01                       fallthrough
      :                          @676
 14813: 82 8a                    a3 = u64 [a1]
 14815: c8 97 0b                 a4 = a0 + a2
 14818: c9 ab 0b                 a4 = a4 - a3
 14821: ab 2b 0f                 jump @680 if a4 != t0
      :                          @677
 14824: c9 5a 0b                 a4 = a3 - s0
 14827: 01                       fallthrough
      :                          @678
 14828: 82 8c                    a5 = u64 [a1]
 14830: ab ac ef                 jump @676 if a5 != a3
      :                          @679
 14833: 7b 8b                    u64 [a1] = a4
 14835: 01                       fallthrough
      :                          @680
 14836: 82 19 28                 a2 = u64 [sp + 0x28]
 14839: 55 19 21 2b 01           jump @698 if a2 >=u 33
      :                          @681
 14844: 33 06 19 00 03           s1 = 0x30019
 14849: 33 07 19 00 03           a0 = 0x30019
 14854: 82 18 18                 a1 = u64 [sp + 0x18]
 14857: 50 20 7a 01 b2 06        ra = 378, jump @816
      :                          @682 [@dyn 189]
 14863: 82 18 40                 a1 = u64 [sp + 0x40]
 14866: 3a 09 00 00 03           a2 = u64 [0x30000]
 14871: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 14881: ca 78 07                 a0 = a1 * a0
 14884: 95 15 ff 07              s0 = sp + 0x7ff
 14888: 95 55 99 03              s0 = s0 + 0x399
 14892: ae 97 38                 jump @687 if a0 >=u a2
      :                          @683
 14895: 33 07 33                 a0 = 0x33
 14898: 51 18 09 27              jump @685 if a1 == 9
      :                          @684
 14902: 0a 08                    ecalli 8 // 'checkpoint'
 14904: 33 0a 38 0f 01           a3 = 0x10f38
 14909: 33 07 03                 a0 = 0x3
 14912: 33 0b 11                 a4 = 0x11
 14915: 33 08                    a1 = 0
 14917: 33 09                    a2 = 0
 14919: 0a 64                    ecalli 100 // 'log'
 14921: 82 17 40                 a0 = u64 [sp + 0x40]
 14924: 95 77 2a                 a0 = a0 + 0x2a
 14927: 33 08 07                 a1 = 0x7
 14930: 33 00 7c 01              ra = 0x17c
 14934: 28 5e 11                 jump @1044
      :                          @685
 14937: 33 08 07                 a1 = 0x7
 14940: 50 20 7c 01 58 11        ra = 380, jump @1044
      :                          @686 [@dyn 190]
 14946: 32 07                    jump [a0]
      :                          @687
 14948: 64 67                    a0 = s1
 14950: 0a 10                    ecalli 16 // 'oyield'
 14952: 7b 57                    u64 [s0] = a0
 14954: 88 77 01                 a0 = a0 <u 0x1
 14957: 97 77 01                 a0 = a0 << 0x1
 14960: 7b 17 30                 u64 [sp + 0x30] = a0
 14963: 95 17 40                 a0 = sp + 0x40
 14966: 7b 57 18                 u64 [s0 + 0x18] = a0
 14969: 33 07 16                 a0 = 0x16
 14972: 7b 57 20                 u64 [s0 + 0x20] = a0
 14975: 7b 55 28                 u64 [s0 + 0x28] = s0
 14978: 7b 57 30                 u64 [s0 + 0x30] = a0
 14981: 33 07 50 0f 01           a0 = 0x10f50
 14986: 7b 17 98 01              u64 [sp + 0x198] = a0
 14990: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 14995: 49 21 b8 01              u64 [sp + 440] = 0
 14999: 95 18 ff 07              a1 = sp + 0x7ff
 15003: 95 88 b1 03              a1 = a1 + 0x3b1
 15007: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 15011: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 15016: 95 17 ff 07              a0 = sp + 0x7ff
 15020: 95 77 e1 03              a0 = a0 + 0x3e1
 15024: 95 18 98 01              a1 = sp + 0x198
 15028: 50 20 7e 01 7c 03        ra = 382, jump @766
      :                          @688 [@dyn 191]
 15034: 82 56 50                 s1 = u64 [s0 + 0x50]
 15037: 82 5b 58                 a4 = u64 [s0 + 0x58]
 15040: 82 55 48                 s0 = u64 [s0 + 0x48]
 15043: 82 17 30                 a0 = u64 [sp + 0x30]
 15046: 33 08                    a1 = 0
 15048: 33 09                    a2 = 0
 15050: 64 6a                    a3 = s1
 15052: 33 00 80 01              ra = 0x180
 15056: 0a 64                    ecalli 100 // 'log'
 15058: 01                       fallthrough
      :                          @689 [@dyn 192]
 15059: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
 15065: 53 48 01 10 00 ff 3c     jump @695 if a1 <u 4278194177
      :                          @690
 15072: 64 62                    t0 = s1
 15074: 33 07 40 00 03           a0 = 0x30040
 15079: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 15085: 33 09 ff ef ff 00        a2 = 0xffefff
 15091: 01                       fallthrough
      :                          @691
 15092: 82 8a                    a3 = u64 [a1]
 15094: c8 97 0b                 a4 = a0 + a2
 15097: c9 ab 0b                 a4 = a4 - a3
 15100: ab 2b 19                 jump @695 if a4 != t0
      :                          @692
 15103: c9 5a 0b                 a4 = a3 - s0
 15106: 01                       fallthrough
      :                          @693
 15107: 82 8c                    a5 = u64 [a1]
 15109: ab ac ef                 jump @691 if a5 != a3
      :                          @694
 15112: 7b 8b                    u64 [a1] = a4
 15114: 33 07 19 00 03           a0 = 0x30019
 15119: 33 08 20                 a1 = 0x20
 15122: 28 65 dc                 jump @298
      :                          @695
 15125: 33 07 19 00 03           a0 = 0x30019
 15130: 33 08 20                 a1 = 0x20
 15133: 28 5a dc                 jump @298
      :                          @696
 15136: 00                       trap
      :                          @697
 15137: 00                       trap
      :                          @698
 15138: 00                       trap
      :                          @699
 15139: 00                       trap
      :                          @700 [export #2: 'on_transfer']
 15140: 95 11 88                 sp = sp + 0xffffffffffffff88
 15143: 7b 10 70                 u64 [sp + 0x70] = ra
 15146: 7b 15 68                 u64 [sp + 0x68] = s0
 15149: 7b 16 60                 u64 [sp + 0x60] = s1
 15152: 0a                       ecalli 0 // 'gas'
 15153: 7b 17                    u64 [sp] = a0
 15155: 33 08 04                 a1 = 0x4
 15158: 50 20 82 01 7e 10        ra = 386, jump @1044
      :                          @701 [@dyn 193]
 15164: 64 17                    a0 = sp
 15166: 7b 17 50                 u64 [sp + 0x50] = a0
 15169: 33 07 16                 a0 = 0x16
 15172: 7b 17 58                 u64 [sp + 0x58] = a0
 15175: 33 07 a0 0f 01           a0 = 0x10fa0
 15180: 7b 17 20                 u64 [sp + 0x20] = a0
 15183: 49 11 28 02              u64 [sp + 40] = 0x2
 15187: 49 11 40                 u64 [sp + 64] = 0
 15190: 95 17 50                 a0 = sp + 0x50
 15193: 7b 17 30                 u64 [sp + 0x30] = a0
 15196: 49 11 38 01              u64 [sp + 56] = 0x1
 15200: 95 17 08                 a0 = sp + 0x8
 15203: 95 18 20                 a1 = sp + 0x20
 15206: 50 20 84 01 ca 02        ra = 388, jump @766
      :                          @702 [@dyn 194]
 15212: 82 16 10                 s1 = u64 [sp + 0x10]
 15215: 82 1b 18                 a4 = u64 [sp + 0x18]
 15218: 82 15 08                 s0 = u64 [sp + 0x8]
 15221: 33 07 04                 a0 = 0x4
 15224: 33 08                    a1 = 0
 15226: 33 09                    a2 = 0
 15228: 64 6a                    a3 = s1
 15230: 33 00 86 01              ra = 0x186
 15234: 0a 64                    ecalli 100 // 'log'
 15236: 01                       fallthrough
      :                          @703 [@dyn 195]
 15237: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
 15243: 53 48 01 10 00 ff 32     jump @709 if a1 <u 4278194177
      :                          @704
 15250: 64 62                    t0 = s1
 15252: 33 07 40 00 03           a0 = 0x30040
 15257: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 15263: 33 09 ff ef ff 00        a2 = 0xffefff
 15269: 01                       fallthrough
      :                          @705
 15270: 82 8a                    a3 = u64 [a1]
 15272: c8 97 0b                 a4 = a0 + a2
 15275: c9 ab 0b                 a4 = a4 - a3
 15278: ab 2b 0f                 jump @709 if a4 != t0
      :                          @706
 15281: c9 5a 0b                 a4 = a3 - s0
 15284: 01                       fallthrough
      :                          @707
 15285: 82 8c                    a5 = u64 [a1]
 15287: ab ac ef                 jump @705 if a5 != a3
      :                          @708
 15290: 7b 8b                    u64 [a1] = a4
 15292: 01                       fallthrough
      :                          @709
 15293: 33 07 00 00 01           a0 = 0x10000
 15298: 33 08                    a1 = 0
 15300: 82 10 70                 ra = u64 [sp + 0x70]
 15303: 82 15 68                 s0 = u64 [sp + 0x68]
 15306: 82 16 60                 s1 = u64 [sp + 0x60]
 15309: 95 11 78                 sp = sp + 0x78
 15312: 32 00                    ret
      :                          @710
 15314: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 15317: 7b 10 40                 u64 [sp + 0x40] = ra
 15320: 7b 15 38                 u64 [sp + 0x38] = s0
 15323: 7b 16 30                 u64 [sp + 0x30] = s1
 15326: c8 89 09                 a2 = a2 + a1
 15329: ac 89 53                 jump @718 if a2 <u a1
      :                          @711
 15332: 64 75                    s0 = a0
 15334: 82 77                    a0 = u64 [a0]
 15336: 97 78 01                 a1 = a0 << 0x1
 15339: 33 0a 08                 a3 = 0x8
 15342: e4 a9 09                 a2 = maxu(a2, a3)
 15345: e4 98 06                 s1 = maxu(a1, a2)
 15348: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 15351: 98 88 3f                 a1 = a1 >> 0x3f
 15354: 51 07 12                 jump @713 if a0 == 0
      :                          @712
 15357: 82 59 08                 a2 = u64 [s0 + 0x8]
 15360: 7b 19 18                 u64 [sp + 0x18] = a2
 15363: 49 11 20 01              u64 [sp + 32] = 0x1
 15367: 7b 17 28                 u64 [sp + 0x28] = a0
 15370: 28 06                    jump @714
      :                          @713
 15372: 49 11 20                 u64 [sp + 32] = 0
 15375: 01                       fallthrough
      :                          @714
 15376: 64 17                    a0 = sp
 15378: 95 1a 18                 a3 = sp + 0x18
 15381: 64 69                    a2 = s1
 15383: 50 20 88 01 33           ra = 392, jump @722
      :                          @715 [@dyn 196]
 15388: 82 18                    a1 = u64 [sp]
 15390: 82 17 08                 a0 = u64 [sp + 0x8]
 15393: 51 08 14                 jump @719 if a1 == 0
      :                          @716
 15396: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 15406: aa 87 0d                 jump @720 if a0 == a1
      :                          @717
 15409: 52 07 18                 jump @721 if a0 != 0
      :                          @718
 15412: 00                       trap
      :                          @719
 15413: 7b 57 08                 u64 [s0 + 0x8] = a0
 15416: 7b 56                    u64 [s0] = s1
 15418: 01                       fallthrough
      :                          @720
 15419: 82 10 40                 ra = u64 [sp + 0x40]
 15422: 82 15 38                 s0 = u64 [sp + 0x38]
 15425: 82 16 30                 s1 = u64 [sp + 0x30]
 15428: 95 11 48                 sp = sp + 0x48
 15431: 32 00                    ret
      :                          @721
 15433: 00                       trap
      :                          @722
 15434: 64 93                    t1 = a2
 15436: 64 72                    t0 = a0
 15438: 51 08 90 00              jump @732 if a1 == 0
      :                          @723
 15442: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 15445: 7b 10 38                 u64 [sp + 0x38] = ra
 15448: 7b 15 30                 u64 [sp + 0x30] = s0
 15451: 7b 16 28                 u64 [sp + 0x28] = s1
 15454: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15457: 51 07 8a 00              jump @733 if a0 == 0
      :                          @724
 15461: 82 a9 10                 a2 = u64 [a3 + 0x10]
 15464: 51 09 bb 00              jump @740 if a2 == 0
      :                          @725
 15468: 82 a8                    a1 = u64 [a3]
 15470: 33 06 40 00 03           s1 = 0x30040
 15475: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
 15481: 33 05 ff ef ff 00        s0 = 0xffefff
 15487: 01                       fallthrough
      :                          @726
 15488: 82 6a                    a3 = u64 [s1]
 15490: c8 3a 07                 a0 = a3 + t1
 15493: ac a7 e1 00              jump @746 if a0 <u a3
      :                          @727
 15497: 95 7b 01                 a4 = a0 + 0x1
 15500: 88 bc 01                 a5 = a4 <u 0x1
 15503: d8 b5 0b                 a4 = s0 <u a4
 15506: d4 cb 0b                 a4 = a4 | a5
 15509: 52 0b d1 00              jump @746 if a4 != 0
      :                          @728
 15513: 82 6b                    a4 = u64 [s1]
 15515: ab ab e5                 jump @726 if a4 != a3
      :                          @729
 15518: 7b 67                    u64 [s1] = a0
 15520: 33 0c                    a5 = 0
 15522: 7b 13 10                 u64 [sp + 0x10] = t1
 15525: 7b 12 20                 u64 [sp + 0x20] = t0
 15528: 33 05 ff ef ff 00        s0 = 0xffefff
 15534: 33 0a 40 00 03           a3 = 0x30040
 15539: 7b 1a                    u64 [sp] = a3
 15541: c8 5a 0a                 a3 = a3 + s0
 15544: c9 7a 07                 a0 = a3 - a0
 15547: 7b 17 18                 u64 [sp + 0x18] = a0
 15550: 7b 18 08                 u64 [sp + 0x8] = a1
 15553: 64 96                    s1 = a2
 15555: 50 20 8a 01 f8 03        ra = 394, jump @816
      :                          @730 [@dyn 197]
 15561: ae 65 a5 00              jump @747 if s0 >=u s1
      :                          @731
 15565: 82 12 20                 t0 = u64 [sp + 0x20]
 15568: 82 13 10                 t1 = u64 [sp + 0x10]
 15571: 82 18 18                 a1 = u64 [sp + 0x18]
 15574: 33 07                    a0 = 0
 15576: 7b 28 08                 u64 [t0 + 0x8] = a1
 15579: 28 c9 00                 jump @753
      :                          @732
 15582: 49 12 08                 u64 [t0 + 8] = 0
 15585: 33 07 01                 a0 = 0x1
 15588: 7b 23 10                 u64 [t0 + 0x10] = t1
 15591: 7b 27                    u64 [t0] = a0
 15593: 32 00                    ret
      :                          @733
 15595: 33 07 40 00 03           a0 = 0x30040
 15600: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
 15606: 33 09 ff ef ff 00        a2 = 0xffefff
 15612: 01                       fallthrough
      :                          @734
 15613: 82 7a                    a3 = u64 [a0]
 15615: c8 3a 08                 a1 = a3 + t1
 15618: ac a8 64                 jump @746 if a1 <u a3
      :                          @735
 15621: 95 8b 01                 a4 = a1 + 0x1
 15624: 88 bc 01                 a5 = a4 <u 0x1
 15627: d8 b9 0b                 a4 = a2 <u a4
 15630: d4 cb 0b                 a4 = a4 | a5
 15633: 52 0b 55                 jump @746 if a4 != 0
      :                          @736
 15636: 82 7b                    a4 = u64 [a0]
 15638: ab ab e7                 jump @734 if a4 != a3
      :                          @737
 15641: 7b 78                    u64 [a0] = a1
 15643: 33 0c                    a5 = 0
 15645: 01                       fallthrough
      :                          @738
 15646: ab ab df                 jump @734 if a4 != a3
      :                          @739
 15649: 28 35                    jump @745
      :                          @740
 15651: 33 07 40 00 03           a0 = 0x30040
 15656: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
 15662: 33 09 ff ef ff 00        a2 = 0xffefff
 15668: 01                       fallthrough
      :                          @741
 15669: 82 7a                    a3 = u64 [a0]
 15671: c8 3a 08                 a1 = a3 + t1
 15674: ac a8 2c                 jump @746 if a1 <u a3
      :                          @742
 15677: 95 8b 01                 a4 = a1 + 0x1
 15680: 88 bc 01                 a5 = a4 <u 0x1
 15683: d8 b9 0b                 a4 = a2 <u a4
 15686: d4 cb 0b                 a4 = a4 | a5
 15689: 52 0b 1d                 jump @746 if a4 != 0
      :                          @743
 15692: 82 7b                    a4 = u64 [a0]
 15694: ab ab e7                 jump @741 if a4 != a3
      :                          @744
 15697: 7b 78                    u64 [a0] = a1
 15699: 33 0c                    a5 = 0
 15701: 01                       fallthrough
      :                          @745
 15702: 33 07 3f f0 02 01        a0 = 0x102f03f
 15708: c9 87 08                 a1 = a0 - a1
 15711: 33 07                    a0 = 0
 15713: 7b 28 08                 u64 [t0 + 0x8] = a1
 15716: 28 40                    jump @753
      :                          @746
 15718: 33 07 01                 a0 = 0x1
 15721: 7b 27 08                 u64 [t0 + 0x8] = a0
 15724: 28 38                    jump @753
      :                          @747
 15726: 64 6c                    a5 = s1
 15728: 82 16                    s1 = u64 [sp]
 15730: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
 15736: 82 12 20                 t0 = u64 [sp + 0x20]
 15739: 82 14 08                 t2 = u64 [sp + 0x8]
 15742: 82 13 10                 t1 = u64 [sp + 0x10]
 15745: 01                       fallthrough
      :                          @748
 15746: 82 78                    a1 = u64 [a0]
 15748: c8 56 09                 a2 = s1 + s0
 15751: c9 89 09                 a2 = a2 - a1
 15754: ab 49 11                 jump @752 if a2 != t2
      :                          @749
 15757: c9 c8 09                 a2 = a1 - a5
 15760: 01                       fallthrough
      :                          @750
 15761: 82 7a                    a3 = u64 [a0]
 15763: ab 8a ef                 jump @748 if a3 != a1
      :                          @751
 15766: 7b 79                    u64 [a0] = a2
 15768: 33 0b                    a4 = 0
 15770: 01                       fallthrough
      :                          @752
 15771: 82 18 18                 a1 = u64 [sp + 0x18]
 15774: 33 07                    a0 = 0
 15776: 7b 28 08                 u64 [t0 + 0x8] = a1
 15779: 01                       fallthrough
      :                          @753
 15780: 82 10 38                 ra = u64 [sp + 0x38]
 15783: 82 15 30                 s0 = u64 [sp + 0x30]
 15786: 82 16 28                 s1 = u64 [sp + 0x28]
 15789: 95 11 40                 sp = sp + 0x40
 15792: 7b 23 10                 u64 [t0 + 0x10] = t1
 15795: 7b 27                    u64 [t0] = a0
 15797: 32 00                    ret
      :                          @754
 15799: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 15802: 7b 10 40                 u64 [sp + 0x40] = ra
 15805: 7b 15 38                 u64 [sp + 0x38] = s0
 15808: 7b 16 30                 u64 [sp + 0x30] = s1
 15811: 95 88 01                 a1 = a1 + 0x1
 15814: 51 08 54                 jump @762 if a1 == 0
      :                          @755
 15817: 64 75                    s0 = a0
 15819: 82 77                    a0 = u64 [a0]
 15821: 97 79 01                 a2 = a0 << 0x1
 15824: 33 0a 08                 a3 = 0x8
 15827: e4 a8 08                 a1 = maxu(a1, a3)
 15830: e4 89 06                 s1 = maxu(a2, a1)
 15833: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 15836: 98 88 3f                 a1 = a1 >> 0x3f
 15839: 51 07 12                 jump @757 if a0 == 0
      :                          @756
 15842: 82 59 08                 a2 = u64 [s0 + 0x8]
 15845: 7b 19 18                 u64 [sp + 0x18] = a2
 15848: 49 11 20 01              u64 [sp + 32] = 0x1
 15852: 7b 17 28                 u64 [sp + 0x28] = a0
 15855: 28 06                    jump @758
      :                          @757
 15857: 49 11 20                 u64 [sp + 32] = 0
 15860: 01                       fallthrough
      :                          @758
 15861: 64 17                    a0 = sp
 15863: 95 1a 18                 a3 = sp + 0x18
 15866: 64 69                    a2 = s1
 15868: 50 20 8c 01 4e fe        ra = 396, jump @722
      :                          @759 [@dyn 198]
 15874: 82 18                    a1 = u64 [sp]
 15876: 82 17 08                 a0 = u64 [sp + 0x8]
 15879: 51 08 14                 jump @763 if a1 == 0
      :                          @760
 15882: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 15892: aa 87 0d                 jump @764 if a0 == a1
      :                          @761
 15895: 52 07 18                 jump @765 if a0 != 0
      :                          @762
 15898: 00                       trap
      :                          @763
 15899: 7b 57 08                 u64 [s0 + 0x8] = a0
 15902: 7b 56                    u64 [s0] = s1
 15904: 01                       fallthrough
      :                          @764
 15905: 82 10 40                 ra = u64 [sp + 0x40]
 15908: 82 15 38                 s0 = u64 [sp + 0x38]
 15911: 82 16 30                 s1 = u64 [sp + 0x30]
 15914: 95 11 48                 sp = sp + 0x48
 15917: 32 00                    ret
      :                          @765
 15919: 00                       trap
      :                          @766
 15920: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 15923: 7b 10 30                 u64 [sp + 0x30] = ra
 15926: 7b 15 28                 u64 [sp + 0x28] = s0
 15929: 7b 16 20                 u64 [sp + 0x20] = s1
 15932: 64 89                    a2 = a1
 15934: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15937: 64 75                    s0 = a0
 15939: 51 0a 35                 jump @771 if a3 == 0
      :                          @767
 15942: 82 98                    a1 = u64 [a2]
 15944: 33 07                    a0 = 0
 15946: 95 8b 08                 a4 = a1 + 0x8
 15949: 01                       fallthrough
      :                          @768
 15950: 82 bc                    a5 = u64 [a4]
 15952: c8 c7 07                 a0 = a0 + a5
 15955: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15958: 95 bb 10                 a4 = a4 + 0x10
 15961: 52 0a f5                 jump @768 if a3 != 0
      :                          @769
 15964: 82 9a 18                 a3 = u64 [a2 + 0x18]
 15967: 51 0a 24                 jump @773 if a3 == 0
      :                          @770
 15970: 82 88 08                 a1 = u64 [a1 + 0x8]
 15973: 8e 88                    a1 = a1 >u 0
 15975: 88 7a 10                 a3 = a0 <u 0x10
 15978: 85 aa 01                 a3 = a3 ^ 0x1
 15981: d4 a8 08                 a1 = a1 | a3
 15984: 89 7a                    a3 = a0 <s 0
 15986: e0 a8 08                 a1 = a1 & ~a3
 15989: 52 08 0a                 jump @772 if a1 != 0
      :                          @771
 15992: 33 07                    a0 = 0
 15994: 33 08 01                 a1 = 0x1
 15997: 28 4f                    jump @781
      :                          @772
 15999: 97 77 01                 a0 = a0 << 0x1
 16002: 01                       fallthrough
      :                          @773
 16003: 51 07 45                 jump @780 if a0 == 0
      :                          @774
 16006: 57 07 7e                 jump @786 if a0 <s 0
      :                          @775
 16009: 64 52                    t0 = s0
 16011: 33 08 40 00 03           a1 = 0x30040
 16016: 95 88 00 f0 ff 00        a1 = a1 + 0xfff000
 16022: 33 0b ff ef ff 00        a4 = 0xffefff
 16028: 01                       fallthrough
      :                          @776
 16029: 82 8c                    a5 = u64 [a1]
 16031: c8 7c 0a                 a3 = a5 + a0
 16034: ac ca 60                 jump @784 if a3 <u a5
      :                          @777
 16037: 95 a5 01                 s0 = a3 + 0x1
 16040: 88 56 01                 s1 = s0 <u 0x1
 16043: d8 5b 05                 s0 = a4 <u s0
 16046: d4 65 05                 s0 = s0 | s1
 16049: 52 05 51                 jump @784 if s0 != 0
      :                          @778
 16052: 82 86                    s1 = u64 [a1]
 16054: ab c6 e7                 jump @776 if s1 != a5
      :                          @779
 16057: 7b 8a                    u64 [a1] = a3
 16059: 33 08 3f f0 02 01        a1 = 0x102f03f
 16065: c9 a8 08                 a1 = a1 - a3
 16068: 64 25                    s0 = t0
 16070: 28 06                    jump @781
      :                          @780
 16072: 33 08 01                 a1 = 0x1
 16075: 01                       fallthrough
      :                          @781
 16076: 7b 17                    u64 [sp] = a0
 16078: 7b 18 08                 u64 [sp + 0x8] = a1
 16081: 49 11 10                 u64 [sp + 16] = 0
 16084: 33 08 c0 0f 01           a1 = 0x10fc0
 16089: 64 17                    a0 = sp
 16091: 50 20 8e 01 92 06        ra = 398, jump @911
      :                          @782 [@dyn 199]
 16097: 52 07 22                 jump @785 if a0 != 0
      :                          @783
 16100: 82 17 10                 a0 = u64 [sp + 0x10]
 16103: 82 18 08                 a1 = u64 [sp + 0x8]
 16106: 82 19                    a2 = u64 [sp]
 16108: 7b 57 10                 u64 [s0 + 0x10] = a0
 16111: 7b 58 08                 u64 [s0 + 0x8] = a1
 16114: 7b 59                    u64 [s0] = a2
 16116: 82 10 30                 ra = u64 [sp + 0x30]
 16119: 82 15 28                 s0 = u64 [sp + 0x28]
 16122: 82 16 20                 s1 = u64 [sp + 0x20]
 16125: 95 11 38                 sp = sp + 0x38
 16128: 32 00                    ret
      :                          @784
 16130: 00                       trap
      :                          @785
 16131: 00                       trap
      :                          @786
 16132: 00                       trap
      :                          @787 [@dyn 200]
 16133: 82 72                    t0 = u64 [a0]
 16135: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
 16141: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
 16147: ac 9a 32                 jump @793 if a3 <u a2
      :                          @788
 16150: 82 73 08                 t1 = u64 [a0 + 0x8]
 16153: 33 04 40 00 03           t2 = 0x30040
 16158: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
 16164: 33 0b ff ef ff 00        a4 = 0xffefff
 16170: 01                       fallthrough
      :                          @789
 16171: 82 ac                    a5 = u64 [a3]
 16173: c8 b4 09                 a2 = t2 + a4
 16176: c9 c9 09                 a2 = a2 - a5
 16179: ab 39 12                 jump @793 if a2 != t1
      :                          @790
 16182: c9 2c 09                 a2 = a5 - t0
 16185: 01                       fallthrough
      :                          @791
 16186: 82 a7                    a0 = u64 [a3]
 16188: ab c7 ef                 jump @789 if a0 != a5
      :                          @792
 16191: 7b a9                    u64 [a3] = a2
 16193: 33 08                    a1 = 0
 16195: 32 00                    ret
      :                          @793
 16197: 32 00                    ret
      :                          @794 [@dyn 201]
 16199: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 16202: 7b 10 18                 u64 [sp + 0x18] = ra
 16205: 7b 15 10                 u64 [sp + 0x10] = s0
 16208: 7b 16 08                 u64 [sp + 0x8] = s1
 16211: 64 75                    s0 = a0
 16213: 82 7a 10                 a3 = u64 [a0 + 0x10]
 16216: 82 77                    a0 = u64 [a0]
 16218: c9 a7 07                 a0 = a0 - a3
 16221: 64 96                    s1 = a2
 16223: ac 97 2b                 jump @797 if a0 <u a2
      :                          @795
 16226: 7b 1a                    u64 [sp] = a3
 16228: 82 57 08                 a0 = u64 [s0 + 0x8]
 16231: c8 a7 07                 a0 = a0 + a3
 16234: 64 69                    a2 = s1
 16236: 50 20 94 01 4f 01        ra = 404, jump @816
      :                          @796 [@dyn 202]
 16242: 82 17                    a0 = u64 [sp]
 16244: c8 76 06                 s1 = s1 + a0
 16247: 7b 56 10                 u64 [s0 + 0x10] = s1
 16250: 33 07                    a0 = 0
 16252: 82 10 18                 ra = u64 [sp + 0x18]
 16255: 82 15 10                 s0 = u64 [sp + 0x10]
 16258: 82 16 08                 s1 = u64 [sp + 0x8]
 16261: 95 11 20                 sp = sp + 0x20
 16264: 32 00                    ret
      :                          @797
 16266: 64 57                    a0 = s0
 16268: 7b 18                    u64 [sp] = a1
 16270: 64 a8                    a1 = a3
 16272: 64 69                    a2 = s1
 16274: 50 20 96 01 40 fc        ra = 406, jump @710
      :                          @798 [@dyn 203]
 16280: 82 18                    a1 = u64 [sp]
 16282: 82 5a 10                 a3 = u64 [s0 + 0x10]
 16285: 28 c5                    jump @795
      :                          @799 [@dyn 204]
 16287: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16290: 7b 10 20                 u64 [sp + 0x20] = ra
 16293: 7b 15 18                 u64 [sp + 0x18] = s0
 16296: 7b 16 10                 u64 [sp + 0x10] = s1
 16299: 64 86                    s1 = a1
 16301: 83 88                    i32 a1 = a1 + 0
 16303: 33 09 80 00              a2 = 0x80
 16307: 64 7a                    a3 = a0
 16309: ae 98 2c                 jump @804 if a1 >=u a2
      :                          @800
 16312: 82 a8 10                 a1 = u64 [a3 + 0x10]
 16315: 82 a7                    a0 = u64 [a3]
 16317: ab 78 13                 jump @803 if a1 != a0
      :                          @801
 16320: 64 a7                    a0 = a3
 16322: 64 a5                    s0 = a3
 16324: 50 20 9a 01 f3 fd        ra = 410, jump @754
      :                          @802 [@dyn 205]
 16330: 64 5a                    a3 = s0
 16332: 82 58 10                 a1 = u64 [s0 + 0x10]
 16335: 01                       fallthrough
      :                          @803
 16336: 82 a7 08                 a0 = u64 [a3 + 0x8]
 16339: c8 87 07                 a0 = a0 + a1
 16342: 78 76                    u8 [a0] = s1
 16344: 95 88 01                 a1 = a1 + 0x1
 16347: 7b a8 10                 u64 [a3 + 0x10] = a1
 16350: 28 ac 00                 jump @812
      :                          @804
 16353: 8b 67 0b                 i32 a0 = s1 >> 0xb
 16356: 48 11 0c                 u32 [sp + 12] = 0
 16359: 52 07 1c                 jump @806 if a0 != 0
      :                          @805
 16362: 98 67 06                 a0 = s1 >> 0x6
 16365: 86 77 c0 00              a0 = a0 | 0xc0
 16369: 78 17 0c                 u8 [sp + 0xc] = a0
 16372: 84 67 3f                 a0 = s1 & 0x3f
 16375: 86 77 80 00              a0 = a0 | 0x80
 16379: 78 17 0d                 u8 [sp + 0xd] = a0
 16382: 33 06 02                 s1 = 0x2
 16385: 28 63                    jump @809
      :                          @806
 16387: 8b 67 10                 i32 a0 = s1 >> 0x10
 16390: 52 07 29                 jump @808 if a0 != 0
      :                          @807
 16393: 98 67 0c                 a0 = s1 >> 0xc
 16396: 86 77 e0 00              a0 = a0 | 0xe0
 16400: 78 17 0c                 u8 [sp + 0xc] = a0
 16403: 97 67 34                 a0 = s1 << 0x34
 16406: 98 77 3a                 a0 = a0 >> 0x3a
 16409: 95 77 80 00              a0 = a0 + 0x80
 16413: 78 17 0d                 u8 [sp + 0xd] = a0
 16416: 84 67 3f                 a0 = s1 & 0x3f
 16419: 86 77 80 00              a0 = a0 | 0x80
 16423: 78 17 0e                 u8 [sp + 0xe] = a0
 16426: 33 06 03                 s1 = 0x3
 16429: 28 37                    jump @809
      :                          @808
 16431: 97 67 2b                 a0 = s1 << 0x2b
 16434: 98 77 3d                 a0 = a0 >> 0x3d
 16437: 95 77 f0 00              a0 = a0 + 0xf0
 16441: 78 17 0c                 u8 [sp + 0xc] = a0
 16444: 97 67 2e                 a0 = s1 << 0x2e
 16447: 98 77 3a                 a0 = a0 >> 0x3a
 16450: 95 77 80 00              a0 = a0 + 0x80
 16454: 78 17 0d                 u8 [sp + 0xd] = a0
 16457: 97 67 34                 a0 = s1 << 0x34
 16460: 98 77 3a                 a0 = a0 >> 0x3a
 16463: 95 77 80 00              a0 = a0 + 0x80
 16467: 78 17 0e                 u8 [sp + 0xe] = a0
 16470: 84 67 3f                 a0 = s1 & 0x3f
 16473: 86 77 80 00              a0 = a0 | 0x80
 16477: 78 17 0f                 u8 [sp + 0xf] = a0
 16480: 33 06 04                 s1 = 0x4
 16483: 01                       fallthrough
      :                          @809
 16484: 82 a5 10                 s0 = u64 [a3 + 0x10]
 16487: 82 a7                    a0 = u64 [a3]
 16489: c9 57 07                 a0 = a0 - s0
 16492: ac 67 2e                 jump @813 if a0 <u s1
      :                          @810
 16495: 7b 1a                    u64 [sp] = a3
 16497: 82 a7 08                 a0 = u64 [a3 + 0x8]
 16500: c8 57 07                 a0 = a0 + s0
 16503: 95 18 0c                 a1 = sp + 0xc
 16506: 64 69                    a2 = s1
 16508: 50 20 9c 01 3f           ra = 412, jump @816
      :                          @811 [@dyn 206]
 16513: c8 56 06                 s1 = s1 + s0
 16516: 82 17                    a0 = u64 [sp]
 16518: 7b 76 10                 u64 [a0 + 0x10] = s1
 16521: 01                       fallthrough
      :                          @812
 16522: 33 07                    a0 = 0
 16524: 82 10 20                 ra = u64 [sp + 0x20]
 16527: 82 15 18                 s0 = u64 [sp + 0x18]
 16530: 82 16 10                 s1 = u64 [sp + 0x10]
 16533: 95 11 28                 sp = sp + 0x28
 16536: 32 00                    ret
      :                          @813
 16538: 64 a7                    a0 = a3
 16540: 64 58                    a1 = s0
 16542: 64 69                    a2 = s1
 16544: 64 a5                    s0 = a3
 16546: 50 20 9e 01 30 fb        ra = 414, jump @710
      :                          @814 [@dyn 207]
 16552: 64 5a                    a3 = s0
 16554: 82 55 10                 s0 = u64 [s0 + 0x10]
 16557: 28 c2                    jump @810
      :                          @815 [@dyn 208]
 16559: 64 8a                    a3 = a1
 16561: 33 08 c0 0f 01           a1 = 0x10fc0
 16566: 64 a9                    a2 = a3
 16568: 28 b5 04                 jump @911
      :                          @816
 16571: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 16574: 7b 10 18                 u64 [sp + 0x18] = ra
 16577: 7b 15 10                 u64 [sp + 0x10] = s0
 16580: 7b 16 08                 u64 [sp + 0x8] = s1
 16583: 53 19 10 64              jump @825 if a2 <u 16
      :                          @817
 16587: 8d 7a                    i32 a3 = -a0
 16589: 84 a2 07                 t0 = a3 & 0x7
 16592: c8 27 0b                 a4 = a0 + t0
 16595: 51 02 15                 jump @820 if t0 == 0
      :                          @818
 16598: 64 8c                    a5 = a1
 16600: 64 75                    s0 = a0
 16602: 01                       fallthrough
      :                          @819
 16603: 7c ca                    a3 = u8 [a5]
 16605: 78 5a                    u8 [s0] = a3
 16607: 95 55 01                 s0 = s0 + 0x1
 16610: 95 cc 01                 a5 = a5 + 0x1
 16613: ac b5 f6                 jump @819 if s0 <u a4
      :                          @820
 16616: c8 28 03                 t1 = a1 + t0
 16619: c9 29 02                 t0 = a2 - t0
 16622: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 16625: 84 38 07                 a1 = t1 & 0x7
 16628: c8 4b 0a                 a3 = a4 + t2
 16631: 51 08 3b                 jump @827 if a1 == 0
      :                          @821
 16634: 58 04 4b                 jump @830 if t2 <=s 0
      :                          @822
 16637: 97 38 03                 a1 = t1 << 0x3
 16640: 84 80 38                 ra = a1 & 0x38
 16643: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 16646: 82 c5                    s0 = u64 [a5]
 16648: 8d 88                    i32 a1 = -a1
 16650: 84 88 38                 a1 = a1 & 0x38
 16653: 95 cc 08                 a5 = a5 + 0x8
 16656: 01                       fallthrough
      :                          @823
 16657: 82 c6                    s1 = u64 [a5]
 16659: d0 05 05                 s0 = s0 >> ra
 16662: cf 86 09                 a2 = s1 << a1
 16665: d4 59 09                 a2 = a2 | s0
 16668: 7b b9                    u64 [a4] = a2
 16670: 95 bb 08                 a4 = a4 + 0x8
 16673: 95 cc 08                 a5 = a5 + 0x8
 16676: 64 65                    s0 = s1
 16678: ac ab eb                 jump @823 if a4 <u a3
      :                          @824
 16681: 28 1c                    jump @830
      :                          @825
 16683: 64 7a                    a3 = a0
 16685: 52 09 21                 jump @831 if a2 != 0
      :                          @826
 16688: 28 2f                    jump @833
      :                          @827
 16690: 58 04 13                 jump @830 if t2 <=s 0
      :                          @828
 16693: 64 38                    a1 = t1
 16695: 01                       fallthrough
      :                          @829
 16696: 82 89                    a2 = u64 [a1]
 16698: 7b b9                    u64 [a4] = a2
 16700: 95 bb 08                 a4 = a4 + 0x8
 16703: 95 88 08                 a1 = a1 + 0x8
 16706: ac ab f6                 jump @829 if a4 <u a3
      :                          @830
 16709: c8 43 08                 a1 = t1 + t2
 16712: 84 29 07                 a2 = t0 & 0x7
 16715: 51 09 14                 jump @833 if a2 == 0
      :                          @831
 16718: c8 a9 09                 a2 = a2 + a3
 16721: 01                       fallthrough
      :                          @832
 16722: 7c 8b                    a4 = u8 [a1]
 16724: 78 ab                    u8 [a3] = a4
 16726: 95 aa 01                 a3 = a3 + 0x1
 16729: 95 88 01                 a1 = a1 + 0x1
 16732: ac 9a f6                 jump @832 if a3 <u a2
      :                          @833
 16735: 82 10 18                 ra = u64 [sp + 0x18]
 16738: 82 15 10                 s0 = u64 [sp + 0x10]
 16741: 82 16 08                 s1 = u64 [sp + 0x8]
 16744: 95 11 20                 sp = sp + 0x20
 16747: 32 00                    ret
      :                          @834
 16749: 53 19 10 48              jump @843 if a2 <u 16
      :                          @835
 16753: 8d 7a                    i32 a3 = -a0
 16755: 84 aa 07                 a3 = a3 & 0x7
 16758: c8 a7 0b                 a4 = a0 + a3
 16761: 51 0a 0e                 jump @838 if a3 == 0
      :                          @836
 16764: 64 7c                    a5 = a0
 16766: 01                       fallthrough
      :                          @837
 16767: 78 c8                    u8 [a5] = a1
 16769: 95 cc 01                 a5 = a5 + 0x1
 16772: ac bc fb                 jump @837 if a5 <u a4
      :                          @838
 16775: c9 a9 03                 t1 = a2 - a3
 16778: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 16781: c8 cb 0a                 a3 = a4 + a5
 16784: 58 0c 1d                 jump @841 if a5 <=s 0
      :                          @839
 16787: 84 82 ff 00              t0 = a1 & 0xff
 16791: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 16801: ca 92 0c                 a5 = t0 * a2
 16804: 01                       fallthrough
      :                          @840
 16805: 7b bc                    u64 [a4] = a5
 16807: 95 bb 08                 a4 = a4 + 0x8
 16810: ac ab fb                 jump @840 if a4 <u a3
      :                          @841
 16813: 84 39 07                 a2 = t1 & 0x7
 16816: 52 09 0a                 jump @844 if a2 != 0
      :                          @842
 16819: 28 13                    jump @846
      :                          @843
 16821: 64 7a                    a3 = a0
 16823: 51 09 0f                 jump @846 if a2 == 0
      :                          @844
 16826: c8 a9 09                 a2 = a2 + a3
 16829: 01                       fallthrough
      :                          @845
 16830: 78 a8                    u8 [a3] = a1
 16832: 95 aa 01                 a3 = a3 + 0x1
 16835: ac 9a fb                 jump @845 if a3 <u a2
      :                          @846
 16838: 32 00                    ret
      :                          @847 [@dyn 209]
 16840: 82 77                    a0 = u64 [a0]
 16842: 01                       fallthrough
      :                          @848
 16843: 28                       jump @848
      :                          @849
 16844: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 16847: 7b 10 50                 u64 [sp + 0x50] = ra
 16850: 7b 15 48                 u64 [sp + 0x48] = s0
 16853: 7b 16 40                 u64 [sp + 0x40] = s1
 16856: 7b 18                    u64 [sp] = a1
 16858: 98 79 04                 a2 = a0 >> 0x4
 16861: 33 08 27                 a1 = 0x27
 16864: 53 29 71 02 81 00        jump @852 if a2 <u 625
      :                          @850
 16870: 33 08 27                 a1 = 0x27
 16873: 95 1a 3e                 a3 = sp + 0x3e
 16876: 3a 09 08 00 03           a2 = u64 [0x30008]
 16881: 7b 19 10                 u64 [sp + 0x10] = a2
 16884: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 16890: 33 04 7b 14              t2 = 0x147b
 16894: 33 0b 48 10 01           a4 = 0x11048
 16899: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 16905: 01                       fallthrough
      :                          @851
 16906: 64 72                    t0 = a0
 16908: 82 17 10                 a0 = u64 [sp + 0x10]
 16911: d6 72 07                 a0 = t0 mulhu a0
 16914: 98 77 0b                 a0 = a0 >> 0xb
 16917: 82 19 08                 a2 = u64 [sp + 0x8]
 16920: c0 97 0c                 i32 a5 = a0 * a2
 16923: c8 2c 06                 s1 = a5 + t0
 16926: 97 6c 30                 a5 = s1 << 0x30
 16929: 98 cc 32                 a5 = a5 >> 0x32
 16932: ca 4c 0c                 a5 = a5 * t2
 16935: 98 c3 11                 t1 = a5 >> 0x11
 16938: 98 cc 10                 a5 = a5 >> 0x10
 16941: 84 cc fe 07              a5 = a5 & 0x7fe
 16945: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 16948: c8 69 09                 a2 = a2 + s1
 16951: 97 99 31                 a2 = a2 << 0x31
 16954: 98 99 30                 a2 = a2 >> 0x30
 16957: c8 bc 0c                 a5 = a5 + a4
 16960: 7c c6                    s1 = u8 [a5]
 16962: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16965: c8 b9 09                 a2 = a2 + a4
 16968: 7c 95 01                 s0 = u8 [a2 + 0x1]
 16971: 7c 99                    a2 = u8 [a2]
 16973: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 16976: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 16979: 78 a5 01                 u8 [a3 + 0x1] = s0
 16982: 78 a9                    u8 [a3] = a2
 16984: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 16987: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 16990: ac 20 ac                 jump @851 if ra <u t0
      :                          @852
 16993: 54 17 63 3b              jump @854 if a0 <=u 99
      :                          @853
 16997: 97 79 30                 a2 = a0 << 0x30
 17000: 98 99 32                 a2 = a2 >> 0x32
 17003: 96 99 7b 14              a2 = a2 * 0x147b
 17007: 98 99 11                 a2 = a2 >> 0x11
 17010: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 17013: c8 a7 07                 a0 = a0 + a3
 17016: 97 77 31                 a0 = a0 << 0x31
 17019: 98 77 30                 a0 = a0 >> 0x30
 17022: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 17025: 33 0a 48 10 01           a3 = 0x11048
 17030: c8 a7 07                 a0 = a0 + a3
 17033: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 17036: 7c 77                    a0 = u8 [a0]
 17038: 95 1b 19                 a4 = sp + 0x19
 17041: c8 8b 0b                 a4 = a4 + a1
 17044: 78 ba 01                 u8 [a4 + 0x1] = a3
 17047: 78 b7                    u8 [a4] = a0
 17049: 64 97                    a0 = a2
 17051: 01                       fallthrough
      :                          @854
 17052: 55 17 0a 14              jump @856 if a0 >=u 10
      :                          @855
 17056: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 17059: 95 19 19                 a2 = sp + 0x19
 17062: c8 89 09                 a2 = a2 + a1
 17065: 83 77 30                 i32 a0 = a0 + 0x30
 17068: 78 97                    u8 [a2] = a0
 17070: 28 21                    jump @857
      :                          @856
 17072: 97 77 01                 a0 = a0 << 0x1
 17075: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 17078: 33 09 48 10 01           a2 = 0x11048
 17083: c8 97 07                 a0 = a0 + a2
 17086: 7c 79 01                 a2 = u8 [a0 + 0x1]
 17089: 7c 77                    a0 = u8 [a0]
 17091: 95 1a 19                 a3 = sp + 0x19
 17094: c8 8a 0a                 a3 = a3 + a1
 17097: 78 a9 01                 u8 [a3 + 0x1] = a2
 17100: 78 a7                    u8 [a3] = a0
 17102: 01                       fallthrough
      :                          @857
 17103: 95 1a 19                 a3 = sp + 0x19
 17106: c8 8a 0a                 a3 = a3 + a1
 17109: 9a 8b 27                 a4 = 0x27 - a1
 17112: 33 08 f0 0f 01           a1 = 0x10ff0
 17117: 82 17                    a0 = u64 [sp]
 17119: 33 09                    a2 = 0
 17121: 50 20 a4 01 13           ra = 420, jump @859
      :                          @858 [@dyn 210]
 17126: 82 10 50                 ra = u64 [sp + 0x50]
 17129: 82 15 48                 s0 = u64 [sp + 0x48]
 17132: 82 16 40                 s1 = u64 [sp + 0x40]
 17135: 95 11 58                 sp = sp + 0x58
 17138: 32 00                    ret
      :                          @859
 17140: 95 11 98                 sp = sp + 0xffffffffffffff98
 17143: 7b 10 60                 u64 [sp + 0x60] = ra
 17146: 7b 15 58                 u64 [sp + 0x58] = s0
 17149: 7b 16 50                 u64 [sp + 0x50] = s1
 17152: 80 73 34                 t1 = u32 [a0 + 0x34]
 17155: 7b 1a 20                 u64 [sp + 0x20] = a3
 17158: 64 9c                    a5 = a2
 17160: 84 36 01                 s1 = t1 & 0x1
 17163: 33 02 2b                 t0 = 0x2b
 17166: 33 09 00 00 11           a2 = 0x110000
 17171: 84 3a 04                 a3 = t1 & 0x4
 17174: 7b 1b 28                 u64 [sp + 0x28] = a4
 17177: c8 b6 04                 t2 = s1 + a4
 17180: 7b 1c 30                 u64 [sp + 0x30] = a5
 17183: 52 0a 10                 jump @862 if a3 != 0
      :                          @860
 17186: 49 11 38                 u64 [sp + 56] = 0
 17189: 82 78                    a1 = u64 [a0]
 17191: 94 69 2b                 a2 = 0x2b if s1 != 0
 17194: 52 08 35                 jump @866 if a1 != 0
      :                          @861
 17197: 28 56                    jump @871
      :                          @862
 17199: 7b 18 38                 u64 [sp + 0x38] = a1
 17202: 33 09                    a2 = 0
 17204: 51 0c 1b                 jump @865 if a5 == 0
      :                          @863
 17207: 82 1b 38                 a4 = u64 [sp + 0x38]
 17210: 01                       fallthrough
      :                          @864
 17211: 7d b5                    s0 = i8 [a4]
 17213: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 17216: 85 5a 01                 a3 = s0 ^ 0x1
 17219: c8 a9 09                 a2 = a2 + a3
 17222: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 17225: 95 bb 01                 a4 = a4 + 0x1
 17228: 52 0c ef                 jump @864 if a5 != 0
      :                          @865
 17231: c8 94 04                 t2 = t2 + a2
 17234: 33 09 00 00 11           a2 = 0x110000
 17239: 82 78                    a1 = u64 [a0]
 17241: db 62 09                 a2 = t0 if s1 != 0
 17244: 51 08 27                 jump @871 if a1 == 0
      :                          @866
 17247: 82 7a 08                 a3 = u64 [a0 + 0x8]
 17250: ae a4 21                 jump @871 if t2 >=u a3
      :                          @867
 17253: 84 38 08                 a1 = t1 & 0x8
 17256: 52 08 51                 jump @874 if a1 != 0
      :                          @868
 17259: 7c 76 38                 s1 = u8 [a0 + 0x38]
 17262: c9 4a 0a                 a3 = a3 - t2
 17265: 7b 19 18                 u64 [sp + 0x18] = a2
 17268: 5a 16 01 a0 00           jump @881 if s1 >s 1
      :                          @869
 17273: 52 06 ad 00              jump @883 if s1 != 0
      :                          @870
 17277: 7b 1a 10                 u64 [sp + 0x10] = a3
 17280: 28 ac 00                 jump @884
      :                          @871
 17283: 82 75 20                 s0 = u64 [a0 + 0x20]
 17286: 82 76 28                 s1 = u64 [a0 + 0x28]
 17289: 64 57                    a0 = s0
 17291: 64 68                    a1 = s1
 17293: 82 1a 38                 a3 = u64 [sp + 0x38]
 17296: 82 1b 30                 a4 = u64 [sp + 0x30]
 17299: 50 20 a6 01 75 01        ra = 422, jump @904
      :                          @872 [@dyn 211]
 17305: 33 08 01                 a1 = 0x1
 17308: 52 07 be 00              jump @889 if a0 != 0
      :                          @873
 17312: 82 6c 18                 a5 = u64 [s1 + 0x18]
 17315: 64 57                    a0 = s0
 17317: 82 18 20                 a1 = u64 [sp + 0x20]
 17320: 82 19 28                 a2 = u64 [sp + 0x28]
 17323: 82 10 60                 ra = u64 [sp + 0x60]
 17326: 82 15 58                 s0 = u64 [sp + 0x58]
 17329: 82 16 50                 s1 = u64 [sp + 0x50]
 17332: 95 11 68                 sp = sp + 0x68
 17335: 32 0c                    jump [a5]
      :                          @874
 17337: 7b 1a 40                 u64 [sp + 0x40] = a3
 17340: 64 45                    s0 = t2
 17342: 81 78 30                 a1 = i32 [a0 + 0x30]
 17345: 7b 18 10                 u64 [sp + 0x10] = a1
 17348: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 17351: 7b 1a 08                 u64 [sp + 0x8] = a3
 17354: 82 7a 20                 a3 = u64 [a0 + 0x20]
 17357: 82 78 28                 a1 = u64 [a0 + 0x28]
 17360: 48 17 30 30              u32 [a0 + 48] = 0x30
 17364: 7b 17                    u64 [sp] = a0
 17366: 46 17 38 01              u8 [a0 + 56] = 0x1
 17370: 7b 1a 48                 u64 [sp + 0x48] = a3
 17373: 64 a7                    a0 = a3
 17375: 64 86                    s1 = a1
 17377: 82 1a 38                 a3 = u64 [sp + 0x38]
 17380: 82 1b 30                 a4 = u64 [sp + 0x30]
 17383: 50 20 a8 01 21 01        ra = 424, jump @904
      :                          @875 [@dyn 212]
 17389: 52 07 69                 jump @888 if a0 != 0
      :                          @876
 17392: 82 17 40                 a0 = u64 [sp + 0x40]
 17395: c9 57 05                 s0 = a0 - s0
 17398: 95 55 01                 s0 = s0 + 0x1
 17401: 01                       fallthrough
      :                          @877
 17402: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 17405: 51 05 cb 00              jump @899 if s0 == 0
      :                          @878
 17409: 82 69 20                 a2 = u64 [s1 + 0x20]
 17412: 33 08 30                 a1 = 0x30
 17415: 82 17 48                 a0 = u64 [sp + 0x48]
 17418: b4 90 02 aa 01           ra = 426, jump [a2]
      :                          @879 [@dyn 213]
 17423: 51 07 eb                 jump @877 if a0 == 0
      :                          @880
 17426: 28 44                    jump @888
      :                          @881
 17428: 52 16 02 12              jump @883 if s1 != 2
      :                          @882
 17432: 98 a6 01                 s1 = a3 >> 0x1
 17435: 95 a8 01                 a1 = a3 + 0x1
 17438: 98 88 01                 a1 = a1 >> 0x1
 17441: 7b 18 10                 u64 [sp + 0x10] = a1
 17444: 28 08                    jump @884
      :                          @883
 17446: 64 a6                    s1 = a3
 17448: 49 11 10                 u64 [sp + 16] = 0
 17451: 01                       fallthrough
      :                          @884
 17452: 82 78 20                 a1 = u64 [a0 + 0x20]
 17455: 7b 18 48                 u64 [sp + 0x48] = a1
 17458: 82 75 28                 s0 = u64 [a0 + 0x28]
 17461: 81 77 30                 a0 = i32 [a0 + 0x30]
 17464: 7b 17 40                 u64 [sp + 0x40] = a0
 17467: 95 66 01                 s1 = s1 + 0x1
 17470: 01                       fallthrough
      :                          @885
 17471: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 17474: 51 06 28                 jump @890 if s1 == 0
      :                          @886
 17477: 82 59 20                 a2 = u64 [s0 + 0x20]
 17480: 82 17 48                 a0 = u64 [sp + 0x48]
 17483: 82 18 40                 a1 = u64 [sp + 0x40]
 17486: b4 90 02 ac 01           ra = 428, jump [a2]
      :                          @887 [@dyn 214]
 17491: 51 07 ec                 jump @885 if a0 == 0
      :                          @888
 17494: 33 08 01                 a1 = 0x1
 17497: 01                       fallthrough
      :                          @889
 17498: 64 87                    a0 = a1
 17500: 82 10 60                 ra = u64 [sp + 0x60]
 17503: 82 15 58                 s0 = u64 [sp + 0x58]
 17506: 82 16 50                 s1 = u64 [sp + 0x50]
 17509: 95 11 68                 sp = sp + 0x68
 17512: 32 00                    ret
      :                          @890
 17514: 82 16 48                 s1 = u64 [sp + 0x48]
 17517: 64 67                    a0 = s1
 17519: 64 58                    a1 = s0
 17521: 82 19 18                 a2 = u64 [sp + 0x18]
 17524: 82 1a 38                 a3 = u64 [sp + 0x38]
 17527: 82 1b 30                 a4 = u64 [sp + 0x30]
 17530: 50 20 ae 01 8e 00        ra = 430, jump @904
      :                          @891 [@dyn 215]
 17536: 33 08 01                 a1 = 0x1
 17539: 52 07 d7                 jump @889 if a0 != 0
      :                          @892
 17542: 82 5a 18                 a3 = u64 [s0 + 0x18]
 17545: 64 67                    a0 = s1
 17547: 82 18 20                 a1 = u64 [sp + 0x20]
 17550: 82 19 28                 a2 = u64 [sp + 0x28]
 17553: b4 a0 02 b0 01           ra = 432, jump [a3]
      :                          @893 [@dyn 216]
 17558: 33 08 01                 a1 = 0x1
 17561: 52 07 c1                 jump @889 if a0 != 0
      :                          @894
 17564: 82 17 10                 a0 = u64 [sp + 0x10]
 17567: 9a 77                    a0 = -a0
 17569: 7b 17 38                 u64 [sp + 0x38] = a0
 17572: 33 06 ff                 s1 = 0xffffffffffffffff
 17575: 01                       fallthrough
      :                          @895
 17576: 82 17 38                 a0 = u64 [sp + 0x38]
 17579: c8 67 07                 a0 = a0 + s1
 17582: 51 17 ff 45              jump @902 if a0 == 4294967295
      :                          @896
 17586: 82 59 20                 a2 = u64 [s0 + 0x20]
 17589: 82 17 48                 a0 = u64 [sp + 0x48]
 17592: 82 18 40                 a1 = u64 [sp + 0x40]
 17595: b4 90 02 b2 01           ra = 434, jump [a2]
      :                          @897 [@dyn 217]
 17600: 95 66 01                 s1 = s1 + 0x1
 17603: 51 07 e5                 jump @895 if a0 == 0
      :                          @898
 17606: 28 39                    jump @903
      :                          @899
 17608: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17611: 82 17 48                 a0 = u64 [sp + 0x48]
 17614: 82 18 20                 a1 = u64 [sp + 0x20]
 17617: 82 19 28                 a2 = u64 [sp + 0x28]
 17620: b4 a0 02 b4 01           ra = 436, jump [a3]
      :                          @900 [@dyn 218]
 17625: 33 08 01                 a1 = 0x1
 17628: 52 07 7e ff              jump @889 if a0 != 0
      :                          @901
 17632: 33 08                    a1 = 0
 17634: 82 16                    s1 = u64 [sp]
 17636: 82 17 10                 a0 = u64 [sp + 0x10]
 17639: 7a 67 30                 u32 [s1 + 0x30] = a0
 17642: 82 17 08                 a0 = u64 [sp + 0x8]
 17645: 78 67 38                 u8 [s1 + 0x38] = a0
 17648: 28 6a ff                 jump @889
      :                          @902
 17651: 82 16 10                 s1 = u64 [sp + 0x10]
 17654: 82 17 10                 a0 = u64 [sp + 0x10]
 17657: d8 76 08                 a1 = s1 <u a0
 17660: 28 5e ff                 jump @889
      :                          @903
 17663: 82 17 10                 a0 = u64 [sp + 0x10]
 17666: d8 76 08                 a1 = s1 <u a0
 17669: 28 55 ff                 jump @889
      :                          @904
 17672: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17675: 7b 10 20                 u64 [sp + 0x20] = ra
 17678: 7b 15 18                 u64 [sp + 0x18] = s0
 17681: 7b 16 10                 u64 [sp + 0x10] = s1
 17684: 83 9c                    i32 a5 = a2 + 0
 17686: 33 02 00 00 11           t0 = 0x110000
 17691: 64 a6                    s1 = a3
 17693: 64 85                    s0 = a1
 17695: 64 7a                    a3 = a0
 17697: aa 2c 21                 jump @907 if a5 == t0
      :                          @905
 17700: 82 5c 20                 a5 = u64 [s0 + 0x20]
 17703: 64 a7                    a0 = a3
 17705: 64 98                    a1 = a2
 17707: 7b 1b 08                 u64 [sp + 0x8] = a4
 17710: 7b 1a                    u64 [sp] = a3
 17712: b4 c0 02 b6 01           ra = 438, jump [a5]
      :                          @906 [@dyn 219]
 17717: 82 1a                    a3 = u64 [sp]
 17719: 82 1b 08                 a4 = u64 [sp + 0x8]
 17722: 64 78                    a1 = a0
 17724: 33 07 01                 a0 = 0x1
 17727: 52 08 20                 jump @910 if a1 != 0
      :                          @907
 17730: 51 06 1a                 jump @909 if s1 == 0
      :                          @908
 17733: 82 5c 18                 a5 = u64 [s0 + 0x18]
 17736: 64 a7                    a0 = a3
 17738: 64 68                    a1 = s1
 17740: 64 b9                    a2 = a4
 17742: 82 10 20                 ra = u64 [sp + 0x20]
 17745: 82 15 18                 s0 = u64 [sp + 0x18]
 17748: 82 16 10                 s1 = u64 [sp + 0x10]
 17751: 95 11 28                 sp = sp + 0x28
 17754: 32 0c                    jump [a5]
      :                          @909
 17756: 33 07                    a0 = 0
 17758: 01                       fallthrough
      :                          @910
 17759: 82 10 20                 ra = u64 [sp + 0x20]
 17762: 82 15 18                 s0 = u64 [sp + 0x18]
 17765: 82 16 10                 s1 = u64 [sp + 0x10]
 17768: 95 11 28                 sp = sp + 0x28
 17771: 32 00                    ret
      :                          @911
 17773: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 17777: 7b 10 80 00              u64 [sp + 0x80] = ra
 17781: 7b 15 78                 u64 [sp + 0x78] = s0
 17784: 7b 16 70                 u64 [sp + 0x70] = s1
 17787: 49 11 60 20              u64 [sp + 96] = 0x20
 17791: 33 0a 03                 a3 = 0x3
 17794: 78 1a 68                 u8 [sp + 0x68] = a3
 17797: 82 96 20                 s1 = u64 [a2 + 0x20]
 17800: 49 11 30                 u64 [sp + 48] = 0
 17803: 49 11 40                 u64 [sp + 64] = 0
 17806: 7b 17 50                 u64 [sp + 0x50] = a0
 17809: 7b 18 58                 u64 [sp + 0x58] = a1
 17812: 51 06 0a 01              jump @933 if s1 == 0
      :                          @912
 17816: 82 97 28                 a0 = u64 [a2 + 0x28]
 17819: 51 07 79 01              jump @943 if a0 == 0
      :                          @913
 17823: 49 11 28                 u64 [sp + 40] = 0
 17826: 82 95                    s0 = u64 [a2]
 17828: 7b 19 08                 u64 [sp + 0x8] = a2
 17831: 82 98 10                 a1 = u64 [a2 + 0x10]
 17834: 7b 18 18                 u64 [sp + 0x18] = a1
 17837: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 17840: 97 88 03                 a1 = a1 << 0x3
 17843: 98 88 03                 a1 = a1 >> 0x3
 17846: 95 88 01                 a1 = a1 + 0x1
 17849: 7b 18                    u64 [sp] = a1
 17851: 95 55 08                 s0 = s0 + 0x8
 17854: 96 78 38                 a1 = a0 * 0x38
 17857: 95 66 18                 s1 = s1 + 0x18
 17860: 33 07 a2 01              a0 = 0x1a2
 17864: 7b 17 10                 u64 [sp + 0x10] = a0
 17867: 01                       fallthrough
      :                          @914
 17868: 7b 18 20                 u64 [sp + 0x20] = a1
 17871: 82 59                    a2 = u64 [s0]
 17873: 51 09 18                 jump @917 if a2 == 0
      :                          @915
 17876: 82 1a 58                 a3 = u64 [sp + 0x58]
 17879: 82 17 50                 a0 = u64 [sp + 0x50]
 17882: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 17885: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17888: b4 a0 02 b8 01           ra = 440, jump [a3]
      :                          @916 [@dyn 220]
 17893: 52 07 55 01              jump @946 if a0 != 0
      :                          @917
 17897: 81 67 10                 a0 = i32 [s1 + 0x10]
 17900: 7a 17 60                 u32 [sp + 0x60] = a0
 17903: 7c 67 18                 a0 = u8 [s1 + 0x18]
 17906: 78 17 68                 u8 [sp + 0x68] = a0
 17909: 81 67 14                 a0 = i32 [s1 + 0x14]
 17912: 7a 17 64                 u32 [sp + 0x64] = a0
 17915: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17918: 82 67                    a0 = u64 [s1]
 17920: 51 08 26                 jump @922 if a1 == 0
      :                          @918
 17923: 52 18 01 16              jump @920 if a1 != 1
      :                          @919
 17927: 97 77 04                 a0 = a0 << 0x4
 17930: 82 18 18                 a1 = u64 [sp + 0x18]
 17933: c8 87 07                 a0 = a0 + a1
 17936: 82 78 08                 a1 = u64 [a0 + 0x8]
 17939: 82 19 10                 a2 = u64 [sp + 0x10]
 17942: aa 98 07                 jump @921 if a1 == a2
      :                          @920
 17945: 33 08                    a1 = 0
 17947: 28 0f                    jump @923
      :                          @921
 17949: 82 77                    a0 = u64 [a0]
 17951: 82 77                    a0 = u64 [a0]
 17953: 33 08 01                 a1 = 0x1
 17956: 28 06                    jump @923
      :                          @922
 17958: 33 08 01                 a1 = 0x1
 17961: 01                       fallthrough
      :                          @923
 17962: 7b 18 30                 u64 [sp + 0x30] = a1
 17965: 7b 17 38                 u64 [sp + 0x38] = a0
 17968: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 17971: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 17974: 51 08 26                 jump @928 if a1 == 0
      :                          @924
 17977: 52 18 01 16              jump @926 if a1 != 1
      :                          @925
 17981: 97 77 04                 a0 = a0 << 0x4
 17984: 82 18 18                 a1 = u64 [sp + 0x18]
 17987: c8 87 07                 a0 = a0 + a1
 17990: 82 78 08                 a1 = u64 [a0 + 0x8]
 17993: 82 19 10                 a2 = u64 [sp + 0x10]
 17996: aa 98 07                 jump @927 if a1 == a2
      :                          @926
 17999: 33 08                    a1 = 0
 18001: 28 0f                    jump @929
      :                          @927
 18003: 82 77                    a0 = u64 [a0]
 18005: 82 77                    a0 = u64 [a0]
 18007: 33 08 01                 a1 = 0x1
 18010: 28 06                    jump @929
      :                          @928
 18012: 33 08 01                 a1 = 0x1
 18015: 01                       fallthrough
      :                          @929
 18016: 7b 18 40                 u64 [sp + 0x40] = a1
 18019: 7b 17 48                 u64 [sp + 0x48] = a0
 18022: 82 67 08                 a0 = u64 [s1 + 0x8]
 18025: 97 77 04                 a0 = a0 << 0x4
 18028: 82 18 18                 a1 = u64 [sp + 0x18]
 18031: c8 78 08                 a1 = a1 + a0
 18034: 82 87                    a0 = u64 [a1]
 18036: 82 89 08                 a2 = u64 [a1 + 0x8]
 18039: 95 18 30                 a1 = sp + 0x30
 18042: b4 90 02 ba 01           ra = 442, jump [a2]
      :                          @930 [@dyn 221]
 18047: 52 07 bb 00              jump @946 if a0 != 0
      :                          @931
 18051: 95 55 10                 s0 = s0 + 0x10
 18054: 82 18 20                 a1 = u64 [sp + 0x20]
 18057: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 18060: 95 66 38                 s1 = s1 + 0x38
 18063: 82 17 28                 a0 = u64 [sp + 0x28]
 18066: 95 77 01                 a0 = a0 + 0x1
 18069: 7b 17 28                 u64 [sp + 0x28] = a0
 18072: 52 08 34 ff              jump @914 if a1 != 0
      :                          @932
 18076: 28 6b                    jump @941
      :                          @933
 18078: 82 97 18                 a0 = u64 [a2 + 0x18]
 18081: 51 07 73                 jump @943 if a0 == 0
      :                          @934
 18084: 82 95 10                 s0 = u64 [a2 + 0x10]
 18087: 33 0a                    a3 = 0
 18089: 97 78 04                 a1 = a0 << 0x4
 18092: c8 58 08                 a1 = a1 + s0
 18095: 7b 18 20                 u64 [sp + 0x20] = a1
 18098: 7b 19 08                 u64 [sp + 0x8] = a2
 18101: 82 96                    s1 = u64 [a2]
 18103: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 18106: 97 77 04                 a0 = a0 << 0x4
 18109: 98 77 04                 a0 = a0 >> 0x4
 18112: 95 77 01                 a0 = a0 + 0x1
 18115: 7b 17                    u64 [sp] = a0
 18117: 95 66 08                 s1 = s1 + 0x8
 18120: 01                       fallthrough
      :                          @935
 18121: 7b 1a 28                 u64 [sp + 0x28] = a3
 18124: 82 69                    a2 = u64 [s1]
 18126: 51 09 17                 jump @938 if a2 == 0
      :                          @936
 18129: 82 1a 58                 a3 = u64 [sp + 0x58]
 18132: 82 17 50                 a0 = u64 [sp + 0x50]
 18135: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 18138: 82 aa 18                 a3 = u64 [a3 + 0x18]
 18141: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @937 [@dyn 222]
 18146: 52 07 58                 jump @946 if a0 != 0
      :                          @938
 18149: 82 57                    a0 = u64 [s0]
 18151: 82 59 08                 a2 = u64 [s0 + 0x8]
 18154: 95 18 30                 a1 = sp + 0x30
 18157: b4 90 02 be 01           ra = 446, jump [a2]
      :                          @939 [@dyn 223]
 18162: 52 07 48                 jump @946 if a0 != 0
      :                          @940
 18165: 95 66 10                 s1 = s1 + 0x10
 18168: 95 55 10                 s0 = s0 + 0x10
 18171: 82 1a 28                 a3 = u64 [sp + 0x28]
 18174: 95 aa 01                 a3 = a3 + 0x1
 18177: 82 17 20                 a0 = u64 [sp + 0x20]
 18180: ab 75 c5                 jump @935 if s0 != a0
      :                          @941
 18183: 82 19 08                 a2 = u64 [sp + 0x8]
 18186: 82 1a                    a3 = u64 [sp]
 18188: 82 97 08                 a0 = u64 [a2 + 0x8]
 18191: ac 7a 0d                 jump @944 if a3 <u a0
      :                          @942
 18194: 28 2d                    jump @947
      :                          @943
 18196: 33 0a                    a3 = 0
 18198: 82 97 08                 a0 = u64 [a2 + 0x8]
 18201: 54 07 26                 jump @947 if a0 <=u 0
      :                          @944
 18204: 82 97                    a0 = u64 [a2]
 18206: 97 a8 04                 a1 = a3 << 0x4
 18209: c8 87 09                 a2 = a0 + a1
 18212: 82 1a 58                 a3 = u64 [sp + 0x58]
 18215: 82 17 50                 a0 = u64 [sp + 0x50]
 18218: 82 98                    a1 = u64 [a2]
 18220: 82 99 08                 a2 = u64 [a2 + 0x8]
 18223: 82 aa 18                 a3 = u64 [a3 + 0x18]
 18226: b4 a0 02 c0 01           ra = 448, jump [a3]
      :                          @945 [@dyn 224]
 18231: 51 07 08                 jump @947 if a0 == 0
      :                          @946
 18234: 33 07 01                 a0 = 0x1
 18237: 28 05                    jump @948
      :                          @947
 18239: 33 07                    a0 = 0
 18241: 01                       fallthrough
      :                          @948
 18242: 82 10 80 00              ra = u64 [sp + 0x80]
 18246: 82 15 78                 s0 = u64 [sp + 0x78]
 18249: 82 16 70                 s1 = u64 [sp + 0x70]
 18252: 95 11 88 00              sp = sp + 0x88
 18256: 32 00                    ret
      :                          @949 [@dyn 225]
 18258: 32 00                    ret
      :                          @950 [@dyn 226]
 18260: 95 11 80                 sp = sp + 0xffffffffffffff80
 18263: 7b 10 78                 u64 [sp + 0x78] = ra
 18266: 7b 15 70                 u64 [sp + 0x70] = s0
 18269: 7b 16 68                 u64 [sp + 0x68] = s1
 18272: 64 92                    t0 = a2
 18274: 33 00                    ra = 0
 18276: 33 0b                    a4 = 0
 18278: 33 05                    s0 = 0
 18280: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 18290: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 18296: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 18306: 82 79 10                 a2 = u64 [a0 + 0x10]
 18309: 7b 19 48                 u64 [sp + 0x48] = a2
 18312: 82 79                    a2 = u64 [a0]
 18314: 7b 19 38                 u64 [sp + 0x38] = a2
 18317: 82 77 08                 a0 = u64 [a0 + 0x8]
 18320: 7b 17 30                 u64 [sp + 0x30] = a0
 18323: 33 07 38 10 01           a0 = 0x11038
 18328: 7b 17 08                 u64 [sp + 0x8] = a0
 18331: 3a 07 10 00 03           a0 = u64 [0x30010]
 18336: 7b 17 60                 u64 [sp + 0x60] = a0
 18339: 7b 18 58                 u64 [sp + 0x58] = a1
 18342: 95 88 08                 a1 = a1 + 0x8
 18345: 7b 18                    u64 [sp] = a1
 18347: 33 0c 0a                 a5 = 0xa
 18350: 7b 12 20                 u64 [sp + 0x20] = t0
 18353: 7b 13 18                 u64 [sp + 0x18] = t1
 18356: 7b 14 10                 u64 [sp + 0x10] = t2
 18359: 28 3b                    jump @954
      :                          @951
 18361: 64 06                    s1 = ra
 18363: c8 89 07                 a0 = a2 + a1
 18366: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 18369: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 18372: 88 77 01                 a0 = a0 <u 0x1
 18375: 01                       fallthrough
      :                          @952
 18376: 82 1a 48                 a3 = u64 [sp + 0x48]
 18379: 78 a7                    u8 [a3] = a0
 18381: 82 17 30                 a0 = u64 [sp + 0x30]
 18384: 82 7a 18                 a3 = u64 [a0 + 0x18]
 18387: 82 17 38                 a0 = u64 [sp + 0x38]
 18390: b4 a0 02 c6 01           ra = 454, jump [a3]
      :                          @953 [@dyn 227]
 18395: 64 5b                    a4 = s0
 18397: 82 12 20                 t0 = u64 [sp + 0x20]
 18400: 82 13 18                 t1 = u64 [sp + 0x18]
 18403: 82 14 10                 t2 = u64 [sp + 0x10]
 18406: 64 60                    ra = s1
 18408: 33 0c 0a                 a5 = 0xa
 18411: 82 15 40                 s0 = u64 [sp + 0x40]
 18414: 52 07 64 01              jump @995 if a0 != 0
      :                          @954
 18418: 84 57 ff 00              a0 = s0 & 0xff
 18422: 52 07 58 01              jump @994 if a0 != 0
      :                          @955
 18426: 7b 1b 50                 u64 [sp + 0x50] = a4
 18429: ae 02 0a                 jump @958 if t0 >=u ra
      :                          @956
 18432: 28 ef 00                 jump @985
      :                          @957
 18435: ac 02 ec 00              jump @985 if t0 <u ra
      :                          @958
 18439: c9 02 08                 a1 = t0 - ra
 18442: 82 16 58                 s1 = u64 [sp + 0x58]
 18445: c8 06 06                 s1 = s1 + ra
 18448: 55 18 10 1d              jump @964 if a1 >=u 16
      :                          @959
 18452: aa 02 d8 00              jump @984 if t0 == ra
      :                          @960
 18456: 33 0a                    a3 = 0
 18458: 01                       fallthrough
      :                          @961
 18459: c8 a6 07                 a0 = s1 + a3
 18462: 7c 77                    a0 = u8 [a0]
 18464: aa c7 a5 00              jump @979 if a0 == a5
      :                          @962
 18468: 95 aa 01                 a3 = a3 + 0x1
 18471: ab a8 f4                 jump @961 if a1 != a3
      :                          @963
 18474: 28 c2 00                 jump @984
      :                          @964
 18477: 95 69 07                 a2 = s1 + 0x7
 18480: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 18483: c9 6a 07                 a0 = a3 - s1
 18486: d3 6a 0a                 a3 = a3 ^ s1
 18489: 88 aa 01                 a3 = a3 <u 0x1
 18492: 88 7b 01                 a4 = a0 <u 0x1
 18495: d4 ba 0a                 a3 = a3 | a4
 18498: 51 0a 45                 jump @970 if a3 == 0
      :                          @965
 18501: 33 07                    a0 = 0
 18503: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 18506: 82 1b                    a4 = u64 [sp]
 18508: c8 0b 0b                 a4 = a4 + ra
 18511: 28 08                    jump @967
      :                          @966
 18513: 82 1b                    a4 = u64 [sp]
 18515: c8 0b 0b                 a4 = a4 + ra
 18518: 01                       fallthrough
      :                          @967
 18519: c8 76 0c                 a5 = s1 + a0
 18522: 82 cc                    a5 = u64 [a5]
 18524: c8 7b 09                 a2 = a4 + a0
 18527: 82 99                    a2 = u64 [a2]
 18529: d3 4c 05                 s0 = a5 ^ t2
 18532: c8 35 05                 s0 = s0 + t1
 18535: e0 c5 0c                 a5 = s0 & ~a5
 18538: d3 49 05                 s0 = a2 ^ t2
 18541: c8 35 05                 s0 = s0 + t1
 18544: e0 95 09                 a2 = s0 & ~a2
 18547: d4 c9 09                 a2 = a2 | a5
 18550: 82 1c 60                 a5 = u64 [sp + 0x60]
 18553: d2 c9 09                 a2 = a2 & a5
 18556: 52 09 1f                 jump @973 if a2 != 0
      :                          @968
 18559: 95 77 10                 a0 = a0 + 0x10
 18562: ae 7a d5                 jump @967 if a3 >=u a0
      :                          @969
 18565: 28 16                    jump @973
      :                          @970
 18567: c8 a6 0b                 a4 = s1 + a3
 18570: 7c bb                    a4 = u8 [a4]
 18572: aa cb 51                 jump @982 if a4 == a5
      :                          @971
 18575: 95 aa 01                 a3 = a3 + 0x1
 18578: ab a7 f5                 jump @970 if a0 != a3
      :                          @972
 18581: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 18584: ae 7a b9                 jump @966 if a3 >=u a0
      :                          @973
 18587: aa 87 9b 00              jump @991 if a0 == a1
      :                          @974
 18591: 33 0a                    a3 = 0
 18593: c8 76 06                 s1 = s1 + a0
 18596: c9 72 08                 a1 = t0 - a0
 18599: c9 08 08                 a1 = a1 - ra
 18602: 33 0c 0a                 a5 = 0xa
 18605: 82 1b 50                 a4 = u64 [sp + 0x50]
 18608: 01                       fallthrough
      :                          @975
 18609: c8 a6 09                 a2 = s1 + a3
 18612: 7c 99                    a2 = u8 [a2]
 18614: aa c9 0b                 jump @978 if a2 == a5
      :                          @976
 18617: 95 aa 01                 a3 = a3 + 0x1
 18620: ab a8 f5                 jump @975 if a1 != a3
      :                          @977
 18623: 28 2d                    jump @984
      :                          @978
 18625: c8 7a 0a                 a3 = a3 + a0
 18628: 01                       fallthrough
      :                          @979
 18629: c8 0a 0a                 a3 = a3 + ra
 18632: 95 a0 01                 ra = a3 + 0x1
 18635: ae 2a 38 ff              jump @957 if a3 >=u t0
      :                          @980
 18639: 82 17 58                 a0 = u64 [sp + 0x58]
 18642: c8 7a 0a                 a3 = a3 + a0
 18645: 7c a7                    a0 = u8 [a3]
 18647: ab c7 2c ff              jump @957 if a0 != a5
      :                          @981
 18651: 28 62                    jump @992
      :                          @982
 18653: 82 1b 50                 a4 = u64 [sp + 0x50]
 18656: c8 0a 0a                 a3 = a3 + ra
 18659: 95 a0 01                 ra = a3 + 0x1
 18662: ac 2a e9                 jump @980 if a3 <u t0
      :                          @983
 18665: 28 1a ff                 jump @957
      :                          @984
 18668: 64 20                    ra = t0
 18670: 01                       fallthrough
      :                          @985
 18671: 49 11 40 01              u64 [sp + 64] = 0x1
 18675: 64 b5                    s0 = a4
 18677: 64 26                    s1 = t0
 18679: aa 2b 57                 jump @994 if a4 == t0
      :                          @986
 18682: 82 17 48                 a0 = u64 [sp + 0x48]
 18685: 7c 77                    a0 = u8 [a0]
 18687: 51 07 23                 jump @989 if a0 == 0
      :                          @987
 18690: 82 17 30                 a0 = u64 [sp + 0x30]
 18693: 82 7a 18                 a3 = u64 [a0 + 0x18]
 18696: 33 09 04                 a2 = 0x4
 18699: 82 17 38                 a0 = u64 [sp + 0x38]
 18702: 82 18 08                 a1 = u64 [sp + 0x8]
 18705: 7b 10 28                 u64 [sp + 0x28] = ra
 18708: b4 a0 02 c8 01           ra = 456, jump [a3]
      :                          @988 [@dyn 228]
 18713: 82 1b 50                 a4 = u64 [sp + 0x50]
 18716: 82 10 28                 ra = u64 [sp + 0x28]
 18719: 52 07 33                 jump @995 if a0 != 0
      :                          @989
 18722: c9 b6 09                 a2 = s1 - a4
 18725: 82 18 58                 a1 = u64 [sp + 0x58]
 18728: c8 b8 08                 a1 = a1 + a4
 18731: ab b6 8e fe              jump @951 if s1 != a4
      :                          @990
 18735: 64 06                    s1 = ra
 18737: 33 07                    a0 = 0
 18739: 28 95 fe                 jump @952
      :                          @991
 18742: 64 20                    ra = t0
 18744: 82 1b 50                 a4 = u64 [sp + 0x50]
 18747: 28 b4                    jump @985
      :                          @992
 18749: 49 11 40                 u64 [sp + 64] = 0
 18752: 64 05                    s0 = ra
 18754: 64 06                    s1 = ra
 18756: 82 17 48                 a0 = u64 [sp + 0x48]
 18759: 7c 77                    a0 = u8 [a0]
 18761: 52 07 b9                 jump @987 if a0 != 0
      :                          @993
 18764: 28 d6                    jump @989
      :                          @994
 18766: 33 07                    a0 = 0
 18768: 28 06                    jump @996
      :                          @995
 18770: 33 07 01                 a0 = 0x1
 18773: 01                       fallthrough
      :                          @996
 18774: 82 10 78                 ra = u64 [sp + 0x78]
 18777: 82 15 70                 s0 = u64 [sp + 0x70]
 18780: 82 16 68                 s1 = u64 [sp + 0x68]
 18783: 95 11 80 00              sp = sp + 0x80
 18787: 32 00                    ret
      :                          @997 [@dyn 229]
 18789: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18792: 7b 10 20                 u64 [sp + 0x20] = ra
 18795: 7b 15 18                 u64 [sp + 0x18] = s0
 18798: 7b 16 10                 u64 [sp + 0x10] = s1
 18801: 82 75 10                 s0 = u64 [a0 + 0x10]
 18804: 7c 59                    a2 = u8 [s0]
 18806: 82 7b                    a4 = u64 [a0]
 18808: 82 76 08                 s1 = u64 [a0 + 0x8]
 18811: 51 09 33                 jump @1001 if a2 == 0
      :                          @998
 18814: 82 6a 18                 a3 = u64 [s1 + 0x18]
 18817: 7b 18 08                 u64 [sp + 0x8] = a1
 18820: 33 08 38 10 01           a1 = 0x11038
 18825: 33 09 04                 a2 = 0x4
 18828: 64 b7                    a0 = a4
 18830: 7b 1b                    u64 [sp] = a4
 18832: b4 a0 02 cc 01           ra = 460, jump [a3]
      :                          @999 [@dyn 230]
 18837: 82 18 08                 a1 = u64 [sp + 0x8]
 18840: 82 1b                    a4 = u64 [sp]
 18842: 51 07 14                 jump @1001 if a0 == 0
      :                          @1000
 18845: 33 07 01                 a0 = 0x1
 18848: 82 10 20                 ra = u64 [sp + 0x20]
 18851: 82 15 18                 s0 = u64 [sp + 0x18]
 18854: 82 16 10                 s1 = u64 [sp + 0x10]
 18857: 95 11 28                 sp = sp + 0x28
 18860: 32 00                    ret
      :                          @1001
 18862: 83 87                    i32 a0 = a1 + 0
 18864: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 18867: 88 77 01                 a0 = a0 <u 0x1
 18870: 78 57                    u8 [s0] = a0
 18872: 82 6c 20                 a5 = u64 [s1 + 0x20]
 18875: 64 b7                    a0 = a4
 18877: 82 10 20                 ra = u64 [sp + 0x20]
 18880: 82 15 18                 s0 = u64 [sp + 0x18]
 18883: 82 16 10                 s1 = u64 [sp + 0x10]
 18886: 95 11 28                 sp = sp + 0x28
 18889: 32 0c                    jump [a5]
      :                          @1002 [@dyn 231]
 18891: 64 8a                    a3 = a1
 18893: 33 08 f8 0f 01           a1 = 0x10ff8
 18898: 64 a9                    a2 = a3
 18900: 28 99 fb                 jump @911
      :                          @1003
 18903: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 18907: 7b 10 88 00              u64 [sp + 0x88] = ra
 18911: 7b 15 80 00              u64 [sp + 0x80] = s0
 18915: 7b 16 78                 u64 [sp + 0x78] = s1
 18918: 64 75                    s0 = a0
 18920: 7c 77 08                 a0 = u8 [a0 + 0x8]
 18923: 64 8b                    a4 = a1
 18925: 33 08 01                 a1 = 0x1
 18928: 33 06 01                 s1 = 0x1
 18931: 51 07 1d                 jump @1005 if a0 == 0
      :                          @1004
 18934: 78 56 08                 u8 [s0 + 0x8] = s1
 18937: 46 15 09 01              u8 [s0 + 9] = 0x1
 18941: 64 57                    a0 = s0
 18943: 82 10 88 00              ra = u64 [sp + 0x88]
 18947: 82 15 80 00              s0 = u64 [sp + 0x80]
 18951: 82 16 78                 s1 = u64 [sp + 0x78]
 18954: 95 11 90 00              sp = sp + 0x90
 18958: 32 00                    ret
      :                          @1005
 18960: 64 9a                    a3 = a2
 18962: 82 5c                    a5 = u64 [s0]
 18964: 80 c7 34                 a0 = u32 [a5 + 0x34]
 18967: 7c 58 09                 a1 = u8 [s0 + 0x9]
 18970: 84 79 04                 a2 = a0 & 0x4
 18973: 52 09 45                 jump @1011 if a2 != 0
      :                          @1006
 18976: 51 08 32                 jump @1009 if a1 == 0
      :                          @1007
 18979: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18982: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18985: 82 83 18                 t1 = u64 [a1 + 0x18]
 18988: 33 08 40 10 01           a1 = 0x11040
 18993: 33 09 02                 a2 = 0x2
 18996: 64 a6                    s1 = a3
 18998: 7b 1b 10                 u64 [sp + 0x10] = a4
 19001: 7b 1c 08                 u64 [sp + 0x8] = a5
 19004: b4 30 02 d0 01           ra = 464, jump [t1]
      :                          @1008 [@dyn 232]
 19009: 82 1c 08                 a5 = u64 [sp + 0x8]
 19012: 82 1b 10                 a4 = u64 [sp + 0x10]
 19015: 64 6a                    a3 = s1
 19017: 33 08 01                 a1 = 0x1
 19020: 33 06 01                 s1 = 0x1
 19023: 52 07 a7                 jump @1004 if a0 != 0
      :                          @1009
 19026: 64 b7                    a0 = a4
 19028: 64 c8                    a1 = a5
 19030: b4 a0 02 d2 01           ra = 466, jump [a3]
      :                          @1010 [@dyn 233]
 19035: 33 08 01                 a1 = 0x1
 19038: 64 76                    s1 = a0
 19040: 28 96                    jump @1004
      :                          @1011
 19042: 52 08 37                 jump @1015 if a1 != 0
      :                          @1012
 19045: 82 c8 28                 a1 = u64 [a5 + 0x28]
 19048: 82 c7 20                 a0 = u64 [a5 + 0x20]
 19051: 82 83 18                 t1 = u64 [a1 + 0x18]
 19054: 33 08 44 10 01           a1 = 0x11044
 19059: 33 09 01                 a2 = 0x1
 19062: 33 06 01                 s1 = 0x1
 19065: 7b 1a                    u64 [sp] = a3
 19067: 7b 1b 10                 u64 [sp + 0x10] = a4
 19070: 7b 1c 08                 u64 [sp + 0x8] = a5
 19073: b4 30 02 d4 01           ra = 468, jump [t1]
      :                          @1013 [@dyn 234]
 19078: 82 1c 08                 a5 = u64 [sp + 0x8]
 19081: 82 1b 10                 a4 = u64 [sp + 0x10]
 19084: 82 1a                    a3 = u64 [sp]
 19086: 33 08 01                 a1 = 0x1
 19089: 52 07 65 ff              jump @1004 if a0 != 0
      :                          @1014
 19093: 81 c7 34                 a0 = i32 [a5 + 0x34]
 19096: 01                       fallthrough
      :                          @1015
 19097: 33 06 01                 s1 = 0x1
 19100: 78 16 37                 u8 [sp + 0x37] = s1
 19103: 82 c8 20                 a1 = u64 [a5 + 0x20]
 19106: 82 c9 28                 a2 = u64 [a5 + 0x28]
 19109: 7b 18 18                 u64 [sp + 0x18] = a1
 19112: 7b 19 20                 u64 [sp + 0x20] = a2
 19115: 95 18 37                 a1 = sp + 0x37
 19118: 7b 18 28                 u64 [sp + 0x28] = a1
 19121: 81 c8 30                 a1 = i32 [a5 + 0x30]
 19124: 7c c9 38                 a2 = u8 [a5 + 0x38]
 19127: 82 c3                    t1 = u64 [a5]
 19129: 82 c4 08                 t2 = u64 [a5 + 0x8]
 19132: 82 c0 10                 ra = u64 [a5 + 0x10]
 19135: 82 c2 18                 t0 = u64 [a5 + 0x18]
 19138: 7a 17 6c                 u32 [sp + 0x6c] = a0
 19141: 7a 18 68                 u32 [sp + 0x68] = a1
 19144: 78 19 70                 u8 [sp + 0x70] = a2
 19147: 7b 13 38                 u64 [sp + 0x38] = t1
 19150: 7b 14 40                 u64 [sp + 0x40] = t2
 19153: 7b 10 48                 u64 [sp + 0x48] = ra
 19156: 7b 12 50                 u64 [sp + 0x50] = t0
 19159: 95 17 18                 a0 = sp + 0x18
 19162: 7b 17 58                 u64 [sp + 0x58] = a0
 19165: 33 07 f8 0f 01           a0 = 0x10ff8
 19170: 7b 17 60                 u64 [sp + 0x60] = a0
 19173: 95 18 38                 a1 = sp + 0x38
 19176: 64 b7                    a0 = a4
 19178: b4 a0 02 d6 01           ra = 470, jump [a3]
      :                          @1016 [@dyn 235]
 19183: 52 07 21                 jump @1019 if a0 != 0
      :                          @1017
 19186: 82 18 60                 a1 = u64 [sp + 0x60]
 19189: 82 17 58                 a0 = u64 [sp + 0x58]
 19192: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19195: 33 08 42 10 01           a1 = 0x11042
 19200: 33 09 02                 a2 = 0x2
 19203: b4 a0 02 d8 01           ra = 472, jump [a3]
      :                          @1018 [@dyn 236]
 19208: 64 76                    s1 = a0
 19210: 33 08 01                 a1 = 0x1
 19213: 28 e9 fe                 jump @1004
      :                          @1019
 19216: 33 08 01                 a1 = 0x1
 19219: 28 e3 fe                 jump @1004
      :                          @1020
 19222: 51 08 9b 00              jump @1041 if a1 == 0
      :                          @1021
 19226: 64 79                    a2 = a0
 19228: 7c 77                    a0 = u8 [a0]
 19230: 51 07 91 00              jump @1040 if a0 == 0
      :                          @1022
 19234: 51 27 ff 00 90 00        jump @1042 if a0 == 255
      :                          @1023
 19240: 6c 7a                    a3 = sext.b a0
 19242: 57 0a 09                 jump @1025 if a3 <s 0
      :                          @1024
 19245: 33 0a                    a3 = 0
 19247: 33 08                    a1 = 0
 19249: 28 73                    jump @1039
      :                          @1025
 19251: 55 27 c0 00 0d           jump @1027 if a0 >=u 192
      :                          @1026
 19256: 33 0a 01                 a3 = 0x1
 19259: 33 0b 80                 a4 = 0xffffffffffffff80
 19262: 28 4a                    jump @1036
      :                          @1027
 19264: 55 27 e0 00 0e           jump @1029 if a0 >=u 224
      :                          @1028
 19269: 33 0a 02                 a3 = 0x2
 19272: 33 0b 40 ff              a4 = 0xffffffffffffff40
 19276: 28 3c                    jump @1036
      :                          @1029
 19278: 55 27 f0 00 0e           jump @1031 if a0 >=u 240
      :                          @1030
 19283: 33 0a 03                 a3 = 0x3
 19286: 33 0b 20 ff              a4 = 0xffffffffffffff20
 19290: 28 2e                    jump @1036
      :                          @1031
 19292: 55 27 f8 00 0e           jump @1033 if a0 >=u 248
      :                          @1032
 19297: 33 0a 04                 a3 = 0x4
 19300: 33 0b 10 ff              a4 = 0xffffffffffffff10
 19304: 28 20                    jump @1036
      :                          @1033
 19306: 55 27 fc 00 0e           jump @1035 if a0 >=u 252
      :                          @1034
 19311: 33 0a 05                 a3 = 0x5
 19314: 33 0b 08 ff              a4 = 0xffffffffffffff08
 19318: 28 12                    jump @1036
      :                          @1035
 19320: 88 7a fe 00              a3 = a0 <u 0xfe
 19324: 33 0b 04 ff              a4 = 0xffffffffffffff04
 19328: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 19332: 85 aa 07                 a3 = a3 ^ 0x7
 19335: 01                       fallthrough
      :                          @1036
 19336: ae 8a 2b                 jump @1043 if a3 >=u a1
      :                          @1037
 19339: 33 08                    a1 = 0
 19341: c8 b7 07                 a0 = a0 + a4
 19344: 64 ab                    a4 = a3
 19346: 01                       fallthrough
      :                          @1038
 19347: c8 b9 0c                 a5 = a2 + a4
 19350: 7c cc                    a5 = u8 [a5]
 19352: 97 88 08                 a1 = a1 << 0x8
 19355: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 19358: d4 c8 08                 a1 = a1 | a5
 19361: 52 0b f2                 jump @1038 if a4 != 0
      :                          @1039
 19364: 8a a9 03                 i32 a2 = a3 << 0x3
 19367: cf 97 07                 a0 = a0 << a2
 19370: c8 87 07                 a0 = a0 + a1
 19373: 32 00                    ret
      :                          @1040
 19375: 32 00                    ret
      :                          @1041
 19377: 00                       trap
      :                          @1042
 19378: 00                       trap
      :                          @1043
 19379: 00                       trap
      :                          @1044
 19380: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 19384: 7b 10 00 01              u64 [sp + 0x100] = ra
 19388: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 19392: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 19396: 7b 17                    u64 [sp] = a0
 19398: 78 18 0f                 u8 [sp + 0xf] = a1
 19401: 7b 17 10                 u64 [sp + 0x10] = a0
 19404: 95 16 0f                 s1 = sp + 0xf
 19407: 33 05 01                 s0 = 0x1
 19410: 95 17 0f                 a0 = sp + 0xf
 19413: 33 08 01                 a1 = 0x1
 19416: 95 19 10                 a2 = sp + 0x10
 19419: 33 0a 08                 a3 = 0x8
 19422: 0a 03                    ecalli 3 // 'write'
 19424: 7b 16 60                 u64 [sp + 0x60] = s1
 19427: 33 07 de 01              a0 = 0x1de
 19431: 7b 17 68                 u64 [sp + 0x68] = a0
 19434: 64 17                    a0 = sp
 19436: 7b 17 70                 u64 [sp + 0x70] = a0
 19439: 33 07 16                 a0 = 0x16
 19442: 7b 17 78                 u64 [sp + 0x78] = a0
 19445: 49 21 80 00 02           u64 [sp + 128] = 0x2
 19450: 49 21 90 00 02           u64 [sp + 144] = 0x2
 19455: 49 21 a0 00              u64 [sp + 160] = 0
 19459: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 19469: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 19473: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 19478: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 19483: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 19488: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 19492: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 19496: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 19501: 33 08 90 12 01           a1 = 0x11290
 19506: 7b 18 30                 u64 [sp + 0x30] = a1
 19509: 49 11 38 02              u64 [sp + 56] = 0x2
 19513: 95 18 80 00              a1 = sp + 0x80
 19517: 7b 18 50                 u64 [sp + 0x50] = a1
 19520: 49 11 58 02              u64 [sp + 88] = 0x2
 19524: 95 18 60                 a1 = sp + 0x60
 19527: 7b 18 40                 u64 [sp + 0x40] = a1
 19530: 49 11 48 02              u64 [sp + 72] = 0x2
 19534: 95 17 18                 a0 = sp + 0x18
 19537: 95 18 30                 a1 = sp + 0x30
 19540: 50 20 da 01 dc f1        ra = 474, jump @766
      :                          @1045 [@dyn 237]
 19546: 82 16 20                 s1 = u64 [sp + 0x20]
 19549: 82 1b 28                 a4 = u64 [sp + 0x28]
 19552: 82 15 18                 s0 = u64 [sp + 0x18]
 19555: 33 07 02                 a0 = 0x2
 19558: 33 08                    a1 = 0
 19560: 33 09                    a2 = 0
 19562: 64 6a                    a3 = s1
 19564: 33 00 dc 01              ra = 0x1dc
 19568: 0a 64                    ecalli 100 // 'log'
 19570: 01                       fallthrough
      :                          @1046 [@dyn 238]
 19571: 95 58 00 10 00 ff        a1 = s0 + 0xffffffffff001000
 19577: 33 07 01 10 00 ff        a0 = 0xffffffffff001001
 19583: ac 78 2e                 jump @1052 if a1 <u a0
      :                          @1047
 19586: 64 62                    t0 = s1
 19588: 33 07 40 00 03           a0 = 0x30040
 19593: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
 19599: 33 09 ff ef ff 00        a2 = 0xffefff
 19605: 01                       fallthrough
      :                          @1048
 19606: 82 8a                    a3 = u64 [a1]
 19608: c8 97 0b                 a4 = a0 + a2
 19611: c9 ab 0b                 a4 = a4 - a3
 19614: ab 2b 0f                 jump @1052 if a4 != t0
      :                          @1049
 19617: c9 5a 0b                 a4 = a3 - s0
 19620: 01                       fallthrough
      :                          @1050
 19621: 82 8c                    a5 = u64 [a1]
 19623: ab ac ef                 jump @1048 if a5 != a3
      :                          @1051
 19626: 7b 8b                    u64 [a1] = a4
 19628: 01                       fallthrough
      :                          @1052
 19629: 82 10 00 01              ra = u64 [sp + 0x100]
 19633: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 19637: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 19641: 95 11 08 01              sp = sp + 0x108
 19645: 32 00                    ret
      :                          @1053 [@dyn 239]
 19647: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 19650: 7b 10 28                 u64 [sp + 0x28] = ra
 19653: 7b 15 20                 u64 [sp + 0x20] = s0
 19656: 7b 16 18                 u64 [sp + 0x18] = s1
 19659: 64 86                    s1 = a1
 19661: 82 88 28                 a1 = u64 [a1 + 0x28]
 19664: 82 6a 20                 a3 = u64 [s1 + 0x20]
 19667: 82 8b 18                 a4 = u64 [a1 + 0x18]
 19670: 64 75                    s0 = a0
 19672: 33 08 f0 0f 01           a1 = 0x10ff0
 19677: 33 09 01                 a2 = 0x1
 19680: 64 a7                    a0 = a3
 19682: b4 b0 02 e0 01           ra = 480, jump [a4]
      :                          @1054 [@dyn 240]
 19687: 7b 16                    u64 [sp] = s1
 19689: 78 17 08                 u8 [sp + 0x8] = a0
 19692: 46 11 09                 u8 [sp + 9] = 0
 19695: 7b 15 10                 u64 [sp + 0x10] = s0
 19698: 33 09 e6 01              a2 = 0x1e6
 19702: 64 17                    a0 = sp
 19704: 95 18 10                 a1 = sp + 0x10
 19707: 50 20 e2 01 dc fc        ra = 482, jump @1003
      :                          @1055 [@dyn 241]
 19713: 33 07 01                 a0 = 0x1
 19716: 7c 18 08                 a1 = u8 [sp + 0x8]
 19719: 52 08 1b                 jump @1057 if a1 != 0
      :                          @1056
 19722: 82 17                    a0 = u64 [sp]
 19724: 82 78 28                 a1 = u64 [a0 + 0x28]
 19727: 82 77 20                 a0 = u64 [a0 + 0x20]
 19730: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19733: 33 08 45 10 01           a1 = 0x11045
 19738: 33 09 01                 a2 = 0x1
 19741: b4 a0 02 e4 01           ra = 484, jump [a3]
      :                          @1057 [@dyn 242]
 19746: 82 10 28                 ra = u64 [sp + 0x28]
 19749: 82 15 20                 s0 = u64 [sp + 0x20]
 19752: 82 16 18                 s1 = u64 [sp + 0x18]
 19755: 95 11 30                 sp = sp + 0x30
 19758: 32 00                    ret
      :                          @1058 [@dyn 243]
 19760: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 19764: 7b 10 80 00              u64 [sp + 0x80] = ra
 19768: 80 89 34                 a2 = u32 [a1 + 0x34]
 19771: 82 77                    a0 = u64 [a0]
 19773: 84 9a 10                 a3 = a2 & 0x10
 19776: 52 0a 16                 jump @1061 if a3 != 0
      :                          @1059
 19779: 84 99 20                 a2 = a2 & 0x20
 19782: 52 09 41                 jump @1064 if a2 != 0
      :                          @1060
 19785: 7c 77                    a0 = u8 [a0]
 19787: 82 10 80 00              ra = u64 [sp + 0x80]
 19791: 95 11 88 00              sp = sp + 0x88
 19795: 28 79 f4                 jump @849
      :                          @1061
 19798: 7c 77                    a0 = u8 [a0]
 19800: 33 0b 81 00              a4 = 0x81
 19804: 95 19 7f                 a2 = sp + 0x7f
 19807: 33 02 57                 t0 = 0x57
 19810: 01                       fallthrough
      :                          @1062
 19811: 64 bc                    a5 = a4
 19813: 84 7b 0f                 a4 = a0 & 0xf
 19816: 97 77 38                 a0 = a0 << 0x38
 19819: 98 77 3c                 a0 = a0 >> 0x3c
 19822: 88 b3 0a                 t1 = a4 <u 0xa
 19825: 33 0a 30                 a3 = 0x30
 19828: da 32 0a                 a3 = t0 if t1 == 0
 19831: be ba 0a                 i32 a3 = a3 + a4
 19834: 78 9a                    u8 [a2] = a3
 19836: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19839: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19842: 52 07 e1                 jump @1062 if a0 != 0
      :                          @1063
 19845: 28 31                    jump @1066
      :                          @1064
 19847: 7c 77                    a0 = u8 [a0]
 19849: 33 0b 81 00              a4 = 0x81
 19853: 95 19 7f                 a2 = sp + 0x7f
 19856: 33 02 37                 t0 = 0x37
 19859: 01                       fallthrough
      :                          @1065
 19860: 64 bc                    a5 = a4
 19862: 84 7b 0f                 a4 = a0 & 0xf
 19865: 97 77 38                 a0 = a0 << 0x38
 19868: 98 77 3c                 a0 = a0 >> 0x3c
 19871: 88 b3 0a                 t1 = a4 <u 0xa
 19874: 33 0a 30                 a3 = 0x30
 19877: da 32 0a                 a3 = t0 if t1 == 0
 19880: be ba 0a                 i32 a3 = a3 + a4
 19883: 78 9a                    u8 [a2] = a3
 19885: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19888: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19891: 52 07 e1                 jump @1065 if a0 != 0
      :                          @1066
 19894: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 19897: 56 27 80 00 28           jump @1069 if a0 >u 128
      :                          @1067
 19902: 9a bb 81 00              a4 = 0x81 - a4
 19906: 64 1a                    a3 = sp
 19908: c8 7a 0a                 a3 = a3 + a0
 19911: 33 09 02                 a2 = 0x2
 19914: 64 87                    a0 = a1
 19916: 33 08 46 10 01           a1 = 0x11046
 19921: 50 20 e8 01 23 f5        ra = 488, jump @859
      :                          @1068 [@dyn 244]
 19927: 82 10 80 00              ra = u64 [sp + 0x80]
 19931: 95 11 88 00              sp = sp + 0x88
 19935: 32 00                    ret
      :                          @1069
 19937: 00                       trap
