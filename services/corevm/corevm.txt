// RO data = 4784/4784 bytes
// RW data = 24/4176 bytes
// Stack size = 40960 bytes
// RO data = [140, 0, 0, 0, 164, 0, 0, 0, 182, 0, 0, 0, 200, 0, 0, 0, 238, 0, 0, 0, 18, 1, 0, 0, 40, 1, 0, 0, 52, 1, 0, 0, 64, 1, 0, 0, 82, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 64, 110, 61, 101, 106, 101, 99, 116, 64, 110, 61, 101, 120, 112, 117, 110, 103, 101, 32, 32, 111, 117, 116, 112, 117, 116, 61, 121, 105, 101, 108, 100, 64, 110, 61, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 32, 64, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 32, 64, 110, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 88, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 93, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 128, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 160, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 16, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 96, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 0, 0, 0, 0, 0, 0, 208, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 24, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 0, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 0, 0, 152, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 216, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 0, 40, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 57, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 105, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 216, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 235, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 246, 4, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 0, 56, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 65, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 0, 0, 0, 0, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 0, 0, 0, 0, 144, 6, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 158, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 106, 97, 109, 64, 110, 61, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 112, 114, 101, 118, 32, 108, 101, 110, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 56, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 0, 0, 0, 200, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 122, 101, 114, 111, 32, 114, 101, 115, 117, 108, 116, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 50, 8, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 0, 128, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 200, 8, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 44, 32, 103, 111, 116, 32, 160, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 0, 240, 9, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 128, 11, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 200, 11, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 16, 12, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 128, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 200, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 207, 12, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 112, 103, 114, 97, 100, 101, 32, 64, 110, 61, 0, 0, 0, 0, 0, 32, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 72, 14, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 64, 110, 61, 0, 192, 14, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 0, 0, 0, 248, 14, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 112, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 133, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 148, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 150, 1, 0, 0, 0, 0, 0, 0, 156, 1, 0, 0, 0, 0, 0, 0, 164, 1, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 198, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 200, 1, 0, 0, 0, 0, 0, 0, 206, 1, 0, 0, 0, 0, 0, 0, 210, 1, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 114, 18, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 131, 18, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5968
// Code size = 18826 bytes

      :                          @0
     0: 28 50 05 00 00           jump @90
      :                          @1
     5: 28 7e 15 00 00           jump @273
      :                          @2
    10: 28 cb 37                 jump @712
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 06 3e                 jump @859
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 46 10 01           a1 = 0x11046
   174: 50 10 04 b0 3e           ra = 4, jump @869
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   193: 7b 10 38                 u64 [sp + 0x38] = ra
   196: 7b 15 30                 u64 [sp + 0x30] = s0
   199: 7b 16 28                 u64 [sp + 0x28] = s1
   202: 7b 18 08                 u64 [sp + 0x8] = a1
   205: 82 89 28                 a2 = u64 [a1 + 0x28]
   208: 82 76                    s1 = u64 [a0]
   210: 82 75 08                 s0 = u64 [a0 + 0x8]
   213: 82 87 20                 a0 = u64 [a1 + 0x20]
   216: 82 9a 18                 a3 = u64 [a2 + 0x18]
   219: 33 08 f0 0f 01           a1 = 0x10ff0
   224: 33 09 01                 a2 = 0x1
   227: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   231: 82 18 08                 a1 = u64 [sp + 0x8]
   234: 7b 18 10                 u64 [sp + 0x10] = a1
   237: 78 17 18                 u8 [sp + 0x18] = a0
   240: 46 11 19                 u8 [sp + 25] = 0
   243: 51 05 2c                 jump @21 if s0 == 0
      :                          @17
   246: 33 07 02                 a0 = 0x2
   249: 7b 17                    u64 [sp] = a0
   251: 01                       fallthrough
      :                          @18
   252: 95 67 01                 a0 = s1 + 0x1
   255: 7b 17 08                 u64 [sp + 0x8] = a0
   258: 7b 16 20                 u64 [sp + 0x20] = s1
   261: 95 17 10                 a0 = sp + 0x10
   264: 95 18 20                 a1 = sp + 0x20
   267: 82 19                    a2 = u64 [sp]
   269: 50 10 0a 34 45           ra = 10, jump @1013
      :                          @19 [@dyn 5]
   274: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   277: 82 16 08                 s1 = u64 [sp + 0x8]
   280: 52 05 e4                 jump @18 if s0 != 0
      :                          @20
   283: 7c 17 18                 a0 = u8 [sp + 0x18]
   286: 01                       fallthrough
      :                          @21
   287: 33 08 01                 a1 = 0x1
   290: 52 07 1e                 jump @24 if a0 != 0
      :                          @22
   293: 82 17 10                 a0 = u64 [sp + 0x10]
   296: 82 78 28                 a1 = u64 [a0 + 0x28]
   299: 82 77 20                 a0 = u64 [a0 + 0x20]
   302: 82 8a 18                 a3 = u64 [a1 + 0x18]
   305: 33 08 45 10 01           a1 = 0x11045
   310: 33 09 01                 a2 = 0x1
   313: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @23 [@dyn 6]
   317: 64 78                    a1 = a0
   319: 01                       fallthrough
      :                          @24
   320: 64 87                    a0 = a1
   322: 82 10 38                 ra = u64 [sp + 0x38]
   325: 82 15 30                 s0 = u64 [sp + 0x30]
   328: 82 16 28                 s1 = u64 [sp + 0x28]
   331: 95 11 40                 sp = sp + 0x40
   334: 32 00                    ret
      :                          @25 [@dyn 7]
   336: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   340: 7b 10 80 00              u64 [sp + 0x80] = ra
   344: 80 89 34                 a2 = u32 [a1 + 0x34]
   347: 82 77                    a0 = u64 [a0]
   349: 84 9a 10                 a3 = a2 & 0x10
   352: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   355: 84 99 20                 a2 = a2 & 0x20
   358: 52 09 40                 jump @31 if a2 != 0
      :                          @27
   361: 82 77                    a0 = u64 [a0]
   363: 82 10 80 00              ra = u64 [sp + 0x80]
   367: 95 11 88 00              sp = sp + 0x88
   371: 28 c3 3c                 jump @859
      :                          @28
   374: 82 7b                    a4 = u64 [a0]
   376: 33 09 81 00              a2 = 0x81
   380: 95 17 7f                 a0 = sp + 0x7f
   383: 33 02 57                 t0 = 0x57
   386: 01                       fallthrough
      :                          @29
   387: 64 9c                    a5 = a2
   389: 98 ba 04                 a3 = a4 >> 0x4
   392: 84 bb 0f                 a4 = a4 & 0xf
   395: 88 b3 0a                 t1 = a4 <u 0xa
   398: 33 09 30                 a2 = 0x30
   401: da 32 09                 a2 = t0 if t1 == 0
   404: be b9 09                 i32 a2 = a2 + a4
   407: 78 79                    u8 [a0] = a2
   409: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   412: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   415: 64 ab                    a4 = a3
   417: 52 0a e2                 jump @29 if a3 != 0
      :                          @30
   420: 28 30                    jump @33
      :                          @31
   422: 82 7b                    a4 = u64 [a0]
   424: 33 09 81 00              a2 = 0x81
   428: 95 17 7f                 a0 = sp + 0x7f
   431: 33 02 37                 t0 = 0x37
   434: 01                       fallthrough
      :                          @32
   435: 64 9c                    a5 = a2
   437: 98 ba 04                 a3 = a4 >> 0x4
   440: 84 bb 0f                 a4 = a4 & 0xf
   443: 88 b3 0a                 t1 = a4 <u 0xa
   446: 33 09 30                 a2 = 0x30
   449: da 32 09                 a2 = t0 if t1 == 0
   452: be b9 09                 i32 a2 = a2 + a4
   455: 78 79                    u8 [a0] = a2
   457: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   460: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   463: 64 ab                    a4 = a3
   465: 52 0a e2                 jump @32 if a3 != 0
      :                          @33
   468: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   471: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   476: 9a 9b 81 00              a4 = 0x81 - a2
   480: 64 1a                    a3 = sp
   482: c8 7a 0a                 a3 = a3 + a0
   485: 33 09 02                 a2 = 0x2
   488: 64 87                    a0 = a1
   490: 33 08 46 10 01           a1 = 0x11046
   495: 50 10 10 6f 3d           ra = 16, jump @869
      :                          @35 [@dyn 8]
   500: 82 10 80 00              ra = u64 [sp + 0x80]
   504: 95 11 88 00              sp = sp + 0x88
   508: 32 00                    ret
      :                          @36
   510: 00                       trap
      :                          @37 [@dyn 9]
   511: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   515: 7b 10 80 00              u64 [sp + 0x80] = ra
   519: 80 89 34                 a2 = u32 [a1 + 0x34]
   522: 84 9a 10                 a3 = a2 & 0x10
   525: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   528: 84 99 20                 a2 = a2 & 0x20
   531: 52 09 41                 jump @43 if a2 != 0
      :                          @39
   534: 7c 77                    a0 = u8 [a0]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 28 16 3c                 jump @859
      :                          @40
   547: 7c 77                    a0 = u8 [a0]
   549: 33 0b 81 00              a4 = 0x81
   553: 95 19 7f                 a2 = sp + 0x7f
   556: 33 02 57                 t0 = 0x57
   559: 01                       fallthrough
      :                          @41
   560: 64 bc                    a5 = a4
   562: 84 7b 0f                 a4 = a0 & 0xf
   565: 97 77 38                 a0 = a0 << 0x38
   568: 98 77 3c                 a0 = a0 >> 0x3c
   571: 88 b3 0a                 t1 = a4 <u 0xa
   574: 33 0a 30                 a3 = 0x30
   577: da 32 0a                 a3 = t0 if t1 == 0
   580: be ba 0a                 i32 a3 = a3 + a4
   583: 78 9a                    u8 [a2] = a3
   585: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   588: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   591: 52 07 e1                 jump @41 if a0 != 0
      :                          @42
   594: 28 31                    jump @45
      :                          @43
   596: 7c 77                    a0 = u8 [a0]
   598: 33 0b 81 00              a4 = 0x81
   602: 95 19 7f                 a2 = sp + 0x7f
   605: 33 02 37                 t0 = 0x37
   608: 01                       fallthrough
      :                          @44
   609: 64 bc                    a5 = a4
   611: 84 7b 0f                 a4 = a0 & 0xf
   614: 97 77 38                 a0 = a0 << 0x38
   617: 98 77 3c                 a0 = a0 >> 0x3c
   620: 88 b3 0a                 t1 = a4 <u 0xa
   623: 33 0a 30                 a3 = 0x30
   626: da 32 0a                 a3 = t0 if t1 == 0
   629: be ba 0a                 i32 a3 = a3 + a4
   632: 78 9a                    u8 [a2] = a3
   634: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   637: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   640: 52 07 e1                 jump @44 if a0 != 0
      :                          @45
   643: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   646: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   651: 9a bb 81 00              a4 = 0x81 - a4
   655: 64 1a                    a3 = sp
   657: c8 7a 0a                 a3 = a3 + a0
   660: 33 09 02                 a2 = 0x2
   663: 64 87                    a0 = a1
   665: 33 08 46 10 01           a1 = 0x11046
   670: 50 10 14 c0 3c           ra = 20, jump @869
      :                          @47 [@dyn 10]
   675: 82 10 80 00              ra = u64 [sp + 0x80]
   679: 95 11 88 00              sp = sp + 0x88
   683: 32 00                    ret
      :                          @48
   685: 00                       trap
      :                          @49 [@dyn 11]
   686: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   690: 7b 10 80 00              u64 [sp + 0x80] = ra
   694: 80 89 34                 a2 = u32 [a1 + 0x34]
   697: 84 9a 10                 a3 = a2 & 0x10
   700: 52 0a 16                 jump @52 if a3 != 0
      :                          @50
   703: 84 99 20                 a2 = a2 & 0x20
   706: 52 09 40                 jump @55 if a2 != 0
      :                          @51
   709: 80 77                    a0 = u32 [a0]
   711: 82 10 80 00              ra = u64 [sp + 0x80]
   715: 95 11 88 00              sp = sp + 0x88
   719: 28 67 3b                 jump @859
      :                          @52
   722: 81 7b                    a4 = i32 [a0]
   724: 33 09 81 00              a2 = 0x81
   728: 95 17 7f                 a0 = sp + 0x7f
   731: 33 02 57                 t0 = 0x57
   734: 01                       fallthrough
      :                          @53
   735: 64 9c                    a5 = a2
   737: 8b ba 04                 i32 a3 = a4 >> 0x4
   740: 84 bb 0f                 a4 = a4 & 0xf
   743: 88 b3 0a                 t1 = a4 <u 0xa
   746: 33 09 30                 a2 = 0x30
   749: da 32 09                 a2 = t0 if t1 == 0
   752: be b9 09                 i32 a2 = a2 + a4
   755: 78 79                    u8 [a0] = a2
   757: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   760: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   763: 64 ab                    a4 = a3
   765: 52 0a e2                 jump @53 if a3 != 0
      :                          @54
   768: 28 30                    jump @57
      :                          @55
   770: 81 7b                    a4 = i32 [a0]
   772: 33 09 81 00              a2 = 0x81
   776: 95 17 7f                 a0 = sp + 0x7f
   779: 33 02 37                 t0 = 0x37
   782: 01                       fallthrough
      :                          @56
   783: 64 9c                    a5 = a2
   785: 8b ba 04                 i32 a3 = a4 >> 0x4
   788: 84 bb 0f                 a4 = a4 & 0xf
   791: 88 b3 0a                 t1 = a4 <u 0xa
   794: 33 09 30                 a2 = 0x30
   797: da 32 09                 a2 = t0 if t1 == 0
   800: be b9 09                 i32 a2 = a2 + a4
   803: 78 79                    u8 [a0] = a2
   805: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   808: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   811: 64 ab                    a4 = a3
   813: 52 0a e2                 jump @56 if a3 != 0
      :                          @57
   816: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   819: 56 27 80 00 27           jump @60 if a0 >u 128
      :                          @58
   824: 9a 9b 81 00              a4 = 0x81 - a2
   828: 64 1a                    a3 = sp
   830: c8 7a 0a                 a3 = a3 + a0
   833: 33 09 02                 a2 = 0x2
   836: 64 87                    a0 = a1
   838: 33 08 46 10 01           a1 = 0x11046
   843: 50 10 18 13 3c           ra = 24, jump @869
      :                          @59 [@dyn 12]
   848: 82 10 80 00              ra = u64 [sp + 0x80]
   852: 95 11 88 00              sp = sp + 0x88
   856: 32 00                    ret
      :                          @60
   858: 00                       trap
      :                          @61 [@dyn 13]
   859: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   863: 7b 10 80 00              u64 [sp + 0x80] = ra
   867: 80 89 34                 a2 = u32 [a1 + 0x34]
   870: 84 9a 10                 a3 = a2 & 0x10
   873: 52 0a 16                 jump @64 if a3 != 0
      :                          @62
   876: 84 99 20                 a2 = a2 & 0x20
   879: 52 09 40                 jump @67 if a2 != 0
      :                          @63
   882: 82 77                    a0 = u64 [a0]
   884: 82 10 80 00              ra = u64 [sp + 0x80]
   888: 95 11 88 00              sp = sp + 0x88
   892: 28 ba 3a                 jump @859
      :                          @64
   895: 82 7b                    a4 = u64 [a0]
   897: 33 09 81 00              a2 = 0x81
   901: 95 17 7f                 a0 = sp + 0x7f
   904: 33 02 57                 t0 = 0x57
   907: 01                       fallthrough
      :                          @65
   908: 64 9c                    a5 = a2
   910: 98 ba 04                 a3 = a4 >> 0x4
   913: 84 bb 0f                 a4 = a4 & 0xf
   916: 88 b3 0a                 t1 = a4 <u 0xa
   919: 33 09 30                 a2 = 0x30
   922: da 32 09                 a2 = t0 if t1 == 0
   925: be b9 09                 i32 a2 = a2 + a4
   928: 78 79                    u8 [a0] = a2
   930: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   933: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   936: 64 ab                    a4 = a3
   938: 52 0a e2                 jump @65 if a3 != 0
      :                          @66
   941: 28 30                    jump @69
      :                          @67
   943: 82 7b                    a4 = u64 [a0]
   945: 33 09 81 00              a2 = 0x81
   949: 95 17 7f                 a0 = sp + 0x7f
   952: 33 02 37                 t0 = 0x37
   955: 01                       fallthrough
      :                          @68
   956: 64 9c                    a5 = a2
   958: 98 ba 04                 a3 = a4 >> 0x4
   961: 84 bb 0f                 a4 = a4 & 0xf
   964: 88 b3 0a                 t1 = a4 <u 0xa
   967: 33 09 30                 a2 = 0x30
   970: da 32 09                 a2 = t0 if t1 == 0
   973: be b9 09                 i32 a2 = a2 + a4
   976: 78 79                    u8 [a0] = a2
   978: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   981: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   984: 64 ab                    a4 = a3
   986: 52 0a e2                 jump @68 if a3 != 0
      :                          @69
   989: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   992: 56 27 80 00 27           jump @72 if a0 >u 128
      :                          @70
   997: 9a 9b 81 00              a4 = 0x81 - a2
  1001: 64 1a                    a3 = sp
  1003: c8 7a 0a                 a3 = a3 + a0
  1006: 33 09 02                 a2 = 0x2
  1009: 64 87                    a0 = a1
  1011: 33 08 46 10 01           a1 = 0x11046
  1016: 50 10 1c 66 3b           ra = 28, jump @869
      :                          @71 [@dyn 14]
  1021: 82 10 80 00              ra = u64 [sp + 0x80]
  1025: 95 11 88 00              sp = sp + 0x88
  1029: 32 00                    ret
      :                          @72
  1031: 00                       trap
      :                          @73 [@dyn 15]
  1032: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1035: 7b 10 28                 u64 [sp + 0x28] = ra
  1038: 7b 15 20                 u64 [sp + 0x20] = s0
  1041: 7b 16 18                 u64 [sp + 0x18] = s1
  1044: 64 85                    s0 = a1
  1046: 82 88 28                 a1 = u64 [a1 + 0x28]
  1049: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1052: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1055: 64 76                    s1 = a0
  1057: 33 08 f0 0f 01           a1 = 0x10ff0
  1062: 33 09 01                 a2 = 0x1
  1065: 64 a7                    a0 = a3
  1067: b4 b0 01 20              ra = 32, jump [a4]
      :                          @74 [@dyn 16]
  1071: 7b 15                    u64 [sp] = s0
  1073: 78 17 08                 u8 [sp + 0x8] = a0
  1076: 46 11 09                 u8 [sp + 9] = 0
  1079: 7b 16 10                 u64 [sp + 0x10] = s1
  1082: 33 05 0e                 s0 = 0xe
  1085: 64 17                    a0 = sp
  1087: 95 18 10                 a1 = sp + 0x10
  1090: 33 09 0e                 a2 = 0xe
  1093: 50 10 22 fc 41           ra = 34, jump @1013
      :                          @75 [@dyn 17]
  1098: 95 67 08                 a0 = s1 + 0x8
  1101: 7b 17 10                 u64 [sp + 0x10] = a0
  1104: 64 17                    a0 = sp
  1106: 95 18 10                 a1 = sp + 0x10
  1109: 64 59                    a2 = s0
  1111: 50 10 24 ea 41           ra = 36, jump @1013
      :                          @76 [@dyn 18]
  1116: 95 67 10                 a0 = s1 + 0x10
  1119: 7b 17 10                 u64 [sp + 0x10] = a0
  1122: 64 17                    a0 = sp
  1124: 95 18 10                 a1 = sp + 0x10
  1127: 64 59                    a2 = s0
  1129: 50 10 26 d8 41           ra = 38, jump @1013
      :                          @77 [@dyn 19]
  1134: 95 67 18                 a0 = s1 + 0x18
  1137: 7b 17 10                 u64 [sp + 0x10] = a0
  1140: 64 17                    a0 = sp
  1142: 95 18 10                 a1 = sp + 0x10
  1145: 64 59                    a2 = s0
  1147: 50 10 28 c6 41           ra = 40, jump @1013
      :                          @78 [@dyn 20]
  1152: 95 67 20                 a0 = s1 + 0x20
  1155: 7b 17 10                 u64 [sp + 0x10] = a0
  1158: 64 17                    a0 = sp
  1160: 95 18 10                 a1 = sp + 0x10
  1163: 64 59                    a2 = s0
  1165: 50 10 2a b4 41           ra = 42, jump @1013
      :                          @79 [@dyn 21]
  1170: 95 67 28                 a0 = s1 + 0x28
  1173: 7b 17 10                 u64 [sp + 0x10] = a0
  1176: 64 17                    a0 = sp
  1178: 95 18 10                 a1 = sp + 0x10
  1181: 64 59                    a2 = s0
  1183: 50 10 2c a2 41           ra = 44, jump @1013
      :                          @80 [@dyn 22]
  1188: 95 67 30                 a0 = s1 + 0x30
  1191: 7b 17 10                 u64 [sp + 0x10] = a0
  1194: 64 17                    a0 = sp
  1196: 95 18 10                 a1 = sp + 0x10
  1199: 64 59                    a2 = s0
  1201: 50 10 2e 90 41           ra = 46, jump @1013
      :                          @81 [@dyn 23]
  1206: 95 67 38                 a0 = s1 + 0x38
  1209: 7b 17 10                 u64 [sp + 0x10] = a0
  1212: 64 17                    a0 = sp
  1214: 95 18 10                 a1 = sp + 0x10
  1217: 64 59                    a2 = s0
  1219: 50 10 30 7e 41           ra = 48, jump @1013
      :                          @82 [@dyn 24]
  1224: 95 67 40                 a0 = s1 + 0x40
  1227: 7b 17 10                 u64 [sp + 0x10] = a0
  1230: 64 17                    a0 = sp
  1232: 95 18 10                 a1 = sp + 0x10
  1235: 64 59                    a2 = s0
  1237: 50 10 32 6c 41           ra = 50, jump @1013
      :                          @83 [@dyn 25]
  1242: 95 67 48                 a0 = s1 + 0x48
  1245: 7b 17 10                 u64 [sp + 0x10] = a0
  1248: 64 17                    a0 = sp
  1250: 95 18 10                 a1 = sp + 0x10
  1253: 64 59                    a2 = s0
  1255: 50 10 34 5a 41           ra = 52, jump @1013
      :                          @84 [@dyn 26]
  1260: 95 67 50                 a0 = s1 + 0x50
  1263: 7b 17 10                 u64 [sp + 0x10] = a0
  1266: 64 17                    a0 = sp
  1268: 95 18 10                 a1 = sp + 0x10
  1271: 64 59                    a2 = s0
  1273: 50 10 36 48 41           ra = 54, jump @1013
      :                          @85 [@dyn 27]
  1278: 95 67 58                 a0 = s1 + 0x58
  1281: 7b 17 10                 u64 [sp + 0x10] = a0
  1284: 64 17                    a0 = sp
  1286: 95 18 10                 a1 = sp + 0x10
  1289: 64 59                    a2 = s0
  1291: 50 10 38 36 41           ra = 56, jump @1013
      :                          @86 [@dyn 28]
  1296: 95 67 60                 a0 = s1 + 0x60
  1299: 7b 17 10                 u64 [sp + 0x10] = a0
  1302: 64 17                    a0 = sp
  1304: 95 18 10                 a1 = sp + 0x10
  1307: 64 59                    a2 = s0
  1309: 50 10 3a 24 41           ra = 58, jump @1013
      :                          @87 [@dyn 29]
  1314: 33 07 01                 a0 = 0x1
  1317: 7c 18 08                 a1 = u8 [sp + 0x8]
  1320: 52 08 1a                 jump @89 if a1 != 0
      :                          @88
  1323: 82 17                    a0 = u64 [sp]
  1325: 82 78 28                 a1 = u64 [a0 + 0x28]
  1328: 82 77 20                 a0 = u64 [a0 + 0x20]
  1331: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1334: 33 08 45 10 01           a1 = 0x11045
  1339: 33 09 01                 a2 = 0x1
  1342: b4 a0 01 3c              ra = 60, jump [a3]
      :                          @89 [@dyn 30]
  1346: 82 10 28                 ra = u64 [sp + 0x28]
  1349: 82 15 20                 s0 = u64 [sp + 0x20]
  1352: 82 16 18                 s1 = u64 [sp + 0x18]
  1355: 95 11 30                 sp = sp + 0x30
  1358: 32 00                    ret
      :                          @90 [export #0: 'refine']
  1360: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1364: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1368: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1372: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1376: 95 11 40 d4              sp = sp + 0xffffffffffffd440
  1380: 33 0a 00 00 01           a3 = 0x10000
  1385: 53 18 04 e3 00           jump @109 if a1 <u 4
      :                          @91
  1390: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1393: 51 0b db 00              jump @109 if a4 == 0
      :                          @92
  1397: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1400: 80 7a                    a3 = u32 [a0]
  1402: 33 06 01                 s1 = 0x1
  1405: 59 08 3d                 jump @101 if a1 >=s 0
      :                          @93
  1408: 84 88 ff 00              a1 = a1 & 0xff
  1412: 33 06 02                 s1 = 0x2
  1415: 53 28 c0 00 2d           jump @99 if a1 <u 192
      :                          @94
  1420: 33 06 03                 s1 = 0x3
  1423: 53 28 e0 00 25           jump @99 if a1 <u 224
      :                          @95
  1428: 33 06 04                 s1 = 0x4
  1431: 53 28 f0 00 1d           jump @99 if a1 <u 240
      :                          @96
  1436: 33 06 05                 s1 = 0x5
  1439: 53 28 f8 00 15           jump @99 if a1 <u 248
      :                          @97
  1444: 33 06 06                 s1 = 0x6
  1447: 53 28 fc 00 0d           jump @99 if a1 <u 252
      :                          @98
  1452: 88 88 fe 00              a1 = a1 <u 0xfe
  1456: 9a 86 08                 s1 = 0x8 - a1
  1459: 01                       fallthrough
      :                          @99
  1460: ae 6b 06                 jump @101 if a4 >=u s1
      :                          @100
  1463: 28 cb 0f                 jump @272
      :                          @101
  1466: 7b 1a 70                 u64 [sp + 0x70] = a3
  1469: 95 77 04                 a0 = a0 + 0x4
  1472: 64 68                    a1 = s1
  1474: 7b 1b 78                 u64 [sp + 0x78] = a4
  1477: 50 10 3e bb 41           ra = 62, jump @1030
      :                          @102 [@dyn 31]
  1482: 64 75                    s0 = a0
  1484: 82 17 78                 a0 = u64 [sp + 0x78]
  1487: e4 67 07                 a0 = maxu(a0, s1)
  1490: c9 67 07                 a0 = a0 - s1
  1493: d8 57 08                 a1 = a0 <u s0
  1496: e4 57 07                 a0 = maxu(a0, s0)
  1499: c9 57 07                 a0 = a0 - s0
  1502: 88 77 20                 a0 = a0 <u 0x20
  1505: d4 87 07                 a0 = a0 | a1
  1508: 52 07 5f                 jump @108 if a0 != 0
      :                          @103
  1511: 48 21 a0 00              u32 [sp + 160] = 0
  1515: 49 21 98 00              u64 [sp + 152] = 0
  1519: 49 21 90 00              u64 [sp + 144] = 0
  1523: 49 21 88 00              u64 [sp + 136] = 0
  1527: 49 21 80 00              u64 [sp + 128] = 0
  1531: 95 17 80 00              a0 = sp + 0x80
  1535: 33 09 24                 a2 = 0x24
  1538: 33 0a 03                 a3 = 0x3
  1541: 33 08                    a1 = 0
  1543: 33 0b                    a4 = 0
  1545: 33 0c                    a5 = 0
  1547: 0a 12                    ecalli 18 // 'fetch'
  1549: 01                       fallthrough
      :                          @104
  1550: 95 1a 80 00              a3 = sp + 0x80
  1554: 33 08 24                 a1 = 0x24
  1557: 53 15 08 3a              jump @110 if s0 <u 8
      :                          @105
  1561: 95 17 a8 00              a0 = sp + 0xa8
  1565: 33 09 00 20              a2 = 0x2000
  1569: 33 08                    a1 = 0
  1571: 50 10 40 b4 37           ra = 64, jump @844
      :                          @106 [@dyn 32]
  1576: 95 18 80 00              a1 = sp + 0x80
  1580: 95 19 a8 00              a2 = sp + 0xa8
  1584: 33 0b 00 20              a4 = 0x2000
  1588: 82 17 70                 a0 = u64 [sp + 0x70]
  1591: 33 0a                    a3 = 0
  1593: 0a 11                    ecalli 17 // 'historical_lookup'
  1595: 01                       fallthrough
      :                          @107
  1596: 95 78 01                 a1 = a0 + 0x1
  1599: 55 18 04 2b              jump @111 if a1 >=u 4
      :                          @108
  1603: 33 08                    a1 = 0
  1605: 33 0a 00 00 01           a3 = 0x10000
  1610: 28 05                    jump @110
      :                          @109
  1612: 33 08                    a1 = 0
  1614: 01                       fallthrough
      :                          @110
  1615: 64 a7                    a0 = a3
  1617: 33 09 c0 2b              a2 = 0x2bc0
  1621: c8 91 01                 sp = sp + a2
  1624: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1628: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1632: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1636: 95 11 f8 07              sp = sp + 0x7f8
  1640: 32 00                    ret
      :                          @111
  1642: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1645: 53 18 03 d6              jump @108 if a1 <u 3
      :                          @112
  1649: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1652: 51 18 06 cf              jump @108 if a1 == 6
      :                          @113
  1656: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1659: 53 18 03 c8              jump @108 if a1 <u 3
      :                          @114
  1663: 7c 18 aa 00              a1 = u8 [sp + 0xaa]
  1667: 7c 19 a9 00              a2 = u8 [sp + 0xa9]
  1671: 7c 1a a8 00              a3 = u8 [sp + 0xa8]
  1675: 97 88 10                 a1 = a1 << 0x10
  1678: 97 99 08                 a2 = a2 << 0x8
  1681: d4 98 08                 a1 = a1 | a2
  1684: d4 a8 08                 a1 = a1 | a3
  1687: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1690: ac 89 a9                 jump @108 if a2 <u a1
      :                          @115
  1693: 7c 17 ad 00              a0 = u8 [sp + 0xad]
  1697: 7c 1a ac 00              a3 = u8 [sp + 0xac]
  1701: 7c 1b ab 00              a4 = u8 [sp + 0xab]
  1705: 97 77 10                 a0 = a0 << 0x10
  1708: 97 aa 08                 a3 = a3 << 0x8
  1711: d4 a7 07                 a0 = a0 | a3
  1714: d4 b7 07                 a0 = a0 | a4
  1717: c9 89 09                 a2 = a2 - a1
  1720: ac 79 8b                 jump @108 if a2 <u a0
      :                          @116
  1723: c9 79 06                 s1 = a2 - a0
  1726: 53 16 04 85              jump @108 if s1 <u 4
      :                          @117
  1730: 95 12 b3 00              t0 = sp + 0xb3
  1734: c8 28 03                 t1 = a1 + t0
  1737: c8 37 0b                 a4 = a0 + t1
  1740: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1743: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1746: 7c ba                    a3 = u8 [a4]
  1748: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1751: 97 cc 10                 a5 = a5 << 0x10
  1754: 97 55 08                 s0 = s0 << 0x8
  1757: d4 5c 0c                 a5 = a5 | s0
  1760: d4 c9 09                 a2 = a2 | a5
  1763: 97 99 08                 a2 = a2 << 0x8
  1766: d4 a9 0c                 a5 = a2 | a3
  1769: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1772: ac c6 57 ff              jump @108 if s1 <u a5
      :                          @118
  1776: 7c 19 af 00              a2 = u8 [sp + 0xaf]
  1780: 95 1a a8 20              a3 = sp + 0x20a8
  1784: 7c 14 ae 00              t2 = u8 [sp + 0xae]
  1788: 97 99 08                 a2 = a2 << 0x8
  1791: 7c 16 b2 00              s1 = u8 [sp + 0xb2]
  1795: 7c 15 b1 00              s0 = u8 [sp + 0xb1]
  1799: d4 49 04                 t2 = a2 | t2
  1802: 7c 19 b0 00              a2 = u8 [sp + 0xb0]
  1806: 97 66 10                 s1 = s1 << 0x10
  1809: 97 55 08                 s0 = s0 << 0x8
  1812: d4 65 05                 s0 = s0 | s1
  1815: d4 59 09                 a2 = a2 | s0
  1818: 33 05 ff ef              s0 = 0xffffffffffffefff
  1822: 7b 15 78                 u64 [sp + 0x78] = s0
  1825: 95 bb 04                 a4 = a4 + 0x4
  1828: 7b a4                    u64 [a3] = t2
  1830: 7b a9 08                 u64 [a3 + 0x8] = a2
  1833: 7b a2 10                 u64 [a3 + 0x10] = t0
  1836: 7b a8 18                 u64 [a3 + 0x18] = a1
  1839: 7b a3 20                 u64 [a3 + 0x20] = t1
  1842: 7b a7 28                 u64 [a3 + 0x28] = a0
  1845: 7b ab 30                 u64 [a3 + 0x30] = a4
  1848: 7b ac 38                 u64 [a3 + 0x38] = a5
  1851: 7b aa 50                 u64 [a3 + 0x50] = a3
  1854: 33 08 1a                 a1 = 0x1a
  1857: 7b a8 58                 u64 [a3 + 0x58] = a1
  1860: 95 17 b0 20              a0 = sp + 0x20b0
  1864: 7b a7 60                 u64 [a3 + 0x60] = a0
  1867: 7b a8 68                 u64 [a3 + 0x68] = a1
  1870: 95 17 b8 20              a0 = sp + 0x20b8
  1874: 7b a7 70                 u64 [a3 + 0x70] = a0
  1877: 7b a8 78                 u64 [a3 + 0x78] = a1
  1880: 95 17 c0 20              a0 = sp + 0x20c0
  1884: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1888: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1892: 95 17 c8 20              a0 = sp + 0x20c8
  1896: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1900: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1904: 95 17 d0 20              a0 = sp + 0x20d0
  1908: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1912: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1916: 95 17 d8 20              a0 = sp + 0x20d8
  1920: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1924: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1928: 95 17 e0 20              a0 = sp + 0x20e0
  1932: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1936: 7b 18 70                 u64 [sp + 0x70] = a1
  1939: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1943: 33 07 00 01 01           a0 = 0x10100
  1948: 95 16 00 31              s1 = sp + 0x3100
  1952: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1956: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1961: 49 26 68 01              u64 [s1 + 360] = 0
  1965: 95 18 f8 20              a1 = sp + 0x20f8
  1969: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1973: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1978: 95 17 90 31              a0 = sp + 0x3190
  1982: 95 18 48 32              a1 = sp + 0x3248
  1986: 50 10 42 ec 32           ra = 66, jump @777
      :                          @119 [@dyn 33]
  1991: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1995: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1999: 82 66 90 00              s1 = u64 [s1 + 0x90]
  2003: 33 07 03                 a0 = 0x3
  2006: 33 08                    a1 = 0
  2008: 33 09                    a2 = 0
  2010: 64 5a                    a3 = s0
  2012: 33 00 44                 ra = 0x44
  2015: 0a 64                    ecalli 100 // 'log'
  2017: 01                       fallthrough
      :                          @120 [@dyn 34]
  2018: 82 17 78                 a0 = u64 [sp + 0x78]
  2021: c8 67 07                 a0 = a0 + s1
  2024: 53 27 00 f0 25           jump @126 if a0 <u 4294963200
      :                          @121
  2029: 33 07 40 00 03           a0 = 0x30040
  2034: 95 77 00 10              a0 = a0 + 0x1000
  2038: 01                       fallthrough
      :                          @122
  2039: 82 78                    a1 = u64 [a0]
  2041: c9 87 09                 a2 = a0 - a1
  2044: ab 59 11                 jump @126 if a2 != s0
      :                          @123
  2047: c9 68 09                 a2 = a1 - s1
  2050: 01                       fallthrough
      :                          @124
  2051: 82 7a                    a3 = u64 [a0]
  2053: ab 8a f2                 jump @122 if a3 != a1
      :                          @125
  2056: 7b 79                    u64 [a0] = a2
  2058: 0a                       ecalli 0 // 'gas'
  2059: 28 04                    jump @127
      :                          @126
  2061: 0a                       ecalli 0 // 'gas'
  2062: 01                       fallthrough
      :                          @127
  2063: 95 18 a8 20              a1 = sp + 0x20a8
  2067: 7b 87 40                 u64 [a1 + 0x40] = a0
  2070: 95 17 e8 20              a0 = sp + 0x20e8
  2074: 95 16 00 31              s1 = sp + 0x3100
  2078: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2082: 82 17 70                 a0 = u64 [sp + 0x70]
  2085: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2089: 33 07 90 01 01           a0 = 0x10190
  2094: 7b 87 50                 u64 [a1 + 0x50] = a0
  2097: 95 17 90 31              a0 = sp + 0x3190
  2101: 7b 87 60                 u64 [a1 + 0x60] = a0
  2104: 49 18 58 01              u64 [a1 + 88] = 0x1
  2108: 49 18 70                 u64 [a1 + 112] = 0
  2111: 49 18 68 01              u64 [a1 + 104] = 0x1
  2115: 95 17 48 32              a0 = sp + 0x3248
  2119: 95 18 f8 20              a1 = sp + 0x20f8
  2123: 50 10 46 63 32           ra = 70, jump @777
      :                          @128 [@dyn 35]
  2128: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2132: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2136: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2140: 33 07 04                 a0 = 0x4
  2143: 33 08                    a1 = 0
  2145: 33 09                    a2 = 0
  2147: 64 5a                    a3 = s0
  2149: 33 00 48                 ra = 0x48
  2152: 0a 64                    ecalli 100 // 'log'
  2154: 01                       fallthrough
      :                          @129 [@dyn 36]
  2155: 82 17 78                 a0 = u64 [sp + 0x78]
  2158: c8 67 07                 a0 = a0 + s1
  2161: 53 27 00 f0 23           jump @135 if a0 <u 4294963200
      :                          @130
  2166: 33 07 40 00 03           a0 = 0x30040
  2171: 95 77 00 10              a0 = a0 + 0x1000
  2175: 01                       fallthrough
      :                          @131
  2176: 82 78                    a1 = u64 [a0]
  2178: c9 87 09                 a2 = a0 - a1
  2181: ab 59 0f                 jump @135 if a2 != s0
      :                          @132
  2184: c9 68 09                 a2 = a1 - s1
  2187: 01                       fallthrough
      :                          @133
  2188: 82 7a                    a3 = u64 [a0]
  2190: ab 8a f2                 jump @131 if a3 != a1
      :                          @134
  2193: 7b 79                    u64 [a0] = a2
  2195: 01                       fallthrough
      :                          @135
  2196: 95 15 a8 20              s0 = sp + 0x20a8
  2200: 82 57 30                 a0 = u64 [s0 + 0x30]
  2203: 82 58 38                 a1 = u64 [s0 + 0x38]
  2206: 33 09                    a2 = 0
  2208: 0a 14                    ecalli 20 // 'machine'
  2210: 7b 57 48                 u64 [s0 + 0x48] = a0
  2213: 95 17 f0 20              a0 = sp + 0x20f0
  2217: 95 16 00 31              s1 = sp + 0x3100
  2221: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2225: 33 07 1a                 a0 = 0x1a
  2228: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2232: 33 07 b8 01 01           a0 = 0x101b8
  2237: 7b 57 50                 u64 [s0 + 0x50] = a0
  2240: 95 17 90 31              a0 = sp + 0x3190
  2244: 7b 57 60                 u64 [s0 + 0x60] = a0
  2247: 49 15 58 01              u64 [s0 + 88] = 0x1
  2251: 49 15 68 01              u64 [s0 + 104] = 0x1
  2255: 49 15 70                 u64 [s0 + 112] = 0
  2258: 95 17 48 32              a0 = sp + 0x3248
  2262: 95 18 f8 20              a1 = sp + 0x20f8
  2266: 50 10 4a d4 31           ra = 74, jump @777
      :                          @136 [@dyn 37]
  2271: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2275: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2279: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2283: 33 07 03                 a0 = 0x3
  2286: 33 08                    a1 = 0
  2288: 33 09                    a2 = 0
  2290: 64 5a                    a3 = s0
  2292: 33 00 4c                 ra = 0x4c
  2295: 0a 64                    ecalli 100 // 'log'
  2297: 01                       fallthrough
      :                          @137 [@dyn 38]
  2298: 82 17 78                 a0 = u64 [sp + 0x78]
  2301: c8 67 07                 a0 = a0 + s1
  2304: 53 27 00 f0 23           jump @143 if a0 <u 4294963200
      :                          @138
  2309: 33 07 40 00 03           a0 = 0x30040
  2314: 95 77 00 10              a0 = a0 + 0x1000
  2318: 01                       fallthrough
      :                          @139
  2319: 82 78                    a1 = u64 [a0]
  2321: c9 87 09                 a2 = a0 - a1
  2324: ab 59 0f                 jump @143 if a2 != s0
      :                          @140
  2327: c9 68 09                 a2 = a1 - s1
  2330: 01                       fallthrough
      :                          @141
  2331: 82 7a                    a3 = u64 [a0]
  2333: ab 8a f2                 jump @139 if a3 != a1
      :                          @142
  2336: 7b 79                    u64 [a0] = a2
  2338: 01                       fallthrough
      :                          @143
  2339: 95 19 a8 20              a2 = sp + 0x20a8
  2343: 82 97                    a0 = u64 [a2]
  2345: 7b 17 60                 u64 [sp + 0x60] = a0
  2348: 82 97 08                 a0 = u64 [a2 + 0x8]
  2351: 7b 17 58                 u64 [sp + 0x58] = a0
  2354: 82 97 10                 a0 = u64 [a2 + 0x10]
  2357: 7b 17 50                 u64 [sp + 0x50] = a0
  2360: 82 95 18                 s0 = u64 [a2 + 0x18]
  2363: 82 98 20                 a1 = u64 [a2 + 0x20]
  2366: 7b 18 48                 u64 [sp + 0x48] = a1
  2369: 80 97 48                 a0 = u32 [a2 + 0x48]
  2372: 82 96 28                 s1 = u64 [a2 + 0x28]
  2375: 49 11 68 ff 0f           u64 [sp + 104] = 0xfff
  2380: 95 59 ff 0f              a2 = s0 + 0xfff
  2384: 98 99 0c                 a2 = a2 >> 0xc
  2387: 33 08 10                 a1 = 0x10
  2390: 7b 17 70                 u64 [sp + 0x70] = a0
  2393: 0a 17                    ecalli 23 // 'zero'
  2395: 01                       fallthrough
      :                          @144
  2396: 51 07 17                 jump @146 if a0 == 0
      :                          @145
  2399: 33 0a 34 12 01           a3 = 0x11234
  2404: 33 07 02                 a0 = 0x2
  2407: 33 0b 3e                 a4 = 0x3e
  2410: 33 08                    a1 = 0
  2412: 33 09                    a2 = 0
  2414: 0a 64                    ecalli 100 // 'log'
  2416: 28 e0 00                 jump @159
      :                          @146
  2419: 7b 16 40                 u64 [sp + 0x40] = s1
  2422: 82 17 68                 a0 = u64 [sp + 0x68]
  2425: c8 67 07                 a0 = a0 + s1
  2428: 98 77 0c                 a0 = a0 >> 0xc
  2431: 82 19 60                 a2 = u64 [sp + 0x60]
  2434: c8 79 09                 a2 = a2 + a0
  2437: 7b 15 60                 u64 [sp + 0x60] = s0
  2440: 95 57 ff ff 00           a0 = s0 + 0xffff
  2445: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2450: 95 75 00 00 02           s0 = a0 + 0x20000
  2455: 98 58 0c                 a1 = s0 >> 0xc
  2458: 82 17 70                 a0 = u64 [sp + 0x70]
  2461: 0a 17                    ecalli 23 // 'zero'
  2463: 01                       fallthrough
      :                          @147
  2464: 51 07 17                 jump @149 if a0 == 0
      :                          @148
  2467: 33 0a f6 11 01           a3 = 0x111f6
  2472: 33 07 02                 a0 = 0x2
  2475: 33 0b 3e                 a4 = 0x3e
  2478: 33 08                    a1 = 0
  2480: 33 09                    a2 = 0
  2482: 0a 64                    ecalli 100 // 'log'
  2484: 28 9c 00                 jump @159
      :                          @149
  2487: 82 16 68                 s1 = u64 [sp + 0x68]
  2490: 82 17 58                 a0 = u64 [sp + 0x58]
  2493: c8 76 06                 s1 = s1 + a0
  2496: 98 69 0c                 a2 = s1 >> 0xc
  2499: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2503: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2513: c9 78 08                 a1 = a1 - a0
  2516: 98 88 0c                 a1 = a1 >> 0xc
  2519: 82 17 70                 a0 = u64 [sp + 0x70]
  2522: 0a 17                    ecalli 23 // 'zero'
  2524: 01                       fallthrough
      :                          @150
  2525: 51 07 16                 jump @152 if a0 == 0
      :                          @151
  2528: 33 0a ba 11 01           a3 = 0x111ba
  2533: 33 07 02                 a0 = 0x2
  2536: 33 0b 3c                 a4 = 0x3c
  2539: 33 08                    a1 = 0
  2541: 33 09                    a2 = 0
  2543: 0a 64                    ecalli 100 // 'log'
  2545: 28 5f                    jump @159
      :                          @152
  2547: 33 09 00 00 01           a2 = 0x10000
  2552: 82 17 70                 a0 = u64 [sp + 0x70]
  2555: 82 18 50                 a1 = u64 [sp + 0x50]
  2558: 82 1a 60                 a3 = u64 [sp + 0x60]
  2561: 0a 16                    ecalli 22 // 'poke'
  2563: 01                       fallthrough
      :                          @153
  2564: 51 07 16                 jump @155 if a0 == 0
      :                          @154
  2567: 33 0a 7c 11 01           a3 = 0x1117c
  2572: 33 07 02                 a0 = 0x2
  2575: 33 0b 3e                 a4 = 0x3e
  2578: 33 08                    a1 = 0
  2580: 33 09                    a2 = 0
  2582: 0a 64                    ecalli 100 // 'log'
  2584: 28 38                    jump @159
      :                          @155
  2586: 82 17 70                 a0 = u64 [sp + 0x70]
  2589: 82 18 48                 a1 = u64 [sp + 0x48]
  2592: 64 59                    a2 = s0
  2594: 82 1a 40                 a3 = u64 [sp + 0x40]
  2597: 0a 16                    ecalli 22 // 'poke'
  2599: 01                       fallthrough
      :                          @156
  2600: 51 07 16                 jump @158 if a0 == 0
      :                          @157
  2603: 33 0a 3e 11 01           a3 = 0x1113e
  2608: 33 07 02                 a0 = 0x2
  2611: 33 0b 3e                 a4 = 0x3e
  2614: 33 08                    a1 = 0
  2616: 33 09                    a2 = 0
  2618: 0a 64                    ecalli 100 // 'log'
  2620: 28 14                    jump @159
      :                          @158
  2622: 33 0a 10 11 01           a3 = 0x11110
  2627: 33 07 02                 a0 = 0x2
  2630: 33 0b 2e                 a4 = 0x2e
  2633: 33 08                    a1 = 0
  2635: 33 09                    a2 = 0
  2637: 0a 64                    ecalli 100 // 'log'
  2639: 01                       fallthrough
      :                          @159
  2640: 33 05 00 10              s0 = 0x1000
  2644: 33 06 08 10              s1 = 0x1008
  2648: 95 17 f8 20              a0 = sp + 0x20f8
  2652: 33 08                    a1 = 0
  2654: 33 09 08 10              a2 = 0x1008
  2658: 50 10 4e 75 33           ra = 78, jump @844
      :                          @160 [@dyn 39]
  2663: 95 18 00 31              a1 = sp + 0x3100
  2667: 49 08                    u64 [a1 + 0] = 0
  2669: 95 17 00 21              a0 = sp + 0x2100
  2673: 7b 87 08                 u64 [a1 + 0x8] = a0
  2676: 49 18 10                 u64 [a1 + 16] = 0
  2679: 49 18 18                 u64 [a1 + 24] = 0
  2682: 95 17 f8 20              a0 = sp + 0x20f8
  2686: 33 0a 06                 a3 = 0x6
  2689: 33 08                    a1 = 0
  2691: 7b 16 60                 u64 [sp + 0x60] = s1
  2694: 64 69                    a2 = s1
  2696: 95 16 00 31              s1 = sp + 0x3100
  2700: 33 0b                    a4 = 0
  2702: 33 0c                    a5 = 0
  2704: 0a 12                    ecalli 18 // 'fetch'
  2706: 01                       fallthrough
      :                          @161
  2707: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2711: 51 17 ff 6d 02           jump @188 if a0 == 4294967295
      :                          @162
  2716: 33 07 1a                 a0 = 0x1a
  2719: 7b 17 70                 u64 [sp + 0x70] = a0
  2722: 33 07 f0 01 01           a0 = 0x101f0
  2727: 7b 17 58                 u64 [sp + 0x58] = a0
  2730: 33 07 30 02 01           a0 = 0x10230
  2735: 7b 17 50                 u64 [sp + 0x50] = a0
  2738: 33 07 28 00 01           a0 = 0x10028
  2743: 7b 17 48                 u64 [sp + 0x48] = a0
  2746: 33 07 40 00 03           a0 = 0x30040
  2751: c8 75 05                 s0 = s0 + a0
  2754: 33 07 80 02 01           a0 = 0x10280
  2759: 7b 17 40                 u64 [sp + 0x40] = a0
  2762: 28 27                    jump @165
      :                          @163
  2764: 95 16 00 31              s1 = sp + 0x3100
  2768: 82 6b                    a4 = u64 [s1]
  2770: 95 bb 01                 a4 = a4 + 0x1
  2773: 7b 6b                    u64 [s1] = a4
  2775: 95 17 f8 20              a0 = sp + 0x20f8
  2779: 33 0a 06                 a3 = 0x6
  2782: 33 08                    a1 = 0
  2784: 82 19 60                 a2 = u64 [sp + 0x60]
  2787: 33 0c                    a5 = 0
  2789: 0a 12                    ecalli 18 // 'fetch'
  2791: 01                       fallthrough
      :                          @164
  2792: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2796: 51 17 ff 18 02           jump @188 if a0 == 4294967295
      :                          @165
  2801: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2805: 82 17 70                 a0 = u64 [sp + 0x70]
  2808: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2812: 95 18 68 33              a1 = sp + 0x3368
  2816: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2820: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2824: 82 17 58                 a0 = u64 [sp + 0x58]
  2827: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2831: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2836: 49 26 68 01              u64 [s1 + 360] = 0
  2840: 95 18 90 31              a1 = sp + 0x3190
  2844: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2848: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2853: 95 17 28 31              a0 = sp + 0x3128
  2857: 95 18 48 32              a1 = sp + 0x3248
  2861: 50 10 50 81 2f           ra = 80, jump @777
      :                          @166 [@dyn 40]
  2866: 95 17 00 31              a0 = sp + 0x3100
  2870: 82 76 30                 s1 = u64 [a0 + 0x30]
  2873: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2876: 82 77 28                 a0 = u64 [a0 + 0x28]
  2879: 7b 17 68                 u64 [sp + 0x68] = a0
  2882: 33 07 04                 a0 = 0x4
  2885: 33 08                    a1 = 0
  2887: 33 09                    a2 = 0
  2889: 64 6a                    a3 = s1
  2891: 33 00 52                 ra = 0x52
  2894: 0a 64                    ecalli 100 // 'log'
  2896: 01                       fallthrough
      :                          @167 [@dyn 41]
  2897: 82 1b 68                 a4 = u64 [sp + 0x68]
  2900: 82 17 78                 a0 = u64 [sp + 0x78]
  2903: c8 b7 07                 a0 = a0 + a4
  2906: 53 27 00 f0 19           jump @172 if a0 <u 4294963200
      :                          @168
  2911: 82 57                    a0 = u64 [s0]
  2913: c9 75 08                 a1 = s0 - a0
  2916: ab 68 0f                 jump @172 if a1 != s1
      :                          @169
  2919: c9 b7 08                 a1 = a0 - a4
  2922: 01                       fallthrough
      :                          @170
  2923: 82 59                    a2 = u64 [s0]
  2925: ab 79 f2                 jump @168 if a2 != a0
      :                          @171
  2928: 7b 58                    u64 [s0] = a1
  2930: 01                       fallthrough
      :                          @172
  2931: 95 18 a8 20              a1 = sp + 0x20a8
  2935: 80 87 50                 a0 = u32 [a1 + 0x50]
  2938: 80 88 54                 a1 = u32 [a1 + 0x54]
  2941: 95 19 00 31              a2 = sp + 0x3100
  2945: 7b 97 10                 u64 [a2 + 0x10] = a0
  2948: 7b 98 18                 u64 [a2 + 0x18] = a1
  2951: 33 09 01                 a2 = 0x1
  2954: 0a 17                    ecalli 23 // 'zero'
  2956: 95 19 00 31              a2 = sp + 0x3100
  2960: 7b 97 48 02              u64 [a2 + 0x248] = a0
  2964: 95 17 10 31              a0 = sp + 0x3110
  2968: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2972: 82 17 70                 a0 = u64 [sp + 0x70]
  2975: 7b 97 50 01              u64 [a2 + 0x150] = a0
  2979: 95 18 18 31              a1 = sp + 0x3118
  2983: 7b 98 58 01              u64 [a2 + 0x158] = a1
  2987: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2991: 95 18 48 33              a1 = sp + 0x3348
  2995: 7b 98 68 01              u64 [a2 + 0x168] = a1
  2999: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3003: 82 17 50                 a0 = u64 [sp + 0x50]
  3006: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3010: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  3015: 49 29 b0 00              u64 [a2 + 176] = 0
  3019: 95 17 48 32              a0 = sp + 0x3248
  3023: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3027: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  3032: 95 17 28 31              a0 = sp + 0x3128
  3036: 95 18 90 31              a1 = sp + 0x3190
  3040: 50 10 54 ce 2e           ra = 84, jump @777
      :                          @173 [@dyn 42]
  3045: 95 17 00 31              a0 = sp + 0x3100
  3049: 82 76 30                 s1 = u64 [a0 + 0x30]
  3052: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3055: 82 77 28                 a0 = u64 [a0 + 0x28]
  3058: 7b 17 68                 u64 [sp + 0x68] = a0
  3061: 33 07 04                 a0 = 0x4
  3064: 33 08                    a1 = 0
  3066: 33 09                    a2 = 0
  3068: 64 6a                    a3 = s1
  3070: 33 00 56                 ra = 0x56
  3073: 0a 64                    ecalli 100 // 'log'
  3075: 01                       fallthrough
      :                          @174 [@dyn 43]
  3076: 82 1b 68                 a4 = u64 [sp + 0x68]
  3079: 82 17 78                 a0 = u64 [sp + 0x78]
  3082: c8 b7 07                 a0 = a0 + a4
  3085: 53 27 00 f0 19           jump @179 if a0 <u 4294963200
      :                          @175
  3090: 82 57                    a0 = u64 [s0]
  3092: c9 75 08                 a1 = s0 - a0
  3095: ab 68 0f                 jump @179 if a1 != s1
      :                          @176
  3098: c9 b7 08                 a1 = a0 - a4
  3101: 01                       fallthrough
      :                          @177
  3102: 82 59                    a2 = u64 [s0]
  3104: ab 79 f2                 jump @175 if a2 != a0
      :                          @178
  3107: 7b 58                    u64 [s0] = a1
  3109: 01                       fallthrough
      :                          @179
  3110: 95 1a 00 31              a3 = sp + 0x3100
  3114: 82 a9 18                 a2 = u64 [a3 + 0x18]
  3117: 82 a7 10                 a0 = u64 [a3 + 0x10]
  3120: 95 18 f8 20              a1 = sp + 0x20f8
  3124: 7b a8 78 02              u64 [a3 + 0x278] = a1
  3128: 97 99 0c                 a2 = a2 << 0xc
  3131: 7b a9 88 02              u64 [a3 + 0x288] = a2
  3135: 33 0a 00 10              a3 = 0x1000
  3139: 95 18 00 21              a1 = sp + 0x2100
  3143: 0a 16                    ecalli 22 // 'poke'
  3145: 95 19 00 31              a2 = sp + 0x3100
  3149: 7b 97 08 01              u64 [a2 + 0x108] = a0
  3153: 95 17 10 31              a0 = sp + 0x3110
  3157: 7b 97 48 01              u64 [a2 + 0x148] = a0
  3161: 82 17 70                 a0 = u64 [sp + 0x70]
  3164: 7b 97 50 01              u64 [a2 + 0x150] = a0
  3168: 95 18 78 33              a1 = sp + 0x3378
  3172: 7b 98 58 01              u64 [a2 + 0x158] = a1
  3176: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3180: 95 18 88 33              a1 = sp + 0x3388
  3184: 7b 98 68 01              u64 [a2 + 0x168] = a1
  3188: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3192: 82 18 48                 a1 = u64 [sp + 0x48]
  3195: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3199: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3203: 95 18 08 32              a1 = sp + 0x3208
  3207: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3211: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3215: 82 17 40                 a0 = u64 [sp + 0x40]
  3218: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3222: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3227: 49 29 b0 00              u64 [a2 + 176] = 0
  3231: 95 17 48 32              a0 = sp + 0x3248
  3235: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3239: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3244: 95 17 28 31              a0 = sp + 0x3128
  3248: 95 18 90 31              a1 = sp + 0x3190
  3252: 50 10 58 fa 2d           ra = 88, jump @777
      :                          @180 [@dyn 44]
  3257: 95 17 00 31              a0 = sp + 0x3100
  3261: 82 76 30                 s1 = u64 [a0 + 0x30]
  3264: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3267: 82 77 28                 a0 = u64 [a0 + 0x28]
  3270: 7b 17 68                 u64 [sp + 0x68] = a0
  3273: 33 07 04                 a0 = 0x4
  3276: 33 08                    a1 = 0
  3278: 33 09                    a2 = 0
  3280: 64 6a                    a3 = s1
  3282: 33 00 5a                 ra = 0x5a
  3285: 0a 64                    ecalli 100 // 'log'
  3287: 01                       fallthrough
      :                          @181 [@dyn 45]
  3288: 82 1b 68                 a4 = u64 [sp + 0x68]
  3291: 82 17 78                 a0 = u64 [sp + 0x78]
  3294: c8 b7 07                 a0 = a0 + a4
  3297: 53 27 00 f0 eb fd        jump @163 if a0 <u 4294963200
      :                          @182
  3303: 82 57                    a0 = u64 [s0]
  3305: c9 75 08                 a1 = s0 - a0
  3308: ab 68 e0 fd              jump @163 if a1 != s1
      :                          @183
  3312: c9 b7 08                 a1 = a0 - a4
  3315: 01                       fallthrough
      :                          @184
  3316: 82 59                    a2 = u64 [s0]
  3318: ab 79 f1                 jump @182 if a2 != a0
      :                          @185
  3321: 7b 58                    u64 [s0] = a1
  3323: 33 0a                    a3 = 0
  3325: 01                       fallthrough
      :                          @186
  3326: ab 79 e9                 jump @182 if a2 != a0
      :                          @187
  3329: 28 cb fd                 jump @163
      :                          @188
  3332: 82 69 18                 a2 = u64 [s1 + 0x18]
  3335: 95 9a 01                 a3 = a2 + 0x1
  3338: 33 08 f0 ef 0f           a1 = 0xfeff0
  3343: 82 67 10                 a0 = u64 [s1 + 0x10]
  3346: db 9a 08                 a1 = a3 if a2 != 0
  3349: 7b 68 18                 u64 [s1 + 0x18] = a1
  3352: 33 09 01                 a2 = 0x1
  3355: 0a 17                    ecalli 23 // 'zero'
  3357: 7b 67 20                 u64 [s1 + 0x20] = a0
  3360: 95 17 10 31              a0 = sp + 0x3110
  3364: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3368: 33 07 1a                 a0 = 0x1a
  3371: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3375: 95 18 18 31              a1 = sp + 0x3118
  3379: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3383: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3387: 95 18 20 31              a1 = sp + 0x3120
  3391: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3395: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3399: 33 07 e8 02 01           a0 = 0x102e8
  3404: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3408: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3413: 49 26 b0 00              u64 [s1 + 176] = 0
  3417: 95 18 48 32              a1 = sp + 0x3248
  3421: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  3425: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3430: 95 17 28 31              a0 = sp + 0x3128
  3434: 95 18 90 31              a1 = sp + 0x3190
  3438: 50 10 5c 40 2d           ra = 92, jump @777
      :                          @189 [@dyn 46]
  3443: 82 65 30                 s0 = u64 [s1 + 0x30]
  3446: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3449: 82 66 28                 s1 = u64 [s1 + 0x28]
  3452: 33 07 04                 a0 = 0x4
  3455: 33 08                    a1 = 0
  3457: 33 09                    a2 = 0
  3459: 64 5a                    a3 = s0
  3461: 33 00 5e                 ra = 0x5e
  3464: 0a 64                    ecalli 100 // 'log'
  3466: 01                       fallthrough
      :                          @190 [@dyn 47]
  3467: 82 17 78                 a0 = u64 [sp + 0x78]
  3470: c8 67 07                 a0 = a0 + s1
  3473: 53 27 00 f0 25           jump @196 if a0 <u 4294963200
      :                          @191
  3478: 33 07 40 00 03           a0 = 0x30040
  3483: 95 77 00 10              a0 = a0 + 0x1000
  3487: 01                       fallthrough
      :                          @192
  3488: 82 78                    a1 = u64 [a0]
  3490: c9 87 09                 a2 = a0 - a1
  3493: ab 59 11                 jump @196 if a2 != s0
      :                          @193
  3496: c9 68 09                 a2 = a1 - s1
  3499: 01                       fallthrough
      :                          @194
  3500: 82 7a                    a3 = u64 [a0]
  3502: ab 8a f2                 jump @192 if a3 != a1
      :                          @195
  3505: 7b 79                    u64 [a0] = a2
  3507: 33 0b                    a4 = 0
  3509: 01                       fallthrough
      :                          @196
  3510: 95 16 00 31              s1 = sp + 0x3100
  3514: 49 16 58                 u64 [s1 + 88] = 0
  3517: 49 16 50                 u64 [s1 + 80] = 0
  3520: 49 16 48                 u64 [s1 + 72] = 0
  3523: 49 16 40                 u64 [s1 + 64] = 0
  3526: 49 16 38                 u64 [s1 + 56] = 0
  3529: 49 16 70                 u64 [s1 + 112] = 0
  3532: 49 16 78                 u64 [s1 + 120] = 0
  3535: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3545: 7b 67 28                 u64 [s1 + 0x28] = a0
  3548: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3558: 7b 67 30                 u64 [s1 + 0x30] = a0
  3561: 82 67                    a0 = u64 [s1]
  3563: 49 26 80 00              u64 [s1 + 128] = 0
  3567: 49 26 88 00              u64 [s1 + 136] = 0
  3571: 49 16 68                 u64 [s1 + 104] = 0
  3574: 7b 67 60                 u64 [s1 + 0x60] = a0
  3577: 95 17 28 31              a0 = sp + 0x3128
  3581: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3585: 33 07 1e                 a0 = 0x1e
  3588: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3592: 33 07 38 03 01           a0 = 0x10338
  3597: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3601: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3606: 49 26 68 01              u64 [s1 + 360] = 0
  3610: 95 17 08 32              a0 = sp + 0x3208
  3614: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3618: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3623: 95 17 90 31              a0 = sp + 0x3190
  3627: 95 18 48 32              a1 = sp + 0x3248
  3631: 50 10 60 7f 2c           ra = 96, jump @777
      :                          @197 [@dyn 48]
  3636: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3640: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3644: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3648: 33 07 04                 a0 = 0x4
  3651: 33 08                    a1 = 0
  3653: 33 09                    a2 = 0
  3655: 64 5a                    a3 = s0
  3657: 33 00 62                 ra = 0x62
  3660: 0a 64                    ecalli 100 // 'log'
  3662: 01                       fallthrough
      :                          @198 [@dyn 49]
  3663: 82 17 78                 a0 = u64 [sp + 0x78]
  3666: c8 67 07                 a0 = a0 + s1
  3669: 53 27 00 f0 23           jump @204 if a0 <u 4294963200
      :                          @199
  3674: 33 07 40 00 03           a0 = 0x30040
  3679: 95 77 00 10              a0 = a0 + 0x1000
  3683: 01                       fallthrough
      :                          @200
  3684: 82 78                    a1 = u64 [a0]
  3686: c9 87 09                 a2 = a0 - a1
  3689: ab 59 0f                 jump @204 if a2 != s0
      :                          @201
  3692: c9 68 09                 a2 = a1 - s1
  3695: 01                       fallthrough
      :                          @202
  3696: 82 7a                    a3 = u64 [a0]
  3698: ab 8a f2                 jump @200 if a3 != a1
      :                          @203
  3701: 7b 79                    u64 [a0] = a2
  3703: 01                       fallthrough
      :                          @204
  3704: 95 13 00 31              t1 = sp + 0x3100
  3708: 82 32 28                 t0 = u64 [t1 + 0x28]
  3711: 82 39 30                 a2 = u64 [t1 + 0x30]
  3714: 82 34 38                 t2 = u64 [t1 + 0x38]
  3717: 82 30 40                 ra = u64 [t1 + 0x40]
  3720: 82 3b 48                 a4 = u64 [t1 + 0x48]
  3723: 82 3c 50                 a5 = u64 [t1 + 0x50]
  3726: 82 36 58                 s1 = u64 [t1 + 0x58]
  3729: 82 35 60                 s0 = u64 [t1 + 0x60]
  3732: 49 23 90 00 00 00 01     u64 [t1 + 144] = 0x10000
  3739: 82 37 68                 a0 = u64 [t1 + 0x68]
  3742: 7b 32 98 00              u64 [t1 + 0x98] = t0
  3746: 82 38 70                 a1 = u64 [t1 + 0x70]
  3749: 7b 39 a0 00              u64 [t1 + 0xa0] = a2
  3753: 82 39 78                 a2 = u64 [t1 + 0x78]
  3756: 7b 34 a8 00              u64 [t1 + 0xa8] = t2
  3760: 82 3a 80 00              a3 = u64 [t1 + 0x80]
  3764: 7b 30 b0 00              u64 [t1 + 0xb0] = ra
  3768: 82 32 88 00              t0 = u64 [t1 + 0x88]
  3772: 7b 3b b8 00              u64 [t1 + 0xb8] = a4
  3776: 7b 3c c0 00              u64 [t1 + 0xc0] = a5
  3780: 7b 36 c8 00              u64 [t1 + 0xc8] = s1
  3784: 7b 35 d0 00              u64 [t1 + 0xd0] = s0
  3788: 95 15 00 31              s0 = sp + 0x3100
  3792: 7b 57 d8 00              u64 [s0 + 0xd8] = a0
  3796: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
  3800: 7b 59 e8 00              u64 [s0 + 0xe8] = a2
  3804: 7b 5a f0 00              u64 [s0 + 0xf0] = a3
  3808: 7b 52 f8 00              u64 [s0 + 0xf8] = t0
  3812: 33 07 1a                 a0 = 0x1a
  3815: 7b 17 60                 u64 [sp + 0x60] = a0
  3818: 33 07 68 03 01           a0 = 0x10368
  3823: 7b 17 58                 u64 [sp + 0x58] = a0
  3826: 33 06 40 00 03           s1 = 0x30040
  3831: 95 66 00 10              s1 = s1 + 0x1000
  3835: 01                       fallthrough
      :                          @205
  3836: 95 17 a8 20              a0 = sp + 0x20a8
  3840: 82 77 48                 a0 = u64 [a0 + 0x48]
  3843: 95 18 90 31              a1 = sp + 0x3190
  3847: 0a 19                    ecalli 25 // 'invoke'
  3849: 7b 18 68                 u64 [sp + 0x68] = a1
  3852: 7b 57 00 01              u64 [s0 + 0x100] = a0
  3856: 95 17 f0 20              a0 = sp + 0x20f0
  3860: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3864: 82 17 60                 a0 = u64 [sp + 0x60]
  3867: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3871: 95 18 00 32              a1 = sp + 0x3200
  3875: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3879: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3883: 95 18 e8 20              a1 = sp + 0x20e8
  3887: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3891: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3895: 82 17 58                 a0 = u64 [sp + 0x58]
  3898: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3902: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  3907: 49 25 28 01              u64 [s0 + 296] = 0
  3911: 95 17 48 32              a0 = sp + 0x3248
  3915: 7b 57 18 01              u64 [s0 + 0x118] = a0
  3919: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  3924: 95 17 88 33              a0 = sp + 0x3388
  3928: 95 18 08 32              a1 = sp + 0x3208
  3932: 50 10 64 52 2b           ra = 100, jump @777
      :                          @206 [@dyn 50]
  3937: 95 17 00 31              a0 = sp + 0x3100
  3941: 82 75 90 02              s0 = u64 [a0 + 0x290]
  3945: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  3949: 82 77 88 02              a0 = u64 [a0 + 0x288]
  3953: 7b 17 70                 u64 [sp + 0x70] = a0
  3956: 33 07 04                 a0 = 0x4
  3959: 33 08                    a1 = 0
  3961: 33 09                    a2 = 0
  3963: 64 5a                    a3 = s0
  3965: 33 00 66                 ra = 0x66
  3968: 0a 64                    ecalli 100 // 'log'
  3970: 01                       fallthrough
      :                          @207 [@dyn 51]
  3971: 82 1b 70                 a4 = u64 [sp + 0x70]
  3974: 82 17 78                 a0 = u64 [sp + 0x78]
  3977: c8 b7 07                 a0 = a0 + a4
  3980: 53 27 00 f0 19           jump @212 if a0 <u 4294963200
      :                          @208
  3985: 82 67                    a0 = u64 [s1]
  3987: c9 76 08                 a1 = s1 - a0
  3990: ab 58 0f                 jump @212 if a1 != s0
      :                          @209
  3993: c9 b7 08                 a1 = a0 - a4
  3996: 01                       fallthrough
      :                          @210
  3997: 82 69                    a2 = u64 [s1]
  3999: ab 79 f2                 jump @208 if a2 != a0
      :                          @211
  4002: 7b 68                    u64 [s1] = a1
  4004: 01                       fallthrough
      :                          @212
  4005: 95 15 00 31              s0 = sp + 0x3100
  4009: 82 57 00 01              a0 = u64 [s0 + 0x100]
  4013: 51 07 b1 00              jump @217 if a0 == 0
      :                          @213
  4017: 85 77 03                 a0 = a0 ^ 0x3
  4020: 82 18 68                 a1 = u64 [sp + 0x68]
  4023: 85 88 64                 a1 = a1 ^ 0x64
  4026: d4 87 07                 a0 = a0 | a1
  4029: 52 07 3f ff              jump @205 if a0 != 0
      :                          @214
  4033: 95 17 28 31              a0 = sp + 0x3128
  4037: 33 09 68                 a2 = 0x68
  4040: 95 18 98 31              a1 = sp + 0x3198
  4044: 50 10 68 59 2d           ra = 104, jump @826
      :                          @215 [@dyn 52]
  4049: 82 57 60                 a0 = u64 [s0 + 0x60]
  4052: 7b 17 68                 u64 [sp + 0x68] = a0
  4055: 82 57 68                 a0 = u64 [s0 + 0x68]
  4058: 7b 17 48                 u64 [sp + 0x48] = a0
  4061: 82 57 70                 a0 = u64 [s0 + 0x70]
  4064: 7b 17 70                 u64 [sp + 0x70] = a0
  4067: 82 57 78                 a0 = u64 [s0 + 0x78]
  4070: 7b 17 50                 u64 [sp + 0x50] = a0
  4073: 95 17 00 31              a0 = sp + 0x3100
  4077: 82 75 80 00              s0 = u64 [a0 + 0x80]
  4081: 49 27 40 01              u64 [a0 + 320] = 0
  4085: 49 27 38 01              u64 [a0 + 312] = 0
  4089: 49 27 30 01              u64 [a0 + 304] = 0
  4093: 49 27 28 01              u64 [a0 + 296] = 0
  4097: 49 27 20 01              u64 [a0 + 288] = 0
  4101: 49 27 18 01              u64 [a0 + 280] = 0
  4105: 49 27 10 01              u64 [a0 + 272] = 0
  4109: 49 27 08 01              u64 [a0 + 264] = 0
  4113: 95 17 48 32              a0 = sp + 0x3248
  4117: 33 09 00 01              a2 = 0x100
  4121: 33 08                    a1 = 0
  4123: 50 10 6a bc 2d           ra = 106, jump @844
      :                          @216 [@dyn 53]
  4128: 95 17 a8 20              a0 = sp + 0x20a8
  4132: 82 77 48                 a0 = u64 [a0 + 0x48]
  4135: 95 18 08 32              a1 = sp + 0x3208
  4139: 82 19 48                 a2 = u64 [sp + 0x48]
  4142: 82 1a 70                 a3 = u64 [sp + 0x70]
  4145: 0a 15                    ecalli 21 // 'peek'
  4147: 95 17 a8 20              a0 = sp + 0x20a8
  4151: 82 77 48                 a0 = u64 [a0 + 0x48]
  4154: 95 18 48 32              a1 = sp + 0x3248
  4158: 82 19 50                 a2 = u64 [sp + 0x50]
  4161: 64 5a                    a3 = s0
  4163: 0a 15                    ecalli 21 // 'peek'
  4165: 95 18 08 32              a1 = sp + 0x3208
  4169: 95 1a 48 32              a3 = sp + 0x3248
  4173: 82 17 68                 a0 = u64 [sp + 0x68]
  4176: 82 19 70                 a2 = u64 [sp + 0x70]
  4179: 64 5b                    a4 = s0
  4181: 95 15 00 31              s0 = sp + 0x3100
  4185: 0a 64                    ecalli 100 // 'log'
  4187: 28 a1 fe                 jump @205
      :                          @217
  4190: 0a                       ecalli 0 // 'gas'
  4191: 95 18 a8 20              a1 = sp + 0x20a8
  4195: 7b 87 40                 u64 [a1 + 0x40] = a0
  4198: 95 17 e8 20              a0 = sp + 0x20e8
  4202: 7b 57 88 02              u64 [s0 + 0x288] = a0
  4206: 33 07 1a                 a0 = 0x1a
  4209: 7b 57 90 02              u64 [s0 + 0x290] = a0
  4213: 33 07 90 01 01           a0 = 0x10190
  4218: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4222: 49 25 50 01 01           u64 [s0 + 336] = 0x1
  4227: 49 25 68 01              u64 [s0 + 360] = 0
  4231: 95 18 88 33              a1 = sp + 0x3388
  4235: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4239: 49 25 60 01 01           u64 [s0 + 352] = 0x1
  4244: 95 17 08 32              a0 = sp + 0x3208
  4248: 95 18 48 32              a1 = sp + 0x3248
  4252: 50 10 6c 12 2a           ra = 108, jump @777
      :                          @218 [@dyn 54]
  4257: 95 17 00 31              a0 = sp + 0x3100
  4261: 82 75 10 01              s0 = u64 [a0 + 0x110]
  4265: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  4269: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4273: 33 07 04                 a0 = 0x4
  4276: 33 08                    a1 = 0
  4278: 33 09                    a2 = 0
  4280: 64 5a                    a3 = s0
  4282: 33 00 6e                 ra = 0x6e
  4285: 0a 64                    ecalli 100 // 'log'
  4287: 01                       fallthrough
      :                          @219 [@dyn 55]
  4288: 82 17 78                 a0 = u64 [sp + 0x78]
  4291: c8 67 07                 a0 = a0 + s1
  4294: 53 27 00 f0 25           jump @225 if a0 <u 4294963200
      :                          @220
  4299: 33 07 40 00 03           a0 = 0x30040
  4304: 95 77 00 10              a0 = a0 + 0x1000
  4308: 01                       fallthrough
      :                          @221
  4309: 82 78                    a1 = u64 [a0]
  4311: c9 87 09                 a2 = a0 - a1
  4314: ab 59 11                 jump @225 if a2 != s0
      :                          @222
  4317: c9 68 09                 a2 = a1 - s1
  4320: 01                       fallthrough
      :                          @223
  4321: 82 7a                    a3 = u64 [a0]
  4323: ab 8a f2                 jump @221 if a3 != a1
      :                          @224
  4326: 7b 79                    u64 [a0] = a2
  4328: 33 0b                    a4 = 0
  4330: 01                       fallthrough
      :                          @225
  4331: 95 1a a8 20              a3 = sp + 0x20a8
  4335: 82 a7 48                 a0 = u64 [a3 + 0x48]
  4338: 95 15 00 31              s0 = sp + 0x3100
  4342: 82 58                    a1 = u64 [s0]
  4344: 48 25 50 02              u32 [s0 + 592] = 0
  4348: 7a 57 54 02              u32 [s0 + 0x254] = a0
  4352: 49 25 48 02              u64 [s0 + 584] = 0
  4356: 7b 18 58                 u64 [sp + 0x58] = a1
  4359: 51 18 ff 1d 03           jump @255 if a1 == 4294967295
      :                          @226
  4364: 33 08                    a1 = 0
  4366: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4376: 7b 19 50                 u64 [sp + 0x50] = a2
  4379: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4389: 7b 17 48                 u64 [sp + 0x48] = a0
  4392: 33 07 1a                 a0 = 0x1a
  4395: 7b 17 68                 u64 [sp + 0x68] = a0
  4398: 33 07 28 00 01           a0 = 0x10028
  4403: 7b 17 40                 u64 [sp + 0x40] = a0
  4406: 33 07 88 04 01           a0 = 0x10488
  4411: 7b 17 38                 u64 [sp + 0x38] = a0
  4414: 49 11 30 f0 ef 0f        u64 [sp + 48] = 0xfeff0
  4420: 33 07 06                 a0 = 0x6
  4423: 7b 17 28                 u64 [sp + 0x28] = a0
  4426: 33 07 16                 a0 = 0x16
  4429: 7b 17 20                 u64 [sp + 0x20] = a0
  4432: 33 07 08 05 01           a0 = 0x10508
  4437: 7b 17 18                 u64 [sp + 0x18] = a0
  4440: 33 07 12                 a0 = 0x12
  4443: 7b 17 10                 u64 [sp + 0x10] = a0
  4446: 33 07 48 05 01           a0 = 0x10548
  4451: 7b 17 08                 u64 [sp + 0x8] = a0
  4454: 33 06 40 00 03           s1 = 0x30040
  4459: 95 66 00 10              s1 = s1 + 0x1000
  4463: 28 17                    jump @228
      :                          @227
  4465: 82 19 70                 a2 = u64 [sp + 0x70]
  4468: 95 98 01                 a1 = a2 + 0x1
  4471: 95 15 00 31              s0 = sp + 0x3100
  4475: 95 1a a8 20              a3 = sp + 0x20a8
  4479: 82 17 58                 a0 = u64 [sp + 0x58]
  4482: aa 79 a2 02              jump @255 if a2 == a0
      :                          @228
  4486: 7b 58 58 02              u64 [s0 + 0x258] = a1
  4490: 7b 18 70                 u64 [sp + 0x70] = a1
  4493: 97 89 0c                 a2 = a1 << 0xc
  4496: 82 a7 48                 a0 = u64 [a3 + 0x48]
  4499: 82 58 08                 a1 = u64 [s0 + 0x8]
  4502: 82 1a 50                 a3 = u64 [sp + 0x50]
  4505: c8 a9 09                 a2 = a2 + a3
  4508: 82 1a 48                 a3 = u64 [sp + 0x48]
  4511: d2 a9 09                 a2 = a2 & a3
  4514: 7b 59 60 02              u64 [s0 + 0x260] = a2
  4518: 33 0a 00 10              a3 = 0x1000
  4522: 0a 15                    ecalli 21 // 'peek'
  4524: 7b 57 68 02              u64 [s0 + 0x268] = a0
  4528: 95 17 f0 20              a0 = sp + 0x20f0
  4532: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4536: 82 17 68                 a0 = u64 [sp + 0x68]
  4539: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4543: 95 18 08 31              a1 = sp + 0x3108
  4547: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4551: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4555: 95 18 60 33              a1 = sp + 0x3360
  4559: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4563: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4567: 82 18 40                 a1 = u64 [sp + 0x40]
  4570: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4574: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4578: 95 18 68 33              a1 = sp + 0x3368
  4582: 7b 58 88 01              u64 [s0 + 0x188] = a1
  4586: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4590: 82 17 38                 a0 = u64 [sp + 0x38]
  4593: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4597: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4602: 49 25 28 01              u64 [s0 + 296] = 0
  4606: 95 18 48 32              a1 = sp + 0x3248
  4610: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4614: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4619: 95 17 88 33              a0 = sp + 0x3388
  4623: 95 18 08 32              a1 = sp + 0x3208
  4627: 50 10 70 9b 28           ra = 112, jump @777
      :                          @229 [@dyn 56]
  4632: 95 17 00 31              a0 = sp + 0x3100
  4636: 82 75 90 02              s0 = u64 [a0 + 0x290]
  4640: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  4644: 82 77 88 02              a0 = u64 [a0 + 0x288]
  4648: 7b 17 60                 u64 [sp + 0x60] = a0
  4651: 33 07 03                 a0 = 0x3
  4654: 33 08                    a1 = 0
  4656: 33 09                    a2 = 0
  4658: 64 5a                    a3 = s0
  4660: 33 00 72                 ra = 0x72
  4663: 0a 64                    ecalli 100 // 'log'
  4665: 01                       fallthrough
      :                          @230 [@dyn 57]
  4666: 82 1b 60                 a4 = u64 [sp + 0x60]
  4669: 82 17 78                 a0 = u64 [sp + 0x78]
  4672: c8 b7 07                 a0 = a0 + a4
  4675: 53 27 00 f0 19           jump @235 if a0 <u 4294963200
      :                          @231
  4680: 82 67                    a0 = u64 [s1]
  4682: c9 76 08                 a1 = s1 - a0
  4685: ab 58 0f                 jump @235 if a1 != s0
      :                          @232
  4688: c9 b7 08                 a1 = a0 - a4
  4691: 01                       fallthrough
      :                          @233
  4692: 82 69                    a2 = u64 [s1]
  4694: ab 79 f2                 jump @231 if a2 != a0
      :                          @234
  4697: 7b 68                    u64 [s1] = a1
  4699: 01                       fallthrough
      :                          @235
  4700: 95 1a 00 31              a3 = sp + 0x3100
  4704: 81 a7 54 02              a0 = i32 [a3 + 0x254]
  4708: 81 a8 58 02              a1 = i32 [a3 + 0x258]
  4712: 95 19 a8 20              a2 = sp + 0x20a8
  4716: 7a 97 50                 u32 [a2 + 0x50] = a0
  4719: 82 17 30                 a0 = u64 [sp + 0x30]
  4722: be 87 07                 i32 a0 = a0 + a1
  4725: 7a a7 74 02              u32 [a3 + 0x274] = a0
  4729: 7a 97 54                 u32 [a2 + 0x54] = a0
  4732: 95 17 f8 20              a0 = sp + 0x20f8
  4736: 7b a7 78 02              u64 [a3 + 0x278] = a0
  4740: 49 2a 80 02 08           u64 [a3 + 640] = 0x8
  4745: 95 17 78 33              a0 = sp + 0x3378
  4749: 7b a7 48 01              u64 [a3 + 0x148] = a0
  4753: 82 17 28                 a0 = u64 [sp + 0x28]
  4756: 7b a7 50 01              u64 [a3 + 0x150] = a0
  4760: 95 17 54 33              a0 = sp + 0x3354
  4764: 7b a7 58 01              u64 [a3 + 0x158] = a0
  4768: 82 17 20                 a0 = u64 [sp + 0x20]
  4771: 7b a7 60 01              u64 [a3 + 0x160] = a0
  4775: 95 18 74 33              a1 = sp + 0x3374
  4779: 7b a8 68 01              u64 [a3 + 0x168] = a1
  4783: 7b a7 70 01              u64 [a3 + 0x170] = a0
  4787: 82 17 18                 a0 = u64 [sp + 0x18]
  4790: 7b a7 08 01              u64 [a3 + 0x108] = a0
  4794: 49 2a 10 01 03           u64 [a3 + 272] = 0x3
  4799: 49 2a 28 01              u64 [a3 + 296] = 0
  4803: 95 17 48 32              a0 = sp + 0x3248
  4807: 7b a7 18 01              u64 [a3 + 0x118] = a0
  4811: 49 2a 20 01 03           u64 [a3 + 288] = 0x3
  4816: 95 17 88 33              a0 = sp + 0x3388
  4820: 95 18 08 32              a1 = sp + 0x3208
  4824: 50 10 74 d6 27           ra = 116, jump @777
      :                          @236 [@dyn 58]
  4829: 95 17 00 31              a0 = sp + 0x3100
  4833: 82 75 90 02              s0 = u64 [a0 + 0x290]
  4837: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  4841: 82 77 88 02              a0 = u64 [a0 + 0x288]
  4845: 7b 17 60                 u64 [sp + 0x60] = a0
  4848: 33 07 04                 a0 = 0x4
  4851: 33 08                    a1 = 0
  4853: 33 09                    a2 = 0
  4855: 64 5a                    a3 = s0
  4857: 33 00 76                 ra = 0x76
  4860: 0a 64                    ecalli 100 // 'log'
  4862: 01                       fallthrough
      :                          @237 [@dyn 59]
  4863: 82 1b 60                 a4 = u64 [sp + 0x60]
  4866: 82 17 78                 a0 = u64 [sp + 0x78]
  4869: c8 b7 07                 a0 = a0 + a4
  4872: 53 27 00 f0 19           jump @242 if a0 <u 4294963200
      :                          @238
  4877: 82 67                    a0 = u64 [s1]
  4879: c9 76 08                 a1 = s1 - a0
  4882: ab 58 0f                 jump @242 if a1 != s0
      :                          @239
  4885: c9 b7 08                 a1 = a0 - a4
  4888: 01                       fallthrough
      :                          @240
  4889: 82 69                    a2 = u64 [s1]
  4891: ab 79 f2                 jump @238 if a2 != a0
      :                          @241
  4894: 7b 68                    u64 [s1] = a1
  4896: 01                       fallthrough
      :                          @242
  4897: 95 15 00 31              s0 = sp + 0x3100
  4901: 82 57 58 02              a0 = u64 [s0 + 0x258]
  4905: 82 58                    a1 = u64 [s0]
  4907: ab 87 19                 jump @244 if a0 != a1
      :                          @243
  4910: 82 17 70                 a0 = u64 [sp + 0x70]
  4913: 7a 57 48 02              u32 [s0 + 0x248] = a0
  4917: 95 18 4c 33              a1 = sp + 0x334c
  4921: 95 1a a8 20              a3 = sp + 0x20a8
  4925: 81 a7 58                 a0 = i32 [a3 + 0x58]
  4928: 7a 87                    u32 [a1] = a0
  4930: 28 16                    jump @246
      :                          @244
  4932: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  4935: 95 18 50 33              a1 = sp + 0x3350
  4939: 95 1a a8 20              a3 = sp + 0x20a8
  4943: ab 97 09                 jump @246 if a0 != a2
      :                          @245
  4946: 81 a7 58                 a0 = i32 [a3 + 0x58]
  4949: 7a 87                    u32 [a1] = a0
  4951: 01                       fallthrough
      :                          @246
  4952: 33 08 08 10              a1 = 0x1008
  4956: 95 17 f8 20              a0 = sp + 0x20f8
  4960: 0a 13                    ecalli 19 // 'export'
  4962: 7b 57 78 02              u64 [s0 + 0x278] = a0
  4966: 0a                       ecalli 0 // 'gas'
  4967: 95 18 a8 20              a1 = sp + 0x20a8
  4971: 7b 87 40                 u64 [a1 + 0x40] = a0
  4974: 95 18 58 33              a1 = sp + 0x3358
  4978: 7b 58 48 01              u64 [s0 + 0x148] = a1
  4982: 82 17 68                 a0 = u64 [sp + 0x68]
  4985: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4989: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4993: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4997: 95 18 78 33              a1 = sp + 0x3378
  5001: 7b 58 68 01              u64 [s0 + 0x168] = a1
  5005: 7b 57 70 01              u64 [s0 + 0x170] = a0
  5009: 95 18 e8 20              a1 = sp + 0x20e8
  5013: 7b 58 78 01              u64 [s0 + 0x178] = a1
  5017: 7b 57 80 01              u64 [s0 + 0x180] = a0
  5021: 95 17 48 33              a0 = sp + 0x3348
  5025: 7b 57 88 01              u64 [s0 + 0x188] = a0
  5029: 82 17 10                 a0 = u64 [sp + 0x10]
  5032: 7b 57 90 01              u64 [s0 + 0x190] = a0
  5036: 82 17 08                 a0 = u64 [sp + 0x8]
  5039: 7b 57 08 01              u64 [s0 + 0x108] = a0
  5043: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  5048: 49 25 28 01              u64 [s0 + 296] = 0
  5052: 95 18 48 32              a1 = sp + 0x3248
  5056: 7b 58 18 01              u64 [s0 + 0x118] = a1
  5060: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  5065: 95 17 88 33              a0 = sp + 0x3388
  5069: 95 18 08 32              a1 = sp + 0x3208
  5073: 50 10 78 dd 26           ra = 120, jump @777
      :                          @247 [@dyn 60]
  5078: 95 17 00 31              a0 = sp + 0x3100
  5082: 82 75 90 02              s0 = u64 [a0 + 0x290]
  5086: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  5090: 82 77 88 02              a0 = u64 [a0 + 0x288]
  5094: 7b 17 60                 u64 [sp + 0x60] = a0
  5097: 33 07 04                 a0 = 0x4
  5100: 33 08                    a1 = 0
  5102: 33 09                    a2 = 0
  5104: 64 5a                    a3 = s0
  5106: 33 00 7a                 ra = 0x7a
  5109: 0a 64                    ecalli 100 // 'log'
  5111: 01                       fallthrough
      :                          @248 [@dyn 61]
  5112: 82 1b 60                 a4 = u64 [sp + 0x60]
  5115: 82 17 78                 a0 = u64 [sp + 0x78]
  5118: c8 b7 07                 a0 = a0 + a4
  5121: 53 27 00 f0 70 fd        jump @227 if a0 <u 4294963200
      :                          @249
  5127: 82 67                    a0 = u64 [s1]
  5129: c9 76 08                 a1 = s1 - a0
  5132: ab 58 65 fd              jump @227 if a1 != s0
      :                          @250
  5136: c9 b7 08                 a1 = a0 - a4
  5139: 01                       fallthrough
      :                          @251
  5140: 82 69                    a2 = u64 [s1]
  5142: ab 79 f1                 jump @249 if a2 != a0
      :                          @252
  5145: 7b 68                    u64 [s1] = a1
  5147: 33 0a                    a3 = 0
  5149: 01                       fallthrough
      :                          @253
  5150: ab 79 e9                 jump @249 if a2 != a0
      :                          @254
  5153: 28 50 fd                 jump @227
      :                          @255
  5156: 95 17 4c 33              a0 = sp + 0x334c
  5160: 95 18 50 33              a1 = sp + 0x3350
  5164: 95 19 48 33              a2 = sp + 0x3348
  5168: 7b 59 48 01              u64 [s0 + 0x148] = a2
  5172: 33 09 12                 a2 = 0x12
  5175: 7b 59 50 01              u64 [s0 + 0x150] = a2
  5179: 7b 57 58 01              u64 [s0 + 0x158] = a0
  5183: 7b 59 60 01              u64 [s0 + 0x160] = a2
  5187: 7b 58 68 01              u64 [s0 + 0x168] = a1
  5191: 7b 59 70 01              u64 [s0 + 0x170] = a2
  5195: 33 07 a8 03 01           a0 = 0x103a8
  5200: 7b 57 08 01              u64 [s0 + 0x108] = a0
  5204: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  5209: 49 25 28 01              u64 [s0 + 296] = 0
  5213: 95 18 48 32              a1 = sp + 0x3248
  5217: 7b 58 18 01              u64 [s0 + 0x118] = a1
  5221: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  5226: 95 17 88 33              a0 = sp + 0x3388
  5230: 95 18 08 32              a1 = sp + 0x3208
  5234: 50 10 7c 3c 26           ra = 124, jump @777
      :                          @256 [@dyn 62]
  5239: 95 17 00 31              a0 = sp + 0x3100
  5243: 82 75 90 02              s0 = u64 [a0 + 0x290]
  5247: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  5251: 82 76 88 02              s1 = u64 [a0 + 0x288]
  5255: 33 07 03                 a0 = 0x3
  5258: 33 08                    a1 = 0
  5260: 33 09                    a2 = 0
  5262: 64 5a                    a3 = s0
  5264: 33 00 7e                 ra = 0x7e
  5267: 0a 64                    ecalli 100 // 'log'
  5269: 01                       fallthrough
      :                          @257 [@dyn 63]
  5270: 82 17 78                 a0 = u64 [sp + 0x78]
  5273: c8 67 07                 a0 = a0 + s1
  5276: 53 27 00 f0 23           jump @263 if a0 <u 4294963200
      :                          @258
  5281: 33 07 40 00 03           a0 = 0x30040
  5286: 95 77 00 10              a0 = a0 + 0x1000
  5290: 01                       fallthrough
      :                          @259
  5291: 82 78                    a1 = u64 [a0]
  5293: c9 87 09                 a2 = a0 - a1
  5296: ab 59 0f                 jump @263 if a2 != s0
      :                          @260
  5299: c9 68 09                 a2 = a1 - s1
  5302: 01                       fallthrough
      :                          @261
  5303: 82 7a                    a3 = u64 [a0]
  5305: ab 8a f2                 jump @259 if a3 != a1
      :                          @262
  5308: 7b 79                    u64 [a0] = a2
  5310: 01                       fallthrough
      :                          @263
  5311: 95 15 a8 20              s0 = sp + 0x20a8
  5315: 82 57 48                 a0 = u64 [s0 + 0x48]
  5318: 0a 1a                    ecalli 26 // 'expunge'
  5320: 95 16 00 31              s1 = sp + 0x3100
  5324: 7b 67 78 02              u64 [s1 + 0x278] = a0
  5328: 0a                       ecalli 0 // 'gas'
  5329: 7b 57 40                 u64 [s0 + 0x40] = a0
  5332: 95 17 f0 20              a0 = sp + 0x20f0
  5336: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5340: 95 17 78 33              a0 = sp + 0x3378
  5344: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5348: 95 17 e8 20              a0 = sp + 0x20e8
  5352: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5356: 33 07 1a                 a0 = 0x1a
  5359: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5363: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5367: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5371: 33 07 f8 03 01           a0 = 0x103f8
  5376: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5380: 95 17 48 32              a0 = sp + 0x3248
  5384: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5388: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5393: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5398: 49 26 28 01              u64 [s1 + 296] = 0
  5402: 95 17 88 33              a0 = sp + 0x3388
  5406: 95 18 08 32              a1 = sp + 0x3208
  5410: 50 20 80 00 8c 25        ra = 128, jump @777
      :                          @264 [@dyn 64]
  5416: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5420: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5424: 82 66 88 02              s1 = u64 [s1 + 0x288]
  5428: 33 07 04                 a0 = 0x4
  5431: 33 08                    a1 = 0
  5433: 33 09                    a2 = 0
  5435: 64 5a                    a3 = s0
  5437: 33 00 82 00              ra = 0x82
  5441: 0a 64                    ecalli 100 // 'log'
  5443: 01                       fallthrough
      :                          @265 [@dyn 65]
  5444: 82 17 78                 a0 = u64 [sp + 0x78]
  5447: c8 67 07                 a0 = a0 + s1
  5450: 53 27 00 f0 2e           jump @271 if a0 <u 4294963200
      :                          @266
  5455: 33 07 40 00 03           a0 = 0x30040
  5460: 95 77 00 10              a0 = a0 + 0x1000
  5464: 01                       fallthrough
      :                          @267
  5465: 82 78                    a1 = u64 [a0]
  5467: c9 87 09                 a2 = a0 - a1
  5470: ab 59 1a                 jump @271 if a2 != s0
      :                          @268
  5473: c9 68 09                 a2 = a1 - s1
  5476: 01                       fallthrough
      :                          @269
  5477: 82 7a                    a3 = u64 [a0]
  5479: ab 8a f2                 jump @267 if a3 != a1
      :                          @270
  5482: 7b 79                    u64 [a0] = a2
  5484: 33 0b                    a4 = 0
  5486: 95 1a 48 33              a3 = sp + 0x3348
  5490: 33 08 0c                 a1 = 0xc
  5493: 28 da f0                 jump @110
      :                          @271
  5496: 95 1a 48 33              a3 = sp + 0x3348
  5500: 33 08 0c                 a1 = 0xc
  5503: 28 d0 f0                 jump @110
      :                          @272
  5506: 00                       trap
      :                          @273 [export #1: 'accumulate']
  5507: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5511: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5515: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5519: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5523: 95 11 b8 fb              sp = sp + 0xfffffffffffffbb8
  5527: 33 09 08                 a2 = 0x8
  5530: ac 98 22 01              jump @309 if a1 <u a2
      :                          @274
  5534: 52 07 06                 jump @276 if a0 != 0
      :                          @275
  5537: 28 30 22                 jump @708
      :                          @276
  5540: 95 79 04                 a2 = a0 + 0x4
  5543: 52 09 06                 jump @278 if a2 != 0
      :                          @277
  5546: 28 27 22                 jump @708
      :                          @278
  5549: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5552: 7b 19 28                 u64 [sp + 0x28] = a2
  5555: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5558: 7b 19 18                 u64 [sp + 0x18] = a2
  5561: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5564: 7b 19 20                 u64 [sp + 0x20] = a2
  5567: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5570: 7b 19 30                 u64 [sp + 0x30] = a2
  5573: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5576: 95 75 08                 s0 = a0 + 0x8
  5579: 51 0a 45                 jump @288 if a3 == 0
      :                          @279
  5582: 7d 58                    a1 = i8 [s0]
  5584: 33 06 01                 s1 = 0x1
  5587: 59 08 40                 jump @289 if a1 >=s 0
      :                          @280
  5590: 84 89 ff 00              a2 = a1 & 0xff
  5594: 33 06 02                 s1 = 0x2
  5597: 53 29 c0 00 2d           jump @286 if a2 <u 192
      :                          @281
  5602: 33 06 03                 s1 = 0x3
  5605: 53 29 e0 00 25           jump @286 if a2 <u 224
      :                          @282
  5610: 33 06 04                 s1 = 0x4
  5613: 53 29 f0 00 1d           jump @286 if a2 <u 240
      :                          @283
  5618: 33 06 05                 s1 = 0x5
  5621: 53 29 f8 00 15           jump @286 if a2 <u 248
      :                          @284
  5626: 33 06 06                 s1 = 0x6
  5629: 53 29 fc 00 0d           jump @286 if a2 <u 252
      :                          @285
  5634: 88 98 fe 00              a1 = a2 <u 0xfe
  5638: 9a 86 08                 s1 = 0x8 - a1
  5641: 01                       fallthrough
      :                          @286
  5642: ae 6a 09                 jump @289 if a3 >=u s1
      :                          @287
  5645: 28 af 00                 jump @309
      :                          @288
  5648: 33 06                    s1 = 0
  5650: 01                       fallthrough
      :                          @289
  5651: 7b 16 38                 u64 [sp + 0x38] = s1
  5654: 64 57                    a0 = s0
  5656: 64 68                    a1 = s1
  5658: 64 a6                    s1 = a3
  5660: 50 20 84 00 64 31        ra = 132, jump @1030
      :                          @290 [@dyn 66]
  5666: 82 1a 38                 a3 = u64 [sp + 0x38]
  5669: 51 07 97 00              jump @309 if a0 == 0
      :                          @291
  5673: e4 a6 07                 a0 = maxu(s1, a3)
  5676: c9 a7 07                 a0 = a0 - a3
  5679: 53 17 60 8d 00           jump @309 if a0 <u 96
      :                          @292
  5684: c8 5a 08                 a1 = a3 + s0
  5687: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5690: 95 87 60                 a0 = a1 + 0x60
  5693: 7b 17 38                 u64 [sp + 0x38] = a0
  5696: 51 06 4f                 jump @304 if s1 == 0
      :                          @293
  5699: 7d 78                    a1 = i8 [a0]
  5701: 33 05 01                 s0 = 0x1
  5704: 59 08 37                 jump @300 if a1 >=s 0
      :                          @294
  5707: 84 89 ff 00              a2 = a1 & 0xff
  5711: 33 05 02                 s0 = 0x2
  5714: 53 29 c0 00 2d           jump @300 if a2 <u 192
      :                          @295
  5719: 33 05 03                 s0 = 0x3
  5722: 53 29 e0 00 25           jump @300 if a2 <u 224
      :                          @296
  5727: 33 05 04                 s0 = 0x4
  5730: 53 29 f0 00 1d           jump @300 if a2 <u 240
      :                          @297
  5735: 33 05 05                 s0 = 0x5
  5738: 53 29 f8 00 15           jump @300 if a2 <u 248
      :                          @298
  5743: 33 05 06                 s0 = 0x6
  5746: 53 29 fc 00 0d           jump @300 if a2 <u 252
      :                          @299
  5751: 88 98 fe 00              a1 = a2 <u 0xfe
  5755: 9a 85 08                 s0 = 0x8 - a1
  5758: 01                       fallthrough
      :                          @300
  5759: ae 56 06                 jump @302 if s1 >=u s0
      :                          @301
  5762: 28 50 21                 jump @709
      :                          @302
  5765: 64 58                    a1 = s0
  5767: 50 20 86 00 f9 30        ra = 134, jump @1030
      :                          @303 [@dyn 67]
  5773: 28 07                    jump @305
      :                          @304
  5775: 33 05                    s0 = 0
  5777: 33 07                    a0 = 0
  5779: 01                       fallthrough
      :                          @305
  5780: e4 56 08                 a1 = maxu(s1, s0)
  5783: c9 58 08                 a1 = a1 - s0
  5786: e4 78 08                 a1 = maxu(a1, a0)
  5789: c9 78 08                 a1 = a1 - a0
  5792: 33 09 20                 a2 = 0x20
  5795: ac 98 19                 jump @309 if a1 <u a2
      :                          @306
  5798: 82 19 38                 a2 = u64 [sp + 0x38]
  5801: c8 95 05                 s0 = s0 + a2
  5804: c8 57 07                 a0 = a0 + s0
  5807: 52 17 e0 07              jump @308 if a0 != 4294967264
      :                          @307
  5811: 28 1e 21                 jump @708
      :                          @308
  5814: 33 09 29                 a2 = 0x29
  5817: ae 98 21                 jump @311 if a1 >=u a2
      :                          @309
  5820: 33 08                    a1 = 0
  5822: 33 07 00 00 01           a0 = 0x10000
  5827: 01                       fallthrough
      :                          @310
  5828: 95 11 48 04              sp = sp + 0x448
  5832: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  5836: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  5840: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  5844: 95 11 f8 07              sp = sp + 0x7f8
  5848: 32 00                    ret
      :                          @311
  5850: 7c 79 28                 a2 = u8 [a0 + 0x28]
  5853: 51 09 0a                 jump @313 if a2 == 0
      :                          @312
  5856: 33 06                    s1 = 0
  5858: 33 0a                    a3 = 0
  5860: 28 86 00                 jump @328
      :                          @313
  5863: 95 8a d7                 a3 = a1 + 0xffffffffffffffd7
  5866: 95 75 29                 s0 = a0 + 0x29
  5869: 51 0a 57                 jump @325 if a3 == 0
      :                          @314
  5872: 7d 57                    a0 = i8 [s0]
  5874: 33 06 01                 s1 = 0x1
  5877: 59 07 37                 jump @321 if a0 >=s 0
      :                          @315
  5880: 84 77 ff 00              a0 = a0 & 0xff
  5884: 33 06 02                 s1 = 0x2
  5887: 53 27 c0 00 2d           jump @321 if a0 <u 192
      :                          @316
  5892: 33 06 03                 s1 = 0x3
  5895: 53 27 e0 00 25           jump @321 if a0 <u 224
      :                          @317
  5900: 33 06 04                 s1 = 0x4
  5903: 53 27 f0 00 1d           jump @321 if a0 <u 240
      :                          @318
  5908: 33 06 05                 s1 = 0x5
  5911: 53 27 f8 00 15           jump @321 if a0 <u 248
      :                          @319
  5916: 33 06 06                 s1 = 0x6
  5919: 53 27 fc 00 0d           jump @321 if a0 <u 252
      :                          @320
  5924: 88 77 fe 00              a0 = a0 <u 0xfe
  5928: 9a 76 08                 s1 = 0x8 - a0
  5931: 01                       fallthrough
      :                          @321
  5932: 7b 1a 38                 u64 [sp + 0x38] = a3
  5935: ae 6a 06                 jump @323 if a3 >=u s1
      :                          @322
  5938: 28 a2 20                 jump @711
      :                          @323
  5941: 64 57                    a0 = s0
  5943: 64 68                    a1 = s1
  5945: 50 20 88 00 47 30        ra = 136, jump @1030
      :                          @324 [@dyn 68]
  5951: 82 1a 38                 a3 = u64 [sp + 0x38]
  5954: 28 07                    jump @326
      :                          @325
  5956: 33 06                    s1 = 0
  5958: 33 07                    a0 = 0
  5960: 01                       fallthrough
      :                          @326
  5961: e4 6a 08                 a1 = maxu(a3, s1)
  5964: c9 68 08                 a1 = a1 - s1
  5967: e6 78 0a                 a3 = minu(a1, a0)
  5970: c8 56 06                 s1 = s1 + s0
  5973: 52 1a 24 15              jump @328 if a3 != 36
      :                          @327
  5977: 80 68 20                 a1 = u32 [s1 + 0x20]
  5980: 64 67                    a0 = s1
  5982: 0a 0e                    ecalli 14 // 'solicit'
  5984: 33 08                    a1 = 0
  5986: 33 07 00 00 01           a0 = 0x10000
  5991: 28 5d ff                 jump @310
      :                          @328
  5994: 82 17 18                 a0 = u64 [sp + 0x18]
  5997: 97 77 08                 a0 = a0 << 0x8
  6000: 82 18 28                 a1 = u64 [sp + 0x28]
  6003: d4 87 07                 a0 = a0 | a1
  6006: 82 18 20                 a1 = u64 [sp + 0x20]
  6009: 97 88 10                 a1 = a1 << 0x10
  6012: 46 11 47                 u8 [sp + 71] = 0
  6015: 80 69                    a2 = u32 [s1]
  6017: 82 1b 30                 a4 = u64 [sp + 0x30]
  6020: 97 bb 18                 a4 = a4 << 0x18
  6023: d4 b8 08                 a1 = a1 | a4
  6026: d4 87 07                 a0 = a0 | a1
  6029: 7b 17 30                 u64 [sp + 0x30] = a0
  6032: 7b 19 48                 u64 [sp + 0x48] = a2
  6035: 95 17 47                 a0 = sp + 0x47
  6038: 33 08 01                 a1 = 0x1
  6041: 7b 16 18                 u64 [sp + 0x18] = s1
  6044: 64 69                    a2 = s1
  6046: 7b 1a 28                 u64 [sp + 0x28] = a3
  6049: 0a 03                    ecalli 3 // 'write'
  6051: 46 11 52 6a              u8 [sp + 82] = 0x6a
  6055: 46 11 53 61              u8 [sp + 83] = 0x61
  6059: 46 11 54 6d              u8 [sp + 84] = 0x6d
  6063: 46 11 55 44              u8 [sp + 85] = 0x44
  6067: 46 11 56 4f              u8 [sp + 86] = 0x4f
  6071: 46 11 57 54              u8 [sp + 87] = 0x54
  6075: 46 11 58 6a              u8 [sp + 88] = 0x6a
  6079: 46 11 59 0d              u8 [sp + 89] = 0xd
  6083: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  6087: 46 11 5b 19              u8 [sp + 91] = 0x19
  6091: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  6096: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  6101: 46 11 5e 50              u8 [sp + 94] = 0x50
  6105: 46 11 5f 57              u8 [sp + 95] = 0x57
  6109: 46 11 60 13              u8 [sp + 96] = 0x13
  6113: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  6118: 46 11 62 65              u8 [sp + 98] = 0x65
  6122: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  6127: 46 11 64 31              u8 [sp + 100] = 0x31
  6131: 46 11 65 03              u8 [sp + 101] = 0x3
  6135: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  6140: 46 11 67 73              u8 [sp + 103] = 0x73
  6144: 33 0b f1 00              a4 = 0xf1
  6148: 78 1b 68                 u8 [sp + 0x68] = a4
  6151: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6156: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6161: 46 11 6b 64              u8 [sp + 107] = 0x64
  6165: 46 11 6c 56              u8 [sp + 108] = 0x56
  6169: 46 11 6d 32              u8 [sp + 109] = 0x32
  6173: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6178: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6183: 46 11 70 50              u8 [sp + 112] = 0x50
  6187: 33 0c 3c                 a5 = 0x3c
  6190: 78 1c 71                 u8 [sp + 0x71] = a5
  6193: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6197: 46 11 73 0c              u8 [sp + 115] = 0xc
  6201: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6205: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6209: 46 11 76 19              u8 [sp + 118] = 0x19
  6213: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6218: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6223: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6228: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6233: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6237: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6242: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6247: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6252: 46 11 7f 47              u8 [sp + 127] = 0x47
  6256: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6262: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6267: 78 1c 82 00              u8 [sp + 0x82] = a5
  6271: 78 1b 83 00              u8 [sp + 0x83] = a4
  6275: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6281: 95 16 ff 07              s1 = sp + 0x7ff
  6285: 95 66 a1 03              s1 = s1 + 0x3a1
  6289: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6294: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6299: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6305: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6311: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6317: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6323: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6329: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6335: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6340: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6345: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6350: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6356: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6362: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6367: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6372: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6378: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6384: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6389: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6394: 49 11 38 ff ef           u64 [sp + 56] = 0xffffffffffffefff
  6399: 95 17 98 00              a0 = sp + 0x98
  6403: 33 09 00 01              a2 = 0x100
  6407: 33 08                    a1 = 0
  6409: 50 20 8a 00 ce 24        ra = 138, jump @844
      :                          @329 [@dyn 69]
  6415: 82 17 48                 a0 = u64 [sp + 0x48]
  6418: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6421: 54 17 09 07              jump @331 if a0 <=u 9
      :                          @330
  6425: 28 32 1c                 jump @673
      :                          @331
  6428: 97 77 02                 a0 = a0 << 0x2
  6431: 33 08 00 00 01           a1 = 0x10000
  6436: c8 87 07                 a0 = a0 + a1
  6439: 81 77                    a0 = i32 [a0]
  6441: 32 07                    jump [a0]
      :                          @332 [@dyn 70]
  6443: 95 18 52                 a1 = sp + 0x52
  6446: 33 09 03                 a2 = 0x3
  6449: 95 1a 98 00              a3 = sp + 0x98
  6453: 33 0c 00 01              a5 = 0x100
  6457: 82 17 30                 a0 = u64 [sp + 0x30]
  6460: 33 0b                    a4 = 0
  6462: 0a 02                    ecalli 2 // 'read'
  6464: 7b 67 70                 u64 [s1 + 0x70] = a0
  6467: 95 77 01                 a0 = a0 + 0x1
  6470: 88 77 01                 a0 = a0 <u 0x1
  6473: 97 77 01                 a0 = a0 << 0x1
  6476: 7b 17 10                 u64 [sp + 0x10] = a0
  6479: 95 17 48                 a0 = sp + 0x48
  6482: 7b 67 18                 u64 [s1 + 0x18] = a0
  6485: 33 09 1a                 a2 = 0x1a
  6488: 7b 69 20                 u64 [s1 + 0x20] = a2
  6491: 95 17 ff 07              a0 = sp + 0x7ff
  6495: 95 77 11 04              a0 = a0 + 0x411
  6499: 7b 67 28                 u64 [s1 + 0x28] = a0
  6502: 7b 19 20                 u64 [sp + 0x20] = a2
  6505: 7b 69 30                 u64 [s1 + 0x30] = a2
  6508: 33 07 d0 05 01           a0 = 0x105d0
  6513: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6517: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6522: 49 21 c0 01              u64 [sp + 448] = 0
  6526: 95 17 ff 07              a0 = sp + 0x7ff
  6530: 95 77 b9 03              a0 = a0 + 0x3b9
  6534: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  6538: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6543: 95 17 ff 07              a0 = sp + 0x7ff
  6547: 95 77 e9 03              a0 = a0 + 0x3e9
  6551: 95 18 a0 01              a1 = sp + 0x1a0
  6555: 50 20 8e 00 13 21        ra = 142, jump @777
      :                          @333 [@dyn 71]
  6561: 95 17 ff 07              a0 = sp + 0x7ff
  6565: 95 77 a1 03              a0 = a0 + 0x3a1
  6569: 82 76 50                 s1 = u64 [a0 + 0x50]
  6572: 82 7b 58                 a4 = u64 [a0 + 0x58]
  6575: 82 75 48                 s0 = u64 [a0 + 0x48]
  6578: 82 17 10                 a0 = u64 [sp + 0x10]
  6581: 33 08                    a1 = 0
  6583: 33 09                    a2 = 0
  6585: 64 6a                    a3 = s1
  6587: 33 00 90 00              ra = 0x90
  6591: 0a 64                    ecalli 100 // 'log'
  6593: 01                       fallthrough
      :                          @334 [@dyn 72]
  6594: 82 17 38                 a0 = u64 [sp + 0x38]
  6597: c8 57 07                 a0 = a0 + s0
  6600: 53 27 00 f0 23           jump @340 if a0 <u 4294963200
      :                          @335
  6605: 33 07 40 00 03           a0 = 0x30040
  6610: 95 77 00 10              a0 = a0 + 0x1000
  6614: 01                       fallthrough
      :                          @336
  6615: 82 78                    a1 = u64 [a0]
  6617: c9 87 09                 a2 = a0 - a1
  6620: ab 69 0f                 jump @340 if a2 != s1
      :                          @337
  6623: c9 58 09                 a2 = a1 - s0
  6626: 01                       fallthrough
      :                          @338
  6627: 82 7a                    a3 = u64 [a0]
  6629: ab 8a f2                 jump @336 if a3 != a1
      :                          @339
  6632: 7b 79                    u64 [a0] = a2
  6634: 01                       fallthrough
      :                          @340
  6635: 95 16 ff 07              s1 = sp + 0x7ff
  6639: 95 66 a1 03              s1 = s1 + 0x3a1
  6643: 82 67 70                 a0 = u64 [s1 + 0x70]
  6646: 33 08 01                 a1 = 0x1
  6649: 50 20 92 00 25 2e        ra = 146, jump @1054
      :                          @341 [@dyn 73]
  6655: 95 17 52                 a0 = sp + 0x52
  6658: 33 08 03                 a1 = 0x3
  6661: 95 19 55                 a2 = sp + 0x55
  6664: 33 0a 03                 a3 = 0x3
  6667: 0a 03                    ecalli 3 // 'write'
  6669: 95 18 48                 a1 = sp + 0x48
  6672: 7b 68 18                 u64 [s1 + 0x18] = a1
  6675: 95 18 ff 07              a1 = sp + 0x7ff
  6679: 95 88 19 04              a1 = a1 + 0x419
  6683: 7b 68 28                 u64 [s1 + 0x28] = a1
  6686: 82 18 20                 a1 = u64 [sp + 0x20]
  6689: 7b 68 20                 u64 [s1 + 0x20] = a1
  6692: 7b 68 30                 u64 [s1 + 0x30] = a1
  6695: 33 08 18 06 01           a1 = 0x10618
  6700: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  6704: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6709: 49 21 c0 01              u64 [sp + 448] = 0
  6713: 95 18 ff 07              a1 = sp + 0x7ff
  6717: 95 88 b9 03              a1 = a1 + 0x3b9
  6721: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  6725: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6730: 7b 67 78                 u64 [s1 + 0x78] = a0
  6733: 95 77 01                 a0 = a0 + 0x1
  6736: 88 77 01                 a0 = a0 <u 0x1
  6739: 97 77 01                 a0 = a0 << 0x1
  6742: 7b 17 20                 u64 [sp + 0x20] = a0
  6745: 95 17 ff 07              a0 = sp + 0x7ff
  6749: 95 77 e9 03              a0 = a0 + 0x3e9
  6753: 95 18 a0 01              a1 = sp + 0x1a0
  6757: 50 20 94 00 49 20        ra = 148, jump @777
      :                          @342 [@dyn 74]
  6763: 82 65 50                 s0 = u64 [s1 + 0x50]
  6766: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6769: 82 66 48                 s1 = u64 [s1 + 0x48]
  6772: 82 17 20                 a0 = u64 [sp + 0x20]
  6775: 33 08                    a1 = 0
  6777: 33 09                    a2 = 0
  6779: 64 5a                    a3 = s0
  6781: 33 00 96 00              ra = 0x96
  6785: 0a 64                    ecalli 100 // 'log'
  6787: 01                       fallthrough
      :                          @343 [@dyn 75]
  6788: 82 17 38                 a0 = u64 [sp + 0x38]
  6791: c8 67 07                 a0 = a0 + s1
  6794: 53 27 00 f0 23           jump @349 if a0 <u 4294963200
      :                          @344
  6799: 33 07 40 00 03           a0 = 0x30040
  6804: 95 77 00 10              a0 = a0 + 0x1000
  6808: 01                       fallthrough
      :                          @345
  6809: 82 78                    a1 = u64 [a0]
  6811: c9 87 09                 a2 = a0 - a1
  6814: ab 59 0f                 jump @349 if a2 != s0
      :                          @346
  6817: c9 68 09                 a2 = a1 - s1
  6820: 01                       fallthrough
      :                          @347
  6821: 82 7a                    a3 = u64 [a0]
  6823: ab 8a f2                 jump @345 if a3 != a1
      :                          @348
  6826: 7b 79                    u64 [a0] = a2
  6828: 01                       fallthrough
      :                          @349
  6829: 95 15 ff 07              s0 = sp + 0x7ff
  6833: 95 55 a1 03              s0 = s0 + 0x3a1
  6837: 82 57 78                 a0 = u64 [s0 + 0x78]
  6840: 33 08 02                 a1 = 0x2
  6843: 33 06 02                 s1 = 0x2
  6846: 50 20 98 00 60 2d        ra = 152, jump @1054
      :                          @350 [@dyn 76]
  6852: 95 18 52                 a1 = sp + 0x52
  6855: 33 09 03                 a2 = 0x3
  6858: 95 1a 98 00              a3 = sp + 0x98
  6862: 33 0c 00 01              a5 = 0x100
  6866: 82 17 30                 a0 = u64 [sp + 0x30]
  6869: 33 0b                    a4 = 0
  6871: 0a 02                    ecalli 2 // 'read'
  6873: 7b 57 80 00              u64 [s0 + 0x80] = a0
  6877: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  6880: 88 77 01                 a0 = a0 <u 0x1
  6883: 97 77 01                 a0 = a0 << 0x1
  6886: 7b 17 10                 u64 [sp + 0x10] = a0
  6889: 95 17 48                 a0 = sp + 0x48
  6892: 7b 57 18                 u64 [s0 + 0x18] = a0
  6895: 33 09 1a                 a2 = 0x1a
  6898: 7b 59 20                 u64 [s0 + 0x20] = a2
  6901: 95 17 ff 07              a0 = sp + 0x7ff
  6905: 95 77 21 04              a0 = a0 + 0x421
  6909: 7b 57 28                 u64 [s0 + 0x28] = a0
  6912: 7b 19 20                 u64 [sp + 0x20] = a2
  6915: 7b 59 30                 u64 [s0 + 0x30] = a2
  6918: 33 07 60 06 01           a0 = 0x10660
  6923: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6927: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6932: 49 21 c0 01              u64 [sp + 448] = 0
  6936: 95 17 ff 07              a0 = sp + 0x7ff
  6940: 95 77 b9 03              a0 = a0 + 0x3b9
  6944: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  6948: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  6952: 95 17 ff 07              a0 = sp + 0x7ff
  6956: 95 77 e9 03              a0 = a0 + 0x3e9
  6960: 95 18 a0 01              a1 = sp + 0x1a0
  6964: 50 20 9a 00 7a 1f        ra = 154, jump @777
      :                          @351 [@dyn 77]
  6970: 82 56 50                 s1 = u64 [s0 + 0x50]
  6973: 82 5b 58                 a4 = u64 [s0 + 0x58]
  6976: 82 55 48                 s0 = u64 [s0 + 0x48]
  6979: 82 17 10                 a0 = u64 [sp + 0x10]
  6982: 33 08                    a1 = 0
  6984: 33 09                    a2 = 0
  6986: 64 6a                    a3 = s1
  6988: 33 00 9c 00              ra = 0x9c
  6992: 0a 64                    ecalli 100 // 'log'
  6994: 01                       fallthrough
      :                          @352 [@dyn 78]
  6995: 82 17 38                 a0 = u64 [sp + 0x38]
  6998: c8 57 07                 a0 = a0 + s0
  7001: 53 27 00 f0 23           jump @358 if a0 <u 4294963200
      :                          @353
  7006: 33 07 40 00 03           a0 = 0x30040
  7011: 95 77 00 10              a0 = a0 + 0x1000
  7015: 01                       fallthrough
      :                          @354
  7016: 82 78                    a1 = u64 [a0]
  7018: c9 87 09                 a2 = a0 - a1
  7021: ab 69 0f                 jump @358 if a2 != s1
      :                          @355
  7024: c9 58 09                 a2 = a1 - s0
  7027: 01                       fallthrough
      :                          @356
  7028: 82 7a                    a3 = u64 [a0]
  7030: ab 8a f2                 jump @354 if a3 != a1
      :                          @357
  7033: 7b 79                    u64 [a0] = a2
  7035: 01                       fallthrough
      :                          @358
  7036: 95 16 ff 07              s1 = sp + 0x7ff
  7040: 95 66 a1 03              s1 = s1 + 0x3a1
  7044: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7048: 33 08 05                 a1 = 0x5
  7051: 50 20 9e 00 93 2c        ra = 158, jump @1054
      :                          @359 [@dyn 79]
  7057: 95 17 52                 a0 = sp + 0x52
  7060: 33 08                    a1 = 0
  7062: 0a 0f                    ecalli 15 // 'forget'
  7064: 95 18 48                 a1 = sp + 0x48
  7067: 7b 68 18                 u64 [s1 + 0x18] = a1
  7070: 82 18 20                 a1 = u64 [sp + 0x20]
  7073: 7b 68 20                 u64 [s1 + 0x20] = a1
  7076: 7b 68 30                 u64 [s1 + 0x30] = a1
  7079: 33 08 c8 06 01           a1 = 0x106c8
  7084: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7088: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7093: 49 21 c0 01              u64 [sp + 448] = 0
  7097: 95 18 ff 07              a1 = sp + 0x7ff
  7101: 95 88 b9 03              a1 = a1 + 0x3b9
  7105: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7109: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7114: 7b 67                    u64 [s1] = a0
  7116: 95 77 09                 a0 = a0 + 0x9
  7119: 88 77 01                 a0 = a0 <u 0x1
  7122: 97 77 01                 a0 = a0 << 0x1
  7125: 7b 17 20                 u64 [sp + 0x20] = a0
  7128: 7b 66 28                 u64 [s1 + 0x28] = s1
  7131: 95 17 ff 07              a0 = sp + 0x7ff
  7135: 95 77 e9 03              a0 = a0 + 0x3e9
  7139: 95 18 a0 01              a1 = sp + 0x1a0
  7143: 50 20 a0 00 c7 1e        ra = 160, jump @777
      :                          @360 [@dyn 80]
  7149: 82 65 50                 s0 = u64 [s1 + 0x50]
  7152: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7155: 82 66 48                 s1 = u64 [s1 + 0x48]
  7158: 82 17 20                 a0 = u64 [sp + 0x20]
  7161: 33 08                    a1 = 0
  7163: 33 09                    a2 = 0
  7165: 64 5a                    a3 = s0
  7167: 33 00 a2 00              ra = 0xa2
  7171: 0a 64                    ecalli 100 // 'log'
  7173: 01                       fallthrough
      :                          @361 [@dyn 81]
  7174: 82 17 38                 a0 = u64 [sp + 0x38]
  7177: c8 67 07                 a0 = a0 + s1
  7180: 53 27 00 f0 23           jump @367 if a0 <u 4294963200
      :                          @362
  7185: 33 07 40 00 03           a0 = 0x30040
  7190: 95 77 00 10              a0 = a0 + 0x1000
  7194: 01                       fallthrough
      :                          @363
  7195: 82 78                    a1 = u64 [a0]
  7197: c9 87 09                 a2 = a0 - a1
  7200: ab 59 0f                 jump @367 if a2 != s0
      :                          @364
  7203: c9 68 09                 a2 = a1 - s1
  7206: 01                       fallthrough
      :                          @365
  7207: 82 7a                    a3 = u64 [a0]
  7209: ab 8a f2                 jump @363 if a3 != a1
      :                          @366
  7212: 7b 79                    u64 [a0] = a2
  7214: 01                       fallthrough
      :                          @367
  7215: 95 16 ff 07              s1 = sp + 0x7ff
  7219: 95 66 a1 03              s1 = s1 + 0x3a1
  7223: 82 67                    a0 = u64 [s1]
  7225: 33 08 06                 a1 = 0x6
  7228: 33 00 70 01              ra = 0x170
  7232: 28 de 2b                 jump @1054
      :                          @368 [@dyn 82]
  7235: 95 18 52                 a1 = sp + 0x52
  7238: 33 09 03                 a2 = 0x3
  7241: 95 1a 98 00              a3 = sp + 0x98
  7245: 33 0c 00 01              a5 = 0x100
  7249: 82 17 30                 a0 = u64 [sp + 0x30]
  7252: 33 0b                    a4 = 0
  7254: 0a 02                    ecalli 2 // 'read'
  7256: 7b 67 78                 u64 [s1 + 0x78] = a0
  7259: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7262: 88 77 01                 a0 = a0 <u 0x1
  7265: 97 77 01                 a0 = a0 << 0x1
  7268: 7b 17 10                 u64 [sp + 0x10] = a0
  7271: 95 17 48                 a0 = sp + 0x48
  7274: 7b 67 18                 u64 [s1 + 0x18] = a0
  7277: 33 09 1a                 a2 = 0x1a
  7280: 7b 69 20                 u64 [s1 + 0x20] = a2
  7283: 95 17 ff 07              a0 = sp + 0x7ff
  7287: 95 77 19 04              a0 = a0 + 0x419
  7291: 7b 67 28                 u64 [s1 + 0x28] = a0
  7294: 7b 19 20                 u64 [sp + 0x20] = a2
  7297: 7b 69 30                 u64 [s1 + 0x30] = a2
  7300: 33 07 08 07 01           a0 = 0x10708
  7305: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7309: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7314: 49 21 c0 01              u64 [sp + 448] = 0
  7318: 95 17 ff 07              a0 = sp + 0x7ff
  7322: 95 77 b9 03              a0 = a0 + 0x3b9
  7326: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7330: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7335: 95 17 ff 07              a0 = sp + 0x7ff
  7339: 95 77 e9 03              a0 = a0 + 0x3e9
  7343: 95 18 a0 01              a1 = sp + 0x1a0
  7347: 50 20 a6 00 fb 1d        ra = 166, jump @777
      :                          @369 [@dyn 83]
  7353: 95 17 ff 07              a0 = sp + 0x7ff
  7357: 95 77 a1 03              a0 = a0 + 0x3a1
  7361: 82 76 50                 s1 = u64 [a0 + 0x50]
  7364: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7367: 82 75 48                 s0 = u64 [a0 + 0x48]
  7370: 82 17 10                 a0 = u64 [sp + 0x10]
  7373: 33 08                    a1 = 0
  7375: 33 09                    a2 = 0
  7377: 64 6a                    a3 = s1
  7379: 33 00 a8 00              ra = 0xa8
  7383: 0a 64                    ecalli 100 // 'log'
  7385: 01                       fallthrough
      :                          @370 [@dyn 84]
  7386: 82 17 38                 a0 = u64 [sp + 0x38]
  7389: c8 57 07                 a0 = a0 + s0
  7392: 53 27 00 f0 23           jump @376 if a0 <u 4294963200
      :                          @371
  7397: 33 07 40 00 03           a0 = 0x30040
  7402: 95 77 00 10              a0 = a0 + 0x1000
  7406: 01                       fallthrough
      :                          @372
  7407: 82 78                    a1 = u64 [a0]
  7409: c9 87 09                 a2 = a0 - a1
  7412: ab 69 0f                 jump @376 if a2 != s1
      :                          @373
  7415: c9 58 09                 a2 = a1 - s0
  7418: 01                       fallthrough
      :                          @374
  7419: 82 7a                    a3 = u64 [a0]
  7421: ab 8a f2                 jump @372 if a3 != a1
      :                          @375
  7424: 7b 79                    u64 [a0] = a2
  7426: 01                       fallthrough
      :                          @376
  7427: 95 16 ff 07              s1 = sp + 0x7ff
  7431: 95 66 a1 03              s1 = s1 + 0x3a1
  7435: 82 67 78                 a0 = u64 [s1 + 0x78]
  7438: 33 08 01                 a1 = 0x1
  7441: 50 20 aa 00 0d 2b        ra = 170, jump @1054
      :                          @377 [@dyn 85]
  7447: 95 17 52                 a0 = sp + 0x52
  7450: 33 08 03                 a1 = 0x3
  7453: 33 09                    a2 = 0
  7455: 33 0a                    a3 = 0
  7457: 0a 03                    ecalli 3 // 'write'
  7459: 95 18 48                 a1 = sp + 0x48
  7462: 7b 68 18                 u64 [s1 + 0x18] = a1
  7465: 95 18 ff 07              a1 = sp + 0x7ff
  7469: 95 88 21 04              a1 = a1 + 0x421
  7473: 7b 68 28                 u64 [s1 + 0x28] = a1
  7476: 82 18 20                 a1 = u64 [sp + 0x20]
  7479: 7b 68 20                 u64 [s1 + 0x20] = a1
  7482: 7b 68 30                 u64 [s1 + 0x30] = a1
  7485: 33 08 68 07 01           a1 = 0x10768
  7490: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7494: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7499: 49 21 c0 01              u64 [sp + 448] = 0
  7503: 95 18 ff 07              a1 = sp + 0x7ff
  7507: 95 88 b9 03              a1 = a1 + 0x3b9
  7511: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7515: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7520: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7524: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7527: 88 77 01                 a0 = a0 <u 0x1
  7530: 97 77 01                 a0 = a0 << 0x1
  7533: 7b 17 20                 u64 [sp + 0x20] = a0
  7536: 95 17 ff 07              a0 = sp + 0x7ff
  7540: 95 77 e9 03              a0 = a0 + 0x3e9
  7544: 95 18 a0 01              a1 = sp + 0x1a0
  7548: 50 20 ac 00 32 1d        ra = 172, jump @777
      :                          @378 [@dyn 86]
  7554: 82 65 50                 s0 = u64 [s1 + 0x50]
  7557: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7560: 82 66 48                 s1 = u64 [s1 + 0x48]
  7563: 82 17 20                 a0 = u64 [sp + 0x20]
  7566: 33 08                    a1 = 0
  7568: 33 09                    a2 = 0
  7570: 64 5a                    a3 = s0
  7572: 33 00 ae 00              ra = 0xae
  7576: 0a 64                    ecalli 100 // 'log'
  7578: 01                       fallthrough
      :                          @379 [@dyn 87]
  7579: 82 17 38                 a0 = u64 [sp + 0x38]
  7582: c8 67 07                 a0 = a0 + s1
  7585: 53 27 00 f0 23           jump @385 if a0 <u 4294963200
      :                          @380
  7590: 33 07 40 00 03           a0 = 0x30040
  7595: 95 77 00 10              a0 = a0 + 0x1000
  7599: 01                       fallthrough
      :                          @381
  7600: 82 78                    a1 = u64 [a0]
  7602: c9 87 09                 a2 = a0 - a1
  7605: ab 59 0f                 jump @385 if a2 != s0
      :                          @382
  7608: c9 68 09                 a2 = a1 - s1
  7611: 01                       fallthrough
      :                          @383
  7612: 82 7a                    a3 = u64 [a0]
  7614: ab 8a f2                 jump @381 if a3 != a1
      :                          @384
  7617: 7b 79                    u64 [a0] = a2
  7619: 01                       fallthrough
      :                          @385
  7620: 95 16 ff 07              s1 = sp + 0x7ff
  7624: 95 66 a1 03              s1 = s1 + 0x3a1
  7628: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7632: 33 08 02                 a1 = 0x2
  7635: 33 05 02                 s0 = 0x2
  7638: 50 20 b0 00 48 2a        ra = 176, jump @1054
      :                          @386 [@dyn 88]
  7644: 95 18 52                 a1 = sp + 0x52
  7647: 33 09 03                 a2 = 0x3
  7650: 95 1a 98 00              a3 = sp + 0x98
  7654: 33 0c 00 01              a5 = 0x100
  7658: 82 17 30                 a0 = u64 [sp + 0x30]
  7661: 33 0b                    a4 = 0
  7663: 0a 02                    ecalli 2 // 'read'
  7665: 95 18 48                 a1 = sp + 0x48
  7668: 7b 68 18                 u64 [s1 + 0x18] = a1
  7671: 33 08 1a                 a1 = 0x1a
  7674: 7b 68 20                 u64 [s1 + 0x20] = a1
  7677: 7b 68 30                 u64 [s1 + 0x30] = a1
  7680: 33 08 98 07 01           a1 = 0x10798
  7685: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7689: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7694: 49 21 c0 01              u64 [sp + 448] = 0
  7698: 95 18 ff 07              a1 = sp + 0x7ff
  7702: 95 88 b9 03              a1 = a1 + 0x3b9
  7706: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7710: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  7714: 7b 67                    u64 [s1] = a0
  7716: 95 77 01                 a0 = a0 + 0x1
  7719: 88 77 01                 a0 = a0 <u 0x1
  7722: 97 77 01                 a0 = a0 << 0x1
  7725: 7b 17 20                 u64 [sp + 0x20] = a0
  7728: 7b 66 28                 u64 [s1 + 0x28] = s1
  7731: 95 17 ff 07              a0 = sp + 0x7ff
  7735: 95 77 e9 03              a0 = a0 + 0x3e9
  7739: 95 18 a0 01              a1 = sp + 0x1a0
  7743: 50 20 b2 00 6f 1c        ra = 178, jump @777
      :                          @387 [@dyn 89]
  7749: 82 65 50                 s0 = u64 [s1 + 0x50]
  7752: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7755: 82 66 48                 s1 = u64 [s1 + 0x48]
  7758: 82 17 20                 a0 = u64 [sp + 0x20]
  7761: 33 08                    a1 = 0
  7763: 33 09                    a2 = 0
  7765: 64 5a                    a3 = s0
  7767: 33 00 b4 00              ra = 0xb4
  7771: 0a 64                    ecalli 100 // 'log'
  7773: 01                       fallthrough
      :                          @388 [@dyn 90]
  7774: 82 17 38                 a0 = u64 [sp + 0x38]
  7777: c8 67 07                 a0 = a0 + s1
  7780: 53 27 00 f0 4f 02        jump @422 if a0 <u 4294963200
      :                          @389
  7786: 33 07 40 00 03           a0 = 0x30040
  7791: 95 77 00 10              a0 = a0 + 0x1000
  7795: 01                       fallthrough
      :                          @390
  7796: 82 78                    a1 = u64 [a0]
  7798: c9 87 09                 a2 = a0 - a1
  7801: ab 59 3a 02              jump @422 if a2 != s0
      :                          @391
  7805: c9 68 09                 a2 = a1 - s1
  7808: 01                       fallthrough
      :                          @392
  7809: 82 7a                    a3 = u64 [a0]
  7811: ab 8a f1                 jump @390 if a3 != a1
      :                          @393
  7814: 7b 79                    u64 [a0] = a2
  7816: 33 0b                    a4 = 0
  7818: 01                       fallthrough
      :                          @394
  7819: ab 8a e9                 jump @390 if a3 != a1
      :                          @395
  7822: 28 25 02                 jump @422
      :                          @396 [@dyn 91]
  7825: 33 05 03                 s0 = 0x3
  7828: 95 17 58                 a0 = sp + 0x58
  7831: 33 08 03                 a1 = 0x3
  7834: 0a 0e                    ecalli 14 // 'solicit'
  7836: 7b 67 78                 u64 [s1 + 0x78] = a0
  7839: 88 77 01                 a0 = a0 <u 0x1
  7842: 97 77 01                 a0 = a0 << 0x1
  7845: 7b 17 10                 u64 [sp + 0x10] = a0
  7848: 95 17 48                 a0 = sp + 0x48
  7851: 7b 67 18                 u64 [s1 + 0x18] = a0
  7854: 33 08 1a                 a1 = 0x1a
  7857: 7b 68 20                 u64 [s1 + 0x20] = a1
  7860: 95 17 ff 07              a0 = sp + 0x7ff
  7864: 95 77 19 04              a0 = a0 + 0x419
  7868: 7b 67 28                 u64 [s1 + 0x28] = a0
  7871: 7b 18 20                 u64 [sp + 0x20] = a1
  7874: 7b 68 30                 u64 [s1 + 0x30] = a1
  7877: 33 07 f0 07 01           a0 = 0x107f0
  7882: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7886: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  7890: 49 21 c0 01              u64 [sp + 448] = 0
  7894: 95 17 ff 07              a0 = sp + 0x7ff
  7898: 95 77 b9 03              a0 = a0 + 0x3b9
  7902: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7906: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7911: 95 17 ff 07              a0 = sp + 0x7ff
  7915: 95 77 e9 03              a0 = a0 + 0x3e9
  7919: 95 18 a0 01              a1 = sp + 0x1a0
  7923: 50 20 b8 00 bb 1b        ra = 184, jump @777
      :                          @397 [@dyn 92]
  7929: 95 17 ff 07              a0 = sp + 0x7ff
  7933: 95 77 a1 03              a0 = a0 + 0x3a1
  7937: 82 76 50                 s1 = u64 [a0 + 0x50]
  7940: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7943: 82 75 48                 s0 = u64 [a0 + 0x48]
  7946: 82 17 10                 a0 = u64 [sp + 0x10]
  7949: 33 08                    a1 = 0
  7951: 33 09                    a2 = 0
  7953: 64 6a                    a3 = s1
  7955: 33 00 ba 00              ra = 0xba
  7959: 0a 64                    ecalli 100 // 'log'
  7961: 01                       fallthrough
      :                          @398 [@dyn 93]
  7962: 82 17 38                 a0 = u64 [sp + 0x38]
  7965: c8 57 07                 a0 = a0 + s0
  7968: 53 27 00 f0 23           jump @404 if a0 <u 4294963200
      :                          @399
  7973: 33 07 40 00 03           a0 = 0x30040
  7978: 95 77 00 10              a0 = a0 + 0x1000
  7982: 01                       fallthrough
      :                          @400
  7983: 82 78                    a1 = u64 [a0]
  7985: c9 87 09                 a2 = a0 - a1
  7988: ab 69 0f                 jump @404 if a2 != s1
      :                          @401
  7991: c9 58 09                 a2 = a1 - s0
  7994: 01                       fallthrough
      :                          @402
  7995: 82 7a                    a3 = u64 [a0]
  7997: ab 8a f2                 jump @400 if a3 != a1
      :                          @403
  8000: 7b 79                    u64 [a0] = a2
  8002: 01                       fallthrough
      :                          @404
  8003: 95 16 ff 07              s1 = sp + 0x7ff
  8007: 95 66 a1 03              s1 = s1 + 0x3a1
  8011: 82 67 78                 a0 = u64 [s1 + 0x78]
  8014: 33 08 01                 a1 = 0x1
  8017: 50 20 bc 00 cd 28        ra = 188, jump @1054
      :                          @405 [@dyn 94]
  8023: 95 17 58                 a0 = sp + 0x58
  8026: 33 08 03                 a1 = 0x3
  8029: 0a 0d                    ecalli 13 // 'query'
  8031: 95 18 48                 a1 = sp + 0x48
  8034: 7b 68 18                 u64 [s1 + 0x18] = a1
  8037: 95 18 ff 07              a1 = sp + 0x7ff
  8041: 95 88 21 04              a1 = a1 + 0x421
  8045: 7b 68 28                 u64 [s1 + 0x28] = a1
  8048: 82 18 20                 a1 = u64 [sp + 0x20]
  8051: 7b 68 20                 u64 [s1 + 0x20] = a1
  8054: 7b 68 30                 u64 [s1 + 0x30] = a1
  8057: 33 08 50 08 01           a1 = 0x10850
  8062: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8066: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8071: 49 21 c0 01              u64 [sp + 448] = 0
  8075: 95 18 ff 07              a1 = sp + 0x7ff
  8079: 95 88 b9 03              a1 = a1 + 0x3b9
  8083: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8087: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8092: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8096: 88 77 01                 a0 = a0 <u 0x1
  8099: 97 77 01                 a0 = a0 << 0x1
  8102: 7b 17 20                 u64 [sp + 0x20] = a0
  8105: 95 17 ff 07              a0 = sp + 0x7ff
  8109: 95 77 e9 03              a0 = a0 + 0x3e9
  8113: 95 18 a0 01              a1 = sp + 0x1a0
  8117: 50 20 be 00 f9 1a        ra = 190, jump @777
      :                          @406 [@dyn 95]
  8123: 82 65 50                 s0 = u64 [s1 + 0x50]
  8126: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8129: 82 66 48                 s1 = u64 [s1 + 0x48]
  8132: 82 17 20                 a0 = u64 [sp + 0x20]
  8135: 33 08                    a1 = 0
  8137: 33 09                    a2 = 0
  8139: 64 5a                    a3 = s0
  8141: 33 00 c0 00              ra = 0xc0
  8145: 0a 64                    ecalli 100 // 'log'
  8147: 01                       fallthrough
      :                          @407 [@dyn 96]
  8148: 82 17 38                 a0 = u64 [sp + 0x38]
  8151: c8 67 07                 a0 = a0 + s1
  8154: 53 27 00 f0 23           jump @413 if a0 <u 4294963200
      :                          @408
  8159: 33 07 40 00 03           a0 = 0x30040
  8164: 95 77 00 10              a0 = a0 + 0x1000
  8168: 01                       fallthrough
      :                          @409
  8169: 82 78                    a1 = u64 [a0]
  8171: c9 87 09                 a2 = a0 - a1
  8174: ab 59 0f                 jump @413 if a2 != s0
      :                          @410
  8177: c9 68 09                 a2 = a1 - s1
  8180: 01                       fallthrough
      :                          @411
  8181: 82 7a                    a3 = u64 [a0]
  8183: ab 8a f2                 jump @409 if a3 != a1
      :                          @412
  8186: 7b 79                    u64 [a0] = a2
  8188: 01                       fallthrough
      :                          @413
  8189: 95 16 ff 07              s1 = sp + 0x7ff
  8193: 95 66 a1 03              s1 = s1 + 0x3a1
  8197: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8201: 33 08 02                 a1 = 0x2
  8204: 33 05 02                 s0 = 0x2
  8207: 50 20 c2 00 0f 28        ra = 194, jump @1054
      :                          @414 [@dyn 97]
  8213: 95 17 78                 a0 = sp + 0x78
  8216: 33 08 03                 a1 = 0x3
  8219: 0a 0d                    ecalli 13 // 'query'
  8221: 95 18 48                 a1 = sp + 0x48
  8224: 7b 68 18                 u64 [s1 + 0x18] = a1
  8227: 33 08 1a                 a1 = 0x1a
  8230: 7b 68 20                 u64 [s1 + 0x20] = a1
  8233: 7b 68 30                 u64 [s1 + 0x30] = a1
  8236: 33 08 98 08 01           a1 = 0x10898
  8241: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8245: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8250: 49 21 c0 01              u64 [sp + 448] = 0
  8254: 95 18 ff 07              a1 = sp + 0x7ff
  8258: 95 88 b9 03              a1 = a1 + 0x3b9
  8262: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8266: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  8270: 7b 67                    u64 [s1] = a0
  8272: 95 77 01                 a0 = a0 + 0x1
  8275: 88 77 01                 a0 = a0 <u 0x1
  8278: 97 77 01                 a0 = a0 << 0x1
  8281: 7b 17 20                 u64 [sp + 0x20] = a0
  8284: 7b 66 28                 u64 [s1 + 0x28] = s1
  8287: 95 17 ff 07              a0 = sp + 0x7ff
  8291: 95 77 e9 03              a0 = a0 + 0x3e9
  8295: 95 18 a0 01              a1 = sp + 0x1a0
  8299: 50 20 c4 00 43 1a        ra = 196, jump @777
      :                          @415 [@dyn 98]
  8305: 82 65 50                 s0 = u64 [s1 + 0x50]
  8308: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8311: 82 66 48                 s1 = u64 [s1 + 0x48]
  8314: 82 17 20                 a0 = u64 [sp + 0x20]
  8317: 33 08                    a1 = 0
  8319: 33 09                    a2 = 0
  8321: 64 5a                    a3 = s0
  8323: 33 00 c6 00              ra = 0xc6
  8327: 0a 64                    ecalli 100 // 'log'
  8329: 01                       fallthrough
      :                          @416 [@dyn 99]
  8330: 82 17 38                 a0 = u64 [sp + 0x38]
  8333: c8 67 07                 a0 = a0 + s1
  8336: 53 27 00 f0 23           jump @422 if a0 <u 4294963200
      :                          @417
  8341: 33 07 40 00 03           a0 = 0x30040
  8346: 95 77 00 10              a0 = a0 + 0x1000
  8350: 01                       fallthrough
      :                          @418
  8351: 82 78                    a1 = u64 [a0]
  8353: c9 87 09                 a2 = a0 - a1
  8356: ab 59 0f                 jump @422 if a2 != s0
      :                          @419
  8359: c9 68 09                 a2 = a1 - s1
  8362: 01                       fallthrough
      :                          @420
  8363: 82 7a                    a3 = u64 [a0]
  8365: ab 8a f2                 jump @418 if a3 != a1
      :                          @421
  8368: 7b 79                    u64 [a0] = a2
  8370: 01                       fallthrough
      :                          @422
  8371: 95 16 ff 07              s1 = sp + 0x7ff
  8375: 95 66 a1 03              s1 = s1 + 0x3a1
  8379: 82 67                    a0 = u64 [s1]
  8381: 33 08 05                 a1 = 0x5
  8384: 33 00 70 01              ra = 0x170
  8388: 28 5a 27                 jump @1054
      :                          @423 [@dyn 100]
  8391: 33 05 03                 s0 = 0x3
  8394: 95 17 58                 a0 = sp + 0x58
  8397: 33 08 03                 a1 = 0x3
  8400: 0a 0f                    ecalli 15 // 'forget'
  8402: 7b 67 68                 u64 [s1 + 0x68] = a0
  8405: 88 77 01                 a0 = a0 <u 0x1
  8408: 97 77 01                 a0 = a0 << 0x1
  8411: 7b 17 10                 u64 [sp + 0x10] = a0
  8414: 95 17 48                 a0 = sp + 0x48
  8417: 7b 67 18                 u64 [s1 + 0x18] = a0
  8420: 33 08 1a                 a1 = 0x1a
  8423: 7b 68 20                 u64 [s1 + 0x20] = a1
  8426: 95 17 ff 07              a0 = sp + 0x7ff
  8430: 95 77 09 04              a0 = a0 + 0x409
  8434: 7b 67 28                 u64 [s1 + 0x28] = a0
  8437: 7b 18 20                 u64 [sp + 0x20] = a1
  8440: 7b 68 30                 u64 [s1 + 0x30] = a1
  8443: 33 07 e0 08 01           a0 = 0x108e0
  8448: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8452: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  8456: 49 21 c0 01              u64 [sp + 448] = 0
  8460: 95 17 ff 07              a0 = sp + 0x7ff
  8464: 95 77 b9 03              a0 = a0 + 0x3b9
  8468: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8472: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8477: 95 17 ff 07              a0 = sp + 0x7ff
  8481: 95 77 e9 03              a0 = a0 + 0x3e9
  8485: 95 18 a0 01              a1 = sp + 0x1a0
  8489: 50 20 ca 00 85 19        ra = 202, jump @777
      :                          @424 [@dyn 101]
  8495: 95 17 ff 07              a0 = sp + 0x7ff
  8499: 95 77 a1 03              a0 = a0 + 0x3a1
  8503: 82 76 50                 s1 = u64 [a0 + 0x50]
  8506: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8509: 82 75 48                 s0 = u64 [a0 + 0x48]
  8512: 82 17 10                 a0 = u64 [sp + 0x10]
  8515: 33 08                    a1 = 0
  8517: 33 09                    a2 = 0
  8519: 64 6a                    a3 = s1
  8521: 33 00 cc 00              ra = 0xcc
  8525: 0a 64                    ecalli 100 // 'log'
  8527: 01                       fallthrough
      :                          @425 [@dyn 102]
  8528: 82 17 38                 a0 = u64 [sp + 0x38]
  8531: c8 57 07                 a0 = a0 + s0
  8534: 53 27 00 f0 23           jump @431 if a0 <u 4294963200
      :                          @426
  8539: 33 07 40 00 03           a0 = 0x30040
  8544: 95 77 00 10              a0 = a0 + 0x1000
  8548: 01                       fallthrough
      :                          @427
  8549: 82 78                    a1 = u64 [a0]
  8551: c9 87 09                 a2 = a0 - a1
  8554: ab 69 0f                 jump @431 if a2 != s1
      :                          @428
  8557: c9 58 09                 a2 = a1 - s0
  8560: 01                       fallthrough
      :                          @429
  8561: 82 7a                    a3 = u64 [a0]
  8563: ab 8a f2                 jump @427 if a3 != a1
      :                          @430
  8566: 7b 79                    u64 [a0] = a2
  8568: 01                       fallthrough
      :                          @431
  8569: 95 16 ff 07              s1 = sp + 0x7ff
  8573: 95 66 a1 03              s1 = s1 + 0x3a1
  8577: 82 67 68                 a0 = u64 [s1 + 0x68]
  8580: 33 08 01                 a1 = 0x1
  8583: 50 20 ce 00 97 26        ra = 206, jump @1054
      :                          @432 [@dyn 103]
  8589: 95 17 58                 a0 = sp + 0x58
  8592: 33 08 03                 a1 = 0x3
  8595: 0a 0d                    ecalli 13 // 'query'
  8597: 95 18 48                 a1 = sp + 0x48
  8600: 7b 68 18                 u64 [s1 + 0x18] = a1
  8603: 95 18 ff 07              a1 = sp + 0x7ff
  8607: 95 88 11 04              a1 = a1 + 0x411
  8611: 7b 68 28                 u64 [s1 + 0x28] = a1
  8614: 82 18 20                 a1 = u64 [sp + 0x20]
  8617: 7b 68 20                 u64 [s1 + 0x20] = a1
  8620: 7b 68 30                 u64 [s1 + 0x30] = a1
  8623: 33 08 28 09 01           a1 = 0x10928
  8628: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8632: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8637: 49 21 c0 01              u64 [sp + 448] = 0
  8641: 95 18 ff 07              a1 = sp + 0x7ff
  8645: 95 88 b9 03              a1 = a1 + 0x3b9
  8649: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8653: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8658: 7b 67 70                 u64 [s1 + 0x70] = a0
  8661: 8e 77                    a0 = a0 >u 0
  8663: 97 77 01                 a0 = a0 << 0x1
  8666: 7b 17 20                 u64 [sp + 0x20] = a0
  8669: 95 17 ff 07              a0 = sp + 0x7ff
  8673: 95 77 e9 03              a0 = a0 + 0x3e9
  8677: 95 18 a0 01              a1 = sp + 0x1a0
  8681: 50 20 d0 00 c5 18        ra = 208, jump @777
      :                          @433 [@dyn 104]
  8687: 82 65 50                 s0 = u64 [s1 + 0x50]
  8690: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8693: 82 66 48                 s1 = u64 [s1 + 0x48]
  8696: 82 17 20                 a0 = u64 [sp + 0x20]
  8699: 33 08                    a1 = 0
  8701: 33 09                    a2 = 0
  8703: 64 5a                    a3 = s0
  8705: 33 00 d2 00              ra = 0xd2
  8709: 0a 64                    ecalli 100 // 'log'
  8711: 01                       fallthrough
      :                          @434 [@dyn 105]
  8712: 82 17 38                 a0 = u64 [sp + 0x38]
  8715: c8 67 07                 a0 = a0 + s1
  8718: 53 27 00 f0 23           jump @440 if a0 <u 4294963200
      :                          @435
  8723: 33 07 40 00 03           a0 = 0x30040
  8728: 95 77 00 10              a0 = a0 + 0x1000
  8732: 01                       fallthrough
      :                          @436
  8733: 82 78                    a1 = u64 [a0]
  8735: c9 87 09                 a2 = a0 - a1
  8738: ab 59 0f                 jump @440 if a2 != s0
      :                          @437
  8741: c9 68 09                 a2 = a1 - s1
  8744: 01                       fallthrough
      :                          @438
  8745: 82 7a                    a3 = u64 [a0]
  8747: ab 8a f2                 jump @436 if a3 != a1
      :                          @439
  8750: 7b 79                    u64 [a0] = a2
  8752: 01                       fallthrough
      :                          @440
  8753: 95 15 ff 07              s0 = sp + 0x7ff
  8757: 95 55 a1 03              s0 = s0 + 0x3a1
  8761: 82 57 70                 a0 = u64 [s0 + 0x70]
  8764: 33 08 02                 a1 = 0x2
  8767: 33 06 02                 s1 = 0x2
  8770: 50 20 d4 00 dc 25        ra = 212, jump @1054
      :                          @441 [@dyn 106]
  8776: 95 18 78                 a1 = sp + 0x78
  8779: 95 19 98 00              a2 = sp + 0x98
  8783: 33 0b 03                 a4 = 0x3
  8786: 82 17 30                 a0 = u64 [sp + 0x30]
  8789: 33 0a                    a3 = 0
  8791: 0a 01                    ecalli 1 // 'lookup'
  8793: 7b 57 78                 u64 [s0 + 0x78] = a0
  8796: 95 77 01                 a0 = a0 + 0x1
  8799: 88 77 01                 a0 = a0 <u 0x1
  8802: 97 77 01                 a0 = a0 << 0x1
  8805: 7b 17 10                 u64 [sp + 0x10] = a0
  8808: 95 17 48                 a0 = sp + 0x48
  8811: 7b 57 18                 u64 [s0 + 0x18] = a0
  8814: 33 09 1a                 a2 = 0x1a
  8817: 7b 59 20                 u64 [s0 + 0x20] = a2
  8820: 95 17 ff 07              a0 = sp + 0x7ff
  8824: 95 77 19 04              a0 = a0 + 0x419
  8828: 7b 57 28                 u64 [s0 + 0x28] = a0
  8831: 7b 19 20                 u64 [sp + 0x20] = a2
  8834: 7b 59 30                 u64 [s0 + 0x30] = a2
  8837: 33 07 70 09 01           a0 = 0x10970
  8842: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8846: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8851: 49 21 c0 01              u64 [sp + 448] = 0
  8855: 95 17 ff 07              a0 = sp + 0x7ff
  8859: 95 77 b9 03              a0 = a0 + 0x3b9
  8863: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8867: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  8871: 95 17 ff 07              a0 = sp + 0x7ff
  8875: 95 77 e9 03              a0 = a0 + 0x3e9
  8879: 95 18 a0 01              a1 = sp + 0x1a0
  8883: 50 20 d6 00 fb 17        ra = 214, jump @777
      :                          @442 [@dyn 107]
  8889: 82 56 50                 s1 = u64 [s0 + 0x50]
  8892: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8895: 82 55 48                 s0 = u64 [s0 + 0x48]
  8898: 82 17 10                 a0 = u64 [sp + 0x10]
  8901: 33 08                    a1 = 0
  8903: 33 09                    a2 = 0
  8905: 64 6a                    a3 = s1
  8907: 33 00 d8 00              ra = 0xd8
  8911: 0a 64                    ecalli 100 // 'log'
  8913: 01                       fallthrough
      :                          @443 [@dyn 108]
  8914: 82 17 38                 a0 = u64 [sp + 0x38]
  8917: c8 57 07                 a0 = a0 + s0
  8920: 53 27 00 f0 23           jump @449 if a0 <u 4294963200
      :                          @444
  8925: 33 07 40 00 03           a0 = 0x30040
  8930: 95 77 00 10              a0 = a0 + 0x1000
  8934: 01                       fallthrough
      :                          @445
  8935: 82 78                    a1 = u64 [a0]
  8937: c9 87 09                 a2 = a0 - a1
  8940: ab 69 0f                 jump @449 if a2 != s1
      :                          @446
  8943: c9 58 09                 a2 = a1 - s0
  8946: 01                       fallthrough
      :                          @447
  8947: 82 7a                    a3 = u64 [a0]
  8949: ab 8a f2                 jump @445 if a3 != a1
      :                          @448
  8952: 7b 79                    u64 [a0] = a2
  8954: 01                       fallthrough
      :                          @449
  8955: 95 16 ff 07              s1 = sp + 0x7ff
  8959: 95 66 a1 03              s1 = s1 + 0x3a1
  8963: 82 67 78                 a0 = u64 [s1 + 0x78]
  8966: 33 08 05                 a1 = 0x5
  8969: 50 20 da 00 15 25        ra = 218, jump @1054
      :                          @450 [@dyn 109]
  8975: 33 07 e8 03              a0 = 0x3e8
  8979: 95 18 52                 a1 = sp + 0x52
  8982: 0a 06                    ecalli 6 // 'assign'
  8984: 95 18 48                 a1 = sp + 0x48
  8987: 7b 68 18                 u64 [s1 + 0x18] = a1
  8990: 95 18 ff 07              a1 = sp + 0x7ff
  8994: 95 88 21 04              a1 = a1 + 0x421
  8998: 7b 68 28                 u64 [s1 + 0x28] = a1
  9001: 82 18 20                 a1 = u64 [sp + 0x20]
  9004: 7b 68 20                 u64 [s1 + 0x20] = a1
  9007: 7b 68 30                 u64 [s1 + 0x30] = a1
  9010: 33 08 c0 09 01           a1 = 0x109c0
  9015: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9019: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9024: 49 21 c0 01              u64 [sp + 448] = 0
  9028: 95 18 ff 07              a1 = sp + 0x7ff
  9032: 95 88 b9 03              a1 = a1 + 0x3b9
  9036: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9040: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9045: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9049: 95 77 06                 a0 = a0 + 0x6
  9052: 88 77 01                 a0 = a0 <u 0x1
  9055: 97 77 01                 a0 = a0 << 0x1
  9058: 7b 17 20                 u64 [sp + 0x20] = a0
  9061: 95 17 ff 07              a0 = sp + 0x7ff
  9065: 95 77 e9 03              a0 = a0 + 0x3e9
  9069: 95 18 a0 01              a1 = sp + 0x1a0
  9073: 50 20 dc 00 3d 17        ra = 220, jump @777
      :                          @451 [@dyn 110]
  9079: 82 65 50                 s0 = u64 [s1 + 0x50]
  9082: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9085: 82 66 48                 s1 = u64 [s1 + 0x48]
  9088: 82 17 20                 a0 = u64 [sp + 0x20]
  9091: 33 08                    a1 = 0
  9093: 33 09                    a2 = 0
  9095: 64 5a                    a3 = s0
  9097: 33 00 de 00              ra = 0xde
  9101: 0a 64                    ecalli 100 // 'log'
  9103: 01                       fallthrough
      :                          @452 [@dyn 111]
  9104: 82 17 38                 a0 = u64 [sp + 0x38]
  9107: c8 67 07                 a0 = a0 + s1
  9110: 53 27 00 f0 23           jump @458 if a0 <u 4294963200
      :                          @453
  9115: 33 07 40 00 03           a0 = 0x30040
  9120: 95 77 00 10              a0 = a0 + 0x1000
  9124: 01                       fallthrough
      :                          @454
  9125: 82 78                    a1 = u64 [a0]
  9127: c9 87 09                 a2 = a0 - a1
  9130: ab 59 0f                 jump @458 if a2 != s0
      :                          @455
  9133: c9 68 09                 a2 = a1 - s1
  9136: 01                       fallthrough
      :                          @456
  9137: 82 7a                    a3 = u64 [a0]
  9139: ab 8a f2                 jump @454 if a3 != a1
      :                          @457
  9142: 7b 79                    u64 [a0] = a2
  9144: 01                       fallthrough
      :                          @458
  9145: 95 15 ff 07              s0 = sp + 0x7ff
  9149: 95 55 a1 03              s0 = s0 + 0x3a1
  9153: 82 57 80 00              a0 = u64 [s0 + 0x80]
  9157: 33 08 06                 a1 = 0x6
  9160: 50 20 e0 00 56 24        ra = 224, jump @1054
      :                          @459 [@dyn 112]
  9166: 33 07 9a 02              a0 = 0x29a
  9170: 95 18 58                 a1 = sp + 0x58
  9173: 33 09 03                 a2 = 0x3
  9176: 0a 1b                    ecalli 27 // 'provide'
  9178: 7b 17 20                 u64 [sp + 0x20] = a0
  9181: 95 77 04                 a0 = a0 + 0x4
  9184: 88 77 01                 a0 = a0 <u 0x1
  9187: 97 77 01                 a0 = a0 << 0x1
  9190: 7b 17 08                 u64 [sp + 0x8] = a0
  9193: 95 17 ff 07              a0 = sp + 0x7ff
  9197: 95 77 11 04              a0 = a0 + 0x411
  9201: 7b 57 48                 u64 [s0 + 0x48] = a0
  9204: 33 07 1a                 a0 = 0x1a
  9207: 7b 17 10                 u64 [sp + 0x10] = a0
  9210: 7b 57 50                 u64 [s0 + 0x50] = a0
  9213: 33 07 28 0a 01           a0 = 0x10a28
  9218: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9222: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9227: 49 21 c0 01              u64 [sp + 448] = 0
  9231: 95 17 ff 07              a0 = sp + 0x7ff
  9235: 95 77 e9 03              a0 = a0 + 0x3e9
  9239: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9243: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9248: 95 17 ff 07              a0 = sp + 0x7ff
  9252: 95 77 b9 03              a0 = a0 + 0x3b9
  9256: 95 18 a0 01              a1 = sp + 0x1a0
  9260: 50 20 e2 00 82 16        ra = 226, jump @777
      :                          @460 [@dyn 113]
  9266: 82 56 20                 s1 = u64 [s0 + 0x20]
  9269: 82 5b 28                 a4 = u64 [s0 + 0x28]
  9272: 82 55 18                 s0 = u64 [s0 + 0x18]
  9275: 82 17 08                 a0 = u64 [sp + 0x8]
  9278: 33 08                    a1 = 0
  9280: 33 09                    a2 = 0
  9282: 64 6a                    a3 = s1
  9284: 33 00 e4 00              ra = 0xe4
  9288: 0a 64                    ecalli 100 // 'log'
  9290: 01                       fallthrough
      :                          @461 [@dyn 114]
  9291: 82 17 38                 a0 = u64 [sp + 0x38]
  9294: c8 57 07                 a0 = a0 + s0
  9297: 53 27 00 f0 23           jump @467 if a0 <u 4294963200
      :                          @462
  9302: 33 07 40 00 03           a0 = 0x30040
  9307: 95 77 00 10              a0 = a0 + 0x1000
  9311: 01                       fallthrough
      :                          @463
  9312: 82 78                    a1 = u64 [a0]
  9314: c9 87 09                 a2 = a0 - a1
  9317: ab 69 0f                 jump @467 if a2 != s1
      :                          @464
  9320: c9 58 09                 a2 = a1 - s0
  9323: 01                       fallthrough
      :                          @465
  9324: 82 7a                    a3 = u64 [a0]
  9326: ab 8a f2                 jump @463 if a3 != a1
      :                          @466
  9329: 7b 79                    u64 [a0] = a2
  9331: 01                       fallthrough
      :                          @467
  9332: 33 08 07                 a1 = 0x7
  9335: 82 17 20                 a0 = u64 [sp + 0x20]
  9338: 50 20 e6 00 a4 23        ra = 230, jump @1054
      :                          @468 [@dyn 115]
  9344: 95 18 58                 a1 = sp + 0x58
  9347: 33 09 03                 a2 = 0x3
  9350: 82 17 30                 a0 = u64 [sp + 0x30]
  9353: 0a 1b                    ecalli 27 // 'provide'
  9355: 95 16 ff 07              s1 = sp + 0x7ff
  9359: 95 66 a1 03              s1 = s1 + 0x3a1
  9363: 82 18 10                 a1 = u64 [sp + 0x10]
  9366: 7b 68 50                 u64 [s1 + 0x50] = a1
  9369: 33 08 80 0a 01           a1 = 0x10a80
  9374: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9378: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9383: 49 21 c0 01              u64 [sp + 448] = 0
  9387: 95 18 ff 07              a1 = sp + 0x7ff
  9391: 95 88 e9 03              a1 = a1 + 0x3e9
  9395: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9399: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9404: 7b 67                    u64 [s1] = a0
  9406: 88 77 01                 a0 = a0 <u 0x1
  9409: 97 77 01                 a0 = a0 << 0x1
  9412: 7b 17 10                 u64 [sp + 0x10] = a0
  9415: 7b 66 48                 u64 [s1 + 0x48] = s1
  9418: 95 17 ff 07              a0 = sp + 0x7ff
  9422: 95 77 b9 03              a0 = a0 + 0x3b9
  9426: 95 18 a0 01              a1 = sp + 0x1a0
  9430: 50 20 e8 00 d8 15        ra = 232, jump @777
      :                          @469 [@dyn 116]
  9436: 82 65 20                 s0 = u64 [s1 + 0x20]
  9439: 82 6b 28                 a4 = u64 [s1 + 0x28]
  9442: 82 66 18                 s1 = u64 [s1 + 0x18]
  9445: 82 17 10                 a0 = u64 [sp + 0x10]
  9448: 33 08                    a1 = 0
  9450: 33 09                    a2 = 0
  9452: 64 5a                    a3 = s0
  9454: 33 00 ea 00              ra = 0xea
  9458: 0a 64                    ecalli 100 // 'log'
  9460: 01                       fallthrough
      :                          @470 [@dyn 117]
  9461: 82 17 38                 a0 = u64 [sp + 0x38]
  9464: c8 67 07                 a0 = a0 + s1
  9467: 53 27 00 f0 23           jump @476 if a0 <u 4294963200
      :                          @471
  9472: 33 07 40 00 03           a0 = 0x30040
  9477: 95 77 00 10              a0 = a0 + 0x1000
  9481: 01                       fallthrough
      :                          @472
  9482: 82 78                    a1 = u64 [a0]
  9484: c9 87 09                 a2 = a0 - a1
  9487: ab 59 0f                 jump @476 if a2 != s0
      :                          @473
  9490: c9 68 09                 a2 = a1 - s1
  9493: 01                       fallthrough
      :                          @474
  9494: 82 7a                    a3 = u64 [a0]
  9496: ab 8a f2                 jump @472 if a3 != a1
      :                          @475
  9499: 7b 79                    u64 [a0] = a2
  9501: 01                       fallthrough
      :                          @476
  9502: 33 08 08                 a1 = 0x8
  9505: 82 17 20                 a0 = u64 [sp + 0x20]
  9508: 50 20 ec 00 fa 22        ra = 236, jump @1054
      :                          @477 [@dyn 118]
  9514: 95 16 ff 07              s1 = sp + 0x7ff
  9518: 95 66 a1 03              s1 = s1 + 0x3a1
  9522: 28 19 10                 jump @673
      :                          @478 [@dyn 119]
  9525: 33 05 03                 s0 = 0x3
  9528: 95 18 58                 a1 = sp + 0x58
  9531: 95 19 98 00              a2 = sp + 0x98
  9535: 33 0b 03                 a4 = 0x3
  9538: 82 17 30                 a0 = u64 [sp + 0x30]
  9541: 33 0a                    a3 = 0
  9543: 0a 01                    ecalli 1 // 'lookup'
  9545: 7b 17 98 01              u64 [sp + 0x198] = a0
  9549: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  9552: 88 77 01                 a0 = a0 <u 0x1
  9555: 97 77 01                 a0 = a0 << 0x1
  9558: 7b 17 10                 u64 [sp + 0x10] = a0
  9561: 95 17 48                 a0 = sp + 0x48
  9564: 7b 67 18                 u64 [s1 + 0x18] = a0
  9567: 33 08 1a                 a1 = 0x1a
  9570: 7b 68 20                 u64 [s1 + 0x20] = a1
  9573: 95 17 98 01              a0 = sp + 0x198
  9577: 7b 67 28                 u64 [s1 + 0x28] = a0
  9580: 7b 18 20                 u64 [sp + 0x20] = a1
  9583: 7b 68 30                 u64 [s1 + 0x30] = a1
  9586: 33 07 b8 0a 01           a0 = 0x10ab8
  9591: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9595: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  9599: 49 21 c0 01              u64 [sp + 448] = 0
  9603: 95 17 ff 07              a0 = sp + 0x7ff
  9607: 95 77 b9 03              a0 = a0 + 0x3b9
  9611: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9615: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9620: 95 17 ff 07              a0 = sp + 0x7ff
  9624: 95 77 e9 03              a0 = a0 + 0x3e9
  9628: 95 18 a0 01              a1 = sp + 0x1a0
  9632: 50 20 f0 00 0e 15        ra = 240, jump @777
      :                          @479 [@dyn 120]
  9638: 95 17 ff 07              a0 = sp + 0x7ff
  9642: 95 77 a1 03              a0 = a0 + 0x3a1
  9646: 82 76 50                 s1 = u64 [a0 + 0x50]
  9649: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9652: 82 75 48                 s0 = u64 [a0 + 0x48]
  9655: 82 17 10                 a0 = u64 [sp + 0x10]
  9658: 33 08                    a1 = 0
  9660: 33 09                    a2 = 0
  9662: 64 6a                    a3 = s1
  9664: 33 00 f2 00              ra = 0xf2
  9668: 0a 64                    ecalli 100 // 'log'
  9670: 01                       fallthrough
      :                          @480 [@dyn 121]
  9671: 82 17 38                 a0 = u64 [sp + 0x38]
  9674: c8 57 07                 a0 = a0 + s0
  9677: 53 27 00 f0 23           jump @486 if a0 <u 4294963200
      :                          @481
  9682: 33 07 40 00 03           a0 = 0x30040
  9687: 95 77 00 10              a0 = a0 + 0x1000
  9691: 01                       fallthrough
      :                          @482
  9692: 82 78                    a1 = u64 [a0]
  9694: c9 87 09                 a2 = a0 - a1
  9697: ab 69 0f                 jump @486 if a2 != s1
      :                          @483
  9700: c9 58 09                 a2 = a1 - s0
  9703: 01                       fallthrough
      :                          @484
  9704: 82 7a                    a3 = u64 [a0]
  9706: ab 8a f2                 jump @482 if a3 != a1
      :                          @485
  9709: 7b 79                    u64 [a0] = a2
  9711: 01                       fallthrough
      :                          @486
  9712: 82 17 98 01              a0 = u64 [sp + 0x198]
  9716: 33 08 01                 a1 = 0x1
  9719: 50 20 f4 00 27 22        ra = 244, jump @1054
      :                          @487 [@dyn 122]
  9725: 95 17 58                 a0 = sp + 0x58
  9728: 33 08 03                 a1 = 0x3
  9731: 0a 0d                    ecalli 13 // 'query'
  9733: 95 16 ff 07              s1 = sp + 0x7ff
  9737: 95 66 a1 03              s1 = s1 + 0x3a1
  9741: 95 18 48                 a1 = sp + 0x48
  9744: 7b 68 18                 u64 [s1 + 0x18] = a1
  9747: 95 18 ff 07              a1 = sp + 0x7ff
  9751: 95 88 09 04              a1 = a1 + 0x409
  9755: 7b 68 28                 u64 [s1 + 0x28] = a1
  9758: 82 18 20                 a1 = u64 [sp + 0x20]
  9761: 7b 68 20                 u64 [s1 + 0x20] = a1
  9764: 7b 68 30                 u64 [s1 + 0x30] = a1
  9767: 33 08 28 09 01           a1 = 0x10928
  9772: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9776: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9781: 49 21 c0 01              u64 [sp + 448] = 0
  9785: 95 18 ff 07              a1 = sp + 0x7ff
  9789: 95 88 b9 03              a1 = a1 + 0x3b9
  9793: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9797: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9802: 7b 67 68                 u64 [s1 + 0x68] = a0
  9805: 8e 77                    a0 = a0 >u 0
  9807: 97 77 01                 a0 = a0 << 0x1
  9810: 7b 17 20                 u64 [sp + 0x20] = a0
  9813: 95 17 ff 07              a0 = sp + 0x7ff
  9817: 95 77 e9 03              a0 = a0 + 0x3e9
  9821: 95 18 a0 01              a1 = sp + 0x1a0
  9825: 50 20 f6 00 4d 14        ra = 246, jump @777
      :                          @488 [@dyn 123]
  9831: 82 65 50                 s0 = u64 [s1 + 0x50]
  9834: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9837: 82 66 48                 s1 = u64 [s1 + 0x48]
  9840: 82 17 20                 a0 = u64 [sp + 0x20]
  9843: 33 08                    a1 = 0
  9845: 33 09                    a2 = 0
  9847: 64 5a                    a3 = s0
  9849: 33 00 f8 00              ra = 0xf8
  9853: 0a 64                    ecalli 100 // 'log'
  9855: 01                       fallthrough
      :                          @489 [@dyn 124]
  9856: 82 17 38                 a0 = u64 [sp + 0x38]
  9859: c8 67 07                 a0 = a0 + s1
  9862: 53 27 00 f0 23           jump @495 if a0 <u 4294963200
      :                          @490
  9867: 33 07 40 00 03           a0 = 0x30040
  9872: 95 77 00 10              a0 = a0 + 0x1000
  9876: 01                       fallthrough
      :                          @491
  9877: 82 78                    a1 = u64 [a0]
  9879: c9 87 09                 a2 = a0 - a1
  9882: ab 59 0f                 jump @495 if a2 != s0
      :                          @492
  9885: c9 68 09                 a2 = a1 - s1
  9888: 01                       fallthrough
      :                          @493
  9889: 82 7a                    a3 = u64 [a0]
  9891: ab 8a f2                 jump @491 if a3 != a1
      :                          @494
  9894: 7b 79                    u64 [a0] = a2
  9896: 01                       fallthrough
      :                          @495
  9897: 95 15 ff 07              s0 = sp + 0x7ff
  9901: 95 55 a1 03              s0 = s0 + 0x3a1
  9905: 82 57 68                 a0 = u64 [s0 + 0x68]
  9908: 33 08 02                 a1 = 0x2
  9911: 33 06 02                 s1 = 0x2
  9914: 50 20 fa 00 64 21        ra = 250, jump @1054
      :                          @496 [@dyn 125]
  9920: 95 18 58                 a1 = sp + 0x58
  9923: 82 17 30                 a0 = u64 [sp + 0x30]
  9926: 0a 0c                    ecalli 12 // 'eject'
  9928: 7b 57 70                 u64 [s0 + 0x70] = a0
  9931: 95 77 04                 a0 = a0 + 0x4
  9934: 88 77 01                 a0 = a0 <u 0x1
  9937: 97 77 01                 a0 = a0 << 0x1
  9940: 7b 17 10                 u64 [sp + 0x10] = a0
  9943: 95 17 48                 a0 = sp + 0x48
  9946: 7b 57 18                 u64 [s0 + 0x18] = a0
  9949: 33 08 1a                 a1 = 0x1a
  9952: 7b 58 20                 u64 [s0 + 0x20] = a1
  9955: 95 17 ff 07              a0 = sp + 0x7ff
  9959: 95 77 11 04              a0 = a0 + 0x411
  9963: 7b 57 28                 u64 [s0 + 0x28] = a0
  9966: 7b 18 20                 u64 [sp + 0x20] = a1
  9969: 7b 58 30                 u64 [s0 + 0x30] = a1
  9972: 33 07 00 0b 01           a0 = 0x10b00
  9977: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9981: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9986: 49 21 c0 01              u64 [sp + 448] = 0
  9990: 95 17 ff 07              a0 = sp + 0x7ff
  9994: 95 77 b9 03              a0 = a0 + 0x3b9
  9998: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10002: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 10006: 95 17 ff 07              a0 = sp + 0x7ff
 10010: 95 77 e9 03              a0 = a0 + 0x3e9
 10014: 95 18 a0 01              a1 = sp + 0x1a0
 10018: 50 20 fc 00 8c 13        ra = 252, jump @777
      :                          @497 [@dyn 126]
 10024: 82 56 50                 s1 = u64 [s0 + 0x50]
 10027: 82 5b 58                 a4 = u64 [s0 + 0x58]
 10030: 82 55 48                 s0 = u64 [s0 + 0x48]
 10033: 82 17 10                 a0 = u64 [sp + 0x10]
 10036: 33 08                    a1 = 0
 10038: 33 09                    a2 = 0
 10040: 64 6a                    a3 = s1
 10042: 33 00 fe 00              ra = 0xfe
 10046: 0a 64                    ecalli 100 // 'log'
 10048: 01                       fallthrough
      :                          @498 [@dyn 127]
 10049: 82 17 38                 a0 = u64 [sp + 0x38]
 10052: c8 57 07                 a0 = a0 + s0
 10055: 53 27 00 f0 23           jump @504 if a0 <u 4294963200
      :                          @499
 10060: 33 07 40 00 03           a0 = 0x30040
 10065: 95 77 00 10              a0 = a0 + 0x1000
 10069: 01                       fallthrough
      :                          @500
 10070: 82 78                    a1 = u64 [a0]
 10072: c9 87 09                 a2 = a0 - a1
 10075: ab 69 0f                 jump @504 if a2 != s1
      :                          @501
 10078: c9 58 09                 a2 = a1 - s0
 10081: 01                       fallthrough
      :                          @502
 10082: 82 7a                    a3 = u64 [a0]
 10084: ab 8a f2                 jump @500 if a3 != a1
      :                          @503
 10087: 7b 79                    u64 [a0] = a2
 10089: 01                       fallthrough
      :                          @504
 10090: 95 16 ff 07              s1 = sp + 0x7ff
 10094: 95 66 a1 03              s1 = s1 + 0x3a1
 10098: 82 67 70                 a0 = u64 [s1 + 0x70]
 10101: 33 08 05                 a1 = 0x5
 10104: 50 20 00 01 a6 20        ra = 256, jump @1054
      :                          @505 [@dyn 128]
 10110: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
 10120: 95 1a 58                 a3 = sp + 0x58
 10123: 33 08                    a1 = 0
 10125: 33 09                    a2 = 0
 10127: 33 0b                    a4 = 0
 10129: 0a 05                    ecalli 5 // 'bless'
 10131: 95 18 48                 a1 = sp + 0x48
 10134: 7b 68 18                 u64 [s1 + 0x18] = a1
 10137: 95 18 ff 07              a1 = sp + 0x7ff
 10141: 95 88 19 04              a1 = a1 + 0x419
 10145: 7b 68 28                 u64 [s1 + 0x28] = a1
 10148: 82 18 20                 a1 = u64 [sp + 0x20]
 10151: 7b 68 20                 u64 [s1 + 0x20] = a1
 10154: 7b 68 30                 u64 [s1 + 0x30] = a1
 10157: 33 08 30 0b 01           a1 = 0x10b30
 10162: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10166: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10171: 49 21 c0 01              u64 [sp + 448] = 0
 10175: 95 18 ff 07              a1 = sp + 0x7ff
 10179: 95 88 b9 03              a1 = a1 + 0x3b9
 10183: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10187: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10192: 7b 67 78                 u64 [s1 + 0x78] = a0
 10195: 95 77 04                 a0 = a0 + 0x4
 10198: 88 77 01                 a0 = a0 <u 0x1
 10201: 97 77 01                 a0 = a0 << 0x1
 10204: 7b 17 20                 u64 [sp + 0x20] = a0
 10207: 95 17 ff 07              a0 = sp + 0x7ff
 10211: 95 77 e9 03              a0 = a0 + 0x3e9
 10215: 95 18 a0 01              a1 = sp + 0x1a0
 10219: 50 20 02 01 c3 12        ra = 258, jump @777
      :                          @506 [@dyn 129]
 10225: 82 65 50                 s0 = u64 [s1 + 0x50]
 10228: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10231: 82 66 48                 s1 = u64 [s1 + 0x48]
 10234: 82 17 20                 a0 = u64 [sp + 0x20]
 10237: 33 08                    a1 = 0
 10239: 33 09                    a2 = 0
 10241: 64 5a                    a3 = s0
 10243: 33 00 04 01              ra = 0x104
 10247: 0a 64                    ecalli 100 // 'log'
 10249: 01                       fallthrough
      :                          @507 [@dyn 130]
 10250: 82 17 38                 a0 = u64 [sp + 0x38]
 10253: c8 67 07                 a0 = a0 + s1
 10256: 53 27 00 f0 23           jump @513 if a0 <u 4294963200
      :                          @508
 10261: 33 07 40 00 03           a0 = 0x30040
 10266: 95 77 00 10              a0 = a0 + 0x1000
 10270: 01                       fallthrough
      :                          @509
 10271: 82 78                    a1 = u64 [a0]
 10273: c9 87 09                 a2 = a0 - a1
 10276: ab 59 0f                 jump @513 if a2 != s0
      :                          @510
 10279: c9 68 09                 a2 = a1 - s1
 10282: 01                       fallthrough
      :                          @511
 10283: 82 7a                    a3 = u64 [a0]
 10285: ab 8a f2                 jump @509 if a3 != a1
      :                          @512
 10288: 7b 79                    u64 [a0] = a2
 10290: 01                       fallthrough
      :                          @513
 10291: 95 16 ff 07              s1 = sp + 0x7ff
 10295: 95 66 a1 03              s1 = s1 + 0x3a1
 10299: 82 67 78                 a0 = u64 [s1 + 0x78]
 10302: 33 08 06                 a1 = 0x6
 10305: 50 20 06 01 dd 1f        ra = 262, jump @1054
      :                          @514 [@dyn 131]
 10311: 95 18 58                 a1 = sp + 0x58
 10314: 33 09 03                 a2 = 0x3
 10317: 82 17 30                 a0 = u64 [sp + 0x30]
 10320: 0a 1b                    ecalli 27 // 'provide'
 10322: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10326: 88 77 01                 a0 = a0 <u 0x1
 10329: 97 77 01                 a0 = a0 << 0x1
 10332: 7b 17 10                 u64 [sp + 0x10] = a0
 10335: 95 17 ff 07              a0 = sp + 0x7ff
 10339: 95 77 21 04              a0 = a0 + 0x421
 10343: 7b 67 48                 u64 [s1 + 0x48] = a0
 10346: 33 07 1a                 a0 = 0x1a
 10349: 7b 17 20                 u64 [sp + 0x20] = a0
 10352: 7b 67 50                 u64 [s1 + 0x50] = a0
 10355: 33 07 60 0b 01           a0 = 0x10b60
 10360: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10364: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10369: 49 21 c0 01              u64 [sp + 448] = 0
 10373: 95 17 ff 07              a0 = sp + 0x7ff
 10377: 95 77 e9 03              a0 = a0 + 0x3e9
 10381: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10385: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10390: 95 17 ff 07              a0 = sp + 0x7ff
 10394: 95 77 b9 03              a0 = a0 + 0x3b9
 10398: 95 18 a0 01              a1 = sp + 0x1a0
 10402: 50 20 08 01 0c 12        ra = 264, jump @777
      :                          @515 [@dyn 132]
 10408: 82 65 20                 s0 = u64 [s1 + 0x20]
 10411: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10414: 82 66 18                 s1 = u64 [s1 + 0x18]
 10417: 82 17 10                 a0 = u64 [sp + 0x10]
 10420: 33 08                    a1 = 0
 10422: 33 09                    a2 = 0
 10424: 64 5a                    a3 = s0
 10426: 33 00 0a 01              ra = 0x10a
 10430: 0a 64                    ecalli 100 // 'log'
 10432: 01                       fallthrough
      :                          @516 [@dyn 133]
 10433: 82 17 38                 a0 = u64 [sp + 0x38]
 10436: c8 67 07                 a0 = a0 + s1
 10439: 53 27 00 f0 23           jump @522 if a0 <u 4294963200
      :                          @517
 10444: 33 07 40 00 03           a0 = 0x30040
 10449: 95 77 00 10              a0 = a0 + 0x1000
 10453: 01                       fallthrough
      :                          @518
 10454: 82 78                    a1 = u64 [a0]
 10456: c9 87 09                 a2 = a0 - a1
 10459: ab 59 0f                 jump @522 if a2 != s0
      :                          @519
 10462: c9 68 09                 a2 = a1 - s1
 10465: 01                       fallthrough
      :                          @520
 10466: 82 7a                    a3 = u64 [a0]
 10468: ab 8a f2                 jump @518 if a3 != a1
      :                          @521
 10471: 7b 79                    u64 [a0] = a2
 10473: 01                       fallthrough
      :                          @522
 10474: 95 16 ff 07              s1 = sp + 0x7ff
 10478: 95 66 a1 03              s1 = s1 + 0x3a1
 10482: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10486: 33 08 07                 a1 = 0x7
 10489: 50 20 0c 01 25 1f        ra = 268, jump @1054
      :                          @523 [@dyn 134]
 10495: 95 18 58                 a1 = sp + 0x58
 10498: 33 09 03                 a2 = 0x3
 10501: 82 17 30                 a0 = u64 [sp + 0x30]
 10504: 0a 1b                    ecalli 27 // 'provide'
 10506: 82 18 20                 a1 = u64 [sp + 0x20]
 10509: 7b 68 50                 u64 [s1 + 0x50] = a1
 10512: 33 08 a8 0b 01           a1 = 0x10ba8
 10517: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10521: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10526: 49 21 c0 01              u64 [sp + 448] = 0
 10530: 95 18 ff 07              a1 = sp + 0x7ff
 10534: 95 88 e9 03              a1 = a1 + 0x3e9
 10538: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10542: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10547: 7b 67                    u64 [s1] = a0
 10549: 95 77 09                 a0 = a0 + 0x9
 10552: 88 77 01                 a0 = a0 <u 0x1
 10555: 97 77 01                 a0 = a0 << 0x1
 10558: 7b 17 20                 u64 [sp + 0x20] = a0
 10561: 7b 66 48                 u64 [s1 + 0x48] = s1
 10564: 95 17 ff 07              a0 = sp + 0x7ff
 10568: 95 77 b9 03              a0 = a0 + 0x3b9
 10572: 95 18 a0 01              a1 = sp + 0x1a0
 10576: 50 20 0e 01 5e 11        ra = 270, jump @777
      :                          @524 [@dyn 135]
 10582: 82 65 20                 s0 = u64 [s1 + 0x20]
 10585: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10588: 82 66 18                 s1 = u64 [s1 + 0x18]
 10591: 82 17 20                 a0 = u64 [sp + 0x20]
 10594: 33 08                    a1 = 0
 10596: 33 09                    a2 = 0
 10598: 64 5a                    a3 = s0
 10600: 33 00 10 01              ra = 0x110
 10604: 0a 64                    ecalli 100 // 'log'
 10606: 01                       fallthrough
      :                          @525 [@dyn 136]
 10607: 82 17 38                 a0 = u64 [sp + 0x38]
 10610: c8 67 07                 a0 = a0 + s1
 10613: 53 27 00 f0 23           jump @531 if a0 <u 4294963200
      :                          @526
 10618: 33 07 40 00 03           a0 = 0x30040
 10623: 95 77 00 10              a0 = a0 + 0x1000
 10627: 01                       fallthrough
      :                          @527
 10628: 82 78                    a1 = u64 [a0]
 10630: c9 87 09                 a2 = a0 - a1
 10633: ab 59 0f                 jump @531 if a2 != s0
      :                          @528
 10636: c9 68 09                 a2 = a1 - s1
 10639: 01                       fallthrough
      :                          @529
 10640: 82 7a                    a3 = u64 [a0]
 10642: ab 8a f2                 jump @527 if a3 != a1
      :                          @530
 10645: 7b 79                    u64 [a0] = a2
 10647: 01                       fallthrough
      :                          @531
 10648: 95 16 ff 07              s1 = sp + 0x7ff
 10652: 95 66 a1 03              s1 = s1 + 0x3a1
 10656: 82 67                    a0 = u64 [s1]
 10658: 33 08 08                 a1 = 0x8
 10661: 33 00 70 01              ra = 0x170
 10665: 28 75 1e                 jump @1054
      :                          @532 [@dyn 137]
 10668: 95 17 58                 a0 = sp + 0x58
 10671: 33 08 03                 a1 = 0x3
 10674: 0a 0e                    ecalli 14 // 'solicit'
 10676: 64 75                    s0 = a0
 10678: 7b 67 70                 u64 [s1 + 0x70] = a0
 10681: 33 08 01                 a1 = 0x1
 10684: 50 20 14 01 62 1e        ra = 276, jump @1054
      :                          @533 [@dyn 138]
 10690: 88 57 01                 a0 = s0 <u 0x1
 10693: 97 77 01                 a0 = a0 << 0x1
 10696: 7b 17 10                 u64 [sp + 0x10] = a0
 10699: 95 17 48                 a0 = sp + 0x48
 10702: 7b 67 18                 u64 [s1 + 0x18] = a0
 10705: 33 08 1a                 a1 = 0x1a
 10708: 7b 68 20                 u64 [s1 + 0x20] = a1
 10711: 95 17 ff 07              a0 = sp + 0x7ff
 10715: 95 77 11 04              a0 = a0 + 0x411
 10719: 7b 67 28                 u64 [s1 + 0x28] = a0
 10722: 7b 18 20                 u64 [sp + 0x20] = a1
 10725: 7b 68 30                 u64 [s1 + 0x30] = a1
 10728: 33 07 f0 07 01           a0 = 0x107f0
 10733: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10737: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10742: 49 21 c0 01              u64 [sp + 448] = 0
 10746: 95 17 ff 07              a0 = sp + 0x7ff
 10750: 95 77 b9 03              a0 = a0 + 0x3b9
 10754: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10758: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10763: 95 17 ff 07              a0 = sp + 0x7ff
 10767: 95 77 e9 03              a0 = a0 + 0x3e9
 10771: 95 18 a0 01              a1 = sp + 0x1a0
 10775: 50 20 16 01 97 10        ra = 278, jump @777
      :                          @534 [@dyn 139]
 10781: 95 17 ff 07              a0 = sp + 0x7ff
 10785: 95 77 a1 03              a0 = a0 + 0x3a1
 10789: 82 76 50                 s1 = u64 [a0 + 0x50]
 10792: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10795: 82 75 48                 s0 = u64 [a0 + 0x48]
 10798: 82 17 10                 a0 = u64 [sp + 0x10]
 10801: 33 08                    a1 = 0
 10803: 33 09                    a2 = 0
 10805: 64 6a                    a3 = s1
 10807: 33 00 18 01              ra = 0x118
 10811: 0a 64                    ecalli 100 // 'log'
 10813: 01                       fallthrough
      :                          @535 [@dyn 140]
 10814: 82 17 38                 a0 = u64 [sp + 0x38]
 10817: c8 57 07                 a0 = a0 + s0
 10820: 53 27 00 f0 23           jump @541 if a0 <u 4294963200
      :                          @536
 10825: 33 07 40 00 03           a0 = 0x30040
 10830: 95 77 00 10              a0 = a0 + 0x1000
 10834: 01                       fallthrough
      :                          @537
 10835: 82 78                    a1 = u64 [a0]
 10837: c9 87 09                 a2 = a0 - a1
 10840: ab 69 0f                 jump @541 if a2 != s1
      :                          @538
 10843: c9 58 09                 a2 = a1 - s0
 10846: 01                       fallthrough
      :                          @539
 10847: 82 7a                    a3 = u64 [a0]
 10849: ab 8a f2                 jump @537 if a3 != a1
      :                          @540
 10852: 7b 79                    u64 [a0] = a2
 10854: 01                       fallthrough
      :                          @541
 10855: 95 17 58                 a0 = sp + 0x58
 10858: 33 08 03                 a1 = 0x3
 10861: 0a 0d                    ecalli 13 // 'query'
 10863: 95 19 ff 07              a2 = sp + 0x7ff
 10867: 95 99 a1 03              a2 = a2 + 0x3a1
 10871: 95 18 48                 a1 = sp + 0x48
 10874: 7b 98 18                 u64 [a2 + 0x18] = a1
 10877: 95 18 ff 07              a1 = sp + 0x7ff
 10881: 95 88 19 04              a1 = a1 + 0x419
 10885: 7b 98 28                 u64 [a2 + 0x28] = a1
 10888: 82 18 20                 a1 = u64 [sp + 0x20]
 10891: 7b 98 20                 u64 [a2 + 0x20] = a1
 10894: 7b 98 30                 u64 [a2 + 0x30] = a1
 10897: 95 19 ff 07              a2 = sp + 0x7ff
 10901: 95 99 a1 03              a2 = a2 + 0x3a1
 10905: 33 08 e0 0b 01           a1 = 0x10be0
 10910: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10914: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10919: 49 21 c0 01              u64 [sp + 448] = 0
 10923: 95 18 ff 07              a1 = sp + 0x7ff
 10927: 95 88 b9 03              a1 = a1 + 0x3b9
 10931: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10935: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10940: 7b 97 78                 u64 [a2 + 0x78] = a0
 10943: 8e 77                    a0 = a0 >u 0
 10945: 97 77 01                 a0 = a0 << 0x1
 10948: 7b 17 20                 u64 [sp + 0x20] = a0
 10951: 95 17 ff 07              a0 = sp + 0x7ff
 10955: 95 77 e9 03              a0 = a0 + 0x3e9
 10959: 95 18 a0 01              a1 = sp + 0x1a0
 10963: 95 15 a0 01              s0 = sp + 0x1a0
 10967: 50 20 1a 01 d7 0f        ra = 282, jump @777
      :                          @542 [@dyn 141]
 10973: 95 17 ff 07              a0 = sp + 0x7ff
 10977: 95 77 a1 03              a0 = a0 + 0x3a1
 10981: 82 76 50                 s1 = u64 [a0 + 0x50]
 10984: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10987: 82 77 48                 a0 = u64 [a0 + 0x48]
 10990: 7b 17 10                 u64 [sp + 0x10] = a0
 10993: 82 17 20                 a0 = u64 [sp + 0x20]
 10996: 33 08                    a1 = 0
 10998: 33 09                    a2 = 0
 11000: 64 6a                    a3 = s1
 11002: 33 00 1c 01              ra = 0x11c
 11006: 0a 64                    ecalli 100 // 'log'
 11008: 01                       fallthrough
      :                          @543 [@dyn 142]
 11009: 82 1c 10                 a5 = u64 [sp + 0x10]
 11012: 82 17 38                 a0 = u64 [sp + 0x38]
 11015: c8 c7 07                 a0 = a0 + a5
 11018: 53 27 00 f0 23           jump @549 if a0 <u 4294963200
      :                          @544
 11023: 33 07 40 00 03           a0 = 0x30040
 11028: 95 77 00 10              a0 = a0 + 0x1000
 11032: 01                       fallthrough
      :                          @545
 11033: 82 78                    a1 = u64 [a0]
 11035: c9 87 09                 a2 = a0 - a1
 11038: ab 69 0f                 jump @549 if a2 != s1
      :                          @546
 11041: c9 c8 09                 a2 = a1 - a5
 11044: 01                       fallthrough
      :                          @547
 11045: 82 7a                    a3 = u64 [a0]
 11047: ab 8a f2                 jump @545 if a3 != a1
      :                          @548
 11050: 7b 79                    u64 [a0] = a2
 11052: 01                       fallthrough
      :                          @549
 11053: 95 17 ff 07              a0 = sp + 0x7ff
 11057: 95 77 a1 03              a0 = a0 + 0x3a1
 11061: 82 77 78                 a0 = u64 [a0 + 0x78]
 11064: 33 08 02                 a1 = 0x2
 11067: 50 20 1e 01 e3 1c        ra = 286, jump @1054
      :                          @550 [@dyn 143]
 11073: 33 09 00 0a              a2 = 0xa00
 11077: 95 17 a0 01              a0 = sp + 0x1a0
 11081: 33 08                    a1 = 0
 11083: 50 20 20 01 8c 12        ra = 288, jump @844
      :                          @551 [@dyn 144]
 11089: 33 06 50                 s1 = 0x50
 11092: 01                       fallthrough
      :                          @552
 11093: 95 18 58                 a1 = sp + 0x58
 11096: 33 09 20                 a2 = 0x20
 11099: 64 57                    a0 = s0
 11101: 50 20 22 01 c8 11        ra = 290, jump @826
      :                          @553 [@dyn 145]
 11107: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 11110: 95 55 20                 s0 = s0 + 0x20
 11113: 52 06 ec                 jump @552 if s1 != 0
      :                          @554
 11116: 95 18 a0 01              a1 = sp + 0x1a0
 11120: 33 07                    a0 = 0
 11122: 0a 06                    ecalli 6 // 'assign'
 11124: 95 15 ff 07              s0 = sp + 0x7ff
 11128: 95 55 a1 03              s0 = s0 + 0x3a1
 11132: 7b 57 80 00              u64 [s0 + 0x80] = a0
 11136: 88 77 01                 a0 = a0 <u 0x1
 11139: 97 77 01                 a0 = a0 << 0x1
 11142: 7b 17 20                 u64 [sp + 0x20] = a0
 11145: 95 17 48                 a0 = sp + 0x48
 11148: 7b 57 48                 u64 [s0 + 0x48] = a0
 11151: 33 07 1a                 a0 = 0x1a
 11154: 7b 57 50                 u64 [s0 + 0x50] = a0
 11157: 95 18 ff 07              a1 = sp + 0x7ff
 11161: 95 88 21 04              a1 = a1 + 0x421
 11165: 7b 58 58                 u64 [s0 + 0x58] = a1
 11168: 7b 57 60                 u64 [s0 + 0x60] = a0
 11171: 33 07 20 0c 01           a0 = 0x10c20
 11176: 7b 57 18                 u64 [s0 + 0x18] = a0
 11179: 49 15 20 03              u64 [s0 + 32] = 0x3
 11183: 49 15 38                 u64 [s0 + 56] = 0
 11186: 95 17 ff 07              a0 = sp + 0x7ff
 11190: 95 77 e9 03              a0 = a0 + 0x3e9
 11194: 7b 57 28                 u64 [s0 + 0x28] = a0
 11197: 49 15 30 02              u64 [s0 + 48] = 0x2
 11201: 95 17 ff 07              a0 = sp + 0x7ff
 11205: 95 77 a1 03              a0 = a0 + 0x3a1
 11209: 95 18 ff 07              a1 = sp + 0x7ff
 11213: 95 88 b9 03              a1 = a1 + 0x3b9
 11217: 50 20 24 01 dd 0e        ra = 292, jump @777
      :                          @555 [@dyn 146]
 11223: 82 56 08                 s1 = u64 [s0 + 0x8]
 11226: 82 5b 10                 a4 = u64 [s0 + 0x10]
 11229: 82 55                    s0 = u64 [s0]
 11231: 82 17 20                 a0 = u64 [sp + 0x20]
 11234: 33 08                    a1 = 0
 11236: 33 09                    a2 = 0
 11238: 64 6a                    a3 = s1
 11240: 33 00 26 01              ra = 0x126
 11244: 0a 64                    ecalli 100 // 'log'
 11246: 01                       fallthrough
      :                          @556 [@dyn 147]
 11247: 82 17 38                 a0 = u64 [sp + 0x38]
 11250: c8 57 07                 a0 = a0 + s0
 11253: 53 27 00 f0 69 05        jump @627 if a0 <u 4294963200
      :                          @557
 11259: 33 07 40 00 03           a0 = 0x30040
 11264: 95 77 00 10              a0 = a0 + 0x1000
 11268: 01                       fallthrough
      :                          @558
 11269: 82 78                    a1 = u64 [a0]
 11271: c9 87 09                 a2 = a0 - a1
 11274: ab 69 54 05              jump @627 if a2 != s1
      :                          @559
 11278: c9 58 09                 a2 = a1 - s0
 11281: 01                       fallthrough
      :                          @560
 11282: 82 7a                    a3 = u64 [a0]
 11284: ab 8a f1                 jump @558 if a3 != a1
      :                          @561
 11287: 7b 79                    u64 [a0] = a2
 11289: 33 0b                    a4 = 0
 11291: 01                       fallthrough
      :                          @562
 11292: ab 8a e9                 jump @558 if a3 != a1
      :                          @563
 11295: 28 3f 05                 jump @627
      :                          @564 [@dyn 148]
 11298: 33 05 03                 s0 = 0x3
 11301: 95 17 58                 a0 = sp + 0x58
 11304: 33 08 03                 a1 = 0x3
 11307: 0a 0f                    ecalli 15 // 'forget'
 11309: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11313: 88 77 01                 a0 = a0 <u 0x1
 11316: 97 77 01                 a0 = a0 << 0x1
 11319: 7b 17 10                 u64 [sp + 0x10] = a0
 11322: 95 17 48                 a0 = sp + 0x48
 11325: 7b 67 18                 u64 [s1 + 0x18] = a0
 11328: 33 08 1a                 a1 = 0x1a
 11331: 7b 68 20                 u64 [s1 + 0x20] = a1
 11334: 95 17 ff 07              a0 = sp + 0x7ff
 11338: 95 77 21 04              a0 = a0 + 0x421
 11342: 7b 67 28                 u64 [s1 + 0x28] = a0
 11345: 7b 18 20                 u64 [sp + 0x20] = a1
 11348: 7b 68 30                 u64 [s1 + 0x30] = a1
 11351: 33 07 e0 08 01           a0 = 0x108e0
 11356: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11360: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11364: 49 21 c0 01              u64 [sp + 448] = 0
 11368: 95 17 ff 07              a0 = sp + 0x7ff
 11372: 95 77 b9 03              a0 = a0 + 0x3b9
 11376: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11380: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11385: 95 17 ff 07              a0 = sp + 0x7ff
 11389: 95 77 e9 03              a0 = a0 + 0x3e9
 11393: 95 18 a0 01              a1 = sp + 0x1a0
 11397: 50 20 2a 01 29 0e        ra = 298, jump @777
      :                          @565 [@dyn 149]
 11403: 95 17 ff 07              a0 = sp + 0x7ff
 11407: 95 77 a1 03              a0 = a0 + 0x3a1
 11411: 82 76 50                 s1 = u64 [a0 + 0x50]
 11414: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11417: 82 75 48                 s0 = u64 [a0 + 0x48]
 11420: 82 17 10                 a0 = u64 [sp + 0x10]
 11423: 33 08                    a1 = 0
 11425: 33 09                    a2 = 0
 11427: 64 6a                    a3 = s1
 11429: 33 00 2c 01              ra = 0x12c
 11433: 0a 64                    ecalli 100 // 'log'
 11435: 01                       fallthrough
      :                          @566 [@dyn 150]
 11436: 82 17 38                 a0 = u64 [sp + 0x38]
 11439: c8 57 07                 a0 = a0 + s0
 11442: 53 27 00 f0 23           jump @572 if a0 <u 4294963200
      :                          @567
 11447: 33 07 40 00 03           a0 = 0x30040
 11452: 95 77 00 10              a0 = a0 + 0x1000
 11456: 01                       fallthrough
      :                          @568
 11457: 82 78                    a1 = u64 [a0]
 11459: c9 87 09                 a2 = a0 - a1
 11462: ab 69 0f                 jump @572 if a2 != s1
      :                          @569
 11465: c9 58 09                 a2 = a1 - s0
 11468: 01                       fallthrough
      :                          @570
 11469: 82 7a                    a3 = u64 [a0]
 11471: ab 8a f2                 jump @568 if a3 != a1
      :                          @571
 11474: 7b 79                    u64 [a0] = a2
 11476: 01                       fallthrough
      :                          @572
 11477: 95 16 ff 07              s1 = sp + 0x7ff
 11481: 95 66 a1 03              s1 = s1 + 0x3a1
 11485: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11489: 33 08 01                 a1 = 0x1
 11492: 50 20 2e 01 3a 1b        ra = 302, jump @1054
      :                          @573 [@dyn 151]
 11498: 95 17 58                 a0 = sp + 0x58
 11501: 33 08 03                 a1 = 0x3
 11504: 0a 0d                    ecalli 13 // 'query'
 11506: 95 18 48                 a1 = sp + 0x48
 11509: 7b 68 18                 u64 [s1 + 0x18] = a1
 11512: 82 18 20                 a1 = u64 [sp + 0x20]
 11515: 7b 68 20                 u64 [s1 + 0x20] = a1
 11518: 7b 68 30                 u64 [s1 + 0x30] = a1
 11521: 33 08 50 0c 01           a1 = 0x10c50
 11526: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11530: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11535: 49 21 c0 01              u64 [sp + 448] = 0
 11539: 95 18 ff 07              a1 = sp + 0x7ff
 11543: 95 88 b9 03              a1 = a1 + 0x3b9
 11547: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11551: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11556: 7b 67                    u64 [s1] = a0
 11558: 8e 77                    a0 = a0 >u 0
 11560: 97 77 01                 a0 = a0 << 0x1
 11563: 7b 17 20                 u64 [sp + 0x20] = a0
 11566: 7b 66 28                 u64 [s1 + 0x28] = s1
 11569: 95 17 ff 07              a0 = sp + 0x7ff
 11573: 95 77 e9 03              a0 = a0 + 0x3e9
 11577: 95 18 a0 01              a1 = sp + 0x1a0
 11581: 50 20 30 01 71 0d        ra = 304, jump @777
      :                          @574 [@dyn 152]
 11587: 82 65 50                 s0 = u64 [s1 + 0x50]
 11590: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11593: 82 66 48                 s1 = u64 [s1 + 0x48]
 11596: 82 17 20                 a0 = u64 [sp + 0x20]
 11599: 33 08                    a1 = 0
 11601: 33 09                    a2 = 0
 11603: 64 5a                    a3 = s0
 11605: 33 00 32 01              ra = 0x132
 11609: 0a 64                    ecalli 100 // 'log'
 11611: 01                       fallthrough
      :                          @575 [@dyn 153]
 11612: 82 17 38                 a0 = u64 [sp + 0x38]
 11615: c8 67 07                 a0 = a0 + s1
 11618: 53 27 00 f0 9c 01        jump @600 if a0 <u 4294963200
      :                          @576
 11624: 33 07 40 00 03           a0 = 0x30040
 11629: 95 77 00 10              a0 = a0 + 0x1000
 11633: 01                       fallthrough
      :                          @577
 11634: 82 78                    a1 = u64 [a0]
 11636: c9 87 09                 a2 = a0 - a1
 11639: ab 59 87 01              jump @600 if a2 != s0
      :                          @578
 11643: c9 68 09                 a2 = a1 - s1
 11646: 01                       fallthrough
      :                          @579
 11647: 82 7a                    a3 = u64 [a0]
 11649: ab 8a f1                 jump @577 if a3 != a1
      :                          @580
 11652: 7b 79                    u64 [a0] = a2
 11654: 33 0b                    a4 = 0
 11656: 01                       fallthrough
      :                          @581
 11657: ab 8a e9                 jump @577 if a3 != a1
      :                          @582
 11660: 28 72 01                 jump @600
      :                          @583 [@dyn 154]
 11663: 33 05 03                 s0 = 0x3
 11666: 95 18 58                 a1 = sp + 0x58
 11669: 95 19 98 00              a2 = sp + 0x98
 11673: 33 0b 03                 a4 = 0x3
 11676: 82 17 30                 a0 = u64 [sp + 0x30]
 11679: 33 0a                    a3 = 0
 11681: 0a 01                    ecalli 1 // 'lookup'
 11683: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11687: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 11690: 88 77 01                 a0 = a0 <u 0x1
 11693: 97 77 01                 a0 = a0 << 0x1
 11696: 7b 17 10                 u64 [sp + 0x10] = a0
 11699: 95 17 48                 a0 = sp + 0x48
 11702: 7b 67 18                 u64 [s1 + 0x18] = a0
 11705: 33 08 1a                 a1 = 0x1a
 11708: 7b 68 20                 u64 [s1 + 0x20] = a1
 11711: 95 17 ff 07              a0 = sp + 0x7ff
 11715: 95 77 21 04              a0 = a0 + 0x421
 11719: 7b 67 28                 u64 [s1 + 0x28] = a0
 11722: 7b 18 20                 u64 [sp + 0x20] = a1
 11725: 7b 68 30                 u64 [s1 + 0x30] = a1
 11728: 33 07 98 0c 01           a0 = 0x10c98
 11733: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11737: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11741: 49 21 c0 01              u64 [sp + 448] = 0
 11745: 95 17 ff 07              a0 = sp + 0x7ff
 11749: 95 77 b9 03              a0 = a0 + 0x3b9
 11753: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11757: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11762: 95 17 ff 07              a0 = sp + 0x7ff
 11766: 95 77 e9 03              a0 = a0 + 0x3e9
 11770: 95 18 a0 01              a1 = sp + 0x1a0
 11774: 50 20 36 01 b0 0c        ra = 310, jump @777
      :                          @584 [@dyn 155]
 11780: 95 17 ff 07              a0 = sp + 0x7ff
 11784: 95 77 a1 03              a0 = a0 + 0x3a1
 11788: 82 76 50                 s1 = u64 [a0 + 0x50]
 11791: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11794: 82 75 48                 s0 = u64 [a0 + 0x48]
 11797: 82 17 10                 a0 = u64 [sp + 0x10]
 11800: 33 08                    a1 = 0
 11802: 33 09                    a2 = 0
 11804: 64 6a                    a3 = s1
 11806: 33 00 38 01              ra = 0x138
 11810: 0a 64                    ecalli 100 // 'log'
 11812: 01                       fallthrough
      :                          @585 [@dyn 156]
 11813: 82 17 38                 a0 = u64 [sp + 0x38]
 11816: c8 57 07                 a0 = a0 + s0
 11819: 53 27 00 f0 23           jump @591 if a0 <u 4294963200
      :                          @586
 11824: 33 07 40 00 03           a0 = 0x30040
 11829: 95 77 00 10              a0 = a0 + 0x1000
 11833: 01                       fallthrough
      :                          @587
 11834: 82 78                    a1 = u64 [a0]
 11836: c9 87 09                 a2 = a0 - a1
 11839: ab 69 0f                 jump @591 if a2 != s1
      :                          @588
 11842: c9 58 09                 a2 = a1 - s0
 11845: 01                       fallthrough
      :                          @589
 11846: 82 7a                    a3 = u64 [a0]
 11848: ab 8a f2                 jump @587 if a3 != a1
      :                          @590
 11851: 7b 79                    u64 [a0] = a2
 11853: 01                       fallthrough
      :                          @591
 11854: 95 16 ff 07              s1 = sp + 0x7ff
 11858: 95 66 a1 03              s1 = s1 + 0x3a1
 11862: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11866: 33 08 01                 a1 = 0x1
 11869: 50 20 3a 01 c1 19        ra = 314, jump @1054
      :                          @592 [@dyn 157]
 11875: 95 17 58                 a0 = sp + 0x58
 11878: 33 08 03                 a1 = 0x3
 11881: 0a 0d                    ecalli 13 // 'query'
 11883: 95 18 48                 a1 = sp + 0x48
 11886: 7b 68 18                 u64 [s1 + 0x18] = a1
 11889: 82 18 20                 a1 = u64 [sp + 0x20]
 11892: 7b 68 20                 u64 [s1 + 0x20] = a1
 11895: 7b 68 30                 u64 [s1 + 0x30] = a1
 11898: 33 08 28 09 01           a1 = 0x10928
 11903: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11907: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11912: 49 21 c0 01              u64 [sp + 448] = 0
 11916: 95 18 ff 07              a1 = sp + 0x7ff
 11920: 95 88 b9 03              a1 = a1 + 0x3b9
 11924: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11928: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11933: 7b 67                    u64 [s1] = a0
 11935: 8e 77                    a0 = a0 >u 0
 11937: 97 77 01                 a0 = a0 << 0x1
 11940: 7b 17 20                 u64 [sp + 0x20] = a0
 11943: 7b 66 28                 u64 [s1 + 0x28] = s1
 11946: 95 17 ff 07              a0 = sp + 0x7ff
 11950: 95 77 e9 03              a0 = a0 + 0x3e9
 11954: 95 18 a0 01              a1 = sp + 0x1a0
 11958: 50 20 3c 01 f8 0b        ra = 316, jump @777
      :                          @593 [@dyn 158]
 11964: 82 65 50                 s0 = u64 [s1 + 0x50]
 11967: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11970: 82 66 48                 s1 = u64 [s1 + 0x48]
 11973: 82 17 20                 a0 = u64 [sp + 0x20]
 11976: 33 08                    a1 = 0
 11978: 33 09                    a2 = 0
 11980: 64 5a                    a3 = s0
 11982: 33 00 3e 01              ra = 0x13e
 11986: 0a 64                    ecalli 100 // 'log'
 11988: 01                       fallthrough
      :                          @594 [@dyn 159]
 11989: 82 17 38                 a0 = u64 [sp + 0x38]
 11992: c8 67 07                 a0 = a0 + s1
 11995: 53 27 00 f0 23           jump @600 if a0 <u 4294963200
      :                          @595
 12000: 33 07 40 00 03           a0 = 0x30040
 12005: 95 77 00 10              a0 = a0 + 0x1000
 12009: 01                       fallthrough
      :                          @596
 12010: 82 78                    a1 = u64 [a0]
 12012: c9 87 09                 a2 = a0 - a1
 12015: ab 59 0f                 jump @600 if a2 != s0
      :                          @597
 12018: c9 68 09                 a2 = a1 - s1
 12021: 01                       fallthrough
      :                          @598
 12022: 82 7a                    a3 = u64 [a0]
 12024: ab 8a f2                 jump @596 if a3 != a1
      :                          @599
 12027: 7b 79                    u64 [a0] = a2
 12029: 01                       fallthrough
      :                          @600
 12030: 95 16 ff 07              s1 = sp + 0x7ff
 12034: 95 66 a1 03              s1 = s1 + 0x3a1
 12038: 82 67                    a0 = u64 [s1]
 12040: 33 08 02                 a1 = 0x2
 12043: 33 00 70 01              ra = 0x170
 12047: 28 0f 19                 jump @1054
      :                          @601 [@dyn 160]
 12050: 33 05 03                 s0 = 0x3
 12053: 95 17 58                 a0 = sp + 0x58
 12056: 33 08 03                 a1 = 0x3
 12059: 33 09 8f 03              a2 = 0x38f
 12063: 33 0a 8f 03              a3 = 0x38f
 12067: 0a 09                    ecalli 9 // 'new'
 12069: 8e 78                    a1 = a0 >u 0
 12071: 7b 67 70                 u64 [s1 + 0x70] = a0
 12074: 97 88 01                 a1 = a1 << 0x1
 12077: 7b 18 10                 u64 [sp + 0x10] = a1
 12080: 95 17 48                 a0 = sp + 0x48
 12083: 7b 67 18                 u64 [s1 + 0x18] = a0
 12086: 33 08 1a                 a1 = 0x1a
 12089: 7b 68 20                 u64 [s1 + 0x20] = a1
 12092: 95 17 ff 07              a0 = sp + 0x7ff
 12096: 95 77 11 04              a0 = a0 + 0x411
 12100: 7b 67 28                 u64 [s1 + 0x28] = a0
 12103: 7b 18 20                 u64 [sp + 0x20] = a1
 12106: 7b 68 30                 u64 [s1 + 0x30] = a1
 12109: 33 07 f0 0c 01           a0 = 0x10cf0
 12114: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12118: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12122: 49 21 c0 01              u64 [sp + 448] = 0
 12126: 95 17 ff 07              a0 = sp + 0x7ff
 12130: 95 77 b9 03              a0 = a0 + 0x3b9
 12134: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12138: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12143: 95 17 ff 07              a0 = sp + 0x7ff
 12147: 95 77 e9 03              a0 = a0 + 0x3e9
 12151: 95 18 a0 01              a1 = sp + 0x1a0
 12155: 50 20 42 01 33 0b        ra = 322, jump @777
      :                          @602 [@dyn 161]
 12161: 95 17 ff 07              a0 = sp + 0x7ff
 12165: 95 77 a1 03              a0 = a0 + 0x3a1
 12169: 82 76 50                 s1 = u64 [a0 + 0x50]
 12172: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12175: 82 75 48                 s0 = u64 [a0 + 0x48]
 12178: 82 17 10                 a0 = u64 [sp + 0x10]
 12181: 33 08                    a1 = 0
 12183: 33 09                    a2 = 0
 12185: 64 6a                    a3 = s1
 12187: 33 00 44 01              ra = 0x144
 12191: 0a 64                    ecalli 100 // 'log'
 12193: 01                       fallthrough
      :                          @603 [@dyn 162]
 12194: 82 17 38                 a0 = u64 [sp + 0x38]
 12197: c8 57 07                 a0 = a0 + s0
 12200: 53 27 00 f0 23           jump @609 if a0 <u 4294963200
      :                          @604
 12205: 33 07 40 00 03           a0 = 0x30040
 12210: 95 77 00 10              a0 = a0 + 0x1000
 12214: 01                       fallthrough
      :                          @605
 12215: 82 78                    a1 = u64 [a0]
 12217: c9 87 09                 a2 = a0 - a1
 12220: ab 69 0f                 jump @609 if a2 != s1
      :                          @606
 12223: c9 58 09                 a2 = a1 - s0
 12226: 01                       fallthrough
      :                          @607
 12227: 82 7a                    a3 = u64 [a0]
 12229: ab 8a f2                 jump @605 if a3 != a1
      :                          @608
 12232: 7b 79                    u64 [a0] = a2
 12234: 01                       fallthrough
      :                          @609
 12235: 95 16 ff 07              s1 = sp + 0x7ff
 12239: 95 66 a1 03              s1 = s1 + 0x3a1
 12243: 82 67 70                 a0 = u64 [s1 + 0x70]
 12246: 33 08 01                 a1 = 0x1
 12249: 50 20 46 01 45 18        ra = 326, jump @1054
      :                          @610 [@dyn 163]
 12255: 95 17 58                 a0 = sp + 0x58
 12258: 33 08 8f 03              a1 = 0x38f
 12262: 33 09 8f 03              a2 = 0x38f
 12266: 0a 0a                    ecalli 10 // 'upgrade'
 12268: 95 18 48                 a1 = sp + 0x48
 12271: 7b 68 18                 u64 [s1 + 0x18] = a1
 12274: 95 18 ff 07              a1 = sp + 0x7ff
 12278: 95 88 19 04              a1 = a1 + 0x419
 12282: 7b 68 28                 u64 [s1 + 0x28] = a1
 12285: 82 18 20                 a1 = u64 [sp + 0x20]
 12288: 7b 68 20                 u64 [s1 + 0x20] = a1
 12291: 7b 68 30                 u64 [s1 + 0x30] = a1
 12294: 33 08 30 0d 01           a1 = 0x10d30
 12299: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12303: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12308: 49 21 c0 01              u64 [sp + 448] = 0
 12312: 95 18 ff 07              a1 = sp + 0x7ff
 12316: 95 88 b9 03              a1 = a1 + 0x3b9
 12320: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12324: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12329: 7b 67 78                 u64 [s1 + 0x78] = a0
 12332: 88 77 01                 a0 = a0 <u 0x1
 12335: 97 77 01                 a0 = a0 << 0x1
 12338: 7b 17 20                 u64 [sp + 0x20] = a0
 12341: 95 17 ff 07              a0 = sp + 0x7ff
 12345: 95 77 e9 03              a0 = a0 + 0x3e9
 12349: 95 18 a0 01              a1 = sp + 0x1a0
 12353: 50 20 48 01 6d 0a        ra = 328, jump @777
      :                          @611 [@dyn 164]
 12359: 82 65 50                 s0 = u64 [s1 + 0x50]
 12362: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12365: 82 66 48                 s1 = u64 [s1 + 0x48]
 12368: 82 17 20                 a0 = u64 [sp + 0x20]
 12371: 33 08                    a1 = 0
 12373: 33 09                    a2 = 0
 12375: 64 5a                    a3 = s0
 12377: 33 00 4a 01              ra = 0x14a
 12381: 0a 64                    ecalli 100 // 'log'
 12383: 01                       fallthrough
      :                          @612 [@dyn 165]
 12384: 82 17 38                 a0 = u64 [sp + 0x38]
 12387: c8 67 07                 a0 = a0 + s1
 12390: 53 27 00 f0 23           jump @618 if a0 <u 4294963200
      :                          @613
 12395: 33 07 40 00 03           a0 = 0x30040
 12400: 95 77 00 10              a0 = a0 + 0x1000
 12404: 01                       fallthrough
      :                          @614
 12405: 82 78                    a1 = u64 [a0]
 12407: c9 87 09                 a2 = a0 - a1
 12410: ab 59 0f                 jump @618 if a2 != s0
      :                          @615
 12413: c9 68 09                 a2 = a1 - s1
 12416: 01                       fallthrough
      :                          @616
 12417: 82 7a                    a3 = u64 [a0]
 12419: ab 8a f2                 jump @614 if a3 != a1
      :                          @617
 12422: 7b 79                    u64 [a0] = a2
 12424: 01                       fallthrough
      :                          @618
 12425: 95 15 ff 07              s0 = sp + 0x7ff
 12429: 95 55 a1 03              s0 = s0 + 0x3a1
 12433: 82 57 78                 a0 = u64 [s0 + 0x78]
 12436: 33 08 02                 a1 = 0x2
 12439: 33 06 02                 s1 = 0x2
 12442: 50 20 4c 01 84 17        ra = 332, jump @1054
      :                          @619 [@dyn 166]
 12448: 48 05 8f 03              u32 [s0 + 0] = 0x38f
 12452: 48 15 08                 u32 [s0 + 8] = 0
 12455: 48 15 04 8f 03           u32 [s0 + 4] = 0x38f
 12460: 33 08 01                 a1 = 0x1
 12463: 33 09 01                 a2 = 0x1
 12466: 95 1a ff 07              a3 = sp + 0x7ff
 12470: 95 aa a1 03              a3 = a3 + 0x3a1
 12474: 33 0b 01                 a4 = 0x1
 12477: 33 07                    a0 = 0
 12479: 0a 05                    ecalli 5 // 'bless'
 12481: 7b 57 80 00              u64 [s0 + 0x80] = a0
 12485: 88 77 01                 a0 = a0 <u 0x1
 12488: 97 77 01                 a0 = a0 << 0x1
 12491: 7b 17 20                 u64 [sp + 0x20] = a0
 12494: 95 17 48                 a0 = sp + 0x48
 12497: 7b 57 18                 u64 [s0 + 0x18] = a0
 12500: 33 07 1a                 a0 = 0x1a
 12503: 7b 57 20                 u64 [s0 + 0x20] = a0
 12506: 95 18 ff 07              a1 = sp + 0x7ff
 12510: 95 88 21 04              a1 = a1 + 0x421
 12514: 7b 58 28                 u64 [s0 + 0x28] = a1
 12517: 7b 57 30                 u64 [s0 + 0x30] = a0
 12520: 33 07 70 0d 01           a0 = 0x10d70
 12525: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12529: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12534: 49 21 c0 01              u64 [sp + 448] = 0
 12538: 95 17 ff 07              a0 = sp + 0x7ff
 12542: 95 77 b9 03              a0 = a0 + 0x3b9
 12546: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12550: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 12554: 95 17 ff 07              a0 = sp + 0x7ff
 12558: 95 77 e9 03              a0 = a0 + 0x3e9
 12562: 95 18 a0 01              a1 = sp + 0x1a0
 12566: 50 20 4e 01 98 09        ra = 334, jump @777
      :                          @620 [@dyn 167]
 12572: 82 56 50                 s1 = u64 [s0 + 0x50]
 12575: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12578: 82 55 48                 s0 = u64 [s0 + 0x48]
 12581: 82 17 20                 a0 = u64 [sp + 0x20]
 12584: 33 08                    a1 = 0
 12586: 33 09                    a2 = 0
 12588: 64 6a                    a3 = s1
 12590: 33 00 50 01              ra = 0x150
 12594: 0a 64                    ecalli 100 // 'log'
 12596: 01                       fallthrough
      :                          @621 [@dyn 168]
 12597: 82 17 38                 a0 = u64 [sp + 0x38]
 12600: c8 57 07                 a0 = a0 + s0
 12603: 53 27 00 f0 23           jump @627 if a0 <u 4294963200
      :                          @622
 12608: 33 07 40 00 03           a0 = 0x30040
 12613: 95 77 00 10              a0 = a0 + 0x1000
 12617: 01                       fallthrough
      :                          @623
 12618: 82 78                    a1 = u64 [a0]
 12620: c9 87 09                 a2 = a0 - a1
 12623: ab 69 0f                 jump @627 if a2 != s1
      :                          @624
 12626: c9 58 09                 a2 = a1 - s0
 12629: 01                       fallthrough
      :                          @625
 12630: 82 7a                    a3 = u64 [a0]
 12632: ab 8a f2                 jump @623 if a3 != a1
      :                          @626
 12635: 7b 79                    u64 [a0] = a2
 12637: 01                       fallthrough
      :                          @627
 12638: 95 16 ff 07              s1 = sp + 0x7ff
 12642: 95 66 a1 03              s1 = s1 + 0x3a1
 12646: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12650: 33 08 05                 a1 = 0x5
 12653: 33 00 70 01              ra = 0x170
 12657: 28 ad 16                 jump @1054
      :                          @628 [@dyn 169]
 12660: 33 05 03                 s0 = 0x3
 12663: 95 17 55                 a0 = sp + 0x55
 12666: 33 08 03                 a1 = 0x3
 12669: 33 09                    a2 = 0
 12671: 33 0a                    a3 = 0
 12673: 0a 03                    ecalli 3 // 'write'
 12675: 7b 67 68                 u64 [s1 + 0x68] = a0
 12678: 95 77 01                 a0 = a0 + 0x1
 12681: 88 77 01                 a0 = a0 <u 0x1
 12684: 97 77 01                 a0 = a0 << 0x1
 12687: 7b 17 10                 u64 [sp + 0x10] = a0
 12690: 95 17 48                 a0 = sp + 0x48
 12693: 7b 67 18                 u64 [s1 + 0x18] = a0
 12696: 33 08 1a                 a1 = 0x1a
 12699: 7b 68 20                 u64 [s1 + 0x20] = a1
 12702: 95 17 ff 07              a0 = sp + 0x7ff
 12706: 95 77 09 04              a0 = a0 + 0x409
 12710: 7b 67 28                 u64 [s1 + 0x28] = a0
 12713: 7b 18 20                 u64 [sp + 0x20] = a1
 12716: 7b 68 30                 u64 [s1 + 0x30] = a1
 12719: 33 07 b8 0d 01           a0 = 0x10db8
 12724: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12728: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12732: 49 21 c0 01              u64 [sp + 448] = 0
 12736: 95 17 ff 07              a0 = sp + 0x7ff
 12740: 95 77 b9 03              a0 = a0 + 0x3b9
 12744: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12748: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12753: 95 17 ff 07              a0 = sp + 0x7ff
 12757: 95 77 e9 03              a0 = a0 + 0x3e9
 12761: 95 18 a0 01              a1 = sp + 0x1a0
 12765: 50 20 54 01 d1 08        ra = 340, jump @777
      :                          @629 [@dyn 170]
 12771: 95 17 ff 07              a0 = sp + 0x7ff
 12775: 95 77 a1 03              a0 = a0 + 0x3a1
 12779: 82 76 50                 s1 = u64 [a0 + 0x50]
 12782: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12785: 82 75 48                 s0 = u64 [a0 + 0x48]
 12788: 82 17 10                 a0 = u64 [sp + 0x10]
 12791: 33 08                    a1 = 0
 12793: 33 09                    a2 = 0
 12795: 64 6a                    a3 = s1
 12797: 33 00 56 01              ra = 0x156
 12801: 0a 64                    ecalli 100 // 'log'
 12803: 01                       fallthrough
      :                          @630 [@dyn 171]
 12804: 82 17 38                 a0 = u64 [sp + 0x38]
 12807: c8 57 07                 a0 = a0 + s0
 12810: 53 27 00 f0 23           jump @636 if a0 <u 4294963200
      :                          @631
 12815: 33 07 40 00 03           a0 = 0x30040
 12820: 95 77 00 10              a0 = a0 + 0x1000
 12824: 01                       fallthrough
      :                          @632
 12825: 82 78                    a1 = u64 [a0]
 12827: c9 87 09                 a2 = a0 - a1
 12830: ab 69 0f                 jump @636 if a2 != s1
      :                          @633
 12833: c9 58 09                 a2 = a1 - s0
 12836: 01                       fallthrough
      :                          @634
 12837: 82 7a                    a3 = u64 [a0]
 12839: ab 8a f2                 jump @632 if a3 != a1
      :                          @635
 12842: 7b 79                    u64 [a0] = a2
 12844: 01                       fallthrough
      :                          @636
 12845: 95 16 ff 07              s1 = sp + 0x7ff
 12849: 95 66 a1 03              s1 = s1 + 0x3a1
 12853: 82 67 68                 a0 = u64 [s1 + 0x68]
 12856: 33 08 01                 a1 = 0x1
 12859: 50 20 58 01 e3 15        ra = 344, jump @1054
      :                          @637 [@dyn 172]
 12865: 95 17 55                 a0 = sp + 0x55
 12868: 33 08 03                 a1 = 0x3
 12871: 95 19 52                 a2 = sp + 0x52
 12874: 33 0a 03                 a3 = 0x3
 12877: 0a 03                    ecalli 3 // 'write'
 12879: 95 18 48                 a1 = sp + 0x48
 12882: 7b 68 18                 u64 [s1 + 0x18] = a1
 12885: 95 18 ff 07              a1 = sp + 0x7ff
 12889: 95 88 11 04              a1 = a1 + 0x411
 12893: 7b 68 28                 u64 [s1 + 0x28] = a1
 12896: 82 18 20                 a1 = u64 [sp + 0x20]
 12899: 7b 68 20                 u64 [s1 + 0x20] = a1
 12902: 7b 68 30                 u64 [s1 + 0x30] = a1
 12905: 33 08 e8 0d 01           a1 = 0x10de8
 12910: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12914: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12919: 49 21 c0 01              u64 [sp + 448] = 0
 12923: 95 18 ff 07              a1 = sp + 0x7ff
 12927: 95 88 b9 03              a1 = a1 + 0x3b9
 12931: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12935: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12940: 7b 67 70                 u64 [s1 + 0x70] = a0
 12943: 95 77 01                 a0 = a0 + 0x1
 12946: 88 77 01                 a0 = a0 <u 0x1
 12949: 97 77 01                 a0 = a0 << 0x1
 12952: 7b 17 20                 u64 [sp + 0x20] = a0
 12955: 95 17 ff 07              a0 = sp + 0x7ff
 12959: 95 77 e9 03              a0 = a0 + 0x3e9
 12963: 95 18 a0 01              a1 = sp + 0x1a0
 12967: 50 20 5a 01 07 08        ra = 346, jump @777
      :                          @638 [@dyn 173]
 12973: 82 65 50                 s0 = u64 [s1 + 0x50]
 12976: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12979: 82 66 48                 s1 = u64 [s1 + 0x48]
 12982: 82 17 20                 a0 = u64 [sp + 0x20]
 12985: 33 08                    a1 = 0
 12987: 33 09                    a2 = 0
 12989: 64 5a                    a3 = s0
 12991: 33 00 5c 01              ra = 0x15c
 12995: 0a 64                    ecalli 100 // 'log'
 12997: 01                       fallthrough
      :                          @639 [@dyn 174]
 12998: 82 17 38                 a0 = u64 [sp + 0x38]
 13001: c8 67 07                 a0 = a0 + s1
 13004: 53 27 00 f0 23           jump @645 if a0 <u 4294963200
      :                          @640
 13009: 33 07 40 00 03           a0 = 0x30040
 13014: 95 77 00 10              a0 = a0 + 0x1000
 13018: 01                       fallthrough
      :                          @641
 13019: 82 78                    a1 = u64 [a0]
 13021: c9 87 09                 a2 = a0 - a1
 13024: ab 59 0f                 jump @645 if a2 != s0
      :                          @642
 13027: c9 68 09                 a2 = a1 - s1
 13030: 01                       fallthrough
      :                          @643
 13031: 82 7a                    a3 = u64 [a0]
 13033: ab 8a f2                 jump @641 if a3 != a1
      :                          @644
 13036: 7b 79                    u64 [a0] = a2
 13038: 01                       fallthrough
      :                          @645
 13039: 95 15 ff 07              s0 = sp + 0x7ff
 13043: 95 55 a1 03              s0 = s0 + 0x3a1
 13047: 82 57 70                 a0 = u64 [s0 + 0x70]
 13050: 33 08 02                 a1 = 0x2
 13053: 50 20 5e 01 21 15        ra = 350, jump @1054
      :                          @646 [@dyn 175]
 13059: 33 06 03                 s1 = 0x3
 13062: 95 17 55                 a0 = sp + 0x55
 13065: 33 08 03                 a1 = 0x3
 13068: 33 09                    a2 = 0
 13070: 33 0a                    a3 = 0
 13072: 0a 03                    ecalli 3 // 'write'
 13074: 7b 57 78                 u64 [s0 + 0x78] = a0
 13077: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 13080: 88 77 01                 a0 = a0 <u 0x1
 13083: 97 77 01                 a0 = a0 << 0x1
 13086: 7b 17 10                 u64 [sp + 0x10] = a0
 13089: 95 17 48                 a0 = sp + 0x48
 13092: 7b 57 18                 u64 [s0 + 0x18] = a0
 13095: 33 08 1a                 a1 = 0x1a
 13098: 7b 58 20                 u64 [s0 + 0x20] = a1
 13101: 95 17 ff 07              a0 = sp + 0x7ff
 13105: 95 77 19 04              a0 = a0 + 0x419
 13109: 7b 57 28                 u64 [s0 + 0x28] = a0
 13112: 7b 18 20                 u64 [sp + 0x20] = a1
 13115: 7b 58 30                 u64 [s0 + 0x30] = a1
 13118: 33 07 18 0e 01           a0 = 0x10e18
 13123: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13127: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13131: 49 21 c0 01              u64 [sp + 448] = 0
 13135: 95 17 ff 07              a0 = sp + 0x7ff
 13139: 95 77 b9 03              a0 = a0 + 0x3b9
 13143: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13147: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13152: 95 17 ff 07              a0 = sp + 0x7ff
 13156: 95 77 e9 03              a0 = a0 + 0x3e9
 13160: 95 18 a0 01              a1 = sp + 0x1a0
 13164: 50 20 60 01 42 07        ra = 352, jump @777
      :                          @647 [@dyn 176]
 13170: 82 56 50                 s1 = u64 [s0 + 0x50]
 13173: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13176: 82 55 48                 s0 = u64 [s0 + 0x48]
 13179: 82 17 10                 a0 = u64 [sp + 0x10]
 13182: 33 08                    a1 = 0
 13184: 33 09                    a2 = 0
 13186: 64 6a                    a3 = s1
 13188: 33 00 62 01              ra = 0x162
 13192: 0a 64                    ecalli 100 // 'log'
 13194: 01                       fallthrough
      :                          @648 [@dyn 177]
 13195: 82 17 38                 a0 = u64 [sp + 0x38]
 13198: c8 57 07                 a0 = a0 + s0
 13201: 53 27 00 f0 23           jump @654 if a0 <u 4294963200
      :                          @649
 13206: 33 07 40 00 03           a0 = 0x30040
 13211: 95 77 00 10              a0 = a0 + 0x1000
 13215: 01                       fallthrough
      :                          @650
 13216: 82 78                    a1 = u64 [a0]
 13218: c9 87 09                 a2 = a0 - a1
 13221: ab 69 0f                 jump @654 if a2 != s1
      :                          @651
 13224: c9 58 09                 a2 = a1 - s0
 13227: 01                       fallthrough
      :                          @652
 13228: 82 7a                    a3 = u64 [a0]
 13230: ab 8a f2                 jump @650 if a3 != a1
      :                          @653
 13233: 7b 79                    u64 [a0] = a2
 13235: 01                       fallthrough
      :                          @654
 13236: 95 16 ff 07              s1 = sp + 0x7ff
 13240: 95 66 a1 03              s1 = s1 + 0x3a1
 13244: 82 67 78                 a0 = u64 [s1 + 0x78]
 13247: 33 08 05                 a1 = 0x5
 13250: 50 20 64 01 5c 14        ra = 356, jump @1054
      :                          @655 [@dyn 178]
 13256: 95 18 55                 a1 = sp + 0x55
 13259: 33 09 03                 a2 = 0x3
 13262: 95 1a 98 00              a3 = sp + 0x98
 13266: 33 0c 00 01              a5 = 0x100
 13270: 82 17 30                 a0 = u64 [sp + 0x30]
 13273: 33 0b                    a4 = 0
 13275: 0a 02                    ecalli 2 // 'read'
 13277: 95 18 48                 a1 = sp + 0x48
 13280: 7b 68 18                 u64 [s1 + 0x18] = a1
 13283: 95 18 ff 07              a1 = sp + 0x7ff
 13287: 95 88 21 04              a1 = a1 + 0x421
 13291: 7b 68 28                 u64 [s1 + 0x28] = a1
 13294: 82 18 20                 a1 = u64 [sp + 0x20]
 13297: 7b 68 20                 u64 [s1 + 0x20] = a1
 13300: 7b 68 30                 u64 [s1 + 0x30] = a1
 13303: 33 08 60 0e 01           a1 = 0x10e60
 13308: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13312: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13317: 49 21 c0 01              u64 [sp + 448] = 0
 13321: 95 18 ff 07              a1 = sp + 0x7ff
 13325: 95 88 b9 03              a1 = a1 + 0x3b9
 13329: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13333: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13338: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13342: 95 77 01                 a0 = a0 + 0x1
 13345: 88 77 01                 a0 = a0 <u 0x1
 13348: 97 77 01                 a0 = a0 << 0x1
 13351: 7b 17 20                 u64 [sp + 0x20] = a0
 13354: 95 17 ff 07              a0 = sp + 0x7ff
 13358: 95 77 e9 03              a0 = a0 + 0x3e9
 13362: 95 18 a0 01              a1 = sp + 0x1a0
 13366: 50 20 66 01 78 06        ra = 358, jump @777
      :                          @656 [@dyn 179]
 13372: 82 65 50                 s0 = u64 [s1 + 0x50]
 13375: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13378: 82 66 48                 s1 = u64 [s1 + 0x48]
 13381: 82 17 20                 a0 = u64 [sp + 0x20]
 13384: 33 08                    a1 = 0
 13386: 33 09                    a2 = 0
 13388: 64 5a                    a3 = s0
 13390: 33 00 68 01              ra = 0x168
 13394: 0a 64                    ecalli 100 // 'log'
 13396: 01                       fallthrough
      :                          @657 [@dyn 180]
 13397: 82 17 38                 a0 = u64 [sp + 0x38]
 13400: c8 67 07                 a0 = a0 + s1
 13403: 53 27 00 f0 23           jump @663 if a0 <u 4294963200
      :                          @658
 13408: 33 07 40 00 03           a0 = 0x30040
 13413: 95 77 00 10              a0 = a0 + 0x1000
 13417: 01                       fallthrough
      :                          @659
 13418: 82 78                    a1 = u64 [a0]
 13420: c9 87 09                 a2 = a0 - a1
 13423: ab 59 0f                 jump @663 if a2 != s0
      :                          @660
 13426: c9 68 09                 a2 = a1 - s1
 13429: 01                       fallthrough
      :                          @661
 13430: 82 7a                    a3 = u64 [a0]
 13432: ab 8a f2                 jump @659 if a3 != a1
      :                          @662
 13435: 7b 79                    u64 [a0] = a2
 13437: 01                       fallthrough
      :                          @663
 13438: 95 15 ff 07              s0 = sp + 0x7ff
 13442: 95 55 a1 03              s0 = s0 + 0x3a1
 13446: 82 57 80 00              a0 = u64 [s0 + 0x80]
 13450: 33 08 06                 a1 = 0x6
 13453: 50 20 6a 01 91 13        ra = 362, jump @1054
      :                          @664 [@dyn 181]
 13459: 33 06 03                 s1 = 0x3
 13462: 95 17 55                 a0 = sp + 0x55
 13465: 33 08 03                 a1 = 0x3
 13468: 33 09                    a2 = 0
 13470: 33 0a                    a3 = 0
 13472: 0a 03                    ecalli 3 // 'write'
 13474: 7b 57                    u64 [s0] = a0
 13476: 95 77 01                 a0 = a0 + 0x1
 13479: 88 77 01                 a0 = a0 <u 0x1
 13482: 97 77 01                 a0 = a0 << 0x1
 13485: 7b 17 20                 u64 [sp + 0x20] = a0
 13488: 95 17 48                 a0 = sp + 0x48
 13491: 7b 57 18                 u64 [s0 + 0x18] = a0
 13494: 33 07 1a                 a0 = 0x1a
 13497: 7b 57 20                 u64 [s0 + 0x20] = a0
 13500: 7b 55 28                 u64 [s0 + 0x28] = s0
 13503: 7b 57 30                 u64 [s0 + 0x30] = a0
 13506: 33 07 90 0e 01           a0 = 0x10e90
 13511: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13515: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13519: 49 21 c0 01              u64 [sp + 448] = 0
 13523: 95 17 ff 07              a0 = sp + 0x7ff
 13527: 95 77 b9 03              a0 = a0 + 0x3b9
 13531: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13535: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13540: 95 17 ff 07              a0 = sp + 0x7ff
 13544: 95 77 e9 03              a0 = a0 + 0x3e9
 13548: 95 18 a0 01              a1 = sp + 0x1a0
 13552: 50 20 6c 01 be 05        ra = 364, jump @777
      :                          @665 [@dyn 182]
 13558: 82 56 50                 s1 = u64 [s0 + 0x50]
 13561: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13564: 82 55 48                 s0 = u64 [s0 + 0x48]
 13567: 82 17 20                 a0 = u64 [sp + 0x20]
 13570: 33 08                    a1 = 0
 13572: 33 09                    a2 = 0
 13574: 64 6a                    a3 = s1
 13576: 33 00 6e 01              ra = 0x16e
 13580: 0a 64                    ecalli 100 // 'log'
 13582: 01                       fallthrough
      :                          @666 [@dyn 183]
 13583: 82 17 38                 a0 = u64 [sp + 0x38]
 13586: c8 57 07                 a0 = a0 + s0
 13589: 53 27 00 f0 23           jump @672 if a0 <u 4294963200
      :                          @667
 13594: 33 07 40 00 03           a0 = 0x30040
 13599: 95 77 00 10              a0 = a0 + 0x1000
 13603: 01                       fallthrough
      :                          @668
 13604: 82 78                    a1 = u64 [a0]
 13606: c9 87 09                 a2 = a0 - a1
 13609: ab 69 0f                 jump @672 if a2 != s1
      :                          @669
 13612: c9 58 09                 a2 = a1 - s0
 13615: 01                       fallthrough
      :                          @670
 13616: 82 7a                    a3 = u64 [a0]
 13618: ab 8a f2                 jump @668 if a3 != a1
      :                          @671
 13621: 7b 79                    u64 [a0] = a2
 13623: 01                       fallthrough
      :                          @672
 13624: 95 16 ff 07              s1 = sp + 0x7ff
 13628: 95 66 a1 03              s1 = s1 + 0x3a1
 13632: 82 67                    a0 = u64 [s1]
 13634: 33 08 07                 a1 = 0x7
 13637: 50 20 70 01 d9 12        ra = 368, jump @1054
      :                          @673 [@dyn 184]
 13643: 95 18 98 00              a1 = sp + 0x98
 13647: 82 17 30                 a0 = u64 [sp + 0x30]
 13650: 0a 04                    ecalli 4 // 'info'
 13652: 64 75                    s0 = a0
 13654: 7b 67 78                 u64 [s1 + 0x78] = a0
 13657: 33 08 08                 a1 = 0x8
 13660: 50 20 72 01 c2 12        ra = 370, jump @1054
      :                          @674 [@dyn 185]
 13666: 88 57 01                 a0 = s0 <u 0x1
 13669: 97 77 01                 a0 = a0 << 0x1
 13672: 7b 17 20                 u64 [sp + 0x20] = a0
 13675: 95 17 48                 a0 = sp + 0x48
 13678: 7b 67 18                 u64 [s1 + 0x18] = a0
 13681: 33 08 1a                 a1 = 0x1a
 13684: 7b 68 20                 u64 [s1 + 0x20] = a1
 13687: 95 17 ff 07              a0 = sp + 0x7ff
 13691: 95 77 19 04              a0 = a0 + 0x419
 13695: 7b 67 28                 u64 [s1 + 0x28] = a0
 13698: 7b 18 30                 u64 [sp + 0x30] = a1
 13701: 7b 68 30                 u64 [s1 + 0x30] = a1
 13704: 33 07 c8 0e 01           a0 = 0x10ec8
 13709: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13713: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13718: 49 21 c0 01              u64 [sp + 448] = 0
 13722: 95 17 ff 07              a0 = sp + 0x7ff
 13726: 95 77 b9 03              a0 = a0 + 0x3b9
 13730: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13734: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13739: 95 17 ff 07              a0 = sp + 0x7ff
 13743: 95 77 e9 03              a0 = a0 + 0x3e9
 13747: 95 18 a0 01              a1 = sp + 0x1a0
 13751: 50 20 74 01 f7 04        ra = 372, jump @777
      :                          @675 [@dyn 186]
 13757: 95 17 ff 07              a0 = sp + 0x7ff
 13761: 95 77 a1 03              a0 = a0 + 0x3a1
 13765: 82 76 50                 s1 = u64 [a0 + 0x50]
 13768: 82 7b 58                 a4 = u64 [a0 + 0x58]
 13771: 82 75 48                 s0 = u64 [a0 + 0x48]
 13774: 82 17 20                 a0 = u64 [sp + 0x20]
 13777: 33 08                    a1 = 0
 13779: 33 09                    a2 = 0
 13781: 64 6a                    a3 = s1
 13783: 33 00 76 01              ra = 0x176
 13787: 0a 64                    ecalli 100 // 'log'
 13789: 01                       fallthrough
      :                          @676 [@dyn 187]
 13790: 82 17 38                 a0 = u64 [sp + 0x38]
 13793: c8 57 07                 a0 = a0 + s0
 13796: 53 27 00 f0 25           jump @682 if a0 <u 4294963200
      :                          @677
 13801: 33 07 40 00 03           a0 = 0x30040
 13806: 95 77 00 10              a0 = a0 + 0x1000
 13810: 01                       fallthrough
      :                          @678
 13811: 82 78                    a1 = u64 [a0]
 13813: c9 87 09                 a2 = a0 - a1
 13816: ab 69 11                 jump @682 if a2 != s1
      :                          @679
 13819: c9 58 09                 a2 = a1 - s0
 13822: 01                       fallthrough
      :                          @680
 13823: 82 7a                    a3 = u64 [a0]
 13825: ab 8a f2                 jump @678 if a3 != a1
      :                          @681
 13828: 7b 79                    u64 [a0] = a2
 13830: 0a                       ecalli 0 // 'gas'
 13831: 28 04                    jump @683
      :                          @682
 13833: 0a                       ecalli 0 // 'gas'
 13834: 01                       fallthrough
      :                          @683
 13835: 95 16 ff 07              s1 = sp + 0x7ff
 13839: 95 66 a1 03              s1 = s1 + 0x3a1
 13843: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13847: 33 08 09                 a1 = 0x9
 13850: 50 20 78 01 04 12        ra = 376, jump @1054
      :                          @684 [@dyn 188]
 13856: 95 17 ff 07              a0 = sp + 0x7ff
 13860: 95 77 21 04              a0 = a0 + 0x421
 13864: 7b 67 48                 u64 [s1 + 0x48] = a0
 13867: 82 17 30                 a0 = u64 [sp + 0x30]
 13870: 7b 67 50                 u64 [s1 + 0x50] = a0
 13873: 33 07 18 0f 01           a0 = 0x10f18
 13878: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13882: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 13887: 49 21 c0 01              u64 [sp + 448] = 0
 13891: 95 17 ff 07              a0 = sp + 0x7ff
 13895: 95 77 e9 03              a0 = a0 + 0x3e9
 13899: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13903: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 13908: 95 17 ff 07              a0 = sp + 0x7ff
 13912: 95 77 b9 03              a0 = a0 + 0x3b9
 13916: 95 18 a0 01              a1 = sp + 0x1a0
 13920: 50 20 7a 01 4e 04        ra = 378, jump @777
      :                          @685 [@dyn 189]
 13926: 82 65 20                 s0 = u64 [s1 + 0x20]
 13929: 82 6b 28                 a4 = u64 [s1 + 0x28]
 13932: 82 66 18                 s1 = u64 [s1 + 0x18]
 13935: 33 07 04                 a0 = 0x4
 13938: 33 08                    a1 = 0
 13940: 33 09                    a2 = 0
 13942: 64 5a                    a3 = s0
 13944: 33 00 7c 01              ra = 0x17c
 13948: 0a 64                    ecalli 100 // 'log'
 13950: 01                       fallthrough
      :                          @686 [@dyn 190]
 13951: 82 17 38                 a0 = u64 [sp + 0x38]
 13954: c8 67 07                 a0 = a0 + s1
 13957: 53 27 00 f0 25           jump @692 if a0 <u 4294963200
      :                          @687
 13962: 33 07 40 00 03           a0 = 0x30040
 13967: 95 77 00 10              a0 = a0 + 0x1000
 13971: 01                       fallthrough
      :                          @688
 13972: 82 78                    a1 = u64 [a0]
 13974: c9 87 09                 a2 = a0 - a1
 13977: ab 59 11                 jump @692 if a2 != s0
      :                          @689
 13980: c9 68 09                 a2 = a1 - s1
 13983: 01                       fallthrough
      :                          @690
 13984: 82 7a                    a3 = u64 [a0]
 13986: ab 8a f2                 jump @688 if a3 != a1
      :                          @691
 13989: 7b 79                    u64 [a0] = a2
 13991: 33 0b                    a4 = 0
 13993: 01                       fallthrough
      :                          @692
 13994: 82 19 28                 a2 = u64 [sp + 0x28]
 13997: 55 19 21 26 01           jump @710 if a2 >=u 33
      :                          @693
 14002: 33 05 19 00 03           s0 = 0x30019
 14007: 33 07 19 00 03           a0 = 0x30019
 14012: 82 18 18                 a1 = u64 [sp + 0x18]
 14015: 50 20 7e 01 66 06        ra = 382, jump @826
      :                          @694 [@dyn 191]
 14021: 82 18 48                 a1 = u64 [sp + 0x48]
 14024: 3a 09 00 00 03           a2 = u64 [0x30000]
 14029: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 14039: ca 78 07                 a0 = a1 * a0
 14042: 95 16 ff 07              s1 = sp + 0x7ff
 14046: 95 66 a1 03              s1 = s1 + 0x3a1
 14050: ae 97 38                 jump @699 if a0 >=u a2
      :                          @695
 14053: 33 07 33                 a0 = 0x33
 14056: 51 18 09 27              jump @697 if a1 == 9
      :                          @696
 14060: 0a 08                    ecalli 8 // 'checkpoint'
 14062: 33 0a 38 0f 01           a3 = 0x10f38
 14067: 33 07 03                 a0 = 0x3
 14070: 33 0b 11                 a4 = 0x11
 14073: 33 08                    a1 = 0
 14075: 33 09                    a2 = 0
 14077: 0a 64                    ecalli 100 // 'log'
 14079: 82 17 48                 a0 = u64 [sp + 0x48]
 14082: 95 77 2a                 a0 = a0 + 0x2a
 14085: 33 08 07                 a1 = 0x7
 14088: 33 00 80 01              ra = 0x180
 14092: 28 12 11                 jump @1054
      :                          @697
 14095: 33 08 07                 a1 = 0x7
 14098: 50 20 80 01 0c 11        ra = 384, jump @1054
      :                          @698 [@dyn 192]
 14104: 32 07                    jump [a0]
      :                          @699
 14106: 64 57                    a0 = s0
 14108: 0a 10                    ecalli 16 // 'oyield'
 14110: 7b 67                    u64 [s1] = a0
 14112: 88 77 01                 a0 = a0 <u 0x1
 14115: 97 77 01                 a0 = a0 << 0x1
 14118: 7b 17 30                 u64 [sp + 0x30] = a0
 14121: 95 17 48                 a0 = sp + 0x48
 14124: 7b 67 18                 u64 [s1 + 0x18] = a0
 14127: 33 07 1a                 a0 = 0x1a
 14130: 7b 67 20                 u64 [s1 + 0x20] = a0
 14133: 7b 66 28                 u64 [s1 + 0x28] = s1
 14136: 7b 67 30                 u64 [s1 + 0x30] = a0
 14139: 33 07 50 0f 01           a0 = 0x10f50
 14144: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14148: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14153: 49 21 c0 01              u64 [sp + 448] = 0
 14157: 95 18 ff 07              a1 = sp + 0x7ff
 14161: 95 88 b9 03              a1 = a1 + 0x3b9
 14165: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 14169: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 14174: 95 17 ff 07              a0 = sp + 0x7ff
 14178: 95 77 e9 03              a0 = a0 + 0x3e9
 14182: 95 18 a0 01              a1 = sp + 0x1a0
 14186: 50 20 82 01 44 03        ra = 386, jump @777
      :                          @700 [@dyn 193]
 14192: 95 17 ff 07              a0 = sp + 0x7ff
 14196: 95 77 a1 03              a0 = a0 + 0x3a1
 14200: 82 76 50                 s1 = u64 [a0 + 0x50]
 14203: 82 7b 58                 a4 = u64 [a0 + 0x58]
 14206: 82 75 48                 s0 = u64 [a0 + 0x48]
 14209: 82 17 30                 a0 = u64 [sp + 0x30]
 14212: 33 08                    a1 = 0
 14214: 33 09                    a2 = 0
 14216: 64 6a                    a3 = s1
 14218: 33 00 84 01              ra = 0x184
 14222: 0a 64                    ecalli 100 // 'log'
 14224: 01                       fallthrough
      :                          @701 [@dyn 194]
 14225: 82 17 38                 a0 = u64 [sp + 0x38]
 14228: c8 57 07                 a0 = a0 + s0
 14231: 53 27 00 f0 2f           jump @707 if a0 <u 4294963200
      :                          @702
 14236: 33 07 40 00 03           a0 = 0x30040
 14241: 95 77 00 10              a0 = a0 + 0x1000
 14245: 01                       fallthrough
      :                          @703
 14246: 82 78                    a1 = u64 [a0]
 14248: c9 87 09                 a2 = a0 - a1
 14251: ab 69 1b                 jump @707 if a2 != s1
      :                          @704
 14254: c9 58 09                 a2 = a1 - s0
 14257: 01                       fallthrough
      :                          @705
 14258: 82 7a                    a3 = u64 [a0]
 14260: ab 8a f2                 jump @703 if a3 != a1
      :                          @706
 14263: 7b 79                    u64 [a0] = a2
 14265: 33 0b                    a4 = 0
 14267: 33 07 19 00 03           a0 = 0x30019
 14272: 33 08 20                 a1 = 0x20
 14275: 28 01 df                 jump @310
      :                          @707
 14278: 33 07 19 00 03           a0 = 0x30019
 14283: 33 08 20                 a1 = 0x20
 14286: 28 f6 de                 jump @310
      :                          @708
 14289: 00                       trap
      :                          @709
 14290: 00                       trap
      :                          @710
 14291: 00                       trap
      :                          @711
 14292: 00                       trap
      :                          @712 [export #2: 'on_transfer']
 14293: 95 11 88                 sp = sp + 0xffffffffffffff88
 14296: 7b 10 70                 u64 [sp + 0x70] = ra
 14299: 7b 15 68                 u64 [sp + 0x68] = s0
 14302: 7b 16 60                 u64 [sp + 0x60] = s1
 14305: 0a                       ecalli 0 // 'gas'
 14306: 7b 17                    u64 [sp] = a0
 14308: 33 08 04                 a1 = 0x4
 14311: 50 20 86 01 37 10        ra = 390, jump @1054
      :                          @713 [@dyn 195]
 14317: 64 17                    a0 = sp
 14319: 7b 17 50                 u64 [sp + 0x50] = a0
 14322: 33 07 1a                 a0 = 0x1a
 14325: 7b 17 58                 u64 [sp + 0x58] = a0
 14328: 33 07 a0 0f 01           a0 = 0x10fa0
 14333: 7b 17 20                 u64 [sp + 0x20] = a0
 14336: 49 11 28 02              u64 [sp + 40] = 0x2
 14340: 49 11 40                 u64 [sp + 64] = 0
 14343: 95 17 50                 a0 = sp + 0x50
 14346: 7b 17 30                 u64 [sp + 0x30] = a0
 14349: 49 11 38 01              u64 [sp + 56] = 0x1
 14353: 95 17 08                 a0 = sp + 0x8
 14356: 95 18 20                 a1 = sp + 0x20
 14359: 50 20 88 01 97 02        ra = 392, jump @777
      :                          @714 [@dyn 196]
 14365: 82 15 10                 s0 = u64 [sp + 0x10]
 14368: 82 1b 18                 a4 = u64 [sp + 0x18]
 14371: 82 16 08                 s1 = u64 [sp + 0x8]
 14374: 33 07 04                 a0 = 0x4
 14377: 33 08                    a1 = 0
 14379: 33 09                    a2 = 0
 14381: 64 5a                    a3 = s0
 14383: 33 00 8a 01              ra = 0x18a
 14387: 0a 64                    ecalli 100 // 'log'
 14389: 01                       fallthrough
      :                          @715 [@dyn 197]
 14390: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 14394: 53 28 00 f0 25           jump @721 if a1 <u 4294963200
      :                          @716
 14399: 33 07 40 00 03           a0 = 0x30040
 14404: 95 77 00 10              a0 = a0 + 0x1000
 14408: 01                       fallthrough
      :                          @717
 14409: 82 78                    a1 = u64 [a0]
 14411: c9 87 09                 a2 = a0 - a1
 14414: ab 59 11                 jump @721 if a2 != s0
      :                          @718
 14417: c9 68 09                 a2 = a1 - s1
 14420: 01                       fallthrough
      :                          @719
 14421: 82 7a                    a3 = u64 [a0]
 14423: ab 8a f2                 jump @717 if a3 != a1
      :                          @720
 14426: 7b 79                    u64 [a0] = a2
 14428: 33 0b                    a4 = 0
 14430: 01                       fallthrough
      :                          @721
 14431: 33 07 00 00 01           a0 = 0x10000
 14436: 33 08                    a1 = 0
 14438: 82 10 70                 ra = u64 [sp + 0x70]
 14441: 82 15 68                 s0 = u64 [sp + 0x68]
 14444: 82 16 60                 s1 = u64 [sp + 0x60]
 14447: 95 11 78                 sp = sp + 0x78
 14450: 32 00                    ret
      :                          @722
 14452: 00                       trap
      :                          @723
 14453: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14456: 7b 10 40                 u64 [sp + 0x40] = ra
 14459: 7b 15 38                 u64 [sp + 0x38] = s0
 14462: 7b 16 30                 u64 [sp + 0x30] = s1
 14465: c8 89 09                 a2 = a2 + a1
 14468: ac 89 53                 jump @731 if a2 <u a1
      :                          @724
 14471: 64 75                    s0 = a0
 14473: 82 77                    a0 = u64 [a0]
 14475: 97 78 01                 a1 = a0 << 0x1
 14478: 33 0a 08                 a3 = 0x8
 14481: e4 a9 09                 a2 = maxu(a2, a3)
 14484: e4 98 06                 s1 = maxu(a1, a2)
 14487: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14490: 98 88 3f                 a1 = a1 >> 0x3f
 14493: 51 07 12                 jump @726 if a0 == 0
      :                          @725
 14496: 82 59 08                 a2 = u64 [s0 + 0x8]
 14499: 7b 19 18                 u64 [sp + 0x18] = a2
 14502: 49 11 20 01              u64 [sp + 32] = 0x1
 14506: 7b 17 28                 u64 [sp + 0x28] = a0
 14509: 28 06                    jump @727
      :                          @726
 14511: 49 11 20                 u64 [sp + 32] = 0
 14514: 01                       fallthrough
      :                          @727
 14515: 64 17                    a0 = sp
 14517: 95 1a 18                 a3 = sp + 0x18
 14520: 64 69                    a2 = s1
 14522: 50 20 8c 01 32           ra = 396, jump @734
      :                          @728 [@dyn 198]
 14527: 82 18                    a1 = u64 [sp]
 14529: 82 17 08                 a0 = u64 [sp + 0x8]
 14532: 51 08 14                 jump @732 if a1 == 0
      :                          @729
 14535: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 14545: aa 87 0d                 jump @733 if a0 == a1
      :                          @730
 14548: 52 07 a0                 jump @722 if a0 != 0
      :                          @731
 14551: 00                       trap
      :                          @732
 14552: 7b 57 08                 u64 [s0 + 0x8] = a0
 14555: 7b 56                    u64 [s0] = s1
 14557: 01                       fallthrough
      :                          @733
 14558: 82 10 40                 ra = u64 [sp + 0x40]
 14561: 82 15 38                 s0 = u64 [sp + 0x38]
 14564: 82 16 30                 s1 = u64 [sp + 0x30]
 14567: 95 11 48                 sp = sp + 0x48
 14570: 32 00                    ret
      :                          @734
 14572: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14575: 7b 10 30                 u64 [sp + 0x30] = ra
 14578: 7b 15 28                 u64 [sp + 0x28] = s0
 14581: 7b 16 20                 u64 [sp + 0x20] = s1
 14584: 64 95                    s0 = a2
 14586: 64 72                    t0 = a0
 14588: 51 08 77                 jump @744 if a1 == 0
      :                          @735
 14591: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14594: 51 07 7a                 jump @745 if a0 == 0
      :                          @736
 14597: 82 a9 10                 a2 = u64 [a3 + 0x10]
 14600: 51 09 a7 00              jump @752 if a2 == 0
      :                          @737
 14604: 82 a8                    a1 = u64 [a3]
 14606: 33 06 40 00 03           s1 = 0x30040
 14611: 33 03 00 10              t1 = 0x1000
 14615: c8 36 06                 s1 = s1 + t1
 14618: 01                       fallthrough
      :                          @738
 14619: 82 6a                    a3 = u64 [s1]
 14621: c8 5a 07                 a0 = a3 + s0
 14624: ac a7 cc 00              jump @758 if a0 <u a3
      :                          @739
 14628: 95 7b 01                 a4 = a0 + 0x1
 14631: 88 bc 01                 a5 = a4 <u 0x1
 14634: d8 b3 0b                 a4 = t1 <u a4
 14637: d4 cb 0b                 a4 = a4 | a5
 14640: 52 0b bc 00              jump @758 if a4 != 0
      :                          @740
 14644: 82 6b                    a4 = u64 [s1]
 14646: ab ab e5                 jump @738 if a4 != a3
      :                          @741
 14649: 7b 67                    u64 [s1] = a0
 14651: 33 0c                    a5 = 0
 14653: 7b 12 18                 u64 [sp + 0x18] = t0
 14656: 33 0a 40 00 03           a3 = 0x30040
 14661: 33 0b 00 10              a4 = 0x1000
 14665: 7b 1a                    u64 [sp] = a3
 14667: c8 ba 0a                 a3 = a3 + a4
 14670: c9 7a 07                 a0 = a3 - a0
 14673: 7b 17 10                 u64 [sp + 0x10] = a0
 14676: 7b 18 08                 u64 [sp + 0x8] = a1
 14679: 64 96                    s1 = a2
 14681: 50 20 8e 01 cc 03        ra = 398, jump @826
      :                          @742 [@dyn 199]
 14687: 54 26 00 10 95 00        jump @759 if s1 <=u 4096
      :                          @743
 14693: 82 12 18                 t0 = u64 [sp + 0x18]
 14696: 82 18 10                 a1 = u64 [sp + 0x10]
 14699: 33 07                    a0 = 0
 14701: 7b 28 08                 u64 [t0 + 0x8] = a1
 14704: 28 b2 00                 jump @765
      :                          @744
 14707: 49 12 08                 u64 [t0 + 8] = 0
 14710: 33 07 01                 a0 = 0x1
 14713: 28 a9 00                 jump @765
      :                          @745
 14716: 33 09 40 00 03           a2 = 0x30040
 14721: 33 07 00 10              a0 = 0x1000
 14725: c8 79 09                 a2 = a2 + a0
 14728: 01                       fallthrough
      :                          @746
 14729: 82 9a                    a3 = u64 [a2]
 14731: c8 5a 08                 a1 = a3 + s0
 14734: ac a8 5e                 jump @758 if a1 <u a3
      :                          @747
 14737: 95 8b 01                 a4 = a1 + 0x1
 14740: 88 bc 01                 a5 = a4 <u 0x1
 14743: d8 b7 0b                 a4 = a0 <u a4
 14746: d4 cb 0b                 a4 = a4 | a5
 14749: 52 0b 4f                 jump @758 if a4 != 0
      :                          @748
 14752: 82 9b                    a4 = u64 [a2]
 14754: ab ab e7                 jump @746 if a4 != a3
      :                          @749
 14757: 7b 98                    u64 [a2] = a1
 14759: 33 0c                    a5 = 0
 14761: 01                       fallthrough
      :                          @750
 14762: ab ab df                 jump @746 if a4 != a3
      :                          @751
 14765: 28 30                    jump @757
      :                          @752
 14767: 33 09 40 00 03           a2 = 0x30040
 14772: 33 07 00 10              a0 = 0x1000
 14776: c8 79 09                 a2 = a2 + a0
 14779: 01                       fallthrough
      :                          @753
 14780: 82 9a                    a3 = u64 [a2]
 14782: c8 5a 08                 a1 = a3 + s0
 14785: ac a8 2b                 jump @758 if a1 <u a3
      :                          @754
 14788: 95 8b 01                 a4 = a1 + 0x1
 14791: 88 bc 01                 a5 = a4 <u 0x1
 14794: d8 b7 0b                 a4 = a0 <u a4
 14797: d4 cb 0b                 a4 = a4 | a5
 14800: 52 0b 1c                 jump @758 if a4 != 0
      :                          @755
 14803: 82 9b                    a4 = u64 [a2]
 14805: ab ab e7                 jump @753 if a4 != a3
      :                          @756
 14808: 7b 98                    u64 [a2] = a1
 14810: 33 0c                    a5 = 0
 14812: 01                       fallthrough
      :                          @757
 14813: 33 07 40 10 03           a0 = 0x31040
 14818: c9 87 08                 a1 = a0 - a1
 14821: 33 07                    a0 = 0
 14823: 7b 28 08                 u64 [t0 + 0x8] = a1
 14826: 28 38                    jump @765
      :                          @758
 14828: 33 07 01                 a0 = 0x1
 14831: 7b 27 08                 u64 [t0 + 0x8] = a0
 14834: 28 30                    jump @765
      :                          @759
 14836: 64 6c                    a5 = s1
 14838: 82 17                    a0 = u64 [sp]
 14840: 95 77 00 10              a0 = a0 + 0x1000
 14844: 82 12 18                 t0 = u64 [sp + 0x18]
 14847: 82 16 08                 s1 = u64 [sp + 0x8]
 14850: 01                       fallthrough
      :                          @760
 14851: 82 78                    a1 = u64 [a0]
 14853: c9 87 09                 a2 = a0 - a1
 14856: ab 69 11                 jump @764 if a2 != s1
      :                          @761
 14859: c9 c8 09                 a2 = a1 - a5
 14862: 01                       fallthrough
      :                          @762
 14863: 82 7a                    a3 = u64 [a0]
 14865: ab 8a f2                 jump @760 if a3 != a1
      :                          @763
 14868: 7b 79                    u64 [a0] = a2
 14870: 33 0b                    a4 = 0
 14872: 01                       fallthrough
      :                          @764
 14873: 82 18 10                 a1 = u64 [sp + 0x10]
 14876: 33 07                    a0 = 0
 14878: 7b 28 08                 u64 [t0 + 0x8] = a1
 14881: 01                       fallthrough
      :                          @765
 14882: 7b 25 10                 u64 [t0 + 0x10] = s0
 14885: 7b 27                    u64 [t0] = a0
 14887: 82 10 30                 ra = u64 [sp + 0x30]
 14890: 82 15 28                 s0 = u64 [sp + 0x28]
 14893: 82 16 20                 s1 = u64 [sp + 0x20]
 14896: 95 11 38                 sp = sp + 0x38
 14899: 32 00                    ret
      :                          @766
 14901: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14904: 7b 10 40                 u64 [sp + 0x40] = ra
 14907: 7b 15 38                 u64 [sp + 0x38] = s0
 14910: 7b 16 30                 u64 [sp + 0x30] = s1
 14913: 95 88 01                 a1 = a1 + 0x1
 14916: 51 08 55                 jump @774 if a1 == 0
      :                          @767
 14919: 64 75                    s0 = a0
 14921: 82 77                    a0 = u64 [a0]
 14923: 97 79 01                 a2 = a0 << 0x1
 14926: 33 0a 08                 a3 = 0x8
 14929: e4 a8 08                 a1 = maxu(a1, a3)
 14932: e4 89 06                 s1 = maxu(a2, a1)
 14935: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14938: 98 88 3f                 a1 = a1 >> 0x3f
 14941: 51 07 12                 jump @769 if a0 == 0
      :                          @768
 14944: 82 59 08                 a2 = u64 [s0 + 0x8]
 14947: 7b 19 18                 u64 [sp + 0x18] = a2
 14950: 49 11 20 01              u64 [sp + 32] = 0x1
 14954: 7b 17 28                 u64 [sp + 0x28] = a0
 14957: 28 06                    jump @770
      :                          @769
 14959: 49 11 20                 u64 [sp + 32] = 0
 14962: 01                       fallthrough
      :                          @770
 14963: 64 17                    a0 = sp
 14965: 95 1a 18                 a3 = sp + 0x18
 14968: 64 69                    a2 = s1
 14970: 50 20 90 01 72 fe        ra = 400, jump @734
      :                          @771 [@dyn 200]
 14976: 82 18                    a1 = u64 [sp]
 14978: 82 17 08                 a0 = u64 [sp + 0x8]
 14981: 51 08 15                 jump @775 if a1 == 0
      :                          @772
 14984: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 14994: aa 87 0e                 jump @776 if a0 == a1
      :                          @773
 14997: 52 07 df fd              jump @722 if a0 != 0
      :                          @774
 15001: 00                       trap
      :                          @775
 15002: 7b 57 08                 u64 [s0 + 0x8] = a0
 15005: 7b 56                    u64 [s0] = s1
 15007: 01                       fallthrough
      :                          @776
 15008: 82 10 40                 ra = u64 [sp + 0x40]
 15011: 82 15 38                 s0 = u64 [sp + 0x38]
 15014: 82 16 30                 s1 = u64 [sp + 0x30]
 15017: 95 11 48                 sp = sp + 0x48
 15020: 32 00                    ret
      :                          @777
 15022: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 15025: 7b 10 30                 u64 [sp + 0x30] = ra
 15028: 7b 15 28                 u64 [sp + 0x28] = s0
 15031: 7b 16 20                 u64 [sp + 0x20] = s1
 15034: 64 89                    a2 = a1
 15036: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15039: 64 75                    s0 = a0
 15041: 51 0a 35                 jump @782 if a3 == 0
      :                          @778
 15044: 82 98                    a1 = u64 [a2]
 15046: 33 07                    a0 = 0
 15048: 95 8b 08                 a4 = a1 + 0x8
 15051: 01                       fallthrough
      :                          @779
 15052: 82 bc                    a5 = u64 [a4]
 15054: c8 c7 07                 a0 = a0 + a5
 15057: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15060: 95 bb 10                 a4 = a4 + 0x10
 15063: 52 0a f5                 jump @779 if a3 != 0
      :                          @780
 15066: 82 9a 18                 a3 = u64 [a2 + 0x18]
 15069: 51 0a 24                 jump @784 if a3 == 0
      :                          @781
 15072: 82 88 08                 a1 = u64 [a1 + 0x8]
 15075: 8e 88                    a1 = a1 >u 0
 15077: 88 7a 10                 a3 = a0 <u 0x10
 15080: 85 aa 01                 a3 = a3 ^ 0x1
 15083: d4 a8 08                 a1 = a1 | a3
 15086: 89 7a                    a3 = a0 <s 0
 15088: e0 a8 08                 a1 = a1 & ~a3
 15091: 52 08 0a                 jump @783 if a1 != 0
      :                          @782
 15094: 33 07                    a0 = 0
 15096: 33 08 01                 a1 = 0x1
 15099: 28 4b                    jump @792
      :                          @783
 15101: 97 77 01                 a0 = a0 << 0x1
 15104: 01                       fallthrough
      :                          @784
 15105: 51 07 41                 jump @791 if a0 == 0
      :                          @785
 15108: 57 07 79                 jump @796 if a0 <s 0
      :                          @786
 15111: 64 52                    t0 = s0
 15113: 33 0b 40 00 03           a4 = 0x30040
 15118: 33 08 00 10              a1 = 0x1000
 15122: c8 8b 0b                 a4 = a4 + a1
 15125: 01                       fallthrough
      :                          @787
 15126: 82 bc                    a5 = u64 [a4]
 15128: c8 7c 0a                 a3 = a5 + a0
 15131: ac ca 59 fd              jump @722 if a3 <u a5
      :                          @788
 15135: 95 a5 01                 s0 = a3 + 0x1
 15138: 88 56 01                 s1 = s0 <u 0x1
 15141: d8 58 05                 s0 = a1 <u s0
 15144: d4 65 05                 s0 = s0 | s1
 15147: 52 05 49 fd              jump @722 if s0 != 0
      :                          @789
 15151: 82 b6                    s1 = u64 [a4]
 15153: ab c6 e5                 jump @787 if s1 != a5
      :                          @790
 15156: 7b ba                    u64 [a4] = a3
 15158: 33 08 40 10 03           a1 = 0x31040
 15163: c9 a8 08                 a1 = a1 - a3
 15166: 64 25                    s0 = t0
 15168: 28 06                    jump @792
      :                          @791
 15170: 33 08 01                 a1 = 0x1
 15173: 01                       fallthrough
      :                          @792
 15174: 7b 17                    u64 [sp] = a0
 15176: 7b 18 08                 u64 [sp + 0x8] = a1
 15179: 49 11 10                 u64 [sp + 16] = 0
 15182: 33 08 c0 0f 01           a1 = 0x10fc0
 15187: 64 17                    a0 = sp
 15189: 50 20 92 01 82 06        ra = 402, jump @921
      :                          @793 [@dyn 201]
 15195: 52 07 21                 jump @795 if a0 != 0
      :                          @794
 15198: 82 17 10                 a0 = u64 [sp + 0x10]
 15201: 82 18 08                 a1 = u64 [sp + 0x8]
 15204: 82 19                    a2 = u64 [sp]
 15206: 7b 57 10                 u64 [s0 + 0x10] = a0
 15209: 7b 58 08                 u64 [s0 + 0x8] = a1
 15212: 7b 59                    u64 [s0] = a2
 15214: 82 10 30                 ra = u64 [sp + 0x30]
 15217: 82 15 28                 s0 = u64 [sp + 0x28]
 15220: 82 16 20                 s1 = u64 [sp + 0x20]
 15223: 95 11 38                 sp = sp + 0x38
 15226: 32 00                    ret
      :                          @795
 15228: 00                       trap
      :                          @796
 15229: 00                       trap
      :                          @797 [@dyn 202]
 15230: 82 72                    t0 = u64 [a0]
 15232: 33 09 00 f0              a2 = 0xfffffffffffff000
 15236: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 15240: ac 9a 27                 jump @803 if a3 <u a2
      :                          @798
 15243: 82 77 08                 a0 = u64 [a0 + 0x8]
 15246: 33 09 40 00 03           a2 = 0x30040
 15251: 95 99 00 10              a2 = a2 + 0x1000
 15255: 01                       fallthrough
      :                          @799
 15256: 82 9a                    a3 = u64 [a2]
 15258: c9 a9 0b                 a4 = a2 - a3
 15261: ab 7b 12                 jump @803 if a4 != a0
      :                          @800
 15264: c9 2a 0b                 a4 = a3 - t0
 15267: 01                       fallthrough
      :                          @801
 15268: 82 9c                    a5 = u64 [a2]
 15270: ab ac f2                 jump @799 if a5 != a3
      :                          @802
 15273: 7b 9b                    u64 [a2] = a4
 15275: 33 08                    a1 = 0
 15277: 32 00                    ret
      :                          @803
 15279: 32 00                    ret
      :                          @804 [@dyn 203]
 15281: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15284: 7b 10 18                 u64 [sp + 0x18] = ra
 15287: 7b 15 10                 u64 [sp + 0x10] = s0
 15290: 7b 16 08                 u64 [sp + 0x8] = s1
 15293: 64 75                    s0 = a0
 15295: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15298: 82 77                    a0 = u64 [a0]
 15300: c9 a7 07                 a0 = a0 - a3
 15303: 64 96                    s1 = a2
 15305: ac 97 2b                 jump @807 if a0 <u a2
      :                          @805
 15308: 7b 1a                    u64 [sp] = a3
 15310: 82 57 08                 a0 = u64 [s0 + 0x8]
 15313: c8 a7 07                 a0 = a0 + a3
 15316: 64 69                    a2 = s1
 15318: 50 20 98 01 4f 01        ra = 408, jump @826
      :                          @806 [@dyn 204]
 15324: 82 17                    a0 = u64 [sp]
 15326: c8 76 06                 s1 = s1 + a0
 15329: 7b 56 10                 u64 [s0 + 0x10] = s1
 15332: 33 07                    a0 = 0
 15334: 82 10 18                 ra = u64 [sp + 0x18]
 15337: 82 15 10                 s0 = u64 [sp + 0x10]
 15340: 82 16 08                 s1 = u64 [sp + 0x8]
 15343: 95 11 20                 sp = sp + 0x20
 15346: 32 00                    ret
      :                          @807
 15348: 64 57                    a0 = s0
 15350: 7b 18                    u64 [sp] = a1
 15352: 64 a8                    a1 = a3
 15354: 64 69                    a2 = s1
 15356: 50 20 9a 01 79 fc        ra = 410, jump @723
      :                          @808 [@dyn 205]
 15362: 82 18                    a1 = u64 [sp]
 15364: 82 5a 10                 a3 = u64 [s0 + 0x10]
 15367: 28 c5                    jump @805
      :                          @809 [@dyn 206]
 15369: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15372: 7b 10 20                 u64 [sp + 0x20] = ra
 15375: 7b 15 18                 u64 [sp + 0x18] = s0
 15378: 7b 16 10                 u64 [sp + 0x10] = s1
 15381: 64 86                    s1 = a1
 15383: 83 88                    i32 a1 = a1 + 0
 15385: 33 09 80 00              a2 = 0x80
 15389: 64 7a                    a3 = a0
 15391: ae 98 2c                 jump @814 if a1 >=u a2
      :                          @810
 15394: 82 a8 10                 a1 = u64 [a3 + 0x10]
 15397: 82 a7                    a0 = u64 [a3]
 15399: ab 78 13                 jump @813 if a1 != a0
      :                          @811
 15402: 64 a7                    a0 = a3
 15404: 64 a5                    s0 = a3
 15406: 50 20 9e 01 07 fe        ra = 414, jump @766
      :                          @812 [@dyn 207]
 15412: 64 5a                    a3 = s0
 15414: 82 58 10                 a1 = u64 [s0 + 0x10]
 15417: 01                       fallthrough
      :                          @813
 15418: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15421: c8 87 07                 a0 = a0 + a1
 15424: 78 76                    u8 [a0] = s1
 15426: 95 88 01                 a1 = a1 + 0x1
 15429: 7b a8 10                 u64 [a3 + 0x10] = a1
 15432: 28 ac 00                 jump @822
      :                          @814
 15435: 8b 67 0b                 i32 a0 = s1 >> 0xb
 15438: 48 11 0c                 u32 [sp + 12] = 0
 15441: 52 07 1c                 jump @816 if a0 != 0
      :                          @815
 15444: 98 67 06                 a0 = s1 >> 0x6
 15447: 86 77 c0 00              a0 = a0 | 0xc0
 15451: 78 17 0c                 u8 [sp + 0xc] = a0
 15454: 84 67 3f                 a0 = s1 & 0x3f
 15457: 86 77 80 00              a0 = a0 | 0x80
 15461: 78 17 0d                 u8 [sp + 0xd] = a0
 15464: 33 06 02                 s1 = 0x2
 15467: 28 63                    jump @819
      :                          @816
 15469: 8b 67 10                 i32 a0 = s1 >> 0x10
 15472: 52 07 29                 jump @818 if a0 != 0
      :                          @817
 15475: 98 67 0c                 a0 = s1 >> 0xc
 15478: 86 77 e0 00              a0 = a0 | 0xe0
 15482: 78 17 0c                 u8 [sp + 0xc] = a0
 15485: 97 67 34                 a0 = s1 << 0x34
 15488: 98 77 3a                 a0 = a0 >> 0x3a
 15491: 95 77 80 00              a0 = a0 + 0x80
 15495: 78 17 0d                 u8 [sp + 0xd] = a0
 15498: 84 67 3f                 a0 = s1 & 0x3f
 15501: 86 77 80 00              a0 = a0 | 0x80
 15505: 78 17 0e                 u8 [sp + 0xe] = a0
 15508: 33 06 03                 s1 = 0x3
 15511: 28 37                    jump @819
      :                          @818
 15513: 97 67 2b                 a0 = s1 << 0x2b
 15516: 98 77 3d                 a0 = a0 >> 0x3d
 15519: 95 77 f0 00              a0 = a0 + 0xf0
 15523: 78 17 0c                 u8 [sp + 0xc] = a0
 15526: 97 67 2e                 a0 = s1 << 0x2e
 15529: 98 77 3a                 a0 = a0 >> 0x3a
 15532: 95 77 80 00              a0 = a0 + 0x80
 15536: 78 17 0d                 u8 [sp + 0xd] = a0
 15539: 97 67 34                 a0 = s1 << 0x34
 15542: 98 77 3a                 a0 = a0 >> 0x3a
 15545: 95 77 80 00              a0 = a0 + 0x80
 15549: 78 17 0e                 u8 [sp + 0xe] = a0
 15552: 84 67 3f                 a0 = s1 & 0x3f
 15555: 86 77 80 00              a0 = a0 | 0x80
 15559: 78 17 0f                 u8 [sp + 0xf] = a0
 15562: 33 06 04                 s1 = 0x4
 15565: 01                       fallthrough
      :                          @819
 15566: 82 a5 10                 s0 = u64 [a3 + 0x10]
 15569: 82 a7                    a0 = u64 [a3]
 15571: c9 57 07                 a0 = a0 - s0
 15574: ac 67 2e                 jump @823 if a0 <u s1
      :                          @820
 15577: 7b 1a                    u64 [sp] = a3
 15579: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15582: c8 57 07                 a0 = a0 + s0
 15585: 95 18 0c                 a1 = sp + 0xc
 15588: 64 69                    a2 = s1
 15590: 50 20 a0 01 3f           ra = 416, jump @826
      :                          @821 [@dyn 208]
 15595: c8 56 06                 s1 = s1 + s0
 15598: 82 17                    a0 = u64 [sp]
 15600: 7b 76 10                 u64 [a0 + 0x10] = s1
 15603: 01                       fallthrough
      :                          @822
 15604: 33 07                    a0 = 0
 15606: 82 10 20                 ra = u64 [sp + 0x20]
 15609: 82 15 18                 s0 = u64 [sp + 0x18]
 15612: 82 16 10                 s1 = u64 [sp + 0x10]
 15615: 95 11 28                 sp = sp + 0x28
 15618: 32 00                    ret
      :                          @823
 15620: 64 a7                    a0 = a3
 15622: 64 58                    a1 = s0
 15624: 64 69                    a2 = s1
 15626: 64 a5                    s0 = a3
 15628: 50 20 a2 01 69 fb        ra = 418, jump @723
      :                          @824 [@dyn 209]
 15634: 64 5a                    a3 = s0
 15636: 82 55 10                 s0 = u64 [s0 + 0x10]
 15639: 28 c2                    jump @820
      :                          @825 [@dyn 210]
 15641: 64 8a                    a3 = a1
 15643: 33 08 c0 0f 01           a1 = 0x10fc0
 15648: 64 a9                    a2 = a3
 15650: 28 b5 04                 jump @921
      :                          @826
 15653: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15656: 7b 10 18                 u64 [sp + 0x18] = ra
 15659: 7b 15 10                 u64 [sp + 0x10] = s0
 15662: 7b 16 08                 u64 [sp + 0x8] = s1
 15665: 53 19 10 64              jump @835 if a2 <u 16
      :                          @827
 15669: 8d 7a                    i32 a3 = -a0
 15671: 84 a2 07                 t0 = a3 & 0x7
 15674: c8 27 0b                 a4 = a0 + t0
 15677: 51 02 15                 jump @830 if t0 == 0
      :                          @828
 15680: 64 8c                    a5 = a1
 15682: 64 75                    s0 = a0
 15684: 01                       fallthrough
      :                          @829
 15685: 7c ca                    a3 = u8 [a5]
 15687: 78 5a                    u8 [s0] = a3
 15689: 95 55 01                 s0 = s0 + 0x1
 15692: 95 cc 01                 a5 = a5 + 0x1
 15695: ac b5 f6                 jump @829 if s0 <u a4
      :                          @830
 15698: c8 28 03                 t1 = a1 + t0
 15701: c9 29 02                 t0 = a2 - t0
 15704: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 15707: 84 38 07                 a1 = t1 & 0x7
 15710: c8 4b 0a                 a3 = a4 + t2
 15713: 51 08 3b                 jump @837 if a1 == 0
      :                          @831
 15716: 58 04 4b                 jump @840 if t2 <=s 0
      :                          @832
 15719: 97 38 03                 a1 = t1 << 0x3
 15722: 84 80 38                 ra = a1 & 0x38
 15725: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 15728: 82 c5                    s0 = u64 [a5]
 15730: 8d 88                    i32 a1 = -a1
 15732: 84 88 38                 a1 = a1 & 0x38
 15735: 95 cc 08                 a5 = a5 + 0x8
 15738: 01                       fallthrough
      :                          @833
 15739: 82 c6                    s1 = u64 [a5]
 15741: d0 05 05                 s0 = s0 >> ra
 15744: cf 86 09                 a2 = s1 << a1
 15747: d4 59 09                 a2 = a2 | s0
 15750: 7b b9                    u64 [a4] = a2
 15752: 95 bb 08                 a4 = a4 + 0x8
 15755: 95 cc 08                 a5 = a5 + 0x8
 15758: 64 65                    s0 = s1
 15760: ac ab eb                 jump @833 if a4 <u a3
      :                          @834
 15763: 28 1c                    jump @840
      :                          @835
 15765: 64 7a                    a3 = a0
 15767: 52 09 21                 jump @841 if a2 != 0
      :                          @836
 15770: 28 2f                    jump @843
      :                          @837
 15772: 58 04 13                 jump @840 if t2 <=s 0
      :                          @838
 15775: 64 38                    a1 = t1
 15777: 01                       fallthrough
      :                          @839
 15778: 82 89                    a2 = u64 [a1]
 15780: 7b b9                    u64 [a4] = a2
 15782: 95 bb 08                 a4 = a4 + 0x8
 15785: 95 88 08                 a1 = a1 + 0x8
 15788: ac ab f6                 jump @839 if a4 <u a3
      :                          @840
 15791: c8 43 08                 a1 = t1 + t2
 15794: 84 29 07                 a2 = t0 & 0x7
 15797: 51 09 14                 jump @843 if a2 == 0
      :                          @841
 15800: c8 a9 09                 a2 = a2 + a3
 15803: 01                       fallthrough
      :                          @842
 15804: 7c 8b                    a4 = u8 [a1]
 15806: 78 ab                    u8 [a3] = a4
 15808: 95 aa 01                 a3 = a3 + 0x1
 15811: 95 88 01                 a1 = a1 + 0x1
 15814: ac 9a f6                 jump @842 if a3 <u a2
      :                          @843
 15817: 82 10 18                 ra = u64 [sp + 0x18]
 15820: 82 15 10                 s0 = u64 [sp + 0x10]
 15823: 82 16 08                 s1 = u64 [sp + 0x8]
 15826: 95 11 20                 sp = sp + 0x20
 15829: 32 00                    ret
      :                          @844
 15831: 53 19 10 48              jump @853 if a2 <u 16
      :                          @845
 15835: 8d 7a                    i32 a3 = -a0
 15837: 84 aa 07                 a3 = a3 & 0x7
 15840: c8 a7 0b                 a4 = a0 + a3
 15843: 51 0a 0e                 jump @848 if a3 == 0
      :                          @846
 15846: 64 7c                    a5 = a0
 15848: 01                       fallthrough
      :                          @847
 15849: 78 c8                    u8 [a5] = a1
 15851: 95 cc 01                 a5 = a5 + 0x1
 15854: ac bc fb                 jump @847 if a5 <u a4
      :                          @848
 15857: c9 a9 03                 t1 = a2 - a3
 15860: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 15863: c8 cb 0a                 a3 = a4 + a5
 15866: 58 0c 1d                 jump @851 if a5 <=s 0
      :                          @849
 15869: 84 82 ff 00              t0 = a1 & 0xff
 15873: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 15883: ca 92 0c                 a5 = t0 * a2
 15886: 01                       fallthrough
      :                          @850
 15887: 7b bc                    u64 [a4] = a5
 15889: 95 bb 08                 a4 = a4 + 0x8
 15892: ac ab fb                 jump @850 if a4 <u a3
      :                          @851
 15895: 84 39 07                 a2 = t1 & 0x7
 15898: 52 09 0a                 jump @854 if a2 != 0
      :                          @852
 15901: 28 13                    jump @856
      :                          @853
 15903: 64 7a                    a3 = a0
 15905: 51 09 0f                 jump @856 if a2 == 0
      :                          @854
 15908: c8 a9 09                 a2 = a2 + a3
 15911: 01                       fallthrough
      :                          @855
 15912: 78 a8                    u8 [a3] = a1
 15914: 95 aa 01                 a3 = a3 + 0x1
 15917: ac 9a fb                 jump @855 if a3 <u a2
      :                          @856
 15920: 32 00                    ret
      :                          @857 [@dyn 211]
 15922: 82 77                    a0 = u64 [a0]
 15924: 01                       fallthrough
      :                          @858
 15925: 28                       jump @858
      :                          @859
 15926: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 15929: 7b 10 50                 u64 [sp + 0x50] = ra
 15932: 7b 15 48                 u64 [sp + 0x48] = s0
 15935: 7b 16 40                 u64 [sp + 0x40] = s1
 15938: 7b 18                    u64 [sp] = a1
 15940: 98 79 04                 a2 = a0 >> 0x4
 15943: 33 08 27                 a1 = 0x27
 15946: 53 29 71 02 81 00        jump @862 if a2 <u 625
      :                          @860
 15952: 33 08 27                 a1 = 0x27
 15955: 95 1a 3e                 a3 = sp + 0x3e
 15958: 3a 09 08 00 03           a2 = u64 [0x30008]
 15963: 7b 19 10                 u64 [sp + 0x10] = a2
 15966: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 15972: 33 04 7b 14              t2 = 0x147b
 15976: 33 0b 48 10 01           a4 = 0x11048
 15981: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 15987: 01                       fallthrough
      :                          @861
 15988: 64 72                    t0 = a0
 15990: 82 17 10                 a0 = u64 [sp + 0x10]
 15993: d6 72 07                 a0 = t0 mulhu a0
 15996: 98 77 0b                 a0 = a0 >> 0xb
 15999: 82 19 08                 a2 = u64 [sp + 0x8]
 16002: c0 97 0c                 i32 a5 = a0 * a2
 16005: c8 2c 06                 s1 = a5 + t0
 16008: 97 6c 30                 a5 = s1 << 0x30
 16011: 98 cc 32                 a5 = a5 >> 0x32
 16014: ca 4c 0c                 a5 = a5 * t2
 16017: 98 c3 11                 t1 = a5 >> 0x11
 16020: 98 cc 10                 a5 = a5 >> 0x10
 16023: 84 cc fe 07              a5 = a5 & 0x7fe
 16027: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 16030: c8 69 09                 a2 = a2 + s1
 16033: 97 99 31                 a2 = a2 << 0x31
 16036: 98 99 30                 a2 = a2 >> 0x30
 16039: c8 bc 0c                 a5 = a5 + a4
 16042: 7c c6                    s1 = u8 [a5]
 16044: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16047: c8 b9 09                 a2 = a2 + a4
 16050: 7c 95 01                 s0 = u8 [a2 + 0x1]
 16053: 7c 99                    a2 = u8 [a2]
 16055: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 16058: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 16061: 78 a5 01                 u8 [a3 + 0x1] = s0
 16064: 78 a9                    u8 [a3] = a2
 16066: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 16069: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 16072: ac 20 ac                 jump @861 if ra <u t0
      :                          @862
 16075: 54 17 63 3b              jump @864 if a0 <=u 99
      :                          @863
 16079: 97 79 30                 a2 = a0 << 0x30
 16082: 98 99 32                 a2 = a2 >> 0x32
 16085: 96 99 7b 14              a2 = a2 * 0x147b
 16089: 98 99 11                 a2 = a2 >> 0x11
 16092: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 16095: c8 a7 07                 a0 = a0 + a3
 16098: 97 77 31                 a0 = a0 << 0x31
 16101: 98 77 30                 a0 = a0 >> 0x30
 16104: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16107: 33 0a 48 10 01           a3 = 0x11048
 16112: c8 a7 07                 a0 = a0 + a3
 16115: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 16118: 7c 77                    a0 = u8 [a0]
 16120: 95 1b 19                 a4 = sp + 0x19
 16123: c8 8b 0b                 a4 = a4 + a1
 16126: 78 ba 01                 u8 [a4 + 0x1] = a3
 16129: 78 b7                    u8 [a4] = a0
 16131: 64 97                    a0 = a2
 16133: 01                       fallthrough
      :                          @864
 16134: 55 17 0a 14              jump @866 if a0 >=u 10
      :                          @865
 16138: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16141: 95 19 19                 a2 = sp + 0x19
 16144: c8 89 09                 a2 = a2 + a1
 16147: 83 77 30                 i32 a0 = a0 + 0x30
 16150: 78 97                    u8 [a2] = a0
 16152: 28 21                    jump @867
      :                          @866
 16154: 97 77 01                 a0 = a0 << 0x1
 16157: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16160: 33 09 48 10 01           a2 = 0x11048
 16165: c8 97 07                 a0 = a0 + a2
 16168: 7c 79 01                 a2 = u8 [a0 + 0x1]
 16171: 7c 77                    a0 = u8 [a0]
 16173: 95 1a 19                 a3 = sp + 0x19
 16176: c8 8a 0a                 a3 = a3 + a1
 16179: 78 a9 01                 u8 [a3 + 0x1] = a2
 16182: 78 a7                    u8 [a3] = a0
 16184: 01                       fallthrough
      :                          @867
 16185: 95 1a 19                 a3 = sp + 0x19
 16188: c8 8a 0a                 a3 = a3 + a1
 16191: 9a 8b 27                 a4 = 0x27 - a1
 16194: 33 08 f0 0f 01           a1 = 0x10ff0
 16199: 82 17                    a0 = u64 [sp]
 16201: 33 09                    a2 = 0
 16203: 50 20 a8 01 13           ra = 424, jump @869
      :                          @868 [@dyn 212]
 16208: 82 10 50                 ra = u64 [sp + 0x50]
 16211: 82 15 48                 s0 = u64 [sp + 0x48]
 16214: 82 16 40                 s1 = u64 [sp + 0x40]
 16217: 95 11 58                 sp = sp + 0x58
 16220: 32 00                    ret
      :                          @869
 16222: 95 11 98                 sp = sp + 0xffffffffffffff98
 16225: 7b 10 60                 u64 [sp + 0x60] = ra
 16228: 7b 15 58                 u64 [sp + 0x58] = s0
 16231: 7b 16 50                 u64 [sp + 0x50] = s1
 16234: 80 73 34                 t1 = u32 [a0 + 0x34]
 16237: 7b 1a 20                 u64 [sp + 0x20] = a3
 16240: 64 9c                    a5 = a2
 16242: 84 36 01                 s1 = t1 & 0x1
 16245: 33 02 2b                 t0 = 0x2b
 16248: 33 09 00 00 11           a2 = 0x110000
 16253: 84 3a 04                 a3 = t1 & 0x4
 16256: 7b 1b 28                 u64 [sp + 0x28] = a4
 16259: c8 b6 04                 t2 = s1 + a4
 16262: 7b 1c 30                 u64 [sp + 0x30] = a5
 16265: 52 0a 10                 jump @872 if a3 != 0
      :                          @870
 16268: 49 11 38                 u64 [sp + 56] = 0
 16271: 82 78                    a1 = u64 [a0]
 16273: 94 69 2b                 a2 = 0x2b if s1 != 0
 16276: 52 08 35                 jump @876 if a1 != 0
      :                          @871
 16279: 28 56                    jump @881
      :                          @872
 16281: 7b 18 38                 u64 [sp + 0x38] = a1
 16284: 33 09                    a2 = 0
 16286: 51 0c 1b                 jump @875 if a5 == 0
      :                          @873
 16289: 82 1b 38                 a4 = u64 [sp + 0x38]
 16292: 01                       fallthrough
      :                          @874
 16293: 7d b5                    s0 = i8 [a4]
 16295: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 16298: 85 5a 01                 a3 = s0 ^ 0x1
 16301: c8 a9 09                 a2 = a2 + a3
 16304: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16307: 95 bb 01                 a4 = a4 + 0x1
 16310: 52 0c ef                 jump @874 if a5 != 0
      :                          @875
 16313: c8 94 04                 t2 = t2 + a2
 16316: 33 09 00 00 11           a2 = 0x110000
 16321: 82 78                    a1 = u64 [a0]
 16323: db 62 09                 a2 = t0 if s1 != 0
 16326: 51 08 27                 jump @881 if a1 == 0
      :                          @876
 16329: 82 7a 08                 a3 = u64 [a0 + 0x8]
 16332: ae a4 21                 jump @881 if t2 >=u a3
      :                          @877
 16335: 84 38 08                 a1 = t1 & 0x8
 16338: 52 08 51                 jump @884 if a1 != 0
      :                          @878
 16341: 7c 76 38                 s1 = u8 [a0 + 0x38]
 16344: c9 4a 0a                 a3 = a3 - t2
 16347: 7b 19 18                 u64 [sp + 0x18] = a2
 16350: 5a 16 01 a0 00           jump @891 if s1 >s 1
      :                          @879
 16355: 52 06 ad 00              jump @893 if s1 != 0
      :                          @880
 16359: 7b 1a 10                 u64 [sp + 0x10] = a3
 16362: 28 ac 00                 jump @894
      :                          @881
 16365: 82 75 20                 s0 = u64 [a0 + 0x20]
 16368: 82 76 28                 s1 = u64 [a0 + 0x28]
 16371: 64 57                    a0 = s0
 16373: 64 68                    a1 = s1
 16375: 82 1a 38                 a3 = u64 [sp + 0x38]
 16378: 82 1b 30                 a4 = u64 [sp + 0x30]
 16381: 50 20 aa 01 75 01        ra = 426, jump @914
      :                          @882 [@dyn 213]
 16387: 33 08 01                 a1 = 0x1
 16390: 52 07 be 00              jump @899 if a0 != 0
      :                          @883
 16394: 82 6c 18                 a5 = u64 [s1 + 0x18]
 16397: 64 57                    a0 = s0
 16399: 82 18 20                 a1 = u64 [sp + 0x20]
 16402: 82 19 28                 a2 = u64 [sp + 0x28]
 16405: 82 10 60                 ra = u64 [sp + 0x60]
 16408: 82 15 58                 s0 = u64 [sp + 0x58]
 16411: 82 16 50                 s1 = u64 [sp + 0x50]
 16414: 95 11 68                 sp = sp + 0x68
 16417: 32 0c                    jump [a5]
      :                          @884
 16419: 7b 1a 40                 u64 [sp + 0x40] = a3
 16422: 64 45                    s0 = t2
 16424: 81 78 30                 a1 = i32 [a0 + 0x30]
 16427: 7b 18 10                 u64 [sp + 0x10] = a1
 16430: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 16433: 7b 1a 08                 u64 [sp + 0x8] = a3
 16436: 82 7a 20                 a3 = u64 [a0 + 0x20]
 16439: 82 78 28                 a1 = u64 [a0 + 0x28]
 16442: 48 17 30 30              u32 [a0 + 48] = 0x30
 16446: 7b 17                    u64 [sp] = a0
 16448: 46 17 38 01              u8 [a0 + 56] = 0x1
 16452: 7b 1a 48                 u64 [sp + 0x48] = a3
 16455: 64 a7                    a0 = a3
 16457: 64 86                    s1 = a1
 16459: 82 1a 38                 a3 = u64 [sp + 0x38]
 16462: 82 1b 30                 a4 = u64 [sp + 0x30]
 16465: 50 20 ac 01 21 01        ra = 428, jump @914
      :                          @885 [@dyn 214]
 16471: 52 07 69                 jump @898 if a0 != 0
      :                          @886
 16474: 82 17 40                 a0 = u64 [sp + 0x40]
 16477: c9 57 05                 s0 = a0 - s0
 16480: 95 55 01                 s0 = s0 + 0x1
 16483: 01                       fallthrough
      :                          @887
 16484: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 16487: 51 05 cb 00              jump @909 if s0 == 0
      :                          @888
 16491: 82 69 20                 a2 = u64 [s1 + 0x20]
 16494: 33 08 30                 a1 = 0x30
 16497: 82 17 48                 a0 = u64 [sp + 0x48]
 16500: b4 90 02 ae 01           ra = 430, jump [a2]
      :                          @889 [@dyn 215]
 16505: 51 07 eb                 jump @887 if a0 == 0
      :                          @890
 16508: 28 44                    jump @898
      :                          @891
 16510: 52 16 02 12              jump @893 if s1 != 2
      :                          @892
 16514: 98 a6 01                 s1 = a3 >> 0x1
 16517: 95 a8 01                 a1 = a3 + 0x1
 16520: 98 88 01                 a1 = a1 >> 0x1
 16523: 7b 18 10                 u64 [sp + 0x10] = a1
 16526: 28 08                    jump @894
      :                          @893
 16528: 64 a6                    s1 = a3
 16530: 49 11 10                 u64 [sp + 16] = 0
 16533: 01                       fallthrough
      :                          @894
 16534: 82 78 20                 a1 = u64 [a0 + 0x20]
 16537: 7b 18 48                 u64 [sp + 0x48] = a1
 16540: 82 75 28                 s0 = u64 [a0 + 0x28]
 16543: 81 77 30                 a0 = i32 [a0 + 0x30]
 16546: 7b 17 40                 u64 [sp + 0x40] = a0
 16549: 95 66 01                 s1 = s1 + 0x1
 16552: 01                       fallthrough
      :                          @895
 16553: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 16556: 51 06 28                 jump @900 if s1 == 0
      :                          @896
 16559: 82 59 20                 a2 = u64 [s0 + 0x20]
 16562: 82 17 48                 a0 = u64 [sp + 0x48]
 16565: 82 18 40                 a1 = u64 [sp + 0x40]
 16568: b4 90 02 b0 01           ra = 432, jump [a2]
      :                          @897 [@dyn 216]
 16573: 51 07 ec                 jump @895 if a0 == 0
      :                          @898
 16576: 33 08 01                 a1 = 0x1
 16579: 01                       fallthrough
      :                          @899
 16580: 64 87                    a0 = a1
 16582: 82 10 60                 ra = u64 [sp + 0x60]
 16585: 82 15 58                 s0 = u64 [sp + 0x58]
 16588: 82 16 50                 s1 = u64 [sp + 0x50]
 16591: 95 11 68                 sp = sp + 0x68
 16594: 32 00                    ret
      :                          @900
 16596: 82 16 48                 s1 = u64 [sp + 0x48]
 16599: 64 67                    a0 = s1
 16601: 64 58                    a1 = s0
 16603: 82 19 18                 a2 = u64 [sp + 0x18]
 16606: 82 1a 38                 a3 = u64 [sp + 0x38]
 16609: 82 1b 30                 a4 = u64 [sp + 0x30]
 16612: 50 20 b2 01 8e 00        ra = 434, jump @914
      :                          @901 [@dyn 217]
 16618: 33 08 01                 a1 = 0x1
 16621: 52 07 d7                 jump @899 if a0 != 0
      :                          @902
 16624: 82 5a 18                 a3 = u64 [s0 + 0x18]
 16627: 64 67                    a0 = s1
 16629: 82 18 20                 a1 = u64 [sp + 0x20]
 16632: 82 19 28                 a2 = u64 [sp + 0x28]
 16635: b4 a0 02 b4 01           ra = 436, jump [a3]
      :                          @903 [@dyn 218]
 16640: 33 08 01                 a1 = 0x1
 16643: 52 07 c1                 jump @899 if a0 != 0
      :                          @904
 16646: 82 17 10                 a0 = u64 [sp + 0x10]
 16649: 9a 77                    a0 = -a0
 16651: 7b 17 38                 u64 [sp + 0x38] = a0
 16654: 33 06 ff                 s1 = 0xffffffffffffffff
 16657: 01                       fallthrough
      :                          @905
 16658: 82 17 38                 a0 = u64 [sp + 0x38]
 16661: c8 67 07                 a0 = a0 + s1
 16664: 51 17 ff 45              jump @912 if a0 == 4294967295
      :                          @906
 16668: 82 59 20                 a2 = u64 [s0 + 0x20]
 16671: 82 17 48                 a0 = u64 [sp + 0x48]
 16674: 82 18 40                 a1 = u64 [sp + 0x40]
 16677: b4 90 02 b6 01           ra = 438, jump [a2]
      :                          @907 [@dyn 219]
 16682: 95 66 01                 s1 = s1 + 0x1
 16685: 51 07 e5                 jump @905 if a0 == 0
      :                          @908
 16688: 28 39                    jump @913
      :                          @909
 16690: 82 6a 18                 a3 = u64 [s1 + 0x18]
 16693: 82 17 48                 a0 = u64 [sp + 0x48]
 16696: 82 18 20                 a1 = u64 [sp + 0x20]
 16699: 82 19 28                 a2 = u64 [sp + 0x28]
 16702: b4 a0 02 b8 01           ra = 440, jump [a3]
      :                          @910 [@dyn 220]
 16707: 33 08 01                 a1 = 0x1
 16710: 52 07 7e ff              jump @899 if a0 != 0
      :                          @911
 16714: 33 08                    a1 = 0
 16716: 82 16                    s1 = u64 [sp]
 16718: 82 17 10                 a0 = u64 [sp + 0x10]
 16721: 7a 67 30                 u32 [s1 + 0x30] = a0
 16724: 82 17 08                 a0 = u64 [sp + 0x8]
 16727: 78 67 38                 u8 [s1 + 0x38] = a0
 16730: 28 6a ff                 jump @899
      :                          @912
 16733: 82 16 10                 s1 = u64 [sp + 0x10]
 16736: 82 17 10                 a0 = u64 [sp + 0x10]
 16739: d8 76 08                 a1 = s1 <u a0
 16742: 28 5e ff                 jump @899
      :                          @913
 16745: 82 17 10                 a0 = u64 [sp + 0x10]
 16748: d8 76 08                 a1 = s1 <u a0
 16751: 28 55 ff                 jump @899
      :                          @914
 16754: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16757: 7b 10 20                 u64 [sp + 0x20] = ra
 16760: 7b 15 18                 u64 [sp + 0x18] = s0
 16763: 7b 16 10                 u64 [sp + 0x10] = s1
 16766: 83 9c                    i32 a5 = a2 + 0
 16768: 33 02 00 00 11           t0 = 0x110000
 16773: 64 a6                    s1 = a3
 16775: 64 85                    s0 = a1
 16777: 64 7a                    a3 = a0
 16779: aa 2c 21                 jump @917 if a5 == t0
      :                          @915
 16782: 82 5c 20                 a5 = u64 [s0 + 0x20]
 16785: 64 a7                    a0 = a3
 16787: 64 98                    a1 = a2
 16789: 7b 1b 08                 u64 [sp + 0x8] = a4
 16792: 7b 1a                    u64 [sp] = a3
 16794: b4 c0 02 ba 01           ra = 442, jump [a5]
      :                          @916 [@dyn 221]
 16799: 82 1a                    a3 = u64 [sp]
 16801: 82 1b 08                 a4 = u64 [sp + 0x8]
 16804: 64 78                    a1 = a0
 16806: 33 07 01                 a0 = 0x1
 16809: 52 08 20                 jump @920 if a1 != 0
      :                          @917
 16812: 51 06 1a                 jump @919 if s1 == 0
      :                          @918
 16815: 82 5c 18                 a5 = u64 [s0 + 0x18]
 16818: 64 a7                    a0 = a3
 16820: 64 68                    a1 = s1
 16822: 64 b9                    a2 = a4
 16824: 82 10 20                 ra = u64 [sp + 0x20]
 16827: 82 15 18                 s0 = u64 [sp + 0x18]
 16830: 82 16 10                 s1 = u64 [sp + 0x10]
 16833: 95 11 28                 sp = sp + 0x28
 16836: 32 0c                    jump [a5]
      :                          @919
 16838: 33 07                    a0 = 0
 16840: 01                       fallthrough
      :                          @920
 16841: 82 10 20                 ra = u64 [sp + 0x20]
 16844: 82 15 18                 s0 = u64 [sp + 0x18]
 16847: 82 16 10                 s1 = u64 [sp + 0x10]
 16850: 95 11 28                 sp = sp + 0x28
 16853: 32 00                    ret
      :                          @921
 16855: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 16859: 7b 10 80 00              u64 [sp + 0x80] = ra
 16863: 7b 15 78                 u64 [sp + 0x78] = s0
 16866: 7b 16 70                 u64 [sp + 0x70] = s1
 16869: 49 11 60 20              u64 [sp + 96] = 0x20
 16873: 33 0a 03                 a3 = 0x3
 16876: 78 1a 68                 u8 [sp + 0x68] = a3
 16879: 82 96 20                 s1 = u64 [a2 + 0x20]
 16882: 49 11 30                 u64 [sp + 48] = 0
 16885: 49 11 40                 u64 [sp + 64] = 0
 16888: 7b 17 50                 u64 [sp + 0x50] = a0
 16891: 7b 18 58                 u64 [sp + 0x58] = a1
 16894: 51 06 0a 01              jump @943 if s1 == 0
      :                          @922
 16898: 82 97 28                 a0 = u64 [a2 + 0x28]
 16901: 51 07 79 01              jump @953 if a0 == 0
      :                          @923
 16905: 49 11 28                 u64 [sp + 40] = 0
 16908: 82 95                    s0 = u64 [a2]
 16910: 7b 19 08                 u64 [sp + 0x8] = a2
 16913: 82 98 10                 a1 = u64 [a2 + 0x10]
 16916: 7b 18 18                 u64 [sp + 0x18] = a1
 16919: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16922: 97 88 03                 a1 = a1 << 0x3
 16925: 98 88 03                 a1 = a1 >> 0x3
 16928: 95 88 01                 a1 = a1 + 0x1
 16931: 7b 18                    u64 [sp] = a1
 16933: 95 55 08                 s0 = s0 + 0x8
 16936: 96 78 38                 a1 = a0 * 0x38
 16939: 95 66 18                 s1 = s1 + 0x18
 16942: 33 07 a6 01              a0 = 0x1a6
 16946: 7b 17 10                 u64 [sp + 0x10] = a0
 16949: 01                       fallthrough
      :                          @924
 16950: 7b 18 20                 u64 [sp + 0x20] = a1
 16953: 82 59                    a2 = u64 [s0]
 16955: 51 09 18                 jump @927 if a2 == 0
      :                          @925
 16958: 82 1a 58                 a3 = u64 [sp + 0x58]
 16961: 82 17 50                 a0 = u64 [sp + 0x50]
 16964: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 16967: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16970: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @926 [@dyn 222]
 16975: 52 07 55 01              jump @956 if a0 != 0
      :                          @927
 16979: 81 67 10                 a0 = i32 [s1 + 0x10]
 16982: 7a 17 60                 u32 [sp + 0x60] = a0
 16985: 7c 67 18                 a0 = u8 [s1 + 0x18]
 16988: 78 17 68                 u8 [sp + 0x68] = a0
 16991: 81 67 14                 a0 = i32 [s1 + 0x14]
 16994: 7a 17 64                 u32 [sp + 0x64] = a0
 16997: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17000: 82 67                    a0 = u64 [s1]
 17002: 51 08 26                 jump @932 if a1 == 0
      :                          @928
 17005: 52 18 01 16              jump @930 if a1 != 1
      :                          @929
 17009: 97 77 04                 a0 = a0 << 0x4
 17012: 82 18 18                 a1 = u64 [sp + 0x18]
 17015: c8 87 07                 a0 = a0 + a1
 17018: 82 78 08                 a1 = u64 [a0 + 0x8]
 17021: 82 19 10                 a2 = u64 [sp + 0x10]
 17024: aa 98 07                 jump @931 if a1 == a2
      :                          @930
 17027: 33 08                    a1 = 0
 17029: 28 0f                    jump @933
      :                          @931
 17031: 82 77                    a0 = u64 [a0]
 17033: 82 77                    a0 = u64 [a0]
 17035: 33 08 01                 a1 = 0x1
 17038: 28 06                    jump @933
      :                          @932
 17040: 33 08 01                 a1 = 0x1
 17043: 01                       fallthrough
      :                          @933
 17044: 7b 18 30                 u64 [sp + 0x30] = a1
 17047: 7b 17 38                 u64 [sp + 0x38] = a0
 17050: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 17053: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 17056: 51 08 26                 jump @938 if a1 == 0
      :                          @934
 17059: 52 18 01 16              jump @936 if a1 != 1
      :                          @935
 17063: 97 77 04                 a0 = a0 << 0x4
 17066: 82 18 18                 a1 = u64 [sp + 0x18]
 17069: c8 87 07                 a0 = a0 + a1
 17072: 82 78 08                 a1 = u64 [a0 + 0x8]
 17075: 82 19 10                 a2 = u64 [sp + 0x10]
 17078: aa 98 07                 jump @937 if a1 == a2
      :                          @936
 17081: 33 08                    a1 = 0
 17083: 28 0f                    jump @939
      :                          @937
 17085: 82 77                    a0 = u64 [a0]
 17087: 82 77                    a0 = u64 [a0]
 17089: 33 08 01                 a1 = 0x1
 17092: 28 06                    jump @939
      :                          @938
 17094: 33 08 01                 a1 = 0x1
 17097: 01                       fallthrough
      :                          @939
 17098: 7b 18 40                 u64 [sp + 0x40] = a1
 17101: 7b 17 48                 u64 [sp + 0x48] = a0
 17104: 82 67 08                 a0 = u64 [s1 + 0x8]
 17107: 97 77 04                 a0 = a0 << 0x4
 17110: 82 18 18                 a1 = u64 [sp + 0x18]
 17113: c8 78 08                 a1 = a1 + a0
 17116: 82 87                    a0 = u64 [a1]
 17118: 82 89 08                 a2 = u64 [a1 + 0x8]
 17121: 95 18 30                 a1 = sp + 0x30
 17124: b4 90 02 be 01           ra = 446, jump [a2]
      :                          @940 [@dyn 223]
 17129: 52 07 bb 00              jump @956 if a0 != 0
      :                          @941
 17133: 95 55 10                 s0 = s0 + 0x10
 17136: 82 18 20                 a1 = u64 [sp + 0x20]
 17139: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 17142: 95 66 38                 s1 = s1 + 0x38
 17145: 82 17 28                 a0 = u64 [sp + 0x28]
 17148: 95 77 01                 a0 = a0 + 0x1
 17151: 7b 17 28                 u64 [sp + 0x28] = a0
 17154: 52 08 34 ff              jump @924 if a1 != 0
      :                          @942
 17158: 28 6b                    jump @951
      :                          @943
 17160: 82 97 18                 a0 = u64 [a2 + 0x18]
 17163: 51 07 73                 jump @953 if a0 == 0
      :                          @944
 17166: 82 95 10                 s0 = u64 [a2 + 0x10]
 17169: 33 0a                    a3 = 0
 17171: 97 78 04                 a1 = a0 << 0x4
 17174: c8 58 08                 a1 = a1 + s0
 17177: 7b 18 20                 u64 [sp + 0x20] = a1
 17180: 7b 19 08                 u64 [sp + 0x8] = a2
 17183: 82 96                    s1 = u64 [a2]
 17185: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17188: 97 77 04                 a0 = a0 << 0x4
 17191: 98 77 04                 a0 = a0 >> 0x4
 17194: 95 77 01                 a0 = a0 + 0x1
 17197: 7b 17                    u64 [sp] = a0
 17199: 95 66 08                 s1 = s1 + 0x8
 17202: 01                       fallthrough
      :                          @945
 17203: 7b 1a 28                 u64 [sp + 0x28] = a3
 17206: 82 69                    a2 = u64 [s1]
 17208: 51 09 17                 jump @948 if a2 == 0
      :                          @946
 17211: 82 1a 58                 a3 = u64 [sp + 0x58]
 17214: 82 17 50                 a0 = u64 [sp + 0x50]
 17217: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17220: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17223: b4 a0 02 c0 01           ra = 448, jump [a3]
      :                          @947 [@dyn 224]
 17228: 52 07 58                 jump @956 if a0 != 0
      :                          @948
 17231: 82 57                    a0 = u64 [s0]
 17233: 82 59 08                 a2 = u64 [s0 + 0x8]
 17236: 95 18 30                 a1 = sp + 0x30
 17239: b4 90 02 c2 01           ra = 450, jump [a2]
      :                          @949 [@dyn 225]
 17244: 52 07 48                 jump @956 if a0 != 0
      :                          @950
 17247: 95 66 10                 s1 = s1 + 0x10
 17250: 95 55 10                 s0 = s0 + 0x10
 17253: 82 1a 28                 a3 = u64 [sp + 0x28]
 17256: 95 aa 01                 a3 = a3 + 0x1
 17259: 82 17 20                 a0 = u64 [sp + 0x20]
 17262: ab 75 c5                 jump @945 if s0 != a0
      :                          @951
 17265: 82 19 08                 a2 = u64 [sp + 0x8]
 17268: 82 1a                    a3 = u64 [sp]
 17270: 82 97 08                 a0 = u64 [a2 + 0x8]
 17273: ac 7a 0d                 jump @954 if a3 <u a0
      :                          @952
 17276: 28 2d                    jump @957
      :                          @953
 17278: 33 0a                    a3 = 0
 17280: 82 97 08                 a0 = u64 [a2 + 0x8]
 17283: 54 07 26                 jump @957 if a0 <=u 0
      :                          @954
 17286: 82 97                    a0 = u64 [a2]
 17288: 97 a8 04                 a1 = a3 << 0x4
 17291: c8 87 09                 a2 = a0 + a1
 17294: 82 1a 58                 a3 = u64 [sp + 0x58]
 17297: 82 17 50                 a0 = u64 [sp + 0x50]
 17300: 82 98                    a1 = u64 [a2]
 17302: 82 99 08                 a2 = u64 [a2 + 0x8]
 17305: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17308: b4 a0 02 c4 01           ra = 452, jump [a3]
      :                          @955 [@dyn 226]
 17313: 51 07 08                 jump @957 if a0 == 0
      :                          @956
 17316: 33 07 01                 a0 = 0x1
 17319: 28 05                    jump @958
      :                          @957
 17321: 33 07                    a0 = 0
 17323: 01                       fallthrough
      :                          @958
 17324: 82 10 80 00              ra = u64 [sp + 0x80]
 17328: 82 15 78                 s0 = u64 [sp + 0x78]
 17331: 82 16 70                 s1 = u64 [sp + 0x70]
 17334: 95 11 88 00              sp = sp + 0x88
 17338: 32 00                    ret
      :                          @959 [@dyn 227]
 17340: 32 00                    ret
      :                          @960 [@dyn 228]
 17342: 95 11 80                 sp = sp + 0xffffffffffffff80
 17345: 7b 10 78                 u64 [sp + 0x78] = ra
 17348: 7b 15 70                 u64 [sp + 0x70] = s0
 17351: 7b 16 68                 u64 [sp + 0x68] = s1
 17354: 64 92                    t0 = a2
 17356: 33 00                    ra = 0
 17358: 33 0b                    a4 = 0
 17360: 33 05                    s0 = 0
 17362: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 17372: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 17378: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 17388: 82 79 10                 a2 = u64 [a0 + 0x10]
 17391: 7b 19 48                 u64 [sp + 0x48] = a2
 17394: 82 79                    a2 = u64 [a0]
 17396: 7b 19 38                 u64 [sp + 0x38] = a2
 17399: 82 77 08                 a0 = u64 [a0 + 0x8]
 17402: 7b 17 30                 u64 [sp + 0x30] = a0
 17405: 33 07 38 10 01           a0 = 0x11038
 17410: 7b 17 08                 u64 [sp + 0x8] = a0
 17413: 3a 07 10 00 03           a0 = u64 [0x30010]
 17418: 7b 17 60                 u64 [sp + 0x60] = a0
 17421: 7b 18 58                 u64 [sp + 0x58] = a1
 17424: 95 88 08                 a1 = a1 + 0x8
 17427: 7b 18                    u64 [sp] = a1
 17429: 33 0c 0a                 a5 = 0xa
 17432: 7b 12 20                 u64 [sp + 0x20] = t0
 17435: 7b 13 18                 u64 [sp + 0x18] = t1
 17438: 7b 14 10                 u64 [sp + 0x10] = t2
 17441: 28 3b                    jump @964
      :                          @961
 17443: 64 06                    s1 = ra
 17445: c8 89 07                 a0 = a2 + a1
 17448: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 17451: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17454: 88 77 01                 a0 = a0 <u 0x1
 17457: 01                       fallthrough
      :                          @962
 17458: 82 1a 48                 a3 = u64 [sp + 0x48]
 17461: 78 a7                    u8 [a3] = a0
 17463: 82 17 30                 a0 = u64 [sp + 0x30]
 17466: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17469: 82 17 38                 a0 = u64 [sp + 0x38]
 17472: b4 a0 02 ca 01           ra = 458, jump [a3]
      :                          @963 [@dyn 229]
 17477: 64 5b                    a4 = s0
 17479: 82 12 20                 t0 = u64 [sp + 0x20]
 17482: 82 13 18                 t1 = u64 [sp + 0x18]
 17485: 82 14 10                 t2 = u64 [sp + 0x10]
 17488: 64 60                    ra = s1
 17490: 33 0c 0a                 a5 = 0xa
 17493: 82 15 40                 s0 = u64 [sp + 0x40]
 17496: 52 07 64 01              jump @1005 if a0 != 0
      :                          @964
 17500: 84 57 ff 00              a0 = s0 & 0xff
 17504: 52 07 58 01              jump @1004 if a0 != 0
      :                          @965
 17508: 7b 1b 50                 u64 [sp + 0x50] = a4
 17511: ae 02 0a                 jump @968 if t0 >=u ra
      :                          @966
 17514: 28 ef 00                 jump @995
      :                          @967
 17517: ac 02 ec 00              jump @995 if t0 <u ra
      :                          @968
 17521: c9 02 08                 a1 = t0 - ra
 17524: 82 16 58                 s1 = u64 [sp + 0x58]
 17527: c8 06 06                 s1 = s1 + ra
 17530: 55 18 10 1d              jump @974 if a1 >=u 16
      :                          @969
 17534: aa 02 d8 00              jump @994 if t0 == ra
      :                          @970
 17538: 33 0a                    a3 = 0
 17540: 01                       fallthrough
      :                          @971
 17541: c8 a6 07                 a0 = s1 + a3
 17544: 7c 77                    a0 = u8 [a0]
 17546: aa c7 a5 00              jump @989 if a0 == a5
      :                          @972
 17550: 95 aa 01                 a3 = a3 + 0x1
 17553: ab a8 f4                 jump @971 if a1 != a3
      :                          @973
 17556: 28 c2 00                 jump @994
      :                          @974
 17559: 95 69 07                 a2 = s1 + 0x7
 17562: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 17565: c9 6a 07                 a0 = a3 - s1
 17568: d3 6a 0a                 a3 = a3 ^ s1
 17571: 88 aa 01                 a3 = a3 <u 0x1
 17574: 88 7b 01                 a4 = a0 <u 0x1
 17577: d4 ba 0a                 a3 = a3 | a4
 17580: 51 0a 45                 jump @980 if a3 == 0
      :                          @975
 17583: 33 07                    a0 = 0
 17585: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17588: 82 1b                    a4 = u64 [sp]
 17590: c8 0b 0b                 a4 = a4 + ra
 17593: 28 08                    jump @977
      :                          @976
 17595: 82 1b                    a4 = u64 [sp]
 17597: c8 0b 0b                 a4 = a4 + ra
 17600: 01                       fallthrough
      :                          @977
 17601: c8 76 0c                 a5 = s1 + a0
 17604: 82 cc                    a5 = u64 [a5]
 17606: c8 7b 09                 a2 = a4 + a0
 17609: 82 99                    a2 = u64 [a2]
 17611: d3 4c 05                 s0 = a5 ^ t2
 17614: c8 35 05                 s0 = s0 + t1
 17617: e0 c5 0c                 a5 = s0 & ~a5
 17620: d3 49 05                 s0 = a2 ^ t2
 17623: c8 35 05                 s0 = s0 + t1
 17626: e0 95 09                 a2 = s0 & ~a2
 17629: d4 c9 09                 a2 = a2 | a5
 17632: 82 1c 60                 a5 = u64 [sp + 0x60]
 17635: d2 c9 09                 a2 = a2 & a5
 17638: 52 09 1f                 jump @983 if a2 != 0
      :                          @978
 17641: 95 77 10                 a0 = a0 + 0x10
 17644: ae 7a d5                 jump @977 if a3 >=u a0
      :                          @979
 17647: 28 16                    jump @983
      :                          @980
 17649: c8 a6 0b                 a4 = s1 + a3
 17652: 7c bb                    a4 = u8 [a4]
 17654: aa cb 51                 jump @992 if a4 == a5
      :                          @981
 17657: 95 aa 01                 a3 = a3 + 0x1
 17660: ab a7 f5                 jump @980 if a0 != a3
      :                          @982
 17663: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17666: ae 7a b9                 jump @976 if a3 >=u a0
      :                          @983
 17669: aa 87 9b 00              jump @1001 if a0 == a1
      :                          @984
 17673: 33 0a                    a3 = 0
 17675: c8 76 06                 s1 = s1 + a0
 17678: c9 72 08                 a1 = t0 - a0
 17681: c9 08 08                 a1 = a1 - ra
 17684: 33 0c 0a                 a5 = 0xa
 17687: 82 1b 50                 a4 = u64 [sp + 0x50]
 17690: 01                       fallthrough
      :                          @985
 17691: c8 a6 09                 a2 = s1 + a3
 17694: 7c 99                    a2 = u8 [a2]
 17696: aa c9 0b                 jump @988 if a2 == a5
      :                          @986
 17699: 95 aa 01                 a3 = a3 + 0x1
 17702: ab a8 f5                 jump @985 if a1 != a3
      :                          @987
 17705: 28 2d                    jump @994
      :                          @988
 17707: c8 7a 0a                 a3 = a3 + a0
 17710: 01                       fallthrough
      :                          @989
 17711: c8 0a 0a                 a3 = a3 + ra
 17714: 95 a0 01                 ra = a3 + 0x1
 17717: ae 2a 38 ff              jump @967 if a3 >=u t0
      :                          @990
 17721: 82 17 58                 a0 = u64 [sp + 0x58]
 17724: c8 7a 0a                 a3 = a3 + a0
 17727: 7c a7                    a0 = u8 [a3]
 17729: ab c7 2c ff              jump @967 if a0 != a5
      :                          @991
 17733: 28 62                    jump @1002
      :                          @992
 17735: 82 1b 50                 a4 = u64 [sp + 0x50]
 17738: c8 0a 0a                 a3 = a3 + ra
 17741: 95 a0 01                 ra = a3 + 0x1
 17744: ac 2a e9                 jump @990 if a3 <u t0
      :                          @993
 17747: 28 1a ff                 jump @967
      :                          @994
 17750: 64 20                    ra = t0
 17752: 01                       fallthrough
      :                          @995
 17753: 49 11 40 01              u64 [sp + 64] = 0x1
 17757: 64 b5                    s0 = a4
 17759: 64 26                    s1 = t0
 17761: aa 2b 57                 jump @1004 if a4 == t0
      :                          @996
 17764: 82 17 48                 a0 = u64 [sp + 0x48]
 17767: 7c 77                    a0 = u8 [a0]
 17769: 51 07 23                 jump @999 if a0 == 0
      :                          @997
 17772: 82 17 30                 a0 = u64 [sp + 0x30]
 17775: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17778: 33 09 04                 a2 = 0x4
 17781: 82 17 38                 a0 = u64 [sp + 0x38]
 17784: 82 18 08                 a1 = u64 [sp + 0x8]
 17787: 7b 10 28                 u64 [sp + 0x28] = ra
 17790: b4 a0 02 cc 01           ra = 460, jump [a3]
      :                          @998 [@dyn 230]
 17795: 82 1b 50                 a4 = u64 [sp + 0x50]
 17798: 82 10 28                 ra = u64 [sp + 0x28]
 17801: 52 07 33                 jump @1005 if a0 != 0
      :                          @999
 17804: c9 b6 09                 a2 = s1 - a4
 17807: 82 18 58                 a1 = u64 [sp + 0x58]
 17810: c8 b8 08                 a1 = a1 + a4
 17813: ab b6 8e fe              jump @961 if s1 != a4
      :                          @1000
 17817: 64 06                    s1 = ra
 17819: 33 07                    a0 = 0
 17821: 28 95 fe                 jump @962
      :                          @1001
 17824: 64 20                    ra = t0
 17826: 82 1b 50                 a4 = u64 [sp + 0x50]
 17829: 28 b4                    jump @995
      :                          @1002
 17831: 49 11 40                 u64 [sp + 64] = 0
 17834: 64 05                    s0 = ra
 17836: 64 06                    s1 = ra
 17838: 82 17 48                 a0 = u64 [sp + 0x48]
 17841: 7c 77                    a0 = u8 [a0]
 17843: 52 07 b9                 jump @997 if a0 != 0
      :                          @1003
 17846: 28 d6                    jump @999
      :                          @1004
 17848: 33 07                    a0 = 0
 17850: 28 06                    jump @1006
      :                          @1005
 17852: 33 07 01                 a0 = 0x1
 17855: 01                       fallthrough
      :                          @1006
 17856: 82 10 78                 ra = u64 [sp + 0x78]
 17859: 82 15 70                 s0 = u64 [sp + 0x70]
 17862: 82 16 68                 s1 = u64 [sp + 0x68]
 17865: 95 11 80 00              sp = sp + 0x80
 17869: 32 00                    ret
      :                          @1007 [@dyn 231]
 17871: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17874: 7b 10 20                 u64 [sp + 0x20] = ra
 17877: 7b 15 18                 u64 [sp + 0x18] = s0
 17880: 7b 16 10                 u64 [sp + 0x10] = s1
 17883: 82 75 10                 s0 = u64 [a0 + 0x10]
 17886: 7c 59                    a2 = u8 [s0]
 17888: 82 7b                    a4 = u64 [a0]
 17890: 82 76 08                 s1 = u64 [a0 + 0x8]
 17893: 51 09 33                 jump @1011 if a2 == 0
      :                          @1008
 17896: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17899: 7b 18 08                 u64 [sp + 0x8] = a1
 17902: 33 08 38 10 01           a1 = 0x11038
 17907: 33 09 04                 a2 = 0x4
 17910: 64 b7                    a0 = a4
 17912: 7b 1b                    u64 [sp] = a4
 17914: b4 a0 02 d0 01           ra = 464, jump [a3]
      :                          @1009 [@dyn 232]
 17919: 82 18 08                 a1 = u64 [sp + 0x8]
 17922: 82 1b                    a4 = u64 [sp]
 17924: 51 07 14                 jump @1011 if a0 == 0
      :                          @1010
 17927: 33 07 01                 a0 = 0x1
 17930: 82 10 20                 ra = u64 [sp + 0x20]
 17933: 82 15 18                 s0 = u64 [sp + 0x18]
 17936: 82 16 10                 s1 = u64 [sp + 0x10]
 17939: 95 11 28                 sp = sp + 0x28
 17942: 32 00                    ret
      :                          @1011
 17944: 83 87                    i32 a0 = a1 + 0
 17946: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17949: 88 77 01                 a0 = a0 <u 0x1
 17952: 78 57                    u8 [s0] = a0
 17954: 82 6c 20                 a5 = u64 [s1 + 0x20]
 17957: 64 b7                    a0 = a4
 17959: 82 10 20                 ra = u64 [sp + 0x20]
 17962: 82 15 18                 s0 = u64 [sp + 0x18]
 17965: 82 16 10                 s1 = u64 [sp + 0x10]
 17968: 95 11 28                 sp = sp + 0x28
 17971: 32 0c                    jump [a5]
      :                          @1012 [@dyn 233]
 17973: 64 8a                    a3 = a1
 17975: 33 08 f8 0f 01           a1 = 0x10ff8
 17980: 64 a9                    a2 = a3
 17982: 28 99 fb                 jump @921
      :                          @1013
 17985: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 17989: 7b 10 88 00              u64 [sp + 0x88] = ra
 17993: 7b 15 80 00              u64 [sp + 0x80] = s0
 17997: 7b 16 78                 u64 [sp + 0x78] = s1
 18000: 64 75                    s0 = a0
 18002: 7c 77 08                 a0 = u8 [a0 + 0x8]
 18005: 64 8b                    a4 = a1
 18007: 33 08 01                 a1 = 0x1
 18010: 33 06 01                 s1 = 0x1
 18013: 51 07 1d                 jump @1015 if a0 == 0
      :                          @1014
 18016: 78 56 08                 u8 [s0 + 0x8] = s1
 18019: 46 15 09 01              u8 [s0 + 9] = 0x1
 18023: 64 57                    a0 = s0
 18025: 82 10 88 00              ra = u64 [sp + 0x88]
 18029: 82 15 80 00              s0 = u64 [sp + 0x80]
 18033: 82 16 78                 s1 = u64 [sp + 0x78]
 18036: 95 11 90 00              sp = sp + 0x90
 18040: 32 00                    ret
      :                          @1015
 18042: 64 9a                    a3 = a2
 18044: 82 5c                    a5 = u64 [s0]
 18046: 80 c7 34                 a0 = u32 [a5 + 0x34]
 18049: 7c 58 09                 a1 = u8 [s0 + 0x9]
 18052: 84 79 04                 a2 = a0 & 0x4
 18055: 52 09 45                 jump @1021 if a2 != 0
      :                          @1016
 18058: 51 08 32                 jump @1019 if a1 == 0
      :                          @1017
 18061: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18064: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18067: 82 83 18                 t1 = u64 [a1 + 0x18]
 18070: 33 08 40 10 01           a1 = 0x11040
 18075: 33 09 02                 a2 = 0x2
 18078: 64 a6                    s1 = a3
 18080: 7b 1b 10                 u64 [sp + 0x10] = a4
 18083: 7b 1c 08                 u64 [sp + 0x8] = a5
 18086: b4 30 02 d4 01           ra = 468, jump [t1]
      :                          @1018 [@dyn 234]
 18091: 82 1c 08                 a5 = u64 [sp + 0x8]
 18094: 82 1b 10                 a4 = u64 [sp + 0x10]
 18097: 64 6a                    a3 = s1
 18099: 33 08 01                 a1 = 0x1
 18102: 33 06 01                 s1 = 0x1
 18105: 52 07 a7                 jump @1014 if a0 != 0
      :                          @1019
 18108: 64 b7                    a0 = a4
 18110: 64 c8                    a1 = a5
 18112: b4 a0 02 d6 01           ra = 470, jump [a3]
      :                          @1020 [@dyn 235]
 18117: 33 08 01                 a1 = 0x1
 18120: 64 76                    s1 = a0
 18122: 28 96                    jump @1014
      :                          @1021
 18124: 52 08 37                 jump @1025 if a1 != 0
      :                          @1022
 18127: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18130: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18133: 82 83 18                 t1 = u64 [a1 + 0x18]
 18136: 33 08 44 10 01           a1 = 0x11044
 18141: 33 09 01                 a2 = 0x1
 18144: 33 06 01                 s1 = 0x1
 18147: 7b 1a                    u64 [sp] = a3
 18149: 7b 1b 10                 u64 [sp + 0x10] = a4
 18152: 7b 1c 08                 u64 [sp + 0x8] = a5
 18155: b4 30 02 d8 01           ra = 472, jump [t1]
      :                          @1023 [@dyn 236]
 18160: 82 1c 08                 a5 = u64 [sp + 0x8]
 18163: 82 1b 10                 a4 = u64 [sp + 0x10]
 18166: 82 1a                    a3 = u64 [sp]
 18168: 33 08 01                 a1 = 0x1
 18171: 52 07 65 ff              jump @1014 if a0 != 0
      :                          @1024
 18175: 81 c7 34                 a0 = i32 [a5 + 0x34]
 18178: 01                       fallthrough
      :                          @1025
 18179: 33 06 01                 s1 = 0x1
 18182: 78 16 37                 u8 [sp + 0x37] = s1
 18185: 82 c8 20                 a1 = u64 [a5 + 0x20]
 18188: 82 c9 28                 a2 = u64 [a5 + 0x28]
 18191: 7b 18 18                 u64 [sp + 0x18] = a1
 18194: 7b 19 20                 u64 [sp + 0x20] = a2
 18197: 95 18 37                 a1 = sp + 0x37
 18200: 7b 18 28                 u64 [sp + 0x28] = a1
 18203: 81 c8 30                 a1 = i32 [a5 + 0x30]
 18206: 7c c9 38                 a2 = u8 [a5 + 0x38]
 18209: 82 c3                    t1 = u64 [a5]
 18211: 82 c4 08                 t2 = u64 [a5 + 0x8]
 18214: 82 c0 10                 ra = u64 [a5 + 0x10]
 18217: 82 c2 18                 t0 = u64 [a5 + 0x18]
 18220: 7a 17 6c                 u32 [sp + 0x6c] = a0
 18223: 7a 18 68                 u32 [sp + 0x68] = a1
 18226: 78 19 70                 u8 [sp + 0x70] = a2
 18229: 7b 13 38                 u64 [sp + 0x38] = t1
 18232: 7b 14 40                 u64 [sp + 0x40] = t2
 18235: 7b 10 48                 u64 [sp + 0x48] = ra
 18238: 7b 12 50                 u64 [sp + 0x50] = t0
 18241: 95 17 18                 a0 = sp + 0x18
 18244: 7b 17 58                 u64 [sp + 0x58] = a0
 18247: 33 07 f8 0f 01           a0 = 0x10ff8
 18252: 7b 17 60                 u64 [sp + 0x60] = a0
 18255: 95 18 38                 a1 = sp + 0x38
 18258: 64 b7                    a0 = a4
 18260: b4 a0 02 da 01           ra = 474, jump [a3]
      :                          @1026 [@dyn 237]
 18265: 52 07 21                 jump @1029 if a0 != 0
      :                          @1027
 18268: 82 18 60                 a1 = u64 [sp + 0x60]
 18271: 82 17 58                 a0 = u64 [sp + 0x58]
 18274: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18277: 33 08 42 10 01           a1 = 0x11042
 18282: 33 09 02                 a2 = 0x2
 18285: b4 a0 02 dc 01           ra = 476, jump [a3]
      :                          @1028 [@dyn 238]
 18290: 64 76                    s1 = a0
 18292: 33 08 01                 a1 = 0x1
 18295: 28 e9 fe                 jump @1014
      :                          @1029
 18298: 33 08 01                 a1 = 0x1
 18301: 28 e3 fe                 jump @1014
      :                          @1030
 18304: 51 08 9b 00              jump @1051 if a1 == 0
      :                          @1031
 18308: 64 79                    a2 = a0
 18310: 7c 77                    a0 = u8 [a0]
 18312: 51 07 91 00              jump @1050 if a0 == 0
      :                          @1032
 18316: 51 27 ff 00 90 00        jump @1052 if a0 == 255
      :                          @1033
 18322: 6c 7a                    a3 = sext.b a0
 18324: 57 0a 09                 jump @1035 if a3 <s 0
      :                          @1034
 18327: 33 0a                    a3 = 0
 18329: 33 08                    a1 = 0
 18331: 28 73                    jump @1049
      :                          @1035
 18333: 55 27 c0 00 0d           jump @1037 if a0 >=u 192
      :                          @1036
 18338: 33 0a 01                 a3 = 0x1
 18341: 33 0b 80                 a4 = 0xffffffffffffff80
 18344: 28 4a                    jump @1046
      :                          @1037
 18346: 55 27 e0 00 0e           jump @1039 if a0 >=u 224
      :                          @1038
 18351: 33 0a 02                 a3 = 0x2
 18354: 33 0b 40 ff              a4 = 0xffffffffffffff40
 18358: 28 3c                    jump @1046
      :                          @1039
 18360: 55 27 f0 00 0e           jump @1041 if a0 >=u 240
      :                          @1040
 18365: 33 0a 03                 a3 = 0x3
 18368: 33 0b 20 ff              a4 = 0xffffffffffffff20
 18372: 28 2e                    jump @1046
      :                          @1041
 18374: 55 27 f8 00 0e           jump @1043 if a0 >=u 248
      :                          @1042
 18379: 33 0a 04                 a3 = 0x4
 18382: 33 0b 10 ff              a4 = 0xffffffffffffff10
 18386: 28 20                    jump @1046
      :                          @1043
 18388: 55 27 fc 00 0e           jump @1045 if a0 >=u 252
      :                          @1044
 18393: 33 0a 05                 a3 = 0x5
 18396: 33 0b 08 ff              a4 = 0xffffffffffffff08
 18400: 28 12                    jump @1046
      :                          @1045
 18402: 88 7a fe 00              a3 = a0 <u 0xfe
 18406: 33 0b 04 ff              a4 = 0xffffffffffffff04
 18410: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 18414: 85 aa 07                 a3 = a3 ^ 0x7
 18417: 01                       fallthrough
      :                          @1046
 18418: ae 8a 2b                 jump @1053 if a3 >=u a1
      :                          @1047
 18421: 33 08                    a1 = 0
 18423: c8 b7 07                 a0 = a0 + a4
 18426: 64 ab                    a4 = a3
 18428: 01                       fallthrough
      :                          @1048
 18429: c8 b9 0c                 a5 = a2 + a4
 18432: 7c cc                    a5 = u8 [a5]
 18434: 97 88 08                 a1 = a1 << 0x8
 18437: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 18440: d4 c8 08                 a1 = a1 | a5
 18443: 52 0b f2                 jump @1048 if a4 != 0
      :                          @1049
 18446: 8a a9 03                 i32 a2 = a3 << 0x3
 18449: cf 97 07                 a0 = a0 << a2
 18452: c8 87 07                 a0 = a0 + a1
 18455: 32 00                    ret
      :                          @1050
 18457: 32 00                    ret
      :                          @1051
 18459: 00                       trap
      :                          @1052
 18460: 00                       trap
      :                          @1053
 18461: 00                       trap
      :                          @1054
 18462: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 18466: 7b 10 00 01              u64 [sp + 0x100] = ra
 18470: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 18474: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 18478: 7b 17                    u64 [sp] = a0
 18480: 78 18 0f                 u8 [sp + 0xf] = a1
 18483: 7b 17 10                 u64 [sp + 0x10] = a0
 18486: 95 16 0f                 s1 = sp + 0xf
 18489: 33 05 01                 s0 = 0x1
 18492: 95 17 0f                 a0 = sp + 0xf
 18495: 33 08 01                 a1 = 0x1
 18498: 95 19 10                 a2 = sp + 0x10
 18501: 33 0a 08                 a3 = 0x8
 18504: 0a 03                    ecalli 3 // 'write'
 18506: 7b 16 60                 u64 [sp + 0x60] = s1
 18509: 33 07 e2 01              a0 = 0x1e2
 18513: 7b 17 68                 u64 [sp + 0x68] = a0
 18516: 64 17                    a0 = sp
 18518: 7b 17 70                 u64 [sp + 0x70] = a0
 18521: 33 07 1a                 a0 = 0x1a
 18524: 7b 17 78                 u64 [sp + 0x78] = a0
 18527: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18532: 49 21 90 00 02           u64 [sp + 144] = 0x2
 18537: 49 21 a0 00              u64 [sp + 160] = 0
 18541: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 18551: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 18555: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 18560: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 18565: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 18570: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 18574: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 18578: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 18583: 33 08 90 12 01           a1 = 0x11290
 18588: 7b 18 30                 u64 [sp + 0x30] = a1
 18591: 49 11 38 02              u64 [sp + 56] = 0x2
 18595: 95 18 80 00              a1 = sp + 0x80
 18599: 7b 18 50                 u64 [sp + 0x50] = a1
 18602: 49 11 58 02              u64 [sp + 88] = 0x2
 18606: 95 18 60                 a1 = sp + 0x60
 18609: 7b 18 40                 u64 [sp + 0x40] = a1
 18612: 49 11 48 02              u64 [sp + 72] = 0x2
 18616: 95 17 18                 a0 = sp + 0x18
 18619: 95 18 30                 a1 = sp + 0x30
 18622: 50 20 de 01 f0 f1        ra = 478, jump @777
      :                          @1055 [@dyn 239]
 18628: 82 15 20                 s0 = u64 [sp + 0x20]
 18631: 82 1b 28                 a4 = u64 [sp + 0x28]
 18634: 82 16 18                 s1 = u64 [sp + 0x18]
 18637: 33 07 02                 a0 = 0x2
 18640: 33 08                    a1 = 0
 18642: 33 09                    a2 = 0
 18644: 64 5a                    a3 = s0
 18646: 33 00 e0 01              ra = 0x1e0
 18650: 0a 64                    ecalli 100 // 'log'
 18652: 01                       fallthrough
      :                          @1056 [@dyn 240]
 18653: 33 07 00 f0              a0 = 0xfffffffffffff000
 18657: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 18661: ac 78 23                 jump @1062 if a1 <u a0
      :                          @1057
 18664: 33 07 40 00 03           a0 = 0x30040
 18669: 95 77 00 10              a0 = a0 + 0x1000
 18673: 01                       fallthrough
      :                          @1058
 18674: 82 78                    a1 = u64 [a0]
 18676: c9 87 09                 a2 = a0 - a1
 18679: ab 59 11                 jump @1062 if a2 != s0
      :                          @1059
 18682: c9 68 09                 a2 = a1 - s1
 18685: 01                       fallthrough
      :                          @1060
 18686: 82 7a                    a3 = u64 [a0]
 18688: ab 8a f2                 jump @1058 if a3 != a1
      :                          @1061
 18691: 7b 79                    u64 [a0] = a2
 18693: 33 0b                    a4 = 0
 18695: 01                       fallthrough
      :                          @1062
 18696: 82 10 00 01              ra = u64 [sp + 0x100]
 18700: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 18704: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 18708: 95 11 08 01              sp = sp + 0x108
 18712: 32 00                    ret
      :                          @1063 [@dyn 241]
 18714: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 18717: 7b 10 28                 u64 [sp + 0x28] = ra
 18720: 7b 15 20                 u64 [sp + 0x20] = s0
 18723: 7b 16 18                 u64 [sp + 0x18] = s1
 18726: 64 86                    s1 = a1
 18728: 82 88 28                 a1 = u64 [a1 + 0x28]
 18731: 82 6a 20                 a3 = u64 [s1 + 0x20]
 18734: 82 8b 18                 a4 = u64 [a1 + 0x18]
 18737: 64 75                    s0 = a0
 18739: 33 08 f0 0f 01           a1 = 0x10ff0
 18744: 33 09 01                 a2 = 0x1
 18747: 64 a7                    a0 = a3
 18749: b4 b0 02 e4 01           ra = 484, jump [a4]
      :                          @1064 [@dyn 242]
 18754: 7b 16                    u64 [sp] = s1
 18756: 78 17 08                 u8 [sp + 0x8] = a0
 18759: 46 11 09                 u8 [sp + 9] = 0
 18762: 7b 15 10                 u64 [sp + 0x10] = s0
 18765: 33 09 02                 a2 = 0x2
 18768: 64 17                    a0 = sp
 18770: 95 18 10                 a1 = sp + 0x10
 18773: 50 20 e6 01 ec fc        ra = 486, jump @1013
      :                          @1065 [@dyn 243]
 18779: 33 07 01                 a0 = 0x1
 18782: 7c 18 08                 a1 = u8 [sp + 0x8]
 18785: 52 08 1b                 jump @1067 if a1 != 0
      :                          @1066
 18788: 82 17                    a0 = u64 [sp]
 18790: 82 78 28                 a1 = u64 [a0 + 0x28]
 18793: 82 77 20                 a0 = u64 [a0 + 0x20]
 18796: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18799: 33 08 45 10 01           a1 = 0x11045
 18804: 33 09 01                 a2 = 0x1
 18807: b4 a0 02 e8 01           ra = 488, jump [a3]
      :                          @1067 [@dyn 244]
 18812: 82 10 28                 ra = u64 [sp + 0x28]
 18815: 82 15 20                 s0 = u64 [sp + 0x20]
 18818: 82 16 18                 s1 = u64 [sp + 0x18]
 18821: 95 11 30                 sp = sp + 0x30
 18824: 32 00                    ret
