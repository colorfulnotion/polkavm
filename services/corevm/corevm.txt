// RO data = 4368/4368 bytes
// RW data = 24/4176 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [140, 0, 255, 255, 164, 0, 255, 255, 182, 0, 255, 255, 200, 0, 255, 255, 224, 0, 255, 255, 248, 0, 255, 255, 14, 1, 255, 255, 26, 1, 255, 255, 38, 1, 255, 255, 56, 1, 255, 255, 0, 16, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 64, 110, 61, 101, 106, 101, 99, 116, 64, 110, 61, 101, 120, 112, 117, 110, 103, 101, 32, 32, 111, 117, 116, 112, 117, 116, 61, 121, 105, 101, 108, 100, 64, 110, 61, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 32, 64, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 32, 64, 110, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 64, 110, 61, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 112, 114, 101, 118, 32, 108, 101, 110, 32, 51, 44, 32, 103, 111, 116, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 122, 101, 114, 111, 32, 114, 101, 115, 117, 108, 116, 44, 32, 103, 111, 116, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 97, 115, 115, 105, 103, 110, 64, 110, 61, 58, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 110, 101, 119, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 32, 64, 110, 61, 98, 108, 101, 115, 115, 32, 64, 110, 61, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 32, 64, 110, 61, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 32, 64, 110, 61, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 105, 110, 102, 111, 64, 110, 61, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 93, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 11, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 49, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 70, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 80, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 93, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 119, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 70, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 80, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 137, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 163, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 170, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 190, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 203, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 203, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 204, 1, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 235, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 252, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 44, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 68, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 87, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 98, 2, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 119, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 125, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 181, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 125, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 221, 2, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 235, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 253, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 17, 3, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 28, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 48, 3, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 181, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 17, 3, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 73, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 93, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 128, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 181, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 154, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 172, 3, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 93, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 191, 3, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 181, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 214, 3, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 233, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 246, 3, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 253, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 9, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 28, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 28, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 253, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 46, 4, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 181, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 69, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 93, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 191, 3, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 9, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 78, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 95, 4, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 102, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 130, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 93, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 181, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 141, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 93, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 150, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 161, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 150, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 48, 3, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 171, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 253, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 150, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 142, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 208, 4, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 93, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 215, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 235, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 244, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 93, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 25, 5, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 46, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 122, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 124, 1, 0, 0, 0, 0, 0, 0, 130, 1, 0, 0, 0, 0, 0, 0, 138, 1, 0, 0, 0, 0, 0, 0, 172, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 174, 1, 0, 0, 0, 0, 0, 0, 180, 1, 0, 0, 0, 0, 0, 0, 184, 1, 0, 0, 0, 0, 0, 0, 147, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 164, 7, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5734
// Code size = 17989 bytes

      :                          @0
     0: 28 aa 05 00 00           jump @100
      :                          @1
     5: 28 86 15 00 00           jump @282
      :                          @2
    10: 28 a3 34                 jump @685
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 52                 jump @10 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 d3 3a                 jump @834
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   101: 56 27 80 00 6a           jump @16 if a0 >u 128
      :                          @9
   106: 9a bb 81 00              a4 = 0x81 - a4
   110: 64 1a                    a3 = sp
   112: c8 7a 0a                 a3 = a3 + a0
   115: 28 43                    jump @14
      :                          @10
   117: 7c 77                    a0 = u8 [a0]
   119: 33 0b 81 00              a4 = 0x81
   123: 95 19 7f                 a2 = sp + 0x7f
   126: 33 02 37                 t0 = 0x37
   129: 01                       fallthrough
      :                          @11
   130: 64 bc                    a5 = a4
   132: 84 7b 0f                 a4 = a0 & 0xf
   135: 97 77 38                 a0 = a0 << 0x38
   138: 98 77 3c                 a0 = a0 >> 0x3c
   141: 88 b3 0a                 t1 = a4 <u 0xa
   144: 33 0a 30                 a3 = 0x30
   147: da 32 0a                 a3 = t0 if t1 == 0
   150: be ba 0a                 i32 a3 = a3 + a4
   153: 78 9a                    u8 [a2] = a3
   155: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   158: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   161: 52 07 e1                 jump @11 if a0 != 0
      :                          @12
   164: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   167: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   172: 9a bb 81 00              a4 = 0x81 - a4
   176: 64 1a                    a3 = sp
   178: c8 7a 0a                 a3 = a3 + a0
   181: 01                       fallthrough
      :                          @14
   182: 33 09 02                 a2 = 0x2
   185: 64 87                    a0 = a1
   187: 33 08 67 05 01           a1 = 0x10567
   192: 50 10 04 60 3b           ra = 4, jump @844
      :                          @15 [@dyn 2]
   197: 82 10 80 00              ra = u64 [sp + 0x80]
   201: 95 11 88 00              sp = sp + 0x88
   205: 32 00                    ret
      :                          @16
   207: 00                       trap
      :                          @17 [@dyn 3]
   208: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   211: 7b 10 38                 u64 [sp + 0x38] = ra
   214: 7b 15 30                 u64 [sp + 0x30] = s0
   217: 7b 16 28                 u64 [sp + 0x28] = s1
   220: 7b 18 08                 u64 [sp + 0x8] = a1
   223: 82 89 28                 a2 = u64 [a1 + 0x28]
   226: 82 76                    s1 = u64 [a0]
   228: 82 75 08                 s0 = u64 [a0 + 0x8]
   231: 82 87 20                 a0 = u64 [a1 + 0x20]
   234: 82 9a 18                 a3 = u64 [a2 + 0x18]
   237: 33 08 48 05 01           a1 = 0x10548
   242: 33 09 01                 a2 = 0x1
   245: b4 a0 01 08              ra = 8, jump [a3]
      :                          @18 [@dyn 4]
   249: 82 18 08                 a1 = u64 [sp + 0x8]
   252: 7b 18 10                 u64 [sp + 0x10] = a1
   255: 78 17 18                 u8 [sp + 0x18] = a0
   258: 46 11 19                 u8 [sp + 25] = 0
   261: 51 05 2c                 jump @23 if s0 == 0
      :                          @19
   264: 33 07 02                 a0 = 0x2
   267: 7b 17                    u64 [sp] = a0
   269: 01                       fallthrough
      :                          @20
   270: 95 67 01                 a0 = s1 + 0x1
   273: 7b 17 08                 u64 [sp + 0x8] = a0
   276: 7b 16 20                 u64 [sp + 0x20] = s1
   279: 95 17 10                 a0 = sp + 0x10
   282: 95 18 20                 a1 = sp + 0x20
   285: 82 19                    a2 = u64 [sp]
   287: 50 10 0a dd 41           ra = 10, jump @988
      :                          @21 [@dyn 5]
   292: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   295: 82 16 08                 s1 = u64 [sp + 0x8]
   298: 52 05 e4                 jump @20 if s0 != 0
      :                          @22
   301: 7c 17 18                 a0 = u8 [sp + 0x18]
   304: 01                       fallthrough
      :                          @23
   305: 33 08 01                 a1 = 0x1
   308: 52 07 1e                 jump @26 if a0 != 0
      :                          @24
   311: 82 17 10                 a0 = u64 [sp + 0x10]
   314: 82 78 28                 a1 = u64 [a0 + 0x28]
   317: 82 77 20                 a0 = u64 [a0 + 0x20]
   320: 82 8a 18                 a3 = u64 [a1 + 0x18]
   323: 33 08 66 05 01           a1 = 0x10566
   328: 33 09 01                 a2 = 0x1
   331: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @25 [@dyn 6]
   335: 64 78                    a1 = a0
   337: 01                       fallthrough
      :                          @26
   338: 64 87                    a0 = a1
   340: 82 10 38                 ra = u64 [sp + 0x38]
   343: 82 15 30                 s0 = u64 [sp + 0x30]
   346: 82 16 28                 s1 = u64 [sp + 0x28]
   349: 95 11 40                 sp = sp + 0x40
   352: 32 00                    ret
      :                          @27 [@dyn 7]
   354: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   358: 7b 10 80 00              u64 [sp + 0x80] = ra
   362: 80 89 34                 a2 = u32 [a1 + 0x34]
   365: 82 77                    a0 = u64 [a0]
   367: 84 9a 10                 a3 = a2 & 0x10
   370: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   373: 84 99 20                 a2 = a2 & 0x20
   376: 52 09 51                 jump @34 if a2 != 0
      :                          @29
   379: 82 77                    a0 = u64 [a0]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 28 7e 39                 jump @834
      :                          @30
   392: 82 7b                    a4 = u64 [a0]
   394: 33 09 81 00              a2 = 0x81
   398: 95 17 7f                 a0 = sp + 0x7f
   401: 33 02 57                 t0 = 0x57
   404: 01                       fallthrough
      :                          @31
   405: 64 9c                    a5 = a2
   407: 98 ba 04                 a3 = a4 >> 0x4
   410: 84 bb 0f                 a4 = a4 & 0xf
   413: 88 b3 0a                 t1 = a4 <u 0xa
   416: 33 09 30                 a2 = 0x30
   419: da 32 09                 a2 = t0 if t1 == 0
   422: be b9 09                 i32 a2 = a2 + a4
   425: 78 79                    u8 [a0] = a2
   427: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   430: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   433: 64 ab                    a4 = a3
   435: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   438: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   441: 56 27 80 00 69           jump @40 if a0 >u 128
      :                          @33
   446: 9a 9b 81 00              a4 = 0x81 - a2
   450: 64 1a                    a3 = sp
   452: c8 7a 0a                 a3 = a3 + a0
   455: 28 42                    jump @38
      :                          @34
   457: 82 7b                    a4 = u64 [a0]
   459: 33 09 81 00              a2 = 0x81
   463: 95 17 7f                 a0 = sp + 0x7f
   466: 33 02 37                 t0 = 0x37
   469: 01                       fallthrough
      :                          @35
   470: 64 9c                    a5 = a2
   472: 98 ba 04                 a3 = a4 >> 0x4
   475: 84 bb 0f                 a4 = a4 & 0xf
   478: 88 b3 0a                 t1 = a4 <u 0xa
   481: 33 09 30                 a2 = 0x30
   484: da 32 09                 a2 = t0 if t1 == 0
   487: be b9 09                 i32 a2 = a2 + a4
   490: 78 79                    u8 [a0] = a2
   492: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   495: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   498: 64 ab                    a4 = a3
   500: 52 0a e2                 jump @35 if a3 != 0
      :                          @36
   503: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   506: 56 27 80 00 28           jump @40 if a0 >u 128
      :                          @37
   511: 9a 9b 81 00              a4 = 0x81 - a2
   515: 64 1a                    a3 = sp
   517: c8 7a 0a                 a3 = a3 + a0
   520: 01                       fallthrough
      :                          @38
   521: 33 09 02                 a2 = 0x2
   524: 64 87                    a0 = a1
   526: 33 08 67 05 01           a1 = 0x10567
   531: 50 10 10 0d 3a           ra = 16, jump @844
      :                          @39 [@dyn 8]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 32 00                    ret
      :                          @40
   546: 00                       trap
      :                          @41 [@dyn 9]
   547: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   551: 7b 10 80 00              u64 [sp + 0x80] = ra
   555: 80 89 34                 a2 = u32 [a1 + 0x34]
   558: 84 9a 10                 a3 = a2 & 0x10
   561: 52 0a 16                 jump @44 if a3 != 0
      :                          @42
   564: 84 99 20                 a2 = a2 & 0x20
   567: 52 09 52                 jump @48 if a2 != 0
      :                          @43
   570: 7c 77                    a0 = u8 [a0]
   572: 82 10 80 00              ra = u64 [sp + 0x80]
   576: 95 11 88 00              sp = sp + 0x88
   580: 28 bf 38                 jump @834
      :                          @44
   583: 7c 77                    a0 = u8 [a0]
   585: 33 0b 81 00              a4 = 0x81
   589: 95 19 7f                 a2 = sp + 0x7f
   592: 33 02 57                 t0 = 0x57
   595: 01                       fallthrough
      :                          @45
   596: 64 bc                    a5 = a4
   598: 84 7b 0f                 a4 = a0 & 0xf
   601: 97 77 38                 a0 = a0 << 0x38
   604: 98 77 3c                 a0 = a0 >> 0x3c
   607: 88 b3 0a                 t1 = a4 <u 0xa
   610: 33 0a 30                 a3 = 0x30
   613: da 32 0a                 a3 = t0 if t1 == 0
   616: be ba 0a                 i32 a3 = a3 + a4
   619: 78 9a                    u8 [a2] = a3
   621: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   624: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   627: 52 07 e1                 jump @45 if a0 != 0
      :                          @46
   630: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   633: 56 27 80 00 6a           jump @54 if a0 >u 128
      :                          @47
   638: 9a bb 81 00              a4 = 0x81 - a4
   642: 64 1a                    a3 = sp
   644: c8 7a 0a                 a3 = a3 + a0
   647: 28 43                    jump @52
      :                          @48
   649: 7c 77                    a0 = u8 [a0]
   651: 33 0b 81 00              a4 = 0x81
   655: 95 19 7f                 a2 = sp + 0x7f
   658: 33 02 37                 t0 = 0x37
   661: 01                       fallthrough
      :                          @49
   662: 64 bc                    a5 = a4
   664: 84 7b 0f                 a4 = a0 & 0xf
   667: 97 77 38                 a0 = a0 << 0x38
   670: 98 77 3c                 a0 = a0 >> 0x3c
   673: 88 b3 0a                 t1 = a4 <u 0xa
   676: 33 0a 30                 a3 = 0x30
   679: da 32 0a                 a3 = t0 if t1 == 0
   682: be ba 0a                 i32 a3 = a3 + a4
   685: 78 9a                    u8 [a2] = a3
   687: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   690: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   693: 52 07 e1                 jump @49 if a0 != 0
      :                          @50
   696: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   699: 56 27 80 00 28           jump @54 if a0 >u 128
      :                          @51
   704: 9a bb 81 00              a4 = 0x81 - a4
   708: 64 1a                    a3 = sp
   710: c8 7a 0a                 a3 = a3 + a0
   713: 01                       fallthrough
      :                          @52
   714: 33 09 02                 a2 = 0x2
   717: 64 87                    a0 = a1
   719: 33 08 67 05 01           a1 = 0x10567
   724: 50 10 14 4c 39           ra = 20, jump @844
      :                          @53 [@dyn 10]
   729: 82 10 80 00              ra = u64 [sp + 0x80]
   733: 95 11 88 00              sp = sp + 0x88
   737: 32 00                    ret
      :                          @54
   739: 00                       trap
      :                          @55 [@dyn 11]
   740: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   744: 7b 10 80 00              u64 [sp + 0x80] = ra
   748: 80 89 34                 a2 = u32 [a1 + 0x34]
   751: 84 9a 10                 a3 = a2 & 0x10
   754: 52 0a 16                 jump @58 if a3 != 0
      :                          @56
   757: 84 99 20                 a2 = a2 & 0x20
   760: 52 09 51                 jump @62 if a2 != 0
      :                          @57
   763: 80 77                    a0 = u32 [a0]
   765: 82 10 80 00              ra = u64 [sp + 0x80]
   769: 95 11 88 00              sp = sp + 0x88
   773: 28 fe 37                 jump @834
      :                          @58
   776: 81 7b                    a4 = i32 [a0]
   778: 33 09 81 00              a2 = 0x81
   782: 95 17 7f                 a0 = sp + 0x7f
   785: 33 02 57                 t0 = 0x57
   788: 01                       fallthrough
      :                          @59
   789: 64 9c                    a5 = a2
   791: 8b ba 04                 i32 a3 = a4 >> 0x4
   794: 84 bb 0f                 a4 = a4 & 0xf
   797: 88 b3 0a                 t1 = a4 <u 0xa
   800: 33 09 30                 a2 = 0x30
   803: da 32 09                 a2 = t0 if t1 == 0
   806: be b9 09                 i32 a2 = a2 + a4
   809: 78 79                    u8 [a0] = a2
   811: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   814: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   817: 64 ab                    a4 = a3
   819: 52 0a e2                 jump @59 if a3 != 0
      :                          @60
   822: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   825: 56 27 80 00 69           jump @68 if a0 >u 128
      :                          @61
   830: 9a 9b 81 00              a4 = 0x81 - a2
   834: 64 1a                    a3 = sp
   836: c8 7a 0a                 a3 = a3 + a0
   839: 28 42                    jump @66
      :                          @62
   841: 81 7b                    a4 = i32 [a0]
   843: 33 09 81 00              a2 = 0x81
   847: 95 17 7f                 a0 = sp + 0x7f
   850: 33 02 37                 t0 = 0x37
   853: 01                       fallthrough
      :                          @63
   854: 64 9c                    a5 = a2
   856: 8b ba 04                 i32 a3 = a4 >> 0x4
   859: 84 bb 0f                 a4 = a4 & 0xf
   862: 88 b3 0a                 t1 = a4 <u 0xa
   865: 33 09 30                 a2 = 0x30
   868: da 32 09                 a2 = t0 if t1 == 0
   871: be b9 09                 i32 a2 = a2 + a4
   874: 78 79                    u8 [a0] = a2
   876: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   879: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   882: 64 ab                    a4 = a3
   884: 52 0a e2                 jump @63 if a3 != 0
      :                          @64
   887: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   890: 56 27 80 00 28           jump @68 if a0 >u 128
      :                          @65
   895: 9a 9b 81 00              a4 = 0x81 - a2
   899: 64 1a                    a3 = sp
   901: c8 7a 0a                 a3 = a3 + a0
   904: 01                       fallthrough
      :                          @66
   905: 33 09 02                 a2 = 0x2
   908: 64 87                    a0 = a1
   910: 33 08 67 05 01           a1 = 0x10567
   915: 50 10 18 8d 38           ra = 24, jump @844
      :                          @67 [@dyn 12]
   920: 82 10 80 00              ra = u64 [sp + 0x80]
   924: 95 11 88 00              sp = sp + 0x88
   928: 32 00                    ret
      :                          @68
   930: 00                       trap
      :                          @69 [@dyn 13]
   931: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   935: 7b 10 80 00              u64 [sp + 0x80] = ra
   939: 80 89 34                 a2 = u32 [a1 + 0x34]
   942: 84 9a 10                 a3 = a2 & 0x10
   945: 52 0a 16                 jump @72 if a3 != 0
      :                          @70
   948: 84 99 20                 a2 = a2 & 0x20
   951: 52 09 51                 jump @76 if a2 != 0
      :                          @71
   954: 82 77                    a0 = u64 [a0]
   956: 82 10 80 00              ra = u64 [sp + 0x80]
   960: 95 11 88 00              sp = sp + 0x88
   964: 28 3f 37                 jump @834
      :                          @72
   967: 82 7b                    a4 = u64 [a0]
   969: 33 09 81 00              a2 = 0x81
   973: 95 17 7f                 a0 = sp + 0x7f
   976: 33 02 57                 t0 = 0x57
   979: 01                       fallthrough
      :                          @73
   980: 64 9c                    a5 = a2
   982: 98 ba 04                 a3 = a4 >> 0x4
   985: 84 bb 0f                 a4 = a4 & 0xf
   988: 88 b3 0a                 t1 = a4 <u 0xa
   991: 33 09 30                 a2 = 0x30
   994: da 32 09                 a2 = t0 if t1 == 0
   997: be b9 09                 i32 a2 = a2 + a4
  1000: 78 79                    u8 [a0] = a2
  1002: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1005: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
  1008: 64 ab                    a4 = a3
  1010: 52 0a e2                 jump @73 if a3 != 0
      :                          @74
  1013: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  1016: 56 27 80 00 69           jump @82 if a0 >u 128
      :                          @75
  1021: 9a 9b 81 00              a4 = 0x81 - a2
  1025: 64 1a                    a3 = sp
  1027: c8 7a 0a                 a3 = a3 + a0
  1030: 28 42                    jump @80
      :                          @76
  1032: 82 7b                    a4 = u64 [a0]
  1034: 33 09 81 00              a2 = 0x81
  1038: 95 17 7f                 a0 = sp + 0x7f
  1041: 33 02 37                 t0 = 0x37
  1044: 01                       fallthrough
      :                          @77
  1045: 64 9c                    a5 = a2
  1047: 98 ba 04                 a3 = a4 >> 0x4
  1050: 84 bb 0f                 a4 = a4 & 0xf
  1053: 88 b3 0a                 t1 = a4 <u 0xa
  1056: 33 09 30                 a2 = 0x30
  1059: da 32 09                 a2 = t0 if t1 == 0
  1062: be b9 09                 i32 a2 = a2 + a4
  1065: 78 79                    u8 [a0] = a2
  1067: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1070: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
  1073: 64 ab                    a4 = a3
  1075: 52 0a e2                 jump @77 if a3 != 0
      :                          @78
  1078: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  1081: 56 27 80 00 28           jump @82 if a0 >u 128
      :                          @79
  1086: 9a 9b 81 00              a4 = 0x81 - a2
  1090: 64 1a                    a3 = sp
  1092: c8 7a 0a                 a3 = a3 + a0
  1095: 01                       fallthrough
      :                          @80
  1096: 33 09 02                 a2 = 0x2
  1099: 64 87                    a0 = a1
  1101: 33 08 67 05 01           a1 = 0x10567
  1106: 50 10 1c ce 37           ra = 28, jump @844
      :                          @81 [@dyn 14]
  1111: 82 10 80 00              ra = u64 [sp + 0x80]
  1115: 95 11 88 00              sp = sp + 0x88
  1119: 32 00                    ret
      :                          @82
  1121: 00                       trap
      :                          @83 [@dyn 15]
  1122: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1125: 7b 10 28                 u64 [sp + 0x28] = ra
  1128: 7b 15 20                 u64 [sp + 0x20] = s0
  1131: 7b 16 18                 u64 [sp + 0x18] = s1
  1134: 64 85                    s0 = a1
  1136: 82 88 28                 a1 = u64 [a1 + 0x28]
  1139: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1142: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1145: 64 76                    s1 = a0
  1147: 33 08 48 05 01           a1 = 0x10548
  1152: 33 09 01                 a2 = 0x1
  1155: 64 a7                    a0 = a3
  1157: b4 b0 01 20              ra = 32, jump [a4]
      :                          @84 [@dyn 16]
  1161: 7b 15                    u64 [sp] = s0
  1163: 78 17 08                 u8 [sp + 0x8] = a0
  1166: 46 11 09                 u8 [sp + 9] = 0
  1169: 7b 16 10                 u64 [sp + 0x10] = s1
  1172: 33 05 0e                 s0 = 0xe
  1175: 64 17                    a0 = sp
  1177: 95 18 10                 a1 = sp + 0x10
  1180: 33 09 0e                 a2 = 0xe
  1183: 50 10 22 5d 3e           ra = 34, jump @988
      :                          @85 [@dyn 17]
  1188: 95 67 08                 a0 = s1 + 0x8
  1191: 7b 17 10                 u64 [sp + 0x10] = a0
  1194: 64 17                    a0 = sp
  1196: 95 18 10                 a1 = sp + 0x10
  1199: 64 59                    a2 = s0
  1201: 50 10 24 4b 3e           ra = 36, jump @988
      :                          @86 [@dyn 18]
  1206: 95 67 10                 a0 = s1 + 0x10
  1209: 7b 17 10                 u64 [sp + 0x10] = a0
  1212: 64 17                    a0 = sp
  1214: 95 18 10                 a1 = sp + 0x10
  1217: 64 59                    a2 = s0
  1219: 50 10 26 39 3e           ra = 38, jump @988
      :                          @87 [@dyn 19]
  1224: 95 67 18                 a0 = s1 + 0x18
  1227: 7b 17 10                 u64 [sp + 0x10] = a0
  1230: 64 17                    a0 = sp
  1232: 95 18 10                 a1 = sp + 0x10
  1235: 64 59                    a2 = s0
  1237: 50 10 28 27 3e           ra = 40, jump @988
      :                          @88 [@dyn 20]
  1242: 95 67 20                 a0 = s1 + 0x20
  1245: 7b 17 10                 u64 [sp + 0x10] = a0
  1248: 64 17                    a0 = sp
  1250: 95 18 10                 a1 = sp + 0x10
  1253: 64 59                    a2 = s0
  1255: 50 10 2a 15 3e           ra = 42, jump @988
      :                          @89 [@dyn 21]
  1260: 95 67 28                 a0 = s1 + 0x28
  1263: 7b 17 10                 u64 [sp + 0x10] = a0
  1266: 64 17                    a0 = sp
  1268: 95 18 10                 a1 = sp + 0x10
  1271: 64 59                    a2 = s0
  1273: 50 10 2c 03 3e           ra = 44, jump @988
      :                          @90 [@dyn 22]
  1278: 95 67 30                 a0 = s1 + 0x30
  1281: 7b 17 10                 u64 [sp + 0x10] = a0
  1284: 64 17                    a0 = sp
  1286: 95 18 10                 a1 = sp + 0x10
  1289: 64 59                    a2 = s0
  1291: 50 10 2e f1 3d           ra = 46, jump @988
      :                          @91 [@dyn 23]
  1296: 95 67 38                 a0 = s1 + 0x38
  1299: 7b 17 10                 u64 [sp + 0x10] = a0
  1302: 64 17                    a0 = sp
  1304: 95 18 10                 a1 = sp + 0x10
  1307: 64 59                    a2 = s0
  1309: 50 10 30 df 3d           ra = 48, jump @988
      :                          @92 [@dyn 24]
  1314: 95 67 40                 a0 = s1 + 0x40
  1317: 7b 17 10                 u64 [sp + 0x10] = a0
  1320: 64 17                    a0 = sp
  1322: 95 18 10                 a1 = sp + 0x10
  1325: 64 59                    a2 = s0
  1327: 50 10 32 cd 3d           ra = 50, jump @988
      :                          @93 [@dyn 25]
  1332: 95 67 48                 a0 = s1 + 0x48
  1335: 7b 17 10                 u64 [sp + 0x10] = a0
  1338: 64 17                    a0 = sp
  1340: 95 18 10                 a1 = sp + 0x10
  1343: 64 59                    a2 = s0
  1345: 50 10 34 bb 3d           ra = 52, jump @988
      :                          @94 [@dyn 26]
  1350: 95 67 50                 a0 = s1 + 0x50
  1353: 7b 17 10                 u64 [sp + 0x10] = a0
  1356: 64 17                    a0 = sp
  1358: 95 18 10                 a1 = sp + 0x10
  1361: 64 59                    a2 = s0
  1363: 50 10 36 a9 3d           ra = 54, jump @988
      :                          @95 [@dyn 27]
  1368: 95 67 58                 a0 = s1 + 0x58
  1371: 7b 17 10                 u64 [sp + 0x10] = a0
  1374: 64 17                    a0 = sp
  1376: 95 18 10                 a1 = sp + 0x10
  1379: 64 59                    a2 = s0
  1381: 50 10 38 97 3d           ra = 56, jump @988
      :                          @96 [@dyn 28]
  1386: 95 67 60                 a0 = s1 + 0x60
  1389: 7b 17 10                 u64 [sp + 0x10] = a0
  1392: 64 17                    a0 = sp
  1394: 95 18 10                 a1 = sp + 0x10
  1397: 64 59                    a2 = s0
  1399: 50 10 3a 85 3d           ra = 58, jump @988
      :                          @97 [@dyn 29]
  1404: 33 07 01                 a0 = 0x1
  1407: 7c 18 08                 a1 = u8 [sp + 0x8]
  1410: 52 08 1a                 jump @99 if a1 != 0
      :                          @98
  1413: 82 17                    a0 = u64 [sp]
  1415: 82 78 28                 a1 = u64 [a0 + 0x28]
  1418: 82 77 20                 a0 = u64 [a0 + 0x20]
  1421: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1424: 33 08 66 05 01           a1 = 0x10566
  1429: 33 09 01                 a2 = 0x1
  1432: b4 a0 01 3c              ra = 60, jump [a3]
      :                          @99 [@dyn 30]
  1436: 82 10 28                 ra = u64 [sp + 0x28]
  1439: 82 15 20                 s0 = u64 [sp + 0x20]
  1442: 82 16 18                 s1 = u64 [sp + 0x18]
  1445: 95 11 30                 sp = sp + 0x30
  1448: 32 00                    ret
      :                          @100 [export #0: 'refine']
  1450: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1454: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1458: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1462: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1466: 95 11 48 d4              sp = sp + 0xffffffffffffd448
  1470: 33 0a 00 00 01           a3 = 0x10000
  1475: 53 18 04 df 00           jump @119 if a1 <u 4
      :                          @101
  1480: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1483: 51 0b d7 00              jump @119 if a4 == 0
      :                          @102
  1487: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1490: 80 7a                    a3 = u32 [a0]
  1492: 33 06 01                 s1 = 0x1
  1495: 59 08 3d                 jump @111 if a1 >=s 0
      :                          @103
  1498: 84 88 ff 00              a1 = a1 & 0xff
  1502: 33 06 02                 s1 = 0x2
  1505: 53 28 c0 00 2d           jump @109 if a1 <u 192
      :                          @104
  1510: 33 06 03                 s1 = 0x3
  1513: 53 28 e0 00 25           jump @109 if a1 <u 224
      :                          @105
  1518: 33 06 04                 s1 = 0x4
  1521: 53 28 f0 00 1d           jump @109 if a1 <u 240
      :                          @106
  1526: 33 06 05                 s1 = 0x5
  1529: 53 28 f8 00 15           jump @109 if a1 <u 248
      :                          @107
  1534: 33 06 06                 s1 = 0x6
  1537: 53 28 fc 00 0d           jump @109 if a1 <u 252
      :                          @108
  1542: 88 88 fe 00              a1 = a1 <u 0xfe
  1546: 9a 86 08                 s1 = 0x8 - a1
  1549: 01                       fallthrough
      :                          @109
  1550: ae 6b 06                 jump @111 if a4 >=u s1
      :                          @110
  1553: 28 79 0f                 jump @281
      :                          @111
  1556: 7b 1a 68                 u64 [sp + 0x68] = a3
  1559: 95 77 04                 a0 = a0 + 0x4
  1562: 64 68                    a1 = s1
  1564: 7b 1b 70                 u64 [sp + 0x70] = a4
  1567: 50 10 3e 1c 3e           ra = 62, jump @1005
      :                          @112 [@dyn 31]
  1572: 64 75                    s0 = a0
  1574: 82 17 70                 a0 = u64 [sp + 0x70]
  1577: e4 67 07                 a0 = maxu(a0, s1)
  1580: c9 67 07                 a0 = a0 - s1
  1583: d8 57 08                 a1 = a0 <u s0
  1586: e4 57 07                 a0 = maxu(a0, s0)
  1589: c9 57 07                 a0 = a0 - s0
  1592: 88 77 20                 a0 = a0 <u 0x20
  1595: d4 87 07                 a0 = a0 | a1
  1598: 52 07 5b                 jump @118 if a0 != 0
      :                          @113
  1601: 48 21 98 00              u32 [sp + 152] = 0
  1605: 49 21 90 00              u64 [sp + 144] = 0
  1609: 49 21 88 00              u64 [sp + 136] = 0
  1613: 49 21 80 00              u64 [sp + 128] = 0
  1617: 49 11 78                 u64 [sp + 120] = 0
  1620: 95 17 78                 a0 = sp + 0x78
  1623: 33 09 24                 a2 = 0x24
  1626: 33 0a 03                 a3 = 0x3
  1629: 33 08                    a1 = 0
  1631: 33 0b                    a4 = 0
  1633: 33 0c                    a5 = 0
  1635: 0a 12                    ecalli 18 // 'fetch'
  1637: 01                       fallthrough
      :                          @114
  1638: 95 1a 78                 a3 = sp + 0x78
  1641: 33 08 24                 a1 = 0x24
  1644: 53 15 08 39              jump @120 if s0 <u 8
      :                          @115
  1648: 95 17 a0 00              a0 = sp + 0xa0
  1652: 33 09 00 20              a2 = 0x2000
  1656: 33 08                    a1 = 0
  1658: 50 10 40 2a 34           ra = 64, jump @819
      :                          @116 [@dyn 32]
  1663: 95 18 78                 a1 = sp + 0x78
  1666: 95 19 a0 00              a2 = sp + 0xa0
  1670: 33 0b 00 20              a4 = 0x2000
  1674: 82 17 68                 a0 = u64 [sp + 0x68]
  1677: 33 0a                    a3 = 0
  1679: 0a 11                    ecalli 17 // 'historical_lookup'
  1681: 01                       fallthrough
      :                          @117
  1682: 95 78 01                 a1 = a0 + 0x1
  1685: 55 18 04 2b              jump @121 if a1 >=u 4
      :                          @118
  1689: 33 08                    a1 = 0
  1691: 33 0a 00 00 01           a3 = 0x10000
  1696: 28 05                    jump @120
      :                          @119
  1698: 33 08                    a1 = 0
  1700: 01                       fallthrough
      :                          @120
  1701: 64 a7                    a0 = a3
  1703: 33 09 b8 2b              a2 = 0x2bb8
  1707: c8 91 01                 sp = sp + a2
  1710: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1714: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1718: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1722: 95 11 f8 07              sp = sp + 0x7f8
  1726: 32 00                    ret
      :                          @121
  1728: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1731: 53 18 03 d6              jump @118 if a1 <u 3
      :                          @122
  1735: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1738: 51 18 06 cf              jump @118 if a1 == 6
      :                          @123
  1742: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1745: 53 18 03 c8              jump @118 if a1 <u 3
      :                          @124
  1749: 7c 18 a2 00              a1 = u8 [sp + 0xa2]
  1753: 7c 19 a1 00              a2 = u8 [sp + 0xa1]
  1757: 7c 1a a0 00              a3 = u8 [sp + 0xa0]
  1761: 97 88 10                 a1 = a1 << 0x10
  1764: 97 99 08                 a2 = a2 << 0x8
  1767: d4 98 08                 a1 = a1 | a2
  1770: d4 a8 08                 a1 = a1 | a3
  1773: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1776: ac 89 a9                 jump @118 if a2 <u a1
      :                          @125
  1779: 7c 17 a5 00              a0 = u8 [sp + 0xa5]
  1783: 7c 1a a4 00              a3 = u8 [sp + 0xa4]
  1787: 7c 1b a3 00              a4 = u8 [sp + 0xa3]
  1791: 97 77 10                 a0 = a0 << 0x10
  1794: 97 aa 08                 a3 = a3 << 0x8
  1797: d4 a7 07                 a0 = a0 | a3
  1800: d4 b7 07                 a0 = a0 | a4
  1803: c9 89 09                 a2 = a2 - a1
  1806: ac 79 8b                 jump @118 if a2 <u a0
      :                          @126
  1809: c9 79 06                 s1 = a2 - a0
  1812: 53 16 04 85              jump @118 if s1 <u 4
      :                          @127
  1816: 95 12 ab 00              t0 = sp + 0xab
  1820: c8 28 03                 t1 = a1 + t0
  1823: c8 37 0b                 a4 = a0 + t1
  1826: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1829: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1832: 7c ba                    a3 = u8 [a4]
  1834: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1837: 97 cc 10                 a5 = a5 << 0x10
  1840: 97 55 08                 s0 = s0 << 0x8
  1843: d4 5c 0c                 a5 = a5 | s0
  1846: d4 c9 09                 a2 = a2 | a5
  1849: 97 99 08                 a2 = a2 << 0x8
  1852: d4 a9 0c                 a5 = a2 | a3
  1855: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1858: ac c6 57 ff              jump @118 if s1 <u a5
      :                          @128
  1862: 7c 19 a7 00              a2 = u8 [sp + 0xa7]
  1866: 95 1a a0 20              a3 = sp + 0x20a0
  1870: 7c 14 a6 00              t2 = u8 [sp + 0xa6]
  1874: 97 99 08                 a2 = a2 << 0x8
  1877: 7c 16 aa 00              s1 = u8 [sp + 0xaa]
  1881: 7c 15 a9 00              s0 = u8 [sp + 0xa9]
  1885: d4 49 04                 t2 = a2 | t2
  1888: 7c 19 a8 00              a2 = u8 [sp + 0xa8]
  1892: 97 66 10                 s1 = s1 << 0x10
  1895: 97 55 08                 s0 = s0 << 0x8
  1898: d4 65 05                 s0 = s0 | s1
  1901: d4 59 09                 a2 = a2 | s0
  1904: 33 05 ff ef              s0 = 0xffffffffffffefff
  1908: 7b 15 70                 u64 [sp + 0x70] = s0
  1911: 95 bb 04                 a4 = a4 + 0x4
  1914: 7b a4                    u64 [a3] = t2
  1916: 7b a9 08                 u64 [a3 + 0x8] = a2
  1919: 7b a2 10                 u64 [a3 + 0x10] = t0
  1922: 7b a8 18                 u64 [a3 + 0x18] = a1
  1925: 7b a3 20                 u64 [a3 + 0x20] = t1
  1928: 7b a7 28                 u64 [a3 + 0x28] = a0
  1931: 7b ab 30                 u64 [a3 + 0x30] = a4
  1934: 7b ac 38                 u64 [a3 + 0x38] = a5
  1937: 7b aa 50                 u64 [a3 + 0x50] = a3
  1940: 33 08 1a                 a1 = 0x1a
  1943: 7b a8 58                 u64 [a3 + 0x58] = a1
  1946: 95 17 a8 20              a0 = sp + 0x20a8
  1950: 7b a7 60                 u64 [a3 + 0x60] = a0
  1953: 7b a8 68                 u64 [a3 + 0x68] = a1
  1956: 95 17 b0 20              a0 = sp + 0x20b0
  1960: 7b a7 70                 u64 [a3 + 0x70] = a0
  1963: 7b a8 78                 u64 [a3 + 0x78] = a1
  1966: 95 17 b8 20              a0 = sp + 0x20b8
  1970: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1974: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1978: 95 17 c0 20              a0 = sp + 0x20c0
  1982: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1986: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1990: 95 17 c8 20              a0 = sp + 0x20c8
  1994: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1998: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  2002: 95 17 d0 20              a0 = sp + 0x20d0
  2006: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  2010: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  2014: 95 17 d8 20              a0 = sp + 0x20d8
  2018: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  2022: 7b 18 68                 u64 [sp + 0x68] = a1
  2025: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  2029: 33 07 b0 07 01           a0 = 0x107b0
  2034: 95 16 f8 30              s1 = sp + 0x30f8
  2038: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2042: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  2047: 49 26 68 01              u64 [s1 + 360] = 0
  2051: 95 18 f0 20              a1 = sp + 0x20f0
  2055: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2059: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  2064: 95 17 88 31              a0 = sp + 0x3188
  2068: 95 18 40 32              a1 = sp + 0x3240
  2072: 50 10 42 65 2f           ra = 66, jump @751
      :                          @129 [@dyn 33]
  2077: 82 65 98 00              s0 = u64 [s1 + 0x98]
  2081: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  2085: 82 66 90 00              s1 = u64 [s1 + 0x90]
  2089: 33 07 03                 a0 = 0x3
  2092: 33 08                    a1 = 0
  2094: 33 09                    a2 = 0
  2096: 64 5a                    a3 = s0
  2098: 33 00 44                 ra = 0x44
  2101: 0a 64                    ecalli 100 // 'log'
  2103: 01                       fallthrough
      :                          @130 [@dyn 34]
  2104: 82 17 70                 a0 = u64 [sp + 0x70]
  2107: c8 67 07                 a0 = a0 + s1
  2110: 33 0c 40 00 03           a5 = 0x30040
  2115: 53 27 00 f0 1e           jump @136 if a0 <u 4294963200
      :                          @131
  2120: 95 c7 00 10              a0 = a5 + 0x1000
  2124: 01                       fallthrough
      :                          @132
  2125: 82 78                    a1 = u64 [a0]
  2127: c9 87 09                 a2 = a0 - a1
  2130: ab 59 0f                 jump @136 if a2 != s0
      :                          @133
  2133: c9 68 09                 a2 = a1 - s1
  2136: 01                       fallthrough
      :                          @134
  2137: 82 7a                    a3 = u64 [a0]
  2139: ab 8a f2                 jump @132 if a3 != a1
      :                          @135
  2142: 7b 79                    u64 [a0] = a2
  2144: 01                       fallthrough
      :                          @136
  2145: 7b 1c 60                 u64 [sp + 0x60] = a5
  2148: 0a                       ecalli 0 // 'gas'
  2149: 95 18 a0 20              a1 = sp + 0x20a0
  2153: 7b 87 40                 u64 [a1 + 0x40] = a0
  2156: 95 17 e0 20              a0 = sp + 0x20e0
  2160: 95 16 f8 30              s1 = sp + 0x30f8
  2164: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2168: 82 17 68                 a0 = u64 [sp + 0x68]
  2171: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2175: 33 07 30 08 01           a0 = 0x10830
  2180: 7b 17 18                 u64 [sp + 0x18] = a0
  2183: 7b 87 50                 u64 [a1 + 0x50] = a0
  2186: 95 17 88 31              a0 = sp + 0x3188
  2190: 7b 87 60                 u64 [a1 + 0x60] = a0
  2193: 49 18 58 01              u64 [a1 + 88] = 0x1
  2197: 49 18 70                 u64 [a1 + 112] = 0
  2200: 49 18 68 01              u64 [a1 + 104] = 0x1
  2204: 95 17 40 32              a0 = sp + 0x3240
  2208: 95 18 f0 20              a1 = sp + 0x20f0
  2212: 50 10 46 d9 2e           ra = 70, jump @751
      :                          @137 [@dyn 35]
  2217: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2221: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2225: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2229: 33 07 04                 a0 = 0x4
  2232: 33 08                    a1 = 0
  2234: 33 09                    a2 = 0
  2236: 64 5a                    a3 = s0
  2238: 33 00 48                 ra = 0x48
  2241: 0a 64                    ecalli 100 // 'log'
  2243: 01                       fallthrough
      :                          @138 [@dyn 36]
  2244: 82 17 70                 a0 = u64 [sp + 0x70]
  2247: c8 67 07                 a0 = a0 + s1
  2250: 53 27 00 f0 21           jump @144 if a0 <u 4294963200
      :                          @139
  2255: 82 18 60                 a1 = u64 [sp + 0x60]
  2258: 95 87 00 10              a0 = a1 + 0x1000
  2262: 01                       fallthrough
      :                          @140
  2263: 82 78                    a1 = u64 [a0]
  2265: c9 87 09                 a2 = a0 - a1
  2268: ab 59 0f                 jump @144 if a2 != s0
      :                          @141
  2271: c9 68 09                 a2 = a1 - s1
  2274: 01                       fallthrough
      :                          @142
  2275: 82 7a                    a3 = u64 [a0]
  2277: ab 8a f2                 jump @140 if a3 != a1
      :                          @143
  2280: 7b 79                    u64 [a0] = a2
  2282: 01                       fallthrough
      :                          @144
  2283: 95 15 a0 20              s0 = sp + 0x20a0
  2287: 82 57 30                 a0 = u64 [s0 + 0x30]
  2290: 82 58 38                 a1 = u64 [s0 + 0x38]
  2293: 33 09                    a2 = 0
  2295: 0a 14                    ecalli 20 // 'machine'
  2297: 7b 57 48                 u64 [s0 + 0x48] = a0
  2300: 95 17 e8 20              a0 = sp + 0x20e8
  2304: 95 16 f8 30              s1 = sp + 0x30f8
  2308: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2312: 33 07 40 08 01           a0 = 0x10840
  2317: 7b 57 50                 u64 [s0 + 0x50] = a0
  2320: 95 17 88 31              a0 = sp + 0x3188
  2324: 7b 57 60                 u64 [s0 + 0x60] = a0
  2327: 49 15 58 01              u64 [s0 + 88] = 0x1
  2331: 49 15 68 01              u64 [s0 + 104] = 0x1
  2335: 82 17 68                 a0 = u64 [sp + 0x68]
  2338: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2342: 49 15 70                 u64 [s0 + 112] = 0
  2345: 95 17 40 32              a0 = sp + 0x3240
  2349: 95 18 f0 20              a1 = sp + 0x20f0
  2353: 50 10 4a 4c 2e           ra = 74, jump @751
      :                          @145 [@dyn 37]
  2358: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2362: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2366: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2370: 33 07 02                 a0 = 0x2
  2373: 33 08                    a1 = 0
  2375: 33 09                    a2 = 0
  2377: 64 5a                    a3 = s0
  2379: 33 00 4c                 ra = 0x4c
  2382: 0a 64                    ecalli 100 // 'log'
  2384: 01                       fallthrough
      :                          @146 [@dyn 38]
  2385: 82 17 70                 a0 = u64 [sp + 0x70]
  2388: c8 67 07                 a0 = a0 + s1
  2391: 53 27 00 f0 21           jump @152 if a0 <u 4294963200
      :                          @147
  2396: 82 18 60                 a1 = u64 [sp + 0x60]
  2399: 95 87 00 10              a0 = a1 + 0x1000
  2403: 01                       fallthrough
      :                          @148
  2404: 82 78                    a1 = u64 [a0]
  2406: c9 87 09                 a2 = a0 - a1
  2409: ab 59 0f                 jump @152 if a2 != s0
      :                          @149
  2412: c9 68 09                 a2 = a1 - s1
  2415: 01                       fallthrough
      :                          @150
  2416: 82 7a                    a3 = u64 [a0]
  2418: ab 8a f2                 jump @148 if a3 != a1
      :                          @151
  2421: 7b 79                    u64 [a0] = a2
  2423: 01                       fallthrough
      :                          @152
  2424: 95 19 a0 20              a2 = sp + 0x20a0
  2428: 82 97                    a0 = u64 [a2]
  2430: 7b 17 48                 u64 [sp + 0x48] = a0
  2433: 82 97 08                 a0 = u64 [a2 + 0x8]
  2436: 7b 17 40                 u64 [sp + 0x40] = a0
  2439: 82 97 10                 a0 = u64 [a2 + 0x10]
  2442: 7b 17 38                 u64 [sp + 0x38] = a0
  2445: 82 95 18                 s0 = u64 [a2 + 0x18]
  2448: 82 98 20                 a1 = u64 [a2 + 0x20]
  2451: 7b 18 30                 u64 [sp + 0x30] = a1
  2454: 80 97 48                 a0 = u32 [a2 + 0x48]
  2457: 82 96 28                 s1 = u64 [a2 + 0x28]
  2460: 49 11 50 ff 0f           u64 [sp + 80] = 0xfff
  2465: 95 59 ff 0f              a2 = s0 + 0xfff
  2469: 98 99 0c                 a2 = a2 >> 0xc
  2472: 33 08 10                 a1 = 0x10
  2475: 7b 17 58                 u64 [sp + 0x58] = a0
  2478: 0a 17                    ecalli 23 // 'zero'
  2480: 01                       fallthrough
      :                          @153
  2481: 51 07 16                 jump @155 if a0 == 0
      :                          @154
  2484: 33 0a 55 07 01           a3 = 0x10755
  2489: 33 0b 3e                 a4 = 0x3e
  2492: 33 07                    a0 = 0
  2494: 33 08                    a1 = 0
  2496: 33 09                    a2 = 0
  2498: 0a 64                    ecalli 100 // 'log'
  2500: 28 dc 00                 jump @168
      :                          @155
  2503: 7b 16 28                 u64 [sp + 0x28] = s1
  2506: 82 17 50                 a0 = u64 [sp + 0x50]
  2509: c8 67 07                 a0 = a0 + s1
  2512: 98 77 0c                 a0 = a0 >> 0xc
  2515: 82 19 48                 a2 = u64 [sp + 0x48]
  2518: c8 79 09                 a2 = a2 + a0
  2521: 7b 15 48                 u64 [sp + 0x48] = s0
  2524: 95 57 ff ff 00           a0 = s0 + 0xffff
  2529: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2534: 95 75 00 00 02           s0 = a0 + 0x20000
  2539: 98 58 0c                 a1 = s0 >> 0xc
  2542: 82 17 58                 a0 = u64 [sp + 0x58]
  2545: 0a 17                    ecalli 23 // 'zero'
  2547: 01                       fallthrough
      :                          @156
  2548: 51 07 16                 jump @158 if a0 == 0
      :                          @157
  2551: 33 0a 17 07 01           a3 = 0x10717
  2556: 33 0b 3e                 a4 = 0x3e
  2559: 33 07                    a0 = 0
  2561: 33 08                    a1 = 0
  2563: 33 09                    a2 = 0
  2565: 0a 64                    ecalli 100 // 'log'
  2567: 28 99 00                 jump @168
      :                          @158
  2570: 82 16 50                 s1 = u64 [sp + 0x50]
  2573: 82 17 40                 a0 = u64 [sp + 0x40]
  2576: c8 76 06                 s1 = s1 + a0
  2579: 98 69 0c                 a2 = s1 >> 0xc
  2582: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2586: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2596: c9 78 08                 a1 = a1 - a0
  2599: 98 88 0c                 a1 = a1 >> 0xc
  2602: 82 17 58                 a0 = u64 [sp + 0x58]
  2605: 0a 17                    ecalli 23 // 'zero'
  2607: 01                       fallthrough
      :                          @159
  2608: 51 07 15                 jump @161 if a0 == 0
      :                          @160
  2611: 33 0a db 06 01           a3 = 0x106db
  2616: 33 0b 3c                 a4 = 0x3c
  2619: 33 07                    a0 = 0
  2621: 33 08                    a1 = 0
  2623: 33 09                    a2 = 0
  2625: 0a 64                    ecalli 100 // 'log'
  2627: 28 5d                    jump @168
      :                          @161
  2629: 33 09 00 00 01           a2 = 0x10000
  2634: 82 17 58                 a0 = u64 [sp + 0x58]
  2637: 82 18 38                 a1 = u64 [sp + 0x38]
  2640: 82 1a 48                 a3 = u64 [sp + 0x48]
  2643: 0a 16                    ecalli 22 // 'poke'
  2645: 01                       fallthrough
      :                          @162
  2646: 51 07 15                 jump @164 if a0 == 0
      :                          @163
  2649: 33 0a 9d 06 01           a3 = 0x1069d
  2654: 33 0b 3e                 a4 = 0x3e
  2657: 33 07                    a0 = 0
  2659: 33 08                    a1 = 0
  2661: 33 09                    a2 = 0
  2663: 0a 64                    ecalli 100 // 'log'
  2665: 28 37                    jump @168
      :                          @164
  2667: 82 17 58                 a0 = u64 [sp + 0x58]
  2670: 82 18 30                 a1 = u64 [sp + 0x30]
  2673: 64 59                    a2 = s0
  2675: 82 1a 28                 a3 = u64 [sp + 0x28]
  2678: 0a 16                    ecalli 22 // 'poke'
  2680: 01                       fallthrough
      :                          @165
  2681: 51 07 15                 jump @167 if a0 == 0
      :                          @166
  2684: 33 0a 5f 06 01           a3 = 0x1065f
  2689: 33 0b 3e                 a4 = 0x3e
  2692: 33 07                    a0 = 0
  2694: 33 08                    a1 = 0
  2696: 33 09                    a2 = 0
  2698: 0a 64                    ecalli 100 // 'log'
  2700: 28 14                    jump @168
      :                          @167
  2702: 33 0a 31 06 01           a3 = 0x10631
  2707: 33 07 03                 a0 = 0x3
  2710: 33 0b 2e                 a4 = 0x2e
  2713: 33 08                    a1 = 0
  2715: 33 09                    a2 = 0
  2717: 0a 64                    ecalli 100 // 'log'
  2719: 01                       fallthrough
      :                          @168
  2720: 95 16 f8 30              s1 = sp + 0x30f8
  2724: 33 05 08 10              s0 = 0x1008
  2728: 95 17 f0 20              a0 = sp + 0x20f0
  2732: 33 08                    a1 = 0
  2734: 33 09 08 10              a2 = 0x1008
  2738: 50 10 4e f2 2f           ra = 78, jump @819
      :                          @169 [@dyn 39]
  2743: 49 06                    u64 [s1 + 0] = 0
  2745: 95 17 f8 20              a0 = sp + 0x20f8
  2749: 7b 67 08                 u64 [s1 + 0x8] = a0
  2752: 49 16 10                 u64 [s1 + 16] = 0
  2755: 49 16 18                 u64 [s1 + 24] = 0
  2758: 95 17 f0 20              a0 = sp + 0x20f0
  2762: 33 0a 06                 a3 = 0x6
  2765: 33 08                    a1 = 0
  2767: 7b 15 58                 u64 [sp + 0x58] = s0
  2770: 64 59                    a2 = s0
  2772: 33 0b                    a4 = 0
  2774: 33 0c                    a5 = 0
  2776: 0a 12                    ecalli 18 // 'fetch'
  2778: 01                       fallthrough
      :                          @170
  2779: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2783: 33 08 28 00 01           a1 = 0x10028
  2788: 7b 18 50                 u64 [sp + 0x50] = a1
  2791: 51 17 ff 53 02           jump @197 if a0 == 4294967295
      :                          @171
  2796: 33 07 50 08 01           a0 = 0x10850
  2801: 7b 17 48                 u64 [sp + 0x48] = a0
  2804: 33 07 70 08 01           a0 = 0x10870
  2809: 7b 17 40                 u64 [sp + 0x40] = a0
  2812: 33 07 a0 08 01           a0 = 0x108a0
  2817: 7b 17 38                 u64 [sp + 0x38] = a0
  2820: 28 27                    jump @174
      :                          @172
  2822: 95 16 f8 30              s1 = sp + 0x30f8
  2826: 82 6b                    a4 = u64 [s1]
  2828: 95 bb 01                 a4 = a4 + 0x1
  2831: 7b 6b                    u64 [s1] = a4
  2833: 95 17 f0 20              a0 = sp + 0x20f0
  2837: 33 0a 06                 a3 = 0x6
  2840: 33 08                    a1 = 0
  2842: 82 19 58                 a2 = u64 [sp + 0x58]
  2845: 33 0c                    a5 = 0
  2847: 0a 12                    ecalli 18 // 'fetch'
  2849: 01                       fallthrough
      :                          @173
  2850: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2854: 51 17 ff 14 02           jump @197 if a0 == 4294967295
      :                          @174
  2859: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2863: 82 17 68                 a0 = u64 [sp + 0x68]
  2866: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2870: 95 18 60 33              a1 = sp + 0x3360
  2874: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2878: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2882: 82 17 48                 a0 = u64 [sp + 0x48]
  2885: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2889: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2894: 49 26 68 01              u64 [s1 + 360] = 0
  2898: 95 18 88 31              a1 = sp + 0x3188
  2902: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2906: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2911: 95 17 20 31              a0 = sp + 0x3120
  2915: 95 18 40 32              a1 = sp + 0x3240
  2919: 50 10 50 16 2c           ra = 80, jump @751
      :                          @175 [@dyn 40]
  2924: 95 17 f8 30              a0 = sp + 0x30f8
  2928: 82 76 30                 s1 = u64 [a0 + 0x30]
  2931: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2934: 82 75 28                 s0 = u64 [a0 + 0x28]
  2937: 33 07 04                 a0 = 0x4
  2940: 33 08                    a1 = 0
  2942: 33 09                    a2 = 0
  2944: 64 6a                    a3 = s1
  2946: 33 00 52                 ra = 0x52
  2949: 0a 64                    ecalli 100 // 'log'
  2951: 01                       fallthrough
      :                          @176 [@dyn 41]
  2952: 82 17 70                 a0 = u64 [sp + 0x70]
  2955: c8 57 07                 a0 = a0 + s0
  2958: 82 1c 60                 a5 = u64 [sp + 0x60]
  2961: 33 02 00 10              t0 = 0x1000
  2965: 53 27 00 f0 1c           jump @181 if a0 <u 4294963200
      :                          @177
  2970: c8 2c 08                 a1 = a5 + t0
  2973: 82 87                    a0 = u64 [a1]
  2975: c9 78 09                 a2 = a1 - a0
  2978: ab 69 0f                 jump @181 if a2 != s1
      :                          @178
  2981: c9 57 09                 a2 = a0 - s0
  2984: 01                       fallthrough
      :                          @179
  2985: 82 8a                    a3 = u64 [a1]
  2987: ab 7a ef                 jump @177 if a3 != a0
      :                          @180
  2990: 7b 89                    u64 [a1] = a2
  2992: 01                       fallthrough
      :                          @181
  2993: 95 18 a0 20              a1 = sp + 0x20a0
  2997: 80 87 50                 a0 = u32 [a1 + 0x50]
  3000: 80 88 54                 a1 = u32 [a1 + 0x54]
  3003: 95 15 f8 30              s0 = sp + 0x30f8
  3007: 7b 57 10                 u64 [s0 + 0x10] = a0
  3010: 7b 58 18                 u64 [s0 + 0x18] = a1
  3013: 33 09 01                 a2 = 0x1
  3016: 0a 17                    ecalli 23 // 'zero'
  3018: 7b 57 48 02              u64 [s0 + 0x248] = a0
  3022: 95 17 08 31              a0 = sp + 0x3108
  3026: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3030: 82 17 68                 a0 = u64 [sp + 0x68]
  3033: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3037: 95 18 10 31              a1 = sp + 0x3110
  3041: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3045: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3049: 95 18 40 33              a1 = sp + 0x3340
  3053: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3057: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3061: 82 17 40                 a0 = u64 [sp + 0x40]
  3064: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3068: 49 25 98 00 03           u64 [s0 + 152] = 0x3
  3073: 49 25 b0 00              u64 [s0 + 176] = 0
  3077: 95 17 40 32              a0 = sp + 0x3240
  3081: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  3085: 49 25 a8 00 03           u64 [s0 + 168] = 0x3
  3090: 95 17 20 31              a0 = sp + 0x3120
  3094: 95 18 88 31              a1 = sp + 0x3188
  3098: 50 10 54 63 2b           ra = 84, jump @751
      :                          @182 [@dyn 42]
  3103: 82 56 30                 s1 = u64 [s0 + 0x30]
  3106: 82 5b 38                 a4 = u64 [s0 + 0x38]
  3109: 82 55 28                 s0 = u64 [s0 + 0x28]
  3112: 33 07 04                 a0 = 0x4
  3115: 33 08                    a1 = 0
  3117: 33 09                    a2 = 0
  3119: 64 6a                    a3 = s1
  3121: 33 00 56                 ra = 0x56
  3124: 0a 64                    ecalli 100 // 'log'
  3126: 01                       fallthrough
      :                          @183 [@dyn 43]
  3127: 33 02 00 10              t0 = 0x1000
  3131: 82 1c 60                 a5 = u64 [sp + 0x60]
  3134: 82 17 70                 a0 = u64 [sp + 0x70]
  3137: c8 57 07                 a0 = a0 + s0
  3140: 53 27 00 f0 1c           jump @188 if a0 <u 4294963200
      :                          @184
  3145: c8 2c 08                 a1 = a5 + t0
  3148: 82 87                    a0 = u64 [a1]
  3150: c9 78 09                 a2 = a1 - a0
  3153: ab 69 0f                 jump @188 if a2 != s1
      :                          @185
  3156: c9 57 09                 a2 = a0 - s0
  3159: 01                       fallthrough
      :                          @186
  3160: 82 8a                    a3 = u64 [a1]
  3162: ab 7a ef                 jump @184 if a3 != a0
      :                          @187
  3165: 7b 89                    u64 [a1] = a2
  3167: 01                       fallthrough
      :                          @188
  3168: 95 15 f8 30              s0 = sp + 0x30f8
  3172: 82 59 18                 a2 = u64 [s0 + 0x18]
  3175: 82 57 10                 a0 = u64 [s0 + 0x10]
  3178: 95 18 f0 20              a1 = sp + 0x20f0
  3182: 7b 58 78 02              u64 [s0 + 0x278] = a1
  3186: 97 99 0c                 a2 = a2 << 0xc
  3189: 7b 59 88 02              u64 [s0 + 0x288] = a2
  3193: 33 0a 00 10              a3 = 0x1000
  3197: 95 18 f8 20              a1 = sp + 0x20f8
  3201: 0a 16                    ecalli 22 // 'poke'
  3203: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3207: 95 17 08 31              a0 = sp + 0x3108
  3211: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3215: 82 17 68                 a0 = u64 [sp + 0x68]
  3218: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3222: 95 18 70 33              a1 = sp + 0x3370
  3226: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3230: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3234: 95 18 80 33              a1 = sp + 0x3380
  3238: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3242: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3246: 82 18 50                 a1 = u64 [sp + 0x50]
  3249: 7b 58 78 01              u64 [s0 + 0x178] = a1
  3253: 7b 57 80 01              u64 [s0 + 0x180] = a0
  3257: 95 18 00 32              a1 = sp + 0x3200
  3261: 7b 58 88 01              u64 [s0 + 0x188] = a1
  3265: 7b 57 90 01              u64 [s0 + 0x190] = a0
  3269: 82 17 38                 a0 = u64 [sp + 0x38]
  3272: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3276: 49 25 98 00 05           u64 [s0 + 152] = 0x5
  3281: 49 25 b0 00              u64 [s0 + 176] = 0
  3285: 95 17 40 32              a0 = sp + 0x3240
  3289: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  3293: 49 25 a8 00 05           u64 [s0 + 168] = 0x5
  3298: 95 17 20 31              a0 = sp + 0x3120
  3302: 95 18 88 31              a1 = sp + 0x3188
  3306: 50 10 58 93 2a           ra = 88, jump @751
      :                          @189 [@dyn 44]
  3311: 82 56 30                 s1 = u64 [s0 + 0x30]
  3314: 82 5b 38                 a4 = u64 [s0 + 0x38]
  3317: 82 55 28                 s0 = u64 [s0 + 0x28]
  3320: 33 07 04                 a0 = 0x4
  3323: 33 08                    a1 = 0
  3325: 33 09                    a2 = 0
  3327: 64 6a                    a3 = s1
  3329: 33 00 5a                 ra = 0x5a
  3332: 0a 64                    ecalli 100 // 'log'
  3334: 01                       fallthrough
      :                          @190 [@dyn 45]
  3335: 33 02 00 10              t0 = 0x1000
  3339: 82 1c 60                 a5 = u64 [sp + 0x60]
  3342: 82 17 70                 a0 = u64 [sp + 0x70]
  3345: c8 57 07                 a0 = a0 + s0
  3348: 53 27 00 f0 f2 fd        jump @172 if a0 <u 4294963200
      :                          @191
  3354: c8 2c 08                 a1 = a5 + t0
  3357: 82 87                    a0 = u64 [a1]
  3359: c9 78 09                 a2 = a1 - a0
  3362: ab 69 e4 fd              jump @172 if a2 != s1
      :                          @192
  3366: c9 57 09                 a2 = a0 - s0
  3369: 01                       fallthrough
      :                          @193
  3370: 82 8a                    a3 = u64 [a1]
  3372: ab 7a ee                 jump @191 if a3 != a0
      :                          @194
  3375: 7b 89                    u64 [a1] = a2
  3377: 33 0b                    a4 = 0
  3379: 01                       fallthrough
      :                          @195
  3380: ab 7a e6                 jump @191 if a3 != a0
      :                          @196
  3383: 28 cf fd                 jump @172
      :                          @197
  3386: 82 69 18                 a2 = u64 [s1 + 0x18]
  3389: 95 9a 01                 a3 = a2 + 0x1
  3392: 82 67 10                 a0 = u64 [s1 + 0x10]
  3395: 33 08 f0 ef 0f           a1 = 0xfeff0
  3400: db 9a 08                 a1 = a3 if a2 != 0
  3403: 7b 68 18                 u64 [s1 + 0x18] = a1
  3406: 33 09 01                 a2 = 0x1
  3409: 0a 17                    ecalli 23 // 'zero'
  3411: 7b 67 20                 u64 [s1 + 0x20] = a0
  3414: 95 17 08 31              a0 = sp + 0x3108
  3418: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3422: 95 17 10 31              a0 = sp + 0x3110
  3426: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3430: 95 17 18 31              a0 = sp + 0x3118
  3434: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3438: 33 07 f0 08 01           a0 = 0x108f0
  3443: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3447: 95 17 40 32              a0 = sp + 0x3240
  3451: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  3455: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3460: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3465: 82 17 68                 a0 = u64 [sp + 0x68]
  3468: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3472: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3476: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3480: 49 26 b0 00              u64 [s1 + 176] = 0
  3484: 95 17 20 31              a0 = sp + 0x3120
  3488: 95 18 88 31              a1 = sp + 0x3188
  3492: 50 10 5c d9 29           ra = 92, jump @751
      :                          @198 [@dyn 46]
  3497: 82 65 30                 s0 = u64 [s1 + 0x30]
  3500: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3503: 95 17 f8 30              a0 = sp + 0x30f8
  3507: 82 76 28                 s1 = u64 [a0 + 0x28]
  3510: 33 07 04                 a0 = 0x4
  3513: 33 08                    a1 = 0
  3515: 33 09                    a2 = 0
  3517: 64 5a                    a3 = s0
  3519: 33 00 5e                 ra = 0x5e
  3522: 0a 64                    ecalli 100 // 'log'
  3524: 01                       fallthrough
      :                          @199 [@dyn 47]
  3525: 82 17 70                 a0 = u64 [sp + 0x70]
  3528: c8 67 07                 a0 = a0 + s1
  3531: 53 27 00 f0 23           jump @205 if a0 <u 4294963200
      :                          @200
  3536: 82 18 60                 a1 = u64 [sp + 0x60]
  3539: 95 87 00 10              a0 = a1 + 0x1000
  3543: 01                       fallthrough
      :                          @201
  3544: 82 78                    a1 = u64 [a0]
  3546: c9 87 09                 a2 = a0 - a1
  3549: ab 59 11                 jump @205 if a2 != s0
      :                          @202
  3552: c9 68 09                 a2 = a1 - s1
  3555: 01                       fallthrough
      :                          @203
  3556: 82 7a                    a3 = u64 [a0]
  3558: ab 8a f2                 jump @201 if a3 != a1
      :                          @204
  3561: 7b 79                    u64 [a0] = a2
  3563: 33 0b                    a4 = 0
  3565: 01                       fallthrough
      :                          @205
  3566: 95 16 f8 30              s1 = sp + 0x30f8
  3570: 49 16 58                 u64 [s1 + 88] = 0
  3573: 49 16 50                 u64 [s1 + 80] = 0
  3576: 49 16 48                 u64 [s1 + 72] = 0
  3579: 49 16 40                 u64 [s1 + 64] = 0
  3582: 49 16 38                 u64 [s1 + 56] = 0
  3585: 49 16 70                 u64 [s1 + 112] = 0
  3588: 49 16 78                 u64 [s1 + 120] = 0
  3591: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3601: 7b 67 28                 u64 [s1 + 0x28] = a0
  3604: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3614: 7b 67 30                 u64 [s1 + 0x30] = a0
  3617: 82 67                    a0 = u64 [s1]
  3619: 49 26 80 00              u64 [s1 + 128] = 0
  3623: 49 26 88 00              u64 [s1 + 136] = 0
  3627: 49 16 68                 u64 [s1 + 104] = 0
  3630: 7b 67 60                 u64 [s1 + 0x60] = a0
  3633: 95 17 20 31              a0 = sp + 0x3120
  3637: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3641: 33 07 1e                 a0 = 0x1e
  3644: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3648: 33 07 20 09 01           a0 = 0x10920
  3653: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3657: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3662: 49 26 68 01              u64 [s1 + 360] = 0
  3666: 95 17 00 32              a0 = sp + 0x3200
  3670: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3674: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3679: 95 17 88 31              a0 = sp + 0x3188
  3683: 95 18 40 32              a1 = sp + 0x3240
  3687: 50 10 60 16 29           ra = 96, jump @751
      :                          @206 [@dyn 48]
  3692: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3696: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3700: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3704: 33 07 04                 a0 = 0x4
  3707: 33 08                    a1 = 0
  3709: 33 09                    a2 = 0
  3711: 64 5a                    a3 = s0
  3713: 33 00 62                 ra = 0x62
  3716: 0a 64                    ecalli 100 // 'log'
  3718: 01                       fallthrough
      :                          @207 [@dyn 49]
  3719: 82 17 70                 a0 = u64 [sp + 0x70]
  3722: c8 67 07                 a0 = a0 + s1
  3725: 82 13 60                 t1 = u64 [sp + 0x60]
  3728: 53 27 00 f0 1e           jump @213 if a0 <u 4294963200
      :                          @208
  3733: 95 37 00 10              a0 = t1 + 0x1000
  3737: 01                       fallthrough
      :                          @209
  3738: 82 78                    a1 = u64 [a0]
  3740: c9 87 09                 a2 = a0 - a1
  3743: ab 59 0f                 jump @213 if a2 != s0
      :                          @210
  3746: c9 68 09                 a2 = a1 - s1
  3749: 01                       fallthrough
      :                          @211
  3750: 82 7a                    a3 = u64 [a0]
  3752: ab 8a f2                 jump @209 if a3 != a1
      :                          @212
  3755: 7b 79                    u64 [a0] = a2
  3757: 01                       fallthrough
      :                          @213
  3758: 95 1c f8 30              a5 = sp + 0x30f8
  3762: 82 c7 28                 a0 = u64 [a5 + 0x28]
  3765: 82 c8 30                 a1 = u64 [a5 + 0x30]
  3768: 82 c9 38                 a2 = u64 [a5 + 0x38]
  3771: 82 ca 40                 a3 = u64 [a5 + 0x40]
  3774: 82 cb 48                 a4 = u64 [a5 + 0x48]
  3777: 82 c2 50                 t0 = u64 [a5 + 0x50]
  3780: 82 c6 58                 s1 = u64 [a5 + 0x58]
  3783: 49 2c 90 00 00 00 01     u64 [a5 + 144] = 0x10000
  3790: 82 c5 60                 s0 = u64 [a5 + 0x60]
  3793: 7b c7 98 00              u64 [a5 + 0x98] = a0
  3797: 82 c7 68                 a0 = u64 [a5 + 0x68]
  3800: 7b c8 a0 00              u64 [a5 + 0xa0] = a1
  3804: 82 c8 70                 a1 = u64 [a5 + 0x70]
  3807: 7b c9 a8 00              u64 [a5 + 0xa8] = a2
  3811: 82 c9 78                 a2 = u64 [a5 + 0x78]
  3814: 7b ca b0 00              u64 [a5 + 0xb0] = a3
  3818: 82 ca 80 00              a3 = u64 [a5 + 0x80]
  3822: 7b cb b8 00              u64 [a5 + 0xb8] = a4
  3826: 82 cb 88 00              a4 = u64 [a5 + 0x88]
  3830: 7b c2 c0 00              u64 [a5 + 0xc0] = t0
  3834: 7b c6 c8 00              u64 [a5 + 0xc8] = s1
  3838: 95 16 f8 30              s1 = sp + 0x30f8
  3842: 7b 65 d0 00              u64 [s1 + 0xd0] = s0
  3846: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  3850: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  3854: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
  3858: 7b 6a f0 00              u64 [s1 + 0xf0] = a3
  3862: 7b 6b f8 00              u64 [s1 + 0xf8] = a4
  3866: 33 07 30 09 01           a0 = 0x10930
  3871: 7b 17 48                 u64 [sp + 0x48] = a0
  3874: 95 37 00 10              a0 = t1 + 0x1000
  3878: 7b 17 40                 u64 [sp + 0x40] = a0
  3881: 01                       fallthrough
      :                          @214
  3882: 95 17 a0 20              a0 = sp + 0x20a0
  3886: 82 77 48                 a0 = u64 [a0 + 0x48]
  3889: 95 18 88 31              a1 = sp + 0x3188
  3893: 0a 19                    ecalli 25 // 'invoke'
  3895: 7b 18 58                 u64 [sp + 0x58] = a1
  3898: 7b 67 00 01              u64 [s1 + 0x100] = a0
  3902: 95 17 e8 20              a0 = sp + 0x20e8
  3906: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3910: 82 17 68                 a0 = u64 [sp + 0x68]
  3913: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3917: 95 18 f8 31              a1 = sp + 0x31f8
  3921: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3925: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3929: 95 18 e0 20              a1 = sp + 0x20e0
  3933: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3937: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3941: 82 17 48                 a0 = u64 [sp + 0x48]
  3944: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3948: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  3953: 49 26 28 01              u64 [s1 + 296] = 0
  3957: 95 17 40 32              a0 = sp + 0x3240
  3961: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3965: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  3970: 95 17 80 33              a0 = sp + 0x3380
  3974: 95 18 00 32              a1 = sp + 0x3200
  3978: 50 10 64 f3 27           ra = 100, jump @751
      :                          @215 [@dyn 50]
  3983: 82 65 90 02              s0 = u64 [s1 + 0x290]
  3987: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  3991: 95 17 f8 30              a0 = sp + 0x30f8
  3995: 82 76 88 02              s1 = u64 [a0 + 0x288]
  3999: 33 07 04                 a0 = 0x4
  4002: 33 08                    a1 = 0
  4004: 33 09                    a2 = 0
  4006: 64 5a                    a3 = s0
  4008: 33 00 66                 ra = 0x66
  4011: 0a 64                    ecalli 100 // 'log'
  4013: 01                       fallthrough
      :                          @216 [@dyn 51]
  4014: 82 17 70                 a0 = u64 [sp + 0x70]
  4017: c8 67 07                 a0 = a0 + s1
  4020: 82 1b 40                 a4 = u64 [sp + 0x40]
  4023: 53 27 00 f0 19           jump @221 if a0 <u 4294963200
      :                          @217
  4028: 82 b7                    a0 = u64 [a4]
  4030: c9 7b 08                 a1 = a4 - a0
  4033: ab 58 0f                 jump @221 if a1 != s0
      :                          @218
  4036: c9 67 08                 a1 = a0 - s1
  4039: 01                       fallthrough
      :                          @219
  4040: 82 b9                    a2 = u64 [a4]
  4042: ab 79 f2                 jump @217 if a2 != a0
      :                          @220
  4045: 7b b8                    u64 [a4] = a1
  4047: 01                       fallthrough
      :                          @221
  4048: 95 16 f8 30              s1 = sp + 0x30f8
  4052: 82 67 00 01              a0 = u64 [s1 + 0x100]
  4056: 51 07 ae 00              jump @226 if a0 == 0
      :                          @222
  4060: 85 77 03                 a0 = a0 ^ 0x3
  4063: 82 18 58                 a1 = u64 [sp + 0x58]
  4066: 85 88 64                 a1 = a1 ^ 0x64
  4069: d4 87 07                 a0 = a0 | a1
  4072: 52 07 42 ff              jump @214 if a0 != 0
      :                          @223
  4076: 95 17 20 31              a0 = sp + 0x3120
  4080: 33 09 68                 a2 = 0x68
  4083: 95 18 90 31              a1 = sp + 0x3190
  4087: 50 10 68 fb 29           ra = 104, jump @801
      :                          @224 [@dyn 52]
  4092: 82 67 60                 a0 = u64 [s1 + 0x60]
  4095: 7b 17 58                 u64 [sp + 0x58] = a0
  4098: 82 67 68                 a0 = u64 [s1 + 0x68]
  4101: 7b 17 28                 u64 [sp + 0x28] = a0
  4104: 82 65 70                 s0 = u64 [s1 + 0x70]
  4107: 7b 15 20                 u64 [sp + 0x20] = s0
  4110: 82 67 78                 a0 = u64 [s1 + 0x78]
  4113: 7b 17 38                 u64 [sp + 0x38] = a0
  4116: 82 67 80 00              a0 = u64 [s1 + 0x80]
  4120: 7b 17 30                 u64 [sp + 0x30] = a0
  4123: 49 26 40 01              u64 [s1 + 320] = 0
  4127: 49 26 38 01              u64 [s1 + 312] = 0
  4131: 49 26 30 01              u64 [s1 + 304] = 0
  4135: 49 26 28 01              u64 [s1 + 296] = 0
  4139: 49 26 20 01              u64 [s1 + 288] = 0
  4143: 49 26 18 01              u64 [s1 + 280] = 0
  4147: 49 26 10 01              u64 [s1 + 272] = 0
  4151: 49 26 08 01              u64 [s1 + 264] = 0
  4155: 95 17 40 32              a0 = sp + 0x3240
  4159: 33 09 00 01              a2 = 0x100
  4163: 33 08                    a1 = 0
  4165: 50 10 6a 5f 2a           ra = 106, jump @819
      :                          @225 [@dyn 53]
  4170: 95 17 a0 20              a0 = sp + 0x20a0
  4174: 82 77 48                 a0 = u64 [a0 + 0x48]
  4177: 95 18 00 32              a1 = sp + 0x3200
  4181: 82 19 28                 a2 = u64 [sp + 0x28]
  4184: 64 5a                    a3 = s0
  4186: 0a 15                    ecalli 21 // 'peek'
  4188: 95 17 a0 20              a0 = sp + 0x20a0
  4192: 82 77 48                 a0 = u64 [a0 + 0x48]
  4195: 95 18 40 32              a1 = sp + 0x3240
  4199: 82 19 38                 a2 = u64 [sp + 0x38]
  4202: 82 15 30                 s0 = u64 [sp + 0x30]
  4205: 64 5a                    a3 = s0
  4207: 0a 15                    ecalli 21 // 'peek'
  4209: 95 18 00 32              a1 = sp + 0x3200
  4213: 95 1a 40 32              a3 = sp + 0x3240
  4217: 82 17 58                 a0 = u64 [sp + 0x58]
  4220: 82 19 20                 a2 = u64 [sp + 0x20]
  4223: 64 5b                    a4 = s0
  4225: 0a 64                    ecalli 100 // 'log'
  4227: 28 a7 fe                 jump @214
      :                          @226
  4230: 0a                       ecalli 0 // 'gas'
  4231: 95 18 a0 20              a1 = sp + 0x20a0
  4235: 7b 87 40                 u64 [a1 + 0x40] = a0
  4238: 95 17 e0 20              a0 = sp + 0x20e0
  4242: 7b 67 88 02              u64 [s1 + 0x288] = a0
  4246: 82 17 18                 a0 = u64 [sp + 0x18]
  4249: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4253: 95 17 80 33              a0 = sp + 0x3380
  4257: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4261: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4266: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4271: 82 17 68                 a0 = u64 [sp + 0x68]
  4274: 7b 67 90 02              u64 [s1 + 0x290] = a0
  4278: 49 26 68 01              u64 [s1 + 360] = 0
  4282: 95 17 00 32              a0 = sp + 0x3200
  4286: 95 18 40 32              a1 = sp + 0x3240
  4290: 50 10 6c bb 26           ra = 108, jump @751
      :                          @227 [@dyn 54]
  4295: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4299: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4303: 95 17 f8 30              a0 = sp + 0x30f8
  4307: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4311: 33 07 04                 a0 = 0x4
  4314: 33 08                    a1 = 0
  4316: 33 09                    a2 = 0
  4318: 64 5a                    a3 = s0
  4320: 33 00 6e                 ra = 0x6e
  4323: 0a 64                    ecalli 100 // 'log'
  4325: 01                       fallthrough
      :                          @228 [@dyn 55]
  4326: 82 17 70                 a0 = u64 [sp + 0x70]
  4329: c8 67 07                 a0 = a0 + s1
  4332: 53 27 00 f0 23           jump @234 if a0 <u 4294963200
      :                          @229
  4337: 82 18 60                 a1 = u64 [sp + 0x60]
  4340: 95 87 00 10              a0 = a1 + 0x1000
  4344: 01                       fallthrough
      :                          @230
  4345: 82 78                    a1 = u64 [a0]
  4347: c9 87 09                 a2 = a0 - a1
  4350: ab 59 11                 jump @234 if a2 != s0
      :                          @231
  4353: c9 68 09                 a2 = a1 - s1
  4356: 01                       fallthrough
      :                          @232
  4357: 82 7a                    a3 = u64 [a0]
  4359: ab 8a f2                 jump @230 if a3 != a1
      :                          @233
  4362: 7b 79                    u64 [a0] = a2
  4364: 33 0b                    a4 = 0
  4366: 01                       fallthrough
      :                          @234
  4367: 95 17 a0 20              a0 = sp + 0x20a0
  4371: 82 77 48                 a0 = u64 [a0 + 0x48]
  4374: 95 16 f8 30              s1 = sp + 0x30f8
  4378: 48 26 50 02              u32 [s1 + 592] = 0
  4382: 49 26 48 02              u64 [s1 + 584] = 0
  4386: 82 69                    a2 = u64 [s1]
  4388: 7a 67 54 02              u32 [s1 + 0x254] = a0
  4392: 33 08 12                 a1 = 0x12
  4395: 7b 18 48                 u64 [sp + 0x48] = a1
  4398: 7b 19 40                 u64 [sp + 0x40] = a2
  4401: 51 19 ff ff 02           jump @264 if a2 == 4294967295
      :                          @235
  4406: 33 08                    a1 = 0
  4408: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4418: 7b 19 38                 u64 [sp + 0x38] = a2
  4421: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4431: 7b 17 30                 u64 [sp + 0x30] = a0
  4434: 33 07 c0 09 01           a0 = 0x109c0
  4439: 7b 17 28                 u64 [sp + 0x28] = a0
  4442: 49 11 20 f0 ef 0f        u64 [sp + 32] = 0xfeff0
  4448: 33 07 06                 a0 = 0x6
  4451: 7b 17 18                 u64 [sp + 0x18] = a0
  4454: 33 07 16                 a0 = 0x16
  4457: 7b 17 10                 u64 [sp + 0x10] = a0
  4460: 33 07 10 0a 01           a0 = 0x10a10
  4465: 7b 17 08                 u64 [sp + 0x8] = a0
  4468: 28 13                    jump @237
      :                          @236
  4470: 82 19 58                 a2 = u64 [sp + 0x58]
  4473: 95 98 01                 a1 = a2 + 0x1
  4476: 95 16 f8 30              s1 = sp + 0x30f8
  4480: 82 17 40                 a0 = u64 [sp + 0x40]
  4483: aa 79 ad 02              jump @264 if a2 == a0
      :                          @237
  4487: 7b 68 58 02              u64 [s1 + 0x258] = a1
  4491: 7b 18 58                 u64 [sp + 0x58] = a1
  4494: 97 89 0c                 a2 = a1 << 0xc
  4497: 95 17 a0 20              a0 = sp + 0x20a0
  4501: 82 77 48                 a0 = u64 [a0 + 0x48]
  4504: 82 68 08                 a1 = u64 [s1 + 0x8]
  4507: 82 1a 38                 a3 = u64 [sp + 0x38]
  4510: c8 a9 09                 a2 = a2 + a3
  4513: 82 1a 30                 a3 = u64 [sp + 0x30]
  4516: d2 a9 09                 a2 = a2 & a3
  4519: 7b 69 60 02              u64 [s1 + 0x260] = a2
  4523: 33 0a 00 10              a3 = 0x1000
  4527: 0a 15                    ecalli 21 // 'peek'
  4529: 7b 67 68 02              u64 [s1 + 0x268] = a0
  4533: 95 17 e8 20              a0 = sp + 0x20e8
  4537: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4541: 82 17 68                 a0 = u64 [sp + 0x68]
  4544: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4548: 95 18 00 31              a1 = sp + 0x3100
  4552: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4556: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4560: 95 18 58 33              a1 = sp + 0x3358
  4564: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4568: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4572: 82 18 50                 a1 = u64 [sp + 0x50]
  4575: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4579: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4583: 95 18 60 33              a1 = sp + 0x3360
  4587: 7b 68 88 01              u64 [s1 + 0x188] = a1
  4591: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4595: 82 17 28                 a0 = u64 [sp + 0x28]
  4598: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4602: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4607: 49 26 28 01              u64 [s1 + 296] = 0
  4611: 95 18 40 32              a1 = sp + 0x3240
  4615: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4619: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4624: 95 17 80 33              a0 = sp + 0x3380
  4628: 95 18 00 32              a1 = sp + 0x3200
  4632: 50 10 70 65 25           ra = 112, jump @751
      :                          @238 [@dyn 56]
  4637: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4641: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4645: 95 17 f8 30              a0 = sp + 0x30f8
  4649: 82 76 88 02              s1 = u64 [a0 + 0x288]
  4653: 33 07 03                 a0 = 0x3
  4656: 33 08                    a1 = 0
  4658: 33 09                    a2 = 0
  4660: 64 5a                    a3 = s0
  4662: 33 00 72                 ra = 0x72
  4665: 0a 64                    ecalli 100 // 'log'
  4667: 01                       fallthrough
      :                          @239 [@dyn 57]
  4668: 82 17 70                 a0 = u64 [sp + 0x70]
  4671: c8 67 07                 a0 = a0 + s1
  4674: 82 1c 60                 a5 = u64 [sp + 0x60]
  4677: 33 02 00 10              t0 = 0x1000
  4681: 53 27 00 f0 1e           jump @244 if a0 <u 4294963200
      :                          @240
  4686: c8 2c 08                 a1 = a5 + t0
  4689: 82 87                    a0 = u64 [a1]
  4691: c9 78 09                 a2 = a1 - a0
  4694: ab 59 11                 jump @244 if a2 != s0
      :                          @241
  4697: c9 67 09                 a2 = a0 - s1
  4700: 01                       fallthrough
      :                          @242
  4701: 82 8a                    a3 = u64 [a1]
  4703: ab 7a ef                 jump @240 if a3 != a0
      :                          @243
  4706: 7b 89                    u64 [a1] = a2
  4708: 33 0b                    a4 = 0
  4710: 01                       fallthrough
      :                          @244
  4711: 95 16 f8 30              s1 = sp + 0x30f8
  4715: 81 67 54 02              a0 = i32 [s1 + 0x254]
  4719: 81 68 58 02              a1 = i32 [s1 + 0x258]
  4723: 95 19 a0 20              a2 = sp + 0x20a0
  4727: 7a 97 50                 u32 [a2 + 0x50] = a0
  4730: 82 17 20                 a0 = u64 [sp + 0x20]
  4733: be 87 07                 i32 a0 = a0 + a1
  4736: 7a 67 74 02              u32 [s1 + 0x274] = a0
  4740: 7a 97 54                 u32 [a2 + 0x54] = a0
  4743: 95 17 f0 20              a0 = sp + 0x20f0
  4747: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4751: 49 26 80 02 08           u64 [s1 + 640] = 0x8
  4756: 95 17 70 33              a0 = sp + 0x3370
  4760: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4764: 82 17 18                 a0 = u64 [sp + 0x18]
  4767: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4771: 95 17 4c 33              a0 = sp + 0x334c
  4775: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4779: 82 17 10                 a0 = u64 [sp + 0x10]
  4782: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4786: 95 18 6c 33              a1 = sp + 0x336c
  4790: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4794: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4798: 82 17 08                 a0 = u64 [sp + 0x8]
  4801: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4805: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  4810: 49 26 28 01              u64 [s1 + 296] = 0
  4814: 95 17 40 32              a0 = sp + 0x3240
  4818: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4822: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  4827: 95 17 80 33              a0 = sp + 0x3380
  4831: 95 18 00 32              a1 = sp + 0x3200
  4835: 50 10 74 9a 24           ra = 116, jump @751
      :                          @245 [@dyn 58]
  4840: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4844: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4848: 82 66 88 02              s1 = u64 [s1 + 0x288]
  4852: 33 07 04                 a0 = 0x4
  4855: 33 08                    a1 = 0
  4857: 33 09                    a2 = 0
  4859: 64 5a                    a3 = s0
  4861: 33 00 76                 ra = 0x76
  4864: 0a 64                    ecalli 100 // 'log'
  4866: 01                       fallthrough
      :                          @246 [@dyn 59]
  4867: 33 02 00 10              t0 = 0x1000
  4871: 82 1c 60                 a5 = u64 [sp + 0x60]
  4874: 82 17 70                 a0 = u64 [sp + 0x70]
  4877: c8 67 07                 a0 = a0 + s1
  4880: 53 27 00 f0 1c           jump @251 if a0 <u 4294963200
      :                          @247
  4885: c8 2c 08                 a1 = a5 + t0
  4888: 82 87                    a0 = u64 [a1]
  4890: c9 78 09                 a2 = a1 - a0
  4893: ab 59 0f                 jump @251 if a2 != s0
      :                          @248
  4896: c9 67 09                 a2 = a0 - s1
  4899: 01                       fallthrough
      :                          @249
  4900: 82 8a                    a3 = u64 [a1]
  4902: ab 7a ef                 jump @247 if a3 != a0
      :                          @250
  4905: 7b 89                    u64 [a1] = a2
  4907: 01                       fallthrough
      :                          @251
  4908: 95 16 f8 30              s1 = sp + 0x30f8
  4912: 82 67 58 02              a0 = u64 [s1 + 0x258]
  4916: 82 68                    a1 = u64 [s1]
  4918: ab 87 19                 jump @253 if a0 != a1
      :                          @252
  4921: 82 17 58                 a0 = u64 [sp + 0x58]
  4924: 7a 67 48 02              u32 [s1 + 0x248] = a0
  4928: 95 18 44 33              a1 = sp + 0x3344
  4932: 95 15 a0 20              s0 = sp + 0x20a0
  4936: 81 57 58                 a0 = i32 [s0 + 0x58]
  4939: 7a 87                    u32 [a1] = a0
  4941: 28 16                    jump @255
      :                          @253
  4943: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  4946: 95 18 48 33              a1 = sp + 0x3348
  4950: 95 15 a0 20              s0 = sp + 0x20a0
  4954: ab 97 09                 jump @255 if a0 != a2
      :                          @254
  4957: 81 57 58                 a0 = i32 [s0 + 0x58]
  4960: 7a 87                    u32 [a1] = a0
  4962: 01                       fallthrough
      :                          @255
  4963: 83 28 08                 i32 a1 = t0 + 0x8
  4966: 95 17 f0 20              a0 = sp + 0x20f0
  4970: 0a 13                    ecalli 19 // 'export'
  4972: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4976: 0a                       ecalli 0 // 'gas'
  4977: 7b 57 40                 u64 [s0 + 0x40] = a0
  4980: 33 07 40 0a 01           a0 = 0x10a40
  4985: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4989: 95 18 50 33              a1 = sp + 0x3350
  4993: 7b 68 48 01              u64 [s1 + 0x148] = a1
  4997: 82 17 68                 a0 = u64 [sp + 0x68]
  5000: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5004: 7b 68 58 01              u64 [s1 + 0x158] = a1
  5008: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5012: 95 18 70 33              a1 = sp + 0x3370
  5016: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5020: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5024: 95 18 e0 20              a1 = sp + 0x20e0
  5028: 7b 68 78 01              u64 [s1 + 0x178] = a1
  5032: 7b 67 80 01              u64 [s1 + 0x180] = a0
  5036: 95 17 40 33              a0 = sp + 0x3340
  5040: 7b 67 88 01              u64 [s1 + 0x188] = a0
  5044: 82 17 48                 a0 = u64 [sp + 0x48]
  5047: 7b 67 90 01              u64 [s1 + 0x190] = a0
  5051: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  5056: 49 26 28 01              u64 [s1 + 296] = 0
  5060: 95 18 40 32              a1 = sp + 0x3240
  5064: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5068: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  5073: 95 17 80 33              a0 = sp + 0x3380
  5077: 95 18 00 32              a1 = sp + 0x3200
  5081: 50 10 78 a4 23           ra = 120, jump @751
      :                          @256 [@dyn 60]
  5086: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5090: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5094: 95 17 f8 30              a0 = sp + 0x30f8
  5098: 82 76 88 02              s1 = u64 [a0 + 0x288]
  5102: 33 07 04                 a0 = 0x4
  5105: 33 08                    a1 = 0
  5107: 33 09                    a2 = 0
  5109: 64 5a                    a3 = s0
  5111: 33 00 7a                 ra = 0x7a
  5114: 0a 64                    ecalli 100 // 'log'
  5116: 01                       fallthrough
      :                          @257 [@dyn 61]
  5117: 33 02 00 10              t0 = 0x1000
  5121: 82 17 70                 a0 = u64 [sp + 0x70]
  5124: c8 67 07                 a0 = a0 + s1
  5127: 82 1c 60                 a5 = u64 [sp + 0x60]
  5130: 53 27 00 f0 6c fd        jump @236 if a0 <u 4294963200
      :                          @258
  5136: c8 2c 08                 a1 = a5 + t0
  5139: 82 87                    a0 = u64 [a1]
  5141: c9 78 09                 a2 = a1 - a0
  5144: ab 59 5e fd              jump @236 if a2 != s0
      :                          @259
  5148: c9 67 09                 a2 = a0 - s1
  5151: 01                       fallthrough
      :                          @260
  5152: 82 8a                    a3 = u64 [a1]
  5154: ab 7a ee                 jump @258 if a3 != a0
      :                          @261
  5157: 7b 89                    u64 [a1] = a2
  5159: 33 0b                    a4 = 0
  5161: 01                       fallthrough
      :                          @262
  5162: ab 7a e6                 jump @258 if a3 != a0
      :                          @263
  5165: 28 49 fd                 jump @236
      :                          @264
  5168: 95 17 44 33              a0 = sp + 0x3344
  5172: 95 18 48 33              a1 = sp + 0x3348
  5176: 95 19 40 33              a2 = sp + 0x3340
  5180: 7b 69 48 01              u64 [s1 + 0x148] = a2
  5184: 82 19 48                 a2 = u64 [sp + 0x48]
  5187: 7b 69 50 01              u64 [s1 + 0x150] = a2
  5191: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5195: 7b 69 60 01              u64 [s1 + 0x160] = a2
  5199: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5203: 7b 69 70 01              u64 [s1 + 0x170] = a2
  5207: 33 07 60 09 01           a0 = 0x10960
  5212: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5216: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5221: 49 26 28 01              u64 [s1 + 296] = 0
  5225: 95 18 40 32              a1 = sp + 0x3240
  5229: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5233: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5238: 95 17 80 33              a0 = sp + 0x3380
  5242: 95 18 00 32              a1 = sp + 0x3200
  5246: 50 10 7c ff 22           ra = 124, jump @751
      :                          @265 [@dyn 62]
  5251: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5255: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5259: 95 17 f8 30              a0 = sp + 0x30f8
  5263: 82 76 88 02              s1 = u64 [a0 + 0x288]
  5267: 33 07 02                 a0 = 0x2
  5270: 33 08                    a1 = 0
  5272: 33 09                    a2 = 0
  5274: 64 5a                    a3 = s0
  5276: 33 00 7e                 ra = 0x7e
  5279: 0a 64                    ecalli 100 // 'log'
  5281: 01                       fallthrough
      :                          @266 [@dyn 63]
  5282: 82 17 70                 a0 = u64 [sp + 0x70]
  5285: c8 67 07                 a0 = a0 + s1
  5288: 53 27 00 f0 21           jump @272 if a0 <u 4294963200
      :                          @267
  5293: 82 18 60                 a1 = u64 [sp + 0x60]
  5296: 95 87 00 10              a0 = a1 + 0x1000
  5300: 01                       fallthrough
      :                          @268
  5301: 82 78                    a1 = u64 [a0]
  5303: c9 87 09                 a2 = a0 - a1
  5306: ab 59 0f                 jump @272 if a2 != s0
      :                          @269
  5309: c9 68 09                 a2 = a1 - s1
  5312: 01                       fallthrough
      :                          @270
  5313: 82 7a                    a3 = u64 [a0]
  5315: ab 8a f2                 jump @268 if a3 != a1
      :                          @271
  5318: 7b 79                    u64 [a0] = a2
  5320: 01                       fallthrough
      :                          @272
  5321: 95 15 a0 20              s0 = sp + 0x20a0
  5325: 82 57 48                 a0 = u64 [s0 + 0x48]
  5328: 0a 1a                    ecalli 26 // 'expunge'
  5330: 95 16 f8 30              s1 = sp + 0x30f8
  5334: 7b 67 78 02              u64 [s1 + 0x278] = a0
  5338: 0a                       ecalli 0 // 'gas'
  5339: 7b 57 40                 u64 [s0 + 0x40] = a0
  5342: 95 17 e8 20              a0 = sp + 0x20e8
  5346: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5350: 95 17 70 33              a0 = sp + 0x3370
  5354: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5358: 95 17 e0 20              a0 = sp + 0x20e0
  5362: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5366: 82 17 68                 a0 = u64 [sp + 0x68]
  5369: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5373: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5377: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5381: 33 07 90 09 01           a0 = 0x10990
  5386: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5390: 95 17 40 32              a0 = sp + 0x3240
  5394: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5398: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5403: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5408: 49 26 28 01              u64 [s1 + 296] = 0
  5412: 95 17 80 33              a0 = sp + 0x3380
  5416: 95 18 00 32              a1 = sp + 0x3200
  5420: 50 20 80 00 51 22        ra = 128, jump @751
      :                          @273 [@dyn 64]
  5426: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5430: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5434: 82 66 88 02              s1 = u64 [s1 + 0x288]
  5438: 33 07 04                 a0 = 0x4
  5441: 33 08                    a1 = 0
  5443: 33 09                    a2 = 0
  5445: 64 5a                    a3 = s0
  5447: 33 00 82 00              ra = 0x82
  5451: 0a 64                    ecalli 100 // 'log'
  5453: 01                       fallthrough
      :                          @274 [@dyn 65]
  5454: 82 17 70                 a0 = u64 [sp + 0x70]
  5457: c8 67 07                 a0 = a0 + s1
  5460: 53 27 00 f0 2c           jump @280 if a0 <u 4294963200
      :                          @275
  5465: 82 18 60                 a1 = u64 [sp + 0x60]
  5468: 95 87 00 10              a0 = a1 + 0x1000
  5472: 01                       fallthrough
      :                          @276
  5473: 82 78                    a1 = u64 [a0]
  5475: c9 87 09                 a2 = a0 - a1
  5478: ab 59 1a                 jump @280 if a2 != s0
      :                          @277
  5481: c9 68 09                 a2 = a1 - s1
  5484: 01                       fallthrough
      :                          @278
  5485: 82 7a                    a3 = u64 [a0]
  5487: ab 8a f2                 jump @276 if a3 != a1
      :                          @279
  5490: 7b 79                    u64 [a0] = a2
  5492: 33 0b                    a4 = 0
  5494: 95 1a 40 33              a3 = sp + 0x3340
  5498: 33 08 0c                 a1 = 0xc
  5501: 28 28 f1                 jump @120
      :                          @280
  5504: 95 1a 40 33              a3 = sp + 0x3340
  5508: 33 08 0c                 a1 = 0xc
  5511: 28 1e f1                 jump @120
      :                          @281
  5514: 00                       trap
      :                          @282 [export #1: 'accumulate']
  5515: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5519: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5523: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5527: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5531: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  5535: 33 09 08                 a2 = 0x8
  5538: ac 98 0a 01              jump @315 if a1 <u a2
      :                          @283
  5542: 52 07 06                 jump @285 if a0 != 0
      :                          @284
  5545: 28 ff 1e                 jump @680
      :                          @285
  5548: 95 79 04                 a2 = a0 + 0x4
  5551: 52 09 06                 jump @287 if a2 != 0
      :                          @286
  5554: 28 f7 1e                 jump @681
      :                          @287
  5557: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5560: 7b 19 28                 u64 [sp + 0x28] = a2
  5563: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5566: 7b 19 18                 u64 [sp + 0x18] = a2
  5569: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5572: 7b 19 20                 u64 [sp + 0x20] = a2
  5575: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5578: 7b 19 30                 u64 [sp + 0x30] = a2
  5581: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5584: 95 75 08                 s0 = a0 + 0x8
  5587: 51 0a 45                 jump @297 if a3 == 0
      :                          @288
  5590: 7d 58                    a1 = i8 [s0]
  5592: 33 06 01                 s1 = 0x1
  5595: 59 08 40                 jump @298 if a1 >=s 0
      :                          @289
  5598: 84 89 ff 00              a2 = a1 & 0xff
  5602: 33 06 02                 s1 = 0x2
  5605: 53 29 c0 00 2d           jump @295 if a2 <u 192
      :                          @290
  5610: 33 06 03                 s1 = 0x3
  5613: 53 29 e0 00 25           jump @295 if a2 <u 224
      :                          @291
  5618: 33 06 04                 s1 = 0x4
  5621: 53 29 f0 00 1d           jump @295 if a2 <u 240
      :                          @292
  5626: 33 06 05                 s1 = 0x5
  5629: 53 29 f8 00 15           jump @295 if a2 <u 248
      :                          @293
  5634: 33 06 06                 s1 = 0x6
  5637: 53 29 fc 00 0d           jump @295 if a2 <u 252
      :                          @294
  5642: 88 98 fe 00              a1 = a2 <u 0xfe
  5646: 9a 86 08                 s1 = 0x8 - a1
  5649: 01                       fallthrough
      :                          @295
  5650: ae 6a 09                 jump @298 if a3 >=u s1
      :                          @296
  5653: 28 97 00                 jump @315
      :                          @297
  5656: 33 06                    s1 = 0
  5658: 01                       fallthrough
      :                          @298
  5659: 7b 16 38                 u64 [sp + 0x38] = s1
  5662: 64 57                    a0 = s0
  5664: 64 68                    a1 = s1
  5666: 64 a6                    s1 = a3
  5668: 50 20 84 00 17 2e        ra = 132, jump @1005
      :                          @299 [@dyn 66]
  5674: 82 1a 38                 a3 = u64 [sp + 0x38]
  5677: 51 07 7f                 jump @315 if a0 == 0
      :                          @300
  5680: e4 a6 07                 a0 = maxu(s1, a3)
  5683: c9 a7 07                 a0 = a0 - a3
  5686: 53 17 60 76              jump @315 if a0 <u 96
      :                          @301
  5690: c8 5a 08                 a1 = a3 + s0
  5693: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5696: 95 87 60                 a0 = a1 + 0x60
  5699: 7b 17 38                 u64 [sp + 0x38] = a0
  5702: 51 06 4f                 jump @313 if s1 == 0
      :                          @302
  5705: 7d 78                    a1 = i8 [a0]
  5707: 33 05 01                 s0 = 0x1
  5710: 59 08 37                 jump @309 if a1 >=s 0
      :                          @303
  5713: 84 89 ff 00              a2 = a1 & 0xff
  5717: 33 05 02                 s0 = 0x2
  5720: 53 29 c0 00 2d           jump @309 if a2 <u 192
      :                          @304
  5725: 33 05 03                 s0 = 0x3
  5728: 53 29 e0 00 25           jump @309 if a2 <u 224
      :                          @305
  5733: 33 05 04                 s0 = 0x4
  5736: 53 29 f0 00 1d           jump @309 if a2 <u 240
      :                          @306
  5741: 33 05 05                 s0 = 0x5
  5744: 53 29 f8 00 15           jump @309 if a2 <u 248
      :                          @307
  5749: 33 05 06                 s0 = 0x6
  5752: 53 29 fc 00 0d           jump @309 if a2 <u 252
      :                          @308
  5757: 88 98 fe 00              a1 = a2 <u 0xfe
  5761: 9a 85 08                 s0 = 0x8 - a1
  5764: 01                       fallthrough
      :                          @309
  5765: ae 56 06                 jump @311 if s1 >=u s0
      :                          @310
  5768: 28 22 1e                 jump @682
      :                          @311
  5771: 64 58                    a1 = s0
  5773: 50 20 86 00 ae 2d        ra = 134, jump @1005
      :                          @312 [@dyn 67]
  5779: 28 07                    jump @314
      :                          @313
  5781: 33 05                    s0 = 0
  5783: 33 07                    a0 = 0
  5785: 01                       fallthrough
      :                          @314
  5786: e4 56 08                 a1 = maxu(s1, s0)
  5789: c9 58 08                 a1 = a1 - s0
  5792: e4 78 08                 a1 = maxu(a1, a0)
  5795: c9 78 08                 a1 = a1 - a0
  5798: 33 09 21                 a2 = 0x21
  5801: ae 98 23                 jump @317 if a1 >=u a2
      :                          @315
  5804: 33 08                    a1 = 0
  5806: 33 05 00 00 01           s0 = 0x10000
  5811: 01                       fallthrough
      :                          @316
  5812: 64 57                    a0 = s0
  5814: 95 11 40 04              sp = sp + 0x440
  5818: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  5822: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  5826: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  5830: 95 11 f8 07              sp = sp + 0x7f8
  5834: 32 00                    ret
      :                          @317
  5836: 82 19 38                 a2 = u64 [sp + 0x38]
  5839: c8 95 05                 s0 = s0 + a2
  5842: c8 57 07                 a0 = a0 + s0
  5845: 7c 79 20                 a2 = u8 [a0 + 0x20]
  5848: 51 09 0a                 jump @319 if a2 == 0
      :                          @318
  5851: 33 06                    s1 = 0
  5853: 33 0a                    a3 = 0
  5855: 28 86 00                 jump @334
      :                          @319
  5858: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  5861: 95 75 21                 s0 = a0 + 0x21
  5864: 51 0a 57                 jump @331 if a3 == 0
      :                          @320
  5867: 7d 57                    a0 = i8 [s0]
  5869: 33 06 01                 s1 = 0x1
  5872: 59 07 37                 jump @327 if a0 >=s 0
      :                          @321
  5875: 84 77 ff 00              a0 = a0 & 0xff
  5879: 33 06 02                 s1 = 0x2
  5882: 53 27 c0 00 2d           jump @327 if a0 <u 192
      :                          @322
  5887: 33 06 03                 s1 = 0x3
  5890: 53 27 e0 00 25           jump @327 if a0 <u 224
      :                          @323
  5895: 33 06 04                 s1 = 0x4
  5898: 53 27 f0 00 1d           jump @327 if a0 <u 240
      :                          @324
  5903: 33 06 05                 s1 = 0x5
  5906: 53 27 f8 00 15           jump @327 if a0 <u 248
      :                          @325
  5911: 33 06 06                 s1 = 0x6
  5914: 53 27 fc 00 0d           jump @327 if a0 <u 252
      :                          @326
  5919: 88 77 fe 00              a0 = a0 <u 0xfe
  5923: 9a 76 08                 s1 = 0x8 - a0
  5926: 01                       fallthrough
      :                          @327
  5927: 7b 1a 38                 u64 [sp + 0x38] = a3
  5930: ae 6a 06                 jump @329 if a3 >=u s1
      :                          @328
  5933: 28 7f 1d                 jump @684
      :                          @329
  5936: 64 57                    a0 = s0
  5938: 64 68                    a1 = s1
  5940: 50 20 88 00 07 2d        ra = 136, jump @1005
      :                          @330 [@dyn 68]
  5946: 82 1a 38                 a3 = u64 [sp + 0x38]
  5949: 28 07                    jump @332
      :                          @331
  5951: 33 06                    s1 = 0
  5953: 33 07                    a0 = 0
  5955: 01                       fallthrough
      :                          @332
  5956: e4 6a 08                 a1 = maxu(a3, s1)
  5959: c9 68 08                 a1 = a1 - s1
  5962: e6 78 0a                 a3 = minu(a1, a0)
  5965: c8 56 06                 s1 = s1 + s0
  5968: 52 1a 24 15              jump @334 if a3 != 36
      :                          @333
  5972: 80 68 20                 a1 = u32 [s1 + 0x20]
  5975: 64 67                    a0 = s1
  5977: 0a 0e                    ecalli 14 // 'solicit'
  5979: 33 08                    a1 = 0
  5981: 33 05 00 00 01           s0 = 0x10000
  5986: 28 52 ff                 jump @316
      :                          @334
  5989: 82 17 18                 a0 = u64 [sp + 0x18]
  5992: 97 77 08                 a0 = a0 << 0x8
  5995: 82 18 28                 a1 = u64 [sp + 0x28]
  5998: d4 87 07                 a0 = a0 | a1
  6001: 82 18 20                 a1 = u64 [sp + 0x20]
  6004: 97 88 10                 a1 = a1 << 0x10
  6007: 46 11 47                 u8 [sp + 71] = 0
  6010: 80 69                    a2 = u32 [s1]
  6012: 82 1b 30                 a4 = u64 [sp + 0x30]
  6015: 97 bb 18                 a4 = a4 << 0x18
  6018: d4 b8 08                 a1 = a1 | a4
  6021: d4 78 05                 s0 = a1 | a0
  6024: 7b 19 48                 u64 [sp + 0x48] = a2
  6027: 95 17 47                 a0 = sp + 0x47
  6030: 33 08 01                 a1 = 0x1
  6033: 7b 16 18                 u64 [sp + 0x18] = s1
  6036: 64 69                    a2 = s1
  6038: 7b 1a 20                 u64 [sp + 0x20] = a3
  6041: 0a 03                    ecalli 3 // 'write'
  6043: 46 11 52 6a              u8 [sp + 82] = 0x6a
  6047: 46 11 53 61              u8 [sp + 83] = 0x61
  6051: 46 11 54 6d              u8 [sp + 84] = 0x6d
  6055: 46 11 55 44              u8 [sp + 85] = 0x44
  6059: 46 11 56 4f              u8 [sp + 86] = 0x4f
  6063: 46 11 57 54              u8 [sp + 87] = 0x54
  6067: 46 11 58 6a              u8 [sp + 88] = 0x6a
  6071: 46 11 59 0d              u8 [sp + 89] = 0xd
  6075: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  6079: 46 11 5b 19              u8 [sp + 91] = 0x19
  6083: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  6088: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  6093: 46 11 5e 50              u8 [sp + 94] = 0x50
  6097: 46 11 5f 57              u8 [sp + 95] = 0x57
  6101: 46 11 60 13              u8 [sp + 96] = 0x13
  6105: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  6110: 46 11 62 65              u8 [sp + 98] = 0x65
  6114: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  6119: 46 11 64 31              u8 [sp + 100] = 0x31
  6123: 46 11 65 03              u8 [sp + 101] = 0x3
  6127: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  6132: 46 11 67 73              u8 [sp + 103] = 0x73
  6136: 33 0b f1 00              a4 = 0xf1
  6140: 78 1b 68                 u8 [sp + 0x68] = a4
  6143: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6148: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6153: 46 11 6b 64              u8 [sp + 107] = 0x64
  6157: 46 11 6c 56              u8 [sp + 108] = 0x56
  6161: 46 11 6d 32              u8 [sp + 109] = 0x32
  6165: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6170: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6175: 46 11 70 50              u8 [sp + 112] = 0x50
  6179: 33 0c 3c                 a5 = 0x3c
  6182: 78 1c 71                 u8 [sp + 0x71] = a5
  6185: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6189: 46 11 73 0c              u8 [sp + 115] = 0xc
  6193: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6197: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6201: 46 11 76 19              u8 [sp + 118] = 0x19
  6205: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6210: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6215: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6220: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6225: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6229: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6234: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6239: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6244: 46 11 7f 47              u8 [sp + 127] = 0x47
  6248: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6254: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6259: 78 1c 82 00              u8 [sp + 0x82] = a5
  6263: 78 1b 83 00              u8 [sp + 0x83] = a4
  6267: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6273: 95 16 ff 07              s1 = sp + 0x7ff
  6277: 95 66 99 03              s1 = s1 + 0x399
  6281: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6286: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6291: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6297: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6303: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6309: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6315: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6321: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6327: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6332: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6337: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6342: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6348: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6354: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6359: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6364: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6370: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6376: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6381: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6386: 49 11 38 ff ef           u64 [sp + 56] = 0xffffffffffffefff
  6391: 95 17 98 00              a0 = sp + 0x98
  6395: 33 09 00 01              a2 = 0x100
  6399: 33 08                    a1 = 0
  6401: 50 20 8a 00 a3 21        ra = 138, jump @819
      :                          @335 [@dyn 69]
  6407: 82 17 48                 a0 = u64 [sp + 0x48]
  6410: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6413: 33 09 1a                 a2 = 0x1a
  6416: 7b 19 30                 u64 [sp + 0x30] = a2
  6419: 54 17 09 07              jump @337 if a0 <=u 9
      :                          @336
  6423: 28 10 19                 jump @645
      :                          @337
  6426: 97 77 02                 a0 = a0 << 0x2
  6429: 33 08 00 00 01           a1 = 0x10000
  6434: c8 87 07                 a0 = a0 + a1
  6437: 81 77                    a0 = i32 [a0]
  6439: c8 87 07                 a0 = a0 + a1
  6442: 7b 15 28                 u64 [sp + 0x28] = s0
  6445: 32 07                    jump [a0]
      :                          @338 [@dyn 70]
  6447: 95 18 52                 a1 = sp + 0x52
  6450: 33 09 03                 a2 = 0x3
  6453: 95 1a 98 00              a3 = sp + 0x98
  6457: 33 0c 00 01              a5 = 0x100
  6461: 64 57                    a0 = s0
  6463: 33 0b                    a4 = 0
  6465: 0a 02                    ecalli 2 // 'read'
  6467: 7b 67 70                 u64 [s1 + 0x70] = a0
  6470: 95 77 01                 a0 = a0 + 0x1
  6473: 88 77 01                 a0 = a0 <u 0x1
  6476: 97 77 01                 a0 = a0 << 0x1
  6479: 7b 17 10                 u64 [sp + 0x10] = a0
  6482: 95 17 48                 a0 = sp + 0x48
  6485: 7b 67 18                 u64 [s1 + 0x18] = a0
  6488: 82 18 30                 a1 = u64 [sp + 0x30]
  6491: 7b 68 20                 u64 [s1 + 0x20] = a1
  6494: 95 17 ff 07              a0 = sp + 0x7ff
  6498: 95 77 09 04              a0 = a0 + 0x409
  6502: 7b 67 28                 u64 [s1 + 0x28] = a0
  6505: 7b 68 30                 u64 [s1 + 0x30] = a1
  6508: 33 07 90 0a 01           a0 = 0x10a90
  6513: 7b 17 98 01              u64 [sp + 0x198] = a0
  6517: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6522: 49 21 b8 01              u64 [sp + 440] = 0
  6526: 95 17 ff 07              a0 = sp + 0x7ff
  6530: 95 77 b1 03              a0 = a0 + 0x3b1
  6534: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6538: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6543: 95 17 ff 07              a0 = sp + 0x7ff
  6547: 95 77 e1 03              a0 = a0 + 0x3e1
  6551: 95 18 98 01              a1 = sp + 0x198
  6555: 50 20 8e 00 e2 1d        ra = 142, jump @751
      :                          @339 [@dyn 71]
  6561: 82 65 50                 s0 = u64 [s1 + 0x50]
  6564: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6567: 95 17 ff 07              a0 = sp + 0x7ff
  6571: 95 77 99 03              a0 = a0 + 0x399
  6575: 82 76 48                 s1 = u64 [a0 + 0x48]
  6578: 82 17 10                 a0 = u64 [sp + 0x10]
  6581: 33 08                    a1 = 0
  6583: 33 09                    a2 = 0
  6585: 64 5a                    a3 = s0
  6587: 33 00 90 00              ra = 0x90
  6591: 0a 64                    ecalli 100 // 'log'
  6593: 01                       fallthrough
      :                          @340 [@dyn 72]
  6594: 82 17 38                 a0 = u64 [sp + 0x38]
  6597: c8 67 07                 a0 = a0 + s1
  6600: 53 27 00 f0 23           jump @346 if a0 <u 4294963200
      :                          @341
  6605: 33 07 40 00 03           a0 = 0x30040
  6610: 95 77 00 10              a0 = a0 + 0x1000
  6614: 01                       fallthrough
      :                          @342
  6615: 82 78                    a1 = u64 [a0]
  6617: c9 87 09                 a2 = a0 - a1
  6620: ab 59 0f                 jump @346 if a2 != s0
      :                          @343
  6623: c9 68 09                 a2 = a1 - s1
  6626: 01                       fallthrough
      :                          @344
  6627: 82 7a                    a3 = u64 [a0]
  6629: ab 8a f2                 jump @342 if a3 != a1
      :                          @345
  6632: 7b 79                    u64 [a0] = a2
  6634: 01                       fallthrough
      :                          @346
  6635: 95 16 ff 07              s1 = sp + 0x7ff
  6639: 95 66 99 03              s1 = s1 + 0x399
  6643: 82 67 70                 a0 = u64 [s1 + 0x70]
  6646: 33 08 01                 a1 = 0x1
  6649: 50 20 92 00 e0 2a        ra = 146, jump @1029
      :                          @347 [@dyn 73]
  6655: 95 17 52                 a0 = sp + 0x52
  6658: 33 08 03                 a1 = 0x3
  6661: 95 19 55                 a2 = sp + 0x55
  6664: 33 0a 03                 a3 = 0x3
  6667: 0a 03                    ecalli 3 // 'write'
  6669: 95 18 48                 a1 = sp + 0x48
  6672: 7b 68 18                 u64 [s1 + 0x18] = a1
  6675: 95 18 ff 07              a1 = sp + 0x7ff
  6679: 95 88 11 04              a1 = a1 + 0x411
  6683: 7b 68 28                 u64 [s1 + 0x28] = a1
  6686: 33 08 c0 0a 01           a1 = 0x10ac0
  6691: 7b 18 98 01              u64 [sp + 0x198] = a1
  6695: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6700: 49 21 b8 01              u64 [sp + 440] = 0
  6704: 95 18 ff 07              a1 = sp + 0x7ff
  6708: 95 88 b1 03              a1 = a1 + 0x3b1
  6712: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  6716: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6721: 7b 67 78                 u64 [s1 + 0x78] = a0
  6724: 95 77 01                 a0 = a0 + 0x1
  6727: 88 77 01                 a0 = a0 <u 0x1
  6730: 97 77 01                 a0 = a0 << 0x1
  6733: 7b 17 10                 u64 [sp + 0x10] = a0
  6736: 82 17 30                 a0 = u64 [sp + 0x30]
  6739: 7b 67 20                 u64 [s1 + 0x20] = a0
  6742: 7b 67 30                 u64 [s1 + 0x30] = a0
  6745: 95 17 ff 07              a0 = sp + 0x7ff
  6749: 95 77 e1 03              a0 = a0 + 0x3e1
  6753: 95 18 98 01              a1 = sp + 0x198
  6757: 50 20 94 00 18 1d        ra = 148, jump @751
      :                          @348 [@dyn 74]
  6763: 82 65 50                 s0 = u64 [s1 + 0x50]
  6766: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6769: 82 66 48                 s1 = u64 [s1 + 0x48]
  6772: 82 17 10                 a0 = u64 [sp + 0x10]
  6775: 33 08                    a1 = 0
  6777: 33 09                    a2 = 0
  6779: 64 5a                    a3 = s0
  6781: 33 00 96 00              ra = 0x96
  6785: 0a 64                    ecalli 100 // 'log'
  6787: 01                       fallthrough
      :                          @349 [@dyn 75]
  6788: 82 17 38                 a0 = u64 [sp + 0x38]
  6791: c8 67 07                 a0 = a0 + s1
  6794: 53 27 00 f0 23           jump @355 if a0 <u 4294963200
      :                          @350
  6799: 33 07 40 00 03           a0 = 0x30040
  6804: 95 77 00 10              a0 = a0 + 0x1000
  6808: 01                       fallthrough
      :                          @351
  6809: 82 78                    a1 = u64 [a0]
  6811: c9 87 09                 a2 = a0 - a1
  6814: ab 59 0f                 jump @355 if a2 != s0
      :                          @352
  6817: c9 68 09                 a2 = a1 - s1
  6820: 01                       fallthrough
      :                          @353
  6821: 82 7a                    a3 = u64 [a0]
  6823: ab 8a f2                 jump @351 if a3 != a1
      :                          @354
  6826: 7b 79                    u64 [a0] = a2
  6828: 01                       fallthrough
      :                          @355
  6829: 95 16 ff 07              s1 = sp + 0x7ff
  6833: 95 66 99 03              s1 = s1 + 0x399
  6837: 82 67 78                 a0 = u64 [s1 + 0x78]
  6840: 33 08 02                 a1 = 0x2
  6843: 33 05 02                 s0 = 0x2
  6846: 50 20 98 00 1b 2a        ra = 152, jump @1029
      :                          @356 [@dyn 76]
  6852: 95 18 52                 a1 = sp + 0x52
  6855: 33 09 03                 a2 = 0x3
  6858: 95 1a 98 00              a3 = sp + 0x98
  6862: 33 0c 00 01              a5 = 0x100
  6866: 82 17 28                 a0 = u64 [sp + 0x28]
  6869: 33 0b                    a4 = 0
  6871: 0a 02                    ecalli 2 // 'read'
  6873: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6877: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  6880: 88 77 01                 a0 = a0 <u 0x1
  6883: 97 77 01                 a0 = a0 << 0x1
  6886: 7b 17 10                 u64 [sp + 0x10] = a0
  6889: 95 17 48                 a0 = sp + 0x48
  6892: 7b 67 18                 u64 [s1 + 0x18] = a0
  6895: 82 18 30                 a1 = u64 [sp + 0x30]
  6898: 7b 68 20                 u64 [s1 + 0x20] = a1
  6901: 95 17 ff 07              a0 = sp + 0x7ff
  6905: 95 77 19 04              a0 = a0 + 0x419
  6909: 7b 67 28                 u64 [s1 + 0x28] = a0
  6912: 7b 68 30                 u64 [s1 + 0x30] = a1
  6915: 33 07 f0 0a 01           a0 = 0x10af0
  6920: 7b 17 98 01              u64 [sp + 0x198] = a0
  6924: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6929: 49 21 b8 01              u64 [sp + 440] = 0
  6933: 95 17 ff 07              a0 = sp + 0x7ff
  6937: 95 77 b1 03              a0 = a0 + 0x3b1
  6941: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6945: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6949: 95 17 ff 07              a0 = sp + 0x7ff
  6953: 95 77 e1 03              a0 = a0 + 0x3e1
  6957: 95 18 98 01              a1 = sp + 0x198
  6961: 50 20 9a 00 4c 1c        ra = 154, jump @751
      :                          @357 [@dyn 77]
  6967: 82 65 50                 s0 = u64 [s1 + 0x50]
  6970: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6973: 82 66 48                 s1 = u64 [s1 + 0x48]
  6976: 82 17 10                 a0 = u64 [sp + 0x10]
  6979: 33 08                    a1 = 0
  6981: 33 09                    a2 = 0
  6983: 64 5a                    a3 = s0
  6985: 33 00 9c 00              ra = 0x9c
  6989: 0a 64                    ecalli 100 // 'log'
  6991: 01                       fallthrough
      :                          @358 [@dyn 78]
  6992: 82 17 38                 a0 = u64 [sp + 0x38]
  6995: c8 67 07                 a0 = a0 + s1
  6998: 53 27 00 f0 23           jump @364 if a0 <u 4294963200
      :                          @359
  7003: 33 07 40 00 03           a0 = 0x30040
  7008: 95 77 00 10              a0 = a0 + 0x1000
  7012: 01                       fallthrough
      :                          @360
  7013: 82 78                    a1 = u64 [a0]
  7015: c9 87 09                 a2 = a0 - a1
  7018: ab 59 0f                 jump @364 if a2 != s0
      :                          @361
  7021: c9 68 09                 a2 = a1 - s1
  7024: 01                       fallthrough
      :                          @362
  7025: 82 7a                    a3 = u64 [a0]
  7027: ab 8a f2                 jump @360 if a3 != a1
      :                          @363
  7030: 7b 79                    u64 [a0] = a2
  7032: 01                       fallthrough
      :                          @364
  7033: 95 16 ff 07              s1 = sp + 0x7ff
  7037: 95 66 99 03              s1 = s1 + 0x399
  7041: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7045: 33 08 05                 a1 = 0x5
  7048: 50 20 9e 00 51 29        ra = 158, jump @1029
      :                          @365 [@dyn 79]
  7054: 95 17 52                 a0 = sp + 0x52
  7057: 33 08                    a1 = 0
  7059: 0a 0f                    ecalli 15 // 'forget'
  7061: 95 18 48                 a1 = sp + 0x48
  7064: 7b 68 18                 u64 [s1 + 0x18] = a1
  7067: 33 08 20 0b 01           a1 = 0x10b20
  7072: 7b 18 98 01              u64 [sp + 0x198] = a1
  7076: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7081: 49 21 b8 01              u64 [sp + 440] = 0
  7085: 95 18 ff 07              a1 = sp + 0x7ff
  7089: 95 88 b1 03              a1 = a1 + 0x3b1
  7093: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  7097: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7102: 7b 67                    u64 [s1] = a0
  7104: 95 77 09                 a0 = a0 + 0x9
  7107: 88 77 01                 a0 = a0 <u 0x1
  7110: 97 77 01                 a0 = a0 << 0x1
  7113: 7b 17 10                 u64 [sp + 0x10] = a0
  7116: 82 17 30                 a0 = u64 [sp + 0x30]
  7119: 7b 67 20                 u64 [s1 + 0x20] = a0
  7122: 7b 66 28                 u64 [s1 + 0x28] = s1
  7125: 7b 67 30                 u64 [s1 + 0x30] = a0
  7128: 95 17 ff 07              a0 = sp + 0x7ff
  7132: 95 77 e1 03              a0 = a0 + 0x3e1
  7136: 95 18 98 01              a1 = sp + 0x198
  7140: 50 20 a0 00 99 1b        ra = 160, jump @751
      :                          @366 [@dyn 80]
  7146: 82 65 50                 s0 = u64 [s1 + 0x50]
  7149: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7152: 82 66 48                 s1 = u64 [s1 + 0x48]
  7155: 82 17 10                 a0 = u64 [sp + 0x10]
  7158: 33 08                    a1 = 0
  7160: 33 09                    a2 = 0
  7162: 64 5a                    a3 = s0
  7164: 33 00 a2 00              ra = 0xa2
  7168: 0a 64                    ecalli 100 // 'log'
  7170: 01                       fallthrough
      :                          @367 [@dyn 81]
  7171: 82 17 38                 a0 = u64 [sp + 0x38]
  7174: c8 67 07                 a0 = a0 + s1
  7177: 53 27 00 f0 88 0a        jump @502 if a0 <u 4294963200
      :                          @368
  7183: 33 07 40 00 03           a0 = 0x30040
  7188: 95 77 00 10              a0 = a0 + 0x1000
  7192: 01                       fallthrough
      :                          @369
  7193: 82 78                    a1 = u64 [a0]
  7195: c9 87 09                 a2 = a0 - a1
  7198: ab 59 73 0a              jump @502 if a2 != s0
      :                          @370
  7202: c9 68 09                 a2 = a1 - s1
  7205: 01                       fallthrough
      :                          @371
  7206: 82 7a                    a3 = u64 [a0]
  7208: ab 8a f1                 jump @369 if a3 != a1
      :                          @372
  7211: 7b 79                    u64 [a0] = a2
  7213: 33 0b                    a4 = 0
  7215: 01                       fallthrough
      :                          @373
  7216: ab 8a e9                 jump @369 if a3 != a1
      :                          @374
  7219: 28 5e 0a                 jump @502
      :                          @375 [@dyn 82]
  7222: 95 18 52                 a1 = sp + 0x52
  7225: 33 09 03                 a2 = 0x3
  7228: 95 1a 98 00              a3 = sp + 0x98
  7232: 33 0c 00 01              a5 = 0x100
  7236: 64 57                    a0 = s0
  7238: 33 0b                    a4 = 0
  7240: 0a 02                    ecalli 2 // 'read'
  7242: 7b 67 78                 u64 [s1 + 0x78] = a0
  7245: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7248: 88 77 01                 a0 = a0 <u 0x1
  7251: 97 77 01                 a0 = a0 << 0x1
  7254: 7b 17 10                 u64 [sp + 0x10] = a0
  7257: 95 17 48                 a0 = sp + 0x48
  7260: 7b 67 18                 u64 [s1 + 0x18] = a0
  7263: 82 18 30                 a1 = u64 [sp + 0x30]
  7266: 7b 68 20                 u64 [s1 + 0x20] = a1
  7269: 95 17 ff 07              a0 = sp + 0x7ff
  7273: 95 77 11 04              a0 = a0 + 0x411
  7277: 7b 67 28                 u64 [s1 + 0x28] = a0
  7280: 7b 68 30                 u64 [s1 + 0x30] = a1
  7283: 33 07 50 0b 01           a0 = 0x10b50
  7288: 7b 17 98 01              u64 [sp + 0x198] = a0
  7292: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7297: 49 21 b8 01              u64 [sp + 440] = 0
  7301: 95 17 ff 07              a0 = sp + 0x7ff
  7305: 95 77 b1 03              a0 = a0 + 0x3b1
  7309: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7313: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7318: 95 17 ff 07              a0 = sp + 0x7ff
  7322: 95 77 e1 03              a0 = a0 + 0x3e1
  7326: 95 18 98 01              a1 = sp + 0x198
  7330: 50 20 a6 00 db 1a        ra = 166, jump @751
      :                          @376 [@dyn 83]
  7336: 82 65 50                 s0 = u64 [s1 + 0x50]
  7339: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7342: 95 17 ff 07              a0 = sp + 0x7ff
  7346: 95 77 99 03              a0 = a0 + 0x399
  7350: 82 76 48                 s1 = u64 [a0 + 0x48]
  7353: 82 17 10                 a0 = u64 [sp + 0x10]
  7356: 33 08                    a1 = 0
  7358: 33 09                    a2 = 0
  7360: 64 5a                    a3 = s0
  7362: 33 00 a8 00              ra = 0xa8
  7366: 0a 64                    ecalli 100 // 'log'
  7368: 01                       fallthrough
      :                          @377 [@dyn 84]
  7369: 82 17 38                 a0 = u64 [sp + 0x38]
  7372: c8 67 07                 a0 = a0 + s1
  7375: 53 27 00 f0 23           jump @383 if a0 <u 4294963200
      :                          @378
  7380: 33 07 40 00 03           a0 = 0x30040
  7385: 95 77 00 10              a0 = a0 + 0x1000
  7389: 01                       fallthrough
      :                          @379
  7390: 82 78                    a1 = u64 [a0]
  7392: c9 87 09                 a2 = a0 - a1
  7395: ab 59 0f                 jump @383 if a2 != s0
      :                          @380
  7398: c9 68 09                 a2 = a1 - s1
  7401: 01                       fallthrough
      :                          @381
  7402: 82 7a                    a3 = u64 [a0]
  7404: ab 8a f2                 jump @379 if a3 != a1
      :                          @382
  7407: 7b 79                    u64 [a0] = a2
  7409: 01                       fallthrough
      :                          @383
  7410: 95 16 ff 07              s1 = sp + 0x7ff
  7414: 95 66 99 03              s1 = s1 + 0x399
  7418: 82 67 78                 a0 = u64 [s1 + 0x78]
  7421: 33 08 01                 a1 = 0x1
  7424: 50 20 aa 00 d9 27        ra = 170, jump @1029
      :                          @384 [@dyn 85]
  7430: 95 17 52                 a0 = sp + 0x52
  7433: 33 08 03                 a1 = 0x3
  7436: 33 09                    a2 = 0
  7438: 33 0a                    a3 = 0
  7440: 0a 03                    ecalli 3 // 'write'
  7442: 95 18 48                 a1 = sp + 0x48
  7445: 7b 68 18                 u64 [s1 + 0x18] = a1
  7448: 95 18 ff 07              a1 = sp + 0x7ff
  7452: 95 88 19 04              a1 = a1 + 0x419
  7456: 7b 68 28                 u64 [s1 + 0x28] = a1
  7459: 33 08 80 0b 01           a1 = 0x10b80
  7464: 7b 18 98 01              u64 [sp + 0x198] = a1
  7468: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7473: 49 21 b8 01              u64 [sp + 440] = 0
  7477: 95 18 ff 07              a1 = sp + 0x7ff
  7481: 95 88 b1 03              a1 = a1 + 0x3b1
  7485: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  7489: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7494: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7498: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7501: 88 77 01                 a0 = a0 <u 0x1
  7504: 97 77 01                 a0 = a0 << 0x1
  7507: 7b 17 10                 u64 [sp + 0x10] = a0
  7510: 82 17 30                 a0 = u64 [sp + 0x30]
  7513: 7b 67 20                 u64 [s1 + 0x20] = a0
  7516: 7b 67 30                 u64 [s1 + 0x30] = a0
  7519: 95 17 ff 07              a0 = sp + 0x7ff
  7523: 95 77 e1 03              a0 = a0 + 0x3e1
  7527: 95 18 98 01              a1 = sp + 0x198
  7531: 50 20 ac 00 12 1a        ra = 172, jump @751
      :                          @385 [@dyn 86]
  7537: 82 65 50                 s0 = u64 [s1 + 0x50]
  7540: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7543: 82 66 48                 s1 = u64 [s1 + 0x48]
  7546: 82 17 10                 a0 = u64 [sp + 0x10]
  7549: 33 08                    a1 = 0
  7551: 33 09                    a2 = 0
  7553: 64 5a                    a3 = s0
  7555: 33 00 ae 00              ra = 0xae
  7559: 0a 64                    ecalli 100 // 'log'
  7561: 01                       fallthrough
      :                          @386 [@dyn 87]
  7562: 82 17 38                 a0 = u64 [sp + 0x38]
  7565: c8 67 07                 a0 = a0 + s1
  7568: 53 27 00 f0 23           jump @392 if a0 <u 4294963200
      :                          @387
  7573: 33 07 40 00 03           a0 = 0x30040
  7578: 95 77 00 10              a0 = a0 + 0x1000
  7582: 01                       fallthrough
      :                          @388
  7583: 82 78                    a1 = u64 [a0]
  7585: c9 87 09                 a2 = a0 - a1
  7588: ab 59 0f                 jump @392 if a2 != s0
      :                          @389
  7591: c9 68 09                 a2 = a1 - s1
  7594: 01                       fallthrough
      :                          @390
  7595: 82 7a                    a3 = u64 [a0]
  7597: ab 8a f2                 jump @388 if a3 != a1
      :                          @391
  7600: 7b 79                    u64 [a0] = a2
  7602: 01                       fallthrough
      :                          @392
  7603: 95 16 ff 07              s1 = sp + 0x7ff
  7607: 95 66 99 03              s1 = s1 + 0x399
  7611: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7615: 33 08 02                 a1 = 0x2
  7618: 33 05 02                 s0 = 0x2
  7621: 50 20 b0 00 14 27        ra = 176, jump @1029
      :                          @393 [@dyn 88]
  7627: 95 18 52                 a1 = sp + 0x52
  7630: 33 09 03                 a2 = 0x3
  7633: 95 1a 98 00              a3 = sp + 0x98
  7637: 33 0c 00 01              a5 = 0x100
  7641: 82 17 28                 a0 = u64 [sp + 0x28]
  7644: 33 0b                    a4 = 0
  7646: 0a 02                    ecalli 2 // 'read'
  7648: 95 18 48                 a1 = sp + 0x48
  7651: 7b 68 18                 u64 [s1 + 0x18] = a1
  7654: 33 08 b0 0b 01           a1 = 0x10bb0
  7659: 7b 18 98 01              u64 [sp + 0x198] = a1
  7663: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7668: 49 21 b8 01              u64 [sp + 440] = 0
  7672: 95 18 ff 07              a1 = sp + 0x7ff
  7676: 95 88 b1 03              a1 = a1 + 0x3b1
  7680: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  7684: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7688: 7b 67                    u64 [s1] = a0
  7690: 95 77 01                 a0 = a0 + 0x1
  7693: 88 77 01                 a0 = a0 <u 0x1
  7696: 97 77 01                 a0 = a0 << 0x1
  7699: 7b 17 10                 u64 [sp + 0x10] = a0
  7702: 82 17 30                 a0 = u64 [sp + 0x30]
  7705: 7b 67 20                 u64 [s1 + 0x20] = a0
  7708: 7b 66 28                 u64 [s1 + 0x28] = s1
  7711: 7b 67 30                 u64 [s1 + 0x30] = a0
  7714: 95 17 ff 07              a0 = sp + 0x7ff
  7718: 95 77 e1 03              a0 = a0 + 0x3e1
  7722: 95 18 98 01              a1 = sp + 0x198
  7726: 50 20 b2 00 4f 19        ra = 178, jump @751
      :                          @394 [@dyn 89]
  7732: 82 65 50                 s0 = u64 [s1 + 0x50]
  7735: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7738: 82 66 48                 s1 = u64 [s1 + 0x48]
  7741: 82 17 10                 a0 = u64 [sp + 0x10]
  7744: 33 08                    a1 = 0
  7746: 33 09                    a2 = 0
  7748: 64 5a                    a3 = s0
  7750: 33 00 b4 00              ra = 0xb4
  7754: 0a 64                    ecalli 100 // 'log'
  7756: 01                       fallthrough
      :                          @395 [@dyn 90]
  7757: 82 17 38                 a0 = u64 [sp + 0x38]
  7760: c8 67 07                 a0 = a0 + s1
  7763: 53 27 00 f0 4c 02        jump @429 if a0 <u 4294963200
      :                          @396
  7769: 33 07 40 00 03           a0 = 0x30040
  7774: 95 77 00 10              a0 = a0 + 0x1000
  7778: 01                       fallthrough
      :                          @397
  7779: 82 78                    a1 = u64 [a0]
  7781: c9 87 09                 a2 = a0 - a1
  7784: ab 59 37 02              jump @429 if a2 != s0
      :                          @398
  7788: c9 68 09                 a2 = a1 - s1
  7791: 01                       fallthrough
      :                          @399
  7792: 82 7a                    a3 = u64 [a0]
  7794: ab 8a f1                 jump @397 if a3 != a1
      :                          @400
  7797: 7b 79                    u64 [a0] = a2
  7799: 33 0b                    a4 = 0
  7801: 01                       fallthrough
      :                          @401
  7802: ab 8a e9                 jump @397 if a3 != a1
      :                          @402
  7805: 28 22 02                 jump @429
      :                          @403 [@dyn 91]
  7808: 33 05 03                 s0 = 0x3
  7811: 95 17 58                 a0 = sp + 0x58
  7814: 33 08 03                 a1 = 0x3
  7817: 0a 0e                    ecalli 14 // 'solicit'
  7819: 7b 67 78                 u64 [s1 + 0x78] = a0
  7822: 88 77 01                 a0 = a0 <u 0x1
  7825: 97 77 01                 a0 = a0 << 0x1
  7828: 7b 17 10                 u64 [sp + 0x10] = a0
  7831: 95 17 48                 a0 = sp + 0x48
  7834: 7b 67 18                 u64 [s1 + 0x18] = a0
  7837: 82 18 30                 a1 = u64 [sp + 0x30]
  7840: 7b 68 20                 u64 [s1 + 0x20] = a1
  7843: 95 17 ff 07              a0 = sp + 0x7ff
  7847: 95 77 11 04              a0 = a0 + 0x411
  7851: 7b 67 28                 u64 [s1 + 0x28] = a0
  7854: 7b 68 30                 u64 [s1 + 0x30] = a1
  7857: 33 07 e0 0b 01           a0 = 0x10be0
  7862: 7b 17 98 01              u64 [sp + 0x198] = a0
  7866: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  7870: 49 21 b8 01              u64 [sp + 440] = 0
  7874: 95 17 ff 07              a0 = sp + 0x7ff
  7878: 95 77 b1 03              a0 = a0 + 0x3b1
  7882: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7886: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7891: 95 17 ff 07              a0 = sp + 0x7ff
  7895: 95 77 e1 03              a0 = a0 + 0x3e1
  7899: 95 18 98 01              a1 = sp + 0x198
  7903: 50 20 b8 00 9e 18        ra = 184, jump @751
      :                          @404 [@dyn 92]
  7909: 95 17 ff 07              a0 = sp + 0x7ff
  7913: 95 77 99 03              a0 = a0 + 0x399
  7917: 82 76 50                 s1 = u64 [a0 + 0x50]
  7920: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7923: 82 75 48                 s0 = u64 [a0 + 0x48]
  7926: 82 17 10                 a0 = u64 [sp + 0x10]
  7929: 33 08                    a1 = 0
  7931: 33 09                    a2 = 0
  7933: 64 6a                    a3 = s1
  7935: 33 00 ba 00              ra = 0xba
  7939: 0a 64                    ecalli 100 // 'log'
  7941: 01                       fallthrough
      :                          @405 [@dyn 93]
  7942: 82 17 38                 a0 = u64 [sp + 0x38]
  7945: c8 57 07                 a0 = a0 + s0
  7948: 53 27 00 f0 23           jump @411 if a0 <u 4294963200
      :                          @406
  7953: 33 07 40 00 03           a0 = 0x30040
  7958: 95 77 00 10              a0 = a0 + 0x1000
  7962: 01                       fallthrough
      :                          @407
  7963: 82 78                    a1 = u64 [a0]
  7965: c9 87 09                 a2 = a0 - a1
  7968: ab 69 0f                 jump @411 if a2 != s1
      :                          @408
  7971: c9 58 09                 a2 = a1 - s0
  7974: 01                       fallthrough
      :                          @409
  7975: 82 7a                    a3 = u64 [a0]
  7977: ab 8a f2                 jump @407 if a3 != a1
      :                          @410
  7980: 7b 79                    u64 [a0] = a2
  7982: 01                       fallthrough
      :                          @411
  7983: 95 16 ff 07              s1 = sp + 0x7ff
  7987: 95 66 99 03              s1 = s1 + 0x399
  7991: 82 67 78                 a0 = u64 [s1 + 0x78]
  7994: 33 08 01                 a1 = 0x1
  7997: 50 20 bc 00 9c 25        ra = 188, jump @1029
      :                          @412 [@dyn 94]
  8003: 95 17 58                 a0 = sp + 0x58
  8006: 33 08 03                 a1 = 0x3
  8009: 0a 0d                    ecalli 13 // 'query'
  8011: 95 18 48                 a1 = sp + 0x48
  8014: 7b 68 18                 u64 [s1 + 0x18] = a1
  8017: 95 18 ff 07              a1 = sp + 0x7ff
  8021: 95 88 19 04              a1 = a1 + 0x419
  8025: 7b 68 28                 u64 [s1 + 0x28] = a1
  8028: 33 08 10 0c 01           a1 = 0x10c10
  8033: 7b 18 98 01              u64 [sp + 0x198] = a1
  8037: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8042: 49 21 b8 01              u64 [sp + 440] = 0
  8046: 95 18 ff 07              a1 = sp + 0x7ff
  8050: 95 88 b1 03              a1 = a1 + 0x3b1
  8054: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  8058: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8063: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8067: 88 77 01                 a0 = a0 <u 0x1
  8070: 97 77 01                 a0 = a0 << 0x1
  8073: 7b 17 10                 u64 [sp + 0x10] = a0
  8076: 82 17 30                 a0 = u64 [sp + 0x30]
  8079: 7b 67 20                 u64 [s1 + 0x20] = a0
  8082: 7b 67 30                 u64 [s1 + 0x30] = a0
  8085: 95 17 ff 07              a0 = sp + 0x7ff
  8089: 95 77 e1 03              a0 = a0 + 0x3e1
  8093: 95 18 98 01              a1 = sp + 0x198
  8097: 50 20 be 00 dc 17        ra = 190, jump @751
      :                          @413 [@dyn 95]
  8103: 82 65 50                 s0 = u64 [s1 + 0x50]
  8106: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8109: 82 66 48                 s1 = u64 [s1 + 0x48]
  8112: 82 17 10                 a0 = u64 [sp + 0x10]
  8115: 33 08                    a1 = 0
  8117: 33 09                    a2 = 0
  8119: 64 5a                    a3 = s0
  8121: 33 00 c0 00              ra = 0xc0
  8125: 0a 64                    ecalli 100 // 'log'
  8127: 01                       fallthrough
      :                          @414 [@dyn 96]
  8128: 82 17 38                 a0 = u64 [sp + 0x38]
  8131: c8 67 07                 a0 = a0 + s1
  8134: 53 27 00 f0 23           jump @420 if a0 <u 4294963200
      :                          @415
  8139: 33 07 40 00 03           a0 = 0x30040
  8144: 95 77 00 10              a0 = a0 + 0x1000
  8148: 01                       fallthrough
      :                          @416
  8149: 82 78                    a1 = u64 [a0]
  8151: c9 87 09                 a2 = a0 - a1
  8154: ab 59 0f                 jump @420 if a2 != s0
      :                          @417
  8157: c9 68 09                 a2 = a1 - s1
  8160: 01                       fallthrough
      :                          @418
  8161: 82 7a                    a3 = u64 [a0]
  8163: ab 8a f2                 jump @416 if a3 != a1
      :                          @419
  8166: 7b 79                    u64 [a0] = a2
  8168: 01                       fallthrough
      :                          @420
  8169: 95 16 ff 07              s1 = sp + 0x7ff
  8173: 95 66 99 03              s1 = s1 + 0x399
  8177: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8181: 33 08 02                 a1 = 0x2
  8184: 33 05 02                 s0 = 0x2
  8187: 50 20 c2 00 de 24        ra = 194, jump @1029
      :                          @421 [@dyn 97]
  8193: 95 17 78                 a0 = sp + 0x78
  8196: 33 08 03                 a1 = 0x3
  8199: 0a 0d                    ecalli 13 // 'query'
  8201: 95 18 48                 a1 = sp + 0x48
  8204: 7b 68 18                 u64 [s1 + 0x18] = a1
  8207: 33 08 40 0c 01           a1 = 0x10c40
  8212: 7b 18 98 01              u64 [sp + 0x198] = a1
  8216: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8221: 49 21 b8 01              u64 [sp + 440] = 0
  8225: 95 18 ff 07              a1 = sp + 0x7ff
  8229: 95 88 b1 03              a1 = a1 + 0x3b1
  8233: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  8237: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8241: 7b 67                    u64 [s1] = a0
  8243: 95 77 01                 a0 = a0 + 0x1
  8246: 88 77 01                 a0 = a0 <u 0x1
  8249: 97 77 01                 a0 = a0 << 0x1
  8252: 7b 17 10                 u64 [sp + 0x10] = a0
  8255: 82 17 30                 a0 = u64 [sp + 0x30]
  8258: 7b 67 20                 u64 [s1 + 0x20] = a0
  8261: 7b 66 28                 u64 [s1 + 0x28] = s1
  8264: 7b 67 30                 u64 [s1 + 0x30] = a0
  8267: 95 17 ff 07              a0 = sp + 0x7ff
  8271: 95 77 e1 03              a0 = a0 + 0x3e1
  8275: 95 18 98 01              a1 = sp + 0x198
  8279: 50 20 c4 00 26 17        ra = 196, jump @751
      :                          @422 [@dyn 98]
  8285: 82 65 50                 s0 = u64 [s1 + 0x50]
  8288: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8291: 82 66 48                 s1 = u64 [s1 + 0x48]
  8294: 82 17 10                 a0 = u64 [sp + 0x10]
  8297: 33 08                    a1 = 0
  8299: 33 09                    a2 = 0
  8301: 64 5a                    a3 = s0
  8303: 33 00 c6 00              ra = 0xc6
  8307: 0a 64                    ecalli 100 // 'log'
  8309: 01                       fallthrough
      :                          @423 [@dyn 99]
  8310: 82 17 38                 a0 = u64 [sp + 0x38]
  8313: c8 67 07                 a0 = a0 + s1
  8316: 53 27 00 f0 23           jump @429 if a0 <u 4294963200
      :                          @424
  8321: 33 07 40 00 03           a0 = 0x30040
  8326: 95 77 00 10              a0 = a0 + 0x1000
  8330: 01                       fallthrough
      :                          @425
  8331: 82 78                    a1 = u64 [a0]
  8333: c9 87 09                 a2 = a0 - a1
  8336: ab 59 0f                 jump @429 if a2 != s0
      :                          @426
  8339: c9 68 09                 a2 = a1 - s1
  8342: 01                       fallthrough
      :                          @427
  8343: 82 7a                    a3 = u64 [a0]
  8345: ab 8a f2                 jump @425 if a3 != a1
      :                          @428
  8348: 7b 79                    u64 [a0] = a2
  8350: 01                       fallthrough
      :                          @429
  8351: 95 16 ff 07              s1 = sp + 0x7ff
  8355: 95 66 99 03              s1 = s1 + 0x399
  8359: 82 67                    a0 = u64 [s1]
  8361: 33 08 05                 a1 = 0x5
  8364: 33 00 56 01              ra = 0x156
  8368: 28 29 24                 jump @1029
      :                          @430 [@dyn 100]
  8371: 33 05 03                 s0 = 0x3
  8374: 95 17 58                 a0 = sp + 0x58
  8377: 33 08 03                 a1 = 0x3
  8380: 0a 0f                    ecalli 15 // 'forget'
  8382: 7b 67 70                 u64 [s1 + 0x70] = a0
  8385: 88 77 01                 a0 = a0 <u 0x1
  8388: 97 77 01                 a0 = a0 << 0x1
  8391: 7b 17 10                 u64 [sp + 0x10] = a0
  8394: 95 17 48                 a0 = sp + 0x48
  8397: 7b 67 18                 u64 [s1 + 0x18] = a0
  8400: 82 18 30                 a1 = u64 [sp + 0x30]
  8403: 7b 68 20                 u64 [s1 + 0x20] = a1
  8406: 95 17 ff 07              a0 = sp + 0x7ff
  8410: 95 77 09 04              a0 = a0 + 0x409
  8414: 7b 67 28                 u64 [s1 + 0x28] = a0
  8417: 7b 68 30                 u64 [s1 + 0x30] = a1
  8420: 33 07 70 0c 01           a0 = 0x10c70
  8425: 7b 17 98 01              u64 [sp + 0x198] = a0
  8429: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  8433: 49 21 b8 01              u64 [sp + 440] = 0
  8437: 95 17 ff 07              a0 = sp + 0x7ff
  8441: 95 77 b1 03              a0 = a0 + 0x3b1
  8445: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8449: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8454: 95 17 ff 07              a0 = sp + 0x7ff
  8458: 95 77 e1 03              a0 = a0 + 0x3e1
  8462: 95 18 98 01              a1 = sp + 0x198
  8466: 50 20 ca 00 6b 16        ra = 202, jump @751
      :                          @431 [@dyn 101]
  8472: 95 17 ff 07              a0 = sp + 0x7ff
  8476: 95 77 99 03              a0 = a0 + 0x399
  8480: 82 76 50                 s1 = u64 [a0 + 0x50]
  8483: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8486: 82 75 48                 s0 = u64 [a0 + 0x48]
  8489: 82 17 10                 a0 = u64 [sp + 0x10]
  8492: 33 08                    a1 = 0
  8494: 33 09                    a2 = 0
  8496: 64 6a                    a3 = s1
  8498: 33 00 cc 00              ra = 0xcc
  8502: 0a 64                    ecalli 100 // 'log'
  8504: 01                       fallthrough
      :                          @432 [@dyn 102]
  8505: 82 17 38                 a0 = u64 [sp + 0x38]
  8508: c8 57 07                 a0 = a0 + s0
  8511: 53 27 00 f0 23           jump @438 if a0 <u 4294963200
      :                          @433
  8516: 33 07 40 00 03           a0 = 0x30040
  8521: 95 77 00 10              a0 = a0 + 0x1000
  8525: 01                       fallthrough
      :                          @434
  8526: 82 78                    a1 = u64 [a0]
  8528: c9 87 09                 a2 = a0 - a1
  8531: ab 69 0f                 jump @438 if a2 != s1
      :                          @435
  8534: c9 58 09                 a2 = a1 - s0
  8537: 01                       fallthrough
      :                          @436
  8538: 82 7a                    a3 = u64 [a0]
  8540: ab 8a f2                 jump @434 if a3 != a1
      :                          @437
  8543: 7b 79                    u64 [a0] = a2
  8545: 01                       fallthrough
      :                          @438
  8546: 95 16 ff 07              s1 = sp + 0x7ff
  8550: 95 66 99 03              s1 = s1 + 0x399
  8554: 82 67 70                 a0 = u64 [s1 + 0x70]
  8557: 33 08 01                 a1 = 0x1
  8560: 50 20 ce 00 69 23        ra = 206, jump @1029
      :                          @439 [@dyn 103]
  8566: 95 17 58                 a0 = sp + 0x58
  8569: 33 08 03                 a1 = 0x3
  8572: 0a 0d                    ecalli 13 // 'query'
  8574: 95 18 48                 a1 = sp + 0x48
  8577: 7b 68 18                 u64 [s1 + 0x18] = a1
  8580: 95 18 ff 07              a1 = sp + 0x7ff
  8584: 95 88 11 04              a1 = a1 + 0x411
  8588: 7b 68 28                 u64 [s1 + 0x28] = a1
  8591: 33 08 a0 0c 01           a1 = 0x10ca0
  8596: 7b 18 98 01              u64 [sp + 0x198] = a1
  8600: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8605: 49 21 b8 01              u64 [sp + 440] = 0
  8609: 95 18 ff 07              a1 = sp + 0x7ff
  8613: 95 88 b1 03              a1 = a1 + 0x3b1
  8617: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  8621: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8626: 7b 67 78                 u64 [s1 + 0x78] = a0
  8629: 8e 77                    a0 = a0 >u 0
  8631: 97 77 01                 a0 = a0 << 0x1
  8634: 7b 17 10                 u64 [sp + 0x10] = a0
  8637: 82 17 30                 a0 = u64 [sp + 0x30]
  8640: 7b 67 20                 u64 [s1 + 0x20] = a0
  8643: 7b 67 30                 u64 [s1 + 0x30] = a0
  8646: 95 17 ff 07              a0 = sp + 0x7ff
  8650: 95 77 e1 03              a0 = a0 + 0x3e1
  8654: 95 18 98 01              a1 = sp + 0x198
  8658: 50 20 d0 00 ab 15        ra = 208, jump @751
      :                          @440 [@dyn 104]
  8664: 82 65 50                 s0 = u64 [s1 + 0x50]
  8667: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8670: 82 66 48                 s1 = u64 [s1 + 0x48]
  8673: 82 17 10                 a0 = u64 [sp + 0x10]
  8676: 33 08                    a1 = 0
  8678: 33 09                    a2 = 0
  8680: 64 5a                    a3 = s0
  8682: 33 00 d2 00              ra = 0xd2
  8686: 0a 64                    ecalli 100 // 'log'
  8688: 01                       fallthrough
      :                          @441 [@dyn 105]
  8689: 82 17 38                 a0 = u64 [sp + 0x38]
  8692: c8 67 07                 a0 = a0 + s1
  8695: 53 27 00 f0 23           jump @447 if a0 <u 4294963200
      :                          @442
  8700: 33 07 40 00 03           a0 = 0x30040
  8705: 95 77 00 10              a0 = a0 + 0x1000
  8709: 01                       fallthrough
      :                          @443
  8710: 82 78                    a1 = u64 [a0]
  8712: c9 87 09                 a2 = a0 - a1
  8715: ab 59 0f                 jump @447 if a2 != s0
      :                          @444
  8718: c9 68 09                 a2 = a1 - s1
  8721: 01                       fallthrough
      :                          @445
  8722: 82 7a                    a3 = u64 [a0]
  8724: ab 8a f2                 jump @443 if a3 != a1
      :                          @446
  8727: 7b 79                    u64 [a0] = a2
  8729: 01                       fallthrough
      :                          @447
  8730: 95 16 ff 07              s1 = sp + 0x7ff
  8734: 95 66 99 03              s1 = s1 + 0x399
  8738: 82 67 78                 a0 = u64 [s1 + 0x78]
  8741: 33 08 02                 a1 = 0x2
  8744: 33 05 02                 s0 = 0x2
  8747: 50 20 d4 00 ae 22        ra = 212, jump @1029
      :                          @448 [@dyn 106]
  8753: 95 18 78                 a1 = sp + 0x78
  8756: 95 19 98 00              a2 = sp + 0x98
  8760: 33 0b 03                 a4 = 0x3
  8763: 82 17 28                 a0 = u64 [sp + 0x28]
  8766: 33 0a                    a3 = 0
  8768: 0a 01                    ecalli 1 // 'lookup'
  8770: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8774: 95 77 01                 a0 = a0 + 0x1
  8777: 88 77 01                 a0 = a0 <u 0x1
  8780: 97 77 01                 a0 = a0 << 0x1
  8783: 7b 17 10                 u64 [sp + 0x10] = a0
  8786: 95 17 48                 a0 = sp + 0x48
  8789: 7b 67 18                 u64 [s1 + 0x18] = a0
  8792: 82 18 30                 a1 = u64 [sp + 0x30]
  8795: 7b 68 20                 u64 [s1 + 0x20] = a1
  8798: 95 17 ff 07              a0 = sp + 0x7ff
  8802: 95 77 19 04              a0 = a0 + 0x419
  8806: 7b 67 28                 u64 [s1 + 0x28] = a0
  8809: 7b 68 30                 u64 [s1 + 0x30] = a1
  8812: 33 07 d0 0c 01           a0 = 0x10cd0
  8817: 7b 17 98 01              u64 [sp + 0x198] = a0
  8821: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8826: 49 21 b8 01              u64 [sp + 440] = 0
  8830: 95 17 ff 07              a0 = sp + 0x7ff
  8834: 95 77 b1 03              a0 = a0 + 0x3b1
  8838: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8842: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8846: 95 17 ff 07              a0 = sp + 0x7ff
  8850: 95 77 e1 03              a0 = a0 + 0x3e1
  8854: 95 18 98 01              a1 = sp + 0x198
  8858: 50 20 d6 00 e3 14        ra = 214, jump @751
      :                          @449 [@dyn 107]
  8864: 82 65 50                 s0 = u64 [s1 + 0x50]
  8867: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8870: 82 66 48                 s1 = u64 [s1 + 0x48]
  8873: 82 17 10                 a0 = u64 [sp + 0x10]
  8876: 33 08                    a1 = 0
  8878: 33 09                    a2 = 0
  8880: 64 5a                    a3 = s0
  8882: 33 00 d8 00              ra = 0xd8
  8886: 0a 64                    ecalli 100 // 'log'
  8888: 01                       fallthrough
      :                          @450 [@dyn 108]
  8889: 82 17 38                 a0 = u64 [sp + 0x38]
  8892: c8 67 07                 a0 = a0 + s1
  8895: 53 27 00 f0 23           jump @456 if a0 <u 4294963200
      :                          @451
  8900: 33 07 40 00 03           a0 = 0x30040
  8905: 95 77 00 10              a0 = a0 + 0x1000
  8909: 01                       fallthrough
      :                          @452
  8910: 82 78                    a1 = u64 [a0]
  8912: c9 87 09                 a2 = a0 - a1
  8915: ab 59 0f                 jump @456 if a2 != s0
      :                          @453
  8918: c9 68 09                 a2 = a1 - s1
  8921: 01                       fallthrough
      :                          @454
  8922: 82 7a                    a3 = u64 [a0]
  8924: ab 8a f2                 jump @452 if a3 != a1
      :                          @455
  8927: 7b 79                    u64 [a0] = a2
  8929: 01                       fallthrough
      :                          @456
  8930: 95 16 ff 07              s1 = sp + 0x7ff
  8934: 95 66 99 03              s1 = s1 + 0x399
  8938: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8942: 33 08 05                 a1 = 0x5
  8945: 50 20 da 00 e8 21        ra = 218, jump @1029
      :                          @457 [@dyn 109]
  8951: 33 07 e8 03              a0 = 0x3e8
  8955: 95 18 52                 a1 = sp + 0x52
  8958: 0a 06                    ecalli 6 // 'assign'
  8960: 95 18 48                 a1 = sp + 0x48
  8963: 7b 68 18                 u64 [s1 + 0x18] = a1
  8966: 33 08 00 0d 01           a1 = 0x10d00
  8971: 7b 18 98 01              u64 [sp + 0x198] = a1
  8975: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8980: 49 21 b8 01              u64 [sp + 440] = 0
  8984: 95 18 ff 07              a1 = sp + 0x7ff
  8988: 95 88 b1 03              a1 = a1 + 0x3b1
  8992: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  8996: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9001: 7b 67                    u64 [s1] = a0
  9003: 95 77 06                 a0 = a0 + 0x6
  9006: 88 77 01                 a0 = a0 <u 0x1
  9009: 97 77 01                 a0 = a0 << 0x1
  9012: 7b 17 10                 u64 [sp + 0x10] = a0
  9015: 82 17 30                 a0 = u64 [sp + 0x30]
  9018: 7b 67 20                 u64 [s1 + 0x20] = a0
  9021: 7b 66 28                 u64 [s1 + 0x28] = s1
  9024: 7b 67 30                 u64 [s1 + 0x30] = a0
  9027: 95 17 ff 07              a0 = sp + 0x7ff
  9031: 95 77 e1 03              a0 = a0 + 0x3e1
  9035: 95 18 98 01              a1 = sp + 0x198
  9039: 50 20 dc 00 2e 14        ra = 220, jump @751
      :                          @458 [@dyn 110]
  9045: 82 65 50                 s0 = u64 [s1 + 0x50]
  9048: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9051: 82 66 48                 s1 = u64 [s1 + 0x48]
  9054: 82 17 10                 a0 = u64 [sp + 0x10]
  9057: 33 08                    a1 = 0
  9059: 33 09                    a2 = 0
  9061: 64 5a                    a3 = s0
  9063: 33 00 de 00              ra = 0xde
  9067: 0a 64                    ecalli 100 // 'log'
  9069: 01                       fallthrough
      :                          @459 [@dyn 111]
  9070: 82 17 38                 a0 = u64 [sp + 0x38]
  9073: c8 67 07                 a0 = a0 + s1
  9076: 53 27 00 f0 1d 03        jump @502 if a0 <u 4294963200
      :                          @460
  9082: 33 07 40 00 03           a0 = 0x30040
  9087: 95 77 00 10              a0 = a0 + 0x1000
  9091: 01                       fallthrough
      :                          @461
  9092: 82 78                    a1 = u64 [a0]
  9094: c9 87 09                 a2 = a0 - a1
  9097: ab 59 08 03              jump @502 if a2 != s0
      :                          @462
  9101: c9 68 09                 a2 = a1 - s1
  9104: 01                       fallthrough
      :                          @463
  9105: 82 7a                    a3 = u64 [a0]
  9107: ab 8a f1                 jump @461 if a3 != a1
      :                          @464
  9110: 7b 79                    u64 [a0] = a2
  9112: 33 0b                    a4 = 0
  9114: 01                       fallthrough
      :                          @465
  9115: ab 8a e9                 jump @461 if a3 != a1
      :                          @466
  9118: 28 f3 02                 jump @502
      :                          @467 [@dyn 112]
  9121: 95 18 58                 a1 = sp + 0x58
  9124: 95 19 98 00              a2 = sp + 0x98
  9128: 33 0b 03                 a4 = 0x3
  9131: 64 57                    a0 = s0
  9133: 33 0a                    a3 = 0
  9135: 0a 01                    ecalli 1 // 'lookup'
  9137: 7b 67 70                 u64 [s1 + 0x70] = a0
  9140: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  9143: 88 77 01                 a0 = a0 <u 0x1
  9146: 97 77 01                 a0 = a0 << 0x1
  9149: 7b 17 10                 u64 [sp + 0x10] = a0
  9152: 95 17 48                 a0 = sp + 0x48
  9155: 7b 67 18                 u64 [s1 + 0x18] = a0
  9158: 82 18 30                 a1 = u64 [sp + 0x30]
  9161: 7b 68 20                 u64 [s1 + 0x20] = a1
  9164: 95 17 ff 07              a0 = sp + 0x7ff
  9168: 95 77 09 04              a0 = a0 + 0x409
  9172: 7b 67 28                 u64 [s1 + 0x28] = a0
  9175: 7b 68 30                 u64 [s1 + 0x30] = a1
  9178: 33 07 30 0d 01           a0 = 0x10d30
  9183: 7b 17 98 01              u64 [sp + 0x198] = a0
  9187: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9192: 49 21 b8 01              u64 [sp + 440] = 0
  9196: 95 17 ff 07              a0 = sp + 0x7ff
  9200: 95 77 b1 03              a0 = a0 + 0x3b1
  9204: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9208: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9213: 95 17 ff 07              a0 = sp + 0x7ff
  9217: 95 77 e1 03              a0 = a0 + 0x3e1
  9221: 95 18 98 01              a1 = sp + 0x198
  9225: 50 20 e2 00 74 13        ra = 226, jump @751
      :                          @468 [@dyn 113]
  9231: 82 65 50                 s0 = u64 [s1 + 0x50]
  9234: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9237: 95 17 ff 07              a0 = sp + 0x7ff
  9241: 95 77 99 03              a0 = a0 + 0x399
  9245: 82 76 48                 s1 = u64 [a0 + 0x48]
  9248: 82 17 10                 a0 = u64 [sp + 0x10]
  9251: 33 08                    a1 = 0
  9253: 33 09                    a2 = 0
  9255: 64 5a                    a3 = s0
  9257: 33 00 e4 00              ra = 0xe4
  9261: 0a 64                    ecalli 100 // 'log'
  9263: 01                       fallthrough
      :                          @469 [@dyn 114]
  9264: 82 17 38                 a0 = u64 [sp + 0x38]
  9267: c8 67 07                 a0 = a0 + s1
  9270: 53 27 00 f0 23           jump @475 if a0 <u 4294963200
      :                          @470
  9275: 33 07 40 00 03           a0 = 0x30040
  9280: 95 77 00 10              a0 = a0 + 0x1000
  9284: 01                       fallthrough
      :                          @471
  9285: 82 78                    a1 = u64 [a0]
  9287: c9 87 09                 a2 = a0 - a1
  9290: ab 59 0f                 jump @475 if a2 != s0
      :                          @472
  9293: c9 68 09                 a2 = a1 - s1
  9296: 01                       fallthrough
      :                          @473
  9297: 82 7a                    a3 = u64 [a0]
  9299: ab 8a f2                 jump @471 if a3 != a1
      :                          @474
  9302: 7b 79                    u64 [a0] = a2
  9304: 01                       fallthrough
      :                          @475
  9305: 95 16 ff 07              s1 = sp + 0x7ff
  9309: 95 66 99 03              s1 = s1 + 0x399
  9313: 82 67 70                 a0 = u64 [s1 + 0x70]
  9316: 33 08 01                 a1 = 0x1
  9319: 50 20 e6 00 72 20        ra = 230, jump @1029
      :                          @476 [@dyn 115]
  9325: 95 17 58                 a0 = sp + 0x58
  9328: 33 08 03                 a1 = 0x3
  9331: 0a 0d                    ecalli 13 // 'query'
  9333: 95 18 48                 a1 = sp + 0x48
  9336: 7b 68 18                 u64 [s1 + 0x18] = a1
  9339: 95 18 ff 07              a1 = sp + 0x7ff
  9343: 95 88 11 04              a1 = a1 + 0x411
  9347: 7b 68 28                 u64 [s1 + 0x28] = a1
  9350: 33 08 a0 0c 01           a1 = 0x10ca0
  9355: 7b 18 98 01              u64 [sp + 0x198] = a1
  9359: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9364: 49 21 b8 01              u64 [sp + 440] = 0
  9368: 95 18 ff 07              a1 = sp + 0x7ff
  9372: 95 88 b1 03              a1 = a1 + 0x3b1
  9376: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  9380: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9385: 7b 67 78                 u64 [s1 + 0x78] = a0
  9388: 8e 77                    a0 = a0 >u 0
  9390: 97 77 01                 a0 = a0 << 0x1
  9393: 7b 17 10                 u64 [sp + 0x10] = a0
  9396: 82 17 30                 a0 = u64 [sp + 0x30]
  9399: 7b 67 20                 u64 [s1 + 0x20] = a0
  9402: 7b 67 30                 u64 [s1 + 0x30] = a0
  9405: 95 17 ff 07              a0 = sp + 0x7ff
  9409: 95 77 e1 03              a0 = a0 + 0x3e1
  9413: 95 18 98 01              a1 = sp + 0x198
  9417: 50 20 e8 00 b4 12        ra = 232, jump @751
      :                          @477 [@dyn 116]
  9423: 82 65 50                 s0 = u64 [s1 + 0x50]
  9426: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9429: 82 66 48                 s1 = u64 [s1 + 0x48]
  9432: 82 17 10                 a0 = u64 [sp + 0x10]
  9435: 33 08                    a1 = 0
  9437: 33 09                    a2 = 0
  9439: 64 5a                    a3 = s0
  9441: 33 00 ea 00              ra = 0xea
  9445: 0a 64                    ecalli 100 // 'log'
  9447: 01                       fallthrough
      :                          @478 [@dyn 117]
  9448: 82 17 38                 a0 = u64 [sp + 0x38]
  9451: c8 67 07                 a0 = a0 + s1
  9454: 53 27 00 f0 23           jump @484 if a0 <u 4294963200
      :                          @479
  9459: 33 07 40 00 03           a0 = 0x30040
  9464: 95 77 00 10              a0 = a0 + 0x1000
  9468: 01                       fallthrough
      :                          @480
  9469: 82 78                    a1 = u64 [a0]
  9471: c9 87 09                 a2 = a0 - a1
  9474: ab 59 0f                 jump @484 if a2 != s0
      :                          @481
  9477: c9 68 09                 a2 = a1 - s1
  9480: 01                       fallthrough
      :                          @482
  9481: 82 7a                    a3 = u64 [a0]
  9483: ab 8a f2                 jump @480 if a3 != a1
      :                          @483
  9486: 7b 79                    u64 [a0] = a2
  9488: 01                       fallthrough
      :                          @484
  9489: 95 15 ff 07              s0 = sp + 0x7ff
  9493: 95 55 99 03              s0 = s0 + 0x399
  9497: 82 57 78                 a0 = u64 [s0 + 0x78]
  9500: 33 08 02                 a1 = 0x2
  9503: 33 06 02                 s1 = 0x2
  9506: 50 20 ec 00 b7 1f        ra = 236, jump @1029
      :                          @485 [@dyn 118]
  9512: 95 18 58                 a1 = sp + 0x58
  9515: 82 17 28                 a0 = u64 [sp + 0x28]
  9518: 0a 0c                    ecalli 12 // 'eject'
  9520: 7b 57 80 00              u64 [s0 + 0x80] = a0
  9524: 95 77 04                 a0 = a0 + 0x4
  9527: 88 77 01                 a0 = a0 <u 0x1
  9530: 97 77 01                 a0 = a0 << 0x1
  9533: 7b 17 10                 u64 [sp + 0x10] = a0
  9536: 95 17 48                 a0 = sp + 0x48
  9539: 7b 57 18                 u64 [s0 + 0x18] = a0
  9542: 82 18 30                 a1 = u64 [sp + 0x30]
  9545: 7b 58 20                 u64 [s0 + 0x20] = a1
  9548: 95 17 ff 07              a0 = sp + 0x7ff
  9552: 95 77 19 04              a0 = a0 + 0x419
  9556: 7b 57 28                 u64 [s0 + 0x28] = a0
  9559: 7b 58 30                 u64 [s0 + 0x30] = a1
  9562: 33 07 60 0d 01           a0 = 0x10d60
  9567: 7b 17 98 01              u64 [sp + 0x198] = a0
  9571: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9576: 49 21 b8 01              u64 [sp + 440] = 0
  9580: 95 17 ff 07              a0 = sp + 0x7ff
  9584: 95 77 b1 03              a0 = a0 + 0x3b1
  9588: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9592: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
  9596: 95 17 ff 07              a0 = sp + 0x7ff
  9600: 95 77 e1 03              a0 = a0 + 0x3e1
  9604: 95 18 98 01              a1 = sp + 0x198
  9608: 50 20 ee 00 f5 11        ra = 238, jump @751
      :                          @486 [@dyn 119]
  9614: 82 56 50                 s1 = u64 [s0 + 0x50]
  9617: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9620: 82 55 48                 s0 = u64 [s0 + 0x48]
  9623: 82 17 10                 a0 = u64 [sp + 0x10]
  9626: 33 08                    a1 = 0
  9628: 33 09                    a2 = 0
  9630: 64 6a                    a3 = s1
  9632: 33 00 f0 00              ra = 0xf0
  9636: 0a 64                    ecalli 100 // 'log'
  9638: 01                       fallthrough
      :                          @487 [@dyn 120]
  9639: 82 17 38                 a0 = u64 [sp + 0x38]
  9642: c8 57 07                 a0 = a0 + s0
  9645: 53 27 00 f0 23           jump @493 if a0 <u 4294963200
      :                          @488
  9650: 33 07 40 00 03           a0 = 0x30040
  9655: 95 77 00 10              a0 = a0 + 0x1000
  9659: 01                       fallthrough
      :                          @489
  9660: 82 78                    a1 = u64 [a0]
  9662: c9 87 09                 a2 = a0 - a1
  9665: ab 69 0f                 jump @493 if a2 != s1
      :                          @490
  9668: c9 58 09                 a2 = a1 - s0
  9671: 01                       fallthrough
      :                          @491
  9672: 82 7a                    a3 = u64 [a0]
  9674: ab 8a f2                 jump @489 if a3 != a1
      :                          @492
  9677: 7b 79                    u64 [a0] = a2
  9679: 01                       fallthrough
      :                          @493
  9680: 95 16 ff 07              s1 = sp + 0x7ff
  9684: 95 66 99 03              s1 = s1 + 0x399
  9688: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9692: 33 08 05                 a1 = 0x5
  9695: 50 20 f2 00 fa 1e        ra = 242, jump @1029
      :                          @494 [@dyn 121]
  9701: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  9711: 95 1a 58                 a3 = sp + 0x58
  9714: 33 08                    a1 = 0
  9716: 33 09                    a2 = 0
  9718: 33 0b                    a4 = 0
  9720: 0a 05                    ecalli 5 // 'bless'
  9722: 95 18 48                 a1 = sp + 0x48
  9725: 7b 68 18                 u64 [s1 + 0x18] = a1
  9728: 33 08 90 0d 01           a1 = 0x10d90
  9733: 7b 18 98 01              u64 [sp + 0x198] = a1
  9737: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9742: 49 21 b8 01              u64 [sp + 440] = 0
  9746: 95 18 ff 07              a1 = sp + 0x7ff
  9750: 95 88 b1 03              a1 = a1 + 0x3b1
  9754: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  9758: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9763: 7b 67                    u64 [s1] = a0
  9765: 95 77 04                 a0 = a0 + 0x4
  9768: 88 77 01                 a0 = a0 <u 0x1
  9771: 97 77 01                 a0 = a0 << 0x1
  9774: 7b 17 10                 u64 [sp + 0x10] = a0
  9777: 82 17 30                 a0 = u64 [sp + 0x30]
  9780: 7b 67 20                 u64 [s1 + 0x20] = a0
  9783: 7b 66 28                 u64 [s1 + 0x28] = s1
  9786: 7b 67 30                 u64 [s1 + 0x30] = a0
  9789: 95 17 ff 07              a0 = sp + 0x7ff
  9793: 95 77 e1 03              a0 = a0 + 0x3e1
  9797: 95 18 98 01              a1 = sp + 0x198
  9801: 50 20 f4 00 34 11        ra = 244, jump @751
      :                          @495 [@dyn 122]
  9807: 82 65 50                 s0 = u64 [s1 + 0x50]
  9810: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9813: 82 66 48                 s1 = u64 [s1 + 0x48]
  9816: 82 17 10                 a0 = u64 [sp + 0x10]
  9819: 33 08                    a1 = 0
  9821: 33 09                    a2 = 0
  9823: 64 5a                    a3 = s0
  9825: 33 00 f6 00              ra = 0xf6
  9829: 0a 64                    ecalli 100 // 'log'
  9831: 01                       fallthrough
      :                          @496 [@dyn 123]
  9832: 82 17 38                 a0 = u64 [sp + 0x38]
  9835: c8 67 07                 a0 = a0 + s1
  9838: 53 27 00 f0 23           jump @502 if a0 <u 4294963200
      :                          @497
  9843: 33 07 40 00 03           a0 = 0x30040
  9848: 95 77 00 10              a0 = a0 + 0x1000
  9852: 01                       fallthrough
      :                          @498
  9853: 82 78                    a1 = u64 [a0]
  9855: c9 87 09                 a2 = a0 - a1
  9858: ab 59 0f                 jump @502 if a2 != s0
      :                          @499
  9861: c9 68 09                 a2 = a1 - s1
  9864: 01                       fallthrough
      :                          @500
  9865: 82 7a                    a3 = u64 [a0]
  9867: ab 8a f2                 jump @498 if a3 != a1
      :                          @501
  9870: 7b 79                    u64 [a0] = a2
  9872: 01                       fallthrough
      :                          @502
  9873: 95 16 ff 07              s1 = sp + 0x7ff
  9877: 95 66 99 03              s1 = s1 + 0x399
  9881: 82 67                    a0 = u64 [s1]
  9883: 33 08 06                 a1 = 0x6
  9886: 33 00 56 01              ra = 0x156
  9890: 28 37 1e                 jump @1029
      :                          @503 [@dyn 124]
  9893: 95 17 58                 a0 = sp + 0x58
  9896: 33 08 03                 a1 = 0x3
  9899: 0a 0e                    ecalli 14 // 'solicit'
  9901: 64 75                    s0 = a0
  9903: 7b 67 70                 u64 [s1 + 0x70] = a0
  9906: 33 08 01                 a1 = 0x1
  9909: 50 20 fa 00 24 1e        ra = 250, jump @1029
      :                          @504 [@dyn 125]
  9915: 88 57 01                 a0 = s0 <u 0x1
  9918: 97 77 01                 a0 = a0 << 0x1
  9921: 7b 17 10                 u64 [sp + 0x10] = a0
  9924: 95 17 48                 a0 = sp + 0x48
  9927: 7b 67 18                 u64 [s1 + 0x18] = a0
  9930: 82 18 30                 a1 = u64 [sp + 0x30]
  9933: 7b 68 20                 u64 [s1 + 0x20] = a1
  9936: 95 17 ff 07              a0 = sp + 0x7ff
  9940: 95 77 09 04              a0 = a0 + 0x409
  9944: 7b 67 28                 u64 [s1 + 0x28] = a0
  9947: 7b 68 30                 u64 [s1 + 0x30] = a1
  9950: 33 07 e0 0b 01           a0 = 0x10be0
  9955: 7b 17 98 01              u64 [sp + 0x198] = a0
  9959: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9964: 49 21 b8 01              u64 [sp + 440] = 0
  9968: 95 17 ff 07              a0 = sp + 0x7ff
  9972: 95 77 b1 03              a0 = a0 + 0x3b1
  9976: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9980: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9985: 95 17 ff 07              a0 = sp + 0x7ff
  9989: 95 77 e1 03              a0 = a0 + 0x3e1
  9993: 95 18 98 01              a1 = sp + 0x198
  9997: 50 20 fc 00 70 10        ra = 252, jump @751
      :                          @505 [@dyn 126]
 10003: 95 17 ff 07              a0 = sp + 0x7ff
 10007: 95 77 99 03              a0 = a0 + 0x399
 10011: 82 76 50                 s1 = u64 [a0 + 0x50]
 10014: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10017: 82 75 48                 s0 = u64 [a0 + 0x48]
 10020: 82 17 10                 a0 = u64 [sp + 0x10]
 10023: 33 08                    a1 = 0
 10025: 33 09                    a2 = 0
 10027: 64 6a                    a3 = s1
 10029: 33 00 fe 00              ra = 0xfe
 10033: 0a 64                    ecalli 100 // 'log'
 10035: 01                       fallthrough
      :                          @506 [@dyn 127]
 10036: 82 17 38                 a0 = u64 [sp + 0x38]
 10039: c8 57 07                 a0 = a0 + s0
 10042: 53 27 00 f0 23           jump @512 if a0 <u 4294963200
      :                          @507
 10047: 33 07 40 00 03           a0 = 0x30040
 10052: 95 77 00 10              a0 = a0 + 0x1000
 10056: 01                       fallthrough
      :                          @508
 10057: 82 78                    a1 = u64 [a0]
 10059: c9 87 09                 a2 = a0 - a1
 10062: ab 69 0f                 jump @512 if a2 != s1
      :                          @509
 10065: c9 58 09                 a2 = a1 - s0
 10068: 01                       fallthrough
      :                          @510
 10069: 82 7a                    a3 = u64 [a0]
 10071: ab 8a f2                 jump @508 if a3 != a1
      :                          @511
 10074: 7b 79                    u64 [a0] = a2
 10076: 01                       fallthrough
      :                          @512
 10077: 95 17 58                 a0 = sp + 0x58
 10080: 33 08 03                 a1 = 0x3
 10083: 0a 0d                    ecalli 13 // 'query'
 10085: 95 19 ff 07              a2 = sp + 0x7ff
 10089: 95 99 99 03              a2 = a2 + 0x399
 10093: 95 18 48                 a1 = sp + 0x48
 10096: 7b 98 18                 u64 [a2 + 0x18] = a1
 10099: 95 18 ff 07              a1 = sp + 0x7ff
 10103: 95 88 11 04              a1 = a1 + 0x411
 10107: 7b 98 28                 u64 [a2 + 0x28] = a1
 10110: 33 08 c0 0d 01           a1 = 0x10dc0
 10115: 7b 18 98 01              u64 [sp + 0x198] = a1
 10119: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10124: 49 21 b8 01              u64 [sp + 440] = 0
 10128: 95 18 ff 07              a1 = sp + 0x7ff
 10132: 95 88 b1 03              a1 = a1 + 0x3b1
 10136: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 10140: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10145: 7b 97 78                 u64 [a2 + 0x78] = a0
 10148: 8e 77                    a0 = a0 >u 0
 10150: 97 77 01                 a0 = a0 << 0x1
 10153: 7b 17 10                 u64 [sp + 0x10] = a0
 10156: 82 17 30                 a0 = u64 [sp + 0x30]
 10159: 7b 97 20                 u64 [a2 + 0x20] = a0
 10162: 7b 97 30                 u64 [a2 + 0x30] = a0
 10165: 95 17 ff 07              a0 = sp + 0x7ff
 10169: 95 77 e1 03              a0 = a0 + 0x3e1
 10173: 95 18 98 01              a1 = sp + 0x198
 10177: 95 15 98 01              s0 = sp + 0x198
 10181: 50 20 00 01 b8 0f        ra = 256, jump @751
      :                          @513 [@dyn 128]
 10187: 95 17 ff 07              a0 = sp + 0x7ff
 10191: 95 77 99 03              a0 = a0 + 0x399
 10195: 82 76 50                 s1 = u64 [a0 + 0x50]
 10198: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10201: 82 77 48                 a0 = u64 [a0 + 0x48]
 10204: 7b 17 08                 u64 [sp + 0x8] = a0
 10207: 82 17 10                 a0 = u64 [sp + 0x10]
 10210: 33 08                    a1 = 0
 10212: 33 09                    a2 = 0
 10214: 64 6a                    a3 = s1
 10216: 33 00 02 01              ra = 0x102
 10220: 0a 64                    ecalli 100 // 'log'
 10222: 01                       fallthrough
      :                          @514 [@dyn 129]
 10223: 82 1c 08                 a5 = u64 [sp + 0x8]
 10226: 82 17 38                 a0 = u64 [sp + 0x38]
 10229: c8 c7 07                 a0 = a0 + a5
 10232: 53 27 00 f0 23           jump @520 if a0 <u 4294963200
      :                          @515
 10237: 33 07 40 00 03           a0 = 0x30040
 10242: 95 77 00 10              a0 = a0 + 0x1000
 10246: 01                       fallthrough
      :                          @516
 10247: 82 78                    a1 = u64 [a0]
 10249: c9 87 09                 a2 = a0 - a1
 10252: ab 69 0f                 jump @520 if a2 != s1
      :                          @517
 10255: c9 c8 09                 a2 = a1 - a5
 10258: 01                       fallthrough
      :                          @518
 10259: 82 7a                    a3 = u64 [a0]
 10261: ab 8a f2                 jump @516 if a3 != a1
      :                          @519
 10264: 7b 79                    u64 [a0] = a2
 10266: 01                       fallthrough
      :                          @520
 10267: 95 17 ff 07              a0 = sp + 0x7ff
 10271: 95 77 99 03              a0 = a0 + 0x399
 10275: 82 77 78                 a0 = u64 [a0 + 0x78]
 10278: 33 08 02                 a1 = 0x2
 10281: 50 20 04 01 b0 1c        ra = 260, jump @1029
      :                          @521 [@dyn 130]
 10287: 33 09 00 0a              a2 = 0xa00
 10291: 95 17 98 01              a0 = sp + 0x198
 10295: 33 08                    a1 = 0
 10297: 50 20 06 01 6b 12        ra = 262, jump @819
      :                          @522 [@dyn 131]
 10303: 33 06 50                 s1 = 0x50
 10306: 01                       fallthrough
      :                          @523
 10307: 95 18 58                 a1 = sp + 0x58
 10310: 33 09 20                 a2 = 0x20
 10313: 64 57                    a0 = s0
 10315: 50 20 08 01 a7 11        ra = 264, jump @801
      :                          @524 [@dyn 132]
 10321: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 10324: 95 55 20                 s0 = s0 + 0x20
 10327: 52 06 ec                 jump @523 if s1 != 0
      :                          @525
 10330: 95 18 98 01              a1 = sp + 0x198
 10334: 33 07                    a0 = 0
 10336: 0a 06                    ecalli 6 // 'assign'
 10338: 95 15 ff 07              s0 = sp + 0x7ff
 10342: 95 55 99 03              s0 = s0 + 0x399
 10346: 7b 57 80 00              u64 [s0 + 0x80] = a0
 10350: 88 77 01                 a0 = a0 <u 0x1
 10353: 97 77 01                 a0 = a0 << 0x1
 10356: 7b 17 10                 u64 [sp + 0x10] = a0
 10359: 95 17 48                 a0 = sp + 0x48
 10362: 7b 57 48                 u64 [s0 + 0x48] = a0
 10365: 82 18 30                 a1 = u64 [sp + 0x30]
 10368: 7b 58 50                 u64 [s0 + 0x50] = a1
 10371: 95 17 ff 07              a0 = sp + 0x7ff
 10375: 95 77 19 04              a0 = a0 + 0x419
 10379: 7b 57 58                 u64 [s0 + 0x58] = a0
 10382: 7b 58 60                 u64 [s0 + 0x60] = a1
 10385: 33 07 f0 0d 01           a0 = 0x10df0
 10390: 7b 57 18                 u64 [s0 + 0x18] = a0
 10393: 49 15 20 03              u64 [s0 + 32] = 0x3
 10397: 49 15 38                 u64 [s0 + 56] = 0
 10400: 95 17 ff 07              a0 = sp + 0x7ff
 10404: 95 77 e1 03              a0 = a0 + 0x3e1
 10408: 7b 57 28                 u64 [s0 + 0x28] = a0
 10411: 49 15 30 02              u64 [s0 + 48] = 0x2
 10415: 95 17 ff 07              a0 = sp + 0x7ff
 10419: 95 77 99 03              a0 = a0 + 0x399
 10423: 95 18 ff 07              a1 = sp + 0x7ff
 10427: 95 88 b1 03              a1 = a1 + 0x3b1
 10431: 50 20 0a 01 be 0e        ra = 266, jump @751
      :                          @526 [@dyn 133]
 10437: 82 56 08                 s1 = u64 [s0 + 0x8]
 10440: 82 5b 10                 a4 = u64 [s0 + 0x10]
 10443: 82 55                    s0 = u64 [s0]
 10445: 82 17 10                 a0 = u64 [sp + 0x10]
 10448: 33 08                    a1 = 0
 10450: 33 09                    a2 = 0
 10452: 64 6a                    a3 = s1
 10454: 33 00 0c 01              ra = 0x10c
 10458: 0a 64                    ecalli 100 // 'log'
 10460: 01                       fallthrough
      :                          @527 [@dyn 134]
 10461: 82 17 38                 a0 = u64 [sp + 0x38]
 10464: c8 57 07                 a0 = a0 + s0
 10467: 53 27 00 f0 5d 05        jump @598 if a0 <u 4294963200
      :                          @528
 10473: 33 07 40 00 03           a0 = 0x30040
 10478: 95 77 00 10              a0 = a0 + 0x1000
 10482: 01                       fallthrough
      :                          @529
 10483: 82 78                    a1 = u64 [a0]
 10485: c9 87 09                 a2 = a0 - a1
 10488: ab 69 48 05              jump @598 if a2 != s1
      :                          @530
 10492: c9 58 09                 a2 = a1 - s0
 10495: 01                       fallthrough
      :                          @531
 10496: 82 7a                    a3 = u64 [a0]
 10498: ab 8a f1                 jump @529 if a3 != a1
      :                          @532
 10501: 7b 79                    u64 [a0] = a2
 10503: 33 0b                    a4 = 0
 10505: 01                       fallthrough
      :                          @533
 10506: ab 8a e9                 jump @529 if a3 != a1
      :                          @534
 10509: 28 33 05                 jump @598
      :                          @535 [@dyn 135]
 10512: 33 05 03                 s0 = 0x3
 10515: 95 17 58                 a0 = sp + 0x58
 10518: 33 08 03                 a1 = 0x3
 10521: 0a 0f                    ecalli 15 // 'forget'
 10523: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10527: 88 77 01                 a0 = a0 <u 0x1
 10530: 97 77 01                 a0 = a0 << 0x1
 10533: 7b 17 10                 u64 [sp + 0x10] = a0
 10536: 95 17 48                 a0 = sp + 0x48
 10539: 7b 67 18                 u64 [s1 + 0x18] = a0
 10542: 82 18 30                 a1 = u64 [sp + 0x30]
 10545: 7b 68 20                 u64 [s1 + 0x20] = a1
 10548: 95 17 ff 07              a0 = sp + 0x7ff
 10552: 95 77 19 04              a0 = a0 + 0x419
 10556: 7b 67 28                 u64 [s1 + 0x28] = a0
 10559: 7b 68 30                 u64 [s1 + 0x30] = a1
 10562: 33 07 70 0c 01           a0 = 0x10c70
 10567: 7b 17 98 01              u64 [sp + 0x198] = a0
 10571: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 10575: 49 21 b8 01              u64 [sp + 440] = 0
 10579: 95 17 ff 07              a0 = sp + 0x7ff
 10583: 95 77 b1 03              a0 = a0 + 0x3b1
 10587: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10591: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10596: 95 17 ff 07              a0 = sp + 0x7ff
 10600: 95 77 e1 03              a0 = a0 + 0x3e1
 10604: 95 18 98 01              a1 = sp + 0x198
 10608: 50 20 10 01 0d 0e        ra = 272, jump @751
      :                          @536 [@dyn 136]
 10614: 95 17 ff 07              a0 = sp + 0x7ff
 10618: 95 77 99 03              a0 = a0 + 0x399
 10622: 82 76 50                 s1 = u64 [a0 + 0x50]
 10625: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10628: 82 75 48                 s0 = u64 [a0 + 0x48]
 10631: 82 17 10                 a0 = u64 [sp + 0x10]
 10634: 33 08                    a1 = 0
 10636: 33 09                    a2 = 0
 10638: 64 6a                    a3 = s1
 10640: 33 00 12 01              ra = 0x112
 10644: 0a 64                    ecalli 100 // 'log'
 10646: 01                       fallthrough
      :                          @537 [@dyn 137]
 10647: 82 17 38                 a0 = u64 [sp + 0x38]
 10650: c8 57 07                 a0 = a0 + s0
 10653: 53 27 00 f0 23           jump @543 if a0 <u 4294963200
      :                          @538
 10658: 33 07 40 00 03           a0 = 0x30040
 10663: 95 77 00 10              a0 = a0 + 0x1000
 10667: 01                       fallthrough
      :                          @539
 10668: 82 78                    a1 = u64 [a0]
 10670: c9 87 09                 a2 = a0 - a1
 10673: ab 69 0f                 jump @543 if a2 != s1
      :                          @540
 10676: c9 58 09                 a2 = a1 - s0
 10679: 01                       fallthrough
      :                          @541
 10680: 82 7a                    a3 = u64 [a0]
 10682: ab 8a f2                 jump @539 if a3 != a1
      :                          @542
 10685: 7b 79                    u64 [a0] = a2
 10687: 01                       fallthrough
      :                          @543
 10688: 95 16 ff 07              s1 = sp + 0x7ff
 10692: 95 66 99 03              s1 = s1 + 0x399
 10696: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10700: 33 08 01                 a1 = 0x1
 10703: 50 20 14 01 0a 1b        ra = 276, jump @1029
      :                          @544 [@dyn 138]
 10709: 95 17 58                 a0 = sp + 0x58
 10712: 33 08 03                 a1 = 0x3
 10715: 0a 0d                    ecalli 13 // 'query'
 10717: 95 18 48                 a1 = sp + 0x48
 10720: 7b 68 18                 u64 [s1 + 0x18] = a1
 10723: 33 08 20 0e 01           a1 = 0x10e20
 10728: 7b 18 98 01              u64 [sp + 0x198] = a1
 10732: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10737: 49 21 b8 01              u64 [sp + 440] = 0
 10741: 95 18 ff 07              a1 = sp + 0x7ff
 10745: 95 88 b1 03              a1 = a1 + 0x3b1
 10749: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 10753: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10758: 7b 67                    u64 [s1] = a0
 10760: 8e 77                    a0 = a0 >u 0
 10762: 97 77 01                 a0 = a0 << 0x1
 10765: 7b 17 10                 u64 [sp + 0x10] = a0
 10768: 82 17 30                 a0 = u64 [sp + 0x30]
 10771: 7b 67 20                 u64 [s1 + 0x20] = a0
 10774: 7b 66 28                 u64 [s1 + 0x28] = s1
 10777: 7b 67 30                 u64 [s1 + 0x30] = a0
 10780: 95 17 ff 07              a0 = sp + 0x7ff
 10784: 95 77 e1 03              a0 = a0 + 0x3e1
 10788: 95 18 98 01              a1 = sp + 0x198
 10792: 50 20 16 01 55 0d        ra = 278, jump @751
      :                          @545 [@dyn 139]
 10798: 82 65 50                 s0 = u64 [s1 + 0x50]
 10801: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10804: 82 66 48                 s1 = u64 [s1 + 0x48]
 10807: 82 17 10                 a0 = u64 [sp + 0x10]
 10810: 33 08                    a1 = 0
 10812: 33 09                    a2 = 0
 10814: 64 5a                    a3 = s0
 10816: 33 00 18 01              ra = 0x118
 10820: 0a 64                    ecalli 100 // 'log'
 10822: 01                       fallthrough
      :                          @546 [@dyn 140]
 10823: 82 17 38                 a0 = u64 [sp + 0x38]
 10826: c8 67 07                 a0 = a0 + s1
 10829: 53 27 00 f0 96 01        jump @571 if a0 <u 4294963200
      :                          @547
 10835: 33 07 40 00 03           a0 = 0x30040
 10840: 95 77 00 10              a0 = a0 + 0x1000
 10844: 01                       fallthrough
      :                          @548
 10845: 82 78                    a1 = u64 [a0]
 10847: c9 87 09                 a2 = a0 - a1
 10850: ab 59 81 01              jump @571 if a2 != s0
      :                          @549
 10854: c9 68 09                 a2 = a1 - s1
 10857: 01                       fallthrough
      :                          @550
 10858: 82 7a                    a3 = u64 [a0]
 10860: ab 8a f1                 jump @548 if a3 != a1
      :                          @551
 10863: 7b 79                    u64 [a0] = a2
 10865: 33 0b                    a4 = 0
 10867: 01                       fallthrough
      :                          @552
 10868: ab 8a e9                 jump @548 if a3 != a1
      :                          @553
 10871: 28 6c 01                 jump @571
      :                          @554 [@dyn 141]
 10874: 95 18 58                 a1 = sp + 0x58
 10877: 95 19 98 00              a2 = sp + 0x98
 10881: 33 0b 03                 a4 = 0x3
 10884: 64 57                    a0 = s0
 10886: 33 0a                    a3 = 0
 10888: 0a 01                    ecalli 1 // 'lookup'
 10890: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10894: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 10897: 88 77 01                 a0 = a0 <u 0x1
 10900: 97 77 01                 a0 = a0 << 0x1
 10903: 7b 17 10                 u64 [sp + 0x10] = a0
 10906: 95 17 48                 a0 = sp + 0x48
 10909: 7b 67 18                 u64 [s1 + 0x18] = a0
 10912: 82 18 30                 a1 = u64 [sp + 0x30]
 10915: 7b 68 20                 u64 [s1 + 0x20] = a1
 10918: 95 17 ff 07              a0 = sp + 0x7ff
 10922: 95 77 19 04              a0 = a0 + 0x419
 10926: 7b 67 28                 u64 [s1 + 0x28] = a0
 10929: 7b 68 30                 u64 [s1 + 0x30] = a1
 10932: 33 07 50 0e 01           a0 = 0x10e50
 10937: 7b 17 98 01              u64 [sp + 0x198] = a0
 10941: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10946: 49 21 b8 01              u64 [sp + 440] = 0
 10950: 95 17 ff 07              a0 = sp + 0x7ff
 10954: 95 77 b1 03              a0 = a0 + 0x3b1
 10958: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10962: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10967: 95 17 ff 07              a0 = sp + 0x7ff
 10971: 95 77 e1 03              a0 = a0 + 0x3e1
 10975: 95 18 98 01              a1 = sp + 0x198
 10979: 50 20 1c 01 9a 0c        ra = 284, jump @751
      :                          @555 [@dyn 142]
 10985: 82 65 50                 s0 = u64 [s1 + 0x50]
 10988: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10991: 95 17 ff 07              a0 = sp + 0x7ff
 10995: 95 77 99 03              a0 = a0 + 0x399
 10999: 82 76 48                 s1 = u64 [a0 + 0x48]
 11002: 82 17 10                 a0 = u64 [sp + 0x10]
 11005: 33 08                    a1 = 0
 11007: 33 09                    a2 = 0
 11009: 64 5a                    a3 = s0
 11011: 33 00 1e 01              ra = 0x11e
 11015: 0a 64                    ecalli 100 // 'log'
 11017: 01                       fallthrough
      :                          @556 [@dyn 143]
 11018: 82 17 38                 a0 = u64 [sp + 0x38]
 11021: c8 67 07                 a0 = a0 + s1
 11024: 53 27 00 f0 23           jump @562 if a0 <u 4294963200
      :                          @557
 11029: 33 07 40 00 03           a0 = 0x30040
 11034: 95 77 00 10              a0 = a0 + 0x1000
 11038: 01                       fallthrough
      :                          @558
 11039: 82 78                    a1 = u64 [a0]
 11041: c9 87 09                 a2 = a0 - a1
 11044: ab 59 0f                 jump @562 if a2 != s0
      :                          @559
 11047: c9 68 09                 a2 = a1 - s1
 11050: 01                       fallthrough
      :                          @560
 11051: 82 7a                    a3 = u64 [a0]
 11053: ab 8a f2                 jump @558 if a3 != a1
      :                          @561
 11056: 7b 79                    u64 [a0] = a2
 11058: 01                       fallthrough
      :                          @562
 11059: 95 16 ff 07              s1 = sp + 0x7ff
 11063: 95 66 99 03              s1 = s1 + 0x399
 11067: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11071: 33 08 01                 a1 = 0x1
 11074: 50 20 20 01 97 19        ra = 288, jump @1029
      :                          @563 [@dyn 144]
 11080: 95 17 58                 a0 = sp + 0x58
 11083: 33 08 03                 a1 = 0x3
 11086: 0a 0d                    ecalli 13 // 'query'
 11088: 95 18 48                 a1 = sp + 0x48
 11091: 7b 68 18                 u64 [s1 + 0x18] = a1
 11094: 33 08 a0 0c 01           a1 = 0x10ca0
 11099: 7b 18 98 01              u64 [sp + 0x198] = a1
 11103: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11108: 49 21 b8 01              u64 [sp + 440] = 0
 11112: 95 18 ff 07              a1 = sp + 0x7ff
 11116: 95 88 b1 03              a1 = a1 + 0x3b1
 11120: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 11124: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11129: 7b 67                    u64 [s1] = a0
 11131: 8e 77                    a0 = a0 >u 0
 11133: 97 77 01                 a0 = a0 << 0x1
 11136: 7b 17 10                 u64 [sp + 0x10] = a0
 11139: 82 17 30                 a0 = u64 [sp + 0x30]
 11142: 7b 67 20                 u64 [s1 + 0x20] = a0
 11145: 7b 66 28                 u64 [s1 + 0x28] = s1
 11148: 7b 67 30                 u64 [s1 + 0x30] = a0
 11151: 95 17 ff 07              a0 = sp + 0x7ff
 11155: 95 77 e1 03              a0 = a0 + 0x3e1
 11159: 95 18 98 01              a1 = sp + 0x198
 11163: 50 20 22 01 e2 0b        ra = 290, jump @751
      :                          @564 [@dyn 145]
 11169: 82 65 50                 s0 = u64 [s1 + 0x50]
 11172: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11175: 82 66 48                 s1 = u64 [s1 + 0x48]
 11178: 82 17 10                 a0 = u64 [sp + 0x10]
 11181: 33 08                    a1 = 0
 11183: 33 09                    a2 = 0
 11185: 64 5a                    a3 = s0
 11187: 33 00 24 01              ra = 0x124
 11191: 0a 64                    ecalli 100 // 'log'
 11193: 01                       fallthrough
      :                          @565 [@dyn 146]
 11194: 82 17 38                 a0 = u64 [sp + 0x38]
 11197: c8 67 07                 a0 = a0 + s1
 11200: 53 27 00 f0 23           jump @571 if a0 <u 4294963200
      :                          @566
 11205: 33 07 40 00 03           a0 = 0x30040
 11210: 95 77 00 10              a0 = a0 + 0x1000
 11214: 01                       fallthrough
      :                          @567
 11215: 82 78                    a1 = u64 [a0]
 11217: c9 87 09                 a2 = a0 - a1
 11220: ab 59 0f                 jump @571 if a2 != s0
      :                          @568
 11223: c9 68 09                 a2 = a1 - s1
 11226: 01                       fallthrough
      :                          @569
 11227: 82 7a                    a3 = u64 [a0]
 11229: ab 8a f2                 jump @567 if a3 != a1
      :                          @570
 11232: 7b 79                    u64 [a0] = a2
 11234: 01                       fallthrough
      :                          @571
 11235: 95 16 ff 07              s1 = sp + 0x7ff
 11239: 95 66 99 03              s1 = s1 + 0x399
 11243: 82 67                    a0 = u64 [s1]
 11245: 33 08 02                 a1 = 0x2
 11248: 33 00 56 01              ra = 0x156
 11252: 28 e5 18                 jump @1029
      :                          @572 [@dyn 147]
 11255: 33 05 03                 s0 = 0x3
 11258: 95 17 58                 a0 = sp + 0x58
 11261: 33 08 03                 a1 = 0x3
 11264: 33 09 8f 03              a2 = 0x38f
 11268: 33 0a 8f 03              a3 = 0x38f
 11272: 0a 09                    ecalli 9 // 'new'
 11274: 8e 78                    a1 = a0 >u 0
 11276: 7b 67 70                 u64 [s1 + 0x70] = a0
 11279: 97 88 01                 a1 = a1 << 0x1
 11282: 7b 18 10                 u64 [sp + 0x10] = a1
 11285: 95 17 48                 a0 = sp + 0x48
 11288: 7b 67 18                 u64 [s1 + 0x18] = a0
 11291: 82 18 30                 a1 = u64 [sp + 0x30]
 11294: 7b 68 20                 u64 [s1 + 0x20] = a1
 11297: 95 17 ff 07              a0 = sp + 0x7ff
 11301: 95 77 09 04              a0 = a0 + 0x409
 11305: 7b 67 28                 u64 [s1 + 0x28] = a0
 11308: 7b 68 30                 u64 [s1 + 0x30] = a1
 11311: 33 07 80 0e 01           a0 = 0x10e80
 11316: 7b 17 98 01              u64 [sp + 0x198] = a0
 11320: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 11324: 49 21 b8 01              u64 [sp + 440] = 0
 11328: 95 17 ff 07              a0 = sp + 0x7ff
 11332: 95 77 b1 03              a0 = a0 + 0x3b1
 11336: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11340: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11345: 95 17 ff 07              a0 = sp + 0x7ff
 11349: 95 77 e1 03              a0 = a0 + 0x3e1
 11353: 95 18 98 01              a1 = sp + 0x198
 11357: 50 20 28 01 20 0b        ra = 296, jump @751
      :                          @573 [@dyn 148]
 11363: 95 17 ff 07              a0 = sp + 0x7ff
 11367: 95 77 99 03              a0 = a0 + 0x399
 11371: 82 76 50                 s1 = u64 [a0 + 0x50]
 11374: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11377: 82 75 48                 s0 = u64 [a0 + 0x48]
 11380: 82 17 10                 a0 = u64 [sp + 0x10]
 11383: 33 08                    a1 = 0
 11385: 33 09                    a2 = 0
 11387: 64 6a                    a3 = s1
 11389: 33 00 2a 01              ra = 0x12a
 11393: 0a 64                    ecalli 100 // 'log'
 11395: 01                       fallthrough
      :                          @574 [@dyn 149]
 11396: 82 17 38                 a0 = u64 [sp + 0x38]
 11399: c8 57 07                 a0 = a0 + s0
 11402: 53 27 00 f0 23           jump @580 if a0 <u 4294963200
      :                          @575
 11407: 33 07 40 00 03           a0 = 0x30040
 11412: 95 77 00 10              a0 = a0 + 0x1000
 11416: 01                       fallthrough
      :                          @576
 11417: 82 78                    a1 = u64 [a0]
 11419: c9 87 09                 a2 = a0 - a1
 11422: ab 69 0f                 jump @580 if a2 != s1
      :                          @577
 11425: c9 58 09                 a2 = a1 - s0
 11428: 01                       fallthrough
      :                          @578
 11429: 82 7a                    a3 = u64 [a0]
 11431: ab 8a f2                 jump @576 if a3 != a1
      :                          @579
 11434: 7b 79                    u64 [a0] = a2
 11436: 01                       fallthrough
      :                          @580
 11437: 95 16 ff 07              s1 = sp + 0x7ff
 11441: 95 66 99 03              s1 = s1 + 0x399
 11445: 82 67 70                 a0 = u64 [s1 + 0x70]
 11448: 33 08 01                 a1 = 0x1
 11451: 50 20 2c 01 1e 18        ra = 300, jump @1029
      :                          @581 [@dyn 150]
 11457: 95 17 58                 a0 = sp + 0x58
 11460: 33 08 8f 03              a1 = 0x38f
 11464: 33 09 8f 03              a2 = 0x38f
 11468: 0a 0a                    ecalli 10 // 'upgrade'
 11470: 95 18 48                 a1 = sp + 0x48
 11473: 7b 68 18                 u64 [s1 + 0x18] = a1
 11476: 95 18 ff 07              a1 = sp + 0x7ff
 11480: 95 88 11 04              a1 = a1 + 0x411
 11484: 7b 68 28                 u64 [s1 + 0x28] = a1
 11487: 33 08 b0 0e 01           a1 = 0x10eb0
 11492: 7b 18 98 01              u64 [sp + 0x198] = a1
 11496: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11501: 49 21 b8 01              u64 [sp + 440] = 0
 11505: 95 18 ff 07              a1 = sp + 0x7ff
 11509: 95 88 b1 03              a1 = a1 + 0x3b1
 11513: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 11517: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11522: 7b 67 78                 u64 [s1 + 0x78] = a0
 11525: 88 77 01                 a0 = a0 <u 0x1
 11528: 97 77 01                 a0 = a0 << 0x1
 11531: 7b 17 10                 u64 [sp + 0x10] = a0
 11534: 82 17 30                 a0 = u64 [sp + 0x30]
 11537: 7b 67 20                 u64 [s1 + 0x20] = a0
 11540: 7b 67 30                 u64 [s1 + 0x30] = a0
 11543: 95 17 ff 07              a0 = sp + 0x7ff
 11547: 95 77 e1 03              a0 = a0 + 0x3e1
 11551: 95 18 98 01              a1 = sp + 0x198
 11555: 50 20 2e 01 5a 0a        ra = 302, jump @751
      :                          @582 [@dyn 151]
 11561: 82 65 50                 s0 = u64 [s1 + 0x50]
 11564: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11567: 82 66 48                 s1 = u64 [s1 + 0x48]
 11570: 82 17 10                 a0 = u64 [sp + 0x10]
 11573: 33 08                    a1 = 0
 11575: 33 09                    a2 = 0
 11577: 64 5a                    a3 = s0
 11579: 33 00 30 01              ra = 0x130
 11583: 0a 64                    ecalli 100 // 'log'
 11585: 01                       fallthrough
      :                          @583 [@dyn 152]
 11586: 82 17 38                 a0 = u64 [sp + 0x38]
 11589: c8 67 07                 a0 = a0 + s1
 11592: 53 27 00 f0 23           jump @589 if a0 <u 4294963200
      :                          @584
 11597: 33 07 40 00 03           a0 = 0x30040
 11602: 95 77 00 10              a0 = a0 + 0x1000
 11606: 01                       fallthrough
      :                          @585
 11607: 82 78                    a1 = u64 [a0]
 11609: c9 87 09                 a2 = a0 - a1
 11612: ab 59 0f                 jump @589 if a2 != s0
      :                          @586
 11615: c9 68 09                 a2 = a1 - s1
 11618: 01                       fallthrough
      :                          @587
 11619: 82 7a                    a3 = u64 [a0]
 11621: ab 8a f2                 jump @585 if a3 != a1
      :                          @588
 11624: 7b 79                    u64 [a0] = a2
 11626: 01                       fallthrough
      :                          @589
 11627: 95 16 ff 07              s1 = sp + 0x7ff
 11631: 95 66 99 03              s1 = s1 + 0x399
 11635: 82 67 78                 a0 = u64 [s1 + 0x78]
 11638: 33 08 02                 a1 = 0x2
 11641: 33 05 02                 s0 = 0x2
 11644: 50 20 32 01 5d 17        ra = 306, jump @1029
      :                          @590 [@dyn 153]
 11650: 48 06 8f 03              u32 [s1 + 0] = 0x38f
 11654: 48 16 08                 u32 [s1 + 8] = 0
 11657: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
 11662: 33 08 01                 a1 = 0x1
 11665: 33 09 01                 a2 = 0x1
 11668: 95 1a ff 07              a3 = sp + 0x7ff
 11672: 95 aa 99 03              a3 = a3 + 0x399
 11676: 33 0b 01                 a4 = 0x1
 11679: 33 07                    a0 = 0
 11681: 0a 05                    ecalli 5 // 'bless'
 11683: 95 18 48                 a1 = sp + 0x48
 11686: 7b 68 18                 u64 [s1 + 0x18] = a1
 11689: 95 18 ff 07              a1 = sp + 0x7ff
 11693: 95 88 19 04              a1 = a1 + 0x419
 11697: 7b 68 28                 u64 [s1 + 0x28] = a1
 11700: 33 08 e0 0e 01           a1 = 0x10ee0
 11705: 7b 18 98 01              u64 [sp + 0x198] = a1
 11709: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11714: 49 21 b8 01              u64 [sp + 440] = 0
 11718: 95 18 ff 07              a1 = sp + 0x7ff
 11722: 95 88 b1 03              a1 = a1 + 0x3b1
 11726: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 11730: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11734: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11738: 88 77 01                 a0 = a0 <u 0x1
 11741: 97 77 01                 a0 = a0 << 0x1
 11744: 7b 17 10                 u64 [sp + 0x10] = a0
 11747: 82 17 30                 a0 = u64 [sp + 0x30]
 11750: 7b 67 20                 u64 [s1 + 0x20] = a0
 11753: 7b 67 30                 u64 [s1 + 0x30] = a0
 11756: 95 17 ff 07              a0 = sp + 0x7ff
 11760: 95 77 e1 03              a0 = a0 + 0x3e1
 11764: 95 18 98 01              a1 = sp + 0x198
 11768: 50 20 34 01 85 09        ra = 308, jump @751
      :                          @591 [@dyn 154]
 11774: 82 65 50                 s0 = u64 [s1 + 0x50]
 11777: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11780: 82 66 48                 s1 = u64 [s1 + 0x48]
 11783: 82 17 10                 a0 = u64 [sp + 0x10]
 11786: 33 08                    a1 = 0
 11788: 33 09                    a2 = 0
 11790: 64 5a                    a3 = s0
 11792: 33 00 36 01              ra = 0x136
 11796: 0a 64                    ecalli 100 // 'log'
 11798: 01                       fallthrough
      :                          @592 [@dyn 155]
 11799: 82 17 38                 a0 = u64 [sp + 0x38]
 11802: c8 67 07                 a0 = a0 + s1
 11805: 53 27 00 f0 23           jump @598 if a0 <u 4294963200
      :                          @593
 11810: 33 07 40 00 03           a0 = 0x30040
 11815: 95 77 00 10              a0 = a0 + 0x1000
 11819: 01                       fallthrough
      :                          @594
 11820: 82 78                    a1 = u64 [a0]
 11822: c9 87 09                 a2 = a0 - a1
 11825: ab 59 0f                 jump @598 if a2 != s0
      :                          @595
 11828: c9 68 09                 a2 = a1 - s1
 11831: 01                       fallthrough
      :                          @596
 11832: 82 7a                    a3 = u64 [a0]
 11834: ab 8a f2                 jump @594 if a3 != a1
      :                          @597
 11837: 7b 79                    u64 [a0] = a2
 11839: 01                       fallthrough
      :                          @598
 11840: 95 16 ff 07              s1 = sp + 0x7ff
 11844: 95 66 99 03              s1 = s1 + 0x399
 11848: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11852: 33 08 05                 a1 = 0x5
 11855: 33 00 56 01              ra = 0x156
 11859: 28 86 16                 jump @1029
      :                          @599 [@dyn 156]
 11862: 33 05 03                 s0 = 0x3
 11865: 95 17 55                 a0 = sp + 0x55
 11868: 33 08 03                 a1 = 0x3
 11871: 33 09                    a2 = 0
 11873: 33 0a                    a3 = 0
 11875: 0a 03                    ecalli 3 // 'write'
 11877: 7b 67 68                 u64 [s1 + 0x68] = a0
 11880: 95 77 01                 a0 = a0 + 0x1
 11883: 88 77 01                 a0 = a0 <u 0x1
 11886: 97 77 01                 a0 = a0 << 0x1
 11889: 7b 17 10                 u64 [sp + 0x10] = a0
 11892: 95 17 48                 a0 = sp + 0x48
 11895: 7b 67 18                 u64 [s1 + 0x18] = a0
 11898: 82 18 30                 a1 = u64 [sp + 0x30]
 11901: 7b 68 20                 u64 [s1 + 0x20] = a1
 11904: 95 17 ff 07              a0 = sp + 0x7ff
 11908: 95 77 01 04              a0 = a0 + 0x401
 11912: 7b 67 28                 u64 [s1 + 0x28] = a0
 11915: 7b 68 30                 u64 [s1 + 0x30] = a1
 11918: 33 07 10 0f 01           a0 = 0x10f10
 11923: 7b 17 98 01              u64 [sp + 0x198] = a0
 11927: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
 11931: 49 21 b8 01              u64 [sp + 440] = 0
 11935: 95 17 ff 07              a0 = sp + 0x7ff
 11939: 95 77 b1 03              a0 = a0 + 0x3b1
 11943: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11947: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11952: 95 17 ff 07              a0 = sp + 0x7ff
 11956: 95 77 e1 03              a0 = a0 + 0x3e1
 11960: 95 18 98 01              a1 = sp + 0x198
 11964: 50 20 3a 01 c1 08        ra = 314, jump @751
      :                          @600 [@dyn 157]
 11970: 82 65 50                 s0 = u64 [s1 + 0x50]
 11973: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11976: 95 17 ff 07              a0 = sp + 0x7ff
 11980: 95 77 99 03              a0 = a0 + 0x399
 11984: 82 76 48                 s1 = u64 [a0 + 0x48]
 11987: 82 17 10                 a0 = u64 [sp + 0x10]
 11990: 33 08                    a1 = 0
 11992: 33 09                    a2 = 0
 11994: 64 5a                    a3 = s0
 11996: 33 00 3c 01              ra = 0x13c
 12000: 0a 64                    ecalli 100 // 'log'
 12002: 01                       fallthrough
      :                          @601 [@dyn 158]
 12003: 82 17 38                 a0 = u64 [sp + 0x38]
 12006: c8 67 07                 a0 = a0 + s1
 12009: 33 08 40 00 03           a1 = 0x30040
 12014: 7b 18 10                 u64 [sp + 0x10] = a1
 12017: 53 27 00 f0 21           jump @607 if a0 <u 4294963200
      :                          @602
 12022: 82 18 10                 a1 = u64 [sp + 0x10]
 12025: 95 87 00 10              a0 = a1 + 0x1000
 12029: 01                       fallthrough
      :                          @603
 12030: 82 78                    a1 = u64 [a0]
 12032: c9 87 09                 a2 = a0 - a1
 12035: ab 59 0f                 jump @607 if a2 != s0
      :                          @604
 12038: c9 68 09                 a2 = a1 - s1
 12041: 01                       fallthrough
      :                          @605
 12042: 82 7a                    a3 = u64 [a0]
 12044: ab 8a f2                 jump @603 if a3 != a1
      :                          @606
 12047: 7b 79                    u64 [a0] = a2
 12049: 01                       fallthrough
      :                          @607
 12050: 95 16 ff 07              s1 = sp + 0x7ff
 12054: 95 66 99 03              s1 = s1 + 0x399
 12058: 82 67 68                 a0 = u64 [s1 + 0x68]
 12061: 33 08 01                 a1 = 0x1
 12064: 50 20 3e 01 b9 15        ra = 318, jump @1029
      :                          @608 [@dyn 159]
 12070: 95 17 55                 a0 = sp + 0x55
 12073: 33 08 03                 a1 = 0x3
 12076: 95 19 52                 a2 = sp + 0x52
 12079: 33 0a 03                 a3 = 0x3
 12082: 0a 03                    ecalli 3 // 'write'
 12084: 95 18 48                 a1 = sp + 0x48
 12087: 7b 68 18                 u64 [s1 + 0x18] = a1
 12090: 95 18 ff 07              a1 = sp + 0x7ff
 12094: 95 88 09 04              a1 = a1 + 0x409
 12098: 7b 68 28                 u64 [s1 + 0x28] = a1
 12101: 33 08 40 0f 01           a1 = 0x10f40
 12106: 7b 18 98 01              u64 [sp + 0x198] = a1
 12110: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12115: 49 21 b8 01              u64 [sp + 440] = 0
 12119: 95 18 ff 07              a1 = sp + 0x7ff
 12123: 95 88 b1 03              a1 = a1 + 0x3b1
 12127: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 12131: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12136: 7b 67 70                 u64 [s1 + 0x70] = a0
 12139: 95 77 01                 a0 = a0 + 0x1
 12142: 88 77 01                 a0 = a0 <u 0x1
 12145: 97 77 01                 a0 = a0 << 0x1
 12148: 7b 17 08                 u64 [sp + 0x8] = a0
 12151: 82 17 30                 a0 = u64 [sp + 0x30]
 12154: 7b 67 20                 u64 [s1 + 0x20] = a0
 12157: 7b 67 30                 u64 [s1 + 0x30] = a0
 12160: 95 17 ff 07              a0 = sp + 0x7ff
 12164: 95 77 e1 03              a0 = a0 + 0x3e1
 12168: 95 18 98 01              a1 = sp + 0x198
 12172: 50 20 40 01 f1 07        ra = 320, jump @751
      :                          @609 [@dyn 160]
 12178: 82 65 50                 s0 = u64 [s1 + 0x50]
 12181: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12184: 82 66 48                 s1 = u64 [s1 + 0x48]
 12187: 82 17 08                 a0 = u64 [sp + 0x8]
 12190: 33 08                    a1 = 0
 12192: 33 09                    a2 = 0
 12194: 64 5a                    a3 = s0
 12196: 33 00 42 01              ra = 0x142
 12200: 0a 64                    ecalli 100 // 'log'
 12202: 01                       fallthrough
      :                          @610 [@dyn 161]
 12203: 82 17 38                 a0 = u64 [sp + 0x38]
 12206: c8 67 07                 a0 = a0 + s1
 12209: 53 27 00 f0 21           jump @616 if a0 <u 4294963200
      :                          @611
 12214: 82 18 10                 a1 = u64 [sp + 0x10]
 12217: 95 87 00 10              a0 = a1 + 0x1000
 12221: 01                       fallthrough
      :                          @612
 12222: 82 78                    a1 = u64 [a0]
 12224: c9 87 09                 a2 = a0 - a1
 12227: ab 59 0f                 jump @616 if a2 != s0
      :                          @613
 12230: c9 68 09                 a2 = a1 - s1
 12233: 01                       fallthrough
      :                          @614
 12234: 82 7a                    a3 = u64 [a0]
 12236: ab 8a f2                 jump @612 if a3 != a1
      :                          @615
 12239: 7b 79                    u64 [a0] = a2
 12241: 01                       fallthrough
      :                          @616
 12242: 95 15 ff 07              s0 = sp + 0x7ff
 12246: 95 55 99 03              s0 = s0 + 0x399
 12250: 82 57 70                 a0 = u64 [s0 + 0x70]
 12253: 33 08 02                 a1 = 0x2
 12256: 33 06 02                 s1 = 0x2
 12259: 50 20 44 01 f6 14        ra = 324, jump @1029
      :                          @617 [@dyn 162]
 12265: 95 17 55                 a0 = sp + 0x55
 12268: 33 08 03                 a1 = 0x3
 12271: 33 09                    a2 = 0
 12273: 33 0a                    a3 = 0
 12275: 0a 03                    ecalli 3 // 'write'
 12277: 7b 57 78                 u64 [s0 + 0x78] = a0
 12280: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 12283: 88 77 01                 a0 = a0 <u 0x1
 12286: 97 77 01                 a0 = a0 << 0x1
 12289: 7b 17 08                 u64 [sp + 0x8] = a0
 12292: 95 17 48                 a0 = sp + 0x48
 12295: 7b 57 18                 u64 [s0 + 0x18] = a0
 12298: 82 18 30                 a1 = u64 [sp + 0x30]
 12301: 7b 58 20                 u64 [s0 + 0x20] = a1
 12304: 95 17 ff 07              a0 = sp + 0x7ff
 12308: 95 77 11 04              a0 = a0 + 0x411
 12312: 7b 57 28                 u64 [s0 + 0x28] = a0
 12315: 7b 58 30                 u64 [s0 + 0x30] = a1
 12318: 33 07 70 0f 01           a0 = 0x10f70
 12323: 7b 17 98 01              u64 [sp + 0x198] = a0
 12327: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12332: 49 21 b8 01              u64 [sp + 440] = 0
 12336: 95 17 ff 07              a0 = sp + 0x7ff
 12340: 95 77 b1 03              a0 = a0 + 0x3b1
 12344: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12348: 7b 16 b0 01              u64 [sp + 0x1b0] = s1
 12352: 95 17 ff 07              a0 = sp + 0x7ff
 12356: 95 77 e1 03              a0 = a0 + 0x3e1
 12360: 95 18 98 01              a1 = sp + 0x198
 12364: 50 20 46 01 31 07        ra = 326, jump @751
      :                          @618 [@dyn 163]
 12370: 82 56 50                 s1 = u64 [s0 + 0x50]
 12373: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12376: 82 55 48                 s0 = u64 [s0 + 0x48]
 12379: 82 17 08                 a0 = u64 [sp + 0x8]
 12382: 33 08                    a1 = 0
 12384: 33 09                    a2 = 0
 12386: 64 6a                    a3 = s1
 12388: 33 00 48 01              ra = 0x148
 12392: 0a 64                    ecalli 100 // 'log'
 12394: 01                       fallthrough
      :                          @619 [@dyn 164]
 12395: 82 17 38                 a0 = u64 [sp + 0x38]
 12398: c8 57 07                 a0 = a0 + s0
 12401: 53 27 00 f0 21           jump @625 if a0 <u 4294963200
      :                          @620
 12406: 82 18 10                 a1 = u64 [sp + 0x10]
 12409: 95 87 00 10              a0 = a1 + 0x1000
 12413: 01                       fallthrough
      :                          @621
 12414: 82 78                    a1 = u64 [a0]
 12416: c9 87 09                 a2 = a0 - a1
 12419: ab 69 0f                 jump @625 if a2 != s1
      :                          @622
 12422: c9 58 09                 a2 = a1 - s0
 12425: 01                       fallthrough
      :                          @623
 12426: 82 7a                    a3 = u64 [a0]
 12428: ab 8a f2                 jump @621 if a3 != a1
      :                          @624
 12431: 7b 79                    u64 [a0] = a2
 12433: 01                       fallthrough
      :                          @625
 12434: 95 16 ff 07              s1 = sp + 0x7ff
 12438: 95 66 99 03              s1 = s1 + 0x399
 12442: 82 67 78                 a0 = u64 [s1 + 0x78]
 12445: 33 08 05                 a1 = 0x5
 12448: 50 20 4a 01 39 14        ra = 330, jump @1029
      :                          @626 [@dyn 165]
 12454: 95 18 55                 a1 = sp + 0x55
 12457: 33 09 03                 a2 = 0x3
 12460: 95 1a 98 00              a3 = sp + 0x98
 12464: 33 0c 00 01              a5 = 0x100
 12468: 82 17 28                 a0 = u64 [sp + 0x28]
 12471: 33 0b                    a4 = 0
 12473: 0a 02                    ecalli 2 // 'read'
 12475: 95 18 48                 a1 = sp + 0x48
 12478: 7b 68 18                 u64 [s1 + 0x18] = a1
 12481: 95 18 ff 07              a1 = sp + 0x7ff
 12485: 95 88 19 04              a1 = a1 + 0x419
 12489: 7b 68 28                 u64 [s1 + 0x28] = a1
 12492: 33 08 a0 0f 01           a1 = 0x10fa0
 12497: 7b 18 98 01              u64 [sp + 0x198] = a1
 12501: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12506: 49 21 b8 01              u64 [sp + 440] = 0
 12510: 95 18 ff 07              a1 = sp + 0x7ff
 12514: 95 88 b1 03              a1 = a1 + 0x3b1
 12518: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 12522: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12527: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12531: 95 77 01                 a0 = a0 + 0x1
 12534: 88 77 01                 a0 = a0 <u 0x1
 12537: 97 77 01                 a0 = a0 << 0x1
 12540: 7b 17 08                 u64 [sp + 0x8] = a0
 12543: 82 17 30                 a0 = u64 [sp + 0x30]
 12546: 7b 67 20                 u64 [s1 + 0x20] = a0
 12549: 7b 67 30                 u64 [s1 + 0x30] = a0
 12552: 95 17 ff 07              a0 = sp + 0x7ff
 12556: 95 77 e1 03              a0 = a0 + 0x3e1
 12560: 95 18 98 01              a1 = sp + 0x198
 12564: 50 20 4c 01 69 06        ra = 332, jump @751
      :                          @627 [@dyn 166]
 12570: 82 65 50                 s0 = u64 [s1 + 0x50]
 12573: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12576: 82 66 48                 s1 = u64 [s1 + 0x48]
 12579: 82 17 08                 a0 = u64 [sp + 0x8]
 12582: 33 08                    a1 = 0
 12584: 33 09                    a2 = 0
 12586: 64 5a                    a3 = s0
 12588: 33 00 4e 01              ra = 0x14e
 12592: 0a 64                    ecalli 100 // 'log'
 12594: 01                       fallthrough
      :                          @628 [@dyn 167]
 12595: 82 17 38                 a0 = u64 [sp + 0x38]
 12598: c8 67 07                 a0 = a0 + s1
 12601: 53 27 00 f0 21           jump @634 if a0 <u 4294963200
      :                          @629
 12606: 82 18 10                 a1 = u64 [sp + 0x10]
 12609: 95 87 00 10              a0 = a1 + 0x1000
 12613: 01                       fallthrough
      :                          @630
 12614: 82 78                    a1 = u64 [a0]
 12616: c9 87 09                 a2 = a0 - a1
 12619: ab 59 0f                 jump @634 if a2 != s0
      :                          @631
 12622: c9 68 09                 a2 = a1 - s1
 12625: 01                       fallthrough
      :                          @632
 12626: 82 7a                    a3 = u64 [a0]
 12628: ab 8a f2                 jump @630 if a3 != a1
      :                          @633
 12631: 7b 79                    u64 [a0] = a2
 12633: 01                       fallthrough
      :                          @634
 12634: 95 16 ff 07              s1 = sp + 0x7ff
 12638: 95 66 99 03              s1 = s1 + 0x399
 12642: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12646: 33 08 06                 a1 = 0x6
 12649: 50 20 50 01 70 13        ra = 336, jump @1029
      :                          @635 [@dyn 168]
 12655: 95 17 55                 a0 = sp + 0x55
 12658: 33 08 03                 a1 = 0x3
 12661: 33 09                    a2 = 0
 12663: 33 0a                    a3 = 0
 12665: 0a 03                    ecalli 3 // 'write'
 12667: 95 18 48                 a1 = sp + 0x48
 12670: 7b 68 18                 u64 [s1 + 0x18] = a1
 12673: 33 08 d0 0f 01           a1 = 0x10fd0
 12678: 7b 18 98 01              u64 [sp + 0x198] = a1
 12682: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12687: 49 21 b8 01              u64 [sp + 440] = 0
 12691: 95 18 ff 07              a1 = sp + 0x7ff
 12695: 95 88 b1 03              a1 = a1 + 0x3b1
 12699: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
 12703: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12708: 7b 67                    u64 [s1] = a0
 12710: 95 77 01                 a0 = a0 + 0x1
 12713: 88 77 01                 a0 = a0 <u 0x1
 12716: 97 77 01                 a0 = a0 << 0x1
 12719: 7b 17 08                 u64 [sp + 0x8] = a0
 12722: 82 17 30                 a0 = u64 [sp + 0x30]
 12725: 7b 67 20                 u64 [s1 + 0x20] = a0
 12728: 7b 66 28                 u64 [s1 + 0x28] = s1
 12731: 7b 67 30                 u64 [s1 + 0x30] = a0
 12734: 95 17 ff 07              a0 = sp + 0x7ff
 12738: 95 77 e1 03              a0 = a0 + 0x3e1
 12742: 95 18 98 01              a1 = sp + 0x198
 12746: 50 20 52 01 b3 05        ra = 338, jump @751
      :                          @636 [@dyn 169]
 12752: 82 65 50                 s0 = u64 [s1 + 0x50]
 12755: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12758: 82 66 48                 s1 = u64 [s1 + 0x48]
 12761: 82 17 08                 a0 = u64 [sp + 0x8]
 12764: 33 08                    a1 = 0
 12766: 33 09                    a2 = 0
 12768: 64 5a                    a3 = s0
 12770: 33 00 54 01              ra = 0x154
 12774: 0a 64                    ecalli 100 // 'log'
 12776: 01                       fallthrough
      :                          @637 [@dyn 170]
 12777: 82 17 38                 a0 = u64 [sp + 0x38]
 12780: c8 67 07                 a0 = a0 + s1
 12783: 53 27 00 f0 21           jump @643 if a0 <u 4294963200
      :                          @638
 12788: 82 18 10                 a1 = u64 [sp + 0x10]
 12791: 95 87 00 10              a0 = a1 + 0x1000
 12795: 01                       fallthrough
      :                          @639
 12796: 82 78                    a1 = u64 [a0]
 12798: c9 87 09                 a2 = a0 - a1
 12801: ab 59 0f                 jump @643 if a2 != s0
      :                          @640
 12804: c9 68 09                 a2 = a1 - s1
 12807: 01                       fallthrough
      :                          @641
 12808: 82 7a                    a3 = u64 [a0]
 12810: ab 8a f2                 jump @639 if a3 != a1
      :                          @642
 12813: 7b 79                    u64 [a0] = a2
 12815: 01                       fallthrough
      :                          @643
 12816: 95 16 ff 07              s1 = sp + 0x7ff
 12820: 95 66 99 03              s1 = s1 + 0x399
 12824: 82 67                    a0 = u64 [s1]
 12826: 33 08 07                 a1 = 0x7
 12829: 50 20 56 01 bc 12        ra = 342, jump @1029
      :                          @644 [@dyn 171]
 12835: 82 15 28                 s0 = u64 [sp + 0x28]
 12838: 01                       fallthrough
      :                          @645
 12839: 95 18 98 00              a1 = sp + 0x98
 12843: 64 57                    a0 = s0
 12845: 0a 04                    ecalli 4 // 'info'
 12847: 64 75                    s0 = a0
 12849: 7b 67 78                 u64 [s1 + 0x78] = a0
 12852: 33 08 08                 a1 = 0x8
 12855: 50 20 58 01 a2 12        ra = 344, jump @1029
      :                          @646 [@dyn 172]
 12861: 88 57 01                 a0 = s0 <u 0x1
 12864: 97 77 01                 a0 = a0 << 0x1
 12867: 7b 17 28                 u64 [sp + 0x28] = a0
 12870: 95 17 48                 a0 = sp + 0x48
 12873: 7b 67 18                 u64 [s1 + 0x18] = a0
 12876: 82 18 30                 a1 = u64 [sp + 0x30]
 12879: 7b 68 20                 u64 [s1 + 0x20] = a1
 12882: 95 17 ff 07              a0 = sp + 0x7ff
 12886: 95 77 11 04              a0 = a0 + 0x411
 12890: 7b 67 28                 u64 [s1 + 0x28] = a0
 12893: 7b 68 30                 u64 [s1 + 0x30] = a1
 12896: 33 07 00 10 01           a0 = 0x11000
 12901: 7b 17 98 01              u64 [sp + 0x198] = a0
 12905: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12910: 49 21 b8 01              u64 [sp + 440] = 0
 12914: 95 17 ff 07              a0 = sp + 0x7ff
 12918: 95 77 b1 03              a0 = a0 + 0x3b1
 12922: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12926: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12931: 95 17 ff 07              a0 = sp + 0x7ff
 12935: 95 77 e1 03              a0 = a0 + 0x3e1
 12939: 95 18 98 01              a1 = sp + 0x198
 12943: 50 20 5a 01 ee 04        ra = 346, jump @751
      :                          @647 [@dyn 173]
 12949: 95 17 ff 07              a0 = sp + 0x7ff
 12953: 95 77 99 03              a0 = a0 + 0x399
 12957: 82 76 50                 s1 = u64 [a0 + 0x50]
 12960: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12963: 82 75 48                 s0 = u64 [a0 + 0x48]
 12966: 82 17 28                 a0 = u64 [sp + 0x28]
 12969: 33 08                    a1 = 0
 12971: 33 09                    a2 = 0
 12973: 64 6a                    a3 = s1
 12975: 33 00 5c 01              ra = 0x15c
 12979: 0a 64                    ecalli 100 // 'log'
 12981: 01                       fallthrough
      :                          @648 [@dyn 174]
 12982: 82 17 38                 a0 = u64 [sp + 0x38]
 12985: c8 57 07                 a0 = a0 + s0
 12988: 53 27 00 f0 25           jump @654 if a0 <u 4294963200
      :                          @649
 12993: 33 07 40 00 03           a0 = 0x30040
 12998: 95 77 00 10              a0 = a0 + 0x1000
 13002: 01                       fallthrough
      :                          @650
 13003: 82 78                    a1 = u64 [a0]
 13005: c9 87 09                 a2 = a0 - a1
 13008: ab 69 11                 jump @654 if a2 != s1
      :                          @651
 13011: c9 58 09                 a2 = a1 - s0
 13014: 01                       fallthrough
      :                          @652
 13015: 82 7a                    a3 = u64 [a0]
 13017: ab 8a f2                 jump @650 if a3 != a1
      :                          @653
 13020: 7b 79                    u64 [a0] = a2
 13022: 0a                       ecalli 0 // 'gas'
 13023: 28 04                    jump @655
      :                          @654
 13025: 0a                       ecalli 0 // 'gas'
 13026: 01                       fallthrough
      :                          @655
 13027: 95 16 ff 07              s1 = sp + 0x7ff
 13031: 95 66 99 03              s1 = s1 + 0x399
 13035: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13039: 33 08 09                 a1 = 0x9
 13042: 50 20 5e 01 e7 11        ra = 350, jump @1029
      :                          @656 [@dyn 175]
 13048: 95 17 ff 07              a0 = sp + 0x7ff
 13052: 95 77 19 04              a0 = a0 + 0x419
 13056: 7b 67 48                 u64 [s1 + 0x48] = a0
 13059: 82 17 30                 a0 = u64 [sp + 0x30]
 13062: 7b 67 50                 u64 [s1 + 0x50] = a0
 13065: 33 07 30 10 01           a0 = 0x11030
 13070: 7b 17 98 01              u64 [sp + 0x198] = a0
 13074: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 13079: 49 21 b8 01              u64 [sp + 440] = 0
 13083: 95 17 ff 07              a0 = sp + 0x7ff
 13087: 95 77 e1 03              a0 = a0 + 0x3e1
 13091: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 13095: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 13100: 95 17 ff 07              a0 = sp + 0x7ff
 13104: 95 77 b1 03              a0 = a0 + 0x3b1
 13108: 95 18 98 01              a1 = sp + 0x198
 13112: 50 20 60 01 45 04        ra = 352, jump @751
      :                          @657 [@dyn 176]
 13118: 82 65 20                 s0 = u64 [s1 + 0x20]
 13121: 82 6b 28                 a4 = u64 [s1 + 0x28]
 13124: 82 66 18                 s1 = u64 [s1 + 0x18]
 13127: 33 07 04                 a0 = 0x4
 13130: 33 08                    a1 = 0
 13132: 33 09                    a2 = 0
 13134: 64 5a                    a3 = s0
 13136: 33 00 62 01              ra = 0x162
 13140: 0a 64                    ecalli 100 // 'log'
 13142: 01                       fallthrough
      :                          @658 [@dyn 177]
 13143: 82 17 38                 a0 = u64 [sp + 0x38]
 13146: c8 67 07                 a0 = a0 + s1
 13149: 53 27 00 f0 25           jump @664 if a0 <u 4294963200
      :                          @659
 13154: 33 07 40 00 03           a0 = 0x30040
 13159: 95 77 00 10              a0 = a0 + 0x1000
 13163: 01                       fallthrough
      :                          @660
 13164: 82 78                    a1 = u64 [a0]
 13166: c9 87 09                 a2 = a0 - a1
 13169: ab 59 11                 jump @664 if a2 != s0
      :                          @661
 13172: c9 68 09                 a2 = a1 - s1
 13175: 01                       fallthrough
      :                          @662
 13176: 82 7a                    a3 = u64 [a0]
 13178: ab 8a f2                 jump @660 if a3 != a1
      :                          @663
 13181: 7b 79                    u64 [a0] = a2
 13183: 33 0b                    a4 = 0
 13185: 01                       fallthrough
      :                          @664
 13186: 82 19 20                 a2 = u64 [sp + 0x20]
 13189: 55 19 21 26 01           jump @683 if a2 >=u 33
      :                          @665
 13194: 33 07 19 00 03           a0 = 0x30019
 13199: 82 18 18                 a1 = u64 [sp + 0x18]
 13202: 50 20 64 01 60 06        ra = 356, jump @801
      :                          @666 [@dyn 178]
 13208: 82 18 48                 a1 = u64 [sp + 0x48]
 13211: 3a 09 00 00 03           a2 = u64 [0x30000]
 13216: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 13226: ca 78 07                 a0 = a1 * a0
 13229: 95 16 ff 07              s1 = sp + 0x7ff
 13233: 95 66 99 03              s1 = s1 + 0x399
 13237: ae 97 38                 jump @671 if a0 >=u a2
      :                          @667
 13240: 33 07 33                 a0 = 0x33
 13243: 51 18 09 27              jump @669 if a1 == 9
      :                          @668
 13247: 0a 08                    ecalli 8 // 'checkpoint'
 13249: 33 0a 08 05 01           a3 = 0x10508
 13254: 33 07 02                 a0 = 0x2
 13257: 33 0b 11                 a4 = 0x11
 13260: 33 08                    a1 = 0
 13262: 33 09                    a2 = 0
 13264: 0a 64                    ecalli 100 // 'log'
 13266: 82 17 48                 a0 = u64 [sp + 0x48]
 13269: 95 77 2a                 a0 = a0 + 0x2a
 13272: 33 08 07                 a1 = 0x7
 13275: 33 00 66 01              ra = 0x166
 13279: 28 fa 10                 jump @1029
      :                          @669
 13282: 33 08 07                 a1 = 0x7
 13285: 50 20 66 01 f4 10        ra = 358, jump @1029
      :                          @670 [@dyn 179]
 13291: 32 07                    jump [a0]
      :                          @671
 13293: 33 05 19 00 03           s0 = 0x30019
 13298: 33 07 19 00 03           a0 = 0x30019
 13303: 0a 10                    ecalli 16 // 'oyield'
 13305: 95 18 48                 a1 = sp + 0x48
 13308: 7b 68 18                 u64 [s1 + 0x18] = a1
 13311: 82 18 30                 a1 = u64 [sp + 0x30]
 13314: 7b 68 20                 u64 [s1 + 0x20] = a1
 13317: 7b 68 30                 u64 [s1 + 0x30] = a1
 13320: 33 08 50 10 01           a1 = 0x11050
 13325: 7b 18 98 01              u64 [sp + 0x198] = a1
 13329: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 13334: 49 21 b8 01              u64 [sp + 440] = 0
 13338: 95 19 ff 07              a2 = sp + 0x7ff
 13342: 95 99 b1 03              a2 = a2 + 0x3b1
 13346: 7b 19 a8 01              u64 [sp + 0x1a8] = a2
 13350: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 13355: 7b 67                    u64 [s1] = a0
 13357: 88 77 01                 a0 = a0 <u 0x1
 13360: 97 77 01                 a0 = a0 << 0x1
 13363: 7b 17 30                 u64 [sp + 0x30] = a0
 13366: 7b 66 28                 u64 [s1 + 0x28] = s1
 13369: 95 17 ff 07              a0 = sp + 0x7ff
 13373: 95 77 e1 03              a0 = a0 + 0x3e1
 13377: 95 18 98 01              a1 = sp + 0x198
 13381: 50 20 68 01 38 03        ra = 360, jump @751
      :                          @672 [@dyn 180]
 13387: 95 17 ff 07              a0 = sp + 0x7ff
 13391: 95 77 99 03              a0 = a0 + 0x399
 13395: 82 76 50                 s1 = u64 [a0 + 0x50]
 13398: 82 7b 58                 a4 = u64 [a0 + 0x58]
 13401: 82 77 48                 a0 = u64 [a0 + 0x48]
 13404: 7b 17 28                 u64 [sp + 0x28] = a0
 13407: 82 17 30                 a0 = u64 [sp + 0x30]
 13410: 33 08                    a1 = 0
 13412: 33 09                    a2 = 0
 13414: 64 6a                    a3 = s1
 13416: 33 00 6a 01              ra = 0x16a
 13420: 0a 64                    ecalli 100 // 'log'
 13422: 01                       fallthrough
      :                          @673 [@dyn 181]
 13423: 82 1c 28                 a5 = u64 [sp + 0x28]
 13426: 82 17 38                 a0 = u64 [sp + 0x38]
 13429: c8 c7 07                 a0 = a0 + a5
 13432: 53 27 00 f0 2a           jump @679 if a0 <u 4294963200
      :                          @674
 13437: 33 07 40 00 03           a0 = 0x30040
 13442: 95 77 00 10              a0 = a0 + 0x1000
 13446: 01                       fallthrough
      :                          @675
 13447: 82 78                    a1 = u64 [a0]
 13449: c9 87 09                 a2 = a0 - a1
 13452: ab 69 16                 jump @679 if a2 != s1
      :                          @676
 13455: c9 c8 09                 a2 = a1 - a5
 13458: 01                       fallthrough
      :                          @677
 13459: 82 7a                    a3 = u64 [a0]
 13461: ab 8a f2                 jump @675 if a3 != a1
      :                          @678
 13464: 7b 79                    u64 [a0] = a2
 13466: 33 0b                    a4 = 0
 13468: 33 08 20                 a1 = 0x20
 13471: 28 15 e2                 jump @316
      :                          @679
 13474: 33 08 20                 a1 = 0x20
 13477: 28 0f e2                 jump @316
      :                          @680
 13480: 00                       trap
      :                          @681
 13481: 00                       trap
      :                          @682
 13482: 00                       trap
      :                          @683
 13483: 00                       trap
      :                          @684
 13484: 00                       trap
      :                          @685 [export #2: 'on_transfer']
 13485: 95 11 88                 sp = sp + 0xffffffffffffff88
 13488: 7b 10 70                 u64 [sp + 0x70] = ra
 13491: 7b 15 68                 u64 [sp + 0x68] = s0
 13494: 7b 16 60                 u64 [sp + 0x60] = s1
 13497: 0a                       ecalli 0 // 'gas'
 13498: 7b 17                    u64 [sp] = a0
 13500: 33 08 04                 a1 = 0x4
 13503: 50 20 6c 01 1a 10        ra = 364, jump @1029
      :                          @686 [@dyn 182]
 13509: 64 17                    a0 = sp
 13511: 7b 17 50                 u64 [sp + 0x50] = a0
 13514: 33 07 1a                 a0 = 0x1a
 13517: 7b 17 58                 u64 [sp + 0x58] = a0
 13520: 33 07 70 10 01           a0 = 0x11070
 13525: 7b 17 20                 u64 [sp + 0x20] = a0
 13528: 49 11 28 02              u64 [sp + 40] = 0x2
 13532: 49 11 40                 u64 [sp + 64] = 0
 13535: 95 17 50                 a0 = sp + 0x50
 13538: 7b 17 30                 u64 [sp + 0x30] = a0
 13541: 49 11 38 01              u64 [sp + 56] = 0x1
 13545: 95 17 08                 a0 = sp + 0x8
 13548: 95 18 20                 a1 = sp + 0x20
 13551: 50 20 6e 01 8e 02        ra = 366, jump @751
      :                          @687 [@dyn 183]
 13557: 82 15 10                 s0 = u64 [sp + 0x10]
 13560: 82 1b 18                 a4 = u64 [sp + 0x18]
 13563: 82 16 08                 s1 = u64 [sp + 0x8]
 13566: 33 07 04                 a0 = 0x4
 13569: 33 08                    a1 = 0
 13571: 33 09                    a2 = 0
 13573: 64 5a                    a3 = s0
 13575: 33 00 70 01              ra = 0x170
 13579: 0a 64                    ecalli 100 // 'log'
 13581: 01                       fallthrough
      :                          @688 [@dyn 184]
 13582: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 13586: 53 28 00 f0 25           jump @694 if a1 <u 4294963200
      :                          @689
 13591: 33 07 40 00 03           a0 = 0x30040
 13596: 95 77 00 10              a0 = a0 + 0x1000
 13600: 01                       fallthrough
      :                          @690
 13601: 82 78                    a1 = u64 [a0]
 13603: c9 87 09                 a2 = a0 - a1
 13606: ab 59 11                 jump @694 if a2 != s0
      :                          @691
 13609: c9 68 09                 a2 = a1 - s1
 13612: 01                       fallthrough
      :                          @692
 13613: 82 7a                    a3 = u64 [a0]
 13615: ab 8a f2                 jump @690 if a3 != a1
      :                          @693
 13618: 7b 79                    u64 [a0] = a2
 13620: 33 0b                    a4 = 0
 13622: 01                       fallthrough
      :                          @694
 13623: 33 07 00 00 01           a0 = 0x10000
 13628: 33 08                    a1 = 0
 13630: 82 10 70                 ra = u64 [sp + 0x70]
 13633: 82 15 68                 s0 = u64 [sp + 0x68]
 13636: 82 16 60                 s1 = u64 [sp + 0x60]
 13639: 95 11 78                 sp = sp + 0x78
 13642: 32 00                    ret
      :                          @695
 13644: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13647: 7b 10 40                 u64 [sp + 0x40] = ra
 13650: 7b 15 38                 u64 [sp + 0x38] = s0
 13653: 7b 16 30                 u64 [sp + 0x30] = s1
 13656: c8 89 09                 a2 = a2 + a1
 13659: ac 89 53                 jump @703 if a2 <u a1
      :                          @696
 13662: 64 75                    s0 = a0
 13664: 82 77                    a0 = u64 [a0]
 13666: 97 78 01                 a1 = a0 << 0x1
 13669: 33 0a 08                 a3 = 0x8
 13672: e4 a9 09                 a2 = maxu(a2, a3)
 13675: e4 98 06                 s1 = maxu(a1, a2)
 13678: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 13681: 98 88 3f                 a1 = a1 >> 0x3f
 13684: 51 07 12                 jump @698 if a0 == 0
      :                          @697
 13687: 82 59 08                 a2 = u64 [s0 + 0x8]
 13690: 7b 19 18                 u64 [sp + 0x18] = a2
 13693: 49 11 20 01              u64 [sp + 32] = 0x1
 13697: 7b 17 28                 u64 [sp + 0x28] = a0
 13700: 28 06                    jump @699
      :                          @698
 13702: 49 11 20                 u64 [sp + 32] = 0
 13705: 01                       fallthrough
      :                          @699
 13706: 64 17                    a0 = sp
 13708: 95 1a 18                 a3 = sp + 0x18
 13711: 64 69                    a2 = s1
 13713: 50 20 72 01 33           ra = 370, jump @707
      :                          @700 [@dyn 185]
 13718: 82 18                    a1 = u64 [sp]
 13720: 82 17 08                 a0 = u64 [sp + 0x8]
 13723: 51 08 14                 jump @704 if a1 == 0
      :                          @701
 13726: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 13736: aa 87 0d                 jump @705 if a0 == a1
      :                          @702
 13739: 52 07 18                 jump @706 if a0 != 0
      :                          @703
 13742: 00                       trap
      :                          @704
 13743: 7b 57 08                 u64 [s0 + 0x8] = a0
 13746: 7b 56                    u64 [s0] = s1
 13748: 01                       fallthrough
      :                          @705
 13749: 82 10 40                 ra = u64 [sp + 0x40]
 13752: 82 15 38                 s0 = u64 [sp + 0x38]
 13755: 82 16 30                 s1 = u64 [sp + 0x30]
 13758: 95 11 48                 sp = sp + 0x48
 13761: 32 00                    ret
      :                          @706
 13763: 00                       trap
      :                          @707
 13764: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 13767: 7b 10 30                 u64 [sp + 0x30] = ra
 13770: 7b 15 28                 u64 [sp + 0x28] = s0
 13773: 7b 16 20                 u64 [sp + 0x20] = s1
 13776: 64 96                    s1 = a2
 13778: 64 73                    t1 = a0
 13780: 51 08 6f                 jump @717 if a1 == 0
      :                          @708
 13783: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13786: 51 07 72                 jump @718 if a0 == 0
      :                          @709
 13789: 82 a9 10                 a2 = u64 [a3 + 0x10]
 13792: 51 09 9f 00              jump @725 if a2 == 0
      :                          @710
 13796: 82 a8                    a1 = u64 [a3]
 13798: 33 02 00 10              t0 = 0x1000
 13802: 33 04 40 00 03           t2 = 0x30040
 13807: c8 24 07                 a0 = t2 + t0
 13810: 01                       fallthrough
      :                          @711
 13811: 82 7a                    a3 = u64 [a0]
 13813: c8 6a 05                 s0 = a3 + s1
 13816: ac a5 c3 00              jump @731 if s0 <u a3
      :                          @712
 13820: 95 5b 01                 a4 = s0 + 0x1
 13823: 88 bc 01                 a5 = a4 <u 0x1
 13826: d8 b2 0b                 a4 = t0 <u a4
 13829: d4 cb 0b                 a4 = a4 | a5
 13832: 52 0b b3 00              jump @731 if a4 != 0
      :                          @713
 13836: 82 7b                    a4 = u64 [a0]
 13838: ab ab e5                 jump @711 if a4 != a3
      :                          @714
 13841: 7b 75                    u64 [a0] = s0
 13843: 33 0c                    a5 = 0
 13845: 7b 13 18                 u64 [sp + 0x18] = t1
 13848: c9 54 07                 a0 = t2 - s0
 13851: 95 77 00 10              a0 = a0 + 0x1000
 13855: 7b 17 10                 u64 [sp + 0x10] = a0
 13858: 7b 18 08                 u64 [sp + 0x8] = a1
 13861: 64 95                    s0 = a2
 13863: 7b 14                    u64 [sp] = t2
 13865: 50 20 74 01 c9 03        ra = 372, jump @801
      :                          @715 [@dyn 186]
 13871: 54 25 00 10 94 00        jump @732 if s0 <=u 4096
      :                          @716
 13877: 82 13 18                 t1 = u64 [sp + 0x18]
 13880: 82 18 10                 a1 = u64 [sp + 0x10]
 13883: 33 07                    a0 = 0
 13885: 7b 38 08                 u64 [t1 + 0x8] = a1
 13888: 28 b1 00                 jump @738
      :                          @717
 13891: 49 13 08                 u64 [t1 + 8] = 0
 13894: 33 07 01                 a0 = 0x1
 13897: 28 a8 00                 jump @738
      :                          @718
 13900: 33 07 00 10              a0 = 0x1000
 13904: 33 02 40 00 03           t0 = 0x30040
 13909: c8 72 09                 a2 = t0 + a0
 13912: 01                       fallthrough
      :                          @719
 13913: 82 9b                    a4 = u64 [a2]
 13915: c8 6b 0a                 a3 = a4 + s1
 13918: ac ba 5d                 jump @731 if a3 <u a4
      :                          @720
 13921: 95 ac 01                 a5 = a3 + 0x1
 13924: 88 c8 01                 a1 = a5 <u 0x1
 13927: d8 c7 0c                 a5 = a0 <u a5
 13930: d4 c8 08                 a1 = a1 | a5
 13933: 52 08 4e                 jump @731 if a1 != 0
      :                          @721
 13936: 82 98                    a1 = u64 [a2]
 13938: ab b8 e7                 jump @719 if a1 != a4
      :                          @722
 13941: 7b 9a                    u64 [a2] = a3
 13943: 33 0c                    a5 = 0
 13945: 01                       fallthrough
      :                          @723
 13946: ab b8 df                 jump @719 if a1 != a4
      :                          @724
 13949: 28 30                    jump @730
      :                          @725
 13951: 33 07 00 10              a0 = 0x1000
 13955: 33 02 40 00 03           t0 = 0x30040
 13960: c8 72 09                 a2 = t0 + a0
 13963: 01                       fallthrough
      :                          @726
 13964: 82 9b                    a4 = u64 [a2]
 13966: c8 6b 0a                 a3 = a4 + s1
 13969: ac ba 2a                 jump @731 if a3 <u a4
      :                          @727
 13972: 95 ac 01                 a5 = a3 + 0x1
 13975: 88 c8 01                 a1 = a5 <u 0x1
 13978: d8 c7 0c                 a5 = a0 <u a5
 13981: d4 c8 08                 a1 = a1 | a5
 13984: 52 08 1b                 jump @731 if a1 != 0
      :                          @728
 13987: 82 98                    a1 = u64 [a2]
 13989: ab b8 e7                 jump @726 if a1 != a4
      :                          @729
 13992: 7b 9a                    u64 [a2] = a3
 13994: 33 0c                    a5 = 0
 13996: 01                       fallthrough
      :                          @730
 13997: c9 a2 07                 a0 = t0 - a3
 14000: 95 78 00 10              a1 = a0 + 0x1000
 14004: 33 07                    a0 = 0
 14006: 7b 38 08                 u64 [t1 + 0x8] = a1
 14009: 28 38                    jump @738
      :                          @731
 14011: 33 07 01                 a0 = 0x1
 14014: 7b 37 08                 u64 [t1 + 0x8] = a0
 14017: 28 30                    jump @738
      :                          @732
 14019: 64 5c                    a5 = s0
 14021: 82 18                    a1 = u64 [sp]
 14023: 95 87 00 10              a0 = a1 + 0x1000
 14027: 82 13 18                 t1 = u64 [sp + 0x18]
 14030: 82 15 08                 s0 = u64 [sp + 0x8]
 14033: 01                       fallthrough
      :                          @733
 14034: 82 78                    a1 = u64 [a0]
 14036: c9 87 09                 a2 = a0 - a1
 14039: ab 59 11                 jump @737 if a2 != s0
      :                          @734
 14042: c9 c8 09                 a2 = a1 - a5
 14045: 01                       fallthrough
      :                          @735
 14046: 82 7a                    a3 = u64 [a0]
 14048: ab 8a f2                 jump @733 if a3 != a1
      :                          @736
 14051: 7b 79                    u64 [a0] = a2
 14053: 33 0b                    a4 = 0
 14055: 01                       fallthrough
      :                          @737
 14056: 82 18 10                 a1 = u64 [sp + 0x10]
 14059: 33 07                    a0 = 0
 14061: 7b 38 08                 u64 [t1 + 0x8] = a1
 14064: 01                       fallthrough
      :                          @738
 14065: 7b 36 10                 u64 [t1 + 0x10] = s1
 14068: 7b 37                    u64 [t1] = a0
 14070: 82 10 30                 ra = u64 [sp + 0x30]
 14073: 82 15 28                 s0 = u64 [sp + 0x28]
 14076: 82 16 20                 s1 = u64 [sp + 0x20]
 14079: 95 11 38                 sp = sp + 0x38
 14082: 32 00                    ret
      :                          @739
 14084: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14087: 7b 10 40                 u64 [sp + 0x40] = ra
 14090: 7b 15 38                 u64 [sp + 0x38] = s0
 14093: 7b 16 30                 u64 [sp + 0x30] = s1
 14096: 95 88 01                 a1 = a1 + 0x1
 14099: 51 08 54                 jump @747 if a1 == 0
      :                          @740
 14102: 64 75                    s0 = a0
 14104: 82 77                    a0 = u64 [a0]
 14106: 97 79 01                 a2 = a0 << 0x1
 14109: 33 0a 08                 a3 = 0x8
 14112: e4 a8 08                 a1 = maxu(a1, a3)
 14115: e4 89 06                 s1 = maxu(a2, a1)
 14118: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14121: 98 88 3f                 a1 = a1 >> 0x3f
 14124: 51 07 12                 jump @742 if a0 == 0
      :                          @741
 14127: 82 59 08                 a2 = u64 [s0 + 0x8]
 14130: 7b 19 18                 u64 [sp + 0x18] = a2
 14133: 49 11 20 01              u64 [sp + 32] = 0x1
 14137: 7b 17 28                 u64 [sp + 0x28] = a0
 14140: 28 06                    jump @743
      :                          @742
 14142: 49 11 20                 u64 [sp + 32] = 0
 14145: 01                       fallthrough
      :                          @743
 14146: 64 17                    a0 = sp
 14148: 95 1a 18                 a3 = sp + 0x18
 14151: 64 69                    a2 = s1
 14153: 50 20 76 01 7b fe        ra = 374, jump @707
      :                          @744 [@dyn 187]
 14159: 82 18                    a1 = u64 [sp]
 14161: 82 17 08                 a0 = u64 [sp + 0x8]
 14164: 51 08 14                 jump @748 if a1 == 0
      :                          @745
 14167: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 14177: aa 87 0d                 jump @749 if a0 == a1
      :                          @746
 14180: 52 07 18                 jump @750 if a0 != 0
      :                          @747
 14183: 00                       trap
      :                          @748
 14184: 7b 57 08                 u64 [s0 + 0x8] = a0
 14187: 7b 56                    u64 [s0] = s1
 14189: 01                       fallthrough
      :                          @749
 14190: 82 10 40                 ra = u64 [sp + 0x40]
 14193: 82 15 38                 s0 = u64 [sp + 0x38]
 14196: 82 16 30                 s1 = u64 [sp + 0x30]
 14199: 95 11 48                 sp = sp + 0x48
 14202: 32 00                    ret
      :                          @750
 14204: 00                       trap
      :                          @751
 14205: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14208: 7b 10 30                 u64 [sp + 0x30] = ra
 14211: 7b 15 28                 u64 [sp + 0x28] = s0
 14214: 7b 16 20                 u64 [sp + 0x20] = s1
 14217: 64 89                    a2 = a1
 14219: 82 8a 08                 a3 = u64 [a1 + 0x8]
 14222: 64 75                    s0 = a0
 14224: 51 0a 35                 jump @756 if a3 == 0
      :                          @752
 14227: 82 98                    a1 = u64 [a2]
 14229: 33 07                    a0 = 0
 14231: 95 8b 08                 a4 = a1 + 0x8
 14234: 01                       fallthrough
      :                          @753
 14235: 82 bc                    a5 = u64 [a4]
 14237: c8 c7 07                 a0 = a0 + a5
 14240: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 14243: 95 bb 10                 a4 = a4 + 0x10
 14246: 52 0a f5                 jump @753 if a3 != 0
      :                          @754
 14249: 82 9a 18                 a3 = u64 [a2 + 0x18]
 14252: 51 0a 24                 jump @758 if a3 == 0
      :                          @755
 14255: 82 88 08                 a1 = u64 [a1 + 0x8]
 14258: 8e 88                    a1 = a1 >u 0
 14260: 88 7a 10                 a3 = a0 <u 0x10
 14263: 85 aa 01                 a3 = a3 ^ 0x1
 14266: d4 a8 08                 a1 = a1 | a3
 14269: 89 7a                    a3 = a0 <s 0
 14271: e0 a8 08                 a1 = a1 & ~a3
 14274: 52 08 0a                 jump @757 if a1 != 0
      :                          @756
 14277: 33 07                    a0 = 0
 14279: 33 08 01                 a1 = 0x1
 14282: 28 48                    jump @766
      :                          @757
 14284: 97 77 01                 a0 = a0 << 0x1
 14287: 01                       fallthrough
      :                          @758
 14288: 51 07 3e                 jump @765 if a0 == 0
      :                          @759
 14291: 57 07 77                 jump @771 if a0 <s 0
      :                          @760
 14294: 64 53                    t1 = s0
 14296: 33 08 00 10              a1 = 0x1000
 14300: 33 02 40 00 03           t0 = 0x30040
 14305: c8 82 0b                 a4 = t0 + a1
 14308: 01                       fallthrough
      :                          @761
 14309: 82 bc                    a5 = u64 [a4]
 14311: c8 7c 0a                 a3 = a5 + a0
 14314: ac ca 5e                 jump @769 if a3 <u a5
      :                          @762
 14317: 95 a5 01                 s0 = a3 + 0x1
 14320: 88 56 01                 s1 = s0 <u 0x1
 14323: d8 58 05                 s0 = a1 <u s0
 14326: d4 65 05                 s0 = s0 | s1
 14329: 52 05 4f                 jump @769 if s0 != 0
      :                          @763
 14332: 82 b6                    s1 = u64 [a4]
 14334: ab c6 e7                 jump @761 if s1 != a5
      :                          @764
 14337: 7b ba                    u64 [a4] = a3
 14339: c9 a2 08                 a1 = t0 - a3
 14342: 95 88 00 10              a1 = a1 + 0x1000
 14346: 64 35                    s0 = t1
 14348: 28 06                    jump @766
      :                          @765
 14350: 33 08 01                 a1 = 0x1
 14353: 01                       fallthrough
      :                          @766
 14354: 7b 17                    u64 [sp] = a0
 14356: 7b 18 08                 u64 [sp + 0x8] = a1
 14359: 49 11 10                 u64 [sp + 16] = 0
 14362: 33 08 90 10 01           a1 = 0x11090
 14367: 64 17                    a0 = sp
 14369: 50 20 78 01 78 06        ra = 376, jump @896
      :                          @767 [@dyn 188]
 14375: 52 07 22                 jump @770 if a0 != 0
      :                          @768
 14378: 82 17 10                 a0 = u64 [sp + 0x10]
 14381: 82 18 08                 a1 = u64 [sp + 0x8]
 14384: 82 19                    a2 = u64 [sp]
 14386: 7b 57 10                 u64 [s0 + 0x10] = a0
 14389: 7b 58 08                 u64 [s0 + 0x8] = a1
 14392: 7b 59                    u64 [s0] = a2
 14394: 82 10 30                 ra = u64 [sp + 0x30]
 14397: 82 15 28                 s0 = u64 [sp + 0x28]
 14400: 82 16 20                 s1 = u64 [sp + 0x20]
 14403: 95 11 38                 sp = sp + 0x38
 14406: 32 00                    ret
      :                          @769
 14408: 00                       trap
      :                          @770
 14409: 00                       trap
      :                          @771
 14410: 00                       trap
      :                          @772 [@dyn 189]
 14411: 82 72                    t0 = u64 [a0]
 14413: 33 09 00 f0              a2 = 0xfffffffffffff000
 14417: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 14421: ac 9a 27                 jump @778 if a3 <u a2
      :                          @773
 14424: 82 77 08                 a0 = u64 [a0 + 0x8]
 14427: 33 09 40 00 03           a2 = 0x30040
 14432: 95 99 00 10              a2 = a2 + 0x1000
 14436: 01                       fallthrough
      :                          @774
 14437: 82 9a                    a3 = u64 [a2]
 14439: c9 a9 0b                 a4 = a2 - a3
 14442: ab 7b 12                 jump @778 if a4 != a0
      :                          @775
 14445: c9 2a 0b                 a4 = a3 - t0
 14448: 01                       fallthrough
      :                          @776
 14449: 82 9c                    a5 = u64 [a2]
 14451: ab ac f2                 jump @774 if a5 != a3
      :                          @777
 14454: 7b 9b                    u64 [a2] = a4
 14456: 33 08                    a1 = 0
 14458: 32 00                    ret
      :                          @778
 14460: 32 00                    ret
      :                          @779 [@dyn 190]
 14462: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 14465: 7b 10 18                 u64 [sp + 0x18] = ra
 14468: 7b 15 10                 u64 [sp + 0x10] = s0
 14471: 7b 16 08                 u64 [sp + 0x8] = s1
 14474: 64 75                    s0 = a0
 14476: 82 7a 10                 a3 = u64 [a0 + 0x10]
 14479: 82 77                    a0 = u64 [a0]
 14481: c9 a7 07                 a0 = a0 - a3
 14484: 64 96                    s1 = a2
 14486: ac 97 2b                 jump @782 if a0 <u a2
      :                          @780
 14489: 7b 1a                    u64 [sp] = a3
 14491: 82 57 08                 a0 = u64 [s0 + 0x8]
 14494: c8 a7 07                 a0 = a0 + a3
 14497: 64 69                    a2 = s1
 14499: 50 20 7e 01 4f 01        ra = 382, jump @801
      :                          @781 [@dyn 191]
 14505: 82 17                    a0 = u64 [sp]
 14507: c8 76 06                 s1 = s1 + a0
 14510: 7b 56 10                 u64 [s0 + 0x10] = s1
 14513: 33 07                    a0 = 0
 14515: 82 10 18                 ra = u64 [sp + 0x18]
 14518: 82 15 10                 s0 = u64 [sp + 0x10]
 14521: 82 16 08                 s1 = u64 [sp + 0x8]
 14524: 95 11 20                 sp = sp + 0x20
 14527: 32 00                    ret
      :                          @782
 14529: 64 57                    a0 = s0
 14531: 7b 18                    u64 [sp] = a1
 14533: 64 a8                    a1 = a3
 14535: 64 69                    a2 = s1
 14537: 50 20 80 01 83 fc        ra = 384, jump @695
      :                          @783 [@dyn 192]
 14543: 82 18                    a1 = u64 [sp]
 14545: 82 5a 10                 a3 = u64 [s0 + 0x10]
 14548: 28 c5                    jump @780
      :                          @784 [@dyn 193]
 14550: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 14553: 7b 10 20                 u64 [sp + 0x20] = ra
 14556: 7b 15 18                 u64 [sp + 0x18] = s0
 14559: 7b 16 10                 u64 [sp + 0x10] = s1
 14562: 64 86                    s1 = a1
 14564: 83 88                    i32 a1 = a1 + 0
 14566: 33 09 80 00              a2 = 0x80
 14570: 64 7a                    a3 = a0
 14572: ae 98 2c                 jump @789 if a1 >=u a2
      :                          @785
 14575: 82 a8 10                 a1 = u64 [a3 + 0x10]
 14578: 82 a7                    a0 = u64 [a3]
 14580: ab 78 13                 jump @788 if a1 != a0
      :                          @786
 14583: 64 a7                    a0 = a3
 14585: 64 a5                    s0 = a3
 14587: 50 20 84 01 09 fe        ra = 388, jump @739
      :                          @787 [@dyn 194]
 14593: 64 5a                    a3 = s0
 14595: 82 58 10                 a1 = u64 [s0 + 0x10]
 14598: 01                       fallthrough
      :                          @788
 14599: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14602: c8 87 07                 a0 = a0 + a1
 14605: 78 76                    u8 [a0] = s1
 14607: 95 88 01                 a1 = a1 + 0x1
 14610: 7b a8 10                 u64 [a3 + 0x10] = a1
 14613: 28 ac 00                 jump @797
      :                          @789
 14616: 8b 67 0b                 i32 a0 = s1 >> 0xb
 14619: 48 11 0c                 u32 [sp + 12] = 0
 14622: 52 07 1c                 jump @791 if a0 != 0
      :                          @790
 14625: 98 67 06                 a0 = s1 >> 0x6
 14628: 86 77 c0 00              a0 = a0 | 0xc0
 14632: 78 17 0c                 u8 [sp + 0xc] = a0
 14635: 84 67 3f                 a0 = s1 & 0x3f
 14638: 86 77 80 00              a0 = a0 | 0x80
 14642: 78 17 0d                 u8 [sp + 0xd] = a0
 14645: 33 06 02                 s1 = 0x2
 14648: 28 63                    jump @794
      :                          @791
 14650: 8b 67 10                 i32 a0 = s1 >> 0x10
 14653: 52 07 29                 jump @793 if a0 != 0
      :                          @792
 14656: 98 67 0c                 a0 = s1 >> 0xc
 14659: 86 77 e0 00              a0 = a0 | 0xe0
 14663: 78 17 0c                 u8 [sp + 0xc] = a0
 14666: 97 67 34                 a0 = s1 << 0x34
 14669: 98 77 3a                 a0 = a0 >> 0x3a
 14672: 95 77 80 00              a0 = a0 + 0x80
 14676: 78 17 0d                 u8 [sp + 0xd] = a0
 14679: 84 67 3f                 a0 = s1 & 0x3f
 14682: 86 77 80 00              a0 = a0 | 0x80
 14686: 78 17 0e                 u8 [sp + 0xe] = a0
 14689: 33 06 03                 s1 = 0x3
 14692: 28 37                    jump @794
      :                          @793
 14694: 97 67 2b                 a0 = s1 << 0x2b
 14697: 98 77 3d                 a0 = a0 >> 0x3d
 14700: 95 77 f0 00              a0 = a0 + 0xf0
 14704: 78 17 0c                 u8 [sp + 0xc] = a0
 14707: 97 67 2e                 a0 = s1 << 0x2e
 14710: 98 77 3a                 a0 = a0 >> 0x3a
 14713: 95 77 80 00              a0 = a0 + 0x80
 14717: 78 17 0d                 u8 [sp + 0xd] = a0
 14720: 97 67 34                 a0 = s1 << 0x34
 14723: 98 77 3a                 a0 = a0 >> 0x3a
 14726: 95 77 80 00              a0 = a0 + 0x80
 14730: 78 17 0e                 u8 [sp + 0xe] = a0
 14733: 84 67 3f                 a0 = s1 & 0x3f
 14736: 86 77 80 00              a0 = a0 | 0x80
 14740: 78 17 0f                 u8 [sp + 0xf] = a0
 14743: 33 06 04                 s1 = 0x4
 14746: 01                       fallthrough
      :                          @794
 14747: 82 a5 10                 s0 = u64 [a3 + 0x10]
 14750: 82 a7                    a0 = u64 [a3]
 14752: c9 57 07                 a0 = a0 - s0
 14755: ac 67 2e                 jump @798 if a0 <u s1
      :                          @795
 14758: 7b 1a                    u64 [sp] = a3
 14760: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14763: c8 57 07                 a0 = a0 + s0
 14766: 95 18 0c                 a1 = sp + 0xc
 14769: 64 69                    a2 = s1
 14771: 50 20 86 01 3f           ra = 390, jump @801
      :                          @796 [@dyn 195]
 14776: c8 56 06                 s1 = s1 + s0
 14779: 82 17                    a0 = u64 [sp]
 14781: 7b 76 10                 u64 [a0 + 0x10] = s1
 14784: 01                       fallthrough
      :                          @797
 14785: 33 07                    a0 = 0
 14787: 82 10 20                 ra = u64 [sp + 0x20]
 14790: 82 15 18                 s0 = u64 [sp + 0x18]
 14793: 82 16 10                 s1 = u64 [sp + 0x10]
 14796: 95 11 28                 sp = sp + 0x28
 14799: 32 00                    ret
      :                          @798
 14801: 64 a7                    a0 = a3
 14803: 64 58                    a1 = s0
 14805: 64 69                    a2 = s1
 14807: 64 a5                    s0 = a3
 14809: 50 20 88 01 73 fb        ra = 392, jump @695
      :                          @799 [@dyn 196]
 14815: 64 5a                    a3 = s0
 14817: 82 55 10                 s0 = u64 [s0 + 0x10]
 14820: 28 c2                    jump @795
      :                          @800 [@dyn 197]
 14822: 64 8a                    a3 = a1
 14824: 33 08 90 10 01           a1 = 0x11090
 14829: 64 a9                    a2 = a3
 14831: 28 aa 04                 jump @896
      :                          @801
 14834: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 14837: 7b 10 18                 u64 [sp + 0x18] = ra
 14840: 7b 15 10                 u64 [sp + 0x10] = s0
 14843: 7b 16 08                 u64 [sp + 0x8] = s1
 14846: 53 19 10 64              jump @810 if a2 <u 16
      :                          @802
 14850: 8d 7a                    i32 a3 = -a0
 14852: 84 a2 07                 t0 = a3 & 0x7
 14855: c8 27 0b                 a4 = a0 + t0
 14858: 51 02 15                 jump @805 if t0 == 0
      :                          @803
 14861: 64 8c                    a5 = a1
 14863: 64 75                    s0 = a0
 14865: 01                       fallthrough
      :                          @804
 14866: 7c ca                    a3 = u8 [a5]
 14868: 78 5a                    u8 [s0] = a3
 14870: 95 55 01                 s0 = s0 + 0x1
 14873: 95 cc 01                 a5 = a5 + 0x1
 14876: ac b5 f6                 jump @804 if s0 <u a4
      :                          @805
 14879: c8 28 03                 t1 = a1 + t0
 14882: c9 29 02                 t0 = a2 - t0
 14885: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 14888: 84 38 07                 a1 = t1 & 0x7
 14891: c8 4b 0a                 a3 = a4 + t2
 14894: 51 08 3b                 jump @812 if a1 == 0
      :                          @806
 14897: 58 04 4b                 jump @815 if t2 <=s 0
      :                          @807
 14900: 97 38 03                 a1 = t1 << 0x3
 14903: 84 80 38                 ra = a1 & 0x38
 14906: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14909: 82 c5                    s0 = u64 [a5]
 14911: 8d 88                    i32 a1 = -a1
 14913: 84 88 38                 a1 = a1 & 0x38
 14916: 95 cc 08                 a5 = a5 + 0x8
 14919: 01                       fallthrough
      :                          @808
 14920: 82 c6                    s1 = u64 [a5]
 14922: d0 05 05                 s0 = s0 >> ra
 14925: cf 86 09                 a2 = s1 << a1
 14928: d4 59 09                 a2 = a2 | s0
 14931: 7b b9                    u64 [a4] = a2
 14933: 95 bb 08                 a4 = a4 + 0x8
 14936: 95 cc 08                 a5 = a5 + 0x8
 14939: 64 65                    s0 = s1
 14941: ac ab eb                 jump @808 if a4 <u a3
      :                          @809
 14944: 28 1c                    jump @815
      :                          @810
 14946: 64 7a                    a3 = a0
 14948: 52 09 21                 jump @816 if a2 != 0
      :                          @811
 14951: 28 2f                    jump @818
      :                          @812
 14953: 58 04 13                 jump @815 if t2 <=s 0
      :                          @813
 14956: 64 38                    a1 = t1
 14958: 01                       fallthrough
      :                          @814
 14959: 82 89                    a2 = u64 [a1]
 14961: 7b b9                    u64 [a4] = a2
 14963: 95 bb 08                 a4 = a4 + 0x8
 14966: 95 88 08                 a1 = a1 + 0x8
 14969: ac ab f6                 jump @814 if a4 <u a3
      :                          @815
 14972: c8 43 08                 a1 = t1 + t2
 14975: 84 29 07                 a2 = t0 & 0x7
 14978: 51 09 14                 jump @818 if a2 == 0
      :                          @816
 14981: c8 a9 09                 a2 = a2 + a3
 14984: 01                       fallthrough
      :                          @817
 14985: 7c 8b                    a4 = u8 [a1]
 14987: 78 ab                    u8 [a3] = a4
 14989: 95 aa 01                 a3 = a3 + 0x1
 14992: 95 88 01                 a1 = a1 + 0x1
 14995: ac 9a f6                 jump @817 if a3 <u a2
      :                          @818
 14998: 82 10 18                 ra = u64 [sp + 0x18]
 15001: 82 15 10                 s0 = u64 [sp + 0x10]
 15004: 82 16 08                 s1 = u64 [sp + 0x8]
 15007: 95 11 20                 sp = sp + 0x20
 15010: 32 00                    ret
      :                          @819
 15012: 53 19 10 48              jump @828 if a2 <u 16
      :                          @820
 15016: 8d 7a                    i32 a3 = -a0
 15018: 84 aa 07                 a3 = a3 & 0x7
 15021: c8 a7 0b                 a4 = a0 + a3
 15024: 51 0a 0e                 jump @823 if a3 == 0
      :                          @821
 15027: 64 7c                    a5 = a0
 15029: 01                       fallthrough
      :                          @822
 15030: 78 c8                    u8 [a5] = a1
 15032: 95 cc 01                 a5 = a5 + 0x1
 15035: ac bc fb                 jump @822 if a5 <u a4
      :                          @823
 15038: c9 a9 03                 t1 = a2 - a3
 15041: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 15044: c8 cb 0a                 a3 = a4 + a5
 15047: 58 0c 1d                 jump @826 if a5 <=s 0
      :                          @824
 15050: 84 82 ff 00              t0 = a1 & 0xff
 15054: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 15064: ca 92 0c                 a5 = t0 * a2
 15067: 01                       fallthrough
      :                          @825
 15068: 7b bc                    u64 [a4] = a5
 15070: 95 bb 08                 a4 = a4 + 0x8
 15073: ac ab fb                 jump @825 if a4 <u a3
      :                          @826
 15076: 84 39 07                 a2 = t1 & 0x7
 15079: 52 09 0a                 jump @829 if a2 != 0
      :                          @827
 15082: 28 13                    jump @831
      :                          @828
 15084: 64 7a                    a3 = a0
 15086: 51 09 0f                 jump @831 if a2 == 0
      :                          @829
 15089: c8 a9 09                 a2 = a2 + a3
 15092: 01                       fallthrough
      :                          @830
 15093: 78 a8                    u8 [a3] = a1
 15095: 95 aa 01                 a3 = a3 + 0x1
 15098: ac 9a fb                 jump @830 if a3 <u a2
      :                          @831
 15101: 32 00                    ret
      :                          @832 [@dyn 198]
 15103: 82 77                    a0 = u64 [a0]
 15105: 01                       fallthrough
      :                          @833
 15106: 28                       jump @833
      :                          @834
 15107: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 15110: 7b 10 50                 u64 [sp + 0x50] = ra
 15113: 7b 15 48                 u64 [sp + 0x48] = s0
 15116: 7b 16 40                 u64 [sp + 0x40] = s1
 15119: 7b 18                    u64 [sp] = a1
 15121: 98 79 04                 a2 = a0 >> 0x4
 15124: 33 08 27                 a1 = 0x27
 15127: 33 0a 69 05 01           a3 = 0x10569
 15132: 53 29 71 02 7b           jump @837 if a2 <u 625
      :                          @835
 15137: 33 08 27                 a1 = 0x27
 15140: 95 1b 3e                 a4 = sp + 0x3e
 15143: 3a 09 08 00 03           a2 = u64 [0x30008]
 15148: 7b 19 10                 u64 [sp + 0x10] = a2
 15151: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 15157: 33 03 7b 14              t1 = 0x147b
 15161: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 15167: 01                       fallthrough
      :                          @836
 15168: 64 72                    t0 = a0
 15170: 82 17 10                 a0 = u64 [sp + 0x10]
 15173: d6 72 07                 a0 = t0 mulhu a0
 15176: 98 77 0b                 a0 = a0 >> 0xb
 15179: 82 19 08                 a2 = u64 [sp + 0x8]
 15182: c0 97 09                 i32 a2 = a0 * a2
 15185: c8 29 06                 s1 = a2 + t0
 15188: 97 69 30                 a2 = s1 << 0x30
 15191: 98 99 32                 a2 = a2 >> 0x32
 15194: ca 39 09                 a2 = a2 * t1
 15197: 98 94 11                 t2 = a2 >> 0x11
 15200: 98 99 10                 a2 = a2 >> 0x10
 15203: 84 99 fe 07              a2 = a2 & 0x7fe
 15207: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
 15210: c8 6c 0c                 a5 = a5 + s1
 15213: 97 cc 31                 a5 = a5 << 0x31
 15216: 98 cc 30                 a5 = a5 >> 0x30
 15219: c8 a9 09                 a2 = a2 + a3
 15222: 7c 96                    s1 = u8 [a2]
 15224: 7c 99 01                 a2 = u8 [a2 + 0x1]
 15227: c8 ac 0c                 a5 = a5 + a3
 15230: 7c c5 01                 s0 = u8 [a5 + 0x1]
 15233: 7c cc                    a5 = u8 [a5]
 15235: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
 15238: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
 15241: 78 b5 01                 u8 [a4 + 0x1] = s0
 15244: 78 bc                    u8 [a4] = a5
 15246: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 15249: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 15252: ac 20 ac                 jump @836 if ra <u t0
      :                          @837
 15255: 54 17 63 36              jump @839 if a0 <=u 99
      :                          @838
 15259: 97 79 30                 a2 = a0 << 0x30
 15262: 98 99 32                 a2 = a2 >> 0x32
 15265: 96 99 7b 14              a2 = a2 * 0x147b
 15269: 98 99 11                 a2 = a2 >> 0x11
 15272: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
 15275: c8 b7 07                 a0 = a0 + a4
 15278: 97 77 31                 a0 = a0 << 0x31
 15281: 98 77 30                 a0 = a0 >> 0x30
 15284: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 15287: c8 a7 07                 a0 = a0 + a3
 15290: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 15293: 7c 77                    a0 = u8 [a0]
 15295: 95 1c 19                 a5 = sp + 0x19
 15298: c8 8c 0c                 a5 = a5 + a1
 15301: 78 cb 01                 u8 [a5 + 0x1] = a4
 15304: 78 c7                    u8 [a5] = a0
 15306: 64 97                    a0 = a2
 15308: 01                       fallthrough
      :                          @839
 15309: 55 17 0a 14              jump @841 if a0 >=u 10
      :                          @840
 15313: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 15316: 95 19 19                 a2 = sp + 0x19
 15319: c8 89 09                 a2 = a2 + a1
 15322: 83 77 30                 i32 a0 = a0 + 0x30
 15325: 78 97                    u8 [a2] = a0
 15327: 28 1c                    jump @842
      :                          @841
 15329: 97 77 01                 a0 = a0 << 0x1
 15332: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 15335: c8 a7 07                 a0 = a0 + a3
 15338: 7c 79 01                 a2 = u8 [a0 + 0x1]
 15341: 7c 77                    a0 = u8 [a0]
 15343: 95 1a 19                 a3 = sp + 0x19
 15346: c8 8a 0a                 a3 = a3 + a1
 15349: 78 a9 01                 u8 [a3 + 0x1] = a2
 15352: 78 a7                    u8 [a3] = a0
 15354: 01                       fallthrough
      :                          @842
 15355: 95 1a 19                 a3 = sp + 0x19
 15358: c8 8a 0a                 a3 = a3 + a1
 15361: 9a 8b 27                 a4 = 0x27 - a1
 15364: 33 08 48 05 01           a1 = 0x10548
 15369: 82 17                    a0 = u64 [sp]
 15371: 33 09                    a2 = 0
 15373: 50 20 8e 01 13           ra = 398, jump @844
      :                          @843 [@dyn 199]
 15378: 82 10 50                 ra = u64 [sp + 0x50]
 15381: 82 15 48                 s0 = u64 [sp + 0x48]
 15384: 82 16 40                 s1 = u64 [sp + 0x40]
 15387: 95 11 58                 sp = sp + 0x58
 15390: 32 00                    ret
      :                          @844
 15392: 95 11 98                 sp = sp + 0xffffffffffffff98
 15395: 7b 10 60                 u64 [sp + 0x60] = ra
 15398: 7b 15 58                 u64 [sp + 0x58] = s0
 15401: 7b 16 50                 u64 [sp + 0x50] = s1
 15404: 80 73 34                 t1 = u32 [a0 + 0x34]
 15407: 7b 1a 20                 u64 [sp + 0x20] = a3
 15410: 64 9c                    a5 = a2
 15412: 84 36 01                 s1 = t1 & 0x1
 15415: 33 02 2b                 t0 = 0x2b
 15418: 33 09 00 00 11           a2 = 0x110000
 15423: 84 3a 04                 a3 = t1 & 0x4
 15426: 7b 1b 28                 u64 [sp + 0x28] = a4
 15429: c8 b6 04                 t2 = s1 + a4
 15432: 7b 1c 30                 u64 [sp + 0x30] = a5
 15435: 52 0a 10                 jump @847 if a3 != 0
      :                          @845
 15438: 49 11 38                 u64 [sp + 56] = 0
 15441: 82 78                    a1 = u64 [a0]
 15443: 94 69 2b                 a2 = 0x2b if s1 != 0
 15446: 52 08 35                 jump @851 if a1 != 0
      :                          @846
 15449: 28 56                    jump @856
      :                          @847
 15451: 7b 18 38                 u64 [sp + 0x38] = a1
 15454: 33 09                    a2 = 0
 15456: 51 0c 1b                 jump @850 if a5 == 0
      :                          @848
 15459: 82 1b 38                 a4 = u64 [sp + 0x38]
 15462: 01                       fallthrough
      :                          @849
 15463: 7d b5                    s0 = i8 [a4]
 15465: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 15468: 85 5a 01                 a3 = s0 ^ 0x1
 15471: c8 a9 09                 a2 = a2 + a3
 15474: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 15477: 95 bb 01                 a4 = a4 + 0x1
 15480: 52 0c ef                 jump @849 if a5 != 0
      :                          @850
 15483: c8 94 04                 t2 = t2 + a2
 15486: 33 09 00 00 11           a2 = 0x110000
 15491: 82 78                    a1 = u64 [a0]
 15493: db 62 09                 a2 = t0 if s1 != 0
 15496: 51 08 27                 jump @856 if a1 == 0
      :                          @851
 15499: 82 7a 08                 a3 = u64 [a0 + 0x8]
 15502: ae a4 21                 jump @856 if t2 >=u a3
      :                          @852
 15505: 84 38 08                 a1 = t1 & 0x8
 15508: 52 08 51                 jump @859 if a1 != 0
      :                          @853
 15511: 7c 76 38                 s1 = u8 [a0 + 0x38]
 15514: c9 4a 0a                 a3 = a3 - t2
 15517: 7b 19 18                 u64 [sp + 0x18] = a2
 15520: 5a 16 01 a0 00           jump @866 if s1 >s 1
      :                          @854
 15525: 52 06 ad 00              jump @868 if s1 != 0
      :                          @855
 15529: 7b 1a 10                 u64 [sp + 0x10] = a3
 15532: 28 ac 00                 jump @869
      :                          @856
 15535: 82 75 20                 s0 = u64 [a0 + 0x20]
 15538: 82 76 28                 s1 = u64 [a0 + 0x28]
 15541: 64 57                    a0 = s0
 15543: 64 68                    a1 = s1
 15545: 82 1a 38                 a3 = u64 [sp + 0x38]
 15548: 82 1b 30                 a4 = u64 [sp + 0x30]
 15551: 50 20 90 01 75 01        ra = 400, jump @889
      :                          @857 [@dyn 200]
 15557: 33 08 01                 a1 = 0x1
 15560: 52 07 be 00              jump @874 if a0 != 0
      :                          @858
 15564: 82 6c 18                 a5 = u64 [s1 + 0x18]
 15567: 64 57                    a0 = s0
 15569: 82 18 20                 a1 = u64 [sp + 0x20]
 15572: 82 19 28                 a2 = u64 [sp + 0x28]
 15575: 82 10 60                 ra = u64 [sp + 0x60]
 15578: 82 15 58                 s0 = u64 [sp + 0x58]
 15581: 82 16 50                 s1 = u64 [sp + 0x50]
 15584: 95 11 68                 sp = sp + 0x68
 15587: 32 0c                    jump [a5]
      :                          @859
 15589: 7b 1a 40                 u64 [sp + 0x40] = a3
 15592: 64 45                    s0 = t2
 15594: 81 78 30                 a1 = i32 [a0 + 0x30]
 15597: 7b 18 10                 u64 [sp + 0x10] = a1
 15600: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 15603: 7b 1a 08                 u64 [sp + 0x8] = a3
 15606: 82 7a 20                 a3 = u64 [a0 + 0x20]
 15609: 82 78 28                 a1 = u64 [a0 + 0x28]
 15612: 48 17 30 30              u32 [a0 + 48] = 0x30
 15616: 7b 17                    u64 [sp] = a0
 15618: 46 17 38 01              u8 [a0 + 56] = 0x1
 15622: 7b 1a 48                 u64 [sp + 0x48] = a3
 15625: 64 a7                    a0 = a3
 15627: 64 86                    s1 = a1
 15629: 82 1a 38                 a3 = u64 [sp + 0x38]
 15632: 82 1b 30                 a4 = u64 [sp + 0x30]
 15635: 50 20 92 01 21 01        ra = 402, jump @889
      :                          @860 [@dyn 201]
 15641: 52 07 69                 jump @873 if a0 != 0
      :                          @861
 15644: 82 17 40                 a0 = u64 [sp + 0x40]
 15647: c9 57 05                 s0 = a0 - s0
 15650: 95 55 01                 s0 = s0 + 0x1
 15653: 01                       fallthrough
      :                          @862
 15654: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 15657: 51 05 cb 00              jump @884 if s0 == 0
      :                          @863
 15661: 82 69 20                 a2 = u64 [s1 + 0x20]
 15664: 33 08 30                 a1 = 0x30
 15667: 82 17 48                 a0 = u64 [sp + 0x48]
 15670: b4 90 02 94 01           ra = 404, jump [a2]
      :                          @864 [@dyn 202]
 15675: 51 07 eb                 jump @862 if a0 == 0
      :                          @865
 15678: 28 44                    jump @873
      :                          @866
 15680: 52 16 02 12              jump @868 if s1 != 2
      :                          @867
 15684: 98 a6 01                 s1 = a3 >> 0x1
 15687: 95 a8 01                 a1 = a3 + 0x1
 15690: 98 88 01                 a1 = a1 >> 0x1
 15693: 7b 18 10                 u64 [sp + 0x10] = a1
 15696: 28 08                    jump @869
      :                          @868
 15698: 64 a6                    s1 = a3
 15700: 49 11 10                 u64 [sp + 16] = 0
 15703: 01                       fallthrough
      :                          @869
 15704: 82 78 20                 a1 = u64 [a0 + 0x20]
 15707: 7b 18 48                 u64 [sp + 0x48] = a1
 15710: 82 75 28                 s0 = u64 [a0 + 0x28]
 15713: 81 77 30                 a0 = i32 [a0 + 0x30]
 15716: 7b 17 40                 u64 [sp + 0x40] = a0
 15719: 95 66 01                 s1 = s1 + 0x1
 15722: 01                       fallthrough
      :                          @870
 15723: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 15726: 51 06 28                 jump @875 if s1 == 0
      :                          @871
 15729: 82 59 20                 a2 = u64 [s0 + 0x20]
 15732: 82 17 48                 a0 = u64 [sp + 0x48]
 15735: 82 18 40                 a1 = u64 [sp + 0x40]
 15738: b4 90 02 96 01           ra = 406, jump [a2]
      :                          @872 [@dyn 203]
 15743: 51 07 ec                 jump @870 if a0 == 0
      :                          @873
 15746: 33 08 01                 a1 = 0x1
 15749: 01                       fallthrough
      :                          @874
 15750: 64 87                    a0 = a1
 15752: 82 10 60                 ra = u64 [sp + 0x60]
 15755: 82 15 58                 s0 = u64 [sp + 0x58]
 15758: 82 16 50                 s1 = u64 [sp + 0x50]
 15761: 95 11 68                 sp = sp + 0x68
 15764: 32 00                    ret
      :                          @875
 15766: 82 16 48                 s1 = u64 [sp + 0x48]
 15769: 64 67                    a0 = s1
 15771: 64 58                    a1 = s0
 15773: 82 19 18                 a2 = u64 [sp + 0x18]
 15776: 82 1a 38                 a3 = u64 [sp + 0x38]
 15779: 82 1b 30                 a4 = u64 [sp + 0x30]
 15782: 50 20 98 01 8e 00        ra = 408, jump @889
      :                          @876 [@dyn 204]
 15788: 33 08 01                 a1 = 0x1
 15791: 52 07 d7                 jump @874 if a0 != 0
      :                          @877
 15794: 82 5a 18                 a3 = u64 [s0 + 0x18]
 15797: 64 67                    a0 = s1
 15799: 82 18 20                 a1 = u64 [sp + 0x20]
 15802: 82 19 28                 a2 = u64 [sp + 0x28]
 15805: b4 a0 02 9a 01           ra = 410, jump [a3]
      :                          @878 [@dyn 205]
 15810: 33 08 01                 a1 = 0x1
 15813: 52 07 c1                 jump @874 if a0 != 0
      :                          @879
 15816: 82 17 10                 a0 = u64 [sp + 0x10]
 15819: 9a 77                    a0 = -a0
 15821: 7b 17 38                 u64 [sp + 0x38] = a0
 15824: 33 06 ff                 s1 = 0xffffffffffffffff
 15827: 01                       fallthrough
      :                          @880
 15828: 82 17 38                 a0 = u64 [sp + 0x38]
 15831: c8 67 07                 a0 = a0 + s1
 15834: 51 17 ff 45              jump @887 if a0 == 4294967295
      :                          @881
 15838: 82 59 20                 a2 = u64 [s0 + 0x20]
 15841: 82 17 48                 a0 = u64 [sp + 0x48]
 15844: 82 18 40                 a1 = u64 [sp + 0x40]
 15847: b4 90 02 9c 01           ra = 412, jump [a2]
      :                          @882 [@dyn 206]
 15852: 95 66 01                 s1 = s1 + 0x1
 15855: 51 07 e5                 jump @880 if a0 == 0
      :                          @883
 15858: 28 39                    jump @888
      :                          @884
 15860: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15863: 82 17 48                 a0 = u64 [sp + 0x48]
 15866: 82 18 20                 a1 = u64 [sp + 0x20]
 15869: 82 19 28                 a2 = u64 [sp + 0x28]
 15872: b4 a0 02 9e 01           ra = 414, jump [a3]
      :                          @885 [@dyn 207]
 15877: 33 08 01                 a1 = 0x1
 15880: 52 07 7e ff              jump @874 if a0 != 0
      :                          @886
 15884: 33 08                    a1 = 0
 15886: 82 16                    s1 = u64 [sp]
 15888: 82 17 10                 a0 = u64 [sp + 0x10]
 15891: 7a 67 30                 u32 [s1 + 0x30] = a0
 15894: 82 17 08                 a0 = u64 [sp + 0x8]
 15897: 78 67 38                 u8 [s1 + 0x38] = a0
 15900: 28 6a ff                 jump @874
      :                          @887
 15903: 82 16 10                 s1 = u64 [sp + 0x10]
 15906: 82 17 10                 a0 = u64 [sp + 0x10]
 15909: d8 76 08                 a1 = s1 <u a0
 15912: 28 5e ff                 jump @874
      :                          @888
 15915: 82 17 10                 a0 = u64 [sp + 0x10]
 15918: d8 76 08                 a1 = s1 <u a0
 15921: 28 55 ff                 jump @874
      :                          @889
 15924: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15927: 7b 10 20                 u64 [sp + 0x20] = ra
 15930: 7b 15 18                 u64 [sp + 0x18] = s0
 15933: 7b 16 10                 u64 [sp + 0x10] = s1
 15936: 83 9c                    i32 a5 = a2 + 0
 15938: 33 02 00 00 11           t0 = 0x110000
 15943: 64 a6                    s1 = a3
 15945: 64 85                    s0 = a1
 15947: 64 7a                    a3 = a0
 15949: aa 2c 21                 jump @892 if a5 == t0
      :                          @890
 15952: 82 5c 20                 a5 = u64 [s0 + 0x20]
 15955: 64 a7                    a0 = a3
 15957: 64 98                    a1 = a2
 15959: 7b 1b 08                 u64 [sp + 0x8] = a4
 15962: 7b 1a                    u64 [sp] = a3
 15964: b4 c0 02 a0 01           ra = 416, jump [a5]
      :                          @891 [@dyn 208]
 15969: 82 1a                    a3 = u64 [sp]
 15971: 82 1b 08                 a4 = u64 [sp + 0x8]
 15974: 64 78                    a1 = a0
 15976: 33 07 01                 a0 = 0x1
 15979: 52 08 20                 jump @895 if a1 != 0
      :                          @892
 15982: 51 06 1a                 jump @894 if s1 == 0
      :                          @893
 15985: 82 5c 18                 a5 = u64 [s0 + 0x18]
 15988: 64 a7                    a0 = a3
 15990: 64 68                    a1 = s1
 15992: 64 b9                    a2 = a4
 15994: 82 10 20                 ra = u64 [sp + 0x20]
 15997: 82 15 18                 s0 = u64 [sp + 0x18]
 16000: 82 16 10                 s1 = u64 [sp + 0x10]
 16003: 95 11 28                 sp = sp + 0x28
 16006: 32 0c                    jump [a5]
      :                          @894
 16008: 33 07                    a0 = 0
 16010: 01                       fallthrough
      :                          @895
 16011: 82 10 20                 ra = u64 [sp + 0x20]
 16014: 82 15 18                 s0 = u64 [sp + 0x18]
 16017: 82 16 10                 s1 = u64 [sp + 0x10]
 16020: 95 11 28                 sp = sp + 0x28
 16023: 32 00                    ret
      :                          @896
 16025: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 16029: 7b 10 80 00              u64 [sp + 0x80] = ra
 16033: 7b 15 78                 u64 [sp + 0x78] = s0
 16036: 7b 16 70                 u64 [sp + 0x70] = s1
 16039: 49 11 60 20              u64 [sp + 96] = 0x20
 16043: 33 0a 03                 a3 = 0x3
 16046: 78 1a 68                 u8 [sp + 0x68] = a3
 16049: 82 96 20                 s1 = u64 [a2 + 0x20]
 16052: 49 11 30                 u64 [sp + 48] = 0
 16055: 49 11 40                 u64 [sp + 64] = 0
 16058: 7b 17 50                 u64 [sp + 0x50] = a0
 16061: 7b 18 58                 u64 [sp + 0x58] = a1
 16064: 51 06 0a 01              jump @918 if s1 == 0
      :                          @897
 16068: 82 97 28                 a0 = u64 [a2 + 0x28]
 16071: 51 07 79 01              jump @928 if a0 == 0
      :                          @898
 16075: 49 11 28                 u64 [sp + 40] = 0
 16078: 82 95                    s0 = u64 [a2]
 16080: 7b 19 08                 u64 [sp + 0x8] = a2
 16083: 82 98 10                 a1 = u64 [a2 + 0x10]
 16086: 7b 18 18                 u64 [sp + 0x18] = a1
 16089: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16092: 97 88 03                 a1 = a1 << 0x3
 16095: 98 88 03                 a1 = a1 >> 0x3
 16098: 95 88 01                 a1 = a1 + 0x1
 16101: 7b 18                    u64 [sp] = a1
 16103: 95 55 08                 s0 = s0 + 0x8
 16106: 96 78 38                 a1 = a0 * 0x38
 16109: 95 66 18                 s1 = s1 + 0x18
 16112: 33 07 8c 01              a0 = 0x18c
 16116: 7b 17 10                 u64 [sp + 0x10] = a0
 16119: 01                       fallthrough
      :                          @899
 16120: 7b 18 20                 u64 [sp + 0x20] = a1
 16123: 82 59                    a2 = u64 [s0]
 16125: 51 09 18                 jump @902 if a2 == 0
      :                          @900
 16128: 82 1a 58                 a3 = u64 [sp + 0x58]
 16131: 82 17 50                 a0 = u64 [sp + 0x50]
 16134: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 16137: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16140: b4 a0 02 a2 01           ra = 418, jump [a3]
      :                          @901 [@dyn 209]
 16145: 52 07 55 01              jump @931 if a0 != 0
      :                          @902
 16149: 81 67 10                 a0 = i32 [s1 + 0x10]
 16152: 7a 17 60                 u32 [sp + 0x60] = a0
 16155: 7c 67 18                 a0 = u8 [s1 + 0x18]
 16158: 78 17 68                 u8 [sp + 0x68] = a0
 16161: 81 67 14                 a0 = i32 [s1 + 0x14]
 16164: 7a 17 64                 u32 [sp + 0x64] = a0
 16167: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 16170: 82 67                    a0 = u64 [s1]
 16172: 51 08 26                 jump @907 if a1 == 0
      :                          @903
 16175: 52 18 01 16              jump @905 if a1 != 1
      :                          @904
 16179: 97 77 04                 a0 = a0 << 0x4
 16182: 82 18 18                 a1 = u64 [sp + 0x18]
 16185: c8 87 07                 a0 = a0 + a1
 16188: 82 78 08                 a1 = u64 [a0 + 0x8]
 16191: 82 19 10                 a2 = u64 [sp + 0x10]
 16194: aa 98 07                 jump @906 if a1 == a2
      :                          @905
 16197: 33 08                    a1 = 0
 16199: 28 0f                    jump @908
      :                          @906
 16201: 82 77                    a0 = u64 [a0]
 16203: 82 77                    a0 = u64 [a0]
 16205: 33 08 01                 a1 = 0x1
 16208: 28 06                    jump @908
      :                          @907
 16210: 33 08 01                 a1 = 0x1
 16213: 01                       fallthrough
      :                          @908
 16214: 7b 18 30                 u64 [sp + 0x30] = a1
 16217: 7b 17 38                 u64 [sp + 0x38] = a0
 16220: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 16223: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 16226: 51 08 26                 jump @913 if a1 == 0
      :                          @909
 16229: 52 18 01 16              jump @911 if a1 != 1
      :                          @910
 16233: 97 77 04                 a0 = a0 << 0x4
 16236: 82 18 18                 a1 = u64 [sp + 0x18]
 16239: c8 87 07                 a0 = a0 + a1
 16242: 82 78 08                 a1 = u64 [a0 + 0x8]
 16245: 82 19 10                 a2 = u64 [sp + 0x10]
 16248: aa 98 07                 jump @912 if a1 == a2
      :                          @911
 16251: 33 08                    a1 = 0
 16253: 28 0f                    jump @914
      :                          @912
 16255: 82 77                    a0 = u64 [a0]
 16257: 82 77                    a0 = u64 [a0]
 16259: 33 08 01                 a1 = 0x1
 16262: 28 06                    jump @914
      :                          @913
 16264: 33 08 01                 a1 = 0x1
 16267: 01                       fallthrough
      :                          @914
 16268: 7b 18 40                 u64 [sp + 0x40] = a1
 16271: 7b 17 48                 u64 [sp + 0x48] = a0
 16274: 82 67 08                 a0 = u64 [s1 + 0x8]
 16277: 97 77 04                 a0 = a0 << 0x4
 16280: 82 18 18                 a1 = u64 [sp + 0x18]
 16283: c8 78 08                 a1 = a1 + a0
 16286: 82 87                    a0 = u64 [a1]
 16288: 82 89 08                 a2 = u64 [a1 + 0x8]
 16291: 95 18 30                 a1 = sp + 0x30
 16294: b4 90 02 a4 01           ra = 420, jump [a2]
      :                          @915 [@dyn 210]
 16299: 52 07 bb 00              jump @931 if a0 != 0
      :                          @916
 16303: 95 55 10                 s0 = s0 + 0x10
 16306: 82 18 20                 a1 = u64 [sp + 0x20]
 16309: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 16312: 95 66 38                 s1 = s1 + 0x38
 16315: 82 17 28                 a0 = u64 [sp + 0x28]
 16318: 95 77 01                 a0 = a0 + 0x1
 16321: 7b 17 28                 u64 [sp + 0x28] = a0
 16324: 52 08 34 ff              jump @899 if a1 != 0
      :                          @917
 16328: 28 6b                    jump @926
      :                          @918
 16330: 82 97 18                 a0 = u64 [a2 + 0x18]
 16333: 51 07 73                 jump @928 if a0 == 0
      :                          @919
 16336: 82 95 10                 s0 = u64 [a2 + 0x10]
 16339: 33 0a                    a3 = 0
 16341: 97 78 04                 a1 = a0 << 0x4
 16344: c8 58 08                 a1 = a1 + s0
 16347: 7b 18 20                 u64 [sp + 0x20] = a1
 16350: 7b 19 08                 u64 [sp + 0x8] = a2
 16353: 82 96                    s1 = u64 [a2]
 16355: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 16358: 97 77 04                 a0 = a0 << 0x4
 16361: 98 77 04                 a0 = a0 >> 0x4
 16364: 95 77 01                 a0 = a0 + 0x1
 16367: 7b 17                    u64 [sp] = a0
 16369: 95 66 08                 s1 = s1 + 0x8
 16372: 01                       fallthrough
      :                          @920
 16373: 7b 1a 28                 u64 [sp + 0x28] = a3
 16376: 82 69                    a2 = u64 [s1]
 16378: 51 09 17                 jump @923 if a2 == 0
      :                          @921
 16381: 82 1a 58                 a3 = u64 [sp + 0x58]
 16384: 82 17 50                 a0 = u64 [sp + 0x50]
 16387: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 16390: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16393: b4 a0 02 a6 01           ra = 422, jump [a3]
      :                          @922 [@dyn 211]
 16398: 52 07 58                 jump @931 if a0 != 0
      :                          @923
 16401: 82 57                    a0 = u64 [s0]
 16403: 82 59 08                 a2 = u64 [s0 + 0x8]
 16406: 95 18 30                 a1 = sp + 0x30
 16409: b4 90 02 a8 01           ra = 424, jump [a2]
      :                          @924 [@dyn 212]
 16414: 52 07 48                 jump @931 if a0 != 0
      :                          @925
 16417: 95 66 10                 s1 = s1 + 0x10
 16420: 95 55 10                 s0 = s0 + 0x10
 16423: 82 1a 28                 a3 = u64 [sp + 0x28]
 16426: 95 aa 01                 a3 = a3 + 0x1
 16429: 82 17 20                 a0 = u64 [sp + 0x20]
 16432: ab 75 c5                 jump @920 if s0 != a0
      :                          @926
 16435: 82 19 08                 a2 = u64 [sp + 0x8]
 16438: 82 1a                    a3 = u64 [sp]
 16440: 82 97 08                 a0 = u64 [a2 + 0x8]
 16443: ac 7a 0d                 jump @929 if a3 <u a0
      :                          @927
 16446: 28 2d                    jump @932
      :                          @928
 16448: 33 0a                    a3 = 0
 16450: 82 97 08                 a0 = u64 [a2 + 0x8]
 16453: 54 07 26                 jump @932 if a0 <=u 0
      :                          @929
 16456: 82 97                    a0 = u64 [a2]
 16458: 97 a8 04                 a1 = a3 << 0x4
 16461: c8 87 09                 a2 = a0 + a1
 16464: 82 1a 58                 a3 = u64 [sp + 0x58]
 16467: 82 17 50                 a0 = u64 [sp + 0x50]
 16470: 82 98                    a1 = u64 [a2]
 16472: 82 99 08                 a2 = u64 [a2 + 0x8]
 16475: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16478: b4 a0 02 aa 01           ra = 426, jump [a3]
      :                          @930 [@dyn 213]
 16483: 51 07 08                 jump @932 if a0 == 0
      :                          @931
 16486: 33 07 01                 a0 = 0x1
 16489: 28 05                    jump @933
      :                          @932
 16491: 33 07                    a0 = 0
 16493: 01                       fallthrough
      :                          @933
 16494: 82 10 80 00              ra = u64 [sp + 0x80]
 16498: 82 15 78                 s0 = u64 [sp + 0x78]
 16501: 82 16 70                 s1 = u64 [sp + 0x70]
 16504: 95 11 88 00              sp = sp + 0x88
 16508: 32 00                    ret
      :                          @934 [@dyn 214]
 16510: 32 00                    ret
      :                          @935 [@dyn 215]
 16512: 95 11 88                 sp = sp + 0xffffffffffffff88
 16515: 7b 10 70                 u64 [sp + 0x70] = ra
 16518: 7b 15 68                 u64 [sp + 0x68] = s0
 16521: 7b 16 60                 u64 [sp + 0x60] = s1
 16524: 64 93                    t1 = a2
 16526: 33 0c                    a5 = 0
 16528: 33 02                    t0 = 0
 16530: 33 0b                    a4 = 0
 16532: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 16542: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 16548: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 16558: 82 79 10                 a2 = u64 [a0 + 0x10]
 16561: 7b 19 48                 u64 [sp + 0x48] = a2
 16564: 82 79                    a2 = u64 [a0]
 16566: 7b 19 30                 u64 [sp + 0x30] = a2
 16569: 82 77 08                 a0 = u64 [a0 + 0x8]
 16572: 7b 17 28                 u64 [sp + 0x28] = a0
 16575: 7b 18 50                 u64 [sp + 0x50] = a1
 16578: 95 88 08                 a1 = a1 + 0x8
 16581: 7b 18                    u64 [sp] = a1
 16583: 33 07 59 05 01           a0 = 0x10559
 16588: 7b 17 08                 u64 [sp + 0x8] = a0
 16591: 33 05 0a                 s0 = 0xa
 16594: 7b 13 20                 u64 [sp + 0x20] = t1
 16597: 7b 14 18                 u64 [sp + 0x18] = t2
 16600: 7b 10 10                 u64 [sp + 0x10] = ra
 16603: 28 3a                    jump @939
      :                          @936
 16605: c8 89 07                 a0 = a2 + a1
 16608: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 16611: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 16614: 88 77 01                 a0 = a0 <u 0x1
 16617: 01                       fallthrough
      :                          @937
 16618: 82 1a 48                 a3 = u64 [sp + 0x48]
 16621: 78 a7                    u8 [a3] = a0
 16623: 82 17 28                 a0 = u64 [sp + 0x28]
 16626: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16629: 82 17 30                 a0 = u64 [sp + 0x30]
 16632: b4 a0 02 b0 01           ra = 432, jump [a3]
      :                          @938 [@dyn 216]
 16637: 64 52                    t0 = s0
 16639: 82 13 20                 t1 = u64 [sp + 0x20]
 16642: 82 14 18                 t2 = u64 [sp + 0x18]
 16645: 82 10 10                 ra = u64 [sp + 0x10]
 16648: 82 1c 58                 a5 = u64 [sp + 0x58]
 16651: 33 05 0a                 s0 = 0xa
 16654: 82 1b 38                 a4 = u64 [sp + 0x38]
 16657: 52 07 67 01              jump @980 if a0 != 0
      :                          @939
 16661: 84 b7 ff 00              a0 = a4 & 0xff
 16665: 52 07 5b 01              jump @979 if a0 != 0
      :                          @940
 16669: 7b 12 40                 u64 [sp + 0x40] = t0
 16672: ae c3 0a                 jump @943 if t1 >=u a5
      :                          @941
 16675: 28 f4 00                 jump @970
      :                          @942
 16678: ac c3 f1 00              jump @970 if t1 <u a5
      :                          @943
 16682: c9 c3 08                 a1 = t1 - a5
 16685: 82 16 50                 s1 = u64 [sp + 0x50]
 16688: c8 c6 06                 s1 = s1 + a5
 16691: 55 18 10 1d              jump @949 if a1 >=u 16
      :                          @944
 16695: aa c3 dd 00              jump @969 if t1 == a5
      :                          @945
 16699: 33 0a                    a3 = 0
 16701: 01                       fallthrough
      :                          @946
 16702: c8 a6 07                 a0 = s1 + a3
 16705: 7c 77                    a0 = u8 [a0]
 16707: aa 57 aa 00              jump @964 if a0 == s0
      :                          @947
 16711: 95 aa 01                 a3 = a3 + 0x1
 16714: ab a8 f4                 jump @946 if a1 != a3
      :                          @948
 16717: 28 c7 00                 jump @969
      :                          @949
 16720: 95 69 07                 a2 = s1 + 0x7
 16723: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 16726: c9 6a 07                 a0 = a3 - s1
 16729: d3 6a 0a                 a3 = a3 ^ s1
 16732: 88 aa 01                 a3 = a3 <u 0x1
 16735: 88 7b 01                 a4 = a0 <u 0x1
 16738: d4 ba 0a                 a3 = a3 | a4
 16741: 7b 1c 58                 u64 [sp + 0x58] = a5
 16744: 51 0a 44                 jump @955 if a3 == 0
      :                          @950
 16747: 33 07                    a0 = 0
 16749: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16752: 01                       fallthrough
      :                          @951
 16753: 82 1b 58                 a4 = u64 [sp + 0x58]
 16756: 82 19                    a2 = u64 [sp]
 16758: c8 9b 0b                 a4 = a4 + a2
 16761: 01                       fallthrough
      :                          @952
 16762: c8 76 0c                 a5 = s1 + a0
 16765: 82 cc                    a5 = u64 [a5]
 16767: c8 7b 09                 a2 = a4 + a0
 16770: 82 99                    a2 = u64 [a2]
 16772: d3 0c 05                 s0 = a5 ^ ra
 16775: c8 45 05                 s0 = s0 + t2
 16778: e0 c5 0c                 a5 = s0 & ~a5
 16781: d3 09 05                 s0 = a2 ^ ra
 16784: 3a 0a 10 00 03           a3 = u64 [0x30010]
 16789: c8 45 05                 s0 = s0 + t2
 16792: e0 95 09                 a2 = s0 & ~a2
 16795: d4 c9 09                 a2 = a2 | a5
 16798: d2 a9 09                 a2 = a2 & a3
 16801: 52 09 1f                 jump @958 if a2 != 0
      :                          @953
 16804: 95 77 10                 a0 = a0 + 0x10
 16807: ae 72 d3                 jump @952 if t0 >=u a0
      :                          @954
 16810: 28 16                    jump @958
      :                          @955
 16812: c8 a6 0b                 a4 = s1 + a3
 16815: 7c bb                    a4 = u8 [a4]
 16817: aa 5b 54                 jump @967 if a4 == s0
      :                          @956
 16820: 95 aa 01                 a3 = a3 + 0x1
 16823: ab a7 f5                 jump @955 if a0 != a3
      :                          @957
 16826: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16829: ae 72 b4                 jump @951 if t0 >=u a0
      :                          @958
 16832: aa 87 99 00              jump @976 if a0 == a1
      :                          @959
 16836: 33 0a                    a3 = 0
 16838: c8 76 06                 s1 = s1 + a0
 16841: c9 73 08                 a1 = t1 - a0
 16844: 82 1c 58                 a5 = u64 [sp + 0x58]
 16847: c9 c8 08                 a1 = a1 - a5
 16850: 33 05 0a                 s0 = 0xa
 16853: 82 12 40                 t0 = u64 [sp + 0x40]
 16856: 01                       fallthrough
      :                          @960
 16857: c8 a6 09                 a2 = s1 + a3
 16860: 7c 99                    a2 = u8 [a2]
 16862: aa 59 0b                 jump @963 if a2 == s0
      :                          @961
 16865: 95 aa 01                 a3 = a3 + 0x1
 16868: ab a8 f5                 jump @960 if a1 != a3
      :                          @962
 16871: 28 2d                    jump @969
      :                          @963
 16873: c8 7a 0a                 a3 = a3 + a0
 16876: 01                       fallthrough
      :                          @964
 16877: c8 ca 0a                 a3 = a3 + a5
 16880: 95 ac 01                 a5 = a3 + 0x1
 16883: ae 3a 33 ff              jump @942 if a3 >=u t1
      :                          @965
 16887: 82 17 50                 a0 = u64 [sp + 0x50]
 16890: c8 7a 0a                 a3 = a3 + a0
 16893: 7c a7                    a0 = u8 [a3]
 16895: ab 57 27 ff              jump @942 if a0 != s0
      :                          @966
 16899: 28 5d                    jump @977
      :                          @967
 16901: 82 1c 58                 a5 = u64 [sp + 0x58]
 16904: c8 ca 0a                 a3 = a3 + a5
 16907: 95 ac 01                 a5 = a3 + 0x1
 16910: ac 3a e9                 jump @965 if a3 <u t1
      :                          @968
 16913: 28 15 ff                 jump @942
      :                          @969
 16916: 64 3c                    a5 = t1
 16918: 01                       fallthrough
      :                          @970
 16919: 7b 1c 58                 u64 [sp + 0x58] = a5
 16922: 49 11 38 01              u64 [sp + 56] = 0x1
 16926: 64 25                    s0 = t0
 16928: 64 36                    s1 = t1
 16930: aa 32 52                 jump @979 if t0 == t1
      :                          @971
 16933: 82 17 48                 a0 = u64 [sp + 0x48]
 16936: 7c 77                    a0 = u8 [a0]
 16938: 51 07 1d                 jump @974 if a0 == 0
      :                          @972
 16941: 82 17 28                 a0 = u64 [sp + 0x28]
 16944: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16947: 33 09 04                 a2 = 0x4
 16950: 82 17 30                 a0 = u64 [sp + 0x30]
 16953: 82 18 08                 a1 = u64 [sp + 0x8]
 16956: b4 a0 02 b2 01           ra = 434, jump [a3]
      :                          @973 [@dyn 217]
 16961: 82 12 40                 t0 = u64 [sp + 0x40]
 16964: 52 07 34                 jump @980 if a0 != 0
      :                          @974
 16967: c9 26 09                 a2 = s1 - t0
 16970: 82 18 50                 a1 = u64 [sp + 0x50]
 16973: c8 28 08                 a1 = a1 + t0
 16976: ab 26 8d fe              jump @936 if s1 != t0
      :                          @975
 16980: 33 07                    a0 = 0
 16982: 28 94 fe                 jump @937
      :                          @976
 16985: 64 3c                    a5 = t1
 16987: 82 12 40                 t0 = u64 [sp + 0x40]
 16990: 28 b9                    jump @970
      :                          @977
 16992: 49 11 38                 u64 [sp + 56] = 0
 16995: 64 c6                    s1 = a5
 16997: 64 c5                    s0 = a5
 16999: 7b 1c 58                 u64 [sp + 0x58] = a5
 17002: 82 17 48                 a0 = u64 [sp + 0x48]
 17005: 7c 77                    a0 = u8 [a0]
 17007: 52 07 be                 jump @972 if a0 != 0
      :                          @978
 17010: 28 d5                    jump @974
      :                          @979
 17012: 33 07                    a0 = 0
 17014: 28 06                    jump @981
      :                          @980
 17016: 33 07 01                 a0 = 0x1
 17019: 01                       fallthrough
      :                          @981
 17020: 82 10 70                 ra = u64 [sp + 0x70]
 17023: 82 15 68                 s0 = u64 [sp + 0x68]
 17026: 82 16 60                 s1 = u64 [sp + 0x60]
 17029: 95 11 78                 sp = sp + 0x78
 17032: 32 00                    ret
      :                          @982 [@dyn 218]
 17034: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17037: 7b 10 20                 u64 [sp + 0x20] = ra
 17040: 7b 15 18                 u64 [sp + 0x18] = s0
 17043: 7b 16 10                 u64 [sp + 0x10] = s1
 17046: 82 75 10                 s0 = u64 [a0 + 0x10]
 17049: 7c 59                    a2 = u8 [s0]
 17051: 82 7b                    a4 = u64 [a0]
 17053: 82 76 08                 s1 = u64 [a0 + 0x8]
 17056: 51 09 33                 jump @986 if a2 == 0
      :                          @983
 17059: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17062: 7b 18 08                 u64 [sp + 0x8] = a1
 17065: 33 08 59 05 01           a1 = 0x10559
 17070: 33 09 04                 a2 = 0x4
 17073: 64 b7                    a0 = a4
 17075: 7b 1b                    u64 [sp] = a4
 17077: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @984 [@dyn 219]
 17082: 82 18 08                 a1 = u64 [sp + 0x8]
 17085: 82 1b                    a4 = u64 [sp]
 17087: 51 07 14                 jump @986 if a0 == 0
      :                          @985
 17090: 33 07 01                 a0 = 0x1
 17093: 82 10 20                 ra = u64 [sp + 0x20]
 17096: 82 15 18                 s0 = u64 [sp + 0x18]
 17099: 82 16 10                 s1 = u64 [sp + 0x10]
 17102: 95 11 28                 sp = sp + 0x28
 17105: 32 00                    ret
      :                          @986
 17107: 83 87                    i32 a0 = a1 + 0
 17109: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17112: 88 77 01                 a0 = a0 <u 0x1
 17115: 78 57                    u8 [s0] = a0
 17117: 82 6c 20                 a5 = u64 [s1 + 0x20]
 17120: 64 b7                    a0 = a4
 17122: 82 10 20                 ra = u64 [sp + 0x20]
 17125: 82 15 18                 s0 = u64 [sp + 0x18]
 17128: 82 16 10                 s1 = u64 [sp + 0x10]
 17131: 95 11 28                 sp = sp + 0x28
 17134: 32 0c                    jump [a5]
      :                          @987 [@dyn 220]
 17136: 64 8a                    a3 = a1
 17138: 33 08 c0 10 01           a1 = 0x110c0
 17143: 64 a9                    a2 = a3
 17145: 28 a0 fb                 jump @896
      :                          @988
 17148: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 17152: 7b 10 88 00              u64 [sp + 0x88] = ra
 17156: 7b 15 80 00              u64 [sp + 0x80] = s0
 17160: 7b 16 78                 u64 [sp + 0x78] = s1
 17163: 64 75                    s0 = a0
 17165: 7c 77 08                 a0 = u8 [a0 + 0x8]
 17168: 64 8b                    a4 = a1
 17170: 33 08 01                 a1 = 0x1
 17173: 33 06 01                 s1 = 0x1
 17176: 51 07 1d                 jump @990 if a0 == 0
      :                          @989
 17179: 78 56 08                 u8 [s0 + 0x8] = s1
 17182: 46 15 09 01              u8 [s0 + 9] = 0x1
 17186: 64 57                    a0 = s0
 17188: 82 10 88 00              ra = u64 [sp + 0x88]
 17192: 82 15 80 00              s0 = u64 [sp + 0x80]
 17196: 82 16 78                 s1 = u64 [sp + 0x78]
 17199: 95 11 90 00              sp = sp + 0x90
 17203: 32 00                    ret
      :                          @990
 17205: 64 9a                    a3 = a2
 17207: 82 5c                    a5 = u64 [s0]
 17209: 80 c7 34                 a0 = u32 [a5 + 0x34]
 17212: 7c 58 09                 a1 = u8 [s0 + 0x9]
 17215: 84 79 04                 a2 = a0 & 0x4
 17218: 52 09 45                 jump @996 if a2 != 0
      :                          @991
 17221: 51 08 32                 jump @994 if a1 == 0
      :                          @992
 17224: 82 c8 28                 a1 = u64 [a5 + 0x28]
 17227: 82 c7 20                 a0 = u64 [a5 + 0x20]
 17230: 82 83 18                 t1 = u64 [a1 + 0x18]
 17233: 33 08 61 05 01           a1 = 0x10561
 17238: 33 09 02                 a2 = 0x2
 17241: 64 a6                    s1 = a3
 17243: 7b 1b 10                 u64 [sp + 0x10] = a4
 17246: 7b 1c 08                 u64 [sp + 0x8] = a5
 17249: b4 30 02 ba 01           ra = 442, jump [t1]
      :                          @993 [@dyn 221]
 17254: 82 1c 08                 a5 = u64 [sp + 0x8]
 17257: 82 1b 10                 a4 = u64 [sp + 0x10]
 17260: 64 6a                    a3 = s1
 17262: 33 08 01                 a1 = 0x1
 17265: 33 06 01                 s1 = 0x1
 17268: 52 07 a7                 jump @989 if a0 != 0
      :                          @994
 17271: 64 b7                    a0 = a4
 17273: 64 c8                    a1 = a5
 17275: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @995 [@dyn 222]
 17280: 33 08 01                 a1 = 0x1
 17283: 64 76                    s1 = a0
 17285: 28 96                    jump @989
      :                          @996
 17287: 52 08 37                 jump @1000 if a1 != 0
      :                          @997
 17290: 82 c8 28                 a1 = u64 [a5 + 0x28]
 17293: 82 c7 20                 a0 = u64 [a5 + 0x20]
 17296: 82 83 18                 t1 = u64 [a1 + 0x18]
 17299: 33 08 65 05 01           a1 = 0x10565
 17304: 33 09 01                 a2 = 0x1
 17307: 33 06 01                 s1 = 0x1
 17310: 7b 1a                    u64 [sp] = a3
 17312: 7b 1b 10                 u64 [sp + 0x10] = a4
 17315: 7b 1c 08                 u64 [sp + 0x8] = a5
 17318: b4 30 02 be 01           ra = 446, jump [t1]
      :                          @998 [@dyn 223]
 17323: 82 1c 08                 a5 = u64 [sp + 0x8]
 17326: 82 1b 10                 a4 = u64 [sp + 0x10]
 17329: 82 1a                    a3 = u64 [sp]
 17331: 33 08 01                 a1 = 0x1
 17334: 52 07 65 ff              jump @989 if a0 != 0
      :                          @999
 17338: 81 c7 34                 a0 = i32 [a5 + 0x34]
 17341: 01                       fallthrough
      :                          @1000
 17342: 33 06 01                 s1 = 0x1
 17345: 78 16 37                 u8 [sp + 0x37] = s1
 17348: 82 c8 20                 a1 = u64 [a5 + 0x20]
 17351: 82 c9 28                 a2 = u64 [a5 + 0x28]
 17354: 7b 18 18                 u64 [sp + 0x18] = a1
 17357: 7b 19 20                 u64 [sp + 0x20] = a2
 17360: 95 18 37                 a1 = sp + 0x37
 17363: 7b 18 28                 u64 [sp + 0x28] = a1
 17366: 81 c8 30                 a1 = i32 [a5 + 0x30]
 17369: 7c c9 38                 a2 = u8 [a5 + 0x38]
 17372: 82 c3                    t1 = u64 [a5]
 17374: 82 c4 08                 t2 = u64 [a5 + 0x8]
 17377: 82 c0 10                 ra = u64 [a5 + 0x10]
 17380: 82 c2 18                 t0 = u64 [a5 + 0x18]
 17383: 7a 17 6c                 u32 [sp + 0x6c] = a0
 17386: 7a 18 68                 u32 [sp + 0x68] = a1
 17389: 78 19 70                 u8 [sp + 0x70] = a2
 17392: 7b 13 38                 u64 [sp + 0x38] = t1
 17395: 7b 14 40                 u64 [sp + 0x40] = t2
 17398: 7b 10 48                 u64 [sp + 0x48] = ra
 17401: 7b 12 50                 u64 [sp + 0x50] = t0
 17404: 95 17 18                 a0 = sp + 0x18
 17407: 7b 17 58                 u64 [sp + 0x58] = a0
 17410: 33 07 c0 10 01           a0 = 0x110c0
 17415: 7b 17 60                 u64 [sp + 0x60] = a0
 17418: 95 18 38                 a1 = sp + 0x38
 17421: 64 b7                    a0 = a4
 17423: b4 a0 02 c0 01           ra = 448, jump [a3]
      :                          @1001 [@dyn 224]
 17428: 52 07 21                 jump @1004 if a0 != 0
      :                          @1002
 17431: 82 18 60                 a1 = u64 [sp + 0x60]
 17434: 82 17 58                 a0 = u64 [sp + 0x58]
 17437: 82 8a 18                 a3 = u64 [a1 + 0x18]
 17440: 33 08 63 05 01           a1 = 0x10563
 17445: 33 09 02                 a2 = 0x2
 17448: b4 a0 02 c2 01           ra = 450, jump [a3]
      :                          @1003 [@dyn 225]
 17453: 64 76                    s1 = a0
 17455: 33 08 01                 a1 = 0x1
 17458: 28 e9 fe                 jump @989
      :                          @1004
 17461: 33 08 01                 a1 = 0x1
 17464: 28 e3 fe                 jump @989
      :                          @1005
 17467: 51 08 9b 00              jump @1026 if a1 == 0
      :                          @1006
 17471: 64 79                    a2 = a0
 17473: 7c 77                    a0 = u8 [a0]
 17475: 51 07 91 00              jump @1025 if a0 == 0
      :                          @1007
 17479: 51 27 ff 00 90 00        jump @1027 if a0 == 255
      :                          @1008
 17485: 6c 7a                    a3 = sext.b a0
 17487: 57 0a 09                 jump @1010 if a3 <s 0
      :                          @1009
 17490: 33 0a                    a3 = 0
 17492: 33 08                    a1 = 0
 17494: 28 73                    jump @1024
      :                          @1010
 17496: 55 27 c0 00 0d           jump @1012 if a0 >=u 192
      :                          @1011
 17501: 33 0a 01                 a3 = 0x1
 17504: 33 0b 80                 a4 = 0xffffffffffffff80
 17507: 28 4a                    jump @1021
      :                          @1012
 17509: 55 27 e0 00 0e           jump @1014 if a0 >=u 224
      :                          @1013
 17514: 33 0a 02                 a3 = 0x2
 17517: 33 0b 40 ff              a4 = 0xffffffffffffff40
 17521: 28 3c                    jump @1021
      :                          @1014
 17523: 55 27 f0 00 0e           jump @1016 if a0 >=u 240
      :                          @1015
 17528: 33 0a 03                 a3 = 0x3
 17531: 33 0b 20 ff              a4 = 0xffffffffffffff20
 17535: 28 2e                    jump @1021
      :                          @1016
 17537: 55 27 f8 00 0e           jump @1018 if a0 >=u 248
      :                          @1017
 17542: 33 0a 04                 a3 = 0x4
 17545: 33 0b 10 ff              a4 = 0xffffffffffffff10
 17549: 28 20                    jump @1021
      :                          @1018
 17551: 55 27 fc 00 0e           jump @1020 if a0 >=u 252
      :                          @1019
 17556: 33 0a 05                 a3 = 0x5
 17559: 33 0b 08 ff              a4 = 0xffffffffffffff08
 17563: 28 12                    jump @1021
      :                          @1020
 17565: 88 7a fe 00              a3 = a0 <u 0xfe
 17569: 33 0b 04 ff              a4 = 0xffffffffffffff04
 17573: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 17577: 85 aa 07                 a3 = a3 ^ 0x7
 17580: 01                       fallthrough
      :                          @1021
 17581: ae 8a 2b                 jump @1028 if a3 >=u a1
      :                          @1022
 17584: 33 08                    a1 = 0
 17586: c8 b7 07                 a0 = a0 + a4
 17589: 64 ab                    a4 = a3
 17591: 01                       fallthrough
      :                          @1023
 17592: c8 b9 0c                 a5 = a2 + a4
 17595: 7c cc                    a5 = u8 [a5]
 17597: 97 88 08                 a1 = a1 << 0x8
 17600: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17603: d4 c8 08                 a1 = a1 | a5
 17606: 52 0b f2                 jump @1023 if a4 != 0
      :                          @1024
 17609: 8a a9 03                 i32 a2 = a3 << 0x3
 17612: cf 97 07                 a0 = a0 << a2
 17615: c8 87 07                 a0 = a0 + a1
 17618: 32 00                    ret
      :                          @1025
 17620: 32 00                    ret
      :                          @1026
 17622: 00                       trap
      :                          @1027
 17623: 00                       trap
      :                          @1028
 17624: 00                       trap
      :                          @1029
 17625: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 17629: 7b 10 00 01              u64 [sp + 0x100] = ra
 17633: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 17637: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 17641: 7b 17                    u64 [sp] = a0
 17643: 78 18 0f                 u8 [sp + 0xf] = a1
 17646: 7b 17 10                 u64 [sp + 0x10] = a0
 17649: 95 16 0f                 s1 = sp + 0xf
 17652: 33 05 01                 s0 = 0x1
 17655: 95 17 0f                 a0 = sp + 0xf
 17658: 33 08 01                 a1 = 0x1
 17661: 95 19 10                 a2 = sp + 0x10
 17664: 33 0a 08                 a3 = 0x8
 17667: 0a 03                    ecalli 3 // 'write'
 17669: 7b 16 60                 u64 [sp + 0x60] = s1
 17672: 33 07 c8 01              a0 = 0x1c8
 17676: 7b 17 68                 u64 [sp + 0x68] = a0
 17679: 64 17                    a0 = sp
 17681: 7b 17 70                 u64 [sp + 0x70] = a0
 17684: 33 07 1a                 a0 = 0x1a
 17687: 7b 17 78                 u64 [sp + 0x78] = a0
 17690: 49 21 80 00 02           u64 [sp + 128] = 0x2
 17695: 49 21 90 00 02           u64 [sp + 144] = 0x2
 17700: 49 21 a0 00              u64 [sp + 160] = 0
 17704: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 17714: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 17718: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 17723: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 17728: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 17733: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 17737: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 17741: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 17746: 33 08 f0 10 01           a1 = 0x110f0
 17751: 7b 18 30                 u64 [sp + 0x30] = a1
 17754: 49 11 38 02              u64 [sp + 56] = 0x2
 17758: 95 18 80 00              a1 = sp + 0x80
 17762: 7b 18 50                 u64 [sp + 0x50] = a1
 17765: 49 11 58 02              u64 [sp + 88] = 0x2
 17769: 95 18 60                 a1 = sp + 0x60
 17772: 7b 18 40                 u64 [sp + 0x40] = a1
 17775: 49 11 48 02              u64 [sp + 72] = 0x2
 17779: 95 17 18                 a0 = sp + 0x18
 17782: 95 18 30                 a1 = sp + 0x30
 17785: 50 20 c4 01 04 f2        ra = 452, jump @751
      :                          @1030 [@dyn 226]
 17791: 82 15 20                 s0 = u64 [sp + 0x20]
 17794: 82 1b 28                 a4 = u64 [sp + 0x28]
 17797: 82 16 18                 s1 = u64 [sp + 0x18]
 17800: 33 07 02                 a0 = 0x2
 17803: 33 08                    a1 = 0
 17805: 33 09                    a2 = 0
 17807: 64 5a                    a3 = s0
 17809: 33 00 c6 01              ra = 0x1c6
 17813: 0a 64                    ecalli 100 // 'log'
 17815: 01                       fallthrough
      :                          @1031 [@dyn 227]
 17816: 33 07 00 f0              a0 = 0xfffffffffffff000
 17820: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 17824: ac 78 23                 jump @1037 if a1 <u a0
      :                          @1032
 17827: 33 07 40 00 03           a0 = 0x30040
 17832: 95 77 00 10              a0 = a0 + 0x1000
 17836: 01                       fallthrough
      :                          @1033
 17837: 82 78                    a1 = u64 [a0]
 17839: c9 87 09                 a2 = a0 - a1
 17842: ab 59 11                 jump @1037 if a2 != s0
      :                          @1034
 17845: c9 68 09                 a2 = a1 - s1
 17848: 01                       fallthrough
      :                          @1035
 17849: 82 7a                    a3 = u64 [a0]
 17851: ab 8a f2                 jump @1033 if a3 != a1
      :                          @1036
 17854: 7b 79                    u64 [a0] = a2
 17856: 33 0b                    a4 = 0
 17858: 01                       fallthrough
      :                          @1037
 17859: 82 10 00 01              ra = u64 [sp + 0x100]
 17863: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 17867: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 17871: 95 11 08 01              sp = sp + 0x108
 17875: 32 00                    ret
      :                          @1038 [@dyn 228]
 17877: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 17880: 7b 10 28                 u64 [sp + 0x28] = ra
 17883: 7b 15 20                 u64 [sp + 0x20] = s0
 17886: 7b 16 18                 u64 [sp + 0x18] = s1
 17889: 64 86                    s1 = a1
 17891: 82 88 28                 a1 = u64 [a1 + 0x28]
 17894: 82 6a 20                 a3 = u64 [s1 + 0x20]
 17897: 82 8b 18                 a4 = u64 [a1 + 0x18]
 17900: 64 75                    s0 = a0
 17902: 33 08 48 05 01           a1 = 0x10548
 17907: 33 09 01                 a2 = 0x1
 17910: 64 a7                    a0 = a3
 17912: b4 b0 02 ca 01           ra = 458, jump [a4]
      :                          @1039 [@dyn 229]
 17917: 7b 16                    u64 [sp] = s1
 17919: 78 17 08                 u8 [sp + 0x8] = a0
 17922: 46 11 09                 u8 [sp + 9] = 0
 17925: 7b 15 10                 u64 [sp + 0x10] = s0
 17928: 33 09 02                 a2 = 0x2
 17931: 64 17                    a0 = sp
 17933: 95 18 10                 a1 = sp + 0x10
 17936: 50 20 cc 01 ec fc        ra = 460, jump @988
      :                          @1040 [@dyn 230]
 17942: 33 07 01                 a0 = 0x1
 17945: 7c 18 08                 a1 = u8 [sp + 0x8]
 17948: 52 08 1b                 jump @1042 if a1 != 0
      :                          @1041
 17951: 82 17                    a0 = u64 [sp]
 17953: 82 78 28                 a1 = u64 [a0 + 0x28]
 17956: 82 77 20                 a0 = u64 [a0 + 0x20]
 17959: 82 8a 18                 a3 = u64 [a1 + 0x18]
 17962: 33 08 66 05 01           a1 = 0x10566
 17967: 33 09 01                 a2 = 0x1
 17970: b4 a0 02 ce 01           ra = 462, jump [a3]
      :                          @1042 [@dyn 231]
 17975: 82 10 28                 ra = u64 [sp + 0x28]
 17978: 82 15 20                 s0 = u64 [sp + 0x20]
 17981: 82 16 18                 s1 = u64 [sp + 0x18]
 17984: 95 11 30                 sp = sp + 0x30
 17987: 32 00                    ret
