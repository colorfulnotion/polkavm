// RO data = 4864/4864 bytes
// RW data = 24/1048672 bytes
// Stack size = 1048576 bytes
// RO data = [146, 0, 0, 0, 170, 0, 0, 0, 188, 0, 0, 0, 206, 0, 0, 0, 242, 0, 0, 0, 22, 1, 0, 0, 44, 1, 0, 0, 56, 1, 0, 0, 68, 1, 0, 0, 86, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 32, 108, 101, 110, 103, 116, 104, 61, 98, 108, 101, 115, 115, 64, 110, 61, 101, 106, 101, 99, 116, 64, 110, 61, 101, 120, 112, 117, 110, 103, 101, 32, 32, 111, 117, 116, 112, 117, 116, 61, 121, 105, 101, 108, 100, 64, 110, 61, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 32, 64, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 32, 64, 110, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 96, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 98, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 101, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 150, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 230, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 182, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 247, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 134, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 136, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 168, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 228, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 24, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 31, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 41, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 104, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 98, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 111, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 114, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 117, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 0, 0, 0, 0, 0, 0, 216, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 31, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 41, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 32, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 0, 0, 0, 0, 0, 80, 3, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 87, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 102, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 0, 0, 160, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 173, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 0, 72, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 224, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 102, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 0, 48, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 65, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 92, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 113, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 124, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 224, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 243, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 254, 4, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 0, 64, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 214, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 73, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 102, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 160, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 0, 0, 0, 0, 118, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 0, 0, 0, 0, 160, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 198, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 0, 0, 0, 0, 152, 6, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 166, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 184, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 106, 97, 109, 64, 110, 61, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 198, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 112, 114, 101, 118, 32, 108, 101, 110, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 64, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 84, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 0, 0, 0, 208, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 122, 101, 114, 111, 32, 114, 101, 115, 117, 108, 116, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 40, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 58, 8, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 0, 136, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 208, 8, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 0, 40, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 24, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 96, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 44, 32, 103, 111, 116, 32, 168, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 181, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 184, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 0, 248, 9, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 27, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 0, 0, 80, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 168, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 198, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 240, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 240, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 184, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 80, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 27, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 136, 11, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 0, 40, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 208, 11, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 24, 12, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 168, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 88, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 40, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 24, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 208, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 215, 12, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 112, 103, 114, 97, 100, 101, 32, 64, 110, 61, 0, 0, 0, 0, 0, 40, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 8, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 104, 13, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 168, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 166, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 196, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 168, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 84, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 80, 14, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 184, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 168, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 177, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 27, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 64, 110, 61, 0, 200, 14, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 114, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 9, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 228, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 120, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 141, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 152, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 154, 1, 0, 0, 0, 0, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 206, 1, 0, 0, 0, 0, 0, 0, 212, 1, 0, 0, 0, 0, 0, 0, 216, 1, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 112, 97, 114, 115, 101, 95, 97, 99, 99, 117, 109, 117, 108, 97, 116, 101, 95, 97, 114, 103, 115, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 0, 0, 0, 0, 24, 17, 1, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 194, 18, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 211, 18, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 6082
// Code size = 19379 bytes

      :                          @0
     0: 28 a0 04 00 00           jump @78
      :                          @1
     5: 28 0a 15 00 00           jump @262
      :                          @2
    10: 28 2e 39                 jump @733
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 f8 0f 01           a1 = 0x10ff8
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2d                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 f0 01              a0 = 0x1f0
    73: 7b 17                    u64 [sp] = a0
    75: 01                       fallthrough
      :                          @6
    76: 95 67 01                 a0 = s1 + 0x1
    79: 7b 17 08                 u64 [sp + 0x8] = a0
    82: 7b 16 20                 u64 [sp + 0x20] = s1
    85: 95 17 10                 a0 = sp + 0x10
    88: 95 18 20                 a1 = sp + 0x20
    91: 82 19                    a2 = u64 [sp]
    93: 50 10 06 57 47           ra = 6, jump @1035
      :                          @7 [@dyn 3]
    98: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   101: 82 16 08                 s1 = u64 [sp + 0x8]
   104: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   107: 7c 17 18                 a0 = u8 [sp + 0x18]
   110: 01                       fallthrough
      :                          @9
   111: 33 08 01                 a1 = 0x1
   114: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   117: 82 17 10                 a0 = u64 [sp + 0x10]
   120: 82 78 28                 a1 = u64 [a0 + 0x28]
   123: 82 77 20                 a0 = u64 [a0 + 0x20]
   126: 82 8a 18                 a3 = u64 [a1 + 0x18]
   129: 33 08 4d 10 01           a1 = 0x1104d
   134: 33 09 01                 a2 = 0x1
   137: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   141: 64 78                    a1 = a0
   143: 01                       fallthrough
      :                          @12
   144: 64 87                    a0 = a1
   146: 82 10 38                 ra = u64 [sp + 0x38]
   149: 82 15 30                 s0 = u64 [sp + 0x30]
   152: 82 16 28                 s1 = u64 [sp + 0x28]
   155: 95 11 40                 sp = sp + 0x40
   158: 32 00                    ret
      :                          @13 [@dyn 5]
   160: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   164: 7b 10 80 00              u64 [sp + 0x80] = ra
   168: 80 89 34                 a2 = u32 [a1 + 0x34]
   171: 82 77                    a0 = u64 [a0]
   173: 84 9a 10                 a3 = a2 & 0x10
   176: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   179: 84 99 20                 a2 = a2 & 0x20
   182: 52 09 40                 jump @19 if a2 != 0
      :                          @15
   185: 82 77                    a0 = u64 [a0]
   187: 82 10 80 00              ra = u64 [sp + 0x80]
   191: 95 11 88 00              sp = sp + 0x88
   195: 28 e6 3e                 jump @881
      :                          @16
   198: 82 7b                    a4 = u64 [a0]
   200: 33 09 81 00              a2 = 0x81
   204: 95 17 7f                 a0 = sp + 0x7f
   207: 33 02 57                 t0 = 0x57
   210: 01                       fallthrough
      :                          @17
   211: 64 9c                    a5 = a2
   213: 98 ba 04                 a3 = a4 >> 0x4
   216: 84 bb 0f                 a4 = a4 & 0xf
   219: 88 b3 0a                 t1 = a4 <u 0xa
   222: 33 09 30                 a2 = 0x30
   225: da 32 09                 a2 = t0 if t1 == 0
   228: be b9 09                 i32 a2 = a2 + a4
   231: 78 79                    u8 [a0] = a2
   233: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   236: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   239: 64 ab                    a4 = a3
   241: 52 0a e2                 jump @17 if a3 != 0
      :                          @18
   244: 28 30                    jump @21
      :                          @19
   246: 82 7b                    a4 = u64 [a0]
   248: 33 09 81 00              a2 = 0x81
   252: 95 17 7f                 a0 = sp + 0x7f
   255: 33 02 37                 t0 = 0x37
   258: 01                       fallthrough
      :                          @20
   259: 64 9c                    a5 = a2
   261: 98 ba 04                 a3 = a4 >> 0x4
   264: 84 bb 0f                 a4 = a4 & 0xf
   267: 88 b3 0a                 t1 = a4 <u 0xa
   270: 33 09 30                 a2 = 0x30
   273: da 32 09                 a2 = t0 if t1 == 0
   276: be b9 09                 i32 a2 = a2 + a4
   279: 78 79                    u8 [a0] = a2
   281: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   284: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   287: 64 ab                    a4 = a3
   289: 52 0a e2                 jump @20 if a3 != 0
      :                          @21
   292: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   295: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   300: 9a 9b 81 00              a4 = 0x81 - a2
   304: 64 1a                    a3 = sp
   306: c8 7a 0a                 a3 = a3 + a0
   309: 33 09 02                 a2 = 0x2
   312: 64 87                    a0 = a1
   314: 33 08 4e 10 01           a1 = 0x1104e
   319: 50 10 0c 92 3f           ra = 12, jump @891
      :                          @23 [@dyn 6]
   324: 82 10 80 00              ra = u64 [sp + 0x80]
   328: 95 11 88 00              sp = sp + 0x88
   332: 32 00                    ret
      :                          @24
   334: 00                       trap
      :                          @25 [@dyn 7]
   335: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   339: 7b 10 80 00              u64 [sp + 0x80] = ra
   343: 80 89 34                 a2 = u32 [a1 + 0x34]
   346: 84 9a 10                 a3 = a2 & 0x10
   349: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   352: 84 99 20                 a2 = a2 & 0x20
   355: 52 09 41                 jump @31 if a2 != 0
      :                          @27
   358: 7c 77                    a0 = u8 [a0]
   360: 82 10 80 00              ra = u64 [sp + 0x80]
   364: 95 11 88 00              sp = sp + 0x88
   368: 28 39 3e                 jump @881
      :                          @28
   371: 7c 77                    a0 = u8 [a0]
   373: 33 0b 81 00              a4 = 0x81
   377: 95 19 7f                 a2 = sp + 0x7f
   380: 33 02 57                 t0 = 0x57
   383: 01                       fallthrough
      :                          @29
   384: 64 bc                    a5 = a4
   386: 84 7b 0f                 a4 = a0 & 0xf
   389: 97 77 38                 a0 = a0 << 0x38
   392: 98 77 3c                 a0 = a0 >> 0x3c
   395: 88 b3 0a                 t1 = a4 <u 0xa
   398: 33 0a 30                 a3 = 0x30
   401: da 32 0a                 a3 = t0 if t1 == 0
   404: be ba 0a                 i32 a3 = a3 + a4
   407: 78 9a                    u8 [a2] = a3
   409: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   412: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   415: 52 07 e1                 jump @29 if a0 != 0
      :                          @30
   418: 28 31                    jump @33
      :                          @31
   420: 7c 77                    a0 = u8 [a0]
   422: 33 0b 81 00              a4 = 0x81
   426: 95 19 7f                 a2 = sp + 0x7f
   429: 33 02 37                 t0 = 0x37
   432: 01                       fallthrough
      :                          @32
   433: 64 bc                    a5 = a4
   435: 84 7b 0f                 a4 = a0 & 0xf
   438: 97 77 38                 a0 = a0 << 0x38
   441: 98 77 3c                 a0 = a0 >> 0x3c
   444: 88 b3 0a                 t1 = a4 <u 0xa
   447: 33 0a 30                 a3 = 0x30
   450: da 32 0a                 a3 = t0 if t1 == 0
   453: be ba 0a                 i32 a3 = a3 + a4
   456: 78 9a                    u8 [a2] = a3
   458: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   461: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   464: 52 07 e1                 jump @32 if a0 != 0
      :                          @33
   467: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   470: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   475: 9a bb 81 00              a4 = 0x81 - a4
   479: 64 1a                    a3 = sp
   481: c8 7a 0a                 a3 = a3 + a0
   484: 33 09 02                 a2 = 0x2
   487: 64 87                    a0 = a1
   489: 33 08 4e 10 01           a1 = 0x1104e
   494: 50 10 10 e3 3e           ra = 16, jump @891
      :                          @35 [@dyn 8]
   499: 82 10 80 00              ra = u64 [sp + 0x80]
   503: 95 11 88 00              sp = sp + 0x88
   507: 32 00                    ret
      :                          @36
   509: 00                       trap
      :                          @37 [@dyn 9]
   510: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   514: 7b 10 80 00              u64 [sp + 0x80] = ra
   518: 80 89 34                 a2 = u32 [a1 + 0x34]
   521: 84 9a 10                 a3 = a2 & 0x10
   524: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   527: 84 99 20                 a2 = a2 & 0x20
   530: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   533: 80 77                    a0 = u32 [a0]
   535: 82 10 80 00              ra = u64 [sp + 0x80]
   539: 95 11 88 00              sp = sp + 0x88
   543: 28 8a 3d                 jump @881
      :                          @40
   546: 81 7b                    a4 = i32 [a0]
   548: 33 09 81 00              a2 = 0x81
   552: 95 17 7f                 a0 = sp + 0x7f
   555: 33 02 57                 t0 = 0x57
   558: 01                       fallthrough
      :                          @41
   559: 64 9c                    a5 = a2
   561: 8b ba 04                 i32 a3 = a4 >> 0x4
   564: 84 bb 0f                 a4 = a4 & 0xf
   567: 88 b3 0a                 t1 = a4 <u 0xa
   570: 33 09 30                 a2 = 0x30
   573: da 32 09                 a2 = t0 if t1 == 0
   576: be b9 09                 i32 a2 = a2 + a4
   579: 78 79                    u8 [a0] = a2
   581: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   584: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   587: 64 ab                    a4 = a3
   589: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   592: 28 30                    jump @45
      :                          @43
   594: 81 7b                    a4 = i32 [a0]
   596: 33 09 81 00              a2 = 0x81
   600: 95 17 7f                 a0 = sp + 0x7f
   603: 33 02 37                 t0 = 0x37
   606: 01                       fallthrough
      :                          @44
   607: 64 9c                    a5 = a2
   609: 8b ba 04                 i32 a3 = a4 >> 0x4
   612: 84 bb 0f                 a4 = a4 & 0xf
   615: 88 b3 0a                 t1 = a4 <u 0xa
   618: 33 09 30                 a2 = 0x30
   621: da 32 09                 a2 = t0 if t1 == 0
   624: be b9 09                 i32 a2 = a2 + a4
   627: 78 79                    u8 [a0] = a2
   629: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   632: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   635: 64 ab                    a4 = a3
   637: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   640: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   643: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   648: 9a 9b 81 00              a4 = 0x81 - a2
   652: 64 1a                    a3 = sp
   654: c8 7a 0a                 a3 = a3 + a0
   657: 33 09 02                 a2 = 0x2
   660: 64 87                    a0 = a1
   662: 33 08 4e 10 01           a1 = 0x1104e
   667: 50 10 14 36 3e           ra = 20, jump @891
      :                          @47 [@dyn 10]
   672: 82 10 80 00              ra = u64 [sp + 0x80]
   676: 95 11 88 00              sp = sp + 0x88
   680: 32 00                    ret
      :                          @48
   682: 00                       trap
      :                          @49 [@dyn 11]
   683: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   687: 7b 10 80 00              u64 [sp + 0x80] = ra
   691: 80 89 34                 a2 = u32 [a1 + 0x34]
   694: 84 9a 10                 a3 = a2 & 0x10
   697: 52 0a 16                 jump @52 if a3 != 0
      :                          @50
   700: 84 99 20                 a2 = a2 & 0x20
   703: 52 09 40                 jump @55 if a2 != 0
      :                          @51
   706: 82 77                    a0 = u64 [a0]
   708: 82 10 80 00              ra = u64 [sp + 0x80]
   712: 95 11 88 00              sp = sp + 0x88
   716: 28 dd 3c                 jump @881
      :                          @52
   719: 82 7b                    a4 = u64 [a0]
   721: 33 09 81 00              a2 = 0x81
   725: 95 17 7f                 a0 = sp + 0x7f
   728: 33 02 57                 t0 = 0x57
   731: 01                       fallthrough
      :                          @53
   732: 64 9c                    a5 = a2
   734: 98 ba 04                 a3 = a4 >> 0x4
   737: 84 bb 0f                 a4 = a4 & 0xf
   740: 88 b3 0a                 t1 = a4 <u 0xa
   743: 33 09 30                 a2 = 0x30
   746: da 32 09                 a2 = t0 if t1 == 0
   749: be b9 09                 i32 a2 = a2 + a4
   752: 78 79                    u8 [a0] = a2
   754: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   757: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   760: 64 ab                    a4 = a3
   762: 52 0a e2                 jump @53 if a3 != 0
      :                          @54
   765: 28 30                    jump @57
      :                          @55
   767: 82 7b                    a4 = u64 [a0]
   769: 33 09 81 00              a2 = 0x81
   773: 95 17 7f                 a0 = sp + 0x7f
   776: 33 02 37                 t0 = 0x37
   779: 01                       fallthrough
      :                          @56
   780: 64 9c                    a5 = a2
   782: 98 ba 04                 a3 = a4 >> 0x4
   785: 84 bb 0f                 a4 = a4 & 0xf
   788: 88 b3 0a                 t1 = a4 <u 0xa
   791: 33 09 30                 a2 = 0x30
   794: da 32 09                 a2 = t0 if t1 == 0
   797: be b9 09                 i32 a2 = a2 + a4
   800: 78 79                    u8 [a0] = a2
   802: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   805: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   808: 64 ab                    a4 = a3
   810: 52 0a e2                 jump @56 if a3 != 0
      :                          @57
   813: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   816: 56 27 80 00 27           jump @60 if a0 >u 128
      :                          @58
   821: 9a 9b 81 00              a4 = 0x81 - a2
   825: 64 1a                    a3 = sp
   827: c8 7a 0a                 a3 = a3 + a0
   830: 33 09 02                 a2 = 0x2
   833: 64 87                    a0 = a1
   835: 33 08 4e 10 01           a1 = 0x1104e
   840: 50 10 18 89 3d           ra = 24, jump @891
      :                          @59 [@dyn 12]
   845: 82 10 80 00              ra = u64 [sp + 0x80]
   849: 95 11 88 00              sp = sp + 0x88
   853: 32 00                    ret
      :                          @60
   855: 00                       trap
      :                          @61 [@dyn 13]
   856: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   859: 7b 10 28                 u64 [sp + 0x28] = ra
   862: 7b 15 20                 u64 [sp + 0x20] = s0
   865: 7b 16 18                 u64 [sp + 0x18] = s1
   868: 64 85                    s0 = a1
   870: 82 88 28                 a1 = u64 [a1 + 0x28]
   873: 82 5a 20                 a3 = u64 [s0 + 0x20]
   876: 82 8b 18                 a4 = u64 [a1 + 0x18]
   879: 64 76                    s1 = a0
   881: 33 08 f8 0f 01           a1 = 0x10ff8
   886: 33 09 01                 a2 = 0x1
   889: 64 a7                    a0 = a3
   891: b4 b0 01 1c              ra = 28, jump [a4]
      :                          @62 [@dyn 14]
   895: 7b 15                    u64 [sp] = s0
   897: 78 17 08                 u8 [sp + 0x8] = a0
   900: 46 11 09                 u8 [sp + 9] = 0
   903: 7b 16 10                 u64 [sp + 0x10] = s1
   906: 33 05 0a                 s0 = 0xa
   909: 64 17                    a0 = sp
   911: 95 18 10                 a1 = sp + 0x10
   914: 33 09 0a                 a2 = 0xa
   917: 50 10 1e 1f 44           ra = 30, jump @1035
      :                          @63 [@dyn 15]
   922: 95 67 08                 a0 = s1 + 0x8
   925: 7b 17 10                 u64 [sp + 0x10] = a0
   928: 64 17                    a0 = sp
   930: 95 18 10                 a1 = sp + 0x10
   933: 64 59                    a2 = s0
   935: 50 10 20 0d 44           ra = 32, jump @1035
      :                          @64 [@dyn 16]
   940: 95 67 10                 a0 = s1 + 0x10
   943: 7b 17 10                 u64 [sp + 0x10] = a0
   946: 64 17                    a0 = sp
   948: 95 18 10                 a1 = sp + 0x10
   951: 64 59                    a2 = s0
   953: 50 10 22 fb 43           ra = 34, jump @1035
      :                          @65 [@dyn 17]
   958: 95 67 18                 a0 = s1 + 0x18
   961: 7b 17 10                 u64 [sp + 0x10] = a0
   964: 64 17                    a0 = sp
   966: 95 18 10                 a1 = sp + 0x10
   969: 64 59                    a2 = s0
   971: 50 10 24 e9 43           ra = 36, jump @1035
      :                          @66 [@dyn 18]
   976: 95 67 20                 a0 = s1 + 0x20
   979: 7b 17 10                 u64 [sp + 0x10] = a0
   982: 64 17                    a0 = sp
   984: 95 18 10                 a1 = sp + 0x10
   987: 64 59                    a2 = s0
   989: 50 10 26 d7 43           ra = 38, jump @1035
      :                          @67 [@dyn 19]
   994: 95 67 28                 a0 = s1 + 0x28
   997: 7b 17 10                 u64 [sp + 0x10] = a0
  1000: 64 17                    a0 = sp
  1002: 95 18 10                 a1 = sp + 0x10
  1005: 64 59                    a2 = s0
  1007: 50 10 28 c5 43           ra = 40, jump @1035
      :                          @68 [@dyn 20]
  1012: 95 67 30                 a0 = s1 + 0x30
  1015: 7b 17 10                 u64 [sp + 0x10] = a0
  1018: 64 17                    a0 = sp
  1020: 95 18 10                 a1 = sp + 0x10
  1023: 64 59                    a2 = s0
  1025: 50 10 2a b3 43           ra = 42, jump @1035
      :                          @69 [@dyn 21]
  1030: 95 67 38                 a0 = s1 + 0x38
  1033: 7b 17 10                 u64 [sp + 0x10] = a0
  1036: 64 17                    a0 = sp
  1038: 95 18 10                 a1 = sp + 0x10
  1041: 64 59                    a2 = s0
  1043: 50 10 2c a1 43           ra = 44, jump @1035
      :                          @70 [@dyn 22]
  1048: 95 67 40                 a0 = s1 + 0x40
  1051: 7b 17 10                 u64 [sp + 0x10] = a0
  1054: 64 17                    a0 = sp
  1056: 95 18 10                 a1 = sp + 0x10
  1059: 64 59                    a2 = s0
  1061: 50 10 2e 8f 43           ra = 46, jump @1035
      :                          @71 [@dyn 23]
  1066: 95 67 48                 a0 = s1 + 0x48
  1069: 7b 17 10                 u64 [sp + 0x10] = a0
  1072: 64 17                    a0 = sp
  1074: 95 18 10                 a1 = sp + 0x10
  1077: 64 59                    a2 = s0
  1079: 50 10 30 7d 43           ra = 48, jump @1035
      :                          @72 [@dyn 24]
  1084: 95 67 50                 a0 = s1 + 0x50
  1087: 7b 17 10                 u64 [sp + 0x10] = a0
  1090: 64 17                    a0 = sp
  1092: 95 18 10                 a1 = sp + 0x10
  1095: 64 59                    a2 = s0
  1097: 50 10 32 6b 43           ra = 50, jump @1035
      :                          @73 [@dyn 25]
  1102: 95 67 58                 a0 = s1 + 0x58
  1105: 7b 17 10                 u64 [sp + 0x10] = a0
  1108: 64 17                    a0 = sp
  1110: 95 18 10                 a1 = sp + 0x10
  1113: 64 59                    a2 = s0
  1115: 50 10 34 59 43           ra = 52, jump @1035
      :                          @74 [@dyn 26]
  1120: 95 67 60                 a0 = s1 + 0x60
  1123: 7b 17 10                 u64 [sp + 0x10] = a0
  1126: 64 17                    a0 = sp
  1128: 95 18 10                 a1 = sp + 0x10
  1131: 64 59                    a2 = s0
  1133: 50 10 36 47 43           ra = 54, jump @1035
      :                          @75 [@dyn 27]
  1138: 33 07 01                 a0 = 0x1
  1141: 7c 18 08                 a1 = u8 [sp + 0x8]
  1144: 52 08 1a                 jump @77 if a1 != 0
      :                          @76
  1147: 82 17                    a0 = u64 [sp]
  1149: 82 78 28                 a1 = u64 [a0 + 0x28]
  1152: 82 77 20                 a0 = u64 [a0 + 0x20]
  1155: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1158: 33 08 4d 10 01           a1 = 0x1104d
  1163: 33 09 01                 a2 = 0x1
  1166: b4 a0 01 38              ra = 56, jump [a3]
      :                          @77 [@dyn 28]
  1170: 82 10 28                 ra = u64 [sp + 0x28]
  1173: 82 15 20                 s0 = u64 [sp + 0x20]
  1176: 82 16 18                 s1 = u64 [sp + 0x18]
  1179: 95 11 30                 sp = sp + 0x30
  1182: 32 00                    ret
      :                          @78 [export #0: 'refine']
  1184: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1188: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1192: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1196: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1200: 95 11 38 d4              sp = sp + 0xffffffffffffd438
  1204: 33 0a 00 00 01           a3 = 0x10000
  1209: 53 18 04 e7 00           jump @97 if a1 <u 4
      :                          @79
  1214: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1217: 51 0b df 00              jump @97 if a4 == 0
      :                          @80
  1221: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1224: 80 7a                    a3 = u32 [a0]
  1226: 33 06 01                 s1 = 0x1
  1229: 59 08 3d                 jump @89 if a1 >=s 0
      :                          @81
  1232: 84 88 ff 00              a1 = a1 & 0xff
  1236: 33 06 02                 s1 = 0x2
  1239: 53 28 c0 00 2d           jump @87 if a1 <u 192
      :                          @82
  1244: 33 06 03                 s1 = 0x3
  1247: 53 28 e0 00 25           jump @87 if a1 <u 224
      :                          @83
  1252: 33 06 04                 s1 = 0x4
  1255: 53 28 f0 00 1d           jump @87 if a1 <u 240
      :                          @84
  1260: 33 06 05                 s1 = 0x5
  1263: 53 28 f8 00 15           jump @87 if a1 <u 248
      :                          @85
  1268: 33 06 06                 s1 = 0x6
  1271: 53 28 fc 00 0d           jump @87 if a1 <u 252
      :                          @86
  1276: 88 88 fe 00              a1 = a1 <u 0xfe
  1280: 9a 86 08                 s1 = 0x8 - a1
  1283: 01                       fallthrough
      :                          @87
  1284: ae 6b 06                 jump @89 if a4 >=u s1
      :                          @88
  1287: 28 07 10                 jump @261
      :                          @89
  1290: 7b 1a 80 00              u64 [sp + 0x80] = a3
  1294: 95 77 04                 a0 = a0 + 0x4
  1297: 64 68                    a1 = s1
  1299: 7b 1b 88 00              u64 [sp + 0x88] = a4
  1303: 50 10 3a dc 43           ra = 58, jump @1052
      :                          @90 [@dyn 29]
  1308: 64 75                    s0 = a0
  1310: 82 17 88 00              a0 = u64 [sp + 0x88]
  1314: e4 67 07                 a0 = maxu(a0, s1)
  1317: c9 67 07                 a0 = a0 - s1
  1320: d8 57 08                 a1 = a0 <u s0
  1323: e4 57 07                 a0 = maxu(a0, s0)
  1326: c9 57 07                 a0 = a0 - s0
  1329: 88 77 20                 a0 = a0 <u 0x20
  1332: d4 87 07                 a0 = a0 | a1
  1335: 52 07 60                 jump @96 if a0 != 0
      :                          @91
  1338: 48 21 b0 00              u32 [sp + 176] = 0
  1342: 49 21 a8 00              u64 [sp + 168] = 0
  1346: 49 21 a0 00              u64 [sp + 160] = 0
  1350: 49 21 98 00              u64 [sp + 152] = 0
  1354: 49 21 90 00              u64 [sp + 144] = 0
  1358: 95 17 90 00              a0 = sp + 0x90
  1362: 33 09 24                 a2 = 0x24
  1365: 33 0a 03                 a3 = 0x3
  1368: 33 08                    a1 = 0
  1370: 33 0b                    a4 = 0
  1372: 33 0c                    a5 = 0
  1374: 0a 12                    ecalli 18 // 'fetch'
  1376: 01                       fallthrough
      :                          @92
  1377: 95 1a 90 00              a3 = sp + 0x90
  1381: 33 08 24                 a1 = 0x24
  1384: 53 15 08 3b              jump @98 if s0 <u 8
      :                          @93
  1388: 95 17 b8 00              a0 = sp + 0xb8
  1392: 33 09 00 20              a2 = 0x2000
  1396: 33 08                    a1 = 0
  1398: 50 10 3c d1 39           ra = 60, jump @865
      :                          @94 [@dyn 30]
  1403: 95 18 90 00              a1 = sp + 0x90
  1407: 95 19 b8 00              a2 = sp + 0xb8
  1411: 33 0b 00 20              a4 = 0x2000
  1415: 82 17 80 00              a0 = u64 [sp + 0x80]
  1419: 33 0a                    a3 = 0
  1421: 0a 11                    ecalli 17 // 'historical_lookup'
  1423: 01                       fallthrough
      :                          @95
  1424: 95 78 01                 a1 = a0 + 0x1
  1427: 55 18 04 2b              jump @99 if a1 >=u 4
      :                          @96
  1431: 33 08                    a1 = 0
  1433: 33 0a 00 00 01           a3 = 0x10000
  1438: 28 05                    jump @98
      :                          @97
  1440: 33 08                    a1 = 0
  1442: 01                       fallthrough
      :                          @98
  1443: 64 a7                    a0 = a3
  1445: 33 09 c8 2b              a2 = 0x2bc8
  1449: c8 91 01                 sp = sp + a2
  1452: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1456: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1460: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1464: 95 11 f8 07              sp = sp + 0x7f8
  1468: 32 00                    ret
      :                          @99
  1470: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1473: 53 18 03 d6              jump @96 if a1 <u 3
      :                          @100
  1477: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1480: 51 18 06 cf              jump @96 if a1 == 6
      :                          @101
  1484: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1487: 53 18 03 c8              jump @96 if a1 <u 3
      :                          @102
  1491: 7c 18 ba 00              a1 = u8 [sp + 0xba]
  1495: 7c 19 b9 00              a2 = u8 [sp + 0xb9]
  1499: 7c 1a b8 00              a3 = u8 [sp + 0xb8]
  1503: 97 88 10                 a1 = a1 << 0x10
  1506: 97 99 08                 a2 = a2 << 0x8
  1509: d4 98 08                 a1 = a1 | a2
  1512: d4 a8 08                 a1 = a1 | a3
  1515: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1518: ac 89 a9                 jump @96 if a2 <u a1
      :                          @103
  1521: 7c 17 bd 00              a0 = u8 [sp + 0xbd]
  1525: 7c 1a bc 00              a3 = u8 [sp + 0xbc]
  1529: 7c 1b bb 00              a4 = u8 [sp + 0xbb]
  1533: 97 77 10                 a0 = a0 << 0x10
  1536: 97 aa 08                 a3 = a3 << 0x8
  1539: d4 a7 07                 a0 = a0 | a3
  1542: d4 b7 07                 a0 = a0 | a4
  1545: c9 89 09                 a2 = a2 - a1
  1548: ac 79 8b                 jump @96 if a2 <u a0
      :                          @104
  1551: c9 79 06                 s1 = a2 - a0
  1554: 53 16 04 85              jump @96 if s1 <u 4
      :                          @105
  1558: 95 12 c3 00              t0 = sp + 0xc3
  1562: c8 28 03                 t1 = a1 + t0
  1565: c8 37 0b                 a4 = a0 + t1
  1568: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1571: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1574: 7c ba                    a3 = u8 [a4]
  1576: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1579: 97 cc 10                 a5 = a5 << 0x10
  1582: 97 55 08                 s0 = s0 << 0x8
  1585: d4 5c 0c                 a5 = a5 | s0
  1588: d4 c9 09                 a2 = a2 | a5
  1591: 97 99 08                 a2 = a2 << 0x8
  1594: d4 a9 0c                 a5 = a2 | a3
  1597: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1600: ac c6 57 ff              jump @96 if s1 <u a5
      :                          @106
  1604: 7c 19 bf 00              a2 = u8 [sp + 0xbf]
  1608: 95 1a b8 20              a3 = sp + 0x20b8
  1612: 7c 14 be 00              t2 = u8 [sp + 0xbe]
  1616: 97 99 08                 a2 = a2 << 0x8
  1619: 7c 16 c2 00              s1 = u8 [sp + 0xc2]
  1623: 7c 15 c1 00              s0 = u8 [sp + 0xc1]
  1627: d4 49 04                 t2 = a2 | t2
  1630: 7c 19 c0 00              a2 = u8 [sp + 0xc0]
  1634: 97 66 10                 s1 = s1 << 0x10
  1637: 97 55 08                 s0 = s0 << 0x8
  1640: d4 65 05                 s0 = s0 | s1
  1643: d4 59 09                 a2 = a2 | s0
  1646: 33 05 ff ff ef           s0 = 0xffffffffffefffff
  1651: 7b 15 88 00              u64 [sp + 0x88] = s0
  1655: 95 bb 04                 a4 = a4 + 0x4
  1658: 7b a4                    u64 [a3] = t2
  1660: 7b a9 08                 u64 [a3 + 0x8] = a2
  1663: 7b a2 10                 u64 [a3 + 0x10] = t0
  1666: 7b a8 18                 u64 [a3 + 0x18] = a1
  1669: 7b a3 20                 u64 [a3 + 0x20] = t1
  1672: 7b a7 28                 u64 [a3 + 0x28] = a0
  1675: 7b ab 30                 u64 [a3 + 0x30] = a4
  1678: 7b ac 38                 u64 [a3 + 0x38] = a5
  1681: 7b aa 50                 u64 [a3 + 0x50] = a3
  1684: 33 08 16                 a1 = 0x16
  1687: 7b a8 58                 u64 [a3 + 0x58] = a1
  1690: 95 17 c0 20              a0 = sp + 0x20c0
  1694: 7b a7 60                 u64 [a3 + 0x60] = a0
  1697: 7b a8 68                 u64 [a3 + 0x68] = a1
  1700: 95 17 c8 20              a0 = sp + 0x20c8
  1704: 7b a7 70                 u64 [a3 + 0x70] = a0
  1707: 7b a8 78                 u64 [a3 + 0x78] = a1
  1710: 95 17 d0 20              a0 = sp + 0x20d0
  1714: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1718: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1722: 95 17 d8 20              a0 = sp + 0x20d8
  1726: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1730: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1734: 95 17 e0 20              a0 = sp + 0x20e0
  1738: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1742: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1746: 95 17 e8 20              a0 = sp + 0x20e8
  1750: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1754: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1758: 95 17 f0 20              a0 = sp + 0x20f0
  1762: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1766: 7b 18 80 00              u64 [sp + 0x80] = a1
  1770: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1774: 33 07 08 01 01           a0 = 0x10108
  1779: 95 16 10 31              s1 = sp + 0x3110
  1783: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1787: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1792: 49 26 68 01              u64 [s1 + 360] = 0
  1796: 95 18 08 21              a1 = sp + 0x2108
  1800: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1804: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1809: 95 17 a0 31              a0 = sp + 0x31a0
  1813: 95 18 58 32              a1 = sp + 0x3258
  1817: 50 10 3e 01 35           ra = 62, jump @798
      :                          @107 [@dyn 31]
  1822: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1826: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1830: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1834: 33 07 03                 a0 = 0x3
  1837: 33 08                    a1 = 0
  1839: 33 09                    a2 = 0
  1841: 64 5a                    a3 = s0
  1843: 33 00 40                 ra = 0x40
  1846: 0a 64                    ecalli 100 // 'log'
  1848: 01                       fallthrough
      :                          @108 [@dyn 32]
  1849: 82 17 88 00              a0 = u64 [sp + 0x88]
  1853: c8 67 07                 a0 = a0 + s1
  1856: 53 37 00 00 f0 27        jump @114 if a0 <u 4293918720
      :                          @109
  1862: 33 07 50 00 03           a0 = 0x30050
  1867: 95 77 00 00 10           a0 = a0 + 0x100000
  1872: 01                       fallthrough
      :                          @110
  1873: 82 78                    a1 = u64 [a0]
  1875: c9 87 09                 a2 = a0 - a1
  1878: ab 59 11                 jump @114 if a2 != s0
      :                          @111
  1881: c9 68 09                 a2 = a1 - s1
  1884: 01                       fallthrough
      :                          @112
  1885: 82 7a                    a3 = u64 [a0]
  1887: ab 8a f2                 jump @110 if a3 != a1
      :                          @113
  1890: 7b 79                    u64 [a0] = a2
  1892: 0a                       ecalli 0 // 'gas'
  1893: 28 04                    jump @115
      :                          @114
  1895: 0a                       ecalli 0 // 'gas'
  1896: 01                       fallthrough
      :                          @115
  1897: 95 18 b8 20              a1 = sp + 0x20b8
  1901: 7b 87 40                 u64 [a1 + 0x40] = a0
  1904: 95 17 f8 20              a0 = sp + 0x20f8
  1908: 95 16 10 31              s1 = sp + 0x3110
  1912: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1916: 82 17 80 00              a0 = u64 [sp + 0x80]
  1920: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1924: 33 07 98 01 01           a0 = 0x10198
  1929: 7b 87 50                 u64 [a1 + 0x50] = a0
  1932: 95 17 a0 31              a0 = sp + 0x31a0
  1936: 7b 87 60                 u64 [a1 + 0x60] = a0
  1939: 49 18 58 01              u64 [a1 + 88] = 0x1
  1943: 49 18 70                 u64 [a1 + 112] = 0
  1946: 49 18 68 01              u64 [a1 + 104] = 0x1
  1950: 95 17 58 32              a0 = sp + 0x3258
  1954: 95 18 08 21              a1 = sp + 0x2108
  1958: 50 10 42 74 34           ra = 66, jump @798
      :                          @116 [@dyn 33]
  1963: 82 65 50 01              s0 = u64 [s1 + 0x150]
  1967: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  1971: 82 66 48 01              s1 = u64 [s1 + 0x148]
  1975: 33 07 04                 a0 = 0x4
  1978: 33 08                    a1 = 0
  1980: 33 09                    a2 = 0
  1982: 64 5a                    a3 = s0
  1984: 33 00 44                 ra = 0x44
  1987: 0a 64                    ecalli 100 // 'log'
  1989: 01                       fallthrough
      :                          @117 [@dyn 34]
  1990: 82 17 88 00              a0 = u64 [sp + 0x88]
  1994: c8 67 07                 a0 = a0 + s1
  1997: 53 37 00 00 f0 25        jump @123 if a0 <u 4293918720
      :                          @118
  2003: 33 07 50 00 03           a0 = 0x30050
  2008: 95 77 00 00 10           a0 = a0 + 0x100000
  2013: 01                       fallthrough
      :                          @119
  2014: 82 78                    a1 = u64 [a0]
  2016: c9 87 09                 a2 = a0 - a1
  2019: ab 59 0f                 jump @123 if a2 != s0
      :                          @120
  2022: c9 68 09                 a2 = a1 - s1
  2025: 01                       fallthrough
      :                          @121
  2026: 82 7a                    a3 = u64 [a0]
  2028: ab 8a f2                 jump @119 if a3 != a1
      :                          @122
  2031: 7b 79                    u64 [a0] = a2
  2033: 01                       fallthrough
      :                          @123
  2034: 95 15 b8 20              s0 = sp + 0x20b8
  2038: 82 57 30                 a0 = u64 [s0 + 0x30]
  2041: 82 58 38                 a1 = u64 [s0 + 0x38]
  2044: 33 09                    a2 = 0
  2046: 0a 14                    ecalli 20 // 'machine'
  2048: 7b 57 48                 u64 [s0 + 0x48] = a0
  2051: 95 17 00 21              a0 = sp + 0x2100
  2055: 95 16 10 31              s1 = sp + 0x3110
  2059: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2063: 33 07 16                 a0 = 0x16
  2066: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2070: 33 07 c0 01 01           a0 = 0x101c0
  2075: 7b 57 50                 u64 [s0 + 0x50] = a0
  2078: 95 17 a0 31              a0 = sp + 0x31a0
  2082: 7b 57 60                 u64 [s0 + 0x60] = a0
  2085: 49 15 58 01              u64 [s0 + 88] = 0x1
  2089: 49 15 68 01              u64 [s0 + 104] = 0x1
  2093: 49 15 70                 u64 [s0 + 112] = 0
  2096: 95 17 58 32              a0 = sp + 0x3258
  2100: 95 18 08 21              a1 = sp + 0x2108
  2104: 50 10 46 e2 33           ra = 70, jump @798
      :                          @124 [@dyn 35]
  2109: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2113: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2117: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2121: 33 07 03                 a0 = 0x3
  2124: 33 08                    a1 = 0
  2126: 33 09                    a2 = 0
  2128: 64 5a                    a3 = s0
  2130: 33 00 48                 ra = 0x48
  2133: 0a 64                    ecalli 100 // 'log'
  2135: 01                       fallthrough
      :                          @125 [@dyn 36]
  2136: 82 17 88 00              a0 = u64 [sp + 0x88]
  2140: c8 67 07                 a0 = a0 + s1
  2143: 53 37 00 00 f0 25        jump @131 if a0 <u 4293918720
      :                          @126
  2149: 33 07 50 00 03           a0 = 0x30050
  2154: 95 77 00 00 10           a0 = a0 + 0x100000
  2159: 01                       fallthrough
      :                          @127
  2160: 82 78                    a1 = u64 [a0]
  2162: c9 87 09                 a2 = a0 - a1
  2165: ab 59 0f                 jump @131 if a2 != s0
      :                          @128
  2168: c9 68 09                 a2 = a1 - s1
  2171: 01                       fallthrough
      :                          @129
  2172: 82 7a                    a3 = u64 [a0]
  2174: ab 8a f2                 jump @127 if a3 != a1
      :                          @130
  2177: 7b 79                    u64 [a0] = a2
  2179: 01                       fallthrough
      :                          @131
  2180: 95 19 b8 20              a2 = sp + 0x20b8
  2184: 82 97                    a0 = u64 [a2]
  2186: 7b 17 70                 u64 [sp + 0x70] = a0
  2189: 82 97 08                 a0 = u64 [a2 + 0x8]
  2192: 7b 17 68                 u64 [sp + 0x68] = a0
  2195: 82 97 10                 a0 = u64 [a2 + 0x10]
  2198: 7b 17 60                 u64 [sp + 0x60] = a0
  2201: 82 95 18                 s0 = u64 [a2 + 0x18]
  2204: 82 98 20                 a1 = u64 [a2 + 0x20]
  2207: 7b 18 58                 u64 [sp + 0x58] = a1
  2210: 80 97 48                 a0 = u32 [a2 + 0x48]
  2213: 82 96 28                 s1 = u64 [a2 + 0x28]
  2216: 49 11 78 ff 0f           u64 [sp + 120] = 0xfff
  2221: 95 59 ff 0f              a2 = s0 + 0xfff
  2225: 98 99 0c                 a2 = a2 >> 0xc
  2228: 33 08 10                 a1 = 0x10
  2231: 7b 17 80 00              u64 [sp + 0x80] = a0
  2235: 0a 17                    ecalli 23 // 'zero'
  2237: 01                       fallthrough
      :                          @132
  2238: 51 07 17                 jump @134 if a0 == 0
      :                          @133
  2241: 33 0a 84 12 01           a3 = 0x11284
  2246: 33 07 02                 a0 = 0x2
  2249: 33 0b 3e                 a4 = 0x3e
  2252: 33 08                    a1 = 0
  2254: 33 09                    a2 = 0
  2256: 0a 64                    ecalli 100 // 'log'
  2258: 28 e4 00                 jump @147
      :                          @134
  2261: 7b 16 50                 u64 [sp + 0x50] = s1
  2264: 82 17 78                 a0 = u64 [sp + 0x78]
  2267: c8 67 07                 a0 = a0 + s1
  2270: 98 77 0c                 a0 = a0 >> 0xc
  2273: 82 19 70                 a2 = u64 [sp + 0x70]
  2276: c8 79 09                 a2 = a2 + a0
  2279: 7b 15 70                 u64 [sp + 0x70] = s0
  2282: 95 57 ff ff 00           a0 = s0 + 0xffff
  2287: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2292: 95 75 00 00 02           s0 = a0 + 0x20000
  2297: 98 58 0c                 a1 = s0 >> 0xc
  2300: 82 17 80 00              a0 = u64 [sp + 0x80]
  2304: 0a 17                    ecalli 23 // 'zero'
  2306: 01                       fallthrough
      :                          @135
  2307: 51 07 17                 jump @137 if a0 == 0
      :                          @136
  2310: 33 0a 46 12 01           a3 = 0x11246
  2315: 33 07 02                 a0 = 0x2
  2318: 33 0b 3e                 a4 = 0x3e
  2321: 33 08                    a1 = 0
  2323: 33 09                    a2 = 0
  2325: 0a 64                    ecalli 100 // 'log'
  2327: 28 9f 00                 jump @147
      :                          @137
  2330: 82 16 78                 s1 = u64 [sp + 0x78]
  2333: 82 17 68                 a0 = u64 [sp + 0x68]
  2336: c8 76 06                 s1 = s1 + a0
  2339: 98 69 0c                 a2 = s1 >> 0xc
  2342: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2346: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2356: c9 78 08                 a1 = a1 - a0
  2359: 98 88 0c                 a1 = a1 >> 0xc
  2362: 82 17 80 00              a0 = u64 [sp + 0x80]
  2366: 0a 17                    ecalli 23 // 'zero'
  2368: 01                       fallthrough
      :                          @138
  2369: 51 07 16                 jump @140 if a0 == 0
      :                          @139
  2372: 33 0a 0a 12 01           a3 = 0x1120a
  2377: 33 07 02                 a0 = 0x2
  2380: 33 0b 3c                 a4 = 0x3c
  2383: 33 08                    a1 = 0
  2385: 33 09                    a2 = 0
  2387: 0a 64                    ecalli 100 // 'log'
  2389: 28 61                    jump @147
      :                          @140
  2391: 33 09 00 00 01           a2 = 0x10000
  2396: 82 17 80 00              a0 = u64 [sp + 0x80]
  2400: 82 18 60                 a1 = u64 [sp + 0x60]
  2403: 82 1a 70                 a3 = u64 [sp + 0x70]
  2406: 0a 16                    ecalli 22 // 'poke'
  2408: 01                       fallthrough
      :                          @141
  2409: 51 07 16                 jump @143 if a0 == 0
      :                          @142
  2412: 33 0a cc 11 01           a3 = 0x111cc
  2417: 33 07 02                 a0 = 0x2
  2420: 33 0b 3e                 a4 = 0x3e
  2423: 33 08                    a1 = 0
  2425: 33 09                    a2 = 0
  2427: 0a 64                    ecalli 100 // 'log'
  2429: 28 39                    jump @147
      :                          @143
  2431: 82 17 80 00              a0 = u64 [sp + 0x80]
  2435: 82 18 58                 a1 = u64 [sp + 0x58]
  2438: 64 59                    a2 = s0
  2440: 82 1a 50                 a3 = u64 [sp + 0x50]
  2443: 0a 16                    ecalli 22 // 'poke'
  2445: 01                       fallthrough
      :                          @144
  2446: 51 07 16                 jump @146 if a0 == 0
      :                          @145
  2449: 33 0a 8e 11 01           a3 = 0x1118e
  2454: 33 07 02                 a0 = 0x2
  2457: 33 0b 3e                 a4 = 0x3e
  2460: 33 08                    a1 = 0
  2462: 33 09                    a2 = 0
  2464: 0a 64                    ecalli 100 // 'log'
  2466: 28 14                    jump @147
      :                          @146
  2468: 33 0a 60 11 01           a3 = 0x11160
  2473: 33 07 02                 a0 = 0x2
  2476: 33 0b 2e                 a4 = 0x2e
  2479: 33 08                    a1 = 0
  2481: 33 09                    a2 = 0
  2483: 0a 64                    ecalli 100 // 'log'
  2485: 01                       fallthrough
      :                          @147
  2486: 95 15 10 31              s0 = sp + 0x3110
  2490: 33 06 08 10              s1 = 0x1008
  2494: 95 17 08 21              a0 = sp + 0x2108
  2498: 33 08                    a1 = 0
  2500: 33 09 08 10              a2 = 0x1008
  2504: 50 10 4a 7f 35           ra = 74, jump @865
      :                          @148 [@dyn 37]
  2509: 49 05                    u64 [s0 + 0] = 0
  2511: 95 17 10 21              a0 = sp + 0x2110
  2515: 7b 57 08                 u64 [s0 + 0x8] = a0
  2518: 49 15 10                 u64 [s0 + 16] = 0
  2521: 49 15 18                 u64 [s0 + 24] = 0
  2524: 95 17 08 21              a0 = sp + 0x2108
  2528: 33 0a 06                 a3 = 0x6
  2531: 33 08                    a1 = 0
  2533: 7b 16 70                 u64 [sp + 0x70] = s1
  2536: 64 69                    a2 = s1
  2538: 33 0b                    a4 = 0
  2540: 33 0c                    a5 = 0
  2542: 0a 12                    ecalli 18 // 'fetch'
  2544: 01                       fallthrough
      :                          @149
  2545: 7b 57 58 02              u64 [s0 + 0x258] = a0
  2549: 95 16 10 31              s1 = sp + 0x3110
  2553: 51 17 ff 78 02           jump @176 if a0 == 4294967295
      :                          @150
  2558: 33 07 16                 a0 = 0x16
  2561: 7b 17 80 00              u64 [sp + 0x80] = a0
  2565: 33 07 f8 01 01           a0 = 0x101f8
  2570: 7b 17 68                 u64 [sp + 0x68] = a0
  2573: 33 07 38 02 01           a0 = 0x10238
  2578: 7b 17 60                 u64 [sp + 0x60] = a0
  2581: 33 07 28 00 01           a0 = 0x10028
  2586: 7b 17 58                 u64 [sp + 0x58] = a0
  2589: 33 05 50 00 03           s0 = 0x30050
  2594: 95 55 00 00 10           s0 = s0 + 0x100000
  2599: 33 07 88 02 01           a0 = 0x10288
  2604: 7b 17 50                 u64 [sp + 0x50] = a0
  2607: 28 27                    jump @153
      :                          @151
  2609: 95 16 10 31              s1 = sp + 0x3110
  2613: 82 6b                    a4 = u64 [s1]
  2615: 95 bb 01                 a4 = a4 + 0x1
  2618: 7b 6b                    u64 [s1] = a4
  2620: 95 17 08 21              a0 = sp + 0x2108
  2624: 33 0a 06                 a3 = 0x6
  2627: 33 08                    a1 = 0
  2629: 82 19 70                 a2 = u64 [sp + 0x70]
  2632: 33 0c                    a5 = 0
  2634: 0a 12                    ecalli 18 // 'fetch'
  2636: 01                       fallthrough
      :                          @152
  2637: 7b 67 58 02              u64 [s1 + 0x258] = a0
  2641: 51 17 ff 20 02           jump @176 if a0 == 4294967295
      :                          @153
  2646: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2650: 82 17 80 00              a0 = u64 [sp + 0x80]
  2654: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2658: 95 18 68 33              a1 = sp + 0x3368
  2662: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2666: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2670: 82 17 68                 a0 = u64 [sp + 0x68]
  2673: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2677: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2682: 49 26 68 01              u64 [s1 + 360] = 0
  2686: 95 18 a0 31              a1 = sp + 0x31a0
  2690: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2694: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2699: 95 17 38 31              a0 = sp + 0x3138
  2703: 95 18 58 32              a1 = sp + 0x3258
  2707: 50 10 4c 87 31           ra = 76, jump @798
      :                          @154 [@dyn 38]
  2712: 95 17 10 31              a0 = sp + 0x3110
  2716: 82 76 30                 s1 = u64 [a0 + 0x30]
  2719: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2722: 82 77 28                 a0 = u64 [a0 + 0x28]
  2725: 7b 17 78                 u64 [sp + 0x78] = a0
  2728: 33 07 04                 a0 = 0x4
  2731: 33 08                    a1 = 0
  2733: 33 09                    a2 = 0
  2735: 64 6a                    a3 = s1
  2737: 33 00 4e                 ra = 0x4e
  2740: 0a 64                    ecalli 100 // 'log'
  2742: 01                       fallthrough
      :                          @155 [@dyn 39]
  2743: 82 1b 78                 a4 = u64 [sp + 0x78]
  2746: 82 17 88 00              a0 = u64 [sp + 0x88]
  2750: c8 b7 07                 a0 = a0 + a4
  2753: 53 37 00 00 f0 1a        jump @160 if a0 <u 4293918720
      :                          @156
  2759: 82 57                    a0 = u64 [s0]
  2761: c9 75 08                 a1 = s0 - a0
  2764: ab 68 0f                 jump @160 if a1 != s1
      :                          @157
  2767: c9 b7 08                 a1 = a0 - a4
  2770: 01                       fallthrough
      :                          @158
  2771: 82 59                    a2 = u64 [s0]
  2773: ab 79 f2                 jump @156 if a2 != a0
      :                          @159
  2776: 7b 58                    u64 [s0] = a1
  2778: 01                       fallthrough
      :                          @160
  2779: 95 18 b8 20              a1 = sp + 0x20b8
  2783: 80 87 50                 a0 = u32 [a1 + 0x50]
  2786: 80 88 54                 a1 = u32 [a1 + 0x54]
  2789: 95 19 10 31              a2 = sp + 0x3110
  2793: 7b 97 10                 u64 [a2 + 0x10] = a0
  2796: 7b 98 18                 u64 [a2 + 0x18] = a1
  2799: 33 09 01                 a2 = 0x1
  2802: 0a 17                    ecalli 23 // 'zero'
  2804: 95 19 10 31              a2 = sp + 0x3110
  2808: 7b 97 60 02              u64 [a2 + 0x260] = a0
  2812: 95 17 20 31              a0 = sp + 0x3120
  2816: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2820: 82 17 80 00              a0 = u64 [sp + 0x80]
  2824: 7b 97 50 01              u64 [a2 + 0x150] = a0
  2828: 95 18 28 31              a1 = sp + 0x3128
  2832: 7b 98 58 01              u64 [a2 + 0x158] = a1
  2836: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2840: 95 18 70 33              a1 = sp + 0x3370
  2844: 7b 98 68 01              u64 [a2 + 0x168] = a1
  2848: 7b 97 70 01              u64 [a2 + 0x170] = a0
  2852: 82 17 60                 a0 = u64 [sp + 0x60]
  2855: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2859: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  2864: 49 29 b0 00              u64 [a2 + 176] = 0
  2868: 95 17 58 32              a0 = sp + 0x3258
  2872: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2876: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  2881: 95 17 38 31              a0 = sp + 0x3138
  2885: 95 18 a0 31              a1 = sp + 0x31a0
  2889: 50 10 50 d1 30           ra = 80, jump @798
      :                          @161 [@dyn 40]
  2894: 95 17 10 31              a0 = sp + 0x3110
  2898: 82 76 30                 s1 = u64 [a0 + 0x30]
  2901: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2904: 82 77 28                 a0 = u64 [a0 + 0x28]
  2907: 7b 17 78                 u64 [sp + 0x78] = a0
  2910: 33 07 04                 a0 = 0x4
  2913: 33 08                    a1 = 0
  2915: 33 09                    a2 = 0
  2917: 64 6a                    a3 = s1
  2919: 33 00 52                 ra = 0x52
  2922: 0a 64                    ecalli 100 // 'log'
  2924: 01                       fallthrough
      :                          @162 [@dyn 41]
  2925: 82 1b 78                 a4 = u64 [sp + 0x78]
  2928: 82 17 88 00              a0 = u64 [sp + 0x88]
  2932: c8 b7 07                 a0 = a0 + a4
  2935: 53 37 00 00 f0 1a        jump @167 if a0 <u 4293918720
      :                          @163
  2941: 82 57                    a0 = u64 [s0]
  2943: c9 75 08                 a1 = s0 - a0
  2946: ab 68 0f                 jump @167 if a1 != s1
      :                          @164
  2949: c9 b7 08                 a1 = a0 - a4
  2952: 01                       fallthrough
      :                          @165
  2953: 82 59                    a2 = u64 [s0]
  2955: ab 79 f2                 jump @163 if a2 != a0
      :                          @166
  2958: 7b 58                    u64 [s0] = a1
  2960: 01                       fallthrough
      :                          @167
  2961: 95 1b 10 31              a4 = sp + 0x3110
  2965: 82 b9 18                 a2 = u64 [a4 + 0x18]
  2968: 82 b7 10                 a0 = u64 [a4 + 0x10]
  2971: 82 b8 08                 a1 = u64 [a4 + 0x8]
  2974: 95 1a 08 21              a3 = sp + 0x2108
  2978: 7b ba 70 02              u64 [a4 + 0x270] = a3
  2982: 97 99 0c                 a2 = a2 << 0xc
  2985: 7b b9 80 02              u64 [a4 + 0x280] = a2
  2989: 33 0a 00 10              a3 = 0x1000
  2993: 0a 16                    ecalli 22 // 'poke'
  2995: 95 19 10 31              a2 = sp + 0x3110
  2999: 7b 97 08 01              u64 [a2 + 0x108] = a0
  3003: 95 17 20 31              a0 = sp + 0x3120
  3007: 7b 97 48 01              u64 [a2 + 0x148] = a0
  3011: 82 17 80 00              a0 = u64 [sp + 0x80]
  3015: 7b 97 50 01              u64 [a2 + 0x150] = a0
  3019: 95 18 80 33              a1 = sp + 0x3380
  3023: 7b 98 58 01              u64 [a2 + 0x158] = a1
  3027: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3031: 95 18 90 33              a1 = sp + 0x3390
  3035: 7b 98 68 01              u64 [a2 + 0x168] = a1
  3039: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3043: 82 18 58                 a1 = u64 [sp + 0x58]
  3046: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3050: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3054: 95 18 18 32              a1 = sp + 0x3218
  3058: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3062: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3066: 82 17 50                 a0 = u64 [sp + 0x50]
  3069: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3073: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3078: 49 29 b0 00              u64 [a2 + 176] = 0
  3082: 95 17 58 32              a0 = sp + 0x3258
  3086: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3090: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3095: 95 17 38 31              a0 = sp + 0x3138
  3099: 95 18 a0 31              a1 = sp + 0x31a0
  3103: 50 10 54 fb 2f           ra = 84, jump @798
      :                          @168 [@dyn 42]
  3108: 95 17 10 31              a0 = sp + 0x3110
  3112: 82 76 30                 s1 = u64 [a0 + 0x30]
  3115: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3118: 82 77 28                 a0 = u64 [a0 + 0x28]
  3121: 7b 17 78                 u64 [sp + 0x78] = a0
  3124: 33 07 04                 a0 = 0x4
  3127: 33 08                    a1 = 0
  3129: 33 09                    a2 = 0
  3131: 64 6a                    a3 = s1
  3133: 33 00 56                 ra = 0x56
  3136: 0a 64                    ecalli 100 // 'log'
  3138: 01                       fallthrough
      :                          @169 [@dyn 43]
  3139: 82 1b 78                 a4 = u64 [sp + 0x78]
  3142: 82 17 88 00              a0 = u64 [sp + 0x88]
  3146: c8 b7 07                 a0 = a0 + a4
  3149: 53 37 00 00 f0 e4 fd     jump @151 if a0 <u 4293918720
      :                          @170
  3156: 82 57                    a0 = u64 [s0]
  3158: c9 75 08                 a1 = s0 - a0
  3161: ab 68 d8 fd              jump @151 if a1 != s1
      :                          @171
  3165: c9 b7 08                 a1 = a0 - a4
  3168: 01                       fallthrough
      :                          @172
  3169: 82 59                    a2 = u64 [s0]
  3171: ab 79 f1                 jump @170 if a2 != a0
      :                          @173
  3174: 7b 58                    u64 [s0] = a1
  3176: 33 0a                    a3 = 0
  3178: 01                       fallthrough
      :                          @174
  3179: ab 79 e9                 jump @170 if a2 != a0
      :                          @175
  3182: 28 c3 fd                 jump @151
      :                          @176
  3185: 82 69 18                 a2 = u64 [s1 + 0x18]
  3188: 95 9a 01                 a3 = a2 + 0x1
  3191: 33 08 f0 ef 0f           a1 = 0xfeff0
  3196: 82 67 10                 a0 = u64 [s1 + 0x10]
  3199: db 9a 08                 a1 = a3 if a2 != 0
  3202: 7b 68 18                 u64 [s1 + 0x18] = a1
  3205: 33 09 01                 a2 = 0x1
  3208: 0a 17                    ecalli 23 // 'zero'
  3210: 7b 67 20                 u64 [s1 + 0x20] = a0
  3213: 95 17 20 31              a0 = sp + 0x3120
  3217: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3221: 33 07 16                 a0 = 0x16
  3224: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3228: 95 18 28 31              a1 = sp + 0x3128
  3232: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3236: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3240: 95 18 30 31              a1 = sp + 0x3130
  3244: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3248: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3252: 33 07 f0 02 01           a0 = 0x102f0
  3257: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3261: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3266: 49 26 b0 00              u64 [s1 + 176] = 0
  3270: 95 18 58 32              a1 = sp + 0x3258
  3274: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  3278: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3283: 95 17 38 31              a0 = sp + 0x3138
  3287: 95 18 a0 31              a1 = sp + 0x31a0
  3291: 50 10 58 3f 2f           ra = 88, jump @798
      :                          @177 [@dyn 44]
  3296: 82 65 30                 s0 = u64 [s1 + 0x30]
  3299: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3302: 82 66 28                 s1 = u64 [s1 + 0x28]
  3305: 33 07 04                 a0 = 0x4
  3308: 33 08                    a1 = 0
  3310: 33 09                    a2 = 0
  3312: 64 5a                    a3 = s0
  3314: 33 00 5a                 ra = 0x5a
  3317: 0a 64                    ecalli 100 // 'log'
  3319: 01                       fallthrough
      :                          @178 [@dyn 45]
  3320: 82 17 88 00              a0 = u64 [sp + 0x88]
  3324: c8 67 07                 a0 = a0 + s1
  3327: 53 37 00 00 f0 27        jump @184 if a0 <u 4293918720
      :                          @179
  3333: 33 07 50 00 03           a0 = 0x30050
  3338: 95 77 00 00 10           a0 = a0 + 0x100000
  3343: 01                       fallthrough
      :                          @180
  3344: 82 78                    a1 = u64 [a0]
  3346: c9 87 09                 a2 = a0 - a1
  3349: ab 59 11                 jump @184 if a2 != s0
      :                          @181
  3352: c9 68 09                 a2 = a1 - s1
  3355: 01                       fallthrough
      :                          @182
  3356: 82 7a                    a3 = u64 [a0]
  3358: ab 8a f2                 jump @180 if a3 != a1
      :                          @183
  3361: 7b 79                    u64 [a0] = a2
  3363: 33 0b                    a4 = 0
  3365: 01                       fallthrough
      :                          @184
  3366: 95 16 10 31              s1 = sp + 0x3110
  3370: 49 16 58                 u64 [s1 + 88] = 0
  3373: 49 16 50                 u64 [s1 + 80] = 0
  3376: 49 16 48                 u64 [s1 + 72] = 0
  3379: 49 16 40                 u64 [s1 + 64] = 0
  3382: 49 16 38                 u64 [s1 + 56] = 0
  3385: 49 16 70                 u64 [s1 + 112] = 0
  3388: 49 16 78                 u64 [s1 + 120] = 0
  3391: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3401: 7b 67 28                 u64 [s1 + 0x28] = a0
  3404: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3414: 7b 67 30                 u64 [s1 + 0x30] = a0
  3417: 82 67                    a0 = u64 [s1]
  3419: 49 26 80 00              u64 [s1 + 128] = 0
  3423: 49 26 88 00              u64 [s1 + 136] = 0
  3427: 49 16 68                 u64 [s1 + 104] = 0
  3430: 7b 67 60                 u64 [s1 + 0x60] = a0
  3433: 95 17 38 31              a0 = sp + 0x3138
  3437: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3441: 33 07 1a                 a0 = 0x1a
  3444: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3448: 33 07 40 03 01           a0 = 0x10340
  3453: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3457: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3462: 49 26 68 01              u64 [s1 + 360] = 0
  3466: 95 17 18 32              a0 = sp + 0x3218
  3470: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3474: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3479: 95 17 a0 31              a0 = sp + 0x31a0
  3483: 95 18 58 32              a1 = sp + 0x3258
  3487: 50 10 5c 7b 2e           ra = 92, jump @798
      :                          @185 [@dyn 46]
  3492: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3496: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3500: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3504: 33 07 04                 a0 = 0x4
  3507: 33 08                    a1 = 0
  3509: 33 09                    a2 = 0
  3511: 64 5a                    a3 = s0
  3513: 33 00 5e                 ra = 0x5e
  3516: 0a 64                    ecalli 100 // 'log'
  3518: 01                       fallthrough
      :                          @186 [@dyn 47]
  3519: 82 17 88 00              a0 = u64 [sp + 0x88]
  3523: c8 67 07                 a0 = a0 + s1
  3526: 53 37 00 00 f0 25        jump @192 if a0 <u 4293918720
      :                          @187
  3532: 33 07 50 00 03           a0 = 0x30050
  3537: 95 77 00 00 10           a0 = a0 + 0x100000
  3542: 01                       fallthrough
      :                          @188
  3543: 82 78                    a1 = u64 [a0]
  3545: c9 87 09                 a2 = a0 - a1
  3548: ab 59 0f                 jump @192 if a2 != s0
      :                          @189
  3551: c9 68 09                 a2 = a1 - s1
  3554: 01                       fallthrough
      :                          @190
  3555: 82 7a                    a3 = u64 [a0]
  3557: ab 8a f2                 jump @188 if a3 != a1
      :                          @191
  3560: 7b 79                    u64 [a0] = a2
  3562: 01                       fallthrough
      :                          @192
  3563: 95 13 10 31              t1 = sp + 0x3110
  3567: 82 32 28                 t0 = u64 [t1 + 0x28]
  3570: 82 39 30                 a2 = u64 [t1 + 0x30]
  3573: 82 34 38                 t2 = u64 [t1 + 0x38]
  3576: 82 30 40                 ra = u64 [t1 + 0x40]
  3579: 82 3b 48                 a4 = u64 [t1 + 0x48]
  3582: 82 3c 50                 a5 = u64 [t1 + 0x50]
  3585: 82 36 58                 s1 = u64 [t1 + 0x58]
  3588: 82 35 60                 s0 = u64 [t1 + 0x60]
  3591: 49 23 90 00 00 00 01     u64 [t1 + 144] = 0x10000
  3598: 82 37 68                 a0 = u64 [t1 + 0x68]
  3601: 7b 32 98 00              u64 [t1 + 0x98] = t0
  3605: 82 38 70                 a1 = u64 [t1 + 0x70]
  3608: 7b 39 a0 00              u64 [t1 + 0xa0] = a2
  3612: 82 39 78                 a2 = u64 [t1 + 0x78]
  3615: 7b 34 a8 00              u64 [t1 + 0xa8] = t2
  3619: 82 3a 80 00              a3 = u64 [t1 + 0x80]
  3623: 7b 30 b0 00              u64 [t1 + 0xb0] = ra
  3627: 82 32 88 00              t0 = u64 [t1 + 0x88]
  3631: 7b 3b b8 00              u64 [t1 + 0xb8] = a4
  3635: 7b 3c c0 00              u64 [t1 + 0xc0] = a5
  3639: 7b 36 c8 00              u64 [t1 + 0xc8] = s1
  3643: 7b 35 d0 00              u64 [t1 + 0xd0] = s0
  3647: 95 15 10 31              s0 = sp + 0x3110
  3651: 7b 57 d8 00              u64 [s0 + 0xd8] = a0
  3655: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
  3659: 7b 59 e8 00              u64 [s0 + 0xe8] = a2
  3663: 7b 5a f0 00              u64 [s0 + 0xf0] = a3
  3667: 7b 52 f8 00              u64 [s0 + 0xf8] = t0
  3671: 33 07 16                 a0 = 0x16
  3674: 7b 17 70                 u64 [sp + 0x70] = a0
  3677: 33 07 70 03 01           a0 = 0x10370
  3682: 7b 17 68                 u64 [sp + 0x68] = a0
  3685: 33 06 50 00 03           s1 = 0x30050
  3690: 95 66 00 00 10           s1 = s1 + 0x100000
  3695: 01                       fallthrough
      :                          @193
  3696: 95 17 b8 20              a0 = sp + 0x20b8
  3700: 82 77 48                 a0 = u64 [a0 + 0x48]
  3703: 95 18 a0 31              a1 = sp + 0x31a0
  3707: 0a 19                    ecalli 25 // 'invoke'
  3709: 7b 18 78                 u64 [sp + 0x78] = a1
  3712: 7b 57 00 01              u64 [s0 + 0x100] = a0
  3716: 95 17 00 21              a0 = sp + 0x2100
  3720: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3724: 82 17 70                 a0 = u64 [sp + 0x70]
  3727: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3731: 95 18 10 32              a1 = sp + 0x3210
  3735: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3739: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3743: 95 18 f8 20              a1 = sp + 0x20f8
  3747: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3751: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3755: 82 17 68                 a0 = u64 [sp + 0x68]
  3758: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3762: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  3767: 49 25 28 01              u64 [s0 + 296] = 0
  3771: 95 17 58 32              a0 = sp + 0x3258
  3775: 7b 57 18 01              u64 [s0 + 0x118] = a0
  3779: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  3784: 95 17 90 33              a0 = sp + 0x3390
  3788: 95 18 18 32              a1 = sp + 0x3218
  3792: 50 10 60 4a 2d           ra = 96, jump @798
      :                          @194 [@dyn 48]
  3797: 95 17 10 31              a0 = sp + 0x3110
  3801: 82 75 88 02              s0 = u64 [a0 + 0x288]
  3805: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  3809: 82 77 80 02              a0 = u64 [a0 + 0x280]
  3813: 7b 17 80 00              u64 [sp + 0x80] = a0
  3817: 33 07 04                 a0 = 0x4
  3820: 33 08                    a1 = 0
  3822: 33 09                    a2 = 0
  3824: 64 5a                    a3 = s0
  3826: 33 00 62                 ra = 0x62
  3829: 0a 64                    ecalli 100 // 'log'
  3831: 01                       fallthrough
      :                          @195 [@dyn 49]
  3832: 82 1b 80 00              a4 = u64 [sp + 0x80]
  3836: 82 17 88 00              a0 = u64 [sp + 0x88]
  3840: c8 b7 07                 a0 = a0 + a4
  3843: 53 37 00 00 f0 1a        jump @200 if a0 <u 4293918720
      :                          @196
  3849: 82 67                    a0 = u64 [s1]
  3851: c9 76 08                 a1 = s1 - a0
  3854: ab 58 0f                 jump @200 if a1 != s0
      :                          @197
  3857: c9 b7 08                 a1 = a0 - a4
  3860: 01                       fallthrough
      :                          @198
  3861: 82 69                    a2 = u64 [s1]
  3863: ab 79 f2                 jump @196 if a2 != a0
      :                          @199
  3866: 7b 68                    u64 [s1] = a1
  3868: 01                       fallthrough
      :                          @200
  3869: 95 15 10 31              s0 = sp + 0x3110
  3873: 82 57 00 01              a0 = u64 [s0 + 0x100]
  3877: 51 07 b4 00              jump @205 if a0 == 0
      :                          @201
  3881: 85 77 03                 a0 = a0 ^ 0x3
  3884: 82 18 78                 a1 = u64 [sp + 0x78]
  3887: 85 88 64                 a1 = a1 ^ 0x64
  3890: d4 87 07                 a0 = a0 | a1
  3893: 52 07 3b ff              jump @193 if a0 != 0
      :                          @202
  3897: 95 17 38 31              a0 = sp + 0x3138
  3901: 33 09 68                 a2 = 0x68
  3904: 95 18 a8 31              a1 = sp + 0x31a8
  3908: 50 10 64 51 2f           ra = 100, jump @847
      :                          @203 [@dyn 50]
  3913: 82 57 60                 a0 = u64 [s0 + 0x60]
  3916: 7b 17 78                 u64 [sp + 0x78] = a0
  3919: 82 57 68                 a0 = u64 [s0 + 0x68]
  3922: 7b 17 58                 u64 [sp + 0x58] = a0
  3925: 82 57 70                 a0 = u64 [s0 + 0x70]
  3928: 7b 17 80 00              u64 [sp + 0x80] = a0
  3932: 82 57 78                 a0 = u64 [s0 + 0x78]
  3935: 7b 17 60                 u64 [sp + 0x60] = a0
  3938: 95 17 10 31              a0 = sp + 0x3110
  3942: 82 75 80 00              s0 = u64 [a0 + 0x80]
  3946: 49 27 40 01              u64 [a0 + 320] = 0
  3950: 49 27 38 01              u64 [a0 + 312] = 0
  3954: 49 27 30 01              u64 [a0 + 304] = 0
  3958: 49 27 28 01              u64 [a0 + 296] = 0
  3962: 49 27 20 01              u64 [a0 + 288] = 0
  3966: 49 27 18 01              u64 [a0 + 280] = 0
  3970: 49 27 10 01              u64 [a0 + 272] = 0
  3974: 49 27 08 01              u64 [a0 + 264] = 0
  3978: 95 17 58 32              a0 = sp + 0x3258
  3982: 33 09 00 01              a2 = 0x100
  3986: 33 08                    a1 = 0
  3988: 50 10 66 b3 2f           ra = 102, jump @865
      :                          @204 [@dyn 51]
  3993: 95 17 b8 20              a0 = sp + 0x20b8
  3997: 82 77 48                 a0 = u64 [a0 + 0x48]
  4000: 95 18 18 32              a1 = sp + 0x3218
  4004: 82 19 58                 a2 = u64 [sp + 0x58]
  4007: 82 1a 80 00              a3 = u64 [sp + 0x80]
  4011: 0a 15                    ecalli 21 // 'peek'
  4013: 95 17 b8 20              a0 = sp + 0x20b8
  4017: 82 77 48                 a0 = u64 [a0 + 0x48]
  4020: 95 18 58 32              a1 = sp + 0x3258
  4024: 82 19 60                 a2 = u64 [sp + 0x60]
  4027: 64 5a                    a3 = s0
  4029: 0a 15                    ecalli 21 // 'peek'
  4031: 95 18 18 32              a1 = sp + 0x3218
  4035: 95 1a 58 32              a3 = sp + 0x3258
  4039: 82 17 78                 a0 = u64 [sp + 0x78]
  4042: 82 19 80 00              a2 = u64 [sp + 0x80]
  4046: 64 5b                    a4 = s0
  4048: 95 15 10 31              s0 = sp + 0x3110
  4052: 0a 64                    ecalli 100 // 'log'
  4054: 28 9a fe                 jump @193
      :                          @205
  4057: 0a                       ecalli 0 // 'gas'
  4058: 95 18 b8 20              a1 = sp + 0x20b8
  4062: 7b 87 40                 u64 [a1 + 0x40] = a0
  4065: 95 17 f8 20              a0 = sp + 0x20f8
  4069: 7b 57 80 02              u64 [s0 + 0x280] = a0
  4073: 33 07 16                 a0 = 0x16
  4076: 7b 57 88 02              u64 [s0 + 0x288] = a0
  4080: 33 07 98 01 01           a0 = 0x10198
  4085: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4089: 49 25 50 01 01           u64 [s0 + 336] = 0x1
  4094: 49 25 68 01              u64 [s0 + 360] = 0
  4098: 95 18 90 33              a1 = sp + 0x3390
  4102: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4106: 49 25 60 01 01           u64 [s0 + 352] = 0x1
  4111: 95 17 18 32              a0 = sp + 0x3218
  4115: 95 18 58 32              a1 = sp + 0x3258
  4119: 50 10 68 03 2c           ra = 104, jump @798
      :                          @206 [@dyn 52]
  4124: 95 17 10 31              a0 = sp + 0x3110
  4128: 82 75 10 01              s0 = u64 [a0 + 0x110]
  4132: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  4136: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4140: 33 07 04                 a0 = 0x4
  4143: 33 08                    a1 = 0
  4145: 33 09                    a2 = 0
  4147: 64 5a                    a3 = s0
  4149: 33 00 6a                 ra = 0x6a
  4152: 0a 64                    ecalli 100 // 'log'
  4154: 01                       fallthrough
      :                          @207 [@dyn 53]
  4155: 82 17 88 00              a0 = u64 [sp + 0x88]
  4159: c8 67 07                 a0 = a0 + s1
  4162: 53 37 00 00 f0 27        jump @213 if a0 <u 4293918720
      :                          @208
  4168: 33 07 50 00 03           a0 = 0x30050
  4173: 95 77 00 00 10           a0 = a0 + 0x100000
  4178: 01                       fallthrough
      :                          @209
  4179: 82 78                    a1 = u64 [a0]
  4181: c9 87 09                 a2 = a0 - a1
  4184: ab 59 11                 jump @213 if a2 != s0
      :                          @210
  4187: c9 68 09                 a2 = a1 - s1
  4190: 01                       fallthrough
      :                          @211
  4191: 82 7a                    a3 = u64 [a0]
  4193: ab 8a f2                 jump @209 if a3 != a1
      :                          @212
  4196: 7b 79                    u64 [a0] = a2
  4198: 33 0b                    a4 = 0
  4200: 01                       fallthrough
      :                          @213
  4201: 95 17 b8 20              a0 = sp + 0x20b8
  4205: 82 78 48                 a1 = u64 [a0 + 0x48]
  4208: 95 15 10 31              s0 = sp + 0x3110
  4212: 82 59                    a2 = u64 [s0]
  4214: 7a 58 4c 02              u32 [s0 + 0x24c] = a1
  4218: 7b 19 60                 u64 [sp + 0x60] = a2
  4221: 51 19 ff 2e 03           jump @244 if a2 == 4294967295
      :                          @214
  4226: 33 08                    a1 = 0
  4228: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4238: 7b 19 58                 u64 [sp + 0x58] = a2
  4241: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4251: 7b 17 50                 u64 [sp + 0x50] = a0
  4254: 33 07 16                 a0 = 0x16
  4257: 7b 17 78                 u64 [sp + 0x78] = a0
  4260: 33 07 28 00 01           a0 = 0x10028
  4265: 7b 17 48                 u64 [sp + 0x48] = a0
  4268: 33 07 90 04 01           a0 = 0x10490
  4273: 7b 17 40                 u64 [sp + 0x40] = a0
  4276: 49 11 38 f0 ef 0f        u64 [sp + 56] = 0xfeff0
  4282: 33 07 02                 a0 = 0x2
  4285: 7b 17 30                 u64 [sp + 0x30] = a0
  4288: 33 07 12                 a0 = 0x12
  4291: 7b 17 28                 u64 [sp + 0x28] = a0
  4294: 33 07 10 05 01           a0 = 0x10510
  4299: 7b 17 20                 u64 [sp + 0x20] = a0
  4302: 33 06 50 00 03           s1 = 0x30050
  4307: 95 66 00 00 10           s1 = s1 + 0x100000
  4312: 33 07 0e                 a0 = 0xe
  4315: 7b 17 18                 u64 [sp + 0x18] = a0
  4318: 33 07 50 05 01           a0 = 0x10550
  4323: 7b 17 10                 u64 [sp + 0x10] = a0
  4326: 33 07 3c 00 03           a0 = 0x3003c
  4331: 7b 17 68                 u64 [sp + 0x68] = a0
  4334: 95 77 04                 a0 = a0 + 0x4
  4337: 7b 17 08                 u64 [sp + 0x8] = a0
  4340: 28 14                    jump @216
      :                          @215
  4342: 82 19 80 00              a2 = u64 [sp + 0x80]
  4346: 95 98 01                 a1 = a2 + 0x1
  4349: 95 15 10 31              s0 = sp + 0x3110
  4353: 82 17 60                 a0 = u64 [sp + 0x60]
  4356: aa 79 a7 02              jump @244 if a2 == a0
      :                          @216
  4360: 7b 58 50 02              u64 [s0 + 0x250] = a1
  4364: 7b 18 80 00              u64 [sp + 0x80] = a1
  4368: 97 89 0c                 a2 = a1 << 0xc
  4371: 95 17 b8 20              a0 = sp + 0x20b8
  4375: 82 77 48                 a0 = u64 [a0 + 0x48]
  4378: 82 58 08                 a1 = u64 [s0 + 0x8]
  4381: 82 1a 58                 a3 = u64 [sp + 0x58]
  4384: c8 a9 09                 a2 = a2 + a3
  4387: 82 1a 50                 a3 = u64 [sp + 0x50]
  4390: d2 a9 09                 a2 = a2 & a3
  4393: 7b 59 58 02              u64 [s0 + 0x258] = a2
  4397: 33 0a 00 10              a3 = 0x1000
  4401: 0a 15                    ecalli 21 // 'peek'
  4403: 7b 57 60 02              u64 [s0 + 0x260] = a0
  4407: 95 17 00 21              a0 = sp + 0x2100
  4411: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4415: 82 17 78                 a0 = u64 [sp + 0x78]
  4418: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4422: 95 18 18 31              a1 = sp + 0x3118
  4426: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4430: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4434: 95 18 68 33              a1 = sp + 0x3368
  4438: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4442: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4446: 82 18 48                 a1 = u64 [sp + 0x48]
  4449: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4453: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4457: 95 18 70 33              a1 = sp + 0x3370
  4461: 7b 58 88 01              u64 [s0 + 0x188] = a1
  4465: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4469: 82 17 40                 a0 = u64 [sp + 0x40]
  4472: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4476: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4481: 49 25 28 01              u64 [s0 + 296] = 0
  4485: 95 18 58 32              a1 = sp + 0x3258
  4489: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4493: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4498: 95 17 90 33              a0 = sp + 0x3390
  4502: 95 18 18 32              a1 = sp + 0x3218
  4506: 50 10 6c 80 2a           ra = 108, jump @798
      :                          @217 [@dyn 54]
  4511: 95 17 10 31              a0 = sp + 0x3110
  4515: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4519: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4523: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4527: 7b 17 70                 u64 [sp + 0x70] = a0
  4530: 33 07 03                 a0 = 0x3
  4533: 33 08                    a1 = 0
  4535: 33 09                    a2 = 0
  4537: 64 5a                    a3 = s0
  4539: 33 00 6e                 ra = 0x6e
  4542: 0a 64                    ecalli 100 // 'log'
  4544: 01                       fallthrough
      :                          @218 [@dyn 55]
  4545: 82 1b 70                 a4 = u64 [sp + 0x70]
  4548: 82 17 88 00              a0 = u64 [sp + 0x88]
  4552: c8 b7 07                 a0 = a0 + a4
  4555: 53 37 00 00 f0 1a        jump @223 if a0 <u 4293918720
      :                          @219
  4561: 82 67                    a0 = u64 [s1]
  4563: c9 76 08                 a1 = s1 - a0
  4566: ab 58 0f                 jump @223 if a1 != s0
      :                          @220
  4569: c9 b7 08                 a1 = a0 - a4
  4572: 01                       fallthrough
      :                          @221
  4573: 82 69                    a2 = u64 [s1]
  4575: ab 79 f2                 jump @219 if a2 != a0
      :                          @222
  4578: 7b 68                    u64 [s1] = a1
  4580: 01                       fallthrough
      :                          @223
  4581: 95 1a 10 31              a3 = sp + 0x3110
  4585: 81 a7 4c 02              a0 = i32 [a3 + 0x24c]
  4589: 81 a8 50 02              a1 = i32 [a3 + 0x250]
  4593: 95 19 b8 20              a2 = sp + 0x20b8
  4597: 7a 97 50                 u32 [a2 + 0x50] = a0
  4600: 82 17 38                 a0 = u64 [sp + 0x38]
  4603: be 87 07                 i32 a0 = a0 + a1
  4606: 7a a7 6c 02              u32 [a3 + 0x26c] = a0
  4610: 7a 97 54                 u32 [a2 + 0x54] = a0
  4613: 95 17 08 21              a0 = sp + 0x2108
  4617: 7b a7 70 02              u64 [a3 + 0x270] = a0
  4621: 49 2a 78 02 08           u64 [a3 + 632] = 0x8
  4626: 95 17 80 33              a0 = sp + 0x3380
  4630: 7b a7 48 01              u64 [a3 + 0x148] = a0
  4634: 82 17 30                 a0 = u64 [sp + 0x30]
  4637: 7b a7 50 01              u64 [a3 + 0x150] = a0
  4641: 95 17 5c 33              a0 = sp + 0x335c
  4645: 7b a7 58 01              u64 [a3 + 0x158] = a0
  4649: 82 17 28                 a0 = u64 [sp + 0x28]
  4652: 7b a7 60 01              u64 [a3 + 0x160] = a0
  4656: 95 18 7c 33              a1 = sp + 0x337c
  4660: 7b a8 68 01              u64 [a3 + 0x168] = a1
  4664: 7b a7 70 01              u64 [a3 + 0x170] = a0
  4668: 82 17 20                 a0 = u64 [sp + 0x20]
  4671: 7b a7 08 01              u64 [a3 + 0x108] = a0
  4675: 49 2a 10 01 03           u64 [a3 + 272] = 0x3
  4680: 49 2a 28 01              u64 [a3 + 296] = 0
  4684: 95 17 58 32              a0 = sp + 0x3258
  4688: 7b a7 18 01              u64 [a3 + 0x118] = a0
  4692: 49 2a 20 01 03           u64 [a3 + 288] = 0x3
  4697: 95 17 90 33              a0 = sp + 0x3390
  4701: 95 18 18 32              a1 = sp + 0x3218
  4705: 50 10 70 b9 29           ra = 112, jump @798
      :                          @224 [@dyn 56]
  4710: 95 17 10 31              a0 = sp + 0x3110
  4714: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4718: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4722: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4726: 7b 17 70                 u64 [sp + 0x70] = a0
  4729: 33 07 04                 a0 = 0x4
  4732: 33 08                    a1 = 0
  4734: 33 09                    a2 = 0
  4736: 64 5a                    a3 = s0
  4738: 33 00 72                 ra = 0x72
  4741: 0a 64                    ecalli 100 // 'log'
  4743: 01                       fallthrough
      :                          @225 [@dyn 57]
  4744: 82 1b 70                 a4 = u64 [sp + 0x70]
  4747: 82 17 88 00              a0 = u64 [sp + 0x88]
  4751: c8 b7 07                 a0 = a0 + a4
  4754: 53 37 00 00 f0 1a        jump @230 if a0 <u 4293918720
      :                          @226
  4760: 82 67                    a0 = u64 [s1]
  4762: c9 76 08                 a1 = s1 - a0
  4765: ab 58 0f                 jump @230 if a1 != s0
      :                          @227
  4768: c9 b7 08                 a1 = a0 - a4
  4771: 01                       fallthrough
      :                          @228
  4772: 82 69                    a2 = u64 [s1]
  4774: ab 79 f2                 jump @226 if a2 != a0
      :                          @229
  4777: 7b 68                    u64 [s1] = a1
  4779: 01                       fallthrough
      :                          @230
  4780: 95 15 10 31              s0 = sp + 0x3110
  4784: 82 57 50 02              a0 = u64 [s0 + 0x250]
  4788: 82 58                    a1 = u64 [s0]
  4790: ab 87 11                 jump @232 if a0 != a1
      :                          @231
  4793: 82 18 80 00              a1 = u64 [sp + 0x80]
  4797: 3d 08 3c 00 03           u32 [0x3003c] = a1
  4802: 82 17 08                 a0 = u64 [sp + 0x8]
  4805: 28 0f                    jump @234
      :                          @232
  4807: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4810: ab 87 14                 jump @235 if a0 != a1
      :                          @233
  4813: 82 17 68                 a0 = u64 [sp + 0x68]
  4816: 95 77 08                 a0 = a0 + 0x8
  4819: 01                       fallthrough
      :                          @234
  4820: 95 18 b8 20              a1 = sp + 0x20b8
  4824: 81 88 58                 a1 = i32 [a1 + 0x58]
  4827: 7a 78                    u32 [a0] = a1
  4829: 01                       fallthrough
      :                          @235
  4830: 33 08 08 10              a1 = 0x1008
  4834: 95 17 08 21              a0 = sp + 0x2108
  4838: 0a 13                    ecalli 19 // 'export'
  4840: 7b 57 70 02              u64 [s0 + 0x270] = a0
  4844: 0a                       ecalli 0 // 'gas'
  4845: 95 18 b8 20              a1 = sp + 0x20b8
  4849: 7b 87 40                 u64 [a1 + 0x40] = a0
  4852: 95 18 60 33              a1 = sp + 0x3360
  4856: 7b 58 48 01              u64 [s0 + 0x148] = a1
  4860: 82 17 78                 a0 = u64 [sp + 0x78]
  4863: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4867: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4871: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4875: 95 18 80 33              a1 = sp + 0x3380
  4879: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4883: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4887: 95 18 f8 20              a1 = sp + 0x20f8
  4891: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4895: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4899: 82 17 68                 a0 = u64 [sp + 0x68]
  4902: 7b 57 88 01              u64 [s0 + 0x188] = a0
  4906: 82 17 18                 a0 = u64 [sp + 0x18]
  4909: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4913: 82 17 10                 a0 = u64 [sp + 0x10]
  4916: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4920: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4925: 49 25 28 01              u64 [s0 + 296] = 0
  4929: 95 18 58 32              a1 = sp + 0x3258
  4933: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4937: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4942: 95 17 90 33              a0 = sp + 0x3390
  4946: 95 18 18 32              a1 = sp + 0x3218
  4950: 50 10 74 c4 28           ra = 116, jump @798
      :                          @236 [@dyn 58]
  4955: 95 17 10 31              a0 = sp + 0x3110
  4959: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4963: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4967: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4971: 7b 17 70                 u64 [sp + 0x70] = a0
  4974: 33 07 04                 a0 = 0x4
  4977: 33 08                    a1 = 0
  4979: 33 09                    a2 = 0
  4981: 64 5a                    a3 = s0
  4983: 33 00 76                 ra = 0x76
  4986: 0a 64                    ecalli 100 // 'log'
  4988: 01                       fallthrough
      :                          @237 [@dyn 59]
  4989: 82 1b 70                 a4 = u64 [sp + 0x70]
  4992: 82 17 88 00              a0 = u64 [sp + 0x88]
  4996: c8 b7 07                 a0 = a0 + a4
  4999: 53 37 00 00 f0 6f fd     jump @215 if a0 <u 4293918720
      :                          @238
  5006: 82 67                    a0 = u64 [s1]
  5008: c9 76 08                 a1 = s1 - a0
  5011: ab 58 63 fd              jump @215 if a1 != s0
      :                          @239
  5015: c9 b7 08                 a1 = a0 - a4
  5018: 01                       fallthrough
      :                          @240
  5019: 82 69                    a2 = u64 [s1]
  5021: ab 79 f1                 jump @238 if a2 != a0
      :                          @241
  5024: 7b 68                    u64 [s1] = a1
  5026: 33 0a                    a3 = 0
  5028: 01                       fallthrough
      :                          @242
  5029: ab 79 e9                 jump @238 if a2 != a0
      :                          @243
  5032: 28 4e fd                 jump @215
      :                          @244
  5035: 33 07 3c 00 03           a0 = 0x3003c
  5040: 7b 57 48 01              u64 [s0 + 0x148] = a0
  5044: 33 08 0e                 a1 = 0xe
  5047: 7b 58 50 01              u64 [s0 + 0x150] = a1
  5051: 95 79 04                 a2 = a0 + 0x4
  5054: 7b 59 58 01              u64 [s0 + 0x158] = a2
  5058: 7b 58 60 01              u64 [s0 + 0x160] = a1
  5062: 95 77 08                 a0 = a0 + 0x8
  5065: 7b 57 68 01              u64 [s0 + 0x168] = a0
  5069: 7b 58 70 01              u64 [s0 + 0x170] = a1
  5073: 33 07 b0 03 01           a0 = 0x103b0
  5078: 7b 57 08 01              u64 [s0 + 0x108] = a0
  5082: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  5087: 49 25 28 01              u64 [s0 + 296] = 0
  5091: 95 18 58 32              a1 = sp + 0x3258
  5095: 7b 58 18 01              u64 [s0 + 0x118] = a1
  5099: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  5104: 95 17 90 33              a0 = sp + 0x3390
  5108: 95 18 18 32              a1 = sp + 0x3218
  5112: 50 10 78 22 28           ra = 120, jump @798
      :                          @245 [@dyn 60]
  5117: 95 17 10 31              a0 = sp + 0x3110
  5121: 82 75 88 02              s0 = u64 [a0 + 0x288]
  5125: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  5129: 82 76 80 02              s1 = u64 [a0 + 0x280]
  5133: 33 07 03                 a0 = 0x3
  5136: 33 08                    a1 = 0
  5138: 33 09                    a2 = 0
  5140: 64 5a                    a3 = s0
  5142: 33 00 7a                 ra = 0x7a
  5145: 0a 64                    ecalli 100 // 'log'
  5147: 01                       fallthrough
      :                          @246 [@dyn 61]
  5148: 82 17 88 00              a0 = u64 [sp + 0x88]
  5152: c8 67 07                 a0 = a0 + s1
  5155: 53 37 00 00 f0 25        jump @252 if a0 <u 4293918720
      :                          @247
  5161: 33 07 50 00 03           a0 = 0x30050
  5166: 95 77 00 00 10           a0 = a0 + 0x100000
  5171: 01                       fallthrough
      :                          @248
  5172: 82 78                    a1 = u64 [a0]
  5174: c9 87 09                 a2 = a0 - a1
  5177: ab 59 0f                 jump @252 if a2 != s0
      :                          @249
  5180: c9 68 09                 a2 = a1 - s1
  5183: 01                       fallthrough
      :                          @250
  5184: 82 7a                    a3 = u64 [a0]
  5186: ab 8a f2                 jump @248 if a3 != a1
      :                          @251
  5189: 7b 79                    u64 [a0] = a2
  5191: 01                       fallthrough
      :                          @252
  5192: 95 15 b8 20              s0 = sp + 0x20b8
  5196: 82 57 48                 a0 = u64 [s0 + 0x48]
  5199: 0a 1a                    ecalli 26 // 'expunge'
  5201: 95 16 10 31              s1 = sp + 0x3110
  5205: 7b 67 70 02              u64 [s1 + 0x270] = a0
  5209: 0a                       ecalli 0 // 'gas'
  5210: 7b 57 40                 u64 [s0 + 0x40] = a0
  5213: 95 17 00 21              a0 = sp + 0x2100
  5217: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5221: 95 17 80 33              a0 = sp + 0x3380
  5225: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5229: 95 17 f8 20              a0 = sp + 0x20f8
  5233: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5237: 33 07 16                 a0 = 0x16
  5240: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5244: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5248: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5252: 33 07 00 04 01           a0 = 0x10400
  5257: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5261: 95 17 58 32              a0 = sp + 0x3258
  5265: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5269: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5274: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5279: 49 26 28 01              u64 [s1 + 296] = 0
  5283: 95 17 90 33              a0 = sp + 0x3390
  5287: 95 18 18 32              a1 = sp + 0x3218
  5291: 50 10 7c 6f 27           ra = 124, jump @798
      :                          @253 [@dyn 62]
  5296: 82 65 88 02              s0 = u64 [s1 + 0x288]
  5300: 82 6b 90 02              a4 = u64 [s1 + 0x290]
  5304: 82 66 80 02              s1 = u64 [s1 + 0x280]
  5308: 33 07 04                 a0 = 0x4
  5311: 33 08                    a1 = 0
  5313: 33 09                    a2 = 0
  5315: 64 5a                    a3 = s0
  5317: 33 00 7e                 ra = 0x7e
  5320: 0a 64                    ecalli 100 // 'log'
  5322: 01                       fallthrough
      :                          @254 [@dyn 63]
  5323: 82 17 88 00              a0 = u64 [sp + 0x88]
  5327: c8 67 07                 a0 = a0 + s1
  5330: 53 37 00 00 f0 31        jump @260 if a0 <u 4293918720
      :                          @255
  5336: 33 07 50 00 03           a0 = 0x30050
  5341: 95 77 00 00 10           a0 = a0 + 0x100000
  5346: 01                       fallthrough
      :                          @256
  5347: 82 78                    a1 = u64 [a0]
  5349: c9 87 09                 a2 = a0 - a1
  5352: ab 59 1b                 jump @260 if a2 != s0
      :                          @257
  5355: c9 68 09                 a2 = a1 - s1
  5358: 01                       fallthrough
      :                          @258
  5359: 82 7a                    a3 = u64 [a0]
  5361: ab 8a f2                 jump @256 if a3 != a1
      :                          @259
  5364: 7b 79                    u64 [a0] = a2
  5366: 33 0b                    a4 = 0
  5368: 33 0a 3c 00 03           a3 = 0x3003c
  5373: 33 08 0c                 a1 = 0xc
  5376: 28 a3 f0                 jump @98
      :                          @260
  5379: 33 0a 3c 00 03           a3 = 0x3003c
  5384: 33 08 0c                 a1 = 0xc
  5387: 28 98 f0                 jump @98
      :                          @261
  5390: 00                       trap
      :                          @262 [export #1: 'accumulate']
  5391: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5395: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5399: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5403: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5407: 95 11 b8 fb              sp = sp + 0xfffffffffffffbb8
  5411: 95 19 ff 07              a2 = sp + 0x7ff
  5415: 95 99 a1 03              a2 = a2 + 0x3a1
  5419: 7b 17 78                 u64 [sp + 0x78] = a0
  5422: 7b 98 48                 u64 [a2 + 0x48] = a1
  5425: 51 08 44 03              jump @348 if a1 == 0
      :                          @263
  5429: 7b 17 38                 u64 [sp + 0x38] = a0
  5432: 7b 18 28                 u64 [sp + 0x28] = a1
  5435: 49 11 30 ff ff ef        u64 [sp + 48] = 0xffffffffffefffff
  5441: 95 17 78                 a0 = sp + 0x78
  5444: 7b 17 98 00              u64 [sp + 0x98] = a0
  5448: 33 07 ac 01              a0 = 0x1ac
  5452: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  5456: 95 18 ff 07              a1 = sp + 0x7ff
  5460: 95 88 e9 03              a1 = a1 + 0x3e9
  5464: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  5468: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  5472: 33 07 40 11 01           a0 = 0x11140
  5477: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  5481: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  5486: 49 21 c0 01              u64 [sp + 448] = 0
  5490: 95 18 98 00              a1 = sp + 0x98
  5494: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  5498: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  5503: 95 17 ff 07              a0 = sp + 0x7ff
  5507: 95 77 b9 03              a0 = a0 + 0x3b9
  5511: 95 18 a0 01              a1 = sp + 0x1a0
  5515: 50 20 80 00 8f 26        ra = 128, jump @798
      :                          @264 [@dyn 64]
  5521: 95 17 ff 07              a0 = sp + 0x7ff
  5525: 95 77 a1 03              a0 = a0 + 0x3a1
  5529: 82 76 20                 s1 = u64 [a0 + 0x20]
  5532: 82 7b 28                 a4 = u64 [a0 + 0x28]
  5535: 82 75 18                 s0 = u64 [a0 + 0x18]
  5538: 33 07 02                 a0 = 0x2
  5541: 33 08                    a1 = 0
  5543: 33 09                    a2 = 0
  5545: 64 6a                    a3 = s1
  5547: 33 00 82 00              ra = 0x82
  5551: 0a 64                    ecalli 100 // 'log'
  5553: 01                       fallthrough
      :                          @265 [@dyn 65]
  5554: 82 17 30                 a0 = u64 [sp + 0x30]
  5557: c8 57 07                 a0 = a0 + s0
  5560: 53 37 00 00 f0 27        jump @271 if a0 <u 4293918720
      :                          @266
  5566: 33 07 50 00 03           a0 = 0x30050
  5571: 95 77 00 00 10           a0 = a0 + 0x100000
  5576: 01                       fallthrough
      :                          @267
  5577: 82 78                    a1 = u64 [a0]
  5579: c9 87 09                 a2 = a0 - a1
  5582: ab 69 11                 jump @271 if a2 != s1
      :                          @268
  5585: c9 58 09                 a2 = a1 - s0
  5588: 01                       fallthrough
      :                          @269
  5589: 82 7a                    a3 = u64 [a0]
  5591: ab 8a f2                 jump @267 if a3 != a1
      :                          @270
  5594: 7b 79                    u64 [a0] = a2
  5596: 33 0b                    a4 = 0
  5598: 01                       fallthrough
      :                          @271
  5599: 82 17 38                 a0 = u64 [sp + 0x38]
  5602: 7d 78                    a1 = i8 [a0]
  5604: 33 06 01                 s1 = 0x1
  5607: 59 08 37                 jump @278 if a1 >=s 0
      :                          @272
  5610: 84 89 ff 00              a2 = a1 & 0xff
  5614: 33 06 02                 s1 = 0x2
  5617: 53 29 c0 00 2d           jump @278 if a2 <u 192
      :                          @273
  5622: 33 06 03                 s1 = 0x3
  5625: 53 29 e0 00 25           jump @278 if a2 <u 224
      :                          @274
  5630: 33 06 04                 s1 = 0x4
  5633: 53 29 f0 00 1d           jump @278 if a2 <u 240
      :                          @275
  5638: 33 06 05                 s1 = 0x5
  5641: 53 29 f8 00 15           jump @278 if a2 <u 248
      :                          @276
  5646: 33 06 06                 s1 = 0x6
  5649: 53 29 fc 00 0d           jump @278 if a2 <u 252
      :                          @277
  5654: 88 98 fe 00              a1 = a2 <u 0xfe
  5658: 9a 86 08                 s1 = 0x8 - a1
  5661: 01                       fallthrough
      :                          @278
  5662: 82 15 28                 s0 = u64 [sp + 0x28]
  5665: ac 65 54 02              jump @348 if s0 <u s1
      :                          @279
  5669: 64 68                    a1 = s1
  5671: 50 20 84 00 cc 32        ra = 132, jump @1052
      :                          @280 [@dyn 66]
  5677: 82 17 38                 a0 = u64 [sp + 0x38]
  5680: aa 65 45 02              jump @348 if s0 == s1
      :                          @281
  5684: c8 67 07                 a0 = a0 + s1
  5687: 7d 78                    a1 = i8 [a0]
  5689: c9 65 06                 s1 = s0 - s1
  5692: 33 05 01                 s0 = 0x1
  5695: 59 08 37                 jump @288 if a1 >=s 0
      :                          @282
  5698: 84 89 ff 00              a2 = a1 & 0xff
  5702: 33 05 02                 s0 = 0x2
  5705: 53 29 c0 00 2d           jump @288 if a2 <u 192
      :                          @283
  5710: 33 05 03                 s0 = 0x3
  5713: 53 29 e0 00 25           jump @288 if a2 <u 224
      :                          @284
  5718: 33 05 04                 s0 = 0x4
  5721: 53 29 f0 00 1d           jump @288 if a2 <u 240
      :                          @285
  5726: 33 05 05                 s0 = 0x5
  5729: 53 29 f8 00 15           jump @288 if a2 <u 248
      :                          @286
  5734: 33 05 06                 s0 = 0x6
  5737: 53 29 fc 00 0d           jump @288 if a2 <u 252
      :                          @287
  5742: 88 98 fe 00              a1 = a2 <u 0xfe
  5746: 9a 85 08                 s0 = 0x8 - a1
  5749: 01                       fallthrough
      :                          @288
  5750: ac 56 ff 01              jump @348 if s1 <u s0
      :                          @289
  5754: 64 58                    a1 = s0
  5756: 7b 17 38                 u64 [sp + 0x38] = a0
  5759: 50 20 86 00 74 32        ra = 134, jump @1052
      :                          @290 [@dyn 67]
  5765: 82 19 38                 a2 = u64 [sp + 0x38]
  5768: c8 59 09                 a2 = a2 + s0
  5771: c9 56 0a                 a3 = s1 - s0
  5774: 7b 17 28                 u64 [sp + 0x28] = a0
  5777: 7b 1a 38                 u64 [sp + 0x38] = a3
  5780: ab 56 07                 jump @292 if s1 != s0
      :                          @291
  5783: 33 05                    s0 = 0
  5785: 28 42                    jump @300
      :                          @292
  5787: 7d 97                    a0 = i8 [a2]
  5789: 33 05 01                 s0 = 0x1
  5792: 59 07 37                 jump @299 if a0 >=s 0
      :                          @293
  5795: 84 77 ff 00              a0 = a0 & 0xff
  5799: 33 05 02                 s0 = 0x2
  5802: 53 27 c0 00 2d           jump @299 if a0 <u 192
      :                          @294
  5807: 33 05 03                 s0 = 0x3
  5810: 53 27 e0 00 25           jump @299 if a0 <u 224
      :                          @295
  5815: 33 05 04                 s0 = 0x4
  5818: 53 27 f0 00 1d           jump @299 if a0 <u 240
      :                          @296
  5823: 33 05 05                 s0 = 0x5
  5826: 53 27 f8 00 15           jump @299 if a0 <u 248
      :                          @297
  5831: 33 05 06                 s0 = 0x6
  5834: 53 27 fc 00 0d           jump @299 if a0 <u 252
      :                          @298
  5839: 88 77 fe 00              a0 = a0 <u 0xfe
  5843: 9a 75 08                 s0 = 0x8 - a0
  5846: 01                       fallthrough
      :                          @299
  5847: ac 5a 9e 01              jump @348 if a3 <u s0
      :                          @300
  5851: 64 97                    a0 = a2
  5853: 64 58                    a1 = s0
  5855: 64 96                    s1 = a2
  5857: 50 20 88 00 12 32        ra = 136, jump @1052
      :                          @301 [@dyn 68]
  5863: 51 07 8e 01              jump @348 if a0 == 0
      :                          @302
  5867: 82 17 38                 a0 = u64 [sp + 0x38]
  5870: e4 57 07                 a0 = maxu(a0, s0)
  5873: c9 57 07                 a0 = a0 - s0
  5876: 53 17 60 81 01           jump @348 if a0 <u 96
      :                          @303
  5881: c8 65 08                 a1 = s0 + s1
  5884: 95 75 a0                 s0 = a0 + 0xffffffffffffffa0
  5887: 95 87 60                 a0 = a1 + 0x60
  5890: 7b 17 38                 u64 [sp + 0x38] = a0
  5893: 51 05 4f                 jump @315 if s0 == 0
      :                          @304
  5896: 7d 78                    a1 = i8 [a0]
  5898: 33 06 01                 s1 = 0x1
  5901: 59 08 37                 jump @311 if a1 >=s 0
      :                          @305
  5904: 84 89 ff 00              a2 = a1 & 0xff
  5908: 33 06 02                 s1 = 0x2
  5911: 53 29 c0 00 2d           jump @311 if a2 <u 192
      :                          @306
  5916: 33 06 03                 s1 = 0x3
  5919: 53 29 e0 00 25           jump @311 if a2 <u 224
      :                          @307
  5924: 33 06 04                 s1 = 0x4
  5927: 53 29 f0 00 1d           jump @311 if a2 <u 240
      :                          @308
  5932: 33 06 05                 s1 = 0x5
  5935: 53 29 f8 00 15           jump @311 if a2 <u 248
      :                          @309
  5940: 33 06 06                 s1 = 0x6
  5943: 53 29 fc 00 0d           jump @311 if a2 <u 252
      :                          @310
  5948: 88 98 fe 00              a1 = a2 <u 0xfe
  5952: 9a 86 08                 s1 = 0x8 - a1
  5955: 01                       fallthrough
      :                          @311
  5956: ae 65 06                 jump @313 if s0 >=u s1
      :                          @312
  5959: 28 ed 21                 jump @729
      :                          @313
  5962: 64 68                    a1 = s1
  5964: 50 20 8a 00 a7 31        ra = 138, jump @1052
      :                          @314 [@dyn 69]
  5970: 28 07                    jump @316
      :                          @315
  5972: 33 06                    s1 = 0
  5974: 33 07                    a0 = 0
  5976: 01                       fallthrough
      :                          @316
  5977: e4 65 08                 a1 = maxu(s0, s1)
  5980: c9 68 08                 a1 = a1 - s1
  5983: e4 78 08                 a1 = maxu(a1, a0)
  5986: c9 78 08                 a1 = a1 - a0
  5989: 33 09 20                 a2 = 0x20
  5992: ac 98 0d 01              jump @348 if a1 <u a2
      :                          @317
  5996: 82 19 38                 a2 = u64 [sp + 0x38]
  5999: c8 96 06                 s1 = s1 + a2
  6002: c8 67 07                 a0 = a0 + s1
  6005: 95 86 e0                 s1 = a1 + 0xffffffffffffffe0
  6008: 95 77 20                 a0 = a0 + 0x20
  6011: 7b 17 38                 u64 [sp + 0x38] = a0
  6014: 51 06 4f                 jump @329 if s1 == 0
      :                          @318
  6017: 7d 78                    a1 = i8 [a0]
  6019: 33 05 01                 s0 = 0x1
  6022: 59 08 37                 jump @325 if a1 >=s 0
      :                          @319
  6025: 84 89 ff 00              a2 = a1 & 0xff
  6029: 33 05 02                 s0 = 0x2
  6032: 53 29 c0 00 2d           jump @325 if a2 <u 192
      :                          @320
  6037: 33 05 03                 s0 = 0x3
  6040: 53 29 e0 00 25           jump @325 if a2 <u 224
      :                          @321
  6045: 33 05 04                 s0 = 0x4
  6048: 53 29 f0 00 1d           jump @325 if a2 <u 240
      :                          @322
  6053: 33 05 05                 s0 = 0x5
  6056: 53 29 f8 00 15           jump @325 if a2 <u 248
      :                          @323
  6061: 33 05 06                 s0 = 0x6
  6064: 53 29 fc 00 0d           jump @325 if a2 <u 252
      :                          @324
  6069: 88 98 fe 00              a1 = a2 <u 0xfe
  6073: 9a 85 08                 s0 = 0x8 - a1
  6076: 01                       fallthrough
      :                          @325
  6077: ae 56 06                 jump @327 if s1 >=u s0
      :                          @326
  6080: 28 75 21                 jump @730
      :                          @327
  6083: 64 58                    a1 = s0
  6085: 50 20 8c 00 2e 31        ra = 140, jump @1052
      :                          @328 [@dyn 70]
  6091: 28 05                    jump @330
      :                          @329
  6093: 33 05                    s0 = 0
  6095: 01                       fallthrough
      :                          @330
  6096: ae 65 a5 00              jump @348 if s0 >=u s1
      :                          @331
  6100: 82 17 38                 a0 = u64 [sp + 0x38]
  6103: c8 57 07                 a0 = a0 + s0
  6106: 7c 78                    a1 = u8 [a0]
  6108: 51 08 0a                 jump @333 if a1 == 0
      :                          @332
  6111: 33 05                    s0 = 0
  6113: 33 0a                    a3 = 0
  6115: 28 b0 00                 jump @350
      :                          @333
  6118: e4 56 08                 a1 = maxu(s1, s0)
  6121: c9 58 08                 a1 = a1 - s0
  6124: 95 76 01                 s1 = a0 + 0x1
  6127: 33 07 01                 a0 = 0x1
  6130: e4 78 07                 a0 = maxu(a1, a0)
  6133: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  6136: 55 18 02 0a              jump @335 if a1 >=u 2
      :                          @334
  6140: 33 05                    s0 = 0
  6142: 33 07                    a0 = 0
  6144: 28 55                    jump @346
      :                          @335
  6146: 7d 67                    a0 = i8 [s1]
  6148: 33 05 01                 s0 = 0x1
  6151: 59 07 37                 jump @342 if a0 >=s 0
      :                          @336
  6154: 84 77 ff 00              a0 = a0 & 0xff
  6158: 33 05 02                 s0 = 0x2
  6161: 53 27 c0 00 2d           jump @342 if a0 <u 192
      :                          @337
  6166: 33 05 03                 s0 = 0x3
  6169: 53 27 e0 00 25           jump @342 if a0 <u 224
      :                          @338
  6174: 33 05 04                 s0 = 0x4
  6177: 53 27 f0 00 1d           jump @342 if a0 <u 240
      :                          @339
  6182: 33 05 05                 s0 = 0x5
  6185: 53 27 f8 00 15           jump @342 if a0 <u 248
      :                          @340
  6190: 33 05 06                 s0 = 0x6
  6193: 53 27 fc 00 0d           jump @342 if a0 <u 252
      :                          @341
  6198: 88 77 fe 00              a0 = a0 <u 0xfe
  6202: 9a 75 08                 s0 = 0x8 - a0
  6205: 01                       fallthrough
      :                          @342
  6206: 7b 1a 38                 u64 [sp + 0x38] = a3
  6209: ae 5a 06                 jump @344 if a3 >=u s0
      :                          @343
  6212: 28 f3 20                 jump @732
      :                          @344
  6215: 64 67                    a0 = s1
  6217: 64 58                    a1 = s0
  6219: 50 20 8e 00 a8 30        ra = 142, jump @1052
      :                          @345 [@dyn 71]
  6225: 82 1a 38                 a3 = u64 [sp + 0x38]
  6228: 01                       fallthrough
      :                          @346
  6229: e4 5a 08                 a1 = maxu(a3, s0)
  6232: c9 58 08                 a1 = a1 - s0
  6235: e6 78 0a                 a3 = minu(a1, a0)
  6238: c8 65 05                 s0 = s0 + s1
  6241: 52 1a 24 32              jump @350 if a3 != 36
      :                          @347
  6245: 80 58 20                 a1 = u32 [s0 + 0x20]
  6248: 64 57                    a0 = s0
  6250: 0a 0e                    ecalli 14 // 'solicit'
  6252: 33 08                    a1 = 0
  6254: 33 07 00 00 01           a0 = 0x10000
  6259: 28 0a                    jump @349
      :                          @348
  6261: 33 08                    a1 = 0
  6263: 33 07 00 00 01           a0 = 0x10000
  6268: 01                       fallthrough
      :                          @349
  6269: 95 11 48 04              sp = sp + 0x448
  6273: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  6277: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  6281: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  6285: 95 11 f8 07              sp = sp + 0x7f8
  6289: 32 00                    ret
      :                          @350
  6291: 46 11 47                 u8 [sp + 71] = 0
  6294: 80 57                    a0 = u32 [s0]
  6296: 7b 17 48                 u64 [sp + 0x48] = a0
  6299: 95 17 47                 a0 = sp + 0x47
  6302: 33 08 01                 a1 = 0x1
  6305: 7b 15 18                 u64 [sp + 0x18] = s0
  6308: 64 59                    a2 = s0
  6310: 7b 1a 20                 u64 [sp + 0x20] = a3
  6313: 0a 03                    ecalli 3 // 'write'
  6315: 46 11 52 6a              u8 [sp + 82] = 0x6a
  6319: 46 11 53 61              u8 [sp + 83] = 0x61
  6323: 46 11 54 6d              u8 [sp + 84] = 0x6d
  6327: 46 11 55 44              u8 [sp + 85] = 0x44
  6331: 46 11 56 4f              u8 [sp + 86] = 0x4f
  6335: 46 11 57 54              u8 [sp + 87] = 0x54
  6339: 46 11 58 6a              u8 [sp + 88] = 0x6a
  6343: 46 11 59 0d              u8 [sp + 89] = 0xd
  6347: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  6351: 46 11 5b 19              u8 [sp + 91] = 0x19
  6355: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  6360: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  6365: 46 11 5e 50              u8 [sp + 94] = 0x50
  6369: 46 11 5f 57              u8 [sp + 95] = 0x57
  6373: 46 11 60 13              u8 [sp + 96] = 0x13
  6377: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  6382: 46 11 62 65              u8 [sp + 98] = 0x65
  6386: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  6391: 46 11 64 31              u8 [sp + 100] = 0x31
  6395: 46 11 65 03              u8 [sp + 101] = 0x3
  6399: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  6404: 46 11 67 73              u8 [sp + 103] = 0x73
  6408: 33 0b f1 00              a4 = 0xf1
  6412: 78 1b 68                 u8 [sp + 0x68] = a4
  6415: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6420: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6425: 46 11 6b 64              u8 [sp + 107] = 0x64
  6429: 46 11 6c 56              u8 [sp + 108] = 0x56
  6433: 46 11 6d 32              u8 [sp + 109] = 0x32
  6437: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6442: 33 06 ae 00              s1 = 0xae
  6446: 78 16 6f                 u8 [sp + 0x6f] = s1
  6449: 46 11 70 50              u8 [sp + 112] = 0x50
  6453: 33 0c 3c                 a5 = 0x3c
  6456: 78 1c 71                 u8 [sp + 0x71] = a5
  6459: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6463: 46 11 73 0c              u8 [sp + 115] = 0xc
  6467: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6471: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6475: 46 11 76 19              u8 [sp + 118] = 0x19
  6479: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6484: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6489: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6494: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6499: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6503: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6508: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6513: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6518: 46 11 7f 47              u8 [sp + 127] = 0x47
  6522: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6528: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6533: 78 1c 82 00              u8 [sp + 0x82] = a5
  6537: 78 1b 83 00              u8 [sp + 0x83] = a4
  6541: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6547: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6552: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6557: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6563: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6569: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6575: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6581: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6587: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6593: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6598: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6603: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6608: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6614: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6620: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6625: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6630: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6636: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6642: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6647: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6652: 14 05 ff ff ff ff 00 00 00 00 s0 = 0xffffffff
  6662: 95 17 98 00              a0 = sp + 0x98
  6666: 33 09 00 01              a2 = 0x100
  6670: 33 08                    a1 = 0
  6672: 50 20 90 00 37 25        ra = 144, jump @865
      :                          @351 [@dyn 72]
  6678: 82 17 48                 a0 = u64 [sp + 0x48]
  6681: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6684: 82 19 28                 a2 = u64 [sp + 0x28]
  6687: d2 59 09                 a2 = a2 & s0
  6690: 7b 19 38                 u64 [sp + 0x38] = a2
  6693: 54 17 09 07              jump @353 if a0 <=u 9
      :                          @352
  6697: 28 75 1c                 jump @694
      :                          @353
  6700: 97 77 02                 a0 = a0 << 0x2
  6703: 33 08 00 00 01           a1 = 0x10000
  6708: c8 87 07                 a0 = a0 + a1
  6711: 81 77                    a0 = i32 [a0]
  6713: 32 07                    jump [a0]
      :                          @354 [@dyn 73]
  6715: 95 18 52                 a1 = sp + 0x52
  6718: 33 09 03                 a2 = 0x3
  6721: 95 1a 98 00              a3 = sp + 0x98
  6725: 33 0c 00 01              a5 = 0x100
  6729: 82 17 38                 a0 = u64 [sp + 0x38]
  6732: 33 0b                    a4 = 0
  6734: 0a 02                    ecalli 2 // 'read'
  6736: 95 15 ff 07              s0 = sp + 0x7ff
  6740: 95 55 a1 03              s0 = s0 + 0x3a1
  6744: 7b 57 70                 u64 [s0 + 0x70] = a0
  6747: 95 77 01                 a0 = a0 + 0x1
  6750: 88 77 01                 a0 = a0 <u 0x1
  6753: 97 77 01                 a0 = a0 << 0x1
  6756: 7b 17 10                 u64 [sp + 0x10] = a0
  6759: 95 17 48                 a0 = sp + 0x48
  6762: 7b 57 18                 u64 [s0 + 0x18] = a0
  6765: 33 09 16                 a2 = 0x16
  6768: 7b 59 20                 u64 [s0 + 0x20] = a2
  6771: 95 17 ff 07              a0 = sp + 0x7ff
  6775: 95 77 11 04              a0 = a0 + 0x411
  6779: 7b 57 28                 u64 [s0 + 0x28] = a0
  6782: 7b 19 28                 u64 [sp + 0x28] = a2
  6785: 7b 59 30                 u64 [s0 + 0x30] = a2
  6788: 33 07 d8 05 01           a0 = 0x105d8
  6793: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6797: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6802: 49 21 c0 01              u64 [sp + 448] = 0
  6806: 95 17 ff 07              a0 = sp + 0x7ff
  6810: 95 77 b9 03              a0 = a0 + 0x3b9
  6814: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  6818: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6823: 95 17 ff 07              a0 = sp + 0x7ff
  6827: 95 77 e9 03              a0 = a0 + 0x3e9
  6831: 95 18 a0 01              a1 = sp + 0x1a0
  6835: 50 20 94 00 67 21        ra = 148, jump @798
      :                          @355 [@dyn 74]
  6841: 82 56 50                 s1 = u64 [s0 + 0x50]
  6844: 82 5b 58                 a4 = u64 [s0 + 0x58]
  6847: 82 55 48                 s0 = u64 [s0 + 0x48]
  6850: 82 17 10                 a0 = u64 [sp + 0x10]
  6853: 33 08                    a1 = 0
  6855: 33 09                    a2 = 0
  6857: 64 6a                    a3 = s1
  6859: 33 00 96 00              ra = 0x96
  6863: 0a 64                    ecalli 100 // 'log'
  6865: 01                       fallthrough
      :                          @356 [@dyn 75]
  6866: 82 17 30                 a0 = u64 [sp + 0x30]
  6869: c8 57 07                 a0 = a0 + s0
  6872: 53 37 00 00 f0 25        jump @362 if a0 <u 4293918720
      :                          @357
  6878: 33 07 50 00 03           a0 = 0x30050
  6883: 95 77 00 00 10           a0 = a0 + 0x100000
  6888: 01                       fallthrough
      :                          @358
  6889: 82 78                    a1 = u64 [a0]
  6891: c9 87 09                 a2 = a0 - a1
  6894: ab 69 0f                 jump @362 if a2 != s1
      :                          @359
  6897: c9 58 09                 a2 = a1 - s0
  6900: 01                       fallthrough
      :                          @360
  6901: 82 7a                    a3 = u64 [a0]
  6903: ab 8a f2                 jump @358 if a3 != a1
      :                          @361
  6906: 7b 79                    u64 [a0] = a2
  6908: 01                       fallthrough
      :                          @362
  6909: 95 16 ff 07              s1 = sp + 0x7ff
  6913: 95 66 a1 03              s1 = s1 + 0x3a1
  6917: 82 67 70                 a0 = u64 [s1 + 0x70]
  6920: 33 08 01                 a1 = 0x1
  6923: 50 20 98 00 86 2e        ra = 152, jump @1076
      :                          @363 [@dyn 76]
  6929: 95 17 52                 a0 = sp + 0x52
  6932: 33 08 03                 a1 = 0x3
  6935: 95 19 55                 a2 = sp + 0x55
  6938: 33 0a 03                 a3 = 0x3
  6941: 0a 03                    ecalli 3 // 'write'
  6943: 95 18 48                 a1 = sp + 0x48
  6946: 7b 68 18                 u64 [s1 + 0x18] = a1
  6949: 95 18 ff 07              a1 = sp + 0x7ff
  6953: 95 88 19 04              a1 = a1 + 0x419
  6957: 7b 68 28                 u64 [s1 + 0x28] = a1
  6960: 82 18 28                 a1 = u64 [sp + 0x28]
  6963: 7b 68 20                 u64 [s1 + 0x20] = a1
  6966: 7b 68 30                 u64 [s1 + 0x30] = a1
  6969: 33 08 20 06 01           a1 = 0x10620
  6974: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  6978: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6983: 49 21 c0 01              u64 [sp + 448] = 0
  6987: 95 18 ff 07              a1 = sp + 0x7ff
  6991: 95 88 b9 03              a1 = a1 + 0x3b9
  6995: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  6999: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7004: 7b 67 78                 u64 [s1 + 0x78] = a0
  7007: 95 77 01                 a0 = a0 + 0x1
  7010: 88 77 01                 a0 = a0 <u 0x1
  7013: 97 77 01                 a0 = a0 << 0x1
  7016: 7b 17 28                 u64 [sp + 0x28] = a0
  7019: 95 17 ff 07              a0 = sp + 0x7ff
  7023: 95 77 e9 03              a0 = a0 + 0x3e9
  7027: 95 18 a0 01              a1 = sp + 0x1a0
  7031: 50 20 9a 00 a3 20        ra = 154, jump @798
      :                          @364 [@dyn 77]
  7037: 82 65 50                 s0 = u64 [s1 + 0x50]
  7040: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7043: 82 66 48                 s1 = u64 [s1 + 0x48]
  7046: 82 17 28                 a0 = u64 [sp + 0x28]
  7049: 33 08                    a1 = 0
  7051: 33 09                    a2 = 0
  7053: 64 5a                    a3 = s0
  7055: 33 00 9c 00              ra = 0x9c
  7059: 0a 64                    ecalli 100 // 'log'
  7061: 01                       fallthrough
      :                          @365 [@dyn 78]
  7062: 82 17 30                 a0 = u64 [sp + 0x30]
  7065: c8 67 07                 a0 = a0 + s1
  7068: 53 37 00 00 f0 25        jump @371 if a0 <u 4293918720
      :                          @366
  7074: 33 07 50 00 03           a0 = 0x30050
  7079: 95 77 00 00 10           a0 = a0 + 0x100000
  7084: 01                       fallthrough
      :                          @367
  7085: 82 78                    a1 = u64 [a0]
  7087: c9 87 09                 a2 = a0 - a1
  7090: ab 59 0f                 jump @371 if a2 != s0
      :                          @368
  7093: c9 68 09                 a2 = a1 - s1
  7096: 01                       fallthrough
      :                          @369
  7097: 82 7a                    a3 = u64 [a0]
  7099: ab 8a f2                 jump @367 if a3 != a1
      :                          @370
  7102: 7b 79                    u64 [a0] = a2
  7104: 01                       fallthrough
      :                          @371
  7105: 95 15 ff 07              s0 = sp + 0x7ff
  7109: 95 55 a1 03              s0 = s0 + 0x3a1
  7113: 82 57 78                 a0 = u64 [s0 + 0x78]
  7116: 33 08 02                 a1 = 0x2
  7119: 33 06 02                 s1 = 0x2
  7122: 50 20 9e 00 bf 2d        ra = 158, jump @1076
      :                          @372 [@dyn 79]
  7128: 95 18 52                 a1 = sp + 0x52
  7131: 33 09 03                 a2 = 0x3
  7134: 95 1a 98 00              a3 = sp + 0x98
  7138: 33 0c 00 01              a5 = 0x100
  7142: 82 17 38                 a0 = u64 [sp + 0x38]
  7145: 33 0b                    a4 = 0
  7147: 0a 02                    ecalli 2 // 'read'
  7149: 7b 57 80 00              u64 [s0 + 0x80] = a0
  7153: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7156: 88 77 01                 a0 = a0 <u 0x1
  7159: 97 77 01                 a0 = a0 << 0x1
  7162: 7b 17 10                 u64 [sp + 0x10] = a0
  7165: 95 17 48                 a0 = sp + 0x48
  7168: 7b 57 18                 u64 [s0 + 0x18] = a0
  7171: 33 09 16                 a2 = 0x16
  7174: 7b 59 20                 u64 [s0 + 0x20] = a2
  7177: 95 17 ff 07              a0 = sp + 0x7ff
  7181: 95 77 21 04              a0 = a0 + 0x421
  7185: 7b 57 28                 u64 [s0 + 0x28] = a0
  7188: 7b 19 28                 u64 [sp + 0x28] = a2
  7191: 7b 59 30                 u64 [s0 + 0x30] = a2
  7194: 33 07 68 06 01           a0 = 0x10668
  7199: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7203: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7208: 49 21 c0 01              u64 [sp + 448] = 0
  7212: 95 17 ff 07              a0 = sp + 0x7ff
  7216: 95 77 b9 03              a0 = a0 + 0x3b9
  7220: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7224: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  7228: 95 17 ff 07              a0 = sp + 0x7ff
  7232: 95 77 e9 03              a0 = a0 + 0x3e9
  7236: 95 18 a0 01              a1 = sp + 0x1a0
  7240: 50 20 a0 00 d2 1f        ra = 160, jump @798
      :                          @373 [@dyn 80]
  7246: 82 56 50                 s1 = u64 [s0 + 0x50]
  7249: 82 5b 58                 a4 = u64 [s0 + 0x58]
  7252: 82 55 48                 s0 = u64 [s0 + 0x48]
  7255: 82 17 10                 a0 = u64 [sp + 0x10]
  7258: 33 08                    a1 = 0
  7260: 33 09                    a2 = 0
  7262: 64 6a                    a3 = s1
  7264: 33 00 a2 00              ra = 0xa2
  7268: 0a 64                    ecalli 100 // 'log'
  7270: 01                       fallthrough
      :                          @374 [@dyn 81]
  7271: 82 17 30                 a0 = u64 [sp + 0x30]
  7274: c8 57 07                 a0 = a0 + s0
  7277: 53 37 00 00 f0 25        jump @380 if a0 <u 4293918720
      :                          @375
  7283: 33 07 50 00 03           a0 = 0x30050
  7288: 95 77 00 00 10           a0 = a0 + 0x100000
  7293: 01                       fallthrough
      :                          @376
  7294: 82 78                    a1 = u64 [a0]
  7296: c9 87 09                 a2 = a0 - a1
  7299: ab 69 0f                 jump @380 if a2 != s1
      :                          @377
  7302: c9 58 09                 a2 = a1 - s0
  7305: 01                       fallthrough
      :                          @378
  7306: 82 7a                    a3 = u64 [a0]
  7308: ab 8a f2                 jump @376 if a3 != a1
      :                          @379
  7311: 7b 79                    u64 [a0] = a2
  7313: 01                       fallthrough
      :                          @380
  7314: 95 16 ff 07              s1 = sp + 0x7ff
  7318: 95 66 a1 03              s1 = s1 + 0x3a1
  7322: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7326: 33 08 05                 a1 = 0x5
  7329: 50 20 a4 00 f0 2c        ra = 164, jump @1076
      :                          @381 [@dyn 82]
  7335: 95 17 52                 a0 = sp + 0x52
  7338: 33 08                    a1 = 0
  7340: 0a 0f                    ecalli 15 // 'forget'
  7342: 95 18 48                 a1 = sp + 0x48
  7345: 7b 68 18                 u64 [s1 + 0x18] = a1
  7348: 82 18 28                 a1 = u64 [sp + 0x28]
  7351: 7b 68 20                 u64 [s1 + 0x20] = a1
  7354: 7b 68 30                 u64 [s1 + 0x30] = a1
  7357: 33 08 d0 06 01           a1 = 0x106d0
  7362: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7366: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7371: 49 21 c0 01              u64 [sp + 448] = 0
  7375: 95 18 ff 07              a1 = sp + 0x7ff
  7379: 95 88 b9 03              a1 = a1 + 0x3b9
  7383: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7387: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7392: 7b 67                    u64 [s1] = a0
  7394: 95 77 09                 a0 = a0 + 0x9
  7397: 88 77 01                 a0 = a0 <u 0x1
  7400: 97 77 01                 a0 = a0 << 0x1
  7403: 7b 17 28                 u64 [sp + 0x28] = a0
  7406: 7b 66 28                 u64 [s1 + 0x28] = s1
  7409: 95 17 ff 07              a0 = sp + 0x7ff
  7413: 95 77 e9 03              a0 = a0 + 0x3e9
  7417: 95 18 a0 01              a1 = sp + 0x1a0
  7421: 50 20 a6 00 1d 1f        ra = 166, jump @798
      :                          @382 [@dyn 83]
  7427: 82 65 50                 s0 = u64 [s1 + 0x50]
  7430: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7433: 82 66 48                 s1 = u64 [s1 + 0x48]
  7436: 82 17 28                 a0 = u64 [sp + 0x28]
  7439: 33 08                    a1 = 0
  7441: 33 09                    a2 = 0
  7443: 64 5a                    a3 = s0
  7445: 33 00 a8 00              ra = 0xa8
  7449: 0a 64                    ecalli 100 // 'log'
  7451: 01                       fallthrough
      :                          @383 [@dyn 84]
  7452: 82 17 30                 a0 = u64 [sp + 0x30]
  7455: c8 67 07                 a0 = a0 + s1
  7458: 53 37 00 00 f0 25        jump @389 if a0 <u 4293918720
      :                          @384
  7464: 33 07 50 00 03           a0 = 0x30050
  7469: 95 77 00 00 10           a0 = a0 + 0x100000
  7474: 01                       fallthrough
      :                          @385
  7475: 82 78                    a1 = u64 [a0]
  7477: c9 87 09                 a2 = a0 - a1
  7480: ab 59 0f                 jump @389 if a2 != s0
      :                          @386
  7483: c9 68 09                 a2 = a1 - s1
  7486: 01                       fallthrough
      :                          @387
  7487: 82 7a                    a3 = u64 [a0]
  7489: ab 8a f2                 jump @385 if a3 != a1
      :                          @388
  7492: 7b 79                    u64 [a0] = a2
  7494: 01                       fallthrough
      :                          @389
  7495: 95 17 ff 07              a0 = sp + 0x7ff
  7499: 95 77 a1 03              a0 = a0 + 0x3a1
  7503: 82 77                    a0 = u64 [a0]
  7505: 33 08 06                 a1 = 0x6
  7508: 33 00 74 01              ra = 0x174
  7512: 28 39 2c                 jump @1076
      :                          @390 [@dyn 85]
  7515: 95 18 52                 a1 = sp + 0x52
  7518: 33 09 03                 a2 = 0x3
  7521: 95 1a 98 00              a3 = sp + 0x98
  7525: 33 0c 00 01              a5 = 0x100
  7529: 82 17 38                 a0 = u64 [sp + 0x38]
  7532: 33 0b                    a4 = 0
  7534: 0a 02                    ecalli 2 // 'read'
  7536: 95 15 ff 07              s0 = sp + 0x7ff
  7540: 95 55 a1 03              s0 = s0 + 0x3a1
  7544: 7b 57 78                 u64 [s0 + 0x78] = a0
  7547: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7550: 88 77 01                 a0 = a0 <u 0x1
  7553: 97 77 01                 a0 = a0 << 0x1
  7556: 7b 17 10                 u64 [sp + 0x10] = a0
  7559: 95 17 48                 a0 = sp + 0x48
  7562: 7b 57 18                 u64 [s0 + 0x18] = a0
  7565: 33 09 16                 a2 = 0x16
  7568: 7b 59 20                 u64 [s0 + 0x20] = a2
  7571: 95 17 ff 07              a0 = sp + 0x7ff
  7575: 95 77 19 04              a0 = a0 + 0x419
  7579: 7b 57 28                 u64 [s0 + 0x28] = a0
  7582: 7b 19 28                 u64 [sp + 0x28] = a2
  7585: 7b 59 30                 u64 [s0 + 0x30] = a2
  7588: 33 07 10 07 01           a0 = 0x10710
  7593: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7597: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7602: 49 21 c0 01              u64 [sp + 448] = 0
  7606: 95 17 ff 07              a0 = sp + 0x7ff
  7610: 95 77 b9 03              a0 = a0 + 0x3b9
  7614: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7618: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7623: 95 17 ff 07              a0 = sp + 0x7ff
  7627: 95 77 e9 03              a0 = a0 + 0x3e9
  7631: 95 18 a0 01              a1 = sp + 0x1a0
  7635: 50 20 ac 00 47 1e        ra = 172, jump @798
      :                          @391 [@dyn 86]
  7641: 82 56 50                 s1 = u64 [s0 + 0x50]
  7644: 82 5b 58                 a4 = u64 [s0 + 0x58]
  7647: 82 55 48                 s0 = u64 [s0 + 0x48]
  7650: 82 17 10                 a0 = u64 [sp + 0x10]
  7653: 33 08                    a1 = 0
  7655: 33 09                    a2 = 0
  7657: 64 6a                    a3 = s1
  7659: 33 00 ae 00              ra = 0xae
  7663: 0a 64                    ecalli 100 // 'log'
  7665: 01                       fallthrough
      :                          @392 [@dyn 87]
  7666: 82 17 30                 a0 = u64 [sp + 0x30]
  7669: c8 57 07                 a0 = a0 + s0
  7672: 53 37 00 00 f0 25        jump @398 if a0 <u 4293918720
      :                          @393
  7678: 33 07 50 00 03           a0 = 0x30050
  7683: 95 77 00 00 10           a0 = a0 + 0x100000
  7688: 01                       fallthrough
      :                          @394
  7689: 82 78                    a1 = u64 [a0]
  7691: c9 87 09                 a2 = a0 - a1
  7694: ab 69 0f                 jump @398 if a2 != s1
      :                          @395
  7697: c9 58 09                 a2 = a1 - s0
  7700: 01                       fallthrough
      :                          @396
  7701: 82 7a                    a3 = u64 [a0]
  7703: ab 8a f2                 jump @394 if a3 != a1
      :                          @397
  7706: 7b 79                    u64 [a0] = a2
  7708: 01                       fallthrough
      :                          @398
  7709: 95 16 ff 07              s1 = sp + 0x7ff
  7713: 95 66 a1 03              s1 = s1 + 0x3a1
  7717: 82 67 78                 a0 = u64 [s1 + 0x78]
  7720: 33 08 01                 a1 = 0x1
  7723: 50 20 b0 00 66 2b        ra = 176, jump @1076
      :                          @399 [@dyn 88]
  7729: 95 17 52                 a0 = sp + 0x52
  7732: 33 08 03                 a1 = 0x3
  7735: 33 09                    a2 = 0
  7737: 33 0a                    a3 = 0
  7739: 0a 03                    ecalli 3 // 'write'
  7741: 95 18 48                 a1 = sp + 0x48
  7744: 7b 68 18                 u64 [s1 + 0x18] = a1
  7747: 95 18 ff 07              a1 = sp + 0x7ff
  7751: 95 88 21 04              a1 = a1 + 0x421
  7755: 7b 68 28                 u64 [s1 + 0x28] = a1
  7758: 82 18 28                 a1 = u64 [sp + 0x28]
  7761: 7b 68 20                 u64 [s1 + 0x20] = a1
  7764: 7b 68 30                 u64 [s1 + 0x30] = a1
  7767: 33 08 70 07 01           a1 = 0x10770
  7772: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7776: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7781: 49 21 c0 01              u64 [sp + 448] = 0
  7785: 95 18 ff 07              a1 = sp + 0x7ff
  7789: 95 88 b9 03              a1 = a1 + 0x3b9
  7793: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7797: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7802: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7806: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7809: 88 77 01                 a0 = a0 <u 0x1
  7812: 97 77 01                 a0 = a0 << 0x1
  7815: 7b 17 28                 u64 [sp + 0x28] = a0
  7818: 95 17 ff 07              a0 = sp + 0x7ff
  7822: 95 77 e9 03              a0 = a0 + 0x3e9
  7826: 95 18 a0 01              a1 = sp + 0x1a0
  7830: 50 20 b2 00 84 1d        ra = 178, jump @798
      :                          @400 [@dyn 89]
  7836: 82 65 50                 s0 = u64 [s1 + 0x50]
  7839: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7842: 82 66 48                 s1 = u64 [s1 + 0x48]
  7845: 82 17 28                 a0 = u64 [sp + 0x28]
  7848: 33 08                    a1 = 0
  7850: 33 09                    a2 = 0
  7852: 64 5a                    a3 = s0
  7854: 33 00 b4 00              ra = 0xb4
  7858: 0a 64                    ecalli 100 // 'log'
  7860: 01                       fallthrough
      :                          @401 [@dyn 90]
  7861: 82 17 30                 a0 = u64 [sp + 0x30]
  7864: c8 67 07                 a0 = a0 + s1
  7867: 53 37 00 00 f0 25        jump @407 if a0 <u 4293918720
      :                          @402
  7873: 33 07 50 00 03           a0 = 0x30050
  7878: 95 77 00 00 10           a0 = a0 + 0x100000
  7883: 01                       fallthrough
      :                          @403
  7884: 82 78                    a1 = u64 [a0]
  7886: c9 87 09                 a2 = a0 - a1
  7889: ab 59 0f                 jump @407 if a2 != s0
      :                          @404
  7892: c9 68 09                 a2 = a1 - s1
  7895: 01                       fallthrough
      :                          @405
  7896: 82 7a                    a3 = u64 [a0]
  7898: ab 8a f2                 jump @403 if a3 != a1
      :                          @406
  7901: 7b 79                    u64 [a0] = a2
  7903: 01                       fallthrough
      :                          @407
  7904: 95 16 ff 07              s1 = sp + 0x7ff
  7908: 95 66 a1 03              s1 = s1 + 0x3a1
  7912: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7916: 33 08 02                 a1 = 0x2
  7919: 33 05 02                 s0 = 0x2
  7922: 50 20 b6 00 9f 2a        ra = 182, jump @1076
      :                          @408 [@dyn 91]
  7928: 95 18 52                 a1 = sp + 0x52
  7931: 33 09 03                 a2 = 0x3
  7934: 95 1a 98 00              a3 = sp + 0x98
  7938: 33 0c 00 01              a5 = 0x100
  7942: 82 17 38                 a0 = u64 [sp + 0x38]
  7945: 33 0b                    a4 = 0
  7947: 0a 02                    ecalli 2 // 'read'
  7949: 95 18 48                 a1 = sp + 0x48
  7952: 7b 68 18                 u64 [s1 + 0x18] = a1
  7955: 33 08 16                 a1 = 0x16
  7958: 7b 68 20                 u64 [s1 + 0x20] = a1
  7961: 7b 68 30                 u64 [s1 + 0x30] = a1
  7964: 33 08 a0 07 01           a1 = 0x107a0
  7969: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7973: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7978: 49 21 c0 01              u64 [sp + 448] = 0
  7982: 95 18 ff 07              a1 = sp + 0x7ff
  7986: 95 88 b9 03              a1 = a1 + 0x3b9
  7990: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7994: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  7998: 7b 67                    u64 [s1] = a0
  8000: 95 77 01                 a0 = a0 + 0x1
  8003: 88 77 01                 a0 = a0 <u 0x1
  8006: 97 77 01                 a0 = a0 << 0x1
  8009: 7b 17 28                 u64 [sp + 0x28] = a0
  8012: 7b 66 28                 u64 [s1 + 0x28] = s1
  8015: 95 17 ff 07              a0 = sp + 0x7ff
  8019: 95 77 e9 03              a0 = a0 + 0x3e9
  8023: 95 18 a0 01              a1 = sp + 0x1a0
  8027: 50 20 b8 00 bf 1c        ra = 184, jump @798
      :                          @409 [@dyn 92]
  8033: 82 65 50                 s0 = u64 [s1 + 0x50]
  8036: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8039: 82 66 48                 s1 = u64 [s1 + 0x48]
  8042: 82 17 28                 a0 = u64 [sp + 0x28]
  8045: 33 08                    a1 = 0
  8047: 33 09                    a2 = 0
  8049: 64 5a                    a3 = s0
  8051: 33 00 ba 00              ra = 0xba
  8055: 0a 64                    ecalli 100 // 'log'
  8057: 01                       fallthrough
      :                          @410 [@dyn 93]
  8058: 82 17 30                 a0 = u64 [sp + 0x30]
  8061: c8 67 07                 a0 = a0 + s1
  8064: 53 37 00 00 f0 57 02     jump @444 if a0 <u 4293918720
      :                          @411
  8071: 33 07 50 00 03           a0 = 0x30050
  8076: 95 77 00 00 10           a0 = a0 + 0x100000
  8081: 01                       fallthrough
      :                          @412
  8082: 82 78                    a1 = u64 [a0]
  8084: c9 87 09                 a2 = a0 - a1
  8087: ab 59 40 02              jump @444 if a2 != s0
      :                          @413
  8091: c9 68 09                 a2 = a1 - s1
  8094: 01                       fallthrough
      :                          @414
  8095: 82 7a                    a3 = u64 [a0]
  8097: ab 8a f1                 jump @412 if a3 != a1
      :                          @415
  8100: 7b 79                    u64 [a0] = a2
  8102: 33 0b                    a4 = 0
  8104: 01                       fallthrough
      :                          @416
  8105: ab 8a e9                 jump @412 if a3 != a1
      :                          @417
  8108: 28 2b 02                 jump @444
      :                          @418 [@dyn 94]
  8111: 33 06 03                 s1 = 0x3
  8114: 95 17 58                 a0 = sp + 0x58
  8117: 33 08 03                 a1 = 0x3
  8120: 0a 0e                    ecalli 14 // 'solicit'
  8122: 95 15 ff 07              s0 = sp + 0x7ff
  8126: 95 55 a1 03              s0 = s0 + 0x3a1
  8130: 7b 57 78                 u64 [s0 + 0x78] = a0
  8133: 88 77 01                 a0 = a0 <u 0x1
  8136: 97 77 01                 a0 = a0 << 0x1
  8139: 7b 17 10                 u64 [sp + 0x10] = a0
  8142: 95 17 48                 a0 = sp + 0x48
  8145: 7b 57 18                 u64 [s0 + 0x18] = a0
  8148: 33 08 16                 a1 = 0x16
  8151: 7b 58 20                 u64 [s0 + 0x20] = a1
  8154: 95 17 ff 07              a0 = sp + 0x7ff
  8158: 95 77 19 04              a0 = a0 + 0x419
  8162: 7b 57 28                 u64 [s0 + 0x28] = a0
  8165: 7b 18 28                 u64 [sp + 0x28] = a1
  8168: 7b 58 30                 u64 [s0 + 0x30] = a1
  8171: 33 07 f8 07 01           a0 = 0x107f8
  8176: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8180: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
  8184: 49 21 c0 01              u64 [sp + 448] = 0
  8188: 95 17 ff 07              a0 = sp + 0x7ff
  8192: 95 77 b9 03              a0 = a0 + 0x3b9
  8196: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8200: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8205: 95 17 ff 07              a0 = sp + 0x7ff
  8209: 95 77 e9 03              a0 = a0 + 0x3e9
  8213: 95 18 a0 01              a1 = sp + 0x1a0
  8217: 50 20 be 00 01 1c        ra = 190, jump @798
      :                          @419 [@dyn 95]
  8223: 82 56 50                 s1 = u64 [s0 + 0x50]
  8226: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8229: 82 55 48                 s0 = u64 [s0 + 0x48]
  8232: 82 17 10                 a0 = u64 [sp + 0x10]
  8235: 33 08                    a1 = 0
  8237: 33 09                    a2 = 0
  8239: 64 6a                    a3 = s1
  8241: 33 00 c0 00              ra = 0xc0
  8245: 0a 64                    ecalli 100 // 'log'
  8247: 01                       fallthrough
      :                          @420 [@dyn 96]
  8248: 82 17 30                 a0 = u64 [sp + 0x30]
  8251: c8 57 07                 a0 = a0 + s0
  8254: 53 37 00 00 f0 25        jump @426 if a0 <u 4293918720
      :                          @421
  8260: 33 07 50 00 03           a0 = 0x30050
  8265: 95 77 00 00 10           a0 = a0 + 0x100000
  8270: 01                       fallthrough
      :                          @422
  8271: 82 78                    a1 = u64 [a0]
  8273: c9 87 09                 a2 = a0 - a1
  8276: ab 69 0f                 jump @426 if a2 != s1
      :                          @423
  8279: c9 58 09                 a2 = a1 - s0
  8282: 01                       fallthrough
      :                          @424
  8283: 82 7a                    a3 = u64 [a0]
  8285: ab 8a f2                 jump @422 if a3 != a1
      :                          @425
  8288: 7b 79                    u64 [a0] = a2
  8290: 01                       fallthrough
      :                          @426
  8291: 95 16 ff 07              s1 = sp + 0x7ff
  8295: 95 66 a1 03              s1 = s1 + 0x3a1
  8299: 82 67 78                 a0 = u64 [s1 + 0x78]
  8302: 33 08 01                 a1 = 0x1
  8305: 50 20 c2 00 20 29        ra = 194, jump @1076
      :                          @427 [@dyn 97]
  8311: 95 17 58                 a0 = sp + 0x58
  8314: 33 08 03                 a1 = 0x3
  8317: 0a 0d                    ecalli 13 // 'query'
  8319: 95 18 48                 a1 = sp + 0x48
  8322: 7b 68 18                 u64 [s1 + 0x18] = a1
  8325: 95 18 ff 07              a1 = sp + 0x7ff
  8329: 95 88 21 04              a1 = a1 + 0x421
  8333: 7b 68 28                 u64 [s1 + 0x28] = a1
  8336: 82 18 28                 a1 = u64 [sp + 0x28]
  8339: 7b 68 20                 u64 [s1 + 0x20] = a1
  8342: 7b 68 30                 u64 [s1 + 0x30] = a1
  8345: 33 08 58 08 01           a1 = 0x10858
  8350: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8354: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8359: 49 21 c0 01              u64 [sp + 448] = 0
  8363: 95 18 ff 07              a1 = sp + 0x7ff
  8367: 95 88 b9 03              a1 = a1 + 0x3b9
  8371: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8375: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8380: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8384: 88 77 01                 a0 = a0 <u 0x1
  8387: 97 77 01                 a0 = a0 << 0x1
  8390: 7b 17 28                 u64 [sp + 0x28] = a0
  8393: 95 17 ff 07              a0 = sp + 0x7ff
  8397: 95 77 e9 03              a0 = a0 + 0x3e9
  8401: 95 18 a0 01              a1 = sp + 0x1a0
  8405: 50 20 c4 00 45 1b        ra = 196, jump @798
      :                          @428 [@dyn 98]
  8411: 82 65 50                 s0 = u64 [s1 + 0x50]
  8414: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8417: 82 66 48                 s1 = u64 [s1 + 0x48]
  8420: 82 17 28                 a0 = u64 [sp + 0x28]
  8423: 33 08                    a1 = 0
  8425: 33 09                    a2 = 0
  8427: 64 5a                    a3 = s0
  8429: 33 00 c6 00              ra = 0xc6
  8433: 0a 64                    ecalli 100 // 'log'
  8435: 01                       fallthrough
      :                          @429 [@dyn 99]
  8436: 82 17 30                 a0 = u64 [sp + 0x30]
  8439: c8 67 07                 a0 = a0 + s1
  8442: 53 37 00 00 f0 25        jump @435 if a0 <u 4293918720
      :                          @430
  8448: 33 07 50 00 03           a0 = 0x30050
  8453: 95 77 00 00 10           a0 = a0 + 0x100000
  8458: 01                       fallthrough
      :                          @431
  8459: 82 78                    a1 = u64 [a0]
  8461: c9 87 09                 a2 = a0 - a1
  8464: ab 59 0f                 jump @435 if a2 != s0
      :                          @432
  8467: c9 68 09                 a2 = a1 - s1
  8470: 01                       fallthrough
      :                          @433
  8471: 82 7a                    a3 = u64 [a0]
  8473: ab 8a f2                 jump @431 if a3 != a1
      :                          @434
  8476: 7b 79                    u64 [a0] = a2
  8478: 01                       fallthrough
      :                          @435
  8479: 95 16 ff 07              s1 = sp + 0x7ff
  8483: 95 66 a1 03              s1 = s1 + 0x3a1
  8487: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8491: 33 08 02                 a1 = 0x2
  8494: 33 05 02                 s0 = 0x2
  8497: 50 20 c8 00 60 28        ra = 200, jump @1076
      :                          @436 [@dyn 100]
  8503: 95 17 78                 a0 = sp + 0x78
  8506: 33 08 03                 a1 = 0x3
  8509: 0a 0d                    ecalli 13 // 'query'
  8511: 95 18 48                 a1 = sp + 0x48
  8514: 7b 68 18                 u64 [s1 + 0x18] = a1
  8517: 33 08 16                 a1 = 0x16
  8520: 7b 68 20                 u64 [s1 + 0x20] = a1
  8523: 7b 68 30                 u64 [s1 + 0x30] = a1
  8526: 33 08 a0 08 01           a1 = 0x108a0
  8531: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8535: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8540: 49 21 c0 01              u64 [sp + 448] = 0
  8544: 95 18 ff 07              a1 = sp + 0x7ff
  8548: 95 88 b9 03              a1 = a1 + 0x3b9
  8552: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8556: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  8560: 7b 67                    u64 [s1] = a0
  8562: 95 77 01                 a0 = a0 + 0x1
  8565: 88 77 01                 a0 = a0 <u 0x1
  8568: 97 77 01                 a0 = a0 << 0x1
  8571: 7b 17 28                 u64 [sp + 0x28] = a0
  8574: 7b 66 28                 u64 [s1 + 0x28] = s1
  8577: 95 17 ff 07              a0 = sp + 0x7ff
  8581: 95 77 e9 03              a0 = a0 + 0x3e9
  8585: 95 18 a0 01              a1 = sp + 0x1a0
  8589: 50 20 ca 00 8d 1a        ra = 202, jump @798
      :                          @437 [@dyn 101]
  8595: 82 65 50                 s0 = u64 [s1 + 0x50]
  8598: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8601: 82 66 48                 s1 = u64 [s1 + 0x48]
  8604: 82 17 28                 a0 = u64 [sp + 0x28]
  8607: 33 08                    a1 = 0
  8609: 33 09                    a2 = 0
  8611: 64 5a                    a3 = s0
  8613: 33 00 cc 00              ra = 0xcc
  8617: 0a 64                    ecalli 100 // 'log'
  8619: 01                       fallthrough
      :                          @438 [@dyn 102]
  8620: 82 17 30                 a0 = u64 [sp + 0x30]
  8623: c8 67 07                 a0 = a0 + s1
  8626: 53 37 00 00 f0 25        jump @444 if a0 <u 4293918720
      :                          @439
  8632: 33 07 50 00 03           a0 = 0x30050
  8637: 95 77 00 00 10           a0 = a0 + 0x100000
  8642: 01                       fallthrough
      :                          @440
  8643: 82 78                    a1 = u64 [a0]
  8645: c9 87 09                 a2 = a0 - a1
  8648: ab 59 0f                 jump @444 if a2 != s0
      :                          @441
  8651: c9 68 09                 a2 = a1 - s1
  8654: 01                       fallthrough
      :                          @442
  8655: 82 7a                    a3 = u64 [a0]
  8657: ab 8a f2                 jump @440 if a3 != a1
      :                          @443
  8660: 7b 79                    u64 [a0] = a2
  8662: 01                       fallthrough
      :                          @444
  8663: 95 17 ff 07              a0 = sp + 0x7ff
  8667: 95 77 a1 03              a0 = a0 + 0x3a1
  8671: 82 77                    a0 = u64 [a0]
  8673: 33 08 05                 a1 = 0x5
  8676: 33 00 74 01              ra = 0x174
  8680: 28 a9 27                 jump @1076
      :                          @445 [@dyn 103]
  8683: 33 06 03                 s1 = 0x3
  8686: 95 17 58                 a0 = sp + 0x58
  8689: 33 08 03                 a1 = 0x3
  8692: 0a 0f                    ecalli 15 // 'forget'
  8694: 95 15 ff 07              s0 = sp + 0x7ff
  8698: 95 55 a1 03              s0 = s0 + 0x3a1
  8702: 7b 57 68                 u64 [s0 + 0x68] = a0
  8705: 88 77 01                 a0 = a0 <u 0x1
  8708: 97 77 01                 a0 = a0 << 0x1
  8711: 7b 17 10                 u64 [sp + 0x10] = a0
  8714: 95 17 48                 a0 = sp + 0x48
  8717: 7b 57 18                 u64 [s0 + 0x18] = a0
  8720: 33 08 16                 a1 = 0x16
  8723: 7b 58 20                 u64 [s0 + 0x20] = a1
  8726: 95 17 ff 07              a0 = sp + 0x7ff
  8730: 95 77 09 04              a0 = a0 + 0x409
  8734: 7b 57 28                 u64 [s0 + 0x28] = a0
  8737: 7b 18 28                 u64 [sp + 0x28] = a1
  8740: 7b 58 30                 u64 [s0 + 0x30] = a1
  8743: 33 07 e8 08 01           a0 = 0x108e8
  8748: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8752: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
  8756: 49 21 c0 01              u64 [sp + 448] = 0
  8760: 95 17 ff 07              a0 = sp + 0x7ff
  8764: 95 77 b9 03              a0 = a0 + 0x3b9
  8768: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8772: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8777: 95 17 ff 07              a0 = sp + 0x7ff
  8781: 95 77 e9 03              a0 = a0 + 0x3e9
  8785: 95 18 a0 01              a1 = sp + 0x1a0
  8789: 50 20 d0 00 c5 19        ra = 208, jump @798
      :                          @446 [@dyn 104]
  8795: 82 56 50                 s1 = u64 [s0 + 0x50]
  8798: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8801: 82 55 48                 s0 = u64 [s0 + 0x48]
  8804: 82 17 10                 a0 = u64 [sp + 0x10]
  8807: 33 08                    a1 = 0
  8809: 33 09                    a2 = 0
  8811: 64 6a                    a3 = s1
  8813: 33 00 d2 00              ra = 0xd2
  8817: 0a 64                    ecalli 100 // 'log'
  8819: 01                       fallthrough
      :                          @447 [@dyn 105]
  8820: 82 17 30                 a0 = u64 [sp + 0x30]
  8823: c8 57 07                 a0 = a0 + s0
  8826: 53 37 00 00 f0 25        jump @453 if a0 <u 4293918720
      :                          @448
  8832: 33 07 50 00 03           a0 = 0x30050
  8837: 95 77 00 00 10           a0 = a0 + 0x100000
  8842: 01                       fallthrough
      :                          @449
  8843: 82 78                    a1 = u64 [a0]
  8845: c9 87 09                 a2 = a0 - a1
  8848: ab 69 0f                 jump @453 if a2 != s1
      :                          @450
  8851: c9 58 09                 a2 = a1 - s0
  8854: 01                       fallthrough
      :                          @451
  8855: 82 7a                    a3 = u64 [a0]
  8857: ab 8a f2                 jump @449 if a3 != a1
      :                          @452
  8860: 7b 79                    u64 [a0] = a2
  8862: 01                       fallthrough
      :                          @453
  8863: 95 16 ff 07              s1 = sp + 0x7ff
  8867: 95 66 a1 03              s1 = s1 + 0x3a1
  8871: 82 67 68                 a0 = u64 [s1 + 0x68]
  8874: 33 08 01                 a1 = 0x1
  8877: 50 20 d4 00 e4 26        ra = 212, jump @1076
      :                          @454 [@dyn 106]
  8883: 95 17 58                 a0 = sp + 0x58
  8886: 33 08 03                 a1 = 0x3
  8889: 0a 0d                    ecalli 13 // 'query'
  8891: 95 18 48                 a1 = sp + 0x48
  8894: 7b 68 18                 u64 [s1 + 0x18] = a1
  8897: 95 18 ff 07              a1 = sp + 0x7ff
  8901: 95 88 11 04              a1 = a1 + 0x411
  8905: 7b 68 28                 u64 [s1 + 0x28] = a1
  8908: 82 18 28                 a1 = u64 [sp + 0x28]
  8911: 7b 68 20                 u64 [s1 + 0x20] = a1
  8914: 7b 68 30                 u64 [s1 + 0x30] = a1
  8917: 33 08 30 09 01           a1 = 0x10930
  8922: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8926: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8931: 49 21 c0 01              u64 [sp + 448] = 0
  8935: 95 18 ff 07              a1 = sp + 0x7ff
  8939: 95 88 b9 03              a1 = a1 + 0x3b9
  8943: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8947: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8952: 7b 67 70                 u64 [s1 + 0x70] = a0
  8955: 8e 77                    a0 = a0 >u 0
  8957: 97 77 01                 a0 = a0 << 0x1
  8960: 7b 17 28                 u64 [sp + 0x28] = a0
  8963: 95 17 ff 07              a0 = sp + 0x7ff
  8967: 95 77 e9 03              a0 = a0 + 0x3e9
  8971: 95 18 a0 01              a1 = sp + 0x1a0
  8975: 50 20 d6 00 0b 19        ra = 214, jump @798
      :                          @455 [@dyn 107]
  8981: 82 65 50                 s0 = u64 [s1 + 0x50]
  8984: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8987: 82 66 48                 s1 = u64 [s1 + 0x48]
  8990: 82 17 28                 a0 = u64 [sp + 0x28]
  8993: 33 08                    a1 = 0
  8995: 33 09                    a2 = 0
  8997: 64 5a                    a3 = s0
  8999: 33 00 d8 00              ra = 0xd8
  9003: 0a 64                    ecalli 100 // 'log'
  9005: 01                       fallthrough
      :                          @456 [@dyn 108]
  9006: 82 17 30                 a0 = u64 [sp + 0x30]
  9009: c8 67 07                 a0 = a0 + s1
  9012: 53 37 00 00 f0 25        jump @462 if a0 <u 4293918720
      :                          @457
  9018: 33 07 50 00 03           a0 = 0x30050
  9023: 95 77 00 00 10           a0 = a0 + 0x100000
  9028: 01                       fallthrough
      :                          @458
  9029: 82 78                    a1 = u64 [a0]
  9031: c9 87 09                 a2 = a0 - a1
  9034: ab 59 0f                 jump @462 if a2 != s0
      :                          @459
  9037: c9 68 09                 a2 = a1 - s1
  9040: 01                       fallthrough
      :                          @460
  9041: 82 7a                    a3 = u64 [a0]
  9043: ab 8a f2                 jump @458 if a3 != a1
      :                          @461
  9046: 7b 79                    u64 [a0] = a2
  9048: 01                       fallthrough
      :                          @462
  9049: 95 15 ff 07              s0 = sp + 0x7ff
  9053: 95 55 a1 03              s0 = s0 + 0x3a1
  9057: 82 57 70                 a0 = u64 [s0 + 0x70]
  9060: 33 08 02                 a1 = 0x2
  9063: 33 06 02                 s1 = 0x2
  9066: 50 20 da 00 27 26        ra = 218, jump @1076
      :                          @463 [@dyn 109]
  9072: 95 18 78                 a1 = sp + 0x78
  9075: 95 19 98 00              a2 = sp + 0x98
  9079: 33 0b 03                 a4 = 0x3
  9082: 82 17 38                 a0 = u64 [sp + 0x38]
  9085: 33 0a                    a3 = 0
  9087: 0a 01                    ecalli 1 // 'lookup'
  9089: 7b 57 78                 u64 [s0 + 0x78] = a0
  9092: 95 77 01                 a0 = a0 + 0x1
  9095: 88 77 01                 a0 = a0 <u 0x1
  9098: 97 77 01                 a0 = a0 << 0x1
  9101: 7b 17 10                 u64 [sp + 0x10] = a0
  9104: 95 17 48                 a0 = sp + 0x48
  9107: 7b 57 18                 u64 [s0 + 0x18] = a0
  9110: 33 09 16                 a2 = 0x16
  9113: 7b 59 20                 u64 [s0 + 0x20] = a2
  9116: 95 17 ff 07              a0 = sp + 0x7ff
  9120: 95 77 19 04              a0 = a0 + 0x419
  9124: 7b 57 28                 u64 [s0 + 0x28] = a0
  9127: 7b 19 28                 u64 [sp + 0x28] = a2
  9130: 7b 59 30                 u64 [s0 + 0x30] = a2
  9133: 33 07 78 09 01           a0 = 0x10978
  9138: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9142: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9147: 49 21 c0 01              u64 [sp + 448] = 0
  9151: 95 17 ff 07              a0 = sp + 0x7ff
  9155: 95 77 b9 03              a0 = a0 + 0x3b9
  9159: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9163: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  9167: 95 17 ff 07              a0 = sp + 0x7ff
  9171: 95 77 e9 03              a0 = a0 + 0x3e9
  9175: 95 18 a0 01              a1 = sp + 0x1a0
  9179: 50 20 dc 00 3f 18        ra = 220, jump @798
      :                          @464 [@dyn 110]
  9185: 82 56 50                 s1 = u64 [s0 + 0x50]
  9188: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9191: 82 55 48                 s0 = u64 [s0 + 0x48]
  9194: 82 17 10                 a0 = u64 [sp + 0x10]
  9197: 33 08                    a1 = 0
  9199: 33 09                    a2 = 0
  9201: 64 6a                    a3 = s1
  9203: 33 00 de 00              ra = 0xde
  9207: 0a 64                    ecalli 100 // 'log'
  9209: 01                       fallthrough
      :                          @465 [@dyn 111]
  9210: 82 17 30                 a0 = u64 [sp + 0x30]
  9213: c8 57 07                 a0 = a0 + s0
  9216: 53 37 00 00 f0 25        jump @471 if a0 <u 4293918720
      :                          @466
  9222: 33 07 50 00 03           a0 = 0x30050
  9227: 95 77 00 00 10           a0 = a0 + 0x100000
  9232: 01                       fallthrough
      :                          @467
  9233: 82 78                    a1 = u64 [a0]
  9235: c9 87 09                 a2 = a0 - a1
  9238: ab 69 0f                 jump @471 if a2 != s1
      :                          @468
  9241: c9 58 09                 a2 = a1 - s0
  9244: 01                       fallthrough
      :                          @469
  9245: 82 7a                    a3 = u64 [a0]
  9247: ab 8a f2                 jump @467 if a3 != a1
      :                          @470
  9250: 7b 79                    u64 [a0] = a2
  9252: 01                       fallthrough
      :                          @471
  9253: 95 16 ff 07              s1 = sp + 0x7ff
  9257: 95 66 a1 03              s1 = s1 + 0x3a1
  9261: 82 67 78                 a0 = u64 [s1 + 0x78]
  9264: 33 08 05                 a1 = 0x5
  9267: 50 20 e0 00 5e 25        ra = 224, jump @1076
      :                          @472 [@dyn 112]
  9273: 33 07 e8 03              a0 = 0x3e8
  9277: 95 18 52                 a1 = sp + 0x52
  9280: 0a 06                    ecalli 6 // 'assign'
  9282: 95 18 48                 a1 = sp + 0x48
  9285: 7b 68 18                 u64 [s1 + 0x18] = a1
  9288: 95 18 ff 07              a1 = sp + 0x7ff
  9292: 95 88 21 04              a1 = a1 + 0x421
  9296: 7b 68 28                 u64 [s1 + 0x28] = a1
  9299: 82 18 28                 a1 = u64 [sp + 0x28]
  9302: 7b 68 20                 u64 [s1 + 0x20] = a1
  9305: 7b 68 30                 u64 [s1 + 0x30] = a1
  9308: 33 08 c8 09 01           a1 = 0x109c8
  9313: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9317: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9322: 49 21 c0 01              u64 [sp + 448] = 0
  9326: 95 18 ff 07              a1 = sp + 0x7ff
  9330: 95 88 b9 03              a1 = a1 + 0x3b9
  9334: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9338: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9343: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9347: 95 77 06                 a0 = a0 + 0x6
  9350: 88 77 01                 a0 = a0 <u 0x1
  9353: 97 77 01                 a0 = a0 << 0x1
  9356: 7b 17 28                 u64 [sp + 0x28] = a0
  9359: 95 17 ff 07              a0 = sp + 0x7ff
  9363: 95 77 e9 03              a0 = a0 + 0x3e9
  9367: 95 18 a0 01              a1 = sp + 0x1a0
  9371: 50 20 e2 00 7f 17        ra = 226, jump @798
      :                          @473 [@dyn 113]
  9377: 82 65 50                 s0 = u64 [s1 + 0x50]
  9380: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9383: 82 66 48                 s1 = u64 [s1 + 0x48]
  9386: 82 17 28                 a0 = u64 [sp + 0x28]
  9389: 33 08                    a1 = 0
  9391: 33 09                    a2 = 0
  9393: 64 5a                    a3 = s0
  9395: 33 00 e4 00              ra = 0xe4
  9399: 0a 64                    ecalli 100 // 'log'
  9401: 01                       fallthrough
      :                          @474 [@dyn 114]
  9402: 82 17 30                 a0 = u64 [sp + 0x30]
  9405: c8 67 07                 a0 = a0 + s1
  9408: 53 37 00 00 f0 25        jump @480 if a0 <u 4293918720
      :                          @475
  9414: 33 07 50 00 03           a0 = 0x30050
  9419: 95 77 00 00 10           a0 = a0 + 0x100000
  9424: 01                       fallthrough
      :                          @476
  9425: 82 78                    a1 = u64 [a0]
  9427: c9 87 09                 a2 = a0 - a1
  9430: ab 59 0f                 jump @480 if a2 != s0
      :                          @477
  9433: c9 68 09                 a2 = a1 - s1
  9436: 01                       fallthrough
      :                          @478
  9437: 82 7a                    a3 = u64 [a0]
  9439: ab 8a f2                 jump @476 if a3 != a1
      :                          @479
  9442: 7b 79                    u64 [a0] = a2
  9444: 01                       fallthrough
      :                          @480
  9445: 95 15 ff 07              s0 = sp + 0x7ff
  9449: 95 55 a1 03              s0 = s0 + 0x3a1
  9453: 82 57 80 00              a0 = u64 [s0 + 0x80]
  9457: 33 08 06                 a1 = 0x6
  9460: 50 20 e6 00 9d 24        ra = 230, jump @1076
      :                          @481 [@dyn 115]
  9466: 33 07 9a 02              a0 = 0x29a
  9470: 95 18 58                 a1 = sp + 0x58
  9473: 33 09 03                 a2 = 0x3
  9476: 0a 1b                    ecalli 27 // 'provide'
  9478: 7b 17 28                 u64 [sp + 0x28] = a0
  9481: 95 77 04                 a0 = a0 + 0x4
  9484: 88 77 01                 a0 = a0 <u 0x1
  9487: 97 77 01                 a0 = a0 << 0x1
  9490: 7b 17 08                 u64 [sp + 0x8] = a0
  9493: 95 17 ff 07              a0 = sp + 0x7ff
  9497: 95 77 11 04              a0 = a0 + 0x411
  9501: 7b 57 48                 u64 [s0 + 0x48] = a0
  9504: 33 07 16                 a0 = 0x16
  9507: 7b 17 10                 u64 [sp + 0x10] = a0
  9510: 7b 57 50                 u64 [s0 + 0x50] = a0
  9513: 33 07 30 0a 01           a0 = 0x10a30
  9518: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9522: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9527: 49 21 c0 01              u64 [sp + 448] = 0
  9531: 95 17 ff 07              a0 = sp + 0x7ff
  9535: 95 77 e9 03              a0 = a0 + 0x3e9
  9539: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9543: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9548: 95 17 ff 07              a0 = sp + 0x7ff
  9552: 95 77 b9 03              a0 = a0 + 0x3b9
  9556: 95 18 a0 01              a1 = sp + 0x1a0
  9560: 50 20 e8 00 c2 16        ra = 232, jump @798
      :                          @482 [@dyn 116]
  9566: 82 56 20                 s1 = u64 [s0 + 0x20]
  9569: 82 5b 28                 a4 = u64 [s0 + 0x28]
  9572: 82 55 18                 s0 = u64 [s0 + 0x18]
  9575: 82 17 08                 a0 = u64 [sp + 0x8]
  9578: 33 08                    a1 = 0
  9580: 33 09                    a2 = 0
  9582: 64 6a                    a3 = s1
  9584: 33 00 ea 00              ra = 0xea
  9588: 0a 64                    ecalli 100 // 'log'
  9590: 01                       fallthrough
      :                          @483 [@dyn 117]
  9591: 82 17 30                 a0 = u64 [sp + 0x30]
  9594: c8 57 07                 a0 = a0 + s0
  9597: 53 37 00 00 f0 25        jump @489 if a0 <u 4293918720
      :                          @484
  9603: 33 07 50 00 03           a0 = 0x30050
  9608: 95 77 00 00 10           a0 = a0 + 0x100000
  9613: 01                       fallthrough
      :                          @485
  9614: 82 78                    a1 = u64 [a0]
  9616: c9 87 09                 a2 = a0 - a1
  9619: ab 69 0f                 jump @489 if a2 != s1
      :                          @486
  9622: c9 58 09                 a2 = a1 - s0
  9625: 01                       fallthrough
      :                          @487
  9626: 82 7a                    a3 = u64 [a0]
  9628: ab 8a f2                 jump @485 if a3 != a1
      :                          @488
  9631: 7b 79                    u64 [a0] = a2
  9633: 01                       fallthrough
      :                          @489
  9634: 33 08 07                 a1 = 0x7
  9637: 82 17 28                 a0 = u64 [sp + 0x28]
  9640: 50 20 ec 00 e9 23        ra = 236, jump @1076
      :                          @490 [@dyn 118]
  9646: 95 18 58                 a1 = sp + 0x58
  9649: 33 09 03                 a2 = 0x3
  9652: 82 17 38                 a0 = u64 [sp + 0x38]
  9655: 0a 1b                    ecalli 27 // 'provide'
  9657: 95 16 ff 07              s1 = sp + 0x7ff
  9661: 95 66 a1 03              s1 = s1 + 0x3a1
  9665: 82 18 10                 a1 = u64 [sp + 0x10]
  9668: 7b 68 50                 u64 [s1 + 0x50] = a1
  9671: 33 08 88 0a 01           a1 = 0x10a88
  9676: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9680: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9685: 49 21 c0 01              u64 [sp + 448] = 0
  9689: 95 18 ff 07              a1 = sp + 0x7ff
  9693: 95 88 e9 03              a1 = a1 + 0x3e9
  9697: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9701: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9706: 7b 67                    u64 [s1] = a0
  9708: 88 77 01                 a0 = a0 <u 0x1
  9711: 97 77 01                 a0 = a0 << 0x1
  9714: 7b 17 10                 u64 [sp + 0x10] = a0
  9717: 7b 66 48                 u64 [s1 + 0x48] = s1
  9720: 95 17 ff 07              a0 = sp + 0x7ff
  9724: 95 77 b9 03              a0 = a0 + 0x3b9
  9728: 95 18 a0 01              a1 = sp + 0x1a0
  9732: 50 20 ee 00 16 16        ra = 238, jump @798
      :                          @491 [@dyn 119]
  9738: 82 65 20                 s0 = u64 [s1 + 0x20]
  9741: 82 6b 28                 a4 = u64 [s1 + 0x28]
  9744: 82 66 18                 s1 = u64 [s1 + 0x18]
  9747: 82 17 10                 a0 = u64 [sp + 0x10]
  9750: 33 08                    a1 = 0
  9752: 33 09                    a2 = 0
  9754: 64 5a                    a3 = s0
  9756: 33 00 f0 00              ra = 0xf0
  9760: 0a 64                    ecalli 100 // 'log'
  9762: 01                       fallthrough
      :                          @492 [@dyn 120]
  9763: 82 17 30                 a0 = u64 [sp + 0x30]
  9766: c8 67 07                 a0 = a0 + s1
  9769: 53 37 00 00 f0 25        jump @498 if a0 <u 4293918720
      :                          @493
  9775: 33 07 50 00 03           a0 = 0x30050
  9780: 95 77 00 00 10           a0 = a0 + 0x100000
  9785: 01                       fallthrough
      :                          @494
  9786: 82 78                    a1 = u64 [a0]
  9788: c9 87 09                 a2 = a0 - a1
  9791: ab 59 0f                 jump @498 if a2 != s0
      :                          @495
  9794: c9 68 09                 a2 = a1 - s1
  9797: 01                       fallthrough
      :                          @496
  9798: 82 7a                    a3 = u64 [a0]
  9800: ab 8a f2                 jump @494 if a3 != a1
      :                          @497
  9803: 7b 79                    u64 [a0] = a2
  9805: 01                       fallthrough
      :                          @498
  9806: 33 08 08                 a1 = 0x8
  9809: 82 17 28                 a0 = u64 [sp + 0x28]
  9812: 33 00 74 01              ra = 0x174
  9816: 28 39 23                 jump @1076
      :                          @499 [@dyn 121]
  9819: 33 06 03                 s1 = 0x3
  9822: 95 18 58                 a1 = sp + 0x58
  9825: 95 19 98 00              a2 = sp + 0x98
  9829: 33 0b 03                 a4 = 0x3
  9832: 82 17 38                 a0 = u64 [sp + 0x38]
  9835: 33 0a                    a3 = 0
  9837: 0a 01                    ecalli 1 // 'lookup'
  9839: 7b 17 98 01              u64 [sp + 0x198] = a0
  9843: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  9846: 88 77 01                 a0 = a0 <u 0x1
  9849: 97 77 01                 a0 = a0 << 0x1
  9852: 7b 17 10                 u64 [sp + 0x10] = a0
  9855: 95 17 48                 a0 = sp + 0x48
  9858: 95 15 ff 07              s0 = sp + 0x7ff
  9862: 95 55 a1 03              s0 = s0 + 0x3a1
  9866: 7b 57 18                 u64 [s0 + 0x18] = a0
  9869: 33 08 16                 a1 = 0x16
  9872: 7b 58 20                 u64 [s0 + 0x20] = a1
  9875: 95 17 98 01              a0 = sp + 0x198
  9879: 7b 57 28                 u64 [s0 + 0x28] = a0
  9882: 7b 18 28                 u64 [sp + 0x28] = a1
  9885: 7b 58 30                 u64 [s0 + 0x30] = a1
  9888: 33 07 c0 0a 01           a0 = 0x10ac0
  9893: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9897: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
  9901: 49 21 c0 01              u64 [sp + 448] = 0
  9905: 95 17 ff 07              a0 = sp + 0x7ff
  9909: 95 77 b9 03              a0 = a0 + 0x3b9
  9913: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9917: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9922: 95 17 ff 07              a0 = sp + 0x7ff
  9926: 95 77 e9 03              a0 = a0 + 0x3e9
  9930: 95 18 a0 01              a1 = sp + 0x1a0
  9934: 50 20 f4 00 4c 15        ra = 244, jump @798
      :                          @500 [@dyn 122]
  9940: 82 56 50                 s1 = u64 [s0 + 0x50]
  9943: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9946: 82 55 48                 s0 = u64 [s0 + 0x48]
  9949: 82 17 10                 a0 = u64 [sp + 0x10]
  9952: 33 08                    a1 = 0
  9954: 33 09                    a2 = 0
  9956: 64 6a                    a3 = s1
  9958: 33 00 f6 00              ra = 0xf6
  9962: 0a 64                    ecalli 100 // 'log'
  9964: 01                       fallthrough
      :                          @501 [@dyn 123]
  9965: 82 17 30                 a0 = u64 [sp + 0x30]
  9968: c8 57 07                 a0 = a0 + s0
  9971: 53 37 00 00 f0 25        jump @507 if a0 <u 4293918720
      :                          @502
  9977: 33 07 50 00 03           a0 = 0x30050
  9982: 95 77 00 00 10           a0 = a0 + 0x100000
  9987: 01                       fallthrough
      :                          @503
  9988: 82 78                    a1 = u64 [a0]
  9990: c9 87 09                 a2 = a0 - a1
  9993: ab 69 0f                 jump @507 if a2 != s1
      :                          @504
  9996: c9 58 09                 a2 = a1 - s0
  9999: 01                       fallthrough
      :                          @505
 10000: 82 7a                    a3 = u64 [a0]
 10002: ab 8a f2                 jump @503 if a3 != a1
      :                          @506
 10005: 7b 79                    u64 [a0] = a2
 10007: 01                       fallthrough
      :                          @507
 10008: 82 17 98 01              a0 = u64 [sp + 0x198]
 10012: 33 08 01                 a1 = 0x1
 10015: 50 20 f8 00 72 22        ra = 248, jump @1076
      :                          @508 [@dyn 124]
 10021: 95 17 58                 a0 = sp + 0x58
 10024: 33 08 03                 a1 = 0x3
 10027: 0a 0d                    ecalli 13 // 'query'
 10029: 95 16 ff 07              s1 = sp + 0x7ff
 10033: 95 66 a1 03              s1 = s1 + 0x3a1
 10037: 95 18 48                 a1 = sp + 0x48
 10040: 7b 68 18                 u64 [s1 + 0x18] = a1
 10043: 95 18 ff 07              a1 = sp + 0x7ff
 10047: 95 88 09 04              a1 = a1 + 0x409
 10051: 7b 68 28                 u64 [s1 + 0x28] = a1
 10054: 82 18 28                 a1 = u64 [sp + 0x28]
 10057: 7b 68 20                 u64 [s1 + 0x20] = a1
 10060: 7b 68 30                 u64 [s1 + 0x30] = a1
 10063: 33 08 30 09 01           a1 = 0x10930
 10068: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10072: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10077: 49 21 c0 01              u64 [sp + 448] = 0
 10081: 95 18 ff 07              a1 = sp + 0x7ff
 10085: 95 88 b9 03              a1 = a1 + 0x3b9
 10089: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10093: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10098: 7b 67 68                 u64 [s1 + 0x68] = a0
 10101: 8e 77                    a0 = a0 >u 0
 10103: 97 77 01                 a0 = a0 << 0x1
 10106: 7b 17 28                 u64 [sp + 0x28] = a0
 10109: 95 17 ff 07              a0 = sp + 0x7ff
 10113: 95 77 e9 03              a0 = a0 + 0x3e9
 10117: 95 18 a0 01              a1 = sp + 0x1a0
 10121: 50 20 fa 00 91 14        ra = 250, jump @798
      :                          @509 [@dyn 125]
 10127: 82 65 50                 s0 = u64 [s1 + 0x50]
 10130: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10133: 82 66 48                 s1 = u64 [s1 + 0x48]
 10136: 82 17 28                 a0 = u64 [sp + 0x28]
 10139: 33 08                    a1 = 0
 10141: 33 09                    a2 = 0
 10143: 64 5a                    a3 = s0
 10145: 33 00 fc 00              ra = 0xfc
 10149: 0a 64                    ecalli 100 // 'log'
 10151: 01                       fallthrough
      :                          @510 [@dyn 126]
 10152: 82 17 30                 a0 = u64 [sp + 0x30]
 10155: c8 67 07                 a0 = a0 + s1
 10158: 53 37 00 00 f0 25        jump @516 if a0 <u 4293918720
      :                          @511
 10164: 33 07 50 00 03           a0 = 0x30050
 10169: 95 77 00 00 10           a0 = a0 + 0x100000
 10174: 01                       fallthrough
      :                          @512
 10175: 82 78                    a1 = u64 [a0]
 10177: c9 87 09                 a2 = a0 - a1
 10180: ab 59 0f                 jump @516 if a2 != s0
      :                          @513
 10183: c9 68 09                 a2 = a1 - s1
 10186: 01                       fallthrough
      :                          @514
 10187: 82 7a                    a3 = u64 [a0]
 10189: ab 8a f2                 jump @512 if a3 != a1
      :                          @515
 10192: 7b 79                    u64 [a0] = a2
 10194: 01                       fallthrough
      :                          @516
 10195: 95 15 ff 07              s0 = sp + 0x7ff
 10199: 95 55 a1 03              s0 = s0 + 0x3a1
 10203: 82 57 68                 a0 = u64 [s0 + 0x68]
 10206: 33 08 02                 a1 = 0x2
 10209: 33 06 02                 s1 = 0x2
 10212: 50 20 fe 00 ad 21        ra = 254, jump @1076
      :                          @517 [@dyn 127]
 10218: 95 18 58                 a1 = sp + 0x58
 10221: 82 17 38                 a0 = u64 [sp + 0x38]
 10224: 0a 0c                    ecalli 12 // 'eject'
 10226: 7b 57 70                 u64 [s0 + 0x70] = a0
 10229: 95 77 04                 a0 = a0 + 0x4
 10232: 88 77 01                 a0 = a0 <u 0x1
 10235: 97 77 01                 a0 = a0 << 0x1
 10238: 7b 17 10                 u64 [sp + 0x10] = a0
 10241: 95 17 48                 a0 = sp + 0x48
 10244: 7b 57 18                 u64 [s0 + 0x18] = a0
 10247: 33 08 16                 a1 = 0x16
 10250: 7b 58 20                 u64 [s0 + 0x20] = a1
 10253: 95 17 ff 07              a0 = sp + 0x7ff
 10257: 95 77 11 04              a0 = a0 + 0x411
 10261: 7b 57 28                 u64 [s0 + 0x28] = a0
 10264: 7b 18 28                 u64 [sp + 0x28] = a1
 10267: 7b 58 30                 u64 [s0 + 0x30] = a1
 10270: 33 07 08 0b 01           a0 = 0x10b08
 10275: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10279: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10284: 49 21 c0 01              u64 [sp + 448] = 0
 10288: 95 17 ff 07              a0 = sp + 0x7ff
 10292: 95 77 b9 03              a0 = a0 + 0x3b9
 10296: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10300: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 10304: 95 17 ff 07              a0 = sp + 0x7ff
 10308: 95 77 e9 03              a0 = a0 + 0x3e9
 10312: 95 18 a0 01              a1 = sp + 0x1a0
 10316: 50 20 00 01 ce 13        ra = 256, jump @798
      :                          @518 [@dyn 128]
 10322: 82 56 50                 s1 = u64 [s0 + 0x50]
 10325: 82 5b 58                 a4 = u64 [s0 + 0x58]
 10328: 82 55 48                 s0 = u64 [s0 + 0x48]
 10331: 82 17 10                 a0 = u64 [sp + 0x10]
 10334: 33 08                    a1 = 0
 10336: 33 09                    a2 = 0
 10338: 64 6a                    a3 = s1
 10340: 33 00 02 01              ra = 0x102
 10344: 0a 64                    ecalli 100 // 'log'
 10346: 01                       fallthrough
      :                          @519 [@dyn 129]
 10347: 82 17 30                 a0 = u64 [sp + 0x30]
 10350: c8 57 07                 a0 = a0 + s0
 10353: 53 37 00 00 f0 25        jump @525 if a0 <u 4293918720
      :                          @520
 10359: 33 07 50 00 03           a0 = 0x30050
 10364: 95 77 00 00 10           a0 = a0 + 0x100000
 10369: 01                       fallthrough
      :                          @521
 10370: 82 78                    a1 = u64 [a0]
 10372: c9 87 09                 a2 = a0 - a1
 10375: ab 69 0f                 jump @525 if a2 != s1
      :                          @522
 10378: c9 58 09                 a2 = a1 - s0
 10381: 01                       fallthrough
      :                          @523
 10382: 82 7a                    a3 = u64 [a0]
 10384: ab 8a f2                 jump @521 if a3 != a1
      :                          @524
 10387: 7b 79                    u64 [a0] = a2
 10389: 01                       fallthrough
      :                          @525
 10390: 95 16 ff 07              s1 = sp + 0x7ff
 10394: 95 66 a1 03              s1 = s1 + 0x3a1
 10398: 82 67 70                 a0 = u64 [s1 + 0x70]
 10401: 33 08 05                 a1 = 0x5
 10404: 50 20 04 01 ed 20        ra = 260, jump @1076
      :                          @526 [@dyn 130]
 10410: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
 10420: 95 1a 58                 a3 = sp + 0x58
 10423: 33 08                    a1 = 0
 10425: 33 09                    a2 = 0
 10427: 33 0b                    a4 = 0
 10429: 0a 05                    ecalli 5 // 'bless'
 10431: 95 18 48                 a1 = sp + 0x48
 10434: 7b 68 18                 u64 [s1 + 0x18] = a1
 10437: 95 18 ff 07              a1 = sp + 0x7ff
 10441: 95 88 19 04              a1 = a1 + 0x419
 10445: 7b 68 28                 u64 [s1 + 0x28] = a1
 10448: 82 18 28                 a1 = u64 [sp + 0x28]
 10451: 7b 68 20                 u64 [s1 + 0x20] = a1
 10454: 7b 68 30                 u64 [s1 + 0x30] = a1
 10457: 33 08 38 0b 01           a1 = 0x10b38
 10462: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10466: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10471: 49 21 c0 01              u64 [sp + 448] = 0
 10475: 95 18 ff 07              a1 = sp + 0x7ff
 10479: 95 88 b9 03              a1 = a1 + 0x3b9
 10483: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10487: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10492: 7b 67 78                 u64 [s1 + 0x78] = a0
 10495: 95 77 04                 a0 = a0 + 0x4
 10498: 88 77 01                 a0 = a0 <u 0x1
 10501: 97 77 01                 a0 = a0 << 0x1
 10504: 7b 17 28                 u64 [sp + 0x28] = a0
 10507: 95 17 ff 07              a0 = sp + 0x7ff
 10511: 95 77 e9 03              a0 = a0 + 0x3e9
 10515: 95 18 a0 01              a1 = sp + 0x1a0
 10519: 50 20 06 01 03 13        ra = 262, jump @798
      :                          @527 [@dyn 131]
 10525: 82 65 50                 s0 = u64 [s1 + 0x50]
 10528: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10531: 82 66 48                 s1 = u64 [s1 + 0x48]
 10534: 82 17 28                 a0 = u64 [sp + 0x28]
 10537: 33 08                    a1 = 0
 10539: 33 09                    a2 = 0
 10541: 64 5a                    a3 = s0
 10543: 33 00 08 01              ra = 0x108
 10547: 0a 64                    ecalli 100 // 'log'
 10549: 01                       fallthrough
      :                          @528 [@dyn 132]
 10550: 82 17 30                 a0 = u64 [sp + 0x30]
 10553: c8 67 07                 a0 = a0 + s1
 10556: 53 37 00 00 f0 25        jump @534 if a0 <u 4293918720
      :                          @529
 10562: 33 07 50 00 03           a0 = 0x30050
 10567: 95 77 00 00 10           a0 = a0 + 0x100000
 10572: 01                       fallthrough
      :                          @530
 10573: 82 78                    a1 = u64 [a0]
 10575: c9 87 09                 a2 = a0 - a1
 10578: ab 59 0f                 jump @534 if a2 != s0
      :                          @531
 10581: c9 68 09                 a2 = a1 - s1
 10584: 01                       fallthrough
      :                          @532
 10585: 82 7a                    a3 = u64 [a0]
 10587: ab 8a f2                 jump @530 if a3 != a1
      :                          @533
 10590: 7b 79                    u64 [a0] = a2
 10592: 01                       fallthrough
      :                          @534
 10593: 95 16 ff 07              s1 = sp + 0x7ff
 10597: 95 66 a1 03              s1 = s1 + 0x3a1
 10601: 82 67 78                 a0 = u64 [s1 + 0x78]
 10604: 33 08 06                 a1 = 0x6
 10607: 50 20 0a 01 22 20        ra = 266, jump @1076
      :                          @535 [@dyn 133]
 10613: 95 18 58                 a1 = sp + 0x58
 10616: 33 09 03                 a2 = 0x3
 10619: 82 17 38                 a0 = u64 [sp + 0x38]
 10622: 0a 1b                    ecalli 27 // 'provide'
 10624: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10628: 88 77 01                 a0 = a0 <u 0x1
 10631: 97 77 01                 a0 = a0 << 0x1
 10634: 7b 17 10                 u64 [sp + 0x10] = a0
 10637: 95 17 ff 07              a0 = sp + 0x7ff
 10641: 95 77 21 04              a0 = a0 + 0x421
 10645: 7b 67 48                 u64 [s1 + 0x48] = a0
 10648: 33 07 16                 a0 = 0x16
 10651: 7b 17 28                 u64 [sp + 0x28] = a0
 10654: 7b 67 50                 u64 [s1 + 0x50] = a0
 10657: 33 07 68 0b 01           a0 = 0x10b68
 10662: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10666: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10671: 49 21 c0 01              u64 [sp + 448] = 0
 10675: 95 17 ff 07              a0 = sp + 0x7ff
 10679: 95 77 e9 03              a0 = a0 + 0x3e9
 10683: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10687: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10692: 95 17 ff 07              a0 = sp + 0x7ff
 10696: 95 77 b9 03              a0 = a0 + 0x3b9
 10700: 95 18 a0 01              a1 = sp + 0x1a0
 10704: 50 20 0c 01 4a 12        ra = 268, jump @798
      :                          @536 [@dyn 134]
 10710: 82 65 20                 s0 = u64 [s1 + 0x20]
 10713: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10716: 82 66 18                 s1 = u64 [s1 + 0x18]
 10719: 82 17 10                 a0 = u64 [sp + 0x10]
 10722: 33 08                    a1 = 0
 10724: 33 09                    a2 = 0
 10726: 64 5a                    a3 = s0
 10728: 33 00 0e 01              ra = 0x10e
 10732: 0a 64                    ecalli 100 // 'log'
 10734: 01                       fallthrough
      :                          @537 [@dyn 135]
 10735: 82 17 30                 a0 = u64 [sp + 0x30]
 10738: c8 67 07                 a0 = a0 + s1
 10741: 53 37 00 00 f0 25        jump @543 if a0 <u 4293918720
      :                          @538
 10747: 33 07 50 00 03           a0 = 0x30050
 10752: 95 77 00 00 10           a0 = a0 + 0x100000
 10757: 01                       fallthrough
      :                          @539
 10758: 82 78                    a1 = u64 [a0]
 10760: c9 87 09                 a2 = a0 - a1
 10763: ab 59 0f                 jump @543 if a2 != s0
      :                          @540
 10766: c9 68 09                 a2 = a1 - s1
 10769: 01                       fallthrough
      :                          @541
 10770: 82 7a                    a3 = u64 [a0]
 10772: ab 8a f2                 jump @539 if a3 != a1
      :                          @542
 10775: 7b 79                    u64 [a0] = a2
 10777: 01                       fallthrough
      :                          @543
 10778: 95 16 ff 07              s1 = sp + 0x7ff
 10782: 95 66 a1 03              s1 = s1 + 0x3a1
 10786: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10790: 33 08 07                 a1 = 0x7
 10793: 50 20 10 01 68 1f        ra = 272, jump @1076
      :                          @544 [@dyn 136]
 10799: 95 18 58                 a1 = sp + 0x58
 10802: 33 09 03                 a2 = 0x3
 10805: 82 17 38                 a0 = u64 [sp + 0x38]
 10808: 0a 1b                    ecalli 27 // 'provide'
 10810: 82 18 28                 a1 = u64 [sp + 0x28]
 10813: 7b 68 50                 u64 [s1 + 0x50] = a1
 10816: 33 08 b0 0b 01           a1 = 0x10bb0
 10821: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10825: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10830: 49 21 c0 01              u64 [sp + 448] = 0
 10834: 95 18 ff 07              a1 = sp + 0x7ff
 10838: 95 88 e9 03              a1 = a1 + 0x3e9
 10842: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10846: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10851: 7b 67                    u64 [s1] = a0
 10853: 95 77 09                 a0 = a0 + 0x9
 10856: 88 77 01                 a0 = a0 <u 0x1
 10859: 97 77 01                 a0 = a0 << 0x1
 10862: 7b 17 28                 u64 [sp + 0x28] = a0
 10865: 7b 66 48                 u64 [s1 + 0x48] = s1
 10868: 95 17 ff 07              a0 = sp + 0x7ff
 10872: 95 77 b9 03              a0 = a0 + 0x3b9
 10876: 95 18 a0 01              a1 = sp + 0x1a0
 10880: 50 20 12 01 9a 11        ra = 274, jump @798
      :                          @545 [@dyn 137]
 10886: 82 65 20                 s0 = u64 [s1 + 0x20]
 10889: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10892: 82 66 18                 s1 = u64 [s1 + 0x18]
 10895: 82 17 28                 a0 = u64 [sp + 0x28]
 10898: 33 08                    a1 = 0
 10900: 33 09                    a2 = 0
 10902: 64 5a                    a3 = s0
 10904: 33 00 14 01              ra = 0x114
 10908: 0a 64                    ecalli 100 // 'log'
 10910: 01                       fallthrough
      :                          @546 [@dyn 138]
 10911: 82 17 30                 a0 = u64 [sp + 0x30]
 10914: c8 67 07                 a0 = a0 + s1
 10917: 53 37 00 00 f0 25        jump @552 if a0 <u 4293918720
      :                          @547
 10923: 33 07 50 00 03           a0 = 0x30050
 10928: 95 77 00 00 10           a0 = a0 + 0x100000
 10933: 01                       fallthrough
      :                          @548
 10934: 82 78                    a1 = u64 [a0]
 10936: c9 87 09                 a2 = a0 - a1
 10939: ab 59 0f                 jump @552 if a2 != s0
      :                          @549
 10942: c9 68 09                 a2 = a1 - s1
 10945: 01                       fallthrough
      :                          @550
 10946: 82 7a                    a3 = u64 [a0]
 10948: ab 8a f2                 jump @548 if a3 != a1
      :                          @551
 10951: 7b 79                    u64 [a0] = a2
 10953: 01                       fallthrough
      :                          @552
 10954: 95 17 ff 07              a0 = sp + 0x7ff
 10958: 95 77 a1 03              a0 = a0 + 0x3a1
 10962: 82 77                    a0 = u64 [a0]
 10964: 33 08 08                 a1 = 0x8
 10967: 33 00 74 01              ra = 0x174
 10971: 28 b6 1e                 jump @1076
      :                          @553 [@dyn 139]
 10974: 33 06 03                 s1 = 0x3
 10977: 95 17 58                 a0 = sp + 0x58
 10980: 33 08 03                 a1 = 0x3
 10983: 0a 0e                    ecalli 14 // 'solicit'
 10985: 95 15 ff 07              s0 = sp + 0x7ff
 10989: 95 55 a1 03              s0 = s0 + 0x3a1
 10993: 7b 57 70                 u64 [s0 + 0x70] = a0
 10996: 33 08 01                 a1 = 0x1
 10999: 50 20 18 01 9a 1e        ra = 280, jump @1076
      :                          @554 [@dyn 140]
 11005: 82 57 70                 a0 = u64 [s0 + 0x70]
 11008: 88 77 01                 a0 = a0 <u 0x1
 11011: 97 77 01                 a0 = a0 << 0x1
 11014: 7b 17 10                 u64 [sp + 0x10] = a0
 11017: 95 17 48                 a0 = sp + 0x48
 11020: 7b 57 18                 u64 [s0 + 0x18] = a0
 11023: 33 08 16                 a1 = 0x16
 11026: 7b 58 20                 u64 [s0 + 0x20] = a1
 11029: 95 17 ff 07              a0 = sp + 0x7ff
 11033: 95 77 11 04              a0 = a0 + 0x411
 11037: 7b 57 28                 u64 [s0 + 0x28] = a0
 11040: 7b 18 28                 u64 [sp + 0x28] = a1
 11043: 7b 58 30                 u64 [s0 + 0x30] = a1
 11046: 33 07 f8 07 01           a0 = 0x107f8
 11051: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11055: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 11059: 49 21 c0 01              u64 [sp + 448] = 0
 11063: 95 17 ff 07              a0 = sp + 0x7ff
 11067: 95 77 b9 03              a0 = a0 + 0x3b9
 11071: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11075: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11080: 95 17 ff 07              a0 = sp + 0x7ff
 11084: 95 77 e9 03              a0 = a0 + 0x3e9
 11088: 95 18 a0 01              a1 = sp + 0x1a0
 11092: 50 20 1a 01 c6 10        ra = 282, jump @798
      :                          @555 [@dyn 141]
 11098: 82 56 50                 s1 = u64 [s0 + 0x50]
 11101: 82 5b 58                 a4 = u64 [s0 + 0x58]
 11104: 82 55 48                 s0 = u64 [s0 + 0x48]
 11107: 82 17 10                 a0 = u64 [sp + 0x10]
 11110: 33 08                    a1 = 0
 11112: 33 09                    a2 = 0
 11114: 64 6a                    a3 = s1
 11116: 33 00 1c 01              ra = 0x11c
 11120: 0a 64                    ecalli 100 // 'log'
 11122: 01                       fallthrough
      :                          @556 [@dyn 142]
 11123: 82 17 30                 a0 = u64 [sp + 0x30]
 11126: c8 57 07                 a0 = a0 + s0
 11129: 53 37 00 00 f0 25        jump @562 if a0 <u 4293918720
      :                          @557
 11135: 33 07 50 00 03           a0 = 0x30050
 11140: 95 77 00 00 10           a0 = a0 + 0x100000
 11145: 01                       fallthrough
      :                          @558
 11146: 82 78                    a1 = u64 [a0]
 11148: c9 87 09                 a2 = a0 - a1
 11151: ab 69 0f                 jump @562 if a2 != s1
      :                          @559
 11154: c9 58 09                 a2 = a1 - s0
 11157: 01                       fallthrough
      :                          @560
 11158: 82 7a                    a3 = u64 [a0]
 11160: ab 8a f2                 jump @558 if a3 != a1
      :                          @561
 11163: 7b 79                    u64 [a0] = a2
 11165: 01                       fallthrough
      :                          @562
 11166: 95 17 58                 a0 = sp + 0x58
 11169: 33 08 03                 a1 = 0x3
 11172: 0a 0d                    ecalli 13 // 'query'
 11174: 95 19 ff 07              a2 = sp + 0x7ff
 11178: 95 99 a1 03              a2 = a2 + 0x3a1
 11182: 95 18 48                 a1 = sp + 0x48
 11185: 7b 98 18                 u64 [a2 + 0x18] = a1
 11188: 95 18 ff 07              a1 = sp + 0x7ff
 11192: 95 88 19 04              a1 = a1 + 0x419
 11196: 7b 98 28                 u64 [a2 + 0x28] = a1
 11199: 82 18 28                 a1 = u64 [sp + 0x28]
 11202: 7b 98 20                 u64 [a2 + 0x20] = a1
 11205: 7b 98 30                 u64 [a2 + 0x30] = a1
 11208: 95 19 ff 07              a2 = sp + 0x7ff
 11212: 95 99 a1 03              a2 = a2 + 0x3a1
 11216: 33 08 e8 0b 01           a1 = 0x10be8
 11221: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11225: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11230: 49 21 c0 01              u64 [sp + 448] = 0
 11234: 95 18 ff 07              a1 = sp + 0x7ff
 11238: 95 88 b9 03              a1 = a1 + 0x3b9
 11242: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11246: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11251: 7b 97 78                 u64 [a2 + 0x78] = a0
 11254: 8e 77                    a0 = a0 >u 0
 11256: 97 77 01                 a0 = a0 << 0x1
 11259: 7b 17 28                 u64 [sp + 0x28] = a0
 11262: 95 17 ff 07              a0 = sp + 0x7ff
 11266: 95 77 e9 03              a0 = a0 + 0x3e9
 11270: 95 18 a0 01              a1 = sp + 0x1a0
 11274: 95 15 a0 01              s0 = sp + 0x1a0
 11278: 50 20 1e 01 0c 10        ra = 286, jump @798
      :                          @563 [@dyn 143]
 11284: 95 17 ff 07              a0 = sp + 0x7ff
 11288: 95 77 a1 03              a0 = a0 + 0x3a1
 11292: 82 76 50                 s1 = u64 [a0 + 0x50]
 11295: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11298: 82 77 48                 a0 = u64 [a0 + 0x48]
 11301: 7b 17 10                 u64 [sp + 0x10] = a0
 11304: 82 17 28                 a0 = u64 [sp + 0x28]
 11307: 33 08                    a1 = 0
 11309: 33 09                    a2 = 0
 11311: 64 6a                    a3 = s1
 11313: 33 00 20 01              ra = 0x120
 11317: 0a 64                    ecalli 100 // 'log'
 11319: 01                       fallthrough
      :                          @564 [@dyn 144]
 11320: 82 1c 10                 a5 = u64 [sp + 0x10]
 11323: 82 17 30                 a0 = u64 [sp + 0x30]
 11326: c8 c7 07                 a0 = a0 + a5
 11329: 53 37 00 00 f0 25        jump @570 if a0 <u 4293918720
      :                          @565
 11335: 33 07 50 00 03           a0 = 0x30050
 11340: 95 77 00 00 10           a0 = a0 + 0x100000
 11345: 01                       fallthrough
      :                          @566
 11346: 82 78                    a1 = u64 [a0]
 11348: c9 87 09                 a2 = a0 - a1
 11351: ab 69 0f                 jump @570 if a2 != s1
      :                          @567
 11354: c9 c8 09                 a2 = a1 - a5
 11357: 01                       fallthrough
      :                          @568
 11358: 82 7a                    a3 = u64 [a0]
 11360: ab 8a f2                 jump @566 if a3 != a1
      :                          @569
 11363: 7b 79                    u64 [a0] = a2
 11365: 01                       fallthrough
      :                          @570
 11366: 95 17 ff 07              a0 = sp + 0x7ff
 11370: 95 77 a1 03              a0 = a0 + 0x3a1
 11374: 82 77 78                 a0 = u64 [a0 + 0x78]
 11377: 33 08 02                 a1 = 0x2
 11380: 50 20 22 01 1d 1d        ra = 290, jump @1076
      :                          @571 [@dyn 145]
 11386: 33 09 00 0a              a2 = 0xa00
 11390: 95 17 a0 01              a0 = sp + 0x1a0
 11394: 33 08                    a1 = 0
 11396: 50 20 24 01 c3 12        ra = 292, jump @865
      :                          @572 [@dyn 146]
 11402: 33 06 50                 s1 = 0x50
 11405: 01                       fallthrough
      :                          @573
 11406: 95 18 58                 a1 = sp + 0x58
 11409: 33 09 20                 a2 = 0x20
 11412: 64 57                    a0 = s0
 11414: 50 20 26 01 ff 11        ra = 294, jump @847
      :                          @574 [@dyn 147]
 11420: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 11423: 95 55 20                 s0 = s0 + 0x20
 11426: 52 06 ec                 jump @573 if s1 != 0
      :                          @575
 11429: 95 18 a0 01              a1 = sp + 0x1a0
 11433: 33 07                    a0 = 0
 11435: 0a 06                    ecalli 6 // 'assign'
 11437: 95 15 ff 07              s0 = sp + 0x7ff
 11441: 95 55 a1 03              s0 = s0 + 0x3a1
 11445: 7b 57 80 00              u64 [s0 + 0x80] = a0
 11449: 88 77 01                 a0 = a0 <u 0x1
 11452: 97 77 01                 a0 = a0 << 0x1
 11455: 7b 17 28                 u64 [sp + 0x28] = a0
 11458: 95 17 48                 a0 = sp + 0x48
 11461: 7b 57 48                 u64 [s0 + 0x48] = a0
 11464: 33 07 16                 a0 = 0x16
 11467: 7b 57 50                 u64 [s0 + 0x50] = a0
 11470: 95 18 ff 07              a1 = sp + 0x7ff
 11474: 95 88 21 04              a1 = a1 + 0x421
 11478: 7b 58 58                 u64 [s0 + 0x58] = a1
 11481: 7b 57 60                 u64 [s0 + 0x60] = a0
 11484: 33 07 28 0c 01           a0 = 0x10c28
 11489: 7b 57 18                 u64 [s0 + 0x18] = a0
 11492: 49 15 20 03              u64 [s0 + 32] = 0x3
 11496: 49 15 38                 u64 [s0 + 56] = 0
 11499: 95 17 ff 07              a0 = sp + 0x7ff
 11503: 95 77 e9 03              a0 = a0 + 0x3e9
 11507: 7b 57 28                 u64 [s0 + 0x28] = a0
 11510: 49 15 30 02              u64 [s0 + 48] = 0x2
 11514: 95 17 ff 07              a0 = sp + 0x7ff
 11518: 95 77 a1 03              a0 = a0 + 0x3a1
 11522: 95 18 ff 07              a1 = sp + 0x7ff
 11526: 95 88 b9 03              a1 = a1 + 0x3b9
 11530: 50 20 28 01 10 0f        ra = 296, jump @798
      :                          @576 [@dyn 148]
 11536: 82 56 08                 s1 = u64 [s0 + 0x8]
 11539: 82 5b 10                 a4 = u64 [s0 + 0x10]
 11542: 82 55                    s0 = u64 [s0]
 11544: 82 17 28                 a0 = u64 [sp + 0x28]
 11547: 33 08                    a1 = 0
 11549: 33 09                    a2 = 0
 11551: 64 6a                    a3 = s1
 11553: 33 00 2a 01              ra = 0x12a
 11557: 0a 64                    ecalli 100 // 'log'
 11559: 01                       fallthrough
      :                          @577 [@dyn 149]
 11560: 82 17 30                 a0 = u64 [sp + 0x30]
 11563: c8 57 07                 a0 = a0 + s0
 11566: 53 37 00 00 f0 79 05     jump @648 if a0 <u 4293918720
      :                          @578
 11573: 33 07 50 00 03           a0 = 0x30050
 11578: 95 77 00 00 10           a0 = a0 + 0x100000
 11583: 01                       fallthrough
      :                          @579
 11584: 82 78                    a1 = u64 [a0]
 11586: c9 87 09                 a2 = a0 - a1
 11589: ab 69 62 05              jump @648 if a2 != s1
      :                          @580
 11593: c9 58 09                 a2 = a1 - s0
 11596: 01                       fallthrough
      :                          @581
 11597: 82 7a                    a3 = u64 [a0]
 11599: ab 8a f1                 jump @579 if a3 != a1
      :                          @582
 11602: 7b 79                    u64 [a0] = a2
 11604: 33 0b                    a4 = 0
 11606: 01                       fallthrough
      :                          @583
 11607: ab 8a e9                 jump @579 if a3 != a1
      :                          @584
 11610: 28 4d 05                 jump @648
      :                          @585 [@dyn 150]
 11613: 33 06 03                 s1 = 0x3
 11616: 95 18 58                 a1 = sp + 0x58
 11619: 95 19 98 00              a2 = sp + 0x98
 11623: 33 0b 03                 a4 = 0x3
 11626: 82 17 38                 a0 = u64 [sp + 0x38]
 11629: 33 0a                    a3 = 0
 11631: 0a 01                    ecalli 1 // 'lookup'
 11633: 95 15 ff 07              s0 = sp + 0x7ff
 11637: 95 55 a1 03              s0 = s0 + 0x3a1
 11641: 7b 57 80 00              u64 [s0 + 0x80] = a0
 11645: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 11648: 88 77 01                 a0 = a0 <u 0x1
 11651: 97 77 01                 a0 = a0 << 0x1
 11654: 7b 17 10                 u64 [sp + 0x10] = a0
 11657: 95 17 48                 a0 = sp + 0x48
 11660: 7b 57 18                 u64 [s0 + 0x18] = a0
 11663: 33 08 16                 a1 = 0x16
 11666: 7b 58 20                 u64 [s0 + 0x20] = a1
 11669: 95 17 ff 07              a0 = sp + 0x7ff
 11673: 95 77 21 04              a0 = a0 + 0x421
 11677: 7b 57 28                 u64 [s0 + 0x28] = a0
 11680: 7b 18 28                 u64 [sp + 0x28] = a1
 11683: 7b 58 30                 u64 [s0 + 0x30] = a1
 11686: 33 07 70 0c 01           a0 = 0x10c70
 11691: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11695: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 11699: 49 21 c0 01              u64 [sp + 448] = 0
 11703: 95 17 ff 07              a0 = sp + 0x7ff
 11707: 95 77 b9 03              a0 = a0 + 0x3b9
 11711: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11715: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11720: 95 17 ff 07              a0 = sp + 0x7ff
 11724: 95 77 e9 03              a0 = a0 + 0x3e9
 11728: 95 18 a0 01              a1 = sp + 0x1a0
 11732: 50 20 2e 01 46 0e        ra = 302, jump @798
      :                          @586 [@dyn 151]
 11738: 82 56 50                 s1 = u64 [s0 + 0x50]
 11741: 82 5b 58                 a4 = u64 [s0 + 0x58]
 11744: 82 55 48                 s0 = u64 [s0 + 0x48]
 11747: 82 17 10                 a0 = u64 [sp + 0x10]
 11750: 33 08                    a1 = 0
 11752: 33 09                    a2 = 0
 11754: 64 6a                    a3 = s1
 11756: 33 00 30 01              ra = 0x130
 11760: 0a 64                    ecalli 100 // 'log'
 11762: 01                       fallthrough
      :                          @587 [@dyn 152]
 11763: 82 17 30                 a0 = u64 [sp + 0x30]
 11766: c8 57 07                 a0 = a0 + s0
 11769: 53 37 00 00 f0 25        jump @593 if a0 <u 4293918720
      :                          @588
 11775: 33 07 50 00 03           a0 = 0x30050
 11780: 95 77 00 00 10           a0 = a0 + 0x100000
 11785: 01                       fallthrough
      :                          @589
 11786: 82 78                    a1 = u64 [a0]
 11788: c9 87 09                 a2 = a0 - a1
 11791: ab 69 0f                 jump @593 if a2 != s1
      :                          @590
 11794: c9 58 09                 a2 = a1 - s0
 11797: 01                       fallthrough
      :                          @591
 11798: 82 7a                    a3 = u64 [a0]
 11800: ab 8a f2                 jump @589 if a3 != a1
      :                          @592
 11803: 7b 79                    u64 [a0] = a2
 11805: 01                       fallthrough
      :                          @593
 11806: 95 16 ff 07              s1 = sp + 0x7ff
 11810: 95 66 a1 03              s1 = s1 + 0x3a1
 11814: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11818: 33 08 01                 a1 = 0x1
 11821: 50 20 32 01 64 1b        ra = 306, jump @1076
      :                          @594 [@dyn 153]
 11827: 95 17 58                 a0 = sp + 0x58
 11830: 33 08 03                 a1 = 0x3
 11833: 0a 0d                    ecalli 13 // 'query'
 11835: 95 18 48                 a1 = sp + 0x48
 11838: 7b 68 18                 u64 [s1 + 0x18] = a1
 11841: 82 18 28                 a1 = u64 [sp + 0x28]
 11844: 7b 68 20                 u64 [s1 + 0x20] = a1
 11847: 7b 68 30                 u64 [s1 + 0x30] = a1
 11850: 33 08 30 09 01           a1 = 0x10930
 11855: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11859: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11864: 49 21 c0 01              u64 [sp + 448] = 0
 11868: 95 18 ff 07              a1 = sp + 0x7ff
 11872: 95 88 b9 03              a1 = a1 + 0x3b9
 11876: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11880: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11885: 7b 67                    u64 [s1] = a0
 11887: 8e 77                    a0 = a0 >u 0
 11889: 97 77 01                 a0 = a0 << 0x1
 11892: 7b 17 28                 u64 [sp + 0x28] = a0
 11895: 7b 66 28                 u64 [s1 + 0x28] = s1
 11898: 95 17 ff 07              a0 = sp + 0x7ff
 11902: 95 77 e9 03              a0 = a0 + 0x3e9
 11906: 95 18 a0 01              a1 = sp + 0x1a0
 11910: 50 20 34 01 94 0d        ra = 308, jump @798
      :                          @595 [@dyn 154]
 11916: 82 65 50                 s0 = u64 [s1 + 0x50]
 11919: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11922: 82 66 48                 s1 = u64 [s1 + 0x48]
 11925: 82 17 28                 a0 = u64 [sp + 0x28]
 11928: 33 08                    a1 = 0
 11930: 33 09                    a2 = 0
 11932: 64 5a                    a3 = s0
 11934: 33 00 36 01              ra = 0x136
 11938: 0a 64                    ecalli 100 // 'log'
 11940: 01                       fallthrough
      :                          @596 [@dyn 155]
 11941: 82 17 30                 a0 = u64 [sp + 0x30]
 11944: c8 67 07                 a0 = a0 + s1
 11947: 53 37 00 00 f0 96 01     jump @621 if a0 <u 4293918720
      :                          @597
 11954: 33 07 50 00 03           a0 = 0x30050
 11959: 95 77 00 00 10           a0 = a0 + 0x100000
 11964: 01                       fallthrough
      :                          @598
 11965: 82 78                    a1 = u64 [a0]
 11967: c9 87 09                 a2 = a0 - a1
 11970: ab 59 7f 01              jump @621 if a2 != s0
      :                          @599
 11974: c9 68 09                 a2 = a1 - s1
 11977: 01                       fallthrough
      :                          @600
 11978: 82 7a                    a3 = u64 [a0]
 11980: ab 8a f1                 jump @598 if a3 != a1
      :                          @601
 11983: 7b 79                    u64 [a0] = a2
 11985: 33 0b                    a4 = 0
 11987: 01                       fallthrough
      :                          @602
 11988: ab 8a e9                 jump @598 if a3 != a1
      :                          @603
 11991: 28 6a 01                 jump @621
      :                          @604 [@dyn 156]
 11994: 33 06 03                 s1 = 0x3
 11997: 95 17 58                 a0 = sp + 0x58
 12000: 33 08 03                 a1 = 0x3
 12003: 0a 0f                    ecalli 15 // 'forget'
 12005: 95 15 ff 07              s0 = sp + 0x7ff
 12009: 95 55 a1 03              s0 = s0 + 0x3a1
 12013: 7b 57 80 00              u64 [s0 + 0x80] = a0
 12017: 88 77 01                 a0 = a0 <u 0x1
 12020: 97 77 01                 a0 = a0 << 0x1
 12023: 7b 17 10                 u64 [sp + 0x10] = a0
 12026: 95 17 48                 a0 = sp + 0x48
 12029: 7b 57 18                 u64 [s0 + 0x18] = a0
 12032: 33 08 16                 a1 = 0x16
 12035: 7b 58 20                 u64 [s0 + 0x20] = a1
 12038: 95 17 ff 07              a0 = sp + 0x7ff
 12042: 95 77 21 04              a0 = a0 + 0x421
 12046: 7b 57 28                 u64 [s0 + 0x28] = a0
 12049: 7b 18 28                 u64 [sp + 0x28] = a1
 12052: 7b 58 30                 u64 [s0 + 0x30] = a1
 12055: 33 07 e8 08 01           a0 = 0x108e8
 12060: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12064: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 12068: 49 21 c0 01              u64 [sp + 448] = 0
 12072: 95 17 ff 07              a0 = sp + 0x7ff
 12076: 95 77 b9 03              a0 = a0 + 0x3b9
 12080: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12084: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12089: 95 17 ff 07              a0 = sp + 0x7ff
 12093: 95 77 e9 03              a0 = a0 + 0x3e9
 12097: 95 18 a0 01              a1 = sp + 0x1a0
 12101: 50 20 3a 01 d5 0c        ra = 314, jump @798
      :                          @605 [@dyn 157]
 12107: 82 56 50                 s1 = u64 [s0 + 0x50]
 12110: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12113: 82 55 48                 s0 = u64 [s0 + 0x48]
 12116: 82 17 10                 a0 = u64 [sp + 0x10]
 12119: 33 08                    a1 = 0
 12121: 33 09                    a2 = 0
 12123: 64 6a                    a3 = s1
 12125: 33 00 3c 01              ra = 0x13c
 12129: 0a 64                    ecalli 100 // 'log'
 12131: 01                       fallthrough
      :                          @606 [@dyn 158]
 12132: 82 17 30                 a0 = u64 [sp + 0x30]
 12135: c8 57 07                 a0 = a0 + s0
 12138: 53 37 00 00 f0 25        jump @612 if a0 <u 4293918720
      :                          @607
 12144: 33 07 50 00 03           a0 = 0x30050
 12149: 95 77 00 00 10           a0 = a0 + 0x100000
 12154: 01                       fallthrough
      :                          @608
 12155: 82 78                    a1 = u64 [a0]
 12157: c9 87 09                 a2 = a0 - a1
 12160: ab 69 0f                 jump @612 if a2 != s1
      :                          @609
 12163: c9 58 09                 a2 = a1 - s0
 12166: 01                       fallthrough
      :                          @610
 12167: 82 7a                    a3 = u64 [a0]
 12169: ab 8a f2                 jump @608 if a3 != a1
      :                          @611
 12172: 7b 79                    u64 [a0] = a2
 12174: 01                       fallthrough
      :                          @612
 12175: 95 16 ff 07              s1 = sp + 0x7ff
 12179: 95 66 a1 03              s1 = s1 + 0x3a1
 12183: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12187: 33 08 01                 a1 = 0x1
 12190: 50 20 3e 01 f3 19        ra = 318, jump @1076
      :                          @613 [@dyn 159]
 12196: 95 17 58                 a0 = sp + 0x58
 12199: 33 08 03                 a1 = 0x3
 12202: 0a 0d                    ecalli 13 // 'query'
 12204: 95 18 48                 a1 = sp + 0x48
 12207: 7b 68 18                 u64 [s1 + 0x18] = a1
 12210: 82 18 28                 a1 = u64 [sp + 0x28]
 12213: 7b 68 20                 u64 [s1 + 0x20] = a1
 12216: 7b 68 30                 u64 [s1 + 0x30] = a1
 12219: 33 08 a0 0c 01           a1 = 0x10ca0
 12224: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12228: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12233: 49 21 c0 01              u64 [sp + 448] = 0
 12237: 95 18 ff 07              a1 = sp + 0x7ff
 12241: 95 88 b9 03              a1 = a1 + 0x3b9
 12245: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12249: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12254: 7b 67                    u64 [s1] = a0
 12256: 8e 77                    a0 = a0 >u 0
 12258: 97 77 01                 a0 = a0 << 0x1
 12261: 7b 17 28                 u64 [sp + 0x28] = a0
 12264: 7b 66 28                 u64 [s1 + 0x28] = s1
 12267: 95 17 ff 07              a0 = sp + 0x7ff
 12271: 95 77 e9 03              a0 = a0 + 0x3e9
 12275: 95 18 a0 01              a1 = sp + 0x1a0
 12279: 50 20 40 01 23 0c        ra = 320, jump @798
      :                          @614 [@dyn 160]
 12285: 82 65 50                 s0 = u64 [s1 + 0x50]
 12288: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12291: 82 66 48                 s1 = u64 [s1 + 0x48]
 12294: 82 17 28                 a0 = u64 [sp + 0x28]
 12297: 33 08                    a1 = 0
 12299: 33 09                    a2 = 0
 12301: 64 5a                    a3 = s0
 12303: 33 00 42 01              ra = 0x142
 12307: 0a 64                    ecalli 100 // 'log'
 12309: 01                       fallthrough
      :                          @615 [@dyn 161]
 12310: 82 17 30                 a0 = u64 [sp + 0x30]
 12313: c8 67 07                 a0 = a0 + s1
 12316: 53 37 00 00 f0 25        jump @621 if a0 <u 4293918720
      :                          @616
 12322: 33 07 50 00 03           a0 = 0x30050
 12327: 95 77 00 00 10           a0 = a0 + 0x100000
 12332: 01                       fallthrough
      :                          @617
 12333: 82 78                    a1 = u64 [a0]
 12335: c9 87 09                 a2 = a0 - a1
 12338: ab 59 0f                 jump @621 if a2 != s0
      :                          @618
 12341: c9 68 09                 a2 = a1 - s1
 12344: 01                       fallthrough
      :                          @619
 12345: 82 7a                    a3 = u64 [a0]
 12347: ab 8a f2                 jump @617 if a3 != a1
      :                          @620
 12350: 7b 79                    u64 [a0] = a2
 12352: 01                       fallthrough
      :                          @621
 12353: 95 17 ff 07              a0 = sp + 0x7ff
 12357: 95 77 a1 03              a0 = a0 + 0x3a1
 12361: 82 77                    a0 = u64 [a0]
 12363: 33 08 02                 a1 = 0x2
 12366: 33 00 74 01              ra = 0x174
 12370: 28 3f 19                 jump @1076
      :                          @622 [@dyn 162]
 12373: 33 06 03                 s1 = 0x3
 12376: 95 17 58                 a0 = sp + 0x58
 12379: 33 08 03                 a1 = 0x3
 12382: 33 09 8f 03              a2 = 0x38f
 12386: 33 0a 8f 03              a3 = 0x38f
 12390: 0a 09                    ecalli 9 // 'new'
 12392: 8e 78                    a1 = a0 >u 0
 12394: 95 15 ff 07              s0 = sp + 0x7ff
 12398: 95 55 a1 03              s0 = s0 + 0x3a1
 12402: 7b 57 70                 u64 [s0 + 0x70] = a0
 12405: 97 88 01                 a1 = a1 << 0x1
 12408: 7b 18 10                 u64 [sp + 0x10] = a1
 12411: 95 17 48                 a0 = sp + 0x48
 12414: 7b 57 18                 u64 [s0 + 0x18] = a0
 12417: 33 08 16                 a1 = 0x16
 12420: 7b 58 20                 u64 [s0 + 0x20] = a1
 12423: 95 17 ff 07              a0 = sp + 0x7ff
 12427: 95 77 11 04              a0 = a0 + 0x411
 12431: 7b 57 28                 u64 [s0 + 0x28] = a0
 12434: 7b 18 28                 u64 [sp + 0x28] = a1
 12437: 7b 58 30                 u64 [s0 + 0x30] = a1
 12440: 33 07 f8 0c 01           a0 = 0x10cf8
 12445: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12449: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 12453: 49 21 c0 01              u64 [sp + 448] = 0
 12457: 95 17 ff 07              a0 = sp + 0x7ff
 12461: 95 77 b9 03              a0 = a0 + 0x3b9
 12465: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12469: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12474: 95 17 ff 07              a0 = sp + 0x7ff
 12478: 95 77 e9 03              a0 = a0 + 0x3e9
 12482: 95 18 a0 01              a1 = sp + 0x1a0
 12486: 50 20 46 01 54 0b        ra = 326, jump @798
      :                          @623 [@dyn 163]
 12492: 82 56 50                 s1 = u64 [s0 + 0x50]
 12495: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12498: 82 55 48                 s0 = u64 [s0 + 0x48]
 12501: 82 17 10                 a0 = u64 [sp + 0x10]
 12504: 33 08                    a1 = 0
 12506: 33 09                    a2 = 0
 12508: 64 6a                    a3 = s1
 12510: 33 00 48 01              ra = 0x148
 12514: 0a 64                    ecalli 100 // 'log'
 12516: 01                       fallthrough
      :                          @624 [@dyn 164]
 12517: 82 17 30                 a0 = u64 [sp + 0x30]
 12520: c8 57 07                 a0 = a0 + s0
 12523: 53 37 00 00 f0 25        jump @630 if a0 <u 4293918720
      :                          @625
 12529: 33 07 50 00 03           a0 = 0x30050
 12534: 95 77 00 00 10           a0 = a0 + 0x100000
 12539: 01                       fallthrough
      :                          @626
 12540: 82 78                    a1 = u64 [a0]
 12542: c9 87 09                 a2 = a0 - a1
 12545: ab 69 0f                 jump @630 if a2 != s1
      :                          @627
 12548: c9 58 09                 a2 = a1 - s0
 12551: 01                       fallthrough
      :                          @628
 12552: 82 7a                    a3 = u64 [a0]
 12554: ab 8a f2                 jump @626 if a3 != a1
      :                          @629
 12557: 7b 79                    u64 [a0] = a2
 12559: 01                       fallthrough
      :                          @630
 12560: 95 16 ff 07              s1 = sp + 0x7ff
 12564: 95 66 a1 03              s1 = s1 + 0x3a1
 12568: 82 67 70                 a0 = u64 [s1 + 0x70]
 12571: 33 08 01                 a1 = 0x1
 12574: 50 20 4a 01 73 18        ra = 330, jump @1076
      :                          @631 [@dyn 165]
 12580: 95 17 58                 a0 = sp + 0x58
 12583: 33 08 8f 03              a1 = 0x38f
 12587: 33 09 8f 03              a2 = 0x38f
 12591: 0a 0a                    ecalli 10 // 'upgrade'
 12593: 95 18 48                 a1 = sp + 0x48
 12596: 7b 68 18                 u64 [s1 + 0x18] = a1
 12599: 95 18 ff 07              a1 = sp + 0x7ff
 12603: 95 88 19 04              a1 = a1 + 0x419
 12607: 7b 68 28                 u64 [s1 + 0x28] = a1
 12610: 82 18 28                 a1 = u64 [sp + 0x28]
 12613: 7b 68 20                 u64 [s1 + 0x20] = a1
 12616: 7b 68 30                 u64 [s1 + 0x30] = a1
 12619: 33 08 38 0d 01           a1 = 0x10d38
 12624: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12628: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12633: 49 21 c0 01              u64 [sp + 448] = 0
 12637: 95 18 ff 07              a1 = sp + 0x7ff
 12641: 95 88 b9 03              a1 = a1 + 0x3b9
 12645: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12649: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12654: 7b 67 78                 u64 [s1 + 0x78] = a0
 12657: 88 77 01                 a0 = a0 <u 0x1
 12660: 97 77 01                 a0 = a0 << 0x1
 12663: 7b 17 28                 u64 [sp + 0x28] = a0
 12666: 95 17 ff 07              a0 = sp + 0x7ff
 12670: 95 77 e9 03              a0 = a0 + 0x3e9
 12674: 95 18 a0 01              a1 = sp + 0x1a0
 12678: 50 20 4c 01 94 0a        ra = 332, jump @798
      :                          @632 [@dyn 166]
 12684: 82 65 50                 s0 = u64 [s1 + 0x50]
 12687: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12690: 82 66 48                 s1 = u64 [s1 + 0x48]
 12693: 82 17 28                 a0 = u64 [sp + 0x28]
 12696: 33 08                    a1 = 0
 12698: 33 09                    a2 = 0
 12700: 64 5a                    a3 = s0
 12702: 33 00 4e 01              ra = 0x14e
 12706: 0a 64                    ecalli 100 // 'log'
 12708: 01                       fallthrough
      :                          @633 [@dyn 167]
 12709: 82 17 30                 a0 = u64 [sp + 0x30]
 12712: c8 67 07                 a0 = a0 + s1
 12715: 53 37 00 00 f0 25        jump @639 if a0 <u 4293918720
      :                          @634
 12721: 33 07 50 00 03           a0 = 0x30050
 12726: 95 77 00 00 10           a0 = a0 + 0x100000
 12731: 01                       fallthrough
      :                          @635
 12732: 82 78                    a1 = u64 [a0]
 12734: c9 87 09                 a2 = a0 - a1
 12737: ab 59 0f                 jump @639 if a2 != s0
      :                          @636
 12740: c9 68 09                 a2 = a1 - s1
 12743: 01                       fallthrough
      :                          @637
 12744: 82 7a                    a3 = u64 [a0]
 12746: ab 8a f2                 jump @635 if a3 != a1
      :                          @638
 12749: 7b 79                    u64 [a0] = a2
 12751: 01                       fallthrough
      :                          @639
 12752: 95 15 ff 07              s0 = sp + 0x7ff
 12756: 95 55 a1 03              s0 = s0 + 0x3a1
 12760: 82 57 78                 a0 = u64 [s0 + 0x78]
 12763: 33 08 02                 a1 = 0x2
 12766: 33 06 02                 s1 = 0x2
 12769: 50 20 50 01 b0 17        ra = 336, jump @1076
      :                          @640 [@dyn 168]
 12775: 48 05 8f 03              u32 [s0 + 0] = 0x38f
 12779: 48 15 08                 u32 [s0 + 8] = 0
 12782: 48 15 04 8f 03           u32 [s0 + 4] = 0x38f
 12787: 33 08 01                 a1 = 0x1
 12790: 33 09 01                 a2 = 0x1
 12793: 95 1a ff 07              a3 = sp + 0x7ff
 12797: 95 aa a1 03              a3 = a3 + 0x3a1
 12801: 33 0b 01                 a4 = 0x1
 12804: 33 07                    a0 = 0
 12806: 0a 05                    ecalli 5 // 'bless'
 12808: 7b 57 80 00              u64 [s0 + 0x80] = a0
 12812: 88 77 01                 a0 = a0 <u 0x1
 12815: 97 77 01                 a0 = a0 << 0x1
 12818: 7b 17 28                 u64 [sp + 0x28] = a0
 12821: 95 17 48                 a0 = sp + 0x48
 12824: 7b 57 18                 u64 [s0 + 0x18] = a0
 12827: 33 07 16                 a0 = 0x16
 12830: 7b 57 20                 u64 [s0 + 0x20] = a0
 12833: 95 18 ff 07              a1 = sp + 0x7ff
 12837: 95 88 21 04              a1 = a1 + 0x421
 12841: 7b 58 28                 u64 [s0 + 0x28] = a1
 12844: 7b 57 30                 u64 [s0 + 0x30] = a0
 12847: 33 07 78 0d 01           a0 = 0x10d78
 12852: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12856: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12861: 49 21 c0 01              u64 [sp + 448] = 0
 12865: 95 17 ff 07              a0 = sp + 0x7ff
 12869: 95 77 b9 03              a0 = a0 + 0x3b9
 12873: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12877: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 12881: 95 17 ff 07              a0 = sp + 0x7ff
 12885: 95 77 e9 03              a0 = a0 + 0x3e9
 12889: 95 18 a0 01              a1 = sp + 0x1a0
 12893: 50 20 52 01 bd 09        ra = 338, jump @798
      :                          @641 [@dyn 169]
 12899: 82 56 50                 s1 = u64 [s0 + 0x50]
 12902: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12905: 82 55 48                 s0 = u64 [s0 + 0x48]
 12908: 82 17 28                 a0 = u64 [sp + 0x28]
 12911: 33 08                    a1 = 0
 12913: 33 09                    a2 = 0
 12915: 64 6a                    a3 = s1
 12917: 33 00 54 01              ra = 0x154
 12921: 0a 64                    ecalli 100 // 'log'
 12923: 01                       fallthrough
      :                          @642 [@dyn 170]
 12924: 82 17 30                 a0 = u64 [sp + 0x30]
 12927: c8 57 07                 a0 = a0 + s0
 12930: 53 37 00 00 f0 25        jump @648 if a0 <u 4293918720
      :                          @643
 12936: 33 07 50 00 03           a0 = 0x30050
 12941: 95 77 00 00 10           a0 = a0 + 0x100000
 12946: 01                       fallthrough
      :                          @644
 12947: 82 78                    a1 = u64 [a0]
 12949: c9 87 09                 a2 = a0 - a1
 12952: ab 69 0f                 jump @648 if a2 != s1
      :                          @645
 12955: c9 58 09                 a2 = a1 - s0
 12958: 01                       fallthrough
      :                          @646
 12959: 82 7a                    a3 = u64 [a0]
 12961: ab 8a f2                 jump @644 if a3 != a1
      :                          @647
 12964: 7b 79                    u64 [a0] = a2
 12966: 01                       fallthrough
      :                          @648
 12967: 95 17 ff 07              a0 = sp + 0x7ff
 12971: 95 77 a1 03              a0 = a0 + 0x3a1
 12975: 82 77 80 00              a0 = u64 [a0 + 0x80]
 12979: 33 08 05                 a1 = 0x5
 12982: 33 00 74 01              ra = 0x174
 12986: 28 d7 16                 jump @1076
      :                          @649 [@dyn 171]
 12989: 33 06 03                 s1 = 0x3
 12992: 95 17 55                 a0 = sp + 0x55
 12995: 33 08 03                 a1 = 0x3
 12998: 33 09                    a2 = 0
 13000: 33 0a                    a3 = 0
 13002: 0a 03                    ecalli 3 // 'write'
 13004: 95 15 ff 07              s0 = sp + 0x7ff
 13008: 95 55 a1 03              s0 = s0 + 0x3a1
 13012: 7b 57 68                 u64 [s0 + 0x68] = a0
 13015: 95 77 01                 a0 = a0 + 0x1
 13018: 88 77 01                 a0 = a0 <u 0x1
 13021: 97 77 01                 a0 = a0 << 0x1
 13024: 7b 17 10                 u64 [sp + 0x10] = a0
 13027: 95 17 48                 a0 = sp + 0x48
 13030: 7b 57 18                 u64 [s0 + 0x18] = a0
 13033: 33 08 16                 a1 = 0x16
 13036: 7b 58 20                 u64 [s0 + 0x20] = a1
 13039: 95 17 ff 07              a0 = sp + 0x7ff
 13043: 95 77 09 04              a0 = a0 + 0x409
 13047: 7b 57 28                 u64 [s0 + 0x28] = a0
 13050: 7b 18 28                 u64 [sp + 0x28] = a1
 13053: 7b 58 30                 u64 [s0 + 0x30] = a1
 13056: 33 07 c0 0d 01           a0 = 0x10dc0
 13061: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13065: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13069: 49 21 c0 01              u64 [sp + 448] = 0
 13073: 95 17 ff 07              a0 = sp + 0x7ff
 13077: 95 77 b9 03              a0 = a0 + 0x3b9
 13081: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13085: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13090: 95 17 ff 07              a0 = sp + 0x7ff
 13094: 95 77 e9 03              a0 = a0 + 0x3e9
 13098: 95 18 a0 01              a1 = sp + 0x1a0
 13102: 50 20 58 01 ec 08        ra = 344, jump @798
      :                          @650 [@dyn 172]
 13108: 82 56 50                 s1 = u64 [s0 + 0x50]
 13111: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13114: 82 55 48                 s0 = u64 [s0 + 0x48]
 13117: 82 17 10                 a0 = u64 [sp + 0x10]
 13120: 33 08                    a1 = 0
 13122: 33 09                    a2 = 0
 13124: 64 6a                    a3 = s1
 13126: 33 00 5a 01              ra = 0x15a
 13130: 0a 64                    ecalli 100 // 'log'
 13132: 01                       fallthrough
      :                          @651 [@dyn 173]
 13133: 82 17 30                 a0 = u64 [sp + 0x30]
 13136: c8 57 07                 a0 = a0 + s0
 13139: 53 37 00 00 f0 25        jump @657 if a0 <u 4293918720
      :                          @652
 13145: 33 07 50 00 03           a0 = 0x30050
 13150: 95 77 00 00 10           a0 = a0 + 0x100000
 13155: 01                       fallthrough
      :                          @653
 13156: 82 78                    a1 = u64 [a0]
 13158: c9 87 09                 a2 = a0 - a1
 13161: ab 69 0f                 jump @657 if a2 != s1
      :                          @654
 13164: c9 58 09                 a2 = a1 - s0
 13167: 01                       fallthrough
      :                          @655
 13168: 82 7a                    a3 = u64 [a0]
 13170: ab 8a f2                 jump @653 if a3 != a1
      :                          @656
 13173: 7b 79                    u64 [a0] = a2
 13175: 01                       fallthrough
      :                          @657
 13176: 95 16 ff 07              s1 = sp + 0x7ff
 13180: 95 66 a1 03              s1 = s1 + 0x3a1
 13184: 82 67 68                 a0 = u64 [s1 + 0x68]
 13187: 33 08 01                 a1 = 0x1
 13190: 50 20 5c 01 0b 16        ra = 348, jump @1076
      :                          @658 [@dyn 174]
 13196: 95 17 55                 a0 = sp + 0x55
 13199: 33 08 03                 a1 = 0x3
 13202: 95 19 52                 a2 = sp + 0x52
 13205: 33 0a 03                 a3 = 0x3
 13208: 0a 03                    ecalli 3 // 'write'
 13210: 95 18 48                 a1 = sp + 0x48
 13213: 7b 68 18                 u64 [s1 + 0x18] = a1
 13216: 95 18 ff 07              a1 = sp + 0x7ff
 13220: 95 88 11 04              a1 = a1 + 0x411
 13224: 7b 68 28                 u64 [s1 + 0x28] = a1
 13227: 82 18 28                 a1 = u64 [sp + 0x28]
 13230: 7b 68 20                 u64 [s1 + 0x20] = a1
 13233: 7b 68 30                 u64 [s1 + 0x30] = a1
 13236: 33 08 f0 0d 01           a1 = 0x10df0
 13241: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13245: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13250: 49 21 c0 01              u64 [sp + 448] = 0
 13254: 95 18 ff 07              a1 = sp + 0x7ff
 13258: 95 88 b9 03              a1 = a1 + 0x3b9
 13262: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13266: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13271: 7b 67 70                 u64 [s1 + 0x70] = a0
 13274: 95 77 01                 a0 = a0 + 0x1
 13277: 88 77 01                 a0 = a0 <u 0x1
 13280: 97 77 01                 a0 = a0 << 0x1
 13283: 7b 17 28                 u64 [sp + 0x28] = a0
 13286: 95 17 ff 07              a0 = sp + 0x7ff
 13290: 95 77 e9 03              a0 = a0 + 0x3e9
 13294: 95 18 a0 01              a1 = sp + 0x1a0
 13298: 50 20 5e 01 28 08        ra = 350, jump @798
      :                          @659 [@dyn 175]
 13304: 82 65 50                 s0 = u64 [s1 + 0x50]
 13307: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13310: 82 66 48                 s1 = u64 [s1 + 0x48]
 13313: 82 17 28                 a0 = u64 [sp + 0x28]
 13316: 33 08                    a1 = 0
 13318: 33 09                    a2 = 0
 13320: 64 5a                    a3 = s0
 13322: 33 00 60 01              ra = 0x160
 13326: 0a 64                    ecalli 100 // 'log'
 13328: 01                       fallthrough
      :                          @660 [@dyn 176]
 13329: 82 17 30                 a0 = u64 [sp + 0x30]
 13332: c8 67 07                 a0 = a0 + s1
 13335: 53 37 00 00 f0 25        jump @666 if a0 <u 4293918720
      :                          @661
 13341: 33 07 50 00 03           a0 = 0x30050
 13346: 95 77 00 00 10           a0 = a0 + 0x100000
 13351: 01                       fallthrough
      :                          @662
 13352: 82 78                    a1 = u64 [a0]
 13354: c9 87 09                 a2 = a0 - a1
 13357: ab 59 0f                 jump @666 if a2 != s0
      :                          @663
 13360: c9 68 09                 a2 = a1 - s1
 13363: 01                       fallthrough
      :                          @664
 13364: 82 7a                    a3 = u64 [a0]
 13366: ab 8a f2                 jump @662 if a3 != a1
      :                          @665
 13369: 7b 79                    u64 [a0] = a2
 13371: 01                       fallthrough
      :                          @666
 13372: 95 15 ff 07              s0 = sp + 0x7ff
 13376: 95 55 a1 03              s0 = s0 + 0x3a1
 13380: 82 57 70                 a0 = u64 [s0 + 0x70]
 13383: 33 08 02                 a1 = 0x2
 13386: 50 20 62 01 47 15        ra = 354, jump @1076
      :                          @667 [@dyn 177]
 13392: 33 06 03                 s1 = 0x3
 13395: 95 17 55                 a0 = sp + 0x55
 13398: 33 08 03                 a1 = 0x3
 13401: 33 09                    a2 = 0
 13403: 33 0a                    a3 = 0
 13405: 0a 03                    ecalli 3 // 'write'
 13407: 7b 57 78                 u64 [s0 + 0x78] = a0
 13410: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 13413: 88 77 01                 a0 = a0 <u 0x1
 13416: 97 77 01                 a0 = a0 << 0x1
 13419: 7b 17 10                 u64 [sp + 0x10] = a0
 13422: 95 17 48                 a0 = sp + 0x48
 13425: 7b 57 18                 u64 [s0 + 0x18] = a0
 13428: 33 08 16                 a1 = 0x16
 13431: 7b 58 20                 u64 [s0 + 0x20] = a1
 13434: 95 17 ff 07              a0 = sp + 0x7ff
 13438: 95 77 19 04              a0 = a0 + 0x419
 13442: 7b 57 28                 u64 [s0 + 0x28] = a0
 13445: 7b 18 28                 u64 [sp + 0x28] = a1
 13448: 7b 58 30                 u64 [s0 + 0x30] = a1
 13451: 33 07 20 0e 01           a0 = 0x10e20
 13456: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13460: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13464: 49 21 c0 01              u64 [sp + 448] = 0
 13468: 95 17 ff 07              a0 = sp + 0x7ff
 13472: 95 77 b9 03              a0 = a0 + 0x3b9
 13476: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13480: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13485: 95 17 ff 07              a0 = sp + 0x7ff
 13489: 95 77 e9 03              a0 = a0 + 0x3e9
 13493: 95 18 a0 01              a1 = sp + 0x1a0
 13497: 50 20 64 01 61 07        ra = 356, jump @798
      :                          @668 [@dyn 178]
 13503: 82 56 50                 s1 = u64 [s0 + 0x50]
 13506: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13509: 82 55 48                 s0 = u64 [s0 + 0x48]
 13512: 82 17 10                 a0 = u64 [sp + 0x10]
 13515: 33 08                    a1 = 0
 13517: 33 09                    a2 = 0
 13519: 64 6a                    a3 = s1
 13521: 33 00 66 01              ra = 0x166
 13525: 0a 64                    ecalli 100 // 'log'
 13527: 01                       fallthrough
      :                          @669 [@dyn 179]
 13528: 82 17 30                 a0 = u64 [sp + 0x30]
 13531: c8 57 07                 a0 = a0 + s0
 13534: 53 37 00 00 f0 25        jump @675 if a0 <u 4293918720
      :                          @670
 13540: 33 07 50 00 03           a0 = 0x30050
 13545: 95 77 00 00 10           a0 = a0 + 0x100000
 13550: 01                       fallthrough
      :                          @671
 13551: 82 78                    a1 = u64 [a0]
 13553: c9 87 09                 a2 = a0 - a1
 13556: ab 69 0f                 jump @675 if a2 != s1
      :                          @672
 13559: c9 58 09                 a2 = a1 - s0
 13562: 01                       fallthrough
      :                          @673
 13563: 82 7a                    a3 = u64 [a0]
 13565: ab 8a f2                 jump @671 if a3 != a1
      :                          @674
 13568: 7b 79                    u64 [a0] = a2
 13570: 01                       fallthrough
      :                          @675
 13571: 95 16 ff 07              s1 = sp + 0x7ff
 13575: 95 66 a1 03              s1 = s1 + 0x3a1
 13579: 82 67 78                 a0 = u64 [s1 + 0x78]
 13582: 33 08 05                 a1 = 0x5
 13585: 50 20 68 01 80 14        ra = 360, jump @1076
      :                          @676 [@dyn 180]
 13591: 95 18 55                 a1 = sp + 0x55
 13594: 33 09 03                 a2 = 0x3
 13597: 95 1a 98 00              a3 = sp + 0x98
 13601: 33 0c 00 01              a5 = 0x100
 13605: 82 17 38                 a0 = u64 [sp + 0x38]
 13608: 33 0b                    a4 = 0
 13610: 0a 02                    ecalli 2 // 'read'
 13612: 95 18 48                 a1 = sp + 0x48
 13615: 7b 68 18                 u64 [s1 + 0x18] = a1
 13618: 95 18 ff 07              a1 = sp + 0x7ff
 13622: 95 88 21 04              a1 = a1 + 0x421
 13626: 7b 68 28                 u64 [s1 + 0x28] = a1
 13629: 82 18 28                 a1 = u64 [sp + 0x28]
 13632: 7b 68 20                 u64 [s1 + 0x20] = a1
 13635: 7b 68 30                 u64 [s1 + 0x30] = a1
 13638: 33 08 68 0e 01           a1 = 0x10e68
 13643: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13647: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13652: 49 21 c0 01              u64 [sp + 448] = 0
 13656: 95 18 ff 07              a1 = sp + 0x7ff
 13660: 95 88 b9 03              a1 = a1 + 0x3b9
 13664: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13668: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13673: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13677: 95 77 01                 a0 = a0 + 0x1
 13680: 88 77 01                 a0 = a0 <u 0x1
 13683: 97 77 01                 a0 = a0 << 0x1
 13686: 7b 17 28                 u64 [sp + 0x28] = a0
 13689: 95 17 ff 07              a0 = sp + 0x7ff
 13693: 95 77 e9 03              a0 = a0 + 0x3e9
 13697: 95 18 a0 01              a1 = sp + 0x1a0
 13701: 50 20 6a 01 95 06        ra = 362, jump @798
      :                          @677 [@dyn 181]
 13707: 82 65 50                 s0 = u64 [s1 + 0x50]
 13710: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13713: 82 66 48                 s1 = u64 [s1 + 0x48]
 13716: 82 17 28                 a0 = u64 [sp + 0x28]
 13719: 33 08                    a1 = 0
 13721: 33 09                    a2 = 0
 13723: 64 5a                    a3 = s0
 13725: 33 00 6c 01              ra = 0x16c
 13729: 0a 64                    ecalli 100 // 'log'
 13731: 01                       fallthrough
      :                          @678 [@dyn 182]
 13732: 82 17 30                 a0 = u64 [sp + 0x30]
 13735: c8 67 07                 a0 = a0 + s1
 13738: 53 37 00 00 f0 25        jump @684 if a0 <u 4293918720
      :                          @679
 13744: 33 07 50 00 03           a0 = 0x30050
 13749: 95 77 00 00 10           a0 = a0 + 0x100000
 13754: 01                       fallthrough
      :                          @680
 13755: 82 78                    a1 = u64 [a0]
 13757: c9 87 09                 a2 = a0 - a1
 13760: ab 59 0f                 jump @684 if a2 != s0
      :                          @681
 13763: c9 68 09                 a2 = a1 - s1
 13766: 01                       fallthrough
      :                          @682
 13767: 82 7a                    a3 = u64 [a0]
 13769: ab 8a f2                 jump @680 if a3 != a1
      :                          @683
 13772: 7b 79                    u64 [a0] = a2
 13774: 01                       fallthrough
      :                          @684
 13775: 95 15 ff 07              s0 = sp + 0x7ff
 13779: 95 55 a1 03              s0 = s0 + 0x3a1
 13783: 82 57 80 00              a0 = u64 [s0 + 0x80]
 13787: 33 08 06                 a1 = 0x6
 13790: 50 20 6e 01 b3 13        ra = 366, jump @1076
      :                          @685 [@dyn 183]
 13796: 33 06 03                 s1 = 0x3
 13799: 95 17 55                 a0 = sp + 0x55
 13802: 33 08 03                 a1 = 0x3
 13805: 33 09                    a2 = 0
 13807: 33 0a                    a3 = 0
 13809: 0a 03                    ecalli 3 // 'write'
 13811: 7b 57                    u64 [s0] = a0
 13813: 95 77 01                 a0 = a0 + 0x1
 13816: 88 77 01                 a0 = a0 <u 0x1
 13819: 97 77 01                 a0 = a0 << 0x1
 13822: 7b 17 28                 u64 [sp + 0x28] = a0
 13825: 95 17 48                 a0 = sp + 0x48
 13828: 7b 57 18                 u64 [s0 + 0x18] = a0
 13831: 33 07 16                 a0 = 0x16
 13834: 7b 57 20                 u64 [s0 + 0x20] = a0
 13837: 7b 55 28                 u64 [s0 + 0x28] = s0
 13840: 7b 57 30                 u64 [s0 + 0x30] = a0
 13843: 33 07 98 0e 01           a0 = 0x10e98
 13848: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13852: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13856: 49 21 c0 01              u64 [sp + 448] = 0
 13860: 95 17 ff 07              a0 = sp + 0x7ff
 13864: 95 77 b9 03              a0 = a0 + 0x3b9
 13868: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13872: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13877: 95 17 ff 07              a0 = sp + 0x7ff
 13881: 95 77 e9 03              a0 = a0 + 0x3e9
 13885: 95 18 a0 01              a1 = sp + 0x1a0
 13889: 50 20 70 01 d9 05        ra = 368, jump @798
      :                          @686 [@dyn 184]
 13895: 82 56 50                 s1 = u64 [s0 + 0x50]
 13898: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13901: 82 55 48                 s0 = u64 [s0 + 0x48]
 13904: 82 17 28                 a0 = u64 [sp + 0x28]
 13907: 33 08                    a1 = 0
 13909: 33 09                    a2 = 0
 13911: 64 6a                    a3 = s1
 13913: 33 00 72 01              ra = 0x172
 13917: 0a 64                    ecalli 100 // 'log'
 13919: 01                       fallthrough
      :                          @687 [@dyn 185]
 13920: 82 17 30                 a0 = u64 [sp + 0x30]
 13923: c8 57 07                 a0 = a0 + s0
 13926: 53 37 00 00 f0 25        jump @693 if a0 <u 4293918720
      :                          @688
 13932: 33 07 50 00 03           a0 = 0x30050
 13937: 95 77 00 00 10           a0 = a0 + 0x100000
 13942: 01                       fallthrough
      :                          @689
 13943: 82 78                    a1 = u64 [a0]
 13945: c9 87 09                 a2 = a0 - a1
 13948: ab 69 0f                 jump @693 if a2 != s1
      :                          @690
 13951: c9 58 09                 a2 = a1 - s0
 13954: 01                       fallthrough
      :                          @691
 13955: 82 7a                    a3 = u64 [a0]
 13957: ab 8a f2                 jump @689 if a3 != a1
      :                          @692
 13960: 7b 79                    u64 [a0] = a2
 13962: 01                       fallthrough
      :                          @693
 13963: 95 17 ff 07              a0 = sp + 0x7ff
 13967: 95 77 a1 03              a0 = a0 + 0x3a1
 13971: 82 77                    a0 = u64 [a0]
 13973: 33 08 07                 a1 = 0x7
 13976: 50 20 74 01 f9 12        ra = 372, jump @1076
      :                          @694 [@dyn 186]
 13982: 95 18 98 00              a1 = sp + 0x98
 13986: 82 17 38                 a0 = u64 [sp + 0x38]
 13989: 0a 04                    ecalli 4 // 'info'
 13991: 64 75                    s0 = a0
 13993: 95 17 ff 07              a0 = sp + 0x7ff
 13997: 95 77 a1 03              a0 = a0 + 0x3a1
 14001: 7b 75 78                 u64 [a0 + 0x78] = s0
 14004: 33 08 08                 a1 = 0x8
 14007: 64 57                    a0 = s0
 14009: 50 20 76 01 d8 12        ra = 374, jump @1076
      :                          @695 [@dyn 187]
 14015: 88 57 01                 a0 = s0 <u 0x1
 14018: 97 77 01                 a0 = a0 << 0x1
 14021: 7b 17 28                 u64 [sp + 0x28] = a0
 14024: 95 17 48                 a0 = sp + 0x48
 14027: 95 19 ff 07              a2 = sp + 0x7ff
 14031: 95 99 a1 03              a2 = a2 + 0x3a1
 14035: 7b 97 18                 u64 [a2 + 0x18] = a0
 14038: 33 08 16                 a1 = 0x16
 14041: 7b 98 20                 u64 [a2 + 0x20] = a1
 14044: 95 17 ff 07              a0 = sp + 0x7ff
 14048: 95 77 19 04              a0 = a0 + 0x419
 14052: 7b 97 28                 u64 [a2 + 0x28] = a0
 14055: 7b 18 38                 u64 [sp + 0x38] = a1
 14058: 7b 98 30                 u64 [a2 + 0x30] = a1
 14061: 95 15 ff 07              s0 = sp + 0x7ff
 14065: 95 55 a1 03              s0 = s0 + 0x3a1
 14069: 33 07 d0 0e 01           a0 = 0x10ed0
 14074: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14078: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 14083: 49 21 c0 01              u64 [sp + 448] = 0
 14087: 95 17 ff 07              a0 = sp + 0x7ff
 14091: 95 77 b9 03              a0 = a0 + 0x3b9
 14095: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 14099: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 14104: 95 17 ff 07              a0 = sp + 0x7ff
 14108: 95 77 e9 03              a0 = a0 + 0x3e9
 14112: 95 18 a0 01              a1 = sp + 0x1a0
 14116: 50 20 78 01 f6 04        ra = 376, jump @798
      :                          @696 [@dyn 188]
 14122: 82 56 50                 s1 = u64 [s0 + 0x50]
 14125: 82 5b 58                 a4 = u64 [s0 + 0x58]
 14128: 82 55 48                 s0 = u64 [s0 + 0x48]
 14131: 82 17 28                 a0 = u64 [sp + 0x28]
 14134: 33 08                    a1 = 0
 14136: 33 09                    a2 = 0
 14138: 64 6a                    a3 = s1
 14140: 33 00 7a 01              ra = 0x17a
 14144: 0a 64                    ecalli 100 // 'log'
 14146: 01                       fallthrough
      :                          @697 [@dyn 189]
 14147: 82 17 30                 a0 = u64 [sp + 0x30]
 14150: c8 57 07                 a0 = a0 + s0
 14153: 53 37 00 00 f0 27        jump @703 if a0 <u 4293918720
      :                          @698
 14159: 33 07 50 00 03           a0 = 0x30050
 14164: 95 77 00 00 10           a0 = a0 + 0x100000
 14169: 01                       fallthrough
      :                          @699
 14170: 82 78                    a1 = u64 [a0]
 14172: c9 87 09                 a2 = a0 - a1
 14175: ab 69 11                 jump @703 if a2 != s1
      :                          @700
 14178: c9 58 09                 a2 = a1 - s0
 14181: 01                       fallthrough
      :                          @701
 14182: 82 7a                    a3 = u64 [a0]
 14184: ab 8a f2                 jump @699 if a3 != a1
      :                          @702
 14187: 7b 79                    u64 [a0] = a2
 14189: 0a                       ecalli 0 // 'gas'
 14190: 28 04                    jump @704
      :                          @703
 14192: 0a                       ecalli 0 // 'gas'
 14193: 01                       fallthrough
      :                          @704
 14194: 95 16 ff 07              s1 = sp + 0x7ff
 14198: 95 66 a1 03              s1 = s1 + 0x3a1
 14202: 7b 67 80 00              u64 [s1 + 0x80] = a0
 14206: 33 08 09                 a1 = 0x9
 14209: 50 20 7c 01 10 12        ra = 380, jump @1076
      :                          @705 [@dyn 190]
 14215: 95 17 ff 07              a0 = sp + 0x7ff
 14219: 95 77 21 04              a0 = a0 + 0x421
 14223: 7b 67 48                 u64 [s1 + 0x48] = a0
 14226: 82 17 38                 a0 = u64 [sp + 0x38]
 14229: 7b 67 50                 u64 [s1 + 0x50] = a0
 14232: 33 07 20 0f 01           a0 = 0x10f20
 14237: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14241: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14246: 49 21 c0 01              u64 [sp + 448] = 0
 14250: 95 17 ff 07              a0 = sp + 0x7ff
 14254: 95 77 e9 03              a0 = a0 + 0x3e9
 14258: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 14262: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 14267: 95 17 ff 07              a0 = sp + 0x7ff
 14271: 95 77 b9 03              a0 = a0 + 0x3b9
 14275: 95 18 a0 01              a1 = sp + 0x1a0
 14279: 50 20 7e 01 53 04        ra = 382, jump @798
      :                          @706 [@dyn 191]
 14285: 82 65 20                 s0 = u64 [s1 + 0x20]
 14288: 82 6b 28                 a4 = u64 [s1 + 0x28]
 14291: 82 66 18                 s1 = u64 [s1 + 0x18]
 14294: 33 07 04                 a0 = 0x4
 14297: 33 08                    a1 = 0
 14299: 33 09                    a2 = 0
 14301: 64 5a                    a3 = s0
 14303: 33 00 80 01              ra = 0x180
 14307: 0a 64                    ecalli 100 // 'log'
 14309: 01                       fallthrough
      :                          @707 [@dyn 192]
 14310: 82 17 30                 a0 = u64 [sp + 0x30]
 14313: c8 67 07                 a0 = a0 + s1
 14316: 53 37 00 00 f0 27        jump @713 if a0 <u 4293918720
      :                          @708
 14322: 33 07 50 00 03           a0 = 0x30050
 14327: 95 77 00 00 10           a0 = a0 + 0x100000
 14332: 01                       fallthrough
      :                          @709
 14333: 82 78                    a1 = u64 [a0]
 14335: c9 87 09                 a2 = a0 - a1
 14338: ab 59 11                 jump @713 if a2 != s0
      :                          @710
 14341: c9 68 09                 a2 = a1 - s1
 14344: 01                       fallthrough
      :                          @711
 14345: 82 7a                    a3 = u64 [a0]
 14347: ab 8a f2                 jump @709 if a3 != a1
      :                          @712
 14350: 7b 79                    u64 [a0] = a2
 14352: 33 0b                    a4 = 0
 14354: 01                       fallthrough
      :                          @713
 14355: 82 19 20                 a2 = u64 [sp + 0x20]
 14358: 55 19 21 20 01           jump @731 if a2 >=u 33
      :                          @714
 14363: 33 05 19 00 03           s0 = 0x30019
 14368: 33 07 19 00 03           a0 = 0x30019
 14373: 82 18 18                 a1 = u64 [sp + 0x18]
 14376: 50 20 82 01 6d 06        ra = 386, jump @847
      :                          @715 [@dyn 193]
 14382: 82 18 48                 a1 = u64 [sp + 0x48]
 14385: 3a 09 00 00 03           a2 = u64 [0x30000]
 14390: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 14400: ca 78 07                 a0 = a1 * a0
 14403: ae 97 38                 jump @720 if a0 >=u a2
      :                          @716
 14406: 33 07 33                 a0 = 0x33
 14409: 51 18 09 27              jump @718 if a1 == 9
      :                          @717
 14413: 0a 08                    ecalli 8 // 'checkpoint'
 14415: 33 0a 40 0f 01           a3 = 0x10f40
 14420: 33 07 03                 a0 = 0x3
 14423: 33 0b 11                 a4 = 0x11
 14426: 33 08                    a1 = 0
 14428: 33 09                    a2 = 0
 14430: 0a 64                    ecalli 100 // 'log'
 14432: 82 17 48                 a0 = u64 [sp + 0x48]
 14435: 95 77 2a                 a0 = a0 + 0x2a
 14438: 33 08 07                 a1 = 0x7
 14441: 33 00 84 01              ra = 0x184
 14445: 28 24 11                 jump @1076
      :                          @718
 14448: 33 08 07                 a1 = 0x7
 14451: 50 20 84 01 1e 11        ra = 388, jump @1076
      :                          @719 [@dyn 194]
 14457: 32 07                    jump [a0]
      :                          @720
 14459: 64 57                    a0 = s0
 14461: 0a 10                    ecalli 16 // 'oyield'
 14463: 95 15 ff 07              s0 = sp + 0x7ff
 14467: 95 55 a1 03              s0 = s0 + 0x3a1
 14471: 7b 57                    u64 [s0] = a0
 14473: 88 77 01                 a0 = a0 <u 0x1
 14476: 97 77 01                 a0 = a0 << 0x1
 14479: 7b 17 38                 u64 [sp + 0x38] = a0
 14482: 95 17 48                 a0 = sp + 0x48
 14485: 7b 57 18                 u64 [s0 + 0x18] = a0
 14488: 33 07 16                 a0 = 0x16
 14491: 7b 57 20                 u64 [s0 + 0x20] = a0
 14494: 7b 55 28                 u64 [s0 + 0x28] = s0
 14497: 7b 57 30                 u64 [s0 + 0x30] = a0
 14500: 33 07 58 0f 01           a0 = 0x10f58
 14505: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14509: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14514: 49 21 c0 01              u64 [sp + 448] = 0
 14518: 95 18 ff 07              a1 = sp + 0x7ff
 14522: 95 88 b9 03              a1 = a1 + 0x3b9
 14526: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 14530: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 14535: 95 17 ff 07              a0 = sp + 0x7ff
 14539: 95 77 e9 03              a0 = a0 + 0x3e9
 14543: 95 18 a0 01              a1 = sp + 0x1a0
 14547: 50 20 86 01 47 03        ra = 390, jump @798
      :                          @721 [@dyn 195]
 14553: 82 56 50                 s1 = u64 [s0 + 0x50]
 14556: 82 5b 58                 a4 = u64 [s0 + 0x58]
 14559: 82 55 48                 s0 = u64 [s0 + 0x48]
 14562: 82 17 38                 a0 = u64 [sp + 0x38]
 14565: 33 08                    a1 = 0
 14567: 33 09                    a2 = 0
 14569: 64 6a                    a3 = s1
 14571: 33 00 88 01              ra = 0x188
 14575: 0a 64                    ecalli 100 // 'log'
 14577: 01                       fallthrough
      :                          @722 [@dyn 196]
 14578: 82 17 30                 a0 = u64 [sp + 0x30]
 14581: c8 57 07                 a0 = a0 + s0
 14584: 53 37 00 00 f0 31        jump @728 if a0 <u 4293918720
      :                          @723
 14590: 33 07 50 00 03           a0 = 0x30050
 14595: 95 77 00 00 10           a0 = a0 + 0x100000
 14600: 01                       fallthrough
      :                          @724
 14601: 82 78                    a1 = u64 [a0]
 14603: c9 87 09                 a2 = a0 - a1
 14606: ab 69 1b                 jump @728 if a2 != s1
      :                          @725
 14609: c9 58 09                 a2 = a1 - s0
 14612: 01                       fallthrough
      :                          @726
 14613: 82 7a                    a3 = u64 [a0]
 14615: ab 8a f2                 jump @724 if a3 != a1
      :                          @727
 14618: 7b 79                    u64 [a0] = a2
 14620: 33 0b                    a4 = 0
 14622: 33 07 19 00 03           a0 = 0x30019
 14627: 33 08 20                 a1 = 0x20
 14630: 28 57 df                 jump @349
      :                          @728
 14633: 33 07 19 00 03           a0 = 0x30019
 14638: 33 08 20                 a1 = 0x20
 14641: 28 4c df                 jump @349
      :                          @729
 14644: 00                       trap
      :                          @730
 14645: 00                       trap
      :                          @731
 14646: 00                       trap
      :                          @732
 14647: 00                       trap
      :                          @733 [export #2: 'on_transfer']
 14648: 95 11 88                 sp = sp + 0xffffffffffffff88
 14651: 7b 10 70                 u64 [sp + 0x70] = ra
 14654: 7b 15 68                 u64 [sp + 0x68] = s0
 14657: 7b 16 60                 u64 [sp + 0x60] = s1
 14660: 0a                       ecalli 0 // 'gas'
 14661: 7b 17                    u64 [sp] = a0
 14663: 33 08 04                 a1 = 0x4
 14666: 50 20 8a 01 47 10        ra = 394, jump @1076
      :                          @734 [@dyn 197]
 14672: 64 17                    a0 = sp
 14674: 7b 17 50                 u64 [sp + 0x50] = a0
 14677: 33 07 16                 a0 = 0x16
 14680: 7b 17 58                 u64 [sp + 0x58] = a0
 14683: 33 07 a8 0f 01           a0 = 0x10fa8
 14688: 7b 17 20                 u64 [sp + 0x20] = a0
 14691: 49 11 28 02              u64 [sp + 40] = 0x2
 14695: 49 11 40                 u64 [sp + 64] = 0
 14698: 95 17 50                 a0 = sp + 0x50
 14701: 7b 17 30                 u64 [sp + 0x30] = a0
 14704: 49 11 38 01              u64 [sp + 56] = 0x1
 14708: 95 17 08                 a0 = sp + 0x8
 14711: 95 18 20                 a1 = sp + 0x20
 14714: 50 20 8c 01 a0 02        ra = 396, jump @798
      :                          @735 [@dyn 198]
 14720: 82 15 10                 s0 = u64 [sp + 0x10]
 14723: 82 1b 18                 a4 = u64 [sp + 0x18]
 14726: 82 16 08                 s1 = u64 [sp + 0x8]
 14729: 33 07 04                 a0 = 0x4
 14732: 33 08                    a1 = 0
 14734: 33 09                    a2 = 0
 14736: 64 5a                    a3 = s0
 14738: 33 00 8e 01              ra = 0x18e
 14742: 0a 64                    ecalli 100 // 'log'
 14744: 01                       fallthrough
      :                          @736 [@dyn 199]
 14745: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 14750: 53 38 00 00 f0 27        jump @742 if a1 <u 4293918720
      :                          @737
 14756: 33 07 50 00 03           a0 = 0x30050
 14761: 95 77 00 00 10           a0 = a0 + 0x100000
 14766: 01                       fallthrough
      :                          @738
 14767: 82 78                    a1 = u64 [a0]
 14769: c9 87 09                 a2 = a0 - a1
 14772: ab 59 11                 jump @742 if a2 != s0
      :                          @739
 14775: c9 68 09                 a2 = a1 - s1
 14778: 01                       fallthrough
      :                          @740
 14779: 82 7a                    a3 = u64 [a0]
 14781: ab 8a f2                 jump @738 if a3 != a1
      :                          @741
 14784: 7b 79                    u64 [a0] = a2
 14786: 33 0b                    a4 = 0
 14788: 01                       fallthrough
      :                          @742
 14789: 33 07 00 00 01           a0 = 0x10000
 14794: 33 08                    a1 = 0
 14796: 82 10 70                 ra = u64 [sp + 0x70]
 14799: 82 15 68                 s0 = u64 [sp + 0x68]
 14802: 82 16 60                 s1 = u64 [sp + 0x60]
 14805: 95 11 78                 sp = sp + 0x78
 14808: 32 00                    ret
      :                          @743
 14810: 00                       trap
      :                          @744
 14811: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14814: 7b 10 40                 u64 [sp + 0x40] = ra
 14817: 7b 15 38                 u64 [sp + 0x38] = s0
 14820: 7b 16 30                 u64 [sp + 0x30] = s1
 14823: c8 89 09                 a2 = a2 + a1
 14826: ac 89 53                 jump @752 if a2 <u a1
      :                          @745
 14829: 64 75                    s0 = a0
 14831: 82 77                    a0 = u64 [a0]
 14833: 97 78 01                 a1 = a0 << 0x1
 14836: 33 0a 08                 a3 = 0x8
 14839: e4 a9 09                 a2 = maxu(a2, a3)
 14842: e4 98 06                 s1 = maxu(a1, a2)
 14845: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14848: 98 88 3f                 a1 = a1 >> 0x3f
 14851: 51 07 12                 jump @747 if a0 == 0
      :                          @746
 14854: 82 59 08                 a2 = u64 [s0 + 0x8]
 14857: 7b 19 18                 u64 [sp + 0x18] = a2
 14860: 49 11 20 01              u64 [sp + 32] = 0x1
 14864: 7b 17 28                 u64 [sp + 0x28] = a0
 14867: 28 06                    jump @748
      :                          @747
 14869: 49 11 20                 u64 [sp + 32] = 0
 14872: 01                       fallthrough
      :                          @748
 14873: 64 17                    a0 = sp
 14875: 95 1a 18                 a3 = sp + 0x18
 14878: 64 69                    a2 = s1
 14880: 50 20 90 01 32           ra = 400, jump @755
      :                          @749 [@dyn 200]
 14885: 82 18                    a1 = u64 [sp]
 14887: 82 17 08                 a0 = u64 [sp + 0x8]
 14890: 51 08 14                 jump @753 if a1 == 0
      :                          @750
 14893: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 14903: aa 87 0d                 jump @754 if a0 == a1
      :                          @751
 14906: 52 07 a0                 jump @743 if a0 != 0
      :                          @752
 14909: 00                       trap
      :                          @753
 14910: 7b 57 08                 u64 [s0 + 0x8] = a0
 14913: 7b 56                    u64 [s0] = s1
 14915: 01                       fallthrough
      :                          @754
 14916: 82 10 40                 ra = u64 [sp + 0x40]
 14919: 82 15 38                 s0 = u64 [sp + 0x38]
 14922: 82 16 30                 s1 = u64 [sp + 0x30]
 14925: 95 11 48                 sp = sp + 0x48
 14928: 32 00                    ret
      :                          @755
 14930: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14933: 7b 10 30                 u64 [sp + 0x30] = ra
 14936: 7b 15 28                 u64 [sp + 0x28] = s0
 14939: 7b 16 20                 u64 [sp + 0x20] = s1
 14942: 64 95                    s0 = a2
 14944: 64 72                    t0 = a0
 14946: 51 08 7a                 jump @765 if a1 == 0
      :                          @756
 14949: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14952: 51 07 7d                 jump @766 if a0 == 0
      :                          @757
 14955: 82 a9 10                 a2 = u64 [a3 + 0x10]
 14958: 51 09 ab 00              jump @773 if a2 == 0
      :                          @758
 14962: 82 a8                    a1 = u64 [a3]
 14964: 33 06 50 00 03           s1 = 0x30050
 14969: 33 03 00 00 10           t1 = 0x100000
 14974: c8 36 06                 s1 = s1 + t1
 14977: 01                       fallthrough
      :                          @759
 14978: 82 6a                    a3 = u64 [s1]
 14980: c8 5a 07                 a0 = a3 + s0
 14983: ac a7 d0 00              jump @779 if a0 <u a3
      :                          @760
 14987: 95 7b 01                 a4 = a0 + 0x1
 14990: 88 bc 01                 a5 = a4 <u 0x1
 14993: d8 b3 0b                 a4 = t1 <u a4
 14996: d4 cb 0b                 a4 = a4 | a5
 14999: 52 0b c0 00              jump @779 if a4 != 0
      :                          @761
 15003: 82 6b                    a4 = u64 [s1]
 15005: ab ab e5                 jump @759 if a4 != a3
      :                          @762
 15008: 7b 67                    u64 [s1] = a0
 15010: 33 0c                    a5 = 0
 15012: 7b 12 18                 u64 [sp + 0x18] = t0
 15015: 33 0a 50 00 03           a3 = 0x30050
 15020: 33 0b 00 00 10           a4 = 0x100000
 15025: 7b 1a                    u64 [sp] = a3
 15027: c8 ba 0a                 a3 = a3 + a4
 15030: c9 7a 07                 a0 = a3 - a0
 15033: 7b 17 10                 u64 [sp + 0x10] = a0
 15036: 7b 18 08                 u64 [sp + 0x8] = a1
 15039: 64 96                    s1 = a2
 15041: 50 20 92 01 d4 03        ra = 402, jump @847
      :                          @763 [@dyn 201]
 15047: 54 36 00 00 10 98 00     jump @780 if s1 <=u 1048576
      :                          @764
 15054: 82 12 18                 t0 = u64 [sp + 0x18]
 15057: 82 18 10                 a1 = u64 [sp + 0x10]
 15060: 33 07                    a0 = 0
 15062: 7b 28 08                 u64 [t0 + 0x8] = a1
 15065: 28 b5 00                 jump @786
      :                          @765
 15068: 49 12 08                 u64 [t0 + 8] = 0
 15071: 33 07 01                 a0 = 0x1
 15074: 28 ac 00                 jump @786
      :                          @766
 15077: 33 09 50 00 03           a2 = 0x30050
 15082: 33 07 00 00 10           a0 = 0x100000
 15087: c8 79 09                 a2 = a2 + a0
 15090: 01                       fallthrough
      :                          @767
 15091: 82 9a                    a3 = u64 [a2]
 15093: c8 5a 08                 a1 = a3 + s0
 15096: ac a8 5f                 jump @779 if a1 <u a3
      :                          @768
 15099: 95 8b 01                 a4 = a1 + 0x1
 15102: 88 bc 01                 a5 = a4 <u 0x1
 15105: d8 b7 0b                 a4 = a0 <u a4
 15108: d4 cb 0b                 a4 = a4 | a5
 15111: 52 0b 50                 jump @779 if a4 != 0
      :                          @769
 15114: 82 9b                    a4 = u64 [a2]
 15116: ab ab e7                 jump @767 if a4 != a3
      :                          @770
 15119: 7b 98                    u64 [a2] = a1
 15121: 33 0c                    a5 = 0
 15123: 01                       fallthrough
      :                          @771
 15124: ab ab df                 jump @767 if a4 != a3
      :                          @772
 15127: 28 31                    jump @778
      :                          @773
 15129: 33 09 50 00 03           a2 = 0x30050
 15134: 33 07 00 00 10           a0 = 0x100000
 15139: c8 79 09                 a2 = a2 + a0
 15142: 01                       fallthrough
      :                          @774
 15143: 82 9a                    a3 = u64 [a2]
 15145: c8 5a 08                 a1 = a3 + s0
 15148: ac a8 2b                 jump @779 if a1 <u a3
      :                          @775
 15151: 95 8b 01                 a4 = a1 + 0x1
 15154: 88 bc 01                 a5 = a4 <u 0x1
 15157: d8 b7 0b                 a4 = a0 <u a4
 15160: d4 cb 0b                 a4 = a4 | a5
 15163: 52 0b 1c                 jump @779 if a4 != 0
      :                          @776
 15166: 82 9b                    a4 = u64 [a2]
 15168: ab ab e7                 jump @774 if a4 != a3
      :                          @777
 15171: 7b 98                    u64 [a2] = a1
 15173: 33 0c                    a5 = 0
 15175: 01                       fallthrough
      :                          @778
 15176: 33 07 50 00 13           a0 = 0x130050
 15181: c9 87 08                 a1 = a0 - a1
 15184: 33 07                    a0 = 0
 15186: 7b 28 08                 u64 [t0 + 0x8] = a1
 15189: 28 39                    jump @786
      :                          @779
 15191: 33 07 01                 a0 = 0x1
 15194: 7b 27 08                 u64 [t0 + 0x8] = a0
 15197: 28 31                    jump @786
      :                          @780
 15199: 64 6c                    a5 = s1
 15201: 82 17                    a0 = u64 [sp]
 15203: 95 77 00 00 10           a0 = a0 + 0x100000
 15208: 82 12 18                 t0 = u64 [sp + 0x18]
 15211: 82 16 08                 s1 = u64 [sp + 0x8]
 15214: 01                       fallthrough
      :                          @781
 15215: 82 78                    a1 = u64 [a0]
 15217: c9 87 09                 a2 = a0 - a1
 15220: ab 69 11                 jump @785 if a2 != s1
      :                          @782
 15223: c9 c8 09                 a2 = a1 - a5
 15226: 01                       fallthrough
      :                          @783
 15227: 82 7a                    a3 = u64 [a0]
 15229: ab 8a f2                 jump @781 if a3 != a1
      :                          @784
 15232: 7b 79                    u64 [a0] = a2
 15234: 33 0b                    a4 = 0
 15236: 01                       fallthrough
      :                          @785
 15237: 82 18 10                 a1 = u64 [sp + 0x10]
 15240: 33 07                    a0 = 0
 15242: 7b 28 08                 u64 [t0 + 0x8] = a1
 15245: 01                       fallthrough
      :                          @786
 15246: 7b 25 10                 u64 [t0 + 0x10] = s0
 15249: 7b 27                    u64 [t0] = a0
 15251: 82 10 30                 ra = u64 [sp + 0x30]
 15254: 82 15 28                 s0 = u64 [sp + 0x28]
 15257: 82 16 20                 s1 = u64 [sp + 0x20]
 15260: 95 11 38                 sp = sp + 0x38
 15263: 32 00                    ret
      :                          @787
 15265: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 15268: 7b 10 40                 u64 [sp + 0x40] = ra
 15271: 7b 15 38                 u64 [sp + 0x38] = s0
 15274: 7b 16 30                 u64 [sp + 0x30] = s1
 15277: 95 88 01                 a1 = a1 + 0x1
 15280: 51 08 55                 jump @795 if a1 == 0
      :                          @788
 15283: 64 75                    s0 = a0
 15285: 82 77                    a0 = u64 [a0]
 15287: 97 79 01                 a2 = a0 << 0x1
 15290: 33 0a 08                 a3 = 0x8
 15293: e4 a8 08                 a1 = maxu(a1, a3)
 15296: e4 89 06                 s1 = maxu(a2, a1)
 15299: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 15302: 98 88 3f                 a1 = a1 >> 0x3f
 15305: 51 07 12                 jump @790 if a0 == 0
      :                          @789
 15308: 82 59 08                 a2 = u64 [s0 + 0x8]
 15311: 7b 19 18                 u64 [sp + 0x18] = a2
 15314: 49 11 20 01              u64 [sp + 32] = 0x1
 15318: 7b 17 28                 u64 [sp + 0x28] = a0
 15321: 28 06                    jump @791
      :                          @790
 15323: 49 11 20                 u64 [sp + 32] = 0
 15326: 01                       fallthrough
      :                          @791
 15327: 64 17                    a0 = sp
 15329: 95 1a 18                 a3 = sp + 0x18
 15332: 64 69                    a2 = s1
 15334: 50 20 94 01 6c fe        ra = 404, jump @755
      :                          @792 [@dyn 202]
 15340: 82 18                    a1 = u64 [sp]
 15342: 82 17 08                 a0 = u64 [sp + 0x8]
 15345: 51 08 15                 jump @796 if a1 == 0
      :                          @793
 15348: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 15358: aa 87 0e                 jump @797 if a0 == a1
      :                          @794
 15361: 52 07 d9 fd              jump @743 if a0 != 0
      :                          @795
 15365: 00                       trap
      :                          @796
 15366: 7b 57 08                 u64 [s0 + 0x8] = a0
 15369: 7b 56                    u64 [s0] = s1
 15371: 01                       fallthrough
      :                          @797
 15372: 82 10 40                 ra = u64 [sp + 0x40]
 15375: 82 15 38                 s0 = u64 [sp + 0x38]
 15378: 82 16 30                 s1 = u64 [sp + 0x30]
 15381: 95 11 48                 sp = sp + 0x48
 15384: 32 00                    ret
      :                          @798
 15386: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 15389: 7b 10 30                 u64 [sp + 0x30] = ra
 15392: 7b 15 28                 u64 [sp + 0x28] = s0
 15395: 7b 16 20                 u64 [sp + 0x20] = s1
 15398: 64 89                    a2 = a1
 15400: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15403: 64 75                    s0 = a0
 15405: 51 0a 35                 jump @803 if a3 == 0
      :                          @799
 15408: 82 98                    a1 = u64 [a2]
 15410: 33 07                    a0 = 0
 15412: 95 8b 08                 a4 = a1 + 0x8
 15415: 01                       fallthrough
      :                          @800
 15416: 82 bc                    a5 = u64 [a4]
 15418: c8 c7 07                 a0 = a0 + a5
 15421: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15424: 95 bb 10                 a4 = a4 + 0x10
 15427: 52 0a f5                 jump @800 if a3 != 0
      :                          @801
 15430: 82 9a 18                 a3 = u64 [a2 + 0x18]
 15433: 51 0a 24                 jump @805 if a3 == 0
      :                          @802
 15436: 82 88 08                 a1 = u64 [a1 + 0x8]
 15439: 8e 88                    a1 = a1 >u 0
 15441: 88 7a 10                 a3 = a0 <u 0x10
 15444: 85 aa 01                 a3 = a3 ^ 0x1
 15447: d4 a8 08                 a1 = a1 | a3
 15450: 89 7a                    a3 = a0 <s 0
 15452: e0 a8 08                 a1 = a1 & ~a3
 15455: 52 08 0a                 jump @804 if a1 != 0
      :                          @803
 15458: 33 07                    a0 = 0
 15460: 33 08 01                 a1 = 0x1
 15463: 28 4c                    jump @813
      :                          @804
 15465: 97 77 01                 a0 = a0 << 0x1
 15468: 01                       fallthrough
      :                          @805
 15469: 51 07 42                 jump @812 if a0 == 0
      :                          @806
 15472: 57 07 7a                 jump @817 if a0 <s 0
      :                          @807
 15475: 64 52                    t0 = s0
 15477: 33 0b 50 00 03           a4 = 0x30050
 15482: 33 08 00 00 10           a1 = 0x100000
 15487: c8 8b 0b                 a4 = a4 + a1
 15490: 01                       fallthrough
      :                          @808
 15491: 82 bc                    a5 = u64 [a4]
 15493: c8 7c 0a                 a3 = a5 + a0
 15496: ac ca 52 fd              jump @743 if a3 <u a5
      :                          @809
 15500: 95 a5 01                 s0 = a3 + 0x1
 15503: 88 56 01                 s1 = s0 <u 0x1
 15506: d8 58 05                 s0 = a1 <u s0
 15509: d4 65 05                 s0 = s0 | s1
 15512: 52 05 42 fd              jump @743 if s0 != 0
      :                          @810
 15516: 82 b6                    s1 = u64 [a4]
 15518: ab c6 e5                 jump @808 if s1 != a5
      :                          @811
 15521: 7b ba                    u64 [a4] = a3
 15523: 33 08 50 00 13           a1 = 0x130050
 15528: c9 a8 08                 a1 = a1 - a3
 15531: 64 25                    s0 = t0
 15533: 28 06                    jump @813
      :                          @812
 15535: 33 08 01                 a1 = 0x1
 15538: 01                       fallthrough
      :                          @813
 15539: 7b 17                    u64 [sp] = a0
 15541: 7b 18 08                 u64 [sp + 0x8] = a1
 15544: 49 11 10                 u64 [sp + 16] = 0
 15547: 33 08 c8 0f 01           a1 = 0x10fc8
 15552: 64 17                    a0 = sp
 15554: 50 20 96 01 88 06        ra = 406, jump @943
      :                          @814 [@dyn 203]
 15560: 52 07 21                 jump @816 if a0 != 0
      :                          @815
 15563: 82 17 10                 a0 = u64 [sp + 0x10]
 15566: 82 18 08                 a1 = u64 [sp + 0x8]
 15569: 82 19                    a2 = u64 [sp]
 15571: 7b 57 10                 u64 [s0 + 0x10] = a0
 15574: 7b 58 08                 u64 [s0 + 0x8] = a1
 15577: 7b 59                    u64 [s0] = a2
 15579: 82 10 30                 ra = u64 [sp + 0x30]
 15582: 82 15 28                 s0 = u64 [sp + 0x28]
 15585: 82 16 20                 s1 = u64 [sp + 0x20]
 15588: 95 11 38                 sp = sp + 0x38
 15591: 32 00                    ret
      :                          @816
 15593: 00                       trap
      :                          @817
 15594: 00                       trap
      :                          @818 [@dyn 204]
 15595: 82 72                    t0 = u64 [a0]
 15597: 33 09 00 00 f0           a2 = 0xfffffffffff00000
 15602: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
 15607: ac 9a 28                 jump @824 if a3 <u a2
      :                          @819
 15610: 82 77 08                 a0 = u64 [a0 + 0x8]
 15613: 33 09 50 00 03           a2 = 0x30050
 15618: 95 99 00 00 10           a2 = a2 + 0x100000
 15623: 01                       fallthrough
      :                          @820
 15624: 82 9a                    a3 = u64 [a2]
 15626: c9 a9 0b                 a4 = a2 - a3
 15629: ab 7b 12                 jump @824 if a4 != a0
      :                          @821
 15632: c9 2a 0b                 a4 = a3 - t0
 15635: 01                       fallthrough
      :                          @822
 15636: 82 9c                    a5 = u64 [a2]
 15638: ab ac f2                 jump @820 if a5 != a3
      :                          @823
 15641: 7b 9b                    u64 [a2] = a4
 15643: 33 08                    a1 = 0
 15645: 32 00                    ret
      :                          @824
 15647: 32 00                    ret
      :                          @825 [@dyn 205]
 15649: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15652: 7b 10 18                 u64 [sp + 0x18] = ra
 15655: 7b 15 10                 u64 [sp + 0x10] = s0
 15658: 7b 16 08                 u64 [sp + 0x8] = s1
 15661: 64 75                    s0 = a0
 15663: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15666: 82 77                    a0 = u64 [a0]
 15668: c9 a7 07                 a0 = a0 - a3
 15671: 64 96                    s1 = a2
 15673: ac 97 2b                 jump @828 if a0 <u a2
      :                          @826
 15676: 7b 1a                    u64 [sp] = a3
 15678: 82 57 08                 a0 = u64 [s0 + 0x8]
 15681: c8 a7 07                 a0 = a0 + a3
 15684: 64 69                    a2 = s1
 15686: 50 20 9c 01 4f 01        ra = 412, jump @847
      :                          @827 [@dyn 206]
 15692: 82 17                    a0 = u64 [sp]
 15694: c8 76 06                 s1 = s1 + a0
 15697: 7b 56 10                 u64 [s0 + 0x10] = s1
 15700: 33 07                    a0 = 0
 15702: 82 10 18                 ra = u64 [sp + 0x18]
 15705: 82 15 10                 s0 = u64 [sp + 0x10]
 15708: 82 16 08                 s1 = u64 [sp + 0x8]
 15711: 95 11 20                 sp = sp + 0x20
 15714: 32 00                    ret
      :                          @828
 15716: 64 57                    a0 = s0
 15718: 7b 18                    u64 [sp] = a1
 15720: 64 a8                    a1 = a3
 15722: 64 69                    a2 = s1
 15724: 50 20 9e 01 6f fc        ra = 414, jump @744
      :                          @829 [@dyn 207]
 15730: 82 18                    a1 = u64 [sp]
 15732: 82 5a 10                 a3 = u64 [s0 + 0x10]
 15735: 28 c5                    jump @826
      :                          @830 [@dyn 208]
 15737: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15740: 7b 10 20                 u64 [sp + 0x20] = ra
 15743: 7b 15 18                 u64 [sp + 0x18] = s0
 15746: 7b 16 10                 u64 [sp + 0x10] = s1
 15749: 64 86                    s1 = a1
 15751: 83 88                    i32 a1 = a1 + 0
 15753: 33 09 80 00              a2 = 0x80
 15757: 64 7a                    a3 = a0
 15759: ae 98 2c                 jump @835 if a1 >=u a2
      :                          @831
 15762: 82 a8 10                 a1 = u64 [a3 + 0x10]
 15765: 82 a7                    a0 = u64 [a3]
 15767: ab 78 13                 jump @834 if a1 != a0
      :                          @832
 15770: 64 a7                    a0 = a3
 15772: 64 a5                    s0 = a3
 15774: 50 20 a2 01 03 fe        ra = 418, jump @787
      :                          @833 [@dyn 209]
 15780: 64 5a                    a3 = s0
 15782: 82 58 10                 a1 = u64 [s0 + 0x10]
 15785: 01                       fallthrough
      :                          @834
 15786: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15789: c8 87 07                 a0 = a0 + a1
 15792: 78 76                    u8 [a0] = s1
 15794: 95 88 01                 a1 = a1 + 0x1
 15797: 7b a8 10                 u64 [a3 + 0x10] = a1
 15800: 28 ac 00                 jump @843
      :                          @835
 15803: 8b 67 0b                 i32 a0 = s1 >> 0xb
 15806: 48 11 0c                 u32 [sp + 12] = 0
 15809: 52 07 1c                 jump @837 if a0 != 0
      :                          @836
 15812: 98 67 06                 a0 = s1 >> 0x6
 15815: 86 77 c0 00              a0 = a0 | 0xc0
 15819: 78 17 0c                 u8 [sp + 0xc] = a0
 15822: 84 67 3f                 a0 = s1 & 0x3f
 15825: 86 77 80 00              a0 = a0 | 0x80
 15829: 78 17 0d                 u8 [sp + 0xd] = a0
 15832: 33 06 02                 s1 = 0x2
 15835: 28 63                    jump @840
      :                          @837
 15837: 8b 67 10                 i32 a0 = s1 >> 0x10
 15840: 52 07 29                 jump @839 if a0 != 0
      :                          @838
 15843: 98 67 0c                 a0 = s1 >> 0xc
 15846: 86 77 e0 00              a0 = a0 | 0xe0
 15850: 78 17 0c                 u8 [sp + 0xc] = a0
 15853: 97 67 34                 a0 = s1 << 0x34
 15856: 98 77 3a                 a0 = a0 >> 0x3a
 15859: 95 77 80 00              a0 = a0 + 0x80
 15863: 78 17 0d                 u8 [sp + 0xd] = a0
 15866: 84 67 3f                 a0 = s1 & 0x3f
 15869: 86 77 80 00              a0 = a0 | 0x80
 15873: 78 17 0e                 u8 [sp + 0xe] = a0
 15876: 33 06 03                 s1 = 0x3
 15879: 28 37                    jump @840
      :                          @839
 15881: 97 67 2b                 a0 = s1 << 0x2b
 15884: 98 77 3d                 a0 = a0 >> 0x3d
 15887: 95 77 f0 00              a0 = a0 + 0xf0
 15891: 78 17 0c                 u8 [sp + 0xc] = a0
 15894: 97 67 2e                 a0 = s1 << 0x2e
 15897: 98 77 3a                 a0 = a0 >> 0x3a
 15900: 95 77 80 00              a0 = a0 + 0x80
 15904: 78 17 0d                 u8 [sp + 0xd] = a0
 15907: 97 67 34                 a0 = s1 << 0x34
 15910: 98 77 3a                 a0 = a0 >> 0x3a
 15913: 95 77 80 00              a0 = a0 + 0x80
 15917: 78 17 0e                 u8 [sp + 0xe] = a0
 15920: 84 67 3f                 a0 = s1 & 0x3f
 15923: 86 77 80 00              a0 = a0 | 0x80
 15927: 78 17 0f                 u8 [sp + 0xf] = a0
 15930: 33 06 04                 s1 = 0x4
 15933: 01                       fallthrough
      :                          @840
 15934: 82 a5 10                 s0 = u64 [a3 + 0x10]
 15937: 82 a7                    a0 = u64 [a3]
 15939: c9 57 07                 a0 = a0 - s0
 15942: ac 67 2e                 jump @844 if a0 <u s1
      :                          @841
 15945: 7b 1a                    u64 [sp] = a3
 15947: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15950: c8 57 07                 a0 = a0 + s0
 15953: 95 18 0c                 a1 = sp + 0xc
 15956: 64 69                    a2 = s1
 15958: 50 20 a4 01 3f           ra = 420, jump @847
      :                          @842 [@dyn 210]
 15963: c8 56 06                 s1 = s1 + s0
 15966: 82 17                    a0 = u64 [sp]
 15968: 7b 76 10                 u64 [a0 + 0x10] = s1
 15971: 01                       fallthrough
      :                          @843
 15972: 33 07                    a0 = 0
 15974: 82 10 20                 ra = u64 [sp + 0x20]
 15977: 82 15 18                 s0 = u64 [sp + 0x18]
 15980: 82 16 10                 s1 = u64 [sp + 0x10]
 15983: 95 11 28                 sp = sp + 0x28
 15986: 32 00                    ret
      :                          @844
 15988: 64 a7                    a0 = a3
 15990: 64 58                    a1 = s0
 15992: 64 69                    a2 = s1
 15994: 64 a5                    s0 = a3
 15996: 50 20 a6 01 5f fb        ra = 422, jump @744
      :                          @845 [@dyn 211]
 16002: 64 5a                    a3 = s0
 16004: 82 55 10                 s0 = u64 [s0 + 0x10]
 16007: 28 c2                    jump @841
      :                          @846 [@dyn 212]
 16009: 64 8a                    a3 = a1
 16011: 33 08 c8 0f 01           a1 = 0x10fc8
 16016: 64 a9                    a2 = a3
 16018: 28 b8 04                 jump @943
      :                          @847
 16021: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 16024: 7b 10 18                 u64 [sp + 0x18] = ra
 16027: 7b 15 10                 u64 [sp + 0x10] = s0
 16030: 7b 16 08                 u64 [sp + 0x8] = s1
 16033: 53 19 10 64              jump @856 if a2 <u 16
      :                          @848
 16037: 8d 7a                    i32 a3 = -a0
 16039: 84 a2 07                 t0 = a3 & 0x7
 16042: c8 27 0b                 a4 = a0 + t0
 16045: 51 02 15                 jump @851 if t0 == 0
      :                          @849
 16048: 64 8c                    a5 = a1
 16050: 64 75                    s0 = a0
 16052: 01                       fallthrough
      :                          @850
 16053: 7c ca                    a3 = u8 [a5]
 16055: 78 5a                    u8 [s0] = a3
 16057: 95 55 01                 s0 = s0 + 0x1
 16060: 95 cc 01                 a5 = a5 + 0x1
 16063: ac b5 f6                 jump @850 if s0 <u a4
      :                          @851
 16066: c8 28 03                 t1 = a1 + t0
 16069: c9 29 02                 t0 = a2 - t0
 16072: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 16075: 84 38 07                 a1 = t1 & 0x7
 16078: c8 4b 0a                 a3 = a4 + t2
 16081: 51 08 3b                 jump @858 if a1 == 0
      :                          @852
 16084: 58 04 4b                 jump @861 if t2 <=s 0
      :                          @853
 16087: 97 38 03                 a1 = t1 << 0x3
 16090: 84 80 38                 ra = a1 & 0x38
 16093: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 16096: 82 c5                    s0 = u64 [a5]
 16098: 8d 88                    i32 a1 = -a1
 16100: 84 88 38                 a1 = a1 & 0x38
 16103: 95 cc 08                 a5 = a5 + 0x8
 16106: 01                       fallthrough
      :                          @854
 16107: 82 c6                    s1 = u64 [a5]
 16109: d0 05 05                 s0 = s0 >> ra
 16112: cf 86 09                 a2 = s1 << a1
 16115: d4 59 09                 a2 = a2 | s0
 16118: 7b b9                    u64 [a4] = a2
 16120: 95 bb 08                 a4 = a4 + 0x8
 16123: 95 cc 08                 a5 = a5 + 0x8
 16126: 64 65                    s0 = s1
 16128: ac ab eb                 jump @854 if a4 <u a3
      :                          @855
 16131: 28 1c                    jump @861
      :                          @856
 16133: 64 7a                    a3 = a0
 16135: 52 09 21                 jump @862 if a2 != 0
      :                          @857
 16138: 28 2f                    jump @864
      :                          @858
 16140: 58 04 13                 jump @861 if t2 <=s 0
      :                          @859
 16143: 64 38                    a1 = t1
 16145: 01                       fallthrough
      :                          @860
 16146: 82 89                    a2 = u64 [a1]
 16148: 7b b9                    u64 [a4] = a2
 16150: 95 bb 08                 a4 = a4 + 0x8
 16153: 95 88 08                 a1 = a1 + 0x8
 16156: ac ab f6                 jump @860 if a4 <u a3
      :                          @861
 16159: c8 43 08                 a1 = t1 + t2
 16162: 84 29 07                 a2 = t0 & 0x7
 16165: 51 09 14                 jump @864 if a2 == 0
      :                          @862
 16168: c8 a9 09                 a2 = a2 + a3
 16171: 01                       fallthrough
      :                          @863
 16172: 7c 8b                    a4 = u8 [a1]
 16174: 78 ab                    u8 [a3] = a4
 16176: 95 aa 01                 a3 = a3 + 0x1
 16179: 95 88 01                 a1 = a1 + 0x1
 16182: ac 9a f6                 jump @863 if a3 <u a2
      :                          @864
 16185: 82 10 18                 ra = u64 [sp + 0x18]
 16188: 82 15 10                 s0 = u64 [sp + 0x10]
 16191: 82 16 08                 s1 = u64 [sp + 0x8]
 16194: 95 11 20                 sp = sp + 0x20
 16197: 32 00                    ret
      :                          @865
 16199: 53 19 10 48              jump @874 if a2 <u 16
      :                          @866
 16203: 8d 7a                    i32 a3 = -a0
 16205: 84 aa 07                 a3 = a3 & 0x7
 16208: c8 a7 0b                 a4 = a0 + a3
 16211: 51 0a 0e                 jump @869 if a3 == 0
      :                          @867
 16214: 64 7c                    a5 = a0
 16216: 01                       fallthrough
      :                          @868
 16217: 78 c8                    u8 [a5] = a1
 16219: 95 cc 01                 a5 = a5 + 0x1
 16222: ac bc fb                 jump @868 if a5 <u a4
      :                          @869
 16225: c9 a9 03                 t1 = a2 - a3
 16228: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 16231: c8 cb 0a                 a3 = a4 + a5
 16234: 58 0c 1d                 jump @872 if a5 <=s 0
      :                          @870
 16237: 84 82 ff 00              t0 = a1 & 0xff
 16241: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 16251: ca 92 0c                 a5 = t0 * a2
 16254: 01                       fallthrough
      :                          @871
 16255: 7b bc                    u64 [a4] = a5
 16257: 95 bb 08                 a4 = a4 + 0x8
 16260: ac ab fb                 jump @871 if a4 <u a3
      :                          @872
 16263: 84 39 07                 a2 = t1 & 0x7
 16266: 52 09 0a                 jump @875 if a2 != 0
      :                          @873
 16269: 28 13                    jump @877
      :                          @874
 16271: 64 7a                    a3 = a0
 16273: 51 09 0f                 jump @877 if a2 == 0
      :                          @875
 16276: c8 a9 09                 a2 = a2 + a3
 16279: 01                       fallthrough
      :                          @876
 16280: 78 a8                    u8 [a3] = a1
 16282: 95 aa 01                 a3 = a3 + 0x1
 16285: ac 9a fb                 jump @876 if a3 <u a2
      :                          @877
 16288: 32 00                    ret
      :                          @878 [@dyn 213]
 16290: 82 77                    a0 = u64 [a0]
 16292: 01                       fallthrough
      :                          @879
 16293: 28                       jump @879
      :                          @880 [@dyn 214]
 16294: 82 77                    a0 = u64 [a0]
 16296: 01                       fallthrough
      :                          @881
 16297: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 16300: 7b 10 50                 u64 [sp + 0x50] = ra
 16303: 7b 15 48                 u64 [sp + 0x48] = s0
 16306: 7b 16 40                 u64 [sp + 0x40] = s1
 16309: 7b 18                    u64 [sp] = a1
 16311: 98 79 04                 a2 = a0 >> 0x4
 16314: 33 08 27                 a1 = 0x27
 16317: 53 29 71 02 81 00        jump @884 if a2 <u 625
      :                          @882
 16323: 33 08 27                 a1 = 0x27
 16326: 95 1a 3e                 a3 = sp + 0x3e
 16329: 3a 09 08 00 03           a2 = u64 [0x30008]
 16334: 7b 19 10                 u64 [sp + 0x10] = a2
 16337: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 16343: 33 04 7b 14              t2 = 0x147b
 16347: 33 0b 50 10 01           a4 = 0x11050
 16352: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 16358: 01                       fallthrough
      :                          @883
 16359: 64 72                    t0 = a0
 16361: 82 17 10                 a0 = u64 [sp + 0x10]
 16364: d6 72 07                 a0 = t0 mulhu a0
 16367: 98 77 0b                 a0 = a0 >> 0xb
 16370: 82 19 08                 a2 = u64 [sp + 0x8]
 16373: c0 97 0c                 i32 a5 = a0 * a2
 16376: c8 2c 06                 s1 = a5 + t0
 16379: 97 6c 30                 a5 = s1 << 0x30
 16382: 98 cc 32                 a5 = a5 >> 0x32
 16385: ca 4c 0c                 a5 = a5 * t2
 16388: 98 c3 11                 t1 = a5 >> 0x11
 16391: 98 cc 10                 a5 = a5 >> 0x10
 16394: 84 cc fe 07              a5 = a5 & 0x7fe
 16398: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 16401: c8 69 09                 a2 = a2 + s1
 16404: 97 99 31                 a2 = a2 << 0x31
 16407: 98 99 30                 a2 = a2 >> 0x30
 16410: c8 bc 0c                 a5 = a5 + a4
 16413: 7c c6                    s1 = u8 [a5]
 16415: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16418: c8 b9 09                 a2 = a2 + a4
 16421: 7c 95 01                 s0 = u8 [a2 + 0x1]
 16424: 7c 99                    a2 = u8 [a2]
 16426: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 16429: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 16432: 78 a5 01                 u8 [a3 + 0x1] = s0
 16435: 78 a9                    u8 [a3] = a2
 16437: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 16440: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 16443: ac 20 ac                 jump @883 if ra <u t0
      :                          @884
 16446: 54 17 63 3b              jump @886 if a0 <=u 99
      :                          @885
 16450: 97 79 30                 a2 = a0 << 0x30
 16453: 98 99 32                 a2 = a2 >> 0x32
 16456: 96 99 7b 14              a2 = a2 * 0x147b
 16460: 98 99 11                 a2 = a2 >> 0x11
 16463: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 16466: c8 a7 07                 a0 = a0 + a3
 16469: 97 77 31                 a0 = a0 << 0x31
 16472: 98 77 30                 a0 = a0 >> 0x30
 16475: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16478: 33 0a 50 10 01           a3 = 0x11050
 16483: c8 a7 07                 a0 = a0 + a3
 16486: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 16489: 7c 77                    a0 = u8 [a0]
 16491: 95 1b 19                 a4 = sp + 0x19
 16494: c8 8b 0b                 a4 = a4 + a1
 16497: 78 ba 01                 u8 [a4 + 0x1] = a3
 16500: 78 b7                    u8 [a4] = a0
 16502: 64 97                    a0 = a2
 16504: 01                       fallthrough
      :                          @886
 16505: 55 17 0a 14              jump @888 if a0 >=u 10
      :                          @887
 16509: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16512: 95 19 19                 a2 = sp + 0x19
 16515: c8 89 09                 a2 = a2 + a1
 16518: 83 77 30                 i32 a0 = a0 + 0x30
 16521: 78 97                    u8 [a2] = a0
 16523: 28 21                    jump @889
      :                          @888
 16525: 97 77 01                 a0 = a0 << 0x1
 16528: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16531: 33 09 50 10 01           a2 = 0x11050
 16536: c8 97 07                 a0 = a0 + a2
 16539: 7c 79 01                 a2 = u8 [a0 + 0x1]
 16542: 7c 77                    a0 = u8 [a0]
 16544: 95 1a 19                 a3 = sp + 0x19
 16547: c8 8a 0a                 a3 = a3 + a1
 16550: 78 a9 01                 u8 [a3 + 0x1] = a2
 16553: 78 a7                    u8 [a3] = a0
 16555: 01                       fallthrough
      :                          @889
 16556: 95 1a 19                 a3 = sp + 0x19
 16559: c8 8a 0a                 a3 = a3 + a1
 16562: 9a 8b 27                 a4 = 0x27 - a1
 16565: 33 08 f8 0f 01           a1 = 0x10ff8
 16570: 82 17                    a0 = u64 [sp]
 16572: 33 09                    a2 = 0
 16574: 50 20 ae 01 13           ra = 430, jump @891
      :                          @890 [@dyn 215]
 16579: 82 10 50                 ra = u64 [sp + 0x50]
 16582: 82 15 48                 s0 = u64 [sp + 0x48]
 16585: 82 16 40                 s1 = u64 [sp + 0x40]
 16588: 95 11 58                 sp = sp + 0x58
 16591: 32 00                    ret
      :                          @891
 16593: 95 11 98                 sp = sp + 0xffffffffffffff98
 16596: 7b 10 60                 u64 [sp + 0x60] = ra
 16599: 7b 15 58                 u64 [sp + 0x58] = s0
 16602: 7b 16 50                 u64 [sp + 0x50] = s1
 16605: 80 73 34                 t1 = u32 [a0 + 0x34]
 16608: 7b 1a 20                 u64 [sp + 0x20] = a3
 16611: 64 9c                    a5 = a2
 16613: 84 36 01                 s1 = t1 & 0x1
 16616: 33 02 2b                 t0 = 0x2b
 16619: 33 09 00 00 11           a2 = 0x110000
 16624: 84 3a 04                 a3 = t1 & 0x4
 16627: 7b 1b 28                 u64 [sp + 0x28] = a4
 16630: c8 b6 04                 t2 = s1 + a4
 16633: 7b 1c 30                 u64 [sp + 0x30] = a5
 16636: 52 0a 10                 jump @894 if a3 != 0
      :                          @892
 16639: 49 11 38                 u64 [sp + 56] = 0
 16642: 82 78                    a1 = u64 [a0]
 16644: 94 69 2b                 a2 = 0x2b if s1 != 0
 16647: 52 08 35                 jump @898 if a1 != 0
      :                          @893
 16650: 28 56                    jump @903
      :                          @894
 16652: 7b 18 38                 u64 [sp + 0x38] = a1
 16655: 33 09                    a2 = 0
 16657: 51 0c 1b                 jump @897 if a5 == 0
      :                          @895
 16660: 82 1b 38                 a4 = u64 [sp + 0x38]
 16663: 01                       fallthrough
      :                          @896
 16664: 7d b5                    s0 = i8 [a4]
 16666: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 16669: 85 5a 01                 a3 = s0 ^ 0x1
 16672: c8 a9 09                 a2 = a2 + a3
 16675: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16678: 95 bb 01                 a4 = a4 + 0x1
 16681: 52 0c ef                 jump @896 if a5 != 0
      :                          @897
 16684: c8 94 04                 t2 = t2 + a2
 16687: 33 09 00 00 11           a2 = 0x110000
 16692: 82 78                    a1 = u64 [a0]
 16694: db 62 09                 a2 = t0 if s1 != 0
 16697: 51 08 27                 jump @903 if a1 == 0
      :                          @898
 16700: 82 7a 08                 a3 = u64 [a0 + 0x8]
 16703: ae a4 21                 jump @903 if t2 >=u a3
      :                          @899
 16706: 84 38 08                 a1 = t1 & 0x8
 16709: 52 08 51                 jump @906 if a1 != 0
      :                          @900
 16712: 7c 76 38                 s1 = u8 [a0 + 0x38]
 16715: c9 4a 0a                 a3 = a3 - t2
 16718: 7b 19 18                 u64 [sp + 0x18] = a2
 16721: 5a 16 01 a0 00           jump @913 if s1 >s 1
      :                          @901
 16726: 52 06 ad 00              jump @915 if s1 != 0
      :                          @902
 16730: 7b 1a 10                 u64 [sp + 0x10] = a3
 16733: 28 ac 00                 jump @916
      :                          @903
 16736: 82 75 20                 s0 = u64 [a0 + 0x20]
 16739: 82 76 28                 s1 = u64 [a0 + 0x28]
 16742: 64 57                    a0 = s0
 16744: 64 68                    a1 = s1
 16746: 82 1a 38                 a3 = u64 [sp + 0x38]
 16749: 82 1b 30                 a4 = u64 [sp + 0x30]
 16752: 50 20 b0 01 75 01        ra = 432, jump @936
      :                          @904 [@dyn 216]
 16758: 33 08 01                 a1 = 0x1
 16761: 52 07 be 00              jump @921 if a0 != 0
      :                          @905
 16765: 82 6c 18                 a5 = u64 [s1 + 0x18]
 16768: 64 57                    a0 = s0
 16770: 82 18 20                 a1 = u64 [sp + 0x20]
 16773: 82 19 28                 a2 = u64 [sp + 0x28]
 16776: 82 10 60                 ra = u64 [sp + 0x60]
 16779: 82 15 58                 s0 = u64 [sp + 0x58]
 16782: 82 16 50                 s1 = u64 [sp + 0x50]
 16785: 95 11 68                 sp = sp + 0x68
 16788: 32 0c                    jump [a5]
      :                          @906
 16790: 7b 1a 40                 u64 [sp + 0x40] = a3
 16793: 64 45                    s0 = t2
 16795: 81 78 30                 a1 = i32 [a0 + 0x30]
 16798: 7b 18 10                 u64 [sp + 0x10] = a1
 16801: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 16804: 7b 1a 08                 u64 [sp + 0x8] = a3
 16807: 82 7a 20                 a3 = u64 [a0 + 0x20]
 16810: 82 78 28                 a1 = u64 [a0 + 0x28]
 16813: 48 17 30 30              u32 [a0 + 48] = 0x30
 16817: 7b 17                    u64 [sp] = a0
 16819: 46 17 38 01              u8 [a0 + 56] = 0x1
 16823: 7b 1a 48                 u64 [sp + 0x48] = a3
 16826: 64 a7                    a0 = a3
 16828: 64 86                    s1 = a1
 16830: 82 1a 38                 a3 = u64 [sp + 0x38]
 16833: 82 1b 30                 a4 = u64 [sp + 0x30]
 16836: 50 20 b2 01 21 01        ra = 434, jump @936
      :                          @907 [@dyn 217]
 16842: 52 07 69                 jump @920 if a0 != 0
      :                          @908
 16845: 82 17 40                 a0 = u64 [sp + 0x40]
 16848: c9 57 05                 s0 = a0 - s0
 16851: 95 55 01                 s0 = s0 + 0x1
 16854: 01                       fallthrough
      :                          @909
 16855: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 16858: 51 05 cb 00              jump @931 if s0 == 0
      :                          @910
 16862: 82 69 20                 a2 = u64 [s1 + 0x20]
 16865: 33 08 30                 a1 = 0x30
 16868: 82 17 48                 a0 = u64 [sp + 0x48]
 16871: b4 90 02 b4 01           ra = 436, jump [a2]
      :                          @911 [@dyn 218]
 16876: 51 07 eb                 jump @909 if a0 == 0
      :                          @912
 16879: 28 44                    jump @920
      :                          @913
 16881: 52 16 02 12              jump @915 if s1 != 2
      :                          @914
 16885: 98 a6 01                 s1 = a3 >> 0x1
 16888: 95 a8 01                 a1 = a3 + 0x1
 16891: 98 88 01                 a1 = a1 >> 0x1
 16894: 7b 18 10                 u64 [sp + 0x10] = a1
 16897: 28 08                    jump @916
      :                          @915
 16899: 64 a6                    s1 = a3
 16901: 49 11 10                 u64 [sp + 16] = 0
 16904: 01                       fallthrough
      :                          @916
 16905: 82 78 20                 a1 = u64 [a0 + 0x20]
 16908: 7b 18 48                 u64 [sp + 0x48] = a1
 16911: 82 75 28                 s0 = u64 [a0 + 0x28]
 16914: 81 77 30                 a0 = i32 [a0 + 0x30]
 16917: 7b 17 40                 u64 [sp + 0x40] = a0
 16920: 95 66 01                 s1 = s1 + 0x1
 16923: 01                       fallthrough
      :                          @917
 16924: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 16927: 51 06 28                 jump @922 if s1 == 0
      :                          @918
 16930: 82 59 20                 a2 = u64 [s0 + 0x20]
 16933: 82 17 48                 a0 = u64 [sp + 0x48]
 16936: 82 18 40                 a1 = u64 [sp + 0x40]
 16939: b4 90 02 b6 01           ra = 438, jump [a2]
      :                          @919 [@dyn 219]
 16944: 51 07 ec                 jump @917 if a0 == 0
      :                          @920
 16947: 33 08 01                 a1 = 0x1
 16950: 01                       fallthrough
      :                          @921
 16951: 64 87                    a0 = a1
 16953: 82 10 60                 ra = u64 [sp + 0x60]
 16956: 82 15 58                 s0 = u64 [sp + 0x58]
 16959: 82 16 50                 s1 = u64 [sp + 0x50]
 16962: 95 11 68                 sp = sp + 0x68
 16965: 32 00                    ret
      :                          @922
 16967: 82 16 48                 s1 = u64 [sp + 0x48]
 16970: 64 67                    a0 = s1
 16972: 64 58                    a1 = s0
 16974: 82 19 18                 a2 = u64 [sp + 0x18]
 16977: 82 1a 38                 a3 = u64 [sp + 0x38]
 16980: 82 1b 30                 a4 = u64 [sp + 0x30]
 16983: 50 20 b8 01 8e 00        ra = 440, jump @936
      :                          @923 [@dyn 220]
 16989: 33 08 01                 a1 = 0x1
 16992: 52 07 d7                 jump @921 if a0 != 0
      :                          @924
 16995: 82 5a 18                 a3 = u64 [s0 + 0x18]
 16998: 64 67                    a0 = s1
 17000: 82 18 20                 a1 = u64 [sp + 0x20]
 17003: 82 19 28                 a2 = u64 [sp + 0x28]
 17006: b4 a0 02 ba 01           ra = 442, jump [a3]
      :                          @925 [@dyn 221]
 17011: 33 08 01                 a1 = 0x1
 17014: 52 07 c1                 jump @921 if a0 != 0
      :                          @926
 17017: 82 17 10                 a0 = u64 [sp + 0x10]
 17020: 9a 77                    a0 = -a0
 17022: 7b 17 38                 u64 [sp + 0x38] = a0
 17025: 33 06 ff                 s1 = 0xffffffffffffffff
 17028: 01                       fallthrough
      :                          @927
 17029: 82 17 38                 a0 = u64 [sp + 0x38]
 17032: c8 67 07                 a0 = a0 + s1
 17035: 51 17 ff 45              jump @934 if a0 == 4294967295
      :                          @928
 17039: 82 59 20                 a2 = u64 [s0 + 0x20]
 17042: 82 17 48                 a0 = u64 [sp + 0x48]
 17045: 82 18 40                 a1 = u64 [sp + 0x40]
 17048: b4 90 02 bc 01           ra = 444, jump [a2]
      :                          @929 [@dyn 222]
 17053: 95 66 01                 s1 = s1 + 0x1
 17056: 51 07 e5                 jump @927 if a0 == 0
      :                          @930
 17059: 28 39                    jump @935
      :                          @931
 17061: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17064: 82 17 48                 a0 = u64 [sp + 0x48]
 17067: 82 18 20                 a1 = u64 [sp + 0x20]
 17070: 82 19 28                 a2 = u64 [sp + 0x28]
 17073: b4 a0 02 be 01           ra = 446, jump [a3]
      :                          @932 [@dyn 223]
 17078: 33 08 01                 a1 = 0x1
 17081: 52 07 7e ff              jump @921 if a0 != 0
      :                          @933
 17085: 33 08                    a1 = 0
 17087: 82 16                    s1 = u64 [sp]
 17089: 82 17 10                 a0 = u64 [sp + 0x10]
 17092: 7a 67 30                 u32 [s1 + 0x30] = a0
 17095: 82 17 08                 a0 = u64 [sp + 0x8]
 17098: 78 67 38                 u8 [s1 + 0x38] = a0
 17101: 28 6a ff                 jump @921
      :                          @934
 17104: 82 16 10                 s1 = u64 [sp + 0x10]
 17107: 82 17 10                 a0 = u64 [sp + 0x10]
 17110: d8 76 08                 a1 = s1 <u a0
 17113: 28 5e ff                 jump @921
      :                          @935
 17116: 82 17 10                 a0 = u64 [sp + 0x10]
 17119: d8 76 08                 a1 = s1 <u a0
 17122: 28 55 ff                 jump @921
      :                          @936
 17125: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17128: 7b 10 20                 u64 [sp + 0x20] = ra
 17131: 7b 15 18                 u64 [sp + 0x18] = s0
 17134: 7b 16 10                 u64 [sp + 0x10] = s1
 17137: 83 9c                    i32 a5 = a2 + 0
 17139: 33 02 00 00 11           t0 = 0x110000
 17144: 64 a6                    s1 = a3
 17146: 64 85                    s0 = a1
 17148: 64 7a                    a3 = a0
 17150: aa 2c 21                 jump @939 if a5 == t0
      :                          @937
 17153: 82 5c 20                 a5 = u64 [s0 + 0x20]
 17156: 64 a7                    a0 = a3
 17158: 64 98                    a1 = a2
 17160: 7b 1b 08                 u64 [sp + 0x8] = a4
 17163: 7b 1a                    u64 [sp] = a3
 17165: b4 c0 02 c0 01           ra = 448, jump [a5]
      :                          @938 [@dyn 224]
 17170: 82 1a                    a3 = u64 [sp]
 17172: 82 1b 08                 a4 = u64 [sp + 0x8]
 17175: 64 78                    a1 = a0
 17177: 33 07 01                 a0 = 0x1
 17180: 52 08 20                 jump @942 if a1 != 0
      :                          @939
 17183: 51 06 1a                 jump @941 if s1 == 0
      :                          @940
 17186: 82 5c 18                 a5 = u64 [s0 + 0x18]
 17189: 64 a7                    a0 = a3
 17191: 64 68                    a1 = s1
 17193: 64 b9                    a2 = a4
 17195: 82 10 20                 ra = u64 [sp + 0x20]
 17198: 82 15 18                 s0 = u64 [sp + 0x18]
 17201: 82 16 10                 s1 = u64 [sp + 0x10]
 17204: 95 11 28                 sp = sp + 0x28
 17207: 32 0c                    jump [a5]
      :                          @941
 17209: 33 07                    a0 = 0
 17211: 01                       fallthrough
      :                          @942
 17212: 82 10 20                 ra = u64 [sp + 0x20]
 17215: 82 15 18                 s0 = u64 [sp + 0x18]
 17218: 82 16 10                 s1 = u64 [sp + 0x10]
 17221: 95 11 28                 sp = sp + 0x28
 17224: 32 00                    ret
      :                          @943
 17226: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 17230: 7b 10 80 00              u64 [sp + 0x80] = ra
 17234: 7b 15 78                 u64 [sp + 0x78] = s0
 17237: 7b 16 70                 u64 [sp + 0x70] = s1
 17240: 49 11 60 20              u64 [sp + 96] = 0x20
 17244: 33 0a 03                 a3 = 0x3
 17247: 78 1a 68                 u8 [sp + 0x68] = a3
 17250: 82 96 20                 s1 = u64 [a2 + 0x20]
 17253: 49 11 30                 u64 [sp + 48] = 0
 17256: 49 11 40                 u64 [sp + 64] = 0
 17259: 7b 17 50                 u64 [sp + 0x50] = a0
 17262: 7b 18 58                 u64 [sp + 0x58] = a1
 17265: 51 06 0a 01              jump @965 if s1 == 0
      :                          @944
 17269: 82 97 28                 a0 = u64 [a2 + 0x28]
 17272: 51 07 79 01              jump @975 if a0 == 0
      :                          @945
 17276: 49 11 28                 u64 [sp + 40] = 0
 17279: 82 95                    s0 = u64 [a2]
 17281: 7b 19 08                 u64 [sp + 0x8] = a2
 17284: 82 98 10                 a1 = u64 [a2 + 0x10]
 17287: 7b 18 18                 u64 [sp + 0x18] = a1
 17290: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 17293: 97 88 03                 a1 = a1 << 0x3
 17296: 98 88 03                 a1 = a1 >> 0x3
 17299: 95 88 01                 a1 = a1 + 0x1
 17302: 7b 18                    u64 [sp] = a1
 17304: 95 55 08                 s0 = s0 + 0x8
 17307: 96 78 38                 a1 = a0 * 0x38
 17310: 95 66 18                 s1 = s1 + 0x18
 17313: 33 07 aa 01              a0 = 0x1aa
 17317: 7b 17 10                 u64 [sp + 0x10] = a0
 17320: 01                       fallthrough
      :                          @946
 17321: 7b 18 20                 u64 [sp + 0x20] = a1
 17324: 82 59                    a2 = u64 [s0]
 17326: 51 09 18                 jump @949 if a2 == 0
      :                          @947
 17329: 82 1a 58                 a3 = u64 [sp + 0x58]
 17332: 82 17 50                 a0 = u64 [sp + 0x50]
 17335: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 17338: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17341: b4 a0 02 c2 01           ra = 450, jump [a3]
      :                          @948 [@dyn 225]
 17346: 52 07 55 01              jump @978 if a0 != 0
      :                          @949
 17350: 81 67 10                 a0 = i32 [s1 + 0x10]
 17353: 7a 17 60                 u32 [sp + 0x60] = a0
 17356: 7c 67 18                 a0 = u8 [s1 + 0x18]
 17359: 78 17 68                 u8 [sp + 0x68] = a0
 17362: 81 67 14                 a0 = i32 [s1 + 0x14]
 17365: 7a 17 64                 u32 [sp + 0x64] = a0
 17368: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17371: 82 67                    a0 = u64 [s1]
 17373: 51 08 26                 jump @954 if a1 == 0
      :                          @950
 17376: 52 18 01 16              jump @952 if a1 != 1
      :                          @951
 17380: 97 77 04                 a0 = a0 << 0x4
 17383: 82 18 18                 a1 = u64 [sp + 0x18]
 17386: c8 87 07                 a0 = a0 + a1
 17389: 82 78 08                 a1 = u64 [a0 + 0x8]
 17392: 82 19 10                 a2 = u64 [sp + 0x10]
 17395: aa 98 07                 jump @953 if a1 == a2
      :                          @952
 17398: 33 08                    a1 = 0
 17400: 28 0f                    jump @955
      :                          @953
 17402: 82 77                    a0 = u64 [a0]
 17404: 82 77                    a0 = u64 [a0]
 17406: 33 08 01                 a1 = 0x1
 17409: 28 06                    jump @955
      :                          @954
 17411: 33 08 01                 a1 = 0x1
 17414: 01                       fallthrough
      :                          @955
 17415: 7b 18 30                 u64 [sp + 0x30] = a1
 17418: 7b 17 38                 u64 [sp + 0x38] = a0
 17421: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 17424: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 17427: 51 08 26                 jump @960 if a1 == 0
      :                          @956
 17430: 52 18 01 16              jump @958 if a1 != 1
      :                          @957
 17434: 97 77 04                 a0 = a0 << 0x4
 17437: 82 18 18                 a1 = u64 [sp + 0x18]
 17440: c8 87 07                 a0 = a0 + a1
 17443: 82 78 08                 a1 = u64 [a0 + 0x8]
 17446: 82 19 10                 a2 = u64 [sp + 0x10]
 17449: aa 98 07                 jump @959 if a1 == a2
      :                          @958
 17452: 33 08                    a1 = 0
 17454: 28 0f                    jump @961
      :                          @959
 17456: 82 77                    a0 = u64 [a0]
 17458: 82 77                    a0 = u64 [a0]
 17460: 33 08 01                 a1 = 0x1
 17463: 28 06                    jump @961
      :                          @960
 17465: 33 08 01                 a1 = 0x1
 17468: 01                       fallthrough
      :                          @961
 17469: 7b 18 40                 u64 [sp + 0x40] = a1
 17472: 7b 17 48                 u64 [sp + 0x48] = a0
 17475: 82 67 08                 a0 = u64 [s1 + 0x8]
 17478: 97 77 04                 a0 = a0 << 0x4
 17481: 82 18 18                 a1 = u64 [sp + 0x18]
 17484: c8 78 08                 a1 = a1 + a0
 17487: 82 87                    a0 = u64 [a1]
 17489: 82 89 08                 a2 = u64 [a1 + 0x8]
 17492: 95 18 30                 a1 = sp + 0x30
 17495: b4 90 02 c4 01           ra = 452, jump [a2]
      :                          @962 [@dyn 226]
 17500: 52 07 bb 00              jump @978 if a0 != 0
      :                          @963
 17504: 95 55 10                 s0 = s0 + 0x10
 17507: 82 18 20                 a1 = u64 [sp + 0x20]
 17510: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 17513: 95 66 38                 s1 = s1 + 0x38
 17516: 82 17 28                 a0 = u64 [sp + 0x28]
 17519: 95 77 01                 a0 = a0 + 0x1
 17522: 7b 17 28                 u64 [sp + 0x28] = a0
 17525: 52 08 34 ff              jump @946 if a1 != 0
      :                          @964
 17529: 28 6b                    jump @973
      :                          @965
 17531: 82 97 18                 a0 = u64 [a2 + 0x18]
 17534: 51 07 73                 jump @975 if a0 == 0
      :                          @966
 17537: 82 95 10                 s0 = u64 [a2 + 0x10]
 17540: 33 0a                    a3 = 0
 17542: 97 78 04                 a1 = a0 << 0x4
 17545: c8 58 08                 a1 = a1 + s0
 17548: 7b 18 20                 u64 [sp + 0x20] = a1
 17551: 7b 19 08                 u64 [sp + 0x8] = a2
 17554: 82 96                    s1 = u64 [a2]
 17556: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17559: 97 77 04                 a0 = a0 << 0x4
 17562: 98 77 04                 a0 = a0 >> 0x4
 17565: 95 77 01                 a0 = a0 + 0x1
 17568: 7b 17                    u64 [sp] = a0
 17570: 95 66 08                 s1 = s1 + 0x8
 17573: 01                       fallthrough
      :                          @967
 17574: 7b 1a 28                 u64 [sp + 0x28] = a3
 17577: 82 69                    a2 = u64 [s1]
 17579: 51 09 17                 jump @970 if a2 == 0
      :                          @968
 17582: 82 1a 58                 a3 = u64 [sp + 0x58]
 17585: 82 17 50                 a0 = u64 [sp + 0x50]
 17588: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17591: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17594: b4 a0 02 c6 01           ra = 454, jump [a3]
      :                          @969 [@dyn 227]
 17599: 52 07 58                 jump @978 if a0 != 0
      :                          @970
 17602: 82 57                    a0 = u64 [s0]
 17604: 82 59 08                 a2 = u64 [s0 + 0x8]
 17607: 95 18 30                 a1 = sp + 0x30
 17610: b4 90 02 c8 01           ra = 456, jump [a2]
      :                          @971 [@dyn 228]
 17615: 52 07 48                 jump @978 if a0 != 0
      :                          @972
 17618: 95 66 10                 s1 = s1 + 0x10
 17621: 95 55 10                 s0 = s0 + 0x10
 17624: 82 1a 28                 a3 = u64 [sp + 0x28]
 17627: 95 aa 01                 a3 = a3 + 0x1
 17630: 82 17 20                 a0 = u64 [sp + 0x20]
 17633: ab 75 c5                 jump @967 if s0 != a0
      :                          @973
 17636: 82 19 08                 a2 = u64 [sp + 0x8]
 17639: 82 1a                    a3 = u64 [sp]
 17641: 82 97 08                 a0 = u64 [a2 + 0x8]
 17644: ac 7a 0d                 jump @976 if a3 <u a0
      :                          @974
 17647: 28 2d                    jump @979
      :                          @975
 17649: 33 0a                    a3 = 0
 17651: 82 97 08                 a0 = u64 [a2 + 0x8]
 17654: 54 07 26                 jump @979 if a0 <=u 0
      :                          @976
 17657: 82 97                    a0 = u64 [a2]
 17659: 97 a8 04                 a1 = a3 << 0x4
 17662: c8 87 09                 a2 = a0 + a1
 17665: 82 1a 58                 a3 = u64 [sp + 0x58]
 17668: 82 17 50                 a0 = u64 [sp + 0x50]
 17671: 82 98                    a1 = u64 [a2]
 17673: 82 99 08                 a2 = u64 [a2 + 0x8]
 17676: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17679: b4 a0 02 ca 01           ra = 458, jump [a3]
      :                          @977 [@dyn 229]
 17684: 51 07 08                 jump @979 if a0 == 0
      :                          @978
 17687: 33 07 01                 a0 = 0x1
 17690: 28 05                    jump @980
      :                          @979
 17692: 33 07                    a0 = 0
 17694: 01                       fallthrough
      :                          @980
 17695: 82 10 80 00              ra = u64 [sp + 0x80]
 17699: 82 15 78                 s0 = u64 [sp + 0x78]
 17702: 82 16 70                 s1 = u64 [sp + 0x70]
 17705: 95 11 88 00              sp = sp + 0x88
 17709: 32 00                    ret
      :                          @981 [@dyn 230]
 17711: 32 00                    ret
      :                          @982 [@dyn 231]
 17713: 95 11 80                 sp = sp + 0xffffffffffffff80
 17716: 7b 10 78                 u64 [sp + 0x78] = ra
 17719: 7b 15 70                 u64 [sp + 0x70] = s0
 17722: 7b 16 68                 u64 [sp + 0x68] = s1
 17725: 64 92                    t0 = a2
 17727: 33 00                    ra = 0
 17729: 33 0b                    a4 = 0
 17731: 33 05                    s0 = 0
 17733: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 17743: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 17749: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 17759: 82 79 10                 a2 = u64 [a0 + 0x10]
 17762: 7b 19 48                 u64 [sp + 0x48] = a2
 17765: 82 79                    a2 = u64 [a0]
 17767: 7b 19 38                 u64 [sp + 0x38] = a2
 17770: 82 77 08                 a0 = u64 [a0 + 0x8]
 17773: 7b 17 30                 u64 [sp + 0x30] = a0
 17776: 33 07 40 10 01           a0 = 0x11040
 17781: 7b 17 08                 u64 [sp + 0x8] = a0
 17784: 3a 07 10 00 03           a0 = u64 [0x30010]
 17789: 7b 17 60                 u64 [sp + 0x60] = a0
 17792: 7b 18 58                 u64 [sp + 0x58] = a1
 17795: 95 88 08                 a1 = a1 + 0x8
 17798: 7b 18                    u64 [sp] = a1
 17800: 33 0c 0a                 a5 = 0xa
 17803: 7b 12 20                 u64 [sp + 0x20] = t0
 17806: 7b 13 18                 u64 [sp + 0x18] = t1
 17809: 7b 14 10                 u64 [sp + 0x10] = t2
 17812: 28 3b                    jump @986
      :                          @983
 17814: 64 06                    s1 = ra
 17816: c8 89 07                 a0 = a2 + a1
 17819: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 17822: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17825: 88 77 01                 a0 = a0 <u 0x1
 17828: 01                       fallthrough
      :                          @984
 17829: 82 1a 48                 a3 = u64 [sp + 0x48]
 17832: 78 a7                    u8 [a3] = a0
 17834: 82 17 30                 a0 = u64 [sp + 0x30]
 17837: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17840: 82 17 38                 a0 = u64 [sp + 0x38]
 17843: b4 a0 02 d0 01           ra = 464, jump [a3]
      :                          @985 [@dyn 232]
 17848: 64 5b                    a4 = s0
 17850: 82 12 20                 t0 = u64 [sp + 0x20]
 17853: 82 13 18                 t1 = u64 [sp + 0x18]
 17856: 82 14 10                 t2 = u64 [sp + 0x10]
 17859: 64 60                    ra = s1
 17861: 33 0c 0a                 a5 = 0xa
 17864: 82 15 40                 s0 = u64 [sp + 0x40]
 17867: 52 07 64 01              jump @1027 if a0 != 0
      :                          @986
 17871: 84 57 ff 00              a0 = s0 & 0xff
 17875: 52 07 58 01              jump @1026 if a0 != 0
      :                          @987
 17879: 7b 1b 50                 u64 [sp + 0x50] = a4
 17882: ae 02 0a                 jump @990 if t0 >=u ra
      :                          @988
 17885: 28 ef 00                 jump @1017
      :                          @989
 17888: ac 02 ec 00              jump @1017 if t0 <u ra
      :                          @990
 17892: c9 02 08                 a1 = t0 - ra
 17895: 82 16 58                 s1 = u64 [sp + 0x58]
 17898: c8 06 06                 s1 = s1 + ra
 17901: 55 18 10 1d              jump @996 if a1 >=u 16
      :                          @991
 17905: aa 02 d8 00              jump @1016 if t0 == ra
      :                          @992
 17909: 33 0a                    a3 = 0
 17911: 01                       fallthrough
      :                          @993
 17912: c8 a6 07                 a0 = s1 + a3
 17915: 7c 77                    a0 = u8 [a0]
 17917: aa c7 a5 00              jump @1011 if a0 == a5
      :                          @994
 17921: 95 aa 01                 a3 = a3 + 0x1
 17924: ab a8 f4                 jump @993 if a1 != a3
      :                          @995
 17927: 28 c2 00                 jump @1016
      :                          @996
 17930: 95 69 07                 a2 = s1 + 0x7
 17933: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 17936: c9 6a 07                 a0 = a3 - s1
 17939: d3 6a 0a                 a3 = a3 ^ s1
 17942: 88 aa 01                 a3 = a3 <u 0x1
 17945: 88 7b 01                 a4 = a0 <u 0x1
 17948: d4 ba 0a                 a3 = a3 | a4
 17951: 51 0a 45                 jump @1002 if a3 == 0
      :                          @997
 17954: 33 07                    a0 = 0
 17956: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17959: 82 1b                    a4 = u64 [sp]
 17961: c8 0b 0b                 a4 = a4 + ra
 17964: 28 08                    jump @999
      :                          @998
 17966: 82 1b                    a4 = u64 [sp]
 17968: c8 0b 0b                 a4 = a4 + ra
 17971: 01                       fallthrough
      :                          @999
 17972: c8 76 0c                 a5 = s1 + a0
 17975: 82 cc                    a5 = u64 [a5]
 17977: c8 7b 09                 a2 = a4 + a0
 17980: 82 99                    a2 = u64 [a2]
 17982: d3 4c 05                 s0 = a5 ^ t2
 17985: c8 35 05                 s0 = s0 + t1
 17988: e0 c5 0c                 a5 = s0 & ~a5
 17991: d3 49 05                 s0 = a2 ^ t2
 17994: c8 35 05                 s0 = s0 + t1
 17997: e0 95 09                 a2 = s0 & ~a2
 18000: d4 c9 09                 a2 = a2 | a5
 18003: 82 1c 60                 a5 = u64 [sp + 0x60]
 18006: d2 c9 09                 a2 = a2 & a5
 18009: 52 09 1f                 jump @1005 if a2 != 0
      :                          @1000
 18012: 95 77 10                 a0 = a0 + 0x10
 18015: ae 7a d5                 jump @999 if a3 >=u a0
      :                          @1001
 18018: 28 16                    jump @1005
      :                          @1002
 18020: c8 a6 0b                 a4 = s1 + a3
 18023: 7c bb                    a4 = u8 [a4]
 18025: aa cb 51                 jump @1014 if a4 == a5
      :                          @1003
 18028: 95 aa 01                 a3 = a3 + 0x1
 18031: ab a7 f5                 jump @1002 if a0 != a3
      :                          @1004
 18034: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 18037: ae 7a b9                 jump @998 if a3 >=u a0
      :                          @1005
 18040: aa 87 9b 00              jump @1023 if a0 == a1
      :                          @1006
 18044: 33 0a                    a3 = 0
 18046: c8 76 06                 s1 = s1 + a0
 18049: c9 72 08                 a1 = t0 - a0
 18052: c9 08 08                 a1 = a1 - ra
 18055: 33 0c 0a                 a5 = 0xa
 18058: 82 1b 50                 a4 = u64 [sp + 0x50]
 18061: 01                       fallthrough
      :                          @1007
 18062: c8 a6 09                 a2 = s1 + a3
 18065: 7c 99                    a2 = u8 [a2]
 18067: aa c9 0b                 jump @1010 if a2 == a5
      :                          @1008
 18070: 95 aa 01                 a3 = a3 + 0x1
 18073: ab a8 f5                 jump @1007 if a1 != a3
      :                          @1009
 18076: 28 2d                    jump @1016
      :                          @1010
 18078: c8 7a 0a                 a3 = a3 + a0
 18081: 01                       fallthrough
      :                          @1011
 18082: c8 0a 0a                 a3 = a3 + ra
 18085: 95 a0 01                 ra = a3 + 0x1
 18088: ae 2a 38 ff              jump @989 if a3 >=u t0
      :                          @1012
 18092: 82 17 58                 a0 = u64 [sp + 0x58]
 18095: c8 7a 0a                 a3 = a3 + a0
 18098: 7c a7                    a0 = u8 [a3]
 18100: ab c7 2c ff              jump @989 if a0 != a5
      :                          @1013
 18104: 28 62                    jump @1024
      :                          @1014
 18106: 82 1b 50                 a4 = u64 [sp + 0x50]
 18109: c8 0a 0a                 a3 = a3 + ra
 18112: 95 a0 01                 ra = a3 + 0x1
 18115: ac 2a e9                 jump @1012 if a3 <u t0
      :                          @1015
 18118: 28 1a ff                 jump @989
      :                          @1016
 18121: 64 20                    ra = t0
 18123: 01                       fallthrough
      :                          @1017
 18124: 49 11 40 01              u64 [sp + 64] = 0x1
 18128: 64 b5                    s0 = a4
 18130: 64 26                    s1 = t0
 18132: aa 2b 57                 jump @1026 if a4 == t0
      :                          @1018
 18135: 82 17 48                 a0 = u64 [sp + 0x48]
 18138: 7c 77                    a0 = u8 [a0]
 18140: 51 07 23                 jump @1021 if a0 == 0
      :                          @1019
 18143: 82 17 30                 a0 = u64 [sp + 0x30]
 18146: 82 7a 18                 a3 = u64 [a0 + 0x18]
 18149: 33 09 04                 a2 = 0x4
 18152: 82 17 38                 a0 = u64 [sp + 0x38]
 18155: 82 18 08                 a1 = u64 [sp + 0x8]
 18158: 7b 10 28                 u64 [sp + 0x28] = ra
 18161: b4 a0 02 d2 01           ra = 466, jump [a3]
      :                          @1020 [@dyn 233]
 18166: 82 1b 50                 a4 = u64 [sp + 0x50]
 18169: 82 10 28                 ra = u64 [sp + 0x28]
 18172: 52 07 33                 jump @1027 if a0 != 0
      :                          @1021
 18175: c9 b6 09                 a2 = s1 - a4
 18178: 82 18 58                 a1 = u64 [sp + 0x58]
 18181: c8 b8 08                 a1 = a1 + a4
 18184: ab b6 8e fe              jump @983 if s1 != a4
      :                          @1022
 18188: 64 06                    s1 = ra
 18190: 33 07                    a0 = 0
 18192: 28 95 fe                 jump @984
      :                          @1023
 18195: 64 20                    ra = t0
 18197: 82 1b 50                 a4 = u64 [sp + 0x50]
 18200: 28 b4                    jump @1017
      :                          @1024
 18202: 49 11 40                 u64 [sp + 64] = 0
 18205: 64 05                    s0 = ra
 18207: 64 06                    s1 = ra
 18209: 82 17 48                 a0 = u64 [sp + 0x48]
 18212: 7c 77                    a0 = u8 [a0]
 18214: 52 07 b9                 jump @1019 if a0 != 0
      :                          @1025
 18217: 28 d6                    jump @1021
      :                          @1026
 18219: 33 07                    a0 = 0
 18221: 28 06                    jump @1028
      :                          @1027
 18223: 33 07 01                 a0 = 0x1
 18226: 01                       fallthrough
      :                          @1028
 18227: 82 10 78                 ra = u64 [sp + 0x78]
 18230: 82 15 70                 s0 = u64 [sp + 0x70]
 18233: 82 16 68                 s1 = u64 [sp + 0x68]
 18236: 95 11 80 00              sp = sp + 0x80
 18240: 32 00                    ret
      :                          @1029 [@dyn 234]
 18242: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18245: 7b 10 20                 u64 [sp + 0x20] = ra
 18248: 7b 15 18                 u64 [sp + 0x18] = s0
 18251: 7b 16 10                 u64 [sp + 0x10] = s1
 18254: 82 75 10                 s0 = u64 [a0 + 0x10]
 18257: 7c 59                    a2 = u8 [s0]
 18259: 82 7b                    a4 = u64 [a0]
 18261: 82 76 08                 s1 = u64 [a0 + 0x8]
 18264: 51 09 33                 jump @1033 if a2 == 0
      :                          @1030
 18267: 82 6a 18                 a3 = u64 [s1 + 0x18]
 18270: 7b 18 08                 u64 [sp + 0x8] = a1
 18273: 33 08 40 10 01           a1 = 0x11040
 18278: 33 09 04                 a2 = 0x4
 18281: 64 b7                    a0 = a4
 18283: 7b 1b                    u64 [sp] = a4
 18285: b4 a0 02 d6 01           ra = 470, jump [a3]
      :                          @1031 [@dyn 235]
 18290: 82 18 08                 a1 = u64 [sp + 0x8]
 18293: 82 1b                    a4 = u64 [sp]
 18295: 51 07 14                 jump @1033 if a0 == 0
      :                          @1032
 18298: 33 07 01                 a0 = 0x1
 18301: 82 10 20                 ra = u64 [sp + 0x20]
 18304: 82 15 18                 s0 = u64 [sp + 0x18]
 18307: 82 16 10                 s1 = u64 [sp + 0x10]
 18310: 95 11 28                 sp = sp + 0x28
 18313: 32 00                    ret
      :                          @1033
 18315: 83 87                    i32 a0 = a1 + 0
 18317: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 18320: 88 77 01                 a0 = a0 <u 0x1
 18323: 78 57                    u8 [s0] = a0
 18325: 82 6c 20                 a5 = u64 [s1 + 0x20]
 18328: 64 b7                    a0 = a4
 18330: 82 10 20                 ra = u64 [sp + 0x20]
 18333: 82 15 18                 s0 = u64 [sp + 0x18]
 18336: 82 16 10                 s1 = u64 [sp + 0x10]
 18339: 95 11 28                 sp = sp + 0x28
 18342: 32 0c                    jump [a5]
      :                          @1034 [@dyn 236]
 18344: 64 8a                    a3 = a1
 18346: 33 08 00 10 01           a1 = 0x11000
 18351: 64 a9                    a2 = a3
 18353: 28 99 fb                 jump @943
      :                          @1035
 18356: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 18360: 7b 10 88 00              u64 [sp + 0x88] = ra
 18364: 7b 15 80 00              u64 [sp + 0x80] = s0
 18368: 7b 16 78                 u64 [sp + 0x78] = s1
 18371: 64 75                    s0 = a0
 18373: 7c 77 08                 a0 = u8 [a0 + 0x8]
 18376: 64 8b                    a4 = a1
 18378: 33 08 01                 a1 = 0x1
 18381: 33 06 01                 s1 = 0x1
 18384: 51 07 1d                 jump @1037 if a0 == 0
      :                          @1036
 18387: 78 56 08                 u8 [s0 + 0x8] = s1
 18390: 46 15 09 01              u8 [s0 + 9] = 0x1
 18394: 64 57                    a0 = s0
 18396: 82 10 88 00              ra = u64 [sp + 0x88]
 18400: 82 15 80 00              s0 = u64 [sp + 0x80]
 18404: 82 16 78                 s1 = u64 [sp + 0x78]
 18407: 95 11 90 00              sp = sp + 0x90
 18411: 32 00                    ret
      :                          @1037
 18413: 64 9a                    a3 = a2
 18415: 82 5c                    a5 = u64 [s0]
 18417: 80 c7 34                 a0 = u32 [a5 + 0x34]
 18420: 7c 58 09                 a1 = u8 [s0 + 0x9]
 18423: 84 79 04                 a2 = a0 & 0x4
 18426: 52 09 45                 jump @1043 if a2 != 0
      :                          @1038
 18429: 51 08 32                 jump @1041 if a1 == 0
      :                          @1039
 18432: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18435: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18438: 82 83 18                 t1 = u64 [a1 + 0x18]
 18441: 33 08 48 10 01           a1 = 0x11048
 18446: 33 09 02                 a2 = 0x2
 18449: 64 a6                    s1 = a3
 18451: 7b 1b 10                 u64 [sp + 0x10] = a4
 18454: 7b 1c 08                 u64 [sp + 0x8] = a5
 18457: b4 30 02 da 01           ra = 474, jump [t1]
      :                          @1040 [@dyn 237]
 18462: 82 1c 08                 a5 = u64 [sp + 0x8]
 18465: 82 1b 10                 a4 = u64 [sp + 0x10]
 18468: 64 6a                    a3 = s1
 18470: 33 08 01                 a1 = 0x1
 18473: 33 06 01                 s1 = 0x1
 18476: 52 07 a7                 jump @1036 if a0 != 0
      :                          @1041
 18479: 64 b7                    a0 = a4
 18481: 64 c8                    a1 = a5
 18483: b4 a0 02 dc 01           ra = 476, jump [a3]
      :                          @1042 [@dyn 238]
 18488: 33 08 01                 a1 = 0x1
 18491: 64 76                    s1 = a0
 18493: 28 96                    jump @1036
      :                          @1043
 18495: 52 08 37                 jump @1047 if a1 != 0
      :                          @1044
 18498: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18501: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18504: 82 83 18                 t1 = u64 [a1 + 0x18]
 18507: 33 08 4c 10 01           a1 = 0x1104c
 18512: 33 09 01                 a2 = 0x1
 18515: 33 06 01                 s1 = 0x1
 18518: 7b 1a                    u64 [sp] = a3
 18520: 7b 1b 10                 u64 [sp + 0x10] = a4
 18523: 7b 1c 08                 u64 [sp + 0x8] = a5
 18526: b4 30 02 de 01           ra = 478, jump [t1]
      :                          @1045 [@dyn 239]
 18531: 82 1c 08                 a5 = u64 [sp + 0x8]
 18534: 82 1b 10                 a4 = u64 [sp + 0x10]
 18537: 82 1a                    a3 = u64 [sp]
 18539: 33 08 01                 a1 = 0x1
 18542: 52 07 65 ff              jump @1036 if a0 != 0
      :                          @1046
 18546: 81 c7 34                 a0 = i32 [a5 + 0x34]
 18549: 01                       fallthrough
      :                          @1047
 18550: 33 06 01                 s1 = 0x1
 18553: 78 16 37                 u8 [sp + 0x37] = s1
 18556: 82 c8 20                 a1 = u64 [a5 + 0x20]
 18559: 82 c9 28                 a2 = u64 [a5 + 0x28]
 18562: 7b 18 18                 u64 [sp + 0x18] = a1
 18565: 7b 19 20                 u64 [sp + 0x20] = a2
 18568: 95 18 37                 a1 = sp + 0x37
 18571: 7b 18 28                 u64 [sp + 0x28] = a1
 18574: 81 c8 30                 a1 = i32 [a5 + 0x30]
 18577: 7c c9 38                 a2 = u8 [a5 + 0x38]
 18580: 82 c3                    t1 = u64 [a5]
 18582: 82 c4 08                 t2 = u64 [a5 + 0x8]
 18585: 82 c0 10                 ra = u64 [a5 + 0x10]
 18588: 82 c2 18                 t0 = u64 [a5 + 0x18]
 18591: 7a 17 6c                 u32 [sp + 0x6c] = a0
 18594: 7a 18 68                 u32 [sp + 0x68] = a1
 18597: 78 19 70                 u8 [sp + 0x70] = a2
 18600: 7b 13 38                 u64 [sp + 0x38] = t1
 18603: 7b 14 40                 u64 [sp + 0x40] = t2
 18606: 7b 10 48                 u64 [sp + 0x48] = ra
 18609: 7b 12 50                 u64 [sp + 0x50] = t0
 18612: 95 17 18                 a0 = sp + 0x18
 18615: 7b 17 58                 u64 [sp + 0x58] = a0
 18618: 33 07 00 10 01           a0 = 0x11000
 18623: 7b 17 60                 u64 [sp + 0x60] = a0
 18626: 95 18 38                 a1 = sp + 0x38
 18629: 64 b7                    a0 = a4
 18631: b4 a0 02 e0 01           ra = 480, jump [a3]
      :                          @1048 [@dyn 240]
 18636: 52 07 21                 jump @1051 if a0 != 0
      :                          @1049
 18639: 82 18 60                 a1 = u64 [sp + 0x60]
 18642: 82 17 58                 a0 = u64 [sp + 0x58]
 18645: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18648: 33 08 4a 10 01           a1 = 0x1104a
 18653: 33 09 02                 a2 = 0x2
 18656: b4 a0 02 e2 01           ra = 482, jump [a3]
      :                          @1050 [@dyn 241]
 18661: 64 76                    s1 = a0
 18663: 33 08 01                 a1 = 0x1
 18666: 28 e9 fe                 jump @1036
      :                          @1051
 18669: 33 08 01                 a1 = 0x1
 18672: 28 e3 fe                 jump @1036
      :                          @1052
 18675: 51 08 9b 00              jump @1073 if a1 == 0
      :                          @1053
 18679: 64 79                    a2 = a0
 18681: 7c 77                    a0 = u8 [a0]
 18683: 51 07 91 00              jump @1072 if a0 == 0
      :                          @1054
 18687: 51 27 ff 00 90 00        jump @1074 if a0 == 255
      :                          @1055
 18693: 6c 7a                    a3 = sext.b a0
 18695: 57 0a 09                 jump @1057 if a3 <s 0
      :                          @1056
 18698: 33 0a                    a3 = 0
 18700: 33 08                    a1 = 0
 18702: 28 73                    jump @1071
      :                          @1057
 18704: 55 27 c0 00 0d           jump @1059 if a0 >=u 192
      :                          @1058
 18709: 33 0a 01                 a3 = 0x1
 18712: 33 0b 80                 a4 = 0xffffffffffffff80
 18715: 28 4a                    jump @1068
      :                          @1059
 18717: 55 27 e0 00 0e           jump @1061 if a0 >=u 224
      :                          @1060
 18722: 33 0a 02                 a3 = 0x2
 18725: 33 0b 40 ff              a4 = 0xffffffffffffff40
 18729: 28 3c                    jump @1068
      :                          @1061
 18731: 55 27 f0 00 0e           jump @1063 if a0 >=u 240
      :                          @1062
 18736: 33 0a 03                 a3 = 0x3
 18739: 33 0b 20 ff              a4 = 0xffffffffffffff20
 18743: 28 2e                    jump @1068
      :                          @1063
 18745: 55 27 f8 00 0e           jump @1065 if a0 >=u 248
      :                          @1064
 18750: 33 0a 04                 a3 = 0x4
 18753: 33 0b 10 ff              a4 = 0xffffffffffffff10
 18757: 28 20                    jump @1068
      :                          @1065
 18759: 55 27 fc 00 0e           jump @1067 if a0 >=u 252
      :                          @1066
 18764: 33 0a 05                 a3 = 0x5
 18767: 33 0b 08 ff              a4 = 0xffffffffffffff08
 18771: 28 12                    jump @1068
      :                          @1067
 18773: 88 7a fe 00              a3 = a0 <u 0xfe
 18777: 33 0b 04 ff              a4 = 0xffffffffffffff04
 18781: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 18785: 85 aa 07                 a3 = a3 ^ 0x7
 18788: 01                       fallthrough
      :                          @1068
 18789: ae 8a 2b                 jump @1075 if a3 >=u a1
      :                          @1069
 18792: 33 08                    a1 = 0
 18794: c8 b7 07                 a0 = a0 + a4
 18797: 64 ab                    a4 = a3
 18799: 01                       fallthrough
      :                          @1070
 18800: c8 b9 0c                 a5 = a2 + a4
 18803: 7c cc                    a5 = u8 [a5]
 18805: 97 88 08                 a1 = a1 << 0x8
 18808: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 18811: d4 c8 08                 a1 = a1 | a5
 18814: 52 0b f2                 jump @1070 if a4 != 0
      :                          @1071
 18817: 8a a9 03                 i32 a2 = a3 << 0x3
 18820: cf 97 07                 a0 = a0 << a2
 18823: c8 87 07                 a0 = a0 + a1
 18826: 32 00                    ret
      :                          @1072
 18828: 32 00                    ret
      :                          @1073
 18830: 00                       trap
      :                          @1074
 18831: 00                       trap
      :                          @1075
 18832: 00                       trap
      :                          @1076
 18833: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 18837: 7b 10 00 01              u64 [sp + 0x100] = ra
 18841: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 18845: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 18849: 7b 17                    u64 [sp] = a0
 18851: 78 18 0f                 u8 [sp + 0xf] = a1
 18854: 7b 17 10                 u64 [sp + 0x10] = a0
 18857: 95 16 0f                 s1 = sp + 0xf
 18860: 33 05 01                 s0 = 0x1
 18863: 95 17 0f                 a0 = sp + 0xf
 18866: 33 08 01                 a1 = 0x1
 18869: 95 19 10                 a2 = sp + 0x10
 18872: 33 0a 08                 a3 = 0x8
 18875: 0a 03                    ecalli 3 // 'write'
 18877: 7b 16 60                 u64 [sp + 0x60] = s1
 18880: 33 07 e8 01              a0 = 0x1e8
 18884: 7b 17 68                 u64 [sp + 0x68] = a0
 18887: 64 17                    a0 = sp
 18889: 7b 17 70                 u64 [sp + 0x70] = a0
 18892: 33 07 16                 a0 = 0x16
 18895: 7b 17 78                 u64 [sp + 0x78] = a0
 18898: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18903: 49 21 90 00 02           u64 [sp + 144] = 0x2
 18908: 49 21 a0 00              u64 [sp + 160] = 0
 18912: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 18922: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 18926: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 18931: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 18936: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 18941: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 18945: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 18949: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 18954: 33 08 e0 12 01           a1 = 0x112e0
 18959: 7b 18 30                 u64 [sp + 0x30] = a1
 18962: 49 11 38 02              u64 [sp + 56] = 0x2
 18966: 95 18 80 00              a1 = sp + 0x80
 18970: 7b 18 50                 u64 [sp + 0x50] = a1
 18973: 49 11 58 02              u64 [sp + 88] = 0x2
 18977: 95 18 60                 a1 = sp + 0x60
 18980: 7b 18 40                 u64 [sp + 0x40] = a1
 18983: 49 11 48 02              u64 [sp + 72] = 0x2
 18987: 95 17 18                 a0 = sp + 0x18
 18990: 95 18 30                 a1 = sp + 0x30
 18993: 50 20 e4 01 e9 f1        ra = 484, jump @798
      :                          @1077 [@dyn 242]
 18999: 82 15 20                 s0 = u64 [sp + 0x20]
 19002: 82 1b 28                 a4 = u64 [sp + 0x28]
 19005: 82 16 18                 s1 = u64 [sp + 0x18]
 19008: 33 07 02                 a0 = 0x2
 19011: 33 08                    a1 = 0
 19013: 33 09                    a2 = 0
 19015: 64 5a                    a3 = s0
 19017: 33 00 e6 01              ra = 0x1e6
 19021: 0a 64                    ecalli 100 // 'log'
 19023: 01                       fallthrough
      :                          @1078 [@dyn 243]
 19024: 33 07 00 00 f0           a0 = 0xfffffffffff00000
 19029: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 19034: ac 78 24                 jump @1084 if a1 <u a0
      :                          @1079
 19037: 33 07 50 00 03           a0 = 0x30050
 19042: 95 77 00 00 10           a0 = a0 + 0x100000
 19047: 01                       fallthrough
      :                          @1080
 19048: 82 78                    a1 = u64 [a0]
 19050: c9 87 09                 a2 = a0 - a1
 19053: ab 59 11                 jump @1084 if a2 != s0
      :                          @1081
 19056: c9 68 09                 a2 = a1 - s1
 19059: 01                       fallthrough
      :                          @1082
 19060: 82 7a                    a3 = u64 [a0]
 19062: ab 8a f2                 jump @1080 if a3 != a1
      :                          @1083
 19065: 7b 79                    u64 [a0] = a2
 19067: 33 0b                    a4 = 0
 19069: 01                       fallthrough
      :                          @1084
 19070: 82 10 00 01              ra = u64 [sp + 0x100]
 19074: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 19078: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 19082: 95 11 08 01              sp = sp + 0x108
 19086: 32 00                    ret
      :                          @1085 [@dyn 244]
 19088: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 19091: 7b 10 28                 u64 [sp + 0x28] = ra
 19094: 7b 15 20                 u64 [sp + 0x20] = s0
 19097: 7b 16 18                 u64 [sp + 0x18] = s1
 19100: 64 86                    s1 = a1
 19102: 82 88 28                 a1 = u64 [a1 + 0x28]
 19105: 82 6a 20                 a3 = u64 [s1 + 0x20]
 19108: 82 8b 18                 a4 = u64 [a1 + 0x18]
 19111: 64 75                    s0 = a0
 19113: 33 08 f8 0f 01           a1 = 0x10ff8
 19118: 33 09 01                 a2 = 0x1
 19121: 64 a7                    a0 = a3
 19123: b4 b0 02 ea 01           ra = 490, jump [a4]
      :                          @1086 [@dyn 245]
 19128: 7b 16                    u64 [sp] = s1
 19130: 78 17 08                 u8 [sp + 0x8] = a0
 19133: 46 11 09                 u8 [sp + 9] = 0
 19136: 7b 15 10                 u64 [sp + 0x10] = s0
 19139: 33 09 f0 01              a2 = 0x1f0
 19143: 64 17                    a0 = sp
 19145: 95 18 10                 a1 = sp + 0x10
 19148: 50 20 ec 01 e8 fc        ra = 492, jump @1035
      :                          @1087 [@dyn 246]
 19154: 33 07 01                 a0 = 0x1
 19157: 7c 18 08                 a1 = u8 [sp + 0x8]
 19160: 52 08 1b                 jump @1089 if a1 != 0
      :                          @1088
 19163: 82 17                    a0 = u64 [sp]
 19165: 82 78 28                 a1 = u64 [a0 + 0x28]
 19168: 82 77 20                 a0 = u64 [a0 + 0x20]
 19171: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19174: 33 08 4d 10 01           a1 = 0x1104d
 19179: 33 09 01                 a2 = 0x1
 19182: b4 a0 02 ee 01           ra = 494, jump [a3]
      :                          @1089 [@dyn 247]
 19187: 82 10 28                 ra = u64 [sp + 0x28]
 19190: 82 15 20                 s0 = u64 [sp + 0x20]
 19193: 82 16 18                 s1 = u64 [sp + 0x18]
 19196: 95 11 30                 sp = sp + 0x30
 19199: 32 00                    ret
      :                          @1090 [@dyn 248]
 19201: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 19205: 7b 10 80 00              u64 [sp + 0x80] = ra
 19209: 80 89 34                 a2 = u32 [a1 + 0x34]
 19212: 82 77                    a0 = u64 [a0]
 19214: 84 9a 10                 a3 = a2 & 0x10
 19217: 52 0a 16                 jump @1093 if a3 != 0
      :                          @1091
 19220: 84 99 20                 a2 = a2 & 0x20
 19223: 52 09 41                 jump @1096 if a2 != 0
      :                          @1092
 19226: 7c 77                    a0 = u8 [a0]
 19228: 82 10 80 00              ra = u64 [sp + 0x80]
 19232: 95 11 88 00              sp = sp + 0x88
 19236: 28 85 f4                 jump @881
      :                          @1093
 19239: 7c 77                    a0 = u8 [a0]
 19241: 33 0b 81 00              a4 = 0x81
 19245: 95 19 7f                 a2 = sp + 0x7f
 19248: 33 02 57                 t0 = 0x57
 19251: 01                       fallthrough
      :                          @1094
 19252: 64 bc                    a5 = a4
 19254: 84 7b 0f                 a4 = a0 & 0xf
 19257: 97 77 38                 a0 = a0 << 0x38
 19260: 98 77 3c                 a0 = a0 >> 0x3c
 19263: 88 b3 0a                 t1 = a4 <u 0xa
 19266: 33 0a 30                 a3 = 0x30
 19269: da 32 0a                 a3 = t0 if t1 == 0
 19272: be ba 0a                 i32 a3 = a3 + a4
 19275: 78 9a                    u8 [a2] = a3
 19277: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19280: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19283: 52 07 e1                 jump @1094 if a0 != 0
      :                          @1095
 19286: 28 31                    jump @1098
      :                          @1096
 19288: 7c 77                    a0 = u8 [a0]
 19290: 33 0b 81 00              a4 = 0x81
 19294: 95 19 7f                 a2 = sp + 0x7f
 19297: 33 02 37                 t0 = 0x37
 19300: 01                       fallthrough
      :                          @1097
 19301: 64 bc                    a5 = a4
 19303: 84 7b 0f                 a4 = a0 & 0xf
 19306: 97 77 38                 a0 = a0 << 0x38
 19309: 98 77 3c                 a0 = a0 >> 0x3c
 19312: 88 b3 0a                 t1 = a4 <u 0xa
 19315: 33 0a 30                 a3 = 0x30
 19318: da 32 0a                 a3 = t0 if t1 == 0
 19321: be ba 0a                 i32 a3 = a3 + a4
 19324: 78 9a                    u8 [a2] = a3
 19326: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19329: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19332: 52 07 e1                 jump @1097 if a0 != 0
      :                          @1098
 19335: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 19338: 56 27 80 00 28           jump @1101 if a0 >u 128
      :                          @1099
 19343: 9a bb 81 00              a4 = 0x81 - a4
 19347: 64 1a                    a3 = sp
 19349: c8 7a 0a                 a3 = a3 + a0
 19352: 33 09 02                 a2 = 0x2
 19355: 64 87                    a0 = a1
 19357: 33 08 4e 10 01           a1 = 0x1104e
 19362: 50 20 f2 01 2f f5        ra = 498, jump @891
      :                          @1100 [@dyn 249]
 19368: 82 10 80 00              ra = u64 [sp + 0x80]
 19372: 95 11 88 00              sp = sp + 0x88
 19376: 32 00                    ret
      :                          @1101
 19378: 00                       trap
