// RO data = 4672/4672 bytes
// RW data = 24/4176 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [140, 0, 255, 255, 164, 0, 255, 255, 182, 0, 255, 255, 200, 0, 255, 255, 224, 0, 255, 255, 248, 0, 255, 255, 14, 1, 255, 255, 26, 1, 255, 255, 38, 1, 255, 255, 56, 1, 255, 255, 0, 16, 0, 0, 0, 0, 0, 0, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 101, 120, 112, 117, 110, 103, 101, 32, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 32, 111, 117, 116, 112, 117, 116, 61, 247, 255, 255, 255, 255, 255, 255, 255, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 90, 69, 82, 79, 44, 32, 103, 111, 116, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 104, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 238, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 255, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 16, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 27, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 45, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 65, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 79, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 86, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 96, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 116, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 119, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 122, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 135, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 86, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 96, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 153, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 179, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 186, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 201, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 206, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 219, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 219, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 220, 1, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 201, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 251, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 12, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 39, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 60, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 71, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 114, 2, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 126, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 141, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 188, 2, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 234, 2, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 23, 3, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 66, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 86, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 3, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 139, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 168, 3, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 206, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 235, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 7, 4, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 45, 4, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 75, 4, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 127, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 154, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 172, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 190, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 219, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 127, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 237, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 254, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 26, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 127, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 237, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 46, 5, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 61, 5, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 83, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 214, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 150, 5, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 176, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 185, 5, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 46, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 212, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 135, 2, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 232, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 252, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 5, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 42, 6, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 63, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 0, 0, 134, 1, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 170, 1, 0, 0, 0, 0, 0, 0, 176, 1, 0, 0, 0, 0, 0, 0, 180, 1, 0, 0, 0, 0, 0, 0, 163, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 180, 8, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5546
// Code size = 17441 bytes

      :                          @0
     0: 28 aa 05 00 00           jump @100
      :                          @1
     5: 28 8b 15 00 00           jump @282
      :                          @2
    10: 28 7f 32                 jump @677
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 52                 jump @10 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 af 38                 jump @826
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   101: 56 27 80 00 6a           jump @16 if a0 >u 128
      :                          @9
   106: 9a bb 81 00              a4 = 0x81 - a4
   110: 64 1a                    a3 = sp
   112: c8 7a 0a                 a3 = a3 + a0
   115: 28 43                    jump @14
      :                          @10
   117: 7c 77                    a0 = u8 [a0]
   119: 33 0b 81 00              a4 = 0x81
   123: 95 19 7f                 a2 = sp + 0x7f
   126: 33 02 37                 t0 = 0x37
   129: 01                       fallthrough
      :                          @11
   130: 64 bc                    a5 = a4
   132: 84 7b 0f                 a4 = a0 & 0xf
   135: 97 77 38                 a0 = a0 << 0x38
   138: 98 77 3c                 a0 = a0 >> 0x3c
   141: 88 b3 0a                 t1 = a4 <u 0xa
   144: 33 0a 30                 a3 = 0x30
   147: da 32 0a                 a3 = t0 if t1 == 0
   150: be ba 0a                 i32 a3 = a3 + a4
   153: 78 9a                    u8 [a2] = a3
   155: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   158: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   161: 52 07 e1                 jump @11 if a0 != 0
      :                          @12
   164: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   167: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   172: 9a bb 81 00              a4 = 0x81 - a4
   176: 64 1a                    a3 = sp
   178: c8 7a 0a                 a3 = a3 + a0
   181: 01                       fallthrough
      :                          @14
   182: 33 09 02                 a2 = 0x2
   185: 64 87                    a0 = a1
   187: 33 08 77 06 01           a1 = 0x10677
   192: 50 10 04 3c 39           ra = 4, jump @836
      :                          @15 [@dyn 2]
   197: 82 10 80 00              ra = u64 [sp + 0x80]
   201: 95 11 88 00              sp = sp + 0x88
   205: 32 00                    ret
      :                          @16
   207: 00                       trap
      :                          @17 [@dyn 3]
   208: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   211: 7b 10 38                 u64 [sp + 0x38] = ra
   214: 7b 15 30                 u64 [sp + 0x30] = s0
   217: 7b 16 28                 u64 [sp + 0x28] = s1
   220: 7b 18 08                 u64 [sp + 0x8] = a1
   223: 82 89 28                 a2 = u64 [a1 + 0x28]
   226: 82 76                    s1 = u64 [a0]
   228: 82 75 08                 s0 = u64 [a0 + 0x8]
   231: 82 87 20                 a0 = u64 [a1 + 0x20]
   234: 82 9a 18                 a3 = u64 [a2 + 0x18]
   237: 33 08 58 06 01           a1 = 0x10658
   242: 33 09 01                 a2 = 0x1
   245: b4 a0 01 08              ra = 8, jump [a3]
      :                          @18 [@dyn 4]
   249: 82 18 08                 a1 = u64 [sp + 0x8]
   252: 7b 18 10                 u64 [sp + 0x10] = a1
   255: 78 17 18                 u8 [sp + 0x18] = a0
   258: 46 11 19                 u8 [sp + 25] = 0
   261: 51 05 2c                 jump @23 if s0 == 0
      :                          @19
   264: 33 07 02                 a0 = 0x2
   267: 7b 17                    u64 [sp] = a0
   269: 01                       fallthrough
      :                          @20
   270: 95 67 01                 a0 = s1 + 0x1
   273: 7b 17 08                 u64 [sp + 0x8] = a0
   276: 7b 16 20                 u64 [sp + 0x20] = s1
   279: 95 17 10                 a0 = sp + 0x10
   282: 95 18 20                 a1 = sp + 0x20
   285: 82 19                    a2 = u64 [sp]
   287: 50 10 0a b9 3f           ra = 10, jump @980
      :                          @21 [@dyn 5]
   292: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   295: 82 16 08                 s1 = u64 [sp + 0x8]
   298: 52 05 e4                 jump @20 if s0 != 0
      :                          @22
   301: 7c 17 18                 a0 = u8 [sp + 0x18]
   304: 01                       fallthrough
      :                          @23
   305: 33 08 01                 a1 = 0x1
   308: 52 07 1e                 jump @26 if a0 != 0
      :                          @24
   311: 82 17 10                 a0 = u64 [sp + 0x10]
   314: 82 78 28                 a1 = u64 [a0 + 0x28]
   317: 82 77 20                 a0 = u64 [a0 + 0x20]
   320: 82 8a 18                 a3 = u64 [a1 + 0x18]
   323: 33 08 76 06 01           a1 = 0x10676
   328: 33 09 01                 a2 = 0x1
   331: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @25 [@dyn 6]
   335: 64 78                    a1 = a0
   337: 01                       fallthrough
      :                          @26
   338: 64 87                    a0 = a1
   340: 82 10 38                 ra = u64 [sp + 0x38]
   343: 82 15 30                 s0 = u64 [sp + 0x30]
   346: 82 16 28                 s1 = u64 [sp + 0x28]
   349: 95 11 40                 sp = sp + 0x40
   352: 32 00                    ret
      :                          @27 [@dyn 7]
   354: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   358: 7b 10 80 00              u64 [sp + 0x80] = ra
   362: 80 89 34                 a2 = u32 [a1 + 0x34]
   365: 82 77                    a0 = u64 [a0]
   367: 84 9a 10                 a3 = a2 & 0x10
   370: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   373: 84 99 20                 a2 = a2 & 0x20
   376: 52 09 51                 jump @34 if a2 != 0
      :                          @29
   379: 82 77                    a0 = u64 [a0]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 28 5a 37                 jump @826
      :                          @30
   392: 82 7b                    a4 = u64 [a0]
   394: 33 09 81 00              a2 = 0x81
   398: 95 17 7f                 a0 = sp + 0x7f
   401: 33 02 57                 t0 = 0x57
   404: 01                       fallthrough
      :                          @31
   405: 64 9c                    a5 = a2
   407: 98 ba 04                 a3 = a4 >> 0x4
   410: 84 bb 0f                 a4 = a4 & 0xf
   413: 88 b3 0a                 t1 = a4 <u 0xa
   416: 33 09 30                 a2 = 0x30
   419: da 32 09                 a2 = t0 if t1 == 0
   422: be b9 09                 i32 a2 = a2 + a4
   425: 78 79                    u8 [a0] = a2
   427: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   430: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   433: 64 ab                    a4 = a3
   435: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   438: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   441: 56 27 80 00 69           jump @40 if a0 >u 128
      :                          @33
   446: 9a 9b 81 00              a4 = 0x81 - a2
   450: 64 1a                    a3 = sp
   452: c8 7a 0a                 a3 = a3 + a0
   455: 28 42                    jump @38
      :                          @34
   457: 82 7b                    a4 = u64 [a0]
   459: 33 09 81 00              a2 = 0x81
   463: 95 17 7f                 a0 = sp + 0x7f
   466: 33 02 37                 t0 = 0x37
   469: 01                       fallthrough
      :                          @35
   470: 64 9c                    a5 = a2
   472: 98 ba 04                 a3 = a4 >> 0x4
   475: 84 bb 0f                 a4 = a4 & 0xf
   478: 88 b3 0a                 t1 = a4 <u 0xa
   481: 33 09 30                 a2 = 0x30
   484: da 32 09                 a2 = t0 if t1 == 0
   487: be b9 09                 i32 a2 = a2 + a4
   490: 78 79                    u8 [a0] = a2
   492: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   495: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   498: 64 ab                    a4 = a3
   500: 52 0a e2                 jump @35 if a3 != 0
      :                          @36
   503: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   506: 56 27 80 00 28           jump @40 if a0 >u 128
      :                          @37
   511: 9a 9b 81 00              a4 = 0x81 - a2
   515: 64 1a                    a3 = sp
   517: c8 7a 0a                 a3 = a3 + a0
   520: 01                       fallthrough
      :                          @38
   521: 33 09 02                 a2 = 0x2
   524: 64 87                    a0 = a1
   526: 33 08 77 06 01           a1 = 0x10677
   531: 50 10 10 e9 37           ra = 16, jump @836
      :                          @39 [@dyn 8]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 32 00                    ret
      :                          @40
   546: 00                       trap
      :                          @41 [@dyn 9]
   547: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   551: 7b 10 80 00              u64 [sp + 0x80] = ra
   555: 80 89 34                 a2 = u32 [a1 + 0x34]
   558: 84 9a 10                 a3 = a2 & 0x10
   561: 52 0a 16                 jump @44 if a3 != 0
      :                          @42
   564: 84 99 20                 a2 = a2 & 0x20
   567: 52 09 52                 jump @48 if a2 != 0
      :                          @43
   570: 7c 77                    a0 = u8 [a0]
   572: 82 10 80 00              ra = u64 [sp + 0x80]
   576: 95 11 88 00              sp = sp + 0x88
   580: 28 9b 36                 jump @826
      :                          @44
   583: 7c 77                    a0 = u8 [a0]
   585: 33 0b 81 00              a4 = 0x81
   589: 95 19 7f                 a2 = sp + 0x7f
   592: 33 02 57                 t0 = 0x57
   595: 01                       fallthrough
      :                          @45
   596: 64 bc                    a5 = a4
   598: 84 7b 0f                 a4 = a0 & 0xf
   601: 97 77 38                 a0 = a0 << 0x38
   604: 98 77 3c                 a0 = a0 >> 0x3c
   607: 88 b3 0a                 t1 = a4 <u 0xa
   610: 33 0a 30                 a3 = 0x30
   613: da 32 0a                 a3 = t0 if t1 == 0
   616: be ba 0a                 i32 a3 = a3 + a4
   619: 78 9a                    u8 [a2] = a3
   621: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   624: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   627: 52 07 e1                 jump @45 if a0 != 0
      :                          @46
   630: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   633: 56 27 80 00 6a           jump @54 if a0 >u 128
      :                          @47
   638: 9a bb 81 00              a4 = 0x81 - a4
   642: 64 1a                    a3 = sp
   644: c8 7a 0a                 a3 = a3 + a0
   647: 28 43                    jump @52
      :                          @48
   649: 7c 77                    a0 = u8 [a0]
   651: 33 0b 81 00              a4 = 0x81
   655: 95 19 7f                 a2 = sp + 0x7f
   658: 33 02 37                 t0 = 0x37
   661: 01                       fallthrough
      :                          @49
   662: 64 bc                    a5 = a4
   664: 84 7b 0f                 a4 = a0 & 0xf
   667: 97 77 38                 a0 = a0 << 0x38
   670: 98 77 3c                 a0 = a0 >> 0x3c
   673: 88 b3 0a                 t1 = a4 <u 0xa
   676: 33 0a 30                 a3 = 0x30
   679: da 32 0a                 a3 = t0 if t1 == 0
   682: be ba 0a                 i32 a3 = a3 + a4
   685: 78 9a                    u8 [a2] = a3
   687: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   690: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   693: 52 07 e1                 jump @49 if a0 != 0
      :                          @50
   696: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   699: 56 27 80 00 28           jump @54 if a0 >u 128
      :                          @51
   704: 9a bb 81 00              a4 = 0x81 - a4
   708: 64 1a                    a3 = sp
   710: c8 7a 0a                 a3 = a3 + a0
   713: 01                       fallthrough
      :                          @52
   714: 33 09 02                 a2 = 0x2
   717: 64 87                    a0 = a1
   719: 33 08 77 06 01           a1 = 0x10677
   724: 50 10 14 28 37           ra = 20, jump @836
      :                          @53 [@dyn 10]
   729: 82 10 80 00              ra = u64 [sp + 0x80]
   733: 95 11 88 00              sp = sp + 0x88
   737: 32 00                    ret
      :                          @54
   739: 00                       trap
      :                          @55 [@dyn 11]
   740: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   744: 7b 10 80 00              u64 [sp + 0x80] = ra
   748: 80 89 34                 a2 = u32 [a1 + 0x34]
   751: 84 9a 10                 a3 = a2 & 0x10
   754: 52 0a 16                 jump @58 if a3 != 0
      :                          @56
   757: 84 99 20                 a2 = a2 & 0x20
   760: 52 09 51                 jump @62 if a2 != 0
      :                          @57
   763: 80 77                    a0 = u32 [a0]
   765: 82 10 80 00              ra = u64 [sp + 0x80]
   769: 95 11 88 00              sp = sp + 0x88
   773: 28 da 35                 jump @826
      :                          @58
   776: 81 7b                    a4 = i32 [a0]
   778: 33 09 81 00              a2 = 0x81
   782: 95 17 7f                 a0 = sp + 0x7f
   785: 33 02 57                 t0 = 0x57
   788: 01                       fallthrough
      :                          @59
   789: 64 9c                    a5 = a2
   791: 8b ba 04                 i32 a3 = a4 >> 0x4
   794: 84 bb 0f                 a4 = a4 & 0xf
   797: 88 b3 0a                 t1 = a4 <u 0xa
   800: 33 09 30                 a2 = 0x30
   803: da 32 09                 a2 = t0 if t1 == 0
   806: be b9 09                 i32 a2 = a2 + a4
   809: 78 79                    u8 [a0] = a2
   811: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   814: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   817: 64 ab                    a4 = a3
   819: 52 0a e2                 jump @59 if a3 != 0
      :                          @60
   822: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   825: 56 27 80 00 69           jump @68 if a0 >u 128
      :                          @61
   830: 9a 9b 81 00              a4 = 0x81 - a2
   834: 64 1a                    a3 = sp
   836: c8 7a 0a                 a3 = a3 + a0
   839: 28 42                    jump @66
      :                          @62
   841: 81 7b                    a4 = i32 [a0]
   843: 33 09 81 00              a2 = 0x81
   847: 95 17 7f                 a0 = sp + 0x7f
   850: 33 02 37                 t0 = 0x37
   853: 01                       fallthrough
      :                          @63
   854: 64 9c                    a5 = a2
   856: 8b ba 04                 i32 a3 = a4 >> 0x4
   859: 84 bb 0f                 a4 = a4 & 0xf
   862: 88 b3 0a                 t1 = a4 <u 0xa
   865: 33 09 30                 a2 = 0x30
   868: da 32 09                 a2 = t0 if t1 == 0
   871: be b9 09                 i32 a2 = a2 + a4
   874: 78 79                    u8 [a0] = a2
   876: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   879: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   882: 64 ab                    a4 = a3
   884: 52 0a e2                 jump @63 if a3 != 0
      :                          @64
   887: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   890: 56 27 80 00 28           jump @68 if a0 >u 128
      :                          @65
   895: 9a 9b 81 00              a4 = 0x81 - a2
   899: 64 1a                    a3 = sp
   901: c8 7a 0a                 a3 = a3 + a0
   904: 01                       fallthrough
      :                          @66
   905: 33 09 02                 a2 = 0x2
   908: 64 87                    a0 = a1
   910: 33 08 77 06 01           a1 = 0x10677
   915: 50 10 18 69 36           ra = 24, jump @836
      :                          @67 [@dyn 12]
   920: 82 10 80 00              ra = u64 [sp + 0x80]
   924: 95 11 88 00              sp = sp + 0x88
   928: 32 00                    ret
      :                          @68
   930: 00                       trap
      :                          @69 [@dyn 13]
   931: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   935: 7b 10 80 00              u64 [sp + 0x80] = ra
   939: 80 89 34                 a2 = u32 [a1 + 0x34]
   942: 84 9a 10                 a3 = a2 & 0x10
   945: 52 0a 16                 jump @72 if a3 != 0
      :                          @70
   948: 84 99 20                 a2 = a2 & 0x20
   951: 52 09 51                 jump @76 if a2 != 0
      :                          @71
   954: 82 77                    a0 = u64 [a0]
   956: 82 10 80 00              ra = u64 [sp + 0x80]
   960: 95 11 88 00              sp = sp + 0x88
   964: 28 1b 35                 jump @826
      :                          @72
   967: 82 7b                    a4 = u64 [a0]
   969: 33 09 81 00              a2 = 0x81
   973: 95 17 7f                 a0 = sp + 0x7f
   976: 33 02 57                 t0 = 0x57
   979: 01                       fallthrough
      :                          @73
   980: 64 9c                    a5 = a2
   982: 98 ba 04                 a3 = a4 >> 0x4
   985: 84 bb 0f                 a4 = a4 & 0xf
   988: 88 b3 0a                 t1 = a4 <u 0xa
   991: 33 09 30                 a2 = 0x30
   994: da 32 09                 a2 = t0 if t1 == 0
   997: be b9 09                 i32 a2 = a2 + a4
  1000: 78 79                    u8 [a0] = a2
  1002: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1005: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
  1008: 64 ab                    a4 = a3
  1010: 52 0a e2                 jump @73 if a3 != 0
      :                          @74
  1013: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  1016: 56 27 80 00 69           jump @82 if a0 >u 128
      :                          @75
  1021: 9a 9b 81 00              a4 = 0x81 - a2
  1025: 64 1a                    a3 = sp
  1027: c8 7a 0a                 a3 = a3 + a0
  1030: 28 42                    jump @80
      :                          @76
  1032: 82 7b                    a4 = u64 [a0]
  1034: 33 09 81 00              a2 = 0x81
  1038: 95 17 7f                 a0 = sp + 0x7f
  1041: 33 02 37                 t0 = 0x37
  1044: 01                       fallthrough
      :                          @77
  1045: 64 9c                    a5 = a2
  1047: 98 ba 04                 a3 = a4 >> 0x4
  1050: 84 bb 0f                 a4 = a4 & 0xf
  1053: 88 b3 0a                 t1 = a4 <u 0xa
  1056: 33 09 30                 a2 = 0x30
  1059: da 32 09                 a2 = t0 if t1 == 0
  1062: be b9 09                 i32 a2 = a2 + a4
  1065: 78 79                    u8 [a0] = a2
  1067: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1070: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
  1073: 64 ab                    a4 = a3
  1075: 52 0a e2                 jump @77 if a3 != 0
      :                          @78
  1078: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  1081: 56 27 80 00 28           jump @82 if a0 >u 128
      :                          @79
  1086: 9a 9b 81 00              a4 = 0x81 - a2
  1090: 64 1a                    a3 = sp
  1092: c8 7a 0a                 a3 = a3 + a0
  1095: 01                       fallthrough
      :                          @80
  1096: 33 09 02                 a2 = 0x2
  1099: 64 87                    a0 = a1
  1101: 33 08 77 06 01           a1 = 0x10677
  1106: 50 10 1c aa 35           ra = 28, jump @836
      :                          @81 [@dyn 14]
  1111: 82 10 80 00              ra = u64 [sp + 0x80]
  1115: 95 11 88 00              sp = sp + 0x88
  1119: 32 00                    ret
      :                          @82
  1121: 00                       trap
      :                          @83 [@dyn 15]
  1122: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1125: 7b 10 28                 u64 [sp + 0x28] = ra
  1128: 7b 15 20                 u64 [sp + 0x20] = s0
  1131: 7b 16 18                 u64 [sp + 0x18] = s1
  1134: 64 85                    s0 = a1
  1136: 82 88 28                 a1 = u64 [a1 + 0x28]
  1139: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1142: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1145: 64 76                    s1 = a0
  1147: 33 08 58 06 01           a1 = 0x10658
  1152: 33 09 01                 a2 = 0x1
  1155: 64 a7                    a0 = a3
  1157: b4 b0 01 20              ra = 32, jump [a4]
      :                          @84 [@dyn 16]
  1161: 7b 15                    u64 [sp] = s0
  1163: 78 17 08                 u8 [sp + 0x8] = a0
  1166: 46 11 09                 u8 [sp + 9] = 0
  1169: 7b 16 10                 u64 [sp + 0x10] = s1
  1172: 33 05 0e                 s0 = 0xe
  1175: 64 17                    a0 = sp
  1177: 95 18 10                 a1 = sp + 0x10
  1180: 33 09 0e                 a2 = 0xe
  1183: 50 10 22 39 3c           ra = 34, jump @980
      :                          @85 [@dyn 17]
  1188: 95 67 08                 a0 = s1 + 0x8
  1191: 7b 17 10                 u64 [sp + 0x10] = a0
  1194: 64 17                    a0 = sp
  1196: 95 18 10                 a1 = sp + 0x10
  1199: 64 59                    a2 = s0
  1201: 50 10 24 27 3c           ra = 36, jump @980
      :                          @86 [@dyn 18]
  1206: 95 67 10                 a0 = s1 + 0x10
  1209: 7b 17 10                 u64 [sp + 0x10] = a0
  1212: 64 17                    a0 = sp
  1214: 95 18 10                 a1 = sp + 0x10
  1217: 64 59                    a2 = s0
  1219: 50 10 26 15 3c           ra = 38, jump @980
      :                          @87 [@dyn 19]
  1224: 95 67 18                 a0 = s1 + 0x18
  1227: 7b 17 10                 u64 [sp + 0x10] = a0
  1230: 64 17                    a0 = sp
  1232: 95 18 10                 a1 = sp + 0x10
  1235: 64 59                    a2 = s0
  1237: 50 10 28 03 3c           ra = 40, jump @980
      :                          @88 [@dyn 20]
  1242: 95 67 20                 a0 = s1 + 0x20
  1245: 7b 17 10                 u64 [sp + 0x10] = a0
  1248: 64 17                    a0 = sp
  1250: 95 18 10                 a1 = sp + 0x10
  1253: 64 59                    a2 = s0
  1255: 50 10 2a f1 3b           ra = 42, jump @980
      :                          @89 [@dyn 21]
  1260: 95 67 28                 a0 = s1 + 0x28
  1263: 7b 17 10                 u64 [sp + 0x10] = a0
  1266: 64 17                    a0 = sp
  1268: 95 18 10                 a1 = sp + 0x10
  1271: 64 59                    a2 = s0
  1273: 50 10 2c df 3b           ra = 44, jump @980
      :                          @90 [@dyn 22]
  1278: 95 67 30                 a0 = s1 + 0x30
  1281: 7b 17 10                 u64 [sp + 0x10] = a0
  1284: 64 17                    a0 = sp
  1286: 95 18 10                 a1 = sp + 0x10
  1289: 64 59                    a2 = s0
  1291: 50 10 2e cd 3b           ra = 46, jump @980
      :                          @91 [@dyn 23]
  1296: 95 67 38                 a0 = s1 + 0x38
  1299: 7b 17 10                 u64 [sp + 0x10] = a0
  1302: 64 17                    a0 = sp
  1304: 95 18 10                 a1 = sp + 0x10
  1307: 64 59                    a2 = s0
  1309: 50 10 30 bb 3b           ra = 48, jump @980
      :                          @92 [@dyn 24]
  1314: 95 67 40                 a0 = s1 + 0x40
  1317: 7b 17 10                 u64 [sp + 0x10] = a0
  1320: 64 17                    a0 = sp
  1322: 95 18 10                 a1 = sp + 0x10
  1325: 64 59                    a2 = s0
  1327: 50 10 32 a9 3b           ra = 50, jump @980
      :                          @93 [@dyn 25]
  1332: 95 67 48                 a0 = s1 + 0x48
  1335: 7b 17 10                 u64 [sp + 0x10] = a0
  1338: 64 17                    a0 = sp
  1340: 95 18 10                 a1 = sp + 0x10
  1343: 64 59                    a2 = s0
  1345: 50 10 34 97 3b           ra = 52, jump @980
      :                          @94 [@dyn 26]
  1350: 95 67 50                 a0 = s1 + 0x50
  1353: 7b 17 10                 u64 [sp + 0x10] = a0
  1356: 64 17                    a0 = sp
  1358: 95 18 10                 a1 = sp + 0x10
  1361: 64 59                    a2 = s0
  1363: 50 10 36 85 3b           ra = 54, jump @980
      :                          @95 [@dyn 27]
  1368: 95 67 58                 a0 = s1 + 0x58
  1371: 7b 17 10                 u64 [sp + 0x10] = a0
  1374: 64 17                    a0 = sp
  1376: 95 18 10                 a1 = sp + 0x10
  1379: 64 59                    a2 = s0
  1381: 50 10 38 73 3b           ra = 56, jump @980
      :                          @96 [@dyn 28]
  1386: 95 67 60                 a0 = s1 + 0x60
  1389: 7b 17 10                 u64 [sp + 0x10] = a0
  1392: 64 17                    a0 = sp
  1394: 95 18 10                 a1 = sp + 0x10
  1397: 64 59                    a2 = s0
  1399: 50 10 3a 61 3b           ra = 58, jump @980
      :                          @97 [@dyn 29]
  1404: 33 07 01                 a0 = 0x1
  1407: 7c 18 08                 a1 = u8 [sp + 0x8]
  1410: 52 08 1a                 jump @99 if a1 != 0
      :                          @98
  1413: 82 17                    a0 = u64 [sp]
  1415: 82 78 28                 a1 = u64 [a0 + 0x28]
  1418: 82 77 20                 a0 = u64 [a0 + 0x20]
  1421: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1424: 33 08 76 06 01           a1 = 0x10676
  1429: 33 09 01                 a2 = 0x1
  1432: b4 a0 01 3c              ra = 60, jump [a3]
      :                          @99 [@dyn 30]
  1436: 82 10 28                 ra = u64 [sp + 0x28]
  1439: 82 15 20                 s0 = u64 [sp + 0x20]
  1442: 82 16 18                 s1 = u64 [sp + 0x18]
  1445: 95 11 30                 sp = sp + 0x30
  1448: 32 00                    ret
      :                          @100 [export #0: 'refine']
  1450: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1454: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1458: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1462: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1466: 95 11 48 d4              sp = sp + 0xffffffffffffd448
  1470: 33 0a 00 00 01           a3 = 0x10000
  1475: 53 18 04 df 00           jump @119 if a1 <u 4
      :                          @101
  1480: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1483: 51 0b d7 00              jump @119 if a4 == 0
      :                          @102
  1487: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1490: 80 7a                    a3 = u32 [a0]
  1492: 33 06 01                 s1 = 0x1
  1495: 59 08 3d                 jump @111 if a1 >=s 0
      :                          @103
  1498: 84 88 ff 00              a1 = a1 & 0xff
  1502: 33 06 02                 s1 = 0x2
  1505: 53 28 c0 00 2d           jump @109 if a1 <u 192
      :                          @104
  1510: 33 06 03                 s1 = 0x3
  1513: 53 28 e0 00 25           jump @109 if a1 <u 224
      :                          @105
  1518: 33 06 04                 s1 = 0x4
  1521: 53 28 f0 00 1d           jump @109 if a1 <u 240
      :                          @106
  1526: 33 06 05                 s1 = 0x5
  1529: 53 28 f8 00 15           jump @109 if a1 <u 248
      :                          @107
  1534: 33 06 06                 s1 = 0x6
  1537: 53 28 fc 00 0d           jump @109 if a1 <u 252
      :                          @108
  1542: 88 88 fe 00              a1 = a1 <u 0xfe
  1546: 9a 86 08                 s1 = 0x8 - a1
  1549: 01                       fallthrough
      :                          @109
  1550: ae 6b 06                 jump @111 if a4 >=u s1
      :                          @110
  1553: 28 7e 0f                 jump @281
      :                          @111
  1556: 7b 1a 68                 u64 [sp + 0x68] = a3
  1559: 95 77 04                 a0 = a0 + 0x4
  1562: 64 68                    a1 = s1
  1564: 7b 1b 70                 u64 [sp + 0x70] = a4
  1567: 50 10 3e f8 3b           ra = 62, jump @997
      :                          @112 [@dyn 31]
  1572: 64 75                    s0 = a0
  1574: 82 17 70                 a0 = u64 [sp + 0x70]
  1577: e4 67 07                 a0 = maxu(a0, s1)
  1580: c9 67 07                 a0 = a0 - s1
  1583: d8 57 08                 a1 = a0 <u s0
  1586: e4 57 07                 a0 = maxu(a0, s0)
  1589: c9 57 07                 a0 = a0 - s0
  1592: 88 77 20                 a0 = a0 <u 0x20
  1595: d4 87 07                 a0 = a0 | a1
  1598: 52 07 5b                 jump @118 if a0 != 0
      :                          @113
  1601: 48 21 98 00              u32 [sp + 152] = 0
  1605: 49 21 90 00              u64 [sp + 144] = 0
  1609: 49 21 88 00              u64 [sp + 136] = 0
  1613: 49 21 80 00              u64 [sp + 128] = 0
  1617: 49 11 78                 u64 [sp + 120] = 0
  1620: 95 17 78                 a0 = sp + 0x78
  1623: 33 09 24                 a2 = 0x24
  1626: 33 0a 03                 a3 = 0x3
  1629: 33 08                    a1 = 0
  1631: 33 0b                    a4 = 0
  1633: 33 0c                    a5 = 0
  1635: 0a 12                    ecalli 18 // 'fetch'
  1637: 01                       fallthrough
      :                          @114
  1638: 95 1a 78                 a3 = sp + 0x78
  1641: 33 08 24                 a1 = 0x24
  1644: 53 15 08 39              jump @120 if s0 <u 8
      :                          @115
  1648: 95 17 a0 00              a0 = sp + 0xa0
  1652: 33 09 00 20              a2 = 0x2000
  1656: 33 08                    a1 = 0
  1658: 50 10 40 06 32           ra = 64, jump @811
      :                          @116 [@dyn 32]
  1663: 95 18 78                 a1 = sp + 0x78
  1666: 95 19 a0 00              a2 = sp + 0xa0
  1670: 33 0b 00 20              a4 = 0x2000
  1674: 82 17 68                 a0 = u64 [sp + 0x68]
  1677: 33 0a                    a3 = 0
  1679: 0a 11                    ecalli 17 // 'historical_lookup'
  1681: 01                       fallthrough
      :                          @117
  1682: 95 78 01                 a1 = a0 + 0x1
  1685: 55 18 04 2b              jump @121 if a1 >=u 4
      :                          @118
  1689: 33 08                    a1 = 0
  1691: 33 0a 00 00 01           a3 = 0x10000
  1696: 28 05                    jump @120
      :                          @119
  1698: 33 08                    a1 = 0
  1700: 01                       fallthrough
      :                          @120
  1701: 64 a7                    a0 = a3
  1703: 33 09 b8 2b              a2 = 0x2bb8
  1707: c8 91 01                 sp = sp + a2
  1710: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1714: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1718: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1722: 95 11 f8 07              sp = sp + 0x7f8
  1726: 32 00                    ret
      :                          @121
  1728: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1731: 53 18 03 d6              jump @118 if a1 <u 3
      :                          @122
  1735: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1738: 51 18 06 cf              jump @118 if a1 == 6
      :                          @123
  1742: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1745: 53 18 03 c8              jump @118 if a1 <u 3
      :                          @124
  1749: 7c 18 a2 00              a1 = u8 [sp + 0xa2]
  1753: 7c 19 a1 00              a2 = u8 [sp + 0xa1]
  1757: 7c 1a a0 00              a3 = u8 [sp + 0xa0]
  1761: 97 88 10                 a1 = a1 << 0x10
  1764: 97 99 08                 a2 = a2 << 0x8
  1767: d4 98 08                 a1 = a1 | a2
  1770: d4 a8 08                 a1 = a1 | a3
  1773: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1776: ac 89 a9                 jump @118 if a2 <u a1
      :                          @125
  1779: 7c 17 a5 00              a0 = u8 [sp + 0xa5]
  1783: 7c 1a a4 00              a3 = u8 [sp + 0xa4]
  1787: 7c 1b a3 00              a4 = u8 [sp + 0xa3]
  1791: 97 77 10                 a0 = a0 << 0x10
  1794: 97 aa 08                 a3 = a3 << 0x8
  1797: d4 a7 07                 a0 = a0 | a3
  1800: d4 b7 07                 a0 = a0 | a4
  1803: c9 89 09                 a2 = a2 - a1
  1806: ac 79 8b                 jump @118 if a2 <u a0
      :                          @126
  1809: c9 79 06                 s1 = a2 - a0
  1812: 53 16 04 85              jump @118 if s1 <u 4
      :                          @127
  1816: 95 12 ab 00              t0 = sp + 0xab
  1820: c8 28 03                 t1 = a1 + t0
  1823: c8 37 0b                 a4 = a0 + t1
  1826: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1829: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1832: 7c ba                    a3 = u8 [a4]
  1834: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1837: 97 cc 10                 a5 = a5 << 0x10
  1840: 97 55 08                 s0 = s0 << 0x8
  1843: d4 5c 0c                 a5 = a5 | s0
  1846: d4 c9 09                 a2 = a2 | a5
  1849: 97 99 08                 a2 = a2 << 0x8
  1852: d4 a9 0c                 a5 = a2 | a3
  1855: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1858: ac c6 57 ff              jump @118 if s1 <u a5
      :                          @128
  1862: 7c 19 a7 00              a2 = u8 [sp + 0xa7]
  1866: 95 1a a0 20              a3 = sp + 0x20a0
  1870: 7c 14 a6 00              t2 = u8 [sp + 0xa6]
  1874: 97 99 08                 a2 = a2 << 0x8
  1877: 7c 16 aa 00              s1 = u8 [sp + 0xaa]
  1881: 7c 15 a9 00              s0 = u8 [sp + 0xa9]
  1885: d4 49 04                 t2 = a2 | t2
  1888: 7c 19 a8 00              a2 = u8 [sp + 0xa8]
  1892: 97 66 10                 s1 = s1 << 0x10
  1895: 97 55 08                 s0 = s0 << 0x8
  1898: d4 65 05                 s0 = s0 | s1
  1901: d4 59 09                 a2 = a2 | s0
  1904: 33 05 ff ef              s0 = 0xffffffffffffefff
  1908: 7b 15 70                 u64 [sp + 0x70] = s0
  1911: 95 bb 04                 a4 = a4 + 0x4
  1914: 7b a4                    u64 [a3] = t2
  1916: 7b a9 08                 u64 [a3 + 0x8] = a2
  1919: 7b a2 10                 u64 [a3 + 0x10] = t0
  1922: 7b a8 18                 u64 [a3 + 0x18] = a1
  1925: 7b a3 20                 u64 [a3 + 0x20] = t1
  1928: 7b a7 28                 u64 [a3 + 0x28] = a0
  1931: 7b ab 30                 u64 [a3 + 0x30] = a4
  1934: 7b ac 38                 u64 [a3 + 0x38] = a5
  1937: 7b aa 50                 u64 [a3 + 0x50] = a3
  1940: 33 08 1a                 a1 = 0x1a
  1943: 7b a8 58                 u64 [a3 + 0x58] = a1
  1946: 95 17 a8 20              a0 = sp + 0x20a8
  1950: 7b a7 60                 u64 [a3 + 0x60] = a0
  1953: 7b a8 68                 u64 [a3 + 0x68] = a1
  1956: 95 17 b0 20              a0 = sp + 0x20b0
  1960: 7b a7 70                 u64 [a3 + 0x70] = a0
  1963: 7b a8 78                 u64 [a3 + 0x78] = a1
  1966: 95 17 b8 20              a0 = sp + 0x20b8
  1970: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1974: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1978: 95 17 c0 20              a0 = sp + 0x20c0
  1982: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1986: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1990: 95 17 c8 20              a0 = sp + 0x20c8
  1994: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1998: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  2002: 95 17 d0 20              a0 = sp + 0x20d0
  2006: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  2010: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  2014: 95 17 d8 20              a0 = sp + 0x20d8
  2018: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  2022: 7b 18 68                 u64 [sp + 0x68] = a1
  2025: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  2029: 33 07 c0 08 01           a0 = 0x108c0
  2034: 95 16 f8 30              s1 = sp + 0x30f8
  2038: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2042: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  2047: 49 26 68 01              u64 [s1 + 360] = 0
  2051: 95 18 f0 20              a1 = sp + 0x20f0
  2055: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2059: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  2064: 95 17 88 31              a0 = sp + 0x3188
  2068: 95 18 40 32              a1 = sp + 0x3240
  2072: 50 10 42 41 2d           ra = 66, jump @743
      :                          @129 [@dyn 33]
  2077: 82 65 98 00              s0 = u64 [s1 + 0x98]
  2081: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  2085: 82 66 90 00              s1 = u64 [s1 + 0x90]
  2089: 33 07 02                 a0 = 0x2
  2092: 33 08                    a1 = 0
  2094: 33 09                    a2 = 0
  2096: 64 5a                    a3 = s0
  2098: 33 00 44                 ra = 0x44
  2101: 0a 64                    ecalli 100 // 'log'
  2103: 01                       fallthrough
      :                          @130 [@dyn 34]
  2104: 82 17 70                 a0 = u64 [sp + 0x70]
  2107: c8 67 07                 a0 = a0 + s1
  2110: 33 0c 40 00 03           a5 = 0x30040
  2115: 53 27 00 f0 1e           jump @136 if a0 <u 4294963200
      :                          @131
  2120: 95 c7 00 10              a0 = a5 + 0x1000
  2124: 01                       fallthrough
      :                          @132
  2125: 82 78                    a1 = u64 [a0]
  2127: c9 87 09                 a2 = a0 - a1
  2130: ab 59 0f                 jump @136 if a2 != s0
      :                          @133
  2133: c9 68 09                 a2 = a1 - s1
  2136: 01                       fallthrough
      :                          @134
  2137: 82 7a                    a3 = u64 [a0]
  2139: ab 8a f2                 jump @132 if a3 != a1
      :                          @135
  2142: 7b 79                    u64 [a0] = a2
  2144: 01                       fallthrough
      :                          @136
  2145: 7b 1c 60                 u64 [sp + 0x60] = a5
  2148: 0a                       ecalli 0 // 'gas'
  2149: 95 18 a0 20              a1 = sp + 0x20a0
  2153: 7b 87 40                 u64 [a1 + 0x40] = a0
  2156: 95 17 e0 20              a0 = sp + 0x20e0
  2160: 95 16 f8 30              s1 = sp + 0x30f8
  2164: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2168: 82 17 68                 a0 = u64 [sp + 0x68]
  2171: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2175: 33 07 40 09 01           a0 = 0x10940
  2180: 7b 17 18                 u64 [sp + 0x18] = a0
  2183: 7b 87 50                 u64 [a1 + 0x50] = a0
  2186: 95 17 88 31              a0 = sp + 0x3188
  2190: 7b 87 60                 u64 [a1 + 0x60] = a0
  2193: 49 18 58 01              u64 [a1 + 88] = 0x1
  2197: 49 18 70                 u64 [a1 + 112] = 0
  2200: 49 18 68 01              u64 [a1 + 104] = 0x1
  2204: 95 17 40 32              a0 = sp + 0x3240
  2208: 95 18 f0 20              a1 = sp + 0x20f0
  2212: 50 10 46 b5 2c           ra = 70, jump @743
      :                          @137 [@dyn 35]
  2217: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2221: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2225: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2229: 33 07 02                 a0 = 0x2
  2232: 33 08                    a1 = 0
  2234: 33 09                    a2 = 0
  2236: 64 5a                    a3 = s0
  2238: 33 00 48                 ra = 0x48
  2241: 0a 64                    ecalli 100 // 'log'
  2243: 01                       fallthrough
      :                          @138 [@dyn 36]
  2244: 82 17 70                 a0 = u64 [sp + 0x70]
  2247: c8 67 07                 a0 = a0 + s1
  2250: 53 27 00 f0 21           jump @144 if a0 <u 4294963200
      :                          @139
  2255: 82 18 60                 a1 = u64 [sp + 0x60]
  2258: 95 87 00 10              a0 = a1 + 0x1000
  2262: 01                       fallthrough
      :                          @140
  2263: 82 78                    a1 = u64 [a0]
  2265: c9 87 09                 a2 = a0 - a1
  2268: ab 59 0f                 jump @144 if a2 != s0
      :                          @141
  2271: c9 68 09                 a2 = a1 - s1
  2274: 01                       fallthrough
      :                          @142
  2275: 82 7a                    a3 = u64 [a0]
  2277: ab 8a f2                 jump @140 if a3 != a1
      :                          @143
  2280: 7b 79                    u64 [a0] = a2
  2282: 01                       fallthrough
      :                          @144
  2283: 95 15 a0 20              s0 = sp + 0x20a0
  2287: 82 57 30                 a0 = u64 [s0 + 0x30]
  2290: 82 58 38                 a1 = u64 [s0 + 0x38]
  2293: 33 09                    a2 = 0
  2295: 0a 14                    ecalli 20 // 'machine'
  2297: 7b 57 48                 u64 [s0 + 0x48] = a0
  2300: 95 17 e8 20              a0 = sp + 0x20e8
  2304: 95 16 f8 30              s1 = sp + 0x30f8
  2308: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2312: 33 07 50 09 01           a0 = 0x10950
  2317: 7b 57 50                 u64 [s0 + 0x50] = a0
  2320: 95 17 88 31              a0 = sp + 0x3188
  2324: 7b 57 60                 u64 [s0 + 0x60] = a0
  2327: 49 15 58 01              u64 [s0 + 88] = 0x1
  2331: 49 15 68 01              u64 [s0 + 104] = 0x1
  2335: 82 17 68                 a0 = u64 [sp + 0x68]
  2338: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2342: 49 15 70                 u64 [s0 + 112] = 0
  2345: 95 17 40 32              a0 = sp + 0x3240
  2349: 95 18 f0 20              a1 = sp + 0x20f0
  2353: 50 10 4a 28 2c           ra = 74, jump @743
      :                          @145 [@dyn 37]
  2358: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2362: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2366: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2370: 33 07 02                 a0 = 0x2
  2373: 33 08                    a1 = 0
  2375: 33 09                    a2 = 0
  2377: 64 5a                    a3 = s0
  2379: 33 00 4c                 ra = 0x4c
  2382: 0a 64                    ecalli 100 // 'log'
  2384: 01                       fallthrough
      :                          @146 [@dyn 38]
  2385: 82 17 70                 a0 = u64 [sp + 0x70]
  2388: c8 67 07                 a0 = a0 + s1
  2391: 53 27 00 f0 21           jump @152 if a0 <u 4294963200
      :                          @147
  2396: 82 18 60                 a1 = u64 [sp + 0x60]
  2399: 95 87 00 10              a0 = a1 + 0x1000
  2403: 01                       fallthrough
      :                          @148
  2404: 82 78                    a1 = u64 [a0]
  2406: c9 87 09                 a2 = a0 - a1
  2409: ab 59 0f                 jump @152 if a2 != s0
      :                          @149
  2412: c9 68 09                 a2 = a1 - s1
  2415: 01                       fallthrough
      :                          @150
  2416: 82 7a                    a3 = u64 [a0]
  2418: ab 8a f2                 jump @148 if a3 != a1
      :                          @151
  2421: 7b 79                    u64 [a0] = a2
  2423: 01                       fallthrough
      :                          @152
  2424: 95 19 a0 20              a2 = sp + 0x20a0
  2428: 82 97                    a0 = u64 [a2]
  2430: 7b 17 48                 u64 [sp + 0x48] = a0
  2433: 82 97 08                 a0 = u64 [a2 + 0x8]
  2436: 7b 17 40                 u64 [sp + 0x40] = a0
  2439: 82 97 10                 a0 = u64 [a2 + 0x10]
  2442: 7b 17 38                 u64 [sp + 0x38] = a0
  2445: 82 95 18                 s0 = u64 [a2 + 0x18]
  2448: 82 98 20                 a1 = u64 [a2 + 0x20]
  2451: 7b 18 30                 u64 [sp + 0x30] = a1
  2454: 80 97 48                 a0 = u32 [a2 + 0x48]
  2457: 82 96 28                 s1 = u64 [a2 + 0x28]
  2460: 49 11 50 ff 0f           u64 [sp + 80] = 0xfff
  2465: 95 59 ff 0f              a2 = s0 + 0xfff
  2469: 98 99 0c                 a2 = a2 >> 0xc
  2472: 33 08 10                 a1 = 0x10
  2475: 7b 17 58                 u64 [sp + 0x58] = a0
  2478: 0a 17                    ecalli 23 // 'zero'
  2480: 01                       fallthrough
      :                          @153
  2481: 51 07 17                 jump @155 if a0 == 0
      :                          @154
  2484: 33 0a 65 08 01           a3 = 0x10865
  2489: 33 07 02                 a0 = 0x2
  2492: 33 0b 3e                 a4 = 0x3e
  2495: 33 08                    a1 = 0
  2497: 33 09                    a2 = 0
  2499: 0a 64                    ecalli 100 // 'log'
  2501: 28 e0 00                 jump @168
      :                          @155
  2504: 7b 16 28                 u64 [sp + 0x28] = s1
  2507: 82 17 50                 a0 = u64 [sp + 0x50]
  2510: c8 67 07                 a0 = a0 + s1
  2513: 98 77 0c                 a0 = a0 >> 0xc
  2516: 82 19 48                 a2 = u64 [sp + 0x48]
  2519: c8 79 09                 a2 = a2 + a0
  2522: 7b 15 48                 u64 [sp + 0x48] = s0
  2525: 95 57 ff ff 00           a0 = s0 + 0xffff
  2530: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2535: 95 75 00 00 02           s0 = a0 + 0x20000
  2540: 98 58 0c                 a1 = s0 >> 0xc
  2543: 82 17 58                 a0 = u64 [sp + 0x58]
  2546: 0a 17                    ecalli 23 // 'zero'
  2548: 01                       fallthrough
      :                          @156
  2549: 51 07 17                 jump @158 if a0 == 0
      :                          @157
  2552: 33 0a 27 08 01           a3 = 0x10827
  2557: 33 07 02                 a0 = 0x2
  2560: 33 0b 3e                 a4 = 0x3e
  2563: 33 08                    a1 = 0
  2565: 33 09                    a2 = 0
  2567: 0a 64                    ecalli 100 // 'log'
  2569: 28 9c 00                 jump @168
      :                          @158
  2572: 82 16 50                 s1 = u64 [sp + 0x50]
  2575: 82 17 40                 a0 = u64 [sp + 0x40]
  2578: c8 76 06                 s1 = s1 + a0
  2581: 98 69 0c                 a2 = s1 >> 0xc
  2584: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2588: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2598: c9 78 08                 a1 = a1 - a0
  2601: 98 88 0c                 a1 = a1 >> 0xc
  2604: 82 17 58                 a0 = u64 [sp + 0x58]
  2607: 0a 17                    ecalli 23 // 'zero'
  2609: 01                       fallthrough
      :                          @159
  2610: 51 07 16                 jump @161 if a0 == 0
      :                          @160
  2613: 33 0a eb 07 01           a3 = 0x107eb
  2618: 33 07 02                 a0 = 0x2
  2621: 33 0b 3c                 a4 = 0x3c
  2624: 33 08                    a1 = 0
  2626: 33 09                    a2 = 0
  2628: 0a 64                    ecalli 100 // 'log'
  2630: 28 5f                    jump @168
      :                          @161
  2632: 33 09 00 00 01           a2 = 0x10000
  2637: 82 17 58                 a0 = u64 [sp + 0x58]
  2640: 82 18 38                 a1 = u64 [sp + 0x38]
  2643: 82 1a 48                 a3 = u64 [sp + 0x48]
  2646: 0a 16                    ecalli 22 // 'poke'
  2648: 01                       fallthrough
      :                          @162
  2649: 51 07 16                 jump @164 if a0 == 0
      :                          @163
  2652: 33 0a ad 07 01           a3 = 0x107ad
  2657: 33 07 02                 a0 = 0x2
  2660: 33 0b 3e                 a4 = 0x3e
  2663: 33 08                    a1 = 0
  2665: 33 09                    a2 = 0
  2667: 0a 64                    ecalli 100 // 'log'
  2669: 28 38                    jump @168
      :                          @164
  2671: 82 17 58                 a0 = u64 [sp + 0x58]
  2674: 82 18 30                 a1 = u64 [sp + 0x30]
  2677: 64 59                    a2 = s0
  2679: 82 1a 28                 a3 = u64 [sp + 0x28]
  2682: 0a 16                    ecalli 22 // 'poke'
  2684: 01                       fallthrough
      :                          @165
  2685: 51 07 16                 jump @167 if a0 == 0
      :                          @166
  2688: 33 0a 6f 07 01           a3 = 0x1076f
  2693: 33 07 02                 a0 = 0x2
  2696: 33 0b 3e                 a4 = 0x3e
  2699: 33 08                    a1 = 0
  2701: 33 09                    a2 = 0
  2703: 0a 64                    ecalli 100 // 'log'
  2705: 28 14                    jump @168
      :                          @167
  2707: 33 0a 41 07 01           a3 = 0x10741
  2712: 33 07 02                 a0 = 0x2
  2715: 33 0b 2e                 a4 = 0x2e
  2718: 33 08                    a1 = 0
  2720: 33 09                    a2 = 0
  2722: 0a 64                    ecalli 100 // 'log'
  2724: 01                       fallthrough
      :                          @168
  2725: 95 16 f8 30              s1 = sp + 0x30f8
  2729: 33 05 08 10              s0 = 0x1008
  2733: 95 17 f0 20              a0 = sp + 0x20f0
  2737: 33 08                    a1 = 0
  2739: 33 09 08 10              a2 = 0x1008
  2743: 50 10 4e c9 2d           ra = 78, jump @811
      :                          @169 [@dyn 39]
  2748: 49 06                    u64 [s1 + 0] = 0
  2750: 95 17 f8 20              a0 = sp + 0x20f8
  2754: 7b 67 08                 u64 [s1 + 0x8] = a0
  2757: 49 16 10                 u64 [s1 + 16] = 0
  2760: 49 16 18                 u64 [s1 + 24] = 0
  2763: 95 17 f0 20              a0 = sp + 0x20f0
  2767: 33 0a 06                 a3 = 0x6
  2770: 33 08                    a1 = 0
  2772: 7b 15 58                 u64 [sp + 0x58] = s0
  2775: 64 59                    a2 = s0
  2777: 33 0b                    a4 = 0
  2779: 33 0c                    a5 = 0
  2781: 0a 12                    ecalli 18 // 'fetch'
  2783: 01                       fallthrough
      :                          @170
  2784: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2788: 33 08 28 00 01           a1 = 0x10028
  2793: 7b 18 50                 u64 [sp + 0x50] = a1
  2796: 51 17 ff 53 02           jump @197 if a0 == 4294967295
      :                          @171
  2801: 33 07 60 09 01           a0 = 0x10960
  2806: 7b 17 48                 u64 [sp + 0x48] = a0
  2809: 33 07 80 09 01           a0 = 0x10980
  2814: 7b 17 40                 u64 [sp + 0x40] = a0
  2817: 33 07 b0 09 01           a0 = 0x109b0
  2822: 7b 17 38                 u64 [sp + 0x38] = a0
  2825: 28 27                    jump @174
      :                          @172
  2827: 95 16 f8 30              s1 = sp + 0x30f8
  2831: 82 6b                    a4 = u64 [s1]
  2833: 95 bb 01                 a4 = a4 + 0x1
  2836: 7b 6b                    u64 [s1] = a4
  2838: 95 17 f0 20              a0 = sp + 0x20f0
  2842: 33 0a 06                 a3 = 0x6
  2845: 33 08                    a1 = 0
  2847: 82 19 58                 a2 = u64 [sp + 0x58]
  2850: 33 0c                    a5 = 0
  2852: 0a 12                    ecalli 18 // 'fetch'
  2854: 01                       fallthrough
      :                          @173
  2855: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2859: 51 17 ff 14 02           jump @197 if a0 == 4294967295
      :                          @174
  2864: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2868: 82 17 68                 a0 = u64 [sp + 0x68]
  2871: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2875: 95 18 60 33              a1 = sp + 0x3360
  2879: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2883: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2887: 82 17 48                 a0 = u64 [sp + 0x48]
  2890: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2894: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2899: 49 26 68 01              u64 [s1 + 360] = 0
  2903: 95 18 88 31              a1 = sp + 0x3188
  2907: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2911: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2916: 95 17 20 31              a0 = sp + 0x3120
  2920: 95 18 40 32              a1 = sp + 0x3240
  2924: 50 10 50 ed 29           ra = 80, jump @743
      :                          @175 [@dyn 40]
  2929: 95 17 f8 30              a0 = sp + 0x30f8
  2933: 82 76 30                 s1 = u64 [a0 + 0x30]
  2936: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2939: 82 75 28                 s0 = u64 [a0 + 0x28]
  2942: 33 07 02                 a0 = 0x2
  2945: 33 08                    a1 = 0
  2947: 33 09                    a2 = 0
  2949: 64 6a                    a3 = s1
  2951: 33 00 52                 ra = 0x52
  2954: 0a 64                    ecalli 100 // 'log'
  2956: 01                       fallthrough
      :                          @176 [@dyn 41]
  2957: 82 17 70                 a0 = u64 [sp + 0x70]
  2960: c8 57 07                 a0 = a0 + s0
  2963: 82 1c 60                 a5 = u64 [sp + 0x60]
  2966: 33 02 00 10              t0 = 0x1000
  2970: 53 27 00 f0 1c           jump @181 if a0 <u 4294963200
      :                          @177
  2975: c8 2c 08                 a1 = a5 + t0
  2978: 82 87                    a0 = u64 [a1]
  2980: c9 78 09                 a2 = a1 - a0
  2983: ab 69 0f                 jump @181 if a2 != s1
      :                          @178
  2986: c9 57 09                 a2 = a0 - s0
  2989: 01                       fallthrough
      :                          @179
  2990: 82 8a                    a3 = u64 [a1]
  2992: ab 7a ef                 jump @177 if a3 != a0
      :                          @180
  2995: 7b 89                    u64 [a1] = a2
  2997: 01                       fallthrough
      :                          @181
  2998: 95 18 a0 20              a1 = sp + 0x20a0
  3002: 80 87 50                 a0 = u32 [a1 + 0x50]
  3005: 80 88 54                 a1 = u32 [a1 + 0x54]
  3008: 95 15 f8 30              s0 = sp + 0x30f8
  3012: 7b 57 10                 u64 [s0 + 0x10] = a0
  3015: 7b 58 18                 u64 [s0 + 0x18] = a1
  3018: 33 09 01                 a2 = 0x1
  3021: 0a 17                    ecalli 23 // 'zero'
  3023: 7b 57 48 02              u64 [s0 + 0x248] = a0
  3027: 95 17 08 31              a0 = sp + 0x3108
  3031: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3035: 82 17 68                 a0 = u64 [sp + 0x68]
  3038: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3042: 95 18 10 31              a1 = sp + 0x3110
  3046: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3050: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3054: 95 18 40 33              a1 = sp + 0x3340
  3058: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3062: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3066: 82 17 40                 a0 = u64 [sp + 0x40]
  3069: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3073: 49 25 98 00 03           u64 [s0 + 152] = 0x3
  3078: 49 25 b0 00              u64 [s0 + 176] = 0
  3082: 95 17 40 32              a0 = sp + 0x3240
  3086: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  3090: 49 25 a8 00 03           u64 [s0 + 168] = 0x3
  3095: 95 17 20 31              a0 = sp + 0x3120
  3099: 95 18 88 31              a1 = sp + 0x3188
  3103: 50 10 54 3a 29           ra = 84, jump @743
      :                          @182 [@dyn 42]
  3108: 82 56 30                 s1 = u64 [s0 + 0x30]
  3111: 82 5b 38                 a4 = u64 [s0 + 0x38]
  3114: 82 55 28                 s0 = u64 [s0 + 0x28]
  3117: 33 07 02                 a0 = 0x2
  3120: 33 08                    a1 = 0
  3122: 33 09                    a2 = 0
  3124: 64 6a                    a3 = s1
  3126: 33 00 56                 ra = 0x56
  3129: 0a 64                    ecalli 100 // 'log'
  3131: 01                       fallthrough
      :                          @183 [@dyn 43]
  3132: 33 02 00 10              t0 = 0x1000
  3136: 82 1c 60                 a5 = u64 [sp + 0x60]
  3139: 82 17 70                 a0 = u64 [sp + 0x70]
  3142: c8 57 07                 a0 = a0 + s0
  3145: 53 27 00 f0 1c           jump @188 if a0 <u 4294963200
      :                          @184
  3150: c8 2c 08                 a1 = a5 + t0
  3153: 82 87                    a0 = u64 [a1]
  3155: c9 78 09                 a2 = a1 - a0
  3158: ab 69 0f                 jump @188 if a2 != s1
      :                          @185
  3161: c9 57 09                 a2 = a0 - s0
  3164: 01                       fallthrough
      :                          @186
  3165: 82 8a                    a3 = u64 [a1]
  3167: ab 7a ef                 jump @184 if a3 != a0
      :                          @187
  3170: 7b 89                    u64 [a1] = a2
  3172: 01                       fallthrough
      :                          @188
  3173: 95 15 f8 30              s0 = sp + 0x30f8
  3177: 82 59 18                 a2 = u64 [s0 + 0x18]
  3180: 82 57 10                 a0 = u64 [s0 + 0x10]
  3183: 95 18 f0 20              a1 = sp + 0x20f0
  3187: 7b 58 78 02              u64 [s0 + 0x278] = a1
  3191: 97 99 0c                 a2 = a2 << 0xc
  3194: 7b 59 88 02              u64 [s0 + 0x288] = a2
  3198: 33 0a 00 10              a3 = 0x1000
  3202: 95 18 f8 20              a1 = sp + 0x20f8
  3206: 0a 16                    ecalli 22 // 'poke'
  3208: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3212: 95 17 08 31              a0 = sp + 0x3108
  3216: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3220: 82 17 68                 a0 = u64 [sp + 0x68]
  3223: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3227: 95 18 70 33              a1 = sp + 0x3370
  3231: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3235: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3239: 95 18 80 33              a1 = sp + 0x3380
  3243: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3247: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3251: 82 18 50                 a1 = u64 [sp + 0x50]
  3254: 7b 58 78 01              u64 [s0 + 0x178] = a1
  3258: 7b 57 80 01              u64 [s0 + 0x180] = a0
  3262: 95 18 00 32              a1 = sp + 0x3200
  3266: 7b 58 88 01              u64 [s0 + 0x188] = a1
  3270: 7b 57 90 01              u64 [s0 + 0x190] = a0
  3274: 82 17 38                 a0 = u64 [sp + 0x38]
  3277: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3281: 49 25 98 00 05           u64 [s0 + 152] = 0x5
  3286: 49 25 b0 00              u64 [s0 + 176] = 0
  3290: 95 17 40 32              a0 = sp + 0x3240
  3294: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  3298: 49 25 a8 00 05           u64 [s0 + 168] = 0x5
  3303: 95 17 20 31              a0 = sp + 0x3120
  3307: 95 18 88 31              a1 = sp + 0x3188
  3311: 50 10 58 6a 28           ra = 88, jump @743
      :                          @189 [@dyn 44]
  3316: 82 56 30                 s1 = u64 [s0 + 0x30]
  3319: 82 5b 38                 a4 = u64 [s0 + 0x38]
  3322: 82 55 28                 s0 = u64 [s0 + 0x28]
  3325: 33 07 02                 a0 = 0x2
  3328: 33 08                    a1 = 0
  3330: 33 09                    a2 = 0
  3332: 64 6a                    a3 = s1
  3334: 33 00 5a                 ra = 0x5a
  3337: 0a 64                    ecalli 100 // 'log'
  3339: 01                       fallthrough
      :                          @190 [@dyn 45]
  3340: 33 02 00 10              t0 = 0x1000
  3344: 82 1c 60                 a5 = u64 [sp + 0x60]
  3347: 82 17 70                 a0 = u64 [sp + 0x70]
  3350: c8 57 07                 a0 = a0 + s0
  3353: 53 27 00 f0 f2 fd        jump @172 if a0 <u 4294963200
      :                          @191
  3359: c8 2c 08                 a1 = a5 + t0
  3362: 82 87                    a0 = u64 [a1]
  3364: c9 78 09                 a2 = a1 - a0
  3367: ab 69 e4 fd              jump @172 if a2 != s1
      :                          @192
  3371: c9 57 09                 a2 = a0 - s0
  3374: 01                       fallthrough
      :                          @193
  3375: 82 8a                    a3 = u64 [a1]
  3377: ab 7a ee                 jump @191 if a3 != a0
      :                          @194
  3380: 7b 89                    u64 [a1] = a2
  3382: 33 0b                    a4 = 0
  3384: 01                       fallthrough
      :                          @195
  3385: ab 7a e6                 jump @191 if a3 != a0
      :                          @196
  3388: 28 cf fd                 jump @172
      :                          @197
  3391: 82 69 18                 a2 = u64 [s1 + 0x18]
  3394: 95 9a 01                 a3 = a2 + 0x1
  3397: 82 67 10                 a0 = u64 [s1 + 0x10]
  3400: 33 08 f0 ef 0f           a1 = 0xfeff0
  3405: db 9a 08                 a1 = a3 if a2 != 0
  3408: 7b 68 18                 u64 [s1 + 0x18] = a1
  3411: 33 09 01                 a2 = 0x1
  3414: 0a 17                    ecalli 23 // 'zero'
  3416: 7b 67 20                 u64 [s1 + 0x20] = a0
  3419: 95 17 08 31              a0 = sp + 0x3108
  3423: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3427: 95 17 10 31              a0 = sp + 0x3110
  3431: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3435: 95 17 18 31              a0 = sp + 0x3118
  3439: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3443: 33 07 00 0a 01           a0 = 0x10a00
  3448: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3452: 95 17 40 32              a0 = sp + 0x3240
  3456: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  3460: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3465: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3470: 82 17 68                 a0 = u64 [sp + 0x68]
  3473: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3477: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3481: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3485: 49 26 b0 00              u64 [s1 + 176] = 0
  3489: 95 17 20 31              a0 = sp + 0x3120
  3493: 95 18 88 31              a1 = sp + 0x3188
  3497: 50 10 5c b0 27           ra = 92, jump @743
      :                          @198 [@dyn 46]
  3502: 82 65 30                 s0 = u64 [s1 + 0x30]
  3505: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3508: 95 17 f8 30              a0 = sp + 0x30f8
  3512: 82 76 28                 s1 = u64 [a0 + 0x28]
  3515: 33 07 02                 a0 = 0x2
  3518: 33 08                    a1 = 0
  3520: 33 09                    a2 = 0
  3522: 64 5a                    a3 = s0
  3524: 33 00 5e                 ra = 0x5e
  3527: 0a 64                    ecalli 100 // 'log'
  3529: 01                       fallthrough
      :                          @199 [@dyn 47]
  3530: 82 17 70                 a0 = u64 [sp + 0x70]
  3533: c8 67 07                 a0 = a0 + s1
  3536: 53 27 00 f0 23           jump @205 if a0 <u 4294963200
      :                          @200
  3541: 82 18 60                 a1 = u64 [sp + 0x60]
  3544: 95 87 00 10              a0 = a1 + 0x1000
  3548: 01                       fallthrough
      :                          @201
  3549: 82 78                    a1 = u64 [a0]
  3551: c9 87 09                 a2 = a0 - a1
  3554: ab 59 11                 jump @205 if a2 != s0
      :                          @202
  3557: c9 68 09                 a2 = a1 - s1
  3560: 01                       fallthrough
      :                          @203
  3561: 82 7a                    a3 = u64 [a0]
  3563: ab 8a f2                 jump @201 if a3 != a1
      :                          @204
  3566: 7b 79                    u64 [a0] = a2
  3568: 33 0b                    a4 = 0
  3570: 01                       fallthrough
      :                          @205
  3571: 95 16 f8 30              s1 = sp + 0x30f8
  3575: 49 16 58                 u64 [s1 + 88] = 0
  3578: 49 16 50                 u64 [s1 + 80] = 0
  3581: 49 16 48                 u64 [s1 + 72] = 0
  3584: 49 16 40                 u64 [s1 + 64] = 0
  3587: 49 16 38                 u64 [s1 + 56] = 0
  3590: 49 16 70                 u64 [s1 + 112] = 0
  3593: 49 16 78                 u64 [s1 + 120] = 0
  3596: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3606: 7b 67 28                 u64 [s1 + 0x28] = a0
  3609: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3619: 7b 67 30                 u64 [s1 + 0x30] = a0
  3622: 82 67                    a0 = u64 [s1]
  3624: 49 26 80 00              u64 [s1 + 128] = 0
  3628: 49 26 88 00              u64 [s1 + 136] = 0
  3632: 49 16 68                 u64 [s1 + 104] = 0
  3635: 7b 67 60                 u64 [s1 + 0x60] = a0
  3638: 95 17 20 31              a0 = sp + 0x3120
  3642: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3646: 33 07 1e                 a0 = 0x1e
  3649: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3653: 33 07 30 0a 01           a0 = 0x10a30
  3658: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3662: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3667: 49 26 68 01              u64 [s1 + 360] = 0
  3671: 95 17 00 32              a0 = sp + 0x3200
  3675: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3679: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3684: 95 17 88 31              a0 = sp + 0x3188
  3688: 95 18 40 32              a1 = sp + 0x3240
  3692: 50 10 60 ed 26           ra = 96, jump @743
      :                          @206 [@dyn 48]
  3697: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3701: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3705: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3709: 33 07 02                 a0 = 0x2
  3712: 33 08                    a1 = 0
  3714: 33 09                    a2 = 0
  3716: 64 5a                    a3 = s0
  3718: 33 00 62                 ra = 0x62
  3721: 0a 64                    ecalli 100 // 'log'
  3723: 01                       fallthrough
      :                          @207 [@dyn 49]
  3724: 82 17 70                 a0 = u64 [sp + 0x70]
  3727: c8 67 07                 a0 = a0 + s1
  3730: 82 13 60                 t1 = u64 [sp + 0x60]
  3733: 53 27 00 f0 1e           jump @213 if a0 <u 4294963200
      :                          @208
  3738: 95 37 00 10              a0 = t1 + 0x1000
  3742: 01                       fallthrough
      :                          @209
  3743: 82 78                    a1 = u64 [a0]
  3745: c9 87 09                 a2 = a0 - a1
  3748: ab 59 0f                 jump @213 if a2 != s0
      :                          @210
  3751: c9 68 09                 a2 = a1 - s1
  3754: 01                       fallthrough
      :                          @211
  3755: 82 7a                    a3 = u64 [a0]
  3757: ab 8a f2                 jump @209 if a3 != a1
      :                          @212
  3760: 7b 79                    u64 [a0] = a2
  3762: 01                       fallthrough
      :                          @213
  3763: 95 1c f8 30              a5 = sp + 0x30f8
  3767: 82 c7 28                 a0 = u64 [a5 + 0x28]
  3770: 82 c8 30                 a1 = u64 [a5 + 0x30]
  3773: 82 c9 38                 a2 = u64 [a5 + 0x38]
  3776: 82 ca 40                 a3 = u64 [a5 + 0x40]
  3779: 82 cb 48                 a4 = u64 [a5 + 0x48]
  3782: 82 c2 50                 t0 = u64 [a5 + 0x50]
  3785: 82 c6 58                 s1 = u64 [a5 + 0x58]
  3788: 49 2c 90 00 00 00 01     u64 [a5 + 144] = 0x10000
  3795: 82 c5 60                 s0 = u64 [a5 + 0x60]
  3798: 7b c7 98 00              u64 [a5 + 0x98] = a0
  3802: 82 c7 68                 a0 = u64 [a5 + 0x68]
  3805: 7b c8 a0 00              u64 [a5 + 0xa0] = a1
  3809: 82 c8 70                 a1 = u64 [a5 + 0x70]
  3812: 7b c9 a8 00              u64 [a5 + 0xa8] = a2
  3816: 82 c9 78                 a2 = u64 [a5 + 0x78]
  3819: 7b ca b0 00              u64 [a5 + 0xb0] = a3
  3823: 82 ca 80 00              a3 = u64 [a5 + 0x80]
  3827: 7b cb b8 00              u64 [a5 + 0xb8] = a4
  3831: 82 cb 88 00              a4 = u64 [a5 + 0x88]
  3835: 7b c2 c0 00              u64 [a5 + 0xc0] = t0
  3839: 7b c6 c8 00              u64 [a5 + 0xc8] = s1
  3843: 95 16 f8 30              s1 = sp + 0x30f8
  3847: 7b 65 d0 00              u64 [s1 + 0xd0] = s0
  3851: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  3855: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  3859: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
  3863: 7b 6a f0 00              u64 [s1 + 0xf0] = a3
  3867: 7b 6b f8 00              u64 [s1 + 0xf8] = a4
  3871: 33 07 40 0a 01           a0 = 0x10a40
  3876: 7b 17 48                 u64 [sp + 0x48] = a0
  3879: 95 37 00 10              a0 = t1 + 0x1000
  3883: 7b 17 40                 u64 [sp + 0x40] = a0
  3886: 01                       fallthrough
      :                          @214
  3887: 95 17 a0 20              a0 = sp + 0x20a0
  3891: 82 77 48                 a0 = u64 [a0 + 0x48]
  3894: 95 18 88 31              a1 = sp + 0x3188
  3898: 0a 19                    ecalli 25 // 'invoke'
  3900: 7b 18 58                 u64 [sp + 0x58] = a1
  3903: 7b 67 00 01              u64 [s1 + 0x100] = a0
  3907: 95 17 e8 20              a0 = sp + 0x20e8
  3911: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3915: 82 17 68                 a0 = u64 [sp + 0x68]
  3918: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3922: 95 18 f8 31              a1 = sp + 0x31f8
  3926: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3930: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3934: 95 18 e0 20              a1 = sp + 0x20e0
  3938: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3942: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3946: 82 17 48                 a0 = u64 [sp + 0x48]
  3949: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3953: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  3958: 49 26 28 01              u64 [s1 + 296] = 0
  3962: 95 17 40 32              a0 = sp + 0x3240
  3966: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3970: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  3975: 95 17 80 33              a0 = sp + 0x3380
  3979: 95 18 00 32              a1 = sp + 0x3200
  3983: 50 10 64 ca 25           ra = 100, jump @743
      :                          @215 [@dyn 50]
  3988: 82 65 90 02              s0 = u64 [s1 + 0x290]
  3992: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  3996: 95 17 f8 30              a0 = sp + 0x30f8
  4000: 82 76 88 02              s1 = u64 [a0 + 0x288]
  4004: 33 07 02                 a0 = 0x2
  4007: 33 08                    a1 = 0
  4009: 33 09                    a2 = 0
  4011: 64 5a                    a3 = s0
  4013: 33 00 66                 ra = 0x66
  4016: 0a 64                    ecalli 100 // 'log'
  4018: 01                       fallthrough
      :                          @216 [@dyn 51]
  4019: 82 17 70                 a0 = u64 [sp + 0x70]
  4022: c8 67 07                 a0 = a0 + s1
  4025: 82 1b 40                 a4 = u64 [sp + 0x40]
  4028: 53 27 00 f0 19           jump @221 if a0 <u 4294963200
      :                          @217
  4033: 82 b7                    a0 = u64 [a4]
  4035: c9 7b 08                 a1 = a4 - a0
  4038: ab 58 0f                 jump @221 if a1 != s0
      :                          @218
  4041: c9 67 08                 a1 = a0 - s1
  4044: 01                       fallthrough
      :                          @219
  4045: 82 b9                    a2 = u64 [a4]
  4047: ab 79 f2                 jump @217 if a2 != a0
      :                          @220
  4050: 7b b8                    u64 [a4] = a1
  4052: 01                       fallthrough
      :                          @221
  4053: 95 16 f8 30              s1 = sp + 0x30f8
  4057: 82 67 00 01              a0 = u64 [s1 + 0x100]
  4061: 51 07 ae 00              jump @226 if a0 == 0
      :                          @222
  4065: 85 77 03                 a0 = a0 ^ 0x3
  4068: 82 18 58                 a1 = u64 [sp + 0x58]
  4071: 85 88 64                 a1 = a1 ^ 0x64
  4074: d4 87 07                 a0 = a0 | a1
  4077: 52 07 42 ff              jump @214 if a0 != 0
      :                          @223
  4081: 95 17 20 31              a0 = sp + 0x3120
  4085: 33 09 68                 a2 = 0x68
  4088: 95 18 90 31              a1 = sp + 0x3190
  4092: 50 10 68 d2 27           ra = 104, jump @793
      :                          @224 [@dyn 52]
  4097: 82 67 60                 a0 = u64 [s1 + 0x60]
  4100: 7b 17 58                 u64 [sp + 0x58] = a0
  4103: 82 67 68                 a0 = u64 [s1 + 0x68]
  4106: 7b 17 28                 u64 [sp + 0x28] = a0
  4109: 82 65 70                 s0 = u64 [s1 + 0x70]
  4112: 7b 15 20                 u64 [sp + 0x20] = s0
  4115: 82 67 78                 a0 = u64 [s1 + 0x78]
  4118: 7b 17 38                 u64 [sp + 0x38] = a0
  4121: 82 67 80 00              a0 = u64 [s1 + 0x80]
  4125: 7b 17 30                 u64 [sp + 0x30] = a0
  4128: 49 26 40 01              u64 [s1 + 320] = 0
  4132: 49 26 38 01              u64 [s1 + 312] = 0
  4136: 49 26 30 01              u64 [s1 + 304] = 0
  4140: 49 26 28 01              u64 [s1 + 296] = 0
  4144: 49 26 20 01              u64 [s1 + 288] = 0
  4148: 49 26 18 01              u64 [s1 + 280] = 0
  4152: 49 26 10 01              u64 [s1 + 272] = 0
  4156: 49 26 08 01              u64 [s1 + 264] = 0
  4160: 95 17 40 32              a0 = sp + 0x3240
  4164: 33 09 00 01              a2 = 0x100
  4168: 33 08                    a1 = 0
  4170: 50 10 6a 36 28           ra = 106, jump @811
      :                          @225 [@dyn 53]
  4175: 95 17 a0 20              a0 = sp + 0x20a0
  4179: 82 77 48                 a0 = u64 [a0 + 0x48]
  4182: 95 18 00 32              a1 = sp + 0x3200
  4186: 82 19 28                 a2 = u64 [sp + 0x28]
  4189: 64 5a                    a3 = s0
  4191: 0a 15                    ecalli 21 // 'peek'
  4193: 95 17 a0 20              a0 = sp + 0x20a0
  4197: 82 77 48                 a0 = u64 [a0 + 0x48]
  4200: 95 18 40 32              a1 = sp + 0x3240
  4204: 82 19 38                 a2 = u64 [sp + 0x38]
  4207: 82 15 30                 s0 = u64 [sp + 0x30]
  4210: 64 5a                    a3 = s0
  4212: 0a 15                    ecalli 21 // 'peek'
  4214: 95 18 00 32              a1 = sp + 0x3200
  4218: 95 1a 40 32              a3 = sp + 0x3240
  4222: 82 17 58                 a0 = u64 [sp + 0x58]
  4225: 82 19 20                 a2 = u64 [sp + 0x20]
  4228: 64 5b                    a4 = s0
  4230: 0a 64                    ecalli 100 // 'log'
  4232: 28 a7 fe                 jump @214
      :                          @226
  4235: 0a                       ecalli 0 // 'gas'
  4236: 95 18 a0 20              a1 = sp + 0x20a0
  4240: 7b 87 40                 u64 [a1 + 0x40] = a0
  4243: 95 17 e0 20              a0 = sp + 0x20e0
  4247: 7b 67 88 02              u64 [s1 + 0x288] = a0
  4251: 82 17 18                 a0 = u64 [sp + 0x18]
  4254: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4258: 95 17 80 33              a0 = sp + 0x3380
  4262: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4266: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4271: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4276: 82 17 68                 a0 = u64 [sp + 0x68]
  4279: 7b 67 90 02              u64 [s1 + 0x290] = a0
  4283: 49 26 68 01              u64 [s1 + 360] = 0
  4287: 95 17 00 32              a0 = sp + 0x3200
  4291: 95 18 40 32              a1 = sp + 0x3240
  4295: 50 10 6c 92 24           ra = 108, jump @743
      :                          @227 [@dyn 54]
  4300: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4304: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4308: 95 17 f8 30              a0 = sp + 0x30f8
  4312: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4316: 33 07 02                 a0 = 0x2
  4319: 33 08                    a1 = 0
  4321: 33 09                    a2 = 0
  4323: 64 5a                    a3 = s0
  4325: 33 00 6e                 ra = 0x6e
  4328: 0a 64                    ecalli 100 // 'log'
  4330: 01                       fallthrough
      :                          @228 [@dyn 55]
  4331: 82 17 70                 a0 = u64 [sp + 0x70]
  4334: c8 67 07                 a0 = a0 + s1
  4337: 53 27 00 f0 23           jump @234 if a0 <u 4294963200
      :                          @229
  4342: 82 18 60                 a1 = u64 [sp + 0x60]
  4345: 95 87 00 10              a0 = a1 + 0x1000
  4349: 01                       fallthrough
      :                          @230
  4350: 82 78                    a1 = u64 [a0]
  4352: c9 87 09                 a2 = a0 - a1
  4355: ab 59 11                 jump @234 if a2 != s0
      :                          @231
  4358: c9 68 09                 a2 = a1 - s1
  4361: 01                       fallthrough
      :                          @232
  4362: 82 7a                    a3 = u64 [a0]
  4364: ab 8a f2                 jump @230 if a3 != a1
      :                          @233
  4367: 7b 79                    u64 [a0] = a2
  4369: 33 0b                    a4 = 0
  4371: 01                       fallthrough
      :                          @234
  4372: 95 17 a0 20              a0 = sp + 0x20a0
  4376: 82 77 48                 a0 = u64 [a0 + 0x48]
  4379: 95 16 f8 30              s1 = sp + 0x30f8
  4383: 48 26 50 02              u32 [s1 + 592] = 0
  4387: 49 26 48 02              u64 [s1 + 584] = 0
  4391: 82 69                    a2 = u64 [s1]
  4393: 7a 67 54 02              u32 [s1 + 0x254] = a0
  4397: 33 08 12                 a1 = 0x12
  4400: 7b 18 48                 u64 [sp + 0x48] = a1
  4403: 7b 19 40                 u64 [sp + 0x40] = a2
  4406: 51 19 ff ff 02           jump @264 if a2 == 4294967295
      :                          @235
  4411: 33 08                    a1 = 0
  4413: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4423: 7b 19 38                 u64 [sp + 0x38] = a2
  4426: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4436: 7b 17 30                 u64 [sp + 0x30] = a0
  4439: 33 07 d0 0a 01           a0 = 0x10ad0
  4444: 7b 17 28                 u64 [sp + 0x28] = a0
  4447: 49 11 20 f0 ef 0f        u64 [sp + 32] = 0xfeff0
  4453: 33 07 06                 a0 = 0x6
  4456: 7b 17 18                 u64 [sp + 0x18] = a0
  4459: 33 07 16                 a0 = 0x16
  4462: 7b 17 10                 u64 [sp + 0x10] = a0
  4465: 33 07 20 0b 01           a0 = 0x10b20
  4470: 7b 17 08                 u64 [sp + 0x8] = a0
  4473: 28 13                    jump @237
      :                          @236
  4475: 82 19 58                 a2 = u64 [sp + 0x58]
  4478: 95 98 01                 a1 = a2 + 0x1
  4481: 95 16 f8 30              s1 = sp + 0x30f8
  4485: 82 17 40                 a0 = u64 [sp + 0x40]
  4488: aa 79 ad 02              jump @264 if a2 == a0
      :                          @237
  4492: 7b 68 58 02              u64 [s1 + 0x258] = a1
  4496: 7b 18 58                 u64 [sp + 0x58] = a1
  4499: 97 89 0c                 a2 = a1 << 0xc
  4502: 95 17 a0 20              a0 = sp + 0x20a0
  4506: 82 77 48                 a0 = u64 [a0 + 0x48]
  4509: 82 68 08                 a1 = u64 [s1 + 0x8]
  4512: 82 1a 38                 a3 = u64 [sp + 0x38]
  4515: c8 a9 09                 a2 = a2 + a3
  4518: 82 1a 30                 a3 = u64 [sp + 0x30]
  4521: d2 a9 09                 a2 = a2 & a3
  4524: 7b 69 60 02              u64 [s1 + 0x260] = a2
  4528: 33 0a 00 10              a3 = 0x1000
  4532: 0a 15                    ecalli 21 // 'peek'
  4534: 7b 67 68 02              u64 [s1 + 0x268] = a0
  4538: 95 17 e8 20              a0 = sp + 0x20e8
  4542: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4546: 82 17 68                 a0 = u64 [sp + 0x68]
  4549: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4553: 95 18 00 31              a1 = sp + 0x3100
  4557: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4561: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4565: 95 18 58 33              a1 = sp + 0x3358
  4569: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4573: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4577: 82 18 50                 a1 = u64 [sp + 0x50]
  4580: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4584: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4588: 95 18 60 33              a1 = sp + 0x3360
  4592: 7b 68 88 01              u64 [s1 + 0x188] = a1
  4596: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4600: 82 17 28                 a0 = u64 [sp + 0x28]
  4603: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4607: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4612: 49 26 28 01              u64 [s1 + 296] = 0
  4616: 95 18 40 32              a1 = sp + 0x3240
  4620: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4624: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4629: 95 17 80 33              a0 = sp + 0x3380
  4633: 95 18 00 32              a1 = sp + 0x3200
  4637: 50 10 70 3c 23           ra = 112, jump @743
      :                          @238 [@dyn 56]
  4642: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4646: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4650: 95 17 f8 30              a0 = sp + 0x30f8
  4654: 82 76 88 02              s1 = u64 [a0 + 0x288]
  4658: 33 07 02                 a0 = 0x2
  4661: 33 08                    a1 = 0
  4663: 33 09                    a2 = 0
  4665: 64 5a                    a3 = s0
  4667: 33 00 72                 ra = 0x72
  4670: 0a 64                    ecalli 100 // 'log'
  4672: 01                       fallthrough
      :                          @239 [@dyn 57]
  4673: 82 17 70                 a0 = u64 [sp + 0x70]
  4676: c8 67 07                 a0 = a0 + s1
  4679: 82 1c 60                 a5 = u64 [sp + 0x60]
  4682: 33 02 00 10              t0 = 0x1000
  4686: 53 27 00 f0 1e           jump @244 if a0 <u 4294963200
      :                          @240
  4691: c8 2c 08                 a1 = a5 + t0
  4694: 82 87                    a0 = u64 [a1]
  4696: c9 78 09                 a2 = a1 - a0
  4699: ab 59 11                 jump @244 if a2 != s0
      :                          @241
  4702: c9 67 09                 a2 = a0 - s1
  4705: 01                       fallthrough
      :                          @242
  4706: 82 8a                    a3 = u64 [a1]
  4708: ab 7a ef                 jump @240 if a3 != a0
      :                          @243
  4711: 7b 89                    u64 [a1] = a2
  4713: 33 0b                    a4 = 0
  4715: 01                       fallthrough
      :                          @244
  4716: 95 16 f8 30              s1 = sp + 0x30f8
  4720: 81 67 54 02              a0 = i32 [s1 + 0x254]
  4724: 81 68 58 02              a1 = i32 [s1 + 0x258]
  4728: 95 19 a0 20              a2 = sp + 0x20a0
  4732: 7a 97 50                 u32 [a2 + 0x50] = a0
  4735: 82 17 20                 a0 = u64 [sp + 0x20]
  4738: be 87 07                 i32 a0 = a0 + a1
  4741: 7a 67 74 02              u32 [s1 + 0x274] = a0
  4745: 7a 97 54                 u32 [a2 + 0x54] = a0
  4748: 95 17 f0 20              a0 = sp + 0x20f0
  4752: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4756: 49 26 80 02 08           u64 [s1 + 640] = 0x8
  4761: 95 17 70 33              a0 = sp + 0x3370
  4765: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4769: 82 17 18                 a0 = u64 [sp + 0x18]
  4772: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4776: 95 17 4c 33              a0 = sp + 0x334c
  4780: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4784: 82 17 10                 a0 = u64 [sp + 0x10]
  4787: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4791: 95 18 6c 33              a1 = sp + 0x336c
  4795: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4799: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4803: 82 17 08                 a0 = u64 [sp + 0x8]
  4806: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4810: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  4815: 49 26 28 01              u64 [s1 + 296] = 0
  4819: 95 17 40 32              a0 = sp + 0x3240
  4823: 7b 67 18 01              u64 [s1 + 0x118] = a0
  4827: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  4832: 95 17 80 33              a0 = sp + 0x3380
  4836: 95 18 00 32              a1 = sp + 0x3200
  4840: 50 10 74 71 22           ra = 116, jump @743
      :                          @245 [@dyn 58]
  4845: 82 65 90 02              s0 = u64 [s1 + 0x290]
  4849: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  4853: 82 66 88 02              s1 = u64 [s1 + 0x288]
  4857: 33 07 02                 a0 = 0x2
  4860: 33 08                    a1 = 0
  4862: 33 09                    a2 = 0
  4864: 64 5a                    a3 = s0
  4866: 33 00 76                 ra = 0x76
  4869: 0a 64                    ecalli 100 // 'log'
  4871: 01                       fallthrough
      :                          @246 [@dyn 59]
  4872: 33 02 00 10              t0 = 0x1000
  4876: 82 1c 60                 a5 = u64 [sp + 0x60]
  4879: 82 17 70                 a0 = u64 [sp + 0x70]
  4882: c8 67 07                 a0 = a0 + s1
  4885: 53 27 00 f0 1c           jump @251 if a0 <u 4294963200
      :                          @247
  4890: c8 2c 08                 a1 = a5 + t0
  4893: 82 87                    a0 = u64 [a1]
  4895: c9 78 09                 a2 = a1 - a0
  4898: ab 59 0f                 jump @251 if a2 != s0
      :                          @248
  4901: c9 67 09                 a2 = a0 - s1
  4904: 01                       fallthrough
      :                          @249
  4905: 82 8a                    a3 = u64 [a1]
  4907: ab 7a ef                 jump @247 if a3 != a0
      :                          @250
  4910: 7b 89                    u64 [a1] = a2
  4912: 01                       fallthrough
      :                          @251
  4913: 95 16 f8 30              s1 = sp + 0x30f8
  4917: 82 67 58 02              a0 = u64 [s1 + 0x258]
  4921: 82 68                    a1 = u64 [s1]
  4923: ab 87 19                 jump @253 if a0 != a1
      :                          @252
  4926: 82 17 58                 a0 = u64 [sp + 0x58]
  4929: 7a 67 48 02              u32 [s1 + 0x248] = a0
  4933: 95 18 44 33              a1 = sp + 0x3344
  4937: 95 15 a0 20              s0 = sp + 0x20a0
  4941: 81 57 58                 a0 = i32 [s0 + 0x58]
  4944: 7a 87                    u32 [a1] = a0
  4946: 28 16                    jump @255
      :                          @253
  4948: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  4951: 95 18 48 33              a1 = sp + 0x3348
  4955: 95 15 a0 20              s0 = sp + 0x20a0
  4959: ab 97 09                 jump @255 if a0 != a2
      :                          @254
  4962: 81 57 58                 a0 = i32 [s0 + 0x58]
  4965: 7a 87                    u32 [a1] = a0
  4967: 01                       fallthrough
      :                          @255
  4968: 83 28 08                 i32 a1 = t0 + 0x8
  4971: 95 17 f0 20              a0 = sp + 0x20f0
  4975: 0a 13                    ecalli 19 // 'export'
  4977: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4981: 0a                       ecalli 0 // 'gas'
  4982: 7b 57 40                 u64 [s0 + 0x40] = a0
  4985: 33 07 50 0b 01           a0 = 0x10b50
  4990: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4994: 95 18 50 33              a1 = sp + 0x3350
  4998: 7b 68 48 01              u64 [s1 + 0x148] = a1
  5002: 82 17 68                 a0 = u64 [sp + 0x68]
  5005: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5009: 7b 68 58 01              u64 [s1 + 0x158] = a1
  5013: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5017: 95 18 70 33              a1 = sp + 0x3370
  5021: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5025: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5029: 95 18 e0 20              a1 = sp + 0x20e0
  5033: 7b 68 78 01              u64 [s1 + 0x178] = a1
  5037: 7b 67 80 01              u64 [s1 + 0x180] = a0
  5041: 95 17 40 33              a0 = sp + 0x3340
  5045: 7b 67 88 01              u64 [s1 + 0x188] = a0
  5049: 82 17 48                 a0 = u64 [sp + 0x48]
  5052: 7b 67 90 01              u64 [s1 + 0x190] = a0
  5056: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  5061: 49 26 28 01              u64 [s1 + 296] = 0
  5065: 95 18 40 32              a1 = sp + 0x3240
  5069: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5073: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  5078: 95 17 80 33              a0 = sp + 0x3380
  5082: 95 18 00 32              a1 = sp + 0x3200
  5086: 50 10 78 7b 21           ra = 120, jump @743
      :                          @256 [@dyn 60]
  5091: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5095: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5099: 95 17 f8 30              a0 = sp + 0x30f8
  5103: 82 76 88 02              s1 = u64 [a0 + 0x288]
  5107: 33 07 02                 a0 = 0x2
  5110: 33 08                    a1 = 0
  5112: 33 09                    a2 = 0
  5114: 64 5a                    a3 = s0
  5116: 33 00 7a                 ra = 0x7a
  5119: 0a 64                    ecalli 100 // 'log'
  5121: 01                       fallthrough
      :                          @257 [@dyn 61]
  5122: 33 02 00 10              t0 = 0x1000
  5126: 82 17 70                 a0 = u64 [sp + 0x70]
  5129: c8 67 07                 a0 = a0 + s1
  5132: 82 1c 60                 a5 = u64 [sp + 0x60]
  5135: 53 27 00 f0 6c fd        jump @236 if a0 <u 4294963200
      :                          @258
  5141: c8 2c 08                 a1 = a5 + t0
  5144: 82 87                    a0 = u64 [a1]
  5146: c9 78 09                 a2 = a1 - a0
  5149: ab 59 5e fd              jump @236 if a2 != s0
      :                          @259
  5153: c9 67 09                 a2 = a0 - s1
  5156: 01                       fallthrough
      :                          @260
  5157: 82 8a                    a3 = u64 [a1]
  5159: ab 7a ee                 jump @258 if a3 != a0
      :                          @261
  5162: 7b 89                    u64 [a1] = a2
  5164: 33 0b                    a4 = 0
  5166: 01                       fallthrough
      :                          @262
  5167: ab 7a e6                 jump @258 if a3 != a0
      :                          @263
  5170: 28 49 fd                 jump @236
      :                          @264
  5173: 95 17 44 33              a0 = sp + 0x3344
  5177: 95 18 48 33              a1 = sp + 0x3348
  5181: 95 19 40 33              a2 = sp + 0x3340
  5185: 7b 69 48 01              u64 [s1 + 0x148] = a2
  5189: 82 19 48                 a2 = u64 [sp + 0x48]
  5192: 7b 69 50 01              u64 [s1 + 0x150] = a2
  5196: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5200: 7b 69 60 01              u64 [s1 + 0x160] = a2
  5204: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5208: 7b 69 70 01              u64 [s1 + 0x170] = a2
  5212: 33 07 70 0a 01           a0 = 0x10a70
  5217: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5221: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5226: 49 26 28 01              u64 [s1 + 296] = 0
  5230: 95 18 40 32              a1 = sp + 0x3240
  5234: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5238: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5243: 95 17 80 33              a0 = sp + 0x3380
  5247: 95 18 00 32              a1 = sp + 0x3200
  5251: 50 10 7c d6 20           ra = 124, jump @743
      :                          @265 [@dyn 62]
  5256: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5260: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5264: 95 17 f8 30              a0 = sp + 0x30f8
  5268: 82 76 88 02              s1 = u64 [a0 + 0x288]
  5272: 33 07 02                 a0 = 0x2
  5275: 33 08                    a1 = 0
  5277: 33 09                    a2 = 0
  5279: 64 5a                    a3 = s0
  5281: 33 00 7e                 ra = 0x7e
  5284: 0a 64                    ecalli 100 // 'log'
  5286: 01                       fallthrough
      :                          @266 [@dyn 63]
  5287: 82 17 70                 a0 = u64 [sp + 0x70]
  5290: c8 67 07                 a0 = a0 + s1
  5293: 53 27 00 f0 21           jump @272 if a0 <u 4294963200
      :                          @267
  5298: 82 18 60                 a1 = u64 [sp + 0x60]
  5301: 95 87 00 10              a0 = a1 + 0x1000
  5305: 01                       fallthrough
      :                          @268
  5306: 82 78                    a1 = u64 [a0]
  5308: c9 87 09                 a2 = a0 - a1
  5311: ab 59 0f                 jump @272 if a2 != s0
      :                          @269
  5314: c9 68 09                 a2 = a1 - s1
  5317: 01                       fallthrough
      :                          @270
  5318: 82 7a                    a3 = u64 [a0]
  5320: ab 8a f2                 jump @268 if a3 != a1
      :                          @271
  5323: 7b 79                    u64 [a0] = a2
  5325: 01                       fallthrough
      :                          @272
  5326: 95 15 a0 20              s0 = sp + 0x20a0
  5330: 82 57 48                 a0 = u64 [s0 + 0x48]
  5333: 0a 1a                    ecalli 26 // 'expunge'
  5335: 95 16 f8 30              s1 = sp + 0x30f8
  5339: 7b 67 78 02              u64 [s1 + 0x278] = a0
  5343: 0a                       ecalli 0 // 'gas'
  5344: 7b 57 40                 u64 [s0 + 0x40] = a0
  5347: 95 17 e8 20              a0 = sp + 0x20e8
  5351: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5355: 95 17 70 33              a0 = sp + 0x3370
  5359: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5363: 95 17 e0 20              a0 = sp + 0x20e0
  5367: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5371: 82 17 68                 a0 = u64 [sp + 0x68]
  5374: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5378: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5382: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5386: 33 07 a0 0a 01           a0 = 0x10aa0
  5391: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5395: 95 17 40 32              a0 = sp + 0x3240
  5399: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5403: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5408: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5413: 49 26 28 01              u64 [s1 + 296] = 0
  5417: 95 17 80 33              a0 = sp + 0x3380
  5421: 95 18 00 32              a1 = sp + 0x3200
  5425: 50 20 80 00 28 20        ra = 128, jump @743
      :                          @273 [@dyn 64]
  5431: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5435: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5439: 82 66 88 02              s1 = u64 [s1 + 0x288]
  5443: 33 07 02                 a0 = 0x2
  5446: 33 08                    a1 = 0
  5448: 33 09                    a2 = 0
  5450: 64 5a                    a3 = s0
  5452: 33 00 82 00              ra = 0x82
  5456: 0a 64                    ecalli 100 // 'log'
  5458: 01                       fallthrough
      :                          @274 [@dyn 65]
  5459: 82 17 70                 a0 = u64 [sp + 0x70]
  5462: c8 67 07                 a0 = a0 + s1
  5465: 53 27 00 f0 2c           jump @280 if a0 <u 4294963200
      :                          @275
  5470: 82 18 60                 a1 = u64 [sp + 0x60]
  5473: 95 87 00 10              a0 = a1 + 0x1000
  5477: 01                       fallthrough
      :                          @276
  5478: 82 78                    a1 = u64 [a0]
  5480: c9 87 09                 a2 = a0 - a1
  5483: ab 59 1a                 jump @280 if a2 != s0
      :                          @277
  5486: c9 68 09                 a2 = a1 - s1
  5489: 01                       fallthrough
      :                          @278
  5490: 82 7a                    a3 = u64 [a0]
  5492: ab 8a f2                 jump @276 if a3 != a1
      :                          @279
  5495: 7b 79                    u64 [a0] = a2
  5497: 33 0b                    a4 = 0
  5499: 95 1a 40 33              a3 = sp + 0x3340
  5503: 33 08 0c                 a1 = 0xc
  5506: 28 23 f1                 jump @120
      :                          @280
  5509: 95 1a 40 33              a3 = sp + 0x3340
  5513: 33 08 0c                 a1 = 0xc
  5516: 28 19 f1                 jump @120
      :                          @281
  5519: 00                       trap
      :                          @282 [export #1: 'accumulate']
  5520: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5524: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5528: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5532: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5536: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  5540: 33 09 08                 a2 = 0x8
  5543: ac 98 0a 01              jump @315 if a1 <u a2
      :                          @283
  5547: 52 07 06                 jump @285 if a0 != 0
      :                          @284
  5550: 28 d6 1c                 jump @672
      :                          @285
  5553: 95 79 04                 a2 = a0 + 0x4
  5556: 52 09 06                 jump @287 if a2 != 0
      :                          @286
  5559: 28 ce 1c                 jump @673
      :                          @287
  5562: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5565: 7b 19 40                 u64 [sp + 0x40] = a2
  5568: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5571: 7b 19 28                 u64 [sp + 0x28] = a2
  5574: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5577: 7b 19 38                 u64 [sp + 0x38] = a2
  5580: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5583: 7b 19 30                 u64 [sp + 0x30] = a2
  5586: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5589: 95 75 08                 s0 = a0 + 0x8
  5592: 51 0a 45                 jump @297 if a3 == 0
      :                          @288
  5595: 7d 58                    a1 = i8 [s0]
  5597: 33 06 01                 s1 = 0x1
  5600: 59 08 40                 jump @298 if a1 >=s 0
      :                          @289
  5603: 84 89 ff 00              a2 = a1 & 0xff
  5607: 33 06 02                 s1 = 0x2
  5610: 53 29 c0 00 2d           jump @295 if a2 <u 192
      :                          @290
  5615: 33 06 03                 s1 = 0x3
  5618: 53 29 e0 00 25           jump @295 if a2 <u 224
      :                          @291
  5623: 33 06 04                 s1 = 0x4
  5626: 53 29 f0 00 1d           jump @295 if a2 <u 240
      :                          @292
  5631: 33 06 05                 s1 = 0x5
  5634: 53 29 f8 00 15           jump @295 if a2 <u 248
      :                          @293
  5639: 33 06 06                 s1 = 0x6
  5642: 53 29 fc 00 0d           jump @295 if a2 <u 252
      :                          @294
  5647: 88 98 fe 00              a1 = a2 <u 0xfe
  5651: 9a 86 08                 s1 = 0x8 - a1
  5654: 01                       fallthrough
      :                          @295
  5655: ae 6a 09                 jump @298 if a3 >=u s1
      :                          @296
  5658: 28 97 00                 jump @315
      :                          @297
  5661: 33 06                    s1 = 0
  5663: 01                       fallthrough
      :                          @298
  5664: 7b 16 48                 u64 [sp + 0x48] = s1
  5667: 64 57                    a0 = s0
  5669: 64 68                    a1 = s1
  5671: 64 a6                    s1 = a3
  5673: 50 20 84 00 ee 2b        ra = 132, jump @997
      :                          @299 [@dyn 66]
  5679: 82 1a 48                 a3 = u64 [sp + 0x48]
  5682: 51 07 7f                 jump @315 if a0 == 0
      :                          @300
  5685: e4 a6 07                 a0 = maxu(s1, a3)
  5688: c9 a7 07                 a0 = a0 - a3
  5691: 53 17 60 76              jump @315 if a0 <u 96
      :                          @301
  5695: c8 5a 08                 a1 = a3 + s0
  5698: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5701: 95 87 60                 a0 = a1 + 0x60
  5704: 7b 17 48                 u64 [sp + 0x48] = a0
  5707: 51 06 4f                 jump @313 if s1 == 0
      :                          @302
  5710: 7d 78                    a1 = i8 [a0]
  5712: 33 05 01                 s0 = 0x1
  5715: 59 08 37                 jump @309 if a1 >=s 0
      :                          @303
  5718: 84 89 ff 00              a2 = a1 & 0xff
  5722: 33 05 02                 s0 = 0x2
  5725: 53 29 c0 00 2d           jump @309 if a2 <u 192
      :                          @304
  5730: 33 05 03                 s0 = 0x3
  5733: 53 29 e0 00 25           jump @309 if a2 <u 224
      :                          @305
  5738: 33 05 04                 s0 = 0x4
  5741: 53 29 f0 00 1d           jump @309 if a2 <u 240
      :                          @306
  5746: 33 05 05                 s0 = 0x5
  5749: 53 29 f8 00 15           jump @309 if a2 <u 248
      :                          @307
  5754: 33 05 06                 s0 = 0x6
  5757: 53 29 fc 00 0d           jump @309 if a2 <u 252
      :                          @308
  5762: 88 98 fe 00              a1 = a2 <u 0xfe
  5766: 9a 85 08                 s0 = 0x8 - a1
  5769: 01                       fallthrough
      :                          @309
  5770: ae 56 06                 jump @311 if s1 >=u s0
      :                          @310
  5773: 28 f9 1b                 jump @674
      :                          @311
  5776: 64 58                    a1 = s0
  5778: 50 20 86 00 85 2b        ra = 134, jump @997
      :                          @312 [@dyn 67]
  5784: 28 07                    jump @314
      :                          @313
  5786: 33 05                    s0 = 0
  5788: 33 07                    a0 = 0
  5790: 01                       fallthrough
      :                          @314
  5791: e4 56 08                 a1 = maxu(s1, s0)
  5794: c9 58 08                 a1 = a1 - s0
  5797: e4 78 08                 a1 = maxu(a1, a0)
  5800: c9 78 08                 a1 = a1 - a0
  5803: 33 09 21                 a2 = 0x21
  5806: ae 98 23                 jump @317 if a1 >=u a2
      :                          @315
  5809: 33 08                    a1 = 0
  5811: 33 05 00 00 01           s0 = 0x10000
  5816: 01                       fallthrough
      :                          @316
  5817: 64 57                    a0 = s0
  5819: 95 11 40 04              sp = sp + 0x440
  5823: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  5827: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  5831: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  5835: 95 11 f8 07              sp = sp + 0x7f8
  5839: 32 00                    ret
      :                          @317
  5841: 82 19 48                 a2 = u64 [sp + 0x48]
  5844: c8 95 05                 s0 = s0 + a2
  5847: c8 57 07                 a0 = a0 + s0
  5850: 7c 79 20                 a2 = u8 [a0 + 0x20]
  5853: 51 09 0a                 jump @319 if a2 == 0
      :                          @318
  5856: 33 06                    s1 = 0
  5858: 33 0a                    a3 = 0
  5860: 28 86 00                 jump @334
      :                          @319
  5863: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  5866: 95 75 21                 s0 = a0 + 0x21
  5869: 51 0a 57                 jump @331 if a3 == 0
      :                          @320
  5872: 7d 57                    a0 = i8 [s0]
  5874: 33 06 01                 s1 = 0x1
  5877: 59 07 37                 jump @327 if a0 >=s 0
      :                          @321
  5880: 84 77 ff 00              a0 = a0 & 0xff
  5884: 33 06 02                 s1 = 0x2
  5887: 53 27 c0 00 2d           jump @327 if a0 <u 192
      :                          @322
  5892: 33 06 03                 s1 = 0x3
  5895: 53 27 e0 00 25           jump @327 if a0 <u 224
      :                          @323
  5900: 33 06 04                 s1 = 0x4
  5903: 53 27 f0 00 1d           jump @327 if a0 <u 240
      :                          @324
  5908: 33 06 05                 s1 = 0x5
  5911: 53 27 f8 00 15           jump @327 if a0 <u 248
      :                          @325
  5916: 33 06 06                 s1 = 0x6
  5919: 53 27 fc 00 0d           jump @327 if a0 <u 252
      :                          @326
  5924: 88 77 fe 00              a0 = a0 <u 0xfe
  5928: 9a 76 08                 s1 = 0x8 - a0
  5931: 01                       fallthrough
      :                          @327
  5932: 7b 1a 48                 u64 [sp + 0x48] = a3
  5935: ae 6a 06                 jump @329 if a3 >=u s1
      :                          @328
  5938: 28 56 1b                 jump @676
      :                          @329
  5941: 64 57                    a0 = s0
  5943: 64 68                    a1 = s1
  5945: 50 20 88 00 de 2a        ra = 136, jump @997
      :                          @330 [@dyn 68]
  5951: 82 1a 48                 a3 = u64 [sp + 0x48]
  5954: 28 07                    jump @332
      :                          @331
  5956: 33 06                    s1 = 0
  5958: 33 07                    a0 = 0
  5960: 01                       fallthrough
      :                          @332
  5961: e4 6a 08                 a1 = maxu(a3, s1)
  5964: c9 68 08                 a1 = a1 - s1
  5967: e6 78 0a                 a3 = minu(a1, a0)
  5970: c8 56 06                 s1 = s1 + s0
  5973: 52 1a 24 15              jump @334 if a3 != 36
      :                          @333
  5977: 80 68 20                 a1 = u32 [s1 + 0x20]
  5980: 64 67                    a0 = s1
  5982: 0a 0e                    ecalli 14 // 'solicit'
  5984: 33 08                    a1 = 0
  5986: 33 05 00 00 01           s0 = 0x10000
  5991: 28 52 ff                 jump @316
      :                          @334
  5994: 82 17 28                 a0 = u64 [sp + 0x28]
  5997: 97 77 08                 a0 = a0 << 0x8
  6000: 82 18 40                 a1 = u64 [sp + 0x40]
  6003: d4 87 07                 a0 = a0 | a1
  6006: 82 18 38                 a1 = u64 [sp + 0x38]
  6009: 97 88 10                 a1 = a1 << 0x10
  6012: 82 19 30                 a2 = u64 [sp + 0x30]
  6015: 97 99 18                 a2 = a2 << 0x18
  6018: d4 98 08                 a1 = a1 | a2
  6021: d4 87 07                 a0 = a0 | a1
  6024: 7b 17 38                 u64 [sp + 0x38] = a0
  6027: 46 11 51                 u8 [sp + 81] = 0
  6030: 81 65                    s0 = i32 [s1]
  6032: 95 17 51                 a0 = sp + 0x51
  6035: 33 08 01                 a1 = 0x1
  6038: 7b 16 18                 u64 [sp + 0x18] = s1
  6041: 64 69                    a2 = s1
  6043: 7b 1a 20                 u64 [sp + 0x20] = a3
  6046: 0a 03                    ecalli 3 // 'write'
  6048: 46 11 52 6a              u8 [sp + 82] = 0x6a
  6052: 46 11 53 61              u8 [sp + 83] = 0x61
  6056: 46 11 54 6d              u8 [sp + 84] = 0x6d
  6060: 46 11 55 44              u8 [sp + 85] = 0x44
  6064: 46 11 56 4f              u8 [sp + 86] = 0x4f
  6068: 46 11 57 54              u8 [sp + 87] = 0x54
  6072: 46 11 58 6a              u8 [sp + 88] = 0x6a
  6076: 46 11 59 0d              u8 [sp + 89] = 0xd
  6080: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  6084: 46 11 5b 19              u8 [sp + 91] = 0x19
  6088: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  6093: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  6098: 46 11 5e 50              u8 [sp + 94] = 0x50
  6102: 46 11 5f 57              u8 [sp + 95] = 0x57
  6106: 46 11 60 13              u8 [sp + 96] = 0x13
  6110: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  6115: 46 11 62 65              u8 [sp + 98] = 0x65
  6119: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  6124: 46 11 64 31              u8 [sp + 100] = 0x31
  6128: 46 11 65 03              u8 [sp + 101] = 0x3
  6132: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  6137: 46 11 67 73              u8 [sp + 103] = 0x73
  6141: 33 0b f1 00              a4 = 0xf1
  6145: 78 1b 68                 u8 [sp + 0x68] = a4
  6148: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6153: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6158: 46 11 6b 64              u8 [sp + 107] = 0x64
  6162: 46 11 6c 56              u8 [sp + 108] = 0x56
  6166: 46 11 6d 32              u8 [sp + 109] = 0x32
  6170: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6175: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6180: 46 11 70 50              u8 [sp + 112] = 0x50
  6184: 33 0c 3c                 a5 = 0x3c
  6187: 78 1c 71                 u8 [sp + 0x71] = a5
  6190: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6194: 46 11 73 0c              u8 [sp + 115] = 0xc
  6198: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6202: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6206: 46 11 76 19              u8 [sp + 118] = 0x19
  6210: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6215: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6220: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6225: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6230: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6234: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6239: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6244: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6249: 46 11 7f 47              u8 [sp + 127] = 0x47
  6253: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6259: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6264: 78 1c 82 00              u8 [sp + 0x82] = a5
  6268: 78 1b 83 00              u8 [sp + 0x83] = a4
  6272: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6278: 95 16 ff 07              s1 = sp + 0x7ff
  6282: 95 66 99 03              s1 = s1 + 0x399
  6286: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6291: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6296: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6302: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6308: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6314: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6320: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6326: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6332: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6337: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6342: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6347: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6353: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6359: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6364: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6369: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6375: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6381: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6386: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6391: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  6396: 95 17 98 00              a0 = sp + 0x98
  6400: 33 09 00 01              a2 = 0x100
  6404: 33 08                    a1 = 0
  6406: 50 20 8a 00 7a 1f        ra = 138, jump @811
      :                          @335 [@dyn 69]
  6412: 7b 15 28                 u64 [sp + 0x28] = s0
  6415: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  6418: 33 05 48 00 01           s0 = 0x10048
  6423: 33 09 1a                 a2 = 0x1a
  6426: 7b 19 40                 u64 [sp + 0x40] = a2
  6429: 54 17 09 07              jump @337 if a0 <=u 9
      :                          @336
  6433: 28 a2 17                 jump @645
      :                          @337
  6436: 97 77 02                 a0 = a0 << 0x2
  6439: 33 08 00 00 01           a1 = 0x10000
  6444: c8 87 07                 a0 = a0 + a1
  6447: 81 77                    a0 = i32 [a0]
  6449: c8 87 07                 a0 = a0 + a1
  6452: 7b 15 30                 u64 [sp + 0x30] = s0
  6455: 32 07                    jump [a0]
      :                          @338 [@dyn 70]
  6457: 95 18 52                 a1 = sp + 0x52
  6460: 33 09 03                 a2 = 0x3
  6463: 95 1a 98 00              a3 = sp + 0x98
  6467: 33 0c 00 01              a5 = 0x100
  6471: 82 17 38                 a0 = u64 [sp + 0x38]
  6474: 33 0b                    a4 = 0
  6476: 0a 02                    ecalli 2 // 'read'
  6478: 7b 67 70                 u64 [s1 + 0x70] = a0
  6481: 33 07 50 00 01           a0 = 0x10050
  6486: 7b 17 10                 u64 [sp + 0x10] = a0
  6489: 7b 67 18                 u64 [s1 + 0x18] = a0
  6492: 82 18 40                 a1 = u64 [sp + 0x40]
  6495: 7b 68 20                 u64 [s1 + 0x20] = a1
  6498: 95 17 ff 07              a0 = sp + 0x7ff
  6502: 95 77 09 04              a0 = a0 + 0x409
  6506: 7b 67 28                 u64 [s1 + 0x28] = a0
  6509: 7b 68 30                 u64 [s1 + 0x30] = a1
  6512: 33 07 a0 0b 01           a0 = 0x10ba0
  6517: 7b 17 98 01              u64 [sp + 0x198] = a0
  6521: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6526: 49 21 b8 01              u64 [sp + 440] = 0
  6530: 95 17 ff 07              a0 = sp + 0x7ff
  6534: 95 77 b1 03              a0 = a0 + 0x3b1
  6538: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6542: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6547: 95 17 ff 07              a0 = sp + 0x7ff
  6551: 95 77 e1 03              a0 = a0 + 0x3e1
  6555: 95 18 98 01              a1 = sp + 0x198
  6559: 50 20 8e 00 ba 1b        ra = 142, jump @743
      :                          @339 [@dyn 71]
  6565: 82 65 50                 s0 = u64 [s1 + 0x50]
  6568: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6571: 95 17 ff 07              a0 = sp + 0x7ff
  6575: 95 77 99 03              a0 = a0 + 0x399
  6579: 82 76 48                 s1 = u64 [a0 + 0x48]
  6582: 33 07 02                 a0 = 0x2
  6585: 33 08                    a1 = 0
  6587: 33 09                    a2 = 0
  6589: 64 5a                    a3 = s0
  6591: 33 00 90 00              ra = 0x90
  6595: 0a 64                    ecalli 100 // 'log'
  6597: 01                       fallthrough
      :                          @340 [@dyn 72]
  6598: 82 17 48                 a0 = u64 [sp + 0x48]
  6601: c8 67 07                 a0 = a0 + s1
  6604: 53 27 00 f0 23           jump @346 if a0 <u 4294963200
      :                          @341
  6609: 33 07 40 00 03           a0 = 0x30040
  6614: 95 77 00 10              a0 = a0 + 0x1000
  6618: 01                       fallthrough
      :                          @342
  6619: 82 78                    a1 = u64 [a0]
  6621: c9 87 09                 a2 = a0 - a1
  6624: ab 59 0f                 jump @346 if a2 != s0
      :                          @343
  6627: c9 68 09                 a2 = a1 - s1
  6630: 01                       fallthrough
      :                          @344
  6631: 82 7a                    a3 = u64 [a0]
  6633: ab 8a f2                 jump @342 if a3 != a1
      :                          @345
  6636: 7b 79                    u64 [a0] = a2
  6638: 01                       fallthrough
      :                          @346
  6639: 95 16 ff 07              s1 = sp + 0x7ff
  6643: 95 66 99 03              s1 = s1 + 0x399
  6647: 82 67 70                 a0 = u64 [s1 + 0x70]
  6650: 33 08 01                 a1 = 0x1
  6653: 50 20 92 00 b8 28        ra = 146, jump @1021
      :                          @347 [@dyn 73]
  6659: 95 17 52                 a0 = sp + 0x52
  6662: 33 08 03                 a1 = 0x3
  6665: 95 19 55                 a2 = sp + 0x55
  6668: 33 0a 03                 a3 = 0x3
  6671: 0a 03                    ecalli 3 // 'write'
  6673: 7b 67 78                 u64 [s1 + 0x78] = a0
  6676: 82 17 10                 a0 = u64 [sp + 0x10]
  6679: 7b 67 18                 u64 [s1 + 0x18] = a0
  6682: 95 17 ff 07              a0 = sp + 0x7ff
  6686: 95 77 11 04              a0 = a0 + 0x411
  6690: 7b 67 28                 u64 [s1 + 0x28] = a0
  6693: 33 07 d0 0b 01           a0 = 0x10bd0
  6698: 7b 17 98 01              u64 [sp + 0x198] = a0
  6702: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6707: 49 21 b8 01              u64 [sp + 440] = 0
  6711: 95 17 ff 07              a0 = sp + 0x7ff
  6715: 95 77 b1 03              a0 = a0 + 0x3b1
  6719: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6723: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6728: 82 17 40                 a0 = u64 [sp + 0x40]
  6731: 7b 67 20                 u64 [s1 + 0x20] = a0
  6734: 7b 67 30                 u64 [s1 + 0x30] = a0
  6737: 95 17 ff 07              a0 = sp + 0x7ff
  6741: 95 77 e1 03              a0 = a0 + 0x3e1
  6745: 95 18 98 01              a1 = sp + 0x198
  6749: 50 20 94 00 fc 1a        ra = 148, jump @743
      :                          @348 [@dyn 74]
  6755: 82 65 50                 s0 = u64 [s1 + 0x50]
  6758: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6761: 82 66 48                 s1 = u64 [s1 + 0x48]
  6764: 33 07 02                 a0 = 0x2
  6767: 33 08                    a1 = 0
  6769: 33 09                    a2 = 0
  6771: 64 5a                    a3 = s0
  6773: 33 00 96 00              ra = 0x96
  6777: 0a 64                    ecalli 100 // 'log'
  6779: 01                       fallthrough
      :                          @349 [@dyn 75]
  6780: 82 17 48                 a0 = u64 [sp + 0x48]
  6783: c8 67 07                 a0 = a0 + s1
  6786: 53 27 00 f0 23           jump @355 if a0 <u 4294963200
      :                          @350
  6791: 33 07 40 00 03           a0 = 0x30040
  6796: 95 77 00 10              a0 = a0 + 0x1000
  6800: 01                       fallthrough
      :                          @351
  6801: 82 78                    a1 = u64 [a0]
  6803: c9 87 09                 a2 = a0 - a1
  6806: ab 59 0f                 jump @355 if a2 != s0
      :                          @352
  6809: c9 68 09                 a2 = a1 - s1
  6812: 01                       fallthrough
      :                          @353
  6813: 82 7a                    a3 = u64 [a0]
  6815: ab 8a f2                 jump @351 if a3 != a1
      :                          @354
  6818: 7b 79                    u64 [a0] = a2
  6820: 01                       fallthrough
      :                          @355
  6821: 95 16 ff 07              s1 = sp + 0x7ff
  6825: 95 66 99 03              s1 = s1 + 0x399
  6829: 82 67 78                 a0 = u64 [s1 + 0x78]
  6832: 33 08 02                 a1 = 0x2
  6835: 33 05 02                 s0 = 0x2
  6838: 50 20 98 00 ff 27        ra = 152, jump @1021
      :                          @356 [@dyn 76]
  6844: 95 18 52                 a1 = sp + 0x52
  6847: 33 09 03                 a2 = 0x3
  6850: 95 1a 98 00              a3 = sp + 0x98
  6854: 33 0c 00 01              a5 = 0x100
  6858: 82 17 38                 a0 = u64 [sp + 0x38]
  6861: 33 0b                    a4 = 0
  6863: 0a 02                    ecalli 2 // 'read'
  6865: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6869: 82 17 30                 a0 = u64 [sp + 0x30]
  6872: 7b 67 18                 u64 [s1 + 0x18] = a0
  6875: 82 18 40                 a1 = u64 [sp + 0x40]
  6878: 7b 68 20                 u64 [s1 + 0x20] = a1
  6881: 95 17 ff 07              a0 = sp + 0x7ff
  6885: 95 77 19 04              a0 = a0 + 0x419
  6889: 7b 67 28                 u64 [s1 + 0x28] = a0
  6892: 7b 68 30                 u64 [s1 + 0x30] = a1
  6895: 33 07 00 0c 01           a0 = 0x10c00
  6900: 7b 17 98 01              u64 [sp + 0x198] = a0
  6904: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6909: 49 21 b8 01              u64 [sp + 440] = 0
  6913: 95 17 ff 07              a0 = sp + 0x7ff
  6917: 95 77 b1 03              a0 = a0 + 0x3b1
  6921: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6925: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6929: 95 17 ff 07              a0 = sp + 0x7ff
  6933: 95 77 e1 03              a0 = a0 + 0x3e1
  6937: 95 18 98 01              a1 = sp + 0x198
  6941: 50 20 9a 00 3c 1a        ra = 154, jump @743
      :                          @357 [@dyn 77]
  6947: 82 65 50                 s0 = u64 [s1 + 0x50]
  6950: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6953: 82 66 48                 s1 = u64 [s1 + 0x48]
  6956: 33 07 02                 a0 = 0x2
  6959: 33 08                    a1 = 0
  6961: 33 09                    a2 = 0
  6963: 64 5a                    a3 = s0
  6965: 33 00 9c 00              ra = 0x9c
  6969: 0a 64                    ecalli 100 // 'log'
  6971: 01                       fallthrough
      :                          @358 [@dyn 78]
  6972: 82 17 48                 a0 = u64 [sp + 0x48]
  6975: c8 67 07                 a0 = a0 + s1
  6978: 53 27 00 f0 23           jump @364 if a0 <u 4294963200
      :                          @359
  6983: 33 07 40 00 03           a0 = 0x30040
  6988: 95 77 00 10              a0 = a0 + 0x1000
  6992: 01                       fallthrough
      :                          @360
  6993: 82 78                    a1 = u64 [a0]
  6995: c9 87 09                 a2 = a0 - a1
  6998: ab 59 0f                 jump @364 if a2 != s0
      :                          @361
  7001: c9 68 09                 a2 = a1 - s1
  7004: 01                       fallthrough
      :                          @362
  7005: 82 7a                    a3 = u64 [a0]
  7007: ab 8a f2                 jump @360 if a3 != a1
      :                          @363
  7010: 7b 79                    u64 [a0] = a2
  7012: 01                       fallthrough
      :                          @364
  7013: 95 16 ff 07              s1 = sp + 0x7ff
  7017: 95 66 99 03              s1 = s1 + 0x399
  7021: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7025: 33 08 05                 a1 = 0x5
  7028: 50 20 9e 00 41 27        ra = 158, jump @1021
      :                          @365 [@dyn 79]
  7034: 95 17 52                 a0 = sp + 0x52
  7037: 33 08                    a1 = 0
  7039: 0a 0f                    ecalli 15 // 'forget'
  7041: 7b 67                    u64 [s1] = a0
  7043: 33 07 60 00 01           a0 = 0x10060
  7048: 7b 67 18                 u64 [s1 + 0x18] = a0
  7051: 33 07 30 0c 01           a0 = 0x10c30
  7056: 7b 17 98 01              u64 [sp + 0x198] = a0
  7060: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7065: 49 21 b8 01              u64 [sp + 440] = 0
  7069: 95 17 ff 07              a0 = sp + 0x7ff
  7073: 95 77 b1 03              a0 = a0 + 0x3b1
  7077: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7081: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7086: 82 17 40                 a0 = u64 [sp + 0x40]
  7089: 7b 67 20                 u64 [s1 + 0x20] = a0
  7092: 7b 66 28                 u64 [s1 + 0x28] = s1
  7095: 7b 67 30                 u64 [s1 + 0x30] = a0
  7098: 95 17 ff 07              a0 = sp + 0x7ff
  7102: 95 77 e1 03              a0 = a0 + 0x3e1
  7106: 95 18 98 01              a1 = sp + 0x198
  7110: 50 20 a0 00 93 19        ra = 160, jump @743
      :                          @366 [@dyn 80]
  7116: 82 65 50                 s0 = u64 [s1 + 0x50]
  7119: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7122: 82 66 48                 s1 = u64 [s1 + 0x48]
  7125: 33 07 02                 a0 = 0x2
  7128: 33 08                    a1 = 0
  7130: 33 09                    a2 = 0
  7132: 64 5a                    a3 = s0
  7134: 33 00 a2 00              ra = 0xa2
  7138: 0a 64                    ecalli 100 // 'log'
  7140: 01                       fallthrough
      :                          @367 [@dyn 81]
  7141: 82 17 48                 a0 = u64 [sp + 0x48]
  7144: c8 67 07                 a0 = a0 + s1
  7147: 53 27 00 f0 e5 09        jump @502 if a0 <u 4294963200
      :                          @368
  7153: 33 07 40 00 03           a0 = 0x30040
  7158: 95 77 00 10              a0 = a0 + 0x1000
  7162: 01                       fallthrough
      :                          @369
  7163: 82 78                    a1 = u64 [a0]
  7165: c9 87 09                 a2 = a0 - a1
  7168: ab 59 d0 09              jump @502 if a2 != s0
      :                          @370
  7172: c9 68 09                 a2 = a1 - s1
  7175: 01                       fallthrough
      :                          @371
  7176: 82 7a                    a3 = u64 [a0]
  7178: ab 8a f1                 jump @369 if a3 != a1
      :                          @372
  7181: 7b 79                    u64 [a0] = a2
  7183: 33 0b                    a4 = 0
  7185: 01                       fallthrough
      :                          @373
  7186: ab 8a e9                 jump @369 if a3 != a1
      :                          @374
  7189: 28 bb 09                 jump @502
      :                          @375 [@dyn 82]
  7192: 95 18 52                 a1 = sp + 0x52
  7195: 33 09 03                 a2 = 0x3
  7198: 95 1a 98 00              a3 = sp + 0x98
  7202: 33 0c 00 01              a5 = 0x100
  7206: 82 17 38                 a0 = u64 [sp + 0x38]
  7209: 33 0b                    a4 = 0
  7211: 0a 02                    ecalli 2 // 'read'
  7213: 7b 67 78                 u64 [s1 + 0x78] = a0
  7216: 7b 65 18                 u64 [s1 + 0x18] = s0
  7219: 82 18 40                 a1 = u64 [sp + 0x40]
  7222: 7b 68 20                 u64 [s1 + 0x20] = a1
  7225: 95 17 ff 07              a0 = sp + 0x7ff
  7229: 95 77 11 04              a0 = a0 + 0x411
  7233: 7b 67 28                 u64 [s1 + 0x28] = a0
  7236: 7b 68 30                 u64 [s1 + 0x30] = a1
  7239: 33 07 60 0c 01           a0 = 0x10c60
  7244: 7b 17 98 01              u64 [sp + 0x198] = a0
  7248: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7253: 49 21 b8 01              u64 [sp + 440] = 0
  7257: 95 17 ff 07              a0 = sp + 0x7ff
  7261: 95 77 b1 03              a0 = a0 + 0x3b1
  7265: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7269: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7274: 95 17 ff 07              a0 = sp + 0x7ff
  7278: 95 77 e1 03              a0 = a0 + 0x3e1
  7282: 95 18 98 01              a1 = sp + 0x198
  7286: 50 20 a6 00 e3 18        ra = 166, jump @743
      :                          @376 [@dyn 83]
  7292: 82 65 50                 s0 = u64 [s1 + 0x50]
  7295: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7298: 95 17 ff 07              a0 = sp + 0x7ff
  7302: 95 77 99 03              a0 = a0 + 0x399
  7306: 82 76 48                 s1 = u64 [a0 + 0x48]
  7309: 33 07 02                 a0 = 0x2
  7312: 33 08                    a1 = 0
  7314: 33 09                    a2 = 0
  7316: 64 5a                    a3 = s0
  7318: 33 00 a8 00              ra = 0xa8
  7322: 0a 64                    ecalli 100 // 'log'
  7324: 01                       fallthrough
      :                          @377 [@dyn 84]
  7325: 82 17 48                 a0 = u64 [sp + 0x48]
  7328: c8 67 07                 a0 = a0 + s1
  7331: 53 27 00 f0 23           jump @383 if a0 <u 4294963200
      :                          @378
  7336: 33 07 40 00 03           a0 = 0x30040
  7341: 95 77 00 10              a0 = a0 + 0x1000
  7345: 01                       fallthrough
      :                          @379
  7346: 82 78                    a1 = u64 [a0]
  7348: c9 87 09                 a2 = a0 - a1
  7351: ab 59 0f                 jump @383 if a2 != s0
      :                          @380
  7354: c9 68 09                 a2 = a1 - s1
  7357: 01                       fallthrough
      :                          @381
  7358: 82 7a                    a3 = u64 [a0]
  7360: ab 8a f2                 jump @379 if a3 != a1
      :                          @382
  7363: 7b 79                    u64 [a0] = a2
  7365: 01                       fallthrough
      :                          @383
  7366: 95 16 ff 07              s1 = sp + 0x7ff
  7370: 95 66 99 03              s1 = s1 + 0x399
  7374: 82 67 78                 a0 = u64 [s1 + 0x78]
  7377: 33 08 01                 a1 = 0x1
  7380: 50 20 aa 00 e1 25        ra = 170, jump @1021
      :                          @384 [@dyn 85]
  7386: 95 17 52                 a0 = sp + 0x52
  7389: 33 08 03                 a1 = 0x3
  7392: 33 09                    a2 = 0
  7394: 33 0a                    a3 = 0
  7396: 0a 03                    ecalli 3 // 'write'
  7398: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7402: 95 17 ff 07              a0 = sp + 0x7ff
  7406: 95 77 19 04              a0 = a0 + 0x419
  7410: 7b 67 28                 u64 [s1 + 0x28] = a0
  7413: 33 07 90 0c 01           a0 = 0x10c90
  7418: 7b 17 98 01              u64 [sp + 0x198] = a0
  7422: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7427: 49 21 b8 01              u64 [sp + 440] = 0
  7431: 95 17 ff 07              a0 = sp + 0x7ff
  7435: 95 77 b1 03              a0 = a0 + 0x3b1
  7439: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7443: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7448: 33 07 50 00 01           a0 = 0x10050
  7453: 7b 17 10                 u64 [sp + 0x10] = a0
  7456: 7b 67 18                 u64 [s1 + 0x18] = a0
  7459: 82 17 40                 a0 = u64 [sp + 0x40]
  7462: 7b 67 20                 u64 [s1 + 0x20] = a0
  7465: 7b 67 30                 u64 [s1 + 0x30] = a0
  7468: 95 17 ff 07              a0 = sp + 0x7ff
  7472: 95 77 e1 03              a0 = a0 + 0x3e1
  7476: 95 18 98 01              a1 = sp + 0x198
  7480: 50 20 ac 00 21 18        ra = 172, jump @743
      :                          @385 [@dyn 86]
  7486: 82 65 50                 s0 = u64 [s1 + 0x50]
  7489: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7492: 82 66 48                 s1 = u64 [s1 + 0x48]
  7495: 33 07 02                 a0 = 0x2
  7498: 33 08                    a1 = 0
  7500: 33 09                    a2 = 0
  7502: 64 5a                    a3 = s0
  7504: 33 00 ae 00              ra = 0xae
  7508: 0a 64                    ecalli 100 // 'log'
  7510: 01                       fallthrough
      :                          @386 [@dyn 87]
  7511: 82 17 48                 a0 = u64 [sp + 0x48]
  7514: c8 67 07                 a0 = a0 + s1
  7517: 53 27 00 f0 23           jump @392 if a0 <u 4294963200
      :                          @387
  7522: 33 07 40 00 03           a0 = 0x30040
  7527: 95 77 00 10              a0 = a0 + 0x1000
  7531: 01                       fallthrough
      :                          @388
  7532: 82 78                    a1 = u64 [a0]
  7534: c9 87 09                 a2 = a0 - a1
  7537: ab 59 0f                 jump @392 if a2 != s0
      :                          @389
  7540: c9 68 09                 a2 = a1 - s1
  7543: 01                       fallthrough
      :                          @390
  7544: 82 7a                    a3 = u64 [a0]
  7546: ab 8a f2                 jump @388 if a3 != a1
      :                          @391
  7549: 7b 79                    u64 [a0] = a2
  7551: 01                       fallthrough
      :                          @392
  7552: 95 16 ff 07              s1 = sp + 0x7ff
  7556: 95 66 99 03              s1 = s1 + 0x399
  7560: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7564: 33 08 02                 a1 = 0x2
  7567: 33 05 02                 s0 = 0x2
  7570: 50 20 b0 00 23 25        ra = 176, jump @1021
      :                          @393 [@dyn 88]
  7576: 95 18 52                 a1 = sp + 0x52
  7579: 33 09 03                 a2 = 0x3
  7582: 95 1a 98 00              a3 = sp + 0x98
  7586: 33 0c 00 01              a5 = 0x100
  7590: 82 17 38                 a0 = u64 [sp + 0x38]
  7593: 33 0b                    a4 = 0
  7595: 0a 02                    ecalli 2 // 'read'
  7597: 7b 67                    u64 [s1] = a0
  7599: 82 17 10                 a0 = u64 [sp + 0x10]
  7602: 7b 67 18                 u64 [s1 + 0x18] = a0
  7605: 33 07 c0 0c 01           a0 = 0x10cc0
  7610: 7b 17 98 01              u64 [sp + 0x198] = a0
  7614: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7619: 49 21 b8 01              u64 [sp + 440] = 0
  7623: 95 17 ff 07              a0 = sp + 0x7ff
  7627: 95 77 b1 03              a0 = a0 + 0x3b1
  7631: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7635: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7639: 82 17 40                 a0 = u64 [sp + 0x40]
  7642: 7b 67 20                 u64 [s1 + 0x20] = a0
  7645: 7b 66 28                 u64 [s1 + 0x28] = s1
  7648: 7b 67 30                 u64 [s1 + 0x30] = a0
  7651: 95 17 ff 07              a0 = sp + 0x7ff
  7655: 95 77 e1 03              a0 = a0 + 0x3e1
  7659: 95 18 98 01              a1 = sp + 0x198
  7663: 50 20 b2 00 6a 17        ra = 178, jump @743
      :                          @394 [@dyn 89]
  7669: 82 65 50                 s0 = u64 [s1 + 0x50]
  7672: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7675: 82 66 48                 s1 = u64 [s1 + 0x48]
  7678: 33 07 02                 a0 = 0x2
  7681: 33 08                    a1 = 0
  7683: 33 09                    a2 = 0
  7685: 64 5a                    a3 = s0
  7687: 33 00 b4 00              ra = 0xb4
  7691: 0a 64                    ecalli 100 // 'log'
  7693: 01                       fallthrough
      :                          @395 [@dyn 90]
  7694: 82 17 48                 a0 = u64 [sp + 0x48]
  7697: c8 67 07                 a0 = a0 + s1
  7700: 53 27 00 f0 24 02        jump @429 if a0 <u 4294963200
      :                          @396
  7706: 33 07 40 00 03           a0 = 0x30040
  7711: 95 77 00 10              a0 = a0 + 0x1000
  7715: 01                       fallthrough
      :                          @397
  7716: 82 78                    a1 = u64 [a0]
  7718: c9 87 09                 a2 = a0 - a1
  7721: ab 59 0f 02              jump @429 if a2 != s0
      :                          @398
  7725: c9 68 09                 a2 = a1 - s1
  7728: 01                       fallthrough
      :                          @399
  7729: 82 7a                    a3 = u64 [a0]
  7731: ab 8a f1                 jump @397 if a3 != a1
      :                          @400
  7734: 7b 79                    u64 [a0] = a2
  7736: 33 0b                    a4 = 0
  7738: 01                       fallthrough
      :                          @401
  7739: ab 8a e9                 jump @397 if a3 != a1
      :                          @402
  7742: 28 fa 01                 jump @429
      :                          @403 [@dyn 91]
  7745: 95 17 58                 a0 = sp + 0x58
  7748: 33 08 03                 a1 = 0x3
  7751: 0a 0e                    ecalli 14 // 'solicit'
  7753: 7b 67 78                 u64 [s1 + 0x78] = a0
  7756: 95 17 ff 07              a0 = sp + 0x7ff
  7760: 95 77 11 04              a0 = a0 + 0x411
  7764: 7b 67 28                 u64 [s1 + 0x28] = a0
  7767: 33 07 f0 0c 01           a0 = 0x10cf0
  7772: 7b 17 98 01              u64 [sp + 0x198] = a0
  7776: 7b 65 18                 u64 [s1 + 0x18] = s0
  7779: 82 18 40                 a1 = u64 [sp + 0x40]
  7782: 7b 68 20                 u64 [s1 + 0x20] = a1
  7785: 7b 68 30                 u64 [s1 + 0x30] = a1
  7788: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7793: 49 21 b8 01              u64 [sp + 440] = 0
  7797: 95 17 ff 07              a0 = sp + 0x7ff
  7801: 95 77 b1 03              a0 = a0 + 0x3b1
  7805: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7809: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7814: 95 17 ff 07              a0 = sp + 0x7ff
  7818: 95 77 e1 03              a0 = a0 + 0x3e1
  7822: 95 18 98 01              a1 = sp + 0x198
  7826: 50 20 b8 00 c7 16        ra = 184, jump @743
      :                          @404 [@dyn 92]
  7832: 82 65 50                 s0 = u64 [s1 + 0x50]
  7835: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7838: 95 17 ff 07              a0 = sp + 0x7ff
  7842: 95 77 99 03              a0 = a0 + 0x399
  7846: 82 76 48                 s1 = u64 [a0 + 0x48]
  7849: 33 07 02                 a0 = 0x2
  7852: 33 08                    a1 = 0
  7854: 33 09                    a2 = 0
  7856: 64 5a                    a3 = s0
  7858: 33 00 ba 00              ra = 0xba
  7862: 0a 64                    ecalli 100 // 'log'
  7864: 01                       fallthrough
      :                          @405 [@dyn 93]
  7865: 82 17 48                 a0 = u64 [sp + 0x48]
  7868: c8 67 07                 a0 = a0 + s1
  7871: 53 27 00 f0 23           jump @411 if a0 <u 4294963200
      :                          @406
  7876: 33 07 40 00 03           a0 = 0x30040
  7881: 95 77 00 10              a0 = a0 + 0x1000
  7885: 01                       fallthrough
      :                          @407
  7886: 82 78                    a1 = u64 [a0]
  7888: c9 87 09                 a2 = a0 - a1
  7891: ab 59 0f                 jump @411 if a2 != s0
      :                          @408
  7894: c9 68 09                 a2 = a1 - s1
  7897: 01                       fallthrough
      :                          @409
  7898: 82 7a                    a3 = u64 [a0]
  7900: ab 8a f2                 jump @407 if a3 != a1
      :                          @410
  7903: 7b 79                    u64 [a0] = a2
  7905: 01                       fallthrough
      :                          @411
  7906: 95 16 ff 07              s1 = sp + 0x7ff
  7910: 95 66 99 03              s1 = s1 + 0x399
  7914: 82 67 78                 a0 = u64 [s1 + 0x78]
  7917: 33 08 01                 a1 = 0x1
  7920: 33 05 01                 s0 = 0x1
  7923: 50 20 bc 00 c2 23        ra = 188, jump @1021
      :                          @412 [@dyn 94]
  7929: 95 17 58                 a0 = sp + 0x58
  7932: 33 08 03                 a1 = 0x3
  7935: 0a 0d                    ecalli 13 // 'query'
  7937: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7941: 95 17 ff 07              a0 = sp + 0x7ff
  7945: 95 77 19 04              a0 = a0 + 0x419
  7949: 7b 67 48                 u64 [s1 + 0x48] = a0
  7952: 33 07 20 0d 01           a0 = 0x10d20
  7957: 7b 17 98 01              u64 [sp + 0x198] = a0
  7961: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  7966: 49 21 b8 01              u64 [sp + 440] = 0
  7970: 95 17 ff 07              a0 = sp + 0x7ff
  7974: 95 77 e1 03              a0 = a0 + 0x3e1
  7978: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7982: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7986: 82 17 40                 a0 = u64 [sp + 0x40]
  7989: 7b 67 50                 u64 [s1 + 0x50] = a0
  7992: 95 17 ff 07              a0 = sp + 0x7ff
  7996: 95 77 b1 03              a0 = a0 + 0x3b1
  8000: 95 18 98 01              a1 = sp + 0x198
  8004: 50 20 be 00 15 16        ra = 190, jump @743
      :                          @413 [@dyn 95]
  8010: 82 65 20                 s0 = u64 [s1 + 0x20]
  8013: 82 6b 28                 a4 = u64 [s1 + 0x28]
  8016: 82 66 18                 s1 = u64 [s1 + 0x18]
  8019: 33 07 02                 a0 = 0x2
  8022: 33 08                    a1 = 0
  8024: 33 09                    a2 = 0
  8026: 64 5a                    a3 = s0
  8028: 33 00 c0 00              ra = 0xc0
  8032: 0a 64                    ecalli 100 // 'log'
  8034: 01                       fallthrough
      :                          @414 [@dyn 96]
  8035: 82 17 48                 a0 = u64 [sp + 0x48]
  8038: c8 67 07                 a0 = a0 + s1
  8041: 53 27 00 f0 23           jump @420 if a0 <u 4294963200
      :                          @415
  8046: 33 07 40 00 03           a0 = 0x30040
  8051: 95 77 00 10              a0 = a0 + 0x1000
  8055: 01                       fallthrough
      :                          @416
  8056: 82 78                    a1 = u64 [a0]
  8058: c9 87 09                 a2 = a0 - a1
  8061: ab 59 0f                 jump @420 if a2 != s0
      :                          @417
  8064: c9 68 09                 a2 = a1 - s1
  8067: 01                       fallthrough
      :                          @418
  8068: 82 7a                    a3 = u64 [a0]
  8070: ab 8a f2                 jump @416 if a3 != a1
      :                          @419
  8073: 7b 79                    u64 [a0] = a2
  8075: 01                       fallthrough
      :                          @420
  8076: 95 16 ff 07              s1 = sp + 0x7ff
  8080: 95 66 99 03              s1 = s1 + 0x399
  8084: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8088: 33 08 02                 a1 = 0x2
  8091: 33 05 02                 s0 = 0x2
  8094: 50 20 c2 00 17 23        ra = 194, jump @1021
      :                          @421 [@dyn 97]
  8100: 95 17 78                 a0 = sp + 0x78
  8103: 33 08 03                 a1 = 0x3
  8106: 0a 0d                    ecalli 13 // 'query'
  8108: 7b 67                    u64 [s1] = a0
  8110: 33 07 50 00 01           a0 = 0x10050
  8115: 7b 67 18                 u64 [s1 + 0x18] = a0
  8118: 33 07 40 0d 01           a0 = 0x10d40
  8123: 7b 17 98 01              u64 [sp + 0x198] = a0
  8127: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8132: 49 21 b8 01              u64 [sp + 440] = 0
  8136: 95 17 ff 07              a0 = sp + 0x7ff
  8140: 95 77 b1 03              a0 = a0 + 0x3b1
  8144: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8148: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8152: 82 17 40                 a0 = u64 [sp + 0x40]
  8155: 7b 67 20                 u64 [s1 + 0x20] = a0
  8158: 7b 66 28                 u64 [s1 + 0x28] = s1
  8161: 7b 67 30                 u64 [s1 + 0x30] = a0
  8164: 95 17 ff 07              a0 = sp + 0x7ff
  8168: 95 77 e1 03              a0 = a0 + 0x3e1
  8172: 95 18 98 01              a1 = sp + 0x198
  8176: 50 20 c4 00 69 15        ra = 196, jump @743
      :                          @422 [@dyn 98]
  8182: 82 65 50                 s0 = u64 [s1 + 0x50]
  8185: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8188: 82 66 48                 s1 = u64 [s1 + 0x48]
  8191: 33 07 02                 a0 = 0x2
  8194: 33 08                    a1 = 0
  8196: 33 09                    a2 = 0
  8198: 64 5a                    a3 = s0
  8200: 33 00 c6 00              ra = 0xc6
  8204: 0a 64                    ecalli 100 // 'log'
  8206: 01                       fallthrough
      :                          @423 [@dyn 99]
  8207: 82 17 48                 a0 = u64 [sp + 0x48]
  8210: c8 67 07                 a0 = a0 + s1
  8213: 53 27 00 f0 23           jump @429 if a0 <u 4294963200
      :                          @424
  8218: 33 07 40 00 03           a0 = 0x30040
  8223: 95 77 00 10              a0 = a0 + 0x1000
  8227: 01                       fallthrough
      :                          @425
  8228: 82 78                    a1 = u64 [a0]
  8230: c9 87 09                 a2 = a0 - a1
  8233: ab 59 0f                 jump @429 if a2 != s0
      :                          @426
  8236: c9 68 09                 a2 = a1 - s1
  8239: 01                       fallthrough
      :                          @427
  8240: 82 7a                    a3 = u64 [a0]
  8242: ab 8a f2                 jump @425 if a3 != a1
      :                          @428
  8245: 7b 79                    u64 [a0] = a2
  8247: 01                       fallthrough
      :                          @429
  8248: 95 16 ff 07              s1 = sp + 0x7ff
  8252: 95 66 99 03              s1 = s1 + 0x399
  8256: 82 67                    a0 = u64 [s1]
  8258: 33 08 05                 a1 = 0x5
  8261: 33 00 56 01              ra = 0x156
  8265: 28 6c 22                 jump @1021
      :                          @430 [@dyn 100]
  8268: 95 17 58                 a0 = sp + 0x58
  8271: 33 08 03                 a1 = 0x3
  8274: 0a 0f                    ecalli 15 // 'forget'
  8276: 7b 67 70                 u64 [s1 + 0x70] = a0
  8279: 95 17 ff 07              a0 = sp + 0x7ff
  8283: 95 77 09 04              a0 = a0 + 0x409
  8287: 7b 67 28                 u64 [s1 + 0x28] = a0
  8290: 33 07 70 0d 01           a0 = 0x10d70
  8295: 7b 17 98 01              u64 [sp + 0x198] = a0
  8299: 7b 65 18                 u64 [s1 + 0x18] = s0
  8302: 82 18 40                 a1 = u64 [sp + 0x40]
  8305: 7b 68 20                 u64 [s1 + 0x20] = a1
  8308: 7b 68 30                 u64 [s1 + 0x30] = a1
  8311: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8316: 49 21 b8 01              u64 [sp + 440] = 0
  8320: 95 17 ff 07              a0 = sp + 0x7ff
  8324: 95 77 b1 03              a0 = a0 + 0x3b1
  8328: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8332: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8337: 95 17 ff 07              a0 = sp + 0x7ff
  8341: 95 77 e1 03              a0 = a0 + 0x3e1
  8345: 95 18 98 01              a1 = sp + 0x198
  8349: 50 20 ca 00 bc 14        ra = 202, jump @743
      :                          @431 [@dyn 101]
  8355: 82 65 50                 s0 = u64 [s1 + 0x50]
  8358: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8361: 95 17 ff 07              a0 = sp + 0x7ff
  8365: 95 77 99 03              a0 = a0 + 0x399
  8369: 82 76 48                 s1 = u64 [a0 + 0x48]
  8372: 33 07 02                 a0 = 0x2
  8375: 33 08                    a1 = 0
  8377: 33 09                    a2 = 0
  8379: 64 5a                    a3 = s0
  8381: 33 00 cc 00              ra = 0xcc
  8385: 0a 64                    ecalli 100 // 'log'
  8387: 01                       fallthrough
      :                          @432 [@dyn 102]
  8388: 82 17 48                 a0 = u64 [sp + 0x48]
  8391: c8 67 07                 a0 = a0 + s1
  8394: 53 27 00 f0 23           jump @438 if a0 <u 4294963200
      :                          @433
  8399: 33 07 40 00 03           a0 = 0x30040
  8404: 95 77 00 10              a0 = a0 + 0x1000
  8408: 01                       fallthrough
      :                          @434
  8409: 82 78                    a1 = u64 [a0]
  8411: c9 87 09                 a2 = a0 - a1
  8414: ab 59 0f                 jump @438 if a2 != s0
      :                          @435
  8417: c9 68 09                 a2 = a1 - s1
  8420: 01                       fallthrough
      :                          @436
  8421: 82 7a                    a3 = u64 [a0]
  8423: ab 8a f2                 jump @434 if a3 != a1
      :                          @437
  8426: 7b 79                    u64 [a0] = a2
  8428: 01                       fallthrough
      :                          @438
  8429: 95 16 ff 07              s1 = sp + 0x7ff
  8433: 95 66 99 03              s1 = s1 + 0x399
  8437: 82 67 70                 a0 = u64 [s1 + 0x70]
  8440: 33 08 01                 a1 = 0x1
  8443: 33 05 01                 s0 = 0x1
  8446: 50 20 ce 00 b7 21        ra = 206, jump @1021
      :                          @439 [@dyn 103]
  8452: 95 17 58                 a0 = sp + 0x58
  8455: 33 08 03                 a1 = 0x3
  8458: 0a 0d                    ecalli 13 // 'query'
  8460: 7b 67 78                 u64 [s1 + 0x78] = a0
  8463: 95 17 ff 07              a0 = sp + 0x7ff
  8467: 95 77 11 04              a0 = a0 + 0x411
  8471: 7b 67 48                 u64 [s1 + 0x48] = a0
  8474: 33 07 a0 0d 01           a0 = 0x10da0
  8479: 7b 17 98 01              u64 [sp + 0x198] = a0
  8483: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  8488: 49 21 b8 01              u64 [sp + 440] = 0
  8492: 95 17 ff 07              a0 = sp + 0x7ff
  8496: 95 77 e1 03              a0 = a0 + 0x3e1
  8500: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8504: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8508: 82 17 40                 a0 = u64 [sp + 0x40]
  8511: 7b 67 50                 u64 [s1 + 0x50] = a0
  8514: 95 17 ff 07              a0 = sp + 0x7ff
  8518: 95 77 b1 03              a0 = a0 + 0x3b1
  8522: 95 18 98 01              a1 = sp + 0x198
  8526: 50 20 d0 00 0b 14        ra = 208, jump @743
      :                          @440 [@dyn 104]
  8532: 82 65 20                 s0 = u64 [s1 + 0x20]
  8535: 82 6b 28                 a4 = u64 [s1 + 0x28]
  8538: 82 66 18                 s1 = u64 [s1 + 0x18]
  8541: 33 07 02                 a0 = 0x2
  8544: 33 08                    a1 = 0
  8546: 33 09                    a2 = 0
  8548: 64 5a                    a3 = s0
  8550: 33 00 d2 00              ra = 0xd2
  8554: 0a 64                    ecalli 100 // 'log'
  8556: 01                       fallthrough
      :                          @441 [@dyn 105]
  8557: 82 17 48                 a0 = u64 [sp + 0x48]
  8560: c8 67 07                 a0 = a0 + s1
  8563: 53 27 00 f0 23           jump @447 if a0 <u 4294963200
      :                          @442
  8568: 33 07 40 00 03           a0 = 0x30040
  8573: 95 77 00 10              a0 = a0 + 0x1000
  8577: 01                       fallthrough
      :                          @443
  8578: 82 78                    a1 = u64 [a0]
  8580: c9 87 09                 a2 = a0 - a1
  8583: ab 59 0f                 jump @447 if a2 != s0
      :                          @444
  8586: c9 68 09                 a2 = a1 - s1
  8589: 01                       fallthrough
      :                          @445
  8590: 82 7a                    a3 = u64 [a0]
  8592: ab 8a f2                 jump @443 if a3 != a1
      :                          @446
  8595: 7b 79                    u64 [a0] = a2
  8597: 01                       fallthrough
      :                          @447
  8598: 95 16 ff 07              s1 = sp + 0x7ff
  8602: 95 66 99 03              s1 = s1 + 0x399
  8606: 82 67 78                 a0 = u64 [s1 + 0x78]
  8609: 33 08 02                 a1 = 0x2
  8612: 33 05 02                 s0 = 0x2
  8615: 50 20 d4 00 0e 21        ra = 212, jump @1021
      :                          @448 [@dyn 106]
  8621: 95 18 78                 a1 = sp + 0x78
  8624: 95 19 98 00              a2 = sp + 0x98
  8628: 33 0b 03                 a4 = 0x3
  8631: 82 17 38                 a0 = u64 [sp + 0x38]
  8634: 33 0a                    a3 = 0
  8636: 0a 01                    ecalli 1 // 'lookup'
  8638: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8642: 33 07 50 00 01           a0 = 0x10050
  8647: 7b 67 18                 u64 [s1 + 0x18] = a0
  8650: 95 17 ff 07              a0 = sp + 0x7ff
  8654: 95 77 19 04              a0 = a0 + 0x419
  8658: 7b 67 28                 u64 [s1 + 0x28] = a0
  8661: 33 07 c0 0d 01           a0 = 0x10dc0
  8666: 7b 17 98 01              u64 [sp + 0x198] = a0
  8670: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8675: 49 21 b8 01              u64 [sp + 440] = 0
  8679: 95 17 ff 07              a0 = sp + 0x7ff
  8683: 95 77 b1 03              a0 = a0 + 0x3b1
  8687: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8691: 82 17 40                 a0 = u64 [sp + 0x40]
  8694: 7b 67 20                 u64 [s1 + 0x20] = a0
  8697: 7b 67 30                 u64 [s1 + 0x30] = a0
  8700: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8704: 95 17 ff 07              a0 = sp + 0x7ff
  8708: 95 77 e1 03              a0 = a0 + 0x3e1
  8712: 95 18 98 01              a1 = sp + 0x198
  8716: 50 20 d6 00 4d 13        ra = 214, jump @743
      :                          @449 [@dyn 107]
  8722: 82 65 50                 s0 = u64 [s1 + 0x50]
  8725: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8728: 82 66 48                 s1 = u64 [s1 + 0x48]
  8731: 33 07 02                 a0 = 0x2
  8734: 33 08                    a1 = 0
  8736: 33 09                    a2 = 0
  8738: 64 5a                    a3 = s0
  8740: 33 00 d8 00              ra = 0xd8
  8744: 0a 64                    ecalli 100 // 'log'
  8746: 01                       fallthrough
      :                          @450 [@dyn 108]
  8747: 82 17 48                 a0 = u64 [sp + 0x48]
  8750: c8 67 07                 a0 = a0 + s1
  8753: 53 27 00 f0 23           jump @456 if a0 <u 4294963200
      :                          @451
  8758: 33 07 40 00 03           a0 = 0x30040
  8763: 95 77 00 10              a0 = a0 + 0x1000
  8767: 01                       fallthrough
      :                          @452
  8768: 82 78                    a1 = u64 [a0]
  8770: c9 87 09                 a2 = a0 - a1
  8773: ab 59 0f                 jump @456 if a2 != s0
      :                          @453
  8776: c9 68 09                 a2 = a1 - s1
  8779: 01                       fallthrough
      :                          @454
  8780: 82 7a                    a3 = u64 [a0]
  8782: ab 8a f2                 jump @452 if a3 != a1
      :                          @455
  8785: 7b 79                    u64 [a0] = a2
  8787: 01                       fallthrough
      :                          @456
  8788: 95 16 ff 07              s1 = sp + 0x7ff
  8792: 95 66 99 03              s1 = s1 + 0x399
  8796: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8800: 33 08 05                 a1 = 0x5
  8803: 50 20 da 00 52 20        ra = 218, jump @1021
      :                          @457 [@dyn 109]
  8809: 33 07 e8 03              a0 = 0x3e8
  8813: 95 18 52                 a1 = sp + 0x52
  8816: 0a 06                    ecalli 6 // 'assign'
  8818: 7b 67                    u64 [s1] = a0
  8820: 33 07 38 00 01           a0 = 0x10038
  8825: 7b 67 18                 u64 [s1 + 0x18] = a0
  8828: 33 07 f0 0d 01           a0 = 0x10df0
  8833: 7b 17 98 01              u64 [sp + 0x198] = a0
  8837: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8842: 49 21 b8 01              u64 [sp + 440] = 0
  8846: 95 17 ff 07              a0 = sp + 0x7ff
  8850: 95 77 b1 03              a0 = a0 + 0x3b1
  8854: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8858: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8863: 82 17 40                 a0 = u64 [sp + 0x40]
  8866: 7b 67 20                 u64 [s1 + 0x20] = a0
  8869: 7b 66 28                 u64 [s1 + 0x28] = s1
  8872: 7b 67 30                 u64 [s1 + 0x30] = a0
  8875: 95 17 ff 07              a0 = sp + 0x7ff
  8879: 95 77 e1 03              a0 = a0 + 0x3e1
  8883: 95 18 98 01              a1 = sp + 0x198
  8887: 50 20 dc 00 a2 12        ra = 220, jump @743
      :                          @458 [@dyn 110]
  8893: 82 65 50                 s0 = u64 [s1 + 0x50]
  8896: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8899: 82 66 48                 s1 = u64 [s1 + 0x48]
  8902: 33 07 02                 a0 = 0x2
  8905: 33 08                    a1 = 0
  8907: 33 09                    a2 = 0
  8909: 64 5a                    a3 = s0
  8911: 33 00 de 00              ra = 0xde
  8915: 0a 64                    ecalli 100 // 'log'
  8917: 01                       fallthrough
      :                          @459 [@dyn 111]
  8918: 82 17 48                 a0 = u64 [sp + 0x48]
  8921: c8 67 07                 a0 = a0 + s1
  8924: 53 27 00 f0 f4 02        jump @502 if a0 <u 4294963200
      :                          @460
  8930: 33 07 40 00 03           a0 = 0x30040
  8935: 95 77 00 10              a0 = a0 + 0x1000
  8939: 01                       fallthrough
      :                          @461
  8940: 82 78                    a1 = u64 [a0]
  8942: c9 87 09                 a2 = a0 - a1
  8945: ab 59 df 02              jump @502 if a2 != s0
      :                          @462
  8949: c9 68 09                 a2 = a1 - s1
  8952: 01                       fallthrough
      :                          @463
  8953: 82 7a                    a3 = u64 [a0]
  8955: ab 8a f1                 jump @461 if a3 != a1
      :                          @464
  8958: 7b 79                    u64 [a0] = a2
  8960: 33 0b                    a4 = 0
  8962: 01                       fallthrough
      :                          @465
  8963: ab 8a e9                 jump @461 if a3 != a1
      :                          @466
  8966: 28 ca 02                 jump @502
      :                          @467 [@dyn 112]
  8969: 95 18 58                 a1 = sp + 0x58
  8972: 95 19 98 00              a2 = sp + 0x98
  8976: 33 0b 03                 a4 = 0x3
  8979: 82 17 38                 a0 = u64 [sp + 0x38]
  8982: 33 0a                    a3 = 0
  8984: 0a 01                    ecalli 1 // 'lookup'
  8986: 7b 67 70                 u64 [s1 + 0x70] = a0
  8989: 7b 65 18                 u64 [s1 + 0x18] = s0
  8992: 82 18 40                 a1 = u64 [sp + 0x40]
  8995: 7b 68 20                 u64 [s1 + 0x20] = a1
  8998: 95 17 ff 07              a0 = sp + 0x7ff
  9002: 95 77 09 04              a0 = a0 + 0x409
  9006: 7b 67 28                 u64 [s1 + 0x28] = a0
  9009: 7b 68 30                 u64 [s1 + 0x30] = a1
  9012: 33 07 20 0e 01           a0 = 0x10e20
  9017: 7b 17 98 01              u64 [sp + 0x198] = a0
  9021: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9026: 49 21 b8 01              u64 [sp + 440] = 0
  9030: 95 17 ff 07              a0 = sp + 0x7ff
  9034: 95 77 b1 03              a0 = a0 + 0x3b1
  9038: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9042: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9047: 95 17 ff 07              a0 = sp + 0x7ff
  9051: 95 77 e1 03              a0 = a0 + 0x3e1
  9055: 95 18 98 01              a1 = sp + 0x198
  9059: 50 20 e2 00 f6 11        ra = 226, jump @743
      :                          @468 [@dyn 113]
  9065: 82 65 50                 s0 = u64 [s1 + 0x50]
  9068: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9071: 95 17 ff 07              a0 = sp + 0x7ff
  9075: 95 77 99 03              a0 = a0 + 0x399
  9079: 82 76 48                 s1 = u64 [a0 + 0x48]
  9082: 33 07 02                 a0 = 0x2
  9085: 33 08                    a1 = 0
  9087: 33 09                    a2 = 0
  9089: 64 5a                    a3 = s0
  9091: 33 00 e4 00              ra = 0xe4
  9095: 0a 64                    ecalli 100 // 'log'
  9097: 01                       fallthrough
      :                          @469 [@dyn 114]
  9098: 82 17 48                 a0 = u64 [sp + 0x48]
  9101: c8 67 07                 a0 = a0 + s1
  9104: 53 27 00 f0 23           jump @475 if a0 <u 4294963200
      :                          @470
  9109: 33 07 40 00 03           a0 = 0x30040
  9114: 95 77 00 10              a0 = a0 + 0x1000
  9118: 01                       fallthrough
      :                          @471
  9119: 82 78                    a1 = u64 [a0]
  9121: c9 87 09                 a2 = a0 - a1
  9124: ab 59 0f                 jump @475 if a2 != s0
      :                          @472
  9127: c9 68 09                 a2 = a1 - s1
  9130: 01                       fallthrough
      :                          @473
  9131: 82 7a                    a3 = u64 [a0]
  9133: ab 8a f2                 jump @471 if a3 != a1
      :                          @474
  9136: 7b 79                    u64 [a0] = a2
  9138: 01                       fallthrough
      :                          @475
  9139: 95 16 ff 07              s1 = sp + 0x7ff
  9143: 95 66 99 03              s1 = s1 + 0x399
  9147: 82 67 70                 a0 = u64 [s1 + 0x70]
  9150: 33 08 01                 a1 = 0x1
  9153: 50 20 e6 00 f4 1e        ra = 230, jump @1021
      :                          @476 [@dyn 115]
  9159: 95 17 58                 a0 = sp + 0x58
  9162: 33 08 03                 a1 = 0x3
  9165: 0a 0d                    ecalli 13 // 'query'
  9167: 7b 67 78                 u64 [s1 + 0x78] = a0
  9170: 95 17 ff 07              a0 = sp + 0x7ff
  9174: 95 77 11 04              a0 = a0 + 0x411
  9178: 7b 67 28                 u64 [s1 + 0x28] = a0
  9181: 33 07 50 0e 01           a0 = 0x10e50
  9186: 7b 17 98 01              u64 [sp + 0x198] = a0
  9190: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9195: 49 21 b8 01              u64 [sp + 440] = 0
  9199: 95 17 ff 07              a0 = sp + 0x7ff
  9203: 95 77 b1 03              a0 = a0 + 0x3b1
  9207: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9211: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9216: 82 17 30                 a0 = u64 [sp + 0x30]
  9219: 7b 67 18                 u64 [s1 + 0x18] = a0
  9222: 82 17 40                 a0 = u64 [sp + 0x40]
  9225: 7b 67 20                 u64 [s1 + 0x20] = a0
  9228: 7b 67 30                 u64 [s1 + 0x30] = a0
  9231: 95 17 ff 07              a0 = sp + 0x7ff
  9235: 95 77 e1 03              a0 = a0 + 0x3e1
  9239: 95 18 98 01              a1 = sp + 0x198
  9243: 50 20 e8 00 3e 11        ra = 232, jump @743
      :                          @477 [@dyn 116]
  9249: 82 65 50                 s0 = u64 [s1 + 0x50]
  9252: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9255: 82 66 48                 s1 = u64 [s1 + 0x48]
  9258: 33 07 02                 a0 = 0x2
  9261: 33 08                    a1 = 0
  9263: 33 09                    a2 = 0
  9265: 64 5a                    a3 = s0
  9267: 33 00 ea 00              ra = 0xea
  9271: 0a 64                    ecalli 100 // 'log'
  9273: 01                       fallthrough
      :                          @478 [@dyn 117]
  9274: 82 17 48                 a0 = u64 [sp + 0x48]
  9277: c8 67 07                 a0 = a0 + s1
  9280: 53 27 00 f0 23           jump @484 if a0 <u 4294963200
      :                          @479
  9285: 33 07 40 00 03           a0 = 0x30040
  9290: 95 77 00 10              a0 = a0 + 0x1000
  9294: 01                       fallthrough
      :                          @480
  9295: 82 78                    a1 = u64 [a0]
  9297: c9 87 09                 a2 = a0 - a1
  9300: ab 59 0f                 jump @484 if a2 != s0
      :                          @481
  9303: c9 68 09                 a2 = a1 - s1
  9306: 01                       fallthrough
      :                          @482
  9307: 82 7a                    a3 = u64 [a0]
  9309: ab 8a f2                 jump @480 if a3 != a1
      :                          @483
  9312: 7b 79                    u64 [a0] = a2
  9314: 01                       fallthrough
      :                          @484
  9315: 95 16 ff 07              s1 = sp + 0x7ff
  9319: 95 66 99 03              s1 = s1 + 0x399
  9323: 82 67 78                 a0 = u64 [s1 + 0x78]
  9326: 33 08 02                 a1 = 0x2
  9329: 33 05 02                 s0 = 0x2
  9332: 50 20 ec 00 41 1e        ra = 236, jump @1021
      :                          @485 [@dyn 118]
  9338: 95 18 58                 a1 = sp + 0x58
  9341: 82 17 38                 a0 = u64 [sp + 0x38]
  9344: 0a 0c                    ecalli 12 // 'eject'
  9346: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9350: 33 07 30 00 01           a0 = 0x10030
  9355: 7b 17 10                 u64 [sp + 0x10] = a0
  9358: 7b 67 18                 u64 [s1 + 0x18] = a0
  9361: 82 18 40                 a1 = u64 [sp + 0x40]
  9364: 7b 68 20                 u64 [s1 + 0x20] = a1
  9367: 95 17 ff 07              a0 = sp + 0x7ff
  9371: 95 77 19 04              a0 = a0 + 0x419
  9375: 7b 67 28                 u64 [s1 + 0x28] = a0
  9378: 7b 68 30                 u64 [s1 + 0x30] = a1
  9381: 33 07 80 0e 01           a0 = 0x10e80
  9386: 7b 17 98 01              u64 [sp + 0x198] = a0
  9390: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9395: 49 21 b8 01              u64 [sp + 440] = 0
  9399: 95 17 ff 07              a0 = sp + 0x7ff
  9403: 95 77 b1 03              a0 = a0 + 0x3b1
  9407: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9411: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9415: 95 17 ff 07              a0 = sp + 0x7ff
  9419: 95 77 e1 03              a0 = a0 + 0x3e1
  9423: 95 18 98 01              a1 = sp + 0x198
  9427: 50 20 ee 00 86 10        ra = 238, jump @743
      :                          @486 [@dyn 119]
  9433: 82 65 50                 s0 = u64 [s1 + 0x50]
  9436: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9439: 82 66 48                 s1 = u64 [s1 + 0x48]
  9442: 33 07 02                 a0 = 0x2
  9445: 33 08                    a1 = 0
  9447: 33 09                    a2 = 0
  9449: 64 5a                    a3 = s0
  9451: 33 00 f0 00              ra = 0xf0
  9455: 0a 64                    ecalli 100 // 'log'
  9457: 01                       fallthrough
      :                          @487 [@dyn 120]
  9458: 82 17 48                 a0 = u64 [sp + 0x48]
  9461: c8 67 07                 a0 = a0 + s1
  9464: 53 27 00 f0 23           jump @493 if a0 <u 4294963200
      :                          @488
  9469: 33 07 40 00 03           a0 = 0x30040
  9474: 95 77 00 10              a0 = a0 + 0x1000
  9478: 01                       fallthrough
      :                          @489
  9479: 82 78                    a1 = u64 [a0]
  9481: c9 87 09                 a2 = a0 - a1
  9484: ab 59 0f                 jump @493 if a2 != s0
      :                          @490
  9487: c9 68 09                 a2 = a1 - s1
  9490: 01                       fallthrough
      :                          @491
  9491: 82 7a                    a3 = u64 [a0]
  9493: ab 8a f2                 jump @489 if a3 != a1
      :                          @492
  9496: 7b 79                    u64 [a0] = a2
  9498: 01                       fallthrough
      :                          @493
  9499: 95 16 ff 07              s1 = sp + 0x7ff
  9503: 95 66 99 03              s1 = s1 + 0x399
  9507: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9511: 33 08 05                 a1 = 0x5
  9514: 50 20 f2 00 8b 1d        ra = 242, jump @1021
      :                          @494 [@dyn 121]
  9520: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  9530: 95 1a 58                 a3 = sp + 0x58
  9533: 33 08                    a1 = 0
  9535: 33 09                    a2 = 0
  9537: 33 0b                    a4 = 0
  9539: 0a 05                    ecalli 5 // 'bless'
  9541: 7b 67                    u64 [s1] = a0
  9543: 82 17 10                 a0 = u64 [sp + 0x10]
  9546: 7b 67 18                 u64 [s1 + 0x18] = a0
  9549: 33 07 b0 0e 01           a0 = 0x10eb0
  9554: 7b 17 98 01              u64 [sp + 0x198] = a0
  9558: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9563: 49 21 b8 01              u64 [sp + 440] = 0
  9567: 95 17 ff 07              a0 = sp + 0x7ff
  9571: 95 77 b1 03              a0 = a0 + 0x3b1
  9575: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9579: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9584: 82 17 40                 a0 = u64 [sp + 0x40]
  9587: 7b 67 20                 u64 [s1 + 0x20] = a0
  9590: 7b 66 28                 u64 [s1 + 0x28] = s1
  9593: 7b 67 30                 u64 [s1 + 0x30] = a0
  9596: 95 17 ff 07              a0 = sp + 0x7ff
  9600: 95 77 e1 03              a0 = a0 + 0x3e1
  9604: 95 18 98 01              a1 = sp + 0x198
  9608: 50 20 f4 00 d1 0f        ra = 244, jump @743
      :                          @495 [@dyn 122]
  9614: 82 65 50                 s0 = u64 [s1 + 0x50]
  9617: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9620: 82 66 48                 s1 = u64 [s1 + 0x48]
  9623: 33 07 02                 a0 = 0x2
  9626: 33 08                    a1 = 0
  9628: 33 09                    a2 = 0
  9630: 64 5a                    a3 = s0
  9632: 33 00 f6 00              ra = 0xf6
  9636: 0a 64                    ecalli 100 // 'log'
  9638: 01                       fallthrough
      :                          @496 [@dyn 123]
  9639: 82 17 48                 a0 = u64 [sp + 0x48]
  9642: c8 67 07                 a0 = a0 + s1
  9645: 53 27 00 f0 23           jump @502 if a0 <u 4294963200
      :                          @497
  9650: 33 07 40 00 03           a0 = 0x30040
  9655: 95 77 00 10              a0 = a0 + 0x1000
  9659: 01                       fallthrough
      :                          @498
  9660: 82 78                    a1 = u64 [a0]
  9662: c9 87 09                 a2 = a0 - a1
  9665: ab 59 0f                 jump @502 if a2 != s0
      :                          @499
  9668: c9 68 09                 a2 = a1 - s1
  9671: 01                       fallthrough
      :                          @500
  9672: 82 7a                    a3 = u64 [a0]
  9674: ab 8a f2                 jump @498 if a3 != a1
      :                          @501
  9677: 7b 79                    u64 [a0] = a2
  9679: 01                       fallthrough
      :                          @502
  9680: 95 16 ff 07              s1 = sp + 0x7ff
  9684: 95 66 99 03              s1 = s1 + 0x399
  9688: 82 67                    a0 = u64 [s1]
  9690: 33 08 06                 a1 = 0x6
  9693: 33 00 56 01              ra = 0x156
  9697: 28 d4 1c                 jump @1021
      :                          @503 [@dyn 124]
  9700: 95 17 58                 a0 = sp + 0x58
  9703: 33 08 03                 a1 = 0x3
  9706: 0a 0e                    ecalli 14 // 'solicit'
  9708: 7b 67 70                 u64 [s1 + 0x70] = a0
  9711: 33 08 01                 a1 = 0x1
  9714: 50 20 fa 00 c3 1c        ra = 250, jump @1021
      :                          @504 [@dyn 125]
  9720: 7b 65 18                 u64 [s1 + 0x18] = s0
  9723: 82 18 40                 a1 = u64 [sp + 0x40]
  9726: 7b 68 20                 u64 [s1 + 0x20] = a1
  9729: 95 17 ff 07              a0 = sp + 0x7ff
  9733: 95 77 09 04              a0 = a0 + 0x409
  9737: 7b 67 28                 u64 [s1 + 0x28] = a0
  9740: 7b 68 30                 u64 [s1 + 0x30] = a1
  9743: 33 07 e0 0e 01           a0 = 0x10ee0
  9748: 7b 17 98 01              u64 [sp + 0x198] = a0
  9752: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9757: 49 21 b8 01              u64 [sp + 440] = 0
  9761: 95 17 ff 07              a0 = sp + 0x7ff
  9765: 95 77 b1 03              a0 = a0 + 0x3b1
  9769: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9773: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9778: 95 17 ff 07              a0 = sp + 0x7ff
  9782: 95 77 e1 03              a0 = a0 + 0x3e1
  9786: 95 18 98 01              a1 = sp + 0x198
  9790: 50 20 fc 00 1b 0f        ra = 252, jump @743
      :                          @505 [@dyn 126]
  9796: 82 65 50                 s0 = u64 [s1 + 0x50]
  9799: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9802: 95 17 ff 07              a0 = sp + 0x7ff
  9806: 95 77 99 03              a0 = a0 + 0x399
  9810: 82 76 48                 s1 = u64 [a0 + 0x48]
  9813: 33 07 02                 a0 = 0x2
  9816: 33 08                    a1 = 0
  9818: 33 09                    a2 = 0
  9820: 64 5a                    a3 = s0
  9822: 33 00 fe 00              ra = 0xfe
  9826: 0a 64                    ecalli 100 // 'log'
  9828: 01                       fallthrough
      :                          @506 [@dyn 127]
  9829: 82 17 48                 a0 = u64 [sp + 0x48]
  9832: c8 67 07                 a0 = a0 + s1
  9835: 53 27 00 f0 23           jump @512 if a0 <u 4294963200
      :                          @507
  9840: 33 07 40 00 03           a0 = 0x30040
  9845: 95 77 00 10              a0 = a0 + 0x1000
  9849: 01                       fallthrough
      :                          @508
  9850: 82 78                    a1 = u64 [a0]
  9852: c9 87 09                 a2 = a0 - a1
  9855: ab 59 0f                 jump @512 if a2 != s0
      :                          @509
  9858: c9 68 09                 a2 = a1 - s1
  9861: 01                       fallthrough
      :                          @510
  9862: 82 7a                    a3 = u64 [a0]
  9864: ab 8a f2                 jump @508 if a3 != a1
      :                          @511
  9867: 7b 79                    u64 [a0] = a2
  9869: 01                       fallthrough
      :                          @512
  9870: 95 17 58                 a0 = sp + 0x58
  9873: 33 08 03                 a1 = 0x3
  9876: 0a 0d                    ecalli 13 // 'query'
  9878: 95 18 ff 07              a1 = sp + 0x7ff
  9882: 95 88 99 03              a1 = a1 + 0x399
  9886: 7b 87 78                 u64 [a1 + 0x78] = a0
  9889: 95 17 ff 07              a0 = sp + 0x7ff
  9893: 95 77 11 04              a0 = a0 + 0x411
  9897: 7b 87 28                 u64 [a1 + 0x28] = a0
  9900: 33 07 50 0e 01           a0 = 0x10e50
  9905: 7b 17 98 01              u64 [sp + 0x198] = a0
  9909: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9914: 49 21 b8 01              u64 [sp + 440] = 0
  9918: 95 17 ff 07              a0 = sp + 0x7ff
  9922: 95 77 b1 03              a0 = a0 + 0x3b1
  9926: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9930: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9935: 82 17 30                 a0 = u64 [sp + 0x30]
  9938: 7b 87 18                 u64 [a1 + 0x18] = a0
  9941: 82 17 40                 a0 = u64 [sp + 0x40]
  9944: 7b 87 20                 u64 [a1 + 0x20] = a0
  9947: 7b 87 30                 u64 [a1 + 0x30] = a0
  9950: 95 17 ff 07              a0 = sp + 0x7ff
  9954: 95 77 e1 03              a0 = a0 + 0x3e1
  9958: 95 18 98 01              a1 = sp + 0x198
  9962: 95 15 98 01              s0 = sp + 0x198
  9966: 50 20 00 01 6b 0e        ra = 256, jump @743
      :                          @513 [@dyn 128]
  9972: 95 17 ff 07              a0 = sp + 0x7ff
  9976: 95 77 99 03              a0 = a0 + 0x399
  9980: 82 76 50                 s1 = u64 [a0 + 0x50]
  9983: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9986: 82 77 48                 a0 = u64 [a0 + 0x48]
  9989: 7b 17 10                 u64 [sp + 0x10] = a0
  9992: 33 07 02                 a0 = 0x2
  9995: 33 08                    a1 = 0
  9997: 33 09                    a2 = 0
  9999: 64 6a                    a3 = s1
 10001: 33 00 02 01              ra = 0x102
 10005: 0a 64                    ecalli 100 // 'log'
 10007: 01                       fallthrough
      :                          @514 [@dyn 129]
 10008: 82 1c 10                 a5 = u64 [sp + 0x10]
 10011: 82 17 48                 a0 = u64 [sp + 0x48]
 10014: c8 c7 07                 a0 = a0 + a5
 10017: 53 27 00 f0 23           jump @520 if a0 <u 4294963200
      :                          @515
 10022: 33 07 40 00 03           a0 = 0x30040
 10027: 95 77 00 10              a0 = a0 + 0x1000
 10031: 01                       fallthrough
      :                          @516
 10032: 82 78                    a1 = u64 [a0]
 10034: c9 87 09                 a2 = a0 - a1
 10037: ab 69 0f                 jump @520 if a2 != s1
      :                          @517
 10040: c9 c8 09                 a2 = a1 - a5
 10043: 01                       fallthrough
      :                          @518
 10044: 82 7a                    a3 = u64 [a0]
 10046: ab 8a f2                 jump @516 if a3 != a1
      :                          @519
 10049: 7b 79                    u64 [a0] = a2
 10051: 01                       fallthrough
      :                          @520
 10052: 95 17 ff 07              a0 = sp + 0x7ff
 10056: 95 77 99 03              a0 = a0 + 0x399
 10060: 82 77 78                 a0 = u64 [a0 + 0x78]
 10063: 33 08 02                 a1 = 0x2
 10066: 50 20 04 01 63 1b        ra = 260, jump @1021
      :                          @521 [@dyn 130]
 10072: 33 09 00 0a              a2 = 0xa00
 10076: 95 17 98 01              a0 = sp + 0x198
 10080: 33 08                    a1 = 0
 10082: 50 20 06 01 1e 11        ra = 262, jump @811
      :                          @522 [@dyn 131]
 10088: 33 06 50                 s1 = 0x50
 10091: 01                       fallthrough
      :                          @523
 10092: 95 18 58                 a1 = sp + 0x58
 10095: 33 09 20                 a2 = 0x20
 10098: 64 57                    a0 = s0
 10100: 50 20 08 01 5a 10        ra = 264, jump @793
      :                          @524 [@dyn 132]
 10106: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 10109: 95 55 20                 s0 = s0 + 0x20
 10112: 52 06 ec                 jump @523 if s1 != 0
      :                          @525
 10115: 95 18 98 01              a1 = sp + 0x198
 10119: 33 07                    a0 = 0
 10121: 0a 06                    ecalli 6 // 'assign'
 10123: 95 16 ff 07              s1 = sp + 0x7ff
 10127: 95 66 99 03              s1 = s1 + 0x399
 10131: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10135: 95 17 ff 07              a0 = sp + 0x7ff
 10139: 95 77 19 04              a0 = a0 + 0x419
 10143: 7b 67 58                 u64 [s1 + 0x58] = a0
 10146: 33 07 10 0f 01           a0 = 0x10f10
 10151: 7b 67 18                 u64 [s1 + 0x18] = a0
 10154: 49 16 20 03              u64 [s1 + 32] = 0x3
 10158: 95 17 ff 07              a0 = sp + 0x7ff
 10162: 95 77 e1 03              a0 = a0 + 0x3e1
 10166: 7b 67 28                 u64 [s1 + 0x28] = a0
 10169: 49 16 30 02              u64 [s1 + 48] = 0x2
 10173: 82 17 30                 a0 = u64 [sp + 0x30]
 10176: 7b 67 48                 u64 [s1 + 0x48] = a0
 10179: 82 17 40                 a0 = u64 [sp + 0x40]
 10182: 7b 67 50                 u64 [s1 + 0x50] = a0
 10185: 7b 67 60                 u64 [s1 + 0x60] = a0
 10188: 49 16 38                 u64 [s1 + 56] = 0
 10191: 95 17 ff 07              a0 = sp + 0x7ff
 10195: 95 77 99 03              a0 = a0 + 0x399
 10199: 95 18 ff 07              a1 = sp + 0x7ff
 10203: 95 88 b1 03              a1 = a1 + 0x3b1
 10207: 50 20 0a 01 7a 0d        ra = 266, jump @743
      :                          @526 [@dyn 133]
 10213: 82 65 08                 s0 = u64 [s1 + 0x8]
 10216: 82 6b 10                 a4 = u64 [s1 + 0x10]
 10219: 82 66                    s1 = u64 [s1]
 10221: 33 07 02                 a0 = 0x2
 10224: 33 08                    a1 = 0
 10226: 33 09                    a2 = 0
 10228: 64 5a                    a3 = s0
 10230: 33 00 0c 01              ra = 0x10c
 10234: 0a 64                    ecalli 100 // 'log'
 10236: 01                       fallthrough
      :                          @527 [@dyn 134]
 10237: 82 17 48                 a0 = u64 [sp + 0x48]
 10240: c8 67 07                 a0 = a0 + s1
 10243: 53 27 00 f0 12 05        jump @598 if a0 <u 4294963200
      :                          @528
 10249: 33 07 40 00 03           a0 = 0x30040
 10254: 95 77 00 10              a0 = a0 + 0x1000
 10258: 01                       fallthrough
      :                          @529
 10259: 82 78                    a1 = u64 [a0]
 10261: c9 87 09                 a2 = a0 - a1
 10264: ab 59 fd 04              jump @598 if a2 != s0
      :                          @530
 10268: c9 68 09                 a2 = a1 - s1
 10271: 01                       fallthrough
      :                          @531
 10272: 82 7a                    a3 = u64 [a0]
 10274: ab 8a f1                 jump @529 if a3 != a1
      :                          @532
 10277: 7b 79                    u64 [a0] = a2
 10279: 33 0b                    a4 = 0
 10281: 01                       fallthrough
      :                          @533
 10282: ab 8a e9                 jump @529 if a3 != a1
      :                          @534
 10285: 28 e8 04                 jump @598
      :                          @535 [@dyn 135]
 10288: 95 17 58                 a0 = sp + 0x58
 10291: 33 08 03                 a1 = 0x3
 10294: 0a 0f                    ecalli 15 // 'forget'
 10296: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10300: 7b 65 18                 u64 [s1 + 0x18] = s0
 10303: 82 18 40                 a1 = u64 [sp + 0x40]
 10306: 7b 68 20                 u64 [s1 + 0x20] = a1
 10309: 95 17 ff 07              a0 = sp + 0x7ff
 10313: 95 77 19 04              a0 = a0 + 0x419
 10317: 7b 67 28                 u64 [s1 + 0x28] = a0
 10320: 7b 68 30                 u64 [s1 + 0x30] = a1
 10323: 33 07 70 0d 01           a0 = 0x10d70
 10328: 7b 17 98 01              u64 [sp + 0x198] = a0
 10332: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10337: 49 21 b8 01              u64 [sp + 440] = 0
 10341: 95 17 ff 07              a0 = sp + 0x7ff
 10345: 95 77 b1 03              a0 = a0 + 0x3b1
 10349: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10353: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10358: 95 17 ff 07              a0 = sp + 0x7ff
 10362: 95 77 e1 03              a0 = a0 + 0x3e1
 10366: 95 18 98 01              a1 = sp + 0x198
 10370: 50 20 10 01 d7 0c        ra = 272, jump @743
      :                          @536 [@dyn 136]
 10376: 82 65 50                 s0 = u64 [s1 + 0x50]
 10379: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10382: 95 17 ff 07              a0 = sp + 0x7ff
 10386: 95 77 99 03              a0 = a0 + 0x399
 10390: 82 76 48                 s1 = u64 [a0 + 0x48]
 10393: 33 07 02                 a0 = 0x2
 10396: 33 08                    a1 = 0
 10398: 33 09                    a2 = 0
 10400: 64 5a                    a3 = s0
 10402: 33 00 12 01              ra = 0x112
 10406: 0a 64                    ecalli 100 // 'log'
 10408: 01                       fallthrough
      :                          @537 [@dyn 137]
 10409: 82 17 48                 a0 = u64 [sp + 0x48]
 10412: c8 67 07                 a0 = a0 + s1
 10415: 53 27 00 f0 23           jump @543 if a0 <u 4294963200
      :                          @538
 10420: 33 07 40 00 03           a0 = 0x30040
 10425: 95 77 00 10              a0 = a0 + 0x1000
 10429: 01                       fallthrough
      :                          @539
 10430: 82 78                    a1 = u64 [a0]
 10432: c9 87 09                 a2 = a0 - a1
 10435: ab 59 0f                 jump @543 if a2 != s0
      :                          @540
 10438: c9 68 09                 a2 = a1 - s1
 10441: 01                       fallthrough
      :                          @541
 10442: 82 7a                    a3 = u64 [a0]
 10444: ab 8a f2                 jump @539 if a3 != a1
      :                          @542
 10447: 7b 79                    u64 [a0] = a2
 10449: 01                       fallthrough
      :                          @543
 10450: 95 16 ff 07              s1 = sp + 0x7ff
 10454: 95 66 99 03              s1 = s1 + 0x399
 10458: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10462: 33 08 01                 a1 = 0x1
 10465: 50 20 14 01 d4 19        ra = 276, jump @1021
      :                          @544 [@dyn 138]
 10471: 95 17 58                 a0 = sp + 0x58
 10474: 33 08 03                 a1 = 0x3
 10477: 0a 0d                    ecalli 13 // 'query'
 10479: 7b 67                    u64 [s1] = a0
 10481: 33 07 40 0f 01           a0 = 0x10f40
 10486: 7b 17 98 01              u64 [sp + 0x198] = a0
 10490: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10495: 49 21 b8 01              u64 [sp + 440] = 0
 10499: 95 17 ff 07              a0 = sp + 0x7ff
 10503: 95 77 b1 03              a0 = a0 + 0x3b1
 10507: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10511: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10516: 82 17 30                 a0 = u64 [sp + 0x30]
 10519: 7b 67 18                 u64 [s1 + 0x18] = a0
 10522: 82 17 40                 a0 = u64 [sp + 0x40]
 10525: 7b 67 20                 u64 [s1 + 0x20] = a0
 10528: 7b 66 28                 u64 [s1 + 0x28] = s1
 10531: 7b 67 30                 u64 [s1 + 0x30] = a0
 10534: 95 17 ff 07              a0 = sp + 0x7ff
 10538: 95 77 e1 03              a0 = a0 + 0x3e1
 10542: 95 18 98 01              a1 = sp + 0x198
 10546: 50 20 16 01 27 0c        ra = 278, jump @743
      :                          @545 [@dyn 139]
 10552: 82 65 50                 s0 = u64 [s1 + 0x50]
 10555: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10558: 82 66 48                 s1 = u64 [s1 + 0x48]
 10561: 33 07 02                 a0 = 0x2
 10564: 33 08                    a1 = 0
 10566: 33 09                    a2 = 0
 10568: 64 5a                    a3 = s0
 10570: 33 00 18 01              ra = 0x118
 10574: 0a 64                    ecalli 100 // 'log'
 10576: 01                       fallthrough
      :                          @546 [@dyn 140]
 10577: 82 17 48                 a0 = u64 [sp + 0x48]
 10580: c8 67 07                 a0 = a0 + s1
 10583: 53 27 00 f0 80 01        jump @571 if a0 <u 4294963200
      :                          @547
 10589: 33 07 40 00 03           a0 = 0x30040
 10594: 95 77 00 10              a0 = a0 + 0x1000
 10598: 01                       fallthrough
      :                          @548
 10599: 82 78                    a1 = u64 [a0]
 10601: c9 87 09                 a2 = a0 - a1
 10604: ab 59 6b 01              jump @571 if a2 != s0
      :                          @549
 10608: c9 68 09                 a2 = a1 - s1
 10611: 01                       fallthrough
      :                          @550
 10612: 82 7a                    a3 = u64 [a0]
 10614: ab 8a f1                 jump @548 if a3 != a1
      :                          @551
 10617: 7b 79                    u64 [a0] = a2
 10619: 33 0b                    a4 = 0
 10621: 01                       fallthrough
      :                          @552
 10622: ab 8a e9                 jump @548 if a3 != a1
      :                          @553
 10625: 28 56 01                 jump @571
      :                          @554 [@dyn 141]
 10628: 95 18 58                 a1 = sp + 0x58
 10631: 95 19 98 00              a2 = sp + 0x98
 10635: 33 0b 03                 a4 = 0x3
 10638: 82 17 38                 a0 = u64 [sp + 0x38]
 10641: 33 0a                    a3 = 0
 10643: 0a 01                    ecalli 1 // 'lookup'
 10645: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10649: 7b 65 18                 u64 [s1 + 0x18] = s0
 10652: 82 18 40                 a1 = u64 [sp + 0x40]
 10655: 7b 68 20                 u64 [s1 + 0x20] = a1
 10658: 95 17 ff 07              a0 = sp + 0x7ff
 10662: 95 77 19 04              a0 = a0 + 0x419
 10666: 7b 67 28                 u64 [s1 + 0x28] = a0
 10669: 7b 68 30                 u64 [s1 + 0x30] = a1
 10672: 33 07 70 0f 01           a0 = 0x10f70
 10677: 7b 17 98 01              u64 [sp + 0x198] = a0
 10681: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10686: 49 21 b8 01              u64 [sp + 440] = 0
 10690: 95 17 ff 07              a0 = sp + 0x7ff
 10694: 95 77 b1 03              a0 = a0 + 0x3b1
 10698: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10702: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10707: 95 17 ff 07              a0 = sp + 0x7ff
 10711: 95 77 e1 03              a0 = a0 + 0x3e1
 10715: 95 18 98 01              a1 = sp + 0x198
 10719: 50 20 1c 01 7a 0b        ra = 284, jump @743
      :                          @555 [@dyn 142]
 10725: 82 65 50                 s0 = u64 [s1 + 0x50]
 10728: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10731: 95 17 ff 07              a0 = sp + 0x7ff
 10735: 95 77 99 03              a0 = a0 + 0x399
 10739: 82 76 48                 s1 = u64 [a0 + 0x48]
 10742: 33 07 02                 a0 = 0x2
 10745: 33 08                    a1 = 0
 10747: 33 09                    a2 = 0
 10749: 64 5a                    a3 = s0
 10751: 33 00 1e 01              ra = 0x11e
 10755: 0a 64                    ecalli 100 // 'log'
 10757: 01                       fallthrough
      :                          @556 [@dyn 143]
 10758: 82 17 48                 a0 = u64 [sp + 0x48]
 10761: c8 67 07                 a0 = a0 + s1
 10764: 53 27 00 f0 23           jump @562 if a0 <u 4294963200
      :                          @557
 10769: 33 07 40 00 03           a0 = 0x30040
 10774: 95 77 00 10              a0 = a0 + 0x1000
 10778: 01                       fallthrough
      :                          @558
 10779: 82 78                    a1 = u64 [a0]
 10781: c9 87 09                 a2 = a0 - a1
 10784: ab 59 0f                 jump @562 if a2 != s0
      :                          @559
 10787: c9 68 09                 a2 = a1 - s1
 10790: 01                       fallthrough
      :                          @560
 10791: 82 7a                    a3 = u64 [a0]
 10793: ab 8a f2                 jump @558 if a3 != a1
      :                          @561
 10796: 7b 79                    u64 [a0] = a2
 10798: 01                       fallthrough
      :                          @562
 10799: 95 16 ff 07              s1 = sp + 0x7ff
 10803: 95 66 99 03              s1 = s1 + 0x399
 10807: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10811: 33 08 01                 a1 = 0x1
 10814: 50 20 20 01 77 18        ra = 288, jump @1021
      :                          @563 [@dyn 144]
 10820: 95 17 58                 a0 = sp + 0x58
 10823: 33 08 03                 a1 = 0x3
 10826: 0a 0d                    ecalli 13 // 'query'
 10828: 7b 67                    u64 [s1] = a0
 10830: 33 07 a0 0f 01           a0 = 0x10fa0
 10835: 7b 17 98 01              u64 [sp + 0x198] = a0
 10839: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10844: 49 21 b8 01              u64 [sp + 440] = 0
 10848: 95 17 ff 07              a0 = sp + 0x7ff
 10852: 95 77 b1 03              a0 = a0 + 0x3b1
 10856: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10860: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10865: 82 17 30                 a0 = u64 [sp + 0x30]
 10868: 7b 67 18                 u64 [s1 + 0x18] = a0
 10871: 82 17 40                 a0 = u64 [sp + 0x40]
 10874: 7b 67 20                 u64 [s1 + 0x20] = a0
 10877: 7b 66 28                 u64 [s1 + 0x28] = s1
 10880: 7b 67 30                 u64 [s1 + 0x30] = a0
 10883: 95 17 ff 07              a0 = sp + 0x7ff
 10887: 95 77 e1 03              a0 = a0 + 0x3e1
 10891: 95 18 98 01              a1 = sp + 0x198
 10895: 50 20 22 01 ca 0a        ra = 290, jump @743
      :                          @564 [@dyn 145]
 10901: 82 65 50                 s0 = u64 [s1 + 0x50]
 10904: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10907: 82 66 48                 s1 = u64 [s1 + 0x48]
 10910: 33 07 02                 a0 = 0x2
 10913: 33 08                    a1 = 0
 10915: 33 09                    a2 = 0
 10917: 64 5a                    a3 = s0
 10919: 33 00 24 01              ra = 0x124
 10923: 0a 64                    ecalli 100 // 'log'
 10925: 01                       fallthrough
      :                          @565 [@dyn 146]
 10926: 82 17 48                 a0 = u64 [sp + 0x48]
 10929: c8 67 07                 a0 = a0 + s1
 10932: 53 27 00 f0 23           jump @571 if a0 <u 4294963200
      :                          @566
 10937: 33 07 40 00 03           a0 = 0x30040
 10942: 95 77 00 10              a0 = a0 + 0x1000
 10946: 01                       fallthrough
      :                          @567
 10947: 82 78                    a1 = u64 [a0]
 10949: c9 87 09                 a2 = a0 - a1
 10952: ab 59 0f                 jump @571 if a2 != s0
      :                          @568
 10955: c9 68 09                 a2 = a1 - s1
 10958: 01                       fallthrough
      :                          @569
 10959: 82 7a                    a3 = u64 [a0]
 10961: ab 8a f2                 jump @567 if a3 != a1
      :                          @570
 10964: 7b 79                    u64 [a0] = a2
 10966: 01                       fallthrough
      :                          @571
 10967: 95 16 ff 07              s1 = sp + 0x7ff
 10971: 95 66 99 03              s1 = s1 + 0x399
 10975: 82 67                    a0 = u64 [s1]
 10977: 33 08 02                 a1 = 0x2
 10980: 33 00 56 01              ra = 0x156
 10984: 28 cd 17                 jump @1021
      :                          @572 [@dyn 147]
 10987: 95 17 58                 a0 = sp + 0x58
 10990: 33 08 03                 a1 = 0x3
 10993: 33 09 8f 03              a2 = 0x38f
 10997: 33 0a 8f 03              a3 = 0x38f
 11001: 0a 09                    ecalli 9 // 'new'
 11003: 7b 67 70                 u64 [s1 + 0x70] = a0
 11006: 7b 65 18                 u64 [s1 + 0x18] = s0
 11009: 82 18 40                 a1 = u64 [sp + 0x40]
 11012: 7b 68 20                 u64 [s1 + 0x20] = a1
 11015: 95 17 ff 07              a0 = sp + 0x7ff
 11019: 95 77 09 04              a0 = a0 + 0x409
 11023: 7b 67 28                 u64 [s1 + 0x28] = a0
 11026: 7b 68 30                 u64 [s1 + 0x30] = a1
 11029: 33 07 d0 0f 01           a0 = 0x10fd0
 11034: 7b 17 98 01              u64 [sp + 0x198] = a0
 11038: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11043: 49 21 b8 01              u64 [sp + 440] = 0
 11047: 95 17 ff 07              a0 = sp + 0x7ff
 11051: 95 77 b1 03              a0 = a0 + 0x3b1
 11055: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11059: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11064: 95 17 ff 07              a0 = sp + 0x7ff
 11068: 95 77 e1 03              a0 = a0 + 0x3e1
 11072: 95 18 98 01              a1 = sp + 0x198
 11076: 50 20 28 01 15 0a        ra = 296, jump @743
      :                          @573 [@dyn 148]
 11082: 82 65 50                 s0 = u64 [s1 + 0x50]
 11085: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11088: 95 17 ff 07              a0 = sp + 0x7ff
 11092: 95 77 99 03              a0 = a0 + 0x399
 11096: 82 76 48                 s1 = u64 [a0 + 0x48]
 11099: 33 07 02                 a0 = 0x2
 11102: 33 08                    a1 = 0
 11104: 33 09                    a2 = 0
 11106: 64 5a                    a3 = s0
 11108: 33 00 2a 01              ra = 0x12a
 11112: 0a 64                    ecalli 100 // 'log'
 11114: 01                       fallthrough
      :                          @574 [@dyn 149]
 11115: 82 17 48                 a0 = u64 [sp + 0x48]
 11118: c8 67 07                 a0 = a0 + s1
 11121: 53 27 00 f0 23           jump @580 if a0 <u 4294963200
      :                          @575
 11126: 33 07 40 00 03           a0 = 0x30040
 11131: 95 77 00 10              a0 = a0 + 0x1000
 11135: 01                       fallthrough
      :                          @576
 11136: 82 78                    a1 = u64 [a0]
 11138: c9 87 09                 a2 = a0 - a1
 11141: ab 59 0f                 jump @580 if a2 != s0
      :                          @577
 11144: c9 68 09                 a2 = a1 - s1
 11147: 01                       fallthrough
      :                          @578
 11148: 82 7a                    a3 = u64 [a0]
 11150: ab 8a f2                 jump @576 if a3 != a1
      :                          @579
 11153: 7b 79                    u64 [a0] = a2
 11155: 01                       fallthrough
      :                          @580
 11156: 95 16 ff 07              s1 = sp + 0x7ff
 11160: 95 66 99 03              s1 = s1 + 0x399
 11164: 82 67 70                 a0 = u64 [s1 + 0x70]
 11167: 33 08 01                 a1 = 0x1
 11170: 50 20 2c 01 13 17        ra = 300, jump @1021
      :                          @581 [@dyn 150]
 11176: 95 17 58                 a0 = sp + 0x58
 11179: 33 08 8f 03              a1 = 0x38f
 11183: 33 09 8f 03              a2 = 0x38f
 11187: 0a 0a                    ecalli 10 // 'upgrade'
 11189: 7b 67 78                 u64 [s1 + 0x78] = a0
 11192: 95 17 ff 07              a0 = sp + 0x7ff
 11196: 95 77 11 04              a0 = a0 + 0x411
 11200: 7b 67 28                 u64 [s1 + 0x28] = a0
 11203: 33 07 00 10 01           a0 = 0x11000
 11208: 7b 17 98 01              u64 [sp + 0x198] = a0
 11212: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11217: 49 21 b8 01              u64 [sp + 440] = 0
 11221: 95 17 ff 07              a0 = sp + 0x7ff
 11225: 95 77 b1 03              a0 = a0 + 0x3b1
 11229: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11233: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11238: 82 17 30                 a0 = u64 [sp + 0x30]
 11241: 7b 67 18                 u64 [s1 + 0x18] = a0
 11244: 82 17 40                 a0 = u64 [sp + 0x40]
 11247: 7b 67 20                 u64 [s1 + 0x20] = a0
 11250: 7b 67 30                 u64 [s1 + 0x30] = a0
 11253: 95 17 ff 07              a0 = sp + 0x7ff
 11257: 95 77 e1 03              a0 = a0 + 0x3e1
 11261: 95 18 98 01              a1 = sp + 0x198
 11265: 50 20 2e 01 58 09        ra = 302, jump @743
      :                          @582 [@dyn 151]
 11271: 82 65 50                 s0 = u64 [s1 + 0x50]
 11274: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11277: 82 66 48                 s1 = u64 [s1 + 0x48]
 11280: 33 07 02                 a0 = 0x2
 11283: 33 08                    a1 = 0
 11285: 33 09                    a2 = 0
 11287: 64 5a                    a3 = s0
 11289: 33 00 30 01              ra = 0x130
 11293: 0a 64                    ecalli 100 // 'log'
 11295: 01                       fallthrough
      :                          @583 [@dyn 152]
 11296: 82 17 48                 a0 = u64 [sp + 0x48]
 11299: c8 67 07                 a0 = a0 + s1
 11302: 53 27 00 f0 23           jump @589 if a0 <u 4294963200
      :                          @584
 11307: 33 07 40 00 03           a0 = 0x30040
 11312: 95 77 00 10              a0 = a0 + 0x1000
 11316: 01                       fallthrough
      :                          @585
 11317: 82 78                    a1 = u64 [a0]
 11319: c9 87 09                 a2 = a0 - a1
 11322: ab 59 0f                 jump @589 if a2 != s0
      :                          @586
 11325: c9 68 09                 a2 = a1 - s1
 11328: 01                       fallthrough
      :                          @587
 11329: 82 7a                    a3 = u64 [a0]
 11331: ab 8a f2                 jump @585 if a3 != a1
      :                          @588
 11334: 7b 79                    u64 [a0] = a2
 11336: 01                       fallthrough
      :                          @589
 11337: 95 16 ff 07              s1 = sp + 0x7ff
 11341: 95 66 99 03              s1 = s1 + 0x399
 11345: 82 67 78                 a0 = u64 [s1 + 0x78]
 11348: 33 08 02                 a1 = 0x2
 11351: 33 05 02                 s0 = 0x2
 11354: 50 20 32 01 5b 16        ra = 306, jump @1021
      :                          @590 [@dyn 153]
 11360: 48 06 8f 03              u32 [s1 + 0] = 0x38f
 11364: 48 16 08                 u32 [s1 + 8] = 0
 11367: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
 11372: 33 08 01                 a1 = 0x1
 11375: 33 09 01                 a2 = 0x1
 11378: 95 1a ff 07              a3 = sp + 0x7ff
 11382: 95 aa 99 03              a3 = a3 + 0x399
 11386: 33 0b 01                 a4 = 0x1
 11389: 33 07                    a0 = 0
 11391: 0a 05                    ecalli 5 // 'bless'
 11393: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11397: 95 17 ff 07              a0 = sp + 0x7ff
 11401: 95 77 19 04              a0 = a0 + 0x419
 11405: 7b 67 28                 u64 [s1 + 0x28] = a0
 11408: 33 07 30 10 01           a0 = 0x11030
 11413: 7b 17 98 01              u64 [sp + 0x198] = a0
 11417: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11422: 49 21 b8 01              u64 [sp + 440] = 0
 11426: 95 17 ff 07              a0 = sp + 0x7ff
 11430: 95 77 b1 03              a0 = a0 + 0x3b1
 11434: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11438: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11442: 82 17 30                 a0 = u64 [sp + 0x30]
 11445: 7b 67 18                 u64 [s1 + 0x18] = a0
 11448: 82 17 40                 a0 = u64 [sp + 0x40]
 11451: 7b 67 20                 u64 [s1 + 0x20] = a0
 11454: 7b 67 30                 u64 [s1 + 0x30] = a0
 11457: 95 17 ff 07              a0 = sp + 0x7ff
 11461: 95 77 e1 03              a0 = a0 + 0x3e1
 11465: 95 18 98 01              a1 = sp + 0x198
 11469: 50 20 34 01 8c 08        ra = 308, jump @743
      :                          @591 [@dyn 154]
 11475: 82 65 50                 s0 = u64 [s1 + 0x50]
 11478: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11481: 82 66 48                 s1 = u64 [s1 + 0x48]
 11484: 33 07 02                 a0 = 0x2
 11487: 33 08                    a1 = 0
 11489: 33 09                    a2 = 0
 11491: 64 5a                    a3 = s0
 11493: 33 00 36 01              ra = 0x136
 11497: 0a 64                    ecalli 100 // 'log'
 11499: 01                       fallthrough
      :                          @592 [@dyn 155]
 11500: 82 17 48                 a0 = u64 [sp + 0x48]
 11503: c8 67 07                 a0 = a0 + s1
 11506: 53 27 00 f0 23           jump @598 if a0 <u 4294963200
      :                          @593
 11511: 33 07 40 00 03           a0 = 0x30040
 11516: 95 77 00 10              a0 = a0 + 0x1000
 11520: 01                       fallthrough
      :                          @594
 11521: 82 78                    a1 = u64 [a0]
 11523: c9 87 09                 a2 = a0 - a1
 11526: ab 59 0f                 jump @598 if a2 != s0
      :                          @595
 11529: c9 68 09                 a2 = a1 - s1
 11532: 01                       fallthrough
      :                          @596
 11533: 82 7a                    a3 = u64 [a0]
 11535: ab 8a f2                 jump @594 if a3 != a1
      :                          @597
 11538: 7b 79                    u64 [a0] = a2
 11540: 01                       fallthrough
      :                          @598
 11541: 95 16 ff 07              s1 = sp + 0x7ff
 11545: 95 66 99 03              s1 = s1 + 0x399
 11549: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11553: 33 08 05                 a1 = 0x5
 11556: 33 00 56 01              ra = 0x156
 11560: 28 8d 15                 jump @1021
      :                          @599 [@dyn 156]
 11563: 95 17 55                 a0 = sp + 0x55
 11566: 33 08 03                 a1 = 0x3
 11569: 33 09                    a2 = 0
 11571: 33 0a                    a3 = 0
 11573: 0a 03                    ecalli 3 // 'write'
 11575: 7b 67 68                 u64 [s1 + 0x68] = a0
 11578: 33 07 50 00 01           a0 = 0x10050
 11583: 7b 17 10                 u64 [sp + 0x10] = a0
 11586: 7b 67 18                 u64 [s1 + 0x18] = a0
 11589: 82 18 40                 a1 = u64 [sp + 0x40]
 11592: 7b 68 20                 u64 [s1 + 0x20] = a1
 11595: 95 17 ff 07              a0 = sp + 0x7ff
 11599: 95 77 01 04              a0 = a0 + 0x401
 11603: 7b 67 28                 u64 [s1 + 0x28] = a0
 11606: 7b 68 30                 u64 [s1 + 0x30] = a1
 11609: 33 07 60 10 01           a0 = 0x11060
 11614: 7b 17 98 01              u64 [sp + 0x198] = a0
 11618: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11623: 49 21 b8 01              u64 [sp + 440] = 0
 11627: 95 17 ff 07              a0 = sp + 0x7ff
 11631: 95 77 b1 03              a0 = a0 + 0x3b1
 11635: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11639: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11644: 95 17 ff 07              a0 = sp + 0x7ff
 11648: 95 77 e1 03              a0 = a0 + 0x3e1
 11652: 95 18 98 01              a1 = sp + 0x198
 11656: 50 20 3a 01 d1 07        ra = 314, jump @743
      :                          @600 [@dyn 157]
 11662: 82 65 50                 s0 = u64 [s1 + 0x50]
 11665: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11668: 95 17 ff 07              a0 = sp + 0x7ff
 11672: 95 77 99 03              a0 = a0 + 0x399
 11676: 82 76 48                 s1 = u64 [a0 + 0x48]
 11679: 33 07 02                 a0 = 0x2
 11682: 33 08                    a1 = 0
 11684: 33 09                    a2 = 0
 11686: 64 5a                    a3 = s0
 11688: 33 00 3c 01              ra = 0x13c
 11692: 0a 64                    ecalli 100 // 'log'
 11694: 01                       fallthrough
      :                          @601 [@dyn 158]
 11695: 82 17 48                 a0 = u64 [sp + 0x48]
 11698: c8 67 07                 a0 = a0 + s1
 11701: 33 08 40 00 03           a1 = 0x30040
 11706: 7b 18 08                 u64 [sp + 0x8] = a1
 11709: 53 27 00 f0 21           jump @607 if a0 <u 4294963200
      :                          @602
 11714: 82 18 08                 a1 = u64 [sp + 0x8]
 11717: 95 87 00 10              a0 = a1 + 0x1000
 11721: 01                       fallthrough
      :                          @603
 11722: 82 78                    a1 = u64 [a0]
 11724: c9 87 09                 a2 = a0 - a1
 11727: ab 59 0f                 jump @607 if a2 != s0
      :                          @604
 11730: c9 68 09                 a2 = a1 - s1
 11733: 01                       fallthrough
      :                          @605
 11734: 82 7a                    a3 = u64 [a0]
 11736: ab 8a f2                 jump @603 if a3 != a1
      :                          @606
 11739: 7b 79                    u64 [a0] = a2
 11741: 01                       fallthrough
      :                          @607
 11742: 95 16 ff 07              s1 = sp + 0x7ff
 11746: 95 66 99 03              s1 = s1 + 0x399
 11750: 82 67 68                 a0 = u64 [s1 + 0x68]
 11753: 33 08 01                 a1 = 0x1
 11756: 50 20 3e 01 c9 14        ra = 318, jump @1021
      :                          @608 [@dyn 159]
 11762: 95 17 55                 a0 = sp + 0x55
 11765: 33 08 03                 a1 = 0x3
 11768: 95 19 52                 a2 = sp + 0x52
 11771: 33 0a 03                 a3 = 0x3
 11774: 0a 03                    ecalli 3 // 'write'
 11776: 7b 67 70                 u64 [s1 + 0x70] = a0
 11779: 95 17 ff 07              a0 = sp + 0x7ff
 11783: 95 77 09 04              a0 = a0 + 0x409
 11787: 7b 67 28                 u64 [s1 + 0x28] = a0
 11790: 33 07 90 10 01           a0 = 0x11090
 11795: 7b 17 98 01              u64 [sp + 0x198] = a0
 11799: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11804: 49 21 b8 01              u64 [sp + 440] = 0
 11808: 95 17 ff 07              a0 = sp + 0x7ff
 11812: 95 77 b1 03              a0 = a0 + 0x3b1
 11816: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11820: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11825: 82 17 10                 a0 = u64 [sp + 0x10]
 11828: 7b 67 18                 u64 [s1 + 0x18] = a0
 11831: 82 17 40                 a0 = u64 [sp + 0x40]
 11834: 7b 67 20                 u64 [s1 + 0x20] = a0
 11837: 7b 67 30                 u64 [s1 + 0x30] = a0
 11840: 95 17 ff 07              a0 = sp + 0x7ff
 11844: 95 77 e1 03              a0 = a0 + 0x3e1
 11848: 95 18 98 01              a1 = sp + 0x198
 11852: 50 20 40 01 0d 07        ra = 320, jump @743
      :                          @609 [@dyn 160]
 11858: 82 65 50                 s0 = u64 [s1 + 0x50]
 11861: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11864: 82 66 48                 s1 = u64 [s1 + 0x48]
 11867: 33 07 02                 a0 = 0x2
 11870: 33 08                    a1 = 0
 11872: 33 09                    a2 = 0
 11874: 64 5a                    a3 = s0
 11876: 33 00 42 01              ra = 0x142
 11880: 0a 64                    ecalli 100 // 'log'
 11882: 01                       fallthrough
      :                          @610 [@dyn 161]
 11883: 82 17 48                 a0 = u64 [sp + 0x48]
 11886: c8 67 07                 a0 = a0 + s1
 11889: 53 27 00 f0 21           jump @616 if a0 <u 4294963200
      :                          @611
 11894: 82 18 08                 a1 = u64 [sp + 0x8]
 11897: 95 87 00 10              a0 = a1 + 0x1000
 11901: 01                       fallthrough
      :                          @612
 11902: 82 78                    a1 = u64 [a0]
 11904: c9 87 09                 a2 = a0 - a1
 11907: ab 59 0f                 jump @616 if a2 != s0
      :                          @613
 11910: c9 68 09                 a2 = a1 - s1
 11913: 01                       fallthrough
      :                          @614
 11914: 82 7a                    a3 = u64 [a0]
 11916: ab 8a f2                 jump @612 if a3 != a1
      :                          @615
 11919: 7b 79                    u64 [a0] = a2
 11921: 01                       fallthrough
      :                          @616
 11922: 95 16 ff 07              s1 = sp + 0x7ff
 11926: 95 66 99 03              s1 = s1 + 0x399
 11930: 82 67 70                 a0 = u64 [s1 + 0x70]
 11933: 33 08 02                 a1 = 0x2
 11936: 33 05 02                 s0 = 0x2
 11939: 50 20 44 01 12 14        ra = 324, jump @1021
      :                          @617 [@dyn 162]
 11945: 95 17 55                 a0 = sp + 0x55
 11948: 33 08 03                 a1 = 0x3
 11951: 33 09                    a2 = 0
 11953: 33 0a                    a3 = 0
 11955: 0a 03                    ecalli 3 // 'write'
 11957: 7b 67 78                 u64 [s1 + 0x78] = a0
 11960: 82 17 10                 a0 = u64 [sp + 0x10]
 11963: 7b 67 18                 u64 [s1 + 0x18] = a0
 11966: 82 18 40                 a1 = u64 [sp + 0x40]
 11969: 7b 68 20                 u64 [s1 + 0x20] = a1
 11972: 95 17 ff 07              a0 = sp + 0x7ff
 11976: 95 77 11 04              a0 = a0 + 0x411
 11980: 7b 67 28                 u64 [s1 + 0x28] = a0
 11983: 7b 68 30                 u64 [s1 + 0x30] = a1
 11986: 33 07 c0 10 01           a0 = 0x110c0
 11991: 7b 17 98 01              u64 [sp + 0x198] = a0
 11995: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12000: 49 21 b8 01              u64 [sp + 440] = 0
 12004: 95 17 ff 07              a0 = sp + 0x7ff
 12008: 95 77 b1 03              a0 = a0 + 0x3b1
 12012: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12016: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 12020: 95 17 ff 07              a0 = sp + 0x7ff
 12024: 95 77 e1 03              a0 = a0 + 0x3e1
 12028: 95 18 98 01              a1 = sp + 0x198
 12032: 50 20 46 01 59 06        ra = 326, jump @743
      :                          @618 [@dyn 163]
 12038: 82 65 50                 s0 = u64 [s1 + 0x50]
 12041: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12044: 82 66 48                 s1 = u64 [s1 + 0x48]
 12047: 33 07 02                 a0 = 0x2
 12050: 33 08                    a1 = 0
 12052: 33 09                    a2 = 0
 12054: 64 5a                    a3 = s0
 12056: 33 00 48 01              ra = 0x148
 12060: 0a 64                    ecalli 100 // 'log'
 12062: 01                       fallthrough
      :                          @619 [@dyn 164]
 12063: 82 17 48                 a0 = u64 [sp + 0x48]
 12066: c8 67 07                 a0 = a0 + s1
 12069: 53 27 00 f0 21           jump @625 if a0 <u 4294963200
      :                          @620
 12074: 82 18 08                 a1 = u64 [sp + 0x8]
 12077: 95 87 00 10              a0 = a1 + 0x1000
 12081: 01                       fallthrough
      :                          @621
 12082: 82 78                    a1 = u64 [a0]
 12084: c9 87 09                 a2 = a0 - a1
 12087: ab 59 0f                 jump @625 if a2 != s0
      :                          @622
 12090: c9 68 09                 a2 = a1 - s1
 12093: 01                       fallthrough
      :                          @623
 12094: 82 7a                    a3 = u64 [a0]
 12096: ab 8a f2                 jump @621 if a3 != a1
      :                          @624
 12099: 7b 79                    u64 [a0] = a2
 12101: 01                       fallthrough
      :                          @625
 12102: 95 16 ff 07              s1 = sp + 0x7ff
 12106: 95 66 99 03              s1 = s1 + 0x399
 12110: 82 67 78                 a0 = u64 [s1 + 0x78]
 12113: 33 08 05                 a1 = 0x5
 12116: 50 20 4a 01 61 13        ra = 330, jump @1021
      :                          @626 [@dyn 165]
 12122: 95 18 55                 a1 = sp + 0x55
 12125: 33 09 03                 a2 = 0x3
 12128: 95 1a 98 00              a3 = sp + 0x98
 12132: 33 0c 00 01              a5 = 0x100
 12136: 82 17 38                 a0 = u64 [sp + 0x38]
 12139: 33 0b                    a4 = 0
 12141: 0a 02                    ecalli 2 // 'read'
 12143: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12147: 95 17 ff 07              a0 = sp + 0x7ff
 12151: 95 77 19 04              a0 = a0 + 0x419
 12155: 7b 67 28                 u64 [s1 + 0x28] = a0
 12158: 33 07 f0 10 01           a0 = 0x110f0
 12163: 7b 17 98 01              u64 [sp + 0x198] = a0
 12167: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12172: 49 21 b8 01              u64 [sp + 440] = 0
 12176: 95 17 ff 07              a0 = sp + 0x7ff
 12180: 95 77 b1 03              a0 = a0 + 0x3b1
 12184: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12188: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12193: 82 17 10                 a0 = u64 [sp + 0x10]
 12196: 7b 67 18                 u64 [s1 + 0x18] = a0
 12199: 82 17 40                 a0 = u64 [sp + 0x40]
 12202: 7b 67 20                 u64 [s1 + 0x20] = a0
 12205: 7b 67 30                 u64 [s1 + 0x30] = a0
 12208: 95 17 ff 07              a0 = sp + 0x7ff
 12212: 95 77 e1 03              a0 = a0 + 0x3e1
 12216: 95 18 98 01              a1 = sp + 0x198
 12220: 50 20 4c 01 9d 05        ra = 332, jump @743
      :                          @627 [@dyn 166]
 12226: 82 65 50                 s0 = u64 [s1 + 0x50]
 12229: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12232: 82 66 48                 s1 = u64 [s1 + 0x48]
 12235: 33 07 02                 a0 = 0x2
 12238: 33 08                    a1 = 0
 12240: 33 09                    a2 = 0
 12242: 64 5a                    a3 = s0
 12244: 33 00 4e 01              ra = 0x14e
 12248: 0a 64                    ecalli 100 // 'log'
 12250: 01                       fallthrough
      :                          @628 [@dyn 167]
 12251: 82 17 48                 a0 = u64 [sp + 0x48]
 12254: c8 67 07                 a0 = a0 + s1
 12257: 53 27 00 f0 21           jump @634 if a0 <u 4294963200
      :                          @629
 12262: 82 18 08                 a1 = u64 [sp + 0x8]
 12265: 95 87 00 10              a0 = a1 + 0x1000
 12269: 01                       fallthrough
      :                          @630
 12270: 82 78                    a1 = u64 [a0]
 12272: c9 87 09                 a2 = a0 - a1
 12275: ab 59 0f                 jump @634 if a2 != s0
      :                          @631
 12278: c9 68 09                 a2 = a1 - s1
 12281: 01                       fallthrough
      :                          @632
 12282: 82 7a                    a3 = u64 [a0]
 12284: ab 8a f2                 jump @630 if a3 != a1
      :                          @633
 12287: 7b 79                    u64 [a0] = a2
 12289: 01                       fallthrough
      :                          @634
 12290: 95 16 ff 07              s1 = sp + 0x7ff
 12294: 95 66 99 03              s1 = s1 + 0x399
 12298: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12302: 33 08 06                 a1 = 0x6
 12305: 50 20 50 01 a4 12        ra = 336, jump @1021
      :                          @635 [@dyn 168]
 12311: 95 17 55                 a0 = sp + 0x55
 12314: 33 08 03                 a1 = 0x3
 12317: 33 09                    a2 = 0
 12319: 33 0a                    a3 = 0
 12321: 0a 03                    ecalli 3 // 'write'
 12323: 7b 67                    u64 [s1] = a0
 12325: 82 17 10                 a0 = u64 [sp + 0x10]
 12328: 7b 67 18                 u64 [s1 + 0x18] = a0
 12331: 33 07 20 11 01           a0 = 0x11120
 12336: 7b 17 98 01              u64 [sp + 0x198] = a0
 12340: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12345: 49 21 b8 01              u64 [sp + 440] = 0
 12349: 95 17 ff 07              a0 = sp + 0x7ff
 12353: 95 77 b1 03              a0 = a0 + 0x3b1
 12357: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12361: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12366: 82 17 40                 a0 = u64 [sp + 0x40]
 12369: 7b 67 20                 u64 [s1 + 0x20] = a0
 12372: 7b 66 28                 u64 [s1 + 0x28] = s1
 12375: 7b 67 30                 u64 [s1 + 0x30] = a0
 12378: 95 17 ff 07              a0 = sp + 0x7ff
 12382: 95 77 e1 03              a0 = a0 + 0x3e1
 12386: 95 18 98 01              a1 = sp + 0x198
 12390: 50 20 52 01 f3 04        ra = 338, jump @743
      :                          @636 [@dyn 169]
 12396: 82 65 50                 s0 = u64 [s1 + 0x50]
 12399: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12402: 82 66 48                 s1 = u64 [s1 + 0x48]
 12405: 33 07 02                 a0 = 0x2
 12408: 33 08                    a1 = 0
 12410: 33 09                    a2 = 0
 12412: 64 5a                    a3 = s0
 12414: 33 00 54 01              ra = 0x154
 12418: 0a 64                    ecalli 100 // 'log'
 12420: 01                       fallthrough
      :                          @637 [@dyn 170]
 12421: 82 17 48                 a0 = u64 [sp + 0x48]
 12424: c8 67 07                 a0 = a0 + s1
 12427: 53 27 00 f0 21           jump @643 if a0 <u 4294963200
      :                          @638
 12432: 82 18 08                 a1 = u64 [sp + 0x8]
 12435: 95 87 00 10              a0 = a1 + 0x1000
 12439: 01                       fallthrough
      :                          @639
 12440: 82 78                    a1 = u64 [a0]
 12442: c9 87 09                 a2 = a0 - a1
 12445: ab 59 0f                 jump @643 if a2 != s0
      :                          @640
 12448: c9 68 09                 a2 = a1 - s1
 12451: 01                       fallthrough
      :                          @641
 12452: 82 7a                    a3 = u64 [a0]
 12454: ab 8a f2                 jump @639 if a3 != a1
      :                          @642
 12457: 7b 79                    u64 [a0] = a2
 12459: 01                       fallthrough
      :                          @643
 12460: 95 16 ff 07              s1 = sp + 0x7ff
 12464: 95 66 99 03              s1 = s1 + 0x399
 12468: 82 67                    a0 = u64 [s1]
 12470: 33 08 07                 a1 = 0x7
 12473: 50 20 56 01 fc 11        ra = 342, jump @1021
      :                          @644 [@dyn 171]
 12479: 82 15 30                 s0 = u64 [sp + 0x30]
 12482: 01                       fallthrough
      :                          @645
 12483: 95 18 98 00              a1 = sp + 0x98
 12487: 82 17 38                 a0 = u64 [sp + 0x38]
 12490: 0a 04                    ecalli 4 // 'info'
 12492: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12496: 33 08 08                 a1 = 0x8
 12499: 50 20 58 01 e2 11        ra = 344, jump @1021
      :                          @646 [@dyn 172]
 12505: 7b 65 18                 u64 [s1 + 0x18] = s0
 12508: 82 18 40                 a1 = u64 [sp + 0x40]
 12511: 7b 68 20                 u64 [s1 + 0x20] = a1
 12514: 95 17 ff 07              a0 = sp + 0x7ff
 12518: 95 77 19 04              a0 = a0 + 0x419
 12522: 7b 67 28                 u64 [s1 + 0x28] = a0
 12525: 7b 68 30                 u64 [s1 + 0x30] = a1
 12528: 33 07 50 11 01           a0 = 0x11150
 12533: 7b 17 98 01              u64 [sp + 0x198] = a0
 12537: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12542: 49 21 b8 01              u64 [sp + 440] = 0
 12546: 95 17 ff 07              a0 = sp + 0x7ff
 12550: 95 77 b1 03              a0 = a0 + 0x3b1
 12554: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12558: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12563: 95 17 ff 07              a0 = sp + 0x7ff
 12567: 95 77 e1 03              a0 = a0 + 0x3e1
 12571: 95 18 98 01              a1 = sp + 0x198
 12575: 50 20 5a 01 3a 04        ra = 346, jump @743
      :                          @647 [@dyn 173]
 12581: 82 65 50                 s0 = u64 [s1 + 0x50]
 12584: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12587: 95 17 ff 07              a0 = sp + 0x7ff
 12591: 95 77 99 03              a0 = a0 + 0x399
 12595: 82 76 48                 s1 = u64 [a0 + 0x48]
 12598: 33 07 02                 a0 = 0x2
 12601: 33 08                    a1 = 0
 12603: 33 09                    a2 = 0
 12605: 64 5a                    a3 = s0
 12607: 33 00 5c 01              ra = 0x15c
 12611: 0a 64                    ecalli 100 // 'log'
 12613: 01                       fallthrough
      :                          @648 [@dyn 174]
 12614: 82 17 48                 a0 = u64 [sp + 0x48]
 12617: c8 67 07                 a0 = a0 + s1
 12620: 53 27 00 f0 25           jump @654 if a0 <u 4294963200
      :                          @649
 12625: 33 07 40 00 03           a0 = 0x30040
 12630: 95 77 00 10              a0 = a0 + 0x1000
 12634: 01                       fallthrough
      :                          @650
 12635: 82 78                    a1 = u64 [a0]
 12637: c9 87 09                 a2 = a0 - a1
 12640: ab 59 11                 jump @654 if a2 != s0
      :                          @651
 12643: c9 68 09                 a2 = a1 - s1
 12646: 01                       fallthrough
      :                          @652
 12647: 82 7a                    a3 = u64 [a0]
 12649: ab 8a f2                 jump @650 if a3 != a1
      :                          @653
 12652: 7b 79                    u64 [a0] = a2
 12654: 0a                       ecalli 0 // 'gas'
 12655: 28 04                    jump @655
      :                          @654
 12657: 0a                       ecalli 0 // 'gas'
 12658: 01                       fallthrough
      :                          @655
 12659: 95 16 ff 07              s1 = sp + 0x7ff
 12663: 95 66 99 03              s1 = s1 + 0x399
 12667: 7b 67                    u64 [s1] = a0
 12669: 33 08 09                 a1 = 0x9
 12672: 50 20 5e 01 35 11        ra = 350, jump @1021
      :                          @656 [@dyn 175]
 12678: 7b 66 48                 u64 [s1 + 0x48] = s1
 12681: 82 17 40                 a0 = u64 [sp + 0x40]
 12684: 7b 67 50                 u64 [s1 + 0x50] = a0
 12687: 33 07 80 11 01           a0 = 0x11180
 12692: 7b 17 98 01              u64 [sp + 0x198] = a0
 12696: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 12701: 49 21 b8 01              u64 [sp + 440] = 0
 12705: 95 17 ff 07              a0 = sp + 0x7ff
 12709: 95 77 e1 03              a0 = a0 + 0x3e1
 12713: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12717: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 12722: 95 17 ff 07              a0 = sp + 0x7ff
 12726: 95 77 b1 03              a0 = a0 + 0x3b1
 12730: 95 18 98 01              a1 = sp + 0x198
 12734: 50 20 60 01 9b 03        ra = 352, jump @743
      :                          @657 [@dyn 176]
 12740: 82 65 20                 s0 = u64 [s1 + 0x20]
 12743: 82 6b 28                 a4 = u64 [s1 + 0x28]
 12746: 82 66 18                 s1 = u64 [s1 + 0x18]
 12749: 33 07 02                 a0 = 0x2
 12752: 33 08                    a1 = 0
 12754: 33 09                    a2 = 0
 12756: 64 5a                    a3 = s0
 12758: 33 00 62 01              ra = 0x162
 12762: 0a 64                    ecalli 100 // 'log'
 12764: 01                       fallthrough
      :                          @658 [@dyn 177]
 12765: 82 17 48                 a0 = u64 [sp + 0x48]
 12768: c8 67 07                 a0 = a0 + s1
 12771: 53 27 00 f0 25           jump @664 if a0 <u 4294963200
      :                          @659
 12776: 33 07 40 00 03           a0 = 0x30040
 12781: 95 77 00 10              a0 = a0 + 0x1000
 12785: 01                       fallthrough
      :                          @660
 12786: 82 78                    a1 = u64 [a0]
 12788: c9 87 09                 a2 = a0 - a1
 12791: ab 59 11                 jump @664 if a2 != s0
      :                          @661
 12794: c9 68 09                 a2 = a1 - s1
 12797: 01                       fallthrough
      :                          @662
 12798: 82 7a                    a3 = u64 [a0]
 12800: ab 8a f2                 jump @660 if a3 != a1
      :                          @663
 12803: 7b 79                    u64 [a0] = a2
 12805: 33 0b                    a4 = 0
 12807: 01                       fallthrough
      :                          @664
 12808: 82 19 20                 a2 = u64 [sp + 0x20]
 12811: 82 1a 28                 a3 = u64 [sp + 0x28]
 12814: 55 19 21 79              jump @675 if a2 >=u 33
      :                          @665
 12818: 97 a6 20                 s1 = a3 << 0x20
 12821: 98 66 20                 s1 = s1 >> 0x20
 12824: 33 05 19 00 03           s0 = 0x30019
 12829: 33 07 19 00 03           a0 = 0x30019
 12834: 82 18 18                 a1 = u64 [sp + 0x18]
 12837: 50 20 64 01 a9 05        ra = 356, jump @793
      :                          @666 [@dyn 178]
 12843: 3a 08 00 00 03           a1 = u64 [0x30000]
 12848: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 12858: ca 76 07                 a0 = s1 * a0
 12861: ae 87 2c                 jump @671 if a0 >=u a1
      :                          @667
 12864: 82 18 28                 a1 = u64 [sp + 0x28]
 12867: 51 18 09 18              jump @669 if a1 == 9
      :                          @668
 12871: 0a 08                    ecalli 8 // 'checkpoint'
 12873: 33 0a 19 06 01           a3 = 0x10619
 12878: 33 07 02                 a0 = 0x2
 12881: 33 0b 11                 a4 = 0x11
 12884: 33 08                    a1 = 0
 12886: 33 09                    a2 = 0
 12888: 0a 64                    ecalli 100 // 'log'
 12890: 01                       fallthrough
      :                          @669
 12891: 95 67 2a                 a0 = s1 + 0x2a
 12894: 33 08 07                 a1 = 0x7
 12897: 50 20 66 01 54 10        ra = 358, jump @1021
      :                          @670 [@dyn 179]
 12903: 32 07                    jump [a0]
      :                          @671
 12905: 64 57                    a0 = s0
 12907: 0a 10                    ecalli 16 // 'oyield'
 12909: 33 0a de 00 01           a3 = 0x100de
 12914: 33 07 02                 a0 = 0x2
 12917: 33 0b 10                 a4 = 0x10
 12920: 33 08                    a1 = 0
 12922: 33 09                    a2 = 0
 12924: 0a 64                    ecalli 100 // 'log'
 12926: 33 08 20                 a1 = 0x20
 12929: 28 38 e4                 jump @316
      :                          @672
 12932: 00                       trap
      :                          @673
 12933: 00                       trap
      :                          @674
 12934: 00                       trap
      :                          @675
 12935: 00                       trap
      :                          @676
 12936: 00                       trap
      :                          @677 [export #2: 'on_transfer']
 12937: 95 11 88                 sp = sp + 0xffffffffffffff88
 12940: 7b 10 70                 u64 [sp + 0x70] = ra
 12943: 7b 15 68                 u64 [sp + 0x68] = s0
 12946: 7b 16 60                 u64 [sp + 0x60] = s1
 12949: 0a                       ecalli 0 // 'gas'
 12950: 7b 17                    u64 [sp] = a0
 12952: 33 08 04                 a1 = 0x4
 12955: 50 20 68 01 1a 10        ra = 360, jump @1021
      :                          @678 [@dyn 180]
 12961: 64 17                    a0 = sp
 12963: 7b 17 50                 u64 [sp + 0x50] = a0
 12966: 33 07 1a                 a0 = 0x1a
 12969: 7b 17 58                 u64 [sp + 0x58] = a0
 12972: 33 07 a0 11 01           a0 = 0x111a0
 12977: 7b 17 20                 u64 [sp + 0x20] = a0
 12980: 49 11 28 02              u64 [sp + 40] = 0x2
 12984: 49 11 40                 u64 [sp + 64] = 0
 12987: 95 17 50                 a0 = sp + 0x50
 12990: 7b 17 30                 u64 [sp + 0x30] = a0
 12993: 49 11 38 01              u64 [sp + 56] = 0x1
 12997: 95 17 08                 a0 = sp + 0x8
 13000: 95 18 20                 a1 = sp + 0x20
 13003: 50 20 6a 01 8e 02        ra = 362, jump @743
      :                          @679 [@dyn 181]
 13009: 82 15 10                 s0 = u64 [sp + 0x10]
 13012: 82 1b 18                 a4 = u64 [sp + 0x18]
 13015: 82 16 08                 s1 = u64 [sp + 0x8]
 13018: 33 07 02                 a0 = 0x2
 13021: 33 08                    a1 = 0
 13023: 33 09                    a2 = 0
 13025: 64 5a                    a3 = s0
 13027: 33 00 6c 01              ra = 0x16c
 13031: 0a 64                    ecalli 100 // 'log'
 13033: 01                       fallthrough
      :                          @680 [@dyn 182]
 13034: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 13038: 53 28 00 f0 25           jump @686 if a1 <u 4294963200
      :                          @681
 13043: 33 07 40 00 03           a0 = 0x30040
 13048: 95 77 00 10              a0 = a0 + 0x1000
 13052: 01                       fallthrough
      :                          @682
 13053: 82 78                    a1 = u64 [a0]
 13055: c9 87 09                 a2 = a0 - a1
 13058: ab 59 11                 jump @686 if a2 != s0
      :                          @683
 13061: c9 68 09                 a2 = a1 - s1
 13064: 01                       fallthrough
      :                          @684
 13065: 82 7a                    a3 = u64 [a0]
 13067: ab 8a f2                 jump @682 if a3 != a1
      :                          @685
 13070: 7b 79                    u64 [a0] = a2
 13072: 33 0b                    a4 = 0
 13074: 01                       fallthrough
      :                          @686
 13075: 33 07 00 00 01           a0 = 0x10000
 13080: 33 08                    a1 = 0
 13082: 82 10 70                 ra = u64 [sp + 0x70]
 13085: 82 15 68                 s0 = u64 [sp + 0x68]
 13088: 82 16 60                 s1 = u64 [sp + 0x60]
 13091: 95 11 78                 sp = sp + 0x78
 13094: 32 00                    ret
      :                          @687
 13096: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13099: 7b 10 40                 u64 [sp + 0x40] = ra
 13102: 7b 15 38                 u64 [sp + 0x38] = s0
 13105: 7b 16 30                 u64 [sp + 0x30] = s1
 13108: c8 89 09                 a2 = a2 + a1
 13111: ac 89 53                 jump @695 if a2 <u a1
      :                          @688
 13114: 64 75                    s0 = a0
 13116: 82 77                    a0 = u64 [a0]
 13118: 97 78 01                 a1 = a0 << 0x1
 13121: 33 0a 08                 a3 = 0x8
 13124: e4 a9 09                 a2 = maxu(a2, a3)
 13127: e4 98 06                 s1 = maxu(a1, a2)
 13130: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 13133: 98 88 3f                 a1 = a1 >> 0x3f
 13136: 51 07 12                 jump @690 if a0 == 0
      :                          @689
 13139: 82 59 08                 a2 = u64 [s0 + 0x8]
 13142: 7b 19 18                 u64 [sp + 0x18] = a2
 13145: 49 11 20 01              u64 [sp + 32] = 0x1
 13149: 7b 17 28                 u64 [sp + 0x28] = a0
 13152: 28 06                    jump @691
      :                          @690
 13154: 49 11 20                 u64 [sp + 32] = 0
 13157: 01                       fallthrough
      :                          @691
 13158: 64 17                    a0 = sp
 13160: 95 1a 18                 a3 = sp + 0x18
 13163: 64 69                    a2 = s1
 13165: 50 20 6e 01 33           ra = 366, jump @699
      :                          @692 [@dyn 183]
 13170: 82 18                    a1 = u64 [sp]
 13172: 82 17 08                 a0 = u64 [sp + 0x8]
 13175: 51 08 14                 jump @696 if a1 == 0
      :                          @693
 13178: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 13188: aa 87 0d                 jump @697 if a0 == a1
      :                          @694
 13191: 52 07 18                 jump @698 if a0 != 0
      :                          @695
 13194: 00                       trap
      :                          @696
 13195: 7b 57 08                 u64 [s0 + 0x8] = a0
 13198: 7b 56                    u64 [s0] = s1
 13200: 01                       fallthrough
      :                          @697
 13201: 82 10 40                 ra = u64 [sp + 0x40]
 13204: 82 15 38                 s0 = u64 [sp + 0x38]
 13207: 82 16 30                 s1 = u64 [sp + 0x30]
 13210: 95 11 48                 sp = sp + 0x48
 13213: 32 00                    ret
      :                          @698
 13215: 00                       trap
      :                          @699
 13216: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 13219: 7b 10 30                 u64 [sp + 0x30] = ra
 13222: 7b 15 28                 u64 [sp + 0x28] = s0
 13225: 7b 16 20                 u64 [sp + 0x20] = s1
 13228: 64 96                    s1 = a2
 13230: 64 73                    t1 = a0
 13232: 51 08 6f                 jump @709 if a1 == 0
      :                          @700
 13235: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13238: 51 07 72                 jump @710 if a0 == 0
      :                          @701
 13241: 82 a9 10                 a2 = u64 [a3 + 0x10]
 13244: 51 09 9f 00              jump @717 if a2 == 0
      :                          @702
 13248: 82 a8                    a1 = u64 [a3]
 13250: 33 02 00 10              t0 = 0x1000
 13254: 33 04 40 00 03           t2 = 0x30040
 13259: c8 24 07                 a0 = t2 + t0
 13262: 01                       fallthrough
      :                          @703
 13263: 82 7a                    a3 = u64 [a0]
 13265: c8 6a 05                 s0 = a3 + s1
 13268: ac a5 c3 00              jump @723 if s0 <u a3
      :                          @704
 13272: 95 5b 01                 a4 = s0 + 0x1
 13275: 88 bc 01                 a5 = a4 <u 0x1
 13278: d8 b2 0b                 a4 = t0 <u a4
 13281: d4 cb 0b                 a4 = a4 | a5
 13284: 52 0b b3 00              jump @723 if a4 != 0
      :                          @705
 13288: 82 7b                    a4 = u64 [a0]
 13290: ab ab e5                 jump @703 if a4 != a3
      :                          @706
 13293: 7b 75                    u64 [a0] = s0
 13295: 33 0c                    a5 = 0
 13297: 7b 13 18                 u64 [sp + 0x18] = t1
 13300: c9 54 07                 a0 = t2 - s0
 13303: 95 77 00 10              a0 = a0 + 0x1000
 13307: 7b 17 10                 u64 [sp + 0x10] = a0
 13310: 7b 18 08                 u64 [sp + 0x8] = a1
 13313: 64 95                    s0 = a2
 13315: 7b 14                    u64 [sp] = t2
 13317: 50 20 70 01 c9 03        ra = 368, jump @793
      :                          @707 [@dyn 184]
 13323: 54 25 00 10 94 00        jump @724 if s0 <=u 4096
      :                          @708
 13329: 82 13 18                 t1 = u64 [sp + 0x18]
 13332: 82 18 10                 a1 = u64 [sp + 0x10]
 13335: 33 07                    a0 = 0
 13337: 7b 38 08                 u64 [t1 + 0x8] = a1
 13340: 28 b1 00                 jump @730
      :                          @709
 13343: 49 13 08                 u64 [t1 + 8] = 0
 13346: 33 07 01                 a0 = 0x1
 13349: 28 a8 00                 jump @730
      :                          @710
 13352: 33 07 00 10              a0 = 0x1000
 13356: 33 02 40 00 03           t0 = 0x30040
 13361: c8 72 09                 a2 = t0 + a0
 13364: 01                       fallthrough
      :                          @711
 13365: 82 9b                    a4 = u64 [a2]
 13367: c8 6b 0a                 a3 = a4 + s1
 13370: ac ba 5d                 jump @723 if a3 <u a4
      :                          @712
 13373: 95 ac 01                 a5 = a3 + 0x1
 13376: 88 c8 01                 a1 = a5 <u 0x1
 13379: d8 c7 0c                 a5 = a0 <u a5
 13382: d4 c8 08                 a1 = a1 | a5
 13385: 52 08 4e                 jump @723 if a1 != 0
      :                          @713
 13388: 82 98                    a1 = u64 [a2]
 13390: ab b8 e7                 jump @711 if a1 != a4
      :                          @714
 13393: 7b 9a                    u64 [a2] = a3
 13395: 33 0c                    a5 = 0
 13397: 01                       fallthrough
      :                          @715
 13398: ab b8 df                 jump @711 if a1 != a4
      :                          @716
 13401: 28 30                    jump @722
      :                          @717
 13403: 33 07 00 10              a0 = 0x1000
 13407: 33 02 40 00 03           t0 = 0x30040
 13412: c8 72 09                 a2 = t0 + a0
 13415: 01                       fallthrough
      :                          @718
 13416: 82 9b                    a4 = u64 [a2]
 13418: c8 6b 0a                 a3 = a4 + s1
 13421: ac ba 2a                 jump @723 if a3 <u a4
      :                          @719
 13424: 95 ac 01                 a5 = a3 + 0x1
 13427: 88 c8 01                 a1 = a5 <u 0x1
 13430: d8 c7 0c                 a5 = a0 <u a5
 13433: d4 c8 08                 a1 = a1 | a5
 13436: 52 08 1b                 jump @723 if a1 != 0
      :                          @720
 13439: 82 98                    a1 = u64 [a2]
 13441: ab b8 e7                 jump @718 if a1 != a4
      :                          @721
 13444: 7b 9a                    u64 [a2] = a3
 13446: 33 0c                    a5 = 0
 13448: 01                       fallthrough
      :                          @722
 13449: c9 a2 07                 a0 = t0 - a3
 13452: 95 78 00 10              a1 = a0 + 0x1000
 13456: 33 07                    a0 = 0
 13458: 7b 38 08                 u64 [t1 + 0x8] = a1
 13461: 28 38                    jump @730
      :                          @723
 13463: 33 07 01                 a0 = 0x1
 13466: 7b 37 08                 u64 [t1 + 0x8] = a0
 13469: 28 30                    jump @730
      :                          @724
 13471: 64 5c                    a5 = s0
 13473: 82 18                    a1 = u64 [sp]
 13475: 95 87 00 10              a0 = a1 + 0x1000
 13479: 82 13 18                 t1 = u64 [sp + 0x18]
 13482: 82 15 08                 s0 = u64 [sp + 0x8]
 13485: 01                       fallthrough
      :                          @725
 13486: 82 78                    a1 = u64 [a0]
 13488: c9 87 09                 a2 = a0 - a1
 13491: ab 59 11                 jump @729 if a2 != s0
      :                          @726
 13494: c9 c8 09                 a2 = a1 - a5
 13497: 01                       fallthrough
      :                          @727
 13498: 82 7a                    a3 = u64 [a0]
 13500: ab 8a f2                 jump @725 if a3 != a1
      :                          @728
 13503: 7b 79                    u64 [a0] = a2
 13505: 33 0b                    a4 = 0
 13507: 01                       fallthrough
      :                          @729
 13508: 82 18 10                 a1 = u64 [sp + 0x10]
 13511: 33 07                    a0 = 0
 13513: 7b 38 08                 u64 [t1 + 0x8] = a1
 13516: 01                       fallthrough
      :                          @730
 13517: 7b 36 10                 u64 [t1 + 0x10] = s1
 13520: 7b 37                    u64 [t1] = a0
 13522: 82 10 30                 ra = u64 [sp + 0x30]
 13525: 82 15 28                 s0 = u64 [sp + 0x28]
 13528: 82 16 20                 s1 = u64 [sp + 0x20]
 13531: 95 11 38                 sp = sp + 0x38
 13534: 32 00                    ret
      :                          @731
 13536: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13539: 7b 10 40                 u64 [sp + 0x40] = ra
 13542: 7b 15 38                 u64 [sp + 0x38] = s0
 13545: 7b 16 30                 u64 [sp + 0x30] = s1
 13548: 95 88 01                 a1 = a1 + 0x1
 13551: 51 08 54                 jump @739 if a1 == 0
      :                          @732
 13554: 64 75                    s0 = a0
 13556: 82 77                    a0 = u64 [a0]
 13558: 97 79 01                 a2 = a0 << 0x1
 13561: 33 0a 08                 a3 = 0x8
 13564: e4 a8 08                 a1 = maxu(a1, a3)
 13567: e4 89 06                 s1 = maxu(a2, a1)
 13570: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 13573: 98 88 3f                 a1 = a1 >> 0x3f
 13576: 51 07 12                 jump @734 if a0 == 0
      :                          @733
 13579: 82 59 08                 a2 = u64 [s0 + 0x8]
 13582: 7b 19 18                 u64 [sp + 0x18] = a2
 13585: 49 11 20 01              u64 [sp + 32] = 0x1
 13589: 7b 17 28                 u64 [sp + 0x28] = a0
 13592: 28 06                    jump @735
      :                          @734
 13594: 49 11 20                 u64 [sp + 32] = 0
 13597: 01                       fallthrough
      :                          @735
 13598: 64 17                    a0 = sp
 13600: 95 1a 18                 a3 = sp + 0x18
 13603: 64 69                    a2 = s1
 13605: 50 20 72 01 7b fe        ra = 370, jump @699
      :                          @736 [@dyn 185]
 13611: 82 18                    a1 = u64 [sp]
 13613: 82 17 08                 a0 = u64 [sp + 0x8]
 13616: 51 08 14                 jump @740 if a1 == 0
      :                          @737
 13619: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 13629: aa 87 0d                 jump @741 if a0 == a1
      :                          @738
 13632: 52 07 18                 jump @742 if a0 != 0
      :                          @739
 13635: 00                       trap
      :                          @740
 13636: 7b 57 08                 u64 [s0 + 0x8] = a0
 13639: 7b 56                    u64 [s0] = s1
 13641: 01                       fallthrough
      :                          @741
 13642: 82 10 40                 ra = u64 [sp + 0x40]
 13645: 82 15 38                 s0 = u64 [sp + 0x38]
 13648: 82 16 30                 s1 = u64 [sp + 0x30]
 13651: 95 11 48                 sp = sp + 0x48
 13654: 32 00                    ret
      :                          @742
 13656: 00                       trap
      :                          @743
 13657: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 13660: 7b 10 30                 u64 [sp + 0x30] = ra
 13663: 7b 15 28                 u64 [sp + 0x28] = s0
 13666: 7b 16 20                 u64 [sp + 0x20] = s1
 13669: 64 89                    a2 = a1
 13671: 82 8a 08                 a3 = u64 [a1 + 0x8]
 13674: 64 75                    s0 = a0
 13676: 51 0a 35                 jump @748 if a3 == 0
      :                          @744
 13679: 82 98                    a1 = u64 [a2]
 13681: 33 07                    a0 = 0
 13683: 95 8b 08                 a4 = a1 + 0x8
 13686: 01                       fallthrough
      :                          @745
 13687: 82 bc                    a5 = u64 [a4]
 13689: c8 c7 07                 a0 = a0 + a5
 13692: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13695: 95 bb 10                 a4 = a4 + 0x10
 13698: 52 0a f5                 jump @745 if a3 != 0
      :                          @746
 13701: 82 9a 18                 a3 = u64 [a2 + 0x18]
 13704: 51 0a 24                 jump @750 if a3 == 0
      :                          @747
 13707: 82 88 08                 a1 = u64 [a1 + 0x8]
 13710: 8e 88                    a1 = a1 >u 0
 13712: 88 7a 10                 a3 = a0 <u 0x10
 13715: 85 aa 01                 a3 = a3 ^ 0x1
 13718: d4 a8 08                 a1 = a1 | a3
 13721: 89 7a                    a3 = a0 <s 0
 13723: e0 a8 08                 a1 = a1 & ~a3
 13726: 52 08 0a                 jump @749 if a1 != 0
      :                          @748
 13729: 33 07                    a0 = 0
 13731: 33 08 01                 a1 = 0x1
 13734: 28 48                    jump @758
      :                          @749
 13736: 97 77 01                 a0 = a0 << 0x1
 13739: 01                       fallthrough
      :                          @750
 13740: 51 07 3e                 jump @757 if a0 == 0
      :                          @751
 13743: 57 07 77                 jump @763 if a0 <s 0
      :                          @752
 13746: 64 53                    t1 = s0
 13748: 33 08 00 10              a1 = 0x1000
 13752: 33 02 40 00 03           t0 = 0x30040
 13757: c8 82 0b                 a4 = t0 + a1
 13760: 01                       fallthrough
      :                          @753
 13761: 82 bc                    a5 = u64 [a4]
 13763: c8 7c 0a                 a3 = a5 + a0
 13766: ac ca 5e                 jump @761 if a3 <u a5
      :                          @754
 13769: 95 a5 01                 s0 = a3 + 0x1
 13772: 88 56 01                 s1 = s0 <u 0x1
 13775: d8 58 05                 s0 = a1 <u s0
 13778: d4 65 05                 s0 = s0 | s1
 13781: 52 05 4f                 jump @761 if s0 != 0
      :                          @755
 13784: 82 b6                    s1 = u64 [a4]
 13786: ab c6 e7                 jump @753 if s1 != a5
      :                          @756
 13789: 7b ba                    u64 [a4] = a3
 13791: c9 a2 08                 a1 = t0 - a3
 13794: 95 88 00 10              a1 = a1 + 0x1000
 13798: 64 35                    s0 = t1
 13800: 28 06                    jump @758
      :                          @757
 13802: 33 08 01                 a1 = 0x1
 13805: 01                       fallthrough
      :                          @758
 13806: 7b 17                    u64 [sp] = a0
 13808: 7b 18 08                 u64 [sp + 0x8] = a1
 13811: 49 11 10                 u64 [sp + 16] = 0
 13814: 33 08 c0 11 01           a1 = 0x111c0
 13819: 64 17                    a0 = sp
 13821: 50 20 74 01 78 06        ra = 372, jump @888
      :                          @759 [@dyn 186]
 13827: 52 07 22                 jump @762 if a0 != 0
      :                          @760
 13830: 82 17 10                 a0 = u64 [sp + 0x10]
 13833: 82 18 08                 a1 = u64 [sp + 0x8]
 13836: 82 19                    a2 = u64 [sp]
 13838: 7b 57 10                 u64 [s0 + 0x10] = a0
 13841: 7b 58 08                 u64 [s0 + 0x8] = a1
 13844: 7b 59                    u64 [s0] = a2
 13846: 82 10 30                 ra = u64 [sp + 0x30]
 13849: 82 15 28                 s0 = u64 [sp + 0x28]
 13852: 82 16 20                 s1 = u64 [sp + 0x20]
 13855: 95 11 38                 sp = sp + 0x38
 13858: 32 00                    ret
      :                          @761
 13860: 00                       trap
      :                          @762
 13861: 00                       trap
      :                          @763
 13862: 00                       trap
      :                          @764 [@dyn 187]
 13863: 82 72                    t0 = u64 [a0]
 13865: 33 09 00 f0              a2 = 0xfffffffffffff000
 13869: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 13873: ac 9a 27                 jump @770 if a3 <u a2
      :                          @765
 13876: 82 77 08                 a0 = u64 [a0 + 0x8]
 13879: 33 09 40 00 03           a2 = 0x30040
 13884: 95 99 00 10              a2 = a2 + 0x1000
 13888: 01                       fallthrough
      :                          @766
 13889: 82 9a                    a3 = u64 [a2]
 13891: c9 a9 0b                 a4 = a2 - a3
 13894: ab 7b 12                 jump @770 if a4 != a0
      :                          @767
 13897: c9 2a 0b                 a4 = a3 - t0
 13900: 01                       fallthrough
      :                          @768
 13901: 82 9c                    a5 = u64 [a2]
 13903: ab ac f2                 jump @766 if a5 != a3
      :                          @769
 13906: 7b 9b                    u64 [a2] = a4
 13908: 33 08                    a1 = 0
 13910: 32 00                    ret
      :                          @770
 13912: 32 00                    ret
      :                          @771 [@dyn 188]
 13914: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13917: 7b 10 18                 u64 [sp + 0x18] = ra
 13920: 7b 15 10                 u64 [sp + 0x10] = s0
 13923: 7b 16 08                 u64 [sp + 0x8] = s1
 13926: 64 75                    s0 = a0
 13928: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13931: 82 77                    a0 = u64 [a0]
 13933: c9 a7 07                 a0 = a0 - a3
 13936: 64 96                    s1 = a2
 13938: ac 97 2b                 jump @774 if a0 <u a2
      :                          @772
 13941: 7b 1a                    u64 [sp] = a3
 13943: 82 57 08                 a0 = u64 [s0 + 0x8]
 13946: c8 a7 07                 a0 = a0 + a3
 13949: 64 69                    a2 = s1
 13951: 50 20 7a 01 4f 01        ra = 378, jump @793
      :                          @773 [@dyn 189]
 13957: 82 17                    a0 = u64 [sp]
 13959: c8 76 06                 s1 = s1 + a0
 13962: 7b 56 10                 u64 [s0 + 0x10] = s1
 13965: 33 07                    a0 = 0
 13967: 82 10 18                 ra = u64 [sp + 0x18]
 13970: 82 15 10                 s0 = u64 [sp + 0x10]
 13973: 82 16 08                 s1 = u64 [sp + 0x8]
 13976: 95 11 20                 sp = sp + 0x20
 13979: 32 00                    ret
      :                          @774
 13981: 64 57                    a0 = s0
 13983: 7b 18                    u64 [sp] = a1
 13985: 64 a8                    a1 = a3
 13987: 64 69                    a2 = s1
 13989: 50 20 7c 01 83 fc        ra = 380, jump @687
      :                          @775 [@dyn 190]
 13995: 82 18                    a1 = u64 [sp]
 13997: 82 5a 10                 a3 = u64 [s0 + 0x10]
 14000: 28 c5                    jump @772
      :                          @776 [@dyn 191]
 14002: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 14005: 7b 10 20                 u64 [sp + 0x20] = ra
 14008: 7b 15 18                 u64 [sp + 0x18] = s0
 14011: 7b 16 10                 u64 [sp + 0x10] = s1
 14014: 64 86                    s1 = a1
 14016: 83 88                    i32 a1 = a1 + 0
 14018: 33 09 80 00              a2 = 0x80
 14022: 64 7a                    a3 = a0
 14024: ae 98 2c                 jump @781 if a1 >=u a2
      :                          @777
 14027: 82 a8 10                 a1 = u64 [a3 + 0x10]
 14030: 82 a7                    a0 = u64 [a3]
 14032: ab 78 13                 jump @780 if a1 != a0
      :                          @778
 14035: 64 a7                    a0 = a3
 14037: 64 a5                    s0 = a3
 14039: 50 20 80 01 09 fe        ra = 384, jump @731
      :                          @779 [@dyn 192]
 14045: 64 5a                    a3 = s0
 14047: 82 58 10                 a1 = u64 [s0 + 0x10]
 14050: 01                       fallthrough
      :                          @780
 14051: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14054: c8 87 07                 a0 = a0 + a1
 14057: 78 76                    u8 [a0] = s1
 14059: 95 88 01                 a1 = a1 + 0x1
 14062: 7b a8 10                 u64 [a3 + 0x10] = a1
 14065: 28 ac 00                 jump @789
      :                          @781
 14068: 8b 67 0b                 i32 a0 = s1 >> 0xb
 14071: 48 11 0c                 u32 [sp + 12] = 0
 14074: 52 07 1c                 jump @783 if a0 != 0
      :                          @782
 14077: 98 67 06                 a0 = s1 >> 0x6
 14080: 86 77 c0 00              a0 = a0 | 0xc0
 14084: 78 17 0c                 u8 [sp + 0xc] = a0
 14087: 84 67 3f                 a0 = s1 & 0x3f
 14090: 86 77 80 00              a0 = a0 | 0x80
 14094: 78 17 0d                 u8 [sp + 0xd] = a0
 14097: 33 06 02                 s1 = 0x2
 14100: 28 63                    jump @786
      :                          @783
 14102: 8b 67 10                 i32 a0 = s1 >> 0x10
 14105: 52 07 29                 jump @785 if a0 != 0
      :                          @784
 14108: 98 67 0c                 a0 = s1 >> 0xc
 14111: 86 77 e0 00              a0 = a0 | 0xe0
 14115: 78 17 0c                 u8 [sp + 0xc] = a0
 14118: 97 67 34                 a0 = s1 << 0x34
 14121: 98 77 3a                 a0 = a0 >> 0x3a
 14124: 95 77 80 00              a0 = a0 + 0x80
 14128: 78 17 0d                 u8 [sp + 0xd] = a0
 14131: 84 67 3f                 a0 = s1 & 0x3f
 14134: 86 77 80 00              a0 = a0 | 0x80
 14138: 78 17 0e                 u8 [sp + 0xe] = a0
 14141: 33 06 03                 s1 = 0x3
 14144: 28 37                    jump @786
      :                          @785
 14146: 97 67 2b                 a0 = s1 << 0x2b
 14149: 98 77 3d                 a0 = a0 >> 0x3d
 14152: 95 77 f0 00              a0 = a0 + 0xf0
 14156: 78 17 0c                 u8 [sp + 0xc] = a0
 14159: 97 67 2e                 a0 = s1 << 0x2e
 14162: 98 77 3a                 a0 = a0 >> 0x3a
 14165: 95 77 80 00              a0 = a0 + 0x80
 14169: 78 17 0d                 u8 [sp + 0xd] = a0
 14172: 97 67 34                 a0 = s1 << 0x34
 14175: 98 77 3a                 a0 = a0 >> 0x3a
 14178: 95 77 80 00              a0 = a0 + 0x80
 14182: 78 17 0e                 u8 [sp + 0xe] = a0
 14185: 84 67 3f                 a0 = s1 & 0x3f
 14188: 86 77 80 00              a0 = a0 | 0x80
 14192: 78 17 0f                 u8 [sp + 0xf] = a0
 14195: 33 06 04                 s1 = 0x4
 14198: 01                       fallthrough
      :                          @786
 14199: 82 a5 10                 s0 = u64 [a3 + 0x10]
 14202: 82 a7                    a0 = u64 [a3]
 14204: c9 57 07                 a0 = a0 - s0
 14207: ac 67 2e                 jump @790 if a0 <u s1
      :                          @787
 14210: 7b 1a                    u64 [sp] = a3
 14212: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14215: c8 57 07                 a0 = a0 + s0
 14218: 95 18 0c                 a1 = sp + 0xc
 14221: 64 69                    a2 = s1
 14223: 50 20 82 01 3f           ra = 386, jump @793
      :                          @788 [@dyn 193]
 14228: c8 56 06                 s1 = s1 + s0
 14231: 82 17                    a0 = u64 [sp]
 14233: 7b 76 10                 u64 [a0 + 0x10] = s1
 14236: 01                       fallthrough
      :                          @789
 14237: 33 07                    a0 = 0
 14239: 82 10 20                 ra = u64 [sp + 0x20]
 14242: 82 15 18                 s0 = u64 [sp + 0x18]
 14245: 82 16 10                 s1 = u64 [sp + 0x10]
 14248: 95 11 28                 sp = sp + 0x28
 14251: 32 00                    ret
      :                          @790
 14253: 64 a7                    a0 = a3
 14255: 64 58                    a1 = s0
 14257: 64 69                    a2 = s1
 14259: 64 a5                    s0 = a3
 14261: 50 20 84 01 73 fb        ra = 388, jump @687
      :                          @791 [@dyn 194]
 14267: 64 5a                    a3 = s0
 14269: 82 55 10                 s0 = u64 [s0 + 0x10]
 14272: 28 c2                    jump @787
      :                          @792 [@dyn 195]
 14274: 64 8a                    a3 = a1
 14276: 33 08 c0 11 01           a1 = 0x111c0
 14281: 64 a9                    a2 = a3
 14283: 28 aa 04                 jump @888
      :                          @793
 14286: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 14289: 7b 10 18                 u64 [sp + 0x18] = ra
 14292: 7b 15 10                 u64 [sp + 0x10] = s0
 14295: 7b 16 08                 u64 [sp + 0x8] = s1
 14298: 53 19 10 64              jump @802 if a2 <u 16
      :                          @794
 14302: 8d 7a                    i32 a3 = -a0
 14304: 84 a2 07                 t0 = a3 & 0x7
 14307: c8 27 0b                 a4 = a0 + t0
 14310: 51 02 15                 jump @797 if t0 == 0
      :                          @795
 14313: 64 8c                    a5 = a1
 14315: 64 75                    s0 = a0
 14317: 01                       fallthrough
      :                          @796
 14318: 7c ca                    a3 = u8 [a5]
 14320: 78 5a                    u8 [s0] = a3
 14322: 95 55 01                 s0 = s0 + 0x1
 14325: 95 cc 01                 a5 = a5 + 0x1
 14328: ac b5 f6                 jump @796 if s0 <u a4
      :                          @797
 14331: c8 28 03                 t1 = a1 + t0
 14334: c9 29 02                 t0 = a2 - t0
 14337: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 14340: 84 38 07                 a1 = t1 & 0x7
 14343: c8 4b 0a                 a3 = a4 + t2
 14346: 51 08 3b                 jump @804 if a1 == 0
      :                          @798
 14349: 58 04 4b                 jump @807 if t2 <=s 0
      :                          @799
 14352: 97 38 03                 a1 = t1 << 0x3
 14355: 84 80 38                 ra = a1 & 0x38
 14358: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14361: 82 c5                    s0 = u64 [a5]
 14363: 8d 88                    i32 a1 = -a1
 14365: 84 88 38                 a1 = a1 & 0x38
 14368: 95 cc 08                 a5 = a5 + 0x8
 14371: 01                       fallthrough
      :                          @800
 14372: 82 c6                    s1 = u64 [a5]
 14374: d0 05 05                 s0 = s0 >> ra
 14377: cf 86 09                 a2 = s1 << a1
 14380: d4 59 09                 a2 = a2 | s0
 14383: 7b b9                    u64 [a4] = a2
 14385: 95 bb 08                 a4 = a4 + 0x8
 14388: 95 cc 08                 a5 = a5 + 0x8
 14391: 64 65                    s0 = s1
 14393: ac ab eb                 jump @800 if a4 <u a3
      :                          @801
 14396: 28 1c                    jump @807
      :                          @802
 14398: 64 7a                    a3 = a0
 14400: 52 09 21                 jump @808 if a2 != 0
      :                          @803
 14403: 28 2f                    jump @810
      :                          @804
 14405: 58 04 13                 jump @807 if t2 <=s 0
      :                          @805
 14408: 64 38                    a1 = t1
 14410: 01                       fallthrough
      :                          @806
 14411: 82 89                    a2 = u64 [a1]
 14413: 7b b9                    u64 [a4] = a2
 14415: 95 bb 08                 a4 = a4 + 0x8
 14418: 95 88 08                 a1 = a1 + 0x8
 14421: ac ab f6                 jump @806 if a4 <u a3
      :                          @807
 14424: c8 43 08                 a1 = t1 + t2
 14427: 84 29 07                 a2 = t0 & 0x7
 14430: 51 09 14                 jump @810 if a2 == 0
      :                          @808
 14433: c8 a9 09                 a2 = a2 + a3
 14436: 01                       fallthrough
      :                          @809
 14437: 7c 8b                    a4 = u8 [a1]
 14439: 78 ab                    u8 [a3] = a4
 14441: 95 aa 01                 a3 = a3 + 0x1
 14444: 95 88 01                 a1 = a1 + 0x1
 14447: ac 9a f6                 jump @809 if a3 <u a2
      :                          @810
 14450: 82 10 18                 ra = u64 [sp + 0x18]
 14453: 82 15 10                 s0 = u64 [sp + 0x10]
 14456: 82 16 08                 s1 = u64 [sp + 0x8]
 14459: 95 11 20                 sp = sp + 0x20
 14462: 32 00                    ret
      :                          @811
 14464: 53 19 10 48              jump @820 if a2 <u 16
      :                          @812
 14468: 8d 7a                    i32 a3 = -a0
 14470: 84 aa 07                 a3 = a3 & 0x7
 14473: c8 a7 0b                 a4 = a0 + a3
 14476: 51 0a 0e                 jump @815 if a3 == 0
      :                          @813
 14479: 64 7c                    a5 = a0
 14481: 01                       fallthrough
      :                          @814
 14482: 78 c8                    u8 [a5] = a1
 14484: 95 cc 01                 a5 = a5 + 0x1
 14487: ac bc fb                 jump @814 if a5 <u a4
      :                          @815
 14490: c9 a9 03                 t1 = a2 - a3
 14493: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14496: c8 cb 0a                 a3 = a4 + a5
 14499: 58 0c 1d                 jump @818 if a5 <=s 0
      :                          @816
 14502: 84 82 ff 00              t0 = a1 & 0xff
 14506: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 14516: ca 92 0c                 a5 = t0 * a2
 14519: 01                       fallthrough
      :                          @817
 14520: 7b bc                    u64 [a4] = a5
 14522: 95 bb 08                 a4 = a4 + 0x8
 14525: ac ab fb                 jump @817 if a4 <u a3
      :                          @818
 14528: 84 39 07                 a2 = t1 & 0x7
 14531: 52 09 0a                 jump @821 if a2 != 0
      :                          @819
 14534: 28 13                    jump @823
      :                          @820
 14536: 64 7a                    a3 = a0
 14538: 51 09 0f                 jump @823 if a2 == 0
      :                          @821
 14541: c8 a9 09                 a2 = a2 + a3
 14544: 01                       fallthrough
      :                          @822
 14545: 78 a8                    u8 [a3] = a1
 14547: 95 aa 01                 a3 = a3 + 0x1
 14550: ac 9a fb                 jump @822 if a3 <u a2
      :                          @823
 14553: 32 00                    ret
      :                          @824 [@dyn 196]
 14555: 82 77                    a0 = u64 [a0]
 14557: 01                       fallthrough
      :                          @825
 14558: 28                       jump @825
      :                          @826
 14559: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 14562: 7b 10 50                 u64 [sp + 0x50] = ra
 14565: 7b 15 48                 u64 [sp + 0x48] = s0
 14568: 7b 16 40                 u64 [sp + 0x40] = s1
 14571: 7b 18                    u64 [sp] = a1
 14573: 98 79 04                 a2 = a0 >> 0x4
 14576: 33 08 27                 a1 = 0x27
 14579: 33 0a 79 06 01           a3 = 0x10679
 14584: 53 29 71 02 7b           jump @829 if a2 <u 625
      :                          @827
 14589: 33 08 27                 a1 = 0x27
 14592: 95 1b 3e                 a4 = sp + 0x3e
 14595: 3a 09 08 00 03           a2 = u64 [0x30008]
 14600: 7b 19 10                 u64 [sp + 0x10] = a2
 14603: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 14609: 33 03 7b 14              t1 = 0x147b
 14613: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 14619: 01                       fallthrough
      :                          @828
 14620: 64 72                    t0 = a0
 14622: 82 17 10                 a0 = u64 [sp + 0x10]
 14625: d6 72 07                 a0 = t0 mulhu a0
 14628: 98 77 0b                 a0 = a0 >> 0xb
 14631: 82 19 08                 a2 = u64 [sp + 0x8]
 14634: c0 97 09                 i32 a2 = a0 * a2
 14637: c8 29 06                 s1 = a2 + t0
 14640: 97 69 30                 a2 = s1 << 0x30
 14643: 98 99 32                 a2 = a2 >> 0x32
 14646: ca 39 09                 a2 = a2 * t1
 14649: 98 94 11                 t2 = a2 >> 0x11
 14652: 98 99 10                 a2 = a2 >> 0x10
 14655: 84 99 fe 07              a2 = a2 & 0x7fe
 14659: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
 14662: c8 6c 0c                 a5 = a5 + s1
 14665: 97 cc 31                 a5 = a5 << 0x31
 14668: 98 cc 30                 a5 = a5 >> 0x30
 14671: c8 a9 09                 a2 = a2 + a3
 14674: 7c 96                    s1 = u8 [a2]
 14676: 7c 99 01                 a2 = u8 [a2 + 0x1]
 14679: c8 ac 0c                 a5 = a5 + a3
 14682: 7c c5 01                 s0 = u8 [a5 + 0x1]
 14685: 7c cc                    a5 = u8 [a5]
 14687: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
 14690: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
 14693: 78 b5 01                 u8 [a4 + 0x1] = s0
 14696: 78 bc                    u8 [a4] = a5
 14698: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14701: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 14704: ac 20 ac                 jump @828 if ra <u t0
      :                          @829
 14707: 54 17 63 36              jump @831 if a0 <=u 99
      :                          @830
 14711: 97 79 30                 a2 = a0 << 0x30
 14714: 98 99 32                 a2 = a2 >> 0x32
 14717: 96 99 7b 14              a2 = a2 * 0x147b
 14721: 98 99 11                 a2 = a2 >> 0x11
 14724: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
 14727: c8 b7 07                 a0 = a0 + a4
 14730: 97 77 31                 a0 = a0 << 0x31
 14733: 98 77 30                 a0 = a0 >> 0x30
 14736: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14739: c8 a7 07                 a0 = a0 + a3
 14742: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 14745: 7c 77                    a0 = u8 [a0]
 14747: 95 1c 19                 a5 = sp + 0x19
 14750: c8 8c 0c                 a5 = a5 + a1
 14753: 78 cb 01                 u8 [a5 + 0x1] = a4
 14756: 78 c7                    u8 [a5] = a0
 14758: 64 97                    a0 = a2
 14760: 01                       fallthrough
      :                          @831
 14761: 55 17 0a 14              jump @833 if a0 >=u 10
      :                          @832
 14765: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14768: 95 19 19                 a2 = sp + 0x19
 14771: c8 89 09                 a2 = a2 + a1
 14774: 83 77 30                 i32 a0 = a0 + 0x30
 14777: 78 97                    u8 [a2] = a0
 14779: 28 1c                    jump @834
      :                          @833
 14781: 97 77 01                 a0 = a0 << 0x1
 14784: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14787: c8 a7 07                 a0 = a0 + a3
 14790: 7c 79 01                 a2 = u8 [a0 + 0x1]
 14793: 7c 77                    a0 = u8 [a0]
 14795: 95 1a 19                 a3 = sp + 0x19
 14798: c8 8a 0a                 a3 = a3 + a1
 14801: 78 a9 01                 u8 [a3 + 0x1] = a2
 14804: 78 a7                    u8 [a3] = a0
 14806: 01                       fallthrough
      :                          @834
 14807: 95 1a 19                 a3 = sp + 0x19
 14810: c8 8a 0a                 a3 = a3 + a1
 14813: 9a 8b 27                 a4 = 0x27 - a1
 14816: 33 08 58 06 01           a1 = 0x10658
 14821: 82 17                    a0 = u64 [sp]
 14823: 33 09                    a2 = 0
 14825: 50 20 8a 01 13           ra = 394, jump @836
      :                          @835 [@dyn 197]
 14830: 82 10 50                 ra = u64 [sp + 0x50]
 14833: 82 15 48                 s0 = u64 [sp + 0x48]
 14836: 82 16 40                 s1 = u64 [sp + 0x40]
 14839: 95 11 58                 sp = sp + 0x58
 14842: 32 00                    ret
      :                          @836
 14844: 95 11 98                 sp = sp + 0xffffffffffffff98
 14847: 7b 10 60                 u64 [sp + 0x60] = ra
 14850: 7b 15 58                 u64 [sp + 0x58] = s0
 14853: 7b 16 50                 u64 [sp + 0x50] = s1
 14856: 80 73 34                 t1 = u32 [a0 + 0x34]
 14859: 7b 1a 20                 u64 [sp + 0x20] = a3
 14862: 64 9c                    a5 = a2
 14864: 84 36 01                 s1 = t1 & 0x1
 14867: 33 02 2b                 t0 = 0x2b
 14870: 33 09 00 00 11           a2 = 0x110000
 14875: 84 3a 04                 a3 = t1 & 0x4
 14878: 7b 1b 28                 u64 [sp + 0x28] = a4
 14881: c8 b6 04                 t2 = s1 + a4
 14884: 7b 1c 30                 u64 [sp + 0x30] = a5
 14887: 52 0a 10                 jump @839 if a3 != 0
      :                          @837
 14890: 49 11 38                 u64 [sp + 56] = 0
 14893: 82 78                    a1 = u64 [a0]
 14895: 94 69 2b                 a2 = 0x2b if s1 != 0
 14898: 52 08 35                 jump @843 if a1 != 0
      :                          @838
 14901: 28 56                    jump @848
      :                          @839
 14903: 7b 18 38                 u64 [sp + 0x38] = a1
 14906: 33 09                    a2 = 0
 14908: 51 0c 1b                 jump @842 if a5 == 0
      :                          @840
 14911: 82 1b 38                 a4 = u64 [sp + 0x38]
 14914: 01                       fallthrough
      :                          @841
 14915: 7d b5                    s0 = i8 [a4]
 14917: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 14920: 85 5a 01                 a3 = s0 ^ 0x1
 14923: c8 a9 09                 a2 = a2 + a3
 14926: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 14929: 95 bb 01                 a4 = a4 + 0x1
 14932: 52 0c ef                 jump @841 if a5 != 0
      :                          @842
 14935: c8 94 04                 t2 = t2 + a2
 14938: 33 09 00 00 11           a2 = 0x110000
 14943: 82 78                    a1 = u64 [a0]
 14945: db 62 09                 a2 = t0 if s1 != 0
 14948: 51 08 27                 jump @848 if a1 == 0
      :                          @843
 14951: 82 7a 08                 a3 = u64 [a0 + 0x8]
 14954: ae a4 21                 jump @848 if t2 >=u a3
      :                          @844
 14957: 84 38 08                 a1 = t1 & 0x8
 14960: 52 08 51                 jump @851 if a1 != 0
      :                          @845
 14963: 7c 76 38                 s1 = u8 [a0 + 0x38]
 14966: c9 4a 0a                 a3 = a3 - t2
 14969: 7b 19 18                 u64 [sp + 0x18] = a2
 14972: 5a 16 01 a0 00           jump @858 if s1 >s 1
      :                          @846
 14977: 52 06 ad 00              jump @860 if s1 != 0
      :                          @847
 14981: 7b 1a 10                 u64 [sp + 0x10] = a3
 14984: 28 ac 00                 jump @861
      :                          @848
 14987: 82 75 20                 s0 = u64 [a0 + 0x20]
 14990: 82 76 28                 s1 = u64 [a0 + 0x28]
 14993: 64 57                    a0 = s0
 14995: 64 68                    a1 = s1
 14997: 82 1a 38                 a3 = u64 [sp + 0x38]
 15000: 82 1b 30                 a4 = u64 [sp + 0x30]
 15003: 50 20 8c 01 75 01        ra = 396, jump @881
      :                          @849 [@dyn 198]
 15009: 33 08 01                 a1 = 0x1
 15012: 52 07 be 00              jump @866 if a0 != 0
      :                          @850
 15016: 82 6c 18                 a5 = u64 [s1 + 0x18]
 15019: 64 57                    a0 = s0
 15021: 82 18 20                 a1 = u64 [sp + 0x20]
 15024: 82 19 28                 a2 = u64 [sp + 0x28]
 15027: 82 10 60                 ra = u64 [sp + 0x60]
 15030: 82 15 58                 s0 = u64 [sp + 0x58]
 15033: 82 16 50                 s1 = u64 [sp + 0x50]
 15036: 95 11 68                 sp = sp + 0x68
 15039: 32 0c                    jump [a5]
      :                          @851
 15041: 7b 1a 40                 u64 [sp + 0x40] = a3
 15044: 64 45                    s0 = t2
 15046: 81 78 30                 a1 = i32 [a0 + 0x30]
 15049: 7b 18 10                 u64 [sp + 0x10] = a1
 15052: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 15055: 7b 1a 08                 u64 [sp + 0x8] = a3
 15058: 82 7a 20                 a3 = u64 [a0 + 0x20]
 15061: 82 78 28                 a1 = u64 [a0 + 0x28]
 15064: 48 17 30 30              u32 [a0 + 48] = 0x30
 15068: 7b 17                    u64 [sp] = a0
 15070: 46 17 38 01              u8 [a0 + 56] = 0x1
 15074: 7b 1a 48                 u64 [sp + 0x48] = a3
 15077: 64 a7                    a0 = a3
 15079: 64 86                    s1 = a1
 15081: 82 1a 38                 a3 = u64 [sp + 0x38]
 15084: 82 1b 30                 a4 = u64 [sp + 0x30]
 15087: 50 20 8e 01 21 01        ra = 398, jump @881
      :                          @852 [@dyn 199]
 15093: 52 07 69                 jump @865 if a0 != 0
      :                          @853
 15096: 82 17 40                 a0 = u64 [sp + 0x40]
 15099: c9 57 05                 s0 = a0 - s0
 15102: 95 55 01                 s0 = s0 + 0x1
 15105: 01                       fallthrough
      :                          @854
 15106: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 15109: 51 05 cb 00              jump @876 if s0 == 0
      :                          @855
 15113: 82 69 20                 a2 = u64 [s1 + 0x20]
 15116: 33 08 30                 a1 = 0x30
 15119: 82 17 48                 a0 = u64 [sp + 0x48]
 15122: b4 90 02 90 01           ra = 400, jump [a2]
      :                          @856 [@dyn 200]
 15127: 51 07 eb                 jump @854 if a0 == 0
      :                          @857
 15130: 28 44                    jump @865
      :                          @858
 15132: 52 16 02 12              jump @860 if s1 != 2
      :                          @859
 15136: 98 a6 01                 s1 = a3 >> 0x1
 15139: 95 a8 01                 a1 = a3 + 0x1
 15142: 98 88 01                 a1 = a1 >> 0x1
 15145: 7b 18 10                 u64 [sp + 0x10] = a1
 15148: 28 08                    jump @861
      :                          @860
 15150: 64 a6                    s1 = a3
 15152: 49 11 10                 u64 [sp + 16] = 0
 15155: 01                       fallthrough
      :                          @861
 15156: 82 78 20                 a1 = u64 [a0 + 0x20]
 15159: 7b 18 48                 u64 [sp + 0x48] = a1
 15162: 82 75 28                 s0 = u64 [a0 + 0x28]
 15165: 81 77 30                 a0 = i32 [a0 + 0x30]
 15168: 7b 17 40                 u64 [sp + 0x40] = a0
 15171: 95 66 01                 s1 = s1 + 0x1
 15174: 01                       fallthrough
      :                          @862
 15175: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 15178: 51 06 28                 jump @867 if s1 == 0
      :                          @863
 15181: 82 59 20                 a2 = u64 [s0 + 0x20]
 15184: 82 17 48                 a0 = u64 [sp + 0x48]
 15187: 82 18 40                 a1 = u64 [sp + 0x40]
 15190: b4 90 02 92 01           ra = 402, jump [a2]
      :                          @864 [@dyn 201]
 15195: 51 07 ec                 jump @862 if a0 == 0
      :                          @865
 15198: 33 08 01                 a1 = 0x1
 15201: 01                       fallthrough
      :                          @866
 15202: 64 87                    a0 = a1
 15204: 82 10 60                 ra = u64 [sp + 0x60]
 15207: 82 15 58                 s0 = u64 [sp + 0x58]
 15210: 82 16 50                 s1 = u64 [sp + 0x50]
 15213: 95 11 68                 sp = sp + 0x68
 15216: 32 00                    ret
      :                          @867
 15218: 82 16 48                 s1 = u64 [sp + 0x48]
 15221: 64 67                    a0 = s1
 15223: 64 58                    a1 = s0
 15225: 82 19 18                 a2 = u64 [sp + 0x18]
 15228: 82 1a 38                 a3 = u64 [sp + 0x38]
 15231: 82 1b 30                 a4 = u64 [sp + 0x30]
 15234: 50 20 94 01 8e 00        ra = 404, jump @881
      :                          @868 [@dyn 202]
 15240: 33 08 01                 a1 = 0x1
 15243: 52 07 d7                 jump @866 if a0 != 0
      :                          @869
 15246: 82 5a 18                 a3 = u64 [s0 + 0x18]
 15249: 64 67                    a0 = s1
 15251: 82 18 20                 a1 = u64 [sp + 0x20]
 15254: 82 19 28                 a2 = u64 [sp + 0x28]
 15257: b4 a0 02 96 01           ra = 406, jump [a3]
      :                          @870 [@dyn 203]
 15262: 33 08 01                 a1 = 0x1
 15265: 52 07 c1                 jump @866 if a0 != 0
      :                          @871
 15268: 82 17 10                 a0 = u64 [sp + 0x10]
 15271: 9a 77                    a0 = -a0
 15273: 7b 17 38                 u64 [sp + 0x38] = a0
 15276: 33 06 ff                 s1 = 0xffffffffffffffff
 15279: 01                       fallthrough
      :                          @872
 15280: 82 17 38                 a0 = u64 [sp + 0x38]
 15283: c8 67 07                 a0 = a0 + s1
 15286: 51 17 ff 45              jump @879 if a0 == 4294967295
      :                          @873
 15290: 82 59 20                 a2 = u64 [s0 + 0x20]
 15293: 82 17 48                 a0 = u64 [sp + 0x48]
 15296: 82 18 40                 a1 = u64 [sp + 0x40]
 15299: b4 90 02 98 01           ra = 408, jump [a2]
      :                          @874 [@dyn 204]
 15304: 95 66 01                 s1 = s1 + 0x1
 15307: 51 07 e5                 jump @872 if a0 == 0
      :                          @875
 15310: 28 39                    jump @880
      :                          @876
 15312: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15315: 82 17 48                 a0 = u64 [sp + 0x48]
 15318: 82 18 20                 a1 = u64 [sp + 0x20]
 15321: 82 19 28                 a2 = u64 [sp + 0x28]
 15324: b4 a0 02 9a 01           ra = 410, jump [a3]
      :                          @877 [@dyn 205]
 15329: 33 08 01                 a1 = 0x1
 15332: 52 07 7e ff              jump @866 if a0 != 0
      :                          @878
 15336: 33 08                    a1 = 0
 15338: 82 16                    s1 = u64 [sp]
 15340: 82 17 10                 a0 = u64 [sp + 0x10]
 15343: 7a 67 30                 u32 [s1 + 0x30] = a0
 15346: 82 17 08                 a0 = u64 [sp + 0x8]
 15349: 78 67 38                 u8 [s1 + 0x38] = a0
 15352: 28 6a ff                 jump @866
      :                          @879
 15355: 82 16 10                 s1 = u64 [sp + 0x10]
 15358: 82 17 10                 a0 = u64 [sp + 0x10]
 15361: d8 76 08                 a1 = s1 <u a0
 15364: 28 5e ff                 jump @866
      :                          @880
 15367: 82 17 10                 a0 = u64 [sp + 0x10]
 15370: d8 76 08                 a1 = s1 <u a0
 15373: 28 55 ff                 jump @866
      :                          @881
 15376: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15379: 7b 10 20                 u64 [sp + 0x20] = ra
 15382: 7b 15 18                 u64 [sp + 0x18] = s0
 15385: 7b 16 10                 u64 [sp + 0x10] = s1
 15388: 83 9c                    i32 a5 = a2 + 0
 15390: 33 02 00 00 11           t0 = 0x110000
 15395: 64 a6                    s1 = a3
 15397: 64 85                    s0 = a1
 15399: 64 7a                    a3 = a0
 15401: aa 2c 21                 jump @884 if a5 == t0
      :                          @882
 15404: 82 5c 20                 a5 = u64 [s0 + 0x20]
 15407: 64 a7                    a0 = a3
 15409: 64 98                    a1 = a2
 15411: 7b 1b 08                 u64 [sp + 0x8] = a4
 15414: 7b 1a                    u64 [sp] = a3
 15416: b4 c0 02 9c 01           ra = 412, jump [a5]
      :                          @883 [@dyn 206]
 15421: 82 1a                    a3 = u64 [sp]
 15423: 82 1b 08                 a4 = u64 [sp + 0x8]
 15426: 64 78                    a1 = a0
 15428: 33 07 01                 a0 = 0x1
 15431: 52 08 20                 jump @887 if a1 != 0
      :                          @884
 15434: 51 06 1a                 jump @886 if s1 == 0
      :                          @885
 15437: 82 5c 18                 a5 = u64 [s0 + 0x18]
 15440: 64 a7                    a0 = a3
 15442: 64 68                    a1 = s1
 15444: 64 b9                    a2 = a4
 15446: 82 10 20                 ra = u64 [sp + 0x20]
 15449: 82 15 18                 s0 = u64 [sp + 0x18]
 15452: 82 16 10                 s1 = u64 [sp + 0x10]
 15455: 95 11 28                 sp = sp + 0x28
 15458: 32 0c                    jump [a5]
      :                          @886
 15460: 33 07                    a0 = 0
 15462: 01                       fallthrough
      :                          @887
 15463: 82 10 20                 ra = u64 [sp + 0x20]
 15466: 82 15 18                 s0 = u64 [sp + 0x18]
 15469: 82 16 10                 s1 = u64 [sp + 0x10]
 15472: 95 11 28                 sp = sp + 0x28
 15475: 32 00                    ret
      :                          @888
 15477: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 15481: 7b 10 80 00              u64 [sp + 0x80] = ra
 15485: 7b 15 78                 u64 [sp + 0x78] = s0
 15488: 7b 16 70                 u64 [sp + 0x70] = s1
 15491: 49 11 60 20              u64 [sp + 96] = 0x20
 15495: 33 0a 03                 a3 = 0x3
 15498: 78 1a 68                 u8 [sp + 0x68] = a3
 15501: 82 96 20                 s1 = u64 [a2 + 0x20]
 15504: 49 11 30                 u64 [sp + 48] = 0
 15507: 49 11 40                 u64 [sp + 64] = 0
 15510: 7b 17 50                 u64 [sp + 0x50] = a0
 15513: 7b 18 58                 u64 [sp + 0x58] = a1
 15516: 51 06 0a 01              jump @910 if s1 == 0
      :                          @889
 15520: 82 97 28                 a0 = u64 [a2 + 0x28]
 15523: 51 07 79 01              jump @920 if a0 == 0
      :                          @890
 15527: 49 11 28                 u64 [sp + 40] = 0
 15530: 82 95                    s0 = u64 [a2]
 15532: 7b 19 08                 u64 [sp + 0x8] = a2
 15535: 82 98 10                 a1 = u64 [a2 + 0x10]
 15538: 7b 18 18                 u64 [sp + 0x18] = a1
 15541: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 15544: 97 88 03                 a1 = a1 << 0x3
 15547: 98 88 03                 a1 = a1 >> 0x3
 15550: 95 88 01                 a1 = a1 + 0x1
 15553: 7b 18                    u64 [sp] = a1
 15555: 95 55 08                 s0 = s0 + 0x8
 15558: 96 78 38                 a1 = a0 * 0x38
 15561: 95 66 18                 s1 = s1 + 0x18
 15564: 33 07 88 01              a0 = 0x188
 15568: 7b 17 10                 u64 [sp + 0x10] = a0
 15571: 01                       fallthrough
      :                          @891
 15572: 7b 18 20                 u64 [sp + 0x20] = a1
 15575: 82 59                    a2 = u64 [s0]
 15577: 51 09 18                 jump @894 if a2 == 0
      :                          @892
 15580: 82 1a 58                 a3 = u64 [sp + 0x58]
 15583: 82 17 50                 a0 = u64 [sp + 0x50]
 15586: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 15589: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15592: b4 a0 02 9e 01           ra = 414, jump [a3]
      :                          @893 [@dyn 207]
 15597: 52 07 55 01              jump @923 if a0 != 0
      :                          @894
 15601: 81 67 10                 a0 = i32 [s1 + 0x10]
 15604: 7a 17 60                 u32 [sp + 0x60] = a0
 15607: 7c 67 18                 a0 = u8 [s1 + 0x18]
 15610: 78 17 68                 u8 [sp + 0x68] = a0
 15613: 81 67 14                 a0 = i32 [s1 + 0x14]
 15616: 7a 17 64                 u32 [sp + 0x64] = a0
 15619: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 15622: 82 67                    a0 = u64 [s1]
 15624: 51 08 26                 jump @899 if a1 == 0
      :                          @895
 15627: 52 18 01 16              jump @897 if a1 != 1
      :                          @896
 15631: 97 77 04                 a0 = a0 << 0x4
 15634: 82 18 18                 a1 = u64 [sp + 0x18]
 15637: c8 87 07                 a0 = a0 + a1
 15640: 82 78 08                 a1 = u64 [a0 + 0x8]
 15643: 82 19 10                 a2 = u64 [sp + 0x10]
 15646: aa 98 07                 jump @898 if a1 == a2
      :                          @897
 15649: 33 08                    a1 = 0
 15651: 28 0f                    jump @900
      :                          @898
 15653: 82 77                    a0 = u64 [a0]
 15655: 82 77                    a0 = u64 [a0]
 15657: 33 08 01                 a1 = 0x1
 15660: 28 06                    jump @900
      :                          @899
 15662: 33 08 01                 a1 = 0x1
 15665: 01                       fallthrough
      :                          @900
 15666: 7b 18 30                 u64 [sp + 0x30] = a1
 15669: 7b 17 38                 u64 [sp + 0x38] = a0
 15672: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 15675: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 15678: 51 08 26                 jump @905 if a1 == 0
      :                          @901
 15681: 52 18 01 16              jump @903 if a1 != 1
      :                          @902
 15685: 97 77 04                 a0 = a0 << 0x4
 15688: 82 18 18                 a1 = u64 [sp + 0x18]
 15691: c8 87 07                 a0 = a0 + a1
 15694: 82 78 08                 a1 = u64 [a0 + 0x8]
 15697: 82 19 10                 a2 = u64 [sp + 0x10]
 15700: aa 98 07                 jump @904 if a1 == a2
      :                          @903
 15703: 33 08                    a1 = 0
 15705: 28 0f                    jump @906
      :                          @904
 15707: 82 77                    a0 = u64 [a0]
 15709: 82 77                    a0 = u64 [a0]
 15711: 33 08 01                 a1 = 0x1
 15714: 28 06                    jump @906
      :                          @905
 15716: 33 08 01                 a1 = 0x1
 15719: 01                       fallthrough
      :                          @906
 15720: 7b 18 40                 u64 [sp + 0x40] = a1
 15723: 7b 17 48                 u64 [sp + 0x48] = a0
 15726: 82 67 08                 a0 = u64 [s1 + 0x8]
 15729: 97 77 04                 a0 = a0 << 0x4
 15732: 82 18 18                 a1 = u64 [sp + 0x18]
 15735: c8 78 08                 a1 = a1 + a0
 15738: 82 87                    a0 = u64 [a1]
 15740: 82 89 08                 a2 = u64 [a1 + 0x8]
 15743: 95 18 30                 a1 = sp + 0x30
 15746: b4 90 02 a0 01           ra = 416, jump [a2]
      :                          @907 [@dyn 208]
 15751: 52 07 bb 00              jump @923 if a0 != 0
      :                          @908
 15755: 95 55 10                 s0 = s0 + 0x10
 15758: 82 18 20                 a1 = u64 [sp + 0x20]
 15761: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 15764: 95 66 38                 s1 = s1 + 0x38
 15767: 82 17 28                 a0 = u64 [sp + 0x28]
 15770: 95 77 01                 a0 = a0 + 0x1
 15773: 7b 17 28                 u64 [sp + 0x28] = a0
 15776: 52 08 34 ff              jump @891 if a1 != 0
      :                          @909
 15780: 28 6b                    jump @918
      :                          @910
 15782: 82 97 18                 a0 = u64 [a2 + 0x18]
 15785: 51 07 73                 jump @920 if a0 == 0
      :                          @911
 15788: 82 95 10                 s0 = u64 [a2 + 0x10]
 15791: 33 0a                    a3 = 0
 15793: 97 78 04                 a1 = a0 << 0x4
 15796: c8 58 08                 a1 = a1 + s0
 15799: 7b 18 20                 u64 [sp + 0x20] = a1
 15802: 7b 19 08                 u64 [sp + 0x8] = a2
 15805: 82 96                    s1 = u64 [a2]
 15807: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15810: 97 77 04                 a0 = a0 << 0x4
 15813: 98 77 04                 a0 = a0 >> 0x4
 15816: 95 77 01                 a0 = a0 + 0x1
 15819: 7b 17                    u64 [sp] = a0
 15821: 95 66 08                 s1 = s1 + 0x8
 15824: 01                       fallthrough
      :                          @912
 15825: 7b 1a 28                 u64 [sp + 0x28] = a3
 15828: 82 69                    a2 = u64 [s1]
 15830: 51 09 17                 jump @915 if a2 == 0
      :                          @913
 15833: 82 1a 58                 a3 = u64 [sp + 0x58]
 15836: 82 17 50                 a0 = u64 [sp + 0x50]
 15839: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 15842: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15845: b4 a0 02 a2 01           ra = 418, jump [a3]
      :                          @914 [@dyn 209]
 15850: 52 07 58                 jump @923 if a0 != 0
      :                          @915
 15853: 82 57                    a0 = u64 [s0]
 15855: 82 59 08                 a2 = u64 [s0 + 0x8]
 15858: 95 18 30                 a1 = sp + 0x30
 15861: b4 90 02 a4 01           ra = 420, jump [a2]
      :                          @916 [@dyn 210]
 15866: 52 07 48                 jump @923 if a0 != 0
      :                          @917
 15869: 95 66 10                 s1 = s1 + 0x10
 15872: 95 55 10                 s0 = s0 + 0x10
 15875: 82 1a 28                 a3 = u64 [sp + 0x28]
 15878: 95 aa 01                 a3 = a3 + 0x1
 15881: 82 17 20                 a0 = u64 [sp + 0x20]
 15884: ab 75 c5                 jump @912 if s0 != a0
      :                          @918
 15887: 82 19 08                 a2 = u64 [sp + 0x8]
 15890: 82 1a                    a3 = u64 [sp]
 15892: 82 97 08                 a0 = u64 [a2 + 0x8]
 15895: ac 7a 0d                 jump @921 if a3 <u a0
      :                          @919
 15898: 28 2d                    jump @924
      :                          @920
 15900: 33 0a                    a3 = 0
 15902: 82 97 08                 a0 = u64 [a2 + 0x8]
 15905: 54 07 26                 jump @924 if a0 <=u 0
      :                          @921
 15908: 82 97                    a0 = u64 [a2]
 15910: 97 a8 04                 a1 = a3 << 0x4
 15913: c8 87 09                 a2 = a0 + a1
 15916: 82 1a 58                 a3 = u64 [sp + 0x58]
 15919: 82 17 50                 a0 = u64 [sp + 0x50]
 15922: 82 98                    a1 = u64 [a2]
 15924: 82 99 08                 a2 = u64 [a2 + 0x8]
 15927: 82 aa 18                 a3 = u64 [a3 + 0x18]
 15930: b4 a0 02 a6 01           ra = 422, jump [a3]
      :                          @922 [@dyn 211]
 15935: 51 07 08                 jump @924 if a0 == 0
      :                          @923
 15938: 33 07 01                 a0 = 0x1
 15941: 28 05                    jump @925
      :                          @924
 15943: 33 07                    a0 = 0
 15945: 01                       fallthrough
      :                          @925
 15946: 82 10 80 00              ra = u64 [sp + 0x80]
 15950: 82 15 78                 s0 = u64 [sp + 0x78]
 15953: 82 16 70                 s1 = u64 [sp + 0x70]
 15956: 95 11 88 00              sp = sp + 0x88
 15960: 32 00                    ret
      :                          @926 [@dyn 212]
 15962: 32 00                    ret
      :                          @927 [@dyn 213]
 15964: 95 11 88                 sp = sp + 0xffffffffffffff88
 15967: 7b 10 70                 u64 [sp + 0x70] = ra
 15970: 7b 15 68                 u64 [sp + 0x68] = s0
 15973: 7b 16 60                 u64 [sp + 0x60] = s1
 15976: 64 93                    t1 = a2
 15978: 33 0c                    a5 = 0
 15980: 33 02                    t0 = 0
 15982: 33 0b                    a4 = 0
 15984: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 15994: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 16000: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 16010: 82 79 10                 a2 = u64 [a0 + 0x10]
 16013: 7b 19 48                 u64 [sp + 0x48] = a2
 16016: 82 79                    a2 = u64 [a0]
 16018: 7b 19 30                 u64 [sp + 0x30] = a2
 16021: 82 77 08                 a0 = u64 [a0 + 0x8]
 16024: 7b 17 28                 u64 [sp + 0x28] = a0
 16027: 7b 18 50                 u64 [sp + 0x50] = a1
 16030: 95 88 08                 a1 = a1 + 0x8
 16033: 7b 18                    u64 [sp] = a1
 16035: 33 07 69 06 01           a0 = 0x10669
 16040: 7b 17 08                 u64 [sp + 0x8] = a0
 16043: 33 05 0a                 s0 = 0xa
 16046: 7b 13 20                 u64 [sp + 0x20] = t1
 16049: 7b 14 18                 u64 [sp + 0x18] = t2
 16052: 7b 10 10                 u64 [sp + 0x10] = ra
 16055: 28 3a                    jump @931
      :                          @928
 16057: c8 89 07                 a0 = a2 + a1
 16060: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 16063: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 16066: 88 77 01                 a0 = a0 <u 0x1
 16069: 01                       fallthrough
      :                          @929
 16070: 82 1a 48                 a3 = u64 [sp + 0x48]
 16073: 78 a7                    u8 [a3] = a0
 16075: 82 17 28                 a0 = u64 [sp + 0x28]
 16078: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16081: 82 17 30                 a0 = u64 [sp + 0x30]
 16084: b4 a0 02 ac 01           ra = 428, jump [a3]
      :                          @930 [@dyn 214]
 16089: 64 52                    t0 = s0
 16091: 82 13 20                 t1 = u64 [sp + 0x20]
 16094: 82 14 18                 t2 = u64 [sp + 0x18]
 16097: 82 10 10                 ra = u64 [sp + 0x10]
 16100: 82 1c 58                 a5 = u64 [sp + 0x58]
 16103: 33 05 0a                 s0 = 0xa
 16106: 82 1b 38                 a4 = u64 [sp + 0x38]
 16109: 52 07 67 01              jump @972 if a0 != 0
      :                          @931
 16113: 84 b7 ff 00              a0 = a4 & 0xff
 16117: 52 07 5b 01              jump @971 if a0 != 0
      :                          @932
 16121: 7b 12 40                 u64 [sp + 0x40] = t0
 16124: ae c3 0a                 jump @935 if t1 >=u a5
      :                          @933
 16127: 28 f4 00                 jump @962
      :                          @934
 16130: ac c3 f1 00              jump @962 if t1 <u a5
      :                          @935
 16134: c9 c3 08                 a1 = t1 - a5
 16137: 82 16 50                 s1 = u64 [sp + 0x50]
 16140: c8 c6 06                 s1 = s1 + a5
 16143: 55 18 10 1d              jump @941 if a1 >=u 16
      :                          @936
 16147: aa c3 dd 00              jump @961 if t1 == a5
      :                          @937
 16151: 33 0a                    a3 = 0
 16153: 01                       fallthrough
      :                          @938
 16154: c8 a6 07                 a0 = s1 + a3
 16157: 7c 77                    a0 = u8 [a0]
 16159: aa 57 aa 00              jump @956 if a0 == s0
      :                          @939
 16163: 95 aa 01                 a3 = a3 + 0x1
 16166: ab a8 f4                 jump @938 if a1 != a3
      :                          @940
 16169: 28 c7 00                 jump @961
      :                          @941
 16172: 95 69 07                 a2 = s1 + 0x7
 16175: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 16178: c9 6a 07                 a0 = a3 - s1
 16181: d3 6a 0a                 a3 = a3 ^ s1
 16184: 88 aa 01                 a3 = a3 <u 0x1
 16187: 88 7b 01                 a4 = a0 <u 0x1
 16190: d4 ba 0a                 a3 = a3 | a4
 16193: 7b 1c 58                 u64 [sp + 0x58] = a5
 16196: 51 0a 44                 jump @947 if a3 == 0
      :                          @942
 16199: 33 07                    a0 = 0
 16201: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16204: 01                       fallthrough
      :                          @943
 16205: 82 1b 58                 a4 = u64 [sp + 0x58]
 16208: 82 19                    a2 = u64 [sp]
 16210: c8 9b 0b                 a4 = a4 + a2
 16213: 01                       fallthrough
      :                          @944
 16214: c8 76 0c                 a5 = s1 + a0
 16217: 82 cc                    a5 = u64 [a5]
 16219: c8 7b 09                 a2 = a4 + a0
 16222: 82 99                    a2 = u64 [a2]
 16224: d3 0c 05                 s0 = a5 ^ ra
 16227: c8 45 05                 s0 = s0 + t2
 16230: e0 c5 0c                 a5 = s0 & ~a5
 16233: d3 09 05                 s0 = a2 ^ ra
 16236: 3a 0a 10 00 03           a3 = u64 [0x30010]
 16241: c8 45 05                 s0 = s0 + t2
 16244: e0 95 09                 a2 = s0 & ~a2
 16247: d4 c9 09                 a2 = a2 | a5
 16250: d2 a9 09                 a2 = a2 & a3
 16253: 52 09 1f                 jump @950 if a2 != 0
      :                          @945
 16256: 95 77 10                 a0 = a0 + 0x10
 16259: ae 72 d3                 jump @944 if t0 >=u a0
      :                          @946
 16262: 28 16                    jump @950
      :                          @947
 16264: c8 a6 0b                 a4 = s1 + a3
 16267: 7c bb                    a4 = u8 [a4]
 16269: aa 5b 54                 jump @959 if a4 == s0
      :                          @948
 16272: 95 aa 01                 a3 = a3 + 0x1
 16275: ab a7 f5                 jump @947 if a0 != a3
      :                          @949
 16278: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16281: ae 72 b4                 jump @943 if t0 >=u a0
      :                          @950
 16284: aa 87 99 00              jump @968 if a0 == a1
      :                          @951
 16288: 33 0a                    a3 = 0
 16290: c8 76 06                 s1 = s1 + a0
 16293: c9 73 08                 a1 = t1 - a0
 16296: 82 1c 58                 a5 = u64 [sp + 0x58]
 16299: c9 c8 08                 a1 = a1 - a5
 16302: 33 05 0a                 s0 = 0xa
 16305: 82 12 40                 t0 = u64 [sp + 0x40]
 16308: 01                       fallthrough
      :                          @952
 16309: c8 a6 09                 a2 = s1 + a3
 16312: 7c 99                    a2 = u8 [a2]
 16314: aa 59 0b                 jump @955 if a2 == s0
      :                          @953
 16317: 95 aa 01                 a3 = a3 + 0x1
 16320: ab a8 f5                 jump @952 if a1 != a3
      :                          @954
 16323: 28 2d                    jump @961
      :                          @955
 16325: c8 7a 0a                 a3 = a3 + a0
 16328: 01                       fallthrough
      :                          @956
 16329: c8 ca 0a                 a3 = a3 + a5
 16332: 95 ac 01                 a5 = a3 + 0x1
 16335: ae 3a 33 ff              jump @934 if a3 >=u t1
      :                          @957
 16339: 82 17 50                 a0 = u64 [sp + 0x50]
 16342: c8 7a 0a                 a3 = a3 + a0
 16345: 7c a7                    a0 = u8 [a3]
 16347: ab 57 27 ff              jump @934 if a0 != s0
      :                          @958
 16351: 28 5d                    jump @969
      :                          @959
 16353: 82 1c 58                 a5 = u64 [sp + 0x58]
 16356: c8 ca 0a                 a3 = a3 + a5
 16359: 95 ac 01                 a5 = a3 + 0x1
 16362: ac 3a e9                 jump @957 if a3 <u t1
      :                          @960
 16365: 28 15 ff                 jump @934
      :                          @961
 16368: 64 3c                    a5 = t1
 16370: 01                       fallthrough
      :                          @962
 16371: 7b 1c 58                 u64 [sp + 0x58] = a5
 16374: 49 11 38 01              u64 [sp + 56] = 0x1
 16378: 64 25                    s0 = t0
 16380: 64 36                    s1 = t1
 16382: aa 32 52                 jump @971 if t0 == t1
      :                          @963
 16385: 82 17 48                 a0 = u64 [sp + 0x48]
 16388: 7c 77                    a0 = u8 [a0]
 16390: 51 07 1d                 jump @966 if a0 == 0
      :                          @964
 16393: 82 17 28                 a0 = u64 [sp + 0x28]
 16396: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16399: 33 09 04                 a2 = 0x4
 16402: 82 17 30                 a0 = u64 [sp + 0x30]
 16405: 82 18 08                 a1 = u64 [sp + 0x8]
 16408: b4 a0 02 ae 01           ra = 430, jump [a3]
      :                          @965 [@dyn 215]
 16413: 82 12 40                 t0 = u64 [sp + 0x40]
 16416: 52 07 34                 jump @972 if a0 != 0
      :                          @966
 16419: c9 26 09                 a2 = s1 - t0
 16422: 82 18 50                 a1 = u64 [sp + 0x50]
 16425: c8 28 08                 a1 = a1 + t0
 16428: ab 26 8d fe              jump @928 if s1 != t0
      :                          @967
 16432: 33 07                    a0 = 0
 16434: 28 94 fe                 jump @929
      :                          @968
 16437: 64 3c                    a5 = t1
 16439: 82 12 40                 t0 = u64 [sp + 0x40]
 16442: 28 b9                    jump @962
      :                          @969
 16444: 49 11 38                 u64 [sp + 56] = 0
 16447: 64 c6                    s1 = a5
 16449: 64 c5                    s0 = a5
 16451: 7b 1c 58                 u64 [sp + 0x58] = a5
 16454: 82 17 48                 a0 = u64 [sp + 0x48]
 16457: 7c 77                    a0 = u8 [a0]
 16459: 52 07 be                 jump @964 if a0 != 0
      :                          @970
 16462: 28 d5                    jump @966
      :                          @971
 16464: 33 07                    a0 = 0
 16466: 28 06                    jump @973
      :                          @972
 16468: 33 07 01                 a0 = 0x1
 16471: 01                       fallthrough
      :                          @973
 16472: 82 10 70                 ra = u64 [sp + 0x70]
 16475: 82 15 68                 s0 = u64 [sp + 0x68]
 16478: 82 16 60                 s1 = u64 [sp + 0x60]
 16481: 95 11 78                 sp = sp + 0x78
 16484: 32 00                    ret
      :                          @974 [@dyn 216]
 16486: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16489: 7b 10 20                 u64 [sp + 0x20] = ra
 16492: 7b 15 18                 u64 [sp + 0x18] = s0
 16495: 7b 16 10                 u64 [sp + 0x10] = s1
 16498: 82 75 10                 s0 = u64 [a0 + 0x10]
 16501: 7c 59                    a2 = u8 [s0]
 16503: 82 7b                    a4 = u64 [a0]
 16505: 82 76 08                 s1 = u64 [a0 + 0x8]
 16508: 51 09 33                 jump @978 if a2 == 0
      :                          @975
 16511: 82 6a 18                 a3 = u64 [s1 + 0x18]
 16514: 7b 18 08                 u64 [sp + 0x8] = a1
 16517: 33 08 69 06 01           a1 = 0x10669
 16522: 33 09 04                 a2 = 0x4
 16525: 64 b7                    a0 = a4
 16527: 7b 1b                    u64 [sp] = a4
 16529: b4 a0 02 b2 01           ra = 434, jump [a3]
      :                          @976 [@dyn 217]
 16534: 82 18 08                 a1 = u64 [sp + 0x8]
 16537: 82 1b                    a4 = u64 [sp]
 16539: 51 07 14                 jump @978 if a0 == 0
      :                          @977
 16542: 33 07 01                 a0 = 0x1
 16545: 82 10 20                 ra = u64 [sp + 0x20]
 16548: 82 15 18                 s0 = u64 [sp + 0x18]
 16551: 82 16 10                 s1 = u64 [sp + 0x10]
 16554: 95 11 28                 sp = sp + 0x28
 16557: 32 00                    ret
      :                          @978
 16559: 83 87                    i32 a0 = a1 + 0
 16561: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 16564: 88 77 01                 a0 = a0 <u 0x1
 16567: 78 57                    u8 [s0] = a0
 16569: 82 6c 20                 a5 = u64 [s1 + 0x20]
 16572: 64 b7                    a0 = a4
 16574: 82 10 20                 ra = u64 [sp + 0x20]
 16577: 82 15 18                 s0 = u64 [sp + 0x18]
 16580: 82 16 10                 s1 = u64 [sp + 0x10]
 16583: 95 11 28                 sp = sp + 0x28
 16586: 32 0c                    jump [a5]
      :                          @979 [@dyn 218]
 16588: 64 8a                    a3 = a1
 16590: 33 08 f0 11 01           a1 = 0x111f0
 16595: 64 a9                    a2 = a3
 16597: 28 a0 fb                 jump @888
      :                          @980
 16600: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 16604: 7b 10 88 00              u64 [sp + 0x88] = ra
 16608: 7b 15 80 00              u64 [sp + 0x80] = s0
 16612: 7b 16 78                 u64 [sp + 0x78] = s1
 16615: 64 75                    s0 = a0
 16617: 7c 77 08                 a0 = u8 [a0 + 0x8]
 16620: 64 8b                    a4 = a1
 16622: 33 08 01                 a1 = 0x1
 16625: 33 06 01                 s1 = 0x1
 16628: 51 07 1d                 jump @982 if a0 == 0
      :                          @981
 16631: 78 56 08                 u8 [s0 + 0x8] = s1
 16634: 46 15 09 01              u8 [s0 + 9] = 0x1
 16638: 64 57                    a0 = s0
 16640: 82 10 88 00              ra = u64 [sp + 0x88]
 16644: 82 15 80 00              s0 = u64 [sp + 0x80]
 16648: 82 16 78                 s1 = u64 [sp + 0x78]
 16651: 95 11 90 00              sp = sp + 0x90
 16655: 32 00                    ret
      :                          @982
 16657: 64 9a                    a3 = a2
 16659: 82 5c                    a5 = u64 [s0]
 16661: 80 c7 34                 a0 = u32 [a5 + 0x34]
 16664: 7c 58 09                 a1 = u8 [s0 + 0x9]
 16667: 84 79 04                 a2 = a0 & 0x4
 16670: 52 09 45                 jump @988 if a2 != 0
      :                          @983
 16673: 51 08 32                 jump @986 if a1 == 0
      :                          @984
 16676: 82 c8 28                 a1 = u64 [a5 + 0x28]
 16679: 82 c7 20                 a0 = u64 [a5 + 0x20]
 16682: 82 83 18                 t1 = u64 [a1 + 0x18]
 16685: 33 08 71 06 01           a1 = 0x10671
 16690: 33 09 02                 a2 = 0x2
 16693: 64 a6                    s1 = a3
 16695: 7b 1b 10                 u64 [sp + 0x10] = a4
 16698: 7b 1c 08                 u64 [sp + 0x8] = a5
 16701: b4 30 02 b6 01           ra = 438, jump [t1]
      :                          @985 [@dyn 219]
 16706: 82 1c 08                 a5 = u64 [sp + 0x8]
 16709: 82 1b 10                 a4 = u64 [sp + 0x10]
 16712: 64 6a                    a3 = s1
 16714: 33 08 01                 a1 = 0x1
 16717: 33 06 01                 s1 = 0x1
 16720: 52 07 a7                 jump @981 if a0 != 0
      :                          @986
 16723: 64 b7                    a0 = a4
 16725: 64 c8                    a1 = a5
 16727: b4 a0 02 b8 01           ra = 440, jump [a3]
      :                          @987 [@dyn 220]
 16732: 33 08 01                 a1 = 0x1
 16735: 64 76                    s1 = a0
 16737: 28 96                    jump @981
      :                          @988
 16739: 52 08 37                 jump @992 if a1 != 0
      :                          @989
 16742: 82 c8 28                 a1 = u64 [a5 + 0x28]
 16745: 82 c7 20                 a0 = u64 [a5 + 0x20]
 16748: 82 83 18                 t1 = u64 [a1 + 0x18]
 16751: 33 08 75 06 01           a1 = 0x10675
 16756: 33 09 01                 a2 = 0x1
 16759: 33 06 01                 s1 = 0x1
 16762: 7b 1a                    u64 [sp] = a3
 16764: 7b 1b 10                 u64 [sp + 0x10] = a4
 16767: 7b 1c 08                 u64 [sp + 0x8] = a5
 16770: b4 30 02 ba 01           ra = 442, jump [t1]
      :                          @990 [@dyn 221]
 16775: 82 1c 08                 a5 = u64 [sp + 0x8]
 16778: 82 1b 10                 a4 = u64 [sp + 0x10]
 16781: 82 1a                    a3 = u64 [sp]
 16783: 33 08 01                 a1 = 0x1
 16786: 52 07 65 ff              jump @981 if a0 != 0
      :                          @991
 16790: 81 c7 34                 a0 = i32 [a5 + 0x34]
 16793: 01                       fallthrough
      :                          @992
 16794: 33 06 01                 s1 = 0x1
 16797: 78 16 37                 u8 [sp + 0x37] = s1
 16800: 82 c8 20                 a1 = u64 [a5 + 0x20]
 16803: 82 c9 28                 a2 = u64 [a5 + 0x28]
 16806: 7b 18 18                 u64 [sp + 0x18] = a1
 16809: 7b 19 20                 u64 [sp + 0x20] = a2
 16812: 95 18 37                 a1 = sp + 0x37
 16815: 7b 18 28                 u64 [sp + 0x28] = a1
 16818: 81 c8 30                 a1 = i32 [a5 + 0x30]
 16821: 7c c9 38                 a2 = u8 [a5 + 0x38]
 16824: 82 c3                    t1 = u64 [a5]
 16826: 82 c4 08                 t2 = u64 [a5 + 0x8]
 16829: 82 c0 10                 ra = u64 [a5 + 0x10]
 16832: 82 c2 18                 t0 = u64 [a5 + 0x18]
 16835: 7a 17 6c                 u32 [sp + 0x6c] = a0
 16838: 7a 18 68                 u32 [sp + 0x68] = a1
 16841: 78 19 70                 u8 [sp + 0x70] = a2
 16844: 7b 13 38                 u64 [sp + 0x38] = t1
 16847: 7b 14 40                 u64 [sp + 0x40] = t2
 16850: 7b 10 48                 u64 [sp + 0x48] = ra
 16853: 7b 12 50                 u64 [sp + 0x50] = t0
 16856: 95 17 18                 a0 = sp + 0x18
 16859: 7b 17 58                 u64 [sp + 0x58] = a0
 16862: 33 07 f0 11 01           a0 = 0x111f0
 16867: 7b 17 60                 u64 [sp + 0x60] = a0
 16870: 95 18 38                 a1 = sp + 0x38
 16873: 64 b7                    a0 = a4
 16875: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @993 [@dyn 222]
 16880: 52 07 21                 jump @996 if a0 != 0
      :                          @994
 16883: 82 18 60                 a1 = u64 [sp + 0x60]
 16886: 82 17 58                 a0 = u64 [sp + 0x58]
 16889: 82 8a 18                 a3 = u64 [a1 + 0x18]
 16892: 33 08 73 06 01           a1 = 0x10673
 16897: 33 09 02                 a2 = 0x2
 16900: b4 a0 02 be 01           ra = 446, jump [a3]
      :                          @995 [@dyn 223]
 16905: 64 76                    s1 = a0
 16907: 33 08 01                 a1 = 0x1
 16910: 28 e9 fe                 jump @981
      :                          @996
 16913: 33 08 01                 a1 = 0x1
 16916: 28 e3 fe                 jump @981
      :                          @997
 16919: 51 08 9b 00              jump @1018 if a1 == 0
      :                          @998
 16923: 64 79                    a2 = a0
 16925: 7c 77                    a0 = u8 [a0]
 16927: 51 07 91 00              jump @1017 if a0 == 0
      :                          @999
 16931: 51 27 ff 00 90 00        jump @1019 if a0 == 255
      :                          @1000
 16937: 6c 7a                    a3 = sext.b a0
 16939: 57 0a 09                 jump @1002 if a3 <s 0
      :                          @1001
 16942: 33 0a                    a3 = 0
 16944: 33 08                    a1 = 0
 16946: 28 73                    jump @1016
      :                          @1002
 16948: 55 27 c0 00 0d           jump @1004 if a0 >=u 192
      :                          @1003
 16953: 33 0a 01                 a3 = 0x1
 16956: 33 0b 80                 a4 = 0xffffffffffffff80
 16959: 28 4a                    jump @1013
      :                          @1004
 16961: 55 27 e0 00 0e           jump @1006 if a0 >=u 224
      :                          @1005
 16966: 33 0a 02                 a3 = 0x2
 16969: 33 0b 40 ff              a4 = 0xffffffffffffff40
 16973: 28 3c                    jump @1013
      :                          @1006
 16975: 55 27 f0 00 0e           jump @1008 if a0 >=u 240
      :                          @1007
 16980: 33 0a 03                 a3 = 0x3
 16983: 33 0b 20 ff              a4 = 0xffffffffffffff20
 16987: 28 2e                    jump @1013
      :                          @1008
 16989: 55 27 f8 00 0e           jump @1010 if a0 >=u 248
      :                          @1009
 16994: 33 0a 04                 a3 = 0x4
 16997: 33 0b 10 ff              a4 = 0xffffffffffffff10
 17001: 28 20                    jump @1013
      :                          @1010
 17003: 55 27 fc 00 0e           jump @1012 if a0 >=u 252
      :                          @1011
 17008: 33 0a 05                 a3 = 0x5
 17011: 33 0b 08 ff              a4 = 0xffffffffffffff08
 17015: 28 12                    jump @1013
      :                          @1012
 17017: 88 7a fe 00              a3 = a0 <u 0xfe
 17021: 33 0b 04 ff              a4 = 0xffffffffffffff04
 17025: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 17029: 85 aa 07                 a3 = a3 ^ 0x7
 17032: 01                       fallthrough
      :                          @1013
 17033: ae 8a 2b                 jump @1020 if a3 >=u a1
      :                          @1014
 17036: 33 08                    a1 = 0
 17038: c8 b7 07                 a0 = a0 + a4
 17041: 64 ab                    a4 = a3
 17043: 01                       fallthrough
      :                          @1015
 17044: c8 b9 0c                 a5 = a2 + a4
 17047: 7c cc                    a5 = u8 [a5]
 17049: 97 88 08                 a1 = a1 << 0x8
 17052: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17055: d4 c8 08                 a1 = a1 | a5
 17058: 52 0b f2                 jump @1015 if a4 != 0
      :                          @1016
 17061: 8a a9 03                 i32 a2 = a3 << 0x3
 17064: cf 97 07                 a0 = a0 << a2
 17067: c8 87 07                 a0 = a0 + a1
 17070: 32 00                    ret
      :                          @1017
 17072: 32 00                    ret
      :                          @1018
 17074: 00                       trap
      :                          @1019
 17075: 00                       trap
      :                          @1020
 17076: 00                       trap
      :                          @1021
 17077: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 17081: 7b 10 00 01              u64 [sp + 0x100] = ra
 17085: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 17089: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 17093: 7b 17                    u64 [sp] = a0
 17095: 78 18 0f                 u8 [sp + 0xf] = a1
 17098: 7b 17 10                 u64 [sp + 0x10] = a0
 17101: 95 16 0f                 s1 = sp + 0xf
 17104: 33 05 01                 s0 = 0x1
 17107: 95 17 0f                 a0 = sp + 0xf
 17110: 33 08 01                 a1 = 0x1
 17113: 95 19 10                 a2 = sp + 0x10
 17116: 33 0a 08                 a3 = 0x8
 17119: 0a 03                    ecalli 3 // 'write'
 17121: 7b 16 60                 u64 [sp + 0x60] = s1
 17124: 33 07 c4 01              a0 = 0x1c4
 17128: 7b 17 68                 u64 [sp + 0x68] = a0
 17131: 64 17                    a0 = sp
 17133: 7b 17 70                 u64 [sp + 0x70] = a0
 17136: 33 07 1a                 a0 = 0x1a
 17139: 7b 17 78                 u64 [sp + 0x78] = a0
 17142: 49 21 80 00 02           u64 [sp + 128] = 0x2
 17147: 49 21 90 00 02           u64 [sp + 144] = 0x2
 17152: 49 21 a0 00              u64 [sp + 160] = 0
 17156: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 17166: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 17170: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 17175: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 17180: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 17185: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 17189: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 17193: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 17198: 33 08 20 12 01           a1 = 0x11220
 17203: 7b 18 30                 u64 [sp + 0x30] = a1
 17206: 49 11 38 02              u64 [sp + 56] = 0x2
 17210: 95 18 80 00              a1 = sp + 0x80
 17214: 7b 18 50                 u64 [sp + 0x50] = a1
 17217: 49 11 58 02              u64 [sp + 88] = 0x2
 17221: 95 18 60                 a1 = sp + 0x60
 17224: 7b 18 40                 u64 [sp + 0x40] = a1
 17227: 49 11 48 02              u64 [sp + 72] = 0x2
 17231: 95 17 18                 a0 = sp + 0x18
 17234: 95 18 30                 a1 = sp + 0x30
 17237: 50 20 c0 01 04 f2        ra = 448, jump @743
      :                          @1022 [@dyn 224]
 17243: 82 15 20                 s0 = u64 [sp + 0x20]
 17246: 82 1b 28                 a4 = u64 [sp + 0x28]
 17249: 82 16 18                 s1 = u64 [sp + 0x18]
 17252: 33 07 02                 a0 = 0x2
 17255: 33 08                    a1 = 0
 17257: 33 09                    a2 = 0
 17259: 64 5a                    a3 = s0
 17261: 33 00 c2 01              ra = 0x1c2
 17265: 0a 64                    ecalli 100 // 'log'
 17267: 01                       fallthrough
      :                          @1023 [@dyn 225]
 17268: 33 07 00 f0              a0 = 0xfffffffffffff000
 17272: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 17276: ac 78 23                 jump @1029 if a1 <u a0
      :                          @1024
 17279: 33 07 40 00 03           a0 = 0x30040
 17284: 95 77 00 10              a0 = a0 + 0x1000
 17288: 01                       fallthrough
      :                          @1025
 17289: 82 78                    a1 = u64 [a0]
 17291: c9 87 09                 a2 = a0 - a1
 17294: ab 59 11                 jump @1029 if a2 != s0
      :                          @1026
 17297: c9 68 09                 a2 = a1 - s1
 17300: 01                       fallthrough
      :                          @1027
 17301: 82 7a                    a3 = u64 [a0]
 17303: ab 8a f2                 jump @1025 if a3 != a1
      :                          @1028
 17306: 7b 79                    u64 [a0] = a2
 17308: 33 0b                    a4 = 0
 17310: 01                       fallthrough
      :                          @1029
 17311: 82 10 00 01              ra = u64 [sp + 0x100]
 17315: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 17319: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 17323: 95 11 08 01              sp = sp + 0x108
 17327: 32 00                    ret
      :                          @1030 [@dyn 226]
 17329: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 17332: 7b 10 28                 u64 [sp + 0x28] = ra
 17335: 7b 15 20                 u64 [sp + 0x20] = s0
 17338: 7b 16 18                 u64 [sp + 0x18] = s1
 17341: 64 86                    s1 = a1
 17343: 82 88 28                 a1 = u64 [a1 + 0x28]
 17346: 82 6a 20                 a3 = u64 [s1 + 0x20]
 17349: 82 8b 18                 a4 = u64 [a1 + 0x18]
 17352: 64 75                    s0 = a0
 17354: 33 08 58 06 01           a1 = 0x10658
 17359: 33 09 01                 a2 = 0x1
 17362: 64 a7                    a0 = a3
 17364: b4 b0 02 c6 01           ra = 454, jump [a4]
      :                          @1031 [@dyn 227]
 17369: 7b 16                    u64 [sp] = s1
 17371: 78 17 08                 u8 [sp + 0x8] = a0
 17374: 46 11 09                 u8 [sp + 9] = 0
 17377: 7b 15 10                 u64 [sp + 0x10] = s0
 17380: 33 09 02                 a2 = 0x2
 17383: 64 17                    a0 = sp
 17385: 95 18 10                 a1 = sp + 0x10
 17388: 50 20 c8 01 ec fc        ra = 456, jump @980
      :                          @1032 [@dyn 228]
 17394: 33 07 01                 a0 = 0x1
 17397: 7c 18 08                 a1 = u8 [sp + 0x8]
 17400: 52 08 1b                 jump @1034 if a1 != 0
      :                          @1033
 17403: 82 17                    a0 = u64 [sp]
 17405: 82 78 28                 a1 = u64 [a0 + 0x28]
 17408: 82 77 20                 a0 = u64 [a0 + 0x20]
 17411: 82 8a 18                 a3 = u64 [a1 + 0x18]
 17414: 33 08 76 06 01           a1 = 0x10676
 17419: 33 09 01                 a2 = 0x1
 17422: b4 a0 02 ca 01           ra = 458, jump [a3]
      :                          @1034 [@dyn 229]
 17427: 82 10 28                 ra = u64 [sp + 0x28]
 17430: 82 15 20                 s0 = u64 [sp + 0x20]
 17433: 82 16 18                 s1 = u64 [sp + 0x18]
 17436: 95 11 30                 sp = sp + 0x30
 17439: 32 00                    ret
