// RO data = 3520/3520 bytes
// RW data = 24/4144 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [80, 0, 255, 255, 104, 0, 255, 255, 122, 0, 255, 255, 140, 0, 255, 255, 164, 0, 255, 255, 188, 0, 255, 255, 210, 0, 255, 255, 222, 0, 255, 255, 234, 0, 255, 255, 252, 0, 255, 255, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 247, 255, 255, 255, 255, 255, 255, 255, 110, 117, 109, 95, 99, 104, 105, 108, 100, 95, 118, 109, 61, 32, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 101, 120, 112, 117, 110, 103, 101, 32, 105, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 44, 32, 103, 111, 116, 32, 32, 103, 97, 115, 61, 105, 110, 118, 111, 107, 101, 32, 105, 61, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 112, 101, 101, 107, 32, 105, 61, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 120, 112, 111, 114, 116, 32, 105, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 40, 41, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 93, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 105, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 125, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 139, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 149, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 167, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 172, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 181, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 167, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 196, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 203, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 167, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 215, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 149, 0, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 167, 0, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 242, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 33, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 59, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 79, 1, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 124, 1, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 147, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 167, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 187, 1, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 59, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 238, 1, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 11, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 59, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 38, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 67, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 11, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 95, 2, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 59, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 140, 2, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 147, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 164, 2, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 192, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 210, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 147, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 228, 2, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 17, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 49, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 11, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 67, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 84, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 112, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 11, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 67, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 59, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 132, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 147, 3, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 169, 3, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 59, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 188, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 205, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 236, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 13, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 6, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 35, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 104, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 44, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 147, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 205, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 71, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 91, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 111, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 161, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 126, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 54, 1, 0, 0, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 0, 0, 108, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 0, 0, 116, 1, 0, 0, 0, 0, 0, 0, 120, 1, 0, 0, 0, 0, 0, 0, 212, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 229, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5154
// Code size = 16076 bytes

      :                          @0
     0: 28 d9 00 00 00           jump @18
      :                          @1
     5: 28 92 0c 00 00           jump @182
      :                          @2
    10: 28 b0 29                 jump @576
      :                          @3 [@dyn 1]
    13: 33 09 02                 a2 = 0x2
    16: 64 87                    a0 = a1
    18: 33 08 8f 05 01           a1 = 0x1058f
    23: 28 f9 32                 jump @778
      :                          @4 [@dyn 2]
    26: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    30: 7b 10 80 00              u64 [sp + 0x80] = ra
    34: 80 89 34                 a2 = u32 [a1 + 0x34]
    37: 84 9a 10                 a3 = a2 & 0x10
    40: 52 0a 16                 jump @7 if a3 != 0
      :                          @5
    43: 84 99 20                 a2 = a2 & 0x20
    46: 52 09 51                 jump @11 if a2 != 0
      :                          @6
    49: 82 77                    a0 = u64 [a0]
    51: 82 10 80 00              ra = u64 [sp + 0x80]
    55: 95 11 88 00              sp = sp + 0x88
    59: 28 3f 2f                 jump @716
      :                          @7
    62: 82 7b                    a4 = u64 [a0]
    64: 33 09 81 00              a2 = 0x81
    68: 95 17 7f                 a0 = sp + 0x7f
    71: 33 02 57                 t0 = 0x57
    74: 01                       fallthrough
      :                          @8
    75: 64 9c                    a5 = a2
    77: 98 ba 04                 a3 = a4 >> 0x4
    80: 84 bb 0f                 a4 = a4 & 0xf
    83: 88 b3 0a                 t1 = a4 <u 0xa
    86: 33 09 30                 a2 = 0x30
    89: da 32 09                 a2 = t0 if t1 == 0
    92: be b9 09                 i32 a2 = a2 + a4
    95: 78 79                    u8 [a0] = a2
    97: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   100: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   103: 64 ab                    a4 = a3
   105: 52 0a e2                 jump @8 if a3 != 0
      :                          @9
   108: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   111: 56 27 80 00 69           jump @17 if a0 >u 128
      :                          @10
   116: 9a 9b 81 00              a4 = 0x81 - a2
   120: 64 1a                    a3 = sp
   122: c8 7a 0a                 a3 = a3 + a0
   125: 28 42                    jump @15
      :                          @11
   127: 82 7b                    a4 = u64 [a0]
   129: 33 09 81 00              a2 = 0x81
   133: 95 17 7f                 a0 = sp + 0x7f
   136: 33 02 37                 t0 = 0x37
   139: 01                       fallthrough
      :                          @12
   140: 64 9c                    a5 = a2
   142: 98 ba 04                 a3 = a4 >> 0x4
   145: 84 bb 0f                 a4 = a4 & 0xf
   148: 88 b3 0a                 t1 = a4 <u 0xa
   151: 33 09 30                 a2 = 0x30
   154: da 32 09                 a2 = t0 if t1 == 0
   157: be b9 09                 i32 a2 = a2 + a4
   160: 78 79                    u8 [a0] = a2
   162: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   165: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   168: 64 ab                    a4 = a3
   170: 52 0a e2                 jump @12 if a3 != 0
      :                          @13
   173: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   176: 56 27 80 00 28           jump @17 if a0 >u 128
      :                          @14
   181: 9a 9b 81 00              a4 = 0x81 - a2
   185: 64 1a                    a3 = sp
   187: c8 7a 0a                 a3 = a3 + a0
   190: 01                       fallthrough
      :                          @15
   191: 33 09 02                 a2 = 0x2
   194: 64 87                    a0 = a1
   196: 33 08 c5 04 01           a1 = 0x104c5
   201: 50 10 06 ce 2f           ra = 6, jump @726
      :                          @16 [@dyn 3]
   206: 82 10 80 00              ra = u64 [sp + 0x80]
   210: 95 11 88 00              sp = sp + 0x88
   214: 32 00                    ret
      :                          @17
   216: 00                       trap
      :                          @18 [export #0: 'refine']
   217: 95 11 08 f8              sp = sp + 0xfffffffffffff808
   221: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
   225: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
   229: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
   233: 95 11 c8 b3              sp = sp + 0xffffffffffffb3c8
   237: 33 05 00 00 01           s0 = 0x10000
   242: 53 18 04 89 00           jump @30 if a1 <u 4
      :                          @19
   247: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
   250: 51 06 81 00              jump @30 if s1 == 0
      :                          @20
   254: 95 79 04                 a2 = a0 + 0x4
   257: 7d 9a                    a3 = i8 [a2]
   259: 80 7b                    a4 = u32 [a0]
   261: 33 08 01                 a1 = 0x1
   264: 59 0a 45                 jump @28 if a3 >=s 0
      :                          @21
   267: 84 a7 ff 00              a0 = a3 & 0xff
   271: 33 0a c0 00              a3 = 0xc0
   275: 33 08 02                 a1 = 0x2
   278: ac a7 33                 jump @27 if a0 <u a3
      :                          @22
   281: 33 0a e0 00              a3 = 0xe0
   285: 33 08 03                 a1 = 0x3
   288: ac a7 29                 jump @27 if a0 <u a3
      :                          @23
   291: 33 0a f0 00              a3 = 0xf0
   295: 33 08 04                 a1 = 0x4
   298: ac a7 1f                 jump @27 if a0 <u a3
      :                          @24
   301: 33 0a f8 00              a3 = 0xf8
   305: 33 08 05                 a1 = 0x5
   308: ac a7 15                 jump @27 if a0 <u a3
      :                          @25
   311: 33 0a fc 00              a3 = 0xfc
   315: 33 08 06                 a1 = 0x6
   318: ac a7 0b                 jump @27 if a0 <u a3
      :                          @26
   321: 88 77 fe 00              a0 = a0 <u 0xfe
   325: 9a 78 08                 a1 = 0x8 - a0
   328: 01                       fallthrough
      :                          @27
   329: ac 86 34 0b              jump @179 if s1 <u a1
      :                          @28
   333: 7b 1b 90 00              u64 [sp + 0x90] = a4
   337: 7b 18 40                 u64 [sp + 0x40] = a1
   340: 7b 19 38                 u64 [sp + 0x38] = a2
   343: 64 97                    a0 = a2
   345: 50 10 08 f8 39           ra = 8, jump @943
      :                          @29 [@dyn 4]
   350: 82 19 40                 a2 = u64 [sp + 0x40]
   353: e4 96 08                 a1 = maxu(s1, a2)
   356: 64 76                    s1 = a0
   358: c9 98 07                 a0 = a1 - a2
   361: d8 67 08                 a1 = a0 <u s1
   364: e4 67 07                 a0 = maxu(a0, s1)
   367: c9 67 07                 a0 = a0 - s1
   370: 88 77 20                 a0 = a0 <u 0x20
   373: d4 87 07                 a0 = a0 | a1
   376: 51 07 21                 jump @32 if a0 == 0
      :                          @30
   379: 33 08                    a1 = 0
   381: 01                       fallthrough
      :                          @31
   382: 64 57                    a0 = s0
   384: 33 09 38 4c              a2 = 0x4c38
   388: c8 91 01                 sp = sp + a2
   391: 82 10 f0 07              ra = u64 [sp + 0x7f0]
   395: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
   399: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
   403: 95 11 f8 07              sp = sp + 0x7f8
   407: 32 00                    ret
      :                          @32
   409: 48 21 b8 00              u32 [sp + 184] = 0
   413: 49 21 b0 00              u64 [sp + 176] = 0
   417: 49 21 a8 00              u64 [sp + 168] = 0
   421: 49 21 a0 00              u64 [sp + 160] = 0
   425: 49 21 98 00              u64 [sp + 152] = 0
   429: 95 17 98 00              a0 = sp + 0x98
   433: 33 09 24                 a2 = 0x24
   436: 33 0a 03                 a3 = 0x3
   439: 33 08                    a1 = 0
   441: 33 0b                    a4 = 0
   443: 33 0c                    a5 = 0
   445: 0a 12                    ecalli 18 // 'fetch'
   447: 01                       fallthrough
      :                          @33
   448: 95 15 98 00              s0 = sp + 0x98
   452: 33 08 24                 a1 = 0x24
   455: 53 16 08 b7              jump @31 if s1 <u 8
      :                          @34
   459: 95 17 c0 00              a0 = sp + 0xc0
   463: 33 09 00 02              a2 = 0x200
   467: 33 08                    a1 = 0
   469: 50 10 0a 46 2d           ra = 10, jump @701
      :                          @35 [@dyn 5]
   474: 95 18 98 00              a1 = sp + 0x98
   478: 95 19 c0 00              a2 = sp + 0xc0
   482: 33 0b 00 02              a4 = 0x200
   486: 82 17 90 00              a0 = u64 [sp + 0x90]
   490: 33 0a                    a3 = 0
   492: 0a 11                    ecalli 17 // 'historical_lookup'
   494: 01                       fallthrough
      :                          @36
   495: 7b 17 70                 u64 [sp + 0x70] = a0
   498: 51 17 ff 7f 0a           jump @176 if a0 == 4294967295
      :                          @37
   503: 95 15 40 43              s0 = sp + 0x4340
   507: 49 21 90 00 ff ef        u64 [sp + 144] = 0xffffffffffffefff
   513: 7b 16 50                 u64 [sp + 0x50] = s1
   516: 98 67 03                 a0 = s1 >> 0x3
   519: 49 21 f8 02              u64 [sp + 760] = 0
   523: 49 21 f0 02              u64 [sp + 752] = 0
   527: 49 21 e8 02              u64 [sp + 744] = 0
   531: 49 21 e0 02              u64 [sp + 736] = 0
   535: 49 21 d8 02              u64 [sp + 728] = 0
   539: 49 21 d0 02              u64 [sp + 720] = 0
   543: 49 21 c8 02              u64 [sp + 712] = 0
   547: 49 21 c0 02              u64 [sp + 704] = 0
   551: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   554: 7b 17 00 03              u64 [sp + 0x300] = a0
   558: 0a                       ecalli 0 // 'gas'
   559: 7b 17 08 03              u64 [sp + 0x308] = a0
   563: 95 17 00 03              a0 = sp + 0x300
   567: 95 18 30 33              a1 = sp + 0x3330
   571: 7b 87                    u64 [a1] = a0
   573: 95 17 08 03              a0 = sp + 0x308
   577: 7b 87 10                 u64 [a1 + 0x10] = a0
   580: 95 18 30 33              a1 = sp + 0x3330
   584: 33 07 f0 05 01           a0 = 0x105f0
   589: 7b 57 c8 00              u64 [s0 + 0xc8] = a0
   593: 95 17 30 33              a0 = sp + 0x3330
   597: 7b 57 d8 00              u64 [s0 + 0xd8] = a0
   601: 49 25 d0 00 02           u64 [s0 + 208] = 0x2
   606: 49 25 e0 00 02           u64 [s0 + 224] = 0x2
   611: 33 07 04                 a0 = 0x4
   614: 7b 87 08                 u64 [a1 + 0x8] = a0
   617: 7b 17 88 00              u64 [sp + 0x88] = a0
   621: 7b 87 18                 u64 [a1 + 0x18] = a0
   624: 49 25 e8 00              u64 [s0 + 232] = 0
   628: 95 17 28 23              a0 = sp + 0x2328
   632: 95 18 08 44              a1 = sp + 0x4408
   636: 50 10 0c 78 29           ra = 12, jump @633
      :                          @38 [@dyn 6]
   641: 95 17 28 23              a0 = sp + 0x2328
   645: 82 76 08                 s1 = u64 [a0 + 0x8]
   648: 82 7b 10                 a4 = u64 [a0 + 0x10]
   651: 82 75                    s0 = u64 [a0]
   653: 33 07 02                 a0 = 0x2
   656: 33 08                    a1 = 0
   658: 33 09                    a2 = 0
   660: 64 6a                    a3 = s1
   662: 33 00 0e                 ra = 0xe
   665: 0a 64                    ecalli 100 // 'log'
   667: 01                       fallthrough
      :                          @39 [@dyn 7]
   668: 82 17 90 00              a0 = u64 [sp + 0x90]
   672: c8 57 07                 a0 = a0 + s0
   675: 33 0c 20 00 03           a5 = 0x30020
   680: 53 27 00 f0 20           jump @45 if a0 <u 4294963200
      :                          @40
   685: 95 c7 00 10              a0 = a5 + 0x1000
   689: 01                       fallthrough
      :                          @41
   690: 82 78                    a1 = u64 [a0]
   692: c9 87 09                 a2 = a0 - a1
   695: ab 69 11                 jump @45 if a2 != s1
      :                          @42
   698: c9 58 09                 a2 = a1 - s0
   701: 01                       fallthrough
      :                          @43
   702: 82 7a                    a3 = u64 [a0]
   704: ab 8a f2                 jump @41 if a3 != a1
      :                          @44
   707: 7b 79                    u64 [a0] = a2
   709: 33 0b                    a4 = 0
   711: 01                       fallthrough
      :                          @45
   712: 7b 1c 58                 u64 [sp + 0x58] = a5
   715: 82 17 00 03              a0 = u64 [sp + 0x300]
   719: 7b 17 68                 u64 [sp + 0x68] = a0
   722: 51 07 d7 00              jump @59 if a0 == 0
      :                          @46
   726: 33 06                    s1 = 0
   728: 33 07 30 07 01           a0 = 0x10730
   733: 7b 17 60                 u64 [sp + 0x60] = a0
   736: 82 17 58                 a0 = u64 [sp + 0x58]
   739: 95 75 00 10              s0 = a0 + 0x1000
   743: 28 10                    jump @48
      :                          @47
   745: 82 16 80 00              s1 = u64 [sp + 0x80]
   749: 95 66 01                 s1 = s1 + 0x1
   752: 82 17 68                 a0 = u64 [sp + 0x68]
   755: aa 76 b6 00              jump @59 if s1 == a0
      :                          @48
   759: 95 17 c0 00              a0 = sp + 0xc0
   763: 82 18 70                 a1 = u64 [sp + 0x70]
   766: 33 09                    a2 = 0
   768: 0a 14                    ecalli 20 // 'machine'
   770: 01                       fallthrough
      :                          @49
   771: 95 18 18 13              a1 = sp + 0x1318
   775: 7b 87 08                 u64 [a1 + 0x8] = a0
   778: 95 19 40 43              a2 = sp + 0x4340
   782: 51 16 10 6d 09           jump @177 if s1 == 16
      :                          @50
   787: 7b 16 80 00              u64 [sp + 0x80] = s1
   791: 97 68 02                 a1 = s1 << 0x2
   794: 95 1a c0 02              a3 = sp + 0x2c0
   798: c8 a8 08                 a1 = a1 + a3
   801: 7a 87                    u32 [a1] = a0
   803: 95 18 28 23              a1 = sp + 0x2328
   807: 95 17 20 13              a0 = sp + 0x1320
   811: 7b 87                    u64 [a1] = a0
   813: 82 17 88 00              a0 = u64 [sp + 0x88]
   817: 7b 87 08                 u64 [a1 + 0x8] = a0
   820: 82 17 60                 a0 = u64 [sp + 0x60]
   823: 7b 97 c8 00              u64 [a2 + 0xc8] = a0
   827: 49 29 d0 00 01           u64 [a2 + 208] = 0x1
   832: 49 29 e8 00              u64 [a2 + 232] = 0
   836: 95 18 28 23              a1 = sp + 0x2328
   840: 7b 98 d8 00              u64 [a2 + 0xd8] = a1
   844: 49 29 e0 00 01           u64 [a2 + 224] = 0x1
   849: 95 17 30 33              a0 = sp + 0x3330
   853: 95 18 08 44              a1 = sp + 0x4408
   857: 50 10 10 9b 28           ra = 16, jump @633
      :                          @51 [@dyn 8]
   862: 95 17 30 33              a0 = sp + 0x3330
   866: 82 76 08                 s1 = u64 [a0 + 0x8]
   869: 82 7b 10                 a4 = u64 [a0 + 0x10]
   872: 82 77                    a0 = u64 [a0]
   874: 7b 17 78                 u64 [sp + 0x78] = a0
   877: 33 07 02                 a0 = 0x2
   880: 33 08                    a1 = 0
   882: 33 09                    a2 = 0
   884: 64 6a                    a3 = s1
   886: 33 00 12                 ra = 0x12
   889: 0a 64                    ecalli 100 // 'log'
   891: 01                       fallthrough
      :                          @52 [@dyn 9]
   892: 82 1b 78                 a4 = u64 [sp + 0x78]
   895: 82 17 90 00              a0 = u64 [sp + 0x90]
   899: c8 b7 07                 a0 = a0 + a4
   902: 53 27 00 f0 63 ff        jump @47 if a0 <u 4294963200
      :                          @53
   908: 82 57                    a0 = u64 [s0]
   910: c9 75 08                 a1 = s0 - a0
   913: ab 68 58 ff              jump @47 if a1 != s1
      :                          @54
   917: c9 b7 08                 a1 = a0 - a4
   920: 01                       fallthrough
      :                          @55
   921: 82 59                    a2 = u64 [s0]
   923: ab 79 f1                 jump @53 if a2 != a0
      :                          @56
   926: 7b 58                    u64 [s0] = a1
   928: 33 0a                    a3 = 0
   930: 01                       fallthrough
      :                          @57
   931: ab 79 e9                 jump @53 if a2 != a0
      :                          @58
   934: 28 43 ff                 jump @47
      :                          @59
   937: 33 05 08 10              s0 = 0x1008
   941: 95 17 10 03              a0 = sp + 0x310
   945: 33 08                    a1 = 0
   947: 33 09 08 10              a2 = 0x1008
   951: 50 10 14 64 2b           ra = 20, jump @701
      :                          @60 [@dyn 10]
   956: 95 16 18 13              s1 = sp + 0x1318
   960: 49 06                    u64 [s1 + 0] = 0
   962: 95 17 10 03              a0 = sp + 0x310
   966: 33 0a 06                 a3 = 0x6
   969: 33 08                    a1 = 0
   971: 7b 15 80 00              u64 [sp + 0x80] = s0
   975: 64 59                    a2 = s0
   977: 33 0b                    a4 = 0
   979: 33 0c                    a5 = 0
   981: 0a 12                    ecalli 18 // 'fetch'
   983: 01                       fallthrough
      :                          @61
   984: 7b 67 08                 u64 [s1 + 0x8] = a0
   987: 95 16 40 43              s1 = sp + 0x4340
   991: 51 17 ff 2d 01           jump @80 if a0 == 4294967295
      :                          @62
   996: 33 07 10 06 01           a0 = 0x10610
  1001: 7b 17 78                 u64 [sp + 0x78] = a0
  1004: 33 07 91 05 01           a0 = 0x10591
  1009: 7b 17 60                 u64 [sp + 0x60] = a0
  1012: 33 07 a8 05 01           a0 = 0x105a8
  1017: 7b 17 68                 u64 [sp + 0x68] = a0
  1020: 82 17 58                 a0 = u64 [sp + 0x58]
  1023: 95 77 00 10              a0 = a0 + 0x1000
  1027: 7b 17 70                 u64 [sp + 0x70] = a0
  1030: 28 50                    jump @68
      :                          @63
  1032: 80 15 10 03              s0 = u32 [sp + 0x310]
  1036: 80 16 14 03              s1 = u32 [sp + 0x314]
  1040: 33 09 01                 a2 = 0x1
  1043: 64 57                    a0 = s0
  1045: 64 68                    a1 = s1
  1047: 0a 17                    ecalli 23 // 'zero'
  1049: 01                       fallthrough
      :                          @64
  1050: 51 07 c9 00              jump @77 if a0 == 0
      :                          @65
  1054: 33 0b 17                 a4 = 0x17
  1057: 33 07                    a0 = 0
  1059: 33 08                    a1 = 0
  1061: 33 09                    a2 = 0
  1063: 82 1a 68                 a3 = u64 [sp + 0x68]
  1066: 0a 64                    ecalli 100 // 'log'
  1068: 95 16 40 43              s1 = sp + 0x4340
  1072: 01                       fallthrough
      :                          @66
  1073: 95 15 18 13              s0 = sp + 0x1318
  1077: 82 5b                    a4 = u64 [s0]
  1079: 95 bb 01                 a4 = a4 + 0x1
  1082: 7b 5b                    u64 [s0] = a4
  1084: 95 17 10 03              a0 = sp + 0x310
  1088: 33 0a 06                 a3 = 0x6
  1091: 33 08                    a1 = 0
  1093: 82 19 80 00              a2 = u64 [sp + 0x80]
  1097: 33 0c                    a5 = 0
  1099: 0a 12                    ecalli 18 // 'fetch'
  1101: 01                       fallthrough
      :                          @67
  1102: 7b 57 08                 u64 [s0 + 0x8] = a0
  1105: 51 17 ff bb 00           jump @80 if a0 == 4294967295
      :                          @68
  1110: 95 18 30 33              a1 = sp + 0x3330
  1114: 95 17 18 13              a0 = sp + 0x1318
  1118: 7b 87                    u64 [a1] = a0
  1120: 82 17 88 00              a0 = u64 [sp + 0x88]
  1124: 7b 87 08                 u64 [a1 + 0x8] = a0
  1127: 95 19 20 13              a2 = sp + 0x1320
  1131: 7b 89 10                 u64 [a1 + 0x10] = a2
  1134: 7b 87 18                 u64 [a1 + 0x18] = a0
  1137: 82 17 78                 a0 = u64 [sp + 0x78]
  1140: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  1144: 49 26 d0 00 02           u64 [s1 + 208] = 0x2
  1149: 49 26 e8 00              u64 [s1 + 232] = 0
  1153: 95 18 30 33              a1 = sp + 0x3330
  1157: 7b 68 d8 00              u64 [s1 + 0xd8] = a1
  1161: 49 26 e0 00 02           u64 [s1 + 224] = 0x2
  1166: 95 17 28 23              a0 = sp + 0x2328
  1170: 95 18 08 44              a1 = sp + 0x4408
  1174: 50 10 16 5e 27           ra = 22, jump @633
      :                          @69 [@dyn 11]
  1179: 95 17 28 23              a0 = sp + 0x2328
  1183: 82 76 08                 s1 = u64 [a0 + 0x8]
  1186: 82 7b 10                 a4 = u64 [a0 + 0x10]
  1189: 82 75                    s0 = u64 [a0]
  1191: 33 07 02                 a0 = 0x2
  1194: 33 08                    a1 = 0
  1196: 33 09                    a2 = 0
  1198: 64 6a                    a3 = s1
  1200: 33 00 18                 ra = 0x18
  1203: 0a 64                    ecalli 100 // 'log'
  1205: 01                       fallthrough
      :                          @70 [@dyn 12]
  1206: 82 17 90 00              a0 = u64 [sp + 0x90]
  1210: c8 57 07                 a0 = a0 + s0
  1213: 82 1b 70                 a4 = u64 [sp + 0x70]
  1216: 53 27 00 f0 48 ff        jump @63 if a0 <u 4294963200
      :                          @71
  1222: 82 b7                    a0 = u64 [a4]
  1224: c9 7b 08                 a1 = a4 - a0
  1227: ab 68 3d ff              jump @63 if a1 != s1
      :                          @72
  1231: c9 57 08                 a1 = a0 - s0
  1234: 01                       fallthrough
      :                          @73
  1235: 82 b9                    a2 = u64 [a4]
  1237: ab 79 f1                 jump @71 if a2 != a0
      :                          @74
  1240: 7b b8                    u64 [a4] = a1
  1242: 33 0a                    a3 = 0
  1244: 01                       fallthrough
      :                          @75
  1245: ab 79 e9                 jump @71 if a2 != a0
      :                          @76
  1248: 28 28 ff                 jump @63
      :                          @77
  1251: 97 69 0c                 a2 = s1 << 0xc
  1254: 33 0a 00 10              a3 = 0x1000
  1258: 64 57                    a0 = s0
  1260: 95 18 18 03              a1 = sp + 0x318
  1264: 0a 16                    ecalli 22 // 'poke'
  1266: 01                       fallthrough
      :                          @78
  1267: 95 16 40 43              s1 = sp + 0x4340
  1271: 51 07 3a ff              jump @66 if a0 == 0
      :                          @79
  1275: 33 0b 17                 a4 = 0x17
  1278: 33 07                    a0 = 0
  1280: 33 08                    a1 = 0
  1282: 33 09                    a2 = 0
  1284: 82 1a 60                 a3 = u64 [sp + 0x60]
  1287: 0a 64                    ecalli 100 // 'log'
  1289: 28 28 ff                 jump @66
      :                          @80
  1292: 95 17 20 13              a0 = sp + 0x1320
  1296: 33 08                    a1 = 0
  1298: 82 15 80 00              s0 = u64 [sp + 0x80]
  1302: 64 59                    a2 = s0
  1304: 50 10 1a 03 2a           ra = 26, jump @701
      :                          @81 [@dyn 13]
  1309: 95 17 28 23              a0 = sp + 0x2328
  1313: 33 08                    a1 = 0
  1315: 64 59                    a2 = s0
  1317: 50 10 1c f6 29           ra = 28, jump @701
      :                          @82 [@dyn 14]
  1322: 95 17 30 33              a0 = sp + 0x3330
  1326: 33 08                    a1 = 0
  1328: 64 59                    a2 = s0
  1330: 50 10 1e e9 29           ra = 30, jump @701
      :                          @83 [@dyn 15]
  1335: 49 06                    u64 [s1 + 0] = 0
  1337: 49 16 f8                 u64 [s1 + 4294967288] = 0
  1340: 95 17 00 03              a0 = sp + 0x300
  1344: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1348: 82 17 88 00              a0 = u64 [sp + 0x88]
  1352: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  1356: 33 07 30 06 01           a0 = 0x10630
  1361: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  1365: 49 26 d0 00 01           u64 [s1 + 208] = 0x1
  1370: 49 26 e8 00              u64 [s1 + 232] = 0
  1374: 95 18 d8 43              a1 = sp + 0x43d8
  1378: 7b 68 d8 00              u64 [s1 + 0xd8] = a1
  1382: 49 26 e0 00 01           u64 [s1 + 224] = 0x1
  1387: 95 17 50 43              a0 = sp + 0x4350
  1391: 95 18 08 44              a1 = sp + 0x4408
  1395: 50 10 20 81 26           ra = 32, jump @633
      :                          @84 [@dyn 16]
  1400: 82 65 18                 s0 = u64 [s1 + 0x18]
  1403: 82 6b 20                 a4 = u64 [s1 + 0x20]
  1406: 82 66 10                 s1 = u64 [s1 + 0x10]
  1409: 33 07 02                 a0 = 0x2
  1412: 33 08                    a1 = 0
  1414: 33 09                    a2 = 0
  1416: 64 5a                    a3 = s0
  1418: 33 00 22                 ra = 0x22
  1421: 0a 64                    ecalli 100 // 'log'
  1423: 01                       fallthrough
      :                          @85 [@dyn 17]
  1424: 82 17 90 00              a0 = u64 [sp + 0x90]
  1428: c8 67 07                 a0 = a0 + s1
  1431: 82 19 58                 a2 = u64 [sp + 0x58]
  1434: 53 27 00 f0 20           jump @91 if a0 <u 4294963200
      :                          @86
  1439: 95 97 00 10              a0 = a2 + 0x1000
  1443: 01                       fallthrough
      :                          @87
  1444: 82 78                    a1 = u64 [a0]
  1446: c9 87 09                 a2 = a0 - a1
  1449: ab 59 11                 jump @91 if a2 != s0
      :                          @88
  1452: c9 68 09                 a2 = a1 - s1
  1455: 01                       fallthrough
      :                          @89
  1456: 82 7a                    a3 = u64 [a0]
  1458: ab 8a f2                 jump @87 if a3 != a1
      :                          @90
  1461: 7b 79                    u64 [a0] = a2
  1463: 33 0b                    a4 = 0
  1465: 01                       fallthrough
      :                          @91
  1466: 82 17 00 03              a0 = u64 [sp + 0x300]
  1470: 7b 17 48                 u64 [sp + 0x48] = a0
  1473: 51 07 a6 06              jump @175 if a0 == 0
      :                          @92
  1477: 82 17 38                 a0 = u64 [sp + 0x38]
  1480: 82 18 40                 a1 = u64 [sp + 0x40]
  1483: c8 87 07                 a0 = a0 + a1
  1486: 7b 17 40                 u64 [sp + 0x40] = a0
  1489: 51 07 ad 06              jump @180 if a0 == 0
      :                          @93
  1493: 33 08                    a1 = 0
  1495: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  1505: 7b 17 18                 u64 [sp + 0x18] = a0
  1508: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  1518: 7b 17 10                 u64 [sp + 0x10] = a0
  1521: 33 07 91 05 01           a0 = 0x10591
  1526: 7b 17 08                 u64 [sp + 0x8] = a0
  1529: 33 07 02                 a0 = 0x2
  1532: 7b 17 68                 u64 [sp + 0x68] = a0
  1535: 49 11 60 08 10           u64 [sp + 96] = 0x1008
  1540: 28 0f                    jump @95
      :                          @94
  1542: 82 18 78                 a1 = u64 [sp + 0x78]
  1545: 95 88 01                 a1 = a1 + 0x1
  1548: 82 17 48                 a0 = u64 [sp + 0x48]
  1551: aa 78 64 05              jump @162 if a1 == a0
      :                          @95
  1555: 7b 18 78                 u64 [sp + 0x78] = a1
  1558: 95 16 40 43              s1 = sp + 0x4340
  1562: 7b 68 08                 u64 [s1 + 0x8] = a1
  1565: 95 17 20 13              a0 = sp + 0x1320
  1569: 33 08                    a1 = 0
  1571: 82 15 60                 s0 = u64 [sp + 0x60]
  1574: 64 59                    a2 = s0
  1576: 50 10 24 f3 28           ra = 36, jump @701
      :                          @96 [@dyn 18]
  1581: 95 17 28 23              a0 = sp + 0x2328
  1585: 33 08                    a1 = 0
  1587: 64 59                    a2 = s0
  1589: 50 10 26 e6 28           ra = 38, jump @701
      :                          @97 [@dyn 19]
  1594: 95 17 30 33              a0 = sp + 0x3330
  1598: 33 08                    a1 = 0
  1600: 64 59                    a2 = s0
  1602: 82 15 78                 s0 = u64 [sp + 0x78]
  1605: 50 10 28 d6 28           ra = 40, jump @701
      :                          @98 [@dyn 20]
  1610: 49 16 f8                 u64 [s1 + 4294967288] = 0
  1613: 49 06                    u64 [s1 + 0] = 0
  1615: 51 15 10 2c 06           jump @177 if s0 == 16
      :                          @99
  1620: 97 58 03                 a1 = s0 << 0x3
  1623: 95 87 08                 a0 = a1 + 0x8
  1626: 82 19 50                 a2 = u64 [sp + 0x50]
  1629: ac 79 1f 06              jump @178 if a2 <u a0
      :                          @100
  1633: 82 17 40                 a0 = u64 [sp + 0x40]
  1636: c8 87 07                 a0 = a0 + a1
  1639: 7c 78 05                 a1 = u8 [a0 + 0x5]
  1642: 7c 79 04                 a2 = u8 [a0 + 0x4]
  1645: 7c 7a 06                 a3 = u8 [a0 + 0x6]
  1648: 7d 7b 07                 a4 = i8 [a0 + 0x7]
  1651: 97 88 08                 a1 = a1 << 0x8
  1654: d4 98 08                 a1 = a1 | a2
  1657: 97 aa 10                 a3 = a3 << 0x10
  1660: 97 bb 18                 a4 = a4 << 0x18
  1663: d4 ba 0a                 a3 = a3 | a4
  1666: d4 a8 08                 a1 = a1 | a3
  1669: 33 09 38 00 01           a2 = 0x10038
  1674: 7b 19 80 00              u64 [sp + 0x80] = a2
  1678: 52 18 01 2a 04           jump @153 if a1 != 1
      :                          @101
  1683: 97 58 02                 a1 = s0 << 0x2
  1686: 95 19 c0 02              a2 = sp + 0x2c0
  1690: c8 98 08                 a1 = a1 + a2
  1693: 80 89                    a2 = u32 [a1]
  1695: 83 92                    i32 t0 = a2 + 0
  1697: 7c 7a                    a3 = u8 [a0]
  1699: 7c 78 01                 a1 = u8 [a0 + 0x1]
  1702: 7c 7b 02                 a4 = u8 [a0 + 0x2]
  1705: 7c 7c 03                 a5 = u8 [a0 + 0x3]
  1708: 49 16 10 00 00 01        u64 [s1 + 16] = 0x10000
  1714: 82 17 18                 a0 = u64 [sp + 0x18]
  1717: 7b 67 18                 u64 [s1 + 0x18] = a0
  1720: 82 17 10                 a0 = u64 [sp + 0x10]
  1723: 7b 67 20                 u64 [s1 + 0x20] = a0
  1726: 95 17 68 43              a0 = sp + 0x4368
  1730: 49 17 20                 u64 [a0 + 32] = 0
  1733: 49 17 18                 u64 [a0 + 24] = 0
  1736: 49 17 10                 u64 [a0 + 16] = 0
  1739: 49 17 08                 u64 [a0 + 8] = 0
  1742: 49 07                    u64 [a0 + 0] = 0
  1744: 49 16 50 02              u64 [s1 + 80] = 0x2
  1748: 95 17 98 43              a0 = sp + 0x4398
  1752: 49 17 20                 u64 [a0 + 32] = 0
  1755: 49 17 18                 u64 [a0 + 24] = 0
  1758: 49 17 10                 u64 [a0 + 16] = 0
  1761: 49 17 08                 u64 [a0 + 8] = 0
  1764: 49 07                    u64 [a0 + 0] = 0
  1766: 7b 19 70                 u64 [sp + 0x70] = a2
  1769: 64 97                    a0 = a2
  1771: 51 02 3a 01              jump @121 if t0 == 0
      :                          @102
  1775: 7b 18 20                 u64 [sp + 0x20] = a1
  1778: 7b 1c 28                 u64 [sp + 0x28] = a5
  1781: 7b 1b 30                 u64 [sp + 0x30] = a4
  1784: 7b 1a 38                 u64 [sp + 0x38] = a3
  1787: 52 12 01 5f              jump @109 if t0 != 1
      :                          @103
  1791: 33 09 00 10              a2 = 0x1000
  1795: 95 17 10 44              a0 = sp + 0x4410
  1799: 33 08                    a1 = 0
  1801: 50 10 2a 12 28           ra = 42, jump @701
      :                          @104 [@dyn 21]
  1806: 48 26 c8 00              u32 [s1 + 200] = 0
  1810: 48 26 cc 00 10           u32 [s1 + 204] = 0x10
  1815: 33 09 00 00 01           a2 = 0x10000
  1820: 33 0a 00 10              a3 = 0x1000
  1824: 33 07                    a0 = 0
  1826: 95 18 10 44              a1 = sp + 0x4410
  1830: 0a 15                    ecalli 21 // 'peek'
  1832: 01                       fallthrough
      :                          @105
  1833: 51 07 14                 jump @107 if a0 == 0
      :                          @106
  1836: 33 0a bf 05 01           a3 = 0x105bf
  1841: 33 0b 15                 a4 = 0x15
  1844: 33 07                    a0 = 0
  1846: 33 08                    a1 = 0
  1848: 33 09                    a2 = 0
  1850: 0a 64                    ecalli 100 // 'log'
  1852: 01                       fallthrough
      :                          @107
  1853: 95 17 20 13              a0 = sp + 0x1320
  1857: 95 18 08 44              a1 = sp + 0x4408
  1861: 82 19 60                 a2 = u64 [sp + 0x60]
  1864: 50 10 2c 21 27           ra = 44, jump @683
      :                          @108 [@dyn 22]
  1869: 33 07 01                 a0 = 0x1
  1872: 95 18 28 23              a1 = sp + 0x2328
  1876: 7a 87 08                 u32 [a1 + 0x8] = a0
  1879: 28 c1 00                 jump @120
      :                          @109
  1882: 64 65                    s0 = s1
  1884: 82 16 70                 s1 = u64 [sp + 0x70]
  1887: 83 66 fe                 i32 s1 = s1 + 0xfffffffffffffffe
  1890: 33 09 00 10              a2 = 0x1000
  1894: 95 17 10 44              a0 = sp + 0x4410
  1898: 33 08                    a1 = 0
  1900: 50 10 2e af 27           ra = 46, jump @701
      :                          @110 [@dyn 23]
  1905: 7a 56 c8 00              u32 [s0 + 0xc8] = s1
  1909: 48 25 cc 00 10           u32 [s0 + 204] = 0x10
  1914: 97 67 20                 a0 = s1 << 0x20
  1917: 98 77 20                 a0 = a0 >> 0x20
  1920: 33 09 00 00 01           a2 = 0x10000
  1925: 33 0a 00 10              a3 = 0x1000
  1929: 95 18 10 44              a1 = sp + 0x4410
  1933: 0a 15                    ecalli 21 // 'peek'
  1935: 01                       fallthrough
      :                          @111
  1936: 51 07 14                 jump @113 if a0 == 0
      :                          @112
  1939: 33 0a bf 05 01           a3 = 0x105bf
  1944: 33 0b 15                 a4 = 0x15
  1947: 33 07                    a0 = 0
  1949: 33 08                    a1 = 0
  1951: 33 09                    a2 = 0
  1953: 0a 64                    ecalli 100 // 'log'
  1955: 01                       fallthrough
      :                          @113
  1956: 95 17 20 13              a0 = sp + 0x1320
  1960: 95 18 08 44              a1 = sp + 0x4408
  1964: 82 19 60                 a2 = u64 [sp + 0x60]
  1967: 50 10 30 ba 26           ra = 48, jump @683
      :                          @114 [@dyn 24]
  1972: 82 16 70                 s1 = u64 [sp + 0x70]
  1975: 83 66 ff                 i32 s1 = s1 + 0xffffffffffffffff
  1978: 33 09 00 10              a2 = 0x1000
  1982: 95 15 10 44              s0 = sp + 0x4410
  1986: 64 57                    a0 = s0
  1988: 33 08                    a1 = 0
  1990: 50 10 32 55 27           ra = 50, jump @701
      :                          @115 [@dyn 25]
  1995: 95 17 40 43              a0 = sp + 0x4340
  1999: 7a 76 c8 00              u32 [a0 + 0xc8] = s1
  2003: 48 27 cc 00 10           u32 [a0 + 204] = 0x10
  2008: 97 67 20                 a0 = s1 << 0x20
  2011: 98 77 20                 a0 = a0 >> 0x20
  2014: 33 09 00 00 01           a2 = 0x10000
  2019: 33 0a 00 10              a3 = 0x1000
  2023: 64 58                    a1 = s0
  2025: 0a 15                    ecalli 21 // 'peek'
  2027: 01                       fallthrough
      :                          @116
  2028: 51 07 14                 jump @118 if a0 == 0
      :                          @117
  2031: 33 0a bf 05 01           a3 = 0x105bf
  2036: 33 0b 15                 a4 = 0x15
  2039: 33 07                    a0 = 0
  2041: 33 08                    a1 = 0
  2043: 33 09                    a2 = 0
  2045: 0a 64                    ecalli 100 // 'log'
  2047: 01                       fallthrough
      :                          @118
  2048: 95 17 28 23              a0 = sp + 0x2328
  2052: 95 18 08 44              a1 = sp + 0x4408
  2056: 82 19 60                 a2 = u64 [sp + 0x60]
  2059: 50 10 34 5e 26           ra = 52, jump @683
      :                          @119 [@dyn 26]
  2064: 95 17 28 23              a0 = sp + 0x2328
  2068: 81 77 08                 a0 = i32 [a0 + 0x8]
  2071: 01                       fallthrough
      :                          @120
  2072: 82 1a 38                 a3 = u64 [sp + 0x38]
  2075: 82 1b 30                 a4 = u64 [sp + 0x30]
  2078: 82 1c 28                 a5 = u64 [sp + 0x28]
  2081: 82 18 20                 a1 = u64 [sp + 0x20]
  2084: 01                       fallthrough
      :                          @121
  2085: 97 85 08                 s0 = a1 << 0x8
  2088: d4 a5 08                 a1 = s0 | a3
  2091: 97 b6 10                 s1 = a4 << 0x10
  2094: 97 c9 18                 a2 = a5 << 0x18
  2097: d4 69 09                 a2 = a2 | s1
  2100: 95 1a 40 43              a3 = sp + 0x4340
  2104: d4 98 08                 a1 = a1 | a2
  2107: 95 1b 18 13              a4 = sp + 0x1318
  2111: 82 15 70                 s0 = u64 [sp + 0x70]
  2114: 7a b5 08                 u32 [a4 + 0x8] = s0
  2117: 81 b9 10                 a2 = i32 [a4 + 0x10]
  2120: 48 1b 0c 10              u32 [a4 + 12] = 0x10
  2124: 95 1b 28 23              a4 = sp + 0x2328
  2128: 7a b5                    u32 [a4] = s0
  2130: 48 1b 04 11              u32 [a4 + 4] = 0x11
  2134: 7a a9 04                 u32 [a3 + 0x4] = a2
  2137: 7a a7                    u32 [a3] = a0
  2139: 7a a8 f8                 u32 [a3 + 0xfffffffffffffff8] = a1
  2142: 33 08 10                 a1 = 0x10
  2145: 33 09 01                 a2 = 0x1
  2148: 64 57                    a0 = s0
  2150: 0a 17                    ecalli 23 // 'zero'
  2152: 01                       fallthrough
      :                          @122
  2153: 51 07 15                 jump @124 if a0 == 0
      :                          @123
  2156: 33 0a a8 05 01           a3 = 0x105a8
  2161: 33 0b 17                 a4 = 0x17
  2164: 33 07                    a0 = 0
  2166: 33 08                    a1 = 0
  2168: 33 09                    a2 = 0
  2170: 0a 64                    ecalli 100 // 'log'
  2172: 28 26                    jump @127
      :                          @124
  2174: 33 09 00 00 01           a2 = 0x10000
  2179: 33 0a 00 10              a3 = 0x1000
  2183: 64 57                    a0 = s0
  2185: 95 18 28 13              a1 = sp + 0x1328
  2189: 0a 16                    ecalli 22 // 'poke'
  2191: 01                       fallthrough
      :                          @125
  2192: 51 07 12                 jump @127 if a0 == 0
      :                          @126
  2195: 33 0b 17                 a4 = 0x17
  2198: 33 07                    a0 = 0
  2200: 33 08                    a1 = 0
  2202: 33 09                    a2 = 0
  2204: 82 1a 08                 a3 = u64 [sp + 0x8]
  2207: 0a 64                    ecalli 100 // 'log'
  2209: 01                       fallthrough
      :                          @127
  2210: 95 17 28 23              a0 = sp + 0x2328
  2214: 80 76                    s1 = u32 [a0]
  2216: 80 75 04                 s0 = u32 [a0 + 0x4]
  2219: 33 09 01                 a2 = 0x1
  2222: 64 67                    a0 = s1
  2224: 64 58                    a1 = s0
  2226: 0a 17                    ecalli 23 // 'zero'
  2228: 01                       fallthrough
      :                          @128
  2229: 51 07 15                 jump @130 if a0 == 0
      :                          @129
  2232: 33 0a a8 05 01           a3 = 0x105a8
  2237: 33 0b 17                 a4 = 0x17
  2240: 33 07                    a0 = 0
  2242: 33 08                    a1 = 0
  2244: 33 09                    a2 = 0
  2246: 0a 64                    ecalli 100 // 'log'
  2248: 28 24                    jump @133
      :                          @130
  2250: 97 59 0c                 a2 = s0 << 0xc
  2253: 33 0a 00 10              a3 = 0x1000
  2257: 64 67                    a0 = s1
  2259: 95 18 30 23              a1 = sp + 0x2330
  2263: 0a 16                    ecalli 22 // 'poke'
  2265: 01                       fallthrough
      :                          @131
  2266: 51 07 12                 jump @133 if a0 == 0
      :                          @132
  2269: 33 0b 17                 a4 = 0x17
  2272: 33 07                    a0 = 0
  2274: 33 08                    a1 = 0
  2276: 33 09                    a2 = 0
  2278: 82 1a 08                 a3 = u64 [sp + 0x8]
  2281: 0a 64                    ecalli 100 // 'log'
  2283: 01                       fallthrough
      :                          @133
  2284: 95 18 50 43              a1 = sp + 0x4350
  2288: 82 17 70                 a0 = u64 [sp + 0x70]
  2291: 0a 19                    ecalli 25 // 'invoke'
  2293: 0a                       ecalli 0 // 'gas'
  2294: 7b 17 08 03              u64 [sp + 0x308] = a0
  2298: 33 07 80 06 01           a0 = 0x10680
  2303: 95 15 40 43              s0 = sp + 0x4340
  2307: 7b 57 98 00              u64 [s0 + 0x98] = a0
  2311: 95 17 48 43              a0 = sp + 0x4348
  2315: 7b 57 c8 00              u64 [s0 + 0xc8] = a0
  2319: 82 17 88 00              a0 = u64 [sp + 0x88]
  2323: 7b 57 d0 00              u64 [s0 + 0xd0] = a0
  2327: 95 18 17 54              a1 = sp + 0x5417
  2331: 7b 58 d8 00              u64 [s0 + 0xd8] = a1
  2335: 82 18 68                 a1 = u64 [sp + 0x68]
  2338: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
  2342: 95 18 08 03              a1 = sp + 0x308
  2346: 7b 58 e8 00              u64 [s0 + 0xe8] = a1
  2350: 7b 57 f0 00              u64 [s0 + 0xf0] = a0
  2354: 49 25 a0 00 03           u64 [s0 + 160] = 0x3
  2359: 49 25 b8 00              u64 [s0 + 184] = 0
  2363: 95 18 08 44              a1 = sp + 0x4408
  2367: 7b 58 a8 00              u64 [s0 + 0xa8] = a1
  2371: 49 25 b0 00 03           u64 [s0 + 176] = 0x3
  2376: 95 17 c0 43              a0 = sp + 0x43c0
  2380: 95 18 d8 43              a1 = sp + 0x43d8
  2384: 50 10 36 a4 22           ra = 54, jump @633
      :                          @134 [@dyn 27]
  2389: 82 56 88 00              s1 = u64 [s0 + 0x88]
  2393: 82 5b 90 00              a4 = u64 [s0 + 0x90]
  2397: 82 55 80 00              s0 = u64 [s0 + 0x80]
  2401: 33 07 02                 a0 = 0x2
  2404: 33 08                    a1 = 0
  2406: 33 09                    a2 = 0
  2408: 64 6a                    a3 = s1
  2410: 33 00 38                 ra = 0x38
  2413: 0a 64                    ecalli 100 // 'log'
  2415: 01                       fallthrough
      :                          @135 [@dyn 28]
  2416: 82 17 90 00              a0 = u64 [sp + 0x90]
  2420: c8 57 07                 a0 = a0 + s0
  2423: 82 1c 58                 a5 = u64 [sp + 0x58]
  2426: 33 02 00 10              t0 = 0x1000
  2430: 53 27 00 f0 1c           jump @140 if a0 <u 4294963200
      :                          @136
  2435: c8 2c 08                 a1 = a5 + t0
  2438: 82 87                    a0 = u64 [a1]
  2440: c9 78 09                 a2 = a1 - a0
  2443: ab 69 0f                 jump @140 if a2 != s1
      :                          @137
  2446: c9 57 09                 a2 = a0 - s0
  2449: 01                       fallthrough
      :                          @138
  2450: 82 8a                    a3 = u64 [a1]
  2452: ab 7a ef                 jump @136 if a3 != a0
      :                          @139
  2455: 7b 89                    u64 [a1] = a2
  2457: 01                       fallthrough
      :                          @140
  2458: 95 15 40 43              s0 = sp + 0x4340
  2462: 82 59 50                 a2 = u64 [s0 + 0x50]
  2465: 33 0a 00 10              a3 = 0x1000
  2469: 82 17 70                 a0 = u64 [sp + 0x70]
  2472: 95 18 38 33              a1 = sp + 0x3338
  2476: 0a 15                    ecalli 21 // 'peek'
  2478: 0a                       ecalli 0 // 'gas'
  2479: 7b 17 08 03              u64 [sp + 0x308] = a0
  2483: 33 07 b0 06 01           a0 = 0x106b0
  2488: 7b 57 98 00              u64 [s0 + 0x98] = a0
  2492: 95 17 48 43              a0 = sp + 0x4348
  2496: 7b 57 c8 00              u64 [s0 + 0xc8] = a0
  2500: 82 17 88 00              a0 = u64 [sp + 0x88]
  2504: 7b 57 d0 00              u64 [s0 + 0xd0] = a0
  2508: 82 18 80 00              a1 = u64 [sp + 0x80]
  2512: 7b 58 d8 00              u64 [s0 + 0xd8] = a1
  2516: 7b 57 e0 00              u64 [s0 + 0xe0] = a0
  2520: 95 18 17 54              a1 = sp + 0x5417
  2524: 7b 58 e8 00              u64 [s0 + 0xe8] = a1
  2528: 82 18 68                 a1 = u64 [sp + 0x68]
  2531: 7b 58 f0 00              u64 [s0 + 0xf0] = a1
  2535: 95 18 08 03              a1 = sp + 0x308
  2539: 7b 58 f8 00              u64 [s0 + 0xf8] = a1
  2543: 7b 57 00 01              u64 [s0 + 0x100] = a0
  2547: 49 25 a0 00 04           u64 [s0 + 160] = 0x4
  2552: 49 25 b8 00              u64 [s0 + 184] = 0
  2556: 95 17 08 44              a0 = sp + 0x4408
  2560: 7b 57 a8 00              u64 [s0 + 0xa8] = a0
  2564: 49 25 b0 00 04           u64 [s0 + 176] = 0x4
  2569: 95 17 c0 43              a0 = sp + 0x43c0
  2573: 95 18 d8 43              a1 = sp + 0x43d8
  2577: 50 10 3a e3 21           ra = 58, jump @633
      :                          @141 [@dyn 29]
  2582: 82 56 88 00              s1 = u64 [s0 + 0x88]
  2586: 82 5b 90 00              a4 = u64 [s0 + 0x90]
  2590: 82 55 80 00              s0 = u64 [s0 + 0x80]
  2594: 33 07 02                 a0 = 0x2
  2597: 33 08                    a1 = 0
  2599: 33 09                    a2 = 0
  2601: 64 6a                    a3 = s1
  2603: 33 00 3c                 ra = 0x3c
  2606: 0a 64                    ecalli 100 // 'log'
  2608: 01                       fallthrough
      :                          @142 [@dyn 30]
  2609: 33 02 00 10              t0 = 0x1000
  2613: 82 1c 58                 a5 = u64 [sp + 0x58]
  2616: 82 17 90 00              a0 = u64 [sp + 0x90]
  2620: c8 57 07                 a0 = a0 + s0
  2623: 53 27 00 f0 1c           jump @147 if a0 <u 4294963200
      :                          @143
  2628: c8 2c 08                 a1 = a5 + t0
  2631: 82 87                    a0 = u64 [a1]
  2633: c9 78 09                 a2 = a1 - a0
  2636: ab 69 0f                 jump @147 if a2 != s1
      :                          @144
  2639: c9 57 09                 a2 = a0 - s0
  2642: 01                       fallthrough
      :                          @145
  2643: 82 8a                    a3 = u64 [a1]
  2645: ab 7a ef                 jump @143 if a3 != a0
      :                          @146
  2648: 7b 89                    u64 [a1] = a2
  2650: 01                       fallthrough
      :                          @147
  2651: 95 18 30 33              a1 = sp + 0x3330
  2655: 81 87 08                 a0 = i32 [a1 + 0x8]
  2658: 82 15 70                 s0 = u64 [sp + 0x70]
  2661: 7a 85                    u32 [a1] = s0
  2663: 48 18 04 10              u32 [a1 + 4] = 0x10
  2667: 95 16 40 43              s1 = sp + 0x4340
  2671: 7a 67 fc                 u32 [s1 + 0xfffffffffffffffc] = a0
  2674: 33 08 10                 a1 = 0x10
  2677: 33 09 01                 a2 = 0x1
  2680: 64 57                    a0 = s0
  2682: 0a 17                    ecalli 23 // 'zero'
  2684: 01                       fallthrough
      :                          @148
  2685: 51 07 15                 jump @150 if a0 == 0
      :                          @149
  2688: 33 0a a8 05 01           a3 = 0x105a8
  2693: 33 0b 17                 a4 = 0x17
  2696: 33 07                    a0 = 0
  2698: 33 08                    a1 = 0
  2700: 33 09                    a2 = 0
  2702: 0a 64                    ecalli 100 // 'log'
  2704: 28 28                    jump @153
      :                          @150
  2706: 33 09 00 00 01           a2 = 0x10000
  2711: 33 0a 00 10              a3 = 0x1000
  2715: 64 57                    a0 = s0
  2717: 95 18 38 33              a1 = sp + 0x3338
  2721: 0a 16                    ecalli 22 // 'poke'
  2723: 01                       fallthrough
      :                          @151
  2724: 51 07 14                 jump @153 if a0 == 0
      :                          @152
  2727: 33 0a 91 05 01           a3 = 0x10591
  2732: 33 0b 17                 a4 = 0x17
  2735: 33 07                    a0 = 0
  2737: 33 08                    a1 = 0
  2739: 33 09                    a2 = 0
  2741: 0a 64                    ecalli 100 // 'log'
  2743: 01                       fallthrough
      :                          @153
  2744: 95 17 30 33              a0 = sp + 0x3330
  2748: 82 18 60                 a1 = u64 [sp + 0x60]
  2751: 0a 13                    ecalli 19 // 'export'
  2753: 0a                       ecalli 0 // 'gas'
  2754: 7b 17 08 03              u64 [sp + 0x308] = a0
  2758: 33 07 f0 06 01           a0 = 0x106f0
  2763: 7b 67 10                 u64 [s1 + 0x10] = a0
  2766: 95 17 48 43              a0 = sp + 0x4348
  2770: 7b 67 c8 00              u64 [s1 + 0xc8] = a0
  2774: 82 17 88 00              a0 = u64 [sp + 0x88]
  2778: 7b 67 d0 00              u64 [s1 + 0xd0] = a0
  2782: 82 18 80 00              a1 = u64 [sp + 0x80]
  2786: 7b 68 d8 00              u64 [s1 + 0xd8] = a1
  2790: 7b 67 e0 00              u64 [s1 + 0xe0] = a0
  2794: 95 18 17 54              a1 = sp + 0x5417
  2798: 7b 68 e8 00              u64 [s1 + 0xe8] = a1
  2802: 82 18 68                 a1 = u64 [sp + 0x68]
  2805: 7b 68 f0 00              u64 [s1 + 0xf0] = a1
  2809: 95 18 08 03              a1 = sp + 0x308
  2813: 7b 68 f8 00              u64 [s1 + 0xf8] = a1
  2817: 7b 67 00 01              u64 [s1 + 0x100] = a0
  2821: 49 16 18 04              u64 [s1 + 24] = 0x4
  2825: 49 16 30                 u64 [s1 + 48] = 0
  2828: 95 17 08 44              a0 = sp + 0x4408
  2832: 7b 67 20                 u64 [s1 + 0x20] = a0
  2835: 49 16 28 04              u64 [s1 + 40] = 0x4
  2839: 95 17 d8 43              a0 = sp + 0x43d8
  2843: 95 18 50 43              a1 = sp + 0x4350
  2847: 50 10 3e d5 20           ra = 62, jump @633
      :                          @154 [@dyn 31]
  2852: 82 65 a0 00              s0 = u64 [s1 + 0xa0]
  2856: 82 6b a8 00              a4 = u64 [s1 + 0xa8]
  2860: 82 66 98 00              s1 = u64 [s1 + 0x98]
  2864: 33 07 02                 a0 = 0x2
  2867: 33 08                    a1 = 0
  2869: 33 09                    a2 = 0
  2871: 64 5a                    a3 = s0
  2873: 33 00 40                 ra = 0x40
  2876: 0a 64                    ecalli 100 // 'log'
  2878: 01                       fallthrough
      :                          @155 [@dyn 32]
  2879: 82 17 90 00              a0 = u64 [sp + 0x90]
  2883: c8 67 07                 a0 = a0 + s1
  2886: 82 1c 58                 a5 = u64 [sp + 0x58]
  2889: 33 02 00 10              t0 = 0x1000
  2893: 53 27 00 f0 b9 fa        jump @94 if a0 <u 4294963200
      :                          @156
  2899: c8 2c 08                 a1 = a5 + t0
  2902: 82 87                    a0 = u64 [a1]
  2904: c9 78 09                 a2 = a1 - a0
  2907: ab 59 ab fa              jump @94 if a2 != s0
      :                          @157
  2911: c9 67 09                 a2 = a0 - s1
  2914: 01                       fallthrough
      :                          @158
  2915: 82 8a                    a3 = u64 [a1]
  2917: ab 7a ee                 jump @156 if a3 != a0
      :                          @159
  2920: 7b 89                    u64 [a1] = a2
  2922: 33 0b                    a4 = 0
  2924: 01                       fallthrough
      :                          @160
  2925: ab 7a e6                 jump @156 if a3 != a0
      :                          @161
  2928: 28 96 fa                 jump @94
      :                          @162
  2931: 82 17 00 03              a0 = u64 [sp + 0x300]
  2935: 7b 17 60                 u64 [sp + 0x60] = a0
  2938: 51 07 ed 00              jump @175 if a0 == 0
      :                          @163
  2942: 33 08                    a1 = 0
  2944: 33 07 40 06 01           a0 = 0x10640
  2949: 7b 17 50                 u64 [sp + 0x50] = a0
  2952: 95 c6 00 10              s1 = a5 + 0x1000
  2956: 28 0f                    jump @165
      :                          @164
  2958: 82 18 78                 a1 = u64 [sp + 0x78]
  2961: 95 88 01                 a1 = a1 + 0x1
  2964: 82 17 60                 a0 = u64 [sp + 0x60]
  2967: aa 78 d0 00              jump @175 if a1 == a0
      :                          @165
  2971: 95 15 40 43              s0 = sp + 0x4340
  2975: 7b 58 80 00              u64 [s0 + 0x80] = a1
  2979: 51 18 10 d8 00           jump @177 if a1 == 16
      :                          @166
  2984: 7b 18 78                 u64 [sp + 0x78] = a1
  2987: 97 87 02                 a0 = a1 << 0x2
  2990: 95 18 c0 02              a1 = sp + 0x2c0
  2994: c8 87 07                 a0 = a0 + a1
  2997: 80 77                    a0 = u32 [a0]
  2999: 0a 1a                    ecalli 26 // 'expunge'
  3001: 0a                       ecalli 0 // 'gas'
  3002: 7b 17 08 03              u64 [sp + 0x308] = a0
  3006: 95 17 c0 43              a0 = sp + 0x43c0
  3010: 7b 57 c8 00              u64 [s0 + 0xc8] = a0
  3014: 82 17 88 00              a0 = u64 [sp + 0x88]
  3018: 7b 57 d0 00              u64 [s0 + 0xd0] = a0
  3022: 82 18 80 00              a1 = u64 [sp + 0x80]
  3026: 7b 58 d8 00              u64 [s0 + 0xd8] = a1
  3030: 7b 57 e0 00              u64 [s0 + 0xe0] = a0
  3034: 95 18 17 54              a1 = sp + 0x5417
  3038: 7b 58 e8 00              u64 [s0 + 0xe8] = a1
  3042: 82 18 68                 a1 = u64 [sp + 0x68]
  3045: 7b 58 f0 00              u64 [s0 + 0xf0] = a1
  3049: 95 18 08 03              a1 = sp + 0x308
  3053: 7b 58 f8 00              u64 [s0 + 0xf8] = a1
  3057: 7b 57 00 01              u64 [s0 + 0x100] = a0
  3061: 82 17 50                 a0 = u64 [sp + 0x50]
  3064: 7b 57 10                 u64 [s0 + 0x10] = a0
  3067: 49 15 18 04              u64 [s0 + 24] = 0x4
  3071: 49 15 30                 u64 [s0 + 48] = 0
  3074: 95 18 08 44              a1 = sp + 0x4408
  3078: 7b 58 20                 u64 [s0 + 0x20] = a1
  3081: 49 15 28 04              u64 [s0 + 40] = 0x4
  3085: 95 17 d8 43              a0 = sp + 0x43d8
  3089: 95 18 50 43              a1 = sp + 0x4350
  3093: 50 10 42 df 1f           ra = 66, jump @633
      :                          @167 [@dyn 33]
  3098: 64 57                    a0 = s0
  3100: 82 55 a0 00              s0 = u64 [s0 + 0xa0]
  3104: 82 7b a8 00              a4 = u64 [a0 + 0xa8]
  3108: 82 77 98 00              a0 = u64 [a0 + 0x98]
  3112: 7b 17 70                 u64 [sp + 0x70] = a0
  3115: 33 07 02                 a0 = 0x2
  3118: 33 08                    a1 = 0
  3120: 33 09                    a2 = 0
  3122: 64 5a                    a3 = s0
  3124: 33 00 44                 ra = 0x44
  3127: 0a 64                    ecalli 100 // 'log'
  3129: 01                       fallthrough
      :                          @168 [@dyn 34]
  3130: 82 1b 70                 a4 = u64 [sp + 0x70]
  3133: 82 17 90 00              a0 = u64 [sp + 0x90]
  3137: c8 b7 07                 a0 = a0 + a4
  3140: 53 27 00 f0 4a ff        jump @164 if a0 <u 4294963200
      :                          @169
  3146: 82 67                    a0 = u64 [s1]
  3148: c9 76 08                 a1 = s1 - a0
  3151: ab 58 3f ff              jump @164 if a1 != s0
      :                          @170
  3155: c9 b7 08                 a1 = a0 - a4
  3158: 01                       fallthrough
      :                          @171
  3159: 82 69                    a2 = u64 [s1]
  3161: ab 79 f1                 jump @169 if a2 != a0
      :                          @172
  3164: 7b 68                    u64 [s1] = a1
  3166: 33 0a                    a3 = 0
  3168: 01                       fallthrough
      :                          @173
  3169: ab 79 e9                 jump @169 if a2 != a0
      :                          @174
  3172: 28 2a ff                 jump @164
      :                          @175
  3175: 95 15 38 43              s0 = sp + 0x4338
  3179: 33 08 10                 a1 = 0x10
  3182: 28 10 f5                 jump @31
      :                          @176
  3185: 33 08                    a1 = 0
  3187: 33 05 00 00 01           s0 = 0x10000
  3192: 28 06 f5                 jump @31
      :                          @177
  3195: 00                       trap
      :                          @178
  3196: 00                       trap
      :                          @179
  3197: 00                       trap
      :                          @180
  3198: 33 09 08 10              a2 = 0x1008
  3202: 95 17 30 33              a0 = sp + 0x3330
  3206: 33 08                    a1 = 0
  3208: 50 10 46 93 22           ra = 70, jump @701
      :                          @181 [@dyn 35]
  3213: 95 17 40 43              a0 = sp + 0x4340
  3217: 49 17 f8                 u64 [a0 + 4294967288] = 0
  3220: 49 07                    u64 [a0 + 0] = 0
  3222: 00                       trap
      :                          @182 [export #1: 'accumulate']
  3223: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  3227: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  3231: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  3235: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  3239: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  3243: 33 09 08                 a2 = 0x8
  3246: ac 98 08 01              jump @215 if a1 <u a2
      :                          @183
  3250: 52 07 06                 jump @185 if a0 != 0
      :                          @184
  3253: 28 00 1d                 jump @571
      :                          @185
  3256: 95 79 04                 a2 = a0 + 0x4
  3259: 52 09 06                 jump @187 if a2 != 0
      :                          @186
  3262: 28 f8 1c                 jump @572
      :                          @187
  3265: 7c 79 04                 a2 = u8 [a0 + 0x4]
  3268: 7b 19 40                 u64 [sp + 0x40] = a2
  3271: 7c 79 05                 a2 = u8 [a0 + 0x5]
  3274: 7b 19 28                 u64 [sp + 0x28] = a2
  3277: 7c 79 06                 a2 = u8 [a0 + 0x6]
  3280: 7b 19 38                 u64 [sp + 0x38] = a2
  3283: 7c 79 07                 a2 = u8 [a0 + 0x7]
  3286: 7b 19 30                 u64 [sp + 0x30] = a2
  3289: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  3292: 95 75 08                 s0 = a0 + 0x8
  3295: 51 0a 45                 jump @197 if a3 == 0
      :                          @188
  3298: 7d 58                    a1 = i8 [s0]
  3300: 33 06 01                 s1 = 0x1
  3303: 59 08 40                 jump @198 if a1 >=s 0
      :                          @189
  3306: 84 89 ff 00              a2 = a1 & 0xff
  3310: 33 06 02                 s1 = 0x2
  3313: 53 29 c0 00 2d           jump @195 if a2 <u 192
      :                          @190
  3318: 33 06 03                 s1 = 0x3
  3321: 53 29 e0 00 25           jump @195 if a2 <u 224
      :                          @191
  3326: 33 06 04                 s1 = 0x4
  3329: 53 29 f0 00 1d           jump @195 if a2 <u 240
      :                          @192
  3334: 33 06 05                 s1 = 0x5
  3337: 53 29 f8 00 15           jump @195 if a2 <u 248
      :                          @193
  3342: 33 06 06                 s1 = 0x6
  3345: 53 29 fc 00 0d           jump @195 if a2 <u 252
      :                          @194
  3350: 88 98 fe 00              a1 = a2 <u 0xfe
  3354: 9a 86 08                 s1 = 0x8 - a1
  3357: 01                       fallthrough
      :                          @195
  3358: ae 6a 09                 jump @198 if a3 >=u s1
      :                          @196
  3361: 28 95 00                 jump @215
      :                          @197
  3364: 33 06                    s1 = 0
  3366: 01                       fallthrough
      :                          @198
  3367: 7b 16 48                 u64 [sp + 0x48] = s1
  3370: 64 57                    a0 = s0
  3372: 64 68                    a1 = s1
  3374: 64 a6                    s1 = a3
  3376: 50 10 48 21 2e           ra = 72, jump @943
      :                          @199 [@dyn 36]
  3381: 82 1a 48                 a3 = u64 [sp + 0x48]
  3384: 51 07 7e                 jump @215 if a0 == 0
      :                          @200
  3387: e4 a6 07                 a0 = maxu(s1, a3)
  3390: c9 a7 07                 a0 = a0 - a3
  3393: 53 17 60 75              jump @215 if a0 <u 96
      :                          @201
  3397: c8 5a 08                 a1 = a3 + s0
  3400: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  3403: 95 87 60                 a0 = a1 + 0x60
  3406: 7b 17 48                 u64 [sp + 0x48] = a0
  3409: 51 06 4e                 jump @213 if s1 == 0
      :                          @202
  3412: 7d 78                    a1 = i8 [a0]
  3414: 33 05 01                 s0 = 0x1
  3417: 59 08 37                 jump @209 if a1 >=s 0
      :                          @203
  3420: 84 89 ff 00              a2 = a1 & 0xff
  3424: 33 05 02                 s0 = 0x2
  3427: 53 29 c0 00 2d           jump @209 if a2 <u 192
      :                          @204
  3432: 33 05 03                 s0 = 0x3
  3435: 53 29 e0 00 25           jump @209 if a2 <u 224
      :                          @205
  3440: 33 05 04                 s0 = 0x4
  3443: 53 29 f0 00 1d           jump @209 if a2 <u 240
      :                          @206
  3448: 33 05 05                 s0 = 0x5
  3451: 53 29 f8 00 15           jump @209 if a2 <u 248
      :                          @207
  3456: 33 05 06                 s0 = 0x6
  3459: 53 29 fc 00 0d           jump @209 if a2 <u 252
      :                          @208
  3464: 88 98 fe 00              a1 = a2 <u 0xfe
  3468: 9a 85 08                 s0 = 0x8 - a1
  3471: 01                       fallthrough
      :                          @209
  3472: ae 56 06                 jump @211 if s1 >=u s0
      :                          @210
  3475: 28 24 1c                 jump @573
      :                          @211
  3478: 64 58                    a1 = s0
  3480: 50 10 4a b9 2d           ra = 74, jump @943
      :                          @212 [@dyn 37]
  3485: 28 07                    jump @214
      :                          @213
  3487: 33 05                    s0 = 0
  3489: 33 07                    a0 = 0
  3491: 01                       fallthrough
      :                          @214
  3492: e4 56 08                 a1 = maxu(s1, s0)
  3495: c9 58 08                 a1 = a1 - s0
  3498: e4 78 08                 a1 = maxu(a1, a0)
  3501: c9 78 08                 a1 = a1 - a0
  3504: 33 09 21                 a2 = 0x21
  3507: ae 98 23                 jump @217 if a1 >=u a2
      :                          @215
  3510: 33 08                    a1 = 0
  3512: 33 05 00 00 01           s0 = 0x10000
  3517: 01                       fallthrough
      :                          @216
  3518: 64 57                    a0 = s0
  3520: 95 11 40 04              sp = sp + 0x440
  3524: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3528: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3532: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3536: 95 11 f8 07              sp = sp + 0x7f8
  3540: 32 00                    ret
      :                          @217
  3542: 82 19 48                 a2 = u64 [sp + 0x48]
  3545: c8 95 05                 s0 = s0 + a2
  3548: c8 57 07                 a0 = a0 + s0
  3551: 7c 79 20                 a2 = u8 [a0 + 0x20]
  3554: 51 09 0a                 jump @219 if a2 == 0
      :                          @218
  3557: 33 06                    s1 = 0
  3559: 33 0a                    a3 = 0
  3561: 28 85 00                 jump @234
      :                          @219
  3564: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  3567: 95 75 21                 s0 = a0 + 0x21
  3570: 51 0a 56                 jump @231 if a3 == 0
      :                          @220
  3573: 7d 57                    a0 = i8 [s0]
  3575: 33 06 01                 s1 = 0x1
  3578: 59 07 37                 jump @227 if a0 >=s 0
      :                          @221
  3581: 84 77 ff 00              a0 = a0 & 0xff
  3585: 33 06 02                 s1 = 0x2
  3588: 53 27 c0 00 2d           jump @227 if a0 <u 192
      :                          @222
  3593: 33 06 03                 s1 = 0x3
  3596: 53 27 e0 00 25           jump @227 if a0 <u 224
      :                          @223
  3601: 33 06 04                 s1 = 0x4
  3604: 53 27 f0 00 1d           jump @227 if a0 <u 240
      :                          @224
  3609: 33 06 05                 s1 = 0x5
  3612: 53 27 f8 00 15           jump @227 if a0 <u 248
      :                          @225
  3617: 33 06 06                 s1 = 0x6
  3620: 53 27 fc 00 0d           jump @227 if a0 <u 252
      :                          @226
  3625: 88 77 fe 00              a0 = a0 <u 0xfe
  3629: 9a 76 08                 s1 = 0x8 - a0
  3632: 01                       fallthrough
      :                          @227
  3633: 7b 1a 48                 u64 [sp + 0x48] = a3
  3636: ae 6a 06                 jump @229 if a3 >=u s1
      :                          @228
  3639: 28 82 1b                 jump @575
      :                          @229
  3642: 64 57                    a0 = s0
  3644: 64 68                    a1 = s1
  3646: 50 10 4c 13 2d           ra = 76, jump @943
      :                          @230 [@dyn 38]
  3651: 82 1a 48                 a3 = u64 [sp + 0x48]
  3654: 28 07                    jump @232
      :                          @231
  3656: 33 06                    s1 = 0
  3658: 33 07                    a0 = 0
  3660: 01                       fallthrough
      :                          @232
  3661: e4 6a 08                 a1 = maxu(a3, s1)
  3664: c9 68 08                 a1 = a1 - s1
  3667: e6 78 0a                 a3 = minu(a1, a0)
  3670: c8 56 06                 s1 = s1 + s0
  3673: 52 1a 24 15              jump @234 if a3 != 36
      :                          @233
  3677: 80 68 20                 a1 = u32 [s1 + 0x20]
  3680: 64 67                    a0 = s1
  3682: 0a 0e                    ecalli 14 // 'solicit'
  3684: 33 08                    a1 = 0
  3686: 33 05 00 00 01           s0 = 0x10000
  3691: 28 53 ff                 jump @216
      :                          @234
  3694: 82 17 28                 a0 = u64 [sp + 0x28]
  3697: 97 77 08                 a0 = a0 << 0x8
  3700: 82 18 40                 a1 = u64 [sp + 0x40]
  3703: d4 87 07                 a0 = a0 | a1
  3706: 82 18 38                 a1 = u64 [sp + 0x38]
  3709: 97 88 10                 a1 = a1 << 0x10
  3712: 82 19 30                 a2 = u64 [sp + 0x30]
  3715: 97 99 18                 a2 = a2 << 0x18
  3718: d4 98 08                 a1 = a1 | a2
  3721: d4 87 07                 a0 = a0 | a1
  3724: 7b 17 30                 u64 [sp + 0x30] = a0
  3727: 46 11 51                 u8 [sp + 81] = 0
  3730: 81 65                    s0 = i32 [s1]
  3732: 95 17 51                 a0 = sp + 0x51
  3735: 33 08 01                 a1 = 0x1
  3738: 7b 16 18                 u64 [sp + 0x18] = s1
  3741: 64 69                    a2 = s1
  3743: 7b 1a 20                 u64 [sp + 0x20] = a3
  3746: 0a 03                    ecalli 3 // 'write'
  3748: 46 11 52 6a              u8 [sp + 82] = 0x6a
  3752: 46 11 53 61              u8 [sp + 83] = 0x61
  3756: 46 11 54 6d              u8 [sp + 84] = 0x6d
  3760: 46 11 55 44              u8 [sp + 85] = 0x44
  3764: 46 11 56 4f              u8 [sp + 86] = 0x4f
  3768: 46 11 57 54              u8 [sp + 87] = 0x54
  3772: 46 11 58 6a              u8 [sp + 88] = 0x6a
  3776: 46 11 59 0d              u8 [sp + 89] = 0xd
  3780: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  3784: 46 11 5b 19              u8 [sp + 91] = 0x19
  3788: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  3793: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  3798: 46 11 5e 50              u8 [sp + 94] = 0x50
  3802: 46 11 5f 57              u8 [sp + 95] = 0x57
  3806: 46 11 60 13              u8 [sp + 96] = 0x13
  3810: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  3815: 46 11 62 65              u8 [sp + 98] = 0x65
  3819: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  3824: 46 11 64 31              u8 [sp + 100] = 0x31
  3828: 46 11 65 03              u8 [sp + 101] = 0x3
  3832: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  3837: 46 11 67 73              u8 [sp + 103] = 0x73
  3841: 33 0b f1 00              a4 = 0xf1
  3845: 78 1b 68                 u8 [sp + 0x68] = a4
  3848: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  3853: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  3858: 46 11 6b 64              u8 [sp + 107] = 0x64
  3862: 46 11 6c 56              u8 [sp + 108] = 0x56
  3866: 46 11 6d 32              u8 [sp + 109] = 0x32
  3870: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  3875: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  3880: 46 11 70 50              u8 [sp + 112] = 0x50
  3884: 33 0c 3c                 a5 = 0x3c
  3887: 78 1c 71                 u8 [sp + 0x71] = a5
  3890: 46 11 72 4f              u8 [sp + 114] = 0x4f
  3894: 46 11 73 0c              u8 [sp + 115] = 0xc
  3898: 46 11 74 4d              u8 [sp + 116] = 0x4d
  3902: 46 11 75 5e              u8 [sp + 117] = 0x5e
  3906: 46 11 76 19              u8 [sp + 118] = 0x19
  3910: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  3915: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  3920: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  3925: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  3930: 46 11 7b 0f              u8 [sp + 123] = 0xf
  3934: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  3939: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  3944: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  3949: 46 11 7f 47              u8 [sp + 127] = 0x47
  3953: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  3959: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  3964: 78 1c 82 00              u8 [sp + 0x82] = a5
  3968: 78 1b 83 00              u8 [sp + 0x83] = a4
  3972: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  3978: 95 16 ff 07              s1 = sp + 0x7ff
  3982: 95 66 99 03              s1 = s1 + 0x399
  3986: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  3991: 46 21 86 00 49           u8 [sp + 134] = 0x49
  3996: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  4002: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  4008: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  4014: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  4020: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  4026: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  4032: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  4037: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  4042: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  4047: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  4053: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  4059: 46 21 92 00 33           u8 [sp + 146] = 0x33
  4064: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  4069: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  4075: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  4081: 46 21 96 00 55           u8 [sp + 150] = 0x55
  4086: 46 21 97 00 07           u8 [sp + 151] = 0x7
  4091: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  4096: 95 17 98 00              a0 = sp + 0x98
  4100: 33 09 00 01              a2 = 0x100
  4104: 33 08                    a1 = 0
  4106: 50 10 4e 11 1f           ra = 78, jump @701
      :                          @235 [@dyn 39]
  4111: 7b 15 28                 u64 [sp + 0x28] = s0
  4114: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  4117: 33 09 38 00 01           a2 = 0x10038
  4122: 7b 19 38                 u64 [sp + 0x38] = a2
  4125: 33 09 04                 a2 = 0x4
  4128: 7b 19 40                 u64 [sp + 0x40] = a2
  4131: 54 17 09 07              jump @237 if a0 <=u 9
      :                          @236
  4135: 28 b1 17                 jump @544
      :                          @237
  4138: 97 77 02                 a0 = a0 << 0x2
  4141: 33 08 00 00 01           a1 = 0x10000
  4146: c8 87 07                 a0 = a0 + a1
  4149: 81 77                    a0 = i32 [a0]
  4151: c8 87 07                 a0 = a0 + a1
  4154: 32 07                    jump [a0]
      :                          @238 [@dyn 40]
  4156: 95 18 52                 a1 = sp + 0x52
  4159: 33 09 03                 a2 = 0x3
  4162: 95 1a 98 00              a3 = sp + 0x98
  4166: 33 0c 00 01              a5 = 0x100
  4170: 82 17 30                 a0 = u64 [sp + 0x30]
  4173: 33 0b                    a4 = 0
  4175: 0a 02                    ecalli 2 // 'read'
  4177: 7b 67 70                 u64 [s1 + 0x70] = a0
  4180: 33 07 40 00 01           a0 = 0x10040
  4185: 7b 17 10                 u64 [sp + 0x10] = a0
  4188: 7b 67 18                 u64 [s1 + 0x18] = a0
  4191: 82 18 40                 a1 = u64 [sp + 0x40]
  4194: 7b 68 20                 u64 [s1 + 0x20] = a1
  4197: 95 17 ff 07              a0 = sp + 0x7ff
  4201: 95 77 09 04              a0 = a0 + 0x409
  4205: 7b 67 28                 u64 [s1 + 0x28] = a0
  4208: 7b 68 30                 u64 [s1 + 0x30] = a1
  4211: 33 07 40 07 01           a0 = 0x10740
  4216: 7b 17 98 01              u64 [sp + 0x198] = a0
  4220: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4225: 49 21 b8 01              u64 [sp + 440] = 0
  4229: 95 17 ff 07              a0 = sp + 0x7ff
  4233: 95 77 b1 03              a0 = a0 + 0x3b1
  4237: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4241: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4246: 95 17 ff 07              a0 = sp + 0x7ff
  4250: 95 77 e1 03              a0 = a0 + 0x3e1
  4254: 95 18 98 01              a1 = sp + 0x198
  4258: 50 10 52 52 1b           ra = 82, jump @633
      :                          @239 [@dyn 41]
  4263: 82 65 50                 s0 = u64 [s1 + 0x50]
  4266: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4269: 95 17 ff 07              a0 = sp + 0x7ff
  4273: 95 77 99 03              a0 = a0 + 0x399
  4277: 82 76 48                 s1 = u64 [a0 + 0x48]
  4280: 33 07 02                 a0 = 0x2
  4283: 33 08                    a1 = 0
  4285: 33 09                    a2 = 0
  4287: 64 5a                    a3 = s0
  4289: 33 00 54                 ra = 0x54
  4292: 0a 64                    ecalli 100 // 'log'
  4294: 01                       fallthrough
      :                          @240 [@dyn 42]
  4295: 82 17 48                 a0 = u64 [sp + 0x48]
  4298: c8 67 07                 a0 = a0 + s1
  4301: 53 27 00 f0 23           jump @246 if a0 <u 4294963200
      :                          @241
  4306: 33 07 20 00 03           a0 = 0x30020
  4311: 95 77 00 10              a0 = a0 + 0x1000
  4315: 01                       fallthrough
      :                          @242
  4316: 82 78                    a1 = u64 [a0]
  4318: c9 87 09                 a2 = a0 - a1
  4321: ab 59 0f                 jump @246 if a2 != s0
      :                          @243
  4324: c9 68 09                 a2 = a1 - s1
  4327: 01                       fallthrough
      :                          @244
  4328: 82 7a                    a3 = u64 [a0]
  4330: ab 8a f2                 jump @242 if a3 != a1
      :                          @245
  4333: 7b 79                    u64 [a0] = a2
  4335: 01                       fallthrough
      :                          @246
  4336: 95 16 ff 07              s1 = sp + 0x7ff
  4340: 95 66 99 03              s1 = s1 + 0x399
  4344: 82 67 70                 a0 = u64 [s1 + 0x70]
  4347: 33 08 01                 a1 = 0x1
  4350: 50 10 56 f1 2a           ra = 86, jump @967
      :                          @247 [@dyn 43]
  4355: 95 17 52                 a0 = sp + 0x52
  4358: 33 08 03                 a1 = 0x3
  4361: 95 19 55                 a2 = sp + 0x55
  4364: 33 0a 03                 a3 = 0x3
  4367: 0a 03                    ecalli 3 // 'write'
  4369: 7b 67 78                 u64 [s1 + 0x78] = a0
  4372: 82 17 10                 a0 = u64 [sp + 0x10]
  4375: 7b 67 18                 u64 [s1 + 0x18] = a0
  4378: 95 17 ff 07              a0 = sp + 0x7ff
  4382: 95 77 11 04              a0 = a0 + 0x411
  4386: 7b 67 28                 u64 [s1 + 0x28] = a0
  4389: 33 07 70 07 01           a0 = 0x10770
  4394: 7b 17 98 01              u64 [sp + 0x198] = a0
  4398: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4403: 49 21 b8 01              u64 [sp + 440] = 0
  4407: 95 17 ff 07              a0 = sp + 0x7ff
  4411: 95 77 b1 03              a0 = a0 + 0x3b1
  4415: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4419: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4424: 82 17 40                 a0 = u64 [sp + 0x40]
  4427: 7b 67 20                 u64 [s1 + 0x20] = a0
  4430: 7b 67 30                 u64 [s1 + 0x30] = a0
  4433: 95 17 ff 07              a0 = sp + 0x7ff
  4437: 95 77 e1 03              a0 = a0 + 0x3e1
  4441: 95 18 98 01              a1 = sp + 0x198
  4445: 50 10 58 97 1a           ra = 88, jump @633
      :                          @248 [@dyn 44]
  4450: 82 65 50                 s0 = u64 [s1 + 0x50]
  4453: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4456: 82 66 48                 s1 = u64 [s1 + 0x48]
  4459: 33 07 02                 a0 = 0x2
  4462: 33 08                    a1 = 0
  4464: 33 09                    a2 = 0
  4466: 64 5a                    a3 = s0
  4468: 33 00 5a                 ra = 0x5a
  4471: 0a 64                    ecalli 100 // 'log'
  4473: 01                       fallthrough
      :                          @249 [@dyn 45]
  4474: 82 17 48                 a0 = u64 [sp + 0x48]
  4477: c8 67 07                 a0 = a0 + s1
  4480: 53 27 00 f0 23           jump @255 if a0 <u 4294963200
      :                          @250
  4485: 33 07 20 00 03           a0 = 0x30020
  4490: 95 77 00 10              a0 = a0 + 0x1000
  4494: 01                       fallthrough
      :                          @251
  4495: 82 78                    a1 = u64 [a0]
  4497: c9 87 09                 a2 = a0 - a1
  4500: ab 59 0f                 jump @255 if a2 != s0
      :                          @252
  4503: c9 68 09                 a2 = a1 - s1
  4506: 01                       fallthrough
      :                          @253
  4507: 82 7a                    a3 = u64 [a0]
  4509: ab 8a f2                 jump @251 if a3 != a1
      :                          @254
  4512: 7b 79                    u64 [a0] = a2
  4514: 01                       fallthrough
      :                          @255
  4515: 95 16 ff 07              s1 = sp + 0x7ff
  4519: 95 66 99 03              s1 = s1 + 0x399
  4523: 82 67 78                 a0 = u64 [s1 + 0x78]
  4526: 33 08 02                 a1 = 0x2
  4529: 33 05 02                 s0 = 0x2
  4532: 50 10 5c 3b 2a           ra = 92, jump @967
      :                          @256 [@dyn 46]
  4537: 95 18 52                 a1 = sp + 0x52
  4540: 33 09 03                 a2 = 0x3
  4543: 95 1a 98 00              a3 = sp + 0x98
  4547: 33 0c 00 01              a5 = 0x100
  4551: 82 17 30                 a0 = u64 [sp + 0x30]
  4554: 33 0b                    a4 = 0
  4556: 0a 02                    ecalli 2 // 'read'
  4558: 7b 67 80 00              u64 [s1 + 0x80] = a0
  4562: 82 17 38                 a0 = u64 [sp + 0x38]
  4565: 7b 67 18                 u64 [s1 + 0x18] = a0
  4568: 82 18 40                 a1 = u64 [sp + 0x40]
  4571: 7b 68 20                 u64 [s1 + 0x20] = a1
  4574: 95 17 ff 07              a0 = sp + 0x7ff
  4578: 95 77 19 04              a0 = a0 + 0x419
  4582: 7b 67 28                 u64 [s1 + 0x28] = a0
  4585: 7b 68 30                 u64 [s1 + 0x30] = a1
  4588: 33 07 a0 07 01           a0 = 0x107a0
  4593: 7b 17 98 01              u64 [sp + 0x198] = a0
  4597: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4602: 49 21 b8 01              u64 [sp + 440] = 0
  4606: 95 17 ff 07              a0 = sp + 0x7ff
  4610: 95 77 b1 03              a0 = a0 + 0x3b1
  4614: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4618: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  4622: 95 17 ff 07              a0 = sp + 0x7ff
  4626: 95 77 e1 03              a0 = a0 + 0x3e1
  4630: 95 18 98 01              a1 = sp + 0x198
  4634: 50 10 5e da 19           ra = 94, jump @633
      :                          @257 [@dyn 47]
  4639: 82 65 50                 s0 = u64 [s1 + 0x50]
  4642: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4645: 82 66 48                 s1 = u64 [s1 + 0x48]
  4648: 33 07 02                 a0 = 0x2
  4651: 33 08                    a1 = 0
  4653: 33 09                    a2 = 0
  4655: 64 5a                    a3 = s0
  4657: 33 00 60                 ra = 0x60
  4660: 0a 64                    ecalli 100 // 'log'
  4662: 01                       fallthrough
      :                          @258 [@dyn 48]
  4663: 82 17 48                 a0 = u64 [sp + 0x48]
  4666: c8 67 07                 a0 = a0 + s1
  4669: 53 27 00 f0 23           jump @264 if a0 <u 4294963200
      :                          @259
  4674: 33 07 20 00 03           a0 = 0x30020
  4679: 95 77 00 10              a0 = a0 + 0x1000
  4683: 01                       fallthrough
      :                          @260
  4684: 82 78                    a1 = u64 [a0]
  4686: c9 87 09                 a2 = a0 - a1
  4689: ab 59 0f                 jump @264 if a2 != s0
      :                          @261
  4692: c9 68 09                 a2 = a1 - s1
  4695: 01                       fallthrough
      :                          @262
  4696: 82 7a                    a3 = u64 [a0]
  4698: ab 8a f2                 jump @260 if a3 != a1
      :                          @263
  4701: 7b 79                    u64 [a0] = a2
  4703: 01                       fallthrough
      :                          @264
  4704: 95 16 ff 07              s1 = sp + 0x7ff
  4708: 95 66 99 03              s1 = s1 + 0x399
  4712: 82 67 80 00              a0 = u64 [s1 + 0x80]
  4716: 33 08 05                 a1 = 0x5
  4719: 50 10 62 80 29           ra = 98, jump @967
      :                          @265 [@dyn 49]
  4724: 95 17 52                 a0 = sp + 0x52
  4727: 33 08                    a1 = 0
  4729: 0a 0f                    ecalli 15 // 'forget'
  4731: 7b 67                    u64 [s1] = a0
  4733: 33 07 48 00 01           a0 = 0x10048
  4738: 7b 67 18                 u64 [s1 + 0x18] = a0
  4741: 33 07 d0 07 01           a0 = 0x107d0
  4746: 7b 17 98 01              u64 [sp + 0x198] = a0
  4750: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4755: 49 21 b8 01              u64 [sp + 440] = 0
  4759: 95 17 ff 07              a0 = sp + 0x7ff
  4763: 95 77 b1 03              a0 = a0 + 0x3b1
  4767: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4771: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4776: 82 17 40                 a0 = u64 [sp + 0x40]
  4779: 7b 67 20                 u64 [s1 + 0x20] = a0
  4782: 7b 66 28                 u64 [s1 + 0x28] = s1
  4785: 7b 67 30                 u64 [s1 + 0x30] = a0
  4788: 95 17 ff 07              a0 = sp + 0x7ff
  4792: 95 77 e1 03              a0 = a0 + 0x3e1
  4796: 95 18 98 01              a1 = sp + 0x198
  4800: 50 10 64 34 19           ra = 100, jump @633
      :                          @266 [@dyn 50]
  4805: 82 65 50                 s0 = u64 [s1 + 0x50]
  4808: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4811: 82 66 48                 s1 = u64 [s1 + 0x48]
  4814: 33 07 02                 a0 = 0x2
  4817: 33 08                    a1 = 0
  4819: 33 09                    a2 = 0
  4821: 64 5a                    a3 = s0
  4823: 33 00 66                 ra = 0x66
  4826: 0a 64                    ecalli 100 // 'log'
  4828: 01                       fallthrough
      :                          @267 [@dyn 51]
  4829: 82 17 48                 a0 = u64 [sp + 0x48]
  4832: c8 67 07                 a0 = a0 + s1
  4835: 53 27 00 f0 f6 09        jump @402 if a0 <u 4294963200
      :                          @268
  4841: 33 07 20 00 03           a0 = 0x30020
  4846: 95 77 00 10              a0 = a0 + 0x1000
  4850: 01                       fallthrough
      :                          @269
  4851: 82 78                    a1 = u64 [a0]
  4853: c9 87 09                 a2 = a0 - a1
  4856: ab 59 e1 09              jump @402 if a2 != s0
      :                          @270
  4860: c9 68 09                 a2 = a1 - s1
  4863: 01                       fallthrough
      :                          @271
  4864: 82 7a                    a3 = u64 [a0]
  4866: ab 8a f1                 jump @269 if a3 != a1
      :                          @272
  4869: 7b 79                    u64 [a0] = a2
  4871: 33 0b                    a4 = 0
  4873: 01                       fallthrough
      :                          @273
  4874: ab 8a e9                 jump @269 if a3 != a1
      :                          @274
  4877: 28 cc 09                 jump @402
      :                          @275 [@dyn 52]
  4880: 95 18 52                 a1 = sp + 0x52
  4883: 33 09 03                 a2 = 0x3
  4886: 95 1a 98 00              a3 = sp + 0x98
  4890: 33 0c 00 01              a5 = 0x100
  4894: 82 17 30                 a0 = u64 [sp + 0x30]
  4897: 33 0b                    a4 = 0
  4899: 0a 02                    ecalli 2 // 'read'
  4901: 7b 67 78                 u64 [s1 + 0x78] = a0
  4904: 82 17 38                 a0 = u64 [sp + 0x38]
  4907: 7b 67 18                 u64 [s1 + 0x18] = a0
  4910: 82 18 40                 a1 = u64 [sp + 0x40]
  4913: 7b 68 20                 u64 [s1 + 0x20] = a1
  4916: 95 17 ff 07              a0 = sp + 0x7ff
  4920: 95 77 11 04              a0 = a0 + 0x411
  4924: 7b 67 28                 u64 [s1 + 0x28] = a0
  4927: 7b 68 30                 u64 [s1 + 0x30] = a1
  4930: 33 07 00 08 01           a0 = 0x10800
  4935: 7b 17 98 01              u64 [sp + 0x198] = a0
  4939: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  4944: 49 21 b8 01              u64 [sp + 440] = 0
  4948: 95 17 ff 07              a0 = sp + 0x7ff
  4952: 95 77 b1 03              a0 = a0 + 0x3b1
  4956: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  4960: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  4965: 95 17 ff 07              a0 = sp + 0x7ff
  4969: 95 77 e1 03              a0 = a0 + 0x3e1
  4973: 95 18 98 01              a1 = sp + 0x198
  4977: 50 10 6a 83 18           ra = 106, jump @633
      :                          @276 [@dyn 53]
  4982: 82 65 50                 s0 = u64 [s1 + 0x50]
  4985: 82 6b 58                 a4 = u64 [s1 + 0x58]
  4988: 95 17 ff 07              a0 = sp + 0x7ff
  4992: 95 77 99 03              a0 = a0 + 0x399
  4996: 82 76 48                 s1 = u64 [a0 + 0x48]
  4999: 33 07 02                 a0 = 0x2
  5002: 33 08                    a1 = 0
  5004: 33 09                    a2 = 0
  5006: 64 5a                    a3 = s0
  5008: 33 00 6c                 ra = 0x6c
  5011: 0a 64                    ecalli 100 // 'log'
  5013: 01                       fallthrough
      :                          @277 [@dyn 54]
  5014: 82 17 48                 a0 = u64 [sp + 0x48]
  5017: c8 67 07                 a0 = a0 + s1
  5020: 53 27 00 f0 23           jump @283 if a0 <u 4294963200
      :                          @278
  5025: 33 07 20 00 03           a0 = 0x30020
  5030: 95 77 00 10              a0 = a0 + 0x1000
  5034: 01                       fallthrough
      :                          @279
  5035: 82 78                    a1 = u64 [a0]
  5037: c9 87 09                 a2 = a0 - a1
  5040: ab 59 0f                 jump @283 if a2 != s0
      :                          @280
  5043: c9 68 09                 a2 = a1 - s1
  5046: 01                       fallthrough
      :                          @281
  5047: 82 7a                    a3 = u64 [a0]
  5049: ab 8a f2                 jump @279 if a3 != a1
      :                          @282
  5052: 7b 79                    u64 [a0] = a2
  5054: 01                       fallthrough
      :                          @283
  5055: 95 16 ff 07              s1 = sp + 0x7ff
  5059: 95 66 99 03              s1 = s1 + 0x399
  5063: 82 67 78                 a0 = u64 [s1 + 0x78]
  5066: 33 08 01                 a1 = 0x1
  5069: 50 10 6e 22 28           ra = 110, jump @967
      :                          @284 [@dyn 55]
  5074: 95 17 52                 a0 = sp + 0x52
  5077: 33 08 03                 a1 = 0x3
  5080: 33 09                    a2 = 0
  5082: 33 0a                    a3 = 0
  5084: 0a 03                    ecalli 3 // 'write'
  5086: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5090: 95 17 ff 07              a0 = sp + 0x7ff
  5094: 95 77 19 04              a0 = a0 + 0x419
  5098: 7b 67 28                 u64 [s1 + 0x28] = a0
  5101: 33 07 30 08 01           a0 = 0x10830
  5106: 7b 17 98 01              u64 [sp + 0x198] = a0
  5110: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5115: 49 21 b8 01              u64 [sp + 440] = 0
  5119: 95 17 ff 07              a0 = sp + 0x7ff
  5123: 95 77 b1 03              a0 = a0 + 0x3b1
  5127: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5131: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5136: 82 17 38                 a0 = u64 [sp + 0x38]
  5139: 7b 67 18                 u64 [s1 + 0x18] = a0
  5142: 82 17 40                 a0 = u64 [sp + 0x40]
  5145: 7b 67 20                 u64 [s1 + 0x20] = a0
  5148: 7b 67 30                 u64 [s1 + 0x30] = a0
  5151: 95 17 ff 07              a0 = sp + 0x7ff
  5155: 95 77 e1 03              a0 = a0 + 0x3e1
  5159: 95 18 98 01              a1 = sp + 0x198
  5163: 50 10 70 c9 17           ra = 112, jump @633
      :                          @285 [@dyn 56]
  5168: 82 65 50                 s0 = u64 [s1 + 0x50]
  5171: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5174: 82 66 48                 s1 = u64 [s1 + 0x48]
  5177: 33 07 02                 a0 = 0x2
  5180: 33 08                    a1 = 0
  5182: 33 09                    a2 = 0
  5184: 64 5a                    a3 = s0
  5186: 33 00 72                 ra = 0x72
  5189: 0a 64                    ecalli 100 // 'log'
  5191: 01                       fallthrough
      :                          @286 [@dyn 57]
  5192: 82 17 48                 a0 = u64 [sp + 0x48]
  5195: c8 67 07                 a0 = a0 + s1
  5198: 53 27 00 f0 23           jump @292 if a0 <u 4294963200
      :                          @287
  5203: 33 07 20 00 03           a0 = 0x30020
  5208: 95 77 00 10              a0 = a0 + 0x1000
  5212: 01                       fallthrough
      :                          @288
  5213: 82 78                    a1 = u64 [a0]
  5215: c9 87 09                 a2 = a0 - a1
  5218: ab 59 0f                 jump @292 if a2 != s0
      :                          @289
  5221: c9 68 09                 a2 = a1 - s1
  5224: 01                       fallthrough
      :                          @290
  5225: 82 7a                    a3 = u64 [a0]
  5227: ab 8a f2                 jump @288 if a3 != a1
      :                          @291
  5230: 7b 79                    u64 [a0] = a2
  5232: 01                       fallthrough
      :                          @292
  5233: 95 16 ff 07              s1 = sp + 0x7ff
  5237: 95 66 99 03              s1 = s1 + 0x399
  5241: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5245: 33 08 02                 a1 = 0x2
  5248: 33 05 02                 s0 = 0x2
  5251: 50 10 74 6c 27           ra = 116, jump @967
      :                          @293 [@dyn 58]
  5256: 95 18 52                 a1 = sp + 0x52
  5259: 33 09 03                 a2 = 0x3
  5262: 95 1a 98 00              a3 = sp + 0x98
  5266: 33 0c 00 01              a5 = 0x100
  5270: 82 17 30                 a0 = u64 [sp + 0x30]
  5273: 33 0b                    a4 = 0
  5275: 0a 02                    ecalli 2 // 'read'
  5277: 7b 67                    u64 [s1] = a0
  5279: 33 07 40 00 01           a0 = 0x10040
  5284: 7b 67 18                 u64 [s1 + 0x18] = a0
  5287: 33 07 60 08 01           a0 = 0x10860
  5292: 7b 17 98 01              u64 [sp + 0x198] = a0
  5296: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5301: 49 21 b8 01              u64 [sp + 440] = 0
  5305: 95 17 ff 07              a0 = sp + 0x7ff
  5309: 95 77 b1 03              a0 = a0 + 0x3b1
  5313: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5317: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5321: 82 17 40                 a0 = u64 [sp + 0x40]
  5324: 7b 67 20                 u64 [s1 + 0x20] = a0
  5327: 7b 66 28                 u64 [s1 + 0x28] = s1
  5330: 7b 67 30                 u64 [s1 + 0x30] = a0
  5333: 95 17 ff 07              a0 = sp + 0x7ff
  5337: 95 77 e1 03              a0 = a0 + 0x3e1
  5341: 95 18 98 01              a1 = sp + 0x198
  5345: 50 10 76 13 17           ra = 118, jump @633
      :                          @294 [@dyn 59]
  5350: 82 65 50                 s0 = u64 [s1 + 0x50]
  5353: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5356: 82 66 48                 s1 = u64 [s1 + 0x48]
  5359: 33 07 02                 a0 = 0x2
  5362: 33 08                    a1 = 0
  5364: 33 09                    a2 = 0
  5366: 64 5a                    a3 = s0
  5368: 33 00 78                 ra = 0x78
  5371: 0a 64                    ecalli 100 // 'log'
  5373: 01                       fallthrough
      :                          @295 [@dyn 60]
  5374: 82 17 48                 a0 = u64 [sp + 0x48]
  5377: c8 67 07                 a0 = a0 + s1
  5380: 53 27 00 f0 2e 02        jump @329 if a0 <u 4294963200
      :                          @296
  5386: 33 07 20 00 03           a0 = 0x30020
  5391: 95 77 00 10              a0 = a0 + 0x1000
  5395: 01                       fallthrough
      :                          @297
  5396: 82 78                    a1 = u64 [a0]
  5398: c9 87 09                 a2 = a0 - a1
  5401: ab 59 19 02              jump @329 if a2 != s0
      :                          @298
  5405: c9 68 09                 a2 = a1 - s1
  5408: 01                       fallthrough
      :                          @299
  5409: 82 7a                    a3 = u64 [a0]
  5411: ab 8a f1                 jump @297 if a3 != a1
      :                          @300
  5414: 7b 79                    u64 [a0] = a2
  5416: 33 0b                    a4 = 0
  5418: 01                       fallthrough
      :                          @301
  5419: ab 8a e9                 jump @297 if a3 != a1
      :                          @302
  5422: 28 04 02                 jump @329
      :                          @303 [@dyn 61]
  5425: 33 05 03                 s0 = 0x3
  5428: 95 17 58                 a0 = sp + 0x58
  5431: 33 08 03                 a1 = 0x3
  5434: 0a 0e                    ecalli 14 // 'solicit'
  5436: 7b 67 78                 u64 [s1 + 0x78] = a0
  5439: 82 17 38                 a0 = u64 [sp + 0x38]
  5442: 7b 67 18                 u64 [s1 + 0x18] = a0
  5445: 82 18 40                 a1 = u64 [sp + 0x40]
  5448: 7b 68 20                 u64 [s1 + 0x20] = a1
  5451: 95 17 ff 07              a0 = sp + 0x7ff
  5455: 95 77 11 04              a0 = a0 + 0x411
  5459: 7b 67 28                 u64 [s1 + 0x28] = a0
  5462: 7b 68 30                 u64 [s1 + 0x30] = a1
  5465: 33 07 90 08 01           a0 = 0x10890
  5470: 7b 17 98 01              u64 [sp + 0x198] = a0
  5474: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  5478: 49 21 b8 01              u64 [sp + 440] = 0
  5482: 95 17 ff 07              a0 = sp + 0x7ff
  5486: 95 77 b1 03              a0 = a0 + 0x3b1
  5490: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5494: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5499: 95 17 ff 07              a0 = sp + 0x7ff
  5503: 95 77 e1 03              a0 = a0 + 0x3e1
  5507: 95 18 98 01              a1 = sp + 0x198
  5511: 50 10 7c 6d 16           ra = 124, jump @633
      :                          @304 [@dyn 62]
  5516: 82 65 50                 s0 = u64 [s1 + 0x50]
  5519: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5522: 95 17 ff 07              a0 = sp + 0x7ff
  5526: 95 77 99 03              a0 = a0 + 0x399
  5530: 82 76 48                 s1 = u64 [a0 + 0x48]
  5533: 33 07 02                 a0 = 0x2
  5536: 33 08                    a1 = 0
  5538: 33 09                    a2 = 0
  5540: 64 5a                    a3 = s0
  5542: 33 00 7e                 ra = 0x7e
  5545: 0a 64                    ecalli 100 // 'log'
  5547: 01                       fallthrough
      :                          @305 [@dyn 63]
  5548: 82 17 48                 a0 = u64 [sp + 0x48]
  5551: c8 67 07                 a0 = a0 + s1
  5554: 53 27 00 f0 23           jump @311 if a0 <u 4294963200
      :                          @306
  5559: 33 07 20 00 03           a0 = 0x30020
  5564: 95 77 00 10              a0 = a0 + 0x1000
  5568: 01                       fallthrough
      :                          @307
  5569: 82 78                    a1 = u64 [a0]
  5571: c9 87 09                 a2 = a0 - a1
  5574: ab 59 0f                 jump @311 if a2 != s0
      :                          @308
  5577: c9 68 09                 a2 = a1 - s1
  5580: 01                       fallthrough
      :                          @309
  5581: 82 7a                    a3 = u64 [a0]
  5583: ab 8a f2                 jump @307 if a3 != a1
      :                          @310
  5586: 7b 79                    u64 [a0] = a2
  5588: 01                       fallthrough
      :                          @311
  5589: 95 16 ff 07              s1 = sp + 0x7ff
  5593: 95 66 99 03              s1 = s1 + 0x399
  5597: 82 67 78                 a0 = u64 [s1 + 0x78]
  5600: 33 08 01                 a1 = 0x1
  5603: 50 20 80 00 0c 26        ra = 128, jump @967
      :                          @312 [@dyn 64]
  5609: 95 17 58                 a0 = sp + 0x58
  5612: 33 08 03                 a1 = 0x3
  5615: 0a 0d                    ecalli 13 // 'query'
  5617: 7b 67 80 00              u64 [s1 + 0x80] = a0
  5621: 95 17 ff 07              a0 = sp + 0x7ff
  5625: 95 77 19 04              a0 = a0 + 0x419
  5629: 7b 67 28                 u64 [s1 + 0x28] = a0
  5632: 33 07 c0 08 01           a0 = 0x108c0
  5637: 7b 17 98 01              u64 [sp + 0x198] = a0
  5641: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5646: 49 21 b8 01              u64 [sp + 440] = 0
  5650: 95 17 ff 07              a0 = sp + 0x7ff
  5654: 95 77 b1 03              a0 = a0 + 0x3b1
  5658: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5662: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  5667: 82 17 38                 a0 = u64 [sp + 0x38]
  5670: 7b 67 18                 u64 [s1 + 0x18] = a0
  5673: 82 17 40                 a0 = u64 [sp + 0x40]
  5676: 7b 67 20                 u64 [s1 + 0x20] = a0
  5679: 7b 67 30                 u64 [s1 + 0x30] = a0
  5682: 95 17 ff 07              a0 = sp + 0x7ff
  5686: 95 77 e1 03              a0 = a0 + 0x3e1
  5690: 95 18 98 01              a1 = sp + 0x198
  5694: 50 20 82 00 b6 15        ra = 130, jump @633
      :                          @313 [@dyn 65]
  5700: 82 65 50                 s0 = u64 [s1 + 0x50]
  5703: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5706: 82 66 48                 s1 = u64 [s1 + 0x48]
  5709: 33 07 02                 a0 = 0x2
  5712: 33 08                    a1 = 0
  5714: 33 09                    a2 = 0
  5716: 64 5a                    a3 = s0
  5718: 33 00 84 00              ra = 0x84
  5722: 0a 64                    ecalli 100 // 'log'
  5724: 01                       fallthrough
      :                          @314 [@dyn 66]
  5725: 82 17 48                 a0 = u64 [sp + 0x48]
  5728: c8 67 07                 a0 = a0 + s1
  5731: 53 27 00 f0 23           jump @320 if a0 <u 4294963200
      :                          @315
  5736: 33 07 20 00 03           a0 = 0x30020
  5741: 95 77 00 10              a0 = a0 + 0x1000
  5745: 01                       fallthrough
      :                          @316
  5746: 82 78                    a1 = u64 [a0]
  5748: c9 87 09                 a2 = a0 - a1
  5751: ab 59 0f                 jump @320 if a2 != s0
      :                          @317
  5754: c9 68 09                 a2 = a1 - s1
  5757: 01                       fallthrough
      :                          @318
  5758: 82 7a                    a3 = u64 [a0]
  5760: ab 8a f2                 jump @316 if a3 != a1
      :                          @319
  5763: 7b 79                    u64 [a0] = a2
  5765: 01                       fallthrough
      :                          @320
  5766: 95 16 ff 07              s1 = sp + 0x7ff
  5770: 95 66 99 03              s1 = s1 + 0x399
  5774: 82 67 80 00              a0 = u64 [s1 + 0x80]
  5778: 33 08 02                 a1 = 0x2
  5781: 33 05 02                 s0 = 0x2
  5784: 50 20 86 00 57 25        ra = 134, jump @967
      :                          @321 [@dyn 67]
  5790: 95 17 78                 a0 = sp + 0x78
  5793: 33 08 03                 a1 = 0x3
  5796: 0a 0d                    ecalli 13 // 'query'
  5798: 7b 67                    u64 [s1] = a0
  5800: 33 07 40 00 01           a0 = 0x10040
  5805: 7b 67 18                 u64 [s1 + 0x18] = a0
  5808: 33 07 f0 08 01           a0 = 0x108f0
  5813: 7b 17 98 01              u64 [sp + 0x198] = a0
  5817: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  5822: 49 21 b8 01              u64 [sp + 440] = 0
  5826: 95 17 ff 07              a0 = sp + 0x7ff
  5830: 95 77 b1 03              a0 = a0 + 0x3b1
  5834: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  5838: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  5842: 82 17 40                 a0 = u64 [sp + 0x40]
  5845: 7b 67 20                 u64 [s1 + 0x20] = a0
  5848: 7b 66 28                 u64 [s1 + 0x28] = s1
  5851: 7b 67 30                 u64 [s1 + 0x30] = a0
  5854: 95 17 ff 07              a0 = sp + 0x7ff
  5858: 95 77 e1 03              a0 = a0 + 0x3e1
  5862: 95 18 98 01              a1 = sp + 0x198
  5866: 50 20 88 00 0a 15        ra = 136, jump @633
      :                          @322 [@dyn 68]
  5872: 82 65 50                 s0 = u64 [s1 + 0x50]
  5875: 82 6b 58                 a4 = u64 [s1 + 0x58]
  5878: 82 66 48                 s1 = u64 [s1 + 0x48]
  5881: 33 07 02                 a0 = 0x2
  5884: 33 08                    a1 = 0
  5886: 33 09                    a2 = 0
  5888: 64 5a                    a3 = s0
  5890: 33 00 8a 00              ra = 0x8a
  5894: 0a 64                    ecalli 100 // 'log'
  5896: 01                       fallthrough
      :                          @323 [@dyn 69]
  5897: 82 17 48                 a0 = u64 [sp + 0x48]
  5900: c8 67 07                 a0 = a0 + s1
  5903: 53 27 00 f0 23           jump @329 if a0 <u 4294963200
      :                          @324
  5908: 33 07 20 00 03           a0 = 0x30020
  5913: 95 77 00 10              a0 = a0 + 0x1000
  5917: 01                       fallthrough
      :                          @325
  5918: 82 78                    a1 = u64 [a0]
  5920: c9 87 09                 a2 = a0 - a1
  5923: ab 59 0f                 jump @329 if a2 != s0
      :                          @326
  5926: c9 68 09                 a2 = a1 - s1
  5929: 01                       fallthrough
      :                          @327
  5930: 82 7a                    a3 = u64 [a0]
  5932: ab 8a f2                 jump @325 if a3 != a1
      :                          @328
  5935: 7b 79                    u64 [a0] = a2
  5937: 01                       fallthrough
      :                          @329
  5938: 95 16 ff 07              s1 = sp + 0x7ff
  5942: 95 66 99 03              s1 = s1 + 0x399
  5946: 82 67                    a0 = u64 [s1]
  5948: 33 08 05                 a1 = 0x5
  5951: 33 00 1a 01              ra = 0x11a
  5955: 28 ac 24                 jump @967
      :                          @330 [@dyn 70]
  5958: 33 05 03                 s0 = 0x3
  5961: 95 17 58                 a0 = sp + 0x58
  5964: 33 08 03                 a1 = 0x3
  5967: 0a 0f                    ecalli 15 // 'forget'
  5969: 7b 67 78                 u64 [s1 + 0x78] = a0
  5972: 82 17 38                 a0 = u64 [sp + 0x38]
  5975: 7b 67 18                 u64 [s1 + 0x18] = a0
  5978: 82 17 40                 a0 = u64 [sp + 0x40]
  5981: 7b 67 20                 u64 [s1 + 0x20] = a0
  5984: 95 18 ff 07              a1 = sp + 0x7ff
  5988: 95 88 11 04              a1 = a1 + 0x411
  5992: 7b 68 28                 u64 [s1 + 0x28] = a1
  5995: 7b 67 30                 u64 [s1 + 0x30] = a0
  5998: 33 07 20 09 01           a0 = 0x10920
  6003: 7b 17 98 01              u64 [sp + 0x198] = a0
  6007: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  6011: 49 21 b8 01              u64 [sp + 440] = 0
  6015: 95 17 ff 07              a0 = sp + 0x7ff
  6019: 95 77 b1 03              a0 = a0 + 0x3b1
  6023: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6027: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6032: 95 17 ff 07              a0 = sp + 0x7ff
  6036: 95 77 e1 03              a0 = a0 + 0x3e1
  6040: 95 18 98 01              a1 = sp + 0x198
  6044: 50 20 8e 00 58 14        ra = 142, jump @633
      :                          @331 [@dyn 71]
  6050: 82 65 50                 s0 = u64 [s1 + 0x50]
  6053: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6056: 95 17 ff 07              a0 = sp + 0x7ff
  6060: 95 77 99 03              a0 = a0 + 0x399
  6064: 82 76 48                 s1 = u64 [a0 + 0x48]
  6067: 33 07 02                 a0 = 0x2
  6070: 33 08                    a1 = 0
  6072: 33 09                    a2 = 0
  6074: 64 5a                    a3 = s0
  6076: 33 00 90 00              ra = 0x90
  6080: 0a 64                    ecalli 100 // 'log'
  6082: 01                       fallthrough
      :                          @332 [@dyn 72]
  6083: 82 17 48                 a0 = u64 [sp + 0x48]
  6086: c8 67 07                 a0 = a0 + s1
  6089: 53 27 00 f0 23           jump @338 if a0 <u 4294963200
      :                          @333
  6094: 33 07 20 00 03           a0 = 0x30020
  6099: 95 77 00 10              a0 = a0 + 0x1000
  6103: 01                       fallthrough
      :                          @334
  6104: 82 78                    a1 = u64 [a0]
  6106: c9 87 09                 a2 = a0 - a1
  6109: ab 59 0f                 jump @338 if a2 != s0
      :                          @335
  6112: c9 68 09                 a2 = a1 - s1
  6115: 01                       fallthrough
      :                          @336
  6116: 82 7a                    a3 = u64 [a0]
  6118: ab 8a f2                 jump @334 if a3 != a1
      :                          @337
  6121: 7b 79                    u64 [a0] = a2
  6123: 01                       fallthrough
      :                          @338
  6124: 95 15 ff 07              s0 = sp + 0x7ff
  6128: 95 55 99 03              s0 = s0 + 0x399
  6132: 82 57 78                 a0 = u64 [s0 + 0x78]
  6135: 33 08 01                 a1 = 0x1
  6138: 50 20 92 00 f5 23        ra = 146, jump @967
      :                          @339 [@dyn 73]
  6144: 95 17 58                 a0 = sp + 0x58
  6147: 33 08 03                 a1 = 0x3
  6150: 0a 0d                    ecalli 13 // 'query'
  6152: 7b 17 10                 u64 [sp + 0x10] = a0
  6155: 95 17 ff 07              a0 = sp + 0x7ff
  6159: 95 77 11 04              a0 = a0 + 0x411
  6163: 7b 57 28                 u64 [s0 + 0x28] = a0
  6166: 33 07 50 09 01           a0 = 0x10950
  6171: 7b 17 98 01              u64 [sp + 0x198] = a0
  6175: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6180: 49 21 b8 01              u64 [sp + 440] = 0
  6184: 95 17 ff 07              a0 = sp + 0x7ff
  6188: 95 77 b1 03              a0 = a0 + 0x3b1
  6192: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6196: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6201: 82 17 38                 a0 = u64 [sp + 0x38]
  6204: 7b 57 18                 u64 [s0 + 0x18] = a0
  6207: 82 17 40                 a0 = u64 [sp + 0x40]
  6210: 7b 57 20                 u64 [s0 + 0x20] = a0
  6213: 7b 57 30                 u64 [s0 + 0x30] = a0
  6216: 95 17 ff 07              a0 = sp + 0x7ff
  6220: 95 77 e1 03              a0 = a0 + 0x3e1
  6224: 95 18 98 01              a1 = sp + 0x198
  6228: 50 20 94 00 a0 13        ra = 148, jump @633
      :                          @340 [@dyn 74]
  6234: 82 56 50                 s1 = u64 [s0 + 0x50]
  6237: 82 5b 58                 a4 = u64 [s0 + 0x58]
  6240: 82 55 48                 s0 = u64 [s0 + 0x48]
  6243: 33 07 02                 a0 = 0x2
  6246: 33 08                    a1 = 0
  6248: 33 09                    a2 = 0
  6250: 64 6a                    a3 = s1
  6252: 33 00 96 00              ra = 0x96
  6256: 0a 64                    ecalli 100 // 'log'
  6258: 01                       fallthrough
      :                          @341 [@dyn 75]
  6259: 82 17 48                 a0 = u64 [sp + 0x48]
  6262: c8 57 07                 a0 = a0 + s0
  6265: 53 27 00 f0 23           jump @347 if a0 <u 4294963200
      :                          @342
  6270: 33 07 20 00 03           a0 = 0x30020
  6275: 95 77 00 10              a0 = a0 + 0x1000
  6279: 01                       fallthrough
      :                          @343
  6280: 82 78                    a1 = u64 [a0]
  6282: c9 87 09                 a2 = a0 - a1
  6285: ab 69 0f                 jump @347 if a2 != s1
      :                          @344
  6288: c9 58 09                 a2 = a1 - s0
  6291: 01                       fallthrough
      :                          @345
  6292: 82 7a                    a3 = u64 [a0]
  6294: ab 8a f2                 jump @343 if a3 != a1
      :                          @346
  6297: 7b 79                    u64 [a0] = a2
  6299: 01                       fallthrough
      :                          @347
  6300: 33 08 02                 a1 = 0x2
  6303: 33 05 02                 s0 = 0x2
  6306: 82 17 10                 a0 = u64 [sp + 0x10]
  6309: 50 20 98 00 4a 23        ra = 152, jump @967
      :                          @348 [@dyn 76]
  6315: 95 18 78                 a1 = sp + 0x78
  6318: 95 19 98 00              a2 = sp + 0x98
  6322: 33 0b 03                 a4 = 0x3
  6325: 82 17 30                 a0 = u64 [sp + 0x30]
  6328: 33 0a                    a3 = 0
  6330: 0a 01                    ecalli 1 // 'lookup'
  6332: 95 16 ff 07              s1 = sp + 0x7ff
  6336: 95 66 99 03              s1 = s1 + 0x399
  6340: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6344: 33 07 40 00 01           a0 = 0x10040
  6349: 7b 67 18                 u64 [s1 + 0x18] = a0
  6352: 82 18 40                 a1 = u64 [sp + 0x40]
  6355: 7b 68 20                 u64 [s1 + 0x20] = a1
  6358: 95 17 ff 07              a0 = sp + 0x7ff
  6362: 95 77 19 04              a0 = a0 + 0x419
  6366: 7b 67 28                 u64 [s1 + 0x28] = a0
  6369: 7b 68 30                 u64 [s1 + 0x30] = a1
  6372: 33 07 80 09 01           a0 = 0x10980
  6377: 7b 17 98 01              u64 [sp + 0x198] = a0
  6381: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6386: 49 21 b8 01              u64 [sp + 440] = 0
  6390: 95 17 ff 07              a0 = sp + 0x7ff
  6394: 95 77 b1 03              a0 = a0 + 0x3b1
  6398: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6402: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6406: 95 17 ff 07              a0 = sp + 0x7ff
  6410: 95 77 e1 03              a0 = a0 + 0x3e1
  6414: 95 18 98 01              a1 = sp + 0x198
  6418: 50 20 9a 00 e2 12        ra = 154, jump @633
      :                          @349 [@dyn 77]
  6424: 82 65 50                 s0 = u64 [s1 + 0x50]
  6427: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6430: 82 66 48                 s1 = u64 [s1 + 0x48]
  6433: 33 07 02                 a0 = 0x2
  6436: 33 08                    a1 = 0
  6438: 33 09                    a2 = 0
  6440: 64 5a                    a3 = s0
  6442: 33 00 9c 00              ra = 0x9c
  6446: 0a 64                    ecalli 100 // 'log'
  6448: 01                       fallthrough
      :                          @350 [@dyn 78]
  6449: 82 17 48                 a0 = u64 [sp + 0x48]
  6452: c8 67 07                 a0 = a0 + s1
  6455: 53 27 00 f0 23           jump @356 if a0 <u 4294963200
      :                          @351
  6460: 33 07 20 00 03           a0 = 0x30020
  6465: 95 77 00 10              a0 = a0 + 0x1000
  6469: 01                       fallthrough
      :                          @352
  6470: 82 78                    a1 = u64 [a0]
  6472: c9 87 09                 a2 = a0 - a1
  6475: ab 59 0f                 jump @356 if a2 != s0
      :                          @353
  6478: c9 68 09                 a2 = a1 - s1
  6481: 01                       fallthrough
      :                          @354
  6482: 82 7a                    a3 = u64 [a0]
  6484: ab 8a f2                 jump @352 if a3 != a1
      :                          @355
  6487: 7b 79                    u64 [a0] = a2
  6489: 01                       fallthrough
      :                          @356
  6490: 95 16 ff 07              s1 = sp + 0x7ff
  6494: 95 66 99 03              s1 = s1 + 0x399
  6498: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6502: 33 08 05                 a1 = 0x5
  6505: 50 20 9e 00 86 22        ra = 158, jump @967
      :                          @357 [@dyn 79]
  6511: 33 07 e8 03              a0 = 0x3e8
  6515: 95 18 52                 a1 = sp + 0x52
  6518: 0a 06                    ecalli 6 // 'assign'
  6520: 7b 67                    u64 [s1] = a0
  6522: 33 07 30 00 01           a0 = 0x10030
  6527: 7b 67 18                 u64 [s1 + 0x18] = a0
  6530: 33 07 b0 09 01           a0 = 0x109b0
  6535: 7b 17 98 01              u64 [sp + 0x198] = a0
  6539: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6544: 49 21 b8 01              u64 [sp + 440] = 0
  6548: 95 17 ff 07              a0 = sp + 0x7ff
  6552: 95 77 b1 03              a0 = a0 + 0x3b1
  6556: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6560: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6565: 82 17 40                 a0 = u64 [sp + 0x40]
  6568: 7b 67 20                 u64 [s1 + 0x20] = a0
  6571: 7b 66 28                 u64 [s1 + 0x28] = s1
  6574: 7b 67 30                 u64 [s1 + 0x30] = a0
  6577: 95 17 ff 07              a0 = sp + 0x7ff
  6581: 95 77 e1 03              a0 = a0 + 0x3e1
  6585: 95 18 98 01              a1 = sp + 0x198
  6589: 50 20 a0 00 37 12        ra = 160, jump @633
      :                          @358 [@dyn 80]
  6595: 82 65 50                 s0 = u64 [s1 + 0x50]
  6598: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6601: 82 66 48                 s1 = u64 [s1 + 0x48]
  6604: 33 07 02                 a0 = 0x2
  6607: 33 08                    a1 = 0
  6609: 33 09                    a2 = 0
  6611: 64 5a                    a3 = s0
  6613: 33 00 a2 00              ra = 0xa2
  6617: 0a 64                    ecalli 100 // 'log'
  6619: 01                       fallthrough
      :                          @359 [@dyn 81]
  6620: 82 17 48                 a0 = u64 [sp + 0x48]
  6623: c8 67 07                 a0 = a0 + s1
  6626: 53 27 00 f0 f7 02        jump @402 if a0 <u 4294963200
      :                          @360
  6632: 33 07 20 00 03           a0 = 0x30020
  6637: 95 77 00 10              a0 = a0 + 0x1000
  6641: 01                       fallthrough
      :                          @361
  6642: 82 78                    a1 = u64 [a0]
  6644: c9 87 09                 a2 = a0 - a1
  6647: ab 59 e2 02              jump @402 if a2 != s0
      :                          @362
  6651: c9 68 09                 a2 = a1 - s1
  6654: 01                       fallthrough
      :                          @363
  6655: 82 7a                    a3 = u64 [a0]
  6657: ab 8a f1                 jump @361 if a3 != a1
      :                          @364
  6660: 7b 79                    u64 [a0] = a2
  6662: 33 0b                    a4 = 0
  6664: 01                       fallthrough
      :                          @365
  6665: ab 8a e9                 jump @361 if a3 != a1
      :                          @366
  6668: 28 cd 02                 jump @402
      :                          @367 [@dyn 82]
  6671: 95 18 58                 a1 = sp + 0x58
  6674: 95 19 98 00              a2 = sp + 0x98
  6678: 33 0b 03                 a4 = 0x3
  6681: 82 17 30                 a0 = u64 [sp + 0x30]
  6684: 33 0a                    a3 = 0
  6686: 0a 01                    ecalli 1 // 'lookup'
  6688: 7b 67 70                 u64 [s1 + 0x70] = a0
  6691: 82 17 38                 a0 = u64 [sp + 0x38]
  6694: 7b 67 18                 u64 [s1 + 0x18] = a0
  6697: 82 18 40                 a1 = u64 [sp + 0x40]
  6700: 7b 68 20                 u64 [s1 + 0x20] = a1
  6703: 95 17 ff 07              a0 = sp + 0x7ff
  6707: 95 77 09 04              a0 = a0 + 0x409
  6711: 7b 67 28                 u64 [s1 + 0x28] = a0
  6714: 7b 68 30                 u64 [s1 + 0x30] = a1
  6717: 33 07 e0 09 01           a0 = 0x109e0
  6722: 7b 17 98 01              u64 [sp + 0x198] = a0
  6726: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6731: 49 21 b8 01              u64 [sp + 440] = 0
  6735: 95 17 ff 07              a0 = sp + 0x7ff
  6739: 95 77 b1 03              a0 = a0 + 0x3b1
  6743: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6747: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6752: 95 17 ff 07              a0 = sp + 0x7ff
  6756: 95 77 e1 03              a0 = a0 + 0x3e1
  6760: 95 18 98 01              a1 = sp + 0x198
  6764: 50 20 a6 00 88 11        ra = 166, jump @633
      :                          @368 [@dyn 83]
  6770: 82 65 50                 s0 = u64 [s1 + 0x50]
  6773: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6776: 95 17 ff 07              a0 = sp + 0x7ff
  6780: 95 77 99 03              a0 = a0 + 0x399
  6784: 82 76 48                 s1 = u64 [a0 + 0x48]
  6787: 33 07 02                 a0 = 0x2
  6790: 33 08                    a1 = 0
  6792: 33 09                    a2 = 0
  6794: 64 5a                    a3 = s0
  6796: 33 00 a8 00              ra = 0xa8
  6800: 0a 64                    ecalli 100 // 'log'
  6802: 01                       fallthrough
      :                          @369 [@dyn 84]
  6803: 82 17 48                 a0 = u64 [sp + 0x48]
  6806: c8 67 07                 a0 = a0 + s1
  6809: 53 27 00 f0 23           jump @375 if a0 <u 4294963200
      :                          @370
  6814: 33 07 20 00 03           a0 = 0x30020
  6819: 95 77 00 10              a0 = a0 + 0x1000
  6823: 01                       fallthrough
      :                          @371
  6824: 82 78                    a1 = u64 [a0]
  6826: c9 87 09                 a2 = a0 - a1
  6829: ab 59 0f                 jump @375 if a2 != s0
      :                          @372
  6832: c9 68 09                 a2 = a1 - s1
  6835: 01                       fallthrough
      :                          @373
  6836: 82 7a                    a3 = u64 [a0]
  6838: ab 8a f2                 jump @371 if a3 != a1
      :                          @374
  6841: 7b 79                    u64 [a0] = a2
  6843: 01                       fallthrough
      :                          @375
  6844: 95 16 ff 07              s1 = sp + 0x7ff
  6848: 95 66 99 03              s1 = s1 + 0x399
  6852: 82 67 70                 a0 = u64 [s1 + 0x70]
  6855: 33 08 01                 a1 = 0x1
  6858: 50 20 aa 00 25 21        ra = 170, jump @967
      :                          @376 [@dyn 85]
  6864: 95 17 58                 a0 = sp + 0x58
  6867: 33 08 03                 a1 = 0x3
  6870: 0a 0d                    ecalli 13 // 'query'
  6872: 7b 67 78                 u64 [s1 + 0x78] = a0
  6875: 95 17 ff 07              a0 = sp + 0x7ff
  6879: 95 77 11 04              a0 = a0 + 0x411
  6883: 7b 67 28                 u64 [s1 + 0x28] = a0
  6886: 33 07 c0 08 01           a0 = 0x108c0
  6891: 7b 17 98 01              u64 [sp + 0x198] = a0
  6895: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6900: 49 21 b8 01              u64 [sp + 440] = 0
  6904: 95 17 ff 07              a0 = sp + 0x7ff
  6908: 95 77 b1 03              a0 = a0 + 0x3b1
  6912: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6916: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6921: 82 17 38                 a0 = u64 [sp + 0x38]
  6924: 7b 67 18                 u64 [s1 + 0x18] = a0
  6927: 82 17 40                 a0 = u64 [sp + 0x40]
  6930: 7b 67 20                 u64 [s1 + 0x20] = a0
  6933: 7b 67 30                 u64 [s1 + 0x30] = a0
  6936: 95 17 ff 07              a0 = sp + 0x7ff
  6940: 95 77 e1 03              a0 = a0 + 0x3e1
  6944: 95 18 98 01              a1 = sp + 0x198
  6948: 50 20 ac 00 d0 10        ra = 172, jump @633
      :                          @377 [@dyn 86]
  6954: 82 65 50                 s0 = u64 [s1 + 0x50]
  6957: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6960: 82 66 48                 s1 = u64 [s1 + 0x48]
  6963: 33 07 02                 a0 = 0x2
  6966: 33 08                    a1 = 0
  6968: 33 09                    a2 = 0
  6970: 64 5a                    a3 = s0
  6972: 33 00 ae 00              ra = 0xae
  6976: 0a 64                    ecalli 100 // 'log'
  6978: 01                       fallthrough
      :                          @378 [@dyn 87]
  6979: 82 17 48                 a0 = u64 [sp + 0x48]
  6982: c8 67 07                 a0 = a0 + s1
  6985: 53 27 00 f0 23           jump @384 if a0 <u 4294963200
      :                          @379
  6990: 33 07 20 00 03           a0 = 0x30020
  6995: 95 77 00 10              a0 = a0 + 0x1000
  6999: 01                       fallthrough
      :                          @380
  7000: 82 78                    a1 = u64 [a0]
  7002: c9 87 09                 a2 = a0 - a1
  7005: ab 59 0f                 jump @384 if a2 != s0
      :                          @381
  7008: c9 68 09                 a2 = a1 - s1
  7011: 01                       fallthrough
      :                          @382
  7012: 82 7a                    a3 = u64 [a0]
  7014: ab 8a f2                 jump @380 if a3 != a1
      :                          @383
  7017: 7b 79                    u64 [a0] = a2
  7019: 01                       fallthrough
      :                          @384
  7020: 95 16 ff 07              s1 = sp + 0x7ff
  7024: 95 66 99 03              s1 = s1 + 0x399
  7028: 82 67 78                 a0 = u64 [s1 + 0x78]
  7031: 33 08 02                 a1 = 0x2
  7034: 33 05 02                 s0 = 0x2
  7037: 50 20 b0 00 72 20        ra = 176, jump @967
      :                          @385 [@dyn 88]
  7043: 95 18 58                 a1 = sp + 0x58
  7046: 82 17 30                 a0 = u64 [sp + 0x30]
  7049: 0a 0c                    ecalli 12 // 'eject'
  7051: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7055: 33 07 28 00 01           a0 = 0x10028
  7060: 7b 17 10                 u64 [sp + 0x10] = a0
  7063: 7b 67 18                 u64 [s1 + 0x18] = a0
  7066: 82 18 40                 a1 = u64 [sp + 0x40]
  7069: 7b 68 20                 u64 [s1 + 0x20] = a1
  7072: 95 17 ff 07              a0 = sp + 0x7ff
  7076: 95 77 19 04              a0 = a0 + 0x419
  7080: 7b 67 28                 u64 [s1 + 0x28] = a0
  7083: 7b 68 30                 u64 [s1 + 0x30] = a1
  7086: 33 07 10 0a 01           a0 = 0x10a10
  7091: 7b 17 98 01              u64 [sp + 0x198] = a0
  7095: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7100: 49 21 b8 01              u64 [sp + 440] = 0
  7104: 95 17 ff 07              a0 = sp + 0x7ff
  7108: 95 77 b1 03              a0 = a0 + 0x3b1
  7112: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7116: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7120: 95 17 ff 07              a0 = sp + 0x7ff
  7124: 95 77 e1 03              a0 = a0 + 0x3e1
  7128: 95 18 98 01              a1 = sp + 0x198
  7132: 50 20 b2 00 18 10        ra = 178, jump @633
      :                          @386 [@dyn 89]
  7138: 82 65 50                 s0 = u64 [s1 + 0x50]
  7141: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7144: 82 66 48                 s1 = u64 [s1 + 0x48]
  7147: 33 07 02                 a0 = 0x2
  7150: 33 08                    a1 = 0
  7152: 33 09                    a2 = 0
  7154: 64 5a                    a3 = s0
  7156: 33 00 b4 00              ra = 0xb4
  7160: 0a 64                    ecalli 100 // 'log'
  7162: 01                       fallthrough
      :                          @387 [@dyn 90]
  7163: 82 17 48                 a0 = u64 [sp + 0x48]
  7166: c8 67 07                 a0 = a0 + s1
  7169: 53 27 00 f0 23           jump @393 if a0 <u 4294963200
      :                          @388
  7174: 33 07 20 00 03           a0 = 0x30020
  7179: 95 77 00 10              a0 = a0 + 0x1000
  7183: 01                       fallthrough
      :                          @389
  7184: 82 78                    a1 = u64 [a0]
  7186: c9 87 09                 a2 = a0 - a1
  7189: ab 59 0f                 jump @393 if a2 != s0
      :                          @390
  7192: c9 68 09                 a2 = a1 - s1
  7195: 01                       fallthrough
      :                          @391
  7196: 82 7a                    a3 = u64 [a0]
  7198: ab 8a f2                 jump @389 if a3 != a1
      :                          @392
  7201: 7b 79                    u64 [a0] = a2
  7203: 01                       fallthrough
      :                          @393
  7204: 95 16 ff 07              s1 = sp + 0x7ff
  7208: 95 66 99 03              s1 = s1 + 0x399
  7212: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7216: 33 08 05                 a1 = 0x5
  7219: 50 20 b6 00 bc 1f        ra = 182, jump @967
      :                          @394 [@dyn 91]
  7225: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  7235: 95 1a 58                 a3 = sp + 0x58
  7238: 33 08                    a1 = 0
  7240: 33 09                    a2 = 0
  7242: 33 0b                    a4 = 0
  7244: 0a 05                    ecalli 5 // 'bless'
  7246: 7b 67                    u64 [s1] = a0
  7248: 82 17 10                 a0 = u64 [sp + 0x10]
  7251: 7b 67 18                 u64 [s1 + 0x18] = a0
  7254: 33 07 40 0a 01           a0 = 0x10a40
  7259: 7b 17 98 01              u64 [sp + 0x198] = a0
  7263: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7268: 49 21 b8 01              u64 [sp + 440] = 0
  7272: 95 17 ff 07              a0 = sp + 0x7ff
  7276: 95 77 b1 03              a0 = a0 + 0x3b1
  7280: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7284: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7289: 82 17 40                 a0 = u64 [sp + 0x40]
  7292: 7b 67 20                 u64 [s1 + 0x20] = a0
  7295: 7b 66 28                 u64 [s1 + 0x28] = s1
  7298: 7b 67 30                 u64 [s1 + 0x30] = a0
  7301: 95 17 ff 07              a0 = sp + 0x7ff
  7305: 95 77 e1 03              a0 = a0 + 0x3e1
  7309: 95 18 98 01              a1 = sp + 0x198
  7313: 50 20 b8 00 63 0f        ra = 184, jump @633
      :                          @395 [@dyn 92]
  7319: 82 65 50                 s0 = u64 [s1 + 0x50]
  7322: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7325: 82 66 48                 s1 = u64 [s1 + 0x48]
  7328: 33 07 02                 a0 = 0x2
  7331: 33 08                    a1 = 0
  7333: 33 09                    a2 = 0
  7335: 64 5a                    a3 = s0
  7337: 33 00 ba 00              ra = 0xba
  7341: 0a 64                    ecalli 100 // 'log'
  7343: 01                       fallthrough
      :                          @396 [@dyn 93]
  7344: 82 17 48                 a0 = u64 [sp + 0x48]
  7347: c8 67 07                 a0 = a0 + s1
  7350: 53 27 00 f0 23           jump @402 if a0 <u 4294963200
      :                          @397
  7355: 33 07 20 00 03           a0 = 0x30020
  7360: 95 77 00 10              a0 = a0 + 0x1000
  7364: 01                       fallthrough
      :                          @398
  7365: 82 78                    a1 = u64 [a0]
  7367: c9 87 09                 a2 = a0 - a1
  7370: ab 59 0f                 jump @402 if a2 != s0
      :                          @399
  7373: c9 68 09                 a2 = a1 - s1
  7376: 01                       fallthrough
      :                          @400
  7377: 82 7a                    a3 = u64 [a0]
  7379: ab 8a f2                 jump @398 if a3 != a1
      :                          @401
  7382: 7b 79                    u64 [a0] = a2
  7384: 01                       fallthrough
      :                          @402
  7385: 95 16 ff 07              s1 = sp + 0x7ff
  7389: 95 66 99 03              s1 = s1 + 0x399
  7393: 82 67                    a0 = u64 [s1]
  7395: 33 08 06                 a1 = 0x6
  7398: 33 00 1a 01              ra = 0x11a
  7402: 28 05 1f                 jump @967
      :                          @403 [@dyn 94]
  7405: 33 05 03                 s0 = 0x3
  7408: 95 17 58                 a0 = sp + 0x58
  7411: 33 08 03                 a1 = 0x3
  7414: 0a 0e                    ecalli 14 // 'solicit'
  7416: 7b 67 70                 u64 [s1 + 0x70] = a0
  7419: 33 08 01                 a1 = 0x1
  7422: 50 20 be 00 f1 1e        ra = 190, jump @967
      :                          @404 [@dyn 95]
  7428: 82 17 38                 a0 = u64 [sp + 0x38]
  7431: 7b 67 18                 u64 [s1 + 0x18] = a0
  7434: 82 18 40                 a1 = u64 [sp + 0x40]
  7437: 7b 68 20                 u64 [s1 + 0x20] = a1
  7440: 95 17 ff 07              a0 = sp + 0x7ff
  7444: 95 77 09 04              a0 = a0 + 0x409
  7448: 7b 67 28                 u64 [s1 + 0x28] = a0
  7451: 7b 68 30                 u64 [s1 + 0x30] = a1
  7454: 33 07 70 0a 01           a0 = 0x10a70
  7459: 7b 17 98 01              u64 [sp + 0x198] = a0
  7463: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  7467: 49 21 b8 01              u64 [sp + 440] = 0
  7471: 95 17 ff 07              a0 = sp + 0x7ff
  7475: 95 77 b1 03              a0 = a0 + 0x3b1
  7479: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7483: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7488: 95 17 ff 07              a0 = sp + 0x7ff
  7492: 95 77 e1 03              a0 = a0 + 0x3e1
  7496: 95 18 98 01              a1 = sp + 0x198
  7500: 50 20 c0 00 a8 0e        ra = 192, jump @633
      :                          @405 [@dyn 96]
  7506: 82 65 50                 s0 = u64 [s1 + 0x50]
  7509: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7512: 95 17 ff 07              a0 = sp + 0x7ff
  7516: 95 77 99 03              a0 = a0 + 0x399
  7520: 82 76 48                 s1 = u64 [a0 + 0x48]
  7523: 33 07 02                 a0 = 0x2
  7526: 33 08                    a1 = 0
  7528: 33 09                    a2 = 0
  7530: 64 5a                    a3 = s0
  7532: 33 00 c2 00              ra = 0xc2
  7536: 0a 64                    ecalli 100 // 'log'
  7538: 01                       fallthrough
      :                          @406 [@dyn 97]
  7539: 82 17 48                 a0 = u64 [sp + 0x48]
  7542: c8 67 07                 a0 = a0 + s1
  7545: 53 27 00 f0 23           jump @412 if a0 <u 4294963200
      :                          @407
  7550: 33 07 20 00 03           a0 = 0x30020
  7555: 95 77 00 10              a0 = a0 + 0x1000
  7559: 01                       fallthrough
      :                          @408
  7560: 82 78                    a1 = u64 [a0]
  7562: c9 87 09                 a2 = a0 - a1
  7565: ab 59 0f                 jump @412 if a2 != s0
      :                          @409
  7568: c9 68 09                 a2 = a1 - s1
  7571: 01                       fallthrough
      :                          @410
  7572: 82 7a                    a3 = u64 [a0]
  7574: ab 8a f2                 jump @408 if a3 != a1
      :                          @411
  7577: 7b 79                    u64 [a0] = a2
  7579: 01                       fallthrough
      :                          @412
  7580: 95 17 58                 a0 = sp + 0x58
  7583: 33 08 03                 a1 = 0x3
  7586: 0a 0d                    ecalli 13 // 'query'
  7588: 95 18 ff 07              a1 = sp + 0x7ff
  7592: 95 88 99 03              a1 = a1 + 0x399
  7596: 7b 87 78                 u64 [a1 + 0x78] = a0
  7599: 95 17 ff 07              a0 = sp + 0x7ff
  7603: 95 77 11 04              a0 = a0 + 0x411
  7607: 7b 87 28                 u64 [a1 + 0x28] = a0
  7610: 33 07 c0 08 01           a0 = 0x108c0
  7615: 7b 17 98 01              u64 [sp + 0x198] = a0
  7619: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7624: 49 21 b8 01              u64 [sp + 440] = 0
  7628: 95 17 ff 07              a0 = sp + 0x7ff
  7632: 95 77 b1 03              a0 = a0 + 0x3b1
  7636: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7640: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7645: 82 17 38                 a0 = u64 [sp + 0x38]
  7648: 7b 87 18                 u64 [a1 + 0x18] = a0
  7651: 82 17 40                 a0 = u64 [sp + 0x40]
  7654: 7b 87 20                 u64 [a1 + 0x20] = a0
  7657: 7b 87 30                 u64 [a1 + 0x30] = a0
  7660: 95 17 ff 07              a0 = sp + 0x7ff
  7664: 95 77 e1 03              a0 = a0 + 0x3e1
  7668: 95 18 98 01              a1 = sp + 0x198
  7672: 95 15 98 01              s0 = sp + 0x198
  7676: 50 20 c4 00 f8 0d        ra = 196, jump @633
      :                          @413 [@dyn 98]
  7682: 95 17 ff 07              a0 = sp + 0x7ff
  7686: 95 77 99 03              a0 = a0 + 0x399
  7690: 82 76 50                 s1 = u64 [a0 + 0x50]
  7693: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7696: 82 77 48                 a0 = u64 [a0 + 0x48]
  7699: 7b 17 10                 u64 [sp + 0x10] = a0
  7702: 33 07 02                 a0 = 0x2
  7705: 33 08                    a1 = 0
  7707: 33 09                    a2 = 0
  7709: 64 6a                    a3 = s1
  7711: 33 00 c6 00              ra = 0xc6
  7715: 0a 64                    ecalli 100 // 'log'
  7717: 01                       fallthrough
      :                          @414 [@dyn 99]
  7718: 82 1c 10                 a5 = u64 [sp + 0x10]
  7721: 82 17 48                 a0 = u64 [sp + 0x48]
  7724: c8 c7 07                 a0 = a0 + a5
  7727: 53 27 00 f0 23           jump @420 if a0 <u 4294963200
      :                          @415
  7732: 33 07 20 00 03           a0 = 0x30020
  7737: 95 77 00 10              a0 = a0 + 0x1000
  7741: 01                       fallthrough
      :                          @416
  7742: 82 78                    a1 = u64 [a0]
  7744: c9 87 09                 a2 = a0 - a1
  7747: ab 69 0f                 jump @420 if a2 != s1
      :                          @417
  7750: c9 c8 09                 a2 = a1 - a5
  7753: 01                       fallthrough
      :                          @418
  7754: 82 7a                    a3 = u64 [a0]
  7756: ab 8a f2                 jump @416 if a3 != a1
      :                          @419
  7759: 7b 79                    u64 [a0] = a2
  7761: 01                       fallthrough
      :                          @420
  7762: 95 17 ff 07              a0 = sp + 0x7ff
  7766: 95 77 99 03              a0 = a0 + 0x399
  7770: 82 77 78                 a0 = u64 [a0 + 0x78]
  7773: 33 08 02                 a1 = 0x2
  7776: 50 20 c8 00 8f 1d        ra = 200, jump @967
      :                          @421 [@dyn 100]
  7782: 33 09 00 0a              a2 = 0xa00
  7786: 95 17 98 01              a0 = sp + 0x198
  7790: 33 08                    a1 = 0
  7792: 50 20 ca 00 ab 10        ra = 202, jump @701
      :                          @422 [@dyn 101]
  7798: 33 06 50                 s1 = 0x50
  7801: 01                       fallthrough
      :                          @423
  7802: 95 18 58                 a1 = sp + 0x58
  7805: 33 09 20                 a2 = 0x20
  7808: 64 57                    a0 = s0
  7810: 50 20 cc 00 e7 0f        ra = 204, jump @683
      :                          @424 [@dyn 102]
  7816: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  7819: 95 55 20                 s0 = s0 + 0x20
  7822: 52 06 ec                 jump @423 if s1 != 0
      :                          @425
  7825: 95 18 98 01              a1 = sp + 0x198
  7829: 33 07                    a0 = 0
  7831: 0a 06                    ecalli 6 // 'assign'
  7833: 95 16 ff 07              s1 = sp + 0x7ff
  7837: 95 66 99 03              s1 = s1 + 0x399
  7841: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7845: 95 17 ff 07              a0 = sp + 0x7ff
  7849: 95 77 19 04              a0 = a0 + 0x419
  7853: 7b 67 58                 u64 [s1 + 0x58] = a0
  7856: 33 07 a0 0a 01           a0 = 0x10aa0
  7861: 7b 67 18                 u64 [s1 + 0x18] = a0
  7864: 49 16 20 03              u64 [s1 + 32] = 0x3
  7868: 95 17 ff 07              a0 = sp + 0x7ff
  7872: 95 77 e1 03              a0 = a0 + 0x3e1
  7876: 7b 67 28                 u64 [s1 + 0x28] = a0
  7879: 49 16 30 02              u64 [s1 + 48] = 0x2
  7883: 82 17 38                 a0 = u64 [sp + 0x38]
  7886: 7b 67 48                 u64 [s1 + 0x48] = a0
  7889: 82 17 40                 a0 = u64 [sp + 0x40]
  7892: 7b 67 50                 u64 [s1 + 0x50] = a0
  7895: 7b 67 60                 u64 [s1 + 0x60] = a0
  7898: 49 16 38                 u64 [s1 + 56] = 0
  7901: 95 17 ff 07              a0 = sp + 0x7ff
  7905: 95 77 99 03              a0 = a0 + 0x399
  7909: 95 18 ff 07              a1 = sp + 0x7ff
  7913: 95 88 b1 03              a1 = a1 + 0x3b1
  7917: 50 20 ce 00 07 0d        ra = 206, jump @633
      :                          @426 [@dyn 103]
  7923: 82 65 08                 s0 = u64 [s1 + 0x8]
  7926: 82 6b 10                 a4 = u64 [s1 + 0x10]
  7929: 82 66                    s1 = u64 [s1]
  7931: 33 07 02                 a0 = 0x2
  7934: 33 08                    a1 = 0
  7936: 33 09                    a2 = 0
  7938: 64 5a                    a3 = s0
  7940: 33 00 d0 00              ra = 0xd0
  7944: 0a 64                    ecalli 100 // 'log'
  7946: 01                       fallthrough
      :                          @427 [@dyn 104]
  7947: 82 17 48                 a0 = u64 [sp + 0x48]
  7950: c8 67 07                 a0 = a0 + s1
  7953: 53 27 00 f0 1d 05        jump @498 if a0 <u 4294963200
      :                          @428
  7959: 33 07 20 00 03           a0 = 0x30020
  7964: 95 77 00 10              a0 = a0 + 0x1000
  7968: 01                       fallthrough
      :                          @429
  7969: 82 78                    a1 = u64 [a0]
  7971: c9 87 09                 a2 = a0 - a1
  7974: ab 59 08 05              jump @498 if a2 != s0
      :                          @430
  7978: c9 68 09                 a2 = a1 - s1
  7981: 01                       fallthrough
      :                          @431
  7982: 82 7a                    a3 = u64 [a0]
  7984: ab 8a f1                 jump @429 if a3 != a1
      :                          @432
  7987: 7b 79                    u64 [a0] = a2
  7989: 33 0b                    a4 = 0
  7991: 01                       fallthrough
      :                          @433
  7992: ab 8a e9                 jump @429 if a3 != a1
      :                          @434
  7995: 28 f3 04                 jump @498
      :                          @435 [@dyn 105]
  7998: 33 05 03                 s0 = 0x3
  8001: 95 17 58                 a0 = sp + 0x58
  8004: 33 08 03                 a1 = 0x3
  8007: 0a 0f                    ecalli 15 // 'forget'
  8009: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8013: 82 17 38                 a0 = u64 [sp + 0x38]
  8016: 7b 67 18                 u64 [s1 + 0x18] = a0
  8019: 82 18 40                 a1 = u64 [sp + 0x40]
  8022: 7b 68 20                 u64 [s1 + 0x20] = a1
  8025: 95 17 ff 07              a0 = sp + 0x7ff
  8029: 95 77 19 04              a0 = a0 + 0x419
  8033: 7b 67 28                 u64 [s1 + 0x28] = a0
  8036: 7b 68 30                 u64 [s1 + 0x30] = a1
  8039: 33 07 20 09 01           a0 = 0x10920
  8044: 7b 17 98 01              u64 [sp + 0x198] = a0
  8048: 7b 15 a0 01              u64 [sp + 0x1a0] = s0
  8052: 49 21 b8 01              u64 [sp + 440] = 0
  8056: 95 17 ff 07              a0 = sp + 0x7ff
  8060: 95 77 b1 03              a0 = a0 + 0x3b1
  8064: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8068: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8073: 95 17 ff 07              a0 = sp + 0x7ff
  8077: 95 77 e1 03              a0 = a0 + 0x3e1
  8081: 95 18 98 01              a1 = sp + 0x198
  8085: 50 20 d4 00 5f 0c        ra = 212, jump @633
      :                          @436 [@dyn 106]
  8091: 82 65 50                 s0 = u64 [s1 + 0x50]
  8094: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8097: 95 17 ff 07              a0 = sp + 0x7ff
  8101: 95 77 99 03              a0 = a0 + 0x399
  8105: 82 76 48                 s1 = u64 [a0 + 0x48]
  8108: 33 07 02                 a0 = 0x2
  8111: 33 08                    a1 = 0
  8113: 33 09                    a2 = 0
  8115: 64 5a                    a3 = s0
  8117: 33 00 d6 00              ra = 0xd6
  8121: 0a 64                    ecalli 100 // 'log'
  8123: 01                       fallthrough
      :                          @437 [@dyn 107]
  8124: 82 17 48                 a0 = u64 [sp + 0x48]
  8127: c8 67 07                 a0 = a0 + s1
  8130: 53 27 00 f0 23           jump @443 if a0 <u 4294963200
      :                          @438
  8135: 33 07 20 00 03           a0 = 0x30020
  8140: 95 77 00 10              a0 = a0 + 0x1000
  8144: 01                       fallthrough
      :                          @439
  8145: 82 78                    a1 = u64 [a0]
  8147: c9 87 09                 a2 = a0 - a1
  8150: ab 59 0f                 jump @443 if a2 != s0
      :                          @440
  8153: c9 68 09                 a2 = a1 - s1
  8156: 01                       fallthrough
      :                          @441
  8157: 82 7a                    a3 = u64 [a0]
  8159: ab 8a f2                 jump @439 if a3 != a1
      :                          @442
  8162: 7b 79                    u64 [a0] = a2
  8164: 01                       fallthrough
      :                          @443
  8165: 95 16 ff 07              s1 = sp + 0x7ff
  8169: 95 66 99 03              s1 = s1 + 0x399
  8173: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8177: 33 08 01                 a1 = 0x1
  8180: 50 20 d8 00 fb 1b        ra = 216, jump @967
      :                          @444 [@dyn 108]
  8186: 95 17 58                 a0 = sp + 0x58
  8189: 33 08 03                 a1 = 0x3
  8192: 0a 0d                    ecalli 13 // 'query'
  8194: 7b 67                    u64 [s1] = a0
  8196: 33 07 d0 0a 01           a0 = 0x10ad0
  8201: 7b 17 98 01              u64 [sp + 0x198] = a0
  8205: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8210: 49 21 b8 01              u64 [sp + 440] = 0
  8214: 95 17 ff 07              a0 = sp + 0x7ff
  8218: 95 77 b1 03              a0 = a0 + 0x3b1
  8222: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8226: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8231: 82 17 38                 a0 = u64 [sp + 0x38]
  8234: 7b 67 18                 u64 [s1 + 0x18] = a0
  8237: 82 17 40                 a0 = u64 [sp + 0x40]
  8240: 7b 67 20                 u64 [s1 + 0x20] = a0
  8243: 7b 66 28                 u64 [s1 + 0x28] = s1
  8246: 7b 67 30                 u64 [s1 + 0x30] = a0
  8249: 95 17 ff 07              a0 = sp + 0x7ff
  8253: 95 77 e1 03              a0 = a0 + 0x3e1
  8257: 95 18 98 01              a1 = sp + 0x198
  8261: 50 20 da 00 af 0b        ra = 218, jump @633
      :                          @445 [@dyn 109]
  8267: 82 65 50                 s0 = u64 [s1 + 0x50]
  8270: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8273: 82 66 48                 s1 = u64 [s1 + 0x48]
  8276: 33 07 02                 a0 = 0x2
  8279: 33 08                    a1 = 0
  8281: 33 09                    a2 = 0
  8283: 64 5a                    a3 = s0
  8285: 33 00 dc 00              ra = 0xdc
  8289: 0a 64                    ecalli 100 // 'log'
  8291: 01                       fallthrough
      :                          @446 [@dyn 110]
  8292: 82 17 48                 a0 = u64 [sp + 0x48]
  8295: c8 67 07                 a0 = a0 + s1
  8298: 53 27 00 f0 83 01        jump @471 if a0 <u 4294963200
      :                          @447
  8304: 33 07 20 00 03           a0 = 0x30020
  8309: 95 77 00 10              a0 = a0 + 0x1000
  8313: 01                       fallthrough
      :                          @448
  8314: 82 78                    a1 = u64 [a0]
  8316: c9 87 09                 a2 = a0 - a1
  8319: ab 59 6e 01              jump @471 if a2 != s0
      :                          @449
  8323: c9 68 09                 a2 = a1 - s1
  8326: 01                       fallthrough
      :                          @450
  8327: 82 7a                    a3 = u64 [a0]
  8329: ab 8a f1                 jump @448 if a3 != a1
      :                          @451
  8332: 7b 79                    u64 [a0] = a2
  8334: 33 0b                    a4 = 0
  8336: 01                       fallthrough
      :                          @452
  8337: ab 8a e9                 jump @448 if a3 != a1
      :                          @453
  8340: 28 59 01                 jump @471
      :                          @454 [@dyn 111]
  8343: 95 18 58                 a1 = sp + 0x58
  8346: 95 19 98 00              a2 = sp + 0x98
  8350: 33 0b 03                 a4 = 0x3
  8353: 82 17 30                 a0 = u64 [sp + 0x30]
  8356: 33 0a                    a3 = 0
  8358: 0a 01                    ecalli 1 // 'lookup'
  8360: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8364: 82 17 38                 a0 = u64 [sp + 0x38]
  8367: 7b 67 18                 u64 [s1 + 0x18] = a0
  8370: 82 18 40                 a1 = u64 [sp + 0x40]
  8373: 7b 68 20                 u64 [s1 + 0x20] = a1
  8376: 95 17 ff 07              a0 = sp + 0x7ff
  8380: 95 77 19 04              a0 = a0 + 0x419
  8384: 7b 67 28                 u64 [s1 + 0x28] = a0
  8387: 7b 68 30                 u64 [s1 + 0x30] = a1
  8390: 33 07 00 0b 01           a0 = 0x10b00
  8395: 7b 17 98 01              u64 [sp + 0x198] = a0
  8399: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8404: 49 21 b8 01              u64 [sp + 440] = 0
  8408: 95 17 ff 07              a0 = sp + 0x7ff
  8412: 95 77 b1 03              a0 = a0 + 0x3b1
  8416: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8420: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8425: 95 17 ff 07              a0 = sp + 0x7ff
  8429: 95 77 e1 03              a0 = a0 + 0x3e1
  8433: 95 18 98 01              a1 = sp + 0x198
  8437: 50 20 e0 00 ff 0a        ra = 224, jump @633
      :                          @455 [@dyn 112]
  8443: 82 65 50                 s0 = u64 [s1 + 0x50]
  8446: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8449: 95 17 ff 07              a0 = sp + 0x7ff
  8453: 95 77 99 03              a0 = a0 + 0x399
  8457: 82 76 48                 s1 = u64 [a0 + 0x48]
  8460: 33 07 02                 a0 = 0x2
  8463: 33 08                    a1 = 0
  8465: 33 09                    a2 = 0
  8467: 64 5a                    a3 = s0
  8469: 33 00 e2 00              ra = 0xe2
  8473: 0a 64                    ecalli 100 // 'log'
  8475: 01                       fallthrough
      :                          @456 [@dyn 113]
  8476: 82 17 48                 a0 = u64 [sp + 0x48]
  8479: c8 67 07                 a0 = a0 + s1
  8482: 53 27 00 f0 23           jump @462 if a0 <u 4294963200
      :                          @457
  8487: 33 07 20 00 03           a0 = 0x30020
  8492: 95 77 00 10              a0 = a0 + 0x1000
  8496: 01                       fallthrough
      :                          @458
  8497: 82 78                    a1 = u64 [a0]
  8499: c9 87 09                 a2 = a0 - a1
  8502: ab 59 0f                 jump @462 if a2 != s0
      :                          @459
  8505: c9 68 09                 a2 = a1 - s1
  8508: 01                       fallthrough
      :                          @460
  8509: 82 7a                    a3 = u64 [a0]
  8511: ab 8a f2                 jump @458 if a3 != a1
      :                          @461
  8514: 7b 79                    u64 [a0] = a2
  8516: 01                       fallthrough
      :                          @462
  8517: 95 16 ff 07              s1 = sp + 0x7ff
  8521: 95 66 99 03              s1 = s1 + 0x399
  8525: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8529: 33 08 01                 a1 = 0x1
  8532: 50 20 e4 00 9b 1a        ra = 228, jump @967
      :                          @463 [@dyn 114]
  8538: 95 17 58                 a0 = sp + 0x58
  8541: 33 08 03                 a1 = 0x3
  8544: 0a 0d                    ecalli 13 // 'query'
  8546: 7b 67                    u64 [s1] = a0
  8548: 33 07 30 0b 01           a0 = 0x10b30
  8553: 7b 17 98 01              u64 [sp + 0x198] = a0
  8557: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8562: 49 21 b8 01              u64 [sp + 440] = 0
  8566: 95 17 ff 07              a0 = sp + 0x7ff
  8570: 95 77 b1 03              a0 = a0 + 0x3b1
  8574: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8578: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8583: 82 17 38                 a0 = u64 [sp + 0x38]
  8586: 7b 67 18                 u64 [s1 + 0x18] = a0
  8589: 82 17 40                 a0 = u64 [sp + 0x40]
  8592: 7b 67 20                 u64 [s1 + 0x20] = a0
  8595: 7b 66 28                 u64 [s1 + 0x28] = s1
  8598: 7b 67 30                 u64 [s1 + 0x30] = a0
  8601: 95 17 ff 07              a0 = sp + 0x7ff
  8605: 95 77 e1 03              a0 = a0 + 0x3e1
  8609: 95 18 98 01              a1 = sp + 0x198
  8613: 50 20 e6 00 4f 0a        ra = 230, jump @633
      :                          @464 [@dyn 115]
  8619: 82 65 50                 s0 = u64 [s1 + 0x50]
  8622: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8625: 82 66 48                 s1 = u64 [s1 + 0x48]
  8628: 33 07 02                 a0 = 0x2
  8631: 33 08                    a1 = 0
  8633: 33 09                    a2 = 0
  8635: 64 5a                    a3 = s0
  8637: 33 00 e8 00              ra = 0xe8
  8641: 0a 64                    ecalli 100 // 'log'
  8643: 01                       fallthrough
      :                          @465 [@dyn 116]
  8644: 82 17 48                 a0 = u64 [sp + 0x48]
  8647: c8 67 07                 a0 = a0 + s1
  8650: 53 27 00 f0 23           jump @471 if a0 <u 4294963200
      :                          @466
  8655: 33 07 20 00 03           a0 = 0x30020
  8660: 95 77 00 10              a0 = a0 + 0x1000
  8664: 01                       fallthrough
      :                          @467
  8665: 82 78                    a1 = u64 [a0]
  8667: c9 87 09                 a2 = a0 - a1
  8670: ab 59 0f                 jump @471 if a2 != s0
      :                          @468
  8673: c9 68 09                 a2 = a1 - s1
  8676: 01                       fallthrough
      :                          @469
  8677: 82 7a                    a3 = u64 [a0]
  8679: ab 8a f2                 jump @467 if a3 != a1
      :                          @470
  8682: 7b 79                    u64 [a0] = a2
  8684: 01                       fallthrough
      :                          @471
  8685: 95 16 ff 07              s1 = sp + 0x7ff
  8689: 95 66 99 03              s1 = s1 + 0x399
  8693: 82 67                    a0 = u64 [s1]
  8695: 33 08 02                 a1 = 0x2
  8698: 33 00 1a 01              ra = 0x11a
  8702: 28 f1 19                 jump @967
      :                          @472 [@dyn 117]
  8705: 95 17 58                 a0 = sp + 0x58
  8708: 33 08 03                 a1 = 0x3
  8711: 33 09 8f 03              a2 = 0x38f
  8715: 33 0a 8f 03              a3 = 0x38f
  8719: 0a 09                    ecalli 9 // 'new'
  8721: 7b 67 70                 u64 [s1 + 0x70] = a0
  8724: 82 17 38                 a0 = u64 [sp + 0x38]
  8727: 7b 67 18                 u64 [s1 + 0x18] = a0
  8730: 82 18 40                 a1 = u64 [sp + 0x40]
  8733: 7b 68 20                 u64 [s1 + 0x20] = a1
  8736: 95 17 ff 07              a0 = sp + 0x7ff
  8740: 95 77 09 04              a0 = a0 + 0x409
  8744: 7b 67 28                 u64 [s1 + 0x28] = a0
  8747: 7b 68 30                 u64 [s1 + 0x30] = a1
  8750: 33 07 60 0b 01           a0 = 0x10b60
  8755: 7b 17 98 01              u64 [sp + 0x198] = a0
  8759: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8764: 49 21 b8 01              u64 [sp + 440] = 0
  8768: 95 17 ff 07              a0 = sp + 0x7ff
  8772: 95 77 b1 03              a0 = a0 + 0x3b1
  8776: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8780: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8785: 95 17 ff 07              a0 = sp + 0x7ff
  8789: 95 77 e1 03              a0 = a0 + 0x3e1
  8793: 95 18 98 01              a1 = sp + 0x198
  8797: 50 20 ec 00 97 09        ra = 236, jump @633
      :                          @473 [@dyn 118]
  8803: 82 65 50                 s0 = u64 [s1 + 0x50]
  8806: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8809: 95 17 ff 07              a0 = sp + 0x7ff
  8813: 95 77 99 03              a0 = a0 + 0x399
  8817: 82 76 48                 s1 = u64 [a0 + 0x48]
  8820: 33 07 02                 a0 = 0x2
  8823: 33 08                    a1 = 0
  8825: 33 09                    a2 = 0
  8827: 64 5a                    a3 = s0
  8829: 33 00 ee 00              ra = 0xee
  8833: 0a 64                    ecalli 100 // 'log'
  8835: 01                       fallthrough
      :                          @474 [@dyn 119]
  8836: 82 17 48                 a0 = u64 [sp + 0x48]
  8839: c8 67 07                 a0 = a0 + s1
  8842: 53 27 00 f0 23           jump @480 if a0 <u 4294963200
      :                          @475
  8847: 33 07 20 00 03           a0 = 0x30020
  8852: 95 77 00 10              a0 = a0 + 0x1000
  8856: 01                       fallthrough
      :                          @476
  8857: 82 78                    a1 = u64 [a0]
  8859: c9 87 09                 a2 = a0 - a1
  8862: ab 59 0f                 jump @480 if a2 != s0
      :                          @477
  8865: c9 68 09                 a2 = a1 - s1
  8868: 01                       fallthrough
      :                          @478
  8869: 82 7a                    a3 = u64 [a0]
  8871: ab 8a f2                 jump @476 if a3 != a1
      :                          @479
  8874: 7b 79                    u64 [a0] = a2
  8876: 01                       fallthrough
      :                          @480
  8877: 95 16 ff 07              s1 = sp + 0x7ff
  8881: 95 66 99 03              s1 = s1 + 0x399
  8885: 82 67 70                 a0 = u64 [s1 + 0x70]
  8888: 33 08 01                 a1 = 0x1
  8891: 50 20 f0 00 34 19        ra = 240, jump @967
      :                          @481 [@dyn 120]
  8897: 95 17 58                 a0 = sp + 0x58
  8900: 33 08 8f 03              a1 = 0x38f
  8904: 33 09 8f 03              a2 = 0x38f
  8908: 0a 0a                    ecalli 10 // 'upgrade'
  8910: 7b 67 78                 u64 [s1 + 0x78] = a0
  8913: 95 17 ff 07              a0 = sp + 0x7ff
  8917: 95 77 11 04              a0 = a0 + 0x411
  8921: 7b 67 28                 u64 [s1 + 0x28] = a0
  8924: 33 07 90 0b 01           a0 = 0x10b90
  8929: 7b 17 98 01              u64 [sp + 0x198] = a0
  8933: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8938: 49 21 b8 01              u64 [sp + 440] = 0
  8942: 95 17 ff 07              a0 = sp + 0x7ff
  8946: 95 77 b1 03              a0 = a0 + 0x3b1
  8950: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8954: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8959: 82 17 38                 a0 = u64 [sp + 0x38]
  8962: 7b 67 18                 u64 [s1 + 0x18] = a0
  8965: 82 17 40                 a0 = u64 [sp + 0x40]
  8968: 7b 67 20                 u64 [s1 + 0x20] = a0
  8971: 7b 67 30                 u64 [s1 + 0x30] = a0
  8974: 95 17 ff 07              a0 = sp + 0x7ff
  8978: 95 77 e1 03              a0 = a0 + 0x3e1
  8982: 95 18 98 01              a1 = sp + 0x198
  8986: 50 20 f2 00 da 08        ra = 242, jump @633
      :                          @482 [@dyn 121]
  8992: 82 65 50                 s0 = u64 [s1 + 0x50]
  8995: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8998: 82 66 48                 s1 = u64 [s1 + 0x48]
  9001: 33 07 02                 a0 = 0x2
  9004: 33 08                    a1 = 0
  9006: 33 09                    a2 = 0
  9008: 64 5a                    a3 = s0
  9010: 33 00 f4 00              ra = 0xf4
  9014: 0a 64                    ecalli 100 // 'log'
  9016: 01                       fallthrough
      :                          @483 [@dyn 122]
  9017: 82 17 48                 a0 = u64 [sp + 0x48]
  9020: c8 67 07                 a0 = a0 + s1
  9023: 53 27 00 f0 23           jump @489 if a0 <u 4294963200
      :                          @484
  9028: 33 07 20 00 03           a0 = 0x30020
  9033: 95 77 00 10              a0 = a0 + 0x1000
  9037: 01                       fallthrough
      :                          @485
  9038: 82 78                    a1 = u64 [a0]
  9040: c9 87 09                 a2 = a0 - a1
  9043: ab 59 0f                 jump @489 if a2 != s0
      :                          @486
  9046: c9 68 09                 a2 = a1 - s1
  9049: 01                       fallthrough
      :                          @487
  9050: 82 7a                    a3 = u64 [a0]
  9052: ab 8a f2                 jump @485 if a3 != a1
      :                          @488
  9055: 7b 79                    u64 [a0] = a2
  9057: 01                       fallthrough
      :                          @489
  9058: 95 16 ff 07              s1 = sp + 0x7ff
  9062: 95 66 99 03              s1 = s1 + 0x399
  9066: 82 67 78                 a0 = u64 [s1 + 0x78]
  9069: 33 08 02                 a1 = 0x2
  9072: 33 05 02                 s0 = 0x2
  9075: 50 20 f6 00 7c 18        ra = 246, jump @967
      :                          @490 [@dyn 123]
  9081: 48 06 8f 03              u32 [s1 + 0] = 0x38f
  9085: 48 16 08                 u32 [s1 + 8] = 0
  9088: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
  9093: 33 08 01                 a1 = 0x1
  9096: 33 09 01                 a2 = 0x1
  9099: 95 1a ff 07              a3 = sp + 0x7ff
  9103: 95 aa 99 03              a3 = a3 + 0x399
  9107: 33 0b 01                 a4 = 0x1
  9110: 33 07                    a0 = 0
  9112: 0a 05                    ecalli 5 // 'bless'
  9114: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9118: 95 17 ff 07              a0 = sp + 0x7ff
  9122: 95 77 19 04              a0 = a0 + 0x419
  9126: 7b 67 28                 u64 [s1 + 0x28] = a0
  9129: 33 07 c0 0b 01           a0 = 0x10bc0
  9134: 7b 17 98 01              u64 [sp + 0x198] = a0
  9138: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9143: 49 21 b8 01              u64 [sp + 440] = 0
  9147: 95 17 ff 07              a0 = sp + 0x7ff
  9151: 95 77 b1 03              a0 = a0 + 0x3b1
  9155: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9159: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9163: 82 17 38                 a0 = u64 [sp + 0x38]
  9166: 7b 67 18                 u64 [s1 + 0x18] = a0
  9169: 82 17 40                 a0 = u64 [sp + 0x40]
  9172: 7b 67 20                 u64 [s1 + 0x20] = a0
  9175: 7b 67 30                 u64 [s1 + 0x30] = a0
  9178: 95 17 ff 07              a0 = sp + 0x7ff
  9182: 95 77 e1 03              a0 = a0 + 0x3e1
  9186: 95 18 98 01              a1 = sp + 0x198
  9190: 50 20 f8 00 0e 08        ra = 248, jump @633
      :                          @491 [@dyn 124]
  9196: 82 65 50                 s0 = u64 [s1 + 0x50]
  9199: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9202: 82 66 48                 s1 = u64 [s1 + 0x48]
  9205: 33 07 02                 a0 = 0x2
  9208: 33 08                    a1 = 0
  9210: 33 09                    a2 = 0
  9212: 64 5a                    a3 = s0
  9214: 33 00 fa 00              ra = 0xfa
  9218: 0a 64                    ecalli 100 // 'log'
  9220: 01                       fallthrough
      :                          @492 [@dyn 125]
  9221: 82 17 48                 a0 = u64 [sp + 0x48]
  9224: c8 67 07                 a0 = a0 + s1
  9227: 53 27 00 f0 23           jump @498 if a0 <u 4294963200
      :                          @493
  9232: 33 07 20 00 03           a0 = 0x30020
  9237: 95 77 00 10              a0 = a0 + 0x1000
  9241: 01                       fallthrough
      :                          @494
  9242: 82 78                    a1 = u64 [a0]
  9244: c9 87 09                 a2 = a0 - a1
  9247: ab 59 0f                 jump @498 if a2 != s0
      :                          @495
  9250: c9 68 09                 a2 = a1 - s1
  9253: 01                       fallthrough
      :                          @496
  9254: 82 7a                    a3 = u64 [a0]
  9256: ab 8a f2                 jump @494 if a3 != a1
      :                          @497
  9259: 7b 79                    u64 [a0] = a2
  9261: 01                       fallthrough
      :                          @498
  9262: 95 16 ff 07              s1 = sp + 0x7ff
  9266: 95 66 99 03              s1 = s1 + 0x399
  9270: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9274: 33 08 05                 a1 = 0x5
  9277: 33 00 1a 01              ra = 0x11a
  9281: 28 ae 17                 jump @967
      :                          @499 [@dyn 126]
  9284: 95 17 55                 a0 = sp + 0x55
  9287: 33 08 03                 a1 = 0x3
  9290: 33 09                    a2 = 0
  9292: 33 0a                    a3 = 0
  9294: 0a 03                    ecalli 3 // 'write'
  9296: 7b 67 68                 u64 [s1 + 0x68] = a0
  9299: 33 07 40 00 01           a0 = 0x10040
  9304: 7b 17 10                 u64 [sp + 0x10] = a0
  9307: 7b 67 18                 u64 [s1 + 0x18] = a0
  9310: 82 18 40                 a1 = u64 [sp + 0x40]
  9313: 7b 68 20                 u64 [s1 + 0x20] = a1
  9316: 95 17 ff 07              a0 = sp + 0x7ff
  9320: 95 77 01 04              a0 = a0 + 0x401
  9324: 7b 67 28                 u64 [s1 + 0x28] = a0
  9327: 7b 68 30                 u64 [s1 + 0x30] = a1
  9330: 33 07 f0 0b 01           a0 = 0x10bf0
  9335: 7b 17 98 01              u64 [sp + 0x198] = a0
  9339: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9344: 49 21 b8 01              u64 [sp + 440] = 0
  9348: 95 17 ff 07              a0 = sp + 0x7ff
  9352: 95 77 b1 03              a0 = a0 + 0x3b1
  9356: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9360: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9365: 95 17 ff 07              a0 = sp + 0x7ff
  9369: 95 77 e1 03              a0 = a0 + 0x3e1
  9373: 95 18 98 01              a1 = sp + 0x198
  9377: 50 20 fe 00 53 07        ra = 254, jump @633
      :                          @500 [@dyn 127]
  9383: 82 65 50                 s0 = u64 [s1 + 0x50]
  9386: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9389: 95 17 ff 07              a0 = sp + 0x7ff
  9393: 95 77 99 03              a0 = a0 + 0x399
  9397: 82 76 48                 s1 = u64 [a0 + 0x48]
  9400: 33 07 02                 a0 = 0x2
  9403: 33 08                    a1 = 0
  9405: 33 09                    a2 = 0
  9407: 64 5a                    a3 = s0
  9409: 33 00 00 01              ra = 0x100
  9413: 0a 64                    ecalli 100 // 'log'
  9415: 01                       fallthrough
      :                          @501 [@dyn 128]
  9416: 82 17 48                 a0 = u64 [sp + 0x48]
  9419: c8 67 07                 a0 = a0 + s1
  9422: 33 08 20 00 03           a1 = 0x30020
  9427: 7b 18 08                 u64 [sp + 0x8] = a1
  9430: 53 27 00 f0 21           jump @507 if a0 <u 4294963200
      :                          @502
  9435: 82 18 08                 a1 = u64 [sp + 0x8]
  9438: 95 87 00 10              a0 = a1 + 0x1000
  9442: 01                       fallthrough
      :                          @503
  9443: 82 78                    a1 = u64 [a0]
  9445: c9 87 09                 a2 = a0 - a1
  9448: ab 59 0f                 jump @507 if a2 != s0
      :                          @504
  9451: c9 68 09                 a2 = a1 - s1
  9454: 01                       fallthrough
      :                          @505
  9455: 82 7a                    a3 = u64 [a0]
  9457: ab 8a f2                 jump @503 if a3 != a1
      :                          @506
  9460: 7b 79                    u64 [a0] = a2
  9462: 01                       fallthrough
      :                          @507
  9463: 95 16 ff 07              s1 = sp + 0x7ff
  9467: 95 66 99 03              s1 = s1 + 0x399
  9471: 82 67 68                 a0 = u64 [s1 + 0x68]
  9474: 33 08 01                 a1 = 0x1
  9477: 50 20 02 01 ea 16        ra = 258, jump @967
      :                          @508 [@dyn 129]
  9483: 95 17 55                 a0 = sp + 0x55
  9486: 33 08 03                 a1 = 0x3
  9489: 95 19 52                 a2 = sp + 0x52
  9492: 33 0a 03                 a3 = 0x3
  9495: 0a 03                    ecalli 3 // 'write'
  9497: 7b 67 70                 u64 [s1 + 0x70] = a0
  9500: 95 17 ff 07              a0 = sp + 0x7ff
  9504: 95 77 09 04              a0 = a0 + 0x409
  9508: 7b 67 28                 u64 [s1 + 0x28] = a0
  9511: 33 07 20 0c 01           a0 = 0x10c20
  9516: 7b 17 98 01              u64 [sp + 0x198] = a0
  9520: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9525: 49 21 b8 01              u64 [sp + 440] = 0
  9529: 95 17 ff 07              a0 = sp + 0x7ff
  9533: 95 77 b1 03              a0 = a0 + 0x3b1
  9537: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9541: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9546: 82 17 10                 a0 = u64 [sp + 0x10]
  9549: 7b 67 18                 u64 [s1 + 0x18] = a0
  9552: 82 17 40                 a0 = u64 [sp + 0x40]
  9555: 7b 67 20                 u64 [s1 + 0x20] = a0
  9558: 7b 67 30                 u64 [s1 + 0x30] = a0
  9561: 95 17 ff 07              a0 = sp + 0x7ff
  9565: 95 77 e1 03              a0 = a0 + 0x3e1
  9569: 95 18 98 01              a1 = sp + 0x198
  9573: 50 20 04 01 8f 06        ra = 260, jump @633
      :                          @509 [@dyn 130]
  9579: 82 65 50                 s0 = u64 [s1 + 0x50]
  9582: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9585: 82 66 48                 s1 = u64 [s1 + 0x48]
  9588: 33 07 02                 a0 = 0x2
  9591: 33 08                    a1 = 0
  9593: 33 09                    a2 = 0
  9595: 64 5a                    a3 = s0
  9597: 33 00 06 01              ra = 0x106
  9601: 0a 64                    ecalli 100 // 'log'
  9603: 01                       fallthrough
      :                          @510 [@dyn 131]
  9604: 82 17 48                 a0 = u64 [sp + 0x48]
  9607: c8 67 07                 a0 = a0 + s1
  9610: 53 27 00 f0 21           jump @516 if a0 <u 4294963200
      :                          @511
  9615: 82 18 08                 a1 = u64 [sp + 0x8]
  9618: 95 87 00 10              a0 = a1 + 0x1000
  9622: 01                       fallthrough
      :                          @512
  9623: 82 78                    a1 = u64 [a0]
  9625: c9 87 09                 a2 = a0 - a1
  9628: ab 59 0f                 jump @516 if a2 != s0
      :                          @513
  9631: c9 68 09                 a2 = a1 - s1
  9634: 01                       fallthrough
      :                          @514
  9635: 82 7a                    a3 = u64 [a0]
  9637: ab 8a f2                 jump @512 if a3 != a1
      :                          @515
  9640: 7b 79                    u64 [a0] = a2
  9642: 01                       fallthrough
      :                          @516
  9643: 95 16 ff 07              s1 = sp + 0x7ff
  9647: 95 66 99 03              s1 = s1 + 0x399
  9651: 82 67 70                 a0 = u64 [s1 + 0x70]
  9654: 33 08 02                 a1 = 0x2
  9657: 33 05 02                 s0 = 0x2
  9660: 50 20 08 01 33 16        ra = 264, jump @967
      :                          @517 [@dyn 132]
  9666: 95 17 55                 a0 = sp + 0x55
  9669: 33 08 03                 a1 = 0x3
  9672: 33 09                    a2 = 0
  9674: 33 0a                    a3 = 0
  9676: 0a 03                    ecalli 3 // 'write'
  9678: 7b 67 78                 u64 [s1 + 0x78] = a0
  9681: 82 17 38                 a0 = u64 [sp + 0x38]
  9684: 7b 67 18                 u64 [s1 + 0x18] = a0
  9687: 82 18 40                 a1 = u64 [sp + 0x40]
  9690: 7b 68 20                 u64 [s1 + 0x20] = a1
  9693: 95 17 ff 07              a0 = sp + 0x7ff
  9697: 95 77 11 04              a0 = a0 + 0x411
  9701: 7b 67 28                 u64 [s1 + 0x28] = a0
  9704: 7b 68 30                 u64 [s1 + 0x30] = a1
  9707: 33 07 50 0c 01           a0 = 0x10c50
  9712: 7b 17 98 01              u64 [sp + 0x198] = a0
  9716: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9721: 49 21 b8 01              u64 [sp + 440] = 0
  9725: 95 17 ff 07              a0 = sp + 0x7ff
  9729: 95 77 b1 03              a0 = a0 + 0x3b1
  9733: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9737: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9741: 95 17 ff 07              a0 = sp + 0x7ff
  9745: 95 77 e1 03              a0 = a0 + 0x3e1
  9749: 95 18 98 01              a1 = sp + 0x198
  9753: 50 20 0a 01 db 05        ra = 266, jump @633
      :                          @518 [@dyn 133]
  9759: 82 65 50                 s0 = u64 [s1 + 0x50]
  9762: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9765: 82 66 48                 s1 = u64 [s1 + 0x48]
  9768: 33 07 02                 a0 = 0x2
  9771: 33 08                    a1 = 0
  9773: 33 09                    a2 = 0
  9775: 64 5a                    a3 = s0
  9777: 33 00 0c 01              ra = 0x10c
  9781: 0a 64                    ecalli 100 // 'log'
  9783: 01                       fallthrough
      :                          @519 [@dyn 134]
  9784: 82 17 48                 a0 = u64 [sp + 0x48]
  9787: c8 67 07                 a0 = a0 + s1
  9790: 53 27 00 f0 21           jump @525 if a0 <u 4294963200
      :                          @520
  9795: 82 18 08                 a1 = u64 [sp + 0x8]
  9798: 95 87 00 10              a0 = a1 + 0x1000
  9802: 01                       fallthrough
      :                          @521
  9803: 82 78                    a1 = u64 [a0]
  9805: c9 87 09                 a2 = a0 - a1
  9808: ab 59 0f                 jump @525 if a2 != s0
      :                          @522
  9811: c9 68 09                 a2 = a1 - s1
  9814: 01                       fallthrough
      :                          @523
  9815: 82 7a                    a3 = u64 [a0]
  9817: ab 8a f2                 jump @521 if a3 != a1
      :                          @524
  9820: 7b 79                    u64 [a0] = a2
  9822: 01                       fallthrough
      :                          @525
  9823: 95 16 ff 07              s1 = sp + 0x7ff
  9827: 95 66 99 03              s1 = s1 + 0x399
  9831: 82 67 78                 a0 = u64 [s1 + 0x78]
  9834: 33 08 05                 a1 = 0x5
  9837: 50 20 0e 01 82 15        ra = 270, jump @967
      :                          @526 [@dyn 135]
  9843: 95 18 55                 a1 = sp + 0x55
  9846: 33 09 03                 a2 = 0x3
  9849: 95 1a 98 00              a3 = sp + 0x98
  9853: 33 0c 00 01              a5 = 0x100
  9857: 82 17 30                 a0 = u64 [sp + 0x30]
  9860: 33 0b                    a4 = 0
  9862: 0a 02                    ecalli 2 // 'read'
  9864: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9868: 95 17 ff 07              a0 = sp + 0x7ff
  9872: 95 77 19 04              a0 = a0 + 0x419
  9876: 7b 67 28                 u64 [s1 + 0x28] = a0
  9879: 33 07 80 0c 01           a0 = 0x10c80
  9884: 7b 17 98 01              u64 [sp + 0x198] = a0
  9888: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9893: 49 21 b8 01              u64 [sp + 440] = 0
  9897: 95 17 ff 07              a0 = sp + 0x7ff
  9901: 95 77 b1 03              a0 = a0 + 0x3b1
  9905: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9909: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9914: 82 17 10                 a0 = u64 [sp + 0x10]
  9917: 7b 67 18                 u64 [s1 + 0x18] = a0
  9920: 82 17 40                 a0 = u64 [sp + 0x40]
  9923: 7b 67 20                 u64 [s1 + 0x20] = a0
  9926: 7b 67 30                 u64 [s1 + 0x30] = a0
  9929: 95 17 ff 07              a0 = sp + 0x7ff
  9933: 95 77 e1 03              a0 = a0 + 0x3e1
  9937: 95 18 98 01              a1 = sp + 0x198
  9941: 50 20 10 01 1f 05        ra = 272, jump @633
      :                          @527 [@dyn 136]
  9947: 82 65 50                 s0 = u64 [s1 + 0x50]
  9950: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9953: 82 66 48                 s1 = u64 [s1 + 0x48]
  9956: 33 07 02                 a0 = 0x2
  9959: 33 08                    a1 = 0
  9961: 33 09                    a2 = 0
  9963: 64 5a                    a3 = s0
  9965: 33 00 12 01              ra = 0x112
  9969: 0a 64                    ecalli 100 // 'log'
  9971: 01                       fallthrough
      :                          @528 [@dyn 137]
  9972: 82 17 48                 a0 = u64 [sp + 0x48]
  9975: c8 67 07                 a0 = a0 + s1
  9978: 53 27 00 f0 21           jump @534 if a0 <u 4294963200
      :                          @529
  9983: 82 18 08                 a1 = u64 [sp + 0x8]
  9986: 95 87 00 10              a0 = a1 + 0x1000
  9990: 01                       fallthrough
      :                          @530
  9991: 82 78                    a1 = u64 [a0]
  9993: c9 87 09                 a2 = a0 - a1
  9996: ab 59 0f                 jump @534 if a2 != s0
      :                          @531
  9999: c9 68 09                 a2 = a1 - s1
 10002: 01                       fallthrough
      :                          @532
 10003: 82 7a                    a3 = u64 [a0]
 10005: ab 8a f2                 jump @530 if a3 != a1
      :                          @533
 10008: 7b 79                    u64 [a0] = a2
 10010: 01                       fallthrough
      :                          @534
 10011: 95 16 ff 07              s1 = sp + 0x7ff
 10015: 95 66 99 03              s1 = s1 + 0x399
 10019: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10023: 33 08 06                 a1 = 0x6
 10026: 50 20 14 01 c5 14        ra = 276, jump @967
      :                          @535 [@dyn 138]
 10032: 95 17 55                 a0 = sp + 0x55
 10035: 33 08 03                 a1 = 0x3
 10038: 33 09                    a2 = 0
 10040: 33 0a                    a3 = 0
 10042: 0a 03                    ecalli 3 // 'write'
 10044: 7b 67                    u64 [s1] = a0
 10046: 82 17 10                 a0 = u64 [sp + 0x10]
 10049: 7b 67 18                 u64 [s1 + 0x18] = a0
 10052: 33 07 b0 0c 01           a0 = 0x10cb0
 10057: 7b 17 98 01              u64 [sp + 0x198] = a0
 10061: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10066: 49 21 b8 01              u64 [sp + 440] = 0
 10070: 95 17 ff 07              a0 = sp + 0x7ff
 10074: 95 77 b1 03              a0 = a0 + 0x3b1
 10078: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10082: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10087: 82 17 40                 a0 = u64 [sp + 0x40]
 10090: 7b 67 20                 u64 [s1 + 0x20] = a0
 10093: 7b 66 28                 u64 [s1 + 0x28] = s1
 10096: 7b 67 30                 u64 [s1 + 0x30] = a0
 10099: 95 17 ff 07              a0 = sp + 0x7ff
 10103: 95 77 e1 03              a0 = a0 + 0x3e1
 10107: 95 18 98 01              a1 = sp + 0x198
 10111: 50 20 16 01 75 04        ra = 278, jump @633
      :                          @536 [@dyn 139]
 10117: 82 65 50                 s0 = u64 [s1 + 0x50]
 10120: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10123: 82 66 48                 s1 = u64 [s1 + 0x48]
 10126: 33 07 02                 a0 = 0x2
 10129: 33 08                    a1 = 0
 10131: 33 09                    a2 = 0
 10133: 64 5a                    a3 = s0
 10135: 33 00 18 01              ra = 0x118
 10139: 0a 64                    ecalli 100 // 'log'
 10141: 01                       fallthrough
      :                          @537 [@dyn 140]
 10142: 82 17 48                 a0 = u64 [sp + 0x48]
 10145: c8 67 07                 a0 = a0 + s1
 10148: 53 27 00 f0 21           jump @543 if a0 <u 4294963200
      :                          @538
 10153: 82 18 08                 a1 = u64 [sp + 0x8]
 10156: 95 87 00 10              a0 = a1 + 0x1000
 10160: 01                       fallthrough
      :                          @539
 10161: 82 78                    a1 = u64 [a0]
 10163: c9 87 09                 a2 = a0 - a1
 10166: ab 59 0f                 jump @543 if a2 != s0
      :                          @540
 10169: c9 68 09                 a2 = a1 - s1
 10172: 01                       fallthrough
      :                          @541
 10173: 82 7a                    a3 = u64 [a0]
 10175: ab 8a f2                 jump @539 if a3 != a1
      :                          @542
 10178: 7b 79                    u64 [a0] = a2
 10180: 01                       fallthrough
      :                          @543
 10181: 95 16 ff 07              s1 = sp + 0x7ff
 10185: 95 66 99 03              s1 = s1 + 0x399
 10189: 82 67                    a0 = u64 [s1]
 10191: 33 08 07                 a1 = 0x7
 10194: 50 20 1a 01 1d 14        ra = 282, jump @967
      :                          @544 [@dyn 141]
 10200: 95 18 98 00              a1 = sp + 0x98
 10204: 82 17 30                 a0 = u64 [sp + 0x30]
 10207: 0a 04                    ecalli 4 // 'info'
 10209: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10213: 33 08 08                 a1 = 0x8
 10216: 50 20 1c 01 07 14        ra = 284, jump @967
      :                          @545 [@dyn 142]
 10222: 82 17 38                 a0 = u64 [sp + 0x38]
 10225: 7b 67 18                 u64 [s1 + 0x18] = a0
 10228: 82 18 40                 a1 = u64 [sp + 0x40]
 10231: 7b 68 20                 u64 [s1 + 0x20] = a1
 10234: 95 17 ff 07              a0 = sp + 0x7ff
 10238: 95 77 19 04              a0 = a0 + 0x419
 10242: 7b 67 28                 u64 [s1 + 0x28] = a0
 10245: 7b 68 30                 u64 [s1 + 0x30] = a1
 10248: 33 07 e0 0c 01           a0 = 0x10ce0
 10253: 7b 17 98 01              u64 [sp + 0x198] = a0
 10257: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10262: 49 21 b8 01              u64 [sp + 440] = 0
 10266: 95 17 ff 07              a0 = sp + 0x7ff
 10270: 95 77 b1 03              a0 = a0 + 0x3b1
 10274: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10278: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10283: 95 17 ff 07              a0 = sp + 0x7ff
 10287: 95 77 e1 03              a0 = a0 + 0x3e1
 10291: 95 18 98 01              a1 = sp + 0x198
 10295: 50 20 1e 01 bd 03        ra = 286, jump @633
      :                          @546 [@dyn 143]
 10301: 82 65 50                 s0 = u64 [s1 + 0x50]
 10304: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10307: 95 17 ff 07              a0 = sp + 0x7ff
 10311: 95 77 99 03              a0 = a0 + 0x399
 10315: 82 76 48                 s1 = u64 [a0 + 0x48]
 10318: 33 07 02                 a0 = 0x2
 10321: 33 08                    a1 = 0
 10323: 33 09                    a2 = 0
 10325: 64 5a                    a3 = s0
 10327: 33 00 20 01              ra = 0x120
 10331: 0a 64                    ecalli 100 // 'log'
 10333: 01                       fallthrough
      :                          @547 [@dyn 144]
 10334: 82 17 48                 a0 = u64 [sp + 0x48]
 10337: c8 67 07                 a0 = a0 + s1
 10340: 53 27 00 f0 25           jump @553 if a0 <u 4294963200
      :                          @548
 10345: 33 07 20 00 03           a0 = 0x30020
 10350: 95 77 00 10              a0 = a0 + 0x1000
 10354: 01                       fallthrough
      :                          @549
 10355: 82 78                    a1 = u64 [a0]
 10357: c9 87 09                 a2 = a0 - a1
 10360: ab 59 11                 jump @553 if a2 != s0
      :                          @550
 10363: c9 68 09                 a2 = a1 - s1
 10366: 01                       fallthrough
      :                          @551
 10367: 82 7a                    a3 = u64 [a0]
 10369: ab 8a f2                 jump @549 if a3 != a1
      :                          @552
 10372: 7b 79                    u64 [a0] = a2
 10374: 0a                       ecalli 0 // 'gas'
 10375: 28 04                    jump @554
      :                          @553
 10377: 0a                       ecalli 0 // 'gas'
 10378: 01                       fallthrough
      :                          @554
 10379: 95 16 ff 07              s1 = sp + 0x7ff
 10383: 95 66 99 03              s1 = s1 + 0x399
 10387: 7b 67                    u64 [s1] = a0
 10389: 33 08 09                 a1 = 0x9
 10392: 50 20 22 01 57 13        ra = 290, jump @967
      :                          @555 [@dyn 145]
 10398: 82 17 38                 a0 = u64 [sp + 0x38]
 10401: 7b 67 18                 u64 [s1 + 0x18] = a0
 10404: 82 17 40                 a0 = u64 [sp + 0x40]
 10407: 7b 67 20                 u64 [s1 + 0x20] = a0
 10410: 7b 66 28                 u64 [s1 + 0x28] = s1
 10413: 7b 67 30                 u64 [s1 + 0x30] = a0
 10416: 33 07 10 0d 01           a0 = 0x10d10
 10421: 7b 17 98 01              u64 [sp + 0x198] = a0
 10425: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10430: 49 21 b8 01              u64 [sp + 440] = 0
 10434: 95 17 ff 07              a0 = sp + 0x7ff
 10438: 95 77 b1 03              a0 = a0 + 0x3b1
 10442: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10446: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10451: 95 17 ff 07              a0 = sp + 0x7ff
 10455: 95 77 e1 03              a0 = a0 + 0x3e1
 10459: 95 18 98 01              a1 = sp + 0x198
 10463: 50 20 24 01 15 03        ra = 292, jump @633
      :                          @556 [@dyn 146]
 10469: 82 65 50                 s0 = u64 [s1 + 0x50]
 10472: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10475: 82 66 48                 s1 = u64 [s1 + 0x48]
 10478: 33 07 02                 a0 = 0x2
 10481: 33 08                    a1 = 0
 10483: 33 09                    a2 = 0
 10485: 64 5a                    a3 = s0
 10487: 33 00 26 01              ra = 0x126
 10491: 0a 64                    ecalli 100 // 'log'
 10493: 01                       fallthrough
      :                          @557 [@dyn 147]
 10494: 82 17 48                 a0 = u64 [sp + 0x48]
 10497: c8 67 07                 a0 = a0 + s1
 10500: 53 27 00 f0 25           jump @563 if a0 <u 4294963200
      :                          @558
 10505: 33 07 20 00 03           a0 = 0x30020
 10510: 95 77 00 10              a0 = a0 + 0x1000
 10514: 01                       fallthrough
      :                          @559
 10515: 82 78                    a1 = u64 [a0]
 10517: c9 87 09                 a2 = a0 - a1
 10520: ab 59 11                 jump @563 if a2 != s0
      :                          @560
 10523: c9 68 09                 a2 = a1 - s1
 10526: 01                       fallthrough
      :                          @561
 10527: 82 7a                    a3 = u64 [a0]
 10529: ab 8a f2                 jump @559 if a3 != a1
      :                          @562
 10532: 7b 79                    u64 [a0] = a2
 10534: 33 0b                    a4 = 0
 10536: 01                       fallthrough
      :                          @563
 10537: 49 21 b0 01              u64 [sp + 432] = 0
 10541: 49 21 a8 01              u64 [sp + 424] = 0
 10545: 49 21 a0 01              u64 [sp + 416] = 0
 10549: 49 21 98 01              u64 [sp + 408] = 0
 10553: 82 19 20                 a2 = u64 [sp + 0x20]
 10556: 82 1a 28                 a3 = u64 [sp + 0x28]
 10559: 55 19 21 79              jump @574 if a2 >=u 33
      :                          @564
 10563: 97 a6 20                 s1 = a3 << 0x20
 10566: 98 66 20                 s1 = s1 >> 0x20
 10569: 95 17 98 01              a0 = sp + 0x198
 10573: 95 15 98 01              s0 = sp + 0x198
 10577: 82 18 18                 a1 = u64 [sp + 0x18]
 10580: 50 20 28 01 15 05        ra = 296, jump @683
      :                          @565 [@dyn 148]
 10586: 3a 08 00 00 03           a1 = u64 [0x30000]
 10591: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 10601: ca 76 07                 a0 = s1 * a0
 10604: ae 87 2c                 jump @570 if a0 >=u a1
      :                          @566
 10607: 82 18 28                 a1 = u64 [sp + 0x28]
 10610: 51 18 09 18              jump @568 if a1 == 9
      :                          @567
 10614: 0a 08                    ecalli 8 // 'checkpoint'
 10616: 33 0a 92 04 01           a3 = 0x10492
 10621: 33 07 02                 a0 = 0x2
 10624: 33 0b 11                 a4 = 0x11
 10627: 33 08                    a1 = 0
 10629: 33 09                    a2 = 0
 10631: 0a 64                    ecalli 100 // 'log'
 10633: 01                       fallthrough
      :                          @568
 10634: 95 67 2a                 a0 = s1 + 0x2a
 10637: 33 08 07                 a1 = 0x7
 10640: 50 20 2a 01 5f 12        ra = 298, jump @967
      :                          @569 [@dyn 149]
 10646: 32 07                    jump [a0]
      :                          @570
 10648: 95 17 98 01              a0 = sp + 0x198
 10652: 0a 10                    ecalli 16 // 'oyield'
 10654: 33 0a 21 03 01           a3 = 0x10321
 10659: 33 07 02                 a0 = 0x2
 10662: 33 0b 10                 a4 = 0x10
 10665: 33 08                    a1 = 0
 10667: 33 09                    a2 = 0
 10669: 0a 64                    ecalli 100 // 'log'
 10671: 33 08 20                 a1 = 0x20
 10674: 28 0c e4                 jump @216
      :                          @571
 10677: 00                       trap
      :                          @572
 10678: 00                       trap
      :                          @573
 10679: 00                       trap
      :                          @574
 10680: 00                       trap
      :                          @575
 10681: 00                       trap
      :                          @576 [export #2: 'on_transfer']
 10682: 33 07 00 00 01           a0 = 0x10000
 10687: 33 08                    a1 = 0
 10689: 32 00                    ret
      :                          @577
 10691: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 10694: 7b 10 40                 u64 [sp + 0x40] = ra
 10697: 7b 15 38                 u64 [sp + 0x38] = s0
 10700: 7b 16 30                 u64 [sp + 0x30] = s1
 10703: c8 89 09                 a2 = a2 + a1
 10706: ac 89 53                 jump @585 if a2 <u a1
      :                          @578
 10709: 64 75                    s0 = a0
 10711: 82 77                    a0 = u64 [a0]
 10713: 97 78 01                 a1 = a0 << 0x1
 10716: 33 0a 08                 a3 = 0x8
 10719: e4 a9 09                 a2 = maxu(a2, a3)
 10722: e4 98 06                 s1 = maxu(a1, a2)
 10725: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 10728: 98 88 3f                 a1 = a1 >> 0x3f
 10731: 51 07 12                 jump @580 if a0 == 0
      :                          @579
 10734: 82 59 08                 a2 = u64 [s0 + 0x8]
 10737: 7b 19 18                 u64 [sp + 0x18] = a2
 10740: 49 11 20 01              u64 [sp + 32] = 0x1
 10744: 7b 17 28                 u64 [sp + 0x28] = a0
 10747: 28 06                    jump @581
      :                          @580
 10749: 49 11 20                 u64 [sp + 32] = 0
 10752: 01                       fallthrough
      :                          @581
 10753: 64 17                    a0 = sp
 10755: 95 1a 18                 a3 = sp + 0x18
 10758: 64 69                    a2 = s1
 10760: 50 20 2c 01 33           ra = 300, jump @589
      :                          @582 [@dyn 150]
 10765: 82 18                    a1 = u64 [sp]
 10767: 82 17 08                 a0 = u64 [sp + 0x8]
 10770: 51 08 14                 jump @586 if a1 == 0
      :                          @583
 10773: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 10783: aa 87 0d                 jump @587 if a0 == a1
      :                          @584
 10786: 52 07 18                 jump @588 if a0 != 0
      :                          @585
 10789: 00                       trap
      :                          @586
 10790: 7b 57 08                 u64 [s0 + 0x8] = a0
 10793: 7b 56                    u64 [s0] = s1
 10795: 01                       fallthrough
      :                          @587
 10796: 82 10 40                 ra = u64 [sp + 0x40]
 10799: 82 15 38                 s0 = u64 [sp + 0x38]
 10802: 82 16 30                 s1 = u64 [sp + 0x30]
 10805: 95 11 48                 sp = sp + 0x48
 10808: 32 00                    ret
      :                          @588
 10810: 00                       trap
      :                          @589
 10811: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 10814: 7b 10 30                 u64 [sp + 0x30] = ra
 10817: 7b 15 28                 u64 [sp + 0x28] = s0
 10820: 7b 16 20                 u64 [sp + 0x20] = s1
 10823: 64 96                    s1 = a2
 10825: 64 73                    t1 = a0
 10827: 51 08 6f                 jump @599 if a1 == 0
      :                          @590
 10830: 82 a7 08                 a0 = u64 [a3 + 0x8]
 10833: 51 07 72                 jump @600 if a0 == 0
      :                          @591
 10836: 82 a9 10                 a2 = u64 [a3 + 0x10]
 10839: 51 09 9f 00              jump @607 if a2 == 0
      :                          @592
 10843: 82 a8                    a1 = u64 [a3]
 10845: 33 02 00 10              t0 = 0x1000
 10849: 33 04 20 00 03           t2 = 0x30020
 10854: c8 24 07                 a0 = t2 + t0
 10857: 01                       fallthrough
      :                          @593
 10858: 82 7a                    a3 = u64 [a0]
 10860: c8 6a 05                 s0 = a3 + s1
 10863: ac a5 c3 00              jump @613 if s0 <u a3
      :                          @594
 10867: 95 5b 01                 a4 = s0 + 0x1
 10870: 88 bc 01                 a5 = a4 <u 0x1
 10873: d8 b2 0b                 a4 = t0 <u a4
 10876: d4 cb 0b                 a4 = a4 | a5
 10879: 52 0b b3 00              jump @613 if a4 != 0
      :                          @595
 10883: 82 7b                    a4 = u64 [a0]
 10885: ab ab e5                 jump @593 if a4 != a3
      :                          @596
 10888: 7b 75                    u64 [a0] = s0
 10890: 33 0c                    a5 = 0
 10892: 7b 13 18                 u64 [sp + 0x18] = t1
 10895: c9 54 07                 a0 = t2 - s0
 10898: 95 77 00 10              a0 = a0 + 0x1000
 10902: 7b 17 10                 u64 [sp + 0x10] = a0
 10905: 7b 18 08                 u64 [sp + 0x8] = a1
 10908: 64 95                    s0 = a2
 10910: 7b 14                    u64 [sp] = t2
 10912: 50 20 2e 01 c9 03        ra = 302, jump @683
      :                          @597 [@dyn 151]
 10918: 54 25 00 10 94 00        jump @614 if s0 <=u 4096
      :                          @598
 10924: 82 13 18                 t1 = u64 [sp + 0x18]
 10927: 82 18 10                 a1 = u64 [sp + 0x10]
 10930: 33 07                    a0 = 0
 10932: 7b 38 08                 u64 [t1 + 0x8] = a1
 10935: 28 b1 00                 jump @620
      :                          @599
 10938: 49 13 08                 u64 [t1 + 8] = 0
 10941: 33 07 01                 a0 = 0x1
 10944: 28 a8 00                 jump @620
      :                          @600
 10947: 33 07 00 10              a0 = 0x1000
 10951: 33 02 20 00 03           t0 = 0x30020
 10956: c8 72 09                 a2 = t0 + a0
 10959: 01                       fallthrough
      :                          @601
 10960: 82 9b                    a4 = u64 [a2]
 10962: c8 6b 0a                 a3 = a4 + s1
 10965: ac ba 5d                 jump @613 if a3 <u a4
      :                          @602
 10968: 95 ac 01                 a5 = a3 + 0x1
 10971: 88 c8 01                 a1 = a5 <u 0x1
 10974: d8 c7 0c                 a5 = a0 <u a5
 10977: d4 c8 08                 a1 = a1 | a5
 10980: 52 08 4e                 jump @613 if a1 != 0
      :                          @603
 10983: 82 98                    a1 = u64 [a2]
 10985: ab b8 e7                 jump @601 if a1 != a4
      :                          @604
 10988: 7b 9a                    u64 [a2] = a3
 10990: 33 0c                    a5 = 0
 10992: 01                       fallthrough
      :                          @605
 10993: ab b8 df                 jump @601 if a1 != a4
      :                          @606
 10996: 28 30                    jump @612
      :                          @607
 10998: 33 07 00 10              a0 = 0x1000
 11002: 33 02 20 00 03           t0 = 0x30020
 11007: c8 72 09                 a2 = t0 + a0
 11010: 01                       fallthrough
      :                          @608
 11011: 82 9b                    a4 = u64 [a2]
 11013: c8 6b 0a                 a3 = a4 + s1
 11016: ac ba 2a                 jump @613 if a3 <u a4
      :                          @609
 11019: 95 ac 01                 a5 = a3 + 0x1
 11022: 88 c8 01                 a1 = a5 <u 0x1
 11025: d8 c7 0c                 a5 = a0 <u a5
 11028: d4 c8 08                 a1 = a1 | a5
 11031: 52 08 1b                 jump @613 if a1 != 0
      :                          @610
 11034: 82 98                    a1 = u64 [a2]
 11036: ab b8 e7                 jump @608 if a1 != a4
      :                          @611
 11039: 7b 9a                    u64 [a2] = a3
 11041: 33 0c                    a5 = 0
 11043: 01                       fallthrough
      :                          @612
 11044: c9 a2 07                 a0 = t0 - a3
 11047: 95 78 00 10              a1 = a0 + 0x1000
 11051: 33 07                    a0 = 0
 11053: 7b 38 08                 u64 [t1 + 0x8] = a1
 11056: 28 38                    jump @620
      :                          @613
 11058: 33 07 01                 a0 = 0x1
 11061: 7b 37 08                 u64 [t1 + 0x8] = a0
 11064: 28 30                    jump @620
      :                          @614
 11066: 64 5c                    a5 = s0
 11068: 82 18                    a1 = u64 [sp]
 11070: 95 87 00 10              a0 = a1 + 0x1000
 11074: 82 13 18                 t1 = u64 [sp + 0x18]
 11077: 82 15 08                 s0 = u64 [sp + 0x8]
 11080: 01                       fallthrough
      :                          @615
 11081: 82 78                    a1 = u64 [a0]
 11083: c9 87 09                 a2 = a0 - a1
 11086: ab 59 11                 jump @619 if a2 != s0
      :                          @616
 11089: c9 c8 09                 a2 = a1 - a5
 11092: 01                       fallthrough
      :                          @617
 11093: 82 7a                    a3 = u64 [a0]
 11095: ab 8a f2                 jump @615 if a3 != a1
      :                          @618
 11098: 7b 79                    u64 [a0] = a2
 11100: 33 0b                    a4 = 0
 11102: 01                       fallthrough
      :                          @619
 11103: 82 18 10                 a1 = u64 [sp + 0x10]
 11106: 33 07                    a0 = 0
 11108: 7b 38 08                 u64 [t1 + 0x8] = a1
 11111: 01                       fallthrough
      :                          @620
 11112: 7b 36 10                 u64 [t1 + 0x10] = s1
 11115: 7b 37                    u64 [t1] = a0
 11117: 82 10 30                 ra = u64 [sp + 0x30]
 11120: 82 15 28                 s0 = u64 [sp + 0x28]
 11123: 82 16 20                 s1 = u64 [sp + 0x20]
 11126: 95 11 38                 sp = sp + 0x38
 11129: 32 00                    ret
      :                          @621
 11131: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 11134: 7b 10 40                 u64 [sp + 0x40] = ra
 11137: 7b 15 38                 u64 [sp + 0x38] = s0
 11140: 7b 16 30                 u64 [sp + 0x30] = s1
 11143: 95 88 01                 a1 = a1 + 0x1
 11146: 51 08 54                 jump @629 if a1 == 0
      :                          @622
 11149: 64 75                    s0 = a0
 11151: 82 77                    a0 = u64 [a0]
 11153: 97 79 01                 a2 = a0 << 0x1
 11156: 33 0a 08                 a3 = 0x8
 11159: e4 a8 08                 a1 = maxu(a1, a3)
 11162: e4 89 06                 s1 = maxu(a2, a1)
 11165: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 11168: 98 88 3f                 a1 = a1 >> 0x3f
 11171: 51 07 12                 jump @624 if a0 == 0
      :                          @623
 11174: 82 59 08                 a2 = u64 [s0 + 0x8]
 11177: 7b 19 18                 u64 [sp + 0x18] = a2
 11180: 49 11 20 01              u64 [sp + 32] = 0x1
 11184: 7b 17 28                 u64 [sp + 0x28] = a0
 11187: 28 06                    jump @625
      :                          @624
 11189: 49 11 20                 u64 [sp + 32] = 0
 11192: 01                       fallthrough
      :                          @625
 11193: 64 17                    a0 = sp
 11195: 95 1a 18                 a3 = sp + 0x18
 11198: 64 69                    a2 = s1
 11200: 50 20 30 01 7b fe        ra = 304, jump @589
      :                          @626 [@dyn 152]
 11206: 82 18                    a1 = u64 [sp]
 11208: 82 17 08                 a0 = u64 [sp + 0x8]
 11211: 51 08 14                 jump @630 if a1 == 0
      :                          @627
 11214: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 11224: aa 87 0d                 jump @631 if a0 == a1
      :                          @628
 11227: 52 07 18                 jump @632 if a0 != 0
      :                          @629
 11230: 00                       trap
      :                          @630
 11231: 7b 57 08                 u64 [s0 + 0x8] = a0
 11234: 7b 56                    u64 [s0] = s1
 11236: 01                       fallthrough
      :                          @631
 11237: 82 10 40                 ra = u64 [sp + 0x40]
 11240: 82 15 38                 s0 = u64 [sp + 0x38]
 11243: 82 16 30                 s1 = u64 [sp + 0x30]
 11246: 95 11 48                 sp = sp + 0x48
 11249: 32 00                    ret
      :                          @632
 11251: 00                       trap
      :                          @633
 11252: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 11255: 7b 10 30                 u64 [sp + 0x30] = ra
 11258: 7b 15 28                 u64 [sp + 0x28] = s0
 11261: 7b 16 20                 u64 [sp + 0x20] = s1
 11264: 64 89                    a2 = a1
 11266: 82 8a 08                 a3 = u64 [a1 + 0x8]
 11269: 64 75                    s0 = a0
 11271: 51 0a 35                 jump @638 if a3 == 0
      :                          @634
 11274: 82 98                    a1 = u64 [a2]
 11276: 33 07                    a0 = 0
 11278: 95 8b 08                 a4 = a1 + 0x8
 11281: 01                       fallthrough
      :                          @635
 11282: 82 bc                    a5 = u64 [a4]
 11284: c8 c7 07                 a0 = a0 + a5
 11287: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 11290: 95 bb 10                 a4 = a4 + 0x10
 11293: 52 0a f5                 jump @635 if a3 != 0
      :                          @636
 11296: 82 9a 18                 a3 = u64 [a2 + 0x18]
 11299: 51 0a 24                 jump @640 if a3 == 0
      :                          @637
 11302: 82 88 08                 a1 = u64 [a1 + 0x8]
 11305: 8e 88                    a1 = a1 >u 0
 11307: 88 7a 10                 a3 = a0 <u 0x10
 11310: 85 aa 01                 a3 = a3 ^ 0x1
 11313: d4 a8 08                 a1 = a1 | a3
 11316: 89 7a                    a3 = a0 <s 0
 11318: e0 a8 08                 a1 = a1 & ~a3
 11321: 52 08 0a                 jump @639 if a1 != 0
      :                          @638
 11324: 33 07                    a0 = 0
 11326: 33 08 01                 a1 = 0x1
 11329: 28 48                    jump @648
      :                          @639
 11331: 97 77 01                 a0 = a0 << 0x1
 11334: 01                       fallthrough
      :                          @640
 11335: 51 07 3e                 jump @647 if a0 == 0
      :                          @641
 11338: 57 07 77                 jump @653 if a0 <s 0
      :                          @642
 11341: 64 53                    t1 = s0
 11343: 33 08 00 10              a1 = 0x1000
 11347: 33 02 20 00 03           t0 = 0x30020
 11352: c8 82 0b                 a4 = t0 + a1
 11355: 01                       fallthrough
      :                          @643
 11356: 82 bc                    a5 = u64 [a4]
 11358: c8 7c 0a                 a3 = a5 + a0
 11361: ac ca 5e                 jump @651 if a3 <u a5
      :                          @644
 11364: 95 a5 01                 s0 = a3 + 0x1
 11367: 88 56 01                 s1 = s0 <u 0x1
 11370: d8 58 05                 s0 = a1 <u s0
 11373: d4 65 05                 s0 = s0 | s1
 11376: 52 05 4f                 jump @651 if s0 != 0
      :                          @645
 11379: 82 b6                    s1 = u64 [a4]
 11381: ab c6 e7                 jump @643 if s1 != a5
      :                          @646
 11384: 7b ba                    u64 [a4] = a3
 11386: c9 a2 08                 a1 = t0 - a3
 11389: 95 88 00 10              a1 = a1 + 0x1000
 11393: 64 35                    s0 = t1
 11395: 28 06                    jump @648
      :                          @647
 11397: 33 08 01                 a1 = 0x1
 11400: 01                       fallthrough
      :                          @648
 11401: 7b 17                    u64 [sp] = a0
 11403: 7b 18 08                 u64 [sp + 0x8] = a1
 11406: 49 11 10                 u64 [sp + 16] = 0
 11409: 33 08 40 0d 01           a1 = 0x10d40
 11414: 64 17                    a0 = sp
 11416: 50 20 32 01 56 0a        ra = 306, jump @851
      :                          @649 [@dyn 153]
 11422: 52 07 22                 jump @652 if a0 != 0
      :                          @650
 11425: 82 17 10                 a0 = u64 [sp + 0x10]
 11428: 82 18 08                 a1 = u64 [sp + 0x8]
 11431: 82 19                    a2 = u64 [sp]
 11433: 7b 57 10                 u64 [s0 + 0x10] = a0
 11436: 7b 58 08                 u64 [s0 + 0x8] = a1
 11439: 7b 59                    u64 [s0] = a2
 11441: 82 10 30                 ra = u64 [sp + 0x30]
 11444: 82 15 28                 s0 = u64 [sp + 0x28]
 11447: 82 16 20                 s1 = u64 [sp + 0x20]
 11450: 95 11 38                 sp = sp + 0x38
 11453: 32 00                    ret
      :                          @651
 11455: 00                       trap
      :                          @652
 11456: 00                       trap
      :                          @653
 11457: 00                       trap
      :                          @654 [@dyn 154]
 11458: 82 72                    t0 = u64 [a0]
 11460: 33 09 00 f0              a2 = 0xfffffffffffff000
 11464: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 11468: ac 9a 27                 jump @660 if a3 <u a2
      :                          @655
 11471: 82 77 08                 a0 = u64 [a0 + 0x8]
 11474: 33 09 20 00 03           a2 = 0x30020
 11479: 95 99 00 10              a2 = a2 + 0x1000
 11483: 01                       fallthrough
      :                          @656
 11484: 82 9a                    a3 = u64 [a2]
 11486: c9 a9 0b                 a4 = a2 - a3
 11489: ab 7b 12                 jump @660 if a4 != a0
      :                          @657
 11492: c9 2a 0b                 a4 = a3 - t0
 11495: 01                       fallthrough
      :                          @658
 11496: 82 9c                    a5 = u64 [a2]
 11498: ab ac f2                 jump @656 if a5 != a3
      :                          @659
 11501: 7b 9b                    u64 [a2] = a4
 11503: 33 08                    a1 = 0
 11505: 32 00                    ret
      :                          @660
 11507: 32 00                    ret
      :                          @661 [@dyn 155]
 11509: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11512: 7b 10 18                 u64 [sp + 0x18] = ra
 11515: 7b 15 10                 u64 [sp + 0x10] = s0
 11518: 7b 16 08                 u64 [sp + 0x8] = s1
 11521: 64 75                    s0 = a0
 11523: 82 7a 10                 a3 = u64 [a0 + 0x10]
 11526: 82 77                    a0 = u64 [a0]
 11528: c9 a7 07                 a0 = a0 - a3
 11531: 64 96                    s1 = a2
 11533: ac 97 2b                 jump @664 if a0 <u a2
      :                          @662
 11536: 7b 1a                    u64 [sp] = a3
 11538: 82 57 08                 a0 = u64 [s0 + 0x8]
 11541: c8 a7 07                 a0 = a0 + a3
 11544: 64 69                    a2 = s1
 11546: 50 20 38 01 4f 01        ra = 312, jump @683
      :                          @663 [@dyn 156]
 11552: 82 17                    a0 = u64 [sp]
 11554: c8 76 06                 s1 = s1 + a0
 11557: 7b 56 10                 u64 [s0 + 0x10] = s1
 11560: 33 07                    a0 = 0
 11562: 82 10 18                 ra = u64 [sp + 0x18]
 11565: 82 15 10                 s0 = u64 [sp + 0x10]
 11568: 82 16 08                 s1 = u64 [sp + 0x8]
 11571: 95 11 20                 sp = sp + 0x20
 11574: 32 00                    ret
      :                          @664
 11576: 64 57                    a0 = s0
 11578: 7b 18                    u64 [sp] = a1
 11580: 64 a8                    a1 = a3
 11582: 64 69                    a2 = s1
 11584: 50 20 3a 01 83 fc        ra = 314, jump @577
      :                          @665 [@dyn 157]
 11590: 82 18                    a1 = u64 [sp]
 11592: 82 5a 10                 a3 = u64 [s0 + 0x10]
 11595: 28 c5                    jump @662
      :                          @666 [@dyn 158]
 11597: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 11600: 7b 10 20                 u64 [sp + 0x20] = ra
 11603: 7b 15 18                 u64 [sp + 0x18] = s0
 11606: 7b 16 10                 u64 [sp + 0x10] = s1
 11609: 64 86                    s1 = a1
 11611: 83 88                    i32 a1 = a1 + 0
 11613: 33 09 80 00              a2 = 0x80
 11617: 64 7a                    a3 = a0
 11619: ae 98 2c                 jump @671 if a1 >=u a2
      :                          @667
 11622: 82 a8 10                 a1 = u64 [a3 + 0x10]
 11625: 82 a7                    a0 = u64 [a3]
 11627: ab 78 13                 jump @670 if a1 != a0
      :                          @668
 11630: 64 a7                    a0 = a3
 11632: 64 a5                    s0 = a3
 11634: 50 20 3e 01 09 fe        ra = 318, jump @621
      :                          @669 [@dyn 159]
 11640: 64 5a                    a3 = s0
 11642: 82 58 10                 a1 = u64 [s0 + 0x10]
 11645: 01                       fallthrough
      :                          @670
 11646: 82 a7 08                 a0 = u64 [a3 + 0x8]
 11649: c8 87 07                 a0 = a0 + a1
 11652: 78 76                    u8 [a0] = s1
 11654: 95 88 01                 a1 = a1 + 0x1
 11657: 7b a8 10                 u64 [a3 + 0x10] = a1
 11660: 28 ac 00                 jump @679
      :                          @671
 11663: 8b 67 0b                 i32 a0 = s1 >> 0xb
 11666: 48 11 0c                 u32 [sp + 12] = 0
 11669: 52 07 1c                 jump @673 if a0 != 0
      :                          @672
 11672: 98 67 06                 a0 = s1 >> 0x6
 11675: 86 77 c0 00              a0 = a0 | 0xc0
 11679: 78 17 0c                 u8 [sp + 0xc] = a0
 11682: 84 67 3f                 a0 = s1 & 0x3f
 11685: 86 77 80 00              a0 = a0 | 0x80
 11689: 78 17 0d                 u8 [sp + 0xd] = a0
 11692: 33 06 02                 s1 = 0x2
 11695: 28 63                    jump @676
      :                          @673
 11697: 8b 67 10                 i32 a0 = s1 >> 0x10
 11700: 52 07 29                 jump @675 if a0 != 0
      :                          @674
 11703: 98 67 0c                 a0 = s1 >> 0xc
 11706: 86 77 e0 00              a0 = a0 | 0xe0
 11710: 78 17 0c                 u8 [sp + 0xc] = a0
 11713: 97 67 34                 a0 = s1 << 0x34
 11716: 98 77 3a                 a0 = a0 >> 0x3a
 11719: 95 77 80 00              a0 = a0 + 0x80
 11723: 78 17 0d                 u8 [sp + 0xd] = a0
 11726: 84 67 3f                 a0 = s1 & 0x3f
 11729: 86 77 80 00              a0 = a0 | 0x80
 11733: 78 17 0e                 u8 [sp + 0xe] = a0
 11736: 33 06 03                 s1 = 0x3
 11739: 28 37                    jump @676
      :                          @675
 11741: 97 67 2b                 a0 = s1 << 0x2b
 11744: 98 77 3d                 a0 = a0 >> 0x3d
 11747: 95 77 f0 00              a0 = a0 + 0xf0
 11751: 78 17 0c                 u8 [sp + 0xc] = a0
 11754: 97 67 2e                 a0 = s1 << 0x2e
 11757: 98 77 3a                 a0 = a0 >> 0x3a
 11760: 95 77 80 00              a0 = a0 + 0x80
 11764: 78 17 0d                 u8 [sp + 0xd] = a0
 11767: 97 67 34                 a0 = s1 << 0x34
 11770: 98 77 3a                 a0 = a0 >> 0x3a
 11773: 95 77 80 00              a0 = a0 + 0x80
 11777: 78 17 0e                 u8 [sp + 0xe] = a0
 11780: 84 67 3f                 a0 = s1 & 0x3f
 11783: 86 77 80 00              a0 = a0 | 0x80
 11787: 78 17 0f                 u8 [sp + 0xf] = a0
 11790: 33 06 04                 s1 = 0x4
 11793: 01                       fallthrough
      :                          @676
 11794: 82 a5 10                 s0 = u64 [a3 + 0x10]
 11797: 82 a7                    a0 = u64 [a3]
 11799: c9 57 07                 a0 = a0 - s0
 11802: ac 67 2e                 jump @680 if a0 <u s1
      :                          @677
 11805: 7b 1a                    u64 [sp] = a3
 11807: 82 a7 08                 a0 = u64 [a3 + 0x8]
 11810: c8 57 07                 a0 = a0 + s0
 11813: 95 18 0c                 a1 = sp + 0xc
 11816: 64 69                    a2 = s1
 11818: 50 20 40 01 3f           ra = 320, jump @683
      :                          @678 [@dyn 160]
 11823: c8 56 06                 s1 = s1 + s0
 11826: 82 17                    a0 = u64 [sp]
 11828: 7b 76 10                 u64 [a0 + 0x10] = s1
 11831: 01                       fallthrough
      :                          @679
 11832: 33 07                    a0 = 0
 11834: 82 10 20                 ra = u64 [sp + 0x20]
 11837: 82 15 18                 s0 = u64 [sp + 0x18]
 11840: 82 16 10                 s1 = u64 [sp + 0x10]
 11843: 95 11 28                 sp = sp + 0x28
 11846: 32 00                    ret
      :                          @680
 11848: 64 a7                    a0 = a3
 11850: 64 58                    a1 = s0
 11852: 64 69                    a2 = s1
 11854: 64 a5                    s0 = a3
 11856: 50 20 42 01 73 fb        ra = 322, jump @577
      :                          @681 [@dyn 161]
 11862: 64 5a                    a3 = s0
 11864: 82 55 10                 s0 = u64 [s0 + 0x10]
 11867: 28 c2                    jump @677
      :                          @682 [@dyn 162]
 11869: 64 8a                    a3 = a1
 11871: 33 08 40 0d 01           a1 = 0x10d40
 11876: 64 a9                    a2 = a3
 11878: 28 88 08                 jump @851
      :                          @683
 11881: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 11884: 7b 10 18                 u64 [sp + 0x18] = ra
 11887: 7b 15 10                 u64 [sp + 0x10] = s0
 11890: 7b 16 08                 u64 [sp + 0x8] = s1
 11893: 53 19 10 64              jump @692 if a2 <u 16
      :                          @684
 11897: 8d 7a                    i32 a3 = -a0
 11899: 84 a2 07                 t0 = a3 & 0x7
 11902: c8 27 0b                 a4 = a0 + t0
 11905: 51 02 15                 jump @687 if t0 == 0
      :                          @685
 11908: 64 8c                    a5 = a1
 11910: 64 75                    s0 = a0
 11912: 01                       fallthrough
      :                          @686
 11913: 7c ca                    a3 = u8 [a5]
 11915: 78 5a                    u8 [s0] = a3
 11917: 95 55 01                 s0 = s0 + 0x1
 11920: 95 cc 01                 a5 = a5 + 0x1
 11923: ac b5 f6                 jump @686 if s0 <u a4
      :                          @687
 11926: c8 28 03                 t1 = a1 + t0
 11929: c9 29 02                 t0 = a2 - t0
 11932: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 11935: 84 38 07                 a1 = t1 & 0x7
 11938: c8 4b 0a                 a3 = a4 + t2
 11941: 51 08 3b                 jump @694 if a1 == 0
      :                          @688
 11944: 58 04 4b                 jump @697 if t2 <=s 0
      :                          @689
 11947: 97 38 03                 a1 = t1 << 0x3
 11950: 84 80 38                 ra = a1 & 0x38
 11953: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 11956: 82 c5                    s0 = u64 [a5]
 11958: 8d 88                    i32 a1 = -a1
 11960: 84 88 38                 a1 = a1 & 0x38
 11963: 95 cc 08                 a5 = a5 + 0x8
 11966: 01                       fallthrough
      :                          @690
 11967: 82 c6                    s1 = u64 [a5]
 11969: d0 05 05                 s0 = s0 >> ra
 11972: cf 86 09                 a2 = s1 << a1
 11975: d4 59 09                 a2 = a2 | s0
 11978: 7b b9                    u64 [a4] = a2
 11980: 95 bb 08                 a4 = a4 + 0x8
 11983: 95 cc 08                 a5 = a5 + 0x8
 11986: 64 65                    s0 = s1
 11988: ac ab eb                 jump @690 if a4 <u a3
      :                          @691
 11991: 28 1c                    jump @697
      :                          @692
 11993: 64 7a                    a3 = a0
 11995: 52 09 21                 jump @698 if a2 != 0
      :                          @693
 11998: 28 2f                    jump @700
      :                          @694
 12000: 58 04 13                 jump @697 if t2 <=s 0
      :                          @695
 12003: 64 38                    a1 = t1
 12005: 01                       fallthrough
      :                          @696
 12006: 82 89                    a2 = u64 [a1]
 12008: 7b b9                    u64 [a4] = a2
 12010: 95 bb 08                 a4 = a4 + 0x8
 12013: 95 88 08                 a1 = a1 + 0x8
 12016: ac ab f6                 jump @696 if a4 <u a3
      :                          @697
 12019: c8 43 08                 a1 = t1 + t2
 12022: 84 29 07                 a2 = t0 & 0x7
 12025: 51 09 14                 jump @700 if a2 == 0
      :                          @698
 12028: c8 a9 09                 a2 = a2 + a3
 12031: 01                       fallthrough
      :                          @699
 12032: 7c 8b                    a4 = u8 [a1]
 12034: 78 ab                    u8 [a3] = a4
 12036: 95 aa 01                 a3 = a3 + 0x1
 12039: 95 88 01                 a1 = a1 + 0x1
 12042: ac 9a f6                 jump @699 if a3 <u a2
      :                          @700
 12045: 82 10 18                 ra = u64 [sp + 0x18]
 12048: 82 15 10                 s0 = u64 [sp + 0x10]
 12051: 82 16 08                 s1 = u64 [sp + 0x8]
 12054: 95 11 20                 sp = sp + 0x20
 12057: 32 00                    ret
      :                          @701
 12059: 53 19 10 48              jump @710 if a2 <u 16
      :                          @702
 12063: 8d 7a                    i32 a3 = -a0
 12065: 84 aa 07                 a3 = a3 & 0x7
 12068: c8 a7 0b                 a4 = a0 + a3
 12071: 51 0a 0e                 jump @705 if a3 == 0
      :                          @703
 12074: 64 7c                    a5 = a0
 12076: 01                       fallthrough
      :                          @704
 12077: 78 c8                    u8 [a5] = a1
 12079: 95 cc 01                 a5 = a5 + 0x1
 12082: ac bc fb                 jump @704 if a5 <u a4
      :                          @705
 12085: c9 a9 03                 t1 = a2 - a3
 12088: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 12091: c8 cb 0a                 a3 = a4 + a5
 12094: 58 0c 1d                 jump @708 if a5 <=s 0
      :                          @706
 12097: 84 82 ff 00              t0 = a1 & 0xff
 12101: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 12111: ca 92 0c                 a5 = t0 * a2
 12114: 01                       fallthrough
      :                          @707
 12115: 7b bc                    u64 [a4] = a5
 12117: 95 bb 08                 a4 = a4 + 0x8
 12120: ac ab fb                 jump @707 if a4 <u a3
      :                          @708
 12123: 84 39 07                 a2 = t1 & 0x7
 12126: 52 09 0a                 jump @711 if a2 != 0
      :                          @709
 12129: 28 13                    jump @713
      :                          @710
 12131: 64 7a                    a3 = a0
 12133: 51 09 0f                 jump @713 if a2 == 0
      :                          @711
 12136: c8 a9 09                 a2 = a2 + a3
 12139: 01                       fallthrough
      :                          @712
 12140: 78 a8                    u8 [a3] = a1
 12142: 95 aa 01                 a3 = a3 + 0x1
 12145: ac 9a fb                 jump @712 if a3 <u a2
      :                          @713
 12148: 32 00                    ret
      :                          @714 [@dyn 163]
 12150: 82 77                    a0 = u64 [a0]
 12152: 01                       fallthrough
      :                          @715
 12153: 28                       jump @715
      :                          @716
 12154: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 12157: 7b 10 50                 u64 [sp + 0x50] = ra
 12160: 7b 15 48                 u64 [sp + 0x48] = s0
 12163: 7b 16 40                 u64 [sp + 0x40] = s1
 12166: 7b 18                    u64 [sp] = a1
 12168: 98 79 04                 a2 = a0 >> 0x4
 12171: 33 08 27                 a1 = 0x27
 12174: 33 0a c7 04 01           a3 = 0x104c7
 12179: 53 29 71 02 7b           jump @719 if a2 <u 625
      :                          @717
 12184: 33 08 27                 a1 = 0x27
 12187: 95 1b 3e                 a4 = sp + 0x3e
 12190: 3a 09 08 00 03           a2 = u64 [0x30008]
 12195: 7b 19 10                 u64 [sp + 0x10] = a2
 12198: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 12204: 33 03 7b 14              t1 = 0x147b
 12208: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 12214: 01                       fallthrough
      :                          @718
 12215: 64 72                    t0 = a0
 12217: 82 17 10                 a0 = u64 [sp + 0x10]
 12220: d6 72 07                 a0 = t0 mulhu a0
 12223: 98 77 0b                 a0 = a0 >> 0xb
 12226: 82 19 08                 a2 = u64 [sp + 0x8]
 12229: c0 97 09                 i32 a2 = a0 * a2
 12232: c8 29 06                 s1 = a2 + t0
 12235: 97 69 30                 a2 = s1 << 0x30
 12238: 98 99 32                 a2 = a2 >> 0x32
 12241: ca 39 09                 a2 = a2 * t1
 12244: 98 94 11                 t2 = a2 >> 0x11
 12247: 98 99 10                 a2 = a2 >> 0x10
 12250: 84 99 fe 07              a2 = a2 & 0x7fe
 12254: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
 12257: c8 6c 0c                 a5 = a5 + s1
 12260: 97 cc 31                 a5 = a5 << 0x31
 12263: 98 cc 30                 a5 = a5 >> 0x30
 12266: c8 a9 09                 a2 = a2 + a3
 12269: 7c 96                    s1 = u8 [a2]
 12271: 7c 99 01                 a2 = u8 [a2 + 0x1]
 12274: c8 ac 0c                 a5 = a5 + a3
 12277: 7c c5 01                 s0 = u8 [a5 + 0x1]
 12280: 7c cc                    a5 = u8 [a5]
 12282: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
 12285: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
 12288: 78 b5 01                 u8 [a4 + 0x1] = s0
 12291: 78 bc                    u8 [a4] = a5
 12293: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 12296: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 12299: ac 20 ac                 jump @718 if ra <u t0
      :                          @719
 12302: 54 17 63 36              jump @721 if a0 <=u 99
      :                          @720
 12306: 97 79 30                 a2 = a0 << 0x30
 12309: 98 99 32                 a2 = a2 >> 0x32
 12312: 96 99 7b 14              a2 = a2 * 0x147b
 12316: 98 99 11                 a2 = a2 >> 0x11
 12319: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
 12322: c8 b7 07                 a0 = a0 + a4
 12325: 97 77 31                 a0 = a0 << 0x31
 12328: 98 77 30                 a0 = a0 >> 0x30
 12331: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 12334: c8 a7 07                 a0 = a0 + a3
 12337: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 12340: 7c 77                    a0 = u8 [a0]
 12342: 95 1c 19                 a5 = sp + 0x19
 12345: c8 8c 0c                 a5 = a5 + a1
 12348: 78 cb 01                 u8 [a5 + 0x1] = a4
 12351: 78 c7                    u8 [a5] = a0
 12353: 64 97                    a0 = a2
 12355: 01                       fallthrough
      :                          @721
 12356: 55 17 0a 14              jump @723 if a0 >=u 10
      :                          @722
 12360: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12363: 95 19 19                 a2 = sp + 0x19
 12366: c8 89 09                 a2 = a2 + a1
 12369: 83 77 30                 i32 a0 = a0 + 0x30
 12372: 78 97                    u8 [a2] = a0
 12374: 28 1c                    jump @724
      :                          @723
 12376: 97 77 01                 a0 = a0 << 0x1
 12379: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 12382: c8 a7 07                 a0 = a0 + a3
 12385: 7c 79 01                 a2 = u8 [a0 + 0x1]
 12388: 7c 77                    a0 = u8 [a0]
 12390: 95 1a 19                 a3 = sp + 0x19
 12393: c8 8a 0a                 a3 = a3 + a1
 12396: 78 a9 01                 u8 [a3 + 0x1] = a2
 12399: 78 a7                    u8 [a3] = a0
 12401: 01                       fallthrough
      :                          @724
 12402: 95 1a 19                 a3 = sp + 0x19
 12405: c8 8a 0a                 a3 = a3 + a1
 12408: 9a 8b 27                 a4 = 0x27 - a1
 12411: 33 08 a8 04 01           a1 = 0x104a8
 12416: 82 17                    a0 = u64 [sp]
 12418: 33 09                    a2 = 0
 12420: 50 20 48 01 13           ra = 328, jump @726
      :                          @725 [@dyn 164]
 12425: 82 10 50                 ra = u64 [sp + 0x50]
 12428: 82 15 48                 s0 = u64 [sp + 0x48]
 12431: 82 16 40                 s1 = u64 [sp + 0x40]
 12434: 95 11 58                 sp = sp + 0x58
 12437: 32 00                    ret
      :                          @726
 12439: 95 11 98                 sp = sp + 0xffffffffffffff98
 12442: 7b 10 60                 u64 [sp + 0x60] = ra
 12445: 7b 15 58                 u64 [sp + 0x58] = s0
 12448: 7b 16 50                 u64 [sp + 0x50] = s1
 12451: 80 73 34                 t1 = u32 [a0 + 0x34]
 12454: 7b 1a 20                 u64 [sp + 0x20] = a3
 12457: 64 9c                    a5 = a2
 12459: 84 36 01                 s1 = t1 & 0x1
 12462: 33 02 2b                 t0 = 0x2b
 12465: 33 09 00 00 11           a2 = 0x110000
 12470: 84 3a 04                 a3 = t1 & 0x4
 12473: 7b 1b 28                 u64 [sp + 0x28] = a4
 12476: c8 b6 04                 t2 = s1 + a4
 12479: 7b 1c 30                 u64 [sp + 0x30] = a5
 12482: 52 0a 10                 jump @729 if a3 != 0
      :                          @727
 12485: 49 11 38                 u64 [sp + 56] = 0
 12488: 82 78                    a1 = u64 [a0]
 12490: 94 69 2b                 a2 = 0x2b if s1 != 0
 12493: 52 08 35                 jump @733 if a1 != 0
      :                          @728
 12496: 28 56                    jump @738
      :                          @729
 12498: 7b 18 38                 u64 [sp + 0x38] = a1
 12501: 33 09                    a2 = 0
 12503: 51 0c 1b                 jump @732 if a5 == 0
      :                          @730
 12506: 82 1b 38                 a4 = u64 [sp + 0x38]
 12509: 01                       fallthrough
      :                          @731
 12510: 7d b5                    s0 = i8 [a4]
 12512: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 12515: 85 5a 01                 a3 = s0 ^ 0x1
 12518: c8 a9 09                 a2 = a2 + a3
 12521: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 12524: 95 bb 01                 a4 = a4 + 0x1
 12527: 52 0c ef                 jump @731 if a5 != 0
      :                          @732
 12530: c8 94 04                 t2 = t2 + a2
 12533: 33 09 00 00 11           a2 = 0x110000
 12538: 82 78                    a1 = u64 [a0]
 12540: db 62 09                 a2 = t0 if s1 != 0
 12543: 51 08 27                 jump @738 if a1 == 0
      :                          @733
 12546: 82 7a 08                 a3 = u64 [a0 + 0x8]
 12549: ae a4 21                 jump @738 if t2 >=u a3
      :                          @734
 12552: 84 38 08                 a1 = t1 & 0x8
 12555: 52 08 51                 jump @741 if a1 != 0
      :                          @735
 12558: 7c 76 38                 s1 = u8 [a0 + 0x38]
 12561: c9 4a 0a                 a3 = a3 - t2
 12564: 7b 19 18                 u64 [sp + 0x18] = a2
 12567: 5a 16 01 a0 00           jump @748 if s1 >s 1
      :                          @736
 12572: 52 06 ad 00              jump @750 if s1 != 0
      :                          @737
 12576: 7b 1a 10                 u64 [sp + 0x10] = a3
 12579: 28 ac 00                 jump @751
      :                          @738
 12582: 82 75 20                 s0 = u64 [a0 + 0x20]
 12585: 82 76 28                 s1 = u64 [a0 + 0x28]
 12588: 64 57                    a0 = s0
 12590: 64 68                    a1 = s1
 12592: 82 1a 38                 a3 = u64 [sp + 0x38]
 12595: 82 1b 30                 a4 = u64 [sp + 0x30]
 12598: 50 20 4a 01 75 01        ra = 330, jump @771
      :                          @739 [@dyn 165]
 12604: 33 08 01                 a1 = 0x1
 12607: 52 07 be 00              jump @756 if a0 != 0
      :                          @740
 12611: 82 6c 18                 a5 = u64 [s1 + 0x18]
 12614: 64 57                    a0 = s0
 12616: 82 18 20                 a1 = u64 [sp + 0x20]
 12619: 82 19 28                 a2 = u64 [sp + 0x28]
 12622: 82 10 60                 ra = u64 [sp + 0x60]
 12625: 82 15 58                 s0 = u64 [sp + 0x58]
 12628: 82 16 50                 s1 = u64 [sp + 0x50]
 12631: 95 11 68                 sp = sp + 0x68
 12634: 32 0c                    jump [a5]
      :                          @741
 12636: 7b 1a 40                 u64 [sp + 0x40] = a3
 12639: 64 45                    s0 = t2
 12641: 81 78 30                 a1 = i32 [a0 + 0x30]
 12644: 7b 18 10                 u64 [sp + 0x10] = a1
 12647: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 12650: 7b 1a 08                 u64 [sp + 0x8] = a3
 12653: 82 7a 20                 a3 = u64 [a0 + 0x20]
 12656: 82 78 28                 a1 = u64 [a0 + 0x28]
 12659: 48 17 30 30              u32 [a0 + 48] = 0x30
 12663: 7b 17                    u64 [sp] = a0
 12665: 46 17 38 01              u8 [a0 + 56] = 0x1
 12669: 7b 1a 48                 u64 [sp + 0x48] = a3
 12672: 64 a7                    a0 = a3
 12674: 64 86                    s1 = a1
 12676: 82 1a 38                 a3 = u64 [sp + 0x38]
 12679: 82 1b 30                 a4 = u64 [sp + 0x30]
 12682: 50 20 4c 01 21 01        ra = 332, jump @771
      :                          @742 [@dyn 166]
 12688: 52 07 69                 jump @755 if a0 != 0
      :                          @743
 12691: 82 17 40                 a0 = u64 [sp + 0x40]
 12694: c9 57 05                 s0 = a0 - s0
 12697: 95 55 01                 s0 = s0 + 0x1
 12700: 01                       fallthrough
      :                          @744
 12701: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 12704: 51 05 cb 00              jump @766 if s0 == 0
      :                          @745
 12708: 82 69 20                 a2 = u64 [s1 + 0x20]
 12711: 33 08 30                 a1 = 0x30
 12714: 82 17 48                 a0 = u64 [sp + 0x48]
 12717: b4 90 02 4e 01           ra = 334, jump [a2]
      :                          @746 [@dyn 167]
 12722: 51 07 eb                 jump @744 if a0 == 0
      :                          @747
 12725: 28 44                    jump @755
      :                          @748
 12727: 52 16 02 12              jump @750 if s1 != 2
      :                          @749
 12731: 98 a6 01                 s1 = a3 >> 0x1
 12734: 95 a8 01                 a1 = a3 + 0x1
 12737: 98 88 01                 a1 = a1 >> 0x1
 12740: 7b 18 10                 u64 [sp + 0x10] = a1
 12743: 28 08                    jump @751
      :                          @750
 12745: 64 a6                    s1 = a3
 12747: 49 11 10                 u64 [sp + 16] = 0
 12750: 01                       fallthrough
      :                          @751
 12751: 82 78 20                 a1 = u64 [a0 + 0x20]
 12754: 7b 18 48                 u64 [sp + 0x48] = a1
 12757: 82 75 28                 s0 = u64 [a0 + 0x28]
 12760: 81 77 30                 a0 = i32 [a0 + 0x30]
 12763: 7b 17 40                 u64 [sp + 0x40] = a0
 12766: 95 66 01                 s1 = s1 + 0x1
 12769: 01                       fallthrough
      :                          @752
 12770: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 12773: 51 06 28                 jump @757 if s1 == 0
      :                          @753
 12776: 82 59 20                 a2 = u64 [s0 + 0x20]
 12779: 82 17 48                 a0 = u64 [sp + 0x48]
 12782: 82 18 40                 a1 = u64 [sp + 0x40]
 12785: b4 90 02 50 01           ra = 336, jump [a2]
      :                          @754 [@dyn 168]
 12790: 51 07 ec                 jump @752 if a0 == 0
      :                          @755
 12793: 33 08 01                 a1 = 0x1
 12796: 01                       fallthrough
      :                          @756
 12797: 64 87                    a0 = a1
 12799: 82 10 60                 ra = u64 [sp + 0x60]
 12802: 82 15 58                 s0 = u64 [sp + 0x58]
 12805: 82 16 50                 s1 = u64 [sp + 0x50]
 12808: 95 11 68                 sp = sp + 0x68
 12811: 32 00                    ret
      :                          @757
 12813: 82 16 48                 s1 = u64 [sp + 0x48]
 12816: 64 67                    a0 = s1
 12818: 64 58                    a1 = s0
 12820: 82 19 18                 a2 = u64 [sp + 0x18]
 12823: 82 1a 38                 a3 = u64 [sp + 0x38]
 12826: 82 1b 30                 a4 = u64 [sp + 0x30]
 12829: 50 20 52 01 8e 00        ra = 338, jump @771
      :                          @758 [@dyn 169]
 12835: 33 08 01                 a1 = 0x1
 12838: 52 07 d7                 jump @756 if a0 != 0
      :                          @759
 12841: 82 5a 18                 a3 = u64 [s0 + 0x18]
 12844: 64 67                    a0 = s1
 12846: 82 18 20                 a1 = u64 [sp + 0x20]
 12849: 82 19 28                 a2 = u64 [sp + 0x28]
 12852: b4 a0 02 54 01           ra = 340, jump [a3]
      :                          @760 [@dyn 170]
 12857: 33 08 01                 a1 = 0x1
 12860: 52 07 c1                 jump @756 if a0 != 0
      :                          @761
 12863: 82 17 10                 a0 = u64 [sp + 0x10]
 12866: 9a 77                    a0 = -a0
 12868: 7b 17 38                 u64 [sp + 0x38] = a0
 12871: 33 06 ff                 s1 = 0xffffffffffffffff
 12874: 01                       fallthrough
      :                          @762
 12875: 82 17 38                 a0 = u64 [sp + 0x38]
 12878: c8 67 07                 a0 = a0 + s1
 12881: 51 17 ff 45              jump @769 if a0 == 4294967295
      :                          @763
 12885: 82 59 20                 a2 = u64 [s0 + 0x20]
 12888: 82 17 48                 a0 = u64 [sp + 0x48]
 12891: 82 18 40                 a1 = u64 [sp + 0x40]
 12894: b4 90 02 56 01           ra = 342, jump [a2]
      :                          @764 [@dyn 171]
 12899: 95 66 01                 s1 = s1 + 0x1
 12902: 51 07 e5                 jump @762 if a0 == 0
      :                          @765
 12905: 28 39                    jump @770
      :                          @766
 12907: 82 6a 18                 a3 = u64 [s1 + 0x18]
 12910: 82 17 48                 a0 = u64 [sp + 0x48]
 12913: 82 18 20                 a1 = u64 [sp + 0x20]
 12916: 82 19 28                 a2 = u64 [sp + 0x28]
 12919: b4 a0 02 58 01           ra = 344, jump [a3]
      :                          @767 [@dyn 172]
 12924: 33 08 01                 a1 = 0x1
 12927: 52 07 7e ff              jump @756 if a0 != 0
      :                          @768
 12931: 33 08                    a1 = 0
 12933: 82 16                    s1 = u64 [sp]
 12935: 82 17 10                 a0 = u64 [sp + 0x10]
 12938: 7a 67 30                 u32 [s1 + 0x30] = a0
 12941: 82 17 08                 a0 = u64 [sp + 0x8]
 12944: 78 67 38                 u8 [s1 + 0x38] = a0
 12947: 28 6a ff                 jump @756
      :                          @769
 12950: 82 16 10                 s1 = u64 [sp + 0x10]
 12953: 82 17 10                 a0 = u64 [sp + 0x10]
 12956: d8 76 08                 a1 = s1 <u a0
 12959: 28 5e ff                 jump @756
      :                          @770
 12962: 82 17 10                 a0 = u64 [sp + 0x10]
 12965: d8 76 08                 a1 = s1 <u a0
 12968: 28 55 ff                 jump @756
      :                          @771
 12971: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 12974: 7b 10 20                 u64 [sp + 0x20] = ra
 12977: 7b 15 18                 u64 [sp + 0x18] = s0
 12980: 7b 16 10                 u64 [sp + 0x10] = s1
 12983: 83 9c                    i32 a5 = a2 + 0
 12985: 33 02 00 00 11           t0 = 0x110000
 12990: 64 a6                    s1 = a3
 12992: 64 85                    s0 = a1
 12994: 64 7a                    a3 = a0
 12996: aa 2c 21                 jump @774 if a5 == t0
      :                          @772
 12999: 82 5c 20                 a5 = u64 [s0 + 0x20]
 13002: 64 a7                    a0 = a3
 13004: 64 98                    a1 = a2
 13006: 7b 1b 08                 u64 [sp + 0x8] = a4
 13009: 7b 1a                    u64 [sp] = a3
 13011: b4 c0 02 5a 01           ra = 346, jump [a5]
      :                          @773 [@dyn 173]
 13016: 82 1a                    a3 = u64 [sp]
 13018: 82 1b 08                 a4 = u64 [sp + 0x8]
 13021: 64 78                    a1 = a0
 13023: 33 07 01                 a0 = 0x1
 13026: 52 08 20                 jump @777 if a1 != 0
      :                          @774
 13029: 51 06 1a                 jump @776 if s1 == 0
      :                          @775
 13032: 82 5c 18                 a5 = u64 [s0 + 0x18]
 13035: 64 a7                    a0 = a3
 13037: 64 68                    a1 = s1
 13039: 64 b9                    a2 = a4
 13041: 82 10 20                 ra = u64 [sp + 0x20]
 13044: 82 15 18                 s0 = u64 [sp + 0x18]
 13047: 82 16 10                 s1 = u64 [sp + 0x10]
 13050: 95 11 28                 sp = sp + 0x28
 13053: 32 0c                    jump [a5]
      :                          @776
 13055: 33 07                    a0 = 0
 13057: 01                       fallthrough
      :                          @777
 13058: 82 10 20                 ra = u64 [sp + 0x20]
 13061: 82 15 18                 s0 = u64 [sp + 0x18]
 13064: 82 16 10                 s1 = u64 [sp + 0x10]
 13067: 95 11 28                 sp = sp + 0x28
 13070: 32 00                    ret
      :                          @778
 13072: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13075: 7b 10 40                 u64 [sp + 0x40] = ra
 13078: 7b 15 38                 u64 [sp + 0x38] = s0
 13081: 7b 16 30                 u64 [sp + 0x30] = s1
 13084: 82 74                    t2 = u64 [a0]
 13086: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13089: d4 a4 0b                 a4 = t2 | a3
 13092: 64 93                    t1 = a2
 13094: 64 85                    s0 = a1
 13096: 51 0b ab 03              jump @850 if a4 == 0
      :                          @779
 13100: 7b 17 08                 u64 [sp + 0x8] = a0
 13103: 51 0a f5 00              jump @798 if a3 == 0
      :                          @780
 13107: 82 7c 18                 a5 = u64 [a0 + 0x18]
 13110: 33 0a                    a3 = 0
 13112: 49 11 18 02              u64 [sp + 24] = 0x2
 13116: 95 53 02                 t1 = s0 + 0x2
 13119: 95 cc 01                 a5 = a5 + 0x1
 13122: 33 00 00 00 11           ra = 0x110000
 13127: 33 07 df 00              a0 = 0xdf
 13131: 7b 15 10                 u64 [sp + 0x10] = s0
 13134: 64 59                    a2 = s0
 13136: 28 12                    jump @783
      :                          @781
 13138: 95 98 01                 a1 = a2 + 0x1
 13141: 01                       fallthrough
      :                          @782
 13142: c9 9a 0a                 a3 = a3 - a2
 13145: c8 8a 0a                 a3 = a3 + a1
 13148: 64 89                    a2 = a1
 13150: aa 05 bc 00              jump @797 if s0 == ra
      :                          @783
 13154: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 13157: 51 0c 68                 jump @792 if a5 == 0
      :                          @784
 13160: aa 39 b2 00              jump @797 if a2 == t1
      :                          @785
 13164: 7d 98                    a1 = i8 [a2]
 13166: 84 85 ff 00              s0 = a1 & 0xff
 13170: 59 08 e0                 jump @781 if a1 >=s 0
      :                          @786
 13173: 7c 98 01                 a1 = u8 [a2 + 0x1]
 13176: 84 56 1f                 s1 = s0 & 0x1f
 13179: 84 8b 3f                 a4 = a1 & 0x3f
 13182: ae 57 35                 jump @790 if a0 >=u s0
      :                          @787
 13185: 7c 98 02                 a1 = u8 [a2 + 0x2]
 13188: 97 bb 06                 a4 = a4 << 0x6
 13191: 84 88 3f                 a1 = a1 & 0x3f
 13194: d4 8b 02                 t0 = a4 | a1
 13197: 53 25 f0 00 31           jump @791 if s0 <u 240
      :                          @788
 13202: 7c 98 03                 a1 = u8 [a2 + 0x3]
 13205: 97 66 3d                 s1 = s1 << 0x3d
 13208: 98 66 2b                 s1 = s1 >> 0x2b
 13211: 97 22 06                 t0 = t0 << 0x6
 13214: 84 88 3f                 a1 = a1 & 0x3f
 13217: d4 82 05                 s0 = t0 | a1
 13220: d4 65 05                 s0 = s0 | s1
 13223: aa 05 73                 jump @797 if s0 == ra
      :                          @789
 13226: 95 98 04                 a1 = a2 + 0x4
 13229: 33 07 df 00              a0 = 0xdf
 13233: 28 a5                    jump @782
      :                          @790
 13235: 95 98 02                 a1 = a2 + 0x2
 13238: 97 65 06                 s0 = s1 << 0x6
 13241: d4 b5 05                 s0 = s0 | a4
 13244: 28 9a                    jump @782
      :                          @791
 13246: 95 98 03                 a1 = a2 + 0x3
 13249: 97 66 0c                 s1 = s1 << 0xc
 13252: d4 62 05                 s0 = t0 | s1
 13255: 33 07 df 00              a0 = 0xdf
 13259: 28 8b                    jump @782
      :                          @792
 13261: aa 39 4d                 jump @797 if a2 == t1
      :                          @793
 13264: 7d 98                    a1 = i8 [a2]
 13266: 59 08 b6 02              jump @840 if a1 >=s 0
      :                          @794
 13270: 84 88 ff 00              a1 = a1 & 0xff
 13274: 33 0b e0 00              a4 = 0xe0
 13278: ac b8 aa 02              jump @840 if a1 <u a4
      :                          @795
 13282: 33 0b f0 00              a4 = 0xf0
 13286: ac b8 a2 02              jump @840 if a1 <u a4
      :                          @796
 13290: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 13293: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 13296: 84 bb 3f                 a4 = a4 & 0x3f
 13299: 84 cc 3f                 a5 = a5 & 0x3f
 13302: 7c 99 03                 a2 = u8 [a2 + 0x3]
 13305: 97 88 3d                 a1 = a1 << 0x3d
 13308: 98 88 2b                 a1 = a1 >> 0x2b
 13311: 97 bb 0c                 a4 = a4 << 0xc
 13314: 97 cc 06                 a5 = a5 << 0x6
 13317: d4 cb 0b                 a4 = a4 | a5
 13320: 84 99 3f                 a2 = a2 & 0x3f
 13323: d4 b9 09                 a2 = a2 | a4
 13326: d4 98 08                 a1 = a1 | a2
 13329: 33 09 00 00 11           a2 = 0x110000
 13334: ab 98 72 02              jump @840 if a1 != a2
      :                          @797
 13338: 82 13 18                 t1 = u64 [sp + 0x18]
 13341: 82 15 10                 s0 = u64 [sp + 0x10]
 13344: 82 17 08                 a0 = u64 [sp + 0x8]
 13347: 01                       fallthrough
      :                          @798
 13348: 51 04 af 02              jump @850 if t2 == 0
      :                          @799
 13352: 82 7c 08                 a5 = u64 [a0 + 0x8]
 13355: 7b 13 18                 u64 [sp + 0x18] = t1
 13358: 7b 15 10                 u64 [sp + 0x10] = s0
 13361: 55 13 20 29              jump @805 if t1 >=u 32
      :                          @800
 13365: 33 09                    a2 = 0
 13367: 51 03 1c                 jump @803 if t1 == 0
      :                          @801
 13370: 64 58                    a1 = s0
 13372: 64 3a                    a3 = t1
 13374: 01                       fallthrough
      :                          @802
 13375: 7d 8b                    a4 = i8 [a1]
 13377: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 13380: 85 bb 01                 a4 = a4 ^ 0x1
 13383: c8 b9 09                 a2 = a2 + a4
 13386: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13389: 95 88 01                 a1 = a1 + 0x1
 13392: 52 0a ef                 jump @802 if a3 != 0
      :                          @803
 13395: ac c9 95 01              jump @822 if a2 <u a5
      :                          @804
 13399: 28 7c 02                 jump @850
      :                          @805
 13402: 7b 1c                    u64 [sp] = a5
 13404: 95 58 07                 a1 = s0 + 0x7
 13407: 64 5c                    a5 = s0
 13409: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 13412: c9 5c 0b                 a4 = a5 - s0
 13415: c8 b3 02                 t0 = t1 + a4
 13418: 84 2a 07                 a3 = t0 & 0x7
 13421: 33 08                    a1 = 0
 13423: aa c5 17                 jump @807 if s0 == a5
      :                          @806
 13426: 7d c6                    s1 = i8 [a5]
 13428: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 13431: 85 69 01                 a2 = s1 ^ 0x1
 13434: c8 98 08                 a1 = a1 + a2
 13437: 95 bb 01                 a4 = a4 + 0x1
 13440: 95 cc 01                 a5 = a5 + 0x1
 13443: 52 0b ef                 jump @806 if a4 != 0
      :                          @807
 13446: 33 0b                    a4 = 0
 13448: 51 0a 1e                 jump @810 if a3 == 0
      :                          @808
 13451: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 13454: c8 5c 0c                 a5 = a5 + s0
 13457: 01                       fallthrough
      :                          @809
 13458: 7d c7                    a0 = i8 [a5]
 13460: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 13463: 85 77 01                 a0 = a0 ^ 0x1
 13466: c8 7b 0b                 a4 = a4 + a0
 13469: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13472: 95 cc 01                 a5 = a5 + 0x1
 13475: 52 0a ef                 jump @809 if a3 != 0
      :                          @810
 13478: 98 20 03                 ra = t0 >> 0x3
 13481: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 13491: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 13501: 7b 17 28                 u64 [sp + 0x28] = a0
 13504: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 13514: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 13524: 7b 17 20                 u64 [sp + 0x20] = a0
 13527: c8 8b 09                 a2 = a4 + a1
 13530: 28 2d                    jump @812
      :                          @811
 13532: 97 45 03                 s0 = t2 << 0x3
 13535: c8 35 05                 s0 = s0 + t1
 13538: c9 40 00                 ra = ra - t2
 13541: 84 46 03                 s1 = t2 & 0x3
 13544: 82 1b 28                 a4 = u64 [sp + 0x28]
 13547: d2 b2 07                 a0 = t0 & a4
 13550: 98 28 08                 a1 = t0 >> 0x8
 13553: d2 b8 08                 a1 = a1 & a4
 13556: c8 87 07                 a0 = a0 + a1
 13559: 82 18 20                 a1 = u64 [sp + 0x20]
 13562: ca 87 07                 a0 = a0 * a1
 13565: 98 77 30                 a0 = a0 >> 0x30
 13568: c8 79 09                 a2 = a2 + a0
 13571: 52 06 8e 00              jump @819 if s1 != 0
      :                          @812
 13575: 51 00 79                 jump @817 if ra == 0
      :                          @813
 13578: 64 53                    t1 = s0
 13580: 33 07 c0 00              a0 = 0xc0
 13584: e6 70 04                 t2 = minu(ra, a0)
 13587: 33 02                    t0 = 0
 13589: 98 48 02                 a1 = t2 >> 0x2
 13592: 51 08 c4                 jump @811 if a1 == 0
      :                          @814
 13595: 97 88 05                 a1 = a1 << 0x5
 13598: c8 38 08                 a1 = a1 + t1
 13601: 64 36                    s1 = t1
 13603: 01                       fallthrough
      :                          @815
 13604: 82 67                    a0 = u64 [s1]
 13606: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 13609: 98 cc 07                 a5 = a5 >> 0x7
 13612: 98 77 06                 a0 = a0 >> 0x6
 13615: 82 6b 08                 a4 = u64 [s1 + 0x8]
 13618: d4 c7 07                 a0 = a0 | a5
 13621: d2 a7 07                 a0 = a0 & a3
 13624: c8 27 07                 a0 = a0 + t0
 13627: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 13630: 98 cc 07                 a5 = a5 >> 0x7
 13633: 82 65 10                 s0 = u64 [s1 + 0x10]
 13636: 98 bb 06                 a4 = a4 >> 0x6
 13639: d4 cb 0b                 a4 = a4 | a5
 13642: d2 ab 0b                 a4 = a4 & a3
 13645: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 13648: 98 cc 07                 a5 = a5 >> 0x7
 13651: 98 55 06                 s0 = s0 >> 0x6
 13654: d4 5c 0c                 a5 = a5 | s0
 13657: 82 65 18                 s0 = u64 [s1 + 0x18]
 13660: d2 ac 0c                 a5 = a5 & a3
 13663: c8 cb 0b                 a4 = a4 + a5
 13666: c8 b7 07                 a0 = a0 + a4
 13669: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 13672: 98 bb 07                 a4 = a4 >> 0x7
 13675: 98 55 06                 s0 = s0 >> 0x6
 13678: d4 5b 0b                 a4 = a4 | s0
 13681: d2 ab 0b                 a4 = a4 & a3
 13684: 95 66 20                 s1 = s1 + 0x20
 13687: c8 7b 02                 t0 = a4 + a0
 13690: ab 86 aa                 jump @815 if s1 != a1
      :                          @816
 13693: 28 5f ff                 jump @811
      :                          @817
 13696: 82 13 18                 t1 = u64 [sp + 0x18]
 13699: 82 15 10                 s0 = u64 [sp + 0x10]
 13702: 82 17 08                 a0 = u64 [sp + 0x8]
 13705: 82 1c                    a5 = u64 [sp]
 13707: ac c9 5d                 jump @822 if a2 <u a5
      :                          @818
 13710: 28 45 01                 jump @850
      :                          @819
 13713: 33 08                    a1 = 0
 13715: 84 47 fc 00              a0 = t2 & 0xfc
 13719: 97 77 03                 a0 = a0 << 0x3
 13722: c8 73 0b                 a4 = t1 + a0
 13725: 97 66 03                 s1 = s1 << 0x3
 13728: 82 13 18                 t1 = u64 [sp + 0x18]
 13731: 82 15 10                 s0 = u64 [sp + 0x10]
 13734: 01                       fallthrough
      :                          @820
 13735: 82 b7                    a0 = u64 [a4]
 13737: 95 bb 08                 a4 = a4 + 0x8
 13740: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 13743: 98 cc 07                 a5 = a5 >> 0x7
 13746: 98 77 06                 a0 = a0 >> 0x6
 13749: d4 c7 07                 a0 = a0 | a5
 13752: d2 a7 07                 a0 = a0 & a3
 13755: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 13758: c8 78 08                 a1 = a1 + a0
 13761: 52 06 e6                 jump @820 if s1 != 0
      :                          @821
 13764: 82 1a 28                 a3 = u64 [sp + 0x28]
 13767: d2 a8 07                 a0 = a1 & a3
 13770: 98 88 08                 a1 = a1 >> 0x8
 13773: d2 a8 08                 a1 = a1 & a3
 13776: c8 87 07                 a0 = a0 + a1
 13779: 82 18 20                 a1 = u64 [sp + 0x20]
 13782: ca 87 07                 a0 = a0 * a1
 13785: 98 77 30                 a0 = a0 >> 0x30
 13788: c8 79 09                 a2 = a2 + a0
 13791: 82 17 08                 a0 = u64 [sp + 0x8]
 13794: 82 1c                    a5 = u64 [sp]
 13796: ae c9 ef 00              jump @850 if a2 >=u a5
      :                          @822
 13800: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 13803: 33 08                    a1 = 0
 13805: 33 0b 01                 a4 = 0x1
 13808: c9 9c 0c                 a5 = a5 - a2
 13811: ad ab 0c                 jump @825 if a4 <s a3
      :                          @823
 13814: 51 0a 1a                 jump @827 if a3 == 0
      :                          @824
 13817: 64 c8                    a1 = a5
 13819: 49 01                    u64 [sp + 0] = 0
 13821: 28 16                    jump @828
      :                          @825
 13823: 52 1a 02 11              jump @827 if a3 != 2
      :                          @826
 13827: 98 c8 01                 a1 = a5 >> 0x1
 13830: 95 c9 01                 a2 = a5 + 0x1
 13833: 98 99 01                 a2 = a2 >> 0x1
 13836: 7b 19                    u64 [sp] = a2
 13838: 28 05                    jump @828
      :                          @827
 13840: 7b 1c                    u64 [sp] = a5
 13842: 01                       fallthrough
      :                          @828
 13843: 82 79 20                 a2 = u64 [a0 + 0x20]
 13846: 7b 19 28                 u64 [sp + 0x28] = a2
 13849: 82 75 28                 s0 = u64 [a0 + 0x28]
 13852: 81 77 30                 a0 = i32 [a0 + 0x30]
 13855: 7b 17 20                 u64 [sp + 0x20] = a0
 13858: 95 86 01                 s1 = a1 + 0x1
 13861: 01                       fallthrough
      :                          @829
 13862: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 13865: 51 06 19                 jump @833 if s1 == 0
      :                          @830
 13868: 82 59 20                 a2 = u64 [s0 + 0x20]
 13871: 82 17 28                 a0 = u64 [sp + 0x28]
 13874: 82 18 20                 a1 = u64 [sp + 0x20]
 13877: b4 90 02 5c 01           ra = 348, jump [a2]
      :                          @831 [@dyn 174]
 13882: 51 07 ec                 jump @829 if a0 == 0
      :                          @832
 13885: 33 07 01                 a0 = 0x1
 13888: 28 72                    jump @846
      :                          @833
 13890: 82 5a 18                 a3 = u64 [s0 + 0x18]
 13893: 82 17 28                 a0 = u64 [sp + 0x28]
 13896: 82 18 10                 a1 = u64 [sp + 0x10]
 13899: 82 19 18                 a2 = u64 [sp + 0x18]
 13902: b4 a0 02 5e 01           ra = 350, jump [a3]
      :                          @834 [@dyn 175]
 13907: 64 78                    a1 = a0
 13909: 33 07 01                 a0 = 0x1
 13912: 52 08 5a                 jump @846 if a1 != 0
      :                          @835
 13915: 82 17                    a0 = u64 [sp]
 13917: 9a 77                    a0 = -a0
 13919: 7b 17 18                 u64 [sp + 0x18] = a0
 13922: 33 06 ff                 s1 = 0xffffffffffffffff
 13925: 01                       fallthrough
      :                          @836
 13926: 82 17 18                 a0 = u64 [sp + 0x18]
 13929: c8 67 07                 a0 = a0 + s1
 13932: 33 08 ff                 a1 = 0xffffffffffffffff
 13935: aa 87 34                 jump @844 if a0 == a1
      :                          @837
 13938: 82 59 20                 a2 = u64 [s0 + 0x20]
 13941: 82 17 28                 a0 = u64 [sp + 0x28]
 13944: 82 18 20                 a1 = u64 [sp + 0x20]
 13947: b4 90 02 60 01           ra = 352, jump [a2]
      :                          @838 [@dyn 176]
 13952: 95 66 01                 s1 = s1 + 0x1
 13955: 51 07 e3                 jump @836 if a0 == 0
      :                          @839
 13958: 28 26                    jump @845
      :                          @840
 13960: 82 13 18                 t1 = u64 [sp + 0x18]
 13963: 82 15 10                 s0 = u64 [sp + 0x10]
 13966: 51 0a 35                 jump @848 if a3 == 0
      :                          @841
 13969: ae 3a 2f                 jump @847 if a3 >=u t1
      :                          @842
 13972: c8 a5 08                 a1 = s0 + a3
 13975: 7d 88                    a1 = i8 [a1]
 13977: 33 09 c0                 a2 = 0xffffffffffffffc0
 13980: af 98 27                 jump @848 if a1 >=s a2
      :                          @843
 13983: 33 08                    a1 = 0
 13985: 28 25                    jump @849
      :                          @844
 13987: 82 16                    s1 = u64 [sp]
 13989: 82 17                    a0 = u64 [sp]
 13991: d8 76 07                 a0 = s1 <u a0
 13994: 28 08                    jump @846
      :                          @845
 13996: 82 17                    a0 = u64 [sp]
 13998: d8 76 07                 a0 = s1 <u a0
 14001: 01                       fallthrough
      :                          @846
 14002: 82 10 40                 ra = u64 [sp + 0x40]
 14005: 82 15 38                 s0 = u64 [sp + 0x38]
 14008: 82 16 30                 s1 = u64 [sp + 0x30]
 14011: 95 11 48                 sp = sp + 0x48
 14014: 32 00                    ret
      :                          @847
 14016: ab 3a df                 jump @843 if a3 != t1
      :                          @848
 14019: 64 58                    a1 = s0
 14021: 01                       fallthrough
      :                          @849
 14022: 82 17 08                 a0 = u64 [sp + 0x8]
 14025: db 8a 03                 t1 = a3 if a1 != 0
 14028: db 88 05                 s0 = a1 if a1 != 0
 14031: 52 04 59 fd              jump @799 if t2 != 0
      :                          @850
 14035: 82 78 28                 a1 = u64 [a0 + 0x28]
 14038: 82 77 20                 a0 = u64 [a0 + 0x20]
 14041: 82 8c 18                 a5 = u64 [a1 + 0x18]
 14044: 64 58                    a1 = s0
 14046: 64 39                    a2 = t1
 14048: 82 10 40                 ra = u64 [sp + 0x40]
 14051: 82 15 38                 s0 = u64 [sp + 0x38]
 14054: 82 16 30                 s1 = u64 [sp + 0x30]
 14057: 95 11 48                 sp = sp + 0x48
 14060: 32 0c                    jump [a5]
      :                          @851
 14062: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 14066: 7b 10 80 00              u64 [sp + 0x80] = ra
 14070: 7b 15 78                 u64 [sp + 0x78] = s0
 14073: 7b 16 70                 u64 [sp + 0x70] = s1
 14076: 49 11 60 20              u64 [sp + 96] = 0x20
 14080: 33 0a 03                 a3 = 0x3
 14083: 78 1a 68                 u8 [sp + 0x68] = a3
 14086: 82 96 20                 s1 = u64 [a2 + 0x20]
 14089: 49 11 30                 u64 [sp + 48] = 0
 14092: 49 11 40                 u64 [sp + 64] = 0
 14095: 7b 17 50                 u64 [sp + 0x50] = a0
 14098: 7b 18 58                 u64 [sp + 0x58] = a1
 14101: 51 06 0a 01              jump @873 if s1 == 0
      :                          @852
 14105: 82 97 28                 a0 = u64 [a2 + 0x28]
 14108: 51 07 79 01              jump @883 if a0 == 0
      :                          @853
 14112: 49 11 28                 u64 [sp + 40] = 0
 14115: 82 95                    s0 = u64 [a2]
 14117: 7b 19 08                 u64 [sp + 0x8] = a2
 14120: 82 98 10                 a1 = u64 [a2 + 0x10]
 14123: 7b 18 18                 u64 [sp + 0x18] = a1
 14126: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 14129: 97 88 03                 a1 = a1 << 0x3
 14132: 98 88 03                 a1 = a1 >> 0x3
 14135: 95 88 01                 a1 = a1 + 0x1
 14138: 7b 18                    u64 [sp] = a1
 14140: 95 55 08                 s0 = s0 + 0x8
 14143: 96 78 38                 a1 = a0 * 0x38
 14146: 95 66 18                 s1 = s1 + 0x18
 14149: 33 07 46 01              a0 = 0x146
 14153: 7b 17 10                 u64 [sp + 0x10] = a0
 14156: 01                       fallthrough
      :                          @854
 14157: 7b 18 20                 u64 [sp + 0x20] = a1
 14160: 82 59                    a2 = u64 [s0]
 14162: 51 09 18                 jump @857 if a2 == 0
      :                          @855
 14165: 82 1a 58                 a3 = u64 [sp + 0x58]
 14168: 82 17 50                 a0 = u64 [sp + 0x50]
 14171: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 14174: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14177: b4 a0 02 62 01           ra = 354, jump [a3]
      :                          @856 [@dyn 177]
 14182: 52 07 55 01              jump @886 if a0 != 0
      :                          @857
 14186: 81 67 10                 a0 = i32 [s1 + 0x10]
 14189: 7a 17 60                 u32 [sp + 0x60] = a0
 14192: 7c 67 18                 a0 = u8 [s1 + 0x18]
 14195: 78 17 68                 u8 [sp + 0x68] = a0
 14198: 81 67 14                 a0 = i32 [s1 + 0x14]
 14201: 7a 17 64                 u32 [sp + 0x64] = a0
 14204: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14207: 82 67                    a0 = u64 [s1]
 14209: 51 08 26                 jump @862 if a1 == 0
      :                          @858
 14212: 52 18 01 16              jump @860 if a1 != 1
      :                          @859
 14216: 97 77 04                 a0 = a0 << 0x4
 14219: 82 18 18                 a1 = u64 [sp + 0x18]
 14222: c8 87 07                 a0 = a0 + a1
 14225: 82 78 08                 a1 = u64 [a0 + 0x8]
 14228: 82 19 10                 a2 = u64 [sp + 0x10]
 14231: aa 98 07                 jump @861 if a1 == a2
      :                          @860
 14234: 33 08                    a1 = 0
 14236: 28 0f                    jump @863
      :                          @861
 14238: 82 77                    a0 = u64 [a0]
 14240: 82 77                    a0 = u64 [a0]
 14242: 33 08 01                 a1 = 0x1
 14245: 28 06                    jump @863
      :                          @862
 14247: 33 08 01                 a1 = 0x1
 14250: 01                       fallthrough
      :                          @863
 14251: 7b 18 30                 u64 [sp + 0x30] = a1
 14254: 7b 17 38                 u64 [sp + 0x38] = a0
 14257: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 14260: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 14263: 51 08 26                 jump @868 if a1 == 0
      :                          @864
 14266: 52 18 01 16              jump @866 if a1 != 1
      :                          @865
 14270: 97 77 04                 a0 = a0 << 0x4
 14273: 82 18 18                 a1 = u64 [sp + 0x18]
 14276: c8 87 07                 a0 = a0 + a1
 14279: 82 78 08                 a1 = u64 [a0 + 0x8]
 14282: 82 19 10                 a2 = u64 [sp + 0x10]
 14285: aa 98 07                 jump @867 if a1 == a2
      :                          @866
 14288: 33 08                    a1 = 0
 14290: 28 0f                    jump @869
      :                          @867
 14292: 82 77                    a0 = u64 [a0]
 14294: 82 77                    a0 = u64 [a0]
 14296: 33 08 01                 a1 = 0x1
 14299: 28 06                    jump @869
      :                          @868
 14301: 33 08 01                 a1 = 0x1
 14304: 01                       fallthrough
      :                          @869
 14305: 7b 18 40                 u64 [sp + 0x40] = a1
 14308: 7b 17 48                 u64 [sp + 0x48] = a0
 14311: 82 67 08                 a0 = u64 [s1 + 0x8]
 14314: 97 77 04                 a0 = a0 << 0x4
 14317: 82 18 18                 a1 = u64 [sp + 0x18]
 14320: c8 78 08                 a1 = a1 + a0
 14323: 82 87                    a0 = u64 [a1]
 14325: 82 89 08                 a2 = u64 [a1 + 0x8]
 14328: 95 18 30                 a1 = sp + 0x30
 14331: b4 90 02 64 01           ra = 356, jump [a2]
      :                          @870 [@dyn 178]
 14336: 52 07 bb 00              jump @886 if a0 != 0
      :                          @871
 14340: 95 55 10                 s0 = s0 + 0x10
 14343: 82 18 20                 a1 = u64 [sp + 0x20]
 14346: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 14349: 95 66 38                 s1 = s1 + 0x38
 14352: 82 17 28                 a0 = u64 [sp + 0x28]
 14355: 95 77 01                 a0 = a0 + 0x1
 14358: 7b 17 28                 u64 [sp + 0x28] = a0
 14361: 52 08 34 ff              jump @854 if a1 != 0
      :                          @872
 14365: 28 6b                    jump @881
      :                          @873
 14367: 82 97 18                 a0 = u64 [a2 + 0x18]
 14370: 51 07 73                 jump @883 if a0 == 0
      :                          @874
 14373: 82 95 10                 s0 = u64 [a2 + 0x10]
 14376: 33 0a                    a3 = 0
 14378: 97 78 04                 a1 = a0 << 0x4
 14381: c8 58 08                 a1 = a1 + s0
 14384: 7b 18 20                 u64 [sp + 0x20] = a1
 14387: 7b 19 08                 u64 [sp + 0x8] = a2
 14390: 82 96                    s1 = u64 [a2]
 14392: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 14395: 97 77 04                 a0 = a0 << 0x4
 14398: 98 77 04                 a0 = a0 >> 0x4
 14401: 95 77 01                 a0 = a0 + 0x1
 14404: 7b 17                    u64 [sp] = a0
 14406: 95 66 08                 s1 = s1 + 0x8
 14409: 01                       fallthrough
      :                          @875
 14410: 7b 1a 28                 u64 [sp + 0x28] = a3
 14413: 82 69                    a2 = u64 [s1]
 14415: 51 09 17                 jump @878 if a2 == 0
      :                          @876
 14418: 82 1a 58                 a3 = u64 [sp + 0x58]
 14421: 82 17 50                 a0 = u64 [sp + 0x50]
 14424: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 14427: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14430: b4 a0 02 66 01           ra = 358, jump [a3]
      :                          @877 [@dyn 179]
 14435: 52 07 58                 jump @886 if a0 != 0
      :                          @878
 14438: 82 57                    a0 = u64 [s0]
 14440: 82 59 08                 a2 = u64 [s0 + 0x8]
 14443: 95 18 30                 a1 = sp + 0x30
 14446: b4 90 02 68 01           ra = 360, jump [a2]
      :                          @879 [@dyn 180]
 14451: 52 07 48                 jump @886 if a0 != 0
      :                          @880
 14454: 95 66 10                 s1 = s1 + 0x10
 14457: 95 55 10                 s0 = s0 + 0x10
 14460: 82 1a 28                 a3 = u64 [sp + 0x28]
 14463: 95 aa 01                 a3 = a3 + 0x1
 14466: 82 17 20                 a0 = u64 [sp + 0x20]
 14469: ab 75 c5                 jump @875 if s0 != a0
      :                          @881
 14472: 82 19 08                 a2 = u64 [sp + 0x8]
 14475: 82 1a                    a3 = u64 [sp]
 14477: 82 97 08                 a0 = u64 [a2 + 0x8]
 14480: ac 7a 0d                 jump @884 if a3 <u a0
      :                          @882
 14483: 28 2d                    jump @887
      :                          @883
 14485: 33 0a                    a3 = 0
 14487: 82 97 08                 a0 = u64 [a2 + 0x8]
 14490: 54 07 26                 jump @887 if a0 <=u 0
      :                          @884
 14493: 82 97                    a0 = u64 [a2]
 14495: 97 a8 04                 a1 = a3 << 0x4
 14498: c8 87 09                 a2 = a0 + a1
 14501: 82 1a 58                 a3 = u64 [sp + 0x58]
 14504: 82 17 50                 a0 = u64 [sp + 0x50]
 14507: 82 98                    a1 = u64 [a2]
 14509: 82 99 08                 a2 = u64 [a2 + 0x8]
 14512: 82 aa 18                 a3 = u64 [a3 + 0x18]
 14515: b4 a0 02 6a 01           ra = 362, jump [a3]
      :                          @885 [@dyn 181]
 14520: 51 07 08                 jump @887 if a0 == 0
      :                          @886
 14523: 33 07 01                 a0 = 0x1
 14526: 28 05                    jump @888
      :                          @887
 14528: 33 07                    a0 = 0
 14530: 01                       fallthrough
      :                          @888
 14531: 82 10 80 00              ra = u64 [sp + 0x80]
 14535: 82 15 78                 s0 = u64 [sp + 0x78]
 14538: 82 16 70                 s1 = u64 [sp + 0x70]
 14541: 95 11 88 00              sp = sp + 0x88
 14545: 32 00                    ret
      :                          @889 [@dyn 182]
 14547: 32 00                    ret
      :                          @890 [@dyn 183]
 14549: 95 11 88                 sp = sp + 0xffffffffffffff88
 14552: 7b 10 70                 u64 [sp + 0x70] = ra
 14555: 7b 15 68                 u64 [sp + 0x68] = s0
 14558: 7b 16 60                 u64 [sp + 0x60] = s1
 14561: 64 93                    t1 = a2
 14563: 33 0c                    a5 = 0
 14565: 33 02                    t0 = 0
 14567: 33 0b                    a4 = 0
 14569: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 14579: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 14585: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 14595: 82 79 10                 a2 = u64 [a0 + 0x10]
 14598: 7b 19 48                 u64 [sp + 0x48] = a2
 14601: 82 79                    a2 = u64 [a0]
 14603: 7b 19 30                 u64 [sp + 0x30] = a2
 14606: 82 77 08                 a0 = u64 [a0 + 0x8]
 14609: 7b 17 28                 u64 [sp + 0x28] = a0
 14612: 7b 18 50                 u64 [sp + 0x50] = a1
 14615: 95 88 08                 a1 = a1 + 0x8
 14618: 7b 18                    u64 [sp] = a1
 14620: 33 07 b9 04 01           a0 = 0x104b9
 14625: 7b 17 08                 u64 [sp + 0x8] = a0
 14628: 33 05 0a                 s0 = 0xa
 14631: 7b 13 20                 u64 [sp + 0x20] = t1
 14634: 7b 14 18                 u64 [sp + 0x18] = t2
 14637: 7b 10 10                 u64 [sp + 0x10] = ra
 14640: 28 3a                    jump @894
      :                          @891
 14642: c8 89 07                 a0 = a2 + a1
 14645: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 14648: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 14651: 88 77 01                 a0 = a0 <u 0x1
 14654: 01                       fallthrough
      :                          @892
 14655: 82 1a 48                 a3 = u64 [sp + 0x48]
 14658: 78 a7                    u8 [a3] = a0
 14660: 82 17 28                 a0 = u64 [sp + 0x28]
 14663: 82 7a 18                 a3 = u64 [a0 + 0x18]
 14666: 82 17 30                 a0 = u64 [sp + 0x30]
 14669: b4 a0 02 70 01           ra = 368, jump [a3]
      :                          @893 [@dyn 184]
 14674: 64 52                    t0 = s0
 14676: 82 13 20                 t1 = u64 [sp + 0x20]
 14679: 82 14 18                 t2 = u64 [sp + 0x18]
 14682: 82 10 10                 ra = u64 [sp + 0x10]
 14685: 82 1c 58                 a5 = u64 [sp + 0x58]
 14688: 33 05 0a                 s0 = 0xa
 14691: 82 1b 38                 a4 = u64 [sp + 0x38]
 14694: 52 07 67 01              jump @935 if a0 != 0
      :                          @894
 14698: 84 b7 ff 00              a0 = a4 & 0xff
 14702: 52 07 5b 01              jump @934 if a0 != 0
      :                          @895
 14706: 7b 12 40                 u64 [sp + 0x40] = t0
 14709: ae c3 0a                 jump @898 if t1 >=u a5
      :                          @896
 14712: 28 f4 00                 jump @925
      :                          @897
 14715: ac c3 f1 00              jump @925 if t1 <u a5
      :                          @898
 14719: c9 c3 08                 a1 = t1 - a5
 14722: 82 16 50                 s1 = u64 [sp + 0x50]
 14725: c8 c6 06                 s1 = s1 + a5
 14728: 55 18 10 1d              jump @904 if a1 >=u 16
      :                          @899
 14732: aa c3 dd 00              jump @924 if t1 == a5
      :                          @900
 14736: 33 0a                    a3 = 0
 14738: 01                       fallthrough
      :                          @901
 14739: c8 a6 07                 a0 = s1 + a3
 14742: 7c 77                    a0 = u8 [a0]
 14744: aa 57 aa 00              jump @919 if a0 == s0
      :                          @902
 14748: 95 aa 01                 a3 = a3 + 0x1
 14751: ab a8 f4                 jump @901 if a1 != a3
      :                          @903
 14754: 28 c7 00                 jump @924
      :                          @904
 14757: 95 69 07                 a2 = s1 + 0x7
 14760: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 14763: c9 6a 07                 a0 = a3 - s1
 14766: d3 6a 0a                 a3 = a3 ^ s1
 14769: 88 aa 01                 a3 = a3 <u 0x1
 14772: 88 7b 01                 a4 = a0 <u 0x1
 14775: d4 ba 0a                 a3 = a3 | a4
 14778: 7b 1c 58                 u64 [sp + 0x58] = a5
 14781: 51 0a 44                 jump @910 if a3 == 0
      :                          @905
 14784: 33 07                    a0 = 0
 14786: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 14789: 01                       fallthrough
      :                          @906
 14790: 82 1b 58                 a4 = u64 [sp + 0x58]
 14793: 82 19                    a2 = u64 [sp]
 14795: c8 9b 0b                 a4 = a4 + a2
 14798: 01                       fallthrough
      :                          @907
 14799: c8 76 0c                 a5 = s1 + a0
 14802: 82 cc                    a5 = u64 [a5]
 14804: c8 7b 09                 a2 = a4 + a0
 14807: 82 99                    a2 = u64 [a2]
 14809: d3 0c 05                 s0 = a5 ^ ra
 14812: c8 45 05                 s0 = s0 + t2
 14815: e0 c5 0c                 a5 = s0 & ~a5
 14818: d3 09 05                 s0 = a2 ^ ra
 14821: 3a 0a 10 00 03           a3 = u64 [0x30010]
 14826: c8 45 05                 s0 = s0 + t2
 14829: e0 95 09                 a2 = s0 & ~a2
 14832: d4 c9 09                 a2 = a2 | a5
 14835: d2 a9 09                 a2 = a2 & a3
 14838: 52 09 1f                 jump @913 if a2 != 0
      :                          @908
 14841: 95 77 10                 a0 = a0 + 0x10
 14844: ae 72 d3                 jump @907 if t0 >=u a0
      :                          @909
 14847: 28 16                    jump @913
      :                          @910
 14849: c8 a6 0b                 a4 = s1 + a3
 14852: 7c bb                    a4 = u8 [a4]
 14854: aa 5b 54                 jump @922 if a4 == s0
      :                          @911
 14857: 95 aa 01                 a3 = a3 + 0x1
 14860: ab a7 f5                 jump @910 if a0 != a3
      :                          @912
 14863: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 14866: ae 72 b4                 jump @906 if t0 >=u a0
      :                          @913
 14869: aa 87 99 00              jump @931 if a0 == a1
      :                          @914
 14873: 33 0a                    a3 = 0
 14875: c8 76 06                 s1 = s1 + a0
 14878: c9 73 08                 a1 = t1 - a0
 14881: 82 1c 58                 a5 = u64 [sp + 0x58]
 14884: c9 c8 08                 a1 = a1 - a5
 14887: 33 05 0a                 s0 = 0xa
 14890: 82 12 40                 t0 = u64 [sp + 0x40]
 14893: 01                       fallthrough
      :                          @915
 14894: c8 a6 09                 a2 = s1 + a3
 14897: 7c 99                    a2 = u8 [a2]
 14899: aa 59 0b                 jump @918 if a2 == s0
      :                          @916
 14902: 95 aa 01                 a3 = a3 + 0x1
 14905: ab a8 f5                 jump @915 if a1 != a3
      :                          @917
 14908: 28 2d                    jump @924
      :                          @918
 14910: c8 7a 0a                 a3 = a3 + a0
 14913: 01                       fallthrough
      :                          @919
 14914: c8 ca 0a                 a3 = a3 + a5
 14917: 95 ac 01                 a5 = a3 + 0x1
 14920: ae 3a 33 ff              jump @897 if a3 >=u t1
      :                          @920
 14924: 82 17 50                 a0 = u64 [sp + 0x50]
 14927: c8 7a 0a                 a3 = a3 + a0
 14930: 7c a7                    a0 = u8 [a3]
 14932: ab 57 27 ff              jump @897 if a0 != s0
      :                          @921
 14936: 28 5d                    jump @932
      :                          @922
 14938: 82 1c 58                 a5 = u64 [sp + 0x58]
 14941: c8 ca 0a                 a3 = a3 + a5
 14944: 95 ac 01                 a5 = a3 + 0x1
 14947: ac 3a e9                 jump @920 if a3 <u t1
      :                          @923
 14950: 28 15 ff                 jump @897
      :                          @924
 14953: 64 3c                    a5 = t1
 14955: 01                       fallthrough
      :                          @925
 14956: 7b 1c 58                 u64 [sp + 0x58] = a5
 14959: 49 11 38 01              u64 [sp + 56] = 0x1
 14963: 64 25                    s0 = t0
 14965: 64 36                    s1 = t1
 14967: aa 32 52                 jump @934 if t0 == t1
      :                          @926
 14970: 82 17 48                 a0 = u64 [sp + 0x48]
 14973: 7c 77                    a0 = u8 [a0]
 14975: 51 07 1d                 jump @929 if a0 == 0
      :                          @927
 14978: 82 17 28                 a0 = u64 [sp + 0x28]
 14981: 82 7a 18                 a3 = u64 [a0 + 0x18]
 14984: 33 09 04                 a2 = 0x4
 14987: 82 17 30                 a0 = u64 [sp + 0x30]
 14990: 82 18 08                 a1 = u64 [sp + 0x8]
 14993: b4 a0 02 72 01           ra = 370, jump [a3]
      :                          @928 [@dyn 185]
 14998: 82 12 40                 t0 = u64 [sp + 0x40]
 15001: 52 07 34                 jump @935 if a0 != 0
      :                          @929
 15004: c9 26 09                 a2 = s1 - t0
 15007: 82 18 50                 a1 = u64 [sp + 0x50]
 15010: c8 28 08                 a1 = a1 + t0
 15013: ab 26 8d fe              jump @891 if s1 != t0
      :                          @930
 15017: 33 07                    a0 = 0
 15019: 28 94 fe                 jump @892
      :                          @931
 15022: 64 3c                    a5 = t1
 15024: 82 12 40                 t0 = u64 [sp + 0x40]
 15027: 28 b9                    jump @925
      :                          @932
 15029: 49 11 38                 u64 [sp + 56] = 0
 15032: 64 c6                    s1 = a5
 15034: 64 c5                    s0 = a5
 15036: 7b 1c 58                 u64 [sp + 0x58] = a5
 15039: 82 17 48                 a0 = u64 [sp + 0x48]
 15042: 7c 77                    a0 = u8 [a0]
 15044: 52 07 be                 jump @927 if a0 != 0
      :                          @933
 15047: 28 d5                    jump @929
      :                          @934
 15049: 33 07                    a0 = 0
 15051: 28 06                    jump @936
      :                          @935
 15053: 33 07 01                 a0 = 0x1
 15056: 01                       fallthrough
      :                          @936
 15057: 82 10 70                 ra = u64 [sp + 0x70]
 15060: 82 15 68                 s0 = u64 [sp + 0x68]
 15063: 82 16 60                 s1 = u64 [sp + 0x60]
 15066: 95 11 78                 sp = sp + 0x78
 15069: 32 00                    ret
      :                          @937 [@dyn 186]
 15071: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15074: 7b 10 20                 u64 [sp + 0x20] = ra
 15077: 7b 15 18                 u64 [sp + 0x18] = s0
 15080: 7b 16 10                 u64 [sp + 0x10] = s1
 15083: 82 75 10                 s0 = u64 [a0 + 0x10]
 15086: 7c 59                    a2 = u8 [s0]
 15088: 82 7b                    a4 = u64 [a0]
 15090: 82 76 08                 s1 = u64 [a0 + 0x8]
 15093: 51 09 33                 jump @941 if a2 == 0
      :                          @938
 15096: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15099: 7b 18 08                 u64 [sp + 0x8] = a1
 15102: 33 08 b9 04 01           a1 = 0x104b9
 15107: 33 09 04                 a2 = 0x4
 15110: 64 b7                    a0 = a4
 15112: 7b 1b                    u64 [sp] = a4
 15114: b4 a0 02 76 01           ra = 374, jump [a3]
      :                          @939 [@dyn 187]
 15119: 82 18 08                 a1 = u64 [sp + 0x8]
 15122: 82 1b                    a4 = u64 [sp]
 15124: 51 07 14                 jump @941 if a0 == 0
      :                          @940
 15127: 33 07 01                 a0 = 0x1
 15130: 82 10 20                 ra = u64 [sp + 0x20]
 15133: 82 15 18                 s0 = u64 [sp + 0x18]
 15136: 82 16 10                 s1 = u64 [sp + 0x10]
 15139: 95 11 28                 sp = sp + 0x28
 15142: 32 00                    ret
      :                          @941
 15144: 83 87                    i32 a0 = a1 + 0
 15146: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 15149: 88 77 01                 a0 = a0 <u 0x1
 15152: 78 57                    u8 [s0] = a0
 15154: 82 6c 20                 a5 = u64 [s1 + 0x20]
 15157: 64 b7                    a0 = a4
 15159: 82 10 20                 ra = u64 [sp + 0x20]
 15162: 82 15 18                 s0 = u64 [sp + 0x18]
 15165: 82 16 10                 s1 = u64 [sp + 0x10]
 15168: 95 11 28                 sp = sp + 0x28
 15171: 32 0c                    jump [a5]
      :                          @942 [@dyn 188]
 15173: 64 8a                    a3 = a1
 15175: 33 08 70 0d 01           a1 = 0x10d70
 15180: 64 a9                    a2 = a3
 15182: 28 a0 fb                 jump @851
      :                          @943
 15185: 51 08 9b 00              jump @964 if a1 == 0
      :                          @944
 15189: 64 79                    a2 = a0
 15191: 7c 77                    a0 = u8 [a0]
 15193: 51 07 91 00              jump @963 if a0 == 0
      :                          @945
 15197: 51 27 ff 00 90 00        jump @965 if a0 == 255
      :                          @946
 15203: 6c 7a                    a3 = sext.b a0
 15205: 57 0a 09                 jump @948 if a3 <s 0
      :                          @947
 15208: 33 0a                    a3 = 0
 15210: 33 08                    a1 = 0
 15212: 28 73                    jump @962
      :                          @948
 15214: 55 27 c0 00 0d           jump @950 if a0 >=u 192
      :                          @949
 15219: 33 0a 01                 a3 = 0x1
 15222: 33 0b 80                 a4 = 0xffffffffffffff80
 15225: 28 4a                    jump @959
      :                          @950
 15227: 55 27 e0 00 0e           jump @952 if a0 >=u 224
      :                          @951
 15232: 33 0a 02                 a3 = 0x2
 15235: 33 0b 40 ff              a4 = 0xffffffffffffff40
 15239: 28 3c                    jump @959
      :                          @952
 15241: 55 27 f0 00 0e           jump @954 if a0 >=u 240
      :                          @953
 15246: 33 0a 03                 a3 = 0x3
 15249: 33 0b 20 ff              a4 = 0xffffffffffffff20
 15253: 28 2e                    jump @959
      :                          @954
 15255: 55 27 f8 00 0e           jump @956 if a0 >=u 248
      :                          @955
 15260: 33 0a 04                 a3 = 0x4
 15263: 33 0b 10 ff              a4 = 0xffffffffffffff10
 15267: 28 20                    jump @959
      :                          @956
 15269: 55 27 fc 00 0e           jump @958 if a0 >=u 252
      :                          @957
 15274: 33 0a 05                 a3 = 0x5
 15277: 33 0b 08 ff              a4 = 0xffffffffffffff08
 15281: 28 12                    jump @959
      :                          @958
 15283: 88 7a fe 00              a3 = a0 <u 0xfe
 15287: 33 0b 04 ff              a4 = 0xffffffffffffff04
 15291: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 15295: 85 aa 07                 a3 = a3 ^ 0x7
 15298: 01                       fallthrough
      :                          @959
 15299: ae 8a 2b                 jump @966 if a3 >=u a1
      :                          @960
 15302: 33 08                    a1 = 0
 15304: c8 b7 07                 a0 = a0 + a4
 15307: 64 ab                    a4 = a3
 15309: 01                       fallthrough
      :                          @961
 15310: c8 b9 0c                 a5 = a2 + a4
 15313: 7c cc                    a5 = u8 [a5]
 15315: 97 88 08                 a1 = a1 << 0x8
 15318: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 15321: d4 c8 08                 a1 = a1 | a5
 15324: 52 0b f2                 jump @961 if a4 != 0
      :                          @962
 15327: 8a a9 03                 i32 a2 = a3 << 0x3
 15330: cf 97 07                 a0 = a0 << a2
 15333: c8 87 07                 a0 = a0 + a1
 15336: 32 00                    ret
      :                          @963
 15338: 32 00                    ret
      :                          @964
 15340: 00                       trap
      :                          @965
 15341: 00                       trap
      :                          @966
 15342: 00                       trap
      :                          @967
 15343: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 15347: 7b 10 00 01              u64 [sp + 0x100] = ra
 15351: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 15355: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 15359: 7b 17                    u64 [sp] = a0
 15361: 78 18 0f                 u8 [sp + 0xf] = a1
 15364: 7b 17 10                 u64 [sp + 0x10] = a0
 15367: 95 16 0f                 s1 = sp + 0xf
 15370: 33 05 01                 s0 = 0x1
 15373: 95 17 0f                 a0 = sp + 0xf
 15376: 33 08 01                 a1 = 0x1
 15379: 95 19 10                 a2 = sp + 0x10
 15382: 33 0a 08                 a3 = 0x8
 15385: 0a 03                    ecalli 3 // 'write'
 15387: 7b 16 60                 u64 [sp + 0x60] = s1
 15390: 33 07 7e 01              a0 = 0x17e
 15394: 7b 17 68                 u64 [sp + 0x68] = a0
 15397: 64 17                    a0 = sp
 15399: 7b 17 70                 u64 [sp + 0x70] = a0
 15402: 33 07 04                 a0 = 0x4
 15405: 7b 17 78                 u64 [sp + 0x78] = a0
 15408: 49 21 80 00 02           u64 [sp + 128] = 0x2
 15413: 49 21 90 00 02           u64 [sp + 144] = 0x2
 15418: 49 21 a0 00              u64 [sp + 160] = 0
 15422: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 15432: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 15436: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 15441: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 15446: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 15451: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 15455: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 15459: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 15464: 33 08 a0 0d 01           a1 = 0x10da0
 15469: 7b 18 30                 u64 [sp + 0x30] = a1
 15472: 49 11 38 02              u64 [sp + 56] = 0x2
 15476: 95 18 80 00              a1 = sp + 0x80
 15480: 7b 18 50                 u64 [sp + 0x50] = a1
 15483: 49 11 58 02              u64 [sp + 88] = 0x2
 15487: 95 18 60                 a1 = sp + 0x60
 15490: 7b 18 40                 u64 [sp + 0x40] = a1
 15493: 49 11 48 02              u64 [sp + 72] = 0x2
 15497: 95 17 18                 a0 = sp + 0x18
 15500: 95 18 30                 a1 = sp + 0x30
 15503: 50 20 7a 01 65 ef        ra = 378, jump @633
      :                          @968 [@dyn 189]
 15509: 82 15 20                 s0 = u64 [sp + 0x20]
 15512: 82 1b 28                 a4 = u64 [sp + 0x28]
 15515: 82 16 18                 s1 = u64 [sp + 0x18]
 15518: 33 07 02                 a0 = 0x2
 15521: 33 08                    a1 = 0
 15523: 33 09                    a2 = 0
 15525: 64 5a                    a3 = s0
 15527: 33 00 7c 01              ra = 0x17c
 15531: 0a 64                    ecalli 100 // 'log'
 15533: 01                       fallthrough
      :                          @969 [@dyn 190]
 15534: 33 07 00 f0              a0 = 0xfffffffffffff000
 15538: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 15542: ac 78 23                 jump @975 if a1 <u a0
      :                          @970
 15545: 33 07 20 00 03           a0 = 0x30020
 15550: 95 77 00 10              a0 = a0 + 0x1000
 15554: 01                       fallthrough
      :                          @971
 15555: 82 78                    a1 = u64 [a0]
 15557: c9 87 09                 a2 = a0 - a1
 15560: ab 59 11                 jump @975 if a2 != s0
      :                          @972
 15563: c9 68 09                 a2 = a1 - s1
 15566: 01                       fallthrough
      :                          @973
 15567: 82 7a                    a3 = u64 [a0]
 15569: ab 8a f2                 jump @971 if a3 != a1
      :                          @974
 15572: 7b 79                    u64 [a0] = a2
 15574: 33 0b                    a4 = 0
 15576: 01                       fallthrough
      :                          @975
 15577: 82 10 00 01              ra = u64 [sp + 0x100]
 15581: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 15585: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 15589: 95 11 08 01              sp = sp + 0x108
 15593: 32 00                    ret
      :                          @976 [@dyn 191]
 15595: 95 11 68 ff              sp = sp + 0xffffffffffffff68
 15599: 7b 10 90 00              u64 [sp + 0x90] = ra
 15603: 7b 15 88 00              u64 [sp + 0x88] = s0
 15607: 7b 16 80 00              u64 [sp + 0x80] = s1
 15611: 64 85                    s0 = a1
 15613: 82 86 28                 s1 = u64 [a1 + 0x28]
 15616: 82 8a 20                 a3 = u64 [a1 + 0x20]
 15619: 82 6b 18                 a4 = u64 [s1 + 0x18]
 15622: 7b 17 10                 u64 [sp + 0x10] = a0
 15625: 33 08 a8 04 01           a1 = 0x104a8
 15630: 33 09 01                 a2 = 0x1
 15633: 7b 1a 18                 u64 [sp + 0x18] = a3
 15636: 64 a7                    a0 = a3
 15638: 7b 1b 08                 u64 [sp + 0x8] = a4
 15641: b4 b0 02 80 01           ra = 384, jump [a4]
      :                          @977 [@dyn 192]
 15646: 51 07 09                 jump @979 if a0 == 0
      :                          @978
 15649: 33 09 01                 a2 = 0x1
 15652: 28 d2 00                 jump @991
      :                          @979
 15655: 80 58 34                 a1 = u32 [s0 + 0x34]
 15658: 84 87 04                 a0 = a1 & 0x4
 15661: 52 07 21                 jump @983 if a0 != 0
      :                          @980
 15664: 82 17 10                 a0 = u64 [sp + 0x10]
 15667: 64 58                    a1 = s0
 15669: 50 20 82 01 d5 00        ra = 386, jump @992
      :                          @981 [@dyn 193]
 15675: 33 09 01                 a2 = 0x1
 15678: 52 07 b8 00              jump @991 if a0 != 0
      :                          @982
 15682: 82 57 28                 a0 = u64 [s0 + 0x28]
 15685: 82 5a 20                 a3 = u64 [s0 + 0x20]
 15688: 82 7b 18                 a4 = u64 [a0 + 0x18]
 15691: 28 99 00                 jump @989
      :                          @983
 15694: 7b 18                    u64 [sp] = a1
 15696: 33 08 c3 04 01           a1 = 0x104c3
 15701: 33 09 01                 a2 = 0x1
 15704: 82 17 18                 a0 = u64 [sp + 0x18]
 15707: 82 1a 08                 a3 = u64 [sp + 0x8]
 15710: b4 a0 02 84 01           ra = 388, jump [a3]
      :                          @984 [@dyn 194]
 15715: 33 09 01                 a2 = 0x1
 15718: 82 18 18                 a1 = u64 [sp + 0x18]
 15721: 52 07 8d 00              jump @991 if a0 != 0
      :                          @985
 15725: 46 11 3f 01              u8 [sp + 63] = 0x1
 15729: 7b 18 20                 u64 [sp + 0x20] = a1
 15732: 7b 16 28                 u64 [sp + 0x28] = s1
 15735: 95 17 3f                 a0 = sp + 0x3f
 15738: 7b 17 30                 u64 [sp + 0x30] = a0
 15741: 81 57 30                 a0 = i32 [s0 + 0x30]
 15744: 7c 58 38                 a1 = u8 [s0 + 0x38]
 15747: 82 59                    a2 = u64 [s0]
 15749: 82 5a 08                 a3 = u64 [s0 + 0x8]
 15752: 82 5b 10                 a4 = u64 [s0 + 0x10]
 15755: 82 5c 18                 a5 = u64 [s0 + 0x18]
 15758: 82 16                    s1 = u64 [sp]
 15760: 7a 16 74                 u32 [sp + 0x74] = s1
 15763: 7a 17 70                 u32 [sp + 0x70] = a0
 15766: 78 18 78                 u8 [sp + 0x78] = a1
 15769: 7b 19 40                 u64 [sp + 0x40] = a2
 15772: 7b 1a 48                 u64 [sp + 0x48] = a3
 15775: 7b 1b 50                 u64 [sp + 0x50] = a4
 15778: 7b 1c 58                 u64 [sp + 0x58] = a5
 15781: 95 17 20                 a0 = sp + 0x20
 15784: 7b 17 60                 u64 [sp + 0x60] = a0
 15787: 33 07 70 0d 01           a0 = 0x10d70
 15792: 7b 17 68                 u64 [sp + 0x68] = a0
 15795: 95 18 40                 a1 = sp + 0x40
 15798: 82 17 10                 a0 = u64 [sp + 0x10]
 15801: 50 20 86 01 51           ra = 390, jump @992
      :                          @986 [@dyn 195]
 15806: 52 07 63 ff              jump @978 if a0 != 0
      :                          @987
 15810: 82 18 68                 a1 = u64 [sp + 0x68]
 15813: 82 17 60                 a0 = u64 [sp + 0x60]
 15816: 82 8a 18                 a3 = u64 [a1 + 0x18]
 15819: 33 08 c1 04 01           a1 = 0x104c1
 15824: 33 09 02                 a2 = 0x2
 15827: b4 a0 02 88 01           ra = 392, jump [a3]
      :                          @988 [@dyn 196]
 15832: 82 1a 18                 a3 = u64 [sp + 0x18]
 15835: 82 1b 08                 a4 = u64 [sp + 0x8]
 15838: 33 09 01                 a2 = 0x1
 15841: 52 07 15                 jump @991 if a0 != 0
      :                          @989
 15844: 33 08 c4 04 01           a1 = 0x104c4
 15849: 33 09 01                 a2 = 0x1
 15852: 64 a7                    a0 = a3
 15854: b4 b0 02 8a 01           ra = 394, jump [a4]
      :                          @990 [@dyn 197]
 15859: 64 79                    a2 = a0
 15861: 01                       fallthrough
      :                          @991
 15862: 64 97                    a0 = a2
 15864: 82 10 90 00              ra = u64 [sp + 0x90]
 15868: 82 15 88 00              s0 = u64 [sp + 0x88]
 15872: 82 16 80 00              s1 = u64 [sp + 0x80]
 15876: 95 11 98 00              sp = sp + 0x98
 15880: 32 00                    ret
      :                          @992
 15882: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 15886: 7b 10 80 00              u64 [sp + 0x80] = ra
 15890: 80 89 34                 a2 = u32 [a1 + 0x34]
 15893: 84 9a 10                 a3 = a2 & 0x10
 15896: 52 0a 16                 jump @995 if a3 != 0
      :                          @993
 15899: 84 99 20                 a2 = a2 & 0x20
 15902: 52 09 52                 jump @999 if a2 != 0
      :                          @994
 15905: 7c 77                    a0 = u8 [a0]
 15907: 82 10 80 00              ra = u64 [sp + 0x80]
 15911: 95 11 88 00              sp = sp + 0x88
 15915: 28 4f f1                 jump @716
      :                          @995
 15918: 7c 77                    a0 = u8 [a0]
 15920: 33 0b 81 00              a4 = 0x81
 15924: 95 19 7f                 a2 = sp + 0x7f
 15927: 33 02 57                 t0 = 0x57
 15930: 01                       fallthrough
      :                          @996
 15931: 64 bc                    a5 = a4
 15933: 84 7b 0f                 a4 = a0 & 0xf
 15936: 97 77 38                 a0 = a0 << 0x38
 15939: 98 77 3c                 a0 = a0 >> 0x3c
 15942: 88 b3 0a                 t1 = a4 <u 0xa
 15945: 33 0a 30                 a3 = 0x30
 15948: da 32 0a                 a3 = t0 if t1 == 0
 15951: be ba 0a                 i32 a3 = a3 + a4
 15954: 78 9a                    u8 [a2] = a3
 15956: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15959: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 15962: 52 07 e1                 jump @996 if a0 != 0
      :                          @997
 15965: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 15968: 56 27 80 00 6b           jump @1005 if a0 >u 128
      :                          @998
 15973: 9a bb 81 00              a4 = 0x81 - a4
 15977: 64 1a                    a3 = sp
 15979: c8 7a 0a                 a3 = a3 + a0
 15982: 28 43                    jump @1003
      :                          @999
 15984: 7c 77                    a0 = u8 [a0]
 15986: 33 0b 81 00              a4 = 0x81
 15990: 95 19 7f                 a2 = sp + 0x7f
 15993: 33 02 37                 t0 = 0x37
 15996: 01                       fallthrough
      :                          @1000
 15997: 64 bc                    a5 = a4
 15999: 84 7b 0f                 a4 = a0 & 0xf
 16002: 97 77 38                 a0 = a0 << 0x38
 16005: 98 77 3c                 a0 = a0 >> 0x3c
 16008: 88 b3 0a                 t1 = a4 <u 0xa
 16011: 33 0a 30                 a3 = 0x30
 16014: da 32 0a                 a3 = t0 if t1 == 0
 16017: be ba 0a                 i32 a3 = a3 + a4
 16020: 78 9a                    u8 [a2] = a3
 16022: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 16025: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 16028: 52 07 e1                 jump @1000 if a0 != 0
      :                          @1001
 16031: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 16034: 56 27 80 00 29           jump @1005 if a0 >u 128
      :                          @1002
 16039: 9a bb 81 00              a4 = 0x81 - a4
 16043: 64 1a                    a3 = sp
 16045: c8 7a 0a                 a3 = a3 + a0
 16048: 01                       fallthrough
      :                          @1003
 16049: 33 09 02                 a2 = 0x2
 16052: 64 87                    a0 = a1
 16054: 33 08 c5 04 01           a1 = 0x104c5
 16059: 50 20 8c 01 dc f1        ra = 396, jump @726
      :                          @1004 [@dyn 198]
 16065: 82 10 80 00              ra = u64 [sp + 0x80]
 16069: 95 11 88 00              sp = sp + 0x88
 16073: 32 00                    ret
      :                          @1005
 16075: 00                       trap
