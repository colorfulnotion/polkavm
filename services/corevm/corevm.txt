// RO data = 4784/4784 bytes
// RW data = 24/1048656 bytes
// Stack size = 1048576 bytes
// RO data = [138, 0, 0, 0, 162, 0, 0, 0, 180, 0, 0, 0, 198, 0, 0, 0, 236, 0, 0, 0, 16, 1, 0, 0, 38, 1, 0, 0, 50, 1, 0, 0, 62, 1, 0, 0, 80, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 64, 110, 61, 101, 106, 101, 99, 116, 64, 110, 61, 101, 120, 112, 117, 110, 103, 101, 32, 32, 111, 117, 116, 112, 117, 116, 61, 121, 105, 101, 108, 100, 64, 110, 61, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 32, 64, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 32, 64, 110, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 88, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 93, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 128, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 160, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 16, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 96, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 0, 0, 0, 0, 0, 0, 208, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 24, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 0, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 0, 0, 152, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 216, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 0, 40, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 57, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 105, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 216, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 235, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 246, 4, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 0, 56, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 65, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 0, 0, 0, 0, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 0, 0, 0, 0, 144, 6, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 158, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 106, 97, 109, 64, 110, 61, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 112, 114, 101, 118, 32, 108, 101, 110, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 56, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 0, 0, 0, 200, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 122, 101, 114, 111, 32, 114, 101, 115, 117, 108, 116, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 50, 8, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 0, 128, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 200, 8, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 44, 32, 103, 111, 116, 32, 160, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 0, 240, 9, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 128, 11, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 200, 11, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 16, 12, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 200, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 207, 12, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 112, 103, 114, 97, 100, 101, 32, 64, 110, 61, 0, 0, 0, 0, 0, 32, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 72, 14, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 64, 110, 61, 0, 192, 14, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 0, 0, 0, 248, 14, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 112, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 133, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 146, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 148, 1, 0, 0, 0, 0, 0, 0, 154, 1, 0, 0, 0, 0, 0, 0, 162, 1, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 196, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 198, 1, 0, 0, 0, 0, 0, 0, 204, 1, 0, 0, 0, 0, 0, 0, 208, 1, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 114, 18, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 131, 18, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 6000
// Code size = 19054 bytes

      :                          @0
     0: 28 a0 04 00 00           jump @78
      :                          @1
     5: 28 e3 14 00 00           jump @261
      :                          @2
    10: 28 ec 37                 jump @712
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 f0 0f 01           a1 = 0x10ff0
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2d                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 e8 01              a0 = 0x1e8
    73: 7b 17                    u64 [sp] = a0
    75: 01                       fallthrough
      :                          @6
    76: 95 67 01                 a0 = s1 + 0x1
    79: 7b 17 08                 u64 [sp + 0x8] = a0
    82: 7b 16 20                 u64 [sp + 0x20] = s1
    85: 95 17 10                 a0 = sp + 0x10
    88: 95 18 20                 a1 = sp + 0x20
    91: 82 19                    a2 = u64 [sp]
    93: 50 10 06 12 46           ra = 6, jump @1013
      :                          @7 [@dyn 3]
    98: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   101: 82 16 08                 s1 = u64 [sp + 0x8]
   104: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   107: 7c 17 18                 a0 = u8 [sp + 0x18]
   110: 01                       fallthrough
      :                          @9
   111: 33 08 01                 a1 = 0x1
   114: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   117: 82 17 10                 a0 = u64 [sp + 0x10]
   120: 82 78 28                 a1 = u64 [a0 + 0x28]
   123: 82 77 20                 a0 = u64 [a0 + 0x20]
   126: 82 8a 18                 a3 = u64 [a1 + 0x18]
   129: 33 08 45 10 01           a1 = 0x11045
   134: 33 09 01                 a2 = 0x1
   137: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   141: 64 78                    a1 = a0
   143: 01                       fallthrough
      :                          @12
   144: 64 87                    a0 = a1
   146: 82 10 38                 ra = u64 [sp + 0x38]
   149: 82 15 30                 s0 = u64 [sp + 0x30]
   152: 82 16 28                 s1 = u64 [sp + 0x28]
   155: 95 11 40                 sp = sp + 0x40
   158: 32 00                    ret
      :                          @13 [@dyn 5]
   160: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   164: 7b 10 80 00              u64 [sp + 0x80] = ra
   168: 80 89 34                 a2 = u32 [a1 + 0x34]
   171: 82 77                    a0 = u64 [a0]
   173: 84 9a 10                 a3 = a2 & 0x10
   176: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   179: 84 99 20                 a2 = a2 & 0x20
   182: 52 09 40                 jump @19 if a2 != 0
      :                          @15
   185: 82 77                    a0 = u64 [a0]
   187: 82 10 80 00              ra = u64 [sp + 0x80]
   191: 95 11 88 00              sp = sp + 0x88
   195: 28 a1 3d                 jump @859
      :                          @16
   198: 82 7b                    a4 = u64 [a0]
   200: 33 09 81 00              a2 = 0x81
   204: 95 17 7f                 a0 = sp + 0x7f
   207: 33 02 57                 t0 = 0x57
   210: 01                       fallthrough
      :                          @17
   211: 64 9c                    a5 = a2
   213: 98 ba 04                 a3 = a4 >> 0x4
   216: 84 bb 0f                 a4 = a4 & 0xf
   219: 88 b3 0a                 t1 = a4 <u 0xa
   222: 33 09 30                 a2 = 0x30
   225: da 32 09                 a2 = t0 if t1 == 0
   228: be b9 09                 i32 a2 = a2 + a4
   231: 78 79                    u8 [a0] = a2
   233: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   236: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   239: 64 ab                    a4 = a3
   241: 52 0a e2                 jump @17 if a3 != 0
      :                          @18
   244: 28 30                    jump @21
      :                          @19
   246: 82 7b                    a4 = u64 [a0]
   248: 33 09 81 00              a2 = 0x81
   252: 95 17 7f                 a0 = sp + 0x7f
   255: 33 02 37                 t0 = 0x37
   258: 01                       fallthrough
      :                          @20
   259: 64 9c                    a5 = a2
   261: 98 ba 04                 a3 = a4 >> 0x4
   264: 84 bb 0f                 a4 = a4 & 0xf
   267: 88 b3 0a                 t1 = a4 <u 0xa
   270: 33 09 30                 a2 = 0x30
   273: da 32 09                 a2 = t0 if t1 == 0
   276: be b9 09                 i32 a2 = a2 + a4
   279: 78 79                    u8 [a0] = a2
   281: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   284: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   287: 64 ab                    a4 = a3
   289: 52 0a e2                 jump @20 if a3 != 0
      :                          @21
   292: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   295: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   300: 9a 9b 81 00              a4 = 0x81 - a2
   304: 64 1a                    a3 = sp
   306: c8 7a 0a                 a3 = a3 + a0
   309: 33 09 02                 a2 = 0x2
   312: 64 87                    a0 = a1
   314: 33 08 46 10 01           a1 = 0x11046
   319: 50 10 0c 4d 3e           ra = 12, jump @869
      :                          @23 [@dyn 6]
   324: 82 10 80 00              ra = u64 [sp + 0x80]
   328: 95 11 88 00              sp = sp + 0x88
   332: 32 00                    ret
      :                          @24
   334: 00                       trap
      :                          @25 [@dyn 7]
   335: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   339: 7b 10 80 00              u64 [sp + 0x80] = ra
   343: 80 89 34                 a2 = u32 [a1 + 0x34]
   346: 84 9a 10                 a3 = a2 & 0x10
   349: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   352: 84 99 20                 a2 = a2 & 0x20
   355: 52 09 41                 jump @31 if a2 != 0
      :                          @27
   358: 7c 77                    a0 = u8 [a0]
   360: 82 10 80 00              ra = u64 [sp + 0x80]
   364: 95 11 88 00              sp = sp + 0x88
   368: 28 f4 3c                 jump @859
      :                          @28
   371: 7c 77                    a0 = u8 [a0]
   373: 33 0b 81 00              a4 = 0x81
   377: 95 19 7f                 a2 = sp + 0x7f
   380: 33 02 57                 t0 = 0x57
   383: 01                       fallthrough
      :                          @29
   384: 64 bc                    a5 = a4
   386: 84 7b 0f                 a4 = a0 & 0xf
   389: 97 77 38                 a0 = a0 << 0x38
   392: 98 77 3c                 a0 = a0 >> 0x3c
   395: 88 b3 0a                 t1 = a4 <u 0xa
   398: 33 0a 30                 a3 = 0x30
   401: da 32 0a                 a3 = t0 if t1 == 0
   404: be ba 0a                 i32 a3 = a3 + a4
   407: 78 9a                    u8 [a2] = a3
   409: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   412: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   415: 52 07 e1                 jump @29 if a0 != 0
      :                          @30
   418: 28 31                    jump @33
      :                          @31
   420: 7c 77                    a0 = u8 [a0]
   422: 33 0b 81 00              a4 = 0x81
   426: 95 19 7f                 a2 = sp + 0x7f
   429: 33 02 37                 t0 = 0x37
   432: 01                       fallthrough
      :                          @32
   433: 64 bc                    a5 = a4
   435: 84 7b 0f                 a4 = a0 & 0xf
   438: 97 77 38                 a0 = a0 << 0x38
   441: 98 77 3c                 a0 = a0 >> 0x3c
   444: 88 b3 0a                 t1 = a4 <u 0xa
   447: 33 0a 30                 a3 = 0x30
   450: da 32 0a                 a3 = t0 if t1 == 0
   453: be ba 0a                 i32 a3 = a3 + a4
   456: 78 9a                    u8 [a2] = a3
   458: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   461: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   464: 52 07 e1                 jump @32 if a0 != 0
      :                          @33
   467: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   470: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   475: 9a bb 81 00              a4 = 0x81 - a4
   479: 64 1a                    a3 = sp
   481: c8 7a 0a                 a3 = a3 + a0
   484: 33 09 02                 a2 = 0x2
   487: 64 87                    a0 = a1
   489: 33 08 46 10 01           a1 = 0x11046
   494: 50 10 10 9e 3d           ra = 16, jump @869
      :                          @35 [@dyn 8]
   499: 82 10 80 00              ra = u64 [sp + 0x80]
   503: 95 11 88 00              sp = sp + 0x88
   507: 32 00                    ret
      :                          @36
   509: 00                       trap
      :                          @37 [@dyn 9]
   510: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   514: 7b 10 80 00              u64 [sp + 0x80] = ra
   518: 80 89 34                 a2 = u32 [a1 + 0x34]
   521: 84 9a 10                 a3 = a2 & 0x10
   524: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   527: 84 99 20                 a2 = a2 & 0x20
   530: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   533: 80 77                    a0 = u32 [a0]
   535: 82 10 80 00              ra = u64 [sp + 0x80]
   539: 95 11 88 00              sp = sp + 0x88
   543: 28 45 3c                 jump @859
      :                          @40
   546: 81 7b                    a4 = i32 [a0]
   548: 33 09 81 00              a2 = 0x81
   552: 95 17 7f                 a0 = sp + 0x7f
   555: 33 02 57                 t0 = 0x57
   558: 01                       fallthrough
      :                          @41
   559: 64 9c                    a5 = a2
   561: 8b ba 04                 i32 a3 = a4 >> 0x4
   564: 84 bb 0f                 a4 = a4 & 0xf
   567: 88 b3 0a                 t1 = a4 <u 0xa
   570: 33 09 30                 a2 = 0x30
   573: da 32 09                 a2 = t0 if t1 == 0
   576: be b9 09                 i32 a2 = a2 + a4
   579: 78 79                    u8 [a0] = a2
   581: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   584: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   587: 64 ab                    a4 = a3
   589: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   592: 28 30                    jump @45
      :                          @43
   594: 81 7b                    a4 = i32 [a0]
   596: 33 09 81 00              a2 = 0x81
   600: 95 17 7f                 a0 = sp + 0x7f
   603: 33 02 37                 t0 = 0x37
   606: 01                       fallthrough
      :                          @44
   607: 64 9c                    a5 = a2
   609: 8b ba 04                 i32 a3 = a4 >> 0x4
   612: 84 bb 0f                 a4 = a4 & 0xf
   615: 88 b3 0a                 t1 = a4 <u 0xa
   618: 33 09 30                 a2 = 0x30
   621: da 32 09                 a2 = t0 if t1 == 0
   624: be b9 09                 i32 a2 = a2 + a4
   627: 78 79                    u8 [a0] = a2
   629: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   632: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   635: 64 ab                    a4 = a3
   637: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   640: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   643: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   648: 9a 9b 81 00              a4 = 0x81 - a2
   652: 64 1a                    a3 = sp
   654: c8 7a 0a                 a3 = a3 + a0
   657: 33 09 02                 a2 = 0x2
   660: 64 87                    a0 = a1
   662: 33 08 46 10 01           a1 = 0x11046
   667: 50 10 14 f1 3c           ra = 20, jump @869
      :                          @47 [@dyn 10]
   672: 82 10 80 00              ra = u64 [sp + 0x80]
   676: 95 11 88 00              sp = sp + 0x88
   680: 32 00                    ret
      :                          @48
   682: 00                       trap
      :                          @49 [@dyn 11]
   683: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   687: 7b 10 80 00              u64 [sp + 0x80] = ra
   691: 80 89 34                 a2 = u32 [a1 + 0x34]
   694: 84 9a 10                 a3 = a2 & 0x10
   697: 52 0a 16                 jump @52 if a3 != 0
      :                          @50
   700: 84 99 20                 a2 = a2 & 0x20
   703: 52 09 40                 jump @55 if a2 != 0
      :                          @51
   706: 82 77                    a0 = u64 [a0]
   708: 82 10 80 00              ra = u64 [sp + 0x80]
   712: 95 11 88 00              sp = sp + 0x88
   716: 28 98 3b                 jump @859
      :                          @52
   719: 82 7b                    a4 = u64 [a0]
   721: 33 09 81 00              a2 = 0x81
   725: 95 17 7f                 a0 = sp + 0x7f
   728: 33 02 57                 t0 = 0x57
   731: 01                       fallthrough
      :                          @53
   732: 64 9c                    a5 = a2
   734: 98 ba 04                 a3 = a4 >> 0x4
   737: 84 bb 0f                 a4 = a4 & 0xf
   740: 88 b3 0a                 t1 = a4 <u 0xa
   743: 33 09 30                 a2 = 0x30
   746: da 32 09                 a2 = t0 if t1 == 0
   749: be b9 09                 i32 a2 = a2 + a4
   752: 78 79                    u8 [a0] = a2
   754: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   757: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   760: 64 ab                    a4 = a3
   762: 52 0a e2                 jump @53 if a3 != 0
      :                          @54
   765: 28 30                    jump @57
      :                          @55
   767: 82 7b                    a4 = u64 [a0]
   769: 33 09 81 00              a2 = 0x81
   773: 95 17 7f                 a0 = sp + 0x7f
   776: 33 02 37                 t0 = 0x37
   779: 01                       fallthrough
      :                          @56
   780: 64 9c                    a5 = a2
   782: 98 ba 04                 a3 = a4 >> 0x4
   785: 84 bb 0f                 a4 = a4 & 0xf
   788: 88 b3 0a                 t1 = a4 <u 0xa
   791: 33 09 30                 a2 = 0x30
   794: da 32 09                 a2 = t0 if t1 == 0
   797: be b9 09                 i32 a2 = a2 + a4
   800: 78 79                    u8 [a0] = a2
   802: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   805: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   808: 64 ab                    a4 = a3
   810: 52 0a e2                 jump @56 if a3 != 0
      :                          @57
   813: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   816: 56 27 80 00 27           jump @60 if a0 >u 128
      :                          @58
   821: 9a 9b 81 00              a4 = 0x81 - a2
   825: 64 1a                    a3 = sp
   827: c8 7a 0a                 a3 = a3 + a0
   830: 33 09 02                 a2 = 0x2
   833: 64 87                    a0 = a1
   835: 33 08 46 10 01           a1 = 0x11046
   840: 50 10 18 44 3c           ra = 24, jump @869
      :                          @59 [@dyn 12]
   845: 82 10 80 00              ra = u64 [sp + 0x80]
   849: 95 11 88 00              sp = sp + 0x88
   853: 32 00                    ret
      :                          @60
   855: 00                       trap
      :                          @61 [@dyn 13]
   856: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   859: 7b 10 28                 u64 [sp + 0x28] = ra
   862: 7b 15 20                 u64 [sp + 0x20] = s0
   865: 7b 16 18                 u64 [sp + 0x18] = s1
   868: 64 85                    s0 = a1
   870: 82 88 28                 a1 = u64 [a1 + 0x28]
   873: 82 5a 20                 a3 = u64 [s0 + 0x20]
   876: 82 8b 18                 a4 = u64 [a1 + 0x18]
   879: 64 76                    s1 = a0
   881: 33 08 f0 0f 01           a1 = 0x10ff0
   886: 33 09 01                 a2 = 0x1
   889: 64 a7                    a0 = a3
   891: b4 b0 01 1c              ra = 28, jump [a4]
      :                          @62 [@dyn 14]
   895: 7b 15                    u64 [sp] = s0
   897: 78 17 08                 u8 [sp + 0x8] = a0
   900: 46 11 09                 u8 [sp + 9] = 0
   903: 7b 16 10                 u64 [sp + 0x10] = s1
   906: 33 05 0a                 s0 = 0xa
   909: 64 17                    a0 = sp
   911: 95 18 10                 a1 = sp + 0x10
   914: 33 09 0a                 a2 = 0xa
   917: 50 10 1e da 42           ra = 30, jump @1013
      :                          @63 [@dyn 15]
   922: 95 67 08                 a0 = s1 + 0x8
   925: 7b 17 10                 u64 [sp + 0x10] = a0
   928: 64 17                    a0 = sp
   930: 95 18 10                 a1 = sp + 0x10
   933: 64 59                    a2 = s0
   935: 50 10 20 c8 42           ra = 32, jump @1013
      :                          @64 [@dyn 16]
   940: 95 67 10                 a0 = s1 + 0x10
   943: 7b 17 10                 u64 [sp + 0x10] = a0
   946: 64 17                    a0 = sp
   948: 95 18 10                 a1 = sp + 0x10
   951: 64 59                    a2 = s0
   953: 50 10 22 b6 42           ra = 34, jump @1013
      :                          @65 [@dyn 17]
   958: 95 67 18                 a0 = s1 + 0x18
   961: 7b 17 10                 u64 [sp + 0x10] = a0
   964: 64 17                    a0 = sp
   966: 95 18 10                 a1 = sp + 0x10
   969: 64 59                    a2 = s0
   971: 50 10 24 a4 42           ra = 36, jump @1013
      :                          @66 [@dyn 18]
   976: 95 67 20                 a0 = s1 + 0x20
   979: 7b 17 10                 u64 [sp + 0x10] = a0
   982: 64 17                    a0 = sp
   984: 95 18 10                 a1 = sp + 0x10
   987: 64 59                    a2 = s0
   989: 50 10 26 92 42           ra = 38, jump @1013
      :                          @67 [@dyn 19]
   994: 95 67 28                 a0 = s1 + 0x28
   997: 7b 17 10                 u64 [sp + 0x10] = a0
  1000: 64 17                    a0 = sp
  1002: 95 18 10                 a1 = sp + 0x10
  1005: 64 59                    a2 = s0
  1007: 50 10 28 80 42           ra = 40, jump @1013
      :                          @68 [@dyn 20]
  1012: 95 67 30                 a0 = s1 + 0x30
  1015: 7b 17 10                 u64 [sp + 0x10] = a0
  1018: 64 17                    a0 = sp
  1020: 95 18 10                 a1 = sp + 0x10
  1023: 64 59                    a2 = s0
  1025: 50 10 2a 6e 42           ra = 42, jump @1013
      :                          @69 [@dyn 21]
  1030: 95 67 38                 a0 = s1 + 0x38
  1033: 7b 17 10                 u64 [sp + 0x10] = a0
  1036: 64 17                    a0 = sp
  1038: 95 18 10                 a1 = sp + 0x10
  1041: 64 59                    a2 = s0
  1043: 50 10 2c 5c 42           ra = 44, jump @1013
      :                          @70 [@dyn 22]
  1048: 95 67 40                 a0 = s1 + 0x40
  1051: 7b 17 10                 u64 [sp + 0x10] = a0
  1054: 64 17                    a0 = sp
  1056: 95 18 10                 a1 = sp + 0x10
  1059: 64 59                    a2 = s0
  1061: 50 10 2e 4a 42           ra = 46, jump @1013
      :                          @71 [@dyn 23]
  1066: 95 67 48                 a0 = s1 + 0x48
  1069: 7b 17 10                 u64 [sp + 0x10] = a0
  1072: 64 17                    a0 = sp
  1074: 95 18 10                 a1 = sp + 0x10
  1077: 64 59                    a2 = s0
  1079: 50 10 30 38 42           ra = 48, jump @1013
      :                          @72 [@dyn 24]
  1084: 95 67 50                 a0 = s1 + 0x50
  1087: 7b 17 10                 u64 [sp + 0x10] = a0
  1090: 64 17                    a0 = sp
  1092: 95 18 10                 a1 = sp + 0x10
  1095: 64 59                    a2 = s0
  1097: 50 10 32 26 42           ra = 50, jump @1013
      :                          @73 [@dyn 25]
  1102: 95 67 58                 a0 = s1 + 0x58
  1105: 7b 17 10                 u64 [sp + 0x10] = a0
  1108: 64 17                    a0 = sp
  1110: 95 18 10                 a1 = sp + 0x10
  1113: 64 59                    a2 = s0
  1115: 50 10 34 14 42           ra = 52, jump @1013
      :                          @74 [@dyn 26]
  1120: 95 67 60                 a0 = s1 + 0x60
  1123: 7b 17 10                 u64 [sp + 0x10] = a0
  1126: 64 17                    a0 = sp
  1128: 95 18 10                 a1 = sp + 0x10
  1131: 64 59                    a2 = s0
  1133: 50 10 36 02 42           ra = 54, jump @1013
      :                          @75 [@dyn 27]
  1138: 33 07 01                 a0 = 0x1
  1141: 7c 18 08                 a1 = u8 [sp + 0x8]
  1144: 52 08 1a                 jump @77 if a1 != 0
      :                          @76
  1147: 82 17                    a0 = u64 [sp]
  1149: 82 78 28                 a1 = u64 [a0 + 0x28]
  1152: 82 77 20                 a0 = u64 [a0 + 0x20]
  1155: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1158: 33 08 45 10 01           a1 = 0x11045
  1163: 33 09 01                 a2 = 0x1
  1166: b4 a0 01 38              ra = 56, jump [a3]
      :                          @77 [@dyn 28]
  1170: 82 10 28                 ra = u64 [sp + 0x28]
  1173: 82 15 20                 s0 = u64 [sp + 0x20]
  1176: 82 16 18                 s1 = u64 [sp + 0x18]
  1179: 95 11 30                 sp = sp + 0x30
  1182: 32 00                    ret
      :                          @78 [export #0: 'refine']
  1184: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1188: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1192: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1196: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1200: 95 11 40 d4              sp = sp + 0xffffffffffffd440
  1204: 33 0a 00 00 01           a3 = 0x10000
  1209: 53 18 04 e3 00           jump @97 if a1 <u 4
      :                          @79
  1214: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1217: 51 0b db 00              jump @97 if a4 == 0
      :                          @80
  1221: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1224: 80 7a                    a3 = u32 [a0]
  1226: 33 06 01                 s1 = 0x1
  1229: 59 08 3d                 jump @89 if a1 >=s 0
      :                          @81
  1232: 84 88 ff 00              a1 = a1 & 0xff
  1236: 33 06 02                 s1 = 0x2
  1239: 53 28 c0 00 2d           jump @87 if a1 <u 192
      :                          @82
  1244: 33 06 03                 s1 = 0x3
  1247: 53 28 e0 00 25           jump @87 if a1 <u 224
      :                          @83
  1252: 33 06 04                 s1 = 0x4
  1255: 53 28 f0 00 1d           jump @87 if a1 <u 240
      :                          @84
  1260: 33 06 05                 s1 = 0x5
  1263: 53 28 f8 00 15           jump @87 if a1 <u 248
      :                          @85
  1268: 33 06 06                 s1 = 0x6
  1271: 53 28 fc 00 0d           jump @87 if a1 <u 252
      :                          @86
  1276: 88 88 fe 00              a1 = a1 <u 0xfe
  1280: 9a 86 08                 s1 = 0x8 - a1
  1283: 01                       fallthrough
      :                          @87
  1284: ae 6b 06                 jump @89 if a4 >=u s1
      :                          @88
  1287: 28 e0 0f                 jump @260
      :                          @89
  1290: 7b 1a 70                 u64 [sp + 0x70] = a3
  1293: 95 77 04                 a0 = a0 + 0x4
  1296: 64 68                    a1 = s1
  1298: 7b 1b 78                 u64 [sp + 0x78] = a4
  1301: 50 10 3a 99 42           ra = 58, jump @1030
      :                          @90 [@dyn 29]
  1306: 64 75                    s0 = a0
  1308: 82 17 78                 a0 = u64 [sp + 0x78]
  1311: e4 67 07                 a0 = maxu(a0, s1)
  1314: c9 67 07                 a0 = a0 - s1
  1317: d8 57 08                 a1 = a0 <u s0
  1320: e4 57 07                 a0 = maxu(a0, s0)
  1323: c9 57 07                 a0 = a0 - s0
  1326: 88 77 20                 a0 = a0 <u 0x20
  1329: d4 87 07                 a0 = a0 | a1
  1332: 52 07 5f                 jump @96 if a0 != 0
      :                          @91
  1335: 48 21 a0 00              u32 [sp + 160] = 0
  1339: 49 21 98 00              u64 [sp + 152] = 0
  1343: 49 21 90 00              u64 [sp + 144] = 0
  1347: 49 21 88 00              u64 [sp + 136] = 0
  1351: 49 21 80 00              u64 [sp + 128] = 0
  1355: 95 17 80 00              a0 = sp + 0x80
  1359: 33 09 24                 a2 = 0x24
  1362: 33 0a 03                 a3 = 0x3
  1365: 33 08                    a1 = 0
  1367: 33 0b                    a4 = 0
  1369: 33 0c                    a5 = 0
  1371: 0a 12                    ecalli 18 // 'fetch'
  1373: 01                       fallthrough
      :                          @92
  1374: 95 1a 80 00              a3 = sp + 0x80
  1378: 33 08 24                 a1 = 0x24
  1381: 53 15 08 3a              jump @98 if s0 <u 8
      :                          @93
  1385: 95 17 a8 00              a0 = sp + 0xa8
  1389: 33 09 00 20              a2 = 0x2000
  1393: 33 08                    a1 = 0
  1395: 50 10 3c 92 38           ra = 60, jump @844
      :                          @94 [@dyn 30]
  1400: 95 18 80 00              a1 = sp + 0x80
  1404: 95 19 a8 00              a2 = sp + 0xa8
  1408: 33 0b 00 20              a4 = 0x2000
  1412: 82 17 70                 a0 = u64 [sp + 0x70]
  1415: 33 0a                    a3 = 0
  1417: 0a 11                    ecalli 17 // 'historical_lookup'
  1419: 01                       fallthrough
      :                          @95
  1420: 95 78 01                 a1 = a0 + 0x1
  1423: 55 18 04 2b              jump @99 if a1 >=u 4
      :                          @96
  1427: 33 08                    a1 = 0
  1429: 33 0a 00 00 01           a3 = 0x10000
  1434: 28 05                    jump @98
      :                          @97
  1436: 33 08                    a1 = 0
  1438: 01                       fallthrough
      :                          @98
  1439: 64 a7                    a0 = a3
  1441: 33 09 c0 2b              a2 = 0x2bc0
  1445: c8 91 01                 sp = sp + a2
  1448: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1452: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1456: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1460: 95 11 f8 07              sp = sp + 0x7f8
  1464: 32 00                    ret
      :                          @99
  1466: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1469: 53 18 03 d6              jump @96 if a1 <u 3
      :                          @100
  1473: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1476: 51 18 06 cf              jump @96 if a1 == 6
      :                          @101
  1480: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1483: 53 18 03 c8              jump @96 if a1 <u 3
      :                          @102
  1487: 7c 18 aa 00              a1 = u8 [sp + 0xaa]
  1491: 7c 19 a9 00              a2 = u8 [sp + 0xa9]
  1495: 7c 1a a8 00              a3 = u8 [sp + 0xa8]
  1499: 97 88 10                 a1 = a1 << 0x10
  1502: 97 99 08                 a2 = a2 << 0x8
  1505: d4 98 08                 a1 = a1 | a2
  1508: d4 a8 08                 a1 = a1 | a3
  1511: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1514: ac 89 a9                 jump @96 if a2 <u a1
      :                          @103
  1517: 7c 17 ad 00              a0 = u8 [sp + 0xad]
  1521: 7c 1a ac 00              a3 = u8 [sp + 0xac]
  1525: 7c 1b ab 00              a4 = u8 [sp + 0xab]
  1529: 97 77 10                 a0 = a0 << 0x10
  1532: 97 aa 08                 a3 = a3 << 0x8
  1535: d4 a7 07                 a0 = a0 | a3
  1538: d4 b7 07                 a0 = a0 | a4
  1541: c9 89 09                 a2 = a2 - a1
  1544: ac 79 8b                 jump @96 if a2 <u a0
      :                          @104
  1547: c9 79 06                 s1 = a2 - a0
  1550: 53 16 04 85              jump @96 if s1 <u 4
      :                          @105
  1554: 95 12 b3 00              t0 = sp + 0xb3
  1558: c8 28 03                 t1 = a1 + t0
  1561: c8 37 0b                 a4 = a0 + t1
  1564: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1567: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1570: 7c ba                    a3 = u8 [a4]
  1572: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1575: 97 cc 10                 a5 = a5 << 0x10
  1578: 97 55 08                 s0 = s0 << 0x8
  1581: d4 5c 0c                 a5 = a5 | s0
  1584: d4 c9 09                 a2 = a2 | a5
  1587: 97 99 08                 a2 = a2 << 0x8
  1590: d4 a9 0c                 a5 = a2 | a3
  1593: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1596: ac c6 57 ff              jump @96 if s1 <u a5
      :                          @106
  1600: 7c 19 af 00              a2 = u8 [sp + 0xaf]
  1604: 95 1a a8 20              a3 = sp + 0x20a8
  1608: 7c 14 ae 00              t2 = u8 [sp + 0xae]
  1612: 97 99 08                 a2 = a2 << 0x8
  1615: 7c 16 b2 00              s1 = u8 [sp + 0xb2]
  1619: 7c 15 b1 00              s0 = u8 [sp + 0xb1]
  1623: d4 49 04                 t2 = a2 | t2
  1626: 7c 19 b0 00              a2 = u8 [sp + 0xb0]
  1630: 97 66 10                 s1 = s1 << 0x10
  1633: 97 55 08                 s0 = s0 << 0x8
  1636: d4 65 05                 s0 = s0 | s1
  1639: d4 59 09                 a2 = a2 | s0
  1642: 33 05 ff ff ef           s0 = 0xffffffffffefffff
  1647: 7b 15 78                 u64 [sp + 0x78] = s0
  1650: 95 bb 04                 a4 = a4 + 0x4
  1653: 7b a4                    u64 [a3] = t2
  1655: 7b a9 08                 u64 [a3 + 0x8] = a2
  1658: 7b a2 10                 u64 [a3 + 0x10] = t0
  1661: 7b a8 18                 u64 [a3 + 0x18] = a1
  1664: 7b a3 20                 u64 [a3 + 0x20] = t1
  1667: 7b a7 28                 u64 [a3 + 0x28] = a0
  1670: 7b ab 30                 u64 [a3 + 0x30] = a4
  1673: 7b ac 38                 u64 [a3 + 0x38] = a5
  1676: 7b aa 50                 u64 [a3 + 0x50] = a3
  1679: 33 08 16                 a1 = 0x16
  1682: 7b a8 58                 u64 [a3 + 0x58] = a1
  1685: 95 17 b0 20              a0 = sp + 0x20b0
  1689: 7b a7 60                 u64 [a3 + 0x60] = a0
  1692: 7b a8 68                 u64 [a3 + 0x68] = a1
  1695: 95 17 b8 20              a0 = sp + 0x20b8
  1699: 7b a7 70                 u64 [a3 + 0x70] = a0
  1702: 7b a8 78                 u64 [a3 + 0x78] = a1
  1705: 95 17 c0 20              a0 = sp + 0x20c0
  1709: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1713: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1717: 95 17 c8 20              a0 = sp + 0x20c8
  1721: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1725: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1729: 95 17 d0 20              a0 = sp + 0x20d0
  1733: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1737: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1741: 95 17 d8 20              a0 = sp + 0x20d8
  1745: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1749: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1753: 95 17 e0 20              a0 = sp + 0x20e0
  1757: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1761: 7b 18 70                 u64 [sp + 0x70] = a1
  1764: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1768: 33 07 00 01 01           a0 = 0x10100
  1773: 95 16 00 31              s1 = sp + 0x3100
  1777: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1781: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1786: 49 26 68 01              u64 [s1 + 360] = 0
  1790: 95 18 f8 20              a1 = sp + 0x20f8
  1794: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1798: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1803: 95 17 90 31              a0 = sp + 0x3190
  1807: 95 18 48 32              a1 = sp + 0x3248
  1811: 50 10 3e c5 33           ra = 62, jump @777
      :                          @107 [@dyn 31]
  1816: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1820: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1824: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1828: 33 07 03                 a0 = 0x3
  1831: 33 08                    a1 = 0
  1833: 33 09                    a2 = 0
  1835: 64 5a                    a3 = s0
  1837: 33 00 40                 ra = 0x40
  1840: 0a 64                    ecalli 100 // 'log'
  1842: 01                       fallthrough
      :                          @108 [@dyn 32]
  1843: 82 17 78                 a0 = u64 [sp + 0x78]
  1846: c8 67 07                 a0 = a0 + s1
  1849: 53 37 00 00 f0 27        jump @114 if a0 <u 4293918720
      :                          @109
  1855: 33 07 40 00 03           a0 = 0x30040
  1860: 95 77 00 00 10           a0 = a0 + 0x100000
  1865: 01                       fallthrough
      :                          @110
  1866: 82 78                    a1 = u64 [a0]
  1868: c9 87 09                 a2 = a0 - a1
  1871: ab 59 11                 jump @114 if a2 != s0
      :                          @111
  1874: c9 68 09                 a2 = a1 - s1
  1877: 01                       fallthrough
      :                          @112
  1878: 82 7a                    a3 = u64 [a0]
  1880: ab 8a f2                 jump @110 if a3 != a1
      :                          @113
  1883: 7b 79                    u64 [a0] = a2
  1885: 0a                       ecalli 0 // 'gas'
  1886: 28 04                    jump @115
      :                          @114
  1888: 0a                       ecalli 0 // 'gas'
  1889: 01                       fallthrough
      :                          @115
  1890: 95 18 a8 20              a1 = sp + 0x20a8
  1894: 7b 87 40                 u64 [a1 + 0x40] = a0
  1897: 95 17 e8 20              a0 = sp + 0x20e8
  1901: 95 16 00 31              s1 = sp + 0x3100
  1905: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1909: 82 17 70                 a0 = u64 [sp + 0x70]
  1912: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1916: 33 07 90 01 01           a0 = 0x10190
  1921: 7b 87 50                 u64 [a1 + 0x50] = a0
  1924: 95 17 90 31              a0 = sp + 0x3190
  1928: 7b 87 60                 u64 [a1 + 0x60] = a0
  1931: 49 18 58 01              u64 [a1 + 88] = 0x1
  1935: 49 18 70                 u64 [a1 + 112] = 0
  1938: 49 18 68 01              u64 [a1 + 104] = 0x1
  1942: 95 17 48 32              a0 = sp + 0x3248
  1946: 95 18 f8 20              a1 = sp + 0x20f8
  1950: 50 10 42 3a 33           ra = 66, jump @777
      :                          @116 [@dyn 33]
  1955: 82 65 50 01              s0 = u64 [s1 + 0x150]
  1959: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  1963: 82 66 48 01              s1 = u64 [s1 + 0x148]
  1967: 33 07 04                 a0 = 0x4
  1970: 33 08                    a1 = 0
  1972: 33 09                    a2 = 0
  1974: 64 5a                    a3 = s0
  1976: 33 00 44                 ra = 0x44
  1979: 0a 64                    ecalli 100 // 'log'
  1981: 01                       fallthrough
      :                          @117 [@dyn 34]
  1982: 82 17 78                 a0 = u64 [sp + 0x78]
  1985: c8 67 07                 a0 = a0 + s1
  1988: 53 37 00 00 f0 25        jump @123 if a0 <u 4293918720
      :                          @118
  1994: 33 07 40 00 03           a0 = 0x30040
  1999: 95 77 00 00 10           a0 = a0 + 0x100000
  2004: 01                       fallthrough
      :                          @119
  2005: 82 78                    a1 = u64 [a0]
  2007: c9 87 09                 a2 = a0 - a1
  2010: ab 59 0f                 jump @123 if a2 != s0
      :                          @120
  2013: c9 68 09                 a2 = a1 - s1
  2016: 01                       fallthrough
      :                          @121
  2017: 82 7a                    a3 = u64 [a0]
  2019: ab 8a f2                 jump @119 if a3 != a1
      :                          @122
  2022: 7b 79                    u64 [a0] = a2
  2024: 01                       fallthrough
      :                          @123
  2025: 95 15 a8 20              s0 = sp + 0x20a8
  2029: 82 57 30                 a0 = u64 [s0 + 0x30]
  2032: 82 58 38                 a1 = u64 [s0 + 0x38]
  2035: 33 09                    a2 = 0
  2037: 0a 14                    ecalli 20 // 'machine'
  2039: 7b 57 48                 u64 [s0 + 0x48] = a0
  2042: 95 17 f0 20              a0 = sp + 0x20f0
  2046: 95 16 00 31              s1 = sp + 0x3100
  2050: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2054: 33 07 16                 a0 = 0x16
  2057: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2061: 33 07 b8 01 01           a0 = 0x101b8
  2066: 7b 57 50                 u64 [s0 + 0x50] = a0
  2069: 95 17 90 31              a0 = sp + 0x3190
  2073: 7b 57 60                 u64 [s0 + 0x60] = a0
  2076: 49 15 58 01              u64 [s0 + 88] = 0x1
  2080: 49 15 68 01              u64 [s0 + 104] = 0x1
  2084: 49 15 70                 u64 [s0 + 112] = 0
  2087: 95 17 48 32              a0 = sp + 0x3248
  2091: 95 18 f8 20              a1 = sp + 0x20f8
  2095: 50 10 46 a9 32           ra = 70, jump @777
      :                          @124 [@dyn 35]
  2100: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2104: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2108: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2112: 33 07 03                 a0 = 0x3
  2115: 33 08                    a1 = 0
  2117: 33 09                    a2 = 0
  2119: 64 5a                    a3 = s0
  2121: 33 00 48                 ra = 0x48
  2124: 0a 64                    ecalli 100 // 'log'
  2126: 01                       fallthrough
      :                          @125 [@dyn 36]
  2127: 82 17 78                 a0 = u64 [sp + 0x78]
  2130: c8 67 07                 a0 = a0 + s1
  2133: 53 37 00 00 f0 25        jump @131 if a0 <u 4293918720
      :                          @126
  2139: 33 07 40 00 03           a0 = 0x30040
  2144: 95 77 00 00 10           a0 = a0 + 0x100000
  2149: 01                       fallthrough
      :                          @127
  2150: 82 78                    a1 = u64 [a0]
  2152: c9 87 09                 a2 = a0 - a1
  2155: ab 59 0f                 jump @131 if a2 != s0
      :                          @128
  2158: c9 68 09                 a2 = a1 - s1
  2161: 01                       fallthrough
      :                          @129
  2162: 82 7a                    a3 = u64 [a0]
  2164: ab 8a f2                 jump @127 if a3 != a1
      :                          @130
  2167: 7b 79                    u64 [a0] = a2
  2169: 01                       fallthrough
      :                          @131
  2170: 95 19 a8 20              a2 = sp + 0x20a8
  2174: 82 97                    a0 = u64 [a2]
  2176: 7b 17 60                 u64 [sp + 0x60] = a0
  2179: 82 97 08                 a0 = u64 [a2 + 0x8]
  2182: 7b 17 58                 u64 [sp + 0x58] = a0
  2185: 82 97 10                 a0 = u64 [a2 + 0x10]
  2188: 7b 17 50                 u64 [sp + 0x50] = a0
  2191: 82 95 18                 s0 = u64 [a2 + 0x18]
  2194: 82 98 20                 a1 = u64 [a2 + 0x20]
  2197: 7b 18 48                 u64 [sp + 0x48] = a1
  2200: 80 97 48                 a0 = u32 [a2 + 0x48]
  2203: 82 96 28                 s1 = u64 [a2 + 0x28]
  2206: 49 11 68 ff 0f           u64 [sp + 104] = 0xfff
  2211: 95 59 ff 0f              a2 = s0 + 0xfff
  2215: 98 99 0c                 a2 = a2 >> 0xc
  2218: 33 08 10                 a1 = 0x10
  2221: 7b 17 70                 u64 [sp + 0x70] = a0
  2224: 0a 17                    ecalli 23 // 'zero'
  2226: 01                       fallthrough
      :                          @132
  2227: 51 07 17                 jump @134 if a0 == 0
      :                          @133
  2230: 33 0a 34 12 01           a3 = 0x11234
  2235: 33 07 02                 a0 = 0x2
  2238: 33 0b 3e                 a4 = 0x3e
  2241: 33 08                    a1 = 0
  2243: 33 09                    a2 = 0
  2245: 0a 64                    ecalli 100 // 'log'
  2247: 28 e0 00                 jump @147
      :                          @134
  2250: 7b 16 40                 u64 [sp + 0x40] = s1
  2253: 82 17 68                 a0 = u64 [sp + 0x68]
  2256: c8 67 07                 a0 = a0 + s1
  2259: 98 77 0c                 a0 = a0 >> 0xc
  2262: 82 19 60                 a2 = u64 [sp + 0x60]
  2265: c8 79 09                 a2 = a2 + a0
  2268: 7b 15 60                 u64 [sp + 0x60] = s0
  2271: 95 57 ff ff 00           a0 = s0 + 0xffff
  2276: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2281: 95 75 00 00 02           s0 = a0 + 0x20000
  2286: 98 58 0c                 a1 = s0 >> 0xc
  2289: 82 17 70                 a0 = u64 [sp + 0x70]
  2292: 0a 17                    ecalli 23 // 'zero'
  2294: 01                       fallthrough
      :                          @135
  2295: 51 07 17                 jump @137 if a0 == 0
      :                          @136
  2298: 33 0a f6 11 01           a3 = 0x111f6
  2303: 33 07 02                 a0 = 0x2
  2306: 33 0b 3e                 a4 = 0x3e
  2309: 33 08                    a1 = 0
  2311: 33 09                    a2 = 0
  2313: 0a 64                    ecalli 100 // 'log'
  2315: 28 9c 00                 jump @147
      :                          @137
  2318: 82 16 68                 s1 = u64 [sp + 0x68]
  2321: 82 17 58                 a0 = u64 [sp + 0x58]
  2324: c8 76 06                 s1 = s1 + a0
  2327: 98 69 0c                 a2 = s1 >> 0xc
  2330: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2334: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2344: c9 78 08                 a1 = a1 - a0
  2347: 98 88 0c                 a1 = a1 >> 0xc
  2350: 82 17 70                 a0 = u64 [sp + 0x70]
  2353: 0a 17                    ecalli 23 // 'zero'
  2355: 01                       fallthrough
      :                          @138
  2356: 51 07 16                 jump @140 if a0 == 0
      :                          @139
  2359: 33 0a ba 11 01           a3 = 0x111ba
  2364: 33 07 02                 a0 = 0x2
  2367: 33 0b 3c                 a4 = 0x3c
  2370: 33 08                    a1 = 0
  2372: 33 09                    a2 = 0
  2374: 0a 64                    ecalli 100 // 'log'
  2376: 28 5f                    jump @147
      :                          @140
  2378: 33 09 00 00 01           a2 = 0x10000
  2383: 82 17 70                 a0 = u64 [sp + 0x70]
  2386: 82 18 50                 a1 = u64 [sp + 0x50]
  2389: 82 1a 60                 a3 = u64 [sp + 0x60]
  2392: 0a 16                    ecalli 22 // 'poke'
  2394: 01                       fallthrough
      :                          @141
  2395: 51 07 16                 jump @143 if a0 == 0
      :                          @142
  2398: 33 0a 7c 11 01           a3 = 0x1117c
  2403: 33 07 02                 a0 = 0x2
  2406: 33 0b 3e                 a4 = 0x3e
  2409: 33 08                    a1 = 0
  2411: 33 09                    a2 = 0
  2413: 0a 64                    ecalli 100 // 'log'
  2415: 28 38                    jump @147
      :                          @143
  2417: 82 17 70                 a0 = u64 [sp + 0x70]
  2420: 82 18 48                 a1 = u64 [sp + 0x48]
  2423: 64 59                    a2 = s0
  2425: 82 1a 40                 a3 = u64 [sp + 0x40]
  2428: 0a 16                    ecalli 22 // 'poke'
  2430: 01                       fallthrough
      :                          @144
  2431: 51 07 16                 jump @146 if a0 == 0
      :                          @145
  2434: 33 0a 3e 11 01           a3 = 0x1113e
  2439: 33 07 02                 a0 = 0x2
  2442: 33 0b 3e                 a4 = 0x3e
  2445: 33 08                    a1 = 0
  2447: 33 09                    a2 = 0
  2449: 0a 64                    ecalli 100 // 'log'
  2451: 28 14                    jump @147
      :                          @146
  2453: 33 0a 10 11 01           a3 = 0x11110
  2458: 33 07 02                 a0 = 0x2
  2461: 33 0b 2e                 a4 = 0x2e
  2464: 33 08                    a1 = 0
  2466: 33 09                    a2 = 0
  2468: 0a 64                    ecalli 100 // 'log'
  2470: 01                       fallthrough
      :                          @147
  2471: 95 15 00 31              s0 = sp + 0x3100
  2475: 33 06 08 10              s1 = 0x1008
  2479: 95 17 f8 20              a0 = sp + 0x20f8
  2483: 33 08                    a1 = 0
  2485: 33 09 08 10              a2 = 0x1008
  2489: 50 10 4a 4c 34           ra = 74, jump @844
      :                          @148 [@dyn 37]
  2494: 49 05                    u64 [s0 + 0] = 0
  2496: 95 17 00 21              a0 = sp + 0x2100
  2500: 7b 57 08                 u64 [s0 + 0x8] = a0
  2503: 49 15 10                 u64 [s0 + 16] = 0
  2506: 49 15 18                 u64 [s0 + 24] = 0
  2509: 95 17 f8 20              a0 = sp + 0x20f8
  2513: 33 0a 06                 a3 = 0x6
  2516: 33 08                    a1 = 0
  2518: 7b 16 60                 u64 [sp + 0x60] = s1
  2521: 64 69                    a2 = s1
  2523: 33 0b                    a4 = 0
  2525: 33 0c                    a5 = 0
  2527: 0a 12                    ecalli 18 // 'fetch'
  2529: 01                       fallthrough
      :                          @149
  2530: 7b 57 68 02              u64 [s0 + 0x268] = a0
  2534: 95 16 00 31              s1 = sp + 0x3100
  2538: 51 17 ff 71 02           jump @176 if a0 == 4294967295
      :                          @150
  2543: 33 07 16                 a0 = 0x16
  2546: 7b 17 70                 u64 [sp + 0x70] = a0
  2549: 33 07 f0 01 01           a0 = 0x101f0
  2554: 7b 17 58                 u64 [sp + 0x58] = a0
  2557: 33 07 30 02 01           a0 = 0x10230
  2562: 7b 17 50                 u64 [sp + 0x50] = a0
  2565: 33 07 28 00 01           a0 = 0x10028
  2570: 7b 17 48                 u64 [sp + 0x48] = a0
  2573: 33 05 40 00 03           s0 = 0x30040
  2578: 95 55 00 00 10           s0 = s0 + 0x100000
  2583: 33 07 80 02 01           a0 = 0x10280
  2588: 7b 17 40                 u64 [sp + 0x40] = a0
  2591: 28 27                    jump @153
      :                          @151
  2593: 95 16 00 31              s1 = sp + 0x3100
  2597: 82 6b                    a4 = u64 [s1]
  2599: 95 bb 01                 a4 = a4 + 0x1
  2602: 7b 6b                    u64 [s1] = a4
  2604: 95 17 f8 20              a0 = sp + 0x20f8
  2608: 33 0a 06                 a3 = 0x6
  2611: 33 08                    a1 = 0
  2613: 82 19 60                 a2 = u64 [sp + 0x60]
  2616: 33 0c                    a5 = 0
  2618: 0a 12                    ecalli 18 // 'fetch'
  2620: 01                       fallthrough
      :                          @152
  2621: 7b 67 68 02              u64 [s1 + 0x268] = a0
  2625: 51 17 ff 1a 02           jump @176 if a0 == 4294967295
      :                          @153
  2630: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2634: 82 17 70                 a0 = u64 [sp + 0x70]
  2637: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2641: 95 18 68 33              a1 = sp + 0x3368
  2645: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2649: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2653: 82 17 58                 a0 = u64 [sp + 0x58]
  2656: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2660: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2665: 49 26 68 01              u64 [s1 + 360] = 0
  2669: 95 18 90 31              a1 = sp + 0x3190
  2673: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2677: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2682: 95 17 28 31              a0 = sp + 0x3128
  2686: 95 18 48 32              a1 = sp + 0x3248
  2690: 50 10 4c 56 30           ra = 76, jump @777
      :                          @154 [@dyn 38]
  2695: 95 17 00 31              a0 = sp + 0x3100
  2699: 82 76 30                 s1 = u64 [a0 + 0x30]
  2702: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2705: 82 77 28                 a0 = u64 [a0 + 0x28]
  2708: 7b 17 68                 u64 [sp + 0x68] = a0
  2711: 33 07 04                 a0 = 0x4
  2714: 33 08                    a1 = 0
  2716: 33 09                    a2 = 0
  2718: 64 6a                    a3 = s1
  2720: 33 00 4e                 ra = 0x4e
  2723: 0a 64                    ecalli 100 // 'log'
  2725: 01                       fallthrough
      :                          @155 [@dyn 39]
  2726: 82 1b 68                 a4 = u64 [sp + 0x68]
  2729: 82 17 78                 a0 = u64 [sp + 0x78]
  2732: c8 b7 07                 a0 = a0 + a4
  2735: 53 37 00 00 f0 1a        jump @160 if a0 <u 4293918720
      :                          @156
  2741: 82 57                    a0 = u64 [s0]
  2743: c9 75 08                 a1 = s0 - a0
  2746: ab 68 0f                 jump @160 if a1 != s1
      :                          @157
  2749: c9 b7 08                 a1 = a0 - a4
  2752: 01                       fallthrough
      :                          @158
  2753: 82 59                    a2 = u64 [s0]
  2755: ab 79 f2                 jump @156 if a2 != a0
      :                          @159
  2758: 7b 58                    u64 [s0] = a1
  2760: 01                       fallthrough
      :                          @160
  2761: 95 18 a8 20              a1 = sp + 0x20a8
  2765: 80 87 50                 a0 = u32 [a1 + 0x50]
  2768: 80 88 54                 a1 = u32 [a1 + 0x54]
  2771: 95 19 00 31              a2 = sp + 0x3100
  2775: 7b 97 10                 u64 [a2 + 0x10] = a0
  2778: 7b 98 18                 u64 [a2 + 0x18] = a1
  2781: 33 09 01                 a2 = 0x1
  2784: 0a 17                    ecalli 23 // 'zero'
  2786: 95 19 00 31              a2 = sp + 0x3100
  2790: 7b 97 48 02              u64 [a2 + 0x248] = a0
  2794: 95 17 10 31              a0 = sp + 0x3110
  2798: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2802: 82 17 70                 a0 = u64 [sp + 0x70]
  2805: 7b 97 50 01              u64 [a2 + 0x150] = a0
  2809: 95 18 18 31              a1 = sp + 0x3118
  2813: 7b 98 58 01              u64 [a2 + 0x158] = a1
  2817: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2821: 95 18 48 33              a1 = sp + 0x3348
  2825: 7b 98 68 01              u64 [a2 + 0x168] = a1
  2829: 7b 97 70 01              u64 [a2 + 0x170] = a0
  2833: 82 17 50                 a0 = u64 [sp + 0x50]
  2836: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2840: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  2845: 49 29 b0 00              u64 [a2 + 176] = 0
  2849: 95 17 48 32              a0 = sp + 0x3248
  2853: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2857: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  2862: 95 17 28 31              a0 = sp + 0x3128
  2866: 95 18 90 31              a1 = sp + 0x3190
  2870: 50 10 50 a2 2f           ra = 80, jump @777
      :                          @161 [@dyn 40]
  2875: 95 17 00 31              a0 = sp + 0x3100
  2879: 82 76 30                 s1 = u64 [a0 + 0x30]
  2882: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2885: 82 77 28                 a0 = u64 [a0 + 0x28]
  2888: 7b 17 68                 u64 [sp + 0x68] = a0
  2891: 33 07 04                 a0 = 0x4
  2894: 33 08                    a1 = 0
  2896: 33 09                    a2 = 0
  2898: 64 6a                    a3 = s1
  2900: 33 00 52                 ra = 0x52
  2903: 0a 64                    ecalli 100 // 'log'
  2905: 01                       fallthrough
      :                          @162 [@dyn 41]
  2906: 82 1b 68                 a4 = u64 [sp + 0x68]
  2909: 82 17 78                 a0 = u64 [sp + 0x78]
  2912: c8 b7 07                 a0 = a0 + a4
  2915: 53 37 00 00 f0 1a        jump @167 if a0 <u 4293918720
      :                          @163
  2921: 82 57                    a0 = u64 [s0]
  2923: c9 75 08                 a1 = s0 - a0
  2926: ab 68 0f                 jump @167 if a1 != s1
      :                          @164
  2929: c9 b7 08                 a1 = a0 - a4
  2932: 01                       fallthrough
      :                          @165
  2933: 82 59                    a2 = u64 [s0]
  2935: ab 79 f2                 jump @163 if a2 != a0
      :                          @166
  2938: 7b 58                    u64 [s0] = a1
  2940: 01                       fallthrough
      :                          @167
  2941: 95 1b 00 31              a4 = sp + 0x3100
  2945: 82 b9 18                 a2 = u64 [a4 + 0x18]
  2948: 82 b7 10                 a0 = u64 [a4 + 0x10]
  2951: 82 b8 08                 a1 = u64 [a4 + 0x8]
  2954: 95 1a f8 20              a3 = sp + 0x20f8
  2958: 7b ba 78 02              u64 [a4 + 0x278] = a3
  2962: 97 99 0c                 a2 = a2 << 0xc
  2965: 7b b9 88 02              u64 [a4 + 0x288] = a2
  2969: 33 0a 00 10              a3 = 0x1000
  2973: 0a 16                    ecalli 22 // 'poke'
  2975: 95 19 00 31              a2 = sp + 0x3100
  2979: 7b 97 08 01              u64 [a2 + 0x108] = a0
  2983: 95 17 10 31              a0 = sp + 0x3110
  2987: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2991: 82 17 70                 a0 = u64 [sp + 0x70]
  2994: 7b 97 50 01              u64 [a2 + 0x150] = a0
  2998: 95 18 78 33              a1 = sp + 0x3378
  3002: 7b 98 58 01              u64 [a2 + 0x158] = a1
  3006: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3010: 95 18 88 33              a1 = sp + 0x3388
  3014: 7b 98 68 01              u64 [a2 + 0x168] = a1
  3018: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3022: 82 18 48                 a1 = u64 [sp + 0x48]
  3025: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3029: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3033: 95 18 08 32              a1 = sp + 0x3208
  3037: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3041: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3045: 82 17 40                 a0 = u64 [sp + 0x40]
  3048: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3052: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3057: 49 29 b0 00              u64 [a2 + 176] = 0
  3061: 95 17 48 32              a0 = sp + 0x3248
  3065: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3069: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3074: 95 17 28 31              a0 = sp + 0x3128
  3078: 95 18 90 31              a1 = sp + 0x3190
  3082: 50 10 54 ce 2e           ra = 84, jump @777
      :                          @168 [@dyn 42]
  3087: 95 17 00 31              a0 = sp + 0x3100
  3091: 82 76 30                 s1 = u64 [a0 + 0x30]
  3094: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3097: 82 77 28                 a0 = u64 [a0 + 0x28]
  3100: 7b 17 68                 u64 [sp + 0x68] = a0
  3103: 33 07 04                 a0 = 0x4
  3106: 33 08                    a1 = 0
  3108: 33 09                    a2 = 0
  3110: 64 6a                    a3 = s1
  3112: 33 00 56                 ra = 0x56
  3115: 0a 64                    ecalli 100 // 'log'
  3117: 01                       fallthrough
      :                          @169 [@dyn 43]
  3118: 82 1b 68                 a4 = u64 [sp + 0x68]
  3121: 82 17 78                 a0 = u64 [sp + 0x78]
  3124: c8 b7 07                 a0 = a0 + a4
  3127: 53 37 00 00 f0 ea fd     jump @151 if a0 <u 4293918720
      :                          @170
  3134: 82 57                    a0 = u64 [s0]
  3136: c9 75 08                 a1 = s0 - a0
  3139: ab 68 de fd              jump @151 if a1 != s1
      :                          @171
  3143: c9 b7 08                 a1 = a0 - a4
  3146: 01                       fallthrough
      :                          @172
  3147: 82 59                    a2 = u64 [s0]
  3149: ab 79 f1                 jump @170 if a2 != a0
      :                          @173
  3152: 7b 58                    u64 [s0] = a1
  3154: 33 0a                    a3 = 0
  3156: 01                       fallthrough
      :                          @174
  3157: ab 79 e9                 jump @170 if a2 != a0
      :                          @175
  3160: 28 c9 fd                 jump @151
      :                          @176
  3163: 82 69 18                 a2 = u64 [s1 + 0x18]
  3166: 95 9a 01                 a3 = a2 + 0x1
  3169: 33 08 f0 ef 0f           a1 = 0xfeff0
  3174: 82 67 10                 a0 = u64 [s1 + 0x10]
  3177: db 9a 08                 a1 = a3 if a2 != 0
  3180: 7b 68 18                 u64 [s1 + 0x18] = a1
  3183: 33 09 01                 a2 = 0x1
  3186: 0a 17                    ecalli 23 // 'zero'
  3188: 7b 67 20                 u64 [s1 + 0x20] = a0
  3191: 95 17 10 31              a0 = sp + 0x3110
  3195: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3199: 33 07 16                 a0 = 0x16
  3202: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3206: 95 18 18 31              a1 = sp + 0x3118
  3210: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3214: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3218: 95 18 20 31              a1 = sp + 0x3120
  3222: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3226: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3230: 33 07 e8 02 01           a0 = 0x102e8
  3235: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3239: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3244: 49 26 b0 00              u64 [s1 + 176] = 0
  3248: 95 18 48 32              a1 = sp + 0x3248
  3252: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  3256: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3261: 95 17 28 31              a0 = sp + 0x3128
  3265: 95 18 90 31              a1 = sp + 0x3190
  3269: 50 10 58 13 2e           ra = 88, jump @777
      :                          @177 [@dyn 44]
  3274: 82 65 30                 s0 = u64 [s1 + 0x30]
  3277: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3280: 82 66 28                 s1 = u64 [s1 + 0x28]
  3283: 33 07 04                 a0 = 0x4
  3286: 33 08                    a1 = 0
  3288: 33 09                    a2 = 0
  3290: 64 5a                    a3 = s0
  3292: 33 00 5a                 ra = 0x5a
  3295: 0a 64                    ecalli 100 // 'log'
  3297: 01                       fallthrough
      :                          @178 [@dyn 45]
  3298: 82 17 78                 a0 = u64 [sp + 0x78]
  3301: c8 67 07                 a0 = a0 + s1
  3304: 53 37 00 00 f0 27        jump @184 if a0 <u 4293918720
      :                          @179
  3310: 33 07 40 00 03           a0 = 0x30040
  3315: 95 77 00 00 10           a0 = a0 + 0x100000
  3320: 01                       fallthrough
      :                          @180
  3321: 82 78                    a1 = u64 [a0]
  3323: c9 87 09                 a2 = a0 - a1
  3326: ab 59 11                 jump @184 if a2 != s0
      :                          @181
  3329: c9 68 09                 a2 = a1 - s1
  3332: 01                       fallthrough
      :                          @182
  3333: 82 7a                    a3 = u64 [a0]
  3335: ab 8a f2                 jump @180 if a3 != a1
      :                          @183
  3338: 7b 79                    u64 [a0] = a2
  3340: 33 0b                    a4 = 0
  3342: 01                       fallthrough
      :                          @184
  3343: 95 16 00 31              s1 = sp + 0x3100
  3347: 49 16 58                 u64 [s1 + 88] = 0
  3350: 49 16 50                 u64 [s1 + 80] = 0
  3353: 49 16 48                 u64 [s1 + 72] = 0
  3356: 49 16 40                 u64 [s1 + 64] = 0
  3359: 49 16 38                 u64 [s1 + 56] = 0
  3362: 49 16 70                 u64 [s1 + 112] = 0
  3365: 49 16 78                 u64 [s1 + 120] = 0
  3368: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3378: 7b 67 28                 u64 [s1 + 0x28] = a0
  3381: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3391: 7b 67 30                 u64 [s1 + 0x30] = a0
  3394: 82 67                    a0 = u64 [s1]
  3396: 49 26 80 00              u64 [s1 + 128] = 0
  3400: 49 26 88 00              u64 [s1 + 136] = 0
  3404: 49 16 68                 u64 [s1 + 104] = 0
  3407: 7b 67 60                 u64 [s1 + 0x60] = a0
  3410: 95 17 28 31              a0 = sp + 0x3128
  3414: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3418: 33 07 1a                 a0 = 0x1a
  3421: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3425: 33 07 38 03 01           a0 = 0x10338
  3430: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3434: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3439: 49 26 68 01              u64 [s1 + 360] = 0
  3443: 95 17 08 32              a0 = sp + 0x3208
  3447: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3451: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3456: 95 17 90 31              a0 = sp + 0x3190
  3460: 95 18 48 32              a1 = sp + 0x3248
  3464: 50 10 5c 50 2d           ra = 92, jump @777
      :                          @185 [@dyn 46]
  3469: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3473: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3477: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3481: 33 07 04                 a0 = 0x4
  3484: 33 08                    a1 = 0
  3486: 33 09                    a2 = 0
  3488: 64 5a                    a3 = s0
  3490: 33 00 5e                 ra = 0x5e
  3493: 0a 64                    ecalli 100 // 'log'
  3495: 01                       fallthrough
      :                          @186 [@dyn 47]
  3496: 82 17 78                 a0 = u64 [sp + 0x78]
  3499: c8 67 07                 a0 = a0 + s1
  3502: 53 37 00 00 f0 25        jump @192 if a0 <u 4293918720
      :                          @187
  3508: 33 07 40 00 03           a0 = 0x30040
  3513: 95 77 00 00 10           a0 = a0 + 0x100000
  3518: 01                       fallthrough
      :                          @188
  3519: 82 78                    a1 = u64 [a0]
  3521: c9 87 09                 a2 = a0 - a1
  3524: ab 59 0f                 jump @192 if a2 != s0
      :                          @189
  3527: c9 68 09                 a2 = a1 - s1
  3530: 01                       fallthrough
      :                          @190
  3531: 82 7a                    a3 = u64 [a0]
  3533: ab 8a f2                 jump @188 if a3 != a1
      :                          @191
  3536: 7b 79                    u64 [a0] = a2
  3538: 01                       fallthrough
      :                          @192
  3539: 95 13 00 31              t1 = sp + 0x3100
  3543: 82 32 28                 t0 = u64 [t1 + 0x28]
  3546: 82 39 30                 a2 = u64 [t1 + 0x30]
  3549: 82 34 38                 t2 = u64 [t1 + 0x38]
  3552: 82 30 40                 ra = u64 [t1 + 0x40]
  3555: 82 3b 48                 a4 = u64 [t1 + 0x48]
  3558: 82 3c 50                 a5 = u64 [t1 + 0x50]
  3561: 82 36 58                 s1 = u64 [t1 + 0x58]
  3564: 82 35 60                 s0 = u64 [t1 + 0x60]
  3567: 49 23 90 00 00 00 01     u64 [t1 + 144] = 0x10000
  3574: 82 37 68                 a0 = u64 [t1 + 0x68]
  3577: 7b 32 98 00              u64 [t1 + 0x98] = t0
  3581: 82 38 70                 a1 = u64 [t1 + 0x70]
  3584: 7b 39 a0 00              u64 [t1 + 0xa0] = a2
  3588: 82 39 78                 a2 = u64 [t1 + 0x78]
  3591: 7b 34 a8 00              u64 [t1 + 0xa8] = t2
  3595: 82 3a 80 00              a3 = u64 [t1 + 0x80]
  3599: 7b 30 b0 00              u64 [t1 + 0xb0] = ra
  3603: 82 32 88 00              t0 = u64 [t1 + 0x88]
  3607: 7b 3b b8 00              u64 [t1 + 0xb8] = a4
  3611: 7b 3c c0 00              u64 [t1 + 0xc0] = a5
  3615: 7b 36 c8 00              u64 [t1 + 0xc8] = s1
  3619: 7b 35 d0 00              u64 [t1 + 0xd0] = s0
  3623: 95 15 00 31              s0 = sp + 0x3100
  3627: 7b 57 d8 00              u64 [s0 + 0xd8] = a0
  3631: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
  3635: 7b 59 e8 00              u64 [s0 + 0xe8] = a2
  3639: 7b 5a f0 00              u64 [s0 + 0xf0] = a3
  3643: 7b 52 f8 00              u64 [s0 + 0xf8] = t0
  3647: 33 07 16                 a0 = 0x16
  3650: 7b 17 60                 u64 [sp + 0x60] = a0
  3653: 33 07 68 03 01           a0 = 0x10368
  3658: 7b 17 58                 u64 [sp + 0x58] = a0
  3661: 33 06 40 00 03           s1 = 0x30040
  3666: 95 66 00 00 10           s1 = s1 + 0x100000
  3671: 01                       fallthrough
      :                          @193
  3672: 95 17 a8 20              a0 = sp + 0x20a8
  3676: 82 77 48                 a0 = u64 [a0 + 0x48]
  3679: 95 18 90 31              a1 = sp + 0x3190
  3683: 0a 19                    ecalli 25 // 'invoke'
  3685: 7b 18 68                 u64 [sp + 0x68] = a1
  3688: 7b 57 00 01              u64 [s0 + 0x100] = a0
  3692: 95 17 f0 20              a0 = sp + 0x20f0
  3696: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3700: 82 17 60                 a0 = u64 [sp + 0x60]
  3703: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3707: 95 18 00 32              a1 = sp + 0x3200
  3711: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3715: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3719: 95 18 e8 20              a1 = sp + 0x20e8
  3723: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3727: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3731: 82 17 58                 a0 = u64 [sp + 0x58]
  3734: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3738: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  3743: 49 25 28 01              u64 [s0 + 296] = 0
  3747: 95 17 48 32              a0 = sp + 0x3248
  3751: 7b 57 18 01              u64 [s0 + 0x118] = a0
  3755: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  3760: 95 17 88 33              a0 = sp + 0x3388
  3764: 95 18 08 32              a1 = sp + 0x3208
  3768: 50 10 60 20 2c           ra = 96, jump @777
      :                          @194 [@dyn 48]
  3773: 95 17 00 31              a0 = sp + 0x3100
  3777: 82 75 90 02              s0 = u64 [a0 + 0x290]
  3781: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  3785: 82 77 88 02              a0 = u64 [a0 + 0x288]
  3789: 7b 17 70                 u64 [sp + 0x70] = a0
  3792: 33 07 04                 a0 = 0x4
  3795: 33 08                    a1 = 0
  3797: 33 09                    a2 = 0
  3799: 64 5a                    a3 = s0
  3801: 33 00 62                 ra = 0x62
  3804: 0a 64                    ecalli 100 // 'log'
  3806: 01                       fallthrough
      :                          @195 [@dyn 49]
  3807: 82 1b 70                 a4 = u64 [sp + 0x70]
  3810: 82 17 78                 a0 = u64 [sp + 0x78]
  3813: c8 b7 07                 a0 = a0 + a4
  3816: 53 37 00 00 f0 1a        jump @200 if a0 <u 4293918720
      :                          @196
  3822: 82 67                    a0 = u64 [s1]
  3824: c9 76 08                 a1 = s1 - a0
  3827: ab 58 0f                 jump @200 if a1 != s0
      :                          @197
  3830: c9 b7 08                 a1 = a0 - a4
  3833: 01                       fallthrough
      :                          @198
  3834: 82 69                    a2 = u64 [s1]
  3836: ab 79 f2                 jump @196 if a2 != a0
      :                          @199
  3839: 7b 68                    u64 [s1] = a1
  3841: 01                       fallthrough
      :                          @200
  3842: 95 15 00 31              s0 = sp + 0x3100
  3846: 82 57 00 01              a0 = u64 [s0 + 0x100]
  3850: 51 07 b1 00              jump @205 if a0 == 0
      :                          @201
  3854: 85 77 03                 a0 = a0 ^ 0x3
  3857: 82 18 68                 a1 = u64 [sp + 0x68]
  3860: 85 88 64                 a1 = a1 ^ 0x64
  3863: d4 87 07                 a0 = a0 | a1
  3866: 52 07 3e ff              jump @193 if a0 != 0
      :                          @202
  3870: 95 17 28 31              a0 = sp + 0x3128
  3874: 33 09 68                 a2 = 0x68
  3877: 95 18 98 31              a1 = sp + 0x3198
  3881: 50 10 64 2a 2e           ra = 100, jump @826
      :                          @203 [@dyn 50]
  3886: 82 57 60                 a0 = u64 [s0 + 0x60]
  3889: 7b 17 68                 u64 [sp + 0x68] = a0
  3892: 82 57 68                 a0 = u64 [s0 + 0x68]
  3895: 7b 17 48                 u64 [sp + 0x48] = a0
  3898: 82 57 70                 a0 = u64 [s0 + 0x70]
  3901: 7b 17 70                 u64 [sp + 0x70] = a0
  3904: 82 57 78                 a0 = u64 [s0 + 0x78]
  3907: 7b 17 50                 u64 [sp + 0x50] = a0
  3910: 95 17 00 31              a0 = sp + 0x3100
  3914: 82 75 80 00              s0 = u64 [a0 + 0x80]
  3918: 49 27 40 01              u64 [a0 + 320] = 0
  3922: 49 27 38 01              u64 [a0 + 312] = 0
  3926: 49 27 30 01              u64 [a0 + 304] = 0
  3930: 49 27 28 01              u64 [a0 + 296] = 0
  3934: 49 27 20 01              u64 [a0 + 288] = 0
  3938: 49 27 18 01              u64 [a0 + 280] = 0
  3942: 49 27 10 01              u64 [a0 + 272] = 0
  3946: 49 27 08 01              u64 [a0 + 264] = 0
  3950: 95 17 48 32              a0 = sp + 0x3248
  3954: 33 09 00 01              a2 = 0x100
  3958: 33 08                    a1 = 0
  3960: 50 10 66 8d 2e           ra = 102, jump @844
      :                          @204 [@dyn 51]
  3965: 95 17 a8 20              a0 = sp + 0x20a8
  3969: 82 77 48                 a0 = u64 [a0 + 0x48]
  3972: 95 18 08 32              a1 = sp + 0x3208
  3976: 82 19 48                 a2 = u64 [sp + 0x48]
  3979: 82 1a 70                 a3 = u64 [sp + 0x70]
  3982: 0a 15                    ecalli 21 // 'peek'
  3984: 95 17 a8 20              a0 = sp + 0x20a8
  3988: 82 77 48                 a0 = u64 [a0 + 0x48]
  3991: 95 18 48 32              a1 = sp + 0x3248
  3995: 82 19 50                 a2 = u64 [sp + 0x50]
  3998: 64 5a                    a3 = s0
  4000: 0a 15                    ecalli 21 // 'peek'
  4002: 95 18 08 32              a1 = sp + 0x3208
  4006: 95 1a 48 32              a3 = sp + 0x3248
  4010: 82 17 68                 a0 = u64 [sp + 0x68]
  4013: 82 19 70                 a2 = u64 [sp + 0x70]
  4016: 64 5b                    a4 = s0
  4018: 95 15 00 31              s0 = sp + 0x3100
  4022: 0a 64                    ecalli 100 // 'log'
  4024: 28 a0 fe                 jump @193
      :                          @205
  4027: 0a                       ecalli 0 // 'gas'
  4028: 95 18 a8 20              a1 = sp + 0x20a8
  4032: 7b 87 40                 u64 [a1 + 0x40] = a0
  4035: 95 17 e8 20              a0 = sp + 0x20e8
  4039: 7b 57 88 02              u64 [s0 + 0x288] = a0
  4043: 33 07 16                 a0 = 0x16
  4046: 7b 57 90 02              u64 [s0 + 0x290] = a0
  4050: 33 07 90 01 01           a0 = 0x10190
  4055: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4059: 49 25 50 01 01           u64 [s0 + 336] = 0x1
  4064: 49 25 68 01              u64 [s0 + 360] = 0
  4068: 95 18 88 33              a1 = sp + 0x3388
  4072: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4076: 49 25 60 01 01           u64 [s0 + 352] = 0x1
  4081: 95 17 08 32              a0 = sp + 0x3208
  4085: 95 18 48 32              a1 = sp + 0x3248
  4089: 50 10 68 df 2a           ra = 104, jump @777
      :                          @206 [@dyn 52]
  4094: 95 17 00 31              a0 = sp + 0x3100
  4098: 82 75 10 01              s0 = u64 [a0 + 0x110]
  4102: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  4106: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4110: 33 07 04                 a0 = 0x4
  4113: 33 08                    a1 = 0
  4115: 33 09                    a2 = 0
  4117: 64 5a                    a3 = s0
  4119: 33 00 6a                 ra = 0x6a
  4122: 0a 64                    ecalli 100 // 'log'
  4124: 01                       fallthrough
      :                          @207 [@dyn 53]
  4125: 82 17 78                 a0 = u64 [sp + 0x78]
  4128: c8 67 07                 a0 = a0 + s1
  4131: 53 37 00 00 f0 27        jump @213 if a0 <u 4293918720
      :                          @208
  4137: 33 07 40 00 03           a0 = 0x30040
  4142: 95 77 00 00 10           a0 = a0 + 0x100000
  4147: 01                       fallthrough
      :                          @209
  4148: 82 78                    a1 = u64 [a0]
  4150: c9 87 09                 a2 = a0 - a1
  4153: ab 59 11                 jump @213 if a2 != s0
      :                          @210
  4156: c9 68 09                 a2 = a1 - s1
  4159: 01                       fallthrough
      :                          @211
  4160: 82 7a                    a3 = u64 [a0]
  4162: ab 8a f2                 jump @209 if a3 != a1
      :                          @212
  4165: 7b 79                    u64 [a0] = a2
  4167: 33 0b                    a4 = 0
  4169: 01                       fallthrough
      :                          @213
  4170: 95 1a a8 20              a3 = sp + 0x20a8
  4174: 82 a7 48                 a0 = u64 [a3 + 0x48]
  4177: 95 15 00 31              s0 = sp + 0x3100
  4181: 82 58                    a1 = u64 [s0]
  4183: 48 25 50 02              u32 [s0 + 592] = 0
  4187: 7a 57 54 02              u32 [s0 + 0x254] = a0
  4191: 49 25 48 02              u64 [s0 + 584] = 0
  4195: 7b 18 58                 u64 [sp + 0x58] = a1
  4198: 51 18 ff 21 03           jump @243 if a1 == 4294967295
      :                          @214
  4203: 33 08                    a1 = 0
  4205: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4215: 7b 19 50                 u64 [sp + 0x50] = a2
  4218: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4228: 7b 17 48                 u64 [sp + 0x48] = a0
  4231: 33 07 16                 a0 = 0x16
  4234: 7b 17 68                 u64 [sp + 0x68] = a0
  4237: 33 07 28 00 01           a0 = 0x10028
  4242: 7b 17 40                 u64 [sp + 0x40] = a0
  4245: 33 07 88 04 01           a0 = 0x10488
  4250: 7b 17 38                 u64 [sp + 0x38] = a0
  4253: 49 11 30 f0 ef 0f        u64 [sp + 48] = 0xfeff0
  4259: 33 07 02                 a0 = 0x2
  4262: 7b 17 28                 u64 [sp + 0x28] = a0
  4265: 33 07 12                 a0 = 0x12
  4268: 7b 17 20                 u64 [sp + 0x20] = a0
  4271: 33 07 08 05 01           a0 = 0x10508
  4276: 7b 17 18                 u64 [sp + 0x18] = a0
  4279: 33 06 40 00 03           s1 = 0x30040
  4284: 95 66 00 00 10           s1 = s1 + 0x100000
  4289: 33 07 0e                 a0 = 0xe
  4292: 7b 17 10                 u64 [sp + 0x10] = a0
  4295: 33 07 48 05 01           a0 = 0x10548
  4300: 7b 17 08                 u64 [sp + 0x8] = a0
  4303: 28 17                    jump @216
      :                          @215
  4305: 82 19 70                 a2 = u64 [sp + 0x70]
  4308: 95 98 01                 a1 = a2 + 0x1
  4311: 95 15 00 31              s0 = sp + 0x3100
  4315: 95 1a a8 20              a3 = sp + 0x20a8
  4319: 82 17 58                 a0 = u64 [sp + 0x58]
  4322: aa 79 a5 02              jump @243 if a2 == a0
      :                          @216
  4326: 7b 58 58 02              u64 [s0 + 0x258] = a1
  4330: 7b 18 70                 u64 [sp + 0x70] = a1
  4333: 97 89 0c                 a2 = a1 << 0xc
  4336: 82 a7 48                 a0 = u64 [a3 + 0x48]
  4339: 82 58 08                 a1 = u64 [s0 + 0x8]
  4342: 82 1a 50                 a3 = u64 [sp + 0x50]
  4345: c8 a9 09                 a2 = a2 + a3
  4348: 82 1a 48                 a3 = u64 [sp + 0x48]
  4351: d2 a9 09                 a2 = a2 & a3
  4354: 7b 59 60 02              u64 [s0 + 0x260] = a2
  4358: 33 0a 00 10              a3 = 0x1000
  4362: 0a 15                    ecalli 21 // 'peek'
  4364: 7b 57 68 02              u64 [s0 + 0x268] = a0
  4368: 95 17 f0 20              a0 = sp + 0x20f0
  4372: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4376: 82 17 68                 a0 = u64 [sp + 0x68]
  4379: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4383: 95 18 08 31              a1 = sp + 0x3108
  4387: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4391: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4395: 95 18 60 33              a1 = sp + 0x3360
  4399: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4403: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4407: 82 18 40                 a1 = u64 [sp + 0x40]
  4410: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4414: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4418: 95 18 68 33              a1 = sp + 0x3368
  4422: 7b 58 88 01              u64 [s0 + 0x188] = a1
  4426: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4430: 82 17 38                 a0 = u64 [sp + 0x38]
  4433: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4437: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4442: 49 25 28 01              u64 [s0 + 296] = 0
  4446: 95 18 48 32              a1 = sp + 0x3248
  4450: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4454: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4459: 95 17 88 33              a0 = sp + 0x3388
  4463: 95 18 08 32              a1 = sp + 0x3208
  4467: 50 10 6c 65 29           ra = 108, jump @777
      :                          @217 [@dyn 54]
  4472: 95 17 00 31              a0 = sp + 0x3100
  4476: 82 75 90 02              s0 = u64 [a0 + 0x290]
  4480: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  4484: 82 77 88 02              a0 = u64 [a0 + 0x288]
  4488: 7b 17 60                 u64 [sp + 0x60] = a0
  4491: 33 07 03                 a0 = 0x3
  4494: 33 08                    a1 = 0
  4496: 33 09                    a2 = 0
  4498: 64 5a                    a3 = s0
  4500: 33 00 6e                 ra = 0x6e
  4503: 0a 64                    ecalli 100 // 'log'
  4505: 01                       fallthrough
      :                          @218 [@dyn 55]
  4506: 82 1b 60                 a4 = u64 [sp + 0x60]
  4509: 82 17 78                 a0 = u64 [sp + 0x78]
  4512: c8 b7 07                 a0 = a0 + a4
  4515: 53 37 00 00 f0 1a        jump @223 if a0 <u 4293918720
      :                          @219
  4521: 82 67                    a0 = u64 [s1]
  4523: c9 76 08                 a1 = s1 - a0
  4526: ab 58 0f                 jump @223 if a1 != s0
      :                          @220
  4529: c9 b7 08                 a1 = a0 - a4
  4532: 01                       fallthrough
      :                          @221
  4533: 82 69                    a2 = u64 [s1]
  4535: ab 79 f2                 jump @219 if a2 != a0
      :                          @222
  4538: 7b 68                    u64 [s1] = a1
  4540: 01                       fallthrough
      :                          @223
  4541: 95 1a 00 31              a3 = sp + 0x3100
  4545: 81 a7 54 02              a0 = i32 [a3 + 0x254]
  4549: 81 a8 58 02              a1 = i32 [a3 + 0x258]
  4553: 95 19 a8 20              a2 = sp + 0x20a8
  4557: 7a 97 50                 u32 [a2 + 0x50] = a0
  4560: 82 17 30                 a0 = u64 [sp + 0x30]
  4563: be 87 07                 i32 a0 = a0 + a1
  4566: 7a a7 74 02              u32 [a3 + 0x274] = a0
  4570: 7a 97 54                 u32 [a2 + 0x54] = a0
  4573: 95 17 f8 20              a0 = sp + 0x20f8
  4577: 7b a7 78 02              u64 [a3 + 0x278] = a0
  4581: 49 2a 80 02 08           u64 [a3 + 640] = 0x8
  4586: 95 17 78 33              a0 = sp + 0x3378
  4590: 7b a7 48 01              u64 [a3 + 0x148] = a0
  4594: 82 17 28                 a0 = u64 [sp + 0x28]
  4597: 7b a7 50 01              u64 [a3 + 0x150] = a0
  4601: 95 17 54 33              a0 = sp + 0x3354
  4605: 7b a7 58 01              u64 [a3 + 0x158] = a0
  4609: 82 17 20                 a0 = u64 [sp + 0x20]
  4612: 7b a7 60 01              u64 [a3 + 0x160] = a0
  4616: 95 18 74 33              a1 = sp + 0x3374
  4620: 7b a8 68 01              u64 [a3 + 0x168] = a1
  4624: 7b a7 70 01              u64 [a3 + 0x170] = a0
  4628: 82 17 18                 a0 = u64 [sp + 0x18]
  4631: 7b a7 08 01              u64 [a3 + 0x108] = a0
  4635: 49 2a 10 01 03           u64 [a3 + 272] = 0x3
  4640: 49 2a 28 01              u64 [a3 + 296] = 0
  4644: 95 17 48 32              a0 = sp + 0x3248
  4648: 7b a7 18 01              u64 [a3 + 0x118] = a0
  4652: 49 2a 20 01 03           u64 [a3 + 288] = 0x3
  4657: 95 17 88 33              a0 = sp + 0x3388
  4661: 95 18 08 32              a1 = sp + 0x3208
  4665: 50 10 70 9f 28           ra = 112, jump @777
      :                          @224 [@dyn 56]
  4670: 95 17 00 31              a0 = sp + 0x3100
  4674: 82 75 90 02              s0 = u64 [a0 + 0x290]
  4678: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  4682: 82 77 88 02              a0 = u64 [a0 + 0x288]
  4686: 7b 17 60                 u64 [sp + 0x60] = a0
  4689: 33 07 04                 a0 = 0x4
  4692: 33 08                    a1 = 0
  4694: 33 09                    a2 = 0
  4696: 64 5a                    a3 = s0
  4698: 33 00 72                 ra = 0x72
  4701: 0a 64                    ecalli 100 // 'log'
  4703: 01                       fallthrough
      :                          @225 [@dyn 57]
  4704: 82 1b 60                 a4 = u64 [sp + 0x60]
  4707: 82 17 78                 a0 = u64 [sp + 0x78]
  4710: c8 b7 07                 a0 = a0 + a4
  4713: 53 37 00 00 f0 1a        jump @230 if a0 <u 4293918720
      :                          @226
  4719: 82 67                    a0 = u64 [s1]
  4721: c9 76 08                 a1 = s1 - a0
  4724: ab 58 0f                 jump @230 if a1 != s0
      :                          @227
  4727: c9 b7 08                 a1 = a0 - a4
  4730: 01                       fallthrough
      :                          @228
  4731: 82 69                    a2 = u64 [s1]
  4733: ab 79 f2                 jump @226 if a2 != a0
      :                          @229
  4736: 7b 68                    u64 [s1] = a1
  4738: 01                       fallthrough
      :                          @230
  4739: 95 15 00 31              s0 = sp + 0x3100
  4743: 82 57 58 02              a0 = u64 [s0 + 0x258]
  4747: 82 58                    a1 = u64 [s0]
  4749: ab 87 19                 jump @232 if a0 != a1
      :                          @231
  4752: 82 17 70                 a0 = u64 [sp + 0x70]
  4755: 7a 57 48 02              u32 [s0 + 0x248] = a0
  4759: 95 18 4c 33              a1 = sp + 0x334c
  4763: 95 1a a8 20              a3 = sp + 0x20a8
  4767: 81 a7 58                 a0 = i32 [a3 + 0x58]
  4770: 7a 87                    u32 [a1] = a0
  4772: 28 16                    jump @234
      :                          @232
  4774: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  4777: 95 18 50 33              a1 = sp + 0x3350
  4781: 95 1a a8 20              a3 = sp + 0x20a8
  4785: ab 97 09                 jump @234 if a0 != a2
      :                          @233
  4788: 81 a7 58                 a0 = i32 [a3 + 0x58]
  4791: 7a 87                    u32 [a1] = a0
  4793: 01                       fallthrough
      :                          @234
  4794: 33 08 08 10              a1 = 0x1008
  4798: 95 17 f8 20              a0 = sp + 0x20f8
  4802: 0a 13                    ecalli 19 // 'export'
  4804: 7b 57 78 02              u64 [s0 + 0x278] = a0
  4808: 0a                       ecalli 0 // 'gas'
  4809: 95 18 a8 20              a1 = sp + 0x20a8
  4813: 7b 87 40                 u64 [a1 + 0x40] = a0
  4816: 95 18 58 33              a1 = sp + 0x3358
  4820: 7b 58 48 01              u64 [s0 + 0x148] = a1
  4824: 82 17 68                 a0 = u64 [sp + 0x68]
  4827: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4831: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4835: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4839: 95 18 78 33              a1 = sp + 0x3378
  4843: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4847: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4851: 95 18 e8 20              a1 = sp + 0x20e8
  4855: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4859: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4863: 95 17 48 33              a0 = sp + 0x3348
  4867: 7b 57 88 01              u64 [s0 + 0x188] = a0
  4871: 82 17 10                 a0 = u64 [sp + 0x10]
  4874: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4878: 82 17 08                 a0 = u64 [sp + 0x8]
  4881: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4885: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4890: 49 25 28 01              u64 [s0 + 296] = 0
  4894: 95 18 48 32              a1 = sp + 0x3248
  4898: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4902: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4907: 95 17 88 33              a0 = sp + 0x3388
  4911: 95 18 08 32              a1 = sp + 0x3208
  4915: 50 10 74 a5 27           ra = 116, jump @777
      :                          @235 [@dyn 58]
  4920: 95 17 00 31              a0 = sp + 0x3100
  4924: 82 75 90 02              s0 = u64 [a0 + 0x290]
  4928: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  4932: 82 77 88 02              a0 = u64 [a0 + 0x288]
  4936: 7b 17 60                 u64 [sp + 0x60] = a0
  4939: 33 07 04                 a0 = 0x4
  4942: 33 08                    a1 = 0
  4944: 33 09                    a2 = 0
  4946: 64 5a                    a3 = s0
  4948: 33 00 76                 ra = 0x76
  4951: 0a 64                    ecalli 100 // 'log'
  4953: 01                       fallthrough
      :                          @236 [@dyn 59]
  4954: 82 1b 60                 a4 = u64 [sp + 0x60]
  4957: 82 17 78                 a0 = u64 [sp + 0x78]
  4960: c8 b7 07                 a0 = a0 + a4
  4963: 53 37 00 00 f0 6e fd     jump @215 if a0 <u 4293918720
      :                          @237
  4970: 82 67                    a0 = u64 [s1]
  4972: c9 76 08                 a1 = s1 - a0
  4975: ab 58 62 fd              jump @215 if a1 != s0
      :                          @238
  4979: c9 b7 08                 a1 = a0 - a4
  4982: 01                       fallthrough
      :                          @239
  4983: 82 69                    a2 = u64 [s1]
  4985: ab 79 f1                 jump @237 if a2 != a0
      :                          @240
  4988: 7b 68                    u64 [s1] = a1
  4990: 33 0a                    a3 = 0
  4992: 01                       fallthrough
      :                          @241
  4993: ab 79 e9                 jump @237 if a2 != a0
      :                          @242
  4996: 28 4d fd                 jump @215
      :                          @243
  4999: 95 17 4c 33              a0 = sp + 0x334c
  5003: 95 18 50 33              a1 = sp + 0x3350
  5007: 95 19 48 33              a2 = sp + 0x3348
  5011: 7b 59 48 01              u64 [s0 + 0x148] = a2
  5015: 33 09 0e                 a2 = 0xe
  5018: 7b 59 50 01              u64 [s0 + 0x150] = a2
  5022: 7b 57 58 01              u64 [s0 + 0x158] = a0
  5026: 7b 59 60 01              u64 [s0 + 0x160] = a2
  5030: 7b 58 68 01              u64 [s0 + 0x168] = a1
  5034: 7b 59 70 01              u64 [s0 + 0x170] = a2
  5038: 33 07 a8 03 01           a0 = 0x103a8
  5043: 7b 57 08 01              u64 [s0 + 0x108] = a0
  5047: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  5052: 49 25 28 01              u64 [s0 + 296] = 0
  5056: 95 18 48 32              a1 = sp + 0x3248
  5060: 7b 58 18 01              u64 [s0 + 0x118] = a1
  5064: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  5069: 95 17 88 33              a0 = sp + 0x3388
  5073: 95 18 08 32              a1 = sp + 0x3208
  5077: 50 10 78 03 27           ra = 120, jump @777
      :                          @244 [@dyn 60]
  5082: 95 17 00 31              a0 = sp + 0x3100
  5086: 82 75 90 02              s0 = u64 [a0 + 0x290]
  5090: 82 7b 98 02              a4 = u64 [a0 + 0x298]
  5094: 82 76 88 02              s1 = u64 [a0 + 0x288]
  5098: 33 07 03                 a0 = 0x3
  5101: 33 08                    a1 = 0
  5103: 33 09                    a2 = 0
  5105: 64 5a                    a3 = s0
  5107: 33 00 7a                 ra = 0x7a
  5110: 0a 64                    ecalli 100 // 'log'
  5112: 01                       fallthrough
      :                          @245 [@dyn 61]
  5113: 82 17 78                 a0 = u64 [sp + 0x78]
  5116: c8 67 07                 a0 = a0 + s1
  5119: 53 37 00 00 f0 25        jump @251 if a0 <u 4293918720
      :                          @246
  5125: 33 07 40 00 03           a0 = 0x30040
  5130: 95 77 00 00 10           a0 = a0 + 0x100000
  5135: 01                       fallthrough
      :                          @247
  5136: 82 78                    a1 = u64 [a0]
  5138: c9 87 09                 a2 = a0 - a1
  5141: ab 59 0f                 jump @251 if a2 != s0
      :                          @248
  5144: c9 68 09                 a2 = a1 - s1
  5147: 01                       fallthrough
      :                          @249
  5148: 82 7a                    a3 = u64 [a0]
  5150: ab 8a f2                 jump @247 if a3 != a1
      :                          @250
  5153: 7b 79                    u64 [a0] = a2
  5155: 01                       fallthrough
      :                          @251
  5156: 95 15 a8 20              s0 = sp + 0x20a8
  5160: 82 57 48                 a0 = u64 [s0 + 0x48]
  5163: 0a 1a                    ecalli 26 // 'expunge'
  5165: 95 16 00 31              s1 = sp + 0x3100
  5169: 7b 67 78 02              u64 [s1 + 0x278] = a0
  5173: 0a                       ecalli 0 // 'gas'
  5174: 7b 57 40                 u64 [s0 + 0x40] = a0
  5177: 95 17 f0 20              a0 = sp + 0x20f0
  5181: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5185: 95 17 78 33              a0 = sp + 0x3378
  5189: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5193: 95 17 e8 20              a0 = sp + 0x20e8
  5197: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5201: 33 07 16                 a0 = 0x16
  5204: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5208: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5212: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5216: 33 07 f8 03 01           a0 = 0x103f8
  5221: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5225: 95 17 48 32              a0 = sp + 0x3248
  5229: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5233: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5238: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5243: 49 26 28 01              u64 [s1 + 296] = 0
  5247: 95 17 88 33              a0 = sp + 0x3388
  5251: 95 18 08 32              a1 = sp + 0x3208
  5255: 50 10 7c 51 26           ra = 124, jump @777
      :                          @252 [@dyn 62]
  5260: 82 65 90 02              s0 = u64 [s1 + 0x290]
  5264: 82 6b 98 02              a4 = u64 [s1 + 0x298]
  5268: 82 66 88 02              s1 = u64 [s1 + 0x288]
  5272: 33 07 04                 a0 = 0x4
  5275: 33 08                    a1 = 0
  5277: 33 09                    a2 = 0
  5279: 64 5a                    a3 = s0
  5281: 33 00 7e                 ra = 0x7e
  5284: 0a 64                    ecalli 100 // 'log'
  5286: 01                       fallthrough
      :                          @253 [@dyn 63]
  5287: 82 17 78                 a0 = u64 [sp + 0x78]
  5290: c8 67 07                 a0 = a0 + s1
  5293: 53 37 00 00 f0 30        jump @259 if a0 <u 4293918720
      :                          @254
  5299: 33 07 40 00 03           a0 = 0x30040
  5304: 95 77 00 00 10           a0 = a0 + 0x100000
  5309: 01                       fallthrough
      :                          @255
  5310: 82 78                    a1 = u64 [a0]
  5312: c9 87 09                 a2 = a0 - a1
  5315: ab 59 1a                 jump @259 if a2 != s0
      :                          @256
  5318: c9 68 09                 a2 = a1 - s1
  5321: 01                       fallthrough
      :                          @257
  5322: 82 7a                    a3 = u64 [a0]
  5324: ab 8a f2                 jump @255 if a3 != a1
      :                          @258
  5327: 7b 79                    u64 [a0] = a2
  5329: 33 0b                    a4 = 0
  5331: 95 1a 48 33              a3 = sp + 0x3348
  5335: 33 08 0c                 a1 = 0xc
  5338: 28 c5 f0                 jump @98
      :                          @259
  5341: 95 1a 48 33              a3 = sp + 0x3348
  5345: 33 08 0c                 a1 = 0xc
  5348: 28 bb f0                 jump @98
      :                          @260
  5351: 00                       trap
      :                          @261 [export #1: 'accumulate']
  5352: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5356: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5360: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5364: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5368: 95 11 b8 fb              sp = sp + 0xfffffffffffffbb8
  5372: 33 09 08                 a2 = 0x8
  5375: ac 98 19 02              jump @325 if a1 <u a2
      :                          @262
  5379: 52 07 06                 jump @264 if a0 != 0
      :                          @263
  5382: 28 eb 22                 jump @707
      :                          @264
  5385: 95 79 04                 a2 = a0 + 0x4
  5388: 52 09 06                 jump @266 if a2 != 0
      :                          @265
  5391: 28 e2 22                 jump @707
      :                          @266
  5394: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5397: 7b 19 28                 u64 [sp + 0x28] = a2
  5400: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5403: 7b 19 18                 u64 [sp + 0x18] = a2
  5406: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5409: 7b 19 20                 u64 [sp + 0x20] = a2
  5412: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5415: 7b 19 30                 u64 [sp + 0x30] = a2
  5418: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5421: 95 75 08                 s0 = a0 + 0x8
  5424: 51 0a 45                 jump @276 if a3 == 0
      :                          @267
  5427: 7d 58                    a1 = i8 [s0]
  5429: 33 06 01                 s1 = 0x1
  5432: 59 08 40                 jump @277 if a1 >=s 0
      :                          @268
  5435: 84 89 ff 00              a2 = a1 & 0xff
  5439: 33 06 02                 s1 = 0x2
  5442: 53 29 c0 00 2d           jump @274 if a2 <u 192
      :                          @269
  5447: 33 06 03                 s1 = 0x3
  5450: 53 29 e0 00 25           jump @274 if a2 <u 224
      :                          @270
  5455: 33 06 04                 s1 = 0x4
  5458: 53 29 f0 00 1d           jump @274 if a2 <u 240
      :                          @271
  5463: 33 06 05                 s1 = 0x5
  5466: 53 29 f8 00 15           jump @274 if a2 <u 248
      :                          @272
  5471: 33 06 06                 s1 = 0x6
  5474: 53 29 fc 00 0d           jump @274 if a2 <u 252
      :                          @273
  5479: 88 98 fe 00              a1 = a2 <u 0xfe
  5483: 9a 86 08                 s1 = 0x8 - a1
  5486: 01                       fallthrough
      :                          @274
  5487: ae 6a 09                 jump @277 if a3 >=u s1
      :                          @275
  5490: 28 a6 01                 jump @325
      :                          @276
  5493: 33 06                    s1 = 0
  5495: 01                       fallthrough
      :                          @277
  5496: 7b 16 38                 u64 [sp + 0x38] = s1
  5499: 64 57                    a0 = s0
  5501: 64 68                    a1 = s1
  5503: 64 a6                    s1 = a3
  5505: 50 20 80 00 2d 32        ra = 128, jump @1030
      :                          @278 [@dyn 64]
  5511: 82 1a 38                 a3 = u64 [sp + 0x38]
  5514: 51 07 8e 01              jump @325 if a0 == 0
      :                          @279
  5518: e4 a6 07                 a0 = maxu(s1, a3)
  5521: c9 a7 07                 a0 = a0 - a3
  5524: 53 17 60 84 01           jump @325 if a0 <u 96
      :                          @280
  5529: c8 5a 08                 a1 = a3 + s0
  5532: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5535: 95 87 60                 a0 = a1 + 0x60
  5538: 7b 17 38                 u64 [sp + 0x38] = a0
  5541: 51 06 4f                 jump @292 if s1 == 0
      :                          @281
  5544: 7d 78                    a1 = i8 [a0]
  5546: 33 05 01                 s0 = 0x1
  5549: 59 08 37                 jump @288 if a1 >=s 0
      :                          @282
  5552: 84 89 ff 00              a2 = a1 & 0xff
  5556: 33 05 02                 s0 = 0x2
  5559: 53 29 c0 00 2d           jump @288 if a2 <u 192
      :                          @283
  5564: 33 05 03                 s0 = 0x3
  5567: 53 29 e0 00 25           jump @288 if a2 <u 224
      :                          @284
  5572: 33 05 04                 s0 = 0x4
  5575: 53 29 f0 00 1d           jump @288 if a2 <u 240
      :                          @285
  5580: 33 05 05                 s0 = 0x5
  5583: 53 29 f8 00 15           jump @288 if a2 <u 248
      :                          @286
  5588: 33 05 06                 s0 = 0x6
  5591: 53 29 fc 00 0d           jump @288 if a2 <u 252
      :                          @287
  5596: 88 98 fe 00              a1 = a2 <u 0xfe
  5600: 9a 85 08                 s0 = 0x8 - a1
  5603: 01                       fallthrough
      :                          @288
  5604: ae 56 06                 jump @290 if s1 >=u s0
      :                          @289
  5607: 28 0b 22                 jump @708
      :                          @290
  5610: 64 58                    a1 = s0
  5612: 50 20 82 00 c2 31        ra = 130, jump @1030
      :                          @291 [@dyn 65]
  5618: 28 07                    jump @293
      :                          @292
  5620: 33 05                    s0 = 0
  5622: 33 07                    a0 = 0
  5624: 01                       fallthrough
      :                          @293
  5625: e4 56 08                 a1 = maxu(s1, s0)
  5628: c9 58 08                 a1 = a1 - s0
  5631: e4 78 08                 a1 = maxu(a1, a0)
  5634: c9 78 08                 a1 = a1 - a0
  5637: 33 09 20                 a2 = 0x20
  5640: ac 98 10 01              jump @325 if a1 <u a2
      :                          @294
  5644: 82 19 38                 a2 = u64 [sp + 0x38]
  5647: c8 95 05                 s0 = s0 + a2
  5650: c8 57 07                 a0 = a0 + s0
  5653: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  5656: 95 77 20                 a0 = a0 + 0x20
  5659: 7b 17 38                 u64 [sp + 0x38] = a0
  5662: 51 05 53                 jump @307 if s0 == 0
      :                          @295
  5665: 7d 78                    a1 = i8 [a0]
  5667: 33 06 01                 s1 = 0x1
  5670: 59 08 37                 jump @302 if a1 >=s 0
      :                          @296
  5673: 84 89 ff 00              a2 = a1 & 0xff
  5677: 33 06 02                 s1 = 0x2
  5680: 53 29 c0 00 2d           jump @302 if a2 <u 192
      :                          @297
  5685: 33 06 03                 s1 = 0x3
  5688: 53 29 e0 00 25           jump @302 if a2 <u 224
      :                          @298
  5693: 33 06 04                 s1 = 0x4
  5696: 53 29 f0 00 1d           jump @302 if a2 <u 240
      :                          @299
  5701: 33 06 05                 s1 = 0x5
  5704: 53 29 f8 00 15           jump @302 if a2 <u 248
      :                          @300
  5709: 33 06 06                 s1 = 0x6
  5712: 53 29 fc 00 0d           jump @302 if a2 <u 252
      :                          @301
  5717: 88 98 fe 00              a1 = a2 <u 0xfe
  5721: 9a 86 08                 s1 = 0x8 - a1
  5724: 01                       fallthrough
      :                          @302
  5725: ae 65 06                 jump @304 if s0 >=u s1
      :                          @303
  5728: 28 93 21                 jump @709
      :                          @304
  5731: 64 68                    a1 = s1
  5733: 50 20 84 00 49 31        ra = 132, jump @1030
      :                          @305 [@dyn 66]
  5739: ac 56 0c                 jump @308 if s1 <u s0
      :                          @306
  5742: 28 aa 00                 jump @325
      :                          @307
  5745: 33 06                    s1 = 0
  5747: 54 05 a5 00              jump @325 if s0 <=u 0
      :                          @308
  5751: 82 17 38                 a0 = u64 [sp + 0x38]
  5754: c8 67 07                 a0 = a0 + s1
  5757: 7c 78                    a1 = u8 [a0]
  5759: 51 08 0a                 jump @310 if a1 == 0
      :                          @309
  5762: 33 05                    s0 = 0
  5764: 33 0a                    a3 = 0
  5766: 28 b0 00                 jump @327
      :                          @310
  5769: e4 65 08                 a1 = maxu(s0, s1)
  5772: c9 68 08                 a1 = a1 - s1
  5775: 95 75 01                 s0 = a0 + 0x1
  5778: 33 07 01                 a0 = 0x1
  5781: e4 78 07                 a0 = maxu(a1, a0)
  5784: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  5787: 55 18 02 0a              jump @312 if a1 >=u 2
      :                          @311
  5791: 33 06                    s1 = 0
  5793: 33 07                    a0 = 0
  5795: 28 55                    jump @323
      :                          @312
  5797: 7d 57                    a0 = i8 [s0]
  5799: 33 06 01                 s1 = 0x1
  5802: 59 07 37                 jump @319 if a0 >=s 0
      :                          @313
  5805: 84 77 ff 00              a0 = a0 & 0xff
  5809: 33 06 02                 s1 = 0x2
  5812: 53 27 c0 00 2d           jump @319 if a0 <u 192
      :                          @314
  5817: 33 06 03                 s1 = 0x3
  5820: 53 27 e0 00 25           jump @319 if a0 <u 224
      :                          @315
  5825: 33 06 04                 s1 = 0x4
  5828: 53 27 f0 00 1d           jump @319 if a0 <u 240
      :                          @316
  5833: 33 06 05                 s1 = 0x5
  5836: 53 27 f8 00 15           jump @319 if a0 <u 248
      :                          @317
  5841: 33 06 06                 s1 = 0x6
  5844: 53 27 fc 00 0d           jump @319 if a0 <u 252
      :                          @318
  5849: 88 77 fe 00              a0 = a0 <u 0xfe
  5853: 9a 76 08                 s1 = 0x8 - a0
  5856: 01                       fallthrough
      :                          @319
  5857: 7b 1a 38                 u64 [sp + 0x38] = a3
  5860: ae 6a 06                 jump @321 if a3 >=u s1
      :                          @320
  5863: 28 0e 21                 jump @711
      :                          @321
  5866: 64 57                    a0 = s0
  5868: 64 68                    a1 = s1
  5870: 50 20 86 00 c0 30        ra = 134, jump @1030
      :                          @322 [@dyn 67]
  5876: 82 1a 38                 a3 = u64 [sp + 0x38]
  5879: 01                       fallthrough
      :                          @323
  5880: e4 6a 08                 a1 = maxu(a3, s1)
  5883: c9 68 08                 a1 = a1 - s1
  5886: e6 78 0a                 a3 = minu(a1, a0)
  5889: c8 65 05                 s0 = s0 + s1
  5892: 52 1a 24 32              jump @327 if a3 != 36
      :                          @324
  5896: 80 58 20                 a1 = u32 [s0 + 0x20]
  5899: 64 57                    a0 = s0
  5901: 0a 0e                    ecalli 14 // 'solicit'
  5903: 33 08                    a1 = 0
  5905: 33 07 00 00 01           a0 = 0x10000
  5910: 28 0a                    jump @326
      :                          @325
  5912: 33 08                    a1 = 0
  5914: 33 07 00 00 01           a0 = 0x10000
  5919: 01                       fallthrough
      :                          @326
  5920: 95 11 48 04              sp = sp + 0x448
  5924: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  5928: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  5932: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  5936: 95 11 f8 07              sp = sp + 0x7f8
  5940: 32 00                    ret
      :                          @327
  5942: 82 17 18                 a0 = u64 [sp + 0x18]
  5945: 97 77 08                 a0 = a0 << 0x8
  5948: 82 18 28                 a1 = u64 [sp + 0x28]
  5951: d4 87 07                 a0 = a0 | a1
  5954: 82 18 20                 a1 = u64 [sp + 0x20]
  5957: 97 88 10                 a1 = a1 << 0x10
  5960: 46 11 47                 u8 [sp + 71] = 0
  5963: 80 59                    a2 = u32 [s0]
  5965: 82 1b 30                 a4 = u64 [sp + 0x30]
  5968: 97 bb 18                 a4 = a4 << 0x18
  5971: d4 b8 08                 a1 = a1 | a4
  5974: d4 87 07                 a0 = a0 | a1
  5977: 7b 17 30                 u64 [sp + 0x30] = a0
  5980: 7b 19 48                 u64 [sp + 0x48] = a2
  5983: 95 17 47                 a0 = sp + 0x47
  5986: 33 08 01                 a1 = 0x1
  5989: 7b 15 18                 u64 [sp + 0x18] = s0
  5992: 64 59                    a2 = s0
  5994: 7b 1a 28                 u64 [sp + 0x28] = a3
  5997: 0a 03                    ecalli 3 // 'write'
  5999: 46 11 52 6a              u8 [sp + 82] = 0x6a
  6003: 46 11 53 61              u8 [sp + 83] = 0x61
  6007: 46 11 54 6d              u8 [sp + 84] = 0x6d
  6011: 46 11 55 44              u8 [sp + 85] = 0x44
  6015: 46 11 56 4f              u8 [sp + 86] = 0x4f
  6019: 46 11 57 54              u8 [sp + 87] = 0x54
  6023: 46 11 58 6a              u8 [sp + 88] = 0x6a
  6027: 46 11 59 0d              u8 [sp + 89] = 0xd
  6031: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  6035: 46 11 5b 19              u8 [sp + 91] = 0x19
  6039: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  6044: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  6049: 46 11 5e 50              u8 [sp + 94] = 0x50
  6053: 46 11 5f 57              u8 [sp + 95] = 0x57
  6057: 46 11 60 13              u8 [sp + 96] = 0x13
  6061: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  6066: 46 11 62 65              u8 [sp + 98] = 0x65
  6070: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  6075: 46 11 64 31              u8 [sp + 100] = 0x31
  6079: 46 11 65 03              u8 [sp + 101] = 0x3
  6083: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  6088: 46 11 67 73              u8 [sp + 103] = 0x73
  6092: 33 0b f1 00              a4 = 0xf1
  6096: 78 1b 68                 u8 [sp + 0x68] = a4
  6099: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6104: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6109: 46 11 6b 64              u8 [sp + 107] = 0x64
  6113: 46 11 6c 56              u8 [sp + 108] = 0x56
  6117: 46 11 6d 32              u8 [sp + 109] = 0x32
  6121: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6126: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6131: 46 11 70 50              u8 [sp + 112] = 0x50
  6135: 33 0c 3c                 a5 = 0x3c
  6138: 78 1c 71                 u8 [sp + 0x71] = a5
  6141: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6145: 46 11 73 0c              u8 [sp + 115] = 0xc
  6149: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6153: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6157: 46 11 76 19              u8 [sp + 118] = 0x19
  6161: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6166: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6171: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6176: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6181: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6185: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6190: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6195: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6200: 46 11 7f 47              u8 [sp + 127] = 0x47
  6204: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6210: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6215: 78 1c 82 00              u8 [sp + 0x82] = a5
  6219: 78 1b 83 00              u8 [sp + 0x83] = a4
  6223: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6229: 95 16 ff 07              s1 = sp + 0x7ff
  6233: 95 66 a1 03              s1 = s1 + 0x3a1
  6237: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6242: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6247: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6253: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6259: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6265: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6271: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6277: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6283: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6288: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6293: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6298: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6304: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6310: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6315: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6320: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6326: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6332: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6337: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6342: 49 11 38 ff ff ef        u64 [sp + 56] = 0xffffffffffefffff
  6348: 95 17 98 00              a0 = sp + 0x98
  6352: 33 09 00 01              a2 = 0x100
  6356: 33 08                    a1 = 0
  6358: 50 20 88 00 2f 25        ra = 136, jump @844
      :                          @328 [@dyn 68]
  6364: 82 17 48                 a0 = u64 [sp + 0x48]
  6367: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6370: 54 17 09 07              jump @330 if a0 <=u 9
      :                          @329
  6374: 28 7f 1c                 jump @672
      :                          @330
  6377: 97 77 02                 a0 = a0 << 0x2
  6380: 33 08 00 00 01           a1 = 0x10000
  6385: c8 87 07                 a0 = a0 + a1
  6388: 81 77                    a0 = i32 [a0]
  6390: 32 07                    jump [a0]
      :                          @331 [@dyn 69]
  6392: 95 18 52                 a1 = sp + 0x52
  6395: 33 09 03                 a2 = 0x3
  6398: 95 1a 98 00              a3 = sp + 0x98
  6402: 33 0c 00 01              a5 = 0x100
  6406: 82 17 30                 a0 = u64 [sp + 0x30]
  6409: 33 0b                    a4 = 0
  6411: 0a 02                    ecalli 2 // 'read'
  6413: 7b 67 70                 u64 [s1 + 0x70] = a0
  6416: 95 77 01                 a0 = a0 + 0x1
  6419: 88 77 01                 a0 = a0 <u 0x1
  6422: 97 77 01                 a0 = a0 << 0x1
  6425: 7b 17 10                 u64 [sp + 0x10] = a0
  6428: 95 17 48                 a0 = sp + 0x48
  6431: 7b 67 18                 u64 [s1 + 0x18] = a0
  6434: 33 09 16                 a2 = 0x16
  6437: 7b 69 20                 u64 [s1 + 0x20] = a2
  6440: 95 17 ff 07              a0 = sp + 0x7ff
  6444: 95 77 11 04              a0 = a0 + 0x411
  6448: 7b 67 28                 u64 [s1 + 0x28] = a0
  6451: 7b 19 20                 u64 [sp + 0x20] = a2
  6454: 7b 69 30                 u64 [s1 + 0x30] = a2
  6457: 33 07 d0 05 01           a0 = 0x105d0
  6462: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6466: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6471: 49 21 c0 01              u64 [sp + 448] = 0
  6475: 95 17 ff 07              a0 = sp + 0x7ff
  6479: 95 77 b9 03              a0 = a0 + 0x3b9
  6483: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  6487: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6492: 95 17 ff 07              a0 = sp + 0x7ff
  6496: 95 77 e9 03              a0 = a0 + 0x3e9
  6500: 95 18 a0 01              a1 = sp + 0x1a0
  6504: 50 20 8c 00 70 21        ra = 140, jump @777
      :                          @332 [@dyn 70]
  6510: 95 17 ff 07              a0 = sp + 0x7ff
  6514: 95 77 a1 03              a0 = a0 + 0x3a1
  6518: 82 76 50                 s1 = u64 [a0 + 0x50]
  6521: 82 7b 58                 a4 = u64 [a0 + 0x58]
  6524: 82 75 48                 s0 = u64 [a0 + 0x48]
  6527: 82 17 10                 a0 = u64 [sp + 0x10]
  6530: 33 08                    a1 = 0
  6532: 33 09                    a2 = 0
  6534: 64 6a                    a3 = s1
  6536: 33 00 8e 00              ra = 0x8e
  6540: 0a 64                    ecalli 100 // 'log'
  6542: 01                       fallthrough
      :                          @333 [@dyn 71]
  6543: 82 17 38                 a0 = u64 [sp + 0x38]
  6546: c8 57 07                 a0 = a0 + s0
  6549: 53 37 00 00 f0 25        jump @339 if a0 <u 4293918720
      :                          @334
  6555: 33 07 40 00 03           a0 = 0x30040
  6560: 95 77 00 00 10           a0 = a0 + 0x100000
  6565: 01                       fallthrough
      :                          @335
  6566: 82 78                    a1 = u64 [a0]
  6568: c9 87 09                 a2 = a0 - a1
  6571: ab 69 0f                 jump @339 if a2 != s1
      :                          @336
  6574: c9 58 09                 a2 = a1 - s0
  6577: 01                       fallthrough
      :                          @337
  6578: 82 7a                    a3 = u64 [a0]
  6580: ab 8a f2                 jump @335 if a3 != a1
      :                          @338
  6583: 7b 79                    u64 [a0] = a2
  6585: 01                       fallthrough
      :                          @339
  6586: 95 16 ff 07              s1 = sp + 0x7ff
  6590: 95 66 a1 03              s1 = s1 + 0x3a1
  6594: 82 67 70                 a0 = u64 [s1 + 0x70]
  6597: 33 08 01                 a1 = 0x1
  6600: 50 20 90 00 84 2e        ra = 144, jump @1054
      :                          @340 [@dyn 72]
  6606: 95 17 52                 a0 = sp + 0x52
  6609: 33 08 03                 a1 = 0x3
  6612: 95 19 55                 a2 = sp + 0x55
  6615: 33 0a 03                 a3 = 0x3
  6618: 0a 03                    ecalli 3 // 'write'
  6620: 95 18 48                 a1 = sp + 0x48
  6623: 7b 68 18                 u64 [s1 + 0x18] = a1
  6626: 95 18 ff 07              a1 = sp + 0x7ff
  6630: 95 88 19 04              a1 = a1 + 0x419
  6634: 7b 68 28                 u64 [s1 + 0x28] = a1
  6637: 82 18 20                 a1 = u64 [sp + 0x20]
  6640: 7b 68 20                 u64 [s1 + 0x20] = a1
  6643: 7b 68 30                 u64 [s1 + 0x30] = a1
  6646: 33 08 18 06 01           a1 = 0x10618
  6651: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  6655: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6660: 49 21 c0 01              u64 [sp + 448] = 0
  6664: 95 18 ff 07              a1 = sp + 0x7ff
  6668: 95 88 b9 03              a1 = a1 + 0x3b9
  6672: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  6676: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6681: 7b 67 78                 u64 [s1 + 0x78] = a0
  6684: 95 77 01                 a0 = a0 + 0x1
  6687: 88 77 01                 a0 = a0 <u 0x1
  6690: 97 77 01                 a0 = a0 << 0x1
  6693: 7b 17 20                 u64 [sp + 0x20] = a0
  6696: 95 17 ff 07              a0 = sp + 0x7ff
  6700: 95 77 e9 03              a0 = a0 + 0x3e9
  6704: 95 18 a0 01              a1 = sp + 0x1a0
  6708: 50 20 92 00 a4 20        ra = 146, jump @777
      :                          @341 [@dyn 73]
  6714: 82 65 50                 s0 = u64 [s1 + 0x50]
  6717: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6720: 82 66 48                 s1 = u64 [s1 + 0x48]
  6723: 82 17 20                 a0 = u64 [sp + 0x20]
  6726: 33 08                    a1 = 0
  6728: 33 09                    a2 = 0
  6730: 64 5a                    a3 = s0
  6732: 33 00 94 00              ra = 0x94
  6736: 0a 64                    ecalli 100 // 'log'
  6738: 01                       fallthrough
      :                          @342 [@dyn 74]
  6739: 82 17 38                 a0 = u64 [sp + 0x38]
  6742: c8 67 07                 a0 = a0 + s1
  6745: 53 37 00 00 f0 25        jump @348 if a0 <u 4293918720
      :                          @343
  6751: 33 07 40 00 03           a0 = 0x30040
  6756: 95 77 00 00 10           a0 = a0 + 0x100000
  6761: 01                       fallthrough
      :                          @344
  6762: 82 78                    a1 = u64 [a0]
  6764: c9 87 09                 a2 = a0 - a1
  6767: ab 59 0f                 jump @348 if a2 != s0
      :                          @345
  6770: c9 68 09                 a2 = a1 - s1
  6773: 01                       fallthrough
      :                          @346
  6774: 82 7a                    a3 = u64 [a0]
  6776: ab 8a f2                 jump @344 if a3 != a1
      :                          @347
  6779: 7b 79                    u64 [a0] = a2
  6781: 01                       fallthrough
      :                          @348
  6782: 95 15 ff 07              s0 = sp + 0x7ff
  6786: 95 55 a1 03              s0 = s0 + 0x3a1
  6790: 82 57 78                 a0 = u64 [s0 + 0x78]
  6793: 33 08 02                 a1 = 0x2
  6796: 33 06 02                 s1 = 0x2
  6799: 50 20 96 00 bd 2d        ra = 150, jump @1054
      :                          @349 [@dyn 75]
  6805: 95 18 52                 a1 = sp + 0x52
  6808: 33 09 03                 a2 = 0x3
  6811: 95 1a 98 00              a3 = sp + 0x98
  6815: 33 0c 00 01              a5 = 0x100
  6819: 82 17 30                 a0 = u64 [sp + 0x30]
  6822: 33 0b                    a4 = 0
  6824: 0a 02                    ecalli 2 // 'read'
  6826: 7b 57 80 00              u64 [s0 + 0x80] = a0
  6830: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  6833: 88 77 01                 a0 = a0 <u 0x1
  6836: 97 77 01                 a0 = a0 << 0x1
  6839: 7b 17 10                 u64 [sp + 0x10] = a0
  6842: 95 17 48                 a0 = sp + 0x48
  6845: 7b 57 18                 u64 [s0 + 0x18] = a0
  6848: 33 09 16                 a2 = 0x16
  6851: 7b 59 20                 u64 [s0 + 0x20] = a2
  6854: 95 17 ff 07              a0 = sp + 0x7ff
  6858: 95 77 21 04              a0 = a0 + 0x421
  6862: 7b 57 28                 u64 [s0 + 0x28] = a0
  6865: 7b 19 20                 u64 [sp + 0x20] = a2
  6868: 7b 59 30                 u64 [s0 + 0x30] = a2
  6871: 33 07 60 06 01           a0 = 0x10660
  6876: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6880: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6885: 49 21 c0 01              u64 [sp + 448] = 0
  6889: 95 17 ff 07              a0 = sp + 0x7ff
  6893: 95 77 b9 03              a0 = a0 + 0x3b9
  6897: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  6901: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  6905: 95 17 ff 07              a0 = sp + 0x7ff
  6909: 95 77 e9 03              a0 = a0 + 0x3e9
  6913: 95 18 a0 01              a1 = sp + 0x1a0
  6917: 50 20 98 00 d3 1f        ra = 152, jump @777
      :                          @350 [@dyn 76]
  6923: 82 56 50                 s1 = u64 [s0 + 0x50]
  6926: 82 5b 58                 a4 = u64 [s0 + 0x58]
  6929: 82 55 48                 s0 = u64 [s0 + 0x48]
  6932: 82 17 10                 a0 = u64 [sp + 0x10]
  6935: 33 08                    a1 = 0
  6937: 33 09                    a2 = 0
  6939: 64 6a                    a3 = s1
  6941: 33 00 9a 00              ra = 0x9a
  6945: 0a 64                    ecalli 100 // 'log'
  6947: 01                       fallthrough
      :                          @351 [@dyn 77]
  6948: 82 17 38                 a0 = u64 [sp + 0x38]
  6951: c8 57 07                 a0 = a0 + s0
  6954: 53 37 00 00 f0 25        jump @357 if a0 <u 4293918720
      :                          @352
  6960: 33 07 40 00 03           a0 = 0x30040
  6965: 95 77 00 00 10           a0 = a0 + 0x100000
  6970: 01                       fallthrough
      :                          @353
  6971: 82 78                    a1 = u64 [a0]
  6973: c9 87 09                 a2 = a0 - a1
  6976: ab 69 0f                 jump @357 if a2 != s1
      :                          @354
  6979: c9 58 09                 a2 = a1 - s0
  6982: 01                       fallthrough
      :                          @355
  6983: 82 7a                    a3 = u64 [a0]
  6985: ab 8a f2                 jump @353 if a3 != a1
      :                          @356
  6988: 7b 79                    u64 [a0] = a2
  6990: 01                       fallthrough
      :                          @357
  6991: 95 16 ff 07              s1 = sp + 0x7ff
  6995: 95 66 a1 03              s1 = s1 + 0x3a1
  6999: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7003: 33 08 05                 a1 = 0x5
  7006: 50 20 9c 00 ee 2c        ra = 156, jump @1054
      :                          @358 [@dyn 78]
  7012: 95 17 52                 a0 = sp + 0x52
  7015: 33 08                    a1 = 0
  7017: 0a 0f                    ecalli 15 // 'forget'
  7019: 95 18 48                 a1 = sp + 0x48
  7022: 7b 68 18                 u64 [s1 + 0x18] = a1
  7025: 82 18 20                 a1 = u64 [sp + 0x20]
  7028: 7b 68 20                 u64 [s1 + 0x20] = a1
  7031: 7b 68 30                 u64 [s1 + 0x30] = a1
  7034: 33 08 c8 06 01           a1 = 0x106c8
  7039: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7043: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7048: 49 21 c0 01              u64 [sp + 448] = 0
  7052: 95 18 ff 07              a1 = sp + 0x7ff
  7056: 95 88 b9 03              a1 = a1 + 0x3b9
  7060: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7064: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7069: 7b 67                    u64 [s1] = a0
  7071: 95 77 09                 a0 = a0 + 0x9
  7074: 88 77 01                 a0 = a0 <u 0x1
  7077: 97 77 01                 a0 = a0 << 0x1
  7080: 7b 17 20                 u64 [sp + 0x20] = a0
  7083: 7b 66 28                 u64 [s1 + 0x28] = s1
  7086: 95 17 ff 07              a0 = sp + 0x7ff
  7090: 95 77 e9 03              a0 = a0 + 0x3e9
  7094: 95 18 a0 01              a1 = sp + 0x1a0
  7098: 50 20 9e 00 1e 1f        ra = 158, jump @777
      :                          @359 [@dyn 79]
  7104: 82 65 50                 s0 = u64 [s1 + 0x50]
  7107: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7110: 82 66 48                 s1 = u64 [s1 + 0x48]
  7113: 82 17 20                 a0 = u64 [sp + 0x20]
  7116: 33 08                    a1 = 0
  7118: 33 09                    a2 = 0
  7120: 64 5a                    a3 = s0
  7122: 33 00 a0 00              ra = 0xa0
  7126: 0a 64                    ecalli 100 // 'log'
  7128: 01                       fallthrough
      :                          @360 [@dyn 80]
  7129: 82 17 38                 a0 = u64 [sp + 0x38]
  7132: c8 67 07                 a0 = a0 + s1
  7135: 53 37 00 00 f0 25        jump @366 if a0 <u 4293918720
      :                          @361
  7141: 33 07 40 00 03           a0 = 0x30040
  7146: 95 77 00 00 10           a0 = a0 + 0x100000
  7151: 01                       fallthrough
      :                          @362
  7152: 82 78                    a1 = u64 [a0]
  7154: c9 87 09                 a2 = a0 - a1
  7157: ab 59 0f                 jump @366 if a2 != s0
      :                          @363
  7160: c9 68 09                 a2 = a1 - s1
  7163: 01                       fallthrough
      :                          @364
  7164: 82 7a                    a3 = u64 [a0]
  7166: ab 8a f2                 jump @362 if a3 != a1
      :                          @365
  7169: 7b 79                    u64 [a0] = a2
  7171: 01                       fallthrough
      :                          @366
  7172: 95 16 ff 07              s1 = sp + 0x7ff
  7176: 95 66 a1 03              s1 = s1 + 0x3a1
  7180: 82 67                    a0 = u64 [s1]
  7182: 33 08 06                 a1 = 0x6
  7185: 33 00 6e 01              ra = 0x16e
  7189: 28 37 2c                 jump @1054
      :                          @367 [@dyn 81]
  7192: 95 18 52                 a1 = sp + 0x52
  7195: 33 09 03                 a2 = 0x3
  7198: 95 1a 98 00              a3 = sp + 0x98
  7202: 33 0c 00 01              a5 = 0x100
  7206: 82 17 30                 a0 = u64 [sp + 0x30]
  7209: 33 0b                    a4 = 0
  7211: 0a 02                    ecalli 2 // 'read'
  7213: 7b 67 78                 u64 [s1 + 0x78] = a0
  7216: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7219: 88 77 01                 a0 = a0 <u 0x1
  7222: 97 77 01                 a0 = a0 << 0x1
  7225: 7b 17 10                 u64 [sp + 0x10] = a0
  7228: 95 17 48                 a0 = sp + 0x48
  7231: 7b 67 18                 u64 [s1 + 0x18] = a0
  7234: 33 09 16                 a2 = 0x16
  7237: 7b 69 20                 u64 [s1 + 0x20] = a2
  7240: 95 17 ff 07              a0 = sp + 0x7ff
  7244: 95 77 19 04              a0 = a0 + 0x419
  7248: 7b 67 28                 u64 [s1 + 0x28] = a0
  7251: 7b 19 20                 u64 [sp + 0x20] = a2
  7254: 7b 69 30                 u64 [s1 + 0x30] = a2
  7257: 33 07 08 07 01           a0 = 0x10708
  7262: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7266: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7271: 49 21 c0 01              u64 [sp + 448] = 0
  7275: 95 17 ff 07              a0 = sp + 0x7ff
  7279: 95 77 b9 03              a0 = a0 + 0x3b9
  7283: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7287: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7292: 95 17 ff 07              a0 = sp + 0x7ff
  7296: 95 77 e9 03              a0 = a0 + 0x3e9
  7300: 95 18 a0 01              a1 = sp + 0x1a0
  7304: 50 20 a4 00 50 1e        ra = 164, jump @777
      :                          @368 [@dyn 82]
  7310: 95 17 ff 07              a0 = sp + 0x7ff
  7314: 95 77 a1 03              a0 = a0 + 0x3a1
  7318: 82 76 50                 s1 = u64 [a0 + 0x50]
  7321: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7324: 82 75 48                 s0 = u64 [a0 + 0x48]
  7327: 82 17 10                 a0 = u64 [sp + 0x10]
  7330: 33 08                    a1 = 0
  7332: 33 09                    a2 = 0
  7334: 64 6a                    a3 = s1
  7336: 33 00 a6 00              ra = 0xa6
  7340: 0a 64                    ecalli 100 // 'log'
  7342: 01                       fallthrough
      :                          @369 [@dyn 83]
  7343: 82 17 38                 a0 = u64 [sp + 0x38]
  7346: c8 57 07                 a0 = a0 + s0
  7349: 53 37 00 00 f0 25        jump @375 if a0 <u 4293918720
      :                          @370
  7355: 33 07 40 00 03           a0 = 0x30040
  7360: 95 77 00 00 10           a0 = a0 + 0x100000
  7365: 01                       fallthrough
      :                          @371
  7366: 82 78                    a1 = u64 [a0]
  7368: c9 87 09                 a2 = a0 - a1
  7371: ab 69 0f                 jump @375 if a2 != s1
      :                          @372
  7374: c9 58 09                 a2 = a1 - s0
  7377: 01                       fallthrough
      :                          @373
  7378: 82 7a                    a3 = u64 [a0]
  7380: ab 8a f2                 jump @371 if a3 != a1
      :                          @374
  7383: 7b 79                    u64 [a0] = a2
  7385: 01                       fallthrough
      :                          @375
  7386: 95 16 ff 07              s1 = sp + 0x7ff
  7390: 95 66 a1 03              s1 = s1 + 0x3a1
  7394: 82 67 78                 a0 = u64 [s1 + 0x78]
  7397: 33 08 01                 a1 = 0x1
  7400: 50 20 a8 00 64 2b        ra = 168, jump @1054
      :                          @376 [@dyn 84]
  7406: 95 17 52                 a0 = sp + 0x52
  7409: 33 08 03                 a1 = 0x3
  7412: 33 09                    a2 = 0
  7414: 33 0a                    a3 = 0
  7416: 0a 03                    ecalli 3 // 'write'
  7418: 95 18 48                 a1 = sp + 0x48
  7421: 7b 68 18                 u64 [s1 + 0x18] = a1
  7424: 95 18 ff 07              a1 = sp + 0x7ff
  7428: 95 88 21 04              a1 = a1 + 0x421
  7432: 7b 68 28                 u64 [s1 + 0x28] = a1
  7435: 82 18 20                 a1 = u64 [sp + 0x20]
  7438: 7b 68 20                 u64 [s1 + 0x20] = a1
  7441: 7b 68 30                 u64 [s1 + 0x30] = a1
  7444: 33 08 68 07 01           a1 = 0x10768
  7449: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7453: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7458: 49 21 c0 01              u64 [sp + 448] = 0
  7462: 95 18 ff 07              a1 = sp + 0x7ff
  7466: 95 88 b9 03              a1 = a1 + 0x3b9
  7470: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7474: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7479: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7483: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7486: 88 77 01                 a0 = a0 <u 0x1
  7489: 97 77 01                 a0 = a0 << 0x1
  7492: 7b 17 20                 u64 [sp + 0x20] = a0
  7495: 95 17 ff 07              a0 = sp + 0x7ff
  7499: 95 77 e9 03              a0 = a0 + 0x3e9
  7503: 95 18 a0 01              a1 = sp + 0x1a0
  7507: 50 20 aa 00 85 1d        ra = 170, jump @777
      :                          @377 [@dyn 85]
  7513: 82 65 50                 s0 = u64 [s1 + 0x50]
  7516: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7519: 82 66 48                 s1 = u64 [s1 + 0x48]
  7522: 82 17 20                 a0 = u64 [sp + 0x20]
  7525: 33 08                    a1 = 0
  7527: 33 09                    a2 = 0
  7529: 64 5a                    a3 = s0
  7531: 33 00 ac 00              ra = 0xac
  7535: 0a 64                    ecalli 100 // 'log'
  7537: 01                       fallthrough
      :                          @378 [@dyn 86]
  7538: 82 17 38                 a0 = u64 [sp + 0x38]
  7541: c8 67 07                 a0 = a0 + s1
  7544: 53 37 00 00 f0 25        jump @384 if a0 <u 4293918720
      :                          @379
  7550: 33 07 40 00 03           a0 = 0x30040
  7555: 95 77 00 00 10           a0 = a0 + 0x100000
  7560: 01                       fallthrough
      :                          @380
  7561: 82 78                    a1 = u64 [a0]
  7563: c9 87 09                 a2 = a0 - a1
  7566: ab 59 0f                 jump @384 if a2 != s0
      :                          @381
  7569: c9 68 09                 a2 = a1 - s1
  7572: 01                       fallthrough
      :                          @382
  7573: 82 7a                    a3 = u64 [a0]
  7575: ab 8a f2                 jump @380 if a3 != a1
      :                          @383
  7578: 7b 79                    u64 [a0] = a2
  7580: 01                       fallthrough
      :                          @384
  7581: 95 16 ff 07              s1 = sp + 0x7ff
  7585: 95 66 a1 03              s1 = s1 + 0x3a1
  7589: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7593: 33 08 02                 a1 = 0x2
  7596: 33 05 02                 s0 = 0x2
  7599: 50 20 ae 00 9d 2a        ra = 174, jump @1054
      :                          @385 [@dyn 87]
  7605: 95 18 52                 a1 = sp + 0x52
  7608: 33 09 03                 a2 = 0x3
  7611: 95 1a 98 00              a3 = sp + 0x98
  7615: 33 0c 00 01              a5 = 0x100
  7619: 82 17 30                 a0 = u64 [sp + 0x30]
  7622: 33 0b                    a4 = 0
  7624: 0a 02                    ecalli 2 // 'read'
  7626: 95 18 48                 a1 = sp + 0x48
  7629: 7b 68 18                 u64 [s1 + 0x18] = a1
  7632: 33 08 16                 a1 = 0x16
  7635: 7b 68 20                 u64 [s1 + 0x20] = a1
  7638: 7b 68 30                 u64 [s1 + 0x30] = a1
  7641: 33 08 98 07 01           a1 = 0x10798
  7646: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7650: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7655: 49 21 c0 01              u64 [sp + 448] = 0
  7659: 95 18 ff 07              a1 = sp + 0x7ff
  7663: 95 88 b9 03              a1 = a1 + 0x3b9
  7667: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7671: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  7675: 7b 67                    u64 [s1] = a0
  7677: 95 77 01                 a0 = a0 + 0x1
  7680: 88 77 01                 a0 = a0 <u 0x1
  7683: 97 77 01                 a0 = a0 << 0x1
  7686: 7b 17 20                 u64 [sp + 0x20] = a0
  7689: 7b 66 28                 u64 [s1 + 0x28] = s1
  7692: 95 17 ff 07              a0 = sp + 0x7ff
  7696: 95 77 e9 03              a0 = a0 + 0x3e9
  7700: 95 18 a0 01              a1 = sp + 0x1a0
  7704: 50 20 b0 00 c0 1c        ra = 176, jump @777
      :                          @386 [@dyn 88]
  7710: 82 65 50                 s0 = u64 [s1 + 0x50]
  7713: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7716: 82 66 48                 s1 = u64 [s1 + 0x48]
  7719: 82 17 20                 a0 = u64 [sp + 0x20]
  7722: 33 08                    a1 = 0
  7724: 33 09                    a2 = 0
  7726: 64 5a                    a3 = s0
  7728: 33 00 b2 00              ra = 0xb2
  7732: 0a 64                    ecalli 100 // 'log'
  7734: 01                       fallthrough
      :                          @387 [@dyn 89]
  7735: 82 17 38                 a0 = u64 [sp + 0x38]
  7738: c8 67 07                 a0 = a0 + s1
  7741: 53 37 00 00 f0 57 02     jump @421 if a0 <u 4293918720
      :                          @388
  7748: 33 07 40 00 03           a0 = 0x30040
  7753: 95 77 00 00 10           a0 = a0 + 0x100000
  7758: 01                       fallthrough
      :                          @389
  7759: 82 78                    a1 = u64 [a0]
  7761: c9 87 09                 a2 = a0 - a1
  7764: ab 59 40 02              jump @421 if a2 != s0
      :                          @390
  7768: c9 68 09                 a2 = a1 - s1
  7771: 01                       fallthrough
      :                          @391
  7772: 82 7a                    a3 = u64 [a0]
  7774: ab 8a f1                 jump @389 if a3 != a1
      :                          @392
  7777: 7b 79                    u64 [a0] = a2
  7779: 33 0b                    a4 = 0
  7781: 01                       fallthrough
      :                          @393
  7782: ab 8a e9                 jump @389 if a3 != a1
      :                          @394
  7785: 28 2b 02                 jump @421
      :                          @395 [@dyn 90]
  7788: 33 05 03                 s0 = 0x3
  7791: 95 17 58                 a0 = sp + 0x58
  7794: 33 08 03                 a1 = 0x3
  7797: 0a 0e                    ecalli 14 // 'solicit'
  7799: 7b 67 78                 u64 [s1 + 0x78] = a0
  7802: 88 77 01                 a0 = a0 <u 0x1
  7805: 97 77 01                 a0 = a0 << 0x1
  7808: 7b 17 10                 u64 [sp + 0x10] = a0
  7811: 95 17 48                 a0 = sp + 0x48
  7814: 7b 67 18                 u64 [s1 + 0x18] = a0
  7817: 33 08 16                 a1 = 0x16
  7820: 7b 68 20                 u64 [s1 + 0x20] = a1
  7823: 95 17 ff 07              a0 = sp + 0x7ff
  7827: 95 77 19 04              a0 = a0 + 0x419
  7831: 7b 67 28                 u64 [s1 + 0x28] = a0
  7834: 7b 18 20                 u64 [sp + 0x20] = a1
  7837: 7b 68 30                 u64 [s1 + 0x30] = a1
  7840: 33 07 f0 07 01           a0 = 0x107f0
  7845: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7849: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  7853: 49 21 c0 01              u64 [sp + 448] = 0
  7857: 95 17 ff 07              a0 = sp + 0x7ff
  7861: 95 77 b9 03              a0 = a0 + 0x3b9
  7865: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7869: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7874: 95 17 ff 07              a0 = sp + 0x7ff
  7878: 95 77 e9 03              a0 = a0 + 0x3e9
  7882: 95 18 a0 01              a1 = sp + 0x1a0
  7886: 50 20 b6 00 0a 1c        ra = 182, jump @777
      :                          @396 [@dyn 91]
  7892: 95 17 ff 07              a0 = sp + 0x7ff
  7896: 95 77 a1 03              a0 = a0 + 0x3a1
  7900: 82 76 50                 s1 = u64 [a0 + 0x50]
  7903: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7906: 82 75 48                 s0 = u64 [a0 + 0x48]
  7909: 82 17 10                 a0 = u64 [sp + 0x10]
  7912: 33 08                    a1 = 0
  7914: 33 09                    a2 = 0
  7916: 64 6a                    a3 = s1
  7918: 33 00 b8 00              ra = 0xb8
  7922: 0a 64                    ecalli 100 // 'log'
  7924: 01                       fallthrough
      :                          @397 [@dyn 92]
  7925: 82 17 38                 a0 = u64 [sp + 0x38]
  7928: c8 57 07                 a0 = a0 + s0
  7931: 53 37 00 00 f0 25        jump @403 if a0 <u 4293918720
      :                          @398
  7937: 33 07 40 00 03           a0 = 0x30040
  7942: 95 77 00 00 10           a0 = a0 + 0x100000
  7947: 01                       fallthrough
      :                          @399
  7948: 82 78                    a1 = u64 [a0]
  7950: c9 87 09                 a2 = a0 - a1
  7953: ab 69 0f                 jump @403 if a2 != s1
      :                          @400
  7956: c9 58 09                 a2 = a1 - s0
  7959: 01                       fallthrough
      :                          @401
  7960: 82 7a                    a3 = u64 [a0]
  7962: ab 8a f2                 jump @399 if a3 != a1
      :                          @402
  7965: 7b 79                    u64 [a0] = a2
  7967: 01                       fallthrough
      :                          @403
  7968: 95 16 ff 07              s1 = sp + 0x7ff
  7972: 95 66 a1 03              s1 = s1 + 0x3a1
  7976: 82 67 78                 a0 = u64 [s1 + 0x78]
  7979: 33 08 01                 a1 = 0x1
  7982: 50 20 ba 00 1e 29        ra = 186, jump @1054
      :                          @404 [@dyn 93]
  7988: 95 17 58                 a0 = sp + 0x58
  7991: 33 08 03                 a1 = 0x3
  7994: 0a 0d                    ecalli 13 // 'query'
  7996: 95 18 48                 a1 = sp + 0x48
  7999: 7b 68 18                 u64 [s1 + 0x18] = a1
  8002: 95 18 ff 07              a1 = sp + 0x7ff
  8006: 95 88 21 04              a1 = a1 + 0x421
  8010: 7b 68 28                 u64 [s1 + 0x28] = a1
  8013: 82 18 20                 a1 = u64 [sp + 0x20]
  8016: 7b 68 20                 u64 [s1 + 0x20] = a1
  8019: 7b 68 30                 u64 [s1 + 0x30] = a1
  8022: 33 08 50 08 01           a1 = 0x10850
  8027: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8031: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8036: 49 21 c0 01              u64 [sp + 448] = 0
  8040: 95 18 ff 07              a1 = sp + 0x7ff
  8044: 95 88 b9 03              a1 = a1 + 0x3b9
  8048: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8052: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8057: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8061: 88 77 01                 a0 = a0 <u 0x1
  8064: 97 77 01                 a0 = a0 << 0x1
  8067: 7b 17 20                 u64 [sp + 0x20] = a0
  8070: 95 17 ff 07              a0 = sp + 0x7ff
  8074: 95 77 e9 03              a0 = a0 + 0x3e9
  8078: 95 18 a0 01              a1 = sp + 0x1a0
  8082: 50 20 bc 00 46 1b        ra = 188, jump @777
      :                          @405 [@dyn 94]
  8088: 82 65 50                 s0 = u64 [s1 + 0x50]
  8091: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8094: 82 66 48                 s1 = u64 [s1 + 0x48]
  8097: 82 17 20                 a0 = u64 [sp + 0x20]
  8100: 33 08                    a1 = 0
  8102: 33 09                    a2 = 0
  8104: 64 5a                    a3 = s0
  8106: 33 00 be 00              ra = 0xbe
  8110: 0a 64                    ecalli 100 // 'log'
  8112: 01                       fallthrough
      :                          @406 [@dyn 95]
  8113: 82 17 38                 a0 = u64 [sp + 0x38]
  8116: c8 67 07                 a0 = a0 + s1
  8119: 53 37 00 00 f0 25        jump @412 if a0 <u 4293918720
      :                          @407
  8125: 33 07 40 00 03           a0 = 0x30040
  8130: 95 77 00 00 10           a0 = a0 + 0x100000
  8135: 01                       fallthrough
      :                          @408
  8136: 82 78                    a1 = u64 [a0]
  8138: c9 87 09                 a2 = a0 - a1
  8141: ab 59 0f                 jump @412 if a2 != s0
      :                          @409
  8144: c9 68 09                 a2 = a1 - s1
  8147: 01                       fallthrough
      :                          @410
  8148: 82 7a                    a3 = u64 [a0]
  8150: ab 8a f2                 jump @408 if a3 != a1
      :                          @411
  8153: 7b 79                    u64 [a0] = a2
  8155: 01                       fallthrough
      :                          @412
  8156: 95 16 ff 07              s1 = sp + 0x7ff
  8160: 95 66 a1 03              s1 = s1 + 0x3a1
  8164: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8168: 33 08 02                 a1 = 0x2
  8171: 33 05 02                 s0 = 0x2
  8174: 50 20 c0 00 5e 28        ra = 192, jump @1054
      :                          @413 [@dyn 96]
  8180: 95 17 78                 a0 = sp + 0x78
  8183: 33 08 03                 a1 = 0x3
  8186: 0a 0d                    ecalli 13 // 'query'
  8188: 95 18 48                 a1 = sp + 0x48
  8191: 7b 68 18                 u64 [s1 + 0x18] = a1
  8194: 33 08 16                 a1 = 0x16
  8197: 7b 68 20                 u64 [s1 + 0x20] = a1
  8200: 7b 68 30                 u64 [s1 + 0x30] = a1
  8203: 33 08 98 08 01           a1 = 0x10898
  8208: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8212: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8217: 49 21 c0 01              u64 [sp + 448] = 0
  8221: 95 18 ff 07              a1 = sp + 0x7ff
  8225: 95 88 b9 03              a1 = a1 + 0x3b9
  8229: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8233: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  8237: 7b 67                    u64 [s1] = a0
  8239: 95 77 01                 a0 = a0 + 0x1
  8242: 88 77 01                 a0 = a0 <u 0x1
  8245: 97 77 01                 a0 = a0 << 0x1
  8248: 7b 17 20                 u64 [sp + 0x20] = a0
  8251: 7b 66 28                 u64 [s1 + 0x28] = s1
  8254: 95 17 ff 07              a0 = sp + 0x7ff
  8258: 95 77 e9 03              a0 = a0 + 0x3e9
  8262: 95 18 a0 01              a1 = sp + 0x1a0
  8266: 50 20 c2 00 8e 1a        ra = 194, jump @777
      :                          @414 [@dyn 97]
  8272: 82 65 50                 s0 = u64 [s1 + 0x50]
  8275: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8278: 82 66 48                 s1 = u64 [s1 + 0x48]
  8281: 82 17 20                 a0 = u64 [sp + 0x20]
  8284: 33 08                    a1 = 0
  8286: 33 09                    a2 = 0
  8288: 64 5a                    a3 = s0
  8290: 33 00 c4 00              ra = 0xc4
  8294: 0a 64                    ecalli 100 // 'log'
  8296: 01                       fallthrough
      :                          @415 [@dyn 98]
  8297: 82 17 38                 a0 = u64 [sp + 0x38]
  8300: c8 67 07                 a0 = a0 + s1
  8303: 53 37 00 00 f0 25        jump @421 if a0 <u 4293918720
      :                          @416
  8309: 33 07 40 00 03           a0 = 0x30040
  8314: 95 77 00 00 10           a0 = a0 + 0x100000
  8319: 01                       fallthrough
      :                          @417
  8320: 82 78                    a1 = u64 [a0]
  8322: c9 87 09                 a2 = a0 - a1
  8325: ab 59 0f                 jump @421 if a2 != s0
      :                          @418
  8328: c9 68 09                 a2 = a1 - s1
  8331: 01                       fallthrough
      :                          @419
  8332: 82 7a                    a3 = u64 [a0]
  8334: ab 8a f2                 jump @417 if a3 != a1
      :                          @420
  8337: 7b 79                    u64 [a0] = a2
  8339: 01                       fallthrough
      :                          @421
  8340: 95 16 ff 07              s1 = sp + 0x7ff
  8344: 95 66 a1 03              s1 = s1 + 0x3a1
  8348: 82 67                    a0 = u64 [s1]
  8350: 33 08 05                 a1 = 0x5
  8353: 33 00 6e 01              ra = 0x16e
  8357: 28 a7 27                 jump @1054
      :                          @422 [@dyn 99]
  8360: 33 05 03                 s0 = 0x3
  8363: 95 17 58                 a0 = sp + 0x58
  8366: 33 08 03                 a1 = 0x3
  8369: 0a 0f                    ecalli 15 // 'forget'
  8371: 7b 67 68                 u64 [s1 + 0x68] = a0
  8374: 88 77 01                 a0 = a0 <u 0x1
  8377: 97 77 01                 a0 = a0 << 0x1
  8380: 7b 17 10                 u64 [sp + 0x10] = a0
  8383: 95 17 48                 a0 = sp + 0x48
  8386: 7b 67 18                 u64 [s1 + 0x18] = a0
  8389: 33 08 16                 a1 = 0x16
  8392: 7b 68 20                 u64 [s1 + 0x20] = a1
  8395: 95 17 ff 07              a0 = sp + 0x7ff
  8399: 95 77 09 04              a0 = a0 + 0x409
  8403: 7b 67 28                 u64 [s1 + 0x28] = a0
  8406: 7b 18 20                 u64 [sp + 0x20] = a1
  8409: 7b 68 30                 u64 [s1 + 0x30] = a1
  8412: 33 07 e0 08 01           a0 = 0x108e0
  8417: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8421: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  8425: 49 21 c0 01              u64 [sp + 448] = 0
  8429: 95 17 ff 07              a0 = sp + 0x7ff
  8433: 95 77 b9 03              a0 = a0 + 0x3b9
  8437: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8441: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8446: 95 17 ff 07              a0 = sp + 0x7ff
  8450: 95 77 e9 03              a0 = a0 + 0x3e9
  8454: 95 18 a0 01              a1 = sp + 0x1a0
  8458: 50 20 c8 00 ce 19        ra = 200, jump @777
      :                          @423 [@dyn 100]
  8464: 95 17 ff 07              a0 = sp + 0x7ff
  8468: 95 77 a1 03              a0 = a0 + 0x3a1
  8472: 82 76 50                 s1 = u64 [a0 + 0x50]
  8475: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8478: 82 75 48                 s0 = u64 [a0 + 0x48]
  8481: 82 17 10                 a0 = u64 [sp + 0x10]
  8484: 33 08                    a1 = 0
  8486: 33 09                    a2 = 0
  8488: 64 6a                    a3 = s1
  8490: 33 00 ca 00              ra = 0xca
  8494: 0a 64                    ecalli 100 // 'log'
  8496: 01                       fallthrough
      :                          @424 [@dyn 101]
  8497: 82 17 38                 a0 = u64 [sp + 0x38]
  8500: c8 57 07                 a0 = a0 + s0
  8503: 53 37 00 00 f0 25        jump @430 if a0 <u 4293918720
      :                          @425
  8509: 33 07 40 00 03           a0 = 0x30040
  8514: 95 77 00 00 10           a0 = a0 + 0x100000
  8519: 01                       fallthrough
      :                          @426
  8520: 82 78                    a1 = u64 [a0]
  8522: c9 87 09                 a2 = a0 - a1
  8525: ab 69 0f                 jump @430 if a2 != s1
      :                          @427
  8528: c9 58 09                 a2 = a1 - s0
  8531: 01                       fallthrough
      :                          @428
  8532: 82 7a                    a3 = u64 [a0]
  8534: ab 8a f2                 jump @426 if a3 != a1
      :                          @429
  8537: 7b 79                    u64 [a0] = a2
  8539: 01                       fallthrough
      :                          @430
  8540: 95 16 ff 07              s1 = sp + 0x7ff
  8544: 95 66 a1 03              s1 = s1 + 0x3a1
  8548: 82 67 68                 a0 = u64 [s1 + 0x68]
  8551: 33 08 01                 a1 = 0x1
  8554: 50 20 cc 00 e2 26        ra = 204, jump @1054
      :                          @431 [@dyn 102]
  8560: 95 17 58                 a0 = sp + 0x58
  8563: 33 08 03                 a1 = 0x3
  8566: 0a 0d                    ecalli 13 // 'query'
  8568: 95 18 48                 a1 = sp + 0x48
  8571: 7b 68 18                 u64 [s1 + 0x18] = a1
  8574: 95 18 ff 07              a1 = sp + 0x7ff
  8578: 95 88 11 04              a1 = a1 + 0x411
  8582: 7b 68 28                 u64 [s1 + 0x28] = a1
  8585: 82 18 20                 a1 = u64 [sp + 0x20]
  8588: 7b 68 20                 u64 [s1 + 0x20] = a1
  8591: 7b 68 30                 u64 [s1 + 0x30] = a1
  8594: 33 08 28 09 01           a1 = 0x10928
  8599: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8603: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8608: 49 21 c0 01              u64 [sp + 448] = 0
  8612: 95 18 ff 07              a1 = sp + 0x7ff
  8616: 95 88 b9 03              a1 = a1 + 0x3b9
  8620: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8624: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8629: 7b 67 70                 u64 [s1 + 0x70] = a0
  8632: 8e 77                    a0 = a0 >u 0
  8634: 97 77 01                 a0 = a0 << 0x1
  8637: 7b 17 20                 u64 [sp + 0x20] = a0
  8640: 95 17 ff 07              a0 = sp + 0x7ff
  8644: 95 77 e9 03              a0 = a0 + 0x3e9
  8648: 95 18 a0 01              a1 = sp + 0x1a0
  8652: 50 20 ce 00 0c 19        ra = 206, jump @777
      :                          @432 [@dyn 103]
  8658: 82 65 50                 s0 = u64 [s1 + 0x50]
  8661: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8664: 82 66 48                 s1 = u64 [s1 + 0x48]
  8667: 82 17 20                 a0 = u64 [sp + 0x20]
  8670: 33 08                    a1 = 0
  8672: 33 09                    a2 = 0
  8674: 64 5a                    a3 = s0
  8676: 33 00 d0 00              ra = 0xd0
  8680: 0a 64                    ecalli 100 // 'log'
  8682: 01                       fallthrough
      :                          @433 [@dyn 104]
  8683: 82 17 38                 a0 = u64 [sp + 0x38]
  8686: c8 67 07                 a0 = a0 + s1
  8689: 53 37 00 00 f0 25        jump @439 if a0 <u 4293918720
      :                          @434
  8695: 33 07 40 00 03           a0 = 0x30040
  8700: 95 77 00 00 10           a0 = a0 + 0x100000
  8705: 01                       fallthrough
      :                          @435
  8706: 82 78                    a1 = u64 [a0]
  8708: c9 87 09                 a2 = a0 - a1
  8711: ab 59 0f                 jump @439 if a2 != s0
      :                          @436
  8714: c9 68 09                 a2 = a1 - s1
  8717: 01                       fallthrough
      :                          @437
  8718: 82 7a                    a3 = u64 [a0]
  8720: ab 8a f2                 jump @435 if a3 != a1
      :                          @438
  8723: 7b 79                    u64 [a0] = a2
  8725: 01                       fallthrough
      :                          @439
  8726: 95 15 ff 07              s0 = sp + 0x7ff
  8730: 95 55 a1 03              s0 = s0 + 0x3a1
  8734: 82 57 70                 a0 = u64 [s0 + 0x70]
  8737: 33 08 02                 a1 = 0x2
  8740: 33 06 02                 s1 = 0x2
  8743: 50 20 d2 00 25 26        ra = 210, jump @1054
      :                          @440 [@dyn 105]
  8749: 95 18 78                 a1 = sp + 0x78
  8752: 95 19 98 00              a2 = sp + 0x98
  8756: 33 0b 03                 a4 = 0x3
  8759: 82 17 30                 a0 = u64 [sp + 0x30]
  8762: 33 0a                    a3 = 0
  8764: 0a 01                    ecalli 1 // 'lookup'
  8766: 7b 57 78                 u64 [s0 + 0x78] = a0
  8769: 95 77 01                 a0 = a0 + 0x1
  8772: 88 77 01                 a0 = a0 <u 0x1
  8775: 97 77 01                 a0 = a0 << 0x1
  8778: 7b 17 10                 u64 [sp + 0x10] = a0
  8781: 95 17 48                 a0 = sp + 0x48
  8784: 7b 57 18                 u64 [s0 + 0x18] = a0
  8787: 33 09 16                 a2 = 0x16
  8790: 7b 59 20                 u64 [s0 + 0x20] = a2
  8793: 95 17 ff 07              a0 = sp + 0x7ff
  8797: 95 77 19 04              a0 = a0 + 0x419
  8801: 7b 57 28                 u64 [s0 + 0x28] = a0
  8804: 7b 19 20                 u64 [sp + 0x20] = a2
  8807: 7b 59 30                 u64 [s0 + 0x30] = a2
  8810: 33 07 70 09 01           a0 = 0x10970
  8815: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8819: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8824: 49 21 c0 01              u64 [sp + 448] = 0
  8828: 95 17 ff 07              a0 = sp + 0x7ff
  8832: 95 77 b9 03              a0 = a0 + 0x3b9
  8836: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8840: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  8844: 95 17 ff 07              a0 = sp + 0x7ff
  8848: 95 77 e9 03              a0 = a0 + 0x3e9
  8852: 95 18 a0 01              a1 = sp + 0x1a0
  8856: 50 20 d4 00 40 18        ra = 212, jump @777
      :                          @441 [@dyn 106]
  8862: 82 56 50                 s1 = u64 [s0 + 0x50]
  8865: 82 5b 58                 a4 = u64 [s0 + 0x58]
  8868: 82 55 48                 s0 = u64 [s0 + 0x48]
  8871: 82 17 10                 a0 = u64 [sp + 0x10]
  8874: 33 08                    a1 = 0
  8876: 33 09                    a2 = 0
  8878: 64 6a                    a3 = s1
  8880: 33 00 d6 00              ra = 0xd6
  8884: 0a 64                    ecalli 100 // 'log'
  8886: 01                       fallthrough
      :                          @442 [@dyn 107]
  8887: 82 17 38                 a0 = u64 [sp + 0x38]
  8890: c8 57 07                 a0 = a0 + s0
  8893: 53 37 00 00 f0 25        jump @448 if a0 <u 4293918720
      :                          @443
  8899: 33 07 40 00 03           a0 = 0x30040
  8904: 95 77 00 00 10           a0 = a0 + 0x100000
  8909: 01                       fallthrough
      :                          @444
  8910: 82 78                    a1 = u64 [a0]
  8912: c9 87 09                 a2 = a0 - a1
  8915: ab 69 0f                 jump @448 if a2 != s1
      :                          @445
  8918: c9 58 09                 a2 = a1 - s0
  8921: 01                       fallthrough
      :                          @446
  8922: 82 7a                    a3 = u64 [a0]
  8924: ab 8a f2                 jump @444 if a3 != a1
      :                          @447
  8927: 7b 79                    u64 [a0] = a2
  8929: 01                       fallthrough
      :                          @448
  8930: 95 16 ff 07              s1 = sp + 0x7ff
  8934: 95 66 a1 03              s1 = s1 + 0x3a1
  8938: 82 67 78                 a0 = u64 [s1 + 0x78]
  8941: 33 08 05                 a1 = 0x5
  8944: 50 20 d8 00 5c 25        ra = 216, jump @1054
      :                          @449 [@dyn 108]
  8950: 33 07 e8 03              a0 = 0x3e8
  8954: 95 18 52                 a1 = sp + 0x52
  8957: 0a 06                    ecalli 6 // 'assign'
  8959: 95 18 48                 a1 = sp + 0x48
  8962: 7b 68 18                 u64 [s1 + 0x18] = a1
  8965: 95 18 ff 07              a1 = sp + 0x7ff
  8969: 95 88 21 04              a1 = a1 + 0x421
  8973: 7b 68 28                 u64 [s1 + 0x28] = a1
  8976: 82 18 20                 a1 = u64 [sp + 0x20]
  8979: 7b 68 20                 u64 [s1 + 0x20] = a1
  8982: 7b 68 30                 u64 [s1 + 0x30] = a1
  8985: 33 08 c0 09 01           a1 = 0x109c0
  8990: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8994: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8999: 49 21 c0 01              u64 [sp + 448] = 0
  9003: 95 18 ff 07              a1 = sp + 0x7ff
  9007: 95 88 b9 03              a1 = a1 + 0x3b9
  9011: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9015: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9020: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9024: 95 77 06                 a0 = a0 + 0x6
  9027: 88 77 01                 a0 = a0 <u 0x1
  9030: 97 77 01                 a0 = a0 << 0x1
  9033: 7b 17 20                 u64 [sp + 0x20] = a0
  9036: 95 17 ff 07              a0 = sp + 0x7ff
  9040: 95 77 e9 03              a0 = a0 + 0x3e9
  9044: 95 18 a0 01              a1 = sp + 0x1a0
  9048: 50 20 da 00 80 17        ra = 218, jump @777
      :                          @450 [@dyn 109]
  9054: 82 65 50                 s0 = u64 [s1 + 0x50]
  9057: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9060: 82 66 48                 s1 = u64 [s1 + 0x48]
  9063: 82 17 20                 a0 = u64 [sp + 0x20]
  9066: 33 08                    a1 = 0
  9068: 33 09                    a2 = 0
  9070: 64 5a                    a3 = s0
  9072: 33 00 dc 00              ra = 0xdc
  9076: 0a 64                    ecalli 100 // 'log'
  9078: 01                       fallthrough
      :                          @451 [@dyn 110]
  9079: 82 17 38                 a0 = u64 [sp + 0x38]
  9082: c8 67 07                 a0 = a0 + s1
  9085: 53 37 00 00 f0 25        jump @457 if a0 <u 4293918720
      :                          @452
  9091: 33 07 40 00 03           a0 = 0x30040
  9096: 95 77 00 00 10           a0 = a0 + 0x100000
  9101: 01                       fallthrough
      :                          @453
  9102: 82 78                    a1 = u64 [a0]
  9104: c9 87 09                 a2 = a0 - a1
  9107: ab 59 0f                 jump @457 if a2 != s0
      :                          @454
  9110: c9 68 09                 a2 = a1 - s1
  9113: 01                       fallthrough
      :                          @455
  9114: 82 7a                    a3 = u64 [a0]
  9116: ab 8a f2                 jump @453 if a3 != a1
      :                          @456
  9119: 7b 79                    u64 [a0] = a2
  9121: 01                       fallthrough
      :                          @457
  9122: 95 15 ff 07              s0 = sp + 0x7ff
  9126: 95 55 a1 03              s0 = s0 + 0x3a1
  9130: 82 57 80 00              a0 = u64 [s0 + 0x80]
  9134: 33 08 06                 a1 = 0x6
  9137: 50 20 de 00 9b 24        ra = 222, jump @1054
      :                          @458 [@dyn 111]
  9143: 33 07 9a 02              a0 = 0x29a
  9147: 95 18 58                 a1 = sp + 0x58
  9150: 33 09 03                 a2 = 0x3
  9153: 0a 1b                    ecalli 27 // 'provide'
  9155: 7b 17 20                 u64 [sp + 0x20] = a0
  9158: 95 77 04                 a0 = a0 + 0x4
  9161: 88 77 01                 a0 = a0 <u 0x1
  9164: 97 77 01                 a0 = a0 << 0x1
  9167: 7b 17 08                 u64 [sp + 0x8] = a0
  9170: 95 17 ff 07              a0 = sp + 0x7ff
  9174: 95 77 11 04              a0 = a0 + 0x411
  9178: 7b 57 48                 u64 [s0 + 0x48] = a0
  9181: 33 07 16                 a0 = 0x16
  9184: 7b 17 10                 u64 [sp + 0x10] = a0
  9187: 7b 57 50                 u64 [s0 + 0x50] = a0
  9190: 33 07 28 0a 01           a0 = 0x10a28
  9195: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9199: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9204: 49 21 c0 01              u64 [sp + 448] = 0
  9208: 95 17 ff 07              a0 = sp + 0x7ff
  9212: 95 77 e9 03              a0 = a0 + 0x3e9
  9216: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9220: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9225: 95 17 ff 07              a0 = sp + 0x7ff
  9229: 95 77 b9 03              a0 = a0 + 0x3b9
  9233: 95 18 a0 01              a1 = sp + 0x1a0
  9237: 50 20 e0 00 c3 16        ra = 224, jump @777
      :                          @459 [@dyn 112]
  9243: 82 56 20                 s1 = u64 [s0 + 0x20]
  9246: 82 5b 28                 a4 = u64 [s0 + 0x28]
  9249: 82 55 18                 s0 = u64 [s0 + 0x18]
  9252: 82 17 08                 a0 = u64 [sp + 0x8]
  9255: 33 08                    a1 = 0
  9257: 33 09                    a2 = 0
  9259: 64 6a                    a3 = s1
  9261: 33 00 e2 00              ra = 0xe2
  9265: 0a 64                    ecalli 100 // 'log'
  9267: 01                       fallthrough
      :                          @460 [@dyn 113]
  9268: 82 17 38                 a0 = u64 [sp + 0x38]
  9271: c8 57 07                 a0 = a0 + s0
  9274: 53 37 00 00 f0 25        jump @466 if a0 <u 4293918720
      :                          @461
  9280: 33 07 40 00 03           a0 = 0x30040
  9285: 95 77 00 00 10           a0 = a0 + 0x100000
  9290: 01                       fallthrough
      :                          @462
  9291: 82 78                    a1 = u64 [a0]
  9293: c9 87 09                 a2 = a0 - a1
  9296: ab 69 0f                 jump @466 if a2 != s1
      :                          @463
  9299: c9 58 09                 a2 = a1 - s0
  9302: 01                       fallthrough
      :                          @464
  9303: 82 7a                    a3 = u64 [a0]
  9305: ab 8a f2                 jump @462 if a3 != a1
      :                          @465
  9308: 7b 79                    u64 [a0] = a2
  9310: 01                       fallthrough
      :                          @466
  9311: 33 08 07                 a1 = 0x7
  9314: 82 17 20                 a0 = u64 [sp + 0x20]
  9317: 50 20 e4 00 e7 23        ra = 228, jump @1054
      :                          @467 [@dyn 114]
  9323: 95 18 58                 a1 = sp + 0x58
  9326: 33 09 03                 a2 = 0x3
  9329: 82 17 30                 a0 = u64 [sp + 0x30]
  9332: 0a 1b                    ecalli 27 // 'provide'
  9334: 95 16 ff 07              s1 = sp + 0x7ff
  9338: 95 66 a1 03              s1 = s1 + 0x3a1
  9342: 82 18 10                 a1 = u64 [sp + 0x10]
  9345: 7b 68 50                 u64 [s1 + 0x50] = a1
  9348: 33 08 80 0a 01           a1 = 0x10a80
  9353: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9357: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9362: 49 21 c0 01              u64 [sp + 448] = 0
  9366: 95 18 ff 07              a1 = sp + 0x7ff
  9370: 95 88 e9 03              a1 = a1 + 0x3e9
  9374: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9378: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9383: 7b 67                    u64 [s1] = a0
  9385: 88 77 01                 a0 = a0 <u 0x1
  9388: 97 77 01                 a0 = a0 << 0x1
  9391: 7b 17 10                 u64 [sp + 0x10] = a0
  9394: 7b 66 48                 u64 [s1 + 0x48] = s1
  9397: 95 17 ff 07              a0 = sp + 0x7ff
  9401: 95 77 b9 03              a0 = a0 + 0x3b9
  9405: 95 18 a0 01              a1 = sp + 0x1a0
  9409: 50 20 e6 00 17 16        ra = 230, jump @777
      :                          @468 [@dyn 115]
  9415: 82 65 20                 s0 = u64 [s1 + 0x20]
  9418: 82 6b 28                 a4 = u64 [s1 + 0x28]
  9421: 82 66 18                 s1 = u64 [s1 + 0x18]
  9424: 82 17 10                 a0 = u64 [sp + 0x10]
  9427: 33 08                    a1 = 0
  9429: 33 09                    a2 = 0
  9431: 64 5a                    a3 = s0
  9433: 33 00 e8 00              ra = 0xe8
  9437: 0a 64                    ecalli 100 // 'log'
  9439: 01                       fallthrough
      :                          @469 [@dyn 116]
  9440: 82 17 38                 a0 = u64 [sp + 0x38]
  9443: c8 67 07                 a0 = a0 + s1
  9446: 53 37 00 00 f0 25        jump @475 if a0 <u 4293918720
      :                          @470
  9452: 33 07 40 00 03           a0 = 0x30040
  9457: 95 77 00 00 10           a0 = a0 + 0x100000
  9462: 01                       fallthrough
      :                          @471
  9463: 82 78                    a1 = u64 [a0]
  9465: c9 87 09                 a2 = a0 - a1
  9468: ab 59 0f                 jump @475 if a2 != s0
      :                          @472
  9471: c9 68 09                 a2 = a1 - s1
  9474: 01                       fallthrough
      :                          @473
  9475: 82 7a                    a3 = u64 [a0]
  9477: ab 8a f2                 jump @471 if a3 != a1
      :                          @474
  9480: 7b 79                    u64 [a0] = a2
  9482: 01                       fallthrough
      :                          @475
  9483: 33 08 08                 a1 = 0x8
  9486: 82 17 20                 a0 = u64 [sp + 0x20]
  9489: 50 20 ea 00 3b 23        ra = 234, jump @1054
      :                          @476 [@dyn 117]
  9495: 95 16 ff 07              s1 = sp + 0x7ff
  9499: 95 66 a1 03              s1 = s1 + 0x3a1
  9503: 28 46 10                 jump @672
      :                          @477 [@dyn 118]
  9506: 33 05 03                 s0 = 0x3
  9509: 95 18 58                 a1 = sp + 0x58
  9512: 95 19 98 00              a2 = sp + 0x98
  9516: 33 0b 03                 a4 = 0x3
  9519: 82 17 30                 a0 = u64 [sp + 0x30]
  9522: 33 0a                    a3 = 0
  9524: 0a 01                    ecalli 1 // 'lookup'
  9526: 7b 17 98 01              u64 [sp + 0x198] = a0
  9530: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  9533: 88 77 01                 a0 = a0 <u 0x1
  9536: 97 77 01                 a0 = a0 << 0x1
  9539: 7b 17 10                 u64 [sp + 0x10] = a0
  9542: 95 17 48                 a0 = sp + 0x48
  9545: 7b 67 18                 u64 [s1 + 0x18] = a0
  9548: 33 08 16                 a1 = 0x16
  9551: 7b 68 20                 u64 [s1 + 0x20] = a1
  9554: 95 17 98 01              a0 = sp + 0x198
  9558: 7b 67 28                 u64 [s1 + 0x28] = a0
  9561: 7b 18 20                 u64 [sp + 0x20] = a1
  9564: 7b 68 30                 u64 [s1 + 0x30] = a1
  9567: 33 07 b8 0a 01           a0 = 0x10ab8
  9572: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9576: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  9580: 49 21 c0 01              u64 [sp + 448] = 0
  9584: 95 17 ff 07              a0 = sp + 0x7ff
  9588: 95 77 b9 03              a0 = a0 + 0x3b9
  9592: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9596: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9601: 95 17 ff 07              a0 = sp + 0x7ff
  9605: 95 77 e9 03              a0 = a0 + 0x3e9
  9609: 95 18 a0 01              a1 = sp + 0x1a0
  9613: 50 20 ee 00 4b 15        ra = 238, jump @777
      :                          @478 [@dyn 119]
  9619: 95 17 ff 07              a0 = sp + 0x7ff
  9623: 95 77 a1 03              a0 = a0 + 0x3a1
  9627: 82 76 50                 s1 = u64 [a0 + 0x50]
  9630: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9633: 82 75 48                 s0 = u64 [a0 + 0x48]
  9636: 82 17 10                 a0 = u64 [sp + 0x10]
  9639: 33 08                    a1 = 0
  9641: 33 09                    a2 = 0
  9643: 64 6a                    a3 = s1
  9645: 33 00 f0 00              ra = 0xf0
  9649: 0a 64                    ecalli 100 // 'log'
  9651: 01                       fallthrough
      :                          @479 [@dyn 120]
  9652: 82 17 38                 a0 = u64 [sp + 0x38]
  9655: c8 57 07                 a0 = a0 + s0
  9658: 53 37 00 00 f0 25        jump @485 if a0 <u 4293918720
      :                          @480
  9664: 33 07 40 00 03           a0 = 0x30040
  9669: 95 77 00 00 10           a0 = a0 + 0x100000
  9674: 01                       fallthrough
      :                          @481
  9675: 82 78                    a1 = u64 [a0]
  9677: c9 87 09                 a2 = a0 - a1
  9680: ab 69 0f                 jump @485 if a2 != s1
      :                          @482
  9683: c9 58 09                 a2 = a1 - s0
  9686: 01                       fallthrough
      :                          @483
  9687: 82 7a                    a3 = u64 [a0]
  9689: ab 8a f2                 jump @481 if a3 != a1
      :                          @484
  9692: 7b 79                    u64 [a0] = a2
  9694: 01                       fallthrough
      :                          @485
  9695: 82 17 98 01              a0 = u64 [sp + 0x198]
  9699: 33 08 01                 a1 = 0x1
  9702: 50 20 f2 00 66 22        ra = 242, jump @1054
      :                          @486 [@dyn 121]
  9708: 95 17 58                 a0 = sp + 0x58
  9711: 33 08 03                 a1 = 0x3
  9714: 0a 0d                    ecalli 13 // 'query'
  9716: 95 16 ff 07              s1 = sp + 0x7ff
  9720: 95 66 a1 03              s1 = s1 + 0x3a1
  9724: 95 18 48                 a1 = sp + 0x48
  9727: 7b 68 18                 u64 [s1 + 0x18] = a1
  9730: 95 18 ff 07              a1 = sp + 0x7ff
  9734: 95 88 09 04              a1 = a1 + 0x409
  9738: 7b 68 28                 u64 [s1 + 0x28] = a1
  9741: 82 18 20                 a1 = u64 [sp + 0x20]
  9744: 7b 68 20                 u64 [s1 + 0x20] = a1
  9747: 7b 68 30                 u64 [s1 + 0x30] = a1
  9750: 33 08 28 09 01           a1 = 0x10928
  9755: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9759: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9764: 49 21 c0 01              u64 [sp + 448] = 0
  9768: 95 18 ff 07              a1 = sp + 0x7ff
  9772: 95 88 b9 03              a1 = a1 + 0x3b9
  9776: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9780: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9785: 7b 67 68                 u64 [s1 + 0x68] = a0
  9788: 8e 77                    a0 = a0 >u 0
  9790: 97 77 01                 a0 = a0 << 0x1
  9793: 7b 17 20                 u64 [sp + 0x20] = a0
  9796: 95 17 ff 07              a0 = sp + 0x7ff
  9800: 95 77 e9 03              a0 = a0 + 0x3e9
  9804: 95 18 a0 01              a1 = sp + 0x1a0
  9808: 50 20 f4 00 88 14        ra = 244, jump @777
      :                          @487 [@dyn 122]
  9814: 82 65 50                 s0 = u64 [s1 + 0x50]
  9817: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9820: 82 66 48                 s1 = u64 [s1 + 0x48]
  9823: 82 17 20                 a0 = u64 [sp + 0x20]
  9826: 33 08                    a1 = 0
  9828: 33 09                    a2 = 0
  9830: 64 5a                    a3 = s0
  9832: 33 00 f6 00              ra = 0xf6
  9836: 0a 64                    ecalli 100 // 'log'
  9838: 01                       fallthrough
      :                          @488 [@dyn 123]
  9839: 82 17 38                 a0 = u64 [sp + 0x38]
  9842: c8 67 07                 a0 = a0 + s1
  9845: 53 37 00 00 f0 25        jump @494 if a0 <u 4293918720
      :                          @489
  9851: 33 07 40 00 03           a0 = 0x30040
  9856: 95 77 00 00 10           a0 = a0 + 0x100000
  9861: 01                       fallthrough
      :                          @490
  9862: 82 78                    a1 = u64 [a0]
  9864: c9 87 09                 a2 = a0 - a1
  9867: ab 59 0f                 jump @494 if a2 != s0
      :                          @491
  9870: c9 68 09                 a2 = a1 - s1
  9873: 01                       fallthrough
      :                          @492
  9874: 82 7a                    a3 = u64 [a0]
  9876: ab 8a f2                 jump @490 if a3 != a1
      :                          @493
  9879: 7b 79                    u64 [a0] = a2
  9881: 01                       fallthrough
      :                          @494
  9882: 95 15 ff 07              s0 = sp + 0x7ff
  9886: 95 55 a1 03              s0 = s0 + 0x3a1
  9890: 82 57 68                 a0 = u64 [s0 + 0x68]
  9893: 33 08 02                 a1 = 0x2
  9896: 33 06 02                 s1 = 0x2
  9899: 50 20 f8 00 a1 21        ra = 248, jump @1054
      :                          @495 [@dyn 124]
  9905: 95 18 58                 a1 = sp + 0x58
  9908: 82 17 30                 a0 = u64 [sp + 0x30]
  9911: 0a 0c                    ecalli 12 // 'eject'
  9913: 7b 57 70                 u64 [s0 + 0x70] = a0
  9916: 95 77 04                 a0 = a0 + 0x4
  9919: 88 77 01                 a0 = a0 <u 0x1
  9922: 97 77 01                 a0 = a0 << 0x1
  9925: 7b 17 10                 u64 [sp + 0x10] = a0
  9928: 95 17 48                 a0 = sp + 0x48
  9931: 7b 57 18                 u64 [s0 + 0x18] = a0
  9934: 33 08 16                 a1 = 0x16
  9937: 7b 58 20                 u64 [s0 + 0x20] = a1
  9940: 95 17 ff 07              a0 = sp + 0x7ff
  9944: 95 77 11 04              a0 = a0 + 0x411
  9948: 7b 57 28                 u64 [s0 + 0x28] = a0
  9951: 7b 18 20                 u64 [sp + 0x20] = a1
  9954: 7b 58 30                 u64 [s0 + 0x30] = a1
  9957: 33 07 00 0b 01           a0 = 0x10b00
  9962: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9966: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9971: 49 21 c0 01              u64 [sp + 448] = 0
  9975: 95 17 ff 07              a0 = sp + 0x7ff
  9979: 95 77 b9 03              a0 = a0 + 0x3b9
  9983: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9987: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  9991: 95 17 ff 07              a0 = sp + 0x7ff
  9995: 95 77 e9 03              a0 = a0 + 0x3e9
  9999: 95 18 a0 01              a1 = sp + 0x1a0
 10003: 50 20 fa 00 c5 13        ra = 250, jump @777
      :                          @496 [@dyn 125]
 10009: 82 56 50                 s1 = u64 [s0 + 0x50]
 10012: 82 5b 58                 a4 = u64 [s0 + 0x58]
 10015: 82 55 48                 s0 = u64 [s0 + 0x48]
 10018: 82 17 10                 a0 = u64 [sp + 0x10]
 10021: 33 08                    a1 = 0
 10023: 33 09                    a2 = 0
 10025: 64 6a                    a3 = s1
 10027: 33 00 fc 00              ra = 0xfc
 10031: 0a 64                    ecalli 100 // 'log'
 10033: 01                       fallthrough
      :                          @497 [@dyn 126]
 10034: 82 17 38                 a0 = u64 [sp + 0x38]
 10037: c8 57 07                 a0 = a0 + s0
 10040: 53 37 00 00 f0 25        jump @503 if a0 <u 4293918720
      :                          @498
 10046: 33 07 40 00 03           a0 = 0x30040
 10051: 95 77 00 00 10           a0 = a0 + 0x100000
 10056: 01                       fallthrough
      :                          @499
 10057: 82 78                    a1 = u64 [a0]
 10059: c9 87 09                 a2 = a0 - a1
 10062: ab 69 0f                 jump @503 if a2 != s1
      :                          @500
 10065: c9 58 09                 a2 = a1 - s0
 10068: 01                       fallthrough
      :                          @501
 10069: 82 7a                    a3 = u64 [a0]
 10071: ab 8a f2                 jump @499 if a3 != a1
      :                          @502
 10074: 7b 79                    u64 [a0] = a2
 10076: 01                       fallthrough
      :                          @503
 10077: 95 16 ff 07              s1 = sp + 0x7ff
 10081: 95 66 a1 03              s1 = s1 + 0x3a1
 10085: 82 67 70                 a0 = u64 [s1 + 0x70]
 10088: 33 08 05                 a1 = 0x5
 10091: 50 20 fe 00 e1 20        ra = 254, jump @1054
      :                          @504 [@dyn 127]
 10097: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
 10107: 95 1a 58                 a3 = sp + 0x58
 10110: 33 08                    a1 = 0
 10112: 33 09                    a2 = 0
 10114: 33 0b                    a4 = 0
 10116: 0a 05                    ecalli 5 // 'bless'
 10118: 95 18 48                 a1 = sp + 0x48
 10121: 7b 68 18                 u64 [s1 + 0x18] = a1
 10124: 95 18 ff 07              a1 = sp + 0x7ff
 10128: 95 88 19 04              a1 = a1 + 0x419
 10132: 7b 68 28                 u64 [s1 + 0x28] = a1
 10135: 82 18 20                 a1 = u64 [sp + 0x20]
 10138: 7b 68 20                 u64 [s1 + 0x20] = a1
 10141: 7b 68 30                 u64 [s1 + 0x30] = a1
 10144: 33 08 30 0b 01           a1 = 0x10b30
 10149: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10153: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10158: 49 21 c0 01              u64 [sp + 448] = 0
 10162: 95 18 ff 07              a1 = sp + 0x7ff
 10166: 95 88 b9 03              a1 = a1 + 0x3b9
 10170: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10174: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10179: 7b 67 78                 u64 [s1 + 0x78] = a0
 10182: 95 77 04                 a0 = a0 + 0x4
 10185: 88 77 01                 a0 = a0 <u 0x1
 10188: 97 77 01                 a0 = a0 << 0x1
 10191: 7b 17 20                 u64 [sp + 0x20] = a0
 10194: 95 17 ff 07              a0 = sp + 0x7ff
 10198: 95 77 e9 03              a0 = a0 + 0x3e9
 10202: 95 18 a0 01              a1 = sp + 0x1a0
 10206: 50 20 00 01 fa 12        ra = 256, jump @777
      :                          @505 [@dyn 128]
 10212: 82 65 50                 s0 = u64 [s1 + 0x50]
 10215: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10218: 82 66 48                 s1 = u64 [s1 + 0x48]
 10221: 82 17 20                 a0 = u64 [sp + 0x20]
 10224: 33 08                    a1 = 0
 10226: 33 09                    a2 = 0
 10228: 64 5a                    a3 = s0
 10230: 33 00 02 01              ra = 0x102
 10234: 0a 64                    ecalli 100 // 'log'
 10236: 01                       fallthrough
      :                          @506 [@dyn 129]
 10237: 82 17 38                 a0 = u64 [sp + 0x38]
 10240: c8 67 07                 a0 = a0 + s1
 10243: 53 37 00 00 f0 25        jump @512 if a0 <u 4293918720
      :                          @507
 10249: 33 07 40 00 03           a0 = 0x30040
 10254: 95 77 00 00 10           a0 = a0 + 0x100000
 10259: 01                       fallthrough
      :                          @508
 10260: 82 78                    a1 = u64 [a0]
 10262: c9 87 09                 a2 = a0 - a1
 10265: ab 59 0f                 jump @512 if a2 != s0
      :                          @509
 10268: c9 68 09                 a2 = a1 - s1
 10271: 01                       fallthrough
      :                          @510
 10272: 82 7a                    a3 = u64 [a0]
 10274: ab 8a f2                 jump @508 if a3 != a1
      :                          @511
 10277: 7b 79                    u64 [a0] = a2
 10279: 01                       fallthrough
      :                          @512
 10280: 95 16 ff 07              s1 = sp + 0x7ff
 10284: 95 66 a1 03              s1 = s1 + 0x3a1
 10288: 82 67 78                 a0 = u64 [s1 + 0x78]
 10291: 33 08 06                 a1 = 0x6
 10294: 50 20 04 01 16 20        ra = 260, jump @1054
      :                          @513 [@dyn 130]
 10300: 95 18 58                 a1 = sp + 0x58
 10303: 33 09 03                 a2 = 0x3
 10306: 82 17 30                 a0 = u64 [sp + 0x30]
 10309: 0a 1b                    ecalli 27 // 'provide'
 10311: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10315: 88 77 01                 a0 = a0 <u 0x1
 10318: 97 77 01                 a0 = a0 << 0x1
 10321: 7b 17 10                 u64 [sp + 0x10] = a0
 10324: 95 17 ff 07              a0 = sp + 0x7ff
 10328: 95 77 21 04              a0 = a0 + 0x421
 10332: 7b 67 48                 u64 [s1 + 0x48] = a0
 10335: 33 07 16                 a0 = 0x16
 10338: 7b 17 20                 u64 [sp + 0x20] = a0
 10341: 7b 67 50                 u64 [s1 + 0x50] = a0
 10344: 33 07 60 0b 01           a0 = 0x10b60
 10349: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10353: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10358: 49 21 c0 01              u64 [sp + 448] = 0
 10362: 95 17 ff 07              a0 = sp + 0x7ff
 10366: 95 77 e9 03              a0 = a0 + 0x3e9
 10370: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10374: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10379: 95 17 ff 07              a0 = sp + 0x7ff
 10383: 95 77 b9 03              a0 = a0 + 0x3b9
 10387: 95 18 a0 01              a1 = sp + 0x1a0
 10391: 50 20 06 01 41 12        ra = 262, jump @777
      :                          @514 [@dyn 131]
 10397: 82 65 20                 s0 = u64 [s1 + 0x20]
 10400: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10403: 82 66 18                 s1 = u64 [s1 + 0x18]
 10406: 82 17 10                 a0 = u64 [sp + 0x10]
 10409: 33 08                    a1 = 0
 10411: 33 09                    a2 = 0
 10413: 64 5a                    a3 = s0
 10415: 33 00 08 01              ra = 0x108
 10419: 0a 64                    ecalli 100 // 'log'
 10421: 01                       fallthrough
      :                          @515 [@dyn 132]
 10422: 82 17 38                 a0 = u64 [sp + 0x38]
 10425: c8 67 07                 a0 = a0 + s1
 10428: 53 37 00 00 f0 25        jump @521 if a0 <u 4293918720
      :                          @516
 10434: 33 07 40 00 03           a0 = 0x30040
 10439: 95 77 00 00 10           a0 = a0 + 0x100000
 10444: 01                       fallthrough
      :                          @517
 10445: 82 78                    a1 = u64 [a0]
 10447: c9 87 09                 a2 = a0 - a1
 10450: ab 59 0f                 jump @521 if a2 != s0
      :                          @518
 10453: c9 68 09                 a2 = a1 - s1
 10456: 01                       fallthrough
      :                          @519
 10457: 82 7a                    a3 = u64 [a0]
 10459: ab 8a f2                 jump @517 if a3 != a1
      :                          @520
 10462: 7b 79                    u64 [a0] = a2
 10464: 01                       fallthrough
      :                          @521
 10465: 95 16 ff 07              s1 = sp + 0x7ff
 10469: 95 66 a1 03              s1 = s1 + 0x3a1
 10473: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10477: 33 08 07                 a1 = 0x7
 10480: 50 20 0a 01 5c 1f        ra = 266, jump @1054
      :                          @522 [@dyn 133]
 10486: 95 18 58                 a1 = sp + 0x58
 10489: 33 09 03                 a2 = 0x3
 10492: 82 17 30                 a0 = u64 [sp + 0x30]
 10495: 0a 1b                    ecalli 27 // 'provide'
 10497: 82 18 20                 a1 = u64 [sp + 0x20]
 10500: 7b 68 50                 u64 [s1 + 0x50] = a1
 10503: 33 08 a8 0b 01           a1 = 0x10ba8
 10508: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10512: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10517: 49 21 c0 01              u64 [sp + 448] = 0
 10521: 95 18 ff 07              a1 = sp + 0x7ff
 10525: 95 88 e9 03              a1 = a1 + 0x3e9
 10529: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10533: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10538: 7b 67                    u64 [s1] = a0
 10540: 95 77 09                 a0 = a0 + 0x9
 10543: 88 77 01                 a0 = a0 <u 0x1
 10546: 97 77 01                 a0 = a0 << 0x1
 10549: 7b 17 20                 u64 [sp + 0x20] = a0
 10552: 7b 66 48                 u64 [s1 + 0x48] = s1
 10555: 95 17 ff 07              a0 = sp + 0x7ff
 10559: 95 77 b9 03              a0 = a0 + 0x3b9
 10563: 95 18 a0 01              a1 = sp + 0x1a0
 10567: 50 20 0c 01 91 11        ra = 268, jump @777
      :                          @523 [@dyn 134]
 10573: 82 65 20                 s0 = u64 [s1 + 0x20]
 10576: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10579: 82 66 18                 s1 = u64 [s1 + 0x18]
 10582: 82 17 20                 a0 = u64 [sp + 0x20]
 10585: 33 08                    a1 = 0
 10587: 33 09                    a2 = 0
 10589: 64 5a                    a3 = s0
 10591: 33 00 0e 01              ra = 0x10e
 10595: 0a 64                    ecalli 100 // 'log'
 10597: 01                       fallthrough
      :                          @524 [@dyn 135]
 10598: 82 17 38                 a0 = u64 [sp + 0x38]
 10601: c8 67 07                 a0 = a0 + s1
 10604: 53 37 00 00 f0 25        jump @530 if a0 <u 4293918720
      :                          @525
 10610: 33 07 40 00 03           a0 = 0x30040
 10615: 95 77 00 00 10           a0 = a0 + 0x100000
 10620: 01                       fallthrough
      :                          @526
 10621: 82 78                    a1 = u64 [a0]
 10623: c9 87 09                 a2 = a0 - a1
 10626: ab 59 0f                 jump @530 if a2 != s0
      :                          @527
 10629: c9 68 09                 a2 = a1 - s1
 10632: 01                       fallthrough
      :                          @528
 10633: 82 7a                    a3 = u64 [a0]
 10635: ab 8a f2                 jump @526 if a3 != a1
      :                          @529
 10638: 7b 79                    u64 [a0] = a2
 10640: 01                       fallthrough
      :                          @530
 10641: 95 16 ff 07              s1 = sp + 0x7ff
 10645: 95 66 a1 03              s1 = s1 + 0x3a1
 10649: 82 67                    a0 = u64 [s1]
 10651: 33 08 08                 a1 = 0x8
 10654: 33 00 6e 01              ra = 0x16e
 10658: 28 aa 1e                 jump @1054
      :                          @531 [@dyn 136]
 10661: 33 05 03                 s0 = 0x3
 10664: 95 17 58                 a0 = sp + 0x58
 10667: 33 08 03                 a1 = 0x3
 10670: 0a 0e                    ecalli 14 // 'solicit'
 10672: 7b 67 70                 u64 [s1 + 0x70] = a0
 10675: 33 08 01                 a1 = 0x1
 10678: 50 20 12 01 96 1e        ra = 274, jump @1054
      :                          @532 [@dyn 137]
 10684: 82 67 70                 a0 = u64 [s1 + 0x70]
 10687: 88 77 01                 a0 = a0 <u 0x1
 10690: 97 77 01                 a0 = a0 << 0x1
 10693: 7b 17 10                 u64 [sp + 0x10] = a0
 10696: 95 17 48                 a0 = sp + 0x48
 10699: 7b 67 18                 u64 [s1 + 0x18] = a0
 10702: 33 08 16                 a1 = 0x16
 10705: 7b 68 20                 u64 [s1 + 0x20] = a1
 10708: 95 17 ff 07              a0 = sp + 0x7ff
 10712: 95 77 11 04              a0 = a0 + 0x411
 10716: 7b 67 28                 u64 [s1 + 0x28] = a0
 10719: 7b 18 20                 u64 [sp + 0x20] = a1
 10722: 7b 68 30                 u64 [s1 + 0x30] = a1
 10725: 33 07 f0 07 01           a0 = 0x107f0
 10730: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10734: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 10738: 49 21 c0 01              u64 [sp + 448] = 0
 10742: 95 17 ff 07              a0 = sp + 0x7ff
 10746: 95 77 b9 03              a0 = a0 + 0x3b9
 10750: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10754: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10759: 95 17 ff 07              a0 = sp + 0x7ff
 10763: 95 77 e9 03              a0 = a0 + 0x3e9
 10767: 95 18 a0 01              a1 = sp + 0x1a0
 10771: 50 20 14 01 c5 10        ra = 276, jump @777
      :                          @533 [@dyn 138]
 10777: 95 17 ff 07              a0 = sp + 0x7ff
 10781: 95 77 a1 03              a0 = a0 + 0x3a1
 10785: 82 76 50                 s1 = u64 [a0 + 0x50]
 10788: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10791: 82 75 48                 s0 = u64 [a0 + 0x48]
 10794: 82 17 10                 a0 = u64 [sp + 0x10]
 10797: 33 08                    a1 = 0
 10799: 33 09                    a2 = 0
 10801: 64 6a                    a3 = s1
 10803: 33 00 16 01              ra = 0x116
 10807: 0a 64                    ecalli 100 // 'log'
 10809: 01                       fallthrough
      :                          @534 [@dyn 139]
 10810: 82 17 38                 a0 = u64 [sp + 0x38]
 10813: c8 57 07                 a0 = a0 + s0
 10816: 53 37 00 00 f0 25        jump @540 if a0 <u 4293918720
      :                          @535
 10822: 33 07 40 00 03           a0 = 0x30040
 10827: 95 77 00 00 10           a0 = a0 + 0x100000
 10832: 01                       fallthrough
      :                          @536
 10833: 82 78                    a1 = u64 [a0]
 10835: c9 87 09                 a2 = a0 - a1
 10838: ab 69 0f                 jump @540 if a2 != s1
      :                          @537
 10841: c9 58 09                 a2 = a1 - s0
 10844: 01                       fallthrough
      :                          @538
 10845: 82 7a                    a3 = u64 [a0]
 10847: ab 8a f2                 jump @536 if a3 != a1
      :                          @539
 10850: 7b 79                    u64 [a0] = a2
 10852: 01                       fallthrough
      :                          @540
 10853: 95 17 58                 a0 = sp + 0x58
 10856: 33 08 03                 a1 = 0x3
 10859: 0a 0d                    ecalli 13 // 'query'
 10861: 95 19 ff 07              a2 = sp + 0x7ff
 10865: 95 99 a1 03              a2 = a2 + 0x3a1
 10869: 95 18 48                 a1 = sp + 0x48
 10872: 7b 98 18                 u64 [a2 + 0x18] = a1
 10875: 95 18 ff 07              a1 = sp + 0x7ff
 10879: 95 88 19 04              a1 = a1 + 0x419
 10883: 7b 98 28                 u64 [a2 + 0x28] = a1
 10886: 82 18 20                 a1 = u64 [sp + 0x20]
 10889: 7b 98 20                 u64 [a2 + 0x20] = a1
 10892: 7b 98 30                 u64 [a2 + 0x30] = a1
 10895: 95 19 ff 07              a2 = sp + 0x7ff
 10899: 95 99 a1 03              a2 = a2 + 0x3a1
 10903: 33 08 e0 0b 01           a1 = 0x10be0
 10908: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10912: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10917: 49 21 c0 01              u64 [sp + 448] = 0
 10921: 95 18 ff 07              a1 = sp + 0x7ff
 10925: 95 88 b9 03              a1 = a1 + 0x3b9
 10929: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10933: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10938: 7b 97 78                 u64 [a2 + 0x78] = a0
 10941: 8e 77                    a0 = a0 >u 0
 10943: 97 77 01                 a0 = a0 << 0x1
 10946: 7b 17 20                 u64 [sp + 0x20] = a0
 10949: 95 17 ff 07              a0 = sp + 0x7ff
 10953: 95 77 e9 03              a0 = a0 + 0x3e9
 10957: 95 18 a0 01              a1 = sp + 0x1a0
 10961: 95 15 a0 01              s0 = sp + 0x1a0
 10965: 50 20 18 01 03 10        ra = 280, jump @777
      :                          @541 [@dyn 140]
 10971: 95 17 ff 07              a0 = sp + 0x7ff
 10975: 95 77 a1 03              a0 = a0 + 0x3a1
 10979: 82 76 50                 s1 = u64 [a0 + 0x50]
 10982: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10985: 82 77 48                 a0 = u64 [a0 + 0x48]
 10988: 7b 17 10                 u64 [sp + 0x10] = a0
 10991: 82 17 20                 a0 = u64 [sp + 0x20]
 10994: 33 08                    a1 = 0
 10996: 33 09                    a2 = 0
 10998: 64 6a                    a3 = s1
 11000: 33 00 1a 01              ra = 0x11a
 11004: 0a 64                    ecalli 100 // 'log'
 11006: 01                       fallthrough
      :                          @542 [@dyn 141]
 11007: 82 1c 10                 a5 = u64 [sp + 0x10]
 11010: 82 17 38                 a0 = u64 [sp + 0x38]
 11013: c8 c7 07                 a0 = a0 + a5
 11016: 53 37 00 00 f0 25        jump @548 if a0 <u 4293918720
      :                          @543
 11022: 33 07 40 00 03           a0 = 0x30040
 11027: 95 77 00 00 10           a0 = a0 + 0x100000
 11032: 01                       fallthrough
      :                          @544
 11033: 82 78                    a1 = u64 [a0]
 11035: c9 87 09                 a2 = a0 - a1
 11038: ab 69 0f                 jump @548 if a2 != s1
      :                          @545
 11041: c9 c8 09                 a2 = a1 - a5
 11044: 01                       fallthrough
      :                          @546
 11045: 82 7a                    a3 = u64 [a0]
 11047: ab 8a f2                 jump @544 if a3 != a1
      :                          @547
 11050: 7b 79                    u64 [a0] = a2
 11052: 01                       fallthrough
      :                          @548
 11053: 95 17 ff 07              a0 = sp + 0x7ff
 11057: 95 77 a1 03              a0 = a0 + 0x3a1
 11061: 82 77 78                 a0 = u64 [a0 + 0x78]
 11064: 33 08 02                 a1 = 0x2
 11067: 50 20 1c 01 11 1d        ra = 284, jump @1054
      :                          @549 [@dyn 142]
 11073: 33 09 00 0a              a2 = 0xa00
 11077: 95 17 a0 01              a0 = sp + 0x1a0
 11081: 33 08                    a1 = 0
 11083: 50 20 1e 01 ba 12        ra = 286, jump @844
      :                          @550 [@dyn 143]
 11089: 33 06 50                 s1 = 0x50
 11092: 01                       fallthrough
      :                          @551
 11093: 95 18 58                 a1 = sp + 0x58
 11096: 33 09 20                 a2 = 0x20
 11099: 64 57                    a0 = s0
 11101: 50 20 20 01 f6 11        ra = 288, jump @826
      :                          @552 [@dyn 144]
 11107: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 11110: 95 55 20                 s0 = s0 + 0x20
 11113: 52 06 ec                 jump @551 if s1 != 0
      :                          @553
 11116: 95 18 a0 01              a1 = sp + 0x1a0
 11120: 33 07                    a0 = 0
 11122: 0a 06                    ecalli 6 // 'assign'
 11124: 95 15 ff 07              s0 = sp + 0x7ff
 11128: 95 55 a1 03              s0 = s0 + 0x3a1
 11132: 7b 57 80 00              u64 [s0 + 0x80] = a0
 11136: 88 77 01                 a0 = a0 <u 0x1
 11139: 97 77 01                 a0 = a0 << 0x1
 11142: 7b 17 20                 u64 [sp + 0x20] = a0
 11145: 95 17 48                 a0 = sp + 0x48
 11148: 7b 57 48                 u64 [s0 + 0x48] = a0
 11151: 33 07 16                 a0 = 0x16
 11154: 7b 57 50                 u64 [s0 + 0x50] = a0
 11157: 95 18 ff 07              a1 = sp + 0x7ff
 11161: 95 88 21 04              a1 = a1 + 0x421
 11165: 7b 58 58                 u64 [s0 + 0x58] = a1
 11168: 7b 57 60                 u64 [s0 + 0x60] = a0
 11171: 33 07 20 0c 01           a0 = 0x10c20
 11176: 7b 57 18                 u64 [s0 + 0x18] = a0
 11179: 49 15 20 03              u64 [s0 + 32] = 0x3
 11183: 49 15 38                 u64 [s0 + 56] = 0
 11186: 95 17 ff 07              a0 = sp + 0x7ff
 11190: 95 77 e9 03              a0 = a0 + 0x3e9
 11194: 7b 57 28                 u64 [s0 + 0x28] = a0
 11197: 49 15 30 02              u64 [s0 + 48] = 0x2
 11201: 95 17 ff 07              a0 = sp + 0x7ff
 11205: 95 77 a1 03              a0 = a0 + 0x3a1
 11209: 95 18 ff 07              a1 = sp + 0x7ff
 11213: 95 88 b9 03              a1 = a1 + 0x3b9
 11217: 50 20 22 01 07 0f        ra = 290, jump @777
      :                          @554 [@dyn 145]
 11223: 82 56 08                 s1 = u64 [s0 + 0x8]
 11226: 82 5b 10                 a4 = u64 [s0 + 0x10]
 11229: 82 55                    s0 = u64 [s0]
 11231: 82 17 20                 a0 = u64 [sp + 0x20]
 11234: 33 08                    a1 = 0
 11236: 33 09                    a2 = 0
 11238: 64 6a                    a3 = s1
 11240: 33 00 24 01              ra = 0x124
 11244: 0a 64                    ecalli 100 // 'log'
 11246: 01                       fallthrough
      :                          @555 [@dyn 146]
 11247: 82 17 38                 a0 = u64 [sp + 0x38]
 11250: c8 57 07                 a0 = a0 + s0
 11253: 53 37 00 00 f0 79 05     jump @626 if a0 <u 4293918720
      :                          @556
 11260: 33 07 40 00 03           a0 = 0x30040
 11265: 95 77 00 00 10           a0 = a0 + 0x100000
 11270: 01                       fallthrough
      :                          @557
 11271: 82 78                    a1 = u64 [a0]
 11273: c9 87 09                 a2 = a0 - a1
 11276: ab 69 62 05              jump @626 if a2 != s1
      :                          @558
 11280: c9 58 09                 a2 = a1 - s0
 11283: 01                       fallthrough
      :                          @559
 11284: 82 7a                    a3 = u64 [a0]
 11286: ab 8a f1                 jump @557 if a3 != a1
      :                          @560
 11289: 7b 79                    u64 [a0] = a2
 11291: 33 0b                    a4 = 0
 11293: 01                       fallthrough
      :                          @561
 11294: ab 8a e9                 jump @557 if a3 != a1
      :                          @562
 11297: 28 4d 05                 jump @626
      :                          @563 [@dyn 147]
 11300: 33 05 03                 s0 = 0x3
 11303: 95 18 58                 a1 = sp + 0x58
 11306: 95 19 98 00              a2 = sp + 0x98
 11310: 33 0b 03                 a4 = 0x3
 11313: 82 17 30                 a0 = u64 [sp + 0x30]
 11316: 33 0a                    a3 = 0
 11318: 0a 01                    ecalli 1 // 'lookup'
 11320: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11324: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 11327: 88 77 01                 a0 = a0 <u 0x1
 11330: 97 77 01                 a0 = a0 << 0x1
 11333: 7b 17 10                 u64 [sp + 0x10] = a0
 11336: 95 17 48                 a0 = sp + 0x48
 11339: 7b 67 18                 u64 [s1 + 0x18] = a0
 11342: 33 08 16                 a1 = 0x16
 11345: 7b 68 20                 u64 [s1 + 0x20] = a1
 11348: 95 17 ff 07              a0 = sp + 0x7ff
 11352: 95 77 21 04              a0 = a0 + 0x421
 11356: 7b 67 28                 u64 [s1 + 0x28] = a0
 11359: 7b 18 20                 u64 [sp + 0x20] = a1
 11362: 7b 68 30                 u64 [s1 + 0x30] = a1
 11365: 33 07 68 0c 01           a0 = 0x10c68
 11370: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11374: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11378: 49 21 c0 01              u64 [sp + 448] = 0
 11382: 95 17 ff 07              a0 = sp + 0x7ff
 11386: 95 77 b9 03              a0 = a0 + 0x3b9
 11390: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11394: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11399: 95 17 ff 07              a0 = sp + 0x7ff
 11403: 95 77 e9 03              a0 = a0 + 0x3e9
 11407: 95 18 a0 01              a1 = sp + 0x1a0
 11411: 50 20 28 01 45 0e        ra = 296, jump @777
      :                          @564 [@dyn 148]
 11417: 95 17 ff 07              a0 = sp + 0x7ff
 11421: 95 77 a1 03              a0 = a0 + 0x3a1
 11425: 82 76 50                 s1 = u64 [a0 + 0x50]
 11428: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11431: 82 75 48                 s0 = u64 [a0 + 0x48]
 11434: 82 17 10                 a0 = u64 [sp + 0x10]
 11437: 33 08                    a1 = 0
 11439: 33 09                    a2 = 0
 11441: 64 6a                    a3 = s1
 11443: 33 00 2a 01              ra = 0x12a
 11447: 0a 64                    ecalli 100 // 'log'
 11449: 01                       fallthrough
      :                          @565 [@dyn 149]
 11450: 82 17 38                 a0 = u64 [sp + 0x38]
 11453: c8 57 07                 a0 = a0 + s0
 11456: 53 37 00 00 f0 25        jump @571 if a0 <u 4293918720
      :                          @566
 11462: 33 07 40 00 03           a0 = 0x30040
 11467: 95 77 00 00 10           a0 = a0 + 0x100000
 11472: 01                       fallthrough
      :                          @567
 11473: 82 78                    a1 = u64 [a0]
 11475: c9 87 09                 a2 = a0 - a1
 11478: ab 69 0f                 jump @571 if a2 != s1
      :                          @568
 11481: c9 58 09                 a2 = a1 - s0
 11484: 01                       fallthrough
      :                          @569
 11485: 82 7a                    a3 = u64 [a0]
 11487: ab 8a f2                 jump @567 if a3 != a1
      :                          @570
 11490: 7b 79                    u64 [a0] = a2
 11492: 01                       fallthrough
      :                          @571
 11493: 95 16 ff 07              s1 = sp + 0x7ff
 11497: 95 66 a1 03              s1 = s1 + 0x3a1
 11501: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11505: 33 08 01                 a1 = 0x1
 11508: 50 20 2c 01 58 1b        ra = 300, jump @1054
      :                          @572 [@dyn 150]
 11514: 95 17 58                 a0 = sp + 0x58
 11517: 33 08 03                 a1 = 0x3
 11520: 0a 0d                    ecalli 13 // 'query'
 11522: 95 18 48                 a1 = sp + 0x48
 11525: 7b 68 18                 u64 [s1 + 0x18] = a1
 11528: 82 18 20                 a1 = u64 [sp + 0x20]
 11531: 7b 68 20                 u64 [s1 + 0x20] = a1
 11534: 7b 68 30                 u64 [s1 + 0x30] = a1
 11537: 33 08 28 09 01           a1 = 0x10928
 11542: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11546: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11551: 49 21 c0 01              u64 [sp + 448] = 0
 11555: 95 18 ff 07              a1 = sp + 0x7ff
 11559: 95 88 b9 03              a1 = a1 + 0x3b9
 11563: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11567: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11572: 7b 67                    u64 [s1] = a0
 11574: 8e 77                    a0 = a0 >u 0
 11576: 97 77 01                 a0 = a0 << 0x1
 11579: 7b 17 20                 u64 [sp + 0x20] = a0
 11582: 7b 66 28                 u64 [s1 + 0x28] = s1
 11585: 95 17 ff 07              a0 = sp + 0x7ff
 11589: 95 77 e9 03              a0 = a0 + 0x3e9
 11593: 95 18 a0 01              a1 = sp + 0x1a0
 11597: 50 20 2e 01 8b 0d        ra = 302, jump @777
      :                          @573 [@dyn 151]
 11603: 82 65 50                 s0 = u64 [s1 + 0x50]
 11606: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11609: 82 66 48                 s1 = u64 [s1 + 0x48]
 11612: 82 17 20                 a0 = u64 [sp + 0x20]
 11615: 33 08                    a1 = 0
 11617: 33 09                    a2 = 0
 11619: 64 5a                    a3 = s0
 11621: 33 00 30 01              ra = 0x130
 11625: 0a 64                    ecalli 100 // 'log'
 11627: 01                       fallthrough
      :                          @574 [@dyn 152]
 11628: 82 17 38                 a0 = u64 [sp + 0x38]
 11631: c8 67 07                 a0 = a0 + s1
 11634: 53 37 00 00 f0 96 01     jump @599 if a0 <u 4293918720
      :                          @575
 11641: 33 07 40 00 03           a0 = 0x30040
 11646: 95 77 00 00 10           a0 = a0 + 0x100000
 11651: 01                       fallthrough
      :                          @576
 11652: 82 78                    a1 = u64 [a0]
 11654: c9 87 09                 a2 = a0 - a1
 11657: ab 59 7f 01              jump @599 if a2 != s0
      :                          @577
 11661: c9 68 09                 a2 = a1 - s1
 11664: 01                       fallthrough
      :                          @578
 11665: 82 7a                    a3 = u64 [a0]
 11667: ab 8a f1                 jump @576 if a3 != a1
      :                          @579
 11670: 7b 79                    u64 [a0] = a2
 11672: 33 0b                    a4 = 0
 11674: 01                       fallthrough
      :                          @580
 11675: ab 8a e9                 jump @576 if a3 != a1
      :                          @581
 11678: 28 6a 01                 jump @599
      :                          @582 [@dyn 153]
 11681: 33 05 03                 s0 = 0x3
 11684: 95 17 58                 a0 = sp + 0x58
 11687: 33 08 03                 a1 = 0x3
 11690: 0a 0f                    ecalli 15 // 'forget'
 11692: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11696: 88 77 01                 a0 = a0 <u 0x1
 11699: 97 77 01                 a0 = a0 << 0x1
 11702: 7b 17 10                 u64 [sp + 0x10] = a0
 11705: 95 17 48                 a0 = sp + 0x48
 11708: 7b 67 18                 u64 [s1 + 0x18] = a0
 11711: 33 08 16                 a1 = 0x16
 11714: 7b 68 20                 u64 [s1 + 0x20] = a1
 11717: 95 17 ff 07              a0 = sp + 0x7ff
 11721: 95 77 21 04              a0 = a0 + 0x421
 11725: 7b 67 28                 u64 [s1 + 0x28] = a0
 11728: 7b 18 20                 u64 [sp + 0x20] = a1
 11731: 7b 68 30                 u64 [s1 + 0x30] = a1
 11734: 33 07 e0 08 01           a0 = 0x108e0
 11739: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11743: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11747: 49 21 c0 01              u64 [sp + 448] = 0
 11751: 95 17 ff 07              a0 = sp + 0x7ff
 11755: 95 77 b9 03              a0 = a0 + 0x3b9
 11759: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11763: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11768: 95 17 ff 07              a0 = sp + 0x7ff
 11772: 95 77 e9 03              a0 = a0 + 0x3e9
 11776: 95 18 a0 01              a1 = sp + 0x1a0
 11780: 50 20 34 01 d4 0c        ra = 308, jump @777
      :                          @583 [@dyn 154]
 11786: 95 17 ff 07              a0 = sp + 0x7ff
 11790: 95 77 a1 03              a0 = a0 + 0x3a1
 11794: 82 76 50                 s1 = u64 [a0 + 0x50]
 11797: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11800: 82 75 48                 s0 = u64 [a0 + 0x48]
 11803: 82 17 10                 a0 = u64 [sp + 0x10]
 11806: 33 08                    a1 = 0
 11808: 33 09                    a2 = 0
 11810: 64 6a                    a3 = s1
 11812: 33 00 36 01              ra = 0x136
 11816: 0a 64                    ecalli 100 // 'log'
 11818: 01                       fallthrough
      :                          @584 [@dyn 155]
 11819: 82 17 38                 a0 = u64 [sp + 0x38]
 11822: c8 57 07                 a0 = a0 + s0
 11825: 53 37 00 00 f0 25        jump @590 if a0 <u 4293918720
      :                          @585
 11831: 33 07 40 00 03           a0 = 0x30040
 11836: 95 77 00 00 10           a0 = a0 + 0x100000
 11841: 01                       fallthrough
      :                          @586
 11842: 82 78                    a1 = u64 [a0]
 11844: c9 87 09                 a2 = a0 - a1
 11847: ab 69 0f                 jump @590 if a2 != s1
      :                          @587
 11850: c9 58 09                 a2 = a1 - s0
 11853: 01                       fallthrough
      :                          @588
 11854: 82 7a                    a3 = u64 [a0]
 11856: ab 8a f2                 jump @586 if a3 != a1
      :                          @589
 11859: 7b 79                    u64 [a0] = a2
 11861: 01                       fallthrough
      :                          @590
 11862: 95 16 ff 07              s1 = sp + 0x7ff
 11866: 95 66 a1 03              s1 = s1 + 0x3a1
 11870: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11874: 33 08 01                 a1 = 0x1
 11877: 50 20 38 01 e7 19        ra = 312, jump @1054
      :                          @591 [@dyn 156]
 11883: 95 17 58                 a0 = sp + 0x58
 11886: 33 08 03                 a1 = 0x3
 11889: 0a 0d                    ecalli 13 // 'query'
 11891: 95 18 48                 a1 = sp + 0x48
 11894: 7b 68 18                 u64 [s1 + 0x18] = a1
 11897: 82 18 20                 a1 = u64 [sp + 0x20]
 11900: 7b 68 20                 u64 [s1 + 0x20] = a1
 11903: 7b 68 30                 u64 [s1 + 0x30] = a1
 11906: 33 08 98 0c 01           a1 = 0x10c98
 11911: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11915: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11920: 49 21 c0 01              u64 [sp + 448] = 0
 11924: 95 18 ff 07              a1 = sp + 0x7ff
 11928: 95 88 b9 03              a1 = a1 + 0x3b9
 11932: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11936: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11941: 7b 67                    u64 [s1] = a0
 11943: 8e 77                    a0 = a0 >u 0
 11945: 97 77 01                 a0 = a0 << 0x1
 11948: 7b 17 20                 u64 [sp + 0x20] = a0
 11951: 7b 66 28                 u64 [s1 + 0x28] = s1
 11954: 95 17 ff 07              a0 = sp + 0x7ff
 11958: 95 77 e9 03              a0 = a0 + 0x3e9
 11962: 95 18 a0 01              a1 = sp + 0x1a0
 11966: 50 20 3a 01 1a 0c        ra = 314, jump @777
      :                          @592 [@dyn 157]
 11972: 82 65 50                 s0 = u64 [s1 + 0x50]
 11975: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11978: 82 66 48                 s1 = u64 [s1 + 0x48]
 11981: 82 17 20                 a0 = u64 [sp + 0x20]
 11984: 33 08                    a1 = 0
 11986: 33 09                    a2 = 0
 11988: 64 5a                    a3 = s0
 11990: 33 00 3c 01              ra = 0x13c
 11994: 0a 64                    ecalli 100 // 'log'
 11996: 01                       fallthrough
      :                          @593 [@dyn 158]
 11997: 82 17 38                 a0 = u64 [sp + 0x38]
 12000: c8 67 07                 a0 = a0 + s1
 12003: 53 37 00 00 f0 25        jump @599 if a0 <u 4293918720
      :                          @594
 12009: 33 07 40 00 03           a0 = 0x30040
 12014: 95 77 00 00 10           a0 = a0 + 0x100000
 12019: 01                       fallthrough
      :                          @595
 12020: 82 78                    a1 = u64 [a0]
 12022: c9 87 09                 a2 = a0 - a1
 12025: ab 59 0f                 jump @599 if a2 != s0
      :                          @596
 12028: c9 68 09                 a2 = a1 - s1
 12031: 01                       fallthrough
      :                          @597
 12032: 82 7a                    a3 = u64 [a0]
 12034: ab 8a f2                 jump @595 if a3 != a1
      :                          @598
 12037: 7b 79                    u64 [a0] = a2
 12039: 01                       fallthrough
      :                          @599
 12040: 95 16 ff 07              s1 = sp + 0x7ff
 12044: 95 66 a1 03              s1 = s1 + 0x3a1
 12048: 82 67                    a0 = u64 [s1]
 12050: 33 08 02                 a1 = 0x2
 12053: 33 00 6e 01              ra = 0x16e
 12057: 28 33 19                 jump @1054
      :                          @600 [@dyn 159]
 12060: 33 05 03                 s0 = 0x3
 12063: 95 17 58                 a0 = sp + 0x58
 12066: 33 08 03                 a1 = 0x3
 12069: 33 09 8f 03              a2 = 0x38f
 12073: 33 0a 8f 03              a3 = 0x38f
 12077: 0a 09                    ecalli 9 // 'new'
 12079: 8e 78                    a1 = a0 >u 0
 12081: 7b 67 70                 u64 [s1 + 0x70] = a0
 12084: 97 88 01                 a1 = a1 << 0x1
 12087: 7b 18 10                 u64 [sp + 0x10] = a1
 12090: 95 17 48                 a0 = sp + 0x48
 12093: 7b 67 18                 u64 [s1 + 0x18] = a0
 12096: 33 08 16                 a1 = 0x16
 12099: 7b 68 20                 u64 [s1 + 0x20] = a1
 12102: 95 17 ff 07              a0 = sp + 0x7ff
 12106: 95 77 11 04              a0 = a0 + 0x411
 12110: 7b 67 28                 u64 [s1 + 0x28] = a0
 12113: 7b 18 20                 u64 [sp + 0x20] = a1
 12116: 7b 68 30                 u64 [s1 + 0x30] = a1
 12119: 33 07 f0 0c 01           a0 = 0x10cf0
 12124: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12128: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12132: 49 21 c0 01              u64 [sp + 448] = 0
 12136: 95 17 ff 07              a0 = sp + 0x7ff
 12140: 95 77 b9 03              a0 = a0 + 0x3b9
 12144: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12148: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12153: 95 17 ff 07              a0 = sp + 0x7ff
 12157: 95 77 e9 03              a0 = a0 + 0x3e9
 12161: 95 18 a0 01              a1 = sp + 0x1a0
 12165: 50 20 40 01 53 0b        ra = 320, jump @777
      :                          @601 [@dyn 160]
 12171: 95 17 ff 07              a0 = sp + 0x7ff
 12175: 95 77 a1 03              a0 = a0 + 0x3a1
 12179: 82 76 50                 s1 = u64 [a0 + 0x50]
 12182: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12185: 82 75 48                 s0 = u64 [a0 + 0x48]
 12188: 82 17 10                 a0 = u64 [sp + 0x10]
 12191: 33 08                    a1 = 0
 12193: 33 09                    a2 = 0
 12195: 64 6a                    a3 = s1
 12197: 33 00 42 01              ra = 0x142
 12201: 0a 64                    ecalli 100 // 'log'
 12203: 01                       fallthrough
      :                          @602 [@dyn 161]
 12204: 82 17 38                 a0 = u64 [sp + 0x38]
 12207: c8 57 07                 a0 = a0 + s0
 12210: 53 37 00 00 f0 25        jump @608 if a0 <u 4293918720
      :                          @603
 12216: 33 07 40 00 03           a0 = 0x30040
 12221: 95 77 00 00 10           a0 = a0 + 0x100000
 12226: 01                       fallthrough
      :                          @604
 12227: 82 78                    a1 = u64 [a0]
 12229: c9 87 09                 a2 = a0 - a1
 12232: ab 69 0f                 jump @608 if a2 != s1
      :                          @605
 12235: c9 58 09                 a2 = a1 - s0
 12238: 01                       fallthrough
      :                          @606
 12239: 82 7a                    a3 = u64 [a0]
 12241: ab 8a f2                 jump @604 if a3 != a1
      :                          @607
 12244: 7b 79                    u64 [a0] = a2
 12246: 01                       fallthrough
      :                          @608
 12247: 95 16 ff 07              s1 = sp + 0x7ff
 12251: 95 66 a1 03              s1 = s1 + 0x3a1
 12255: 82 67 70                 a0 = u64 [s1 + 0x70]
 12258: 33 08 01                 a1 = 0x1
 12261: 50 20 44 01 67 18        ra = 324, jump @1054
      :                          @609 [@dyn 162]
 12267: 95 17 58                 a0 = sp + 0x58
 12270: 33 08 8f 03              a1 = 0x38f
 12274: 33 09 8f 03              a2 = 0x38f
 12278: 0a 0a                    ecalli 10 // 'upgrade'
 12280: 95 18 48                 a1 = sp + 0x48
 12283: 7b 68 18                 u64 [s1 + 0x18] = a1
 12286: 95 18 ff 07              a1 = sp + 0x7ff
 12290: 95 88 19 04              a1 = a1 + 0x419
 12294: 7b 68 28                 u64 [s1 + 0x28] = a1
 12297: 82 18 20                 a1 = u64 [sp + 0x20]
 12300: 7b 68 20                 u64 [s1 + 0x20] = a1
 12303: 7b 68 30                 u64 [s1 + 0x30] = a1
 12306: 33 08 30 0d 01           a1 = 0x10d30
 12311: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12315: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12320: 49 21 c0 01              u64 [sp + 448] = 0
 12324: 95 18 ff 07              a1 = sp + 0x7ff
 12328: 95 88 b9 03              a1 = a1 + 0x3b9
 12332: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12336: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12341: 7b 67 78                 u64 [s1 + 0x78] = a0
 12344: 88 77 01                 a0 = a0 <u 0x1
 12347: 97 77 01                 a0 = a0 << 0x1
 12350: 7b 17 20                 u64 [sp + 0x20] = a0
 12353: 95 17 ff 07              a0 = sp + 0x7ff
 12357: 95 77 e9 03              a0 = a0 + 0x3e9
 12361: 95 18 a0 01              a1 = sp + 0x1a0
 12365: 50 20 46 01 8b 0a        ra = 326, jump @777
      :                          @610 [@dyn 163]
 12371: 82 65 50                 s0 = u64 [s1 + 0x50]
 12374: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12377: 82 66 48                 s1 = u64 [s1 + 0x48]
 12380: 82 17 20                 a0 = u64 [sp + 0x20]
 12383: 33 08                    a1 = 0
 12385: 33 09                    a2 = 0
 12387: 64 5a                    a3 = s0
 12389: 33 00 48 01              ra = 0x148
 12393: 0a 64                    ecalli 100 // 'log'
 12395: 01                       fallthrough
      :                          @611 [@dyn 164]
 12396: 82 17 38                 a0 = u64 [sp + 0x38]
 12399: c8 67 07                 a0 = a0 + s1
 12402: 53 37 00 00 f0 25        jump @617 if a0 <u 4293918720
      :                          @612
 12408: 33 07 40 00 03           a0 = 0x30040
 12413: 95 77 00 00 10           a0 = a0 + 0x100000
 12418: 01                       fallthrough
      :                          @613
 12419: 82 78                    a1 = u64 [a0]
 12421: c9 87 09                 a2 = a0 - a1
 12424: ab 59 0f                 jump @617 if a2 != s0
      :                          @614
 12427: c9 68 09                 a2 = a1 - s1
 12430: 01                       fallthrough
      :                          @615
 12431: 82 7a                    a3 = u64 [a0]
 12433: ab 8a f2                 jump @613 if a3 != a1
      :                          @616
 12436: 7b 79                    u64 [a0] = a2
 12438: 01                       fallthrough
      :                          @617
 12439: 95 15 ff 07              s0 = sp + 0x7ff
 12443: 95 55 a1 03              s0 = s0 + 0x3a1
 12447: 82 57 78                 a0 = u64 [s0 + 0x78]
 12450: 33 08 02                 a1 = 0x2
 12453: 33 06 02                 s1 = 0x2
 12456: 50 20 4a 01 a4 17        ra = 330, jump @1054
      :                          @618 [@dyn 165]
 12462: 48 05 8f 03              u32 [s0 + 0] = 0x38f
 12466: 48 15 08                 u32 [s0 + 8] = 0
 12469: 48 15 04 8f 03           u32 [s0 + 4] = 0x38f
 12474: 33 08 01                 a1 = 0x1
 12477: 33 09 01                 a2 = 0x1
 12480: 95 1a ff 07              a3 = sp + 0x7ff
 12484: 95 aa a1 03              a3 = a3 + 0x3a1
 12488: 33 0b 01                 a4 = 0x1
 12491: 33 07                    a0 = 0
 12493: 0a 05                    ecalli 5 // 'bless'
 12495: 7b 57 80 00              u64 [s0 + 0x80] = a0
 12499: 88 77 01                 a0 = a0 <u 0x1
 12502: 97 77 01                 a0 = a0 << 0x1
 12505: 7b 17 20                 u64 [sp + 0x20] = a0
 12508: 95 17 48                 a0 = sp + 0x48
 12511: 7b 57 18                 u64 [s0 + 0x18] = a0
 12514: 33 07 16                 a0 = 0x16
 12517: 7b 57 20                 u64 [s0 + 0x20] = a0
 12520: 95 18 ff 07              a1 = sp + 0x7ff
 12524: 95 88 21 04              a1 = a1 + 0x421
 12528: 7b 58 28                 u64 [s0 + 0x28] = a1
 12531: 7b 57 30                 u64 [s0 + 0x30] = a0
 12534: 33 07 70 0d 01           a0 = 0x10d70
 12539: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12543: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12548: 49 21 c0 01              u64 [sp + 448] = 0
 12552: 95 17 ff 07              a0 = sp + 0x7ff
 12556: 95 77 b9 03              a0 = a0 + 0x3b9
 12560: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12564: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 12568: 95 17 ff 07              a0 = sp + 0x7ff
 12572: 95 77 e9 03              a0 = a0 + 0x3e9
 12576: 95 18 a0 01              a1 = sp + 0x1a0
 12580: 50 20 4c 01 b4 09        ra = 332, jump @777
      :                          @619 [@dyn 166]
 12586: 82 56 50                 s1 = u64 [s0 + 0x50]
 12589: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12592: 82 55 48                 s0 = u64 [s0 + 0x48]
 12595: 82 17 20                 a0 = u64 [sp + 0x20]
 12598: 33 08                    a1 = 0
 12600: 33 09                    a2 = 0
 12602: 64 6a                    a3 = s1
 12604: 33 00 4e 01              ra = 0x14e
 12608: 0a 64                    ecalli 100 // 'log'
 12610: 01                       fallthrough
      :                          @620 [@dyn 167]
 12611: 82 17 38                 a0 = u64 [sp + 0x38]
 12614: c8 57 07                 a0 = a0 + s0
 12617: 53 37 00 00 f0 25        jump @626 if a0 <u 4293918720
      :                          @621
 12623: 33 07 40 00 03           a0 = 0x30040
 12628: 95 77 00 00 10           a0 = a0 + 0x100000
 12633: 01                       fallthrough
      :                          @622
 12634: 82 78                    a1 = u64 [a0]
 12636: c9 87 09                 a2 = a0 - a1
 12639: ab 69 0f                 jump @626 if a2 != s1
      :                          @623
 12642: c9 58 09                 a2 = a1 - s0
 12645: 01                       fallthrough
      :                          @624
 12646: 82 7a                    a3 = u64 [a0]
 12648: ab 8a f2                 jump @622 if a3 != a1
      :                          @625
 12651: 7b 79                    u64 [a0] = a2
 12653: 01                       fallthrough
      :                          @626
 12654: 95 16 ff 07              s1 = sp + 0x7ff
 12658: 95 66 a1 03              s1 = s1 + 0x3a1
 12662: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12666: 33 08 05                 a1 = 0x5
 12669: 33 00 6e 01              ra = 0x16e
 12673: 28 cb 16                 jump @1054
      :                          @627 [@dyn 168]
 12676: 33 05 03                 s0 = 0x3
 12679: 95 17 55                 a0 = sp + 0x55
 12682: 33 08 03                 a1 = 0x3
 12685: 33 09                    a2 = 0
 12687: 33 0a                    a3 = 0
 12689: 0a 03                    ecalli 3 // 'write'
 12691: 7b 67 68                 u64 [s1 + 0x68] = a0
 12694: 95 77 01                 a0 = a0 + 0x1
 12697: 88 77 01                 a0 = a0 <u 0x1
 12700: 97 77 01                 a0 = a0 << 0x1
 12703: 7b 17 10                 u64 [sp + 0x10] = a0
 12706: 95 17 48                 a0 = sp + 0x48
 12709: 7b 67 18                 u64 [s1 + 0x18] = a0
 12712: 33 08 16                 a1 = 0x16
 12715: 7b 68 20                 u64 [s1 + 0x20] = a1
 12718: 95 17 ff 07              a0 = sp + 0x7ff
 12722: 95 77 09 04              a0 = a0 + 0x409
 12726: 7b 67 28                 u64 [s1 + 0x28] = a0
 12729: 7b 18 20                 u64 [sp + 0x20] = a1
 12732: 7b 68 30                 u64 [s1 + 0x30] = a1
 12735: 33 07 b8 0d 01           a0 = 0x10db8
 12740: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12744: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12748: 49 21 c0 01              u64 [sp + 448] = 0
 12752: 95 17 ff 07              a0 = sp + 0x7ff
 12756: 95 77 b9 03              a0 = a0 + 0x3b9
 12760: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12764: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12769: 95 17 ff 07              a0 = sp + 0x7ff
 12773: 95 77 e9 03              a0 = a0 + 0x3e9
 12777: 95 18 a0 01              a1 = sp + 0x1a0
 12781: 50 20 52 01 eb 08        ra = 338, jump @777
      :                          @628 [@dyn 169]
 12787: 95 17 ff 07              a0 = sp + 0x7ff
 12791: 95 77 a1 03              a0 = a0 + 0x3a1
 12795: 82 76 50                 s1 = u64 [a0 + 0x50]
 12798: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12801: 82 75 48                 s0 = u64 [a0 + 0x48]
 12804: 82 17 10                 a0 = u64 [sp + 0x10]
 12807: 33 08                    a1 = 0
 12809: 33 09                    a2 = 0
 12811: 64 6a                    a3 = s1
 12813: 33 00 54 01              ra = 0x154
 12817: 0a 64                    ecalli 100 // 'log'
 12819: 01                       fallthrough
      :                          @629 [@dyn 170]
 12820: 82 17 38                 a0 = u64 [sp + 0x38]
 12823: c8 57 07                 a0 = a0 + s0
 12826: 53 37 00 00 f0 25        jump @635 if a0 <u 4293918720
      :                          @630
 12832: 33 07 40 00 03           a0 = 0x30040
 12837: 95 77 00 00 10           a0 = a0 + 0x100000
 12842: 01                       fallthrough
      :                          @631
 12843: 82 78                    a1 = u64 [a0]
 12845: c9 87 09                 a2 = a0 - a1
 12848: ab 69 0f                 jump @635 if a2 != s1
      :                          @632
 12851: c9 58 09                 a2 = a1 - s0
 12854: 01                       fallthrough
      :                          @633
 12855: 82 7a                    a3 = u64 [a0]
 12857: ab 8a f2                 jump @631 if a3 != a1
      :                          @634
 12860: 7b 79                    u64 [a0] = a2
 12862: 01                       fallthrough
      :                          @635
 12863: 95 16 ff 07              s1 = sp + 0x7ff
 12867: 95 66 a1 03              s1 = s1 + 0x3a1
 12871: 82 67 68                 a0 = u64 [s1 + 0x68]
 12874: 33 08 01                 a1 = 0x1
 12877: 50 20 56 01 ff 15        ra = 342, jump @1054
      :                          @636 [@dyn 171]
 12883: 95 17 55                 a0 = sp + 0x55
 12886: 33 08 03                 a1 = 0x3
 12889: 95 19 52                 a2 = sp + 0x52
 12892: 33 0a 03                 a3 = 0x3
 12895: 0a 03                    ecalli 3 // 'write'
 12897: 95 18 48                 a1 = sp + 0x48
 12900: 7b 68 18                 u64 [s1 + 0x18] = a1
 12903: 95 18 ff 07              a1 = sp + 0x7ff
 12907: 95 88 11 04              a1 = a1 + 0x411
 12911: 7b 68 28                 u64 [s1 + 0x28] = a1
 12914: 82 18 20                 a1 = u64 [sp + 0x20]
 12917: 7b 68 20                 u64 [s1 + 0x20] = a1
 12920: 7b 68 30                 u64 [s1 + 0x30] = a1
 12923: 33 08 e8 0d 01           a1 = 0x10de8
 12928: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12932: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12937: 49 21 c0 01              u64 [sp + 448] = 0
 12941: 95 18 ff 07              a1 = sp + 0x7ff
 12945: 95 88 b9 03              a1 = a1 + 0x3b9
 12949: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12953: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12958: 7b 67 70                 u64 [s1 + 0x70] = a0
 12961: 95 77 01                 a0 = a0 + 0x1
 12964: 88 77 01                 a0 = a0 <u 0x1
 12967: 97 77 01                 a0 = a0 << 0x1
 12970: 7b 17 20                 u64 [sp + 0x20] = a0
 12973: 95 17 ff 07              a0 = sp + 0x7ff
 12977: 95 77 e9 03              a0 = a0 + 0x3e9
 12981: 95 18 a0 01              a1 = sp + 0x1a0
 12985: 50 20 58 01 1f 08        ra = 344, jump @777
      :                          @637 [@dyn 172]
 12991: 82 65 50                 s0 = u64 [s1 + 0x50]
 12994: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12997: 82 66 48                 s1 = u64 [s1 + 0x48]
 13000: 82 17 20                 a0 = u64 [sp + 0x20]
 13003: 33 08                    a1 = 0
 13005: 33 09                    a2 = 0
 13007: 64 5a                    a3 = s0
 13009: 33 00 5a 01              ra = 0x15a
 13013: 0a 64                    ecalli 100 // 'log'
 13015: 01                       fallthrough
      :                          @638 [@dyn 173]
 13016: 82 17 38                 a0 = u64 [sp + 0x38]
 13019: c8 67 07                 a0 = a0 + s1
 13022: 53 37 00 00 f0 25        jump @644 if a0 <u 4293918720
      :                          @639
 13028: 33 07 40 00 03           a0 = 0x30040
 13033: 95 77 00 00 10           a0 = a0 + 0x100000
 13038: 01                       fallthrough
      :                          @640
 13039: 82 78                    a1 = u64 [a0]
 13041: c9 87 09                 a2 = a0 - a1
 13044: ab 59 0f                 jump @644 if a2 != s0
      :                          @641
 13047: c9 68 09                 a2 = a1 - s1
 13050: 01                       fallthrough
      :                          @642
 13051: 82 7a                    a3 = u64 [a0]
 13053: ab 8a f2                 jump @640 if a3 != a1
      :                          @643
 13056: 7b 79                    u64 [a0] = a2
 13058: 01                       fallthrough
      :                          @644
 13059: 95 15 ff 07              s0 = sp + 0x7ff
 13063: 95 55 a1 03              s0 = s0 + 0x3a1
 13067: 82 57 70                 a0 = u64 [s0 + 0x70]
 13070: 33 08 02                 a1 = 0x2
 13073: 50 20 5c 01 3b 15        ra = 348, jump @1054
      :                          @645 [@dyn 174]
 13079: 33 06 03                 s1 = 0x3
 13082: 95 17 55                 a0 = sp + 0x55
 13085: 33 08 03                 a1 = 0x3
 13088: 33 09                    a2 = 0
 13090: 33 0a                    a3 = 0
 13092: 0a 03                    ecalli 3 // 'write'
 13094: 7b 57 78                 u64 [s0 + 0x78] = a0
 13097: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 13100: 88 77 01                 a0 = a0 <u 0x1
 13103: 97 77 01                 a0 = a0 << 0x1
 13106: 7b 17 10                 u64 [sp + 0x10] = a0
 13109: 95 17 48                 a0 = sp + 0x48
 13112: 7b 57 18                 u64 [s0 + 0x18] = a0
 13115: 33 08 16                 a1 = 0x16
 13118: 7b 58 20                 u64 [s0 + 0x20] = a1
 13121: 95 17 ff 07              a0 = sp + 0x7ff
 13125: 95 77 19 04              a0 = a0 + 0x419
 13129: 7b 57 28                 u64 [s0 + 0x28] = a0
 13132: 7b 18 20                 u64 [sp + 0x20] = a1
 13135: 7b 58 30                 u64 [s0 + 0x30] = a1
 13138: 33 07 18 0e 01           a0 = 0x10e18
 13143: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13147: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13151: 49 21 c0 01              u64 [sp + 448] = 0
 13155: 95 17 ff 07              a0 = sp + 0x7ff
 13159: 95 77 b9 03              a0 = a0 + 0x3b9
 13163: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13167: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13172: 95 17 ff 07              a0 = sp + 0x7ff
 13176: 95 77 e9 03              a0 = a0 + 0x3e9
 13180: 95 18 a0 01              a1 = sp + 0x1a0
 13184: 50 20 5e 01 58 07        ra = 350, jump @777
      :                          @646 [@dyn 175]
 13190: 82 56 50                 s1 = u64 [s0 + 0x50]
 13193: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13196: 82 55 48                 s0 = u64 [s0 + 0x48]
 13199: 82 17 10                 a0 = u64 [sp + 0x10]
 13202: 33 08                    a1 = 0
 13204: 33 09                    a2 = 0
 13206: 64 6a                    a3 = s1
 13208: 33 00 60 01              ra = 0x160
 13212: 0a 64                    ecalli 100 // 'log'
 13214: 01                       fallthrough
      :                          @647 [@dyn 176]
 13215: 82 17 38                 a0 = u64 [sp + 0x38]
 13218: c8 57 07                 a0 = a0 + s0
 13221: 53 37 00 00 f0 25        jump @653 if a0 <u 4293918720
      :                          @648
 13227: 33 07 40 00 03           a0 = 0x30040
 13232: 95 77 00 00 10           a0 = a0 + 0x100000
 13237: 01                       fallthrough
      :                          @649
 13238: 82 78                    a1 = u64 [a0]
 13240: c9 87 09                 a2 = a0 - a1
 13243: ab 69 0f                 jump @653 if a2 != s1
      :                          @650
 13246: c9 58 09                 a2 = a1 - s0
 13249: 01                       fallthrough
      :                          @651
 13250: 82 7a                    a3 = u64 [a0]
 13252: ab 8a f2                 jump @649 if a3 != a1
      :                          @652
 13255: 7b 79                    u64 [a0] = a2
 13257: 01                       fallthrough
      :                          @653
 13258: 95 16 ff 07              s1 = sp + 0x7ff
 13262: 95 66 a1 03              s1 = s1 + 0x3a1
 13266: 82 67 78                 a0 = u64 [s1 + 0x78]
 13269: 33 08 05                 a1 = 0x5
 13272: 50 20 62 01 74 14        ra = 354, jump @1054
      :                          @654 [@dyn 177]
 13278: 95 18 55                 a1 = sp + 0x55
 13281: 33 09 03                 a2 = 0x3
 13284: 95 1a 98 00              a3 = sp + 0x98
 13288: 33 0c 00 01              a5 = 0x100
 13292: 82 17 30                 a0 = u64 [sp + 0x30]
 13295: 33 0b                    a4 = 0
 13297: 0a 02                    ecalli 2 // 'read'
 13299: 95 18 48                 a1 = sp + 0x48
 13302: 7b 68 18                 u64 [s1 + 0x18] = a1
 13305: 95 18 ff 07              a1 = sp + 0x7ff
 13309: 95 88 21 04              a1 = a1 + 0x421
 13313: 7b 68 28                 u64 [s1 + 0x28] = a1
 13316: 82 18 20                 a1 = u64 [sp + 0x20]
 13319: 7b 68 20                 u64 [s1 + 0x20] = a1
 13322: 7b 68 30                 u64 [s1 + 0x30] = a1
 13325: 33 08 60 0e 01           a1 = 0x10e60
 13330: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13334: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13339: 49 21 c0 01              u64 [sp + 448] = 0
 13343: 95 18 ff 07              a1 = sp + 0x7ff
 13347: 95 88 b9 03              a1 = a1 + 0x3b9
 13351: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13355: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13360: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13364: 95 77 01                 a0 = a0 + 0x1
 13367: 88 77 01                 a0 = a0 <u 0x1
 13370: 97 77 01                 a0 = a0 << 0x1
 13373: 7b 17 20                 u64 [sp + 0x20] = a0
 13376: 95 17 ff 07              a0 = sp + 0x7ff
 13380: 95 77 e9 03              a0 = a0 + 0x3e9
 13384: 95 18 a0 01              a1 = sp + 0x1a0
 13388: 50 20 64 01 8c 06        ra = 356, jump @777
      :                          @655 [@dyn 178]
 13394: 82 65 50                 s0 = u64 [s1 + 0x50]
 13397: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13400: 82 66 48                 s1 = u64 [s1 + 0x48]
 13403: 82 17 20                 a0 = u64 [sp + 0x20]
 13406: 33 08                    a1 = 0
 13408: 33 09                    a2 = 0
 13410: 64 5a                    a3 = s0
 13412: 33 00 66 01              ra = 0x166
 13416: 0a 64                    ecalli 100 // 'log'
 13418: 01                       fallthrough
      :                          @656 [@dyn 179]
 13419: 82 17 38                 a0 = u64 [sp + 0x38]
 13422: c8 67 07                 a0 = a0 + s1
 13425: 53 37 00 00 f0 25        jump @662 if a0 <u 4293918720
      :                          @657
 13431: 33 07 40 00 03           a0 = 0x30040
 13436: 95 77 00 00 10           a0 = a0 + 0x100000
 13441: 01                       fallthrough
      :                          @658
 13442: 82 78                    a1 = u64 [a0]
 13444: c9 87 09                 a2 = a0 - a1
 13447: ab 59 0f                 jump @662 if a2 != s0
      :                          @659
 13450: c9 68 09                 a2 = a1 - s1
 13453: 01                       fallthrough
      :                          @660
 13454: 82 7a                    a3 = u64 [a0]
 13456: ab 8a f2                 jump @658 if a3 != a1
      :                          @661
 13459: 7b 79                    u64 [a0] = a2
 13461: 01                       fallthrough
      :                          @662
 13462: 95 15 ff 07              s0 = sp + 0x7ff
 13466: 95 55 a1 03              s0 = s0 + 0x3a1
 13470: 82 57 80 00              a0 = u64 [s0 + 0x80]
 13474: 33 08 06                 a1 = 0x6
 13477: 50 20 68 01 a7 13        ra = 360, jump @1054
      :                          @663 [@dyn 180]
 13483: 33 06 03                 s1 = 0x3
 13486: 95 17 55                 a0 = sp + 0x55
 13489: 33 08 03                 a1 = 0x3
 13492: 33 09                    a2 = 0
 13494: 33 0a                    a3 = 0
 13496: 0a 03                    ecalli 3 // 'write'
 13498: 7b 57                    u64 [s0] = a0
 13500: 95 77 01                 a0 = a0 + 0x1
 13503: 88 77 01                 a0 = a0 <u 0x1
 13506: 97 77 01                 a0 = a0 << 0x1
 13509: 7b 17 20                 u64 [sp + 0x20] = a0
 13512: 95 17 48                 a0 = sp + 0x48
 13515: 7b 57 18                 u64 [s0 + 0x18] = a0
 13518: 33 07 16                 a0 = 0x16
 13521: 7b 57 20                 u64 [s0 + 0x20] = a0
 13524: 7b 55 28                 u64 [s0 + 0x28] = s0
 13527: 7b 57 30                 u64 [s0 + 0x30] = a0
 13530: 33 07 90 0e 01           a0 = 0x10e90
 13535: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13539: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13543: 49 21 c0 01              u64 [sp + 448] = 0
 13547: 95 17 ff 07              a0 = sp + 0x7ff
 13551: 95 77 b9 03              a0 = a0 + 0x3b9
 13555: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13559: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13564: 95 17 ff 07              a0 = sp + 0x7ff
 13568: 95 77 e9 03              a0 = a0 + 0x3e9
 13572: 95 18 a0 01              a1 = sp + 0x1a0
 13576: 50 20 6a 01 d0 05        ra = 362, jump @777
      :                          @664 [@dyn 181]
 13582: 82 56 50                 s1 = u64 [s0 + 0x50]
 13585: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13588: 82 55 48                 s0 = u64 [s0 + 0x48]
 13591: 82 17 20                 a0 = u64 [sp + 0x20]
 13594: 33 08                    a1 = 0
 13596: 33 09                    a2 = 0
 13598: 64 6a                    a3 = s1
 13600: 33 00 6c 01              ra = 0x16c
 13604: 0a 64                    ecalli 100 // 'log'
 13606: 01                       fallthrough
      :                          @665 [@dyn 182]
 13607: 82 17 38                 a0 = u64 [sp + 0x38]
 13610: c8 57 07                 a0 = a0 + s0
 13613: 53 37 00 00 f0 25        jump @671 if a0 <u 4293918720
      :                          @666
 13619: 33 07 40 00 03           a0 = 0x30040
 13624: 95 77 00 00 10           a0 = a0 + 0x100000
 13629: 01                       fallthrough
      :                          @667
 13630: 82 78                    a1 = u64 [a0]
 13632: c9 87 09                 a2 = a0 - a1
 13635: ab 69 0f                 jump @671 if a2 != s1
      :                          @668
 13638: c9 58 09                 a2 = a1 - s0
 13641: 01                       fallthrough
      :                          @669
 13642: 82 7a                    a3 = u64 [a0]
 13644: ab 8a f2                 jump @667 if a3 != a1
      :                          @670
 13647: 7b 79                    u64 [a0] = a2
 13649: 01                       fallthrough
      :                          @671
 13650: 95 16 ff 07              s1 = sp + 0x7ff
 13654: 95 66 a1 03              s1 = s1 + 0x3a1
 13658: 82 67                    a0 = u64 [s1]
 13660: 33 08 07                 a1 = 0x7
 13663: 50 20 6e 01 ed 12        ra = 366, jump @1054
      :                          @672 [@dyn 183]
 13669: 95 18 98 00              a1 = sp + 0x98
 13673: 82 17 30                 a0 = u64 [sp + 0x30]
 13676: 0a 04                    ecalli 4 // 'info'
 13678: 64 75                    s0 = a0
 13680: 7b 67 78                 u64 [s1 + 0x78] = a0
 13683: 33 08 08                 a1 = 0x8
 13686: 50 20 70 01 d6 12        ra = 368, jump @1054
      :                          @673 [@dyn 184]
 13692: 88 57 01                 a0 = s0 <u 0x1
 13695: 97 77 01                 a0 = a0 << 0x1
 13698: 7b 17 20                 u64 [sp + 0x20] = a0
 13701: 95 17 48                 a0 = sp + 0x48
 13704: 7b 67 18                 u64 [s1 + 0x18] = a0
 13707: 33 08 16                 a1 = 0x16
 13710: 7b 68 20                 u64 [s1 + 0x20] = a1
 13713: 95 17 ff 07              a0 = sp + 0x7ff
 13717: 95 77 19 04              a0 = a0 + 0x419
 13721: 7b 67 28                 u64 [s1 + 0x28] = a0
 13724: 7b 18 30                 u64 [sp + 0x30] = a1
 13727: 7b 68 30                 u64 [s1 + 0x30] = a1
 13730: 33 07 c8 0e 01           a0 = 0x10ec8
 13735: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13739: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13744: 49 21 c0 01              u64 [sp + 448] = 0
 13748: 95 17 ff 07              a0 = sp + 0x7ff
 13752: 95 77 b9 03              a0 = a0 + 0x3b9
 13756: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13760: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13765: 95 17 ff 07              a0 = sp + 0x7ff
 13769: 95 77 e9 03              a0 = a0 + 0x3e9
 13773: 95 18 a0 01              a1 = sp + 0x1a0
 13777: 50 20 72 01 07 05        ra = 370, jump @777
      :                          @674 [@dyn 185]
 13783: 95 17 ff 07              a0 = sp + 0x7ff
 13787: 95 77 a1 03              a0 = a0 + 0x3a1
 13791: 82 76 50                 s1 = u64 [a0 + 0x50]
 13794: 82 7b 58                 a4 = u64 [a0 + 0x58]
 13797: 82 75 48                 s0 = u64 [a0 + 0x48]
 13800: 82 17 20                 a0 = u64 [sp + 0x20]
 13803: 33 08                    a1 = 0
 13805: 33 09                    a2 = 0
 13807: 64 6a                    a3 = s1
 13809: 33 00 74 01              ra = 0x174
 13813: 0a 64                    ecalli 100 // 'log'
 13815: 01                       fallthrough
      :                          @675 [@dyn 186]
 13816: 82 17 38                 a0 = u64 [sp + 0x38]
 13819: c8 57 07                 a0 = a0 + s0
 13822: 53 37 00 00 f0 27        jump @681 if a0 <u 4293918720
      :                          @676
 13828: 33 07 40 00 03           a0 = 0x30040
 13833: 95 77 00 00 10           a0 = a0 + 0x100000
 13838: 01                       fallthrough
      :                          @677
 13839: 82 78                    a1 = u64 [a0]
 13841: c9 87 09                 a2 = a0 - a1
 13844: ab 69 11                 jump @681 if a2 != s1
      :                          @678
 13847: c9 58 09                 a2 = a1 - s0
 13850: 01                       fallthrough
      :                          @679
 13851: 82 7a                    a3 = u64 [a0]
 13853: ab 8a f2                 jump @677 if a3 != a1
      :                          @680
 13856: 7b 79                    u64 [a0] = a2
 13858: 0a                       ecalli 0 // 'gas'
 13859: 28 04                    jump @682
      :                          @681
 13861: 0a                       ecalli 0 // 'gas'
 13862: 01                       fallthrough
      :                          @682
 13863: 95 16 ff 07              s1 = sp + 0x7ff
 13867: 95 66 a1 03              s1 = s1 + 0x3a1
 13871: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13875: 33 08 09                 a1 = 0x9
 13878: 50 20 76 01 16 12        ra = 374, jump @1054
      :                          @683 [@dyn 187]
 13884: 95 17 ff 07              a0 = sp + 0x7ff
 13888: 95 77 21 04              a0 = a0 + 0x421
 13892: 7b 67 48                 u64 [s1 + 0x48] = a0
 13895: 82 17 30                 a0 = u64 [sp + 0x30]
 13898: 7b 67 50                 u64 [s1 + 0x50] = a0
 13901: 33 07 18 0f 01           a0 = 0x10f18
 13906: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13910: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 13915: 49 21 c0 01              u64 [sp + 448] = 0
 13919: 95 17 ff 07              a0 = sp + 0x7ff
 13923: 95 77 e9 03              a0 = a0 + 0x3e9
 13927: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13931: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 13936: 95 17 ff 07              a0 = sp + 0x7ff
 13940: 95 77 b9 03              a0 = a0 + 0x3b9
 13944: 95 18 a0 01              a1 = sp + 0x1a0
 13948: 50 20 78 01 5c 04        ra = 376, jump @777
      :                          @684 [@dyn 188]
 13954: 82 65 20                 s0 = u64 [s1 + 0x20]
 13957: 82 6b 28                 a4 = u64 [s1 + 0x28]
 13960: 82 66 18                 s1 = u64 [s1 + 0x18]
 13963: 33 07 04                 a0 = 0x4
 13966: 33 08                    a1 = 0
 13968: 33 09                    a2 = 0
 13970: 64 5a                    a3 = s0
 13972: 33 00 7a 01              ra = 0x17a
 13976: 0a 64                    ecalli 100 // 'log'
 13978: 01                       fallthrough
      :                          @685 [@dyn 189]
 13979: 82 17 38                 a0 = u64 [sp + 0x38]
 13982: c8 67 07                 a0 = a0 + s1
 13985: 53 37 00 00 f0 27        jump @691 if a0 <u 4293918720
      :                          @686
 13991: 33 07 40 00 03           a0 = 0x30040
 13996: 95 77 00 00 10           a0 = a0 + 0x100000
 14001: 01                       fallthrough
      :                          @687
 14002: 82 78                    a1 = u64 [a0]
 14004: c9 87 09                 a2 = a0 - a1
 14007: ab 59 11                 jump @691 if a2 != s0
      :                          @688
 14010: c9 68 09                 a2 = a1 - s1
 14013: 01                       fallthrough
      :                          @689
 14014: 82 7a                    a3 = u64 [a0]
 14016: ab 8a f2                 jump @687 if a3 != a1
      :                          @690
 14019: 7b 79                    u64 [a0] = a2
 14021: 33 0b                    a4 = 0
 14023: 01                       fallthrough
      :                          @691
 14024: 82 19 28                 a2 = u64 [sp + 0x28]
 14027: 55 19 21 29 01           jump @710 if a2 >=u 33
      :                          @692
 14032: 33 05 19 00 03           s0 = 0x30019
 14037: 33 07 19 00 03           a0 = 0x30019
 14042: 82 18 18                 a1 = u64 [sp + 0x18]
 14045: 50 20 7c 01 76 06        ra = 380, jump @826
      :                          @693 [@dyn 190]
 14051: 82 18 48                 a1 = u64 [sp + 0x48]
 14054: 3a 09 00 00 03           a2 = u64 [0x30000]
 14059: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 14069: ca 78 07                 a0 = a1 * a0
 14072: 95 16 ff 07              s1 = sp + 0x7ff
 14076: 95 66 a1 03              s1 = s1 + 0x3a1
 14080: ae 97 38                 jump @698 if a0 >=u a2
      :                          @694
 14083: 33 07 33                 a0 = 0x33
 14086: 51 18 09 27              jump @696 if a1 == 9
      :                          @695
 14090: 0a 08                    ecalli 8 // 'checkpoint'
 14092: 33 0a 38 0f 01           a3 = 0x10f38
 14097: 33 07 03                 a0 = 0x3
 14100: 33 0b 11                 a4 = 0x11
 14103: 33 08                    a1 = 0
 14105: 33 09                    a2 = 0
 14107: 0a 64                    ecalli 100 // 'log'
 14109: 82 17 48                 a0 = u64 [sp + 0x48]
 14112: 95 77 2a                 a0 = a0 + 0x2a
 14115: 33 08 07                 a1 = 0x7
 14118: 33 00 7e 01              ra = 0x17e
 14122: 28 22 11                 jump @1054
      :                          @696
 14125: 33 08 07                 a1 = 0x7
 14128: 50 20 7e 01 1c 11        ra = 382, jump @1054
      :                          @697 [@dyn 191]
 14134: 32 07                    jump [a0]
      :                          @698
 14136: 64 57                    a0 = s0
 14138: 0a 10                    ecalli 16 // 'oyield'
 14140: 7b 67                    u64 [s1] = a0
 14142: 88 77 01                 a0 = a0 <u 0x1
 14145: 97 77 01                 a0 = a0 << 0x1
 14148: 7b 17 30                 u64 [sp + 0x30] = a0
 14151: 95 17 48                 a0 = sp + 0x48
 14154: 7b 67 18                 u64 [s1 + 0x18] = a0
 14157: 33 07 16                 a0 = 0x16
 14160: 7b 67 20                 u64 [s1 + 0x20] = a0
 14163: 7b 66 28                 u64 [s1 + 0x28] = s1
 14166: 7b 67 30                 u64 [s1 + 0x30] = a0
 14169: 33 07 50 0f 01           a0 = 0x10f50
 14174: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14178: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14183: 49 21 c0 01              u64 [sp + 448] = 0
 14187: 95 18 ff 07              a1 = sp + 0x7ff
 14191: 95 88 b9 03              a1 = a1 + 0x3b9
 14195: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 14199: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 14204: 95 17 ff 07              a0 = sp + 0x7ff
 14208: 95 77 e9 03              a0 = a0 + 0x3e9
 14212: 95 18 a0 01              a1 = sp + 0x1a0
 14216: 50 20 80 01 50 03        ra = 384, jump @777
      :                          @699 [@dyn 192]
 14222: 95 17 ff 07              a0 = sp + 0x7ff
 14226: 95 77 a1 03              a0 = a0 + 0x3a1
 14230: 82 76 50                 s1 = u64 [a0 + 0x50]
 14233: 82 7b 58                 a4 = u64 [a0 + 0x58]
 14236: 82 75 48                 s0 = u64 [a0 + 0x48]
 14239: 82 17 30                 a0 = u64 [sp + 0x30]
 14242: 33 08                    a1 = 0
 14244: 33 09                    a2 = 0
 14246: 64 6a                    a3 = s1
 14248: 33 00 82 01              ra = 0x182
 14252: 0a 64                    ecalli 100 // 'log'
 14254: 01                       fallthrough
      :                          @700 [@dyn 193]
 14255: 82 17 38                 a0 = u64 [sp + 0x38]
 14258: c8 57 07                 a0 = a0 + s0
 14261: 53 37 00 00 f0 31        jump @706 if a0 <u 4293918720
      :                          @701
 14267: 33 07 40 00 03           a0 = 0x30040
 14272: 95 77 00 00 10           a0 = a0 + 0x100000
 14277: 01                       fallthrough
      :                          @702
 14278: 82 78                    a1 = u64 [a0]
 14280: c9 87 09                 a2 = a0 - a1
 14283: ab 69 1b                 jump @706 if a2 != s1
      :                          @703
 14286: c9 58 09                 a2 = a1 - s0
 14289: 01                       fallthrough
      :                          @704
 14290: 82 7a                    a3 = u64 [a0]
 14292: ab 8a f2                 jump @702 if a3 != a1
      :                          @705
 14295: 7b 79                    u64 [a0] = a2
 14297: 33 0b                    a4 = 0
 14299: 33 07 19 00 03           a0 = 0x30019
 14304: 33 08 20                 a1 = 0x20
 14307: 28 3d df                 jump @326
      :                          @706
 14310: 33 07 19 00 03           a0 = 0x30019
 14315: 33 08 20                 a1 = 0x20
 14318: 28 32 df                 jump @326
      :                          @707
 14321: 00                       trap
      :                          @708
 14322: 00                       trap
      :                          @709
 14323: 00                       trap
      :                          @710
 14324: 00                       trap
      :                          @711
 14325: 00                       trap
      :                          @712 [export #2: 'on_transfer']
 14326: 95 11 88                 sp = sp + 0xffffffffffffff88
 14329: 7b 10 70                 u64 [sp + 0x70] = ra
 14332: 7b 15 68                 u64 [sp + 0x68] = s0
 14335: 7b 16 60                 u64 [sp + 0x60] = s1
 14338: 0a                       ecalli 0 // 'gas'
 14339: 7b 17                    u64 [sp] = a0
 14341: 33 08 04                 a1 = 0x4
 14344: 50 20 84 01 44 10        ra = 388, jump @1054
      :                          @713 [@dyn 194]
 14350: 64 17                    a0 = sp
 14352: 7b 17 50                 u64 [sp + 0x50] = a0
 14355: 33 07 16                 a0 = 0x16
 14358: 7b 17 58                 u64 [sp + 0x58] = a0
 14361: 33 07 a0 0f 01           a0 = 0x10fa0
 14366: 7b 17 20                 u64 [sp + 0x20] = a0
 14369: 49 11 28 02              u64 [sp + 40] = 0x2
 14373: 49 11 40                 u64 [sp + 64] = 0
 14376: 95 17 50                 a0 = sp + 0x50
 14379: 7b 17 30                 u64 [sp + 0x30] = a0
 14382: 49 11 38 01              u64 [sp + 56] = 0x1
 14386: 95 17 08                 a0 = sp + 0x8
 14389: 95 18 20                 a1 = sp + 0x20
 14392: 50 20 86 01 a0 02        ra = 390, jump @777
      :                          @714 [@dyn 195]
 14398: 82 15 10                 s0 = u64 [sp + 0x10]
 14401: 82 1b 18                 a4 = u64 [sp + 0x18]
 14404: 82 16 08                 s1 = u64 [sp + 0x8]
 14407: 33 07 04                 a0 = 0x4
 14410: 33 08                    a1 = 0
 14412: 33 09                    a2 = 0
 14414: 64 5a                    a3 = s0
 14416: 33 00 88 01              ra = 0x188
 14420: 0a 64                    ecalli 100 // 'log'
 14422: 01                       fallthrough
      :                          @715 [@dyn 196]
 14423: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 14428: 53 38 00 00 f0 27        jump @721 if a1 <u 4293918720
      :                          @716
 14434: 33 07 40 00 03           a0 = 0x30040
 14439: 95 77 00 00 10           a0 = a0 + 0x100000
 14444: 01                       fallthrough
      :                          @717
 14445: 82 78                    a1 = u64 [a0]
 14447: c9 87 09                 a2 = a0 - a1
 14450: ab 59 11                 jump @721 if a2 != s0
      :                          @718
 14453: c9 68 09                 a2 = a1 - s1
 14456: 01                       fallthrough
      :                          @719
 14457: 82 7a                    a3 = u64 [a0]
 14459: ab 8a f2                 jump @717 if a3 != a1
      :                          @720
 14462: 7b 79                    u64 [a0] = a2
 14464: 33 0b                    a4 = 0
 14466: 01                       fallthrough
      :                          @721
 14467: 33 07 00 00 01           a0 = 0x10000
 14472: 33 08                    a1 = 0
 14474: 82 10 70                 ra = u64 [sp + 0x70]
 14477: 82 15 68                 s0 = u64 [sp + 0x68]
 14480: 82 16 60                 s1 = u64 [sp + 0x60]
 14483: 95 11 78                 sp = sp + 0x78
 14486: 32 00                    ret
      :                          @722
 14488: 00                       trap
      :                          @723
 14489: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14492: 7b 10 40                 u64 [sp + 0x40] = ra
 14495: 7b 15 38                 u64 [sp + 0x38] = s0
 14498: 7b 16 30                 u64 [sp + 0x30] = s1
 14501: c8 89 09                 a2 = a2 + a1
 14504: ac 89 53                 jump @731 if a2 <u a1
      :                          @724
 14507: 64 75                    s0 = a0
 14509: 82 77                    a0 = u64 [a0]
 14511: 97 78 01                 a1 = a0 << 0x1
 14514: 33 0a 08                 a3 = 0x8
 14517: e4 a9 09                 a2 = maxu(a2, a3)
 14520: e4 98 06                 s1 = maxu(a1, a2)
 14523: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14526: 98 88 3f                 a1 = a1 >> 0x3f
 14529: 51 07 12                 jump @726 if a0 == 0
      :                          @725
 14532: 82 59 08                 a2 = u64 [s0 + 0x8]
 14535: 7b 19 18                 u64 [sp + 0x18] = a2
 14538: 49 11 20 01              u64 [sp + 32] = 0x1
 14542: 7b 17 28                 u64 [sp + 0x28] = a0
 14545: 28 06                    jump @727
      :                          @726
 14547: 49 11 20                 u64 [sp + 32] = 0
 14550: 01                       fallthrough
      :                          @727
 14551: 64 17                    a0 = sp
 14553: 95 1a 18                 a3 = sp + 0x18
 14556: 64 69                    a2 = s1
 14558: 50 20 8a 01 32           ra = 394, jump @734
      :                          @728 [@dyn 197]
 14563: 82 18                    a1 = u64 [sp]
 14565: 82 17 08                 a0 = u64 [sp + 0x8]
 14568: 51 08 14                 jump @732 if a1 == 0
      :                          @729
 14571: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 14581: aa 87 0d                 jump @733 if a0 == a1
      :                          @730
 14584: 52 07 a0                 jump @722 if a0 != 0
      :                          @731
 14587: 00                       trap
      :                          @732
 14588: 7b 57 08                 u64 [s0 + 0x8] = a0
 14591: 7b 56                    u64 [s0] = s1
 14593: 01                       fallthrough
      :                          @733
 14594: 82 10 40                 ra = u64 [sp + 0x40]
 14597: 82 15 38                 s0 = u64 [sp + 0x38]
 14600: 82 16 30                 s1 = u64 [sp + 0x30]
 14603: 95 11 48                 sp = sp + 0x48
 14606: 32 00                    ret
      :                          @734
 14608: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14611: 7b 10 30                 u64 [sp + 0x30] = ra
 14614: 7b 15 28                 u64 [sp + 0x28] = s0
 14617: 7b 16 20                 u64 [sp + 0x20] = s1
 14620: 64 95                    s0 = a2
 14622: 64 72                    t0 = a0
 14624: 51 08 7a                 jump @744 if a1 == 0
      :                          @735
 14627: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14630: 51 07 7d                 jump @745 if a0 == 0
      :                          @736
 14633: 82 a9 10                 a2 = u64 [a3 + 0x10]
 14636: 51 09 ab 00              jump @752 if a2 == 0
      :                          @737
 14640: 82 a8                    a1 = u64 [a3]
 14642: 33 06 40 00 03           s1 = 0x30040
 14647: 33 03 00 00 10           t1 = 0x100000
 14652: c8 36 06                 s1 = s1 + t1
 14655: 01                       fallthrough
      :                          @738
 14656: 82 6a                    a3 = u64 [s1]
 14658: c8 5a 07                 a0 = a3 + s0
 14661: ac a7 d0 00              jump @758 if a0 <u a3
      :                          @739
 14665: 95 7b 01                 a4 = a0 + 0x1
 14668: 88 bc 01                 a5 = a4 <u 0x1
 14671: d8 b3 0b                 a4 = t1 <u a4
 14674: d4 cb 0b                 a4 = a4 | a5
 14677: 52 0b c0 00              jump @758 if a4 != 0
      :                          @740
 14681: 82 6b                    a4 = u64 [s1]
 14683: ab ab e5                 jump @738 if a4 != a3
      :                          @741
 14686: 7b 67                    u64 [s1] = a0
 14688: 33 0c                    a5 = 0
 14690: 7b 12 18                 u64 [sp + 0x18] = t0
 14693: 33 0a 40 00 03           a3 = 0x30040
 14698: 33 0b 00 00 10           a4 = 0x100000
 14703: 7b 1a                    u64 [sp] = a3
 14705: c8 ba 0a                 a3 = a3 + a4
 14708: c9 7a 07                 a0 = a3 - a0
 14711: 7b 17 10                 u64 [sp + 0x10] = a0
 14714: 7b 18 08                 u64 [sp + 0x8] = a1
 14717: 64 96                    s1 = a2
 14719: 50 20 8c 01 d4 03        ra = 396, jump @826
      :                          @742 [@dyn 198]
 14725: 54 36 00 00 10 98 00     jump @759 if s1 <=u 1048576
      :                          @743
 14732: 82 12 18                 t0 = u64 [sp + 0x18]
 14735: 82 18 10                 a1 = u64 [sp + 0x10]
 14738: 33 07                    a0 = 0
 14740: 7b 28 08                 u64 [t0 + 0x8] = a1
 14743: 28 b5 00                 jump @765
      :                          @744
 14746: 49 12 08                 u64 [t0 + 8] = 0
 14749: 33 07 01                 a0 = 0x1
 14752: 28 ac 00                 jump @765
      :                          @745
 14755: 33 09 40 00 03           a2 = 0x30040
 14760: 33 07 00 00 10           a0 = 0x100000
 14765: c8 79 09                 a2 = a2 + a0
 14768: 01                       fallthrough
      :                          @746
 14769: 82 9a                    a3 = u64 [a2]
 14771: c8 5a 08                 a1 = a3 + s0
 14774: ac a8 5f                 jump @758 if a1 <u a3
      :                          @747
 14777: 95 8b 01                 a4 = a1 + 0x1
 14780: 88 bc 01                 a5 = a4 <u 0x1
 14783: d8 b7 0b                 a4 = a0 <u a4
 14786: d4 cb 0b                 a4 = a4 | a5
 14789: 52 0b 50                 jump @758 if a4 != 0
      :                          @748
 14792: 82 9b                    a4 = u64 [a2]
 14794: ab ab e7                 jump @746 if a4 != a3
      :                          @749
 14797: 7b 98                    u64 [a2] = a1
 14799: 33 0c                    a5 = 0
 14801: 01                       fallthrough
      :                          @750
 14802: ab ab df                 jump @746 if a4 != a3
      :                          @751
 14805: 28 31                    jump @757
      :                          @752
 14807: 33 09 40 00 03           a2 = 0x30040
 14812: 33 07 00 00 10           a0 = 0x100000
 14817: c8 79 09                 a2 = a2 + a0
 14820: 01                       fallthrough
      :                          @753
 14821: 82 9a                    a3 = u64 [a2]
 14823: c8 5a 08                 a1 = a3 + s0
 14826: ac a8 2b                 jump @758 if a1 <u a3
      :                          @754
 14829: 95 8b 01                 a4 = a1 + 0x1
 14832: 88 bc 01                 a5 = a4 <u 0x1
 14835: d8 b7 0b                 a4 = a0 <u a4
 14838: d4 cb 0b                 a4 = a4 | a5
 14841: 52 0b 1c                 jump @758 if a4 != 0
      :                          @755
 14844: 82 9b                    a4 = u64 [a2]
 14846: ab ab e7                 jump @753 if a4 != a3
      :                          @756
 14849: 7b 98                    u64 [a2] = a1
 14851: 33 0c                    a5 = 0
 14853: 01                       fallthrough
      :                          @757
 14854: 33 07 40 00 13           a0 = 0x130040
 14859: c9 87 08                 a1 = a0 - a1
 14862: 33 07                    a0 = 0
 14864: 7b 28 08                 u64 [t0 + 0x8] = a1
 14867: 28 39                    jump @765
      :                          @758
 14869: 33 07 01                 a0 = 0x1
 14872: 7b 27 08                 u64 [t0 + 0x8] = a0
 14875: 28 31                    jump @765
      :                          @759
 14877: 64 6c                    a5 = s1
 14879: 82 17                    a0 = u64 [sp]
 14881: 95 77 00 00 10           a0 = a0 + 0x100000
 14886: 82 12 18                 t0 = u64 [sp + 0x18]
 14889: 82 16 08                 s1 = u64 [sp + 0x8]
 14892: 01                       fallthrough
      :                          @760
 14893: 82 78                    a1 = u64 [a0]
 14895: c9 87 09                 a2 = a0 - a1
 14898: ab 69 11                 jump @764 if a2 != s1
      :                          @761
 14901: c9 c8 09                 a2 = a1 - a5
 14904: 01                       fallthrough
      :                          @762
 14905: 82 7a                    a3 = u64 [a0]
 14907: ab 8a f2                 jump @760 if a3 != a1
      :                          @763
 14910: 7b 79                    u64 [a0] = a2
 14912: 33 0b                    a4 = 0
 14914: 01                       fallthrough
      :                          @764
 14915: 82 18 10                 a1 = u64 [sp + 0x10]
 14918: 33 07                    a0 = 0
 14920: 7b 28 08                 u64 [t0 + 0x8] = a1
 14923: 01                       fallthrough
      :                          @765
 14924: 7b 25 10                 u64 [t0 + 0x10] = s0
 14927: 7b 27                    u64 [t0] = a0
 14929: 82 10 30                 ra = u64 [sp + 0x30]
 14932: 82 15 28                 s0 = u64 [sp + 0x28]
 14935: 82 16 20                 s1 = u64 [sp + 0x20]
 14938: 95 11 38                 sp = sp + 0x38
 14941: 32 00                    ret
      :                          @766
 14943: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14946: 7b 10 40                 u64 [sp + 0x40] = ra
 14949: 7b 15 38                 u64 [sp + 0x38] = s0
 14952: 7b 16 30                 u64 [sp + 0x30] = s1
 14955: 95 88 01                 a1 = a1 + 0x1
 14958: 51 08 55                 jump @774 if a1 == 0
      :                          @767
 14961: 64 75                    s0 = a0
 14963: 82 77                    a0 = u64 [a0]
 14965: 97 79 01                 a2 = a0 << 0x1
 14968: 33 0a 08                 a3 = 0x8
 14971: e4 a8 08                 a1 = maxu(a1, a3)
 14974: e4 89 06                 s1 = maxu(a2, a1)
 14977: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14980: 98 88 3f                 a1 = a1 >> 0x3f
 14983: 51 07 12                 jump @769 if a0 == 0
      :                          @768
 14986: 82 59 08                 a2 = u64 [s0 + 0x8]
 14989: 7b 19 18                 u64 [sp + 0x18] = a2
 14992: 49 11 20 01              u64 [sp + 32] = 0x1
 14996: 7b 17 28                 u64 [sp + 0x28] = a0
 14999: 28 06                    jump @770
      :                          @769
 15001: 49 11 20                 u64 [sp + 32] = 0
 15004: 01                       fallthrough
      :                          @770
 15005: 64 17                    a0 = sp
 15007: 95 1a 18                 a3 = sp + 0x18
 15010: 64 69                    a2 = s1
 15012: 50 20 8e 01 6c fe        ra = 398, jump @734
      :                          @771 [@dyn 199]
 15018: 82 18                    a1 = u64 [sp]
 15020: 82 17 08                 a0 = u64 [sp + 0x8]
 15023: 51 08 15                 jump @775 if a1 == 0
      :                          @772
 15026: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 15036: aa 87 0e                 jump @776 if a0 == a1
      :                          @773
 15039: 52 07 d9 fd              jump @722 if a0 != 0
      :                          @774
 15043: 00                       trap
      :                          @775
 15044: 7b 57 08                 u64 [s0 + 0x8] = a0
 15047: 7b 56                    u64 [s0] = s1
 15049: 01                       fallthrough
      :                          @776
 15050: 82 10 40                 ra = u64 [sp + 0x40]
 15053: 82 15 38                 s0 = u64 [sp + 0x38]
 15056: 82 16 30                 s1 = u64 [sp + 0x30]
 15059: 95 11 48                 sp = sp + 0x48
 15062: 32 00                    ret
      :                          @777
 15064: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 15067: 7b 10 30                 u64 [sp + 0x30] = ra
 15070: 7b 15 28                 u64 [sp + 0x28] = s0
 15073: 7b 16 20                 u64 [sp + 0x20] = s1
 15076: 64 89                    a2 = a1
 15078: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15081: 64 75                    s0 = a0
 15083: 51 0a 35                 jump @782 if a3 == 0
      :                          @778
 15086: 82 98                    a1 = u64 [a2]
 15088: 33 07                    a0 = 0
 15090: 95 8b 08                 a4 = a1 + 0x8
 15093: 01                       fallthrough
      :                          @779
 15094: 82 bc                    a5 = u64 [a4]
 15096: c8 c7 07                 a0 = a0 + a5
 15099: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15102: 95 bb 10                 a4 = a4 + 0x10
 15105: 52 0a f5                 jump @779 if a3 != 0
      :                          @780
 15108: 82 9a 18                 a3 = u64 [a2 + 0x18]
 15111: 51 0a 24                 jump @784 if a3 == 0
      :                          @781
 15114: 82 88 08                 a1 = u64 [a1 + 0x8]
 15117: 8e 88                    a1 = a1 >u 0
 15119: 88 7a 10                 a3 = a0 <u 0x10
 15122: 85 aa 01                 a3 = a3 ^ 0x1
 15125: d4 a8 08                 a1 = a1 | a3
 15128: 89 7a                    a3 = a0 <s 0
 15130: e0 a8 08                 a1 = a1 & ~a3
 15133: 52 08 0a                 jump @783 if a1 != 0
      :                          @782
 15136: 33 07                    a0 = 0
 15138: 33 08 01                 a1 = 0x1
 15141: 28 4c                    jump @792
      :                          @783
 15143: 97 77 01                 a0 = a0 << 0x1
 15146: 01                       fallthrough
      :                          @784
 15147: 51 07 42                 jump @791 if a0 == 0
      :                          @785
 15150: 57 07 7a                 jump @796 if a0 <s 0
      :                          @786
 15153: 64 52                    t0 = s0
 15155: 33 0b 40 00 03           a4 = 0x30040
 15160: 33 08 00 00 10           a1 = 0x100000
 15165: c8 8b 0b                 a4 = a4 + a1
 15168: 01                       fallthrough
      :                          @787
 15169: 82 bc                    a5 = u64 [a4]
 15171: c8 7c 0a                 a3 = a5 + a0
 15174: ac ca 52 fd              jump @722 if a3 <u a5
      :                          @788
 15178: 95 a5 01                 s0 = a3 + 0x1
 15181: 88 56 01                 s1 = s0 <u 0x1
 15184: d8 58 05                 s0 = a1 <u s0
 15187: d4 65 05                 s0 = s0 | s1
 15190: 52 05 42 fd              jump @722 if s0 != 0
      :                          @789
 15194: 82 b6                    s1 = u64 [a4]
 15196: ab c6 e5                 jump @787 if s1 != a5
      :                          @790
 15199: 7b ba                    u64 [a4] = a3
 15201: 33 08 40 00 13           a1 = 0x130040
 15206: c9 a8 08                 a1 = a1 - a3
 15209: 64 25                    s0 = t0
 15211: 28 06                    jump @792
      :                          @791
 15213: 33 08 01                 a1 = 0x1
 15216: 01                       fallthrough
      :                          @792
 15217: 7b 17                    u64 [sp] = a0
 15219: 7b 18 08                 u64 [sp + 0x8] = a1
 15222: 49 11 10                 u64 [sp + 16] = 0
 15225: 33 08 c0 0f 01           a1 = 0x10fc0
 15230: 64 17                    a0 = sp
 15232: 50 20 90 01 85 06        ra = 400, jump @921
      :                          @793 [@dyn 200]
 15238: 52 07 21                 jump @795 if a0 != 0
      :                          @794
 15241: 82 17 10                 a0 = u64 [sp + 0x10]
 15244: 82 18 08                 a1 = u64 [sp + 0x8]
 15247: 82 19                    a2 = u64 [sp]
 15249: 7b 57 10                 u64 [s0 + 0x10] = a0
 15252: 7b 58 08                 u64 [s0 + 0x8] = a1
 15255: 7b 59                    u64 [s0] = a2
 15257: 82 10 30                 ra = u64 [sp + 0x30]
 15260: 82 15 28                 s0 = u64 [sp + 0x28]
 15263: 82 16 20                 s1 = u64 [sp + 0x20]
 15266: 95 11 38                 sp = sp + 0x38
 15269: 32 00                    ret
      :                          @795
 15271: 00                       trap
      :                          @796
 15272: 00                       trap
      :                          @797 [@dyn 201]
 15273: 82 72                    t0 = u64 [a0]
 15275: 33 09 00 00 f0           a2 = 0xfffffffffff00000
 15280: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
 15285: ac 9a 28                 jump @803 if a3 <u a2
      :                          @798
 15288: 82 77 08                 a0 = u64 [a0 + 0x8]
 15291: 33 09 40 00 03           a2 = 0x30040
 15296: 95 99 00 00 10           a2 = a2 + 0x100000
 15301: 01                       fallthrough
      :                          @799
 15302: 82 9a                    a3 = u64 [a2]
 15304: c9 a9 0b                 a4 = a2 - a3
 15307: ab 7b 12                 jump @803 if a4 != a0
      :                          @800
 15310: c9 2a 0b                 a4 = a3 - t0
 15313: 01                       fallthrough
      :                          @801
 15314: 82 9c                    a5 = u64 [a2]
 15316: ab ac f2                 jump @799 if a5 != a3
      :                          @802
 15319: 7b 9b                    u64 [a2] = a4
 15321: 33 08                    a1 = 0
 15323: 32 00                    ret
      :                          @803
 15325: 32 00                    ret
      :                          @804 [@dyn 202]
 15327: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15330: 7b 10 18                 u64 [sp + 0x18] = ra
 15333: 7b 15 10                 u64 [sp + 0x10] = s0
 15336: 7b 16 08                 u64 [sp + 0x8] = s1
 15339: 64 75                    s0 = a0
 15341: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15344: 82 77                    a0 = u64 [a0]
 15346: c9 a7 07                 a0 = a0 - a3
 15349: 64 96                    s1 = a2
 15351: ac 97 2b                 jump @807 if a0 <u a2
      :                          @805
 15354: 7b 1a                    u64 [sp] = a3
 15356: 82 57 08                 a0 = u64 [s0 + 0x8]
 15359: c8 a7 07                 a0 = a0 + a3
 15362: 64 69                    a2 = s1
 15364: 50 20 96 01 4f 01        ra = 406, jump @826
      :                          @806 [@dyn 203]
 15370: 82 17                    a0 = u64 [sp]
 15372: c8 76 06                 s1 = s1 + a0
 15375: 7b 56 10                 u64 [s0 + 0x10] = s1
 15378: 33 07                    a0 = 0
 15380: 82 10 18                 ra = u64 [sp + 0x18]
 15383: 82 15 10                 s0 = u64 [sp + 0x10]
 15386: 82 16 08                 s1 = u64 [sp + 0x8]
 15389: 95 11 20                 sp = sp + 0x20
 15392: 32 00                    ret
      :                          @807
 15394: 64 57                    a0 = s0
 15396: 7b 18                    u64 [sp] = a1
 15398: 64 a8                    a1 = a3
 15400: 64 69                    a2 = s1
 15402: 50 20 98 01 6f fc        ra = 408, jump @723
      :                          @808 [@dyn 204]
 15408: 82 18                    a1 = u64 [sp]
 15410: 82 5a 10                 a3 = u64 [s0 + 0x10]
 15413: 28 c5                    jump @805
      :                          @809 [@dyn 205]
 15415: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15418: 7b 10 20                 u64 [sp + 0x20] = ra
 15421: 7b 15 18                 u64 [sp + 0x18] = s0
 15424: 7b 16 10                 u64 [sp + 0x10] = s1
 15427: 64 86                    s1 = a1
 15429: 83 88                    i32 a1 = a1 + 0
 15431: 33 09 80 00              a2 = 0x80
 15435: 64 7a                    a3 = a0
 15437: ae 98 2c                 jump @814 if a1 >=u a2
      :                          @810
 15440: 82 a8 10                 a1 = u64 [a3 + 0x10]
 15443: 82 a7                    a0 = u64 [a3]
 15445: ab 78 13                 jump @813 if a1 != a0
      :                          @811
 15448: 64 a7                    a0 = a3
 15450: 64 a5                    s0 = a3
 15452: 50 20 9c 01 03 fe        ra = 412, jump @766
      :                          @812 [@dyn 206]
 15458: 64 5a                    a3 = s0
 15460: 82 58 10                 a1 = u64 [s0 + 0x10]
 15463: 01                       fallthrough
      :                          @813
 15464: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15467: c8 87 07                 a0 = a0 + a1
 15470: 78 76                    u8 [a0] = s1
 15472: 95 88 01                 a1 = a1 + 0x1
 15475: 7b a8 10                 u64 [a3 + 0x10] = a1
 15478: 28 ac 00                 jump @822
      :                          @814
 15481: 8b 67 0b                 i32 a0 = s1 >> 0xb
 15484: 48 11 0c                 u32 [sp + 12] = 0
 15487: 52 07 1c                 jump @816 if a0 != 0
      :                          @815
 15490: 98 67 06                 a0 = s1 >> 0x6
 15493: 86 77 c0 00              a0 = a0 | 0xc0
 15497: 78 17 0c                 u8 [sp + 0xc] = a0
 15500: 84 67 3f                 a0 = s1 & 0x3f
 15503: 86 77 80 00              a0 = a0 | 0x80
 15507: 78 17 0d                 u8 [sp + 0xd] = a0
 15510: 33 06 02                 s1 = 0x2
 15513: 28 63                    jump @819
      :                          @816
 15515: 8b 67 10                 i32 a0 = s1 >> 0x10
 15518: 52 07 29                 jump @818 if a0 != 0
      :                          @817
 15521: 98 67 0c                 a0 = s1 >> 0xc
 15524: 86 77 e0 00              a0 = a0 | 0xe0
 15528: 78 17 0c                 u8 [sp + 0xc] = a0
 15531: 97 67 34                 a0 = s1 << 0x34
 15534: 98 77 3a                 a0 = a0 >> 0x3a
 15537: 95 77 80 00              a0 = a0 + 0x80
 15541: 78 17 0d                 u8 [sp + 0xd] = a0
 15544: 84 67 3f                 a0 = s1 & 0x3f
 15547: 86 77 80 00              a0 = a0 | 0x80
 15551: 78 17 0e                 u8 [sp + 0xe] = a0
 15554: 33 06 03                 s1 = 0x3
 15557: 28 37                    jump @819
      :                          @818
 15559: 97 67 2b                 a0 = s1 << 0x2b
 15562: 98 77 3d                 a0 = a0 >> 0x3d
 15565: 95 77 f0 00              a0 = a0 + 0xf0
 15569: 78 17 0c                 u8 [sp + 0xc] = a0
 15572: 97 67 2e                 a0 = s1 << 0x2e
 15575: 98 77 3a                 a0 = a0 >> 0x3a
 15578: 95 77 80 00              a0 = a0 + 0x80
 15582: 78 17 0d                 u8 [sp + 0xd] = a0
 15585: 97 67 34                 a0 = s1 << 0x34
 15588: 98 77 3a                 a0 = a0 >> 0x3a
 15591: 95 77 80 00              a0 = a0 + 0x80
 15595: 78 17 0e                 u8 [sp + 0xe] = a0
 15598: 84 67 3f                 a0 = s1 & 0x3f
 15601: 86 77 80 00              a0 = a0 | 0x80
 15605: 78 17 0f                 u8 [sp + 0xf] = a0
 15608: 33 06 04                 s1 = 0x4
 15611: 01                       fallthrough
      :                          @819
 15612: 82 a5 10                 s0 = u64 [a3 + 0x10]
 15615: 82 a7                    a0 = u64 [a3]
 15617: c9 57 07                 a0 = a0 - s0
 15620: ac 67 2e                 jump @823 if a0 <u s1
      :                          @820
 15623: 7b 1a                    u64 [sp] = a3
 15625: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15628: c8 57 07                 a0 = a0 + s0
 15631: 95 18 0c                 a1 = sp + 0xc
 15634: 64 69                    a2 = s1
 15636: 50 20 9e 01 3f           ra = 414, jump @826
      :                          @821 [@dyn 207]
 15641: c8 56 06                 s1 = s1 + s0
 15644: 82 17                    a0 = u64 [sp]
 15646: 7b 76 10                 u64 [a0 + 0x10] = s1
 15649: 01                       fallthrough
      :                          @822
 15650: 33 07                    a0 = 0
 15652: 82 10 20                 ra = u64 [sp + 0x20]
 15655: 82 15 18                 s0 = u64 [sp + 0x18]
 15658: 82 16 10                 s1 = u64 [sp + 0x10]
 15661: 95 11 28                 sp = sp + 0x28
 15664: 32 00                    ret
      :                          @823
 15666: 64 a7                    a0 = a3
 15668: 64 58                    a1 = s0
 15670: 64 69                    a2 = s1
 15672: 64 a5                    s0 = a3
 15674: 50 20 a0 01 5f fb        ra = 416, jump @723
      :                          @824 [@dyn 208]
 15680: 64 5a                    a3 = s0
 15682: 82 55 10                 s0 = u64 [s0 + 0x10]
 15685: 28 c2                    jump @820
      :                          @825 [@dyn 209]
 15687: 64 8a                    a3 = a1
 15689: 33 08 c0 0f 01           a1 = 0x10fc0
 15694: 64 a9                    a2 = a3
 15696: 28 b5 04                 jump @921
      :                          @826
 15699: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15702: 7b 10 18                 u64 [sp + 0x18] = ra
 15705: 7b 15 10                 u64 [sp + 0x10] = s0
 15708: 7b 16 08                 u64 [sp + 0x8] = s1
 15711: 53 19 10 64              jump @835 if a2 <u 16
      :                          @827
 15715: 8d 7a                    i32 a3 = -a0
 15717: 84 a2 07                 t0 = a3 & 0x7
 15720: c8 27 0b                 a4 = a0 + t0
 15723: 51 02 15                 jump @830 if t0 == 0
      :                          @828
 15726: 64 8c                    a5 = a1
 15728: 64 75                    s0 = a0
 15730: 01                       fallthrough
      :                          @829
 15731: 7c ca                    a3 = u8 [a5]
 15733: 78 5a                    u8 [s0] = a3
 15735: 95 55 01                 s0 = s0 + 0x1
 15738: 95 cc 01                 a5 = a5 + 0x1
 15741: ac b5 f6                 jump @829 if s0 <u a4
      :                          @830
 15744: c8 28 03                 t1 = a1 + t0
 15747: c9 29 02                 t0 = a2 - t0
 15750: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 15753: 84 38 07                 a1 = t1 & 0x7
 15756: c8 4b 0a                 a3 = a4 + t2
 15759: 51 08 3b                 jump @837 if a1 == 0
      :                          @831
 15762: 58 04 4b                 jump @840 if t2 <=s 0
      :                          @832
 15765: 97 38 03                 a1 = t1 << 0x3
 15768: 84 80 38                 ra = a1 & 0x38
 15771: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 15774: 82 c5                    s0 = u64 [a5]
 15776: 8d 88                    i32 a1 = -a1
 15778: 84 88 38                 a1 = a1 & 0x38
 15781: 95 cc 08                 a5 = a5 + 0x8
 15784: 01                       fallthrough
      :                          @833
 15785: 82 c6                    s1 = u64 [a5]
 15787: d0 05 05                 s0 = s0 >> ra
 15790: cf 86 09                 a2 = s1 << a1
 15793: d4 59 09                 a2 = a2 | s0
 15796: 7b b9                    u64 [a4] = a2
 15798: 95 bb 08                 a4 = a4 + 0x8
 15801: 95 cc 08                 a5 = a5 + 0x8
 15804: 64 65                    s0 = s1
 15806: ac ab eb                 jump @833 if a4 <u a3
      :                          @834
 15809: 28 1c                    jump @840
      :                          @835
 15811: 64 7a                    a3 = a0
 15813: 52 09 21                 jump @841 if a2 != 0
      :                          @836
 15816: 28 2f                    jump @843
      :                          @837
 15818: 58 04 13                 jump @840 if t2 <=s 0
      :                          @838
 15821: 64 38                    a1 = t1
 15823: 01                       fallthrough
      :                          @839
 15824: 82 89                    a2 = u64 [a1]
 15826: 7b b9                    u64 [a4] = a2
 15828: 95 bb 08                 a4 = a4 + 0x8
 15831: 95 88 08                 a1 = a1 + 0x8
 15834: ac ab f6                 jump @839 if a4 <u a3
      :                          @840
 15837: c8 43 08                 a1 = t1 + t2
 15840: 84 29 07                 a2 = t0 & 0x7
 15843: 51 09 14                 jump @843 if a2 == 0
      :                          @841
 15846: c8 a9 09                 a2 = a2 + a3
 15849: 01                       fallthrough
      :                          @842
 15850: 7c 8b                    a4 = u8 [a1]
 15852: 78 ab                    u8 [a3] = a4
 15854: 95 aa 01                 a3 = a3 + 0x1
 15857: 95 88 01                 a1 = a1 + 0x1
 15860: ac 9a f6                 jump @842 if a3 <u a2
      :                          @843
 15863: 82 10 18                 ra = u64 [sp + 0x18]
 15866: 82 15 10                 s0 = u64 [sp + 0x10]
 15869: 82 16 08                 s1 = u64 [sp + 0x8]
 15872: 95 11 20                 sp = sp + 0x20
 15875: 32 00                    ret
      :                          @844
 15877: 53 19 10 48              jump @853 if a2 <u 16
      :                          @845
 15881: 8d 7a                    i32 a3 = -a0
 15883: 84 aa 07                 a3 = a3 & 0x7
 15886: c8 a7 0b                 a4 = a0 + a3
 15889: 51 0a 0e                 jump @848 if a3 == 0
      :                          @846
 15892: 64 7c                    a5 = a0
 15894: 01                       fallthrough
      :                          @847
 15895: 78 c8                    u8 [a5] = a1
 15897: 95 cc 01                 a5 = a5 + 0x1
 15900: ac bc fb                 jump @847 if a5 <u a4
      :                          @848
 15903: c9 a9 03                 t1 = a2 - a3
 15906: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 15909: c8 cb 0a                 a3 = a4 + a5
 15912: 58 0c 1d                 jump @851 if a5 <=s 0
      :                          @849
 15915: 84 82 ff 00              t0 = a1 & 0xff
 15919: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 15929: ca 92 0c                 a5 = t0 * a2
 15932: 01                       fallthrough
      :                          @850
 15933: 7b bc                    u64 [a4] = a5
 15935: 95 bb 08                 a4 = a4 + 0x8
 15938: ac ab fb                 jump @850 if a4 <u a3
      :                          @851
 15941: 84 39 07                 a2 = t1 & 0x7
 15944: 52 09 0a                 jump @854 if a2 != 0
      :                          @852
 15947: 28 13                    jump @856
      :                          @853
 15949: 64 7a                    a3 = a0
 15951: 51 09 0f                 jump @856 if a2 == 0
      :                          @854
 15954: c8 a9 09                 a2 = a2 + a3
 15957: 01                       fallthrough
      :                          @855
 15958: 78 a8                    u8 [a3] = a1
 15960: 95 aa 01                 a3 = a3 + 0x1
 15963: ac 9a fb                 jump @855 if a3 <u a2
      :                          @856
 15966: 32 00                    ret
      :                          @857 [@dyn 210]
 15968: 82 77                    a0 = u64 [a0]
 15970: 01                       fallthrough
      :                          @858
 15971: 28                       jump @858
      :                          @859
 15972: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 15975: 7b 10 50                 u64 [sp + 0x50] = ra
 15978: 7b 15 48                 u64 [sp + 0x48] = s0
 15981: 7b 16 40                 u64 [sp + 0x40] = s1
 15984: 7b 18                    u64 [sp] = a1
 15986: 98 79 04                 a2 = a0 >> 0x4
 15989: 33 08 27                 a1 = 0x27
 15992: 53 29 71 02 81 00        jump @862 if a2 <u 625
      :                          @860
 15998: 33 08 27                 a1 = 0x27
 16001: 95 1a 3e                 a3 = sp + 0x3e
 16004: 3a 09 08 00 03           a2 = u64 [0x30008]
 16009: 7b 19 10                 u64 [sp + 0x10] = a2
 16012: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 16018: 33 04 7b 14              t2 = 0x147b
 16022: 33 0b 48 10 01           a4 = 0x11048
 16027: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 16033: 01                       fallthrough
      :                          @861
 16034: 64 72                    t0 = a0
 16036: 82 17 10                 a0 = u64 [sp + 0x10]
 16039: d6 72 07                 a0 = t0 mulhu a0
 16042: 98 77 0b                 a0 = a0 >> 0xb
 16045: 82 19 08                 a2 = u64 [sp + 0x8]
 16048: c0 97 0c                 i32 a5 = a0 * a2
 16051: c8 2c 06                 s1 = a5 + t0
 16054: 97 6c 30                 a5 = s1 << 0x30
 16057: 98 cc 32                 a5 = a5 >> 0x32
 16060: ca 4c 0c                 a5 = a5 * t2
 16063: 98 c3 11                 t1 = a5 >> 0x11
 16066: 98 cc 10                 a5 = a5 >> 0x10
 16069: 84 cc fe 07              a5 = a5 & 0x7fe
 16073: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 16076: c8 69 09                 a2 = a2 + s1
 16079: 97 99 31                 a2 = a2 << 0x31
 16082: 98 99 30                 a2 = a2 >> 0x30
 16085: c8 bc 0c                 a5 = a5 + a4
 16088: 7c c6                    s1 = u8 [a5]
 16090: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16093: c8 b9 09                 a2 = a2 + a4
 16096: 7c 95 01                 s0 = u8 [a2 + 0x1]
 16099: 7c 99                    a2 = u8 [a2]
 16101: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 16104: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 16107: 78 a5 01                 u8 [a3 + 0x1] = s0
 16110: 78 a9                    u8 [a3] = a2
 16112: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 16115: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 16118: ac 20 ac                 jump @861 if ra <u t0
      :                          @862
 16121: 54 17 63 3b              jump @864 if a0 <=u 99
      :                          @863
 16125: 97 79 30                 a2 = a0 << 0x30
 16128: 98 99 32                 a2 = a2 >> 0x32
 16131: 96 99 7b 14              a2 = a2 * 0x147b
 16135: 98 99 11                 a2 = a2 >> 0x11
 16138: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 16141: c8 a7 07                 a0 = a0 + a3
 16144: 97 77 31                 a0 = a0 << 0x31
 16147: 98 77 30                 a0 = a0 >> 0x30
 16150: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16153: 33 0a 48 10 01           a3 = 0x11048
 16158: c8 a7 07                 a0 = a0 + a3
 16161: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 16164: 7c 77                    a0 = u8 [a0]
 16166: 95 1b 19                 a4 = sp + 0x19
 16169: c8 8b 0b                 a4 = a4 + a1
 16172: 78 ba 01                 u8 [a4 + 0x1] = a3
 16175: 78 b7                    u8 [a4] = a0
 16177: 64 97                    a0 = a2
 16179: 01                       fallthrough
      :                          @864
 16180: 55 17 0a 14              jump @866 if a0 >=u 10
      :                          @865
 16184: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16187: 95 19 19                 a2 = sp + 0x19
 16190: c8 89 09                 a2 = a2 + a1
 16193: 83 77 30                 i32 a0 = a0 + 0x30
 16196: 78 97                    u8 [a2] = a0
 16198: 28 21                    jump @867
      :                          @866
 16200: 97 77 01                 a0 = a0 << 0x1
 16203: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16206: 33 09 48 10 01           a2 = 0x11048
 16211: c8 97 07                 a0 = a0 + a2
 16214: 7c 79 01                 a2 = u8 [a0 + 0x1]
 16217: 7c 77                    a0 = u8 [a0]
 16219: 95 1a 19                 a3 = sp + 0x19
 16222: c8 8a 0a                 a3 = a3 + a1
 16225: 78 a9 01                 u8 [a3 + 0x1] = a2
 16228: 78 a7                    u8 [a3] = a0
 16230: 01                       fallthrough
      :                          @867
 16231: 95 1a 19                 a3 = sp + 0x19
 16234: c8 8a 0a                 a3 = a3 + a1
 16237: 9a 8b 27                 a4 = 0x27 - a1
 16240: 33 08 f0 0f 01           a1 = 0x10ff0
 16245: 82 17                    a0 = u64 [sp]
 16247: 33 09                    a2 = 0
 16249: 50 20 a6 01 13           ra = 422, jump @869
      :                          @868 [@dyn 211]
 16254: 82 10 50                 ra = u64 [sp + 0x50]
 16257: 82 15 48                 s0 = u64 [sp + 0x48]
 16260: 82 16 40                 s1 = u64 [sp + 0x40]
 16263: 95 11 58                 sp = sp + 0x58
 16266: 32 00                    ret
      :                          @869
 16268: 95 11 98                 sp = sp + 0xffffffffffffff98
 16271: 7b 10 60                 u64 [sp + 0x60] = ra
 16274: 7b 15 58                 u64 [sp + 0x58] = s0
 16277: 7b 16 50                 u64 [sp + 0x50] = s1
 16280: 80 73 34                 t1 = u32 [a0 + 0x34]
 16283: 7b 1a 20                 u64 [sp + 0x20] = a3
 16286: 64 9c                    a5 = a2
 16288: 84 36 01                 s1 = t1 & 0x1
 16291: 33 02 2b                 t0 = 0x2b
 16294: 33 09 00 00 11           a2 = 0x110000
 16299: 84 3a 04                 a3 = t1 & 0x4
 16302: 7b 1b 28                 u64 [sp + 0x28] = a4
 16305: c8 b6 04                 t2 = s1 + a4
 16308: 7b 1c 30                 u64 [sp + 0x30] = a5
 16311: 52 0a 10                 jump @872 if a3 != 0
      :                          @870
 16314: 49 11 38                 u64 [sp + 56] = 0
 16317: 82 78                    a1 = u64 [a0]
 16319: 94 69 2b                 a2 = 0x2b if s1 != 0
 16322: 52 08 35                 jump @876 if a1 != 0
      :                          @871
 16325: 28 56                    jump @881
      :                          @872
 16327: 7b 18 38                 u64 [sp + 0x38] = a1
 16330: 33 09                    a2 = 0
 16332: 51 0c 1b                 jump @875 if a5 == 0
      :                          @873
 16335: 82 1b 38                 a4 = u64 [sp + 0x38]
 16338: 01                       fallthrough
      :                          @874
 16339: 7d b5                    s0 = i8 [a4]
 16341: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 16344: 85 5a 01                 a3 = s0 ^ 0x1
 16347: c8 a9 09                 a2 = a2 + a3
 16350: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16353: 95 bb 01                 a4 = a4 + 0x1
 16356: 52 0c ef                 jump @874 if a5 != 0
      :                          @875
 16359: c8 94 04                 t2 = t2 + a2
 16362: 33 09 00 00 11           a2 = 0x110000
 16367: 82 78                    a1 = u64 [a0]
 16369: db 62 09                 a2 = t0 if s1 != 0
 16372: 51 08 27                 jump @881 if a1 == 0
      :                          @876
 16375: 82 7a 08                 a3 = u64 [a0 + 0x8]
 16378: ae a4 21                 jump @881 if t2 >=u a3
      :                          @877
 16381: 84 38 08                 a1 = t1 & 0x8
 16384: 52 08 51                 jump @884 if a1 != 0
      :                          @878
 16387: 7c 76 38                 s1 = u8 [a0 + 0x38]
 16390: c9 4a 0a                 a3 = a3 - t2
 16393: 7b 19 18                 u64 [sp + 0x18] = a2
 16396: 5a 16 01 a0 00           jump @891 if s1 >s 1
      :                          @879
 16401: 52 06 ad 00              jump @893 if s1 != 0
      :                          @880
 16405: 7b 1a 10                 u64 [sp + 0x10] = a3
 16408: 28 ac 00                 jump @894
      :                          @881
 16411: 82 75 20                 s0 = u64 [a0 + 0x20]
 16414: 82 76 28                 s1 = u64 [a0 + 0x28]
 16417: 64 57                    a0 = s0
 16419: 64 68                    a1 = s1
 16421: 82 1a 38                 a3 = u64 [sp + 0x38]
 16424: 82 1b 30                 a4 = u64 [sp + 0x30]
 16427: 50 20 a8 01 75 01        ra = 424, jump @914
      :                          @882 [@dyn 212]
 16433: 33 08 01                 a1 = 0x1
 16436: 52 07 be 00              jump @899 if a0 != 0
      :                          @883
 16440: 82 6c 18                 a5 = u64 [s1 + 0x18]
 16443: 64 57                    a0 = s0
 16445: 82 18 20                 a1 = u64 [sp + 0x20]
 16448: 82 19 28                 a2 = u64 [sp + 0x28]
 16451: 82 10 60                 ra = u64 [sp + 0x60]
 16454: 82 15 58                 s0 = u64 [sp + 0x58]
 16457: 82 16 50                 s1 = u64 [sp + 0x50]
 16460: 95 11 68                 sp = sp + 0x68
 16463: 32 0c                    jump [a5]
      :                          @884
 16465: 7b 1a 40                 u64 [sp + 0x40] = a3
 16468: 64 45                    s0 = t2
 16470: 81 78 30                 a1 = i32 [a0 + 0x30]
 16473: 7b 18 10                 u64 [sp + 0x10] = a1
 16476: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 16479: 7b 1a 08                 u64 [sp + 0x8] = a3
 16482: 82 7a 20                 a3 = u64 [a0 + 0x20]
 16485: 82 78 28                 a1 = u64 [a0 + 0x28]
 16488: 48 17 30 30              u32 [a0 + 48] = 0x30
 16492: 7b 17                    u64 [sp] = a0
 16494: 46 17 38 01              u8 [a0 + 56] = 0x1
 16498: 7b 1a 48                 u64 [sp + 0x48] = a3
 16501: 64 a7                    a0 = a3
 16503: 64 86                    s1 = a1
 16505: 82 1a 38                 a3 = u64 [sp + 0x38]
 16508: 82 1b 30                 a4 = u64 [sp + 0x30]
 16511: 50 20 aa 01 21 01        ra = 426, jump @914
      :                          @885 [@dyn 213]
 16517: 52 07 69                 jump @898 if a0 != 0
      :                          @886
 16520: 82 17 40                 a0 = u64 [sp + 0x40]
 16523: c9 57 05                 s0 = a0 - s0
 16526: 95 55 01                 s0 = s0 + 0x1
 16529: 01                       fallthrough
      :                          @887
 16530: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 16533: 51 05 cb 00              jump @909 if s0 == 0
      :                          @888
 16537: 82 69 20                 a2 = u64 [s1 + 0x20]
 16540: 33 08 30                 a1 = 0x30
 16543: 82 17 48                 a0 = u64 [sp + 0x48]
 16546: b4 90 02 ac 01           ra = 428, jump [a2]
      :                          @889 [@dyn 214]
 16551: 51 07 eb                 jump @887 if a0 == 0
      :                          @890
 16554: 28 44                    jump @898
      :                          @891
 16556: 52 16 02 12              jump @893 if s1 != 2
      :                          @892
 16560: 98 a6 01                 s1 = a3 >> 0x1
 16563: 95 a8 01                 a1 = a3 + 0x1
 16566: 98 88 01                 a1 = a1 >> 0x1
 16569: 7b 18 10                 u64 [sp + 0x10] = a1
 16572: 28 08                    jump @894
      :                          @893
 16574: 64 a6                    s1 = a3
 16576: 49 11 10                 u64 [sp + 16] = 0
 16579: 01                       fallthrough
      :                          @894
 16580: 82 78 20                 a1 = u64 [a0 + 0x20]
 16583: 7b 18 48                 u64 [sp + 0x48] = a1
 16586: 82 75 28                 s0 = u64 [a0 + 0x28]
 16589: 81 77 30                 a0 = i32 [a0 + 0x30]
 16592: 7b 17 40                 u64 [sp + 0x40] = a0
 16595: 95 66 01                 s1 = s1 + 0x1
 16598: 01                       fallthrough
      :                          @895
 16599: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 16602: 51 06 28                 jump @900 if s1 == 0
      :                          @896
 16605: 82 59 20                 a2 = u64 [s0 + 0x20]
 16608: 82 17 48                 a0 = u64 [sp + 0x48]
 16611: 82 18 40                 a1 = u64 [sp + 0x40]
 16614: b4 90 02 ae 01           ra = 430, jump [a2]
      :                          @897 [@dyn 215]
 16619: 51 07 ec                 jump @895 if a0 == 0
      :                          @898
 16622: 33 08 01                 a1 = 0x1
 16625: 01                       fallthrough
      :                          @899
 16626: 64 87                    a0 = a1
 16628: 82 10 60                 ra = u64 [sp + 0x60]
 16631: 82 15 58                 s0 = u64 [sp + 0x58]
 16634: 82 16 50                 s1 = u64 [sp + 0x50]
 16637: 95 11 68                 sp = sp + 0x68
 16640: 32 00                    ret
      :                          @900
 16642: 82 16 48                 s1 = u64 [sp + 0x48]
 16645: 64 67                    a0 = s1
 16647: 64 58                    a1 = s0
 16649: 82 19 18                 a2 = u64 [sp + 0x18]
 16652: 82 1a 38                 a3 = u64 [sp + 0x38]
 16655: 82 1b 30                 a4 = u64 [sp + 0x30]
 16658: 50 20 b0 01 8e 00        ra = 432, jump @914
      :                          @901 [@dyn 216]
 16664: 33 08 01                 a1 = 0x1
 16667: 52 07 d7                 jump @899 if a0 != 0
      :                          @902
 16670: 82 5a 18                 a3 = u64 [s0 + 0x18]
 16673: 64 67                    a0 = s1
 16675: 82 18 20                 a1 = u64 [sp + 0x20]
 16678: 82 19 28                 a2 = u64 [sp + 0x28]
 16681: b4 a0 02 b2 01           ra = 434, jump [a3]
      :                          @903 [@dyn 217]
 16686: 33 08 01                 a1 = 0x1
 16689: 52 07 c1                 jump @899 if a0 != 0
      :                          @904
 16692: 82 17 10                 a0 = u64 [sp + 0x10]
 16695: 9a 77                    a0 = -a0
 16697: 7b 17 38                 u64 [sp + 0x38] = a0
 16700: 33 06 ff                 s1 = 0xffffffffffffffff
 16703: 01                       fallthrough
      :                          @905
 16704: 82 17 38                 a0 = u64 [sp + 0x38]
 16707: c8 67 07                 a0 = a0 + s1
 16710: 51 17 ff 45              jump @912 if a0 == 4294967295
      :                          @906
 16714: 82 59 20                 a2 = u64 [s0 + 0x20]
 16717: 82 17 48                 a0 = u64 [sp + 0x48]
 16720: 82 18 40                 a1 = u64 [sp + 0x40]
 16723: b4 90 02 b4 01           ra = 436, jump [a2]
      :                          @907 [@dyn 218]
 16728: 95 66 01                 s1 = s1 + 0x1
 16731: 51 07 e5                 jump @905 if a0 == 0
      :                          @908
 16734: 28 39                    jump @913
      :                          @909
 16736: 82 6a 18                 a3 = u64 [s1 + 0x18]
 16739: 82 17 48                 a0 = u64 [sp + 0x48]
 16742: 82 18 20                 a1 = u64 [sp + 0x20]
 16745: 82 19 28                 a2 = u64 [sp + 0x28]
 16748: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @910 [@dyn 219]
 16753: 33 08 01                 a1 = 0x1
 16756: 52 07 7e ff              jump @899 if a0 != 0
      :                          @911
 16760: 33 08                    a1 = 0
 16762: 82 16                    s1 = u64 [sp]
 16764: 82 17 10                 a0 = u64 [sp + 0x10]
 16767: 7a 67 30                 u32 [s1 + 0x30] = a0
 16770: 82 17 08                 a0 = u64 [sp + 0x8]
 16773: 78 67 38                 u8 [s1 + 0x38] = a0
 16776: 28 6a ff                 jump @899
      :                          @912
 16779: 82 16 10                 s1 = u64 [sp + 0x10]
 16782: 82 17 10                 a0 = u64 [sp + 0x10]
 16785: d8 76 08                 a1 = s1 <u a0
 16788: 28 5e ff                 jump @899
      :                          @913
 16791: 82 17 10                 a0 = u64 [sp + 0x10]
 16794: d8 76 08                 a1 = s1 <u a0
 16797: 28 55 ff                 jump @899
      :                          @914
 16800: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16803: 7b 10 20                 u64 [sp + 0x20] = ra
 16806: 7b 15 18                 u64 [sp + 0x18] = s0
 16809: 7b 16 10                 u64 [sp + 0x10] = s1
 16812: 83 9c                    i32 a5 = a2 + 0
 16814: 33 02 00 00 11           t0 = 0x110000
 16819: 64 a6                    s1 = a3
 16821: 64 85                    s0 = a1
 16823: 64 7a                    a3 = a0
 16825: aa 2c 21                 jump @917 if a5 == t0
      :                          @915
 16828: 82 5c 20                 a5 = u64 [s0 + 0x20]
 16831: 64 a7                    a0 = a3
 16833: 64 98                    a1 = a2
 16835: 7b 1b 08                 u64 [sp + 0x8] = a4
 16838: 7b 1a                    u64 [sp] = a3
 16840: b4 c0 02 b8 01           ra = 440, jump [a5]
      :                          @916 [@dyn 220]
 16845: 82 1a                    a3 = u64 [sp]
 16847: 82 1b 08                 a4 = u64 [sp + 0x8]
 16850: 64 78                    a1 = a0
 16852: 33 07 01                 a0 = 0x1
 16855: 52 08 20                 jump @920 if a1 != 0
      :                          @917
 16858: 51 06 1a                 jump @919 if s1 == 0
      :                          @918
 16861: 82 5c 18                 a5 = u64 [s0 + 0x18]
 16864: 64 a7                    a0 = a3
 16866: 64 68                    a1 = s1
 16868: 64 b9                    a2 = a4
 16870: 82 10 20                 ra = u64 [sp + 0x20]
 16873: 82 15 18                 s0 = u64 [sp + 0x18]
 16876: 82 16 10                 s1 = u64 [sp + 0x10]
 16879: 95 11 28                 sp = sp + 0x28
 16882: 32 0c                    jump [a5]
      :                          @919
 16884: 33 07                    a0 = 0
 16886: 01                       fallthrough
      :                          @920
 16887: 82 10 20                 ra = u64 [sp + 0x20]
 16890: 82 15 18                 s0 = u64 [sp + 0x18]
 16893: 82 16 10                 s1 = u64 [sp + 0x10]
 16896: 95 11 28                 sp = sp + 0x28
 16899: 32 00                    ret
      :                          @921
 16901: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 16905: 7b 10 80 00              u64 [sp + 0x80] = ra
 16909: 7b 15 78                 u64 [sp + 0x78] = s0
 16912: 7b 16 70                 u64 [sp + 0x70] = s1
 16915: 49 11 60 20              u64 [sp + 96] = 0x20
 16919: 33 0a 03                 a3 = 0x3
 16922: 78 1a 68                 u8 [sp + 0x68] = a3
 16925: 82 96 20                 s1 = u64 [a2 + 0x20]
 16928: 49 11 30                 u64 [sp + 48] = 0
 16931: 49 11 40                 u64 [sp + 64] = 0
 16934: 7b 17 50                 u64 [sp + 0x50] = a0
 16937: 7b 18 58                 u64 [sp + 0x58] = a1
 16940: 51 06 0a 01              jump @943 if s1 == 0
      :                          @922
 16944: 82 97 28                 a0 = u64 [a2 + 0x28]
 16947: 51 07 79 01              jump @953 if a0 == 0
      :                          @923
 16951: 49 11 28                 u64 [sp + 40] = 0
 16954: 82 95                    s0 = u64 [a2]
 16956: 7b 19 08                 u64 [sp + 0x8] = a2
 16959: 82 98 10                 a1 = u64 [a2 + 0x10]
 16962: 7b 18 18                 u64 [sp + 0x18] = a1
 16965: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16968: 97 88 03                 a1 = a1 << 0x3
 16971: 98 88 03                 a1 = a1 >> 0x3
 16974: 95 88 01                 a1 = a1 + 0x1
 16977: 7b 18                    u64 [sp] = a1
 16979: 95 55 08                 s0 = s0 + 0x8
 16982: 96 78 38                 a1 = a0 * 0x38
 16985: 95 66 18                 s1 = s1 + 0x18
 16988: 33 07 a4 01              a0 = 0x1a4
 16992: 7b 17 10                 u64 [sp + 0x10] = a0
 16995: 01                       fallthrough
      :                          @924
 16996: 7b 18 20                 u64 [sp + 0x20] = a1
 16999: 82 59                    a2 = u64 [s0]
 17001: 51 09 18                 jump @927 if a2 == 0
      :                          @925
 17004: 82 1a 58                 a3 = u64 [sp + 0x58]
 17007: 82 17 50                 a0 = u64 [sp + 0x50]
 17010: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 17013: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17016: b4 a0 02 ba 01           ra = 442, jump [a3]
      :                          @926 [@dyn 221]
 17021: 52 07 55 01              jump @956 if a0 != 0
      :                          @927
 17025: 81 67 10                 a0 = i32 [s1 + 0x10]
 17028: 7a 17 60                 u32 [sp + 0x60] = a0
 17031: 7c 67 18                 a0 = u8 [s1 + 0x18]
 17034: 78 17 68                 u8 [sp + 0x68] = a0
 17037: 81 67 14                 a0 = i32 [s1 + 0x14]
 17040: 7a 17 64                 u32 [sp + 0x64] = a0
 17043: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17046: 82 67                    a0 = u64 [s1]
 17048: 51 08 26                 jump @932 if a1 == 0
      :                          @928
 17051: 52 18 01 16              jump @930 if a1 != 1
      :                          @929
 17055: 97 77 04                 a0 = a0 << 0x4
 17058: 82 18 18                 a1 = u64 [sp + 0x18]
 17061: c8 87 07                 a0 = a0 + a1
 17064: 82 78 08                 a1 = u64 [a0 + 0x8]
 17067: 82 19 10                 a2 = u64 [sp + 0x10]
 17070: aa 98 07                 jump @931 if a1 == a2
      :                          @930
 17073: 33 08                    a1 = 0
 17075: 28 0f                    jump @933
      :                          @931
 17077: 82 77                    a0 = u64 [a0]
 17079: 82 77                    a0 = u64 [a0]
 17081: 33 08 01                 a1 = 0x1
 17084: 28 06                    jump @933
      :                          @932
 17086: 33 08 01                 a1 = 0x1
 17089: 01                       fallthrough
      :                          @933
 17090: 7b 18 30                 u64 [sp + 0x30] = a1
 17093: 7b 17 38                 u64 [sp + 0x38] = a0
 17096: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 17099: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 17102: 51 08 26                 jump @938 if a1 == 0
      :                          @934
 17105: 52 18 01 16              jump @936 if a1 != 1
      :                          @935
 17109: 97 77 04                 a0 = a0 << 0x4
 17112: 82 18 18                 a1 = u64 [sp + 0x18]
 17115: c8 87 07                 a0 = a0 + a1
 17118: 82 78 08                 a1 = u64 [a0 + 0x8]
 17121: 82 19 10                 a2 = u64 [sp + 0x10]
 17124: aa 98 07                 jump @937 if a1 == a2
      :                          @936
 17127: 33 08                    a1 = 0
 17129: 28 0f                    jump @939
      :                          @937
 17131: 82 77                    a0 = u64 [a0]
 17133: 82 77                    a0 = u64 [a0]
 17135: 33 08 01                 a1 = 0x1
 17138: 28 06                    jump @939
      :                          @938
 17140: 33 08 01                 a1 = 0x1
 17143: 01                       fallthrough
      :                          @939
 17144: 7b 18 40                 u64 [sp + 0x40] = a1
 17147: 7b 17 48                 u64 [sp + 0x48] = a0
 17150: 82 67 08                 a0 = u64 [s1 + 0x8]
 17153: 97 77 04                 a0 = a0 << 0x4
 17156: 82 18 18                 a1 = u64 [sp + 0x18]
 17159: c8 78 08                 a1 = a1 + a0
 17162: 82 87                    a0 = u64 [a1]
 17164: 82 89 08                 a2 = u64 [a1 + 0x8]
 17167: 95 18 30                 a1 = sp + 0x30
 17170: b4 90 02 bc 01           ra = 444, jump [a2]
      :                          @940 [@dyn 222]
 17175: 52 07 bb 00              jump @956 if a0 != 0
      :                          @941
 17179: 95 55 10                 s0 = s0 + 0x10
 17182: 82 18 20                 a1 = u64 [sp + 0x20]
 17185: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 17188: 95 66 38                 s1 = s1 + 0x38
 17191: 82 17 28                 a0 = u64 [sp + 0x28]
 17194: 95 77 01                 a0 = a0 + 0x1
 17197: 7b 17 28                 u64 [sp + 0x28] = a0
 17200: 52 08 34 ff              jump @924 if a1 != 0
      :                          @942
 17204: 28 6b                    jump @951
      :                          @943
 17206: 82 97 18                 a0 = u64 [a2 + 0x18]
 17209: 51 07 73                 jump @953 if a0 == 0
      :                          @944
 17212: 82 95 10                 s0 = u64 [a2 + 0x10]
 17215: 33 0a                    a3 = 0
 17217: 97 78 04                 a1 = a0 << 0x4
 17220: c8 58 08                 a1 = a1 + s0
 17223: 7b 18 20                 u64 [sp + 0x20] = a1
 17226: 7b 19 08                 u64 [sp + 0x8] = a2
 17229: 82 96                    s1 = u64 [a2]
 17231: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17234: 97 77 04                 a0 = a0 << 0x4
 17237: 98 77 04                 a0 = a0 >> 0x4
 17240: 95 77 01                 a0 = a0 + 0x1
 17243: 7b 17                    u64 [sp] = a0
 17245: 95 66 08                 s1 = s1 + 0x8
 17248: 01                       fallthrough
      :                          @945
 17249: 7b 1a 28                 u64 [sp + 0x28] = a3
 17252: 82 69                    a2 = u64 [s1]
 17254: 51 09 17                 jump @948 if a2 == 0
      :                          @946
 17257: 82 1a 58                 a3 = u64 [sp + 0x58]
 17260: 82 17 50                 a0 = u64 [sp + 0x50]
 17263: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17266: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17269: b4 a0 02 be 01           ra = 446, jump [a3]
      :                          @947 [@dyn 223]
 17274: 52 07 58                 jump @956 if a0 != 0
      :                          @948
 17277: 82 57                    a0 = u64 [s0]
 17279: 82 59 08                 a2 = u64 [s0 + 0x8]
 17282: 95 18 30                 a1 = sp + 0x30
 17285: b4 90 02 c0 01           ra = 448, jump [a2]
      :                          @949 [@dyn 224]
 17290: 52 07 48                 jump @956 if a0 != 0
      :                          @950
 17293: 95 66 10                 s1 = s1 + 0x10
 17296: 95 55 10                 s0 = s0 + 0x10
 17299: 82 1a 28                 a3 = u64 [sp + 0x28]
 17302: 95 aa 01                 a3 = a3 + 0x1
 17305: 82 17 20                 a0 = u64 [sp + 0x20]
 17308: ab 75 c5                 jump @945 if s0 != a0
      :                          @951
 17311: 82 19 08                 a2 = u64 [sp + 0x8]
 17314: 82 1a                    a3 = u64 [sp]
 17316: 82 97 08                 a0 = u64 [a2 + 0x8]
 17319: ac 7a 0d                 jump @954 if a3 <u a0
      :                          @952
 17322: 28 2d                    jump @957
      :                          @953
 17324: 33 0a                    a3 = 0
 17326: 82 97 08                 a0 = u64 [a2 + 0x8]
 17329: 54 07 26                 jump @957 if a0 <=u 0
      :                          @954
 17332: 82 97                    a0 = u64 [a2]
 17334: 97 a8 04                 a1 = a3 << 0x4
 17337: c8 87 09                 a2 = a0 + a1
 17340: 82 1a 58                 a3 = u64 [sp + 0x58]
 17343: 82 17 50                 a0 = u64 [sp + 0x50]
 17346: 82 98                    a1 = u64 [a2]
 17348: 82 99 08                 a2 = u64 [a2 + 0x8]
 17351: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17354: b4 a0 02 c2 01           ra = 450, jump [a3]
      :                          @955 [@dyn 225]
 17359: 51 07 08                 jump @957 if a0 == 0
      :                          @956
 17362: 33 07 01                 a0 = 0x1
 17365: 28 05                    jump @958
      :                          @957
 17367: 33 07                    a0 = 0
 17369: 01                       fallthrough
      :                          @958
 17370: 82 10 80 00              ra = u64 [sp + 0x80]
 17374: 82 15 78                 s0 = u64 [sp + 0x78]
 17377: 82 16 70                 s1 = u64 [sp + 0x70]
 17380: 95 11 88 00              sp = sp + 0x88
 17384: 32 00                    ret
      :                          @959 [@dyn 226]
 17386: 32 00                    ret
      :                          @960 [@dyn 227]
 17388: 95 11 80                 sp = sp + 0xffffffffffffff80
 17391: 7b 10 78                 u64 [sp + 0x78] = ra
 17394: 7b 15 70                 u64 [sp + 0x70] = s0
 17397: 7b 16 68                 u64 [sp + 0x68] = s1
 17400: 64 92                    t0 = a2
 17402: 33 00                    ra = 0
 17404: 33 0b                    a4 = 0
 17406: 33 05                    s0 = 0
 17408: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 17418: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 17424: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 17434: 82 79 10                 a2 = u64 [a0 + 0x10]
 17437: 7b 19 48                 u64 [sp + 0x48] = a2
 17440: 82 79                    a2 = u64 [a0]
 17442: 7b 19 38                 u64 [sp + 0x38] = a2
 17445: 82 77 08                 a0 = u64 [a0 + 0x8]
 17448: 7b 17 30                 u64 [sp + 0x30] = a0
 17451: 33 07 38 10 01           a0 = 0x11038
 17456: 7b 17 08                 u64 [sp + 0x8] = a0
 17459: 3a 07 10 00 03           a0 = u64 [0x30010]
 17464: 7b 17 60                 u64 [sp + 0x60] = a0
 17467: 7b 18 58                 u64 [sp + 0x58] = a1
 17470: 95 88 08                 a1 = a1 + 0x8
 17473: 7b 18                    u64 [sp] = a1
 17475: 33 0c 0a                 a5 = 0xa
 17478: 7b 12 20                 u64 [sp + 0x20] = t0
 17481: 7b 13 18                 u64 [sp + 0x18] = t1
 17484: 7b 14 10                 u64 [sp + 0x10] = t2
 17487: 28 3b                    jump @964
      :                          @961
 17489: 64 06                    s1 = ra
 17491: c8 89 07                 a0 = a2 + a1
 17494: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 17497: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17500: 88 77 01                 a0 = a0 <u 0x1
 17503: 01                       fallthrough
      :                          @962
 17504: 82 1a 48                 a3 = u64 [sp + 0x48]
 17507: 78 a7                    u8 [a3] = a0
 17509: 82 17 30                 a0 = u64 [sp + 0x30]
 17512: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17515: 82 17 38                 a0 = u64 [sp + 0x38]
 17518: b4 a0 02 c8 01           ra = 456, jump [a3]
      :                          @963 [@dyn 228]
 17523: 64 5b                    a4 = s0
 17525: 82 12 20                 t0 = u64 [sp + 0x20]
 17528: 82 13 18                 t1 = u64 [sp + 0x18]
 17531: 82 14 10                 t2 = u64 [sp + 0x10]
 17534: 64 60                    ra = s1
 17536: 33 0c 0a                 a5 = 0xa
 17539: 82 15 40                 s0 = u64 [sp + 0x40]
 17542: 52 07 64 01              jump @1005 if a0 != 0
      :                          @964
 17546: 84 57 ff 00              a0 = s0 & 0xff
 17550: 52 07 58 01              jump @1004 if a0 != 0
      :                          @965
 17554: 7b 1b 50                 u64 [sp + 0x50] = a4
 17557: ae 02 0a                 jump @968 if t0 >=u ra
      :                          @966
 17560: 28 ef 00                 jump @995
      :                          @967
 17563: ac 02 ec 00              jump @995 if t0 <u ra
      :                          @968
 17567: c9 02 08                 a1 = t0 - ra
 17570: 82 16 58                 s1 = u64 [sp + 0x58]
 17573: c8 06 06                 s1 = s1 + ra
 17576: 55 18 10 1d              jump @974 if a1 >=u 16
      :                          @969
 17580: aa 02 d8 00              jump @994 if t0 == ra
      :                          @970
 17584: 33 0a                    a3 = 0
 17586: 01                       fallthrough
      :                          @971
 17587: c8 a6 07                 a0 = s1 + a3
 17590: 7c 77                    a0 = u8 [a0]
 17592: aa c7 a5 00              jump @989 if a0 == a5
      :                          @972
 17596: 95 aa 01                 a3 = a3 + 0x1
 17599: ab a8 f4                 jump @971 if a1 != a3
      :                          @973
 17602: 28 c2 00                 jump @994
      :                          @974
 17605: 95 69 07                 a2 = s1 + 0x7
 17608: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 17611: c9 6a 07                 a0 = a3 - s1
 17614: d3 6a 0a                 a3 = a3 ^ s1
 17617: 88 aa 01                 a3 = a3 <u 0x1
 17620: 88 7b 01                 a4 = a0 <u 0x1
 17623: d4 ba 0a                 a3 = a3 | a4
 17626: 51 0a 45                 jump @980 if a3 == 0
      :                          @975
 17629: 33 07                    a0 = 0
 17631: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17634: 82 1b                    a4 = u64 [sp]
 17636: c8 0b 0b                 a4 = a4 + ra
 17639: 28 08                    jump @977
      :                          @976
 17641: 82 1b                    a4 = u64 [sp]
 17643: c8 0b 0b                 a4 = a4 + ra
 17646: 01                       fallthrough
      :                          @977
 17647: c8 76 0c                 a5 = s1 + a0
 17650: 82 cc                    a5 = u64 [a5]
 17652: c8 7b 09                 a2 = a4 + a0
 17655: 82 99                    a2 = u64 [a2]
 17657: d3 4c 05                 s0 = a5 ^ t2
 17660: c8 35 05                 s0 = s0 + t1
 17663: e0 c5 0c                 a5 = s0 & ~a5
 17666: d3 49 05                 s0 = a2 ^ t2
 17669: c8 35 05                 s0 = s0 + t1
 17672: e0 95 09                 a2 = s0 & ~a2
 17675: d4 c9 09                 a2 = a2 | a5
 17678: 82 1c 60                 a5 = u64 [sp + 0x60]
 17681: d2 c9 09                 a2 = a2 & a5
 17684: 52 09 1f                 jump @983 if a2 != 0
      :                          @978
 17687: 95 77 10                 a0 = a0 + 0x10
 17690: ae 7a d5                 jump @977 if a3 >=u a0
      :                          @979
 17693: 28 16                    jump @983
      :                          @980
 17695: c8 a6 0b                 a4 = s1 + a3
 17698: 7c bb                    a4 = u8 [a4]
 17700: aa cb 51                 jump @992 if a4 == a5
      :                          @981
 17703: 95 aa 01                 a3 = a3 + 0x1
 17706: ab a7 f5                 jump @980 if a0 != a3
      :                          @982
 17709: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17712: ae 7a b9                 jump @976 if a3 >=u a0
      :                          @983
 17715: aa 87 9b 00              jump @1001 if a0 == a1
      :                          @984
 17719: 33 0a                    a3 = 0
 17721: c8 76 06                 s1 = s1 + a0
 17724: c9 72 08                 a1 = t0 - a0
 17727: c9 08 08                 a1 = a1 - ra
 17730: 33 0c 0a                 a5 = 0xa
 17733: 82 1b 50                 a4 = u64 [sp + 0x50]
 17736: 01                       fallthrough
      :                          @985
 17737: c8 a6 09                 a2 = s1 + a3
 17740: 7c 99                    a2 = u8 [a2]
 17742: aa c9 0b                 jump @988 if a2 == a5
      :                          @986
 17745: 95 aa 01                 a3 = a3 + 0x1
 17748: ab a8 f5                 jump @985 if a1 != a3
      :                          @987
 17751: 28 2d                    jump @994
      :                          @988
 17753: c8 7a 0a                 a3 = a3 + a0
 17756: 01                       fallthrough
      :                          @989
 17757: c8 0a 0a                 a3 = a3 + ra
 17760: 95 a0 01                 ra = a3 + 0x1
 17763: ae 2a 38 ff              jump @967 if a3 >=u t0
      :                          @990
 17767: 82 17 58                 a0 = u64 [sp + 0x58]
 17770: c8 7a 0a                 a3 = a3 + a0
 17773: 7c a7                    a0 = u8 [a3]
 17775: ab c7 2c ff              jump @967 if a0 != a5
      :                          @991
 17779: 28 62                    jump @1002
      :                          @992
 17781: 82 1b 50                 a4 = u64 [sp + 0x50]
 17784: c8 0a 0a                 a3 = a3 + ra
 17787: 95 a0 01                 ra = a3 + 0x1
 17790: ac 2a e9                 jump @990 if a3 <u t0
      :                          @993
 17793: 28 1a ff                 jump @967
      :                          @994
 17796: 64 20                    ra = t0
 17798: 01                       fallthrough
      :                          @995
 17799: 49 11 40 01              u64 [sp + 64] = 0x1
 17803: 64 b5                    s0 = a4
 17805: 64 26                    s1 = t0
 17807: aa 2b 57                 jump @1004 if a4 == t0
      :                          @996
 17810: 82 17 48                 a0 = u64 [sp + 0x48]
 17813: 7c 77                    a0 = u8 [a0]
 17815: 51 07 23                 jump @999 if a0 == 0
      :                          @997
 17818: 82 17 30                 a0 = u64 [sp + 0x30]
 17821: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17824: 33 09 04                 a2 = 0x4
 17827: 82 17 38                 a0 = u64 [sp + 0x38]
 17830: 82 18 08                 a1 = u64 [sp + 0x8]
 17833: 7b 10 28                 u64 [sp + 0x28] = ra
 17836: b4 a0 02 ca 01           ra = 458, jump [a3]
      :                          @998 [@dyn 229]
 17841: 82 1b 50                 a4 = u64 [sp + 0x50]
 17844: 82 10 28                 ra = u64 [sp + 0x28]
 17847: 52 07 33                 jump @1005 if a0 != 0
      :                          @999
 17850: c9 b6 09                 a2 = s1 - a4
 17853: 82 18 58                 a1 = u64 [sp + 0x58]
 17856: c8 b8 08                 a1 = a1 + a4
 17859: ab b6 8e fe              jump @961 if s1 != a4
      :                          @1000
 17863: 64 06                    s1 = ra
 17865: 33 07                    a0 = 0
 17867: 28 95 fe                 jump @962
      :                          @1001
 17870: 64 20                    ra = t0
 17872: 82 1b 50                 a4 = u64 [sp + 0x50]
 17875: 28 b4                    jump @995
      :                          @1002
 17877: 49 11 40                 u64 [sp + 64] = 0
 17880: 64 05                    s0 = ra
 17882: 64 06                    s1 = ra
 17884: 82 17 48                 a0 = u64 [sp + 0x48]
 17887: 7c 77                    a0 = u8 [a0]
 17889: 52 07 b9                 jump @997 if a0 != 0
      :                          @1003
 17892: 28 d6                    jump @999
      :                          @1004
 17894: 33 07                    a0 = 0
 17896: 28 06                    jump @1006
      :                          @1005
 17898: 33 07 01                 a0 = 0x1
 17901: 01                       fallthrough
      :                          @1006
 17902: 82 10 78                 ra = u64 [sp + 0x78]
 17905: 82 15 70                 s0 = u64 [sp + 0x70]
 17908: 82 16 68                 s1 = u64 [sp + 0x68]
 17911: 95 11 80 00              sp = sp + 0x80
 17915: 32 00                    ret
      :                          @1007 [@dyn 230]
 17917: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17920: 7b 10 20                 u64 [sp + 0x20] = ra
 17923: 7b 15 18                 u64 [sp + 0x18] = s0
 17926: 7b 16 10                 u64 [sp + 0x10] = s1
 17929: 82 75 10                 s0 = u64 [a0 + 0x10]
 17932: 7c 59                    a2 = u8 [s0]
 17934: 82 7b                    a4 = u64 [a0]
 17936: 82 76 08                 s1 = u64 [a0 + 0x8]
 17939: 51 09 33                 jump @1011 if a2 == 0
      :                          @1008
 17942: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17945: 7b 18 08                 u64 [sp + 0x8] = a1
 17948: 33 08 38 10 01           a1 = 0x11038
 17953: 33 09 04                 a2 = 0x4
 17956: 64 b7                    a0 = a4
 17958: 7b 1b                    u64 [sp] = a4
 17960: b4 a0 02 ce 01           ra = 462, jump [a3]
      :                          @1009 [@dyn 231]
 17965: 82 18 08                 a1 = u64 [sp + 0x8]
 17968: 82 1b                    a4 = u64 [sp]
 17970: 51 07 14                 jump @1011 if a0 == 0
      :                          @1010
 17973: 33 07 01                 a0 = 0x1
 17976: 82 10 20                 ra = u64 [sp + 0x20]
 17979: 82 15 18                 s0 = u64 [sp + 0x18]
 17982: 82 16 10                 s1 = u64 [sp + 0x10]
 17985: 95 11 28                 sp = sp + 0x28
 17988: 32 00                    ret
      :                          @1011
 17990: 83 87                    i32 a0 = a1 + 0
 17992: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17995: 88 77 01                 a0 = a0 <u 0x1
 17998: 78 57                    u8 [s0] = a0
 18000: 82 6c 20                 a5 = u64 [s1 + 0x20]
 18003: 64 b7                    a0 = a4
 18005: 82 10 20                 ra = u64 [sp + 0x20]
 18008: 82 15 18                 s0 = u64 [sp + 0x18]
 18011: 82 16 10                 s1 = u64 [sp + 0x10]
 18014: 95 11 28                 sp = sp + 0x28
 18017: 32 0c                    jump [a5]
      :                          @1012 [@dyn 232]
 18019: 64 8a                    a3 = a1
 18021: 33 08 f8 0f 01           a1 = 0x10ff8
 18026: 64 a9                    a2 = a3
 18028: 28 99 fb                 jump @921
      :                          @1013
 18031: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 18035: 7b 10 88 00              u64 [sp + 0x88] = ra
 18039: 7b 15 80 00              u64 [sp + 0x80] = s0
 18043: 7b 16 78                 u64 [sp + 0x78] = s1
 18046: 64 75                    s0 = a0
 18048: 7c 77 08                 a0 = u8 [a0 + 0x8]
 18051: 64 8b                    a4 = a1
 18053: 33 08 01                 a1 = 0x1
 18056: 33 06 01                 s1 = 0x1
 18059: 51 07 1d                 jump @1015 if a0 == 0
      :                          @1014
 18062: 78 56 08                 u8 [s0 + 0x8] = s1
 18065: 46 15 09 01              u8 [s0 + 9] = 0x1
 18069: 64 57                    a0 = s0
 18071: 82 10 88 00              ra = u64 [sp + 0x88]
 18075: 82 15 80 00              s0 = u64 [sp + 0x80]
 18079: 82 16 78                 s1 = u64 [sp + 0x78]
 18082: 95 11 90 00              sp = sp + 0x90
 18086: 32 00                    ret
      :                          @1015
 18088: 64 9a                    a3 = a2
 18090: 82 5c                    a5 = u64 [s0]
 18092: 80 c7 34                 a0 = u32 [a5 + 0x34]
 18095: 7c 58 09                 a1 = u8 [s0 + 0x9]
 18098: 84 79 04                 a2 = a0 & 0x4
 18101: 52 09 45                 jump @1021 if a2 != 0
      :                          @1016
 18104: 51 08 32                 jump @1019 if a1 == 0
      :                          @1017
 18107: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18110: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18113: 82 83 18                 t1 = u64 [a1 + 0x18]
 18116: 33 08 40 10 01           a1 = 0x11040
 18121: 33 09 02                 a2 = 0x2
 18124: 64 a6                    s1 = a3
 18126: 7b 1b 10                 u64 [sp + 0x10] = a4
 18129: 7b 1c 08                 u64 [sp + 0x8] = a5
 18132: b4 30 02 d2 01           ra = 466, jump [t1]
      :                          @1018 [@dyn 233]
 18137: 82 1c 08                 a5 = u64 [sp + 0x8]
 18140: 82 1b 10                 a4 = u64 [sp + 0x10]
 18143: 64 6a                    a3 = s1
 18145: 33 08 01                 a1 = 0x1
 18148: 33 06 01                 s1 = 0x1
 18151: 52 07 a7                 jump @1014 if a0 != 0
      :                          @1019
 18154: 64 b7                    a0 = a4
 18156: 64 c8                    a1 = a5
 18158: b4 a0 02 d4 01           ra = 468, jump [a3]
      :                          @1020 [@dyn 234]
 18163: 33 08 01                 a1 = 0x1
 18166: 64 76                    s1 = a0
 18168: 28 96                    jump @1014
      :                          @1021
 18170: 52 08 37                 jump @1025 if a1 != 0
      :                          @1022
 18173: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18176: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18179: 82 83 18                 t1 = u64 [a1 + 0x18]
 18182: 33 08 44 10 01           a1 = 0x11044
 18187: 33 09 01                 a2 = 0x1
 18190: 33 06 01                 s1 = 0x1
 18193: 7b 1a                    u64 [sp] = a3
 18195: 7b 1b 10                 u64 [sp + 0x10] = a4
 18198: 7b 1c 08                 u64 [sp + 0x8] = a5
 18201: b4 30 02 d6 01           ra = 470, jump [t1]
      :                          @1023 [@dyn 235]
 18206: 82 1c 08                 a5 = u64 [sp + 0x8]
 18209: 82 1b 10                 a4 = u64 [sp + 0x10]
 18212: 82 1a                    a3 = u64 [sp]
 18214: 33 08 01                 a1 = 0x1
 18217: 52 07 65 ff              jump @1014 if a0 != 0
      :                          @1024
 18221: 81 c7 34                 a0 = i32 [a5 + 0x34]
 18224: 01                       fallthrough
      :                          @1025
 18225: 33 06 01                 s1 = 0x1
 18228: 78 16 37                 u8 [sp + 0x37] = s1
 18231: 82 c8 20                 a1 = u64 [a5 + 0x20]
 18234: 82 c9 28                 a2 = u64 [a5 + 0x28]
 18237: 7b 18 18                 u64 [sp + 0x18] = a1
 18240: 7b 19 20                 u64 [sp + 0x20] = a2
 18243: 95 18 37                 a1 = sp + 0x37
 18246: 7b 18 28                 u64 [sp + 0x28] = a1
 18249: 81 c8 30                 a1 = i32 [a5 + 0x30]
 18252: 7c c9 38                 a2 = u8 [a5 + 0x38]
 18255: 82 c3                    t1 = u64 [a5]
 18257: 82 c4 08                 t2 = u64 [a5 + 0x8]
 18260: 82 c0 10                 ra = u64 [a5 + 0x10]
 18263: 82 c2 18                 t0 = u64 [a5 + 0x18]
 18266: 7a 17 6c                 u32 [sp + 0x6c] = a0
 18269: 7a 18 68                 u32 [sp + 0x68] = a1
 18272: 78 19 70                 u8 [sp + 0x70] = a2
 18275: 7b 13 38                 u64 [sp + 0x38] = t1
 18278: 7b 14 40                 u64 [sp + 0x40] = t2
 18281: 7b 10 48                 u64 [sp + 0x48] = ra
 18284: 7b 12 50                 u64 [sp + 0x50] = t0
 18287: 95 17 18                 a0 = sp + 0x18
 18290: 7b 17 58                 u64 [sp + 0x58] = a0
 18293: 33 07 f8 0f 01           a0 = 0x10ff8
 18298: 7b 17 60                 u64 [sp + 0x60] = a0
 18301: 95 18 38                 a1 = sp + 0x38
 18304: 64 b7                    a0 = a4
 18306: b4 a0 02 d8 01           ra = 472, jump [a3]
      :                          @1026 [@dyn 236]
 18311: 52 07 21                 jump @1029 if a0 != 0
      :                          @1027
 18314: 82 18 60                 a1 = u64 [sp + 0x60]
 18317: 82 17 58                 a0 = u64 [sp + 0x58]
 18320: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18323: 33 08 42 10 01           a1 = 0x11042
 18328: 33 09 02                 a2 = 0x2
 18331: b4 a0 02 da 01           ra = 474, jump [a3]
      :                          @1028 [@dyn 237]
 18336: 64 76                    s1 = a0
 18338: 33 08 01                 a1 = 0x1
 18341: 28 e9 fe                 jump @1014
      :                          @1029
 18344: 33 08 01                 a1 = 0x1
 18347: 28 e3 fe                 jump @1014
      :                          @1030
 18350: 51 08 9b 00              jump @1051 if a1 == 0
      :                          @1031
 18354: 64 79                    a2 = a0
 18356: 7c 77                    a0 = u8 [a0]
 18358: 51 07 91 00              jump @1050 if a0 == 0
      :                          @1032
 18362: 51 27 ff 00 90 00        jump @1052 if a0 == 255
      :                          @1033
 18368: 6c 7a                    a3 = sext.b a0
 18370: 57 0a 09                 jump @1035 if a3 <s 0
      :                          @1034
 18373: 33 0a                    a3 = 0
 18375: 33 08                    a1 = 0
 18377: 28 73                    jump @1049
      :                          @1035
 18379: 55 27 c0 00 0d           jump @1037 if a0 >=u 192
      :                          @1036
 18384: 33 0a 01                 a3 = 0x1
 18387: 33 0b 80                 a4 = 0xffffffffffffff80
 18390: 28 4a                    jump @1046
      :                          @1037
 18392: 55 27 e0 00 0e           jump @1039 if a0 >=u 224
      :                          @1038
 18397: 33 0a 02                 a3 = 0x2
 18400: 33 0b 40 ff              a4 = 0xffffffffffffff40
 18404: 28 3c                    jump @1046
      :                          @1039
 18406: 55 27 f0 00 0e           jump @1041 if a0 >=u 240
      :                          @1040
 18411: 33 0a 03                 a3 = 0x3
 18414: 33 0b 20 ff              a4 = 0xffffffffffffff20
 18418: 28 2e                    jump @1046
      :                          @1041
 18420: 55 27 f8 00 0e           jump @1043 if a0 >=u 248
      :                          @1042
 18425: 33 0a 04                 a3 = 0x4
 18428: 33 0b 10 ff              a4 = 0xffffffffffffff10
 18432: 28 20                    jump @1046
      :                          @1043
 18434: 55 27 fc 00 0e           jump @1045 if a0 >=u 252
      :                          @1044
 18439: 33 0a 05                 a3 = 0x5
 18442: 33 0b 08 ff              a4 = 0xffffffffffffff08
 18446: 28 12                    jump @1046
      :                          @1045
 18448: 88 7a fe 00              a3 = a0 <u 0xfe
 18452: 33 0b 04 ff              a4 = 0xffffffffffffff04
 18456: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 18460: 85 aa 07                 a3 = a3 ^ 0x7
 18463: 01                       fallthrough
      :                          @1046
 18464: ae 8a 2b                 jump @1053 if a3 >=u a1
      :                          @1047
 18467: 33 08                    a1 = 0
 18469: c8 b7 07                 a0 = a0 + a4
 18472: 64 ab                    a4 = a3
 18474: 01                       fallthrough
      :                          @1048
 18475: c8 b9 0c                 a5 = a2 + a4
 18478: 7c cc                    a5 = u8 [a5]
 18480: 97 88 08                 a1 = a1 << 0x8
 18483: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 18486: d4 c8 08                 a1 = a1 | a5
 18489: 52 0b f2                 jump @1048 if a4 != 0
      :                          @1049
 18492: 8a a9 03                 i32 a2 = a3 << 0x3
 18495: cf 97 07                 a0 = a0 << a2
 18498: c8 87 07                 a0 = a0 + a1
 18501: 32 00                    ret
      :                          @1050
 18503: 32 00                    ret
      :                          @1051
 18505: 00                       trap
      :                          @1052
 18506: 00                       trap
      :                          @1053
 18507: 00                       trap
      :                          @1054
 18508: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 18512: 7b 10 00 01              u64 [sp + 0x100] = ra
 18516: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 18520: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 18524: 7b 17                    u64 [sp] = a0
 18526: 78 18 0f                 u8 [sp + 0xf] = a1
 18529: 7b 17 10                 u64 [sp + 0x10] = a0
 18532: 95 16 0f                 s1 = sp + 0xf
 18535: 33 05 01                 s0 = 0x1
 18538: 95 17 0f                 a0 = sp + 0xf
 18541: 33 08 01                 a1 = 0x1
 18544: 95 19 10                 a2 = sp + 0x10
 18547: 33 0a 08                 a3 = 0x8
 18550: 0a 03                    ecalli 3 // 'write'
 18552: 7b 16 60                 u64 [sp + 0x60] = s1
 18555: 33 07 e0 01              a0 = 0x1e0
 18559: 7b 17 68                 u64 [sp + 0x68] = a0
 18562: 64 17                    a0 = sp
 18564: 7b 17 70                 u64 [sp + 0x70] = a0
 18567: 33 07 16                 a0 = 0x16
 18570: 7b 17 78                 u64 [sp + 0x78] = a0
 18573: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18578: 49 21 90 00 02           u64 [sp + 144] = 0x2
 18583: 49 21 a0 00              u64 [sp + 160] = 0
 18587: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 18597: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 18601: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 18606: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 18611: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 18616: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 18620: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 18624: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 18629: 33 08 90 12 01           a1 = 0x11290
 18634: 7b 18 30                 u64 [sp + 0x30] = a1
 18637: 49 11 38 02              u64 [sp + 56] = 0x2
 18641: 95 18 80 00              a1 = sp + 0x80
 18645: 7b 18 50                 u64 [sp + 0x50] = a1
 18648: 49 11 58 02              u64 [sp + 88] = 0x2
 18652: 95 18 60                 a1 = sp + 0x60
 18655: 7b 18 40                 u64 [sp + 0x40] = a1
 18658: 49 11 48 02              u64 [sp + 72] = 0x2
 18662: 95 17 18                 a0 = sp + 0x18
 18665: 95 18 30                 a1 = sp + 0x30
 18668: 50 20 dc 01 ec f1        ra = 476, jump @777
      :                          @1055 [@dyn 238]
 18674: 82 15 20                 s0 = u64 [sp + 0x20]
 18677: 82 1b 28                 a4 = u64 [sp + 0x28]
 18680: 82 16 18                 s1 = u64 [sp + 0x18]
 18683: 33 07 02                 a0 = 0x2
 18686: 33 08                    a1 = 0
 18688: 33 09                    a2 = 0
 18690: 64 5a                    a3 = s0
 18692: 33 00 de 01              ra = 0x1de
 18696: 0a 64                    ecalli 100 // 'log'
 18698: 01                       fallthrough
      :                          @1056 [@dyn 239]
 18699: 33 07 00 00 f0           a0 = 0xfffffffffff00000
 18704: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 18709: ac 78 24                 jump @1062 if a1 <u a0
      :                          @1057
 18712: 33 07 40 00 03           a0 = 0x30040
 18717: 95 77 00 00 10           a0 = a0 + 0x100000
 18722: 01                       fallthrough
      :                          @1058
 18723: 82 78                    a1 = u64 [a0]
 18725: c9 87 09                 a2 = a0 - a1
 18728: ab 59 11                 jump @1062 if a2 != s0
      :                          @1059
 18731: c9 68 09                 a2 = a1 - s1
 18734: 01                       fallthrough
      :                          @1060
 18735: 82 7a                    a3 = u64 [a0]
 18737: ab 8a f2                 jump @1058 if a3 != a1
      :                          @1061
 18740: 7b 79                    u64 [a0] = a2
 18742: 33 0b                    a4 = 0
 18744: 01                       fallthrough
      :                          @1062
 18745: 82 10 00 01              ra = u64 [sp + 0x100]
 18749: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 18753: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 18757: 95 11 08 01              sp = sp + 0x108
 18761: 32 00                    ret
      :                          @1063 [@dyn 240]
 18763: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 18766: 7b 10 28                 u64 [sp + 0x28] = ra
 18769: 7b 15 20                 u64 [sp + 0x20] = s0
 18772: 7b 16 18                 u64 [sp + 0x18] = s1
 18775: 64 86                    s1 = a1
 18777: 82 88 28                 a1 = u64 [a1 + 0x28]
 18780: 82 6a 20                 a3 = u64 [s1 + 0x20]
 18783: 82 8b 18                 a4 = u64 [a1 + 0x18]
 18786: 64 75                    s0 = a0
 18788: 33 08 f0 0f 01           a1 = 0x10ff0
 18793: 33 09 01                 a2 = 0x1
 18796: 64 a7                    a0 = a3
 18798: b4 b0 02 e2 01           ra = 482, jump [a4]
      :                          @1064 [@dyn 241]
 18803: 7b 16                    u64 [sp] = s1
 18805: 78 17 08                 u8 [sp + 0x8] = a0
 18808: 46 11 09                 u8 [sp + 9] = 0
 18811: 7b 15 10                 u64 [sp + 0x10] = s0
 18814: 33 09 e8 01              a2 = 0x1e8
 18818: 64 17                    a0 = sp
 18820: 95 18 10                 a1 = sp + 0x10
 18823: 50 20 e4 01 e8 fc        ra = 484, jump @1013
      :                          @1065 [@dyn 242]
 18829: 33 07 01                 a0 = 0x1
 18832: 7c 18 08                 a1 = u8 [sp + 0x8]
 18835: 52 08 1b                 jump @1067 if a1 != 0
      :                          @1066
 18838: 82 17                    a0 = u64 [sp]
 18840: 82 78 28                 a1 = u64 [a0 + 0x28]
 18843: 82 77 20                 a0 = u64 [a0 + 0x20]
 18846: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18849: 33 08 45 10 01           a1 = 0x11045
 18854: 33 09 01                 a2 = 0x1
 18857: b4 a0 02 e6 01           ra = 486, jump [a3]
      :                          @1067 [@dyn 243]
 18862: 82 10 28                 ra = u64 [sp + 0x28]
 18865: 82 15 20                 s0 = u64 [sp + 0x20]
 18868: 82 16 18                 s1 = u64 [sp + 0x18]
 18871: 95 11 30                 sp = sp + 0x30
 18874: 32 00                    ret
      :                          @1068 [@dyn 244]
 18876: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 18880: 7b 10 80 00              u64 [sp + 0x80] = ra
 18884: 80 89 34                 a2 = u32 [a1 + 0x34]
 18887: 82 77                    a0 = u64 [a0]
 18889: 84 9a 10                 a3 = a2 & 0x10
 18892: 52 0a 16                 jump @1071 if a3 != 0
      :                          @1069
 18895: 84 99 20                 a2 = a2 & 0x20
 18898: 52 09 41                 jump @1074 if a2 != 0
      :                          @1070
 18901: 7c 77                    a0 = u8 [a0]
 18903: 82 10 80 00              ra = u64 [sp + 0x80]
 18907: 95 11 88 00              sp = sp + 0x88
 18911: 28 85 f4                 jump @859
      :                          @1071
 18914: 7c 77                    a0 = u8 [a0]
 18916: 33 0b 81 00              a4 = 0x81
 18920: 95 19 7f                 a2 = sp + 0x7f
 18923: 33 02 57                 t0 = 0x57
 18926: 01                       fallthrough
      :                          @1072
 18927: 64 bc                    a5 = a4
 18929: 84 7b 0f                 a4 = a0 & 0xf
 18932: 97 77 38                 a0 = a0 << 0x38
 18935: 98 77 3c                 a0 = a0 >> 0x3c
 18938: 88 b3 0a                 t1 = a4 <u 0xa
 18941: 33 0a 30                 a3 = 0x30
 18944: da 32 0a                 a3 = t0 if t1 == 0
 18947: be ba 0a                 i32 a3 = a3 + a4
 18950: 78 9a                    u8 [a2] = a3
 18952: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18955: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 18958: 52 07 e1                 jump @1072 if a0 != 0
      :                          @1073
 18961: 28 31                    jump @1076
      :                          @1074
 18963: 7c 77                    a0 = u8 [a0]
 18965: 33 0b 81 00              a4 = 0x81
 18969: 95 19 7f                 a2 = sp + 0x7f
 18972: 33 02 37                 t0 = 0x37
 18975: 01                       fallthrough
      :                          @1075
 18976: 64 bc                    a5 = a4
 18978: 84 7b 0f                 a4 = a0 & 0xf
 18981: 97 77 38                 a0 = a0 << 0x38
 18984: 98 77 3c                 a0 = a0 >> 0x3c
 18987: 88 b3 0a                 t1 = a4 <u 0xa
 18990: 33 0a 30                 a3 = 0x30
 18993: da 32 0a                 a3 = t0 if t1 == 0
 18996: be ba 0a                 i32 a3 = a3 + a4
 18999: 78 9a                    u8 [a2] = a3
 19001: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19004: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19007: 52 07 e1                 jump @1075 if a0 != 0
      :                          @1076
 19010: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 19013: 56 27 80 00 28           jump @1079 if a0 >u 128
      :                          @1077
 19018: 9a bb 81 00              a4 = 0x81 - a4
 19022: 64 1a                    a3 = sp
 19024: c8 7a 0a                 a3 = a3 + a0
 19027: 33 09 02                 a2 = 0x2
 19030: 64 87                    a0 = a1
 19032: 33 08 46 10 01           a1 = 0x11046
 19037: 50 20 ea 01 2f f5        ra = 490, jump @869
      :                          @1078 [@dyn 245]
 19043: 82 10 80 00              ra = u64 [sp + 0x80]
 19047: 95 11 88 00              sp = sp + 0x88
 19051: 32 00                    ret
      :                          @1079
 19053: 00                       trap
