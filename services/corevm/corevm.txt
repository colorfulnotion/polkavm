// RO data = 103/104 bytes
// RW data = 0/0 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [34, 0, 255, 255, 48, 0, 255, 255, 42, 0, 255, 255, 44, 0, 255, 255, 36, 0, 255, 255, 50, 0, 255, 255, 52, 0, 255, 255, 46, 0, 255, 255, 54, 0, 255, 255, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 115, 101, 116, 117, 112, 95, 112, 97, 103, 101, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 103, 101, 116, 95, 112, 97, 103, 101, 58, 32, 112, 101, 101, 107, 32, 102, 97, 105, 108, 101, 100]
// RW data = []
// Instructions = 1903
// Code size = 6043 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 fa 0b 00 00           jump @178
      :                          @2
    10: 28 c0 15                 jump @269
      :                          @3 [export #0: 'refine']
    13: 95 11 10 fe              sp = sp + 0xfffffffffffffe10
    17: 7b 10 e8 01              u64 [sp + 0x1e8] = ra
    21: 7b 15 e0 01              u64 [sp + 0x1e0] = s0
    25: 7b 16 d8 01              u64 [sp + 0x1d8] = s1
    29: 95 11 e0 ad              sp = sp + 0xffffffffffffade0
    33: 33 0a 04                 a3 = 0x4
    36: 33 09 00 00 01           a2 = 0x10000
    41: ac a8 16                 jump @7 if a1 <u a3
      :                          @4
    44: 95 86 fc                 s1 = a1 + 0xfffffffffffffffc
    47: 51 06 10                 jump @7 if s1 == 0
      :                          @5
    50: 95 7a 04                 a3 = a0 + 0x4
    53: 7d a8                    a1 = i8 [a3]
    55: 57 08 26                 jump @9 if a1 <s 0
      :                          @6
    58: 33 05 01                 s0 = 0x1
    61: 28 5e                    jump @20
      :                          @7
    63: 33 08                    a1 = 0
    65: 01                       fallthrough
      :                          @8
    66: 64 97                    a0 = a2
    68: 33 09 20 52              a2 = 0x5220
    72: c8 91 01                 sp = sp + a2
    75: 82 10 e8 01              ra = u64 [sp + 0x1e8]
    79: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
    83: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
    87: 95 11 f0 01              sp = sp + 0x1f0
    91: 32 00                    ret
      :                          @9
    93: 84 88 ff 00              a1 = a1 & 0xff
    97: 55 28 c0 00 0a           jump @11 if a1 >=u 192
      :                          @10
   102: 33 05 02                 s0 = 0x2
   105: 28 32                    jump @20
      :                          @11
   107: 55 28 e0 00 0a           jump @13 if a1 >=u 224
      :                          @12
   112: 33 05 03                 s0 = 0x3
   115: 28 28                    jump @20
      :                          @13
   117: 55 28 f0 00 0a           jump @15 if a1 >=u 240
      :                          @14
   122: 33 05 04                 s0 = 0x4
   125: 28 1e                    jump @20
      :                          @15
   127: 55 28 f8 00 0a           jump @17 if a1 >=u 248
      :                          @16
   132: 33 05 05                 s0 = 0x5
   135: 28 14                    jump @20
      :                          @17
   137: 55 28 fc 00 0a           jump @19 if a1 >=u 252
      :                          @18
   142: 33 05 06                 s0 = 0x6
   145: 28 0a                    jump @20
      :                          @19
   147: 88 88 fe 00              a1 = a1 <u 0xfe
   151: 9a 85 08                 s0 = 0x8 - a1
   154: 01                       fallthrough
      :                          @20
   155: ac 56 68 03              jump @56 if s1 <u s0
      :                          @21
   159: 80 77                    a0 = u32 [a0]
   161: 7b 17 e0 00              u64 [sp + 0xe0] = a0
   165: 7b 1a c8 00              u64 [sp + 0xc8] = a3
   169: 64 a7                    a0 = a3
   171: 64 58                    a1 = s0
   173: 50 10 02 26 15           ra = 2, jump @270
      :                          @22 [@dyn 1]
   178: 7b 15 c0 00              u64 [sp + 0xc0] = s0
   182: c9 56 09                 a2 = s1 - s0
   185: 33 08                    a1 = 0
   187: ac 79 18 01              jump @33 if a2 <u a0
      :                          @23
   191: 64 76                    s1 = a0
   193: c9 79 07                 a0 = a2 - a0
   196: 33 0a 20                 a3 = 0x20
   199: 33 09 00 00 01           a2 = 0x10000
   204: ac a7 76 ff              jump @8 if a0 <u a3
      :                          @24
   208: 33 08                    a1 = 0
   210: 33 0b                    a4 = 0
   212: 33 0c                    a5 = 0
   214: 48 21 08 01              u32 [sp + 264] = 0
   218: 49 21 e8 00              u64 [sp + 232] = 0
   222: 49 21 f0 00              u64 [sp + 240] = 0
   226: 49 21 f8 00              u64 [sp + 248] = 0
   230: 49 21 00 01              u64 [sp + 256] = 0
   234: 95 17 e8 00              a0 = sp + 0xe8
   238: 33 09 24                 a2 = 0x24
   241: 33 0a 03                 a3 = 0x3
   244: 0a 12                    ecalli 18 // 'fetch'
   246: 01                       fallthrough
      :                          @25
   247: 95 19 e8 00              a2 = sp + 0xe8
   251: 33 08 24                 a1 = 0x24
   254: 53 16 08 44 ff           jump @8 if s1 <u 8
      :                          @26
   259: 7b 16 b8 00              u64 [sp + 0xb8] = s1
   263: 95 17 10 01              a0 = sp + 0x110
   267: 33 09 00 02              a2 = 0x200
   271: 33 08                    a1 = 0
   273: 50 10 04 20 16           ra = 4, jump @311
      :                          @27 [@dyn 2]
   278: 95 18 e8 00              a1 = sp + 0xe8
   282: 95 19 10 01              a2 = sp + 0x110
   286: 33 0b 00 02              a4 = 0x200
   290: 82 17 e0 00              a0 = u64 [sp + 0xe0]
   294: 33 0a                    a3 = 0
   296: 0a 11                    ecalli 17 // 'historical_lookup'
   298: 01                       fallthrough
      :                          @28
   299: 51 17 ff b0 00           jump @34 if a0 == 4294967295
      :                          @29
   304: 7b 17 e0 00              u64 [sp + 0xe0] = a0
   308: 33 09                    a2 = 0
   310: 33 0a                    a3 = 0
   312: 33 0b                    a4 = 0
   314: 33 0c                    a5 = 0
   316: 33 06                    s1 = 0
   318: 33 05                    s0 = 0
   320: 33 02                    t0 = 0
   322: 33 03                    t1 = 0
   324: 33 04                    t2 = 0
   326: 33 00                    ra = 0
   328: 49 11 58                 u64 [sp + 88] = 0
   331: 49 11 60                 u64 [sp + 96] = 0
   334: 49 11 68                 u64 [sp + 104] = 0
   337: 49 11 70                 u64 [sp + 112] = 0
   340: 49 11 78                 u64 [sp + 120] = 0
   343: 49 21 80 00              u64 [sp + 128] = 0
   347: 49 21 30 03              u64 [sp + 816] = 0
   351: 49 21 38 03              u64 [sp + 824] = 0
   355: 49 21 40 03              u64 [sp + 832] = 0
   359: 49 21 48 03              u64 [sp + 840] = 0
   363: 49 21 10 03              u64 [sp + 784] = 0
   367: 49 21 18 03              u64 [sp + 792] = 0
   371: 49 21 20 03              u64 [sp + 800] = 0
   375: 82 17 b8 00              a0 = u64 [sp + 0xb8]
   379: 98 78 03                 a1 = a0 >> 0x3
   382: 49 21 28 03              u64 [sp + 808] = 0
   386: 7b 18 88 00              u64 [sp + 0x88] = a1
   390: 51 18 01 b5 04           jump @80 if a1 == 1
      :                          @30
   395: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   399: 33 09                    a2 = 0
   401: 95 17 10 01              a0 = sp + 0x110
   405: 0a 14                    ecalli 20 // 'machine'
   407: 01                       fallthrough
      :                          @31
   408: 64 75                    s0 = a0
   410: 7a 17 10 03              u32 [sp + 0x310] = a0
   414: 82 17 88 00              a0 = u64 [sp + 0x88]
   418: 52 17 02 43              jump @35 if a0 != 2
      :                          @32
   422: 49 21 a8 00              u64 [sp + 168] = 0
   426: 49 21 b0 00              u64 [sp + 176] = 0
   430: 49 21 d0 00              u64 [sp + 208] = 0
   434: 49 21 98 00              u64 [sp + 152] = 0
   438: 49 21 a0 00              u64 [sp + 160] = 0
   442: 49 21 d8 00              u64 [sp + 216] = 0
   446: 33 02                    t0 = 0
   448: 33 03                    t1 = 0
   450: 33 04                    t2 = 0
   452: 33 0c                    a5 = 0
   454: 33 00                    ra = 0
   456: 33 0b                    a4 = 0
   458: 33 0a                    a3 = 0
   460: 33 09                    a2 = 0
   462: 33 08                    a1 = 0
   464: 28 bd 03                 jump @79
      :                          @33
   467: 33 09 00 00 01           a2 = 0x10000
   472: 28 6a fe                 jump @8
      :                          @34
   475: 33 08                    a1 = 0
   477: 33 09 00 00 01           a2 = 0x10000
   482: 28 60 fe                 jump @8
      :                          @35
   485: 7b 15 90 00              u64 [sp + 0x90] = s0
   489: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   493: 33 09                    a2 = 0
   495: 64 75                    s0 = a0
   497: 95 17 10 01              a0 = sp + 0x110
   501: 0a 14                    ecalli 20 // 'machine'
   503: 01                       fallthrough
      :                          @36
   504: 64 78                    a1 = a0
   506: 7a 17 14 03              u32 [sp + 0x314] = a0
   510: 52 15 03 33              jump @38 if s0 != 3
      :                          @37
   514: 49 21 a8 00              u64 [sp + 168] = 0
   518: 49 21 b0 00              u64 [sp + 176] = 0
   522: 49 21 d0 00              u64 [sp + 208] = 0
   526: 49 21 98 00              u64 [sp + 152] = 0
   530: 49 21 a0 00              u64 [sp + 160] = 0
   534: 49 21 d8 00              u64 [sp + 216] = 0
   538: 33 02                    t0 = 0
   540: 33 03                    t1 = 0
   542: 33 04                    t2 = 0
   544: 33 0c                    a5 = 0
   546: 33 00                    ra = 0
   548: 33 0b                    a4 = 0
   550: 33 0a                    a3 = 0
   552: 33 09                    a2 = 0
   554: 82 15 90 00              s0 = u64 [sp + 0x90]
   558: 28 5f 03                 jump @79
      :                          @38
   561: 7b 18 80 00              u64 [sp + 0x80] = a1
   565: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   569: 33 09                    a2 = 0
   571: 95 17 10 01              a0 = sp + 0x110
   575: 0a 14                    ecalli 20 // 'machine'
   577: 01                       fallthrough
      :                          @39
   578: 64 79                    a2 = a0
   580: 7a 17 18 03              u32 [sp + 0x318] = a0
   584: 52 15 04 35              jump @41 if s0 != 4
      :                          @40
   588: 49 21 a8 00              u64 [sp + 168] = 0
   592: 49 21 b0 00              u64 [sp + 176] = 0
   596: 49 21 d0 00              u64 [sp + 208] = 0
   600: 49 21 98 00              u64 [sp + 152] = 0
   604: 49 21 a0 00              u64 [sp + 160] = 0
   608: 49 21 d8 00              u64 [sp + 216] = 0
   612: 33 02                    t0 = 0
   614: 33 03                    t1 = 0
   616: 33 04                    t2 = 0
   618: 33 0c                    a5 = 0
   620: 33 00                    ra = 0
   622: 33 0b                    a4 = 0
   624: 33 0a                    a3 = 0
   626: 82 18 80 00              a1 = u64 [sp + 0x80]
   630: 82 15 90 00              s0 = u64 [sp + 0x90]
   634: 28 13 03                 jump @79
      :                          @41
   637: 7b 19 78                 u64 [sp + 0x78] = a2
   640: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   644: 33 09                    a2 = 0
   646: 95 17 10 01              a0 = sp + 0x110
   650: 0a 14                    ecalli 20 // 'machine'
   652: 01                       fallthrough
      :                          @42
   653: 64 7a                    a3 = a0
   655: 7a 17 1c 03              u32 [sp + 0x31c] = a0
   659: 52 15 05 36              jump @44 if s0 != 5
      :                          @43
   663: 49 21 a8 00              u64 [sp + 168] = 0
   667: 49 21 b0 00              u64 [sp + 176] = 0
   671: 49 21 d0 00              u64 [sp + 208] = 0
   675: 49 21 98 00              u64 [sp + 152] = 0
   679: 49 21 a0 00              u64 [sp + 160] = 0
   683: 49 21 d8 00              u64 [sp + 216] = 0
   687: 33 02                    t0 = 0
   689: 33 03                    t1 = 0
   691: 33 04                    t2 = 0
   693: 33 0c                    a5 = 0
   695: 33 00                    ra = 0
   697: 33 0b                    a4 = 0
   699: 82 18 80 00              a1 = u64 [sp + 0x80]
   703: 82 19 78                 a2 = u64 [sp + 0x78]
   706: 82 15 90 00              s0 = u64 [sp + 0x90]
   710: 28 c7 02                 jump @79
      :                          @44
   713: 7b 1a 70                 u64 [sp + 0x70] = a3
   716: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   720: 33 09                    a2 = 0
   722: 95 17 10 01              a0 = sp + 0x110
   726: 0a 14                    ecalli 20 // 'machine'
   728: 01                       fallthrough
      :                          @45
   729: 64 7b                    a4 = a0
   731: 7a 17 20 03              u32 [sp + 0x320] = a0
   735: 52 15 06 37              jump @47 if s0 != 6
      :                          @46
   739: 49 21 a8 00              u64 [sp + 168] = 0
   743: 49 21 b0 00              u64 [sp + 176] = 0
   747: 49 21 d0 00              u64 [sp + 208] = 0
   751: 49 21 98 00              u64 [sp + 152] = 0
   755: 49 21 a0 00              u64 [sp + 160] = 0
   759: 49 21 d8 00              u64 [sp + 216] = 0
   763: 33 02                    t0 = 0
   765: 33 03                    t1 = 0
   767: 33 04                    t2 = 0
   769: 33 0c                    a5 = 0
   771: 33 00                    ra = 0
   773: 82 18 80 00              a1 = u64 [sp + 0x80]
   777: 82 19 78                 a2 = u64 [sp + 0x78]
   780: 82 1a 70                 a3 = u64 [sp + 0x70]
   783: 82 15 90 00              s0 = u64 [sp + 0x90]
   787: 28 7a 02                 jump @79
      :                          @47
   790: 7b 1b 68                 u64 [sp + 0x68] = a4
   793: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   797: 33 09                    a2 = 0
   799: 95 17 10 01              a0 = sp + 0x110
   803: 0a 14                    ecalli 20 // 'machine'
   805: 01                       fallthrough
      :                          @48
   806: 64 70                    ra = a0
   808: 7a 17 24 03              u32 [sp + 0x324] = a0
   812: 52 15 07 38              jump @50 if s0 != 7
      :                          @49
   816: 49 21 a8 00              u64 [sp + 168] = 0
   820: 49 21 b0 00              u64 [sp + 176] = 0
   824: 49 21 d0 00              u64 [sp + 208] = 0
   828: 49 21 98 00              u64 [sp + 152] = 0
   832: 49 21 a0 00              u64 [sp + 160] = 0
   836: 49 21 d8 00              u64 [sp + 216] = 0
   840: 33 02                    t0 = 0
   842: 33 03                    t1 = 0
   844: 33 04                    t2 = 0
   846: 33 0c                    a5 = 0
   848: 82 18 80 00              a1 = u64 [sp + 0x80]
   852: 82 19 78                 a2 = u64 [sp + 0x78]
   855: 82 1a 70                 a3 = u64 [sp + 0x70]
   858: 82 1b 68                 a4 = u64 [sp + 0x68]
   861: 82 15 90 00              s0 = u64 [sp + 0x90]
   865: 28 2c 02                 jump @79
      :                          @50
   868: 7b 10 60                 u64 [sp + 0x60] = ra
   871: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   875: 33 09                    a2 = 0
   877: 95 17 10 01              a0 = sp + 0x110
   881: 0a 14                    ecalli 20 // 'machine'
   883: 01                       fallthrough
      :                          @51
   884: 64 7c                    a5 = a0
   886: 7a 17 28 03              u32 [sp + 0x328] = a0
   890: 52 15 08 39              jump @53 if s0 != 8
      :                          @52
   894: 49 21 a8 00              u64 [sp + 168] = 0
   898: 49 21 b0 00              u64 [sp + 176] = 0
   902: 49 21 d0 00              u64 [sp + 208] = 0
   906: 49 21 98 00              u64 [sp + 152] = 0
   910: 49 21 a0 00              u64 [sp + 160] = 0
   914: 49 21 d8 00              u64 [sp + 216] = 0
   918: 33 02                    t0 = 0
   920: 33 03                    t1 = 0
   922: 33 04                    t2 = 0
   924: 82 18 80 00              a1 = u64 [sp + 0x80]
   928: 82 19 78                 a2 = u64 [sp + 0x78]
   931: 82 1a 70                 a3 = u64 [sp + 0x70]
   934: 82 1b 68                 a4 = u64 [sp + 0x68]
   937: 82 10 60                 ra = u64 [sp + 0x60]
   940: 82 15 90 00              s0 = u64 [sp + 0x90]
   944: 28 dd 01                 jump @79
      :                          @53
   947: 7b 1c 58                 u64 [sp + 0x58] = a5
   950: 82 18 e0 00              a1 = u64 [sp + 0xe0]
   954: 33 09                    a2 = 0
   956: 95 17 10 01              a0 = sp + 0x110
   960: 0a 14                    ecalli 20 // 'machine'
   962: 01                       fallthrough
      :                          @54
   963: 64 74                    t2 = a0
   965: 7a 17 2c 03              u32 [sp + 0x32c] = a0
   969: 52 15 09 3b              jump @57 if s0 != 9
      :                          @55
   973: 49 21 a8 00              u64 [sp + 168] = 0
   977: 49 21 b0 00              u64 [sp + 176] = 0
   981: 49 21 d0 00              u64 [sp + 208] = 0
   985: 49 21 98 00              u64 [sp + 152] = 0
   989: 49 21 a0 00              u64 [sp + 160] = 0
   993: 49 21 d8 00              u64 [sp + 216] = 0
   997: 33 02                    t0 = 0
   999: 33 03                    t1 = 0
  1001: 82 18 80 00              a1 = u64 [sp + 0x80]
  1005: 82 19 78                 a2 = u64 [sp + 0x78]
  1008: 82 1a 70                 a3 = u64 [sp + 0x70]
  1011: 82 1b 68                 a4 = u64 [sp + 0x68]
  1014: 82 10 60                 ra = u64 [sp + 0x60]
  1017: 82 1c 58                 a5 = u64 [sp + 0x58]
  1020: 82 15 90 00              s0 = u64 [sp + 0x90]
  1024: 28 8d 01                 jump @79
      :                          @56
  1027: 00                       trap
      :                          @57
  1028: 7b 14 50                 u64 [sp + 0x50] = t2
  1031: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1035: 33 09                    a2 = 0
  1037: 95 17 10 01              a0 = sp + 0x110
  1041: 0a 14                    ecalli 20 // 'machine'
  1043: 01                       fallthrough
      :                          @58
  1044: 7b 17 48                 u64 [sp + 0x48] = a0
  1047: 7a 17 30 03              u32 [sp + 0x330] = a0
  1051: 82 17 88 00              a0 = u64 [sp + 0x88]
  1055: 52 17 0a 3e              jump @60 if a0 != 10
      :                          @59
  1059: 49 21 a8 00              u64 [sp + 168] = 0
  1063: 49 21 b0 00              u64 [sp + 176] = 0
  1067: 49 21 d0 00              u64 [sp + 208] = 0
  1071: 49 21 98 00              u64 [sp + 152] = 0
  1075: 49 21 a0 00              u64 [sp + 160] = 0
  1079: 49 21 d8 00              u64 [sp + 216] = 0
  1083: 33 02                    t0 = 0
  1085: 82 18 80 00              a1 = u64 [sp + 0x80]
  1089: 82 19 78                 a2 = u64 [sp + 0x78]
  1092: 82 1a 70                 a3 = u64 [sp + 0x70]
  1095: 82 1b 68                 a4 = u64 [sp + 0x68]
  1098: 82 10 60                 ra = u64 [sp + 0x60]
  1101: 82 1c 58                 a5 = u64 [sp + 0x58]
  1104: 82 14 50                 t2 = u64 [sp + 0x50]
  1107: 82 13 48                 t1 = u64 [sp + 0x48]
  1110: 82 15 90 00              s0 = u64 [sp + 0x90]
  1114: 28 33 01                 jump @79
      :                          @60
  1117: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1121: 33 09                    a2 = 0
  1123: 95 17 10 01              a0 = sp + 0x110
  1127: 0a 14                    ecalli 20 // 'machine'
  1129: 01                       fallthrough
      :                          @61
  1130: 7b 17 40                 u64 [sp + 0x40] = a0
  1133: 7a 17 34 03              u32 [sp + 0x334] = a0
  1137: 82 17 88 00              a0 = u64 [sp + 0x88]
  1141: 52 17 0b 1f              jump @63 if a0 != 11
      :                          @62
  1145: 49 21 a8 00              u64 [sp + 168] = 0
  1149: 49 21 b0 00              u64 [sp + 176] = 0
  1153: 49 21 d0 00              u64 [sp + 208] = 0
  1157: 49 21 98 00              u64 [sp + 152] = 0
  1161: 49 21 a0 00              u64 [sp + 160] = 0
  1165: 49 21 d8 00              u64 [sp + 216] = 0
  1169: 28 db 00                 jump @78
      :                          @63
  1172: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1176: 33 09                    a2 = 0
  1178: 95 17 10 01              a0 = sp + 0x110
  1182: 0a 14                    ecalli 20 // 'machine'
  1184: 01                       fallthrough
      :                          @64
  1185: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1189: 7a 17 38 03              u32 [sp + 0x338] = a0
  1193: 82 17 88 00              a0 = u64 [sp + 0x88]
  1197: 52 17 0c 1b              jump @66 if a0 != 12
      :                          @65
  1201: 49 21 a8 00              u64 [sp + 168] = 0
  1205: 49 21 b0 00              u64 [sp + 176] = 0
  1209: 49 21 d0 00              u64 [sp + 208] = 0
  1213: 49 21 98 00              u64 [sp + 152] = 0
  1217: 49 21 a0 00              u64 [sp + 160] = 0
  1221: 28 a7 00                 jump @78
      :                          @66
  1224: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1228: 33 09                    a2 = 0
  1230: 95 17 10 01              a0 = sp + 0x110
  1234: 0a 14                    ecalli 20 // 'machine'
  1236: 01                       fallthrough
      :                          @67
  1237: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1241: 7a 17 3c 03              u32 [sp + 0x33c] = a0
  1245: 82 17 88 00              a0 = u64 [sp + 0x88]
  1249: 52 17 0d 16              jump @69 if a0 != 13
      :                          @68
  1253: 49 21 a8 00              u64 [sp + 168] = 0
  1257: 49 21 b0 00              u64 [sp + 176] = 0
  1261: 49 21 d0 00              u64 [sp + 208] = 0
  1265: 49 21 98 00              u64 [sp + 152] = 0
  1269: 28 77                    jump @78
      :                          @69
  1271: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1275: 33 09                    a2 = 0
  1277: 95 17 10 01              a0 = sp + 0x110
  1281: 0a 14                    ecalli 20 // 'machine'
  1283: 01                       fallthrough
      :                          @70
  1284: 7b 17 98 00              u64 [sp + 0x98] = a0
  1288: 7a 17 40 03              u32 [sp + 0x340] = a0
  1292: 82 17 88 00              a0 = u64 [sp + 0x88]
  1296: 52 17 0e 12              jump @72 if a0 != 14
      :                          @71
  1300: 49 21 a8 00              u64 [sp + 168] = 0
  1304: 49 21 b0 00              u64 [sp + 176] = 0
  1308: 49 21 d0 00              u64 [sp + 208] = 0
  1312: 28 4c                    jump @78
      :                          @72
  1314: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1318: 33 09                    a2 = 0
  1320: 95 17 10 01              a0 = sp + 0x110
  1324: 0a 14                    ecalli 20 // 'machine'
  1326: 01                       fallthrough
      :                          @73
  1327: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1331: 7a 17 44 03              u32 [sp + 0x344] = a0
  1335: 82 17 88 00              a0 = u64 [sp + 0x88]
  1339: 52 17 0f 0e              jump @75 if a0 != 15
      :                          @74
  1343: 49 21 a8 00              u64 [sp + 168] = 0
  1347: 49 21 b0 00              u64 [sp + 176] = 0
  1351: 28 25                    jump @78
      :                          @75
  1353: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  1357: 33 09                    a2 = 0
  1359: 95 17 10 01              a0 = sp + 0x110
  1363: 0a 14                    ecalli 20 // 'machine'
  1365: 01                       fallthrough
      :                          @76
  1366: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1370: 7a 17 48 03              u32 [sp + 0x348] = a0
  1374: 82 17 88 00              a0 = u64 [sp + 0x88]
  1378: 52 17 10 51 06           jump @174 if a0 != 16
      :                          @77
  1383: 49 21 a8 00              u64 [sp + 168] = 0
  1387: 01                       fallthrough
      :                          @78
  1388: 82 18 80 00              a1 = u64 [sp + 0x80]
  1392: 82 19 78                 a2 = u64 [sp + 0x78]
  1395: 82 1a 70                 a3 = u64 [sp + 0x70]
  1398: 82 1b 68                 a4 = u64 [sp + 0x68]
  1401: 82 10 60                 ra = u64 [sp + 0x60]
  1404: 82 1c 58                 a5 = u64 [sp + 0x58]
  1407: 82 14 50                 t2 = u64 [sp + 0x50]
  1410: 82 13 48                 t1 = u64 [sp + 0x48]
  1413: 82 15 90 00              s0 = u64 [sp + 0x90]
  1417: 82 12 40                 t0 = u64 [sp + 0x40]
  1420: 01                       fallthrough
      :                          @79
  1421: 97 55 20                 s0 = s0 << 0x20
  1424: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  1428: 97 88 20                 a1 = a1 << 0x20
  1431: 7b 18 90 00              u64 [sp + 0x90] = a1
  1435: 97 99 20                 a2 = a2 << 0x20
  1438: 7b 19 70                 u64 [sp + 0x70] = a2
  1441: 97 aa 20                 a3 = a3 << 0x20
  1444: 7b 1a 68                 u64 [sp + 0x68] = a3
  1447: 97 bb 20                 a4 = a4 << 0x20
  1450: 7b 1b 60                 u64 [sp + 0x60] = a4
  1453: 97 00 20                 ra = ra << 0x20
  1456: 97 c5 20                 s0 = a5 << 0x20
  1459: 97 44 20                 t2 = t2 << 0x20
  1462: 97 33 20                 t1 = t1 << 0x20
  1465: 97 22 20                 t0 = t0 << 0x20
  1468: 82 1c d8 00              a5 = u64 [sp + 0xd8]
  1472: 97 cc 20                 a5 = a5 << 0x20
  1475: 82 1b a0 00              a4 = u64 [sp + 0xa0]
  1479: 97 bb 20                 a4 = a4 << 0x20
  1482: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1486: 97 aa 20                 a3 = a3 << 0x20
  1489: 82 19 d0 00              a2 = u64 [sp + 0xd0]
  1493: 97 99 20                 a2 = a2 << 0x20
  1496: 82 18 b0 00              a1 = u64 [sp + 0xb0]
  1500: 97 88 20                 a1 = a1 << 0x20
  1503: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  1507: 97 77 20                 a0 = a0 << 0x20
  1510: 82 16 e0 00              s1 = u64 [sp + 0xe0]
  1514: 98 66 20                 s1 = s1 >> 0x20
  1517: 7b 16 80 00              u64 [sp + 0x80] = s1
  1521: 82 16 90 00              s1 = u64 [sp + 0x90]
  1525: 98 66 20                 s1 = s1 >> 0x20
  1528: 7b 16 78                 u64 [sp + 0x78] = s1
  1531: 82 16 70                 s1 = u64 [sp + 0x70]
  1534: 98 66 20                 s1 = s1 >> 0x20
  1537: 7b 16 70                 u64 [sp + 0x70] = s1
  1540: 82 16 68                 s1 = u64 [sp + 0x68]
  1543: 98 66 20                 s1 = s1 >> 0x20
  1546: 7b 16 68                 u64 [sp + 0x68] = s1
  1549: 82 16 60                 s1 = u64 [sp + 0x60]
  1552: 98 66 20                 s1 = s1 >> 0x20
  1555: 7b 16 60                 u64 [sp + 0x60] = s1
  1558: 98 06 20                 s1 = ra >> 0x20
  1561: 7b 16 58                 u64 [sp + 0x58] = s1
  1564: 98 50 20                 ra = s0 >> 0x20
  1567: 98 44 20                 t2 = t2 >> 0x20
  1570: 98 33 20                 t1 = t1 >> 0x20
  1573: 98 22 20                 t0 = t0 >> 0x20
  1576: 98 c5 20                 s0 = a5 >> 0x20
  1579: 98 b6 20                 s1 = a4 >> 0x20
  1582: 98 ac 20                 a5 = a3 >> 0x20
  1585: 98 9b 20                 a4 = a2 >> 0x20
  1588: 98 8a 20                 a3 = a1 >> 0x20
  1591: 98 79 20                 a2 = a0 >> 0x20
  1594: 01                       fallthrough
      :                          @80
  1595: 7b 10 50                 u64 [sp + 0x50] = ra
  1598: 7b 14 48                 u64 [sp + 0x48] = t2
  1601: 7b 13 40                 u64 [sp + 0x40] = t1
  1604: 7b 12 38                 u64 [sp + 0x38] = t0
  1607: 7b 15 30                 u64 [sp + 0x30] = s0
  1610: 7b 16 28                 u64 [sp + 0x28] = s1
  1613: 7b 1c 20                 u64 [sp + 0x20] = a5
  1616: 7b 1b 18                 u64 [sp + 0x18] = a4
  1619: 7b 1a 10                 u64 [sp + 0x10] = a3
  1622: 7b 19 08                 u64 [sp + 0x8] = a2
  1625: 33 05 08 10              s0 = 0x1008
  1629: 95 17 50 03              a0 = sp + 0x350
  1633: 33 08                    a1 = 0
  1635: 33 09 08 10              a2 = 0x1008
  1639: 50 10 06 ca 10           ra = 6, jump @311
      :                          @81 [@dyn 3]
  1644: 95 17 50 03              a0 = sp + 0x350
  1648: 33 0a 06                 a3 = 0x6
  1651: 33 08                    a1 = 0
  1653: 7b 15 d8 00              u64 [sp + 0xd8] = s0
  1657: 64 59                    a2 = s0
  1659: 33 0b                    a4 = 0
  1661: 33 0c                    a5 = 0
  1663: 0a 12                    ecalli 18 // 'fetch'
  1665: 01                       fallthrough
      :                          @82
  1666: 51 17 ff 86 00           jump @92 if a0 == 4294967295
      :                          @83
  1671: 33 06 01                 s1 = 0x1
  1674: 33 07 3b 00 01           a0 = 0x1003b
  1679: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1683: 33 07 24 00 01           a0 = 0x10024
  1688: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1692: 28 2e                    jump @87
      :                          @84
  1694: 33 07 02                 a0 = 0x2
  1697: 33 0b 17                 a4 = 0x17
  1700: 33 08                    a1 = 0
  1702: 33 09                    a2 = 0
  1704: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  1708: 0a 64                    ecalli 100 // 'log'
  1710: 01                       fallthrough
      :                          @85
  1711: 33 08                    a1 = 0
  1713: 82 19 d8 00              a2 = u64 [sp + 0xd8]
  1717: 64 6b                    a4 = s1
  1719: 33 0c                    a5 = 0
  1721: 95 17 50 03              a0 = sp + 0x350
  1725: 33 0a 06                 a3 = 0x6
  1728: 0a 12                    ecalli 18 // 'fetch'
  1730: 01                       fallthrough
      :                          @86
  1731: 95 66 01                 s1 = s1 + 0x1
  1734: 51 17 ff 42              jump @92 if a0 == 4294967295
      :                          @87
  1738: 80 17 50 03              a0 = u32 [sp + 0x350]
  1742: 80 15 54 03              s0 = u32 [sp + 0x354]
  1746: 33 09 01                 a2 = 0x1
  1749: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1753: 64 58                    a1 = s0
  1755: 0a 17                    ecalli 23 // 'zero'
  1757: 01                       fallthrough
      :                          @88
  1758: 52 07 c0                 jump @84 if a0 != 0
      :                          @89
  1761: 97 59 0c                 a2 = s0 << 0xc
  1764: 33 0a 00 10              a3 = 0x1000
  1768: 82 17 e0 00              a0 = u64 [sp + 0xe0]
  1772: 95 18 58 03              a1 = sp + 0x358
  1776: 0a 16                    ecalli 22 // 'poke'
  1778: 01                       fallthrough
      :                          @90
  1779: 51 07 bc                 jump @85 if a0 == 0
      :                          @91
  1782: 33 07 02                 a0 = 0x2
  1785: 33 0b 17                 a4 = 0x17
  1788: 33 08                    a1 = 0
  1790: 33 09                    a2 = 0
  1792: 82 1a b0 00              a3 = u64 [sp + 0xb0]
  1796: 0a 64                    ecalli 100 // 'log'
  1798: 28 a9                    jump @85
      :                          @92
  1800: 82 17 88 00              a0 = u64 [sp + 0x88]
  1804: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1807: 51 07 99 04              jump @172 if a0 == 0
      :                          @93
  1811: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1815: 82 17 c8 00              a0 = u64 [sp + 0xc8]
  1819: 82 18 c0 00              a1 = u64 [sp + 0xc0]
  1823: c8 87 07                 a0 = a0 + a1
  1826: 33 05 08 10              s0 = 0x1008
  1830: 33 0a 3b 00 01           a3 = 0x1003b
  1835: 7b 1a 90 00              u64 [sp + 0x90] = a3
  1839: 95 76 04                 s1 = a0 + 0x4
  1842: 14 08 00 00 ff ff 00 00 00 00 a1 = 0xffff0000
  1852: 7b 18 a0 00              u64 [sp + 0xa0] = a1
  1856: 14 09 00 00 fe fe 00 00 00 00 a2 = 0xfefe0000
  1866: 7b 19 98 00              u64 [sp + 0x98] = a2
  1870: 33 07 08                 a0 = 0x8
  1873: 95 18 10 03              a1 = sp + 0x310
  1877: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  1881: 7b 15 b0 00              u64 [sp + 0xb0] = s0
  1885: 28 4f                    jump @98
      :                          @94
  1887: 33 0a 24 00 01           a3 = 0x10024
  1892: 33 07 02                 a0 = 0x2
  1895: 33 0b 17                 a4 = 0x17
  1898: 33 08                    a1 = 0
  1900: 33 09                    a2 = 0
  1902: 0a 64                    ecalli 100 // 'log'
  1904: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  1908: 82 16 c8 00              s1 = u64 [sp + 0xc8]
  1912: 28 07                    jump @96
      :                          @95
  1914: 82 16 c8 00              s1 = u64 [sp + 0xc8]
  1918: 01                       fallthrough
      :                          @96
  1919: 64 58                    a1 = s0
  1921: 95 17 68 33              a0 = sp + 0x3368
  1925: 0a 13                    ecalli 19 // 'export'
  1927: 01                       fallthrough
      :                          @97
  1928: 82 19 e0 00              a2 = u64 [sp + 0xe0]
  1932: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  1935: 95 66 08                 s1 = s1 + 0x8
  1938: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  1942: 95 77 08                 a0 = a0 + 0x8
  1945: 82 18 d0 00              a1 = u64 [sp + 0xd0]
  1949: 95 88 04                 a1 = a1 + 0x4
  1952: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  1956: 7b 19 e0 00              u64 [sp + 0xe0] = a2
  1960: 51 09 58 03              jump @140 if a2 == 0
      :                          @98
  1964: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1968: 7b 16 c8 00              u64 [sp + 0xc8] = s1
  1972: 95 17 58 13              a0 = sp + 0x1358
  1976: 33 08                    a1 = 0
  1978: 64 59                    a2 = s0
  1980: 50 10 08 75 0f           ra = 8, jump @311
      :                          @99 [@dyn 4]
  1985: 95 17 60 23              a0 = sp + 0x2360
  1989: 33 08                    a1 = 0
  1991: 64 59                    a2 = s0
  1993: 50 10 0a 68 0f           ra = 10, jump @311
      :                          @100 [@dyn 5]
  1998: 95 17 68 33              a0 = sp + 0x3368
  2002: 33 08                    a1 = 0
  2004: 64 59                    a2 = s0
  2006: 50 10 0c 5b 0f           ra = 12, jump @311
      :                          @101 [@dyn 6]
  2011: 95 17 70 43              a0 = sp + 0x4370
  2015: 49 07                    u64 [a0 + 0] = 0
  2017: 49 17 08                 u64 [a0 + 8] = 0
  2020: 82 17 d8 00              a0 = u64 [sp + 0xd8]
  2024: 51 27 88 00 16 04        jump @177 if a0 == 136
      :                          @102
  2030: 82 16 c8 00              s1 = u64 [sp + 0xc8]
  2034: 82 18 b8 00              a1 = u64 [sp + 0xb8]
  2038: ac 78 bc 03              jump @173 if a1 <u a0
      :                          @103
  2042: 7c 67 01                 a0 = u8 [s1 + 0x1]
  2045: 7c 68                    a1 = u8 [s1]
  2047: 7c 69 02                 a2 = u8 [s1 + 0x2]
  2050: 7d 6a 03                 a3 = i8 [s1 + 0x3]
  2053: 97 77 08                 a0 = a0 << 0x8
  2056: d4 87 07                 a0 = a0 | a1
  2059: 97 99 10                 a2 = a2 << 0x10
  2062: 97 aa 18                 a3 = a3 << 0x18
  2065: d4 a9 09                 a2 = a2 | a3
  2068: d4 97 07                 a0 = a0 | a2
  2071: 52 17 01 68 ff           jump @96 if a0 != 1
      :                          @104
  2076: 7c 67 fd                 a0 = u8 [s1 + 0xfffffffffffffffd]
  2079: 7c 6a fc                 a3 = u8 [s1 + 0xfffffffffffffffc]
  2082: 7c 68 fe                 a1 = u8 [s1 + 0xfffffffffffffffe]
  2085: 7c 69 ff                 a2 = u8 [s1 + 0xffffffffffffffff]
  2088: 97 77 08                 a0 = a0 << 0x8
  2091: d4 a7 07                 a0 = a0 | a3
  2094: 82 1a d0 00              a3 = u64 [sp + 0xd0]
  2098: 80 a5                    s0 = u32 [a3]
  2100: 95 16 c8 43              s1 = sp + 0x43c8
  2104: 49 16 18                 u64 [s1 + 24] = 0
  2107: 49 16 20                 u64 [s1 + 32] = 0
  2110: 95 1a 70 43              a3 = sp + 0x4370
  2114: 49 1a 10 00 00 01        u64 [a3 + 16] = 0x10000
  2120: 82 1b a0 00              a4 = u64 [sp + 0xa0]
  2124: 7b ab 18                 u64 [a3 + 0x18] = a4
  2127: 95 1c 98 43              a5 = sp + 0x4398
  2131: 49 0c                    u64 [a5 + 0] = 0
  2133: 49 1c 08                 u64 [a5 + 8] = 0
  2136: 49 1c 10                 u64 [a5 + 16] = 0
  2139: 49 1c 18                 u64 [a5 + 24] = 0
  2142: 82 1b 98 00              a4 = u64 [sp + 0x98]
  2146: 7b ab 20                 u64 [a3 + 0x20] = a4
  2149: 49 1a 50 02              u64 [a3 + 80] = 0x2
  2153: 97 88 10                 a1 = a1 << 0x10
  2156: 97 99 18                 a2 = a2 << 0x18
  2159: d4 89 09                 a2 = a2 | a1
  2162: 83 58                    i32 a1 = s0 + 0
  2164: d4 79 0b                 a4 = a2 | a0
  2167: 49 1c 20                 u64 [a5 + 32] = 0
  2170: 49 06                    u64 [s1 + 0] = 0
  2172: 49 16 08                 u64 [s1 + 8] = 0
  2175: 49 16 10                 u64 [s1 + 16] = 0
  2178: 64 56                    s1 = s0
  2180: 64 57                    a0 = s0
  2182: 82 15 e0 00              s0 = u64 [sp + 0xe0]
  2186: 7b 16 c0 00              u64 [sp + 0xc0] = s1
  2190: 51 08 41 01              jump @123 if a1 == 0
      :                          @105
  2194: 7b 1b a8 00              u64 [sp + 0xa8] = a4
  2198: 52 18 01 6c              jump @112 if a1 != 1
      :                          @106
  2202: 33 09 00 10              a2 = 0x1000
  2206: 95 16 f8 43              s1 = sp + 0x43f8
  2210: 64 67                    a0 = s1
  2212: 33 08                    a1 = 0
  2214: 50 10 0e 8b 0e           ra = 14, jump @311
      :                          @107 [@dyn 7]
  2219: 95 17 70 43              a0 = sp + 0x4370
  2223: 48 27 80 00              u32 [a0 + 128] = 0
  2227: 48 27 84 00 10           u32 [a0 + 132] = 0x10
  2232: 33 09 00 00 01           a2 = 0x10000
  2237: 33 0a 00 10              a3 = 0x1000
  2241: 33 07                    a0 = 0
  2243: 64 68                    a1 = s1
  2245: 0a 15                    ecalli 21 // 'peek'
  2247: 01                       fallthrough
      :                          @108
  2248: 51 07 15                 jump @110 if a0 == 0
      :                          @109
  2251: 33 0a 52 00 01           a3 = 0x10052
  2256: 33 07 02                 a0 = 0x2
  2259: 33 0b 15                 a4 = 0x15
  2262: 33 08                    a1 = 0
  2264: 33 09                    a2 = 0
  2266: 0a 64                    ecalli 100 // 'log'
  2268: 01                       fallthrough
      :                          @110
  2269: 95 17 58 13              a0 = sp + 0x1358
  2273: 95 18 f0 43              a1 = sp + 0x43f0
  2277: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  2281: 50 10 10 8e 0d           ra = 16, jump @294
      :                          @111 [@dyn 8]
  2286: 33 07 01                 a0 = 0x1
  2289: 95 18 68 23              a1 = sp + 0x2368
  2293: 7a 87                    u32 [a1] = a0
  2295: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  2299: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  2303: 28 d0 00                 jump @123
      :                          @112
  2306: 95 66 fe                 s1 = s1 + 0xfffffffffffffffe
  2309: 33 09 00 10              a2 = 0x1000
  2313: 95 15 f8 43              s0 = sp + 0x43f8
  2317: 64 57                    a0 = s0
  2319: 33 08                    a1 = 0
  2321: 50 10 12 20 0e           ra = 18, jump @311
      :                          @113 [@dyn 9]
  2326: 95 17 70 43              a0 = sp + 0x4370
  2330: 7a 76 80 00              u32 [a0 + 0x80] = s1
  2334: 48 27 84 00 10           u32 [a0 + 132] = 0x10
  2339: 97 67 20                 a0 = s1 << 0x20
  2342: 98 77 20                 a0 = a0 >> 0x20
  2345: 33 09 00 00 01           a2 = 0x10000
  2350: 33 0a 00 10              a3 = 0x1000
  2354: 64 58                    a1 = s0
  2356: 0a 15                    ecalli 21 // 'peek'
  2358: 01                       fallthrough
      :                          @114
  2359: 51 07 15                 jump @116 if a0 == 0
      :                          @115
  2362: 33 0a 52 00 01           a3 = 0x10052
  2367: 33 07 02                 a0 = 0x2
  2370: 33 0b 15                 a4 = 0x15
  2373: 33 08                    a1 = 0
  2375: 33 09                    a2 = 0
  2377: 0a 64                    ecalli 100 // 'log'
  2379: 01                       fallthrough
      :                          @116
  2380: 95 17 58 13              a0 = sp + 0x1358
  2384: 95 18 f0 43              a1 = sp + 0x43f0
  2388: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  2392: 50 10 14 1f 0d           ra = 20, jump @294
      :                          @117 [@dyn 10]
  2397: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  2401: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  2404: 33 09 00 10              a2 = 0x1000
  2408: 95 15 f8 43              s0 = sp + 0x43f8
  2412: 64 57                    a0 = s0
  2414: 33 08                    a1 = 0
  2416: 50 10 16 c1 0d           ra = 22, jump @311
      :                          @118 [@dyn 11]
  2421: 95 17 70 43              a0 = sp + 0x4370
  2425: 7a 76 80 00              u32 [a0 + 0x80] = s1
  2429: 48 27 84 00 10           u32 [a0 + 132] = 0x10
  2434: 97 67 20                 a0 = s1 << 0x20
  2437: 98 77 20                 a0 = a0 >> 0x20
  2440: 33 09 00 00 01           a2 = 0x10000
  2445: 33 0a 00 10              a3 = 0x1000
  2449: 64 58                    a1 = s0
  2451: 0a 15                    ecalli 21 // 'peek'
  2453: 01                       fallthrough
      :                          @119
  2454: 51 07 15                 jump @121 if a0 == 0
      :                          @120
  2457: 33 0a 52 00 01           a3 = 0x10052
  2462: 33 07 02                 a0 = 0x2
  2465: 33 0b 15                 a4 = 0x15
  2468: 33 08                    a1 = 0
  2470: 33 09                    a2 = 0
  2472: 0a 64                    ecalli 100 // 'log'
  2474: 01                       fallthrough
      :                          @121
  2475: 95 17 60 23              a0 = sp + 0x2360
  2479: 95 18 f0 43              a1 = sp + 0x43f0
  2483: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  2487: 50 10 18 c0 0c           ra = 24, jump @294
      :                          @122 [@dyn 12]
  2492: 95 17 68 23              a0 = sp + 0x2368
  2496: 81 77                    a0 = i32 [a0]
  2498: 82 15 e0 00              s0 = u64 [sp + 0xe0]
  2502: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  2506: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  2510: 01                       fallthrough
      :                          @123
  2511: 95 19 58 13              a2 = sp + 0x1358
  2515: 7a 96                    u32 [a2] = s1
  2517: 48 19 04 10              u32 [a2 + 4] = 0x10
  2521: 95 18 68 23              a1 = sp + 0x2368
  2525: 7a 86 f8                 u32 [a1 + 0xfffffffffffffff8] = s1
  2528: 48 18 fc 11              u32 [a1 + 4294967292] = 0x11
  2532: 81 99 08                 a2 = i32 [a2 + 0x8]
  2535: 33 08 10                 a1 = 0x10
  2538: 95 1a 70 43              a3 = sp + 0x4370
  2542: 7a ab                    u32 [a3] = a4
  2544: 7a a7 08                 u32 [a3 + 0x8] = a0
  2547: 7a a9 0c                 u32 [a3 + 0xc] = a2
  2550: 33 09 01                 a2 = 0x1
  2553: 64 67                    a0 = s1
  2555: 0a 17                    ecalli 23 // 'zero'
  2557: 01                       fallthrough
      :                          @124
  2558: 7b 15 e0 00              u64 [sp + 0xe0] = s0
  2562: 51 07 16                 jump @126 if a0 == 0
      :                          @125
  2565: 33 0a 24 00 01           a3 = 0x10024
  2570: 33 07 02                 a0 = 0x2
  2573: 33 0b 17                 a4 = 0x17
  2576: 33 08                    a1 = 0
  2578: 33 09                    a2 = 0
  2580: 0a 64                    ecalli 100 // 'log'
  2582: 28 28                    jump @129
      :                          @126
  2584: 33 09 00 00 01           a2 = 0x10000
  2589: 33 0a 00 10              a3 = 0x1000
  2593: 64 67                    a0 = s1
  2595: 95 18 60 13              a1 = sp + 0x1360
  2599: 0a 16                    ecalli 22 // 'poke'
  2601: 01                       fallthrough
      :                          @127
  2602: 51 07 14                 jump @129 if a0 == 0
      :                          @128
  2605: 33 07 02                 a0 = 0x2
  2608: 33 0b 17                 a4 = 0x17
  2611: 33 08                    a1 = 0
  2613: 33 09                    a2 = 0
  2615: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2619: 0a 64                    ecalli 100 // 'log'
  2621: 01                       fallthrough
      :                          @129
  2622: 95 17 68 23              a0 = sp + 0x2368
  2626: 80 76 f8                 s1 = u32 [a0 + 0xfffffffffffffff8]
  2629: 80 75 fc                 s0 = u32 [a0 + 0xfffffffffffffffc]
  2632: 33 09 01                 a2 = 0x1
  2635: 64 67                    a0 = s1
  2637: 64 58                    a1 = s0
  2639: 0a 17                    ecalli 23 // 'zero'
  2641: 01                       fallthrough
      :                          @130
  2642: 51 07 16                 jump @132 if a0 == 0
      :                          @131
  2645: 33 0a 24 00 01           a3 = 0x10024
  2650: 33 07 02                 a0 = 0x2
  2653: 33 0b 17                 a4 = 0x17
  2656: 33 08                    a1 = 0
  2658: 33 09                    a2 = 0
  2660: 0a 64                    ecalli 100 // 'log'
  2662: 28 26                    jump @135
      :                          @132
  2664: 97 59 0c                 a2 = s0 << 0xc
  2667: 33 0a 00 10              a3 = 0x1000
  2671: 64 67                    a0 = s1
  2673: 95 18 68 23              a1 = sp + 0x2368
  2677: 0a 16                    ecalli 22 // 'poke'
  2679: 01                       fallthrough
      :                          @133
  2680: 51 07 14                 jump @135 if a0 == 0
      :                          @134
  2683: 33 07 02                 a0 = 0x2
  2686: 33 0b 17                 a4 = 0x17
  2689: 33 08                    a1 = 0
  2691: 33 09                    a2 = 0
  2693: 82 1a 90 00              a3 = u64 [sp + 0x90]
  2697: 0a 64                    ecalli 100 // 'log'
  2699: 01                       fallthrough
      :                          @135
  2700: 82 16 c0 00              s1 = u64 [sp + 0xc0]
  2704: 64 67                    a0 = s1
  2706: 95 18 80 43              a1 = sp + 0x4380
  2710: 0a 19                    ecalli 25 // 'invoke'
  2712: 64 67                    a0 = s1
  2714: 95 15 70 33              s0 = sp + 0x3370
  2718: 64 58                    a1 = s0
  2720: 95 19 70 43              a2 = sp + 0x4370
  2724: 82 99 50                 a2 = u64 [a2 + 0x50]
  2727: 33 0a 00 10              a3 = 0x1000
  2731: 0a 15                    ecalli 21 // 'peek'
  2733: 95 18 68 33              a1 = sp + 0x3368
  2737: 81 87 08                 a0 = i32 [a1 + 0x8]
  2740: 7a 86                    u32 [a1] = s1
  2742: 48 18 04 10              u32 [a1 + 4] = 0x10
  2746: 33 08 10                 a1 = 0x10
  2749: 95 19 70 43              a2 = sp + 0x4370
  2753: 7a 97 04                 u32 [a2 + 0x4] = a0
  2756: 33 09 01                 a2 = 0x1
  2759: 64 67                    a0 = s1
  2761: 0a 17                    ecalli 23 // 'zero'
  2763: 01                       fallthrough
      :                          @136
  2764: 52 07 93 fc              jump @94 if a0 != 0
      :                          @137
  2768: 33 09 00 00 01           a2 = 0x10000
  2773: 33 0a 00 10              a3 = 0x1000
  2777: 64 67                    a0 = s1
  2779: 64 58                    a1 = s0
  2781: 0a 16                    ecalli 22 // 'poke'
  2783: 01                       fallthrough
      :                          @138
  2784: 82 15 b0 00              s0 = u64 [sp + 0xb0]
  2788: 51 07 96 fc              jump @95 if a0 == 0
      :                          @139
  2792: 33 0a 3b 00 01           a3 = 0x1003b
  2797: 33 07 02                 a0 = 0x2
  2800: 33 0b 17                 a4 = 0x17
  2803: 33 08                    a1 = 0
  2805: 33 09                    a2 = 0
  2807: 0a 64                    ecalli 100 // 'log'
  2809: 82 16 c8 00              s1 = u64 [sp + 0xc8]
  2813: 28 82 fc                 jump @96
      :                          @140
  2816: 82 17 80 00              a0 = u64 [sp + 0x80]
  2820: 0a 1a                    ecalli 26 // 'expunge'
  2822: 01                       fallthrough
      :                          @141
  2823: 82 15 88 00              s0 = u64 [sp + 0x88]
  2827: 51 15 02 9d 00           jump @172 if s0 == 2
      :                          @142
  2832: 82 17 78                 a0 = u64 [sp + 0x78]
  2835: 0a 1a                    ecalli 26 // 'expunge'
  2837: 01                       fallthrough
      :                          @143
  2838: 51 15 03 92 00           jump @172 if s0 == 3
      :                          @144
  2843: 82 17 70                 a0 = u64 [sp + 0x70]
  2846: 0a 1a                    ecalli 26 // 'expunge'
  2848: 01                       fallthrough
      :                          @145
  2849: 51 15 04 87 00           jump @172 if s0 == 4
      :                          @146
  2854: 82 17 68                 a0 = u64 [sp + 0x68]
  2857: 0a 1a                    ecalli 26 // 'expunge'
  2859: 01                       fallthrough
      :                          @147
  2860: 51 15 05 7c              jump @172 if s0 == 5
      :                          @148
  2864: 82 17 60                 a0 = u64 [sp + 0x60]
  2867: 0a 1a                    ecalli 26 // 'expunge'
  2869: 01                       fallthrough
      :                          @149
  2870: 51 15 06 72              jump @172 if s0 == 6
      :                          @150
  2874: 82 17 58                 a0 = u64 [sp + 0x58]
  2877: 0a 1a                    ecalli 26 // 'expunge'
  2879: 01                       fallthrough
      :                          @151
  2880: 51 15 07 68              jump @172 if s0 == 7
      :                          @152
  2884: 82 17 50                 a0 = u64 [sp + 0x50]
  2887: 0a 1a                    ecalli 26 // 'expunge'
  2889: 01                       fallthrough
      :                          @153
  2890: 51 15 08 5e              jump @172 if s0 == 8
      :                          @154
  2894: 82 17 48                 a0 = u64 [sp + 0x48]
  2897: 0a 1a                    ecalli 26 // 'expunge'
  2899: 01                       fallthrough
      :                          @155
  2900: 51 15 09 54              jump @172 if s0 == 9
      :                          @156
  2904: 82 17 40                 a0 = u64 [sp + 0x40]
  2907: 0a 1a                    ecalli 26 // 'expunge'
  2909: 01                       fallthrough
      :                          @157
  2910: 51 15 0a 4a              jump @172 if s0 == 10
      :                          @158
  2914: 82 17 38                 a0 = u64 [sp + 0x38]
  2917: 0a 1a                    ecalli 26 // 'expunge'
  2919: 01                       fallthrough
      :                          @159
  2920: 51 15 0b 40              jump @172 if s0 == 11
      :                          @160
  2924: 82 17 30                 a0 = u64 [sp + 0x30]
  2927: 0a 1a                    ecalli 26 // 'expunge'
  2929: 01                       fallthrough
      :                          @161
  2930: 51 15 0c 36              jump @172 if s0 == 12
      :                          @162
  2934: 82 17 28                 a0 = u64 [sp + 0x28]
  2937: 0a 1a                    ecalli 26 // 'expunge'
  2939: 01                       fallthrough
      :                          @163
  2940: 51 15 0d 2c              jump @172 if s0 == 13
      :                          @164
  2944: 82 17 20                 a0 = u64 [sp + 0x20]
  2947: 0a 1a                    ecalli 26 // 'expunge'
  2949: 01                       fallthrough
      :                          @165
  2950: 51 15 0e 22              jump @172 if s0 == 14
      :                          @166
  2954: 82 17 18                 a0 = u64 [sp + 0x18]
  2957: 0a 1a                    ecalli 26 // 'expunge'
  2959: 01                       fallthrough
      :                          @167
  2960: 51 15 0f 18              jump @172 if s0 == 15
      :                          @168
  2964: 82 17 10                 a0 = u64 [sp + 0x10]
  2967: 0a 1a                    ecalli 26 // 'expunge'
  2969: 01                       fallthrough
      :                          @169
  2970: 51 15 10 0e              jump @172 if s0 == 16
      :                          @170
  2974: 82 17 08                 a0 = u64 [sp + 0x8]
  2977: 0a 1a                    ecalli 26 // 'expunge'
  2979: 01                       fallthrough
      :                          @171
  2980: 52 15 11 5a              jump @177 if s0 != 17
      :                          @172
  2984: 95 19 70 43              a2 = sp + 0x4370
  2988: 33 08 10                 a1 = 0x10
  2991: 28 93 f4                 jump @8
      :                          @173
  2994: 00                       trap
      :                          @174
  2995: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  2999: 33 09                    a2 = 0
  3001: 95 17 10 01              a0 = sp + 0x110
  3005: 0a 14                    ecalli 20 // 'machine'
  3007: 01                       fallthrough
      :                          @175
  3008: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  3012: 7a 17 4c 03              u32 [sp + 0x34c] = a0
  3016: 82 17 88 00              a0 = u64 [sp + 0x88]
  3020: 82 18 80 00              a1 = u64 [sp + 0x80]
  3024: 82 19 78                 a2 = u64 [sp + 0x78]
  3027: 82 1a 70                 a3 = u64 [sp + 0x70]
  3030: 82 1b 68                 a4 = u64 [sp + 0x68]
  3033: 82 10 60                 ra = u64 [sp + 0x60]
  3036: 82 1c 58                 a5 = u64 [sp + 0x58]
  3039: 82 14 50                 t2 = u64 [sp + 0x50]
  3042: 82 13 48                 t1 = u64 [sp + 0x48]
  3045: 82 15 90 00              s0 = u64 [sp + 0x90]
  3049: 82 12 40                 t0 = u64 [sp + 0x40]
  3052: 51 17 11 a1 f9           jump @79 if a0 == 17
      :                          @176
  3057: 95 17 10 01              a0 = sp + 0x110
  3061: 82 18 e0 00              a1 = u64 [sp + 0xe0]
  3065: 33 09                    a2 = 0
  3067: 0a 14                    ecalli 20 // 'machine'
  3069: 00                       trap
      :                          @177
  3070: 00                       trap
      :                          @178 [export #1: 'accumulate']
  3071: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  3075: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  3079: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  3083: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  3087: 95 11 48 fc              sp = sp + 0xfffffffffffffc48
  3091: 33 09 08                 a2 = 0x8
  3094: 33 0a 00 00 01           a3 = 0x10000
  3099: ae 98 08                 jump @180 if a1 >=u a2
      :                          @179
  3102: 33 08                    a1 = 0
  3104: 28 c5 01                 jump @241
      :                          @180
  3107: 7c 79 04                 a2 = u8 [a0 + 0x4]
  3110: 7c 7a 05                 a3 = u8 [a0 + 0x5]
  3113: 7c 7b 06                 a4 = u8 [a0 + 0x6]
  3116: 7c 7c 07                 a5 = u8 [a0 + 0x7]
  3119: 95 86 f8                 s1 = a1 + 0xfffffffffffffff8
  3122: 95 77 08                 a0 = a0 + 0x8
  3125: 51 06 0d                 jump @183 if s1 == 0
      :                          @181
  3128: 7d 78                    a1 = i8 [a0]
  3130: 57 08 0c                 jump @184 if a1 <s 0
      :                          @182
  3133: 33 05 01                 s0 = 0x1
  3136: 28 48                    jump @196
      :                          @183
  3138: 33 05                    s0 = 0
  3140: 28 44                    jump @196
      :                          @184
  3142: 84 85 ff 00              s0 = a1 & 0xff
  3146: 55 25 c0 00 0a           jump @186 if s0 >=u 192
      :                          @185
  3151: 33 05 02                 s0 = 0x2
  3154: 28 32                    jump @195
      :                          @186
  3156: 55 25 e0 00 0a           jump @188 if s0 >=u 224
      :                          @187
  3161: 33 05 03                 s0 = 0x3
  3164: 28 28                    jump @195
      :                          @188
  3166: 55 25 f0 00 0a           jump @190 if s0 >=u 240
      :                          @189
  3171: 33 05 04                 s0 = 0x4
  3174: 28 1e                    jump @195
      :                          @190
  3176: 55 25 f8 00 0a           jump @192 if s0 >=u 248
      :                          @191
  3181: 33 05 05                 s0 = 0x5
  3184: 28 14                    jump @195
      :                          @192
  3186: 55 25 fc 00 0a           jump @194 if s0 >=u 252
      :                          @193
  3191: 33 05 06                 s0 = 0x6
  3194: 28 0a                    jump @195
      :                          @194
  3196: 88 58 fe 00              a1 = s0 <u 0xfe
  3200: 9a 85 08                 s0 = 0x8 - a1
  3203: 01                       fallthrough
      :                          @195
  3204: ac 56 59 01              jump @240 if s1 <u s0
      :                          @196
  3208: 7b 1c 18                 u64 [sp + 0x18] = a5
  3211: 7b 1b 20                 u64 [sp + 0x20] = a4
  3214: 7b 1a 28                 u64 [sp + 0x28] = a3
  3217: 7b 19 30                 u64 [sp + 0x30] = a2
  3220: 7b 17 38                 u64 [sp + 0x38] = a0
  3223: 64 58                    a1 = s0
  3225: 50 10 1a 3a 09           ra = 26, jump @270
      :                          @197 [@dyn 13]
  3230: 51 07 3f 01              jump @240 if a0 == 0
      :                          @198
  3234: e4 56 07                 a0 = maxu(s1, s0)
  3237: c9 57 07                 a0 = a0 - s0
  3240: 53 17 60 35 01           jump @240 if a0 <u 96
      :                          @199
  3245: 82 18 38                 a1 = u64 [sp + 0x38]
  3248: c8 85 05                 s0 = s0 + a1
  3251: 95 79 a0                 a2 = a0 + 0xffffffffffffffa0
  3254: 95 57 60                 a0 = s0 + 0x60
  3257: 51 09 10                 jump @202 if a2 == 0
      :                          @200
  3260: 7d 78                    a1 = i8 [a0]
  3262: 7b 19 38                 u64 [sp + 0x38] = a2
  3265: 57 08 1d                 jump @204 if a1 <s 0
      :                          @201
  3268: 33 06 01                 s1 = 0x1
  3271: 28 59                    jump @216
      :                          @202
  3273: 64 75                    s0 = a0
  3275: 33 06                    s1 = 0
  3277: 33 07                    a0 = 0
  3279: 64 98                    a1 = a2
  3281: 95 88                    a1 = a1 + 0
  3283: 95 88                    a1 = a1 + 0
  3285: 33 09 21                 a2 = 0x21
  3288: ae 98 67                 jump @218 if a1 >=u a2
      :                          @203
  3291: 28 02 01                 jump @240
      :                          @204
  3294: 84 8a ff 00              a3 = a1 & 0xff
  3298: 55 2a c0 00 0a           jump @206 if a3 >=u 192
      :                          @205
  3303: 33 06 02                 s1 = 0x2
  3306: 28 32                    jump @215
      :                          @206
  3308: 55 2a e0 00 0a           jump @208 if a3 >=u 224
      :                          @207
  3313: 33 06 03                 s1 = 0x3
  3316: 28 28                    jump @215
      :                          @208
  3318: 55 2a f0 00 0a           jump @210 if a3 >=u 240
      :                          @209
  3323: 33 06 04                 s1 = 0x4
  3326: 28 1e                    jump @215
      :                          @210
  3328: 55 2a f8 00 0a           jump @212 if a3 >=u 248
      :                          @211
  3333: 33 06 05                 s1 = 0x5
  3336: 28 14                    jump @215
      :                          @212
  3338: 55 2a fc 00 0a           jump @214 if a3 >=u 252
      :                          @213
  3343: 33 06 06                 s1 = 0x6
  3346: 28 0a                    jump @215
      :                          @214
  3348: 88 a8 fe 00              a1 = a3 <u 0xfe
  3352: 9a 86 08                 s1 = 0x8 - a1
  3355: 01                       fallthrough
      :                          @215
  3356: ac 69 ac 08              jump @267 if a2 <u s1
      :                          @216
  3360: 64 75                    s0 = a0
  3362: 64 68                    a1 = s1
  3364: 50 10 1c af 08           ra = 28, jump @270
      :                          @217 [@dyn 14]
  3369: 82 19 38                 a2 = u64 [sp + 0x38]
  3372: e4 69 08                 a1 = maxu(a2, s1)
  3375: c9 68 08                 a1 = a1 - s1
  3378: e4 78 08                 a1 = maxu(a1, a0)
  3381: c9 78 08                 a1 = a1 - a0
  3384: 33 09 21                 a2 = 0x21
  3387: ac 98 a2 00              jump @240 if a1 <u a2
      :                          @218
  3391: c8 56 06                 s1 = s1 + s0
  3394: c8 67 07                 a0 = a0 + s1
  3397: 7c 79 20                 a2 = u8 [a0 + 0x20]
  3400: 51 09 0a                 jump @220 if a2 == 0
      :                          @219
  3403: 33 06                    s1 = 0
  3405: 33 0a                    a3 = 0
  3407: 28 ae 00                 jump @242
      :                          @220
  3410: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  3413: 95 75 21                 s0 = a0 + 0x21
  3416: 51 0a 10                 jump @223 if a3 == 0
      :                          @221
  3419: 7d 57                    a0 = i8 [s0]
  3421: 7b 1a 38                 u64 [sp + 0x38] = a3
  3424: 57 07 0e                 jump @224 if a0 <s 0
      :                          @222
  3427: 33 06 01                 s1 = 0x1
  3430: 28 4a                    jump @236
      :                          @223
  3432: 33 06                    s1 = 0
  3434: 33 07                    a0 = 0
  3436: 28 51                    jump @238
      :                          @224
  3438: 84 77 ff 00              a0 = a0 & 0xff
  3442: 55 27 c0 00 0a           jump @226 if a0 >=u 192
      :                          @225
  3447: 33 06 02                 s1 = 0x2
  3450: 28 32                    jump @235
      :                          @226
  3452: 55 27 e0 00 0a           jump @228 if a0 >=u 224
      :                          @227
  3457: 33 06 03                 s1 = 0x3
  3460: 28 28                    jump @235
      :                          @228
  3462: 55 27 f0 00 0a           jump @230 if a0 >=u 240
      :                          @229
  3467: 33 06 04                 s1 = 0x4
  3470: 28 1e                    jump @235
      :                          @230
  3472: 55 27 f8 00 0a           jump @232 if a0 >=u 248
      :                          @231
  3477: 33 06 05                 s1 = 0x5
  3480: 28 14                    jump @235
      :                          @232
  3482: 55 27 fc 00 0a           jump @234 if a0 >=u 252
      :                          @233
  3487: 33 06 06                 s1 = 0x6
  3490: 28 0a                    jump @235
      :                          @234
  3492: 88 77 fe 00              a0 = a0 <u 0xfe
  3496: 9a 76 08                 s1 = 0x8 - a0
  3499: 01                       fallthrough
      :                          @235
  3500: ac 6a 1c 08              jump @267 if a3 <u s1
      :                          @236
  3504: 64 57                    a0 = s0
  3506: 64 68                    a1 = s1
  3508: 50 10 1e 1f 08           ra = 30, jump @270
      :                          @237 [@dyn 15]
  3513: 82 1a 38                 a3 = u64 [sp + 0x38]
  3516: 01                       fallthrough
      :                          @238
  3517: e4 6a 08                 a1 = maxu(a3, s1)
  3520: c9 68 08                 a1 = a1 - s1
  3523: e6 87 0a                 a3 = minu(a0, a1)
  3526: c8 56 06                 s1 = s1 + s0
  3529: 52 1a 24 34              jump @242 if a3 != 36
      :                          @239
  3533: 80 68 20                 a1 = u32 [s1 + 0x20]
  3536: 64 67                    a0 = s1
  3538: 0a 0e                    ecalli 14 // 'solicit'
  3540: 33 08                    a1 = 0
  3542: 33 0a 00 00 01           a3 = 0x10000
  3547: 28 0a                    jump @241
      :                          @240
  3549: 33 08                    a1 = 0
  3551: 33 0a 00 00 01           a3 = 0x10000
  3556: 01                       fallthrough
      :                          @241
  3557: 64 a7                    a0 = a3
  3559: 95 11 b8 03              sp = sp + 0x3b8
  3563: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  3567: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  3571: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  3575: 95 11 f8 07              sp = sp + 0x7f8
  3579: 32 00                    ret
      :                          @242
  3581: 64 69                    a2 = s1
  3583: 7b 1a 10                 u64 [sp + 0x10] = a3
  3586: 46 11 41                 u8 [sp + 65] = 0
  3589: 81 65                    s0 = i32 [s1]
  3591: 95 17 41                 a0 = sp + 0x41
  3594: 33 08 01                 a1 = 0x1
  3597: 0a 03                    ecalli 3 // 'write'
  3599: 82 17 28                 a0 = u64 [sp + 0x28]
  3602: 97 77 08                 a0 = a0 << 0x8
  3605: 82 18 20                 a1 = u64 [sp + 0x20]
  3608: 97 88 10                 a1 = a1 << 0x10
  3611: 82 1a 18                 a3 = u64 [sp + 0x18]
  3614: 97 aa 18                 a3 = a3 << 0x18
  3617: 82 19 30                 a2 = u64 [sp + 0x30]
  3620: d4 97 07                 a0 = a0 | a2
  3623: d4 a8 08                 a1 = a1 | a3
  3626: 46 11 43 61              u8 [sp + 67] = 0x61
  3630: 46 11 44 6d              u8 [sp + 68] = 0x6d
  3634: 46 11 47 54              u8 [sp + 71] = 0x54
  3638: 46 11 4c d1 00           u8 [sp + 76] = 0xd1
  3643: 46 11 4d 99 00           u8 [sp + 77] = 0x99
  3648: 46 11 4f 57              u8 [sp + 79] = 0x57
  3652: 46 11 50 13              u8 [sp + 80] = 0x13
  3656: 46 11 51 fc              u8 [sp + 81] = 0xfffffffffffffffc
  3660: 46 11 52 65              u8 [sp + 82] = 0x65
  3664: 46 11 53 f5              u8 [sp + 83] = 0xfffffffffffffff5
  3668: 46 11 54 31              u8 [sp + 84] = 0x31
  3672: 46 11 55 03              u8 [sp + 85] = 0x3
  3676: 46 11 56 8e 00           u8 [sp + 86] = 0x8e
  3681: 46 11 57 73              u8 [sp + 87] = 0x73
  3685: 46 11 59 d8 00           u8 [sp + 89] = 0xd8
  3690: 46 11 5a 85 00           u8 [sp + 90] = 0x85
  3695: 46 11 5b 64              u8 [sp + 91] = 0x64
  3699: 46 11 5c 56              u8 [sp + 92] = 0x56
  3703: 46 11 5d 32              u8 [sp + 93] = 0x32
  3707: 46 11 5e c8 00           u8 [sp + 94] = 0xc8
  3712: 46 11 45 44              u8 [sp + 69] = 0x44
  3716: 46 11 46 4f              u8 [sp + 70] = 0x4f
  3720: 46 11 4e 50              u8 [sp + 78] = 0x50
  3724: 46 11 5f ae 00           u8 [sp + 95] = 0xae
  3729: 46 11 60 50              u8 [sp + 96] = 0x50
  3733: 46 11 61 3c              u8 [sp + 97] = 0x3c
  3737: 46 11 62 4f              u8 [sp + 98] = 0x4f
  3741: 46 11 63 0c              u8 [sp + 99] = 0xc
  3745: 46 11 64 4d              u8 [sp + 100] = 0x4d
  3749: 46 11 65 5e              u8 [sp + 101] = 0x5e
  3753: 46 11 4b 19              u8 [sp + 75] = 0x19
  3757: 46 11 66 19              u8 [sp + 102] = 0x19
  3761: 46 11 67 a7 00           u8 [sp + 103] = 0xa7
  3766: 46 11 68 bf 00           u8 [sp + 104] = 0xbf
  3771: 46 11 69 a9 00           u8 [sp + 105] = 0xa9
  3776: 46 11 6a bb 00           u8 [sp + 106] = 0xbb
  3781: 46 11 6b 0f              u8 [sp + 107] = 0xf
  3785: 46 11 6c a4 00           u8 [sp + 108] = 0xa4
  3790: 46 11 6d 96 00           u8 [sp + 109] = 0x96
  3795: 46 11 6e 87 00           u8 [sp + 110] = 0x87
  3800: 46 11 6f 47              u8 [sp + 111] = 0x47
  3804: 46 11 70 e6              u8 [sp + 112] = 0xffffffffffffffe6
  3808: 46 11 71 3d              u8 [sp + 113] = 0x3d
  3812: 46 11 72 3c              u8 [sp + 114] = 0x3c
  3816: 33 0c 4a                 a5 = 0x4a
  3819: 46 11 49 0d              u8 [sp + 73] = 0xd
  3823: 46 11 42 6a              u8 [sp + 66] = 0x6a
  3827: 46 11 48 6a              u8 [sp + 72] = 0x6a
  3831: 78 1c 4a                 u8 [sp + 0x4a] = a5
  3834: 46 11 58 f1              u8 [sp + 88] = 0xfffffffffffffff1
  3838: 46 11 73 f1              u8 [sp + 115] = 0xfffffffffffffff1
  3842: 46 11 74 e7              u8 [sp + 116] = 0xffffffffffffffe7
  3846: 78 1c 75                 u8 [sp + 0x75] = a5
  3849: 46 11 76 49              u8 [sp + 118] = 0x49
  3853: 46 11 77 dd 00           u8 [sp + 119] = 0xdd
  3858: 46 11 78 c4 00           u8 [sp + 120] = 0xc4
  3863: 46 11 79 a6 00           u8 [sp + 121] = 0xa6
  3868: 46 11 7a ec              u8 [sp + 122] = 0xffffffffffffffec
  3872: 46 11 7b a8 00           u8 [sp + 123] = 0xa8
  3877: 46 21 80 00 9d 00        u8 [sp + 128] = 0x9d
  3883: 46 21 81 00 a3 00        u8 [sp + 129] = 0xa3
  3889: 46 11 7c 9a 00           u8 [sp + 124] = 0x9a
  3894: 46 11 7d 6a              u8 [sp + 125] = 0x6a
  3898: 46 11 7e 6f              u8 [sp + 126] = 0x6f
  3902: 46 11 7f 33              u8 [sp + 127] = 0x33
  3906: 46 21 82 00 33           u8 [sp + 130] = 0x33
  3911: 46 21 83 00 7f           u8 [sp + 131] = 0x7f
  3916: d4 87 07                 a0 = a0 | a1
  3919: 7b 17 38                 u64 [sp + 0x38] = a0
  3922: 46 21 84 00 d2 00        u8 [sp + 132] = 0xd2
  3928: 46 21 85 00 eb           u8 [sp + 133] = 0xffffffffffffffeb
  3933: 46 21 86 00 55           u8 [sp + 134] = 0x55
  3938: 46 21 87 00 07           u8 [sp + 135] = 0x7
  3943: 95 17 88 00              a0 = sp + 0x88
  3947: 33 09 00 01              a2 = 0x100
  3951: 33 08                    a1 = 0
  3953: 50 10 20 c0 07           ra = 32, jump @311
      :                          @243 [@dyn 16]
  3958: 7b 15 30                 u64 [sp + 0x30] = s0
  3961: 95 57 fe                 a0 = s0 + 0xfffffffffffffffe
  3964: 7b 16 08                 u64 [sp + 0x8] = s1
  3967: 56 17 08 66 05           jump @258 if a0 >u 8
      :                          @244
  3972: 97 77 02                 a0 = a0 << 0x2
  3975: 33 08 00 00 01           a1 = 0x10000
  3980: c8 87 07                 a0 = a0 + a1
  3983: 81 77                    a0 = i32 [a0]
  3985: c8 87 07                 a0 = a0 + a1
  3988: 32 07                    jump [a0]
      :                          @245 [@dyn 17]
  3990: 82 16 38                 s1 = u64 [sp + 0x38]
  3993: 64 67                    a0 = s1
  3995: 33 0b                    a4 = 0
  3997: 95 18 42                 a1 = sp + 0x42
  4000: 33 09 03                 a2 = 0x3
  4003: 95 1a 88 00              a3 = sp + 0x88
  4007: 33 0c 00 01              a5 = 0x100
  4011: 0a 02                    ecalli 2 // 'read'
  4013: 95 15 ff 07              s0 = sp + 0x7ff
  4017: 95 55 90 03              s0 = s0 + 0x390
  4021: 46 15 01 01              u8 [s0 + 1] = 0x1
  4025: 7b 17 88 01              u64 [sp + 0x188] = a0
  4029: 95 17 ff 07              a0 = sp + 0x7ff
  4033: 95 77 91 03              a0 = a0 + 0x391
  4037: 33 08 01                 a1 = 0x1
  4040: 95 19 88 01              a2 = sp + 0x188
  4044: 33 0a 08                 a3 = 0x8
  4047: 0a 03                    ecalli 3 // 'write'
  4049: 95 17 42                 a0 = sp + 0x42
  4052: 33 08 03                 a1 = 0x3
  4055: 95 19 45                 a2 = sp + 0x45
  4058: 33 0a 03                 a3 = 0x3
  4061: 0a 03                    ecalli 3 // 'write'
  4063: 46 15 01 02              u8 [s0 + 1] = 0x2
  4067: 7b 17 88 01              u64 [sp + 0x188] = a0
  4071: 95 17 ff 07              a0 = sp + 0x7ff
  4075: 95 77 91 03              a0 = a0 + 0x391
  4079: 33 08 01                 a1 = 0x1
  4082: 95 19 88 01              a2 = sp + 0x188
  4086: 33 0a 08                 a3 = 0x8
  4089: 0a 03                    ecalli 3 // 'write'
  4091: 95 18 42                 a1 = sp + 0x42
  4094: 33 09 03                 a2 = 0x3
  4097: 95 1a 88 00              a3 = sp + 0x88
  4101: 33 0c 00 01              a5 = 0x100
  4105: 64 67                    a0 = s1
  4107: 33 0b                    a4 = 0
  4109: 0a 02                    ecalli 2 // 'read'
  4111: 46 15 01 05              u8 [s0 + 1] = 0x5
  4115: 7b 17 88 01              u64 [sp + 0x188] = a0
  4119: 95 17 ff 07              a0 = sp + 0x7ff
  4123: 95 77 91 03              a0 = a0 + 0x391
  4127: 33 08 01                 a1 = 0x1
  4130: 95 19 88 01              a2 = sp + 0x188
  4134: 33 0a 08                 a3 = 0x8
  4137: 0a 03                    ecalli 3 // 'write'
  4139: 95 17 42                 a0 = sp + 0x42
  4142: 33 08                    a1 = 0
  4144: 0a 0f                    ecalli 15 // 'forget'
  4146: 46 15 01 06              u8 [s0 + 1] = 0x6
  4150: 7b 17 88 01              u64 [sp + 0x188] = a0
  4154: 95 17 ff 07              a0 = sp + 0x7ff
  4158: 95 77 91 03              a0 = a0 + 0x391
  4162: 33 08 01                 a1 = 0x1
  4165: 95 19 88 01              a2 = sp + 0x188
  4169: 33 0a 08                 a3 = 0x8
  4172: 0a 03                    ecalli 3 // 'write'
  4174: 28 97 04                 jump @258
      :                          @246 [@dyn 18]
  4177: 95 17 48                 a0 = sp + 0x48
  4180: 33 08 03                 a1 = 0x3
  4183: 0a 0e                    ecalli 14 // 'solicit'
  4185: 95 15 ff 07              s0 = sp + 0x7ff
  4189: 95 55 90 03              s0 = s0 + 0x390
  4193: 46 15 01 01              u8 [s0 + 1] = 0x1
  4197: 7b 17 88 01              u64 [sp + 0x188] = a0
  4201: 95 17 ff 07              a0 = sp + 0x7ff
  4205: 95 77 91 03              a0 = a0 + 0x391
  4209: 33 08 01                 a1 = 0x1
  4212: 95 19 88 01              a2 = sp + 0x188
  4216: 33 0a 08                 a3 = 0x8
  4219: 0a 03                    ecalli 3 // 'write'
  4221: 95 17 48                 a0 = sp + 0x48
  4224: 33 08 03                 a1 = 0x3
  4227: 0a 0d                    ecalli 13 // 'query'
  4229: 46 15 01 02              u8 [s0 + 1] = 0x2
  4233: 7b 17 88 01              u64 [sp + 0x188] = a0
  4237: 95 17 ff 07              a0 = sp + 0x7ff
  4241: 95 77 91 03              a0 = a0 + 0x391
  4245: 33 08 01                 a1 = 0x1
  4248: 95 19 88 01              a2 = sp + 0x188
  4252: 33 0a 08                 a3 = 0x8
  4255: 0a 03                    ecalli 3 // 'write'
  4257: 95 15 88 01              s0 = sp + 0x188
  4261: 33 06 00 0a              s1 = 0xa00
  4265: 95 17 88 01              a0 = sp + 0x188
  4269: 33 08                    a1 = 0
  4271: 33 09 00 0a              a2 = 0xa00
  4275: 50 10 26 7e 06           ra = 38, jump @311
      :                          @247 [@dyn 19]
  4280: c8 56 06                 s1 = s1 + s0
  4283: 01                       fallthrough
      :                          @248
  4284: 95 18 48                 a1 = sp + 0x48
  4287: 33 09 20                 a2 = 0x20
  4290: 64 57                    a0 = s0
  4292: 50 10 28 b3 05           ra = 40, jump @294
      :                          @249 [@dyn 20]
  4297: 95 55 20                 s0 = s0 + 0x20
  4300: ab 65 f0                 jump @248 if s0 != s1
      :                          @250
  4303: 33 07                    a0 = 0
  4305: 95 18 88 01              a1 = sp + 0x188
  4309: 0a 06                    ecalli 6 // 'assign'
  4311: 95 18 ff 07              a1 = sp + 0x7ff
  4315: 95 88 90 03              a1 = a1 + 0x390
  4319: 46 08 05                 u8 [a1 + 0] = 0x5
  4322: 7b 87 01                 u64 [a1 + 0x1] = a0
  4325: 95 17 ff 07              a0 = sp + 0x7ff
  4329: 95 77 90 03              a0 = a0 + 0x390
  4333: 33 08 01                 a1 = 0x1
  4336: 95 19 ff 07              a2 = sp + 0x7ff
  4340: 95 99 91 03              a2 = a2 + 0x391
  4344: 33 0a 08                 a3 = 0x8
  4347: 0a 03                    ecalli 3 // 'write'
  4349: 28 e8 03                 jump @258
      :                          @251 [@dyn 21]
  4352: 95 17 48                 a0 = sp + 0x48
  4355: 33 08 03                 a1 = 0x3
  4358: 0a 0f                    ecalli 15 // 'forget'
  4360: 95 15 ff 07              s0 = sp + 0x7ff
  4364: 95 55 90 03              s0 = s0 + 0x390
  4368: 46 15 01 01              u8 [s0 + 1] = 0x1
  4372: 7b 17 88 01              u64 [sp + 0x188] = a0
  4376: 95 17 ff 07              a0 = sp + 0x7ff
  4380: 95 77 91 03              a0 = a0 + 0x391
  4384: 33 08 01                 a1 = 0x1
  4387: 95 19 88 01              a2 = sp + 0x188
  4391: 33 0a 08                 a3 = 0x8
  4394: 0a 03                    ecalli 3 // 'write'
  4396: 95 17 48                 a0 = sp + 0x48
  4399: 33 08 03                 a1 = 0x3
  4402: 0a 0d                    ecalli 13 // 'query'
  4404: 46 15 01 02              u8 [s0 + 1] = 0x2
  4408: 7b 17 88 01              u64 [sp + 0x188] = a0
  4412: 95 17 ff 07              a0 = sp + 0x7ff
  4416: 95 77 91 03              a0 = a0 + 0x391
  4420: 33 08 01                 a1 = 0x1
  4423: 95 19 88 01              a2 = sp + 0x188
  4427: 33 0a 08                 a3 = 0x8
  4430: 0a 03                    ecalli 3 // 'write'
  4432: 95 18 68                 a1 = sp + 0x68
  4435: 95 19 88 00              a2 = sp + 0x88
  4439: 33 0b 03                 a4 = 0x3
  4442: 82 17 38                 a0 = u64 [sp + 0x38]
  4445: 33 0a                    a3 = 0
  4447: 0a 01                    ecalli 1 // 'lookup'
  4449: 46 15 01 05              u8 [s0 + 1] = 0x5
  4453: 7b 17 88 01              u64 [sp + 0x188] = a0
  4457: 95 17 ff 07              a0 = sp + 0x7ff
  4461: 95 77 91 03              a0 = a0 + 0x391
  4465: 33 08 01                 a1 = 0x1
  4468: 95 19 88 01              a2 = sp + 0x188
  4472: 33 0a 08                 a3 = 0x8
  4475: 0a 03                    ecalli 3 // 'write'
  4477: 33 07 e8 03              a0 = 0x3e8
  4481: 95 18 42                 a1 = sp + 0x42
  4484: 0a 06                    ecalli 6 // 'assign'
  4486: 46 15 01 06              u8 [s0 + 1] = 0x6
  4490: 7b 17 88 01              u64 [sp + 0x188] = a0
  4494: 95 17 ff 07              a0 = sp + 0x7ff
  4498: 95 77 91 03              a0 = a0 + 0x391
  4502: 33 08 01                 a1 = 0x1
  4505: 95 19 88 01              a2 = sp + 0x188
  4509: 33 0a 08                 a3 = 0x8
  4512: 0a 03                    ecalli 3 // 'write'
  4514: 28 43 03                 jump @258
      :                          @252 [@dyn 22]
  4517: 82 17 38                 a0 = u64 [sp + 0x38]
  4520: 33 0a                    a3 = 0
  4522: 95 18 48                 a1 = sp + 0x48
  4525: 95 19 88 00              a2 = sp + 0x88
  4529: 33 0b 03                 a4 = 0x3
  4532: 0a 01                    ecalli 1 // 'lookup'
  4534: 95 16 ff 07              s1 = sp + 0x7ff
  4538: 95 66 90 03              s1 = s1 + 0x390
  4542: 46 16 01 01              u8 [s1 + 1] = 0x1
  4546: 7b 17 88 01              u64 [sp + 0x188] = a0
  4550: 14 05 ff ff ff ff ff ff 00 00 s0 = 0xffffffffffff
  4560: 95 17 ff 07              a0 = sp + 0x7ff
  4564: 95 77 91 03              a0 = a0 + 0x391
  4568: 33 08 01                 a1 = 0x1
  4571: 95 19 88 01              a2 = sp + 0x188
  4575: 33 0a 08                 a3 = 0x8
  4578: 0a 03                    ecalli 3 // 'write'
  4580: 95 17 48                 a0 = sp + 0x48
  4583: 33 08 03                 a1 = 0x3
  4586: 0a 0d                    ecalli 13 // 'query'
  4588: 46 16 01 02              u8 [s1 + 1] = 0x2
  4592: 7b 17 88 01              u64 [sp + 0x188] = a0
  4596: 95 17 ff 07              a0 = sp + 0x7ff
  4600: 95 77 91 03              a0 = a0 + 0x391
  4604: 33 08 01                 a1 = 0x1
  4607: 95 19 88 01              a2 = sp + 0x188
  4611: 33 0a 08                 a3 = 0x8
  4614: 0a 03                    ecalli 3 // 'write'
  4616: 95 18 48                 a1 = sp + 0x48
  4619: 82 17 38                 a0 = u64 [sp + 0x38]
  4622: 0a 0c                    ecalli 12 // 'eject'
  4624: 46 16 01 05              u8 [s1 + 1] = 0x5
  4628: 7b 17 88 01              u64 [sp + 0x188] = a0
  4632: 95 17 ff 07              a0 = sp + 0x7ff
  4636: 95 77 91 03              a0 = a0 + 0x391
  4640: 33 08 01                 a1 = 0x1
  4643: 95 19 88 01              a2 = sp + 0x188
  4647: 33 0a 08                 a3 = 0x8
  4650: 0a 03                    ecalli 3 // 'write'
  4652: 95 1a 48                 a3 = sp + 0x48
  4655: 64 57                    a0 = s0
  4657: 33 08                    a1 = 0
  4659: 33 09                    a2 = 0
  4661: 33 0b                    a4 = 0
  4663: 0a 05                    ecalli 5 // 'bless'
  4665: 46 16 01 06              u8 [s1 + 1] = 0x6
  4669: 7b 17 88 01              u64 [sp + 0x188] = a0
  4673: 95 17 ff 07              a0 = sp + 0x7ff
  4677: 95 77 91 03              a0 = a0 + 0x391
  4681: 33 08 01                 a1 = 0x1
  4684: 95 19 88 01              a2 = sp + 0x188
  4688: 33 0a 08                 a3 = 0x8
  4691: 0a 03                    ecalli 3 // 'write'
  4693: 28 90 02                 jump @258
      :                          @253 [@dyn 23]
  4696: 82 16 38                 s1 = u64 [sp + 0x38]
  4699: 64 67                    a0 = s1
  4701: 33 0b                    a4 = 0
  4703: 95 18 42                 a1 = sp + 0x42
  4706: 33 09 03                 a2 = 0x3
  4709: 95 1a 88 00              a3 = sp + 0x88
  4713: 33 0c 00 01              a5 = 0x100
  4717: 0a 02                    ecalli 2 // 'read'
  4719: 95 15 ff 07              s0 = sp + 0x7ff
  4723: 95 55 90 03              s0 = s0 + 0x390
  4727: 46 15 01 01              u8 [s0 + 1] = 0x1
  4731: 7b 17 88 01              u64 [sp + 0x188] = a0
  4735: 95 17 ff 07              a0 = sp + 0x7ff
  4739: 95 77 91 03              a0 = a0 + 0x391
  4743: 33 08 01                 a1 = 0x1
  4746: 95 19 88 01              a2 = sp + 0x188
  4750: 33 0a 08                 a3 = 0x8
  4753: 0a 03                    ecalli 3 // 'write'
  4755: 95 17 42                 a0 = sp + 0x42
  4758: 33 08 03                 a1 = 0x3
  4761: 33 09                    a2 = 0
  4763: 33 0a                    a3 = 0
  4765: 0a 03                    ecalli 3 // 'write'
  4767: 46 15 01 02              u8 [s0 + 1] = 0x2
  4771: 7b 17 88 01              u64 [sp + 0x188] = a0
  4775: 95 17 ff 07              a0 = sp + 0x7ff
  4779: 95 77 91 03              a0 = a0 + 0x391
  4783: 33 08 01                 a1 = 0x1
  4786: 95 19 88 01              a2 = sp + 0x188
  4790: 33 0a 08                 a3 = 0x8
  4793: 0a 03                    ecalli 3 // 'write'
  4795: 95 18 42                 a1 = sp + 0x42
  4798: 33 09 03                 a2 = 0x3
  4801: 95 1a 88 00              a3 = sp + 0x88
  4805: 33 0c 00 01              a5 = 0x100
  4809: 64 67                    a0 = s1
  4811: 33 0b                    a4 = 0
  4813: 0a 02                    ecalli 2 // 'read'
  4815: 46 15 01 05              u8 [s0 + 1] = 0x5
  4819: 7b 17 88 01              u64 [sp + 0x188] = a0
  4823: 95 17 ff 07              a0 = sp + 0x7ff
  4827: 95 77 91 03              a0 = a0 + 0x391
  4831: 33 08 01                 a1 = 0x1
  4834: 95 19 88 01              a2 = sp + 0x188
  4838: 33 0a 08                 a3 = 0x8
  4841: 0a 03                    ecalli 3 // 'write'
  4843: 95 17 48                 a0 = sp + 0x48
  4846: 33 08 03                 a1 = 0x3
  4849: 0a 0e                    ecalli 14 // 'solicit'
  4851: 46 15 01 06              u8 [s0 + 1] = 0x6
  4855: 7b 17 88 01              u64 [sp + 0x188] = a0
  4859: 95 17 ff 07              a0 = sp + 0x7ff
  4863: 95 77 91 03              a0 = a0 + 0x391
  4867: 33 08 01                 a1 = 0x1
  4870: 95 19 88 01              a2 = sp + 0x188
  4874: 33 0a 08                 a3 = 0x8
  4877: 0a 03                    ecalli 3 // 'write'
  4879: 28 d6 01                 jump @258
      :                          @254 [@dyn 24]
  4882: 95 17 48                 a0 = sp + 0x48
  4885: 33 08 03                 a1 = 0x3
  4888: 0a 0e                    ecalli 14 // 'solicit'
  4890: 95 16 ff 07              s1 = sp + 0x7ff
  4894: 95 66 90 03              s1 = s1 + 0x390
  4898: 46 16 01 01              u8 [s1 + 1] = 0x1
  4902: 7b 17 88 01              u64 [sp + 0x188] = a0
  4906: 95 17 ff 07              a0 = sp + 0x7ff
  4910: 95 77 91 03              a0 = a0 + 0x391
  4914: 33 08 01                 a1 = 0x1
  4917: 95 19 88 01              a2 = sp + 0x188
  4921: 33 0a 08                 a3 = 0x8
  4924: 0a 03                    ecalli 3 // 'write'
  4926: 95 17 48                 a0 = sp + 0x48
  4929: 33 08 03                 a1 = 0x3
  4932: 0a 0d                    ecalli 13 // 'query'
  4934: 46 16 01 02              u8 [s1 + 1] = 0x2
  4938: 95 16 ff 07              s1 = sp + 0x7ff
  4942: 95 66 90 03              s1 = s1 + 0x390
  4946: 7b 17 88 01              u64 [sp + 0x188] = a0
  4950: 95 17 ff 07              a0 = sp + 0x7ff
  4954: 95 77 91 03              a0 = a0 + 0x391
  4958: 33 08 01                 a1 = 0x1
  4961: 95 19 88 01              a2 = sp + 0x188
  4965: 33 0a 08                 a3 = 0x8
  4968: 0a 03                    ecalli 3 // 'write'
  4970: 95 17 68                 a0 = sp + 0x68
  4973: 33 08 03                 a1 = 0x3
  4976: 0a 0d                    ecalli 13 // 'query'
  4978: 46 16 01 05              u8 [s1 + 1] = 0x5
  4982: 7b 17 88 01              u64 [sp + 0x188] = a0
  4986: 95 17 ff 07              a0 = sp + 0x7ff
  4990: 95 77 91 03              a0 = a0 + 0x391
  4994: 33 08 01                 a1 = 0x1
  4997: 95 19 88 01              a2 = sp + 0x188
  5001: 33 0a 08                 a3 = 0x8
  5004: 0a 03                    ecalli 3 // 'write'
  5006: 28 57 01                 jump @258
      :                          @255 [@dyn 25]
  5009: 95 17 48                 a0 = sp + 0x48
  5012: 33 08 03                 a1 = 0x3
  5015: 0a 0f                    ecalli 15 // 'forget'
  5017: 95 15 ff 07              s0 = sp + 0x7ff
  5021: 95 55 90 03              s0 = s0 + 0x390
  5025: 46 15 01 01              u8 [s0 + 1] = 0x1
  5029: 7b 17 88 01              u64 [sp + 0x188] = a0
  5033: 95 17 ff 07              a0 = sp + 0x7ff
  5037: 95 77 91 03              a0 = a0 + 0x391
  5041: 33 08 01                 a1 = 0x1
  5044: 95 19 88 01              a2 = sp + 0x188
  5048: 33 0a 08                 a3 = 0x8
  5051: 0a 03                    ecalli 3 // 'write'
  5053: 95 17 48                 a0 = sp + 0x48
  5056: 33 08 03                 a1 = 0x3
  5059: 0a 0d                    ecalli 13 // 'query'
  5061: 46 15 01 02              u8 [s0 + 1] = 0x2
  5065: 7b 17 88 01              u64 [sp + 0x188] = a0
  5069: 95 17 ff 07              a0 = sp + 0x7ff
  5073: 95 77 91 03              a0 = a0 + 0x391
  5077: 33 08 01                 a1 = 0x1
  5080: 95 19 88 01              a2 = sp + 0x188
  5084: 33 0a 08                 a3 = 0x8
  5087: 0a 03                    ecalli 3 // 'write'
  5089: 28 04 01                 jump @258
      :                          @256 [@dyn 26]
  5092: 82 17 38                 a0 = u64 [sp + 0x38]
  5095: 33 0a                    a3 = 0
  5097: 95 18 48                 a1 = sp + 0x48
  5100: 95 19 88 00              a2 = sp + 0x88
  5104: 33 0b 03                 a4 = 0x3
  5107: 0a 01                    ecalli 1 // 'lookup'
  5109: 95 15 ff 07              s0 = sp + 0x7ff
  5113: 95 55 90 03              s0 = s0 + 0x390
  5117: 46 15 01 01              u8 [s0 + 1] = 0x1
  5121: 7b 17 88 01              u64 [sp + 0x188] = a0
  5125: 95 17 ff 07              a0 = sp + 0x7ff
  5129: 95 77 91 03              a0 = a0 + 0x391
  5133: 33 08 01                 a1 = 0x1
  5136: 95 19 88 01              a2 = sp + 0x188
  5140: 33 0a 08                 a3 = 0x8
  5143: 0a 03                    ecalli 3 // 'write'
  5145: 95 17 48                 a0 = sp + 0x48
  5148: 33 08 03                 a1 = 0x3
  5151: 0a 0d                    ecalli 13 // 'query'
  5153: 46 15 01 02              u8 [s0 + 1] = 0x2
  5157: 7b 17 88 01              u64 [sp + 0x188] = a0
  5161: 95 17 ff 07              a0 = sp + 0x7ff
  5165: 95 77 91 03              a0 = a0 + 0x391
  5169: 33 08 01                 a1 = 0x1
  5172: 95 19 88 01              a2 = sp + 0x188
  5176: 33 0a 08                 a3 = 0x8
  5179: 0a 03                    ecalli 3 // 'write'
  5181: 28 a8 00                 jump @258
      :                          @257 [@dyn 27]
  5184: 95 17 48                 a0 = sp + 0x48
  5187: 33 08 03                 a1 = 0x3
  5190: 33 09 8f 03              a2 = 0x38f
  5194: 33 0a 8f 03              a3 = 0x38f
  5198: 0a 09                    ecalli 9 // 'new'
  5200: 95 15 ff 07              s0 = sp + 0x7ff
  5204: 95 55 90 03              s0 = s0 + 0x390
  5208: 46 15 01 01              u8 [s0 + 1] = 0x1
  5212: 7b 17 88 01              u64 [sp + 0x188] = a0
  5216: 95 17 ff 07              a0 = sp + 0x7ff
  5220: 95 77 91 03              a0 = a0 + 0x391
  5224: 33 08 01                 a1 = 0x1
  5227: 95 19 88 01              a2 = sp + 0x188
  5231: 33 0a 08                 a3 = 0x8
  5234: 0a 03                    ecalli 3 // 'write'
  5236: 95 17 48                 a0 = sp + 0x48
  5239: 33 08 8f 03              a1 = 0x38f
  5243: 33 09 8f 03              a2 = 0x38f
  5247: 0a 0a                    ecalli 10 // 'upgrade'
  5249: 46 15 01 02              u8 [s0 + 1] = 0x2
  5253: 7b 17 88 01              u64 [sp + 0x188] = a0
  5257: 95 17 ff 07              a0 = sp + 0x7ff
  5261: 95 77 91 03              a0 = a0 + 0x391
  5265: 33 08 01                 a1 = 0x1
  5268: 95 19 88 01              a2 = sp + 0x188
  5272: 33 0a 08                 a3 = 0x8
  5275: 0a 03                    ecalli 3 // 'write'
  5277: 48 21 88 01 8f 03        u32 [sp + 392] = 0x38f
  5283: 48 21 8c 01 8f 03        u32 [sp + 396] = 0x38f
  5289: 48 21 90 01              u32 [sp + 400] = 0
  5293: 33 08 01                 a1 = 0x1
  5296: 33 09 01                 a2 = 0x1
  5299: 95 1a 88 01              a3 = sp + 0x188
  5303: 33 0b 01                 a4 = 0x1
  5306: 33 07                    a0 = 0
  5308: 0a 05                    ecalli 5 // 'bless'
  5310: 46 05 05                 u8 [s0 + 0] = 0x5
  5313: 95 18 ff 07              a1 = sp + 0x7ff
  5317: 95 88 90 03              a1 = a1 + 0x390
  5321: 7b 87 01                 u64 [a1 + 0x1] = a0
  5324: 95 17 ff 07              a0 = sp + 0x7ff
  5328: 95 77 90 03              a0 = a0 + 0x390
  5332: 33 08 01                 a1 = 0x1
  5335: 95 19 ff 07              a2 = sp + 0x7ff
  5339: 95 99 91 03              a2 = a2 + 0x391
  5343: 33 0a 08                 a3 = 0x8
  5346: 0a 03                    ecalli 3 // 'write'
  5348: 01                       fallthrough
      :                          @258
  5349: 82 17 38                 a0 = u64 [sp + 0x38]
  5352: 95 18 88 00              a1 = sp + 0x88
  5356: 0a 04                    ecalli 4 // 'info'
  5358: 95 16 ff 07              s1 = sp + 0x7ff
  5362: 95 66 90 03              s1 = s1 + 0x390
  5366: 46 16 01 08              u8 [s1 + 1] = 0x8
  5370: 7b 17 88 01              u64 [sp + 0x188] = a0
  5374: 95 17 ff 07              a0 = sp + 0x7ff
  5378: 95 77 91 03              a0 = a0 + 0x391
  5382: 33 08 01                 a1 = 0x1
  5385: 95 19 88 01              a2 = sp + 0x188
  5389: 33 0a 08                 a3 = 0x8
  5392: 0a 03                    ecalli 3 // 'write'
  5394: 0a                       ecalli 0 // 'gas'
  5395: 46 16 01 09              u8 [s1 + 1] = 0x9
  5399: 7b 17 88 01              u64 [sp + 0x188] = a0
  5403: 95 17 ff 07              a0 = sp + 0x7ff
  5407: 95 77 91 03              a0 = a0 + 0x391
  5411: 33 08 01                 a1 = 0x1
  5414: 95 19 88 01              a2 = sp + 0x188
  5418: 33 0a 08                 a3 = 0x8
  5421: 0a 03                    ecalli 3 // 'write'
  5423: 01                       fallthrough
      :                          @259
  5424: 49 21 88 01              u64 [sp + 392] = 0
  5428: 49 21 90 01              u64 [sp + 400] = 0
  5432: 49 21 98 01              u64 [sp + 408] = 0
  5436: 49 21 a0 01              u64 [sp + 416] = 0
  5440: 82 19 10                 a2 = u64 [sp + 0x10]
  5443: 55 19 21 86 00           jump @268 if a2 >=u 33
      :                          @260
  5448: 82 16 30                 s1 = u64 [sp + 0x30]
  5451: 97 65 20                 s0 = s1 << 0x20
  5454: 98 55 20                 s0 = s0 >> 0x20
  5457: 95 17 88 01              a0 = sp + 0x188
  5461: 82 18 08                 a1 = u64 [sp + 0x8]
  5464: 50 10 38 1f 01           ra = 56, jump @294
      :                          @261 [@dyn 28]
  5469: 14 08 56 55 55 55 55 55 55 55 a1 = 0x5555555555555556
  5479: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
  5489: ca 75 07                 a0 = s0 * a0
  5492: ae 87 44                 jump @266 if a0 >=u a1
      :                          @262
  5495: 51 16 09 07              jump @264 if s1 == 9
      :                          @263
  5499: 0a 08                    ecalli 8 // 'checkpoint'
  5501: 01                       fallthrough
      :                          @264
  5502: 95 5a 2a                 a3 = s0 + 0x2a
  5505: 95 17 ff 07              a0 = sp + 0x7ff
  5509: 95 77 90 03              a0 = a0 + 0x390
  5513: 33 08 01                 a1 = 0x1
  5516: 95 19 ff 07              a2 = sp + 0x7ff
  5520: 95 99 91 03              a2 = a2 + 0x391
  5524: 95 1c ff 07              a5 = sp + 0x7ff
  5528: 95 cc 90 03              a5 = a5 + 0x390
  5532: 46 0c 07                 u8 [a5 + 0] = 0x7
  5535: 7b ca 01                 u64 [a5 + 0x1] = a3
  5538: 33 0a 08                 a3 = 0x8
  5541: 33 00 3a                 ra = 0x3a
  5544: 0a 03                    ecalli 3 // 'write'
  5546: 33 07                    a0 = 0
  5548: 33 08 01                 a1 = 0x1
  5551: 32 07                    jump [a0]
      :                          @265 [@dyn 29]
  5553: 33 07                    a0 = 0
  5555: 33 08 01                 a1 = 0x1
  5558: 32 07                    jump [a0]
      :                          @266
  5560: 95 17 88 01              a0 = sp + 0x188
  5564: 0a 10                    ecalli 16 // 'oyield'
  5566: 33 08 20                 a1 = 0x20
  5569: 95 1a 88 01              a3 = sp + 0x188
  5573: 28 20 f8                 jump @241
      :                          @267
  5576: 00                       trap
      :                          @268
  5577: 00                       trap
      :                          @269 [export #2: 'on_transfer']
  5578: 33 07 00 00 01           a0 = 0x10000
  5583: 33 08                    a1 = 0
  5585: 32 00                    ret
      :                          @270
  5587: 51 08 a2 00              jump @292 if a1 == 0
      :                          @271
  5591: 64 79                    a2 = a0
  5593: 7c 77                    a0 = u8 [a0]
  5595: 51 07 97 00              jump @290 if a0 == 0
      :                          @272
  5599: 51 27 ff 00 97 00        jump @293 if a0 == 255
      :                          @273
  5605: 6c 7a                    a3 = sext.b a0
  5607: 57 0a 0b                 jump @275 if a3 <s 0
      :                          @274
  5610: 33 0b                    a4 = 0
  5612: 33 08                    a1 = 0
  5614: 97 77                    a0 = a0 << 0
  5616: 32 00                    ret
      :                          @275
  5618: 55 27 c0 00 0d           jump @277 if a0 >=u 192
      :                          @276
  5623: 33 0c 80                 a5 = 0xffffffffffffff80
  5626: 33 0b 01                 a4 = 0x1
  5629: 28 4d                    jump @286
      :                          @277
  5631: 55 27 e0 00 0e           jump @279 if a0 >=u 224
      :                          @278
  5636: 33 0c 40 ff              a5 = 0xffffffffffffff40
  5640: 33 0b 02                 a4 = 0x2
  5643: 28 3f                    jump @286
      :                          @279
  5645: 55 27 f0 00 0e           jump @281 if a0 >=u 240
      :                          @280
  5650: 33 0c 20 ff              a5 = 0xffffffffffffff20
  5654: 33 0b 03                 a4 = 0x3
  5657: 28 31                    jump @286
      :                          @281
  5659: 55 27 f8 00 0e           jump @283 if a0 >=u 248
      :                          @282
  5664: 33 0c 10 ff              a5 = 0xffffffffffffff10
  5668: 33 0b 04                 a4 = 0x4
  5671: 28 23                    jump @286
      :                          @283
  5673: 55 27 fc 00 0e           jump @285 if a0 >=u 252
      :                          @284
  5678: 33 0c 08 ff              a5 = 0xffffffffffffff08
  5682: 33 0b 05                 a4 = 0x5
  5685: 28 15                    jump @286
      :                          @285
  5687: 88 7a fe 00              a3 = a0 <u 0xfe
  5691: 33 02 02 ff              t0 = 0xffffffffffffff02
  5695: 33 0c 04 ff              a5 = 0xffffffffffffff04
  5699: 85 ab 07                 a4 = a3 ^ 0x7
  5702: da a2 0c                 a5 = t0 if a3 == 0
  5705: 01                       fallthrough
      :                          @286
  5706: 95 ba 01                 a3 = a4 + 0x1
  5709: ac a8 27                 jump @291 if a1 <u a3
      :                          @287
  5712: 33 08                    a1 = 0
  5714: c8 c7 07                 a0 = a0 + a5
  5717: c8 b9 0a                 a3 = a2 + a4
  5720: 01                       fallthrough
      :                          @288
  5721: 7c ac                    a5 = u8 [a3]
  5723: 97 88 08                 a1 = a1 << 0x8
  5726: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5729: d4 c8 08                 a1 = a1 | a5
  5732: ab 9a f5                 jump @288 if a3 != a2
      :                          @289
  5735: 97 bb 03                 a4 = a4 << 0x3
  5738: cf b7 07                 a0 = a0 << a4
  5741: c8 87 07                 a0 = a0 + a1
  5744: 32 00                    ret
      :                          @290
  5746: 32 00                    ret
      :                          @291
  5748: 00                       trap
      :                          @292
  5749: 00                       trap
      :                          @293
  5750: 00                       trap
      :                          @294
  5751: 95 11 e8                 sp = sp + 0xffffffffffffffe8
  5754: 7b 10 10                 u64 [sp + 0x10] = ra
  5757: 7b 15 08                 u64 [sp + 0x8] = s0
  5760: 7b 16                    u64 [sp] = s1
  5762: 53 19 10 59              jump @304 if a2 <u 16
      :                          @295
  5766: 8d 7a                    i32 a3 = -a0
  5768: 84 a2 07                 t0 = a3 & 0x7
  5771: c8 27 05                 s0 = a0 + t0
  5774: ae 57 1a                 jump @298 if a0 >=u s0
      :                          @296
  5777: 64 2c                    a5 = t0
  5779: 64 7a                    a3 = a0
  5781: 64 8b                    a4 = a1
  5783: 01                       fallthrough
      :                          @297
  5784: 7c b3                    t1 = u8 [a4]
  5786: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  5789: 78 a3                    u8 [a3] = t1
  5791: 95 aa 01                 a3 = a3 + 0x1
  5794: 95 bb 01                 a4 = a4 + 0x1
  5797: 52 0c f3                 jump @297 if a5 != 0
      :                          @298
  5800: c8 28 08                 a1 = a1 + t0
  5803: c9 29 06                 s1 = a2 - t0
  5806: 84 6c f8                 a5 = s1 & 0xfffffffffffffff8
  5809: 84 8b 07                 a4 = a1 & 0x7
  5812: c8 c5 0a                 a3 = s0 + a5
  5815: 52 0b 49                 jump @307 if a4 != 0
      :                          @299
  5818: ae a5 13                 jump @302 if s0 >=u a3
      :                          @300
  5821: 64 8b                    a4 = a1
  5823: 01                       fallthrough
      :                          @301
  5824: 82 b9                    a2 = u64 [a4]
  5826: 7b 59                    u64 [s0] = a2
  5828: 95 55 08                 s0 = s0 + 0x8
  5831: 95 bb 08                 a4 = a4 + 0x8
  5834: ac a5 f6                 jump @301 if s0 <u a3
      :                          @302
  5837: c8 c8 08                 a1 = a1 + a5
  5840: 84 69 07                 a2 = s1 & 0x7
  5843: c8 9a 0b                 a4 = a3 + a2
  5846: ac ba 0d                 jump @305 if a3 <u a4
      :                          @303
  5849: 28 1a                    jump @306
      :                          @304
  5851: 64 7a                    a3 = a0
  5853: c8 97 0b                 a4 = a0 + a2
  5856: ae b7 13                 jump @306 if a0 >=u a4
      :                          @305
  5859: 7c 8b                    a4 = u8 [a1]
  5861: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  5864: 78 ab                    u8 [a3] = a4
  5866: 95 aa 01                 a3 = a3 + 0x1
  5869: 95 88 01                 a1 = a1 + 0x1
  5872: 52 09 f3                 jump @305 if a2 != 0
      :                          @306
  5875: 82 10 10                 ra = u64 [sp + 0x10]
  5878: 82 15 08                 s0 = u64 [sp + 0x8]
  5881: 82 16                    s1 = u64 [sp]
  5883: 95 11 18                 sp = sp + 0x18
  5886: 32 00                    ret
      :                          @307
  5888: ae a5 cd                 jump @302 if s0 >=u a3
      :                          @308
  5891: 97 89 03                 a2 = a1 << 0x3
  5894: 84 84 f8                 t2 = a1 & 0xfffffffffffffff8
  5897: 84 92 38                 t0 = a2 & 0x38
  5900: 82 4b                    a4 = u64 [t2]
  5902: 8d 99                    i32 a2 = -a2
  5904: 84 93 38                 t1 = a2 & 0x38
  5907: 95 44 08                 t2 = t2 + 0x8
  5910: 01                       fallthrough
      :                          @309
  5911: 82 49                    a2 = u64 [t2]
  5913: d0 2b 00                 ra = a4 >> t0
  5916: cf 39 0b                 a4 = a2 << t1
  5919: d4 0b 0b                 a4 = a4 | ra
  5922: 7b 5b                    u64 [s0] = a4
  5924: 95 55 08                 s0 = s0 + 0x8
  5927: 95 44 08                 t2 = t2 + 0x8
  5930: 64 9b                    a4 = a2
  5932: ac a5 eb                 jump @309 if s0 <u a3
      :                          @310
  5935: 28 9e                    jump @302
      :                          @311
  5937: 53 19 10 60              jump @321 if a2 <u 16
      :                          @312
  5941: 8d 7a                    i32 a3 = -a0
  5943: 84 a2 07                 t0 = a3 & 0x7
  5946: c8 27 0b                 a4 = a0 + t0
  5949: ae b7 13                 jump @315 if a0 >=u a4
      :                          @313
  5952: 64 2c                    a5 = t0
  5954: 64 7a                    a3 = a0
  5956: 01                       fallthrough
      :                          @314
  5957: 78 a8                    u8 [a3] = a1
  5959: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  5962: 95 aa 01                 a3 = a3 + 0x1
  5965: 52 0c f8                 jump @314 if a5 != 0
      :                          @315
  5968: c9 29 09                 a2 = a2 - t0
  5971: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5974: c8 ba 0a                 a3 = a3 + a4
  5977: ae ab 22                 jump @318 if a4 >=u a3
      :                          @316
  5980: 97 82 38                 t0 = a1 << 0x38
  5983: 14 0c 00 01 01 01 01 00 00 00 a5 = 0x101010100
  5993: d6 c2 02                 t0 = t0 mulhu a5
  5996: 97 2c 20                 a5 = t0 << 0x20
  5999: d4 2c 0c                 a5 = a5 | t0
  6002: 01                       fallthrough
      :                          @317
  6003: 7b bc                    u64 [a4] = a5
  6005: 95 bb 08                 a4 = a4 + 0x8
  6008: ac ab fb                 jump @317 if a4 <u a3
      :                          @318
  6011: 84 99 07                 a2 = a2 & 0x7
  6014: c8 9a 0b                 a4 = a3 + a2
  6017: ae ba 0e                 jump @320 if a3 >=u a4
      :                          @319
  6020: 78 a8                    u8 [a3] = a1
  6022: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6025: 95 aa 01                 a3 = a3 + 0x1
  6028: 52 09 f8                 jump @319 if a2 != 0
      :                          @320
  6031: 32 00                    ret
      :                          @321
  6033: 64 7a                    a3 = a0
  6035: c8 97 0b                 a4 = a0 + a2
  6038: ac b7 ee                 jump @319 if a0 <u a4
      :                          @322
  6041: 28 f6                    jump @320
