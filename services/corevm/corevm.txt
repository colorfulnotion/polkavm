// RO data = 4552/4552 bytes
// RW data = 24/4144 bytes
// Stack size = 40960 bytes
// Jump table entry point size = 2 bytes
// RO data = [138, 0, 255, 255, 162, 0, 255, 255, 180, 0, 255, 255, 198, 0, 255, 255, 222, 0, 255, 255, 246, 0, 255, 255, 12, 1, 255, 255, 24, 1, 255, 255, 36, 1, 255, 255, 54, 1, 255, 255, 0, 16, 0, 0, 0, 0, 0, 0, 252, 255, 255, 255, 255, 255, 255, 255, 250, 255, 255, 255, 255, 255, 255, 255, 101, 120, 112, 117, 110, 103, 101, 32, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 32, 111, 117, 116, 112, 117, 116, 61, 247, 255, 255, 255, 255, 255, 255, 255, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 105, 110, 102, 111, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 105, 110, 115, 101, 114, 116, 32, 116, 44, 32, 103, 111, 116, 32, 121, 105, 101, 108, 100, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 44, 32, 103, 111, 116, 32, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 101, 120, 112, 111, 114, 116, 32, 105, 61, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 114, 101, 97, 100, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 90, 69, 82, 79, 44, 32, 103, 111, 116, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 101, 106, 101, 99, 116, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 32, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 97, 115, 115, 105, 103, 110, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 44, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 32, 40, 50, 43, 50, 94, 51, 50, 42, 120, 41, 44, 32, 103, 111, 116, 32, 110, 101, 119, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 32, 40, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 41, 44, 32, 103, 111, 116, 32, 117, 112, 103, 114, 97, 100, 101, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 98, 108, 101, 115, 115, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 32, 58, 32, 51, 44, 32, 103, 111, 116, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 91, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 40, 41, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 104, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 11, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 29, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 49, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 70, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 80, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 93, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 106, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 1, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 119, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 70, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 80, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 137, 1, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 163, 1, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 170, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 190, 1, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 203, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 203, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 204, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 222, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 239, 1, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 10, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 31, 2, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 42, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 55, 2, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 74, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 204, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 185, 1, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 88, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 83, 2, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 130, 2, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 156, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 176, 2, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 221, 2, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 8, 3, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 28, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 156, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 57, 3, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 3, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 156, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 146, 3, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 175, 3, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 203, 3, 1, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 156, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 241, 3, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 15, 4, 1, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 39, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 67, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 156, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 94, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 130, 4, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 159, 4, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 67, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 177, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 194, 4, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 222, 4, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 67, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 177, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 156, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 242, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 1, 5, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 23, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 156, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 42, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 59, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 90, 5, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 110, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 116, 5, 1, 0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 145, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 201, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 154, 5, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 244, 2, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 59, 5, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 181, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 201, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 221, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 230, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 0, 0, 118, 1, 0, 0, 0, 0, 0, 0, 126, 1, 0, 0, 0, 0, 0, 0, 166, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 0, 0, 0, 0, 174, 1, 0, 0, 0, 0, 0, 0, 178, 1, 0, 0, 0, 0, 0, 0, 93, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 110, 8, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 5769
// Code size = 18124 bytes

      :                          @0
     0: 28 f8 04 00 00           jump @87
      :                          @1
     5: 28 e1 14 00 00           jump @269
      :                          @2
    10: 28 e2 31                 jump @664
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 52                 jump @10 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 7c 37                 jump @804
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   101: 56 27 80 00 6a           jump @16 if a0 >u 128
      :                          @9
   106: 9a bb 81 00              a4 = 0x81 - a4
   110: 64 1a                    a3 = sp
   112: c8 7a 0a                 a3 = a3 + a0
   115: 28 43                    jump @14
      :                          @10
   117: 7c 77                    a0 = u8 [a0]
   119: 33 0b 81 00              a4 = 0x81
   123: 95 19 7f                 a2 = sp + 0x7f
   126: 33 02 37                 t0 = 0x37
   129: 01                       fallthrough
      :                          @11
   130: 64 bc                    a5 = a4
   132: 84 7b 0f                 a4 = a0 & 0xf
   135: 97 77 38                 a0 = a0 << 0x38
   138: 98 77 3c                 a0 = a0 >> 0x3c
   141: 88 b3 0a                 t1 = a4 <u 0xa
   144: 33 0a 30                 a3 = 0x30
   147: da 32 0a                 a3 = t0 if t1 == 0
   150: be ba 0a                 i32 a3 = a3 + a4
   153: 78 9a                    u8 [a2] = a3
   155: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   158: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   161: 52 07 e1                 jump @11 if a0 != 0
      :                          @12
   164: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   167: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   172: 9a bb 81 00              a4 = 0x81 - a4
   176: 64 1a                    a3 = sp
   178: c8 7a 0a                 a3 = a3 + a0
   181: 01                       fallthrough
      :                          @14
   182: 33 09 02                 a2 = 0x2
   185: 64 87                    a0 = a1
   187: 33 08 2f 06 01           a1 = 0x1062f
   192: 50 10 04 09 38           ra = 4, jump @814
      :                          @15 [@dyn 2]
   197: 82 10 80 00              ra = u64 [sp + 0x80]
   201: 95 11 88 00              sp = sp + 0x88
   205: 32 00                    ret
      :                          @16
   207: 00                       trap
      :                          @17 [@dyn 3]
   208: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   211: 7b 10 38                 u64 [sp + 0x38] = ra
   214: 7b 15 30                 u64 [sp + 0x30] = s0
   217: 7b 16 28                 u64 [sp + 0x28] = s1
   220: 7b 18 08                 u64 [sp + 0x8] = a1
   223: 82 89 28                 a2 = u64 [a1 + 0x28]
   226: 82 76                    s1 = u64 [a0]
   228: 82 75 08                 s0 = u64 [a0 + 0x8]
   231: 82 87 20                 a0 = u64 [a1 + 0x20]
   234: 82 9a 18                 a3 = u64 [a2 + 0x18]
   237: 33 08 10 06 01           a1 = 0x10610
   242: 33 09 01                 a2 = 0x1
   245: b4 a0 01 08              ra = 8, jump [a3]
      :                          @18 [@dyn 4]
   249: 82 18 08                 a1 = u64 [sp + 0x8]
   252: 7b 18 10                 u64 [sp + 0x10] = a1
   255: 78 17 18                 u8 [sp + 0x18] = a0
   258: 46 11 19                 u8 [sp + 25] = 0
   261: 51 05 2c                 jump @23 if s0 == 0
      :                          @19
   264: 33 07 02                 a0 = 0x2
   267: 7b 17                    u64 [sp] = a0
   269: 01                       fallthrough
      :                          @20
   270: 95 67 01                 a0 = s1 + 0x1
   273: 7b 17 08                 u64 [sp + 0x8] = a0
   276: 7b 16 20                 u64 [sp + 0x20] = s1
   279: 95 17 10                 a0 = sp + 0x10
   282: 95 18 20                 a1 = sp + 0x20
   285: 82 19                    a2 = u64 [sp]
   287: 50 10 0a 64 42           ra = 10, jump @1031
      :                          @21 [@dyn 5]
   292: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   295: 82 16 08                 s1 = u64 [sp + 0x8]
   298: 52 05 e4                 jump @20 if s0 != 0
      :                          @22
   301: 7c 17 18                 a0 = u8 [sp + 0x18]
   304: 01                       fallthrough
      :                          @23
   305: 33 08 01                 a1 = 0x1
   308: 52 07 1e                 jump @26 if a0 != 0
      :                          @24
   311: 82 17 10                 a0 = u64 [sp + 0x10]
   314: 82 78 28                 a1 = u64 [a0 + 0x28]
   317: 82 77 20                 a0 = u64 [a0 + 0x20]
   320: 82 8a 18                 a3 = u64 [a1 + 0x18]
   323: 33 08 2e 06 01           a1 = 0x1062e
   328: 33 09 01                 a2 = 0x1
   331: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @25 [@dyn 6]
   335: 64 78                    a1 = a0
   337: 01                       fallthrough
      :                          @26
   338: 64 87                    a0 = a1
   340: 82 10 38                 ra = u64 [sp + 0x38]
   343: 82 15 30                 s0 = u64 [sp + 0x30]
   346: 82 16 28                 s1 = u64 [sp + 0x28]
   349: 95 11 40                 sp = sp + 0x40
   352: 32 00                    ret
      :                          @27 [@dyn 7]
   354: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   358: 7b 10 80 00              u64 [sp + 0x80] = ra
   362: 80 89 34                 a2 = u32 [a1 + 0x34]
   365: 82 77                    a0 = u64 [a0]
   367: 84 9a 10                 a3 = a2 & 0x10
   370: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   373: 84 99 20                 a2 = a2 & 0x20
   376: 52 09 51                 jump @34 if a2 != 0
      :                          @29
   379: 82 77                    a0 = u64 [a0]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 28 27 36                 jump @804
      :                          @30
   392: 82 7b                    a4 = u64 [a0]
   394: 33 09 81 00              a2 = 0x81
   398: 95 17 7f                 a0 = sp + 0x7f
   401: 33 02 57                 t0 = 0x57
   404: 01                       fallthrough
      :                          @31
   405: 64 9c                    a5 = a2
   407: 98 ba 04                 a3 = a4 >> 0x4
   410: 84 bb 0f                 a4 = a4 & 0xf
   413: 88 b3 0a                 t1 = a4 <u 0xa
   416: 33 09 30                 a2 = 0x30
   419: da 32 09                 a2 = t0 if t1 == 0
   422: be b9 09                 i32 a2 = a2 + a4
   425: 78 79                    u8 [a0] = a2
   427: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   430: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   433: 64 ab                    a4 = a3
   435: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   438: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   441: 56 27 80 00 69           jump @40 if a0 >u 128
      :                          @33
   446: 9a 9b 81 00              a4 = 0x81 - a2
   450: 64 1a                    a3 = sp
   452: c8 7a 0a                 a3 = a3 + a0
   455: 28 42                    jump @38
      :                          @34
   457: 82 7b                    a4 = u64 [a0]
   459: 33 09 81 00              a2 = 0x81
   463: 95 17 7f                 a0 = sp + 0x7f
   466: 33 02 37                 t0 = 0x37
   469: 01                       fallthrough
      :                          @35
   470: 64 9c                    a5 = a2
   472: 98 ba 04                 a3 = a4 >> 0x4
   475: 84 bb 0f                 a4 = a4 & 0xf
   478: 88 b3 0a                 t1 = a4 <u 0xa
   481: 33 09 30                 a2 = 0x30
   484: da 32 09                 a2 = t0 if t1 == 0
   487: be b9 09                 i32 a2 = a2 + a4
   490: 78 79                    u8 [a0] = a2
   492: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   495: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   498: 64 ab                    a4 = a3
   500: 52 0a e2                 jump @35 if a3 != 0
      :                          @36
   503: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   506: 56 27 80 00 28           jump @40 if a0 >u 128
      :                          @37
   511: 9a 9b 81 00              a4 = 0x81 - a2
   515: 64 1a                    a3 = sp
   517: c8 7a 0a                 a3 = a3 + a0
   520: 01                       fallthrough
      :                          @38
   521: 33 09 02                 a2 = 0x2
   524: 64 87                    a0 = a1
   526: 33 08 2f 06 01           a1 = 0x1062f
   531: 50 10 10 b6 36           ra = 16, jump @814
      :                          @39 [@dyn 8]
   536: 82 10 80 00              ra = u64 [sp + 0x80]
   540: 95 11 88 00              sp = sp + 0x88
   544: 32 00                    ret
      :                          @40
   546: 00                       trap
      :                          @41 [@dyn 9]
   547: 33 09 02                 a2 = 0x2
   550: 64 87                    a0 = a1
   552: 33 08 f9 06 01           a1 = 0x106f9
   557: 28 15 39                 jump @866
      :                          @42 [@dyn 10]
   560: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   564: 7b 10 80 00              u64 [sp + 0x80] = ra
   568: 80 89 34                 a2 = u32 [a1 + 0x34]
   571: 84 9a 10                 a3 = a2 & 0x10
   574: 52 0a 16                 jump @45 if a3 != 0
      :                          @43
   577: 84 99 20                 a2 = a2 & 0x20
   580: 52 09 52                 jump @49 if a2 != 0
      :                          @44
   583: 7c 77                    a0 = u8 [a0]
   585: 82 10 80 00              ra = u64 [sp + 0x80]
   589: 95 11 88 00              sp = sp + 0x88
   593: 28 5b 35                 jump @804
      :                          @45
   596: 7c 77                    a0 = u8 [a0]
   598: 33 0b 81 00              a4 = 0x81
   602: 95 19 7f                 a2 = sp + 0x7f
   605: 33 02 57                 t0 = 0x57
   608: 01                       fallthrough
      :                          @46
   609: 64 bc                    a5 = a4
   611: 84 7b 0f                 a4 = a0 & 0xf
   614: 97 77 38                 a0 = a0 << 0x38
   617: 98 77 3c                 a0 = a0 >> 0x3c
   620: 88 b3 0a                 t1 = a4 <u 0xa
   623: 33 0a 30                 a3 = 0x30
   626: da 32 0a                 a3 = t0 if t1 == 0
   629: be ba 0a                 i32 a3 = a3 + a4
   632: 78 9a                    u8 [a2] = a3
   634: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   637: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   640: 52 07 e1                 jump @46 if a0 != 0
      :                          @47
   643: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   646: 56 27 80 00 6a           jump @55 if a0 >u 128
      :                          @48
   651: 9a bb 81 00              a4 = 0x81 - a4
   655: 64 1a                    a3 = sp
   657: c8 7a 0a                 a3 = a3 + a0
   660: 28 43                    jump @53
      :                          @49
   662: 7c 77                    a0 = u8 [a0]
   664: 33 0b 81 00              a4 = 0x81
   668: 95 19 7f                 a2 = sp + 0x7f
   671: 33 02 37                 t0 = 0x37
   674: 01                       fallthrough
      :                          @50
   675: 64 bc                    a5 = a4
   677: 84 7b 0f                 a4 = a0 & 0xf
   680: 97 77 38                 a0 = a0 << 0x38
   683: 98 77 3c                 a0 = a0 >> 0x3c
   686: 88 b3 0a                 t1 = a4 <u 0xa
   689: 33 0a 30                 a3 = 0x30
   692: da 32 0a                 a3 = t0 if t1 == 0
   695: be ba 0a                 i32 a3 = a3 + a4
   698: 78 9a                    u8 [a2] = a3
   700: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   703: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   706: 52 07 e1                 jump @50 if a0 != 0
      :                          @51
   709: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   712: 56 27 80 00 28           jump @55 if a0 >u 128
      :                          @52
   717: 9a bb 81 00              a4 = 0x81 - a4
   721: 64 1a                    a3 = sp
   723: c8 7a 0a                 a3 = a3 + a0
   726: 01                       fallthrough
      :                          @53
   727: 33 09 02                 a2 = 0x2
   730: 64 87                    a0 = a1
   732: 33 08 2f 06 01           a1 = 0x1062f
   737: 50 10 16 e8 35           ra = 22, jump @814
      :                          @54 [@dyn 11]
   742: 82 10 80 00              ra = u64 [sp + 0x80]
   746: 95 11 88 00              sp = sp + 0x88
   750: 32 00                    ret
      :                          @55
   752: 00                       trap
      :                          @56 [@dyn 12]
   753: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   757: 7b 10 80 00              u64 [sp + 0x80] = ra
   761: 80 89 34                 a2 = u32 [a1 + 0x34]
   764: 84 9a 10                 a3 = a2 & 0x10
   767: 52 0a 16                 jump @59 if a3 != 0
      :                          @57
   770: 84 99 20                 a2 = a2 & 0x20
   773: 52 09 51                 jump @63 if a2 != 0
      :                          @58
   776: 82 77                    a0 = u64 [a0]
   778: 82 10 80 00              ra = u64 [sp + 0x80]
   782: 95 11 88 00              sp = sp + 0x88
   786: 28 9a 34                 jump @804
      :                          @59
   789: 82 7b                    a4 = u64 [a0]
   791: 33 09 81 00              a2 = 0x81
   795: 95 17 7f                 a0 = sp + 0x7f
   798: 33 02 57                 t0 = 0x57
   801: 01                       fallthrough
      :                          @60
   802: 64 9c                    a5 = a2
   804: 98 ba 04                 a3 = a4 >> 0x4
   807: 84 bb 0f                 a4 = a4 & 0xf
   810: 88 b3 0a                 t1 = a4 <u 0xa
   813: 33 09 30                 a2 = 0x30
   816: da 32 09                 a2 = t0 if t1 == 0
   819: be b9 09                 i32 a2 = a2 + a4
   822: 78 79                    u8 [a0] = a2
   824: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   827: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   830: 64 ab                    a4 = a3
   832: 52 0a e2                 jump @60 if a3 != 0
      :                          @61
   835: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   838: 56 27 80 00 69           jump @69 if a0 >u 128
      :                          @62
   843: 9a 9b 81 00              a4 = 0x81 - a2
   847: 64 1a                    a3 = sp
   849: c8 7a 0a                 a3 = a3 + a0
   852: 28 42                    jump @67
      :                          @63
   854: 82 7b                    a4 = u64 [a0]
   856: 33 09 81 00              a2 = 0x81
   860: 95 17 7f                 a0 = sp + 0x7f
   863: 33 02 37                 t0 = 0x37
   866: 01                       fallthrough
      :                          @64
   867: 64 9c                    a5 = a2
   869: 98 ba 04                 a3 = a4 >> 0x4
   872: 84 bb 0f                 a4 = a4 & 0xf
   875: 88 b3 0a                 t1 = a4 <u 0xa
   878: 33 09 30                 a2 = 0x30
   881: da 32 09                 a2 = t0 if t1 == 0
   884: be b9 09                 i32 a2 = a2 + a4
   887: 78 79                    u8 [a0] = a2
   889: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   892: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   895: 64 ab                    a4 = a3
   897: 52 0a e2                 jump @64 if a3 != 0
      :                          @65
   900: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   903: 56 27 80 00 28           jump @69 if a0 >u 128
      :                          @66
   908: 9a 9b 81 00              a4 = 0x81 - a2
   912: 64 1a                    a3 = sp
   914: c8 7a 0a                 a3 = a3 + a0
   917: 01                       fallthrough
      :                          @67
   918: 33 09 02                 a2 = 0x2
   921: 64 87                    a0 = a1
   923: 33 08 2f 06 01           a1 = 0x1062f
   928: 50 10 1a 29 35           ra = 26, jump @814
      :                          @68 [@dyn 13]
   933: 82 10 80 00              ra = u64 [sp + 0x80]
   937: 95 11 88 00              sp = sp + 0x88
   941: 32 00                    ret
      :                          @69
   943: 00                       trap
      :                          @70 [@dyn 14]
   944: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   947: 7b 10 28                 u64 [sp + 0x28] = ra
   950: 7b 15 20                 u64 [sp + 0x20] = s0
   953: 7b 16 18                 u64 [sp + 0x18] = s1
   956: 64 85                    s0 = a1
   958: 82 88 28                 a1 = u64 [a1 + 0x28]
   961: 82 5a 20                 a3 = u64 [s0 + 0x20]
   964: 82 8b 18                 a4 = u64 [a1 + 0x18]
   967: 64 76                    s1 = a0
   969: 33 08 10 06 01           a1 = 0x10610
   974: 33 09 01                 a2 = 0x1
   977: 64 a7                    a0 = a3
   979: b4 b0 01 1e              ra = 30, jump [a4]
      :                          @71 [@dyn 15]
   983: 7b 15                    u64 [sp] = s0
   985: 78 17 08                 u8 [sp + 0x8] = a0
   988: 46 11 09                 u8 [sp + 9] = 0
   991: 7b 16 10                 u64 [sp + 0x10] = s1
   994: 33 05 0e                 s0 = 0xe
   997: 64 17                    a0 = sp
   999: 95 18 10                 a1 = sp + 0x10
  1002: 33 09 0e                 a2 = 0xe
  1005: 50 10 20 96 3f           ra = 32, jump @1031
      :                          @72 [@dyn 16]
  1010: 95 67 08                 a0 = s1 + 0x8
  1013: 7b 17 10                 u64 [sp + 0x10] = a0
  1016: 64 17                    a0 = sp
  1018: 95 18 10                 a1 = sp + 0x10
  1021: 64 59                    a2 = s0
  1023: 50 10 22 84 3f           ra = 34, jump @1031
      :                          @73 [@dyn 17]
  1028: 95 67 10                 a0 = s1 + 0x10
  1031: 7b 17 10                 u64 [sp + 0x10] = a0
  1034: 64 17                    a0 = sp
  1036: 95 18 10                 a1 = sp + 0x10
  1039: 64 59                    a2 = s0
  1041: 50 10 24 72 3f           ra = 36, jump @1031
      :                          @74 [@dyn 18]
  1046: 95 67 18                 a0 = s1 + 0x18
  1049: 7b 17 10                 u64 [sp + 0x10] = a0
  1052: 64 17                    a0 = sp
  1054: 95 18 10                 a1 = sp + 0x10
  1057: 64 59                    a2 = s0
  1059: 50 10 26 60 3f           ra = 38, jump @1031
      :                          @75 [@dyn 19]
  1064: 95 67 20                 a0 = s1 + 0x20
  1067: 7b 17 10                 u64 [sp + 0x10] = a0
  1070: 64 17                    a0 = sp
  1072: 95 18 10                 a1 = sp + 0x10
  1075: 64 59                    a2 = s0
  1077: 50 10 28 4e 3f           ra = 40, jump @1031
      :                          @76 [@dyn 20]
  1082: 95 67 28                 a0 = s1 + 0x28
  1085: 7b 17 10                 u64 [sp + 0x10] = a0
  1088: 64 17                    a0 = sp
  1090: 95 18 10                 a1 = sp + 0x10
  1093: 64 59                    a2 = s0
  1095: 50 10 2a 3c 3f           ra = 42, jump @1031
      :                          @77 [@dyn 21]
  1100: 95 67 30                 a0 = s1 + 0x30
  1103: 7b 17 10                 u64 [sp + 0x10] = a0
  1106: 64 17                    a0 = sp
  1108: 95 18 10                 a1 = sp + 0x10
  1111: 64 59                    a2 = s0
  1113: 50 10 2c 2a 3f           ra = 44, jump @1031
      :                          @78 [@dyn 22]
  1118: 95 67 38                 a0 = s1 + 0x38
  1121: 7b 17 10                 u64 [sp + 0x10] = a0
  1124: 64 17                    a0 = sp
  1126: 95 18 10                 a1 = sp + 0x10
  1129: 64 59                    a2 = s0
  1131: 50 10 2e 18 3f           ra = 46, jump @1031
      :                          @79 [@dyn 23]
  1136: 95 67 40                 a0 = s1 + 0x40
  1139: 7b 17 10                 u64 [sp + 0x10] = a0
  1142: 64 17                    a0 = sp
  1144: 95 18 10                 a1 = sp + 0x10
  1147: 64 59                    a2 = s0
  1149: 50 10 30 06 3f           ra = 48, jump @1031
      :                          @80 [@dyn 24]
  1154: 95 67 48                 a0 = s1 + 0x48
  1157: 7b 17 10                 u64 [sp + 0x10] = a0
  1160: 64 17                    a0 = sp
  1162: 95 18 10                 a1 = sp + 0x10
  1165: 64 59                    a2 = s0
  1167: 50 10 32 f4 3e           ra = 50, jump @1031
      :                          @81 [@dyn 25]
  1172: 95 67 50                 a0 = s1 + 0x50
  1175: 7b 17 10                 u64 [sp + 0x10] = a0
  1178: 64 17                    a0 = sp
  1180: 95 18 10                 a1 = sp + 0x10
  1183: 64 59                    a2 = s0
  1185: 50 10 34 e2 3e           ra = 52, jump @1031
      :                          @82 [@dyn 26]
  1190: 95 67 58                 a0 = s1 + 0x58
  1193: 7b 17 10                 u64 [sp + 0x10] = a0
  1196: 64 17                    a0 = sp
  1198: 95 18 10                 a1 = sp + 0x10
  1201: 64 59                    a2 = s0
  1203: 50 10 36 d0 3e           ra = 54, jump @1031
      :                          @83 [@dyn 27]
  1208: 95 67 60                 a0 = s1 + 0x60
  1211: 7b 17 10                 u64 [sp + 0x10] = a0
  1214: 64 17                    a0 = sp
  1216: 95 18 10                 a1 = sp + 0x10
  1219: 64 59                    a2 = s0
  1221: 50 10 38 be 3e           ra = 56, jump @1031
      :                          @84 [@dyn 28]
  1226: 33 07 01                 a0 = 0x1
  1229: 7c 18 08                 a1 = u8 [sp + 0x8]
  1232: 52 08 1a                 jump @86 if a1 != 0
      :                          @85
  1235: 82 17                    a0 = u64 [sp]
  1237: 82 78 28                 a1 = u64 [a0 + 0x28]
  1240: 82 77 20                 a0 = u64 [a0 + 0x20]
  1243: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1246: 33 08 2e 06 01           a1 = 0x1062e
  1251: 33 09 01                 a2 = 0x1
  1254: b4 a0 01 3a              ra = 58, jump [a3]
      :                          @86 [@dyn 29]
  1258: 82 10 28                 ra = u64 [sp + 0x28]
  1261: 82 15 20                 s0 = u64 [sp + 0x20]
  1264: 82 16 18                 s1 = u64 [sp + 0x18]
  1267: 95 11 30                 sp = sp + 0x30
  1270: 32 00                    ret
      :                          @87 [export #0: 'refine']
  1272: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1276: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1280: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1284: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1288: 95 11 40 d4              sp = sp + 0xffffffffffffd440
  1292: 33 0a 00 00 01           a3 = 0x10000
  1297: 53 18 04 e5 00           jump @106 if a1 <u 4
      :                          @88
  1302: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1305: 51 0b dd 00              jump @106 if a4 == 0
      :                          @89
  1309: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1312: 80 7a                    a3 = u32 [a0]
  1314: 33 06 01                 s1 = 0x1
  1317: 59 08 3d                 jump @98 if a1 >=s 0
      :                          @90
  1320: 84 88 ff 00              a1 = a1 & 0xff
  1324: 33 06 02                 s1 = 0x2
  1327: 53 28 c0 00 2d           jump @96 if a1 <u 192
      :                          @91
  1332: 33 06 03                 s1 = 0x3
  1335: 53 28 e0 00 25           jump @96 if a1 <u 224
      :                          @92
  1340: 33 06 04                 s1 = 0x4
  1343: 53 28 f0 00 1d           jump @96 if a1 <u 240
      :                          @93
  1348: 33 06 05                 s1 = 0x5
  1351: 53 28 f8 00 15           jump @96 if a1 <u 248
      :                          @94
  1356: 33 06 06                 s1 = 0x6
  1359: 53 28 fc 00 0d           jump @96 if a1 <u 252
      :                          @95
  1364: 88 88 fe 00              a1 = a1 <u 0xfe
  1368: 9a 86 08                 s1 = 0x8 - a1
  1371: 01                       fallthrough
      :                          @96
  1372: ae 6b 06                 jump @98 if a4 >=u s1
      :                          @97
  1375: 28 86 0f                 jump @268
      :                          @98
  1378: 7b 1a 78                 u64 [sp + 0x78] = a3
  1381: 95 77 04                 a0 = a0 + 0x4
  1384: 64 68                    a1 = s1
  1386: 7b 1b 80 00              u64 [sp + 0x80] = a4
  1390: 50 10 3c 54 3f           ra = 60, jump @1048
      :                          @99 [@dyn 30]
  1395: 64 75                    s0 = a0
  1397: 82 17 80 00              a0 = u64 [sp + 0x80]
  1401: e4 67 07                 a0 = maxu(a0, s1)
  1404: c9 67 07                 a0 = a0 - s1
  1407: d8 57 08                 a1 = a0 <u s0
  1410: e4 57 07                 a0 = maxu(a0, s0)
  1413: c9 57 07                 a0 = a0 - s0
  1416: 88 77 20                 a0 = a0 <u 0x20
  1419: d4 87 07                 a0 = a0 | a1
  1422: 52 07 5f                 jump @105 if a0 != 0
      :                          @100
  1425: 48 21 a8 00              u32 [sp + 168] = 0
  1429: 49 21 a0 00              u64 [sp + 160] = 0
  1433: 49 21 98 00              u64 [sp + 152] = 0
  1437: 49 21 90 00              u64 [sp + 144] = 0
  1441: 49 21 88 00              u64 [sp + 136] = 0
  1445: 95 17 88 00              a0 = sp + 0x88
  1449: 33 09 24                 a2 = 0x24
  1452: 33 0a 03                 a3 = 0x3
  1455: 33 08                    a1 = 0
  1457: 33 0b                    a4 = 0
  1459: 33 0c                    a5 = 0
  1461: 0a 12                    ecalli 18 // 'fetch'
  1463: 01                       fallthrough
      :                          @101
  1464: 95 1a 88 00              a3 = sp + 0x88
  1468: 33 08 24                 a1 = 0x24
  1471: 53 15 08 3a              jump @107 if s0 <u 8
      :                          @102
  1475: 95 17 b0 00              a0 = sp + 0xb0
  1479: 33 09 00 20              a2 = 0x2000
  1483: 33 08                    a1 = 0
  1485: 50 10 3e 80 31           ra = 62, jump @789
      :                          @103 [@dyn 31]
  1490: 95 18 88 00              a1 = sp + 0x88
  1494: 95 19 b0 00              a2 = sp + 0xb0
  1498: 33 0b 00 20              a4 = 0x2000
  1502: 82 17 78                 a0 = u64 [sp + 0x78]
  1505: 33 0a                    a3 = 0
  1507: 0a 11                    ecalli 17 // 'historical_lookup'
  1509: 01                       fallthrough
      :                          @104
  1510: 95 78 01                 a1 = a0 + 0x1
  1513: 55 18 04 2b              jump @108 if a1 >=u 4
      :                          @105
  1517: 33 08                    a1 = 0
  1519: 33 0a 00 00 01           a3 = 0x10000
  1524: 28 05                    jump @107
      :                          @106
  1526: 33 08                    a1 = 0
  1528: 01                       fallthrough
      :                          @107
  1529: 64 a7                    a0 = a3
  1531: 33 09 c0 2b              a2 = 0x2bc0
  1535: c8 91 01                 sp = sp + a2
  1538: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1542: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1546: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1550: 95 11 f8 07              sp = sp + 0x7f8
  1554: 32 00                    ret
      :                          @108
  1556: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1559: 53 18 03 d6              jump @105 if a1 <u 3
      :                          @109
  1563: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1566: 51 18 06 cf              jump @105 if a1 == 6
      :                          @110
  1570: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1573: 53 18 03 c8              jump @105 if a1 <u 3
      :                          @111
  1577: 7c 18 b2 00              a1 = u8 [sp + 0xb2]
  1581: 7c 19 b1 00              a2 = u8 [sp + 0xb1]
  1585: 7c 1a b0 00              a3 = u8 [sp + 0xb0]
  1589: 97 88 10                 a1 = a1 << 0x10
  1592: 97 99 08                 a2 = a2 << 0x8
  1595: d4 98 08                 a1 = a1 | a2
  1598: d4 a8 08                 a1 = a1 | a3
  1601: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1604: ac 89 a9                 jump @105 if a2 <u a1
      :                          @112
  1607: 7c 17 b5 00              a0 = u8 [sp + 0xb5]
  1611: 7c 1a b4 00              a3 = u8 [sp + 0xb4]
  1615: 7c 1b b3 00              a4 = u8 [sp + 0xb3]
  1619: 97 77 10                 a0 = a0 << 0x10
  1622: 97 aa 08                 a3 = a3 << 0x8
  1625: d4 a7 07                 a0 = a0 | a3
  1628: d4 b7 07                 a0 = a0 | a4
  1631: c9 89 09                 a2 = a2 - a1
  1634: ac 79 8b                 jump @105 if a2 <u a0
      :                          @113
  1637: c9 79 06                 s1 = a2 - a0
  1640: 53 16 04 85              jump @105 if s1 <u 4
      :                          @114
  1644: 95 12 bb 00              t0 = sp + 0xbb
  1648: c8 28 03                 t1 = a1 + t0
  1651: c8 37 0b                 a4 = a0 + t1
  1654: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1657: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1660: 7c ba                    a3 = u8 [a4]
  1662: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1665: 97 cc 10                 a5 = a5 << 0x10
  1668: 97 55 08                 s0 = s0 << 0x8
  1671: d4 5c 0c                 a5 = a5 | s0
  1674: d4 c9 09                 a2 = a2 | a5
  1677: 97 99 08                 a2 = a2 << 0x8
  1680: d4 a9 0c                 a5 = a2 | a3
  1683: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1686: ac c6 57 ff              jump @105 if s1 <u a5
      :                          @115
  1690: 7c 19 b7 00              a2 = u8 [sp + 0xb7]
  1694: 95 1a b0 20              a3 = sp + 0x20b0
  1698: 7c 14 b6 00              t2 = u8 [sp + 0xb6]
  1702: 97 99 08                 a2 = a2 << 0x8
  1705: 7c 16 ba 00              s1 = u8 [sp + 0xba]
  1709: 7c 15 b9 00              s0 = u8 [sp + 0xb9]
  1713: d4 49 04                 t2 = a2 | t2
  1716: 7c 19 b8 00              a2 = u8 [sp + 0xb8]
  1720: 97 66 10                 s1 = s1 << 0x10
  1723: 97 55 08                 s0 = s0 << 0x8
  1726: d4 65 05                 s0 = s0 | s1
  1729: d4 59 09                 a2 = a2 | s0
  1732: 33 05 ff ef              s0 = 0xffffffffffffefff
  1736: 7b 15 80 00              u64 [sp + 0x80] = s0
  1740: 95 bb 04                 a4 = a4 + 0x4
  1743: 7b a4                    u64 [a3] = t2
  1745: 7b a9 08                 u64 [a3 + 0x8] = a2
  1748: 7b a2 10                 u64 [a3 + 0x10] = t0
  1751: 7b a8 18                 u64 [a3 + 0x18] = a1
  1754: 7b a3 20                 u64 [a3 + 0x20] = t1
  1757: 7b a7 28                 u64 [a3 + 0x28] = a0
  1760: 7b ab 30                 u64 [a3 + 0x30] = a4
  1763: 7b ac 38                 u64 [a3 + 0x38] = a5
  1766: 7b aa 50                 u64 [a3 + 0x50] = a3
  1769: 33 08 18                 a1 = 0x18
  1772: 7b a8 58                 u64 [a3 + 0x58] = a1
  1775: 95 17 b8 20              a0 = sp + 0x20b8
  1779: 7b a7 60                 u64 [a3 + 0x60] = a0
  1782: 7b a8 68                 u64 [a3 + 0x68] = a1
  1785: 95 17 c0 20              a0 = sp + 0x20c0
  1789: 7b a7 70                 u64 [a3 + 0x70] = a0
  1792: 7b a8 78                 u64 [a3 + 0x78] = a1
  1795: 95 17 c8 20              a0 = sp + 0x20c8
  1799: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1803: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1807: 95 17 d0 20              a0 = sp + 0x20d0
  1811: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1815: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1819: 95 17 d8 20              a0 = sp + 0x20d8
  1823: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1827: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1831: 95 17 e0 20              a0 = sp + 0x20e0
  1835: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1839: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1843: 95 17 e8 20              a0 = sp + 0x20e8
  1847: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1851: 7b 18 78                 u64 [sp + 0x78] = a1
  1854: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1858: 33 07 78 08 01           a0 = 0x10878
  1863: 95 16 08 31              s1 = sp + 0x3108
  1867: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1871: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1876: 49 26 68 01              u64 [s1 + 360] = 0
  1880: 95 18 00 21              a1 = sp + 0x2100
  1884: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1888: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1893: 95 17 98 31              a0 = sp + 0x3198
  1897: 95 18 50 32              a1 = sp + 0x3250
  1901: 50 10 40 b9 2c           ra = 64, jump @721
      :                          @116 [@dyn 32]
  1906: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1910: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1914: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1918: 33 07 02                 a0 = 0x2
  1921: 33 08                    a1 = 0
  1923: 33 09                    a2 = 0
  1925: 64 5a                    a3 = s0
  1927: 33 00 42                 ra = 0x42
  1930: 0a 64                    ecalli 100 // 'log'
  1932: 01                       fallthrough
      :                          @117 [@dyn 33]
  1933: 82 17 80 00              a0 = u64 [sp + 0x80]
  1937: c8 67 07                 a0 = a0 + s1
  1940: 33 0c 20 00 03           a5 = 0x30020
  1945: 53 27 00 f0 1e           jump @123 if a0 <u 4294963200
      :                          @118
  1950: 95 c7 00 10              a0 = a5 + 0x1000
  1954: 01                       fallthrough
      :                          @119
  1955: 82 78                    a1 = u64 [a0]
  1957: c9 87 09                 a2 = a0 - a1
  1960: ab 59 0f                 jump @123 if a2 != s0
      :                          @120
  1963: c9 68 09                 a2 = a1 - s1
  1966: 01                       fallthrough
      :                          @121
  1967: 82 7a                    a3 = u64 [a0]
  1969: ab 8a f2                 jump @119 if a3 != a1
      :                          @122
  1972: 7b 79                    u64 [a0] = a2
  1974: 01                       fallthrough
      :                          @123
  1975: 7b 1c 70                 u64 [sp + 0x70] = a5
  1978: 0a                       ecalli 0 // 'gas'
  1979: 95 18 b0 20              a1 = sp + 0x20b0
  1983: 7b 87 40                 u64 [a1 + 0x40] = a0
  1986: 95 17 f0 20              a0 = sp + 0x20f0
  1990: 95 16 08 31              s1 = sp + 0x3108
  1994: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1998: 82 17 78                 a0 = u64 [sp + 0x78]
  2001: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2005: 33 07 f8 08 01           a0 = 0x108f8
  2010: 7b 17 28                 u64 [sp + 0x28] = a0
  2013: 7b 87 50                 u64 [a1 + 0x50] = a0
  2016: 95 17 98 31              a0 = sp + 0x3198
  2020: 7b 87 60                 u64 [a1 + 0x60] = a0
  2023: 49 18 58 01              u64 [a1 + 88] = 0x1
  2027: 49 18 70                 u64 [a1 + 112] = 0
  2030: 49 18 68 01              u64 [a1 + 104] = 0x1
  2034: 95 17 50 32              a0 = sp + 0x3250
  2038: 95 18 00 21              a1 = sp + 0x2100
  2042: 50 10 44 2c 2c           ra = 68, jump @721
      :                          @124 [@dyn 34]
  2047: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2051: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2055: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2059: 33 07 02                 a0 = 0x2
  2062: 33 08                    a1 = 0
  2064: 33 09                    a2 = 0
  2066: 64 5a                    a3 = s0
  2068: 33 00 46                 ra = 0x46
  2071: 0a 64                    ecalli 100 // 'log'
  2073: 01                       fallthrough
      :                          @125 [@dyn 35]
  2074: 82 17 80 00              a0 = u64 [sp + 0x80]
  2078: c8 67 07                 a0 = a0 + s1
  2081: 53 27 00 f0 21           jump @131 if a0 <u 4294963200
      :                          @126
  2086: 82 18 70                 a1 = u64 [sp + 0x70]
  2089: 95 87 00 10              a0 = a1 + 0x1000
  2093: 01                       fallthrough
      :                          @127
  2094: 82 78                    a1 = u64 [a0]
  2096: c9 87 09                 a2 = a0 - a1
  2099: ab 59 0f                 jump @131 if a2 != s0
      :                          @128
  2102: c9 68 09                 a2 = a1 - s1
  2105: 01                       fallthrough
      :                          @129
  2106: 82 7a                    a3 = u64 [a0]
  2108: ab 8a f2                 jump @127 if a3 != a1
      :                          @130
  2111: 7b 79                    u64 [a0] = a2
  2113: 01                       fallthrough
      :                          @131
  2114: 95 15 b0 20              s0 = sp + 0x20b0
  2118: 82 57 30                 a0 = u64 [s0 + 0x30]
  2121: 82 58 38                 a1 = u64 [s0 + 0x38]
  2124: 33 09                    a2 = 0
  2126: 0a 14                    ecalli 20 // 'machine'
  2128: 7b 57 48                 u64 [s0 + 0x48] = a0
  2131: 95 17 f8 20              a0 = sp + 0x20f8
  2135: 95 16 08 31              s1 = sp + 0x3108
  2139: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2143: 33 07 08 09 01           a0 = 0x10908
  2148: 7b 57 50                 u64 [s0 + 0x50] = a0
  2151: 95 17 98 31              a0 = sp + 0x3198
  2155: 7b 57 60                 u64 [s0 + 0x60] = a0
  2158: 49 15 58 01              u64 [s0 + 88] = 0x1
  2162: 49 15 68 01              u64 [s0 + 104] = 0x1
  2166: 82 17 78                 a0 = u64 [sp + 0x78]
  2169: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2173: 49 15 70                 u64 [s0 + 112] = 0
  2176: 95 17 50 32              a0 = sp + 0x3250
  2180: 95 18 00 21              a1 = sp + 0x2100
  2184: 50 10 48 9e 2b           ra = 72, jump @721
      :                          @132 [@dyn 36]
  2189: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2193: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2197: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2201: 33 07 02                 a0 = 0x2
  2204: 33 08                    a1 = 0
  2206: 33 09                    a2 = 0
  2208: 64 5a                    a3 = s0
  2210: 33 00 4a                 ra = 0x4a
  2213: 0a 64                    ecalli 100 // 'log'
  2215: 01                       fallthrough
      :                          @133 [@dyn 37]
  2216: 82 17 80 00              a0 = u64 [sp + 0x80]
  2220: c8 67 07                 a0 = a0 + s1
  2223: 53 27 00 f0 21           jump @139 if a0 <u 4294963200
      :                          @134
  2228: 82 18 70                 a1 = u64 [sp + 0x70]
  2231: 95 87 00 10              a0 = a1 + 0x1000
  2235: 01                       fallthrough
      :                          @135
  2236: 82 78                    a1 = u64 [a0]
  2238: c9 87 09                 a2 = a0 - a1
  2241: ab 59 0f                 jump @139 if a2 != s0
      :                          @136
  2244: c9 68 09                 a2 = a1 - s1
  2247: 01                       fallthrough
      :                          @137
  2248: 82 7a                    a3 = u64 [a0]
  2250: ab 8a f2                 jump @135 if a3 != a1
      :                          @138
  2253: 7b 79                    u64 [a0] = a2
  2255: 01                       fallthrough
      :                          @139
  2256: 95 19 b0 20              a2 = sp + 0x20b0
  2260: 82 97                    a0 = u64 [a2]
  2262: 7b 17 58                 u64 [sp + 0x58] = a0
  2265: 82 97 08                 a0 = u64 [a2 + 0x8]
  2268: 7b 17 50                 u64 [sp + 0x50] = a0
  2271: 82 97 10                 a0 = u64 [a2 + 0x10]
  2274: 7b 17 48                 u64 [sp + 0x48] = a0
  2277: 82 95 18                 s0 = u64 [a2 + 0x18]
  2280: 82 98 20                 a1 = u64 [a2 + 0x20]
  2283: 7b 18 40                 u64 [sp + 0x40] = a1
  2286: 80 97 48                 a0 = u32 [a2 + 0x48]
  2289: 82 96 28                 s1 = u64 [a2 + 0x28]
  2292: 49 11 60 ff 0f           u64 [sp + 96] = 0xfff
  2297: 95 59 ff 0f              a2 = s0 + 0xfff
  2301: 98 99 0c                 a2 = a2 >> 0xc
  2304: 33 08 10                 a1 = 0x10
  2307: 7b 17 68                 u64 [sp + 0x68] = a0
  2310: 0a 17                    ecalli 23 // 'zero'
  2312: 01                       fallthrough
      :                          @140
  2313: 51 07 17                 jump @142 if a0 == 0
      :                          @141
  2316: 33 0a 1f 08 01           a3 = 0x1081f
  2321: 33 07 02                 a0 = 0x2
  2324: 33 0b 3e                 a4 = 0x3e
  2327: 33 08                    a1 = 0
  2329: 33 09                    a2 = 0
  2331: 0a 64                    ecalli 100 // 'log'
  2333: 28 e0 00                 jump @155
      :                          @142
  2336: 7b 16 38                 u64 [sp + 0x38] = s1
  2339: 82 17 60                 a0 = u64 [sp + 0x60]
  2342: c8 67 07                 a0 = a0 + s1
  2345: 98 77 0c                 a0 = a0 >> 0xc
  2348: 82 19 58                 a2 = u64 [sp + 0x58]
  2351: c8 79 09                 a2 = a2 + a0
  2354: 7b 15 58                 u64 [sp + 0x58] = s0
  2357: 95 57 ff ff 00           a0 = s0 + 0xffff
  2362: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2367: 95 75 00 00 02           s0 = a0 + 0x20000
  2372: 98 58 0c                 a1 = s0 >> 0xc
  2375: 82 17 68                 a0 = u64 [sp + 0x68]
  2378: 0a 17                    ecalli 23 // 'zero'
  2380: 01                       fallthrough
      :                          @143
  2381: 51 07 17                 jump @145 if a0 == 0
      :                          @144
  2384: 33 0a e1 07 01           a3 = 0x107e1
  2389: 33 07 02                 a0 = 0x2
  2392: 33 0b 3e                 a4 = 0x3e
  2395: 33 08                    a1 = 0
  2397: 33 09                    a2 = 0
  2399: 0a 64                    ecalli 100 // 'log'
  2401: 28 9c 00                 jump @155
      :                          @145
  2404: 82 16 60                 s1 = u64 [sp + 0x60]
  2407: 82 17 50                 a0 = u64 [sp + 0x50]
  2410: c8 76 06                 s1 = s1 + a0
  2413: 98 69 0c                 a2 = s1 >> 0xc
  2416: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2420: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2430: c9 78 08                 a1 = a1 - a0
  2433: 98 88 0c                 a1 = a1 >> 0xc
  2436: 82 17 68                 a0 = u64 [sp + 0x68]
  2439: 0a 17                    ecalli 23 // 'zero'
  2441: 01                       fallthrough
      :                          @146
  2442: 51 07 16                 jump @148 if a0 == 0
      :                          @147
  2445: 33 0a a5 07 01           a3 = 0x107a5
  2450: 33 07 02                 a0 = 0x2
  2453: 33 0b 3c                 a4 = 0x3c
  2456: 33 08                    a1 = 0
  2458: 33 09                    a2 = 0
  2460: 0a 64                    ecalli 100 // 'log'
  2462: 28 5f                    jump @155
      :                          @148
  2464: 33 09 00 00 01           a2 = 0x10000
  2469: 82 17 68                 a0 = u64 [sp + 0x68]
  2472: 82 18 48                 a1 = u64 [sp + 0x48]
  2475: 82 1a 58                 a3 = u64 [sp + 0x58]
  2478: 0a 16                    ecalli 22 // 'poke'
  2480: 01                       fallthrough
      :                          @149
  2481: 51 07 16                 jump @151 if a0 == 0
      :                          @150
  2484: 33 0a 67 07 01           a3 = 0x10767
  2489: 33 07 02                 a0 = 0x2
  2492: 33 0b 3e                 a4 = 0x3e
  2495: 33 08                    a1 = 0
  2497: 33 09                    a2 = 0
  2499: 0a 64                    ecalli 100 // 'log'
  2501: 28 38                    jump @155
      :                          @151
  2503: 82 17 68                 a0 = u64 [sp + 0x68]
  2506: 82 18 40                 a1 = u64 [sp + 0x40]
  2509: 64 59                    a2 = s0
  2511: 82 1a 38                 a3 = u64 [sp + 0x38]
  2514: 0a 16                    ecalli 22 // 'poke'
  2516: 01                       fallthrough
      :                          @152
  2517: 51 07 16                 jump @154 if a0 == 0
      :                          @153
  2520: 33 0a 29 07 01           a3 = 0x10729
  2525: 33 07 02                 a0 = 0x2
  2528: 33 0b 3e                 a4 = 0x3e
  2531: 33 08                    a1 = 0
  2533: 33 09                    a2 = 0
  2535: 0a 64                    ecalli 100 // 'log'
  2537: 28 14                    jump @155
      :                          @154
  2539: 33 0a fb 06 01           a3 = 0x106fb
  2544: 33 07 02                 a0 = 0x2
  2547: 33 0b 2e                 a4 = 0x2e
  2550: 33 08                    a1 = 0
  2552: 33 09                    a2 = 0
  2554: 0a 64                    ecalli 100 // 'log'
  2556: 01                       fallthrough
      :                          @155
  2557: 95 16 08 31              s1 = sp + 0x3108
  2561: 33 05 08 10              s0 = 0x1008
  2565: 95 17 00 21              a0 = sp + 0x2100
  2569: 33 08                    a1 = 0
  2571: 33 09 08 10              a2 = 0x1008
  2575: 50 10 4c 3e 2d           ra = 76, jump @789
      :                          @156 [@dyn 38]
  2580: 49 06                    u64 [s1 + 0] = 0
  2582: 95 17 08 21              a0 = sp + 0x2108
  2586: 7b 67 08                 u64 [s1 + 0x8] = a0
  2589: 49 16 10                 u64 [s1 + 16] = 0
  2592: 49 16 18                 u64 [s1 + 24] = 0
  2595: 95 17 00 21              a0 = sp + 0x2100
  2599: 33 0a 06                 a3 = 0x6
  2602: 33 08                    a1 = 0
  2604: 7b 15 68                 u64 [sp + 0x68] = s0
  2607: 64 59                    a2 = s0
  2609: 33 0b                    a4 = 0
  2611: 33 0c                    a5 = 0
  2613: 0a 12                    ecalli 18 // 'fetch'
  2615: 01                       fallthrough
      :                          @157
  2616: 7b 67 60 02              u64 [s1 + 0x260] = a0
  2620: 33 08 28 00 01           a1 = 0x10028
  2625: 7b 18 58                 u64 [sp + 0x58] = a1
  2628: 51 17 ff 56 02           jump @184 if a0 == 4294967295
      :                          @158
  2633: 33 07 18 09 01           a0 = 0x10918
  2638: 7b 17 60                 u64 [sp + 0x60] = a0
  2641: 33 07 38 09 01           a0 = 0x10938
  2646: 7b 17 50                 u64 [sp + 0x50] = a0
  2649: 33 07 68 09 01           a0 = 0x10968
  2654: 7b 17 48                 u64 [sp + 0x48] = a0
  2657: 28 27                    jump @161
      :                          @159
  2659: 95 16 08 31              s1 = sp + 0x3108
  2663: 82 6b                    a4 = u64 [s1]
  2665: 95 bb 01                 a4 = a4 + 0x1
  2668: 7b 6b                    u64 [s1] = a4
  2670: 95 17 00 21              a0 = sp + 0x2100
  2674: 33 0a 06                 a3 = 0x6
  2677: 33 08                    a1 = 0
  2679: 82 19 68                 a2 = u64 [sp + 0x68]
  2682: 33 0c                    a5 = 0
  2684: 0a 12                    ecalli 18 // 'fetch'
  2686: 01                       fallthrough
      :                          @160
  2687: 7b 67 60 02              u64 [s1 + 0x260] = a0
  2691: 51 17 ff 17 02           jump @184 if a0 == 4294967295
      :                          @161
  2696: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2700: 82 17 78                 a0 = u64 [sp + 0x78]
  2703: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2707: 95 18 68 33              a1 = sp + 0x3368
  2711: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2715: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2719: 82 17 60                 a0 = u64 [sp + 0x60]
  2722: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2726: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2731: 49 26 68 01              u64 [s1 + 360] = 0
  2735: 95 18 98 31              a1 = sp + 0x3198
  2739: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2743: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2748: 95 17 30 31              a0 = sp + 0x3130
  2752: 95 18 50 32              a1 = sp + 0x3250
  2756: 50 10 4e 62 29           ra = 78, jump @721
      :                          @162 [@dyn 39]
  2761: 95 17 08 31              a0 = sp + 0x3108
  2765: 82 76 30                 s1 = u64 [a0 + 0x30]
  2768: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2771: 82 75 28                 s0 = u64 [a0 + 0x28]
  2774: 33 07 02                 a0 = 0x2
  2777: 33 08                    a1 = 0
  2779: 33 09                    a2 = 0
  2781: 64 6a                    a3 = s1
  2783: 33 00 50                 ra = 0x50
  2786: 0a 64                    ecalli 100 // 'log'
  2788: 01                       fallthrough
      :                          @163 [@dyn 40]
  2789: 82 17 80 00              a0 = u64 [sp + 0x80]
  2793: c8 57 07                 a0 = a0 + s0
  2796: 82 1c 70                 a5 = u64 [sp + 0x70]
  2799: 33 02 00 10              t0 = 0x1000
  2803: 53 27 00 f0 1c           jump @168 if a0 <u 4294963200
      :                          @164
  2808: c8 2c 08                 a1 = a5 + t0
  2811: 82 87                    a0 = u64 [a1]
  2813: c9 78 09                 a2 = a1 - a0
  2816: ab 69 0f                 jump @168 if a2 != s1
      :                          @165
  2819: c9 57 09                 a2 = a0 - s0
  2822: 01                       fallthrough
      :                          @166
  2823: 82 8a                    a3 = u64 [a1]
  2825: ab 7a ef                 jump @164 if a3 != a0
      :                          @167
  2828: 7b 89                    u64 [a1] = a2
  2830: 01                       fallthrough
      :                          @168
  2831: 95 18 b0 20              a1 = sp + 0x20b0
  2835: 80 87 50                 a0 = u32 [a1 + 0x50]
  2838: 80 88 54                 a1 = u32 [a1 + 0x54]
  2841: 95 15 08 31              s0 = sp + 0x3108
  2845: 7b 57 10                 u64 [s0 + 0x10] = a0
  2848: 7b 58 18                 u64 [s0 + 0x18] = a1
  2851: 33 09 01                 a2 = 0x1
  2854: 0a 17                    ecalli 23 // 'zero'
  2856: 7b 57 48 02              u64 [s0 + 0x248] = a0
  2860: 95 17 18 31              a0 = sp + 0x3118
  2864: 7b 57 48 01              u64 [s0 + 0x148] = a0
  2868: 82 17 78                 a0 = u64 [sp + 0x78]
  2871: 7b 57 50 01              u64 [s0 + 0x150] = a0
  2875: 95 18 20 31              a1 = sp + 0x3120
  2879: 7b 58 58 01              u64 [s0 + 0x158] = a1
  2883: 7b 57 60 01              u64 [s0 + 0x160] = a0
  2887: 95 18 50 33              a1 = sp + 0x3350
  2891: 7b 58 68 01              u64 [s0 + 0x168] = a1
  2895: 7b 57 70 01              u64 [s0 + 0x170] = a0
  2899: 82 17 50                 a0 = u64 [sp + 0x50]
  2902: 7b 57 90 00              u64 [s0 + 0x90] = a0
  2906: 49 25 98 00 03           u64 [s0 + 152] = 0x3
  2911: 49 25 b0 00              u64 [s0 + 176] = 0
  2915: 95 17 50 32              a0 = sp + 0x3250
  2919: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  2923: 49 25 a8 00 03           u64 [s0 + 168] = 0x3
  2928: 95 17 30 31              a0 = sp + 0x3130
  2932: 95 18 98 31              a1 = sp + 0x3198
  2936: 50 10 52 ae 28           ra = 82, jump @721
      :                          @169 [@dyn 41]
  2941: 82 56 30                 s1 = u64 [s0 + 0x30]
  2944: 82 5b 38                 a4 = u64 [s0 + 0x38]
  2947: 82 55 28                 s0 = u64 [s0 + 0x28]
  2950: 33 07 02                 a0 = 0x2
  2953: 33 08                    a1 = 0
  2955: 33 09                    a2 = 0
  2957: 64 6a                    a3 = s1
  2959: 33 00 54                 ra = 0x54
  2962: 0a 64                    ecalli 100 // 'log'
  2964: 01                       fallthrough
      :                          @170 [@dyn 42]
  2965: 33 02 00 10              t0 = 0x1000
  2969: 82 1c 70                 a5 = u64 [sp + 0x70]
  2972: 82 17 80 00              a0 = u64 [sp + 0x80]
  2976: c8 57 07                 a0 = a0 + s0
  2979: 53 27 00 f0 1c           jump @175 if a0 <u 4294963200
      :                          @171
  2984: c8 2c 08                 a1 = a5 + t0
  2987: 82 87                    a0 = u64 [a1]
  2989: c9 78 09                 a2 = a1 - a0
  2992: ab 69 0f                 jump @175 if a2 != s1
      :                          @172
  2995: c9 57 09                 a2 = a0 - s0
  2998: 01                       fallthrough
      :                          @173
  2999: 82 8a                    a3 = u64 [a1]
  3001: ab 7a ef                 jump @171 if a3 != a0
      :                          @174
  3004: 7b 89                    u64 [a1] = a2
  3006: 01                       fallthrough
      :                          @175
  3007: 95 15 08 31              s0 = sp + 0x3108
  3011: 82 59 18                 a2 = u64 [s0 + 0x18]
  3014: 82 57 10                 a0 = u64 [s0 + 0x10]
  3017: 95 18 00 21              a1 = sp + 0x2100
  3021: 7b 58 68 02              u64 [s0 + 0x268] = a1
  3025: 97 99 0c                 a2 = a2 << 0xc
  3028: 7b 59 78 02              u64 [s0 + 0x278] = a2
  3032: 33 0a 00 10              a3 = 0x1000
  3036: 95 18 08 21              a1 = sp + 0x2108
  3040: 0a 16                    ecalli 22 // 'poke'
  3042: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3046: 95 17 18 31              a0 = sp + 0x3118
  3050: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3054: 82 17 78                 a0 = u64 [sp + 0x78]
  3057: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3061: 95 18 70 33              a1 = sp + 0x3370
  3065: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3069: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3073: 95 18 80 33              a1 = sp + 0x3380
  3077: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3081: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3085: 82 18 58                 a1 = u64 [sp + 0x58]
  3088: 7b 58 78 01              u64 [s0 + 0x178] = a1
  3092: 7b 57 80 01              u64 [s0 + 0x180] = a0
  3096: 95 18 10 32              a1 = sp + 0x3210
  3100: 7b 58 88 01              u64 [s0 + 0x188] = a1
  3104: 7b 57 90 01              u64 [s0 + 0x190] = a0
  3108: 82 17 48                 a0 = u64 [sp + 0x48]
  3111: 7b 57 90 00              u64 [s0 + 0x90] = a0
  3115: 49 25 98 00 05           u64 [s0 + 152] = 0x5
  3120: 49 25 b0 00              u64 [s0 + 176] = 0
  3124: 95 17 50 32              a0 = sp + 0x3250
  3128: 7b 57 a0 00              u64 [s0 + 0xa0] = a0
  3132: 49 25 a8 00 05           u64 [s0 + 168] = 0x5
  3137: 95 17 30 31              a0 = sp + 0x3130
  3141: 95 18 98 31              a1 = sp + 0x3198
  3145: 50 10 56 dd 27           ra = 86, jump @721
      :                          @176 [@dyn 43]
  3150: 82 56 30                 s1 = u64 [s0 + 0x30]
  3153: 82 5b 38                 a4 = u64 [s0 + 0x38]
  3156: 82 55 28                 s0 = u64 [s0 + 0x28]
  3159: 33 07 02                 a0 = 0x2
  3162: 33 08                    a1 = 0
  3164: 33 09                    a2 = 0
  3166: 64 6a                    a3 = s1
  3168: 33 00 58                 ra = 0x58
  3171: 0a 64                    ecalli 100 // 'log'
  3173: 01                       fallthrough
      :                          @177 [@dyn 44]
  3174: 33 02 00 10              t0 = 0x1000
  3178: 82 1c 70                 a5 = u64 [sp + 0x70]
  3181: 82 17 80 00              a0 = u64 [sp + 0x80]
  3185: c8 57 07                 a0 = a0 + s0
  3188: 53 27 00 f0 ef fd        jump @159 if a0 <u 4294963200
      :                          @178
  3194: c8 2c 08                 a1 = a5 + t0
  3197: 82 87                    a0 = u64 [a1]
  3199: c9 78 09                 a2 = a1 - a0
  3202: ab 69 e1 fd              jump @159 if a2 != s1
      :                          @179
  3206: c9 57 09                 a2 = a0 - s0
  3209: 01                       fallthrough
      :                          @180
  3210: 82 8a                    a3 = u64 [a1]
  3212: ab 7a ee                 jump @178 if a3 != a0
      :                          @181
  3215: 7b 89                    u64 [a1] = a2
  3217: 33 0b                    a4 = 0
  3219: 01                       fallthrough
      :                          @182
  3220: ab 7a e6                 jump @178 if a3 != a0
      :                          @183
  3223: 28 cc fd                 jump @159
      :                          @184
  3226: 82 69 18                 a2 = u64 [s1 + 0x18]
  3229: 95 9a 01                 a3 = a2 + 0x1
  3232: 82 67 10                 a0 = u64 [s1 + 0x10]
  3235: 33 08 f0 ef 0f           a1 = 0xfeff0
  3240: db 9a 08                 a1 = a3 if a2 != 0
  3243: 7b 68 18                 u64 [s1 + 0x18] = a1
  3246: 33 09 01                 a2 = 0x1
  3249: 0a 17                    ecalli 23 // 'zero'
  3251: 7b 67 20                 u64 [s1 + 0x20] = a0
  3254: 95 17 18 31              a0 = sp + 0x3118
  3258: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3262: 95 17 20 31              a0 = sp + 0x3120
  3266: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3270: 95 17 28 31              a0 = sp + 0x3128
  3274: 7b 67 68 01              u64 [s1 + 0x168] = a0
  3278: 33 07 b8 09 01           a0 = 0x109b8
  3283: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3287: 95 17 50 32              a0 = sp + 0x3250
  3291: 7b 67 a0 00              u64 [s1 + 0xa0] = a0
  3295: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3300: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3305: 82 17 78                 a0 = u64 [sp + 0x78]
  3308: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3312: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3316: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3320: 49 26 b0 00              u64 [s1 + 176] = 0
  3324: 95 17 30 31              a0 = sp + 0x3130
  3328: 95 18 98 31              a1 = sp + 0x3198
  3332: 50 10 5a 22 27           ra = 90, jump @721
      :                          @185 [@dyn 45]
  3337: 82 65 30                 s0 = u64 [s1 + 0x30]
  3340: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3343: 95 17 08 31              a0 = sp + 0x3108
  3347: 82 76 28                 s1 = u64 [a0 + 0x28]
  3350: 33 07 02                 a0 = 0x2
  3353: 33 08                    a1 = 0
  3355: 33 09                    a2 = 0
  3357: 64 5a                    a3 = s0
  3359: 33 00 5c                 ra = 0x5c
  3362: 0a 64                    ecalli 100 // 'log'
  3364: 01                       fallthrough
      :                          @186 [@dyn 46]
  3365: 82 17 80 00              a0 = u64 [sp + 0x80]
  3369: c8 67 07                 a0 = a0 + s1
  3372: 53 27 00 f0 23           jump @192 if a0 <u 4294963200
      :                          @187
  3377: 82 18 70                 a1 = u64 [sp + 0x70]
  3380: 95 87 00 10              a0 = a1 + 0x1000
  3384: 01                       fallthrough
      :                          @188
  3385: 82 78                    a1 = u64 [a0]
  3387: c9 87 09                 a2 = a0 - a1
  3390: ab 59 11                 jump @192 if a2 != s0
      :                          @189
  3393: c9 68 09                 a2 = a1 - s1
  3396: 01                       fallthrough
      :                          @190
  3397: 82 7a                    a3 = u64 [a0]
  3399: ab 8a f2                 jump @188 if a3 != a1
      :                          @191
  3402: 7b 79                    u64 [a0] = a2
  3404: 33 0b                    a4 = 0
  3406: 01                       fallthrough
      :                          @192
  3407: 95 16 08 31              s1 = sp + 0x3108
  3411: 49 16 58                 u64 [s1 + 88] = 0
  3414: 49 16 50                 u64 [s1 + 80] = 0
  3417: 49 16 48                 u64 [s1 + 72] = 0
  3420: 49 16 40                 u64 [s1 + 64] = 0
  3423: 49 16 38                 u64 [s1 + 56] = 0
  3426: 49 16 70                 u64 [s1 + 112] = 0
  3429: 49 16 78                 u64 [s1 + 120] = 0
  3432: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3442: 7b 67 28                 u64 [s1 + 0x28] = a0
  3445: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3455: 7b 67 30                 u64 [s1 + 0x30] = a0
  3458: 82 67                    a0 = u64 [s1]
  3460: 49 26 80 00              u64 [s1 + 128] = 0
  3464: 49 26 88 00              u64 [s1 + 136] = 0
  3468: 49 16 68                 u64 [s1 + 104] = 0
  3471: 7b 67 60                 u64 [s1 + 0x60] = a0
  3474: 95 17 30 31              a0 = sp + 0x3130
  3478: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3482: 33 07 1c                 a0 = 0x1c
  3485: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3489: 33 07 e8 09 01           a0 = 0x109e8
  3494: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3498: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3503: 49 26 68 01              u64 [s1 + 360] = 0
  3507: 95 17 10 32              a0 = sp + 0x3210
  3511: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3515: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3520: 95 17 98 31              a0 = sp + 0x3198
  3524: 95 18 50 32              a1 = sp + 0x3250
  3528: 50 10 5e 5e 26           ra = 94, jump @721
      :                          @193 [@dyn 47]
  3533: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3537: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3541: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3545: 33 07 02                 a0 = 0x2
  3548: 33 08                    a1 = 0
  3550: 33 09                    a2 = 0
  3552: 64 5a                    a3 = s0
  3554: 33 00 60                 ra = 0x60
  3557: 0a 64                    ecalli 100 // 'log'
  3559: 01                       fallthrough
      :                          @194 [@dyn 48]
  3560: 82 17 80 00              a0 = u64 [sp + 0x80]
  3564: c8 67 07                 a0 = a0 + s1
  3567: 82 13 70                 t1 = u64 [sp + 0x70]
  3570: 53 27 00 f0 1e           jump @200 if a0 <u 4294963200
      :                          @195
  3575: 95 37 00 10              a0 = t1 + 0x1000
  3579: 01                       fallthrough
      :                          @196
  3580: 82 78                    a1 = u64 [a0]
  3582: c9 87 09                 a2 = a0 - a1
  3585: ab 59 0f                 jump @200 if a2 != s0
      :                          @197
  3588: c9 68 09                 a2 = a1 - s1
  3591: 01                       fallthrough
      :                          @198
  3592: 82 7a                    a3 = u64 [a0]
  3594: ab 8a f2                 jump @196 if a3 != a1
      :                          @199
  3597: 7b 79                    u64 [a0] = a2
  3599: 01                       fallthrough
      :                          @200
  3600: 95 1c 08 31              a5 = sp + 0x3108
  3604: 82 c7 28                 a0 = u64 [a5 + 0x28]
  3607: 82 c8 30                 a1 = u64 [a5 + 0x30]
  3610: 82 c9 38                 a2 = u64 [a5 + 0x38]
  3613: 82 ca 40                 a3 = u64 [a5 + 0x40]
  3616: 82 cb 48                 a4 = u64 [a5 + 0x48]
  3619: 82 c2 50                 t0 = u64 [a5 + 0x50]
  3622: 82 c6 58                 s1 = u64 [a5 + 0x58]
  3625: 49 2c 90 00 00 00 01     u64 [a5 + 144] = 0x10000
  3632: 82 c5 60                 s0 = u64 [a5 + 0x60]
  3635: 7b c7 98 00              u64 [a5 + 0x98] = a0
  3639: 82 c7 68                 a0 = u64 [a5 + 0x68]
  3642: 7b c8 a0 00              u64 [a5 + 0xa0] = a1
  3646: 82 c8 70                 a1 = u64 [a5 + 0x70]
  3649: 7b c9 a8 00              u64 [a5 + 0xa8] = a2
  3653: 82 c9 78                 a2 = u64 [a5 + 0x78]
  3656: 7b ca b0 00              u64 [a5 + 0xb0] = a3
  3660: 82 ca 80 00              a3 = u64 [a5 + 0x80]
  3664: 7b cb b8 00              u64 [a5 + 0xb8] = a4
  3668: 82 cb 88 00              a4 = u64 [a5 + 0x88]
  3672: 7b c2 c0 00              u64 [a5 + 0xc0] = t0
  3676: 7b c6 c8 00              u64 [a5 + 0xc8] = s1
  3680: 95 16 08 31              s1 = sp + 0x3108
  3684: 7b 65 d0 00              u64 [s1 + 0xd0] = s0
  3688: 7b 67 d8 00              u64 [s1 + 0xd8] = a0
  3692: 7b 68 e0 00              u64 [s1 + 0xe0] = a1
  3696: 7b 69 e8 00              u64 [s1 + 0xe8] = a2
  3700: 7b 6a f0 00              u64 [s1 + 0xf0] = a3
  3704: 7b 6b f8 00              u64 [s1 + 0xf8] = a4
  3708: 33 07 f8 09 01           a0 = 0x109f8
  3713: 7b 17 60                 u64 [sp + 0x60] = a0
  3716: 95 37 00 10              a0 = t1 + 0x1000
  3720: 7b 17 50                 u64 [sp + 0x50] = a0
  3723: 01                       fallthrough
      :                          @201
  3724: 95 17 b0 20              a0 = sp + 0x20b0
  3728: 82 77 48                 a0 = u64 [a0 + 0x48]
  3731: 95 18 98 31              a1 = sp + 0x3198
  3735: 0a 19                    ecalli 25 // 'invoke'
  3737: 7b 18 68                 u64 [sp + 0x68] = a1
  3740: 7b 67 00 01              u64 [s1 + 0x100] = a0
  3744: 95 17 f8 20              a0 = sp + 0x20f8
  3748: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3752: 82 17 78                 a0 = u64 [sp + 0x78]
  3755: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3759: 95 18 08 32              a1 = sp + 0x3208
  3763: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3767: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3771: 95 18 f0 20              a1 = sp + 0x20f0
  3775: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3779: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3783: 82 17 60                 a0 = u64 [sp + 0x60]
  3786: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3790: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  3795: 49 26 28 01              u64 [s1 + 296] = 0
  3799: 95 17 50 32              a0 = sp + 0x3250
  3803: 7b 67 18 01              u64 [s1 + 0x118] = a0
  3807: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  3812: 95 17 80 33              a0 = sp + 0x3380
  3816: 95 18 10 32              a1 = sp + 0x3210
  3820: 50 10 62 3a 25           ra = 98, jump @721
      :                          @202 [@dyn 49]
  3825: 82 65 80 02              s0 = u64 [s1 + 0x280]
  3829: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  3833: 95 17 08 31              a0 = sp + 0x3108
  3837: 82 76 78 02              s1 = u64 [a0 + 0x278]
  3841: 33 07 02                 a0 = 0x2
  3844: 33 08                    a1 = 0
  3846: 33 09                    a2 = 0
  3848: 64 5a                    a3 = s0
  3850: 33 00 64                 ra = 0x64
  3853: 0a 64                    ecalli 100 // 'log'
  3855: 01                       fallthrough
      :                          @203 [@dyn 50]
  3856: 82 17 80 00              a0 = u64 [sp + 0x80]
  3860: c8 67 07                 a0 = a0 + s1
  3863: 82 1b 50                 a4 = u64 [sp + 0x50]
  3866: 53 27 00 f0 19           jump @208 if a0 <u 4294963200
      :                          @204
  3871: 82 b7                    a0 = u64 [a4]
  3873: c9 7b 08                 a1 = a4 - a0
  3876: ab 58 0f                 jump @208 if a1 != s0
      :                          @205
  3879: c9 67 08                 a1 = a0 - s1
  3882: 01                       fallthrough
      :                          @206
  3883: 82 b9                    a2 = u64 [a4]
  3885: ab 79 f2                 jump @204 if a2 != a0
      :                          @207
  3888: 7b b8                    u64 [a4] = a1
  3890: 01                       fallthrough
      :                          @208
  3891: 95 16 08 31              s1 = sp + 0x3108
  3895: 82 67 00 01              a0 = u64 [s1 + 0x100]
  3899: 51 07 ae 00              jump @213 if a0 == 0
      :                          @209
  3903: 85 77 03                 a0 = a0 ^ 0x3
  3906: 82 18 68                 a1 = u64 [sp + 0x68]
  3909: 85 88 64                 a1 = a1 ^ 0x64
  3912: d4 87 07                 a0 = a0 | a1
  3915: 52 07 41 ff              jump @201 if a0 != 0
      :                          @210
  3919: 95 17 30 31              a0 = sp + 0x3130
  3923: 33 09 68                 a2 = 0x68
  3926: 95 18 a0 31              a1 = sp + 0x31a0
  3930: 50 10 66 41 27           ra = 102, jump @771
      :                          @211 [@dyn 51]
  3935: 82 67 60                 a0 = u64 [s1 + 0x60]
  3938: 7b 17 68                 u64 [sp + 0x68] = a0
  3941: 82 67 68                 a0 = u64 [s1 + 0x68]
  3944: 7b 17 38                 u64 [sp + 0x38] = a0
  3947: 82 65 70                 s0 = u64 [s1 + 0x70]
  3950: 7b 15 30                 u64 [sp + 0x30] = s0
  3953: 82 67 78                 a0 = u64 [s1 + 0x78]
  3956: 7b 17 48                 u64 [sp + 0x48] = a0
  3959: 82 67 80 00              a0 = u64 [s1 + 0x80]
  3963: 7b 17 40                 u64 [sp + 0x40] = a0
  3966: 49 26 40 01              u64 [s1 + 320] = 0
  3970: 49 26 38 01              u64 [s1 + 312] = 0
  3974: 49 26 30 01              u64 [s1 + 304] = 0
  3978: 49 26 28 01              u64 [s1 + 296] = 0
  3982: 49 26 20 01              u64 [s1 + 288] = 0
  3986: 49 26 18 01              u64 [s1 + 280] = 0
  3990: 49 26 10 01              u64 [s1 + 272] = 0
  3994: 49 26 08 01              u64 [s1 + 264] = 0
  3998: 95 17 50 32              a0 = sp + 0x3250
  4002: 33 09 00 01              a2 = 0x100
  4006: 33 08                    a1 = 0
  4008: 50 10 68 a5 27           ra = 104, jump @789
      :                          @212 [@dyn 52]
  4013: 95 17 b0 20              a0 = sp + 0x20b0
  4017: 82 77 48                 a0 = u64 [a0 + 0x48]
  4020: 95 18 10 32              a1 = sp + 0x3210
  4024: 82 19 38                 a2 = u64 [sp + 0x38]
  4027: 64 5a                    a3 = s0
  4029: 0a 15                    ecalli 21 // 'peek'
  4031: 95 17 b0 20              a0 = sp + 0x20b0
  4035: 82 77 48                 a0 = u64 [a0 + 0x48]
  4038: 95 18 50 32              a1 = sp + 0x3250
  4042: 82 19 48                 a2 = u64 [sp + 0x48]
  4045: 82 15 40                 s0 = u64 [sp + 0x40]
  4048: 64 5a                    a3 = s0
  4050: 0a 15                    ecalli 21 // 'peek'
  4052: 95 18 10 32              a1 = sp + 0x3210
  4056: 95 1a 50 32              a3 = sp + 0x3250
  4060: 82 17 68                 a0 = u64 [sp + 0x68]
  4063: 82 19 30                 a2 = u64 [sp + 0x30]
  4066: 64 5b                    a4 = s0
  4068: 0a 64                    ecalli 100 // 'log'
  4070: 28 a6 fe                 jump @201
      :                          @213
  4073: 0a                       ecalli 0 // 'gas'
  4074: 95 18 b0 20              a1 = sp + 0x20b0
  4078: 7b 87 40                 u64 [a1 + 0x40] = a0
  4081: 95 17 f0 20              a0 = sp + 0x20f0
  4085: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4089: 82 17 28                 a0 = u64 [sp + 0x28]
  4092: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4096: 95 17 80 33              a0 = sp + 0x3380
  4100: 7b 67 58 01              u64 [s1 + 0x158] = a0
  4104: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4109: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4114: 82 17 78                 a0 = u64 [sp + 0x78]
  4117: 7b 67 80 02              u64 [s1 + 0x280] = a0
  4121: 49 26 68 01              u64 [s1 + 360] = 0
  4125: 95 17 10 32              a0 = sp + 0x3210
  4129: 95 18 50 32              a1 = sp + 0x3250
  4133: 50 10 6a 01 24           ra = 106, jump @721
      :                          @214 [@dyn 53]
  4138: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4142: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4146: 95 17 08 31              a0 = sp + 0x3108
  4150: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4154: 33 07 02                 a0 = 0x2
  4157: 33 08                    a1 = 0
  4159: 33 09                    a2 = 0
  4161: 64 5a                    a3 = s0
  4163: 33 00 6c                 ra = 0x6c
  4166: 0a 64                    ecalli 100 // 'log'
  4168: 01                       fallthrough
      :                          @215 [@dyn 54]
  4169: 82 17 80 00              a0 = u64 [sp + 0x80]
  4173: c8 67 07                 a0 = a0 + s1
  4176: 53 27 00 f0 23           jump @221 if a0 <u 4294963200
      :                          @216
  4181: 82 18 70                 a1 = u64 [sp + 0x70]
  4184: 95 87 00 10              a0 = a1 + 0x1000
  4188: 01                       fallthrough
      :                          @217
  4189: 82 78                    a1 = u64 [a0]
  4191: c9 87 09                 a2 = a0 - a1
  4194: ab 59 11                 jump @221 if a2 != s0
      :                          @218
  4197: c9 68 09                 a2 = a1 - s1
  4200: 01                       fallthrough
      :                          @219
  4201: 82 7a                    a3 = u64 [a0]
  4203: ab 8a f2                 jump @217 if a3 != a1
      :                          @220
  4206: 7b 79                    u64 [a0] = a2
  4208: 33 0b                    a4 = 0
  4210: 01                       fallthrough
      :                          @221
  4211: 95 16 08 31              s1 = sp + 0x3108
  4215: 48 26 50 02              u32 [s1 + 592] = 0
  4219: 49 26 48 02              u64 [s1 + 584] = 0
  4223: 82 69                    a2 = u64 [s1]
  4225: 33 08 14                 a1 = 0x14
  4228: 7b 18 48                 u64 [sp + 0x48] = a1
  4231: 33 08 48 00 01           a1 = 0x10048
  4236: 7b 18 50                 u64 [sp + 0x50] = a1
  4239: 33 08 12                 a1 = 0x12
  4242: 7b 18 60                 u64 [sp + 0x60] = a1
  4245: 7b 19 40                 u64 [sp + 0x40] = a2
  4248: 51 19 ff e8 02           jump @251 if a2 == 4294967295
      :                          @222
  4253: 33 08                    a1 = 0
  4255: 95 19 b0 20              a2 = sp + 0x20b0
  4259: 82 99 48                 a2 = u64 [a2 + 0x48]
  4262: 7b 19 20                 u64 [sp + 0x20] = a2
  4265: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4275: 7b 19 38                 u64 [sp + 0x38] = a2
  4278: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4288: 7b 17 30                 u64 [sp + 0x30] = a0
  4291: 33 07 98 0a 01           a0 = 0x10a98
  4296: 7b 17 28                 u64 [sp + 0x28] = a0
  4299: 49 11 18 f0 ef 0f        u64 [sp + 24] = 0xfeff0
  4305: 33 07 06                 a0 = 0x6
  4308: 7b 17 10                 u64 [sp + 0x10] = a0
  4311: 33 07 e8 0a 01           a0 = 0x10ae8
  4316: 7b 17 08                 u64 [sp + 0x8] = a0
  4319: 28 13                    jump @224
      :                          @223
  4321: 82 19 68                 a2 = u64 [sp + 0x68]
  4324: 95 98 01                 a1 = a2 + 0x1
  4327: 95 16 08 31              s1 = sp + 0x3108
  4331: 82 17 40                 a0 = u64 [sp + 0x40]
  4334: aa 79 92 02              jump @251 if a2 == a0
      :                          @224
  4338: 7b 68 58 02              u64 [s1 + 0x258] = a1
  4342: 7b 18 68                 u64 [sp + 0x68] = a1
  4345: 97 89 0c                 a2 = a1 << 0xc
  4348: 95 17 b0 20              a0 = sp + 0x20b0
  4352: 82 77 48                 a0 = u64 [a0 + 0x48]
  4355: 82 68 08                 a1 = u64 [s1 + 0x8]
  4358: 82 1a 38                 a3 = u64 [sp + 0x38]
  4361: c8 a9 09                 a2 = a2 + a3
  4364: 82 1a 30                 a3 = u64 [sp + 0x30]
  4367: d2 a9 09                 a2 = a2 & a3
  4370: 7b 69 60 02              u64 [s1 + 0x260] = a2
  4374: 33 0a 00 10              a3 = 0x1000
  4378: 0a 15                    ecalli 21 // 'peek'
  4380: 95 17 f8 20              a0 = sp + 0x20f8
  4384: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4388: 82 17 78                 a0 = u64 [sp + 0x78]
  4391: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4395: 95 18 10 31              a1 = sp + 0x3110
  4399: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4403: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4407: 95 18 68 33              a1 = sp + 0x3368
  4411: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4415: 7b 67 70 01              u64 [s1 + 0x170] = a0
  4419: 82 18 58                 a1 = u64 [sp + 0x58]
  4422: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4426: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4430: 95 17 9f 33              a0 = sp + 0x339f
  4434: 7b 67 88 01              u64 [s1 + 0x188] = a0
  4438: 82 17 60                 a0 = u64 [sp + 0x60]
  4441: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4445: 82 17 28                 a0 = u64 [sp + 0x28]
  4448: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4452: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4457: 49 26 28 01              u64 [s1 + 296] = 0
  4461: 95 18 50 32              a1 = sp + 0x3250
  4465: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4469: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4474: 95 17 80 33              a0 = sp + 0x3380
  4478: 95 18 10 32              a1 = sp + 0x3210
  4482: 50 10 6e a4 22           ra = 110, jump @721
      :                          @225 [@dyn 55]
  4487: 82 65 80 02              s0 = u64 [s1 + 0x280]
  4491: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  4495: 95 17 08 31              a0 = sp + 0x3108
  4499: 82 76 78 02              s1 = u64 [a0 + 0x278]
  4503: 33 07 02                 a0 = 0x2
  4506: 33 08                    a1 = 0
  4508: 33 09                    a2 = 0
  4510: 64 5a                    a3 = s0
  4512: 33 00 70                 ra = 0x70
  4515: 0a 64                    ecalli 100 // 'log'
  4517: 01                       fallthrough
      :                          @226 [@dyn 56]
  4518: 82 17 80 00              a0 = u64 [sp + 0x80]
  4522: c8 67 07                 a0 = a0 + s1
  4525: 82 1c 70                 a5 = u64 [sp + 0x70]
  4528: 33 02 00 10              t0 = 0x1000
  4532: 53 27 00 f0 1e           jump @231 if a0 <u 4294963200
      :                          @227
  4537: c8 2c 08                 a1 = a5 + t0
  4540: 82 87                    a0 = u64 [a1]
  4542: c9 78 09                 a2 = a1 - a0
  4545: ab 59 11                 jump @231 if a2 != s0
      :                          @228
  4548: c9 67 09                 a2 = a0 - s1
  4551: 01                       fallthrough
      :                          @229
  4552: 82 8a                    a3 = u64 [a1]
  4554: ab 7a ef                 jump @227 if a3 != a0
      :                          @230
  4557: 7b 89                    u64 [a1] = a2
  4559: 33 0b                    a4 = 0
  4561: 01                       fallthrough
      :                          @231
  4562: 95 16 08 31              s1 = sp + 0x3108
  4566: 82 67 58 02              a0 = u64 [s1 + 0x258]
  4570: 82 68                    a1 = u64 [s1]
  4572: ab 87 c0 00              jump @240 if a0 != a1
      :                          @232
  4576: 82 18 18                 a1 = u64 [sp + 0x18]
  4579: be 87 07                 i32 a0 = a0 + a1
  4582: 95 18 b0 20              a1 = sp + 0x20b0
  4586: 82 19 20                 a2 = u64 [sp + 0x20]
  4589: 7a 89 50                 u32 [a1 + 0x50] = a2
  4592: 7a 87 54                 u32 [a1 + 0x54] = a0
  4595: 95 17 00 21              a0 = sp + 0x2100
  4599: 7b 67 78 02              u64 [s1 + 0x278] = a0
  4603: 49 26 80 02 08           u64 [s1 + 640] = 0x8
  4608: 95 17 80 33              a0 = sp + 0x3380
  4612: 7b 67 68 02              u64 [s1 + 0x268] = a0
  4616: 82 17 10                 a0 = u64 [sp + 0x10]
  4619: 7b 67 70 02              u64 [s1 + 0x270] = a0
  4623: 82 17 08                 a0 = u64 [sp + 0x8]
  4626: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4630: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  4635: 49 26 68 01              u64 [s1 + 360] = 0
  4639: 95 18 70 33              a1 = sp + 0x3370
  4643: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4647: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  4652: 95 17 10 32              a0 = sp + 0x3210
  4656: 95 18 50 32              a1 = sp + 0x3250
  4660: 50 10 72 f2 21           ra = 114, jump @721
      :                          @233 [@dyn 57]
  4665: 82 65 10 01              s0 = u64 [s1 + 0x110]
  4669: 82 6b 18 01              a4 = u64 [s1 + 0x118]
  4673: 95 17 08 31              a0 = sp + 0x3108
  4677: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4681: 33 07 02                 a0 = 0x2
  4684: 33 08                    a1 = 0
  4686: 33 09                    a2 = 0
  4688: 64 5a                    a3 = s0
  4690: 33 00 74                 ra = 0x74
  4693: 0a 64                    ecalli 100 // 'log'
  4695: 01                       fallthrough
      :                          @234 [@dyn 58]
  4696: 33 02 00 10              t0 = 0x1000
  4700: 82 1c 70                 a5 = u64 [sp + 0x70]
  4703: 82 17 80 00              a0 = u64 [sp + 0x80]
  4707: c8 67 07                 a0 = a0 + s1
  4710: 53 27 00 f0 1c           jump @239 if a0 <u 4294963200
      :                          @235
  4715: c8 2c 08                 a1 = a5 + t0
  4718: 82 87                    a0 = u64 [a1]
  4720: c9 78 09                 a2 = a1 - a0
  4723: ab 59 0f                 jump @239 if a2 != s0
      :                          @236
  4726: c9 67 09                 a2 = a0 - s1
  4729: 01                       fallthrough
      :                          @237
  4730: 82 8a                    a3 = u64 [a1]
  4732: ab 7a ef                 jump @235 if a3 != a0
      :                          @238
  4735: 7b 89                    u64 [a1] = a2
  4737: 01                       fallthrough
      :                          @239
  4738: 95 16 08 31              s1 = sp + 0x3108
  4742: 82 17 68                 a0 = u64 [sp + 0x68]
  4745: 7a 67 48 02              u32 [s1 + 0x248] = a0
  4749: 95 18 54 33              a1 = sp + 0x3354
  4753: 95 15 b0 20              s0 = sp + 0x20b0
  4757: 81 57 58                 a0 = i32 [s0 + 0x58]
  4760: 7a 87                    u32 [a1] = a0
  4762: 28 16                    jump @242
      :                          @240
  4764: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
  4767: 95 18 58 33              a1 = sp + 0x3358
  4771: 95 15 b0 20              s0 = sp + 0x20b0
  4775: ab 97 09                 jump @242 if a0 != a2
      :                          @241
  4778: 81 57 58                 a0 = i32 [s0 + 0x58]
  4781: 7a 87                    u32 [a1] = a0
  4783: 01                       fallthrough
      :                          @242
  4784: 83 28 08                 i32 a1 = t0 + 0x8
  4787: 95 17 00 21              a0 = sp + 0x2100
  4791: 0a 13                    ecalli 19 // 'export'
  4793: 0a                       ecalli 0 // 'gas'
  4794: 7b 57 40                 u64 [s0 + 0x40] = a0
  4797: 33 07 f8 0a 01           a0 = 0x10af8
  4802: 7b 67 08 01              u64 [s1 + 0x108] = a0
  4806: 95 17 60 33              a0 = sp + 0x3360
  4810: 7b 67 48 01              u64 [s1 + 0x148] = a0
  4814: 82 17 78                 a0 = u64 [sp + 0x78]
  4817: 7b 67 50 01              u64 [s1 + 0x150] = a0
  4821: 82 18 50                 a1 = u64 [sp + 0x50]
  4824: 7b 68 58 01              u64 [s1 + 0x158] = a1
  4828: 7b 67 60 01              u64 [s1 + 0x160] = a0
  4832: 95 18 9f 33              a1 = sp + 0x339f
  4836: 7b 68 68 01              u64 [s1 + 0x168] = a1
  4840: 82 18 60                 a1 = u64 [sp + 0x60]
  4843: 7b 68 70 01              u64 [s1 + 0x170] = a1
  4847: 95 18 f0 20              a1 = sp + 0x20f0
  4851: 7b 68 78 01              u64 [s1 + 0x178] = a1
  4855: 7b 67 80 01              u64 [s1 + 0x180] = a0
  4859: 95 17 50 33              a0 = sp + 0x3350
  4863: 7b 67 88 01              u64 [s1 + 0x188] = a0
  4867: 82 17 48                 a0 = u64 [sp + 0x48]
  4870: 7b 67 90 01              u64 [s1 + 0x190] = a0
  4874: 49 26 10 01 05           u64 [s1 + 272] = 0x5
  4879: 49 26 28 01              u64 [s1 + 296] = 0
  4883: 95 18 50 32              a1 = sp + 0x3250
  4887: 7b 68 18 01              u64 [s1 + 0x118] = a1
  4891: 49 26 20 01 05           u64 [s1 + 288] = 0x5
  4896: 95 17 80 33              a0 = sp + 0x3380
  4900: 95 18 10 32              a1 = sp + 0x3210
  4904: 50 10 76 fe 20           ra = 118, jump @721
      :                          @243 [@dyn 59]
  4909: 82 65 80 02              s0 = u64 [s1 + 0x280]
  4913: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  4917: 95 17 08 31              a0 = sp + 0x3108
  4921: 82 76 78 02              s1 = u64 [a0 + 0x278]
  4925: 33 07 02                 a0 = 0x2
  4928: 33 08                    a1 = 0
  4930: 33 09                    a2 = 0
  4932: 64 5a                    a3 = s0
  4934: 33 00 78                 ra = 0x78
  4937: 0a 64                    ecalli 100 // 'log'
  4939: 01                       fallthrough
      :                          @244 [@dyn 60]
  4940: 33 02 00 10              t0 = 0x1000
  4944: 82 17 80 00              a0 = u64 [sp + 0x80]
  4948: c8 67 07                 a0 = a0 + s1
  4951: 82 1c 70                 a5 = u64 [sp + 0x70]
  4954: 53 27 00 f0 87 fd        jump @223 if a0 <u 4294963200
      :                          @245
  4960: c8 2c 08                 a1 = a5 + t0
  4963: 82 87                    a0 = u64 [a1]
  4965: c9 78 09                 a2 = a1 - a0
  4968: ab 59 79 fd              jump @223 if a2 != s0
      :                          @246
  4972: c9 67 09                 a2 = a0 - s1
  4975: 01                       fallthrough
      :                          @247
  4976: 82 8a                    a3 = u64 [a1]
  4978: ab 7a ee                 jump @245 if a3 != a0
      :                          @248
  4981: 7b 89                    u64 [a1] = a2
  4983: 33 0b                    a4 = 0
  4985: 01                       fallthrough
      :                          @249
  4986: ab 7a e6                 jump @245 if a3 != a0
      :                          @250
  4989: 28 64 fd                 jump @223
      :                          @251
  4992: 95 17 54 33              a0 = sp + 0x3354
  4996: 95 18 58 33              a1 = sp + 0x3358
  5000: 95 19 50 33              a2 = sp + 0x3350
  5004: 7b 69 48 01              u64 [s1 + 0x148] = a2
  5008: 82 19 48                 a2 = u64 [sp + 0x48]
  5011: 7b 69 50 01              u64 [s1 + 0x150] = a2
  5015: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5019: 7b 69 60 01              u64 [s1 + 0x160] = a2
  5023: 7b 68 68 01              u64 [s1 + 0x168] = a1
  5027: 7b 69 70 01              u64 [s1 + 0x170] = a2
  5031: 33 07 28 0a 01           a0 = 0x10a28
  5036: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5040: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5045: 49 26 28 01              u64 [s1 + 296] = 0
  5049: 95 18 50 32              a1 = sp + 0x3250
  5053: 7b 68 18 01              u64 [s1 + 0x118] = a1
  5057: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5062: 95 17 80 33              a0 = sp + 0x3380
  5066: 95 18 10 32              a1 = sp + 0x3210
  5070: 50 10 7a 58 20           ra = 122, jump @721
      :                          @252 [@dyn 61]
  5075: 82 65 80 02              s0 = u64 [s1 + 0x280]
  5079: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  5083: 95 17 08 31              a0 = sp + 0x3108
  5087: 82 76 78 02              s1 = u64 [a0 + 0x278]
  5091: 33 07 02                 a0 = 0x2
  5094: 33 08                    a1 = 0
  5096: 33 09                    a2 = 0
  5098: 64 5a                    a3 = s0
  5100: 33 00 7c                 ra = 0x7c
  5103: 0a 64                    ecalli 100 // 'log'
  5105: 01                       fallthrough
      :                          @253 [@dyn 62]
  5106: 82 17 80 00              a0 = u64 [sp + 0x80]
  5110: c8 67 07                 a0 = a0 + s1
  5113: 53 27 00 f0 21           jump @259 if a0 <u 4294963200
      :                          @254
  5118: 82 18 70                 a1 = u64 [sp + 0x70]
  5121: 95 87 00 10              a0 = a1 + 0x1000
  5125: 01                       fallthrough
      :                          @255
  5126: 82 78                    a1 = u64 [a0]
  5128: c9 87 09                 a2 = a0 - a1
  5131: ab 59 0f                 jump @259 if a2 != s0
      :                          @256
  5134: c9 68 09                 a2 = a1 - s1
  5137: 01                       fallthrough
      :                          @257
  5138: 82 7a                    a3 = u64 [a0]
  5140: ab 8a f2                 jump @255 if a3 != a1
      :                          @258
  5143: 7b 79                    u64 [a0] = a2
  5145: 01                       fallthrough
      :                          @259
  5146: 95 15 b0 20              s0 = sp + 0x20b0
  5150: 82 57 48                 a0 = u64 [s0 + 0x48]
  5153: 0a 1a                    ecalli 26 // 'expunge'
  5155: 0a                       ecalli 0 // 'gas'
  5156: 7b 57 40                 u64 [s0 + 0x40] = a0
  5159: 95 17 f8 20              a0 = sp + 0x20f8
  5163: 95 16 08 31              s1 = sp + 0x3108
  5167: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5171: 82 17 50                 a0 = u64 [sp + 0x50]
  5174: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5178: 95 17 9f 33              a0 = sp + 0x339f
  5182: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5186: 82 17 60                 a0 = u64 [sp + 0x60]
  5189: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5193: 95 17 f0 20              a0 = sp + 0x20f0
  5197: 7b 67 78 01              u64 [s1 + 0x178] = a0
  5201: 82 17 78                 a0 = u64 [sp + 0x78]
  5204: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5208: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5212: 7b 67 80 01              u64 [s1 + 0x180] = a0
  5216: 33 07 58 0a 01           a0 = 0x10a58
  5221: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5225: 95 17 50 32              a0 = sp + 0x3250
  5229: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5233: 49 26 10 01 04           u64 [s1 + 272] = 0x4
  5238: 49 26 20 01 04           u64 [s1 + 288] = 0x4
  5243: 49 26 28 01              u64 [s1 + 296] = 0
  5247: 95 17 80 33              a0 = sp + 0x3380
  5251: 95 18 10 32              a1 = sp + 0x3210
  5255: 50 10 7e 9f 1f           ra = 126, jump @721
      :                          @260 [@dyn 63]
  5260: 82 65 80 02              s0 = u64 [s1 + 0x280]
  5264: 82 6b 88 02              a4 = u64 [s1 + 0x288]
  5268: 82 66 78 02              s1 = u64 [s1 + 0x278]
  5272: 33 07 02                 a0 = 0x2
  5275: 33 08                    a1 = 0
  5277: 33 09                    a2 = 0
  5279: 64 5a                    a3 = s0
  5281: 33 00 80 00              ra = 0x80
  5285: 0a 64                    ecalli 100 // 'log'
  5287: 01                       fallthrough
      :                          @261 [@dyn 64]
  5288: 82 17 80 00              a0 = u64 [sp + 0x80]
  5292: c8 67 07                 a0 = a0 + s1
  5295: 53 27 00 f0 2c           jump @267 if a0 <u 4294963200
      :                          @262
  5300: 82 18 70                 a1 = u64 [sp + 0x70]
  5303: 95 87 00 10              a0 = a1 + 0x1000
  5307: 01                       fallthrough
      :                          @263
  5308: 82 78                    a1 = u64 [a0]
  5310: c9 87 09                 a2 = a0 - a1
  5313: ab 59 1a                 jump @267 if a2 != s0
      :                          @264
  5316: c9 68 09                 a2 = a1 - s1
  5319: 01                       fallthrough
      :                          @265
  5320: 82 7a                    a3 = u64 [a0]
  5322: ab 8a f2                 jump @263 if a3 != a1
      :                          @266
  5325: 7b 79                    u64 [a0] = a2
  5327: 33 0b                    a4 = 0
  5329: 95 1a 50 33              a3 = sp + 0x3350
  5333: 33 08 0c                 a1 = 0xc
  5336: 28 21 f1                 jump @107
      :                          @267
  5339: 95 1a 50 33              a3 = sp + 0x3350
  5343: 33 08 0c                 a1 = 0xc
  5346: 28 17 f1                 jump @107
      :                          @268
  5349: 00                       trap
      :                          @269 [export #1: 'accumulate']
  5350: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5354: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5358: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5362: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5366: 95 11 c0 fb              sp = sp + 0xfffffffffffffbc0
  5370: 33 09 08                 a2 = 0x8
  5373: ac 98 0a 01              jump @302 if a1 <u a2
      :                          @270
  5377: 52 07 06                 jump @272 if a0 != 0
      :                          @271
  5380: 28 e3 1c                 jump @659
      :                          @272
  5383: 95 79 04                 a2 = a0 + 0x4
  5386: 52 09 06                 jump @274 if a2 != 0
      :                          @273
  5389: 28 db 1c                 jump @660
      :                          @274
  5392: 7c 79 04                 a2 = u8 [a0 + 0x4]
  5395: 7b 19 40                 u64 [sp + 0x40] = a2
  5398: 7c 79 05                 a2 = u8 [a0 + 0x5]
  5401: 7b 19 28                 u64 [sp + 0x28] = a2
  5404: 7c 79 06                 a2 = u8 [a0 + 0x6]
  5407: 7b 19 38                 u64 [sp + 0x38] = a2
  5410: 7c 79 07                 a2 = u8 [a0 + 0x7]
  5413: 7b 19 30                 u64 [sp + 0x30] = a2
  5416: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5419: 95 75 08                 s0 = a0 + 0x8
  5422: 51 0a 45                 jump @284 if a3 == 0
      :                          @275
  5425: 7d 58                    a1 = i8 [s0]
  5427: 33 06 01                 s1 = 0x1
  5430: 59 08 40                 jump @285 if a1 >=s 0
      :                          @276
  5433: 84 89 ff 00              a2 = a1 & 0xff
  5437: 33 06 02                 s1 = 0x2
  5440: 53 29 c0 00 2d           jump @282 if a2 <u 192
      :                          @277
  5445: 33 06 03                 s1 = 0x3
  5448: 53 29 e0 00 25           jump @282 if a2 <u 224
      :                          @278
  5453: 33 06 04                 s1 = 0x4
  5456: 53 29 f0 00 1d           jump @282 if a2 <u 240
      :                          @279
  5461: 33 06 05                 s1 = 0x5
  5464: 53 29 f8 00 15           jump @282 if a2 <u 248
      :                          @280
  5469: 33 06 06                 s1 = 0x6
  5472: 53 29 fc 00 0d           jump @282 if a2 <u 252
      :                          @281
  5477: 88 98 fe 00              a1 = a2 <u 0xfe
  5481: 9a 86 08                 s1 = 0x8 - a1
  5484: 01                       fallthrough
      :                          @282
  5485: ae 6a 09                 jump @285 if a3 >=u s1
      :                          @283
  5488: 28 97 00                 jump @302
      :                          @284
  5491: 33 06                    s1 = 0
  5493: 01                       fallthrough
      :                          @285
  5494: 7b 16 48                 u64 [sp + 0x48] = s1
  5497: 64 57                    a0 = s0
  5499: 64 68                    a1 = s1
  5501: 64 a6                    s1 = a3
  5503: 50 20 82 00 43 2f        ra = 130, jump @1048
      :                          @286 [@dyn 65]
  5509: 82 1a 48                 a3 = u64 [sp + 0x48]
  5512: 51 07 7f                 jump @302 if a0 == 0
      :                          @287
  5515: e4 a6 07                 a0 = maxu(s1, a3)
  5518: c9 a7 07                 a0 = a0 - a3
  5521: 53 17 60 76              jump @302 if a0 <u 96
      :                          @288
  5525: c8 5a 08                 a1 = a3 + s0
  5528: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5531: 95 87 60                 a0 = a1 + 0x60
  5534: 7b 17 48                 u64 [sp + 0x48] = a0
  5537: 51 06 4f                 jump @300 if s1 == 0
      :                          @289
  5540: 7d 78                    a1 = i8 [a0]
  5542: 33 05 01                 s0 = 0x1
  5545: 59 08 37                 jump @296 if a1 >=s 0
      :                          @290
  5548: 84 89 ff 00              a2 = a1 & 0xff
  5552: 33 05 02                 s0 = 0x2
  5555: 53 29 c0 00 2d           jump @296 if a2 <u 192
      :                          @291
  5560: 33 05 03                 s0 = 0x3
  5563: 53 29 e0 00 25           jump @296 if a2 <u 224
      :                          @292
  5568: 33 05 04                 s0 = 0x4
  5571: 53 29 f0 00 1d           jump @296 if a2 <u 240
      :                          @293
  5576: 33 05 05                 s0 = 0x5
  5579: 53 29 f8 00 15           jump @296 if a2 <u 248
      :                          @294
  5584: 33 05 06                 s0 = 0x6
  5587: 53 29 fc 00 0d           jump @296 if a2 <u 252
      :                          @295
  5592: 88 98 fe 00              a1 = a2 <u 0xfe
  5596: 9a 85 08                 s0 = 0x8 - a1
  5599: 01                       fallthrough
      :                          @296
  5600: ae 56 06                 jump @298 if s1 >=u s0
      :                          @297
  5603: 28 06 1c                 jump @661
      :                          @298
  5606: 64 58                    a1 = s0
  5608: 50 20 84 00 da 2e        ra = 132, jump @1048
      :                          @299 [@dyn 66]
  5614: 28 07                    jump @301
      :                          @300
  5616: 33 05                    s0 = 0
  5618: 33 07                    a0 = 0
  5620: 01                       fallthrough
      :                          @301
  5621: e4 56 08                 a1 = maxu(s1, s0)
  5624: c9 58 08                 a1 = a1 - s0
  5627: e4 78 08                 a1 = maxu(a1, a0)
  5630: c9 78 08                 a1 = a1 - a0
  5633: 33 09 21                 a2 = 0x21
  5636: ae 98 23                 jump @304 if a1 >=u a2
      :                          @302
  5639: 33 08                    a1 = 0
  5641: 33 05 00 00 01           s0 = 0x10000
  5646: 01                       fallthrough
      :                          @303
  5647: 64 57                    a0 = s0
  5649: 95 11 40 04              sp = sp + 0x440
  5653: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  5657: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  5661: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  5665: 95 11 f8 07              sp = sp + 0x7f8
  5669: 32 00                    ret
      :                          @304
  5671: 82 19 48                 a2 = u64 [sp + 0x48]
  5674: c8 95 05                 s0 = s0 + a2
  5677: c8 57 07                 a0 = a0 + s0
  5680: 7c 79 20                 a2 = u8 [a0 + 0x20]
  5683: 51 09 0a                 jump @306 if a2 == 0
      :                          @305
  5686: 33 06                    s1 = 0
  5688: 33 0a                    a3 = 0
  5690: 28 86 00                 jump @321
      :                          @306
  5693: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
  5696: 95 75 21                 s0 = a0 + 0x21
  5699: 51 0a 57                 jump @318 if a3 == 0
      :                          @307
  5702: 7d 57                    a0 = i8 [s0]
  5704: 33 06 01                 s1 = 0x1
  5707: 59 07 37                 jump @314 if a0 >=s 0
      :                          @308
  5710: 84 77 ff 00              a0 = a0 & 0xff
  5714: 33 06 02                 s1 = 0x2
  5717: 53 27 c0 00 2d           jump @314 if a0 <u 192
      :                          @309
  5722: 33 06 03                 s1 = 0x3
  5725: 53 27 e0 00 25           jump @314 if a0 <u 224
      :                          @310
  5730: 33 06 04                 s1 = 0x4
  5733: 53 27 f0 00 1d           jump @314 if a0 <u 240
      :                          @311
  5738: 33 06 05                 s1 = 0x5
  5741: 53 27 f8 00 15           jump @314 if a0 <u 248
      :                          @312
  5746: 33 06 06                 s1 = 0x6
  5749: 53 27 fc 00 0d           jump @314 if a0 <u 252
      :                          @313
  5754: 88 77 fe 00              a0 = a0 <u 0xfe
  5758: 9a 76 08                 s1 = 0x8 - a0
  5761: 01                       fallthrough
      :                          @314
  5762: 7b 1a 48                 u64 [sp + 0x48] = a3
  5765: ae 6a 06                 jump @316 if a3 >=u s1
      :                          @315
  5768: 28 63 1b                 jump @663
      :                          @316
  5771: 64 57                    a0 = s0
  5773: 64 68                    a1 = s1
  5775: 50 20 86 00 33 2e        ra = 134, jump @1048
      :                          @317 [@dyn 67]
  5781: 82 1a 48                 a3 = u64 [sp + 0x48]
  5784: 28 07                    jump @319
      :                          @318
  5786: 33 06                    s1 = 0
  5788: 33 07                    a0 = 0
  5790: 01                       fallthrough
      :                          @319
  5791: e4 6a 08                 a1 = maxu(a3, s1)
  5794: c9 68 08                 a1 = a1 - s1
  5797: e6 78 0a                 a3 = minu(a1, a0)
  5800: c8 56 06                 s1 = s1 + s0
  5803: 52 1a 24 15              jump @321 if a3 != 36
      :                          @320
  5807: 80 68 20                 a1 = u32 [s1 + 0x20]
  5810: 64 67                    a0 = s1
  5812: 0a 0e                    ecalli 14 // 'solicit'
  5814: 33 08                    a1 = 0
  5816: 33 05 00 00 01           s0 = 0x10000
  5821: 28 52 ff                 jump @303
      :                          @321
  5824: 82 17 28                 a0 = u64 [sp + 0x28]
  5827: 97 77 08                 a0 = a0 << 0x8
  5830: 82 18 40                 a1 = u64 [sp + 0x40]
  5833: d4 87 07                 a0 = a0 | a1
  5836: 82 18 38                 a1 = u64 [sp + 0x38]
  5839: 97 88 10                 a1 = a1 << 0x10
  5842: 82 19 30                 a2 = u64 [sp + 0x30]
  5845: 97 99 18                 a2 = a2 << 0x18
  5848: d4 98 08                 a1 = a1 | a2
  5851: d4 87 07                 a0 = a0 | a1
  5854: 7b 17 38                 u64 [sp + 0x38] = a0
  5857: 46 11 51                 u8 [sp + 81] = 0
  5860: 81 65                    s0 = i32 [s1]
  5862: 95 17 51                 a0 = sp + 0x51
  5865: 33 08 01                 a1 = 0x1
  5868: 7b 16 18                 u64 [sp + 0x18] = s1
  5871: 64 69                    a2 = s1
  5873: 7b 1a 20                 u64 [sp + 0x20] = a3
  5876: 0a 03                    ecalli 3 // 'write'
  5878: 46 11 52 6a              u8 [sp + 82] = 0x6a
  5882: 46 11 53 61              u8 [sp + 83] = 0x61
  5886: 46 11 54 6d              u8 [sp + 84] = 0x6d
  5890: 46 11 55 44              u8 [sp + 85] = 0x44
  5894: 46 11 56 4f              u8 [sp + 86] = 0x4f
  5898: 46 11 57 54              u8 [sp + 87] = 0x54
  5902: 46 11 58 6a              u8 [sp + 88] = 0x6a
  5906: 46 11 59 0d              u8 [sp + 89] = 0xd
  5910: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  5914: 46 11 5b 19              u8 [sp + 91] = 0x19
  5918: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  5923: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  5928: 46 11 5e 50              u8 [sp + 94] = 0x50
  5932: 46 11 5f 57              u8 [sp + 95] = 0x57
  5936: 46 11 60 13              u8 [sp + 96] = 0x13
  5940: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  5945: 46 11 62 65              u8 [sp + 98] = 0x65
  5949: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  5954: 46 11 64 31              u8 [sp + 100] = 0x31
  5958: 46 11 65 03              u8 [sp + 101] = 0x3
  5962: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  5967: 46 11 67 73              u8 [sp + 103] = 0x73
  5971: 33 0b f1 00              a4 = 0xf1
  5975: 78 1b 68                 u8 [sp + 0x68] = a4
  5978: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  5983: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  5988: 46 11 6b 64              u8 [sp + 107] = 0x64
  5992: 46 11 6c 56              u8 [sp + 108] = 0x56
  5996: 46 11 6d 32              u8 [sp + 109] = 0x32
  6000: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6005: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6010: 46 11 70 50              u8 [sp + 112] = 0x50
  6014: 33 0c 3c                 a5 = 0x3c
  6017: 78 1c 71                 u8 [sp + 0x71] = a5
  6020: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6024: 46 11 73 0c              u8 [sp + 115] = 0xc
  6028: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6032: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6036: 46 11 76 19              u8 [sp + 118] = 0x19
  6040: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6045: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6050: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6055: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6060: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6064: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6069: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6074: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6079: 46 11 7f 47              u8 [sp + 127] = 0x47
  6083: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6089: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6094: 78 1c 82 00              u8 [sp + 0x82] = a5
  6098: 78 1b 83 00              u8 [sp + 0x83] = a4
  6102: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6108: 95 16 ff 07              s1 = sp + 0x7ff
  6112: 95 66 99 03              s1 = s1 + 0x399
  6116: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6121: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6126: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6132: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6138: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6144: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6150: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6156: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6162: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6167: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6172: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6177: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6183: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6189: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6194: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6199: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6205: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6211: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6216: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6221: 49 11 48 ff ef           u64 [sp + 72] = 0xffffffffffffefff
  6226: 95 17 98 00              a0 = sp + 0x98
  6230: 33 09 00 01              a2 = 0x100
  6234: 33 08                    a1 = 0
  6236: 50 20 88 00 f1 1e        ra = 136, jump @789
      :                          @322 [@dyn 68]
  6242: 7b 15 28                 u64 [sp + 0x28] = s0
  6245: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
  6248: 33 05 48 00 01           s0 = 0x10048
  6253: 33 09 18                 a2 = 0x18
  6256: 7b 19 40                 u64 [sp + 0x40] = a2
  6259: 54 17 09 07              jump @324 if a0 <=u 9
      :                          @323
  6263: 28 9f 17                 jump @632
      :                          @324
  6266: 97 77 02                 a0 = a0 << 0x2
  6269: 33 08 00 00 01           a1 = 0x10000
  6274: c8 87 07                 a0 = a0 + a1
  6277: 81 77                    a0 = i32 [a0]
  6279: c8 87 07                 a0 = a0 + a1
  6282: 7b 15 30                 u64 [sp + 0x30] = s0
  6285: 32 07                    jump [a0]
      :                          @325 [@dyn 69]
  6287: 95 18 52                 a1 = sp + 0x52
  6290: 33 09 03                 a2 = 0x3
  6293: 95 1a 98 00              a3 = sp + 0x98
  6297: 33 0c 00 01              a5 = 0x100
  6301: 82 17 38                 a0 = u64 [sp + 0x38]
  6304: 33 0b                    a4 = 0
  6306: 0a 02                    ecalli 2 // 'read'
  6308: 7b 67 70                 u64 [s1 + 0x70] = a0
  6311: 33 07 50 00 01           a0 = 0x10050
  6316: 7b 17 10                 u64 [sp + 0x10] = a0
  6319: 7b 67 18                 u64 [s1 + 0x18] = a0
  6322: 82 18 40                 a1 = u64 [sp + 0x40]
  6325: 7b 68 20                 u64 [s1 + 0x20] = a1
  6328: 95 17 ff 07              a0 = sp + 0x7ff
  6332: 95 77 09 04              a0 = a0 + 0x409
  6336: 7b 67 28                 u64 [s1 + 0x28] = a0
  6339: 7b 68 30                 u64 [s1 + 0x30] = a1
  6342: 33 07 48 0b 01           a0 = 0x10b48
  6347: 7b 17 98 01              u64 [sp + 0x198] = a0
  6351: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6356: 49 21 b8 01              u64 [sp + 440] = 0
  6360: 95 17 ff 07              a0 = sp + 0x7ff
  6364: 95 77 b1 03              a0 = a0 + 0x3b1
  6368: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6372: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6377: 95 17 ff 07              a0 = sp + 0x7ff
  6381: 95 77 e1 03              a0 = a0 + 0x3e1
  6385: 95 18 98 01              a1 = sp + 0x198
  6389: 50 20 8c 00 31 1b        ra = 140, jump @721
      :                          @326 [@dyn 70]
  6395: 82 65 50                 s0 = u64 [s1 + 0x50]
  6398: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6401: 95 17 ff 07              a0 = sp + 0x7ff
  6405: 95 77 99 03              a0 = a0 + 0x399
  6409: 82 76 48                 s1 = u64 [a0 + 0x48]
  6412: 33 07 02                 a0 = 0x2
  6415: 33 08                    a1 = 0
  6417: 33 09                    a2 = 0
  6419: 64 5a                    a3 = s0
  6421: 33 00 8e 00              ra = 0x8e
  6425: 0a 64                    ecalli 100 // 'log'
  6427: 01                       fallthrough
      :                          @327 [@dyn 71]
  6428: 82 17 48                 a0 = u64 [sp + 0x48]
  6431: c8 67 07                 a0 = a0 + s1
  6434: 53 27 00 f0 23           jump @333 if a0 <u 4294963200
      :                          @328
  6439: 33 07 20 00 03           a0 = 0x30020
  6444: 95 77 00 10              a0 = a0 + 0x1000
  6448: 01                       fallthrough
      :                          @329
  6449: 82 78                    a1 = u64 [a0]
  6451: c9 87 09                 a2 = a0 - a1
  6454: ab 59 0f                 jump @333 if a2 != s0
      :                          @330
  6457: c9 68 09                 a2 = a1 - s1
  6460: 01                       fallthrough
      :                          @331
  6461: 82 7a                    a3 = u64 [a0]
  6463: ab 8a f2                 jump @329 if a3 != a1
      :                          @332
  6466: 7b 79                    u64 [a0] = a2
  6468: 01                       fallthrough
      :                          @333
  6469: 95 16 ff 07              s1 = sp + 0x7ff
  6473: 95 66 99 03              s1 = s1 + 0x399
  6477: 82 67 70                 a0 = u64 [s1 + 0x70]
  6480: 33 08 01                 a1 = 0x1
  6483: 50 20 90 00 0d 2c        ra = 144, jump @1072
      :                          @334 [@dyn 72]
  6489: 95 17 52                 a0 = sp + 0x52
  6492: 33 08 03                 a1 = 0x3
  6495: 95 19 55                 a2 = sp + 0x55
  6498: 33 0a 03                 a3 = 0x3
  6501: 0a 03                    ecalli 3 // 'write'
  6503: 7b 67 78                 u64 [s1 + 0x78] = a0
  6506: 82 17 10                 a0 = u64 [sp + 0x10]
  6509: 7b 67 18                 u64 [s1 + 0x18] = a0
  6512: 95 17 ff 07              a0 = sp + 0x7ff
  6516: 95 77 11 04              a0 = a0 + 0x411
  6520: 7b 67 28                 u64 [s1 + 0x28] = a0
  6523: 33 07 78 0b 01           a0 = 0x10b78
  6528: 7b 17 98 01              u64 [sp + 0x198] = a0
  6532: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6537: 49 21 b8 01              u64 [sp + 440] = 0
  6541: 95 17 ff 07              a0 = sp + 0x7ff
  6545: 95 77 b1 03              a0 = a0 + 0x3b1
  6549: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6553: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6558: 82 17 40                 a0 = u64 [sp + 0x40]
  6561: 7b 67 20                 u64 [s1 + 0x20] = a0
  6564: 7b 67 30                 u64 [s1 + 0x30] = a0
  6567: 95 17 ff 07              a0 = sp + 0x7ff
  6571: 95 77 e1 03              a0 = a0 + 0x3e1
  6575: 95 18 98 01              a1 = sp + 0x198
  6579: 50 20 92 00 73 1a        ra = 146, jump @721
      :                          @335 [@dyn 73]
  6585: 82 65 50                 s0 = u64 [s1 + 0x50]
  6588: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6591: 82 66 48                 s1 = u64 [s1 + 0x48]
  6594: 33 07 02                 a0 = 0x2
  6597: 33 08                    a1 = 0
  6599: 33 09                    a2 = 0
  6601: 64 5a                    a3 = s0
  6603: 33 00 94 00              ra = 0x94
  6607: 0a 64                    ecalli 100 // 'log'
  6609: 01                       fallthrough
      :                          @336 [@dyn 74]
  6610: 82 17 48                 a0 = u64 [sp + 0x48]
  6613: c8 67 07                 a0 = a0 + s1
  6616: 53 27 00 f0 23           jump @342 if a0 <u 4294963200
      :                          @337
  6621: 33 07 20 00 03           a0 = 0x30020
  6626: 95 77 00 10              a0 = a0 + 0x1000
  6630: 01                       fallthrough
      :                          @338
  6631: 82 78                    a1 = u64 [a0]
  6633: c9 87 09                 a2 = a0 - a1
  6636: ab 59 0f                 jump @342 if a2 != s0
      :                          @339
  6639: c9 68 09                 a2 = a1 - s1
  6642: 01                       fallthrough
      :                          @340
  6643: 82 7a                    a3 = u64 [a0]
  6645: ab 8a f2                 jump @338 if a3 != a1
      :                          @341
  6648: 7b 79                    u64 [a0] = a2
  6650: 01                       fallthrough
      :                          @342
  6651: 95 16 ff 07              s1 = sp + 0x7ff
  6655: 95 66 99 03              s1 = s1 + 0x399
  6659: 82 67 78                 a0 = u64 [s1 + 0x78]
  6662: 33 08 02                 a1 = 0x2
  6665: 33 05 02                 s0 = 0x2
  6668: 50 20 96 00 54 2b        ra = 150, jump @1072
      :                          @343 [@dyn 75]
  6674: 95 18 52                 a1 = sp + 0x52
  6677: 33 09 03                 a2 = 0x3
  6680: 95 1a 98 00              a3 = sp + 0x98
  6684: 33 0c 00 01              a5 = 0x100
  6688: 82 17 38                 a0 = u64 [sp + 0x38]
  6691: 33 0b                    a4 = 0
  6693: 0a 02                    ecalli 2 // 'read'
  6695: 7b 67 80 00              u64 [s1 + 0x80] = a0
  6699: 82 17 30                 a0 = u64 [sp + 0x30]
  6702: 7b 67 18                 u64 [s1 + 0x18] = a0
  6705: 82 18 40                 a1 = u64 [sp + 0x40]
  6708: 7b 68 20                 u64 [s1 + 0x20] = a1
  6711: 95 17 ff 07              a0 = sp + 0x7ff
  6715: 95 77 19 04              a0 = a0 + 0x419
  6719: 7b 67 28                 u64 [s1 + 0x28] = a0
  6722: 7b 68 30                 u64 [s1 + 0x30] = a1
  6725: 33 07 a8 0b 01           a0 = 0x10ba8
  6730: 7b 17 98 01              u64 [sp + 0x198] = a0
  6734: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6739: 49 21 b8 01              u64 [sp + 440] = 0
  6743: 95 17 ff 07              a0 = sp + 0x7ff
  6747: 95 77 b1 03              a0 = a0 + 0x3b1
  6751: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6755: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  6759: 95 17 ff 07              a0 = sp + 0x7ff
  6763: 95 77 e1 03              a0 = a0 + 0x3e1
  6767: 95 18 98 01              a1 = sp + 0x198
  6771: 50 20 98 00 b3 19        ra = 152, jump @721
      :                          @344 [@dyn 76]
  6777: 82 65 50                 s0 = u64 [s1 + 0x50]
  6780: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6783: 82 66 48                 s1 = u64 [s1 + 0x48]
  6786: 33 07 02                 a0 = 0x2
  6789: 33 08                    a1 = 0
  6791: 33 09                    a2 = 0
  6793: 64 5a                    a3 = s0
  6795: 33 00 9a 00              ra = 0x9a
  6799: 0a 64                    ecalli 100 // 'log'
  6801: 01                       fallthrough
      :                          @345 [@dyn 77]
  6802: 82 17 48                 a0 = u64 [sp + 0x48]
  6805: c8 67 07                 a0 = a0 + s1
  6808: 53 27 00 f0 23           jump @351 if a0 <u 4294963200
      :                          @346
  6813: 33 07 20 00 03           a0 = 0x30020
  6818: 95 77 00 10              a0 = a0 + 0x1000
  6822: 01                       fallthrough
      :                          @347
  6823: 82 78                    a1 = u64 [a0]
  6825: c9 87 09                 a2 = a0 - a1
  6828: ab 59 0f                 jump @351 if a2 != s0
      :                          @348
  6831: c9 68 09                 a2 = a1 - s1
  6834: 01                       fallthrough
      :                          @349
  6835: 82 7a                    a3 = u64 [a0]
  6837: ab 8a f2                 jump @347 if a3 != a1
      :                          @350
  6840: 7b 79                    u64 [a0] = a2
  6842: 01                       fallthrough
      :                          @351
  6843: 95 16 ff 07              s1 = sp + 0x7ff
  6847: 95 66 99 03              s1 = s1 + 0x399
  6851: 82 67 80 00              a0 = u64 [s1 + 0x80]
  6855: 33 08 05                 a1 = 0x5
  6858: 50 20 9c 00 96 2a        ra = 156, jump @1072
      :                          @352 [@dyn 78]
  6864: 95 17 52                 a0 = sp + 0x52
  6867: 33 08                    a1 = 0
  6869: 0a 0f                    ecalli 15 // 'forget'
  6871: 7b 67                    u64 [s1] = a0
  6873: 33 07 60 00 01           a0 = 0x10060
  6878: 7b 67 18                 u64 [s1 + 0x18] = a0
  6881: 33 07 d8 0b 01           a0 = 0x10bd8
  6886: 7b 17 98 01              u64 [sp + 0x198] = a0
  6890: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  6895: 49 21 b8 01              u64 [sp + 440] = 0
  6899: 95 17 ff 07              a0 = sp + 0x7ff
  6903: 95 77 b1 03              a0 = a0 + 0x3b1
  6907: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  6911: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  6916: 82 17 40                 a0 = u64 [sp + 0x40]
  6919: 7b 67 20                 u64 [s1 + 0x20] = a0
  6922: 7b 66 28                 u64 [s1 + 0x28] = s1
  6925: 7b 67 30                 u64 [s1 + 0x30] = a0
  6928: 95 17 ff 07              a0 = sp + 0x7ff
  6932: 95 77 e1 03              a0 = a0 + 0x3e1
  6936: 95 18 98 01              a1 = sp + 0x198
  6940: 50 20 9e 00 0a 19        ra = 158, jump @721
      :                          @353 [@dyn 79]
  6946: 82 65 50                 s0 = u64 [s1 + 0x50]
  6949: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6952: 82 66 48                 s1 = u64 [s1 + 0x48]
  6955: 33 07 02                 a0 = 0x2
  6958: 33 08                    a1 = 0
  6960: 33 09                    a2 = 0
  6962: 64 5a                    a3 = s0
  6964: 33 00 a0 00              ra = 0xa0
  6968: 0a 64                    ecalli 100 // 'log'
  6970: 01                       fallthrough
      :                          @354 [@dyn 80]
  6971: 82 17 48                 a0 = u64 [sp + 0x48]
  6974: c8 67 07                 a0 = a0 + s1
  6977: 53 27 00 f0 e2 09        jump @489 if a0 <u 4294963200
      :                          @355
  6983: 33 07 20 00 03           a0 = 0x30020
  6988: 95 77 00 10              a0 = a0 + 0x1000
  6992: 01                       fallthrough
      :                          @356
  6993: 82 78                    a1 = u64 [a0]
  6995: c9 87 09                 a2 = a0 - a1
  6998: ab 59 cd 09              jump @489 if a2 != s0
      :                          @357
  7002: c9 68 09                 a2 = a1 - s1
  7005: 01                       fallthrough
      :                          @358
  7006: 82 7a                    a3 = u64 [a0]
  7008: ab 8a f1                 jump @356 if a3 != a1
      :                          @359
  7011: 7b 79                    u64 [a0] = a2
  7013: 33 0b                    a4 = 0
  7015: 01                       fallthrough
      :                          @360
  7016: ab 8a e9                 jump @356 if a3 != a1
      :                          @361
  7019: 28 b8 09                 jump @489
      :                          @362 [@dyn 81]
  7022: 95 18 52                 a1 = sp + 0x52
  7025: 33 09 03                 a2 = 0x3
  7028: 95 1a 98 00              a3 = sp + 0x98
  7032: 33 0c 00 01              a5 = 0x100
  7036: 82 17 38                 a0 = u64 [sp + 0x38]
  7039: 33 0b                    a4 = 0
  7041: 0a 02                    ecalli 2 // 'read'
  7043: 7b 67 78                 u64 [s1 + 0x78] = a0
  7046: 7b 65 18                 u64 [s1 + 0x18] = s0
  7049: 82 18 40                 a1 = u64 [sp + 0x40]
  7052: 7b 68 20                 u64 [s1 + 0x20] = a1
  7055: 95 17 ff 07              a0 = sp + 0x7ff
  7059: 95 77 11 04              a0 = a0 + 0x411
  7063: 7b 67 28                 u64 [s1 + 0x28] = a0
  7066: 7b 68 30                 u64 [s1 + 0x30] = a1
  7069: 33 07 08 0c 01           a0 = 0x10c08
  7074: 7b 17 98 01              u64 [sp + 0x198] = a0
  7078: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7083: 49 21 b8 01              u64 [sp + 440] = 0
  7087: 95 17 ff 07              a0 = sp + 0x7ff
  7091: 95 77 b1 03              a0 = a0 + 0x3b1
  7095: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7099: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7104: 95 17 ff 07              a0 = sp + 0x7ff
  7108: 95 77 e1 03              a0 = a0 + 0x3e1
  7112: 95 18 98 01              a1 = sp + 0x198
  7116: 50 20 a4 00 5a 18        ra = 164, jump @721
      :                          @363 [@dyn 82]
  7122: 82 65 50                 s0 = u64 [s1 + 0x50]
  7125: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7128: 95 17 ff 07              a0 = sp + 0x7ff
  7132: 95 77 99 03              a0 = a0 + 0x399
  7136: 82 76 48                 s1 = u64 [a0 + 0x48]
  7139: 33 07 02                 a0 = 0x2
  7142: 33 08                    a1 = 0
  7144: 33 09                    a2 = 0
  7146: 64 5a                    a3 = s0
  7148: 33 00 a6 00              ra = 0xa6
  7152: 0a 64                    ecalli 100 // 'log'
  7154: 01                       fallthrough
      :                          @364 [@dyn 83]
  7155: 82 17 48                 a0 = u64 [sp + 0x48]
  7158: c8 67 07                 a0 = a0 + s1
  7161: 53 27 00 f0 23           jump @370 if a0 <u 4294963200
      :                          @365
  7166: 33 07 20 00 03           a0 = 0x30020
  7171: 95 77 00 10              a0 = a0 + 0x1000
  7175: 01                       fallthrough
      :                          @366
  7176: 82 78                    a1 = u64 [a0]
  7178: c9 87 09                 a2 = a0 - a1
  7181: ab 59 0f                 jump @370 if a2 != s0
      :                          @367
  7184: c9 68 09                 a2 = a1 - s1
  7187: 01                       fallthrough
      :                          @368
  7188: 82 7a                    a3 = u64 [a0]
  7190: ab 8a f2                 jump @366 if a3 != a1
      :                          @369
  7193: 7b 79                    u64 [a0] = a2
  7195: 01                       fallthrough
      :                          @370
  7196: 95 16 ff 07              s1 = sp + 0x7ff
  7200: 95 66 99 03              s1 = s1 + 0x399
  7204: 82 67 78                 a0 = u64 [s1 + 0x78]
  7207: 33 08 01                 a1 = 0x1
  7210: 50 20 a8 00 36 29        ra = 168, jump @1072
      :                          @371 [@dyn 84]
  7216: 95 17 52                 a0 = sp + 0x52
  7219: 33 08 03                 a1 = 0x3
  7222: 33 09                    a2 = 0
  7224: 33 0a                    a3 = 0
  7226: 0a 03                    ecalli 3 // 'write'
  7228: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7232: 95 17 ff 07              a0 = sp + 0x7ff
  7236: 95 77 19 04              a0 = a0 + 0x419
  7240: 7b 67 28                 u64 [s1 + 0x28] = a0
  7243: 33 07 38 0c 01           a0 = 0x10c38
  7248: 7b 17 98 01              u64 [sp + 0x198] = a0
  7252: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7257: 49 21 b8 01              u64 [sp + 440] = 0
  7261: 95 17 ff 07              a0 = sp + 0x7ff
  7265: 95 77 b1 03              a0 = a0 + 0x3b1
  7269: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7273: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7278: 82 17 30                 a0 = u64 [sp + 0x30]
  7281: 7b 67 18                 u64 [s1 + 0x18] = a0
  7284: 82 17 40                 a0 = u64 [sp + 0x40]
  7287: 7b 67 20                 u64 [s1 + 0x20] = a0
  7290: 7b 67 30                 u64 [s1 + 0x30] = a0
  7293: 95 17 ff 07              a0 = sp + 0x7ff
  7297: 95 77 e1 03              a0 = a0 + 0x3e1
  7301: 95 18 98 01              a1 = sp + 0x198
  7305: 50 20 aa 00 9d 17        ra = 170, jump @721
      :                          @372 [@dyn 85]
  7311: 82 65 50                 s0 = u64 [s1 + 0x50]
  7314: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7317: 82 66 48                 s1 = u64 [s1 + 0x48]
  7320: 33 07 02                 a0 = 0x2
  7323: 33 08                    a1 = 0
  7325: 33 09                    a2 = 0
  7327: 64 5a                    a3 = s0
  7329: 33 00 ac 00              ra = 0xac
  7333: 0a 64                    ecalli 100 // 'log'
  7335: 01                       fallthrough
      :                          @373 [@dyn 86]
  7336: 82 17 48                 a0 = u64 [sp + 0x48]
  7339: c8 67 07                 a0 = a0 + s1
  7342: 53 27 00 f0 23           jump @379 if a0 <u 4294963200
      :                          @374
  7347: 33 07 20 00 03           a0 = 0x30020
  7352: 95 77 00 10              a0 = a0 + 0x1000
  7356: 01                       fallthrough
      :                          @375
  7357: 82 78                    a1 = u64 [a0]
  7359: c9 87 09                 a2 = a0 - a1
  7362: ab 59 0f                 jump @379 if a2 != s0
      :                          @376
  7365: c9 68 09                 a2 = a1 - s1
  7368: 01                       fallthrough
      :                          @377
  7369: 82 7a                    a3 = u64 [a0]
  7371: ab 8a f2                 jump @375 if a3 != a1
      :                          @378
  7374: 7b 79                    u64 [a0] = a2
  7376: 01                       fallthrough
      :                          @379
  7377: 95 16 ff 07              s1 = sp + 0x7ff
  7381: 95 66 99 03              s1 = s1 + 0x399
  7385: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7389: 33 08 02                 a1 = 0x2
  7392: 33 05 02                 s0 = 0x2
  7395: 50 20 ae 00 7d 28        ra = 174, jump @1072
      :                          @380 [@dyn 87]
  7401: 95 18 52                 a1 = sp + 0x52
  7404: 33 09 03                 a2 = 0x3
  7407: 95 1a 98 00              a3 = sp + 0x98
  7411: 33 0c 00 01              a5 = 0x100
  7415: 82 17 38                 a0 = u64 [sp + 0x38]
  7418: 33 0b                    a4 = 0
  7420: 0a 02                    ecalli 2 // 'read'
  7422: 7b 67                    u64 [s1] = a0
  7424: 33 07 50 00 01           a0 = 0x10050
  7429: 7b 67 18                 u64 [s1 + 0x18] = a0
  7432: 33 07 68 0c 01           a0 = 0x10c68
  7437: 7b 17 98 01              u64 [sp + 0x198] = a0
  7441: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7446: 49 21 b8 01              u64 [sp + 440] = 0
  7450: 95 17 ff 07              a0 = sp + 0x7ff
  7454: 95 77 b1 03              a0 = a0 + 0x3b1
  7458: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7462: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7466: 82 17 40                 a0 = u64 [sp + 0x40]
  7469: 7b 67 20                 u64 [s1 + 0x20] = a0
  7472: 7b 66 28                 u64 [s1 + 0x28] = s1
  7475: 7b 67 30                 u64 [s1 + 0x30] = a0
  7478: 95 17 ff 07              a0 = sp + 0x7ff
  7482: 95 77 e1 03              a0 = a0 + 0x3e1
  7486: 95 18 98 01              a1 = sp + 0x198
  7490: 50 20 b0 00 e4 16        ra = 176, jump @721
      :                          @381 [@dyn 88]
  7496: 82 65 50                 s0 = u64 [s1 + 0x50]
  7499: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7502: 82 66 48                 s1 = u64 [s1 + 0x48]
  7505: 33 07 02                 a0 = 0x2
  7508: 33 08                    a1 = 0
  7510: 33 09                    a2 = 0
  7512: 64 5a                    a3 = s0
  7514: 33 00 b2 00              ra = 0xb2
  7518: 0a 64                    ecalli 100 // 'log'
  7520: 01                       fallthrough
      :                          @382 [@dyn 89]
  7521: 82 17 48                 a0 = u64 [sp + 0x48]
  7524: c8 67 07                 a0 = a0 + s1
  7527: 53 27 00 f0 24 02        jump @416 if a0 <u 4294963200
      :                          @383
  7533: 33 07 20 00 03           a0 = 0x30020
  7538: 95 77 00 10              a0 = a0 + 0x1000
  7542: 01                       fallthrough
      :                          @384
  7543: 82 78                    a1 = u64 [a0]
  7545: c9 87 09                 a2 = a0 - a1
  7548: ab 59 0f 02              jump @416 if a2 != s0
      :                          @385
  7552: c9 68 09                 a2 = a1 - s1
  7555: 01                       fallthrough
      :                          @386
  7556: 82 7a                    a3 = u64 [a0]
  7558: ab 8a f1                 jump @384 if a3 != a1
      :                          @387
  7561: 7b 79                    u64 [a0] = a2
  7563: 33 0b                    a4 = 0
  7565: 01                       fallthrough
      :                          @388
  7566: ab 8a e9                 jump @384 if a3 != a1
      :                          @389
  7569: 28 fa 01                 jump @416
      :                          @390 [@dyn 90]
  7572: 95 17 58                 a0 = sp + 0x58
  7575: 33 08 03                 a1 = 0x3
  7578: 0a 0e                    ecalli 14 // 'solicit'
  7580: 7b 67 78                 u64 [s1 + 0x78] = a0
  7583: 95 17 ff 07              a0 = sp + 0x7ff
  7587: 95 77 11 04              a0 = a0 + 0x411
  7591: 7b 67 28                 u64 [s1 + 0x28] = a0
  7594: 33 07 98 0c 01           a0 = 0x10c98
  7599: 7b 17 98 01              u64 [sp + 0x198] = a0
  7603: 7b 65 18                 u64 [s1 + 0x18] = s0
  7606: 82 18 40                 a1 = u64 [sp + 0x40]
  7609: 7b 68 20                 u64 [s1 + 0x20] = a1
  7612: 7b 68 30                 u64 [s1 + 0x30] = a1
  7615: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7620: 49 21 b8 01              u64 [sp + 440] = 0
  7624: 95 17 ff 07              a0 = sp + 0x7ff
  7628: 95 77 b1 03              a0 = a0 + 0x3b1
  7632: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7636: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  7641: 95 17 ff 07              a0 = sp + 0x7ff
  7645: 95 77 e1 03              a0 = a0 + 0x3e1
  7649: 95 18 98 01              a1 = sp + 0x198
  7653: 50 20 b6 00 41 16        ra = 182, jump @721
      :                          @391 [@dyn 91]
  7659: 82 65 50                 s0 = u64 [s1 + 0x50]
  7662: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7665: 95 17 ff 07              a0 = sp + 0x7ff
  7669: 95 77 99 03              a0 = a0 + 0x399
  7673: 82 76 48                 s1 = u64 [a0 + 0x48]
  7676: 33 07 02                 a0 = 0x2
  7679: 33 08                    a1 = 0
  7681: 33 09                    a2 = 0
  7683: 64 5a                    a3 = s0
  7685: 33 00 b8 00              ra = 0xb8
  7689: 0a 64                    ecalli 100 // 'log'
  7691: 01                       fallthrough
      :                          @392 [@dyn 92]
  7692: 82 17 48                 a0 = u64 [sp + 0x48]
  7695: c8 67 07                 a0 = a0 + s1
  7698: 53 27 00 f0 23           jump @398 if a0 <u 4294963200
      :                          @393
  7703: 33 07 20 00 03           a0 = 0x30020
  7708: 95 77 00 10              a0 = a0 + 0x1000
  7712: 01                       fallthrough
      :                          @394
  7713: 82 78                    a1 = u64 [a0]
  7715: c9 87 09                 a2 = a0 - a1
  7718: ab 59 0f                 jump @398 if a2 != s0
      :                          @395
  7721: c9 68 09                 a2 = a1 - s1
  7724: 01                       fallthrough
      :                          @396
  7725: 82 7a                    a3 = u64 [a0]
  7727: ab 8a f2                 jump @394 if a3 != a1
      :                          @397
  7730: 7b 79                    u64 [a0] = a2
  7732: 01                       fallthrough
      :                          @398
  7733: 95 16 ff 07              s1 = sp + 0x7ff
  7737: 95 66 99 03              s1 = s1 + 0x399
  7741: 82 67 78                 a0 = u64 [s1 + 0x78]
  7744: 33 08 01                 a1 = 0x1
  7747: 33 05 01                 s0 = 0x1
  7750: 50 20 ba 00 1a 27        ra = 186, jump @1072
      :                          @399 [@dyn 93]
  7756: 95 17 58                 a0 = sp + 0x58
  7759: 33 08 03                 a1 = 0x3
  7762: 0a 0d                    ecalli 13 // 'query'
  7764: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7768: 95 17 ff 07              a0 = sp + 0x7ff
  7772: 95 77 19 04              a0 = a0 + 0x419
  7776: 7b 67 48                 u64 [s1 + 0x48] = a0
  7779: 33 07 c8 0c 01           a0 = 0x10cc8
  7784: 7b 17 98 01              u64 [sp + 0x198] = a0
  7788: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  7793: 49 21 b8 01              u64 [sp + 440] = 0
  7797: 95 17 ff 07              a0 = sp + 0x7ff
  7801: 95 77 e1 03              a0 = a0 + 0x3e1
  7805: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7809: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7813: 82 17 40                 a0 = u64 [sp + 0x40]
  7816: 7b 67 50                 u64 [s1 + 0x50] = a0
  7819: 95 17 ff 07              a0 = sp + 0x7ff
  7823: 95 77 b1 03              a0 = a0 + 0x3b1
  7827: 95 18 98 01              a1 = sp + 0x198
  7831: 50 20 bc 00 8f 15        ra = 188, jump @721
      :                          @400 [@dyn 94]
  7837: 82 65 20                 s0 = u64 [s1 + 0x20]
  7840: 82 6b 28                 a4 = u64 [s1 + 0x28]
  7843: 82 66 18                 s1 = u64 [s1 + 0x18]
  7846: 33 07 02                 a0 = 0x2
  7849: 33 08                    a1 = 0
  7851: 33 09                    a2 = 0
  7853: 64 5a                    a3 = s0
  7855: 33 00 be 00              ra = 0xbe
  7859: 0a 64                    ecalli 100 // 'log'
  7861: 01                       fallthrough
      :                          @401 [@dyn 95]
  7862: 82 17 48                 a0 = u64 [sp + 0x48]
  7865: c8 67 07                 a0 = a0 + s1
  7868: 53 27 00 f0 23           jump @407 if a0 <u 4294963200
      :                          @402
  7873: 33 07 20 00 03           a0 = 0x30020
  7878: 95 77 00 10              a0 = a0 + 0x1000
  7882: 01                       fallthrough
      :                          @403
  7883: 82 78                    a1 = u64 [a0]
  7885: c9 87 09                 a2 = a0 - a1
  7888: ab 59 0f                 jump @407 if a2 != s0
      :                          @404
  7891: c9 68 09                 a2 = a1 - s1
  7894: 01                       fallthrough
      :                          @405
  7895: 82 7a                    a3 = u64 [a0]
  7897: ab 8a f2                 jump @403 if a3 != a1
      :                          @406
  7900: 7b 79                    u64 [a0] = a2
  7902: 01                       fallthrough
      :                          @407
  7903: 95 16 ff 07              s1 = sp + 0x7ff
  7907: 95 66 99 03              s1 = s1 + 0x399
  7911: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7915: 33 08 02                 a1 = 0x2
  7918: 33 05 02                 s0 = 0x2
  7921: 50 20 c0 00 6f 26        ra = 192, jump @1072
      :                          @408 [@dyn 96]
  7927: 95 17 78                 a0 = sp + 0x78
  7930: 33 08 03                 a1 = 0x3
  7933: 0a 0d                    ecalli 13 // 'query'
  7935: 7b 67                    u64 [s1] = a0
  7937: 33 07 50 00 01           a0 = 0x10050
  7942: 7b 67 18                 u64 [s1 + 0x18] = a0
  7945: 33 07 e8 0c 01           a0 = 0x10ce8
  7950: 7b 17 98 01              u64 [sp + 0x198] = a0
  7954: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  7959: 49 21 b8 01              u64 [sp + 440] = 0
  7963: 95 17 ff 07              a0 = sp + 0x7ff
  7967: 95 77 b1 03              a0 = a0 + 0x3b1
  7971: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  7975: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  7979: 82 17 40                 a0 = u64 [sp + 0x40]
  7982: 7b 67 20                 u64 [s1 + 0x20] = a0
  7985: 7b 66 28                 u64 [s1 + 0x28] = s1
  7988: 7b 67 30                 u64 [s1 + 0x30] = a0
  7991: 95 17 ff 07              a0 = sp + 0x7ff
  7995: 95 77 e1 03              a0 = a0 + 0x3e1
  7999: 95 18 98 01              a1 = sp + 0x198
  8003: 50 20 c2 00 e3 14        ra = 194, jump @721
      :                          @409 [@dyn 97]
  8009: 82 65 50                 s0 = u64 [s1 + 0x50]
  8012: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8015: 82 66 48                 s1 = u64 [s1 + 0x48]
  8018: 33 07 02                 a0 = 0x2
  8021: 33 08                    a1 = 0
  8023: 33 09                    a2 = 0
  8025: 64 5a                    a3 = s0
  8027: 33 00 c4 00              ra = 0xc4
  8031: 0a 64                    ecalli 100 // 'log'
  8033: 01                       fallthrough
      :                          @410 [@dyn 98]
  8034: 82 17 48                 a0 = u64 [sp + 0x48]
  8037: c8 67 07                 a0 = a0 + s1
  8040: 53 27 00 f0 23           jump @416 if a0 <u 4294963200
      :                          @411
  8045: 33 07 20 00 03           a0 = 0x30020
  8050: 95 77 00 10              a0 = a0 + 0x1000
  8054: 01                       fallthrough
      :                          @412
  8055: 82 78                    a1 = u64 [a0]
  8057: c9 87 09                 a2 = a0 - a1
  8060: ab 59 0f                 jump @416 if a2 != s0
      :                          @413
  8063: c9 68 09                 a2 = a1 - s1
  8066: 01                       fallthrough
      :                          @414
  8067: 82 7a                    a3 = u64 [a0]
  8069: ab 8a f2                 jump @412 if a3 != a1
      :                          @415
  8072: 7b 79                    u64 [a0] = a2
  8074: 01                       fallthrough
      :                          @416
  8075: 95 16 ff 07              s1 = sp + 0x7ff
  8079: 95 66 99 03              s1 = s1 + 0x399
  8083: 82 67                    a0 = u64 [s1]
  8085: 33 08 05                 a1 = 0x5
  8088: 33 00 54 01              ra = 0x154
  8092: 28 c4 25                 jump @1072
      :                          @417 [@dyn 99]
  8095: 95 17 58                 a0 = sp + 0x58
  8098: 33 08 03                 a1 = 0x3
  8101: 0a 0f                    ecalli 15 // 'forget'
  8103: 7b 67 70                 u64 [s1 + 0x70] = a0
  8106: 95 17 ff 07              a0 = sp + 0x7ff
  8110: 95 77 09 04              a0 = a0 + 0x409
  8114: 7b 67 28                 u64 [s1 + 0x28] = a0
  8117: 33 07 18 0d 01           a0 = 0x10d18
  8122: 7b 17 98 01              u64 [sp + 0x198] = a0
  8126: 7b 65 18                 u64 [s1 + 0x18] = s0
  8129: 82 18 40                 a1 = u64 [sp + 0x40]
  8132: 7b 68 20                 u64 [s1 + 0x20] = a1
  8135: 7b 68 30                 u64 [s1 + 0x30] = a1
  8138: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8143: 49 21 b8 01              u64 [sp + 440] = 0
  8147: 95 17 ff 07              a0 = sp + 0x7ff
  8151: 95 77 b1 03              a0 = a0 + 0x3b1
  8155: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8159: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8164: 95 17 ff 07              a0 = sp + 0x7ff
  8168: 95 77 e1 03              a0 = a0 + 0x3e1
  8172: 95 18 98 01              a1 = sp + 0x198
  8176: 50 20 c8 00 36 14        ra = 200, jump @721
      :                          @418 [@dyn 100]
  8182: 82 65 50                 s0 = u64 [s1 + 0x50]
  8185: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8188: 95 17 ff 07              a0 = sp + 0x7ff
  8192: 95 77 99 03              a0 = a0 + 0x399
  8196: 82 76 48                 s1 = u64 [a0 + 0x48]
  8199: 33 07 02                 a0 = 0x2
  8202: 33 08                    a1 = 0
  8204: 33 09                    a2 = 0
  8206: 64 5a                    a3 = s0
  8208: 33 00 ca 00              ra = 0xca
  8212: 0a 64                    ecalli 100 // 'log'
  8214: 01                       fallthrough
      :                          @419 [@dyn 101]
  8215: 82 17 48                 a0 = u64 [sp + 0x48]
  8218: c8 67 07                 a0 = a0 + s1
  8221: 53 27 00 f0 23           jump @425 if a0 <u 4294963200
      :                          @420
  8226: 33 07 20 00 03           a0 = 0x30020
  8231: 95 77 00 10              a0 = a0 + 0x1000
  8235: 01                       fallthrough
      :                          @421
  8236: 82 78                    a1 = u64 [a0]
  8238: c9 87 09                 a2 = a0 - a1
  8241: ab 59 0f                 jump @425 if a2 != s0
      :                          @422
  8244: c9 68 09                 a2 = a1 - s1
  8247: 01                       fallthrough
      :                          @423
  8248: 82 7a                    a3 = u64 [a0]
  8250: ab 8a f2                 jump @421 if a3 != a1
      :                          @424
  8253: 7b 79                    u64 [a0] = a2
  8255: 01                       fallthrough
      :                          @425
  8256: 95 16 ff 07              s1 = sp + 0x7ff
  8260: 95 66 99 03              s1 = s1 + 0x399
  8264: 82 67 70                 a0 = u64 [s1 + 0x70]
  8267: 33 08 01                 a1 = 0x1
  8270: 33 05 01                 s0 = 0x1
  8273: 50 20 cc 00 0f 25        ra = 204, jump @1072
      :                          @426 [@dyn 102]
  8279: 95 17 58                 a0 = sp + 0x58
  8282: 33 08 03                 a1 = 0x3
  8285: 0a 0d                    ecalli 13 // 'query'
  8287: 7b 67 78                 u64 [s1 + 0x78] = a0
  8290: 95 17 ff 07              a0 = sp + 0x7ff
  8294: 95 77 11 04              a0 = a0 + 0x411
  8298: 7b 67 48                 u64 [s1 + 0x48] = a0
  8301: 33 07 48 0d 01           a0 = 0x10d48
  8306: 7b 17 98 01              u64 [sp + 0x198] = a0
  8310: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  8315: 49 21 b8 01              u64 [sp + 440] = 0
  8319: 95 17 ff 07              a0 = sp + 0x7ff
  8323: 95 77 e1 03              a0 = a0 + 0x3e1
  8327: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8331: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8335: 82 17 40                 a0 = u64 [sp + 0x40]
  8338: 7b 67 50                 u64 [s1 + 0x50] = a0
  8341: 95 17 ff 07              a0 = sp + 0x7ff
  8345: 95 77 b1 03              a0 = a0 + 0x3b1
  8349: 95 18 98 01              a1 = sp + 0x198
  8353: 50 20 ce 00 85 13        ra = 206, jump @721
      :                          @427 [@dyn 103]
  8359: 82 65 20                 s0 = u64 [s1 + 0x20]
  8362: 82 6b 28                 a4 = u64 [s1 + 0x28]
  8365: 82 66 18                 s1 = u64 [s1 + 0x18]
  8368: 33 07 02                 a0 = 0x2
  8371: 33 08                    a1 = 0
  8373: 33 09                    a2 = 0
  8375: 64 5a                    a3 = s0
  8377: 33 00 d0 00              ra = 0xd0
  8381: 0a 64                    ecalli 100 // 'log'
  8383: 01                       fallthrough
      :                          @428 [@dyn 104]
  8384: 82 17 48                 a0 = u64 [sp + 0x48]
  8387: c8 67 07                 a0 = a0 + s1
  8390: 53 27 00 f0 23           jump @434 if a0 <u 4294963200
      :                          @429
  8395: 33 07 20 00 03           a0 = 0x30020
  8400: 95 77 00 10              a0 = a0 + 0x1000
  8404: 01                       fallthrough
      :                          @430
  8405: 82 78                    a1 = u64 [a0]
  8407: c9 87 09                 a2 = a0 - a1
  8410: ab 59 0f                 jump @434 if a2 != s0
      :                          @431
  8413: c9 68 09                 a2 = a1 - s1
  8416: 01                       fallthrough
      :                          @432
  8417: 82 7a                    a3 = u64 [a0]
  8419: ab 8a f2                 jump @430 if a3 != a1
      :                          @433
  8422: 7b 79                    u64 [a0] = a2
  8424: 01                       fallthrough
      :                          @434
  8425: 95 16 ff 07              s1 = sp + 0x7ff
  8429: 95 66 99 03              s1 = s1 + 0x399
  8433: 82 67 78                 a0 = u64 [s1 + 0x78]
  8436: 33 08 02                 a1 = 0x2
  8439: 33 05 02                 s0 = 0x2
  8442: 50 20 d2 00 66 24        ra = 210, jump @1072
      :                          @435 [@dyn 105]
  8448: 95 18 78                 a1 = sp + 0x78
  8451: 95 19 98 00              a2 = sp + 0x98
  8455: 33 0b 03                 a4 = 0x3
  8458: 82 17 38                 a0 = u64 [sp + 0x38]
  8461: 33 0a                    a3 = 0
  8463: 0a 01                    ecalli 1 // 'lookup'
  8465: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8469: 33 07 50 00 01           a0 = 0x10050
  8474: 7b 67 18                 u64 [s1 + 0x18] = a0
  8477: 95 17 ff 07              a0 = sp + 0x7ff
  8481: 95 77 19 04              a0 = a0 + 0x419
  8485: 7b 67 28                 u64 [s1 + 0x28] = a0
  8488: 33 07 68 0d 01           a0 = 0x10d68
  8493: 7b 17 98 01              u64 [sp + 0x198] = a0
  8497: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8502: 49 21 b8 01              u64 [sp + 440] = 0
  8506: 95 17 ff 07              a0 = sp + 0x7ff
  8510: 95 77 b1 03              a0 = a0 + 0x3b1
  8514: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8518: 82 17 40                 a0 = u64 [sp + 0x40]
  8521: 7b 67 20                 u64 [s1 + 0x20] = a0
  8524: 7b 67 30                 u64 [s1 + 0x30] = a0
  8527: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  8531: 95 17 ff 07              a0 = sp + 0x7ff
  8535: 95 77 e1 03              a0 = a0 + 0x3e1
  8539: 95 18 98 01              a1 = sp + 0x198
  8543: 50 20 d4 00 c7 12        ra = 212, jump @721
      :                          @436 [@dyn 106]
  8549: 82 65 50                 s0 = u64 [s1 + 0x50]
  8552: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8555: 82 66 48                 s1 = u64 [s1 + 0x48]
  8558: 33 07 02                 a0 = 0x2
  8561: 33 08                    a1 = 0
  8563: 33 09                    a2 = 0
  8565: 64 5a                    a3 = s0
  8567: 33 00 d6 00              ra = 0xd6
  8571: 0a 64                    ecalli 100 // 'log'
  8573: 01                       fallthrough
      :                          @437 [@dyn 107]
  8574: 82 17 48                 a0 = u64 [sp + 0x48]
  8577: c8 67 07                 a0 = a0 + s1
  8580: 53 27 00 f0 23           jump @443 if a0 <u 4294963200
      :                          @438
  8585: 33 07 20 00 03           a0 = 0x30020
  8590: 95 77 00 10              a0 = a0 + 0x1000
  8594: 01                       fallthrough
      :                          @439
  8595: 82 78                    a1 = u64 [a0]
  8597: c9 87 09                 a2 = a0 - a1
  8600: ab 59 0f                 jump @443 if a2 != s0
      :                          @440
  8603: c9 68 09                 a2 = a1 - s1
  8606: 01                       fallthrough
      :                          @441
  8607: 82 7a                    a3 = u64 [a0]
  8609: ab 8a f2                 jump @439 if a3 != a1
      :                          @442
  8612: 7b 79                    u64 [a0] = a2
  8614: 01                       fallthrough
      :                          @443
  8615: 95 16 ff 07              s1 = sp + 0x7ff
  8619: 95 66 99 03              s1 = s1 + 0x399
  8623: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8627: 33 08 05                 a1 = 0x5
  8630: 50 20 d8 00 aa 23        ra = 216, jump @1072
      :                          @444 [@dyn 108]
  8636: 33 07 e8 03              a0 = 0x3e8
  8640: 95 18 52                 a1 = sp + 0x52
  8643: 0a 06                    ecalli 6 // 'assign'
  8645: 7b 67                    u64 [s1] = a0
  8647: 33 07 38 00 01           a0 = 0x10038
  8652: 7b 67 18                 u64 [s1 + 0x18] = a0
  8655: 33 07 98 0d 01           a0 = 0x10d98
  8660: 7b 17 98 01              u64 [sp + 0x198] = a0
  8664: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8669: 49 21 b8 01              u64 [sp + 440] = 0
  8673: 95 17 ff 07              a0 = sp + 0x7ff
  8677: 95 77 b1 03              a0 = a0 + 0x3b1
  8681: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8685: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8690: 82 17 40                 a0 = u64 [sp + 0x40]
  8693: 7b 67 20                 u64 [s1 + 0x20] = a0
  8696: 7b 66 28                 u64 [s1 + 0x28] = s1
  8699: 7b 67 30                 u64 [s1 + 0x30] = a0
  8702: 95 17 ff 07              a0 = sp + 0x7ff
  8706: 95 77 e1 03              a0 = a0 + 0x3e1
  8710: 95 18 98 01              a1 = sp + 0x198
  8714: 50 20 da 00 1c 12        ra = 218, jump @721
      :                          @445 [@dyn 109]
  8720: 82 65 50                 s0 = u64 [s1 + 0x50]
  8723: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8726: 82 66 48                 s1 = u64 [s1 + 0x48]
  8729: 33 07 02                 a0 = 0x2
  8732: 33 08                    a1 = 0
  8734: 33 09                    a2 = 0
  8736: 64 5a                    a3 = s0
  8738: 33 00 dc 00              ra = 0xdc
  8742: 0a 64                    ecalli 100 // 'log'
  8744: 01                       fallthrough
      :                          @446 [@dyn 110]
  8745: 82 17 48                 a0 = u64 [sp + 0x48]
  8748: c8 67 07                 a0 = a0 + s1
  8751: 53 27 00 f0 f4 02        jump @489 if a0 <u 4294963200
      :                          @447
  8757: 33 07 20 00 03           a0 = 0x30020
  8762: 95 77 00 10              a0 = a0 + 0x1000
  8766: 01                       fallthrough
      :                          @448
  8767: 82 78                    a1 = u64 [a0]
  8769: c9 87 09                 a2 = a0 - a1
  8772: ab 59 df 02              jump @489 if a2 != s0
      :                          @449
  8776: c9 68 09                 a2 = a1 - s1
  8779: 01                       fallthrough
      :                          @450
  8780: 82 7a                    a3 = u64 [a0]
  8782: ab 8a f1                 jump @448 if a3 != a1
      :                          @451
  8785: 7b 79                    u64 [a0] = a2
  8787: 33 0b                    a4 = 0
  8789: 01                       fallthrough
      :                          @452
  8790: ab 8a e9                 jump @448 if a3 != a1
      :                          @453
  8793: 28 ca 02                 jump @489
      :                          @454 [@dyn 111]
  8796: 95 18 58                 a1 = sp + 0x58
  8799: 95 19 98 00              a2 = sp + 0x98
  8803: 33 0b 03                 a4 = 0x3
  8806: 82 17 38                 a0 = u64 [sp + 0x38]
  8809: 33 0a                    a3 = 0
  8811: 0a 01                    ecalli 1 // 'lookup'
  8813: 7b 67 70                 u64 [s1 + 0x70] = a0
  8816: 7b 65 18                 u64 [s1 + 0x18] = s0
  8819: 82 18 40                 a1 = u64 [sp + 0x40]
  8822: 7b 68 20                 u64 [s1 + 0x20] = a1
  8825: 95 17 ff 07              a0 = sp + 0x7ff
  8829: 95 77 09 04              a0 = a0 + 0x409
  8833: 7b 67 28                 u64 [s1 + 0x28] = a0
  8836: 7b 68 30                 u64 [s1 + 0x30] = a1
  8839: 33 07 c8 0d 01           a0 = 0x10dc8
  8844: 7b 17 98 01              u64 [sp + 0x198] = a0
  8848: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  8853: 49 21 b8 01              u64 [sp + 440] = 0
  8857: 95 17 ff 07              a0 = sp + 0x7ff
  8861: 95 77 b1 03              a0 = a0 + 0x3b1
  8865: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  8869: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  8874: 95 17 ff 07              a0 = sp + 0x7ff
  8878: 95 77 e1 03              a0 = a0 + 0x3e1
  8882: 95 18 98 01              a1 = sp + 0x198
  8886: 50 20 e0 00 70 11        ra = 224, jump @721
      :                          @455 [@dyn 112]
  8892: 82 65 50                 s0 = u64 [s1 + 0x50]
  8895: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8898: 95 17 ff 07              a0 = sp + 0x7ff
  8902: 95 77 99 03              a0 = a0 + 0x399
  8906: 82 76 48                 s1 = u64 [a0 + 0x48]
  8909: 33 07 02                 a0 = 0x2
  8912: 33 08                    a1 = 0
  8914: 33 09                    a2 = 0
  8916: 64 5a                    a3 = s0
  8918: 33 00 e2 00              ra = 0xe2
  8922: 0a 64                    ecalli 100 // 'log'
  8924: 01                       fallthrough
      :                          @456 [@dyn 113]
  8925: 82 17 48                 a0 = u64 [sp + 0x48]
  8928: c8 67 07                 a0 = a0 + s1
  8931: 53 27 00 f0 23           jump @462 if a0 <u 4294963200
      :                          @457
  8936: 33 07 20 00 03           a0 = 0x30020
  8941: 95 77 00 10              a0 = a0 + 0x1000
  8945: 01                       fallthrough
      :                          @458
  8946: 82 78                    a1 = u64 [a0]
  8948: c9 87 09                 a2 = a0 - a1
  8951: ab 59 0f                 jump @462 if a2 != s0
      :                          @459
  8954: c9 68 09                 a2 = a1 - s1
  8957: 01                       fallthrough
      :                          @460
  8958: 82 7a                    a3 = u64 [a0]
  8960: ab 8a f2                 jump @458 if a3 != a1
      :                          @461
  8963: 7b 79                    u64 [a0] = a2
  8965: 01                       fallthrough
      :                          @462
  8966: 95 16 ff 07              s1 = sp + 0x7ff
  8970: 95 66 99 03              s1 = s1 + 0x399
  8974: 82 67 70                 a0 = u64 [s1 + 0x70]
  8977: 33 08 01                 a1 = 0x1
  8980: 50 20 e4 00 4c 22        ra = 228, jump @1072
      :                          @463 [@dyn 114]
  8986: 95 17 58                 a0 = sp + 0x58
  8989: 33 08 03                 a1 = 0x3
  8992: 0a 0d                    ecalli 13 // 'query'
  8994: 7b 67 78                 u64 [s1 + 0x78] = a0
  8997: 95 17 ff 07              a0 = sp + 0x7ff
  9001: 95 77 11 04              a0 = a0 + 0x411
  9005: 7b 67 28                 u64 [s1 + 0x28] = a0
  9008: 33 07 f8 0d 01           a0 = 0x10df8
  9013: 7b 17 98 01              u64 [sp + 0x198] = a0
  9017: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9022: 49 21 b8 01              u64 [sp + 440] = 0
  9026: 95 17 ff 07              a0 = sp + 0x7ff
  9030: 95 77 b1 03              a0 = a0 + 0x3b1
  9034: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9038: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9043: 82 17 30                 a0 = u64 [sp + 0x30]
  9046: 7b 67 18                 u64 [s1 + 0x18] = a0
  9049: 82 17 40                 a0 = u64 [sp + 0x40]
  9052: 7b 67 20                 u64 [s1 + 0x20] = a0
  9055: 7b 67 30                 u64 [s1 + 0x30] = a0
  9058: 95 17 ff 07              a0 = sp + 0x7ff
  9062: 95 77 e1 03              a0 = a0 + 0x3e1
  9066: 95 18 98 01              a1 = sp + 0x198
  9070: 50 20 e6 00 b8 10        ra = 230, jump @721
      :                          @464 [@dyn 115]
  9076: 82 65 50                 s0 = u64 [s1 + 0x50]
  9079: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9082: 82 66 48                 s1 = u64 [s1 + 0x48]
  9085: 33 07 02                 a0 = 0x2
  9088: 33 08                    a1 = 0
  9090: 33 09                    a2 = 0
  9092: 64 5a                    a3 = s0
  9094: 33 00 e8 00              ra = 0xe8
  9098: 0a 64                    ecalli 100 // 'log'
  9100: 01                       fallthrough
      :                          @465 [@dyn 116]
  9101: 82 17 48                 a0 = u64 [sp + 0x48]
  9104: c8 67 07                 a0 = a0 + s1
  9107: 53 27 00 f0 23           jump @471 if a0 <u 4294963200
      :                          @466
  9112: 33 07 20 00 03           a0 = 0x30020
  9117: 95 77 00 10              a0 = a0 + 0x1000
  9121: 01                       fallthrough
      :                          @467
  9122: 82 78                    a1 = u64 [a0]
  9124: c9 87 09                 a2 = a0 - a1
  9127: ab 59 0f                 jump @471 if a2 != s0
      :                          @468
  9130: c9 68 09                 a2 = a1 - s1
  9133: 01                       fallthrough
      :                          @469
  9134: 82 7a                    a3 = u64 [a0]
  9136: ab 8a f2                 jump @467 if a3 != a1
      :                          @470
  9139: 7b 79                    u64 [a0] = a2
  9141: 01                       fallthrough
      :                          @471
  9142: 95 16 ff 07              s1 = sp + 0x7ff
  9146: 95 66 99 03              s1 = s1 + 0x399
  9150: 82 67 78                 a0 = u64 [s1 + 0x78]
  9153: 33 08 02                 a1 = 0x2
  9156: 33 05 02                 s0 = 0x2
  9159: 50 20 ea 00 99 21        ra = 234, jump @1072
      :                          @472 [@dyn 117]
  9165: 95 18 58                 a1 = sp + 0x58
  9168: 82 17 38                 a0 = u64 [sp + 0x38]
  9171: 0a 0c                    ecalli 12 // 'eject'
  9173: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9177: 33 07 30 00 01           a0 = 0x10030
  9182: 7b 17 10                 u64 [sp + 0x10] = a0
  9185: 7b 67 18                 u64 [s1 + 0x18] = a0
  9188: 82 18 40                 a1 = u64 [sp + 0x40]
  9191: 7b 68 20                 u64 [s1 + 0x20] = a1
  9194: 95 17 ff 07              a0 = sp + 0x7ff
  9198: 95 77 19 04              a0 = a0 + 0x419
  9202: 7b 67 28                 u64 [s1 + 0x28] = a0
  9205: 7b 68 30                 u64 [s1 + 0x30] = a1
  9208: 33 07 28 0e 01           a0 = 0x10e28
  9213: 7b 17 98 01              u64 [sp + 0x198] = a0
  9217: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9222: 49 21 b8 01              u64 [sp + 440] = 0
  9226: 95 17 ff 07              a0 = sp + 0x7ff
  9230: 95 77 b1 03              a0 = a0 + 0x3b1
  9234: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9238: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
  9242: 95 17 ff 07              a0 = sp + 0x7ff
  9246: 95 77 e1 03              a0 = a0 + 0x3e1
  9250: 95 18 98 01              a1 = sp + 0x198
  9254: 50 20 ec 00 00 10        ra = 236, jump @721
      :                          @473 [@dyn 118]
  9260: 82 65 50                 s0 = u64 [s1 + 0x50]
  9263: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9266: 82 66 48                 s1 = u64 [s1 + 0x48]
  9269: 33 07 02                 a0 = 0x2
  9272: 33 08                    a1 = 0
  9274: 33 09                    a2 = 0
  9276: 64 5a                    a3 = s0
  9278: 33 00 ee 00              ra = 0xee
  9282: 0a 64                    ecalli 100 // 'log'
  9284: 01                       fallthrough
      :                          @474 [@dyn 119]
  9285: 82 17 48                 a0 = u64 [sp + 0x48]
  9288: c8 67 07                 a0 = a0 + s1
  9291: 53 27 00 f0 23           jump @480 if a0 <u 4294963200
      :                          @475
  9296: 33 07 20 00 03           a0 = 0x30020
  9301: 95 77 00 10              a0 = a0 + 0x1000
  9305: 01                       fallthrough
      :                          @476
  9306: 82 78                    a1 = u64 [a0]
  9308: c9 87 09                 a2 = a0 - a1
  9311: ab 59 0f                 jump @480 if a2 != s0
      :                          @477
  9314: c9 68 09                 a2 = a1 - s1
  9317: 01                       fallthrough
      :                          @478
  9318: 82 7a                    a3 = u64 [a0]
  9320: ab 8a f2                 jump @476 if a3 != a1
      :                          @479
  9323: 7b 79                    u64 [a0] = a2
  9325: 01                       fallthrough
      :                          @480
  9326: 95 16 ff 07              s1 = sp + 0x7ff
  9330: 95 66 99 03              s1 = s1 + 0x399
  9334: 82 67 80 00              a0 = u64 [s1 + 0x80]
  9338: 33 08 05                 a1 = 0x5
  9341: 50 20 f0 00 e3 20        ra = 240, jump @1072
      :                          @481 [@dyn 120]
  9347: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
  9357: 95 1a 58                 a3 = sp + 0x58
  9360: 33 08                    a1 = 0
  9362: 33 09                    a2 = 0
  9364: 33 0b                    a4 = 0
  9366: 0a 05                    ecalli 5 // 'bless'
  9368: 7b 67                    u64 [s1] = a0
  9370: 82 17 10                 a0 = u64 [sp + 0x10]
  9373: 7b 67 18                 u64 [s1 + 0x18] = a0
  9376: 33 07 58 0e 01           a0 = 0x10e58
  9381: 7b 17 98 01              u64 [sp + 0x198] = a0
  9385: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9390: 49 21 b8 01              u64 [sp + 440] = 0
  9394: 95 17 ff 07              a0 = sp + 0x7ff
  9398: 95 77 b1 03              a0 = a0 + 0x3b1
  9402: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9406: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9411: 82 17 40                 a0 = u64 [sp + 0x40]
  9414: 7b 67 20                 u64 [s1 + 0x20] = a0
  9417: 7b 66 28                 u64 [s1 + 0x28] = s1
  9420: 7b 67 30                 u64 [s1 + 0x30] = a0
  9423: 95 17 ff 07              a0 = sp + 0x7ff
  9427: 95 77 e1 03              a0 = a0 + 0x3e1
  9431: 95 18 98 01              a1 = sp + 0x198
  9435: 50 20 f2 00 4b 0f        ra = 242, jump @721
      :                          @482 [@dyn 121]
  9441: 82 65 50                 s0 = u64 [s1 + 0x50]
  9444: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9447: 82 66 48                 s1 = u64 [s1 + 0x48]
  9450: 33 07 02                 a0 = 0x2
  9453: 33 08                    a1 = 0
  9455: 33 09                    a2 = 0
  9457: 64 5a                    a3 = s0
  9459: 33 00 f4 00              ra = 0xf4
  9463: 0a 64                    ecalli 100 // 'log'
  9465: 01                       fallthrough
      :                          @483 [@dyn 122]
  9466: 82 17 48                 a0 = u64 [sp + 0x48]
  9469: c8 67 07                 a0 = a0 + s1
  9472: 53 27 00 f0 23           jump @489 if a0 <u 4294963200
      :                          @484
  9477: 33 07 20 00 03           a0 = 0x30020
  9482: 95 77 00 10              a0 = a0 + 0x1000
  9486: 01                       fallthrough
      :                          @485
  9487: 82 78                    a1 = u64 [a0]
  9489: c9 87 09                 a2 = a0 - a1
  9492: ab 59 0f                 jump @489 if a2 != s0
      :                          @486
  9495: c9 68 09                 a2 = a1 - s1
  9498: 01                       fallthrough
      :                          @487
  9499: 82 7a                    a3 = u64 [a0]
  9501: ab 8a f2                 jump @485 if a3 != a1
      :                          @488
  9504: 7b 79                    u64 [a0] = a2
  9506: 01                       fallthrough
      :                          @489
  9507: 95 16 ff 07              s1 = sp + 0x7ff
  9511: 95 66 99 03              s1 = s1 + 0x399
  9515: 82 67                    a0 = u64 [s1]
  9517: 33 08 06                 a1 = 0x6
  9520: 33 00 54 01              ra = 0x154
  9524: 28 2c 20                 jump @1072
      :                          @490 [@dyn 123]
  9527: 95 17 58                 a0 = sp + 0x58
  9530: 33 08 03                 a1 = 0x3
  9533: 0a 0e                    ecalli 14 // 'solicit'
  9535: 7b 67 70                 u64 [s1 + 0x70] = a0
  9538: 33 08 01                 a1 = 0x1
  9541: 50 20 f8 00 1b 20        ra = 248, jump @1072
      :                          @491 [@dyn 124]
  9547: 7b 65 18                 u64 [s1 + 0x18] = s0
  9550: 82 18 40                 a1 = u64 [sp + 0x40]
  9553: 7b 68 20                 u64 [s1 + 0x20] = a1
  9556: 95 17 ff 07              a0 = sp + 0x7ff
  9560: 95 77 09 04              a0 = a0 + 0x409
  9564: 7b 67 28                 u64 [s1 + 0x28] = a0
  9567: 7b 68 30                 u64 [s1 + 0x30] = a1
  9570: 33 07 88 0e 01           a0 = 0x10e88
  9575: 7b 17 98 01              u64 [sp + 0x198] = a0
  9579: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9584: 49 21 b8 01              u64 [sp + 440] = 0
  9588: 95 17 ff 07              a0 = sp + 0x7ff
  9592: 95 77 b1 03              a0 = a0 + 0x3b1
  9596: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9600: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9605: 95 17 ff 07              a0 = sp + 0x7ff
  9609: 95 77 e1 03              a0 = a0 + 0x3e1
  9613: 95 18 98 01              a1 = sp + 0x198
  9617: 50 20 fa 00 95 0e        ra = 250, jump @721
      :                          @492 [@dyn 125]
  9623: 82 65 50                 s0 = u64 [s1 + 0x50]
  9626: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9629: 95 17 ff 07              a0 = sp + 0x7ff
  9633: 95 77 99 03              a0 = a0 + 0x399
  9637: 82 76 48                 s1 = u64 [a0 + 0x48]
  9640: 33 07 02                 a0 = 0x2
  9643: 33 08                    a1 = 0
  9645: 33 09                    a2 = 0
  9647: 64 5a                    a3 = s0
  9649: 33 00 fc 00              ra = 0xfc
  9653: 0a 64                    ecalli 100 // 'log'
  9655: 01                       fallthrough
      :                          @493 [@dyn 126]
  9656: 82 17 48                 a0 = u64 [sp + 0x48]
  9659: c8 67 07                 a0 = a0 + s1
  9662: 53 27 00 f0 23           jump @499 if a0 <u 4294963200
      :                          @494
  9667: 33 07 20 00 03           a0 = 0x30020
  9672: 95 77 00 10              a0 = a0 + 0x1000
  9676: 01                       fallthrough
      :                          @495
  9677: 82 78                    a1 = u64 [a0]
  9679: c9 87 09                 a2 = a0 - a1
  9682: ab 59 0f                 jump @499 if a2 != s0
      :                          @496
  9685: c9 68 09                 a2 = a1 - s1
  9688: 01                       fallthrough
      :                          @497
  9689: 82 7a                    a3 = u64 [a0]
  9691: ab 8a f2                 jump @495 if a3 != a1
      :                          @498
  9694: 7b 79                    u64 [a0] = a2
  9696: 01                       fallthrough
      :                          @499
  9697: 95 17 58                 a0 = sp + 0x58
  9700: 33 08 03                 a1 = 0x3
  9703: 0a 0d                    ecalli 13 // 'query'
  9705: 95 18 ff 07              a1 = sp + 0x7ff
  9709: 95 88 99 03              a1 = a1 + 0x399
  9713: 7b 87 78                 u64 [a1 + 0x78] = a0
  9716: 95 17 ff 07              a0 = sp + 0x7ff
  9720: 95 77 11 04              a0 = a0 + 0x411
  9724: 7b 87 28                 u64 [a1 + 0x28] = a0
  9727: 33 07 f8 0d 01           a0 = 0x10df8
  9732: 7b 17 98 01              u64 [sp + 0x198] = a0
  9736: 49 21 a0 01 03           u64 [sp + 416] = 0x3
  9741: 49 21 b8 01              u64 [sp + 440] = 0
  9745: 95 17 ff 07              a0 = sp + 0x7ff
  9749: 95 77 b1 03              a0 = a0 + 0x3b1
  9753: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  9757: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  9762: 82 17 30                 a0 = u64 [sp + 0x30]
  9765: 7b 87 18                 u64 [a1 + 0x18] = a0
  9768: 82 17 40                 a0 = u64 [sp + 0x40]
  9771: 7b 87 20                 u64 [a1 + 0x20] = a0
  9774: 7b 87 30                 u64 [a1 + 0x30] = a0
  9777: 95 17 ff 07              a0 = sp + 0x7ff
  9781: 95 77 e1 03              a0 = a0 + 0x3e1
  9785: 95 18 98 01              a1 = sp + 0x198
  9789: 95 15 98 01              s0 = sp + 0x198
  9793: 50 20 fe 00 e5 0d        ra = 254, jump @721
      :                          @500 [@dyn 127]
  9799: 95 17 ff 07              a0 = sp + 0x7ff
  9803: 95 77 99 03              a0 = a0 + 0x399
  9807: 82 76 50                 s1 = u64 [a0 + 0x50]
  9810: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9813: 82 77 48                 a0 = u64 [a0 + 0x48]
  9816: 7b 17 10                 u64 [sp + 0x10] = a0
  9819: 33 07 02                 a0 = 0x2
  9822: 33 08                    a1 = 0
  9824: 33 09                    a2 = 0
  9826: 64 6a                    a3 = s1
  9828: 33 00 00 01              ra = 0x100
  9832: 0a 64                    ecalli 100 // 'log'
  9834: 01                       fallthrough
      :                          @501 [@dyn 128]
  9835: 82 1c 10                 a5 = u64 [sp + 0x10]
  9838: 82 17 48                 a0 = u64 [sp + 0x48]
  9841: c8 c7 07                 a0 = a0 + a5
  9844: 53 27 00 f0 23           jump @507 if a0 <u 4294963200
      :                          @502
  9849: 33 07 20 00 03           a0 = 0x30020
  9854: 95 77 00 10              a0 = a0 + 0x1000
  9858: 01                       fallthrough
      :                          @503
  9859: 82 78                    a1 = u64 [a0]
  9861: c9 87 09                 a2 = a0 - a1
  9864: ab 69 0f                 jump @507 if a2 != s1
      :                          @504
  9867: c9 c8 09                 a2 = a1 - a5
  9870: 01                       fallthrough
      :                          @505
  9871: 82 7a                    a3 = u64 [a0]
  9873: ab 8a f2                 jump @503 if a3 != a1
      :                          @506
  9876: 7b 79                    u64 [a0] = a2
  9878: 01                       fallthrough
      :                          @507
  9879: 95 17 ff 07              a0 = sp + 0x7ff
  9883: 95 77 99 03              a0 = a0 + 0x399
  9887: 82 77 78                 a0 = u64 [a0 + 0x78]
  9890: 33 08 02                 a1 = 0x2
  9893: 50 20 02 01 bb 1e        ra = 258, jump @1072
      :                          @508 [@dyn 129]
  9899: 33 09 00 0a              a2 = 0xa00
  9903: 95 17 98 01              a0 = sp + 0x198
  9907: 33 08                    a1 = 0
  9909: 50 20 04 01 98 10        ra = 260, jump @789
      :                          @509 [@dyn 130]
  9915: 33 06 50                 s1 = 0x50
  9918: 01                       fallthrough
      :                          @510
  9919: 95 18 58                 a1 = sp + 0x58
  9922: 33 09 20                 a2 = 0x20
  9925: 64 57                    a0 = s0
  9927: 50 20 06 01 d4 0f        ra = 262, jump @771
      :                          @511 [@dyn 131]
  9933: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  9936: 95 55 20                 s0 = s0 + 0x20
  9939: 52 06 ec                 jump @510 if s1 != 0
      :                          @512
  9942: 95 18 98 01              a1 = sp + 0x198
  9946: 33 07                    a0 = 0
  9948: 0a 06                    ecalli 6 // 'assign'
  9950: 95 16 ff 07              s1 = sp + 0x7ff
  9954: 95 66 99 03              s1 = s1 + 0x399
  9958: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9962: 95 17 ff 07              a0 = sp + 0x7ff
  9966: 95 77 19 04              a0 = a0 + 0x419
  9970: 7b 67 58                 u64 [s1 + 0x58] = a0
  9973: 33 07 b8 0e 01           a0 = 0x10eb8
  9978: 7b 67 18                 u64 [s1 + 0x18] = a0
  9981: 49 16 20 03              u64 [s1 + 32] = 0x3
  9985: 95 17 ff 07              a0 = sp + 0x7ff
  9989: 95 77 e1 03              a0 = a0 + 0x3e1
  9993: 7b 67 28                 u64 [s1 + 0x28] = a0
  9996: 49 16 30 02              u64 [s1 + 48] = 0x2
 10000: 82 17 30                 a0 = u64 [sp + 0x30]
 10003: 7b 67 48                 u64 [s1 + 0x48] = a0
 10006: 82 17 40                 a0 = u64 [sp + 0x40]
 10009: 7b 67 50                 u64 [s1 + 0x50] = a0
 10012: 7b 67 60                 u64 [s1 + 0x60] = a0
 10015: 49 16 38                 u64 [s1 + 56] = 0
 10018: 95 17 ff 07              a0 = sp + 0x7ff
 10022: 95 77 99 03              a0 = a0 + 0x399
 10026: 95 18 ff 07              a1 = sp + 0x7ff
 10030: 95 88 b1 03              a1 = a1 + 0x3b1
 10034: 50 20 08 01 f4 0c        ra = 264, jump @721
      :                          @513 [@dyn 132]
 10040: 82 65 08                 s0 = u64 [s1 + 0x8]
 10043: 82 6b 10                 a4 = u64 [s1 + 0x10]
 10046: 82 66                    s1 = u64 [s1]
 10048: 33 07 02                 a0 = 0x2
 10051: 33 08                    a1 = 0
 10053: 33 09                    a2 = 0
 10055: 64 5a                    a3 = s0
 10057: 33 00 0a 01              ra = 0x10a
 10061: 0a 64                    ecalli 100 // 'log'
 10063: 01                       fallthrough
      :                          @514 [@dyn 133]
 10064: 82 17 48                 a0 = u64 [sp + 0x48]
 10067: c8 67 07                 a0 = a0 + s1
 10070: 53 27 00 f0 12 05        jump @585 if a0 <u 4294963200
      :                          @515
 10076: 33 07 20 00 03           a0 = 0x30020
 10081: 95 77 00 10              a0 = a0 + 0x1000
 10085: 01                       fallthrough
      :                          @516
 10086: 82 78                    a1 = u64 [a0]
 10088: c9 87 09                 a2 = a0 - a1
 10091: ab 59 fd 04              jump @585 if a2 != s0
      :                          @517
 10095: c9 68 09                 a2 = a1 - s1
 10098: 01                       fallthrough
      :                          @518
 10099: 82 7a                    a3 = u64 [a0]
 10101: ab 8a f1                 jump @516 if a3 != a1
      :                          @519
 10104: 7b 79                    u64 [a0] = a2
 10106: 33 0b                    a4 = 0
 10108: 01                       fallthrough
      :                          @520
 10109: ab 8a e9                 jump @516 if a3 != a1
      :                          @521
 10112: 28 e8 04                 jump @585
      :                          @522 [@dyn 134]
 10115: 95 17 58                 a0 = sp + 0x58
 10118: 33 08 03                 a1 = 0x3
 10121: 0a 0f                    ecalli 15 // 'forget'
 10123: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10127: 7b 65 18                 u64 [s1 + 0x18] = s0
 10130: 82 18 40                 a1 = u64 [sp + 0x40]
 10133: 7b 68 20                 u64 [s1 + 0x20] = a1
 10136: 95 17 ff 07              a0 = sp + 0x7ff
 10140: 95 77 19 04              a0 = a0 + 0x419
 10144: 7b 67 28                 u64 [s1 + 0x28] = a0
 10147: 7b 68 30                 u64 [s1 + 0x30] = a1
 10150: 33 07 18 0d 01           a0 = 0x10d18
 10155: 7b 17 98 01              u64 [sp + 0x198] = a0
 10159: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10164: 49 21 b8 01              u64 [sp + 440] = 0
 10168: 95 17 ff 07              a0 = sp + 0x7ff
 10172: 95 77 b1 03              a0 = a0 + 0x3b1
 10176: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10180: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10185: 95 17 ff 07              a0 = sp + 0x7ff
 10189: 95 77 e1 03              a0 = a0 + 0x3e1
 10193: 95 18 98 01              a1 = sp + 0x198
 10197: 50 20 0e 01 51 0c        ra = 270, jump @721
      :                          @523 [@dyn 135]
 10203: 82 65 50                 s0 = u64 [s1 + 0x50]
 10206: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10209: 95 17 ff 07              a0 = sp + 0x7ff
 10213: 95 77 99 03              a0 = a0 + 0x399
 10217: 82 76 48                 s1 = u64 [a0 + 0x48]
 10220: 33 07 02                 a0 = 0x2
 10223: 33 08                    a1 = 0
 10225: 33 09                    a2 = 0
 10227: 64 5a                    a3 = s0
 10229: 33 00 10 01              ra = 0x110
 10233: 0a 64                    ecalli 100 // 'log'
 10235: 01                       fallthrough
      :                          @524 [@dyn 136]
 10236: 82 17 48                 a0 = u64 [sp + 0x48]
 10239: c8 67 07                 a0 = a0 + s1
 10242: 53 27 00 f0 23           jump @530 if a0 <u 4294963200
      :                          @525
 10247: 33 07 20 00 03           a0 = 0x30020
 10252: 95 77 00 10              a0 = a0 + 0x1000
 10256: 01                       fallthrough
      :                          @526
 10257: 82 78                    a1 = u64 [a0]
 10259: c9 87 09                 a2 = a0 - a1
 10262: ab 59 0f                 jump @530 if a2 != s0
      :                          @527
 10265: c9 68 09                 a2 = a1 - s1
 10268: 01                       fallthrough
      :                          @528
 10269: 82 7a                    a3 = u64 [a0]
 10271: ab 8a f2                 jump @526 if a3 != a1
      :                          @529
 10274: 7b 79                    u64 [a0] = a2
 10276: 01                       fallthrough
      :                          @530
 10277: 95 16 ff 07              s1 = sp + 0x7ff
 10281: 95 66 99 03              s1 = s1 + 0x399
 10285: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10289: 33 08 01                 a1 = 0x1
 10292: 50 20 12 01 2c 1d        ra = 274, jump @1072
      :                          @531 [@dyn 137]
 10298: 95 17 58                 a0 = sp + 0x58
 10301: 33 08 03                 a1 = 0x3
 10304: 0a 0d                    ecalli 13 // 'query'
 10306: 7b 67                    u64 [s1] = a0
 10308: 33 07 e8 0e 01           a0 = 0x10ee8
 10313: 7b 17 98 01              u64 [sp + 0x198] = a0
 10317: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10322: 49 21 b8 01              u64 [sp + 440] = 0
 10326: 95 17 ff 07              a0 = sp + 0x7ff
 10330: 95 77 b1 03              a0 = a0 + 0x3b1
 10334: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10338: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10343: 82 17 30                 a0 = u64 [sp + 0x30]
 10346: 7b 67 18                 u64 [s1 + 0x18] = a0
 10349: 82 17 40                 a0 = u64 [sp + 0x40]
 10352: 7b 67 20                 u64 [s1 + 0x20] = a0
 10355: 7b 66 28                 u64 [s1 + 0x28] = s1
 10358: 7b 67 30                 u64 [s1 + 0x30] = a0
 10361: 95 17 ff 07              a0 = sp + 0x7ff
 10365: 95 77 e1 03              a0 = a0 + 0x3e1
 10369: 95 18 98 01              a1 = sp + 0x198
 10373: 50 20 14 01 a1 0b        ra = 276, jump @721
      :                          @532 [@dyn 138]
 10379: 82 65 50                 s0 = u64 [s1 + 0x50]
 10382: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10385: 82 66 48                 s1 = u64 [s1 + 0x48]
 10388: 33 07 02                 a0 = 0x2
 10391: 33 08                    a1 = 0
 10393: 33 09                    a2 = 0
 10395: 64 5a                    a3 = s0
 10397: 33 00 16 01              ra = 0x116
 10401: 0a 64                    ecalli 100 // 'log'
 10403: 01                       fallthrough
      :                          @533 [@dyn 139]
 10404: 82 17 48                 a0 = u64 [sp + 0x48]
 10407: c8 67 07                 a0 = a0 + s1
 10410: 53 27 00 f0 80 01        jump @558 if a0 <u 4294963200
      :                          @534
 10416: 33 07 20 00 03           a0 = 0x30020
 10421: 95 77 00 10              a0 = a0 + 0x1000
 10425: 01                       fallthrough
      :                          @535
 10426: 82 78                    a1 = u64 [a0]
 10428: c9 87 09                 a2 = a0 - a1
 10431: ab 59 6b 01              jump @558 if a2 != s0
      :                          @536
 10435: c9 68 09                 a2 = a1 - s1
 10438: 01                       fallthrough
      :                          @537
 10439: 82 7a                    a3 = u64 [a0]
 10441: ab 8a f1                 jump @535 if a3 != a1
      :                          @538
 10444: 7b 79                    u64 [a0] = a2
 10446: 33 0b                    a4 = 0
 10448: 01                       fallthrough
      :                          @539
 10449: ab 8a e9                 jump @535 if a3 != a1
      :                          @540
 10452: 28 56 01                 jump @558
      :                          @541 [@dyn 140]
 10455: 95 18 58                 a1 = sp + 0x58
 10458: 95 19 98 00              a2 = sp + 0x98
 10462: 33 0b 03                 a4 = 0x3
 10465: 82 17 38                 a0 = u64 [sp + 0x38]
 10468: 33 0a                    a3 = 0
 10470: 0a 01                    ecalli 1 // 'lookup'
 10472: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10476: 7b 65 18                 u64 [s1 + 0x18] = s0
 10479: 82 18 40                 a1 = u64 [sp + 0x40]
 10482: 7b 68 20                 u64 [s1 + 0x20] = a1
 10485: 95 17 ff 07              a0 = sp + 0x7ff
 10489: 95 77 19 04              a0 = a0 + 0x419
 10493: 7b 67 28                 u64 [s1 + 0x28] = a0
 10496: 7b 68 30                 u64 [s1 + 0x30] = a1
 10499: 33 07 18 0f 01           a0 = 0x10f18
 10504: 7b 17 98 01              u64 [sp + 0x198] = a0
 10508: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10513: 49 21 b8 01              u64 [sp + 440] = 0
 10517: 95 17 ff 07              a0 = sp + 0x7ff
 10521: 95 77 b1 03              a0 = a0 + 0x3b1
 10525: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10529: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10534: 95 17 ff 07              a0 = sp + 0x7ff
 10538: 95 77 e1 03              a0 = a0 + 0x3e1
 10542: 95 18 98 01              a1 = sp + 0x198
 10546: 50 20 1a 01 f4 0a        ra = 282, jump @721
      :                          @542 [@dyn 141]
 10552: 82 65 50                 s0 = u64 [s1 + 0x50]
 10555: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10558: 95 17 ff 07              a0 = sp + 0x7ff
 10562: 95 77 99 03              a0 = a0 + 0x399
 10566: 82 76 48                 s1 = u64 [a0 + 0x48]
 10569: 33 07 02                 a0 = 0x2
 10572: 33 08                    a1 = 0
 10574: 33 09                    a2 = 0
 10576: 64 5a                    a3 = s0
 10578: 33 00 1c 01              ra = 0x11c
 10582: 0a 64                    ecalli 100 // 'log'
 10584: 01                       fallthrough
      :                          @543 [@dyn 142]
 10585: 82 17 48                 a0 = u64 [sp + 0x48]
 10588: c8 67 07                 a0 = a0 + s1
 10591: 53 27 00 f0 23           jump @549 if a0 <u 4294963200
      :                          @544
 10596: 33 07 20 00 03           a0 = 0x30020
 10601: 95 77 00 10              a0 = a0 + 0x1000
 10605: 01                       fallthrough
      :                          @545
 10606: 82 78                    a1 = u64 [a0]
 10608: c9 87 09                 a2 = a0 - a1
 10611: ab 59 0f                 jump @549 if a2 != s0
      :                          @546
 10614: c9 68 09                 a2 = a1 - s1
 10617: 01                       fallthrough
      :                          @547
 10618: 82 7a                    a3 = u64 [a0]
 10620: ab 8a f2                 jump @545 if a3 != a1
      :                          @548
 10623: 7b 79                    u64 [a0] = a2
 10625: 01                       fallthrough
      :                          @549
 10626: 95 16 ff 07              s1 = sp + 0x7ff
 10630: 95 66 99 03              s1 = s1 + 0x399
 10634: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10638: 33 08 01                 a1 = 0x1
 10641: 50 20 1e 01 cf 1b        ra = 286, jump @1072
      :                          @550 [@dyn 143]
 10647: 95 17 58                 a0 = sp + 0x58
 10650: 33 08 03                 a1 = 0x3
 10653: 0a 0d                    ecalli 13 // 'query'
 10655: 7b 67                    u64 [s1] = a0
 10657: 33 07 48 0f 01           a0 = 0x10f48
 10662: 7b 17 98 01              u64 [sp + 0x198] = a0
 10666: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10671: 49 21 b8 01              u64 [sp + 440] = 0
 10675: 95 17 ff 07              a0 = sp + 0x7ff
 10679: 95 77 b1 03              a0 = a0 + 0x3b1
 10683: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10687: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10692: 82 17 30                 a0 = u64 [sp + 0x30]
 10695: 7b 67 18                 u64 [s1 + 0x18] = a0
 10698: 82 17 40                 a0 = u64 [sp + 0x40]
 10701: 7b 67 20                 u64 [s1 + 0x20] = a0
 10704: 7b 66 28                 u64 [s1 + 0x28] = s1
 10707: 7b 67 30                 u64 [s1 + 0x30] = a0
 10710: 95 17 ff 07              a0 = sp + 0x7ff
 10714: 95 77 e1 03              a0 = a0 + 0x3e1
 10718: 95 18 98 01              a1 = sp + 0x198
 10722: 50 20 20 01 44 0a        ra = 288, jump @721
      :                          @551 [@dyn 144]
 10728: 82 65 50                 s0 = u64 [s1 + 0x50]
 10731: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10734: 82 66 48                 s1 = u64 [s1 + 0x48]
 10737: 33 07 02                 a0 = 0x2
 10740: 33 08                    a1 = 0
 10742: 33 09                    a2 = 0
 10744: 64 5a                    a3 = s0
 10746: 33 00 22 01              ra = 0x122
 10750: 0a 64                    ecalli 100 // 'log'
 10752: 01                       fallthrough
      :                          @552 [@dyn 145]
 10753: 82 17 48                 a0 = u64 [sp + 0x48]
 10756: c8 67 07                 a0 = a0 + s1
 10759: 53 27 00 f0 23           jump @558 if a0 <u 4294963200
      :                          @553
 10764: 33 07 20 00 03           a0 = 0x30020
 10769: 95 77 00 10              a0 = a0 + 0x1000
 10773: 01                       fallthrough
      :                          @554
 10774: 82 78                    a1 = u64 [a0]
 10776: c9 87 09                 a2 = a0 - a1
 10779: ab 59 0f                 jump @558 if a2 != s0
      :                          @555
 10782: c9 68 09                 a2 = a1 - s1
 10785: 01                       fallthrough
      :                          @556
 10786: 82 7a                    a3 = u64 [a0]
 10788: ab 8a f2                 jump @554 if a3 != a1
      :                          @557
 10791: 7b 79                    u64 [a0] = a2
 10793: 01                       fallthrough
      :                          @558
 10794: 95 16 ff 07              s1 = sp + 0x7ff
 10798: 95 66 99 03              s1 = s1 + 0x399
 10802: 82 67                    a0 = u64 [s1]
 10804: 33 08 02                 a1 = 0x2
 10807: 33 00 54 01              ra = 0x154
 10811: 28 25 1b                 jump @1072
      :                          @559 [@dyn 146]
 10814: 95 17 58                 a0 = sp + 0x58
 10817: 33 08 03                 a1 = 0x3
 10820: 33 09 8f 03              a2 = 0x38f
 10824: 33 0a 8f 03              a3 = 0x38f
 10828: 0a 09                    ecalli 9 // 'new'
 10830: 7b 67 70                 u64 [s1 + 0x70] = a0
 10833: 7b 65 18                 u64 [s1 + 0x18] = s0
 10836: 82 18 40                 a1 = u64 [sp + 0x40]
 10839: 7b 68 20                 u64 [s1 + 0x20] = a1
 10842: 95 17 ff 07              a0 = sp + 0x7ff
 10846: 95 77 09 04              a0 = a0 + 0x409
 10850: 7b 67 28                 u64 [s1 + 0x28] = a0
 10853: 7b 68 30                 u64 [s1 + 0x30] = a1
 10856: 33 07 78 0f 01           a0 = 0x10f78
 10861: 7b 17 98 01              u64 [sp + 0x198] = a0
 10865: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 10870: 49 21 b8 01              u64 [sp + 440] = 0
 10874: 95 17 ff 07              a0 = sp + 0x7ff
 10878: 95 77 b1 03              a0 = a0 + 0x3b1
 10882: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 10886: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 10891: 95 17 ff 07              a0 = sp + 0x7ff
 10895: 95 77 e1 03              a0 = a0 + 0x3e1
 10899: 95 18 98 01              a1 = sp + 0x198
 10903: 50 20 26 01 8f 09        ra = 294, jump @721
      :                          @560 [@dyn 147]
 10909: 82 65 50                 s0 = u64 [s1 + 0x50]
 10912: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10915: 95 17 ff 07              a0 = sp + 0x7ff
 10919: 95 77 99 03              a0 = a0 + 0x399
 10923: 82 76 48                 s1 = u64 [a0 + 0x48]
 10926: 33 07 02                 a0 = 0x2
 10929: 33 08                    a1 = 0
 10931: 33 09                    a2 = 0
 10933: 64 5a                    a3 = s0
 10935: 33 00 28 01              ra = 0x128
 10939: 0a 64                    ecalli 100 // 'log'
 10941: 01                       fallthrough
      :                          @561 [@dyn 148]
 10942: 82 17 48                 a0 = u64 [sp + 0x48]
 10945: c8 67 07                 a0 = a0 + s1
 10948: 53 27 00 f0 23           jump @567 if a0 <u 4294963200
      :                          @562
 10953: 33 07 20 00 03           a0 = 0x30020
 10958: 95 77 00 10              a0 = a0 + 0x1000
 10962: 01                       fallthrough
      :                          @563
 10963: 82 78                    a1 = u64 [a0]
 10965: c9 87 09                 a2 = a0 - a1
 10968: ab 59 0f                 jump @567 if a2 != s0
      :                          @564
 10971: c9 68 09                 a2 = a1 - s1
 10974: 01                       fallthrough
      :                          @565
 10975: 82 7a                    a3 = u64 [a0]
 10977: ab 8a f2                 jump @563 if a3 != a1
      :                          @566
 10980: 7b 79                    u64 [a0] = a2
 10982: 01                       fallthrough
      :                          @567
 10983: 95 16 ff 07              s1 = sp + 0x7ff
 10987: 95 66 99 03              s1 = s1 + 0x399
 10991: 82 67 70                 a0 = u64 [s1 + 0x70]
 10994: 33 08 01                 a1 = 0x1
 10997: 50 20 2a 01 6b 1a        ra = 298, jump @1072
      :                          @568 [@dyn 149]
 11003: 95 17 58                 a0 = sp + 0x58
 11006: 33 08 8f 03              a1 = 0x38f
 11010: 33 09 8f 03              a2 = 0x38f
 11014: 0a 0a                    ecalli 10 // 'upgrade'
 11016: 7b 67 78                 u64 [s1 + 0x78] = a0
 11019: 95 17 ff 07              a0 = sp + 0x7ff
 11023: 95 77 11 04              a0 = a0 + 0x411
 11027: 7b 67 28                 u64 [s1 + 0x28] = a0
 11030: 33 07 a8 0f 01           a0 = 0x10fa8
 11035: 7b 17 98 01              u64 [sp + 0x198] = a0
 11039: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11044: 49 21 b8 01              u64 [sp + 440] = 0
 11048: 95 17 ff 07              a0 = sp + 0x7ff
 11052: 95 77 b1 03              a0 = a0 + 0x3b1
 11056: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11060: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11065: 82 17 30                 a0 = u64 [sp + 0x30]
 11068: 7b 67 18                 u64 [s1 + 0x18] = a0
 11071: 82 17 40                 a0 = u64 [sp + 0x40]
 11074: 7b 67 20                 u64 [s1 + 0x20] = a0
 11077: 7b 67 30                 u64 [s1 + 0x30] = a0
 11080: 95 17 ff 07              a0 = sp + 0x7ff
 11084: 95 77 e1 03              a0 = a0 + 0x3e1
 11088: 95 18 98 01              a1 = sp + 0x198
 11092: 50 20 2c 01 d2 08        ra = 300, jump @721
      :                          @569 [@dyn 150]
 11098: 82 65 50                 s0 = u64 [s1 + 0x50]
 11101: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11104: 82 66 48                 s1 = u64 [s1 + 0x48]
 11107: 33 07 02                 a0 = 0x2
 11110: 33 08                    a1 = 0
 11112: 33 09                    a2 = 0
 11114: 64 5a                    a3 = s0
 11116: 33 00 2e 01              ra = 0x12e
 11120: 0a 64                    ecalli 100 // 'log'
 11122: 01                       fallthrough
      :                          @570 [@dyn 151]
 11123: 82 17 48                 a0 = u64 [sp + 0x48]
 11126: c8 67 07                 a0 = a0 + s1
 11129: 53 27 00 f0 23           jump @576 if a0 <u 4294963200
      :                          @571
 11134: 33 07 20 00 03           a0 = 0x30020
 11139: 95 77 00 10              a0 = a0 + 0x1000
 11143: 01                       fallthrough
      :                          @572
 11144: 82 78                    a1 = u64 [a0]
 11146: c9 87 09                 a2 = a0 - a1
 11149: ab 59 0f                 jump @576 if a2 != s0
      :                          @573
 11152: c9 68 09                 a2 = a1 - s1
 11155: 01                       fallthrough
      :                          @574
 11156: 82 7a                    a3 = u64 [a0]
 11158: ab 8a f2                 jump @572 if a3 != a1
      :                          @575
 11161: 7b 79                    u64 [a0] = a2
 11163: 01                       fallthrough
      :                          @576
 11164: 95 16 ff 07              s1 = sp + 0x7ff
 11168: 95 66 99 03              s1 = s1 + 0x399
 11172: 82 67 78                 a0 = u64 [s1 + 0x78]
 11175: 33 08 02                 a1 = 0x2
 11178: 33 05 02                 s0 = 0x2
 11181: 50 20 30 01 b3 19        ra = 304, jump @1072
      :                          @577 [@dyn 152]
 11187: 48 06 8f 03              u32 [s1 + 0] = 0x38f
 11191: 48 16 08                 u32 [s1 + 8] = 0
 11194: 48 16 04 8f 03           u32 [s1 + 4] = 0x38f
 11199: 33 08 01                 a1 = 0x1
 11202: 33 09 01                 a2 = 0x1
 11205: 95 1a ff 07              a3 = sp + 0x7ff
 11209: 95 aa 99 03              a3 = a3 + 0x399
 11213: 33 0b 01                 a4 = 0x1
 11216: 33 07                    a0 = 0
 11218: 0a 05                    ecalli 5 // 'bless'
 11220: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11224: 95 17 ff 07              a0 = sp + 0x7ff
 11228: 95 77 19 04              a0 = a0 + 0x419
 11232: 7b 67 28                 u64 [s1 + 0x28] = a0
 11235: 33 07 d8 0f 01           a0 = 0x10fd8
 11240: 7b 17 98 01              u64 [sp + 0x198] = a0
 11244: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11249: 49 21 b8 01              u64 [sp + 440] = 0
 11253: 95 17 ff 07              a0 = sp + 0x7ff
 11257: 95 77 b1 03              a0 = a0 + 0x3b1
 11261: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11265: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11269: 82 17 30                 a0 = u64 [sp + 0x30]
 11272: 7b 67 18                 u64 [s1 + 0x18] = a0
 11275: 82 17 40                 a0 = u64 [sp + 0x40]
 11278: 7b 67 20                 u64 [s1 + 0x20] = a0
 11281: 7b 67 30                 u64 [s1 + 0x30] = a0
 11284: 95 17 ff 07              a0 = sp + 0x7ff
 11288: 95 77 e1 03              a0 = a0 + 0x3e1
 11292: 95 18 98 01              a1 = sp + 0x198
 11296: 50 20 32 01 06 08        ra = 306, jump @721
      :                          @578 [@dyn 153]
 11302: 82 65 50                 s0 = u64 [s1 + 0x50]
 11305: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11308: 82 66 48                 s1 = u64 [s1 + 0x48]
 11311: 33 07 02                 a0 = 0x2
 11314: 33 08                    a1 = 0
 11316: 33 09                    a2 = 0
 11318: 64 5a                    a3 = s0
 11320: 33 00 34 01              ra = 0x134
 11324: 0a 64                    ecalli 100 // 'log'
 11326: 01                       fallthrough
      :                          @579 [@dyn 154]
 11327: 82 17 48                 a0 = u64 [sp + 0x48]
 11330: c8 67 07                 a0 = a0 + s1
 11333: 53 27 00 f0 23           jump @585 if a0 <u 4294963200
      :                          @580
 11338: 33 07 20 00 03           a0 = 0x30020
 11343: 95 77 00 10              a0 = a0 + 0x1000
 11347: 01                       fallthrough
      :                          @581
 11348: 82 78                    a1 = u64 [a0]
 11350: c9 87 09                 a2 = a0 - a1
 11353: ab 59 0f                 jump @585 if a2 != s0
      :                          @582
 11356: c9 68 09                 a2 = a1 - s1
 11359: 01                       fallthrough
      :                          @583
 11360: 82 7a                    a3 = u64 [a0]
 11362: ab 8a f2                 jump @581 if a3 != a1
      :                          @584
 11365: 7b 79                    u64 [a0] = a2
 11367: 01                       fallthrough
      :                          @585
 11368: 95 16 ff 07              s1 = sp + 0x7ff
 11372: 95 66 99 03              s1 = s1 + 0x399
 11376: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11380: 33 08 05                 a1 = 0x5
 11383: 33 00 54 01              ra = 0x154
 11387: 28 e5 18                 jump @1072
      :                          @586 [@dyn 155]
 11390: 95 17 55                 a0 = sp + 0x55
 11393: 33 08 03                 a1 = 0x3
 11396: 33 09                    a2 = 0
 11398: 33 0a                    a3 = 0
 11400: 0a 03                    ecalli 3 // 'write'
 11402: 7b 67 68                 u64 [s1 + 0x68] = a0
 11405: 33 07 50 00 01           a0 = 0x10050
 11410: 7b 17 10                 u64 [sp + 0x10] = a0
 11413: 7b 67 18                 u64 [s1 + 0x18] = a0
 11416: 82 18 40                 a1 = u64 [sp + 0x40]
 11419: 7b 68 20                 u64 [s1 + 0x20] = a1
 11422: 95 17 ff 07              a0 = sp + 0x7ff
 11426: 95 77 01 04              a0 = a0 + 0x401
 11430: 7b 67 28                 u64 [s1 + 0x28] = a0
 11433: 7b 68 30                 u64 [s1 + 0x30] = a1
 11436: 33 07 08 10 01           a0 = 0x11008
 11441: 7b 17 98 01              u64 [sp + 0x198] = a0
 11445: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11450: 49 21 b8 01              u64 [sp + 440] = 0
 11454: 95 17 ff 07              a0 = sp + 0x7ff
 11458: 95 77 b1 03              a0 = a0 + 0x3b1
 11462: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11466: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11471: 95 17 ff 07              a0 = sp + 0x7ff
 11475: 95 77 e1 03              a0 = a0 + 0x3e1
 11479: 95 18 98 01              a1 = sp + 0x198
 11483: 50 20 38 01 4b 07        ra = 312, jump @721
      :                          @587 [@dyn 156]
 11489: 82 65 50                 s0 = u64 [s1 + 0x50]
 11492: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11495: 95 17 ff 07              a0 = sp + 0x7ff
 11499: 95 77 99 03              a0 = a0 + 0x399
 11503: 82 76 48                 s1 = u64 [a0 + 0x48]
 11506: 33 07 02                 a0 = 0x2
 11509: 33 08                    a1 = 0
 11511: 33 09                    a2 = 0
 11513: 64 5a                    a3 = s0
 11515: 33 00 3a 01              ra = 0x13a
 11519: 0a 64                    ecalli 100 // 'log'
 11521: 01                       fallthrough
      :                          @588 [@dyn 157]
 11522: 82 17 48                 a0 = u64 [sp + 0x48]
 11525: c8 67 07                 a0 = a0 + s1
 11528: 33 08 20 00 03           a1 = 0x30020
 11533: 7b 18 08                 u64 [sp + 0x8] = a1
 11536: 53 27 00 f0 21           jump @594 if a0 <u 4294963200
      :                          @589
 11541: 82 18 08                 a1 = u64 [sp + 0x8]
 11544: 95 87 00 10              a0 = a1 + 0x1000
 11548: 01                       fallthrough
      :                          @590
 11549: 82 78                    a1 = u64 [a0]
 11551: c9 87 09                 a2 = a0 - a1
 11554: ab 59 0f                 jump @594 if a2 != s0
      :                          @591
 11557: c9 68 09                 a2 = a1 - s1
 11560: 01                       fallthrough
      :                          @592
 11561: 82 7a                    a3 = u64 [a0]
 11563: ab 8a f2                 jump @590 if a3 != a1
      :                          @593
 11566: 7b 79                    u64 [a0] = a2
 11568: 01                       fallthrough
      :                          @594
 11569: 95 16 ff 07              s1 = sp + 0x7ff
 11573: 95 66 99 03              s1 = s1 + 0x399
 11577: 82 67 68                 a0 = u64 [s1 + 0x68]
 11580: 33 08 01                 a1 = 0x1
 11583: 50 20 3c 01 21 18        ra = 316, jump @1072
      :                          @595 [@dyn 158]
 11589: 95 17 55                 a0 = sp + 0x55
 11592: 33 08 03                 a1 = 0x3
 11595: 95 19 52                 a2 = sp + 0x52
 11598: 33 0a 03                 a3 = 0x3
 11601: 0a 03                    ecalli 3 // 'write'
 11603: 7b 67 70                 u64 [s1 + 0x70] = a0
 11606: 95 17 ff 07              a0 = sp + 0x7ff
 11610: 95 77 09 04              a0 = a0 + 0x409
 11614: 7b 67 28                 u64 [s1 + 0x28] = a0
 11617: 33 07 38 10 01           a0 = 0x11038
 11622: 7b 17 98 01              u64 [sp + 0x198] = a0
 11626: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11631: 49 21 b8 01              u64 [sp + 440] = 0
 11635: 95 17 ff 07              a0 = sp + 0x7ff
 11639: 95 77 b1 03              a0 = a0 + 0x3b1
 11643: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11647: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 11652: 82 17 10                 a0 = u64 [sp + 0x10]
 11655: 7b 67 18                 u64 [s1 + 0x18] = a0
 11658: 82 17 40                 a0 = u64 [sp + 0x40]
 11661: 7b 67 20                 u64 [s1 + 0x20] = a0
 11664: 7b 67 30                 u64 [s1 + 0x30] = a0
 11667: 95 17 ff 07              a0 = sp + 0x7ff
 11671: 95 77 e1 03              a0 = a0 + 0x3e1
 11675: 95 18 98 01              a1 = sp + 0x198
 11679: 50 20 3e 01 87 06        ra = 318, jump @721
      :                          @596 [@dyn 159]
 11685: 82 65 50                 s0 = u64 [s1 + 0x50]
 11688: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11691: 82 66 48                 s1 = u64 [s1 + 0x48]
 11694: 33 07 02                 a0 = 0x2
 11697: 33 08                    a1 = 0
 11699: 33 09                    a2 = 0
 11701: 64 5a                    a3 = s0
 11703: 33 00 40 01              ra = 0x140
 11707: 0a 64                    ecalli 100 // 'log'
 11709: 01                       fallthrough
      :                          @597 [@dyn 160]
 11710: 82 17 48                 a0 = u64 [sp + 0x48]
 11713: c8 67 07                 a0 = a0 + s1
 11716: 53 27 00 f0 21           jump @603 if a0 <u 4294963200
      :                          @598
 11721: 82 18 08                 a1 = u64 [sp + 0x8]
 11724: 95 87 00 10              a0 = a1 + 0x1000
 11728: 01                       fallthrough
      :                          @599
 11729: 82 78                    a1 = u64 [a0]
 11731: c9 87 09                 a2 = a0 - a1
 11734: ab 59 0f                 jump @603 if a2 != s0
      :                          @600
 11737: c9 68 09                 a2 = a1 - s1
 11740: 01                       fallthrough
      :                          @601
 11741: 82 7a                    a3 = u64 [a0]
 11743: ab 8a f2                 jump @599 if a3 != a1
      :                          @602
 11746: 7b 79                    u64 [a0] = a2
 11748: 01                       fallthrough
      :                          @603
 11749: 95 16 ff 07              s1 = sp + 0x7ff
 11753: 95 66 99 03              s1 = s1 + 0x399
 11757: 82 67 70                 a0 = u64 [s1 + 0x70]
 11760: 33 08 02                 a1 = 0x2
 11763: 33 05 02                 s0 = 0x2
 11766: 50 20 42 01 6a 17        ra = 322, jump @1072
      :                          @604 [@dyn 161]
 11772: 95 17 55                 a0 = sp + 0x55
 11775: 33 08 03                 a1 = 0x3
 11778: 33 09                    a2 = 0
 11780: 33 0a                    a3 = 0
 11782: 0a 03                    ecalli 3 // 'write'
 11784: 7b 67 78                 u64 [s1 + 0x78] = a0
 11787: 82 17 30                 a0 = u64 [sp + 0x30]
 11790: 7b 67 18                 u64 [s1 + 0x18] = a0
 11793: 82 18 40                 a1 = u64 [sp + 0x40]
 11796: 7b 68 20                 u64 [s1 + 0x20] = a1
 11799: 95 17 ff 07              a0 = sp + 0x7ff
 11803: 95 77 11 04              a0 = a0 + 0x411
 11807: 7b 67 28                 u64 [s1 + 0x28] = a0
 11810: 7b 68 30                 u64 [s1 + 0x30] = a1
 11813: 33 07 68 10 01           a0 = 0x11068
 11818: 7b 17 98 01              u64 [sp + 0x198] = a0
 11822: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11827: 49 21 b8 01              u64 [sp + 440] = 0
 11831: 95 17 ff 07              a0 = sp + 0x7ff
 11835: 95 77 b1 03              a0 = a0 + 0x3b1
 11839: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 11843: 7b 15 b0 01              u64 [sp + 0x1b0] = s0
 11847: 95 17 ff 07              a0 = sp + 0x7ff
 11851: 95 77 e1 03              a0 = a0 + 0x3e1
 11855: 95 18 98 01              a1 = sp + 0x198
 11859: 50 20 44 01 d3 05        ra = 324, jump @721
      :                          @605 [@dyn 162]
 11865: 82 65 50                 s0 = u64 [s1 + 0x50]
 11868: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11871: 82 66 48                 s1 = u64 [s1 + 0x48]
 11874: 33 07 02                 a0 = 0x2
 11877: 33 08                    a1 = 0
 11879: 33 09                    a2 = 0
 11881: 64 5a                    a3 = s0
 11883: 33 00 46 01              ra = 0x146
 11887: 0a 64                    ecalli 100 // 'log'
 11889: 01                       fallthrough
      :                          @606 [@dyn 163]
 11890: 82 17 48                 a0 = u64 [sp + 0x48]
 11893: c8 67 07                 a0 = a0 + s1
 11896: 53 27 00 f0 21           jump @612 if a0 <u 4294963200
      :                          @607
 11901: 82 18 08                 a1 = u64 [sp + 0x8]
 11904: 95 87 00 10              a0 = a1 + 0x1000
 11908: 01                       fallthrough
      :                          @608
 11909: 82 78                    a1 = u64 [a0]
 11911: c9 87 09                 a2 = a0 - a1
 11914: ab 59 0f                 jump @612 if a2 != s0
      :                          @609
 11917: c9 68 09                 a2 = a1 - s1
 11920: 01                       fallthrough
      :                          @610
 11921: 82 7a                    a3 = u64 [a0]
 11923: ab 8a f2                 jump @608 if a3 != a1
      :                          @611
 11926: 7b 79                    u64 [a0] = a2
 11928: 01                       fallthrough
      :                          @612
 11929: 95 16 ff 07              s1 = sp + 0x7ff
 11933: 95 66 99 03              s1 = s1 + 0x399
 11937: 82 67 78                 a0 = u64 [s1 + 0x78]
 11940: 33 08 05                 a1 = 0x5
 11943: 50 20 48 01 b9 16        ra = 328, jump @1072
      :                          @613 [@dyn 164]
 11949: 95 18 55                 a1 = sp + 0x55
 11952: 33 09 03                 a2 = 0x3
 11955: 95 1a 98 00              a3 = sp + 0x98
 11959: 33 0c 00 01              a5 = 0x100
 11963: 82 17 38                 a0 = u64 [sp + 0x38]
 11966: 33 0b                    a4 = 0
 11968: 0a 02                    ecalli 2 // 'read'
 11970: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11974: 95 17 ff 07              a0 = sp + 0x7ff
 11978: 95 77 19 04              a0 = a0 + 0x419
 11982: 7b 67 28                 u64 [s1 + 0x28] = a0
 11985: 33 07 98 10 01           a0 = 0x11098
 11990: 7b 17 98 01              u64 [sp + 0x198] = a0
 11994: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 11999: 49 21 b8 01              u64 [sp + 440] = 0
 12003: 95 17 ff 07              a0 = sp + 0x7ff
 12007: 95 77 b1 03              a0 = a0 + 0x3b1
 12011: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12015: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12020: 82 17 10                 a0 = u64 [sp + 0x10]
 12023: 7b 67 18                 u64 [s1 + 0x18] = a0
 12026: 82 17 40                 a0 = u64 [sp + 0x40]
 12029: 7b 67 20                 u64 [s1 + 0x20] = a0
 12032: 7b 67 30                 u64 [s1 + 0x30] = a0
 12035: 95 17 ff 07              a0 = sp + 0x7ff
 12039: 95 77 e1 03              a0 = a0 + 0x3e1
 12043: 95 18 98 01              a1 = sp + 0x198
 12047: 50 20 4a 01 17 05        ra = 330, jump @721
      :                          @614 [@dyn 165]
 12053: 82 65 50                 s0 = u64 [s1 + 0x50]
 12056: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12059: 82 66 48                 s1 = u64 [s1 + 0x48]
 12062: 33 07 02                 a0 = 0x2
 12065: 33 08                    a1 = 0
 12067: 33 09                    a2 = 0
 12069: 64 5a                    a3 = s0
 12071: 33 00 4c 01              ra = 0x14c
 12075: 0a 64                    ecalli 100 // 'log'
 12077: 01                       fallthrough
      :                          @615 [@dyn 166]
 12078: 82 17 48                 a0 = u64 [sp + 0x48]
 12081: c8 67 07                 a0 = a0 + s1
 12084: 53 27 00 f0 21           jump @621 if a0 <u 4294963200
      :                          @616
 12089: 82 18 08                 a1 = u64 [sp + 0x8]
 12092: 95 87 00 10              a0 = a1 + 0x1000
 12096: 01                       fallthrough
      :                          @617
 12097: 82 78                    a1 = u64 [a0]
 12099: c9 87 09                 a2 = a0 - a1
 12102: ab 59 0f                 jump @621 if a2 != s0
      :                          @618
 12105: c9 68 09                 a2 = a1 - s1
 12108: 01                       fallthrough
      :                          @619
 12109: 82 7a                    a3 = u64 [a0]
 12111: ab 8a f2                 jump @617 if a3 != a1
      :                          @620
 12114: 7b 79                    u64 [a0] = a2
 12116: 01                       fallthrough
      :                          @621
 12117: 95 16 ff 07              s1 = sp + 0x7ff
 12121: 95 66 99 03              s1 = s1 + 0x399
 12125: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12129: 33 08 06                 a1 = 0x6
 12132: 50 20 4e 01 fc 15        ra = 334, jump @1072
      :                          @622 [@dyn 167]
 12138: 95 17 55                 a0 = sp + 0x55
 12141: 33 08 03                 a1 = 0x3
 12144: 33 09                    a2 = 0
 12146: 33 0a                    a3 = 0
 12148: 0a 03                    ecalli 3 // 'write'
 12150: 7b 67                    u64 [s1] = a0
 12152: 82 17 10                 a0 = u64 [sp + 0x10]
 12155: 7b 67 18                 u64 [s1 + 0x18] = a0
 12158: 33 07 c8 10 01           a0 = 0x110c8
 12163: 7b 17 98 01              u64 [sp + 0x198] = a0
 12167: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12172: 49 21 b8 01              u64 [sp + 440] = 0
 12176: 95 17 ff 07              a0 = sp + 0x7ff
 12180: 95 77 b1 03              a0 = a0 + 0x3b1
 12184: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12188: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12193: 82 17 40                 a0 = u64 [sp + 0x40]
 12196: 7b 67 20                 u64 [s1 + 0x20] = a0
 12199: 7b 66 28                 u64 [s1 + 0x28] = s1
 12202: 7b 67 30                 u64 [s1 + 0x30] = a0
 12205: 95 17 ff 07              a0 = sp + 0x7ff
 12209: 95 77 e1 03              a0 = a0 + 0x3e1
 12213: 95 18 98 01              a1 = sp + 0x198
 12217: 50 20 50 01 6d 04        ra = 336, jump @721
      :                          @623 [@dyn 168]
 12223: 82 65 50                 s0 = u64 [s1 + 0x50]
 12226: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12229: 82 66 48                 s1 = u64 [s1 + 0x48]
 12232: 33 07 02                 a0 = 0x2
 12235: 33 08                    a1 = 0
 12237: 33 09                    a2 = 0
 12239: 64 5a                    a3 = s0
 12241: 33 00 52 01              ra = 0x152
 12245: 0a 64                    ecalli 100 // 'log'
 12247: 01                       fallthrough
      :                          @624 [@dyn 169]
 12248: 82 17 48                 a0 = u64 [sp + 0x48]
 12251: c8 67 07                 a0 = a0 + s1
 12254: 53 27 00 f0 21           jump @630 if a0 <u 4294963200
      :                          @625
 12259: 82 18 08                 a1 = u64 [sp + 0x8]
 12262: 95 87 00 10              a0 = a1 + 0x1000
 12266: 01                       fallthrough
      :                          @626
 12267: 82 78                    a1 = u64 [a0]
 12269: c9 87 09                 a2 = a0 - a1
 12272: ab 59 0f                 jump @630 if a2 != s0
      :                          @627
 12275: c9 68 09                 a2 = a1 - s1
 12278: 01                       fallthrough
      :                          @628
 12279: 82 7a                    a3 = u64 [a0]
 12281: ab 8a f2                 jump @626 if a3 != a1
      :                          @629
 12284: 7b 79                    u64 [a0] = a2
 12286: 01                       fallthrough
      :                          @630
 12287: 95 16 ff 07              s1 = sp + 0x7ff
 12291: 95 66 99 03              s1 = s1 + 0x399
 12295: 82 67                    a0 = u64 [s1]
 12297: 33 08 07                 a1 = 0x7
 12300: 50 20 54 01 54 15        ra = 340, jump @1072
      :                          @631 [@dyn 170]
 12306: 82 15 30                 s0 = u64 [sp + 0x30]
 12309: 01                       fallthrough
      :                          @632
 12310: 95 18 98 00              a1 = sp + 0x98
 12314: 82 17 38                 a0 = u64 [sp + 0x38]
 12317: 0a 04                    ecalli 4 // 'info'
 12319: 7b 67 80 00              u64 [s1 + 0x80] = a0
 12323: 33 08 08                 a1 = 0x8
 12326: 50 20 56 01 3a 15        ra = 342, jump @1072
      :                          @633 [@dyn 171]
 12332: 7b 65 18                 u64 [s1 + 0x18] = s0
 12335: 82 18 40                 a1 = u64 [sp + 0x40]
 12338: 7b 68 20                 u64 [s1 + 0x20] = a1
 12341: 95 17 ff 07              a0 = sp + 0x7ff
 12345: 95 77 19 04              a0 = a0 + 0x419
 12349: 7b 67 28                 u64 [s1 + 0x28] = a0
 12352: 7b 68 30                 u64 [s1 + 0x30] = a1
 12355: 33 07 f8 10 01           a0 = 0x110f8
 12360: 7b 17 98 01              u64 [sp + 0x198] = a0
 12364: 49 21 a0 01 03           u64 [sp + 416] = 0x3
 12369: 49 21 b8 01              u64 [sp + 440] = 0
 12373: 95 17 ff 07              a0 = sp + 0x7ff
 12377: 95 77 b1 03              a0 = a0 + 0x3b1
 12381: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12385: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 12390: 95 17 ff 07              a0 = sp + 0x7ff
 12394: 95 77 e1 03              a0 = a0 + 0x3e1
 12398: 95 18 98 01              a1 = sp + 0x198
 12402: 50 20 58 01 b4 03        ra = 344, jump @721
      :                          @634 [@dyn 172]
 12408: 82 65 50                 s0 = u64 [s1 + 0x50]
 12411: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12414: 95 17 ff 07              a0 = sp + 0x7ff
 12418: 95 77 99 03              a0 = a0 + 0x399
 12422: 82 76 48                 s1 = u64 [a0 + 0x48]
 12425: 33 07 02                 a0 = 0x2
 12428: 33 08                    a1 = 0
 12430: 33 09                    a2 = 0
 12432: 64 5a                    a3 = s0
 12434: 33 00 5a 01              ra = 0x15a
 12438: 0a 64                    ecalli 100 // 'log'
 12440: 01                       fallthrough
      :                          @635 [@dyn 173]
 12441: 82 17 48                 a0 = u64 [sp + 0x48]
 12444: c8 67 07                 a0 = a0 + s1
 12447: 53 27 00 f0 25           jump @641 if a0 <u 4294963200
      :                          @636
 12452: 33 07 20 00 03           a0 = 0x30020
 12457: 95 77 00 10              a0 = a0 + 0x1000
 12461: 01                       fallthrough
      :                          @637
 12462: 82 78                    a1 = u64 [a0]
 12464: c9 87 09                 a2 = a0 - a1
 12467: ab 59 11                 jump @641 if a2 != s0
      :                          @638
 12470: c9 68 09                 a2 = a1 - s1
 12473: 01                       fallthrough
      :                          @639
 12474: 82 7a                    a3 = u64 [a0]
 12476: ab 8a f2                 jump @637 if a3 != a1
      :                          @640
 12479: 7b 79                    u64 [a0] = a2
 12481: 0a                       ecalli 0 // 'gas'
 12482: 28 04                    jump @642
      :                          @641
 12484: 0a                       ecalli 0 // 'gas'
 12485: 01                       fallthrough
      :                          @642
 12486: 95 16 ff 07              s1 = sp + 0x7ff
 12490: 95 66 99 03              s1 = s1 + 0x399
 12494: 7b 67                    u64 [s1] = a0
 12496: 33 08 09                 a1 = 0x9
 12499: 50 20 5c 01 8d 14        ra = 348, jump @1072
      :                          @643 [@dyn 174]
 12505: 7b 66 48                 u64 [s1 + 0x48] = s1
 12508: 82 17 40                 a0 = u64 [sp + 0x40]
 12511: 7b 67 50                 u64 [s1 + 0x50] = a0
 12514: 33 07 28 11 01           a0 = 0x11128
 12519: 7b 17 98 01              u64 [sp + 0x198] = a0
 12523: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 12528: 49 21 b8 01              u64 [sp + 440] = 0
 12532: 95 17 ff 07              a0 = sp + 0x7ff
 12536: 95 77 e1 03              a0 = a0 + 0x3e1
 12540: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 12544: 49 21 b0 01 01           u64 [sp + 432] = 0x1
 12549: 95 17 ff 07              a0 = sp + 0x7ff
 12553: 95 77 b1 03              a0 = a0 + 0x3b1
 12557: 95 18 98 01              a1 = sp + 0x198
 12561: 50 20 5e 01 15 03        ra = 350, jump @721
      :                          @644 [@dyn 175]
 12567: 82 65 20                 s0 = u64 [s1 + 0x20]
 12570: 82 6b 28                 a4 = u64 [s1 + 0x28]
 12573: 82 66 18                 s1 = u64 [s1 + 0x18]
 12576: 33 07 02                 a0 = 0x2
 12579: 33 08                    a1 = 0
 12581: 33 09                    a2 = 0
 12583: 64 5a                    a3 = s0
 12585: 33 00 60 01              ra = 0x160
 12589: 0a 64                    ecalli 100 // 'log'
 12591: 01                       fallthrough
      :                          @645 [@dyn 176]
 12592: 82 17 48                 a0 = u64 [sp + 0x48]
 12595: c8 67 07                 a0 = a0 + s1
 12598: 53 27 00 f0 25           jump @651 if a0 <u 4294963200
      :                          @646
 12603: 33 07 20 00 03           a0 = 0x30020
 12608: 95 77 00 10              a0 = a0 + 0x1000
 12612: 01                       fallthrough
      :                          @647
 12613: 82 78                    a1 = u64 [a0]
 12615: c9 87 09                 a2 = a0 - a1
 12618: ab 59 11                 jump @651 if a2 != s0
      :                          @648
 12621: c9 68 09                 a2 = a1 - s1
 12624: 01                       fallthrough
      :                          @649
 12625: 82 7a                    a3 = u64 [a0]
 12627: ab 8a f2                 jump @647 if a3 != a1
      :                          @650
 12630: 7b 79                    u64 [a0] = a2
 12632: 33 0b                    a4 = 0
 12634: 01                       fallthrough
      :                          @651
 12635: 49 21 b0 01              u64 [sp + 432] = 0
 12639: 49 21 a8 01              u64 [sp + 424] = 0
 12643: 49 21 a0 01              u64 [sp + 416] = 0
 12647: 49 21 98 01              u64 [sp + 408] = 0
 12651: 82 19 20                 a2 = u64 [sp + 0x20]
 12654: 82 1a 28                 a3 = u64 [sp + 0x28]
 12657: 55 19 21 79              jump @662 if a2 >=u 33
      :                          @652
 12661: 97 a6 20                 s1 = a3 << 0x20
 12664: 98 66 20                 s1 = s1 >> 0x20
 12667: 95 17 98 01              a0 = sp + 0x198
 12671: 95 15 98 01              s0 = sp + 0x198
 12675: 82 18 18                 a1 = u64 [sp + 0x18]
 12678: 50 20 62 01 15 05        ra = 354, jump @771
      :                          @653 [@dyn 177]
 12684: 3a 08 00 00 03           a1 = u64 [0x30000]
 12689: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 12699: ca 76 07                 a0 = s1 * a0
 12702: ae 87 2c                 jump @658 if a0 >=u a1
      :                          @654
 12705: 82 18 28                 a1 = u64 [sp + 0x28]
 12708: 51 18 09 18              jump @656 if a1 == 9
      :                          @655
 12712: 0a 08                    ecalli 8 // 'checkpoint'
 12714: 33 0a fa 05 01           a3 = 0x105fa
 12719: 33 07 02                 a0 = 0x2
 12722: 33 0b 11                 a4 = 0x11
 12725: 33 08                    a1 = 0
 12727: 33 09                    a2 = 0
 12729: 0a 64                    ecalli 100 // 'log'
 12731: 01                       fallthrough
      :                          @656
 12732: 95 67 2a                 a0 = s1 + 0x2a
 12735: 33 08 07                 a1 = 0x7
 12738: 50 20 64 01 9e 13        ra = 356, jump @1072
      :                          @657 [@dyn 178]
 12744: 32 07                    jump [a0]
      :                          @658
 12746: 95 17 98 01              a0 = sp + 0x198
 12750: 0a 10                    ecalli 16 // 'oyield'
 12752: 33 0a ce 00 01           a3 = 0x100ce
 12757: 33 07 02                 a0 = 0x2
 12760: 33 0b 10                 a4 = 0x10
 12763: 33 08                    a1 = 0
 12765: 33 09                    a2 = 0
 12767: 0a 64                    ecalli 100 // 'log'
 12769: 33 08 20                 a1 = 0x20
 12772: 28 2b e4                 jump @303
      :                          @659
 12775: 00                       trap
      :                          @660
 12776: 00                       trap
      :                          @661
 12777: 00                       trap
      :                          @662
 12778: 00                       trap
      :                          @663
 12779: 00                       trap
      :                          @664 [export #2: 'on_transfer']
 12780: 33 07 00 00 01           a0 = 0x10000
 12785: 33 08                    a1 = 0
 12787: 32 00                    ret
      :                          @665
 12789: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 12792: 7b 10 40                 u64 [sp + 0x40] = ra
 12795: 7b 15 38                 u64 [sp + 0x38] = s0
 12798: 7b 16 30                 u64 [sp + 0x30] = s1
 12801: c8 89 09                 a2 = a2 + a1
 12804: ac 89 53                 jump @673 if a2 <u a1
      :                          @666
 12807: 64 75                    s0 = a0
 12809: 82 77                    a0 = u64 [a0]
 12811: 97 78 01                 a1 = a0 << 0x1
 12814: 33 0a 08                 a3 = 0x8
 12817: e4 a9 09                 a2 = maxu(a2, a3)
 12820: e4 98 06                 s1 = maxu(a1, a2)
 12823: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 12826: 98 88 3f                 a1 = a1 >> 0x3f
 12829: 51 07 12                 jump @668 if a0 == 0
      :                          @667
 12832: 82 59 08                 a2 = u64 [s0 + 0x8]
 12835: 7b 19 18                 u64 [sp + 0x18] = a2
 12838: 49 11 20 01              u64 [sp + 32] = 0x1
 12842: 7b 17 28                 u64 [sp + 0x28] = a0
 12845: 28 06                    jump @669
      :                          @668
 12847: 49 11 20                 u64 [sp + 32] = 0
 12850: 01                       fallthrough
      :                          @669
 12851: 64 17                    a0 = sp
 12853: 95 1a 18                 a3 = sp + 0x18
 12856: 64 69                    a2 = s1
 12858: 50 20 66 01 33           ra = 358, jump @677
      :                          @670 [@dyn 179]
 12863: 82 18                    a1 = u64 [sp]
 12865: 82 17 08                 a0 = u64 [sp + 0x8]
 12868: 51 08 14                 jump @674 if a1 == 0
      :                          @671
 12871: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 12881: aa 87 0d                 jump @675 if a0 == a1
      :                          @672
 12884: 52 07 18                 jump @676 if a0 != 0
      :                          @673
 12887: 00                       trap
      :                          @674
 12888: 7b 57 08                 u64 [s0 + 0x8] = a0
 12891: 7b 56                    u64 [s0] = s1
 12893: 01                       fallthrough
      :                          @675
 12894: 82 10 40                 ra = u64 [sp + 0x40]
 12897: 82 15 38                 s0 = u64 [sp + 0x38]
 12900: 82 16 30                 s1 = u64 [sp + 0x30]
 12903: 95 11 48                 sp = sp + 0x48
 12906: 32 00                    ret
      :                          @676
 12908: 00                       trap
      :                          @677
 12909: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 12912: 7b 10 30                 u64 [sp + 0x30] = ra
 12915: 7b 15 28                 u64 [sp + 0x28] = s0
 12918: 7b 16 20                 u64 [sp + 0x20] = s1
 12921: 64 96                    s1 = a2
 12923: 64 73                    t1 = a0
 12925: 51 08 6f                 jump @687 if a1 == 0
      :                          @678
 12928: 82 a7 08                 a0 = u64 [a3 + 0x8]
 12931: 51 07 72                 jump @688 if a0 == 0
      :                          @679
 12934: 82 a9 10                 a2 = u64 [a3 + 0x10]
 12937: 51 09 9f 00              jump @695 if a2 == 0
      :                          @680
 12941: 82 a8                    a1 = u64 [a3]
 12943: 33 02 00 10              t0 = 0x1000
 12947: 33 04 20 00 03           t2 = 0x30020
 12952: c8 24 07                 a0 = t2 + t0
 12955: 01                       fallthrough
      :                          @681
 12956: 82 7a                    a3 = u64 [a0]
 12958: c8 6a 05                 s0 = a3 + s1
 12961: ac a5 c3 00              jump @701 if s0 <u a3
      :                          @682
 12965: 95 5b 01                 a4 = s0 + 0x1
 12968: 88 bc 01                 a5 = a4 <u 0x1
 12971: d8 b2 0b                 a4 = t0 <u a4
 12974: d4 cb 0b                 a4 = a4 | a5
 12977: 52 0b b3 00              jump @701 if a4 != 0
      :                          @683
 12981: 82 7b                    a4 = u64 [a0]
 12983: ab ab e5                 jump @681 if a4 != a3
      :                          @684
 12986: 7b 75                    u64 [a0] = s0
 12988: 33 0c                    a5 = 0
 12990: 7b 13 18                 u64 [sp + 0x18] = t1
 12993: c9 54 07                 a0 = t2 - s0
 12996: 95 77 00 10              a0 = a0 + 0x1000
 13000: 7b 17 10                 u64 [sp + 0x10] = a0
 13003: 7b 18 08                 u64 [sp + 0x8] = a1
 13006: 64 95                    s0 = a2
 13008: 7b 14                    u64 [sp] = t2
 13010: 50 20 68 01 c9 03        ra = 360, jump @771
      :                          @685 [@dyn 180]
 13016: 54 25 00 10 94 00        jump @702 if s0 <=u 4096
      :                          @686
 13022: 82 13 18                 t1 = u64 [sp + 0x18]
 13025: 82 18 10                 a1 = u64 [sp + 0x10]
 13028: 33 07                    a0 = 0
 13030: 7b 38 08                 u64 [t1 + 0x8] = a1
 13033: 28 b1 00                 jump @708
      :                          @687
 13036: 49 13 08                 u64 [t1 + 8] = 0
 13039: 33 07 01                 a0 = 0x1
 13042: 28 a8 00                 jump @708
      :                          @688
 13045: 33 07 00 10              a0 = 0x1000
 13049: 33 02 20 00 03           t0 = 0x30020
 13054: c8 72 09                 a2 = t0 + a0
 13057: 01                       fallthrough
      :                          @689
 13058: 82 9b                    a4 = u64 [a2]
 13060: c8 6b 0a                 a3 = a4 + s1
 13063: ac ba 5d                 jump @701 if a3 <u a4
      :                          @690
 13066: 95 ac 01                 a5 = a3 + 0x1
 13069: 88 c8 01                 a1 = a5 <u 0x1
 13072: d8 c7 0c                 a5 = a0 <u a5
 13075: d4 c8 08                 a1 = a1 | a5
 13078: 52 08 4e                 jump @701 if a1 != 0
      :                          @691
 13081: 82 98                    a1 = u64 [a2]
 13083: ab b8 e7                 jump @689 if a1 != a4
      :                          @692
 13086: 7b 9a                    u64 [a2] = a3
 13088: 33 0c                    a5 = 0
 13090: 01                       fallthrough
      :                          @693
 13091: ab b8 df                 jump @689 if a1 != a4
      :                          @694
 13094: 28 30                    jump @700
      :                          @695
 13096: 33 07 00 10              a0 = 0x1000
 13100: 33 02 20 00 03           t0 = 0x30020
 13105: c8 72 09                 a2 = t0 + a0
 13108: 01                       fallthrough
      :                          @696
 13109: 82 9b                    a4 = u64 [a2]
 13111: c8 6b 0a                 a3 = a4 + s1
 13114: ac ba 2a                 jump @701 if a3 <u a4
      :                          @697
 13117: 95 ac 01                 a5 = a3 + 0x1
 13120: 88 c8 01                 a1 = a5 <u 0x1
 13123: d8 c7 0c                 a5 = a0 <u a5
 13126: d4 c8 08                 a1 = a1 | a5
 13129: 52 08 1b                 jump @701 if a1 != 0
      :                          @698
 13132: 82 98                    a1 = u64 [a2]
 13134: ab b8 e7                 jump @696 if a1 != a4
      :                          @699
 13137: 7b 9a                    u64 [a2] = a3
 13139: 33 0c                    a5 = 0
 13141: 01                       fallthrough
      :                          @700
 13142: c9 a2 07                 a0 = t0 - a3
 13145: 95 78 00 10              a1 = a0 + 0x1000
 13149: 33 07                    a0 = 0
 13151: 7b 38 08                 u64 [t1 + 0x8] = a1
 13154: 28 38                    jump @708
      :                          @701
 13156: 33 07 01                 a0 = 0x1
 13159: 7b 37 08                 u64 [t1 + 0x8] = a0
 13162: 28 30                    jump @708
      :                          @702
 13164: 64 5c                    a5 = s0
 13166: 82 18                    a1 = u64 [sp]
 13168: 95 87 00 10              a0 = a1 + 0x1000
 13172: 82 13 18                 t1 = u64 [sp + 0x18]
 13175: 82 15 08                 s0 = u64 [sp + 0x8]
 13178: 01                       fallthrough
      :                          @703
 13179: 82 78                    a1 = u64 [a0]
 13181: c9 87 09                 a2 = a0 - a1
 13184: ab 59 11                 jump @707 if a2 != s0
      :                          @704
 13187: c9 c8 09                 a2 = a1 - a5
 13190: 01                       fallthrough
      :                          @705
 13191: 82 7a                    a3 = u64 [a0]
 13193: ab 8a f2                 jump @703 if a3 != a1
      :                          @706
 13196: 7b 79                    u64 [a0] = a2
 13198: 33 0b                    a4 = 0
 13200: 01                       fallthrough
      :                          @707
 13201: 82 18 10                 a1 = u64 [sp + 0x10]
 13204: 33 07                    a0 = 0
 13206: 7b 38 08                 u64 [t1 + 0x8] = a1
 13209: 01                       fallthrough
      :                          @708
 13210: 7b 36 10                 u64 [t1 + 0x10] = s1
 13213: 7b 37                    u64 [t1] = a0
 13215: 82 10 30                 ra = u64 [sp + 0x30]
 13218: 82 15 28                 s0 = u64 [sp + 0x28]
 13221: 82 16 20                 s1 = u64 [sp + 0x20]
 13224: 95 11 38                 sp = sp + 0x38
 13227: 32 00                    ret
      :                          @709
 13229: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 13232: 7b 10 40                 u64 [sp + 0x40] = ra
 13235: 7b 15 38                 u64 [sp + 0x38] = s0
 13238: 7b 16 30                 u64 [sp + 0x30] = s1
 13241: 95 88 01                 a1 = a1 + 0x1
 13244: 51 08 54                 jump @717 if a1 == 0
      :                          @710
 13247: 64 75                    s0 = a0
 13249: 82 77                    a0 = u64 [a0]
 13251: 97 79 01                 a2 = a0 << 0x1
 13254: 33 0a 08                 a3 = 0x8
 13257: e4 a8 08                 a1 = maxu(a1, a3)
 13260: e4 89 06                 s1 = maxu(a2, a1)
 13263: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 13266: 98 88 3f                 a1 = a1 >> 0x3f
 13269: 51 07 12                 jump @712 if a0 == 0
      :                          @711
 13272: 82 59 08                 a2 = u64 [s0 + 0x8]
 13275: 7b 19 18                 u64 [sp + 0x18] = a2
 13278: 49 11 20 01              u64 [sp + 32] = 0x1
 13282: 7b 17 28                 u64 [sp + 0x28] = a0
 13285: 28 06                    jump @713
      :                          @712
 13287: 49 11 20                 u64 [sp + 32] = 0
 13290: 01                       fallthrough
      :                          @713
 13291: 64 17                    a0 = sp
 13293: 95 1a 18                 a3 = sp + 0x18
 13296: 64 69                    a2 = s1
 13298: 50 20 6a 01 7b fe        ra = 362, jump @677
      :                          @714 [@dyn 181]
 13304: 82 18                    a1 = u64 [sp]
 13306: 82 17 08                 a0 = u64 [sp + 0x8]
 13309: 51 08 14                 jump @718 if a1 == 0
      :                          @715
 13312: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 13322: aa 87 0d                 jump @719 if a0 == a1
      :                          @716
 13325: 52 07 18                 jump @720 if a0 != 0
      :                          @717
 13328: 00                       trap
      :                          @718
 13329: 7b 57 08                 u64 [s0 + 0x8] = a0
 13332: 7b 56                    u64 [s0] = s1
 13334: 01                       fallthrough
      :                          @719
 13335: 82 10 40                 ra = u64 [sp + 0x40]
 13338: 82 15 38                 s0 = u64 [sp + 0x38]
 13341: 82 16 30                 s1 = u64 [sp + 0x30]
 13344: 95 11 48                 sp = sp + 0x48
 13347: 32 00                    ret
      :                          @720
 13349: 00                       trap
      :                          @721
 13350: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 13353: 7b 10 30                 u64 [sp + 0x30] = ra
 13356: 7b 15 28                 u64 [sp + 0x28] = s0
 13359: 7b 16 20                 u64 [sp + 0x20] = s1
 13362: 64 89                    a2 = a1
 13364: 82 8a 08                 a3 = u64 [a1 + 0x8]
 13367: 64 75                    s0 = a0
 13369: 51 0a 35                 jump @726 if a3 == 0
      :                          @722
 13372: 82 98                    a1 = u64 [a2]
 13374: 33 07                    a0 = 0
 13376: 95 8b 08                 a4 = a1 + 0x8
 13379: 01                       fallthrough
      :                          @723
 13380: 82 bc                    a5 = u64 [a4]
 13382: c8 c7 07                 a0 = a0 + a5
 13385: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 13388: 95 bb 10                 a4 = a4 + 0x10
 13391: 52 0a f5                 jump @723 if a3 != 0
      :                          @724
 13394: 82 9a 18                 a3 = u64 [a2 + 0x18]
 13397: 51 0a 24                 jump @728 if a3 == 0
      :                          @725
 13400: 82 88 08                 a1 = u64 [a1 + 0x8]
 13403: 8e 88                    a1 = a1 >u 0
 13405: 88 7a 10                 a3 = a0 <u 0x10
 13408: 85 aa 01                 a3 = a3 ^ 0x1
 13411: d4 a8 08                 a1 = a1 | a3
 13414: 89 7a                    a3 = a0 <s 0
 13416: e0 a8 08                 a1 = a1 & ~a3
 13419: 52 08 0a                 jump @727 if a1 != 0
      :                          @726
 13422: 33 07                    a0 = 0
 13424: 33 08 01                 a1 = 0x1
 13427: 28 48                    jump @736
      :                          @727
 13429: 97 77 01                 a0 = a0 << 0x1
 13432: 01                       fallthrough
      :                          @728
 13433: 51 07 3e                 jump @735 if a0 == 0
      :                          @729
 13436: 57 07 77                 jump @741 if a0 <s 0
      :                          @730
 13439: 64 53                    t1 = s0
 13441: 33 08 00 10              a1 = 0x1000
 13445: 33 02 20 00 03           t0 = 0x30020
 13450: c8 82 0b                 a4 = t0 + a1
 13453: 01                       fallthrough
      :                          @731
 13454: 82 bc                    a5 = u64 [a4]
 13456: c8 7c 0a                 a3 = a5 + a0
 13459: ac ca 5e                 jump @739 if a3 <u a5
      :                          @732
 13462: 95 a5 01                 s0 = a3 + 0x1
 13465: 88 56 01                 s1 = s0 <u 0x1
 13468: d8 58 05                 s0 = a1 <u s0
 13471: d4 65 05                 s0 = s0 | s1
 13474: 52 05 4f                 jump @739 if s0 != 0
      :                          @733
 13477: 82 b6                    s1 = u64 [a4]
 13479: ab c6 e7                 jump @731 if s1 != a5
      :                          @734
 13482: 7b ba                    u64 [a4] = a3
 13484: c9 a2 08                 a1 = t0 - a3
 13487: 95 88 00 10              a1 = a1 + 0x1000
 13491: 64 35                    s0 = t1
 13493: 28 06                    jump @736
      :                          @735
 13495: 33 08 01                 a1 = 0x1
 13498: 01                       fallthrough
      :                          @736
 13499: 7b 17                    u64 [sp] = a0
 13501: 7b 18 08                 u64 [sp + 0x8] = a1
 13504: 49 11 10                 u64 [sp + 16] = 0
 13507: 33 08 48 11 01           a1 = 0x11148
 13512: 64 17                    a0 = sp
 13514: 50 20 6c 01 56 0a        ra = 364, jump @939
      :                          @737 [@dyn 182]
 13520: 52 07 22                 jump @740 if a0 != 0
      :                          @738
 13523: 82 17 10                 a0 = u64 [sp + 0x10]
 13526: 82 18 08                 a1 = u64 [sp + 0x8]
 13529: 82 19                    a2 = u64 [sp]
 13531: 7b 57 10                 u64 [s0 + 0x10] = a0
 13534: 7b 58 08                 u64 [s0 + 0x8] = a1
 13537: 7b 59                    u64 [s0] = a2
 13539: 82 10 30                 ra = u64 [sp + 0x30]
 13542: 82 15 28                 s0 = u64 [sp + 0x28]
 13545: 82 16 20                 s1 = u64 [sp + 0x20]
 13548: 95 11 38                 sp = sp + 0x38
 13551: 32 00                    ret
      :                          @739
 13553: 00                       trap
      :                          @740
 13554: 00                       trap
      :                          @741
 13555: 00                       trap
      :                          @742 [@dyn 183]
 13556: 82 72                    t0 = u64 [a0]
 13558: 33 09 00 f0              a2 = 0xfffffffffffff000
 13562: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
 13566: ac 9a 27                 jump @748 if a3 <u a2
      :                          @743
 13569: 82 77 08                 a0 = u64 [a0 + 0x8]
 13572: 33 09 20 00 03           a2 = 0x30020
 13577: 95 99 00 10              a2 = a2 + 0x1000
 13581: 01                       fallthrough
      :                          @744
 13582: 82 9a                    a3 = u64 [a2]
 13584: c9 a9 0b                 a4 = a2 - a3
 13587: ab 7b 12                 jump @748 if a4 != a0
      :                          @745
 13590: c9 2a 0b                 a4 = a3 - t0
 13593: 01                       fallthrough
      :                          @746
 13594: 82 9c                    a5 = u64 [a2]
 13596: ab ac f2                 jump @744 if a5 != a3
      :                          @747
 13599: 7b 9b                    u64 [a2] = a4
 13601: 33 08                    a1 = 0
 13603: 32 00                    ret
      :                          @748
 13605: 32 00                    ret
      :                          @749 [@dyn 184]
 13607: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13610: 7b 10 18                 u64 [sp + 0x18] = ra
 13613: 7b 15 10                 u64 [sp + 0x10] = s0
 13616: 7b 16 08                 u64 [sp + 0x8] = s1
 13619: 64 75                    s0 = a0
 13621: 82 7a 10                 a3 = u64 [a0 + 0x10]
 13624: 82 77                    a0 = u64 [a0]
 13626: c9 a7 07                 a0 = a0 - a3
 13629: 64 96                    s1 = a2
 13631: ac 97 2b                 jump @752 if a0 <u a2
      :                          @750
 13634: 7b 1a                    u64 [sp] = a3
 13636: 82 57 08                 a0 = u64 [s0 + 0x8]
 13639: c8 a7 07                 a0 = a0 + a3
 13642: 64 69                    a2 = s1
 13644: 50 20 72 01 4f 01        ra = 370, jump @771
      :                          @751 [@dyn 185]
 13650: 82 17                    a0 = u64 [sp]
 13652: c8 76 06                 s1 = s1 + a0
 13655: 7b 56 10                 u64 [s0 + 0x10] = s1
 13658: 33 07                    a0 = 0
 13660: 82 10 18                 ra = u64 [sp + 0x18]
 13663: 82 15 10                 s0 = u64 [sp + 0x10]
 13666: 82 16 08                 s1 = u64 [sp + 0x8]
 13669: 95 11 20                 sp = sp + 0x20
 13672: 32 00                    ret
      :                          @752
 13674: 64 57                    a0 = s0
 13676: 7b 18                    u64 [sp] = a1
 13678: 64 a8                    a1 = a3
 13680: 64 69                    a2 = s1
 13682: 50 20 74 01 83 fc        ra = 372, jump @665
      :                          @753 [@dyn 186]
 13688: 82 18                    a1 = u64 [sp]
 13690: 82 5a 10                 a3 = u64 [s0 + 0x10]
 13693: 28 c5                    jump @750
      :                          @754 [@dyn 187]
 13695: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 13698: 7b 10 20                 u64 [sp + 0x20] = ra
 13701: 7b 15 18                 u64 [sp + 0x18] = s0
 13704: 7b 16 10                 u64 [sp + 0x10] = s1
 13707: 64 86                    s1 = a1
 13709: 83 88                    i32 a1 = a1 + 0
 13711: 33 09 80 00              a2 = 0x80
 13715: 64 7a                    a3 = a0
 13717: ae 98 2c                 jump @759 if a1 >=u a2
      :                          @755
 13720: 82 a8 10                 a1 = u64 [a3 + 0x10]
 13723: 82 a7                    a0 = u64 [a3]
 13725: ab 78 13                 jump @758 if a1 != a0
      :                          @756
 13728: 64 a7                    a0 = a3
 13730: 64 a5                    s0 = a3
 13732: 50 20 78 01 09 fe        ra = 376, jump @709
      :                          @757 [@dyn 188]
 13738: 64 5a                    a3 = s0
 13740: 82 58 10                 a1 = u64 [s0 + 0x10]
 13743: 01                       fallthrough
      :                          @758
 13744: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13747: c8 87 07                 a0 = a0 + a1
 13750: 78 76                    u8 [a0] = s1
 13752: 95 88 01                 a1 = a1 + 0x1
 13755: 7b a8 10                 u64 [a3 + 0x10] = a1
 13758: 28 ac 00                 jump @767
      :                          @759
 13761: 8b 67 0b                 i32 a0 = s1 >> 0xb
 13764: 48 11 0c                 u32 [sp + 12] = 0
 13767: 52 07 1c                 jump @761 if a0 != 0
      :                          @760
 13770: 98 67 06                 a0 = s1 >> 0x6
 13773: 86 77 c0 00              a0 = a0 | 0xc0
 13777: 78 17 0c                 u8 [sp + 0xc] = a0
 13780: 84 67 3f                 a0 = s1 & 0x3f
 13783: 86 77 80 00              a0 = a0 | 0x80
 13787: 78 17 0d                 u8 [sp + 0xd] = a0
 13790: 33 06 02                 s1 = 0x2
 13793: 28 63                    jump @764
      :                          @761
 13795: 8b 67 10                 i32 a0 = s1 >> 0x10
 13798: 52 07 29                 jump @763 if a0 != 0
      :                          @762
 13801: 98 67 0c                 a0 = s1 >> 0xc
 13804: 86 77 e0 00              a0 = a0 | 0xe0
 13808: 78 17 0c                 u8 [sp + 0xc] = a0
 13811: 97 67 34                 a0 = s1 << 0x34
 13814: 98 77 3a                 a0 = a0 >> 0x3a
 13817: 95 77 80 00              a0 = a0 + 0x80
 13821: 78 17 0d                 u8 [sp + 0xd] = a0
 13824: 84 67 3f                 a0 = s1 & 0x3f
 13827: 86 77 80 00              a0 = a0 | 0x80
 13831: 78 17 0e                 u8 [sp + 0xe] = a0
 13834: 33 06 03                 s1 = 0x3
 13837: 28 37                    jump @764
      :                          @763
 13839: 97 67 2b                 a0 = s1 << 0x2b
 13842: 98 77 3d                 a0 = a0 >> 0x3d
 13845: 95 77 f0 00              a0 = a0 + 0xf0
 13849: 78 17 0c                 u8 [sp + 0xc] = a0
 13852: 97 67 2e                 a0 = s1 << 0x2e
 13855: 98 77 3a                 a0 = a0 >> 0x3a
 13858: 95 77 80 00              a0 = a0 + 0x80
 13862: 78 17 0d                 u8 [sp + 0xd] = a0
 13865: 97 67 34                 a0 = s1 << 0x34
 13868: 98 77 3a                 a0 = a0 >> 0x3a
 13871: 95 77 80 00              a0 = a0 + 0x80
 13875: 78 17 0e                 u8 [sp + 0xe] = a0
 13878: 84 67 3f                 a0 = s1 & 0x3f
 13881: 86 77 80 00              a0 = a0 | 0x80
 13885: 78 17 0f                 u8 [sp + 0xf] = a0
 13888: 33 06 04                 s1 = 0x4
 13891: 01                       fallthrough
      :                          @764
 13892: 82 a5 10                 s0 = u64 [a3 + 0x10]
 13895: 82 a7                    a0 = u64 [a3]
 13897: c9 57 07                 a0 = a0 - s0
 13900: ac 67 2e                 jump @768 if a0 <u s1
      :                          @765
 13903: 7b 1a                    u64 [sp] = a3
 13905: 82 a7 08                 a0 = u64 [a3 + 0x8]
 13908: c8 57 07                 a0 = a0 + s0
 13911: 95 18 0c                 a1 = sp + 0xc
 13914: 64 69                    a2 = s1
 13916: 50 20 7a 01 3f           ra = 378, jump @771
      :                          @766 [@dyn 189]
 13921: c8 56 06                 s1 = s1 + s0
 13924: 82 17                    a0 = u64 [sp]
 13926: 7b 76 10                 u64 [a0 + 0x10] = s1
 13929: 01                       fallthrough
      :                          @767
 13930: 33 07                    a0 = 0
 13932: 82 10 20                 ra = u64 [sp + 0x20]
 13935: 82 15 18                 s0 = u64 [sp + 0x18]
 13938: 82 16 10                 s1 = u64 [sp + 0x10]
 13941: 95 11 28                 sp = sp + 0x28
 13944: 32 00                    ret
      :                          @768
 13946: 64 a7                    a0 = a3
 13948: 64 58                    a1 = s0
 13950: 64 69                    a2 = s1
 13952: 64 a5                    s0 = a3
 13954: 50 20 7c 01 73 fb        ra = 380, jump @665
      :                          @769 [@dyn 190]
 13960: 64 5a                    a3 = s0
 13962: 82 55 10                 s0 = u64 [s0 + 0x10]
 13965: 28 c2                    jump @765
      :                          @770 [@dyn 191]
 13967: 64 8a                    a3 = a1
 13969: 33 08 48 11 01           a1 = 0x11148
 13974: 64 a9                    a2 = a3
 13976: 28 88 08                 jump @939
      :                          @771
 13979: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 13982: 7b 10 18                 u64 [sp + 0x18] = ra
 13985: 7b 15 10                 u64 [sp + 0x10] = s0
 13988: 7b 16 08                 u64 [sp + 0x8] = s1
 13991: 53 19 10 64              jump @780 if a2 <u 16
      :                          @772
 13995: 8d 7a                    i32 a3 = -a0
 13997: 84 a2 07                 t0 = a3 & 0x7
 14000: c8 27 0b                 a4 = a0 + t0
 14003: 51 02 15                 jump @775 if t0 == 0
      :                          @773
 14006: 64 8c                    a5 = a1
 14008: 64 75                    s0 = a0
 14010: 01                       fallthrough
      :                          @774
 14011: 7c ca                    a3 = u8 [a5]
 14013: 78 5a                    u8 [s0] = a3
 14015: 95 55 01                 s0 = s0 + 0x1
 14018: 95 cc 01                 a5 = a5 + 0x1
 14021: ac b5 f6                 jump @774 if s0 <u a4
      :                          @775
 14024: c8 28 03                 t1 = a1 + t0
 14027: c9 29 02                 t0 = a2 - t0
 14030: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 14033: 84 38 07                 a1 = t1 & 0x7
 14036: c8 4b 0a                 a3 = a4 + t2
 14039: 51 08 3b                 jump @782 if a1 == 0
      :                          @776
 14042: 58 04 4b                 jump @785 if t2 <=s 0
      :                          @777
 14045: 97 38 03                 a1 = t1 << 0x3
 14048: 84 80 38                 ra = a1 & 0x38
 14051: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14054: 82 c5                    s0 = u64 [a5]
 14056: 8d 88                    i32 a1 = -a1
 14058: 84 88 38                 a1 = a1 & 0x38
 14061: 95 cc 08                 a5 = a5 + 0x8
 14064: 01                       fallthrough
      :                          @778
 14065: 82 c6                    s1 = u64 [a5]
 14067: d0 05 05                 s0 = s0 >> ra
 14070: cf 86 09                 a2 = s1 << a1
 14073: d4 59 09                 a2 = a2 | s0
 14076: 7b b9                    u64 [a4] = a2
 14078: 95 bb 08                 a4 = a4 + 0x8
 14081: 95 cc 08                 a5 = a5 + 0x8
 14084: 64 65                    s0 = s1
 14086: ac ab eb                 jump @778 if a4 <u a3
      :                          @779
 14089: 28 1c                    jump @785
      :                          @780
 14091: 64 7a                    a3 = a0
 14093: 52 09 21                 jump @786 if a2 != 0
      :                          @781
 14096: 28 2f                    jump @788
      :                          @782
 14098: 58 04 13                 jump @785 if t2 <=s 0
      :                          @783
 14101: 64 38                    a1 = t1
 14103: 01                       fallthrough
      :                          @784
 14104: 82 89                    a2 = u64 [a1]
 14106: 7b b9                    u64 [a4] = a2
 14108: 95 bb 08                 a4 = a4 + 0x8
 14111: 95 88 08                 a1 = a1 + 0x8
 14114: ac ab f6                 jump @784 if a4 <u a3
      :                          @785
 14117: c8 43 08                 a1 = t1 + t2
 14120: 84 29 07                 a2 = t0 & 0x7
 14123: 51 09 14                 jump @788 if a2 == 0
      :                          @786
 14126: c8 a9 09                 a2 = a2 + a3
 14129: 01                       fallthrough
      :                          @787
 14130: 7c 8b                    a4 = u8 [a1]
 14132: 78 ab                    u8 [a3] = a4
 14134: 95 aa 01                 a3 = a3 + 0x1
 14137: 95 88 01                 a1 = a1 + 0x1
 14140: ac 9a f6                 jump @787 if a3 <u a2
      :                          @788
 14143: 82 10 18                 ra = u64 [sp + 0x18]
 14146: 82 15 10                 s0 = u64 [sp + 0x10]
 14149: 82 16 08                 s1 = u64 [sp + 0x8]
 14152: 95 11 20                 sp = sp + 0x20
 14155: 32 00                    ret
      :                          @789
 14157: 53 19 10 48              jump @798 if a2 <u 16
      :                          @790
 14161: 8d 7a                    i32 a3 = -a0
 14163: 84 aa 07                 a3 = a3 & 0x7
 14166: c8 a7 0b                 a4 = a0 + a3
 14169: 51 0a 0e                 jump @793 if a3 == 0
      :                          @791
 14172: 64 7c                    a5 = a0
 14174: 01                       fallthrough
      :                          @792
 14175: 78 c8                    u8 [a5] = a1
 14177: 95 cc 01                 a5 = a5 + 0x1
 14180: ac bc fb                 jump @792 if a5 <u a4
      :                          @793
 14183: c9 a9 03                 t1 = a2 - a3
 14186: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 14189: c8 cb 0a                 a3 = a4 + a5
 14192: 58 0c 1d                 jump @796 if a5 <=s 0
      :                          @794
 14195: 84 82 ff 00              t0 = a1 & 0xff
 14199: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 14209: ca 92 0c                 a5 = t0 * a2
 14212: 01                       fallthrough
      :                          @795
 14213: 7b bc                    u64 [a4] = a5
 14215: 95 bb 08                 a4 = a4 + 0x8
 14218: ac ab fb                 jump @795 if a4 <u a3
      :                          @796
 14221: 84 39 07                 a2 = t1 & 0x7
 14224: 52 09 0a                 jump @799 if a2 != 0
      :                          @797
 14227: 28 13                    jump @801
      :                          @798
 14229: 64 7a                    a3 = a0
 14231: 51 09 0f                 jump @801 if a2 == 0
      :                          @799
 14234: c8 a9 09                 a2 = a2 + a3
 14237: 01                       fallthrough
      :                          @800
 14238: 78 a8                    u8 [a3] = a1
 14240: 95 aa 01                 a3 = a3 + 0x1
 14243: ac 9a fb                 jump @800 if a3 <u a2
      :                          @801
 14246: 32 00                    ret
      :                          @802 [@dyn 192]
 14248: 82 77                    a0 = u64 [a0]
 14250: 01                       fallthrough
      :                          @803
 14251: 28                       jump @803
      :                          @804
 14252: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 14255: 7b 10 50                 u64 [sp + 0x50] = ra
 14258: 7b 15 48                 u64 [sp + 0x48] = s0
 14261: 7b 16 40                 u64 [sp + 0x40] = s1
 14264: 7b 18                    u64 [sp] = a1
 14266: 98 79 04                 a2 = a0 >> 0x4
 14269: 33 08 27                 a1 = 0x27
 14272: 33 0a 31 06 01           a3 = 0x10631
 14277: 53 29 71 02 7b           jump @807 if a2 <u 625
      :                          @805
 14282: 33 08 27                 a1 = 0x27
 14285: 95 1b 3e                 a4 = sp + 0x3e
 14288: 3a 09 08 00 03           a2 = u64 [0x30008]
 14293: 7b 19 10                 u64 [sp + 0x10] = a2
 14296: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 14302: 33 03 7b 14              t1 = 0x147b
 14306: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 14312: 01                       fallthrough
      :                          @806
 14313: 64 72                    t0 = a0
 14315: 82 17 10                 a0 = u64 [sp + 0x10]
 14318: d6 72 07                 a0 = t0 mulhu a0
 14321: 98 77 0b                 a0 = a0 >> 0xb
 14324: 82 19 08                 a2 = u64 [sp + 0x8]
 14327: c0 97 09                 i32 a2 = a0 * a2
 14330: c8 29 06                 s1 = a2 + t0
 14333: 97 69 30                 a2 = s1 << 0x30
 14336: 98 99 32                 a2 = a2 >> 0x32
 14339: ca 39 09                 a2 = a2 * t1
 14342: 98 94 11                 t2 = a2 >> 0x11
 14345: 98 99 10                 a2 = a2 >> 0x10
 14348: 84 99 fe 07              a2 = a2 & 0x7fe
 14352: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
 14355: c8 6c 0c                 a5 = a5 + s1
 14358: 97 cc 31                 a5 = a5 << 0x31
 14361: 98 cc 30                 a5 = a5 >> 0x30
 14364: c8 a9 09                 a2 = a2 + a3
 14367: 7c 96                    s1 = u8 [a2]
 14369: 7c 99 01                 a2 = u8 [a2 + 0x1]
 14372: c8 ac 0c                 a5 = a5 + a3
 14375: 7c c5 01                 s0 = u8 [a5 + 0x1]
 14378: 7c cc                    a5 = u8 [a5]
 14380: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
 14383: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
 14386: 78 b5 01                 u8 [a4 + 0x1] = s0
 14389: 78 bc                    u8 [a4] = a5
 14391: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 14394: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 14397: ac 20 ac                 jump @806 if ra <u t0
      :                          @807
 14400: 54 17 63 36              jump @809 if a0 <=u 99
      :                          @808
 14404: 97 79 30                 a2 = a0 << 0x30
 14407: 98 99 32                 a2 = a2 >> 0x32
 14410: 96 99 7b 14              a2 = a2 * 0x147b
 14414: 98 99 11                 a2 = a2 >> 0x11
 14417: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
 14420: c8 b7 07                 a0 = a0 + a4
 14423: 97 77 31                 a0 = a0 << 0x31
 14426: 98 77 30                 a0 = a0 >> 0x30
 14429: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14432: c8 a7 07                 a0 = a0 + a3
 14435: 7c 7b 01                 a4 = u8 [a0 + 0x1]
 14438: 7c 77                    a0 = u8 [a0]
 14440: 95 1c 19                 a5 = sp + 0x19
 14443: c8 8c 0c                 a5 = a5 + a1
 14446: 78 cb 01                 u8 [a5 + 0x1] = a4
 14449: 78 c7                    u8 [a5] = a0
 14451: 64 97                    a0 = a2
 14453: 01                       fallthrough
      :                          @809
 14454: 55 17 0a 14              jump @811 if a0 >=u 10
      :                          @810
 14458: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 14461: 95 19 19                 a2 = sp + 0x19
 14464: c8 89 09                 a2 = a2 + a1
 14467: 83 77 30                 i32 a0 = a0 + 0x30
 14470: 78 97                    u8 [a2] = a0
 14472: 28 1c                    jump @812
      :                          @811
 14474: 97 77 01                 a0 = a0 << 0x1
 14477: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 14480: c8 a7 07                 a0 = a0 + a3
 14483: 7c 79 01                 a2 = u8 [a0 + 0x1]
 14486: 7c 77                    a0 = u8 [a0]
 14488: 95 1a 19                 a3 = sp + 0x19
 14491: c8 8a 0a                 a3 = a3 + a1
 14494: 78 a9 01                 u8 [a3 + 0x1] = a2
 14497: 78 a7                    u8 [a3] = a0
 14499: 01                       fallthrough
      :                          @812
 14500: 95 1a 19                 a3 = sp + 0x19
 14503: c8 8a 0a                 a3 = a3 + a1
 14506: 9a 8b 27                 a4 = 0x27 - a1
 14509: 33 08 10 06 01           a1 = 0x10610
 14514: 82 17                    a0 = u64 [sp]
 14516: 33 09                    a2 = 0
 14518: 50 20 82 01 13           ra = 386, jump @814
      :                          @813 [@dyn 193]
 14523: 82 10 50                 ra = u64 [sp + 0x50]
 14526: 82 15 48                 s0 = u64 [sp + 0x48]
 14529: 82 16 40                 s1 = u64 [sp + 0x40]
 14532: 95 11 58                 sp = sp + 0x58
 14535: 32 00                    ret
      :                          @814
 14537: 95 11 98                 sp = sp + 0xffffffffffffff98
 14540: 7b 10 60                 u64 [sp + 0x60] = ra
 14543: 7b 15 58                 u64 [sp + 0x58] = s0
 14546: 7b 16 50                 u64 [sp + 0x50] = s1
 14549: 80 73 34                 t1 = u32 [a0 + 0x34]
 14552: 7b 1a 20                 u64 [sp + 0x20] = a3
 14555: 64 9c                    a5 = a2
 14557: 84 36 01                 s1 = t1 & 0x1
 14560: 33 02 2b                 t0 = 0x2b
 14563: 33 09 00 00 11           a2 = 0x110000
 14568: 84 3a 04                 a3 = t1 & 0x4
 14571: 7b 1b 28                 u64 [sp + 0x28] = a4
 14574: c8 b6 04                 t2 = s1 + a4
 14577: 7b 1c 30                 u64 [sp + 0x30] = a5
 14580: 52 0a 10                 jump @817 if a3 != 0
      :                          @815
 14583: 49 11 38                 u64 [sp + 56] = 0
 14586: 82 78                    a1 = u64 [a0]
 14588: 94 69 2b                 a2 = 0x2b if s1 != 0
 14591: 52 08 35                 jump @821 if a1 != 0
      :                          @816
 14594: 28 56                    jump @826
      :                          @817
 14596: 7b 18 38                 u64 [sp + 0x38] = a1
 14599: 33 09                    a2 = 0
 14601: 51 0c 1b                 jump @820 if a5 == 0
      :                          @818
 14604: 82 1b 38                 a4 = u64 [sp + 0x38]
 14607: 01                       fallthrough
      :                          @819
 14608: 7d b5                    s0 = i8 [a4]
 14610: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 14613: 85 5a 01                 a3 = s0 ^ 0x1
 14616: c8 a9 09                 a2 = a2 + a3
 14619: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 14622: 95 bb 01                 a4 = a4 + 0x1
 14625: 52 0c ef                 jump @819 if a5 != 0
      :                          @820
 14628: c8 94 04                 t2 = t2 + a2
 14631: 33 09 00 00 11           a2 = 0x110000
 14636: 82 78                    a1 = u64 [a0]
 14638: db 62 09                 a2 = t0 if s1 != 0
 14641: 51 08 27                 jump @826 if a1 == 0
      :                          @821
 14644: 82 7a 08                 a3 = u64 [a0 + 0x8]
 14647: ae a4 21                 jump @826 if t2 >=u a3
      :                          @822
 14650: 84 38 08                 a1 = t1 & 0x8
 14653: 52 08 51                 jump @829 if a1 != 0
      :                          @823
 14656: 7c 76 38                 s1 = u8 [a0 + 0x38]
 14659: c9 4a 0a                 a3 = a3 - t2
 14662: 7b 19 18                 u64 [sp + 0x18] = a2
 14665: 5a 16 01 a0 00           jump @836 if s1 >s 1
      :                          @824
 14670: 52 06 ad 00              jump @838 if s1 != 0
      :                          @825
 14674: 7b 1a 10                 u64 [sp + 0x10] = a3
 14677: 28 ac 00                 jump @839
      :                          @826
 14680: 82 75 20                 s0 = u64 [a0 + 0x20]
 14683: 82 76 28                 s1 = u64 [a0 + 0x28]
 14686: 64 57                    a0 = s0
 14688: 64 68                    a1 = s1
 14690: 82 1a 38                 a3 = u64 [sp + 0x38]
 14693: 82 1b 30                 a4 = u64 [sp + 0x30]
 14696: 50 20 84 01 75 01        ra = 388, jump @859
      :                          @827 [@dyn 194]
 14702: 33 08 01                 a1 = 0x1
 14705: 52 07 be 00              jump @844 if a0 != 0
      :                          @828
 14709: 82 6c 18                 a5 = u64 [s1 + 0x18]
 14712: 64 57                    a0 = s0
 14714: 82 18 20                 a1 = u64 [sp + 0x20]
 14717: 82 19 28                 a2 = u64 [sp + 0x28]
 14720: 82 10 60                 ra = u64 [sp + 0x60]
 14723: 82 15 58                 s0 = u64 [sp + 0x58]
 14726: 82 16 50                 s1 = u64 [sp + 0x50]
 14729: 95 11 68                 sp = sp + 0x68
 14732: 32 0c                    jump [a5]
      :                          @829
 14734: 7b 1a 40                 u64 [sp + 0x40] = a3
 14737: 64 45                    s0 = t2
 14739: 81 78 30                 a1 = i32 [a0 + 0x30]
 14742: 7b 18 10                 u64 [sp + 0x10] = a1
 14745: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 14748: 7b 1a 08                 u64 [sp + 0x8] = a3
 14751: 82 7a 20                 a3 = u64 [a0 + 0x20]
 14754: 82 78 28                 a1 = u64 [a0 + 0x28]
 14757: 48 17 30 30              u32 [a0 + 48] = 0x30
 14761: 7b 17                    u64 [sp] = a0
 14763: 46 17 38 01              u8 [a0 + 56] = 0x1
 14767: 7b 1a 48                 u64 [sp + 0x48] = a3
 14770: 64 a7                    a0 = a3
 14772: 64 86                    s1 = a1
 14774: 82 1a 38                 a3 = u64 [sp + 0x38]
 14777: 82 1b 30                 a4 = u64 [sp + 0x30]
 14780: 50 20 86 01 21 01        ra = 390, jump @859
      :                          @830 [@dyn 195]
 14786: 52 07 69                 jump @843 if a0 != 0
      :                          @831
 14789: 82 17 40                 a0 = u64 [sp + 0x40]
 14792: c9 57 05                 s0 = a0 - s0
 14795: 95 55 01                 s0 = s0 + 0x1
 14798: 01                       fallthrough
      :                          @832
 14799: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 14802: 51 05 cb 00              jump @854 if s0 == 0
      :                          @833
 14806: 82 69 20                 a2 = u64 [s1 + 0x20]
 14809: 33 08 30                 a1 = 0x30
 14812: 82 17 48                 a0 = u64 [sp + 0x48]
 14815: b4 90 02 88 01           ra = 392, jump [a2]
      :                          @834 [@dyn 196]
 14820: 51 07 eb                 jump @832 if a0 == 0
      :                          @835
 14823: 28 44                    jump @843
      :                          @836
 14825: 52 16 02 12              jump @838 if s1 != 2
      :                          @837
 14829: 98 a6 01                 s1 = a3 >> 0x1
 14832: 95 a8 01                 a1 = a3 + 0x1
 14835: 98 88 01                 a1 = a1 >> 0x1
 14838: 7b 18 10                 u64 [sp + 0x10] = a1
 14841: 28 08                    jump @839
      :                          @838
 14843: 64 a6                    s1 = a3
 14845: 49 11 10                 u64 [sp + 16] = 0
 14848: 01                       fallthrough
      :                          @839
 14849: 82 78 20                 a1 = u64 [a0 + 0x20]
 14852: 7b 18 48                 u64 [sp + 0x48] = a1
 14855: 82 75 28                 s0 = u64 [a0 + 0x28]
 14858: 81 77 30                 a0 = i32 [a0 + 0x30]
 14861: 7b 17 40                 u64 [sp + 0x40] = a0
 14864: 95 66 01                 s1 = s1 + 0x1
 14867: 01                       fallthrough
      :                          @840
 14868: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 14871: 51 06 28                 jump @845 if s1 == 0
      :                          @841
 14874: 82 59 20                 a2 = u64 [s0 + 0x20]
 14877: 82 17 48                 a0 = u64 [sp + 0x48]
 14880: 82 18 40                 a1 = u64 [sp + 0x40]
 14883: b4 90 02 8a 01           ra = 394, jump [a2]
      :                          @842 [@dyn 197]
 14888: 51 07 ec                 jump @840 if a0 == 0
      :                          @843
 14891: 33 08 01                 a1 = 0x1
 14894: 01                       fallthrough
      :                          @844
 14895: 64 87                    a0 = a1
 14897: 82 10 60                 ra = u64 [sp + 0x60]
 14900: 82 15 58                 s0 = u64 [sp + 0x58]
 14903: 82 16 50                 s1 = u64 [sp + 0x50]
 14906: 95 11 68                 sp = sp + 0x68
 14909: 32 00                    ret
      :                          @845
 14911: 82 16 48                 s1 = u64 [sp + 0x48]
 14914: 64 67                    a0 = s1
 14916: 64 58                    a1 = s0
 14918: 82 19 18                 a2 = u64 [sp + 0x18]
 14921: 82 1a 38                 a3 = u64 [sp + 0x38]
 14924: 82 1b 30                 a4 = u64 [sp + 0x30]
 14927: 50 20 8c 01 8e 00        ra = 396, jump @859
      :                          @846 [@dyn 198]
 14933: 33 08 01                 a1 = 0x1
 14936: 52 07 d7                 jump @844 if a0 != 0
      :                          @847
 14939: 82 5a 18                 a3 = u64 [s0 + 0x18]
 14942: 64 67                    a0 = s1
 14944: 82 18 20                 a1 = u64 [sp + 0x20]
 14947: 82 19 28                 a2 = u64 [sp + 0x28]
 14950: b4 a0 02 8e 01           ra = 398, jump [a3]
      :                          @848 [@dyn 199]
 14955: 33 08 01                 a1 = 0x1
 14958: 52 07 c1                 jump @844 if a0 != 0
      :                          @849
 14961: 82 17 10                 a0 = u64 [sp + 0x10]
 14964: 9a 77                    a0 = -a0
 14966: 7b 17 38                 u64 [sp + 0x38] = a0
 14969: 33 06 ff                 s1 = 0xffffffffffffffff
 14972: 01                       fallthrough
      :                          @850
 14973: 82 17 38                 a0 = u64 [sp + 0x38]
 14976: c8 67 07                 a0 = a0 + s1
 14979: 51 17 ff 45              jump @857 if a0 == 4294967295
      :                          @851
 14983: 82 59 20                 a2 = u64 [s0 + 0x20]
 14986: 82 17 48                 a0 = u64 [sp + 0x48]
 14989: 82 18 40                 a1 = u64 [sp + 0x40]
 14992: b4 90 02 90 01           ra = 400, jump [a2]
      :                          @852 [@dyn 200]
 14997: 95 66 01                 s1 = s1 + 0x1
 15000: 51 07 e5                 jump @850 if a0 == 0
      :                          @853
 15003: 28 39                    jump @858
      :                          @854
 15005: 82 6a 18                 a3 = u64 [s1 + 0x18]
 15008: 82 17 48                 a0 = u64 [sp + 0x48]
 15011: 82 18 20                 a1 = u64 [sp + 0x20]
 15014: 82 19 28                 a2 = u64 [sp + 0x28]
 15017: b4 a0 02 92 01           ra = 402, jump [a3]
      :                          @855 [@dyn 201]
 15022: 33 08 01                 a1 = 0x1
 15025: 52 07 7e ff              jump @844 if a0 != 0
      :                          @856
 15029: 33 08                    a1 = 0
 15031: 82 16                    s1 = u64 [sp]
 15033: 82 17 10                 a0 = u64 [sp + 0x10]
 15036: 7a 67 30                 u32 [s1 + 0x30] = a0
 15039: 82 17 08                 a0 = u64 [sp + 0x8]
 15042: 78 67 38                 u8 [s1 + 0x38] = a0
 15045: 28 6a ff                 jump @844
      :                          @857
 15048: 82 16 10                 s1 = u64 [sp + 0x10]
 15051: 82 17 10                 a0 = u64 [sp + 0x10]
 15054: d8 76 08                 a1 = s1 <u a0
 15057: 28 5e ff                 jump @844
      :                          @858
 15060: 82 17 10                 a0 = u64 [sp + 0x10]
 15063: d8 76 08                 a1 = s1 <u a0
 15066: 28 55 ff                 jump @844
      :                          @859
 15069: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15072: 7b 10 20                 u64 [sp + 0x20] = ra
 15075: 7b 15 18                 u64 [sp + 0x18] = s0
 15078: 7b 16 10                 u64 [sp + 0x10] = s1
 15081: 83 9c                    i32 a5 = a2 + 0
 15083: 33 02 00 00 11           t0 = 0x110000
 15088: 64 a6                    s1 = a3
 15090: 64 85                    s0 = a1
 15092: 64 7a                    a3 = a0
 15094: aa 2c 21                 jump @862 if a5 == t0
      :                          @860
 15097: 82 5c 20                 a5 = u64 [s0 + 0x20]
 15100: 64 a7                    a0 = a3
 15102: 64 98                    a1 = a2
 15104: 7b 1b 08                 u64 [sp + 0x8] = a4
 15107: 7b 1a                    u64 [sp] = a3
 15109: b4 c0 02 94 01           ra = 404, jump [a5]
      :                          @861 [@dyn 202]
 15114: 82 1a                    a3 = u64 [sp]
 15116: 82 1b 08                 a4 = u64 [sp + 0x8]
 15119: 64 78                    a1 = a0
 15121: 33 07 01                 a0 = 0x1
 15124: 52 08 20                 jump @865 if a1 != 0
      :                          @862
 15127: 51 06 1a                 jump @864 if s1 == 0
      :                          @863
 15130: 82 5c 18                 a5 = u64 [s0 + 0x18]
 15133: 64 a7                    a0 = a3
 15135: 64 68                    a1 = s1
 15137: 64 b9                    a2 = a4
 15139: 82 10 20                 ra = u64 [sp + 0x20]
 15142: 82 15 18                 s0 = u64 [sp + 0x18]
 15145: 82 16 10                 s1 = u64 [sp + 0x10]
 15148: 95 11 28                 sp = sp + 0x28
 15151: 32 0c                    jump [a5]
      :                          @864
 15153: 33 07                    a0 = 0
 15155: 01                       fallthrough
      :                          @865
 15156: 82 10 20                 ra = u64 [sp + 0x20]
 15159: 82 15 18                 s0 = u64 [sp + 0x18]
 15162: 82 16 10                 s1 = u64 [sp + 0x10]
 15165: 95 11 28                 sp = sp + 0x28
 15168: 32 00                    ret
      :                          @866
 15170: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 15173: 7b 10 40                 u64 [sp + 0x40] = ra
 15176: 7b 15 38                 u64 [sp + 0x38] = s0
 15179: 7b 16 30                 u64 [sp + 0x30] = s1
 15182: 82 74                    t2 = u64 [a0]
 15184: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15187: d4 a4 0b                 a4 = t2 | a3
 15190: 64 93                    t1 = a2
 15192: 64 85                    s0 = a1
 15194: 51 0b ab 03              jump @938 if a4 == 0
      :                          @867
 15198: 7b 17 08                 u64 [sp + 0x8] = a0
 15201: 51 0a f5 00              jump @886 if a3 == 0
      :                          @868
 15205: 82 7c 18                 a5 = u64 [a0 + 0x18]
 15208: 33 0a                    a3 = 0
 15210: 49 11 18 02              u64 [sp + 24] = 0x2
 15214: 95 53 02                 t1 = s0 + 0x2
 15217: 95 cc 01                 a5 = a5 + 0x1
 15220: 33 00 00 00 11           ra = 0x110000
 15225: 33 07 df 00              a0 = 0xdf
 15229: 7b 15 10                 u64 [sp + 0x10] = s0
 15232: 64 59                    a2 = s0
 15234: 28 12                    jump @871
      :                          @869
 15236: 95 98 01                 a1 = a2 + 0x1
 15239: 01                       fallthrough
      :                          @870
 15240: c9 9a 0a                 a3 = a3 - a2
 15243: c8 8a 0a                 a3 = a3 + a1
 15246: 64 89                    a2 = a1
 15248: aa 05 bc 00              jump @885 if s0 == ra
      :                          @871
 15252: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 15255: 51 0c 68                 jump @880 if a5 == 0
      :                          @872
 15258: aa 39 b2 00              jump @885 if a2 == t1
      :                          @873
 15262: 7d 98                    a1 = i8 [a2]
 15264: 84 85 ff 00              s0 = a1 & 0xff
 15268: 59 08 e0                 jump @869 if a1 >=s 0
      :                          @874
 15271: 7c 98 01                 a1 = u8 [a2 + 0x1]
 15274: 84 56 1f                 s1 = s0 & 0x1f
 15277: 84 8b 3f                 a4 = a1 & 0x3f
 15280: ae 57 35                 jump @878 if a0 >=u s0
      :                          @875
 15283: 7c 98 02                 a1 = u8 [a2 + 0x2]
 15286: 97 bb 06                 a4 = a4 << 0x6
 15289: 84 88 3f                 a1 = a1 & 0x3f
 15292: d4 8b 02                 t0 = a4 | a1
 15295: 53 25 f0 00 31           jump @879 if s0 <u 240
      :                          @876
 15300: 7c 98 03                 a1 = u8 [a2 + 0x3]
 15303: 97 66 3d                 s1 = s1 << 0x3d
 15306: 98 66 2b                 s1 = s1 >> 0x2b
 15309: 97 22 06                 t0 = t0 << 0x6
 15312: 84 88 3f                 a1 = a1 & 0x3f
 15315: d4 82 05                 s0 = t0 | a1
 15318: d4 65 05                 s0 = s0 | s1
 15321: aa 05 73                 jump @885 if s0 == ra
      :                          @877
 15324: 95 98 04                 a1 = a2 + 0x4
 15327: 33 07 df 00              a0 = 0xdf
 15331: 28 a5                    jump @870
      :                          @878
 15333: 95 98 02                 a1 = a2 + 0x2
 15336: 97 65 06                 s0 = s1 << 0x6
 15339: d4 b5 05                 s0 = s0 | a4
 15342: 28 9a                    jump @870
      :                          @879
 15344: 95 98 03                 a1 = a2 + 0x3
 15347: 97 66 0c                 s1 = s1 << 0xc
 15350: d4 62 05                 s0 = t0 | s1
 15353: 33 07 df 00              a0 = 0xdf
 15357: 28 8b                    jump @870
      :                          @880
 15359: aa 39 4d                 jump @885 if a2 == t1
      :                          @881
 15362: 7d 98                    a1 = i8 [a2]
 15364: 59 08 b6 02              jump @928 if a1 >=s 0
      :                          @882
 15368: 84 88 ff 00              a1 = a1 & 0xff
 15372: 33 0b e0 00              a4 = 0xe0
 15376: ac b8 aa 02              jump @928 if a1 <u a4
      :                          @883
 15380: 33 0b f0 00              a4 = 0xf0
 15384: ac b8 a2 02              jump @928 if a1 <u a4
      :                          @884
 15388: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 15391: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 15394: 84 bb 3f                 a4 = a4 & 0x3f
 15397: 84 cc 3f                 a5 = a5 & 0x3f
 15400: 7c 99 03                 a2 = u8 [a2 + 0x3]
 15403: 97 88 3d                 a1 = a1 << 0x3d
 15406: 98 88 2b                 a1 = a1 >> 0x2b
 15409: 97 bb 0c                 a4 = a4 << 0xc
 15412: 97 cc 06                 a5 = a5 << 0x6
 15415: d4 cb 0b                 a4 = a4 | a5
 15418: 84 99 3f                 a2 = a2 & 0x3f
 15421: d4 b9 09                 a2 = a2 | a4
 15424: d4 98 08                 a1 = a1 | a2
 15427: 33 09 00 00 11           a2 = 0x110000
 15432: ab 98 72 02              jump @928 if a1 != a2
      :                          @885
 15436: 82 13 18                 t1 = u64 [sp + 0x18]
 15439: 82 15 10                 s0 = u64 [sp + 0x10]
 15442: 82 17 08                 a0 = u64 [sp + 0x8]
 15445: 01                       fallthrough
      :                          @886
 15446: 51 04 af 02              jump @938 if t2 == 0
      :                          @887
 15450: 82 7c 08                 a5 = u64 [a0 + 0x8]
 15453: 7b 13 18                 u64 [sp + 0x18] = t1
 15456: 7b 15 10                 u64 [sp + 0x10] = s0
 15459: 55 13 20 29              jump @893 if t1 >=u 32
      :                          @888
 15463: 33 09                    a2 = 0
 15465: 51 03 1c                 jump @891 if t1 == 0
      :                          @889
 15468: 64 58                    a1 = s0
 15470: 64 3a                    a3 = t1
 15472: 01                       fallthrough
      :                          @890
 15473: 7d 8b                    a4 = i8 [a1]
 15475: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 15478: 85 bb 01                 a4 = a4 ^ 0x1
 15481: c8 b9 09                 a2 = a2 + a4
 15484: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15487: 95 88 01                 a1 = a1 + 0x1
 15490: 52 0a ef                 jump @890 if a3 != 0
      :                          @891
 15493: ac c9 95 01              jump @910 if a2 <u a5
      :                          @892
 15497: 28 7c 02                 jump @938
      :                          @893
 15500: 7b 1c                    u64 [sp] = a5
 15502: 95 58 07                 a1 = s0 + 0x7
 15505: 64 5c                    a5 = s0
 15507: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 15510: c9 5c 0b                 a4 = a5 - s0
 15513: c8 b3 02                 t0 = t1 + a4
 15516: 84 2a 07                 a3 = t0 & 0x7
 15519: 33 08                    a1 = 0
 15521: aa c5 17                 jump @895 if s0 == a5
      :                          @894
 15524: 7d c6                    s1 = i8 [a5]
 15526: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 15529: 85 69 01                 a2 = s1 ^ 0x1
 15532: c8 98 08                 a1 = a1 + a2
 15535: 95 bb 01                 a4 = a4 + 0x1
 15538: 95 cc 01                 a5 = a5 + 0x1
 15541: 52 0b ef                 jump @894 if a4 != 0
      :                          @895
 15544: 33 0b                    a4 = 0
 15546: 51 0a 1e                 jump @898 if a3 == 0
      :                          @896
 15549: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 15552: c8 5c 0c                 a5 = a5 + s0
 15555: 01                       fallthrough
      :                          @897
 15556: 7d c7                    a0 = i8 [a5]
 15558: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 15561: 85 77 01                 a0 = a0 ^ 0x1
 15564: c8 7b 0b                 a4 = a4 + a0
 15567: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15570: 95 cc 01                 a5 = a5 + 0x1
 15573: 52 0a ef                 jump @897 if a3 != 0
      :                          @898
 15576: 98 20 03                 ra = t0 >> 0x3
 15579: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 15589: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 15599: 7b 17 28                 u64 [sp + 0x28] = a0
 15602: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 15612: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 15622: 7b 17 20                 u64 [sp + 0x20] = a0
 15625: c8 8b 09                 a2 = a4 + a1
 15628: 28 2d                    jump @900
      :                          @899
 15630: 97 45 03                 s0 = t2 << 0x3
 15633: c8 35 05                 s0 = s0 + t1
 15636: c9 40 00                 ra = ra - t2
 15639: 84 46 03                 s1 = t2 & 0x3
 15642: 82 1b 28                 a4 = u64 [sp + 0x28]
 15645: d2 b2 07                 a0 = t0 & a4
 15648: 98 28 08                 a1 = t0 >> 0x8
 15651: d2 b8 08                 a1 = a1 & a4
 15654: c8 87 07                 a0 = a0 + a1
 15657: 82 18 20                 a1 = u64 [sp + 0x20]
 15660: ca 87 07                 a0 = a0 * a1
 15663: 98 77 30                 a0 = a0 >> 0x30
 15666: c8 79 09                 a2 = a2 + a0
 15669: 52 06 8e 00              jump @907 if s1 != 0
      :                          @900
 15673: 51 00 79                 jump @905 if ra == 0
      :                          @901
 15676: 64 53                    t1 = s0
 15678: 33 07 c0 00              a0 = 0xc0
 15682: e6 70 04                 t2 = minu(ra, a0)
 15685: 33 02                    t0 = 0
 15687: 98 48 02                 a1 = t2 >> 0x2
 15690: 51 08 c4                 jump @899 if a1 == 0
      :                          @902
 15693: 97 88 05                 a1 = a1 << 0x5
 15696: c8 38 08                 a1 = a1 + t1
 15699: 64 36                    s1 = t1
 15701: 01                       fallthrough
      :                          @903
 15702: 82 67                    a0 = u64 [s1]
 15704: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 15707: 98 cc 07                 a5 = a5 >> 0x7
 15710: 98 77 06                 a0 = a0 >> 0x6
 15713: 82 6b 08                 a4 = u64 [s1 + 0x8]
 15716: d4 c7 07                 a0 = a0 | a5
 15719: d2 a7 07                 a0 = a0 & a3
 15722: c8 27 07                 a0 = a0 + t0
 15725: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 15728: 98 cc 07                 a5 = a5 >> 0x7
 15731: 82 65 10                 s0 = u64 [s1 + 0x10]
 15734: 98 bb 06                 a4 = a4 >> 0x6
 15737: d4 cb 0b                 a4 = a4 | a5
 15740: d2 ab 0b                 a4 = a4 & a3
 15743: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 15746: 98 cc 07                 a5 = a5 >> 0x7
 15749: 98 55 06                 s0 = s0 >> 0x6
 15752: d4 5c 0c                 a5 = a5 | s0
 15755: 82 65 18                 s0 = u64 [s1 + 0x18]
 15758: d2 ac 0c                 a5 = a5 & a3
 15761: c8 cb 0b                 a4 = a4 + a5
 15764: c8 b7 07                 a0 = a0 + a4
 15767: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 15770: 98 bb 07                 a4 = a4 >> 0x7
 15773: 98 55 06                 s0 = s0 >> 0x6
 15776: d4 5b 0b                 a4 = a4 | s0
 15779: d2 ab 0b                 a4 = a4 & a3
 15782: 95 66 20                 s1 = s1 + 0x20
 15785: c8 7b 02                 t0 = a4 + a0
 15788: ab 86 aa                 jump @903 if s1 != a1
      :                          @904
 15791: 28 5f ff                 jump @899
      :                          @905
 15794: 82 13 18                 t1 = u64 [sp + 0x18]
 15797: 82 15 10                 s0 = u64 [sp + 0x10]
 15800: 82 17 08                 a0 = u64 [sp + 0x8]
 15803: 82 1c                    a5 = u64 [sp]
 15805: ac c9 5d                 jump @910 if a2 <u a5
      :                          @906
 15808: 28 45 01                 jump @938
      :                          @907
 15811: 33 08                    a1 = 0
 15813: 84 47 fc 00              a0 = t2 & 0xfc
 15817: 97 77 03                 a0 = a0 << 0x3
 15820: c8 73 0b                 a4 = t1 + a0
 15823: 97 66 03                 s1 = s1 << 0x3
 15826: 82 13 18                 t1 = u64 [sp + 0x18]
 15829: 82 15 10                 s0 = u64 [sp + 0x10]
 15832: 01                       fallthrough
      :                          @908
 15833: 82 b7                    a0 = u64 [a4]
 15835: 95 bb 08                 a4 = a4 + 0x8
 15838: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 15841: 98 cc 07                 a5 = a5 >> 0x7
 15844: 98 77 06                 a0 = a0 >> 0x6
 15847: d4 c7 07                 a0 = a0 | a5
 15850: d2 a7 07                 a0 = a0 & a3
 15853: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 15856: c8 78 08                 a1 = a1 + a0
 15859: 52 06 e6                 jump @908 if s1 != 0
      :                          @909
 15862: 82 1a 28                 a3 = u64 [sp + 0x28]
 15865: d2 a8 07                 a0 = a1 & a3
 15868: 98 88 08                 a1 = a1 >> 0x8
 15871: d2 a8 08                 a1 = a1 & a3
 15874: c8 87 07                 a0 = a0 + a1
 15877: 82 18 20                 a1 = u64 [sp + 0x20]
 15880: ca 87 07                 a0 = a0 * a1
 15883: 98 77 30                 a0 = a0 >> 0x30
 15886: c8 79 09                 a2 = a2 + a0
 15889: 82 17 08                 a0 = u64 [sp + 0x8]
 15892: 82 1c                    a5 = u64 [sp]
 15894: ae c9 ef 00              jump @938 if a2 >=u a5
      :                          @910
 15898: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 15901: 33 08                    a1 = 0
 15903: 33 0b 01                 a4 = 0x1
 15906: c9 9c 0c                 a5 = a5 - a2
 15909: ad ab 0c                 jump @913 if a4 <s a3
      :                          @911
 15912: 51 0a 1a                 jump @915 if a3 == 0
      :                          @912
 15915: 64 c8                    a1 = a5
 15917: 49 01                    u64 [sp + 0] = 0
 15919: 28 16                    jump @916
      :                          @913
 15921: 52 1a 02 11              jump @915 if a3 != 2
      :                          @914
 15925: 98 c8 01                 a1 = a5 >> 0x1
 15928: 95 c9 01                 a2 = a5 + 0x1
 15931: 98 99 01                 a2 = a2 >> 0x1
 15934: 7b 19                    u64 [sp] = a2
 15936: 28 05                    jump @916
      :                          @915
 15938: 7b 1c                    u64 [sp] = a5
 15940: 01                       fallthrough
      :                          @916
 15941: 82 79 20                 a2 = u64 [a0 + 0x20]
 15944: 7b 19 28                 u64 [sp + 0x28] = a2
 15947: 82 75 28                 s0 = u64 [a0 + 0x28]
 15950: 81 77 30                 a0 = i32 [a0 + 0x30]
 15953: 7b 17 20                 u64 [sp + 0x20] = a0
 15956: 95 86 01                 s1 = a1 + 0x1
 15959: 01                       fallthrough
      :                          @917
 15960: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 15963: 51 06 19                 jump @921 if s1 == 0
      :                          @918
 15966: 82 59 20                 a2 = u64 [s0 + 0x20]
 15969: 82 17 28                 a0 = u64 [sp + 0x28]
 15972: 82 18 20                 a1 = u64 [sp + 0x20]
 15975: b4 90 02 96 01           ra = 406, jump [a2]
      :                          @919 [@dyn 203]
 15980: 51 07 ec                 jump @917 if a0 == 0
      :                          @920
 15983: 33 07 01                 a0 = 0x1
 15986: 28 72                    jump @934
      :                          @921
 15988: 82 5a 18                 a3 = u64 [s0 + 0x18]
 15991: 82 17 28                 a0 = u64 [sp + 0x28]
 15994: 82 18 10                 a1 = u64 [sp + 0x10]
 15997: 82 19 18                 a2 = u64 [sp + 0x18]
 16000: b4 a0 02 98 01           ra = 408, jump [a3]
      :                          @922 [@dyn 204]
 16005: 64 78                    a1 = a0
 16007: 33 07 01                 a0 = 0x1
 16010: 52 08 5a                 jump @934 if a1 != 0
      :                          @923
 16013: 82 17                    a0 = u64 [sp]
 16015: 9a 77                    a0 = -a0
 16017: 7b 17 18                 u64 [sp + 0x18] = a0
 16020: 33 06 ff                 s1 = 0xffffffffffffffff
 16023: 01                       fallthrough
      :                          @924
 16024: 82 17 18                 a0 = u64 [sp + 0x18]
 16027: c8 67 07                 a0 = a0 + s1
 16030: 33 08 ff                 a1 = 0xffffffffffffffff
 16033: aa 87 34                 jump @932 if a0 == a1
      :                          @925
 16036: 82 59 20                 a2 = u64 [s0 + 0x20]
 16039: 82 17 28                 a0 = u64 [sp + 0x28]
 16042: 82 18 20                 a1 = u64 [sp + 0x20]
 16045: b4 90 02 9a 01           ra = 410, jump [a2]
      :                          @926 [@dyn 205]
 16050: 95 66 01                 s1 = s1 + 0x1
 16053: 51 07 e3                 jump @924 if a0 == 0
      :                          @927
 16056: 28 26                    jump @933
      :                          @928
 16058: 82 13 18                 t1 = u64 [sp + 0x18]
 16061: 82 15 10                 s0 = u64 [sp + 0x10]
 16064: 51 0a 35                 jump @936 if a3 == 0
      :                          @929
 16067: ae 3a 2f                 jump @935 if a3 >=u t1
      :                          @930
 16070: c8 a5 08                 a1 = s0 + a3
 16073: 7d 88                    a1 = i8 [a1]
 16075: 33 09 c0                 a2 = 0xffffffffffffffc0
 16078: af 98 27                 jump @936 if a1 >=s a2
      :                          @931
 16081: 33 08                    a1 = 0
 16083: 28 25                    jump @937
      :                          @932
 16085: 82 16                    s1 = u64 [sp]
 16087: 82 17                    a0 = u64 [sp]
 16089: d8 76 07                 a0 = s1 <u a0
 16092: 28 08                    jump @934
      :                          @933
 16094: 82 17                    a0 = u64 [sp]
 16096: d8 76 07                 a0 = s1 <u a0
 16099: 01                       fallthrough
      :                          @934
 16100: 82 10 40                 ra = u64 [sp + 0x40]
 16103: 82 15 38                 s0 = u64 [sp + 0x38]
 16106: 82 16 30                 s1 = u64 [sp + 0x30]
 16109: 95 11 48                 sp = sp + 0x48
 16112: 32 00                    ret
      :                          @935
 16114: ab 3a df                 jump @931 if a3 != t1
      :                          @936
 16117: 64 58                    a1 = s0
 16119: 01                       fallthrough
      :                          @937
 16120: 82 17 08                 a0 = u64 [sp + 0x8]
 16123: db 8a 03                 t1 = a3 if a1 != 0
 16126: db 88 05                 s0 = a1 if a1 != 0
 16129: 52 04 59 fd              jump @887 if t2 != 0
      :                          @938
 16133: 82 78 28                 a1 = u64 [a0 + 0x28]
 16136: 82 77 20                 a0 = u64 [a0 + 0x20]
 16139: 82 8c 18                 a5 = u64 [a1 + 0x18]
 16142: 64 58                    a1 = s0
 16144: 64 39                    a2 = t1
 16146: 82 10 40                 ra = u64 [sp + 0x40]
 16149: 82 15 38                 s0 = u64 [sp + 0x38]
 16152: 82 16 30                 s1 = u64 [sp + 0x30]
 16155: 95 11 48                 sp = sp + 0x48
 16158: 32 0c                    jump [a5]
      :                          @939
 16160: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 16164: 7b 10 80 00              u64 [sp + 0x80] = ra
 16168: 7b 15 78                 u64 [sp + 0x78] = s0
 16171: 7b 16 70                 u64 [sp + 0x70] = s1
 16174: 49 11 60 20              u64 [sp + 96] = 0x20
 16178: 33 0a 03                 a3 = 0x3
 16181: 78 1a 68                 u8 [sp + 0x68] = a3
 16184: 82 96 20                 s1 = u64 [a2 + 0x20]
 16187: 49 11 30                 u64 [sp + 48] = 0
 16190: 49 11 40                 u64 [sp + 64] = 0
 16193: 7b 17 50                 u64 [sp + 0x50] = a0
 16196: 7b 18 58                 u64 [sp + 0x58] = a1
 16199: 51 06 0a 01              jump @961 if s1 == 0
      :                          @940
 16203: 82 97 28                 a0 = u64 [a2 + 0x28]
 16206: 51 07 79 01              jump @971 if a0 == 0
      :                          @941
 16210: 49 11 28                 u64 [sp + 40] = 0
 16213: 82 95                    s0 = u64 [a2]
 16215: 7b 19 08                 u64 [sp + 0x8] = a2
 16218: 82 98 10                 a1 = u64 [a2 + 0x10]
 16221: 7b 18 18                 u64 [sp + 0x18] = a1
 16224: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16227: 97 88 03                 a1 = a1 << 0x3
 16230: 98 88 03                 a1 = a1 >> 0x3
 16233: 95 88 01                 a1 = a1 + 0x1
 16236: 7b 18                    u64 [sp] = a1
 16238: 95 55 08                 s0 = s0 + 0x8
 16241: 96 78 38                 a1 = a0 * 0x38
 16244: 95 66 18                 s1 = s1 + 0x18
 16247: 33 07 80 01              a0 = 0x180
 16251: 7b 17 10                 u64 [sp + 0x10] = a0
 16254: 01                       fallthrough
      :                          @942
 16255: 7b 18 20                 u64 [sp + 0x20] = a1
 16258: 82 59                    a2 = u64 [s0]
 16260: 51 09 18                 jump @945 if a2 == 0
      :                          @943
 16263: 82 1a 58                 a3 = u64 [sp + 0x58]
 16266: 82 17 50                 a0 = u64 [sp + 0x50]
 16269: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 16272: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16275: b4 a0 02 9c 01           ra = 412, jump [a3]
      :                          @944 [@dyn 206]
 16280: 52 07 55 01              jump @974 if a0 != 0
      :                          @945
 16284: 81 67 10                 a0 = i32 [s1 + 0x10]
 16287: 7a 17 60                 u32 [sp + 0x60] = a0
 16290: 7c 67 18                 a0 = u8 [s1 + 0x18]
 16293: 78 17 68                 u8 [sp + 0x68] = a0
 16296: 81 67 14                 a0 = i32 [s1 + 0x14]
 16299: 7a 17 64                 u32 [sp + 0x64] = a0
 16302: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 16305: 82 67                    a0 = u64 [s1]
 16307: 51 08 26                 jump @950 if a1 == 0
      :                          @946
 16310: 52 18 01 16              jump @948 if a1 != 1
      :                          @947
 16314: 97 77 04                 a0 = a0 << 0x4
 16317: 82 18 18                 a1 = u64 [sp + 0x18]
 16320: c8 87 07                 a0 = a0 + a1
 16323: 82 78 08                 a1 = u64 [a0 + 0x8]
 16326: 82 19 10                 a2 = u64 [sp + 0x10]
 16329: aa 98 07                 jump @949 if a1 == a2
      :                          @948
 16332: 33 08                    a1 = 0
 16334: 28 0f                    jump @951
      :                          @949
 16336: 82 77                    a0 = u64 [a0]
 16338: 82 77                    a0 = u64 [a0]
 16340: 33 08 01                 a1 = 0x1
 16343: 28 06                    jump @951
      :                          @950
 16345: 33 08 01                 a1 = 0x1
 16348: 01                       fallthrough
      :                          @951
 16349: 7b 18 30                 u64 [sp + 0x30] = a1
 16352: 7b 17 38                 u64 [sp + 0x38] = a0
 16355: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 16358: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 16361: 51 08 26                 jump @956 if a1 == 0
      :                          @952
 16364: 52 18 01 16              jump @954 if a1 != 1
      :                          @953
 16368: 97 77 04                 a0 = a0 << 0x4
 16371: 82 18 18                 a1 = u64 [sp + 0x18]
 16374: c8 87 07                 a0 = a0 + a1
 16377: 82 78 08                 a1 = u64 [a0 + 0x8]
 16380: 82 19 10                 a2 = u64 [sp + 0x10]
 16383: aa 98 07                 jump @955 if a1 == a2
      :                          @954
 16386: 33 08                    a1 = 0
 16388: 28 0f                    jump @957
      :                          @955
 16390: 82 77                    a0 = u64 [a0]
 16392: 82 77                    a0 = u64 [a0]
 16394: 33 08 01                 a1 = 0x1
 16397: 28 06                    jump @957
      :                          @956
 16399: 33 08 01                 a1 = 0x1
 16402: 01                       fallthrough
      :                          @957
 16403: 7b 18 40                 u64 [sp + 0x40] = a1
 16406: 7b 17 48                 u64 [sp + 0x48] = a0
 16409: 82 67 08                 a0 = u64 [s1 + 0x8]
 16412: 97 77 04                 a0 = a0 << 0x4
 16415: 82 18 18                 a1 = u64 [sp + 0x18]
 16418: c8 78 08                 a1 = a1 + a0
 16421: 82 87                    a0 = u64 [a1]
 16423: 82 89 08                 a2 = u64 [a1 + 0x8]
 16426: 95 18 30                 a1 = sp + 0x30
 16429: b4 90 02 9e 01           ra = 414, jump [a2]
      :                          @958 [@dyn 207]
 16434: 52 07 bb 00              jump @974 if a0 != 0
      :                          @959
 16438: 95 55 10                 s0 = s0 + 0x10
 16441: 82 18 20                 a1 = u64 [sp + 0x20]
 16444: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 16447: 95 66 38                 s1 = s1 + 0x38
 16450: 82 17 28                 a0 = u64 [sp + 0x28]
 16453: 95 77 01                 a0 = a0 + 0x1
 16456: 7b 17 28                 u64 [sp + 0x28] = a0
 16459: 52 08 34 ff              jump @942 if a1 != 0
      :                          @960
 16463: 28 6b                    jump @969
      :                          @961
 16465: 82 97 18                 a0 = u64 [a2 + 0x18]
 16468: 51 07 73                 jump @971 if a0 == 0
      :                          @962
 16471: 82 95 10                 s0 = u64 [a2 + 0x10]
 16474: 33 0a                    a3 = 0
 16476: 97 78 04                 a1 = a0 << 0x4
 16479: c8 58 08                 a1 = a1 + s0
 16482: 7b 18 20                 u64 [sp + 0x20] = a1
 16485: 7b 19 08                 u64 [sp + 0x8] = a2
 16488: 82 96                    s1 = u64 [a2]
 16490: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 16493: 97 77 04                 a0 = a0 << 0x4
 16496: 98 77 04                 a0 = a0 >> 0x4
 16499: 95 77 01                 a0 = a0 + 0x1
 16502: 7b 17                    u64 [sp] = a0
 16504: 95 66 08                 s1 = s1 + 0x8
 16507: 01                       fallthrough
      :                          @963
 16508: 7b 1a 28                 u64 [sp + 0x28] = a3
 16511: 82 69                    a2 = u64 [s1]
 16513: 51 09 17                 jump @966 if a2 == 0
      :                          @964
 16516: 82 1a 58                 a3 = u64 [sp + 0x58]
 16519: 82 17 50                 a0 = u64 [sp + 0x50]
 16522: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 16525: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16528: b4 a0 02 a0 01           ra = 416, jump [a3]
      :                          @965 [@dyn 208]
 16533: 52 07 58                 jump @974 if a0 != 0
      :                          @966
 16536: 82 57                    a0 = u64 [s0]
 16538: 82 59 08                 a2 = u64 [s0 + 0x8]
 16541: 95 18 30                 a1 = sp + 0x30
 16544: b4 90 02 a2 01           ra = 418, jump [a2]
      :                          @967 [@dyn 209]
 16549: 52 07 48                 jump @974 if a0 != 0
      :                          @968
 16552: 95 66 10                 s1 = s1 + 0x10
 16555: 95 55 10                 s0 = s0 + 0x10
 16558: 82 1a 28                 a3 = u64 [sp + 0x28]
 16561: 95 aa 01                 a3 = a3 + 0x1
 16564: 82 17 20                 a0 = u64 [sp + 0x20]
 16567: ab 75 c5                 jump @963 if s0 != a0
      :                          @969
 16570: 82 19 08                 a2 = u64 [sp + 0x8]
 16573: 82 1a                    a3 = u64 [sp]
 16575: 82 97 08                 a0 = u64 [a2 + 0x8]
 16578: ac 7a 0d                 jump @972 if a3 <u a0
      :                          @970
 16581: 28 2d                    jump @975
      :                          @971
 16583: 33 0a                    a3 = 0
 16585: 82 97 08                 a0 = u64 [a2 + 0x8]
 16588: 54 07 26                 jump @975 if a0 <=u 0
      :                          @972
 16591: 82 97                    a0 = u64 [a2]
 16593: 97 a8 04                 a1 = a3 << 0x4
 16596: c8 87 09                 a2 = a0 + a1
 16599: 82 1a 58                 a3 = u64 [sp + 0x58]
 16602: 82 17 50                 a0 = u64 [sp + 0x50]
 16605: 82 98                    a1 = u64 [a2]
 16607: 82 99 08                 a2 = u64 [a2 + 0x8]
 16610: 82 aa 18                 a3 = u64 [a3 + 0x18]
 16613: b4 a0 02 a4 01           ra = 420, jump [a3]
      :                          @973 [@dyn 210]
 16618: 51 07 08                 jump @975 if a0 == 0
      :                          @974
 16621: 33 07 01                 a0 = 0x1
 16624: 28 05                    jump @976
      :                          @975
 16626: 33 07                    a0 = 0
 16628: 01                       fallthrough
      :                          @976
 16629: 82 10 80 00              ra = u64 [sp + 0x80]
 16633: 82 15 78                 s0 = u64 [sp + 0x78]
 16636: 82 16 70                 s1 = u64 [sp + 0x70]
 16639: 95 11 88 00              sp = sp + 0x88
 16643: 32 00                    ret
      :                          @977 [@dyn 211]
 16645: 32 00                    ret
      :                          @978 [@dyn 212]
 16647: 95 11 88                 sp = sp + 0xffffffffffffff88
 16650: 7b 10 70                 u64 [sp + 0x70] = ra
 16653: 7b 15 68                 u64 [sp + 0x68] = s0
 16656: 7b 16 60                 u64 [sp + 0x60] = s1
 16659: 64 93                    t1 = a2
 16661: 33 0c                    a5 = 0
 16663: 33 02                    t0 = 0
 16665: 33 0b                    a4 = 0
 16667: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
 16677: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 16683: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
 16693: 82 79 10                 a2 = u64 [a0 + 0x10]
 16696: 7b 19 48                 u64 [sp + 0x48] = a2
 16699: 82 79                    a2 = u64 [a0]
 16701: 7b 19 30                 u64 [sp + 0x30] = a2
 16704: 82 77 08                 a0 = u64 [a0 + 0x8]
 16707: 7b 17 28                 u64 [sp + 0x28] = a0
 16710: 7b 18 50                 u64 [sp + 0x50] = a1
 16713: 95 88 08                 a1 = a1 + 0x8
 16716: 7b 18                    u64 [sp] = a1
 16718: 33 07 21 06 01           a0 = 0x10621
 16723: 7b 17 08                 u64 [sp + 0x8] = a0
 16726: 33 05 0a                 s0 = 0xa
 16729: 7b 13 20                 u64 [sp + 0x20] = t1
 16732: 7b 14 18                 u64 [sp + 0x18] = t2
 16735: 7b 10 10                 u64 [sp + 0x10] = ra
 16738: 28 3a                    jump @982
      :                          @979
 16740: c8 89 07                 a0 = a2 + a1
 16743: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 16746: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 16749: 88 77 01                 a0 = a0 <u 0x1
 16752: 01                       fallthrough
      :                          @980
 16753: 82 1a 48                 a3 = u64 [sp + 0x48]
 16756: 78 a7                    u8 [a3] = a0
 16758: 82 17 28                 a0 = u64 [sp + 0x28]
 16761: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16764: 82 17 30                 a0 = u64 [sp + 0x30]
 16767: b4 a0 02 aa 01           ra = 426, jump [a3]
      :                          @981 [@dyn 213]
 16772: 64 52                    t0 = s0
 16774: 82 13 20                 t1 = u64 [sp + 0x20]
 16777: 82 14 18                 t2 = u64 [sp + 0x18]
 16780: 82 10 10                 ra = u64 [sp + 0x10]
 16783: 82 1c 58                 a5 = u64 [sp + 0x58]
 16786: 33 05 0a                 s0 = 0xa
 16789: 82 1b 38                 a4 = u64 [sp + 0x38]
 16792: 52 07 67 01              jump @1023 if a0 != 0
      :                          @982
 16796: 84 b7 ff 00              a0 = a4 & 0xff
 16800: 52 07 5b 01              jump @1022 if a0 != 0
      :                          @983
 16804: 7b 12 40                 u64 [sp + 0x40] = t0
 16807: ae c3 0a                 jump @986 if t1 >=u a5
      :                          @984
 16810: 28 f4 00                 jump @1013
      :                          @985
 16813: ac c3 f1 00              jump @1013 if t1 <u a5
      :                          @986
 16817: c9 c3 08                 a1 = t1 - a5
 16820: 82 16 50                 s1 = u64 [sp + 0x50]
 16823: c8 c6 06                 s1 = s1 + a5
 16826: 55 18 10 1d              jump @992 if a1 >=u 16
      :                          @987
 16830: aa c3 dd 00              jump @1012 if t1 == a5
      :                          @988
 16834: 33 0a                    a3 = 0
 16836: 01                       fallthrough
      :                          @989
 16837: c8 a6 07                 a0 = s1 + a3
 16840: 7c 77                    a0 = u8 [a0]
 16842: aa 57 aa 00              jump @1007 if a0 == s0
      :                          @990
 16846: 95 aa 01                 a3 = a3 + 0x1
 16849: ab a8 f4                 jump @989 if a1 != a3
      :                          @991
 16852: 28 c7 00                 jump @1012
      :                          @992
 16855: 95 69 07                 a2 = s1 + 0x7
 16858: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 16861: c9 6a 07                 a0 = a3 - s1
 16864: d3 6a 0a                 a3 = a3 ^ s1
 16867: 88 aa 01                 a3 = a3 <u 0x1
 16870: 88 7b 01                 a4 = a0 <u 0x1
 16873: d4 ba 0a                 a3 = a3 | a4
 16876: 7b 1c 58                 u64 [sp + 0x58] = a5
 16879: 51 0a 44                 jump @998 if a3 == 0
      :                          @993
 16882: 33 07                    a0 = 0
 16884: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16887: 01                       fallthrough
      :                          @994
 16888: 82 1b 58                 a4 = u64 [sp + 0x58]
 16891: 82 19                    a2 = u64 [sp]
 16893: c8 9b 0b                 a4 = a4 + a2
 16896: 01                       fallthrough
      :                          @995
 16897: c8 76 0c                 a5 = s1 + a0
 16900: 82 cc                    a5 = u64 [a5]
 16902: c8 7b 09                 a2 = a4 + a0
 16905: 82 99                    a2 = u64 [a2]
 16907: d3 0c 05                 s0 = a5 ^ ra
 16910: c8 45 05                 s0 = s0 + t2
 16913: e0 c5 0c                 a5 = s0 & ~a5
 16916: d3 09 05                 s0 = a2 ^ ra
 16919: 3a 0a 10 00 03           a3 = u64 [0x30010]
 16924: c8 45 05                 s0 = s0 + t2
 16927: e0 95 09                 a2 = s0 & ~a2
 16930: d4 c9 09                 a2 = a2 | a5
 16933: d2 a9 09                 a2 = a2 & a3
 16936: 52 09 1f                 jump @1001 if a2 != 0
      :                          @996
 16939: 95 77 10                 a0 = a0 + 0x10
 16942: ae 72 d3                 jump @995 if t0 >=u a0
      :                          @997
 16945: 28 16                    jump @1001
      :                          @998
 16947: c8 a6 0b                 a4 = s1 + a3
 16950: 7c bb                    a4 = u8 [a4]
 16952: aa 5b 54                 jump @1010 if a4 == s0
      :                          @999
 16955: 95 aa 01                 a3 = a3 + 0x1
 16958: ab a7 f5                 jump @998 if a0 != a3
      :                          @1000
 16961: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
 16964: ae 72 b4                 jump @994 if t0 >=u a0
      :                          @1001
 16967: aa 87 99 00              jump @1019 if a0 == a1
      :                          @1002
 16971: 33 0a                    a3 = 0
 16973: c8 76 06                 s1 = s1 + a0
 16976: c9 73 08                 a1 = t1 - a0
 16979: 82 1c 58                 a5 = u64 [sp + 0x58]
 16982: c9 c8 08                 a1 = a1 - a5
 16985: 33 05 0a                 s0 = 0xa
 16988: 82 12 40                 t0 = u64 [sp + 0x40]
 16991: 01                       fallthrough
      :                          @1003
 16992: c8 a6 09                 a2 = s1 + a3
 16995: 7c 99                    a2 = u8 [a2]
 16997: aa 59 0b                 jump @1006 if a2 == s0
      :                          @1004
 17000: 95 aa 01                 a3 = a3 + 0x1
 17003: ab a8 f5                 jump @1003 if a1 != a3
      :                          @1005
 17006: 28 2d                    jump @1012
      :                          @1006
 17008: c8 7a 0a                 a3 = a3 + a0
 17011: 01                       fallthrough
      :                          @1007
 17012: c8 ca 0a                 a3 = a3 + a5
 17015: 95 ac 01                 a5 = a3 + 0x1
 17018: ae 3a 33 ff              jump @985 if a3 >=u t1
      :                          @1008
 17022: 82 17 50                 a0 = u64 [sp + 0x50]
 17025: c8 7a 0a                 a3 = a3 + a0
 17028: 7c a7                    a0 = u8 [a3]
 17030: ab 57 27 ff              jump @985 if a0 != s0
      :                          @1009
 17034: 28 5d                    jump @1020
      :                          @1010
 17036: 82 1c 58                 a5 = u64 [sp + 0x58]
 17039: c8 ca 0a                 a3 = a3 + a5
 17042: 95 ac 01                 a5 = a3 + 0x1
 17045: ac 3a e9                 jump @1008 if a3 <u t1
      :                          @1011
 17048: 28 15 ff                 jump @985
      :                          @1012
 17051: 64 3c                    a5 = t1
 17053: 01                       fallthrough
      :                          @1013
 17054: 7b 1c 58                 u64 [sp + 0x58] = a5
 17057: 49 11 38 01              u64 [sp + 56] = 0x1
 17061: 64 25                    s0 = t0
 17063: 64 36                    s1 = t1
 17065: aa 32 52                 jump @1022 if t0 == t1
      :                          @1014
 17068: 82 17 48                 a0 = u64 [sp + 0x48]
 17071: 7c 77                    a0 = u8 [a0]
 17073: 51 07 1d                 jump @1017 if a0 == 0
      :                          @1015
 17076: 82 17 28                 a0 = u64 [sp + 0x28]
 17079: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17082: 33 09 04                 a2 = 0x4
 17085: 82 17 30                 a0 = u64 [sp + 0x30]
 17088: 82 18 08                 a1 = u64 [sp + 0x8]
 17091: b4 a0 02 ac 01           ra = 428, jump [a3]
      :                          @1016 [@dyn 214]
 17096: 82 12 40                 t0 = u64 [sp + 0x40]
 17099: 52 07 34                 jump @1023 if a0 != 0
      :                          @1017
 17102: c9 26 09                 a2 = s1 - t0
 17105: 82 18 50                 a1 = u64 [sp + 0x50]
 17108: c8 28 08                 a1 = a1 + t0
 17111: ab 26 8d fe              jump @979 if s1 != t0
      :                          @1018
 17115: 33 07                    a0 = 0
 17117: 28 94 fe                 jump @980
      :                          @1019
 17120: 64 3c                    a5 = t1
 17122: 82 12 40                 t0 = u64 [sp + 0x40]
 17125: 28 b9                    jump @1013
      :                          @1020
 17127: 49 11 38                 u64 [sp + 56] = 0
 17130: 64 c6                    s1 = a5
 17132: 64 c5                    s0 = a5
 17134: 7b 1c 58                 u64 [sp + 0x58] = a5
 17137: 82 17 48                 a0 = u64 [sp + 0x48]
 17140: 7c 77                    a0 = u8 [a0]
 17142: 52 07 be                 jump @1015 if a0 != 0
      :                          @1021
 17145: 28 d5                    jump @1017
      :                          @1022
 17147: 33 07                    a0 = 0
 17149: 28 06                    jump @1024
      :                          @1023
 17151: 33 07 01                 a0 = 0x1
 17154: 01                       fallthrough
      :                          @1024
 17155: 82 10 70                 ra = u64 [sp + 0x70]
 17158: 82 15 68                 s0 = u64 [sp + 0x68]
 17161: 82 16 60                 s1 = u64 [sp + 0x60]
 17164: 95 11 78                 sp = sp + 0x78
 17167: 32 00                    ret
      :                          @1025 [@dyn 215]
 17169: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17172: 7b 10 20                 u64 [sp + 0x20] = ra
 17175: 7b 15 18                 u64 [sp + 0x18] = s0
 17178: 7b 16 10                 u64 [sp + 0x10] = s1
 17181: 82 75 10                 s0 = u64 [a0 + 0x10]
 17184: 7c 59                    a2 = u8 [s0]
 17186: 82 7b                    a4 = u64 [a0]
 17188: 82 76 08                 s1 = u64 [a0 + 0x8]
 17191: 51 09 33                 jump @1029 if a2 == 0
      :                          @1026
 17194: 82 6a 18                 a3 = u64 [s1 + 0x18]
 17197: 7b 18 08                 u64 [sp + 0x8] = a1
 17200: 33 08 21 06 01           a1 = 0x10621
 17205: 33 09 04                 a2 = 0x4
 17208: 64 b7                    a0 = a4
 17210: 7b 1b                    u64 [sp] = a4
 17212: b4 a0 02 b0 01           ra = 432, jump [a3]
      :                          @1027 [@dyn 216]
 17217: 82 18 08                 a1 = u64 [sp + 0x8]
 17220: 82 1b                    a4 = u64 [sp]
 17222: 51 07 14                 jump @1029 if a0 == 0
      :                          @1028
 17225: 33 07 01                 a0 = 0x1
 17228: 82 10 20                 ra = u64 [sp + 0x20]
 17231: 82 15 18                 s0 = u64 [sp + 0x18]
 17234: 82 16 10                 s1 = u64 [sp + 0x10]
 17237: 95 11 28                 sp = sp + 0x28
 17240: 32 00                    ret
      :                          @1029
 17242: 83 87                    i32 a0 = a1 + 0
 17244: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17247: 88 77 01                 a0 = a0 <u 0x1
 17250: 78 57                    u8 [s0] = a0
 17252: 82 6c 20                 a5 = u64 [s1 + 0x20]
 17255: 64 b7                    a0 = a4
 17257: 82 10 20                 ra = u64 [sp + 0x20]
 17260: 82 15 18                 s0 = u64 [sp + 0x18]
 17263: 82 16 10                 s1 = u64 [sp + 0x10]
 17266: 95 11 28                 sp = sp + 0x28
 17269: 32 0c                    jump [a5]
      :                          @1030 [@dyn 217]
 17271: 64 8a                    a3 = a1
 17273: 33 08 78 11 01           a1 = 0x11178
 17278: 64 a9                    a2 = a3
 17280: 28 a0 fb                 jump @939
      :                          @1031
 17283: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 17287: 7b 10 88 00              u64 [sp + 0x88] = ra
 17291: 7b 15 80 00              u64 [sp + 0x80] = s0
 17295: 7b 16 78                 u64 [sp + 0x78] = s1
 17298: 64 75                    s0 = a0
 17300: 7c 77 08                 a0 = u8 [a0 + 0x8]
 17303: 64 8b                    a4 = a1
 17305: 33 08 01                 a1 = 0x1
 17308: 33 06 01                 s1 = 0x1
 17311: 51 07 1d                 jump @1033 if a0 == 0
      :                          @1032
 17314: 78 56 08                 u8 [s0 + 0x8] = s1
 17317: 46 15 09 01              u8 [s0 + 9] = 0x1
 17321: 64 57                    a0 = s0
 17323: 82 10 88 00              ra = u64 [sp + 0x88]
 17327: 82 15 80 00              s0 = u64 [sp + 0x80]
 17331: 82 16 78                 s1 = u64 [sp + 0x78]
 17334: 95 11 90 00              sp = sp + 0x90
 17338: 32 00                    ret
      :                          @1033
 17340: 64 9a                    a3 = a2
 17342: 82 5c                    a5 = u64 [s0]
 17344: 80 c7 34                 a0 = u32 [a5 + 0x34]
 17347: 7c 58 09                 a1 = u8 [s0 + 0x9]
 17350: 84 79 04                 a2 = a0 & 0x4
 17353: 52 09 45                 jump @1039 if a2 != 0
      :                          @1034
 17356: 51 08 32                 jump @1037 if a1 == 0
      :                          @1035
 17359: 82 c8 28                 a1 = u64 [a5 + 0x28]
 17362: 82 c7 20                 a0 = u64 [a5 + 0x20]
 17365: 82 83 18                 t1 = u64 [a1 + 0x18]
 17368: 33 08 29 06 01           a1 = 0x10629
 17373: 33 09 02                 a2 = 0x2
 17376: 64 a6                    s1 = a3
 17378: 7b 1b 10                 u64 [sp + 0x10] = a4
 17381: 7b 1c 08                 u64 [sp + 0x8] = a5
 17384: b4 30 02 b4 01           ra = 436, jump [t1]
      :                          @1036 [@dyn 218]
 17389: 82 1c 08                 a5 = u64 [sp + 0x8]
 17392: 82 1b 10                 a4 = u64 [sp + 0x10]
 17395: 64 6a                    a3 = s1
 17397: 33 08 01                 a1 = 0x1
 17400: 33 06 01                 s1 = 0x1
 17403: 52 07 a7                 jump @1032 if a0 != 0
      :                          @1037
 17406: 64 b7                    a0 = a4
 17408: 64 c8                    a1 = a5
 17410: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @1038 [@dyn 219]
 17415: 33 08 01                 a1 = 0x1
 17418: 64 76                    s1 = a0
 17420: 28 96                    jump @1032
      :                          @1039
 17422: 52 08 37                 jump @1043 if a1 != 0
      :                          @1040
 17425: 82 c8 28                 a1 = u64 [a5 + 0x28]
 17428: 82 c7 20                 a0 = u64 [a5 + 0x20]
 17431: 82 83 18                 t1 = u64 [a1 + 0x18]
 17434: 33 08 2d 06 01           a1 = 0x1062d
 17439: 33 09 01                 a2 = 0x1
 17442: 33 06 01                 s1 = 0x1
 17445: 7b 1a                    u64 [sp] = a3
 17447: 7b 1b 10                 u64 [sp + 0x10] = a4
 17450: 7b 1c 08                 u64 [sp + 0x8] = a5
 17453: b4 30 02 b8 01           ra = 440, jump [t1]
      :                          @1041 [@dyn 220]
 17458: 82 1c 08                 a5 = u64 [sp + 0x8]
 17461: 82 1b 10                 a4 = u64 [sp + 0x10]
 17464: 82 1a                    a3 = u64 [sp]
 17466: 33 08 01                 a1 = 0x1
 17469: 52 07 65 ff              jump @1032 if a0 != 0
      :                          @1042
 17473: 81 c7 34                 a0 = i32 [a5 + 0x34]
 17476: 01                       fallthrough
      :                          @1043
 17477: 33 06 01                 s1 = 0x1
 17480: 78 16 37                 u8 [sp + 0x37] = s1
 17483: 82 c8 20                 a1 = u64 [a5 + 0x20]
 17486: 82 c9 28                 a2 = u64 [a5 + 0x28]
 17489: 7b 18 18                 u64 [sp + 0x18] = a1
 17492: 7b 19 20                 u64 [sp + 0x20] = a2
 17495: 95 18 37                 a1 = sp + 0x37
 17498: 7b 18 28                 u64 [sp + 0x28] = a1
 17501: 81 c8 30                 a1 = i32 [a5 + 0x30]
 17504: 7c c9 38                 a2 = u8 [a5 + 0x38]
 17507: 82 c3                    t1 = u64 [a5]
 17509: 82 c4 08                 t2 = u64 [a5 + 0x8]
 17512: 82 c0 10                 ra = u64 [a5 + 0x10]
 17515: 82 c2 18                 t0 = u64 [a5 + 0x18]
 17518: 7a 17 6c                 u32 [sp + 0x6c] = a0
 17521: 7a 18 68                 u32 [sp + 0x68] = a1
 17524: 78 19 70                 u8 [sp + 0x70] = a2
 17527: 7b 13 38                 u64 [sp + 0x38] = t1
 17530: 7b 14 40                 u64 [sp + 0x40] = t2
 17533: 7b 10 48                 u64 [sp + 0x48] = ra
 17536: 7b 12 50                 u64 [sp + 0x50] = t0
 17539: 95 17 18                 a0 = sp + 0x18
 17542: 7b 17 58                 u64 [sp + 0x58] = a0
 17545: 33 07 78 11 01           a0 = 0x11178
 17550: 7b 17 60                 u64 [sp + 0x60] = a0
 17553: 95 18 38                 a1 = sp + 0x38
 17556: 64 b7                    a0 = a4
 17558: b4 a0 02 ba 01           ra = 442, jump [a3]
      :                          @1044 [@dyn 221]
 17563: 52 07 21                 jump @1047 if a0 != 0
      :                          @1045
 17566: 82 18 60                 a1 = u64 [sp + 0x60]
 17569: 82 17 58                 a0 = u64 [sp + 0x58]
 17572: 82 8a 18                 a3 = u64 [a1 + 0x18]
 17575: 33 08 2b 06 01           a1 = 0x1062b
 17580: 33 09 02                 a2 = 0x2
 17583: b4 a0 02 bc 01           ra = 444, jump [a3]
      :                          @1046 [@dyn 222]
 17588: 64 76                    s1 = a0
 17590: 33 08 01                 a1 = 0x1
 17593: 28 e9 fe                 jump @1032
      :                          @1047
 17596: 33 08 01                 a1 = 0x1
 17599: 28 e3 fe                 jump @1032
      :                          @1048
 17602: 51 08 9b 00              jump @1069 if a1 == 0
      :                          @1049
 17606: 64 79                    a2 = a0
 17608: 7c 77                    a0 = u8 [a0]
 17610: 51 07 91 00              jump @1068 if a0 == 0
      :                          @1050
 17614: 51 27 ff 00 90 00        jump @1070 if a0 == 255
      :                          @1051
 17620: 6c 7a                    a3 = sext.b a0
 17622: 57 0a 09                 jump @1053 if a3 <s 0
      :                          @1052
 17625: 33 0a                    a3 = 0
 17627: 33 08                    a1 = 0
 17629: 28 73                    jump @1067
      :                          @1053
 17631: 55 27 c0 00 0d           jump @1055 if a0 >=u 192
      :                          @1054
 17636: 33 0a 01                 a3 = 0x1
 17639: 33 0b 80                 a4 = 0xffffffffffffff80
 17642: 28 4a                    jump @1064
      :                          @1055
 17644: 55 27 e0 00 0e           jump @1057 if a0 >=u 224
      :                          @1056
 17649: 33 0a 02                 a3 = 0x2
 17652: 33 0b 40 ff              a4 = 0xffffffffffffff40
 17656: 28 3c                    jump @1064
      :                          @1057
 17658: 55 27 f0 00 0e           jump @1059 if a0 >=u 240
      :                          @1058
 17663: 33 0a 03                 a3 = 0x3
 17666: 33 0b 20 ff              a4 = 0xffffffffffffff20
 17670: 28 2e                    jump @1064
      :                          @1059
 17672: 55 27 f8 00 0e           jump @1061 if a0 >=u 248
      :                          @1060
 17677: 33 0a 04                 a3 = 0x4
 17680: 33 0b 10 ff              a4 = 0xffffffffffffff10
 17684: 28 20                    jump @1064
      :                          @1061
 17686: 55 27 fc 00 0e           jump @1063 if a0 >=u 252
      :                          @1062
 17691: 33 0a 05                 a3 = 0x5
 17694: 33 0b 08 ff              a4 = 0xffffffffffffff08
 17698: 28 12                    jump @1064
      :                          @1063
 17700: 88 7a fe 00              a3 = a0 <u 0xfe
 17704: 33 0b 04 ff              a4 = 0xffffffffffffff04
 17708: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 17712: 85 aa 07                 a3 = a3 ^ 0x7
 17715: 01                       fallthrough
      :                          @1064
 17716: ae 8a 2b                 jump @1071 if a3 >=u a1
      :                          @1065
 17719: 33 08                    a1 = 0
 17721: c8 b7 07                 a0 = a0 + a4
 17724: 64 ab                    a4 = a3
 17726: 01                       fallthrough
      :                          @1066
 17727: c8 b9 0c                 a5 = a2 + a4
 17730: 7c cc                    a5 = u8 [a5]
 17732: 97 88 08                 a1 = a1 << 0x8
 17735: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17738: d4 c8 08                 a1 = a1 | a5
 17741: 52 0b f2                 jump @1066 if a4 != 0
      :                          @1067
 17744: 8a a9 03                 i32 a2 = a3 << 0x3
 17747: cf 97 07                 a0 = a0 << a2
 17750: c8 87 07                 a0 = a0 + a1
 17753: 32 00                    ret
      :                          @1068
 17755: 32 00                    ret
      :                          @1069
 17757: 00                       trap
      :                          @1070
 17758: 00                       trap
      :                          @1071
 17759: 00                       trap
      :                          @1072
 17760: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 17764: 7b 10 00 01              u64 [sp + 0x100] = ra
 17768: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 17772: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 17776: 7b 17                    u64 [sp] = a0
 17778: 78 18 0f                 u8 [sp + 0xf] = a1
 17781: 7b 17 10                 u64 [sp + 0x10] = a0
 17784: 95 16 0f                 s1 = sp + 0xf
 17787: 33 05 01                 s0 = 0x1
 17790: 95 17 0f                 a0 = sp + 0xf
 17793: 33 08 01                 a1 = 0x1
 17796: 95 19 10                 a2 = sp + 0x10
 17799: 33 0a 08                 a3 = 0x8
 17802: 0a 03                    ecalli 3 // 'write'
 17804: 7b 16 60                 u64 [sp + 0x60] = s1
 17807: 33 07 c2 01              a0 = 0x1c2
 17811: 7b 17 68                 u64 [sp + 0x68] = a0
 17814: 64 17                    a0 = sp
 17816: 7b 17 70                 u64 [sp + 0x70] = a0
 17819: 33 07 18                 a0 = 0x18
 17822: 7b 17 78                 u64 [sp + 0x78] = a0
 17825: 49 21 80 00 02           u64 [sp + 128] = 0x2
 17830: 49 21 90 00 02           u64 [sp + 144] = 0x2
 17835: 49 21 a0 00              u64 [sp + 160] = 0
 17839: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 17849: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 17853: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 17858: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 17863: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 17868: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 17872: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 17876: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 17881: 33 08 a8 11 01           a1 = 0x111a8
 17886: 7b 18 30                 u64 [sp + 0x30] = a1
 17889: 49 11 38 02              u64 [sp + 56] = 0x2
 17893: 95 18 80 00              a1 = sp + 0x80
 17897: 7b 18 50                 u64 [sp + 0x50] = a1
 17900: 49 11 58 02              u64 [sp + 88] = 0x2
 17904: 95 18 60                 a1 = sp + 0x60
 17907: 7b 18 40                 u64 [sp + 0x40] = a1
 17910: 49 11 48 02              u64 [sp + 72] = 0x2
 17914: 95 17 18                 a0 = sp + 0x18
 17917: 95 18 30                 a1 = sp + 0x30
 17920: 50 20 be 01 26 ee        ra = 446, jump @721
      :                          @1073 [@dyn 223]
 17926: 82 15 20                 s0 = u64 [sp + 0x20]
 17929: 82 1b 28                 a4 = u64 [sp + 0x28]
 17932: 82 16 18                 s1 = u64 [sp + 0x18]
 17935: 33 07 02                 a0 = 0x2
 17938: 33 08                    a1 = 0
 17940: 33 09                    a2 = 0
 17942: 64 5a                    a3 = s0
 17944: 33 00 c0 01              ra = 0x1c0
 17948: 0a 64                    ecalli 100 // 'log'
 17950: 01                       fallthrough
      :                          @1074 [@dyn 224]
 17951: 33 07 00 f0              a0 = 0xfffffffffffff000
 17955: 95 68 ff ef              a1 = s1 + 0xffffffffffffefff
 17959: ac 78 23                 jump @1080 if a1 <u a0
      :                          @1075
 17962: 33 07 20 00 03           a0 = 0x30020
 17967: 95 77 00 10              a0 = a0 + 0x1000
 17971: 01                       fallthrough
      :                          @1076
 17972: 82 78                    a1 = u64 [a0]
 17974: c9 87 09                 a2 = a0 - a1
 17977: ab 59 11                 jump @1080 if a2 != s0
      :                          @1077
 17980: c9 68 09                 a2 = a1 - s1
 17983: 01                       fallthrough
      :                          @1078
 17984: 82 7a                    a3 = u64 [a0]
 17986: ab 8a f2                 jump @1076 if a3 != a1
      :                          @1079
 17989: 7b 79                    u64 [a0] = a2
 17991: 33 0b                    a4 = 0
 17993: 01                       fallthrough
      :                          @1080
 17994: 82 10 00 01              ra = u64 [sp + 0x100]
 17998: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 18002: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 18006: 95 11 08 01              sp = sp + 0x108
 18010: 32 00                    ret
      :                          @1081 [@dyn 225]
 18012: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 18015: 7b 10 28                 u64 [sp + 0x28] = ra
 18018: 7b 15 20                 u64 [sp + 0x20] = s0
 18021: 7b 16 18                 u64 [sp + 0x18] = s1
 18024: 64 86                    s1 = a1
 18026: 82 88 28                 a1 = u64 [a1 + 0x28]
 18029: 82 6a 20                 a3 = u64 [s1 + 0x20]
 18032: 82 8b 18                 a4 = u64 [a1 + 0x18]
 18035: 64 75                    s0 = a0
 18037: 33 08 10 06 01           a1 = 0x10610
 18042: 33 09 01                 a2 = 0x1
 18045: 64 a7                    a0 = a3
 18047: b4 b0 02 c4 01           ra = 452, jump [a4]
      :                          @1082 [@dyn 226]
 18052: 7b 16                    u64 [sp] = s1
 18054: 78 17 08                 u8 [sp + 0x8] = a0
 18057: 46 11 09                 u8 [sp + 9] = 0
 18060: 7b 15 10                 u64 [sp + 0x10] = s0
 18063: 33 09 02                 a2 = 0x2
 18066: 64 17                    a0 = sp
 18068: 95 18 10                 a1 = sp + 0x10
 18071: 50 20 c6 01 ec fc        ra = 454, jump @1031
      :                          @1083 [@dyn 227]
 18077: 33 07 01                 a0 = 0x1
 18080: 7c 18 08                 a1 = u8 [sp + 0x8]
 18083: 52 08 1b                 jump @1085 if a1 != 0
      :                          @1084
 18086: 82 17                    a0 = u64 [sp]
 18088: 82 78 28                 a1 = u64 [a0 + 0x28]
 18091: 82 77 20                 a0 = u64 [a0 + 0x20]
 18094: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18097: 33 08 2e 06 01           a1 = 0x1062e
 18102: 33 09 01                 a2 = 0x1
 18105: b4 a0 02 c8 01           ra = 456, jump [a3]
      :                          @1085 [@dyn 228]
 18110: 82 10 28                 ra = u64 [sp + 0x28]
 18113: 82 15 20                 s0 = u64 [sp + 0x20]
 18116: 82 16 18                 s1 = u64 [sp + 0x18]
 18119: 95 11 30                 sp = sp + 0x30
 18122: 32 00                    ret
