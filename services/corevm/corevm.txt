// RO data = 4784/4784 bytes
// RW data = 24/1048672 bytes
// Stack size = 1048576 bytes
// RO data = [142, 0, 0, 0, 166, 0, 0, 0, 184, 0, 0, 0, 202, 0, 0, 0, 240, 0, 0, 0, 20, 1, 0, 0, 42, 1, 0, 0, 54, 1, 0, 0, 66, 1, 0, 0, 84, 1, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 64, 110, 61, 101, 106, 101, 99, 116, 64, 110, 61, 101, 120, 112, 117, 110, 103, 101, 32, 32, 111, 117, 116, 112, 117, 116, 61, 121, 105, 101, 108, 100, 64, 110, 61, 122, 61, 32, 115, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 106, 97, 109, 32, 64, 110, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 32, 111, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 119, 114, 105, 116, 101, 32, 116, 111, 32, 68, 79, 84, 32, 64, 110, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 108, 101, 110, 103, 116, 104, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 58, 32, 101, 120, 112, 101, 99, 116, 32, 207, 130, 43, 124, 101, 124, 61, 32, 119, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 99, 95, 98, 121, 116, 101, 115, 95, 97, 100, 100, 114, 101, 115, 115, 61, 88, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 93, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 142, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 222, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 174, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 239, 0, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 126, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 128, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 109, 97, 99, 104, 105, 110, 101, 32, 110, 101, 119, 32, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 160, 1, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 102, 101, 116, 99, 104, 32, 115, 101, 103, 109, 101, 110, 116, 95, 105, 110, 100, 101, 120, 61, 32, 102, 101, 116, 99, 104, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 1, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 109, 61, 44, 32, 112, 97, 103, 101, 95, 105, 100, 61, 32, 122, 101, 114, 111, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 16, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 111, 107, 101, 32, 109, 61, 32, 111, 61, 32, 122, 61, 32, 112, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 96, 2, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 103, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 106, 2, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 109, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 122, 101, 114, 111, 32, 102, 111, 114, 32, 114, 101, 115, 117, 108, 116, 32, 109, 61, 0, 0, 0, 0, 0, 0, 208, 2, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 23, 2, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 33, 2, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 98, 101, 102, 111, 114, 101, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 114, 101, 103, 105, 115, 116, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 24, 3, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 105, 110, 118, 111, 107, 101, 32, 32, 105, 110, 118, 111, 107, 101, 95, 114, 101, 115, 117, 108, 116, 61, 32, 103, 97, 115, 61, 0, 0, 0, 0, 0, 72, 3, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 111, 117, 116, 112, 117, 116, 95, 98, 121, 116, 101, 115, 61, 124, 0, 0, 152, 3, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 165, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 58, 32, 99, 104, 105, 108, 100, 32, 86, 77, 32, 105, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110, 32, 99, 111, 117, 110, 116, 101, 114, 61, 0, 64, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 216, 3, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 112, 101, 101, 107, 32, 99, 104, 105, 108, 100, 95, 118, 109, 95, 105, 100, 61, 44, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 44, 32, 99, 104, 105, 108, 100, 95, 112, 97, 103, 101, 95, 97, 100, 100, 114, 101, 115, 115, 61, 32, 80, 65, 71, 69, 95, 83, 73, 90, 69, 61, 32, 112, 101, 101, 107, 95, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 0, 40, 4, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 57, 4, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 84, 4, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 105, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 116, 4, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 103, 109, 101, 110, 116, 95, 98, 117, 102, 91, 48, 46, 46, 56, 93, 61, 44, 32, 99, 104, 105, 108, 100, 95, 105, 100, 61, 44, 32, 115, 101, 103, 95, 105, 110, 100, 101, 120, 61, 0, 0, 0, 0, 0, 0, 216, 4, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 235, 4, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 246, 4, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 101, 120, 112, 111, 114, 116, 32, 105, 61, 44, 32, 103, 111, 116, 32, 0, 56, 5, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 206, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 65, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 94, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 72, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 78, 79, 78, 69, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 49, 41, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 50, 41, 0, 0, 0, 0, 110, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 53, 41, 0, 0, 0, 0, 152, 5, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 106, 97, 109, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 54, 41, 0, 0, 0, 0, 144, 6, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 158, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 106, 97, 109, 64, 110, 61, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 112, 114, 101, 118, 32, 108, 101, 110, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 56, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 248, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 105, 99, 105, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 0, 0, 0, 200, 7, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 122, 101, 114, 111, 32, 114, 101, 115, 117, 108, 116, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 50, 8, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 113, 117, 101, 114, 121, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 0, 128, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 102, 111, 114, 103, 101, 116, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 200, 8, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 110, 111, 110, 45, 122, 101, 114, 111, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 100, 111, 116, 41, 64, 110, 61, 0, 0, 0, 0, 0, 88, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 32, 106, 97, 109, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 67, 79, 82, 69, 44, 32, 103, 111, 116, 32, 160, 9, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 173, 9, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 55, 41, 0, 240, 9, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 79, 75, 44, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 56, 41, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 108, 111, 111, 107, 117, 112, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 64, 110, 61, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 190, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 87, 72, 79, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 56, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 48, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 10, 1, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 112, 114, 111, 118, 105, 100, 101, 32, 104, 97, 115, 104, 40, 106, 97, 109, 41, 58, 32, 101, 120, 112, 101, 99, 116, 32, 72, 85, 72, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 128, 11, 1, 0, 0, 0, 0, 0, 35, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 32, 101, 120, 112, 101, 99, 116, 32, 50, 43, 50, 94, 51, 50, 42, 120, 44, 32, 103, 111, 116, 32, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 200, 11, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 97, 115, 115, 105, 103, 110, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 16, 12, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 58, 32, 101, 120, 112, 101, 99, 116, 32, 51, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 0, 0, 160, 10, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 80, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 32, 8, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 16, 9, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 32, 64, 110, 61, 58, 32, 101, 120, 112, 101, 99, 116, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 44, 32, 103, 111, 116, 32, 0, 0, 0, 0, 0, 200, 12, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 207, 12, 1, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 117, 112, 103, 114, 97, 100, 101, 32, 64, 110, 61, 0, 0, 0, 0, 0, 32, 13, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 98, 108, 101, 115, 115, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 96, 13, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 32, 100, 101, 108, 101, 116, 101, 100, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 158, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 188, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 76, 7, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 72, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 68, 79, 84, 32, 64, 110, 61, 0, 0, 0, 0, 0, 0, 0, 72, 14, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 176, 6, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 169, 5, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 19, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 64, 110, 61, 0, 192, 14, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 106, 10, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 57, 41, 0, 0, 0, 248, 14, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 99, 111, 114, 101, 118, 109, 32, 99, 104, 101, 99, 107, 112, 111, 105, 110, 116, 0, 0, 0, 0, 0, 0, 0, 80, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 220, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 0, 112, 15, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 133, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 150, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 152, 1, 0, 0, 0, 0, 0, 0, 158, 1, 0, 0, 0, 0, 0, 0, 166, 1, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 200, 1, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 202, 1, 0, 0, 0, 0, 0, 0, 208, 1, 0, 0, 0, 0, 0, 0, 212, 1, 0, 0, 0, 0, 0, 0, 105, 110, 102, 111, 114, 101, 97, 100, 112, 101, 101, 107, 122, 101, 114, 111, 32, 32, 32, 32, 112, 111, 107, 101, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 115, 117, 99, 99, 101, 115, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 112, 111, 107, 101, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 115, 116, 97, 99, 107, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 119, 95, 98, 121, 116, 101, 115, 83, 116, 97, 110, 100, 97, 114, 100, 80, 114, 111, 103, 114, 97, 109, 73, 110, 105, 116, 105, 97, 108, 105, 122, 97, 116, 105, 111, 110, 70, 111, 114, 67, 104, 105, 108, 100, 58, 32, 122, 101, 114, 111, 32, 102, 97, 105, 108, 101, 100, 32, 102, 111, 114, 32, 111, 95, 98, 121, 116, 101, 115, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 114, 18, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 131, 18, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [86, 85, 85, 85, 85, 85, 85, 85, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 6034
// Code size = 19230 bytes

      :                          @0
     0: 28 a0 04 00 00           jump @78
      :                          @1
     5: 28 0a 15 00 00           jump @262
      :                          @2
    10: 28 9c 38                 jump @726
      :                          @3 [@dyn 1]
    13: 95 11 c0                 sp = sp + 0xffffffffffffffc0
    16: 7b 10 38                 u64 [sp + 0x38] = ra
    19: 7b 15 30                 u64 [sp + 0x30] = s0
    22: 7b 16 28                 u64 [sp + 0x28] = s1
    25: 7b 18 08                 u64 [sp + 0x8] = a1
    28: 82 89 28                 a2 = u64 [a1 + 0x28]
    31: 82 76                    s1 = u64 [a0]
    33: 82 75 08                 s0 = u64 [a0 + 0x8]
    36: 82 87 20                 a0 = u64 [a1 + 0x20]
    39: 82 9a 18                 a3 = u64 [a2 + 0x18]
    42: 33 08 f0 0f 01           a1 = 0x10ff0
    47: 33 09 01                 a2 = 0x1
    50: b4 a0 01 04              ra = 4, jump [a3]
      :                          @4 [@dyn 2]
    54: 82 18 08                 a1 = u64 [sp + 0x8]
    57: 7b 18 10                 u64 [sp + 0x10] = a1
    60: 78 17 18                 u8 [sp + 0x18] = a0
    63: 46 11 19                 u8 [sp + 25] = 0
    66: 51 05 2d                 jump @9 if s0 == 0
      :                          @5
    69: 33 07 ec 01              a0 = 0x1ec
    73: 7b 17                    u64 [sp] = a0
    75: 01                       fallthrough
      :                          @6
    76: 95 67 01                 a0 = s1 + 0x1
    79: 7b 17 08                 u64 [sp + 0x8] = a0
    82: 7b 16 20                 u64 [sp + 0x20] = s1
    85: 95 17 10                 a0 = sp + 0x10
    88: 95 18 20                 a1 = sp + 0x20
    91: 82 19                    a2 = u64 [sp]
    93: 50 10 06 c2 46           ra = 6, jump @1027
      :                          @7 [@dyn 3]
    98: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   101: 82 16 08                 s1 = u64 [sp + 0x8]
   104: 52 05 e4                 jump @6 if s0 != 0
      :                          @8
   107: 7c 17 18                 a0 = u8 [sp + 0x18]
   110: 01                       fallthrough
      :                          @9
   111: 33 08 01                 a1 = 0x1
   114: 52 07 1e                 jump @12 if a0 != 0
      :                          @10
   117: 82 17 10                 a0 = u64 [sp + 0x10]
   120: 82 78 28                 a1 = u64 [a0 + 0x28]
   123: 82 77 20                 a0 = u64 [a0 + 0x20]
   126: 82 8a 18                 a3 = u64 [a1 + 0x18]
   129: 33 08 45 10 01           a1 = 0x11045
   134: 33 09 01                 a2 = 0x1
   137: b4 a0 01 08              ra = 8, jump [a3]
      :                          @11 [@dyn 4]
   141: 64 78                    a1 = a0
   143: 01                       fallthrough
      :                          @12
   144: 64 87                    a0 = a1
   146: 82 10 38                 ra = u64 [sp + 0x38]
   149: 82 15 30                 s0 = u64 [sp + 0x30]
   152: 82 16 28                 s1 = u64 [sp + 0x28]
   155: 95 11 40                 sp = sp + 0x40
   158: 32 00                    ret
      :                          @13 [@dyn 5]
   160: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   164: 7b 10 80 00              u64 [sp + 0x80] = ra
   168: 80 89 34                 a2 = u32 [a1 + 0x34]
   171: 82 77                    a0 = u64 [a0]
   173: 84 9a 10                 a3 = a2 & 0x10
   176: 52 0a 16                 jump @16 if a3 != 0
      :                          @14
   179: 84 99 20                 a2 = a2 & 0x20
   182: 52 09 40                 jump @19 if a2 != 0
      :                          @15
   185: 82 77                    a0 = u64 [a0]
   187: 82 10 80 00              ra = u64 [sp + 0x80]
   191: 95 11 88 00              sp = sp + 0x88
   195: 28 51 3e                 jump @873
      :                          @16
   198: 82 7b                    a4 = u64 [a0]
   200: 33 09 81 00              a2 = 0x81
   204: 95 17 7f                 a0 = sp + 0x7f
   207: 33 02 57                 t0 = 0x57
   210: 01                       fallthrough
      :                          @17
   211: 64 9c                    a5 = a2
   213: 98 ba 04                 a3 = a4 >> 0x4
   216: 84 bb 0f                 a4 = a4 & 0xf
   219: 88 b3 0a                 t1 = a4 <u 0xa
   222: 33 09 30                 a2 = 0x30
   225: da 32 09                 a2 = t0 if t1 == 0
   228: be b9 09                 i32 a2 = a2 + a4
   231: 78 79                    u8 [a0] = a2
   233: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   236: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   239: 64 ab                    a4 = a3
   241: 52 0a e2                 jump @17 if a3 != 0
      :                          @18
   244: 28 30                    jump @21
      :                          @19
   246: 82 7b                    a4 = u64 [a0]
   248: 33 09 81 00              a2 = 0x81
   252: 95 17 7f                 a0 = sp + 0x7f
   255: 33 02 37                 t0 = 0x37
   258: 01                       fallthrough
      :                          @20
   259: 64 9c                    a5 = a2
   261: 98 ba 04                 a3 = a4 >> 0x4
   264: 84 bb 0f                 a4 = a4 & 0xf
   267: 88 b3 0a                 t1 = a4 <u 0xa
   270: 33 09 30                 a2 = 0x30
   273: da 32 09                 a2 = t0 if t1 == 0
   276: be b9 09                 i32 a2 = a2 + a4
   279: 78 79                    u8 [a0] = a2
   281: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   284: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   287: 64 ab                    a4 = a3
   289: 52 0a e2                 jump @20 if a3 != 0
      :                          @21
   292: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   295: 56 27 80 00 27           jump @24 if a0 >u 128
      :                          @22
   300: 9a 9b 81 00              a4 = 0x81 - a2
   304: 64 1a                    a3 = sp
   306: c8 7a 0a                 a3 = a3 + a0
   309: 33 09 02                 a2 = 0x2
   312: 64 87                    a0 = a1
   314: 33 08 46 10 01           a1 = 0x11046
   319: 50 10 0c fd 3e           ra = 12, jump @883
      :                          @23 [@dyn 6]
   324: 82 10 80 00              ra = u64 [sp + 0x80]
   328: 95 11 88 00              sp = sp + 0x88
   332: 32 00                    ret
      :                          @24
   334: 00                       trap
      :                          @25 [@dyn 7]
   335: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   339: 7b 10 80 00              u64 [sp + 0x80] = ra
   343: 80 89 34                 a2 = u32 [a1 + 0x34]
   346: 84 9a 10                 a3 = a2 & 0x10
   349: 52 0a 16                 jump @28 if a3 != 0
      :                          @26
   352: 84 99 20                 a2 = a2 & 0x20
   355: 52 09 41                 jump @31 if a2 != 0
      :                          @27
   358: 7c 77                    a0 = u8 [a0]
   360: 82 10 80 00              ra = u64 [sp + 0x80]
   364: 95 11 88 00              sp = sp + 0x88
   368: 28 a4 3d                 jump @873
      :                          @28
   371: 7c 77                    a0 = u8 [a0]
   373: 33 0b 81 00              a4 = 0x81
   377: 95 19 7f                 a2 = sp + 0x7f
   380: 33 02 57                 t0 = 0x57
   383: 01                       fallthrough
      :                          @29
   384: 64 bc                    a5 = a4
   386: 84 7b 0f                 a4 = a0 & 0xf
   389: 97 77 38                 a0 = a0 << 0x38
   392: 98 77 3c                 a0 = a0 >> 0x3c
   395: 88 b3 0a                 t1 = a4 <u 0xa
   398: 33 0a 30                 a3 = 0x30
   401: da 32 0a                 a3 = t0 if t1 == 0
   404: be ba 0a                 i32 a3 = a3 + a4
   407: 78 9a                    u8 [a2] = a3
   409: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   412: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   415: 52 07 e1                 jump @29 if a0 != 0
      :                          @30
   418: 28 31                    jump @33
      :                          @31
   420: 7c 77                    a0 = u8 [a0]
   422: 33 0b 81 00              a4 = 0x81
   426: 95 19 7f                 a2 = sp + 0x7f
   429: 33 02 37                 t0 = 0x37
   432: 01                       fallthrough
      :                          @32
   433: 64 bc                    a5 = a4
   435: 84 7b 0f                 a4 = a0 & 0xf
   438: 97 77 38                 a0 = a0 << 0x38
   441: 98 77 3c                 a0 = a0 >> 0x3c
   444: 88 b3 0a                 t1 = a4 <u 0xa
   447: 33 0a 30                 a3 = 0x30
   450: da 32 0a                 a3 = t0 if t1 == 0
   453: be ba 0a                 i32 a3 = a3 + a4
   456: 78 9a                    u8 [a2] = a3
   458: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   461: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   464: 52 07 e1                 jump @32 if a0 != 0
      :                          @33
   467: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   470: 56 27 80 00 27           jump @36 if a0 >u 128
      :                          @34
   475: 9a bb 81 00              a4 = 0x81 - a4
   479: 64 1a                    a3 = sp
   481: c8 7a 0a                 a3 = a3 + a0
   484: 33 09 02                 a2 = 0x2
   487: 64 87                    a0 = a1
   489: 33 08 46 10 01           a1 = 0x11046
   494: 50 10 10 4e 3e           ra = 16, jump @883
      :                          @35 [@dyn 8]
   499: 82 10 80 00              ra = u64 [sp + 0x80]
   503: 95 11 88 00              sp = sp + 0x88
   507: 32 00                    ret
      :                          @36
   509: 00                       trap
      :                          @37 [@dyn 9]
   510: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   514: 7b 10 80 00              u64 [sp + 0x80] = ra
   518: 80 89 34                 a2 = u32 [a1 + 0x34]
   521: 84 9a 10                 a3 = a2 & 0x10
   524: 52 0a 16                 jump @40 if a3 != 0
      :                          @38
   527: 84 99 20                 a2 = a2 & 0x20
   530: 52 09 40                 jump @43 if a2 != 0
      :                          @39
   533: 80 77                    a0 = u32 [a0]
   535: 82 10 80 00              ra = u64 [sp + 0x80]
   539: 95 11 88 00              sp = sp + 0x88
   543: 28 f5 3c                 jump @873
      :                          @40
   546: 81 7b                    a4 = i32 [a0]
   548: 33 09 81 00              a2 = 0x81
   552: 95 17 7f                 a0 = sp + 0x7f
   555: 33 02 57                 t0 = 0x57
   558: 01                       fallthrough
      :                          @41
   559: 64 9c                    a5 = a2
   561: 8b ba 04                 i32 a3 = a4 >> 0x4
   564: 84 bb 0f                 a4 = a4 & 0xf
   567: 88 b3 0a                 t1 = a4 <u 0xa
   570: 33 09 30                 a2 = 0x30
   573: da 32 09                 a2 = t0 if t1 == 0
   576: be b9 09                 i32 a2 = a2 + a4
   579: 78 79                    u8 [a0] = a2
   581: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   584: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   587: 64 ab                    a4 = a3
   589: 52 0a e2                 jump @41 if a3 != 0
      :                          @42
   592: 28 30                    jump @45
      :                          @43
   594: 81 7b                    a4 = i32 [a0]
   596: 33 09 81 00              a2 = 0x81
   600: 95 17 7f                 a0 = sp + 0x7f
   603: 33 02 37                 t0 = 0x37
   606: 01                       fallthrough
      :                          @44
   607: 64 9c                    a5 = a2
   609: 8b ba 04                 i32 a3 = a4 >> 0x4
   612: 84 bb 0f                 a4 = a4 & 0xf
   615: 88 b3 0a                 t1 = a4 <u 0xa
   618: 33 09 30                 a2 = 0x30
   621: da 32 09                 a2 = t0 if t1 == 0
   624: be b9 09                 i32 a2 = a2 + a4
   627: 78 79                    u8 [a0] = a2
   629: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   632: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   635: 64 ab                    a4 = a3
   637: 52 0a e2                 jump @44 if a3 != 0
      :                          @45
   640: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   643: 56 27 80 00 27           jump @48 if a0 >u 128
      :                          @46
   648: 9a 9b 81 00              a4 = 0x81 - a2
   652: 64 1a                    a3 = sp
   654: c8 7a 0a                 a3 = a3 + a0
   657: 33 09 02                 a2 = 0x2
   660: 64 87                    a0 = a1
   662: 33 08 46 10 01           a1 = 0x11046
   667: 50 10 14 a1 3d           ra = 20, jump @883
      :                          @47 [@dyn 10]
   672: 82 10 80 00              ra = u64 [sp + 0x80]
   676: 95 11 88 00              sp = sp + 0x88
   680: 32 00                    ret
      :                          @48
   682: 00                       trap
      :                          @49 [@dyn 11]
   683: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   687: 7b 10 80 00              u64 [sp + 0x80] = ra
   691: 80 89 34                 a2 = u32 [a1 + 0x34]
   694: 84 9a 10                 a3 = a2 & 0x10
   697: 52 0a 16                 jump @52 if a3 != 0
      :                          @50
   700: 84 99 20                 a2 = a2 & 0x20
   703: 52 09 40                 jump @55 if a2 != 0
      :                          @51
   706: 82 77                    a0 = u64 [a0]
   708: 82 10 80 00              ra = u64 [sp + 0x80]
   712: 95 11 88 00              sp = sp + 0x88
   716: 28 48 3c                 jump @873
      :                          @52
   719: 82 7b                    a4 = u64 [a0]
   721: 33 09 81 00              a2 = 0x81
   725: 95 17 7f                 a0 = sp + 0x7f
   728: 33 02 57                 t0 = 0x57
   731: 01                       fallthrough
      :                          @53
   732: 64 9c                    a5 = a2
   734: 98 ba 04                 a3 = a4 >> 0x4
   737: 84 bb 0f                 a4 = a4 & 0xf
   740: 88 b3 0a                 t1 = a4 <u 0xa
   743: 33 09 30                 a2 = 0x30
   746: da 32 09                 a2 = t0 if t1 == 0
   749: be b9 09                 i32 a2 = a2 + a4
   752: 78 79                    u8 [a0] = a2
   754: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   757: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   760: 64 ab                    a4 = a3
   762: 52 0a e2                 jump @53 if a3 != 0
      :                          @54
   765: 28 30                    jump @57
      :                          @55
   767: 82 7b                    a4 = u64 [a0]
   769: 33 09 81 00              a2 = 0x81
   773: 95 17 7f                 a0 = sp + 0x7f
   776: 33 02 37                 t0 = 0x37
   779: 01                       fallthrough
      :                          @56
   780: 64 9c                    a5 = a2
   782: 98 ba 04                 a3 = a4 >> 0x4
   785: 84 bb 0f                 a4 = a4 & 0xf
   788: 88 b3 0a                 t1 = a4 <u 0xa
   791: 33 09 30                 a2 = 0x30
   794: da 32 09                 a2 = t0 if t1 == 0
   797: be b9 09                 i32 a2 = a2 + a4
   800: 78 79                    u8 [a0] = a2
   802: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   805: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   808: 64 ab                    a4 = a3
   810: 52 0a e2                 jump @56 if a3 != 0
      :                          @57
   813: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   816: 56 27 80 00 27           jump @60 if a0 >u 128
      :                          @58
   821: 9a 9b 81 00              a4 = 0x81 - a2
   825: 64 1a                    a3 = sp
   827: c8 7a 0a                 a3 = a3 + a0
   830: 33 09 02                 a2 = 0x2
   833: 64 87                    a0 = a1
   835: 33 08 46 10 01           a1 = 0x11046
   840: 50 10 18 f4 3c           ra = 24, jump @883
      :                          @59 [@dyn 12]
   845: 82 10 80 00              ra = u64 [sp + 0x80]
   849: 95 11 88 00              sp = sp + 0x88
   853: 32 00                    ret
      :                          @60
   855: 00                       trap
      :                          @61 [@dyn 13]
   856: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   859: 7b 10 28                 u64 [sp + 0x28] = ra
   862: 7b 15 20                 u64 [sp + 0x20] = s0
   865: 7b 16 18                 u64 [sp + 0x18] = s1
   868: 64 85                    s0 = a1
   870: 82 88 28                 a1 = u64 [a1 + 0x28]
   873: 82 5a 20                 a3 = u64 [s0 + 0x20]
   876: 82 8b 18                 a4 = u64 [a1 + 0x18]
   879: 64 76                    s1 = a0
   881: 33 08 f0 0f 01           a1 = 0x10ff0
   886: 33 09 01                 a2 = 0x1
   889: 64 a7                    a0 = a3
   891: b4 b0 01 1c              ra = 28, jump [a4]
      :                          @62 [@dyn 14]
   895: 7b 15                    u64 [sp] = s0
   897: 78 17 08                 u8 [sp + 0x8] = a0
   900: 46 11 09                 u8 [sp + 9] = 0
   903: 7b 16 10                 u64 [sp + 0x10] = s1
   906: 33 05 0a                 s0 = 0xa
   909: 64 17                    a0 = sp
   911: 95 18 10                 a1 = sp + 0x10
   914: 33 09 0a                 a2 = 0xa
   917: 50 10 1e 8a 43           ra = 30, jump @1027
      :                          @63 [@dyn 15]
   922: 95 67 08                 a0 = s1 + 0x8
   925: 7b 17 10                 u64 [sp + 0x10] = a0
   928: 64 17                    a0 = sp
   930: 95 18 10                 a1 = sp + 0x10
   933: 64 59                    a2 = s0
   935: 50 10 20 78 43           ra = 32, jump @1027
      :                          @64 [@dyn 16]
   940: 95 67 10                 a0 = s1 + 0x10
   943: 7b 17 10                 u64 [sp + 0x10] = a0
   946: 64 17                    a0 = sp
   948: 95 18 10                 a1 = sp + 0x10
   951: 64 59                    a2 = s0
   953: 50 10 22 66 43           ra = 34, jump @1027
      :                          @65 [@dyn 17]
   958: 95 67 18                 a0 = s1 + 0x18
   961: 7b 17 10                 u64 [sp + 0x10] = a0
   964: 64 17                    a0 = sp
   966: 95 18 10                 a1 = sp + 0x10
   969: 64 59                    a2 = s0
   971: 50 10 24 54 43           ra = 36, jump @1027
      :                          @66 [@dyn 18]
   976: 95 67 20                 a0 = s1 + 0x20
   979: 7b 17 10                 u64 [sp + 0x10] = a0
   982: 64 17                    a0 = sp
   984: 95 18 10                 a1 = sp + 0x10
   987: 64 59                    a2 = s0
   989: 50 10 26 42 43           ra = 38, jump @1027
      :                          @67 [@dyn 19]
   994: 95 67 28                 a0 = s1 + 0x28
   997: 7b 17 10                 u64 [sp + 0x10] = a0
  1000: 64 17                    a0 = sp
  1002: 95 18 10                 a1 = sp + 0x10
  1005: 64 59                    a2 = s0
  1007: 50 10 28 30 43           ra = 40, jump @1027
      :                          @68 [@dyn 20]
  1012: 95 67 30                 a0 = s1 + 0x30
  1015: 7b 17 10                 u64 [sp + 0x10] = a0
  1018: 64 17                    a0 = sp
  1020: 95 18 10                 a1 = sp + 0x10
  1023: 64 59                    a2 = s0
  1025: 50 10 2a 1e 43           ra = 42, jump @1027
      :                          @69 [@dyn 21]
  1030: 95 67 38                 a0 = s1 + 0x38
  1033: 7b 17 10                 u64 [sp + 0x10] = a0
  1036: 64 17                    a0 = sp
  1038: 95 18 10                 a1 = sp + 0x10
  1041: 64 59                    a2 = s0
  1043: 50 10 2c 0c 43           ra = 44, jump @1027
      :                          @70 [@dyn 22]
  1048: 95 67 40                 a0 = s1 + 0x40
  1051: 7b 17 10                 u64 [sp + 0x10] = a0
  1054: 64 17                    a0 = sp
  1056: 95 18 10                 a1 = sp + 0x10
  1059: 64 59                    a2 = s0
  1061: 50 10 2e fa 42           ra = 46, jump @1027
      :                          @71 [@dyn 23]
  1066: 95 67 48                 a0 = s1 + 0x48
  1069: 7b 17 10                 u64 [sp + 0x10] = a0
  1072: 64 17                    a0 = sp
  1074: 95 18 10                 a1 = sp + 0x10
  1077: 64 59                    a2 = s0
  1079: 50 10 30 e8 42           ra = 48, jump @1027
      :                          @72 [@dyn 24]
  1084: 95 67 50                 a0 = s1 + 0x50
  1087: 7b 17 10                 u64 [sp + 0x10] = a0
  1090: 64 17                    a0 = sp
  1092: 95 18 10                 a1 = sp + 0x10
  1095: 64 59                    a2 = s0
  1097: 50 10 32 d6 42           ra = 50, jump @1027
      :                          @73 [@dyn 25]
  1102: 95 67 58                 a0 = s1 + 0x58
  1105: 7b 17 10                 u64 [sp + 0x10] = a0
  1108: 64 17                    a0 = sp
  1110: 95 18 10                 a1 = sp + 0x10
  1113: 64 59                    a2 = s0
  1115: 50 10 34 c4 42           ra = 52, jump @1027
      :                          @74 [@dyn 26]
  1120: 95 67 60                 a0 = s1 + 0x60
  1123: 7b 17 10                 u64 [sp + 0x10] = a0
  1126: 64 17                    a0 = sp
  1128: 95 18 10                 a1 = sp + 0x10
  1131: 64 59                    a2 = s0
  1133: 50 10 36 b2 42           ra = 54, jump @1027
      :                          @75 [@dyn 27]
  1138: 33 07 01                 a0 = 0x1
  1141: 7c 18 08                 a1 = u8 [sp + 0x8]
  1144: 52 08 1a                 jump @77 if a1 != 0
      :                          @76
  1147: 82 17                    a0 = u64 [sp]
  1149: 82 78 28                 a1 = u64 [a0 + 0x28]
  1152: 82 77 20                 a0 = u64 [a0 + 0x20]
  1155: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1158: 33 08 45 10 01           a1 = 0x11045
  1163: 33 09 01                 a2 = 0x1
  1166: b4 a0 01 38              ra = 56, jump [a3]
      :                          @77 [@dyn 28]
  1170: 82 10 28                 ra = u64 [sp + 0x28]
  1173: 82 15 20                 s0 = u64 [sp + 0x20]
  1176: 82 16 18                 s1 = u64 [sp + 0x18]
  1179: 95 11 30                 sp = sp + 0x30
  1182: 32 00                    ret
      :                          @78 [export #0: 'refine']
  1184: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  1188: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  1192: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  1196: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  1200: 95 11 38 d4              sp = sp + 0xffffffffffffd438
  1204: 33 0a 00 00 01           a3 = 0x10000
  1209: 53 18 04 e7 00           jump @97 if a1 <u 4
      :                          @79
  1214: 95 8b fc                 a4 = a1 + 0xfffffffffffffffc
  1217: 51 0b df 00              jump @97 if a4 == 0
      :                          @80
  1221: 7d 78 04                 a1 = i8 [a0 + 0x4]
  1224: 80 7a                    a3 = u32 [a0]
  1226: 33 06 01                 s1 = 0x1
  1229: 59 08 3d                 jump @89 if a1 >=s 0
      :                          @81
  1232: 84 88 ff 00              a1 = a1 & 0xff
  1236: 33 06 02                 s1 = 0x2
  1239: 53 28 c0 00 2d           jump @87 if a1 <u 192
      :                          @82
  1244: 33 06 03                 s1 = 0x3
  1247: 53 28 e0 00 25           jump @87 if a1 <u 224
      :                          @83
  1252: 33 06 04                 s1 = 0x4
  1255: 53 28 f0 00 1d           jump @87 if a1 <u 240
      :                          @84
  1260: 33 06 05                 s1 = 0x5
  1263: 53 28 f8 00 15           jump @87 if a1 <u 248
      :                          @85
  1268: 33 06 06                 s1 = 0x6
  1271: 53 28 fc 00 0d           jump @87 if a1 <u 252
      :                          @86
  1276: 88 88 fe 00              a1 = a1 <u 0xfe
  1280: 9a 86 08                 s1 = 0x8 - a1
  1283: 01                       fallthrough
      :                          @87
  1284: ae 6b 06                 jump @89 if a4 >=u s1
      :                          @88
  1287: 28 07 10                 jump @261
      :                          @89
  1290: 7b 1a 80 00              u64 [sp + 0x80] = a3
  1294: 95 77 04                 a0 = a0 + 0x4
  1297: 64 68                    a1 = s1
  1299: 7b 1b 88 00              u64 [sp + 0x88] = a4
  1303: 50 10 3a 47 43           ra = 58, jump @1044
      :                          @90 [@dyn 29]
  1308: 64 75                    s0 = a0
  1310: 82 17 88 00              a0 = u64 [sp + 0x88]
  1314: e4 67 07                 a0 = maxu(a0, s1)
  1317: c9 67 07                 a0 = a0 - s1
  1320: d8 57 08                 a1 = a0 <u s0
  1323: e4 57 07                 a0 = maxu(a0, s0)
  1326: c9 57 07                 a0 = a0 - s0
  1329: 88 77 20                 a0 = a0 <u 0x20
  1332: d4 87 07                 a0 = a0 | a1
  1335: 52 07 60                 jump @96 if a0 != 0
      :                          @91
  1338: 48 21 b0 00              u32 [sp + 176] = 0
  1342: 49 21 a8 00              u64 [sp + 168] = 0
  1346: 49 21 a0 00              u64 [sp + 160] = 0
  1350: 49 21 98 00              u64 [sp + 152] = 0
  1354: 49 21 90 00              u64 [sp + 144] = 0
  1358: 95 17 90 00              a0 = sp + 0x90
  1362: 33 09 24                 a2 = 0x24
  1365: 33 0a 03                 a3 = 0x3
  1368: 33 08                    a1 = 0
  1370: 33 0b                    a4 = 0
  1372: 33 0c                    a5 = 0
  1374: 0a 12                    ecalli 18 // 'fetch'
  1376: 01                       fallthrough
      :                          @92
  1377: 95 1a 90 00              a3 = sp + 0x90
  1381: 33 08 24                 a1 = 0x24
  1384: 53 15 08 3b              jump @98 if s0 <u 8
      :                          @93
  1388: 95 17 b8 00              a0 = sp + 0xb8
  1392: 33 09 00 20              a2 = 0x2000
  1396: 33 08                    a1 = 0
  1398: 50 10 3c 3f 39           ra = 60, jump @858
      :                          @94 [@dyn 30]
  1403: 95 18 90 00              a1 = sp + 0x90
  1407: 95 19 b8 00              a2 = sp + 0xb8
  1411: 33 0b 00 20              a4 = 0x2000
  1415: 82 17 80 00              a0 = u64 [sp + 0x80]
  1419: 33 0a                    a3 = 0
  1421: 0a 11                    ecalli 17 // 'historical_lookup'
  1423: 01                       fallthrough
      :                          @95
  1424: 95 78 01                 a1 = a0 + 0x1
  1427: 55 18 04 2b              jump @99 if a1 >=u 4
      :                          @96
  1431: 33 08                    a1 = 0
  1433: 33 0a 00 00 01           a3 = 0x10000
  1438: 28 05                    jump @98
      :                          @97
  1440: 33 08                    a1 = 0
  1442: 01                       fallthrough
      :                          @98
  1443: 64 a7                    a0 = a3
  1445: 33 09 c8 2b              a2 = 0x2bc8
  1449: c8 91 01                 sp = sp + a2
  1452: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  1456: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  1460: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  1464: 95 11 f8 07              sp = sp + 0x7f8
  1468: 32 00                    ret
      :                          @99
  1470: 95 78 fd                 a1 = a0 + 0xfffffffffffffffd
  1473: 53 18 03 d6              jump @96 if a1 <u 3
      :                          @100
  1477: 84 78 fe                 a1 = a0 & 0xfffffffffffffffe
  1480: 51 18 06 cf              jump @96 if a1 == 6
      :                          @101
  1484: 95 78 f8                 a1 = a0 + 0xfffffffffffffff8
  1487: 53 18 03 c8              jump @96 if a1 <u 3
      :                          @102
  1491: 7c 18 ba 00              a1 = u8 [sp + 0xba]
  1495: 7c 19 b9 00              a2 = u8 [sp + 0xb9]
  1499: 7c 1a b8 00              a3 = u8 [sp + 0xb8]
  1503: 97 88 10                 a1 = a1 << 0x10
  1506: 97 99 08                 a2 = a2 << 0x8
  1509: d4 98 08                 a1 = a1 | a2
  1512: d4 a8 08                 a1 = a1 | a3
  1515: 95 79 f5                 a2 = a0 + 0xfffffffffffffff5
  1518: ac 89 a9                 jump @96 if a2 <u a1
      :                          @103
  1521: 7c 17 bd 00              a0 = u8 [sp + 0xbd]
  1525: 7c 1a bc 00              a3 = u8 [sp + 0xbc]
  1529: 7c 1b bb 00              a4 = u8 [sp + 0xbb]
  1533: 97 77 10                 a0 = a0 << 0x10
  1536: 97 aa 08                 a3 = a3 << 0x8
  1539: d4 a7 07                 a0 = a0 | a3
  1542: d4 b7 07                 a0 = a0 | a4
  1545: c9 89 09                 a2 = a2 - a1
  1548: ac 79 8b                 jump @96 if a2 <u a0
      :                          @104
  1551: c9 79 06                 s1 = a2 - a0
  1554: 53 16 04 85              jump @96 if s1 <u 4
      :                          @105
  1558: 95 12 c3 00              t0 = sp + 0xc3
  1562: c8 28 03                 t1 = a1 + t0
  1565: c8 37 0b                 a4 = a0 + t1
  1568: 7c bc 03                 a5 = u8 [a4 + 0x3]
  1571: 7c b5 02                 s0 = u8 [a4 + 0x2]
  1574: 7c ba                    a3 = u8 [a4]
  1576: 7c b9 01                 a2 = u8 [a4 + 0x1]
  1579: 97 cc 10                 a5 = a5 << 0x10
  1582: 97 55 08                 s0 = s0 << 0x8
  1585: d4 5c 0c                 a5 = a5 | s0
  1588: d4 c9 09                 a2 = a2 | a5
  1591: 97 99 08                 a2 = a2 << 0x8
  1594: d4 a9 0c                 a5 = a2 | a3
  1597: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
  1600: ac c6 57 ff              jump @96 if s1 <u a5
      :                          @106
  1604: 7c 19 bf 00              a2 = u8 [sp + 0xbf]
  1608: 95 1a b8 20              a3 = sp + 0x20b8
  1612: 7c 14 be 00              t2 = u8 [sp + 0xbe]
  1616: 97 99 08                 a2 = a2 << 0x8
  1619: 7c 16 c2 00              s1 = u8 [sp + 0xc2]
  1623: 7c 15 c1 00              s0 = u8 [sp + 0xc1]
  1627: d4 49 04                 t2 = a2 | t2
  1630: 7c 19 c0 00              a2 = u8 [sp + 0xc0]
  1634: 97 66 10                 s1 = s1 << 0x10
  1637: 97 55 08                 s0 = s0 << 0x8
  1640: d4 65 05                 s0 = s0 | s1
  1643: d4 59 09                 a2 = a2 | s0
  1646: 33 05 ff ff ef           s0 = 0xffffffffffefffff
  1651: 7b 15 88 00              u64 [sp + 0x88] = s0
  1655: 95 bb 04                 a4 = a4 + 0x4
  1658: 7b a4                    u64 [a3] = t2
  1660: 7b a9 08                 u64 [a3 + 0x8] = a2
  1663: 7b a2 10                 u64 [a3 + 0x10] = t0
  1666: 7b a8 18                 u64 [a3 + 0x18] = a1
  1669: 7b a3 20                 u64 [a3 + 0x20] = t1
  1672: 7b a7 28                 u64 [a3 + 0x28] = a0
  1675: 7b ab 30                 u64 [a3 + 0x30] = a4
  1678: 7b ac 38                 u64 [a3 + 0x38] = a5
  1681: 7b aa 50                 u64 [a3 + 0x50] = a3
  1684: 33 08 16                 a1 = 0x16
  1687: 7b a8 58                 u64 [a3 + 0x58] = a1
  1690: 95 17 c0 20              a0 = sp + 0x20c0
  1694: 7b a7 60                 u64 [a3 + 0x60] = a0
  1697: 7b a8 68                 u64 [a3 + 0x68] = a1
  1700: 95 17 c8 20              a0 = sp + 0x20c8
  1704: 7b a7 70                 u64 [a3 + 0x70] = a0
  1707: 7b a8 78                 u64 [a3 + 0x78] = a1
  1710: 95 17 d0 20              a0 = sp + 0x20d0
  1714: 7b a7 80 00              u64 [a3 + 0x80] = a0
  1718: 7b a8 88 00              u64 [a3 + 0x88] = a1
  1722: 95 17 d8 20              a0 = sp + 0x20d8
  1726: 7b a7 90 00              u64 [a3 + 0x90] = a0
  1730: 7b a8 98 00              u64 [a3 + 0x98] = a1
  1734: 95 17 e0 20              a0 = sp + 0x20e0
  1738: 7b a7 a0 00              u64 [a3 + 0xa0] = a0
  1742: 7b a8 a8 00              u64 [a3 + 0xa8] = a1
  1746: 95 17 e8 20              a0 = sp + 0x20e8
  1750: 7b a7 b0 00              u64 [a3 + 0xb0] = a0
  1754: 7b a8 b8 00              u64 [a3 + 0xb8] = a1
  1758: 95 17 f0 20              a0 = sp + 0x20f0
  1762: 7b a7 c0 00              u64 [a3 + 0xc0] = a0
  1766: 7b 18 80 00              u64 [sp + 0x80] = a1
  1770: 7b a8 c8 00              u64 [a3 + 0xc8] = a1
  1774: 33 07 00 01 01           a0 = 0x10100
  1779: 95 16 10 31              s1 = sp + 0x3110
  1783: 7b 67 48 01              u64 [s1 + 0x148] = a0
  1787: 49 26 50 01 08           u64 [s1 + 336] = 0x8
  1792: 49 26 68 01              u64 [s1 + 360] = 0
  1796: 95 18 08 21              a1 = sp + 0x2108
  1800: 7b 68 58 01              u64 [s1 + 0x158] = a1
  1804: 49 26 60 01 08           u64 [s1 + 352] = 0x8
  1809: 95 17 a0 31              a0 = sp + 0x31a0
  1813: 95 18 58 32              a1 = sp + 0x3258
  1817: 50 10 3e 6f 34           ra = 62, jump @791
      :                          @107 [@dyn 31]
  1822: 82 65 98 00              s0 = u64 [s1 + 0x98]
  1826: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  1830: 82 66 90 00              s1 = u64 [s1 + 0x90]
  1834: 33 07 03                 a0 = 0x3
  1837: 33 08                    a1 = 0
  1839: 33 09                    a2 = 0
  1841: 64 5a                    a3 = s0
  1843: 33 00 40                 ra = 0x40
  1846: 0a 64                    ecalli 100 // 'log'
  1848: 01                       fallthrough
      :                          @108 [@dyn 32]
  1849: 82 17 88 00              a0 = u64 [sp + 0x88]
  1853: c8 67 07                 a0 = a0 + s1
  1856: 53 37 00 00 f0 27        jump @114 if a0 <u 4293918720
      :                          @109
  1862: 33 07 50 00 03           a0 = 0x30050
  1867: 95 77 00 00 10           a0 = a0 + 0x100000
  1872: 01                       fallthrough
      :                          @110
  1873: 82 78                    a1 = u64 [a0]
  1875: c9 87 09                 a2 = a0 - a1
  1878: ab 59 11                 jump @114 if a2 != s0
      :                          @111
  1881: c9 68 09                 a2 = a1 - s1
  1884: 01                       fallthrough
      :                          @112
  1885: 82 7a                    a3 = u64 [a0]
  1887: ab 8a f2                 jump @110 if a3 != a1
      :                          @113
  1890: 7b 79                    u64 [a0] = a2
  1892: 0a                       ecalli 0 // 'gas'
  1893: 28 04                    jump @115
      :                          @114
  1895: 0a                       ecalli 0 // 'gas'
  1896: 01                       fallthrough
      :                          @115
  1897: 95 18 b8 20              a1 = sp + 0x20b8
  1901: 7b 87 40                 u64 [a1 + 0x40] = a0
  1904: 95 17 f8 20              a0 = sp + 0x20f8
  1908: 95 16 10 31              s1 = sp + 0x3110
  1912: 7b 67 90 00              u64 [s1 + 0x90] = a0
  1916: 82 17 80 00              a0 = u64 [sp + 0x80]
  1920: 7b 67 98 00              u64 [s1 + 0x98] = a0
  1924: 33 07 90 01 01           a0 = 0x10190
  1929: 7b 87 50                 u64 [a1 + 0x50] = a0
  1932: 95 17 a0 31              a0 = sp + 0x31a0
  1936: 7b 87 60                 u64 [a1 + 0x60] = a0
  1939: 49 18 58 01              u64 [a1 + 88] = 0x1
  1943: 49 18 70                 u64 [a1 + 112] = 0
  1946: 49 18 68 01              u64 [a1 + 104] = 0x1
  1950: 95 17 58 32              a0 = sp + 0x3258
  1954: 95 18 08 21              a1 = sp + 0x2108
  1958: 50 10 42 e2 33           ra = 66, jump @791
      :                          @116 [@dyn 33]
  1963: 82 65 50 01              s0 = u64 [s1 + 0x150]
  1967: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  1971: 82 66 48 01              s1 = u64 [s1 + 0x148]
  1975: 33 07 04                 a0 = 0x4
  1978: 33 08                    a1 = 0
  1980: 33 09                    a2 = 0
  1982: 64 5a                    a3 = s0
  1984: 33 00 44                 ra = 0x44
  1987: 0a 64                    ecalli 100 // 'log'
  1989: 01                       fallthrough
      :                          @117 [@dyn 34]
  1990: 82 17 88 00              a0 = u64 [sp + 0x88]
  1994: c8 67 07                 a0 = a0 + s1
  1997: 53 37 00 00 f0 25        jump @123 if a0 <u 4293918720
      :                          @118
  2003: 33 07 50 00 03           a0 = 0x30050
  2008: 95 77 00 00 10           a0 = a0 + 0x100000
  2013: 01                       fallthrough
      :                          @119
  2014: 82 78                    a1 = u64 [a0]
  2016: c9 87 09                 a2 = a0 - a1
  2019: ab 59 0f                 jump @123 if a2 != s0
      :                          @120
  2022: c9 68 09                 a2 = a1 - s1
  2025: 01                       fallthrough
      :                          @121
  2026: 82 7a                    a3 = u64 [a0]
  2028: ab 8a f2                 jump @119 if a3 != a1
      :                          @122
  2031: 7b 79                    u64 [a0] = a2
  2033: 01                       fallthrough
      :                          @123
  2034: 95 15 b8 20              s0 = sp + 0x20b8
  2038: 82 57 30                 a0 = u64 [s0 + 0x30]
  2041: 82 58 38                 a1 = u64 [s0 + 0x38]
  2044: 33 09                    a2 = 0
  2046: 0a 14                    ecalli 20 // 'machine'
  2048: 7b 57 48                 u64 [s0 + 0x48] = a0
  2051: 95 17 00 21              a0 = sp + 0x2100
  2055: 95 16 10 31              s1 = sp + 0x3110
  2059: 7b 67 90 00              u64 [s1 + 0x90] = a0
  2063: 33 07 16                 a0 = 0x16
  2066: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2070: 33 07 b8 01 01           a0 = 0x101b8
  2075: 7b 57 50                 u64 [s0 + 0x50] = a0
  2078: 95 17 a0 31              a0 = sp + 0x31a0
  2082: 7b 57 60                 u64 [s0 + 0x60] = a0
  2085: 49 15 58 01              u64 [s0 + 88] = 0x1
  2089: 49 15 68 01              u64 [s0 + 104] = 0x1
  2093: 49 15 70                 u64 [s0 + 112] = 0
  2096: 95 17 58 32              a0 = sp + 0x3258
  2100: 95 18 08 21              a1 = sp + 0x2108
  2104: 50 10 46 50 33           ra = 70, jump @791
      :                          @124 [@dyn 35]
  2109: 82 65 50 01              s0 = u64 [s1 + 0x150]
  2113: 82 6b 58 01              a4 = u64 [s1 + 0x158]
  2117: 82 66 48 01              s1 = u64 [s1 + 0x148]
  2121: 33 07 03                 a0 = 0x3
  2124: 33 08                    a1 = 0
  2126: 33 09                    a2 = 0
  2128: 64 5a                    a3 = s0
  2130: 33 00 48                 ra = 0x48
  2133: 0a 64                    ecalli 100 // 'log'
  2135: 01                       fallthrough
      :                          @125 [@dyn 36]
  2136: 82 17 88 00              a0 = u64 [sp + 0x88]
  2140: c8 67 07                 a0 = a0 + s1
  2143: 53 37 00 00 f0 25        jump @131 if a0 <u 4293918720
      :                          @126
  2149: 33 07 50 00 03           a0 = 0x30050
  2154: 95 77 00 00 10           a0 = a0 + 0x100000
  2159: 01                       fallthrough
      :                          @127
  2160: 82 78                    a1 = u64 [a0]
  2162: c9 87 09                 a2 = a0 - a1
  2165: ab 59 0f                 jump @131 if a2 != s0
      :                          @128
  2168: c9 68 09                 a2 = a1 - s1
  2171: 01                       fallthrough
      :                          @129
  2172: 82 7a                    a3 = u64 [a0]
  2174: ab 8a f2                 jump @127 if a3 != a1
      :                          @130
  2177: 7b 79                    u64 [a0] = a2
  2179: 01                       fallthrough
      :                          @131
  2180: 95 19 b8 20              a2 = sp + 0x20b8
  2184: 82 97                    a0 = u64 [a2]
  2186: 7b 17 70                 u64 [sp + 0x70] = a0
  2189: 82 97 08                 a0 = u64 [a2 + 0x8]
  2192: 7b 17 68                 u64 [sp + 0x68] = a0
  2195: 82 97 10                 a0 = u64 [a2 + 0x10]
  2198: 7b 17 60                 u64 [sp + 0x60] = a0
  2201: 82 95 18                 s0 = u64 [a2 + 0x18]
  2204: 82 98 20                 a1 = u64 [a2 + 0x20]
  2207: 7b 18 58                 u64 [sp + 0x58] = a1
  2210: 80 97 48                 a0 = u32 [a2 + 0x48]
  2213: 82 96 28                 s1 = u64 [a2 + 0x28]
  2216: 49 11 78 ff 0f           u64 [sp + 120] = 0xfff
  2221: 95 59 ff 0f              a2 = s0 + 0xfff
  2225: 98 99 0c                 a2 = a2 >> 0xc
  2228: 33 08 10                 a1 = 0x10
  2231: 7b 17 80 00              u64 [sp + 0x80] = a0
  2235: 0a 17                    ecalli 23 // 'zero'
  2237: 01                       fallthrough
      :                          @132
  2238: 51 07 17                 jump @134 if a0 == 0
      :                          @133
  2241: 33 0a 34 12 01           a3 = 0x11234
  2246: 33 07 02                 a0 = 0x2
  2249: 33 0b 3e                 a4 = 0x3e
  2252: 33 08                    a1 = 0
  2254: 33 09                    a2 = 0
  2256: 0a 64                    ecalli 100 // 'log'
  2258: 28 e4 00                 jump @147
      :                          @134
  2261: 7b 16 50                 u64 [sp + 0x50] = s1
  2264: 82 17 78                 a0 = u64 [sp + 0x78]
  2267: c8 67 07                 a0 = a0 + s1
  2270: 98 77 0c                 a0 = a0 >> 0xc
  2273: 82 19 70                 a2 = u64 [sp + 0x70]
  2276: c8 79 09                 a2 = a2 + a0
  2279: 7b 15 70                 u64 [sp + 0x70] = s0
  2282: 95 57 ff ff 00           a0 = s0 + 0xffff
  2287: 84 77 00 00 ff           a0 = a0 & 0xffffffffffff0000
  2292: 95 75 00 00 02           s0 = a0 + 0x20000
  2297: 98 58 0c                 a1 = s0 >> 0xc
  2300: 82 17 80 00              a0 = u64 [sp + 0x80]
  2304: 0a 17                    ecalli 23 // 'zero'
  2306: 01                       fallthrough
      :                          @135
  2307: 51 07 17                 jump @137 if a0 == 0
      :                          @136
  2310: 33 0a f6 11 01           a3 = 0x111f6
  2315: 33 07 02                 a0 = 0x2
  2318: 33 0b 3e                 a4 = 0x3e
  2321: 33 08                    a1 = 0
  2323: 33 09                    a2 = 0
  2325: 0a 64                    ecalli 100 // 'log'
  2327: 28 9f 00                 jump @147
      :                          @137
  2330: 82 16 78                 s1 = u64 [sp + 0x78]
  2333: 82 17 68                 a0 = u64 [sp + 0x68]
  2336: c8 76 06                 s1 = s1 + a0
  2339: 98 69 0c                 a2 = s1 >> 0xc
  2342: 84 67 00 f0              a0 = s1 & 0xfffffffffffff000
  2346: 14 08 00 00 fe fe 00 00 00 00 a1 = 0xfefe0000
  2356: c9 78 08                 a1 = a1 - a0
  2359: 98 88 0c                 a1 = a1 >> 0xc
  2362: 82 17 80 00              a0 = u64 [sp + 0x80]
  2366: 0a 17                    ecalli 23 // 'zero'
  2368: 01                       fallthrough
      :                          @138
  2369: 51 07 16                 jump @140 if a0 == 0
      :                          @139
  2372: 33 0a ba 11 01           a3 = 0x111ba
  2377: 33 07 02                 a0 = 0x2
  2380: 33 0b 3c                 a4 = 0x3c
  2383: 33 08                    a1 = 0
  2385: 33 09                    a2 = 0
  2387: 0a 64                    ecalli 100 // 'log'
  2389: 28 61                    jump @147
      :                          @140
  2391: 33 09 00 00 01           a2 = 0x10000
  2396: 82 17 80 00              a0 = u64 [sp + 0x80]
  2400: 82 18 60                 a1 = u64 [sp + 0x60]
  2403: 82 1a 70                 a3 = u64 [sp + 0x70]
  2406: 0a 16                    ecalli 22 // 'poke'
  2408: 01                       fallthrough
      :                          @141
  2409: 51 07 16                 jump @143 if a0 == 0
      :                          @142
  2412: 33 0a 7c 11 01           a3 = 0x1117c
  2417: 33 07 02                 a0 = 0x2
  2420: 33 0b 3e                 a4 = 0x3e
  2423: 33 08                    a1 = 0
  2425: 33 09                    a2 = 0
  2427: 0a 64                    ecalli 100 // 'log'
  2429: 28 39                    jump @147
      :                          @143
  2431: 82 17 80 00              a0 = u64 [sp + 0x80]
  2435: 82 18 58                 a1 = u64 [sp + 0x58]
  2438: 64 59                    a2 = s0
  2440: 82 1a 50                 a3 = u64 [sp + 0x50]
  2443: 0a 16                    ecalli 22 // 'poke'
  2445: 01                       fallthrough
      :                          @144
  2446: 51 07 16                 jump @146 if a0 == 0
      :                          @145
  2449: 33 0a 3e 11 01           a3 = 0x1113e
  2454: 33 07 02                 a0 = 0x2
  2457: 33 0b 3e                 a4 = 0x3e
  2460: 33 08                    a1 = 0
  2462: 33 09                    a2 = 0
  2464: 0a 64                    ecalli 100 // 'log'
  2466: 28 14                    jump @147
      :                          @146
  2468: 33 0a 10 11 01           a3 = 0x11110
  2473: 33 07 02                 a0 = 0x2
  2476: 33 0b 2e                 a4 = 0x2e
  2479: 33 08                    a1 = 0
  2481: 33 09                    a2 = 0
  2483: 0a 64                    ecalli 100 // 'log'
  2485: 01                       fallthrough
      :                          @147
  2486: 95 15 10 31              s0 = sp + 0x3110
  2490: 33 06 08 10              s1 = 0x1008
  2494: 95 17 08 21              a0 = sp + 0x2108
  2498: 33 08                    a1 = 0
  2500: 33 09 08 10              a2 = 0x1008
  2504: 50 10 4a ed 34           ra = 74, jump @858
      :                          @148 [@dyn 37]
  2509: 49 05                    u64 [s0 + 0] = 0
  2511: 95 17 10 21              a0 = sp + 0x2110
  2515: 7b 57 08                 u64 [s0 + 0x8] = a0
  2518: 49 15 10                 u64 [s0 + 16] = 0
  2521: 49 15 18                 u64 [s0 + 24] = 0
  2524: 95 17 08 21              a0 = sp + 0x2108
  2528: 33 0a 06                 a3 = 0x6
  2531: 33 08                    a1 = 0
  2533: 7b 16 70                 u64 [sp + 0x70] = s1
  2536: 64 69                    a2 = s1
  2538: 33 0b                    a4 = 0
  2540: 33 0c                    a5 = 0
  2542: 0a 12                    ecalli 18 // 'fetch'
  2544: 01                       fallthrough
      :                          @149
  2545: 7b 57 58 02              u64 [s0 + 0x258] = a0
  2549: 95 16 10 31              s1 = sp + 0x3110
  2553: 51 17 ff 78 02           jump @176 if a0 == 4294967295
      :                          @150
  2558: 33 07 16                 a0 = 0x16
  2561: 7b 17 80 00              u64 [sp + 0x80] = a0
  2565: 33 07 f0 01 01           a0 = 0x101f0
  2570: 7b 17 68                 u64 [sp + 0x68] = a0
  2573: 33 07 30 02 01           a0 = 0x10230
  2578: 7b 17 60                 u64 [sp + 0x60] = a0
  2581: 33 07 28 00 01           a0 = 0x10028
  2586: 7b 17 58                 u64 [sp + 0x58] = a0
  2589: 33 05 50 00 03           s0 = 0x30050
  2594: 95 55 00 00 10           s0 = s0 + 0x100000
  2599: 33 07 80 02 01           a0 = 0x10280
  2604: 7b 17 50                 u64 [sp + 0x50] = a0
  2607: 28 27                    jump @153
      :                          @151
  2609: 95 16 10 31              s1 = sp + 0x3110
  2613: 82 6b                    a4 = u64 [s1]
  2615: 95 bb 01                 a4 = a4 + 0x1
  2618: 7b 6b                    u64 [s1] = a4
  2620: 95 17 08 21              a0 = sp + 0x2108
  2624: 33 0a 06                 a3 = 0x6
  2627: 33 08                    a1 = 0
  2629: 82 19 70                 a2 = u64 [sp + 0x70]
  2632: 33 0c                    a5 = 0
  2634: 0a 12                    ecalli 18 // 'fetch'
  2636: 01                       fallthrough
      :                          @152
  2637: 7b 67 58 02              u64 [s1 + 0x258] = a0
  2641: 51 17 ff 20 02           jump @176 if a0 == 4294967295
      :                          @153
  2646: 7b 66 90 00              u64 [s1 + 0x90] = s1
  2650: 82 17 80 00              a0 = u64 [sp + 0x80]
  2654: 7b 67 98 00              u64 [s1 + 0x98] = a0
  2658: 95 18 68 33              a1 = sp + 0x3368
  2662: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  2666: 7b 67 a8 00              u64 [s1 + 0xa8] = a0
  2670: 82 17 68                 a0 = u64 [sp + 0x68]
  2673: 7b 67 48 01              u64 [s1 + 0x148] = a0
  2677: 49 26 50 01 02           u64 [s1 + 336] = 0x2
  2682: 49 26 68 01              u64 [s1 + 360] = 0
  2686: 95 18 a0 31              a1 = sp + 0x31a0
  2690: 7b 68 58 01              u64 [s1 + 0x158] = a1
  2694: 49 26 60 01 02           u64 [s1 + 352] = 0x2
  2699: 95 17 38 31              a0 = sp + 0x3138
  2703: 95 18 58 32              a1 = sp + 0x3258
  2707: 50 10 4c f5 30           ra = 76, jump @791
      :                          @154 [@dyn 38]
  2712: 95 17 10 31              a0 = sp + 0x3110
  2716: 82 76 30                 s1 = u64 [a0 + 0x30]
  2719: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2722: 82 77 28                 a0 = u64 [a0 + 0x28]
  2725: 7b 17 78                 u64 [sp + 0x78] = a0
  2728: 33 07 04                 a0 = 0x4
  2731: 33 08                    a1 = 0
  2733: 33 09                    a2 = 0
  2735: 64 6a                    a3 = s1
  2737: 33 00 4e                 ra = 0x4e
  2740: 0a 64                    ecalli 100 // 'log'
  2742: 01                       fallthrough
      :                          @155 [@dyn 39]
  2743: 82 1b 78                 a4 = u64 [sp + 0x78]
  2746: 82 17 88 00              a0 = u64 [sp + 0x88]
  2750: c8 b7 07                 a0 = a0 + a4
  2753: 53 37 00 00 f0 1a        jump @160 if a0 <u 4293918720
      :                          @156
  2759: 82 57                    a0 = u64 [s0]
  2761: c9 75 08                 a1 = s0 - a0
  2764: ab 68 0f                 jump @160 if a1 != s1
      :                          @157
  2767: c9 b7 08                 a1 = a0 - a4
  2770: 01                       fallthrough
      :                          @158
  2771: 82 59                    a2 = u64 [s0]
  2773: ab 79 f2                 jump @156 if a2 != a0
      :                          @159
  2776: 7b 58                    u64 [s0] = a1
  2778: 01                       fallthrough
      :                          @160
  2779: 95 18 b8 20              a1 = sp + 0x20b8
  2783: 80 87 50                 a0 = u32 [a1 + 0x50]
  2786: 80 88 54                 a1 = u32 [a1 + 0x54]
  2789: 95 19 10 31              a2 = sp + 0x3110
  2793: 7b 97 10                 u64 [a2 + 0x10] = a0
  2796: 7b 98 18                 u64 [a2 + 0x18] = a1
  2799: 33 09 01                 a2 = 0x1
  2802: 0a 17                    ecalli 23 // 'zero'
  2804: 95 19 10 31              a2 = sp + 0x3110
  2808: 7b 97 60 02              u64 [a2 + 0x260] = a0
  2812: 95 17 20 31              a0 = sp + 0x3120
  2816: 7b 97 48 01              u64 [a2 + 0x148] = a0
  2820: 82 17 80 00              a0 = u64 [sp + 0x80]
  2824: 7b 97 50 01              u64 [a2 + 0x150] = a0
  2828: 95 18 28 31              a1 = sp + 0x3128
  2832: 7b 98 58 01              u64 [a2 + 0x158] = a1
  2836: 7b 97 60 01              u64 [a2 + 0x160] = a0
  2840: 95 18 70 33              a1 = sp + 0x3370
  2844: 7b 98 68 01              u64 [a2 + 0x168] = a1
  2848: 7b 97 70 01              u64 [a2 + 0x170] = a0
  2852: 82 17 60                 a0 = u64 [sp + 0x60]
  2855: 7b 97 90 00              u64 [a2 + 0x90] = a0
  2859: 49 29 98 00 03           u64 [a2 + 152] = 0x3
  2864: 49 29 b0 00              u64 [a2 + 176] = 0
  2868: 95 17 58 32              a0 = sp + 0x3258
  2872: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  2876: 49 29 a8 00 03           u64 [a2 + 168] = 0x3
  2881: 95 17 38 31              a0 = sp + 0x3138
  2885: 95 18 a0 31              a1 = sp + 0x31a0
  2889: 50 10 50 3f 30           ra = 80, jump @791
      :                          @161 [@dyn 40]
  2894: 95 17 10 31              a0 = sp + 0x3110
  2898: 82 76 30                 s1 = u64 [a0 + 0x30]
  2901: 82 7b 38                 a4 = u64 [a0 + 0x38]
  2904: 82 77 28                 a0 = u64 [a0 + 0x28]
  2907: 7b 17 78                 u64 [sp + 0x78] = a0
  2910: 33 07 04                 a0 = 0x4
  2913: 33 08                    a1 = 0
  2915: 33 09                    a2 = 0
  2917: 64 6a                    a3 = s1
  2919: 33 00 52                 ra = 0x52
  2922: 0a 64                    ecalli 100 // 'log'
  2924: 01                       fallthrough
      :                          @162 [@dyn 41]
  2925: 82 1b 78                 a4 = u64 [sp + 0x78]
  2928: 82 17 88 00              a0 = u64 [sp + 0x88]
  2932: c8 b7 07                 a0 = a0 + a4
  2935: 53 37 00 00 f0 1a        jump @167 if a0 <u 4293918720
      :                          @163
  2941: 82 57                    a0 = u64 [s0]
  2943: c9 75 08                 a1 = s0 - a0
  2946: ab 68 0f                 jump @167 if a1 != s1
      :                          @164
  2949: c9 b7 08                 a1 = a0 - a4
  2952: 01                       fallthrough
      :                          @165
  2953: 82 59                    a2 = u64 [s0]
  2955: ab 79 f2                 jump @163 if a2 != a0
      :                          @166
  2958: 7b 58                    u64 [s0] = a1
  2960: 01                       fallthrough
      :                          @167
  2961: 95 1b 10 31              a4 = sp + 0x3110
  2965: 82 b9 18                 a2 = u64 [a4 + 0x18]
  2968: 82 b7 10                 a0 = u64 [a4 + 0x10]
  2971: 82 b8 08                 a1 = u64 [a4 + 0x8]
  2974: 95 1a 08 21              a3 = sp + 0x2108
  2978: 7b ba 70 02              u64 [a4 + 0x270] = a3
  2982: 97 99 0c                 a2 = a2 << 0xc
  2985: 7b b9 80 02              u64 [a4 + 0x280] = a2
  2989: 33 0a 00 10              a3 = 0x1000
  2993: 0a 16                    ecalli 22 // 'poke'
  2995: 95 19 10 31              a2 = sp + 0x3110
  2999: 7b 97 08 01              u64 [a2 + 0x108] = a0
  3003: 95 17 20 31              a0 = sp + 0x3120
  3007: 7b 97 48 01              u64 [a2 + 0x148] = a0
  3011: 82 17 80 00              a0 = u64 [sp + 0x80]
  3015: 7b 97 50 01              u64 [a2 + 0x150] = a0
  3019: 95 18 80 33              a1 = sp + 0x3380
  3023: 7b 98 58 01              u64 [a2 + 0x158] = a1
  3027: 7b 97 60 01              u64 [a2 + 0x160] = a0
  3031: 95 18 90 33              a1 = sp + 0x3390
  3035: 7b 98 68 01              u64 [a2 + 0x168] = a1
  3039: 7b 97 70 01              u64 [a2 + 0x170] = a0
  3043: 82 18 58                 a1 = u64 [sp + 0x58]
  3046: 7b 98 78 01              u64 [a2 + 0x178] = a1
  3050: 7b 97 80 01              u64 [a2 + 0x180] = a0
  3054: 95 18 18 32              a1 = sp + 0x3218
  3058: 7b 98 88 01              u64 [a2 + 0x188] = a1
  3062: 7b 97 90 01              u64 [a2 + 0x190] = a0
  3066: 82 17 50                 a0 = u64 [sp + 0x50]
  3069: 7b 97 90 00              u64 [a2 + 0x90] = a0
  3073: 49 29 98 00 05           u64 [a2 + 152] = 0x5
  3078: 49 29 b0 00              u64 [a2 + 176] = 0
  3082: 95 17 58 32              a0 = sp + 0x3258
  3086: 7b 97 a0 00              u64 [a2 + 0xa0] = a0
  3090: 49 29 a8 00 05           u64 [a2 + 168] = 0x5
  3095: 95 17 38 31              a0 = sp + 0x3138
  3099: 95 18 a0 31              a1 = sp + 0x31a0
  3103: 50 10 54 69 2f           ra = 84, jump @791
      :                          @168 [@dyn 42]
  3108: 95 17 10 31              a0 = sp + 0x3110
  3112: 82 76 30                 s1 = u64 [a0 + 0x30]
  3115: 82 7b 38                 a4 = u64 [a0 + 0x38]
  3118: 82 77 28                 a0 = u64 [a0 + 0x28]
  3121: 7b 17 78                 u64 [sp + 0x78] = a0
  3124: 33 07 04                 a0 = 0x4
  3127: 33 08                    a1 = 0
  3129: 33 09                    a2 = 0
  3131: 64 6a                    a3 = s1
  3133: 33 00 56                 ra = 0x56
  3136: 0a 64                    ecalli 100 // 'log'
  3138: 01                       fallthrough
      :                          @169 [@dyn 43]
  3139: 82 1b 78                 a4 = u64 [sp + 0x78]
  3142: 82 17 88 00              a0 = u64 [sp + 0x88]
  3146: c8 b7 07                 a0 = a0 + a4
  3149: 53 37 00 00 f0 e4 fd     jump @151 if a0 <u 4293918720
      :                          @170
  3156: 82 57                    a0 = u64 [s0]
  3158: c9 75 08                 a1 = s0 - a0
  3161: ab 68 d8 fd              jump @151 if a1 != s1
      :                          @171
  3165: c9 b7 08                 a1 = a0 - a4
  3168: 01                       fallthrough
      :                          @172
  3169: 82 59                    a2 = u64 [s0]
  3171: ab 79 f1                 jump @170 if a2 != a0
      :                          @173
  3174: 7b 58                    u64 [s0] = a1
  3176: 33 0a                    a3 = 0
  3178: 01                       fallthrough
      :                          @174
  3179: ab 79 e9                 jump @170 if a2 != a0
      :                          @175
  3182: 28 c3 fd                 jump @151
      :                          @176
  3185: 82 69 18                 a2 = u64 [s1 + 0x18]
  3188: 95 9a 01                 a3 = a2 + 0x1
  3191: 33 08 f0 ef 0f           a1 = 0xfeff0
  3196: 82 67 10                 a0 = u64 [s1 + 0x10]
  3199: db 9a 08                 a1 = a3 if a2 != 0
  3202: 7b 68 18                 u64 [s1 + 0x18] = a1
  3205: 33 09 01                 a2 = 0x1
  3208: 0a 17                    ecalli 23 // 'zero'
  3210: 7b 67 20                 u64 [s1 + 0x20] = a0
  3213: 95 17 20 31              a0 = sp + 0x3120
  3217: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3221: 33 07 16                 a0 = 0x16
  3224: 7b 67 50 01              u64 [s1 + 0x150] = a0
  3228: 95 18 28 31              a1 = sp + 0x3128
  3232: 7b 68 58 01              u64 [s1 + 0x158] = a1
  3236: 7b 67 60 01              u64 [s1 + 0x160] = a0
  3240: 95 18 30 31              a1 = sp + 0x3130
  3244: 7b 68 68 01              u64 [s1 + 0x168] = a1
  3248: 7b 67 70 01              u64 [s1 + 0x170] = a0
  3252: 33 07 e8 02 01           a0 = 0x102e8
  3257: 7b 67 90 00              u64 [s1 + 0x90] = a0
  3261: 49 26 98 00 03           u64 [s1 + 152] = 0x3
  3266: 49 26 b0 00              u64 [s1 + 176] = 0
  3270: 95 18 58 32              a1 = sp + 0x3258
  3274: 7b 68 a0 00              u64 [s1 + 0xa0] = a1
  3278: 49 26 a8 00 03           u64 [s1 + 168] = 0x3
  3283: 95 17 38 31              a0 = sp + 0x3138
  3287: 95 18 a0 31              a1 = sp + 0x31a0
  3291: 50 10 58 ad 2e           ra = 88, jump @791
      :                          @177 [@dyn 44]
  3296: 82 65 30                 s0 = u64 [s1 + 0x30]
  3299: 82 6b 38                 a4 = u64 [s1 + 0x38]
  3302: 82 66 28                 s1 = u64 [s1 + 0x28]
  3305: 33 07 04                 a0 = 0x4
  3308: 33 08                    a1 = 0
  3310: 33 09                    a2 = 0
  3312: 64 5a                    a3 = s0
  3314: 33 00 5a                 ra = 0x5a
  3317: 0a 64                    ecalli 100 // 'log'
  3319: 01                       fallthrough
      :                          @178 [@dyn 45]
  3320: 82 17 88 00              a0 = u64 [sp + 0x88]
  3324: c8 67 07                 a0 = a0 + s1
  3327: 53 37 00 00 f0 27        jump @184 if a0 <u 4293918720
      :                          @179
  3333: 33 07 50 00 03           a0 = 0x30050
  3338: 95 77 00 00 10           a0 = a0 + 0x100000
  3343: 01                       fallthrough
      :                          @180
  3344: 82 78                    a1 = u64 [a0]
  3346: c9 87 09                 a2 = a0 - a1
  3349: ab 59 11                 jump @184 if a2 != s0
      :                          @181
  3352: c9 68 09                 a2 = a1 - s1
  3355: 01                       fallthrough
      :                          @182
  3356: 82 7a                    a3 = u64 [a0]
  3358: ab 8a f2                 jump @180 if a3 != a1
      :                          @183
  3361: 7b 79                    u64 [a0] = a2
  3363: 33 0b                    a4 = 0
  3365: 01                       fallthrough
      :                          @184
  3366: 95 16 10 31              s1 = sp + 0x3110
  3370: 49 16 58                 u64 [s1 + 88] = 0
  3373: 49 16 50                 u64 [s1 + 80] = 0
  3376: 49 16 48                 u64 [s1 + 72] = 0
  3379: 49 16 40                 u64 [s1 + 64] = 0
  3382: 49 16 38                 u64 [s1 + 56] = 0
  3385: 49 16 70                 u64 [s1 + 112] = 0
  3388: 49 16 78                 u64 [s1 + 120] = 0
  3391: 14 07 00 00 ff ff 00 00 00 00 a0 = 0xffff0000
  3401: 7b 67 28                 u64 [s1 + 0x28] = a0
  3404: 14 07 00 00 fe fe 00 00 00 00 a0 = 0xfefe0000
  3414: 7b 67 30                 u64 [s1 + 0x30] = a0
  3417: 82 67                    a0 = u64 [s1]
  3419: 49 26 80 00              u64 [s1 + 128] = 0
  3423: 49 26 88 00              u64 [s1 + 136] = 0
  3427: 49 16 68                 u64 [s1 + 104] = 0
  3430: 7b 67 60                 u64 [s1 + 0x60] = a0
  3433: 95 17 38 31              a0 = sp + 0x3138
  3437: 7b 67 08 01              u64 [s1 + 0x108] = a0
  3441: 33 07 1a                 a0 = 0x1a
  3444: 7b 67 10 01              u64 [s1 + 0x110] = a0
  3448: 33 07 38 03 01           a0 = 0x10338
  3453: 7b 67 48 01              u64 [s1 + 0x148] = a0
  3457: 49 26 50 01 01           u64 [s1 + 336] = 0x1
  3462: 49 26 68 01              u64 [s1 + 360] = 0
  3466: 95 17 18 32              a0 = sp + 0x3218
  3470: 7b 67 58 01              u64 [s1 + 0x158] = a0
  3474: 49 26 60 01 01           u64 [s1 + 352] = 0x1
  3479: 95 17 a0 31              a0 = sp + 0x31a0
  3483: 95 18 58 32              a1 = sp + 0x3258
  3487: 50 10 5c e9 2d           ra = 92, jump @791
      :                          @185 [@dyn 46]
  3492: 82 65 98 00              s0 = u64 [s1 + 0x98]
  3496: 82 6b a0 00              a4 = u64 [s1 + 0xa0]
  3500: 82 66 90 00              s1 = u64 [s1 + 0x90]
  3504: 33 07 04                 a0 = 0x4
  3507: 33 08                    a1 = 0
  3509: 33 09                    a2 = 0
  3511: 64 5a                    a3 = s0
  3513: 33 00 5e                 ra = 0x5e
  3516: 0a 64                    ecalli 100 // 'log'
  3518: 01                       fallthrough
      :                          @186 [@dyn 47]
  3519: 82 17 88 00              a0 = u64 [sp + 0x88]
  3523: c8 67 07                 a0 = a0 + s1
  3526: 53 37 00 00 f0 25        jump @192 if a0 <u 4293918720
      :                          @187
  3532: 33 07 50 00 03           a0 = 0x30050
  3537: 95 77 00 00 10           a0 = a0 + 0x100000
  3542: 01                       fallthrough
      :                          @188
  3543: 82 78                    a1 = u64 [a0]
  3545: c9 87 09                 a2 = a0 - a1
  3548: ab 59 0f                 jump @192 if a2 != s0
      :                          @189
  3551: c9 68 09                 a2 = a1 - s1
  3554: 01                       fallthrough
      :                          @190
  3555: 82 7a                    a3 = u64 [a0]
  3557: ab 8a f2                 jump @188 if a3 != a1
      :                          @191
  3560: 7b 79                    u64 [a0] = a2
  3562: 01                       fallthrough
      :                          @192
  3563: 95 13 10 31              t1 = sp + 0x3110
  3567: 82 32 28                 t0 = u64 [t1 + 0x28]
  3570: 82 39 30                 a2 = u64 [t1 + 0x30]
  3573: 82 34 38                 t2 = u64 [t1 + 0x38]
  3576: 82 30 40                 ra = u64 [t1 + 0x40]
  3579: 82 3b 48                 a4 = u64 [t1 + 0x48]
  3582: 82 3c 50                 a5 = u64 [t1 + 0x50]
  3585: 82 36 58                 s1 = u64 [t1 + 0x58]
  3588: 82 35 60                 s0 = u64 [t1 + 0x60]
  3591: 49 23 90 00 00 00 01     u64 [t1 + 144] = 0x10000
  3598: 82 37 68                 a0 = u64 [t1 + 0x68]
  3601: 7b 32 98 00              u64 [t1 + 0x98] = t0
  3605: 82 38 70                 a1 = u64 [t1 + 0x70]
  3608: 7b 39 a0 00              u64 [t1 + 0xa0] = a2
  3612: 82 39 78                 a2 = u64 [t1 + 0x78]
  3615: 7b 34 a8 00              u64 [t1 + 0xa8] = t2
  3619: 82 3a 80 00              a3 = u64 [t1 + 0x80]
  3623: 7b 30 b0 00              u64 [t1 + 0xb0] = ra
  3627: 82 32 88 00              t0 = u64 [t1 + 0x88]
  3631: 7b 3b b8 00              u64 [t1 + 0xb8] = a4
  3635: 7b 3c c0 00              u64 [t1 + 0xc0] = a5
  3639: 7b 36 c8 00              u64 [t1 + 0xc8] = s1
  3643: 7b 35 d0 00              u64 [t1 + 0xd0] = s0
  3647: 95 15 10 31              s0 = sp + 0x3110
  3651: 7b 57 d8 00              u64 [s0 + 0xd8] = a0
  3655: 7b 58 e0 00              u64 [s0 + 0xe0] = a1
  3659: 7b 59 e8 00              u64 [s0 + 0xe8] = a2
  3663: 7b 5a f0 00              u64 [s0 + 0xf0] = a3
  3667: 7b 52 f8 00              u64 [s0 + 0xf8] = t0
  3671: 33 07 16                 a0 = 0x16
  3674: 7b 17 70                 u64 [sp + 0x70] = a0
  3677: 33 07 68 03 01           a0 = 0x10368
  3682: 7b 17 68                 u64 [sp + 0x68] = a0
  3685: 33 06 50 00 03           s1 = 0x30050
  3690: 95 66 00 00 10           s1 = s1 + 0x100000
  3695: 01                       fallthrough
      :                          @193
  3696: 95 17 b8 20              a0 = sp + 0x20b8
  3700: 82 77 48                 a0 = u64 [a0 + 0x48]
  3703: 95 18 a0 31              a1 = sp + 0x31a0
  3707: 0a 19                    ecalli 25 // 'invoke'
  3709: 7b 18 78                 u64 [sp + 0x78] = a1
  3712: 7b 57 00 01              u64 [s0 + 0x100] = a0
  3716: 95 17 00 21              a0 = sp + 0x2100
  3720: 7b 57 48 01              u64 [s0 + 0x148] = a0
  3724: 82 17 70                 a0 = u64 [sp + 0x70]
  3727: 7b 57 50 01              u64 [s0 + 0x150] = a0
  3731: 95 18 10 32              a1 = sp + 0x3210
  3735: 7b 58 58 01              u64 [s0 + 0x158] = a1
  3739: 7b 57 60 01              u64 [s0 + 0x160] = a0
  3743: 95 18 f8 20              a1 = sp + 0x20f8
  3747: 7b 58 68 01              u64 [s0 + 0x168] = a1
  3751: 7b 57 70 01              u64 [s0 + 0x170] = a0
  3755: 82 17 68                 a0 = u64 [sp + 0x68]
  3758: 7b 57 08 01              u64 [s0 + 0x108] = a0
  3762: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  3767: 49 25 28 01              u64 [s0 + 296] = 0
  3771: 95 17 58 32              a0 = sp + 0x3258
  3775: 7b 57 18 01              u64 [s0 + 0x118] = a0
  3779: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  3784: 95 17 90 33              a0 = sp + 0x3390
  3788: 95 18 18 32              a1 = sp + 0x3218
  3792: 50 10 60 b8 2c           ra = 96, jump @791
      :                          @194 [@dyn 48]
  3797: 95 17 10 31              a0 = sp + 0x3110
  3801: 82 75 88 02              s0 = u64 [a0 + 0x288]
  3805: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  3809: 82 77 80 02              a0 = u64 [a0 + 0x280]
  3813: 7b 17 80 00              u64 [sp + 0x80] = a0
  3817: 33 07 04                 a0 = 0x4
  3820: 33 08                    a1 = 0
  3822: 33 09                    a2 = 0
  3824: 64 5a                    a3 = s0
  3826: 33 00 62                 ra = 0x62
  3829: 0a 64                    ecalli 100 // 'log'
  3831: 01                       fallthrough
      :                          @195 [@dyn 49]
  3832: 82 1b 80 00              a4 = u64 [sp + 0x80]
  3836: 82 17 88 00              a0 = u64 [sp + 0x88]
  3840: c8 b7 07                 a0 = a0 + a4
  3843: 53 37 00 00 f0 1a        jump @200 if a0 <u 4293918720
      :                          @196
  3849: 82 67                    a0 = u64 [s1]
  3851: c9 76 08                 a1 = s1 - a0
  3854: ab 58 0f                 jump @200 if a1 != s0
      :                          @197
  3857: c9 b7 08                 a1 = a0 - a4
  3860: 01                       fallthrough
      :                          @198
  3861: 82 69                    a2 = u64 [s1]
  3863: ab 79 f2                 jump @196 if a2 != a0
      :                          @199
  3866: 7b 68                    u64 [s1] = a1
  3868: 01                       fallthrough
      :                          @200
  3869: 95 15 10 31              s0 = sp + 0x3110
  3873: 82 57 00 01              a0 = u64 [s0 + 0x100]
  3877: 51 07 b4 00              jump @205 if a0 == 0
      :                          @201
  3881: 85 77 03                 a0 = a0 ^ 0x3
  3884: 82 18 78                 a1 = u64 [sp + 0x78]
  3887: 85 88 64                 a1 = a1 ^ 0x64
  3890: d4 87 07                 a0 = a0 | a1
  3893: 52 07 3b ff              jump @193 if a0 != 0
      :                          @202
  3897: 95 17 38 31              a0 = sp + 0x3138
  3901: 33 09 68                 a2 = 0x68
  3904: 95 18 a8 31              a1 = sp + 0x31a8
  3908: 50 10 64 bf 2e           ra = 100, jump @840
      :                          @203 [@dyn 50]
  3913: 82 57 60                 a0 = u64 [s0 + 0x60]
  3916: 7b 17 78                 u64 [sp + 0x78] = a0
  3919: 82 57 68                 a0 = u64 [s0 + 0x68]
  3922: 7b 17 58                 u64 [sp + 0x58] = a0
  3925: 82 57 70                 a0 = u64 [s0 + 0x70]
  3928: 7b 17 80 00              u64 [sp + 0x80] = a0
  3932: 82 57 78                 a0 = u64 [s0 + 0x78]
  3935: 7b 17 60                 u64 [sp + 0x60] = a0
  3938: 95 17 10 31              a0 = sp + 0x3110
  3942: 82 75 80 00              s0 = u64 [a0 + 0x80]
  3946: 49 27 40 01              u64 [a0 + 320] = 0
  3950: 49 27 38 01              u64 [a0 + 312] = 0
  3954: 49 27 30 01              u64 [a0 + 304] = 0
  3958: 49 27 28 01              u64 [a0 + 296] = 0
  3962: 49 27 20 01              u64 [a0 + 288] = 0
  3966: 49 27 18 01              u64 [a0 + 280] = 0
  3970: 49 27 10 01              u64 [a0 + 272] = 0
  3974: 49 27 08 01              u64 [a0 + 264] = 0
  3978: 95 17 58 32              a0 = sp + 0x3258
  3982: 33 09 00 01              a2 = 0x100
  3986: 33 08                    a1 = 0
  3988: 50 10 66 21 2f           ra = 102, jump @858
      :                          @204 [@dyn 51]
  3993: 95 17 b8 20              a0 = sp + 0x20b8
  3997: 82 77 48                 a0 = u64 [a0 + 0x48]
  4000: 95 18 18 32              a1 = sp + 0x3218
  4004: 82 19 58                 a2 = u64 [sp + 0x58]
  4007: 82 1a 80 00              a3 = u64 [sp + 0x80]
  4011: 0a 15                    ecalli 21 // 'peek'
  4013: 95 17 b8 20              a0 = sp + 0x20b8
  4017: 82 77 48                 a0 = u64 [a0 + 0x48]
  4020: 95 18 58 32              a1 = sp + 0x3258
  4024: 82 19 60                 a2 = u64 [sp + 0x60]
  4027: 64 5a                    a3 = s0
  4029: 0a 15                    ecalli 21 // 'peek'
  4031: 95 18 18 32              a1 = sp + 0x3218
  4035: 95 1a 58 32              a3 = sp + 0x3258
  4039: 82 17 78                 a0 = u64 [sp + 0x78]
  4042: 82 19 80 00              a2 = u64 [sp + 0x80]
  4046: 64 5b                    a4 = s0
  4048: 95 15 10 31              s0 = sp + 0x3110
  4052: 0a 64                    ecalli 100 // 'log'
  4054: 28 9a fe                 jump @193
      :                          @205
  4057: 0a                       ecalli 0 // 'gas'
  4058: 95 18 b8 20              a1 = sp + 0x20b8
  4062: 7b 87 40                 u64 [a1 + 0x40] = a0
  4065: 95 17 f8 20              a0 = sp + 0x20f8
  4069: 7b 57 80 02              u64 [s0 + 0x280] = a0
  4073: 33 07 16                 a0 = 0x16
  4076: 7b 57 88 02              u64 [s0 + 0x288] = a0
  4080: 33 07 90 01 01           a0 = 0x10190
  4085: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4089: 49 25 50 01 01           u64 [s0 + 336] = 0x1
  4094: 49 25 68 01              u64 [s0 + 360] = 0
  4098: 95 18 90 33              a1 = sp + 0x3390
  4102: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4106: 49 25 60 01 01           u64 [s0 + 352] = 0x1
  4111: 95 17 18 32              a0 = sp + 0x3218
  4115: 95 18 58 32              a1 = sp + 0x3258
  4119: 50 10 68 71 2b           ra = 104, jump @791
      :                          @206 [@dyn 52]
  4124: 95 17 10 31              a0 = sp + 0x3110
  4128: 82 75 10 01              s0 = u64 [a0 + 0x110]
  4132: 82 7b 18 01              a4 = u64 [a0 + 0x118]
  4136: 82 76 08 01              s1 = u64 [a0 + 0x108]
  4140: 33 07 04                 a0 = 0x4
  4143: 33 08                    a1 = 0
  4145: 33 09                    a2 = 0
  4147: 64 5a                    a3 = s0
  4149: 33 00 6a                 ra = 0x6a
  4152: 0a 64                    ecalli 100 // 'log'
  4154: 01                       fallthrough
      :                          @207 [@dyn 53]
  4155: 82 17 88 00              a0 = u64 [sp + 0x88]
  4159: c8 67 07                 a0 = a0 + s1
  4162: 53 37 00 00 f0 27        jump @213 if a0 <u 4293918720
      :                          @208
  4168: 33 07 50 00 03           a0 = 0x30050
  4173: 95 77 00 00 10           a0 = a0 + 0x100000
  4178: 01                       fallthrough
      :                          @209
  4179: 82 78                    a1 = u64 [a0]
  4181: c9 87 09                 a2 = a0 - a1
  4184: ab 59 11                 jump @213 if a2 != s0
      :                          @210
  4187: c9 68 09                 a2 = a1 - s1
  4190: 01                       fallthrough
      :                          @211
  4191: 82 7a                    a3 = u64 [a0]
  4193: ab 8a f2                 jump @209 if a3 != a1
      :                          @212
  4196: 7b 79                    u64 [a0] = a2
  4198: 33 0b                    a4 = 0
  4200: 01                       fallthrough
      :                          @213
  4201: 95 17 b8 20              a0 = sp + 0x20b8
  4205: 82 78 48                 a1 = u64 [a0 + 0x48]
  4208: 95 15 10 31              s0 = sp + 0x3110
  4212: 82 59                    a2 = u64 [s0]
  4214: 7a 58 4c 02              u32 [s0 + 0x24c] = a1
  4218: 7b 19 60                 u64 [sp + 0x60] = a2
  4221: 51 19 ff 2e 03           jump @244 if a2 == 4294967295
      :                          @214
  4226: 33 08                    a1 = 0
  4228: 14 09 00 00 ff fe 00 00 00 00 a2 = 0xfeff0000
  4238: 7b 19 58                 u64 [sp + 0x58] = a2
  4241: 14 07 00 f0 ff ff ff 0f 00 00 a0 = 0xffffffff000
  4251: 7b 17 50                 u64 [sp + 0x50] = a0
  4254: 33 07 16                 a0 = 0x16
  4257: 7b 17 78                 u64 [sp + 0x78] = a0
  4260: 33 07 28 00 01           a0 = 0x10028
  4265: 7b 17 48                 u64 [sp + 0x48] = a0
  4268: 33 07 88 04 01           a0 = 0x10488
  4273: 7b 17 40                 u64 [sp + 0x40] = a0
  4276: 49 11 38 f0 ef 0f        u64 [sp + 56] = 0xfeff0
  4282: 33 07 02                 a0 = 0x2
  4285: 7b 17 30                 u64 [sp + 0x30] = a0
  4288: 33 07 12                 a0 = 0x12
  4291: 7b 17 28                 u64 [sp + 0x28] = a0
  4294: 33 07 08 05 01           a0 = 0x10508
  4299: 7b 17 20                 u64 [sp + 0x20] = a0
  4302: 33 06 50 00 03           s1 = 0x30050
  4307: 95 66 00 00 10           s1 = s1 + 0x100000
  4312: 33 07 0e                 a0 = 0xe
  4315: 7b 17 18                 u64 [sp + 0x18] = a0
  4318: 33 07 48 05 01           a0 = 0x10548
  4323: 7b 17 10                 u64 [sp + 0x10] = a0
  4326: 33 07 3c 00 03           a0 = 0x3003c
  4331: 7b 17 68                 u64 [sp + 0x68] = a0
  4334: 95 77 04                 a0 = a0 + 0x4
  4337: 7b 17 08                 u64 [sp + 0x8] = a0
  4340: 28 14                    jump @216
      :                          @215
  4342: 82 19 80 00              a2 = u64 [sp + 0x80]
  4346: 95 98 01                 a1 = a2 + 0x1
  4349: 95 15 10 31              s0 = sp + 0x3110
  4353: 82 17 60                 a0 = u64 [sp + 0x60]
  4356: aa 79 a7 02              jump @244 if a2 == a0
      :                          @216
  4360: 7b 58 50 02              u64 [s0 + 0x250] = a1
  4364: 7b 18 80 00              u64 [sp + 0x80] = a1
  4368: 97 89 0c                 a2 = a1 << 0xc
  4371: 95 17 b8 20              a0 = sp + 0x20b8
  4375: 82 77 48                 a0 = u64 [a0 + 0x48]
  4378: 82 58 08                 a1 = u64 [s0 + 0x8]
  4381: 82 1a 58                 a3 = u64 [sp + 0x58]
  4384: c8 a9 09                 a2 = a2 + a3
  4387: 82 1a 50                 a3 = u64 [sp + 0x50]
  4390: d2 a9 09                 a2 = a2 & a3
  4393: 7b 59 58 02              u64 [s0 + 0x258] = a2
  4397: 33 0a 00 10              a3 = 0x1000
  4401: 0a 15                    ecalli 21 // 'peek'
  4403: 7b 57 60 02              u64 [s0 + 0x260] = a0
  4407: 95 17 00 21              a0 = sp + 0x2100
  4411: 7b 57 48 01              u64 [s0 + 0x148] = a0
  4415: 82 17 78                 a0 = u64 [sp + 0x78]
  4418: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4422: 95 18 18 31              a1 = sp + 0x3118
  4426: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4430: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4434: 95 18 68 33              a1 = sp + 0x3368
  4438: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4442: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4446: 82 18 48                 a1 = u64 [sp + 0x48]
  4449: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4453: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4457: 95 18 70 33              a1 = sp + 0x3370
  4461: 7b 58 88 01              u64 [s0 + 0x188] = a1
  4465: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4469: 82 17 40                 a0 = u64 [sp + 0x40]
  4472: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4476: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4481: 49 25 28 01              u64 [s0 + 296] = 0
  4485: 95 18 58 32              a1 = sp + 0x3258
  4489: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4493: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4498: 95 17 90 33              a0 = sp + 0x3390
  4502: 95 18 18 32              a1 = sp + 0x3218
  4506: 50 10 6c ee 29           ra = 108, jump @791
      :                          @217 [@dyn 54]
  4511: 95 17 10 31              a0 = sp + 0x3110
  4515: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4519: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4523: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4527: 7b 17 70                 u64 [sp + 0x70] = a0
  4530: 33 07 03                 a0 = 0x3
  4533: 33 08                    a1 = 0
  4535: 33 09                    a2 = 0
  4537: 64 5a                    a3 = s0
  4539: 33 00 6e                 ra = 0x6e
  4542: 0a 64                    ecalli 100 // 'log'
  4544: 01                       fallthrough
      :                          @218 [@dyn 55]
  4545: 82 1b 70                 a4 = u64 [sp + 0x70]
  4548: 82 17 88 00              a0 = u64 [sp + 0x88]
  4552: c8 b7 07                 a0 = a0 + a4
  4555: 53 37 00 00 f0 1a        jump @223 if a0 <u 4293918720
      :                          @219
  4561: 82 67                    a0 = u64 [s1]
  4563: c9 76 08                 a1 = s1 - a0
  4566: ab 58 0f                 jump @223 if a1 != s0
      :                          @220
  4569: c9 b7 08                 a1 = a0 - a4
  4572: 01                       fallthrough
      :                          @221
  4573: 82 69                    a2 = u64 [s1]
  4575: ab 79 f2                 jump @219 if a2 != a0
      :                          @222
  4578: 7b 68                    u64 [s1] = a1
  4580: 01                       fallthrough
      :                          @223
  4581: 95 1a 10 31              a3 = sp + 0x3110
  4585: 81 a7 4c 02              a0 = i32 [a3 + 0x24c]
  4589: 81 a8 50 02              a1 = i32 [a3 + 0x250]
  4593: 95 19 b8 20              a2 = sp + 0x20b8
  4597: 7a 97 50                 u32 [a2 + 0x50] = a0
  4600: 82 17 38                 a0 = u64 [sp + 0x38]
  4603: be 87 07                 i32 a0 = a0 + a1
  4606: 7a a7 6c 02              u32 [a3 + 0x26c] = a0
  4610: 7a 97 54                 u32 [a2 + 0x54] = a0
  4613: 95 17 08 21              a0 = sp + 0x2108
  4617: 7b a7 70 02              u64 [a3 + 0x270] = a0
  4621: 49 2a 78 02 08           u64 [a3 + 632] = 0x8
  4626: 95 17 80 33              a0 = sp + 0x3380
  4630: 7b a7 48 01              u64 [a3 + 0x148] = a0
  4634: 82 17 30                 a0 = u64 [sp + 0x30]
  4637: 7b a7 50 01              u64 [a3 + 0x150] = a0
  4641: 95 17 5c 33              a0 = sp + 0x335c
  4645: 7b a7 58 01              u64 [a3 + 0x158] = a0
  4649: 82 17 28                 a0 = u64 [sp + 0x28]
  4652: 7b a7 60 01              u64 [a3 + 0x160] = a0
  4656: 95 18 7c 33              a1 = sp + 0x337c
  4660: 7b a8 68 01              u64 [a3 + 0x168] = a1
  4664: 7b a7 70 01              u64 [a3 + 0x170] = a0
  4668: 82 17 20                 a0 = u64 [sp + 0x20]
  4671: 7b a7 08 01              u64 [a3 + 0x108] = a0
  4675: 49 2a 10 01 03           u64 [a3 + 272] = 0x3
  4680: 49 2a 28 01              u64 [a3 + 296] = 0
  4684: 95 17 58 32              a0 = sp + 0x3258
  4688: 7b a7 18 01              u64 [a3 + 0x118] = a0
  4692: 49 2a 20 01 03           u64 [a3 + 288] = 0x3
  4697: 95 17 90 33              a0 = sp + 0x3390
  4701: 95 18 18 32              a1 = sp + 0x3218
  4705: 50 10 70 27 29           ra = 112, jump @791
      :                          @224 [@dyn 56]
  4710: 95 17 10 31              a0 = sp + 0x3110
  4714: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4718: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4722: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4726: 7b 17 70                 u64 [sp + 0x70] = a0
  4729: 33 07 04                 a0 = 0x4
  4732: 33 08                    a1 = 0
  4734: 33 09                    a2 = 0
  4736: 64 5a                    a3 = s0
  4738: 33 00 72                 ra = 0x72
  4741: 0a 64                    ecalli 100 // 'log'
  4743: 01                       fallthrough
      :                          @225 [@dyn 57]
  4744: 82 1b 70                 a4 = u64 [sp + 0x70]
  4747: 82 17 88 00              a0 = u64 [sp + 0x88]
  4751: c8 b7 07                 a0 = a0 + a4
  4754: 53 37 00 00 f0 1a        jump @230 if a0 <u 4293918720
      :                          @226
  4760: 82 67                    a0 = u64 [s1]
  4762: c9 76 08                 a1 = s1 - a0
  4765: ab 58 0f                 jump @230 if a1 != s0
      :                          @227
  4768: c9 b7 08                 a1 = a0 - a4
  4771: 01                       fallthrough
      :                          @228
  4772: 82 69                    a2 = u64 [s1]
  4774: ab 79 f2                 jump @226 if a2 != a0
      :                          @229
  4777: 7b 68                    u64 [s1] = a1
  4779: 01                       fallthrough
      :                          @230
  4780: 95 15 10 31              s0 = sp + 0x3110
  4784: 82 57 50 02              a0 = u64 [s0 + 0x250]
  4788: 82 58                    a1 = u64 [s0]
  4790: ab 87 11                 jump @232 if a0 != a1
      :                          @231
  4793: 82 18 80 00              a1 = u64 [sp + 0x80]
  4797: 3d 08 3c 00 03           u32 [0x3003c] = a1
  4802: 82 17 08                 a0 = u64 [sp + 0x8]
  4805: 28 0f                    jump @234
      :                          @232
  4807: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4810: ab 87 14                 jump @235 if a0 != a1
      :                          @233
  4813: 82 17 68                 a0 = u64 [sp + 0x68]
  4816: 95 77 08                 a0 = a0 + 0x8
  4819: 01                       fallthrough
      :                          @234
  4820: 95 18 b8 20              a1 = sp + 0x20b8
  4824: 81 88 58                 a1 = i32 [a1 + 0x58]
  4827: 7a 78                    u32 [a0] = a1
  4829: 01                       fallthrough
      :                          @235
  4830: 33 08 08 10              a1 = 0x1008
  4834: 95 17 08 21              a0 = sp + 0x2108
  4838: 0a 13                    ecalli 19 // 'export'
  4840: 7b 57 70 02              u64 [s0 + 0x270] = a0
  4844: 0a                       ecalli 0 // 'gas'
  4845: 95 18 b8 20              a1 = sp + 0x20b8
  4849: 7b 87 40                 u64 [a1 + 0x40] = a0
  4852: 95 18 60 33              a1 = sp + 0x3360
  4856: 7b 58 48 01              u64 [s0 + 0x148] = a1
  4860: 82 17 78                 a0 = u64 [sp + 0x78]
  4863: 7b 57 50 01              u64 [s0 + 0x150] = a0
  4867: 7b 58 58 01              u64 [s0 + 0x158] = a1
  4871: 7b 57 60 01              u64 [s0 + 0x160] = a0
  4875: 95 18 80 33              a1 = sp + 0x3380
  4879: 7b 58 68 01              u64 [s0 + 0x168] = a1
  4883: 7b 57 70 01              u64 [s0 + 0x170] = a0
  4887: 95 18 f8 20              a1 = sp + 0x20f8
  4891: 7b 58 78 01              u64 [s0 + 0x178] = a1
  4895: 7b 57 80 01              u64 [s0 + 0x180] = a0
  4899: 82 17 68                 a0 = u64 [sp + 0x68]
  4902: 7b 57 88 01              u64 [s0 + 0x188] = a0
  4906: 82 17 18                 a0 = u64 [sp + 0x18]
  4909: 7b 57 90 01              u64 [s0 + 0x190] = a0
  4913: 82 17 10                 a0 = u64 [sp + 0x10]
  4916: 7b 57 08 01              u64 [s0 + 0x108] = a0
  4920: 49 25 10 01 05           u64 [s0 + 272] = 0x5
  4925: 49 25 28 01              u64 [s0 + 296] = 0
  4929: 95 18 58 32              a1 = sp + 0x3258
  4933: 7b 58 18 01              u64 [s0 + 0x118] = a1
  4937: 49 25 20 01 05           u64 [s0 + 288] = 0x5
  4942: 95 17 90 33              a0 = sp + 0x3390
  4946: 95 18 18 32              a1 = sp + 0x3218
  4950: 50 10 74 32 28           ra = 116, jump @791
      :                          @236 [@dyn 58]
  4955: 95 17 10 31              a0 = sp + 0x3110
  4959: 82 75 88 02              s0 = u64 [a0 + 0x288]
  4963: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  4967: 82 77 80 02              a0 = u64 [a0 + 0x280]
  4971: 7b 17 70                 u64 [sp + 0x70] = a0
  4974: 33 07 04                 a0 = 0x4
  4977: 33 08                    a1 = 0
  4979: 33 09                    a2 = 0
  4981: 64 5a                    a3 = s0
  4983: 33 00 76                 ra = 0x76
  4986: 0a 64                    ecalli 100 // 'log'
  4988: 01                       fallthrough
      :                          @237 [@dyn 59]
  4989: 82 1b 70                 a4 = u64 [sp + 0x70]
  4992: 82 17 88 00              a0 = u64 [sp + 0x88]
  4996: c8 b7 07                 a0 = a0 + a4
  4999: 53 37 00 00 f0 6f fd     jump @215 if a0 <u 4293918720
      :                          @238
  5006: 82 67                    a0 = u64 [s1]
  5008: c9 76 08                 a1 = s1 - a0
  5011: ab 58 63 fd              jump @215 if a1 != s0
      :                          @239
  5015: c9 b7 08                 a1 = a0 - a4
  5018: 01                       fallthrough
      :                          @240
  5019: 82 69                    a2 = u64 [s1]
  5021: ab 79 f1                 jump @238 if a2 != a0
      :                          @241
  5024: 7b 68                    u64 [s1] = a1
  5026: 33 0a                    a3 = 0
  5028: 01                       fallthrough
      :                          @242
  5029: ab 79 e9                 jump @238 if a2 != a0
      :                          @243
  5032: 28 4e fd                 jump @215
      :                          @244
  5035: 33 07 3c 00 03           a0 = 0x3003c
  5040: 7b 57 48 01              u64 [s0 + 0x148] = a0
  5044: 33 08 0e                 a1 = 0xe
  5047: 7b 58 50 01              u64 [s0 + 0x150] = a1
  5051: 95 79 04                 a2 = a0 + 0x4
  5054: 7b 59 58 01              u64 [s0 + 0x158] = a2
  5058: 7b 58 60 01              u64 [s0 + 0x160] = a1
  5062: 95 77 08                 a0 = a0 + 0x8
  5065: 7b 57 68 01              u64 [s0 + 0x168] = a0
  5069: 7b 58 70 01              u64 [s0 + 0x170] = a1
  5073: 33 07 a8 03 01           a0 = 0x103a8
  5078: 7b 57 08 01              u64 [s0 + 0x108] = a0
  5082: 49 25 10 01 03           u64 [s0 + 272] = 0x3
  5087: 49 25 28 01              u64 [s0 + 296] = 0
  5091: 95 18 58 32              a1 = sp + 0x3258
  5095: 7b 58 18 01              u64 [s0 + 0x118] = a1
  5099: 49 25 20 01 03           u64 [s0 + 288] = 0x3
  5104: 95 17 90 33              a0 = sp + 0x3390
  5108: 95 18 18 32              a1 = sp + 0x3218
  5112: 50 10 78 90 27           ra = 120, jump @791
      :                          @245 [@dyn 60]
  5117: 95 17 10 31              a0 = sp + 0x3110
  5121: 82 75 88 02              s0 = u64 [a0 + 0x288]
  5125: 82 7b 90 02              a4 = u64 [a0 + 0x290]
  5129: 82 76 80 02              s1 = u64 [a0 + 0x280]
  5133: 33 07 03                 a0 = 0x3
  5136: 33 08                    a1 = 0
  5138: 33 09                    a2 = 0
  5140: 64 5a                    a3 = s0
  5142: 33 00 7a                 ra = 0x7a
  5145: 0a 64                    ecalli 100 // 'log'
  5147: 01                       fallthrough
      :                          @246 [@dyn 61]
  5148: 82 17 88 00              a0 = u64 [sp + 0x88]
  5152: c8 67 07                 a0 = a0 + s1
  5155: 53 37 00 00 f0 25        jump @252 if a0 <u 4293918720
      :                          @247
  5161: 33 07 50 00 03           a0 = 0x30050
  5166: 95 77 00 00 10           a0 = a0 + 0x100000
  5171: 01                       fallthrough
      :                          @248
  5172: 82 78                    a1 = u64 [a0]
  5174: c9 87 09                 a2 = a0 - a1
  5177: ab 59 0f                 jump @252 if a2 != s0
      :                          @249
  5180: c9 68 09                 a2 = a1 - s1
  5183: 01                       fallthrough
      :                          @250
  5184: 82 7a                    a3 = u64 [a0]
  5186: ab 8a f2                 jump @248 if a3 != a1
      :                          @251
  5189: 7b 79                    u64 [a0] = a2
  5191: 01                       fallthrough
      :                          @252
  5192: 95 15 b8 20              s0 = sp + 0x20b8
  5196: 82 57 48                 a0 = u64 [s0 + 0x48]
  5199: 0a 1a                    ecalli 26 // 'expunge'
  5201: 95 16 10 31              s1 = sp + 0x3110
  5205: 7b 67 70 02              u64 [s1 + 0x270] = a0
  5209: 0a                       ecalli 0 // 'gas'
  5210: 7b 57 40                 u64 [s0 + 0x40] = a0
  5213: 95 17 00 21              a0 = sp + 0x2100
  5217: 7b 67 48 01              u64 [s1 + 0x148] = a0
  5221: 95 17 80 33              a0 = sp + 0x3380
  5225: 7b 67 58 01              u64 [s1 + 0x158] = a0
  5229: 95 17 f8 20              a0 = sp + 0x20f8
  5233: 7b 67 68 01              u64 [s1 + 0x168] = a0
  5237: 33 07 16                 a0 = 0x16
  5240: 7b 67 50 01              u64 [s1 + 0x150] = a0
  5244: 7b 67 60 01              u64 [s1 + 0x160] = a0
  5248: 7b 67 70 01              u64 [s1 + 0x170] = a0
  5252: 33 07 f8 03 01           a0 = 0x103f8
  5257: 7b 67 08 01              u64 [s1 + 0x108] = a0
  5261: 95 17 58 32              a0 = sp + 0x3258
  5265: 7b 67 18 01              u64 [s1 + 0x118] = a0
  5269: 49 26 10 01 03           u64 [s1 + 272] = 0x3
  5274: 49 26 20 01 03           u64 [s1 + 288] = 0x3
  5279: 49 26 28 01              u64 [s1 + 296] = 0
  5283: 95 17 90 33              a0 = sp + 0x3390
  5287: 95 18 18 32              a1 = sp + 0x3218
  5291: 50 10 7c dd 26           ra = 124, jump @791
      :                          @253 [@dyn 62]
  5296: 82 65 88 02              s0 = u64 [s1 + 0x288]
  5300: 82 6b 90 02              a4 = u64 [s1 + 0x290]
  5304: 82 66 80 02              s1 = u64 [s1 + 0x280]
  5308: 33 07 04                 a0 = 0x4
  5311: 33 08                    a1 = 0
  5313: 33 09                    a2 = 0
  5315: 64 5a                    a3 = s0
  5317: 33 00 7e                 ra = 0x7e
  5320: 0a 64                    ecalli 100 // 'log'
  5322: 01                       fallthrough
      :                          @254 [@dyn 63]
  5323: 82 17 88 00              a0 = u64 [sp + 0x88]
  5327: c8 67 07                 a0 = a0 + s1
  5330: 53 37 00 00 f0 31        jump @260 if a0 <u 4293918720
      :                          @255
  5336: 33 07 50 00 03           a0 = 0x30050
  5341: 95 77 00 00 10           a0 = a0 + 0x100000
  5346: 01                       fallthrough
      :                          @256
  5347: 82 78                    a1 = u64 [a0]
  5349: c9 87 09                 a2 = a0 - a1
  5352: ab 59 1b                 jump @260 if a2 != s0
      :                          @257
  5355: c9 68 09                 a2 = a1 - s1
  5358: 01                       fallthrough
      :                          @258
  5359: 82 7a                    a3 = u64 [a0]
  5361: ab 8a f2                 jump @256 if a3 != a1
      :                          @259
  5364: 7b 79                    u64 [a0] = a2
  5366: 33 0b                    a4 = 0
  5368: 33 0a 3c 00 03           a3 = 0x3003c
  5373: 33 08 0c                 a1 = 0xc
  5376: 28 a3 f0                 jump @98
      :                          @260
  5379: 33 0a 3c 00 03           a3 = 0x3003c
  5384: 33 08 0c                 a1 = 0xc
  5387: 28 98 f0                 jump @98
      :                          @261
  5390: 00                       trap
      :                          @262 [export #1: 'accumulate']
  5391: 95 11 08 f8              sp = sp + 0xfffffffffffff808
  5395: 7b 10 f0 07              u64 [sp + 0x7f0] = ra
  5399: 7b 15 e8 07              u64 [sp + 0x7e8] = s0
  5403: 7b 16 e0 07              u64 [sp + 0x7e0] = s1
  5407: 95 11 b8 fb              sp = sp + 0xfffffffffffffbb8
  5411: 33 09 00 00 01           a2 = 0x10000
  5416: 51 08 b6 02              jump @342 if a1 == 0
      :                          @263
  5420: 64 86                    s1 = a1
  5422: 7d 78                    a1 = i8 [a0]
  5424: 33 05 01                 s0 = 0x1
  5427: 59 08 37                 jump @270 if a1 >=s 0
      :                          @264
  5430: 84 8a ff 00              a3 = a1 & 0xff
  5434: 33 05 02                 s0 = 0x2
  5437: 53 2a c0 00 2d           jump @270 if a3 <u 192
      :                          @265
  5442: 33 05 03                 s0 = 0x3
  5445: 53 2a e0 00 25           jump @270 if a3 <u 224
      :                          @266
  5450: 33 05 04                 s0 = 0x4
  5453: 53 2a f0 00 1d           jump @270 if a3 <u 240
      :                          @267
  5458: 33 05 05                 s0 = 0x5
  5461: 53 2a f8 00 15           jump @270 if a3 <u 248
      :                          @268
  5466: 33 05 06                 s0 = 0x6
  5469: 53 2a fc 00 0d           jump @270 if a3 <u 252
      :                          @269
  5474: 88 a8 fe 00              a1 = a3 <u 0xfe
  5478: 9a 85 08                 s0 = 0x8 - a1
  5481: 01                       fallthrough
      :                          @270
  5482: ae 56 08                 jump @272 if s1 >=u s0
      :                          @271
  5485: 33 08                    a1 = 0
  5487: 28 6f 02                 jump @342
      :                          @272
  5490: 64 58                    a1 = s0
  5492: 7b 17 38                 u64 [sp + 0x38] = a0
  5495: 50 20 80 00 e7 32        ra = 128, jump @1044
      :                          @273 [@dyn 64]
  5501: aa 56 59 02              jump @341 if s1 == s0
      :                          @274
  5505: 82 17 38                 a0 = u64 [sp + 0x38]
  5508: c8 57 07                 a0 = a0 + s0
  5511: 7d 78                    a1 = i8 [a0]
  5513: c9 56 06                 s1 = s1 - s0
  5516: 33 05 01                 s0 = 0x1
  5519: 59 08 37                 jump @281 if a1 >=s 0
      :                          @275
  5522: 84 89 ff 00              a2 = a1 & 0xff
  5526: 33 05 02                 s0 = 0x2
  5529: 53 29 c0 00 2d           jump @281 if a2 <u 192
      :                          @276
  5534: 33 05 03                 s0 = 0x3
  5537: 53 29 e0 00 25           jump @281 if a2 <u 224
      :                          @277
  5542: 33 05 04                 s0 = 0x4
  5545: 53 29 f0 00 1d           jump @281 if a2 <u 240
      :                          @278
  5550: 33 05 05                 s0 = 0x5
  5553: 53 29 f8 00 15           jump @281 if a2 <u 248
      :                          @279
  5558: 33 05 06                 s0 = 0x6
  5561: 53 29 fc 00 0d           jump @281 if a2 <u 252
      :                          @280
  5566: 88 98 fe 00              a1 = a2 <u 0xfe
  5570: 9a 85 08                 s0 = 0x8 - a1
  5573: 01                       fallthrough
      :                          @281
  5574: ac 56 10 02              jump @341 if s1 <u s0
      :                          @282
  5578: 64 58                    a1 = s0
  5580: 7b 17 38                 u64 [sp + 0x38] = a0
  5583: 50 20 82 00 8f 32        ra = 130, jump @1044
      :                          @283 [@dyn 65]
  5589: 82 1a 38                 a3 = u64 [sp + 0x38]
  5592: c8 5a 0a                 a3 = a3 + s0
  5595: c9 56 0b                 a4 = s1 - s0
  5598: ab 56 07                 jump @285 if s1 != s0
      :                          @284
  5601: 33 05                    s0 = 0
  5603: 28 42                    jump @293
      :                          @285
  5605: 7d a8                    a1 = i8 [a3]
  5607: 33 05 01                 s0 = 0x1
  5610: 59 08 37                 jump @292 if a1 >=s 0
      :                          @286
  5613: 84 89 ff 00              a2 = a1 & 0xff
  5617: 33 05 02                 s0 = 0x2
  5620: 53 29 c0 00 2d           jump @292 if a2 <u 192
      :                          @287
  5625: 33 05 03                 s0 = 0x3
  5628: 53 29 e0 00 25           jump @292 if a2 <u 224
      :                          @288
  5633: 33 05 04                 s0 = 0x4
  5636: 53 29 f0 00 1d           jump @292 if a2 <u 240
      :                          @289
  5641: 33 05 05                 s0 = 0x5
  5644: 53 29 f8 00 15           jump @292 if a2 <u 248
      :                          @290
  5649: 33 05 06                 s0 = 0x6
  5652: 53 29 fc 00 0d           jump @292 if a2 <u 252
      :                          @291
  5657: 88 98 fe 00              a1 = a2 <u 0xfe
  5661: 9a 85 08                 s0 = 0x8 - a1
  5664: 01                       fallthrough
      :                          @292
  5665: ac 5b b5 01              jump @341 if a4 <u s0
      :                          @293
  5669: 64 b6                    s1 = a4
  5671: 7b 17 30                 u64 [sp + 0x30] = a0
  5674: 7b 1a 38                 u64 [sp + 0x38] = a3
  5677: 64 a7                    a0 = a3
  5679: 64 58                    a1 = s0
  5681: 50 20 84 00 2d 32        ra = 132, jump @1044
      :                          @294 [@dyn 66]
  5687: 51 07 9f 01              jump @341 if a0 == 0
      :                          @295
  5691: e4 56 07                 a0 = maxu(s1, s0)
  5694: c9 57 07                 a0 = a0 - s0
  5697: 33 09 00 00 01           a2 = 0x10000
  5702: 53 17 60 27 ff           jump @271 if a0 <u 96
      :                          @296
  5707: 82 18 38                 a1 = u64 [sp + 0x38]
  5710: c8 85 05                 s0 = s0 + a1
  5713: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  5716: 95 57 60                 a0 = s0 + 0x60
  5719: 7b 17 38                 u64 [sp + 0x38] = a0
  5722: 51 06 54                 jump @308 if s1 == 0
      :                          @297
  5725: 7d 78                    a1 = i8 [a0]
  5727: 33 05 01                 s0 = 0x1
  5730: 59 08 37                 jump @304 if a1 >=s 0
      :                          @298
  5733: 84 89 ff 00              a2 = a1 & 0xff
  5737: 33 05 02                 s0 = 0x2
  5740: 53 29 c0 00 2d           jump @304 if a2 <u 192
      :                          @299
  5745: 33 05 03                 s0 = 0x3
  5748: 53 29 e0 00 25           jump @304 if a2 <u 224
      :                          @300
  5753: 33 05 04                 s0 = 0x4
  5756: 53 29 f0 00 1d           jump @304 if a2 <u 240
      :                          @301
  5761: 33 05 05                 s0 = 0x5
  5764: 53 29 f8 00 15           jump @304 if a2 <u 248
      :                          @302
  5769: 33 05 06                 s0 = 0x6
  5772: 53 29 fc 00 0d           jump @304 if a2 <u 252
      :                          @303
  5777: 88 98 fe 00              a1 = a2 <u 0xfe
  5781: 9a 85 08                 s0 = 0x8 - a1
  5784: 01                       fallthrough
      :                          @304
  5785: ae 56 06                 jump @306 if s1 >=u s0
      :                          @305
  5788: 28 07 22                 jump @723
      :                          @306
  5791: 64 58                    a1 = s0
  5793: 50 20 86 00 bd 31        ra = 134, jump @1044
      :                          @307 [@dyn 67]
  5799: 33 09 00 00 01           a2 = 0x10000
  5804: 28 07                    jump @309
      :                          @308
  5806: 33 05                    s0 = 0
  5808: 33 07                    a0 = 0
  5810: 01                       fallthrough
      :                          @309
  5811: e4 56 08                 a1 = maxu(s1, s0)
  5814: c9 58 08                 a1 = a1 - s0
  5817: e4 78 06                 s1 = maxu(a1, a0)
  5820: c9 76 06                 s1 = s1 - a0
  5823: 53 16 20 ae fe           jump @271 if s1 <u 32
      :                          @310
  5828: 82 18 38                 a1 = u64 [sp + 0x38]
  5831: c8 85 05                 s0 = s0 + a1
  5834: c8 57 07                 a0 = a0 + s0
  5837: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  5840: 95 77 20                 a0 = a0 + 0x20
  5843: 7b 17 38                 u64 [sp + 0x38] = a0
  5846: 51 06 54                 jump @322 if s1 == 0
      :                          @311
  5849: 7d 78                    a1 = i8 [a0]
  5851: 33 05 01                 s0 = 0x1
  5854: 59 08 37                 jump @318 if a1 >=s 0
      :                          @312
  5857: 84 89 ff 00              a2 = a1 & 0xff
  5861: 33 05 02                 s0 = 0x2
  5864: 53 29 c0 00 2d           jump @318 if a2 <u 192
      :                          @313
  5869: 33 05 03                 s0 = 0x3
  5872: 53 29 e0 00 25           jump @318 if a2 <u 224
      :                          @314
  5877: 33 05 04                 s0 = 0x4
  5880: 53 29 f0 00 1d           jump @318 if a2 <u 240
      :                          @315
  5885: 33 05 05                 s0 = 0x5
  5888: 53 29 f8 00 15           jump @318 if a2 <u 248
      :                          @316
  5893: 33 05 06                 s0 = 0x6
  5896: 53 29 fc 00 0d           jump @318 if a2 <u 252
      :                          @317
  5901: 88 98 fe 00              a1 = a2 <u 0xfe
  5905: 9a 85 08                 s0 = 0x8 - a1
  5908: 01                       fallthrough
      :                          @318
  5909: ae 56 06                 jump @320 if s1 >=u s0
      :                          @319
  5912: 28 8b 21                 jump @723
      :                          @320
  5915: 64 58                    a1 = s0
  5917: 50 20 88 00 41 31        ra = 136, jump @1044
      :                          @321 [@dyn 68]
  5923: 33 09 00 00 01           a2 = 0x10000
  5928: 28 05                    jump @323
      :                          @322
  5930: 33 05                    s0 = 0
  5932: 01                       fallthrough
      :                          @323
  5933: ae 65 40 fe              jump @271 if s0 >=u s1
      :                          @324
  5937: 82 17 38                 a0 = u64 [sp + 0x38]
  5940: c8 57 07                 a0 = a0 + s0
  5943: 7c 78                    a1 = u8 [a0]
  5945: 51 08 0a                 jump @326 if a1 == 0
      :                          @325
  5948: 33 05                    s0 = 0
  5950: 33 0a                    a3 = 0
  5952: 28 b6 00                 jump @343
      :                          @326
  5955: e4 56 08                 a1 = maxu(s1, s0)
  5958: c9 58 08                 a1 = a1 - s0
  5961: 95 79 01                 a2 = a0 + 0x1
  5964: 33 07 01                 a0 = 0x1
  5967: e4 78 06                 s1 = maxu(a1, a0)
  5970: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  5973: 55 18 02 0a              jump @328 if a1 >=u 2
      :                          @327
  5977: 33 05                    s0 = 0
  5979: 33 07                    a0 = 0
  5981: 28 59                    jump @339
      :                          @328
  5983: 7d 97                    a0 = i8 [a2]
  5985: 33 05 01                 s0 = 0x1
  5988: 59 07 37                 jump @335 if a0 >=s 0
      :                          @329
  5991: 84 77 ff 00              a0 = a0 & 0xff
  5995: 33 05 02                 s0 = 0x2
  5998: 53 27 c0 00 2d           jump @335 if a0 <u 192
      :                          @330
  6003: 33 05 03                 s0 = 0x3
  6006: 53 27 e0 00 25           jump @335 if a0 <u 224
      :                          @331
  6011: 33 05 04                 s0 = 0x4
  6014: 53 27 f0 00 1d           jump @335 if a0 <u 240
      :                          @332
  6019: 33 05 05                 s0 = 0x5
  6022: 53 27 f8 00 15           jump @335 if a0 <u 248
      :                          @333
  6027: 33 05 06                 s0 = 0x6
  6030: 53 27 fc 00 0d           jump @335 if a0 <u 252
      :                          @334
  6035: 88 77 fe 00              a0 = a0 <u 0xfe
  6039: 9a 75 08                 s0 = 0x8 - a0
  6042: 01                       fallthrough
      :                          @335
  6043: 7b 16 38                 u64 [sp + 0x38] = s1
  6046: ae 56 06                 jump @337 if s1 >=u s0
      :                          @336
  6049: 28 04 21                 jump @725
      :                          @337
  6052: 64 97                    a0 = a2
  6054: 64 58                    a1 = s0
  6056: 64 96                    s1 = a2
  6058: 50 20 8a 00 b4 30        ra = 138, jump @1044
      :                          @338 [@dyn 69]
  6064: 64 69                    a2 = s1
  6066: 82 16 38                 s1 = u64 [sp + 0x38]
  6069: 01                       fallthrough
      :                          @339
  6070: e4 56 08                 a1 = maxu(s1, s0)
  6073: c9 58 08                 a1 = a1 - s0
  6076: e6 78 0a                 a3 = minu(a1, a0)
  6079: c8 95 05                 s0 = s0 + a2
  6082: 52 1a 24 34              jump @343 if a3 != 36
      :                          @340
  6086: 80 58 20                 a1 = u32 [s0 + 0x20]
  6089: 64 57                    a0 = s0
  6091: 0a 0e                    ecalli 14 // 'solicit'
  6093: 33 08                    a1 = 0
  6095: 33 09 00 00 01           a2 = 0x10000
  6100: 28 0a                    jump @342
      :                          @341
  6102: 33 08                    a1 = 0
  6104: 33 09 00 00 01           a2 = 0x10000
  6109: 01                       fallthrough
      :                          @342
  6110: 64 97                    a0 = a2
  6112: 95 11 48 04              sp = sp + 0x448
  6116: 82 10 f0 07              ra = u64 [sp + 0x7f0]
  6120: 82 15 e8 07              s0 = u64 [sp + 0x7e8]
  6124: 82 16 e0 07              s1 = u64 [sp + 0x7e0]
  6128: 95 11 f8 07              sp = sp + 0x7f8
  6132: 32 00                    ret
      :                          @343
  6134: 46 11 47                 u8 [sp + 71] = 0
  6137: 80 57                    a0 = u32 [s0]
  6139: 7b 17 48                 u64 [sp + 0x48] = a0
  6142: 95 17 47                 a0 = sp + 0x47
  6145: 33 08 01                 a1 = 0x1
  6148: 7b 15 18                 u64 [sp + 0x18] = s0
  6151: 64 59                    a2 = s0
  6153: 7b 1a 28                 u64 [sp + 0x28] = a3
  6156: 0a 03                    ecalli 3 // 'write'
  6158: 46 11 52 6a              u8 [sp + 82] = 0x6a
  6162: 46 11 53 61              u8 [sp + 83] = 0x61
  6166: 46 11 54 6d              u8 [sp + 84] = 0x6d
  6170: 46 11 55 44              u8 [sp + 85] = 0x44
  6174: 46 11 56 4f              u8 [sp + 86] = 0x4f
  6178: 46 11 57 54              u8 [sp + 87] = 0x54
  6182: 46 11 58 6a              u8 [sp + 88] = 0x6a
  6186: 46 11 59 0d              u8 [sp + 89] = 0xd
  6190: 46 11 5a 4a              u8 [sp + 90] = 0x4a
  6194: 46 11 5b 19              u8 [sp + 91] = 0x19
  6198: 46 11 5c d1 00           u8 [sp + 92] = 0xd1
  6203: 46 11 5d 99 00           u8 [sp + 93] = 0x99
  6208: 46 11 5e 50              u8 [sp + 94] = 0x50
  6212: 46 11 5f 57              u8 [sp + 95] = 0x57
  6216: 46 11 60 13              u8 [sp + 96] = 0x13
  6220: 46 11 61 fc 00           u8 [sp + 97] = 0xfc
  6225: 46 11 62 65              u8 [sp + 98] = 0x65
  6229: 46 11 63 f5 00           u8 [sp + 99] = 0xf5
  6234: 46 11 64 31              u8 [sp + 100] = 0x31
  6238: 46 11 65 03              u8 [sp + 101] = 0x3
  6242: 46 11 66 8e 00           u8 [sp + 102] = 0x8e
  6247: 46 11 67 73              u8 [sp + 103] = 0x73
  6251: 33 0b f1 00              a4 = 0xf1
  6255: 78 1b 68                 u8 [sp + 0x68] = a4
  6258: 46 11 69 d8 00           u8 [sp + 105] = 0xd8
  6263: 46 11 6a 85 00           u8 [sp + 106] = 0x85
  6268: 46 11 6b 64              u8 [sp + 107] = 0x64
  6272: 46 11 6c 56              u8 [sp + 108] = 0x56
  6276: 46 11 6d 32              u8 [sp + 109] = 0x32
  6280: 46 11 6e c8 00           u8 [sp + 110] = 0xc8
  6285: 46 11 6f ae 00           u8 [sp + 111] = 0xae
  6290: 46 11 70 50              u8 [sp + 112] = 0x50
  6294: 33 0c 3c                 a5 = 0x3c
  6297: 78 1c 71                 u8 [sp + 0x71] = a5
  6300: 46 11 72 4f              u8 [sp + 114] = 0x4f
  6304: 46 11 73 0c              u8 [sp + 115] = 0xc
  6308: 46 11 74 4d              u8 [sp + 116] = 0x4d
  6312: 46 11 75 5e              u8 [sp + 117] = 0x5e
  6316: 46 11 76 19              u8 [sp + 118] = 0x19
  6320: 46 11 77 a7 00           u8 [sp + 119] = 0xa7
  6325: 46 11 78 bf 00           u8 [sp + 120] = 0xbf
  6330: 46 11 79 a9 00           u8 [sp + 121] = 0xa9
  6335: 46 11 7a bb 00           u8 [sp + 122] = 0xbb
  6340: 46 11 7b 0f              u8 [sp + 123] = 0xf
  6344: 46 11 7c a4 00           u8 [sp + 124] = 0xa4
  6349: 46 11 7d 96 00           u8 [sp + 125] = 0x96
  6354: 46 11 7e 87 00           u8 [sp + 126] = 0x87
  6359: 46 11 7f 47              u8 [sp + 127] = 0x47
  6363: 46 21 80 00 e6 00        u8 [sp + 128] = 0xe6
  6369: 46 21 81 00 3d           u8 [sp + 129] = 0x3d
  6374: 78 1c 82 00              u8 [sp + 0x82] = a5
  6378: 95 16 ff 07              s1 = sp + 0x7ff
  6382: 95 66 a1 03              s1 = s1 + 0x3a1
  6386: 78 1b 83 00              u8 [sp + 0x83] = a4
  6390: 46 21 84 00 e7 00        u8 [sp + 132] = 0xe7
  6396: 46 21 85 00 4a           u8 [sp + 133] = 0x4a
  6401: 46 21 86 00 49           u8 [sp + 134] = 0x49
  6406: 46 21 87 00 dd 00        u8 [sp + 135] = 0xdd
  6412: 46 21 88 00 c4 00        u8 [sp + 136] = 0xc4
  6418: 46 21 89 00 a6 00        u8 [sp + 137] = 0xa6
  6424: 46 21 8a 00 ec 00        u8 [sp + 138] = 0xec
  6430: 46 21 8b 00 a8 00        u8 [sp + 139] = 0xa8
  6436: 46 21 8c 00 9a 00        u8 [sp + 140] = 0x9a
  6442: 46 21 8d 00 6a           u8 [sp + 141] = 0x6a
  6447: 46 21 8e 00 6f           u8 [sp + 142] = 0x6f
  6452: 46 21 8f 00 33           u8 [sp + 143] = 0x33
  6457: 46 21 90 00 9d 00        u8 [sp + 144] = 0x9d
  6463: 46 21 91 00 a3 00        u8 [sp + 145] = 0xa3
  6469: 49 11 38 ff ff ef        u64 [sp + 56] = 0xffffffffffefffff
  6475: 46 21 92 00 33           u8 [sp + 146] = 0x33
  6480: 46 21 93 00 7f           u8 [sp + 147] = 0x7f
  6485: 46 21 94 00 d2 00        u8 [sp + 148] = 0xd2
  6491: 46 21 95 00 eb 00        u8 [sp + 149] = 0xeb
  6497: 46 21 96 00 55           u8 [sp + 150] = 0x55
  6502: 46 21 97 00 07           u8 [sp + 151] = 0x7
  6507: 14 05 ff ff ff ff 00 00 00 00 s0 = 0xffffffff
  6517: 95 17 98 00              a0 = sp + 0x98
  6521: 33 09 00 01              a2 = 0x100
  6525: 33 08                    a1 = 0
  6527: 50 20 8c 00 36 25        ra = 140, jump @858
      :                          @344 [@dyn 70]
  6533: 82 17 48                 a0 = u64 [sp + 0x48]
  6536: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6539: 82 19 30                 a2 = u64 [sp + 0x30]
  6542: d2 59 09                 a2 = a2 & s0
  6545: 7b 19 30                 u64 [sp + 0x30] = a2
  6548: 54 17 09 07              jump @346 if a0 <=u 9
      :                          @345
  6552: 28 7f 1c                 jump @688
      :                          @346
  6555: 97 77 02                 a0 = a0 << 0x2
  6558: 33 08 00 00 01           a1 = 0x10000
  6563: c8 87 07                 a0 = a0 + a1
  6566: 81 77                    a0 = i32 [a0]
  6568: 32 07                    jump [a0]
      :                          @347 [@dyn 71]
  6570: 95 18 52                 a1 = sp + 0x52
  6573: 33 09 03                 a2 = 0x3
  6576: 95 1a 98 00              a3 = sp + 0x98
  6580: 33 0c 00 01              a5 = 0x100
  6584: 82 17 30                 a0 = u64 [sp + 0x30]
  6587: 33 0b                    a4 = 0
  6589: 0a 02                    ecalli 2 // 'read'
  6591: 7b 67 70                 u64 [s1 + 0x70] = a0
  6594: 95 77 01                 a0 = a0 + 0x1
  6597: 88 77 01                 a0 = a0 <u 0x1
  6600: 97 77 01                 a0 = a0 << 0x1
  6603: 7b 17 10                 u64 [sp + 0x10] = a0
  6606: 95 17 48                 a0 = sp + 0x48
  6609: 7b 67 18                 u64 [s1 + 0x18] = a0
  6612: 33 09 16                 a2 = 0x16
  6615: 7b 69 20                 u64 [s1 + 0x20] = a2
  6618: 95 17 ff 07              a0 = sp + 0x7ff
  6622: 95 77 11 04              a0 = a0 + 0x411
  6626: 7b 67 28                 u64 [s1 + 0x28] = a0
  6629: 7b 19 20                 u64 [sp + 0x20] = a2
  6632: 7b 69 30                 u64 [s1 + 0x30] = a2
  6635: 33 07 d0 05 01           a0 = 0x105d0
  6640: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  6644: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6649: 49 21 c0 01              u64 [sp + 448] = 0
  6653: 95 17 ff 07              a0 = sp + 0x7ff
  6657: 95 77 b9 03              a0 = a0 + 0x3b9
  6661: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  6665: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6670: 95 17 ff 07              a0 = sp + 0x7ff
  6674: 95 77 e9 03              a0 = a0 + 0x3e9
  6678: 95 18 a0 01              a1 = sp + 0x1a0
  6682: 50 20 90 00 6e 21        ra = 144, jump @791
      :                          @348 [@dyn 72]
  6688: 95 17 ff 07              a0 = sp + 0x7ff
  6692: 95 77 a1 03              a0 = a0 + 0x3a1
  6696: 82 76 50                 s1 = u64 [a0 + 0x50]
  6699: 82 7b 58                 a4 = u64 [a0 + 0x58]
  6702: 82 75 48                 s0 = u64 [a0 + 0x48]
  6705: 82 17 10                 a0 = u64 [sp + 0x10]
  6708: 33 08                    a1 = 0
  6710: 33 09                    a2 = 0
  6712: 64 6a                    a3 = s1
  6714: 33 00 92 00              ra = 0x92
  6718: 0a 64                    ecalli 100 // 'log'
  6720: 01                       fallthrough
      :                          @349 [@dyn 73]
  6721: 82 17 38                 a0 = u64 [sp + 0x38]
  6724: c8 57 07                 a0 = a0 + s0
  6727: 53 37 00 00 f0 25        jump @355 if a0 <u 4293918720
      :                          @350
  6733: 33 07 50 00 03           a0 = 0x30050
  6738: 95 77 00 00 10           a0 = a0 + 0x100000
  6743: 01                       fallthrough
      :                          @351
  6744: 82 78                    a1 = u64 [a0]
  6746: c9 87 09                 a2 = a0 - a1
  6749: ab 69 0f                 jump @355 if a2 != s1
      :                          @352
  6752: c9 58 09                 a2 = a1 - s0
  6755: 01                       fallthrough
      :                          @353
  6756: 82 7a                    a3 = u64 [a0]
  6758: ab 8a f2                 jump @351 if a3 != a1
      :                          @354
  6761: 7b 79                    u64 [a0] = a2
  6763: 01                       fallthrough
      :                          @355
  6764: 95 16 ff 07              s1 = sp + 0x7ff
  6768: 95 66 a1 03              s1 = s1 + 0x3a1
  6772: 82 67 70                 a0 = u64 [s1 + 0x70]
  6775: 33 08 01                 a1 = 0x1
  6778: 50 20 94 00 82 2e        ra = 148, jump @1068
      :                          @356 [@dyn 74]
  6784: 95 17 52                 a0 = sp + 0x52
  6787: 33 08 03                 a1 = 0x3
  6790: 95 19 55                 a2 = sp + 0x55
  6793: 33 0a 03                 a3 = 0x3
  6796: 0a 03                    ecalli 3 // 'write'
  6798: 95 18 48                 a1 = sp + 0x48
  6801: 7b 68 18                 u64 [s1 + 0x18] = a1
  6804: 95 18 ff 07              a1 = sp + 0x7ff
  6808: 95 88 19 04              a1 = a1 + 0x419
  6812: 7b 68 28                 u64 [s1 + 0x28] = a1
  6815: 82 18 20                 a1 = u64 [sp + 0x20]
  6818: 7b 68 20                 u64 [s1 + 0x20] = a1
  6821: 7b 68 30                 u64 [s1 + 0x30] = a1
  6824: 33 08 18 06 01           a1 = 0x10618
  6829: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  6833: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  6838: 49 21 c0 01              u64 [sp + 448] = 0
  6842: 95 18 ff 07              a1 = sp + 0x7ff
  6846: 95 88 b9 03              a1 = a1 + 0x3b9
  6850: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  6854: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  6859: 7b 67 78                 u64 [s1 + 0x78] = a0
  6862: 95 77 01                 a0 = a0 + 0x1
  6865: 88 77 01                 a0 = a0 <u 0x1
  6868: 97 77 01                 a0 = a0 << 0x1
  6871: 7b 17 20                 u64 [sp + 0x20] = a0
  6874: 95 17 ff 07              a0 = sp + 0x7ff
  6878: 95 77 e9 03              a0 = a0 + 0x3e9
  6882: 95 18 a0 01              a1 = sp + 0x1a0
  6886: 50 20 96 00 a2 20        ra = 150, jump @791
      :                          @357 [@dyn 75]
  6892: 82 65 50                 s0 = u64 [s1 + 0x50]
  6895: 82 6b 58                 a4 = u64 [s1 + 0x58]
  6898: 82 66 48                 s1 = u64 [s1 + 0x48]
  6901: 82 17 20                 a0 = u64 [sp + 0x20]
  6904: 33 08                    a1 = 0
  6906: 33 09                    a2 = 0
  6908: 64 5a                    a3 = s0
  6910: 33 00 98 00              ra = 0x98
  6914: 0a 64                    ecalli 100 // 'log'
  6916: 01                       fallthrough
      :                          @358 [@dyn 76]
  6917: 82 17 38                 a0 = u64 [sp + 0x38]
  6920: c8 67 07                 a0 = a0 + s1
  6923: 53 37 00 00 f0 25        jump @364 if a0 <u 4293918720
      :                          @359
  6929: 33 07 50 00 03           a0 = 0x30050
  6934: 95 77 00 00 10           a0 = a0 + 0x100000
  6939: 01                       fallthrough
      :                          @360
  6940: 82 78                    a1 = u64 [a0]
  6942: c9 87 09                 a2 = a0 - a1
  6945: ab 59 0f                 jump @364 if a2 != s0
      :                          @361
  6948: c9 68 09                 a2 = a1 - s1
  6951: 01                       fallthrough
      :                          @362
  6952: 82 7a                    a3 = u64 [a0]
  6954: ab 8a f2                 jump @360 if a3 != a1
      :                          @363
  6957: 7b 79                    u64 [a0] = a2
  6959: 01                       fallthrough
      :                          @364
  6960: 95 15 ff 07              s0 = sp + 0x7ff
  6964: 95 55 a1 03              s0 = s0 + 0x3a1
  6968: 82 57 78                 a0 = u64 [s0 + 0x78]
  6971: 33 08 02                 a1 = 0x2
  6974: 33 06 02                 s1 = 0x2
  6977: 50 20 9a 00 bb 2d        ra = 154, jump @1068
      :                          @365 [@dyn 77]
  6983: 95 18 52                 a1 = sp + 0x52
  6986: 33 09 03                 a2 = 0x3
  6989: 95 1a 98 00              a3 = sp + 0x98
  6993: 33 0c 00 01              a5 = 0x100
  6997: 82 17 30                 a0 = u64 [sp + 0x30]
  7000: 33 0b                    a4 = 0
  7002: 0a 02                    ecalli 2 // 'read'
  7004: 7b 57 80 00              u64 [s0 + 0x80] = a0
  7008: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7011: 88 77 01                 a0 = a0 <u 0x1
  7014: 97 77 01                 a0 = a0 << 0x1
  7017: 7b 17 10                 u64 [sp + 0x10] = a0
  7020: 95 17 48                 a0 = sp + 0x48
  7023: 7b 57 18                 u64 [s0 + 0x18] = a0
  7026: 33 09 16                 a2 = 0x16
  7029: 7b 59 20                 u64 [s0 + 0x20] = a2
  7032: 95 17 ff 07              a0 = sp + 0x7ff
  7036: 95 77 21 04              a0 = a0 + 0x421
  7040: 7b 57 28                 u64 [s0 + 0x28] = a0
  7043: 7b 19 20                 u64 [sp + 0x20] = a2
  7046: 7b 59 30                 u64 [s0 + 0x30] = a2
  7049: 33 07 60 06 01           a0 = 0x10660
  7054: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7058: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7063: 49 21 c0 01              u64 [sp + 448] = 0
  7067: 95 17 ff 07              a0 = sp + 0x7ff
  7071: 95 77 b9 03              a0 = a0 + 0x3b9
  7075: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7079: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  7083: 95 17 ff 07              a0 = sp + 0x7ff
  7087: 95 77 e9 03              a0 = a0 + 0x3e9
  7091: 95 18 a0 01              a1 = sp + 0x1a0
  7095: 50 20 9c 00 d1 1f        ra = 156, jump @791
      :                          @366 [@dyn 78]
  7101: 82 56 50                 s1 = u64 [s0 + 0x50]
  7104: 82 5b 58                 a4 = u64 [s0 + 0x58]
  7107: 82 55 48                 s0 = u64 [s0 + 0x48]
  7110: 82 17 10                 a0 = u64 [sp + 0x10]
  7113: 33 08                    a1 = 0
  7115: 33 09                    a2 = 0
  7117: 64 6a                    a3 = s1
  7119: 33 00 9e 00              ra = 0x9e
  7123: 0a 64                    ecalli 100 // 'log'
  7125: 01                       fallthrough
      :                          @367 [@dyn 79]
  7126: 82 17 38                 a0 = u64 [sp + 0x38]
  7129: c8 57 07                 a0 = a0 + s0
  7132: 53 37 00 00 f0 25        jump @373 if a0 <u 4293918720
      :                          @368
  7138: 33 07 50 00 03           a0 = 0x30050
  7143: 95 77 00 00 10           a0 = a0 + 0x100000
  7148: 01                       fallthrough
      :                          @369
  7149: 82 78                    a1 = u64 [a0]
  7151: c9 87 09                 a2 = a0 - a1
  7154: ab 69 0f                 jump @373 if a2 != s1
      :                          @370
  7157: c9 58 09                 a2 = a1 - s0
  7160: 01                       fallthrough
      :                          @371
  7161: 82 7a                    a3 = u64 [a0]
  7163: ab 8a f2                 jump @369 if a3 != a1
      :                          @372
  7166: 7b 79                    u64 [a0] = a2
  7168: 01                       fallthrough
      :                          @373
  7169: 95 16 ff 07              s1 = sp + 0x7ff
  7173: 95 66 a1 03              s1 = s1 + 0x3a1
  7177: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7181: 33 08 05                 a1 = 0x5
  7184: 50 20 a0 00 ec 2c        ra = 160, jump @1068
      :                          @374 [@dyn 80]
  7190: 95 17 52                 a0 = sp + 0x52
  7193: 33 08                    a1 = 0
  7195: 0a 0f                    ecalli 15 // 'forget'
  7197: 95 18 48                 a1 = sp + 0x48
  7200: 7b 68 18                 u64 [s1 + 0x18] = a1
  7203: 82 18 20                 a1 = u64 [sp + 0x20]
  7206: 7b 68 20                 u64 [s1 + 0x20] = a1
  7209: 7b 68 30                 u64 [s1 + 0x30] = a1
  7212: 33 08 c8 06 01           a1 = 0x106c8
  7217: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7221: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7226: 49 21 c0 01              u64 [sp + 448] = 0
  7230: 95 18 ff 07              a1 = sp + 0x7ff
  7234: 95 88 b9 03              a1 = a1 + 0x3b9
  7238: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7242: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7247: 7b 67                    u64 [s1] = a0
  7249: 95 77 09                 a0 = a0 + 0x9
  7252: 88 77 01                 a0 = a0 <u 0x1
  7255: 97 77 01                 a0 = a0 << 0x1
  7258: 7b 17 20                 u64 [sp + 0x20] = a0
  7261: 7b 66 28                 u64 [s1 + 0x28] = s1
  7264: 95 17 ff 07              a0 = sp + 0x7ff
  7268: 95 77 e9 03              a0 = a0 + 0x3e9
  7272: 95 18 a0 01              a1 = sp + 0x1a0
  7276: 50 20 a2 00 1c 1f        ra = 162, jump @791
      :                          @375 [@dyn 81]
  7282: 82 65 50                 s0 = u64 [s1 + 0x50]
  7285: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7288: 82 66 48                 s1 = u64 [s1 + 0x48]
  7291: 82 17 20                 a0 = u64 [sp + 0x20]
  7294: 33 08                    a1 = 0
  7296: 33 09                    a2 = 0
  7298: 64 5a                    a3 = s0
  7300: 33 00 a4 00              ra = 0xa4
  7304: 0a 64                    ecalli 100 // 'log'
  7306: 01                       fallthrough
      :                          @376 [@dyn 82]
  7307: 82 17 38                 a0 = u64 [sp + 0x38]
  7310: c8 67 07                 a0 = a0 + s1
  7313: 53 37 00 00 f0 25        jump @382 if a0 <u 4293918720
      :                          @377
  7319: 33 07 50 00 03           a0 = 0x30050
  7324: 95 77 00 00 10           a0 = a0 + 0x100000
  7329: 01                       fallthrough
      :                          @378
  7330: 82 78                    a1 = u64 [a0]
  7332: c9 87 09                 a2 = a0 - a1
  7335: ab 59 0f                 jump @382 if a2 != s0
      :                          @379
  7338: c9 68 09                 a2 = a1 - s1
  7341: 01                       fallthrough
      :                          @380
  7342: 82 7a                    a3 = u64 [a0]
  7344: ab 8a f2                 jump @378 if a3 != a1
      :                          @381
  7347: 7b 79                    u64 [a0] = a2
  7349: 01                       fallthrough
      :                          @382
  7350: 95 16 ff 07              s1 = sp + 0x7ff
  7354: 95 66 a1 03              s1 = s1 + 0x3a1
  7358: 82 67                    a0 = u64 [s1]
  7360: 33 08 06                 a1 = 0x6
  7363: 33 00 72 01              ra = 0x172
  7367: 28 35 2c                 jump @1068
      :                          @383 [@dyn 83]
  7370: 95 18 52                 a1 = sp + 0x52
  7373: 33 09 03                 a2 = 0x3
  7376: 95 1a 98 00              a3 = sp + 0x98
  7380: 33 0c 00 01              a5 = 0x100
  7384: 82 17 30                 a0 = u64 [sp + 0x30]
  7387: 33 0b                    a4 = 0
  7389: 0a 02                    ecalli 2 // 'read'
  7391: 7b 67 78                 u64 [s1 + 0x78] = a0
  7394: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7397: 88 77 01                 a0 = a0 <u 0x1
  7400: 97 77 01                 a0 = a0 << 0x1
  7403: 7b 17 10                 u64 [sp + 0x10] = a0
  7406: 95 17 48                 a0 = sp + 0x48
  7409: 7b 67 18                 u64 [s1 + 0x18] = a0
  7412: 33 09 16                 a2 = 0x16
  7415: 7b 69 20                 u64 [s1 + 0x20] = a2
  7418: 95 17 ff 07              a0 = sp + 0x7ff
  7422: 95 77 19 04              a0 = a0 + 0x419
  7426: 7b 67 28                 u64 [s1 + 0x28] = a0
  7429: 7b 19 20                 u64 [sp + 0x20] = a2
  7432: 7b 69 30                 u64 [s1 + 0x30] = a2
  7435: 33 07 08 07 01           a0 = 0x10708
  7440: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  7444: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7449: 49 21 c0 01              u64 [sp + 448] = 0
  7453: 95 17 ff 07              a0 = sp + 0x7ff
  7457: 95 77 b9 03              a0 = a0 + 0x3b9
  7461: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  7465: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7470: 95 17 ff 07              a0 = sp + 0x7ff
  7474: 95 77 e9 03              a0 = a0 + 0x3e9
  7478: 95 18 a0 01              a1 = sp + 0x1a0
  7482: 50 20 a8 00 4e 1e        ra = 168, jump @791
      :                          @384 [@dyn 84]
  7488: 95 17 ff 07              a0 = sp + 0x7ff
  7492: 95 77 a1 03              a0 = a0 + 0x3a1
  7496: 82 76 50                 s1 = u64 [a0 + 0x50]
  7499: 82 7b 58                 a4 = u64 [a0 + 0x58]
  7502: 82 75 48                 s0 = u64 [a0 + 0x48]
  7505: 82 17 10                 a0 = u64 [sp + 0x10]
  7508: 33 08                    a1 = 0
  7510: 33 09                    a2 = 0
  7512: 64 6a                    a3 = s1
  7514: 33 00 aa 00              ra = 0xaa
  7518: 0a 64                    ecalli 100 // 'log'
  7520: 01                       fallthrough
      :                          @385 [@dyn 85]
  7521: 82 17 38                 a0 = u64 [sp + 0x38]
  7524: c8 57 07                 a0 = a0 + s0
  7527: 53 37 00 00 f0 25        jump @391 if a0 <u 4293918720
      :                          @386
  7533: 33 07 50 00 03           a0 = 0x30050
  7538: 95 77 00 00 10           a0 = a0 + 0x100000
  7543: 01                       fallthrough
      :                          @387
  7544: 82 78                    a1 = u64 [a0]
  7546: c9 87 09                 a2 = a0 - a1
  7549: ab 69 0f                 jump @391 if a2 != s1
      :                          @388
  7552: c9 58 09                 a2 = a1 - s0
  7555: 01                       fallthrough
      :                          @389
  7556: 82 7a                    a3 = u64 [a0]
  7558: ab 8a f2                 jump @387 if a3 != a1
      :                          @390
  7561: 7b 79                    u64 [a0] = a2
  7563: 01                       fallthrough
      :                          @391
  7564: 95 16 ff 07              s1 = sp + 0x7ff
  7568: 95 66 a1 03              s1 = s1 + 0x3a1
  7572: 82 67 78                 a0 = u64 [s1 + 0x78]
  7575: 33 08 01                 a1 = 0x1
  7578: 50 20 ac 00 62 2b        ra = 172, jump @1068
      :                          @392 [@dyn 86]
  7584: 95 17 52                 a0 = sp + 0x52
  7587: 33 08 03                 a1 = 0x3
  7590: 33 09                    a2 = 0
  7592: 33 0a                    a3 = 0
  7594: 0a 03                    ecalli 3 // 'write'
  7596: 95 18 48                 a1 = sp + 0x48
  7599: 7b 68 18                 u64 [s1 + 0x18] = a1
  7602: 95 18 ff 07              a1 = sp + 0x7ff
  7606: 95 88 21 04              a1 = a1 + 0x421
  7610: 7b 68 28                 u64 [s1 + 0x28] = a1
  7613: 82 18 20                 a1 = u64 [sp + 0x20]
  7616: 7b 68 20                 u64 [s1 + 0x20] = a1
  7619: 7b 68 30                 u64 [s1 + 0x30] = a1
  7622: 33 08 68 07 01           a1 = 0x10768
  7627: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7631: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7636: 49 21 c0 01              u64 [sp + 448] = 0
  7640: 95 18 ff 07              a1 = sp + 0x7ff
  7644: 95 88 b9 03              a1 = a1 + 0x3b9
  7648: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7652: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  7657: 7b 67 80 00              u64 [s1 + 0x80] = a0
  7661: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  7664: 88 77 01                 a0 = a0 <u 0x1
  7667: 97 77 01                 a0 = a0 << 0x1
  7670: 7b 17 20                 u64 [sp + 0x20] = a0
  7673: 95 17 ff 07              a0 = sp + 0x7ff
  7677: 95 77 e9 03              a0 = a0 + 0x3e9
  7681: 95 18 a0 01              a1 = sp + 0x1a0
  7685: 50 20 ae 00 83 1d        ra = 174, jump @791
      :                          @393 [@dyn 87]
  7691: 82 65 50                 s0 = u64 [s1 + 0x50]
  7694: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7697: 82 66 48                 s1 = u64 [s1 + 0x48]
  7700: 82 17 20                 a0 = u64 [sp + 0x20]
  7703: 33 08                    a1 = 0
  7705: 33 09                    a2 = 0
  7707: 64 5a                    a3 = s0
  7709: 33 00 b0 00              ra = 0xb0
  7713: 0a 64                    ecalli 100 // 'log'
  7715: 01                       fallthrough
      :                          @394 [@dyn 88]
  7716: 82 17 38                 a0 = u64 [sp + 0x38]
  7719: c8 67 07                 a0 = a0 + s1
  7722: 53 37 00 00 f0 25        jump @400 if a0 <u 4293918720
      :                          @395
  7728: 33 07 50 00 03           a0 = 0x30050
  7733: 95 77 00 00 10           a0 = a0 + 0x100000
  7738: 01                       fallthrough
      :                          @396
  7739: 82 78                    a1 = u64 [a0]
  7741: c9 87 09                 a2 = a0 - a1
  7744: ab 59 0f                 jump @400 if a2 != s0
      :                          @397
  7747: c9 68 09                 a2 = a1 - s1
  7750: 01                       fallthrough
      :                          @398
  7751: 82 7a                    a3 = u64 [a0]
  7753: ab 8a f2                 jump @396 if a3 != a1
      :                          @399
  7756: 7b 79                    u64 [a0] = a2
  7758: 01                       fallthrough
      :                          @400
  7759: 95 16 ff 07              s1 = sp + 0x7ff
  7763: 95 66 a1 03              s1 = s1 + 0x3a1
  7767: 82 67 80 00              a0 = u64 [s1 + 0x80]
  7771: 33 08 02                 a1 = 0x2
  7774: 33 05 02                 s0 = 0x2
  7777: 50 20 b2 00 9b 2a        ra = 178, jump @1068
      :                          @401 [@dyn 89]
  7783: 95 18 52                 a1 = sp + 0x52
  7786: 33 09 03                 a2 = 0x3
  7789: 95 1a 98 00              a3 = sp + 0x98
  7793: 33 0c 00 01              a5 = 0x100
  7797: 82 17 30                 a0 = u64 [sp + 0x30]
  7800: 33 0b                    a4 = 0
  7802: 0a 02                    ecalli 2 // 'read'
  7804: 95 18 48                 a1 = sp + 0x48
  7807: 7b 68 18                 u64 [s1 + 0x18] = a1
  7810: 33 08 16                 a1 = 0x16
  7813: 7b 68 20                 u64 [s1 + 0x20] = a1
  7816: 7b 68 30                 u64 [s1 + 0x30] = a1
  7819: 33 08 98 07 01           a1 = 0x10798
  7824: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  7828: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  7833: 49 21 c0 01              u64 [sp + 448] = 0
  7837: 95 18 ff 07              a1 = sp + 0x7ff
  7841: 95 88 b9 03              a1 = a1 + 0x3b9
  7845: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  7849: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  7853: 7b 67                    u64 [s1] = a0
  7855: 95 77 01                 a0 = a0 + 0x1
  7858: 88 77 01                 a0 = a0 <u 0x1
  7861: 97 77 01                 a0 = a0 << 0x1
  7864: 7b 17 20                 u64 [sp + 0x20] = a0
  7867: 7b 66 28                 u64 [s1 + 0x28] = s1
  7870: 95 17 ff 07              a0 = sp + 0x7ff
  7874: 95 77 e9 03              a0 = a0 + 0x3e9
  7878: 95 18 a0 01              a1 = sp + 0x1a0
  7882: 50 20 b4 00 be 1c        ra = 180, jump @791
      :                          @402 [@dyn 90]
  7888: 82 65 50                 s0 = u64 [s1 + 0x50]
  7891: 82 6b 58                 a4 = u64 [s1 + 0x58]
  7894: 82 66 48                 s1 = u64 [s1 + 0x48]
  7897: 82 17 20                 a0 = u64 [sp + 0x20]
  7900: 33 08                    a1 = 0
  7902: 33 09                    a2 = 0
  7904: 64 5a                    a3 = s0
  7906: 33 00 b6 00              ra = 0xb6
  7910: 0a 64                    ecalli 100 // 'log'
  7912: 01                       fallthrough
      :                          @403 [@dyn 91]
  7913: 82 17 38                 a0 = u64 [sp + 0x38]
  7916: c8 67 07                 a0 = a0 + s1
  7919: 53 37 00 00 f0 57 02     jump @437 if a0 <u 4293918720
      :                          @404
  7926: 33 07 50 00 03           a0 = 0x30050
  7931: 95 77 00 00 10           a0 = a0 + 0x100000
  7936: 01                       fallthrough
      :                          @405
  7937: 82 78                    a1 = u64 [a0]
  7939: c9 87 09                 a2 = a0 - a1
  7942: ab 59 40 02              jump @437 if a2 != s0
      :                          @406
  7946: c9 68 09                 a2 = a1 - s1
  7949: 01                       fallthrough
      :                          @407
  7950: 82 7a                    a3 = u64 [a0]
  7952: ab 8a f1                 jump @405 if a3 != a1
      :                          @408
  7955: 7b 79                    u64 [a0] = a2
  7957: 33 0b                    a4 = 0
  7959: 01                       fallthrough
      :                          @409
  7960: ab 8a e9                 jump @405 if a3 != a1
      :                          @410
  7963: 28 2b 02                 jump @437
      :                          @411 [@dyn 92]
  7966: 33 05 03                 s0 = 0x3
  7969: 95 17 58                 a0 = sp + 0x58
  7972: 33 08 03                 a1 = 0x3
  7975: 0a 0e                    ecalli 14 // 'solicit'
  7977: 7b 67 78                 u64 [s1 + 0x78] = a0
  7980: 88 77 01                 a0 = a0 <u 0x1
  7983: 97 77 01                 a0 = a0 << 0x1
  7986: 7b 17 10                 u64 [sp + 0x10] = a0
  7989: 95 17 48                 a0 = sp + 0x48
  7992: 7b 67 18                 u64 [s1 + 0x18] = a0
  7995: 33 08 16                 a1 = 0x16
  7998: 7b 68 20                 u64 [s1 + 0x20] = a1
  8001: 95 17 ff 07              a0 = sp + 0x7ff
  8005: 95 77 19 04              a0 = a0 + 0x419
  8009: 7b 67 28                 u64 [s1 + 0x28] = a0
  8012: 7b 18 20                 u64 [sp + 0x20] = a1
  8015: 7b 68 30                 u64 [s1 + 0x30] = a1
  8018: 33 07 f0 07 01           a0 = 0x107f0
  8023: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8027: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  8031: 49 21 c0 01              u64 [sp + 448] = 0
  8035: 95 17 ff 07              a0 = sp + 0x7ff
  8039: 95 77 b9 03              a0 = a0 + 0x3b9
  8043: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8047: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8052: 95 17 ff 07              a0 = sp + 0x7ff
  8056: 95 77 e9 03              a0 = a0 + 0x3e9
  8060: 95 18 a0 01              a1 = sp + 0x1a0
  8064: 50 20 ba 00 08 1c        ra = 186, jump @791
      :                          @412 [@dyn 93]
  8070: 95 17 ff 07              a0 = sp + 0x7ff
  8074: 95 77 a1 03              a0 = a0 + 0x3a1
  8078: 82 76 50                 s1 = u64 [a0 + 0x50]
  8081: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8084: 82 75 48                 s0 = u64 [a0 + 0x48]
  8087: 82 17 10                 a0 = u64 [sp + 0x10]
  8090: 33 08                    a1 = 0
  8092: 33 09                    a2 = 0
  8094: 64 6a                    a3 = s1
  8096: 33 00 bc 00              ra = 0xbc
  8100: 0a 64                    ecalli 100 // 'log'
  8102: 01                       fallthrough
      :                          @413 [@dyn 94]
  8103: 82 17 38                 a0 = u64 [sp + 0x38]
  8106: c8 57 07                 a0 = a0 + s0
  8109: 53 37 00 00 f0 25        jump @419 if a0 <u 4293918720
      :                          @414
  8115: 33 07 50 00 03           a0 = 0x30050
  8120: 95 77 00 00 10           a0 = a0 + 0x100000
  8125: 01                       fallthrough
      :                          @415
  8126: 82 78                    a1 = u64 [a0]
  8128: c9 87 09                 a2 = a0 - a1
  8131: ab 69 0f                 jump @419 if a2 != s1
      :                          @416
  8134: c9 58 09                 a2 = a1 - s0
  8137: 01                       fallthrough
      :                          @417
  8138: 82 7a                    a3 = u64 [a0]
  8140: ab 8a f2                 jump @415 if a3 != a1
      :                          @418
  8143: 7b 79                    u64 [a0] = a2
  8145: 01                       fallthrough
      :                          @419
  8146: 95 16 ff 07              s1 = sp + 0x7ff
  8150: 95 66 a1 03              s1 = s1 + 0x3a1
  8154: 82 67 78                 a0 = u64 [s1 + 0x78]
  8157: 33 08 01                 a1 = 0x1
  8160: 50 20 be 00 1c 29        ra = 190, jump @1068
      :                          @420 [@dyn 95]
  8166: 95 17 58                 a0 = sp + 0x58
  8169: 33 08 03                 a1 = 0x3
  8172: 0a 0d                    ecalli 13 // 'query'
  8174: 95 18 48                 a1 = sp + 0x48
  8177: 7b 68 18                 u64 [s1 + 0x18] = a1
  8180: 95 18 ff 07              a1 = sp + 0x7ff
  8184: 95 88 21 04              a1 = a1 + 0x421
  8188: 7b 68 28                 u64 [s1 + 0x28] = a1
  8191: 82 18 20                 a1 = u64 [sp + 0x20]
  8194: 7b 68 20                 u64 [s1 + 0x20] = a1
  8197: 7b 68 30                 u64 [s1 + 0x30] = a1
  8200: 33 08 50 08 01           a1 = 0x10850
  8205: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8209: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8214: 49 21 c0 01              u64 [sp + 448] = 0
  8218: 95 18 ff 07              a1 = sp + 0x7ff
  8222: 95 88 b9 03              a1 = a1 + 0x3b9
  8226: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8230: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8235: 7b 67 80 00              u64 [s1 + 0x80] = a0
  8239: 88 77 01                 a0 = a0 <u 0x1
  8242: 97 77 01                 a0 = a0 << 0x1
  8245: 7b 17 20                 u64 [sp + 0x20] = a0
  8248: 95 17 ff 07              a0 = sp + 0x7ff
  8252: 95 77 e9 03              a0 = a0 + 0x3e9
  8256: 95 18 a0 01              a1 = sp + 0x1a0
  8260: 50 20 c0 00 44 1b        ra = 192, jump @791
      :                          @421 [@dyn 96]
  8266: 82 65 50                 s0 = u64 [s1 + 0x50]
  8269: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8272: 82 66 48                 s1 = u64 [s1 + 0x48]
  8275: 82 17 20                 a0 = u64 [sp + 0x20]
  8278: 33 08                    a1 = 0
  8280: 33 09                    a2 = 0
  8282: 64 5a                    a3 = s0
  8284: 33 00 c2 00              ra = 0xc2
  8288: 0a 64                    ecalli 100 // 'log'
  8290: 01                       fallthrough
      :                          @422 [@dyn 97]
  8291: 82 17 38                 a0 = u64 [sp + 0x38]
  8294: c8 67 07                 a0 = a0 + s1
  8297: 53 37 00 00 f0 25        jump @428 if a0 <u 4293918720
      :                          @423
  8303: 33 07 50 00 03           a0 = 0x30050
  8308: 95 77 00 00 10           a0 = a0 + 0x100000
  8313: 01                       fallthrough
      :                          @424
  8314: 82 78                    a1 = u64 [a0]
  8316: c9 87 09                 a2 = a0 - a1
  8319: ab 59 0f                 jump @428 if a2 != s0
      :                          @425
  8322: c9 68 09                 a2 = a1 - s1
  8325: 01                       fallthrough
      :                          @426
  8326: 82 7a                    a3 = u64 [a0]
  8328: ab 8a f2                 jump @424 if a3 != a1
      :                          @427
  8331: 7b 79                    u64 [a0] = a2
  8333: 01                       fallthrough
      :                          @428
  8334: 95 16 ff 07              s1 = sp + 0x7ff
  8338: 95 66 a1 03              s1 = s1 + 0x3a1
  8342: 82 67 80 00              a0 = u64 [s1 + 0x80]
  8346: 33 08 02                 a1 = 0x2
  8349: 33 05 02                 s0 = 0x2
  8352: 50 20 c4 00 5c 28        ra = 196, jump @1068
      :                          @429 [@dyn 98]
  8358: 95 17 78                 a0 = sp + 0x78
  8361: 33 08 03                 a1 = 0x3
  8364: 0a 0d                    ecalli 13 // 'query'
  8366: 95 18 48                 a1 = sp + 0x48
  8369: 7b 68 18                 u64 [s1 + 0x18] = a1
  8372: 33 08 16                 a1 = 0x16
  8375: 7b 68 20                 u64 [s1 + 0x20] = a1
  8378: 7b 68 30                 u64 [s1 + 0x30] = a1
  8381: 33 08 98 08 01           a1 = 0x10898
  8386: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8390: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8395: 49 21 c0 01              u64 [sp + 448] = 0
  8399: 95 18 ff 07              a1 = sp + 0x7ff
  8403: 95 88 b9 03              a1 = a1 + 0x3b9
  8407: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8411: 7b 15 b8 01              u64 [sp + 0x1b8] = s0
  8415: 7b 67                    u64 [s1] = a0
  8417: 95 77 01                 a0 = a0 + 0x1
  8420: 88 77 01                 a0 = a0 <u 0x1
  8423: 97 77 01                 a0 = a0 << 0x1
  8426: 7b 17 20                 u64 [sp + 0x20] = a0
  8429: 7b 66 28                 u64 [s1 + 0x28] = s1
  8432: 95 17 ff 07              a0 = sp + 0x7ff
  8436: 95 77 e9 03              a0 = a0 + 0x3e9
  8440: 95 18 a0 01              a1 = sp + 0x1a0
  8444: 50 20 c6 00 8c 1a        ra = 198, jump @791
      :                          @430 [@dyn 99]
  8450: 82 65 50                 s0 = u64 [s1 + 0x50]
  8453: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8456: 82 66 48                 s1 = u64 [s1 + 0x48]
  8459: 82 17 20                 a0 = u64 [sp + 0x20]
  8462: 33 08                    a1 = 0
  8464: 33 09                    a2 = 0
  8466: 64 5a                    a3 = s0
  8468: 33 00 c8 00              ra = 0xc8
  8472: 0a 64                    ecalli 100 // 'log'
  8474: 01                       fallthrough
      :                          @431 [@dyn 100]
  8475: 82 17 38                 a0 = u64 [sp + 0x38]
  8478: c8 67 07                 a0 = a0 + s1
  8481: 53 37 00 00 f0 25        jump @437 if a0 <u 4293918720
      :                          @432
  8487: 33 07 50 00 03           a0 = 0x30050
  8492: 95 77 00 00 10           a0 = a0 + 0x100000
  8497: 01                       fallthrough
      :                          @433
  8498: 82 78                    a1 = u64 [a0]
  8500: c9 87 09                 a2 = a0 - a1
  8503: ab 59 0f                 jump @437 if a2 != s0
      :                          @434
  8506: c9 68 09                 a2 = a1 - s1
  8509: 01                       fallthrough
      :                          @435
  8510: 82 7a                    a3 = u64 [a0]
  8512: ab 8a f2                 jump @433 if a3 != a1
      :                          @436
  8515: 7b 79                    u64 [a0] = a2
  8517: 01                       fallthrough
      :                          @437
  8518: 95 16 ff 07              s1 = sp + 0x7ff
  8522: 95 66 a1 03              s1 = s1 + 0x3a1
  8526: 82 67                    a0 = u64 [s1]
  8528: 33 08 05                 a1 = 0x5
  8531: 33 00 72 01              ra = 0x172
  8535: 28 a5 27                 jump @1068
      :                          @438 [@dyn 101]
  8538: 33 05 03                 s0 = 0x3
  8541: 95 17 58                 a0 = sp + 0x58
  8544: 33 08 03                 a1 = 0x3
  8547: 0a 0f                    ecalli 15 // 'forget'
  8549: 7b 67 68                 u64 [s1 + 0x68] = a0
  8552: 88 77 01                 a0 = a0 <u 0x1
  8555: 97 77 01                 a0 = a0 << 0x1
  8558: 7b 17 10                 u64 [sp + 0x10] = a0
  8561: 95 17 48                 a0 = sp + 0x48
  8564: 7b 67 18                 u64 [s1 + 0x18] = a0
  8567: 33 08 16                 a1 = 0x16
  8570: 7b 68 20                 u64 [s1 + 0x20] = a1
  8573: 95 17 ff 07              a0 = sp + 0x7ff
  8577: 95 77 09 04              a0 = a0 + 0x409
  8581: 7b 67 28                 u64 [s1 + 0x28] = a0
  8584: 7b 18 20                 u64 [sp + 0x20] = a1
  8587: 7b 68 30                 u64 [s1 + 0x30] = a1
  8590: 33 07 e0 08 01           a0 = 0x108e0
  8595: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8599: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  8603: 49 21 c0 01              u64 [sp + 448] = 0
  8607: 95 17 ff 07              a0 = sp + 0x7ff
  8611: 95 77 b9 03              a0 = a0 + 0x3b9
  8615: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  8619: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8624: 95 17 ff 07              a0 = sp + 0x7ff
  8628: 95 77 e9 03              a0 = a0 + 0x3e9
  8632: 95 18 a0 01              a1 = sp + 0x1a0
  8636: 50 20 cc 00 cc 19        ra = 204, jump @791
      :                          @439 [@dyn 102]
  8642: 95 17 ff 07              a0 = sp + 0x7ff
  8646: 95 77 a1 03              a0 = a0 + 0x3a1
  8650: 82 76 50                 s1 = u64 [a0 + 0x50]
  8653: 82 7b 58                 a4 = u64 [a0 + 0x58]
  8656: 82 75 48                 s0 = u64 [a0 + 0x48]
  8659: 82 17 10                 a0 = u64 [sp + 0x10]
  8662: 33 08                    a1 = 0
  8664: 33 09                    a2 = 0
  8666: 64 6a                    a3 = s1
  8668: 33 00 ce 00              ra = 0xce
  8672: 0a 64                    ecalli 100 // 'log'
  8674: 01                       fallthrough
      :                          @440 [@dyn 103]
  8675: 82 17 38                 a0 = u64 [sp + 0x38]
  8678: c8 57 07                 a0 = a0 + s0
  8681: 53 37 00 00 f0 25        jump @446 if a0 <u 4293918720
      :                          @441
  8687: 33 07 50 00 03           a0 = 0x30050
  8692: 95 77 00 00 10           a0 = a0 + 0x100000
  8697: 01                       fallthrough
      :                          @442
  8698: 82 78                    a1 = u64 [a0]
  8700: c9 87 09                 a2 = a0 - a1
  8703: ab 69 0f                 jump @446 if a2 != s1
      :                          @443
  8706: c9 58 09                 a2 = a1 - s0
  8709: 01                       fallthrough
      :                          @444
  8710: 82 7a                    a3 = u64 [a0]
  8712: ab 8a f2                 jump @442 if a3 != a1
      :                          @445
  8715: 7b 79                    u64 [a0] = a2
  8717: 01                       fallthrough
      :                          @446
  8718: 95 16 ff 07              s1 = sp + 0x7ff
  8722: 95 66 a1 03              s1 = s1 + 0x3a1
  8726: 82 67 68                 a0 = u64 [s1 + 0x68]
  8729: 33 08 01                 a1 = 0x1
  8732: 50 20 d0 00 e0 26        ra = 208, jump @1068
      :                          @447 [@dyn 104]
  8738: 95 17 58                 a0 = sp + 0x58
  8741: 33 08 03                 a1 = 0x3
  8744: 0a 0d                    ecalli 13 // 'query'
  8746: 95 18 48                 a1 = sp + 0x48
  8749: 7b 68 18                 u64 [s1 + 0x18] = a1
  8752: 95 18 ff 07              a1 = sp + 0x7ff
  8756: 95 88 11 04              a1 = a1 + 0x411
  8760: 7b 68 28                 u64 [s1 + 0x28] = a1
  8763: 82 18 20                 a1 = u64 [sp + 0x20]
  8766: 7b 68 20                 u64 [s1 + 0x20] = a1
  8769: 7b 68 30                 u64 [s1 + 0x30] = a1
  8772: 33 08 28 09 01           a1 = 0x10928
  8777: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  8781: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  8786: 49 21 c0 01              u64 [sp + 448] = 0
  8790: 95 18 ff 07              a1 = sp + 0x7ff
  8794: 95 88 b9 03              a1 = a1 + 0x3b9
  8798: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  8802: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  8807: 7b 67 70                 u64 [s1 + 0x70] = a0
  8810: 8e 77                    a0 = a0 >u 0
  8812: 97 77 01                 a0 = a0 << 0x1
  8815: 7b 17 20                 u64 [sp + 0x20] = a0
  8818: 95 17 ff 07              a0 = sp + 0x7ff
  8822: 95 77 e9 03              a0 = a0 + 0x3e9
  8826: 95 18 a0 01              a1 = sp + 0x1a0
  8830: 50 20 d2 00 0a 19        ra = 210, jump @791
      :                          @448 [@dyn 105]
  8836: 82 65 50                 s0 = u64 [s1 + 0x50]
  8839: 82 6b 58                 a4 = u64 [s1 + 0x58]
  8842: 82 66 48                 s1 = u64 [s1 + 0x48]
  8845: 82 17 20                 a0 = u64 [sp + 0x20]
  8848: 33 08                    a1 = 0
  8850: 33 09                    a2 = 0
  8852: 64 5a                    a3 = s0
  8854: 33 00 d4 00              ra = 0xd4
  8858: 0a 64                    ecalli 100 // 'log'
  8860: 01                       fallthrough
      :                          @449 [@dyn 106]
  8861: 82 17 38                 a0 = u64 [sp + 0x38]
  8864: c8 67 07                 a0 = a0 + s1
  8867: 53 37 00 00 f0 25        jump @455 if a0 <u 4293918720
      :                          @450
  8873: 33 07 50 00 03           a0 = 0x30050
  8878: 95 77 00 00 10           a0 = a0 + 0x100000
  8883: 01                       fallthrough
      :                          @451
  8884: 82 78                    a1 = u64 [a0]
  8886: c9 87 09                 a2 = a0 - a1
  8889: ab 59 0f                 jump @455 if a2 != s0
      :                          @452
  8892: c9 68 09                 a2 = a1 - s1
  8895: 01                       fallthrough
      :                          @453
  8896: 82 7a                    a3 = u64 [a0]
  8898: ab 8a f2                 jump @451 if a3 != a1
      :                          @454
  8901: 7b 79                    u64 [a0] = a2
  8903: 01                       fallthrough
      :                          @455
  8904: 95 15 ff 07              s0 = sp + 0x7ff
  8908: 95 55 a1 03              s0 = s0 + 0x3a1
  8912: 82 57 70                 a0 = u64 [s0 + 0x70]
  8915: 33 08 02                 a1 = 0x2
  8918: 33 06 02                 s1 = 0x2
  8921: 50 20 d6 00 23 26        ra = 214, jump @1068
      :                          @456 [@dyn 107]
  8927: 95 18 78                 a1 = sp + 0x78
  8930: 95 19 98 00              a2 = sp + 0x98
  8934: 33 0b 03                 a4 = 0x3
  8937: 82 17 30                 a0 = u64 [sp + 0x30]
  8940: 33 0a                    a3 = 0
  8942: 0a 01                    ecalli 1 // 'lookup'
  8944: 7b 57 78                 u64 [s0 + 0x78] = a0
  8947: 95 77 01                 a0 = a0 + 0x1
  8950: 88 77 01                 a0 = a0 <u 0x1
  8953: 97 77 01                 a0 = a0 << 0x1
  8956: 7b 17 10                 u64 [sp + 0x10] = a0
  8959: 95 17 48                 a0 = sp + 0x48
  8962: 7b 57 18                 u64 [s0 + 0x18] = a0
  8965: 33 09 16                 a2 = 0x16
  8968: 7b 59 20                 u64 [s0 + 0x20] = a2
  8971: 95 17 ff 07              a0 = sp + 0x7ff
  8975: 95 77 19 04              a0 = a0 + 0x419
  8979: 7b 57 28                 u64 [s0 + 0x28] = a0
  8982: 7b 19 20                 u64 [sp + 0x20] = a2
  8985: 7b 59 30                 u64 [s0 + 0x30] = a2
  8988: 33 07 70 09 01           a0 = 0x10970
  8993: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  8997: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9002: 49 21 c0 01              u64 [sp + 448] = 0
  9006: 95 17 ff 07              a0 = sp + 0x7ff
  9010: 95 77 b9 03              a0 = a0 + 0x3b9
  9014: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9018: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
  9022: 95 17 ff 07              a0 = sp + 0x7ff
  9026: 95 77 e9 03              a0 = a0 + 0x3e9
  9030: 95 18 a0 01              a1 = sp + 0x1a0
  9034: 50 20 d8 00 3e 18        ra = 216, jump @791
      :                          @457 [@dyn 108]
  9040: 82 56 50                 s1 = u64 [s0 + 0x50]
  9043: 82 5b 58                 a4 = u64 [s0 + 0x58]
  9046: 82 55 48                 s0 = u64 [s0 + 0x48]
  9049: 82 17 10                 a0 = u64 [sp + 0x10]
  9052: 33 08                    a1 = 0
  9054: 33 09                    a2 = 0
  9056: 64 6a                    a3 = s1
  9058: 33 00 da 00              ra = 0xda
  9062: 0a 64                    ecalli 100 // 'log'
  9064: 01                       fallthrough
      :                          @458 [@dyn 109]
  9065: 82 17 38                 a0 = u64 [sp + 0x38]
  9068: c8 57 07                 a0 = a0 + s0
  9071: 53 37 00 00 f0 25        jump @464 if a0 <u 4293918720
      :                          @459
  9077: 33 07 50 00 03           a0 = 0x30050
  9082: 95 77 00 00 10           a0 = a0 + 0x100000
  9087: 01                       fallthrough
      :                          @460
  9088: 82 78                    a1 = u64 [a0]
  9090: c9 87 09                 a2 = a0 - a1
  9093: ab 69 0f                 jump @464 if a2 != s1
      :                          @461
  9096: c9 58 09                 a2 = a1 - s0
  9099: 01                       fallthrough
      :                          @462
  9100: 82 7a                    a3 = u64 [a0]
  9102: ab 8a f2                 jump @460 if a3 != a1
      :                          @463
  9105: 7b 79                    u64 [a0] = a2
  9107: 01                       fallthrough
      :                          @464
  9108: 95 16 ff 07              s1 = sp + 0x7ff
  9112: 95 66 a1 03              s1 = s1 + 0x3a1
  9116: 82 67 78                 a0 = u64 [s1 + 0x78]
  9119: 33 08 05                 a1 = 0x5
  9122: 50 20 dc 00 5a 25        ra = 220, jump @1068
      :                          @465 [@dyn 110]
  9128: 33 07 e8 03              a0 = 0x3e8
  9132: 95 18 52                 a1 = sp + 0x52
  9135: 0a 06                    ecalli 6 // 'assign'
  9137: 95 18 48                 a1 = sp + 0x48
  9140: 7b 68 18                 u64 [s1 + 0x18] = a1
  9143: 95 18 ff 07              a1 = sp + 0x7ff
  9147: 95 88 21 04              a1 = a1 + 0x421
  9151: 7b 68 28                 u64 [s1 + 0x28] = a1
  9154: 82 18 20                 a1 = u64 [sp + 0x20]
  9157: 7b 68 20                 u64 [s1 + 0x20] = a1
  9160: 7b 68 30                 u64 [s1 + 0x30] = a1
  9163: 33 08 c0 09 01           a1 = 0x109c0
  9168: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9172: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9177: 49 21 c0 01              u64 [sp + 448] = 0
  9181: 95 18 ff 07              a1 = sp + 0x7ff
  9185: 95 88 b9 03              a1 = a1 + 0x3b9
  9189: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9193: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9198: 7b 67 80 00              u64 [s1 + 0x80] = a0
  9202: 95 77 06                 a0 = a0 + 0x6
  9205: 88 77 01                 a0 = a0 <u 0x1
  9208: 97 77 01                 a0 = a0 << 0x1
  9211: 7b 17 20                 u64 [sp + 0x20] = a0
  9214: 95 17 ff 07              a0 = sp + 0x7ff
  9218: 95 77 e9 03              a0 = a0 + 0x3e9
  9222: 95 18 a0 01              a1 = sp + 0x1a0
  9226: 50 20 de 00 7e 17        ra = 222, jump @791
      :                          @466 [@dyn 111]
  9232: 82 65 50                 s0 = u64 [s1 + 0x50]
  9235: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9238: 82 66 48                 s1 = u64 [s1 + 0x48]
  9241: 82 17 20                 a0 = u64 [sp + 0x20]
  9244: 33 08                    a1 = 0
  9246: 33 09                    a2 = 0
  9248: 64 5a                    a3 = s0
  9250: 33 00 e0 00              ra = 0xe0
  9254: 0a 64                    ecalli 100 // 'log'
  9256: 01                       fallthrough
      :                          @467 [@dyn 112]
  9257: 82 17 38                 a0 = u64 [sp + 0x38]
  9260: c8 67 07                 a0 = a0 + s1
  9263: 53 37 00 00 f0 25        jump @473 if a0 <u 4293918720
      :                          @468
  9269: 33 07 50 00 03           a0 = 0x30050
  9274: 95 77 00 00 10           a0 = a0 + 0x100000
  9279: 01                       fallthrough
      :                          @469
  9280: 82 78                    a1 = u64 [a0]
  9282: c9 87 09                 a2 = a0 - a1
  9285: ab 59 0f                 jump @473 if a2 != s0
      :                          @470
  9288: c9 68 09                 a2 = a1 - s1
  9291: 01                       fallthrough
      :                          @471
  9292: 82 7a                    a3 = u64 [a0]
  9294: ab 8a f2                 jump @469 if a3 != a1
      :                          @472
  9297: 7b 79                    u64 [a0] = a2
  9299: 01                       fallthrough
      :                          @473
  9300: 95 15 ff 07              s0 = sp + 0x7ff
  9304: 95 55 a1 03              s0 = s0 + 0x3a1
  9308: 82 57 80 00              a0 = u64 [s0 + 0x80]
  9312: 33 08 06                 a1 = 0x6
  9315: 50 20 e2 00 99 24        ra = 226, jump @1068
      :                          @474 [@dyn 113]
  9321: 33 07 9a 02              a0 = 0x29a
  9325: 95 18 58                 a1 = sp + 0x58
  9328: 33 09 03                 a2 = 0x3
  9331: 0a 1b                    ecalli 27 // 'provide'
  9333: 7b 17 20                 u64 [sp + 0x20] = a0
  9336: 95 77 04                 a0 = a0 + 0x4
  9339: 88 77 01                 a0 = a0 <u 0x1
  9342: 97 77 01                 a0 = a0 << 0x1
  9345: 7b 17 08                 u64 [sp + 0x8] = a0
  9348: 95 17 ff 07              a0 = sp + 0x7ff
  9352: 95 77 11 04              a0 = a0 + 0x411
  9356: 7b 57 48                 u64 [s0 + 0x48] = a0
  9359: 33 07 16                 a0 = 0x16
  9362: 7b 17 10                 u64 [sp + 0x10] = a0
  9365: 7b 57 50                 u64 [s0 + 0x50] = a0
  9368: 33 07 28 0a 01           a0 = 0x10a28
  9373: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9377: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9382: 49 21 c0 01              u64 [sp + 448] = 0
  9386: 95 17 ff 07              a0 = sp + 0x7ff
  9390: 95 77 e9 03              a0 = a0 + 0x3e9
  9394: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9398: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9403: 95 17 ff 07              a0 = sp + 0x7ff
  9407: 95 77 b9 03              a0 = a0 + 0x3b9
  9411: 95 18 a0 01              a1 = sp + 0x1a0
  9415: 50 20 e4 00 c1 16        ra = 228, jump @791
      :                          @475 [@dyn 114]
  9421: 82 56 20                 s1 = u64 [s0 + 0x20]
  9424: 82 5b 28                 a4 = u64 [s0 + 0x28]
  9427: 82 55 18                 s0 = u64 [s0 + 0x18]
  9430: 82 17 08                 a0 = u64 [sp + 0x8]
  9433: 33 08                    a1 = 0
  9435: 33 09                    a2 = 0
  9437: 64 6a                    a3 = s1
  9439: 33 00 e6 00              ra = 0xe6
  9443: 0a 64                    ecalli 100 // 'log'
  9445: 01                       fallthrough
      :                          @476 [@dyn 115]
  9446: 82 17 38                 a0 = u64 [sp + 0x38]
  9449: c8 57 07                 a0 = a0 + s0
  9452: 53 37 00 00 f0 25        jump @482 if a0 <u 4293918720
      :                          @477
  9458: 33 07 50 00 03           a0 = 0x30050
  9463: 95 77 00 00 10           a0 = a0 + 0x100000
  9468: 01                       fallthrough
      :                          @478
  9469: 82 78                    a1 = u64 [a0]
  9471: c9 87 09                 a2 = a0 - a1
  9474: ab 69 0f                 jump @482 if a2 != s1
      :                          @479
  9477: c9 58 09                 a2 = a1 - s0
  9480: 01                       fallthrough
      :                          @480
  9481: 82 7a                    a3 = u64 [a0]
  9483: ab 8a f2                 jump @478 if a3 != a1
      :                          @481
  9486: 7b 79                    u64 [a0] = a2
  9488: 01                       fallthrough
      :                          @482
  9489: 33 08 07                 a1 = 0x7
  9492: 82 17 20                 a0 = u64 [sp + 0x20]
  9495: 50 20 e8 00 e5 23        ra = 232, jump @1068
      :                          @483 [@dyn 116]
  9501: 95 18 58                 a1 = sp + 0x58
  9504: 33 09 03                 a2 = 0x3
  9507: 82 17 30                 a0 = u64 [sp + 0x30]
  9510: 0a 1b                    ecalli 27 // 'provide'
  9512: 95 16 ff 07              s1 = sp + 0x7ff
  9516: 95 66 a1 03              s1 = s1 + 0x3a1
  9520: 82 18 10                 a1 = u64 [sp + 0x10]
  9523: 7b 68 50                 u64 [s1 + 0x50] = a1
  9526: 33 08 80 0a 01           a1 = 0x10a80
  9531: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9535: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  9540: 49 21 c0 01              u64 [sp + 448] = 0
  9544: 95 18 ff 07              a1 = sp + 0x7ff
  9548: 95 88 e9 03              a1 = a1 + 0x3e9
  9552: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9556: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  9561: 7b 67                    u64 [s1] = a0
  9563: 88 77 01                 a0 = a0 <u 0x1
  9566: 97 77 01                 a0 = a0 << 0x1
  9569: 7b 17 10                 u64 [sp + 0x10] = a0
  9572: 7b 66 48                 u64 [s1 + 0x48] = s1
  9575: 95 17 ff 07              a0 = sp + 0x7ff
  9579: 95 77 b9 03              a0 = a0 + 0x3b9
  9583: 95 18 a0 01              a1 = sp + 0x1a0
  9587: 50 20 ea 00 15 16        ra = 234, jump @791
      :                          @484 [@dyn 117]
  9593: 82 65 20                 s0 = u64 [s1 + 0x20]
  9596: 82 6b 28                 a4 = u64 [s1 + 0x28]
  9599: 82 66 18                 s1 = u64 [s1 + 0x18]
  9602: 82 17 10                 a0 = u64 [sp + 0x10]
  9605: 33 08                    a1 = 0
  9607: 33 09                    a2 = 0
  9609: 64 5a                    a3 = s0
  9611: 33 00 ec 00              ra = 0xec
  9615: 0a 64                    ecalli 100 // 'log'
  9617: 01                       fallthrough
      :                          @485 [@dyn 118]
  9618: 82 17 38                 a0 = u64 [sp + 0x38]
  9621: c8 67 07                 a0 = a0 + s1
  9624: 53 37 00 00 f0 25        jump @491 if a0 <u 4293918720
      :                          @486
  9630: 33 07 50 00 03           a0 = 0x30050
  9635: 95 77 00 00 10           a0 = a0 + 0x100000
  9640: 01                       fallthrough
      :                          @487
  9641: 82 78                    a1 = u64 [a0]
  9643: c9 87 09                 a2 = a0 - a1
  9646: ab 59 0f                 jump @491 if a2 != s0
      :                          @488
  9649: c9 68 09                 a2 = a1 - s1
  9652: 01                       fallthrough
      :                          @489
  9653: 82 7a                    a3 = u64 [a0]
  9655: ab 8a f2                 jump @487 if a3 != a1
      :                          @490
  9658: 7b 79                    u64 [a0] = a2
  9660: 01                       fallthrough
      :                          @491
  9661: 33 08 08                 a1 = 0x8
  9664: 82 17 20                 a0 = u64 [sp + 0x20]
  9667: 50 20 ee 00 39 23        ra = 238, jump @1068
      :                          @492 [@dyn 119]
  9673: 95 16 ff 07              s1 = sp + 0x7ff
  9677: 95 66 a1 03              s1 = s1 + 0x3a1
  9681: 28 46 10                 jump @688
      :                          @493 [@dyn 120]
  9684: 33 05 03                 s0 = 0x3
  9687: 95 18 58                 a1 = sp + 0x58
  9690: 95 19 98 00              a2 = sp + 0x98
  9694: 33 0b 03                 a4 = 0x3
  9697: 82 17 30                 a0 = u64 [sp + 0x30]
  9700: 33 0a                    a3 = 0
  9702: 0a 01                    ecalli 1 // 'lookup'
  9704: 7b 17 98 01              u64 [sp + 0x198] = a0
  9708: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
  9711: 88 77 01                 a0 = a0 <u 0x1
  9714: 97 77 01                 a0 = a0 << 0x1
  9717: 7b 17 10                 u64 [sp + 0x10] = a0
  9720: 95 17 48                 a0 = sp + 0x48
  9723: 7b 67 18                 u64 [s1 + 0x18] = a0
  9726: 33 08 16                 a1 = 0x16
  9729: 7b 68 20                 u64 [s1 + 0x20] = a1
  9732: 95 17 98 01              a0 = sp + 0x198
  9736: 7b 67 28                 u64 [s1 + 0x28] = a0
  9739: 7b 18 20                 u64 [sp + 0x20] = a1
  9742: 7b 68 30                 u64 [s1 + 0x30] = a1
  9745: 33 07 b8 0a 01           a0 = 0x10ab8
  9750: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  9754: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
  9758: 49 21 c0 01              u64 [sp + 448] = 0
  9762: 95 17 ff 07              a0 = sp + 0x7ff
  9766: 95 77 b9 03              a0 = a0 + 0x3b9
  9770: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  9774: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9779: 95 17 ff 07              a0 = sp + 0x7ff
  9783: 95 77 e9 03              a0 = a0 + 0x3e9
  9787: 95 18 a0 01              a1 = sp + 0x1a0
  9791: 50 20 f2 00 49 15        ra = 242, jump @791
      :                          @494 [@dyn 121]
  9797: 95 17 ff 07              a0 = sp + 0x7ff
  9801: 95 77 a1 03              a0 = a0 + 0x3a1
  9805: 82 76 50                 s1 = u64 [a0 + 0x50]
  9808: 82 7b 58                 a4 = u64 [a0 + 0x58]
  9811: 82 75 48                 s0 = u64 [a0 + 0x48]
  9814: 82 17 10                 a0 = u64 [sp + 0x10]
  9817: 33 08                    a1 = 0
  9819: 33 09                    a2 = 0
  9821: 64 6a                    a3 = s1
  9823: 33 00 f4 00              ra = 0xf4
  9827: 0a 64                    ecalli 100 // 'log'
  9829: 01                       fallthrough
      :                          @495 [@dyn 122]
  9830: 82 17 38                 a0 = u64 [sp + 0x38]
  9833: c8 57 07                 a0 = a0 + s0
  9836: 53 37 00 00 f0 25        jump @501 if a0 <u 4293918720
      :                          @496
  9842: 33 07 50 00 03           a0 = 0x30050
  9847: 95 77 00 00 10           a0 = a0 + 0x100000
  9852: 01                       fallthrough
      :                          @497
  9853: 82 78                    a1 = u64 [a0]
  9855: c9 87 09                 a2 = a0 - a1
  9858: ab 69 0f                 jump @501 if a2 != s1
      :                          @498
  9861: c9 58 09                 a2 = a1 - s0
  9864: 01                       fallthrough
      :                          @499
  9865: 82 7a                    a3 = u64 [a0]
  9867: ab 8a f2                 jump @497 if a3 != a1
      :                          @500
  9870: 7b 79                    u64 [a0] = a2
  9872: 01                       fallthrough
      :                          @501
  9873: 82 17 98 01              a0 = u64 [sp + 0x198]
  9877: 33 08 01                 a1 = 0x1
  9880: 50 20 f6 00 64 22        ra = 246, jump @1068
      :                          @502 [@dyn 123]
  9886: 95 17 58                 a0 = sp + 0x58
  9889: 33 08 03                 a1 = 0x3
  9892: 0a 0d                    ecalli 13 // 'query'
  9894: 95 16 ff 07              s1 = sp + 0x7ff
  9898: 95 66 a1 03              s1 = s1 + 0x3a1
  9902: 95 18 48                 a1 = sp + 0x48
  9905: 7b 68 18                 u64 [s1 + 0x18] = a1
  9908: 95 18 ff 07              a1 = sp + 0x7ff
  9912: 95 88 09 04              a1 = a1 + 0x409
  9916: 7b 68 28                 u64 [s1 + 0x28] = a1
  9919: 82 18 20                 a1 = u64 [sp + 0x20]
  9922: 7b 68 20                 u64 [s1 + 0x20] = a1
  9925: 7b 68 30                 u64 [s1 + 0x30] = a1
  9928: 33 08 28 09 01           a1 = 0x10928
  9933: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
  9937: 49 21 a8 01 03           u64 [sp + 424] = 0x3
  9942: 49 21 c0 01              u64 [sp + 448] = 0
  9946: 95 18 ff 07              a1 = sp + 0x7ff
  9950: 95 88 b9 03              a1 = a1 + 0x3b9
  9954: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  9958: 49 21 b8 01 02           u64 [sp + 440] = 0x2
  9963: 7b 67 68                 u64 [s1 + 0x68] = a0
  9966: 8e 77                    a0 = a0 >u 0
  9968: 97 77 01                 a0 = a0 << 0x1
  9971: 7b 17 20                 u64 [sp + 0x20] = a0
  9974: 95 17 ff 07              a0 = sp + 0x7ff
  9978: 95 77 e9 03              a0 = a0 + 0x3e9
  9982: 95 18 a0 01              a1 = sp + 0x1a0
  9986: 50 20 f8 00 86 14        ra = 248, jump @791
      :                          @503 [@dyn 124]
  9992: 82 65 50                 s0 = u64 [s1 + 0x50]
  9995: 82 6b 58                 a4 = u64 [s1 + 0x58]
  9998: 82 66 48                 s1 = u64 [s1 + 0x48]
 10001: 82 17 20                 a0 = u64 [sp + 0x20]
 10004: 33 08                    a1 = 0
 10006: 33 09                    a2 = 0
 10008: 64 5a                    a3 = s0
 10010: 33 00 fa 00              ra = 0xfa
 10014: 0a 64                    ecalli 100 // 'log'
 10016: 01                       fallthrough
      :                          @504 [@dyn 125]
 10017: 82 17 38                 a0 = u64 [sp + 0x38]
 10020: c8 67 07                 a0 = a0 + s1
 10023: 53 37 00 00 f0 25        jump @510 if a0 <u 4293918720
      :                          @505
 10029: 33 07 50 00 03           a0 = 0x30050
 10034: 95 77 00 00 10           a0 = a0 + 0x100000
 10039: 01                       fallthrough
      :                          @506
 10040: 82 78                    a1 = u64 [a0]
 10042: c9 87 09                 a2 = a0 - a1
 10045: ab 59 0f                 jump @510 if a2 != s0
      :                          @507
 10048: c9 68 09                 a2 = a1 - s1
 10051: 01                       fallthrough
      :                          @508
 10052: 82 7a                    a3 = u64 [a0]
 10054: ab 8a f2                 jump @506 if a3 != a1
      :                          @509
 10057: 7b 79                    u64 [a0] = a2
 10059: 01                       fallthrough
      :                          @510
 10060: 95 15 ff 07              s0 = sp + 0x7ff
 10064: 95 55 a1 03              s0 = s0 + 0x3a1
 10068: 82 57 68                 a0 = u64 [s0 + 0x68]
 10071: 33 08 02                 a1 = 0x2
 10074: 33 06 02                 s1 = 0x2
 10077: 50 20 fc 00 9f 21        ra = 252, jump @1068
      :                          @511 [@dyn 126]
 10083: 95 18 58                 a1 = sp + 0x58
 10086: 82 17 30                 a0 = u64 [sp + 0x30]
 10089: 0a 0c                    ecalli 12 // 'eject'
 10091: 7b 57 70                 u64 [s0 + 0x70] = a0
 10094: 95 77 04                 a0 = a0 + 0x4
 10097: 88 77 01                 a0 = a0 <u 0x1
 10100: 97 77 01                 a0 = a0 << 0x1
 10103: 7b 17 10                 u64 [sp + 0x10] = a0
 10106: 95 17 48                 a0 = sp + 0x48
 10109: 7b 57 18                 u64 [s0 + 0x18] = a0
 10112: 33 08 16                 a1 = 0x16
 10115: 7b 58 20                 u64 [s0 + 0x20] = a1
 10118: 95 17 ff 07              a0 = sp + 0x7ff
 10122: 95 77 11 04              a0 = a0 + 0x411
 10126: 7b 57 28                 u64 [s0 + 0x28] = a0
 10129: 7b 18 20                 u64 [sp + 0x20] = a1
 10132: 7b 58 30                 u64 [s0 + 0x30] = a1
 10135: 33 07 00 0b 01           a0 = 0x10b00
 10140: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10144: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10149: 49 21 c0 01              u64 [sp + 448] = 0
 10153: 95 17 ff 07              a0 = sp + 0x7ff
 10157: 95 77 b9 03              a0 = a0 + 0x3b9
 10161: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10165: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 10169: 95 17 ff 07              a0 = sp + 0x7ff
 10173: 95 77 e9 03              a0 = a0 + 0x3e9
 10177: 95 18 a0 01              a1 = sp + 0x1a0
 10181: 50 20 fe 00 c3 13        ra = 254, jump @791
      :                          @512 [@dyn 127]
 10187: 82 56 50                 s1 = u64 [s0 + 0x50]
 10190: 82 5b 58                 a4 = u64 [s0 + 0x58]
 10193: 82 55 48                 s0 = u64 [s0 + 0x48]
 10196: 82 17 10                 a0 = u64 [sp + 0x10]
 10199: 33 08                    a1 = 0
 10201: 33 09                    a2 = 0
 10203: 64 6a                    a3 = s1
 10205: 33 00 00 01              ra = 0x100
 10209: 0a 64                    ecalli 100 // 'log'
 10211: 01                       fallthrough
      :                          @513 [@dyn 128]
 10212: 82 17 38                 a0 = u64 [sp + 0x38]
 10215: c8 57 07                 a0 = a0 + s0
 10218: 53 37 00 00 f0 25        jump @519 if a0 <u 4293918720
      :                          @514
 10224: 33 07 50 00 03           a0 = 0x30050
 10229: 95 77 00 00 10           a0 = a0 + 0x100000
 10234: 01                       fallthrough
      :                          @515
 10235: 82 78                    a1 = u64 [a0]
 10237: c9 87 09                 a2 = a0 - a1
 10240: ab 69 0f                 jump @519 if a2 != s1
      :                          @516
 10243: c9 58 09                 a2 = a1 - s0
 10246: 01                       fallthrough
      :                          @517
 10247: 82 7a                    a3 = u64 [a0]
 10249: ab 8a f2                 jump @515 if a3 != a1
      :                          @518
 10252: 7b 79                    u64 [a0] = a2
 10254: 01                       fallthrough
      :                          @519
 10255: 95 16 ff 07              s1 = sp + 0x7ff
 10259: 95 66 a1 03              s1 = s1 + 0x3a1
 10263: 82 67 70                 a0 = u64 [s1 + 0x70]
 10266: 33 08 05                 a1 = 0x5
 10269: 50 20 02 01 df 20        ra = 258, jump @1068
      :                          @520 [@dyn 129]
 10275: 14 07 ff ff ff ff ff ff 00 00 a0 = 0xffffffffffff
 10285: 95 1a 58                 a3 = sp + 0x58
 10288: 33 08                    a1 = 0
 10290: 33 09                    a2 = 0
 10292: 33 0b                    a4 = 0
 10294: 0a 05                    ecalli 5 // 'bless'
 10296: 95 18 48                 a1 = sp + 0x48
 10299: 7b 68 18                 u64 [s1 + 0x18] = a1
 10302: 95 18 ff 07              a1 = sp + 0x7ff
 10306: 95 88 19 04              a1 = a1 + 0x419
 10310: 7b 68 28                 u64 [s1 + 0x28] = a1
 10313: 82 18 20                 a1 = u64 [sp + 0x20]
 10316: 7b 68 20                 u64 [s1 + 0x20] = a1
 10319: 7b 68 30                 u64 [s1 + 0x30] = a1
 10322: 33 08 30 0b 01           a1 = 0x10b30
 10327: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10331: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 10336: 49 21 c0 01              u64 [sp + 448] = 0
 10340: 95 18 ff 07              a1 = sp + 0x7ff
 10344: 95 88 b9 03              a1 = a1 + 0x3b9
 10348: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10352: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10357: 7b 67 78                 u64 [s1 + 0x78] = a0
 10360: 95 77 04                 a0 = a0 + 0x4
 10363: 88 77 01                 a0 = a0 <u 0x1
 10366: 97 77 01                 a0 = a0 << 0x1
 10369: 7b 17 20                 u64 [sp + 0x20] = a0
 10372: 95 17 ff 07              a0 = sp + 0x7ff
 10376: 95 77 e9 03              a0 = a0 + 0x3e9
 10380: 95 18 a0 01              a1 = sp + 0x1a0
 10384: 50 20 04 01 f8 12        ra = 260, jump @791
      :                          @521 [@dyn 130]
 10390: 82 65 50                 s0 = u64 [s1 + 0x50]
 10393: 82 6b 58                 a4 = u64 [s1 + 0x58]
 10396: 82 66 48                 s1 = u64 [s1 + 0x48]
 10399: 82 17 20                 a0 = u64 [sp + 0x20]
 10402: 33 08                    a1 = 0
 10404: 33 09                    a2 = 0
 10406: 64 5a                    a3 = s0
 10408: 33 00 06 01              ra = 0x106
 10412: 0a 64                    ecalli 100 // 'log'
 10414: 01                       fallthrough
      :                          @522 [@dyn 131]
 10415: 82 17 38                 a0 = u64 [sp + 0x38]
 10418: c8 67 07                 a0 = a0 + s1
 10421: 53 37 00 00 f0 25        jump @528 if a0 <u 4293918720
      :                          @523
 10427: 33 07 50 00 03           a0 = 0x30050
 10432: 95 77 00 00 10           a0 = a0 + 0x100000
 10437: 01                       fallthrough
      :                          @524
 10438: 82 78                    a1 = u64 [a0]
 10440: c9 87 09                 a2 = a0 - a1
 10443: ab 59 0f                 jump @528 if a2 != s0
      :                          @525
 10446: c9 68 09                 a2 = a1 - s1
 10449: 01                       fallthrough
      :                          @526
 10450: 82 7a                    a3 = u64 [a0]
 10452: ab 8a f2                 jump @524 if a3 != a1
      :                          @527
 10455: 7b 79                    u64 [a0] = a2
 10457: 01                       fallthrough
      :                          @528
 10458: 95 16 ff 07              s1 = sp + 0x7ff
 10462: 95 66 a1 03              s1 = s1 + 0x3a1
 10466: 82 67 78                 a0 = u64 [s1 + 0x78]
 10469: 33 08 06                 a1 = 0x6
 10472: 50 20 08 01 14 20        ra = 264, jump @1068
      :                          @529 [@dyn 132]
 10478: 95 18 58                 a1 = sp + 0x58
 10481: 33 09 03                 a2 = 0x3
 10484: 82 17 30                 a0 = u64 [sp + 0x30]
 10487: 0a 1b                    ecalli 27 // 'provide'
 10489: 7b 67 80 00              u64 [s1 + 0x80] = a0
 10493: 88 77 01                 a0 = a0 <u 0x1
 10496: 97 77 01                 a0 = a0 << 0x1
 10499: 7b 17 10                 u64 [sp + 0x10] = a0
 10502: 95 17 ff 07              a0 = sp + 0x7ff
 10506: 95 77 21 04              a0 = a0 + 0x421
 10510: 7b 67 48                 u64 [s1 + 0x48] = a0
 10513: 33 07 16                 a0 = 0x16
 10516: 7b 17 20                 u64 [sp + 0x20] = a0
 10519: 7b 67 50                 u64 [s1 + 0x50] = a0
 10522: 33 07 60 0b 01           a0 = 0x10b60
 10527: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10531: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10536: 49 21 c0 01              u64 [sp + 448] = 0
 10540: 95 17 ff 07              a0 = sp + 0x7ff
 10544: 95 77 e9 03              a0 = a0 + 0x3e9
 10548: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10552: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10557: 95 17 ff 07              a0 = sp + 0x7ff
 10561: 95 77 b9 03              a0 = a0 + 0x3b9
 10565: 95 18 a0 01              a1 = sp + 0x1a0
 10569: 50 20 0a 01 3f 12        ra = 266, jump @791
      :                          @530 [@dyn 133]
 10575: 82 65 20                 s0 = u64 [s1 + 0x20]
 10578: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10581: 82 66 18                 s1 = u64 [s1 + 0x18]
 10584: 82 17 10                 a0 = u64 [sp + 0x10]
 10587: 33 08                    a1 = 0
 10589: 33 09                    a2 = 0
 10591: 64 5a                    a3 = s0
 10593: 33 00 0c 01              ra = 0x10c
 10597: 0a 64                    ecalli 100 // 'log'
 10599: 01                       fallthrough
      :                          @531 [@dyn 134]
 10600: 82 17 38                 a0 = u64 [sp + 0x38]
 10603: c8 67 07                 a0 = a0 + s1
 10606: 53 37 00 00 f0 25        jump @537 if a0 <u 4293918720
      :                          @532
 10612: 33 07 50 00 03           a0 = 0x30050
 10617: 95 77 00 00 10           a0 = a0 + 0x100000
 10622: 01                       fallthrough
      :                          @533
 10623: 82 78                    a1 = u64 [a0]
 10625: c9 87 09                 a2 = a0 - a1
 10628: ab 59 0f                 jump @537 if a2 != s0
      :                          @534
 10631: c9 68 09                 a2 = a1 - s1
 10634: 01                       fallthrough
      :                          @535
 10635: 82 7a                    a3 = u64 [a0]
 10637: ab 8a f2                 jump @533 if a3 != a1
      :                          @536
 10640: 7b 79                    u64 [a0] = a2
 10642: 01                       fallthrough
      :                          @537
 10643: 95 16 ff 07              s1 = sp + 0x7ff
 10647: 95 66 a1 03              s1 = s1 + 0x3a1
 10651: 82 67 80 00              a0 = u64 [s1 + 0x80]
 10655: 33 08 07                 a1 = 0x7
 10658: 50 20 0e 01 5a 1f        ra = 270, jump @1068
      :                          @538 [@dyn 135]
 10664: 95 18 58                 a1 = sp + 0x58
 10667: 33 09 03                 a2 = 0x3
 10670: 82 17 30                 a0 = u64 [sp + 0x30]
 10673: 0a 1b                    ecalli 27 // 'provide'
 10675: 82 18 20                 a1 = u64 [sp + 0x20]
 10678: 7b 68 50                 u64 [s1 + 0x50] = a1
 10681: 33 08 a8 0b 01           a1 = 0x10ba8
 10686: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 10690: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 10695: 49 21 c0 01              u64 [sp + 448] = 0
 10699: 95 18 ff 07              a1 = sp + 0x7ff
 10703: 95 88 e9 03              a1 = a1 + 0x3e9
 10707: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 10711: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 10716: 7b 67                    u64 [s1] = a0
 10718: 95 77 09                 a0 = a0 + 0x9
 10721: 88 77 01                 a0 = a0 <u 0x1
 10724: 97 77 01                 a0 = a0 << 0x1
 10727: 7b 17 20                 u64 [sp + 0x20] = a0
 10730: 7b 66 48                 u64 [s1 + 0x48] = s1
 10733: 95 17 ff 07              a0 = sp + 0x7ff
 10737: 95 77 b9 03              a0 = a0 + 0x3b9
 10741: 95 18 a0 01              a1 = sp + 0x1a0
 10745: 50 20 10 01 8f 11        ra = 272, jump @791
      :                          @539 [@dyn 136]
 10751: 82 65 20                 s0 = u64 [s1 + 0x20]
 10754: 82 6b 28                 a4 = u64 [s1 + 0x28]
 10757: 82 66 18                 s1 = u64 [s1 + 0x18]
 10760: 82 17 20                 a0 = u64 [sp + 0x20]
 10763: 33 08                    a1 = 0
 10765: 33 09                    a2 = 0
 10767: 64 5a                    a3 = s0
 10769: 33 00 12 01              ra = 0x112
 10773: 0a 64                    ecalli 100 // 'log'
 10775: 01                       fallthrough
      :                          @540 [@dyn 137]
 10776: 82 17 38                 a0 = u64 [sp + 0x38]
 10779: c8 67 07                 a0 = a0 + s1
 10782: 53 37 00 00 f0 25        jump @546 if a0 <u 4293918720
      :                          @541
 10788: 33 07 50 00 03           a0 = 0x30050
 10793: 95 77 00 00 10           a0 = a0 + 0x100000
 10798: 01                       fallthrough
      :                          @542
 10799: 82 78                    a1 = u64 [a0]
 10801: c9 87 09                 a2 = a0 - a1
 10804: ab 59 0f                 jump @546 if a2 != s0
      :                          @543
 10807: c9 68 09                 a2 = a1 - s1
 10810: 01                       fallthrough
      :                          @544
 10811: 82 7a                    a3 = u64 [a0]
 10813: ab 8a f2                 jump @542 if a3 != a1
      :                          @545
 10816: 7b 79                    u64 [a0] = a2
 10818: 01                       fallthrough
      :                          @546
 10819: 95 16 ff 07              s1 = sp + 0x7ff
 10823: 95 66 a1 03              s1 = s1 + 0x3a1
 10827: 82 67                    a0 = u64 [s1]
 10829: 33 08 08                 a1 = 0x8
 10832: 33 00 72 01              ra = 0x172
 10836: 28 a8 1e                 jump @1068
      :                          @547 [@dyn 138]
 10839: 33 05 03                 s0 = 0x3
 10842: 95 17 58                 a0 = sp + 0x58
 10845: 33 08 03                 a1 = 0x3
 10848: 0a 0e                    ecalli 14 // 'solicit'
 10850: 7b 67 70                 u64 [s1 + 0x70] = a0
 10853: 33 08 01                 a1 = 0x1
 10856: 50 20 16 01 94 1e        ra = 278, jump @1068
      :                          @548 [@dyn 139]
 10862: 82 67 70                 a0 = u64 [s1 + 0x70]
 10865: 88 77 01                 a0 = a0 <u 0x1
 10868: 97 77 01                 a0 = a0 << 0x1
 10871: 7b 17 10                 u64 [sp + 0x10] = a0
 10874: 95 17 48                 a0 = sp + 0x48
 10877: 7b 67 18                 u64 [s1 + 0x18] = a0
 10880: 33 08 16                 a1 = 0x16
 10883: 7b 68 20                 u64 [s1 + 0x20] = a1
 10886: 95 17 ff 07              a0 = sp + 0x7ff
 10890: 95 77 11 04              a0 = a0 + 0x411
 10894: 7b 67 28                 u64 [s1 + 0x28] = a0
 10897: 7b 18 20                 u64 [sp + 0x20] = a1
 10900: 7b 68 30                 u64 [s1 + 0x30] = a1
 10903: 33 07 f0 07 01           a0 = 0x107f0
 10908: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 10912: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 10916: 49 21 c0 01              u64 [sp + 448] = 0
 10920: 95 17 ff 07              a0 = sp + 0x7ff
 10924: 95 77 b9 03              a0 = a0 + 0x3b9
 10928: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 10932: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 10937: 95 17 ff 07              a0 = sp + 0x7ff
 10941: 95 77 e9 03              a0 = a0 + 0x3e9
 10945: 95 18 a0 01              a1 = sp + 0x1a0
 10949: 50 20 18 01 c3 10        ra = 280, jump @791
      :                          @549 [@dyn 140]
 10955: 95 17 ff 07              a0 = sp + 0x7ff
 10959: 95 77 a1 03              a0 = a0 + 0x3a1
 10963: 82 76 50                 s1 = u64 [a0 + 0x50]
 10966: 82 7b 58                 a4 = u64 [a0 + 0x58]
 10969: 82 75 48                 s0 = u64 [a0 + 0x48]
 10972: 82 17 10                 a0 = u64 [sp + 0x10]
 10975: 33 08                    a1 = 0
 10977: 33 09                    a2 = 0
 10979: 64 6a                    a3 = s1
 10981: 33 00 1a 01              ra = 0x11a
 10985: 0a 64                    ecalli 100 // 'log'
 10987: 01                       fallthrough
      :                          @550 [@dyn 141]
 10988: 82 17 38                 a0 = u64 [sp + 0x38]
 10991: c8 57 07                 a0 = a0 + s0
 10994: 53 37 00 00 f0 25        jump @556 if a0 <u 4293918720
      :                          @551
 11000: 33 07 50 00 03           a0 = 0x30050
 11005: 95 77 00 00 10           a0 = a0 + 0x100000
 11010: 01                       fallthrough
      :                          @552
 11011: 82 78                    a1 = u64 [a0]
 11013: c9 87 09                 a2 = a0 - a1
 11016: ab 69 0f                 jump @556 if a2 != s1
      :                          @553
 11019: c9 58 09                 a2 = a1 - s0
 11022: 01                       fallthrough
      :                          @554
 11023: 82 7a                    a3 = u64 [a0]
 11025: ab 8a f2                 jump @552 if a3 != a1
      :                          @555
 11028: 7b 79                    u64 [a0] = a2
 11030: 01                       fallthrough
      :                          @556
 11031: 95 17 58                 a0 = sp + 0x58
 11034: 33 08 03                 a1 = 0x3
 11037: 0a 0d                    ecalli 13 // 'query'
 11039: 95 19 ff 07              a2 = sp + 0x7ff
 11043: 95 99 a1 03              a2 = a2 + 0x3a1
 11047: 95 18 48                 a1 = sp + 0x48
 11050: 7b 98 18                 u64 [a2 + 0x18] = a1
 11053: 95 18 ff 07              a1 = sp + 0x7ff
 11057: 95 88 19 04              a1 = a1 + 0x419
 11061: 7b 98 28                 u64 [a2 + 0x28] = a1
 11064: 82 18 20                 a1 = u64 [sp + 0x20]
 11067: 7b 98 20                 u64 [a2 + 0x20] = a1
 11070: 7b 98 30                 u64 [a2 + 0x30] = a1
 11073: 95 19 ff 07              a2 = sp + 0x7ff
 11077: 95 99 a1 03              a2 = a2 + 0x3a1
 11081: 33 08 e0 0b 01           a1 = 0x10be0
 11086: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11090: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11095: 49 21 c0 01              u64 [sp + 448] = 0
 11099: 95 18 ff 07              a1 = sp + 0x7ff
 11103: 95 88 b9 03              a1 = a1 + 0x3b9
 11107: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11111: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11116: 7b 97 78                 u64 [a2 + 0x78] = a0
 11119: 8e 77                    a0 = a0 >u 0
 11121: 97 77 01                 a0 = a0 << 0x1
 11124: 7b 17 20                 u64 [sp + 0x20] = a0
 11127: 95 17 ff 07              a0 = sp + 0x7ff
 11131: 95 77 e9 03              a0 = a0 + 0x3e9
 11135: 95 18 a0 01              a1 = sp + 0x1a0
 11139: 95 15 a0 01              s0 = sp + 0x1a0
 11143: 50 20 1c 01 01 10        ra = 284, jump @791
      :                          @557 [@dyn 142]
 11149: 95 17 ff 07              a0 = sp + 0x7ff
 11153: 95 77 a1 03              a0 = a0 + 0x3a1
 11157: 82 76 50                 s1 = u64 [a0 + 0x50]
 11160: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11163: 82 77 48                 a0 = u64 [a0 + 0x48]
 11166: 7b 17 10                 u64 [sp + 0x10] = a0
 11169: 82 17 20                 a0 = u64 [sp + 0x20]
 11172: 33 08                    a1 = 0
 11174: 33 09                    a2 = 0
 11176: 64 6a                    a3 = s1
 11178: 33 00 1e 01              ra = 0x11e
 11182: 0a 64                    ecalli 100 // 'log'
 11184: 01                       fallthrough
      :                          @558 [@dyn 143]
 11185: 82 1c 10                 a5 = u64 [sp + 0x10]
 11188: 82 17 38                 a0 = u64 [sp + 0x38]
 11191: c8 c7 07                 a0 = a0 + a5
 11194: 53 37 00 00 f0 25        jump @564 if a0 <u 4293918720
      :                          @559
 11200: 33 07 50 00 03           a0 = 0x30050
 11205: 95 77 00 00 10           a0 = a0 + 0x100000
 11210: 01                       fallthrough
      :                          @560
 11211: 82 78                    a1 = u64 [a0]
 11213: c9 87 09                 a2 = a0 - a1
 11216: ab 69 0f                 jump @564 if a2 != s1
      :                          @561
 11219: c9 c8 09                 a2 = a1 - a5
 11222: 01                       fallthrough
      :                          @562
 11223: 82 7a                    a3 = u64 [a0]
 11225: ab 8a f2                 jump @560 if a3 != a1
      :                          @563
 11228: 7b 79                    u64 [a0] = a2
 11230: 01                       fallthrough
      :                          @564
 11231: 95 17 ff 07              a0 = sp + 0x7ff
 11235: 95 77 a1 03              a0 = a0 + 0x3a1
 11239: 82 77 78                 a0 = u64 [a0 + 0x78]
 11242: 33 08 02                 a1 = 0x2
 11245: 50 20 20 01 0f 1d        ra = 288, jump @1068
      :                          @565 [@dyn 144]
 11251: 33 09 00 0a              a2 = 0xa00
 11255: 95 17 a0 01              a0 = sp + 0x1a0
 11259: 33 08                    a1 = 0
 11261: 50 20 22 01 b8 12        ra = 290, jump @858
      :                          @566 [@dyn 145]
 11267: 33 06 50                 s1 = 0x50
 11270: 01                       fallthrough
      :                          @567
 11271: 95 18 58                 a1 = sp + 0x58
 11274: 33 09 20                 a2 = 0x20
 11277: 64 57                    a0 = s0
 11279: 50 20 24 01 f4 11        ra = 292, jump @840
      :                          @568 [@dyn 146]
 11285: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 11288: 95 55 20                 s0 = s0 + 0x20
 11291: 52 06 ec                 jump @567 if s1 != 0
      :                          @569
 11294: 95 18 a0 01              a1 = sp + 0x1a0
 11298: 33 07                    a0 = 0
 11300: 0a 06                    ecalli 6 // 'assign'
 11302: 95 15 ff 07              s0 = sp + 0x7ff
 11306: 95 55 a1 03              s0 = s0 + 0x3a1
 11310: 7b 57 80 00              u64 [s0 + 0x80] = a0
 11314: 88 77 01                 a0 = a0 <u 0x1
 11317: 97 77 01                 a0 = a0 << 0x1
 11320: 7b 17 20                 u64 [sp + 0x20] = a0
 11323: 95 17 48                 a0 = sp + 0x48
 11326: 7b 57 48                 u64 [s0 + 0x48] = a0
 11329: 33 07 16                 a0 = 0x16
 11332: 7b 57 50                 u64 [s0 + 0x50] = a0
 11335: 95 18 ff 07              a1 = sp + 0x7ff
 11339: 95 88 21 04              a1 = a1 + 0x421
 11343: 7b 58 58                 u64 [s0 + 0x58] = a1
 11346: 7b 57 60                 u64 [s0 + 0x60] = a0
 11349: 33 07 20 0c 01           a0 = 0x10c20
 11354: 7b 57 18                 u64 [s0 + 0x18] = a0
 11357: 49 15 20 03              u64 [s0 + 32] = 0x3
 11361: 49 15 38                 u64 [s0 + 56] = 0
 11364: 95 17 ff 07              a0 = sp + 0x7ff
 11368: 95 77 e9 03              a0 = a0 + 0x3e9
 11372: 7b 57 28                 u64 [s0 + 0x28] = a0
 11375: 49 15 30 02              u64 [s0 + 48] = 0x2
 11379: 95 17 ff 07              a0 = sp + 0x7ff
 11383: 95 77 a1 03              a0 = a0 + 0x3a1
 11387: 95 18 ff 07              a1 = sp + 0x7ff
 11391: 95 88 b9 03              a1 = a1 + 0x3b9
 11395: 50 20 26 01 05 0f        ra = 294, jump @791
      :                          @570 [@dyn 147]
 11401: 82 56 08                 s1 = u64 [s0 + 0x8]
 11404: 82 5b 10                 a4 = u64 [s0 + 0x10]
 11407: 82 55                    s0 = u64 [s0]
 11409: 82 17 20                 a0 = u64 [sp + 0x20]
 11412: 33 08                    a1 = 0
 11414: 33 09                    a2 = 0
 11416: 64 6a                    a3 = s1
 11418: 33 00 28 01              ra = 0x128
 11422: 0a 64                    ecalli 100 // 'log'
 11424: 01                       fallthrough
      :                          @571 [@dyn 148]
 11425: 82 17 38                 a0 = u64 [sp + 0x38]
 11428: c8 57 07                 a0 = a0 + s0
 11431: 53 37 00 00 f0 79 05     jump @642 if a0 <u 4293918720
      :                          @572
 11438: 33 07 50 00 03           a0 = 0x30050
 11443: 95 77 00 00 10           a0 = a0 + 0x100000
 11448: 01                       fallthrough
      :                          @573
 11449: 82 78                    a1 = u64 [a0]
 11451: c9 87 09                 a2 = a0 - a1
 11454: ab 69 62 05              jump @642 if a2 != s1
      :                          @574
 11458: c9 58 09                 a2 = a1 - s0
 11461: 01                       fallthrough
      :                          @575
 11462: 82 7a                    a3 = u64 [a0]
 11464: ab 8a f1                 jump @573 if a3 != a1
      :                          @576
 11467: 7b 79                    u64 [a0] = a2
 11469: 33 0b                    a4 = 0
 11471: 01                       fallthrough
      :                          @577
 11472: ab 8a e9                 jump @573 if a3 != a1
      :                          @578
 11475: 28 4d 05                 jump @642
      :                          @579 [@dyn 149]
 11478: 33 05 03                 s0 = 0x3
 11481: 95 18 58                 a1 = sp + 0x58
 11484: 95 19 98 00              a2 = sp + 0x98
 11488: 33 0b 03                 a4 = 0x3
 11491: 82 17 30                 a0 = u64 [sp + 0x30]
 11494: 33 0a                    a3 = 0
 11496: 0a 01                    ecalli 1 // 'lookup'
 11498: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11502: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 11505: 88 77 01                 a0 = a0 <u 0x1
 11508: 97 77 01                 a0 = a0 << 0x1
 11511: 7b 17 10                 u64 [sp + 0x10] = a0
 11514: 95 17 48                 a0 = sp + 0x48
 11517: 7b 67 18                 u64 [s1 + 0x18] = a0
 11520: 33 08 16                 a1 = 0x16
 11523: 7b 68 20                 u64 [s1 + 0x20] = a1
 11526: 95 17 ff 07              a0 = sp + 0x7ff
 11530: 95 77 21 04              a0 = a0 + 0x421
 11534: 7b 67 28                 u64 [s1 + 0x28] = a0
 11537: 7b 18 20                 u64 [sp + 0x20] = a1
 11540: 7b 68 30                 u64 [s1 + 0x30] = a1
 11543: 33 07 68 0c 01           a0 = 0x10c68
 11548: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11552: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11556: 49 21 c0 01              u64 [sp + 448] = 0
 11560: 95 17 ff 07              a0 = sp + 0x7ff
 11564: 95 77 b9 03              a0 = a0 + 0x3b9
 11568: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11572: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11577: 95 17 ff 07              a0 = sp + 0x7ff
 11581: 95 77 e9 03              a0 = a0 + 0x3e9
 11585: 95 18 a0 01              a1 = sp + 0x1a0
 11589: 50 20 2c 01 43 0e        ra = 300, jump @791
      :                          @580 [@dyn 150]
 11595: 95 17 ff 07              a0 = sp + 0x7ff
 11599: 95 77 a1 03              a0 = a0 + 0x3a1
 11603: 82 76 50                 s1 = u64 [a0 + 0x50]
 11606: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11609: 82 75 48                 s0 = u64 [a0 + 0x48]
 11612: 82 17 10                 a0 = u64 [sp + 0x10]
 11615: 33 08                    a1 = 0
 11617: 33 09                    a2 = 0
 11619: 64 6a                    a3 = s1
 11621: 33 00 2e 01              ra = 0x12e
 11625: 0a 64                    ecalli 100 // 'log'
 11627: 01                       fallthrough
      :                          @581 [@dyn 151]
 11628: 82 17 38                 a0 = u64 [sp + 0x38]
 11631: c8 57 07                 a0 = a0 + s0
 11634: 53 37 00 00 f0 25        jump @587 if a0 <u 4293918720
      :                          @582
 11640: 33 07 50 00 03           a0 = 0x30050
 11645: 95 77 00 00 10           a0 = a0 + 0x100000
 11650: 01                       fallthrough
      :                          @583
 11651: 82 78                    a1 = u64 [a0]
 11653: c9 87 09                 a2 = a0 - a1
 11656: ab 69 0f                 jump @587 if a2 != s1
      :                          @584
 11659: c9 58 09                 a2 = a1 - s0
 11662: 01                       fallthrough
      :                          @585
 11663: 82 7a                    a3 = u64 [a0]
 11665: ab 8a f2                 jump @583 if a3 != a1
      :                          @586
 11668: 7b 79                    u64 [a0] = a2
 11670: 01                       fallthrough
      :                          @587
 11671: 95 16 ff 07              s1 = sp + 0x7ff
 11675: 95 66 a1 03              s1 = s1 + 0x3a1
 11679: 82 67 80 00              a0 = u64 [s1 + 0x80]
 11683: 33 08 01                 a1 = 0x1
 11686: 50 20 30 01 56 1b        ra = 304, jump @1068
      :                          @588 [@dyn 152]
 11692: 95 17 58                 a0 = sp + 0x58
 11695: 33 08 03                 a1 = 0x3
 11698: 0a 0d                    ecalli 13 // 'query'
 11700: 95 18 48                 a1 = sp + 0x48
 11703: 7b 68 18                 u64 [s1 + 0x18] = a1
 11706: 82 18 20                 a1 = u64 [sp + 0x20]
 11709: 7b 68 20                 u64 [s1 + 0x20] = a1
 11712: 7b 68 30                 u64 [s1 + 0x30] = a1
 11715: 33 08 28 09 01           a1 = 0x10928
 11720: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 11724: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 11729: 49 21 c0 01              u64 [sp + 448] = 0
 11733: 95 18 ff 07              a1 = sp + 0x7ff
 11737: 95 88 b9 03              a1 = a1 + 0x3b9
 11741: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 11745: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11750: 7b 67                    u64 [s1] = a0
 11752: 8e 77                    a0 = a0 >u 0
 11754: 97 77 01                 a0 = a0 << 0x1
 11757: 7b 17 20                 u64 [sp + 0x20] = a0
 11760: 7b 66 28                 u64 [s1 + 0x28] = s1
 11763: 95 17 ff 07              a0 = sp + 0x7ff
 11767: 95 77 e9 03              a0 = a0 + 0x3e9
 11771: 95 18 a0 01              a1 = sp + 0x1a0
 11775: 50 20 32 01 89 0d        ra = 306, jump @791
      :                          @589 [@dyn 153]
 11781: 82 65 50                 s0 = u64 [s1 + 0x50]
 11784: 82 6b 58                 a4 = u64 [s1 + 0x58]
 11787: 82 66 48                 s1 = u64 [s1 + 0x48]
 11790: 82 17 20                 a0 = u64 [sp + 0x20]
 11793: 33 08                    a1 = 0
 11795: 33 09                    a2 = 0
 11797: 64 5a                    a3 = s0
 11799: 33 00 34 01              ra = 0x134
 11803: 0a 64                    ecalli 100 // 'log'
 11805: 01                       fallthrough
      :                          @590 [@dyn 154]
 11806: 82 17 38                 a0 = u64 [sp + 0x38]
 11809: c8 67 07                 a0 = a0 + s1
 11812: 53 37 00 00 f0 96 01     jump @615 if a0 <u 4293918720
      :                          @591
 11819: 33 07 50 00 03           a0 = 0x30050
 11824: 95 77 00 00 10           a0 = a0 + 0x100000
 11829: 01                       fallthrough
      :                          @592
 11830: 82 78                    a1 = u64 [a0]
 11832: c9 87 09                 a2 = a0 - a1
 11835: ab 59 7f 01              jump @615 if a2 != s0
      :                          @593
 11839: c9 68 09                 a2 = a1 - s1
 11842: 01                       fallthrough
      :                          @594
 11843: 82 7a                    a3 = u64 [a0]
 11845: ab 8a f1                 jump @592 if a3 != a1
      :                          @595
 11848: 7b 79                    u64 [a0] = a2
 11850: 33 0b                    a4 = 0
 11852: 01                       fallthrough
      :                          @596
 11853: ab 8a e9                 jump @592 if a3 != a1
      :                          @597
 11856: 28 6a 01                 jump @615
      :                          @598 [@dyn 155]
 11859: 33 05 03                 s0 = 0x3
 11862: 95 17 58                 a0 = sp + 0x58
 11865: 33 08 03                 a1 = 0x3
 11868: 0a 0f                    ecalli 15 // 'forget'
 11870: 7b 67 80 00              u64 [s1 + 0x80] = a0
 11874: 88 77 01                 a0 = a0 <u 0x1
 11877: 97 77 01                 a0 = a0 << 0x1
 11880: 7b 17 10                 u64 [sp + 0x10] = a0
 11883: 95 17 48                 a0 = sp + 0x48
 11886: 7b 67 18                 u64 [s1 + 0x18] = a0
 11889: 33 08 16                 a1 = 0x16
 11892: 7b 68 20                 u64 [s1 + 0x20] = a1
 11895: 95 17 ff 07              a0 = sp + 0x7ff
 11899: 95 77 21 04              a0 = a0 + 0x421
 11903: 7b 67 28                 u64 [s1 + 0x28] = a0
 11906: 7b 18 20                 u64 [sp + 0x20] = a1
 11909: 7b 68 30                 u64 [s1 + 0x30] = a1
 11912: 33 07 e0 08 01           a0 = 0x108e0
 11917: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 11921: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 11925: 49 21 c0 01              u64 [sp + 448] = 0
 11929: 95 17 ff 07              a0 = sp + 0x7ff
 11933: 95 77 b9 03              a0 = a0 + 0x3b9
 11937: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 11941: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 11946: 95 17 ff 07              a0 = sp + 0x7ff
 11950: 95 77 e9 03              a0 = a0 + 0x3e9
 11954: 95 18 a0 01              a1 = sp + 0x1a0
 11958: 50 20 38 01 d2 0c        ra = 312, jump @791
      :                          @599 [@dyn 156]
 11964: 95 17 ff 07              a0 = sp + 0x7ff
 11968: 95 77 a1 03              a0 = a0 + 0x3a1
 11972: 82 76 50                 s1 = u64 [a0 + 0x50]
 11975: 82 7b 58                 a4 = u64 [a0 + 0x58]
 11978: 82 75 48                 s0 = u64 [a0 + 0x48]
 11981: 82 17 10                 a0 = u64 [sp + 0x10]
 11984: 33 08                    a1 = 0
 11986: 33 09                    a2 = 0
 11988: 64 6a                    a3 = s1
 11990: 33 00 3a 01              ra = 0x13a
 11994: 0a 64                    ecalli 100 // 'log'
 11996: 01                       fallthrough
      :                          @600 [@dyn 157]
 11997: 82 17 38                 a0 = u64 [sp + 0x38]
 12000: c8 57 07                 a0 = a0 + s0
 12003: 53 37 00 00 f0 25        jump @606 if a0 <u 4293918720
      :                          @601
 12009: 33 07 50 00 03           a0 = 0x30050
 12014: 95 77 00 00 10           a0 = a0 + 0x100000
 12019: 01                       fallthrough
      :                          @602
 12020: 82 78                    a1 = u64 [a0]
 12022: c9 87 09                 a2 = a0 - a1
 12025: ab 69 0f                 jump @606 if a2 != s1
      :                          @603
 12028: c9 58 09                 a2 = a1 - s0
 12031: 01                       fallthrough
      :                          @604
 12032: 82 7a                    a3 = u64 [a0]
 12034: ab 8a f2                 jump @602 if a3 != a1
      :                          @605
 12037: 7b 79                    u64 [a0] = a2
 12039: 01                       fallthrough
      :                          @606
 12040: 95 16 ff 07              s1 = sp + 0x7ff
 12044: 95 66 a1 03              s1 = s1 + 0x3a1
 12048: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12052: 33 08 01                 a1 = 0x1
 12055: 50 20 3c 01 e5 19        ra = 316, jump @1068
      :                          @607 [@dyn 158]
 12061: 95 17 58                 a0 = sp + 0x58
 12064: 33 08 03                 a1 = 0x3
 12067: 0a 0d                    ecalli 13 // 'query'
 12069: 95 18 48                 a1 = sp + 0x48
 12072: 7b 68 18                 u64 [s1 + 0x18] = a1
 12075: 82 18 20                 a1 = u64 [sp + 0x20]
 12078: 7b 68 20                 u64 [s1 + 0x20] = a1
 12081: 7b 68 30                 u64 [s1 + 0x30] = a1
 12084: 33 08 98 0c 01           a1 = 0x10c98
 12089: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12093: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12098: 49 21 c0 01              u64 [sp + 448] = 0
 12102: 95 18 ff 07              a1 = sp + 0x7ff
 12106: 95 88 b9 03              a1 = a1 + 0x3b9
 12110: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12114: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12119: 7b 67                    u64 [s1] = a0
 12121: 8e 77                    a0 = a0 >u 0
 12123: 97 77 01                 a0 = a0 << 0x1
 12126: 7b 17 20                 u64 [sp + 0x20] = a0
 12129: 7b 66 28                 u64 [s1 + 0x28] = s1
 12132: 95 17 ff 07              a0 = sp + 0x7ff
 12136: 95 77 e9 03              a0 = a0 + 0x3e9
 12140: 95 18 a0 01              a1 = sp + 0x1a0
 12144: 50 20 3e 01 18 0c        ra = 318, jump @791
      :                          @608 [@dyn 159]
 12150: 82 65 50                 s0 = u64 [s1 + 0x50]
 12153: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12156: 82 66 48                 s1 = u64 [s1 + 0x48]
 12159: 82 17 20                 a0 = u64 [sp + 0x20]
 12162: 33 08                    a1 = 0
 12164: 33 09                    a2 = 0
 12166: 64 5a                    a3 = s0
 12168: 33 00 40 01              ra = 0x140
 12172: 0a 64                    ecalli 100 // 'log'
 12174: 01                       fallthrough
      :                          @609 [@dyn 160]
 12175: 82 17 38                 a0 = u64 [sp + 0x38]
 12178: c8 67 07                 a0 = a0 + s1
 12181: 53 37 00 00 f0 25        jump @615 if a0 <u 4293918720
      :                          @610
 12187: 33 07 50 00 03           a0 = 0x30050
 12192: 95 77 00 00 10           a0 = a0 + 0x100000
 12197: 01                       fallthrough
      :                          @611
 12198: 82 78                    a1 = u64 [a0]
 12200: c9 87 09                 a2 = a0 - a1
 12203: ab 59 0f                 jump @615 if a2 != s0
      :                          @612
 12206: c9 68 09                 a2 = a1 - s1
 12209: 01                       fallthrough
      :                          @613
 12210: 82 7a                    a3 = u64 [a0]
 12212: ab 8a f2                 jump @611 if a3 != a1
      :                          @614
 12215: 7b 79                    u64 [a0] = a2
 12217: 01                       fallthrough
      :                          @615
 12218: 95 16 ff 07              s1 = sp + 0x7ff
 12222: 95 66 a1 03              s1 = s1 + 0x3a1
 12226: 82 67                    a0 = u64 [s1]
 12228: 33 08 02                 a1 = 0x2
 12231: 33 00 72 01              ra = 0x172
 12235: 28 31 19                 jump @1068
      :                          @616 [@dyn 161]
 12238: 33 05 03                 s0 = 0x3
 12241: 95 17 58                 a0 = sp + 0x58
 12244: 33 08 03                 a1 = 0x3
 12247: 33 09 8f 03              a2 = 0x38f
 12251: 33 0a 8f 03              a3 = 0x38f
 12255: 0a 09                    ecalli 9 // 'new'
 12257: 8e 78                    a1 = a0 >u 0
 12259: 7b 67 70                 u64 [s1 + 0x70] = a0
 12262: 97 88 01                 a1 = a1 << 0x1
 12265: 7b 18 10                 u64 [sp + 0x10] = a1
 12268: 95 17 48                 a0 = sp + 0x48
 12271: 7b 67 18                 u64 [s1 + 0x18] = a0
 12274: 33 08 16                 a1 = 0x16
 12277: 7b 68 20                 u64 [s1 + 0x20] = a1
 12280: 95 17 ff 07              a0 = sp + 0x7ff
 12284: 95 77 11 04              a0 = a0 + 0x411
 12288: 7b 67 28                 u64 [s1 + 0x28] = a0
 12291: 7b 18 20                 u64 [sp + 0x20] = a1
 12294: 7b 68 30                 u64 [s1 + 0x30] = a1
 12297: 33 07 f0 0c 01           a0 = 0x10cf0
 12302: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12306: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12310: 49 21 c0 01              u64 [sp + 448] = 0
 12314: 95 17 ff 07              a0 = sp + 0x7ff
 12318: 95 77 b9 03              a0 = a0 + 0x3b9
 12322: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12326: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12331: 95 17 ff 07              a0 = sp + 0x7ff
 12335: 95 77 e9 03              a0 = a0 + 0x3e9
 12339: 95 18 a0 01              a1 = sp + 0x1a0
 12343: 50 20 44 01 51 0b        ra = 324, jump @791
      :                          @617 [@dyn 162]
 12349: 95 17 ff 07              a0 = sp + 0x7ff
 12353: 95 77 a1 03              a0 = a0 + 0x3a1
 12357: 82 76 50                 s1 = u64 [a0 + 0x50]
 12360: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12363: 82 75 48                 s0 = u64 [a0 + 0x48]
 12366: 82 17 10                 a0 = u64 [sp + 0x10]
 12369: 33 08                    a1 = 0
 12371: 33 09                    a2 = 0
 12373: 64 6a                    a3 = s1
 12375: 33 00 46 01              ra = 0x146
 12379: 0a 64                    ecalli 100 // 'log'
 12381: 01                       fallthrough
      :                          @618 [@dyn 163]
 12382: 82 17 38                 a0 = u64 [sp + 0x38]
 12385: c8 57 07                 a0 = a0 + s0
 12388: 53 37 00 00 f0 25        jump @624 if a0 <u 4293918720
      :                          @619
 12394: 33 07 50 00 03           a0 = 0x30050
 12399: 95 77 00 00 10           a0 = a0 + 0x100000
 12404: 01                       fallthrough
      :                          @620
 12405: 82 78                    a1 = u64 [a0]
 12407: c9 87 09                 a2 = a0 - a1
 12410: ab 69 0f                 jump @624 if a2 != s1
      :                          @621
 12413: c9 58 09                 a2 = a1 - s0
 12416: 01                       fallthrough
      :                          @622
 12417: 82 7a                    a3 = u64 [a0]
 12419: ab 8a f2                 jump @620 if a3 != a1
      :                          @623
 12422: 7b 79                    u64 [a0] = a2
 12424: 01                       fallthrough
      :                          @624
 12425: 95 16 ff 07              s1 = sp + 0x7ff
 12429: 95 66 a1 03              s1 = s1 + 0x3a1
 12433: 82 67 70                 a0 = u64 [s1 + 0x70]
 12436: 33 08 01                 a1 = 0x1
 12439: 50 20 48 01 65 18        ra = 328, jump @1068
      :                          @625 [@dyn 164]
 12445: 95 17 58                 a0 = sp + 0x58
 12448: 33 08 8f 03              a1 = 0x38f
 12452: 33 09 8f 03              a2 = 0x38f
 12456: 0a 0a                    ecalli 10 // 'upgrade'
 12458: 95 18 48                 a1 = sp + 0x48
 12461: 7b 68 18                 u64 [s1 + 0x18] = a1
 12464: 95 18 ff 07              a1 = sp + 0x7ff
 12468: 95 88 19 04              a1 = a1 + 0x419
 12472: 7b 68 28                 u64 [s1 + 0x28] = a1
 12475: 82 18 20                 a1 = u64 [sp + 0x20]
 12478: 7b 68 20                 u64 [s1 + 0x20] = a1
 12481: 7b 68 30                 u64 [s1 + 0x30] = a1
 12484: 33 08 30 0d 01           a1 = 0x10d30
 12489: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 12493: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12498: 49 21 c0 01              u64 [sp + 448] = 0
 12502: 95 18 ff 07              a1 = sp + 0x7ff
 12506: 95 88 b9 03              a1 = a1 + 0x3b9
 12510: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 12514: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12519: 7b 67 78                 u64 [s1 + 0x78] = a0
 12522: 88 77 01                 a0 = a0 <u 0x1
 12525: 97 77 01                 a0 = a0 << 0x1
 12528: 7b 17 20                 u64 [sp + 0x20] = a0
 12531: 95 17 ff 07              a0 = sp + 0x7ff
 12535: 95 77 e9 03              a0 = a0 + 0x3e9
 12539: 95 18 a0 01              a1 = sp + 0x1a0
 12543: 50 20 4a 01 89 0a        ra = 330, jump @791
      :                          @626 [@dyn 165]
 12549: 82 65 50                 s0 = u64 [s1 + 0x50]
 12552: 82 6b 58                 a4 = u64 [s1 + 0x58]
 12555: 82 66 48                 s1 = u64 [s1 + 0x48]
 12558: 82 17 20                 a0 = u64 [sp + 0x20]
 12561: 33 08                    a1 = 0
 12563: 33 09                    a2 = 0
 12565: 64 5a                    a3 = s0
 12567: 33 00 4c 01              ra = 0x14c
 12571: 0a 64                    ecalli 100 // 'log'
 12573: 01                       fallthrough
      :                          @627 [@dyn 166]
 12574: 82 17 38                 a0 = u64 [sp + 0x38]
 12577: c8 67 07                 a0 = a0 + s1
 12580: 53 37 00 00 f0 25        jump @633 if a0 <u 4293918720
      :                          @628
 12586: 33 07 50 00 03           a0 = 0x30050
 12591: 95 77 00 00 10           a0 = a0 + 0x100000
 12596: 01                       fallthrough
      :                          @629
 12597: 82 78                    a1 = u64 [a0]
 12599: c9 87 09                 a2 = a0 - a1
 12602: ab 59 0f                 jump @633 if a2 != s0
      :                          @630
 12605: c9 68 09                 a2 = a1 - s1
 12608: 01                       fallthrough
      :                          @631
 12609: 82 7a                    a3 = u64 [a0]
 12611: ab 8a f2                 jump @629 if a3 != a1
      :                          @632
 12614: 7b 79                    u64 [a0] = a2
 12616: 01                       fallthrough
      :                          @633
 12617: 95 15 ff 07              s0 = sp + 0x7ff
 12621: 95 55 a1 03              s0 = s0 + 0x3a1
 12625: 82 57 78                 a0 = u64 [s0 + 0x78]
 12628: 33 08 02                 a1 = 0x2
 12631: 33 06 02                 s1 = 0x2
 12634: 50 20 4e 01 a2 17        ra = 334, jump @1068
      :                          @634 [@dyn 167]
 12640: 48 05 8f 03              u32 [s0 + 0] = 0x38f
 12644: 48 15 08                 u32 [s0 + 8] = 0
 12647: 48 15 04 8f 03           u32 [s0 + 4] = 0x38f
 12652: 33 08 01                 a1 = 0x1
 12655: 33 09 01                 a2 = 0x1
 12658: 95 1a ff 07              a3 = sp + 0x7ff
 12662: 95 aa a1 03              a3 = a3 + 0x3a1
 12666: 33 0b 01                 a4 = 0x1
 12669: 33 07                    a0 = 0
 12671: 0a 05                    ecalli 5 // 'bless'
 12673: 7b 57 80 00              u64 [s0 + 0x80] = a0
 12677: 88 77 01                 a0 = a0 <u 0x1
 12680: 97 77 01                 a0 = a0 << 0x1
 12683: 7b 17 20                 u64 [sp + 0x20] = a0
 12686: 95 17 48                 a0 = sp + 0x48
 12689: 7b 57 18                 u64 [s0 + 0x18] = a0
 12692: 33 07 16                 a0 = 0x16
 12695: 7b 57 20                 u64 [s0 + 0x20] = a0
 12698: 95 18 ff 07              a1 = sp + 0x7ff
 12702: 95 88 21 04              a1 = a1 + 0x421
 12706: 7b 58 28                 u64 [s0 + 0x28] = a1
 12709: 7b 57 30                 u64 [s0 + 0x30] = a0
 12712: 33 07 70 0d 01           a0 = 0x10d70
 12717: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12721: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 12726: 49 21 c0 01              u64 [sp + 448] = 0
 12730: 95 17 ff 07              a0 = sp + 0x7ff
 12734: 95 77 b9 03              a0 = a0 + 0x3b9
 12738: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12742: 7b 16 b8 01              u64 [sp + 0x1b8] = s1
 12746: 95 17 ff 07              a0 = sp + 0x7ff
 12750: 95 77 e9 03              a0 = a0 + 0x3e9
 12754: 95 18 a0 01              a1 = sp + 0x1a0
 12758: 50 20 50 01 b2 09        ra = 336, jump @791
      :                          @635 [@dyn 168]
 12764: 82 56 50                 s1 = u64 [s0 + 0x50]
 12767: 82 5b 58                 a4 = u64 [s0 + 0x58]
 12770: 82 55 48                 s0 = u64 [s0 + 0x48]
 12773: 82 17 20                 a0 = u64 [sp + 0x20]
 12776: 33 08                    a1 = 0
 12778: 33 09                    a2 = 0
 12780: 64 6a                    a3 = s1
 12782: 33 00 52 01              ra = 0x152
 12786: 0a 64                    ecalli 100 // 'log'
 12788: 01                       fallthrough
      :                          @636 [@dyn 169]
 12789: 82 17 38                 a0 = u64 [sp + 0x38]
 12792: c8 57 07                 a0 = a0 + s0
 12795: 53 37 00 00 f0 25        jump @642 if a0 <u 4293918720
      :                          @637
 12801: 33 07 50 00 03           a0 = 0x30050
 12806: 95 77 00 00 10           a0 = a0 + 0x100000
 12811: 01                       fallthrough
      :                          @638
 12812: 82 78                    a1 = u64 [a0]
 12814: c9 87 09                 a2 = a0 - a1
 12817: ab 69 0f                 jump @642 if a2 != s1
      :                          @639
 12820: c9 58 09                 a2 = a1 - s0
 12823: 01                       fallthrough
      :                          @640
 12824: 82 7a                    a3 = u64 [a0]
 12826: ab 8a f2                 jump @638 if a3 != a1
      :                          @641
 12829: 7b 79                    u64 [a0] = a2
 12831: 01                       fallthrough
      :                          @642
 12832: 95 16 ff 07              s1 = sp + 0x7ff
 12836: 95 66 a1 03              s1 = s1 + 0x3a1
 12840: 82 67 80 00              a0 = u64 [s1 + 0x80]
 12844: 33 08 05                 a1 = 0x5
 12847: 33 00 72 01              ra = 0x172
 12851: 28 c9 16                 jump @1068
      :                          @643 [@dyn 170]
 12854: 33 05 03                 s0 = 0x3
 12857: 95 17 55                 a0 = sp + 0x55
 12860: 33 08 03                 a1 = 0x3
 12863: 33 09                    a2 = 0
 12865: 33 0a                    a3 = 0
 12867: 0a 03                    ecalli 3 // 'write'
 12869: 7b 67 68                 u64 [s1 + 0x68] = a0
 12872: 95 77 01                 a0 = a0 + 0x1
 12875: 88 77 01                 a0 = a0 <u 0x1
 12878: 97 77 01                 a0 = a0 << 0x1
 12881: 7b 17 10                 u64 [sp + 0x10] = a0
 12884: 95 17 48                 a0 = sp + 0x48
 12887: 7b 67 18                 u64 [s1 + 0x18] = a0
 12890: 33 08 16                 a1 = 0x16
 12893: 7b 68 20                 u64 [s1 + 0x20] = a1
 12896: 95 17 ff 07              a0 = sp + 0x7ff
 12900: 95 77 09 04              a0 = a0 + 0x409
 12904: 7b 67 28                 u64 [s1 + 0x28] = a0
 12907: 7b 18 20                 u64 [sp + 0x20] = a1
 12910: 7b 68 30                 u64 [s1 + 0x30] = a1
 12913: 33 07 b8 0d 01           a0 = 0x10db8
 12918: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 12922: 7b 15 a8 01              u64 [sp + 0x1a8] = s0
 12926: 49 21 c0 01              u64 [sp + 448] = 0
 12930: 95 17 ff 07              a0 = sp + 0x7ff
 12934: 95 77 b9 03              a0 = a0 + 0x3b9
 12938: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 12942: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 12947: 95 17 ff 07              a0 = sp + 0x7ff
 12951: 95 77 e9 03              a0 = a0 + 0x3e9
 12955: 95 18 a0 01              a1 = sp + 0x1a0
 12959: 50 20 56 01 e9 08        ra = 342, jump @791
      :                          @644 [@dyn 171]
 12965: 95 17 ff 07              a0 = sp + 0x7ff
 12969: 95 77 a1 03              a0 = a0 + 0x3a1
 12973: 82 76 50                 s1 = u64 [a0 + 0x50]
 12976: 82 7b 58                 a4 = u64 [a0 + 0x58]
 12979: 82 75 48                 s0 = u64 [a0 + 0x48]
 12982: 82 17 10                 a0 = u64 [sp + 0x10]
 12985: 33 08                    a1 = 0
 12987: 33 09                    a2 = 0
 12989: 64 6a                    a3 = s1
 12991: 33 00 58 01              ra = 0x158
 12995: 0a 64                    ecalli 100 // 'log'
 12997: 01                       fallthrough
      :                          @645 [@dyn 172]
 12998: 82 17 38                 a0 = u64 [sp + 0x38]
 13001: c8 57 07                 a0 = a0 + s0
 13004: 53 37 00 00 f0 25        jump @651 if a0 <u 4293918720
      :                          @646
 13010: 33 07 50 00 03           a0 = 0x30050
 13015: 95 77 00 00 10           a0 = a0 + 0x100000
 13020: 01                       fallthrough
      :                          @647
 13021: 82 78                    a1 = u64 [a0]
 13023: c9 87 09                 a2 = a0 - a1
 13026: ab 69 0f                 jump @651 if a2 != s1
      :                          @648
 13029: c9 58 09                 a2 = a1 - s0
 13032: 01                       fallthrough
      :                          @649
 13033: 82 7a                    a3 = u64 [a0]
 13035: ab 8a f2                 jump @647 if a3 != a1
      :                          @650
 13038: 7b 79                    u64 [a0] = a2
 13040: 01                       fallthrough
      :                          @651
 13041: 95 16 ff 07              s1 = sp + 0x7ff
 13045: 95 66 a1 03              s1 = s1 + 0x3a1
 13049: 82 67 68                 a0 = u64 [s1 + 0x68]
 13052: 33 08 01                 a1 = 0x1
 13055: 50 20 5a 01 fd 15        ra = 346, jump @1068
      :                          @652 [@dyn 173]
 13061: 95 17 55                 a0 = sp + 0x55
 13064: 33 08 03                 a1 = 0x3
 13067: 95 19 52                 a2 = sp + 0x52
 13070: 33 0a 03                 a3 = 0x3
 13073: 0a 03                    ecalli 3 // 'write'
 13075: 95 18 48                 a1 = sp + 0x48
 13078: 7b 68 18                 u64 [s1 + 0x18] = a1
 13081: 95 18 ff 07              a1 = sp + 0x7ff
 13085: 95 88 11 04              a1 = a1 + 0x411
 13089: 7b 68 28                 u64 [s1 + 0x28] = a1
 13092: 82 18 20                 a1 = u64 [sp + 0x20]
 13095: 7b 68 20                 u64 [s1 + 0x20] = a1
 13098: 7b 68 30                 u64 [s1 + 0x30] = a1
 13101: 33 08 e8 0d 01           a1 = 0x10de8
 13106: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13110: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13115: 49 21 c0 01              u64 [sp + 448] = 0
 13119: 95 18 ff 07              a1 = sp + 0x7ff
 13123: 95 88 b9 03              a1 = a1 + 0x3b9
 13127: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13131: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13136: 7b 67 70                 u64 [s1 + 0x70] = a0
 13139: 95 77 01                 a0 = a0 + 0x1
 13142: 88 77 01                 a0 = a0 <u 0x1
 13145: 97 77 01                 a0 = a0 << 0x1
 13148: 7b 17 20                 u64 [sp + 0x20] = a0
 13151: 95 17 ff 07              a0 = sp + 0x7ff
 13155: 95 77 e9 03              a0 = a0 + 0x3e9
 13159: 95 18 a0 01              a1 = sp + 0x1a0
 13163: 50 20 5c 01 1d 08        ra = 348, jump @791
      :                          @653 [@dyn 174]
 13169: 82 65 50                 s0 = u64 [s1 + 0x50]
 13172: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13175: 82 66 48                 s1 = u64 [s1 + 0x48]
 13178: 82 17 20                 a0 = u64 [sp + 0x20]
 13181: 33 08                    a1 = 0
 13183: 33 09                    a2 = 0
 13185: 64 5a                    a3 = s0
 13187: 33 00 5e 01              ra = 0x15e
 13191: 0a 64                    ecalli 100 // 'log'
 13193: 01                       fallthrough
      :                          @654 [@dyn 175]
 13194: 82 17 38                 a0 = u64 [sp + 0x38]
 13197: c8 67 07                 a0 = a0 + s1
 13200: 53 37 00 00 f0 25        jump @660 if a0 <u 4293918720
      :                          @655
 13206: 33 07 50 00 03           a0 = 0x30050
 13211: 95 77 00 00 10           a0 = a0 + 0x100000
 13216: 01                       fallthrough
      :                          @656
 13217: 82 78                    a1 = u64 [a0]
 13219: c9 87 09                 a2 = a0 - a1
 13222: ab 59 0f                 jump @660 if a2 != s0
      :                          @657
 13225: c9 68 09                 a2 = a1 - s1
 13228: 01                       fallthrough
      :                          @658
 13229: 82 7a                    a3 = u64 [a0]
 13231: ab 8a f2                 jump @656 if a3 != a1
      :                          @659
 13234: 7b 79                    u64 [a0] = a2
 13236: 01                       fallthrough
      :                          @660
 13237: 95 15 ff 07              s0 = sp + 0x7ff
 13241: 95 55 a1 03              s0 = s0 + 0x3a1
 13245: 82 57 70                 a0 = u64 [s0 + 0x70]
 13248: 33 08 02                 a1 = 0x2
 13251: 50 20 60 01 39 15        ra = 352, jump @1068
      :                          @661 [@dyn 176]
 13257: 33 06 03                 s1 = 0x3
 13260: 95 17 55                 a0 = sp + 0x55
 13263: 33 08 03                 a1 = 0x3
 13266: 33 09                    a2 = 0
 13268: 33 0a                    a3 = 0
 13270: 0a 03                    ecalli 3 // 'write'
 13272: 7b 57 78                 u64 [s0 + 0x78] = a0
 13275: 95 77 fd                 a0 = a0 + 0xfffffffffffffffd
 13278: 88 77 01                 a0 = a0 <u 0x1
 13281: 97 77 01                 a0 = a0 << 0x1
 13284: 7b 17 10                 u64 [sp + 0x10] = a0
 13287: 95 17 48                 a0 = sp + 0x48
 13290: 7b 57 18                 u64 [s0 + 0x18] = a0
 13293: 33 08 16                 a1 = 0x16
 13296: 7b 58 20                 u64 [s0 + 0x20] = a1
 13299: 95 17 ff 07              a0 = sp + 0x7ff
 13303: 95 77 19 04              a0 = a0 + 0x419
 13307: 7b 57 28                 u64 [s0 + 0x28] = a0
 13310: 7b 18 20                 u64 [sp + 0x20] = a1
 13313: 7b 58 30                 u64 [s0 + 0x30] = a1
 13316: 33 07 18 0e 01           a0 = 0x10e18
 13321: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13325: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13329: 49 21 c0 01              u64 [sp + 448] = 0
 13333: 95 17 ff 07              a0 = sp + 0x7ff
 13337: 95 77 b9 03              a0 = a0 + 0x3b9
 13341: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13345: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13350: 95 17 ff 07              a0 = sp + 0x7ff
 13354: 95 77 e9 03              a0 = a0 + 0x3e9
 13358: 95 18 a0 01              a1 = sp + 0x1a0
 13362: 50 20 62 01 56 07        ra = 354, jump @791
      :                          @662 [@dyn 177]
 13368: 82 56 50                 s1 = u64 [s0 + 0x50]
 13371: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13374: 82 55 48                 s0 = u64 [s0 + 0x48]
 13377: 82 17 10                 a0 = u64 [sp + 0x10]
 13380: 33 08                    a1 = 0
 13382: 33 09                    a2 = 0
 13384: 64 6a                    a3 = s1
 13386: 33 00 64 01              ra = 0x164
 13390: 0a 64                    ecalli 100 // 'log'
 13392: 01                       fallthrough
      :                          @663 [@dyn 178]
 13393: 82 17 38                 a0 = u64 [sp + 0x38]
 13396: c8 57 07                 a0 = a0 + s0
 13399: 53 37 00 00 f0 25        jump @669 if a0 <u 4293918720
      :                          @664
 13405: 33 07 50 00 03           a0 = 0x30050
 13410: 95 77 00 00 10           a0 = a0 + 0x100000
 13415: 01                       fallthrough
      :                          @665
 13416: 82 78                    a1 = u64 [a0]
 13418: c9 87 09                 a2 = a0 - a1
 13421: ab 69 0f                 jump @669 if a2 != s1
      :                          @666
 13424: c9 58 09                 a2 = a1 - s0
 13427: 01                       fallthrough
      :                          @667
 13428: 82 7a                    a3 = u64 [a0]
 13430: ab 8a f2                 jump @665 if a3 != a1
      :                          @668
 13433: 7b 79                    u64 [a0] = a2
 13435: 01                       fallthrough
      :                          @669
 13436: 95 16 ff 07              s1 = sp + 0x7ff
 13440: 95 66 a1 03              s1 = s1 + 0x3a1
 13444: 82 67 78                 a0 = u64 [s1 + 0x78]
 13447: 33 08 05                 a1 = 0x5
 13450: 50 20 66 01 72 14        ra = 358, jump @1068
      :                          @670 [@dyn 179]
 13456: 95 18 55                 a1 = sp + 0x55
 13459: 33 09 03                 a2 = 0x3
 13462: 95 1a 98 00              a3 = sp + 0x98
 13466: 33 0c 00 01              a5 = 0x100
 13470: 82 17 30                 a0 = u64 [sp + 0x30]
 13473: 33 0b                    a4 = 0
 13475: 0a 02                    ecalli 2 // 'read'
 13477: 95 18 48                 a1 = sp + 0x48
 13480: 7b 68 18                 u64 [s1 + 0x18] = a1
 13483: 95 18 ff 07              a1 = sp + 0x7ff
 13487: 95 88 21 04              a1 = a1 + 0x421
 13491: 7b 68 28                 u64 [s1 + 0x28] = a1
 13494: 82 18 20                 a1 = u64 [sp + 0x20]
 13497: 7b 68 20                 u64 [s1 + 0x20] = a1
 13500: 7b 68 30                 u64 [s1 + 0x30] = a1
 13503: 33 08 60 0e 01           a1 = 0x10e60
 13508: 7b 18 a0 01              u64 [sp + 0x1a0] = a1
 13512: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13517: 49 21 c0 01              u64 [sp + 448] = 0
 13521: 95 18 ff 07              a1 = sp + 0x7ff
 13525: 95 88 b9 03              a1 = a1 + 0x3b9
 13529: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 13533: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13538: 7b 67 80 00              u64 [s1 + 0x80] = a0
 13542: 95 77 01                 a0 = a0 + 0x1
 13545: 88 77 01                 a0 = a0 <u 0x1
 13548: 97 77 01                 a0 = a0 << 0x1
 13551: 7b 17 20                 u64 [sp + 0x20] = a0
 13554: 95 17 ff 07              a0 = sp + 0x7ff
 13558: 95 77 e9 03              a0 = a0 + 0x3e9
 13562: 95 18 a0 01              a1 = sp + 0x1a0
 13566: 50 20 68 01 8a 06        ra = 360, jump @791
      :                          @671 [@dyn 180]
 13572: 82 65 50                 s0 = u64 [s1 + 0x50]
 13575: 82 6b 58                 a4 = u64 [s1 + 0x58]
 13578: 82 66 48                 s1 = u64 [s1 + 0x48]
 13581: 82 17 20                 a0 = u64 [sp + 0x20]
 13584: 33 08                    a1 = 0
 13586: 33 09                    a2 = 0
 13588: 64 5a                    a3 = s0
 13590: 33 00 6a 01              ra = 0x16a
 13594: 0a 64                    ecalli 100 // 'log'
 13596: 01                       fallthrough
      :                          @672 [@dyn 181]
 13597: 82 17 38                 a0 = u64 [sp + 0x38]
 13600: c8 67 07                 a0 = a0 + s1
 13603: 53 37 00 00 f0 25        jump @678 if a0 <u 4293918720
      :                          @673
 13609: 33 07 50 00 03           a0 = 0x30050
 13614: 95 77 00 00 10           a0 = a0 + 0x100000
 13619: 01                       fallthrough
      :                          @674
 13620: 82 78                    a1 = u64 [a0]
 13622: c9 87 09                 a2 = a0 - a1
 13625: ab 59 0f                 jump @678 if a2 != s0
      :                          @675
 13628: c9 68 09                 a2 = a1 - s1
 13631: 01                       fallthrough
      :                          @676
 13632: 82 7a                    a3 = u64 [a0]
 13634: ab 8a f2                 jump @674 if a3 != a1
      :                          @677
 13637: 7b 79                    u64 [a0] = a2
 13639: 01                       fallthrough
      :                          @678
 13640: 95 15 ff 07              s0 = sp + 0x7ff
 13644: 95 55 a1 03              s0 = s0 + 0x3a1
 13648: 82 57 80 00              a0 = u64 [s0 + 0x80]
 13652: 33 08 06                 a1 = 0x6
 13655: 50 20 6c 01 a5 13        ra = 364, jump @1068
      :                          @679 [@dyn 182]
 13661: 33 06 03                 s1 = 0x3
 13664: 95 17 55                 a0 = sp + 0x55
 13667: 33 08 03                 a1 = 0x3
 13670: 33 09                    a2 = 0
 13672: 33 0a                    a3 = 0
 13674: 0a 03                    ecalli 3 // 'write'
 13676: 7b 57                    u64 [s0] = a0
 13678: 95 77 01                 a0 = a0 + 0x1
 13681: 88 77 01                 a0 = a0 <u 0x1
 13684: 97 77 01                 a0 = a0 << 0x1
 13687: 7b 17 20                 u64 [sp + 0x20] = a0
 13690: 95 17 48                 a0 = sp + 0x48
 13693: 7b 57 18                 u64 [s0 + 0x18] = a0
 13696: 33 07 16                 a0 = 0x16
 13699: 7b 57 20                 u64 [s0 + 0x20] = a0
 13702: 7b 55 28                 u64 [s0 + 0x28] = s0
 13705: 7b 57 30                 u64 [s0 + 0x30] = a0
 13708: 33 07 90 0e 01           a0 = 0x10e90
 13713: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13717: 7b 16 a8 01              u64 [sp + 0x1a8] = s1
 13721: 49 21 c0 01              u64 [sp + 448] = 0
 13725: 95 17 ff 07              a0 = sp + 0x7ff
 13729: 95 77 b9 03              a0 = a0 + 0x3b9
 13733: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13737: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13742: 95 17 ff 07              a0 = sp + 0x7ff
 13746: 95 77 e9 03              a0 = a0 + 0x3e9
 13750: 95 18 a0 01              a1 = sp + 0x1a0
 13754: 50 20 6e 01 ce 05        ra = 366, jump @791
      :                          @680 [@dyn 183]
 13760: 82 56 50                 s1 = u64 [s0 + 0x50]
 13763: 82 5b 58                 a4 = u64 [s0 + 0x58]
 13766: 82 55 48                 s0 = u64 [s0 + 0x48]
 13769: 82 17 20                 a0 = u64 [sp + 0x20]
 13772: 33 08                    a1 = 0
 13774: 33 09                    a2 = 0
 13776: 64 6a                    a3 = s1
 13778: 33 00 70 01              ra = 0x170
 13782: 0a 64                    ecalli 100 // 'log'
 13784: 01                       fallthrough
      :                          @681 [@dyn 184]
 13785: 82 17 38                 a0 = u64 [sp + 0x38]
 13788: c8 57 07                 a0 = a0 + s0
 13791: 53 37 00 00 f0 25        jump @687 if a0 <u 4293918720
      :                          @682
 13797: 33 07 50 00 03           a0 = 0x30050
 13802: 95 77 00 00 10           a0 = a0 + 0x100000
 13807: 01                       fallthrough
      :                          @683
 13808: 82 78                    a1 = u64 [a0]
 13810: c9 87 09                 a2 = a0 - a1
 13813: ab 69 0f                 jump @687 if a2 != s1
      :                          @684
 13816: c9 58 09                 a2 = a1 - s0
 13819: 01                       fallthrough
      :                          @685
 13820: 82 7a                    a3 = u64 [a0]
 13822: ab 8a f2                 jump @683 if a3 != a1
      :                          @686
 13825: 7b 79                    u64 [a0] = a2
 13827: 01                       fallthrough
      :                          @687
 13828: 95 16 ff 07              s1 = sp + 0x7ff
 13832: 95 66 a1 03              s1 = s1 + 0x3a1
 13836: 82 67                    a0 = u64 [s1]
 13838: 33 08 07                 a1 = 0x7
 13841: 50 20 72 01 eb 12        ra = 370, jump @1068
      :                          @688 [@dyn 185]
 13847: 95 18 98 00              a1 = sp + 0x98
 13851: 82 17 30                 a0 = u64 [sp + 0x30]
 13854: 0a 04                    ecalli 4 // 'info'
 13856: 64 75                    s0 = a0
 13858: 7b 67 78                 u64 [s1 + 0x78] = a0
 13861: 33 08 08                 a1 = 0x8
 13864: 50 20 74 01 d4 12        ra = 372, jump @1068
      :                          @689 [@dyn 186]
 13870: 88 57 01                 a0 = s0 <u 0x1
 13873: 97 77 01                 a0 = a0 << 0x1
 13876: 7b 17 20                 u64 [sp + 0x20] = a0
 13879: 95 17 48                 a0 = sp + 0x48
 13882: 7b 67 18                 u64 [s1 + 0x18] = a0
 13885: 33 08 16                 a1 = 0x16
 13888: 7b 68 20                 u64 [s1 + 0x20] = a1
 13891: 95 17 ff 07              a0 = sp + 0x7ff
 13895: 95 77 19 04              a0 = a0 + 0x419
 13899: 7b 67 28                 u64 [s1 + 0x28] = a0
 13902: 7b 18 30                 u64 [sp + 0x30] = a1
 13905: 7b 68 30                 u64 [s1 + 0x30] = a1
 13908: 33 07 c8 0e 01           a0 = 0x10ec8
 13913: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 13917: 49 21 a8 01 03           u64 [sp + 424] = 0x3
 13922: 49 21 c0 01              u64 [sp + 448] = 0
 13926: 95 17 ff 07              a0 = sp + 0x7ff
 13930: 95 77 b9 03              a0 = a0 + 0x3b9
 13934: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 13938: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 13943: 95 17 ff 07              a0 = sp + 0x7ff
 13947: 95 77 e9 03              a0 = a0 + 0x3e9
 13951: 95 18 a0 01              a1 = sp + 0x1a0
 13955: 50 20 76 01 05 05        ra = 374, jump @791
      :                          @690 [@dyn 187]
 13961: 95 17 ff 07              a0 = sp + 0x7ff
 13965: 95 77 a1 03              a0 = a0 + 0x3a1
 13969: 82 76 50                 s1 = u64 [a0 + 0x50]
 13972: 82 7b 58                 a4 = u64 [a0 + 0x58]
 13975: 82 75 48                 s0 = u64 [a0 + 0x48]
 13978: 82 17 20                 a0 = u64 [sp + 0x20]
 13981: 33 08                    a1 = 0
 13983: 33 09                    a2 = 0
 13985: 64 6a                    a3 = s1
 13987: 33 00 78 01              ra = 0x178
 13991: 0a 64                    ecalli 100 // 'log'
 13993: 01                       fallthrough
      :                          @691 [@dyn 188]
 13994: 82 17 38                 a0 = u64 [sp + 0x38]
 13997: c8 57 07                 a0 = a0 + s0
 14000: 53 37 00 00 f0 27        jump @697 if a0 <u 4293918720
      :                          @692
 14006: 33 07 50 00 03           a0 = 0x30050
 14011: 95 77 00 00 10           a0 = a0 + 0x100000
 14016: 01                       fallthrough
      :                          @693
 14017: 82 78                    a1 = u64 [a0]
 14019: c9 87 09                 a2 = a0 - a1
 14022: ab 69 11                 jump @697 if a2 != s1
      :                          @694
 14025: c9 58 09                 a2 = a1 - s0
 14028: 01                       fallthrough
      :                          @695
 14029: 82 7a                    a3 = u64 [a0]
 14031: ab 8a f2                 jump @693 if a3 != a1
      :                          @696
 14034: 7b 79                    u64 [a0] = a2
 14036: 0a                       ecalli 0 // 'gas'
 14037: 28 04                    jump @698
      :                          @697
 14039: 0a                       ecalli 0 // 'gas'
 14040: 01                       fallthrough
      :                          @698
 14041: 95 16 ff 07              s1 = sp + 0x7ff
 14045: 95 66 a1 03              s1 = s1 + 0x3a1
 14049: 7b 67 80 00              u64 [s1 + 0x80] = a0
 14053: 33 08 09                 a1 = 0x9
 14056: 50 20 7a 01 14 12        ra = 378, jump @1068
      :                          @699 [@dyn 189]
 14062: 95 17 ff 07              a0 = sp + 0x7ff
 14066: 95 77 21 04              a0 = a0 + 0x421
 14070: 7b 67 48                 u64 [s1 + 0x48] = a0
 14073: 82 17 30                 a0 = u64 [sp + 0x30]
 14076: 7b 67 50                 u64 [s1 + 0x50] = a0
 14079: 33 07 18 0f 01           a0 = 0x10f18
 14084: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14088: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14093: 49 21 c0 01              u64 [sp + 448] = 0
 14097: 95 17 ff 07              a0 = sp + 0x7ff
 14101: 95 77 e9 03              a0 = a0 + 0x3e9
 14105: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 14109: 49 21 b8 01 01           u64 [sp + 440] = 0x1
 14114: 95 17 ff 07              a0 = sp + 0x7ff
 14118: 95 77 b9 03              a0 = a0 + 0x3b9
 14122: 95 18 a0 01              a1 = sp + 0x1a0
 14126: 50 20 7c 01 5a 04        ra = 380, jump @791
      :                          @700 [@dyn 190]
 14132: 82 65 20                 s0 = u64 [s1 + 0x20]
 14135: 82 6b 28                 a4 = u64 [s1 + 0x28]
 14138: 82 66 18                 s1 = u64 [s1 + 0x18]
 14141: 33 07 04                 a0 = 0x4
 14144: 33 08                    a1 = 0
 14146: 33 09                    a2 = 0
 14148: 64 5a                    a3 = s0
 14150: 33 00 7e 01              ra = 0x17e
 14154: 0a 64                    ecalli 100 // 'log'
 14156: 01                       fallthrough
      :                          @701 [@dyn 191]
 14157: 82 17 38                 a0 = u64 [sp + 0x38]
 14160: c8 67 07                 a0 = a0 + s1
 14163: 53 37 00 00 f0 27        jump @707 if a0 <u 4293918720
      :                          @702
 14169: 33 07 50 00 03           a0 = 0x30050
 14174: 95 77 00 00 10           a0 = a0 + 0x100000
 14179: 01                       fallthrough
      :                          @703
 14180: 82 78                    a1 = u64 [a0]
 14182: c9 87 09                 a2 = a0 - a1
 14185: ab 59 11                 jump @707 if a2 != s0
      :                          @704
 14188: c9 68 09                 a2 = a1 - s1
 14191: 01                       fallthrough
      :                          @705
 14192: 82 7a                    a3 = u64 [a0]
 14194: ab 8a f2                 jump @703 if a3 != a1
      :                          @706
 14197: 7b 79                    u64 [a0] = a2
 14199: 33 0b                    a4 = 0
 14201: 01                       fallthrough
      :                          @707
 14202: 82 19 28                 a2 = u64 [sp + 0x28]
 14205: 55 19 21 27 01           jump @724 if a2 >=u 33
      :                          @708
 14210: 33 05 19 00 03           s0 = 0x30019
 14215: 33 07 19 00 03           a0 = 0x30019
 14220: 82 18 18                 a1 = u64 [sp + 0x18]
 14223: 50 20 80 01 74 06        ra = 384, jump @840
      :                          @709 [@dyn 192]
 14229: 82 18 48                 a1 = u64 [sp + 0x48]
 14232: 3a 09 00 00 03           a2 = u64 [0x30000]
 14237: 14 07 ab aa aa aa aa aa aa aa a0 = 0xaaaaaaaaaaaaaaab
 14247: ca 78 07                 a0 = a1 * a0
 14250: 95 16 ff 07              s1 = sp + 0x7ff
 14254: 95 66 a1 03              s1 = s1 + 0x3a1
 14258: ae 97 38                 jump @714 if a0 >=u a2
      :                          @710
 14261: 33 07 33                 a0 = 0x33
 14264: 51 18 09 27              jump @712 if a1 == 9
      :                          @711
 14268: 0a 08                    ecalli 8 // 'checkpoint'
 14270: 33 0a 38 0f 01           a3 = 0x10f38
 14275: 33 07 03                 a0 = 0x3
 14278: 33 0b 11                 a4 = 0x11
 14281: 33 08                    a1 = 0
 14283: 33 09                    a2 = 0
 14285: 0a 64                    ecalli 100 // 'log'
 14287: 82 17 48                 a0 = u64 [sp + 0x48]
 14290: 95 77 2a                 a0 = a0 + 0x2a
 14293: 33 08 07                 a1 = 0x7
 14296: 33 00 82 01              ra = 0x182
 14300: 28 20 11                 jump @1068
      :                          @712
 14303: 33 08 07                 a1 = 0x7
 14306: 50 20 82 01 1a 11        ra = 386, jump @1068
      :                          @713 [@dyn 193]
 14312: 32 07                    jump [a0]
      :                          @714
 14314: 64 57                    a0 = s0
 14316: 0a 10                    ecalli 16 // 'oyield'
 14318: 7b 67                    u64 [s1] = a0
 14320: 88 77 01                 a0 = a0 <u 0x1
 14323: 97 77 01                 a0 = a0 << 0x1
 14326: 7b 17 30                 u64 [sp + 0x30] = a0
 14329: 95 17 48                 a0 = sp + 0x48
 14332: 7b 67 18                 u64 [s1 + 0x18] = a0
 14335: 33 07 16                 a0 = 0x16
 14338: 7b 67 20                 u64 [s1 + 0x20] = a0
 14341: 7b 66 28                 u64 [s1 + 0x28] = s1
 14344: 7b 67 30                 u64 [s1 + 0x30] = a0
 14347: 33 07 50 0f 01           a0 = 0x10f50
 14352: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 14356: 49 21 a8 01 02           u64 [sp + 424] = 0x2
 14361: 49 21 c0 01              u64 [sp + 448] = 0
 14365: 95 18 ff 07              a1 = sp + 0x7ff
 14369: 95 88 b9 03              a1 = a1 + 0x3b9
 14373: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
 14377: 49 21 b8 01 02           u64 [sp + 440] = 0x2
 14382: 95 17 ff 07              a0 = sp + 0x7ff
 14386: 95 77 e9 03              a0 = a0 + 0x3e9
 14390: 95 18 a0 01              a1 = sp + 0x1a0
 14394: 50 20 84 01 4e 03        ra = 388, jump @791
      :                          @715 [@dyn 194]
 14400: 95 17 ff 07              a0 = sp + 0x7ff
 14404: 95 77 a1 03              a0 = a0 + 0x3a1
 14408: 82 76 50                 s1 = u64 [a0 + 0x50]
 14411: 82 7b 58                 a4 = u64 [a0 + 0x58]
 14414: 82 75 48                 s0 = u64 [a0 + 0x48]
 14417: 82 17 30                 a0 = u64 [sp + 0x30]
 14420: 33 08                    a1 = 0
 14422: 33 09                    a2 = 0
 14424: 64 6a                    a3 = s1
 14426: 33 00 86 01              ra = 0x186
 14430: 0a 64                    ecalli 100 // 'log'
 14432: 01                       fallthrough
      :                          @716 [@dyn 195]
 14433: 82 17 38                 a0 = u64 [sp + 0x38]
 14436: c8 57 07                 a0 = a0 + s0
 14439: 53 37 00 00 f0 31        jump @722 if a0 <u 4293918720
      :                          @717
 14445: 33 07 50 00 03           a0 = 0x30050
 14450: 95 77 00 00 10           a0 = a0 + 0x100000
 14455: 01                       fallthrough
      :                          @718
 14456: 82 78                    a1 = u64 [a0]
 14458: c9 87 09                 a2 = a0 - a1
 14461: ab 69 1b                 jump @722 if a2 != s1
      :                          @719
 14464: c9 58 09                 a2 = a1 - s0
 14467: 01                       fallthrough
      :                          @720
 14468: 82 7a                    a3 = u64 [a0]
 14470: ab 8a f2                 jump @718 if a3 != a1
      :                          @721
 14473: 7b 79                    u64 [a0] = a2
 14475: 33 0b                    a4 = 0
 14477: 33 09 19 00 03           a2 = 0x30019
 14482: 33 08 20                 a1 = 0x20
 14485: 28 49 df                 jump @342
      :                          @722
 14488: 33 09 19 00 03           a2 = 0x30019
 14493: 33 08 20                 a1 = 0x20
 14496: 28 3e df                 jump @342
      :                          @723
 14499: 00                       trap
      :                          @724
 14500: 00                       trap
      :                          @725
 14501: 00                       trap
      :                          @726 [export #2: 'on_transfer']
 14502: 95 11 88                 sp = sp + 0xffffffffffffff88
 14505: 7b 10 70                 u64 [sp + 0x70] = ra
 14508: 7b 15 68                 u64 [sp + 0x68] = s0
 14511: 7b 16 60                 u64 [sp + 0x60] = s1
 14514: 0a                       ecalli 0 // 'gas'
 14515: 7b 17                    u64 [sp] = a0
 14517: 33 08 04                 a1 = 0x4
 14520: 50 20 88 01 44 10        ra = 392, jump @1068
      :                          @727 [@dyn 196]
 14526: 64 17                    a0 = sp
 14528: 7b 17 50                 u64 [sp + 0x50] = a0
 14531: 33 07 16                 a0 = 0x16
 14534: 7b 17 58                 u64 [sp + 0x58] = a0
 14537: 33 07 a0 0f 01           a0 = 0x10fa0
 14542: 7b 17 20                 u64 [sp + 0x20] = a0
 14545: 49 11 28 02              u64 [sp + 40] = 0x2
 14549: 49 11 40                 u64 [sp + 64] = 0
 14552: 95 17 50                 a0 = sp + 0x50
 14555: 7b 17 30                 u64 [sp + 0x30] = a0
 14558: 49 11 38 01              u64 [sp + 56] = 0x1
 14562: 95 17 08                 a0 = sp + 0x8
 14565: 95 18 20                 a1 = sp + 0x20
 14568: 50 20 8a 01 a0 02        ra = 394, jump @791
      :                          @728 [@dyn 197]
 14574: 82 15 10                 s0 = u64 [sp + 0x10]
 14577: 82 1b 18                 a4 = u64 [sp + 0x18]
 14580: 82 16 08                 s1 = u64 [sp + 0x8]
 14583: 33 07 04                 a0 = 0x4
 14586: 33 08                    a1 = 0
 14588: 33 09                    a2 = 0
 14590: 64 5a                    a3 = s0
 14592: 33 00 8c 01              ra = 0x18c
 14596: 0a 64                    ecalli 100 // 'log'
 14598: 01                       fallthrough
      :                          @729 [@dyn 198]
 14599: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 14604: 53 38 00 00 f0 27        jump @735 if a1 <u 4293918720
      :                          @730
 14610: 33 07 50 00 03           a0 = 0x30050
 14615: 95 77 00 00 10           a0 = a0 + 0x100000
 14620: 01                       fallthrough
      :                          @731
 14621: 82 78                    a1 = u64 [a0]
 14623: c9 87 09                 a2 = a0 - a1
 14626: ab 59 11                 jump @735 if a2 != s0
      :                          @732
 14629: c9 68 09                 a2 = a1 - s1
 14632: 01                       fallthrough
      :                          @733
 14633: 82 7a                    a3 = u64 [a0]
 14635: ab 8a f2                 jump @731 if a3 != a1
      :                          @734
 14638: 7b 79                    u64 [a0] = a2
 14640: 33 0b                    a4 = 0
 14642: 01                       fallthrough
      :                          @735
 14643: 33 07 00 00 01           a0 = 0x10000
 14648: 33 08                    a1 = 0
 14650: 82 10 70                 ra = u64 [sp + 0x70]
 14653: 82 15 68                 s0 = u64 [sp + 0x68]
 14656: 82 16 60                 s1 = u64 [sp + 0x60]
 14659: 95 11 78                 sp = sp + 0x78
 14662: 32 00                    ret
      :                          @736
 14664: 00                       trap
      :                          @737
 14665: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 14668: 7b 10 40                 u64 [sp + 0x40] = ra
 14671: 7b 15 38                 u64 [sp + 0x38] = s0
 14674: 7b 16 30                 u64 [sp + 0x30] = s1
 14677: c8 89 09                 a2 = a2 + a1
 14680: ac 89 53                 jump @745 if a2 <u a1
      :                          @738
 14683: 64 75                    s0 = a0
 14685: 82 77                    a0 = u64 [a0]
 14687: 97 78 01                 a1 = a0 << 0x1
 14690: 33 0a 08                 a3 = 0x8
 14693: e4 a9 09                 a2 = maxu(a2, a3)
 14696: e4 98 06                 s1 = maxu(a1, a2)
 14699: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 14702: 98 88 3f                 a1 = a1 >> 0x3f
 14705: 51 07 12                 jump @740 if a0 == 0
      :                          @739
 14708: 82 59 08                 a2 = u64 [s0 + 0x8]
 14711: 7b 19 18                 u64 [sp + 0x18] = a2
 14714: 49 11 20 01              u64 [sp + 32] = 0x1
 14718: 7b 17 28                 u64 [sp + 0x28] = a0
 14721: 28 06                    jump @741
      :                          @740
 14723: 49 11 20                 u64 [sp + 32] = 0
 14726: 01                       fallthrough
      :                          @741
 14727: 64 17                    a0 = sp
 14729: 95 1a 18                 a3 = sp + 0x18
 14732: 64 69                    a2 = s1
 14734: 50 20 8e 01 32           ra = 398, jump @748
      :                          @742 [@dyn 199]
 14739: 82 18                    a1 = u64 [sp]
 14741: 82 17 08                 a0 = u64 [sp + 0x8]
 14744: 51 08 14                 jump @746 if a1 == 0
      :                          @743
 14747: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 14757: aa 87 0d                 jump @747 if a0 == a1
      :                          @744
 14760: 52 07 a0                 jump @736 if a0 != 0
      :                          @745
 14763: 00                       trap
      :                          @746
 14764: 7b 57 08                 u64 [s0 + 0x8] = a0
 14767: 7b 56                    u64 [s0] = s1
 14769: 01                       fallthrough
      :                          @747
 14770: 82 10 40                 ra = u64 [sp + 0x40]
 14773: 82 15 38                 s0 = u64 [sp + 0x38]
 14776: 82 16 30                 s1 = u64 [sp + 0x30]
 14779: 95 11 48                 sp = sp + 0x48
 14782: 32 00                    ret
      :                          @748
 14784: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 14787: 7b 10 30                 u64 [sp + 0x30] = ra
 14790: 7b 15 28                 u64 [sp + 0x28] = s0
 14793: 7b 16 20                 u64 [sp + 0x20] = s1
 14796: 64 95                    s0 = a2
 14798: 64 72                    t0 = a0
 14800: 51 08 7a                 jump @758 if a1 == 0
      :                          @749
 14803: 82 a7 08                 a0 = u64 [a3 + 0x8]
 14806: 51 07 7d                 jump @759 if a0 == 0
      :                          @750
 14809: 82 a9 10                 a2 = u64 [a3 + 0x10]
 14812: 51 09 ab 00              jump @766 if a2 == 0
      :                          @751
 14816: 82 a8                    a1 = u64 [a3]
 14818: 33 06 50 00 03           s1 = 0x30050
 14823: 33 03 00 00 10           t1 = 0x100000
 14828: c8 36 06                 s1 = s1 + t1
 14831: 01                       fallthrough
      :                          @752
 14832: 82 6a                    a3 = u64 [s1]
 14834: c8 5a 07                 a0 = a3 + s0
 14837: ac a7 d0 00              jump @772 if a0 <u a3
      :                          @753
 14841: 95 7b 01                 a4 = a0 + 0x1
 14844: 88 bc 01                 a5 = a4 <u 0x1
 14847: d8 b3 0b                 a4 = t1 <u a4
 14850: d4 cb 0b                 a4 = a4 | a5
 14853: 52 0b c0 00              jump @772 if a4 != 0
      :                          @754
 14857: 82 6b                    a4 = u64 [s1]
 14859: ab ab e5                 jump @752 if a4 != a3
      :                          @755
 14862: 7b 67                    u64 [s1] = a0
 14864: 33 0c                    a5 = 0
 14866: 7b 12 18                 u64 [sp + 0x18] = t0
 14869: 33 0a 50 00 03           a3 = 0x30050
 14874: 33 0b 00 00 10           a4 = 0x100000
 14879: 7b 1a                    u64 [sp] = a3
 14881: c8 ba 0a                 a3 = a3 + a4
 14884: c9 7a 07                 a0 = a3 - a0
 14887: 7b 17 10                 u64 [sp + 0x10] = a0
 14890: 7b 18 08                 u64 [sp + 0x8] = a1
 14893: 64 96                    s1 = a2
 14895: 50 20 90 01 d4 03        ra = 400, jump @840
      :                          @756 [@dyn 200]
 14901: 54 36 00 00 10 98 00     jump @773 if s1 <=u 1048576
      :                          @757
 14908: 82 12 18                 t0 = u64 [sp + 0x18]
 14911: 82 18 10                 a1 = u64 [sp + 0x10]
 14914: 33 07                    a0 = 0
 14916: 7b 28 08                 u64 [t0 + 0x8] = a1
 14919: 28 b5 00                 jump @779
      :                          @758
 14922: 49 12 08                 u64 [t0 + 8] = 0
 14925: 33 07 01                 a0 = 0x1
 14928: 28 ac 00                 jump @779
      :                          @759
 14931: 33 09 50 00 03           a2 = 0x30050
 14936: 33 07 00 00 10           a0 = 0x100000
 14941: c8 79 09                 a2 = a2 + a0
 14944: 01                       fallthrough
      :                          @760
 14945: 82 9a                    a3 = u64 [a2]
 14947: c8 5a 08                 a1 = a3 + s0
 14950: ac a8 5f                 jump @772 if a1 <u a3
      :                          @761
 14953: 95 8b 01                 a4 = a1 + 0x1
 14956: 88 bc 01                 a5 = a4 <u 0x1
 14959: d8 b7 0b                 a4 = a0 <u a4
 14962: d4 cb 0b                 a4 = a4 | a5
 14965: 52 0b 50                 jump @772 if a4 != 0
      :                          @762
 14968: 82 9b                    a4 = u64 [a2]
 14970: ab ab e7                 jump @760 if a4 != a3
      :                          @763
 14973: 7b 98                    u64 [a2] = a1
 14975: 33 0c                    a5 = 0
 14977: 01                       fallthrough
      :                          @764
 14978: ab ab df                 jump @760 if a4 != a3
      :                          @765
 14981: 28 31                    jump @771
      :                          @766
 14983: 33 09 50 00 03           a2 = 0x30050
 14988: 33 07 00 00 10           a0 = 0x100000
 14993: c8 79 09                 a2 = a2 + a0
 14996: 01                       fallthrough
      :                          @767
 14997: 82 9a                    a3 = u64 [a2]
 14999: c8 5a 08                 a1 = a3 + s0
 15002: ac a8 2b                 jump @772 if a1 <u a3
      :                          @768
 15005: 95 8b 01                 a4 = a1 + 0x1
 15008: 88 bc 01                 a5 = a4 <u 0x1
 15011: d8 b7 0b                 a4 = a0 <u a4
 15014: d4 cb 0b                 a4 = a4 | a5
 15017: 52 0b 1c                 jump @772 if a4 != 0
      :                          @769
 15020: 82 9b                    a4 = u64 [a2]
 15022: ab ab e7                 jump @767 if a4 != a3
      :                          @770
 15025: 7b 98                    u64 [a2] = a1
 15027: 33 0c                    a5 = 0
 15029: 01                       fallthrough
      :                          @771
 15030: 33 07 50 00 13           a0 = 0x130050
 15035: c9 87 08                 a1 = a0 - a1
 15038: 33 07                    a0 = 0
 15040: 7b 28 08                 u64 [t0 + 0x8] = a1
 15043: 28 39                    jump @779
      :                          @772
 15045: 33 07 01                 a0 = 0x1
 15048: 7b 27 08                 u64 [t0 + 0x8] = a0
 15051: 28 31                    jump @779
      :                          @773
 15053: 64 6c                    a5 = s1
 15055: 82 17                    a0 = u64 [sp]
 15057: 95 77 00 00 10           a0 = a0 + 0x100000
 15062: 82 12 18                 t0 = u64 [sp + 0x18]
 15065: 82 16 08                 s1 = u64 [sp + 0x8]
 15068: 01                       fallthrough
      :                          @774
 15069: 82 78                    a1 = u64 [a0]
 15071: c9 87 09                 a2 = a0 - a1
 15074: ab 69 11                 jump @778 if a2 != s1
      :                          @775
 15077: c9 c8 09                 a2 = a1 - a5
 15080: 01                       fallthrough
      :                          @776
 15081: 82 7a                    a3 = u64 [a0]
 15083: ab 8a f2                 jump @774 if a3 != a1
      :                          @777
 15086: 7b 79                    u64 [a0] = a2
 15088: 33 0b                    a4 = 0
 15090: 01                       fallthrough
      :                          @778
 15091: 82 18 10                 a1 = u64 [sp + 0x10]
 15094: 33 07                    a0 = 0
 15096: 7b 28 08                 u64 [t0 + 0x8] = a1
 15099: 01                       fallthrough
      :                          @779
 15100: 7b 25 10                 u64 [t0 + 0x10] = s0
 15103: 7b 27                    u64 [t0] = a0
 15105: 82 10 30                 ra = u64 [sp + 0x30]
 15108: 82 15 28                 s0 = u64 [sp + 0x28]
 15111: 82 16 20                 s1 = u64 [sp + 0x20]
 15114: 95 11 38                 sp = sp + 0x38
 15117: 32 00                    ret
      :                          @780
 15119: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 15122: 7b 10 40                 u64 [sp + 0x40] = ra
 15125: 7b 15 38                 u64 [sp + 0x38] = s0
 15128: 7b 16 30                 u64 [sp + 0x30] = s1
 15131: 95 88 01                 a1 = a1 + 0x1
 15134: 51 08 55                 jump @788 if a1 == 0
      :                          @781
 15137: 64 75                    s0 = a0
 15139: 82 77                    a0 = u64 [a0]
 15141: 97 79 01                 a2 = a0 << 0x1
 15144: 33 0a 08                 a3 = 0x8
 15147: e4 a8 08                 a1 = maxu(a1, a3)
 15150: e4 89 06                 s1 = maxu(a2, a1)
 15153: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 15156: 98 88 3f                 a1 = a1 >> 0x3f
 15159: 51 07 12                 jump @783 if a0 == 0
      :                          @782
 15162: 82 59 08                 a2 = u64 [s0 + 0x8]
 15165: 7b 19 18                 u64 [sp + 0x18] = a2
 15168: 49 11 20 01              u64 [sp + 32] = 0x1
 15172: 7b 17 28                 u64 [sp + 0x28] = a0
 15175: 28 06                    jump @784
      :                          @783
 15177: 49 11 20                 u64 [sp + 32] = 0
 15180: 01                       fallthrough
      :                          @784
 15181: 64 17                    a0 = sp
 15183: 95 1a 18                 a3 = sp + 0x18
 15186: 64 69                    a2 = s1
 15188: 50 20 92 01 6c fe        ra = 402, jump @748
      :                          @785 [@dyn 201]
 15194: 82 18                    a1 = u64 [sp]
 15196: 82 17 08                 a0 = u64 [sp + 0x8]
 15199: 51 08 15                 jump @789 if a1 == 0
      :                          @786
 15202: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 15212: aa 87 0e                 jump @790 if a0 == a1
      :                          @787
 15215: 52 07 d9 fd              jump @736 if a0 != 0
      :                          @788
 15219: 00                       trap
      :                          @789
 15220: 7b 57 08                 u64 [s0 + 0x8] = a0
 15223: 7b 56                    u64 [s0] = s1
 15225: 01                       fallthrough
      :                          @790
 15226: 82 10 40                 ra = u64 [sp + 0x40]
 15229: 82 15 38                 s0 = u64 [sp + 0x38]
 15232: 82 16 30                 s1 = u64 [sp + 0x30]
 15235: 95 11 48                 sp = sp + 0x48
 15238: 32 00                    ret
      :                          @791
 15240: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 15243: 7b 10 30                 u64 [sp + 0x30] = ra
 15246: 7b 15 28                 u64 [sp + 0x28] = s0
 15249: 7b 16 20                 u64 [sp + 0x20] = s1
 15252: 64 89                    a2 = a1
 15254: 82 8a 08                 a3 = u64 [a1 + 0x8]
 15257: 64 75                    s0 = a0
 15259: 51 0a 35                 jump @796 if a3 == 0
      :                          @792
 15262: 82 98                    a1 = u64 [a2]
 15264: 33 07                    a0 = 0
 15266: 95 8b 08                 a4 = a1 + 0x8
 15269: 01                       fallthrough
      :                          @793
 15270: 82 bc                    a5 = u64 [a4]
 15272: c8 c7 07                 a0 = a0 + a5
 15275: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 15278: 95 bb 10                 a4 = a4 + 0x10
 15281: 52 0a f5                 jump @793 if a3 != 0
      :                          @794
 15284: 82 9a 18                 a3 = u64 [a2 + 0x18]
 15287: 51 0a 24                 jump @798 if a3 == 0
      :                          @795
 15290: 82 88 08                 a1 = u64 [a1 + 0x8]
 15293: 8e 88                    a1 = a1 >u 0
 15295: 88 7a 10                 a3 = a0 <u 0x10
 15298: 85 aa 01                 a3 = a3 ^ 0x1
 15301: d4 a8 08                 a1 = a1 | a3
 15304: 89 7a                    a3 = a0 <s 0
 15306: e0 a8 08                 a1 = a1 & ~a3
 15309: 52 08 0a                 jump @797 if a1 != 0
      :                          @796
 15312: 33 07                    a0 = 0
 15314: 33 08 01                 a1 = 0x1
 15317: 28 4c                    jump @806
      :                          @797
 15319: 97 77 01                 a0 = a0 << 0x1
 15322: 01                       fallthrough
      :                          @798
 15323: 51 07 42                 jump @805 if a0 == 0
      :                          @799
 15326: 57 07 7a                 jump @810 if a0 <s 0
      :                          @800
 15329: 64 52                    t0 = s0
 15331: 33 0b 50 00 03           a4 = 0x30050
 15336: 33 08 00 00 10           a1 = 0x100000
 15341: c8 8b 0b                 a4 = a4 + a1
 15344: 01                       fallthrough
      :                          @801
 15345: 82 bc                    a5 = u64 [a4]
 15347: c8 7c 0a                 a3 = a5 + a0
 15350: ac ca 52 fd              jump @736 if a3 <u a5
      :                          @802
 15354: 95 a5 01                 s0 = a3 + 0x1
 15357: 88 56 01                 s1 = s0 <u 0x1
 15360: d8 58 05                 s0 = a1 <u s0
 15363: d4 65 05                 s0 = s0 | s1
 15366: 52 05 42 fd              jump @736 if s0 != 0
      :                          @803
 15370: 82 b6                    s1 = u64 [a4]
 15372: ab c6 e5                 jump @801 if s1 != a5
      :                          @804
 15375: 7b ba                    u64 [a4] = a3
 15377: 33 08 50 00 13           a1 = 0x130050
 15382: c9 a8 08                 a1 = a1 - a3
 15385: 64 25                    s0 = t0
 15387: 28 06                    jump @806
      :                          @805
 15389: 33 08 01                 a1 = 0x1
 15392: 01                       fallthrough
      :                          @806
 15393: 7b 17                    u64 [sp] = a0
 15395: 7b 18 08                 u64 [sp + 0x8] = a1
 15398: 49 11 10                 u64 [sp + 16] = 0
 15401: 33 08 c0 0f 01           a1 = 0x10fc0
 15406: 64 17                    a0 = sp
 15408: 50 20 94 01 85 06        ra = 404, jump @935
      :                          @807 [@dyn 202]
 15414: 52 07 21                 jump @809 if a0 != 0
      :                          @808
 15417: 82 17 10                 a0 = u64 [sp + 0x10]
 15420: 82 18 08                 a1 = u64 [sp + 0x8]
 15423: 82 19                    a2 = u64 [sp]
 15425: 7b 57 10                 u64 [s0 + 0x10] = a0
 15428: 7b 58 08                 u64 [s0 + 0x8] = a1
 15431: 7b 59                    u64 [s0] = a2
 15433: 82 10 30                 ra = u64 [sp + 0x30]
 15436: 82 15 28                 s0 = u64 [sp + 0x28]
 15439: 82 16 20                 s1 = u64 [sp + 0x20]
 15442: 95 11 38                 sp = sp + 0x38
 15445: 32 00                    ret
      :                          @809
 15447: 00                       trap
      :                          @810
 15448: 00                       trap
      :                          @811 [@dyn 203]
 15449: 82 72                    t0 = u64 [a0]
 15451: 33 09 00 00 f0           a2 = 0xfffffffffff00000
 15456: 95 2a ff ff ef           a3 = t0 + 0xffffffffffefffff
 15461: ac 9a 28                 jump @817 if a3 <u a2
      :                          @812
 15464: 82 77 08                 a0 = u64 [a0 + 0x8]
 15467: 33 09 50 00 03           a2 = 0x30050
 15472: 95 99 00 00 10           a2 = a2 + 0x100000
 15477: 01                       fallthrough
      :                          @813
 15478: 82 9a                    a3 = u64 [a2]
 15480: c9 a9 0b                 a4 = a2 - a3
 15483: ab 7b 12                 jump @817 if a4 != a0
      :                          @814
 15486: c9 2a 0b                 a4 = a3 - t0
 15489: 01                       fallthrough
      :                          @815
 15490: 82 9c                    a5 = u64 [a2]
 15492: ab ac f2                 jump @813 if a5 != a3
      :                          @816
 15495: 7b 9b                    u64 [a2] = a4
 15497: 33 08                    a1 = 0
 15499: 32 00                    ret
      :                          @817
 15501: 32 00                    ret
      :                          @818 [@dyn 204]
 15503: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15506: 7b 10 18                 u64 [sp + 0x18] = ra
 15509: 7b 15 10                 u64 [sp + 0x10] = s0
 15512: 7b 16 08                 u64 [sp + 0x8] = s1
 15515: 64 75                    s0 = a0
 15517: 82 7a 10                 a3 = u64 [a0 + 0x10]
 15520: 82 77                    a0 = u64 [a0]
 15522: c9 a7 07                 a0 = a0 - a3
 15525: 64 96                    s1 = a2
 15527: ac 97 2b                 jump @821 if a0 <u a2
      :                          @819
 15530: 7b 1a                    u64 [sp] = a3
 15532: 82 57 08                 a0 = u64 [s0 + 0x8]
 15535: c8 a7 07                 a0 = a0 + a3
 15538: 64 69                    a2 = s1
 15540: 50 20 9a 01 4f 01        ra = 410, jump @840
      :                          @820 [@dyn 205]
 15546: 82 17                    a0 = u64 [sp]
 15548: c8 76 06                 s1 = s1 + a0
 15551: 7b 56 10                 u64 [s0 + 0x10] = s1
 15554: 33 07                    a0 = 0
 15556: 82 10 18                 ra = u64 [sp + 0x18]
 15559: 82 15 10                 s0 = u64 [sp + 0x10]
 15562: 82 16 08                 s1 = u64 [sp + 0x8]
 15565: 95 11 20                 sp = sp + 0x20
 15568: 32 00                    ret
      :                          @821
 15570: 64 57                    a0 = s0
 15572: 7b 18                    u64 [sp] = a1
 15574: 64 a8                    a1 = a3
 15576: 64 69                    a2 = s1
 15578: 50 20 9c 01 6f fc        ra = 412, jump @737
      :                          @822 [@dyn 206]
 15584: 82 18                    a1 = u64 [sp]
 15586: 82 5a 10                 a3 = u64 [s0 + 0x10]
 15589: 28 c5                    jump @819
      :                          @823 [@dyn 207]
 15591: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 15594: 7b 10 20                 u64 [sp + 0x20] = ra
 15597: 7b 15 18                 u64 [sp + 0x18] = s0
 15600: 7b 16 10                 u64 [sp + 0x10] = s1
 15603: 64 86                    s1 = a1
 15605: 83 88                    i32 a1 = a1 + 0
 15607: 33 09 80 00              a2 = 0x80
 15611: 64 7a                    a3 = a0
 15613: ae 98 2c                 jump @828 if a1 >=u a2
      :                          @824
 15616: 82 a8 10                 a1 = u64 [a3 + 0x10]
 15619: 82 a7                    a0 = u64 [a3]
 15621: ab 78 13                 jump @827 if a1 != a0
      :                          @825
 15624: 64 a7                    a0 = a3
 15626: 64 a5                    s0 = a3
 15628: 50 20 a0 01 03 fe        ra = 416, jump @780
      :                          @826 [@dyn 208]
 15634: 64 5a                    a3 = s0
 15636: 82 58 10                 a1 = u64 [s0 + 0x10]
 15639: 01                       fallthrough
      :                          @827
 15640: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15643: c8 87 07                 a0 = a0 + a1
 15646: 78 76                    u8 [a0] = s1
 15648: 95 88 01                 a1 = a1 + 0x1
 15651: 7b a8 10                 u64 [a3 + 0x10] = a1
 15654: 28 ac 00                 jump @836
      :                          @828
 15657: 8b 67 0b                 i32 a0 = s1 >> 0xb
 15660: 48 11 0c                 u32 [sp + 12] = 0
 15663: 52 07 1c                 jump @830 if a0 != 0
      :                          @829
 15666: 98 67 06                 a0 = s1 >> 0x6
 15669: 86 77 c0 00              a0 = a0 | 0xc0
 15673: 78 17 0c                 u8 [sp + 0xc] = a0
 15676: 84 67 3f                 a0 = s1 & 0x3f
 15679: 86 77 80 00              a0 = a0 | 0x80
 15683: 78 17 0d                 u8 [sp + 0xd] = a0
 15686: 33 06 02                 s1 = 0x2
 15689: 28 63                    jump @833
      :                          @830
 15691: 8b 67 10                 i32 a0 = s1 >> 0x10
 15694: 52 07 29                 jump @832 if a0 != 0
      :                          @831
 15697: 98 67 0c                 a0 = s1 >> 0xc
 15700: 86 77 e0 00              a0 = a0 | 0xe0
 15704: 78 17 0c                 u8 [sp + 0xc] = a0
 15707: 97 67 34                 a0 = s1 << 0x34
 15710: 98 77 3a                 a0 = a0 >> 0x3a
 15713: 95 77 80 00              a0 = a0 + 0x80
 15717: 78 17 0d                 u8 [sp + 0xd] = a0
 15720: 84 67 3f                 a0 = s1 & 0x3f
 15723: 86 77 80 00              a0 = a0 | 0x80
 15727: 78 17 0e                 u8 [sp + 0xe] = a0
 15730: 33 06 03                 s1 = 0x3
 15733: 28 37                    jump @833
      :                          @832
 15735: 97 67 2b                 a0 = s1 << 0x2b
 15738: 98 77 3d                 a0 = a0 >> 0x3d
 15741: 95 77 f0 00              a0 = a0 + 0xf0
 15745: 78 17 0c                 u8 [sp + 0xc] = a0
 15748: 97 67 2e                 a0 = s1 << 0x2e
 15751: 98 77 3a                 a0 = a0 >> 0x3a
 15754: 95 77 80 00              a0 = a0 + 0x80
 15758: 78 17 0d                 u8 [sp + 0xd] = a0
 15761: 97 67 34                 a0 = s1 << 0x34
 15764: 98 77 3a                 a0 = a0 >> 0x3a
 15767: 95 77 80 00              a0 = a0 + 0x80
 15771: 78 17 0e                 u8 [sp + 0xe] = a0
 15774: 84 67 3f                 a0 = s1 & 0x3f
 15777: 86 77 80 00              a0 = a0 | 0x80
 15781: 78 17 0f                 u8 [sp + 0xf] = a0
 15784: 33 06 04                 s1 = 0x4
 15787: 01                       fallthrough
      :                          @833
 15788: 82 a5 10                 s0 = u64 [a3 + 0x10]
 15791: 82 a7                    a0 = u64 [a3]
 15793: c9 57 07                 a0 = a0 - s0
 15796: ac 67 2e                 jump @837 if a0 <u s1
      :                          @834
 15799: 7b 1a                    u64 [sp] = a3
 15801: 82 a7 08                 a0 = u64 [a3 + 0x8]
 15804: c8 57 07                 a0 = a0 + s0
 15807: 95 18 0c                 a1 = sp + 0xc
 15810: 64 69                    a2 = s1
 15812: 50 20 a2 01 3f           ra = 418, jump @840
      :                          @835 [@dyn 209]
 15817: c8 56 06                 s1 = s1 + s0
 15820: 82 17                    a0 = u64 [sp]
 15822: 7b 76 10                 u64 [a0 + 0x10] = s1
 15825: 01                       fallthrough
      :                          @836
 15826: 33 07                    a0 = 0
 15828: 82 10 20                 ra = u64 [sp + 0x20]
 15831: 82 15 18                 s0 = u64 [sp + 0x18]
 15834: 82 16 10                 s1 = u64 [sp + 0x10]
 15837: 95 11 28                 sp = sp + 0x28
 15840: 32 00                    ret
      :                          @837
 15842: 64 a7                    a0 = a3
 15844: 64 58                    a1 = s0
 15846: 64 69                    a2 = s1
 15848: 64 a5                    s0 = a3
 15850: 50 20 a4 01 5f fb        ra = 420, jump @737
      :                          @838 [@dyn 210]
 15856: 64 5a                    a3 = s0
 15858: 82 55 10                 s0 = u64 [s0 + 0x10]
 15861: 28 c2                    jump @834
      :                          @839 [@dyn 211]
 15863: 64 8a                    a3 = a1
 15865: 33 08 c0 0f 01           a1 = 0x10fc0
 15870: 64 a9                    a2 = a3
 15872: 28 b5 04                 jump @935
      :                          @840
 15875: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15878: 7b 10 18                 u64 [sp + 0x18] = ra
 15881: 7b 15 10                 u64 [sp + 0x10] = s0
 15884: 7b 16 08                 u64 [sp + 0x8] = s1
 15887: 53 19 10 64              jump @849 if a2 <u 16
      :                          @841
 15891: 8d 7a                    i32 a3 = -a0
 15893: 84 a2 07                 t0 = a3 & 0x7
 15896: c8 27 0b                 a4 = a0 + t0
 15899: 51 02 15                 jump @844 if t0 == 0
      :                          @842
 15902: 64 8c                    a5 = a1
 15904: 64 75                    s0 = a0
 15906: 01                       fallthrough
      :                          @843
 15907: 7c ca                    a3 = u8 [a5]
 15909: 78 5a                    u8 [s0] = a3
 15911: 95 55 01                 s0 = s0 + 0x1
 15914: 95 cc 01                 a5 = a5 + 0x1
 15917: ac b5 f6                 jump @843 if s0 <u a4
      :                          @844
 15920: c8 28 03                 t1 = a1 + t0
 15923: c9 29 02                 t0 = a2 - t0
 15926: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 15929: 84 38 07                 a1 = t1 & 0x7
 15932: c8 4b 0a                 a3 = a4 + t2
 15935: 51 08 3b                 jump @851 if a1 == 0
      :                          @845
 15938: 58 04 4b                 jump @854 if t2 <=s 0
      :                          @846
 15941: 97 38 03                 a1 = t1 << 0x3
 15944: 84 80 38                 ra = a1 & 0x38
 15947: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 15950: 82 c5                    s0 = u64 [a5]
 15952: 8d 88                    i32 a1 = -a1
 15954: 84 88 38                 a1 = a1 & 0x38
 15957: 95 cc 08                 a5 = a5 + 0x8
 15960: 01                       fallthrough
      :                          @847
 15961: 82 c6                    s1 = u64 [a5]
 15963: d0 05 05                 s0 = s0 >> ra
 15966: cf 86 09                 a2 = s1 << a1
 15969: d4 59 09                 a2 = a2 | s0
 15972: 7b b9                    u64 [a4] = a2
 15974: 95 bb 08                 a4 = a4 + 0x8
 15977: 95 cc 08                 a5 = a5 + 0x8
 15980: 64 65                    s0 = s1
 15982: ac ab eb                 jump @847 if a4 <u a3
      :                          @848
 15985: 28 1c                    jump @854
      :                          @849
 15987: 64 7a                    a3 = a0
 15989: 52 09 21                 jump @855 if a2 != 0
      :                          @850
 15992: 28 2f                    jump @857
      :                          @851
 15994: 58 04 13                 jump @854 if t2 <=s 0
      :                          @852
 15997: 64 38                    a1 = t1
 15999: 01                       fallthrough
      :                          @853
 16000: 82 89                    a2 = u64 [a1]
 16002: 7b b9                    u64 [a4] = a2
 16004: 95 bb 08                 a4 = a4 + 0x8
 16007: 95 88 08                 a1 = a1 + 0x8
 16010: ac ab f6                 jump @853 if a4 <u a3
      :                          @854
 16013: c8 43 08                 a1 = t1 + t2
 16016: 84 29 07                 a2 = t0 & 0x7
 16019: 51 09 14                 jump @857 if a2 == 0
      :                          @855
 16022: c8 a9 09                 a2 = a2 + a3
 16025: 01                       fallthrough
      :                          @856
 16026: 7c 8b                    a4 = u8 [a1]
 16028: 78 ab                    u8 [a3] = a4
 16030: 95 aa 01                 a3 = a3 + 0x1
 16033: 95 88 01                 a1 = a1 + 0x1
 16036: ac 9a f6                 jump @856 if a3 <u a2
      :                          @857
 16039: 82 10 18                 ra = u64 [sp + 0x18]
 16042: 82 15 10                 s0 = u64 [sp + 0x10]
 16045: 82 16 08                 s1 = u64 [sp + 0x8]
 16048: 95 11 20                 sp = sp + 0x20
 16051: 32 00                    ret
      :                          @858
 16053: 53 19 10 48              jump @867 if a2 <u 16
      :                          @859
 16057: 8d 7a                    i32 a3 = -a0
 16059: 84 aa 07                 a3 = a3 & 0x7
 16062: c8 a7 0b                 a4 = a0 + a3
 16065: 51 0a 0e                 jump @862 if a3 == 0
      :                          @860
 16068: 64 7c                    a5 = a0
 16070: 01                       fallthrough
      :                          @861
 16071: 78 c8                    u8 [a5] = a1
 16073: 95 cc 01                 a5 = a5 + 0x1
 16076: ac bc fb                 jump @861 if a5 <u a4
      :                          @862
 16079: c9 a9 03                 t1 = a2 - a3
 16082: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 16085: c8 cb 0a                 a3 = a4 + a5
 16088: 58 0c 1d                 jump @865 if a5 <=s 0
      :                          @863
 16091: 84 82 ff 00              t0 = a1 & 0xff
 16095: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 16105: ca 92 0c                 a5 = t0 * a2
 16108: 01                       fallthrough
      :                          @864
 16109: 7b bc                    u64 [a4] = a5
 16111: 95 bb 08                 a4 = a4 + 0x8
 16114: ac ab fb                 jump @864 if a4 <u a3
      :                          @865
 16117: 84 39 07                 a2 = t1 & 0x7
 16120: 52 09 0a                 jump @868 if a2 != 0
      :                          @866
 16123: 28 13                    jump @870
      :                          @867
 16125: 64 7a                    a3 = a0
 16127: 51 09 0f                 jump @870 if a2 == 0
      :                          @868
 16130: c8 a9 09                 a2 = a2 + a3
 16133: 01                       fallthrough
      :                          @869
 16134: 78 a8                    u8 [a3] = a1
 16136: 95 aa 01                 a3 = a3 + 0x1
 16139: ac 9a fb                 jump @869 if a3 <u a2
      :                          @870
 16142: 32 00                    ret
      :                          @871 [@dyn 212]
 16144: 82 77                    a0 = u64 [a0]
 16146: 01                       fallthrough
      :                          @872
 16147: 28                       jump @872
      :                          @873
 16148: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 16151: 7b 10 50                 u64 [sp + 0x50] = ra
 16154: 7b 15 48                 u64 [sp + 0x48] = s0
 16157: 7b 16 40                 u64 [sp + 0x40] = s1
 16160: 7b 18                    u64 [sp] = a1
 16162: 98 79 04                 a2 = a0 >> 0x4
 16165: 33 08 27                 a1 = 0x27
 16168: 53 29 71 02 81 00        jump @876 if a2 <u 625
      :                          @874
 16174: 33 08 27                 a1 = 0x27
 16177: 95 1a 3e                 a3 = sp + 0x3e
 16180: 3a 09 08 00 03           a2 = u64 [0x30008]
 16185: 7b 19 10                 u64 [sp + 0x10] = a2
 16188: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
 16194: 33 04 7b 14              t2 = 0x147b
 16198: 33 0b 48 10 01           a4 = 0x11048
 16203: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 16209: 01                       fallthrough
      :                          @875
 16210: 64 72                    t0 = a0
 16212: 82 17 10                 a0 = u64 [sp + 0x10]
 16215: d6 72 07                 a0 = t0 mulhu a0
 16218: 98 77 0b                 a0 = a0 >> 0xb
 16221: 82 19 08                 a2 = u64 [sp + 0x8]
 16224: c0 97 0c                 i32 a5 = a0 * a2
 16227: c8 2c 06                 s1 = a5 + t0
 16230: 97 6c 30                 a5 = s1 << 0x30
 16233: 98 cc 32                 a5 = a5 >> 0x32
 16236: ca 4c 0c                 a5 = a5 * t2
 16239: 98 c3 11                 t1 = a5 >> 0x11
 16242: 98 cc 10                 a5 = a5 >> 0x10
 16245: 84 cc fe 07              a5 = a5 & 0x7fe
 16249: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
 16252: c8 69 09                 a2 = a2 + s1
 16255: 97 99 31                 a2 = a2 << 0x31
 16258: 98 99 30                 a2 = a2 >> 0x30
 16261: c8 bc 0c                 a5 = a5 + a4
 16264: 7c c6                    s1 = u8 [a5]
 16266: 7c cc 01                 a5 = u8 [a5 + 0x1]
 16269: c8 b9 09                 a2 = a2 + a4
 16272: 7c 95 01                 s0 = u8 [a2 + 0x1]
 16275: 7c 99                    a2 = u8 [a2]
 16277: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 16280: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
 16283: 78 a5 01                 u8 [a3 + 0x1] = s0
 16286: 78 a9                    u8 [a3] = a2
 16288: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
 16291: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
 16294: ac 20 ac                 jump @875 if ra <u t0
      :                          @876
 16297: 54 17 63 3b              jump @878 if a0 <=u 99
      :                          @877
 16301: 97 79 30                 a2 = a0 << 0x30
 16304: 98 99 32                 a2 = a2 >> 0x32
 16307: 96 99 7b 14              a2 = a2 * 0x147b
 16311: 98 99 11                 a2 = a2 >> 0x11
 16314: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
 16317: c8 a7 07                 a0 = a0 + a3
 16320: 97 77 31                 a0 = a0 << 0x31
 16323: 98 77 30                 a0 = a0 >> 0x30
 16326: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16329: 33 0a 48 10 01           a3 = 0x11048
 16334: c8 a7 07                 a0 = a0 + a3
 16337: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 16340: 7c 77                    a0 = u8 [a0]
 16342: 95 1b 19                 a4 = sp + 0x19
 16345: c8 8b 0b                 a4 = a4 + a1
 16348: 78 ba 01                 u8 [a4 + 0x1] = a3
 16351: 78 b7                    u8 [a4] = a0
 16353: 64 97                    a0 = a2
 16355: 01                       fallthrough
      :                          @878
 16356: 55 17 0a 14              jump @880 if a0 >=u 10
      :                          @879
 16360: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 16363: 95 19 19                 a2 = sp + 0x19
 16366: c8 89 09                 a2 = a2 + a1
 16369: 83 77 30                 i32 a0 = a0 + 0x30
 16372: 78 97                    u8 [a2] = a0
 16374: 28 21                    jump @881
      :                          @880
 16376: 97 77 01                 a0 = a0 << 0x1
 16379: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
 16382: 33 09 48 10 01           a2 = 0x11048
 16387: c8 97 07                 a0 = a0 + a2
 16390: 7c 79 01                 a2 = u8 [a0 + 0x1]
 16393: 7c 77                    a0 = u8 [a0]
 16395: 95 1a 19                 a3 = sp + 0x19
 16398: c8 8a 0a                 a3 = a3 + a1
 16401: 78 a9 01                 u8 [a3 + 0x1] = a2
 16404: 78 a7                    u8 [a3] = a0
 16406: 01                       fallthrough
      :                          @881
 16407: 95 1a 19                 a3 = sp + 0x19
 16410: c8 8a 0a                 a3 = a3 + a1
 16413: 9a 8b 27                 a4 = 0x27 - a1
 16416: 33 08 f0 0f 01           a1 = 0x10ff0
 16421: 82 17                    a0 = u64 [sp]
 16423: 33 09                    a2 = 0
 16425: 50 20 aa 01 13           ra = 426, jump @883
      :                          @882 [@dyn 213]
 16430: 82 10 50                 ra = u64 [sp + 0x50]
 16433: 82 15 48                 s0 = u64 [sp + 0x48]
 16436: 82 16 40                 s1 = u64 [sp + 0x40]
 16439: 95 11 58                 sp = sp + 0x58
 16442: 32 00                    ret
      :                          @883
 16444: 95 11 98                 sp = sp + 0xffffffffffffff98
 16447: 7b 10 60                 u64 [sp + 0x60] = ra
 16450: 7b 15 58                 u64 [sp + 0x58] = s0
 16453: 7b 16 50                 u64 [sp + 0x50] = s1
 16456: 80 73 34                 t1 = u32 [a0 + 0x34]
 16459: 7b 1a 20                 u64 [sp + 0x20] = a3
 16462: 64 9c                    a5 = a2
 16464: 84 36 01                 s1 = t1 & 0x1
 16467: 33 02 2b                 t0 = 0x2b
 16470: 33 09 00 00 11           a2 = 0x110000
 16475: 84 3a 04                 a3 = t1 & 0x4
 16478: 7b 1b 28                 u64 [sp + 0x28] = a4
 16481: c8 b6 04                 t2 = s1 + a4
 16484: 7b 1c 30                 u64 [sp + 0x30] = a5
 16487: 52 0a 10                 jump @886 if a3 != 0
      :                          @884
 16490: 49 11 38                 u64 [sp + 56] = 0
 16493: 82 78                    a1 = u64 [a0]
 16495: 94 69 2b                 a2 = 0x2b if s1 != 0
 16498: 52 08 35                 jump @890 if a1 != 0
      :                          @885
 16501: 28 56                    jump @895
      :                          @886
 16503: 7b 18 38                 u64 [sp + 0x38] = a1
 16506: 33 09                    a2 = 0
 16508: 51 0c 1b                 jump @889 if a5 == 0
      :                          @887
 16511: 82 1b 38                 a4 = u64 [sp + 0x38]
 16514: 01                       fallthrough
      :                          @888
 16515: 7d b5                    s0 = i8 [a4]
 16517: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
 16520: 85 5a 01                 a3 = s0 ^ 0x1
 16523: c8 a9 09                 a2 = a2 + a3
 16526: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 16529: 95 bb 01                 a4 = a4 + 0x1
 16532: 52 0c ef                 jump @888 if a5 != 0
      :                          @889
 16535: c8 94 04                 t2 = t2 + a2
 16538: 33 09 00 00 11           a2 = 0x110000
 16543: 82 78                    a1 = u64 [a0]
 16545: db 62 09                 a2 = t0 if s1 != 0
 16548: 51 08 27                 jump @895 if a1 == 0
      :                          @890
 16551: 82 7a 08                 a3 = u64 [a0 + 0x8]
 16554: ae a4 21                 jump @895 if t2 >=u a3
      :                          @891
 16557: 84 38 08                 a1 = t1 & 0x8
 16560: 52 08 51                 jump @898 if a1 != 0
      :                          @892
 16563: 7c 76 38                 s1 = u8 [a0 + 0x38]
 16566: c9 4a 0a                 a3 = a3 - t2
 16569: 7b 19 18                 u64 [sp + 0x18] = a2
 16572: 5a 16 01 a0 00           jump @905 if s1 >s 1
      :                          @893
 16577: 52 06 ad 00              jump @907 if s1 != 0
      :                          @894
 16581: 7b 1a 10                 u64 [sp + 0x10] = a3
 16584: 28 ac 00                 jump @908
      :                          @895
 16587: 82 75 20                 s0 = u64 [a0 + 0x20]
 16590: 82 76 28                 s1 = u64 [a0 + 0x28]
 16593: 64 57                    a0 = s0
 16595: 64 68                    a1 = s1
 16597: 82 1a 38                 a3 = u64 [sp + 0x38]
 16600: 82 1b 30                 a4 = u64 [sp + 0x30]
 16603: 50 20 ac 01 75 01        ra = 428, jump @928
      :                          @896 [@dyn 214]
 16609: 33 08 01                 a1 = 0x1
 16612: 52 07 be 00              jump @913 if a0 != 0
      :                          @897
 16616: 82 6c 18                 a5 = u64 [s1 + 0x18]
 16619: 64 57                    a0 = s0
 16621: 82 18 20                 a1 = u64 [sp + 0x20]
 16624: 82 19 28                 a2 = u64 [sp + 0x28]
 16627: 82 10 60                 ra = u64 [sp + 0x60]
 16630: 82 15 58                 s0 = u64 [sp + 0x58]
 16633: 82 16 50                 s1 = u64 [sp + 0x50]
 16636: 95 11 68                 sp = sp + 0x68
 16639: 32 0c                    jump [a5]
      :                          @898
 16641: 7b 1a 40                 u64 [sp + 0x40] = a3
 16644: 64 45                    s0 = t2
 16646: 81 78 30                 a1 = i32 [a0 + 0x30]
 16649: 7b 18 10                 u64 [sp + 0x10] = a1
 16652: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 16655: 7b 1a 08                 u64 [sp + 0x8] = a3
 16658: 82 7a 20                 a3 = u64 [a0 + 0x20]
 16661: 82 78 28                 a1 = u64 [a0 + 0x28]
 16664: 48 17 30 30              u32 [a0 + 48] = 0x30
 16668: 7b 17                    u64 [sp] = a0
 16670: 46 17 38 01              u8 [a0 + 56] = 0x1
 16674: 7b 1a 48                 u64 [sp + 0x48] = a3
 16677: 64 a7                    a0 = a3
 16679: 64 86                    s1 = a1
 16681: 82 1a 38                 a3 = u64 [sp + 0x38]
 16684: 82 1b 30                 a4 = u64 [sp + 0x30]
 16687: 50 20 ae 01 21 01        ra = 430, jump @928
      :                          @899 [@dyn 215]
 16693: 52 07 69                 jump @912 if a0 != 0
      :                          @900
 16696: 82 17 40                 a0 = u64 [sp + 0x40]
 16699: c9 57 05                 s0 = a0 - s0
 16702: 95 55 01                 s0 = s0 + 0x1
 16705: 01                       fallthrough
      :                          @901
 16706: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 16709: 51 05 cb 00              jump @923 if s0 == 0
      :                          @902
 16713: 82 69 20                 a2 = u64 [s1 + 0x20]
 16716: 33 08 30                 a1 = 0x30
 16719: 82 17 48                 a0 = u64 [sp + 0x48]
 16722: b4 90 02 b0 01           ra = 432, jump [a2]
      :                          @903 [@dyn 216]
 16727: 51 07 eb                 jump @901 if a0 == 0
      :                          @904
 16730: 28 44                    jump @912
      :                          @905
 16732: 52 16 02 12              jump @907 if s1 != 2
      :                          @906
 16736: 98 a6 01                 s1 = a3 >> 0x1
 16739: 95 a8 01                 a1 = a3 + 0x1
 16742: 98 88 01                 a1 = a1 >> 0x1
 16745: 7b 18 10                 u64 [sp + 0x10] = a1
 16748: 28 08                    jump @908
      :                          @907
 16750: 64 a6                    s1 = a3
 16752: 49 11 10                 u64 [sp + 16] = 0
 16755: 01                       fallthrough
      :                          @908
 16756: 82 78 20                 a1 = u64 [a0 + 0x20]
 16759: 7b 18 48                 u64 [sp + 0x48] = a1
 16762: 82 75 28                 s0 = u64 [a0 + 0x28]
 16765: 81 77 30                 a0 = i32 [a0 + 0x30]
 16768: 7b 17 40                 u64 [sp + 0x40] = a0
 16771: 95 66 01                 s1 = s1 + 0x1
 16774: 01                       fallthrough
      :                          @909
 16775: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 16778: 51 06 28                 jump @914 if s1 == 0
      :                          @910
 16781: 82 59 20                 a2 = u64 [s0 + 0x20]
 16784: 82 17 48                 a0 = u64 [sp + 0x48]
 16787: 82 18 40                 a1 = u64 [sp + 0x40]
 16790: b4 90 02 b2 01           ra = 434, jump [a2]
      :                          @911 [@dyn 217]
 16795: 51 07 ec                 jump @909 if a0 == 0
      :                          @912
 16798: 33 08 01                 a1 = 0x1
 16801: 01                       fallthrough
      :                          @913
 16802: 64 87                    a0 = a1
 16804: 82 10 60                 ra = u64 [sp + 0x60]
 16807: 82 15 58                 s0 = u64 [sp + 0x58]
 16810: 82 16 50                 s1 = u64 [sp + 0x50]
 16813: 95 11 68                 sp = sp + 0x68
 16816: 32 00                    ret
      :                          @914
 16818: 82 16 48                 s1 = u64 [sp + 0x48]
 16821: 64 67                    a0 = s1
 16823: 64 58                    a1 = s0
 16825: 82 19 18                 a2 = u64 [sp + 0x18]
 16828: 82 1a 38                 a3 = u64 [sp + 0x38]
 16831: 82 1b 30                 a4 = u64 [sp + 0x30]
 16834: 50 20 b4 01 8e 00        ra = 436, jump @928
      :                          @915 [@dyn 218]
 16840: 33 08 01                 a1 = 0x1
 16843: 52 07 d7                 jump @913 if a0 != 0
      :                          @916
 16846: 82 5a 18                 a3 = u64 [s0 + 0x18]
 16849: 64 67                    a0 = s1
 16851: 82 18 20                 a1 = u64 [sp + 0x20]
 16854: 82 19 28                 a2 = u64 [sp + 0x28]
 16857: b4 a0 02 b6 01           ra = 438, jump [a3]
      :                          @917 [@dyn 219]
 16862: 33 08 01                 a1 = 0x1
 16865: 52 07 c1                 jump @913 if a0 != 0
      :                          @918
 16868: 82 17 10                 a0 = u64 [sp + 0x10]
 16871: 9a 77                    a0 = -a0
 16873: 7b 17 38                 u64 [sp + 0x38] = a0
 16876: 33 06 ff                 s1 = 0xffffffffffffffff
 16879: 01                       fallthrough
      :                          @919
 16880: 82 17 38                 a0 = u64 [sp + 0x38]
 16883: c8 67 07                 a0 = a0 + s1
 16886: 51 17 ff 45              jump @926 if a0 == 4294967295
      :                          @920
 16890: 82 59 20                 a2 = u64 [s0 + 0x20]
 16893: 82 17 48                 a0 = u64 [sp + 0x48]
 16896: 82 18 40                 a1 = u64 [sp + 0x40]
 16899: b4 90 02 b8 01           ra = 440, jump [a2]
      :                          @921 [@dyn 220]
 16904: 95 66 01                 s1 = s1 + 0x1
 16907: 51 07 e5                 jump @919 if a0 == 0
      :                          @922
 16910: 28 39                    jump @927
      :                          @923
 16912: 82 6a 18                 a3 = u64 [s1 + 0x18]
 16915: 82 17 48                 a0 = u64 [sp + 0x48]
 16918: 82 18 20                 a1 = u64 [sp + 0x20]
 16921: 82 19 28                 a2 = u64 [sp + 0x28]
 16924: b4 a0 02 ba 01           ra = 442, jump [a3]
      :                          @924 [@dyn 221]
 16929: 33 08 01                 a1 = 0x1
 16932: 52 07 7e ff              jump @913 if a0 != 0
      :                          @925
 16936: 33 08                    a1 = 0
 16938: 82 16                    s1 = u64 [sp]
 16940: 82 17 10                 a0 = u64 [sp + 0x10]
 16943: 7a 67 30                 u32 [s1 + 0x30] = a0
 16946: 82 17 08                 a0 = u64 [sp + 0x8]
 16949: 78 67 38                 u8 [s1 + 0x38] = a0
 16952: 28 6a ff                 jump @913
      :                          @926
 16955: 82 16 10                 s1 = u64 [sp + 0x10]
 16958: 82 17 10                 a0 = u64 [sp + 0x10]
 16961: d8 76 08                 a1 = s1 <u a0
 16964: 28 5e ff                 jump @913
      :                          @927
 16967: 82 17 10                 a0 = u64 [sp + 0x10]
 16970: d8 76 08                 a1 = s1 <u a0
 16973: 28 55 ff                 jump @913
      :                          @928
 16976: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 16979: 7b 10 20                 u64 [sp + 0x20] = ra
 16982: 7b 15 18                 u64 [sp + 0x18] = s0
 16985: 7b 16 10                 u64 [sp + 0x10] = s1
 16988: 83 9c                    i32 a5 = a2 + 0
 16990: 33 02 00 00 11           t0 = 0x110000
 16995: 64 a6                    s1 = a3
 16997: 64 85                    s0 = a1
 16999: 64 7a                    a3 = a0
 17001: aa 2c 21                 jump @931 if a5 == t0
      :                          @929
 17004: 82 5c 20                 a5 = u64 [s0 + 0x20]
 17007: 64 a7                    a0 = a3
 17009: 64 98                    a1 = a2
 17011: 7b 1b 08                 u64 [sp + 0x8] = a4
 17014: 7b 1a                    u64 [sp] = a3
 17016: b4 c0 02 bc 01           ra = 444, jump [a5]
      :                          @930 [@dyn 222]
 17021: 82 1a                    a3 = u64 [sp]
 17023: 82 1b 08                 a4 = u64 [sp + 0x8]
 17026: 64 78                    a1 = a0
 17028: 33 07 01                 a0 = 0x1
 17031: 52 08 20                 jump @934 if a1 != 0
      :                          @931
 17034: 51 06 1a                 jump @933 if s1 == 0
      :                          @932
 17037: 82 5c 18                 a5 = u64 [s0 + 0x18]
 17040: 64 a7                    a0 = a3
 17042: 64 68                    a1 = s1
 17044: 64 b9                    a2 = a4
 17046: 82 10 20                 ra = u64 [sp + 0x20]
 17049: 82 15 18                 s0 = u64 [sp + 0x18]
 17052: 82 16 10                 s1 = u64 [sp + 0x10]
 17055: 95 11 28                 sp = sp + 0x28
 17058: 32 0c                    jump [a5]
      :                          @933
 17060: 33 07                    a0 = 0
 17062: 01                       fallthrough
      :                          @934
 17063: 82 10 20                 ra = u64 [sp + 0x20]
 17066: 82 15 18                 s0 = u64 [sp + 0x18]
 17069: 82 16 10                 s1 = u64 [sp + 0x10]
 17072: 95 11 28                 sp = sp + 0x28
 17075: 32 00                    ret
      :                          @935
 17077: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 17081: 7b 10 80 00              u64 [sp + 0x80] = ra
 17085: 7b 15 78                 u64 [sp + 0x78] = s0
 17088: 7b 16 70                 u64 [sp + 0x70] = s1
 17091: 49 11 60 20              u64 [sp + 96] = 0x20
 17095: 33 0a 03                 a3 = 0x3
 17098: 78 1a 68                 u8 [sp + 0x68] = a3
 17101: 82 96 20                 s1 = u64 [a2 + 0x20]
 17104: 49 11 30                 u64 [sp + 48] = 0
 17107: 49 11 40                 u64 [sp + 64] = 0
 17110: 7b 17 50                 u64 [sp + 0x50] = a0
 17113: 7b 18 58                 u64 [sp + 0x58] = a1
 17116: 51 06 0a 01              jump @957 if s1 == 0
      :                          @936
 17120: 82 97 28                 a0 = u64 [a2 + 0x28]
 17123: 51 07 79 01              jump @967 if a0 == 0
      :                          @937
 17127: 49 11 28                 u64 [sp + 40] = 0
 17130: 82 95                    s0 = u64 [a2]
 17132: 7b 19 08                 u64 [sp + 0x8] = a2
 17135: 82 98 10                 a1 = u64 [a2 + 0x10]
 17138: 7b 18 18                 u64 [sp + 0x18] = a1
 17141: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 17144: 97 88 03                 a1 = a1 << 0x3
 17147: 98 88 03                 a1 = a1 >> 0x3
 17150: 95 88 01                 a1 = a1 + 0x1
 17153: 7b 18                    u64 [sp] = a1
 17155: 95 55 08                 s0 = s0 + 0x8
 17158: 96 78 38                 a1 = a0 * 0x38
 17161: 95 66 18                 s1 = s1 + 0x18
 17164: 33 07 a8 01              a0 = 0x1a8
 17168: 7b 17 10                 u64 [sp + 0x10] = a0
 17171: 01                       fallthrough
      :                          @938
 17172: 7b 18 20                 u64 [sp + 0x20] = a1
 17175: 82 59                    a2 = u64 [s0]
 17177: 51 09 18                 jump @941 if a2 == 0
      :                          @939
 17180: 82 1a 58                 a3 = u64 [sp + 0x58]
 17183: 82 17 50                 a0 = u64 [sp + 0x50]
 17186: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 17189: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17192: b4 a0 02 be 01           ra = 446, jump [a3]
      :                          @940 [@dyn 223]
 17197: 52 07 55 01              jump @970 if a0 != 0
      :                          @941
 17201: 81 67 10                 a0 = i32 [s1 + 0x10]
 17204: 7a 17 60                 u32 [sp + 0x60] = a0
 17207: 7c 67 18                 a0 = u8 [s1 + 0x18]
 17210: 78 17 68                 u8 [sp + 0x68] = a0
 17213: 81 67 14                 a0 = i32 [s1 + 0x14]
 17216: 7a 17 64                 u32 [sp + 0x64] = a0
 17219: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17222: 82 67                    a0 = u64 [s1]
 17224: 51 08 26                 jump @946 if a1 == 0
      :                          @942
 17227: 52 18 01 16              jump @944 if a1 != 1
      :                          @943
 17231: 97 77 04                 a0 = a0 << 0x4
 17234: 82 18 18                 a1 = u64 [sp + 0x18]
 17237: c8 87 07                 a0 = a0 + a1
 17240: 82 78 08                 a1 = u64 [a0 + 0x8]
 17243: 82 19 10                 a2 = u64 [sp + 0x10]
 17246: aa 98 07                 jump @945 if a1 == a2
      :                          @944
 17249: 33 08                    a1 = 0
 17251: 28 0f                    jump @947
      :                          @945
 17253: 82 77                    a0 = u64 [a0]
 17255: 82 77                    a0 = u64 [a0]
 17257: 33 08 01                 a1 = 0x1
 17260: 28 06                    jump @947
      :                          @946
 17262: 33 08 01                 a1 = 0x1
 17265: 01                       fallthrough
      :                          @947
 17266: 7b 18 30                 u64 [sp + 0x30] = a1
 17269: 7b 17 38                 u64 [sp + 0x38] = a0
 17272: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 17275: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 17278: 51 08 26                 jump @952 if a1 == 0
      :                          @948
 17281: 52 18 01 16              jump @950 if a1 != 1
      :                          @949
 17285: 97 77 04                 a0 = a0 << 0x4
 17288: 82 18 18                 a1 = u64 [sp + 0x18]
 17291: c8 87 07                 a0 = a0 + a1
 17294: 82 78 08                 a1 = u64 [a0 + 0x8]
 17297: 82 19 10                 a2 = u64 [sp + 0x10]
 17300: aa 98 07                 jump @951 if a1 == a2
      :                          @950
 17303: 33 08                    a1 = 0
 17305: 28 0f                    jump @953
      :                          @951
 17307: 82 77                    a0 = u64 [a0]
 17309: 82 77                    a0 = u64 [a0]
 17311: 33 08 01                 a1 = 0x1
 17314: 28 06                    jump @953
      :                          @952
 17316: 33 08 01                 a1 = 0x1
 17319: 01                       fallthrough
      :                          @953
 17320: 7b 18 40                 u64 [sp + 0x40] = a1
 17323: 7b 17 48                 u64 [sp + 0x48] = a0
 17326: 82 67 08                 a0 = u64 [s1 + 0x8]
 17329: 97 77 04                 a0 = a0 << 0x4
 17332: 82 18 18                 a1 = u64 [sp + 0x18]
 17335: c8 78 08                 a1 = a1 + a0
 17338: 82 87                    a0 = u64 [a1]
 17340: 82 89 08                 a2 = u64 [a1 + 0x8]
 17343: 95 18 30                 a1 = sp + 0x30
 17346: b4 90 02 c0 01           ra = 448, jump [a2]
      :                          @954 [@dyn 224]
 17351: 52 07 bb 00              jump @970 if a0 != 0
      :                          @955
 17355: 95 55 10                 s0 = s0 + 0x10
 17358: 82 18 20                 a1 = u64 [sp + 0x20]
 17361: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 17364: 95 66 38                 s1 = s1 + 0x38
 17367: 82 17 28                 a0 = u64 [sp + 0x28]
 17370: 95 77 01                 a0 = a0 + 0x1
 17373: 7b 17 28                 u64 [sp + 0x28] = a0
 17376: 52 08 34 ff              jump @938 if a1 != 0
      :                          @956
 17380: 28 6b                    jump @965
      :                          @957
 17382: 82 97 18                 a0 = u64 [a2 + 0x18]
 17385: 51 07 73                 jump @967 if a0 == 0
      :                          @958
 17388: 82 95 10                 s0 = u64 [a2 + 0x10]
 17391: 33 0a                    a3 = 0
 17393: 97 78 04                 a1 = a0 << 0x4
 17396: c8 58 08                 a1 = a1 + s0
 17399: 7b 18 20                 u64 [sp + 0x20] = a1
 17402: 7b 19 08                 u64 [sp + 0x8] = a2
 17405: 82 96                    s1 = u64 [a2]
 17407: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17410: 97 77 04                 a0 = a0 << 0x4
 17413: 98 77 04                 a0 = a0 >> 0x4
 17416: 95 77 01                 a0 = a0 + 0x1
 17419: 7b 17                    u64 [sp] = a0
 17421: 95 66 08                 s1 = s1 + 0x8
 17424: 01                       fallthrough
      :                          @959
 17425: 7b 1a 28                 u64 [sp + 0x28] = a3
 17428: 82 69                    a2 = u64 [s1]
 17430: 51 09 17                 jump @962 if a2 == 0
      :                          @960
 17433: 82 1a 58                 a3 = u64 [sp + 0x58]
 17436: 82 17 50                 a0 = u64 [sp + 0x50]
 17439: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 17442: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17445: b4 a0 02 c2 01           ra = 450, jump [a3]
      :                          @961 [@dyn 225]
 17450: 52 07 58                 jump @970 if a0 != 0
      :                          @962
 17453: 82 57                    a0 = u64 [s0]
 17455: 82 59 08                 a2 = u64 [s0 + 0x8]
 17458: 95 18 30                 a1 = sp + 0x30
 17461: b4 90 02 c4 01           ra = 452, jump [a2]
      :                          @963 [@dyn 226]
 17466: 52 07 48                 jump @970 if a0 != 0
      :                          @964
 17469: 95 66 10                 s1 = s1 + 0x10
 17472: 95 55 10                 s0 = s0 + 0x10
 17475: 82 1a 28                 a3 = u64 [sp + 0x28]
 17478: 95 aa 01                 a3 = a3 + 0x1
 17481: 82 17 20                 a0 = u64 [sp + 0x20]
 17484: ab 75 c5                 jump @959 if s0 != a0
      :                          @965
 17487: 82 19 08                 a2 = u64 [sp + 0x8]
 17490: 82 1a                    a3 = u64 [sp]
 17492: 82 97 08                 a0 = u64 [a2 + 0x8]
 17495: ac 7a 0d                 jump @968 if a3 <u a0
      :                          @966
 17498: 28 2d                    jump @971
      :                          @967
 17500: 33 0a                    a3 = 0
 17502: 82 97 08                 a0 = u64 [a2 + 0x8]
 17505: 54 07 26                 jump @971 if a0 <=u 0
      :                          @968
 17508: 82 97                    a0 = u64 [a2]
 17510: 97 a8 04                 a1 = a3 << 0x4
 17513: c8 87 09                 a2 = a0 + a1
 17516: 82 1a 58                 a3 = u64 [sp + 0x58]
 17519: 82 17 50                 a0 = u64 [sp + 0x50]
 17522: 82 98                    a1 = u64 [a2]
 17524: 82 99 08                 a2 = u64 [a2 + 0x8]
 17527: 82 aa 18                 a3 = u64 [a3 + 0x18]
 17530: b4 a0 02 c6 01           ra = 454, jump [a3]
      :                          @969 [@dyn 227]
 17535: 51 07 08                 jump @971 if a0 == 0
      :                          @970
 17538: 33 07 01                 a0 = 0x1
 17541: 28 05                    jump @972
      :                          @971
 17543: 33 07                    a0 = 0
 17545: 01                       fallthrough
      :                          @972
 17546: 82 10 80 00              ra = u64 [sp + 0x80]
 17550: 82 15 78                 s0 = u64 [sp + 0x78]
 17553: 82 16 70                 s1 = u64 [sp + 0x70]
 17556: 95 11 88 00              sp = sp + 0x88
 17560: 32 00                    ret
      :                          @973 [@dyn 228]
 17562: 32 00                    ret
      :                          @974 [@dyn 229]
 17564: 95 11 80                 sp = sp + 0xffffffffffffff80
 17567: 7b 10 78                 u64 [sp + 0x78] = ra
 17570: 7b 15 70                 u64 [sp + 0x70] = s0
 17573: 7b 16 68                 u64 [sp + 0x68] = s1
 17576: 64 92                    t0 = a2
 17578: 33 00                    ra = 0
 17580: 33 0b                    a4 = 0
 17582: 33 05                    s0 = 0
 17584: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 17594: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 17600: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 17610: 82 79 10                 a2 = u64 [a0 + 0x10]
 17613: 7b 19 48                 u64 [sp + 0x48] = a2
 17616: 82 79                    a2 = u64 [a0]
 17618: 7b 19 38                 u64 [sp + 0x38] = a2
 17621: 82 77 08                 a0 = u64 [a0 + 0x8]
 17624: 7b 17 30                 u64 [sp + 0x30] = a0
 17627: 33 07 38 10 01           a0 = 0x11038
 17632: 7b 17 08                 u64 [sp + 0x8] = a0
 17635: 3a 07 10 00 03           a0 = u64 [0x30010]
 17640: 7b 17 60                 u64 [sp + 0x60] = a0
 17643: 7b 18 58                 u64 [sp + 0x58] = a1
 17646: 95 88 08                 a1 = a1 + 0x8
 17649: 7b 18                    u64 [sp] = a1
 17651: 33 0c 0a                 a5 = 0xa
 17654: 7b 12 20                 u64 [sp + 0x20] = t0
 17657: 7b 13 18                 u64 [sp + 0x18] = t1
 17660: 7b 14 10                 u64 [sp + 0x10] = t2
 17663: 28 3b                    jump @978
      :                          @975
 17665: 64 06                    s1 = ra
 17667: c8 89 07                 a0 = a2 + a1
 17670: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 17673: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 17676: 88 77 01                 a0 = a0 <u 0x1
 17679: 01                       fallthrough
      :                          @976
 17680: 82 1a 48                 a3 = u64 [sp + 0x48]
 17683: 78 a7                    u8 [a3] = a0
 17685: 82 17 30                 a0 = u64 [sp + 0x30]
 17688: 82 7a 18                 a3 = u64 [a0 + 0x18]
 17691: 82 17 38                 a0 = u64 [sp + 0x38]
 17694: b4 a0 02 cc 01           ra = 460, jump [a3]
      :                          @977 [@dyn 230]
 17699: 64 5b                    a4 = s0
 17701: 82 12 20                 t0 = u64 [sp + 0x20]
 17704: 82 13 18                 t1 = u64 [sp + 0x18]
 17707: 82 14 10                 t2 = u64 [sp + 0x10]
 17710: 64 60                    ra = s1
 17712: 33 0c 0a                 a5 = 0xa
 17715: 82 15 40                 s0 = u64 [sp + 0x40]
 17718: 52 07 64 01              jump @1019 if a0 != 0
      :                          @978
 17722: 84 57 ff 00              a0 = s0 & 0xff
 17726: 52 07 58 01              jump @1018 if a0 != 0
      :                          @979
 17730: 7b 1b 50                 u64 [sp + 0x50] = a4
 17733: ae 02 0a                 jump @982 if t0 >=u ra
      :                          @980
 17736: 28 ef 00                 jump @1009
      :                          @981
 17739: ac 02 ec 00              jump @1009 if t0 <u ra
      :                          @982
 17743: c9 02 08                 a1 = t0 - ra
 17746: 82 16 58                 s1 = u64 [sp + 0x58]
 17749: c8 06 06                 s1 = s1 + ra
 17752: 55 18 10 1d              jump @988 if a1 >=u 16
      :                          @983
 17756: aa 02 d8 00              jump @1008 if t0 == ra
      :                          @984
 17760: 33 0a                    a3 = 0
 17762: 01                       fallthrough
      :                          @985
 17763: c8 a6 07                 a0 = s1 + a3
 17766: 7c 77                    a0 = u8 [a0]
 17768: aa c7 a5 00              jump @1003 if a0 == a5
      :                          @986
 17772: 95 aa 01                 a3 = a3 + 0x1
 17775: ab a8 f4                 jump @985 if a1 != a3
      :                          @987
 17778: 28 c2 00                 jump @1008
      :                          @988
 17781: 95 69 07                 a2 = s1 + 0x7
 17784: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 17787: c9 6a 07                 a0 = a3 - s1
 17790: d3 6a 0a                 a3 = a3 ^ s1
 17793: 88 aa 01                 a3 = a3 <u 0x1
 17796: 88 7b 01                 a4 = a0 <u 0x1
 17799: d4 ba 0a                 a3 = a3 | a4
 17802: 51 0a 45                 jump @994 if a3 == 0
      :                          @989
 17805: 33 07                    a0 = 0
 17807: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17810: 82 1b                    a4 = u64 [sp]
 17812: c8 0b 0b                 a4 = a4 + ra
 17815: 28 08                    jump @991
      :                          @990
 17817: 82 1b                    a4 = u64 [sp]
 17819: c8 0b 0b                 a4 = a4 + ra
 17822: 01                       fallthrough
      :                          @991
 17823: c8 76 0c                 a5 = s1 + a0
 17826: 82 cc                    a5 = u64 [a5]
 17828: c8 7b 09                 a2 = a4 + a0
 17831: 82 99                    a2 = u64 [a2]
 17833: d3 4c 05                 s0 = a5 ^ t2
 17836: c8 35 05                 s0 = s0 + t1
 17839: e0 c5 0c                 a5 = s0 & ~a5
 17842: d3 49 05                 s0 = a2 ^ t2
 17845: c8 35 05                 s0 = s0 + t1
 17848: e0 95 09                 a2 = s0 & ~a2
 17851: d4 c9 09                 a2 = a2 | a5
 17854: 82 1c 60                 a5 = u64 [sp + 0x60]
 17857: d2 c9 09                 a2 = a2 & a5
 17860: 52 09 1f                 jump @997 if a2 != 0
      :                          @992
 17863: 95 77 10                 a0 = a0 + 0x10
 17866: ae 7a d5                 jump @991 if a3 >=u a0
      :                          @993
 17869: 28 16                    jump @997
      :                          @994
 17871: c8 a6 0b                 a4 = s1 + a3
 17874: 7c bb                    a4 = u8 [a4]
 17876: aa cb 51                 jump @1006 if a4 == a5
      :                          @995
 17879: 95 aa 01                 a3 = a3 + 0x1
 17882: ab a7 f5                 jump @994 if a0 != a3
      :                          @996
 17885: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 17888: ae 7a b9                 jump @990 if a3 >=u a0
      :                          @997
 17891: aa 87 9b 00              jump @1015 if a0 == a1
      :                          @998
 17895: 33 0a                    a3 = 0
 17897: c8 76 06                 s1 = s1 + a0
 17900: c9 72 08                 a1 = t0 - a0
 17903: c9 08 08                 a1 = a1 - ra
 17906: 33 0c 0a                 a5 = 0xa
 17909: 82 1b 50                 a4 = u64 [sp + 0x50]
 17912: 01                       fallthrough
      :                          @999
 17913: c8 a6 09                 a2 = s1 + a3
 17916: 7c 99                    a2 = u8 [a2]
 17918: aa c9 0b                 jump @1002 if a2 == a5
      :                          @1000
 17921: 95 aa 01                 a3 = a3 + 0x1
 17924: ab a8 f5                 jump @999 if a1 != a3
      :                          @1001
 17927: 28 2d                    jump @1008
      :                          @1002
 17929: c8 7a 0a                 a3 = a3 + a0
 17932: 01                       fallthrough
      :                          @1003
 17933: c8 0a 0a                 a3 = a3 + ra
 17936: 95 a0 01                 ra = a3 + 0x1
 17939: ae 2a 38 ff              jump @981 if a3 >=u t0
      :                          @1004
 17943: 82 17 58                 a0 = u64 [sp + 0x58]
 17946: c8 7a 0a                 a3 = a3 + a0
 17949: 7c a7                    a0 = u8 [a3]
 17951: ab c7 2c ff              jump @981 if a0 != a5
      :                          @1005
 17955: 28 62                    jump @1016
      :                          @1006
 17957: 82 1b 50                 a4 = u64 [sp + 0x50]
 17960: c8 0a 0a                 a3 = a3 + ra
 17963: 95 a0 01                 ra = a3 + 0x1
 17966: ac 2a e9                 jump @1004 if a3 <u t0
      :                          @1007
 17969: 28 1a ff                 jump @981
      :                          @1008
 17972: 64 20                    ra = t0
 17974: 01                       fallthrough
      :                          @1009
 17975: 49 11 40 01              u64 [sp + 64] = 0x1
 17979: 64 b5                    s0 = a4
 17981: 64 26                    s1 = t0
 17983: aa 2b 57                 jump @1018 if a4 == t0
      :                          @1010
 17986: 82 17 48                 a0 = u64 [sp + 0x48]
 17989: 7c 77                    a0 = u8 [a0]
 17991: 51 07 23                 jump @1013 if a0 == 0
      :                          @1011
 17994: 82 17 30                 a0 = u64 [sp + 0x30]
 17997: 82 7a 18                 a3 = u64 [a0 + 0x18]
 18000: 33 09 04                 a2 = 0x4
 18003: 82 17 38                 a0 = u64 [sp + 0x38]
 18006: 82 18 08                 a1 = u64 [sp + 0x8]
 18009: 7b 10 28                 u64 [sp + 0x28] = ra
 18012: b4 a0 02 ce 01           ra = 462, jump [a3]
      :                          @1012 [@dyn 231]
 18017: 82 1b 50                 a4 = u64 [sp + 0x50]
 18020: 82 10 28                 ra = u64 [sp + 0x28]
 18023: 52 07 33                 jump @1019 if a0 != 0
      :                          @1013
 18026: c9 b6 09                 a2 = s1 - a4
 18029: 82 18 58                 a1 = u64 [sp + 0x58]
 18032: c8 b8 08                 a1 = a1 + a4
 18035: ab b6 8e fe              jump @975 if s1 != a4
      :                          @1014
 18039: 64 06                    s1 = ra
 18041: 33 07                    a0 = 0
 18043: 28 95 fe                 jump @976
      :                          @1015
 18046: 64 20                    ra = t0
 18048: 82 1b 50                 a4 = u64 [sp + 0x50]
 18051: 28 b4                    jump @1009
      :                          @1016
 18053: 49 11 40                 u64 [sp + 64] = 0
 18056: 64 05                    s0 = ra
 18058: 64 06                    s1 = ra
 18060: 82 17 48                 a0 = u64 [sp + 0x48]
 18063: 7c 77                    a0 = u8 [a0]
 18065: 52 07 b9                 jump @1011 if a0 != 0
      :                          @1017
 18068: 28 d6                    jump @1013
      :                          @1018
 18070: 33 07                    a0 = 0
 18072: 28 06                    jump @1020
      :                          @1019
 18074: 33 07 01                 a0 = 0x1
 18077: 01                       fallthrough
      :                          @1020
 18078: 82 10 78                 ra = u64 [sp + 0x78]
 18081: 82 15 70                 s0 = u64 [sp + 0x70]
 18084: 82 16 68                 s1 = u64 [sp + 0x68]
 18087: 95 11 80 00              sp = sp + 0x80
 18091: 32 00                    ret
      :                          @1021 [@dyn 232]
 18093: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 18096: 7b 10 20                 u64 [sp + 0x20] = ra
 18099: 7b 15 18                 u64 [sp + 0x18] = s0
 18102: 7b 16 10                 u64 [sp + 0x10] = s1
 18105: 82 75 10                 s0 = u64 [a0 + 0x10]
 18108: 7c 59                    a2 = u8 [s0]
 18110: 82 7b                    a4 = u64 [a0]
 18112: 82 76 08                 s1 = u64 [a0 + 0x8]
 18115: 51 09 33                 jump @1025 if a2 == 0
      :                          @1022
 18118: 82 6a 18                 a3 = u64 [s1 + 0x18]
 18121: 7b 18 08                 u64 [sp + 0x8] = a1
 18124: 33 08 38 10 01           a1 = 0x11038
 18129: 33 09 04                 a2 = 0x4
 18132: 64 b7                    a0 = a4
 18134: 7b 1b                    u64 [sp] = a4
 18136: b4 a0 02 d2 01           ra = 466, jump [a3]
      :                          @1023 [@dyn 233]
 18141: 82 18 08                 a1 = u64 [sp + 0x8]
 18144: 82 1b                    a4 = u64 [sp]
 18146: 51 07 14                 jump @1025 if a0 == 0
      :                          @1024
 18149: 33 07 01                 a0 = 0x1
 18152: 82 10 20                 ra = u64 [sp + 0x20]
 18155: 82 15 18                 s0 = u64 [sp + 0x18]
 18158: 82 16 10                 s1 = u64 [sp + 0x10]
 18161: 95 11 28                 sp = sp + 0x28
 18164: 32 00                    ret
      :                          @1025
 18166: 83 87                    i32 a0 = a1 + 0
 18168: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 18171: 88 77 01                 a0 = a0 <u 0x1
 18174: 78 57                    u8 [s0] = a0
 18176: 82 6c 20                 a5 = u64 [s1 + 0x20]
 18179: 64 b7                    a0 = a4
 18181: 82 10 20                 ra = u64 [sp + 0x20]
 18184: 82 15 18                 s0 = u64 [sp + 0x18]
 18187: 82 16 10                 s1 = u64 [sp + 0x10]
 18190: 95 11 28                 sp = sp + 0x28
 18193: 32 0c                    jump [a5]
      :                          @1026 [@dyn 234]
 18195: 64 8a                    a3 = a1
 18197: 33 08 f8 0f 01           a1 = 0x10ff8
 18202: 64 a9                    a2 = a3
 18204: 28 99 fb                 jump @935
      :                          @1027
 18207: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 18211: 7b 10 88 00              u64 [sp + 0x88] = ra
 18215: 7b 15 80 00              u64 [sp + 0x80] = s0
 18219: 7b 16 78                 u64 [sp + 0x78] = s1
 18222: 64 75                    s0 = a0
 18224: 7c 77 08                 a0 = u8 [a0 + 0x8]
 18227: 64 8b                    a4 = a1
 18229: 33 08 01                 a1 = 0x1
 18232: 33 06 01                 s1 = 0x1
 18235: 51 07 1d                 jump @1029 if a0 == 0
      :                          @1028
 18238: 78 56 08                 u8 [s0 + 0x8] = s1
 18241: 46 15 09 01              u8 [s0 + 9] = 0x1
 18245: 64 57                    a0 = s0
 18247: 82 10 88 00              ra = u64 [sp + 0x88]
 18251: 82 15 80 00              s0 = u64 [sp + 0x80]
 18255: 82 16 78                 s1 = u64 [sp + 0x78]
 18258: 95 11 90 00              sp = sp + 0x90
 18262: 32 00                    ret
      :                          @1029
 18264: 64 9a                    a3 = a2
 18266: 82 5c                    a5 = u64 [s0]
 18268: 80 c7 34                 a0 = u32 [a5 + 0x34]
 18271: 7c 58 09                 a1 = u8 [s0 + 0x9]
 18274: 84 79 04                 a2 = a0 & 0x4
 18277: 52 09 45                 jump @1035 if a2 != 0
      :                          @1030
 18280: 51 08 32                 jump @1033 if a1 == 0
      :                          @1031
 18283: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18286: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18289: 82 83 18                 t1 = u64 [a1 + 0x18]
 18292: 33 08 40 10 01           a1 = 0x11040
 18297: 33 09 02                 a2 = 0x2
 18300: 64 a6                    s1 = a3
 18302: 7b 1b 10                 u64 [sp + 0x10] = a4
 18305: 7b 1c 08                 u64 [sp + 0x8] = a5
 18308: b4 30 02 d6 01           ra = 470, jump [t1]
      :                          @1032 [@dyn 235]
 18313: 82 1c 08                 a5 = u64 [sp + 0x8]
 18316: 82 1b 10                 a4 = u64 [sp + 0x10]
 18319: 64 6a                    a3 = s1
 18321: 33 08 01                 a1 = 0x1
 18324: 33 06 01                 s1 = 0x1
 18327: 52 07 a7                 jump @1028 if a0 != 0
      :                          @1033
 18330: 64 b7                    a0 = a4
 18332: 64 c8                    a1 = a5
 18334: b4 a0 02 d8 01           ra = 472, jump [a3]
      :                          @1034 [@dyn 236]
 18339: 33 08 01                 a1 = 0x1
 18342: 64 76                    s1 = a0
 18344: 28 96                    jump @1028
      :                          @1035
 18346: 52 08 37                 jump @1039 if a1 != 0
      :                          @1036
 18349: 82 c8 28                 a1 = u64 [a5 + 0x28]
 18352: 82 c7 20                 a0 = u64 [a5 + 0x20]
 18355: 82 83 18                 t1 = u64 [a1 + 0x18]
 18358: 33 08 44 10 01           a1 = 0x11044
 18363: 33 09 01                 a2 = 0x1
 18366: 33 06 01                 s1 = 0x1
 18369: 7b 1a                    u64 [sp] = a3
 18371: 7b 1b 10                 u64 [sp + 0x10] = a4
 18374: 7b 1c 08                 u64 [sp + 0x8] = a5
 18377: b4 30 02 da 01           ra = 474, jump [t1]
      :                          @1037 [@dyn 237]
 18382: 82 1c 08                 a5 = u64 [sp + 0x8]
 18385: 82 1b 10                 a4 = u64 [sp + 0x10]
 18388: 82 1a                    a3 = u64 [sp]
 18390: 33 08 01                 a1 = 0x1
 18393: 52 07 65 ff              jump @1028 if a0 != 0
      :                          @1038
 18397: 81 c7 34                 a0 = i32 [a5 + 0x34]
 18400: 01                       fallthrough
      :                          @1039
 18401: 33 06 01                 s1 = 0x1
 18404: 78 16 37                 u8 [sp + 0x37] = s1
 18407: 82 c8 20                 a1 = u64 [a5 + 0x20]
 18410: 82 c9 28                 a2 = u64 [a5 + 0x28]
 18413: 7b 18 18                 u64 [sp + 0x18] = a1
 18416: 7b 19 20                 u64 [sp + 0x20] = a2
 18419: 95 18 37                 a1 = sp + 0x37
 18422: 7b 18 28                 u64 [sp + 0x28] = a1
 18425: 81 c8 30                 a1 = i32 [a5 + 0x30]
 18428: 7c c9 38                 a2 = u8 [a5 + 0x38]
 18431: 82 c3                    t1 = u64 [a5]
 18433: 82 c4 08                 t2 = u64 [a5 + 0x8]
 18436: 82 c0 10                 ra = u64 [a5 + 0x10]
 18439: 82 c2 18                 t0 = u64 [a5 + 0x18]
 18442: 7a 17 6c                 u32 [sp + 0x6c] = a0
 18445: 7a 18 68                 u32 [sp + 0x68] = a1
 18448: 78 19 70                 u8 [sp + 0x70] = a2
 18451: 7b 13 38                 u64 [sp + 0x38] = t1
 18454: 7b 14 40                 u64 [sp + 0x40] = t2
 18457: 7b 10 48                 u64 [sp + 0x48] = ra
 18460: 7b 12 50                 u64 [sp + 0x50] = t0
 18463: 95 17 18                 a0 = sp + 0x18
 18466: 7b 17 58                 u64 [sp + 0x58] = a0
 18469: 33 07 f8 0f 01           a0 = 0x10ff8
 18474: 7b 17 60                 u64 [sp + 0x60] = a0
 18477: 95 18 38                 a1 = sp + 0x38
 18480: 64 b7                    a0 = a4
 18482: b4 a0 02 dc 01           ra = 476, jump [a3]
      :                          @1040 [@dyn 238]
 18487: 52 07 21                 jump @1043 if a0 != 0
      :                          @1041
 18490: 82 18 60                 a1 = u64 [sp + 0x60]
 18493: 82 17 58                 a0 = u64 [sp + 0x58]
 18496: 82 8a 18                 a3 = u64 [a1 + 0x18]
 18499: 33 08 42 10 01           a1 = 0x11042
 18504: 33 09 02                 a2 = 0x2
 18507: b4 a0 02 de 01           ra = 478, jump [a3]
      :                          @1042 [@dyn 239]
 18512: 64 76                    s1 = a0
 18514: 33 08 01                 a1 = 0x1
 18517: 28 e9 fe                 jump @1028
      :                          @1043
 18520: 33 08 01                 a1 = 0x1
 18523: 28 e3 fe                 jump @1028
      :                          @1044
 18526: 51 08 9b 00              jump @1065 if a1 == 0
      :                          @1045
 18530: 64 79                    a2 = a0
 18532: 7c 77                    a0 = u8 [a0]
 18534: 51 07 91 00              jump @1064 if a0 == 0
      :                          @1046
 18538: 51 27 ff 00 90 00        jump @1066 if a0 == 255
      :                          @1047
 18544: 6c 7a                    a3 = sext.b a0
 18546: 57 0a 09                 jump @1049 if a3 <s 0
      :                          @1048
 18549: 33 0a                    a3 = 0
 18551: 33 08                    a1 = 0
 18553: 28 73                    jump @1063
      :                          @1049
 18555: 55 27 c0 00 0d           jump @1051 if a0 >=u 192
      :                          @1050
 18560: 33 0a 01                 a3 = 0x1
 18563: 33 0b 80                 a4 = 0xffffffffffffff80
 18566: 28 4a                    jump @1060
      :                          @1051
 18568: 55 27 e0 00 0e           jump @1053 if a0 >=u 224
      :                          @1052
 18573: 33 0a 02                 a3 = 0x2
 18576: 33 0b 40 ff              a4 = 0xffffffffffffff40
 18580: 28 3c                    jump @1060
      :                          @1053
 18582: 55 27 f0 00 0e           jump @1055 if a0 >=u 240
      :                          @1054
 18587: 33 0a 03                 a3 = 0x3
 18590: 33 0b 20 ff              a4 = 0xffffffffffffff20
 18594: 28 2e                    jump @1060
      :                          @1055
 18596: 55 27 f8 00 0e           jump @1057 if a0 >=u 248
      :                          @1056
 18601: 33 0a 04                 a3 = 0x4
 18604: 33 0b 10 ff              a4 = 0xffffffffffffff10
 18608: 28 20                    jump @1060
      :                          @1057
 18610: 55 27 fc 00 0e           jump @1059 if a0 >=u 252
      :                          @1058
 18615: 33 0a 05                 a3 = 0x5
 18618: 33 0b 08 ff              a4 = 0xffffffffffffff08
 18622: 28 12                    jump @1060
      :                          @1059
 18624: 88 7a fe 00              a3 = a0 <u 0xfe
 18628: 33 0b 04 ff              a4 = 0xffffffffffffff04
 18632: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 18636: 85 aa 07                 a3 = a3 ^ 0x7
 18639: 01                       fallthrough
      :                          @1060
 18640: ae 8a 2b                 jump @1067 if a3 >=u a1
      :                          @1061
 18643: 33 08                    a1 = 0
 18645: c8 b7 07                 a0 = a0 + a4
 18648: 64 ab                    a4 = a3
 18650: 01                       fallthrough
      :                          @1062
 18651: c8 b9 0c                 a5 = a2 + a4
 18654: 7c cc                    a5 = u8 [a5]
 18656: 97 88 08                 a1 = a1 << 0x8
 18659: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 18662: d4 c8 08                 a1 = a1 | a5
 18665: 52 0b f2                 jump @1062 if a4 != 0
      :                          @1063
 18668: 8a a9 03                 i32 a2 = a3 << 0x3
 18671: cf 97 07                 a0 = a0 << a2
 18674: c8 87 07                 a0 = a0 + a1
 18677: 32 00                    ret
      :                          @1064
 18679: 32 00                    ret
      :                          @1065
 18681: 00                       trap
      :                          @1066
 18682: 00                       trap
      :                          @1067
 18683: 00                       trap
      :                          @1068
 18684: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 18688: 7b 10 00 01              u64 [sp + 0x100] = ra
 18692: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 18696: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 18700: 7b 17                    u64 [sp] = a0
 18702: 78 18 0f                 u8 [sp + 0xf] = a1
 18705: 7b 17 10                 u64 [sp + 0x10] = a0
 18708: 95 16 0f                 s1 = sp + 0xf
 18711: 33 05 01                 s0 = 0x1
 18714: 95 17 0f                 a0 = sp + 0xf
 18717: 33 08 01                 a1 = 0x1
 18720: 95 19 10                 a2 = sp + 0x10
 18723: 33 0a 08                 a3 = 0x8
 18726: 0a 03                    ecalli 3 // 'write'
 18728: 7b 16 60                 u64 [sp + 0x60] = s1
 18731: 33 07 e4 01              a0 = 0x1e4
 18735: 7b 17 68                 u64 [sp + 0x68] = a0
 18738: 64 17                    a0 = sp
 18740: 7b 17 70                 u64 [sp + 0x70] = a0
 18743: 33 07 16                 a0 = 0x16
 18746: 7b 17 78                 u64 [sp + 0x78] = a0
 18749: 49 21 80 00 02           u64 [sp + 128] = 0x2
 18754: 49 21 90 00 02           u64 [sp + 144] = 0x2
 18759: 49 21 a0 00              u64 [sp + 160] = 0
 18763: 14 08 20 00 00 00 10 00 00 00 a1 = 0x1000000020
 18773: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 18777: 46 21 b0 00 03           u8 [sp + 176] = 0x3
 18782: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 18787: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 18792: 7b 15 d8 00              u64 [sp + 0xd8] = s0
 18796: 7b 18 e0 00              u64 [sp + 0xe0] = a1
 18800: 46 21 e8 00 03           u8 [sp + 232] = 0x3
 18805: 33 08 90 12 01           a1 = 0x11290
 18810: 7b 18 30                 u64 [sp + 0x30] = a1
 18813: 49 11 38 02              u64 [sp + 56] = 0x2
 18817: 95 18 80 00              a1 = sp + 0x80
 18821: 7b 18 50                 u64 [sp + 0x50] = a1
 18824: 49 11 58 02              u64 [sp + 88] = 0x2
 18828: 95 18 60                 a1 = sp + 0x60
 18831: 7b 18 40                 u64 [sp + 0x40] = a1
 18834: 49 11 48 02              u64 [sp + 72] = 0x2
 18838: 95 17 18                 a0 = sp + 0x18
 18841: 95 18 30                 a1 = sp + 0x30
 18844: 50 20 e0 01 ec f1        ra = 480, jump @791
      :                          @1069 [@dyn 240]
 18850: 82 15 20                 s0 = u64 [sp + 0x20]
 18853: 82 1b 28                 a4 = u64 [sp + 0x28]
 18856: 82 16 18                 s1 = u64 [sp + 0x18]
 18859: 33 07 02                 a0 = 0x2
 18862: 33 08                    a1 = 0
 18864: 33 09                    a2 = 0
 18866: 64 5a                    a3 = s0
 18868: 33 00 e2 01              ra = 0x1e2
 18872: 0a 64                    ecalli 100 // 'log'
 18874: 01                       fallthrough
      :                          @1070 [@dyn 241]
 18875: 33 07 00 00 f0           a0 = 0xfffffffffff00000
 18880: 95 68 ff ff ef           a1 = s1 + 0xffffffffffefffff
 18885: ac 78 24                 jump @1076 if a1 <u a0
      :                          @1071
 18888: 33 07 50 00 03           a0 = 0x30050
 18893: 95 77 00 00 10           a0 = a0 + 0x100000
 18898: 01                       fallthrough
      :                          @1072
 18899: 82 78                    a1 = u64 [a0]
 18901: c9 87 09                 a2 = a0 - a1
 18904: ab 59 11                 jump @1076 if a2 != s0
      :                          @1073
 18907: c9 68 09                 a2 = a1 - s1
 18910: 01                       fallthrough
      :                          @1074
 18911: 82 7a                    a3 = u64 [a0]
 18913: ab 8a f2                 jump @1072 if a3 != a1
      :                          @1075
 18916: 7b 79                    u64 [a0] = a2
 18918: 33 0b                    a4 = 0
 18920: 01                       fallthrough
      :                          @1076
 18921: 82 10 00 01              ra = u64 [sp + 0x100]
 18925: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 18929: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 18933: 95 11 08 01              sp = sp + 0x108
 18937: 32 00                    ret
      :                          @1077 [@dyn 242]
 18939: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 18942: 7b 10 28                 u64 [sp + 0x28] = ra
 18945: 7b 15 20                 u64 [sp + 0x20] = s0
 18948: 7b 16 18                 u64 [sp + 0x18] = s1
 18951: 64 86                    s1 = a1
 18953: 82 88 28                 a1 = u64 [a1 + 0x28]
 18956: 82 6a 20                 a3 = u64 [s1 + 0x20]
 18959: 82 8b 18                 a4 = u64 [a1 + 0x18]
 18962: 64 75                    s0 = a0
 18964: 33 08 f0 0f 01           a1 = 0x10ff0
 18969: 33 09 01                 a2 = 0x1
 18972: 64 a7                    a0 = a3
 18974: b4 b0 02 e6 01           ra = 486, jump [a4]
      :                          @1078 [@dyn 243]
 18979: 7b 16                    u64 [sp] = s1
 18981: 78 17 08                 u8 [sp + 0x8] = a0
 18984: 46 11 09                 u8 [sp + 9] = 0
 18987: 7b 15 10                 u64 [sp + 0x10] = s0
 18990: 33 09 ec 01              a2 = 0x1ec
 18994: 64 17                    a0 = sp
 18996: 95 18 10                 a1 = sp + 0x10
 18999: 50 20 e8 01 e8 fc        ra = 488, jump @1027
      :                          @1079 [@dyn 244]
 19005: 33 07 01                 a0 = 0x1
 19008: 7c 18 08                 a1 = u8 [sp + 0x8]
 19011: 52 08 1b                 jump @1081 if a1 != 0
      :                          @1080
 19014: 82 17                    a0 = u64 [sp]
 19016: 82 78 28                 a1 = u64 [a0 + 0x28]
 19019: 82 77 20                 a0 = u64 [a0 + 0x20]
 19022: 82 8a 18                 a3 = u64 [a1 + 0x18]
 19025: 33 08 45 10 01           a1 = 0x11045
 19030: 33 09 01                 a2 = 0x1
 19033: b4 a0 02 ea 01           ra = 490, jump [a3]
      :                          @1081 [@dyn 245]
 19038: 82 10 28                 ra = u64 [sp + 0x28]
 19041: 82 15 20                 s0 = u64 [sp + 0x20]
 19044: 82 16 18                 s1 = u64 [sp + 0x18]
 19047: 95 11 30                 sp = sp + 0x30
 19050: 32 00                    ret
      :                          @1082 [@dyn 246]
 19052: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 19056: 7b 10 80 00              u64 [sp + 0x80] = ra
 19060: 80 89 34                 a2 = u32 [a1 + 0x34]
 19063: 82 77                    a0 = u64 [a0]
 19065: 84 9a 10                 a3 = a2 & 0x10
 19068: 52 0a 16                 jump @1085 if a3 != 0
      :                          @1083
 19071: 84 99 20                 a2 = a2 & 0x20
 19074: 52 09 41                 jump @1088 if a2 != 0
      :                          @1084
 19077: 7c 77                    a0 = u8 [a0]
 19079: 82 10 80 00              ra = u64 [sp + 0x80]
 19083: 95 11 88 00              sp = sp + 0x88
 19087: 28 85 f4                 jump @873
      :                          @1085
 19090: 7c 77                    a0 = u8 [a0]
 19092: 33 0b 81 00              a4 = 0x81
 19096: 95 19 7f                 a2 = sp + 0x7f
 19099: 33 02 57                 t0 = 0x57
 19102: 01                       fallthrough
      :                          @1086
 19103: 64 bc                    a5 = a4
 19105: 84 7b 0f                 a4 = a0 & 0xf
 19108: 97 77 38                 a0 = a0 << 0x38
 19111: 98 77 3c                 a0 = a0 >> 0x3c
 19114: 88 b3 0a                 t1 = a4 <u 0xa
 19117: 33 0a 30                 a3 = 0x30
 19120: da 32 0a                 a3 = t0 if t1 == 0
 19123: be ba 0a                 i32 a3 = a3 + a4
 19126: 78 9a                    u8 [a2] = a3
 19128: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19131: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19134: 52 07 e1                 jump @1086 if a0 != 0
      :                          @1087
 19137: 28 31                    jump @1090
      :                          @1088
 19139: 7c 77                    a0 = u8 [a0]
 19141: 33 0b 81 00              a4 = 0x81
 19145: 95 19 7f                 a2 = sp + 0x7f
 19148: 33 02 37                 t0 = 0x37
 19151: 01                       fallthrough
      :                          @1089
 19152: 64 bc                    a5 = a4
 19154: 84 7b 0f                 a4 = a0 & 0xf
 19157: 97 77 38                 a0 = a0 << 0x38
 19160: 98 77 3c                 a0 = a0 >> 0x3c
 19163: 88 b3 0a                 t1 = a4 <u 0xa
 19166: 33 0a 30                 a3 = 0x30
 19169: da 32 0a                 a3 = t0 if t1 == 0
 19172: be ba 0a                 i32 a3 = a3 + a4
 19175: 78 9a                    u8 [a2] = a3
 19177: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19180: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19183: 52 07 e1                 jump @1089 if a0 != 0
      :                          @1090
 19186: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
 19189: 56 27 80 00 28           jump @1093 if a0 >u 128
      :                          @1091
 19194: 9a bb 81 00              a4 = 0x81 - a4
 19198: 64 1a                    a3 = sp
 19200: c8 7a 0a                 a3 = a3 + a0
 19203: 33 09 02                 a2 = 0x2
 19206: 64 87                    a0 = a1
 19208: 33 08 46 10 01           a1 = 0x11046
 19213: 50 20 ee 01 2f f5        ra = 494, jump @883
      :                          @1092 [@dyn 247]
 19219: 82 10 80 00              ra = u64 [sp + 0x80]
 19223: 95 11 88 00              sp = sp + 0x88
 19227: 32 00                    ret
      :                          @1093
 19229: 00                       trap
