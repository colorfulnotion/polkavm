// RO data = 888/888 bytes
// RW data = 16/65776 bytes
// Stack size = 65536 bytes
// RO data = [109, 101, 103, 40, 109, 101, 103, 32, 114, 101, 97, 100, 32, 32, 32, 32, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 115, 101, 114, 118, 105, 99, 101, 32, 32, 102, 105, 98, 40, 110, 61, 41, 61, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 105, 98, 40, 110, 61, 116, 114, 97, 110, 115, 102, 101, 114, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 119, 114, 105, 116, 101, 40, 110, 61, 41, 32, 110, 117, 109, 95, 116, 114, 97, 110, 115, 102, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 233, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 97, 110, 115, 102, 101, 114, 40, 100, 101, 115, 116, 58, 44, 32, 97, 109, 111, 117, 110, 116, 61, 44, 32, 103, 97, 115, 95, 97, 118, 97, 105, 108, 61, 41, 32, 82, 101, 115, 117, 108, 116, 58, 32, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 77, 101, 103, 97, 116, 114, 111, 110, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 206, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 62, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2455
// Code size = 7450 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 e0 02 00 00           jump @54
      :                          @2
    10: 28 94 0b                 jump @191
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 51 12                 jump @334
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 74 02 01           a2 = 0x10274
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 ff 12           ra = 4, jump @344
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 9a 11                 jump @334
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 74 02 01           a2 = 0x10274
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 48 12           ra = 8, jump @344
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 e3 10                 jump @334
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 74 02 01           a2 = 0x10274
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c 91 11           ra = 12, jump @344
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   578: 7b 10 18                 u64 [sp + 0x18] = ra
   581: 7b 15 10                 u64 [sp + 0x10] = s0
   584: 7b 16 08                 u64 [sp + 0x8] = s1
   587: 64 86                    s1 = a1
   589: 64 78                    a1 = a0
   591: 33 09 04                 a2 = 0x4
   594: 33 07 00 00 01           a0 = 0x10000
   599: ac 96 7c                 jump @51 if s1 <u a2
      :                          @40
   602: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
   605: 51 06 76                 jump @51 if s1 == 0
      :                          @41
   608: 95 87 04                 a0 = a1 + 0x4
   611: 7d 78                    a1 = i8 [a0]
   613: 33 05 01                 s0 = 0x1
   616: 59 08 3a                 jump @49 if a1 >=s 0
      :                          @42
   619: 84 89 ff 00              a2 = a1 & 0xff
   623: 33 05 02                 s0 = 0x2
   626: 53 29 c0 00 2d           jump @48 if a2 <u 192
      :                          @43
   631: 33 05 03                 s0 = 0x3
   634: 53 29 e0 00 25           jump @48 if a2 <u 224
      :                          @44
   639: 33 05 04                 s0 = 0x4
   642: 53 29 f0 00 1d           jump @48 if a2 <u 240
      :                          @45
   647: 33 05 05                 s0 = 0x5
   650: 53 29 f8 00 15           jump @48 if a2 <u 248
      :                          @46
   655: 33 05 06                 s0 = 0x6
   658: 53 29 fc 00 0d           jump @48 if a2 <u 252
      :                          @47
   663: 88 98 fe 00              a1 = a2 <u 0xfe
   667: 9a 85 08                 s0 = 0x8 - a1
   670: 01                       fallthrough
      :                          @48
   671: ac 56 45                 jump @53 if s1 <u s0
      :                          @49
   674: 64 58                    a1 = s0
   676: 7b 17                    u64 [sp] = a0
   678: 50 10 0e fd 17           ra = 14, jump @490
      :                          @50 [@dyn 7]
   683: 64 78                    a1 = a0
   685: e4 56 07                 a0 = maxu(s1, s0)
   688: c9 57 07                 a0 = a0 - s0
   691: d8 87 09                 a2 = a0 <u a1
   694: e4 87 07                 a0 = maxu(a0, a1)
   697: c9 87 07                 a0 = a0 - a1
   700: 88 77 20                 a0 = a0 <u 0x20
   703: d4 79 09                 a2 = a2 | a0
   706: 82 17                    a0 = u64 [sp]
   708: c8 75 05                 s0 = s0 + a0
   711: 94 98                    a1 = 0 if a2 != 0
   713: 33 07 00 00 01           a0 = 0x10000
   718: da 95 07                 a0 = s0 if a2 == 0
   721: 28 05                    jump @52
      :                          @51
   723: 33 08                    a1 = 0
   725: 01                       fallthrough
      :                          @52
   726: 82 10 18                 ra = u64 [sp + 0x18]
   729: 82 15 10                 s0 = u64 [sp + 0x10]
   732: 82 16 08                 s1 = u64 [sp + 0x8]
   735: 95 11 20                 sp = sp + 0x20
   738: 32 00                    ret
      :                          @53
   740: 00                       trap
      :                          @54 [export #1: 'accumulate']
   741: 95 11 a0 fe              sp = sp + 0xfffffffffffffea0
   745: 7b 10 58 01              u64 [sp + 0x158] = ra
   749: 7b 15 50 01              u64 [sp + 0x150] = s0
   753: 7b 16 48 01              u64 [sp + 0x148] = s1
   757: 33 09 00 00 01           a2 = 0x10000
   762: 51 08 82 01              jump @100 if a1 == 0
      :                          @55
   766: 64 86                    s1 = a1
   768: 7d 78                    a1 = i8 [a0]
   770: 33 05 01                 s0 = 0x1
   773: 59 08 37                 jump @62 if a1 >=s 0
      :                          @56
   776: 84 8a ff 00              a3 = a1 & 0xff
   780: 33 05 02                 s0 = 0x2
   783: 53 2a c0 00 2d           jump @62 if a3 <u 192
      :                          @57
   788: 33 05 03                 s0 = 0x3
   791: 53 2a e0 00 25           jump @62 if a3 <u 224
      :                          @58
   796: 33 05 04                 s0 = 0x4
   799: 53 2a f0 00 1d           jump @62 if a3 <u 240
      :                          @59
   804: 33 05 05                 s0 = 0x5
   807: 53 2a f8 00 15           jump @62 if a3 <u 248
      :                          @60
   812: 33 05 06                 s0 = 0x6
   815: 53 2a fc 00 0d           jump @62 if a3 <u 252
      :                          @61
   820: 88 a8 fe 00              a1 = a3 <u 0xfe
   824: 9a 85 08                 s0 = 0x8 - a1
   827: 01                       fallthrough
      :                          @62
   828: ae 56 08                 jump @64 if s1 >=u s0
      :                          @63
   831: 33 08                    a1 = 0
   833: 28 3b 01                 jump @100
      :                          @64
   836: 64 58                    a1 = s0
   838: 7b 17 60                 u64 [sp + 0x60] = a0
   841: 50 10 10 5a 17           ra = 16, jump @490
      :                          @65 [@dyn 8]
   846: aa 56 26 01              jump @99 if s1 == s0
      :                          @66
   850: 82 17 60                 a0 = u64 [sp + 0x60]
   853: c8 57 07                 a0 = a0 + s0
   856: 7d 78                    a1 = i8 [a0]
   858: c9 56 06                 s1 = s1 - s0
   861: 33 05 01                 s0 = 0x1
   864: 59 08 37                 jump @73 if a1 >=s 0
      :                          @67
   867: 84 89 ff 00              a2 = a1 & 0xff
   871: 33 05 02                 s0 = 0x2
   874: 53 29 c0 00 2d           jump @73 if a2 <u 192
      :                          @68
   879: 33 05 03                 s0 = 0x3
   882: 53 29 e0 00 25           jump @73 if a2 <u 224
      :                          @69
   887: 33 05 04                 s0 = 0x4
   890: 53 29 f0 00 1d           jump @73 if a2 <u 240
      :                          @70
   895: 33 05 05                 s0 = 0x5
   898: 53 29 f8 00 15           jump @73 if a2 <u 248
      :                          @71
   903: 33 05 06                 s0 = 0x6
   906: 53 29 fc 00 0d           jump @73 if a2 <u 252
      :                          @72
   911: 88 98 fe 00              a1 = a2 <u 0xfe
   915: 9a 85 08                 s0 = 0x8 - a1
   918: 01                       fallthrough
      :                          @73
   919: ac 56 dd 00              jump @99 if s1 <u s0
      :                          @74
   923: 64 58                    a1 = s0
   925: 7b 17 60                 u64 [sp + 0x60] = a0
   928: 50 10 12 03 17           ra = 18, jump @490
      :                          @75 [@dyn 9]
   933: 82 17 60                 a0 = u64 [sp + 0x60]
   936: c8 57 07                 a0 = a0 + s0
   939: c9 56 0a                 a3 = s1 - s0
   942: ab 56 07                 jump @77 if s1 != s0
      :                          @76
   945: 33 05                    s0 = 0
   947: 28 42                    jump @85
      :                          @77
   949: 7d 78                    a1 = i8 [a0]
   951: 33 05 01                 s0 = 0x1
   954: 59 08 37                 jump @84 if a1 >=s 0
      :                          @78
   957: 84 89 ff 00              a2 = a1 & 0xff
   961: 33 05 02                 s0 = 0x2
   964: 53 29 c0 00 2d           jump @84 if a2 <u 192
      :                          @79
   969: 33 05 03                 s0 = 0x3
   972: 53 29 e0 00 25           jump @84 if a2 <u 224
      :                          @80
   977: 33 05 04                 s0 = 0x4
   980: 53 29 f0 00 1d           jump @84 if a2 <u 240
      :                          @81
   985: 33 05 05                 s0 = 0x5
   988: 53 29 f8 00 15           jump @84 if a2 <u 248
      :                          @82
   993: 33 05 06                 s0 = 0x6
   996: 53 29 fc 00 0d           jump @84 if a2 <u 252
      :                          @83
  1001: 88 98 fe 00              a1 = a2 <u 0xfe
  1005: 9a 85 08                 s0 = 0x8 - a1
  1008: 01                       fallthrough
      :                          @84
  1009: ac 5a 83 00              jump @99 if a3 <u s0
      :                          @85
  1013: 64 a6                    s1 = a3
  1015: 7b 17 60                 u64 [sp + 0x60] = a0
  1018: 64 58                    a1 = s0
  1020: 50 10 14 a7 16           ra = 20, jump @490
      :                          @86 [@dyn 10]
  1025: 51 07 73                 jump @99 if a0 == 0
      :                          @87
  1028: e4 56 07                 a0 = maxu(s1, s0)
  1031: c9 57 07                 a0 = a0 - s0
  1034: 33 09 00 00 01           a2 = 0x10000
  1039: 53 17 60 30 ff           jump @63 if a0 <u 96
      :                          @88
  1044: 82 18 60                 a1 = u64 [sp + 0x60]
  1047: c8 85 05                 s0 = s0 + a1
  1050: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  1053: 95 57 60                 a0 = s0 + 0x60
  1056: 7b 17 60                 u64 [sp + 0x60] = a0
  1059: 51 06 6d                 jump @101 if s1 == 0
      :                          @89
  1062: 7d 78                    a1 = i8 [a0]
  1064: 33 05 01                 s0 = 0x1
  1067: 59 08 37                 jump @96 if a1 >=s 0
      :                          @90
  1070: 84 89 ff 00              a2 = a1 & 0xff
  1074: 33 05 02                 s0 = 0x2
  1077: 53 29 c0 00 2d           jump @96 if a2 <u 192
      :                          @91
  1082: 33 05 03                 s0 = 0x3
  1085: 53 29 e0 00 25           jump @96 if a2 <u 224
      :                          @92
  1090: 33 05 04                 s0 = 0x4
  1093: 53 29 f0 00 1d           jump @96 if a2 <u 240
      :                          @93
  1098: 33 05 05                 s0 = 0x5
  1101: 53 29 f8 00 15           jump @96 if a2 <u 248
      :                          @94
  1106: 33 05 06                 s0 = 0x6
  1109: 53 29 fc 00 0d           jump @96 if a2 <u 252
      :                          @95
  1114: 88 98 fe 00              a1 = a2 <u 0xfe
  1118: 9a 85 08                 s0 = 0x8 - a1
  1121: 01                       fallthrough
      :                          @96
  1122: ac 56 3a 07              jump @189 if s1 <u s0
      :                          @97
  1126: 64 58                    a1 = s0
  1128: 50 10 16 3b 16           ra = 22, jump @490
      :                          @98 [@dyn 11]
  1133: 33 09 00 00 01           a2 = 0x10000
  1138: 28 23                    jump @102
      :                          @99
  1140: 33 08                    a1 = 0
  1142: 33 09 00 00 01           a2 = 0x10000
  1147: 01                       fallthrough
      :                          @100
  1148: 64 97                    a0 = a2
  1150: 82 10 58 01              ra = u64 [sp + 0x158]
  1154: 82 15 50 01              s0 = u64 [sp + 0x150]
  1158: 82 16 48 01              s1 = u64 [sp + 0x148]
  1162: 95 11 60 01              sp = sp + 0x160
  1166: 32 00                    ret
      :                          @101
  1168: 33 05                    s0 = 0
  1170: 33 07                    a0 = 0
  1172: 01                       fallthrough
      :                          @102
  1173: e4 56 08                 a1 = maxu(s1, s0)
  1176: c9 58 08                 a1 = a1 - s0
  1179: e4 78 06                 s1 = maxu(a1, a0)
  1182: c9 76 06                 s1 = s1 - a0
  1185: 53 16 20 9e fe           jump @63 if s1 <u 32
      :                          @103
  1190: 82 18 60                 a1 = u64 [sp + 0x60]
  1193: c8 85 05                 s0 = s0 + a1
  1196: c8 57 07                 a0 = a0 + s0
  1199: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  1202: 95 77 20                 a0 = a0 + 0x20
  1205: 7b 17 60                 u64 [sp + 0x60] = a0
  1208: 51 06 51                 jump @114 if s1 == 0
      :                          @104
  1211: 7d 78                    a1 = i8 [a0]
  1213: 33 05 01                 s0 = 0x1
  1216: 59 08 37                 jump @111 if a1 >=s 0
      :                          @105
  1219: 84 89 ff 00              a2 = a1 & 0xff
  1223: 33 05 02                 s0 = 0x2
  1226: 53 29 c0 00 2d           jump @111 if a2 <u 192
      :                          @106
  1231: 33 05 03                 s0 = 0x3
  1234: 53 29 e0 00 25           jump @111 if a2 <u 224
      :                          @107
  1239: 33 05 04                 s0 = 0x4
  1242: 53 29 f0 00 1d           jump @111 if a2 <u 240
      :                          @108
  1247: 33 05 05                 s0 = 0x5
  1250: 53 29 f8 00 15           jump @111 if a2 <u 248
      :                          @109
  1255: 33 05 06                 s0 = 0x6
  1258: 53 29 fc 00 0d           jump @111 if a2 <u 252
      :                          @110
  1263: 88 98 fe 00              a1 = a2 <u 0xfe
  1267: 9a 85 08                 s0 = 0x8 - a1
  1270: 01                       fallthrough
      :                          @111
  1271: ac 56 a5 06              jump @189 if s1 <u s0
      :                          @112
  1275: 64 58                    a1 = s0
  1277: 50 10 18 a6 15           ra = 24, jump @490
      :                          @113 [@dyn 12]
  1282: 33 09 00 00 01           a2 = 0x10000
  1287: 28 05                    jump @115
      :                          @114
  1289: 33 05                    s0 = 0
  1291: 01                       fallthrough
      :                          @115
  1292: ae 65 33 fe              jump @63 if s0 >=u s1
      :                          @116
  1296: 82 17 60                 a0 = u64 [sp + 0x60]
  1299: c8 57 07                 a0 = a0 + s0
  1302: 7c 78                    a1 = u8 [a0]
  1304: 51 08 09                 jump @118 if a1 == 0
      :                          @117
  1307: 33 08                    a1 = 0
  1309: 33 05                    s0 = 0
  1311: 28 7d                    jump @131
      :                          @118
  1313: e4 56 08                 a1 = maxu(s1, s0)
  1316: c9 58 08                 a1 = a1 - s0
  1319: 95 75 01                 s0 = a0 + 0x1
  1322: 33 07 01                 a0 = 0x1
  1325: e4 78 07                 a0 = maxu(a1, a0)
  1328: 33 09 02                 a2 = 0x2
  1331: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1334: ae 98 09                 jump @120 if a1 >=u a2
      :                          @119
  1337: 33 06                    s1 = 0
  1339: 33 07                    a0 = 0
  1341: 28 52                    jump @130
      :                          @120
  1343: 7d 57                    a0 = i8 [s0]
  1345: 33 06 01                 s1 = 0x1
  1348: 59 07 37                 jump @127 if a0 >=s 0
      :                          @121
  1351: 84 77 ff 00              a0 = a0 & 0xff
  1355: 33 06 02                 s1 = 0x2
  1358: 53 27 c0 00 2d           jump @127 if a0 <u 192
      :                          @122
  1363: 33 06 03                 s1 = 0x3
  1366: 53 27 e0 00 25           jump @127 if a0 <u 224
      :                          @123
  1371: 33 06 04                 s1 = 0x4
  1374: 53 27 f0 00 1d           jump @127 if a0 <u 240
      :                          @124
  1379: 33 06 05                 s1 = 0x5
  1382: 53 27 f8 00 15           jump @127 if a0 <u 248
      :                          @125
  1387: 33 06 06                 s1 = 0x6
  1390: 53 27 fc 00 0d           jump @127 if a0 <u 252
      :                          @126
  1395: 88 77 fe 00              a0 = a0 <u 0xfe
  1399: 9a 76 08                 s1 = 0x8 - a0
  1402: 01                       fallthrough
      :                          @127
  1403: 7b 1a 60                 u64 [sp + 0x60] = a3
  1406: ac 6a 1f 06              jump @190 if a3 <u s1
      :                          @128
  1410: 64 57                    a0 = s0
  1412: 64 68                    a1 = s1
  1414: 50 10 1a 1d 15           ra = 26, jump @490
      :                          @129 [@dyn 13]
  1419: 82 1a 60                 a3 = u64 [sp + 0x60]
  1422: 01                       fallthrough
      :                          @130
  1423: c8 65 05                 s0 = s0 + s1
  1426: e4 6a 08                 a1 = maxu(a3, s1)
  1429: c9 68 08                 a1 = a1 - s1
  1432: e6 78 08                 a1 = minu(a1, a0)
  1435: 01                       fallthrough
      :                          @131
  1436: 80 57                    a0 = u32 [s0]
  1438: c8 58 08                 a1 = a1 + s0
  1441: 7b 17 68                 u64 [sp + 0x68] = a0
  1444: 80 88 fc                 a1 = u32 [a1 + 0xfffffffffffffffc]
  1447: 7b 18 60                 u64 [sp + 0x60] = a1
  1450: 7b 18 70                 u64 [sp + 0x70] = a1
  1453: 33 08 10 00 03           a1 = 0x30010
  1458: 7b 18 58                 u64 [sp + 0x58] = a1
  1461: 33 06 34 00 03           s1 = 0x30034
  1466: 33 09 01                 a2 = 0x1
  1469: 33 0c 0c                 a5 = 0xc
  1472: 33 0a 34 00 03           a3 = 0x30034
  1477: 33 0b                    a4 = 0
  1479: 0a 02                    ecalli 2 // 'read'
  1481: 33 05 40 00 03           s0 = 0x30040
  1486: 33 09 01                 a2 = 0x1
  1489: 33 0c 0c                 a5 = 0xc
  1492: 82 17 60                 a0 = u64 [sp + 0x60]
  1495: 82 18 58                 a1 = u64 [sp + 0x58]
  1498: 33 0a 40 00 03           a3 = 0x30040
  1503: 33 0b                    a4 = 0
  1505: 0a 02                    ecalli 2 // 'read'
  1507: 39 07 38 00 03           a0 = i32 [0x30038]
  1512: 49 11 50 ff ff fe        u64 [sp + 80] = 0xfffffffffffeffff
  1518: 39 08 34 00 03           a1 = i32 [0x30034]
  1523: 7a 17 78                 u32 [sp + 0x78] = a0
  1526: 39 07 3c 00 03           a0 = i32 [0x3003c]
  1531: 7b 17 60                 u64 [sp + 0x60] = a0
  1534: 34 07 45 00 03           a0 = u8 [0x30045]
  1539: 34 09 44 00 03           a2 = u8 [0x30044]
  1544: 34 0a 46 00 03           a3 = u8 [0x30046]
  1549: 35 0b 47 00 03           a4 = i8 [0x30047]
  1554: 8a 77 08                 i32 a0 = a0 << 0x8
  1557: d4 97 07                 a0 = a0 | a2
  1560: 8a a9 10                 i32 a2 = a3 << 0x10
  1563: 8a ba 18                 i32 a3 = a4 << 0x18
  1566: d4 a9 09                 a2 = a2 | a3
  1569: d4 97 07                 a0 = a0 | a2
  1572: 7a 17 7c                 u32 [sp + 0x7c] = a0
  1575: 34 07 49 00 03           a0 = u8 [0x30049]
  1580: 34 09 48 00 03           a2 = u8 [0x30048]
  1585: 34 0a 4a 00 03           a3 = u8 [0x3004a]
  1590: 34 0b 4b 00 03           a4 = u8 [0x3004b]
  1595: 97 77 08                 a0 = a0 << 0x8
  1598: d4 97 07                 a0 = a0 | a2
  1601: 7b 17 48                 u64 [sp + 0x48] = a0
  1604: 97 aa 10                 a3 = a3 << 0x10
  1607: 97 bb 18                 a4 = a4 << 0x18
  1610: d4 ba 0a                 a3 = a3 | a4
  1613: 7b 1a 40                 u64 [sp + 0x40] = a3
  1616: 7a 18 80 00              u32 [sp + 0x80] = a1
  1620: 95 19 80 00              a2 = sp + 0x80
  1624: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1628: 33 08 06                 a1 = 0x6
  1631: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1635: 95 17 68                 a0 = sp + 0x68
  1638: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1642: 33 07 0a                 a0 = 0xa
  1645: 7b 17 38                 u64 [sp + 0x38] = a0
  1648: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1652: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1656: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1660: 95 17 78                 a0 = sp + 0x78
  1663: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1667: 7b 18 58                 u64 [sp + 0x58] = a1
  1670: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1674: 33 07 30 00 01           a0 = 0x10030
  1679: 7b 17 18 01              u64 [sp + 0x118] = a0
  1683: 49 21 20 01 04           u64 [sp + 288] = 0x4
  1688: 49 21 38 01              u64 [sp + 312] = 0
  1692: 95 18 b0 00              a1 = sp + 0xb0
  1696: 7b 18 28 01              u64 [sp + 0x128] = a1
  1700: 49 21 30 01 04           u64 [sp + 304] = 0x4
  1705: 95 17 00 01              a0 = sp + 0x100
  1709: 95 18 18 01              a1 = sp + 0x118
  1713: 50 10 1c b8 08           ra = 28, jump @264
      :                          @132 [@dyn 14]
  1718: 82 15 08 01              s0 = u64 [sp + 0x108]
  1722: 82 1b 10 01              a4 = u64 [sp + 0x110]
  1726: 82 16 00 01              s1 = u64 [sp + 0x100]
  1730: 33 07 02                 a0 = 0x2
  1733: 33 08                    a1 = 0
  1735: 33 09                    a2 = 0
  1737: 64 5a                    a3 = s0
  1739: 33 00 1e                 ra = 0x1e
  1742: 0a 64                    ecalli 100 // 'log'
  1744: 01                       fallthrough
      :                          @133 [@dyn 15]
  1745: 82 17 50                 a0 = u64 [sp + 0x50]
  1748: c8 67 07                 a0 = a0 + s1
  1751: 53 37 00 00 ff 27        jump @139 if a0 <u 4294901760
      :                          @134
  1757: 33 07 e0 00 03           a0 = 0x300e0
  1762: 95 77 00 00 01           a0 = a0 + 0x10000
  1767: 01                       fallthrough
      :                          @135
  1768: 82 78                    a1 = u64 [a0]
  1770: c9 87 09                 a2 = a0 - a1
  1773: ab 59 11                 jump @139 if a2 != s0
      :                          @136
  1776: c9 68 09                 a2 = a1 - s1
  1779: 01                       fallthrough
      :                          @137
  1780: 82 7a                    a3 = u64 [a0]
  1782: ab 8a f2                 jump @135 if a3 != a1
      :                          @138
  1785: 7b 79                    u64 [a0] = a2
  1787: 33 0b                    a4 = 0
  1789: 01                       fallthrough
      :                          @139
  1790: 82 17 48                 a0 = u64 [sp + 0x48]
  1793: 82 18 40                 a1 = u64 [sp + 0x40]
  1796: d4 87 07                 a0 = a0 | a1
  1799: 7b 17 48                 u64 [sp + 0x48] = a0
  1802: 95 19 80 00              a2 = sp + 0x80
  1806: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1810: 82 18 58                 a1 = u64 [sp + 0x58]
  1813: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1817: 95 17 70                 a0 = sp + 0x70
  1820: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1824: 82 17 38                 a0 = u64 [sp + 0x38]
  1827: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1831: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1835: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1839: 95 17 7c                 a0 = sp + 0x7c
  1842: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1846: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1850: 33 07 80 00 01           a0 = 0x10080
  1855: 7b 17 18 01              u64 [sp + 0x118] = a0
  1859: 49 21 20 01 04           u64 [sp + 288] = 0x4
  1864: 49 21 38 01              u64 [sp + 312] = 0
  1868: 95 18 b0 00              a1 = sp + 0xb0
  1872: 7b 18 28 01              u64 [sp + 0x128] = a1
  1876: 49 21 30 01 04           u64 [sp + 304] = 0x4
  1881: 95 17 00 01              a0 = sp + 0x100
  1885: 95 18 18 01              a1 = sp + 0x118
  1889: 50 10 20 08 08           ra = 32, jump @264
      :                          @140 [@dyn 16]
  1894: 82 15 08 01              s0 = u64 [sp + 0x108]
  1898: 82 1b 10 01              a4 = u64 [sp + 0x110]
  1902: 82 16 00 01              s1 = u64 [sp + 0x100]
  1906: 33 07 02                 a0 = 0x2
  1909: 33 08                    a1 = 0
  1911: 33 09                    a2 = 0
  1913: 64 5a                    a3 = s0
  1915: 33 00 22                 ra = 0x22
  1918: 0a 64                    ecalli 100 // 'log'
  1920: 01                       fallthrough
      :                          @141 [@dyn 17]
  1921: 82 17 50                 a0 = u64 [sp + 0x50]
  1924: c8 67 07                 a0 = a0 + s1
  1927: 53 37 00 00 ff 27        jump @147 if a0 <u 4294901760
      :                          @142
  1933: 33 07 e0 00 03           a0 = 0x300e0
  1938: 95 77 00 00 01           a0 = a0 + 0x10000
  1943: 01                       fallthrough
      :                          @143
  1944: 82 78                    a1 = u64 [a0]
  1946: c9 87 09                 a2 = a0 - a1
  1949: ab 59 11                 jump @147 if a2 != s0
      :                          @144
  1952: c9 68 09                 a2 = a1 - s1
  1955: 01                       fallthrough
      :                          @145
  1956: 82 7a                    a3 = u64 [a0]
  1958: ab 8a f2                 jump @143 if a3 != a1
      :                          @146
  1961: 7b 79                    u64 [a0] = a2
  1963: 33 0b                    a4 = 0
  1965: 01                       fallthrough
      :                          @147
  1966: 81 18 78                 a1 = i32 [sp + 0x78]
  1969: 81 19 7c                 a2 = i32 [sp + 0x7c]
  1972: 80 17 80 00              a0 = u32 [sp + 0x80]
  1976: be 89 09                 i32 a2 = a2 + a1
  1979: 7a 19 84 00              u32 [sp + 0x84] = a2
  1983: 82 18 60                 a1 = u64 [sp + 0x60]
  1986: 82 1a 48                 a3 = u64 [sp + 0x48]
  1989: be 8a 0a                 i32 a3 = a3 + a1
  1992: 7b 17 88 00              u64 [sp + 0x88] = a0
  1996: 97 78 01                 a1 = a0 << 0x1
  1999: 95 88 01                 a1 = a1 + 0x1
  2002: 97 88 20                 a1 = a1 << 0x20
  2005: 98 88 20                 a1 = a1 >> 0x20
  2008: 7b 18 90 00              u64 [sp + 0x90] = a1
  2012: 49 21 98 00 40 9c 00     u64 [sp + 152] = 0x9c40
  2019: 48 21 a0 00              u32 [sp + 160] = 0
  2023: 51 07 3d 02              jump @171 if a0 == 0
      :                          @148
  2027: 7b 1a                    u64 [sp] = a3
  2029: 7b 19 08                 u64 [sp + 0x8] = a2
  2032: 33 06                    s1 = 0
  2034: 33 0a                    a3 = 0
  2036: 14 08 ab aa aa aa 00 00 00 00 a1 = 0xaaaaaaab
  2046: ca 87 08                 a1 = a0 * a1
  2049: 98 88 21                 a1 = a1 >> 0x21
  2052: 97 89 01                 a2 = a1 << 0x1
  2055: bf 87 08                 i32 a1 = a0 - a1
  2058: bf 98 08                 i32 a1 = a1 - a2
  2061: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
  2064: 7b 19 20                 u64 [sp + 0x20] = a2
  2067: 86 88 02                 a1 = a1 | 0x2
  2070: 7b 18 18                 u64 [sp + 0x18] = a1
  2073: 33 08 58 00 03           a1 = 0x30058
  2078: 7b 18 40                 u64 [sp + 0x40] = a1
  2081: 33 08 06                 a1 = 0x6
  2084: 7b 18 38                 u64 [sp + 0x38] = a1
  2087: 33 08 0a                 a1 = 0xa
  2090: 7b 18 30                 u64 [sp + 0x30] = a1
  2093: 33 05 e0 00 03           s0 = 0x300e0
  2098: 95 55 00 00 01           s0 = s0 + 0x10000
  2103: 33 08 60 01 01           a1 = 0x10160
  2108: 7b 18 28                 u64 [sp + 0x28] = a1
  2111: 83 77                    i32 a0 = a0 + 0
  2113: 7b 17 10                 u64 [sp + 0x10] = a0
  2116: 28 13                    jump @151
      :                          @149
  2118: 82 16 60                 s1 = u64 [sp + 0x60]
  2121: 82 1a 58                 a3 = u64 [sp + 0x58]
  2124: 01                       fallthrough
      :                          @150
  2125: 83 aa 01                 i32 a3 = a3 + 0x1
  2128: 82 17 10                 a0 = u64 [sp + 0x10]
  2131: aa 7a c7 01              jump @170 if a3 == a0
      :                          @151
  2135: 7a 1a a4 00              u32 [sp + 0xa4] = a3
  2139: 82 17 18                 a0 = u64 [sp + 0x18]
  2142: 7b 1a 58                 u64 [sp + 0x58] = a3
  2145: 52 17 02 dd 00           jump @160 if a0 != 2
      :                          @152
  2150: 82 17 68                 a0 = u64 [sp + 0x68]
  2153: 82 18 88 00              a1 = u64 [sp + 0x88]
  2157: 82 19 98 00              a2 = u64 [sp + 0x98]
  2161: 82 1a 40                 a3 = u64 [sp + 0x40]
  2164: 0a 0b                    ecalli 11 // 'transfer'
  2166: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2170: 83 66 01                 i32 s1 = s1 + 0x1
  2173: 7b 16 60                 u64 [sp + 0x60] = s1
  2176: 7a 16 a0 00              u32 [sp + 0xa0] = s1
  2180: 95 17 a4 00              a0 = sp + 0xa4
  2184: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2188: 82 17 38                 a0 = u64 [sp + 0x38]
  2191: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2195: 95 17 68                 a0 = sp + 0x68
  2198: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2202: 82 17 30                 a0 = u64 [sp + 0x30]
  2205: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2209: 95 18 88 00              a1 = sp + 0x88
  2213: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  2217: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2221: 95 18 98 00              a1 = sp + 0x98
  2225: 7b 18 e0 00              u64 [sp + 0xe0] = a1
  2229: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  2233: 95 18 a8 00              a1 = sp + 0xa8
  2237: 7b 18 f0 00              u64 [sp + 0xf0] = a1
  2241: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2245: 82 17 28                 a0 = u64 [sp + 0x28]
  2248: 7b 17 18 01              u64 [sp + 0x118] = a0
  2252: 49 21 20 01 05           u64 [sp + 288] = 0x5
  2257: 49 21 38 01              u64 [sp + 312] = 0
  2261: 95 18 b0 00              a1 = sp + 0xb0
  2265: 7b 18 28 01              u64 [sp + 0x128] = a1
  2269: 49 21 30 01 05           u64 [sp + 304] = 0x5
  2274: 95 17 00 01              a0 = sp + 0x100
  2278: 95 18 18 01              a1 = sp + 0x118
  2282: 50 10 24 7f 06           ra = 36, jump @264
      :                          @153 [@dyn 18]
  2287: 82 16 08 01              s1 = u64 [sp + 0x108]
  2291: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2295: 82 17 00 01              a0 = u64 [sp + 0x100]
  2299: 7b 17 48                 u64 [sp + 0x48] = a0
  2302: 33 07 02                 a0 = 0x2
  2305: 33 08                    a1 = 0
  2307: 33 09                    a2 = 0
  2309: 64 6a                    a3 = s1
  2311: 33 00 26                 ra = 0x26
  2314: 0a 64                    ecalli 100 // 'log'
  2316: 01                       fallthrough
      :                          @154 [@dyn 19]
  2317: 82 1b 48                 a4 = u64 [sp + 0x48]
  2320: 82 17 50                 a0 = u64 [sp + 0x50]
  2323: c8 b7 07                 a0 = a0 + a4
  2326: 53 37 00 00 ff 21        jump @159 if a0 <u 4294901760
      :                          @155
  2332: 82 57                    a0 = u64 [s0]
  2334: c9 75 08                 a1 = s0 - a0
  2337: ab 68 16                 jump @159 if a1 != s1
      :                          @156
  2340: c9 b7 08                 a1 = a0 - a4
  2343: 01                       fallthrough
      :                          @157
  2344: 82 59                    a2 = u64 [s0]
  2346: ab 79 f2                 jump @155 if a2 != a0
      :                          @158
  2349: 7b 58                    u64 [s0] = a1
  2351: 82 16 60                 s1 = u64 [sp + 0x60]
  2354: 82 1a 58                 a3 = u64 [sp + 0x58]
  2357: 28 09                    jump @160
      :                          @159
  2359: 82 16 60                 s1 = u64 [sp + 0x60]
  2362: 82 1a 58                 a3 = u64 [sp + 0x58]
  2365: 01                       fallthrough
      :                          @160
  2366: 82 17 20                 a0 = u64 [sp + 0x20]
  2369: 55 17 02 0c ff           jump @150 if a0 >=u 2
      :                          @161
  2374: 82 17 70                 a0 = u64 [sp + 0x70]
  2377: 82 18 90 00              a1 = u64 [sp + 0x90]
  2381: 82 19 98 00              a2 = u64 [sp + 0x98]
  2385: 82 1a 40                 a3 = u64 [sp + 0x40]
  2388: 0a 0b                    ecalli 11 // 'transfer'
  2390: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2394: 83 66 01                 i32 s1 = s1 + 0x1
  2397: 7b 16 60                 u64 [sp + 0x60] = s1
  2400: 7a 16 a0 00              u32 [sp + 0xa0] = s1
  2404: 95 17 a4 00              a0 = sp + 0xa4
  2408: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2412: 82 17 38                 a0 = u64 [sp + 0x38]
  2415: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2419: 95 17 70                 a0 = sp + 0x70
  2422: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2426: 82 17 30                 a0 = u64 [sp + 0x30]
  2429: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2433: 95 18 90 00              a1 = sp + 0x90
  2437: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  2441: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2445: 95 18 98 00              a1 = sp + 0x98
  2449: 7b 18 e0 00              u64 [sp + 0xe0] = a1
  2453: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  2457: 95 18 a8 00              a1 = sp + 0xa8
  2461: 7b 18 f0 00              u64 [sp + 0xf0] = a1
  2465: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2469: 82 17 28                 a0 = u64 [sp + 0x28]
  2472: 7b 17 18 01              u64 [sp + 0x118] = a0
  2476: 49 21 20 01 05           u64 [sp + 288] = 0x5
  2481: 49 21 38 01              u64 [sp + 312] = 0
  2485: 95 18 b0 00              a1 = sp + 0xb0
  2489: 7b 18 28 01              u64 [sp + 0x128] = a1
  2493: 49 21 30 01 05           u64 [sp + 304] = 0x5
  2498: 95 17 00 01              a0 = sp + 0x100
  2502: 95 18 18 01              a1 = sp + 0x118
  2506: 50 10 28 9f 05           ra = 40, jump @264
      :                          @162 [@dyn 20]
  2511: 82 16 08 01              s1 = u64 [sp + 0x108]
  2515: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2519: 82 17 00 01              a0 = u64 [sp + 0x100]
  2523: 7b 17 48                 u64 [sp + 0x48] = a0
  2526: 33 07 02                 a0 = 0x2
  2529: 33 08                    a1 = 0
  2531: 33 09                    a2 = 0
  2533: 64 6a                    a3 = s1
  2535: 33 00 2a                 ra = 0x2a
  2538: 0a 64                    ecalli 100 // 'log'
  2540: 01                       fallthrough
      :                          @163 [@dyn 21]
  2541: 82 1b 48                 a4 = u64 [sp + 0x48]
  2544: 82 17 50                 a0 = u64 [sp + 0x50]
  2547: c8 b7 07                 a0 = a0 + a4
  2550: 53 37 00 00 ff 50 fe     jump @149 if a0 <u 4294901760
      :                          @164
  2557: 82 57                    a0 = u64 [s0]
  2559: c9 75 08                 a1 = s0 - a0
  2562: ab 68 44 fe              jump @149 if a1 != s1
      :                          @165
  2566: c9 b7 08                 a1 = a0 - a4
  2569: 01                       fallthrough
      :                          @166
  2570: 82 59                    a2 = u64 [s0]
  2572: ab 79 f1                 jump @164 if a2 != a0
      :                          @167
  2575: 7b 58                    u64 [s0] = a1
  2577: 33 0a                    a3 = 0
  2579: 01                       fallthrough
      :                          @168
  2580: ab 79 e9                 jump @164 if a2 != a0
      :                          @169
  2583: 28 2f fe                 jump @149
      :                          @170
  2586: 81 17 80 00              a0 = i32 [sp + 0x80]
  2590: 82 19 08                 a2 = u64 [sp + 0x8]
  2593: 82 1a                    a3 = u64 [sp]
  2595: 01                       fallthrough
      :                          @171
  2596: 3d 07 4c 00 03           u32 [0x3004c] = a0
  2601: 33 07 4c 00 03           a0 = 0x3004c
  2606: 3d 09 50 00 03           u32 [0x30050] = a2
  2611: 7b 17 58                 u64 [sp + 0x58] = a0
  2614: 3d 0a 54 00 03           u32 [0x30054] = a3
  2619: 95 17 80 00              a0 = sp + 0x80
  2623: 7b 17 18 01              u64 [sp + 0x118] = a0
  2627: 33 07 06                 a0 = 0x6
  2630: 7b 17 20 01              u64 [sp + 0x120] = a0
  2634: 95 18 84 00              a1 = sp + 0x84
  2638: 7b 18 28 01              u64 [sp + 0x128] = a1
  2642: 7b 17 60                 u64 [sp + 0x60] = a0
  2645: 7b 17 30 01              u64 [sp + 0x130] = a0
  2649: 33 07 c0 00 01           a0 = 0x100c0
  2654: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2658: 49 21 b8 00 02           u64 [sp + 184] = 0x2
  2663: 49 21 d0 00              u64 [sp + 208] = 0
  2667: 95 18 18 01              a1 = sp + 0x118
  2671: 7b 18 c0 00              u64 [sp + 0xc0] = a1
  2675: 49 21 c8 00 02           u64 [sp + 200] = 0x2
  2680: 95 17 00 01              a0 = sp + 0x100
  2684: 95 18 b0 00              a1 = sp + 0xb0
  2688: 50 10 2c e9 04           ra = 44, jump @264
      :                          @172 [@dyn 22]
  2693: 82 16 08 01              s1 = u64 [sp + 0x108]
  2697: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2701: 82 15 00 01              s0 = u64 [sp + 0x100]
  2705: 33 07 02                 a0 = 0x2
  2708: 33 08                    a1 = 0
  2710: 33 09                    a2 = 0
  2712: 64 6a                    a3 = s1
  2714: 33 00 2e                 ra = 0x2e
  2717: 0a 64                    ecalli 100 // 'log'
  2719: 01                       fallthrough
      :                          @173 [@dyn 23]
  2720: 82 17 50                 a0 = u64 [sp + 0x50]
  2723: c8 57 07                 a0 = a0 + s0
  2726: 53 37 00 00 ff 25        jump @179 if a0 <u 4294901760
      :                          @174
  2732: 33 07 e0 00 03           a0 = 0x300e0
  2737: 95 77 00 00 01           a0 = a0 + 0x10000
  2742: 01                       fallthrough
      :                          @175
  2743: 82 78                    a1 = u64 [a0]
  2745: c9 87 09                 a2 = a0 - a1
  2748: ab 69 0f                 jump @179 if a2 != s1
      :                          @176
  2751: c9 58 09                 a2 = a1 - s0
  2754: 01                       fallthrough
      :                          @177
  2755: 82 7a                    a3 = u64 [a0]
  2757: ab 8a f2                 jump @175 if a3 != a1
      :                          @178
  2760: 7b 79                    u64 [a0] = a2
  2762: 01                       fallthrough
      :                          @179
  2763: 33 07 10 00 03           a0 = 0x30010
  2768: 33 08 01                 a1 = 0x1
  2771: 33 0a 0c                 a3 = 0xc
  2774: 82 19 58                 a2 = u64 [sp + 0x58]
  2777: 0a 03                    ecalli 3 // 'write'
  2779: 95 17 80 00              a0 = sp + 0x80
  2783: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2787: 82 17 60                 a0 = u64 [sp + 0x60]
  2790: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2794: 95 18 84 00              a1 = sp + 0x84
  2798: 7b 18 c0 00              u64 [sp + 0xc0] = a1
  2802: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2806: 95 17 a0 00              a0 = sp + 0xa0
  2810: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  2814: 33 07 02                 a0 = 0x2
  2817: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2821: 33 07 00 01 01           a0 = 0x10100
  2826: 7b 17 18 01              u64 [sp + 0x118] = a0
  2830: 49 21 20 01 03           u64 [sp + 288] = 0x3
  2835: 49 21 38 01              u64 [sp + 312] = 0
  2839: 95 18 b0 00              a1 = sp + 0xb0
  2843: 7b 18 28 01              u64 [sp + 0x128] = a1
  2847: 49 21 30 01 03           u64 [sp + 304] = 0x3
  2852: 95 17 00 01              a0 = sp + 0x100
  2856: 95 18 18 01              a1 = sp + 0x118
  2860: 50 10 30 3d 04           ra = 48, jump @264
      :                          @180 [@dyn 24]
  2865: 82 15 08 01              s0 = u64 [sp + 0x108]
  2869: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2873: 82 16 00 01              s1 = u64 [sp + 0x100]
  2877: 33 07 02                 a0 = 0x2
  2880: 33 08                    a1 = 0
  2882: 33 09                    a2 = 0
  2884: 64 5a                    a3 = s0
  2886: 33 00 32                 ra = 0x32
  2889: 0a 64                    ecalli 100 // 'log'
  2891: 01                       fallthrough
      :                          @181 [@dyn 25]
  2892: 82 17 50                 a0 = u64 [sp + 0x50]
  2895: c8 67 07                 a0 = a0 + s1
  2898: 53 37 00 00 ff 27        jump @187 if a0 <u 4294901760
      :                          @182
  2904: 33 07 e0 00 03           a0 = 0x300e0
  2909: 95 77 00 00 01           a0 = a0 + 0x10000
  2914: 01                       fallthrough
      :                          @183
  2915: 82 78                    a1 = u64 [a0]
  2917: c9 87 09                 a2 = a0 - a1
  2920: ab 59 11                 jump @187 if a2 != s0
      :                          @184
  2923: c9 68 09                 a2 = a1 - s1
  2926: 01                       fallthrough
      :                          @185
  2927: 82 7a                    a3 = u64 [a0]
  2929: ab 8a f2                 jump @183 if a3 != a1
      :                          @186
  2932: 7b 79                    u64 [a0] = a2
  2934: 33 0b                    a4 = 0
  2936: 01                       fallthrough
      :                          @187
  2937: 33 05 12 00 03           s0 = 0x30012
  2942: 33 08 4c 00 03           a1 = 0x3004c
  2947: 33 09 0c                 a2 = 0xc
  2950: 33 07 12 00 03           a0 = 0x30012
  2955: 50 10 34 52 06           ra = 52, jump @314
      :                          @188 [@dyn 26]
  2960: 64 57                    a0 = s0
  2962: 0a 10                    ecalli 16 // 'oyield'
  2964: 64 59                    a2 = s0
  2966: 33 08 20                 a1 = 0x20
  2969: 28 e3 f8                 jump @100
      :                          @189
  2972: 00                       trap
      :                          @190
  2973: 00                       trap
      :                          @191 [export #2: 'on_transfer']
  2974: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
  2978: 7b 10 18 01              u64 [sp + 0x118] = ra
  2982: 7b 15 10 01              u64 [sp + 0x110] = s0
  2986: 7b 16 08 01              u64 [sp + 0x108] = s1
  2990: 49 11 08 ff ff fe        u64 [sp + 8] = 0xfffffffffffeffff
  2996: 0a                       ecalli 0 // 'gas'
  2997: 7b 17 10                 u64 [sp + 0x10] = a0
  3000: 7b 17 18                 u64 [sp + 0x18] = a0
  3003: 46 11 27 04              u8 [sp + 39] = 0x4
  3007: 7b 17 28                 u64 [sp + 0x28] = a0
  3010: 95 17 27                 a0 = sp + 0x27
  3013: 33 08 01                 a1 = 0x1
  3016: 95 19 28                 a2 = sp + 0x28
  3019: 33 0a 08                 a3 = 0x8
  3022: 0a 03                    ecalli 3 // 'write'
  3024: 95 17 27                 a0 = sp + 0x27
  3027: 7b 17 78                 u64 [sp + 0x78] = a0
  3030: 33 07 86 00              a0 = 0x86
  3034: 7b 17 80 00              u64 [sp + 0x80] = a0
  3038: 95 17 18                 a0 = sp + 0x18
  3041: 7b 17 88 00              u64 [sp + 0x88] = a0
  3045: 49 21 98 00 02           u64 [sp + 152] = 0x2
  3050: 49 21 a8 00 02           u64 [sp + 168] = 0x2
  3055: 49 21 b8 00              u64 [sp + 184] = 0
  3059: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  3069: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  3073: 46 21 c8 00 03           u8 [sp + 200] = 0x3
  3078: 49 21 d0 00 02           u64 [sp + 208] = 0x2
  3083: 49 21 e0 00 02           u64 [sp + 224] = 0x2
  3088: 49 21 f0 00 01           u64 [sp + 240] = 0x1
  3093: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  3097: 33 07 0a                 a0 = 0xa
  3100: 7b 17                    u64 [sp] = a0
  3102: 7b 17 90 00              u64 [sp + 0x90] = a0
  3106: 46 21 00 01 03           u8 [sp + 256] = 0x3
  3111: 33 07 58 03 01           a0 = 0x10358
  3116: 7b 17 48                 u64 [sp + 0x48] = a0
  3119: 49 11 50 02              u64 [sp + 80] = 0x2
  3123: 95 17 98 00              a0 = sp + 0x98
  3127: 7b 17 68                 u64 [sp + 0x68] = a0
  3130: 49 11 70 02              u64 [sp + 112] = 0x2
  3134: 95 17 78                 a0 = sp + 0x78
  3137: 7b 17 58                 u64 [sp + 0x58] = a0
  3140: 49 11 60 02              u64 [sp + 96] = 0x2
  3144: 95 17 30                 a0 = sp + 0x30
  3147: 95 18 48                 a1 = sp + 0x48
  3150: 50 10 36 1b 03           ra = 54, jump @264
      :                          @192 [@dyn 27]
  3155: 82 15 38                 s0 = u64 [sp + 0x38]
  3158: 82 1b 40                 a4 = u64 [sp + 0x40]
  3161: 82 16 30                 s1 = u64 [sp + 0x30]
  3164: 33 07 02                 a0 = 0x2
  3167: 33 08                    a1 = 0
  3169: 33 09                    a2 = 0
  3171: 64 5a                    a3 = s0
  3173: 33 00 38                 ra = 0x38
  3176: 0a 64                    ecalli 100 // 'log'
  3178: 01                       fallthrough
      :                          @193 [@dyn 28]
  3179: 82 17 08                 a0 = u64 [sp + 0x8]
  3182: c8 67 07                 a0 = a0 + s1
  3185: 53 37 00 00 ff 27        jump @199 if a0 <u 4294901760
      :                          @194
  3191: 33 07 e0 00 03           a0 = 0x300e0
  3196: 95 77 00 00 01           a0 = a0 + 0x10000
  3201: 01                       fallthrough
      :                          @195
  3202: 82 78                    a1 = u64 [a0]
  3204: c9 87 09                 a2 = a0 - a1
  3207: ab 59 11                 jump @199 if a2 != s0
      :                          @196
  3210: c9 68 09                 a2 = a1 - s1
  3213: 01                       fallthrough
      :                          @197
  3214: 82 7a                    a3 = u64 [a0]
  3216: ab 8a f2                 jump @195 if a3 != a1
      :                          @198
  3219: 7b 79                    u64 [a0] = a2
  3221: 33 0b                    a4 = 0
  3223: 01                       fallthrough
      :                          @199
  3224: 95 17 10                 a0 = sp + 0x10
  3227: 7b 17 78                 u64 [sp + 0x78] = a0
  3230: 82 17                    a0 = u64 [sp]
  3232: 7b 17 80 00              u64 [sp + 0x80] = a0
  3236: 33 07 e8 01 01           a0 = 0x101e8
  3241: 7b 17 98 00              u64 [sp + 0x98] = a0
  3245: 49 21 a0 00 02           u64 [sp + 160] = 0x2
  3250: 49 21 b8 00              u64 [sp + 184] = 0
  3254: 95 17 78                 a0 = sp + 0x78
  3257: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  3261: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  3266: 95 17 48                 a0 = sp + 0x48
  3269: 95 18 98 00              a1 = sp + 0x98
  3273: 50 10 3a a0 02           ra = 58, jump @264
      :                          @200 [@dyn 29]
  3278: 82 15 50                 s0 = u64 [sp + 0x50]
  3281: 82 1b 58                 a4 = u64 [sp + 0x58]
  3284: 82 16 48                 s1 = u64 [sp + 0x48]
  3287: 33 07 02                 a0 = 0x2
  3290: 33 08                    a1 = 0
  3292: 33 09                    a2 = 0
  3294: 64 5a                    a3 = s0
  3296: 33 00 3c                 ra = 0x3c
  3299: 0a 64                    ecalli 100 // 'log'
  3301: 01                       fallthrough
      :                          @201 [@dyn 30]
  3302: 82 17 08                 a0 = u64 [sp + 0x8]
  3305: c8 67 07                 a0 = a0 + s1
  3308: 53 37 00 00 ff 27        jump @207 if a0 <u 4294901760
      :                          @202
  3314: 33 07 e0 00 03           a0 = 0x300e0
  3319: 95 77 00 00 01           a0 = a0 + 0x10000
  3324: 01                       fallthrough
      :                          @203
  3325: 82 78                    a1 = u64 [a0]
  3327: c9 87 09                 a2 = a0 - a1
  3330: ab 59 11                 jump @207 if a2 != s0
      :                          @204
  3333: c9 68 09                 a2 = a1 - s1
  3336: 01                       fallthrough
      :                          @205
  3337: 82 7a                    a3 = u64 [a0]
  3339: ab 8a f2                 jump @203 if a3 != a1
      :                          @206
  3342: 7b 79                    u64 [a0] = a2
  3344: 33 0b                    a4 = 0
  3346: 01                       fallthrough
      :                          @207
  3347: 33 07 00 00 01           a0 = 0x10000
  3352: 33 08                    a1 = 0
  3354: 82 10 18 01              ra = u64 [sp + 0x118]
  3358: 82 15 10 01              s0 = u64 [sp + 0x110]
  3362: 82 16 08 01              s1 = u64 [sp + 0x108]
  3366: 95 11 20 01              sp = sp + 0x120
  3370: 32 00                    ret
      :                          @208
  3372: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3375: 7b 10 40                 u64 [sp + 0x40] = ra
  3378: 7b 15 38                 u64 [sp + 0x38] = s0
  3381: 7b 16 30                 u64 [sp + 0x30] = s1
  3384: c8 89 09                 a2 = a2 + a1
  3387: ac 89 52                 jump @216 if a2 <u a1
      :                          @209
  3390: 64 75                    s0 = a0
  3392: 82 77                    a0 = u64 [a0]
  3394: 97 78 01                 a1 = a0 << 0x1
  3397: 33 0a 08                 a3 = 0x8
  3400: e4 a9 09                 a2 = maxu(a2, a3)
  3403: e4 98 06                 s1 = maxu(a1, a2)
  3406: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3409: 98 88 3f                 a1 = a1 >> 0x3f
  3412: 51 07 12                 jump @211 if a0 == 0
      :                          @210
  3415: 82 59 08                 a2 = u64 [s0 + 0x8]
  3418: 7b 19 18                 u64 [sp + 0x18] = a2
  3421: 49 11 20 01              u64 [sp + 32] = 0x1
  3425: 7b 17 28                 u64 [sp + 0x28] = a0
  3428: 28 06                    jump @212
      :                          @211
  3430: 49 11 20                 u64 [sp + 32] = 0
  3433: 01                       fallthrough
      :                          @212
  3434: 64 17                    a0 = sp
  3436: 95 1a 18                 a3 = sp + 0x18
  3439: 64 69                    a2 = s1
  3441: 50 10 3e 32              ra = 62, jump @220
      :                          @213 [@dyn 31]
  3445: 82 18                    a1 = u64 [sp]
  3447: 82 17 08                 a0 = u64 [sp + 0x8]
  3450: 51 08 14                 jump @217 if a1 == 0
      :                          @214
  3453: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3463: aa 87 0d                 jump @218 if a0 == a1
      :                          @215
  3466: 52 07 18                 jump @219 if a0 != 0
      :                          @216
  3469: 00                       trap
      :                          @217
  3470: 7b 57 08                 u64 [s0 + 0x8] = a0
  3473: 7b 56                    u64 [s0] = s1
  3475: 01                       fallthrough
      :                          @218
  3476: 82 10 40                 ra = u64 [sp + 0x40]
  3479: 82 15 38                 s0 = u64 [sp + 0x38]
  3482: 82 16 30                 s1 = u64 [sp + 0x30]
  3485: 95 11 48                 sp = sp + 0x48
  3488: 32 00                    ret
      :                          @219
  3490: 00                       trap
      :                          @220
  3491: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3494: 7b 10 30                 u64 [sp + 0x30] = ra
  3497: 7b 15 28                 u64 [sp + 0x28] = s0
  3500: 7b 16 20                 u64 [sp + 0x20] = s1
  3503: 64 95                    s0 = a2
  3505: 64 72                    t0 = a0
  3507: 51 08 79                 jump @230 if a1 == 0
      :                          @221
  3510: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3513: 51 07 7c                 jump @231 if a0 == 0
      :                          @222
  3516: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3519: 51 09 aa 00              jump @238 if a2 == 0
      :                          @223
  3523: 82 a8                    a1 = u64 [a3]
  3525: 33 06 e0 00 03           s1 = 0x300e0
  3530: 33 03 00 00 01           t1 = 0x10000
  3535: c8 36 06                 s1 = s1 + t1
  3538: 01                       fallthrough
      :                          @224
  3539: 82 6a                    a3 = u64 [s1]
  3541: c8 5a 07                 a0 = a3 + s0
  3544: ac a7 cf 00              jump @244 if a0 <u a3
      :                          @225
  3548: 95 7b 01                 a4 = a0 + 0x1
  3551: 88 bc 01                 a5 = a4 <u 0x1
  3554: d8 b3 0b                 a4 = t1 <u a4
  3557: d4 cb 0b                 a4 = a4 | a5
  3560: 52 0b bf 00              jump @244 if a4 != 0
      :                          @226
  3564: 82 6b                    a4 = u64 [s1]
  3566: ab ab e5                 jump @224 if a4 != a3
      :                          @227
  3569: 7b 67                    u64 [s1] = a0
  3571: 33 0c                    a5 = 0
  3573: 7b 12 18                 u64 [sp + 0x18] = t0
  3576: 33 0a e0 00 03           a3 = 0x300e0
  3581: 33 0b 00 00 01           a4 = 0x10000
  3586: 7b 1a                    u64 [sp] = a3
  3588: c8 ba 0a                 a3 = a3 + a4
  3591: c9 7a 07                 a0 = a3 - a0
  3594: 7b 17 10                 u64 [sp + 0x10] = a0
  3597: 7b 18 08                 u64 [sp + 0x8] = a1
  3600: 64 96                    s1 = a2
  3602: 50 10 40 cb 03           ra = 64, jump @314
      :                          @228 [@dyn 32]
  3607: 54 36 00 00 01 98 00     jump @245 if s1 <=u 65536
      :                          @229
  3614: 82 12 18                 t0 = u64 [sp + 0x18]
  3617: 82 18 10                 a1 = u64 [sp + 0x10]
  3620: 33 07                    a0 = 0
  3622: 7b 28 08                 u64 [t0 + 0x8] = a1
  3625: 28 b5 00                 jump @251
      :                          @230
  3628: 49 12 08                 u64 [t0 + 8] = 0
  3631: 33 07 01                 a0 = 0x1
  3634: 28 ac 00                 jump @251
      :                          @231
  3637: 33 09 e0 00 03           a2 = 0x300e0
  3642: 33 07 00 00 01           a0 = 0x10000
  3647: c8 79 09                 a2 = a2 + a0
  3650: 01                       fallthrough
      :                          @232
  3651: 82 9a                    a3 = u64 [a2]
  3653: c8 5a 08                 a1 = a3 + s0
  3656: ac a8 5f                 jump @244 if a1 <u a3
      :                          @233
  3659: 95 8b 01                 a4 = a1 + 0x1
  3662: 88 bc 01                 a5 = a4 <u 0x1
  3665: d8 b7 0b                 a4 = a0 <u a4
  3668: d4 cb 0b                 a4 = a4 | a5
  3671: 52 0b 50                 jump @244 if a4 != 0
      :                          @234
  3674: 82 9b                    a4 = u64 [a2]
  3676: ab ab e7                 jump @232 if a4 != a3
      :                          @235
  3679: 7b 98                    u64 [a2] = a1
  3681: 33 0c                    a5 = 0
  3683: 01                       fallthrough
      :                          @236
  3684: ab ab df                 jump @232 if a4 != a3
      :                          @237
  3687: 28 31                    jump @243
      :                          @238
  3689: 33 09 e0 00 03           a2 = 0x300e0
  3694: 33 07 00 00 01           a0 = 0x10000
  3699: c8 79 09                 a2 = a2 + a0
  3702: 01                       fallthrough
      :                          @239
  3703: 82 9a                    a3 = u64 [a2]
  3705: c8 5a 08                 a1 = a3 + s0
  3708: ac a8 2b                 jump @244 if a1 <u a3
      :                          @240
  3711: 95 8b 01                 a4 = a1 + 0x1
  3714: 88 bc 01                 a5 = a4 <u 0x1
  3717: d8 b7 0b                 a4 = a0 <u a4
  3720: d4 cb 0b                 a4 = a4 | a5
  3723: 52 0b 1c                 jump @244 if a4 != 0
      :                          @241
  3726: 82 9b                    a4 = u64 [a2]
  3728: ab ab e7                 jump @239 if a4 != a3
      :                          @242
  3731: 7b 98                    u64 [a2] = a1
  3733: 33 0c                    a5 = 0
  3735: 01                       fallthrough
      :                          @243
  3736: 33 07 e0 00 04           a0 = 0x400e0
  3741: c9 87 08                 a1 = a0 - a1
  3744: 33 07                    a0 = 0
  3746: 7b 28 08                 u64 [t0 + 0x8] = a1
  3749: 28 39                    jump @251
      :                          @244
  3751: 33 07 01                 a0 = 0x1
  3754: 7b 27 08                 u64 [t0 + 0x8] = a0
  3757: 28 31                    jump @251
      :                          @245
  3759: 64 6c                    a5 = s1
  3761: 82 17                    a0 = u64 [sp]
  3763: 95 77 00 00 01           a0 = a0 + 0x10000
  3768: 82 12 18                 t0 = u64 [sp + 0x18]
  3771: 82 16 08                 s1 = u64 [sp + 0x8]
  3774: 01                       fallthrough
      :                          @246
  3775: 82 78                    a1 = u64 [a0]
  3777: c9 87 09                 a2 = a0 - a1
  3780: ab 69 11                 jump @250 if a2 != s1
      :                          @247
  3783: c9 c8 09                 a2 = a1 - a5
  3786: 01                       fallthrough
      :                          @248
  3787: 82 7a                    a3 = u64 [a0]
  3789: ab 8a f2                 jump @246 if a3 != a1
      :                          @249
  3792: 7b 79                    u64 [a0] = a2
  3794: 33 0b                    a4 = 0
  3796: 01                       fallthrough
      :                          @250
  3797: 82 18 10                 a1 = u64 [sp + 0x10]
  3800: 33 07                    a0 = 0
  3802: 7b 28 08                 u64 [t0 + 0x8] = a1
  3805: 01                       fallthrough
      :                          @251
  3806: 7b 25 10                 u64 [t0 + 0x10] = s0
  3809: 7b 27                    u64 [t0] = a0
  3811: 82 10 30                 ra = u64 [sp + 0x30]
  3814: 82 15 28                 s0 = u64 [sp + 0x28]
  3817: 82 16 20                 s1 = u64 [sp + 0x20]
  3820: 95 11 38                 sp = sp + 0x38
  3823: 32 00                    ret
      :                          @252
  3825: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3828: 7b 10 40                 u64 [sp + 0x40] = ra
  3831: 7b 15 38                 u64 [sp + 0x38] = s0
  3834: 7b 16 30                 u64 [sp + 0x30] = s1
  3837: 95 88 01                 a1 = a1 + 0x1
  3840: 51 08 53                 jump @260 if a1 == 0
      :                          @253
  3843: 64 75                    s0 = a0
  3845: 82 77                    a0 = u64 [a0]
  3847: 97 79 01                 a2 = a0 << 0x1
  3850: 33 0a 08                 a3 = 0x8
  3853: e4 a8 08                 a1 = maxu(a1, a3)
  3856: e4 89 06                 s1 = maxu(a2, a1)
  3859: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3862: 98 88 3f                 a1 = a1 >> 0x3f
  3865: 51 07 12                 jump @255 if a0 == 0
      :                          @254
  3868: 82 59 08                 a2 = u64 [s0 + 0x8]
  3871: 7b 19 18                 u64 [sp + 0x18] = a2
  3874: 49 11 20 01              u64 [sp + 32] = 0x1
  3878: 7b 17 28                 u64 [sp + 0x28] = a0
  3881: 28 06                    jump @256
      :                          @255
  3883: 49 11 20                 u64 [sp + 32] = 0
  3886: 01                       fallthrough
      :                          @256
  3887: 64 17                    a0 = sp
  3889: 95 1a 18                 a3 = sp + 0x18
  3892: 64 69                    a2 = s1
  3894: 50 10 42 6d fe           ra = 66, jump @220
      :                          @257 [@dyn 33]
  3899: 82 18                    a1 = u64 [sp]
  3901: 82 17 08                 a0 = u64 [sp + 0x8]
  3904: 51 08 14                 jump @261 if a1 == 0
      :                          @258
  3907: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3917: aa 87 0d                 jump @262 if a0 == a1
      :                          @259
  3920: 52 07 18                 jump @263 if a0 != 0
      :                          @260
  3923: 00                       trap
      :                          @261
  3924: 7b 57 08                 u64 [s0 + 0x8] = a0
  3927: 7b 56                    u64 [s0] = s1
  3929: 01                       fallthrough
      :                          @262
  3930: 82 10 40                 ra = u64 [sp + 0x40]
  3933: 82 15 38                 s0 = u64 [sp + 0x38]
  3936: 82 16 30                 s1 = u64 [sp + 0x30]
  3939: 95 11 48                 sp = sp + 0x48
  3942: 32 00                    ret
      :                          @263
  3944: 00                       trap
      :                          @264
  3945: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3948: 7b 10 30                 u64 [sp + 0x30] = ra
  3951: 7b 15 28                 u64 [sp + 0x28] = s0
  3954: 7b 16 20                 u64 [sp + 0x20] = s1
  3957: 64 89                    a2 = a1
  3959: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3962: 64 75                    s0 = a0
  3964: 51 0a 35                 jump @269 if a3 == 0
      :                          @265
  3967: 82 98                    a1 = u64 [a2]
  3969: 33 07                    a0 = 0
  3971: 95 8b 08                 a4 = a1 + 0x8
  3974: 01                       fallthrough
      :                          @266
  3975: 82 bc                    a5 = u64 [a4]
  3977: c8 c7 07                 a0 = a0 + a5
  3980: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3983: 95 bb 10                 a4 = a4 + 0x10
  3986: 52 0a f5                 jump @266 if a3 != 0
      :                          @267
  3989: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3992: 51 0a 24                 jump @271 if a3 == 0
      :                          @268
  3995: 82 88 08                 a1 = u64 [a1 + 0x8]
  3998: 8e 88                    a1 = a1 >u 0
  4000: 88 7a 10                 a3 = a0 <u 0x10
  4003: 85 aa 01                 a3 = a3 ^ 0x1
  4006: d4 a8 08                 a1 = a1 | a3
  4009: 89 7a                    a3 = a0 <s 0
  4011: e0 a8 08                 a1 = a1 & ~a3
  4014: 52 08 0a                 jump @270 if a1 != 0
      :                          @269
  4017: 33 07                    a0 = 0
  4019: 33 08 01                 a1 = 0x1
  4022: 28 4a                    jump @279
      :                          @270
  4024: 97 77 01                 a0 = a0 << 0x1
  4027: 01                       fallthrough
      :                          @271
  4028: 51 07 40                 jump @278 if a0 == 0
      :                          @272
  4031: 57 07 78                 jump @284 if a0 <s 0
      :                          @273
  4034: 64 52                    t0 = s0
  4036: 33 0b e0 00 03           a4 = 0x300e0
  4041: 33 08 00 00 01           a1 = 0x10000
  4046: c8 8b 0b                 a4 = a4 + a1
  4049: 01                       fallthrough
      :                          @274
  4050: 82 bc                    a5 = u64 [a4]
  4052: c8 7c 0a                 a3 = a5 + a0
  4055: ac ca 5e                 jump @282 if a3 <u a5
      :                          @275
  4058: 95 a5 01                 s0 = a3 + 0x1
  4061: 88 56 01                 s1 = s0 <u 0x1
  4064: d8 58 05                 s0 = a1 <u s0
  4067: d4 65 05                 s0 = s0 | s1
  4070: 52 05 4f                 jump @282 if s0 != 0
      :                          @276
  4073: 82 b6                    s1 = u64 [a4]
  4075: ab c6 e7                 jump @274 if s1 != a5
      :                          @277
  4078: 7b ba                    u64 [a4] = a3
  4080: 33 08 e0 00 04           a1 = 0x400e0
  4085: c9 a8 08                 a1 = a1 - a3
  4088: 64 25                    s0 = t0
  4090: 28 06                    jump @279
      :                          @278
  4092: 33 08 01                 a1 = 0x1
  4095: 01                       fallthrough
      :                          @279
  4096: 7b 17                    u64 [sp] = a0
  4098: 7b 18 08                 u64 [sp + 0x8] = a1
  4101: 49 11 10                 u64 [sp + 16] = 0
  4104: 33 08 08 02 01           a1 = 0x10208
  4109: 64 17                    a0 = sp
  4111: 50 10 44 32 06           ra = 68, jump @398
      :                          @280 [@dyn 34]
  4116: 52 07 22                 jump @283 if a0 != 0
      :                          @281
  4119: 82 17 10                 a0 = u64 [sp + 0x10]
  4122: 82 18 08                 a1 = u64 [sp + 0x8]
  4125: 82 19                    a2 = u64 [sp]
  4127: 7b 57 10                 u64 [s0 + 0x10] = a0
  4130: 7b 58 08                 u64 [s0 + 0x8] = a1
  4133: 7b 59                    u64 [s0] = a2
  4135: 82 10 30                 ra = u64 [sp + 0x30]
  4138: 82 15 28                 s0 = u64 [sp + 0x28]
  4141: 82 16 20                 s1 = u64 [sp + 0x20]
  4144: 95 11 38                 sp = sp + 0x38
  4147: 32 00                    ret
      :                          @282
  4149: 00                       trap
      :                          @283
  4150: 00                       trap
      :                          @284
  4151: 00                       trap
      :                          @285 [@dyn 35]
  4152: 82 72                    t0 = u64 [a0]
  4154: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  4159: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  4164: ac 9a 28                 jump @291 if a3 <u a2
      :                          @286
  4167: 82 77 08                 a0 = u64 [a0 + 0x8]
  4170: 33 09 e0 00 03           a2 = 0x300e0
  4175: 95 99 00 00 01           a2 = a2 + 0x10000
  4180: 01                       fallthrough
      :                          @287
  4181: 82 9a                    a3 = u64 [a2]
  4183: c9 a9 0b                 a4 = a2 - a3
  4186: ab 7b 12                 jump @291 if a4 != a0
      :                          @288
  4189: c9 2a 0b                 a4 = a3 - t0
  4192: 01                       fallthrough
      :                          @289
  4193: 82 9c                    a5 = u64 [a2]
  4195: ab ac f2                 jump @287 if a5 != a3
      :                          @290
  4198: 7b 9b                    u64 [a2] = a4
  4200: 33 08                    a1 = 0
  4202: 32 00                    ret
      :                          @291
  4204: 32 00                    ret
      :                          @292 [@dyn 36]
  4206: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4209: 7b 10 18                 u64 [sp + 0x18] = ra
  4212: 7b 15 10                 u64 [sp + 0x10] = s0
  4215: 7b 16 08                 u64 [sp + 0x8] = s1
  4218: 64 75                    s0 = a0
  4220: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4223: 82 77                    a0 = u64 [a0]
  4225: c9 a7 07                 a0 = a0 - a3
  4228: 64 96                    s1 = a2
  4230: ac 97 2a                 jump @295 if a0 <u a2
      :                          @293
  4233: 7b 1a                    u64 [sp] = a3
  4235: 82 57 08                 a0 = u64 [s0 + 0x8]
  4238: c8 a7 07                 a0 = a0 + a3
  4241: 64 69                    a2 = s1
  4243: 50 10 4a 4a 01           ra = 74, jump @314
      :                          @294 [@dyn 37]
  4248: 82 17                    a0 = u64 [sp]
  4250: c8 76 06                 s1 = s1 + a0
  4253: 7b 56 10                 u64 [s0 + 0x10] = s1
  4256: 33 07                    a0 = 0
  4258: 82 10 18                 ra = u64 [sp + 0x18]
  4261: 82 15 10                 s0 = u64 [sp + 0x10]
  4264: 82 16 08                 s1 = u64 [sp + 0x8]
  4267: 95 11 20                 sp = sp + 0x20
  4270: 32 00                    ret
      :                          @295
  4272: 64 57                    a0 = s0
  4274: 7b 18                    u64 [sp] = a1
  4276: 64 a8                    a1 = a3
  4278: 64 69                    a2 = s1
  4280: 50 10 4c 74 fc           ra = 76, jump @208
      :                          @296 [@dyn 38]
  4285: 82 18                    a1 = u64 [sp]
  4287: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4290: 28 c7                    jump @293
      :                          @297 [@dyn 39]
  4292: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4295: 7b 10 20                 u64 [sp + 0x20] = ra
  4298: 7b 15 18                 u64 [sp + 0x18] = s0
  4301: 7b 16 10                 u64 [sp + 0x10] = s1
  4304: 64 86                    s1 = a1
  4306: 83 88                    i32 a1 = a1 + 0
  4308: 33 09 80 00              a2 = 0x80
  4312: 64 7a                    a3 = a0
  4314: ae 98 2b                 jump @302 if a1 >=u a2
      :                          @298
  4317: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4320: 82 a7                    a0 = u64 [a3]
  4322: ab 78 12                 jump @301 if a1 != a0
      :                          @299
  4325: 64 a7                    a0 = a3
  4327: 64 a5                    s0 = a3
  4329: 50 10 50 08 fe           ra = 80, jump @252
      :                          @300 [@dyn 40]
  4334: 64 5a                    a3 = s0
  4336: 82 58 10                 a1 = u64 [s0 + 0x10]
  4339: 01                       fallthrough
      :                          @301
  4340: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4343: c8 87 07                 a0 = a0 + a1
  4346: 78 76                    u8 [a0] = s1
  4348: 95 88 01                 a1 = a1 + 0x1
  4351: 7b a8 10                 u64 [a3 + 0x10] = a1
  4354: 28 ab 00                 jump @310
      :                          @302
  4357: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4360: 48 11 0c                 u32 [sp + 12] = 0
  4363: 52 07 1c                 jump @304 if a0 != 0
      :                          @303
  4366: 98 67 06                 a0 = s1 >> 0x6
  4369: 86 77 c0 00              a0 = a0 | 0xc0
  4373: 78 17 0c                 u8 [sp + 0xc] = a0
  4376: 84 67 3f                 a0 = s1 & 0x3f
  4379: 86 77 80 00              a0 = a0 | 0x80
  4383: 78 17 0d                 u8 [sp + 0xd] = a0
  4386: 33 06 02                 s1 = 0x2
  4389: 28 63                    jump @307
      :                          @304
  4391: 8b 67 10                 i32 a0 = s1 >> 0x10
  4394: 52 07 29                 jump @306 if a0 != 0
      :                          @305
  4397: 98 67 0c                 a0 = s1 >> 0xc
  4400: 86 77 e0 00              a0 = a0 | 0xe0
  4404: 78 17 0c                 u8 [sp + 0xc] = a0
  4407: 97 67 34                 a0 = s1 << 0x34
  4410: 98 77 3a                 a0 = a0 >> 0x3a
  4413: 95 77 80 00              a0 = a0 + 0x80
  4417: 78 17 0d                 u8 [sp + 0xd] = a0
  4420: 84 67 3f                 a0 = s1 & 0x3f
  4423: 86 77 80 00              a0 = a0 | 0x80
  4427: 78 17 0e                 u8 [sp + 0xe] = a0
  4430: 33 06 03                 s1 = 0x3
  4433: 28 37                    jump @307
      :                          @306
  4435: 97 67 2b                 a0 = s1 << 0x2b
  4438: 98 77 3d                 a0 = a0 >> 0x3d
  4441: 95 77 f0 00              a0 = a0 + 0xf0
  4445: 78 17 0c                 u8 [sp + 0xc] = a0
  4448: 97 67 2e                 a0 = s1 << 0x2e
  4451: 98 77 3a                 a0 = a0 >> 0x3a
  4454: 95 77 80 00              a0 = a0 + 0x80
  4458: 78 17 0d                 u8 [sp + 0xd] = a0
  4461: 97 67 34                 a0 = s1 << 0x34
  4464: 98 77 3a                 a0 = a0 >> 0x3a
  4467: 95 77 80 00              a0 = a0 + 0x80
  4471: 78 17 0e                 u8 [sp + 0xe] = a0
  4474: 84 67 3f                 a0 = s1 & 0x3f
  4477: 86 77 80 00              a0 = a0 | 0x80
  4481: 78 17 0f                 u8 [sp + 0xf] = a0
  4484: 33 06 04                 s1 = 0x4
  4487: 01                       fallthrough
      :                          @307
  4488: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4491: 82 a7                    a0 = u64 [a3]
  4493: c9 57 07                 a0 = a0 - s0
  4496: ac 67 2d                 jump @311 if a0 <u s1
      :                          @308
  4499: 7b 1a                    u64 [sp] = a3
  4501: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4504: c8 57 07                 a0 = a0 + s0
  4507: 95 18 0c                 a1 = sp + 0xc
  4510: 64 69                    a2 = s1
  4512: 50 10 52 3d              ra = 82, jump @314
      :                          @309 [@dyn 41]
  4516: c8 56 06                 s1 = s1 + s0
  4519: 82 17                    a0 = u64 [sp]
  4521: 7b 76 10                 u64 [a0 + 0x10] = s1
  4524: 01                       fallthrough
      :                          @310
  4525: 33 07                    a0 = 0
  4527: 82 10 20                 ra = u64 [sp + 0x20]
  4530: 82 15 18                 s0 = u64 [sp + 0x18]
  4533: 82 16 10                 s1 = u64 [sp + 0x10]
  4536: 95 11 28                 sp = sp + 0x28
  4539: 32 00                    ret
      :                          @311
  4541: 64 a7                    a0 = a3
  4543: 64 58                    a1 = s0
  4545: 64 69                    a2 = s1
  4547: 64 a5                    s0 = a3
  4549: 50 10 54 67 fb           ra = 84, jump @208
      :                          @312 [@dyn 42]
  4554: 64 5a                    a3 = s0
  4556: 82 55 10                 s0 = u64 [s0 + 0x10]
  4559: 28 c4                    jump @308
      :                          @313 [@dyn 43]
  4561: 64 8a                    a3 = a1
  4563: 33 08 08 02 01           a1 = 0x10208
  4568: 64 a9                    a2 = a3
  4570: 28 67 04                 jump @398
      :                          @314
  4573: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4576: 7b 10 18                 u64 [sp + 0x18] = ra
  4579: 7b 15 10                 u64 [sp + 0x10] = s0
  4582: 7b 16 08                 u64 [sp + 0x8] = s1
  4585: 53 19 10 64              jump @323 if a2 <u 16
      :                          @315
  4589: 8d 7a                    i32 a3 = -a0
  4591: 84 a2 07                 t0 = a3 & 0x7
  4594: c8 27 0b                 a4 = a0 + t0
  4597: 51 02 15                 jump @318 if t0 == 0
      :                          @316
  4600: 64 8c                    a5 = a1
  4602: 64 75                    s0 = a0
  4604: 01                       fallthrough
      :                          @317
  4605: 7c ca                    a3 = u8 [a5]
  4607: 78 5a                    u8 [s0] = a3
  4609: 95 55 01                 s0 = s0 + 0x1
  4612: 95 cc 01                 a5 = a5 + 0x1
  4615: ac b5 f6                 jump @317 if s0 <u a4
      :                          @318
  4618: c8 28 03                 t1 = a1 + t0
  4621: c9 29 02                 t0 = a2 - t0
  4624: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4627: 84 38 07                 a1 = t1 & 0x7
  4630: c8 4b 0a                 a3 = a4 + t2
  4633: 51 08 3b                 jump @325 if a1 == 0
      :                          @319
  4636: 58 04 4b                 jump @328 if t2 <=s 0
      :                          @320
  4639: 97 38 03                 a1 = t1 << 0x3
  4642: 84 80 38                 ra = a1 & 0x38
  4645: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4648: 82 c5                    s0 = u64 [a5]
  4650: 8d 88                    i32 a1 = -a1
  4652: 84 88 38                 a1 = a1 & 0x38
  4655: 95 cc 08                 a5 = a5 + 0x8
  4658: 01                       fallthrough
      :                          @321
  4659: 82 c6                    s1 = u64 [a5]
  4661: d0 05 05                 s0 = s0 >> ra
  4664: cf 86 09                 a2 = s1 << a1
  4667: d4 59 09                 a2 = a2 | s0
  4670: 7b b9                    u64 [a4] = a2
  4672: 95 bb 08                 a4 = a4 + 0x8
  4675: 95 cc 08                 a5 = a5 + 0x8
  4678: 64 65                    s0 = s1
  4680: ac ab eb                 jump @321 if a4 <u a3
      :                          @322
  4683: 28 1c                    jump @328
      :                          @323
  4685: 64 7a                    a3 = a0
  4687: 52 09 21                 jump @329 if a2 != 0
      :                          @324
  4690: 28 2f                    jump @331
      :                          @325
  4692: 58 04 13                 jump @328 if t2 <=s 0
      :                          @326
  4695: 64 38                    a1 = t1
  4697: 01                       fallthrough
      :                          @327
  4698: 82 89                    a2 = u64 [a1]
  4700: 7b b9                    u64 [a4] = a2
  4702: 95 bb 08                 a4 = a4 + 0x8
  4705: 95 88 08                 a1 = a1 + 0x8
  4708: ac ab f6                 jump @327 if a4 <u a3
      :                          @328
  4711: c8 43 08                 a1 = t1 + t2
  4714: 84 29 07                 a2 = t0 & 0x7
  4717: 51 09 14                 jump @331 if a2 == 0
      :                          @329
  4720: c8 a9 09                 a2 = a2 + a3
  4723: 01                       fallthrough
      :                          @330
  4724: 7c 8b                    a4 = u8 [a1]
  4726: 78 ab                    u8 [a3] = a4
  4728: 95 aa 01                 a3 = a3 + 0x1
  4731: 95 88 01                 a1 = a1 + 0x1
  4734: ac 9a f6                 jump @330 if a3 <u a2
      :                          @331
  4737: 82 10 18                 ra = u64 [sp + 0x18]
  4740: 82 15 10                 s0 = u64 [sp + 0x10]
  4743: 82 16 08                 s1 = u64 [sp + 0x8]
  4746: 95 11 20                 sp = sp + 0x20
  4749: 32 00                    ret
      :                          @332 [@dyn 44]
  4751: 82 77                    a0 = u64 [a0]
  4753: 01                       fallthrough
      :                          @333
  4754: 28                       jump @333
      :                          @334
  4755: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  4758: 7b 10 58                 u64 [sp + 0x58] = ra
  4761: 7b 15 50                 u64 [sp + 0x50] = s0
  4764: 7b 16 48                 u64 [sp + 0x48] = s1
  4767: 7b 19 08                 u64 [sp + 0x8] = a2
  4770: 7b 18                    u64 [sp] = a1
  4772: 98 7a 04                 a3 = a0 >> 0x4
  4775: 33 09 27                 a2 = 0x27
  4778: 53 2a 71 02 81 00        jump @337 if a3 <u 625
      :                          @335
  4784: 33 09 27                 a2 = 0x27
  4787: 95 1b 46                 a4 = sp + 0x46
  4790: 3a 08 00 00 03           a1 = u64 [0x30000]
  4795: 7b 18 18                 u64 [sp + 0x18] = a1
  4798: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  4804: 33 03 7b 14              t1 = 0x147b
  4808: 33 05 76 02 01           s0 = 0x10276
  4813: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4819: 01                       fallthrough
      :                          @336
  4820: 64 74                    t2 = a0
  4822: 82 17 18                 a0 = u64 [sp + 0x18]
  4825: d6 74 07                 a0 = t2 mulhu a0
  4828: 98 77 0b                 a0 = a0 >> 0xb
  4831: 82 18 10                 a1 = u64 [sp + 0x10]
  4834: c0 87 02                 i32 t0 = a0 * a1
  4837: c8 42 0a                 a3 = t0 + t2
  4840: 97 a2 30                 t0 = a3 << 0x30
  4843: 98 28 32                 a1 = t0 >> 0x32
  4846: ca 38 08                 a1 = a1 * t1
  4849: 98 8c 11                 a5 = a1 >> 0x11
  4852: 98 88 10                 a1 = a1 >> 0x10
  4855: 84 88 fe 07              a1 = a1 & 0x7fe
  4859: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  4862: c8 ca 0a                 a3 = a3 + a5
  4865: 97 aa 31                 a3 = a3 << 0x31
  4868: 98 aa 30                 a3 = a3 >> 0x30
  4871: c8 58 08                 a1 = a1 + s0
  4874: 7c 8c                    a5 = u8 [a1]
  4876: 7c 88 01                 a1 = u8 [a1 + 0x1]
  4879: c8 5a 0a                 a3 = a3 + s0
  4882: 7c a6 01                 s1 = u8 [a3 + 0x1]
  4885: 7c aa                    a3 = u8 [a3]
  4887: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  4890: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  4893: 78 b6 01                 u8 [a4 + 0x1] = s1
  4896: 78 ba                    u8 [a4] = a3
  4898: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  4901: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4904: ac 40 ac                 jump @336 if ra <u t2
      :                          @337
  4907: 54 17 63 3b              jump @339 if a0 <=u 99
      :                          @338
  4911: 97 78 30                 a1 = a0 << 0x30
  4914: 98 88 32                 a1 = a1 >> 0x32
  4917: 96 88 7b 14              a1 = a1 * 0x147b
  4921: 98 88 11                 a1 = a1 >> 0x11
  4924: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  4927: c8 a7 07                 a0 = a0 + a3
  4930: 97 77 31                 a0 = a0 << 0x31
  4933: 98 77 30                 a0 = a0 >> 0x30
  4936: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4939: 33 0a 76 02 01           a3 = 0x10276
  4944: c8 a7 07                 a0 = a0 + a3
  4947: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4950: 7c 77                    a0 = u8 [a0]
  4952: 95 1b 21                 a4 = sp + 0x21
  4955: c8 9b 0b                 a4 = a4 + a2
  4958: 78 ba 01                 u8 [a4 + 0x1] = a3
  4961: 78 b7                    u8 [a4] = a0
  4963: 64 87                    a0 = a1
  4965: 01                       fallthrough
      :                          @339
  4966: 55 17 0a 14              jump @341 if a0 >=u 10
      :                          @340
  4970: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  4973: 95 18 21                 a1 = sp + 0x21
  4976: c8 98 08                 a1 = a1 + a2
  4979: 83 77 30                 i32 a0 = a0 + 0x30
  4982: 78 87                    u8 [a1] = a0
  4984: 28 21                    jump @342
      :                          @341
  4986: 97 77 01                 a0 = a0 << 0x1
  4989: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4992: 33 08 76 02 01           a1 = 0x10276
  4997: c8 87 07                 a0 = a0 + a1
  5000: 7c 78 01                 a1 = u8 [a0 + 0x1]
  5003: 7c 77                    a0 = u8 [a0]
  5005: 95 1a 21                 a3 = sp + 0x21
  5008: c8 9a 0a                 a3 = a3 + a2
  5011: 78 a8 01                 u8 [a3 + 0x1] = a1
  5014: 78 a7                    u8 [a3] = a0
  5016: 01                       fallthrough
      :                          @342
  5017: 95 1b 21                 a4 = sp + 0x21
  5020: c8 9b 0b                 a4 = a4 + a2
  5023: 9a 9c 27                 a5 = 0x27 - a2
  5026: 33 09 38 02 01           a2 = 0x10238
  5031: 82 17 08                 a0 = u64 [sp + 0x8]
  5034: 82 18                    a1 = u64 [sp]
  5036: 33 0a                    a3 = 0
  5038: 50 10 5a 12              ra = 90, jump @344
      :                          @343 [@dyn 45]
  5042: 82 10 58                 ra = u64 [sp + 0x58]
  5045: 82 15 50                 s0 = u64 [sp + 0x50]
  5048: 82 16 48                 s1 = u64 [sp + 0x48]
  5051: 95 11 60                 sp = sp + 0x60
  5054: 32 00                    ret
      :                          @344
  5056: 95 11 98                 sp = sp + 0xffffffffffffff98
  5059: 7b 10 60                 u64 [sp + 0x60] = ra
  5062: 7b 15 58                 u64 [sp + 0x58] = s0
  5065: 7b 16 50                 u64 [sp + 0x50] = s1
  5068: 7b 1b 18                 u64 [sp + 0x18] = a4
  5071: 51 08 4f                 jump @351 if a1 == 0
      :                          @345
  5074: 80 76 34                 s1 = u32 [a0 + 0x34]
  5077: 84 68 01                 a1 = s1 & 0x1
  5080: 33 0b 2b                 a4 = 0x2b
  5083: 33 05 00 00 11           s0 = 0x110000
  5088: db 8b 05                 s0 = a4 if a1 != 0
  5091: 7b 15 28                 u64 [sp + 0x28] = s0
  5094: c8 c8 02                 t0 = a1 + a5
  5097: 84 68 04                 a1 = s1 & 0x4
  5100: 51 08 42                 jump @352 if a1 == 0
      :                          @346
  5103: 7b 19 30                 u64 [sp + 0x30] = a2
  5106: 33 08                    a1 = 0
  5108: 51 0a 1a                 jump @349 if a3 == 0
      :                          @347
  5111: 64 a5                    s0 = a3
  5113: 01                       fallthrough
      :                          @348
  5114: 7d 9b                    a4 = i8 [a2]
  5116: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  5119: 85 bb 01                 a4 = a4 ^ 0x1
  5122: c8 b8 08                 a1 = a1 + a4
  5125: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5128: 95 99 01                 a2 = a2 + 0x1
  5131: 52 05 ef                 jump @348 if s0 != 0
      :                          @349
  5134: c8 82 02                 t0 = t0 + a1
  5137: 7b 1a 38                 u64 [sp + 0x38] = a3
  5140: 82 78                    a1 = u64 [a0]
  5142: 7b 1c 20                 u64 [sp + 0x20] = a5
  5145: 52 08 23                 jump @353 if a1 != 0
      :                          @350
  5148: 28 41                    jump @358
      :                          @351
  5150: 81 76 34                 s1 = i32 [a0 + 0x34]
  5153: 95 c2 01                 t0 = a5 + 0x1
  5156: 49 11 28 2d              u64 [sp + 40] = 0x2d
  5160: 84 68 04                 a1 = s1 & 0x4
  5163: 52 08 c4                 jump @346 if a1 != 0
      :                          @352
  5166: 49 11 30                 u64 [sp + 48] = 0
  5169: 7b 1a 38                 u64 [sp + 0x38] = a3
  5172: 82 78                    a1 = u64 [a0]
  5174: 7b 1c 20                 u64 [sp + 0x20] = a5
  5177: 51 08 24                 jump @358 if a1 == 0
      :                          @353
  5180: 82 75 08                 s0 = u64 [a0 + 0x8]
  5183: ae 52 1e                 jump @358 if t0 >=u s0
      :                          @354
  5186: 84 66 08                 s1 = s1 & 0x8
  5189: 52 06 50                 jump @361 if s1 != 0
      :                          @355
  5192: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5195: c9 25 0a                 a3 = s0 - t0
  5198: 5a 19 01 a1 00           jump @368 if a2 >s 1
      :                          @356
  5203: 52 09 ae 00              jump @370 if a2 != 0
      :                          @357
  5207: 7b 1a 10                 u64 [sp + 0x10] = a3
  5210: 28 ad 00                 jump @371
      :                          @358
  5213: 82 75 20                 s0 = u64 [a0 + 0x20]
  5216: 82 76 28                 s1 = u64 [a0 + 0x28]
  5219: 64 57                    a0 = s0
  5221: 64 68                    a1 = s1
  5223: 82 19 28                 a2 = u64 [sp + 0x28]
  5226: 82 1a 30                 a3 = u64 [sp + 0x30]
  5229: 82 1b 38                 a4 = u64 [sp + 0x38]
  5232: 50 10 5c 6d 01           ra = 92, jump @391
      :                          @359 [@dyn 46]
  5237: 33 08 01                 a1 = 0x1
  5240: 52 07 bc 00              jump @376 if a0 != 0
      :                          @360
  5244: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5247: 64 57                    a0 = s0
  5249: 82 18 18                 a1 = u64 [sp + 0x18]
  5252: 82 19 20                 a2 = u64 [sp + 0x20]
  5255: 82 10 60                 ra = u64 [sp + 0x60]
  5258: 82 15 58                 s0 = u64 [sp + 0x58]
  5261: 82 16 50                 s1 = u64 [sp + 0x50]
  5264: 95 11 68                 sp = sp + 0x68
  5267: 32 0c                    jump [a5]
      :                          @361
  5269: 7b 12 40                 u64 [sp + 0x40] = t0
  5272: 81 78 30                 a1 = i32 [a0 + 0x30]
  5275: 7b 18 08                 u64 [sp + 0x8] = a1
  5278: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5281: 7b 19                    u64 [sp] = a2
  5283: 82 79 20                 a2 = u64 [a0 + 0x20]
  5286: 82 76 28                 s1 = u64 [a0 + 0x28]
  5289: 48 17 30 30              u32 [a0 + 48] = 0x30
  5293: 7b 17 10                 u64 [sp + 0x10] = a0
  5296: 46 17 38 01              u8 [a0 + 56] = 0x1
  5300: 7b 19 48                 u64 [sp + 0x48] = a2
  5303: 64 97                    a0 = a2
  5305: 64 68                    a1 = s1
  5307: 82 19 28                 a2 = u64 [sp + 0x28]
  5310: 82 1a 30                 a3 = u64 [sp + 0x30]
  5313: 82 1b 38                 a4 = u64 [sp + 0x38]
  5316: 50 10 5e 19 01           ra = 94, jump @391
      :                          @362 [@dyn 47]
  5321: 52 07 67                 jump @375 if a0 != 0
      :                          @363
  5324: 82 17 40                 a0 = u64 [sp + 0x40]
  5327: c9 75 05                 s0 = s0 - a0
  5330: 95 55 01                 s0 = s0 + 0x1
  5333: 01                       fallthrough
      :                          @364
  5334: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5337: 51 05 c6 00              jump @386 if s0 == 0
      :                          @365
  5341: 82 69 20                 a2 = u64 [s1 + 0x20]
  5344: 33 08 30                 a1 = 0x30
  5347: 82 17 48                 a0 = u64 [sp + 0x48]
  5350: b4 90 01 60              ra = 96, jump [a2]
      :                          @366 [@dyn 48]
  5354: 51 07 ec                 jump @364 if a0 == 0
      :                          @367
  5357: 28 43                    jump @375
      :                          @368
  5359: 52 19 02 12              jump @370 if a2 != 2
      :                          @369
  5363: 98 a9 01                 a2 = a3 >> 0x1
  5366: 95 a8 01                 a1 = a3 + 0x1
  5369: 98 88 01                 a1 = a1 >> 0x1
  5372: 7b 18 10                 u64 [sp + 0x10] = a1
  5375: 28 08                    jump @371
      :                          @370
  5377: 64 a9                    a2 = a3
  5379: 49 11 10                 u64 [sp + 16] = 0
  5382: 01                       fallthrough
      :                          @371
  5383: 82 78 20                 a1 = u64 [a0 + 0x20]
  5386: 7b 18 48                 u64 [sp + 0x48] = a1
  5389: 82 76 28                 s1 = u64 [a0 + 0x28]
  5392: 81 77 30                 a0 = i32 [a0 + 0x30]
  5395: 7b 17 40                 u64 [sp + 0x40] = a0
  5398: 95 95 01                 s0 = a2 + 0x1
  5401: 01                       fallthrough
      :                          @372
  5402: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5405: 51 05 27                 jump @377 if s0 == 0
      :                          @373
  5408: 82 69 20                 a2 = u64 [s1 + 0x20]
  5411: 82 17 48                 a0 = u64 [sp + 0x48]
  5414: 82 18 40                 a1 = u64 [sp + 0x40]
  5417: b4 90 01 62              ra = 98, jump [a2]
      :                          @374 [@dyn 49]
  5421: 51 07 ed                 jump @372 if a0 == 0
      :                          @375
  5424: 33 08 01                 a1 = 0x1
  5427: 01                       fallthrough
      :                          @376
  5428: 64 87                    a0 = a1
  5430: 82 10 60                 ra = u64 [sp + 0x60]
  5433: 82 15 58                 s0 = u64 [sp + 0x58]
  5436: 82 16 50                 s1 = u64 [sp + 0x50]
  5439: 95 11 68                 sp = sp + 0x68
  5442: 32 00                    ret
      :                          @377
  5444: 82 15 48                 s0 = u64 [sp + 0x48]
  5447: 64 57                    a0 = s0
  5449: 64 68                    a1 = s1
  5451: 82 19 28                 a2 = u64 [sp + 0x28]
  5454: 82 1a 30                 a3 = u64 [sp + 0x30]
  5457: 82 1b 38                 a4 = u64 [sp + 0x38]
  5460: 50 10 64 89 00           ra = 100, jump @391
      :                          @378 [@dyn 50]
  5465: 33 08 01                 a1 = 0x1
  5468: 52 07 d8                 jump @376 if a0 != 0
      :                          @379
  5471: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5474: 64 57                    a0 = s0
  5476: 82 18 18                 a1 = u64 [sp + 0x18]
  5479: 82 19 20                 a2 = u64 [sp + 0x20]
  5482: b4 a0 01 66              ra = 102, jump [a3]
      :                          @380 [@dyn 51]
  5486: 33 08 01                 a1 = 0x1
  5489: 52 07 c3                 jump @376 if a0 != 0
      :                          @381
  5492: 82 17 10                 a0 = u64 [sp + 0x10]
  5495: 9a 77                    a0 = -a0
  5497: 7b 17 38                 u64 [sp + 0x38] = a0
  5500: 33 05 ff                 s0 = 0xffffffffffffffff
  5503: 01                       fallthrough
      :                          @382
  5504: 82 17 38                 a0 = u64 [sp + 0x38]
  5507: c8 57 07                 a0 = a0 + s0
  5510: 51 17 ff 42              jump @389 if a0 == 4294967295
      :                          @383
  5514: 82 69 20                 a2 = u64 [s1 + 0x20]
  5517: 82 17 48                 a0 = u64 [sp + 0x48]
  5520: 82 18 40                 a1 = u64 [sp + 0x40]
  5523: b4 90 01 68              ra = 104, jump [a2]
      :                          @384 [@dyn 52]
  5527: 95 55 01                 s0 = s0 + 0x1
  5530: 51 07 e6                 jump @382 if a0 == 0
      :                          @385
  5533: 28 37                    jump @390
      :                          @386
  5535: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5538: 82 17 48                 a0 = u64 [sp + 0x48]
  5541: 82 18 18                 a1 = u64 [sp + 0x18]
  5544: 82 19 20                 a2 = u64 [sp + 0x20]
  5547: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @387 [@dyn 53]
  5551: 33 08 01                 a1 = 0x1
  5554: 52 07 82                 jump @376 if a0 != 0
      :                          @388
  5557: 33 08                    a1 = 0
  5559: 82 17 10                 a0 = u64 [sp + 0x10]
  5562: 82 19 08                 a2 = u64 [sp + 0x8]
  5565: 7a 79 30                 u32 [a0 + 0x30] = a2
  5568: 82 19                    a2 = u64 [sp]
  5570: 78 79 38                 u8 [a0 + 0x38] = a2
  5573: 28 6f ff                 jump @376
      :                          @389
  5576: 82 15 10                 s0 = u64 [sp + 0x10]
  5579: 82 17 10                 a0 = u64 [sp + 0x10]
  5582: d8 75 08                 a1 = s0 <u a0
  5585: 28 63 ff                 jump @376
      :                          @390
  5588: 82 17 10                 a0 = u64 [sp + 0x10]
  5591: d8 75 08                 a1 = s0 <u a0
  5594: 28 5a ff                 jump @376
      :                          @391
  5597: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5600: 7b 10 20                 u64 [sp + 0x20] = ra
  5603: 7b 15 18                 u64 [sp + 0x18] = s0
  5606: 7b 16 10                 u64 [sp + 0x10] = s1
  5609: 83 9c                    i32 a5 = a2 + 0
  5611: 33 02 00 00 11           t0 = 0x110000
  5616: 64 a6                    s1 = a3
  5618: 64 85                    s0 = a1
  5620: 64 7a                    a3 = a0
  5622: aa 2c 20                 jump @394 if a5 == t0
      :                          @392
  5625: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5628: 64 a7                    a0 = a3
  5630: 64 98                    a1 = a2
  5632: 7b 1b 08                 u64 [sp + 0x8] = a4
  5635: 7b 1a                    u64 [sp] = a3
  5637: b4 c0 01 6c              ra = 108, jump [a5]
      :                          @393 [@dyn 54]
  5641: 82 1a                    a3 = u64 [sp]
  5643: 82 1b 08                 a4 = u64 [sp + 0x8]
  5646: 64 78                    a1 = a0
  5648: 33 07 01                 a0 = 0x1
  5651: 52 08 20                 jump @397 if a1 != 0
      :                          @394
  5654: 51 06 1a                 jump @396 if s1 == 0
      :                          @395
  5657: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5660: 64 a7                    a0 = a3
  5662: 64 68                    a1 = s1
  5664: 64 b9                    a2 = a4
  5666: 82 10 20                 ra = u64 [sp + 0x20]
  5669: 82 15 18                 s0 = u64 [sp + 0x18]
  5672: 82 16 10                 s1 = u64 [sp + 0x10]
  5675: 95 11 28                 sp = sp + 0x28
  5678: 32 0c                    jump [a5]
      :                          @396
  5680: 33 07                    a0 = 0
  5682: 01                       fallthrough
      :                          @397
  5683: 82 10 20                 ra = u64 [sp + 0x20]
  5686: 82 15 18                 s0 = u64 [sp + 0x18]
  5689: 82 16 10                 s1 = u64 [sp + 0x10]
  5692: 95 11 28                 sp = sp + 0x28
  5695: 32 00                    ret
      :                          @398
  5697: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5701: 7b 10 80 00              u64 [sp + 0x80] = ra
  5705: 7b 15 78                 u64 [sp + 0x78] = s0
  5708: 7b 16 70                 u64 [sp + 0x70] = s1
  5711: 49 11 60 20              u64 [sp + 96] = 0x20
  5715: 33 0a 03                 a3 = 0x3
  5718: 78 1a 68                 u8 [sp + 0x68] = a3
  5721: 82 96 20                 s1 = u64 [a2 + 0x20]
  5724: 49 11 30                 u64 [sp + 48] = 0
  5727: 49 11 40                 u64 [sp + 64] = 0
  5730: 7b 17 50                 u64 [sp + 0x50] = a0
  5733: 7b 18 58                 u64 [sp + 0x58] = a1
  5736: 51 06 07 01              jump @420 if s1 == 0
      :                          @399
  5740: 82 97 28                 a0 = u64 [a2 + 0x28]
  5743: 51 07 74 01              jump @430 if a0 == 0
      :                          @400
  5747: 49 11 28                 u64 [sp + 40] = 0
  5750: 82 95                    s0 = u64 [a2]
  5752: 7b 19 08                 u64 [sp + 0x8] = a2
  5755: 82 98 10                 a1 = u64 [a2 + 0x10]
  5758: 7b 18 18                 u64 [sp + 0x18] = a1
  5761: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5764: 97 88 03                 a1 = a1 << 0x3
  5767: 98 88 03                 a1 = a1 >> 0x3
  5770: 95 88 01                 a1 = a1 + 0x1
  5773: 7b 18                    u64 [sp] = a1
  5775: 95 55 08                 s0 = s0 + 0x8
  5778: 96 78 38                 a1 = a0 * 0x38
  5781: 95 66 18                 s1 = s1 + 0x18
  5784: 33 07 58                 a0 = 0x58
  5787: 7b 17 10                 u64 [sp + 0x10] = a0
  5790: 01                       fallthrough
      :                          @401
  5791: 7b 18 20                 u64 [sp + 0x20] = a1
  5794: 82 59                    a2 = u64 [s0]
  5796: 51 09 17                 jump @404 if a2 == 0
      :                          @402
  5799: 82 1a 58                 a3 = u64 [sp + 0x58]
  5802: 82 17 50                 a0 = u64 [sp + 0x50]
  5805: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5808: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5811: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @403 [@dyn 55]
  5815: 52 07 51 01              jump @433 if a0 != 0
      :                          @404
  5819: 81 67 10                 a0 = i32 [s1 + 0x10]
  5822: 7a 17 60                 u32 [sp + 0x60] = a0
  5825: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5828: 78 17 68                 u8 [sp + 0x68] = a0
  5831: 81 67 14                 a0 = i32 [s1 + 0x14]
  5834: 7a 17 64                 u32 [sp + 0x64] = a0
  5837: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5840: 82 67                    a0 = u64 [s1]
  5842: 51 08 26                 jump @409 if a1 == 0
      :                          @405
  5845: 52 18 01 16              jump @407 if a1 != 1
      :                          @406
  5849: 97 77 04                 a0 = a0 << 0x4
  5852: 82 18 18                 a1 = u64 [sp + 0x18]
  5855: c8 87 07                 a0 = a0 + a1
  5858: 82 78 08                 a1 = u64 [a0 + 0x8]
  5861: 82 19 10                 a2 = u64 [sp + 0x10]
  5864: aa 98 07                 jump @408 if a1 == a2
      :                          @407
  5867: 33 08                    a1 = 0
  5869: 28 0f                    jump @410
      :                          @408
  5871: 82 77                    a0 = u64 [a0]
  5873: 82 77                    a0 = u64 [a0]
  5875: 33 08 01                 a1 = 0x1
  5878: 28 06                    jump @410
      :                          @409
  5880: 33 08 01                 a1 = 0x1
  5883: 01                       fallthrough
      :                          @410
  5884: 7b 18 30                 u64 [sp + 0x30] = a1
  5887: 7b 17 38                 u64 [sp + 0x38] = a0
  5890: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5893: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5896: 51 08 26                 jump @415 if a1 == 0
      :                          @411
  5899: 52 18 01 16              jump @413 if a1 != 1
      :                          @412
  5903: 97 77 04                 a0 = a0 << 0x4
  5906: 82 18 18                 a1 = u64 [sp + 0x18]
  5909: c8 87 07                 a0 = a0 + a1
  5912: 82 78 08                 a1 = u64 [a0 + 0x8]
  5915: 82 19 10                 a2 = u64 [sp + 0x10]
  5918: aa 98 07                 jump @414 if a1 == a2
      :                          @413
  5921: 33 08                    a1 = 0
  5923: 28 0f                    jump @416
      :                          @414
  5925: 82 77                    a0 = u64 [a0]
  5927: 82 77                    a0 = u64 [a0]
  5929: 33 08 01                 a1 = 0x1
  5932: 28 06                    jump @416
      :                          @415
  5934: 33 08 01                 a1 = 0x1
  5937: 01                       fallthrough
      :                          @416
  5938: 7b 18 40                 u64 [sp + 0x40] = a1
  5941: 7b 17 48                 u64 [sp + 0x48] = a0
  5944: 82 67 08                 a0 = u64 [s1 + 0x8]
  5947: 97 77 04                 a0 = a0 << 0x4
  5950: 82 18 18                 a1 = u64 [sp + 0x18]
  5953: c8 78 08                 a1 = a1 + a0
  5956: 82 87                    a0 = u64 [a1]
  5958: 82 89 08                 a2 = u64 [a1 + 0x8]
  5961: 95 18 30                 a1 = sp + 0x30
  5964: b4 90 01 70              ra = 112, jump [a2]
      :                          @417 [@dyn 56]
  5968: 52 07 b8 00              jump @433 if a0 != 0
      :                          @418
  5972: 95 55 10                 s0 = s0 + 0x10
  5975: 82 18 20                 a1 = u64 [sp + 0x20]
  5978: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5981: 95 66 38                 s1 = s1 + 0x38
  5984: 82 17 28                 a0 = u64 [sp + 0x28]
  5987: 95 77 01                 a0 = a0 + 0x1
  5990: 7b 17 28                 u64 [sp + 0x28] = a0
  5993: 52 08 36 ff              jump @401 if a1 != 0
      :                          @419
  5997: 28 69                    jump @428
      :                          @420
  5999: 82 97 18                 a0 = u64 [a2 + 0x18]
  6002: 51 07 71                 jump @430 if a0 == 0
      :                          @421
  6005: 82 95 10                 s0 = u64 [a2 + 0x10]
  6008: 33 0a                    a3 = 0
  6010: 97 78 04                 a1 = a0 << 0x4
  6013: c8 58 08                 a1 = a1 + s0
  6016: 7b 18 20                 u64 [sp + 0x20] = a1
  6019: 7b 19 08                 u64 [sp + 0x8] = a2
  6022: 82 96                    s1 = u64 [a2]
  6024: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  6027: 97 77 04                 a0 = a0 << 0x4
  6030: 98 77 04                 a0 = a0 >> 0x4
  6033: 95 77 01                 a0 = a0 + 0x1
  6036: 7b 17                    u64 [sp] = a0
  6038: 95 66 08                 s1 = s1 + 0x8
  6041: 01                       fallthrough
      :                          @422
  6042: 7b 1a 28                 u64 [sp + 0x28] = a3
  6045: 82 69                    a2 = u64 [s1]
  6047: 51 09 16                 jump @425 if a2 == 0
      :                          @423
  6050: 82 1a 58                 a3 = u64 [sp + 0x58]
  6053: 82 17 50                 a0 = u64 [sp + 0x50]
  6056: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  6059: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6062: b4 a0 01 72              ra = 114, jump [a3]
      :                          @424 [@dyn 57]
  6066: 52 07 56                 jump @433 if a0 != 0
      :                          @425
  6069: 82 57                    a0 = u64 [s0]
  6071: 82 59 08                 a2 = u64 [s0 + 0x8]
  6074: 95 18 30                 a1 = sp + 0x30
  6077: b4 90 01 74              ra = 116, jump [a2]
      :                          @426 [@dyn 58]
  6081: 52 07 47                 jump @433 if a0 != 0
      :                          @427
  6084: 95 66 10                 s1 = s1 + 0x10
  6087: 95 55 10                 s0 = s0 + 0x10
  6090: 82 1a 28                 a3 = u64 [sp + 0x28]
  6093: 95 aa 01                 a3 = a3 + 0x1
  6096: 82 17 20                 a0 = u64 [sp + 0x20]
  6099: ab 75 c7                 jump @422 if s0 != a0
      :                          @428
  6102: 82 19 08                 a2 = u64 [sp + 0x8]
  6105: 82 1a                    a3 = u64 [sp]
  6107: 82 97 08                 a0 = u64 [a2 + 0x8]
  6110: ac 7a 0d                 jump @431 if a3 <u a0
      :                          @429
  6113: 28 2c                    jump @434
      :                          @430
  6115: 33 0a                    a3 = 0
  6117: 82 97 08                 a0 = u64 [a2 + 0x8]
  6120: 54 07 25                 jump @434 if a0 <=u 0
      :                          @431
  6123: 82 97                    a0 = u64 [a2]
  6125: 97 a8 04                 a1 = a3 << 0x4
  6128: c8 87 09                 a2 = a0 + a1
  6131: 82 1a 58                 a3 = u64 [sp + 0x58]
  6134: 82 17 50                 a0 = u64 [sp + 0x50]
  6137: 82 98                    a1 = u64 [a2]
  6139: 82 99 08                 a2 = u64 [a2 + 0x8]
  6142: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6145: b4 a0 01 76              ra = 118, jump [a3]
      :                          @432 [@dyn 59]
  6149: 51 07 08                 jump @434 if a0 == 0
      :                          @433
  6152: 33 07 01                 a0 = 0x1
  6155: 28 05                    jump @435
      :                          @434
  6157: 33 07                    a0 = 0
  6159: 01                       fallthrough
      :                          @435
  6160: 82 10 80 00              ra = u64 [sp + 0x80]
  6164: 82 15 78                 s0 = u64 [sp + 0x78]
  6167: 82 16 70                 s1 = u64 [sp + 0x70]
  6170: 95 11 88 00              sp = sp + 0x88
  6174: 32 00                    ret
      :                          @436 [@dyn 60]
  6176: 32 00                    ret
      :                          @437 [@dyn 61]
  6178: 95 11 80                 sp = sp + 0xffffffffffffff80
  6181: 7b 10 78                 u64 [sp + 0x78] = ra
  6184: 7b 15 70                 u64 [sp + 0x70] = s0
  6187: 7b 16 68                 u64 [sp + 0x68] = s1
  6190: 64 92                    t0 = a2
  6192: 33 00                    ra = 0
  6194: 33 0b                    a4 = 0
  6196: 33 05                    s0 = 0
  6198: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6208: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6214: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6224: 82 79 10                 a2 = u64 [a0 + 0x10]
  6227: 7b 19 48                 u64 [sp + 0x48] = a2
  6230: 82 79                    a2 = u64 [a0]
  6232: 7b 19 38                 u64 [sp + 0x38] = a2
  6235: 82 77 08                 a0 = u64 [a0 + 0x8]
  6238: 7b 17 30                 u64 [sp + 0x30] = a0
  6241: 33 07 0c 00 01           a0 = 0x1000c
  6246: 7b 17 08                 u64 [sp + 0x8] = a0
  6249: 3a 07 08 00 03           a0 = u64 [0x30008]
  6254: 7b 17 60                 u64 [sp + 0x60] = a0
  6257: 7b 18 58                 u64 [sp + 0x58] = a1
  6260: 95 88 08                 a1 = a1 + 0x8
  6263: 7b 18                    u64 [sp] = a1
  6265: 33 0c 0a                 a5 = 0xa
  6268: 7b 12 20                 u64 [sp + 0x20] = t0
  6271: 7b 13 18                 u64 [sp + 0x18] = t1
  6274: 7b 14 10                 u64 [sp + 0x10] = t2
  6277: 28 3a                    jump @441
      :                          @438
  6279: 64 06                    s1 = ra
  6281: c8 89 07                 a0 = a2 + a1
  6284: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6287: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6290: 88 77 01                 a0 = a0 <u 0x1
  6293: 01                       fallthrough
      :                          @439
  6294: 82 1a 48                 a3 = u64 [sp + 0x48]
  6297: 78 a7                    u8 [a3] = a0
  6299: 82 17 30                 a0 = u64 [sp + 0x30]
  6302: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6305: 82 17 38                 a0 = u64 [sp + 0x38]
  6308: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @440 [@dyn 62]
  6312: 64 5b                    a4 = s0
  6314: 82 12 20                 t0 = u64 [sp + 0x20]
  6317: 82 13 18                 t1 = u64 [sp + 0x18]
  6320: 82 14 10                 t2 = u64 [sp + 0x10]
  6323: 64 60                    ra = s1
  6325: 33 0c 0a                 a5 = 0xa
  6328: 82 15 40                 s0 = u64 [sp + 0x40]
  6331: 52 07 63 01              jump @482 if a0 != 0
      :                          @441
  6335: 84 57 ff 00              a0 = s0 & 0xff
  6339: 52 07 57 01              jump @481 if a0 != 0
      :                          @442
  6343: 7b 1b 50                 u64 [sp + 0x50] = a4
  6346: ae 02 0a                 jump @445 if t0 >=u ra
      :                          @443
  6349: 28 ef 00                 jump @472
      :                          @444
  6352: ac 02 ec 00              jump @472 if t0 <u ra
      :                          @445
  6356: c9 02 08                 a1 = t0 - ra
  6359: 82 16 58                 s1 = u64 [sp + 0x58]
  6362: c8 06 06                 s1 = s1 + ra
  6365: 55 18 10 1d              jump @451 if a1 >=u 16
      :                          @446
  6369: aa 02 d8 00              jump @471 if t0 == ra
      :                          @447
  6373: 33 0a                    a3 = 0
  6375: 01                       fallthrough
      :                          @448
  6376: c8 a6 07                 a0 = s1 + a3
  6379: 7c 77                    a0 = u8 [a0]
  6381: aa c7 a5 00              jump @466 if a0 == a5
      :                          @449
  6385: 95 aa 01                 a3 = a3 + 0x1
  6388: ab a8 f4                 jump @448 if a1 != a3
      :                          @450
  6391: 28 c2 00                 jump @471
      :                          @451
  6394: 95 69 07                 a2 = s1 + 0x7
  6397: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6400: c9 6a 07                 a0 = a3 - s1
  6403: d3 6a 0a                 a3 = a3 ^ s1
  6406: 88 aa 01                 a3 = a3 <u 0x1
  6409: 88 7b 01                 a4 = a0 <u 0x1
  6412: d4 ba 0a                 a3 = a3 | a4
  6415: 51 0a 45                 jump @457 if a3 == 0
      :                          @452
  6418: 33 07                    a0 = 0
  6420: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6423: 82 1b                    a4 = u64 [sp]
  6425: c8 0b 0b                 a4 = a4 + ra
  6428: 28 08                    jump @454
      :                          @453
  6430: 82 1b                    a4 = u64 [sp]
  6432: c8 0b 0b                 a4 = a4 + ra
  6435: 01                       fallthrough
      :                          @454
  6436: c8 76 0c                 a5 = s1 + a0
  6439: 82 cc                    a5 = u64 [a5]
  6441: c8 7b 09                 a2 = a4 + a0
  6444: 82 99                    a2 = u64 [a2]
  6446: d3 4c 05                 s0 = a5 ^ t2
  6449: c8 35 05                 s0 = s0 + t1
  6452: e0 c5 0c                 a5 = s0 & ~a5
  6455: d3 49 05                 s0 = a2 ^ t2
  6458: c8 35 05                 s0 = s0 + t1
  6461: e0 95 09                 a2 = s0 & ~a2
  6464: d4 c9 09                 a2 = a2 | a5
  6467: 82 1c 60                 a5 = u64 [sp + 0x60]
  6470: d2 c9 09                 a2 = a2 & a5
  6473: 52 09 1f                 jump @460 if a2 != 0
      :                          @455
  6476: 95 77 10                 a0 = a0 + 0x10
  6479: ae 7a d5                 jump @454 if a3 >=u a0
      :                          @456
  6482: 28 16                    jump @460
      :                          @457
  6484: c8 a6 0b                 a4 = s1 + a3
  6487: 7c bb                    a4 = u8 [a4]
  6489: aa cb 51                 jump @469 if a4 == a5
      :                          @458
  6492: 95 aa 01                 a3 = a3 + 0x1
  6495: ab a7 f5                 jump @457 if a0 != a3
      :                          @459
  6498: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6501: ae 7a b9                 jump @453 if a3 >=u a0
      :                          @460
  6504: aa 87 9a 00              jump @478 if a0 == a1
      :                          @461
  6508: 33 0a                    a3 = 0
  6510: c8 76 06                 s1 = s1 + a0
  6513: c9 72 08                 a1 = t0 - a0
  6516: c9 08 08                 a1 = a1 - ra
  6519: 33 0c 0a                 a5 = 0xa
  6522: 82 1b 50                 a4 = u64 [sp + 0x50]
  6525: 01                       fallthrough
      :                          @462
  6526: c8 a6 09                 a2 = s1 + a3
  6529: 7c 99                    a2 = u8 [a2]
  6531: aa c9 0b                 jump @465 if a2 == a5
      :                          @463
  6534: 95 aa 01                 a3 = a3 + 0x1
  6537: ab a8 f5                 jump @462 if a1 != a3
      :                          @464
  6540: 28 2d                    jump @471
      :                          @465
  6542: c8 7a 0a                 a3 = a3 + a0
  6545: 01                       fallthrough
      :                          @466
  6546: c8 0a 0a                 a3 = a3 + ra
  6549: 95 a0 01                 ra = a3 + 0x1
  6552: ae 2a 38 ff              jump @444 if a3 >=u t0
      :                          @467
  6556: 82 17 58                 a0 = u64 [sp + 0x58]
  6559: c8 7a 0a                 a3 = a3 + a0
  6562: 7c a7                    a0 = u8 [a3]
  6564: ab c7 2c ff              jump @444 if a0 != a5
      :                          @468
  6568: 28 61                    jump @479
      :                          @469
  6570: 82 1b 50                 a4 = u64 [sp + 0x50]
  6573: c8 0a 0a                 a3 = a3 + ra
  6576: 95 a0 01                 ra = a3 + 0x1
  6579: ac 2a e9                 jump @467 if a3 <u t0
      :                          @470
  6582: 28 1a ff                 jump @444
      :                          @471
  6585: 64 20                    ra = t0
  6587: 01                       fallthrough
      :                          @472
  6588: 49 11 40 01              u64 [sp + 64] = 0x1
  6592: 64 b5                    s0 = a4
  6594: 64 26                    s1 = t0
  6596: aa 2b 56                 jump @481 if a4 == t0
      :                          @473
  6599: 82 17 48                 a0 = u64 [sp + 0x48]
  6602: 7c 77                    a0 = u8 [a0]
  6604: 51 07 22                 jump @476 if a0 == 0
      :                          @474
  6607: 82 17 30                 a0 = u64 [sp + 0x30]
  6610: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6613: 33 09 04                 a2 = 0x4
  6616: 82 17 38                 a0 = u64 [sp + 0x38]
  6619: 82 18 08                 a1 = u64 [sp + 0x8]
  6622: 7b 10 28                 u64 [sp + 0x28] = ra
  6625: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @475 [@dyn 63]
  6629: 82 1b 50                 a4 = u64 [sp + 0x50]
  6632: 82 10 28                 ra = u64 [sp + 0x28]
  6635: 52 07 33                 jump @482 if a0 != 0
      :                          @476
  6638: c9 b6 09                 a2 = s1 - a4
  6641: 82 18 58                 a1 = u64 [sp + 0x58]
  6644: c8 b8 08                 a1 = a1 + a4
  6647: ab b6 90 fe              jump @438 if s1 != a4
      :                          @477
  6651: 64 06                    s1 = ra
  6653: 33 07                    a0 = 0
  6655: 28 97 fe                 jump @439
      :                          @478
  6658: 64 20                    ra = t0
  6660: 82 1b 50                 a4 = u64 [sp + 0x50]
  6663: 28 b5                    jump @472
      :                          @479
  6665: 49 11 40                 u64 [sp + 64] = 0
  6668: 64 05                    s0 = ra
  6670: 64 06                    s1 = ra
  6672: 82 17 48                 a0 = u64 [sp + 0x48]
  6675: 7c 77                    a0 = u8 [a0]
  6677: 52 07 ba                 jump @474 if a0 != 0
      :                          @480
  6680: 28 d6                    jump @476
      :                          @481
  6682: 33 07                    a0 = 0
  6684: 28 06                    jump @483
      :                          @482
  6686: 33 07 01                 a0 = 0x1
  6689: 01                       fallthrough
      :                          @483
  6690: 82 10 78                 ra = u64 [sp + 0x78]
  6693: 82 15 70                 s0 = u64 [sp + 0x70]
  6696: 82 16 68                 s1 = u64 [sp + 0x68]
  6699: 95 11 80 00              sp = sp + 0x80
  6703: 32 00                    ret
      :                          @484 [@dyn 64]
  6705: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6708: 7b 10 20                 u64 [sp + 0x20] = ra
  6711: 7b 15 18                 u64 [sp + 0x18] = s0
  6714: 7b 16 10                 u64 [sp + 0x10] = s1
  6717: 82 75 10                 s0 = u64 [a0 + 0x10]
  6720: 7c 59                    a2 = u8 [s0]
  6722: 82 7b                    a4 = u64 [a0]
  6724: 82 76 08                 s1 = u64 [a0 + 0x8]
  6727: 51 09 33                 jump @488 if a2 == 0
      :                          @485
  6730: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6733: 7b 18 08                 u64 [sp + 0x8] = a1
  6736: 33 08 0c 00 01           a1 = 0x1000c
  6741: 33 09 04                 a2 = 0x4
  6744: 64 b7                    a0 = a4
  6746: 7b 1b                    u64 [sp] = a4
  6748: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @486 [@dyn 65]
  6753: 82 18 08                 a1 = u64 [sp + 0x8]
  6756: 82 1b                    a4 = u64 [sp]
  6758: 51 07 14                 jump @488 if a0 == 0
      :                          @487
  6761: 33 07 01                 a0 = 0x1
  6764: 82 10 20                 ra = u64 [sp + 0x20]
  6767: 82 15 18                 s0 = u64 [sp + 0x18]
  6770: 82 16 10                 s1 = u64 [sp + 0x10]
  6773: 95 11 28                 sp = sp + 0x28
  6776: 32 00                    ret
      :                          @488
  6778: 83 87                    i32 a0 = a1 + 0
  6780: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6783: 88 77 01                 a0 = a0 <u 0x1
  6786: 78 57                    u8 [s0] = a0
  6788: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6791: 64 b7                    a0 = a4
  6793: 82 10 20                 ra = u64 [sp + 0x20]
  6796: 82 15 18                 s0 = u64 [sp + 0x18]
  6799: 82 16 10                 s1 = u64 [sp + 0x10]
  6802: 95 11 28                 sp = sp + 0x28
  6805: 32 0c                    jump [a5]
      :                          @489 [@dyn 66]
  6807: 64 8a                    a3 = a1
  6809: 33 08 40 02 01           a1 = 0x10240
  6814: 64 a9                    a2 = a3
  6816: 28 a1 fb                 jump @398
      :                          @490
  6819: 51 08 9b 00              jump @511 if a1 == 0
      :                          @491
  6823: 64 79                    a2 = a0
  6825: 7c 77                    a0 = u8 [a0]
  6827: 51 07 91 00              jump @510 if a0 == 0
      :                          @492
  6831: 51 27 ff 00 90 00        jump @512 if a0 == 255
      :                          @493
  6837: 6c 7a                    a3 = sext.b a0
  6839: 57 0a 09                 jump @495 if a3 <s 0
      :                          @494
  6842: 33 0a                    a3 = 0
  6844: 33 08                    a1 = 0
  6846: 28 73                    jump @509
      :                          @495
  6848: 55 27 c0 00 0d           jump @497 if a0 >=u 192
      :                          @496
  6853: 33 0a 01                 a3 = 0x1
  6856: 33 0b 80                 a4 = 0xffffffffffffff80
  6859: 28 4a                    jump @506
      :                          @497
  6861: 55 27 e0 00 0e           jump @499 if a0 >=u 224
      :                          @498
  6866: 33 0a 02                 a3 = 0x2
  6869: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6873: 28 3c                    jump @506
      :                          @499
  6875: 55 27 f0 00 0e           jump @501 if a0 >=u 240
      :                          @500
  6880: 33 0a 03                 a3 = 0x3
  6883: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6887: 28 2e                    jump @506
      :                          @501
  6889: 55 27 f8 00 0e           jump @503 if a0 >=u 248
      :                          @502
  6894: 33 0a 04                 a3 = 0x4
  6897: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6901: 28 20                    jump @506
      :                          @503
  6903: 55 27 fc 00 0e           jump @505 if a0 >=u 252
      :                          @504
  6908: 33 0a 05                 a3 = 0x5
  6911: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6915: 28 12                    jump @506
      :                          @505
  6917: 88 7a fe 00              a3 = a0 <u 0xfe
  6921: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6925: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6929: 85 aa 07                 a3 = a3 ^ 0x7
  6932: 01                       fallthrough
      :                          @506
  6933: ae 8a 2b                 jump @513 if a3 >=u a1
      :                          @507
  6936: 33 08                    a1 = 0
  6938: c8 b7 07                 a0 = a0 + a4
  6941: 64 ab                    a4 = a3
  6943: 01                       fallthrough
      :                          @508
  6944: c8 b9 0c                 a5 = a2 + a4
  6947: 7c cc                    a5 = u8 [a5]
  6949: 97 88 08                 a1 = a1 << 0x8
  6952: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6955: d4 c8 08                 a1 = a1 | a5
  6958: 52 0b f2                 jump @508 if a4 != 0
      :                          @509
  6961: 8a a9 03                 i32 a2 = a3 << 0x3
  6964: cf 97 07                 a0 = a0 << a2
  6967: c8 87 07                 a0 = a0 + a1
  6970: 32 00                    ret
      :                          @510
  6972: 32 00                    ret
      :                          @511
  6974: 00                       trap
      :                          @512
  6975: 00                       trap
      :                          @513
  6976: 00                       trap
      :                          @514 [@dyn 67]
  6977: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  6981: 7b 10 90 00              u64 [sp + 0x90] = ra
  6985: 7b 15 88 00              u64 [sp + 0x88] = s0
  6989: 7b 16 80 00              u64 [sp + 0x80] = s1
  6993: 64 85                    s0 = a1
  6995: 82 86 28                 s1 = u64 [a1 + 0x28]
  6998: 82 8a 20                 a3 = u64 [a1 + 0x20]
  7001: 82 6b 18                 a4 = u64 [s1 + 0x18]
  7004: 7b 17 10                 u64 [sp + 0x10] = a0
  7007: 33 08 38 02 01           a1 = 0x10238
  7012: 33 09 01                 a2 = 0x1
  7015: 7b 1a 18                 u64 [sp + 0x18] = a3
  7018: 64 a7                    a0 = a3
  7020: 7b 1b 08                 u64 [sp + 0x8] = a4
  7023: b4 b0 02 88 00           ra = 136, jump [a4]
      :                          @515 [@dyn 68]
  7028: 51 07 09                 jump @517 if a0 == 0
      :                          @516
  7031: 33 09 01                 a2 = 0x1
  7034: 28 d2 00                 jump @529
      :                          @517
  7037: 80 58 34                 a1 = u32 [s0 + 0x34]
  7040: 84 87 04                 a0 = a1 & 0x4
  7043: 52 07 21                 jump @521 if a0 != 0
      :                          @518
  7046: 82 17 10                 a0 = u64 [sp + 0x10]
  7049: 64 58                    a1 = s0
  7051: 50 20 8a 00 d5 00        ra = 138, jump @530
      :                          @519 [@dyn 69]
  7057: 33 09 01                 a2 = 0x1
  7060: 52 07 b8 00              jump @529 if a0 != 0
      :                          @520
  7064: 82 57 28                 a0 = u64 [s0 + 0x28]
  7067: 82 5a 20                 a3 = u64 [s0 + 0x20]
  7070: 82 7b 18                 a4 = u64 [a0 + 0x18]
  7073: 28 99 00                 jump @527
      :                          @521
  7076: 7b 18                    u64 [sp] = a1
  7078: 33 08 72 02 01           a1 = 0x10272
  7083: 33 09 01                 a2 = 0x1
  7086: 82 17 18                 a0 = u64 [sp + 0x18]
  7089: 82 1a 08                 a3 = u64 [sp + 0x8]
  7092: b4 a0 02 8c 00           ra = 140, jump [a3]
      :                          @522 [@dyn 70]
  7097: 33 09 01                 a2 = 0x1
  7100: 82 18 18                 a1 = u64 [sp + 0x18]
  7103: 52 07 8d 00              jump @529 if a0 != 0
      :                          @523
  7107: 46 11 3f 01              u8 [sp + 63] = 0x1
  7111: 7b 18 20                 u64 [sp + 0x20] = a1
  7114: 7b 16 28                 u64 [sp + 0x28] = s1
  7117: 95 17 3f                 a0 = sp + 0x3f
  7120: 7b 17 30                 u64 [sp + 0x30] = a0
  7123: 81 57 30                 a0 = i32 [s0 + 0x30]
  7126: 7c 58 38                 a1 = u8 [s0 + 0x38]
  7129: 82 59                    a2 = u64 [s0]
  7131: 82 5a 08                 a3 = u64 [s0 + 0x8]
  7134: 82 5b 10                 a4 = u64 [s0 + 0x10]
  7137: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7140: 82 16                    s1 = u64 [sp]
  7142: 7a 16 74                 u32 [sp + 0x74] = s1
  7145: 7a 17 70                 u32 [sp + 0x70] = a0
  7148: 78 18 78                 u8 [sp + 0x78] = a1
  7151: 7b 19 40                 u64 [sp + 0x40] = a2
  7154: 7b 1a 48                 u64 [sp + 0x48] = a3
  7157: 7b 1b 50                 u64 [sp + 0x50] = a4
  7160: 7b 1c 58                 u64 [sp + 0x58] = a5
  7163: 95 17 20                 a0 = sp + 0x20
  7166: 7b 17 60                 u64 [sp + 0x60] = a0
  7169: 33 07 40 02 01           a0 = 0x10240
  7174: 7b 17 68                 u64 [sp + 0x68] = a0
  7177: 95 18 40                 a1 = sp + 0x40
  7180: 82 17 10                 a0 = u64 [sp + 0x10]
  7183: 50 20 8e 00 51           ra = 142, jump @530
      :                          @524 [@dyn 71]
  7188: 52 07 63 ff              jump @516 if a0 != 0
      :                          @525
  7192: 82 18 68                 a1 = u64 [sp + 0x68]
  7195: 82 17 60                 a0 = u64 [sp + 0x60]
  7198: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7201: 33 08 70 02 01           a1 = 0x10270
  7206: 33 09 02                 a2 = 0x2
  7209: b4 a0 02 90 00           ra = 144, jump [a3]
      :                          @526 [@dyn 72]
  7214: 82 1a 18                 a3 = u64 [sp + 0x18]
  7217: 82 1b 08                 a4 = u64 [sp + 0x8]
  7220: 33 09 01                 a2 = 0x1
  7223: 52 07 15                 jump @529 if a0 != 0
      :                          @527
  7226: 33 08 73 02 01           a1 = 0x10273
  7231: 33 09 01                 a2 = 0x1
  7234: 64 a7                    a0 = a3
  7236: b4 b0 02 92 00           ra = 146, jump [a4]
      :                          @528 [@dyn 73]
  7241: 64 79                    a2 = a0
  7243: 01                       fallthrough
      :                          @529
  7244: 64 97                    a0 = a2
  7246: 82 10 90 00              ra = u64 [sp + 0x90]
  7250: 82 15 88 00              s0 = u64 [sp + 0x88]
  7254: 82 16 80 00              s1 = u64 [sp + 0x80]
  7258: 95 11 98 00              sp = sp + 0x98
  7262: 32 00                    ret
      :                          @530
  7264: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7268: 7b 10 80 00              u64 [sp + 0x80] = ra
  7272: 64 82                    t0 = a1
  7274: 80 88 34                 a1 = u32 [a1 + 0x34]
  7277: 84 89 10                 a2 = a1 & 0x10
  7280: 52 09 1b                 jump @533 if a2 != 0
      :                          @531
  7283: 84 88 20                 a1 = a1 & 0x20
  7286: 52 08 46                 jump @536 if a1 != 0
      :                          @532
  7289: 7c 77                    a0 = u8 [a0]
  7291: 33 08 01                 a1 = 0x1
  7294: 64 29                    a2 = t0
  7296: 82 10 80 00              ra = u64 [sp + 0x80]
  7300: 95 11 88 00              sp = sp + 0x88
  7304: 28 0b f6                 jump @334
      :                          @533
  7307: 7c 77                    a0 = u8 [a0]
  7309: 33 0a 81 00              a3 = 0x81
  7313: 95 18 7f                 a1 = sp + 0x7f
  7316: 33 03 57                 t1 = 0x57
  7319: 01                       fallthrough
      :                          @534
  7320: 64 ab                    a4 = a3
  7322: 84 7a 0f                 a3 = a0 & 0xf
  7325: 97 77 38                 a0 = a0 << 0x38
  7328: 98 77 3c                 a0 = a0 >> 0x3c
  7331: 88 ac 0a                 a5 = a3 <u 0xa
  7334: 33 09 30                 a2 = 0x30
  7337: da c3 09                 a2 = t1 if a5 == 0
  7340: be a9 09                 i32 a2 = a2 + a3
  7343: 78 89                    u8 [a1] = a2
  7345: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7348: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7351: 52 07 e1                 jump @534 if a0 != 0
      :                          @535
  7354: 28 31                    jump @538
      :                          @536
  7356: 7c 77                    a0 = u8 [a0]
  7358: 33 0a 81 00              a3 = 0x81
  7362: 95 18 7f                 a1 = sp + 0x7f
  7365: 33 03 37                 t1 = 0x37
  7368: 01                       fallthrough
      :                          @537
  7369: 64 ab                    a4 = a3
  7371: 84 7a 0f                 a3 = a0 & 0xf
  7374: 97 77 38                 a0 = a0 << 0x38
  7377: 98 77 3c                 a0 = a0 >> 0x3c
  7380: 88 ac 0a                 a5 = a3 <u 0xa
  7383: 33 09 30                 a2 = 0x30
  7386: da c3 09                 a2 = t1 if a5 == 0
  7389: be a9 09                 i32 a2 = a2 + a3
  7392: 78 89                    u8 [a1] = a2
  7394: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7397: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7400: 52 07 e1                 jump @537 if a0 != 0
      :                          @538
  7403: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  7406: 56 27 80 00 2b           jump @541 if a0 >u 128
      :                          @539
  7411: 9a ac 81 00              a5 = 0x81 - a3
  7415: 64 1b                    a4 = sp
  7417: c8 7b 0b                 a4 = a4 + a0
  7420: 33 09 74 02 01           a2 = 0x10274
  7425: 33 08 01                 a1 = 0x1
  7428: 33 0a 02                 a3 = 0x2
  7431: 64 27                    a0 = t0
  7433: 50 20 94 00 b7 f6        ra = 148, jump @344
      :                          @540 [@dyn 74]
  7439: 82 10 80 00              ra = u64 [sp + 0x80]
  7443: 95 11 88 00              sp = sp + 0x88
  7447: 32 00                    ret
      :                          @541
  7449: 00                       trap
