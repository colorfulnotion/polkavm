// RO data = 0/0 bytes
// RW data = 0/0 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = []
// RW data = []
// Instructions = 443
// Code size = 1323 bytes

      :                          @0
     0: 28 0d 00 00 00           jump @3
      :                          @1
     5: 28 24 01 00 00           jump @38
      :                          @2
    10: 28 cb 04                 jump @140
      :                          @3 [export #0: 'refine']
    13: 95 11 f8                 sp = sp + 0xfffffffffffffff8
    16: 7b 15                    u64 [sp] = s0
    18: 64 7a                    a3 = a0
    20: 33 09 04                 a2 = 0x4
    23: 33 07 ff                 a0 = 0xffffffffffffffff
    26: ac 98 05 01              jump @34 if a1 <u a2
      :                          @4
    30: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
    33: 51 08 fe 00              jump @34 if a1 == 0
      :                          @5
    37: 95 a5 04                 s0 = a3 + 0x4
    40: 7d 59                    a2 = i8 [s0]
    42: 84 9c ff 00              a5 = a2 & 0xff
    46: 33 04 01                 t2 = 0x1
    49: 59 09 3a                 jump @13 if a2 >=s 0
      :                          @6
    52: 33 04 02                 t2 = 0x2
    55: 53 2c c0 00 30           jump @12 if a5 <u 192
      :                          @7
    60: 33 04 03                 t2 = 0x3
    63: 53 2c e0 00 28           jump @12 if a5 <u 224
      :                          @8
    68: 33 04 04                 t2 = 0x4
    71: 53 2c f0 00 20           jump @12 if a5 <u 240
      :                          @9
    76: 33 04 05                 t2 = 0x5
    79: 53 2c f8 00 18           jump @12 if a5 <u 248
      :                          @10
    84: 33 04 06                 t2 = 0x6
    87: 53 2c fc 00 10           jump @12 if a5 <u 252
      :                          @11
    92: 88 c9 fe 00              a2 = a5 <u 0xfe
    96: 33 0b 08                 a4 = 0x8
    99: c9 9b 04                 t2 = a4 - a2
   102: 01                       fallthrough
      :                          @12
   103: ac 48 c0 00              jump @36 if a1 <u t2
      :                          @13
   107: 51 0c 90 00              jump @32 if a5 == 0
      :                          @14
   111: 51 2c ff 00 b7 00        jump @35 if a5 == 255
      :                          @15
   117: 6c c9                    a2 = sext.b a5
   119: 57 09 09                 jump @17 if a2 <s 0
      :                          @16
   122: 33 03                    t1 = 0
   124: 33 0b                    a4 = 0
   126: 28 73                    jump @31
      :                          @17
   128: 55 2c c0 00 0d           jump @19 if a5 >=u 192
      :                          @18
   133: 33 03 01                 t1 = 0x1
   136: 33 02 80                 t0 = 0xffffffffffffff80
   139: 28 4a                    jump @28
      :                          @19
   141: 55 2c e0 00 0e           jump @21 if a5 >=u 224
      :                          @20
   146: 33 03 02                 t1 = 0x2
   149: 33 02 40 ff              t0 = 0xffffffffffffff40
   153: 28 3c                    jump @28
      :                          @21
   155: 55 2c f0 00 0e           jump @23 if a5 >=u 240
      :                          @22
   160: 33 03 03                 t1 = 0x3
   163: 33 02 20 ff              t0 = 0xffffffffffffff20
   167: 28 2e                    jump @28
      :                          @23
   169: 55 2c f8 00 0e           jump @25 if a5 >=u 248
      :                          @24
   174: 33 03 04                 t1 = 0x4
   177: 33 02 10 ff              t0 = 0xffffffffffffff10
   181: 28 20                    jump @28
      :                          @25
   183: 55 2c fc 00 0e           jump @27 if a5 >=u 252
      :                          @26
   188: 33 03 05                 t1 = 0x5
   191: 33 02 08 ff              t0 = 0xffffffffffffff08
   195: 28 12                    jump @28
      :                          @27
   197: 88 c9 fe 00              a2 = a5 <u 0xfe
   201: 33 02 04 ff              t0 = 0xffffffffffffff04
   205: 93 92 02 ff              t0 = 0xffffffffffffff02 if a2 == 0
   209: 85 93 07                 t1 = a2 ^ 0x7
   212: 01                       fallthrough
      :                          @28
   213: ae 43 53                 jump @37 if t1 >=u t2
      :                          @29
   216: 33 0b                    a4 = 0
   218: c8 2c 0c                 a5 = a5 + t0
   221: 64 3a                    a3 = t1
   223: 01                       fallthrough
      :                          @30
   224: c8 a5 09                 a2 = s0 + a3
   227: 7c 99                    a2 = u8 [a2]
   229: 97 bb 08                 a4 = a4 << 0x8
   232: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
   235: d4 9b 0b                 a4 = a4 | a2
   238: 52 0a f2                 jump @30 if a3 != 0
      :                          @31
   241: 8a 39 03                 i32 a2 = t1 << 0x3
   244: cf 9c 0c                 a5 = a5 << a2
   247: c8 bc 0c                 a5 = a5 + a4
   250: 01                       fallthrough
      :                          @32
   251: e4 48 08                 a1 = maxu(a1, t2)
   254: c9 48 08                 a1 = a1 - t2
   257: d8 c8 09                 a2 = a1 <u a5
   260: e4 c8 08                 a1 = maxu(a1, a5)
   263: c9 c8 08                 a1 = a1 - a5
   266: 88 88 20                 a1 = a1 <u 0x20
   269: d4 98 08                 a1 = a1 | a2
   272: 52 08 0f                 jump @34 if a1 != 0
      :                          @33
   275: 64 c8                    a1 = a5
   277: c8 45 07                 a0 = s0 + t2
   280: 82 15                    s0 = u64 [sp]
   282: 95 11 08                 sp = sp + 0x8
   285: 32 00                    ret
      :                          @34
   287: 82 15                    s0 = u64 [sp]
   289: 95 11 08                 sp = sp + 0x8
   292: 32 00                    ret
      :                          @35
   294: 00                       trap
      :                          @36
   295: 00                       trap
      :                          @37
   296: 00                       trap
      :                          @38 [export #1: 'accumulate']
   297: 95 11 a0                 sp = sp + 0xffffffffffffffa0
   300: 7b 10 58                 u64 [sp + 0x58] = ra
   303: 7b 15 50                 u64 [sp + 0x50] = s0
   306: 64 79                    a2 = a0
   308: 64 8a                    a3 = a1
   310: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
   313: 33 07 ff                 a0 = 0xffffffffffffffff
   316: 51 0a 86 03              jump @131 if a3 == 0
      :                          @39
   320: 95 9b 08                 a4 = a2 + 0x8
   323: 7d bc                    a5 = i8 [a4]
   325: 84 c4 ff 00              t2 = a5 & 0xff
   329: 33 08 01                 a1 = 0x1
   332: 59 0c 40                 jump @46 if a5 >=s 0
      :                          @40
   335: 33 0c c0 00              a5 = 0xc0
   339: 33 08 02                 a1 = 0x2
   342: ac c4 36                 jump @46 if t2 <u a5
      :                          @41
   345: 33 0c e0 00              a5 = 0xe0
   349: 33 08 03                 a1 = 0x3
   352: ac c4 2c                 jump @46 if t2 <u a5
      :                          @42
   355: 33 0c f0 00              a5 = 0xf0
   359: 33 08 04                 a1 = 0x4
   362: ac c4 22                 jump @46 if t2 <u a5
      :                          @43
   365: 33 0c f8 00              a5 = 0xf8
   369: 33 08 05                 a1 = 0x5
   372: ac c4 18                 jump @46 if t2 <u a5
      :                          @44
   375: 33 0c fc 00              a5 = 0xfc
   379: 33 08 06                 a1 = 0x6
   382: ac c4 0e                 jump @46 if t2 <u a5
      :                          @45
   385: 88 48 fe 00              a1 = t2 <u 0xfe
   389: 33 0c 08                 a5 = 0x8
   392: c9 8c 08                 a1 = a5 - a1
   395: 01                       fallthrough
      :                          @46
   396: ac 8a 36 03              jump @131 if a3 <u a1
      :                          @47
   400: 51 04 32 03              jump @131 if t2 == 0
      :                          @48
   404: 51 24 ff 00 39 03        jump @132 if t2 == 255
      :                          @49
   410: 6c 4c                    a5 = sext.b t2
   412: 57 0c 09                 jump @51 if a5 <s 0
      :                          @50
   415: 33 03                    t1 = 0
   417: 33 05                    s0 = 0
   419: 28 74                    jump @65
      :                          @51
   421: 55 24 c0 00 0d           jump @53 if t2 >=u 192
      :                          @52
   426: 33 03 01                 t1 = 0x1
   429: 33 02 80                 t0 = 0xffffffffffffff80
   432: 28 4a                    jump @62
      :                          @53
   434: 55 24 e0 00 0e           jump @55 if t2 >=u 224
      :                          @54
   439: 33 03 02                 t1 = 0x2
   442: 33 02 40 ff              t0 = 0xffffffffffffff40
   446: 28 3c                    jump @62
      :                          @55
   448: 55 24 f0 00 0e           jump @57 if t2 >=u 240
      :                          @56
   453: 33 03 03                 t1 = 0x3
   456: 33 02 20 ff              t0 = 0xffffffffffffff20
   460: 28 2e                    jump @62
      :                          @57
   462: 55 24 f8 00 0e           jump @59 if t2 >=u 248
      :                          @58
   467: 33 03 04                 t1 = 0x4
   470: 33 02 10 ff              t0 = 0xffffffffffffff10
   474: 28 20                    jump @62
      :                          @59
   476: 55 24 fc 00 0e           jump @61 if t2 >=u 252
      :                          @60
   481: 33 03 05                 t1 = 0x5
   484: 33 02 08 ff              t0 = 0xffffffffffffff08
   488: 28 12                    jump @62
      :                          @61
   490: 88 4c fe 00              a5 = t2 <u 0xfe
   494: 33 02 04 ff              t0 = 0xffffffffffffff04
   498: 93 c2 02 ff              t0 = 0xffffffffffffff02 if a5 == 0
   502: 85 c3 07                 t1 = a5 ^ 0x7
   505: 01                       fallthrough
      :                          @62
   506: ae 83 d4 02              jump @133 if t1 >=u a1
      :                          @63
   510: 33 05                    s0 = 0
   512: c8 24 04                 t2 = t2 + t0
   515: 64 3c                    a5 = t1
   517: 01                       fallthrough
      :                          @64
   518: c8 cb 09                 a2 = a4 + a5
   521: 7c 99                    a2 = u8 [a2]
   523: 97 55 08                 s0 = s0 << 0x8
   526: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   529: d4 95 05                 s0 = s0 | a2
   532: 52 0c f2                 jump @64 if a5 != 0
      :                          @65
   535: 8a 39 03                 i32 a2 = t1 << 0x3
   538: cf 94 09                 a2 = t2 << a2
   541: 9a 99                    a2 = -a2
   543: aa 95 a3 02              jump @131 if s0 == a2
      :                          @66
   547: e4 8a 0a                 a3 = maxu(a3, a1)
   550: c9 8a 0a                 a3 = a3 - a1
   553: 33 09 60                 a2 = 0x60
   556: ac 9a 96 02              jump @131 if a3 <u a2
      :                          @67
   560: c8 8b 0b                 a4 = a4 + a1
   563: 95 a8 a0                 a1 = a3 + 0xffffffffffffffa0
   566: 95 b9 60                 a2 = a4 + 0x60
   569: 51 08 65                 jump @80 if a1 == 0
      :                          @68
   572: 7d 9b                    a4 = i8 [a2]
   574: 84 b5 ff 00              s0 = a4 & 0xff
   578: 33 04 01                 t2 = 0x1
   581: 59 0b 40                 jump @75 if a4 >=s 0
      :                          @69
   584: 33 0b c0 00              a4 = 0xc0
   588: 33 04 02                 t2 = 0x2
   591: ac b5 36                 jump @75 if s0 <u a4
      :                          @70
   594: 33 0b e0 00              a4 = 0xe0
   598: 33 04 03                 t2 = 0x3
   601: ac b5 2c                 jump @75 if s0 <u a4
      :                          @71
   604: 33 0b f0 00              a4 = 0xf0
   608: 33 04 04                 t2 = 0x4
   611: ac b5 22                 jump @75 if s0 <u a4
      :                          @72
   614: 33 0b f8 00              a4 = 0xf8
   618: 33 04 05                 t2 = 0x5
   621: ac b5 18                 jump @75 if s0 <u a4
      :                          @73
   624: 33 0b fc 00              a4 = 0xfc
   628: 33 04 06                 t2 = 0x6
   631: ac b5 0e                 jump @75 if s0 <u a4
      :                          @74
   634: 88 5a fe 00              a3 = s0 <u 0xfe
   638: 33 0b 08                 a4 = 0x8
   641: c9 ab 04                 t2 = a4 - a3
   644: 01                       fallthrough
      :                          @75
   645: ac 48 4a 02              jump @134 if a1 <u t2
      :                          @76
   649: 51 05 97 00              jump @96 if s0 == 0
      :                          @77
   653: 51 25 ff 00 43 02        jump @135 if s0 == 255
      :                          @78
   659: 6c 5b                    a4 = sext.b s0
   661: 57 0b 0f                 jump @81 if a4 <s 0
      :                          @79
   664: 33 03                    t1 = 0
   666: 33 0b                    a4 = 0
   668: 28 7a                    jump @95
      :                          @80
   670: 33 04                    t2 = 0
   672: 33 05                    s0 = 0
   674: 28 7e                    jump @96
      :                          @81
   676: 55 25 c0 00 0d           jump @83 if s0 >=u 192
      :                          @82
   681: 33 03 01                 t1 = 0x1
   684: 33 02 80                 t0 = 0xffffffffffffff80
   687: 28 4a                    jump @92
      :                          @83
   689: 55 25 e0 00 0e           jump @85 if s0 >=u 224
      :                          @84
   694: 33 03 02                 t1 = 0x2
   697: 33 02 40 ff              t0 = 0xffffffffffffff40
   701: 28 3c                    jump @92
      :                          @85
   703: 55 25 f0 00 0e           jump @87 if s0 >=u 240
      :                          @86
   708: 33 03 03                 t1 = 0x3
   711: 33 02 20 ff              t0 = 0xffffffffffffff20
   715: 28 2e                    jump @92
      :                          @87
   717: 55 25 f8 00 0e           jump @89 if s0 >=u 248
      :                          @88
   722: 33 03 04                 t1 = 0x4
   725: 33 02 10 ff              t0 = 0xffffffffffffff10
   729: 28 20                    jump @92
      :                          @89
   731: 55 25 fc 00 0e           jump @91 if s0 >=u 252
      :                          @90
   736: 33 03 05                 t1 = 0x5
   739: 33 02 08 ff              t0 = 0xffffffffffffff08
   743: 28 12                    jump @92
      :                          @91
   745: 88 5b fe 00              a4 = s0 <u 0xfe
   749: 33 02 04 ff              t0 = 0xffffffffffffff04
   753: 93 b2 02 ff              t0 = 0xffffffffffffff02 if a4 == 0
   757: 85 b3 07                 t1 = a4 ^ 0x7
   760: 01                       fallthrough
      :                          @92
   761: ae 43 d8 01              jump @136 if t1 >=u t2
      :                          @93
   765: 33 0b                    a4 = 0
   767: c8 25 05                 s0 = s0 + t0
   770: 64 3c                    a5 = t1
   772: 01                       fallthrough
      :                          @94
   773: c8 c9 0a                 a3 = a2 + a5
   776: 7c aa                    a3 = u8 [a3]
   778: 97 bb 08                 a4 = a4 << 0x8
   781: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   784: d4 ab 0b                 a4 = a4 | a3
   787: 52 0c f2                 jump @94 if a5 != 0
      :                          @95
   790: 8a 3a 03                 i32 a3 = t1 << 0x3
   793: cf a5 05                 s0 = s0 << a3
   796: c8 b5 05                 s0 = s0 + a4
   799: 01                       fallthrough
      :                          @96
   800: e4 48 08                 a1 = maxu(a1, t2)
   803: c9 48 08                 a1 = a1 - t2
   806: e4 58 08                 a1 = maxu(a1, s0)
   809: c9 58 08                 a1 = a1 - s0
   812: 33 0a 21                 a3 = 0x21
   815: ac a8 93 01              jump @131 if a1 <u a3
      :                          @97
   819: c8 49 09                 a2 = a2 + t2
   822: c8 95 05                 s0 = s0 + a2
   825: 7c 57 20                 a0 = u8 [s0 + 0x20]
   828: 51 07 0a                 jump @99 if a0 == 0
      :                          @98
   831: 33 08                    a1 = 0
   833: 33 07                    a0 = 0
   835: 28 f0 00                 jump @129
      :                          @99
   838: 95 88 df                 a1 = a1 + 0xffffffffffffffdf
   841: 95 55 21                 s0 = s0 + 0x21
   844: 51 08 58                 jump @112 if a1 == 0
      :                          @100
   847: 7d 5a                    a3 = i8 [s0]
   849: 84 ac ff 00              a5 = a3 & 0xff
   853: 33 09 01                 a2 = 0x1
   856: 59 0a 33                 jump @107 if a3 >=s 0
      :                          @101
   859: 33 09 02                 a2 = 0x2
   862: 53 2c c0 00 2d           jump @107 if a5 <u 192
      :                          @102
   867: 33 09 03                 a2 = 0x3
   870: 53 2c e0 00 25           jump @107 if a5 <u 224
      :                          @103
   875: 33 09 04                 a2 = 0x4
   878: 53 2c f0 00 1d           jump @107 if a5 <u 240
      :                          @104
   883: 33 09 05                 a2 = 0x5
   886: 53 2c f8 00 15           jump @107 if a5 <u 248
      :                          @105
   891: 33 09 06                 a2 = 0x6
   894: 53 2c fc 00 0d           jump @107 if a5 <u 252
      :                          @106
   899: 88 c9 fe 00              a2 = a5 <u 0xfe
   903: 9a 99 08                 a2 = 0x8 - a2
   906: 01                       fallthrough
      :                          @107
   907: ac 98 47 01              jump @137 if a1 <u a2
      :                          @108
   911: 51 0c 97 00              jump @128 if a5 == 0
      :                          @109
   915: 51 2c ff 00 40 01        jump @138 if a5 == 255
      :                          @110
   921: 6c ca                    a3 = sext.b a5
   923: 57 0a 0f                 jump @113 if a3 <s 0
      :                          @111
   926: 33 02                    t0 = 0
   928: 33 0a                    a3 = 0
   930: 28 7a                    jump @127
      :                          @112
   932: 33 09                    a2 = 0
   934: 33 0c                    a5 = 0
   936: 28 7e                    jump @128
      :                          @113
   938: 55 2c c0 00 0d           jump @115 if a5 >=u 192
      :                          @114
   943: 33 02 01                 t0 = 0x1
   946: 33 0b 80                 a4 = 0xffffffffffffff80
   949: 28 4a                    jump @124
      :                          @115
   951: 55 2c e0 00 0e           jump @117 if a5 >=u 224
      :                          @116
   956: 33 02 02                 t0 = 0x2
   959: 33 0b 40 ff              a4 = 0xffffffffffffff40
   963: 28 3c                    jump @124
      :                          @117
   965: 55 2c f0 00 0e           jump @119 if a5 >=u 240
      :                          @118
   970: 33 02 03                 t0 = 0x3
   973: 33 0b 20 ff              a4 = 0xffffffffffffff20
   977: 28 2e                    jump @124
      :                          @119
   979: 55 2c f8 00 0e           jump @121 if a5 >=u 248
      :                          @120
   984: 33 02 04                 t0 = 0x4
   987: 33 0b 10 ff              a4 = 0xffffffffffffff10
   991: 28 20                    jump @124
      :                          @121
   993: 55 2c fc 00 0e           jump @123 if a5 >=u 252
      :                          @122
   998: 33 02 05                 t0 = 0x5
  1001: 33 0b 08 ff              a4 = 0xffffffffffffff08
  1005: 28 12                    jump @124
      :                          @123
  1007: 88 ca fe 00              a3 = a5 <u 0xfe
  1011: 33 0b 04 ff              a4 = 0xffffffffffffff04
  1015: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  1019: 85 a2 07                 t0 = a3 ^ 0x7
  1022: 01                       fallthrough
      :                          @124
  1023: ae 92 d5 00              jump @139 if t0 >=u a2
      :                          @125
  1027: 33 0a                    a3 = 0
  1029: c8 bc 0c                 a5 = a5 + a4
  1032: 64 2b                    a4 = t0
  1034: 01                       fallthrough
      :                          @126
  1035: c8 b5 07                 a0 = s0 + a4
  1038: 7c 77                    a0 = u8 [a0]
  1040: 97 aa 08                 a3 = a3 << 0x8
  1043: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  1046: d4 7a 0a                 a3 = a3 | a0
  1049: 52 0b f2                 jump @126 if a4 != 0
      :                          @127
  1052: 8a 27 03                 i32 a0 = t0 << 0x3
  1055: cf 7c 0c                 a5 = a5 << a0
  1058: c8 ac 0c                 a5 = a5 + a3
  1061: 01                       fallthrough
      :                          @128
  1062: c8 95 07                 a0 = s0 + a2
  1065: e4 98 08                 a1 = maxu(a1, a2)
  1068: c9 98 08                 a1 = a1 - a2
  1071: e6 c8 08                 a1 = minu(a1, a5)
  1074: 01                       fallthrough
      :                          @129
  1075: c8 78 08                 a1 = a1 + a0
  1078: 48 11 08                 u32 [sp + 8] = 0
  1081: 49 01                    u64 [sp + 0] = 0
  1083: 48 11 18                 u32 [sp + 24] = 0
  1086: 49 11 10                 u64 [sp + 16] = 0
  1089: 46 11 23                 u8 [sp + 35] = 0
  1092: 80 77                    a0 = u32 [a0]
  1094: 80 85 fc                 s0 = u32 [a1 + 0xfffffffffffffffc]
  1097: 95 18 23                 a1 = sp + 0x23
  1100: 33 09 01                 a2 = 0x1
  1103: 64 1a                    a3 = sp
  1105: 33 0c 0c                 a5 = 0xc
  1108: 33 0b                    a4 = 0
  1110: 0a 02                    ecalli 2 // 'read'
  1112: 95 18 23                 a1 = sp + 0x23
  1115: 33 09 01                 a2 = 0x1
  1118: 95 1a 10                 a3 = sp + 0x10
  1121: 33 0c 0c                 a5 = 0xc
  1124: 64 57                    a0 = s0
  1126: 33 0b                    a4 = 0
  1128: 0a 02                    ecalli 2 // 'read'
  1130: 81 17 04                 a0 = i32 [sp + 0x4]
  1133: 81 18 08                 a1 = i32 [sp + 0x8]
  1136: 81 19 14                 a2 = i32 [sp + 0x14]
  1139: 81 1a 18                 a3 = i32 [sp + 0x18]
  1142: 81 1b                    a4 = i32 [sp]
  1144: be 97 07                 i32 a0 = a0 + a2
  1147: be a8 08                 i32 a1 = a1 + a3
  1150: 7a 1b 24                 u32 [sp + 0x24] = a4
  1153: 7a 17 28                 u32 [sp + 0x28] = a0
  1156: 7a 18 2c                 u32 [sp + 0x2c] = a1
  1159: 95 17 23                 a0 = sp + 0x23
  1162: 33 08 01                 a1 = 0x1
  1165: 95 19 24                 a2 = sp + 0x24
  1168: 33 0a 0c                 a3 = 0xc
  1171: 0a 03                    ecalli 3 // 'write'
  1173: 95 17 3c                 a0 = sp + 0x3c
  1176: 33 09 14                 a2 = 0x14
  1179: 33 08                    a1 = 0
  1181: 50 10 02 3c              ra = 2, jump @141
      :                          @130 [@dyn 1]
  1185: 81 17 2c                 a0 = i32 [sp + 0x2c]
  1188: 80 18 28                 a1 = u32 [sp + 0x28]
  1191: 80 19 24                 a2 = u32 [sp + 0x24]
  1194: 7a 17 38                 u32 [sp + 0x38] = a0
  1197: 97 88 20                 a1 = a1 << 0x20
  1200: d4 98 08                 a1 = a1 | a2
  1203: 7b 18 30                 u64 [sp + 0x30] = a1
  1206: 95 17 30                 a0 = sp + 0x30
  1209: 0a 10                    ecalli 16 // 'oyield'
  1211: 33 08 20                 a1 = 0x20
  1214: 95 17 30                 a0 = sp + 0x30
  1217: 01                       fallthrough
      :                          @131
  1218: 82 10 58                 ra = u64 [sp + 0x58]
  1221: 82 15 50                 s0 = u64 [sp + 0x50]
  1224: 95 11 60                 sp = sp + 0x60
  1227: 32 00                    ret
      :                          @132
  1229: 00                       trap
      :                          @133
  1230: 00                       trap
      :                          @134
  1231: 00                       trap
      :                          @135
  1232: 00                       trap
      :                          @136
  1233: 00                       trap
      :                          @137
  1234: 00                       trap
      :                          @138
  1235: 00                       trap
      :                          @139
  1236: 00                       trap
      :                          @140 [export #2: 'on_transfer']
  1237: 33 07                    a0 = 0
  1239: 32 00                    ret
      :                          @141
  1241: 8d 7a                    i32 a3 = -a0
  1243: 84 aa 07                 a3 = a3 & 0x7
  1246: c8 a7 0b                 a4 = a0 + a3
  1249: 51 0a 0e                 jump @144 if a3 == 0
      :                          @142
  1252: 64 7c                    a5 = a0
  1254: 01                       fallthrough
      :                          @143
  1255: 78 c8                    u8 [a5] = a1
  1257: 95 cc 01                 a5 = a5 + 0x1
  1260: ac bc fb                 jump @143 if a5 <u a4
      :                          @144
  1263: c9 a9 03                 t1 = a2 - a3
  1266: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  1269: c8 cb 0a                 a3 = a4 + a5
  1272: 58 0c 1d                 jump @147 if a5 <=s 0
      :                          @145
  1275: 84 82 ff 00              t0 = a1 & 0xff
  1279: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  1289: ca 92 0c                 a5 = t0 * a2
  1292: 01                       fallthrough
      :                          @146
  1293: 7b bc                    u64 [a4] = a5
  1295: 95 bb 08                 a4 = a4 + 0x8
  1298: ac ab fb                 jump @146 if a4 <u a3
      :                          @147
  1301: 84 39 07                 a2 = t1 & 0x7
  1304: 52 09 05                 jump @149 if a2 != 0
      :                          @148
  1307: 28 0e                    jump @151
      :                          @149
  1309: c8 a9 09                 a2 = a2 + a3
  1312: 01                       fallthrough
      :                          @150
  1313: 78 a8                    u8 [a3] = a1
  1315: 95 aa 01                 a3 = a3 + 0x1
  1318: ac 9a fb                 jump @150 if a3 <u a2
      :                          @151
  1321: 32 00                    ret
