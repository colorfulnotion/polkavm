// RO data = 888/888 bytes
// RW data = 16/65616 bytes
// Stack size = 65536 bytes
// RO data = [109, 101, 103, 40, 109, 101, 103, 32, 114, 101, 97, 100, 32, 32, 32, 32, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 115, 101, 114, 118, 105, 99, 101, 32, 32, 102, 105, 98, 40, 110, 61, 41, 61, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 105, 98, 40, 110, 61, 116, 114, 97, 110, 115, 102, 101, 114, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 119, 114, 105, 116, 101, 40, 110, 61, 41, 32, 110, 117, 109, 95, 116, 114, 97, 110, 115, 102, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 233, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 97, 110, 115, 102, 101, 114, 40, 100, 101, 115, 116, 58, 44, 32, 97, 109, 111, 117, 110, 116, 61, 44, 32, 103, 97, 115, 95, 97, 118, 97, 105, 108, 61, 41, 32, 82, 101, 115, 117, 108, 116, 58, 32, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 77, 101, 103, 97, 116, 114, 111, 110, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 206, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 62, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2415
// Code size = 7282 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 e0 02 00 00           jump @54
      :                          @2
    10: 28 99 0a                 jump @176
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 a9 11                 jump @328
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 74 02 01           a2 = 0x10274
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 57 12           ra = 4, jump @338
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 f2 10                 jump @328
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 74 02 01           a2 = 0x10274
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 a0 11           ra = 8, jump @338
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 3b 10                 jump @328
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 74 02 01           a2 = 0x10274
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c e9 10           ra = 12, jump @338
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   578: 7b 10 18                 u64 [sp + 0x18] = ra
   581: 7b 15 10                 u64 [sp + 0x10] = s0
   584: 7b 16 08                 u64 [sp + 0x8] = s1
   587: 64 86                    s1 = a1
   589: 64 78                    a1 = a0
   591: 33 09 04                 a2 = 0x4
   594: 33 07 00 00 01           a0 = 0x10000
   599: ac 96 7c                 jump @51 if s1 <u a2
      :                          @40
   602: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
   605: 51 06 76                 jump @51 if s1 == 0
      :                          @41
   608: 95 87 04                 a0 = a1 + 0x4
   611: 7d 78                    a1 = i8 [a0]
   613: 33 05 01                 s0 = 0x1
   616: 59 08 3a                 jump @49 if a1 >=s 0
      :                          @42
   619: 84 89 ff 00              a2 = a1 & 0xff
   623: 33 05 02                 s0 = 0x2
   626: 53 29 c0 00 2d           jump @48 if a2 <u 192
      :                          @43
   631: 33 05 03                 s0 = 0x3
   634: 53 29 e0 00 25           jump @48 if a2 <u 224
      :                          @44
   639: 33 05 04                 s0 = 0x4
   642: 53 29 f0 00 1d           jump @48 if a2 <u 240
      :                          @45
   647: 33 05 05                 s0 = 0x5
   650: 53 29 f8 00 15           jump @48 if a2 <u 248
      :                          @46
   655: 33 05 06                 s0 = 0x6
   658: 53 29 fc 00 0d           jump @48 if a2 <u 252
      :                          @47
   663: 88 98 fe 00              a1 = a2 <u 0xfe
   667: 9a 85 08                 s0 = 0x8 - a1
   670: 01                       fallthrough
      :                          @48
   671: ac 56 45                 jump @53 if s1 <u s0
      :                          @49
   674: 64 58                    a1 = s0
   676: 7b 17                    u64 [sp] = a0
   678: 50 10 0e 55 17           ra = 14, jump @484
      :                          @50 [@dyn 7]
   683: 64 78                    a1 = a0
   685: e4 56 07                 a0 = maxu(s1, s0)
   688: c9 57 07                 a0 = a0 - s0
   691: d8 87 09                 a2 = a0 <u a1
   694: e4 87 07                 a0 = maxu(a0, a1)
   697: c9 87 07                 a0 = a0 - a1
   700: 88 77 20                 a0 = a0 <u 0x20
   703: d4 79 09                 a2 = a2 | a0
   706: 82 17                    a0 = u64 [sp]
   708: c8 75 05                 s0 = s0 + a0
   711: 94 98                    a1 = 0 if a2 != 0
   713: 33 07 00 00 01           a0 = 0x10000
   718: da 95 07                 a0 = s0 if a2 == 0
   721: 28 05                    jump @52
      :                          @51
   723: 33 08                    a1 = 0
   725: 01                       fallthrough
      :                          @52
   726: 82 10 18                 ra = u64 [sp + 0x18]
   729: 82 15 10                 s0 = u64 [sp + 0x10]
   732: 82 16 08                 s1 = u64 [sp + 0x8]
   735: 95 11 20                 sp = sp + 0x20
   738: 32 00                    ret
      :                          @53
   740: 00                       trap
      :                          @54 [export #1: 'accumulate']
   741: 95 11 f8 fd              sp = sp + 0xfffffffffffffdf8
   745: 7b 10 00 02              u64 [sp + 0x200] = ra
   749: 7b 15 f8 01              u64 [sp + 0x1f8] = s0
   753: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
   757: 33 09 08                 a2 = 0x8
   760: ac 98 60 01              jump @98 if a1 <u a2
      :                          @55
   764: 51 17 fc a3 07           jump @172 if a0 == 4294967292
      :                          @56
   769: 51 07 9e 07              jump @172 if a0 == 0
      :                          @57
   773: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   776: 95 75 08                 s0 = a0 + 0x8
   779: 51 0a 45                 jump @67 if a3 == 0
      :                          @58
   782: 7d 58                    a1 = i8 [s0]
   784: 33 06 01                 s1 = 0x1
   787: 59 08 40                 jump @68 if a1 >=s 0
      :                          @59
   790: 84 89 ff 00              a2 = a1 & 0xff
   794: 33 06 02                 s1 = 0x2
   797: 53 29 c0 00 2d           jump @65 if a2 <u 192
      :                          @60
   802: 33 06 03                 s1 = 0x3
   805: 53 29 e0 00 25           jump @65 if a2 <u 224
      :                          @61
   810: 33 06 04                 s1 = 0x4
   813: 53 29 f0 00 1d           jump @65 if a2 <u 240
      :                          @62
   818: 33 06 05                 s1 = 0x5
   821: 53 29 f8 00 15           jump @65 if a2 <u 248
      :                          @63
   826: 33 06 06                 s1 = 0x6
   829: 53 29 fc 00 0d           jump @65 if a2 <u 252
      :                          @64
   834: 88 98 fe 00              a1 = a2 <u 0xfe
   838: 9a 86 08                 s1 = 0x8 - a1
   841: 01                       fallthrough
      :                          @65
   842: ae 6a 09                 jump @68 if a3 >=u s1
      :                          @66
   845: 28 0b 01                 jump @98
      :                          @67
   848: 33 06                    s1 = 0
   850: 01                       fallthrough
      :                          @68
   851: 7b 16 58                 u64 [sp + 0x58] = s1
   854: 64 57                    a0 = s0
   856: 64 68                    a1 = s1
   858: 64 a6                    s1 = a3
   860: 50 10 10 9f 16           ra = 16, jump @484
      :                          @69 [@dyn 8]
   865: 82 1a 58                 a3 = u64 [sp + 0x58]
   868: 51 07 f4 00              jump @98 if a0 == 0
      :                          @70
   872: e4 a6 07                 a0 = maxu(s1, a3)
   875: c9 a7 07                 a0 = a0 - a3
   878: 53 17 60 ea 00           jump @98 if a0 <u 96
      :                          @71
   883: c8 5a 08                 a1 = a3 + s0
   886: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   889: 95 87 60                 a0 = a1 + 0x60
   892: 7b 17 58                 u64 [sp + 0x58] = a0
   895: 51 06 4c                 jump @82 if s1 == 0
      :                          @72
   898: 7d 78                    a1 = i8 [a0]
   900: 33 05 01                 s0 = 0x1
   903: 59 08 37                 jump @79 if a1 >=s 0
      :                          @73
   906: 84 89 ff 00              a2 = a1 & 0xff
   910: 33 05 02                 s0 = 0x2
   913: 53 29 c0 00 2d           jump @79 if a2 <u 192
      :                          @74
   918: 33 05 03                 s0 = 0x3
   921: 53 29 e0 00 25           jump @79 if a2 <u 224
      :                          @75
   926: 33 05 04                 s0 = 0x4
   929: 53 29 f0 00 1d           jump @79 if a2 <u 240
      :                          @76
   934: 33 05 05                 s0 = 0x5
   937: 53 29 f8 00 15           jump @79 if a2 <u 248
      :                          @77
   942: 33 05 06                 s0 = 0x6
   945: 53 29 fc 00 0d           jump @79 if a2 <u 252
      :                          @78
   950: 88 98 fe 00              a1 = a2 <u 0xfe
   954: 9a 85 08                 s0 = 0x8 - a1
   957: 01                       fallthrough
      :                          @79
   958: ac 56 e2 06              jump @173 if s1 <u s0
      :                          @80
   962: 64 58                    a1 = s0
   964: 50 10 12 37 16           ra = 18, jump @484
      :                          @81 [@dyn 9]
   969: 28 07                    jump @83
      :                          @82
   971: 33 05                    s0 = 0
   973: 33 07                    a0 = 0
   975: 01                       fallthrough
      :                          @83
   976: e4 56 08                 a1 = maxu(s1, s0)
   979: c9 58 08                 a1 = a1 - s0
   982: e4 78 08                 a1 = maxu(a1, a0)
   985: c9 78 08                 a1 = a1 - a0
   988: 33 09 20                 a2 = 0x20
   991: ac 98 79                 jump @98 if a1 <u a2
      :                          @84
   994: 82 19 58                 a2 = u64 [sp + 0x58]
   997: c8 95 05                 s0 = s0 + a2
  1000: c8 57 07                 a0 = a0 + s0
  1003: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  1006: 95 77 20                 a0 = a0 + 0x20
  1009: 7b 17 58                 u64 [sp + 0x58] = a0
  1012: 51 05 5f                 jump @97 if s0 == 0
      :                          @85
  1015: 7d 78                    a1 = i8 [a0]
  1017: 33 06 01                 s1 = 0x1
  1020: 59 08 37                 jump @92 if a1 >=s 0
      :                          @86
  1023: 84 89 ff 00              a2 = a1 & 0xff
  1027: 33 06 02                 s1 = 0x2
  1030: 53 29 c0 00 2d           jump @92 if a2 <u 192
      :                          @87
  1035: 33 06 03                 s1 = 0x3
  1038: 53 29 e0 00 25           jump @92 if a2 <u 224
      :                          @88
  1043: 33 06 04                 s1 = 0x4
  1046: 53 29 f0 00 1d           jump @92 if a2 <u 240
      :                          @89
  1051: 33 06 05                 s1 = 0x5
  1054: 53 29 f8 00 15           jump @92 if a2 <u 248
      :                          @90
  1059: 33 06 06                 s1 = 0x6
  1062: 53 29 fc 00 0d           jump @92 if a2 <u 252
      :                          @91
  1067: 88 98 fe 00              a1 = a2 <u 0xfe
  1071: 9a 86 08                 s1 = 0x8 - a1
  1074: 01                       fallthrough
      :                          @92
  1075: ac 65 6e 06              jump @174 if s0 <u s1
      :                          @93
  1079: 64 68                    a1 = s1
  1081: 50 10 14 c2 15           ra = 20, jump @484
      :                          @94 [@dyn 10]
  1086: ae 56 1a                 jump @98 if s1 >=u s0
      :                          @95
  1089: 82 17 58                 a0 = u64 [sp + 0x58]
  1092: c8 67 07                 a0 = a0 + s1
  1095: 7c 78                    a1 = u8 [a0]
  1097: 51 08 2b                 jump @100 if a1 == 0
      :                          @96
  1100: 33 08                    a1 = 0
  1102: 33 05                    s0 = 0
  1104: 28 9f 00                 jump @113
      :                          @97
  1107: 33 06                    s1 = 0
  1109: 56 05 ec                 jump @95 if s0 >u 0
      :                          @98
  1112: 33 08                    a1 = 0
  1114: 33 05 00 00 01           s0 = 0x10000
  1119: 01                       fallthrough
      :                          @99
  1120: 64 57                    a0 = s0
  1122: 82 10 00 02              ra = u64 [sp + 0x200]
  1126: 82 15 f8 01              s0 = u64 [sp + 0x1f8]
  1130: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
  1134: 95 11 08 02              sp = sp + 0x208
  1138: 32 00                    ret
      :                          @100
  1140: e4 65 08                 a1 = maxu(s0, s1)
  1143: c9 68 08                 a1 = a1 - s1
  1146: 95 75 01                 s0 = a0 + 0x1
  1149: 33 07 01                 a0 = 0x1
  1152: e4 78 07                 a0 = maxu(a1, a0)
  1155: 33 09 02                 a2 = 0x2
  1158: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1161: ae 98 09                 jump @102 if a1 >=u a2
      :                          @101
  1164: 33 06                    s1 = 0
  1166: 33 07                    a0 = 0
  1168: 28 52                    jump @112
      :                          @102
  1170: 7d 57                    a0 = i8 [s0]
  1172: 33 06 01                 s1 = 0x1
  1175: 59 07 37                 jump @109 if a0 >=s 0
      :                          @103
  1178: 84 77 ff 00              a0 = a0 & 0xff
  1182: 33 06 02                 s1 = 0x2
  1185: 53 27 c0 00 2d           jump @109 if a0 <u 192
      :                          @104
  1190: 33 06 03                 s1 = 0x3
  1193: 53 27 e0 00 25           jump @109 if a0 <u 224
      :                          @105
  1198: 33 06 04                 s1 = 0x4
  1201: 53 27 f0 00 1d           jump @109 if a0 <u 240
      :                          @106
  1206: 33 06 05                 s1 = 0x5
  1209: 53 27 f8 00 15           jump @109 if a0 <u 248
      :                          @107
  1214: 33 06 06                 s1 = 0x6
  1217: 53 27 fc 00 0d           jump @109 if a0 <u 252
      :                          @108
  1222: 88 77 fe 00              a0 = a0 <u 0xfe
  1226: 9a 76 08                 s1 = 0x8 - a0
  1229: 01                       fallthrough
      :                          @109
  1230: 7b 1a 58                 u64 [sp + 0x58] = a3
  1233: ac 6a d1 05              jump @175 if a3 <u s1
      :                          @110
  1237: 64 57                    a0 = s0
  1239: 64 68                    a1 = s1
  1241: 50 10 16 22 15           ra = 22, jump @484
      :                          @111 [@dyn 11]
  1246: 82 1a 58                 a3 = u64 [sp + 0x58]
  1249: 01                       fallthrough
      :                          @112
  1250: c8 65 05                 s0 = s0 + s1
  1253: e4 6a 08                 a1 = maxu(a3, s1)
  1256: c9 68 08                 a1 = a1 - s1
  1259: e6 78 08                 a1 = minu(a1, a0)
  1262: 01                       fallthrough
      :                          @113
  1263: 48 11 68                 u32 [sp + 104] = 0
  1266: 49 11 60                 u64 [sp + 96] = 0
  1269: 48 11 78                 u32 [sp + 120] = 0
  1272: 49 11 70                 u64 [sp + 112] = 0
  1275: 46 11 7f                 u8 [sp + 127] = 0
  1278: 48 21 88 00              u32 [sp + 136] = 0
  1282: 49 21 80 00              u64 [sp + 128] = 0
  1286: 80 57                    a0 = u32 [s0]
  1288: c8 58 08                 a1 = a1 + s0
  1291: 7b 17 90 00              u64 [sp + 0x90] = a0
  1295: 80 88 fc                 a1 = u32 [a1 + 0xfffffffffffffffc]
  1298: 7b 18 98 00              u64 [sp + 0x98] = a1
  1302: 95 18 7f                 a1 = sp + 0x7f
  1305: 33 09 01                 a2 = 0x1
  1308: 95 1a 60                 a3 = sp + 0x60
  1311: 33 0c 0c                 a5 = 0xc
  1314: 33 0b                    a4 = 0
  1316: 0a 02                    ecalli 2 // 'read'
  1318: 82 17 98 00              a0 = u64 [sp + 0x98]
  1322: 95 18 7f                 a1 = sp + 0x7f
  1325: 33 09 01                 a2 = 0x1
  1328: 95 1a 70                 a3 = sp + 0x70
  1331: 33 0c 0c                 a5 = 0xc
  1334: 33 0b                    a4 = 0
  1336: 0a 02                    ecalli 2 // 'read'
  1338: 81 17 64                 a0 = i32 [sp + 0x64]
  1341: 33 05 ff ff fe           s0 = 0xfffffffffffeffff
  1346: 7b 15 48                 u64 [sp + 0x48] = s0
  1349: 81 18 74                 a1 = i32 [sp + 0x74]
  1352: 81 19 60                 a2 = i32 [sp + 0x60]
  1355: 7a 17 a0 00              u32 [sp + 0xa0] = a0
  1359: 81 17 68                 a0 = i32 [sp + 0x68]
  1362: 7b 17 58                 u64 [sp + 0x58] = a0
  1365: 7a 18 a4 00              u32 [sp + 0xa4] = a1
  1369: 81 17 78                 a0 = i32 [sp + 0x78]
  1372: 7b 17 50                 u64 [sp + 0x50] = a0
  1375: 7a 19 a8 00              u32 [sp + 0xa8] = a2
  1379: 95 19 a8 00              a2 = sp + 0xa8
  1383: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1387: 33 08 06                 a1 = 0x6
  1390: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1394: 95 17 90 00              a0 = sp + 0x90
  1398: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1402: 33 07 0a                 a0 = 0xa
  1405: 7b 17 38                 u64 [sp + 0x38] = a0
  1408: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1412: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1416: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1420: 95 17 a0 00              a0 = sp + 0xa0
  1424: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1428: 7b 18 40                 u64 [sp + 0x40] = a1
  1431: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1435: 33 07 30 00 01           a0 = 0x10030
  1440: 7b 17 58 01              u64 [sp + 0x158] = a0
  1444: 49 21 60 01 04           u64 [sp + 352] = 0x4
  1449: 49 21 78 01              u64 [sp + 376] = 0
  1453: 95 18 b0 00              a1 = sp + 0xb0
  1457: 7b 18 68 01              u64 [sp + 0x168] = a1
  1461: 49 21 70 01 04           u64 [sp + 368] = 0x4
  1466: 95 17 c0 01              a0 = sp + 0x1c0
  1470: 95 18 58 01              a1 = sp + 0x158
  1474: 50 10 18 ac 08           ra = 24, jump @248
      :                          @114 [@dyn 12]
  1479: 82 15 c8 01              s0 = u64 [sp + 0x1c8]
  1483: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
  1487: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  1491: 33 07 02                 a0 = 0x2
  1494: 33 08                    a1 = 0
  1496: 33 09                    a2 = 0
  1498: 64 5a                    a3 = s0
  1500: 33 00 1a                 ra = 0x1a
  1503: 0a 64                    ecalli 100 // 'log'
  1505: 01                       fallthrough
      :                          @115 [@dyn 13]
  1506: 82 17 48                 a0 = u64 [sp + 0x48]
  1509: c8 67 07                 a0 = a0 + s1
  1512: 53 37 00 00 ff 27        jump @121 if a0 <u 4294901760
      :                          @116
  1518: 33 07 40 00 03           a0 = 0x30040
  1523: 95 77 00 00 01           a0 = a0 + 0x10000
  1528: 01                       fallthrough
      :                          @117
  1529: 82 78                    a1 = u64 [a0]
  1531: c9 87 09                 a2 = a0 - a1
  1534: ab 59 11                 jump @121 if a2 != s0
      :                          @118
  1537: c9 68 09                 a2 = a1 - s1
  1540: 01                       fallthrough
      :                          @119
  1541: 82 7a                    a3 = u64 [a0]
  1543: ab 8a f2                 jump @117 if a3 != a1
      :                          @120
  1546: 7b 79                    u64 [a0] = a2
  1548: 33 0b                    a4 = 0
  1550: 01                       fallthrough
      :                          @121
  1551: 95 19 a8 00              a2 = sp + 0xa8
  1555: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1559: 82 18 40                 a1 = u64 [sp + 0x40]
  1562: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1566: 95 17 98 00              a0 = sp + 0x98
  1570: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1574: 82 17 38                 a0 = u64 [sp + 0x38]
  1577: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1581: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1585: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1589: 95 17 a4 00              a0 = sp + 0xa4
  1593: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1597: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1601: 33 07 80 00 01           a0 = 0x10080
  1606: 7b 17 58 01              u64 [sp + 0x158] = a0
  1610: 49 21 60 01 04           u64 [sp + 352] = 0x4
  1615: 49 21 78 01              u64 [sp + 376] = 0
  1619: 95 18 b0 00              a1 = sp + 0xb0
  1623: 7b 18 68 01              u64 [sp + 0x168] = a1
  1627: 49 21 70 01 04           u64 [sp + 368] = 0x4
  1632: 95 17 c0 01              a0 = sp + 0x1c0
  1636: 95 18 58 01              a1 = sp + 0x158
  1640: 50 10 1c 06 08           ra = 28, jump @248
      :                          @122 [@dyn 14]
  1645: 82 15 c8 01              s0 = u64 [sp + 0x1c8]
  1649: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
  1653: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  1657: 33 07 02                 a0 = 0x2
  1660: 33 08                    a1 = 0
  1662: 33 09                    a2 = 0
  1664: 64 5a                    a3 = s0
  1666: 33 00 1e                 ra = 0x1e
  1669: 0a 64                    ecalli 100 // 'log'
  1671: 01                       fallthrough
      :                          @123 [@dyn 15]
  1672: 82 17 48                 a0 = u64 [sp + 0x48]
  1675: c8 67 07                 a0 = a0 + s1
  1678: 53 37 00 00 ff 25        jump @129 if a0 <u 4294901760
      :                          @124
  1684: 33 07 40 00 03           a0 = 0x30040
  1689: 95 77 00 00 01           a0 = a0 + 0x10000
  1694: 01                       fallthrough
      :                          @125
  1695: 82 78                    a1 = u64 [a0]
  1697: c9 87 09                 a2 = a0 - a1
  1700: ab 59 0f                 jump @129 if a2 != s0
      :                          @126
  1703: c9 68 09                 a2 = a1 - s1
  1706: 01                       fallthrough
      :                          @127
  1707: 82 7a                    a3 = u64 [a0]
  1709: ab 8a f2                 jump @125 if a3 != a1
      :                          @128
  1712: 7b 79                    u64 [a0] = a2
  1714: 01                       fallthrough
      :                          @129
  1715: 81 17 a0 00              a0 = i32 [sp + 0xa0]
  1719: 81 18 a4 00              a1 = i32 [sp + 0xa4]
  1723: be 78 05                 i32 s0 = a1 + a0
  1726: 7a 15 ac 00              u32 [sp + 0xac] = s0
  1730: 82 17 58                 a0 = u64 [sp + 0x58]
  1733: 82 16 50                 s1 = u64 [sp + 0x50]
  1736: be 76 06                 i32 s1 = s1 + a0
  1739: 95 17 b0 00              a0 = sp + 0xb0
  1743: 33 09 80 00              a2 = 0x80
  1747: 33 08                    a1 = 0
  1749: 50 10 20 c0 0a           ra = 32, jump @315
      :                          @130 [@dyn 16]
  1754: 80 17 a8 00              a0 = u32 [sp + 0xa8]
  1758: 7b 17 30 01              u64 [sp + 0x130] = a0
  1762: 97 78 01                 a1 = a0 << 0x1
  1765: 95 88 01                 a1 = a1 + 0x1
  1768: 97 88 20                 a1 = a1 << 0x20
  1771: 98 88 20                 a1 = a1 >> 0x20
  1774: 7b 18 38 01              u64 [sp + 0x138] = a1
  1778: 49 21 40 01 64           u64 [sp + 320] = 0x64
  1783: 48 21 48 01              u32 [sp + 328] = 0
  1787: 51 07 3b 02              jump @154 if a0 == 0
      :                          @131
  1791: 7b 16                    u64 [sp] = s1
  1793: 7b 15 08                 u64 [sp + 0x8] = s0
  1796: 33 05                    s0 = 0
  1798: 33 0a                    a3 = 0
  1800: 14 08 ab aa aa aa 00 00 00 00 a1 = 0xaaaaaaab
  1810: ca 87 08                 a1 = a0 * a1
  1813: 98 88 21                 a1 = a1 >> 0x21
  1816: 97 89 01                 a2 = a1 << 0x1
  1819: bf 87 08                 i32 a1 = a0 - a1
  1822: bf 98 08                 i32 a1 = a1 - a2
  1825: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
  1828: 7b 19 20                 u64 [sp + 0x20] = a2
  1831: 86 88 02                 a1 = a1 | 0x2
  1834: 7b 18 18                 u64 [sp + 0x18] = a1
  1837: 33 08 06                 a1 = 0x6
  1840: 7b 18 38                 u64 [sp + 0x38] = a1
  1843: 33 08 0a                 a1 = 0xa
  1846: 7b 18 30                 u64 [sp + 0x30] = a1
  1849: 33 06 40 00 03           s1 = 0x30040
  1854: 95 66 00 00 01           s1 = s1 + 0x10000
  1859: 33 08 60 01 01           a1 = 0x10160
  1864: 7b 18 28                 u64 [sp + 0x28] = a1
  1867: 83 77                    i32 a0 = a0 + 0
  1869: 7b 17 10                 u64 [sp + 0x10] = a0
  1872: 28 13                    jump @134
      :                          @132
  1874: 82 15 58                 s0 = u64 [sp + 0x58]
  1877: 82 1a 50                 a3 = u64 [sp + 0x50]
  1880: 01                       fallthrough
      :                          @133
  1881: 83 aa 01                 i32 a3 = a3 + 0x1
  1884: 82 17 10                 a0 = u64 [sp + 0x10]
  1887: aa 7a cd 01              jump @153 if a3 == a0
      :                          @134
  1891: 7a 1a 4c 01              u32 [sp + 0x14c] = a3
  1895: 82 17 18                 a0 = u64 [sp + 0x18]
  1898: 7b 1a 50                 u64 [sp + 0x50] = a3
  1901: 52 17 02 e0 00           jump @143 if a0 != 2
      :                          @135
  1906: 82 17 90 00              a0 = u64 [sp + 0x90]
  1910: 82 18 30 01              a1 = u64 [sp + 0x130]
  1914: 82 19 40 01              a2 = u64 [sp + 0x140]
  1918: 95 1a b0 00              a3 = sp + 0xb0
  1922: 0a 0b                    ecalli 11 // 'transfer'
  1924: 7b 17 50 01              u64 [sp + 0x150] = a0
  1928: 83 55 01                 i32 s0 = s0 + 0x1
  1931: 7b 15 58                 u64 [sp + 0x58] = s0
  1934: 7a 15 48 01              u32 [sp + 0x148] = s0
  1938: 95 17 4c 01              a0 = sp + 0x14c
  1942: 7b 17 58 01              u64 [sp + 0x158] = a0
  1946: 82 17 38                 a0 = u64 [sp + 0x38]
  1949: 7b 17 60 01              u64 [sp + 0x160] = a0
  1953: 95 17 90 00              a0 = sp + 0x90
  1957: 7b 17 68 01              u64 [sp + 0x168] = a0
  1961: 82 17 30                 a0 = u64 [sp + 0x30]
  1964: 7b 17 70 01              u64 [sp + 0x170] = a0
  1968: 95 18 30 01              a1 = sp + 0x130
  1972: 7b 18 78 01              u64 [sp + 0x178] = a1
  1976: 7b 17 80 01              u64 [sp + 0x180] = a0
  1980: 95 18 40 01              a1 = sp + 0x140
  1984: 7b 18 88 01              u64 [sp + 0x188] = a1
  1988: 7b 17 90 01              u64 [sp + 0x190] = a0
  1992: 95 18 50 01              a1 = sp + 0x150
  1996: 7b 18 98 01              u64 [sp + 0x198] = a1
  2000: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2004: 82 17 28                 a0 = u64 [sp + 0x28]
  2007: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2011: 49 21 c8 01 05           u64 [sp + 456] = 0x5
  2016: 49 21 e0 01              u64 [sp + 480] = 0
  2020: 95 18 58 01              a1 = sp + 0x158
  2024: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2028: 49 21 d8 01 05           u64 [sp + 472] = 0x5
  2033: 95 17 a8 01              a0 = sp + 0x1a8
  2037: 95 18 c0 01              a1 = sp + 0x1c0
  2041: 50 10 22 75 06           ra = 34, jump @248
      :                          @136 [@dyn 17]
  2046: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2050: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2054: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  2058: 7b 17 40                 u64 [sp + 0x40] = a0
  2061: 33 07 02                 a0 = 0x2
  2064: 33 08                    a1 = 0
  2066: 33 09                    a2 = 0
  2068: 64 5a                    a3 = s0
  2070: 33 00 24                 ra = 0x24
  2073: 0a 64                    ecalli 100 // 'log'
  2075: 01                       fallthrough
      :                          @137 [@dyn 18]
  2076: 82 1b 40                 a4 = u64 [sp + 0x40]
  2079: 82 17 48                 a0 = u64 [sp + 0x48]
  2082: c8 b7 07                 a0 = a0 + a4
  2085: 53 37 00 00 ff 21        jump @142 if a0 <u 4294901760
      :                          @138
  2091: 82 67                    a0 = u64 [s1]
  2093: c9 76 08                 a1 = s1 - a0
  2096: ab 58 16                 jump @142 if a1 != s0
      :                          @139
  2099: c9 b7 08                 a1 = a0 - a4
  2102: 01                       fallthrough
      :                          @140
  2103: 82 69                    a2 = u64 [s1]
  2105: ab 79 f2                 jump @138 if a2 != a0
      :                          @141
  2108: 7b 68                    u64 [s1] = a1
  2110: 82 15 58                 s0 = u64 [sp + 0x58]
  2113: 82 1a 50                 a3 = u64 [sp + 0x50]
  2116: 28 09                    jump @143
      :                          @142
  2118: 82 15 58                 s0 = u64 [sp + 0x58]
  2121: 82 1a 50                 a3 = u64 [sp + 0x50]
  2124: 01                       fallthrough
      :                          @143
  2125: 82 17 20                 a0 = u64 [sp + 0x20]
  2128: 55 17 02 09 ff           jump @133 if a0 >=u 2
      :                          @144
  2133: 82 17 98 00              a0 = u64 [sp + 0x98]
  2137: 82 18 38 01              a1 = u64 [sp + 0x138]
  2141: 82 19 40 01              a2 = u64 [sp + 0x140]
  2145: 95 1a b0 00              a3 = sp + 0xb0
  2149: 0a 0b                    ecalli 11 // 'transfer'
  2151: 7b 17 50 01              u64 [sp + 0x150] = a0
  2155: 83 55 01                 i32 s0 = s0 + 0x1
  2158: 7b 15 58                 u64 [sp + 0x58] = s0
  2161: 7a 15 48 01              u32 [sp + 0x148] = s0
  2165: 95 17 4c 01              a0 = sp + 0x14c
  2169: 7b 17 58 01              u64 [sp + 0x158] = a0
  2173: 82 17 38                 a0 = u64 [sp + 0x38]
  2176: 7b 17 60 01              u64 [sp + 0x160] = a0
  2180: 95 17 98 00              a0 = sp + 0x98
  2184: 7b 17 68 01              u64 [sp + 0x168] = a0
  2188: 82 17 30                 a0 = u64 [sp + 0x30]
  2191: 7b 17 70 01              u64 [sp + 0x170] = a0
  2195: 95 18 38 01              a1 = sp + 0x138
  2199: 7b 18 78 01              u64 [sp + 0x178] = a1
  2203: 7b 17 80 01              u64 [sp + 0x180] = a0
  2207: 95 18 40 01              a1 = sp + 0x140
  2211: 7b 18 88 01              u64 [sp + 0x188] = a1
  2215: 7b 17 90 01              u64 [sp + 0x190] = a0
  2219: 95 18 50 01              a1 = sp + 0x150
  2223: 7b 18 98 01              u64 [sp + 0x198] = a1
  2227: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2231: 82 17 28                 a0 = u64 [sp + 0x28]
  2234: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2238: 49 21 c8 01 05           u64 [sp + 456] = 0x5
  2243: 49 21 e0 01              u64 [sp + 480] = 0
  2247: 95 18 58 01              a1 = sp + 0x158
  2251: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2255: 49 21 d8 01 05           u64 [sp + 472] = 0x5
  2260: 95 17 a8 01              a0 = sp + 0x1a8
  2264: 95 18 c0 01              a1 = sp + 0x1c0
  2268: 50 10 26 92 05           ra = 38, jump @248
      :                          @145 [@dyn 19]
  2273: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2277: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2281: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  2285: 7b 17 40                 u64 [sp + 0x40] = a0
  2288: 33 07 02                 a0 = 0x2
  2291: 33 08                    a1 = 0
  2293: 33 09                    a2 = 0
  2295: 64 5a                    a3 = s0
  2297: 33 00 28                 ra = 0x28
  2300: 0a 64                    ecalli 100 // 'log'
  2302: 01                       fallthrough
      :                          @146 [@dyn 20]
  2303: 82 1b 40                 a4 = u64 [sp + 0x40]
  2306: 82 17 48                 a0 = u64 [sp + 0x48]
  2309: c8 b7 07                 a0 = a0 + a4
  2312: 53 37 00 00 ff 4a fe     jump @132 if a0 <u 4294901760
      :                          @147
  2319: 82 67                    a0 = u64 [s1]
  2321: c9 76 08                 a1 = s1 - a0
  2324: ab 58 3e fe              jump @132 if a1 != s0
      :                          @148
  2328: c9 b7 08                 a1 = a0 - a4
  2331: 01                       fallthrough
      :                          @149
  2332: 82 69                    a2 = u64 [s1]
  2334: ab 79 f1                 jump @147 if a2 != a0
      :                          @150
  2337: 7b 68                    u64 [s1] = a1
  2339: 33 0a                    a3 = 0
  2341: 01                       fallthrough
      :                          @151
  2342: ab 79 e9                 jump @147 if a2 != a0
      :                          @152
  2345: 28 29 fe                 jump @132
      :                          @153
  2348: 81 17 a8 00              a0 = i32 [sp + 0xa8]
  2352: 82 15 08                 s0 = u64 [sp + 0x8]
  2355: 82 16                    s1 = u64 [sp]
  2357: 01                       fallthrough
      :                          @154
  2358: 7a 17 80 00              u32 [sp + 0x80] = a0
  2362: 7a 15 84 00              u32 [sp + 0x84] = s0
  2366: 7a 16 88 00              u32 [sp + 0x88] = s1
  2370: 95 17 a8 00              a0 = sp + 0xa8
  2374: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2378: 33 07 06                 a0 = 0x6
  2381: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2385: 95 18 ac 00              a1 = sp + 0xac
  2389: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2393: 7b 17 58                 u64 [sp + 0x58] = a0
  2396: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  2400: 33 07 c0 00 01           a0 = 0x100c0
  2405: 7b 17 58 01              u64 [sp + 0x158] = a0
  2409: 49 21 60 01 02           u64 [sp + 352] = 0x2
  2414: 49 21 78 01              u64 [sp + 376] = 0
  2418: 95 18 c0 01              a1 = sp + 0x1c0
  2422: 7b 18 68 01              u64 [sp + 0x168] = a1
  2426: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2431: 95 17 a8 01              a0 = sp + 0x1a8
  2435: 95 18 58 01              a1 = sp + 0x158
  2439: 50 10 2a e7 04           ra = 42, jump @248
      :                          @155 [@dyn 21]
  2444: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2448: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2452: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  2456: 33 07 02                 a0 = 0x2
  2459: 33 08                    a1 = 0
  2461: 33 09                    a2 = 0
  2463: 64 5a                    a3 = s0
  2465: 33 00 2c                 ra = 0x2c
  2468: 0a 64                    ecalli 100 // 'log'
  2470: 01                       fallthrough
      :                          @156 [@dyn 22]
  2471: 82 17 48                 a0 = u64 [sp + 0x48]
  2474: c8 67 07                 a0 = a0 + s1
  2477: 53 37 00 00 ff 25        jump @162 if a0 <u 4294901760
      :                          @157
  2483: 33 07 40 00 03           a0 = 0x30040
  2488: 95 77 00 00 01           a0 = a0 + 0x10000
  2493: 01                       fallthrough
      :                          @158
  2494: 82 78                    a1 = u64 [a0]
  2496: c9 87 09                 a2 = a0 - a1
  2499: ab 59 0f                 jump @162 if a2 != s0
      :                          @159
  2502: c9 68 09                 a2 = a1 - s1
  2505: 01                       fallthrough
      :                          @160
  2506: 82 7a                    a3 = u64 [a0]
  2508: ab 8a f2                 jump @158 if a3 != a1
      :                          @161
  2511: 7b 79                    u64 [a0] = a2
  2513: 01                       fallthrough
      :                          @162
  2514: 95 17 7f                 a0 = sp + 0x7f
  2517: 33 08 01                 a1 = 0x1
  2520: 95 19 80 00              a2 = sp + 0x80
  2524: 33 0a 0c                 a3 = 0xc
  2527: 0a 03                    ecalli 3 // 'write'
  2529: 95 17 a8 00              a0 = sp + 0xa8
  2533: 7b 17 58 01              u64 [sp + 0x158] = a0
  2537: 82 17 58                 a0 = u64 [sp + 0x58]
  2540: 7b 17 60 01              u64 [sp + 0x160] = a0
  2544: 95 18 ac 00              a1 = sp + 0xac
  2548: 7b 18 68 01              u64 [sp + 0x168] = a1
  2552: 7b 17 70 01              u64 [sp + 0x170] = a0
  2556: 95 17 48 01              a0 = sp + 0x148
  2560: 7b 17 78 01              u64 [sp + 0x178] = a0
  2564: 33 07 02                 a0 = 0x2
  2567: 7b 17 80 01              u64 [sp + 0x180] = a0
  2571: 33 07 00 01 01           a0 = 0x10100
  2576: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2580: 49 21 c8 01 03           u64 [sp + 456] = 0x3
  2585: 49 21 e0 01              u64 [sp + 480] = 0
  2589: 95 18 58 01              a1 = sp + 0x158
  2593: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2597: 49 21 d8 01 03           u64 [sp + 472] = 0x3
  2602: 95 17 a8 01              a0 = sp + 0x1a8
  2606: 95 18 c0 01              a1 = sp + 0x1c0
  2610: 50 10 2e 3c 04           ra = 46, jump @248
      :                          @163 [@dyn 23]
  2615: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2619: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2623: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  2627: 33 07 02                 a0 = 0x2
  2630: 33 08                    a1 = 0
  2632: 33 09                    a2 = 0
  2634: 64 5a                    a3 = s0
  2636: 33 00 30                 ra = 0x30
  2639: 0a 64                    ecalli 100 // 'log'
  2641: 01                       fallthrough
      :                          @164 [@dyn 24]
  2642: 82 17 48                 a0 = u64 [sp + 0x48]
  2645: c8 67 07                 a0 = a0 + s1
  2648: 53 37 00 00 ff 27        jump @170 if a0 <u 4294901760
      :                          @165
  2654: 33 07 40 00 03           a0 = 0x30040
  2659: 95 77 00 00 01           a0 = a0 + 0x10000
  2664: 01                       fallthrough
      :                          @166
  2665: 82 78                    a1 = u64 [a0]
  2667: c9 87 09                 a2 = a0 - a1
  2670: ab 59 11                 jump @170 if a2 != s0
      :                          @167
  2673: c9 68 09                 a2 = a1 - s1
  2676: 01                       fallthrough
      :                          @168
  2677: 82 7a                    a3 = u64 [a0]
  2679: ab 8a f2                 jump @166 if a3 != a1
      :                          @169
  2682: 7b 79                    u64 [a0] = a2
  2684: 33 0b                    a4 = 0
  2686: 01                       fallthrough
      :                          @170
  2687: 33 05 11 00 03           s0 = 0x30011
  2692: 95 18 80 00              a1 = sp + 0x80
  2696: 33 09 0c                 a2 = 0xc
  2699: 33 07 11 00 03           a0 = 0x30011
  2704: 50 10 32 53 06           ra = 50, jump @297
      :                          @171 [@dyn 25]
  2709: 64 57                    a0 = s0
  2711: 0a 10                    ecalli 16 // 'oyield'
  2713: 33 08 20                 a1 = 0x20
  2716: 28 c4 f9                 jump @99
      :                          @172
  2719: 00                       trap
      :                          @173
  2720: 00                       trap
      :                          @174
  2721: 00                       trap
      :                          @175
  2722: 00                       trap
      :                          @176 [export #2: 'on_transfer']
  2723: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
  2727: 7b 10 18 01              u64 [sp + 0x118] = ra
  2731: 7b 15 10 01              u64 [sp + 0x110] = s0
  2735: 7b 16 08 01              u64 [sp + 0x108] = s1
  2739: 49 11 08 ff ff fe        u64 [sp + 8] = 0xfffffffffffeffff
  2745: 0a                       ecalli 0 // 'gas'
  2746: 7b 17 10                 u64 [sp + 0x10] = a0
  2749: 7b 17 18                 u64 [sp + 0x18] = a0
  2752: 46 11 27 04              u8 [sp + 39] = 0x4
  2756: 7b 17 28                 u64 [sp + 0x28] = a0
  2759: 95 17 27                 a0 = sp + 0x27
  2762: 33 08 01                 a1 = 0x1
  2765: 95 19 28                 a2 = sp + 0x28
  2768: 33 0a 08                 a3 = 0x8
  2771: 0a 03                    ecalli 3 // 'write'
  2773: 95 17 27                 a0 = sp + 0x27
  2776: 7b 17 78                 u64 [sp + 0x78] = a0
  2779: 33 07 84 00              a0 = 0x84
  2783: 7b 17 80 00              u64 [sp + 0x80] = a0
  2787: 95 17 18                 a0 = sp + 0x18
  2790: 7b 17 88 00              u64 [sp + 0x88] = a0
  2794: 49 21 98 00 02           u64 [sp + 152] = 0x2
  2799: 49 21 a8 00 02           u64 [sp + 168] = 0x2
  2804: 49 21 b8 00              u64 [sp + 184] = 0
  2808: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2818: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2822: 46 21 c8 00 03           u8 [sp + 200] = 0x3
  2827: 49 21 d0 00 02           u64 [sp + 208] = 0x2
  2832: 49 21 e0 00 02           u64 [sp + 224] = 0x2
  2837: 49 21 f0 00 01           u64 [sp + 240] = 0x1
  2842: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2846: 33 07 0a                 a0 = 0xa
  2849: 7b 17                    u64 [sp] = a0
  2851: 7b 17 90 00              u64 [sp + 0x90] = a0
  2855: 46 21 00 01 03           u8 [sp + 256] = 0x3
  2860: 33 07 58 03 01           a0 = 0x10358
  2865: 7b 17 48                 u64 [sp + 0x48] = a0
  2868: 49 11 50 02              u64 [sp + 80] = 0x2
  2872: 95 17 98 00              a0 = sp + 0x98
  2876: 7b 17 68                 u64 [sp + 0x68] = a0
  2879: 49 11 70 02              u64 [sp + 112] = 0x2
  2883: 95 17 78                 a0 = sp + 0x78
  2886: 7b 17 58                 u64 [sp + 0x58] = a0
  2889: 49 11 60 02              u64 [sp + 96] = 0x2
  2893: 95 17 30                 a0 = sp + 0x30
  2896: 95 18 48                 a1 = sp + 0x48
  2899: 50 10 34 1b 03           ra = 52, jump @248
      :                          @177 [@dyn 26]
  2904: 82 15 38                 s0 = u64 [sp + 0x38]
  2907: 82 1b 40                 a4 = u64 [sp + 0x40]
  2910: 82 16 30                 s1 = u64 [sp + 0x30]
  2913: 33 07 02                 a0 = 0x2
  2916: 33 08                    a1 = 0
  2918: 33 09                    a2 = 0
  2920: 64 5a                    a3 = s0
  2922: 33 00 36                 ra = 0x36
  2925: 0a 64                    ecalli 100 // 'log'
  2927: 01                       fallthrough
      :                          @178 [@dyn 27]
  2928: 82 17 08                 a0 = u64 [sp + 0x8]
  2931: c8 67 07                 a0 = a0 + s1
  2934: 53 37 00 00 ff 27        jump @184 if a0 <u 4294901760
      :                          @179
  2940: 33 07 40 00 03           a0 = 0x30040
  2945: 95 77 00 00 01           a0 = a0 + 0x10000
  2950: 01                       fallthrough
      :                          @180
  2951: 82 78                    a1 = u64 [a0]
  2953: c9 87 09                 a2 = a0 - a1
  2956: ab 59 11                 jump @184 if a2 != s0
      :                          @181
  2959: c9 68 09                 a2 = a1 - s1
  2962: 01                       fallthrough
      :                          @182
  2963: 82 7a                    a3 = u64 [a0]
  2965: ab 8a f2                 jump @180 if a3 != a1
      :                          @183
  2968: 7b 79                    u64 [a0] = a2
  2970: 33 0b                    a4 = 0
  2972: 01                       fallthrough
      :                          @184
  2973: 95 17 10                 a0 = sp + 0x10
  2976: 7b 17 78                 u64 [sp + 0x78] = a0
  2979: 82 17                    a0 = u64 [sp]
  2981: 7b 17 80 00              u64 [sp + 0x80] = a0
  2985: 33 07 e8 01 01           a0 = 0x101e8
  2990: 7b 17 98 00              u64 [sp + 0x98] = a0
  2994: 49 21 a0 00 02           u64 [sp + 160] = 0x2
  2999: 49 21 b8 00              u64 [sp + 184] = 0
  3003: 95 17 78                 a0 = sp + 0x78
  3006: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  3010: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  3015: 95 17 48                 a0 = sp + 0x48
  3018: 95 18 98 00              a1 = sp + 0x98
  3022: 50 10 38 a0 02           ra = 56, jump @248
      :                          @185 [@dyn 28]
  3027: 82 15 50                 s0 = u64 [sp + 0x50]
  3030: 82 1b 58                 a4 = u64 [sp + 0x58]
  3033: 82 16 48                 s1 = u64 [sp + 0x48]
  3036: 33 07 02                 a0 = 0x2
  3039: 33 08                    a1 = 0
  3041: 33 09                    a2 = 0
  3043: 64 5a                    a3 = s0
  3045: 33 00 3a                 ra = 0x3a
  3048: 0a 64                    ecalli 100 // 'log'
  3050: 01                       fallthrough
      :                          @186 [@dyn 29]
  3051: 82 17 08                 a0 = u64 [sp + 0x8]
  3054: c8 67 07                 a0 = a0 + s1
  3057: 53 37 00 00 ff 27        jump @192 if a0 <u 4294901760
      :                          @187
  3063: 33 07 40 00 03           a0 = 0x30040
  3068: 95 77 00 00 01           a0 = a0 + 0x10000
  3073: 01                       fallthrough
      :                          @188
  3074: 82 78                    a1 = u64 [a0]
  3076: c9 87 09                 a2 = a0 - a1
  3079: ab 59 11                 jump @192 if a2 != s0
      :                          @189
  3082: c9 68 09                 a2 = a1 - s1
  3085: 01                       fallthrough
      :                          @190
  3086: 82 7a                    a3 = u64 [a0]
  3088: ab 8a f2                 jump @188 if a3 != a1
      :                          @191
  3091: 7b 79                    u64 [a0] = a2
  3093: 33 0b                    a4 = 0
  3095: 01                       fallthrough
      :                          @192
  3096: 33 07 00 00 01           a0 = 0x10000
  3101: 33 08                    a1 = 0
  3103: 82 10 18 01              ra = u64 [sp + 0x118]
  3107: 82 15 10 01              s0 = u64 [sp + 0x110]
  3111: 82 16 08 01              s1 = u64 [sp + 0x108]
  3115: 95 11 20 01              sp = sp + 0x120
  3119: 32 00                    ret
      :                          @193
  3121: 00                       trap
      :                          @194
  3122: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3125: 7b 10 40                 u64 [sp + 0x40] = ra
  3128: 7b 15 38                 u64 [sp + 0x38] = s0
  3131: 7b 16 30                 u64 [sp + 0x30] = s1
  3134: c8 89 09                 a2 = a2 + a1
  3137: ac 89 52                 jump @202 if a2 <u a1
      :                          @195
  3140: 64 75                    s0 = a0
  3142: 82 77                    a0 = u64 [a0]
  3144: 97 78 01                 a1 = a0 << 0x1
  3147: 33 0a 08                 a3 = 0x8
  3150: e4 a9 09                 a2 = maxu(a2, a3)
  3153: e4 98 06                 s1 = maxu(a1, a2)
  3156: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3159: 98 88 3f                 a1 = a1 >> 0x3f
  3162: 51 07 12                 jump @197 if a0 == 0
      :                          @196
  3165: 82 59 08                 a2 = u64 [s0 + 0x8]
  3168: 7b 19 18                 u64 [sp + 0x18] = a2
  3171: 49 11 20 01              u64 [sp + 32] = 0x1
  3175: 7b 17 28                 u64 [sp + 0x28] = a0
  3178: 28 06                    jump @198
      :                          @197
  3180: 49 11 20                 u64 [sp + 32] = 0
  3183: 01                       fallthrough
      :                          @198
  3184: 64 17                    a0 = sp
  3186: 95 1a 18                 a3 = sp + 0x18
  3189: 64 69                    a2 = s1
  3191: 50 10 3c 31              ra = 60, jump @205
      :                          @199 [@dyn 30]
  3195: 82 18                    a1 = u64 [sp]
  3197: 82 17 08                 a0 = u64 [sp + 0x8]
  3200: 51 08 14                 jump @203 if a1 == 0
      :                          @200
  3203: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3213: aa 87 0d                 jump @204 if a0 == a1
      :                          @201
  3216: 52 07 a1                 jump @193 if a0 != 0
      :                          @202
  3219: 00                       trap
      :                          @203
  3220: 7b 57 08                 u64 [s0 + 0x8] = a0
  3223: 7b 56                    u64 [s0] = s1
  3225: 01                       fallthrough
      :                          @204
  3226: 82 10 40                 ra = u64 [sp + 0x40]
  3229: 82 15 38                 s0 = u64 [sp + 0x38]
  3232: 82 16 30                 s1 = u64 [sp + 0x30]
  3235: 95 11 48                 sp = sp + 0x48
  3238: 32 00                    ret
      :                          @205
  3240: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3243: 7b 10 30                 u64 [sp + 0x30] = ra
  3246: 7b 15 28                 u64 [sp + 0x28] = s0
  3249: 7b 16 20                 u64 [sp + 0x20] = s1
  3252: 64 95                    s0 = a2
  3254: 64 72                    t0 = a0
  3256: 51 08 79                 jump @215 if a1 == 0
      :                          @206
  3259: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3262: 51 07 7c                 jump @216 if a0 == 0
      :                          @207
  3265: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3268: 51 09 aa 00              jump @223 if a2 == 0
      :                          @208
  3272: 82 a8                    a1 = u64 [a3]
  3274: 33 06 40 00 03           s1 = 0x30040
  3279: 33 03 00 00 01           t1 = 0x10000
  3284: c8 36 06                 s1 = s1 + t1
  3287: 01                       fallthrough
      :                          @209
  3288: 82 6a                    a3 = u64 [s1]
  3290: c8 5a 07                 a0 = a3 + s0
  3293: ac a7 cf 00              jump @229 if a0 <u a3
      :                          @210
  3297: 95 7b 01                 a4 = a0 + 0x1
  3300: 88 bc 01                 a5 = a4 <u 0x1
  3303: d8 b3 0b                 a4 = t1 <u a4
  3306: d4 cb 0b                 a4 = a4 | a5
  3309: 52 0b bf 00              jump @229 if a4 != 0
      :                          @211
  3313: 82 6b                    a4 = u64 [s1]
  3315: ab ab e5                 jump @209 if a4 != a3
      :                          @212
  3318: 7b 67                    u64 [s1] = a0
  3320: 33 0c                    a5 = 0
  3322: 7b 12 18                 u64 [sp + 0x18] = t0
  3325: 33 0a 40 00 03           a3 = 0x30040
  3330: 33 0b 00 00 01           a4 = 0x10000
  3335: 7b 1a                    u64 [sp] = a3
  3337: c8 ba 0a                 a3 = a3 + a4
  3340: c9 7a 07                 a0 = a3 - a0
  3343: 7b 17 10                 u64 [sp + 0x10] = a0
  3346: 7b 18 08                 u64 [sp + 0x8] = a1
  3349: 64 96                    s1 = a2
  3351: 50 10 3e cc 03           ra = 62, jump @297
      :                          @213 [@dyn 31]
  3356: 54 36 00 00 01 98 00     jump @230 if s1 <=u 65536
      :                          @214
  3363: 82 12 18                 t0 = u64 [sp + 0x18]
  3366: 82 18 10                 a1 = u64 [sp + 0x10]
  3369: 33 07                    a0 = 0
  3371: 7b 28 08                 u64 [t0 + 0x8] = a1
  3374: 28 b5 00                 jump @236
      :                          @215
  3377: 49 12 08                 u64 [t0 + 8] = 0
  3380: 33 07 01                 a0 = 0x1
  3383: 28 ac 00                 jump @236
      :                          @216
  3386: 33 09 40 00 03           a2 = 0x30040
  3391: 33 07 00 00 01           a0 = 0x10000
  3396: c8 79 09                 a2 = a2 + a0
  3399: 01                       fallthrough
      :                          @217
  3400: 82 9a                    a3 = u64 [a2]
  3402: c8 5a 08                 a1 = a3 + s0
  3405: ac a8 5f                 jump @229 if a1 <u a3
      :                          @218
  3408: 95 8b 01                 a4 = a1 + 0x1
  3411: 88 bc 01                 a5 = a4 <u 0x1
  3414: d8 b7 0b                 a4 = a0 <u a4
  3417: d4 cb 0b                 a4 = a4 | a5
  3420: 52 0b 50                 jump @229 if a4 != 0
      :                          @219
  3423: 82 9b                    a4 = u64 [a2]
  3425: ab ab e7                 jump @217 if a4 != a3
      :                          @220
  3428: 7b 98                    u64 [a2] = a1
  3430: 33 0c                    a5 = 0
  3432: 01                       fallthrough
      :                          @221
  3433: ab ab df                 jump @217 if a4 != a3
      :                          @222
  3436: 28 31                    jump @228
      :                          @223
  3438: 33 09 40 00 03           a2 = 0x30040
  3443: 33 07 00 00 01           a0 = 0x10000
  3448: c8 79 09                 a2 = a2 + a0
  3451: 01                       fallthrough
      :                          @224
  3452: 82 9a                    a3 = u64 [a2]
  3454: c8 5a 08                 a1 = a3 + s0
  3457: ac a8 2b                 jump @229 if a1 <u a3
      :                          @225
  3460: 95 8b 01                 a4 = a1 + 0x1
  3463: 88 bc 01                 a5 = a4 <u 0x1
  3466: d8 b7 0b                 a4 = a0 <u a4
  3469: d4 cb 0b                 a4 = a4 | a5
  3472: 52 0b 1c                 jump @229 if a4 != 0
      :                          @226
  3475: 82 9b                    a4 = u64 [a2]
  3477: ab ab e7                 jump @224 if a4 != a3
      :                          @227
  3480: 7b 98                    u64 [a2] = a1
  3482: 33 0c                    a5 = 0
  3484: 01                       fallthrough
      :                          @228
  3485: 33 07 40 00 04           a0 = 0x40040
  3490: c9 87 08                 a1 = a0 - a1
  3493: 33 07                    a0 = 0
  3495: 7b 28 08                 u64 [t0 + 0x8] = a1
  3498: 28 39                    jump @236
      :                          @229
  3500: 33 07 01                 a0 = 0x1
  3503: 7b 27 08                 u64 [t0 + 0x8] = a0
  3506: 28 31                    jump @236
      :                          @230
  3508: 64 6c                    a5 = s1
  3510: 82 17                    a0 = u64 [sp]
  3512: 95 77 00 00 01           a0 = a0 + 0x10000
  3517: 82 12 18                 t0 = u64 [sp + 0x18]
  3520: 82 16 08                 s1 = u64 [sp + 0x8]
  3523: 01                       fallthrough
      :                          @231
  3524: 82 78                    a1 = u64 [a0]
  3526: c9 87 09                 a2 = a0 - a1
  3529: ab 69 11                 jump @235 if a2 != s1
      :                          @232
  3532: c9 c8 09                 a2 = a1 - a5
  3535: 01                       fallthrough
      :                          @233
  3536: 82 7a                    a3 = u64 [a0]
  3538: ab 8a f2                 jump @231 if a3 != a1
      :                          @234
  3541: 7b 79                    u64 [a0] = a2
  3543: 33 0b                    a4 = 0
  3545: 01                       fallthrough
      :                          @235
  3546: 82 18 10                 a1 = u64 [sp + 0x10]
  3549: 33 07                    a0 = 0
  3551: 7b 28 08                 u64 [t0 + 0x8] = a1
  3554: 01                       fallthrough
      :                          @236
  3555: 7b 25 10                 u64 [t0 + 0x10] = s0
  3558: 7b 27                    u64 [t0] = a0
  3560: 82 10 30                 ra = u64 [sp + 0x30]
  3563: 82 15 28                 s0 = u64 [sp + 0x28]
  3566: 82 16 20                 s1 = u64 [sp + 0x20]
  3569: 95 11 38                 sp = sp + 0x38
  3572: 32 00                    ret
      :                          @237
  3574: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3577: 7b 10 40                 u64 [sp + 0x40] = ra
  3580: 7b 15 38                 u64 [sp + 0x38] = s0
  3583: 7b 16 30                 u64 [sp + 0x30] = s1
  3586: 95 88 01                 a1 = a1 + 0x1
  3589: 51 08 54                 jump @245 if a1 == 0
      :                          @238
  3592: 64 75                    s0 = a0
  3594: 82 77                    a0 = u64 [a0]
  3596: 97 79 01                 a2 = a0 << 0x1
  3599: 33 0a 08                 a3 = 0x8
  3602: e4 a8 08                 a1 = maxu(a1, a3)
  3605: e4 89 06                 s1 = maxu(a2, a1)
  3608: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3611: 98 88 3f                 a1 = a1 >> 0x3f
  3614: 51 07 12                 jump @240 if a0 == 0
      :                          @239
  3617: 82 59 08                 a2 = u64 [s0 + 0x8]
  3620: 7b 19 18                 u64 [sp + 0x18] = a2
  3623: 49 11 20 01              u64 [sp + 32] = 0x1
  3627: 7b 17 28                 u64 [sp + 0x28] = a0
  3630: 28 06                    jump @241
      :                          @240
  3632: 49 11 20                 u64 [sp + 32] = 0
  3635: 01                       fallthrough
      :                          @241
  3636: 64 17                    a0 = sp
  3638: 95 1a 18                 a3 = sp + 0x18
  3641: 64 69                    a2 = s1
  3643: 50 10 40 6d fe           ra = 64, jump @205
      :                          @242 [@dyn 32]
  3648: 82 18                    a1 = u64 [sp]
  3650: 82 17 08                 a0 = u64 [sp + 0x8]
  3653: 51 08 15                 jump @246 if a1 == 0
      :                          @243
  3656: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3666: aa 87 0e                 jump @247 if a0 == a1
      :                          @244
  3669: 52 07 dc fd              jump @193 if a0 != 0
      :                          @245
  3673: 00                       trap
      :                          @246
  3674: 7b 57 08                 u64 [s0 + 0x8] = a0
  3677: 7b 56                    u64 [s0] = s1
  3679: 01                       fallthrough
      :                          @247
  3680: 82 10 40                 ra = u64 [sp + 0x40]
  3683: 82 15 38                 s0 = u64 [sp + 0x38]
  3686: 82 16 30                 s1 = u64 [sp + 0x30]
  3689: 95 11 48                 sp = sp + 0x48
  3692: 32 00                    ret
      :                          @248
  3694: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3697: 7b 10 30                 u64 [sp + 0x30] = ra
  3700: 7b 15 28                 u64 [sp + 0x28] = s0
  3703: 7b 16 20                 u64 [sp + 0x20] = s1
  3706: 64 89                    a2 = a1
  3708: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3711: 64 75                    s0 = a0
  3713: 51 0a 35                 jump @253 if a3 == 0
      :                          @249
  3716: 82 98                    a1 = u64 [a2]
  3718: 33 07                    a0 = 0
  3720: 95 8b 08                 a4 = a1 + 0x8
  3723: 01                       fallthrough
      :                          @250
  3724: 82 bc                    a5 = u64 [a4]
  3726: c8 c7 07                 a0 = a0 + a5
  3729: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3732: 95 bb 10                 a4 = a4 + 0x10
  3735: 52 0a f5                 jump @250 if a3 != 0
      :                          @251
  3738: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3741: 51 0a 24                 jump @255 if a3 == 0
      :                          @252
  3744: 82 88 08                 a1 = u64 [a1 + 0x8]
  3747: 8e 88                    a1 = a1 >u 0
  3749: 88 7a 10                 a3 = a0 <u 0x10
  3752: 85 aa 01                 a3 = a3 ^ 0x1
  3755: d4 a8 08                 a1 = a1 | a3
  3758: 89 7a                    a3 = a0 <s 0
  3760: e0 a8 08                 a1 = a1 & ~a3
  3763: 52 08 0a                 jump @254 if a1 != 0
      :                          @253
  3766: 33 07                    a0 = 0
  3768: 33 08 01                 a1 = 0x1
  3771: 28 4c                    jump @263
      :                          @254
  3773: 97 77 01                 a0 = a0 << 0x1
  3776: 01                       fallthrough
      :                          @255
  3777: 51 07 42                 jump @262 if a0 == 0
      :                          @256
  3780: 57 07 79                 jump @267 if a0 <s 0
      :                          @257
  3783: 64 52                    t0 = s0
  3785: 33 0b 40 00 03           a4 = 0x30040
  3790: 33 08 00 00 01           a1 = 0x10000
  3795: c8 8b 0b                 a4 = a4 + a1
  3798: 01                       fallthrough
      :                          @258
  3799: 82 bc                    a5 = u64 [a4]
  3801: c8 7c 0a                 a3 = a5 + a0
  3804: ac ca 55 fd              jump @193 if a3 <u a5
      :                          @259
  3808: 95 a5 01                 s0 = a3 + 0x1
  3811: 88 56 01                 s1 = s0 <u 0x1
  3814: d8 58 05                 s0 = a1 <u s0
  3817: d4 65 05                 s0 = s0 | s1
  3820: 52 05 45 fd              jump @193 if s0 != 0
      :                          @260
  3824: 82 b6                    s1 = u64 [a4]
  3826: ab c6 e5                 jump @258 if s1 != a5
      :                          @261
  3829: 7b ba                    u64 [a4] = a3
  3831: 33 08 40 00 04           a1 = 0x40040
  3836: c9 a8 08                 a1 = a1 - a3
  3839: 64 25                    s0 = t0
  3841: 28 06                    jump @263
      :                          @262
  3843: 33 08 01                 a1 = 0x1
  3846: 01                       fallthrough
      :                          @263
  3847: 7b 17                    u64 [sp] = a0
  3849: 7b 18 08                 u64 [sp + 0x8] = a1
  3852: 49 11 10                 u64 [sp + 16] = 0
  3855: 33 08 08 02 01           a1 = 0x10208
  3860: 64 17                    a0 = sp
  3862: 50 10 42 83 06           ra = 66, jump @392
      :                          @264 [@dyn 33]
  3867: 52 07 21                 jump @266 if a0 != 0
      :                          @265
  3870: 82 17 10                 a0 = u64 [sp + 0x10]
  3873: 82 18 08                 a1 = u64 [sp + 0x8]
  3876: 82 19                    a2 = u64 [sp]
  3878: 7b 57 10                 u64 [s0 + 0x10] = a0
  3881: 7b 58 08                 u64 [s0 + 0x8] = a1
  3884: 7b 59                    u64 [s0] = a2
  3886: 82 10 30                 ra = u64 [sp + 0x30]
  3889: 82 15 28                 s0 = u64 [sp + 0x28]
  3892: 82 16 20                 s1 = u64 [sp + 0x20]
  3895: 95 11 38                 sp = sp + 0x38
  3898: 32 00                    ret
      :                          @266
  3900: 00                       trap
      :                          @267
  3901: 00                       trap
      :                          @268 [@dyn 34]
  3902: 82 72                    t0 = u64 [a0]
  3904: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3909: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3914: ac 9a 28                 jump @274 if a3 <u a2
      :                          @269
  3917: 82 77 08                 a0 = u64 [a0 + 0x8]
  3920: 33 09 40 00 03           a2 = 0x30040
  3925: 95 99 00 00 01           a2 = a2 + 0x10000
  3930: 01                       fallthrough
      :                          @270
  3931: 82 9a                    a3 = u64 [a2]
  3933: c9 a9 0b                 a4 = a2 - a3
  3936: ab 7b 12                 jump @274 if a4 != a0
      :                          @271
  3939: c9 2a 0b                 a4 = a3 - t0
  3942: 01                       fallthrough
      :                          @272
  3943: 82 9c                    a5 = u64 [a2]
  3945: ab ac f2                 jump @270 if a5 != a3
      :                          @273
  3948: 7b 9b                    u64 [a2] = a4
  3950: 33 08                    a1 = 0
  3952: 32 00                    ret
      :                          @274
  3954: 32 00                    ret
      :                          @275 [@dyn 35]
  3956: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3959: 7b 10 18                 u64 [sp + 0x18] = ra
  3962: 7b 15 10                 u64 [sp + 0x10] = s0
  3965: 7b 16 08                 u64 [sp + 0x8] = s1
  3968: 64 75                    s0 = a0
  3970: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3973: 82 77                    a0 = u64 [a0]
  3975: c9 a7 07                 a0 = a0 - a3
  3978: 64 96                    s1 = a2
  3980: ac 97 2a                 jump @278 if a0 <u a2
      :                          @276
  3983: 7b 1a                    u64 [sp] = a3
  3985: 82 57 08                 a0 = u64 [s0 + 0x8]
  3988: c8 a7 07                 a0 = a0 + a3
  3991: 64 69                    a2 = s1
  3993: 50 10 48 4a 01           ra = 72, jump @297
      :                          @277 [@dyn 36]
  3998: 82 17                    a0 = u64 [sp]
  4000: c8 76 06                 s1 = s1 + a0
  4003: 7b 56 10                 u64 [s0 + 0x10] = s1
  4006: 33 07                    a0 = 0
  4008: 82 10 18                 ra = u64 [sp + 0x18]
  4011: 82 15 10                 s0 = u64 [sp + 0x10]
  4014: 82 16 08                 s1 = u64 [sp + 0x8]
  4017: 95 11 20                 sp = sp + 0x20
  4020: 32 00                    ret
      :                          @278
  4022: 64 57                    a0 = s0
  4024: 7b 18                    u64 [sp] = a1
  4026: 64 a8                    a1 = a3
  4028: 64 69                    a2 = s1
  4030: 50 10 4a 74 fc           ra = 74, jump @194
      :                          @279 [@dyn 37]
  4035: 82 18                    a1 = u64 [sp]
  4037: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4040: 28 c7                    jump @276
      :                          @280 [@dyn 38]
  4042: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4045: 7b 10 20                 u64 [sp + 0x20] = ra
  4048: 7b 15 18                 u64 [sp + 0x18] = s0
  4051: 7b 16 10                 u64 [sp + 0x10] = s1
  4054: 64 86                    s1 = a1
  4056: 83 88                    i32 a1 = a1 + 0
  4058: 33 09 80 00              a2 = 0x80
  4062: 64 7a                    a3 = a0
  4064: ae 98 2b                 jump @285 if a1 >=u a2
      :                          @281
  4067: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4070: 82 a7                    a0 = u64 [a3]
  4072: ab 78 12                 jump @284 if a1 != a0
      :                          @282
  4075: 64 a7                    a0 = a3
  4077: 64 a5                    s0 = a3
  4079: 50 10 4e 07 fe           ra = 78, jump @237
      :                          @283 [@dyn 39]
  4084: 64 5a                    a3 = s0
  4086: 82 58 10                 a1 = u64 [s0 + 0x10]
  4089: 01                       fallthrough
      :                          @284
  4090: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4093: c8 87 07                 a0 = a0 + a1
  4096: 78 76                    u8 [a0] = s1
  4098: 95 88 01                 a1 = a1 + 0x1
  4101: 7b a8 10                 u64 [a3 + 0x10] = a1
  4104: 28 ab 00                 jump @293
      :                          @285
  4107: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4110: 48 11 0c                 u32 [sp + 12] = 0
  4113: 52 07 1c                 jump @287 if a0 != 0
      :                          @286
  4116: 98 67 06                 a0 = s1 >> 0x6
  4119: 86 77 c0 00              a0 = a0 | 0xc0
  4123: 78 17 0c                 u8 [sp + 0xc] = a0
  4126: 84 67 3f                 a0 = s1 & 0x3f
  4129: 86 77 80 00              a0 = a0 | 0x80
  4133: 78 17 0d                 u8 [sp + 0xd] = a0
  4136: 33 06 02                 s1 = 0x2
  4139: 28 63                    jump @290
      :                          @287
  4141: 8b 67 10                 i32 a0 = s1 >> 0x10
  4144: 52 07 29                 jump @289 if a0 != 0
      :                          @288
  4147: 98 67 0c                 a0 = s1 >> 0xc
  4150: 86 77 e0 00              a0 = a0 | 0xe0
  4154: 78 17 0c                 u8 [sp + 0xc] = a0
  4157: 97 67 34                 a0 = s1 << 0x34
  4160: 98 77 3a                 a0 = a0 >> 0x3a
  4163: 95 77 80 00              a0 = a0 + 0x80
  4167: 78 17 0d                 u8 [sp + 0xd] = a0
  4170: 84 67 3f                 a0 = s1 & 0x3f
  4173: 86 77 80 00              a0 = a0 | 0x80
  4177: 78 17 0e                 u8 [sp + 0xe] = a0
  4180: 33 06 03                 s1 = 0x3
  4183: 28 37                    jump @290
      :                          @289
  4185: 97 67 2b                 a0 = s1 << 0x2b
  4188: 98 77 3d                 a0 = a0 >> 0x3d
  4191: 95 77 f0 00              a0 = a0 + 0xf0
  4195: 78 17 0c                 u8 [sp + 0xc] = a0
  4198: 97 67 2e                 a0 = s1 << 0x2e
  4201: 98 77 3a                 a0 = a0 >> 0x3a
  4204: 95 77 80 00              a0 = a0 + 0x80
  4208: 78 17 0d                 u8 [sp + 0xd] = a0
  4211: 97 67 34                 a0 = s1 << 0x34
  4214: 98 77 3a                 a0 = a0 >> 0x3a
  4217: 95 77 80 00              a0 = a0 + 0x80
  4221: 78 17 0e                 u8 [sp + 0xe] = a0
  4224: 84 67 3f                 a0 = s1 & 0x3f
  4227: 86 77 80 00              a0 = a0 | 0x80
  4231: 78 17 0f                 u8 [sp + 0xf] = a0
  4234: 33 06 04                 s1 = 0x4
  4237: 01                       fallthrough
      :                          @290
  4238: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4241: 82 a7                    a0 = u64 [a3]
  4243: c9 57 07                 a0 = a0 - s0
  4246: ac 67 2d                 jump @294 if a0 <u s1
      :                          @291
  4249: 7b 1a                    u64 [sp] = a3
  4251: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4254: c8 57 07                 a0 = a0 + s0
  4257: 95 18 0c                 a1 = sp + 0xc
  4260: 64 69                    a2 = s1
  4262: 50 10 50 3d              ra = 80, jump @297
      :                          @292 [@dyn 40]
  4266: c8 56 06                 s1 = s1 + s0
  4269: 82 17                    a0 = u64 [sp]
  4271: 7b 76 10                 u64 [a0 + 0x10] = s1
  4274: 01                       fallthrough
      :                          @293
  4275: 33 07                    a0 = 0
  4277: 82 10 20                 ra = u64 [sp + 0x20]
  4280: 82 15 18                 s0 = u64 [sp + 0x18]
  4283: 82 16 10                 s1 = u64 [sp + 0x10]
  4286: 95 11 28                 sp = sp + 0x28
  4289: 32 00                    ret
      :                          @294
  4291: 64 a7                    a0 = a3
  4293: 64 58                    a1 = s0
  4295: 64 69                    a2 = s1
  4297: 64 a5                    s0 = a3
  4299: 50 10 52 67 fb           ra = 82, jump @194
      :                          @295 [@dyn 41]
  4304: 64 5a                    a3 = s0
  4306: 82 55 10                 s0 = u64 [s0 + 0x10]
  4309: 28 c4                    jump @291
      :                          @296 [@dyn 42]
  4311: 64 8a                    a3 = a1
  4313: 33 08 08 02 01           a1 = 0x10208
  4318: 64 a9                    a2 = a3
  4320: 28 b9 04                 jump @392
      :                          @297
  4323: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4326: 7b 10 18                 u64 [sp + 0x18] = ra
  4329: 7b 15 10                 u64 [sp + 0x10] = s0
  4332: 7b 16 08                 u64 [sp + 0x8] = s1
  4335: 53 19 10 64              jump @306 if a2 <u 16
      :                          @298
  4339: 8d 7a                    i32 a3 = -a0
  4341: 84 a2 07                 t0 = a3 & 0x7
  4344: c8 27 0b                 a4 = a0 + t0
  4347: 51 02 15                 jump @301 if t0 == 0
      :                          @299
  4350: 64 8c                    a5 = a1
  4352: 64 75                    s0 = a0
  4354: 01                       fallthrough
      :                          @300
  4355: 7c ca                    a3 = u8 [a5]
  4357: 78 5a                    u8 [s0] = a3
  4359: 95 55 01                 s0 = s0 + 0x1
  4362: 95 cc 01                 a5 = a5 + 0x1
  4365: ac b5 f6                 jump @300 if s0 <u a4
      :                          @301
  4368: c8 28 03                 t1 = a1 + t0
  4371: c9 29 02                 t0 = a2 - t0
  4374: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4377: 84 38 07                 a1 = t1 & 0x7
  4380: c8 4b 0a                 a3 = a4 + t2
  4383: 51 08 3b                 jump @308 if a1 == 0
      :                          @302
  4386: 58 04 4b                 jump @311 if t2 <=s 0
      :                          @303
  4389: 97 38 03                 a1 = t1 << 0x3
  4392: 84 80 38                 ra = a1 & 0x38
  4395: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4398: 82 c5                    s0 = u64 [a5]
  4400: 8d 88                    i32 a1 = -a1
  4402: 84 88 38                 a1 = a1 & 0x38
  4405: 95 cc 08                 a5 = a5 + 0x8
  4408: 01                       fallthrough
      :                          @304
  4409: 82 c6                    s1 = u64 [a5]
  4411: d0 05 05                 s0 = s0 >> ra
  4414: cf 86 09                 a2 = s1 << a1
  4417: d4 59 09                 a2 = a2 | s0
  4420: 7b b9                    u64 [a4] = a2
  4422: 95 bb 08                 a4 = a4 + 0x8
  4425: 95 cc 08                 a5 = a5 + 0x8
  4428: 64 65                    s0 = s1
  4430: ac ab eb                 jump @304 if a4 <u a3
      :                          @305
  4433: 28 1c                    jump @311
      :                          @306
  4435: 64 7a                    a3 = a0
  4437: 52 09 21                 jump @312 if a2 != 0
      :                          @307
  4440: 28 2f                    jump @314
      :                          @308
  4442: 58 04 13                 jump @311 if t2 <=s 0
      :                          @309
  4445: 64 38                    a1 = t1
  4447: 01                       fallthrough
      :                          @310
  4448: 82 89                    a2 = u64 [a1]
  4450: 7b b9                    u64 [a4] = a2
  4452: 95 bb 08                 a4 = a4 + 0x8
  4455: 95 88 08                 a1 = a1 + 0x8
  4458: ac ab f6                 jump @310 if a4 <u a3
      :                          @311
  4461: c8 43 08                 a1 = t1 + t2
  4464: 84 29 07                 a2 = t0 & 0x7
  4467: 51 09 14                 jump @314 if a2 == 0
      :                          @312
  4470: c8 a9 09                 a2 = a2 + a3
  4473: 01                       fallthrough
      :                          @313
  4474: 7c 8b                    a4 = u8 [a1]
  4476: 78 ab                    u8 [a3] = a4
  4478: 95 aa 01                 a3 = a3 + 0x1
  4481: 95 88 01                 a1 = a1 + 0x1
  4484: ac 9a f6                 jump @313 if a3 <u a2
      :                          @314
  4487: 82 10 18                 ra = u64 [sp + 0x18]
  4490: 82 15 10                 s0 = u64 [sp + 0x10]
  4493: 82 16 08                 s1 = u64 [sp + 0x8]
  4496: 95 11 20                 sp = sp + 0x20
  4499: 32 00                    ret
      :                          @315
  4501: 8d 7a                    i32 a3 = -a0
  4503: 84 aa 07                 a3 = a3 & 0x7
  4506: c8 a7 0b                 a4 = a0 + a3
  4509: 51 0a 0e                 jump @318 if a3 == 0
      :                          @316
  4512: 64 7c                    a5 = a0
  4514: 01                       fallthrough
      :                          @317
  4515: 78 c8                    u8 [a5] = a1
  4517: 95 cc 01                 a5 = a5 + 0x1
  4520: ac bc fb                 jump @317 if a5 <u a4
      :                          @318
  4523: c9 a9 03                 t1 = a2 - a3
  4526: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4529: c8 cb 0a                 a3 = a4 + a5
  4532: 58 0c 1d                 jump @321 if a5 <=s 0
      :                          @319
  4535: 84 82 ff 00              t0 = a1 & 0xff
  4539: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4549: ca 92 0c                 a5 = t0 * a2
  4552: 01                       fallthrough
      :                          @320
  4553: 7b bc                    u64 [a4] = a5
  4555: 95 bb 08                 a4 = a4 + 0x8
  4558: ac ab fb                 jump @320 if a4 <u a3
      :                          @321
  4561: 84 39 07                 a2 = t1 & 0x7
  4564: 52 09 05                 jump @323 if a2 != 0
      :                          @322
  4567: 28 0e                    jump @325
      :                          @323
  4569: c8 a9 09                 a2 = a2 + a3
  4572: 01                       fallthrough
      :                          @324
  4573: 78 a8                    u8 [a3] = a1
  4575: 95 aa 01                 a3 = a3 + 0x1
  4578: ac 9a fb                 jump @324 if a3 <u a2
      :                          @325
  4581: 32 00                    ret
      :                          @326 [@dyn 43]
  4583: 82 77                    a0 = u64 [a0]
  4585: 01                       fallthrough
      :                          @327
  4586: 28                       jump @327
      :                          @328
  4587: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  4590: 7b 10 58                 u64 [sp + 0x58] = ra
  4593: 7b 15 50                 u64 [sp + 0x50] = s0
  4596: 7b 16 48                 u64 [sp + 0x48] = s1
  4599: 7b 19 08                 u64 [sp + 0x8] = a2
  4602: 7b 18                    u64 [sp] = a1
  4604: 98 7a 04                 a3 = a0 >> 0x4
  4607: 33 09 27                 a2 = 0x27
  4610: 53 2a 71 02 81 00        jump @331 if a3 <u 625
      :                          @329
  4616: 33 09 27                 a2 = 0x27
  4619: 95 1b 46                 a4 = sp + 0x46
  4622: 3a 08 00 00 03           a1 = u64 [0x30000]
  4627: 7b 18 18                 u64 [sp + 0x18] = a1
  4630: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  4636: 33 03 7b 14              t1 = 0x147b
  4640: 33 05 76 02 01           s0 = 0x10276
  4645: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4651: 01                       fallthrough
      :                          @330
  4652: 64 74                    t2 = a0
  4654: 82 17 18                 a0 = u64 [sp + 0x18]
  4657: d6 74 07                 a0 = t2 mulhu a0
  4660: 98 77 0b                 a0 = a0 >> 0xb
  4663: 82 18 10                 a1 = u64 [sp + 0x10]
  4666: c0 87 02                 i32 t0 = a0 * a1
  4669: c8 42 0a                 a3 = t0 + t2
  4672: 97 a2 30                 t0 = a3 << 0x30
  4675: 98 28 32                 a1 = t0 >> 0x32
  4678: ca 38 08                 a1 = a1 * t1
  4681: 98 8c 11                 a5 = a1 >> 0x11
  4684: 98 88 10                 a1 = a1 >> 0x10
  4687: 84 88 fe 07              a1 = a1 & 0x7fe
  4691: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  4694: c8 ca 0a                 a3 = a3 + a5
  4697: 97 aa 31                 a3 = a3 << 0x31
  4700: 98 aa 30                 a3 = a3 >> 0x30
  4703: c8 58 08                 a1 = a1 + s0
  4706: 7c 8c                    a5 = u8 [a1]
  4708: 7c 88 01                 a1 = u8 [a1 + 0x1]
  4711: c8 5a 0a                 a3 = a3 + s0
  4714: 7c a6 01                 s1 = u8 [a3 + 0x1]
  4717: 7c aa                    a3 = u8 [a3]
  4719: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  4722: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  4725: 78 b6 01                 u8 [a4 + 0x1] = s1
  4728: 78 ba                    u8 [a4] = a3
  4730: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  4733: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4736: ac 40 ac                 jump @330 if ra <u t2
      :                          @331
  4739: 54 17 63 3b              jump @333 if a0 <=u 99
      :                          @332
  4743: 97 78 30                 a1 = a0 << 0x30
  4746: 98 88 32                 a1 = a1 >> 0x32
  4749: 96 88 7b 14              a1 = a1 * 0x147b
  4753: 98 88 11                 a1 = a1 >> 0x11
  4756: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  4759: c8 a7 07                 a0 = a0 + a3
  4762: 97 77 31                 a0 = a0 << 0x31
  4765: 98 77 30                 a0 = a0 >> 0x30
  4768: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4771: 33 0a 76 02 01           a3 = 0x10276
  4776: c8 a7 07                 a0 = a0 + a3
  4779: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4782: 7c 77                    a0 = u8 [a0]
  4784: 95 1b 21                 a4 = sp + 0x21
  4787: c8 9b 0b                 a4 = a4 + a2
  4790: 78 ba 01                 u8 [a4 + 0x1] = a3
  4793: 78 b7                    u8 [a4] = a0
  4795: 64 87                    a0 = a1
  4797: 01                       fallthrough
      :                          @333
  4798: 55 17 0a 14              jump @335 if a0 >=u 10
      :                          @334
  4802: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  4805: 95 18 21                 a1 = sp + 0x21
  4808: c8 98 08                 a1 = a1 + a2
  4811: 83 77 30                 i32 a0 = a0 + 0x30
  4814: 78 87                    u8 [a1] = a0
  4816: 28 21                    jump @336
      :                          @335
  4818: 97 77 01                 a0 = a0 << 0x1
  4821: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4824: 33 08 76 02 01           a1 = 0x10276
  4829: c8 87 07                 a0 = a0 + a1
  4832: 7c 78 01                 a1 = u8 [a0 + 0x1]
  4835: 7c 77                    a0 = u8 [a0]
  4837: 95 1a 21                 a3 = sp + 0x21
  4840: c8 9a 0a                 a3 = a3 + a2
  4843: 78 a8 01                 u8 [a3 + 0x1] = a1
  4846: 78 a7                    u8 [a3] = a0
  4848: 01                       fallthrough
      :                          @336
  4849: 95 1b 21                 a4 = sp + 0x21
  4852: c8 9b 0b                 a4 = a4 + a2
  4855: 9a 9c 27                 a5 = 0x27 - a2
  4858: 33 09 38 02 01           a2 = 0x10238
  4863: 82 17 08                 a0 = u64 [sp + 0x8]
  4866: 82 18                    a1 = u64 [sp]
  4868: 33 0a                    a3 = 0
  4870: 50 10 58 12              ra = 88, jump @338
      :                          @337 [@dyn 44]
  4874: 82 10 58                 ra = u64 [sp + 0x58]
  4877: 82 15 50                 s0 = u64 [sp + 0x50]
  4880: 82 16 48                 s1 = u64 [sp + 0x48]
  4883: 95 11 60                 sp = sp + 0x60
  4886: 32 00                    ret
      :                          @338
  4888: 95 11 98                 sp = sp + 0xffffffffffffff98
  4891: 7b 10 60                 u64 [sp + 0x60] = ra
  4894: 7b 15 58                 u64 [sp + 0x58] = s0
  4897: 7b 16 50                 u64 [sp + 0x50] = s1
  4900: 7b 1b 18                 u64 [sp + 0x18] = a4
  4903: 51 08 4f                 jump @345 if a1 == 0
      :                          @339
  4906: 80 76 34                 s1 = u32 [a0 + 0x34]
  4909: 84 68 01                 a1 = s1 & 0x1
  4912: 33 0b 2b                 a4 = 0x2b
  4915: 33 05 00 00 11           s0 = 0x110000
  4920: db 8b 05                 s0 = a4 if a1 != 0
  4923: 7b 15 28                 u64 [sp + 0x28] = s0
  4926: c8 c8 02                 t0 = a1 + a5
  4929: 84 68 04                 a1 = s1 & 0x4
  4932: 51 08 42                 jump @346 if a1 == 0
      :                          @340
  4935: 7b 19 30                 u64 [sp + 0x30] = a2
  4938: 33 08                    a1 = 0
  4940: 51 0a 1a                 jump @343 if a3 == 0
      :                          @341
  4943: 64 a5                    s0 = a3
  4945: 01                       fallthrough
      :                          @342
  4946: 7d 9b                    a4 = i8 [a2]
  4948: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  4951: 85 bb 01                 a4 = a4 ^ 0x1
  4954: c8 b8 08                 a1 = a1 + a4
  4957: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4960: 95 99 01                 a2 = a2 + 0x1
  4963: 52 05 ef                 jump @342 if s0 != 0
      :                          @343
  4966: c8 82 02                 t0 = t0 + a1
  4969: 7b 1a 38                 u64 [sp + 0x38] = a3
  4972: 82 78                    a1 = u64 [a0]
  4974: 7b 1c 20                 u64 [sp + 0x20] = a5
  4977: 52 08 23                 jump @347 if a1 != 0
      :                          @344
  4980: 28 41                    jump @352
      :                          @345
  4982: 81 76 34                 s1 = i32 [a0 + 0x34]
  4985: 95 c2 01                 t0 = a5 + 0x1
  4988: 49 11 28 2d              u64 [sp + 40] = 0x2d
  4992: 84 68 04                 a1 = s1 & 0x4
  4995: 52 08 c4                 jump @340 if a1 != 0
      :                          @346
  4998: 49 11 30                 u64 [sp + 48] = 0
  5001: 7b 1a 38                 u64 [sp + 0x38] = a3
  5004: 82 78                    a1 = u64 [a0]
  5006: 7b 1c 20                 u64 [sp + 0x20] = a5
  5009: 51 08 24                 jump @352 if a1 == 0
      :                          @347
  5012: 82 75 08                 s0 = u64 [a0 + 0x8]
  5015: ae 52 1e                 jump @352 if t0 >=u s0
      :                          @348
  5018: 84 66 08                 s1 = s1 & 0x8
  5021: 52 06 50                 jump @355 if s1 != 0
      :                          @349
  5024: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5027: c9 25 0a                 a3 = s0 - t0
  5030: 5a 19 01 a1 00           jump @362 if a2 >s 1
      :                          @350
  5035: 52 09 ae 00              jump @364 if a2 != 0
      :                          @351
  5039: 7b 1a 10                 u64 [sp + 0x10] = a3
  5042: 28 ad 00                 jump @365
      :                          @352
  5045: 82 75 20                 s0 = u64 [a0 + 0x20]
  5048: 82 76 28                 s1 = u64 [a0 + 0x28]
  5051: 64 57                    a0 = s0
  5053: 64 68                    a1 = s1
  5055: 82 19 28                 a2 = u64 [sp + 0x28]
  5058: 82 1a 30                 a3 = u64 [sp + 0x30]
  5061: 82 1b 38                 a4 = u64 [sp + 0x38]
  5064: 50 10 5a 6d 01           ra = 90, jump @385
      :                          @353 [@dyn 45]
  5069: 33 08 01                 a1 = 0x1
  5072: 52 07 bc 00              jump @370 if a0 != 0
      :                          @354
  5076: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5079: 64 57                    a0 = s0
  5081: 82 18 18                 a1 = u64 [sp + 0x18]
  5084: 82 19 20                 a2 = u64 [sp + 0x20]
  5087: 82 10 60                 ra = u64 [sp + 0x60]
  5090: 82 15 58                 s0 = u64 [sp + 0x58]
  5093: 82 16 50                 s1 = u64 [sp + 0x50]
  5096: 95 11 68                 sp = sp + 0x68
  5099: 32 0c                    jump [a5]
      :                          @355
  5101: 7b 12 40                 u64 [sp + 0x40] = t0
  5104: 81 78 30                 a1 = i32 [a0 + 0x30]
  5107: 7b 18 08                 u64 [sp + 0x8] = a1
  5110: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5113: 7b 19                    u64 [sp] = a2
  5115: 82 79 20                 a2 = u64 [a0 + 0x20]
  5118: 82 76 28                 s1 = u64 [a0 + 0x28]
  5121: 48 17 30 30              u32 [a0 + 48] = 0x30
  5125: 7b 17 10                 u64 [sp + 0x10] = a0
  5128: 46 17 38 01              u8 [a0 + 56] = 0x1
  5132: 7b 19 48                 u64 [sp + 0x48] = a2
  5135: 64 97                    a0 = a2
  5137: 64 68                    a1 = s1
  5139: 82 19 28                 a2 = u64 [sp + 0x28]
  5142: 82 1a 30                 a3 = u64 [sp + 0x30]
  5145: 82 1b 38                 a4 = u64 [sp + 0x38]
  5148: 50 10 5c 19 01           ra = 92, jump @385
      :                          @356 [@dyn 46]
  5153: 52 07 67                 jump @369 if a0 != 0
      :                          @357
  5156: 82 17 40                 a0 = u64 [sp + 0x40]
  5159: c9 75 05                 s0 = s0 - a0
  5162: 95 55 01                 s0 = s0 + 0x1
  5165: 01                       fallthrough
      :                          @358
  5166: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5169: 51 05 c6 00              jump @380 if s0 == 0
      :                          @359
  5173: 82 69 20                 a2 = u64 [s1 + 0x20]
  5176: 33 08 30                 a1 = 0x30
  5179: 82 17 48                 a0 = u64 [sp + 0x48]
  5182: b4 90 01 5e              ra = 94, jump [a2]
      :                          @360 [@dyn 47]
  5186: 51 07 ec                 jump @358 if a0 == 0
      :                          @361
  5189: 28 43                    jump @369
      :                          @362
  5191: 52 19 02 12              jump @364 if a2 != 2
      :                          @363
  5195: 98 a9 01                 a2 = a3 >> 0x1
  5198: 95 a8 01                 a1 = a3 + 0x1
  5201: 98 88 01                 a1 = a1 >> 0x1
  5204: 7b 18 10                 u64 [sp + 0x10] = a1
  5207: 28 08                    jump @365
      :                          @364
  5209: 64 a9                    a2 = a3
  5211: 49 11 10                 u64 [sp + 16] = 0
  5214: 01                       fallthrough
      :                          @365
  5215: 82 78 20                 a1 = u64 [a0 + 0x20]
  5218: 7b 18 48                 u64 [sp + 0x48] = a1
  5221: 82 76 28                 s1 = u64 [a0 + 0x28]
  5224: 81 77 30                 a0 = i32 [a0 + 0x30]
  5227: 7b 17 40                 u64 [sp + 0x40] = a0
  5230: 95 95 01                 s0 = a2 + 0x1
  5233: 01                       fallthrough
      :                          @366
  5234: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5237: 51 05 27                 jump @371 if s0 == 0
      :                          @367
  5240: 82 69 20                 a2 = u64 [s1 + 0x20]
  5243: 82 17 48                 a0 = u64 [sp + 0x48]
  5246: 82 18 40                 a1 = u64 [sp + 0x40]
  5249: b4 90 01 60              ra = 96, jump [a2]
      :                          @368 [@dyn 48]
  5253: 51 07 ed                 jump @366 if a0 == 0
      :                          @369
  5256: 33 08 01                 a1 = 0x1
  5259: 01                       fallthrough
      :                          @370
  5260: 64 87                    a0 = a1
  5262: 82 10 60                 ra = u64 [sp + 0x60]
  5265: 82 15 58                 s0 = u64 [sp + 0x58]
  5268: 82 16 50                 s1 = u64 [sp + 0x50]
  5271: 95 11 68                 sp = sp + 0x68
  5274: 32 00                    ret
      :                          @371
  5276: 82 15 48                 s0 = u64 [sp + 0x48]
  5279: 64 57                    a0 = s0
  5281: 64 68                    a1 = s1
  5283: 82 19 28                 a2 = u64 [sp + 0x28]
  5286: 82 1a 30                 a3 = u64 [sp + 0x30]
  5289: 82 1b 38                 a4 = u64 [sp + 0x38]
  5292: 50 10 62 89 00           ra = 98, jump @385
      :                          @372 [@dyn 49]
  5297: 33 08 01                 a1 = 0x1
  5300: 52 07 d8                 jump @370 if a0 != 0
      :                          @373
  5303: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5306: 64 57                    a0 = s0
  5308: 82 18 18                 a1 = u64 [sp + 0x18]
  5311: 82 19 20                 a2 = u64 [sp + 0x20]
  5314: b4 a0 01 64              ra = 100, jump [a3]
      :                          @374 [@dyn 50]
  5318: 33 08 01                 a1 = 0x1
  5321: 52 07 c3                 jump @370 if a0 != 0
      :                          @375
  5324: 82 17 10                 a0 = u64 [sp + 0x10]
  5327: 9a 77                    a0 = -a0
  5329: 7b 17 38                 u64 [sp + 0x38] = a0
  5332: 33 05 ff                 s0 = 0xffffffffffffffff
  5335: 01                       fallthrough
      :                          @376
  5336: 82 17 38                 a0 = u64 [sp + 0x38]
  5339: c8 57 07                 a0 = a0 + s0
  5342: 51 17 ff 42              jump @383 if a0 == 4294967295
      :                          @377
  5346: 82 69 20                 a2 = u64 [s1 + 0x20]
  5349: 82 17 48                 a0 = u64 [sp + 0x48]
  5352: 82 18 40                 a1 = u64 [sp + 0x40]
  5355: b4 90 01 66              ra = 102, jump [a2]
      :                          @378 [@dyn 51]
  5359: 95 55 01                 s0 = s0 + 0x1
  5362: 51 07 e6                 jump @376 if a0 == 0
      :                          @379
  5365: 28 37                    jump @384
      :                          @380
  5367: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5370: 82 17 48                 a0 = u64 [sp + 0x48]
  5373: 82 18 18                 a1 = u64 [sp + 0x18]
  5376: 82 19 20                 a2 = u64 [sp + 0x20]
  5379: b4 a0 01 68              ra = 104, jump [a3]
      :                          @381 [@dyn 52]
  5383: 33 08 01                 a1 = 0x1
  5386: 52 07 82                 jump @370 if a0 != 0
      :                          @382
  5389: 33 08                    a1 = 0
  5391: 82 17 10                 a0 = u64 [sp + 0x10]
  5394: 82 19 08                 a2 = u64 [sp + 0x8]
  5397: 7a 79 30                 u32 [a0 + 0x30] = a2
  5400: 82 19                    a2 = u64 [sp]
  5402: 78 79 38                 u8 [a0 + 0x38] = a2
  5405: 28 6f ff                 jump @370
      :                          @383
  5408: 82 15 10                 s0 = u64 [sp + 0x10]
  5411: 82 17 10                 a0 = u64 [sp + 0x10]
  5414: d8 75 08                 a1 = s0 <u a0
  5417: 28 63 ff                 jump @370
      :                          @384
  5420: 82 17 10                 a0 = u64 [sp + 0x10]
  5423: d8 75 08                 a1 = s0 <u a0
  5426: 28 5a ff                 jump @370
      :                          @385
  5429: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5432: 7b 10 20                 u64 [sp + 0x20] = ra
  5435: 7b 15 18                 u64 [sp + 0x18] = s0
  5438: 7b 16 10                 u64 [sp + 0x10] = s1
  5441: 83 9c                    i32 a5 = a2 + 0
  5443: 33 02 00 00 11           t0 = 0x110000
  5448: 64 a6                    s1 = a3
  5450: 64 85                    s0 = a1
  5452: 64 7a                    a3 = a0
  5454: aa 2c 20                 jump @388 if a5 == t0
      :                          @386
  5457: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5460: 64 a7                    a0 = a3
  5462: 64 98                    a1 = a2
  5464: 7b 1b 08                 u64 [sp + 0x8] = a4
  5467: 7b 1a                    u64 [sp] = a3
  5469: b4 c0 01 6a              ra = 106, jump [a5]
      :                          @387 [@dyn 53]
  5473: 82 1a                    a3 = u64 [sp]
  5475: 82 1b 08                 a4 = u64 [sp + 0x8]
  5478: 64 78                    a1 = a0
  5480: 33 07 01                 a0 = 0x1
  5483: 52 08 20                 jump @391 if a1 != 0
      :                          @388
  5486: 51 06 1a                 jump @390 if s1 == 0
      :                          @389
  5489: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5492: 64 a7                    a0 = a3
  5494: 64 68                    a1 = s1
  5496: 64 b9                    a2 = a4
  5498: 82 10 20                 ra = u64 [sp + 0x20]
  5501: 82 15 18                 s0 = u64 [sp + 0x18]
  5504: 82 16 10                 s1 = u64 [sp + 0x10]
  5507: 95 11 28                 sp = sp + 0x28
  5510: 32 0c                    jump [a5]
      :                          @390
  5512: 33 07                    a0 = 0
  5514: 01                       fallthrough
      :                          @391
  5515: 82 10 20                 ra = u64 [sp + 0x20]
  5518: 82 15 18                 s0 = u64 [sp + 0x18]
  5521: 82 16 10                 s1 = u64 [sp + 0x10]
  5524: 95 11 28                 sp = sp + 0x28
  5527: 32 00                    ret
      :                          @392
  5529: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5533: 7b 10 80 00              u64 [sp + 0x80] = ra
  5537: 7b 15 78                 u64 [sp + 0x78] = s0
  5540: 7b 16 70                 u64 [sp + 0x70] = s1
  5543: 49 11 60 20              u64 [sp + 96] = 0x20
  5547: 33 0a 03                 a3 = 0x3
  5550: 78 1a 68                 u8 [sp + 0x68] = a3
  5553: 82 96 20                 s1 = u64 [a2 + 0x20]
  5556: 49 11 30                 u64 [sp + 48] = 0
  5559: 49 11 40                 u64 [sp + 64] = 0
  5562: 7b 17 50                 u64 [sp + 0x50] = a0
  5565: 7b 18 58                 u64 [sp + 0x58] = a1
  5568: 51 06 07 01              jump @414 if s1 == 0
      :                          @393
  5572: 82 97 28                 a0 = u64 [a2 + 0x28]
  5575: 51 07 74 01              jump @424 if a0 == 0
      :                          @394
  5579: 49 11 28                 u64 [sp + 40] = 0
  5582: 82 95                    s0 = u64 [a2]
  5584: 7b 19 08                 u64 [sp + 0x8] = a2
  5587: 82 98 10                 a1 = u64 [a2 + 0x10]
  5590: 7b 18 18                 u64 [sp + 0x18] = a1
  5593: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5596: 97 88 03                 a1 = a1 << 0x3
  5599: 98 88 03                 a1 = a1 >> 0x3
  5602: 95 88 01                 a1 = a1 + 0x1
  5605: 7b 18                    u64 [sp] = a1
  5607: 95 55 08                 s0 = s0 + 0x8
  5610: 96 78 38                 a1 = a0 * 0x38
  5613: 95 66 18                 s1 = s1 + 0x18
  5616: 33 07 56                 a0 = 0x56
  5619: 7b 17 10                 u64 [sp + 0x10] = a0
  5622: 01                       fallthrough
      :                          @395
  5623: 7b 18 20                 u64 [sp + 0x20] = a1
  5626: 82 59                    a2 = u64 [s0]
  5628: 51 09 17                 jump @398 if a2 == 0
      :                          @396
  5631: 82 1a 58                 a3 = u64 [sp + 0x58]
  5634: 82 17 50                 a0 = u64 [sp + 0x50]
  5637: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5640: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5643: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @397 [@dyn 54]
  5647: 52 07 51 01              jump @427 if a0 != 0
      :                          @398
  5651: 81 67 10                 a0 = i32 [s1 + 0x10]
  5654: 7a 17 60                 u32 [sp + 0x60] = a0
  5657: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5660: 78 17 68                 u8 [sp + 0x68] = a0
  5663: 81 67 14                 a0 = i32 [s1 + 0x14]
  5666: 7a 17 64                 u32 [sp + 0x64] = a0
  5669: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5672: 82 67                    a0 = u64 [s1]
  5674: 51 08 26                 jump @403 if a1 == 0
      :                          @399
  5677: 52 18 01 16              jump @401 if a1 != 1
      :                          @400
  5681: 97 77 04                 a0 = a0 << 0x4
  5684: 82 18 18                 a1 = u64 [sp + 0x18]
  5687: c8 87 07                 a0 = a0 + a1
  5690: 82 78 08                 a1 = u64 [a0 + 0x8]
  5693: 82 19 10                 a2 = u64 [sp + 0x10]
  5696: aa 98 07                 jump @402 if a1 == a2
      :                          @401
  5699: 33 08                    a1 = 0
  5701: 28 0f                    jump @404
      :                          @402
  5703: 82 77                    a0 = u64 [a0]
  5705: 82 77                    a0 = u64 [a0]
  5707: 33 08 01                 a1 = 0x1
  5710: 28 06                    jump @404
      :                          @403
  5712: 33 08 01                 a1 = 0x1
  5715: 01                       fallthrough
      :                          @404
  5716: 7b 18 30                 u64 [sp + 0x30] = a1
  5719: 7b 17 38                 u64 [sp + 0x38] = a0
  5722: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5725: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5728: 51 08 26                 jump @409 if a1 == 0
      :                          @405
  5731: 52 18 01 16              jump @407 if a1 != 1
      :                          @406
  5735: 97 77 04                 a0 = a0 << 0x4
  5738: 82 18 18                 a1 = u64 [sp + 0x18]
  5741: c8 87 07                 a0 = a0 + a1
  5744: 82 78 08                 a1 = u64 [a0 + 0x8]
  5747: 82 19 10                 a2 = u64 [sp + 0x10]
  5750: aa 98 07                 jump @408 if a1 == a2
      :                          @407
  5753: 33 08                    a1 = 0
  5755: 28 0f                    jump @410
      :                          @408
  5757: 82 77                    a0 = u64 [a0]
  5759: 82 77                    a0 = u64 [a0]
  5761: 33 08 01                 a1 = 0x1
  5764: 28 06                    jump @410
      :                          @409
  5766: 33 08 01                 a1 = 0x1
  5769: 01                       fallthrough
      :                          @410
  5770: 7b 18 40                 u64 [sp + 0x40] = a1
  5773: 7b 17 48                 u64 [sp + 0x48] = a0
  5776: 82 67 08                 a0 = u64 [s1 + 0x8]
  5779: 97 77 04                 a0 = a0 << 0x4
  5782: 82 18 18                 a1 = u64 [sp + 0x18]
  5785: c8 78 08                 a1 = a1 + a0
  5788: 82 87                    a0 = u64 [a1]
  5790: 82 89 08                 a2 = u64 [a1 + 0x8]
  5793: 95 18 30                 a1 = sp + 0x30
  5796: b4 90 01 6e              ra = 110, jump [a2]
      :                          @411 [@dyn 55]
  5800: 52 07 b8 00              jump @427 if a0 != 0
      :                          @412
  5804: 95 55 10                 s0 = s0 + 0x10
  5807: 82 18 20                 a1 = u64 [sp + 0x20]
  5810: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5813: 95 66 38                 s1 = s1 + 0x38
  5816: 82 17 28                 a0 = u64 [sp + 0x28]
  5819: 95 77 01                 a0 = a0 + 0x1
  5822: 7b 17 28                 u64 [sp + 0x28] = a0
  5825: 52 08 36 ff              jump @395 if a1 != 0
      :                          @413
  5829: 28 69                    jump @422
      :                          @414
  5831: 82 97 18                 a0 = u64 [a2 + 0x18]
  5834: 51 07 71                 jump @424 if a0 == 0
      :                          @415
  5837: 82 95 10                 s0 = u64 [a2 + 0x10]
  5840: 33 0a                    a3 = 0
  5842: 97 78 04                 a1 = a0 << 0x4
  5845: c8 58 08                 a1 = a1 + s0
  5848: 7b 18 20                 u64 [sp + 0x20] = a1
  5851: 7b 19 08                 u64 [sp + 0x8] = a2
  5854: 82 96                    s1 = u64 [a2]
  5856: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5859: 97 77 04                 a0 = a0 << 0x4
  5862: 98 77 04                 a0 = a0 >> 0x4
  5865: 95 77 01                 a0 = a0 + 0x1
  5868: 7b 17                    u64 [sp] = a0
  5870: 95 66 08                 s1 = s1 + 0x8
  5873: 01                       fallthrough
      :                          @416
  5874: 7b 1a 28                 u64 [sp + 0x28] = a3
  5877: 82 69                    a2 = u64 [s1]
  5879: 51 09 16                 jump @419 if a2 == 0
      :                          @417
  5882: 82 1a 58                 a3 = u64 [sp + 0x58]
  5885: 82 17 50                 a0 = u64 [sp + 0x50]
  5888: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5891: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5894: b4 a0 01 70              ra = 112, jump [a3]
      :                          @418 [@dyn 56]
  5898: 52 07 56                 jump @427 if a0 != 0
      :                          @419
  5901: 82 57                    a0 = u64 [s0]
  5903: 82 59 08                 a2 = u64 [s0 + 0x8]
  5906: 95 18 30                 a1 = sp + 0x30
  5909: b4 90 01 72              ra = 114, jump [a2]
      :                          @420 [@dyn 57]
  5913: 52 07 47                 jump @427 if a0 != 0
      :                          @421
  5916: 95 66 10                 s1 = s1 + 0x10
  5919: 95 55 10                 s0 = s0 + 0x10
  5922: 82 1a 28                 a3 = u64 [sp + 0x28]
  5925: 95 aa 01                 a3 = a3 + 0x1
  5928: 82 17 20                 a0 = u64 [sp + 0x20]
  5931: ab 75 c7                 jump @416 if s0 != a0
      :                          @422
  5934: 82 19 08                 a2 = u64 [sp + 0x8]
  5937: 82 1a                    a3 = u64 [sp]
  5939: 82 97 08                 a0 = u64 [a2 + 0x8]
  5942: ac 7a 0d                 jump @425 if a3 <u a0
      :                          @423
  5945: 28 2c                    jump @428
      :                          @424
  5947: 33 0a                    a3 = 0
  5949: 82 97 08                 a0 = u64 [a2 + 0x8]
  5952: 54 07 25                 jump @428 if a0 <=u 0
      :                          @425
  5955: 82 97                    a0 = u64 [a2]
  5957: 97 a8 04                 a1 = a3 << 0x4
  5960: c8 87 09                 a2 = a0 + a1
  5963: 82 1a 58                 a3 = u64 [sp + 0x58]
  5966: 82 17 50                 a0 = u64 [sp + 0x50]
  5969: 82 98                    a1 = u64 [a2]
  5971: 82 99 08                 a2 = u64 [a2 + 0x8]
  5974: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5977: b4 a0 01 74              ra = 116, jump [a3]
      :                          @426 [@dyn 58]
  5981: 51 07 08                 jump @428 if a0 == 0
      :                          @427
  5984: 33 07 01                 a0 = 0x1
  5987: 28 05                    jump @429
      :                          @428
  5989: 33 07                    a0 = 0
  5991: 01                       fallthrough
      :                          @429
  5992: 82 10 80 00              ra = u64 [sp + 0x80]
  5996: 82 15 78                 s0 = u64 [sp + 0x78]
  5999: 82 16 70                 s1 = u64 [sp + 0x70]
  6002: 95 11 88 00              sp = sp + 0x88
  6006: 32 00                    ret
      :                          @430 [@dyn 59]
  6008: 32 00                    ret
      :                          @431 [@dyn 60]
  6010: 95 11 80                 sp = sp + 0xffffffffffffff80
  6013: 7b 10 78                 u64 [sp + 0x78] = ra
  6016: 7b 15 70                 u64 [sp + 0x70] = s0
  6019: 7b 16 68                 u64 [sp + 0x68] = s1
  6022: 64 92                    t0 = a2
  6024: 33 00                    ra = 0
  6026: 33 0b                    a4 = 0
  6028: 33 05                    s0 = 0
  6030: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6040: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6046: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6056: 82 79 10                 a2 = u64 [a0 + 0x10]
  6059: 7b 19 48                 u64 [sp + 0x48] = a2
  6062: 82 79                    a2 = u64 [a0]
  6064: 7b 19 38                 u64 [sp + 0x38] = a2
  6067: 82 77 08                 a0 = u64 [a0 + 0x8]
  6070: 7b 17 30                 u64 [sp + 0x30] = a0
  6073: 33 07 0c 00 01           a0 = 0x1000c
  6078: 7b 17 08                 u64 [sp + 0x8] = a0
  6081: 3a 07 08 00 03           a0 = u64 [0x30008]
  6086: 7b 17 60                 u64 [sp + 0x60] = a0
  6089: 7b 18 58                 u64 [sp + 0x58] = a1
  6092: 95 88 08                 a1 = a1 + 0x8
  6095: 7b 18                    u64 [sp] = a1
  6097: 33 0c 0a                 a5 = 0xa
  6100: 7b 12 20                 u64 [sp + 0x20] = t0
  6103: 7b 13 18                 u64 [sp + 0x18] = t1
  6106: 7b 14 10                 u64 [sp + 0x10] = t2
  6109: 28 3a                    jump @435
      :                          @432
  6111: 64 06                    s1 = ra
  6113: c8 89 07                 a0 = a2 + a1
  6116: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6119: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6122: 88 77 01                 a0 = a0 <u 0x1
  6125: 01                       fallthrough
      :                          @433
  6126: 82 1a 48                 a3 = u64 [sp + 0x48]
  6129: 78 a7                    u8 [a3] = a0
  6131: 82 17 30                 a0 = u64 [sp + 0x30]
  6134: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6137: 82 17 38                 a0 = u64 [sp + 0x38]
  6140: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @434 [@dyn 61]
  6144: 64 5b                    a4 = s0
  6146: 82 12 20                 t0 = u64 [sp + 0x20]
  6149: 82 13 18                 t1 = u64 [sp + 0x18]
  6152: 82 14 10                 t2 = u64 [sp + 0x10]
  6155: 64 60                    ra = s1
  6157: 33 0c 0a                 a5 = 0xa
  6160: 82 15 40                 s0 = u64 [sp + 0x40]
  6163: 52 07 63 01              jump @476 if a0 != 0
      :                          @435
  6167: 84 57 ff 00              a0 = s0 & 0xff
  6171: 52 07 57 01              jump @475 if a0 != 0
      :                          @436
  6175: 7b 1b 50                 u64 [sp + 0x50] = a4
  6178: ae 02 0a                 jump @439 if t0 >=u ra
      :                          @437
  6181: 28 ef 00                 jump @466
      :                          @438
  6184: ac 02 ec 00              jump @466 if t0 <u ra
      :                          @439
  6188: c9 02 08                 a1 = t0 - ra
  6191: 82 16 58                 s1 = u64 [sp + 0x58]
  6194: c8 06 06                 s1 = s1 + ra
  6197: 55 18 10 1d              jump @445 if a1 >=u 16
      :                          @440
  6201: aa 02 d8 00              jump @465 if t0 == ra
      :                          @441
  6205: 33 0a                    a3 = 0
  6207: 01                       fallthrough
      :                          @442
  6208: c8 a6 07                 a0 = s1 + a3
  6211: 7c 77                    a0 = u8 [a0]
  6213: aa c7 a5 00              jump @460 if a0 == a5
      :                          @443
  6217: 95 aa 01                 a3 = a3 + 0x1
  6220: ab a8 f4                 jump @442 if a1 != a3
      :                          @444
  6223: 28 c2 00                 jump @465
      :                          @445
  6226: 95 69 07                 a2 = s1 + 0x7
  6229: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6232: c9 6a 07                 a0 = a3 - s1
  6235: d3 6a 0a                 a3 = a3 ^ s1
  6238: 88 aa 01                 a3 = a3 <u 0x1
  6241: 88 7b 01                 a4 = a0 <u 0x1
  6244: d4 ba 0a                 a3 = a3 | a4
  6247: 51 0a 45                 jump @451 if a3 == 0
      :                          @446
  6250: 33 07                    a0 = 0
  6252: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6255: 82 1b                    a4 = u64 [sp]
  6257: c8 0b 0b                 a4 = a4 + ra
  6260: 28 08                    jump @448
      :                          @447
  6262: 82 1b                    a4 = u64 [sp]
  6264: c8 0b 0b                 a4 = a4 + ra
  6267: 01                       fallthrough
      :                          @448
  6268: c8 76 0c                 a5 = s1 + a0
  6271: 82 cc                    a5 = u64 [a5]
  6273: c8 7b 09                 a2 = a4 + a0
  6276: 82 99                    a2 = u64 [a2]
  6278: d3 4c 05                 s0 = a5 ^ t2
  6281: c8 35 05                 s0 = s0 + t1
  6284: e0 c5 0c                 a5 = s0 & ~a5
  6287: d3 49 05                 s0 = a2 ^ t2
  6290: c8 35 05                 s0 = s0 + t1
  6293: e0 95 09                 a2 = s0 & ~a2
  6296: d4 c9 09                 a2 = a2 | a5
  6299: 82 1c 60                 a5 = u64 [sp + 0x60]
  6302: d2 c9 09                 a2 = a2 & a5
  6305: 52 09 1f                 jump @454 if a2 != 0
      :                          @449
  6308: 95 77 10                 a0 = a0 + 0x10
  6311: ae 7a d5                 jump @448 if a3 >=u a0
      :                          @450
  6314: 28 16                    jump @454
      :                          @451
  6316: c8 a6 0b                 a4 = s1 + a3
  6319: 7c bb                    a4 = u8 [a4]
  6321: aa cb 51                 jump @463 if a4 == a5
      :                          @452
  6324: 95 aa 01                 a3 = a3 + 0x1
  6327: ab a7 f5                 jump @451 if a0 != a3
      :                          @453
  6330: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6333: ae 7a b9                 jump @447 if a3 >=u a0
      :                          @454
  6336: aa 87 9a 00              jump @472 if a0 == a1
      :                          @455
  6340: 33 0a                    a3 = 0
  6342: c8 76 06                 s1 = s1 + a0
  6345: c9 72 08                 a1 = t0 - a0
  6348: c9 08 08                 a1 = a1 - ra
  6351: 33 0c 0a                 a5 = 0xa
  6354: 82 1b 50                 a4 = u64 [sp + 0x50]
  6357: 01                       fallthrough
      :                          @456
  6358: c8 a6 09                 a2 = s1 + a3
  6361: 7c 99                    a2 = u8 [a2]
  6363: aa c9 0b                 jump @459 if a2 == a5
      :                          @457
  6366: 95 aa 01                 a3 = a3 + 0x1
  6369: ab a8 f5                 jump @456 if a1 != a3
      :                          @458
  6372: 28 2d                    jump @465
      :                          @459
  6374: c8 7a 0a                 a3 = a3 + a0
  6377: 01                       fallthrough
      :                          @460
  6378: c8 0a 0a                 a3 = a3 + ra
  6381: 95 a0 01                 ra = a3 + 0x1
  6384: ae 2a 38 ff              jump @438 if a3 >=u t0
      :                          @461
  6388: 82 17 58                 a0 = u64 [sp + 0x58]
  6391: c8 7a 0a                 a3 = a3 + a0
  6394: 7c a7                    a0 = u8 [a3]
  6396: ab c7 2c ff              jump @438 if a0 != a5
      :                          @462
  6400: 28 61                    jump @473
      :                          @463
  6402: 82 1b 50                 a4 = u64 [sp + 0x50]
  6405: c8 0a 0a                 a3 = a3 + ra
  6408: 95 a0 01                 ra = a3 + 0x1
  6411: ac 2a e9                 jump @461 if a3 <u t0
      :                          @464
  6414: 28 1a ff                 jump @438
      :                          @465
  6417: 64 20                    ra = t0
  6419: 01                       fallthrough
      :                          @466
  6420: 49 11 40 01              u64 [sp + 64] = 0x1
  6424: 64 b5                    s0 = a4
  6426: 64 26                    s1 = t0
  6428: aa 2b 56                 jump @475 if a4 == t0
      :                          @467
  6431: 82 17 48                 a0 = u64 [sp + 0x48]
  6434: 7c 77                    a0 = u8 [a0]
  6436: 51 07 22                 jump @470 if a0 == 0
      :                          @468
  6439: 82 17 30                 a0 = u64 [sp + 0x30]
  6442: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6445: 33 09 04                 a2 = 0x4
  6448: 82 17 38                 a0 = u64 [sp + 0x38]
  6451: 82 18 08                 a1 = u64 [sp + 0x8]
  6454: 7b 10 28                 u64 [sp + 0x28] = ra
  6457: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @469 [@dyn 62]
  6461: 82 1b 50                 a4 = u64 [sp + 0x50]
  6464: 82 10 28                 ra = u64 [sp + 0x28]
  6467: 52 07 33                 jump @476 if a0 != 0
      :                          @470
  6470: c9 b6 09                 a2 = s1 - a4
  6473: 82 18 58                 a1 = u64 [sp + 0x58]
  6476: c8 b8 08                 a1 = a1 + a4
  6479: ab b6 90 fe              jump @432 if s1 != a4
      :                          @471
  6483: 64 06                    s1 = ra
  6485: 33 07                    a0 = 0
  6487: 28 97 fe                 jump @433
      :                          @472
  6490: 64 20                    ra = t0
  6492: 82 1b 50                 a4 = u64 [sp + 0x50]
  6495: 28 b5                    jump @466
      :                          @473
  6497: 49 11 40                 u64 [sp + 64] = 0
  6500: 64 05                    s0 = ra
  6502: 64 06                    s1 = ra
  6504: 82 17 48                 a0 = u64 [sp + 0x48]
  6507: 7c 77                    a0 = u8 [a0]
  6509: 52 07 ba                 jump @468 if a0 != 0
      :                          @474
  6512: 28 d6                    jump @470
      :                          @475
  6514: 33 07                    a0 = 0
  6516: 28 06                    jump @477
      :                          @476
  6518: 33 07 01                 a0 = 0x1
  6521: 01                       fallthrough
      :                          @477
  6522: 82 10 78                 ra = u64 [sp + 0x78]
  6525: 82 15 70                 s0 = u64 [sp + 0x70]
  6528: 82 16 68                 s1 = u64 [sp + 0x68]
  6531: 95 11 80 00              sp = sp + 0x80
  6535: 32 00                    ret
      :                          @478 [@dyn 63]
  6537: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6540: 7b 10 20                 u64 [sp + 0x20] = ra
  6543: 7b 15 18                 u64 [sp + 0x18] = s0
  6546: 7b 16 10                 u64 [sp + 0x10] = s1
  6549: 82 75 10                 s0 = u64 [a0 + 0x10]
  6552: 7c 59                    a2 = u8 [s0]
  6554: 82 7b                    a4 = u64 [a0]
  6556: 82 76 08                 s1 = u64 [a0 + 0x8]
  6559: 51 09 33                 jump @482 if a2 == 0
      :                          @479
  6562: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6565: 7b 18 08                 u64 [sp + 0x8] = a1
  6568: 33 08 0c 00 01           a1 = 0x1000c
  6573: 33 09 04                 a2 = 0x4
  6576: 64 b7                    a0 = a4
  6578: 7b 1b                    u64 [sp] = a4
  6580: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @480 [@dyn 64]
  6585: 82 18 08                 a1 = u64 [sp + 0x8]
  6588: 82 1b                    a4 = u64 [sp]
  6590: 51 07 14                 jump @482 if a0 == 0
      :                          @481
  6593: 33 07 01                 a0 = 0x1
  6596: 82 10 20                 ra = u64 [sp + 0x20]
  6599: 82 15 18                 s0 = u64 [sp + 0x18]
  6602: 82 16 10                 s1 = u64 [sp + 0x10]
  6605: 95 11 28                 sp = sp + 0x28
  6608: 32 00                    ret
      :                          @482
  6610: 83 87                    i32 a0 = a1 + 0
  6612: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6615: 88 77 01                 a0 = a0 <u 0x1
  6618: 78 57                    u8 [s0] = a0
  6620: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6623: 64 b7                    a0 = a4
  6625: 82 10 20                 ra = u64 [sp + 0x20]
  6628: 82 15 18                 s0 = u64 [sp + 0x18]
  6631: 82 16 10                 s1 = u64 [sp + 0x10]
  6634: 95 11 28                 sp = sp + 0x28
  6637: 32 0c                    jump [a5]
      :                          @483 [@dyn 65]
  6639: 64 8a                    a3 = a1
  6641: 33 08 40 02 01           a1 = 0x10240
  6646: 64 a9                    a2 = a3
  6648: 28 a1 fb                 jump @392
      :                          @484
  6651: 51 08 9b 00              jump @505 if a1 == 0
      :                          @485
  6655: 64 79                    a2 = a0
  6657: 7c 77                    a0 = u8 [a0]
  6659: 51 07 91 00              jump @504 if a0 == 0
      :                          @486
  6663: 51 27 ff 00 90 00        jump @506 if a0 == 255
      :                          @487
  6669: 6c 7a                    a3 = sext.b a0
  6671: 57 0a 09                 jump @489 if a3 <s 0
      :                          @488
  6674: 33 0a                    a3 = 0
  6676: 33 08                    a1 = 0
  6678: 28 73                    jump @503
      :                          @489
  6680: 55 27 c0 00 0d           jump @491 if a0 >=u 192
      :                          @490
  6685: 33 0a 01                 a3 = 0x1
  6688: 33 0b 80                 a4 = 0xffffffffffffff80
  6691: 28 4a                    jump @500
      :                          @491
  6693: 55 27 e0 00 0e           jump @493 if a0 >=u 224
      :                          @492
  6698: 33 0a 02                 a3 = 0x2
  6701: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6705: 28 3c                    jump @500
      :                          @493
  6707: 55 27 f0 00 0e           jump @495 if a0 >=u 240
      :                          @494
  6712: 33 0a 03                 a3 = 0x3
  6715: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6719: 28 2e                    jump @500
      :                          @495
  6721: 55 27 f8 00 0e           jump @497 if a0 >=u 248
      :                          @496
  6726: 33 0a 04                 a3 = 0x4
  6729: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6733: 28 20                    jump @500
      :                          @497
  6735: 55 27 fc 00 0e           jump @499 if a0 >=u 252
      :                          @498
  6740: 33 0a 05                 a3 = 0x5
  6743: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6747: 28 12                    jump @500
      :                          @499
  6749: 88 7a fe 00              a3 = a0 <u 0xfe
  6753: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6757: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6761: 85 aa 07                 a3 = a3 ^ 0x7
  6764: 01                       fallthrough
      :                          @500
  6765: ae 8a 2b                 jump @507 if a3 >=u a1
      :                          @501
  6768: 33 08                    a1 = 0
  6770: c8 b7 07                 a0 = a0 + a4
  6773: 64 ab                    a4 = a3
  6775: 01                       fallthrough
      :                          @502
  6776: c8 b9 0c                 a5 = a2 + a4
  6779: 7c cc                    a5 = u8 [a5]
  6781: 97 88 08                 a1 = a1 << 0x8
  6784: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6787: d4 c8 08                 a1 = a1 | a5
  6790: 52 0b f2                 jump @502 if a4 != 0
      :                          @503
  6793: 8a a9 03                 i32 a2 = a3 << 0x3
  6796: cf 97 07                 a0 = a0 << a2
  6799: c8 87 07                 a0 = a0 + a1
  6802: 32 00                    ret
      :                          @504
  6804: 32 00                    ret
      :                          @505
  6806: 00                       trap
      :                          @506
  6807: 00                       trap
      :                          @507
  6808: 00                       trap
      :                          @508 [@dyn 66]
  6809: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  6813: 7b 10 90 00              u64 [sp + 0x90] = ra
  6817: 7b 15 88 00              u64 [sp + 0x88] = s0
  6821: 7b 16 80 00              u64 [sp + 0x80] = s1
  6825: 64 85                    s0 = a1
  6827: 82 86 28                 s1 = u64 [a1 + 0x28]
  6830: 82 8a 20                 a3 = u64 [a1 + 0x20]
  6833: 82 6b 18                 a4 = u64 [s1 + 0x18]
  6836: 7b 17 10                 u64 [sp + 0x10] = a0
  6839: 33 08 38 02 01           a1 = 0x10238
  6844: 33 09 01                 a2 = 0x1
  6847: 7b 1a 18                 u64 [sp + 0x18] = a3
  6850: 64 a7                    a0 = a3
  6852: 7b 1b 08                 u64 [sp + 0x8] = a4
  6855: b4 b0 02 86 00           ra = 134, jump [a4]
      :                          @509 [@dyn 67]
  6860: 51 07 09                 jump @511 if a0 == 0
      :                          @510
  6863: 33 09 01                 a2 = 0x1
  6866: 28 d2 00                 jump @523
      :                          @511
  6869: 80 58 34                 a1 = u32 [s0 + 0x34]
  6872: 84 87 04                 a0 = a1 & 0x4
  6875: 52 07 21                 jump @515 if a0 != 0
      :                          @512
  6878: 82 17 10                 a0 = u64 [sp + 0x10]
  6881: 64 58                    a1 = s0
  6883: 50 20 88 00 d5 00        ra = 136, jump @524
      :                          @513 [@dyn 68]
  6889: 33 09 01                 a2 = 0x1
  6892: 52 07 b8 00              jump @523 if a0 != 0
      :                          @514
  6896: 82 57 28                 a0 = u64 [s0 + 0x28]
  6899: 82 5a 20                 a3 = u64 [s0 + 0x20]
  6902: 82 7b 18                 a4 = u64 [a0 + 0x18]
  6905: 28 99 00                 jump @521
      :                          @515
  6908: 7b 18                    u64 [sp] = a1
  6910: 33 08 72 02 01           a1 = 0x10272
  6915: 33 09 01                 a2 = 0x1
  6918: 82 17 18                 a0 = u64 [sp + 0x18]
  6921: 82 1a 08                 a3 = u64 [sp + 0x8]
  6924: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @516 [@dyn 69]
  6929: 33 09 01                 a2 = 0x1
  6932: 82 18 18                 a1 = u64 [sp + 0x18]
  6935: 52 07 8d 00              jump @523 if a0 != 0
      :                          @517
  6939: 46 11 3f 01              u8 [sp + 63] = 0x1
  6943: 7b 18 20                 u64 [sp + 0x20] = a1
  6946: 7b 16 28                 u64 [sp + 0x28] = s1
  6949: 95 17 3f                 a0 = sp + 0x3f
  6952: 7b 17 30                 u64 [sp + 0x30] = a0
  6955: 81 57 30                 a0 = i32 [s0 + 0x30]
  6958: 7c 58 38                 a1 = u8 [s0 + 0x38]
  6961: 82 59                    a2 = u64 [s0]
  6963: 82 5a 08                 a3 = u64 [s0 + 0x8]
  6966: 82 5b 10                 a4 = u64 [s0 + 0x10]
  6969: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6972: 82 16                    s1 = u64 [sp]
  6974: 7a 16 74                 u32 [sp + 0x74] = s1
  6977: 7a 17 70                 u32 [sp + 0x70] = a0
  6980: 78 18 78                 u8 [sp + 0x78] = a1
  6983: 7b 19 40                 u64 [sp + 0x40] = a2
  6986: 7b 1a 48                 u64 [sp + 0x48] = a3
  6989: 7b 1b 50                 u64 [sp + 0x50] = a4
  6992: 7b 1c 58                 u64 [sp + 0x58] = a5
  6995: 95 17 20                 a0 = sp + 0x20
  6998: 7b 17 60                 u64 [sp + 0x60] = a0
  7001: 33 07 40 02 01           a0 = 0x10240
  7006: 7b 17 68                 u64 [sp + 0x68] = a0
  7009: 95 18 40                 a1 = sp + 0x40
  7012: 82 17 10                 a0 = u64 [sp + 0x10]
  7015: 50 20 8c 00 51           ra = 140, jump @524
      :                          @518 [@dyn 70]
  7020: 52 07 63 ff              jump @510 if a0 != 0
      :                          @519
  7024: 82 18 68                 a1 = u64 [sp + 0x68]
  7027: 82 17 60                 a0 = u64 [sp + 0x60]
  7030: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7033: 33 08 70 02 01           a1 = 0x10270
  7038: 33 09 02                 a2 = 0x2
  7041: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @520 [@dyn 71]
  7046: 82 1a 18                 a3 = u64 [sp + 0x18]
  7049: 82 1b 08                 a4 = u64 [sp + 0x8]
  7052: 33 09 01                 a2 = 0x1
  7055: 52 07 15                 jump @523 if a0 != 0
      :                          @521
  7058: 33 08 73 02 01           a1 = 0x10273
  7063: 33 09 01                 a2 = 0x1
  7066: 64 a7                    a0 = a3
  7068: b4 b0 02 90 00           ra = 144, jump [a4]
      :                          @522 [@dyn 72]
  7073: 64 79                    a2 = a0
  7075: 01                       fallthrough
      :                          @523
  7076: 64 97                    a0 = a2
  7078: 82 10 90 00              ra = u64 [sp + 0x90]
  7082: 82 15 88 00              s0 = u64 [sp + 0x88]
  7086: 82 16 80 00              s1 = u64 [sp + 0x80]
  7090: 95 11 98 00              sp = sp + 0x98
  7094: 32 00                    ret
      :                          @524
  7096: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7100: 7b 10 80 00              u64 [sp + 0x80] = ra
  7104: 64 82                    t0 = a1
  7106: 80 88 34                 a1 = u32 [a1 + 0x34]
  7109: 84 89 10                 a2 = a1 & 0x10
  7112: 52 09 1b                 jump @527 if a2 != 0
      :                          @525
  7115: 84 88 20                 a1 = a1 & 0x20
  7118: 52 08 46                 jump @530 if a1 != 0
      :                          @526
  7121: 7c 77                    a0 = u8 [a0]
  7123: 33 08 01                 a1 = 0x1
  7126: 64 29                    a2 = t0
  7128: 82 10 80 00              ra = u64 [sp + 0x80]
  7132: 95 11 88 00              sp = sp + 0x88
  7136: 28 0b f6                 jump @328
      :                          @527
  7139: 7c 77                    a0 = u8 [a0]
  7141: 33 0a 81 00              a3 = 0x81
  7145: 95 18 7f                 a1 = sp + 0x7f
  7148: 33 03 57                 t1 = 0x57
  7151: 01                       fallthrough
      :                          @528
  7152: 64 ab                    a4 = a3
  7154: 84 7a 0f                 a3 = a0 & 0xf
  7157: 97 77 38                 a0 = a0 << 0x38
  7160: 98 77 3c                 a0 = a0 >> 0x3c
  7163: 88 ac 0a                 a5 = a3 <u 0xa
  7166: 33 09 30                 a2 = 0x30
  7169: da c3 09                 a2 = t1 if a5 == 0
  7172: be a9 09                 i32 a2 = a2 + a3
  7175: 78 89                    u8 [a1] = a2
  7177: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7180: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7183: 52 07 e1                 jump @528 if a0 != 0
      :                          @529
  7186: 28 31                    jump @532
      :                          @530
  7188: 7c 77                    a0 = u8 [a0]
  7190: 33 0a 81 00              a3 = 0x81
  7194: 95 18 7f                 a1 = sp + 0x7f
  7197: 33 03 37                 t1 = 0x37
  7200: 01                       fallthrough
      :                          @531
  7201: 64 ab                    a4 = a3
  7203: 84 7a 0f                 a3 = a0 & 0xf
  7206: 97 77 38                 a0 = a0 << 0x38
  7209: 98 77 3c                 a0 = a0 >> 0x3c
  7212: 88 ac 0a                 a5 = a3 <u 0xa
  7215: 33 09 30                 a2 = 0x30
  7218: da c3 09                 a2 = t1 if a5 == 0
  7221: be a9 09                 i32 a2 = a2 + a3
  7224: 78 89                    u8 [a1] = a2
  7226: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7229: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7232: 52 07 e1                 jump @531 if a0 != 0
      :                          @532
  7235: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  7238: 56 27 80 00 2b           jump @535 if a0 >u 128
      :                          @533
  7243: 9a ac 81 00              a5 = 0x81 - a3
  7247: 64 1b                    a4 = sp
  7249: c8 7b 0b                 a4 = a4 + a0
  7252: 33 09 74 02 01           a2 = 0x10274
  7257: 33 08 01                 a1 = 0x1
  7260: 33 0a 02                 a3 = 0x2
  7263: 64 27                    a0 = t0
  7265: 50 20 92 00 b7 f6        ra = 146, jump @338
      :                          @534 [@dyn 73]
  7271: 82 10 80 00              ra = u64 [sp + 0x80]
  7275: 95 11 88 00              sp = sp + 0x88
  7279: 32 00                    ret
      :                          @535
  7281: 00                       trap
