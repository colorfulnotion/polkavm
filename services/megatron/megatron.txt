// RO data = 888/888 bytes
// RW data = 16/65776 bytes
// Stack size = 65536 bytes
// RO data = [109, 101, 103, 40, 109, 101, 103, 32, 114, 101, 97, 100, 32, 32, 32, 32, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 115, 101, 114, 118, 105, 99, 101, 32, 32, 102, 105, 98, 40, 110, 61, 41, 61, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 105, 98, 40, 110, 61, 116, 114, 97, 110, 115, 102, 101, 114, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 119, 114, 105, 116, 101, 40, 110, 61, 41, 32, 110, 117, 109, 95, 116, 114, 97, 110, 115, 102, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 233, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 97, 110, 115, 102, 101, 114, 40, 100, 101, 115, 116, 58, 44, 32, 97, 109, 111, 117, 110, 116, 61, 44, 32, 103, 97, 115, 95, 97, 118, 97, 105, 108, 61, 41, 32, 82, 101, 115, 117, 108, 116, 58, 32, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 77, 101, 103, 97, 116, 114, 111, 110, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 206, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 62, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2407
// Code size = 7276 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 e0 02 00 00           jump @54
      :                          @2
    10: 28 e7 0a                 jump @175
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 a4 11                 jump @318
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 74 02 01           a2 = 0x10274
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 52 12           ra = 4, jump @328
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 ed 10                 jump @318
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 74 02 01           a2 = 0x10274
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 9b 11           ra = 8, jump @328
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 36 10                 jump @318
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 74 02 01           a2 = 0x10274
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c e4 10           ra = 12, jump @328
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   578: 7b 10 18                 u64 [sp + 0x18] = ra
   581: 7b 15 10                 u64 [sp + 0x10] = s0
   584: 7b 16 08                 u64 [sp + 0x8] = s1
   587: 64 86                    s1 = a1
   589: 64 78                    a1 = a0
   591: 33 09 04                 a2 = 0x4
   594: 33 07 00 00 01           a0 = 0x10000
   599: ac 96 7c                 jump @51 if s1 <u a2
      :                          @40
   602: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
   605: 51 06 76                 jump @51 if s1 == 0
      :                          @41
   608: 95 87 04                 a0 = a1 + 0x4
   611: 7d 78                    a1 = i8 [a0]
   613: 33 05 01                 s0 = 0x1
   616: 59 08 3a                 jump @49 if a1 >=s 0
      :                          @42
   619: 84 89 ff 00              a2 = a1 & 0xff
   623: 33 05 02                 s0 = 0x2
   626: 53 29 c0 00 2d           jump @48 if a2 <u 192
      :                          @43
   631: 33 05 03                 s0 = 0x3
   634: 53 29 e0 00 25           jump @48 if a2 <u 224
      :                          @44
   639: 33 05 04                 s0 = 0x4
   642: 53 29 f0 00 1d           jump @48 if a2 <u 240
      :                          @45
   647: 33 05 05                 s0 = 0x5
   650: 53 29 f8 00 15           jump @48 if a2 <u 248
      :                          @46
   655: 33 05 06                 s0 = 0x6
   658: 53 29 fc 00 0d           jump @48 if a2 <u 252
      :                          @47
   663: 88 98 fe 00              a1 = a2 <u 0xfe
   667: 9a 85 08                 s0 = 0x8 - a1
   670: 01                       fallthrough
      :                          @48
   671: ac 56 45                 jump @53 if s1 <u s0
      :                          @49
   674: 64 58                    a1 = s0
   676: 7b 17                    u64 [sp] = a0
   678: 50 10 0e 4f 17           ra = 14, jump @474
      :                          @50 [@dyn 7]
   683: 64 78                    a1 = a0
   685: e4 56 07                 a0 = maxu(s1, s0)
   688: c9 57 07                 a0 = a0 - s0
   691: d8 87 09                 a2 = a0 <u a1
   694: e4 87 07                 a0 = maxu(a0, a1)
   697: c9 87 07                 a0 = a0 - a1
   700: 88 77 20                 a0 = a0 <u 0x20
   703: d4 79 09                 a2 = a2 | a0
   706: 82 17                    a0 = u64 [sp]
   708: c8 75 05                 s0 = s0 + a0
   711: 94 98                    a1 = 0 if a2 != 0
   713: 33 07 00 00 01           a0 = 0x10000
   718: da 95 07                 a0 = s0 if a2 == 0
   721: 28 05                    jump @52
      :                          @51
   723: 33 08                    a1 = 0
   725: 01                       fallthrough
      :                          @52
   726: 82 10 18                 ra = u64 [sp + 0x18]
   729: 82 15 10                 s0 = u64 [sp + 0x10]
   732: 82 16 08                 s1 = u64 [sp + 0x8]
   735: 95 11 20                 sp = sp + 0x20
   738: 32 00                    ret
      :                          @53
   740: 00                       trap
      :                          @54 [export #1: 'accumulate']
   741: 95 11 a0 fe              sp = sp + 0xfffffffffffffea0
   745: 7b 10 58 01              u64 [sp + 0x158] = ra
   749: 7b 15 50 01              u64 [sp + 0x150] = s0
   753: 7b 16 48 01              u64 [sp + 0x148] = s1
   757: 33 09 08                 a2 = 0x8
   760: ac 98 60 01              jump @98 if a1 <u a2
      :                          @55
   764: 51 17 fc f1 07           jump @171 if a0 == 4294967292
      :                          @56
   769: 51 07 ec 07              jump @171 if a0 == 0
      :                          @57
   773: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   776: 95 75 08                 s0 = a0 + 0x8
   779: 51 0a 45                 jump @67 if a3 == 0
      :                          @58
   782: 7d 58                    a1 = i8 [s0]
   784: 33 06 01                 s1 = 0x1
   787: 59 08 40                 jump @68 if a1 >=s 0
      :                          @59
   790: 84 89 ff 00              a2 = a1 & 0xff
   794: 33 06 02                 s1 = 0x2
   797: 53 29 c0 00 2d           jump @65 if a2 <u 192
      :                          @60
   802: 33 06 03                 s1 = 0x3
   805: 53 29 e0 00 25           jump @65 if a2 <u 224
      :                          @61
   810: 33 06 04                 s1 = 0x4
   813: 53 29 f0 00 1d           jump @65 if a2 <u 240
      :                          @62
   818: 33 06 05                 s1 = 0x5
   821: 53 29 f8 00 15           jump @65 if a2 <u 248
      :                          @63
   826: 33 06 06                 s1 = 0x6
   829: 53 29 fc 00 0d           jump @65 if a2 <u 252
      :                          @64
   834: 88 98 fe 00              a1 = a2 <u 0xfe
   838: 9a 86 08                 s1 = 0x8 - a1
   841: 01                       fallthrough
      :                          @65
   842: ae 6a 09                 jump @68 if a3 >=u s1
      :                          @66
   845: 28 0b 01                 jump @98
      :                          @67
   848: 33 06                    s1 = 0
   850: 01                       fallthrough
      :                          @68
   851: 7b 16 60                 u64 [sp + 0x60] = s1
   854: 64 57                    a0 = s0
   856: 64 68                    a1 = s1
   858: 64 a6                    s1 = a3
   860: 50 10 10 99 16           ra = 16, jump @474
      :                          @69 [@dyn 8]
   865: 82 1a 60                 a3 = u64 [sp + 0x60]
   868: 51 07 f4 00              jump @98 if a0 == 0
      :                          @70
   872: e4 a6 07                 a0 = maxu(s1, a3)
   875: c9 a7 07                 a0 = a0 - a3
   878: 53 17 60 ea 00           jump @98 if a0 <u 96
      :                          @71
   883: c8 5a 08                 a1 = a3 + s0
   886: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   889: 95 87 60                 a0 = a1 + 0x60
   892: 7b 17 60                 u64 [sp + 0x60] = a0
   895: 51 06 4c                 jump @82 if s1 == 0
      :                          @72
   898: 7d 78                    a1 = i8 [a0]
   900: 33 05 01                 s0 = 0x1
   903: 59 08 37                 jump @79 if a1 >=s 0
      :                          @73
   906: 84 89 ff 00              a2 = a1 & 0xff
   910: 33 05 02                 s0 = 0x2
   913: 53 29 c0 00 2d           jump @79 if a2 <u 192
      :                          @74
   918: 33 05 03                 s0 = 0x3
   921: 53 29 e0 00 25           jump @79 if a2 <u 224
      :                          @75
   926: 33 05 04                 s0 = 0x4
   929: 53 29 f0 00 1d           jump @79 if a2 <u 240
      :                          @76
   934: 33 05 05                 s0 = 0x5
   937: 53 29 f8 00 15           jump @79 if a2 <u 248
      :                          @77
   942: 33 05 06                 s0 = 0x6
   945: 53 29 fc 00 0d           jump @79 if a2 <u 252
      :                          @78
   950: 88 98 fe 00              a1 = a2 <u 0xfe
   954: 9a 85 08                 s0 = 0x8 - a1
   957: 01                       fallthrough
      :                          @79
   958: ac 56 30 07              jump @172 if s1 <u s0
      :                          @80
   962: 64 58                    a1 = s0
   964: 50 10 12 31 16           ra = 18, jump @474
      :                          @81 [@dyn 9]
   969: 28 07                    jump @83
      :                          @82
   971: 33 05                    s0 = 0
   973: 33 07                    a0 = 0
   975: 01                       fallthrough
      :                          @83
   976: e4 56 08                 a1 = maxu(s1, s0)
   979: c9 58 08                 a1 = a1 - s0
   982: e4 78 08                 a1 = maxu(a1, a0)
   985: c9 78 08                 a1 = a1 - a0
   988: 33 09 20                 a2 = 0x20
   991: ac 98 79                 jump @98 if a1 <u a2
      :                          @84
   994: 82 19 60                 a2 = u64 [sp + 0x60]
   997: c8 95 05                 s0 = s0 + a2
  1000: c8 57 07                 a0 = a0 + s0
  1003: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  1006: 95 77 20                 a0 = a0 + 0x20
  1009: 7b 17 60                 u64 [sp + 0x60] = a0
  1012: 51 05 5f                 jump @97 if s0 == 0
      :                          @85
  1015: 7d 78                    a1 = i8 [a0]
  1017: 33 06 01                 s1 = 0x1
  1020: 59 08 37                 jump @92 if a1 >=s 0
      :                          @86
  1023: 84 89 ff 00              a2 = a1 & 0xff
  1027: 33 06 02                 s1 = 0x2
  1030: 53 29 c0 00 2d           jump @92 if a2 <u 192
      :                          @87
  1035: 33 06 03                 s1 = 0x3
  1038: 53 29 e0 00 25           jump @92 if a2 <u 224
      :                          @88
  1043: 33 06 04                 s1 = 0x4
  1046: 53 29 f0 00 1d           jump @92 if a2 <u 240
      :                          @89
  1051: 33 06 05                 s1 = 0x5
  1054: 53 29 f8 00 15           jump @92 if a2 <u 248
      :                          @90
  1059: 33 06 06                 s1 = 0x6
  1062: 53 29 fc 00 0d           jump @92 if a2 <u 252
      :                          @91
  1067: 88 98 fe 00              a1 = a2 <u 0xfe
  1071: 9a 86 08                 s1 = 0x8 - a1
  1074: 01                       fallthrough
      :                          @92
  1075: ac 65 bc 06              jump @173 if s0 <u s1
      :                          @93
  1079: 64 68                    a1 = s1
  1081: 50 10 14 bc 15           ra = 20, jump @474
      :                          @94 [@dyn 10]
  1086: ae 56 1a                 jump @98 if s1 >=u s0
      :                          @95
  1089: 82 17 60                 a0 = u64 [sp + 0x60]
  1092: c8 67 07                 a0 = a0 + s1
  1095: 7c 78                    a1 = u8 [a0]
  1097: 51 08 2b                 jump @100 if a1 == 0
      :                          @96
  1100: 33 08                    a1 = 0
  1102: 33 05                    s0 = 0
  1104: 28 9f 00                 jump @113
      :                          @97
  1107: 33 06                    s1 = 0
  1109: 56 05 ec                 jump @95 if s0 >u 0
      :                          @98
  1112: 33 08                    a1 = 0
  1114: 33 05 00 00 01           s0 = 0x10000
  1119: 01                       fallthrough
      :                          @99
  1120: 64 57                    a0 = s0
  1122: 82 10 58 01              ra = u64 [sp + 0x158]
  1126: 82 15 50 01              s0 = u64 [sp + 0x150]
  1130: 82 16 48 01              s1 = u64 [sp + 0x148]
  1134: 95 11 60 01              sp = sp + 0x160
  1138: 32 00                    ret
      :                          @100
  1140: e4 65 08                 a1 = maxu(s0, s1)
  1143: c9 68 08                 a1 = a1 - s1
  1146: 95 75 01                 s0 = a0 + 0x1
  1149: 33 07 01                 a0 = 0x1
  1152: e4 78 07                 a0 = maxu(a1, a0)
  1155: 33 09 02                 a2 = 0x2
  1158: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1161: ae 98 09                 jump @102 if a1 >=u a2
      :                          @101
  1164: 33 06                    s1 = 0
  1166: 33 07                    a0 = 0
  1168: 28 52                    jump @112
      :                          @102
  1170: 7d 57                    a0 = i8 [s0]
  1172: 33 06 01                 s1 = 0x1
  1175: 59 07 37                 jump @109 if a0 >=s 0
      :                          @103
  1178: 84 77 ff 00              a0 = a0 & 0xff
  1182: 33 06 02                 s1 = 0x2
  1185: 53 27 c0 00 2d           jump @109 if a0 <u 192
      :                          @104
  1190: 33 06 03                 s1 = 0x3
  1193: 53 27 e0 00 25           jump @109 if a0 <u 224
      :                          @105
  1198: 33 06 04                 s1 = 0x4
  1201: 53 27 f0 00 1d           jump @109 if a0 <u 240
      :                          @106
  1206: 33 06 05                 s1 = 0x5
  1209: 53 27 f8 00 15           jump @109 if a0 <u 248
      :                          @107
  1214: 33 06 06                 s1 = 0x6
  1217: 53 27 fc 00 0d           jump @109 if a0 <u 252
      :                          @108
  1222: 88 77 fe 00              a0 = a0 <u 0xfe
  1226: 9a 76 08                 s1 = 0x8 - a0
  1229: 01                       fallthrough
      :                          @109
  1230: 7b 1a 60                 u64 [sp + 0x60] = a3
  1233: ac 6a 1f 06              jump @174 if a3 <u s1
      :                          @110
  1237: 64 57                    a0 = s0
  1239: 64 68                    a1 = s1
  1241: 50 10 16 1c 15           ra = 22, jump @474
      :                          @111 [@dyn 11]
  1246: 82 1a 60                 a3 = u64 [sp + 0x60]
  1249: 01                       fallthrough
      :                          @112
  1250: c8 65 05                 s0 = s0 + s1
  1253: e4 6a 08                 a1 = maxu(a3, s1)
  1256: c9 68 08                 a1 = a1 - s1
  1259: e6 78 08                 a1 = minu(a1, a0)
  1262: 01                       fallthrough
      :                          @113
  1263: 80 57                    a0 = u32 [s0]
  1265: c8 58 08                 a1 = a1 + s0
  1268: 7b 17 68                 u64 [sp + 0x68] = a0
  1271: 80 88 fc                 a1 = u32 [a1 + 0xfffffffffffffffc]
  1274: 7b 18 60                 u64 [sp + 0x60] = a1
  1277: 7b 18 70                 u64 [sp + 0x70] = a1
  1280: 33 08 10 00 03           a1 = 0x30010
  1285: 7b 18 58                 u64 [sp + 0x58] = a1
  1288: 33 06 34 00 03           s1 = 0x30034
  1293: 33 09 01                 a2 = 0x1
  1296: 33 0c 0c                 a5 = 0xc
  1299: 33 0a 34 00 03           a3 = 0x30034
  1304: 33 0b                    a4 = 0
  1306: 0a 02                    ecalli 2 // 'read'
  1308: 33 05 40 00 03           s0 = 0x30040
  1313: 33 09 01                 a2 = 0x1
  1316: 33 0c 0c                 a5 = 0xc
  1319: 82 17 60                 a0 = u64 [sp + 0x60]
  1322: 82 18 58                 a1 = u64 [sp + 0x58]
  1325: 33 0a 40 00 03           a3 = 0x30040
  1330: 33 0b                    a4 = 0
  1332: 0a 02                    ecalli 2 // 'read'
  1334: 39 07 38 00 03           a0 = i32 [0x30038]
  1339: 49 11 50 ff ff fe        u64 [sp + 80] = 0xfffffffffffeffff
  1345: 39 08 34 00 03           a1 = i32 [0x30034]
  1350: 7a 17 78                 u32 [sp + 0x78] = a0
  1353: 39 07 3c 00 03           a0 = i32 [0x3003c]
  1358: 7b 17 60                 u64 [sp + 0x60] = a0
  1361: 34 07 45 00 03           a0 = u8 [0x30045]
  1366: 34 09 44 00 03           a2 = u8 [0x30044]
  1371: 34 0a 46 00 03           a3 = u8 [0x30046]
  1376: 35 0b 47 00 03           a4 = i8 [0x30047]
  1381: 8a 77 08                 i32 a0 = a0 << 0x8
  1384: d4 97 07                 a0 = a0 | a2
  1387: 8a a9 10                 i32 a2 = a3 << 0x10
  1390: 8a ba 18                 i32 a3 = a4 << 0x18
  1393: d4 a9 09                 a2 = a2 | a3
  1396: d4 97 07                 a0 = a0 | a2
  1399: 7a 17 7c                 u32 [sp + 0x7c] = a0
  1402: 34 07 49 00 03           a0 = u8 [0x30049]
  1407: 34 09 48 00 03           a2 = u8 [0x30048]
  1412: 34 0a 4a 00 03           a3 = u8 [0x3004a]
  1417: 34 0b 4b 00 03           a4 = u8 [0x3004b]
  1422: 97 77 08                 a0 = a0 << 0x8
  1425: d4 97 07                 a0 = a0 | a2
  1428: 7b 17 48                 u64 [sp + 0x48] = a0
  1431: 97 aa 10                 a3 = a3 << 0x10
  1434: 97 bb 18                 a4 = a4 << 0x18
  1437: d4 ba 0a                 a3 = a3 | a4
  1440: 7b 1a 40                 u64 [sp + 0x40] = a3
  1443: 7a 18 80 00              u32 [sp + 0x80] = a1
  1447: 95 19 80 00              a2 = sp + 0x80
  1451: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1455: 33 08 06                 a1 = 0x6
  1458: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1462: 95 17 68                 a0 = sp + 0x68
  1465: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1469: 33 07 0a                 a0 = 0xa
  1472: 7b 17 38                 u64 [sp + 0x38] = a0
  1475: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1479: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1483: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1487: 95 17 78                 a0 = sp + 0x78
  1490: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1494: 7b 18 58                 u64 [sp + 0x58] = a1
  1497: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1501: 33 07 30 00 01           a0 = 0x10030
  1506: 7b 17 18 01              u64 [sp + 0x118] = a0
  1510: 49 21 20 01 04           u64 [sp + 288] = 0x4
  1515: 49 21 38 01              u64 [sp + 312] = 0
  1519: 95 18 b0 00              a1 = sp + 0xb0
  1523: 7b 18 28 01              u64 [sp + 0x128] = a1
  1527: 49 21 30 01 04           u64 [sp + 304] = 0x4
  1532: 95 17 00 01              a0 = sp + 0x100
  1536: 95 18 18 01              a1 = sp + 0x118
  1540: 50 10 18 b8 08           ra = 24, jump @248
      :                          @114 [@dyn 12]
  1545: 82 15 08 01              s0 = u64 [sp + 0x108]
  1549: 82 1b 10 01              a4 = u64 [sp + 0x110]
  1553: 82 16 00 01              s1 = u64 [sp + 0x100]
  1557: 33 07 02                 a0 = 0x2
  1560: 33 08                    a1 = 0
  1562: 33 09                    a2 = 0
  1564: 64 5a                    a3 = s0
  1566: 33 00 1a                 ra = 0x1a
  1569: 0a 64                    ecalli 100 // 'log'
  1571: 01                       fallthrough
      :                          @115 [@dyn 13]
  1572: 82 17 50                 a0 = u64 [sp + 0x50]
  1575: c8 67 07                 a0 = a0 + s1
  1578: 53 37 00 00 ff 27        jump @121 if a0 <u 4294901760
      :                          @116
  1584: 33 07 e0 00 03           a0 = 0x300e0
  1589: 95 77 00 00 01           a0 = a0 + 0x10000
  1594: 01                       fallthrough
      :                          @117
  1595: 82 78                    a1 = u64 [a0]
  1597: c9 87 09                 a2 = a0 - a1
  1600: ab 59 11                 jump @121 if a2 != s0
      :                          @118
  1603: c9 68 09                 a2 = a1 - s1
  1606: 01                       fallthrough
      :                          @119
  1607: 82 7a                    a3 = u64 [a0]
  1609: ab 8a f2                 jump @117 if a3 != a1
      :                          @120
  1612: 7b 79                    u64 [a0] = a2
  1614: 33 0b                    a4 = 0
  1616: 01                       fallthrough
      :                          @121
  1617: 82 17 48                 a0 = u64 [sp + 0x48]
  1620: 82 18 40                 a1 = u64 [sp + 0x40]
  1623: d4 87 07                 a0 = a0 | a1
  1626: 7b 17 48                 u64 [sp + 0x48] = a0
  1629: 95 19 80 00              a2 = sp + 0x80
  1633: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1637: 82 18 58                 a1 = u64 [sp + 0x58]
  1640: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1644: 95 17 70                 a0 = sp + 0x70
  1647: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1651: 82 17 38                 a0 = u64 [sp + 0x38]
  1654: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1658: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1662: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1666: 95 17 7c                 a0 = sp + 0x7c
  1669: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1673: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1677: 33 07 80 00 01           a0 = 0x10080
  1682: 7b 17 18 01              u64 [sp + 0x118] = a0
  1686: 49 21 20 01 04           u64 [sp + 288] = 0x4
  1691: 49 21 38 01              u64 [sp + 312] = 0
  1695: 95 18 b0 00              a1 = sp + 0xb0
  1699: 7b 18 28 01              u64 [sp + 0x128] = a1
  1703: 49 21 30 01 04           u64 [sp + 304] = 0x4
  1708: 95 17 00 01              a0 = sp + 0x100
  1712: 95 18 18 01              a1 = sp + 0x118
  1716: 50 10 1c 08 08           ra = 28, jump @248
      :                          @122 [@dyn 14]
  1721: 82 15 08 01              s0 = u64 [sp + 0x108]
  1725: 82 1b 10 01              a4 = u64 [sp + 0x110]
  1729: 82 16 00 01              s1 = u64 [sp + 0x100]
  1733: 33 07 02                 a0 = 0x2
  1736: 33 08                    a1 = 0
  1738: 33 09                    a2 = 0
  1740: 64 5a                    a3 = s0
  1742: 33 00 1e                 ra = 0x1e
  1745: 0a 64                    ecalli 100 // 'log'
  1747: 01                       fallthrough
      :                          @123 [@dyn 15]
  1748: 82 17 50                 a0 = u64 [sp + 0x50]
  1751: c8 67 07                 a0 = a0 + s1
  1754: 53 37 00 00 ff 27        jump @129 if a0 <u 4294901760
      :                          @124
  1760: 33 07 e0 00 03           a0 = 0x300e0
  1765: 95 77 00 00 01           a0 = a0 + 0x10000
  1770: 01                       fallthrough
      :                          @125
  1771: 82 78                    a1 = u64 [a0]
  1773: c9 87 09                 a2 = a0 - a1
  1776: ab 59 11                 jump @129 if a2 != s0
      :                          @126
  1779: c9 68 09                 a2 = a1 - s1
  1782: 01                       fallthrough
      :                          @127
  1783: 82 7a                    a3 = u64 [a0]
  1785: ab 8a f2                 jump @125 if a3 != a1
      :                          @128
  1788: 7b 79                    u64 [a0] = a2
  1790: 33 0b                    a4 = 0
  1792: 01                       fallthrough
      :                          @129
  1793: 81 18 78                 a1 = i32 [sp + 0x78]
  1796: 81 19 7c                 a2 = i32 [sp + 0x7c]
  1799: 80 17 80 00              a0 = u32 [sp + 0x80]
  1803: be 89 09                 i32 a2 = a2 + a1
  1806: 7a 19 84 00              u32 [sp + 0x84] = a2
  1810: 82 18 60                 a1 = u64 [sp + 0x60]
  1813: 82 1a 48                 a3 = u64 [sp + 0x48]
  1816: be 8a 0a                 i32 a3 = a3 + a1
  1819: 7b 17 88 00              u64 [sp + 0x88] = a0
  1823: 97 78 01                 a1 = a0 << 0x1
  1826: 95 88 01                 a1 = a1 + 0x1
  1829: 97 88 20                 a1 = a1 << 0x20
  1832: 98 88 20                 a1 = a1 >> 0x20
  1835: 7b 18 90 00              u64 [sp + 0x90] = a1
  1839: 49 21 98 00 40 9c 00     u64 [sp + 152] = 0x9c40
  1846: 48 21 a0 00              u32 [sp + 160] = 0
  1850: 51 07 3d 02              jump @153 if a0 == 0
      :                          @130
  1854: 7b 1a                    u64 [sp] = a3
  1856: 7b 19 08                 u64 [sp + 0x8] = a2
  1859: 33 06                    s1 = 0
  1861: 33 0a                    a3 = 0
  1863: 14 08 ab aa aa aa 00 00 00 00 a1 = 0xaaaaaaab
  1873: ca 87 08                 a1 = a0 * a1
  1876: 98 88 21                 a1 = a1 >> 0x21
  1879: 97 89 01                 a2 = a1 << 0x1
  1882: bf 87 08                 i32 a1 = a0 - a1
  1885: bf 98 08                 i32 a1 = a1 - a2
  1888: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
  1891: 7b 19 20                 u64 [sp + 0x20] = a2
  1894: 86 88 02                 a1 = a1 | 0x2
  1897: 7b 18 18                 u64 [sp + 0x18] = a1
  1900: 33 08 58 00 03           a1 = 0x30058
  1905: 7b 18 40                 u64 [sp + 0x40] = a1
  1908: 33 08 06                 a1 = 0x6
  1911: 7b 18 38                 u64 [sp + 0x38] = a1
  1914: 33 08 0a                 a1 = 0xa
  1917: 7b 18 30                 u64 [sp + 0x30] = a1
  1920: 33 05 e0 00 03           s0 = 0x300e0
  1925: 95 55 00 00 01           s0 = s0 + 0x10000
  1930: 33 08 60 01 01           a1 = 0x10160
  1935: 7b 18 28                 u64 [sp + 0x28] = a1
  1938: 83 77                    i32 a0 = a0 + 0
  1940: 7b 17 10                 u64 [sp + 0x10] = a0
  1943: 28 13                    jump @133
      :                          @131
  1945: 82 16 60                 s1 = u64 [sp + 0x60]
  1948: 82 1a 58                 a3 = u64 [sp + 0x58]
  1951: 01                       fallthrough
      :                          @132
  1952: 83 aa 01                 i32 a3 = a3 + 0x1
  1955: 82 17 10                 a0 = u64 [sp + 0x10]
  1958: aa 7a c7 01              jump @152 if a3 == a0
      :                          @133
  1962: 7a 1a a4 00              u32 [sp + 0xa4] = a3
  1966: 82 17 18                 a0 = u64 [sp + 0x18]
  1969: 7b 1a 58                 u64 [sp + 0x58] = a3
  1972: 52 17 02 dd 00           jump @142 if a0 != 2
      :                          @134
  1977: 82 17 68                 a0 = u64 [sp + 0x68]
  1980: 82 18 88 00              a1 = u64 [sp + 0x88]
  1984: 82 19 98 00              a2 = u64 [sp + 0x98]
  1988: 82 1a 40                 a3 = u64 [sp + 0x40]
  1991: 0a 0b                    ecalli 11 // 'transfer'
  1993: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  1997: 83 66 01                 i32 s1 = s1 + 0x1
  2000: 7b 16 60                 u64 [sp + 0x60] = s1
  2003: 7a 16 a0 00              u32 [sp + 0xa0] = s1
  2007: 95 17 a4 00              a0 = sp + 0xa4
  2011: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2015: 82 17 38                 a0 = u64 [sp + 0x38]
  2018: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2022: 95 17 68                 a0 = sp + 0x68
  2025: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2029: 82 17 30                 a0 = u64 [sp + 0x30]
  2032: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2036: 95 18 88 00              a1 = sp + 0x88
  2040: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  2044: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2048: 95 18 98 00              a1 = sp + 0x98
  2052: 7b 18 e0 00              u64 [sp + 0xe0] = a1
  2056: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  2060: 95 18 a8 00              a1 = sp + 0xa8
  2064: 7b 18 f0 00              u64 [sp + 0xf0] = a1
  2068: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2072: 82 17 28                 a0 = u64 [sp + 0x28]
  2075: 7b 17 18 01              u64 [sp + 0x118] = a0
  2079: 49 21 20 01 05           u64 [sp + 288] = 0x5
  2084: 49 21 38 01              u64 [sp + 312] = 0
  2088: 95 18 b0 00              a1 = sp + 0xb0
  2092: 7b 18 28 01              u64 [sp + 0x128] = a1
  2096: 49 21 30 01 05           u64 [sp + 304] = 0x5
  2101: 95 17 00 01              a0 = sp + 0x100
  2105: 95 18 18 01              a1 = sp + 0x118
  2109: 50 10 20 7f 06           ra = 32, jump @248
      :                          @135 [@dyn 16]
  2114: 82 16 08 01              s1 = u64 [sp + 0x108]
  2118: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2122: 82 17 00 01              a0 = u64 [sp + 0x100]
  2126: 7b 17 48                 u64 [sp + 0x48] = a0
  2129: 33 07 02                 a0 = 0x2
  2132: 33 08                    a1 = 0
  2134: 33 09                    a2 = 0
  2136: 64 6a                    a3 = s1
  2138: 33 00 22                 ra = 0x22
  2141: 0a 64                    ecalli 100 // 'log'
  2143: 01                       fallthrough
      :                          @136 [@dyn 17]
  2144: 82 1b 48                 a4 = u64 [sp + 0x48]
  2147: 82 17 50                 a0 = u64 [sp + 0x50]
  2150: c8 b7 07                 a0 = a0 + a4
  2153: 53 37 00 00 ff 21        jump @141 if a0 <u 4294901760
      :                          @137
  2159: 82 57                    a0 = u64 [s0]
  2161: c9 75 08                 a1 = s0 - a0
  2164: ab 68 16                 jump @141 if a1 != s1
      :                          @138
  2167: c9 b7 08                 a1 = a0 - a4
  2170: 01                       fallthrough
      :                          @139
  2171: 82 59                    a2 = u64 [s0]
  2173: ab 79 f2                 jump @137 if a2 != a0
      :                          @140
  2176: 7b 58                    u64 [s0] = a1
  2178: 82 16 60                 s1 = u64 [sp + 0x60]
  2181: 82 1a 58                 a3 = u64 [sp + 0x58]
  2184: 28 09                    jump @142
      :                          @141
  2186: 82 16 60                 s1 = u64 [sp + 0x60]
  2189: 82 1a 58                 a3 = u64 [sp + 0x58]
  2192: 01                       fallthrough
      :                          @142
  2193: 82 17 20                 a0 = u64 [sp + 0x20]
  2196: 55 17 02 0c ff           jump @132 if a0 >=u 2
      :                          @143
  2201: 82 17 70                 a0 = u64 [sp + 0x70]
  2204: 82 18 90 00              a1 = u64 [sp + 0x90]
  2208: 82 19 98 00              a2 = u64 [sp + 0x98]
  2212: 82 1a 40                 a3 = u64 [sp + 0x40]
  2215: 0a 0b                    ecalli 11 // 'transfer'
  2217: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  2221: 83 66 01                 i32 s1 = s1 + 0x1
  2224: 7b 16 60                 u64 [sp + 0x60] = s1
  2227: 7a 16 a0 00              u32 [sp + 0xa0] = s1
  2231: 95 17 a4 00              a0 = sp + 0xa4
  2235: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2239: 82 17 38                 a0 = u64 [sp + 0x38]
  2242: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2246: 95 17 70                 a0 = sp + 0x70
  2249: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2253: 82 17 30                 a0 = u64 [sp + 0x30]
  2256: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2260: 95 18 90 00              a1 = sp + 0x90
  2264: 7b 18 d0 00              u64 [sp + 0xd0] = a1
  2268: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2272: 95 18 98 00              a1 = sp + 0x98
  2276: 7b 18 e0 00              u64 [sp + 0xe0] = a1
  2280: 7b 17 e8 00              u64 [sp + 0xe8] = a0
  2284: 95 18 a8 00              a1 = sp + 0xa8
  2288: 7b 18 f0 00              u64 [sp + 0xf0] = a1
  2292: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2296: 82 17 28                 a0 = u64 [sp + 0x28]
  2299: 7b 17 18 01              u64 [sp + 0x118] = a0
  2303: 49 21 20 01 05           u64 [sp + 288] = 0x5
  2308: 49 21 38 01              u64 [sp + 312] = 0
  2312: 95 18 b0 00              a1 = sp + 0xb0
  2316: 7b 18 28 01              u64 [sp + 0x128] = a1
  2320: 49 21 30 01 05           u64 [sp + 304] = 0x5
  2325: 95 17 00 01              a0 = sp + 0x100
  2329: 95 18 18 01              a1 = sp + 0x118
  2333: 50 10 24 9f 05           ra = 36, jump @248
      :                          @144 [@dyn 18]
  2338: 82 16 08 01              s1 = u64 [sp + 0x108]
  2342: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2346: 82 17 00 01              a0 = u64 [sp + 0x100]
  2350: 7b 17 48                 u64 [sp + 0x48] = a0
  2353: 33 07 02                 a0 = 0x2
  2356: 33 08                    a1 = 0
  2358: 33 09                    a2 = 0
  2360: 64 6a                    a3 = s1
  2362: 33 00 26                 ra = 0x26
  2365: 0a 64                    ecalli 100 // 'log'
  2367: 01                       fallthrough
      :                          @145 [@dyn 19]
  2368: 82 1b 48                 a4 = u64 [sp + 0x48]
  2371: 82 17 50                 a0 = u64 [sp + 0x50]
  2374: c8 b7 07                 a0 = a0 + a4
  2377: 53 37 00 00 ff 50 fe     jump @131 if a0 <u 4294901760
      :                          @146
  2384: 82 57                    a0 = u64 [s0]
  2386: c9 75 08                 a1 = s0 - a0
  2389: ab 68 44 fe              jump @131 if a1 != s1
      :                          @147
  2393: c9 b7 08                 a1 = a0 - a4
  2396: 01                       fallthrough
      :                          @148
  2397: 82 59                    a2 = u64 [s0]
  2399: ab 79 f1                 jump @146 if a2 != a0
      :                          @149
  2402: 7b 58                    u64 [s0] = a1
  2404: 33 0a                    a3 = 0
  2406: 01                       fallthrough
      :                          @150
  2407: ab 79 e9                 jump @146 if a2 != a0
      :                          @151
  2410: 28 2f fe                 jump @131
      :                          @152
  2413: 81 17 80 00              a0 = i32 [sp + 0x80]
  2417: 82 19 08                 a2 = u64 [sp + 0x8]
  2420: 82 1a                    a3 = u64 [sp]
  2422: 01                       fallthrough
      :                          @153
  2423: 3d 07 4c 00 03           u32 [0x3004c] = a0
  2428: 33 07 4c 00 03           a0 = 0x3004c
  2433: 3d 09 50 00 03           u32 [0x30050] = a2
  2438: 7b 17 58                 u64 [sp + 0x58] = a0
  2441: 3d 0a 54 00 03           u32 [0x30054] = a3
  2446: 95 17 80 00              a0 = sp + 0x80
  2450: 7b 17 18 01              u64 [sp + 0x118] = a0
  2454: 33 07 06                 a0 = 0x6
  2457: 7b 17 20 01              u64 [sp + 0x120] = a0
  2461: 95 18 84 00              a1 = sp + 0x84
  2465: 7b 18 28 01              u64 [sp + 0x128] = a1
  2469: 7b 17 60                 u64 [sp + 0x60] = a0
  2472: 7b 17 30 01              u64 [sp + 0x130] = a0
  2476: 33 07 c0 00 01           a0 = 0x100c0
  2481: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2485: 49 21 b8 00 02           u64 [sp + 184] = 0x2
  2490: 49 21 d0 00              u64 [sp + 208] = 0
  2494: 95 18 18 01              a1 = sp + 0x118
  2498: 7b 18 c0 00              u64 [sp + 0xc0] = a1
  2502: 49 21 c8 00 02           u64 [sp + 200] = 0x2
  2507: 95 17 00 01              a0 = sp + 0x100
  2511: 95 18 b0 00              a1 = sp + 0xb0
  2515: 50 10 28 e9 04           ra = 40, jump @248
      :                          @154 [@dyn 20]
  2520: 82 16 08 01              s1 = u64 [sp + 0x108]
  2524: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2528: 82 15 00 01              s0 = u64 [sp + 0x100]
  2532: 33 07 02                 a0 = 0x2
  2535: 33 08                    a1 = 0
  2537: 33 09                    a2 = 0
  2539: 64 6a                    a3 = s1
  2541: 33 00 2a                 ra = 0x2a
  2544: 0a 64                    ecalli 100 // 'log'
  2546: 01                       fallthrough
      :                          @155 [@dyn 21]
  2547: 82 17 50                 a0 = u64 [sp + 0x50]
  2550: c8 57 07                 a0 = a0 + s0
  2553: 53 37 00 00 ff 25        jump @161 if a0 <u 4294901760
      :                          @156
  2559: 33 07 e0 00 03           a0 = 0x300e0
  2564: 95 77 00 00 01           a0 = a0 + 0x10000
  2569: 01                       fallthrough
      :                          @157
  2570: 82 78                    a1 = u64 [a0]
  2572: c9 87 09                 a2 = a0 - a1
  2575: ab 69 0f                 jump @161 if a2 != s1
      :                          @158
  2578: c9 58 09                 a2 = a1 - s0
  2581: 01                       fallthrough
      :                          @159
  2582: 82 7a                    a3 = u64 [a0]
  2584: ab 8a f2                 jump @157 if a3 != a1
      :                          @160
  2587: 7b 79                    u64 [a0] = a2
  2589: 01                       fallthrough
      :                          @161
  2590: 33 07 10 00 03           a0 = 0x30010
  2595: 33 08 01                 a1 = 0x1
  2598: 33 0a 0c                 a3 = 0xc
  2601: 82 19 58                 a2 = u64 [sp + 0x58]
  2604: 0a 03                    ecalli 3 // 'write'
  2606: 95 17 80 00              a0 = sp + 0x80
  2610: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2614: 82 17 60                 a0 = u64 [sp + 0x60]
  2617: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2621: 95 18 84 00              a1 = sp + 0x84
  2625: 7b 18 c0 00              u64 [sp + 0xc0] = a1
  2629: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  2633: 95 17 a0 00              a0 = sp + 0xa0
  2637: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  2641: 33 07 02                 a0 = 0x2
  2644: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2648: 33 07 00 01 01           a0 = 0x10100
  2653: 7b 17 18 01              u64 [sp + 0x118] = a0
  2657: 49 21 20 01 03           u64 [sp + 288] = 0x3
  2662: 49 21 38 01              u64 [sp + 312] = 0
  2666: 95 18 b0 00              a1 = sp + 0xb0
  2670: 7b 18 28 01              u64 [sp + 0x128] = a1
  2674: 49 21 30 01 03           u64 [sp + 304] = 0x3
  2679: 95 17 00 01              a0 = sp + 0x100
  2683: 95 18 18 01              a1 = sp + 0x118
  2687: 50 10 2c 3d 04           ra = 44, jump @248
      :                          @162 [@dyn 22]
  2692: 82 15 08 01              s0 = u64 [sp + 0x108]
  2696: 82 1b 10 01              a4 = u64 [sp + 0x110]
  2700: 82 16 00 01              s1 = u64 [sp + 0x100]
  2704: 33 07 02                 a0 = 0x2
  2707: 33 08                    a1 = 0
  2709: 33 09                    a2 = 0
  2711: 64 5a                    a3 = s0
  2713: 33 00 2e                 ra = 0x2e
  2716: 0a 64                    ecalli 100 // 'log'
  2718: 01                       fallthrough
      :                          @163 [@dyn 23]
  2719: 82 17 50                 a0 = u64 [sp + 0x50]
  2722: c8 67 07                 a0 = a0 + s1
  2725: 53 37 00 00 ff 27        jump @169 if a0 <u 4294901760
      :                          @164
  2731: 33 07 e0 00 03           a0 = 0x300e0
  2736: 95 77 00 00 01           a0 = a0 + 0x10000
  2741: 01                       fallthrough
      :                          @165
  2742: 82 78                    a1 = u64 [a0]
  2744: c9 87 09                 a2 = a0 - a1
  2747: ab 59 11                 jump @169 if a2 != s0
      :                          @166
  2750: c9 68 09                 a2 = a1 - s1
  2753: 01                       fallthrough
      :                          @167
  2754: 82 7a                    a3 = u64 [a0]
  2756: ab 8a f2                 jump @165 if a3 != a1
      :                          @168
  2759: 7b 79                    u64 [a0] = a2
  2761: 33 0b                    a4 = 0
  2763: 01                       fallthrough
      :                          @169
  2764: 33 05 12 00 03           s0 = 0x30012
  2769: 33 08 4c 00 03           a1 = 0x3004c
  2774: 33 09 0c                 a2 = 0xc
  2777: 33 07 12 00 03           a0 = 0x30012
  2782: 50 10 30 52 06           ra = 48, jump @298
      :                          @170 [@dyn 24]
  2787: 64 57                    a0 = s0
  2789: 0a 10                    ecalli 16 // 'oyield'
  2791: 33 08 20                 a1 = 0x20
  2794: 28 76 f9                 jump @99
      :                          @171
  2797: 00                       trap
      :                          @172
  2798: 00                       trap
      :                          @173
  2799: 00                       trap
      :                          @174
  2800: 00                       trap
      :                          @175 [export #2: 'on_transfer']
  2801: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
  2805: 7b 10 18 01              u64 [sp + 0x118] = ra
  2809: 7b 15 10 01              u64 [sp + 0x110] = s0
  2813: 7b 16 08 01              u64 [sp + 0x108] = s1
  2817: 49 11 08 ff ff fe        u64 [sp + 8] = 0xfffffffffffeffff
  2823: 0a                       ecalli 0 // 'gas'
  2824: 7b 17 10                 u64 [sp + 0x10] = a0
  2827: 7b 17 18                 u64 [sp + 0x18] = a0
  2830: 46 11 27 04              u8 [sp + 39] = 0x4
  2834: 7b 17 28                 u64 [sp + 0x28] = a0
  2837: 95 17 27                 a0 = sp + 0x27
  2840: 33 08 01                 a1 = 0x1
  2843: 95 19 28                 a2 = sp + 0x28
  2846: 33 0a 08                 a3 = 0x8
  2849: 0a 03                    ecalli 3 // 'write'
  2851: 95 17 27                 a0 = sp + 0x27
  2854: 7b 17 78                 u64 [sp + 0x78] = a0
  2857: 33 07 82 00              a0 = 0x82
  2861: 7b 17 80 00              u64 [sp + 0x80] = a0
  2865: 95 17 18                 a0 = sp + 0x18
  2868: 7b 17 88 00              u64 [sp + 0x88] = a0
  2872: 49 21 98 00 02           u64 [sp + 152] = 0x2
  2877: 49 21 a8 00 02           u64 [sp + 168] = 0x2
  2882: 49 21 b8 00              u64 [sp + 184] = 0
  2886: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2896: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2900: 46 21 c8 00 03           u8 [sp + 200] = 0x3
  2905: 49 21 d0 00 02           u64 [sp + 208] = 0x2
  2910: 49 21 e0 00 02           u64 [sp + 224] = 0x2
  2915: 49 21 f0 00 01           u64 [sp + 240] = 0x1
  2920: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2924: 33 07 0a                 a0 = 0xa
  2927: 7b 17                    u64 [sp] = a0
  2929: 7b 17 90 00              u64 [sp + 0x90] = a0
  2933: 46 21 00 01 03           u8 [sp + 256] = 0x3
  2938: 33 07 58 03 01           a0 = 0x10358
  2943: 7b 17 48                 u64 [sp + 0x48] = a0
  2946: 49 11 50 02              u64 [sp + 80] = 0x2
  2950: 95 17 98 00              a0 = sp + 0x98
  2954: 7b 17 68                 u64 [sp + 0x68] = a0
  2957: 49 11 70 02              u64 [sp + 112] = 0x2
  2961: 95 17 78                 a0 = sp + 0x78
  2964: 7b 17 58                 u64 [sp + 0x58] = a0
  2967: 49 11 60 02              u64 [sp + 96] = 0x2
  2971: 95 17 30                 a0 = sp + 0x30
  2974: 95 18 48                 a1 = sp + 0x48
  2977: 50 10 32 1b 03           ra = 50, jump @248
      :                          @176 [@dyn 25]
  2982: 82 15 38                 s0 = u64 [sp + 0x38]
  2985: 82 1b 40                 a4 = u64 [sp + 0x40]
  2988: 82 16 30                 s1 = u64 [sp + 0x30]
  2991: 33 07 02                 a0 = 0x2
  2994: 33 08                    a1 = 0
  2996: 33 09                    a2 = 0
  2998: 64 5a                    a3 = s0
  3000: 33 00 34                 ra = 0x34
  3003: 0a 64                    ecalli 100 // 'log'
  3005: 01                       fallthrough
      :                          @177 [@dyn 26]
  3006: 82 17 08                 a0 = u64 [sp + 0x8]
  3009: c8 67 07                 a0 = a0 + s1
  3012: 53 37 00 00 ff 27        jump @183 if a0 <u 4294901760
      :                          @178
  3018: 33 07 e0 00 03           a0 = 0x300e0
  3023: 95 77 00 00 01           a0 = a0 + 0x10000
  3028: 01                       fallthrough
      :                          @179
  3029: 82 78                    a1 = u64 [a0]
  3031: c9 87 09                 a2 = a0 - a1
  3034: ab 59 11                 jump @183 if a2 != s0
      :                          @180
  3037: c9 68 09                 a2 = a1 - s1
  3040: 01                       fallthrough
      :                          @181
  3041: 82 7a                    a3 = u64 [a0]
  3043: ab 8a f2                 jump @179 if a3 != a1
      :                          @182
  3046: 7b 79                    u64 [a0] = a2
  3048: 33 0b                    a4 = 0
  3050: 01                       fallthrough
      :                          @183
  3051: 95 17 10                 a0 = sp + 0x10
  3054: 7b 17 78                 u64 [sp + 0x78] = a0
  3057: 82 17                    a0 = u64 [sp]
  3059: 7b 17 80 00              u64 [sp + 0x80] = a0
  3063: 33 07 e8 01 01           a0 = 0x101e8
  3068: 7b 17 98 00              u64 [sp + 0x98] = a0
  3072: 49 21 a0 00 02           u64 [sp + 160] = 0x2
  3077: 49 21 b8 00              u64 [sp + 184] = 0
  3081: 95 17 78                 a0 = sp + 0x78
  3084: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  3088: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  3093: 95 17 48                 a0 = sp + 0x48
  3096: 95 18 98 00              a1 = sp + 0x98
  3100: 50 10 36 a0 02           ra = 54, jump @248
      :                          @184 [@dyn 27]
  3105: 82 15 50                 s0 = u64 [sp + 0x50]
  3108: 82 1b 58                 a4 = u64 [sp + 0x58]
  3111: 82 16 48                 s1 = u64 [sp + 0x48]
  3114: 33 07 02                 a0 = 0x2
  3117: 33 08                    a1 = 0
  3119: 33 09                    a2 = 0
  3121: 64 5a                    a3 = s0
  3123: 33 00 38                 ra = 0x38
  3126: 0a 64                    ecalli 100 // 'log'
  3128: 01                       fallthrough
      :                          @185 [@dyn 28]
  3129: 82 17 08                 a0 = u64 [sp + 0x8]
  3132: c8 67 07                 a0 = a0 + s1
  3135: 53 37 00 00 ff 27        jump @191 if a0 <u 4294901760
      :                          @186
  3141: 33 07 e0 00 03           a0 = 0x300e0
  3146: 95 77 00 00 01           a0 = a0 + 0x10000
  3151: 01                       fallthrough
      :                          @187
  3152: 82 78                    a1 = u64 [a0]
  3154: c9 87 09                 a2 = a0 - a1
  3157: ab 59 11                 jump @191 if a2 != s0
      :                          @188
  3160: c9 68 09                 a2 = a1 - s1
  3163: 01                       fallthrough
      :                          @189
  3164: 82 7a                    a3 = u64 [a0]
  3166: ab 8a f2                 jump @187 if a3 != a1
      :                          @190
  3169: 7b 79                    u64 [a0] = a2
  3171: 33 0b                    a4 = 0
  3173: 01                       fallthrough
      :                          @191
  3174: 33 07 00 00 01           a0 = 0x10000
  3179: 33 08                    a1 = 0
  3181: 82 10 18 01              ra = u64 [sp + 0x118]
  3185: 82 15 10 01              s0 = u64 [sp + 0x110]
  3189: 82 16 08 01              s1 = u64 [sp + 0x108]
  3193: 95 11 20 01              sp = sp + 0x120
  3197: 32 00                    ret
      :                          @192
  3199: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3202: 7b 10 40                 u64 [sp + 0x40] = ra
  3205: 7b 15 38                 u64 [sp + 0x38] = s0
  3208: 7b 16 30                 u64 [sp + 0x30] = s1
  3211: c8 89 09                 a2 = a2 + a1
  3214: ac 89 52                 jump @200 if a2 <u a1
      :                          @193
  3217: 64 75                    s0 = a0
  3219: 82 77                    a0 = u64 [a0]
  3221: 97 78 01                 a1 = a0 << 0x1
  3224: 33 0a 08                 a3 = 0x8
  3227: e4 a9 09                 a2 = maxu(a2, a3)
  3230: e4 98 06                 s1 = maxu(a1, a2)
  3233: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3236: 98 88 3f                 a1 = a1 >> 0x3f
  3239: 51 07 12                 jump @195 if a0 == 0
      :                          @194
  3242: 82 59 08                 a2 = u64 [s0 + 0x8]
  3245: 7b 19 18                 u64 [sp + 0x18] = a2
  3248: 49 11 20 01              u64 [sp + 32] = 0x1
  3252: 7b 17 28                 u64 [sp + 0x28] = a0
  3255: 28 06                    jump @196
      :                          @195
  3257: 49 11 20                 u64 [sp + 32] = 0
  3260: 01                       fallthrough
      :                          @196
  3261: 64 17                    a0 = sp
  3263: 95 1a 18                 a3 = sp + 0x18
  3266: 64 69                    a2 = s1
  3268: 50 10 3a 32              ra = 58, jump @204
      :                          @197 [@dyn 29]
  3272: 82 18                    a1 = u64 [sp]
  3274: 82 17 08                 a0 = u64 [sp + 0x8]
  3277: 51 08 14                 jump @201 if a1 == 0
      :                          @198
  3280: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3290: aa 87 0d                 jump @202 if a0 == a1
      :                          @199
  3293: 52 07 18                 jump @203 if a0 != 0
      :                          @200
  3296: 00                       trap
      :                          @201
  3297: 7b 57 08                 u64 [s0 + 0x8] = a0
  3300: 7b 56                    u64 [s0] = s1
  3302: 01                       fallthrough
      :                          @202
  3303: 82 10 40                 ra = u64 [sp + 0x40]
  3306: 82 15 38                 s0 = u64 [sp + 0x38]
  3309: 82 16 30                 s1 = u64 [sp + 0x30]
  3312: 95 11 48                 sp = sp + 0x48
  3315: 32 00                    ret
      :                          @203
  3317: 00                       trap
      :                          @204
  3318: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3321: 7b 10 30                 u64 [sp + 0x30] = ra
  3324: 7b 15 28                 u64 [sp + 0x28] = s0
  3327: 7b 16 20                 u64 [sp + 0x20] = s1
  3330: 64 95                    s0 = a2
  3332: 64 72                    t0 = a0
  3334: 51 08 79                 jump @214 if a1 == 0
      :                          @205
  3337: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3340: 51 07 7c                 jump @215 if a0 == 0
      :                          @206
  3343: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3346: 51 09 aa 00              jump @222 if a2 == 0
      :                          @207
  3350: 82 a8                    a1 = u64 [a3]
  3352: 33 06 e0 00 03           s1 = 0x300e0
  3357: 33 03 00 00 01           t1 = 0x10000
  3362: c8 36 06                 s1 = s1 + t1
  3365: 01                       fallthrough
      :                          @208
  3366: 82 6a                    a3 = u64 [s1]
  3368: c8 5a 07                 a0 = a3 + s0
  3371: ac a7 cf 00              jump @228 if a0 <u a3
      :                          @209
  3375: 95 7b 01                 a4 = a0 + 0x1
  3378: 88 bc 01                 a5 = a4 <u 0x1
  3381: d8 b3 0b                 a4 = t1 <u a4
  3384: d4 cb 0b                 a4 = a4 | a5
  3387: 52 0b bf 00              jump @228 if a4 != 0
      :                          @210
  3391: 82 6b                    a4 = u64 [s1]
  3393: ab ab e5                 jump @208 if a4 != a3
      :                          @211
  3396: 7b 67                    u64 [s1] = a0
  3398: 33 0c                    a5 = 0
  3400: 7b 12 18                 u64 [sp + 0x18] = t0
  3403: 33 0a e0 00 03           a3 = 0x300e0
  3408: 33 0b 00 00 01           a4 = 0x10000
  3413: 7b 1a                    u64 [sp] = a3
  3415: c8 ba 0a                 a3 = a3 + a4
  3418: c9 7a 07                 a0 = a3 - a0
  3421: 7b 17 10                 u64 [sp + 0x10] = a0
  3424: 7b 18 08                 u64 [sp + 0x8] = a1
  3427: 64 96                    s1 = a2
  3429: 50 10 3c cb 03           ra = 60, jump @298
      :                          @212 [@dyn 30]
  3434: 54 36 00 00 01 98 00     jump @229 if s1 <=u 65536
      :                          @213
  3441: 82 12 18                 t0 = u64 [sp + 0x18]
  3444: 82 18 10                 a1 = u64 [sp + 0x10]
  3447: 33 07                    a0 = 0
  3449: 7b 28 08                 u64 [t0 + 0x8] = a1
  3452: 28 b5 00                 jump @235
      :                          @214
  3455: 49 12 08                 u64 [t0 + 8] = 0
  3458: 33 07 01                 a0 = 0x1
  3461: 28 ac 00                 jump @235
      :                          @215
  3464: 33 09 e0 00 03           a2 = 0x300e0
  3469: 33 07 00 00 01           a0 = 0x10000
  3474: c8 79 09                 a2 = a2 + a0
  3477: 01                       fallthrough
      :                          @216
  3478: 82 9a                    a3 = u64 [a2]
  3480: c8 5a 08                 a1 = a3 + s0
  3483: ac a8 5f                 jump @228 if a1 <u a3
      :                          @217
  3486: 95 8b 01                 a4 = a1 + 0x1
  3489: 88 bc 01                 a5 = a4 <u 0x1
  3492: d8 b7 0b                 a4 = a0 <u a4
  3495: d4 cb 0b                 a4 = a4 | a5
  3498: 52 0b 50                 jump @228 if a4 != 0
      :                          @218
  3501: 82 9b                    a4 = u64 [a2]
  3503: ab ab e7                 jump @216 if a4 != a3
      :                          @219
  3506: 7b 98                    u64 [a2] = a1
  3508: 33 0c                    a5 = 0
  3510: 01                       fallthrough
      :                          @220
  3511: ab ab df                 jump @216 if a4 != a3
      :                          @221
  3514: 28 31                    jump @227
      :                          @222
  3516: 33 09 e0 00 03           a2 = 0x300e0
  3521: 33 07 00 00 01           a0 = 0x10000
  3526: c8 79 09                 a2 = a2 + a0
  3529: 01                       fallthrough
      :                          @223
  3530: 82 9a                    a3 = u64 [a2]
  3532: c8 5a 08                 a1 = a3 + s0
  3535: ac a8 2b                 jump @228 if a1 <u a3
      :                          @224
  3538: 95 8b 01                 a4 = a1 + 0x1
  3541: 88 bc 01                 a5 = a4 <u 0x1
  3544: d8 b7 0b                 a4 = a0 <u a4
  3547: d4 cb 0b                 a4 = a4 | a5
  3550: 52 0b 1c                 jump @228 if a4 != 0
      :                          @225
  3553: 82 9b                    a4 = u64 [a2]
  3555: ab ab e7                 jump @223 if a4 != a3
      :                          @226
  3558: 7b 98                    u64 [a2] = a1
  3560: 33 0c                    a5 = 0
  3562: 01                       fallthrough
      :                          @227
  3563: 33 07 e0 00 04           a0 = 0x400e0
  3568: c9 87 08                 a1 = a0 - a1
  3571: 33 07                    a0 = 0
  3573: 7b 28 08                 u64 [t0 + 0x8] = a1
  3576: 28 39                    jump @235
      :                          @228
  3578: 33 07 01                 a0 = 0x1
  3581: 7b 27 08                 u64 [t0 + 0x8] = a0
  3584: 28 31                    jump @235
      :                          @229
  3586: 64 6c                    a5 = s1
  3588: 82 17                    a0 = u64 [sp]
  3590: 95 77 00 00 01           a0 = a0 + 0x10000
  3595: 82 12 18                 t0 = u64 [sp + 0x18]
  3598: 82 16 08                 s1 = u64 [sp + 0x8]
  3601: 01                       fallthrough
      :                          @230
  3602: 82 78                    a1 = u64 [a0]
  3604: c9 87 09                 a2 = a0 - a1
  3607: ab 69 11                 jump @234 if a2 != s1
      :                          @231
  3610: c9 c8 09                 a2 = a1 - a5
  3613: 01                       fallthrough
      :                          @232
  3614: 82 7a                    a3 = u64 [a0]
  3616: ab 8a f2                 jump @230 if a3 != a1
      :                          @233
  3619: 7b 79                    u64 [a0] = a2
  3621: 33 0b                    a4 = 0
  3623: 01                       fallthrough
      :                          @234
  3624: 82 18 10                 a1 = u64 [sp + 0x10]
  3627: 33 07                    a0 = 0
  3629: 7b 28 08                 u64 [t0 + 0x8] = a1
  3632: 01                       fallthrough
      :                          @235
  3633: 7b 25 10                 u64 [t0 + 0x10] = s0
  3636: 7b 27                    u64 [t0] = a0
  3638: 82 10 30                 ra = u64 [sp + 0x30]
  3641: 82 15 28                 s0 = u64 [sp + 0x28]
  3644: 82 16 20                 s1 = u64 [sp + 0x20]
  3647: 95 11 38                 sp = sp + 0x38
  3650: 32 00                    ret
      :                          @236
  3652: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3655: 7b 10 40                 u64 [sp + 0x40] = ra
  3658: 7b 15 38                 u64 [sp + 0x38] = s0
  3661: 7b 16 30                 u64 [sp + 0x30] = s1
  3664: 95 88 01                 a1 = a1 + 0x1
  3667: 51 08 53                 jump @244 if a1 == 0
      :                          @237
  3670: 64 75                    s0 = a0
  3672: 82 77                    a0 = u64 [a0]
  3674: 97 79 01                 a2 = a0 << 0x1
  3677: 33 0a 08                 a3 = 0x8
  3680: e4 a8 08                 a1 = maxu(a1, a3)
  3683: e4 89 06                 s1 = maxu(a2, a1)
  3686: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3689: 98 88 3f                 a1 = a1 >> 0x3f
  3692: 51 07 12                 jump @239 if a0 == 0
      :                          @238
  3695: 82 59 08                 a2 = u64 [s0 + 0x8]
  3698: 7b 19 18                 u64 [sp + 0x18] = a2
  3701: 49 11 20 01              u64 [sp + 32] = 0x1
  3705: 7b 17 28                 u64 [sp + 0x28] = a0
  3708: 28 06                    jump @240
      :                          @239
  3710: 49 11 20                 u64 [sp + 32] = 0
  3713: 01                       fallthrough
      :                          @240
  3714: 64 17                    a0 = sp
  3716: 95 1a 18                 a3 = sp + 0x18
  3719: 64 69                    a2 = s1
  3721: 50 10 3e 6d fe           ra = 62, jump @204
      :                          @241 [@dyn 31]
  3726: 82 18                    a1 = u64 [sp]
  3728: 82 17 08                 a0 = u64 [sp + 0x8]
  3731: 51 08 14                 jump @245 if a1 == 0
      :                          @242
  3734: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3744: aa 87 0d                 jump @246 if a0 == a1
      :                          @243
  3747: 52 07 18                 jump @247 if a0 != 0
      :                          @244
  3750: 00                       trap
      :                          @245
  3751: 7b 57 08                 u64 [s0 + 0x8] = a0
  3754: 7b 56                    u64 [s0] = s1
  3756: 01                       fallthrough
      :                          @246
  3757: 82 10 40                 ra = u64 [sp + 0x40]
  3760: 82 15 38                 s0 = u64 [sp + 0x38]
  3763: 82 16 30                 s1 = u64 [sp + 0x30]
  3766: 95 11 48                 sp = sp + 0x48
  3769: 32 00                    ret
      :                          @247
  3771: 00                       trap
      :                          @248
  3772: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3775: 7b 10 30                 u64 [sp + 0x30] = ra
  3778: 7b 15 28                 u64 [sp + 0x28] = s0
  3781: 7b 16 20                 u64 [sp + 0x20] = s1
  3784: 64 89                    a2 = a1
  3786: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3789: 64 75                    s0 = a0
  3791: 51 0a 35                 jump @253 if a3 == 0
      :                          @249
  3794: 82 98                    a1 = u64 [a2]
  3796: 33 07                    a0 = 0
  3798: 95 8b 08                 a4 = a1 + 0x8
  3801: 01                       fallthrough
      :                          @250
  3802: 82 bc                    a5 = u64 [a4]
  3804: c8 c7 07                 a0 = a0 + a5
  3807: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3810: 95 bb 10                 a4 = a4 + 0x10
  3813: 52 0a f5                 jump @250 if a3 != 0
      :                          @251
  3816: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3819: 51 0a 24                 jump @255 if a3 == 0
      :                          @252
  3822: 82 88 08                 a1 = u64 [a1 + 0x8]
  3825: 8e 88                    a1 = a1 >u 0
  3827: 88 7a 10                 a3 = a0 <u 0x10
  3830: 85 aa 01                 a3 = a3 ^ 0x1
  3833: d4 a8 08                 a1 = a1 | a3
  3836: 89 7a                    a3 = a0 <s 0
  3838: e0 a8 08                 a1 = a1 & ~a3
  3841: 52 08 0a                 jump @254 if a1 != 0
      :                          @253
  3844: 33 07                    a0 = 0
  3846: 33 08 01                 a1 = 0x1
  3849: 28 4a                    jump @263
      :                          @254
  3851: 97 77 01                 a0 = a0 << 0x1
  3854: 01                       fallthrough
      :                          @255
  3855: 51 07 40                 jump @262 if a0 == 0
      :                          @256
  3858: 57 07 78                 jump @268 if a0 <s 0
      :                          @257
  3861: 64 52                    t0 = s0
  3863: 33 0b e0 00 03           a4 = 0x300e0
  3868: 33 08 00 00 01           a1 = 0x10000
  3873: c8 8b 0b                 a4 = a4 + a1
  3876: 01                       fallthrough
      :                          @258
  3877: 82 bc                    a5 = u64 [a4]
  3879: c8 7c 0a                 a3 = a5 + a0
  3882: ac ca 5e                 jump @266 if a3 <u a5
      :                          @259
  3885: 95 a5 01                 s0 = a3 + 0x1
  3888: 88 56 01                 s1 = s0 <u 0x1
  3891: d8 58 05                 s0 = a1 <u s0
  3894: d4 65 05                 s0 = s0 | s1
  3897: 52 05 4f                 jump @266 if s0 != 0
      :                          @260
  3900: 82 b6                    s1 = u64 [a4]
  3902: ab c6 e7                 jump @258 if s1 != a5
      :                          @261
  3905: 7b ba                    u64 [a4] = a3
  3907: 33 08 e0 00 04           a1 = 0x400e0
  3912: c9 a8 08                 a1 = a1 - a3
  3915: 64 25                    s0 = t0
  3917: 28 06                    jump @263
      :                          @262
  3919: 33 08 01                 a1 = 0x1
  3922: 01                       fallthrough
      :                          @263
  3923: 7b 17                    u64 [sp] = a0
  3925: 7b 18 08                 u64 [sp + 0x8] = a1
  3928: 49 11 10                 u64 [sp + 16] = 0
  3931: 33 08 08 02 01           a1 = 0x10208
  3936: 64 17                    a0 = sp
  3938: 50 10 40 32 06           ra = 64, jump @382
      :                          @264 [@dyn 32]
  3943: 52 07 22                 jump @267 if a0 != 0
      :                          @265
  3946: 82 17 10                 a0 = u64 [sp + 0x10]
  3949: 82 18 08                 a1 = u64 [sp + 0x8]
  3952: 82 19                    a2 = u64 [sp]
  3954: 7b 57 10                 u64 [s0 + 0x10] = a0
  3957: 7b 58 08                 u64 [s0 + 0x8] = a1
  3960: 7b 59                    u64 [s0] = a2
  3962: 82 10 30                 ra = u64 [sp + 0x30]
  3965: 82 15 28                 s0 = u64 [sp + 0x28]
  3968: 82 16 20                 s1 = u64 [sp + 0x20]
  3971: 95 11 38                 sp = sp + 0x38
  3974: 32 00                    ret
      :                          @266
  3976: 00                       trap
      :                          @267
  3977: 00                       trap
      :                          @268
  3978: 00                       trap
      :                          @269 [@dyn 33]
  3979: 82 72                    t0 = u64 [a0]
  3981: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3986: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3991: ac 9a 28                 jump @275 if a3 <u a2
      :                          @270
  3994: 82 77 08                 a0 = u64 [a0 + 0x8]
  3997: 33 09 e0 00 03           a2 = 0x300e0
  4002: 95 99 00 00 01           a2 = a2 + 0x10000
  4007: 01                       fallthrough
      :                          @271
  4008: 82 9a                    a3 = u64 [a2]
  4010: c9 a9 0b                 a4 = a2 - a3
  4013: ab 7b 12                 jump @275 if a4 != a0
      :                          @272
  4016: c9 2a 0b                 a4 = a3 - t0
  4019: 01                       fallthrough
      :                          @273
  4020: 82 9c                    a5 = u64 [a2]
  4022: ab ac f2                 jump @271 if a5 != a3
      :                          @274
  4025: 7b 9b                    u64 [a2] = a4
  4027: 33 08                    a1 = 0
  4029: 32 00                    ret
      :                          @275
  4031: 32 00                    ret
      :                          @276 [@dyn 34]
  4033: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4036: 7b 10 18                 u64 [sp + 0x18] = ra
  4039: 7b 15 10                 u64 [sp + 0x10] = s0
  4042: 7b 16 08                 u64 [sp + 0x8] = s1
  4045: 64 75                    s0 = a0
  4047: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4050: 82 77                    a0 = u64 [a0]
  4052: c9 a7 07                 a0 = a0 - a3
  4055: 64 96                    s1 = a2
  4057: ac 97 2a                 jump @279 if a0 <u a2
      :                          @277
  4060: 7b 1a                    u64 [sp] = a3
  4062: 82 57 08                 a0 = u64 [s0 + 0x8]
  4065: c8 a7 07                 a0 = a0 + a3
  4068: 64 69                    a2 = s1
  4070: 50 10 46 4a 01           ra = 70, jump @298
      :                          @278 [@dyn 35]
  4075: 82 17                    a0 = u64 [sp]
  4077: c8 76 06                 s1 = s1 + a0
  4080: 7b 56 10                 u64 [s0 + 0x10] = s1
  4083: 33 07                    a0 = 0
  4085: 82 10 18                 ra = u64 [sp + 0x18]
  4088: 82 15 10                 s0 = u64 [sp + 0x10]
  4091: 82 16 08                 s1 = u64 [sp + 0x8]
  4094: 95 11 20                 sp = sp + 0x20
  4097: 32 00                    ret
      :                          @279
  4099: 64 57                    a0 = s0
  4101: 7b 18                    u64 [sp] = a1
  4103: 64 a8                    a1 = a3
  4105: 64 69                    a2 = s1
  4107: 50 10 48 74 fc           ra = 72, jump @192
      :                          @280 [@dyn 36]
  4112: 82 18                    a1 = u64 [sp]
  4114: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4117: 28 c7                    jump @277
      :                          @281 [@dyn 37]
  4119: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4122: 7b 10 20                 u64 [sp + 0x20] = ra
  4125: 7b 15 18                 u64 [sp + 0x18] = s0
  4128: 7b 16 10                 u64 [sp + 0x10] = s1
  4131: 64 86                    s1 = a1
  4133: 83 88                    i32 a1 = a1 + 0
  4135: 33 09 80 00              a2 = 0x80
  4139: 64 7a                    a3 = a0
  4141: ae 98 2b                 jump @286 if a1 >=u a2
      :                          @282
  4144: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4147: 82 a7                    a0 = u64 [a3]
  4149: ab 78 12                 jump @285 if a1 != a0
      :                          @283
  4152: 64 a7                    a0 = a3
  4154: 64 a5                    s0 = a3
  4156: 50 10 4c 08 fe           ra = 76, jump @236
      :                          @284 [@dyn 38]
  4161: 64 5a                    a3 = s0
  4163: 82 58 10                 a1 = u64 [s0 + 0x10]
  4166: 01                       fallthrough
      :                          @285
  4167: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4170: c8 87 07                 a0 = a0 + a1
  4173: 78 76                    u8 [a0] = s1
  4175: 95 88 01                 a1 = a1 + 0x1
  4178: 7b a8 10                 u64 [a3 + 0x10] = a1
  4181: 28 ab 00                 jump @294
      :                          @286
  4184: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4187: 48 11 0c                 u32 [sp + 12] = 0
  4190: 52 07 1c                 jump @288 if a0 != 0
      :                          @287
  4193: 98 67 06                 a0 = s1 >> 0x6
  4196: 86 77 c0 00              a0 = a0 | 0xc0
  4200: 78 17 0c                 u8 [sp + 0xc] = a0
  4203: 84 67 3f                 a0 = s1 & 0x3f
  4206: 86 77 80 00              a0 = a0 | 0x80
  4210: 78 17 0d                 u8 [sp + 0xd] = a0
  4213: 33 06 02                 s1 = 0x2
  4216: 28 63                    jump @291
      :                          @288
  4218: 8b 67 10                 i32 a0 = s1 >> 0x10
  4221: 52 07 29                 jump @290 if a0 != 0
      :                          @289
  4224: 98 67 0c                 a0 = s1 >> 0xc
  4227: 86 77 e0 00              a0 = a0 | 0xe0
  4231: 78 17 0c                 u8 [sp + 0xc] = a0
  4234: 97 67 34                 a0 = s1 << 0x34
  4237: 98 77 3a                 a0 = a0 >> 0x3a
  4240: 95 77 80 00              a0 = a0 + 0x80
  4244: 78 17 0d                 u8 [sp + 0xd] = a0
  4247: 84 67 3f                 a0 = s1 & 0x3f
  4250: 86 77 80 00              a0 = a0 | 0x80
  4254: 78 17 0e                 u8 [sp + 0xe] = a0
  4257: 33 06 03                 s1 = 0x3
  4260: 28 37                    jump @291
      :                          @290
  4262: 97 67 2b                 a0 = s1 << 0x2b
  4265: 98 77 3d                 a0 = a0 >> 0x3d
  4268: 95 77 f0 00              a0 = a0 + 0xf0
  4272: 78 17 0c                 u8 [sp + 0xc] = a0
  4275: 97 67 2e                 a0 = s1 << 0x2e
  4278: 98 77 3a                 a0 = a0 >> 0x3a
  4281: 95 77 80 00              a0 = a0 + 0x80
  4285: 78 17 0d                 u8 [sp + 0xd] = a0
  4288: 97 67 34                 a0 = s1 << 0x34
  4291: 98 77 3a                 a0 = a0 >> 0x3a
  4294: 95 77 80 00              a0 = a0 + 0x80
  4298: 78 17 0e                 u8 [sp + 0xe] = a0
  4301: 84 67 3f                 a0 = s1 & 0x3f
  4304: 86 77 80 00              a0 = a0 | 0x80
  4308: 78 17 0f                 u8 [sp + 0xf] = a0
  4311: 33 06 04                 s1 = 0x4
  4314: 01                       fallthrough
      :                          @291
  4315: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4318: 82 a7                    a0 = u64 [a3]
  4320: c9 57 07                 a0 = a0 - s0
  4323: ac 67 2d                 jump @295 if a0 <u s1
      :                          @292
  4326: 7b 1a                    u64 [sp] = a3
  4328: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4331: c8 57 07                 a0 = a0 + s0
  4334: 95 18 0c                 a1 = sp + 0xc
  4337: 64 69                    a2 = s1
  4339: 50 10 4e 3d              ra = 78, jump @298
      :                          @293 [@dyn 39]
  4343: c8 56 06                 s1 = s1 + s0
  4346: 82 17                    a0 = u64 [sp]
  4348: 7b 76 10                 u64 [a0 + 0x10] = s1
  4351: 01                       fallthrough
      :                          @294
  4352: 33 07                    a0 = 0
  4354: 82 10 20                 ra = u64 [sp + 0x20]
  4357: 82 15 18                 s0 = u64 [sp + 0x18]
  4360: 82 16 10                 s1 = u64 [sp + 0x10]
  4363: 95 11 28                 sp = sp + 0x28
  4366: 32 00                    ret
      :                          @295
  4368: 64 a7                    a0 = a3
  4370: 64 58                    a1 = s0
  4372: 64 69                    a2 = s1
  4374: 64 a5                    s0 = a3
  4376: 50 10 50 67 fb           ra = 80, jump @192
      :                          @296 [@dyn 40]
  4381: 64 5a                    a3 = s0
  4383: 82 55 10                 s0 = u64 [s0 + 0x10]
  4386: 28 c4                    jump @292
      :                          @297 [@dyn 41]
  4388: 64 8a                    a3 = a1
  4390: 33 08 08 02 01           a1 = 0x10208
  4395: 64 a9                    a2 = a3
  4397: 28 67 04                 jump @382
      :                          @298
  4400: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4403: 7b 10 18                 u64 [sp + 0x18] = ra
  4406: 7b 15 10                 u64 [sp + 0x10] = s0
  4409: 7b 16 08                 u64 [sp + 0x8] = s1
  4412: 53 19 10 64              jump @307 if a2 <u 16
      :                          @299
  4416: 8d 7a                    i32 a3 = -a0
  4418: 84 a2 07                 t0 = a3 & 0x7
  4421: c8 27 0b                 a4 = a0 + t0
  4424: 51 02 15                 jump @302 if t0 == 0
      :                          @300
  4427: 64 8c                    a5 = a1
  4429: 64 75                    s0 = a0
  4431: 01                       fallthrough
      :                          @301
  4432: 7c ca                    a3 = u8 [a5]
  4434: 78 5a                    u8 [s0] = a3
  4436: 95 55 01                 s0 = s0 + 0x1
  4439: 95 cc 01                 a5 = a5 + 0x1
  4442: ac b5 f6                 jump @301 if s0 <u a4
      :                          @302
  4445: c8 28 03                 t1 = a1 + t0
  4448: c9 29 02                 t0 = a2 - t0
  4451: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4454: 84 38 07                 a1 = t1 & 0x7
  4457: c8 4b 0a                 a3 = a4 + t2
  4460: 51 08 3b                 jump @309 if a1 == 0
      :                          @303
  4463: 58 04 4b                 jump @312 if t2 <=s 0
      :                          @304
  4466: 97 38 03                 a1 = t1 << 0x3
  4469: 84 80 38                 ra = a1 & 0x38
  4472: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4475: 82 c5                    s0 = u64 [a5]
  4477: 8d 88                    i32 a1 = -a1
  4479: 84 88 38                 a1 = a1 & 0x38
  4482: 95 cc 08                 a5 = a5 + 0x8
  4485: 01                       fallthrough
      :                          @305
  4486: 82 c6                    s1 = u64 [a5]
  4488: d0 05 05                 s0 = s0 >> ra
  4491: cf 86 09                 a2 = s1 << a1
  4494: d4 59 09                 a2 = a2 | s0
  4497: 7b b9                    u64 [a4] = a2
  4499: 95 bb 08                 a4 = a4 + 0x8
  4502: 95 cc 08                 a5 = a5 + 0x8
  4505: 64 65                    s0 = s1
  4507: ac ab eb                 jump @305 if a4 <u a3
      :                          @306
  4510: 28 1c                    jump @312
      :                          @307
  4512: 64 7a                    a3 = a0
  4514: 52 09 21                 jump @313 if a2 != 0
      :                          @308
  4517: 28 2f                    jump @315
      :                          @309
  4519: 58 04 13                 jump @312 if t2 <=s 0
      :                          @310
  4522: 64 38                    a1 = t1
  4524: 01                       fallthrough
      :                          @311
  4525: 82 89                    a2 = u64 [a1]
  4527: 7b b9                    u64 [a4] = a2
  4529: 95 bb 08                 a4 = a4 + 0x8
  4532: 95 88 08                 a1 = a1 + 0x8
  4535: ac ab f6                 jump @311 if a4 <u a3
      :                          @312
  4538: c8 43 08                 a1 = t1 + t2
  4541: 84 29 07                 a2 = t0 & 0x7
  4544: 51 09 14                 jump @315 if a2 == 0
      :                          @313
  4547: c8 a9 09                 a2 = a2 + a3
  4550: 01                       fallthrough
      :                          @314
  4551: 7c 8b                    a4 = u8 [a1]
  4553: 78 ab                    u8 [a3] = a4
  4555: 95 aa 01                 a3 = a3 + 0x1
  4558: 95 88 01                 a1 = a1 + 0x1
  4561: ac 9a f6                 jump @314 if a3 <u a2
      :                          @315
  4564: 82 10 18                 ra = u64 [sp + 0x18]
  4567: 82 15 10                 s0 = u64 [sp + 0x10]
  4570: 82 16 08                 s1 = u64 [sp + 0x8]
  4573: 95 11 20                 sp = sp + 0x20
  4576: 32 00                    ret
      :                          @316 [@dyn 42]
  4578: 82 77                    a0 = u64 [a0]
  4580: 01                       fallthrough
      :                          @317
  4581: 28                       jump @317
      :                          @318
  4582: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  4585: 7b 10 58                 u64 [sp + 0x58] = ra
  4588: 7b 15 50                 u64 [sp + 0x50] = s0
  4591: 7b 16 48                 u64 [sp + 0x48] = s1
  4594: 7b 19 08                 u64 [sp + 0x8] = a2
  4597: 7b 18                    u64 [sp] = a1
  4599: 98 7a 04                 a3 = a0 >> 0x4
  4602: 33 09 27                 a2 = 0x27
  4605: 53 2a 71 02 81 00        jump @321 if a3 <u 625
      :                          @319
  4611: 33 09 27                 a2 = 0x27
  4614: 95 1b 46                 a4 = sp + 0x46
  4617: 3a 08 00 00 03           a1 = u64 [0x30000]
  4622: 7b 18 18                 u64 [sp + 0x18] = a1
  4625: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  4631: 33 03 7b 14              t1 = 0x147b
  4635: 33 05 76 02 01           s0 = 0x10276
  4640: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4646: 01                       fallthrough
      :                          @320
  4647: 64 74                    t2 = a0
  4649: 82 17 18                 a0 = u64 [sp + 0x18]
  4652: d6 74 07                 a0 = t2 mulhu a0
  4655: 98 77 0b                 a0 = a0 >> 0xb
  4658: 82 18 10                 a1 = u64 [sp + 0x10]
  4661: c0 87 02                 i32 t0 = a0 * a1
  4664: c8 42 0a                 a3 = t0 + t2
  4667: 97 a2 30                 t0 = a3 << 0x30
  4670: 98 28 32                 a1 = t0 >> 0x32
  4673: ca 38 08                 a1 = a1 * t1
  4676: 98 8c 11                 a5 = a1 >> 0x11
  4679: 98 88 10                 a1 = a1 >> 0x10
  4682: 84 88 fe 07              a1 = a1 & 0x7fe
  4686: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  4689: c8 ca 0a                 a3 = a3 + a5
  4692: 97 aa 31                 a3 = a3 << 0x31
  4695: 98 aa 30                 a3 = a3 >> 0x30
  4698: c8 58 08                 a1 = a1 + s0
  4701: 7c 8c                    a5 = u8 [a1]
  4703: 7c 88 01                 a1 = u8 [a1 + 0x1]
  4706: c8 5a 0a                 a3 = a3 + s0
  4709: 7c a6 01                 s1 = u8 [a3 + 0x1]
  4712: 7c aa                    a3 = u8 [a3]
  4714: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  4717: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  4720: 78 b6 01                 u8 [a4 + 0x1] = s1
  4723: 78 ba                    u8 [a4] = a3
  4725: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  4728: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4731: ac 40 ac                 jump @320 if ra <u t2
      :                          @321
  4734: 54 17 63 3b              jump @323 if a0 <=u 99
      :                          @322
  4738: 97 78 30                 a1 = a0 << 0x30
  4741: 98 88 32                 a1 = a1 >> 0x32
  4744: 96 88 7b 14              a1 = a1 * 0x147b
  4748: 98 88 11                 a1 = a1 >> 0x11
  4751: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  4754: c8 a7 07                 a0 = a0 + a3
  4757: 97 77 31                 a0 = a0 << 0x31
  4760: 98 77 30                 a0 = a0 >> 0x30
  4763: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4766: 33 0a 76 02 01           a3 = 0x10276
  4771: c8 a7 07                 a0 = a0 + a3
  4774: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4777: 7c 77                    a0 = u8 [a0]
  4779: 95 1b 21                 a4 = sp + 0x21
  4782: c8 9b 0b                 a4 = a4 + a2
  4785: 78 ba 01                 u8 [a4 + 0x1] = a3
  4788: 78 b7                    u8 [a4] = a0
  4790: 64 87                    a0 = a1
  4792: 01                       fallthrough
      :                          @323
  4793: 55 17 0a 14              jump @325 if a0 >=u 10
      :                          @324
  4797: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  4800: 95 18 21                 a1 = sp + 0x21
  4803: c8 98 08                 a1 = a1 + a2
  4806: 83 77 30                 i32 a0 = a0 + 0x30
  4809: 78 87                    u8 [a1] = a0
  4811: 28 21                    jump @326
      :                          @325
  4813: 97 77 01                 a0 = a0 << 0x1
  4816: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4819: 33 08 76 02 01           a1 = 0x10276
  4824: c8 87 07                 a0 = a0 + a1
  4827: 7c 78 01                 a1 = u8 [a0 + 0x1]
  4830: 7c 77                    a0 = u8 [a0]
  4832: 95 1a 21                 a3 = sp + 0x21
  4835: c8 9a 0a                 a3 = a3 + a2
  4838: 78 a8 01                 u8 [a3 + 0x1] = a1
  4841: 78 a7                    u8 [a3] = a0
  4843: 01                       fallthrough
      :                          @326
  4844: 95 1b 21                 a4 = sp + 0x21
  4847: c8 9b 0b                 a4 = a4 + a2
  4850: 9a 9c 27                 a5 = 0x27 - a2
  4853: 33 09 38 02 01           a2 = 0x10238
  4858: 82 17 08                 a0 = u64 [sp + 0x8]
  4861: 82 18                    a1 = u64 [sp]
  4863: 33 0a                    a3 = 0
  4865: 50 10 56 12              ra = 86, jump @328
      :                          @327 [@dyn 43]
  4869: 82 10 58                 ra = u64 [sp + 0x58]
  4872: 82 15 50                 s0 = u64 [sp + 0x50]
  4875: 82 16 48                 s1 = u64 [sp + 0x48]
  4878: 95 11 60                 sp = sp + 0x60
  4881: 32 00                    ret
      :                          @328
  4883: 95 11 98                 sp = sp + 0xffffffffffffff98
  4886: 7b 10 60                 u64 [sp + 0x60] = ra
  4889: 7b 15 58                 u64 [sp + 0x58] = s0
  4892: 7b 16 50                 u64 [sp + 0x50] = s1
  4895: 7b 1b 18                 u64 [sp + 0x18] = a4
  4898: 51 08 4f                 jump @335 if a1 == 0
      :                          @329
  4901: 80 76 34                 s1 = u32 [a0 + 0x34]
  4904: 84 68 01                 a1 = s1 & 0x1
  4907: 33 0b 2b                 a4 = 0x2b
  4910: 33 05 00 00 11           s0 = 0x110000
  4915: db 8b 05                 s0 = a4 if a1 != 0
  4918: 7b 15 28                 u64 [sp + 0x28] = s0
  4921: c8 c8 02                 t0 = a1 + a5
  4924: 84 68 04                 a1 = s1 & 0x4
  4927: 51 08 42                 jump @336 if a1 == 0
      :                          @330
  4930: 7b 19 30                 u64 [sp + 0x30] = a2
  4933: 33 08                    a1 = 0
  4935: 51 0a 1a                 jump @333 if a3 == 0
      :                          @331
  4938: 64 a5                    s0 = a3
  4940: 01                       fallthrough
      :                          @332
  4941: 7d 9b                    a4 = i8 [a2]
  4943: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  4946: 85 bb 01                 a4 = a4 ^ 0x1
  4949: c8 b8 08                 a1 = a1 + a4
  4952: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4955: 95 99 01                 a2 = a2 + 0x1
  4958: 52 05 ef                 jump @332 if s0 != 0
      :                          @333
  4961: c8 82 02                 t0 = t0 + a1
  4964: 7b 1a 38                 u64 [sp + 0x38] = a3
  4967: 82 78                    a1 = u64 [a0]
  4969: 7b 1c 20                 u64 [sp + 0x20] = a5
  4972: 52 08 23                 jump @337 if a1 != 0
      :                          @334
  4975: 28 41                    jump @342
      :                          @335
  4977: 81 76 34                 s1 = i32 [a0 + 0x34]
  4980: 95 c2 01                 t0 = a5 + 0x1
  4983: 49 11 28 2d              u64 [sp + 40] = 0x2d
  4987: 84 68 04                 a1 = s1 & 0x4
  4990: 52 08 c4                 jump @330 if a1 != 0
      :                          @336
  4993: 49 11 30                 u64 [sp + 48] = 0
  4996: 7b 1a 38                 u64 [sp + 0x38] = a3
  4999: 82 78                    a1 = u64 [a0]
  5001: 7b 1c 20                 u64 [sp + 0x20] = a5
  5004: 51 08 24                 jump @342 if a1 == 0
      :                          @337
  5007: 82 75 08                 s0 = u64 [a0 + 0x8]
  5010: ae 52 1e                 jump @342 if t0 >=u s0
      :                          @338
  5013: 84 66 08                 s1 = s1 & 0x8
  5016: 52 06 50                 jump @345 if s1 != 0
      :                          @339
  5019: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5022: c9 25 0a                 a3 = s0 - t0
  5025: 5a 19 01 a1 00           jump @352 if a2 >s 1
      :                          @340
  5030: 52 09 ae 00              jump @354 if a2 != 0
      :                          @341
  5034: 7b 1a 10                 u64 [sp + 0x10] = a3
  5037: 28 ad 00                 jump @355
      :                          @342
  5040: 82 75 20                 s0 = u64 [a0 + 0x20]
  5043: 82 76 28                 s1 = u64 [a0 + 0x28]
  5046: 64 57                    a0 = s0
  5048: 64 68                    a1 = s1
  5050: 82 19 28                 a2 = u64 [sp + 0x28]
  5053: 82 1a 30                 a3 = u64 [sp + 0x30]
  5056: 82 1b 38                 a4 = u64 [sp + 0x38]
  5059: 50 10 58 6d 01           ra = 88, jump @375
      :                          @343 [@dyn 44]
  5064: 33 08 01                 a1 = 0x1
  5067: 52 07 bc 00              jump @360 if a0 != 0
      :                          @344
  5071: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5074: 64 57                    a0 = s0
  5076: 82 18 18                 a1 = u64 [sp + 0x18]
  5079: 82 19 20                 a2 = u64 [sp + 0x20]
  5082: 82 10 60                 ra = u64 [sp + 0x60]
  5085: 82 15 58                 s0 = u64 [sp + 0x58]
  5088: 82 16 50                 s1 = u64 [sp + 0x50]
  5091: 95 11 68                 sp = sp + 0x68
  5094: 32 0c                    jump [a5]
      :                          @345
  5096: 7b 12 40                 u64 [sp + 0x40] = t0
  5099: 81 78 30                 a1 = i32 [a0 + 0x30]
  5102: 7b 18 08                 u64 [sp + 0x8] = a1
  5105: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5108: 7b 19                    u64 [sp] = a2
  5110: 82 79 20                 a2 = u64 [a0 + 0x20]
  5113: 82 76 28                 s1 = u64 [a0 + 0x28]
  5116: 48 17 30 30              u32 [a0 + 48] = 0x30
  5120: 7b 17 10                 u64 [sp + 0x10] = a0
  5123: 46 17 38 01              u8 [a0 + 56] = 0x1
  5127: 7b 19 48                 u64 [sp + 0x48] = a2
  5130: 64 97                    a0 = a2
  5132: 64 68                    a1 = s1
  5134: 82 19 28                 a2 = u64 [sp + 0x28]
  5137: 82 1a 30                 a3 = u64 [sp + 0x30]
  5140: 82 1b 38                 a4 = u64 [sp + 0x38]
  5143: 50 10 5a 19 01           ra = 90, jump @375
      :                          @346 [@dyn 45]
  5148: 52 07 67                 jump @359 if a0 != 0
      :                          @347
  5151: 82 17 40                 a0 = u64 [sp + 0x40]
  5154: c9 75 05                 s0 = s0 - a0
  5157: 95 55 01                 s0 = s0 + 0x1
  5160: 01                       fallthrough
      :                          @348
  5161: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5164: 51 05 c6 00              jump @370 if s0 == 0
      :                          @349
  5168: 82 69 20                 a2 = u64 [s1 + 0x20]
  5171: 33 08 30                 a1 = 0x30
  5174: 82 17 48                 a0 = u64 [sp + 0x48]
  5177: b4 90 01 5c              ra = 92, jump [a2]
      :                          @350 [@dyn 46]
  5181: 51 07 ec                 jump @348 if a0 == 0
      :                          @351
  5184: 28 43                    jump @359
      :                          @352
  5186: 52 19 02 12              jump @354 if a2 != 2
      :                          @353
  5190: 98 a9 01                 a2 = a3 >> 0x1
  5193: 95 a8 01                 a1 = a3 + 0x1
  5196: 98 88 01                 a1 = a1 >> 0x1
  5199: 7b 18 10                 u64 [sp + 0x10] = a1
  5202: 28 08                    jump @355
      :                          @354
  5204: 64 a9                    a2 = a3
  5206: 49 11 10                 u64 [sp + 16] = 0
  5209: 01                       fallthrough
      :                          @355
  5210: 82 78 20                 a1 = u64 [a0 + 0x20]
  5213: 7b 18 48                 u64 [sp + 0x48] = a1
  5216: 82 76 28                 s1 = u64 [a0 + 0x28]
  5219: 81 77 30                 a0 = i32 [a0 + 0x30]
  5222: 7b 17 40                 u64 [sp + 0x40] = a0
  5225: 95 95 01                 s0 = a2 + 0x1
  5228: 01                       fallthrough
      :                          @356
  5229: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5232: 51 05 27                 jump @361 if s0 == 0
      :                          @357
  5235: 82 69 20                 a2 = u64 [s1 + 0x20]
  5238: 82 17 48                 a0 = u64 [sp + 0x48]
  5241: 82 18 40                 a1 = u64 [sp + 0x40]
  5244: b4 90 01 5e              ra = 94, jump [a2]
      :                          @358 [@dyn 47]
  5248: 51 07 ed                 jump @356 if a0 == 0
      :                          @359
  5251: 33 08 01                 a1 = 0x1
  5254: 01                       fallthrough
      :                          @360
  5255: 64 87                    a0 = a1
  5257: 82 10 60                 ra = u64 [sp + 0x60]
  5260: 82 15 58                 s0 = u64 [sp + 0x58]
  5263: 82 16 50                 s1 = u64 [sp + 0x50]
  5266: 95 11 68                 sp = sp + 0x68
  5269: 32 00                    ret
      :                          @361
  5271: 82 15 48                 s0 = u64 [sp + 0x48]
  5274: 64 57                    a0 = s0
  5276: 64 68                    a1 = s1
  5278: 82 19 28                 a2 = u64 [sp + 0x28]
  5281: 82 1a 30                 a3 = u64 [sp + 0x30]
  5284: 82 1b 38                 a4 = u64 [sp + 0x38]
  5287: 50 10 60 89 00           ra = 96, jump @375
      :                          @362 [@dyn 48]
  5292: 33 08 01                 a1 = 0x1
  5295: 52 07 d8                 jump @360 if a0 != 0
      :                          @363
  5298: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5301: 64 57                    a0 = s0
  5303: 82 18 18                 a1 = u64 [sp + 0x18]
  5306: 82 19 20                 a2 = u64 [sp + 0x20]
  5309: b4 a0 01 62              ra = 98, jump [a3]
      :                          @364 [@dyn 49]
  5313: 33 08 01                 a1 = 0x1
  5316: 52 07 c3                 jump @360 if a0 != 0
      :                          @365
  5319: 82 17 10                 a0 = u64 [sp + 0x10]
  5322: 9a 77                    a0 = -a0
  5324: 7b 17 38                 u64 [sp + 0x38] = a0
  5327: 33 05 ff                 s0 = 0xffffffffffffffff
  5330: 01                       fallthrough
      :                          @366
  5331: 82 17 38                 a0 = u64 [sp + 0x38]
  5334: c8 57 07                 a0 = a0 + s0
  5337: 51 17 ff 42              jump @373 if a0 == 4294967295
      :                          @367
  5341: 82 69 20                 a2 = u64 [s1 + 0x20]
  5344: 82 17 48                 a0 = u64 [sp + 0x48]
  5347: 82 18 40                 a1 = u64 [sp + 0x40]
  5350: b4 90 01 64              ra = 100, jump [a2]
      :                          @368 [@dyn 50]
  5354: 95 55 01                 s0 = s0 + 0x1
  5357: 51 07 e6                 jump @366 if a0 == 0
      :                          @369
  5360: 28 37                    jump @374
      :                          @370
  5362: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5365: 82 17 48                 a0 = u64 [sp + 0x48]
  5368: 82 18 18                 a1 = u64 [sp + 0x18]
  5371: 82 19 20                 a2 = u64 [sp + 0x20]
  5374: b4 a0 01 66              ra = 102, jump [a3]
      :                          @371 [@dyn 51]
  5378: 33 08 01                 a1 = 0x1
  5381: 52 07 82                 jump @360 if a0 != 0
      :                          @372
  5384: 33 08                    a1 = 0
  5386: 82 17 10                 a0 = u64 [sp + 0x10]
  5389: 82 19 08                 a2 = u64 [sp + 0x8]
  5392: 7a 79 30                 u32 [a0 + 0x30] = a2
  5395: 82 19                    a2 = u64 [sp]
  5397: 78 79 38                 u8 [a0 + 0x38] = a2
  5400: 28 6f ff                 jump @360
      :                          @373
  5403: 82 15 10                 s0 = u64 [sp + 0x10]
  5406: 82 17 10                 a0 = u64 [sp + 0x10]
  5409: d8 75 08                 a1 = s0 <u a0
  5412: 28 63 ff                 jump @360
      :                          @374
  5415: 82 17 10                 a0 = u64 [sp + 0x10]
  5418: d8 75 08                 a1 = s0 <u a0
  5421: 28 5a ff                 jump @360
      :                          @375
  5424: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5427: 7b 10 20                 u64 [sp + 0x20] = ra
  5430: 7b 15 18                 u64 [sp + 0x18] = s0
  5433: 7b 16 10                 u64 [sp + 0x10] = s1
  5436: 83 9c                    i32 a5 = a2 + 0
  5438: 33 02 00 00 11           t0 = 0x110000
  5443: 64 a6                    s1 = a3
  5445: 64 85                    s0 = a1
  5447: 64 7a                    a3 = a0
  5449: aa 2c 20                 jump @378 if a5 == t0
      :                          @376
  5452: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5455: 64 a7                    a0 = a3
  5457: 64 98                    a1 = a2
  5459: 7b 1b 08                 u64 [sp + 0x8] = a4
  5462: 7b 1a                    u64 [sp] = a3
  5464: b4 c0 01 68              ra = 104, jump [a5]
      :                          @377 [@dyn 52]
  5468: 82 1a                    a3 = u64 [sp]
  5470: 82 1b 08                 a4 = u64 [sp + 0x8]
  5473: 64 78                    a1 = a0
  5475: 33 07 01                 a0 = 0x1
  5478: 52 08 20                 jump @381 if a1 != 0
      :                          @378
  5481: 51 06 1a                 jump @380 if s1 == 0
      :                          @379
  5484: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5487: 64 a7                    a0 = a3
  5489: 64 68                    a1 = s1
  5491: 64 b9                    a2 = a4
  5493: 82 10 20                 ra = u64 [sp + 0x20]
  5496: 82 15 18                 s0 = u64 [sp + 0x18]
  5499: 82 16 10                 s1 = u64 [sp + 0x10]
  5502: 95 11 28                 sp = sp + 0x28
  5505: 32 0c                    jump [a5]
      :                          @380
  5507: 33 07                    a0 = 0
  5509: 01                       fallthrough
      :                          @381
  5510: 82 10 20                 ra = u64 [sp + 0x20]
  5513: 82 15 18                 s0 = u64 [sp + 0x18]
  5516: 82 16 10                 s1 = u64 [sp + 0x10]
  5519: 95 11 28                 sp = sp + 0x28
  5522: 32 00                    ret
      :                          @382
  5524: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5528: 7b 10 80 00              u64 [sp + 0x80] = ra
  5532: 7b 15 78                 u64 [sp + 0x78] = s0
  5535: 7b 16 70                 u64 [sp + 0x70] = s1
  5538: 49 11 60 20              u64 [sp + 96] = 0x20
  5542: 33 0a 03                 a3 = 0x3
  5545: 78 1a 68                 u8 [sp + 0x68] = a3
  5548: 82 96 20                 s1 = u64 [a2 + 0x20]
  5551: 49 11 30                 u64 [sp + 48] = 0
  5554: 49 11 40                 u64 [sp + 64] = 0
  5557: 7b 17 50                 u64 [sp + 0x50] = a0
  5560: 7b 18 58                 u64 [sp + 0x58] = a1
  5563: 51 06 07 01              jump @404 if s1 == 0
      :                          @383
  5567: 82 97 28                 a0 = u64 [a2 + 0x28]
  5570: 51 07 74 01              jump @414 if a0 == 0
      :                          @384
  5574: 49 11 28                 u64 [sp + 40] = 0
  5577: 82 95                    s0 = u64 [a2]
  5579: 7b 19 08                 u64 [sp + 0x8] = a2
  5582: 82 98 10                 a1 = u64 [a2 + 0x10]
  5585: 7b 18 18                 u64 [sp + 0x18] = a1
  5588: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5591: 97 88 03                 a1 = a1 << 0x3
  5594: 98 88 03                 a1 = a1 >> 0x3
  5597: 95 88 01                 a1 = a1 + 0x1
  5600: 7b 18                    u64 [sp] = a1
  5602: 95 55 08                 s0 = s0 + 0x8
  5605: 96 78 38                 a1 = a0 * 0x38
  5608: 95 66 18                 s1 = s1 + 0x18
  5611: 33 07 54                 a0 = 0x54
  5614: 7b 17 10                 u64 [sp + 0x10] = a0
  5617: 01                       fallthrough
      :                          @385
  5618: 7b 18 20                 u64 [sp + 0x20] = a1
  5621: 82 59                    a2 = u64 [s0]
  5623: 51 09 17                 jump @388 if a2 == 0
      :                          @386
  5626: 82 1a 58                 a3 = u64 [sp + 0x58]
  5629: 82 17 50                 a0 = u64 [sp + 0x50]
  5632: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5635: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5638: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @387 [@dyn 53]
  5642: 52 07 51 01              jump @417 if a0 != 0
      :                          @388
  5646: 81 67 10                 a0 = i32 [s1 + 0x10]
  5649: 7a 17 60                 u32 [sp + 0x60] = a0
  5652: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5655: 78 17 68                 u8 [sp + 0x68] = a0
  5658: 81 67 14                 a0 = i32 [s1 + 0x14]
  5661: 7a 17 64                 u32 [sp + 0x64] = a0
  5664: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5667: 82 67                    a0 = u64 [s1]
  5669: 51 08 26                 jump @393 if a1 == 0
      :                          @389
  5672: 52 18 01 16              jump @391 if a1 != 1
      :                          @390
  5676: 97 77 04                 a0 = a0 << 0x4
  5679: 82 18 18                 a1 = u64 [sp + 0x18]
  5682: c8 87 07                 a0 = a0 + a1
  5685: 82 78 08                 a1 = u64 [a0 + 0x8]
  5688: 82 19 10                 a2 = u64 [sp + 0x10]
  5691: aa 98 07                 jump @392 if a1 == a2
      :                          @391
  5694: 33 08                    a1 = 0
  5696: 28 0f                    jump @394
      :                          @392
  5698: 82 77                    a0 = u64 [a0]
  5700: 82 77                    a0 = u64 [a0]
  5702: 33 08 01                 a1 = 0x1
  5705: 28 06                    jump @394
      :                          @393
  5707: 33 08 01                 a1 = 0x1
  5710: 01                       fallthrough
      :                          @394
  5711: 7b 18 30                 u64 [sp + 0x30] = a1
  5714: 7b 17 38                 u64 [sp + 0x38] = a0
  5717: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5720: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5723: 51 08 26                 jump @399 if a1 == 0
      :                          @395
  5726: 52 18 01 16              jump @397 if a1 != 1
      :                          @396
  5730: 97 77 04                 a0 = a0 << 0x4
  5733: 82 18 18                 a1 = u64 [sp + 0x18]
  5736: c8 87 07                 a0 = a0 + a1
  5739: 82 78 08                 a1 = u64 [a0 + 0x8]
  5742: 82 19 10                 a2 = u64 [sp + 0x10]
  5745: aa 98 07                 jump @398 if a1 == a2
      :                          @397
  5748: 33 08                    a1 = 0
  5750: 28 0f                    jump @400
      :                          @398
  5752: 82 77                    a0 = u64 [a0]
  5754: 82 77                    a0 = u64 [a0]
  5756: 33 08 01                 a1 = 0x1
  5759: 28 06                    jump @400
      :                          @399
  5761: 33 08 01                 a1 = 0x1
  5764: 01                       fallthrough
      :                          @400
  5765: 7b 18 40                 u64 [sp + 0x40] = a1
  5768: 7b 17 48                 u64 [sp + 0x48] = a0
  5771: 82 67 08                 a0 = u64 [s1 + 0x8]
  5774: 97 77 04                 a0 = a0 << 0x4
  5777: 82 18 18                 a1 = u64 [sp + 0x18]
  5780: c8 78 08                 a1 = a1 + a0
  5783: 82 87                    a0 = u64 [a1]
  5785: 82 89 08                 a2 = u64 [a1 + 0x8]
  5788: 95 18 30                 a1 = sp + 0x30
  5791: b4 90 01 6c              ra = 108, jump [a2]
      :                          @401 [@dyn 54]
  5795: 52 07 b8 00              jump @417 if a0 != 0
      :                          @402
  5799: 95 55 10                 s0 = s0 + 0x10
  5802: 82 18 20                 a1 = u64 [sp + 0x20]
  5805: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5808: 95 66 38                 s1 = s1 + 0x38
  5811: 82 17 28                 a0 = u64 [sp + 0x28]
  5814: 95 77 01                 a0 = a0 + 0x1
  5817: 7b 17 28                 u64 [sp + 0x28] = a0
  5820: 52 08 36 ff              jump @385 if a1 != 0
      :                          @403
  5824: 28 69                    jump @412
      :                          @404
  5826: 82 97 18                 a0 = u64 [a2 + 0x18]
  5829: 51 07 71                 jump @414 if a0 == 0
      :                          @405
  5832: 82 95 10                 s0 = u64 [a2 + 0x10]
  5835: 33 0a                    a3 = 0
  5837: 97 78 04                 a1 = a0 << 0x4
  5840: c8 58 08                 a1 = a1 + s0
  5843: 7b 18 20                 u64 [sp + 0x20] = a1
  5846: 7b 19 08                 u64 [sp + 0x8] = a2
  5849: 82 96                    s1 = u64 [a2]
  5851: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5854: 97 77 04                 a0 = a0 << 0x4
  5857: 98 77 04                 a0 = a0 >> 0x4
  5860: 95 77 01                 a0 = a0 + 0x1
  5863: 7b 17                    u64 [sp] = a0
  5865: 95 66 08                 s1 = s1 + 0x8
  5868: 01                       fallthrough
      :                          @406
  5869: 7b 1a 28                 u64 [sp + 0x28] = a3
  5872: 82 69                    a2 = u64 [s1]
  5874: 51 09 16                 jump @409 if a2 == 0
      :                          @407
  5877: 82 1a 58                 a3 = u64 [sp + 0x58]
  5880: 82 17 50                 a0 = u64 [sp + 0x50]
  5883: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5886: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5889: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @408 [@dyn 55]
  5893: 52 07 56                 jump @417 if a0 != 0
      :                          @409
  5896: 82 57                    a0 = u64 [s0]
  5898: 82 59 08                 a2 = u64 [s0 + 0x8]
  5901: 95 18 30                 a1 = sp + 0x30
  5904: b4 90 01 70              ra = 112, jump [a2]
      :                          @410 [@dyn 56]
  5908: 52 07 47                 jump @417 if a0 != 0
      :                          @411
  5911: 95 66 10                 s1 = s1 + 0x10
  5914: 95 55 10                 s0 = s0 + 0x10
  5917: 82 1a 28                 a3 = u64 [sp + 0x28]
  5920: 95 aa 01                 a3 = a3 + 0x1
  5923: 82 17 20                 a0 = u64 [sp + 0x20]
  5926: ab 75 c7                 jump @406 if s0 != a0
      :                          @412
  5929: 82 19 08                 a2 = u64 [sp + 0x8]
  5932: 82 1a                    a3 = u64 [sp]
  5934: 82 97 08                 a0 = u64 [a2 + 0x8]
  5937: ac 7a 0d                 jump @415 if a3 <u a0
      :                          @413
  5940: 28 2c                    jump @418
      :                          @414
  5942: 33 0a                    a3 = 0
  5944: 82 97 08                 a0 = u64 [a2 + 0x8]
  5947: 54 07 25                 jump @418 if a0 <=u 0
      :                          @415
  5950: 82 97                    a0 = u64 [a2]
  5952: 97 a8 04                 a1 = a3 << 0x4
  5955: c8 87 09                 a2 = a0 + a1
  5958: 82 1a 58                 a3 = u64 [sp + 0x58]
  5961: 82 17 50                 a0 = u64 [sp + 0x50]
  5964: 82 98                    a1 = u64 [a2]
  5966: 82 99 08                 a2 = u64 [a2 + 0x8]
  5969: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5972: b4 a0 01 72              ra = 114, jump [a3]
      :                          @416 [@dyn 57]
  5976: 51 07 08                 jump @418 if a0 == 0
      :                          @417
  5979: 33 07 01                 a0 = 0x1
  5982: 28 05                    jump @419
      :                          @418
  5984: 33 07                    a0 = 0
  5986: 01                       fallthrough
      :                          @419
  5987: 82 10 80 00              ra = u64 [sp + 0x80]
  5991: 82 15 78                 s0 = u64 [sp + 0x78]
  5994: 82 16 70                 s1 = u64 [sp + 0x70]
  5997: 95 11 88 00              sp = sp + 0x88
  6001: 32 00                    ret
      :                          @420 [@dyn 58]
  6003: 32 00                    ret
      :                          @421 [@dyn 59]
  6005: 95 11 80                 sp = sp + 0xffffffffffffff80
  6008: 7b 10 78                 u64 [sp + 0x78] = ra
  6011: 7b 15 70                 u64 [sp + 0x70] = s0
  6014: 7b 16 68                 u64 [sp + 0x68] = s1
  6017: 64 92                    t0 = a2
  6019: 33 00                    ra = 0
  6021: 33 0b                    a4 = 0
  6023: 33 05                    s0 = 0
  6025: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6035: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6041: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6051: 82 79 10                 a2 = u64 [a0 + 0x10]
  6054: 7b 19 48                 u64 [sp + 0x48] = a2
  6057: 82 79                    a2 = u64 [a0]
  6059: 7b 19 38                 u64 [sp + 0x38] = a2
  6062: 82 77 08                 a0 = u64 [a0 + 0x8]
  6065: 7b 17 30                 u64 [sp + 0x30] = a0
  6068: 33 07 0c 00 01           a0 = 0x1000c
  6073: 7b 17 08                 u64 [sp + 0x8] = a0
  6076: 3a 07 08 00 03           a0 = u64 [0x30008]
  6081: 7b 17 60                 u64 [sp + 0x60] = a0
  6084: 7b 18 58                 u64 [sp + 0x58] = a1
  6087: 95 88 08                 a1 = a1 + 0x8
  6090: 7b 18                    u64 [sp] = a1
  6092: 33 0c 0a                 a5 = 0xa
  6095: 7b 12 20                 u64 [sp + 0x20] = t0
  6098: 7b 13 18                 u64 [sp + 0x18] = t1
  6101: 7b 14 10                 u64 [sp + 0x10] = t2
  6104: 28 3a                    jump @425
      :                          @422
  6106: 64 06                    s1 = ra
  6108: c8 89 07                 a0 = a2 + a1
  6111: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6114: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6117: 88 77 01                 a0 = a0 <u 0x1
  6120: 01                       fallthrough
      :                          @423
  6121: 82 1a 48                 a3 = u64 [sp + 0x48]
  6124: 78 a7                    u8 [a3] = a0
  6126: 82 17 30                 a0 = u64 [sp + 0x30]
  6129: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6132: 82 17 38                 a0 = u64 [sp + 0x38]
  6135: b4 a0 01 78              ra = 120, jump [a3]
      :                          @424 [@dyn 60]
  6139: 64 5b                    a4 = s0
  6141: 82 12 20                 t0 = u64 [sp + 0x20]
  6144: 82 13 18                 t1 = u64 [sp + 0x18]
  6147: 82 14 10                 t2 = u64 [sp + 0x10]
  6150: 64 60                    ra = s1
  6152: 33 0c 0a                 a5 = 0xa
  6155: 82 15 40                 s0 = u64 [sp + 0x40]
  6158: 52 07 63 01              jump @466 if a0 != 0
      :                          @425
  6162: 84 57 ff 00              a0 = s0 & 0xff
  6166: 52 07 57 01              jump @465 if a0 != 0
      :                          @426
  6170: 7b 1b 50                 u64 [sp + 0x50] = a4
  6173: ae 02 0a                 jump @429 if t0 >=u ra
      :                          @427
  6176: 28 ef 00                 jump @456
      :                          @428
  6179: ac 02 ec 00              jump @456 if t0 <u ra
      :                          @429
  6183: c9 02 08                 a1 = t0 - ra
  6186: 82 16 58                 s1 = u64 [sp + 0x58]
  6189: c8 06 06                 s1 = s1 + ra
  6192: 55 18 10 1d              jump @435 if a1 >=u 16
      :                          @430
  6196: aa 02 d8 00              jump @455 if t0 == ra
      :                          @431
  6200: 33 0a                    a3 = 0
  6202: 01                       fallthrough
      :                          @432
  6203: c8 a6 07                 a0 = s1 + a3
  6206: 7c 77                    a0 = u8 [a0]
  6208: aa c7 a5 00              jump @450 if a0 == a5
      :                          @433
  6212: 95 aa 01                 a3 = a3 + 0x1
  6215: ab a8 f4                 jump @432 if a1 != a3
      :                          @434
  6218: 28 c2 00                 jump @455
      :                          @435
  6221: 95 69 07                 a2 = s1 + 0x7
  6224: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6227: c9 6a 07                 a0 = a3 - s1
  6230: d3 6a 0a                 a3 = a3 ^ s1
  6233: 88 aa 01                 a3 = a3 <u 0x1
  6236: 88 7b 01                 a4 = a0 <u 0x1
  6239: d4 ba 0a                 a3 = a3 | a4
  6242: 51 0a 45                 jump @441 if a3 == 0
      :                          @436
  6245: 33 07                    a0 = 0
  6247: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6250: 82 1b                    a4 = u64 [sp]
  6252: c8 0b 0b                 a4 = a4 + ra
  6255: 28 08                    jump @438
      :                          @437
  6257: 82 1b                    a4 = u64 [sp]
  6259: c8 0b 0b                 a4 = a4 + ra
  6262: 01                       fallthrough
      :                          @438
  6263: c8 76 0c                 a5 = s1 + a0
  6266: 82 cc                    a5 = u64 [a5]
  6268: c8 7b 09                 a2 = a4 + a0
  6271: 82 99                    a2 = u64 [a2]
  6273: d3 4c 05                 s0 = a5 ^ t2
  6276: c8 35 05                 s0 = s0 + t1
  6279: e0 c5 0c                 a5 = s0 & ~a5
  6282: d3 49 05                 s0 = a2 ^ t2
  6285: c8 35 05                 s0 = s0 + t1
  6288: e0 95 09                 a2 = s0 & ~a2
  6291: d4 c9 09                 a2 = a2 | a5
  6294: 82 1c 60                 a5 = u64 [sp + 0x60]
  6297: d2 c9 09                 a2 = a2 & a5
  6300: 52 09 1f                 jump @444 if a2 != 0
      :                          @439
  6303: 95 77 10                 a0 = a0 + 0x10
  6306: ae 7a d5                 jump @438 if a3 >=u a0
      :                          @440
  6309: 28 16                    jump @444
      :                          @441
  6311: c8 a6 0b                 a4 = s1 + a3
  6314: 7c bb                    a4 = u8 [a4]
  6316: aa cb 51                 jump @453 if a4 == a5
      :                          @442
  6319: 95 aa 01                 a3 = a3 + 0x1
  6322: ab a7 f5                 jump @441 if a0 != a3
      :                          @443
  6325: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6328: ae 7a b9                 jump @437 if a3 >=u a0
      :                          @444
  6331: aa 87 9a 00              jump @462 if a0 == a1
      :                          @445
  6335: 33 0a                    a3 = 0
  6337: c8 76 06                 s1 = s1 + a0
  6340: c9 72 08                 a1 = t0 - a0
  6343: c9 08 08                 a1 = a1 - ra
  6346: 33 0c 0a                 a5 = 0xa
  6349: 82 1b 50                 a4 = u64 [sp + 0x50]
  6352: 01                       fallthrough
      :                          @446
  6353: c8 a6 09                 a2 = s1 + a3
  6356: 7c 99                    a2 = u8 [a2]
  6358: aa c9 0b                 jump @449 if a2 == a5
      :                          @447
  6361: 95 aa 01                 a3 = a3 + 0x1
  6364: ab a8 f5                 jump @446 if a1 != a3
      :                          @448
  6367: 28 2d                    jump @455
      :                          @449
  6369: c8 7a 0a                 a3 = a3 + a0
  6372: 01                       fallthrough
      :                          @450
  6373: c8 0a 0a                 a3 = a3 + ra
  6376: 95 a0 01                 ra = a3 + 0x1
  6379: ae 2a 38 ff              jump @428 if a3 >=u t0
      :                          @451
  6383: 82 17 58                 a0 = u64 [sp + 0x58]
  6386: c8 7a 0a                 a3 = a3 + a0
  6389: 7c a7                    a0 = u8 [a3]
  6391: ab c7 2c ff              jump @428 if a0 != a5
      :                          @452
  6395: 28 61                    jump @463
      :                          @453
  6397: 82 1b 50                 a4 = u64 [sp + 0x50]
  6400: c8 0a 0a                 a3 = a3 + ra
  6403: 95 a0 01                 ra = a3 + 0x1
  6406: ac 2a e9                 jump @451 if a3 <u t0
      :                          @454
  6409: 28 1a ff                 jump @428
      :                          @455
  6412: 64 20                    ra = t0
  6414: 01                       fallthrough
      :                          @456
  6415: 49 11 40 01              u64 [sp + 64] = 0x1
  6419: 64 b5                    s0 = a4
  6421: 64 26                    s1 = t0
  6423: aa 2b 56                 jump @465 if a4 == t0
      :                          @457
  6426: 82 17 48                 a0 = u64 [sp + 0x48]
  6429: 7c 77                    a0 = u8 [a0]
  6431: 51 07 22                 jump @460 if a0 == 0
      :                          @458
  6434: 82 17 30                 a0 = u64 [sp + 0x30]
  6437: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6440: 33 09 04                 a2 = 0x4
  6443: 82 17 38                 a0 = u64 [sp + 0x38]
  6446: 82 18 08                 a1 = u64 [sp + 0x8]
  6449: 7b 10 28                 u64 [sp + 0x28] = ra
  6452: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @459 [@dyn 61]
  6456: 82 1b 50                 a4 = u64 [sp + 0x50]
  6459: 82 10 28                 ra = u64 [sp + 0x28]
  6462: 52 07 33                 jump @466 if a0 != 0
      :                          @460
  6465: c9 b6 09                 a2 = s1 - a4
  6468: 82 18 58                 a1 = u64 [sp + 0x58]
  6471: c8 b8 08                 a1 = a1 + a4
  6474: ab b6 90 fe              jump @422 if s1 != a4
      :                          @461
  6478: 64 06                    s1 = ra
  6480: 33 07                    a0 = 0
  6482: 28 97 fe                 jump @423
      :                          @462
  6485: 64 20                    ra = t0
  6487: 82 1b 50                 a4 = u64 [sp + 0x50]
  6490: 28 b5                    jump @456
      :                          @463
  6492: 49 11 40                 u64 [sp + 64] = 0
  6495: 64 05                    s0 = ra
  6497: 64 06                    s1 = ra
  6499: 82 17 48                 a0 = u64 [sp + 0x48]
  6502: 7c 77                    a0 = u8 [a0]
  6504: 52 07 ba                 jump @458 if a0 != 0
      :                          @464
  6507: 28 d6                    jump @460
      :                          @465
  6509: 33 07                    a0 = 0
  6511: 28 06                    jump @467
      :                          @466
  6513: 33 07 01                 a0 = 0x1
  6516: 01                       fallthrough
      :                          @467
  6517: 82 10 78                 ra = u64 [sp + 0x78]
  6520: 82 15 70                 s0 = u64 [sp + 0x70]
  6523: 82 16 68                 s1 = u64 [sp + 0x68]
  6526: 95 11 80 00              sp = sp + 0x80
  6530: 32 00                    ret
      :                          @468 [@dyn 62]
  6532: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6535: 7b 10 20                 u64 [sp + 0x20] = ra
  6538: 7b 15 18                 u64 [sp + 0x18] = s0
  6541: 7b 16 10                 u64 [sp + 0x10] = s1
  6544: 82 75 10                 s0 = u64 [a0 + 0x10]
  6547: 7c 59                    a2 = u8 [s0]
  6549: 82 7b                    a4 = u64 [a0]
  6551: 82 76 08                 s1 = u64 [a0 + 0x8]
  6554: 51 09 32                 jump @472 if a2 == 0
      :                          @469
  6557: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6560: 7b 18 08                 u64 [sp + 0x8] = a1
  6563: 33 08 0c 00 01           a1 = 0x1000c
  6568: 33 09 04                 a2 = 0x4
  6571: 64 b7                    a0 = a4
  6573: 7b 1b                    u64 [sp] = a4
  6575: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @470 [@dyn 63]
  6579: 82 18 08                 a1 = u64 [sp + 0x8]
  6582: 82 1b                    a4 = u64 [sp]
  6584: 51 07 14                 jump @472 if a0 == 0
      :                          @471
  6587: 33 07 01                 a0 = 0x1
  6590: 82 10 20                 ra = u64 [sp + 0x20]
  6593: 82 15 18                 s0 = u64 [sp + 0x18]
  6596: 82 16 10                 s1 = u64 [sp + 0x10]
  6599: 95 11 28                 sp = sp + 0x28
  6602: 32 00                    ret
      :                          @472
  6604: 83 87                    i32 a0 = a1 + 0
  6606: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6609: 88 77 01                 a0 = a0 <u 0x1
  6612: 78 57                    u8 [s0] = a0
  6614: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6617: 64 b7                    a0 = a4
  6619: 82 10 20                 ra = u64 [sp + 0x20]
  6622: 82 15 18                 s0 = u64 [sp + 0x18]
  6625: 82 16 10                 s1 = u64 [sp + 0x10]
  6628: 95 11 28                 sp = sp + 0x28
  6631: 32 0c                    jump [a5]
      :                          @473 [@dyn 64]
  6633: 64 8a                    a3 = a1
  6635: 33 08 40 02 01           a1 = 0x10240
  6640: 64 a9                    a2 = a3
  6642: 28 a2 fb                 jump @382
      :                          @474
  6645: 51 08 9b 00              jump @495 if a1 == 0
      :                          @475
  6649: 64 79                    a2 = a0
  6651: 7c 77                    a0 = u8 [a0]
  6653: 51 07 91 00              jump @494 if a0 == 0
      :                          @476
  6657: 51 27 ff 00 90 00        jump @496 if a0 == 255
      :                          @477
  6663: 6c 7a                    a3 = sext.b a0
  6665: 57 0a 09                 jump @479 if a3 <s 0
      :                          @478
  6668: 33 0a                    a3 = 0
  6670: 33 08                    a1 = 0
  6672: 28 73                    jump @493
      :                          @479
  6674: 55 27 c0 00 0d           jump @481 if a0 >=u 192
      :                          @480
  6679: 33 0a 01                 a3 = 0x1
  6682: 33 0b 80                 a4 = 0xffffffffffffff80
  6685: 28 4a                    jump @490
      :                          @481
  6687: 55 27 e0 00 0e           jump @483 if a0 >=u 224
      :                          @482
  6692: 33 0a 02                 a3 = 0x2
  6695: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6699: 28 3c                    jump @490
      :                          @483
  6701: 55 27 f0 00 0e           jump @485 if a0 >=u 240
      :                          @484
  6706: 33 0a 03                 a3 = 0x3
  6709: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6713: 28 2e                    jump @490
      :                          @485
  6715: 55 27 f8 00 0e           jump @487 if a0 >=u 248
      :                          @486
  6720: 33 0a 04                 a3 = 0x4
  6723: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6727: 28 20                    jump @490
      :                          @487
  6729: 55 27 fc 00 0e           jump @489 if a0 >=u 252
      :                          @488
  6734: 33 0a 05                 a3 = 0x5
  6737: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6741: 28 12                    jump @490
      :                          @489
  6743: 88 7a fe 00              a3 = a0 <u 0xfe
  6747: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6751: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6755: 85 aa 07                 a3 = a3 ^ 0x7
  6758: 01                       fallthrough
      :                          @490
  6759: ae 8a 2b                 jump @497 if a3 >=u a1
      :                          @491
  6762: 33 08                    a1 = 0
  6764: c8 b7 07                 a0 = a0 + a4
  6767: 64 ab                    a4 = a3
  6769: 01                       fallthrough
      :                          @492
  6770: c8 b9 0c                 a5 = a2 + a4
  6773: 7c cc                    a5 = u8 [a5]
  6775: 97 88 08                 a1 = a1 << 0x8
  6778: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6781: d4 c8 08                 a1 = a1 | a5
  6784: 52 0b f2                 jump @492 if a4 != 0
      :                          @493
  6787: 8a a9 03                 i32 a2 = a3 << 0x3
  6790: cf 97 07                 a0 = a0 << a2
  6793: c8 87 07                 a0 = a0 + a1
  6796: 32 00                    ret
      :                          @494
  6798: 32 00                    ret
      :                          @495
  6800: 00                       trap
      :                          @496
  6801: 00                       trap
      :                          @497
  6802: 00                       trap
      :                          @498 [@dyn 65]
  6803: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  6807: 7b 10 90 00              u64 [sp + 0x90] = ra
  6811: 7b 15 88 00              u64 [sp + 0x88] = s0
  6815: 7b 16 80 00              u64 [sp + 0x80] = s1
  6819: 64 85                    s0 = a1
  6821: 82 86 28                 s1 = u64 [a1 + 0x28]
  6824: 82 8a 20                 a3 = u64 [a1 + 0x20]
  6827: 82 6b 18                 a4 = u64 [s1 + 0x18]
  6830: 7b 17 10                 u64 [sp + 0x10] = a0
  6833: 33 08 38 02 01           a1 = 0x10238
  6838: 33 09 01                 a2 = 0x1
  6841: 7b 1a 18                 u64 [sp + 0x18] = a3
  6844: 64 a7                    a0 = a3
  6846: 7b 1b 08                 u64 [sp + 0x8] = a4
  6849: b4 b0 02 84 00           ra = 132, jump [a4]
      :                          @499 [@dyn 66]
  6854: 51 07 09                 jump @501 if a0 == 0
      :                          @500
  6857: 33 09 01                 a2 = 0x1
  6860: 28 d2 00                 jump @513
      :                          @501
  6863: 80 58 34                 a1 = u32 [s0 + 0x34]
  6866: 84 87 04                 a0 = a1 & 0x4
  6869: 52 07 21                 jump @505 if a0 != 0
      :                          @502
  6872: 82 17 10                 a0 = u64 [sp + 0x10]
  6875: 64 58                    a1 = s0
  6877: 50 20 86 00 d5 00        ra = 134, jump @514
      :                          @503 [@dyn 67]
  6883: 33 09 01                 a2 = 0x1
  6886: 52 07 b8 00              jump @513 if a0 != 0
      :                          @504
  6890: 82 57 28                 a0 = u64 [s0 + 0x28]
  6893: 82 5a 20                 a3 = u64 [s0 + 0x20]
  6896: 82 7b 18                 a4 = u64 [a0 + 0x18]
  6899: 28 99 00                 jump @511
      :                          @505
  6902: 7b 18                    u64 [sp] = a1
  6904: 33 08 72 02 01           a1 = 0x10272
  6909: 33 09 01                 a2 = 0x1
  6912: 82 17 18                 a0 = u64 [sp + 0x18]
  6915: 82 1a 08                 a3 = u64 [sp + 0x8]
  6918: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @506 [@dyn 68]
  6923: 33 09 01                 a2 = 0x1
  6926: 82 18 18                 a1 = u64 [sp + 0x18]
  6929: 52 07 8d 00              jump @513 if a0 != 0
      :                          @507
  6933: 46 11 3f 01              u8 [sp + 63] = 0x1
  6937: 7b 18 20                 u64 [sp + 0x20] = a1
  6940: 7b 16 28                 u64 [sp + 0x28] = s1
  6943: 95 17 3f                 a0 = sp + 0x3f
  6946: 7b 17 30                 u64 [sp + 0x30] = a0
  6949: 81 57 30                 a0 = i32 [s0 + 0x30]
  6952: 7c 58 38                 a1 = u8 [s0 + 0x38]
  6955: 82 59                    a2 = u64 [s0]
  6957: 82 5a 08                 a3 = u64 [s0 + 0x8]
  6960: 82 5b 10                 a4 = u64 [s0 + 0x10]
  6963: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6966: 82 16                    s1 = u64 [sp]
  6968: 7a 16 74                 u32 [sp + 0x74] = s1
  6971: 7a 17 70                 u32 [sp + 0x70] = a0
  6974: 78 18 78                 u8 [sp + 0x78] = a1
  6977: 7b 19 40                 u64 [sp + 0x40] = a2
  6980: 7b 1a 48                 u64 [sp + 0x48] = a3
  6983: 7b 1b 50                 u64 [sp + 0x50] = a4
  6986: 7b 1c 58                 u64 [sp + 0x58] = a5
  6989: 95 17 20                 a0 = sp + 0x20
  6992: 7b 17 60                 u64 [sp + 0x60] = a0
  6995: 33 07 40 02 01           a0 = 0x10240
  7000: 7b 17 68                 u64 [sp + 0x68] = a0
  7003: 95 18 40                 a1 = sp + 0x40
  7006: 82 17 10                 a0 = u64 [sp + 0x10]
  7009: 50 20 8a 00 51           ra = 138, jump @514
      :                          @508 [@dyn 69]
  7014: 52 07 63 ff              jump @500 if a0 != 0
      :                          @509
  7018: 82 18 68                 a1 = u64 [sp + 0x68]
  7021: 82 17 60                 a0 = u64 [sp + 0x60]
  7024: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7027: 33 08 70 02 01           a1 = 0x10270
  7032: 33 09 02                 a2 = 0x2
  7035: b4 a0 02 8c 00           ra = 140, jump [a3]
      :                          @510 [@dyn 70]
  7040: 82 1a 18                 a3 = u64 [sp + 0x18]
  7043: 82 1b 08                 a4 = u64 [sp + 0x8]
  7046: 33 09 01                 a2 = 0x1
  7049: 52 07 15                 jump @513 if a0 != 0
      :                          @511
  7052: 33 08 73 02 01           a1 = 0x10273
  7057: 33 09 01                 a2 = 0x1
  7060: 64 a7                    a0 = a3
  7062: b4 b0 02 8e 00           ra = 142, jump [a4]
      :                          @512 [@dyn 71]
  7067: 64 79                    a2 = a0
  7069: 01                       fallthrough
      :                          @513
  7070: 64 97                    a0 = a2
  7072: 82 10 90 00              ra = u64 [sp + 0x90]
  7076: 82 15 88 00              s0 = u64 [sp + 0x88]
  7080: 82 16 80 00              s1 = u64 [sp + 0x80]
  7084: 95 11 98 00              sp = sp + 0x98
  7088: 32 00                    ret
      :                          @514
  7090: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7094: 7b 10 80 00              u64 [sp + 0x80] = ra
  7098: 64 82                    t0 = a1
  7100: 80 88 34                 a1 = u32 [a1 + 0x34]
  7103: 84 89 10                 a2 = a1 & 0x10
  7106: 52 09 1b                 jump @517 if a2 != 0
      :                          @515
  7109: 84 88 20                 a1 = a1 & 0x20
  7112: 52 08 46                 jump @520 if a1 != 0
      :                          @516
  7115: 7c 77                    a0 = u8 [a0]
  7117: 33 08 01                 a1 = 0x1
  7120: 64 29                    a2 = t0
  7122: 82 10 80 00              ra = u64 [sp + 0x80]
  7126: 95 11 88 00              sp = sp + 0x88
  7130: 28 0c f6                 jump @318
      :                          @517
  7133: 7c 77                    a0 = u8 [a0]
  7135: 33 0a 81 00              a3 = 0x81
  7139: 95 18 7f                 a1 = sp + 0x7f
  7142: 33 03 57                 t1 = 0x57
  7145: 01                       fallthrough
      :                          @518
  7146: 64 ab                    a4 = a3
  7148: 84 7a 0f                 a3 = a0 & 0xf
  7151: 97 77 38                 a0 = a0 << 0x38
  7154: 98 77 3c                 a0 = a0 >> 0x3c
  7157: 88 ac 0a                 a5 = a3 <u 0xa
  7160: 33 09 30                 a2 = 0x30
  7163: da c3 09                 a2 = t1 if a5 == 0
  7166: be a9 09                 i32 a2 = a2 + a3
  7169: 78 89                    u8 [a1] = a2
  7171: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7174: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7177: 52 07 e1                 jump @518 if a0 != 0
      :                          @519
  7180: 28 31                    jump @522
      :                          @520
  7182: 7c 77                    a0 = u8 [a0]
  7184: 33 0a 81 00              a3 = 0x81
  7188: 95 18 7f                 a1 = sp + 0x7f
  7191: 33 03 37                 t1 = 0x37
  7194: 01                       fallthrough
      :                          @521
  7195: 64 ab                    a4 = a3
  7197: 84 7a 0f                 a3 = a0 & 0xf
  7200: 97 77 38                 a0 = a0 << 0x38
  7203: 98 77 3c                 a0 = a0 >> 0x3c
  7206: 88 ac 0a                 a5 = a3 <u 0xa
  7209: 33 09 30                 a2 = 0x30
  7212: da c3 09                 a2 = t1 if a5 == 0
  7215: be a9 09                 i32 a2 = a2 + a3
  7218: 78 89                    u8 [a1] = a2
  7220: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7223: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7226: 52 07 e1                 jump @521 if a0 != 0
      :                          @522
  7229: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  7232: 56 27 80 00 2b           jump @525 if a0 >u 128
      :                          @523
  7237: 9a ac 81 00              a5 = 0x81 - a3
  7241: 64 1b                    a4 = sp
  7243: c8 7b 0b                 a4 = a4 + a0
  7246: 33 09 74 02 01           a2 = 0x10274
  7251: 33 08 01                 a1 = 0x1
  7254: 33 0a 02                 a3 = 0x2
  7257: 64 27                    a0 = t0
  7259: 50 20 90 00 b8 f6        ra = 144, jump @328
      :                          @524 [@dyn 72]
  7265: 82 10 80 00              ra = u64 [sp + 0x80]
  7269: 95 11 88 00              sp = sp + 0x88
  7273: 32 00                    ret
      :                          @525
  7275: 00                       trap
