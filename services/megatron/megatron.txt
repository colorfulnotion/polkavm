// RO data = 888/888 bytes
// RW data = 16/16773200 bytes
// Stack size = 16773120 bytes
// RO data = [109, 101, 103, 40, 109, 101, 103, 32, 114, 101, 97, 100, 32, 32, 32, 32, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 115, 101, 114, 118, 105, 99, 101, 32, 32, 102, 105, 98, 40, 110, 61, 41, 61, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 105, 98, 40, 110, 61, 116, 114, 97, 110, 115, 102, 101, 114, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 119, 114, 105, 116, 101, 40, 110, 61, 41, 32, 110, 117, 109, 95, 116, 114, 97, 110, 115, 102, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 233, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 97, 110, 115, 102, 101, 114, 40, 100, 101, 115, 116, 58, 44, 32, 97, 109, 111, 117, 110, 116, 61, 44, 32, 103, 97, 115, 95, 97, 118, 97, 105, 108, 61, 41, 32, 82, 101, 115, 117, 108, 116, 58, 32, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 77, 101, 103, 97, 116, 114, 111, 110, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 206, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 62, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2424
// Code size = 7375 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 e0 02 00 00           jump @54
      :                          @2
    10: 28 ae 0a                 jump @166
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 07 12                 jump @318
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 74 02 01           a2 = 0x10274
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 b5 12           ra = 4, jump @328
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 50 11                 jump @318
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 74 02 01           a2 = 0x10274
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 fe 11           ra = 8, jump @328
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 99 10                 jump @318
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 74 02 01           a2 = 0x10274
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c 47 11           ra = 12, jump @328
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   578: 7b 10 18                 u64 [sp + 0x18] = ra
   581: 7b 15 10                 u64 [sp + 0x10] = s0
   584: 7b 16 08                 u64 [sp + 0x8] = s1
   587: 64 86                    s1 = a1
   589: 64 78                    a1 = a0
   591: 33 09 04                 a2 = 0x4
   594: 33 07 00 00 01           a0 = 0x10000
   599: ac 96 7c                 jump @51 if s1 <u a2
      :                          @40
   602: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
   605: 51 06 76                 jump @51 if s1 == 0
      :                          @41
   608: 95 87 04                 a0 = a1 + 0x4
   611: 7d 78                    a1 = i8 [a0]
   613: 33 05 01                 s0 = 0x1
   616: 59 08 3a                 jump @49 if a1 >=s 0
      :                          @42
   619: 84 89 ff 00              a2 = a1 & 0xff
   623: 33 05 02                 s0 = 0x2
   626: 53 29 c0 00 2d           jump @48 if a2 <u 192
      :                          @43
   631: 33 05 03                 s0 = 0x3
   634: 53 29 e0 00 25           jump @48 if a2 <u 224
      :                          @44
   639: 33 05 04                 s0 = 0x4
   642: 53 29 f0 00 1d           jump @48 if a2 <u 240
      :                          @45
   647: 33 05 05                 s0 = 0x5
   650: 53 29 f8 00 15           jump @48 if a2 <u 248
      :                          @46
   655: 33 05 06                 s0 = 0x6
   658: 53 29 fc 00 0d           jump @48 if a2 <u 252
      :                          @47
   663: 88 98 fe 00              a1 = a2 <u 0xfe
   667: 9a 85 08                 s0 = 0x8 - a1
   670: 01                       fallthrough
      :                          @48
   671: ac 56 45                 jump @53 if s1 <u s0
      :                          @49
   674: 64 58                    a1 = s0
   676: 7b 17                    u64 [sp] = a0
   678: 50 10 0e b2 17           ra = 14, jump @474
      :                          @50 [@dyn 7]
   683: 64 78                    a1 = a0
   685: e4 56 07                 a0 = maxu(s1, s0)
   688: c9 57 07                 a0 = a0 - s0
   691: d8 87 09                 a2 = a0 <u a1
   694: e4 87 07                 a0 = maxu(a0, a1)
   697: c9 87 07                 a0 = a0 - a1
   700: 88 77 20                 a0 = a0 <u 0x20
   703: d4 79 09                 a2 = a2 | a0
   706: 82 17                    a0 = u64 [sp]
   708: c8 75 05                 s0 = s0 + a0
   711: 94 98                    a1 = 0 if a2 != 0
   713: 33 07 00 00 01           a0 = 0x10000
   718: da 95 07                 a0 = s0 if a2 == 0
   721: 28 05                    jump @52
      :                          @51
   723: 33 08                    a1 = 0
   725: 01                       fallthrough
      :                          @52
   726: 82 10 18                 ra = u64 [sp + 0x18]
   729: 82 15 10                 s0 = u64 [sp + 0x10]
   732: 82 16 08                 s1 = u64 [sp + 0x8]
   735: 95 11 20                 sp = sp + 0x20
   738: 32 00                    ret
      :                          @53
   740: 00                       trap
      :                          @54 [export #1: 'accumulate']
   741: 95 11 e8 fd              sp = sp + 0xfffffffffffffde8
   745: 7b 10 10 02              u64 [sp + 0x210] = ra
   749: 7b 15 08 02              u64 [sp + 0x208] = s0
   753: 7b 16 00 02              u64 [sp + 0x200] = s1
   757: 33 09 08                 a2 = 0x8
   760: ac 98 fe 00              jump @86 if a1 <u a2
      :                          @55
   764: 51 17 fc b9 07           jump @163 if a0 == 4294967292
      :                          @56
   769: 51 07 b4 07              jump @163 if a0 == 0
      :                          @57
   773: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   776: 95 75 08                 s0 = a0 + 0x8
   779: 51 0a 45                 jump @67 if a3 == 0
      :                          @58
   782: 7d 58                    a1 = i8 [s0]
   784: 33 06 01                 s1 = 0x1
   787: 59 08 40                 jump @68 if a1 >=s 0
      :                          @59
   790: 84 89 ff 00              a2 = a1 & 0xff
   794: 33 06 02                 s1 = 0x2
   797: 53 29 c0 00 2d           jump @65 if a2 <u 192
      :                          @60
   802: 33 06 03                 s1 = 0x3
   805: 53 29 e0 00 25           jump @65 if a2 <u 224
      :                          @61
   810: 33 06 04                 s1 = 0x4
   813: 53 29 f0 00 1d           jump @65 if a2 <u 240
      :                          @62
   818: 33 06 05                 s1 = 0x5
   821: 53 29 f8 00 15           jump @65 if a2 <u 248
      :                          @63
   826: 33 06 06                 s1 = 0x6
   829: 53 29 fc 00 0d           jump @65 if a2 <u 252
      :                          @64
   834: 88 98 fe 00              a1 = a2 <u 0xfe
   838: 9a 86 08                 s1 = 0x8 - a1
   841: 01                       fallthrough
      :                          @65
   842: ae 6a 09                 jump @68 if a3 >=u s1
      :                          @66
   845: 28 a9 00                 jump @86
      :                          @67
   848: 33 06                    s1 = 0
   850: 01                       fallthrough
      :                          @68
   851: 7b 16 68                 u64 [sp + 0x68] = s1
   854: 64 57                    a0 = s0
   856: 64 68                    a1 = s1
   858: 64 a6                    s1 = a3
   860: 50 10 10 fc 16           ra = 16, jump @474
      :                          @69 [@dyn 8]
   865: 82 1a 68                 a3 = u64 [sp + 0x68]
   868: 51 07 92 00              jump @86 if a0 == 0
      :                          @70
   872: e4 a6 07                 a0 = maxu(s1, a3)
   875: c9 a7 07                 a0 = a0 - a3
   878: 53 17 60 88 00           jump @86 if a0 <u 96
      :                          @71
   883: c8 5a 08                 a1 = a3 + s0
   886: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   889: 95 87 60                 a0 = a1 + 0x60
   892: 7b 17 68                 u64 [sp + 0x68] = a0
   895: 51 06 4c                 jump @82 if s1 == 0
      :                          @72
   898: 7d 78                    a1 = i8 [a0]
   900: 33 05 01                 s0 = 0x1
   903: 59 08 37                 jump @79 if a1 >=s 0
      :                          @73
   906: 84 89 ff 00              a2 = a1 & 0xff
   910: 33 05 02                 s0 = 0x2
   913: 53 29 c0 00 2d           jump @79 if a2 <u 192
      :                          @74
   918: 33 05 03                 s0 = 0x3
   921: 53 29 e0 00 25           jump @79 if a2 <u 224
      :                          @75
   926: 33 05 04                 s0 = 0x4
   929: 53 29 f0 00 1d           jump @79 if a2 <u 240
      :                          @76
   934: 33 05 05                 s0 = 0x5
   937: 53 29 f8 00 15           jump @79 if a2 <u 248
      :                          @77
   942: 33 05 06                 s0 = 0x6
   945: 53 29 fc 00 0d           jump @79 if a2 <u 252
      :                          @78
   950: 88 98 fe 00              a1 = a2 <u 0xfe
   954: 9a 85 08                 s0 = 0x8 - a1
   957: 01                       fallthrough
      :                          @79
   958: ac 56 f8 06              jump @164 if s1 <u s0
      :                          @80
   962: 64 58                    a1 = s0
   964: 50 10 12 94 16           ra = 18, jump @474
      :                          @81 [@dyn 9]
   969: 28 07                    jump @83
      :                          @82
   971: 33 05                    s0 = 0
   973: 33 07                    a0 = 0
   975: 01                       fallthrough
      :                          @83
   976: e4 56 08                 a1 = maxu(s1, s0)
   979: c9 58 08                 a1 = a1 - s0
   982: e4 78 08                 a1 = maxu(a1, a0)
   985: c9 78 08                 a1 = a1 - a0
   988: 33 09 20                 a2 = 0x20
   991: ac 98 17                 jump @86 if a1 <u a2
      :                          @84
   994: 82 19 68                 a2 = u64 [sp + 0x68]
   997: c8 95 05                 s0 = s0 + a2
  1000: c8 57 07                 a0 = a0 + s0
  1003: 51 17 e0 ca 06           jump @163 if a0 == 4294967264
      :                          @85
  1008: 33 09 29                 a2 = 0x29
  1011: ae 98 1f                 jump @88 if a1 >=u a2
      :                          @86
  1014: 33 08                    a1 = 0
  1016: 33 05 00 00 01           s0 = 0x10000
  1021: 01                       fallthrough
      :                          @87
  1022: 64 57                    a0 = s0
  1024: 82 10 10 02              ra = u64 [sp + 0x210]
  1028: 82 15 08 02              s0 = u64 [sp + 0x208]
  1032: 82 16 00 02              s1 = u64 [sp + 0x200]
  1036: 95 11 18 02              sp = sp + 0x218
  1040: 32 00                    ret
      :                          @88
  1042: 7c 79 28                 a2 = u8 [a0 + 0x28]
  1045: 51 09 09                 jump @90 if a2 == 0
      :                          @89
  1048: 33 09                    a2 = 0
  1050: 33 08                    a1 = 0
  1052: 28 6e                    jump @103
      :                          @90
  1054: 95 8a d7                 a3 = a1 + 0xffffffffffffffd7
  1057: 95 75 29                 s0 = a0 + 0x29
  1060: 51 0a 54                 jump @101 if a3 == 0
      :                          @91
  1063: 7d 57                    a0 = i8 [s0]
  1065: 33 06 01                 s1 = 0x1
  1068: 59 07 37                 jump @98 if a0 >=s 0
      :                          @92
  1071: 84 77 ff 00              a0 = a0 & 0xff
  1075: 33 06 02                 s1 = 0x2
  1078: 53 27 c0 00 2d           jump @98 if a0 <u 192
      :                          @93
  1083: 33 06 03                 s1 = 0x3
  1086: 53 27 e0 00 25           jump @98 if a0 <u 224
      :                          @94
  1091: 33 06 04                 s1 = 0x4
  1094: 53 27 f0 00 1d           jump @98 if a0 <u 240
      :                          @95
  1099: 33 06 05                 s1 = 0x5
  1102: 53 27 f8 00 15           jump @98 if a0 <u 248
      :                          @96
  1107: 33 06 06                 s1 = 0x6
  1110: 53 27 fc 00 0d           jump @98 if a0 <u 252
      :                          @97
  1115: 88 77 fe 00              a0 = a0 <u 0xfe
  1119: 9a 76 08                 s1 = 0x8 - a0
  1122: 01                       fallthrough
      :                          @98
  1123: 7b 1a 68                 u64 [sp + 0x68] = a3
  1126: ac 6a 51 06              jump @165 if a3 <u s1
      :                          @99
  1130: 64 57                    a0 = s0
  1132: 64 68                    a1 = s1
  1134: 50 10 14 ea 15           ra = 20, jump @474
      :                          @100 [@dyn 10]
  1139: 82 1a 68                 a3 = u64 [sp + 0x68]
  1142: 28 07                    jump @102
      :                          @101
  1144: 33 06                    s1 = 0
  1146: 33 07                    a0 = 0
  1148: 01                       fallthrough
      :                          @102
  1149: c8 65 08                 a1 = s0 + s1
  1152: e4 6a 09                 a2 = maxu(a3, s1)
  1155: c9 69 09                 a2 = a2 - s1
  1158: e6 79 09                 a2 = minu(a2, a0)
  1161: 01                       fallthrough
      :                          @103
  1162: 48 11 78                 u32 [sp + 120] = 0
  1165: 49 11 70                 u64 [sp + 112] = 0
  1168: 48 21 88 00              u32 [sp + 136] = 0
  1172: 49 21 80 00              u64 [sp + 128] = 0
  1176: 46 21 8f 00              u8 [sp + 143] = 0
  1180: 48 21 98 00              u32 [sp + 152] = 0
  1184: 49 21 90 00              u64 [sp + 144] = 0
  1188: 80 87                    a0 = u32 [a1]
  1190: c8 98 08                 a1 = a1 + a2
  1193: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1197: 80 88 fc                 a1 = u32 [a1 + 0xfffffffffffffffc]
  1200: 7b 18 a8 00              u64 [sp + 0xa8] = a1
  1204: 95 18 8f 00              a1 = sp + 0x8f
  1208: 33 09 01                 a2 = 0x1
  1211: 95 1a 70                 a3 = sp + 0x70
  1214: 33 0c 0c                 a5 = 0xc
  1217: 33 0b                    a4 = 0
  1219: 0a 02                    ecalli 2 // 'read'
  1221: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  1225: 95 18 8f 00              a1 = sp + 0x8f
  1229: 33 09 01                 a2 = 0x1
  1232: 95 1a 80 00              a3 = sp + 0x80
  1236: 33 0c 0c                 a5 = 0xc
  1239: 33 0b                    a4 = 0
  1241: 0a 02                    ecalli 2 // 'read'
  1243: 81 17 74                 a0 = i32 [sp + 0x74]
  1246: 81 18 84 00              a1 = i32 [sp + 0x84]
  1250: 81 19 70                 a2 = i32 [sp + 0x70]
  1253: 7a 17 b0 00              u32 [sp + 0xb0] = a0
  1257: 81 17 78                 a0 = i32 [sp + 0x78]
  1260: 7b 17 68                 u64 [sp + 0x68] = a0
  1263: 7a 18 b4 00              u32 [sp + 0xb4] = a1
  1267: 81 17 88 00              a0 = i32 [sp + 0x88]
  1271: 7b 17 60                 u64 [sp + 0x60] = a0
  1274: 7a 19 b8 00              u32 [sp + 0xb8] = a2
  1278: 95 19 b8 00              a2 = sp + 0xb8
  1282: 7b 19 c0 00              u64 [sp + 0xc0] = a2
  1286: 33 08 06                 a1 = 0x6
  1289: 7b 18 c8 00              u64 [sp + 0xc8] = a1
  1293: 95 17 a0 00              a0 = sp + 0xa0
  1297: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1301: 33 07 0a                 a0 = 0xa
  1304: 7b 17 50                 u64 [sp + 0x50] = a0
  1307: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1311: 7b 19 e0 00              u64 [sp + 0xe0] = a2
  1315: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1319: 95 17 b0 00              a0 = sp + 0xb0
  1323: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  1327: 7b 18 58                 u64 [sp + 0x58] = a1
  1330: 7b 18 f8 00              u64 [sp + 0xf8] = a1
  1334: 33 07 30 00 01           a0 = 0x10030
  1339: 7b 17 68 01              u64 [sp + 0x168] = a0
  1343: 49 21 70 01 04           u64 [sp + 368] = 0x4
  1348: 49 21 88 01              u64 [sp + 392] = 0
  1352: 95 18 c0 00              a1 = sp + 0xc0
  1356: 7b 18 78 01              u64 [sp + 0x178] = a1
  1360: 49 21 80 01 04           u64 [sp + 384] = 0x4
  1365: 95 17 d0 01              a0 = sp + 0x1d0
  1369: 95 18 68 01              a1 = sp + 0x168
  1373: 50 10 16 5e 09           ra = 22, jump @238
      :                          @104 [@dyn 11]
  1378: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
  1382: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
  1386: 82 15 d0 01              s0 = u64 [sp + 0x1d0]
  1390: 33 07 02                 a0 = 0x2
  1393: 33 08                    a1 = 0
  1395: 33 09                    a2 = 0
  1397: 64 6a                    a3 = s1
  1399: 33 00 18                 ra = 0x18
  1402: 0a 64                    ecalli 100 // 'log'
  1404: 01                       fallthrough
      :                          @105 [@dyn 12]
  1405: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  1411: 49 11 48 01 10 00 ff     u64 [sp + 72] = 0xffffffffff001001
  1418: 53 47 01 10 00 ff 34     jump @111 if a0 <u 4278194177
      :                          @106
  1425: 64 62                    t0 = s1
  1427: 33 07 40 00 03           a0 = 0x30040
  1432: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1438: 33 09 ff ef ff 00        a2 = 0xffefff
  1444: 01                       fallthrough
      :                          @107
  1445: 82 8a                    a3 = u64 [a1]
  1447: c8 97 0b                 a4 = a0 + a2
  1450: c9 ab 0b                 a4 = a4 - a3
  1453: ab 2b 11                 jump @111 if a4 != t0
      :                          @108
  1456: c9 5a 0b                 a4 = a3 - s0
  1459: 01                       fallthrough
      :                          @109
  1460: 82 8c                    a5 = u64 [a1]
  1462: ab ac ef                 jump @107 if a5 != a3
      :                          @110
  1465: 7b 8b                    u64 [a1] = a4
  1467: 33 06                    s1 = 0
  1469: 01                       fallthrough
      :                          @111
  1470: 95 19 b8 00              a2 = sp + 0xb8
  1474: 7b 19 c0 00              u64 [sp + 0xc0] = a2
  1478: 82 18 58                 a1 = u64 [sp + 0x58]
  1481: 7b 18 c8 00              u64 [sp + 0xc8] = a1
  1485: 95 17 a8 00              a0 = sp + 0xa8
  1489: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1493: 82 17 50                 a0 = u64 [sp + 0x50]
  1496: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1500: 7b 19 e0 00              u64 [sp + 0xe0] = a2
  1504: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1508: 95 17 b4 00              a0 = sp + 0xb4
  1512: 7b 17 f0 00              u64 [sp + 0xf0] = a0
  1516: 7b 18 f8 00              u64 [sp + 0xf8] = a1
  1520: 33 07 80 00 01           a0 = 0x10080
  1525: 7b 17 68 01              u64 [sp + 0x168] = a0
  1529: 49 21 70 01 04           u64 [sp + 368] = 0x4
  1534: 49 21 88 01              u64 [sp + 392] = 0
  1538: 95 18 c0 00              a1 = sp + 0xc0
  1542: 7b 18 78 01              u64 [sp + 0x178] = a1
  1546: 49 21 80 01 04           u64 [sp + 384] = 0x4
  1551: 95 17 d0 01              a0 = sp + 0x1d0
  1555: 95 18 68 01              a1 = sp + 0x168
  1559: 50 10 1a a4 08           ra = 26, jump @238
      :                          @112 [@dyn 13]
  1564: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
  1568: 82 1b e0 01              a4 = u64 [sp + 0x1e0]
  1572: 82 15 d0 01              s0 = u64 [sp + 0x1d0]
  1576: 33 07 02                 a0 = 0x2
  1579: 33 08                    a1 = 0
  1581: 33 09                    a2 = 0
  1583: 64 6a                    a3 = s1
  1585: 33 00 1c                 ra = 0x1c
  1588: 0a 64                    ecalli 100 // 'log'
  1590: 01                       fallthrough
      :                          @113 [@dyn 14]
  1591: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  1597: 82 18 48                 a1 = u64 [sp + 0x48]
  1600: ac 87 30                 jump @119 if a0 <u a1
      :                          @114
  1603: 64 62                    t0 = s1
  1605: 33 07 40 00 03           a0 = 0x30040
  1610: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  1616: 33 09 ff ef ff 00        a2 = 0xffefff
  1622: 01                       fallthrough
      :                          @115
  1623: 82 8a                    a3 = u64 [a1]
  1625: c8 97 0b                 a4 = a0 + a2
  1628: c9 ab 0b                 a4 = a4 - a3
  1631: ab 2b 11                 jump @119 if a4 != t0
      :                          @116
  1634: c9 5a 0b                 a4 = a3 - s0
  1637: 01                       fallthrough
      :                          @117
  1638: 82 8c                    a5 = u64 [a1]
  1640: ab ac ef                 jump @115 if a5 != a3
      :                          @118
  1643: 7b 8b                    u64 [a1] = a4
  1645: 33 06                    s1 = 0
  1647: 01                       fallthrough
      :                          @119
  1648: 81 17 b0 00              a0 = i32 [sp + 0xb0]
  1652: 81 18 b4 00              a1 = i32 [sp + 0xb4]
  1656: be 87 07                 i32 a0 = a0 + a1
  1659: 7b 17 08                 u64 [sp + 0x8] = a0
  1662: 7a 17 bc 00              u32 [sp + 0xbc] = a0
  1666: 82 17 68                 a0 = u64 [sp + 0x68]
  1669: 82 18 60                 a1 = u64 [sp + 0x60]
  1672: be 87 07                 i32 a0 = a0 + a1
  1675: 7b 17                    u64 [sp] = a0
  1677: 95 17 c0 00              a0 = sp + 0xc0
  1681: 33 09 80 00              a2 = 0x80
  1685: 33 08                    a1 = 0
  1687: 50 10 1e 5c 0b           ra = 30, jump @305
      :                          @120 [@dyn 15]
  1692: 80 18 b8 00              a1 = u32 [sp + 0xb8]
  1696: 7b 18 40 01              u64 [sp + 0x140] = a1
  1700: 97 87 01                 a0 = a1 << 0x1
  1703: 95 77 01                 a0 = a0 + 0x1
  1706: 97 77 20                 a0 = a0 << 0x20
  1709: 98 77 20                 a0 = a0 >> 0x20
  1712: 7b 17 48 01              u64 [sp + 0x148] = a0
  1716: 49 21 50 01 64           u64 [sp + 336] = 0x64
  1721: 48 21 58 01              u32 [sp + 344] = 0
  1725: 51 08 64 02              jump @144 if a1 == 0
      :                          @121
  1729: 33 05                    s0 = 0
  1731: 33 0a                    a3 = 0
  1733: 64 89                    a2 = a1
  1735: 14 07 ab aa aa aa 00 00 00 00 a0 = 0xaaaaaaab
  1745: ca 78 07                 a0 = a1 * a0
  1748: 98 77 21                 a0 = a0 >> 0x21
  1751: 97 78 01                 a1 = a0 << 0x1
  1754: 7b 19 20                 u64 [sp + 0x20] = a2
  1757: bf 79 07                 i32 a0 = a2 - a0
  1760: bf 87 07                 i32 a0 = a0 - a1
  1763: 83 78 ff                 i32 a1 = a0 + 0xffffffffffffffff
  1766: 7b 18 18                 u64 [sp + 0x18] = a1
  1769: 86 77 02                 a0 = a0 | 0x2
  1772: 7b 17 10                 u64 [sp + 0x10] = a0
  1775: 33 07 06                 a0 = 0x6
  1778: 7b 17 58                 u64 [sp + 0x58] = a0
  1781: 33 07 0a                 a0 = 0xa
  1784: 7b 17 50                 u64 [sp + 0x50] = a0
  1787: 33 07 60 01 01           a0 = 0x10160
  1792: 7b 17 48                 u64 [sp + 0x48] = a0
  1795: 33 08 40 00 03           a1 = 0x30040
  1800: 7b 18 40                 u64 [sp + 0x40] = a1
  1803: 95 88 00 f0 ff 00        a1 = a1 + 0xfff000
  1809: 7b 18 38                 u64 [sp + 0x38] = a1
  1812: 49 11 30 ff ef ff 00     u64 [sp + 48] = 0xffefff
  1819: 49 11 28 01 10 00 ff     u64 [sp + 40] = 0xffffffffff001001
  1826: 28 14                    jump @123
      :                          @122
  1828: 82 17 20                 a0 = u64 [sp + 0x20]
  1831: 82 15 68                 s0 = u64 [sp + 0x68]
  1834: 82 1a 60                 a3 = u64 [sp + 0x60]
  1837: 83 aa 01                 i32 a3 = a3 + 0x1
  1840: 83 77                    i32 a0 = a0 + 0
  1842: aa 7a e9 01              jump @143 if a3 == a0
      :                          @123
  1846: 7a 1a 5c 01              u32 [sp + 0x15c] = a3
  1850: 82 17 10                 a0 = u64 [sp + 0x10]
  1853: 7b 1a 60                 u64 [sp + 0x60] = a3
  1856: 52 17 02 e8 00           jump @132 if a0 != 2
      :                          @124
  1861: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1865: 82 18 40 01              a1 = u64 [sp + 0x140]
  1869: 82 19 50 01              a2 = u64 [sp + 0x150]
  1873: 95 1a c0 00              a3 = sp + 0xc0
  1877: 0a 0b                    ecalli 11 // 'transfer'
  1879: 7b 17 60 01              u64 [sp + 0x160] = a0
  1883: 83 55 01                 i32 s0 = s0 + 0x1
  1886: 7b 15 68                 u64 [sp + 0x68] = s0
  1889: 7a 15 58 01              u32 [sp + 0x158] = s0
  1893: 95 17 5c 01              a0 = sp + 0x15c
  1897: 7b 17 68 01              u64 [sp + 0x168] = a0
  1901: 82 17 58                 a0 = u64 [sp + 0x58]
  1904: 7b 17 70 01              u64 [sp + 0x170] = a0
  1908: 95 17 a0 00              a0 = sp + 0xa0
  1912: 7b 17 78 01              u64 [sp + 0x178] = a0
  1916: 82 17 50                 a0 = u64 [sp + 0x50]
  1919: 7b 17 80 01              u64 [sp + 0x180] = a0
  1923: 95 18 40 01              a1 = sp + 0x140
  1927: 7b 18 88 01              u64 [sp + 0x188] = a1
  1931: 7b 17 90 01              u64 [sp + 0x190] = a0
  1935: 95 18 50 01              a1 = sp + 0x150
  1939: 7b 18 98 01              u64 [sp + 0x198] = a1
  1943: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1947: 95 18 60 01              a1 = sp + 0x160
  1951: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  1955: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1959: 82 17 48                 a0 = u64 [sp + 0x48]
  1962: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  1966: 49 21 d8 01 05           u64 [sp + 472] = 0x5
  1971: 49 21 f0 01              u64 [sp + 496] = 0
  1975: 95 18 68 01              a1 = sp + 0x168
  1979: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  1983: 49 21 e8 01 05           u64 [sp + 488] = 0x5
  1988: 95 17 b8 01              a0 = sp + 0x1b8
  1992: 95 18 d0 01              a1 = sp + 0x1d0
  1996: 50 10 20 ef 06           ra = 32, jump @238
      :                          @125 [@dyn 16]
  2001: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  2005: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  2009: 82 15 b8 01              s0 = u64 [sp + 0x1b8]
  2013: 33 07 02                 a0 = 0x2
  2016: 33 08                    a1 = 0
  2018: 33 09                    a2 = 0
  2020: 64 6a                    a3 = s1
  2022: 33 00 22                 ra = 0x22
  2025: 0a 64                    ecalli 100 // 'log'
  2027: 01                       fallthrough
      :                          @126 [@dyn 17]
  2028: 64 62                    t0 = s1
  2030: 82 16 30                 s1 = u64 [sp + 0x30]
  2033: 82 1c 38                 a5 = u64 [sp + 0x38]
  2036: 82 1b 40                 a4 = u64 [sp + 0x40]
  2039: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2045: 82 18 28                 a1 = u64 [sp + 0x28]
  2048: ac 87 21                 jump @131 if a0 <u a1
      :                          @127
  2051: 82 c7                    a0 = u64 [a5]
  2053: c8 6b 08                 a1 = a4 + s1
  2056: c9 78 08                 a1 = a1 - a0
  2059: ab 28 16                 jump @131 if a1 != t0
      :                          @128
  2062: c9 57 08                 a1 = a0 - s0
  2065: 01                       fallthrough
      :                          @129
  2066: 82 c9                    a2 = u64 [a5]
  2068: ab 79 ef                 jump @127 if a2 != a0
      :                          @130
  2071: 7b c8                    u64 [a5] = a1
  2073: 82 15 68                 s0 = u64 [sp + 0x68]
  2076: 82 1a 60                 a3 = u64 [sp + 0x60]
  2079: 28 09                    jump @132
      :                          @131
  2081: 82 15 68                 s0 = u64 [sp + 0x68]
  2084: 82 1a 60                 a3 = u64 [sp + 0x60]
  2087: 01                       fallthrough
      :                          @132
  2088: 82 17 18                 a0 = u64 [sp + 0x18]
  2091: 55 17 02 e4 00           jump @142 if a0 >=u 2
      :                          @133
  2096: 82 17 a8 00              a0 = u64 [sp + 0xa8]
  2100: 82 18 48 01              a1 = u64 [sp + 0x148]
  2104: 82 19 50 01              a2 = u64 [sp + 0x150]
  2108: 95 1a c0 00              a3 = sp + 0xc0
  2112: 0a 0b                    ecalli 11 // 'transfer'
  2114: 7b 17 60 01              u64 [sp + 0x160] = a0
  2118: 83 55 01                 i32 s0 = s0 + 0x1
  2121: 7b 15 68                 u64 [sp + 0x68] = s0
  2124: 7a 15 58 01              u32 [sp + 0x158] = s0
  2128: 95 17 5c 01              a0 = sp + 0x15c
  2132: 7b 17 68 01              u64 [sp + 0x168] = a0
  2136: 82 17 58                 a0 = u64 [sp + 0x58]
  2139: 7b 17 70 01              u64 [sp + 0x170] = a0
  2143: 95 17 a8 00              a0 = sp + 0xa8
  2147: 7b 17 78 01              u64 [sp + 0x178] = a0
  2151: 82 17 50                 a0 = u64 [sp + 0x50]
  2154: 7b 17 80 01              u64 [sp + 0x180] = a0
  2158: 95 18 48 01              a1 = sp + 0x148
  2162: 7b 18 88 01              u64 [sp + 0x188] = a1
  2166: 7b 17 90 01              u64 [sp + 0x190] = a0
  2170: 95 18 50 01              a1 = sp + 0x150
  2174: 7b 18 98 01              u64 [sp + 0x198] = a1
  2178: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2182: 95 18 60 01              a1 = sp + 0x160
  2186: 7b 18 a8 01              u64 [sp + 0x1a8] = a1
  2190: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2194: 82 17 48                 a0 = u64 [sp + 0x48]
  2197: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2201: 49 21 d8 01 05           u64 [sp + 472] = 0x5
  2206: 49 21 f0 01              u64 [sp + 496] = 0
  2210: 95 18 68 01              a1 = sp + 0x168
  2214: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  2218: 49 21 e8 01 05           u64 [sp + 488] = 0x5
  2223: 95 17 b8 01              a0 = sp + 0x1b8
  2227: 95 18 d0 01              a1 = sp + 0x1d0
  2231: 50 10 24 04 06           ra = 36, jump @238
      :                          @134 [@dyn 18]
  2236: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  2240: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  2244: 82 15 b8 01              s0 = u64 [sp + 0x1b8]
  2248: 33 07 02                 a0 = 0x2
  2251: 33 08                    a1 = 0
  2253: 33 09                    a2 = 0
  2255: 64 6a                    a3 = s1
  2257: 33 00 26                 ra = 0x26
  2260: 0a 64                    ecalli 100 // 'log'
  2262: 01                       fallthrough
      :                          @135 [@dyn 19]
  2263: 64 62                    t0 = s1
  2265: 82 16 30                 s1 = u64 [sp + 0x30]
  2268: 82 1c 38                 a5 = u64 [sp + 0x38]
  2271: 82 1b 40                 a4 = u64 [sp + 0x40]
  2274: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2280: 82 18 28                 a1 = u64 [sp + 0x28]
  2283: ac 87 39 fe              jump @122 if a0 <u a1
      :                          @136
  2287: 82 c7                    a0 = u64 [a5]
  2289: c8 6b 08                 a1 = a4 + s1
  2292: c9 78 08                 a1 = a1 - a0
  2295: ab 28 2d fe              jump @122 if a1 != t0
      :                          @137
  2299: c9 57 08                 a1 = a0 - s0
  2302: 01                       fallthrough
      :                          @138
  2303: 82 c9                    a2 = u64 [a5]
  2305: ab 79 ee                 jump @136 if a2 != a0
      :                          @139
  2308: 7b c8                    u64 [a5] = a1
  2310: 33 0a                    a3 = 0
  2312: 01                       fallthrough
      :                          @140
  2313: ab 79 e6                 jump @136 if a2 != a0
      :                          @141
  2316: 28 18 fe                 jump @122
      :                          @142
  2319: 82 17 20                 a0 = u64 [sp + 0x20]
  2322: 83 aa 01                 i32 a3 = a3 + 0x1
  2325: 83 77                    i32 a0 = a0 + 0
  2327: ab 7a 1f fe              jump @123 if a3 != a0
      :                          @143
  2331: 81 17 b8 00              a0 = i32 [sp + 0xb8]
  2335: 28 05                    jump @145
      :                          @144
  2337: 33 07                    a0 = 0
  2339: 01                       fallthrough
      :                          @145
  2340: 7a 17 90 00              u32 [sp + 0x90] = a0
  2344: 82 17 08                 a0 = u64 [sp + 0x8]
  2347: 7a 17 94 00              u32 [sp + 0x94] = a0
  2351: 82 17                    a0 = u64 [sp]
  2353: 7a 17 98 00              u32 [sp + 0x98] = a0
  2357: 95 17 b8 00              a0 = sp + 0xb8
  2361: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2365: 33 07 06                 a0 = 0x6
  2368: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  2372: 95 18 bc 00              a1 = sp + 0xbc
  2376: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  2380: 7b 17 60                 u64 [sp + 0x60] = a0
  2383: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  2387: 33 07 c0 00 01           a0 = 0x100c0
  2392: 7b 17 68 01              u64 [sp + 0x168] = a0
  2396: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2401: 49 21 88 01              u64 [sp + 392] = 0
  2405: 95 18 d0 01              a1 = sp + 0x1d0
  2409: 7b 18 78 01              u64 [sp + 0x178] = a1
  2413: 49 21 80 01 02           u64 [sp + 384] = 0x2
  2418: 95 17 b8 01              a0 = sp + 0x1b8
  2422: 95 18 68 01              a1 = sp + 0x168
  2426: 50 10 28 41 05           ra = 40, jump @238
      :                          @146 [@dyn 20]
  2431: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  2435: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  2439: 82 15 b8 01              s0 = u64 [sp + 0x1b8]
  2443: 33 07 02                 a0 = 0x2
  2446: 33 08                    a1 = 0
  2448: 33 09                    a2 = 0
  2450: 64 6a                    a3 = s1
  2452: 33 00 2a                 ra = 0x2a
  2455: 0a 64                    ecalli 100 // 'log'
  2457: 01                       fallthrough
      :                          @147 [@dyn 21]
  2458: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2464: 49 11 68 01 10 00 ff     u64 [sp + 104] = 0xffffffffff001001
  2471: 53 47 01 10 00 ff 34     jump @153 if a0 <u 4278194177
      :                          @148
  2478: 64 62                    t0 = s1
  2480: 33 07 40 00 03           a0 = 0x30040
  2485: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  2491: 33 09 ff ef ff 00        a2 = 0xffefff
  2497: 01                       fallthrough
      :                          @149
  2498: 82 8a                    a3 = u64 [a1]
  2500: c8 97 0b                 a4 = a0 + a2
  2503: c9 ab 0b                 a4 = a4 - a3
  2506: ab 2b 11                 jump @153 if a4 != t0
      :                          @150
  2509: c9 5a 0b                 a4 = a3 - s0
  2512: 01                       fallthrough
      :                          @151
  2513: 82 8c                    a5 = u64 [a1]
  2515: ab ac ef                 jump @149 if a5 != a3
      :                          @152
  2518: 7b 8b                    u64 [a1] = a4
  2520: 33 06                    s1 = 0
  2522: 01                       fallthrough
      :                          @153
  2523: 95 17 8f 00              a0 = sp + 0x8f
  2527: 33 08 01                 a1 = 0x1
  2530: 95 19 90 00              a2 = sp + 0x90
  2534: 33 0a 0c                 a3 = 0xc
  2537: 0a 03                    ecalli 3 // 'write'
  2539: 95 17 b8 00              a0 = sp + 0xb8
  2543: 7b 17 68 01              u64 [sp + 0x168] = a0
  2547: 82 17 60                 a0 = u64 [sp + 0x60]
  2550: 7b 17 70 01              u64 [sp + 0x170] = a0
  2554: 95 18 bc 00              a1 = sp + 0xbc
  2558: 7b 18 78 01              u64 [sp + 0x178] = a1
  2562: 7b 17 80 01              u64 [sp + 0x180] = a0
  2566: 95 17 58 01              a0 = sp + 0x158
  2570: 7b 17 88 01              u64 [sp + 0x188] = a0
  2574: 33 07 02                 a0 = 0x2
  2577: 7b 17 90 01              u64 [sp + 0x190] = a0
  2581: 33 07 00 01 01           a0 = 0x10100
  2586: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2590: 49 21 d8 01 03           u64 [sp + 472] = 0x3
  2595: 49 21 f0 01              u64 [sp + 496] = 0
  2599: 95 18 68 01              a1 = sp + 0x168
  2603: 7b 18 e0 01              u64 [sp + 0x1e0] = a1
  2607: 49 21 e8 01 03           u64 [sp + 488] = 0x3
  2612: 95 17 b8 01              a0 = sp + 0x1b8
  2616: 95 18 d0 01              a1 = sp + 0x1d0
  2620: 50 10 2c 7f 04           ra = 44, jump @238
      :                          @154 [@dyn 22]
  2625: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  2629: 82 1b c8 01              a4 = u64 [sp + 0x1c8]
  2633: 82 15 b8 01              s0 = u64 [sp + 0x1b8]
  2637: 33 07 02                 a0 = 0x2
  2640: 33 08                    a1 = 0
  2642: 33 09                    a2 = 0
  2644: 64 6a                    a3 = s1
  2646: 33 00 2e                 ra = 0x2e
  2649: 0a 64                    ecalli 100 // 'log'
  2651: 01                       fallthrough
      :                          @155 [@dyn 23]
  2652: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2658: 82 18 68                 a1 = u64 [sp + 0x68]
  2661: ac 87 30                 jump @161 if a0 <u a1
      :                          @156
  2664: 64 62                    t0 = s1
  2666: 33 07 40 00 03           a0 = 0x30040
  2671: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  2677: 33 09 ff ef ff 00        a2 = 0xffefff
  2683: 01                       fallthrough
      :                          @157
  2684: 82 8a                    a3 = u64 [a1]
  2686: c8 97 0b                 a4 = a0 + a2
  2689: c9 ab 0b                 a4 = a4 - a3
  2692: ab 2b 11                 jump @161 if a4 != t0
      :                          @158
  2695: c9 5a 0b                 a4 = a3 - s0
  2698: 01                       fallthrough
      :                          @159
  2699: 82 8c                    a5 = u64 [a1]
  2701: ab ac ef                 jump @157 if a5 != a3
      :                          @160
  2704: 7b 8b                    u64 [a1] = a4
  2706: 33 06                    s1 = 0
  2708: 01                       fallthrough
      :                          @161
  2709: 33 05 11 00 03           s0 = 0x30011
  2714: 95 18 90 00              a1 = sp + 0x90
  2718: 33 09 0c                 a2 = 0xc
  2721: 33 07 11 00 03           a0 = 0x30011
  2726: 50 10 30 9b 06           ra = 48, jump @287
      :                          @162 [@dyn 24]
  2731: 64 57                    a0 = s0
  2733: 0a 10                    ecalli 16 // 'oyield'
  2735: 33 08 20                 a1 = 0x20
  2738: 28 4c f9                 jump @87
      :                          @163
  2741: 00                       trap
      :                          @164
  2742: 00                       trap
      :                          @165
  2743: 00                       trap
      :                          @166 [export #2: 'on_transfer']
  2744: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
  2748: 7b 10 18 01              u64 [sp + 0x118] = ra
  2752: 7b 15 10 01              u64 [sp + 0x110] = s0
  2756: 7b 16 08 01              u64 [sp + 0x108] = s1
  2760: 0a                       ecalli 0 // 'gas'
  2761: 7b 17 10                 u64 [sp + 0x10] = a0
  2764: 7b 17 18                 u64 [sp + 0x18] = a0
  2767: 46 11 27 04              u8 [sp + 39] = 0x4
  2771: 7b 17 28                 u64 [sp + 0x28] = a0
  2774: 95 15 27                 s0 = sp + 0x27
  2777: 33 06 01                 s1 = 0x1
  2780: 95 17 27                 a0 = sp + 0x27
  2783: 33 08 01                 a1 = 0x1
  2786: 95 19 28                 a2 = sp + 0x28
  2789: 33 0a 08                 a3 = 0x8
  2792: 0a 03                    ecalli 3 // 'write'
  2794: 7b 15 78                 u64 [sp + 0x78] = s0
  2797: 33 07 82 00              a0 = 0x82
  2801: 7b 17 80 00              u64 [sp + 0x80] = a0
  2805: 95 17 18                 a0 = sp + 0x18
  2808: 7b 17 88 00              u64 [sp + 0x88] = a0
  2812: 33 07 0a                 a0 = 0xa
  2815: 7b 17 08                 u64 [sp + 0x8] = a0
  2818: 7b 17 90 00              u64 [sp + 0x90] = a0
  2822: 49 21 98 00 02           u64 [sp + 152] = 0x2
  2827: 49 21 a8 00 02           u64 [sp + 168] = 0x2
  2832: 49 21 b8 00              u64 [sp + 184] = 0
  2836: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2846: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2850: 46 21 c8 00 03           u8 [sp + 200] = 0x3
  2855: 49 21 d0 00 02           u64 [sp + 208] = 0x2
  2860: 49 21 e0 00 02           u64 [sp + 224] = 0x2
  2865: 7b 16 f0 00              u64 [sp + 0xf0] = s1
  2869: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2873: 46 21 00 01 03           u8 [sp + 256] = 0x3
  2878: 33 07 58 03 01           a0 = 0x10358
  2883: 7b 17 48                 u64 [sp + 0x48] = a0
  2886: 49 11 50 02              u64 [sp + 80] = 0x2
  2890: 95 17 98 00              a0 = sp + 0x98
  2894: 7b 17 68                 u64 [sp + 0x68] = a0
  2897: 49 11 70 02              u64 [sp + 112] = 0x2
  2901: 95 17 78                 a0 = sp + 0x78
  2904: 7b 17 58                 u64 [sp + 0x58] = a0
  2907: 49 11 60 02              u64 [sp + 96] = 0x2
  2911: 95 17 30                 a0 = sp + 0x30
  2914: 95 18 48                 a1 = sp + 0x48
  2917: 50 10 32 56 03           ra = 50, jump @238
      :                          @167 [@dyn 25]
  2922: 82 16 38                 s1 = u64 [sp + 0x38]
  2925: 82 1b 40                 a4 = u64 [sp + 0x40]
  2928: 82 15 30                 s0 = u64 [sp + 0x30]
  2931: 33 07 02                 a0 = 0x2
  2934: 33 08                    a1 = 0
  2936: 33 09                    a2 = 0
  2938: 64 6a                    a3 = s1
  2940: 33 00 34                 ra = 0x34
  2943: 0a 64                    ecalli 100 // 'log'
  2945: 01                       fallthrough
      :                          @168 [@dyn 26]
  2946: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2952: 49 01 01 10 00 ff        u64 [sp + 0] = 0xffffffffff001001
  2958: 53 47 01 10 00 ff 34     jump @174 if a0 <u 4278194177
      :                          @169
  2965: 64 62                    t0 = s1
  2967: 33 07 40 00 03           a0 = 0x30040
  2972: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  2978: 33 09 ff ef ff 00        a2 = 0xffefff
  2984: 01                       fallthrough
      :                          @170
  2985: 82 8a                    a3 = u64 [a1]
  2987: c8 97 0b                 a4 = a0 + a2
  2990: c9 ab 0b                 a4 = a4 - a3
  2993: ab 2b 11                 jump @174 if a4 != t0
      :                          @171
  2996: c9 5a 0b                 a4 = a3 - s0
  2999: 01                       fallthrough
      :                          @172
  3000: 82 8c                    a5 = u64 [a1]
  3002: ab ac ef                 jump @170 if a5 != a3
      :                          @173
  3005: 7b 8b                    u64 [a1] = a4
  3007: 33 06                    s1 = 0
  3009: 01                       fallthrough
      :                          @174
  3010: 95 17 10                 a0 = sp + 0x10
  3013: 7b 17 78                 u64 [sp + 0x78] = a0
  3016: 82 17 08                 a0 = u64 [sp + 0x8]
  3019: 7b 17 80 00              u64 [sp + 0x80] = a0
  3023: 33 07 e8 01 01           a0 = 0x101e8
  3028: 7b 17 98 00              u64 [sp + 0x98] = a0
  3032: 49 21 a0 00 02           u64 [sp + 160] = 0x2
  3037: 49 21 b8 00              u64 [sp + 184] = 0
  3041: 95 17 78                 a0 = sp + 0x78
  3044: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  3048: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  3053: 95 17 48                 a0 = sp + 0x48
  3056: 95 18 98 00              a1 = sp + 0x98
  3060: 50 10 36 c7 02           ra = 54, jump @238
      :                          @175 [@dyn 27]
  3065: 82 16 50                 s1 = u64 [sp + 0x50]
  3068: 82 1b 58                 a4 = u64 [sp + 0x58]
  3071: 82 15 48                 s0 = u64 [sp + 0x48]
  3074: 33 07 02                 a0 = 0x2
  3077: 33 08                    a1 = 0
  3079: 33 09                    a2 = 0
  3081: 64 6a                    a3 = s1
  3083: 33 00 38                 ra = 0x38
  3086: 0a 64                    ecalli 100 // 'log'
  3088: 01                       fallthrough
      :                          @176 [@dyn 28]
  3089: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  3095: 82 18                    a1 = u64 [sp]
  3097: ac 87 2e                 jump @182 if a0 <u a1
      :                          @177
  3100: 64 62                    t0 = s1
  3102: 33 07 40 00 03           a0 = 0x30040
  3107: 95 78 00 f0 ff 00        a1 = a0 + 0xfff000
  3113: 33 09 ff ef ff 00        a2 = 0xffefff
  3119: 01                       fallthrough
      :                          @178
  3120: 82 8a                    a3 = u64 [a1]
  3122: c8 97 0b                 a4 = a0 + a2
  3125: c9 ab 0b                 a4 = a4 - a3
  3128: ab 2b 0f                 jump @182 if a4 != t0
      :                          @179
  3131: c9 5a 0b                 a4 = a3 - s0
  3134: 01                       fallthrough
      :                          @180
  3135: 82 8c                    a5 = u64 [a1]
  3137: ab ac ef                 jump @178 if a5 != a3
      :                          @181
  3140: 7b 8b                    u64 [a1] = a4
  3142: 01                       fallthrough
      :                          @182
  3143: 33 07 00 00 01           a0 = 0x10000
  3148: 33 08                    a1 = 0
  3150: 82 10 18 01              ra = u64 [sp + 0x118]
  3154: 82 15 10 01              s0 = u64 [sp + 0x110]
  3158: 82 16 08 01              s1 = u64 [sp + 0x108]
  3162: 95 11 20 01              sp = sp + 0x120
  3166: 32 00                    ret
      :                          @183
  3168: 00                       trap
      :                          @184
  3169: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3172: 7b 10 40                 u64 [sp + 0x40] = ra
  3175: 7b 15 38                 u64 [sp + 0x38] = s0
  3178: 7b 16 30                 u64 [sp + 0x30] = s1
  3181: c8 89 09                 a2 = a2 + a1
  3184: ac 89 52                 jump @192 if a2 <u a1
      :                          @185
  3187: 64 75                    s0 = a0
  3189: 82 77                    a0 = u64 [a0]
  3191: 97 78 01                 a1 = a0 << 0x1
  3194: 33 0a 08                 a3 = 0x8
  3197: e4 a9 09                 a2 = maxu(a2, a3)
  3200: e4 98 06                 s1 = maxu(a1, a2)
  3203: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3206: 98 88 3f                 a1 = a1 >> 0x3f
  3209: 51 07 12                 jump @187 if a0 == 0
      :                          @186
  3212: 82 59 08                 a2 = u64 [s0 + 0x8]
  3215: 7b 19 18                 u64 [sp + 0x18] = a2
  3218: 49 11 20 01              u64 [sp + 32] = 0x1
  3222: 7b 17 28                 u64 [sp + 0x28] = a0
  3225: 28 06                    jump @188
      :                          @187
  3227: 49 11 20                 u64 [sp + 32] = 0
  3230: 01                       fallthrough
      :                          @188
  3231: 64 17                    a0 = sp
  3233: 95 1a 18                 a3 = sp + 0x18
  3236: 64 69                    a2 = s1
  3238: 50 10 3a 31              ra = 58, jump @195
      :                          @189 [@dyn 29]
  3242: 82 18                    a1 = u64 [sp]
  3244: 82 17 08                 a0 = u64 [sp + 0x8]
  3247: 51 08 14                 jump @193 if a1 == 0
      :                          @190
  3250: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3260: aa 87 0d                 jump @194 if a0 == a1
      :                          @191
  3263: 52 07 a1                 jump @183 if a0 != 0
      :                          @192
  3266: 00                       trap
      :                          @193
  3267: 7b 57 08                 u64 [s0 + 0x8] = a0
  3270: 7b 56                    u64 [s0] = s1
  3272: 01                       fallthrough
      :                          @194
  3273: 82 10 40                 ra = u64 [sp + 0x40]
  3276: 82 15 38                 s0 = u64 [sp + 0x38]
  3279: 82 16 30                 s1 = u64 [sp + 0x30]
  3282: 95 11 48                 sp = sp + 0x48
  3285: 32 00                    ret
      :                          @195
  3287: 64 93                    t1 = a2
  3289: 64 72                    t0 = a0
  3291: 51 08 8f 00              jump @205 if a1 == 0
      :                          @196
  3295: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  3298: 7b 10 38                 u64 [sp + 0x38] = ra
  3301: 7b 15 30                 u64 [sp + 0x30] = s0
  3304: 7b 16 28                 u64 [sp + 0x28] = s1
  3307: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3310: 51 07 89 00              jump @206 if a0 == 0
      :                          @197
  3314: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3317: 51 09 ba 00              jump @213 if a2 == 0
      :                          @198
  3321: 82 a8                    a1 = u64 [a3]
  3323: 33 06 40 00 03           s1 = 0x30040
  3328: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  3334: 33 05 ff ef ff 00        s0 = 0xffefff
  3340: 01                       fallthrough
      :                          @199
  3341: 82 6a                    a3 = u64 [s1]
  3343: c8 3a 07                 a0 = a3 + t1
  3346: ac a7 e0 00              jump @219 if a0 <u a3
      :                          @200
  3350: 95 7b 01                 a4 = a0 + 0x1
  3353: 88 bc 01                 a5 = a4 <u 0x1
  3356: d8 b5 0b                 a4 = s0 <u a4
  3359: d4 cb 0b                 a4 = a4 | a5
  3362: 52 0b d0 00              jump @219 if a4 != 0
      :                          @201
  3366: 82 6b                    a4 = u64 [s1]
  3368: ab ab e5                 jump @199 if a4 != a3
      :                          @202
  3371: 7b 67                    u64 [s1] = a0
  3373: 33 0c                    a5 = 0
  3375: 7b 13 10                 u64 [sp + 0x10] = t1
  3378: 7b 12 20                 u64 [sp + 0x20] = t0
  3381: 33 05 ff ef ff 00        s0 = 0xffefff
  3387: 33 0a 40 00 03           a3 = 0x30040
  3392: 7b 1a                    u64 [sp] = a3
  3394: c8 5a 0a                 a3 = a3 + s0
  3397: c9 7a 07                 a0 = a3 - a0
  3400: 7b 17 18                 u64 [sp + 0x18] = a0
  3403: 7b 18 08                 u64 [sp + 0x8] = a1
  3406: 64 96                    s1 = a2
  3408: 50 10 3c f1 03           ra = 60, jump @287
      :                          @203 [@dyn 30]
  3413: ae 65 a5 00              jump @220 if s0 >=u s1
      :                          @204
  3417: 82 12 20                 t0 = u64 [sp + 0x20]
  3420: 82 13 10                 t1 = u64 [sp + 0x10]
  3423: 82 18 18                 a1 = u64 [sp + 0x18]
  3426: 33 07                    a0 = 0
  3428: 7b 28 08                 u64 [t0 + 0x8] = a1
  3431: 28 c9 00                 jump @226
      :                          @205
  3434: 49 12 08                 u64 [t0 + 8] = 0
  3437: 33 07 01                 a0 = 0x1
  3440: 7b 23 10                 u64 [t0 + 0x10] = t1
  3443: 7b 27                    u64 [t0] = a0
  3445: 32 00                    ret
      :                          @206
  3447: 33 07 40 00 03           a0 = 0x30040
  3452: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3458: 33 09 ff ef ff 00        a2 = 0xffefff
  3464: 01                       fallthrough
      :                          @207
  3465: 82 7a                    a3 = u64 [a0]
  3467: c8 3a 08                 a1 = a3 + t1
  3470: ac a8 64                 jump @219 if a1 <u a3
      :                          @208
  3473: 95 8b 01                 a4 = a1 + 0x1
  3476: 88 bc 01                 a5 = a4 <u 0x1
  3479: d8 b9 0b                 a4 = a2 <u a4
  3482: d4 cb 0b                 a4 = a4 | a5
  3485: 52 0b 55                 jump @219 if a4 != 0
      :                          @209
  3488: 82 7b                    a4 = u64 [a0]
  3490: ab ab e7                 jump @207 if a4 != a3
      :                          @210
  3493: 7b 78                    u64 [a0] = a1
  3495: 33 0c                    a5 = 0
  3497: 01                       fallthrough
      :                          @211
  3498: ab ab df                 jump @207 if a4 != a3
      :                          @212
  3501: 28 35                    jump @218
      :                          @213
  3503: 33 07 40 00 03           a0 = 0x30040
  3508: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  3514: 33 09 ff ef ff 00        a2 = 0xffefff
  3520: 01                       fallthrough
      :                          @214
  3521: 82 7a                    a3 = u64 [a0]
  3523: c8 3a 08                 a1 = a3 + t1
  3526: ac a8 2c                 jump @219 if a1 <u a3
      :                          @215
  3529: 95 8b 01                 a4 = a1 + 0x1
  3532: 88 bc 01                 a5 = a4 <u 0x1
  3535: d8 b9 0b                 a4 = a2 <u a4
  3538: d4 cb 0b                 a4 = a4 | a5
  3541: 52 0b 1d                 jump @219 if a4 != 0
      :                          @216
  3544: 82 7b                    a4 = u64 [a0]
  3546: ab ab e7                 jump @214 if a4 != a3
      :                          @217
  3549: 7b 78                    u64 [a0] = a1
  3551: 33 0c                    a5 = 0
  3553: 01                       fallthrough
      :                          @218
  3554: 33 07 3f f0 02 01        a0 = 0x102f03f
  3560: c9 87 08                 a1 = a0 - a1
  3563: 33 07                    a0 = 0
  3565: 7b 28 08                 u64 [t0 + 0x8] = a1
  3568: 28 40                    jump @226
      :                          @219
  3570: 33 07 01                 a0 = 0x1
  3573: 7b 27 08                 u64 [t0 + 0x8] = a0
  3576: 28 38                    jump @226
      :                          @220
  3578: 64 6c                    a5 = s1
  3580: 82 16                    s1 = u64 [sp]
  3582: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
  3588: 82 12 20                 t0 = u64 [sp + 0x20]
  3591: 82 14 08                 t2 = u64 [sp + 0x8]
  3594: 82 13 10                 t1 = u64 [sp + 0x10]
  3597: 01                       fallthrough
      :                          @221
  3598: 82 78                    a1 = u64 [a0]
  3600: c8 56 09                 a2 = s1 + s0
  3603: c9 89 09                 a2 = a2 - a1
  3606: ab 49 11                 jump @225 if a2 != t2
      :                          @222
  3609: c9 c8 09                 a2 = a1 - a5
  3612: 01                       fallthrough
      :                          @223
  3613: 82 7a                    a3 = u64 [a0]
  3615: ab 8a ef                 jump @221 if a3 != a1
      :                          @224
  3618: 7b 79                    u64 [a0] = a2
  3620: 33 0b                    a4 = 0
  3622: 01                       fallthrough
      :                          @225
  3623: 82 18 18                 a1 = u64 [sp + 0x18]
  3626: 33 07                    a0 = 0
  3628: 7b 28 08                 u64 [t0 + 0x8] = a1
  3631: 01                       fallthrough
      :                          @226
  3632: 82 10 38                 ra = u64 [sp + 0x38]
  3635: 82 15 30                 s0 = u64 [sp + 0x30]
  3638: 82 16 28                 s1 = u64 [sp + 0x28]
  3641: 95 11 40                 sp = sp + 0x40
  3644: 7b 23 10                 u64 [t0 + 0x10] = t1
  3647: 7b 27                    u64 [t0] = a0
  3649: 32 00                    ret
      :                          @227
  3651: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3654: 7b 10 40                 u64 [sp + 0x40] = ra
  3657: 7b 15 38                 u64 [sp + 0x38] = s0
  3660: 7b 16 30                 u64 [sp + 0x30] = s1
  3663: 95 88 01                 a1 = a1 + 0x1
  3666: 51 08 54                 jump @235 if a1 == 0
      :                          @228
  3669: 64 75                    s0 = a0
  3671: 82 77                    a0 = u64 [a0]
  3673: 97 79 01                 a2 = a0 << 0x1
  3676: 33 0a 08                 a3 = 0x8
  3679: e4 a8 08                 a1 = maxu(a1, a3)
  3682: e4 89 06                 s1 = maxu(a2, a1)
  3685: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3688: 98 88 3f                 a1 = a1 >> 0x3f
  3691: 51 07 12                 jump @230 if a0 == 0
      :                          @229
  3694: 82 59 08                 a2 = u64 [s0 + 0x8]
  3697: 7b 19 18                 u64 [sp + 0x18] = a2
  3700: 49 11 20 01              u64 [sp + 32] = 0x1
  3704: 7b 17 28                 u64 [sp + 0x28] = a0
  3707: 28 06                    jump @231
      :                          @230
  3709: 49 11 20                 u64 [sp + 32] = 0
  3712: 01                       fallthrough
      :                          @231
  3713: 64 17                    a0 = sp
  3715: 95 1a 18                 a3 = sp + 0x18
  3718: 64 69                    a2 = s1
  3720: 50 10 3e 4f fe           ra = 62, jump @195
      :                          @232 [@dyn 31]
  3725: 82 18                    a1 = u64 [sp]
  3727: 82 17 08                 a0 = u64 [sp + 0x8]
  3730: 51 08 15                 jump @236 if a1 == 0
      :                          @233
  3733: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3743: aa 87 0e                 jump @237 if a0 == a1
      :                          @234
  3746: 52 07 be fd              jump @183 if a0 != 0
      :                          @235
  3750: 00                       trap
      :                          @236
  3751: 7b 57 08                 u64 [s0 + 0x8] = a0
  3754: 7b 56                    u64 [s0] = s1
  3756: 01                       fallthrough
      :                          @237
  3757: 82 10 40                 ra = u64 [sp + 0x40]
  3760: 82 15 38                 s0 = u64 [sp + 0x38]
  3763: 82 16 30                 s1 = u64 [sp + 0x30]
  3766: 95 11 48                 sp = sp + 0x48
  3769: 32 00                    ret
      :                          @238
  3771: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3774: 7b 10 30                 u64 [sp + 0x30] = ra
  3777: 7b 15 28                 u64 [sp + 0x28] = s0
  3780: 7b 16 20                 u64 [sp + 0x20] = s1
  3783: 64 89                    a2 = a1
  3785: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3788: 64 75                    s0 = a0
  3790: 51 0a 35                 jump @243 if a3 == 0
      :                          @239
  3793: 82 98                    a1 = u64 [a2]
  3795: 33 07                    a0 = 0
  3797: 95 8b 08                 a4 = a1 + 0x8
  3800: 01                       fallthrough
      :                          @240
  3801: 82 bc                    a5 = u64 [a4]
  3803: c8 c7 07                 a0 = a0 + a5
  3806: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3809: 95 bb 10                 a4 = a4 + 0x10
  3812: 52 0a f5                 jump @240 if a3 != 0
      :                          @241
  3815: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3818: 51 0a 24                 jump @245 if a3 == 0
      :                          @242
  3821: 82 88 08                 a1 = u64 [a1 + 0x8]
  3824: 8e 88                    a1 = a1 >u 0
  3826: 88 7a 10                 a3 = a0 <u 0x10
  3829: 85 aa 01                 a3 = a3 ^ 0x1
  3832: d4 a8 08                 a1 = a1 | a3
  3835: 89 7a                    a3 = a0 <s 0
  3837: e0 a8 08                 a1 = a1 & ~a3
  3840: 52 08 0a                 jump @244 if a1 != 0
      :                          @243
  3843: 33 07                    a0 = 0
  3845: 33 08 01                 a1 = 0x1
  3848: 28 51                    jump @253
      :                          @244
  3850: 97 77 01                 a0 = a0 << 0x1
  3853: 01                       fallthrough
      :                          @245
  3854: 51 07 47                 jump @252 if a0 == 0
      :                          @246
  3857: 57 07 7e                 jump @257 if a0 <s 0
      :                          @247
  3860: 64 52                    t0 = s0
  3862: 33 08 40 00 03           a1 = 0x30040
  3867: 95 88 00 f0 ff 00        a1 = a1 + 0xfff000
  3873: 33 0b ff ef ff 00        a4 = 0xffefff
  3879: 01                       fallthrough
      :                          @248
  3880: 82 8c                    a5 = u64 [a1]
  3882: c8 7c 0a                 a3 = a5 + a0
  3885: ac ca 33 fd              jump @183 if a3 <u a5
      :                          @249
  3889: 95 a5 01                 s0 = a3 + 0x1
  3892: 88 56 01                 s1 = s0 <u 0x1
  3895: d8 5b 05                 s0 = a4 <u s0
  3898: d4 65 05                 s0 = s0 | s1
  3901: 52 05 23 fd              jump @183 if s0 != 0
      :                          @250
  3905: 82 86                    s1 = u64 [a1]
  3907: ab c6 e5                 jump @248 if s1 != a5
      :                          @251
  3910: 7b 8a                    u64 [a1] = a3
  3912: 33 08 3f f0 02 01        a1 = 0x102f03f
  3918: c9 a8 08                 a1 = a1 - a3
  3921: 64 25                    s0 = t0
  3923: 28 06                    jump @253
      :                          @252
  3925: 33 08 01                 a1 = 0x1
  3928: 01                       fallthrough
      :                          @253
  3929: 7b 17                    u64 [sp] = a0
  3931: 7b 18 08                 u64 [sp + 0x8] = a1
  3934: 49 11 10                 u64 [sp + 16] = 0
  3937: 33 08 08 02 01           a1 = 0x10208
  3942: 64 17                    a0 = sp
  3944: 50 10 40 8f 06           ra = 64, jump @382
      :                          @254 [@dyn 32]
  3949: 52 07 21                 jump @256 if a0 != 0
      :                          @255
  3952: 82 17 10                 a0 = u64 [sp + 0x10]
  3955: 82 18 08                 a1 = u64 [sp + 0x8]
  3958: 82 19                    a2 = u64 [sp]
  3960: 7b 57 10                 u64 [s0 + 0x10] = a0
  3963: 7b 58 08                 u64 [s0 + 0x8] = a1
  3966: 7b 59                    u64 [s0] = a2
  3968: 82 10 30                 ra = u64 [sp + 0x30]
  3971: 82 15 28                 s0 = u64 [sp + 0x28]
  3974: 82 16 20                 s1 = u64 [sp + 0x20]
  3977: 95 11 38                 sp = sp + 0x38
  3980: 32 00                    ret
      :                          @256
  3982: 00                       trap
      :                          @257
  3983: 00                       trap
      :                          @258 [@dyn 33]
  3984: 82 72                    t0 = u64 [a0]
  3986: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
  3992: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
  3998: ac 9a 32                 jump @264 if a3 <u a2
      :                          @259
  4001: 82 73 08                 t1 = u64 [a0 + 0x8]
  4004: 33 04 40 00 03           t2 = 0x30040
  4009: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
  4015: 33 0b ff ef ff 00        a4 = 0xffefff
  4021: 01                       fallthrough
      :                          @260
  4022: 82 ac                    a5 = u64 [a3]
  4024: c8 b4 09                 a2 = t2 + a4
  4027: c9 c9 09                 a2 = a2 - a5
  4030: ab 39 12                 jump @264 if a2 != t1
      :                          @261
  4033: c9 2c 09                 a2 = a5 - t0
  4036: 01                       fallthrough
      :                          @262
  4037: 82 a7                    a0 = u64 [a3]
  4039: ab c7 ef                 jump @260 if a0 != a5
      :                          @263
  4042: 7b a9                    u64 [a3] = a2
  4044: 33 08                    a1 = 0
  4046: 32 00                    ret
      :                          @264
  4048: 32 00                    ret
      :                          @265 [@dyn 34]
  4050: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4053: 7b 10 18                 u64 [sp + 0x18] = ra
  4056: 7b 15 10                 u64 [sp + 0x10] = s0
  4059: 7b 16 08                 u64 [sp + 0x8] = s1
  4062: 64 75                    s0 = a0
  4064: 82 7a 10                 a3 = u64 [a0 + 0x10]
  4067: 82 77                    a0 = u64 [a0]
  4069: c9 a7 07                 a0 = a0 - a3
  4072: 64 96                    s1 = a2
  4074: ac 97 2a                 jump @268 if a0 <u a2
      :                          @266
  4077: 7b 1a                    u64 [sp] = a3
  4079: 82 57 08                 a0 = u64 [s0 + 0x8]
  4082: c8 a7 07                 a0 = a0 + a3
  4085: 64 69                    a2 = s1
  4087: 50 10 46 4a 01           ra = 70, jump @287
      :                          @267 [@dyn 35]
  4092: 82 17                    a0 = u64 [sp]
  4094: c8 76 06                 s1 = s1 + a0
  4097: 7b 56 10                 u64 [s0 + 0x10] = s1
  4100: 33 07                    a0 = 0
  4102: 82 10 18                 ra = u64 [sp + 0x18]
  4105: 82 15 10                 s0 = u64 [sp + 0x10]
  4108: 82 16 08                 s1 = u64 [sp + 0x8]
  4111: 95 11 20                 sp = sp + 0x20
  4114: 32 00                    ret
      :                          @268
  4116: 64 57                    a0 = s0
  4118: 7b 18                    u64 [sp] = a1
  4120: 64 a8                    a1 = a3
  4122: 64 69                    a2 = s1
  4124: 50 10 48 45 fc           ra = 72, jump @184
      :                          @269 [@dyn 36]
  4129: 82 18                    a1 = u64 [sp]
  4131: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4134: 28 c7                    jump @266
      :                          @270 [@dyn 37]
  4136: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4139: 7b 10 20                 u64 [sp + 0x20] = ra
  4142: 7b 15 18                 u64 [sp + 0x18] = s0
  4145: 7b 16 10                 u64 [sp + 0x10] = s1
  4148: 64 86                    s1 = a1
  4150: 83 88                    i32 a1 = a1 + 0
  4152: 33 09 80 00              a2 = 0x80
  4156: 64 7a                    a3 = a0
  4158: ae 98 2b                 jump @275 if a1 >=u a2
      :                          @271
  4161: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4164: 82 a7                    a0 = u64 [a3]
  4166: ab 78 12                 jump @274 if a1 != a0
      :                          @272
  4169: 64 a7                    a0 = a3
  4171: 64 a5                    s0 = a3
  4173: 50 10 4c f6 fd           ra = 76, jump @227
      :                          @273 [@dyn 38]
  4178: 64 5a                    a3 = s0
  4180: 82 58 10                 a1 = u64 [s0 + 0x10]
  4183: 01                       fallthrough
      :                          @274
  4184: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4187: c8 87 07                 a0 = a0 + a1
  4190: 78 76                    u8 [a0] = s1
  4192: 95 88 01                 a1 = a1 + 0x1
  4195: 7b a8 10                 u64 [a3 + 0x10] = a1
  4198: 28 ab 00                 jump @283
      :                          @275
  4201: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4204: 48 11 0c                 u32 [sp + 12] = 0
  4207: 52 07 1c                 jump @277 if a0 != 0
      :                          @276
  4210: 98 67 06                 a0 = s1 >> 0x6
  4213: 86 77 c0 00              a0 = a0 | 0xc0
  4217: 78 17 0c                 u8 [sp + 0xc] = a0
  4220: 84 67 3f                 a0 = s1 & 0x3f
  4223: 86 77 80 00              a0 = a0 | 0x80
  4227: 78 17 0d                 u8 [sp + 0xd] = a0
  4230: 33 06 02                 s1 = 0x2
  4233: 28 63                    jump @280
      :                          @277
  4235: 8b 67 10                 i32 a0 = s1 >> 0x10
  4238: 52 07 29                 jump @279 if a0 != 0
      :                          @278
  4241: 98 67 0c                 a0 = s1 >> 0xc
  4244: 86 77 e0 00              a0 = a0 | 0xe0
  4248: 78 17 0c                 u8 [sp + 0xc] = a0
  4251: 97 67 34                 a0 = s1 << 0x34
  4254: 98 77 3a                 a0 = a0 >> 0x3a
  4257: 95 77 80 00              a0 = a0 + 0x80
  4261: 78 17 0d                 u8 [sp + 0xd] = a0
  4264: 84 67 3f                 a0 = s1 & 0x3f
  4267: 86 77 80 00              a0 = a0 | 0x80
  4271: 78 17 0e                 u8 [sp + 0xe] = a0
  4274: 33 06 03                 s1 = 0x3
  4277: 28 37                    jump @280
      :                          @279
  4279: 97 67 2b                 a0 = s1 << 0x2b
  4282: 98 77 3d                 a0 = a0 >> 0x3d
  4285: 95 77 f0 00              a0 = a0 + 0xf0
  4289: 78 17 0c                 u8 [sp + 0xc] = a0
  4292: 97 67 2e                 a0 = s1 << 0x2e
  4295: 98 77 3a                 a0 = a0 >> 0x3a
  4298: 95 77 80 00              a0 = a0 + 0x80
  4302: 78 17 0d                 u8 [sp + 0xd] = a0
  4305: 97 67 34                 a0 = s1 << 0x34
  4308: 98 77 3a                 a0 = a0 >> 0x3a
  4311: 95 77 80 00              a0 = a0 + 0x80
  4315: 78 17 0e                 u8 [sp + 0xe] = a0
  4318: 84 67 3f                 a0 = s1 & 0x3f
  4321: 86 77 80 00              a0 = a0 | 0x80
  4325: 78 17 0f                 u8 [sp + 0xf] = a0
  4328: 33 06 04                 s1 = 0x4
  4331: 01                       fallthrough
      :                          @280
  4332: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4335: 82 a7                    a0 = u64 [a3]
  4337: c9 57 07                 a0 = a0 - s0
  4340: ac 67 2d                 jump @284 if a0 <u s1
      :                          @281
  4343: 7b 1a                    u64 [sp] = a3
  4345: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4348: c8 57 07                 a0 = a0 + s0
  4351: 95 18 0c                 a1 = sp + 0xc
  4354: 64 69                    a2 = s1
  4356: 50 10 4e 3d              ra = 78, jump @287
      :                          @282 [@dyn 39]
  4360: c8 56 06                 s1 = s1 + s0
  4363: 82 17                    a0 = u64 [sp]
  4365: 7b 76 10                 u64 [a0 + 0x10] = s1
  4368: 01                       fallthrough
      :                          @283
  4369: 33 07                    a0 = 0
  4371: 82 10 20                 ra = u64 [sp + 0x20]
  4374: 82 15 18                 s0 = u64 [sp + 0x18]
  4377: 82 16 10                 s1 = u64 [sp + 0x10]
  4380: 95 11 28                 sp = sp + 0x28
  4383: 32 00                    ret
      :                          @284
  4385: 64 a7                    a0 = a3
  4387: 64 58                    a1 = s0
  4389: 64 69                    a2 = s1
  4391: 64 a5                    s0 = a3
  4393: 50 10 50 38 fb           ra = 80, jump @184
      :                          @285 [@dyn 40]
  4398: 64 5a                    a3 = s0
  4400: 82 55 10                 s0 = u64 [s0 + 0x10]
  4403: 28 c4                    jump @281
      :                          @286 [@dyn 41]
  4405: 64 8a                    a3 = a1
  4407: 33 08 08 02 01           a1 = 0x10208
  4412: 64 a9                    a2 = a3
  4414: 28 b9 04                 jump @382
      :                          @287
  4417: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4420: 7b 10 18                 u64 [sp + 0x18] = ra
  4423: 7b 15 10                 u64 [sp + 0x10] = s0
  4426: 7b 16 08                 u64 [sp + 0x8] = s1
  4429: 53 19 10 64              jump @296 if a2 <u 16
      :                          @288
  4433: 8d 7a                    i32 a3 = -a0
  4435: 84 a2 07                 t0 = a3 & 0x7
  4438: c8 27 0b                 a4 = a0 + t0
  4441: 51 02 15                 jump @291 if t0 == 0
      :                          @289
  4444: 64 8c                    a5 = a1
  4446: 64 75                    s0 = a0
  4448: 01                       fallthrough
      :                          @290
  4449: 7c ca                    a3 = u8 [a5]
  4451: 78 5a                    u8 [s0] = a3
  4453: 95 55 01                 s0 = s0 + 0x1
  4456: 95 cc 01                 a5 = a5 + 0x1
  4459: ac b5 f6                 jump @290 if s0 <u a4
      :                          @291
  4462: c8 28 03                 t1 = a1 + t0
  4465: c9 29 02                 t0 = a2 - t0
  4468: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4471: 84 38 07                 a1 = t1 & 0x7
  4474: c8 4b 0a                 a3 = a4 + t2
  4477: 51 08 3b                 jump @298 if a1 == 0
      :                          @292
  4480: 58 04 4b                 jump @301 if t2 <=s 0
      :                          @293
  4483: 97 38 03                 a1 = t1 << 0x3
  4486: 84 80 38                 ra = a1 & 0x38
  4489: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4492: 82 c5                    s0 = u64 [a5]
  4494: 8d 88                    i32 a1 = -a1
  4496: 84 88 38                 a1 = a1 & 0x38
  4499: 95 cc 08                 a5 = a5 + 0x8
  4502: 01                       fallthrough
      :                          @294
  4503: 82 c6                    s1 = u64 [a5]
  4505: d0 05 05                 s0 = s0 >> ra
  4508: cf 86 09                 a2 = s1 << a1
  4511: d4 59 09                 a2 = a2 | s0
  4514: 7b b9                    u64 [a4] = a2
  4516: 95 bb 08                 a4 = a4 + 0x8
  4519: 95 cc 08                 a5 = a5 + 0x8
  4522: 64 65                    s0 = s1
  4524: ac ab eb                 jump @294 if a4 <u a3
      :                          @295
  4527: 28 1c                    jump @301
      :                          @296
  4529: 64 7a                    a3 = a0
  4531: 52 09 21                 jump @302 if a2 != 0
      :                          @297
  4534: 28 2f                    jump @304
      :                          @298
  4536: 58 04 13                 jump @301 if t2 <=s 0
      :                          @299
  4539: 64 38                    a1 = t1
  4541: 01                       fallthrough
      :                          @300
  4542: 82 89                    a2 = u64 [a1]
  4544: 7b b9                    u64 [a4] = a2
  4546: 95 bb 08                 a4 = a4 + 0x8
  4549: 95 88 08                 a1 = a1 + 0x8
  4552: ac ab f6                 jump @300 if a4 <u a3
      :                          @301
  4555: c8 43 08                 a1 = t1 + t2
  4558: 84 29 07                 a2 = t0 & 0x7
  4561: 51 09 14                 jump @304 if a2 == 0
      :                          @302
  4564: c8 a9 09                 a2 = a2 + a3
  4567: 01                       fallthrough
      :                          @303
  4568: 7c 8b                    a4 = u8 [a1]
  4570: 78 ab                    u8 [a3] = a4
  4572: 95 aa 01                 a3 = a3 + 0x1
  4575: 95 88 01                 a1 = a1 + 0x1
  4578: ac 9a f6                 jump @303 if a3 <u a2
      :                          @304
  4581: 82 10 18                 ra = u64 [sp + 0x18]
  4584: 82 15 10                 s0 = u64 [sp + 0x10]
  4587: 82 16 08                 s1 = u64 [sp + 0x8]
  4590: 95 11 20                 sp = sp + 0x20
  4593: 32 00                    ret
      :                          @305
  4595: 8d 7a                    i32 a3 = -a0
  4597: 84 aa 07                 a3 = a3 & 0x7
  4600: c8 a7 0b                 a4 = a0 + a3
  4603: 51 0a 0e                 jump @308 if a3 == 0
      :                          @306
  4606: 64 7c                    a5 = a0
  4608: 01                       fallthrough
      :                          @307
  4609: 78 c8                    u8 [a5] = a1
  4611: 95 cc 01                 a5 = a5 + 0x1
  4614: ac bc fb                 jump @307 if a5 <u a4
      :                          @308
  4617: c9 a9 03                 t1 = a2 - a3
  4620: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4623: c8 cb 0a                 a3 = a4 + a5
  4626: 58 0c 1d                 jump @311 if a5 <=s 0
      :                          @309
  4629: 84 82 ff 00              t0 = a1 & 0xff
  4633: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4643: ca 92 0c                 a5 = t0 * a2
  4646: 01                       fallthrough
      :                          @310
  4647: 7b bc                    u64 [a4] = a5
  4649: 95 bb 08                 a4 = a4 + 0x8
  4652: ac ab fb                 jump @310 if a4 <u a3
      :                          @311
  4655: 84 39 07                 a2 = t1 & 0x7
  4658: 52 09 05                 jump @313 if a2 != 0
      :                          @312
  4661: 28 0e                    jump @315
      :                          @313
  4663: c8 a9 09                 a2 = a2 + a3
  4666: 01                       fallthrough
      :                          @314
  4667: 78 a8                    u8 [a3] = a1
  4669: 95 aa 01                 a3 = a3 + 0x1
  4672: ac 9a fb                 jump @314 if a3 <u a2
      :                          @315
  4675: 32 00                    ret
      :                          @316 [@dyn 42]
  4677: 82 77                    a0 = u64 [a0]
  4679: 01                       fallthrough
      :                          @317
  4680: 28                       jump @317
      :                          @318
  4681: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  4684: 7b 10 58                 u64 [sp + 0x58] = ra
  4687: 7b 15 50                 u64 [sp + 0x50] = s0
  4690: 7b 16 48                 u64 [sp + 0x48] = s1
  4693: 7b 19 08                 u64 [sp + 0x8] = a2
  4696: 7b 18                    u64 [sp] = a1
  4698: 98 7a 04                 a3 = a0 >> 0x4
  4701: 33 09 27                 a2 = 0x27
  4704: 53 2a 71 02 81 00        jump @321 if a3 <u 625
      :                          @319
  4710: 33 09 27                 a2 = 0x27
  4713: 95 1b 46                 a4 = sp + 0x46
  4716: 3a 08 00 00 03           a1 = u64 [0x30000]
  4721: 7b 18 18                 u64 [sp + 0x18] = a1
  4724: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  4730: 33 03 7b 14              t1 = 0x147b
  4734: 33 05 76 02 01           s0 = 0x10276
  4739: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4745: 01                       fallthrough
      :                          @320
  4746: 64 74                    t2 = a0
  4748: 82 17 18                 a0 = u64 [sp + 0x18]
  4751: d6 74 07                 a0 = t2 mulhu a0
  4754: 98 77 0b                 a0 = a0 >> 0xb
  4757: 82 18 10                 a1 = u64 [sp + 0x10]
  4760: c0 87 02                 i32 t0 = a0 * a1
  4763: c8 42 0a                 a3 = t0 + t2
  4766: 97 a2 30                 t0 = a3 << 0x30
  4769: 98 28 32                 a1 = t0 >> 0x32
  4772: ca 38 08                 a1 = a1 * t1
  4775: 98 8c 11                 a5 = a1 >> 0x11
  4778: 98 88 10                 a1 = a1 >> 0x10
  4781: 84 88 fe 07              a1 = a1 & 0x7fe
  4785: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  4788: c8 ca 0a                 a3 = a3 + a5
  4791: 97 aa 31                 a3 = a3 << 0x31
  4794: 98 aa 30                 a3 = a3 >> 0x30
  4797: c8 58 08                 a1 = a1 + s0
  4800: 7c 8c                    a5 = u8 [a1]
  4802: 7c 88 01                 a1 = u8 [a1 + 0x1]
  4805: c8 5a 0a                 a3 = a3 + s0
  4808: 7c a6 01                 s1 = u8 [a3 + 0x1]
  4811: 7c aa                    a3 = u8 [a3]
  4813: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  4816: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  4819: 78 b6 01                 u8 [a4 + 0x1] = s1
  4822: 78 ba                    u8 [a4] = a3
  4824: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  4827: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4830: ac 40 ac                 jump @320 if ra <u t2
      :                          @321
  4833: 54 17 63 3b              jump @323 if a0 <=u 99
      :                          @322
  4837: 97 78 30                 a1 = a0 << 0x30
  4840: 98 88 32                 a1 = a1 >> 0x32
  4843: 96 88 7b 14              a1 = a1 * 0x147b
  4847: 98 88 11                 a1 = a1 >> 0x11
  4850: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  4853: c8 a7 07                 a0 = a0 + a3
  4856: 97 77 31                 a0 = a0 << 0x31
  4859: 98 77 30                 a0 = a0 >> 0x30
  4862: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4865: 33 0a 76 02 01           a3 = 0x10276
  4870: c8 a7 07                 a0 = a0 + a3
  4873: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4876: 7c 77                    a0 = u8 [a0]
  4878: 95 1b 21                 a4 = sp + 0x21
  4881: c8 9b 0b                 a4 = a4 + a2
  4884: 78 ba 01                 u8 [a4 + 0x1] = a3
  4887: 78 b7                    u8 [a4] = a0
  4889: 64 87                    a0 = a1
  4891: 01                       fallthrough
      :                          @323
  4892: 55 17 0a 14              jump @325 if a0 >=u 10
      :                          @324
  4896: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  4899: 95 18 21                 a1 = sp + 0x21
  4902: c8 98 08                 a1 = a1 + a2
  4905: 83 77 30                 i32 a0 = a0 + 0x30
  4908: 78 87                    u8 [a1] = a0
  4910: 28 21                    jump @326
      :                          @325
  4912: 97 77 01                 a0 = a0 << 0x1
  4915: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4918: 33 08 76 02 01           a1 = 0x10276
  4923: c8 87 07                 a0 = a0 + a1
  4926: 7c 78 01                 a1 = u8 [a0 + 0x1]
  4929: 7c 77                    a0 = u8 [a0]
  4931: 95 1a 21                 a3 = sp + 0x21
  4934: c8 9a 0a                 a3 = a3 + a2
  4937: 78 a8 01                 u8 [a3 + 0x1] = a1
  4940: 78 a7                    u8 [a3] = a0
  4942: 01                       fallthrough
      :                          @326
  4943: 95 1b 21                 a4 = sp + 0x21
  4946: c8 9b 0b                 a4 = a4 + a2
  4949: 9a 9c 27                 a5 = 0x27 - a2
  4952: 33 09 38 02 01           a2 = 0x10238
  4957: 82 17 08                 a0 = u64 [sp + 0x8]
  4960: 82 18                    a1 = u64 [sp]
  4962: 33 0a                    a3 = 0
  4964: 50 10 56 12              ra = 86, jump @328
      :                          @327 [@dyn 43]
  4968: 82 10 58                 ra = u64 [sp + 0x58]
  4971: 82 15 50                 s0 = u64 [sp + 0x50]
  4974: 82 16 48                 s1 = u64 [sp + 0x48]
  4977: 95 11 60                 sp = sp + 0x60
  4980: 32 00                    ret
      :                          @328
  4982: 95 11 98                 sp = sp + 0xffffffffffffff98
  4985: 7b 10 60                 u64 [sp + 0x60] = ra
  4988: 7b 15 58                 u64 [sp + 0x58] = s0
  4991: 7b 16 50                 u64 [sp + 0x50] = s1
  4994: 7b 1b 18                 u64 [sp + 0x18] = a4
  4997: 51 08 4f                 jump @335 if a1 == 0
      :                          @329
  5000: 80 76 34                 s1 = u32 [a0 + 0x34]
  5003: 84 68 01                 a1 = s1 & 0x1
  5006: 33 0b 2b                 a4 = 0x2b
  5009: 33 05 00 00 11           s0 = 0x110000
  5014: db 8b 05                 s0 = a4 if a1 != 0
  5017: 7b 15 28                 u64 [sp + 0x28] = s0
  5020: c8 c8 02                 t0 = a1 + a5
  5023: 84 68 04                 a1 = s1 & 0x4
  5026: 51 08 42                 jump @336 if a1 == 0
      :                          @330
  5029: 7b 19 30                 u64 [sp + 0x30] = a2
  5032: 33 08                    a1 = 0
  5034: 51 0a 1a                 jump @333 if a3 == 0
      :                          @331
  5037: 64 a5                    s0 = a3
  5039: 01                       fallthrough
      :                          @332
  5040: 7d 9b                    a4 = i8 [a2]
  5042: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  5045: 85 bb 01                 a4 = a4 ^ 0x1
  5048: c8 b8 08                 a1 = a1 + a4
  5051: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5054: 95 99 01                 a2 = a2 + 0x1
  5057: 52 05 ef                 jump @332 if s0 != 0
      :                          @333
  5060: c8 82 02                 t0 = t0 + a1
  5063: 7b 1a 38                 u64 [sp + 0x38] = a3
  5066: 82 78                    a1 = u64 [a0]
  5068: 7b 1c 20                 u64 [sp + 0x20] = a5
  5071: 52 08 23                 jump @337 if a1 != 0
      :                          @334
  5074: 28 41                    jump @342
      :                          @335
  5076: 81 76 34                 s1 = i32 [a0 + 0x34]
  5079: 95 c2 01                 t0 = a5 + 0x1
  5082: 49 11 28 2d              u64 [sp + 40] = 0x2d
  5086: 84 68 04                 a1 = s1 & 0x4
  5089: 52 08 c4                 jump @330 if a1 != 0
      :                          @336
  5092: 49 11 30                 u64 [sp + 48] = 0
  5095: 7b 1a 38                 u64 [sp + 0x38] = a3
  5098: 82 78                    a1 = u64 [a0]
  5100: 7b 1c 20                 u64 [sp + 0x20] = a5
  5103: 51 08 24                 jump @342 if a1 == 0
      :                          @337
  5106: 82 75 08                 s0 = u64 [a0 + 0x8]
  5109: ae 52 1e                 jump @342 if t0 >=u s0
      :                          @338
  5112: 84 66 08                 s1 = s1 & 0x8
  5115: 52 06 50                 jump @345 if s1 != 0
      :                          @339
  5118: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5121: c9 25 0a                 a3 = s0 - t0
  5124: 5a 19 01 a1 00           jump @352 if a2 >s 1
      :                          @340
  5129: 52 09 ae 00              jump @354 if a2 != 0
      :                          @341
  5133: 7b 1a 10                 u64 [sp + 0x10] = a3
  5136: 28 ad 00                 jump @355
      :                          @342
  5139: 82 75 20                 s0 = u64 [a0 + 0x20]
  5142: 82 76 28                 s1 = u64 [a0 + 0x28]
  5145: 64 57                    a0 = s0
  5147: 64 68                    a1 = s1
  5149: 82 19 28                 a2 = u64 [sp + 0x28]
  5152: 82 1a 30                 a3 = u64 [sp + 0x30]
  5155: 82 1b 38                 a4 = u64 [sp + 0x38]
  5158: 50 10 58 6d 01           ra = 88, jump @375
      :                          @343 [@dyn 44]
  5163: 33 08 01                 a1 = 0x1
  5166: 52 07 bc 00              jump @360 if a0 != 0
      :                          @344
  5170: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5173: 64 57                    a0 = s0
  5175: 82 18 18                 a1 = u64 [sp + 0x18]
  5178: 82 19 20                 a2 = u64 [sp + 0x20]
  5181: 82 10 60                 ra = u64 [sp + 0x60]
  5184: 82 15 58                 s0 = u64 [sp + 0x58]
  5187: 82 16 50                 s1 = u64 [sp + 0x50]
  5190: 95 11 68                 sp = sp + 0x68
  5193: 32 0c                    jump [a5]
      :                          @345
  5195: 7b 12 40                 u64 [sp + 0x40] = t0
  5198: 81 78 30                 a1 = i32 [a0 + 0x30]
  5201: 7b 18 08                 u64 [sp + 0x8] = a1
  5204: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5207: 7b 19                    u64 [sp] = a2
  5209: 82 79 20                 a2 = u64 [a0 + 0x20]
  5212: 82 76 28                 s1 = u64 [a0 + 0x28]
  5215: 48 17 30 30              u32 [a0 + 48] = 0x30
  5219: 7b 17 10                 u64 [sp + 0x10] = a0
  5222: 46 17 38 01              u8 [a0 + 56] = 0x1
  5226: 7b 19 48                 u64 [sp + 0x48] = a2
  5229: 64 97                    a0 = a2
  5231: 64 68                    a1 = s1
  5233: 82 19 28                 a2 = u64 [sp + 0x28]
  5236: 82 1a 30                 a3 = u64 [sp + 0x30]
  5239: 82 1b 38                 a4 = u64 [sp + 0x38]
  5242: 50 10 5a 19 01           ra = 90, jump @375
      :                          @346 [@dyn 45]
  5247: 52 07 67                 jump @359 if a0 != 0
      :                          @347
  5250: 82 17 40                 a0 = u64 [sp + 0x40]
  5253: c9 75 05                 s0 = s0 - a0
  5256: 95 55 01                 s0 = s0 + 0x1
  5259: 01                       fallthrough
      :                          @348
  5260: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5263: 51 05 c6 00              jump @370 if s0 == 0
      :                          @349
  5267: 82 69 20                 a2 = u64 [s1 + 0x20]
  5270: 33 08 30                 a1 = 0x30
  5273: 82 17 48                 a0 = u64 [sp + 0x48]
  5276: b4 90 01 5c              ra = 92, jump [a2]
      :                          @350 [@dyn 46]
  5280: 51 07 ec                 jump @348 if a0 == 0
      :                          @351
  5283: 28 43                    jump @359
      :                          @352
  5285: 52 19 02 12              jump @354 if a2 != 2
      :                          @353
  5289: 98 a9 01                 a2 = a3 >> 0x1
  5292: 95 a8 01                 a1 = a3 + 0x1
  5295: 98 88 01                 a1 = a1 >> 0x1
  5298: 7b 18 10                 u64 [sp + 0x10] = a1
  5301: 28 08                    jump @355
      :                          @354
  5303: 64 a9                    a2 = a3
  5305: 49 11 10                 u64 [sp + 16] = 0
  5308: 01                       fallthrough
      :                          @355
  5309: 82 78 20                 a1 = u64 [a0 + 0x20]
  5312: 7b 18 48                 u64 [sp + 0x48] = a1
  5315: 82 76 28                 s1 = u64 [a0 + 0x28]
  5318: 81 77 30                 a0 = i32 [a0 + 0x30]
  5321: 7b 17 40                 u64 [sp + 0x40] = a0
  5324: 95 95 01                 s0 = a2 + 0x1
  5327: 01                       fallthrough
      :                          @356
  5328: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5331: 51 05 27                 jump @361 if s0 == 0
      :                          @357
  5334: 82 69 20                 a2 = u64 [s1 + 0x20]
  5337: 82 17 48                 a0 = u64 [sp + 0x48]
  5340: 82 18 40                 a1 = u64 [sp + 0x40]
  5343: b4 90 01 5e              ra = 94, jump [a2]
      :                          @358 [@dyn 47]
  5347: 51 07 ed                 jump @356 if a0 == 0
      :                          @359
  5350: 33 08 01                 a1 = 0x1
  5353: 01                       fallthrough
      :                          @360
  5354: 64 87                    a0 = a1
  5356: 82 10 60                 ra = u64 [sp + 0x60]
  5359: 82 15 58                 s0 = u64 [sp + 0x58]
  5362: 82 16 50                 s1 = u64 [sp + 0x50]
  5365: 95 11 68                 sp = sp + 0x68
  5368: 32 00                    ret
      :                          @361
  5370: 82 15 48                 s0 = u64 [sp + 0x48]
  5373: 64 57                    a0 = s0
  5375: 64 68                    a1 = s1
  5377: 82 19 28                 a2 = u64 [sp + 0x28]
  5380: 82 1a 30                 a3 = u64 [sp + 0x30]
  5383: 82 1b 38                 a4 = u64 [sp + 0x38]
  5386: 50 10 60 89 00           ra = 96, jump @375
      :                          @362 [@dyn 48]
  5391: 33 08 01                 a1 = 0x1
  5394: 52 07 d8                 jump @360 if a0 != 0
      :                          @363
  5397: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5400: 64 57                    a0 = s0
  5402: 82 18 18                 a1 = u64 [sp + 0x18]
  5405: 82 19 20                 a2 = u64 [sp + 0x20]
  5408: b4 a0 01 62              ra = 98, jump [a3]
      :                          @364 [@dyn 49]
  5412: 33 08 01                 a1 = 0x1
  5415: 52 07 c3                 jump @360 if a0 != 0
      :                          @365
  5418: 82 17 10                 a0 = u64 [sp + 0x10]
  5421: 9a 77                    a0 = -a0
  5423: 7b 17 38                 u64 [sp + 0x38] = a0
  5426: 33 05 ff                 s0 = 0xffffffffffffffff
  5429: 01                       fallthrough
      :                          @366
  5430: 82 17 38                 a0 = u64 [sp + 0x38]
  5433: c8 57 07                 a0 = a0 + s0
  5436: 51 17 ff 42              jump @373 if a0 == 4294967295
      :                          @367
  5440: 82 69 20                 a2 = u64 [s1 + 0x20]
  5443: 82 17 48                 a0 = u64 [sp + 0x48]
  5446: 82 18 40                 a1 = u64 [sp + 0x40]
  5449: b4 90 01 64              ra = 100, jump [a2]
      :                          @368 [@dyn 50]
  5453: 95 55 01                 s0 = s0 + 0x1
  5456: 51 07 e6                 jump @366 if a0 == 0
      :                          @369
  5459: 28 37                    jump @374
      :                          @370
  5461: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5464: 82 17 48                 a0 = u64 [sp + 0x48]
  5467: 82 18 18                 a1 = u64 [sp + 0x18]
  5470: 82 19 20                 a2 = u64 [sp + 0x20]
  5473: b4 a0 01 66              ra = 102, jump [a3]
      :                          @371 [@dyn 51]
  5477: 33 08 01                 a1 = 0x1
  5480: 52 07 82                 jump @360 if a0 != 0
      :                          @372
  5483: 33 08                    a1 = 0
  5485: 82 17 10                 a0 = u64 [sp + 0x10]
  5488: 82 19 08                 a2 = u64 [sp + 0x8]
  5491: 7a 79 30                 u32 [a0 + 0x30] = a2
  5494: 82 19                    a2 = u64 [sp]
  5496: 78 79 38                 u8 [a0 + 0x38] = a2
  5499: 28 6f ff                 jump @360
      :                          @373
  5502: 82 15 10                 s0 = u64 [sp + 0x10]
  5505: 82 17 10                 a0 = u64 [sp + 0x10]
  5508: d8 75 08                 a1 = s0 <u a0
  5511: 28 63 ff                 jump @360
      :                          @374
  5514: 82 17 10                 a0 = u64 [sp + 0x10]
  5517: d8 75 08                 a1 = s0 <u a0
  5520: 28 5a ff                 jump @360
      :                          @375
  5523: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5526: 7b 10 20                 u64 [sp + 0x20] = ra
  5529: 7b 15 18                 u64 [sp + 0x18] = s0
  5532: 7b 16 10                 u64 [sp + 0x10] = s1
  5535: 83 9c                    i32 a5 = a2 + 0
  5537: 33 02 00 00 11           t0 = 0x110000
  5542: 64 a6                    s1 = a3
  5544: 64 85                    s0 = a1
  5546: 64 7a                    a3 = a0
  5548: aa 2c 20                 jump @378 if a5 == t0
      :                          @376
  5551: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5554: 64 a7                    a0 = a3
  5556: 64 98                    a1 = a2
  5558: 7b 1b 08                 u64 [sp + 0x8] = a4
  5561: 7b 1a                    u64 [sp] = a3
  5563: b4 c0 01 68              ra = 104, jump [a5]
      :                          @377 [@dyn 52]
  5567: 82 1a                    a3 = u64 [sp]
  5569: 82 1b 08                 a4 = u64 [sp + 0x8]
  5572: 64 78                    a1 = a0
  5574: 33 07 01                 a0 = 0x1
  5577: 52 08 20                 jump @381 if a1 != 0
      :                          @378
  5580: 51 06 1a                 jump @380 if s1 == 0
      :                          @379
  5583: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5586: 64 a7                    a0 = a3
  5588: 64 68                    a1 = s1
  5590: 64 b9                    a2 = a4
  5592: 82 10 20                 ra = u64 [sp + 0x20]
  5595: 82 15 18                 s0 = u64 [sp + 0x18]
  5598: 82 16 10                 s1 = u64 [sp + 0x10]
  5601: 95 11 28                 sp = sp + 0x28
  5604: 32 0c                    jump [a5]
      :                          @380
  5606: 33 07                    a0 = 0
  5608: 01                       fallthrough
      :                          @381
  5609: 82 10 20                 ra = u64 [sp + 0x20]
  5612: 82 15 18                 s0 = u64 [sp + 0x18]
  5615: 82 16 10                 s1 = u64 [sp + 0x10]
  5618: 95 11 28                 sp = sp + 0x28
  5621: 32 00                    ret
      :                          @382
  5623: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5627: 7b 10 80 00              u64 [sp + 0x80] = ra
  5631: 7b 15 78                 u64 [sp + 0x78] = s0
  5634: 7b 16 70                 u64 [sp + 0x70] = s1
  5637: 49 11 60 20              u64 [sp + 96] = 0x20
  5641: 33 0a 03                 a3 = 0x3
  5644: 78 1a 68                 u8 [sp + 0x68] = a3
  5647: 82 96 20                 s1 = u64 [a2 + 0x20]
  5650: 49 11 30                 u64 [sp + 48] = 0
  5653: 49 11 40                 u64 [sp + 64] = 0
  5656: 7b 17 50                 u64 [sp + 0x50] = a0
  5659: 7b 18 58                 u64 [sp + 0x58] = a1
  5662: 51 06 07 01              jump @404 if s1 == 0
      :                          @383
  5666: 82 97 28                 a0 = u64 [a2 + 0x28]
  5669: 51 07 74 01              jump @414 if a0 == 0
      :                          @384
  5673: 49 11 28                 u64 [sp + 40] = 0
  5676: 82 95                    s0 = u64 [a2]
  5678: 7b 19 08                 u64 [sp + 0x8] = a2
  5681: 82 98 10                 a1 = u64 [a2 + 0x10]
  5684: 7b 18 18                 u64 [sp + 0x18] = a1
  5687: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5690: 97 88 03                 a1 = a1 << 0x3
  5693: 98 88 03                 a1 = a1 >> 0x3
  5696: 95 88 01                 a1 = a1 + 0x1
  5699: 7b 18                    u64 [sp] = a1
  5701: 95 55 08                 s0 = s0 + 0x8
  5704: 96 78 38                 a1 = a0 * 0x38
  5707: 95 66 18                 s1 = s1 + 0x18
  5710: 33 07 54                 a0 = 0x54
  5713: 7b 17 10                 u64 [sp + 0x10] = a0
  5716: 01                       fallthrough
      :                          @385
  5717: 7b 18 20                 u64 [sp + 0x20] = a1
  5720: 82 59                    a2 = u64 [s0]
  5722: 51 09 17                 jump @388 if a2 == 0
      :                          @386
  5725: 82 1a 58                 a3 = u64 [sp + 0x58]
  5728: 82 17 50                 a0 = u64 [sp + 0x50]
  5731: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5734: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5737: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @387 [@dyn 53]
  5741: 52 07 51 01              jump @417 if a0 != 0
      :                          @388
  5745: 81 67 10                 a0 = i32 [s1 + 0x10]
  5748: 7a 17 60                 u32 [sp + 0x60] = a0
  5751: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5754: 78 17 68                 u8 [sp + 0x68] = a0
  5757: 81 67 14                 a0 = i32 [s1 + 0x14]
  5760: 7a 17 64                 u32 [sp + 0x64] = a0
  5763: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5766: 82 67                    a0 = u64 [s1]
  5768: 51 08 26                 jump @393 if a1 == 0
      :                          @389
  5771: 52 18 01 16              jump @391 if a1 != 1
      :                          @390
  5775: 97 77 04                 a0 = a0 << 0x4
  5778: 82 18 18                 a1 = u64 [sp + 0x18]
  5781: c8 87 07                 a0 = a0 + a1
  5784: 82 78 08                 a1 = u64 [a0 + 0x8]
  5787: 82 19 10                 a2 = u64 [sp + 0x10]
  5790: aa 98 07                 jump @392 if a1 == a2
      :                          @391
  5793: 33 08                    a1 = 0
  5795: 28 0f                    jump @394
      :                          @392
  5797: 82 77                    a0 = u64 [a0]
  5799: 82 77                    a0 = u64 [a0]
  5801: 33 08 01                 a1 = 0x1
  5804: 28 06                    jump @394
      :                          @393
  5806: 33 08 01                 a1 = 0x1
  5809: 01                       fallthrough
      :                          @394
  5810: 7b 18 30                 u64 [sp + 0x30] = a1
  5813: 7b 17 38                 u64 [sp + 0x38] = a0
  5816: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5819: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5822: 51 08 26                 jump @399 if a1 == 0
      :                          @395
  5825: 52 18 01 16              jump @397 if a1 != 1
      :                          @396
  5829: 97 77 04                 a0 = a0 << 0x4
  5832: 82 18 18                 a1 = u64 [sp + 0x18]
  5835: c8 87 07                 a0 = a0 + a1
  5838: 82 78 08                 a1 = u64 [a0 + 0x8]
  5841: 82 19 10                 a2 = u64 [sp + 0x10]
  5844: aa 98 07                 jump @398 if a1 == a2
      :                          @397
  5847: 33 08                    a1 = 0
  5849: 28 0f                    jump @400
      :                          @398
  5851: 82 77                    a0 = u64 [a0]
  5853: 82 77                    a0 = u64 [a0]
  5855: 33 08 01                 a1 = 0x1
  5858: 28 06                    jump @400
      :                          @399
  5860: 33 08 01                 a1 = 0x1
  5863: 01                       fallthrough
      :                          @400
  5864: 7b 18 40                 u64 [sp + 0x40] = a1
  5867: 7b 17 48                 u64 [sp + 0x48] = a0
  5870: 82 67 08                 a0 = u64 [s1 + 0x8]
  5873: 97 77 04                 a0 = a0 << 0x4
  5876: 82 18 18                 a1 = u64 [sp + 0x18]
  5879: c8 78 08                 a1 = a1 + a0
  5882: 82 87                    a0 = u64 [a1]
  5884: 82 89 08                 a2 = u64 [a1 + 0x8]
  5887: 95 18 30                 a1 = sp + 0x30
  5890: b4 90 01 6c              ra = 108, jump [a2]
      :                          @401 [@dyn 54]
  5894: 52 07 b8 00              jump @417 if a0 != 0
      :                          @402
  5898: 95 55 10                 s0 = s0 + 0x10
  5901: 82 18 20                 a1 = u64 [sp + 0x20]
  5904: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5907: 95 66 38                 s1 = s1 + 0x38
  5910: 82 17 28                 a0 = u64 [sp + 0x28]
  5913: 95 77 01                 a0 = a0 + 0x1
  5916: 7b 17 28                 u64 [sp + 0x28] = a0
  5919: 52 08 36 ff              jump @385 if a1 != 0
      :                          @403
  5923: 28 69                    jump @412
      :                          @404
  5925: 82 97 18                 a0 = u64 [a2 + 0x18]
  5928: 51 07 71                 jump @414 if a0 == 0
      :                          @405
  5931: 82 95 10                 s0 = u64 [a2 + 0x10]
  5934: 33 0a                    a3 = 0
  5936: 97 78 04                 a1 = a0 << 0x4
  5939: c8 58 08                 a1 = a1 + s0
  5942: 7b 18 20                 u64 [sp + 0x20] = a1
  5945: 7b 19 08                 u64 [sp + 0x8] = a2
  5948: 82 96                    s1 = u64 [a2]
  5950: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5953: 97 77 04                 a0 = a0 << 0x4
  5956: 98 77 04                 a0 = a0 >> 0x4
  5959: 95 77 01                 a0 = a0 + 0x1
  5962: 7b 17                    u64 [sp] = a0
  5964: 95 66 08                 s1 = s1 + 0x8
  5967: 01                       fallthrough
      :                          @406
  5968: 7b 1a 28                 u64 [sp + 0x28] = a3
  5971: 82 69                    a2 = u64 [s1]
  5973: 51 09 16                 jump @409 if a2 == 0
      :                          @407
  5976: 82 1a 58                 a3 = u64 [sp + 0x58]
  5979: 82 17 50                 a0 = u64 [sp + 0x50]
  5982: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5985: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5988: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @408 [@dyn 55]
  5992: 52 07 56                 jump @417 if a0 != 0
      :                          @409
  5995: 82 57                    a0 = u64 [s0]
  5997: 82 59 08                 a2 = u64 [s0 + 0x8]
  6000: 95 18 30                 a1 = sp + 0x30
  6003: b4 90 01 70              ra = 112, jump [a2]
      :                          @410 [@dyn 56]
  6007: 52 07 47                 jump @417 if a0 != 0
      :                          @411
  6010: 95 66 10                 s1 = s1 + 0x10
  6013: 95 55 10                 s0 = s0 + 0x10
  6016: 82 1a 28                 a3 = u64 [sp + 0x28]
  6019: 95 aa 01                 a3 = a3 + 0x1
  6022: 82 17 20                 a0 = u64 [sp + 0x20]
  6025: ab 75 c7                 jump @406 if s0 != a0
      :                          @412
  6028: 82 19 08                 a2 = u64 [sp + 0x8]
  6031: 82 1a                    a3 = u64 [sp]
  6033: 82 97 08                 a0 = u64 [a2 + 0x8]
  6036: ac 7a 0d                 jump @415 if a3 <u a0
      :                          @413
  6039: 28 2c                    jump @418
      :                          @414
  6041: 33 0a                    a3 = 0
  6043: 82 97 08                 a0 = u64 [a2 + 0x8]
  6046: 54 07 25                 jump @418 if a0 <=u 0
      :                          @415
  6049: 82 97                    a0 = u64 [a2]
  6051: 97 a8 04                 a1 = a3 << 0x4
  6054: c8 87 09                 a2 = a0 + a1
  6057: 82 1a 58                 a3 = u64 [sp + 0x58]
  6060: 82 17 50                 a0 = u64 [sp + 0x50]
  6063: 82 98                    a1 = u64 [a2]
  6065: 82 99 08                 a2 = u64 [a2 + 0x8]
  6068: 82 aa 18                 a3 = u64 [a3 + 0x18]
  6071: b4 a0 01 72              ra = 114, jump [a3]
      :                          @416 [@dyn 57]
  6075: 51 07 08                 jump @418 if a0 == 0
      :                          @417
  6078: 33 07 01                 a0 = 0x1
  6081: 28 05                    jump @419
      :                          @418
  6083: 33 07                    a0 = 0
  6085: 01                       fallthrough
      :                          @419
  6086: 82 10 80 00              ra = u64 [sp + 0x80]
  6090: 82 15 78                 s0 = u64 [sp + 0x78]
  6093: 82 16 70                 s1 = u64 [sp + 0x70]
  6096: 95 11 88 00              sp = sp + 0x88
  6100: 32 00                    ret
      :                          @420 [@dyn 58]
  6102: 32 00                    ret
      :                          @421 [@dyn 59]
  6104: 95 11 80                 sp = sp + 0xffffffffffffff80
  6107: 7b 10 78                 u64 [sp + 0x78] = ra
  6110: 7b 15 70                 u64 [sp + 0x70] = s0
  6113: 7b 16 68                 u64 [sp + 0x68] = s1
  6116: 64 92                    t0 = a2
  6118: 33 00                    ra = 0
  6120: 33 0b                    a4 = 0
  6122: 33 05                    s0 = 0
  6124: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6134: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6140: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6150: 82 79 10                 a2 = u64 [a0 + 0x10]
  6153: 7b 19 48                 u64 [sp + 0x48] = a2
  6156: 82 79                    a2 = u64 [a0]
  6158: 7b 19 38                 u64 [sp + 0x38] = a2
  6161: 82 77 08                 a0 = u64 [a0 + 0x8]
  6164: 7b 17 30                 u64 [sp + 0x30] = a0
  6167: 33 07 0c 00 01           a0 = 0x1000c
  6172: 7b 17 08                 u64 [sp + 0x8] = a0
  6175: 3a 07 08 00 03           a0 = u64 [0x30008]
  6180: 7b 17 60                 u64 [sp + 0x60] = a0
  6183: 7b 18 58                 u64 [sp + 0x58] = a1
  6186: 95 88 08                 a1 = a1 + 0x8
  6189: 7b 18                    u64 [sp] = a1
  6191: 33 0c 0a                 a5 = 0xa
  6194: 7b 12 20                 u64 [sp + 0x20] = t0
  6197: 7b 13 18                 u64 [sp + 0x18] = t1
  6200: 7b 14 10                 u64 [sp + 0x10] = t2
  6203: 28 3a                    jump @425
      :                          @422
  6205: 64 06                    s1 = ra
  6207: c8 89 07                 a0 = a2 + a1
  6210: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6213: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6216: 88 77 01                 a0 = a0 <u 0x1
  6219: 01                       fallthrough
      :                          @423
  6220: 82 1a 48                 a3 = u64 [sp + 0x48]
  6223: 78 a7                    u8 [a3] = a0
  6225: 82 17 30                 a0 = u64 [sp + 0x30]
  6228: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6231: 82 17 38                 a0 = u64 [sp + 0x38]
  6234: b4 a0 01 78              ra = 120, jump [a3]
      :                          @424 [@dyn 60]
  6238: 64 5b                    a4 = s0
  6240: 82 12 20                 t0 = u64 [sp + 0x20]
  6243: 82 13 18                 t1 = u64 [sp + 0x18]
  6246: 82 14 10                 t2 = u64 [sp + 0x10]
  6249: 64 60                    ra = s1
  6251: 33 0c 0a                 a5 = 0xa
  6254: 82 15 40                 s0 = u64 [sp + 0x40]
  6257: 52 07 63 01              jump @466 if a0 != 0
      :                          @425
  6261: 84 57 ff 00              a0 = s0 & 0xff
  6265: 52 07 57 01              jump @465 if a0 != 0
      :                          @426
  6269: 7b 1b 50                 u64 [sp + 0x50] = a4
  6272: ae 02 0a                 jump @429 if t0 >=u ra
      :                          @427
  6275: 28 ef 00                 jump @456
      :                          @428
  6278: ac 02 ec 00              jump @456 if t0 <u ra
      :                          @429
  6282: c9 02 08                 a1 = t0 - ra
  6285: 82 16 58                 s1 = u64 [sp + 0x58]
  6288: c8 06 06                 s1 = s1 + ra
  6291: 55 18 10 1d              jump @435 if a1 >=u 16
      :                          @430
  6295: aa 02 d8 00              jump @455 if t0 == ra
      :                          @431
  6299: 33 0a                    a3 = 0
  6301: 01                       fallthrough
      :                          @432
  6302: c8 a6 07                 a0 = s1 + a3
  6305: 7c 77                    a0 = u8 [a0]
  6307: aa c7 a5 00              jump @450 if a0 == a5
      :                          @433
  6311: 95 aa 01                 a3 = a3 + 0x1
  6314: ab a8 f4                 jump @432 if a1 != a3
      :                          @434
  6317: 28 c2 00                 jump @455
      :                          @435
  6320: 95 69 07                 a2 = s1 + 0x7
  6323: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6326: c9 6a 07                 a0 = a3 - s1
  6329: d3 6a 0a                 a3 = a3 ^ s1
  6332: 88 aa 01                 a3 = a3 <u 0x1
  6335: 88 7b 01                 a4 = a0 <u 0x1
  6338: d4 ba 0a                 a3 = a3 | a4
  6341: 51 0a 45                 jump @441 if a3 == 0
      :                          @436
  6344: 33 07                    a0 = 0
  6346: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6349: 82 1b                    a4 = u64 [sp]
  6351: c8 0b 0b                 a4 = a4 + ra
  6354: 28 08                    jump @438
      :                          @437
  6356: 82 1b                    a4 = u64 [sp]
  6358: c8 0b 0b                 a4 = a4 + ra
  6361: 01                       fallthrough
      :                          @438
  6362: c8 76 0c                 a5 = s1 + a0
  6365: 82 cc                    a5 = u64 [a5]
  6367: c8 7b 09                 a2 = a4 + a0
  6370: 82 99                    a2 = u64 [a2]
  6372: d3 4c 05                 s0 = a5 ^ t2
  6375: c8 35 05                 s0 = s0 + t1
  6378: e0 c5 0c                 a5 = s0 & ~a5
  6381: d3 49 05                 s0 = a2 ^ t2
  6384: c8 35 05                 s0 = s0 + t1
  6387: e0 95 09                 a2 = s0 & ~a2
  6390: d4 c9 09                 a2 = a2 | a5
  6393: 82 1c 60                 a5 = u64 [sp + 0x60]
  6396: d2 c9 09                 a2 = a2 & a5
  6399: 52 09 1f                 jump @444 if a2 != 0
      :                          @439
  6402: 95 77 10                 a0 = a0 + 0x10
  6405: ae 7a d5                 jump @438 if a3 >=u a0
      :                          @440
  6408: 28 16                    jump @444
      :                          @441
  6410: c8 a6 0b                 a4 = s1 + a3
  6413: 7c bb                    a4 = u8 [a4]
  6415: aa cb 51                 jump @453 if a4 == a5
      :                          @442
  6418: 95 aa 01                 a3 = a3 + 0x1
  6421: ab a7 f5                 jump @441 if a0 != a3
      :                          @443
  6424: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6427: ae 7a b9                 jump @437 if a3 >=u a0
      :                          @444
  6430: aa 87 9a 00              jump @462 if a0 == a1
      :                          @445
  6434: 33 0a                    a3 = 0
  6436: c8 76 06                 s1 = s1 + a0
  6439: c9 72 08                 a1 = t0 - a0
  6442: c9 08 08                 a1 = a1 - ra
  6445: 33 0c 0a                 a5 = 0xa
  6448: 82 1b 50                 a4 = u64 [sp + 0x50]
  6451: 01                       fallthrough
      :                          @446
  6452: c8 a6 09                 a2 = s1 + a3
  6455: 7c 99                    a2 = u8 [a2]
  6457: aa c9 0b                 jump @449 if a2 == a5
      :                          @447
  6460: 95 aa 01                 a3 = a3 + 0x1
  6463: ab a8 f5                 jump @446 if a1 != a3
      :                          @448
  6466: 28 2d                    jump @455
      :                          @449
  6468: c8 7a 0a                 a3 = a3 + a0
  6471: 01                       fallthrough
      :                          @450
  6472: c8 0a 0a                 a3 = a3 + ra
  6475: 95 a0 01                 ra = a3 + 0x1
  6478: ae 2a 38 ff              jump @428 if a3 >=u t0
      :                          @451
  6482: 82 17 58                 a0 = u64 [sp + 0x58]
  6485: c8 7a 0a                 a3 = a3 + a0
  6488: 7c a7                    a0 = u8 [a3]
  6490: ab c7 2c ff              jump @428 if a0 != a5
      :                          @452
  6494: 28 61                    jump @463
      :                          @453
  6496: 82 1b 50                 a4 = u64 [sp + 0x50]
  6499: c8 0a 0a                 a3 = a3 + ra
  6502: 95 a0 01                 ra = a3 + 0x1
  6505: ac 2a e9                 jump @451 if a3 <u t0
      :                          @454
  6508: 28 1a ff                 jump @428
      :                          @455
  6511: 64 20                    ra = t0
  6513: 01                       fallthrough
      :                          @456
  6514: 49 11 40 01              u64 [sp + 64] = 0x1
  6518: 64 b5                    s0 = a4
  6520: 64 26                    s1 = t0
  6522: aa 2b 56                 jump @465 if a4 == t0
      :                          @457
  6525: 82 17 48                 a0 = u64 [sp + 0x48]
  6528: 7c 77                    a0 = u8 [a0]
  6530: 51 07 22                 jump @460 if a0 == 0
      :                          @458
  6533: 82 17 30                 a0 = u64 [sp + 0x30]
  6536: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6539: 33 09 04                 a2 = 0x4
  6542: 82 17 38                 a0 = u64 [sp + 0x38]
  6545: 82 18 08                 a1 = u64 [sp + 0x8]
  6548: 7b 10 28                 u64 [sp + 0x28] = ra
  6551: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @459 [@dyn 61]
  6555: 82 1b 50                 a4 = u64 [sp + 0x50]
  6558: 82 10 28                 ra = u64 [sp + 0x28]
  6561: 52 07 33                 jump @466 if a0 != 0
      :                          @460
  6564: c9 b6 09                 a2 = s1 - a4
  6567: 82 18 58                 a1 = u64 [sp + 0x58]
  6570: c8 b8 08                 a1 = a1 + a4
  6573: ab b6 90 fe              jump @422 if s1 != a4
      :                          @461
  6577: 64 06                    s1 = ra
  6579: 33 07                    a0 = 0
  6581: 28 97 fe                 jump @423
      :                          @462
  6584: 64 20                    ra = t0
  6586: 82 1b 50                 a4 = u64 [sp + 0x50]
  6589: 28 b5                    jump @456
      :                          @463
  6591: 49 11 40                 u64 [sp + 64] = 0
  6594: 64 05                    s0 = ra
  6596: 64 06                    s1 = ra
  6598: 82 17 48                 a0 = u64 [sp + 0x48]
  6601: 7c 77                    a0 = u8 [a0]
  6603: 52 07 ba                 jump @458 if a0 != 0
      :                          @464
  6606: 28 d6                    jump @460
      :                          @465
  6608: 33 07                    a0 = 0
  6610: 28 06                    jump @467
      :                          @466
  6612: 33 07 01                 a0 = 0x1
  6615: 01                       fallthrough
      :                          @467
  6616: 82 10 78                 ra = u64 [sp + 0x78]
  6619: 82 15 70                 s0 = u64 [sp + 0x70]
  6622: 82 16 68                 s1 = u64 [sp + 0x68]
  6625: 95 11 80 00              sp = sp + 0x80
  6629: 32 00                    ret
      :                          @468 [@dyn 62]
  6631: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6634: 7b 10 20                 u64 [sp + 0x20] = ra
  6637: 7b 15 18                 u64 [sp + 0x18] = s0
  6640: 7b 16 10                 u64 [sp + 0x10] = s1
  6643: 82 75 10                 s0 = u64 [a0 + 0x10]
  6646: 7c 59                    a2 = u8 [s0]
  6648: 82 7b                    a4 = u64 [a0]
  6650: 82 76 08                 s1 = u64 [a0 + 0x8]
  6653: 51 09 32                 jump @472 if a2 == 0
      :                          @469
  6656: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6659: 7b 18 08                 u64 [sp + 0x8] = a1
  6662: 33 08 0c 00 01           a1 = 0x1000c
  6667: 33 09 04                 a2 = 0x4
  6670: 64 b7                    a0 = a4
  6672: 7b 1b                    u64 [sp] = a4
  6674: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @470 [@dyn 63]
  6678: 82 18 08                 a1 = u64 [sp + 0x8]
  6681: 82 1b                    a4 = u64 [sp]
  6683: 51 07 14                 jump @472 if a0 == 0
      :                          @471
  6686: 33 07 01                 a0 = 0x1
  6689: 82 10 20                 ra = u64 [sp + 0x20]
  6692: 82 15 18                 s0 = u64 [sp + 0x18]
  6695: 82 16 10                 s1 = u64 [sp + 0x10]
  6698: 95 11 28                 sp = sp + 0x28
  6701: 32 00                    ret
      :                          @472
  6703: 83 87                    i32 a0 = a1 + 0
  6705: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6708: 88 77 01                 a0 = a0 <u 0x1
  6711: 78 57                    u8 [s0] = a0
  6713: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6716: 64 b7                    a0 = a4
  6718: 82 10 20                 ra = u64 [sp + 0x20]
  6721: 82 15 18                 s0 = u64 [sp + 0x18]
  6724: 82 16 10                 s1 = u64 [sp + 0x10]
  6727: 95 11 28                 sp = sp + 0x28
  6730: 32 0c                    jump [a5]
      :                          @473 [@dyn 64]
  6732: 64 8a                    a3 = a1
  6734: 33 08 40 02 01           a1 = 0x10240
  6739: 64 a9                    a2 = a3
  6741: 28 a2 fb                 jump @382
      :                          @474
  6744: 51 08 9b 00              jump @495 if a1 == 0
      :                          @475
  6748: 64 79                    a2 = a0
  6750: 7c 77                    a0 = u8 [a0]
  6752: 51 07 91 00              jump @494 if a0 == 0
      :                          @476
  6756: 51 27 ff 00 90 00        jump @496 if a0 == 255
      :                          @477
  6762: 6c 7a                    a3 = sext.b a0
  6764: 57 0a 09                 jump @479 if a3 <s 0
      :                          @478
  6767: 33 0a                    a3 = 0
  6769: 33 08                    a1 = 0
  6771: 28 73                    jump @493
      :                          @479
  6773: 55 27 c0 00 0d           jump @481 if a0 >=u 192
      :                          @480
  6778: 33 0a 01                 a3 = 0x1
  6781: 33 0b 80                 a4 = 0xffffffffffffff80
  6784: 28 4a                    jump @490
      :                          @481
  6786: 55 27 e0 00 0e           jump @483 if a0 >=u 224
      :                          @482
  6791: 33 0a 02                 a3 = 0x2
  6794: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6798: 28 3c                    jump @490
      :                          @483
  6800: 55 27 f0 00 0e           jump @485 if a0 >=u 240
      :                          @484
  6805: 33 0a 03                 a3 = 0x3
  6808: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6812: 28 2e                    jump @490
      :                          @485
  6814: 55 27 f8 00 0e           jump @487 if a0 >=u 248
      :                          @486
  6819: 33 0a 04                 a3 = 0x4
  6822: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6826: 28 20                    jump @490
      :                          @487
  6828: 55 27 fc 00 0e           jump @489 if a0 >=u 252
      :                          @488
  6833: 33 0a 05                 a3 = 0x5
  6836: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6840: 28 12                    jump @490
      :                          @489
  6842: 88 7a fe 00              a3 = a0 <u 0xfe
  6846: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6850: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6854: 85 aa 07                 a3 = a3 ^ 0x7
  6857: 01                       fallthrough
      :                          @490
  6858: ae 8a 2b                 jump @497 if a3 >=u a1
      :                          @491
  6861: 33 08                    a1 = 0
  6863: c8 b7 07                 a0 = a0 + a4
  6866: 64 ab                    a4 = a3
  6868: 01                       fallthrough
      :                          @492
  6869: c8 b9 0c                 a5 = a2 + a4
  6872: 7c cc                    a5 = u8 [a5]
  6874: 97 88 08                 a1 = a1 << 0x8
  6877: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6880: d4 c8 08                 a1 = a1 | a5
  6883: 52 0b f2                 jump @492 if a4 != 0
      :                          @493
  6886: 8a a9 03                 i32 a2 = a3 << 0x3
  6889: cf 97 07                 a0 = a0 << a2
  6892: c8 87 07                 a0 = a0 + a1
  6895: 32 00                    ret
      :                          @494
  6897: 32 00                    ret
      :                          @495
  6899: 00                       trap
      :                          @496
  6900: 00                       trap
      :                          @497
  6901: 00                       trap
      :                          @498 [@dyn 65]
  6902: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  6906: 7b 10 90 00              u64 [sp + 0x90] = ra
  6910: 7b 15 88 00              u64 [sp + 0x88] = s0
  6914: 7b 16 80 00              u64 [sp + 0x80] = s1
  6918: 64 85                    s0 = a1
  6920: 82 86 28                 s1 = u64 [a1 + 0x28]
  6923: 82 8a 20                 a3 = u64 [a1 + 0x20]
  6926: 82 6b 18                 a4 = u64 [s1 + 0x18]
  6929: 7b 17 10                 u64 [sp + 0x10] = a0
  6932: 33 08 38 02 01           a1 = 0x10238
  6937: 33 09 01                 a2 = 0x1
  6940: 7b 1a 18                 u64 [sp + 0x18] = a3
  6943: 64 a7                    a0 = a3
  6945: 7b 1b 08                 u64 [sp + 0x8] = a4
  6948: b4 b0 02 84 00           ra = 132, jump [a4]
      :                          @499 [@dyn 66]
  6953: 51 07 09                 jump @501 if a0 == 0
      :                          @500
  6956: 33 09 01                 a2 = 0x1
  6959: 28 d2 00                 jump @513
      :                          @501
  6962: 80 58 34                 a1 = u32 [s0 + 0x34]
  6965: 84 87 04                 a0 = a1 & 0x4
  6968: 52 07 21                 jump @505 if a0 != 0
      :                          @502
  6971: 82 17 10                 a0 = u64 [sp + 0x10]
  6974: 64 58                    a1 = s0
  6976: 50 20 86 00 d5 00        ra = 134, jump @514
      :                          @503 [@dyn 67]
  6982: 33 09 01                 a2 = 0x1
  6985: 52 07 b8 00              jump @513 if a0 != 0
      :                          @504
  6989: 82 57 28                 a0 = u64 [s0 + 0x28]
  6992: 82 5a 20                 a3 = u64 [s0 + 0x20]
  6995: 82 7b 18                 a4 = u64 [a0 + 0x18]
  6998: 28 99 00                 jump @511
      :                          @505
  7001: 7b 18                    u64 [sp] = a1
  7003: 33 08 72 02 01           a1 = 0x10272
  7008: 33 09 01                 a2 = 0x1
  7011: 82 17 18                 a0 = u64 [sp + 0x18]
  7014: 82 1a 08                 a3 = u64 [sp + 0x8]
  7017: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @506 [@dyn 68]
  7022: 33 09 01                 a2 = 0x1
  7025: 82 18 18                 a1 = u64 [sp + 0x18]
  7028: 52 07 8d 00              jump @513 if a0 != 0
      :                          @507
  7032: 46 11 3f 01              u8 [sp + 63] = 0x1
  7036: 7b 18 20                 u64 [sp + 0x20] = a1
  7039: 7b 16 28                 u64 [sp + 0x28] = s1
  7042: 95 17 3f                 a0 = sp + 0x3f
  7045: 7b 17 30                 u64 [sp + 0x30] = a0
  7048: 81 57 30                 a0 = i32 [s0 + 0x30]
  7051: 7c 58 38                 a1 = u8 [s0 + 0x38]
  7054: 82 59                    a2 = u64 [s0]
  7056: 82 5a 08                 a3 = u64 [s0 + 0x8]
  7059: 82 5b 10                 a4 = u64 [s0 + 0x10]
  7062: 82 5c 18                 a5 = u64 [s0 + 0x18]
  7065: 82 16                    s1 = u64 [sp]
  7067: 7a 16 74                 u32 [sp + 0x74] = s1
  7070: 7a 17 70                 u32 [sp + 0x70] = a0
  7073: 78 18 78                 u8 [sp + 0x78] = a1
  7076: 7b 19 40                 u64 [sp + 0x40] = a2
  7079: 7b 1a 48                 u64 [sp + 0x48] = a3
  7082: 7b 1b 50                 u64 [sp + 0x50] = a4
  7085: 7b 1c 58                 u64 [sp + 0x58] = a5
  7088: 95 17 20                 a0 = sp + 0x20
  7091: 7b 17 60                 u64 [sp + 0x60] = a0
  7094: 33 07 40 02 01           a0 = 0x10240
  7099: 7b 17 68                 u64 [sp + 0x68] = a0
  7102: 95 18 40                 a1 = sp + 0x40
  7105: 82 17 10                 a0 = u64 [sp + 0x10]
  7108: 50 20 8a 00 51           ra = 138, jump @514
      :                          @508 [@dyn 69]
  7113: 52 07 63 ff              jump @500 if a0 != 0
      :                          @509
  7117: 82 18 68                 a1 = u64 [sp + 0x68]
  7120: 82 17 60                 a0 = u64 [sp + 0x60]
  7123: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7126: 33 08 70 02 01           a1 = 0x10270
  7131: 33 09 02                 a2 = 0x2
  7134: b4 a0 02 8c 00           ra = 140, jump [a3]
      :                          @510 [@dyn 70]
  7139: 82 1a 18                 a3 = u64 [sp + 0x18]
  7142: 82 1b 08                 a4 = u64 [sp + 0x8]
  7145: 33 09 01                 a2 = 0x1
  7148: 52 07 15                 jump @513 if a0 != 0
      :                          @511
  7151: 33 08 73 02 01           a1 = 0x10273
  7156: 33 09 01                 a2 = 0x1
  7159: 64 a7                    a0 = a3
  7161: b4 b0 02 8e 00           ra = 142, jump [a4]
      :                          @512 [@dyn 71]
  7166: 64 79                    a2 = a0
  7168: 01                       fallthrough
      :                          @513
  7169: 64 97                    a0 = a2
  7171: 82 10 90 00              ra = u64 [sp + 0x90]
  7175: 82 15 88 00              s0 = u64 [sp + 0x88]
  7179: 82 16 80 00              s1 = u64 [sp + 0x80]
  7183: 95 11 98 00              sp = sp + 0x98
  7187: 32 00                    ret
      :                          @514
  7189: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7193: 7b 10 80 00              u64 [sp + 0x80] = ra
  7197: 64 82                    t0 = a1
  7199: 80 88 34                 a1 = u32 [a1 + 0x34]
  7202: 84 89 10                 a2 = a1 & 0x10
  7205: 52 09 1b                 jump @517 if a2 != 0
      :                          @515
  7208: 84 88 20                 a1 = a1 & 0x20
  7211: 52 08 46                 jump @520 if a1 != 0
      :                          @516
  7214: 7c 77                    a0 = u8 [a0]
  7216: 33 08 01                 a1 = 0x1
  7219: 64 29                    a2 = t0
  7221: 82 10 80 00              ra = u64 [sp + 0x80]
  7225: 95 11 88 00              sp = sp + 0x88
  7229: 28 0c f6                 jump @318
      :                          @517
  7232: 7c 77                    a0 = u8 [a0]
  7234: 33 0a 81 00              a3 = 0x81
  7238: 95 18 7f                 a1 = sp + 0x7f
  7241: 33 03 57                 t1 = 0x57
  7244: 01                       fallthrough
      :                          @518
  7245: 64 ab                    a4 = a3
  7247: 84 7a 0f                 a3 = a0 & 0xf
  7250: 97 77 38                 a0 = a0 << 0x38
  7253: 98 77 3c                 a0 = a0 >> 0x3c
  7256: 88 ac 0a                 a5 = a3 <u 0xa
  7259: 33 09 30                 a2 = 0x30
  7262: da c3 09                 a2 = t1 if a5 == 0
  7265: be a9 09                 i32 a2 = a2 + a3
  7268: 78 89                    u8 [a1] = a2
  7270: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7273: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7276: 52 07 e1                 jump @518 if a0 != 0
      :                          @519
  7279: 28 31                    jump @522
      :                          @520
  7281: 7c 77                    a0 = u8 [a0]
  7283: 33 0a 81 00              a3 = 0x81
  7287: 95 18 7f                 a1 = sp + 0x7f
  7290: 33 03 37                 t1 = 0x37
  7293: 01                       fallthrough
      :                          @521
  7294: 64 ab                    a4 = a3
  7296: 84 7a 0f                 a3 = a0 & 0xf
  7299: 97 77 38                 a0 = a0 << 0x38
  7302: 98 77 3c                 a0 = a0 >> 0x3c
  7305: 88 ac 0a                 a5 = a3 <u 0xa
  7308: 33 09 30                 a2 = 0x30
  7311: da c3 09                 a2 = t1 if a5 == 0
  7314: be a9 09                 i32 a2 = a2 + a3
  7317: 78 89                    u8 [a1] = a2
  7319: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7322: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7325: 52 07 e1                 jump @521 if a0 != 0
      :                          @522
  7328: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  7331: 56 27 80 00 2b           jump @525 if a0 >u 128
      :                          @523
  7336: 9a ac 81 00              a5 = 0x81 - a3
  7340: 64 1b                    a4 = sp
  7342: c8 7b 0b                 a4 = a4 + a0
  7345: 33 09 74 02 01           a2 = 0x10274
  7350: 33 08 01                 a1 = 0x1
  7353: 33 0a 02                 a3 = 0x2
  7356: 64 27                    a0 = t0
  7358: 50 20 90 00 b8 f6        ra = 144, jump @328
      :                          @524 [@dyn 72]
  7364: 82 10 80 00              ra = u64 [sp + 0x80]
  7368: 95 11 88 00              sp = sp + 0x88
  7372: 32 00                    ret
      :                          @525
  7374: 00                       trap
