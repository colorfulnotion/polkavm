// RO data = 888/888 bytes
// RW data = 16/65616 bytes
// Stack size = 65536 bytes
// RO data = [109, 101, 103, 40, 109, 101, 103, 32, 114, 101, 97, 100, 32, 32, 32, 32, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 115, 101, 114, 118, 105, 99, 101, 32, 32, 102, 105, 98, 40, 110, 61, 41, 61, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 35, 0, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 105, 98, 40, 110, 61, 116, 114, 97, 110, 115, 102, 101, 114, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 0, 1, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 112, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 32, 119, 114, 105, 116, 101, 40, 110, 61, 41, 32, 110, 117, 109, 95, 116, 114, 97, 110, 115, 102, 101, 114, 115, 61, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 233, 0, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 32, 116, 114, 97, 110, 115, 102, 101, 114, 40, 100, 101, 115, 116, 58, 44, 32, 97, 109, 111, 117, 110, 116, 61, 44, 32, 103, 97, 115, 95, 97, 118, 97, 105, 108, 61, 41, 32, 82, 101, 115, 117, 108, 116, 58, 32, 0, 0, 56, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 1, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 63, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 72, 1, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 84, 1, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 77, 101, 103, 97, 116, 114, 111, 110, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 206, 1, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 62, 3, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 79, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2417
// Code size = 7283 bytes

      :                          @0
     0: 28 3f 02 00 00           jump @39
      :                          @1
     5: 28 e0 02 00 00           jump @54
      :                          @2
    10: 28 9b 0a                 jump @176
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 64 82                    t0 = a1
    23: 80 88 34                 a1 = u32 [a1 + 0x34]
    26: 84 89 10                 a2 = a1 & 0x10
    29: 52 09 28                 jump @6 if a2 != 0
      :                          @4
    32: 84 88 20                 a1 = a1 & 0x20
    35: 52 08 52                 jump @9 if a1 != 0
      :                          @5
    38: 81 77                    a0 = i32 [a0]
    40: 89 79                    a2 = a0 <s 0
    42: 85 98 01                 a1 = a2 ^ 0x1
    45: 97 7a 20                 a3 = a0 << 0x20
    48: 98 aa 20                 a3 = a3 >> 0x20
    51: 9a 77                    a0 = -a0
    53: da 9a 07                 a0 = a3 if a2 == 0
    56: 64 29                    a2 = t0
    58: 82 10 80 00              ra = u64 [sp + 0x80]
    62: 95 11 88 00              sp = sp + 0x88
    66: 28 aa 11                 jump @330
      :                          @6
    69: 81 7a                    a3 = i32 [a0]
    71: 33 08 81 00              a1 = 0x81
    75: 95 17 7f                 a0 = sp + 0x7f
    78: 33 03 57                 t1 = 0x57
    81: 01                       fallthrough
      :                          @7
    82: 64 8b                    a4 = a1
    84: 8b ac 04                 i32 a5 = a3 >> 0x4
    87: 84 aa 0f                 a3 = a3 & 0xf
    90: 88 a8 0a                 a1 = a3 <u 0xa
    93: 33 09 30                 a2 = 0x30
    96: da 83 09                 a2 = t1 if a1 == 0
    99: be a9 09                 i32 a2 = a2 + a3
   102: 78 79                    u8 [a0] = a2
   104: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   107: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   110: 64 ca                    a3 = a5
   112: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   115: 28 30                    jump @11
      :                          @9
   117: 81 7a                    a3 = i32 [a0]
   119: 33 08 81 00              a1 = 0x81
   123: 95 17 7f                 a0 = sp + 0x7f
   126: 33 03 37                 t1 = 0x37
   129: 01                       fallthrough
      :                          @10
   130: 64 8b                    a4 = a1
   132: 8b ac 04                 i32 a5 = a3 >> 0x4
   135: 84 aa 0f                 a3 = a3 & 0xf
   138: 88 a8 0a                 a1 = a3 <u 0xa
   141: 33 09 30                 a2 = 0x30
   144: da 83 09                 a2 = t1 if a1 == 0
   147: be a9 09                 i32 a2 = a2 + a3
   150: 78 79                    u8 [a0] = a2
   152: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   155: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   158: 64 ca                    a3 = a5
   160: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   163: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   166: 56 27 80 00 2a           jump @14 if a0 >u 128
      :                          @12
   171: 9a 8c 81 00              a5 = 0x81 - a1
   175: 64 1b                    a4 = sp
   177: c8 7b 0b                 a4 = a4 + a0
   180: 33 09 74 02 01           a2 = 0x10274
   185: 33 08 01                 a1 = 0x1
   188: 33 0a 02                 a3 = 0x2
   191: 64 27                    a0 = t0
   193: 50 10 04 58 12           ra = 4, jump @340
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   213: 7b 10 80 00              u64 [sp + 0x80] = ra
   217: 64 82                    t0 = a1
   219: 80 88 34                 a1 = u32 [a1 + 0x34]
   222: 84 89 10                 a2 = a1 & 0x10
   225: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   228: 84 88 20                 a1 = a1 & 0x20
   231: 52 08 45                 jump @21 if a1 != 0
      :                          @17
   234: 80 77                    a0 = u32 [a0]
   236: 33 08 01                 a1 = 0x1
   239: 64 29                    a2 = t0
   241: 82 10 80 00              ra = u64 [sp + 0x80]
   245: 95 11 88 00              sp = sp + 0x88
   249: 28 f3 10                 jump @330
      :                          @18
   252: 81 7a                    a3 = i32 [a0]
   254: 33 08 81 00              a1 = 0x81
   258: 95 17 7f                 a0 = sp + 0x7f
   261: 33 03 57                 t1 = 0x57
   264: 01                       fallthrough
      :                          @19
   265: 64 8b                    a4 = a1
   267: 8b ac 04                 i32 a5 = a3 >> 0x4
   270: 84 aa 0f                 a3 = a3 & 0xf
   273: 88 a8 0a                 a1 = a3 <u 0xa
   276: 33 09 30                 a2 = 0x30
   279: da 83 09                 a2 = t1 if a1 == 0
   282: be a9 09                 i32 a2 = a2 + a3
   285: 78 79                    u8 [a0] = a2
   287: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   290: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   293: 64 ca                    a3 = a5
   295: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   298: 28 30                    jump @23
      :                          @21
   300: 81 7a                    a3 = i32 [a0]
   302: 33 08 81 00              a1 = 0x81
   306: 95 17 7f                 a0 = sp + 0x7f
   309: 33 03 37                 t1 = 0x37
   312: 01                       fallthrough
      :                          @22
   313: 64 8b                    a4 = a1
   315: 8b ac 04                 i32 a5 = a3 >> 0x4
   318: 84 aa 0f                 a3 = a3 & 0xf
   321: 88 a8 0a                 a1 = a3 <u 0xa
   324: 33 09 30                 a2 = 0x30
   327: da 83 09                 a2 = t1 if a1 == 0
   330: be a9 09                 i32 a2 = a2 + a3
   333: 78 79                    u8 [a0] = a2
   335: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   338: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   341: 64 ca                    a3 = a5
   343: 52 0c e2                 jump @22 if a5 != 0
      :                          @23
   346: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   349: 56 27 80 00 2a           jump @26 if a0 >u 128
      :                          @24
   354: 9a 8c 81 00              a5 = 0x81 - a1
   358: 64 1b                    a4 = sp
   360: c8 7b 0b                 a4 = a4 + a0
   363: 33 09 74 02 01           a2 = 0x10274
   368: 33 08 01                 a1 = 0x1
   371: 33 0a 02                 a3 = 0x2
   374: 64 27                    a0 = t0
   376: 50 10 08 a1 11           ra = 8, jump @340
      :                          @25 [@dyn 4]
   381: 82 10 80 00              ra = u64 [sp + 0x80]
   385: 95 11 88 00              sp = sp + 0x88
   389: 32 00                    ret
      :                          @26
   391: 00                       trap
      :                          @27 [@dyn 5]
   392: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   396: 7b 10 80 00              u64 [sp + 0x80] = ra
   400: 64 82                    t0 = a1
   402: 80 88 34                 a1 = u32 [a1 + 0x34]
   405: 84 89 10                 a2 = a1 & 0x10
   408: 52 09 1b                 jump @30 if a2 != 0
      :                          @28
   411: 84 88 20                 a1 = a1 & 0x20
   414: 52 08 45                 jump @33 if a1 != 0
      :                          @29
   417: 82 77                    a0 = u64 [a0]
   419: 33 08 01                 a1 = 0x1
   422: 64 29                    a2 = t0
   424: 82 10 80 00              ra = u64 [sp + 0x80]
   428: 95 11 88 00              sp = sp + 0x88
   432: 28 3c 10                 jump @330
      :                          @30
   435: 82 7a                    a3 = u64 [a0]
   437: 33 08 81 00              a1 = 0x81
   441: 95 17 7f                 a0 = sp + 0x7f
   444: 33 03 57                 t1 = 0x57
   447: 01                       fallthrough
      :                          @31
   448: 64 8b                    a4 = a1
   450: 98 ac 04                 a5 = a3 >> 0x4
   453: 84 aa 0f                 a3 = a3 & 0xf
   456: 88 a8 0a                 a1 = a3 <u 0xa
   459: 33 09 30                 a2 = 0x30
   462: da 83 09                 a2 = t1 if a1 == 0
   465: be a9 09                 i32 a2 = a2 + a3
   468: 78 79                    u8 [a0] = a2
   470: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   473: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   476: 64 ca                    a3 = a5
   478: 52 0c e2                 jump @31 if a5 != 0
      :                          @32
   481: 28 30                    jump @35
      :                          @33
   483: 82 7a                    a3 = u64 [a0]
   485: 33 08 81 00              a1 = 0x81
   489: 95 17 7f                 a0 = sp + 0x7f
   492: 33 03 37                 t1 = 0x37
   495: 01                       fallthrough
      :                          @34
   496: 64 8b                    a4 = a1
   498: 98 ac 04                 a5 = a3 >> 0x4
   501: 84 aa 0f                 a3 = a3 & 0xf
   504: 88 a8 0a                 a1 = a3 <u 0xa
   507: 33 09 30                 a2 = 0x30
   510: da 83 09                 a2 = t1 if a1 == 0
   513: be a9 09                 i32 a2 = a2 + a3
   516: 78 79                    u8 [a0] = a2
   518: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   521: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   524: 64 ca                    a3 = a5
   526: 52 0c e2                 jump @34 if a5 != 0
      :                          @35
   529: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   532: 56 27 80 00 2a           jump @38 if a0 >u 128
      :                          @36
   537: 9a 8c 81 00              a5 = 0x81 - a1
   541: 64 1b                    a4 = sp
   543: c8 7b 0b                 a4 = a4 + a0
   546: 33 09 74 02 01           a2 = 0x10274
   551: 33 08 01                 a1 = 0x1
   554: 33 0a 02                 a3 = 0x2
   557: 64 27                    a0 = t0
   559: 50 10 0c ea 10           ra = 12, jump @340
      :                          @37 [@dyn 6]
   564: 82 10 80 00              ra = u64 [sp + 0x80]
   568: 95 11 88 00              sp = sp + 0x88
   572: 32 00                    ret
      :                          @38
   574: 00                       trap
      :                          @39 [export #0: 'refine']
   575: 95 11 e0                 sp = sp + 0xffffffffffffffe0
   578: 7b 10 18                 u64 [sp + 0x18] = ra
   581: 7b 15 10                 u64 [sp + 0x10] = s0
   584: 7b 16 08                 u64 [sp + 0x8] = s1
   587: 64 86                    s1 = a1
   589: 64 78                    a1 = a0
   591: 33 09 04                 a2 = 0x4
   594: 33 07 00 00 01           a0 = 0x10000
   599: ac 96 7c                 jump @51 if s1 <u a2
      :                          @40
   602: 95 66 fc                 s1 = s1 + 0xfffffffffffffffc
   605: 51 06 76                 jump @51 if s1 == 0
      :                          @41
   608: 95 87 04                 a0 = a1 + 0x4
   611: 7d 78                    a1 = i8 [a0]
   613: 33 05 01                 s0 = 0x1
   616: 59 08 3a                 jump @49 if a1 >=s 0
      :                          @42
   619: 84 89 ff 00              a2 = a1 & 0xff
   623: 33 05 02                 s0 = 0x2
   626: 53 29 c0 00 2d           jump @48 if a2 <u 192
      :                          @43
   631: 33 05 03                 s0 = 0x3
   634: 53 29 e0 00 25           jump @48 if a2 <u 224
      :                          @44
   639: 33 05 04                 s0 = 0x4
   642: 53 29 f0 00 1d           jump @48 if a2 <u 240
      :                          @45
   647: 33 05 05                 s0 = 0x5
   650: 53 29 f8 00 15           jump @48 if a2 <u 248
      :                          @46
   655: 33 05 06                 s0 = 0x6
   658: 53 29 fc 00 0d           jump @48 if a2 <u 252
      :                          @47
   663: 88 98 fe 00              a1 = a2 <u 0xfe
   667: 9a 85 08                 s0 = 0x8 - a1
   670: 01                       fallthrough
      :                          @48
   671: ac 56 45                 jump @53 if s1 <u s0
      :                          @49
   674: 64 58                    a1 = s0
   676: 7b 17                    u64 [sp] = a0
   678: 50 10 0e 56 17           ra = 14, jump @486
      :                          @50 [@dyn 7]
   683: 64 78                    a1 = a0
   685: e4 56 07                 a0 = maxu(s1, s0)
   688: c9 57 07                 a0 = a0 - s0
   691: d8 87 09                 a2 = a0 <u a1
   694: e4 87 07                 a0 = maxu(a0, a1)
   697: c9 87 07                 a0 = a0 - a1
   700: 88 77 20                 a0 = a0 <u 0x20
   703: d4 79 09                 a2 = a2 | a0
   706: 82 17                    a0 = u64 [sp]
   708: c8 75 05                 s0 = s0 + a0
   711: 94 98                    a1 = 0 if a2 != 0
   713: 33 07 00 00 01           a0 = 0x10000
   718: da 95 07                 a0 = s0 if a2 == 0
   721: 28 05                    jump @52
      :                          @51
   723: 33 08                    a1 = 0
   725: 01                       fallthrough
      :                          @52
   726: 82 10 18                 ra = u64 [sp + 0x18]
   729: 82 15 10                 s0 = u64 [sp + 0x10]
   732: 82 16 08                 s1 = u64 [sp + 0x8]
   735: 95 11 20                 sp = sp + 0x20
   738: 32 00                    ret
      :                          @53
   740: 00                       trap
      :                          @54 [export #1: 'accumulate']
   741: 95 11 f8 fd              sp = sp + 0xfffffffffffffdf8
   745: 7b 10 00 02              u64 [sp + 0x200] = ra
   749: 7b 15 f8 01              u64 [sp + 0x1f8] = s0
   753: 7b 16 f0 01              u64 [sp + 0x1f0] = s1
   757: 33 09 08                 a2 = 0x8
   760: ac 98 60 01              jump @98 if a1 <u a2
      :                          @55
   764: 51 17 fc a5 07           jump @172 if a0 == 4294967292
      :                          @56
   769: 51 07 a0 07              jump @172 if a0 == 0
      :                          @57
   773: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   776: 95 75 08                 s0 = a0 + 0x8
   779: 51 0a 45                 jump @67 if a3 == 0
      :                          @58
   782: 7d 58                    a1 = i8 [s0]
   784: 33 06 01                 s1 = 0x1
   787: 59 08 40                 jump @68 if a1 >=s 0
      :                          @59
   790: 84 89 ff 00              a2 = a1 & 0xff
   794: 33 06 02                 s1 = 0x2
   797: 53 29 c0 00 2d           jump @65 if a2 <u 192
      :                          @60
   802: 33 06 03                 s1 = 0x3
   805: 53 29 e0 00 25           jump @65 if a2 <u 224
      :                          @61
   810: 33 06 04                 s1 = 0x4
   813: 53 29 f0 00 1d           jump @65 if a2 <u 240
      :                          @62
   818: 33 06 05                 s1 = 0x5
   821: 53 29 f8 00 15           jump @65 if a2 <u 248
      :                          @63
   826: 33 06 06                 s1 = 0x6
   829: 53 29 fc 00 0d           jump @65 if a2 <u 252
      :                          @64
   834: 88 98 fe 00              a1 = a2 <u 0xfe
   838: 9a 86 08                 s1 = 0x8 - a1
   841: 01                       fallthrough
      :                          @65
   842: ae 6a 09                 jump @68 if a3 >=u s1
      :                          @66
   845: 28 0b 01                 jump @98
      :                          @67
   848: 33 06                    s1 = 0
   850: 01                       fallthrough
      :                          @68
   851: 7b 16 58                 u64 [sp + 0x58] = s1
   854: 64 57                    a0 = s0
   856: 64 68                    a1 = s1
   858: 64 a6                    s1 = a3
   860: 50 10 10 a0 16           ra = 16, jump @486
      :                          @69 [@dyn 8]
   865: 82 1a 58                 a3 = u64 [sp + 0x58]
   868: 51 07 f4 00              jump @98 if a0 == 0
      :                          @70
   872: e4 a6 07                 a0 = maxu(s1, a3)
   875: c9 a7 07                 a0 = a0 - a3
   878: 53 17 60 ea 00           jump @98 if a0 <u 96
      :                          @71
   883: c8 5a 08                 a1 = a3 + s0
   886: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   889: 95 87 60                 a0 = a1 + 0x60
   892: 7b 17 58                 u64 [sp + 0x58] = a0
   895: 51 06 4c                 jump @82 if s1 == 0
      :                          @72
   898: 7d 78                    a1 = i8 [a0]
   900: 33 05 01                 s0 = 0x1
   903: 59 08 37                 jump @79 if a1 >=s 0
      :                          @73
   906: 84 89 ff 00              a2 = a1 & 0xff
   910: 33 05 02                 s0 = 0x2
   913: 53 29 c0 00 2d           jump @79 if a2 <u 192
      :                          @74
   918: 33 05 03                 s0 = 0x3
   921: 53 29 e0 00 25           jump @79 if a2 <u 224
      :                          @75
   926: 33 05 04                 s0 = 0x4
   929: 53 29 f0 00 1d           jump @79 if a2 <u 240
      :                          @76
   934: 33 05 05                 s0 = 0x5
   937: 53 29 f8 00 15           jump @79 if a2 <u 248
      :                          @77
   942: 33 05 06                 s0 = 0x6
   945: 53 29 fc 00 0d           jump @79 if a2 <u 252
      :                          @78
   950: 88 98 fe 00              a1 = a2 <u 0xfe
   954: 9a 85 08                 s0 = 0x8 - a1
   957: 01                       fallthrough
      :                          @79
   958: ac 56 e4 06              jump @173 if s1 <u s0
      :                          @80
   962: 64 58                    a1 = s0
   964: 50 10 12 38 16           ra = 18, jump @486
      :                          @81 [@dyn 9]
   969: 28 07                    jump @83
      :                          @82
   971: 33 05                    s0 = 0
   973: 33 07                    a0 = 0
   975: 01                       fallthrough
      :                          @83
   976: e4 56 08                 a1 = maxu(s1, s0)
   979: c9 58 08                 a1 = a1 - s0
   982: e4 78 08                 a1 = maxu(a1, a0)
   985: c9 78 08                 a1 = a1 - a0
   988: 33 09 20                 a2 = 0x20
   991: ac 98 79                 jump @98 if a1 <u a2
      :                          @84
   994: 82 19 58                 a2 = u64 [sp + 0x58]
   997: c8 95 05                 s0 = s0 + a2
  1000: c8 57 07                 a0 = a0 + s0
  1003: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  1006: 95 77 20                 a0 = a0 + 0x20
  1009: 7b 17 58                 u64 [sp + 0x58] = a0
  1012: 51 05 5f                 jump @97 if s0 == 0
      :                          @85
  1015: 7d 78                    a1 = i8 [a0]
  1017: 33 06 01                 s1 = 0x1
  1020: 59 08 37                 jump @92 if a1 >=s 0
      :                          @86
  1023: 84 89 ff 00              a2 = a1 & 0xff
  1027: 33 06 02                 s1 = 0x2
  1030: 53 29 c0 00 2d           jump @92 if a2 <u 192
      :                          @87
  1035: 33 06 03                 s1 = 0x3
  1038: 53 29 e0 00 25           jump @92 if a2 <u 224
      :                          @88
  1043: 33 06 04                 s1 = 0x4
  1046: 53 29 f0 00 1d           jump @92 if a2 <u 240
      :                          @89
  1051: 33 06 05                 s1 = 0x5
  1054: 53 29 f8 00 15           jump @92 if a2 <u 248
      :                          @90
  1059: 33 06 06                 s1 = 0x6
  1062: 53 29 fc 00 0d           jump @92 if a2 <u 252
      :                          @91
  1067: 88 98 fe 00              a1 = a2 <u 0xfe
  1071: 9a 86 08                 s1 = 0x8 - a1
  1074: 01                       fallthrough
      :                          @92
  1075: ac 65 70 06              jump @174 if s0 <u s1
      :                          @93
  1079: 64 68                    a1 = s1
  1081: 50 10 14 c3 15           ra = 20, jump @486
      :                          @94 [@dyn 10]
  1086: ae 56 1a                 jump @98 if s1 >=u s0
      :                          @95
  1089: 82 17 58                 a0 = u64 [sp + 0x58]
  1092: c8 67 07                 a0 = a0 + s1
  1095: 7c 78                    a1 = u8 [a0]
  1097: 51 08 2b                 jump @100 if a1 == 0
      :                          @96
  1100: 33 08                    a1 = 0
  1102: 33 05                    s0 = 0
  1104: 28 9f 00                 jump @113
      :                          @97
  1107: 33 06                    s1 = 0
  1109: 56 05 ec                 jump @95 if s0 >u 0
      :                          @98
  1112: 33 08                    a1 = 0
  1114: 33 05 00 00 01           s0 = 0x10000
  1119: 01                       fallthrough
      :                          @99
  1120: 64 57                    a0 = s0
  1122: 82 10 00 02              ra = u64 [sp + 0x200]
  1126: 82 15 f8 01              s0 = u64 [sp + 0x1f8]
  1130: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
  1134: 95 11 08 02              sp = sp + 0x208
  1138: 32 00                    ret
      :                          @100
  1140: e4 65 08                 a1 = maxu(s0, s1)
  1143: c9 68 08                 a1 = a1 - s1
  1146: 95 75 01                 s0 = a0 + 0x1
  1149: 33 07 01                 a0 = 0x1
  1152: e4 78 07                 a0 = maxu(a1, a0)
  1155: 33 09 02                 a2 = 0x2
  1158: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1161: ae 98 09                 jump @102 if a1 >=u a2
      :                          @101
  1164: 33 06                    s1 = 0
  1166: 33 07                    a0 = 0
  1168: 28 52                    jump @112
      :                          @102
  1170: 7d 57                    a0 = i8 [s0]
  1172: 33 06 01                 s1 = 0x1
  1175: 59 07 37                 jump @109 if a0 >=s 0
      :                          @103
  1178: 84 77 ff 00              a0 = a0 & 0xff
  1182: 33 06 02                 s1 = 0x2
  1185: 53 27 c0 00 2d           jump @109 if a0 <u 192
      :                          @104
  1190: 33 06 03                 s1 = 0x3
  1193: 53 27 e0 00 25           jump @109 if a0 <u 224
      :                          @105
  1198: 33 06 04                 s1 = 0x4
  1201: 53 27 f0 00 1d           jump @109 if a0 <u 240
      :                          @106
  1206: 33 06 05                 s1 = 0x5
  1209: 53 27 f8 00 15           jump @109 if a0 <u 248
      :                          @107
  1214: 33 06 06                 s1 = 0x6
  1217: 53 27 fc 00 0d           jump @109 if a0 <u 252
      :                          @108
  1222: 88 77 fe 00              a0 = a0 <u 0xfe
  1226: 9a 76 08                 s1 = 0x8 - a0
  1229: 01                       fallthrough
      :                          @109
  1230: 7b 1a 58                 u64 [sp + 0x58] = a3
  1233: ac 6a d3 05              jump @175 if a3 <u s1
      :                          @110
  1237: 64 57                    a0 = s0
  1239: 64 68                    a1 = s1
  1241: 50 10 16 23 15           ra = 22, jump @486
      :                          @111 [@dyn 11]
  1246: 82 1a 58                 a3 = u64 [sp + 0x58]
  1249: 01                       fallthrough
      :                          @112
  1250: c8 65 05                 s0 = s0 + s1
  1253: e4 6a 08                 a1 = maxu(a3, s1)
  1256: c9 68 08                 a1 = a1 - s1
  1259: e6 78 08                 a1 = minu(a1, a0)
  1262: 01                       fallthrough
      :                          @113
  1263: 48 11 68                 u32 [sp + 104] = 0
  1266: 49 11 60                 u64 [sp + 96] = 0
  1269: 48 11 78                 u32 [sp + 120] = 0
  1272: 49 11 70                 u64 [sp + 112] = 0
  1275: 46 11 7f                 u8 [sp + 127] = 0
  1278: 48 21 88 00              u32 [sp + 136] = 0
  1282: 49 21 80 00              u64 [sp + 128] = 0
  1286: 80 57                    a0 = u32 [s0]
  1288: c8 58 08                 a1 = a1 + s0
  1291: 7b 17 90 00              u64 [sp + 0x90] = a0
  1295: 80 88 fc                 a1 = u32 [a1 + 0xfffffffffffffffc]
  1298: 7b 18 98 00              u64 [sp + 0x98] = a1
  1302: 95 18 7f                 a1 = sp + 0x7f
  1305: 33 09 01                 a2 = 0x1
  1308: 95 1a 60                 a3 = sp + 0x60
  1311: 33 0c 0c                 a5 = 0xc
  1314: 33 0b                    a4 = 0
  1316: 0a 02                    ecalli 2 // 'read'
  1318: 82 17 98 00              a0 = u64 [sp + 0x98]
  1322: 95 18 7f                 a1 = sp + 0x7f
  1325: 33 09 01                 a2 = 0x1
  1328: 95 1a 70                 a3 = sp + 0x70
  1331: 33 0c 0c                 a5 = 0xc
  1334: 33 0b                    a4 = 0
  1336: 0a 02                    ecalli 2 // 'read'
  1338: 81 17 64                 a0 = i32 [sp + 0x64]
  1341: 33 05 ff ff fe           s0 = 0xfffffffffffeffff
  1346: 7b 15 48                 u64 [sp + 0x48] = s0
  1349: 81 18 74                 a1 = i32 [sp + 0x74]
  1352: 81 19 60                 a2 = i32 [sp + 0x60]
  1355: 7a 17 a0 00              u32 [sp + 0xa0] = a0
  1359: 81 17 68                 a0 = i32 [sp + 0x68]
  1362: 7b 17 58                 u64 [sp + 0x58] = a0
  1365: 7a 18 a4 00              u32 [sp + 0xa4] = a1
  1369: 81 17 78                 a0 = i32 [sp + 0x78]
  1372: 7b 17 50                 u64 [sp + 0x50] = a0
  1375: 7a 19 a8 00              u32 [sp + 0xa8] = a2
  1379: 95 19 a8 00              a2 = sp + 0xa8
  1383: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1387: 33 08 06                 a1 = 0x6
  1390: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1394: 95 17 90 00              a0 = sp + 0x90
  1398: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1402: 33 07 0a                 a0 = 0xa
  1405: 7b 17 38                 u64 [sp + 0x38] = a0
  1408: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1412: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1416: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1420: 95 17 a0 00              a0 = sp + 0xa0
  1424: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1428: 7b 18 40                 u64 [sp + 0x40] = a1
  1431: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1435: 33 07 30 00 01           a0 = 0x10030
  1440: 7b 17 58 01              u64 [sp + 0x158] = a0
  1444: 49 21 60 01 04           u64 [sp + 352] = 0x4
  1449: 49 21 78 01              u64 [sp + 376] = 0
  1453: 95 18 b0 00              a1 = sp + 0xb0
  1457: 7b 18 68 01              u64 [sp + 0x168] = a1
  1461: 49 21 70 01 04           u64 [sp + 368] = 0x4
  1466: 95 17 c0 01              a0 = sp + 0x1c0
  1470: 95 18 58 01              a1 = sp + 0x158
  1474: 50 10 18 ae 08           ra = 24, jump @249
      :                          @114 [@dyn 12]
  1479: 82 15 c8 01              s0 = u64 [sp + 0x1c8]
  1483: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
  1487: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  1491: 33 07 02                 a0 = 0x2
  1494: 33 08                    a1 = 0
  1496: 33 09                    a2 = 0
  1498: 64 5a                    a3 = s0
  1500: 33 00 1a                 ra = 0x1a
  1503: 0a 64                    ecalli 100 // 'log'
  1505: 01                       fallthrough
      :                          @115 [@dyn 13]
  1506: 82 17 48                 a0 = u64 [sp + 0x48]
  1509: c8 67 07                 a0 = a0 + s1
  1512: 53 37 00 00 ff 27        jump @121 if a0 <u 4294901760
      :                          @116
  1518: 33 07 40 00 03           a0 = 0x30040
  1523: 95 77 00 00 01           a0 = a0 + 0x10000
  1528: 01                       fallthrough
      :                          @117
  1529: 82 78                    a1 = u64 [a0]
  1531: c9 87 09                 a2 = a0 - a1
  1534: ab 59 11                 jump @121 if a2 != s0
      :                          @118
  1537: c9 68 09                 a2 = a1 - s1
  1540: 01                       fallthrough
      :                          @119
  1541: 82 7a                    a3 = u64 [a0]
  1543: ab 8a f2                 jump @117 if a3 != a1
      :                          @120
  1546: 7b 79                    u64 [a0] = a2
  1548: 33 0b                    a4 = 0
  1550: 01                       fallthrough
      :                          @121
  1551: 95 19 a8 00              a2 = sp + 0xa8
  1555: 7b 19 b0 00              u64 [sp + 0xb0] = a2
  1559: 82 18 40                 a1 = u64 [sp + 0x40]
  1562: 7b 18 b8 00              u64 [sp + 0xb8] = a1
  1566: 95 17 98 00              a0 = sp + 0x98
  1570: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1574: 82 17 38                 a0 = u64 [sp + 0x38]
  1577: 7b 17 c8 00              u64 [sp + 0xc8] = a0
  1581: 7b 19 d0 00              u64 [sp + 0xd0] = a2
  1585: 7b 18 d8 00              u64 [sp + 0xd8] = a1
  1589: 95 17 a4 00              a0 = sp + 0xa4
  1593: 7b 17 e0 00              u64 [sp + 0xe0] = a0
  1597: 7b 18 e8 00              u64 [sp + 0xe8] = a1
  1601: 33 07 80 00 01           a0 = 0x10080
  1606: 7b 17 58 01              u64 [sp + 0x158] = a0
  1610: 49 21 60 01 04           u64 [sp + 352] = 0x4
  1615: 49 21 78 01              u64 [sp + 376] = 0
  1619: 95 18 b0 00              a1 = sp + 0xb0
  1623: 7b 18 68 01              u64 [sp + 0x168] = a1
  1627: 49 21 70 01 04           u64 [sp + 368] = 0x4
  1632: 95 17 c0 01              a0 = sp + 0x1c0
  1636: 95 18 58 01              a1 = sp + 0x158
  1640: 50 10 1c 08 08           ra = 28, jump @249
      :                          @122 [@dyn 14]
  1645: 82 15 c8 01              s0 = u64 [sp + 0x1c8]
  1649: 82 1b d0 01              a4 = u64 [sp + 0x1d0]
  1653: 82 16 c0 01              s1 = u64 [sp + 0x1c0]
  1657: 33 07 02                 a0 = 0x2
  1660: 33 08                    a1 = 0
  1662: 33 09                    a2 = 0
  1664: 64 5a                    a3 = s0
  1666: 33 00 1e                 ra = 0x1e
  1669: 0a 64                    ecalli 100 // 'log'
  1671: 01                       fallthrough
      :                          @123 [@dyn 15]
  1672: 82 17 48                 a0 = u64 [sp + 0x48]
  1675: c8 67 07                 a0 = a0 + s1
  1678: 53 37 00 00 ff 25        jump @129 if a0 <u 4294901760
      :                          @124
  1684: 33 07 40 00 03           a0 = 0x30040
  1689: 95 77 00 00 01           a0 = a0 + 0x10000
  1694: 01                       fallthrough
      :                          @125
  1695: 82 78                    a1 = u64 [a0]
  1697: c9 87 09                 a2 = a0 - a1
  1700: ab 59 0f                 jump @129 if a2 != s0
      :                          @126
  1703: c9 68 09                 a2 = a1 - s1
  1706: 01                       fallthrough
      :                          @127
  1707: 82 7a                    a3 = u64 [a0]
  1709: ab 8a f2                 jump @125 if a3 != a1
      :                          @128
  1712: 7b 79                    u64 [a0] = a2
  1714: 01                       fallthrough
      :                          @129
  1715: 81 17 a0 00              a0 = i32 [sp + 0xa0]
  1719: 81 18 a4 00              a1 = i32 [sp + 0xa4]
  1723: be 78 05                 i32 s0 = a1 + a0
  1726: 7a 15 ac 00              u32 [sp + 0xac] = s0
  1730: 82 17 58                 a0 = u64 [sp + 0x58]
  1733: 82 16 50                 s1 = u64 [sp + 0x50]
  1736: be 76 06                 i32 s1 = s1 + a0
  1739: 95 17 b0 00              a0 = sp + 0xb0
  1743: 33 09 80 00              a2 = 0x80
  1747: 33 08                    a1 = 0
  1749: 50 10 20 c1 0a           ra = 32, jump @317
      :                          @130 [@dyn 16]
  1754: 80 17 a8 00              a0 = u32 [sp + 0xa8]
  1758: 7b 17 30 01              u64 [sp + 0x130] = a0
  1762: 97 78 01                 a1 = a0 << 0x1
  1765: 95 88 01                 a1 = a1 + 0x1
  1768: 97 88 20                 a1 = a1 << 0x20
  1771: 98 88 20                 a1 = a1 >> 0x20
  1774: 7b 18 38 01              u64 [sp + 0x138] = a1
  1778: 49 21 40 01 40 9c 00     u64 [sp + 320] = 0x9c40
  1785: 48 21 48 01              u32 [sp + 328] = 0
  1789: 51 07 3b 02              jump @154 if a0 == 0
      :                          @131
  1793: 7b 16                    u64 [sp] = s1
  1795: 7b 15 08                 u64 [sp + 0x8] = s0
  1798: 33 05                    s0 = 0
  1800: 33 0a                    a3 = 0
  1802: 14 08 ab aa aa aa 00 00 00 00 a1 = 0xaaaaaaab
  1812: ca 87 08                 a1 = a0 * a1
  1815: 98 88 21                 a1 = a1 >> 0x21
  1818: 97 89 01                 a2 = a1 << 0x1
  1821: bf 87 08                 i32 a1 = a0 - a1
  1824: bf 98 08                 i32 a1 = a1 - a2
  1827: 83 89 ff                 i32 a2 = a1 + 0xffffffffffffffff
  1830: 7b 19 20                 u64 [sp + 0x20] = a2
  1833: 86 88 02                 a1 = a1 | 0x2
  1836: 7b 18 18                 u64 [sp + 0x18] = a1
  1839: 33 08 06                 a1 = 0x6
  1842: 7b 18 38                 u64 [sp + 0x38] = a1
  1845: 33 08 0a                 a1 = 0xa
  1848: 7b 18 30                 u64 [sp + 0x30] = a1
  1851: 33 06 40 00 03           s1 = 0x30040
  1856: 95 66 00 00 01           s1 = s1 + 0x10000
  1861: 33 08 60 01 01           a1 = 0x10160
  1866: 7b 18 28                 u64 [sp + 0x28] = a1
  1869: 83 77                    i32 a0 = a0 + 0
  1871: 7b 17 10                 u64 [sp + 0x10] = a0
  1874: 28 13                    jump @134
      :                          @132
  1876: 82 15 58                 s0 = u64 [sp + 0x58]
  1879: 82 1a 50                 a3 = u64 [sp + 0x50]
  1882: 01                       fallthrough
      :                          @133
  1883: 83 aa 01                 i32 a3 = a3 + 0x1
  1886: 82 17 10                 a0 = u64 [sp + 0x10]
  1889: aa 7a cd 01              jump @153 if a3 == a0
      :                          @134
  1893: 7a 1a 4c 01              u32 [sp + 0x14c] = a3
  1897: 82 17 18                 a0 = u64 [sp + 0x18]
  1900: 7b 1a 50                 u64 [sp + 0x50] = a3
  1903: 52 17 02 e0 00           jump @143 if a0 != 2
      :                          @135
  1908: 82 17 90 00              a0 = u64 [sp + 0x90]
  1912: 82 18 30 01              a1 = u64 [sp + 0x130]
  1916: 82 19 40 01              a2 = u64 [sp + 0x140]
  1920: 95 1a b0 00              a3 = sp + 0xb0
  1924: 0a 0b                    ecalli 11 // 'transfer'
  1926: 7b 17 50 01              u64 [sp + 0x150] = a0
  1930: 83 55 01                 i32 s0 = s0 + 0x1
  1933: 7b 15 58                 u64 [sp + 0x58] = s0
  1936: 7a 15 48 01              u32 [sp + 0x148] = s0
  1940: 95 17 4c 01              a0 = sp + 0x14c
  1944: 7b 17 58 01              u64 [sp + 0x158] = a0
  1948: 82 17 38                 a0 = u64 [sp + 0x38]
  1951: 7b 17 60 01              u64 [sp + 0x160] = a0
  1955: 95 17 90 00              a0 = sp + 0x90
  1959: 7b 17 68 01              u64 [sp + 0x168] = a0
  1963: 82 17 30                 a0 = u64 [sp + 0x30]
  1966: 7b 17 70 01              u64 [sp + 0x170] = a0
  1970: 95 18 30 01              a1 = sp + 0x130
  1974: 7b 18 78 01              u64 [sp + 0x178] = a1
  1978: 7b 17 80 01              u64 [sp + 0x180] = a0
  1982: 95 18 40 01              a1 = sp + 0x140
  1986: 7b 18 88 01              u64 [sp + 0x188] = a1
  1990: 7b 17 90 01              u64 [sp + 0x190] = a0
  1994: 95 18 50 01              a1 = sp + 0x150
  1998: 7b 18 98 01              u64 [sp + 0x198] = a1
  2002: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2006: 82 17 28                 a0 = u64 [sp + 0x28]
  2009: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2013: 49 21 c8 01 05           u64 [sp + 456] = 0x5
  2018: 49 21 e0 01              u64 [sp + 480] = 0
  2022: 95 18 58 01              a1 = sp + 0x158
  2026: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2030: 49 21 d8 01 05           u64 [sp + 472] = 0x5
  2035: 95 17 a8 01              a0 = sp + 0x1a8
  2039: 95 18 c0 01              a1 = sp + 0x1c0
  2043: 50 10 22 75 06           ra = 34, jump @249
      :                          @136 [@dyn 17]
  2048: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2052: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2056: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  2060: 7b 17 40                 u64 [sp + 0x40] = a0
  2063: 33 07 02                 a0 = 0x2
  2066: 33 08                    a1 = 0
  2068: 33 09                    a2 = 0
  2070: 64 5a                    a3 = s0
  2072: 33 00 24                 ra = 0x24
  2075: 0a 64                    ecalli 100 // 'log'
  2077: 01                       fallthrough
      :                          @137 [@dyn 18]
  2078: 82 1b 40                 a4 = u64 [sp + 0x40]
  2081: 82 17 48                 a0 = u64 [sp + 0x48]
  2084: c8 b7 07                 a0 = a0 + a4
  2087: 53 37 00 00 ff 21        jump @142 if a0 <u 4294901760
      :                          @138
  2093: 82 67                    a0 = u64 [s1]
  2095: c9 76 08                 a1 = s1 - a0
  2098: ab 58 16                 jump @142 if a1 != s0
      :                          @139
  2101: c9 b7 08                 a1 = a0 - a4
  2104: 01                       fallthrough
      :                          @140
  2105: 82 69                    a2 = u64 [s1]
  2107: ab 79 f2                 jump @138 if a2 != a0
      :                          @141
  2110: 7b 68                    u64 [s1] = a1
  2112: 82 15 58                 s0 = u64 [sp + 0x58]
  2115: 82 1a 50                 a3 = u64 [sp + 0x50]
  2118: 28 09                    jump @143
      :                          @142
  2120: 82 15 58                 s0 = u64 [sp + 0x58]
  2123: 82 1a 50                 a3 = u64 [sp + 0x50]
  2126: 01                       fallthrough
      :                          @143
  2127: 82 17 20                 a0 = u64 [sp + 0x20]
  2130: 55 17 02 09 ff           jump @133 if a0 >=u 2
      :                          @144
  2135: 82 17 98 00              a0 = u64 [sp + 0x98]
  2139: 82 18 38 01              a1 = u64 [sp + 0x138]
  2143: 82 19 40 01              a2 = u64 [sp + 0x140]
  2147: 95 1a b0 00              a3 = sp + 0xb0
  2151: 0a 0b                    ecalli 11 // 'transfer'
  2153: 7b 17 50 01              u64 [sp + 0x150] = a0
  2157: 83 55 01                 i32 s0 = s0 + 0x1
  2160: 7b 15 58                 u64 [sp + 0x58] = s0
  2163: 7a 15 48 01              u32 [sp + 0x148] = s0
  2167: 95 17 4c 01              a0 = sp + 0x14c
  2171: 7b 17 58 01              u64 [sp + 0x158] = a0
  2175: 82 17 38                 a0 = u64 [sp + 0x38]
  2178: 7b 17 60 01              u64 [sp + 0x160] = a0
  2182: 95 17 98 00              a0 = sp + 0x98
  2186: 7b 17 68 01              u64 [sp + 0x168] = a0
  2190: 82 17 30                 a0 = u64 [sp + 0x30]
  2193: 7b 17 70 01              u64 [sp + 0x170] = a0
  2197: 95 18 38 01              a1 = sp + 0x138
  2201: 7b 18 78 01              u64 [sp + 0x178] = a1
  2205: 7b 17 80 01              u64 [sp + 0x180] = a0
  2209: 95 18 40 01              a1 = sp + 0x140
  2213: 7b 18 88 01              u64 [sp + 0x188] = a1
  2217: 7b 17 90 01              u64 [sp + 0x190] = a0
  2221: 95 18 50 01              a1 = sp + 0x150
  2225: 7b 18 98 01              u64 [sp + 0x198] = a1
  2229: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2233: 82 17 28                 a0 = u64 [sp + 0x28]
  2236: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2240: 49 21 c8 01 05           u64 [sp + 456] = 0x5
  2245: 49 21 e0 01              u64 [sp + 480] = 0
  2249: 95 18 58 01              a1 = sp + 0x158
  2253: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2257: 49 21 d8 01 05           u64 [sp + 472] = 0x5
  2262: 95 17 a8 01              a0 = sp + 0x1a8
  2266: 95 18 c0 01              a1 = sp + 0x1c0
  2270: 50 10 26 92 05           ra = 38, jump @249
      :                          @145 [@dyn 19]
  2275: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2279: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2283: 82 17 a8 01              a0 = u64 [sp + 0x1a8]
  2287: 7b 17 40                 u64 [sp + 0x40] = a0
  2290: 33 07 02                 a0 = 0x2
  2293: 33 08                    a1 = 0
  2295: 33 09                    a2 = 0
  2297: 64 5a                    a3 = s0
  2299: 33 00 28                 ra = 0x28
  2302: 0a 64                    ecalli 100 // 'log'
  2304: 01                       fallthrough
      :                          @146 [@dyn 20]
  2305: 82 1b 40                 a4 = u64 [sp + 0x40]
  2308: 82 17 48                 a0 = u64 [sp + 0x48]
  2311: c8 b7 07                 a0 = a0 + a4
  2314: 53 37 00 00 ff 4a fe     jump @132 if a0 <u 4294901760
      :                          @147
  2321: 82 67                    a0 = u64 [s1]
  2323: c9 76 08                 a1 = s1 - a0
  2326: ab 58 3e fe              jump @132 if a1 != s0
      :                          @148
  2330: c9 b7 08                 a1 = a0 - a4
  2333: 01                       fallthrough
      :                          @149
  2334: 82 69                    a2 = u64 [s1]
  2336: ab 79 f1                 jump @147 if a2 != a0
      :                          @150
  2339: 7b 68                    u64 [s1] = a1
  2341: 33 0a                    a3 = 0
  2343: 01                       fallthrough
      :                          @151
  2344: ab 79 e9                 jump @147 if a2 != a0
      :                          @152
  2347: 28 29 fe                 jump @132
      :                          @153
  2350: 81 17 a8 00              a0 = i32 [sp + 0xa8]
  2354: 82 15 08                 s0 = u64 [sp + 0x8]
  2357: 82 16                    s1 = u64 [sp]
  2359: 01                       fallthrough
      :                          @154
  2360: 7a 17 80 00              u32 [sp + 0x80] = a0
  2364: 7a 15 84 00              u32 [sp + 0x84] = s0
  2368: 7a 16 88 00              u32 [sp + 0x88] = s1
  2372: 95 17 a8 00              a0 = sp + 0xa8
  2376: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2380: 33 07 06                 a0 = 0x6
  2383: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2387: 95 18 ac 00              a1 = sp + 0xac
  2391: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2395: 7b 17 58                 u64 [sp + 0x58] = a0
  2398: 7b 17 d8 01              u64 [sp + 0x1d8] = a0
  2402: 33 07 c0 00 01           a0 = 0x100c0
  2407: 7b 17 58 01              u64 [sp + 0x158] = a0
  2411: 49 21 60 01 02           u64 [sp + 352] = 0x2
  2416: 49 21 78 01              u64 [sp + 376] = 0
  2420: 95 18 c0 01              a1 = sp + 0x1c0
  2424: 7b 18 68 01              u64 [sp + 0x168] = a1
  2428: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2433: 95 17 a8 01              a0 = sp + 0x1a8
  2437: 95 18 58 01              a1 = sp + 0x158
  2441: 50 10 2a e7 04           ra = 42, jump @249
      :                          @155 [@dyn 21]
  2446: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2450: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2454: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  2458: 33 07 02                 a0 = 0x2
  2461: 33 08                    a1 = 0
  2463: 33 09                    a2 = 0
  2465: 64 5a                    a3 = s0
  2467: 33 00 2c                 ra = 0x2c
  2470: 0a 64                    ecalli 100 // 'log'
  2472: 01                       fallthrough
      :                          @156 [@dyn 22]
  2473: 82 17 48                 a0 = u64 [sp + 0x48]
  2476: c8 67 07                 a0 = a0 + s1
  2479: 53 37 00 00 ff 25        jump @162 if a0 <u 4294901760
      :                          @157
  2485: 33 07 40 00 03           a0 = 0x30040
  2490: 95 77 00 00 01           a0 = a0 + 0x10000
  2495: 01                       fallthrough
      :                          @158
  2496: 82 78                    a1 = u64 [a0]
  2498: c9 87 09                 a2 = a0 - a1
  2501: ab 59 0f                 jump @162 if a2 != s0
      :                          @159
  2504: c9 68 09                 a2 = a1 - s1
  2507: 01                       fallthrough
      :                          @160
  2508: 82 7a                    a3 = u64 [a0]
  2510: ab 8a f2                 jump @158 if a3 != a1
      :                          @161
  2513: 7b 79                    u64 [a0] = a2
  2515: 01                       fallthrough
      :                          @162
  2516: 95 17 7f                 a0 = sp + 0x7f
  2519: 33 08 01                 a1 = 0x1
  2522: 95 19 80 00              a2 = sp + 0x80
  2526: 33 0a 0c                 a3 = 0xc
  2529: 0a 03                    ecalli 3 // 'write'
  2531: 95 17 a8 00              a0 = sp + 0xa8
  2535: 7b 17 58 01              u64 [sp + 0x158] = a0
  2539: 82 17 58                 a0 = u64 [sp + 0x58]
  2542: 7b 17 60 01              u64 [sp + 0x160] = a0
  2546: 95 18 ac 00              a1 = sp + 0xac
  2550: 7b 18 68 01              u64 [sp + 0x168] = a1
  2554: 7b 17 70 01              u64 [sp + 0x170] = a0
  2558: 95 17 48 01              a0 = sp + 0x148
  2562: 7b 17 78 01              u64 [sp + 0x178] = a0
  2566: 33 07 02                 a0 = 0x2
  2569: 7b 17 80 01              u64 [sp + 0x180] = a0
  2573: 33 07 00 01 01           a0 = 0x10100
  2578: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2582: 49 21 c8 01 03           u64 [sp + 456] = 0x3
  2587: 49 21 e0 01              u64 [sp + 480] = 0
  2591: 95 18 58 01              a1 = sp + 0x158
  2595: 7b 18 d0 01              u64 [sp + 0x1d0] = a1
  2599: 49 21 d8 01 03           u64 [sp + 472] = 0x3
  2604: 95 17 a8 01              a0 = sp + 0x1a8
  2608: 95 18 c0 01              a1 = sp + 0x1c0
  2612: 50 10 2e 3c 04           ra = 46, jump @249
      :                          @163 [@dyn 23]
  2617: 82 15 b0 01              s0 = u64 [sp + 0x1b0]
  2621: 82 1b b8 01              a4 = u64 [sp + 0x1b8]
  2625: 82 16 a8 01              s1 = u64 [sp + 0x1a8]
  2629: 33 07 02                 a0 = 0x2
  2632: 33 08                    a1 = 0
  2634: 33 09                    a2 = 0
  2636: 64 5a                    a3 = s0
  2638: 33 00 30                 ra = 0x30
  2641: 0a 64                    ecalli 100 // 'log'
  2643: 01                       fallthrough
      :                          @164 [@dyn 24]
  2644: 82 17 48                 a0 = u64 [sp + 0x48]
  2647: c8 67 07                 a0 = a0 + s1
  2650: 53 37 00 00 ff 27        jump @170 if a0 <u 4294901760
      :                          @165
  2656: 33 07 40 00 03           a0 = 0x30040
  2661: 95 77 00 00 01           a0 = a0 + 0x10000
  2666: 01                       fallthrough
      :                          @166
  2667: 82 78                    a1 = u64 [a0]
  2669: c9 87 09                 a2 = a0 - a1
  2672: ab 59 11                 jump @170 if a2 != s0
      :                          @167
  2675: c9 68 09                 a2 = a1 - s1
  2678: 01                       fallthrough
      :                          @168
  2679: 82 7a                    a3 = u64 [a0]
  2681: ab 8a f2                 jump @166 if a3 != a1
      :                          @169
  2684: 7b 79                    u64 [a0] = a2
  2686: 33 0b                    a4 = 0
  2688: 01                       fallthrough
      :                          @170
  2689: 33 05 11 00 03           s0 = 0x30011
  2694: 95 18 80 00              a1 = sp + 0x80
  2698: 33 09 0c                 a2 = 0xc
  2701: 33 07 11 00 03           a0 = 0x30011
  2706: 50 10 32 52 06           ra = 50, jump @299
      :                          @171 [@dyn 25]
  2711: 64 57                    a0 = s0
  2713: 0a 10                    ecalli 16 // 'oyield'
  2715: 33 08 20                 a1 = 0x20
  2718: 28 c2 f9                 jump @99
      :                          @172
  2721: 00                       trap
      :                          @173
  2722: 00                       trap
      :                          @174
  2723: 00                       trap
      :                          @175
  2724: 00                       trap
      :                          @176 [export #2: 'on_transfer']
  2725: 95 11 e0 fe              sp = sp + 0xfffffffffffffee0
  2729: 7b 10 18 01              u64 [sp + 0x118] = ra
  2733: 7b 15 10 01              u64 [sp + 0x110] = s0
  2737: 7b 16 08 01              u64 [sp + 0x108] = s1
  2741: 49 11 08 ff ff fe        u64 [sp + 8] = 0xfffffffffffeffff
  2747: 0a                       ecalli 0 // 'gas'
  2748: 7b 17 10                 u64 [sp + 0x10] = a0
  2751: 7b 17 18                 u64 [sp + 0x18] = a0
  2754: 46 11 27 04              u8 [sp + 39] = 0x4
  2758: 7b 17 28                 u64 [sp + 0x28] = a0
  2761: 95 17 27                 a0 = sp + 0x27
  2764: 33 08 01                 a1 = 0x1
  2767: 95 19 28                 a2 = sp + 0x28
  2770: 33 0a 08                 a3 = 0x8
  2773: 0a 03                    ecalli 3 // 'write'
  2775: 95 17 27                 a0 = sp + 0x27
  2778: 7b 17 78                 u64 [sp + 0x78] = a0
  2781: 33 07 84 00              a0 = 0x84
  2785: 7b 17 80 00              u64 [sp + 0x80] = a0
  2789: 95 17 18                 a0 = sp + 0x18
  2792: 7b 17 88 00              u64 [sp + 0x88] = a0
  2796: 49 21 98 00 02           u64 [sp + 152] = 0x2
  2801: 49 21 a8 00 02           u64 [sp + 168] = 0x2
  2806: 49 21 b8 00              u64 [sp + 184] = 0
  2810: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2820: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  2824: 46 21 c8 00 03           u8 [sp + 200] = 0x3
  2829: 49 21 d0 00 02           u64 [sp + 208] = 0x2
  2834: 49 21 e0 00 02           u64 [sp + 224] = 0x2
  2839: 49 21 f0 00 01           u64 [sp + 240] = 0x1
  2844: 7b 17 f8 00              u64 [sp + 0xf8] = a0
  2848: 33 07 0a                 a0 = 0xa
  2851: 7b 17                    u64 [sp] = a0
  2853: 7b 17 90 00              u64 [sp + 0x90] = a0
  2857: 46 21 00 01 03           u8 [sp + 256] = 0x3
  2862: 33 07 58 03 01           a0 = 0x10358
  2867: 7b 17 48                 u64 [sp + 0x48] = a0
  2870: 49 11 50 02              u64 [sp + 80] = 0x2
  2874: 95 17 98 00              a0 = sp + 0x98
  2878: 7b 17 68                 u64 [sp + 0x68] = a0
  2881: 49 11 70 02              u64 [sp + 112] = 0x2
  2885: 95 17 78                 a0 = sp + 0x78
  2888: 7b 17 58                 u64 [sp + 0x58] = a0
  2891: 49 11 60 02              u64 [sp + 96] = 0x2
  2895: 95 17 30                 a0 = sp + 0x30
  2898: 95 18 48                 a1 = sp + 0x48
  2901: 50 10 34 1b 03           ra = 52, jump @249
      :                          @177 [@dyn 26]
  2906: 82 15 38                 s0 = u64 [sp + 0x38]
  2909: 82 1b 40                 a4 = u64 [sp + 0x40]
  2912: 82 16 30                 s1 = u64 [sp + 0x30]
  2915: 33 07 02                 a0 = 0x2
  2918: 33 08                    a1 = 0
  2920: 33 09                    a2 = 0
  2922: 64 5a                    a3 = s0
  2924: 33 00 36                 ra = 0x36
  2927: 0a 64                    ecalli 100 // 'log'
  2929: 01                       fallthrough
      :                          @178 [@dyn 27]
  2930: 82 17 08                 a0 = u64 [sp + 0x8]
  2933: c8 67 07                 a0 = a0 + s1
  2936: 53 37 00 00 ff 27        jump @184 if a0 <u 4294901760
      :                          @179
  2942: 33 07 40 00 03           a0 = 0x30040
  2947: 95 77 00 00 01           a0 = a0 + 0x10000
  2952: 01                       fallthrough
      :                          @180
  2953: 82 78                    a1 = u64 [a0]
  2955: c9 87 09                 a2 = a0 - a1
  2958: ab 59 11                 jump @184 if a2 != s0
      :                          @181
  2961: c9 68 09                 a2 = a1 - s1
  2964: 01                       fallthrough
      :                          @182
  2965: 82 7a                    a3 = u64 [a0]
  2967: ab 8a f2                 jump @180 if a3 != a1
      :                          @183
  2970: 7b 79                    u64 [a0] = a2
  2972: 33 0b                    a4 = 0
  2974: 01                       fallthrough
      :                          @184
  2975: 95 17 10                 a0 = sp + 0x10
  2978: 7b 17 78                 u64 [sp + 0x78] = a0
  2981: 82 17                    a0 = u64 [sp]
  2983: 7b 17 80 00              u64 [sp + 0x80] = a0
  2987: 33 07 e8 01 01           a0 = 0x101e8
  2992: 7b 17 98 00              u64 [sp + 0x98] = a0
  2996: 49 21 a0 00 02           u64 [sp + 160] = 0x2
  3001: 49 21 b8 00              u64 [sp + 184] = 0
  3005: 95 17 78                 a0 = sp + 0x78
  3008: 7b 17 a8 00              u64 [sp + 0xa8] = a0
  3012: 49 21 b0 00 01           u64 [sp + 176] = 0x1
  3017: 95 17 48                 a0 = sp + 0x48
  3020: 95 18 98 00              a1 = sp + 0x98
  3024: 50 10 38 a0 02           ra = 56, jump @249
      :                          @185 [@dyn 28]
  3029: 82 15 50                 s0 = u64 [sp + 0x50]
  3032: 82 1b 58                 a4 = u64 [sp + 0x58]
  3035: 82 16 48                 s1 = u64 [sp + 0x48]
  3038: 33 07 02                 a0 = 0x2
  3041: 33 08                    a1 = 0
  3043: 33 09                    a2 = 0
  3045: 64 5a                    a3 = s0
  3047: 33 00 3a                 ra = 0x3a
  3050: 0a 64                    ecalli 100 // 'log'
  3052: 01                       fallthrough
      :                          @186 [@dyn 29]
  3053: 82 17 08                 a0 = u64 [sp + 0x8]
  3056: c8 67 07                 a0 = a0 + s1
  3059: 53 37 00 00 ff 27        jump @192 if a0 <u 4294901760
      :                          @187
  3065: 33 07 40 00 03           a0 = 0x30040
  3070: 95 77 00 00 01           a0 = a0 + 0x10000
  3075: 01                       fallthrough
      :                          @188
  3076: 82 78                    a1 = u64 [a0]
  3078: c9 87 09                 a2 = a0 - a1
  3081: ab 59 11                 jump @192 if a2 != s0
      :                          @189
  3084: c9 68 09                 a2 = a1 - s1
  3087: 01                       fallthrough
      :                          @190
  3088: 82 7a                    a3 = u64 [a0]
  3090: ab 8a f2                 jump @188 if a3 != a1
      :                          @191
  3093: 7b 79                    u64 [a0] = a2
  3095: 33 0b                    a4 = 0
  3097: 01                       fallthrough
      :                          @192
  3098: 33 07 00 00 01           a0 = 0x10000
  3103: 33 08                    a1 = 0
  3105: 82 10 18 01              ra = u64 [sp + 0x118]
  3109: 82 15 10 01              s0 = u64 [sp + 0x110]
  3113: 82 16 08 01              s1 = u64 [sp + 0x108]
  3117: 95 11 20 01              sp = sp + 0x120
  3121: 32 00                    ret
      :                          @193
  3123: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3126: 7b 10 40                 u64 [sp + 0x40] = ra
  3129: 7b 15 38                 u64 [sp + 0x38] = s0
  3132: 7b 16 30                 u64 [sp + 0x30] = s1
  3135: c8 89 09                 a2 = a2 + a1
  3138: ac 89 52                 jump @201 if a2 <u a1
      :                          @194
  3141: 64 75                    s0 = a0
  3143: 82 77                    a0 = u64 [a0]
  3145: 97 78 01                 a1 = a0 << 0x1
  3148: 33 0a 08                 a3 = 0x8
  3151: e4 a9 09                 a2 = maxu(a2, a3)
  3154: e4 98 06                 s1 = maxu(a1, a2)
  3157: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3160: 98 88 3f                 a1 = a1 >> 0x3f
  3163: 51 07 12                 jump @196 if a0 == 0
      :                          @195
  3166: 82 59 08                 a2 = u64 [s0 + 0x8]
  3169: 7b 19 18                 u64 [sp + 0x18] = a2
  3172: 49 11 20 01              u64 [sp + 32] = 0x1
  3176: 7b 17 28                 u64 [sp + 0x28] = a0
  3179: 28 06                    jump @197
      :                          @196
  3181: 49 11 20                 u64 [sp + 32] = 0
  3184: 01                       fallthrough
      :                          @197
  3185: 64 17                    a0 = sp
  3187: 95 1a 18                 a3 = sp + 0x18
  3190: 64 69                    a2 = s1
  3192: 50 10 3c 32              ra = 60, jump @205
      :                          @198 [@dyn 30]
  3196: 82 18                    a1 = u64 [sp]
  3198: 82 17 08                 a0 = u64 [sp + 0x8]
  3201: 51 08 14                 jump @202 if a1 == 0
      :                          @199
  3204: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3214: aa 87 0d                 jump @203 if a0 == a1
      :                          @200
  3217: 52 07 18                 jump @204 if a0 != 0
      :                          @201
  3220: 00                       trap
      :                          @202
  3221: 7b 57 08                 u64 [s0 + 0x8] = a0
  3224: 7b 56                    u64 [s0] = s1
  3226: 01                       fallthrough
      :                          @203
  3227: 82 10 40                 ra = u64 [sp + 0x40]
  3230: 82 15 38                 s0 = u64 [sp + 0x38]
  3233: 82 16 30                 s1 = u64 [sp + 0x30]
  3236: 95 11 48                 sp = sp + 0x48
  3239: 32 00                    ret
      :                          @204
  3241: 00                       trap
      :                          @205
  3242: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3245: 7b 10 30                 u64 [sp + 0x30] = ra
  3248: 7b 15 28                 u64 [sp + 0x28] = s0
  3251: 7b 16 20                 u64 [sp + 0x20] = s1
  3254: 64 95                    s0 = a2
  3256: 64 72                    t0 = a0
  3258: 51 08 79                 jump @215 if a1 == 0
      :                          @206
  3261: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3264: 51 07 7c                 jump @216 if a0 == 0
      :                          @207
  3267: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3270: 51 09 aa 00              jump @223 if a2 == 0
      :                          @208
  3274: 82 a8                    a1 = u64 [a3]
  3276: 33 06 40 00 03           s1 = 0x30040
  3281: 33 03 00 00 01           t1 = 0x10000
  3286: c8 36 06                 s1 = s1 + t1
  3289: 01                       fallthrough
      :                          @209
  3290: 82 6a                    a3 = u64 [s1]
  3292: c8 5a 07                 a0 = a3 + s0
  3295: ac a7 cf 00              jump @229 if a0 <u a3
      :                          @210
  3299: 95 7b 01                 a4 = a0 + 0x1
  3302: 88 bc 01                 a5 = a4 <u 0x1
  3305: d8 b3 0b                 a4 = t1 <u a4
  3308: d4 cb 0b                 a4 = a4 | a5
  3311: 52 0b bf 00              jump @229 if a4 != 0
      :                          @211
  3315: 82 6b                    a4 = u64 [s1]
  3317: ab ab e5                 jump @209 if a4 != a3
      :                          @212
  3320: 7b 67                    u64 [s1] = a0
  3322: 33 0c                    a5 = 0
  3324: 7b 12 18                 u64 [sp + 0x18] = t0
  3327: 33 0a 40 00 03           a3 = 0x30040
  3332: 33 0b 00 00 01           a4 = 0x10000
  3337: 7b 1a                    u64 [sp] = a3
  3339: c8 ba 0a                 a3 = a3 + a4
  3342: c9 7a 07                 a0 = a3 - a0
  3345: 7b 17 10                 u64 [sp + 0x10] = a0
  3348: 7b 18 08                 u64 [sp + 0x8] = a1
  3351: 64 96                    s1 = a2
  3353: 50 10 3e cb 03           ra = 62, jump @299
      :                          @213 [@dyn 31]
  3358: 54 36 00 00 01 98 00     jump @230 if s1 <=u 65536
      :                          @214
  3365: 82 12 18                 t0 = u64 [sp + 0x18]
  3368: 82 18 10                 a1 = u64 [sp + 0x10]
  3371: 33 07                    a0 = 0
  3373: 7b 28 08                 u64 [t0 + 0x8] = a1
  3376: 28 b5 00                 jump @236
      :                          @215
  3379: 49 12 08                 u64 [t0 + 8] = 0
  3382: 33 07 01                 a0 = 0x1
  3385: 28 ac 00                 jump @236
      :                          @216
  3388: 33 09 40 00 03           a2 = 0x30040
  3393: 33 07 00 00 01           a0 = 0x10000
  3398: c8 79 09                 a2 = a2 + a0
  3401: 01                       fallthrough
      :                          @217
  3402: 82 9a                    a3 = u64 [a2]
  3404: c8 5a 08                 a1 = a3 + s0
  3407: ac a8 5f                 jump @229 if a1 <u a3
      :                          @218
  3410: 95 8b 01                 a4 = a1 + 0x1
  3413: 88 bc 01                 a5 = a4 <u 0x1
  3416: d8 b7 0b                 a4 = a0 <u a4
  3419: d4 cb 0b                 a4 = a4 | a5
  3422: 52 0b 50                 jump @229 if a4 != 0
      :                          @219
  3425: 82 9b                    a4 = u64 [a2]
  3427: ab ab e7                 jump @217 if a4 != a3
      :                          @220
  3430: 7b 98                    u64 [a2] = a1
  3432: 33 0c                    a5 = 0
  3434: 01                       fallthrough
      :                          @221
  3435: ab ab df                 jump @217 if a4 != a3
      :                          @222
  3438: 28 31                    jump @228
      :                          @223
  3440: 33 09 40 00 03           a2 = 0x30040
  3445: 33 07 00 00 01           a0 = 0x10000
  3450: c8 79 09                 a2 = a2 + a0
  3453: 01                       fallthrough
      :                          @224
  3454: 82 9a                    a3 = u64 [a2]
  3456: c8 5a 08                 a1 = a3 + s0
  3459: ac a8 2b                 jump @229 if a1 <u a3
      :                          @225
  3462: 95 8b 01                 a4 = a1 + 0x1
  3465: 88 bc 01                 a5 = a4 <u 0x1
  3468: d8 b7 0b                 a4 = a0 <u a4
  3471: d4 cb 0b                 a4 = a4 | a5
  3474: 52 0b 1c                 jump @229 if a4 != 0
      :                          @226
  3477: 82 9b                    a4 = u64 [a2]
  3479: ab ab e7                 jump @224 if a4 != a3
      :                          @227
  3482: 7b 98                    u64 [a2] = a1
  3484: 33 0c                    a5 = 0
  3486: 01                       fallthrough
      :                          @228
  3487: 33 07 40 00 04           a0 = 0x40040
  3492: c9 87 08                 a1 = a0 - a1
  3495: 33 07                    a0 = 0
  3497: 7b 28 08                 u64 [t0 + 0x8] = a1
  3500: 28 39                    jump @236
      :                          @229
  3502: 33 07 01                 a0 = 0x1
  3505: 7b 27 08                 u64 [t0 + 0x8] = a0
  3508: 28 31                    jump @236
      :                          @230
  3510: 64 6c                    a5 = s1
  3512: 82 17                    a0 = u64 [sp]
  3514: 95 77 00 00 01           a0 = a0 + 0x10000
  3519: 82 12 18                 t0 = u64 [sp + 0x18]
  3522: 82 16 08                 s1 = u64 [sp + 0x8]
  3525: 01                       fallthrough
      :                          @231
  3526: 82 78                    a1 = u64 [a0]
  3528: c9 87 09                 a2 = a0 - a1
  3531: ab 69 11                 jump @235 if a2 != s1
      :                          @232
  3534: c9 c8 09                 a2 = a1 - a5
  3537: 01                       fallthrough
      :                          @233
  3538: 82 7a                    a3 = u64 [a0]
  3540: ab 8a f2                 jump @231 if a3 != a1
      :                          @234
  3543: 7b 79                    u64 [a0] = a2
  3545: 33 0b                    a4 = 0
  3547: 01                       fallthrough
      :                          @235
  3548: 82 18 10                 a1 = u64 [sp + 0x10]
  3551: 33 07                    a0 = 0
  3553: 7b 28 08                 u64 [t0 + 0x8] = a1
  3556: 01                       fallthrough
      :                          @236
  3557: 7b 25 10                 u64 [t0 + 0x10] = s0
  3560: 7b 27                    u64 [t0] = a0
  3562: 82 10 30                 ra = u64 [sp + 0x30]
  3565: 82 15 28                 s0 = u64 [sp + 0x28]
  3568: 82 16 20                 s1 = u64 [sp + 0x20]
  3571: 95 11 38                 sp = sp + 0x38
  3574: 32 00                    ret
      :                          @237
  3576: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3579: 7b 10 40                 u64 [sp + 0x40] = ra
  3582: 7b 15 38                 u64 [sp + 0x38] = s0
  3585: 7b 16 30                 u64 [sp + 0x30] = s1
  3588: 95 88 01                 a1 = a1 + 0x1
  3591: 51 08 53                 jump @245 if a1 == 0
      :                          @238
  3594: 64 75                    s0 = a0
  3596: 82 77                    a0 = u64 [a0]
  3598: 97 79 01                 a2 = a0 << 0x1
  3601: 33 0a 08                 a3 = 0x8
  3604: e4 a8 08                 a1 = maxu(a1, a3)
  3607: e4 89 06                 s1 = maxu(a2, a1)
  3610: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3613: 98 88 3f                 a1 = a1 >> 0x3f
  3616: 51 07 12                 jump @240 if a0 == 0
      :                          @239
  3619: 82 59 08                 a2 = u64 [s0 + 0x8]
  3622: 7b 19 18                 u64 [sp + 0x18] = a2
  3625: 49 11 20 01              u64 [sp + 32] = 0x1
  3629: 7b 17 28                 u64 [sp + 0x28] = a0
  3632: 28 06                    jump @241
      :                          @240
  3634: 49 11 20                 u64 [sp + 32] = 0
  3637: 01                       fallthrough
      :                          @241
  3638: 64 17                    a0 = sp
  3640: 95 1a 18                 a3 = sp + 0x18
  3643: 64 69                    a2 = s1
  3645: 50 10 40 6d fe           ra = 64, jump @205
      :                          @242 [@dyn 32]
  3650: 82 18                    a1 = u64 [sp]
  3652: 82 17 08                 a0 = u64 [sp + 0x8]
  3655: 51 08 14                 jump @246 if a1 == 0
      :                          @243
  3658: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3668: aa 87 0d                 jump @247 if a0 == a1
      :                          @244
  3671: 52 07 18                 jump @248 if a0 != 0
      :                          @245
  3674: 00                       trap
      :                          @246
  3675: 7b 57 08                 u64 [s0 + 0x8] = a0
  3678: 7b 56                    u64 [s0] = s1
  3680: 01                       fallthrough
      :                          @247
  3681: 82 10 40                 ra = u64 [sp + 0x40]
  3684: 82 15 38                 s0 = u64 [sp + 0x38]
  3687: 82 16 30                 s1 = u64 [sp + 0x30]
  3690: 95 11 48                 sp = sp + 0x48
  3693: 32 00                    ret
      :                          @248
  3695: 00                       trap
      :                          @249
  3696: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3699: 7b 10 30                 u64 [sp + 0x30] = ra
  3702: 7b 15 28                 u64 [sp + 0x28] = s0
  3705: 7b 16 20                 u64 [sp + 0x20] = s1
  3708: 64 89                    a2 = a1
  3710: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3713: 64 75                    s0 = a0
  3715: 51 0a 35                 jump @254 if a3 == 0
      :                          @250
  3718: 82 98                    a1 = u64 [a2]
  3720: 33 07                    a0 = 0
  3722: 95 8b 08                 a4 = a1 + 0x8
  3725: 01                       fallthrough
      :                          @251
  3726: 82 bc                    a5 = u64 [a4]
  3728: c8 c7 07                 a0 = a0 + a5
  3731: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3734: 95 bb 10                 a4 = a4 + 0x10
  3737: 52 0a f5                 jump @251 if a3 != 0
      :                          @252
  3740: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3743: 51 0a 24                 jump @256 if a3 == 0
      :                          @253
  3746: 82 88 08                 a1 = u64 [a1 + 0x8]
  3749: 8e 88                    a1 = a1 >u 0
  3751: 88 7a 10                 a3 = a0 <u 0x10
  3754: 85 aa 01                 a3 = a3 ^ 0x1
  3757: d4 a8 08                 a1 = a1 | a3
  3760: 89 7a                    a3 = a0 <s 0
  3762: e0 a8 08                 a1 = a1 & ~a3
  3765: 52 08 0a                 jump @255 if a1 != 0
      :                          @254
  3768: 33 07                    a0 = 0
  3770: 33 08 01                 a1 = 0x1
  3773: 28 4a                    jump @264
      :                          @255
  3775: 97 77 01                 a0 = a0 << 0x1
  3778: 01                       fallthrough
      :                          @256
  3779: 51 07 40                 jump @263 if a0 == 0
      :                          @257
  3782: 57 07 78                 jump @269 if a0 <s 0
      :                          @258
  3785: 64 52                    t0 = s0
  3787: 33 0b 40 00 03           a4 = 0x30040
  3792: 33 08 00 00 01           a1 = 0x10000
  3797: c8 8b 0b                 a4 = a4 + a1
  3800: 01                       fallthrough
      :                          @259
  3801: 82 bc                    a5 = u64 [a4]
  3803: c8 7c 0a                 a3 = a5 + a0
  3806: ac ca 5e                 jump @267 if a3 <u a5
      :                          @260
  3809: 95 a5 01                 s0 = a3 + 0x1
  3812: 88 56 01                 s1 = s0 <u 0x1
  3815: d8 58 05                 s0 = a1 <u s0
  3818: d4 65 05                 s0 = s0 | s1
  3821: 52 05 4f                 jump @267 if s0 != 0
      :                          @261
  3824: 82 b6                    s1 = u64 [a4]
  3826: ab c6 e7                 jump @259 if s1 != a5
      :                          @262
  3829: 7b ba                    u64 [a4] = a3
  3831: 33 08 40 00 04           a1 = 0x40040
  3836: c9 a8 08                 a1 = a1 - a3
  3839: 64 25                    s0 = t0
  3841: 28 06                    jump @264
      :                          @263
  3843: 33 08 01                 a1 = 0x1
  3846: 01                       fallthrough
      :                          @264
  3847: 7b 17                    u64 [sp] = a0
  3849: 7b 18 08                 u64 [sp + 0x8] = a1
  3852: 49 11 10                 u64 [sp + 16] = 0
  3855: 33 08 08 02 01           a1 = 0x10208
  3860: 64 17                    a0 = sp
  3862: 50 10 42 84 06           ra = 66, jump @394
      :                          @265 [@dyn 33]
  3867: 52 07 22                 jump @268 if a0 != 0
      :                          @266
  3870: 82 17 10                 a0 = u64 [sp + 0x10]
  3873: 82 18 08                 a1 = u64 [sp + 0x8]
  3876: 82 19                    a2 = u64 [sp]
  3878: 7b 57 10                 u64 [s0 + 0x10] = a0
  3881: 7b 58 08                 u64 [s0 + 0x8] = a1
  3884: 7b 59                    u64 [s0] = a2
  3886: 82 10 30                 ra = u64 [sp + 0x30]
  3889: 82 15 28                 s0 = u64 [sp + 0x28]
  3892: 82 16 20                 s1 = u64 [sp + 0x20]
  3895: 95 11 38                 sp = sp + 0x38
  3898: 32 00                    ret
      :                          @267
  3900: 00                       trap
      :                          @268
  3901: 00                       trap
      :                          @269
  3902: 00                       trap
      :                          @270 [@dyn 34]
  3903: 82 72                    t0 = u64 [a0]
  3905: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3910: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3915: ac 9a 28                 jump @276 if a3 <u a2
      :                          @271
  3918: 82 77 08                 a0 = u64 [a0 + 0x8]
  3921: 33 09 40 00 03           a2 = 0x30040
  3926: 95 99 00 00 01           a2 = a2 + 0x10000
  3931: 01                       fallthrough
      :                          @272
  3932: 82 9a                    a3 = u64 [a2]
  3934: c9 a9 0b                 a4 = a2 - a3
  3937: ab 7b 12                 jump @276 if a4 != a0
      :                          @273
  3940: c9 2a 0b                 a4 = a3 - t0
  3943: 01                       fallthrough
      :                          @274
  3944: 82 9c                    a5 = u64 [a2]
  3946: ab ac f2                 jump @272 if a5 != a3
      :                          @275
  3949: 7b 9b                    u64 [a2] = a4
  3951: 33 08                    a1 = 0
  3953: 32 00                    ret
      :                          @276
  3955: 32 00                    ret
      :                          @277 [@dyn 35]
  3957: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3960: 7b 10 18                 u64 [sp + 0x18] = ra
  3963: 7b 15 10                 u64 [sp + 0x10] = s0
  3966: 7b 16 08                 u64 [sp + 0x8] = s1
  3969: 64 75                    s0 = a0
  3971: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3974: 82 77                    a0 = u64 [a0]
  3976: c9 a7 07                 a0 = a0 - a3
  3979: 64 96                    s1 = a2
  3981: ac 97 2a                 jump @280 if a0 <u a2
      :                          @278
  3984: 7b 1a                    u64 [sp] = a3
  3986: 82 57 08                 a0 = u64 [s0 + 0x8]
  3989: c8 a7 07                 a0 = a0 + a3
  3992: 64 69                    a2 = s1
  3994: 50 10 48 4a 01           ra = 72, jump @299
      :                          @279 [@dyn 36]
  3999: 82 17                    a0 = u64 [sp]
  4001: c8 76 06                 s1 = s1 + a0
  4004: 7b 56 10                 u64 [s0 + 0x10] = s1
  4007: 33 07                    a0 = 0
  4009: 82 10 18                 ra = u64 [sp + 0x18]
  4012: 82 15 10                 s0 = u64 [sp + 0x10]
  4015: 82 16 08                 s1 = u64 [sp + 0x8]
  4018: 95 11 20                 sp = sp + 0x20
  4021: 32 00                    ret
      :                          @280
  4023: 64 57                    a0 = s0
  4025: 7b 18                    u64 [sp] = a1
  4027: 64 a8                    a1 = a3
  4029: 64 69                    a2 = s1
  4031: 50 10 4a 74 fc           ra = 74, jump @193
      :                          @281 [@dyn 37]
  4036: 82 18                    a1 = u64 [sp]
  4038: 82 5a 10                 a3 = u64 [s0 + 0x10]
  4041: 28 c7                    jump @278
      :                          @282 [@dyn 38]
  4043: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4046: 7b 10 20                 u64 [sp + 0x20] = ra
  4049: 7b 15 18                 u64 [sp + 0x18] = s0
  4052: 7b 16 10                 u64 [sp + 0x10] = s1
  4055: 64 86                    s1 = a1
  4057: 83 88                    i32 a1 = a1 + 0
  4059: 33 09 80 00              a2 = 0x80
  4063: 64 7a                    a3 = a0
  4065: ae 98 2b                 jump @287 if a1 >=u a2
      :                          @283
  4068: 82 a8 10                 a1 = u64 [a3 + 0x10]
  4071: 82 a7                    a0 = u64 [a3]
  4073: ab 78 12                 jump @286 if a1 != a0
      :                          @284
  4076: 64 a7                    a0 = a3
  4078: 64 a5                    s0 = a3
  4080: 50 10 4e 08 fe           ra = 78, jump @237
      :                          @285 [@dyn 39]
  4085: 64 5a                    a3 = s0
  4087: 82 58 10                 a1 = u64 [s0 + 0x10]
  4090: 01                       fallthrough
      :                          @286
  4091: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4094: c8 87 07                 a0 = a0 + a1
  4097: 78 76                    u8 [a0] = s1
  4099: 95 88 01                 a1 = a1 + 0x1
  4102: 7b a8 10                 u64 [a3 + 0x10] = a1
  4105: 28 ab 00                 jump @295
      :                          @287
  4108: 8b 67 0b                 i32 a0 = s1 >> 0xb
  4111: 48 11 0c                 u32 [sp + 12] = 0
  4114: 52 07 1c                 jump @289 if a0 != 0
      :                          @288
  4117: 98 67 06                 a0 = s1 >> 0x6
  4120: 86 77 c0 00              a0 = a0 | 0xc0
  4124: 78 17 0c                 u8 [sp + 0xc] = a0
  4127: 84 67 3f                 a0 = s1 & 0x3f
  4130: 86 77 80 00              a0 = a0 | 0x80
  4134: 78 17 0d                 u8 [sp + 0xd] = a0
  4137: 33 06 02                 s1 = 0x2
  4140: 28 63                    jump @292
      :                          @289
  4142: 8b 67 10                 i32 a0 = s1 >> 0x10
  4145: 52 07 29                 jump @291 if a0 != 0
      :                          @290
  4148: 98 67 0c                 a0 = s1 >> 0xc
  4151: 86 77 e0 00              a0 = a0 | 0xe0
  4155: 78 17 0c                 u8 [sp + 0xc] = a0
  4158: 97 67 34                 a0 = s1 << 0x34
  4161: 98 77 3a                 a0 = a0 >> 0x3a
  4164: 95 77 80 00              a0 = a0 + 0x80
  4168: 78 17 0d                 u8 [sp + 0xd] = a0
  4171: 84 67 3f                 a0 = s1 & 0x3f
  4174: 86 77 80 00              a0 = a0 | 0x80
  4178: 78 17 0e                 u8 [sp + 0xe] = a0
  4181: 33 06 03                 s1 = 0x3
  4184: 28 37                    jump @292
      :                          @291
  4186: 97 67 2b                 a0 = s1 << 0x2b
  4189: 98 77 3d                 a0 = a0 >> 0x3d
  4192: 95 77 f0 00              a0 = a0 + 0xf0
  4196: 78 17 0c                 u8 [sp + 0xc] = a0
  4199: 97 67 2e                 a0 = s1 << 0x2e
  4202: 98 77 3a                 a0 = a0 >> 0x3a
  4205: 95 77 80 00              a0 = a0 + 0x80
  4209: 78 17 0d                 u8 [sp + 0xd] = a0
  4212: 97 67 34                 a0 = s1 << 0x34
  4215: 98 77 3a                 a0 = a0 >> 0x3a
  4218: 95 77 80 00              a0 = a0 + 0x80
  4222: 78 17 0e                 u8 [sp + 0xe] = a0
  4225: 84 67 3f                 a0 = s1 & 0x3f
  4228: 86 77 80 00              a0 = a0 | 0x80
  4232: 78 17 0f                 u8 [sp + 0xf] = a0
  4235: 33 06 04                 s1 = 0x4
  4238: 01                       fallthrough
      :                          @292
  4239: 82 a5 10                 s0 = u64 [a3 + 0x10]
  4242: 82 a7                    a0 = u64 [a3]
  4244: c9 57 07                 a0 = a0 - s0
  4247: ac 67 2d                 jump @296 if a0 <u s1
      :                          @293
  4250: 7b 1a                    u64 [sp] = a3
  4252: 82 a7 08                 a0 = u64 [a3 + 0x8]
  4255: c8 57 07                 a0 = a0 + s0
  4258: 95 18 0c                 a1 = sp + 0xc
  4261: 64 69                    a2 = s1
  4263: 50 10 50 3d              ra = 80, jump @299
      :                          @294 [@dyn 40]
  4267: c8 56 06                 s1 = s1 + s0
  4270: 82 17                    a0 = u64 [sp]
  4272: 7b 76 10                 u64 [a0 + 0x10] = s1
  4275: 01                       fallthrough
      :                          @295
  4276: 33 07                    a0 = 0
  4278: 82 10 20                 ra = u64 [sp + 0x20]
  4281: 82 15 18                 s0 = u64 [sp + 0x18]
  4284: 82 16 10                 s1 = u64 [sp + 0x10]
  4287: 95 11 28                 sp = sp + 0x28
  4290: 32 00                    ret
      :                          @296
  4292: 64 a7                    a0 = a3
  4294: 64 58                    a1 = s0
  4296: 64 69                    a2 = s1
  4298: 64 a5                    s0 = a3
  4300: 50 10 52 67 fb           ra = 82, jump @193
      :                          @297 [@dyn 41]
  4305: 64 5a                    a3 = s0
  4307: 82 55 10                 s0 = u64 [s0 + 0x10]
  4310: 28 c4                    jump @293
      :                          @298 [@dyn 42]
  4312: 64 8a                    a3 = a1
  4314: 33 08 08 02 01           a1 = 0x10208
  4319: 64 a9                    a2 = a3
  4321: 28 b9 04                 jump @394
      :                          @299
  4324: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4327: 7b 10 18                 u64 [sp + 0x18] = ra
  4330: 7b 15 10                 u64 [sp + 0x10] = s0
  4333: 7b 16 08                 u64 [sp + 0x8] = s1
  4336: 53 19 10 64              jump @308 if a2 <u 16
      :                          @300
  4340: 8d 7a                    i32 a3 = -a0
  4342: 84 a2 07                 t0 = a3 & 0x7
  4345: c8 27 0b                 a4 = a0 + t0
  4348: 51 02 15                 jump @303 if t0 == 0
      :                          @301
  4351: 64 8c                    a5 = a1
  4353: 64 75                    s0 = a0
  4355: 01                       fallthrough
      :                          @302
  4356: 7c ca                    a3 = u8 [a5]
  4358: 78 5a                    u8 [s0] = a3
  4360: 95 55 01                 s0 = s0 + 0x1
  4363: 95 cc 01                 a5 = a5 + 0x1
  4366: ac b5 f6                 jump @302 if s0 <u a4
      :                          @303
  4369: c8 28 03                 t1 = a1 + t0
  4372: c9 29 02                 t0 = a2 - t0
  4375: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4378: 84 38 07                 a1 = t1 & 0x7
  4381: c8 4b 0a                 a3 = a4 + t2
  4384: 51 08 3b                 jump @310 if a1 == 0
      :                          @304
  4387: 58 04 4b                 jump @313 if t2 <=s 0
      :                          @305
  4390: 97 38 03                 a1 = t1 << 0x3
  4393: 84 80 38                 ra = a1 & 0x38
  4396: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4399: 82 c5                    s0 = u64 [a5]
  4401: 8d 88                    i32 a1 = -a1
  4403: 84 88 38                 a1 = a1 & 0x38
  4406: 95 cc 08                 a5 = a5 + 0x8
  4409: 01                       fallthrough
      :                          @306
  4410: 82 c6                    s1 = u64 [a5]
  4412: d0 05 05                 s0 = s0 >> ra
  4415: cf 86 09                 a2 = s1 << a1
  4418: d4 59 09                 a2 = a2 | s0
  4421: 7b b9                    u64 [a4] = a2
  4423: 95 bb 08                 a4 = a4 + 0x8
  4426: 95 cc 08                 a5 = a5 + 0x8
  4429: 64 65                    s0 = s1
  4431: ac ab eb                 jump @306 if a4 <u a3
      :                          @307
  4434: 28 1c                    jump @313
      :                          @308
  4436: 64 7a                    a3 = a0
  4438: 52 09 21                 jump @314 if a2 != 0
      :                          @309
  4441: 28 2f                    jump @316
      :                          @310
  4443: 58 04 13                 jump @313 if t2 <=s 0
      :                          @311
  4446: 64 38                    a1 = t1
  4448: 01                       fallthrough
      :                          @312
  4449: 82 89                    a2 = u64 [a1]
  4451: 7b b9                    u64 [a4] = a2
  4453: 95 bb 08                 a4 = a4 + 0x8
  4456: 95 88 08                 a1 = a1 + 0x8
  4459: ac ab f6                 jump @312 if a4 <u a3
      :                          @313
  4462: c8 43 08                 a1 = t1 + t2
  4465: 84 29 07                 a2 = t0 & 0x7
  4468: 51 09 14                 jump @316 if a2 == 0
      :                          @314
  4471: c8 a9 09                 a2 = a2 + a3
  4474: 01                       fallthrough
      :                          @315
  4475: 7c 8b                    a4 = u8 [a1]
  4477: 78 ab                    u8 [a3] = a4
  4479: 95 aa 01                 a3 = a3 + 0x1
  4482: 95 88 01                 a1 = a1 + 0x1
  4485: ac 9a f6                 jump @315 if a3 <u a2
      :                          @316
  4488: 82 10 18                 ra = u64 [sp + 0x18]
  4491: 82 15 10                 s0 = u64 [sp + 0x10]
  4494: 82 16 08                 s1 = u64 [sp + 0x8]
  4497: 95 11 20                 sp = sp + 0x20
  4500: 32 00                    ret
      :                          @317
  4502: 8d 7a                    i32 a3 = -a0
  4504: 84 aa 07                 a3 = a3 & 0x7
  4507: c8 a7 0b                 a4 = a0 + a3
  4510: 51 0a 0e                 jump @320 if a3 == 0
      :                          @318
  4513: 64 7c                    a5 = a0
  4515: 01                       fallthrough
      :                          @319
  4516: 78 c8                    u8 [a5] = a1
  4518: 95 cc 01                 a5 = a5 + 0x1
  4521: ac bc fb                 jump @319 if a5 <u a4
      :                          @320
  4524: c9 a9 03                 t1 = a2 - a3
  4527: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4530: c8 cb 0a                 a3 = a4 + a5
  4533: 58 0c 1d                 jump @323 if a5 <=s 0
      :                          @321
  4536: 84 82 ff 00              t0 = a1 & 0xff
  4540: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
  4550: ca 92 0c                 a5 = t0 * a2
  4553: 01                       fallthrough
      :                          @322
  4554: 7b bc                    u64 [a4] = a5
  4556: 95 bb 08                 a4 = a4 + 0x8
  4559: ac ab fb                 jump @322 if a4 <u a3
      :                          @323
  4562: 84 39 07                 a2 = t1 & 0x7
  4565: 52 09 05                 jump @325 if a2 != 0
      :                          @324
  4568: 28 0e                    jump @327
      :                          @325
  4570: c8 a9 09                 a2 = a2 + a3
  4573: 01                       fallthrough
      :                          @326
  4574: 78 a8                    u8 [a3] = a1
  4576: 95 aa 01                 a3 = a3 + 0x1
  4579: ac 9a fb                 jump @326 if a3 <u a2
      :                          @327
  4582: 32 00                    ret
      :                          @328 [@dyn 43]
  4584: 82 77                    a0 = u64 [a0]
  4586: 01                       fallthrough
      :                          @329
  4587: 28                       jump @329
      :                          @330
  4588: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  4591: 7b 10 58                 u64 [sp + 0x58] = ra
  4594: 7b 15 50                 u64 [sp + 0x50] = s0
  4597: 7b 16 48                 u64 [sp + 0x48] = s1
  4600: 7b 19 08                 u64 [sp + 0x8] = a2
  4603: 7b 18                    u64 [sp] = a1
  4605: 98 7a 04                 a3 = a0 >> 0x4
  4608: 33 09 27                 a2 = 0x27
  4611: 53 2a 71 02 81 00        jump @333 if a3 <u 625
      :                          @331
  4617: 33 09 27                 a2 = 0x27
  4620: 95 1b 46                 a4 = sp + 0x46
  4623: 3a 08 00 00 03           a1 = u64 [0x30000]
  4628: 7b 18 18                 u64 [sp + 0x18] = a1
  4631: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  4637: 33 03 7b 14              t1 = 0x147b
  4641: 33 05 76 02 01           s0 = 0x10276
  4646: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4652: 01                       fallthrough
      :                          @332
  4653: 64 74                    t2 = a0
  4655: 82 17 18                 a0 = u64 [sp + 0x18]
  4658: d6 74 07                 a0 = t2 mulhu a0
  4661: 98 77 0b                 a0 = a0 >> 0xb
  4664: 82 18 10                 a1 = u64 [sp + 0x10]
  4667: c0 87 02                 i32 t0 = a0 * a1
  4670: c8 42 0a                 a3 = t0 + t2
  4673: 97 a2 30                 t0 = a3 << 0x30
  4676: 98 28 32                 a1 = t0 >> 0x32
  4679: ca 38 08                 a1 = a1 * t1
  4682: 98 8c 11                 a5 = a1 >> 0x11
  4685: 98 88 10                 a1 = a1 >> 0x10
  4688: 84 88 fe 07              a1 = a1 & 0x7fe
  4692: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  4695: c8 ca 0a                 a3 = a3 + a5
  4698: 97 aa 31                 a3 = a3 << 0x31
  4701: 98 aa 30                 a3 = a3 >> 0x30
  4704: c8 58 08                 a1 = a1 + s0
  4707: 7c 8c                    a5 = u8 [a1]
  4709: 7c 88 01                 a1 = u8 [a1 + 0x1]
  4712: c8 5a 0a                 a3 = a3 + s0
  4715: 7c a6 01                 s1 = u8 [a3 + 0x1]
  4718: 7c aa                    a3 = u8 [a3]
  4720: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  4723: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  4726: 78 b6 01                 u8 [a4 + 0x1] = s1
  4729: 78 ba                    u8 [a4] = a3
  4731: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  4734: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  4737: ac 40 ac                 jump @332 if ra <u t2
      :                          @333
  4740: 54 17 63 3b              jump @335 if a0 <=u 99
      :                          @334
  4744: 97 78 30                 a1 = a0 << 0x30
  4747: 98 88 32                 a1 = a1 >> 0x32
  4750: 96 88 7b 14              a1 = a1 * 0x147b
  4754: 98 88 11                 a1 = a1 >> 0x11
  4757: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  4760: c8 a7 07                 a0 = a0 + a3
  4763: 97 77 31                 a0 = a0 << 0x31
  4766: 98 77 30                 a0 = a0 >> 0x30
  4769: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4772: 33 0a 76 02 01           a3 = 0x10276
  4777: c8 a7 07                 a0 = a0 + a3
  4780: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4783: 7c 77                    a0 = u8 [a0]
  4785: 95 1b 21                 a4 = sp + 0x21
  4788: c8 9b 0b                 a4 = a4 + a2
  4791: 78 ba 01                 u8 [a4 + 0x1] = a3
  4794: 78 b7                    u8 [a4] = a0
  4796: 64 87                    a0 = a1
  4798: 01                       fallthrough
      :                          @335
  4799: 55 17 0a 14              jump @337 if a0 >=u 10
      :                          @336
  4803: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  4806: 95 18 21                 a1 = sp + 0x21
  4809: c8 98 08                 a1 = a1 + a2
  4812: 83 77 30                 i32 a0 = a0 + 0x30
  4815: 78 87                    u8 [a1] = a0
  4817: 28 21                    jump @338
      :                          @337
  4819: 97 77 01                 a0 = a0 << 0x1
  4822: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  4825: 33 08 76 02 01           a1 = 0x10276
  4830: c8 87 07                 a0 = a0 + a1
  4833: 7c 78 01                 a1 = u8 [a0 + 0x1]
  4836: 7c 77                    a0 = u8 [a0]
  4838: 95 1a 21                 a3 = sp + 0x21
  4841: c8 9a 0a                 a3 = a3 + a2
  4844: 78 a8 01                 u8 [a3 + 0x1] = a1
  4847: 78 a7                    u8 [a3] = a0
  4849: 01                       fallthrough
      :                          @338
  4850: 95 1b 21                 a4 = sp + 0x21
  4853: c8 9b 0b                 a4 = a4 + a2
  4856: 9a 9c 27                 a5 = 0x27 - a2
  4859: 33 09 38 02 01           a2 = 0x10238
  4864: 82 17 08                 a0 = u64 [sp + 0x8]
  4867: 82 18                    a1 = u64 [sp]
  4869: 33 0a                    a3 = 0
  4871: 50 10 58 12              ra = 88, jump @340
      :                          @339 [@dyn 44]
  4875: 82 10 58                 ra = u64 [sp + 0x58]
  4878: 82 15 50                 s0 = u64 [sp + 0x50]
  4881: 82 16 48                 s1 = u64 [sp + 0x48]
  4884: 95 11 60                 sp = sp + 0x60
  4887: 32 00                    ret
      :                          @340
  4889: 95 11 98                 sp = sp + 0xffffffffffffff98
  4892: 7b 10 60                 u64 [sp + 0x60] = ra
  4895: 7b 15 58                 u64 [sp + 0x58] = s0
  4898: 7b 16 50                 u64 [sp + 0x50] = s1
  4901: 7b 1b 18                 u64 [sp + 0x18] = a4
  4904: 51 08 4f                 jump @347 if a1 == 0
      :                          @341
  4907: 80 76 34                 s1 = u32 [a0 + 0x34]
  4910: 84 68 01                 a1 = s1 & 0x1
  4913: 33 0b 2b                 a4 = 0x2b
  4916: 33 05 00 00 11           s0 = 0x110000
  4921: db 8b 05                 s0 = a4 if a1 != 0
  4924: 7b 15 28                 u64 [sp + 0x28] = s0
  4927: c8 c8 02                 t0 = a1 + a5
  4930: 84 68 04                 a1 = s1 & 0x4
  4933: 51 08 42                 jump @348 if a1 == 0
      :                          @342
  4936: 7b 19 30                 u64 [sp + 0x30] = a2
  4939: 33 08                    a1 = 0
  4941: 51 0a 1a                 jump @345 if a3 == 0
      :                          @343
  4944: 64 a5                    s0 = a3
  4946: 01                       fallthrough
      :                          @344
  4947: 7d 9b                    a4 = i8 [a2]
  4949: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  4952: 85 bb 01                 a4 = a4 ^ 0x1
  4955: c8 b8 08                 a1 = a1 + a4
  4958: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4961: 95 99 01                 a2 = a2 + 0x1
  4964: 52 05 ef                 jump @344 if s0 != 0
      :                          @345
  4967: c8 82 02                 t0 = t0 + a1
  4970: 7b 1a 38                 u64 [sp + 0x38] = a3
  4973: 82 78                    a1 = u64 [a0]
  4975: 7b 1c 20                 u64 [sp + 0x20] = a5
  4978: 52 08 23                 jump @349 if a1 != 0
      :                          @346
  4981: 28 41                    jump @354
      :                          @347
  4983: 81 76 34                 s1 = i32 [a0 + 0x34]
  4986: 95 c2 01                 t0 = a5 + 0x1
  4989: 49 11 28 2d              u64 [sp + 40] = 0x2d
  4993: 84 68 04                 a1 = s1 & 0x4
  4996: 52 08 c4                 jump @342 if a1 != 0
      :                          @348
  4999: 49 11 30                 u64 [sp + 48] = 0
  5002: 7b 1a 38                 u64 [sp + 0x38] = a3
  5005: 82 78                    a1 = u64 [a0]
  5007: 7b 1c 20                 u64 [sp + 0x20] = a5
  5010: 51 08 24                 jump @354 if a1 == 0
      :                          @349
  5013: 82 75 08                 s0 = u64 [a0 + 0x8]
  5016: ae 52 1e                 jump @354 if t0 >=u s0
      :                          @350
  5019: 84 66 08                 s1 = s1 & 0x8
  5022: 52 06 50                 jump @357 if s1 != 0
      :                          @351
  5025: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5028: c9 25 0a                 a3 = s0 - t0
  5031: 5a 19 01 a1 00           jump @364 if a2 >s 1
      :                          @352
  5036: 52 09 ae 00              jump @366 if a2 != 0
      :                          @353
  5040: 7b 1a 10                 u64 [sp + 0x10] = a3
  5043: 28 ad 00                 jump @367
      :                          @354
  5046: 82 75 20                 s0 = u64 [a0 + 0x20]
  5049: 82 76 28                 s1 = u64 [a0 + 0x28]
  5052: 64 57                    a0 = s0
  5054: 64 68                    a1 = s1
  5056: 82 19 28                 a2 = u64 [sp + 0x28]
  5059: 82 1a 30                 a3 = u64 [sp + 0x30]
  5062: 82 1b 38                 a4 = u64 [sp + 0x38]
  5065: 50 10 5a 6d 01           ra = 90, jump @387
      :                          @355 [@dyn 45]
  5070: 33 08 01                 a1 = 0x1
  5073: 52 07 bc 00              jump @372 if a0 != 0
      :                          @356
  5077: 82 6c 18                 a5 = u64 [s1 + 0x18]
  5080: 64 57                    a0 = s0
  5082: 82 18 18                 a1 = u64 [sp + 0x18]
  5085: 82 19 20                 a2 = u64 [sp + 0x20]
  5088: 82 10 60                 ra = u64 [sp + 0x60]
  5091: 82 15 58                 s0 = u64 [sp + 0x58]
  5094: 82 16 50                 s1 = u64 [sp + 0x50]
  5097: 95 11 68                 sp = sp + 0x68
  5100: 32 0c                    jump [a5]
      :                          @357
  5102: 7b 12 40                 u64 [sp + 0x40] = t0
  5105: 81 78 30                 a1 = i32 [a0 + 0x30]
  5108: 7b 18 08                 u64 [sp + 0x8] = a1
  5111: 7c 79 38                 a2 = u8 [a0 + 0x38]
  5114: 7b 19                    u64 [sp] = a2
  5116: 82 79 20                 a2 = u64 [a0 + 0x20]
  5119: 82 76 28                 s1 = u64 [a0 + 0x28]
  5122: 48 17 30 30              u32 [a0 + 48] = 0x30
  5126: 7b 17 10                 u64 [sp + 0x10] = a0
  5129: 46 17 38 01              u8 [a0 + 56] = 0x1
  5133: 7b 19 48                 u64 [sp + 0x48] = a2
  5136: 64 97                    a0 = a2
  5138: 64 68                    a1 = s1
  5140: 82 19 28                 a2 = u64 [sp + 0x28]
  5143: 82 1a 30                 a3 = u64 [sp + 0x30]
  5146: 82 1b 38                 a4 = u64 [sp + 0x38]
  5149: 50 10 5c 19 01           ra = 92, jump @387
      :                          @358 [@dyn 46]
  5154: 52 07 67                 jump @371 if a0 != 0
      :                          @359
  5157: 82 17 40                 a0 = u64 [sp + 0x40]
  5160: c9 75 05                 s0 = s0 - a0
  5163: 95 55 01                 s0 = s0 + 0x1
  5166: 01                       fallthrough
      :                          @360
  5167: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5170: 51 05 c6 00              jump @382 if s0 == 0
      :                          @361
  5174: 82 69 20                 a2 = u64 [s1 + 0x20]
  5177: 33 08 30                 a1 = 0x30
  5180: 82 17 48                 a0 = u64 [sp + 0x48]
  5183: b4 90 01 5e              ra = 94, jump [a2]
      :                          @362 [@dyn 47]
  5187: 51 07 ec                 jump @360 if a0 == 0
      :                          @363
  5190: 28 43                    jump @371
      :                          @364
  5192: 52 19 02 12              jump @366 if a2 != 2
      :                          @365
  5196: 98 a9 01                 a2 = a3 >> 0x1
  5199: 95 a8 01                 a1 = a3 + 0x1
  5202: 98 88 01                 a1 = a1 >> 0x1
  5205: 7b 18 10                 u64 [sp + 0x10] = a1
  5208: 28 08                    jump @367
      :                          @366
  5210: 64 a9                    a2 = a3
  5212: 49 11 10                 u64 [sp + 16] = 0
  5215: 01                       fallthrough
      :                          @367
  5216: 82 78 20                 a1 = u64 [a0 + 0x20]
  5219: 7b 18 48                 u64 [sp + 0x48] = a1
  5222: 82 76 28                 s1 = u64 [a0 + 0x28]
  5225: 81 77 30                 a0 = i32 [a0 + 0x30]
  5228: 7b 17 40                 u64 [sp + 0x40] = a0
  5231: 95 95 01                 s0 = a2 + 0x1
  5234: 01                       fallthrough
      :                          @368
  5235: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  5238: 51 05 27                 jump @373 if s0 == 0
      :                          @369
  5241: 82 69 20                 a2 = u64 [s1 + 0x20]
  5244: 82 17 48                 a0 = u64 [sp + 0x48]
  5247: 82 18 40                 a1 = u64 [sp + 0x40]
  5250: b4 90 01 60              ra = 96, jump [a2]
      :                          @370 [@dyn 48]
  5254: 51 07 ed                 jump @368 if a0 == 0
      :                          @371
  5257: 33 08 01                 a1 = 0x1
  5260: 01                       fallthrough
      :                          @372
  5261: 64 87                    a0 = a1
  5263: 82 10 60                 ra = u64 [sp + 0x60]
  5266: 82 15 58                 s0 = u64 [sp + 0x58]
  5269: 82 16 50                 s1 = u64 [sp + 0x50]
  5272: 95 11 68                 sp = sp + 0x68
  5275: 32 00                    ret
      :                          @373
  5277: 82 15 48                 s0 = u64 [sp + 0x48]
  5280: 64 57                    a0 = s0
  5282: 64 68                    a1 = s1
  5284: 82 19 28                 a2 = u64 [sp + 0x28]
  5287: 82 1a 30                 a3 = u64 [sp + 0x30]
  5290: 82 1b 38                 a4 = u64 [sp + 0x38]
  5293: 50 10 62 89 00           ra = 98, jump @387
      :                          @374 [@dyn 49]
  5298: 33 08 01                 a1 = 0x1
  5301: 52 07 d8                 jump @372 if a0 != 0
      :                          @375
  5304: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5307: 64 57                    a0 = s0
  5309: 82 18 18                 a1 = u64 [sp + 0x18]
  5312: 82 19 20                 a2 = u64 [sp + 0x20]
  5315: b4 a0 01 64              ra = 100, jump [a3]
      :                          @376 [@dyn 50]
  5319: 33 08 01                 a1 = 0x1
  5322: 52 07 c3                 jump @372 if a0 != 0
      :                          @377
  5325: 82 17 10                 a0 = u64 [sp + 0x10]
  5328: 9a 77                    a0 = -a0
  5330: 7b 17 38                 u64 [sp + 0x38] = a0
  5333: 33 05 ff                 s0 = 0xffffffffffffffff
  5336: 01                       fallthrough
      :                          @378
  5337: 82 17 38                 a0 = u64 [sp + 0x38]
  5340: c8 57 07                 a0 = a0 + s0
  5343: 51 17 ff 42              jump @385 if a0 == 4294967295
      :                          @379
  5347: 82 69 20                 a2 = u64 [s1 + 0x20]
  5350: 82 17 48                 a0 = u64 [sp + 0x48]
  5353: 82 18 40                 a1 = u64 [sp + 0x40]
  5356: b4 90 01 66              ra = 102, jump [a2]
      :                          @380 [@dyn 51]
  5360: 95 55 01                 s0 = s0 + 0x1
  5363: 51 07 e6                 jump @378 if a0 == 0
      :                          @381
  5366: 28 37                    jump @386
      :                          @382
  5368: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5371: 82 17 48                 a0 = u64 [sp + 0x48]
  5374: 82 18 18                 a1 = u64 [sp + 0x18]
  5377: 82 19 20                 a2 = u64 [sp + 0x20]
  5380: b4 a0 01 68              ra = 104, jump [a3]
      :                          @383 [@dyn 52]
  5384: 33 08 01                 a1 = 0x1
  5387: 52 07 82                 jump @372 if a0 != 0
      :                          @384
  5390: 33 08                    a1 = 0
  5392: 82 17 10                 a0 = u64 [sp + 0x10]
  5395: 82 19 08                 a2 = u64 [sp + 0x8]
  5398: 7a 79 30                 u32 [a0 + 0x30] = a2
  5401: 82 19                    a2 = u64 [sp]
  5403: 78 79 38                 u8 [a0 + 0x38] = a2
  5406: 28 6f ff                 jump @372
      :                          @385
  5409: 82 15 10                 s0 = u64 [sp + 0x10]
  5412: 82 17 10                 a0 = u64 [sp + 0x10]
  5415: d8 75 08                 a1 = s0 <u a0
  5418: 28 63 ff                 jump @372
      :                          @386
  5421: 82 17 10                 a0 = u64 [sp + 0x10]
  5424: d8 75 08                 a1 = s0 <u a0
  5427: 28 5a ff                 jump @372
      :                          @387
  5430: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5433: 7b 10 20                 u64 [sp + 0x20] = ra
  5436: 7b 15 18                 u64 [sp + 0x18] = s0
  5439: 7b 16 10                 u64 [sp + 0x10] = s1
  5442: 83 9c                    i32 a5 = a2 + 0
  5444: 33 02 00 00 11           t0 = 0x110000
  5449: 64 a6                    s1 = a3
  5451: 64 85                    s0 = a1
  5453: 64 7a                    a3 = a0
  5455: aa 2c 20                 jump @390 if a5 == t0
      :                          @388
  5458: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5461: 64 a7                    a0 = a3
  5463: 64 98                    a1 = a2
  5465: 7b 1b 08                 u64 [sp + 0x8] = a4
  5468: 7b 1a                    u64 [sp] = a3
  5470: b4 c0 01 6a              ra = 106, jump [a5]
      :                          @389 [@dyn 53]
  5474: 82 1a                    a3 = u64 [sp]
  5476: 82 1b 08                 a4 = u64 [sp + 0x8]
  5479: 64 78                    a1 = a0
  5481: 33 07 01                 a0 = 0x1
  5484: 52 08 20                 jump @393 if a1 != 0
      :                          @390
  5487: 51 06 1a                 jump @392 if s1 == 0
      :                          @391
  5490: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5493: 64 a7                    a0 = a3
  5495: 64 68                    a1 = s1
  5497: 64 b9                    a2 = a4
  5499: 82 10 20                 ra = u64 [sp + 0x20]
  5502: 82 15 18                 s0 = u64 [sp + 0x18]
  5505: 82 16 10                 s1 = u64 [sp + 0x10]
  5508: 95 11 28                 sp = sp + 0x28
  5511: 32 0c                    jump [a5]
      :                          @392
  5513: 33 07                    a0 = 0
  5515: 01                       fallthrough
      :                          @393
  5516: 82 10 20                 ra = u64 [sp + 0x20]
  5519: 82 15 18                 s0 = u64 [sp + 0x18]
  5522: 82 16 10                 s1 = u64 [sp + 0x10]
  5525: 95 11 28                 sp = sp + 0x28
  5528: 32 00                    ret
      :                          @394
  5530: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5534: 7b 10 80 00              u64 [sp + 0x80] = ra
  5538: 7b 15 78                 u64 [sp + 0x78] = s0
  5541: 7b 16 70                 u64 [sp + 0x70] = s1
  5544: 49 11 60 20              u64 [sp + 96] = 0x20
  5548: 33 0a 03                 a3 = 0x3
  5551: 78 1a 68                 u8 [sp + 0x68] = a3
  5554: 82 96 20                 s1 = u64 [a2 + 0x20]
  5557: 49 11 30                 u64 [sp + 48] = 0
  5560: 49 11 40                 u64 [sp + 64] = 0
  5563: 7b 17 50                 u64 [sp + 0x50] = a0
  5566: 7b 18 58                 u64 [sp + 0x58] = a1
  5569: 51 06 07 01              jump @416 if s1 == 0
      :                          @395
  5573: 82 97 28                 a0 = u64 [a2 + 0x28]
  5576: 51 07 74 01              jump @426 if a0 == 0
      :                          @396
  5580: 49 11 28                 u64 [sp + 40] = 0
  5583: 82 95                    s0 = u64 [a2]
  5585: 7b 19 08                 u64 [sp + 0x8] = a2
  5588: 82 98 10                 a1 = u64 [a2 + 0x10]
  5591: 7b 18 18                 u64 [sp + 0x18] = a1
  5594: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5597: 97 88 03                 a1 = a1 << 0x3
  5600: 98 88 03                 a1 = a1 >> 0x3
  5603: 95 88 01                 a1 = a1 + 0x1
  5606: 7b 18                    u64 [sp] = a1
  5608: 95 55 08                 s0 = s0 + 0x8
  5611: 96 78 38                 a1 = a0 * 0x38
  5614: 95 66 18                 s1 = s1 + 0x18
  5617: 33 07 56                 a0 = 0x56
  5620: 7b 17 10                 u64 [sp + 0x10] = a0
  5623: 01                       fallthrough
      :                          @397
  5624: 7b 18 20                 u64 [sp + 0x20] = a1
  5627: 82 59                    a2 = u64 [s0]
  5629: 51 09 17                 jump @400 if a2 == 0
      :                          @398
  5632: 82 1a 58                 a3 = u64 [sp + 0x58]
  5635: 82 17 50                 a0 = u64 [sp + 0x50]
  5638: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5641: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5644: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @399 [@dyn 54]
  5648: 52 07 51 01              jump @429 if a0 != 0
      :                          @400
  5652: 81 67 10                 a0 = i32 [s1 + 0x10]
  5655: 7a 17 60                 u32 [sp + 0x60] = a0
  5658: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5661: 78 17 68                 u8 [sp + 0x68] = a0
  5664: 81 67 14                 a0 = i32 [s1 + 0x14]
  5667: 7a 17 64                 u32 [sp + 0x64] = a0
  5670: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5673: 82 67                    a0 = u64 [s1]
  5675: 51 08 26                 jump @405 if a1 == 0
      :                          @401
  5678: 52 18 01 16              jump @403 if a1 != 1
      :                          @402
  5682: 97 77 04                 a0 = a0 << 0x4
  5685: 82 18 18                 a1 = u64 [sp + 0x18]
  5688: c8 87 07                 a0 = a0 + a1
  5691: 82 78 08                 a1 = u64 [a0 + 0x8]
  5694: 82 19 10                 a2 = u64 [sp + 0x10]
  5697: aa 98 07                 jump @404 if a1 == a2
      :                          @403
  5700: 33 08                    a1 = 0
  5702: 28 0f                    jump @406
      :                          @404
  5704: 82 77                    a0 = u64 [a0]
  5706: 82 77                    a0 = u64 [a0]
  5708: 33 08 01                 a1 = 0x1
  5711: 28 06                    jump @406
      :                          @405
  5713: 33 08 01                 a1 = 0x1
  5716: 01                       fallthrough
      :                          @406
  5717: 7b 18 30                 u64 [sp + 0x30] = a1
  5720: 7b 17 38                 u64 [sp + 0x38] = a0
  5723: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5726: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5729: 51 08 26                 jump @411 if a1 == 0
      :                          @407
  5732: 52 18 01 16              jump @409 if a1 != 1
      :                          @408
  5736: 97 77 04                 a0 = a0 << 0x4
  5739: 82 18 18                 a1 = u64 [sp + 0x18]
  5742: c8 87 07                 a0 = a0 + a1
  5745: 82 78 08                 a1 = u64 [a0 + 0x8]
  5748: 82 19 10                 a2 = u64 [sp + 0x10]
  5751: aa 98 07                 jump @410 if a1 == a2
      :                          @409
  5754: 33 08                    a1 = 0
  5756: 28 0f                    jump @412
      :                          @410
  5758: 82 77                    a0 = u64 [a0]
  5760: 82 77                    a0 = u64 [a0]
  5762: 33 08 01                 a1 = 0x1
  5765: 28 06                    jump @412
      :                          @411
  5767: 33 08 01                 a1 = 0x1
  5770: 01                       fallthrough
      :                          @412
  5771: 7b 18 40                 u64 [sp + 0x40] = a1
  5774: 7b 17 48                 u64 [sp + 0x48] = a0
  5777: 82 67 08                 a0 = u64 [s1 + 0x8]
  5780: 97 77 04                 a0 = a0 << 0x4
  5783: 82 18 18                 a1 = u64 [sp + 0x18]
  5786: c8 78 08                 a1 = a1 + a0
  5789: 82 87                    a0 = u64 [a1]
  5791: 82 89 08                 a2 = u64 [a1 + 0x8]
  5794: 95 18 30                 a1 = sp + 0x30
  5797: b4 90 01 6e              ra = 110, jump [a2]
      :                          @413 [@dyn 55]
  5801: 52 07 b8 00              jump @429 if a0 != 0
      :                          @414
  5805: 95 55 10                 s0 = s0 + 0x10
  5808: 82 18 20                 a1 = u64 [sp + 0x20]
  5811: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5814: 95 66 38                 s1 = s1 + 0x38
  5817: 82 17 28                 a0 = u64 [sp + 0x28]
  5820: 95 77 01                 a0 = a0 + 0x1
  5823: 7b 17 28                 u64 [sp + 0x28] = a0
  5826: 52 08 36 ff              jump @397 if a1 != 0
      :                          @415
  5830: 28 69                    jump @424
      :                          @416
  5832: 82 97 18                 a0 = u64 [a2 + 0x18]
  5835: 51 07 71                 jump @426 if a0 == 0
      :                          @417
  5838: 82 95 10                 s0 = u64 [a2 + 0x10]
  5841: 33 0a                    a3 = 0
  5843: 97 78 04                 a1 = a0 << 0x4
  5846: c8 58 08                 a1 = a1 + s0
  5849: 7b 18 20                 u64 [sp + 0x20] = a1
  5852: 7b 19 08                 u64 [sp + 0x8] = a2
  5855: 82 96                    s1 = u64 [a2]
  5857: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5860: 97 77 04                 a0 = a0 << 0x4
  5863: 98 77 04                 a0 = a0 >> 0x4
  5866: 95 77 01                 a0 = a0 + 0x1
  5869: 7b 17                    u64 [sp] = a0
  5871: 95 66 08                 s1 = s1 + 0x8
  5874: 01                       fallthrough
      :                          @418
  5875: 7b 1a 28                 u64 [sp + 0x28] = a3
  5878: 82 69                    a2 = u64 [s1]
  5880: 51 09 16                 jump @421 if a2 == 0
      :                          @419
  5883: 82 1a 58                 a3 = u64 [sp + 0x58]
  5886: 82 17 50                 a0 = u64 [sp + 0x50]
  5889: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5892: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5895: b4 a0 01 70              ra = 112, jump [a3]
      :                          @420 [@dyn 56]
  5899: 52 07 56                 jump @429 if a0 != 0
      :                          @421
  5902: 82 57                    a0 = u64 [s0]
  5904: 82 59 08                 a2 = u64 [s0 + 0x8]
  5907: 95 18 30                 a1 = sp + 0x30
  5910: b4 90 01 72              ra = 114, jump [a2]
      :                          @422 [@dyn 57]
  5914: 52 07 47                 jump @429 if a0 != 0
      :                          @423
  5917: 95 66 10                 s1 = s1 + 0x10
  5920: 95 55 10                 s0 = s0 + 0x10
  5923: 82 1a 28                 a3 = u64 [sp + 0x28]
  5926: 95 aa 01                 a3 = a3 + 0x1
  5929: 82 17 20                 a0 = u64 [sp + 0x20]
  5932: ab 75 c7                 jump @418 if s0 != a0
      :                          @424
  5935: 82 19 08                 a2 = u64 [sp + 0x8]
  5938: 82 1a                    a3 = u64 [sp]
  5940: 82 97 08                 a0 = u64 [a2 + 0x8]
  5943: ac 7a 0d                 jump @427 if a3 <u a0
      :                          @425
  5946: 28 2c                    jump @430
      :                          @426
  5948: 33 0a                    a3 = 0
  5950: 82 97 08                 a0 = u64 [a2 + 0x8]
  5953: 54 07 25                 jump @430 if a0 <=u 0
      :                          @427
  5956: 82 97                    a0 = u64 [a2]
  5958: 97 a8 04                 a1 = a3 << 0x4
  5961: c8 87 09                 a2 = a0 + a1
  5964: 82 1a 58                 a3 = u64 [sp + 0x58]
  5967: 82 17 50                 a0 = u64 [sp + 0x50]
  5970: 82 98                    a1 = u64 [a2]
  5972: 82 99 08                 a2 = u64 [a2 + 0x8]
  5975: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5978: b4 a0 01 74              ra = 116, jump [a3]
      :                          @428 [@dyn 58]
  5982: 51 07 08                 jump @430 if a0 == 0
      :                          @429
  5985: 33 07 01                 a0 = 0x1
  5988: 28 05                    jump @431
      :                          @430
  5990: 33 07                    a0 = 0
  5992: 01                       fallthrough
      :                          @431
  5993: 82 10 80 00              ra = u64 [sp + 0x80]
  5997: 82 15 78                 s0 = u64 [sp + 0x78]
  6000: 82 16 70                 s1 = u64 [sp + 0x70]
  6003: 95 11 88 00              sp = sp + 0x88
  6007: 32 00                    ret
      :                          @432 [@dyn 59]
  6009: 32 00                    ret
      :                          @433 [@dyn 60]
  6011: 95 11 80                 sp = sp + 0xffffffffffffff80
  6014: 7b 10 78                 u64 [sp + 0x78] = ra
  6017: 7b 15 70                 u64 [sp + 0x70] = s0
  6020: 7b 16 68                 u64 [sp + 0x68] = s1
  6023: 64 92                    t0 = a2
  6025: 33 00                    ra = 0
  6027: 33 0b                    a4 = 0
  6029: 33 05                    s0 = 0
  6031: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  6041: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  6047: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  6057: 82 79 10                 a2 = u64 [a0 + 0x10]
  6060: 7b 19 48                 u64 [sp + 0x48] = a2
  6063: 82 79                    a2 = u64 [a0]
  6065: 7b 19 38                 u64 [sp + 0x38] = a2
  6068: 82 77 08                 a0 = u64 [a0 + 0x8]
  6071: 7b 17 30                 u64 [sp + 0x30] = a0
  6074: 33 07 0c 00 01           a0 = 0x1000c
  6079: 7b 17 08                 u64 [sp + 0x8] = a0
  6082: 3a 07 08 00 03           a0 = u64 [0x30008]
  6087: 7b 17 60                 u64 [sp + 0x60] = a0
  6090: 7b 18 58                 u64 [sp + 0x58] = a1
  6093: 95 88 08                 a1 = a1 + 0x8
  6096: 7b 18                    u64 [sp] = a1
  6098: 33 0c 0a                 a5 = 0xa
  6101: 7b 12 20                 u64 [sp + 0x20] = t0
  6104: 7b 13 18                 u64 [sp + 0x18] = t1
  6107: 7b 14 10                 u64 [sp + 0x10] = t2
  6110: 28 3a                    jump @437
      :                          @434
  6112: 64 06                    s1 = ra
  6114: c8 89 07                 a0 = a2 + a1
  6117: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  6120: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6123: 88 77 01                 a0 = a0 <u 0x1
  6126: 01                       fallthrough
      :                          @435
  6127: 82 1a 48                 a3 = u64 [sp + 0x48]
  6130: 78 a7                    u8 [a3] = a0
  6132: 82 17 30                 a0 = u64 [sp + 0x30]
  6135: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6138: 82 17 38                 a0 = u64 [sp + 0x38]
  6141: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @436 [@dyn 61]
  6145: 64 5b                    a4 = s0
  6147: 82 12 20                 t0 = u64 [sp + 0x20]
  6150: 82 13 18                 t1 = u64 [sp + 0x18]
  6153: 82 14 10                 t2 = u64 [sp + 0x10]
  6156: 64 60                    ra = s1
  6158: 33 0c 0a                 a5 = 0xa
  6161: 82 15 40                 s0 = u64 [sp + 0x40]
  6164: 52 07 63 01              jump @478 if a0 != 0
      :                          @437
  6168: 84 57 ff 00              a0 = s0 & 0xff
  6172: 52 07 57 01              jump @477 if a0 != 0
      :                          @438
  6176: 7b 1b 50                 u64 [sp + 0x50] = a4
  6179: ae 02 0a                 jump @441 if t0 >=u ra
      :                          @439
  6182: 28 ef 00                 jump @468
      :                          @440
  6185: ac 02 ec 00              jump @468 if t0 <u ra
      :                          @441
  6189: c9 02 08                 a1 = t0 - ra
  6192: 82 16 58                 s1 = u64 [sp + 0x58]
  6195: c8 06 06                 s1 = s1 + ra
  6198: 55 18 10 1d              jump @447 if a1 >=u 16
      :                          @442
  6202: aa 02 d8 00              jump @467 if t0 == ra
      :                          @443
  6206: 33 0a                    a3 = 0
  6208: 01                       fallthrough
      :                          @444
  6209: c8 a6 07                 a0 = s1 + a3
  6212: 7c 77                    a0 = u8 [a0]
  6214: aa c7 a5 00              jump @462 if a0 == a5
      :                          @445
  6218: 95 aa 01                 a3 = a3 + 0x1
  6221: ab a8 f4                 jump @444 if a1 != a3
      :                          @446
  6224: 28 c2 00                 jump @467
      :                          @447
  6227: 95 69 07                 a2 = s1 + 0x7
  6230: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  6233: c9 6a 07                 a0 = a3 - s1
  6236: d3 6a 0a                 a3 = a3 ^ s1
  6239: 88 aa 01                 a3 = a3 <u 0x1
  6242: 88 7b 01                 a4 = a0 <u 0x1
  6245: d4 ba 0a                 a3 = a3 | a4
  6248: 51 0a 45                 jump @453 if a3 == 0
      :                          @448
  6251: 33 07                    a0 = 0
  6253: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6256: 82 1b                    a4 = u64 [sp]
  6258: c8 0b 0b                 a4 = a4 + ra
  6261: 28 08                    jump @450
      :                          @449
  6263: 82 1b                    a4 = u64 [sp]
  6265: c8 0b 0b                 a4 = a4 + ra
  6268: 01                       fallthrough
      :                          @450
  6269: c8 76 0c                 a5 = s1 + a0
  6272: 82 cc                    a5 = u64 [a5]
  6274: c8 7b 09                 a2 = a4 + a0
  6277: 82 99                    a2 = u64 [a2]
  6279: d3 4c 05                 s0 = a5 ^ t2
  6282: c8 35 05                 s0 = s0 + t1
  6285: e0 c5 0c                 a5 = s0 & ~a5
  6288: d3 49 05                 s0 = a2 ^ t2
  6291: c8 35 05                 s0 = s0 + t1
  6294: e0 95 09                 a2 = s0 & ~a2
  6297: d4 c9 09                 a2 = a2 | a5
  6300: 82 1c 60                 a5 = u64 [sp + 0x60]
  6303: d2 c9 09                 a2 = a2 & a5
  6306: 52 09 1f                 jump @456 if a2 != 0
      :                          @451
  6309: 95 77 10                 a0 = a0 + 0x10
  6312: ae 7a d5                 jump @450 if a3 >=u a0
      :                          @452
  6315: 28 16                    jump @456
      :                          @453
  6317: c8 a6 0b                 a4 = s1 + a3
  6320: 7c bb                    a4 = u8 [a4]
  6322: aa cb 51                 jump @465 if a4 == a5
      :                          @454
  6325: 95 aa 01                 a3 = a3 + 0x1
  6328: ab a7 f5                 jump @453 if a0 != a3
      :                          @455
  6331: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  6334: ae 7a b9                 jump @449 if a3 >=u a0
      :                          @456
  6337: aa 87 9a 00              jump @474 if a0 == a1
      :                          @457
  6341: 33 0a                    a3 = 0
  6343: c8 76 06                 s1 = s1 + a0
  6346: c9 72 08                 a1 = t0 - a0
  6349: c9 08 08                 a1 = a1 - ra
  6352: 33 0c 0a                 a5 = 0xa
  6355: 82 1b 50                 a4 = u64 [sp + 0x50]
  6358: 01                       fallthrough
      :                          @458
  6359: c8 a6 09                 a2 = s1 + a3
  6362: 7c 99                    a2 = u8 [a2]
  6364: aa c9 0b                 jump @461 if a2 == a5
      :                          @459
  6367: 95 aa 01                 a3 = a3 + 0x1
  6370: ab a8 f5                 jump @458 if a1 != a3
      :                          @460
  6373: 28 2d                    jump @467
      :                          @461
  6375: c8 7a 0a                 a3 = a3 + a0
  6378: 01                       fallthrough
      :                          @462
  6379: c8 0a 0a                 a3 = a3 + ra
  6382: 95 a0 01                 ra = a3 + 0x1
  6385: ae 2a 38 ff              jump @440 if a3 >=u t0
      :                          @463
  6389: 82 17 58                 a0 = u64 [sp + 0x58]
  6392: c8 7a 0a                 a3 = a3 + a0
  6395: 7c a7                    a0 = u8 [a3]
  6397: ab c7 2c ff              jump @440 if a0 != a5
      :                          @464
  6401: 28 61                    jump @475
      :                          @465
  6403: 82 1b 50                 a4 = u64 [sp + 0x50]
  6406: c8 0a 0a                 a3 = a3 + ra
  6409: 95 a0 01                 ra = a3 + 0x1
  6412: ac 2a e9                 jump @463 if a3 <u t0
      :                          @466
  6415: 28 1a ff                 jump @440
      :                          @467
  6418: 64 20                    ra = t0
  6420: 01                       fallthrough
      :                          @468
  6421: 49 11 40 01              u64 [sp + 64] = 0x1
  6425: 64 b5                    s0 = a4
  6427: 64 26                    s1 = t0
  6429: aa 2b 56                 jump @477 if a4 == t0
      :                          @469
  6432: 82 17 48                 a0 = u64 [sp + 0x48]
  6435: 7c 77                    a0 = u8 [a0]
  6437: 51 07 22                 jump @472 if a0 == 0
      :                          @470
  6440: 82 17 30                 a0 = u64 [sp + 0x30]
  6443: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6446: 33 09 04                 a2 = 0x4
  6449: 82 17 38                 a0 = u64 [sp + 0x38]
  6452: 82 18 08                 a1 = u64 [sp + 0x8]
  6455: 7b 10 28                 u64 [sp + 0x28] = ra
  6458: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @471 [@dyn 62]
  6462: 82 1b 50                 a4 = u64 [sp + 0x50]
  6465: 82 10 28                 ra = u64 [sp + 0x28]
  6468: 52 07 33                 jump @478 if a0 != 0
      :                          @472
  6471: c9 b6 09                 a2 = s1 - a4
  6474: 82 18 58                 a1 = u64 [sp + 0x58]
  6477: c8 b8 08                 a1 = a1 + a4
  6480: ab b6 90 fe              jump @434 if s1 != a4
      :                          @473
  6484: 64 06                    s1 = ra
  6486: 33 07                    a0 = 0
  6488: 28 97 fe                 jump @435
      :                          @474
  6491: 64 20                    ra = t0
  6493: 82 1b 50                 a4 = u64 [sp + 0x50]
  6496: 28 b5                    jump @468
      :                          @475
  6498: 49 11 40                 u64 [sp + 64] = 0
  6501: 64 05                    s0 = ra
  6503: 64 06                    s1 = ra
  6505: 82 17 48                 a0 = u64 [sp + 0x48]
  6508: 7c 77                    a0 = u8 [a0]
  6510: 52 07 ba                 jump @470 if a0 != 0
      :                          @476
  6513: 28 d6                    jump @472
      :                          @477
  6515: 33 07                    a0 = 0
  6517: 28 06                    jump @479
      :                          @478
  6519: 33 07 01                 a0 = 0x1
  6522: 01                       fallthrough
      :                          @479
  6523: 82 10 78                 ra = u64 [sp + 0x78]
  6526: 82 15 70                 s0 = u64 [sp + 0x70]
  6529: 82 16 68                 s1 = u64 [sp + 0x68]
  6532: 95 11 80 00              sp = sp + 0x80
  6536: 32 00                    ret
      :                          @480 [@dyn 63]
  6538: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6541: 7b 10 20                 u64 [sp + 0x20] = ra
  6544: 7b 15 18                 u64 [sp + 0x18] = s0
  6547: 7b 16 10                 u64 [sp + 0x10] = s1
  6550: 82 75 10                 s0 = u64 [a0 + 0x10]
  6553: 7c 59                    a2 = u8 [s0]
  6555: 82 7b                    a4 = u64 [a0]
  6557: 82 76 08                 s1 = u64 [a0 + 0x8]
  6560: 51 09 33                 jump @484 if a2 == 0
      :                          @481
  6563: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6566: 7b 18 08                 u64 [sp + 0x8] = a1
  6569: 33 08 0c 00 01           a1 = 0x1000c
  6574: 33 09 04                 a2 = 0x4
  6577: 64 b7                    a0 = a4
  6579: 7b 1b                    u64 [sp] = a4
  6581: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @482 [@dyn 64]
  6586: 82 18 08                 a1 = u64 [sp + 0x8]
  6589: 82 1b                    a4 = u64 [sp]
  6591: 51 07 14                 jump @484 if a0 == 0
      :                          @483
  6594: 33 07 01                 a0 = 0x1
  6597: 82 10 20                 ra = u64 [sp + 0x20]
  6600: 82 15 18                 s0 = u64 [sp + 0x18]
  6603: 82 16 10                 s1 = u64 [sp + 0x10]
  6606: 95 11 28                 sp = sp + 0x28
  6609: 32 00                    ret
      :                          @484
  6611: 83 87                    i32 a0 = a1 + 0
  6613: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6616: 88 77 01                 a0 = a0 <u 0x1
  6619: 78 57                    u8 [s0] = a0
  6621: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6624: 64 b7                    a0 = a4
  6626: 82 10 20                 ra = u64 [sp + 0x20]
  6629: 82 15 18                 s0 = u64 [sp + 0x18]
  6632: 82 16 10                 s1 = u64 [sp + 0x10]
  6635: 95 11 28                 sp = sp + 0x28
  6638: 32 0c                    jump [a5]
      :                          @485 [@dyn 65]
  6640: 64 8a                    a3 = a1
  6642: 33 08 40 02 01           a1 = 0x10240
  6647: 64 a9                    a2 = a3
  6649: 28 a1 fb                 jump @394
      :                          @486
  6652: 51 08 9b 00              jump @507 if a1 == 0
      :                          @487
  6656: 64 79                    a2 = a0
  6658: 7c 77                    a0 = u8 [a0]
  6660: 51 07 91 00              jump @506 if a0 == 0
      :                          @488
  6664: 51 27 ff 00 90 00        jump @508 if a0 == 255
      :                          @489
  6670: 6c 7a                    a3 = sext.b a0
  6672: 57 0a 09                 jump @491 if a3 <s 0
      :                          @490
  6675: 33 0a                    a3 = 0
  6677: 33 08                    a1 = 0
  6679: 28 73                    jump @505
      :                          @491
  6681: 55 27 c0 00 0d           jump @493 if a0 >=u 192
      :                          @492
  6686: 33 0a 01                 a3 = 0x1
  6689: 33 0b 80                 a4 = 0xffffffffffffff80
  6692: 28 4a                    jump @502
      :                          @493
  6694: 55 27 e0 00 0e           jump @495 if a0 >=u 224
      :                          @494
  6699: 33 0a 02                 a3 = 0x2
  6702: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6706: 28 3c                    jump @502
      :                          @495
  6708: 55 27 f0 00 0e           jump @497 if a0 >=u 240
      :                          @496
  6713: 33 0a 03                 a3 = 0x3
  6716: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6720: 28 2e                    jump @502
      :                          @497
  6722: 55 27 f8 00 0e           jump @499 if a0 >=u 248
      :                          @498
  6727: 33 0a 04                 a3 = 0x4
  6730: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6734: 28 20                    jump @502
      :                          @499
  6736: 55 27 fc 00 0e           jump @501 if a0 >=u 252
      :                          @500
  6741: 33 0a 05                 a3 = 0x5
  6744: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6748: 28 12                    jump @502
      :                          @501
  6750: 88 7a fe 00              a3 = a0 <u 0xfe
  6754: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6758: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6762: 85 aa 07                 a3 = a3 ^ 0x7
  6765: 01                       fallthrough
      :                          @502
  6766: ae 8a 2b                 jump @509 if a3 >=u a1
      :                          @503
  6769: 33 08                    a1 = 0
  6771: c8 b7 07                 a0 = a0 + a4
  6774: 64 ab                    a4 = a3
  6776: 01                       fallthrough
      :                          @504
  6777: c8 b9 0c                 a5 = a2 + a4
  6780: 7c cc                    a5 = u8 [a5]
  6782: 97 88 08                 a1 = a1 << 0x8
  6785: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6788: d4 c8 08                 a1 = a1 | a5
  6791: 52 0b f2                 jump @504 if a4 != 0
      :                          @505
  6794: 8a a9 03                 i32 a2 = a3 << 0x3
  6797: cf 97 07                 a0 = a0 << a2
  6800: c8 87 07                 a0 = a0 + a1
  6803: 32 00                    ret
      :                          @506
  6805: 32 00                    ret
      :                          @507
  6807: 00                       trap
      :                          @508
  6808: 00                       trap
      :                          @509
  6809: 00                       trap
      :                          @510 [@dyn 66]
  6810: 95 11 68 ff              sp = sp + 0xffffffffffffff68
  6814: 7b 10 90 00              u64 [sp + 0x90] = ra
  6818: 7b 15 88 00              u64 [sp + 0x88] = s0
  6822: 7b 16 80 00              u64 [sp + 0x80] = s1
  6826: 64 85                    s0 = a1
  6828: 82 86 28                 s1 = u64 [a1 + 0x28]
  6831: 82 8a 20                 a3 = u64 [a1 + 0x20]
  6834: 82 6b 18                 a4 = u64 [s1 + 0x18]
  6837: 7b 17 10                 u64 [sp + 0x10] = a0
  6840: 33 08 38 02 01           a1 = 0x10238
  6845: 33 09 01                 a2 = 0x1
  6848: 7b 1a 18                 u64 [sp + 0x18] = a3
  6851: 64 a7                    a0 = a3
  6853: 7b 1b 08                 u64 [sp + 0x8] = a4
  6856: b4 b0 02 86 00           ra = 134, jump [a4]
      :                          @511 [@dyn 67]
  6861: 51 07 09                 jump @513 if a0 == 0
      :                          @512
  6864: 33 09 01                 a2 = 0x1
  6867: 28 d2 00                 jump @525
      :                          @513
  6870: 80 58 34                 a1 = u32 [s0 + 0x34]
  6873: 84 87 04                 a0 = a1 & 0x4
  6876: 52 07 21                 jump @517 if a0 != 0
      :                          @514
  6879: 82 17 10                 a0 = u64 [sp + 0x10]
  6882: 64 58                    a1 = s0
  6884: 50 20 88 00 d5 00        ra = 136, jump @526
      :                          @515 [@dyn 68]
  6890: 33 09 01                 a2 = 0x1
  6893: 52 07 b8 00              jump @525 if a0 != 0
      :                          @516
  6897: 82 57 28                 a0 = u64 [s0 + 0x28]
  6900: 82 5a 20                 a3 = u64 [s0 + 0x20]
  6903: 82 7b 18                 a4 = u64 [a0 + 0x18]
  6906: 28 99 00                 jump @523
      :                          @517
  6909: 7b 18                    u64 [sp] = a1
  6911: 33 08 72 02 01           a1 = 0x10272
  6916: 33 09 01                 a2 = 0x1
  6919: 82 17 18                 a0 = u64 [sp + 0x18]
  6922: 82 1a 08                 a3 = u64 [sp + 0x8]
  6925: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @518 [@dyn 69]
  6930: 33 09 01                 a2 = 0x1
  6933: 82 18 18                 a1 = u64 [sp + 0x18]
  6936: 52 07 8d 00              jump @525 if a0 != 0
      :                          @519
  6940: 46 11 3f 01              u8 [sp + 63] = 0x1
  6944: 7b 18 20                 u64 [sp + 0x20] = a1
  6947: 7b 16 28                 u64 [sp + 0x28] = s1
  6950: 95 17 3f                 a0 = sp + 0x3f
  6953: 7b 17 30                 u64 [sp + 0x30] = a0
  6956: 81 57 30                 a0 = i32 [s0 + 0x30]
  6959: 7c 58 38                 a1 = u8 [s0 + 0x38]
  6962: 82 59                    a2 = u64 [s0]
  6964: 82 5a 08                 a3 = u64 [s0 + 0x8]
  6967: 82 5b 10                 a4 = u64 [s0 + 0x10]
  6970: 82 5c 18                 a5 = u64 [s0 + 0x18]
  6973: 82 16                    s1 = u64 [sp]
  6975: 7a 16 74                 u32 [sp + 0x74] = s1
  6978: 7a 17 70                 u32 [sp + 0x70] = a0
  6981: 78 18 78                 u8 [sp + 0x78] = a1
  6984: 7b 19 40                 u64 [sp + 0x40] = a2
  6987: 7b 1a 48                 u64 [sp + 0x48] = a3
  6990: 7b 1b 50                 u64 [sp + 0x50] = a4
  6993: 7b 1c 58                 u64 [sp + 0x58] = a5
  6996: 95 17 20                 a0 = sp + 0x20
  6999: 7b 17 60                 u64 [sp + 0x60] = a0
  7002: 33 07 40 02 01           a0 = 0x10240
  7007: 7b 17 68                 u64 [sp + 0x68] = a0
  7010: 95 18 40                 a1 = sp + 0x40
  7013: 82 17 10                 a0 = u64 [sp + 0x10]
  7016: 50 20 8c 00 51           ra = 140, jump @526
      :                          @520 [@dyn 70]
  7021: 52 07 63 ff              jump @512 if a0 != 0
      :                          @521
  7025: 82 18 68                 a1 = u64 [sp + 0x68]
  7028: 82 17 60                 a0 = u64 [sp + 0x60]
  7031: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7034: 33 08 70 02 01           a1 = 0x10270
  7039: 33 09 02                 a2 = 0x2
  7042: b4 a0 02 8e 00           ra = 142, jump [a3]
      :                          @522 [@dyn 71]
  7047: 82 1a 18                 a3 = u64 [sp + 0x18]
  7050: 82 1b 08                 a4 = u64 [sp + 0x8]
  7053: 33 09 01                 a2 = 0x1
  7056: 52 07 15                 jump @525 if a0 != 0
      :                          @523
  7059: 33 08 73 02 01           a1 = 0x10273
  7064: 33 09 01                 a2 = 0x1
  7067: 64 a7                    a0 = a3
  7069: b4 b0 02 90 00           ra = 144, jump [a4]
      :                          @524 [@dyn 72]
  7074: 64 79                    a2 = a0
  7076: 01                       fallthrough
      :                          @525
  7077: 64 97                    a0 = a2
  7079: 82 10 90 00              ra = u64 [sp + 0x90]
  7083: 82 15 88 00              s0 = u64 [sp + 0x88]
  7087: 82 16 80 00              s1 = u64 [sp + 0x80]
  7091: 95 11 98 00              sp = sp + 0x98
  7095: 32 00                    ret
      :                          @526
  7097: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  7101: 7b 10 80 00              u64 [sp + 0x80] = ra
  7105: 64 82                    t0 = a1
  7107: 80 88 34                 a1 = u32 [a1 + 0x34]
  7110: 84 89 10                 a2 = a1 & 0x10
  7113: 52 09 1b                 jump @529 if a2 != 0
      :                          @527
  7116: 84 88 20                 a1 = a1 & 0x20
  7119: 52 08 46                 jump @532 if a1 != 0
      :                          @528
  7122: 7c 77                    a0 = u8 [a0]
  7124: 33 08 01                 a1 = 0x1
  7127: 64 29                    a2 = t0
  7129: 82 10 80 00              ra = u64 [sp + 0x80]
  7133: 95 11 88 00              sp = sp + 0x88
  7137: 28 0b f6                 jump @330
      :                          @529
  7140: 7c 77                    a0 = u8 [a0]
  7142: 33 0a 81 00              a3 = 0x81
  7146: 95 18 7f                 a1 = sp + 0x7f
  7149: 33 03 57                 t1 = 0x57
  7152: 01                       fallthrough
      :                          @530
  7153: 64 ab                    a4 = a3
  7155: 84 7a 0f                 a3 = a0 & 0xf
  7158: 97 77 38                 a0 = a0 << 0x38
  7161: 98 77 3c                 a0 = a0 >> 0x3c
  7164: 88 ac 0a                 a5 = a3 <u 0xa
  7167: 33 09 30                 a2 = 0x30
  7170: da c3 09                 a2 = t1 if a5 == 0
  7173: be a9 09                 i32 a2 = a2 + a3
  7176: 78 89                    u8 [a1] = a2
  7178: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7181: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7184: 52 07 e1                 jump @530 if a0 != 0
      :                          @531
  7187: 28 31                    jump @534
      :                          @532
  7189: 7c 77                    a0 = u8 [a0]
  7191: 33 0a 81 00              a3 = 0x81
  7195: 95 18 7f                 a1 = sp + 0x7f
  7198: 33 03 37                 t1 = 0x37
  7201: 01                       fallthrough
      :                          @533
  7202: 64 ab                    a4 = a3
  7204: 84 7a 0f                 a3 = a0 & 0xf
  7207: 97 77 38                 a0 = a0 << 0x38
  7210: 98 77 3c                 a0 = a0 >> 0x3c
  7213: 88 ac 0a                 a5 = a3 <u 0xa
  7216: 33 09 30                 a2 = 0x30
  7219: da c3 09                 a2 = t1 if a5 == 0
  7222: be a9 09                 i32 a2 = a2 + a3
  7225: 78 89                    u8 [a1] = a2
  7227: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  7230: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
  7233: 52 07 e1                 jump @533 if a0 != 0
      :                          @534
  7236: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  7239: 56 27 80 00 2b           jump @537 if a0 >u 128
      :                          @535
  7244: 9a ac 81 00              a5 = 0x81 - a3
  7248: 64 1b                    a4 = sp
  7250: c8 7b 0b                 a4 = a4 + a0
  7253: 33 09 74 02 01           a2 = 0x10274
  7258: 33 08 01                 a1 = 0x1
  7261: 33 0a 02                 a3 = 0x2
  7264: 64 27                    a0 = t0
  7266: 50 20 92 00 b7 f6        ra = 146, jump @340
      :                          @536 [@dyn 73]
  7272: 82 10 80 00              ra = u64 [sp + 0x80]
  7276: 95 11 88 00              sp = sp + 0x88
  7280: 32 00                    ret
      :                          @537
  7282: 00                       trap
