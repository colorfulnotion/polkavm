// RO data = 322/324 bytes
// RW data = 8/65568 bytes
// Stack size = 65536 bytes
// RO data = [110, 117, 108, 108, 95, 97, 117, 116, 104, 111, 114, 105, 122, 101, 114, 32, 103, 97, 115, 32, 99, 97, 108, 108, 32, 32, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 58, 32, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 25, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1428
// Code size = 4119 bytes

      :                          @0
     0: 28 4a 03                 jump @83
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 64 82                    t0 = a1
    13: 80 88 34                 a1 = u32 [a1 + 0x34]
    16: 84 89 10                 a2 = a1 & 0x10
    19: 52 09 28                 jump @4 if a2 != 0
      :                          @2
    22: 84 88 20                 a1 = a1 & 0x20
    25: 52 08 52                 jump @7 if a1 != 0
      :                          @3
    28: 81 77                    a0 = i32 [a0]
    30: 89 79                    a2 = a0 <s 0
    32: 85 98 01                 a1 = a2 ^ 0x1
    35: 97 7a 20                 a3 = a0 << 0x20
    38: 98 aa 20                 a3 = a3 >> 0x20
    41: 9a 77                    a0 = -a0
    43: da 9a 07                 a0 = a3 if a2 == 0
    46: 64 29                    a2 = t0
    48: 82 10 80 00              ra = u64 [sp + 0x80]
    52: 95 11 88 00              sp = sp + 0x88
    56: 28 4e 0a                 jump @236
      :                          @4
    59: 81 7a                    a3 = i32 [a0]
    61: 33 08 81 00              a1 = 0x81
    65: 95 17 7f                 a0 = sp + 0x7f
    68: 33 03 57                 t1 = 0x57
    71: 01                       fallthrough
      :                          @5
    72: 64 8b                    a4 = a1
    74: 8b ac 04                 i32 a5 = a3 >> 0x4
    77: 84 aa 0f                 a3 = a3 & 0xf
    80: 88 a8 0a                 a1 = a3 <u 0xa
    83: 33 09 30                 a2 = 0x30
    86: da 83 09                 a2 = t1 if a1 == 0
    89: be a9 09                 i32 a2 = a2 + a3
    92: 78 79                    u8 [a0] = a2
    94: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    97: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   100: 64 ca                    a3 = a5
   102: 52 0c e2                 jump @5 if a5 != 0
      :                          @6
   105: 28 30                    jump @9
      :                          @7
   107: 81 7a                    a3 = i32 [a0]
   109: 33 08 81 00              a1 = 0x81
   113: 95 17 7f                 a0 = sp + 0x7f
   116: 33 03 37                 t1 = 0x37
   119: 01                       fallthrough
      :                          @8
   120: 64 8b                    a4 = a1
   122: 8b ac 04                 i32 a5 = a3 >> 0x4
   125: 84 aa 0f                 a3 = a3 & 0xf
   128: 88 a8 0a                 a1 = a3 <u 0xa
   131: 33 09 30                 a2 = 0x30
   134: da 83 09                 a2 = t1 if a1 == 0
   137: be a9 09                 i32 a2 = a2 + a3
   140: 78 79                    u8 [a0] = a2
   142: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   145: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   148: 64 ca                    a3 = a5
   150: 52 0c e2                 jump @8 if a5 != 0
      :                          @9
   153: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   156: 56 27 80 00 2a           jump @12 if a0 >u 128
      :                          @10
   161: 9a 8c 81 00              a5 = 0x81 - a1
   165: 64 1b                    a4 = sp
   167: c8 7b 0b                 a4 = a4 + a0
   170: 33 09 78 00 01           a2 = 0x10078
   175: 33 08 01                 a1 = 0x1
   178: 33 0a 02                 a3 = 0x2
   181: 64 27                    a0 = t0
   183: 50 10 04 fc 0a           ra = 4, jump @246
      :                          @11 [@dyn 2]
   188: 82 10 80 00              ra = u64 [sp + 0x80]
   192: 95 11 88 00              sp = sp + 0x88
   196: 32 00                    ret
      :                          @12
   198: 00                       trap
      :                          @13 [@dyn 3]
   199: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   203: 7b 10 80 00              u64 [sp + 0x80] = ra
   207: 64 82                    t0 = a1
   209: 80 88 34                 a1 = u32 [a1 + 0x34]
   212: 84 89 10                 a2 = a1 & 0x10
   215: 52 09 1b                 jump @16 if a2 != 0
      :                          @14
   218: 84 88 20                 a1 = a1 & 0x20
   221: 52 08 45                 jump @19 if a1 != 0
      :                          @15
   224: 82 77                    a0 = u64 [a0]
   226: 33 08 01                 a1 = 0x1
   229: 64 29                    a2 = t0
   231: 82 10 80 00              ra = u64 [sp + 0x80]
   235: 95 11 88 00              sp = sp + 0x88
   239: 28 97 09                 jump @236
      :                          @16
   242: 82 7a                    a3 = u64 [a0]
   244: 33 08 81 00              a1 = 0x81
   248: 95 17 7f                 a0 = sp + 0x7f
   251: 33 03 57                 t1 = 0x57
   254: 01                       fallthrough
      :                          @17
   255: 64 8b                    a4 = a1
   257: 98 ac 04                 a5 = a3 >> 0x4
   260: 84 aa 0f                 a3 = a3 & 0xf
   263: 88 a8 0a                 a1 = a3 <u 0xa
   266: 33 09 30                 a2 = 0x30
   269: da 83 09                 a2 = t1 if a1 == 0
   272: be a9 09                 i32 a2 = a2 + a3
   275: 78 79                    u8 [a0] = a2
   277: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   280: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   283: 64 ca                    a3 = a5
   285: 52 0c e2                 jump @17 if a5 != 0
      :                          @18
   288: 28 30                    jump @21
      :                          @19
   290: 82 7a                    a3 = u64 [a0]
   292: 33 08 81 00              a1 = 0x81
   296: 95 17 7f                 a0 = sp + 0x7f
   299: 33 03 37                 t1 = 0x37
   302: 01                       fallthrough
      :                          @20
   303: 64 8b                    a4 = a1
   305: 98 ac 04                 a5 = a3 >> 0x4
   308: 84 aa 0f                 a3 = a3 & 0xf
   311: 88 a8 0a                 a1 = a3 <u 0xa
   314: 33 09 30                 a2 = 0x30
   317: da 83 09                 a2 = t1 if a1 == 0
   320: be a9 09                 i32 a2 = a2 + a3
   323: 78 79                    u8 [a0] = a2
   325: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   328: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   331: 64 ca                    a3 = a5
   333: 52 0c e2                 jump @20 if a5 != 0
      :                          @21
   336: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   339: 56 27 80 00 2a           jump @24 if a0 >u 128
      :                          @22
   344: 9a 8c 81 00              a5 = 0x81 - a1
   348: 64 1b                    a4 = sp
   350: c8 7b 0b                 a4 = a4 + a0
   353: 33 09 78 00 01           a2 = 0x10078
   358: 33 08 01                 a1 = 0x1
   361: 33 0a 02                 a3 = 0x2
   364: 64 27                    a0 = t0
   366: 50 10 08 45 0a           ra = 8, jump @246
      :                          @23 [@dyn 4]
   371: 82 10 80 00              ra = u64 [sp + 0x80]
   375: 95 11 88 00              sp = sp + 0x88
   379: 32 00                    ret
      :                          @24
   381: 00                       trap
      :                          @25 [export #0: 'refine']
   382: 95 11 f8                 sp = sp + 0xfffffffffffffff8
   385: 7b 15                    u64 [sp] = s0
   387: 64 79                    a2 = a0
   389: 33 07 00 00 01           a0 = 0x10000
   394: 53 18 04 a4 01           jump @76 if a1 <u 4
      :                          @26
   399: 7d 9c                    a5 = i8 [a2]
   401: 84 cb ff 00              a4 = a5 & 0xff
   405: 33 0a 01                 a3 = 0x1
   408: 59 0c 40                 jump @33 if a5 >=s 0
      :                          @27
   411: 33 0c c0 00              a5 = 0xc0
   415: 33 0a 02                 a3 = 0x2
   418: ac cb 36                 jump @33 if a4 <u a5
      :                          @28
   421: 33 0c e0 00              a5 = 0xe0
   425: 33 0a 03                 a3 = 0x3
   428: ac cb 2c                 jump @33 if a4 <u a5
      :                          @29
   431: 33 0c f0 00              a5 = 0xf0
   435: 33 0a 04                 a3 = 0x4
   438: ac cb 22                 jump @33 if a4 <u a5
      :                          @30
   441: 33 0c f8 00              a5 = 0xf8
   445: 33 0a 05                 a3 = 0x5
   448: ac cb 18                 jump @33 if a4 <u a5
      :                          @31
   451: 33 0c fc 00              a5 = 0xfc
   455: 33 0a 06                 a3 = 0x6
   458: ac cb 0e                 jump @33 if a4 <u a5
      :                          @32
   461: 88 ba fe 00              a3 = a4 <u 0xfe
   465: 33 0c 08                 a5 = 0x8
   468: c9 ac 0a                 a3 = a5 - a3
   471: 01                       fallthrough
      :                          @33
   472: ac a8 56 01              jump @76 if a1 <u a3
      :                          @34
   476: 51 0b 52                 jump @45 if a4 == 0
      :                          @35
   479: 51 2b ff 00 66 01        jump @78 if a4 == 255
      :                          @36
   485: 6c bc                    a5 = sext.b a4
   487: 59 0c 47                 jump @45 if a5 >=s 0
      :                          @37
   490: 33 02 c0 00              t0 = 0xc0
   494: 33 0c 01                 a5 = 0x1
   497: ac 2b 33                 jump @43 if a4 <u t0
      :                          @38
   500: 33 02 e0 00              t0 = 0xe0
   504: 33 0c 02                 a5 = 0x2
   507: ac 2b 29                 jump @43 if a4 <u t0
      :                          @39
   510: 33 02 f0 00              t0 = 0xf0
   514: 33 0c 03                 a5 = 0x3
   517: ac 2b 1f                 jump @43 if a4 <u t0
      :                          @40
   520: 33 02 f8 00              t0 = 0xf8
   524: 33 0c 04                 a5 = 0x4
   527: ac 2b 15                 jump @43 if a4 <u t0
      :                          @41
   530: 33 02 fc 00              t0 = 0xfc
   534: 33 0c 05                 a5 = 0x5
   537: ac 2b 0b                 jump @43 if a4 <u t0
      :                          @42
   540: 88 bb fe 00              a4 = a4 <u 0xfe
   544: 85 bc 07                 a5 = a4 ^ 0x7
   547: 01                       fallthrough
      :                          @43
   548: ae ac 24 01              jump @81 if a5 >=u a3
      :                          @44
   552: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   555: 52 0c fd                 jump @44 if a5 != 0
      :                          @45
   558: c8 9a 05                 s0 = a3 + a2
   561: ab a8 0c                 jump @47 if a1 != a3
      :                          @46
   564: 33 08                    a1 = 0
   566: 33 09                    a2 = 0
   568: 33 0a                    a3 = 0
   570: 28 e8 00                 jump @75
      :                          @47
   573: 7d 5c                    a5 = i8 [s0]
   575: c9 a8 08                 a1 = a1 - a3
   578: 84 c4 ff 00              t2 = a5 & 0xff
   582: 33 09 01                 a2 = 0x1
   585: 59 0c 33                 jump @54 if a5 >=s 0
      :                          @48
   588: 33 09 02                 a2 = 0x2
   591: 53 24 c0 00 2d           jump @54 if t2 <u 192
      :                          @49
   596: 33 09 03                 a2 = 0x3
   599: 53 24 e0 00 25           jump @54 if t2 <u 224
      :                          @50
   604: 33 09 04                 a2 = 0x4
   607: 53 24 f0 00 1d           jump @54 if t2 <u 240
      :                          @51
   612: 33 09 05                 a2 = 0x5
   615: 53 24 f8 00 15           jump @54 if t2 <u 248
      :                          @52
   620: 33 09 06                 a2 = 0x6
   623: 53 24 fc 00 0d           jump @54 if t2 <u 252
      :                          @53
   628: 88 49 fe 00              a2 = t2 <u 0xfe
   632: 9a 99 08                 a2 = 0x8 - a2
   635: 01                       fallthrough
      :                          @54
   636: ac 98 ca 00              jump @79 if a1 <u a2
      :                          @55
   640: 51 04 14                 jump @59 if t2 == 0
      :                          @56
   643: 51 24 ff 00 c4 00        jump @80 if t2 == 255
      :                          @57
   649: 6c 4a                    a3 = sext.b t2
   651: 57 0a 14                 jump @60 if a3 <s 0
      :                          @58
   654: 33 03                    t1 = 0
   656: 33 0a                    a3 = 0
   658: 28 7e                    jump @74
      :                          @59
   660: 33 0a                    a3 = 0
   662: e4 98 08                 a1 = maxu(a1, a2)
   665: c9 98 08                 a1 = a1 - a2
   668: 28 86 00                 jump @75
      :                          @60
   671: 55 24 c0 00 0d           jump @62 if t2 >=u 192
      :                          @61
   676: 33 03 01                 t1 = 0x1
   679: 33 02 80                 t0 = 0xffffffffffffff80
   682: 28 4a                    jump @71
      :                          @62
   684: 55 24 e0 00 0e           jump @64 if t2 >=u 224
      :                          @63
   689: 33 03 02                 t1 = 0x2
   692: 33 02 40 ff              t0 = 0xffffffffffffff40
   696: 28 3c                    jump @71
      :                          @64
   698: 55 24 f0 00 0e           jump @66 if t2 >=u 240
      :                          @65
   703: 33 03 03                 t1 = 0x3
   706: 33 02 20 ff              t0 = 0xffffffffffffff20
   710: 28 2e                    jump @71
      :                          @66
   712: 55 24 f8 00 0e           jump @68 if t2 >=u 248
      :                          @67
   717: 33 03 04                 t1 = 0x4
   720: 33 02 10 ff              t0 = 0xffffffffffffff10
   724: 28 20                    jump @71
      :                          @68
   726: 55 24 fc 00 0e           jump @70 if t2 >=u 252
      :                          @69
   731: 33 03 05                 t1 = 0x5
   734: 33 02 08 ff              t0 = 0xffffffffffffff08
   738: 28 12                    jump @71
      :                          @70
   740: 88 4a fe 00              a3 = t2 <u 0xfe
   744: 33 02 04 ff              t0 = 0xffffffffffffff04
   748: 93 a2 02 ff              t0 = 0xffffffffffffff02 if a3 == 0
   752: 85 a3 07                 t1 = a3 ^ 0x7
   755: 01                       fallthrough
      :                          @71
   756: ae 93 55                 jump @82 if t1 >=u a2
      :                          @72
   759: 33 0a                    a3 = 0
   761: c8 24 04                 t2 = t2 + t0
   764: 64 3c                    a5 = t1
   766: 01                       fallthrough
      :                          @73
   767: c8 c5 0b                 a4 = s0 + a5
   770: 7c bb                    a4 = u8 [a4]
   772: 97 aa 08                 a3 = a3 << 0x8
   775: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
   778: d4 ba 0a                 a3 = a3 | a4
   781: 52 0c f2                 jump @73 if a5 != 0
      :                          @74
   784: 8a 3b 03                 i32 a4 = t1 << 0x3
   787: cf b4 0b                 a4 = t2 << a4
   790: c8 ba 0a                 a3 = a3 + a4
   793: e4 98 08                 a1 = maxu(a1, a2)
   796: c9 98 08                 a1 = a1 - a2
   799: ac a8 0f                 jump @76 if a1 <u a3
      :                          @75
   802: e4 a8 08                 a1 = maxu(a1, a3)
   805: c9 a8 08                 a1 = a1 - a3
   808: 33 0b 20                 a4 = 0x20
   811: ae b8 0e                 jump @77 if a1 >=u a4
      :                          @76
   814: 33 0a                    a3 = 0
   816: 33 08                    a1 = 0
   818: 82 15                    s0 = u64 [sp]
   820: 95 11 08                 sp = sp + 0x8
   823: 32 00                    ret
      :                          @77
   825: c8 59 07                 a0 = a2 + s0
   828: 64 a8                    a1 = a3
   830: 82 15                    s0 = u64 [sp]
   832: 95 11 08                 sp = sp + 0x8
   835: 32 00                    ret
      :                          @78
   837: 00                       trap
      :                          @79
   838: 00                       trap
      :                          @80
   839: 00                       trap
      :                          @81
   840: 00                       trap
      :                          @82
   841: 00                       trap
      :                          @83 [export #1: 'is_authorize']
   842: 95 11 50 ff              sp = sp + 0xffffffffffffff50
   846: 7b 10 a8 00              u64 [sp + 0xa8] = ra
   850: 7b 15 a0 00              u64 [sp + 0xa0] = s0
   854: 7b 16 98 00              u64 [sp + 0x98] = s1
   858: 49 11 18 ff ff fe        u64 [sp + 24] = 0xfffffffffffeffff
   864: 48 11 24                 u32 [sp + 36] = 0
   867: 0a                       ecalli 0 // 'gas'
   868: 7b 17 28                 u64 [sp + 0x28] = a0
   871: 95 17 24                 a0 = sp + 0x24
   874: 7b 17 78                 u64 [sp + 0x78] = a0
   877: 33 07 02                 a0 = 0x2
   880: 7b 17 10                 u64 [sp + 0x10] = a0
   883: 7b 17 80 00              u64 [sp + 0x80] = a0
   887: 95 17 28                 a0 = sp + 0x28
   890: 7b 17 88 00              u64 [sp + 0x88] = a0
   894: 33 07 06                 a0 = 0x6
   897: 7b 17 08                 u64 [sp + 0x8] = a0
   900: 7b 17 90 00              u64 [sp + 0x90] = a0
   904: 33 07 28 00 01           a0 = 0x10028
   909: 7b 17                    u64 [sp] = a0
   911: 7b 17 48                 u64 [sp + 0x48] = a0
   914: 49 11 50 02              u64 [sp + 80] = 0x2
   918: 49 11 68                 u64 [sp + 104] = 0
   921: 95 18 78                 a1 = sp + 0x78
   924: 7b 18 58                 u64 [sp + 0x58] = a1
   927: 49 11 60 02              u64 [sp + 96] = 0x2
   931: 95 17 30                 a0 = sp + 0x30
   934: 95 18 48                 a1 = sp + 0x48
   937: 50 10 0a c3 03           ra = 10, jump @166
      :                          @84 [@dyn 5]
   942: 82 15 38                 s0 = u64 [sp + 0x38]
   945: 82 1b 40                 a4 = u64 [sp + 0x40]
   948: 82 16 30                 s1 = u64 [sp + 0x30]
   951: 33 07 02                 a0 = 0x2
   954: 33 08                    a1 = 0
   956: 33 09                    a2 = 0
   958: 64 5a                    a3 = s0
   960: 33 00 0c                 ra = 0xc
   963: 0a 64                    ecalli 100 // 'log'
   965: 01                       fallthrough
      :                          @85 [@dyn 6]
   966: 82 17 18                 a0 = u64 [sp + 0x18]
   969: c8 67 07                 a0 = a0 + s1
   972: 53 37 00 00 ff 25        jump @91 if a0 <u 4294901760
      :                          @86
   978: 33 07 10 00 03           a0 = 0x30010
   983: 95 77 00 00 01           a0 = a0 + 0x10000
   988: 01                       fallthrough
      :                          @87
   989: 82 78                    a1 = u64 [a0]
   991: c9 87 09                 a2 = a0 - a1
   994: ab 59 0f                 jump @91 if a2 != s0
      :                          @88
   997: c9 68 09                 a2 = a1 - s1
  1000: 01                       fallthrough
      :                          @89
  1001: 82 7a                    a3 = u64 [a0]
  1003: ab 8a f2                 jump @87 if a3 != a1
      :                          @90
  1006: 7b 79                    u64 [a0] = a2
  1008: 01                       fallthrough
      :                          @91
  1009: 48 11 24 01              u32 [sp + 36] = 0x1
  1013: 0a                       ecalli 0 // 'gas'
  1014: 7b 17 28                 u64 [sp + 0x28] = a0
  1017: 95 17 24                 a0 = sp + 0x24
  1020: 7b 17 78                 u64 [sp + 0x78] = a0
  1023: 82 17 10                 a0 = u64 [sp + 0x10]
  1026: 7b 17 80 00              u64 [sp + 0x80] = a0
  1030: 95 17 28                 a0 = sp + 0x28
  1033: 7b 17 88 00              u64 [sp + 0x88] = a0
  1037: 82 17 08                 a0 = u64 [sp + 0x8]
  1040: 7b 17 90 00              u64 [sp + 0x90] = a0
  1044: 82 17                    a0 = u64 [sp]
  1046: 7b 17 48                 u64 [sp + 0x48] = a0
  1049: 49 11 50 02              u64 [sp + 80] = 0x2
  1053: 49 11 68                 u64 [sp + 104] = 0
  1056: 95 18 78                 a1 = sp + 0x78
  1059: 7b 18 58                 u64 [sp + 0x58] = a1
  1062: 49 11 60 02              u64 [sp + 96] = 0x2
  1066: 95 17 30                 a0 = sp + 0x30
  1069: 95 18 48                 a1 = sp + 0x48
  1072: 50 10 0e 3c 03           ra = 14, jump @166
      :                          @92 [@dyn 7]
  1077: 82 15 38                 s0 = u64 [sp + 0x38]
  1080: 82 1b 40                 a4 = u64 [sp + 0x40]
  1083: 82 16 30                 s1 = u64 [sp + 0x30]
  1086: 33 07 02                 a0 = 0x2
  1089: 33 08                    a1 = 0
  1091: 33 09                    a2 = 0
  1093: 64 5a                    a3 = s0
  1095: 33 00 10                 ra = 0x10
  1098: 0a 64                    ecalli 100 // 'log'
  1100: 01                       fallthrough
      :                          @93 [@dyn 8]
  1101: 82 17 18                 a0 = u64 [sp + 0x18]
  1104: c8 67 07                 a0 = a0 + s1
  1107: 53 37 00 00 ff 25        jump @99 if a0 <u 4294901760
      :                          @94
  1113: 33 07 10 00 03           a0 = 0x30010
  1118: 95 77 00 00 01           a0 = a0 + 0x10000
  1123: 01                       fallthrough
      :                          @95
  1124: 82 78                    a1 = u64 [a0]
  1126: c9 87 09                 a2 = a0 - a1
  1129: ab 59 0f                 jump @99 if a2 != s0
      :                          @96
  1132: c9 68 09                 a2 = a1 - s1
  1135: 01                       fallthrough
      :                          @97
  1136: 82 7a                    a3 = u64 [a0]
  1138: ab 8a f2                 jump @95 if a3 != a1
      :                          @98
  1141: 7b 79                    u64 [a0] = a2
  1143: 01                       fallthrough
      :                          @99
  1144: 33 05 02                 s0 = 0x2
  1147: 7a 15 24                 u32 [sp + 0x24] = s0
  1150: 0a                       ecalli 0 // 'gas'
  1151: 7b 17 28                 u64 [sp + 0x28] = a0
  1154: 95 17 24                 a0 = sp + 0x24
  1157: 7b 17 78                 u64 [sp + 0x78] = a0
  1160: 33 07 02                 a0 = 0x2
  1163: 7b 17 80 00              u64 [sp + 0x80] = a0
  1167: 95 17 28                 a0 = sp + 0x28
  1170: 7b 17 88 00              u64 [sp + 0x88] = a0
  1174: 33 07 06                 a0 = 0x6
  1177: 7b 17 90 00              u64 [sp + 0x90] = a0
  1181: 33 07 28 00 01           a0 = 0x10028
  1186: 7b 17 48                 u64 [sp + 0x48] = a0
  1189: 7b 15 50                 u64 [sp + 0x50] = s0
  1192: 49 11 68                 u64 [sp + 104] = 0
  1195: 95 17 78                 a0 = sp + 0x78
  1198: 7b 17 58                 u64 [sp + 0x58] = a0
  1201: 7b 15 60                 u64 [sp + 0x60] = s0
  1204: 95 17 30                 a0 = sp + 0x30
  1207: 95 18 48                 a1 = sp + 0x48
  1210: 50 10 12 b2 02           ra = 18, jump @166
      :                          @100 [@dyn 9]
  1215: 82 15 38                 s0 = u64 [sp + 0x38]
  1218: 82 1b 40                 a4 = u64 [sp + 0x40]
  1221: 82 16 30                 s1 = u64 [sp + 0x30]
  1224: 33 07 02                 a0 = 0x2
  1227: 33 08                    a1 = 0
  1229: 33 09                    a2 = 0
  1231: 64 5a                    a3 = s0
  1233: 33 00 14                 ra = 0x14
  1236: 0a 64                    ecalli 100 // 'log'
  1238: 01                       fallthrough
      :                          @101 [@dyn 10]
  1239: 82 17 18                 a0 = u64 [sp + 0x18]
  1242: c8 67 07                 a0 = a0 + s1
  1245: 53 37 00 00 ff 27        jump @107 if a0 <u 4294901760
      :                          @102
  1251: 33 07 10 00 03           a0 = 0x30010
  1256: 95 77 00 00 01           a0 = a0 + 0x10000
  1261: 01                       fallthrough
      :                          @103
  1262: 82 78                    a1 = u64 [a0]
  1264: c9 87 09                 a2 = a0 - a1
  1267: ab 59 11                 jump @107 if a2 != s0
      :                          @104
  1270: c9 68 09                 a2 = a1 - s1
  1273: 01                       fallthrough
      :                          @105
  1274: 82 7a                    a3 = u64 [a0]
  1276: ab 8a f2                 jump @103 if a3 != a1
      :                          @106
  1279: 7b 79                    u64 [a0] = a2
  1281: 33 0b                    a4 = 0
  1283: 01                       fallthrough
      :                          @107
  1284: 33 07 00 00 01           a0 = 0x10000
  1289: 33 08                    a1 = 0
  1291: 82 10 a8 00              ra = u64 [sp + 0xa8]
  1295: 82 15 a0 00              s0 = u64 [sp + 0xa0]
  1299: 82 16 98 00              s1 = u64 [sp + 0x98]
  1303: 95 11 b0 00              sp = sp + 0xb0
  1307: 32 00                    ret
      :                          @108 [export #2: 'accumulate']
  1309: 33 07 00 00 01           a0 = 0x10000
  1314: 33 08                    a1 = 0
  1316: 32 00                    ret
      :                          @109 [export #3: 'on_transfer']
  1318: 33 07 00 00 01           a0 = 0x10000
  1323: 33 08                    a1 = 0
  1325: 32 00                    ret
      :                          @110
  1327: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1330: 7b 10 40                 u64 [sp + 0x40] = ra
  1333: 7b 15 38                 u64 [sp + 0x38] = s0
  1336: 7b 16 30                 u64 [sp + 0x30] = s1
  1339: c8 89 09                 a2 = a2 + a1
  1342: ac 89 52                 jump @118 if a2 <u a1
      :                          @111
  1345: 64 75                    s0 = a0
  1347: 82 77                    a0 = u64 [a0]
  1349: 97 78 01                 a1 = a0 << 0x1
  1352: 33 0a 08                 a3 = 0x8
  1355: e4 a9 09                 a2 = maxu(a2, a3)
  1358: e4 98 06                 s1 = maxu(a1, a2)
  1361: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1364: 98 88 3f                 a1 = a1 >> 0x3f
  1367: 51 07 12                 jump @113 if a0 == 0
      :                          @112
  1370: 82 59 08                 a2 = u64 [s0 + 0x8]
  1373: 7b 19 18                 u64 [sp + 0x18] = a2
  1376: 49 11 20 01              u64 [sp + 32] = 0x1
  1380: 7b 17 28                 u64 [sp + 0x28] = a0
  1383: 28 06                    jump @114
      :                          @113
  1385: 49 11 20                 u64 [sp + 32] = 0
  1388: 01                       fallthrough
      :                          @114
  1389: 64 17                    a0 = sp
  1391: 95 1a 18                 a3 = sp + 0x18
  1394: 64 69                    a2 = s1
  1396: 50 10 16 32              ra = 22, jump @122
      :                          @115 [@dyn 11]
  1400: 82 18                    a1 = u64 [sp]
  1402: 82 17 08                 a0 = u64 [sp + 0x8]
  1405: 51 08 14                 jump @119 if a1 == 0
      :                          @116
  1408: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1418: aa 87 0d                 jump @120 if a0 == a1
      :                          @117
  1421: 52 07 18                 jump @121 if a0 != 0
      :                          @118
  1424: 00                       trap
      :                          @119
  1425: 7b 57 08                 u64 [s0 + 0x8] = a0
  1428: 7b 56                    u64 [s0] = s1
  1430: 01                       fallthrough
      :                          @120
  1431: 82 10 40                 ra = u64 [sp + 0x40]
  1434: 82 15 38                 s0 = u64 [sp + 0x38]
  1437: 82 16 30                 s1 = u64 [sp + 0x30]
  1440: 95 11 48                 sp = sp + 0x48
  1443: 32 00                    ret
      :                          @121
  1445: 00                       trap
      :                          @122
  1446: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1449: 7b 10 30                 u64 [sp + 0x30] = ra
  1452: 7b 15 28                 u64 [sp + 0x28] = s0
  1455: 7b 16 20                 u64 [sp + 0x20] = s1
  1458: 64 95                    s0 = a2
  1460: 64 72                    t0 = a0
  1462: 51 08 79                 jump @132 if a1 == 0
      :                          @123
  1465: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1468: 51 07 7c                 jump @133 if a0 == 0
      :                          @124
  1471: 82 a9 10                 a2 = u64 [a3 + 0x10]
  1474: 51 09 aa 00              jump @140 if a2 == 0
      :                          @125
  1478: 82 a8                    a1 = u64 [a3]
  1480: 33 06 10 00 03           s1 = 0x30010
  1485: 33 03 00 00 01           t1 = 0x10000
  1490: c8 36 06                 s1 = s1 + t1
  1493: 01                       fallthrough
      :                          @126
  1494: 82 6a                    a3 = u64 [s1]
  1496: c8 5a 07                 a0 = a3 + s0
  1499: ac a7 cf 00              jump @146 if a0 <u a3
      :                          @127
  1503: 95 7b 01                 a4 = a0 + 0x1
  1506: 88 bc 01                 a5 = a4 <u 0x1
  1509: d8 b3 0b                 a4 = t1 <u a4
  1512: d4 cb 0b                 a4 = a4 | a5
  1515: 52 0b bf 00              jump @146 if a4 != 0
      :                          @128
  1519: 82 6b                    a4 = u64 [s1]
  1521: ab ab e5                 jump @126 if a4 != a3
      :                          @129
  1524: 7b 67                    u64 [s1] = a0
  1526: 33 0c                    a5 = 0
  1528: 7b 12 18                 u64 [sp + 0x18] = t0
  1531: 33 0a 10 00 03           a3 = 0x30010
  1536: 33 0b 00 00 01           a4 = 0x10000
  1541: 7b 1a                    u64 [sp] = a3
  1543: c8 ba 0a                 a3 = a3 + a4
  1546: c9 7a 07                 a0 = a3 - a0
  1549: 7b 17 10                 u64 [sp + 0x10] = a0
  1552: 7b 18 08                 u64 [sp + 0x8] = a1
  1555: 64 96                    s1 = a2
  1557: 50 10 18 bb 03           ra = 24, jump @216
      :                          @130 [@dyn 12]
  1562: 54 36 00 00 01 98 00     jump @147 if s1 <=u 65536
      :                          @131
  1569: 82 12 18                 t0 = u64 [sp + 0x18]
  1572: 82 18 10                 a1 = u64 [sp + 0x10]
  1575: 33 07                    a0 = 0
  1577: 7b 28 08                 u64 [t0 + 0x8] = a1
  1580: 28 b5 00                 jump @153
      :                          @132
  1583: 49 12 08                 u64 [t0 + 8] = 0
  1586: 33 07 01                 a0 = 0x1
  1589: 28 ac 00                 jump @153
      :                          @133
  1592: 33 09 10 00 03           a2 = 0x30010
  1597: 33 07 00 00 01           a0 = 0x10000
  1602: c8 79 09                 a2 = a2 + a0
  1605: 01                       fallthrough
      :                          @134
  1606: 82 9a                    a3 = u64 [a2]
  1608: c8 5a 08                 a1 = a3 + s0
  1611: ac a8 5f                 jump @146 if a1 <u a3
      :                          @135
  1614: 95 8b 01                 a4 = a1 + 0x1
  1617: 88 bc 01                 a5 = a4 <u 0x1
  1620: d8 b7 0b                 a4 = a0 <u a4
  1623: d4 cb 0b                 a4 = a4 | a5
  1626: 52 0b 50                 jump @146 if a4 != 0
      :                          @136
  1629: 82 9b                    a4 = u64 [a2]
  1631: ab ab e7                 jump @134 if a4 != a3
      :                          @137
  1634: 7b 98                    u64 [a2] = a1
  1636: 33 0c                    a5 = 0
  1638: 01                       fallthrough
      :                          @138
  1639: ab ab df                 jump @134 if a4 != a3
      :                          @139
  1642: 28 31                    jump @145
      :                          @140
  1644: 33 09 10 00 03           a2 = 0x30010
  1649: 33 07 00 00 01           a0 = 0x10000
  1654: c8 79 09                 a2 = a2 + a0
  1657: 01                       fallthrough
      :                          @141
  1658: 82 9a                    a3 = u64 [a2]
  1660: c8 5a 08                 a1 = a3 + s0
  1663: ac a8 2b                 jump @146 if a1 <u a3
      :                          @142
  1666: 95 8b 01                 a4 = a1 + 0x1
  1669: 88 bc 01                 a5 = a4 <u 0x1
  1672: d8 b7 0b                 a4 = a0 <u a4
  1675: d4 cb 0b                 a4 = a4 | a5
  1678: 52 0b 1c                 jump @146 if a4 != 0
      :                          @143
  1681: 82 9b                    a4 = u64 [a2]
  1683: ab ab e7                 jump @141 if a4 != a3
      :                          @144
  1686: 7b 98                    u64 [a2] = a1
  1688: 33 0c                    a5 = 0
  1690: 01                       fallthrough
      :                          @145
  1691: 33 07 10 00 04           a0 = 0x40010
  1696: c9 87 08                 a1 = a0 - a1
  1699: 33 07                    a0 = 0
  1701: 7b 28 08                 u64 [t0 + 0x8] = a1
  1704: 28 39                    jump @153
      :                          @146
  1706: 33 07 01                 a0 = 0x1
  1709: 7b 27 08                 u64 [t0 + 0x8] = a0
  1712: 28 31                    jump @153
      :                          @147
  1714: 64 6c                    a5 = s1
  1716: 82 17                    a0 = u64 [sp]
  1718: 95 77 00 00 01           a0 = a0 + 0x10000
  1723: 82 12 18                 t0 = u64 [sp + 0x18]
  1726: 82 16 08                 s1 = u64 [sp + 0x8]
  1729: 01                       fallthrough
      :                          @148
  1730: 82 78                    a1 = u64 [a0]
  1732: c9 87 09                 a2 = a0 - a1
  1735: ab 69 11                 jump @152 if a2 != s1
      :                          @149
  1738: c9 c8 09                 a2 = a1 - a5
  1741: 01                       fallthrough
      :                          @150
  1742: 82 7a                    a3 = u64 [a0]
  1744: ab 8a f2                 jump @148 if a3 != a1
      :                          @151
  1747: 7b 79                    u64 [a0] = a2
  1749: 33 0b                    a4 = 0
  1751: 01                       fallthrough
      :                          @152
  1752: 82 18 10                 a1 = u64 [sp + 0x10]
  1755: 33 07                    a0 = 0
  1757: 7b 28 08                 u64 [t0 + 0x8] = a1
  1760: 01                       fallthrough
      :                          @153
  1761: 7b 25 10                 u64 [t0 + 0x10] = s0
  1764: 7b 27                    u64 [t0] = a0
  1766: 82 10 30                 ra = u64 [sp + 0x30]
  1769: 82 15 28                 s0 = u64 [sp + 0x28]
  1772: 82 16 20                 s1 = u64 [sp + 0x20]
  1775: 95 11 38                 sp = sp + 0x38
  1778: 32 00                    ret
      :                          @154
  1780: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1783: 7b 10 40                 u64 [sp + 0x40] = ra
  1786: 7b 15 38                 u64 [sp + 0x38] = s0
  1789: 7b 16 30                 u64 [sp + 0x30] = s1
  1792: 95 88 01                 a1 = a1 + 0x1
  1795: 51 08 53                 jump @162 if a1 == 0
      :                          @155
  1798: 64 75                    s0 = a0
  1800: 82 77                    a0 = u64 [a0]
  1802: 97 79 01                 a2 = a0 << 0x1
  1805: 33 0a 08                 a3 = 0x8
  1808: e4 a8 08                 a1 = maxu(a1, a3)
  1811: e4 89 06                 s1 = maxu(a2, a1)
  1814: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1817: 98 88 3f                 a1 = a1 >> 0x3f
  1820: 51 07 12                 jump @157 if a0 == 0
      :                          @156
  1823: 82 59 08                 a2 = u64 [s0 + 0x8]
  1826: 7b 19 18                 u64 [sp + 0x18] = a2
  1829: 49 11 20 01              u64 [sp + 32] = 0x1
  1833: 7b 17 28                 u64 [sp + 0x28] = a0
  1836: 28 06                    jump @158
      :                          @157
  1838: 49 11 20                 u64 [sp + 32] = 0
  1841: 01                       fallthrough
      :                          @158
  1842: 64 17                    a0 = sp
  1844: 95 1a 18                 a3 = sp + 0x18
  1847: 64 69                    a2 = s1
  1849: 50 10 1a 6d fe           ra = 26, jump @122
      :                          @159 [@dyn 13]
  1854: 82 18                    a1 = u64 [sp]
  1856: 82 17 08                 a0 = u64 [sp + 0x8]
  1859: 51 08 14                 jump @163 if a1 == 0
      :                          @160
  1862: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1872: aa 87 0d                 jump @164 if a0 == a1
      :                          @161
  1875: 52 07 18                 jump @165 if a0 != 0
      :                          @162
  1878: 00                       trap
      :                          @163
  1879: 7b 57 08                 u64 [s0 + 0x8] = a0
  1882: 7b 56                    u64 [s0] = s1
  1884: 01                       fallthrough
      :                          @164
  1885: 82 10 40                 ra = u64 [sp + 0x40]
  1888: 82 15 38                 s0 = u64 [sp + 0x38]
  1891: 82 16 30                 s1 = u64 [sp + 0x30]
  1894: 95 11 48                 sp = sp + 0x48
  1897: 32 00                    ret
      :                          @165
  1899: 00                       trap
      :                          @166
  1900: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1903: 7b 10 30                 u64 [sp + 0x30] = ra
  1906: 7b 15 28                 u64 [sp + 0x28] = s0
  1909: 7b 16 20                 u64 [sp + 0x20] = s1
  1912: 82 8a 08                 a3 = u64 [a1 + 0x8]
  1915: 64 75                    s0 = a0
  1917: 51 0a 35                 jump @171 if a3 == 0
      :                          @167
  1920: 82 89                    a2 = u64 [a1]
  1922: 33 07                    a0 = 0
  1924: 95 9b 08                 a4 = a2 + 0x8
  1927: 01                       fallthrough
      :                          @168
  1928: 82 bc                    a5 = u64 [a4]
  1930: c8 c7 07                 a0 = a0 + a5
  1933: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1936: 95 bb 10                 a4 = a4 + 0x10
  1939: 52 0a f5                 jump @168 if a3 != 0
      :                          @169
  1942: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1945: 51 0a 24                 jump @173 if a3 == 0
      :                          @170
  1948: 82 99 08                 a2 = u64 [a2 + 0x8]
  1951: 8e 99                    a2 = a2 >u 0
  1953: 88 7a 10                 a3 = a0 <u 0x10
  1956: 85 aa 01                 a3 = a3 ^ 0x1
  1959: d4 a9 09                 a2 = a2 | a3
  1962: 89 7a                    a3 = a0 <s 0
  1964: e0 a9 09                 a2 = a2 & ~a3
  1967: 52 09 0a                 jump @172 if a2 != 0
      :                          @171
  1970: 33 07                    a0 = 0
  1972: 33 09 01                 a2 = 0x1
  1975: 28 4a                    jump @181
      :                          @172
  1977: 97 77 01                 a0 = a0 << 0x1
  1980: 01                       fallthrough
      :                          @173
  1981: 51 07 40                 jump @180 if a0 == 0
      :                          @174
  1984: 57 07 73                 jump @186 if a0 <s 0
      :                          @175
  1987: 64 52                    t0 = s0
  1989: 33 0b 10 00 03           a4 = 0x30010
  1994: 33 09 00 00 01           a2 = 0x10000
  1999: c8 9b 0b                 a4 = a4 + a2
  2002: 01                       fallthrough
      :                          @176
  2003: 82 bc                    a5 = u64 [a4]
  2005: c8 7c 0a                 a3 = a5 + a0
  2008: ac ca 59                 jump @184 if a3 <u a5
      :                          @177
  2011: 95 a5 01                 s0 = a3 + 0x1
  2014: 88 56 01                 s1 = s0 <u 0x1
  2017: d8 59 05                 s0 = a2 <u s0
  2020: d4 65 05                 s0 = s0 | s1
  2023: 52 05 4a                 jump @184 if s0 != 0
      :                          @178
  2026: 82 b6                    s1 = u64 [a4]
  2028: ab c6 e7                 jump @176 if s1 != a5
      :                          @179
  2031: 7b ba                    u64 [a4] = a3
  2033: 33 09 10 00 04           a2 = 0x40010
  2038: c9 a9 09                 a2 = a2 - a3
  2041: 64 25                    s0 = t0
  2043: 28 06                    jump @181
      :                          @180
  2045: 33 09 01                 a2 = 0x1
  2048: 01                       fallthrough
      :                          @181
  2049: 7b 17                    u64 [sp] = a0
  2051: 7b 19 08                 u64 [sp + 0x8] = a2
  2054: 49 11 10                 u64 [sp + 16] = 0
  2057: 64 17                    a0 = sp
  2059: 50 10 1c 29 06           ra = 28, jump @300
      :                          @182 [@dyn 14]
  2064: 52 07 22                 jump @185 if a0 != 0
      :                          @183
  2067: 82 17 10                 a0 = u64 [sp + 0x10]
  2070: 82 18 08                 a1 = u64 [sp + 0x8]
  2073: 82 19                    a2 = u64 [sp]
  2075: 7b 57 10                 u64 [s0 + 0x10] = a0
  2078: 7b 58 08                 u64 [s0 + 0x8] = a1
  2081: 7b 59                    u64 [s0] = a2
  2083: 82 10 30                 ra = u64 [sp + 0x30]
  2086: 82 15 28                 s0 = u64 [sp + 0x28]
  2089: 82 16 20                 s1 = u64 [sp + 0x20]
  2092: 95 11 38                 sp = sp + 0x38
  2095: 32 00                    ret
      :                          @184
  2097: 00                       trap
      :                          @185
  2098: 00                       trap
      :                          @186
  2099: 00                       trap
      :                          @187 [@dyn 15]
  2100: 82 72                    t0 = u64 [a0]
  2102: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  2107: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  2112: ac 9a 28                 jump @193 if a3 <u a2
      :                          @188
  2115: 82 77 08                 a0 = u64 [a0 + 0x8]
  2118: 33 09 10 00 03           a2 = 0x30010
  2123: 95 99 00 00 01           a2 = a2 + 0x10000
  2128: 01                       fallthrough
      :                          @189
  2129: 82 9a                    a3 = u64 [a2]
  2131: c9 a9 0b                 a4 = a2 - a3
  2134: ab 7b 12                 jump @193 if a4 != a0
      :                          @190
  2137: c9 2a 0b                 a4 = a3 - t0
  2140: 01                       fallthrough
      :                          @191
  2141: 82 9c                    a5 = u64 [a2]
  2143: ab ac f2                 jump @189 if a5 != a3
      :                          @192
  2146: 7b 9b                    u64 [a2] = a4
  2148: 33 08                    a1 = 0
  2150: 32 00                    ret
      :                          @193
  2152: 32 00                    ret
      :                          @194 [@dyn 16]
  2154: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2157: 7b 10 18                 u64 [sp + 0x18] = ra
  2160: 7b 15 10                 u64 [sp + 0x10] = s0
  2163: 7b 16 08                 u64 [sp + 0x8] = s1
  2166: 64 75                    s0 = a0
  2168: 82 7a 10                 a3 = u64 [a0 + 0x10]
  2171: 82 77                    a0 = u64 [a0]
  2173: c9 a7 07                 a0 = a0 - a3
  2176: 64 96                    s1 = a2
  2178: ac 97 2a                 jump @197 if a0 <u a2
      :                          @195
  2181: 7b 1a                    u64 [sp] = a3
  2183: 82 57 08                 a0 = u64 [s0 + 0x8]
  2186: c8 a7 07                 a0 = a0 + a3
  2189: 64 69                    a2 = s1
  2191: 50 10 22 41 01           ra = 34, jump @216
      :                          @196 [@dyn 17]
  2196: 82 17                    a0 = u64 [sp]
  2198: c8 76 06                 s1 = s1 + a0
  2201: 7b 56 10                 u64 [s0 + 0x10] = s1
  2204: 33 07                    a0 = 0
  2206: 82 10 18                 ra = u64 [sp + 0x18]
  2209: 82 15 10                 s0 = u64 [sp + 0x10]
  2212: 82 16 08                 s1 = u64 [sp + 0x8]
  2215: 95 11 20                 sp = sp + 0x20
  2218: 32 00                    ret
      :                          @197
  2220: 64 57                    a0 = s0
  2222: 7b 18                    u64 [sp] = a1
  2224: 64 a8                    a1 = a3
  2226: 64 69                    a2 = s1
  2228: 50 10 24 7b fc           ra = 36, jump @110
      :                          @198 [@dyn 18]
  2233: 82 18                    a1 = u64 [sp]
  2235: 82 5a 10                 a3 = u64 [s0 + 0x10]
  2238: 28 c7                    jump @195
      :                          @199 [@dyn 19]
  2240: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  2243: 7b 10 20                 u64 [sp + 0x20] = ra
  2246: 7b 15 18                 u64 [sp + 0x18] = s0
  2249: 7b 16 10                 u64 [sp + 0x10] = s1
  2252: 64 86                    s1 = a1
  2254: 83 88                    i32 a1 = a1 + 0
  2256: 33 09 80 00              a2 = 0x80
  2260: 64 7a                    a3 = a0
  2262: ae 98 2b                 jump @204 if a1 >=u a2
      :                          @200
  2265: 82 a8 10                 a1 = u64 [a3 + 0x10]
  2268: 82 a7                    a0 = u64 [a3]
  2270: ab 78 12                 jump @203 if a1 != a0
      :                          @201
  2273: 64 a7                    a0 = a3
  2275: 64 a5                    s0 = a3
  2277: 50 10 28 0f fe           ra = 40, jump @154
      :                          @202 [@dyn 20]
  2282: 64 5a                    a3 = s0
  2284: 82 58 10                 a1 = u64 [s0 + 0x10]
  2287: 01                       fallthrough
      :                          @203
  2288: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2291: c8 87 07                 a0 = a0 + a1
  2294: 78 76                    u8 [a0] = s1
  2296: 95 88 01                 a1 = a1 + 0x1
  2299: 7b a8 10                 u64 [a3 + 0x10] = a1
  2302: 28 ab 00                 jump @212
      :                          @204
  2305: 8b 67 0b                 i32 a0 = s1 >> 0xb
  2308: 48 11 0c                 u32 [sp + 12] = 0
  2311: 52 07 1c                 jump @206 if a0 != 0
      :                          @205
  2314: 98 67 06                 a0 = s1 >> 0x6
  2317: 86 77 c0 00              a0 = a0 | 0xc0
  2321: 78 17 0c                 u8 [sp + 0xc] = a0
  2324: 84 67 3f                 a0 = s1 & 0x3f
  2327: 86 77 80 00              a0 = a0 | 0x80
  2331: 78 17 0d                 u8 [sp + 0xd] = a0
  2334: 33 06 02                 s1 = 0x2
  2337: 28 63                    jump @209
      :                          @206
  2339: 8b 67 10                 i32 a0 = s1 >> 0x10
  2342: 52 07 29                 jump @208 if a0 != 0
      :                          @207
  2345: 98 67 0c                 a0 = s1 >> 0xc
  2348: 86 77 e0 00              a0 = a0 | 0xe0
  2352: 78 17 0c                 u8 [sp + 0xc] = a0
  2355: 97 67 34                 a0 = s1 << 0x34
  2358: 98 77 3a                 a0 = a0 >> 0x3a
  2361: 95 77 80 00              a0 = a0 + 0x80
  2365: 78 17 0d                 u8 [sp + 0xd] = a0
  2368: 84 67 3f                 a0 = s1 & 0x3f
  2371: 86 77 80 00              a0 = a0 | 0x80
  2375: 78 17 0e                 u8 [sp + 0xe] = a0
  2378: 33 06 03                 s1 = 0x3
  2381: 28 37                    jump @209
      :                          @208
  2383: 97 67 2b                 a0 = s1 << 0x2b
  2386: 98 77 3d                 a0 = a0 >> 0x3d
  2389: 95 77 f0 00              a0 = a0 + 0xf0
  2393: 78 17 0c                 u8 [sp + 0xc] = a0
  2396: 97 67 2e                 a0 = s1 << 0x2e
  2399: 98 77 3a                 a0 = a0 >> 0x3a
  2402: 95 77 80 00              a0 = a0 + 0x80
  2406: 78 17 0d                 u8 [sp + 0xd] = a0
  2409: 97 67 34                 a0 = s1 << 0x34
  2412: 98 77 3a                 a0 = a0 >> 0x3a
  2415: 95 77 80 00              a0 = a0 + 0x80
  2419: 78 17 0e                 u8 [sp + 0xe] = a0
  2422: 84 67 3f                 a0 = s1 & 0x3f
  2425: 86 77 80 00              a0 = a0 | 0x80
  2429: 78 17 0f                 u8 [sp + 0xf] = a0
  2432: 33 06 04                 s1 = 0x4
  2435: 01                       fallthrough
      :                          @209
  2436: 82 a5 10                 s0 = u64 [a3 + 0x10]
  2439: 82 a7                    a0 = u64 [a3]
  2441: c9 57 07                 a0 = a0 - s0
  2444: ac 67 2d                 jump @213 if a0 <u s1
      :                          @210
  2447: 7b 1a                    u64 [sp] = a3
  2449: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2452: c8 57 07                 a0 = a0 + s0
  2455: 95 18 0c                 a1 = sp + 0xc
  2458: 64 69                    a2 = s1
  2460: 50 10 2a 34              ra = 42, jump @216
      :                          @211 [@dyn 21]
  2464: c8 56 06                 s1 = s1 + s0
  2467: 82 17                    a0 = u64 [sp]
  2469: 7b 76 10                 u64 [a0 + 0x10] = s1
  2472: 01                       fallthrough
      :                          @212
  2473: 33 07                    a0 = 0
  2475: 82 10 20                 ra = u64 [sp + 0x20]
  2478: 82 15 18                 s0 = u64 [sp + 0x18]
  2481: 82 16 10                 s1 = u64 [sp + 0x10]
  2484: 95 11 28                 sp = sp + 0x28
  2487: 32 00                    ret
      :                          @213
  2489: 64 a7                    a0 = a3
  2491: 64 58                    a1 = s0
  2493: 64 69                    a2 = s1
  2495: 64 a5                    s0 = a3
  2497: 50 10 2c 6e fb           ra = 44, jump @110
      :                          @214 [@dyn 22]
  2502: 64 5a                    a3 = s0
  2504: 82 55 10                 s0 = u64 [s0 + 0x10]
  2507: 28 c4                    jump @210
      :                          @215 [@dyn 23]
  2509: 28 67 04                 jump @300
      :                          @216
  2512: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2515: 7b 10 18                 u64 [sp + 0x18] = ra
  2518: 7b 15 10                 u64 [sp + 0x10] = s0
  2521: 7b 16 08                 u64 [sp + 0x8] = s1
  2524: 53 19 10 64              jump @225 if a2 <u 16
      :                          @217
  2528: 8d 7a                    i32 a3 = -a0
  2530: 84 a2 07                 t0 = a3 & 0x7
  2533: c8 27 0b                 a4 = a0 + t0
  2536: 51 02 15                 jump @220 if t0 == 0
      :                          @218
  2539: 64 8c                    a5 = a1
  2541: 64 75                    s0 = a0
  2543: 01                       fallthrough
      :                          @219
  2544: 7c ca                    a3 = u8 [a5]
  2546: 78 5a                    u8 [s0] = a3
  2548: 95 55 01                 s0 = s0 + 0x1
  2551: 95 cc 01                 a5 = a5 + 0x1
  2554: ac b5 f6                 jump @219 if s0 <u a4
      :                          @220
  2557: c8 28 03                 t1 = a1 + t0
  2560: c9 29 02                 t0 = a2 - t0
  2563: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2566: 84 38 07                 a1 = t1 & 0x7
  2569: c8 4b 0a                 a3 = a4 + t2
  2572: 51 08 3b                 jump @227 if a1 == 0
      :                          @221
  2575: 58 04 4b                 jump @230 if t2 <=s 0
      :                          @222
  2578: 97 38 03                 a1 = t1 << 0x3
  2581: 84 80 38                 ra = a1 & 0x38
  2584: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2587: 82 c5                    s0 = u64 [a5]
  2589: 8d 88                    i32 a1 = -a1
  2591: 84 88 38                 a1 = a1 & 0x38
  2594: 95 cc 08                 a5 = a5 + 0x8
  2597: 01                       fallthrough
      :                          @223
  2598: 82 c6                    s1 = u64 [a5]
  2600: d0 05 05                 s0 = s0 >> ra
  2603: cf 86 09                 a2 = s1 << a1
  2606: d4 59 09                 a2 = a2 | s0
  2609: 7b b9                    u64 [a4] = a2
  2611: 95 bb 08                 a4 = a4 + 0x8
  2614: 95 cc 08                 a5 = a5 + 0x8
  2617: 64 65                    s0 = s1
  2619: ac ab eb                 jump @223 if a4 <u a3
      :                          @224
  2622: 28 1c                    jump @230
      :                          @225
  2624: 64 7a                    a3 = a0
  2626: 52 09 21                 jump @231 if a2 != 0
      :                          @226
  2629: 28 2f                    jump @233
      :                          @227
  2631: 58 04 13                 jump @230 if t2 <=s 0
      :                          @228
  2634: 64 38                    a1 = t1
  2636: 01                       fallthrough
      :                          @229
  2637: 82 89                    a2 = u64 [a1]
  2639: 7b b9                    u64 [a4] = a2
  2641: 95 bb 08                 a4 = a4 + 0x8
  2644: 95 88 08                 a1 = a1 + 0x8
  2647: ac ab f6                 jump @229 if a4 <u a3
      :                          @230
  2650: c8 43 08                 a1 = t1 + t2
  2653: 84 29 07                 a2 = t0 & 0x7
  2656: 51 09 14                 jump @233 if a2 == 0
      :                          @231
  2659: c8 a9 09                 a2 = a2 + a3
  2662: 01                       fallthrough
      :                          @232
  2663: 7c 8b                    a4 = u8 [a1]
  2665: 78 ab                    u8 [a3] = a4
  2667: 95 aa 01                 a3 = a3 + 0x1
  2670: 95 88 01                 a1 = a1 + 0x1
  2673: ac 9a f6                 jump @232 if a3 <u a2
      :                          @233
  2676: 82 10 18                 ra = u64 [sp + 0x18]
  2679: 82 15 10                 s0 = u64 [sp + 0x10]
  2682: 82 16 08                 s1 = u64 [sp + 0x8]
  2685: 95 11 20                 sp = sp + 0x20
  2688: 32 00                    ret
      :                          @234 [@dyn 24]
  2690: 82 77                    a0 = u64 [a0]
  2692: 01                       fallthrough
      :                          @235
  2693: 28                       jump @235
      :                          @236
  2694: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  2697: 7b 10 58                 u64 [sp + 0x58] = ra
  2700: 7b 15 50                 u64 [sp + 0x50] = s0
  2703: 7b 16 48                 u64 [sp + 0x48] = s1
  2706: 7b 19 08                 u64 [sp + 0x8] = a2
  2709: 7b 18                    u64 [sp] = a1
  2711: 98 7a 04                 a3 = a0 >> 0x4
  2714: 33 09 27                 a2 = 0x27
  2717: 53 2a 71 02 81 00        jump @239 if a3 <u 625
      :                          @237
  2723: 33 09 27                 a2 = 0x27
  2726: 95 1b 46                 a4 = sp + 0x46
  2729: 3a 08 00 00 03           a1 = u64 [0x30000]
  2734: 7b 18 18                 u64 [sp + 0x18] = a1
  2737: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  2743: 33 03 7b 14              t1 = 0x147b
  2747: 33 05 7a 00 01           s0 = 0x1007a
  2752: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  2758: 01                       fallthrough
      :                          @238
  2759: 64 74                    t2 = a0
  2761: 82 17 18                 a0 = u64 [sp + 0x18]
  2764: d6 74 07                 a0 = t2 mulhu a0
  2767: 98 77 0b                 a0 = a0 >> 0xb
  2770: 82 18 10                 a1 = u64 [sp + 0x10]
  2773: c0 87 02                 i32 t0 = a0 * a1
  2776: c8 42 0a                 a3 = t0 + t2
  2779: 97 a2 30                 t0 = a3 << 0x30
  2782: 98 28 32                 a1 = t0 >> 0x32
  2785: ca 38 08                 a1 = a1 * t1
  2788: 98 8c 11                 a5 = a1 >> 0x11
  2791: 98 88 10                 a1 = a1 >> 0x10
  2794: 84 88 fe 07              a1 = a1 & 0x7fe
  2798: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  2801: c8 ca 0a                 a3 = a3 + a5
  2804: 97 aa 31                 a3 = a3 << 0x31
  2807: 98 aa 30                 a3 = a3 >> 0x30
  2810: c8 58 08                 a1 = a1 + s0
  2813: 7c 8c                    a5 = u8 [a1]
  2815: 7c 88 01                 a1 = u8 [a1 + 0x1]
  2818: c8 5a 0a                 a3 = a3 + s0
  2821: 7c a6 01                 s1 = u8 [a3 + 0x1]
  2824: 7c aa                    a3 = u8 [a3]
  2826: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  2829: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  2832: 78 b6 01                 u8 [a4 + 0x1] = s1
  2835: 78 ba                    u8 [a4] = a3
  2837: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  2840: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  2843: ac 40 ac                 jump @238 if ra <u t2
      :                          @239
  2846: 54 17 63 3b              jump @241 if a0 <=u 99
      :                          @240
  2850: 97 78 30                 a1 = a0 << 0x30
  2853: 98 88 32                 a1 = a1 >> 0x32
  2856: 96 88 7b 14              a1 = a1 * 0x147b
  2860: 98 88 11                 a1 = a1 >> 0x11
  2863: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  2866: c8 a7 07                 a0 = a0 + a3
  2869: 97 77 31                 a0 = a0 << 0x31
  2872: 98 77 30                 a0 = a0 >> 0x30
  2875: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2878: 33 0a 7a 00 01           a3 = 0x1007a
  2883: c8 a7 07                 a0 = a0 + a3
  2886: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  2889: 7c 77                    a0 = u8 [a0]
  2891: 95 1b 21                 a4 = sp + 0x21
  2894: c8 9b 0b                 a4 = a4 + a2
  2897: 78 ba 01                 u8 [a4 + 0x1] = a3
  2900: 78 b7                    u8 [a4] = a0
  2902: 64 87                    a0 = a1
  2904: 01                       fallthrough
      :                          @241
  2905: 55 17 0a 14              jump @243 if a0 >=u 10
      :                          @242
  2909: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  2912: 95 18 21                 a1 = sp + 0x21
  2915: c8 98 08                 a1 = a1 + a2
  2918: 83 77 30                 i32 a0 = a0 + 0x30
  2921: 78 87                    u8 [a1] = a0
  2923: 28 21                    jump @244
      :                          @243
  2925: 97 77 01                 a0 = a0 << 0x1
  2928: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2931: 33 08 7a 00 01           a1 = 0x1007a
  2936: c8 87 07                 a0 = a0 + a1
  2939: 7c 78 01                 a1 = u8 [a0 + 0x1]
  2942: 7c 77                    a0 = u8 [a0]
  2944: 95 1a 21                 a3 = sp + 0x21
  2947: c8 9a 0a                 a3 = a3 + a2
  2950: 78 a8 01                 u8 [a3 + 0x1] = a1
  2953: 78 a7                    u8 [a3] = a0
  2955: 01                       fallthrough
      :                          @244
  2956: 95 1b 21                 a4 = sp + 0x21
  2959: c8 9b 0b                 a4 = a4 + a2
  2962: 9a 9c 27                 a5 = 0x27 - a2
  2965: 33 09 78 00 01           a2 = 0x10078
  2970: 82 17 08                 a0 = u64 [sp + 0x8]
  2973: 82 18                    a1 = u64 [sp]
  2975: 33 0a                    a3 = 0
  2977: 50 10 32 12              ra = 50, jump @246
      :                          @245 [@dyn 25]
  2981: 82 10 58                 ra = u64 [sp + 0x58]
  2984: 82 15 50                 s0 = u64 [sp + 0x50]
  2987: 82 16 48                 s1 = u64 [sp + 0x48]
  2990: 95 11 60                 sp = sp + 0x60
  2993: 32 00                    ret
      :                          @246
  2995: 95 11 98                 sp = sp + 0xffffffffffffff98
  2998: 7b 10 60                 u64 [sp + 0x60] = ra
  3001: 7b 15 58                 u64 [sp + 0x58] = s0
  3004: 7b 16 50                 u64 [sp + 0x50] = s1
  3007: 7b 1b 18                 u64 [sp + 0x18] = a4
  3010: 51 08 4f                 jump @253 if a1 == 0
      :                          @247
  3013: 80 76 34                 s1 = u32 [a0 + 0x34]
  3016: 84 68 01                 a1 = s1 & 0x1
  3019: 33 0b 2b                 a4 = 0x2b
  3022: 33 05 00 00 11           s0 = 0x110000
  3027: db 8b 05                 s0 = a4 if a1 != 0
  3030: 7b 15 28                 u64 [sp + 0x28] = s0
  3033: c8 c8 02                 t0 = a1 + a5
  3036: 84 68 04                 a1 = s1 & 0x4
  3039: 51 08 42                 jump @254 if a1 == 0
      :                          @248
  3042: 7b 19 30                 u64 [sp + 0x30] = a2
  3045: 33 08                    a1 = 0
  3047: 51 0a 1a                 jump @251 if a3 == 0
      :                          @249
  3050: 64 a5                    s0 = a3
  3052: 01                       fallthrough
      :                          @250
  3053: 7d 9b                    a4 = i8 [a2]
  3055: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  3058: 85 bb 01                 a4 = a4 ^ 0x1
  3061: c8 b8 08                 a1 = a1 + a4
  3064: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  3067: 95 99 01                 a2 = a2 + 0x1
  3070: 52 05 ef                 jump @250 if s0 != 0
      :                          @251
  3073: c8 82 02                 t0 = t0 + a1
  3076: 7b 1a 38                 u64 [sp + 0x38] = a3
  3079: 82 78                    a1 = u64 [a0]
  3081: 7b 1c 20                 u64 [sp + 0x20] = a5
  3084: 52 08 23                 jump @255 if a1 != 0
      :                          @252
  3087: 28 41                    jump @260
      :                          @253
  3089: 81 76 34                 s1 = i32 [a0 + 0x34]
  3092: 95 c2 01                 t0 = a5 + 0x1
  3095: 49 11 28 2d              u64 [sp + 40] = 0x2d
  3099: 84 68 04                 a1 = s1 & 0x4
  3102: 52 08 c4                 jump @248 if a1 != 0
      :                          @254
  3105: 49 11 30                 u64 [sp + 48] = 0
  3108: 7b 1a 38                 u64 [sp + 0x38] = a3
  3111: 82 78                    a1 = u64 [a0]
  3113: 7b 1c 20                 u64 [sp + 0x20] = a5
  3116: 51 08 24                 jump @260 if a1 == 0
      :                          @255
  3119: 82 75 08                 s0 = u64 [a0 + 0x8]
  3122: ae 52 1e                 jump @260 if t0 >=u s0
      :                          @256
  3125: 84 66 08                 s1 = s1 & 0x8
  3128: 52 06 50                 jump @263 if s1 != 0
      :                          @257
  3131: 7c 79 38                 a2 = u8 [a0 + 0x38]
  3134: c9 25 0a                 a3 = s0 - t0
  3137: 5a 19 01 a1 00           jump @270 if a2 >s 1
      :                          @258
  3142: 52 09 ae 00              jump @272 if a2 != 0
      :                          @259
  3146: 7b 1a 10                 u64 [sp + 0x10] = a3
  3149: 28 ad 00                 jump @273
      :                          @260
  3152: 82 75 20                 s0 = u64 [a0 + 0x20]
  3155: 82 76 28                 s1 = u64 [a0 + 0x28]
  3158: 64 57                    a0 = s0
  3160: 64 68                    a1 = s1
  3162: 82 19 28                 a2 = u64 [sp + 0x28]
  3165: 82 1a 30                 a3 = u64 [sp + 0x30]
  3168: 82 1b 38                 a4 = u64 [sp + 0x38]
  3171: 50 10 34 6d 01           ra = 52, jump @293
      :                          @261 [@dyn 26]
  3176: 33 08 01                 a1 = 0x1
  3179: 52 07 bc 00              jump @278 if a0 != 0
      :                          @262
  3183: 82 6c 18                 a5 = u64 [s1 + 0x18]
  3186: 64 57                    a0 = s0
  3188: 82 18 18                 a1 = u64 [sp + 0x18]
  3191: 82 19 20                 a2 = u64 [sp + 0x20]
  3194: 82 10 60                 ra = u64 [sp + 0x60]
  3197: 82 15 58                 s0 = u64 [sp + 0x58]
  3200: 82 16 50                 s1 = u64 [sp + 0x50]
  3203: 95 11 68                 sp = sp + 0x68
  3206: 32 0c                    jump [a5]
      :                          @263
  3208: 7b 12 40                 u64 [sp + 0x40] = t0
  3211: 81 78 30                 a1 = i32 [a0 + 0x30]
  3214: 7b 18 08                 u64 [sp + 0x8] = a1
  3217: 7c 79 38                 a2 = u8 [a0 + 0x38]
  3220: 7b 19                    u64 [sp] = a2
  3222: 82 79 20                 a2 = u64 [a0 + 0x20]
  3225: 82 76 28                 s1 = u64 [a0 + 0x28]
  3228: 48 17 30 30              u32 [a0 + 48] = 0x30
  3232: 7b 17 10                 u64 [sp + 0x10] = a0
  3235: 46 17 38 01              u8 [a0 + 56] = 0x1
  3239: 7b 19 48                 u64 [sp + 0x48] = a2
  3242: 64 97                    a0 = a2
  3244: 64 68                    a1 = s1
  3246: 82 19 28                 a2 = u64 [sp + 0x28]
  3249: 82 1a 30                 a3 = u64 [sp + 0x30]
  3252: 82 1b 38                 a4 = u64 [sp + 0x38]
  3255: 50 10 36 19 01           ra = 54, jump @293
      :                          @264 [@dyn 27]
  3260: 52 07 67                 jump @277 if a0 != 0
      :                          @265
  3263: 82 17 40                 a0 = u64 [sp + 0x40]
  3266: c9 75 05                 s0 = s0 - a0
  3269: 95 55 01                 s0 = s0 + 0x1
  3272: 01                       fallthrough
      :                          @266
  3273: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  3276: 51 05 c6 00              jump @288 if s0 == 0
      :                          @267
  3280: 82 69 20                 a2 = u64 [s1 + 0x20]
  3283: 33 08 30                 a1 = 0x30
  3286: 82 17 48                 a0 = u64 [sp + 0x48]
  3289: b4 90 01 38              ra = 56, jump [a2]
      :                          @268 [@dyn 28]
  3293: 51 07 ec                 jump @266 if a0 == 0
      :                          @269
  3296: 28 43                    jump @277
      :                          @270
  3298: 52 19 02 12              jump @272 if a2 != 2
      :                          @271
  3302: 98 a9 01                 a2 = a3 >> 0x1
  3305: 95 a8 01                 a1 = a3 + 0x1
  3308: 98 88 01                 a1 = a1 >> 0x1
  3311: 7b 18 10                 u64 [sp + 0x10] = a1
  3314: 28 08                    jump @273
      :                          @272
  3316: 64 a9                    a2 = a3
  3318: 49 11 10                 u64 [sp + 16] = 0
  3321: 01                       fallthrough
      :                          @273
  3322: 82 78 20                 a1 = u64 [a0 + 0x20]
  3325: 7b 18 48                 u64 [sp + 0x48] = a1
  3328: 82 76 28                 s1 = u64 [a0 + 0x28]
  3331: 81 77 30                 a0 = i32 [a0 + 0x30]
  3334: 7b 17 40                 u64 [sp + 0x40] = a0
  3337: 95 95 01                 s0 = a2 + 0x1
  3340: 01                       fallthrough
      :                          @274
  3341: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  3344: 51 05 27                 jump @279 if s0 == 0
      :                          @275
  3347: 82 69 20                 a2 = u64 [s1 + 0x20]
  3350: 82 17 48                 a0 = u64 [sp + 0x48]
  3353: 82 18 40                 a1 = u64 [sp + 0x40]
  3356: b4 90 01 3a              ra = 58, jump [a2]
      :                          @276 [@dyn 29]
  3360: 51 07 ed                 jump @274 if a0 == 0
      :                          @277
  3363: 33 08 01                 a1 = 0x1
  3366: 01                       fallthrough
      :                          @278
  3367: 64 87                    a0 = a1
  3369: 82 10 60                 ra = u64 [sp + 0x60]
  3372: 82 15 58                 s0 = u64 [sp + 0x58]
  3375: 82 16 50                 s1 = u64 [sp + 0x50]
  3378: 95 11 68                 sp = sp + 0x68
  3381: 32 00                    ret
      :                          @279
  3383: 82 15 48                 s0 = u64 [sp + 0x48]
  3386: 64 57                    a0 = s0
  3388: 64 68                    a1 = s1
  3390: 82 19 28                 a2 = u64 [sp + 0x28]
  3393: 82 1a 30                 a3 = u64 [sp + 0x30]
  3396: 82 1b 38                 a4 = u64 [sp + 0x38]
  3399: 50 10 3c 89 00           ra = 60, jump @293
      :                          @280 [@dyn 30]
  3404: 33 08 01                 a1 = 0x1
  3407: 52 07 d8                 jump @278 if a0 != 0
      :                          @281
  3410: 82 6a 18                 a3 = u64 [s1 + 0x18]
  3413: 64 57                    a0 = s0
  3415: 82 18 18                 a1 = u64 [sp + 0x18]
  3418: 82 19 20                 a2 = u64 [sp + 0x20]
  3421: b4 a0 01 3e              ra = 62, jump [a3]
      :                          @282 [@dyn 31]
  3425: 33 08 01                 a1 = 0x1
  3428: 52 07 c3                 jump @278 if a0 != 0
      :                          @283
  3431: 82 17 10                 a0 = u64 [sp + 0x10]
  3434: 9a 77                    a0 = -a0
  3436: 7b 17 38                 u64 [sp + 0x38] = a0
  3439: 33 05 ff                 s0 = 0xffffffffffffffff
  3442: 01                       fallthrough
      :                          @284
  3443: 82 17 38                 a0 = u64 [sp + 0x38]
  3446: c8 57 07                 a0 = a0 + s0
  3449: 51 17 ff 42              jump @291 if a0 == 4294967295
      :                          @285
  3453: 82 69 20                 a2 = u64 [s1 + 0x20]
  3456: 82 17 48                 a0 = u64 [sp + 0x48]
  3459: 82 18 40                 a1 = u64 [sp + 0x40]
  3462: b4 90 01 40              ra = 64, jump [a2]
      :                          @286 [@dyn 32]
  3466: 95 55 01                 s0 = s0 + 0x1
  3469: 51 07 e6                 jump @284 if a0 == 0
      :                          @287
  3472: 28 37                    jump @292
      :                          @288
  3474: 82 6a 18                 a3 = u64 [s1 + 0x18]
  3477: 82 17 48                 a0 = u64 [sp + 0x48]
  3480: 82 18 18                 a1 = u64 [sp + 0x18]
  3483: 82 19 20                 a2 = u64 [sp + 0x20]
  3486: b4 a0 01 42              ra = 66, jump [a3]
      :                          @289 [@dyn 33]
  3490: 33 08 01                 a1 = 0x1
  3493: 52 07 82                 jump @278 if a0 != 0
      :                          @290
  3496: 33 08                    a1 = 0
  3498: 82 17 10                 a0 = u64 [sp + 0x10]
  3501: 82 19 08                 a2 = u64 [sp + 0x8]
  3504: 7a 79 30                 u32 [a0 + 0x30] = a2
  3507: 82 19                    a2 = u64 [sp]
  3509: 78 79 38                 u8 [a0 + 0x38] = a2
  3512: 28 6f ff                 jump @278
      :                          @291
  3515: 82 15 10                 s0 = u64 [sp + 0x10]
  3518: 82 17 10                 a0 = u64 [sp + 0x10]
  3521: d8 75 08                 a1 = s0 <u a0
  3524: 28 63 ff                 jump @278
      :                          @292
  3527: 82 17 10                 a0 = u64 [sp + 0x10]
  3530: d8 75 08                 a1 = s0 <u a0
  3533: 28 5a ff                 jump @278
      :                          @293
  3536: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3539: 7b 10 20                 u64 [sp + 0x20] = ra
  3542: 7b 15 18                 u64 [sp + 0x18] = s0
  3545: 7b 16 10                 u64 [sp + 0x10] = s1
  3548: 83 9c                    i32 a5 = a2 + 0
  3550: 33 02 00 00 11           t0 = 0x110000
  3555: 64 a6                    s1 = a3
  3557: 64 85                    s0 = a1
  3559: 64 7a                    a3 = a0
  3561: aa 2c 20                 jump @296 if a5 == t0
      :                          @294
  3564: 82 5c 20                 a5 = u64 [s0 + 0x20]
  3567: 64 a7                    a0 = a3
  3569: 64 98                    a1 = a2
  3571: 7b 1b 08                 u64 [sp + 0x8] = a4
  3574: 7b 1a                    u64 [sp] = a3
  3576: b4 c0 01 44              ra = 68, jump [a5]
      :                          @295 [@dyn 34]
  3580: 82 1a                    a3 = u64 [sp]
  3582: 82 1b 08                 a4 = u64 [sp + 0x8]
  3585: 64 78                    a1 = a0
  3587: 33 07 01                 a0 = 0x1
  3590: 52 08 20                 jump @299 if a1 != 0
      :                          @296
  3593: 51 06 1a                 jump @298 if s1 == 0
      :                          @297
  3596: 82 5c 18                 a5 = u64 [s0 + 0x18]
  3599: 64 a7                    a0 = a3
  3601: 64 68                    a1 = s1
  3603: 64 b9                    a2 = a4
  3605: 82 10 20                 ra = u64 [sp + 0x20]
  3608: 82 15 18                 s0 = u64 [sp + 0x18]
  3611: 82 16 10                 s1 = u64 [sp + 0x10]
  3614: 95 11 28                 sp = sp + 0x28
  3617: 32 0c                    jump [a5]
      :                          @298
  3619: 33 07                    a0 = 0
  3621: 01                       fallthrough
      :                          @299
  3622: 82 10 20                 ra = u64 [sp + 0x20]
  3625: 82 15 18                 s0 = u64 [sp + 0x18]
  3628: 82 16 10                 s1 = u64 [sp + 0x10]
  3631: 95 11 28                 sp = sp + 0x28
  3634: 32 00                    ret
      :                          @300
  3636: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  3640: 7b 10 80 00              u64 [sp + 0x80] = ra
  3644: 7b 15 78                 u64 [sp + 0x78] = s0
  3647: 7b 16 70                 u64 [sp + 0x70] = s1
  3650: 49 11 60 20              u64 [sp + 96] = 0x20
  3654: 33 09 03                 a2 = 0x3
  3657: 78 19 68                 u8 [sp + 0x68] = a2
  3660: 49 11 30                 u64 [sp + 48] = 0
  3663: 49 11 40                 u64 [sp + 64] = 0
  3666: 82 86 20                 s1 = u64 [a1 + 0x20]
  3669: 7b 17 50                 u64 [sp + 0x50] = a0
  3672: 33 07 48 00 01           a0 = 0x10048
  3677: 7b 17 58                 u64 [sp + 0x58] = a0
  3680: 51 06 06 01              jump @322 if s1 == 0
      :                          @301
  3684: 82 87 28                 a0 = u64 [a1 + 0x28]
  3687: 51 07 73 01              jump @332 if a0 == 0
      :                          @302
  3691: 33 09                    a2 = 0
  3693: 82 85                    s0 = u64 [a1]
  3695: 7b 18 08                 u64 [sp + 0x8] = a1
  3698: 82 88 10                 a1 = u64 [a1 + 0x10]
  3701: 7b 18 18                 u64 [sp + 0x18] = a1
  3704: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  3707: 97 88 03                 a1 = a1 << 0x3
  3710: 98 88 03                 a1 = a1 >> 0x3
  3713: 95 88 01                 a1 = a1 + 0x1
  3716: 7b 18                    u64 [sp] = a1
  3718: 95 55 08                 s0 = s0 + 0x8
  3721: 96 78 38                 a1 = a0 * 0x38
  3724: 95 66 18                 s1 = s1 + 0x18
  3727: 33 07 30                 a0 = 0x30
  3730: 7b 17 10                 u64 [sp + 0x10] = a0
  3733: 01                       fallthrough
      :                          @303
  3734: 7b 18 20                 u64 [sp + 0x20] = a1
  3737: 7b 19 28                 u64 [sp + 0x28] = a2
  3740: 82 59                    a2 = u64 [s0]
  3742: 51 09 17                 jump @306 if a2 == 0
      :                          @304
  3745: 82 1a 58                 a3 = u64 [sp + 0x58]
  3748: 82 17 50                 a0 = u64 [sp + 0x50]
  3751: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  3754: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3757: b4 a0 01 46              ra = 70, jump [a3]
      :                          @305 [@dyn 35]
  3761: 52 07 4e 01              jump @335 if a0 != 0
      :                          @306
  3765: 81 67 10                 a0 = i32 [s1 + 0x10]
  3768: 7a 17 60                 u32 [sp + 0x60] = a0
  3771: 7c 67 18                 a0 = u8 [s1 + 0x18]
  3774: 78 17 68                 u8 [sp + 0x68] = a0
  3777: 81 67 14                 a0 = i32 [s1 + 0x14]
  3780: 7a 17 64                 u32 [sp + 0x64] = a0
  3783: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3786: 82 67                    a0 = u64 [s1]
  3788: 51 08 26                 jump @311 if a1 == 0
      :                          @307
  3791: 52 18 01 16              jump @309 if a1 != 1
      :                          @308
  3795: 97 77 04                 a0 = a0 << 0x4
  3798: 82 18 18                 a1 = u64 [sp + 0x18]
  3801: c8 87 07                 a0 = a0 + a1
  3804: 82 78 08                 a1 = u64 [a0 + 0x8]
  3807: 82 19 10                 a2 = u64 [sp + 0x10]
  3810: aa 98 07                 jump @310 if a1 == a2
      :                          @309
  3813: 33 08                    a1 = 0
  3815: 28 0f                    jump @312
      :                          @310
  3817: 82 77                    a0 = u64 [a0]
  3819: 82 77                    a0 = u64 [a0]
  3821: 33 08 01                 a1 = 0x1
  3824: 28 06                    jump @312
      :                          @311
  3826: 33 08 01                 a1 = 0x1
  3829: 01                       fallthrough
      :                          @312
  3830: 7b 18 30                 u64 [sp + 0x30] = a1
  3833: 7b 17 38                 u64 [sp + 0x38] = a0
  3836: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  3839: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  3842: 51 08 26                 jump @317 if a1 == 0
      :                          @313
  3845: 52 18 01 16              jump @315 if a1 != 1
      :                          @314
  3849: 97 77 04                 a0 = a0 << 0x4
  3852: 82 18 18                 a1 = u64 [sp + 0x18]
  3855: c8 87 07                 a0 = a0 + a1
  3858: 82 78 08                 a1 = u64 [a0 + 0x8]
  3861: 82 19 10                 a2 = u64 [sp + 0x10]
  3864: aa 98 07                 jump @316 if a1 == a2
      :                          @315
  3867: 33 08                    a1 = 0
  3869: 28 0f                    jump @318
      :                          @316
  3871: 82 77                    a0 = u64 [a0]
  3873: 82 77                    a0 = u64 [a0]
  3875: 33 08 01                 a1 = 0x1
  3878: 28 06                    jump @318
      :                          @317
  3880: 33 08 01                 a1 = 0x1
  3883: 01                       fallthrough
      :                          @318
  3884: 7b 18 40                 u64 [sp + 0x40] = a1
  3887: 7b 17 48                 u64 [sp + 0x48] = a0
  3890: 82 67 08                 a0 = u64 [s1 + 0x8]
  3893: 97 77 04                 a0 = a0 << 0x4
  3896: 82 18 18                 a1 = u64 [sp + 0x18]
  3899: c8 78 08                 a1 = a1 + a0
  3902: 82 87                    a0 = u64 [a1]
  3904: 82 89 08                 a2 = u64 [a1 + 0x8]
  3907: 95 18 30                 a1 = sp + 0x30
  3910: b4 90 01 48              ra = 72, jump [a2]
      :                          @319 [@dyn 36]
  3914: 52 07 b5 00              jump @335 if a0 != 0
      :                          @320
  3918: 95 55 10                 s0 = s0 + 0x10
  3921: 82 18 20                 a1 = u64 [sp + 0x20]
  3924: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  3927: 95 66 38                 s1 = s1 + 0x38
  3930: 82 19 28                 a2 = u64 [sp + 0x28]
  3933: 95 99 01                 a2 = a2 + 0x1
  3936: 52 08 36 ff              jump @303 if a1 != 0
      :                          @321
  3940: 28 69                    jump @330
      :                          @322
  3942: 82 87 18                 a0 = u64 [a1 + 0x18]
  3945: 51 07 71                 jump @332 if a0 == 0
      :                          @323
  3948: 82 85 10                 s0 = u64 [a1 + 0x10]
  3951: 33 0a                    a3 = 0
  3953: 97 79 04                 a2 = a0 << 0x4
  3956: c8 59 09                 a2 = a2 + s0
  3959: 7b 19 20                 u64 [sp + 0x20] = a2
  3962: 7b 18 08                 u64 [sp + 0x8] = a1
  3965: 82 86                    s1 = u64 [a1]
  3967: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3970: 97 77 04                 a0 = a0 << 0x4
  3973: 98 77 04                 a0 = a0 >> 0x4
  3976: 95 77 01                 a0 = a0 + 0x1
  3979: 7b 17                    u64 [sp] = a0
  3981: 95 66 08                 s1 = s1 + 0x8
  3984: 01                       fallthrough
      :                          @324
  3985: 7b 1a 28                 u64 [sp + 0x28] = a3
  3988: 82 69                    a2 = u64 [s1]
  3990: 51 09 16                 jump @327 if a2 == 0
      :                          @325
  3993: 82 1a 58                 a3 = u64 [sp + 0x58]
  3996: 82 17 50                 a0 = u64 [sp + 0x50]
  3999: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4002: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4005: b4 a0 01 4a              ra = 74, jump [a3]
      :                          @326 [@dyn 37]
  4009: 52 07 56                 jump @335 if a0 != 0
      :                          @327
  4012: 82 57                    a0 = u64 [s0]
  4014: 82 59 08                 a2 = u64 [s0 + 0x8]
  4017: 95 18 30                 a1 = sp + 0x30
  4020: b4 90 01 4c              ra = 76, jump [a2]
      :                          @328 [@dyn 38]
  4024: 52 07 47                 jump @335 if a0 != 0
      :                          @329
  4027: 95 66 10                 s1 = s1 + 0x10
  4030: 95 55 10                 s0 = s0 + 0x10
  4033: 82 1a 28                 a3 = u64 [sp + 0x28]
  4036: 95 aa 01                 a3 = a3 + 0x1
  4039: 82 17 20                 a0 = u64 [sp + 0x20]
  4042: ab 75 c7                 jump @324 if s0 != a0
      :                          @330
  4045: 82 18 08                 a1 = u64 [sp + 0x8]
  4048: 82 1a                    a3 = u64 [sp]
  4050: 82 87 08                 a0 = u64 [a1 + 0x8]
  4053: ac 7a 0d                 jump @333 if a3 <u a0
      :                          @331
  4056: 28 2c                    jump @336
      :                          @332
  4058: 33 0a                    a3 = 0
  4060: 82 87 08                 a0 = u64 [a1 + 0x8]
  4063: 54 07 25                 jump @336 if a0 <=u 0
      :                          @333
  4066: 82 87                    a0 = u64 [a1]
  4068: 97 a8 04                 a1 = a3 << 0x4
  4071: c8 87 09                 a2 = a0 + a1
  4074: 82 1a 58                 a3 = u64 [sp + 0x58]
  4077: 82 17 50                 a0 = u64 [sp + 0x50]
  4080: 82 98                    a1 = u64 [a2]
  4082: 82 99 08                 a2 = u64 [a2 + 0x8]
  4085: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4088: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @334 [@dyn 39]
  4092: 51 07 08                 jump @336 if a0 == 0
      :                          @335
  4095: 33 07 01                 a0 = 0x1
  4098: 28 05                    jump @337
      :                          @336
  4100: 33 07                    a0 = 0
  4102: 01                       fallthrough
      :                          @337
  4103: 82 10 80 00              ra = u64 [sp + 0x80]
  4107: 82 15 78                 s0 = u64 [sp + 0x78]
  4110: 82 16 70                 s1 = u64 [sp + 0x70]
  4113: 95 11 88 00              sp = sp + 0x88
  4117: 32 00                    ret
