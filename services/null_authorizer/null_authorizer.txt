// RO data = 322/324 bytes
// RW data = 8/4128 bytes
// Stack size = 8192 bytes
// RO data = [110, 117, 108, 108, 95, 97, 117, 116, 104, 111, 114, 105, 122, 101, 114, 32, 103, 97, 115, 32, 99, 97, 108, 108, 32, 32, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 58, 32, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 25, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1271
// Code size = 3624 bytes

      :                          @0
     0: 28 7e 01                 jump @25
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 64 82                    t0 = a1
    13: 80 88 34                 a1 = u32 [a1 + 0x34]
    16: 84 89 10                 a2 = a1 & 0x10
    19: 52 09 28                 jump @4 if a2 != 0
      :                          @2
    22: 84 88 20                 a1 = a1 & 0x20
    25: 52 08 52                 jump @7 if a1 != 0
      :                          @3
    28: 81 77                    a0 = i32 [a0]
    30: 89 79                    a2 = a0 <s 0
    32: 85 98 01                 a1 = a2 ^ 0x1
    35: 97 7a 20                 a3 = a0 << 0x20
    38: 98 aa 20                 a3 = a3 >> 0x20
    41: 9a 77                    a0 = -a0
    43: da 9a 07                 a0 = a3 if a2 == 0
    46: 64 29                    a2 = t0
    48: 82 10 80 00              ra = u64 [sp + 0x80]
    52: 95 11 88 00              sp = sp + 0x88
    56: 28 5f 08                 jump @176
      :                          @4
    59: 81 7a                    a3 = i32 [a0]
    61: 33 08 81 00              a1 = 0x81
    65: 95 17 7f                 a0 = sp + 0x7f
    68: 33 03 57                 t1 = 0x57
    71: 01                       fallthrough
      :                          @5
    72: 64 8b                    a4 = a1
    74: 8b ac 04                 i32 a5 = a3 >> 0x4
    77: 84 aa 0f                 a3 = a3 & 0xf
    80: 88 a8 0a                 a1 = a3 <u 0xa
    83: 33 09 30                 a2 = 0x30
    86: da 83 09                 a2 = t1 if a1 == 0
    89: be a9 09                 i32 a2 = a2 + a3
    92: 78 79                    u8 [a0] = a2
    94: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    97: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   100: 64 ca                    a3 = a5
   102: 52 0c e2                 jump @5 if a5 != 0
      :                          @6
   105: 28 30                    jump @9
      :                          @7
   107: 81 7a                    a3 = i32 [a0]
   109: 33 08 81 00              a1 = 0x81
   113: 95 17 7f                 a0 = sp + 0x7f
   116: 33 03 37                 t1 = 0x37
   119: 01                       fallthrough
      :                          @8
   120: 64 8b                    a4 = a1
   122: 8b ac 04                 i32 a5 = a3 >> 0x4
   125: 84 aa 0f                 a3 = a3 & 0xf
   128: 88 a8 0a                 a1 = a3 <u 0xa
   131: 33 09 30                 a2 = 0x30
   134: da 83 09                 a2 = t1 if a1 == 0
   137: be a9 09                 i32 a2 = a2 + a3
   140: 78 79                    u8 [a0] = a2
   142: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   145: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   148: 64 ca                    a3 = a5
   150: 52 0c e2                 jump @8 if a5 != 0
      :                          @9
   153: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   156: 56 27 80 00 2a           jump @12 if a0 >u 128
      :                          @10
   161: 9a 8c 81 00              a5 = 0x81 - a1
   165: 64 1b                    a4 = sp
   167: c8 7b 0b                 a4 = a4 + a0
   170: 33 09 78 00 01           a2 = 0x10078
   175: 33 08 01                 a1 = 0x1
   178: 33 0a 02                 a3 = 0x2
   181: 64 27                    a0 = t0
   183: 50 10 04 0d 09           ra = 4, jump @186
      :                          @11 [@dyn 2]
   188: 82 10 80 00              ra = u64 [sp + 0x80]
   192: 95 11 88 00              sp = sp + 0x88
   196: 32 00                    ret
      :                          @12
   198: 00                       trap
      :                          @13 [@dyn 3]
   199: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   203: 7b 10 80 00              u64 [sp + 0x80] = ra
   207: 64 82                    t0 = a1
   209: 80 88 34                 a1 = u32 [a1 + 0x34]
   212: 84 89 10                 a2 = a1 & 0x10
   215: 52 09 1b                 jump @16 if a2 != 0
      :                          @14
   218: 84 88 20                 a1 = a1 & 0x20
   221: 52 08 45                 jump @19 if a1 != 0
      :                          @15
   224: 82 77                    a0 = u64 [a0]
   226: 33 08 01                 a1 = 0x1
   229: 64 29                    a2 = t0
   231: 82 10 80 00              ra = u64 [sp + 0x80]
   235: 95 11 88 00              sp = sp + 0x88
   239: 28 a8 07                 jump @176
      :                          @16
   242: 82 7a                    a3 = u64 [a0]
   244: 33 08 81 00              a1 = 0x81
   248: 95 17 7f                 a0 = sp + 0x7f
   251: 33 03 57                 t1 = 0x57
   254: 01                       fallthrough
      :                          @17
   255: 64 8b                    a4 = a1
   257: 98 ac 04                 a5 = a3 >> 0x4
   260: 84 aa 0f                 a3 = a3 & 0xf
   263: 88 a8 0a                 a1 = a3 <u 0xa
   266: 33 09 30                 a2 = 0x30
   269: da 83 09                 a2 = t1 if a1 == 0
   272: be a9 09                 i32 a2 = a2 + a3
   275: 78 79                    u8 [a0] = a2
   277: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   280: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   283: 64 ca                    a3 = a5
   285: 52 0c e2                 jump @17 if a5 != 0
      :                          @18
   288: 28 30                    jump @21
      :                          @19
   290: 82 7a                    a3 = u64 [a0]
   292: 33 08 81 00              a1 = 0x81
   296: 95 17 7f                 a0 = sp + 0x7f
   299: 33 03 37                 t1 = 0x37
   302: 01                       fallthrough
      :                          @20
   303: 64 8b                    a4 = a1
   305: 98 ac 04                 a5 = a3 >> 0x4
   308: 84 aa 0f                 a3 = a3 & 0xf
   311: 88 a8 0a                 a1 = a3 <u 0xa
   314: 33 09 30                 a2 = 0x30
   317: da 83 09                 a2 = t1 if a1 == 0
   320: be a9 09                 i32 a2 = a2 + a3
   323: 78 79                    u8 [a0] = a2
   325: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   328: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   331: 64 ca                    a3 = a5
   333: 52 0c e2                 jump @20 if a5 != 0
      :                          @21
   336: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   339: 56 27 80 00 2a           jump @24 if a0 >u 128
      :                          @22
   344: 9a 8c 81 00              a5 = 0x81 - a1
   348: 64 1b                    a4 = sp
   350: c8 7b 0b                 a4 = a4 + a0
   353: 33 09 78 00 01           a2 = 0x10078
   358: 33 08 01                 a1 = 0x1
   361: 33 0a 02                 a3 = 0x2
   364: 64 27                    a0 = t0
   366: 50 10 08 56 08           ra = 8, jump @186
      :                          @23 [@dyn 4]
   371: 82 10 80 00              ra = u64 [sp + 0x80]
   375: 95 11 88 00              sp = sp + 0x88
   379: 32 00                    ret
      :                          @24
   381: 00                       trap
      :                          @25 [export #0: 'is_authorize']
   382: 95 11 50 ff              sp = sp + 0xffffffffffffff50
   386: 7b 10 a8 00              u64 [sp + 0xa8] = ra
   390: 7b 15 a0 00              u64 [sp + 0xa0] = s0
   394: 7b 16 98 00              u64 [sp + 0x98] = s1
   398: 49 11 18 ff ef           u64 [sp + 24] = 0xffffffffffffefff
   403: 48 11 24                 u32 [sp + 36] = 0
   406: 0a                       ecalli 0 // 'gas'
   407: 7b 17 28                 u64 [sp + 0x28] = a0
   410: 95 17 24                 a0 = sp + 0x24
   413: 7b 17 78                 u64 [sp + 0x78] = a0
   416: 33 07 02                 a0 = 0x2
   419: 7b 17 10                 u64 [sp + 0x10] = a0
   422: 7b 17 80 00              u64 [sp + 0x80] = a0
   426: 95 17 28                 a0 = sp + 0x28
   429: 7b 17 88 00              u64 [sp + 0x88] = a0
   433: 33 07 06                 a0 = 0x6
   436: 7b 17 08                 u64 [sp + 0x8] = a0
   439: 7b 17 90 00              u64 [sp + 0x90] = a0
   443: 33 07 28 00 01           a0 = 0x10028
   448: 7b 17                    u64 [sp] = a0
   450: 7b 17 48                 u64 [sp + 0x48] = a0
   453: 49 11 50 02              u64 [sp + 80] = 0x2
   457: 49 11 68                 u64 [sp + 104] = 0
   460: 95 18 78                 a1 = sp + 0x78
   463: 7b 18 58                 u64 [sp + 0x58] = a1
   466: 49 11 60 02              u64 [sp + 96] = 0x2
   470: 95 17 30                 a0 = sp + 0x30
   473: 95 18 48                 a1 = sp + 0x48
   476: 50 10 0a a5 03           ra = 10, jump @106
      :                          @26 [@dyn 5]
   481: 82 15 38                 s0 = u64 [sp + 0x38]
   484: 82 1b 40                 a4 = u64 [sp + 0x40]
   487: 82 16 30                 s1 = u64 [sp + 0x30]
   490: 33 07 02                 a0 = 0x2
   493: 33 08                    a1 = 0
   495: 33 09                    a2 = 0
   497: 64 5a                    a3 = s0
   499: 33 00 0c                 ra = 0xc
   502: 0a 64                    ecalli 100 // 'log'
   504: 01                       fallthrough
      :                          @27 [@dyn 6]
   505: 82 17 18                 a0 = u64 [sp + 0x18]
   508: c8 67 07                 a0 = a0 + s1
   511: 53 27 00 f0 23           jump @33 if a0 <u 4294963200
      :                          @28
   516: 33 07 10 00 03           a0 = 0x30010
   521: 95 77 00 10              a0 = a0 + 0x1000
   525: 01                       fallthrough
      :                          @29
   526: 82 78                    a1 = u64 [a0]
   528: c9 87 09                 a2 = a0 - a1
   531: ab 59 0f                 jump @33 if a2 != s0
      :                          @30
   534: c9 68 09                 a2 = a1 - s1
   537: 01                       fallthrough
      :                          @31
   538: 82 7a                    a3 = u64 [a0]
   540: ab 8a f2                 jump @29 if a3 != a1
      :                          @32
   543: 7b 79                    u64 [a0] = a2
   545: 01                       fallthrough
      :                          @33
   546: 48 11 24 01              u32 [sp + 36] = 0x1
   550: 0a                       ecalli 0 // 'gas'
   551: 7b 17 28                 u64 [sp + 0x28] = a0
   554: 95 17 24                 a0 = sp + 0x24
   557: 7b 17 78                 u64 [sp + 0x78] = a0
   560: 82 17 10                 a0 = u64 [sp + 0x10]
   563: 7b 17 80 00              u64 [sp + 0x80] = a0
   567: 95 17 28                 a0 = sp + 0x28
   570: 7b 17 88 00              u64 [sp + 0x88] = a0
   574: 82 17 08                 a0 = u64 [sp + 0x8]
   577: 7b 17 90 00              u64 [sp + 0x90] = a0
   581: 82 17                    a0 = u64 [sp]
   583: 7b 17 48                 u64 [sp + 0x48] = a0
   586: 49 11 50 02              u64 [sp + 80] = 0x2
   590: 49 11 68                 u64 [sp + 104] = 0
   593: 95 18 78                 a1 = sp + 0x78
   596: 7b 18 58                 u64 [sp + 0x58] = a1
   599: 49 11 60 02              u64 [sp + 96] = 0x2
   603: 95 17 30                 a0 = sp + 0x30
   606: 95 18 48                 a1 = sp + 0x48
   609: 50 10 0e 20 03           ra = 14, jump @106
      :                          @34 [@dyn 7]
   614: 82 15 38                 s0 = u64 [sp + 0x38]
   617: 82 1b 40                 a4 = u64 [sp + 0x40]
   620: 82 16 30                 s1 = u64 [sp + 0x30]
   623: 33 07 02                 a0 = 0x2
   626: 33 08                    a1 = 0
   628: 33 09                    a2 = 0
   630: 64 5a                    a3 = s0
   632: 33 00 10                 ra = 0x10
   635: 0a 64                    ecalli 100 // 'log'
   637: 01                       fallthrough
      :                          @35 [@dyn 8]
   638: 82 17 18                 a0 = u64 [sp + 0x18]
   641: c8 67 07                 a0 = a0 + s1
   644: 53 27 00 f0 23           jump @41 if a0 <u 4294963200
      :                          @36
   649: 33 07 10 00 03           a0 = 0x30010
   654: 95 77 00 10              a0 = a0 + 0x1000
   658: 01                       fallthrough
      :                          @37
   659: 82 78                    a1 = u64 [a0]
   661: c9 87 09                 a2 = a0 - a1
   664: ab 59 0f                 jump @41 if a2 != s0
      :                          @38
   667: c9 68 09                 a2 = a1 - s1
   670: 01                       fallthrough
      :                          @39
   671: 82 7a                    a3 = u64 [a0]
   673: ab 8a f2                 jump @37 if a3 != a1
      :                          @40
   676: 7b 79                    u64 [a0] = a2
   678: 01                       fallthrough
      :                          @41
   679: 33 05 02                 s0 = 0x2
   682: 7a 15 24                 u32 [sp + 0x24] = s0
   685: 0a                       ecalli 0 // 'gas'
   686: 7b 17 28                 u64 [sp + 0x28] = a0
   689: 95 17 24                 a0 = sp + 0x24
   692: 7b 17 78                 u64 [sp + 0x78] = a0
   695: 33 07 02                 a0 = 0x2
   698: 7b 17 80 00              u64 [sp + 0x80] = a0
   702: 95 17 28                 a0 = sp + 0x28
   705: 7b 17 88 00              u64 [sp + 0x88] = a0
   709: 33 07 06                 a0 = 0x6
   712: 7b 17 90 00              u64 [sp + 0x90] = a0
   716: 33 07 28 00 01           a0 = 0x10028
   721: 7b 17 48                 u64 [sp + 0x48] = a0
   724: 7b 15 50                 u64 [sp + 0x50] = s0
   727: 49 11 68                 u64 [sp + 104] = 0
   730: 95 17 78                 a0 = sp + 0x78
   733: 7b 17 58                 u64 [sp + 0x58] = a0
   736: 7b 15 60                 u64 [sp + 0x60] = s0
   739: 95 17 30                 a0 = sp + 0x30
   742: 95 18 48                 a1 = sp + 0x48
   745: 50 10 12 98 02           ra = 18, jump @106
      :                          @42 [@dyn 9]
   750: 82 15 38                 s0 = u64 [sp + 0x38]
   753: 82 1b 40                 a4 = u64 [sp + 0x40]
   756: 82 16 30                 s1 = u64 [sp + 0x30]
   759: 33 07 02                 a0 = 0x2
   762: 33 08                    a1 = 0
   764: 33 09                    a2 = 0
   766: 64 5a                    a3 = s0
   768: 33 00 14                 ra = 0x14
   771: 0a 64                    ecalli 100 // 'log'
   773: 01                       fallthrough
      :                          @43 [@dyn 10]
   774: 82 17 18                 a0 = u64 [sp + 0x18]
   777: c8 67 07                 a0 = a0 + s1
   780: 53 27 00 f0 25           jump @49 if a0 <u 4294963200
      :                          @44
   785: 33 07 10 00 03           a0 = 0x30010
   790: 95 77 00 10              a0 = a0 + 0x1000
   794: 01                       fallthrough
      :                          @45
   795: 82 78                    a1 = u64 [a0]
   797: c9 87 09                 a2 = a0 - a1
   800: ab 59 11                 jump @49 if a2 != s0
      :                          @46
   803: c9 68 09                 a2 = a1 - s1
   806: 01                       fallthrough
      :                          @47
   807: 82 7a                    a3 = u64 [a0]
   809: ab 8a f2                 jump @45 if a3 != a1
      :                          @48
   812: 7b 79                    u64 [a0] = a2
   814: 33 0b                    a4 = 0
   816: 01                       fallthrough
      :                          @49
   817: 33 07 00 00 01           a0 = 0x10000
   822: 33 08                    a1 = 0
   824: 82 10 a8 00              ra = u64 [sp + 0xa8]
   828: 82 15 a0 00              s0 = u64 [sp + 0xa0]
   832: 82 16 98 00              s1 = u64 [sp + 0x98]
   836: 95 11 b0 00              sp = sp + 0xb0
   840: 32 00                    ret
      :                          @50
   842: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   845: 7b 10 40                 u64 [sp + 0x40] = ra
   848: 7b 15 38                 u64 [sp + 0x38] = s0
   851: 7b 16 30                 u64 [sp + 0x30] = s1
   854: c8 89 09                 a2 = a2 + a1
   857: ac 89 52                 jump @58 if a2 <u a1
      :                          @51
   860: 64 75                    s0 = a0
   862: 82 77                    a0 = u64 [a0]
   864: 97 78 01                 a1 = a0 << 0x1
   867: 33 0a 08                 a3 = 0x8
   870: e4 a9 09                 a2 = maxu(a2, a3)
   873: e4 98 06                 s1 = maxu(a1, a2)
   876: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
   879: 98 88 3f                 a1 = a1 >> 0x3f
   882: 51 07 12                 jump @53 if a0 == 0
      :                          @52
   885: 82 59 08                 a2 = u64 [s0 + 0x8]
   888: 7b 19 18                 u64 [sp + 0x18] = a2
   891: 49 11 20 01              u64 [sp + 32] = 0x1
   895: 7b 17 28                 u64 [sp + 0x28] = a0
   898: 28 06                    jump @54
      :                          @53
   900: 49 11 20                 u64 [sp + 32] = 0
   903: 01                       fallthrough
      :                          @54
   904: 64 17                    a0 = sp
   906: 95 1a 18                 a3 = sp + 0x18
   909: 64 69                    a2 = s1
   911: 50 10 16 32              ra = 22, jump @62
      :                          @55 [@dyn 11]
   915: 82 18                    a1 = u64 [sp]
   917: 82 17 08                 a0 = u64 [sp + 0x8]
   920: 51 08 14                 jump @59 if a1 == 0
      :                          @56
   923: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
   933: aa 87 0d                 jump @60 if a0 == a1
      :                          @57
   936: 52 07 18                 jump @61 if a0 != 0
      :                          @58
   939: 00                       trap
      :                          @59
   940: 7b 57 08                 u64 [s0 + 0x8] = a0
   943: 7b 56                    u64 [s0] = s1
   945: 01                       fallthrough
      :                          @60
   946: 82 10 40                 ra = u64 [sp + 0x40]
   949: 82 15 38                 s0 = u64 [sp + 0x38]
   952: 82 16 30                 s1 = u64 [sp + 0x30]
   955: 95 11 48                 sp = sp + 0x48
   958: 32 00                    ret
      :                          @61
   960: 00                       trap
      :                          @62
   961: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   964: 7b 10 30                 u64 [sp + 0x30] = ra
   967: 7b 15 28                 u64 [sp + 0x28] = s0
   970: 7b 16 20                 u64 [sp + 0x20] = s1
   973: 64 95                    s0 = a2
   975: 64 72                    t0 = a0
   977: 51 08 76                 jump @72 if a1 == 0
      :                          @63
   980: 82 a7 08                 a0 = u64 [a3 + 0x8]
   983: 51 07 79                 jump @73 if a0 == 0
      :                          @64
   986: 82 a9 10                 a2 = u64 [a3 + 0x10]
   989: 51 09 a6 00              jump @80 if a2 == 0
      :                          @65
   993: 82 a8                    a1 = u64 [a3]
   995: 33 06 10 00 03           s1 = 0x30010
  1000: 33 03 00 10              t1 = 0x1000
  1004: c8 36 06                 s1 = s1 + t1
  1007: 01                       fallthrough
      :                          @66
  1008: 82 6a                    a3 = u64 [s1]
  1010: c8 5a 07                 a0 = a3 + s0
  1013: ac a7 cb 00              jump @86 if a0 <u a3
      :                          @67
  1017: 95 7b 01                 a4 = a0 + 0x1
  1020: 88 bc 01                 a5 = a4 <u 0x1
  1023: d8 b3 0b                 a4 = t1 <u a4
  1026: d4 cb 0b                 a4 = a4 | a5
  1029: 52 0b bb 00              jump @86 if a4 != 0
      :                          @68
  1033: 82 6b                    a4 = u64 [s1]
  1035: ab ab e5                 jump @66 if a4 != a3
      :                          @69
  1038: 7b 67                    u64 [s1] = a0
  1040: 33 0c                    a5 = 0
  1042: 7b 12 18                 u64 [sp + 0x18] = t0
  1045: 33 0a 10 00 03           a3 = 0x30010
  1050: 33 0b 00 10              a4 = 0x1000
  1054: 7b 1a                    u64 [sp] = a3
  1056: c8 ba 0a                 a3 = a3 + a4
  1059: c9 7a 07                 a0 = a3 - a0
  1062: 7b 17 10                 u64 [sp + 0x10] = a0
  1065: 7b 18 08                 u64 [sp + 0x8] = a1
  1068: 64 96                    s1 = a2
  1070: 50 10 18 b3 03           ra = 24, jump @156
      :                          @70 [@dyn 12]
  1075: 54 26 00 10 95 00        jump @87 if s1 <=u 4096
      :                          @71
  1081: 82 12 18                 t0 = u64 [sp + 0x18]
  1084: 82 18 10                 a1 = u64 [sp + 0x10]
  1087: 33 07                    a0 = 0
  1089: 7b 28 08                 u64 [t0 + 0x8] = a1
  1092: 28 b2 00                 jump @93
      :                          @72
  1095: 49 12 08                 u64 [t0 + 8] = 0
  1098: 33 07 01                 a0 = 0x1
  1101: 28 a9 00                 jump @93
      :                          @73
  1104: 33 09 10 00 03           a2 = 0x30010
  1109: 33 07 00 10              a0 = 0x1000
  1113: c8 79 09                 a2 = a2 + a0
  1116: 01                       fallthrough
      :                          @74
  1117: 82 9a                    a3 = u64 [a2]
  1119: c8 5a 08                 a1 = a3 + s0
  1122: ac a8 5e                 jump @86 if a1 <u a3
      :                          @75
  1125: 95 8b 01                 a4 = a1 + 0x1
  1128: 88 bc 01                 a5 = a4 <u 0x1
  1131: d8 b7 0b                 a4 = a0 <u a4
  1134: d4 cb 0b                 a4 = a4 | a5
  1137: 52 0b 4f                 jump @86 if a4 != 0
      :                          @76
  1140: 82 9b                    a4 = u64 [a2]
  1142: ab ab e7                 jump @74 if a4 != a3
      :                          @77
  1145: 7b 98                    u64 [a2] = a1
  1147: 33 0c                    a5 = 0
  1149: 01                       fallthrough
      :                          @78
  1150: ab ab df                 jump @74 if a4 != a3
      :                          @79
  1153: 28 30                    jump @85
      :                          @80
  1155: 33 09 10 00 03           a2 = 0x30010
  1160: 33 07 00 10              a0 = 0x1000
  1164: c8 79 09                 a2 = a2 + a0
  1167: 01                       fallthrough
      :                          @81
  1168: 82 9a                    a3 = u64 [a2]
  1170: c8 5a 08                 a1 = a3 + s0
  1173: ac a8 2b                 jump @86 if a1 <u a3
      :                          @82
  1176: 95 8b 01                 a4 = a1 + 0x1
  1179: 88 bc 01                 a5 = a4 <u 0x1
  1182: d8 b7 0b                 a4 = a0 <u a4
  1185: d4 cb 0b                 a4 = a4 | a5
  1188: 52 0b 1c                 jump @86 if a4 != 0
      :                          @83
  1191: 82 9b                    a4 = u64 [a2]
  1193: ab ab e7                 jump @81 if a4 != a3
      :                          @84
  1196: 7b 98                    u64 [a2] = a1
  1198: 33 0c                    a5 = 0
  1200: 01                       fallthrough
      :                          @85
  1201: 33 07 10 10 03           a0 = 0x31010
  1206: c9 87 08                 a1 = a0 - a1
  1209: 33 07                    a0 = 0
  1211: 7b 28 08                 u64 [t0 + 0x8] = a1
  1214: 28 38                    jump @93
      :                          @86
  1216: 33 07 01                 a0 = 0x1
  1219: 7b 27 08                 u64 [t0 + 0x8] = a0
  1222: 28 30                    jump @93
      :                          @87
  1224: 64 6c                    a5 = s1
  1226: 82 17                    a0 = u64 [sp]
  1228: 95 77 00 10              a0 = a0 + 0x1000
  1232: 82 12 18                 t0 = u64 [sp + 0x18]
  1235: 82 16 08                 s1 = u64 [sp + 0x8]
  1238: 01                       fallthrough
      :                          @88
  1239: 82 78                    a1 = u64 [a0]
  1241: c9 87 09                 a2 = a0 - a1
  1244: ab 69 11                 jump @92 if a2 != s1
      :                          @89
  1247: c9 c8 09                 a2 = a1 - a5
  1250: 01                       fallthrough
      :                          @90
  1251: 82 7a                    a3 = u64 [a0]
  1253: ab 8a f2                 jump @88 if a3 != a1
      :                          @91
  1256: 7b 79                    u64 [a0] = a2
  1258: 33 0b                    a4 = 0
  1260: 01                       fallthrough
      :                          @92
  1261: 82 18 10                 a1 = u64 [sp + 0x10]
  1264: 33 07                    a0 = 0
  1266: 7b 28 08                 u64 [t0 + 0x8] = a1
  1269: 01                       fallthrough
      :                          @93
  1270: 7b 25 10                 u64 [t0 + 0x10] = s0
  1273: 7b 27                    u64 [t0] = a0
  1275: 82 10 30                 ra = u64 [sp + 0x30]
  1278: 82 15 28                 s0 = u64 [sp + 0x28]
  1281: 82 16 20                 s1 = u64 [sp + 0x20]
  1284: 95 11 38                 sp = sp + 0x38
  1287: 32 00                    ret
      :                          @94
  1289: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1292: 7b 10 40                 u64 [sp + 0x40] = ra
  1295: 7b 15 38                 u64 [sp + 0x38] = s0
  1298: 7b 16 30                 u64 [sp + 0x30] = s1
  1301: 95 88 01                 a1 = a1 + 0x1
  1304: 51 08 53                 jump @102 if a1 == 0
      :                          @95
  1307: 64 75                    s0 = a0
  1309: 82 77                    a0 = u64 [a0]
  1311: 97 79 01                 a2 = a0 << 0x1
  1314: 33 0a 08                 a3 = 0x8
  1317: e4 a8 08                 a1 = maxu(a1, a3)
  1320: e4 89 06                 s1 = maxu(a2, a1)
  1323: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1326: 98 88 3f                 a1 = a1 >> 0x3f
  1329: 51 07 12                 jump @97 if a0 == 0
      :                          @96
  1332: 82 59 08                 a2 = u64 [s0 + 0x8]
  1335: 7b 19 18                 u64 [sp + 0x18] = a2
  1338: 49 11 20 01              u64 [sp + 32] = 0x1
  1342: 7b 17 28                 u64 [sp + 0x28] = a0
  1345: 28 06                    jump @98
      :                          @97
  1347: 49 11 20                 u64 [sp + 32] = 0
  1350: 01                       fallthrough
      :                          @98
  1351: 64 17                    a0 = sp
  1353: 95 1a 18                 a3 = sp + 0x18
  1356: 64 69                    a2 = s1
  1358: 50 10 1a 73 fe           ra = 26, jump @62
      :                          @99 [@dyn 13]
  1363: 82 18                    a1 = u64 [sp]
  1365: 82 17 08                 a0 = u64 [sp + 0x8]
  1368: 51 08 14                 jump @103 if a1 == 0
      :                          @100
  1371: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1381: aa 87 0d                 jump @104 if a0 == a1
      :                          @101
  1384: 52 07 18                 jump @105 if a0 != 0
      :                          @102
  1387: 00                       trap
      :                          @103
  1388: 7b 57 08                 u64 [s0 + 0x8] = a0
  1391: 7b 56                    u64 [s0] = s1
  1393: 01                       fallthrough
      :                          @104
  1394: 82 10 40                 ra = u64 [sp + 0x40]
  1397: 82 15 38                 s0 = u64 [sp + 0x38]
  1400: 82 16 30                 s1 = u64 [sp + 0x30]
  1403: 95 11 48                 sp = sp + 0x48
  1406: 32 00                    ret
      :                          @105
  1408: 00                       trap
      :                          @106
  1409: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1412: 7b 10 30                 u64 [sp + 0x30] = ra
  1415: 7b 15 28                 u64 [sp + 0x28] = s0
  1418: 7b 16 20                 u64 [sp + 0x20] = s1
  1421: 82 8a 08                 a3 = u64 [a1 + 0x8]
  1424: 64 75                    s0 = a0
  1426: 51 0a 35                 jump @111 if a3 == 0
      :                          @107
  1429: 82 89                    a2 = u64 [a1]
  1431: 33 07                    a0 = 0
  1433: 95 9b 08                 a4 = a2 + 0x8
  1436: 01                       fallthrough
      :                          @108
  1437: 82 bc                    a5 = u64 [a4]
  1439: c8 c7 07                 a0 = a0 + a5
  1442: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1445: 95 bb 10                 a4 = a4 + 0x10
  1448: 52 0a f5                 jump @108 if a3 != 0
      :                          @109
  1451: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1454: 51 0a 24                 jump @113 if a3 == 0
      :                          @110
  1457: 82 99 08                 a2 = u64 [a2 + 0x8]
  1460: 8e 99                    a2 = a2 >u 0
  1462: 88 7a 10                 a3 = a0 <u 0x10
  1465: 85 aa 01                 a3 = a3 ^ 0x1
  1468: d4 a9 09                 a2 = a2 | a3
  1471: 89 7a                    a3 = a0 <s 0
  1473: e0 a9 09                 a2 = a2 & ~a3
  1476: 52 09 0a                 jump @112 if a2 != 0
      :                          @111
  1479: 33 07                    a0 = 0
  1481: 33 09 01                 a2 = 0x1
  1484: 28 49                    jump @121
      :                          @112
  1486: 97 77 01                 a0 = a0 << 0x1
  1489: 01                       fallthrough
      :                          @113
  1490: 51 07 3f                 jump @120 if a0 == 0
      :                          @114
  1493: 57 07 72                 jump @126 if a0 <s 0
      :                          @115
  1496: 64 52                    t0 = s0
  1498: 33 0b 10 00 03           a4 = 0x30010
  1503: 33 09 00 10              a2 = 0x1000
  1507: c8 9b 0b                 a4 = a4 + a2
  1510: 01                       fallthrough
      :                          @116
  1511: 82 bc                    a5 = u64 [a4]
  1513: c8 7c 0a                 a3 = a5 + a0
  1516: ac ca 59                 jump @124 if a3 <u a5
      :                          @117
  1519: 95 a5 01                 s0 = a3 + 0x1
  1522: 88 56 01                 s1 = s0 <u 0x1
  1525: d8 59 05                 s0 = a2 <u s0
  1528: d4 65 05                 s0 = s0 | s1
  1531: 52 05 4a                 jump @124 if s0 != 0
      :                          @118
  1534: 82 b6                    s1 = u64 [a4]
  1536: ab c6 e7                 jump @116 if s1 != a5
      :                          @119
  1539: 7b ba                    u64 [a4] = a3
  1541: 33 09 10 10 03           a2 = 0x31010
  1546: c9 a9 09                 a2 = a2 - a3
  1549: 64 25                    s0 = t0
  1551: 28 06                    jump @121
      :                          @120
  1553: 33 09 01                 a2 = 0x1
  1556: 01                       fallthrough
      :                          @121
  1557: 7b 17                    u64 [sp] = a0
  1559: 7b 19 08                 u64 [sp + 0x8] = a2
  1562: 49 11 10                 u64 [sp + 16] = 0
  1565: 64 17                    a0 = sp
  1567: 50 10 1c 26 06           ra = 28, jump @240
      :                          @122 [@dyn 14]
  1572: 52 07 22                 jump @125 if a0 != 0
      :                          @123
  1575: 82 17 10                 a0 = u64 [sp + 0x10]
  1578: 82 18 08                 a1 = u64 [sp + 0x8]
  1581: 82 19                    a2 = u64 [sp]
  1583: 7b 57 10                 u64 [s0 + 0x10] = a0
  1586: 7b 58 08                 u64 [s0 + 0x8] = a1
  1589: 7b 59                    u64 [s0] = a2
  1591: 82 10 30                 ra = u64 [sp + 0x30]
  1594: 82 15 28                 s0 = u64 [sp + 0x28]
  1597: 82 16 20                 s1 = u64 [sp + 0x20]
  1600: 95 11 38                 sp = sp + 0x38
  1603: 32 00                    ret
      :                          @124
  1605: 00                       trap
      :                          @125
  1606: 00                       trap
      :                          @126
  1607: 00                       trap
      :                          @127 [@dyn 15]
  1608: 82 72                    t0 = u64 [a0]
  1610: 33 09 00 f0              a2 = 0xfffffffffffff000
  1614: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  1618: ac 9a 27                 jump @133 if a3 <u a2
      :                          @128
  1621: 82 77 08                 a0 = u64 [a0 + 0x8]
  1624: 33 09 10 00 03           a2 = 0x30010
  1629: 95 99 00 10              a2 = a2 + 0x1000
  1633: 01                       fallthrough
      :                          @129
  1634: 82 9a                    a3 = u64 [a2]
  1636: c9 a9 0b                 a4 = a2 - a3
  1639: ab 7b 12                 jump @133 if a4 != a0
      :                          @130
  1642: c9 2a 0b                 a4 = a3 - t0
  1645: 01                       fallthrough
      :                          @131
  1646: 82 9c                    a5 = u64 [a2]
  1648: ab ac f2                 jump @129 if a5 != a3
      :                          @132
  1651: 7b 9b                    u64 [a2] = a4
  1653: 33 08                    a1 = 0
  1655: 32 00                    ret
      :                          @133
  1657: 32 00                    ret
      :                          @134 [@dyn 16]
  1659: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1662: 7b 10 18                 u64 [sp + 0x18] = ra
  1665: 7b 15 10                 u64 [sp + 0x10] = s0
  1668: 7b 16 08                 u64 [sp + 0x8] = s1
  1671: 64 75                    s0 = a0
  1673: 82 7a 10                 a3 = u64 [a0 + 0x10]
  1676: 82 77                    a0 = u64 [a0]
  1678: c9 a7 07                 a0 = a0 - a3
  1681: 64 96                    s1 = a2
  1683: ac 97 2a                 jump @137 if a0 <u a2
      :                          @135
  1686: 7b 1a                    u64 [sp] = a3
  1688: 82 57 08                 a0 = u64 [s0 + 0x8]
  1691: c8 a7 07                 a0 = a0 + a3
  1694: 64 69                    a2 = s1
  1696: 50 10 22 41 01           ra = 34, jump @156
      :                          @136 [@dyn 17]
  1701: 82 17                    a0 = u64 [sp]
  1703: c8 76 06                 s1 = s1 + a0
  1706: 7b 56 10                 u64 [s0 + 0x10] = s1
  1709: 33 07                    a0 = 0
  1711: 82 10 18                 ra = u64 [sp + 0x18]
  1714: 82 15 10                 s0 = u64 [sp + 0x10]
  1717: 82 16 08                 s1 = u64 [sp + 0x8]
  1720: 95 11 20                 sp = sp + 0x20
  1723: 32 00                    ret
      :                          @137
  1725: 64 57                    a0 = s0
  1727: 7b 18                    u64 [sp] = a1
  1729: 64 a8                    a1 = a3
  1731: 64 69                    a2 = s1
  1733: 50 10 24 85 fc           ra = 36, jump @50
      :                          @138 [@dyn 18]
  1738: 82 18                    a1 = u64 [sp]
  1740: 82 5a 10                 a3 = u64 [s0 + 0x10]
  1743: 28 c7                    jump @135
      :                          @139 [@dyn 19]
  1745: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1748: 7b 10 20                 u64 [sp + 0x20] = ra
  1751: 7b 15 18                 u64 [sp + 0x18] = s0
  1754: 7b 16 10                 u64 [sp + 0x10] = s1
  1757: 64 86                    s1 = a1
  1759: 83 88                    i32 a1 = a1 + 0
  1761: 33 09 80 00              a2 = 0x80
  1765: 64 7a                    a3 = a0
  1767: ae 98 2b                 jump @144 if a1 >=u a2
      :                          @140
  1770: 82 a8 10                 a1 = u64 [a3 + 0x10]
  1773: 82 a7                    a0 = u64 [a3]
  1775: ab 78 12                 jump @143 if a1 != a0
      :                          @141
  1778: 64 a7                    a0 = a3
  1780: 64 a5                    s0 = a3
  1782: 50 10 28 13 fe           ra = 40, jump @94
      :                          @142 [@dyn 20]
  1787: 64 5a                    a3 = s0
  1789: 82 58 10                 a1 = u64 [s0 + 0x10]
  1792: 01                       fallthrough
      :                          @143
  1793: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1796: c8 87 07                 a0 = a0 + a1
  1799: 78 76                    u8 [a0] = s1
  1801: 95 88 01                 a1 = a1 + 0x1
  1804: 7b a8 10                 u64 [a3 + 0x10] = a1
  1807: 28 ab 00                 jump @152
      :                          @144
  1810: 8b 67 0b                 i32 a0 = s1 >> 0xb
  1813: 48 11 0c                 u32 [sp + 12] = 0
  1816: 52 07 1c                 jump @146 if a0 != 0
      :                          @145
  1819: 98 67 06                 a0 = s1 >> 0x6
  1822: 86 77 c0 00              a0 = a0 | 0xc0
  1826: 78 17 0c                 u8 [sp + 0xc] = a0
  1829: 84 67 3f                 a0 = s1 & 0x3f
  1832: 86 77 80 00              a0 = a0 | 0x80
  1836: 78 17 0d                 u8 [sp + 0xd] = a0
  1839: 33 06 02                 s1 = 0x2
  1842: 28 63                    jump @149
      :                          @146
  1844: 8b 67 10                 i32 a0 = s1 >> 0x10
  1847: 52 07 29                 jump @148 if a0 != 0
      :                          @147
  1850: 98 67 0c                 a0 = s1 >> 0xc
  1853: 86 77 e0 00              a0 = a0 | 0xe0
  1857: 78 17 0c                 u8 [sp + 0xc] = a0
  1860: 97 67 34                 a0 = s1 << 0x34
  1863: 98 77 3a                 a0 = a0 >> 0x3a
  1866: 95 77 80 00              a0 = a0 + 0x80
  1870: 78 17 0d                 u8 [sp + 0xd] = a0
  1873: 84 67 3f                 a0 = s1 & 0x3f
  1876: 86 77 80 00              a0 = a0 | 0x80
  1880: 78 17 0e                 u8 [sp + 0xe] = a0
  1883: 33 06 03                 s1 = 0x3
  1886: 28 37                    jump @149
      :                          @148
  1888: 97 67 2b                 a0 = s1 << 0x2b
  1891: 98 77 3d                 a0 = a0 >> 0x3d
  1894: 95 77 f0 00              a0 = a0 + 0xf0
  1898: 78 17 0c                 u8 [sp + 0xc] = a0
  1901: 97 67 2e                 a0 = s1 << 0x2e
  1904: 98 77 3a                 a0 = a0 >> 0x3a
  1907: 95 77 80 00              a0 = a0 + 0x80
  1911: 78 17 0d                 u8 [sp + 0xd] = a0
  1914: 97 67 34                 a0 = s1 << 0x34
  1917: 98 77 3a                 a0 = a0 >> 0x3a
  1920: 95 77 80 00              a0 = a0 + 0x80
  1924: 78 17 0e                 u8 [sp + 0xe] = a0
  1927: 84 67 3f                 a0 = s1 & 0x3f
  1930: 86 77 80 00              a0 = a0 | 0x80
  1934: 78 17 0f                 u8 [sp + 0xf] = a0
  1937: 33 06 04                 s1 = 0x4
  1940: 01                       fallthrough
      :                          @149
  1941: 82 a5 10                 s0 = u64 [a3 + 0x10]
  1944: 82 a7                    a0 = u64 [a3]
  1946: c9 57 07                 a0 = a0 - s0
  1949: ac 67 2d                 jump @153 if a0 <u s1
      :                          @150
  1952: 7b 1a                    u64 [sp] = a3
  1954: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1957: c8 57 07                 a0 = a0 + s0
  1960: 95 18 0c                 a1 = sp + 0xc
  1963: 64 69                    a2 = s1
  1965: 50 10 2a 34              ra = 42, jump @156
      :                          @151 [@dyn 21]
  1969: c8 56 06                 s1 = s1 + s0
  1972: 82 17                    a0 = u64 [sp]
  1974: 7b 76 10                 u64 [a0 + 0x10] = s1
  1977: 01                       fallthrough
      :                          @152
  1978: 33 07                    a0 = 0
  1980: 82 10 20                 ra = u64 [sp + 0x20]
  1983: 82 15 18                 s0 = u64 [sp + 0x18]
  1986: 82 16 10                 s1 = u64 [sp + 0x10]
  1989: 95 11 28                 sp = sp + 0x28
  1992: 32 00                    ret
      :                          @153
  1994: 64 a7                    a0 = a3
  1996: 64 58                    a1 = s0
  1998: 64 69                    a2 = s1
  2000: 64 a5                    s0 = a3
  2002: 50 10 2c 78 fb           ra = 44, jump @50
      :                          @154 [@dyn 22]
  2007: 64 5a                    a3 = s0
  2009: 82 55 10                 s0 = u64 [s0 + 0x10]
  2012: 28 c4                    jump @150
      :                          @155 [@dyn 23]
  2014: 28 67 04                 jump @240
      :                          @156
  2017: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2020: 7b 10 18                 u64 [sp + 0x18] = ra
  2023: 7b 15 10                 u64 [sp + 0x10] = s0
  2026: 7b 16 08                 u64 [sp + 0x8] = s1
  2029: 53 19 10 64              jump @165 if a2 <u 16
      :                          @157
  2033: 8d 7a                    i32 a3 = -a0
  2035: 84 a2 07                 t0 = a3 & 0x7
  2038: c8 27 0b                 a4 = a0 + t0
  2041: 51 02 15                 jump @160 if t0 == 0
      :                          @158
  2044: 64 8c                    a5 = a1
  2046: 64 75                    s0 = a0
  2048: 01                       fallthrough
      :                          @159
  2049: 7c ca                    a3 = u8 [a5]
  2051: 78 5a                    u8 [s0] = a3
  2053: 95 55 01                 s0 = s0 + 0x1
  2056: 95 cc 01                 a5 = a5 + 0x1
  2059: ac b5 f6                 jump @159 if s0 <u a4
      :                          @160
  2062: c8 28 03                 t1 = a1 + t0
  2065: c9 29 02                 t0 = a2 - t0
  2068: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2071: 84 38 07                 a1 = t1 & 0x7
  2074: c8 4b 0a                 a3 = a4 + t2
  2077: 51 08 3b                 jump @167 if a1 == 0
      :                          @161
  2080: 58 04 4b                 jump @170 if t2 <=s 0
      :                          @162
  2083: 97 38 03                 a1 = t1 << 0x3
  2086: 84 80 38                 ra = a1 & 0x38
  2089: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2092: 82 c5                    s0 = u64 [a5]
  2094: 8d 88                    i32 a1 = -a1
  2096: 84 88 38                 a1 = a1 & 0x38
  2099: 95 cc 08                 a5 = a5 + 0x8
  2102: 01                       fallthrough
      :                          @163
  2103: 82 c6                    s1 = u64 [a5]
  2105: d0 05 05                 s0 = s0 >> ra
  2108: cf 86 09                 a2 = s1 << a1
  2111: d4 59 09                 a2 = a2 | s0
  2114: 7b b9                    u64 [a4] = a2
  2116: 95 bb 08                 a4 = a4 + 0x8
  2119: 95 cc 08                 a5 = a5 + 0x8
  2122: 64 65                    s0 = s1
  2124: ac ab eb                 jump @163 if a4 <u a3
      :                          @164
  2127: 28 1c                    jump @170
      :                          @165
  2129: 64 7a                    a3 = a0
  2131: 52 09 21                 jump @171 if a2 != 0
      :                          @166
  2134: 28 2f                    jump @173
      :                          @167
  2136: 58 04 13                 jump @170 if t2 <=s 0
      :                          @168
  2139: 64 38                    a1 = t1
  2141: 01                       fallthrough
      :                          @169
  2142: 82 89                    a2 = u64 [a1]
  2144: 7b b9                    u64 [a4] = a2
  2146: 95 bb 08                 a4 = a4 + 0x8
  2149: 95 88 08                 a1 = a1 + 0x8
  2152: ac ab f6                 jump @169 if a4 <u a3
      :                          @170
  2155: c8 43 08                 a1 = t1 + t2
  2158: 84 29 07                 a2 = t0 & 0x7
  2161: 51 09 14                 jump @173 if a2 == 0
      :                          @171
  2164: c8 a9 09                 a2 = a2 + a3
  2167: 01                       fallthrough
      :                          @172
  2168: 7c 8b                    a4 = u8 [a1]
  2170: 78 ab                    u8 [a3] = a4
  2172: 95 aa 01                 a3 = a3 + 0x1
  2175: 95 88 01                 a1 = a1 + 0x1
  2178: ac 9a f6                 jump @172 if a3 <u a2
      :                          @173
  2181: 82 10 18                 ra = u64 [sp + 0x18]
  2184: 82 15 10                 s0 = u64 [sp + 0x10]
  2187: 82 16 08                 s1 = u64 [sp + 0x8]
  2190: 95 11 20                 sp = sp + 0x20
  2193: 32 00                    ret
      :                          @174 [@dyn 24]
  2195: 82 77                    a0 = u64 [a0]
  2197: 01                       fallthrough
      :                          @175
  2198: 28                       jump @175
      :                          @176
  2199: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  2202: 7b 10 58                 u64 [sp + 0x58] = ra
  2205: 7b 15 50                 u64 [sp + 0x50] = s0
  2208: 7b 16 48                 u64 [sp + 0x48] = s1
  2211: 7b 19 08                 u64 [sp + 0x8] = a2
  2214: 7b 18                    u64 [sp] = a1
  2216: 98 7a 04                 a3 = a0 >> 0x4
  2219: 33 09 27                 a2 = 0x27
  2222: 53 2a 71 02 81 00        jump @179 if a3 <u 625
      :                          @177
  2228: 33 09 27                 a2 = 0x27
  2231: 95 1b 46                 a4 = sp + 0x46
  2234: 3a 08 00 00 03           a1 = u64 [0x30000]
  2239: 7b 18 18                 u64 [sp + 0x18] = a1
  2242: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  2248: 33 03 7b 14              t1 = 0x147b
  2252: 33 05 7a 00 01           s0 = 0x1007a
  2257: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  2263: 01                       fallthrough
      :                          @178
  2264: 64 74                    t2 = a0
  2266: 82 17 18                 a0 = u64 [sp + 0x18]
  2269: d6 74 07                 a0 = t2 mulhu a0
  2272: 98 77 0b                 a0 = a0 >> 0xb
  2275: 82 18 10                 a1 = u64 [sp + 0x10]
  2278: c0 87 02                 i32 t0 = a0 * a1
  2281: c8 42 0a                 a3 = t0 + t2
  2284: 97 a2 30                 t0 = a3 << 0x30
  2287: 98 28 32                 a1 = t0 >> 0x32
  2290: ca 38 08                 a1 = a1 * t1
  2293: 98 8c 11                 a5 = a1 >> 0x11
  2296: 98 88 10                 a1 = a1 >> 0x10
  2299: 84 88 fe 07              a1 = a1 & 0x7fe
  2303: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  2306: c8 ca 0a                 a3 = a3 + a5
  2309: 97 aa 31                 a3 = a3 << 0x31
  2312: 98 aa 30                 a3 = a3 >> 0x30
  2315: c8 58 08                 a1 = a1 + s0
  2318: 7c 8c                    a5 = u8 [a1]
  2320: 7c 88 01                 a1 = u8 [a1 + 0x1]
  2323: c8 5a 0a                 a3 = a3 + s0
  2326: 7c a6 01                 s1 = u8 [a3 + 0x1]
  2329: 7c aa                    a3 = u8 [a3]
  2331: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  2334: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  2337: 78 b6 01                 u8 [a4 + 0x1] = s1
  2340: 78 ba                    u8 [a4] = a3
  2342: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  2345: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  2348: ac 40 ac                 jump @178 if ra <u t2
      :                          @179
  2351: 54 17 63 3b              jump @181 if a0 <=u 99
      :                          @180
  2355: 97 78 30                 a1 = a0 << 0x30
  2358: 98 88 32                 a1 = a1 >> 0x32
  2361: 96 88 7b 14              a1 = a1 * 0x147b
  2365: 98 88 11                 a1 = a1 >> 0x11
  2368: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  2371: c8 a7 07                 a0 = a0 + a3
  2374: 97 77 31                 a0 = a0 << 0x31
  2377: 98 77 30                 a0 = a0 >> 0x30
  2380: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2383: 33 0a 7a 00 01           a3 = 0x1007a
  2388: c8 a7 07                 a0 = a0 + a3
  2391: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  2394: 7c 77                    a0 = u8 [a0]
  2396: 95 1b 21                 a4 = sp + 0x21
  2399: c8 9b 0b                 a4 = a4 + a2
  2402: 78 ba 01                 u8 [a4 + 0x1] = a3
  2405: 78 b7                    u8 [a4] = a0
  2407: 64 87                    a0 = a1
  2409: 01                       fallthrough
      :                          @181
  2410: 55 17 0a 14              jump @183 if a0 >=u 10
      :                          @182
  2414: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  2417: 95 18 21                 a1 = sp + 0x21
  2420: c8 98 08                 a1 = a1 + a2
  2423: 83 77 30                 i32 a0 = a0 + 0x30
  2426: 78 87                    u8 [a1] = a0
  2428: 28 21                    jump @184
      :                          @183
  2430: 97 77 01                 a0 = a0 << 0x1
  2433: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2436: 33 08 7a 00 01           a1 = 0x1007a
  2441: c8 87 07                 a0 = a0 + a1
  2444: 7c 78 01                 a1 = u8 [a0 + 0x1]
  2447: 7c 77                    a0 = u8 [a0]
  2449: 95 1a 21                 a3 = sp + 0x21
  2452: c8 9a 0a                 a3 = a3 + a2
  2455: 78 a8 01                 u8 [a3 + 0x1] = a1
  2458: 78 a7                    u8 [a3] = a0
  2460: 01                       fallthrough
      :                          @184
  2461: 95 1b 21                 a4 = sp + 0x21
  2464: c8 9b 0b                 a4 = a4 + a2
  2467: 9a 9c 27                 a5 = 0x27 - a2
  2470: 33 09 78 00 01           a2 = 0x10078
  2475: 82 17 08                 a0 = u64 [sp + 0x8]
  2478: 82 18                    a1 = u64 [sp]
  2480: 33 0a                    a3 = 0
  2482: 50 10 32 12              ra = 50, jump @186
      :                          @185 [@dyn 25]
  2486: 82 10 58                 ra = u64 [sp + 0x58]
  2489: 82 15 50                 s0 = u64 [sp + 0x50]
  2492: 82 16 48                 s1 = u64 [sp + 0x48]
  2495: 95 11 60                 sp = sp + 0x60
  2498: 32 00                    ret
      :                          @186
  2500: 95 11 98                 sp = sp + 0xffffffffffffff98
  2503: 7b 10 60                 u64 [sp + 0x60] = ra
  2506: 7b 15 58                 u64 [sp + 0x58] = s0
  2509: 7b 16 50                 u64 [sp + 0x50] = s1
  2512: 7b 1b 18                 u64 [sp + 0x18] = a4
  2515: 51 08 4f                 jump @193 if a1 == 0
      :                          @187
  2518: 80 76 34                 s1 = u32 [a0 + 0x34]
  2521: 84 68 01                 a1 = s1 & 0x1
  2524: 33 0b 2b                 a4 = 0x2b
  2527: 33 05 00 00 11           s0 = 0x110000
  2532: db 8b 05                 s0 = a4 if a1 != 0
  2535: 7b 15 28                 u64 [sp + 0x28] = s0
  2538: c8 c8 02                 t0 = a1 + a5
  2541: 84 68 04                 a1 = s1 & 0x4
  2544: 51 08 42                 jump @194 if a1 == 0
      :                          @188
  2547: 7b 19 30                 u64 [sp + 0x30] = a2
  2550: 33 08                    a1 = 0
  2552: 51 0a 1a                 jump @191 if a3 == 0
      :                          @189
  2555: 64 a5                    s0 = a3
  2557: 01                       fallthrough
      :                          @190
  2558: 7d 9b                    a4 = i8 [a2]
  2560: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  2563: 85 bb 01                 a4 = a4 ^ 0x1
  2566: c8 b8 08                 a1 = a1 + a4
  2569: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2572: 95 99 01                 a2 = a2 + 0x1
  2575: 52 05 ef                 jump @190 if s0 != 0
      :                          @191
  2578: c8 82 02                 t0 = t0 + a1
  2581: 7b 1a 38                 u64 [sp + 0x38] = a3
  2584: 82 78                    a1 = u64 [a0]
  2586: 7b 1c 20                 u64 [sp + 0x20] = a5
  2589: 52 08 23                 jump @195 if a1 != 0
      :                          @192
  2592: 28 41                    jump @200
      :                          @193
  2594: 81 76 34                 s1 = i32 [a0 + 0x34]
  2597: 95 c2 01                 t0 = a5 + 0x1
  2600: 49 11 28 2d              u64 [sp + 40] = 0x2d
  2604: 84 68 04                 a1 = s1 & 0x4
  2607: 52 08 c4                 jump @188 if a1 != 0
      :                          @194
  2610: 49 11 30                 u64 [sp + 48] = 0
  2613: 7b 1a 38                 u64 [sp + 0x38] = a3
  2616: 82 78                    a1 = u64 [a0]
  2618: 7b 1c 20                 u64 [sp + 0x20] = a5
  2621: 51 08 24                 jump @200 if a1 == 0
      :                          @195
  2624: 82 75 08                 s0 = u64 [a0 + 0x8]
  2627: ae 52 1e                 jump @200 if t0 >=u s0
      :                          @196
  2630: 84 66 08                 s1 = s1 & 0x8
  2633: 52 06 50                 jump @203 if s1 != 0
      :                          @197
  2636: 7c 79 38                 a2 = u8 [a0 + 0x38]
  2639: c9 25 0a                 a3 = s0 - t0
  2642: 5a 19 01 a1 00           jump @210 if a2 >s 1
      :                          @198
  2647: 52 09 ae 00              jump @212 if a2 != 0
      :                          @199
  2651: 7b 1a 10                 u64 [sp + 0x10] = a3
  2654: 28 ad 00                 jump @213
      :                          @200
  2657: 82 75 20                 s0 = u64 [a0 + 0x20]
  2660: 82 76 28                 s1 = u64 [a0 + 0x28]
  2663: 64 57                    a0 = s0
  2665: 64 68                    a1 = s1
  2667: 82 19 28                 a2 = u64 [sp + 0x28]
  2670: 82 1a 30                 a3 = u64 [sp + 0x30]
  2673: 82 1b 38                 a4 = u64 [sp + 0x38]
  2676: 50 10 34 6d 01           ra = 52, jump @233
      :                          @201 [@dyn 26]
  2681: 33 08 01                 a1 = 0x1
  2684: 52 07 bc 00              jump @218 if a0 != 0
      :                          @202
  2688: 82 6c 18                 a5 = u64 [s1 + 0x18]
  2691: 64 57                    a0 = s0
  2693: 82 18 18                 a1 = u64 [sp + 0x18]
  2696: 82 19 20                 a2 = u64 [sp + 0x20]
  2699: 82 10 60                 ra = u64 [sp + 0x60]
  2702: 82 15 58                 s0 = u64 [sp + 0x58]
  2705: 82 16 50                 s1 = u64 [sp + 0x50]
  2708: 95 11 68                 sp = sp + 0x68
  2711: 32 0c                    jump [a5]
      :                          @203
  2713: 7b 12 40                 u64 [sp + 0x40] = t0
  2716: 81 78 30                 a1 = i32 [a0 + 0x30]
  2719: 7b 18 08                 u64 [sp + 0x8] = a1
  2722: 7c 79 38                 a2 = u8 [a0 + 0x38]
  2725: 7b 19                    u64 [sp] = a2
  2727: 82 79 20                 a2 = u64 [a0 + 0x20]
  2730: 82 76 28                 s1 = u64 [a0 + 0x28]
  2733: 48 17 30 30              u32 [a0 + 48] = 0x30
  2737: 7b 17 10                 u64 [sp + 0x10] = a0
  2740: 46 17 38 01              u8 [a0 + 56] = 0x1
  2744: 7b 19 48                 u64 [sp + 0x48] = a2
  2747: 64 97                    a0 = a2
  2749: 64 68                    a1 = s1
  2751: 82 19 28                 a2 = u64 [sp + 0x28]
  2754: 82 1a 30                 a3 = u64 [sp + 0x30]
  2757: 82 1b 38                 a4 = u64 [sp + 0x38]
  2760: 50 10 36 19 01           ra = 54, jump @233
      :                          @204 [@dyn 27]
  2765: 52 07 67                 jump @217 if a0 != 0
      :                          @205
  2768: 82 17 40                 a0 = u64 [sp + 0x40]
  2771: c9 75 05                 s0 = s0 - a0
  2774: 95 55 01                 s0 = s0 + 0x1
  2777: 01                       fallthrough
      :                          @206
  2778: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2781: 51 05 c6 00              jump @228 if s0 == 0
      :                          @207
  2785: 82 69 20                 a2 = u64 [s1 + 0x20]
  2788: 33 08 30                 a1 = 0x30
  2791: 82 17 48                 a0 = u64 [sp + 0x48]
  2794: b4 90 01 38              ra = 56, jump [a2]
      :                          @208 [@dyn 28]
  2798: 51 07 ec                 jump @206 if a0 == 0
      :                          @209
  2801: 28 43                    jump @217
      :                          @210
  2803: 52 19 02 12              jump @212 if a2 != 2
      :                          @211
  2807: 98 a9 01                 a2 = a3 >> 0x1
  2810: 95 a8 01                 a1 = a3 + 0x1
  2813: 98 88 01                 a1 = a1 >> 0x1
  2816: 7b 18 10                 u64 [sp + 0x10] = a1
  2819: 28 08                    jump @213
      :                          @212
  2821: 64 a9                    a2 = a3
  2823: 49 11 10                 u64 [sp + 16] = 0
  2826: 01                       fallthrough
      :                          @213
  2827: 82 78 20                 a1 = u64 [a0 + 0x20]
  2830: 7b 18 48                 u64 [sp + 0x48] = a1
  2833: 82 76 28                 s1 = u64 [a0 + 0x28]
  2836: 81 77 30                 a0 = i32 [a0 + 0x30]
  2839: 7b 17 40                 u64 [sp + 0x40] = a0
  2842: 95 95 01                 s0 = a2 + 0x1
  2845: 01                       fallthrough
      :                          @214
  2846: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2849: 51 05 27                 jump @219 if s0 == 0
      :                          @215
  2852: 82 69 20                 a2 = u64 [s1 + 0x20]
  2855: 82 17 48                 a0 = u64 [sp + 0x48]
  2858: 82 18 40                 a1 = u64 [sp + 0x40]
  2861: b4 90 01 3a              ra = 58, jump [a2]
      :                          @216 [@dyn 29]
  2865: 51 07 ed                 jump @214 if a0 == 0
      :                          @217
  2868: 33 08 01                 a1 = 0x1
  2871: 01                       fallthrough
      :                          @218
  2872: 64 87                    a0 = a1
  2874: 82 10 60                 ra = u64 [sp + 0x60]
  2877: 82 15 58                 s0 = u64 [sp + 0x58]
  2880: 82 16 50                 s1 = u64 [sp + 0x50]
  2883: 95 11 68                 sp = sp + 0x68
  2886: 32 00                    ret
      :                          @219
  2888: 82 15 48                 s0 = u64 [sp + 0x48]
  2891: 64 57                    a0 = s0
  2893: 64 68                    a1 = s1
  2895: 82 19 28                 a2 = u64 [sp + 0x28]
  2898: 82 1a 30                 a3 = u64 [sp + 0x30]
  2901: 82 1b 38                 a4 = u64 [sp + 0x38]
  2904: 50 10 3c 89 00           ra = 60, jump @233
      :                          @220 [@dyn 30]
  2909: 33 08 01                 a1 = 0x1
  2912: 52 07 d8                 jump @218 if a0 != 0
      :                          @221
  2915: 82 6a 18                 a3 = u64 [s1 + 0x18]
  2918: 64 57                    a0 = s0
  2920: 82 18 18                 a1 = u64 [sp + 0x18]
  2923: 82 19 20                 a2 = u64 [sp + 0x20]
  2926: b4 a0 01 3e              ra = 62, jump [a3]
      :                          @222 [@dyn 31]
  2930: 33 08 01                 a1 = 0x1
  2933: 52 07 c3                 jump @218 if a0 != 0
      :                          @223
  2936: 82 17 10                 a0 = u64 [sp + 0x10]
  2939: 9a 77                    a0 = -a0
  2941: 7b 17 38                 u64 [sp + 0x38] = a0
  2944: 33 05 ff                 s0 = 0xffffffffffffffff
  2947: 01                       fallthrough
      :                          @224
  2948: 82 17 38                 a0 = u64 [sp + 0x38]
  2951: c8 57 07                 a0 = a0 + s0
  2954: 51 17 ff 42              jump @231 if a0 == 4294967295
      :                          @225
  2958: 82 69 20                 a2 = u64 [s1 + 0x20]
  2961: 82 17 48                 a0 = u64 [sp + 0x48]
  2964: 82 18 40                 a1 = u64 [sp + 0x40]
  2967: b4 90 01 40              ra = 64, jump [a2]
      :                          @226 [@dyn 32]
  2971: 95 55 01                 s0 = s0 + 0x1
  2974: 51 07 e6                 jump @224 if a0 == 0
      :                          @227
  2977: 28 37                    jump @232
      :                          @228
  2979: 82 6a 18                 a3 = u64 [s1 + 0x18]
  2982: 82 17 48                 a0 = u64 [sp + 0x48]
  2985: 82 18 18                 a1 = u64 [sp + 0x18]
  2988: 82 19 20                 a2 = u64 [sp + 0x20]
  2991: b4 a0 01 42              ra = 66, jump [a3]
      :                          @229 [@dyn 33]
  2995: 33 08 01                 a1 = 0x1
  2998: 52 07 82                 jump @218 if a0 != 0
      :                          @230
  3001: 33 08                    a1 = 0
  3003: 82 17 10                 a0 = u64 [sp + 0x10]
  3006: 82 19 08                 a2 = u64 [sp + 0x8]
  3009: 7a 79 30                 u32 [a0 + 0x30] = a2
  3012: 82 19                    a2 = u64 [sp]
  3014: 78 79 38                 u8 [a0 + 0x38] = a2
  3017: 28 6f ff                 jump @218
      :                          @231
  3020: 82 15 10                 s0 = u64 [sp + 0x10]
  3023: 82 17 10                 a0 = u64 [sp + 0x10]
  3026: d8 75 08                 a1 = s0 <u a0
  3029: 28 63 ff                 jump @218
      :                          @232
  3032: 82 17 10                 a0 = u64 [sp + 0x10]
  3035: d8 75 08                 a1 = s0 <u a0
  3038: 28 5a ff                 jump @218
      :                          @233
  3041: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3044: 7b 10 20                 u64 [sp + 0x20] = ra
  3047: 7b 15 18                 u64 [sp + 0x18] = s0
  3050: 7b 16 10                 u64 [sp + 0x10] = s1
  3053: 83 9c                    i32 a5 = a2 + 0
  3055: 33 02 00 00 11           t0 = 0x110000
  3060: 64 a6                    s1 = a3
  3062: 64 85                    s0 = a1
  3064: 64 7a                    a3 = a0
  3066: aa 2c 20                 jump @236 if a5 == t0
      :                          @234
  3069: 82 5c 20                 a5 = u64 [s0 + 0x20]
  3072: 64 a7                    a0 = a3
  3074: 64 98                    a1 = a2
  3076: 7b 1b 08                 u64 [sp + 0x8] = a4
  3079: 7b 1a                    u64 [sp] = a3
  3081: b4 c0 01 44              ra = 68, jump [a5]
      :                          @235 [@dyn 34]
  3085: 82 1a                    a3 = u64 [sp]
  3087: 82 1b 08                 a4 = u64 [sp + 0x8]
  3090: 64 78                    a1 = a0
  3092: 33 07 01                 a0 = 0x1
  3095: 52 08 20                 jump @239 if a1 != 0
      :                          @236
  3098: 51 06 1a                 jump @238 if s1 == 0
      :                          @237
  3101: 82 5c 18                 a5 = u64 [s0 + 0x18]
  3104: 64 a7                    a0 = a3
  3106: 64 68                    a1 = s1
  3108: 64 b9                    a2 = a4
  3110: 82 10 20                 ra = u64 [sp + 0x20]
  3113: 82 15 18                 s0 = u64 [sp + 0x18]
  3116: 82 16 10                 s1 = u64 [sp + 0x10]
  3119: 95 11 28                 sp = sp + 0x28
  3122: 32 0c                    jump [a5]
      :                          @238
  3124: 33 07                    a0 = 0
  3126: 01                       fallthrough
      :                          @239
  3127: 82 10 20                 ra = u64 [sp + 0x20]
  3130: 82 15 18                 s0 = u64 [sp + 0x18]
  3133: 82 16 10                 s1 = u64 [sp + 0x10]
  3136: 95 11 28                 sp = sp + 0x28
  3139: 32 00                    ret
      :                          @240
  3141: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  3145: 7b 10 80 00              u64 [sp + 0x80] = ra
  3149: 7b 15 78                 u64 [sp + 0x78] = s0
  3152: 7b 16 70                 u64 [sp + 0x70] = s1
  3155: 49 11 60 20              u64 [sp + 96] = 0x20
  3159: 33 09 03                 a2 = 0x3
  3162: 78 19 68                 u8 [sp + 0x68] = a2
  3165: 49 11 30                 u64 [sp + 48] = 0
  3168: 49 11 40                 u64 [sp + 64] = 0
  3171: 82 86 20                 s1 = u64 [a1 + 0x20]
  3174: 7b 17 50                 u64 [sp + 0x50] = a0
  3177: 33 07 48 00 01           a0 = 0x10048
  3182: 7b 17 58                 u64 [sp + 0x58] = a0
  3185: 51 06 06 01              jump @262 if s1 == 0
      :                          @241
  3189: 82 87 28                 a0 = u64 [a1 + 0x28]
  3192: 51 07 73 01              jump @272 if a0 == 0
      :                          @242
  3196: 33 09                    a2 = 0
  3198: 82 85                    s0 = u64 [a1]
  3200: 7b 18 08                 u64 [sp + 0x8] = a1
  3203: 82 88 10                 a1 = u64 [a1 + 0x10]
  3206: 7b 18 18                 u64 [sp + 0x18] = a1
  3209: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  3212: 97 88 03                 a1 = a1 << 0x3
  3215: 98 88 03                 a1 = a1 >> 0x3
  3218: 95 88 01                 a1 = a1 + 0x1
  3221: 7b 18                    u64 [sp] = a1
  3223: 95 55 08                 s0 = s0 + 0x8
  3226: 96 78 38                 a1 = a0 * 0x38
  3229: 95 66 18                 s1 = s1 + 0x18
  3232: 33 07 30                 a0 = 0x30
  3235: 7b 17 10                 u64 [sp + 0x10] = a0
  3238: 01                       fallthrough
      :                          @243
  3239: 7b 18 20                 u64 [sp + 0x20] = a1
  3242: 7b 19 28                 u64 [sp + 0x28] = a2
  3245: 82 59                    a2 = u64 [s0]
  3247: 51 09 17                 jump @246 if a2 == 0
      :                          @244
  3250: 82 1a 58                 a3 = u64 [sp + 0x58]
  3253: 82 17 50                 a0 = u64 [sp + 0x50]
  3256: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  3259: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3262: b4 a0 01 46              ra = 70, jump [a3]
      :                          @245 [@dyn 35]
  3266: 52 07 4e 01              jump @275 if a0 != 0
      :                          @246
  3270: 81 67 10                 a0 = i32 [s1 + 0x10]
  3273: 7a 17 60                 u32 [sp + 0x60] = a0
  3276: 7c 67 18                 a0 = u8 [s1 + 0x18]
  3279: 78 17 68                 u8 [sp + 0x68] = a0
  3282: 81 67 14                 a0 = i32 [s1 + 0x14]
  3285: 7a 17 64                 u32 [sp + 0x64] = a0
  3288: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3291: 82 67                    a0 = u64 [s1]
  3293: 51 08 26                 jump @251 if a1 == 0
      :                          @247
  3296: 52 18 01 16              jump @249 if a1 != 1
      :                          @248
  3300: 97 77 04                 a0 = a0 << 0x4
  3303: 82 18 18                 a1 = u64 [sp + 0x18]
  3306: c8 87 07                 a0 = a0 + a1
  3309: 82 78 08                 a1 = u64 [a0 + 0x8]
  3312: 82 19 10                 a2 = u64 [sp + 0x10]
  3315: aa 98 07                 jump @250 if a1 == a2
      :                          @249
  3318: 33 08                    a1 = 0
  3320: 28 0f                    jump @252
      :                          @250
  3322: 82 77                    a0 = u64 [a0]
  3324: 82 77                    a0 = u64 [a0]
  3326: 33 08 01                 a1 = 0x1
  3329: 28 06                    jump @252
      :                          @251
  3331: 33 08 01                 a1 = 0x1
  3334: 01                       fallthrough
      :                          @252
  3335: 7b 18 30                 u64 [sp + 0x30] = a1
  3338: 7b 17 38                 u64 [sp + 0x38] = a0
  3341: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  3344: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  3347: 51 08 26                 jump @257 if a1 == 0
      :                          @253
  3350: 52 18 01 16              jump @255 if a1 != 1
      :                          @254
  3354: 97 77 04                 a0 = a0 << 0x4
  3357: 82 18 18                 a1 = u64 [sp + 0x18]
  3360: c8 87 07                 a0 = a0 + a1
  3363: 82 78 08                 a1 = u64 [a0 + 0x8]
  3366: 82 19 10                 a2 = u64 [sp + 0x10]
  3369: aa 98 07                 jump @256 if a1 == a2
      :                          @255
  3372: 33 08                    a1 = 0
  3374: 28 0f                    jump @258
      :                          @256
  3376: 82 77                    a0 = u64 [a0]
  3378: 82 77                    a0 = u64 [a0]
  3380: 33 08 01                 a1 = 0x1
  3383: 28 06                    jump @258
      :                          @257
  3385: 33 08 01                 a1 = 0x1
  3388: 01                       fallthrough
      :                          @258
  3389: 7b 18 40                 u64 [sp + 0x40] = a1
  3392: 7b 17 48                 u64 [sp + 0x48] = a0
  3395: 82 67 08                 a0 = u64 [s1 + 0x8]
  3398: 97 77 04                 a0 = a0 << 0x4
  3401: 82 18 18                 a1 = u64 [sp + 0x18]
  3404: c8 78 08                 a1 = a1 + a0
  3407: 82 87                    a0 = u64 [a1]
  3409: 82 89 08                 a2 = u64 [a1 + 0x8]
  3412: 95 18 30                 a1 = sp + 0x30
  3415: b4 90 01 48              ra = 72, jump [a2]
      :                          @259 [@dyn 36]
  3419: 52 07 b5 00              jump @275 if a0 != 0
      :                          @260
  3423: 95 55 10                 s0 = s0 + 0x10
  3426: 82 18 20                 a1 = u64 [sp + 0x20]
  3429: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  3432: 95 66 38                 s1 = s1 + 0x38
  3435: 82 19 28                 a2 = u64 [sp + 0x28]
  3438: 95 99 01                 a2 = a2 + 0x1
  3441: 52 08 36 ff              jump @243 if a1 != 0
      :                          @261
  3445: 28 69                    jump @270
      :                          @262
  3447: 82 87 18                 a0 = u64 [a1 + 0x18]
  3450: 51 07 71                 jump @272 if a0 == 0
      :                          @263
  3453: 82 85 10                 s0 = u64 [a1 + 0x10]
  3456: 33 0a                    a3 = 0
  3458: 97 79 04                 a2 = a0 << 0x4
  3461: c8 59 09                 a2 = a2 + s0
  3464: 7b 19 20                 u64 [sp + 0x20] = a2
  3467: 7b 18 08                 u64 [sp + 0x8] = a1
  3470: 82 86                    s1 = u64 [a1]
  3472: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3475: 97 77 04                 a0 = a0 << 0x4
  3478: 98 77 04                 a0 = a0 >> 0x4
  3481: 95 77 01                 a0 = a0 + 0x1
  3484: 7b 17                    u64 [sp] = a0
  3486: 95 66 08                 s1 = s1 + 0x8
  3489: 01                       fallthrough
      :                          @264
  3490: 7b 1a 28                 u64 [sp + 0x28] = a3
  3493: 82 69                    a2 = u64 [s1]
  3495: 51 09 16                 jump @267 if a2 == 0
      :                          @265
  3498: 82 1a 58                 a3 = u64 [sp + 0x58]
  3501: 82 17 50                 a0 = u64 [sp + 0x50]
  3504: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3507: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3510: b4 a0 01 4a              ra = 74, jump [a3]
      :                          @266 [@dyn 37]
  3514: 52 07 56                 jump @275 if a0 != 0
      :                          @267
  3517: 82 57                    a0 = u64 [s0]
  3519: 82 59 08                 a2 = u64 [s0 + 0x8]
  3522: 95 18 30                 a1 = sp + 0x30
  3525: b4 90 01 4c              ra = 76, jump [a2]
      :                          @268 [@dyn 38]
  3529: 52 07 47                 jump @275 if a0 != 0
      :                          @269
  3532: 95 66 10                 s1 = s1 + 0x10
  3535: 95 55 10                 s0 = s0 + 0x10
  3538: 82 1a 28                 a3 = u64 [sp + 0x28]
  3541: 95 aa 01                 a3 = a3 + 0x1
  3544: 82 17 20                 a0 = u64 [sp + 0x20]
  3547: ab 75 c7                 jump @264 if s0 != a0
      :                          @270
  3550: 82 18 08                 a1 = u64 [sp + 0x8]
  3553: 82 1a                    a3 = u64 [sp]
  3555: 82 87 08                 a0 = u64 [a1 + 0x8]
  3558: ac 7a 0d                 jump @273 if a3 <u a0
      :                          @271
  3561: 28 2c                    jump @276
      :                          @272
  3563: 33 0a                    a3 = 0
  3565: 82 87 08                 a0 = u64 [a1 + 0x8]
  3568: 54 07 25                 jump @276 if a0 <=u 0
      :                          @273
  3571: 82 87                    a0 = u64 [a1]
  3573: 97 a8 04                 a1 = a3 << 0x4
  3576: c8 87 09                 a2 = a0 + a1
  3579: 82 1a 58                 a3 = u64 [sp + 0x58]
  3582: 82 17 50                 a0 = u64 [sp + 0x50]
  3585: 82 98                    a1 = u64 [a2]
  3587: 82 99 08                 a2 = u64 [a2 + 0x8]
  3590: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3593: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @274 [@dyn 39]
  3597: 51 07 08                 jump @276 if a0 == 0
      :                          @275
  3600: 33 07 01                 a0 = 0x1
  3603: 28 05                    jump @277
      :                          @276
  3605: 33 07                    a0 = 0
  3607: 01                       fallthrough
      :                          @277
  3608: 82 10 80 00              ra = u64 [sp + 0x80]
  3612: 82 15 78                 s0 = u64 [sp + 0x78]
  3615: 82 16 70                 s1 = u64 [sp + 0x70]
  3618: 95 11 88 00              sp = sp + 0x88
  3622: 32 00                    ret
