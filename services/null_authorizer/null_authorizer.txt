// RO data = 328/328 bytes
// RW data = 8/4128 bytes
// Stack size = 8192 bytes
// RO data = [110, 117, 108, 108, 95, 97, 117, 116, 104, 111, 114, 105, 122, 101, 114, 32, 103, 97, 115, 32, 99, 97, 108, 108, 32, 32, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 58, 32, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 25, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1282
// Code size = 3657 bytes

      :                          @0
     0: 28 ac 01                 jump @29
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 64 82                    t0 = a1
    13: 80 88 34                 a1 = u32 [a1 + 0x34]
    16: 84 89 10                 a2 = a1 & 0x10
    19: 52 09 28                 jump @4 if a2 != 0
      :                          @2
    22: 84 88 20                 a1 = a1 & 0x20
    25: 52 08 68                 jump @8 if a1 != 0
      :                          @3
    28: 81 77                    a0 = i32 [a0]
    30: 89 79                    a2 = a0 <s 0
    32: 85 98 01                 a1 = a2 ^ 0x1
    35: 97 7a 20                 a3 = a0 << 0x20
    38: 98 aa 20                 a3 = a3 >> 0x20
    41: 9a 77                    a0 = -a0
    43: da 9a 07                 a0 = a3 if a2 == 0
    46: 64 29                    a2 = t0
    48: 82 10 80 00              ra = u64 [sp + 0x80]
    52: 95 11 88 00              sp = sp + 0x88
    56: 28 8b 08                 jump @178
      :                          @4
    59: 81 7a                    a3 = i32 [a0]
    61: 33 08 81 00              a1 = 0x81
    65: 95 17 7f                 a0 = sp + 0x7f
    68: 33 03 57                 t1 = 0x57
    71: 01                       fallthrough
      :                          @5
    72: 64 8b                    a4 = a1
    74: 8b ac 04                 i32 a5 = a3 >> 0x4
    77: 84 aa 0f                 a3 = a3 & 0xf
    80: 88 a8 0a                 a1 = a3 <u 0xa
    83: 33 09 30                 a2 = 0x30
    86: da 83 09                 a2 = t1 if a1 == 0
    89: be a9 09                 i32 a2 = a2 + a3
    92: 78 79                    u8 [a0] = a2
    94: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    97: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   100: 64 ca                    a3 = a5
   102: 52 0c e2                 jump @5 if a5 != 0
      :                          @6
   105: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   108: 56 27 80 00 71           jump @14 if a0 >u 128
      :                          @7
   113: 9a 8c 81 00              a5 = 0x81 - a1
   117: 64 1b                    a4 = sp
   119: c8 7b 0b                 a4 = a4 + a0
   122: 33 09 28 00 01           a2 = 0x10028
   127: 28 47                    jump @12
      :                          @8
   129: 81 7a                    a3 = i32 [a0]
   131: 33 08 81 00              a1 = 0x81
   135: 95 17 7f                 a0 = sp + 0x7f
   138: 33 03 37                 t1 = 0x37
   141: 01                       fallthrough
      :                          @9
   142: 64 8b                    a4 = a1
   144: 8b ac 04                 i32 a5 = a3 >> 0x4
   147: 84 aa 0f                 a3 = a3 & 0xf
   150: 88 a8 0a                 a1 = a3 <u 0xa
   153: 33 09 30                 a2 = 0x30
   156: da 83 09                 a2 = t1 if a1 == 0
   159: be a9 09                 i32 a2 = a2 + a3
   162: 78 79                    u8 [a0] = a2
   164: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   167: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   170: 64 ca                    a3 = a5
   172: 52 0c e2                 jump @9 if a5 != 0
      :                          @10
   175: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   178: 56 27 80 00 2b           jump @14 if a0 >u 128
      :                          @11
   183: 9a 8c 81 00              a5 = 0x81 - a1
   187: 64 1b                    a4 = sp
   189: c8 7b 0b                 a4 = a4 + a0
   192: 33 09 28 00 01           a2 = 0x10028
   197: 01                       fallthrough
      :                          @12
   198: 33 08 01                 a1 = 0x1
   201: 33 0a 02                 a3 = 0x2
   204: 64 27                    a0 = t0
   206: 50 10 04 17 09           ra = 4, jump @188
      :                          @13 [@dyn 2]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 32 00                    ret
      :                          @14
   221: 00                       trap
      :                          @15 [@dyn 3]
   222: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   226: 7b 10 80 00              u64 [sp + 0x80] = ra
   230: 64 82                    t0 = a1
   232: 80 88 34                 a1 = u32 [a1 + 0x34]
   235: 84 89 10                 a2 = a1 & 0x10
   238: 52 09 1b                 jump @18 if a2 != 0
      :                          @16
   241: 84 88 20                 a1 = a1 & 0x20
   244: 52 08 5b                 jump @22 if a1 != 0
      :                          @17
   247: 82 77                    a0 = u64 [a0]
   249: 33 08 01                 a1 = 0x1
   252: 64 29                    a2 = t0
   254: 82 10 80 00              ra = u64 [sp + 0x80]
   258: 95 11 88 00              sp = sp + 0x88
   262: 28 bd 07                 jump @178
      :                          @18
   265: 82 7a                    a3 = u64 [a0]
   267: 33 08 81 00              a1 = 0x81
   271: 95 17 7f                 a0 = sp + 0x7f
   274: 33 03 57                 t1 = 0x57
   277: 01                       fallthrough
      :                          @19
   278: 64 8b                    a4 = a1
   280: 98 ac 04                 a5 = a3 >> 0x4
   283: 84 aa 0f                 a3 = a3 & 0xf
   286: 88 a8 0a                 a1 = a3 <u 0xa
   289: 33 09 30                 a2 = 0x30
   292: da 83 09                 a2 = t1 if a1 == 0
   295: be a9 09                 i32 a2 = a2 + a3
   298: 78 79                    u8 [a0] = a2
   300: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   303: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   306: 64 ca                    a3 = a5
   308: 52 0c e2                 jump @19 if a5 != 0
      :                          @20
   311: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   314: 56 27 80 00 71           jump @28 if a0 >u 128
      :                          @21
   319: 9a 8c 81 00              a5 = 0x81 - a1
   323: 64 1b                    a4 = sp
   325: c8 7b 0b                 a4 = a4 + a0
   328: 33 09 28 00 01           a2 = 0x10028
   333: 28 47                    jump @26
      :                          @22
   335: 82 7a                    a3 = u64 [a0]
   337: 33 08 81 00              a1 = 0x81
   341: 95 17 7f                 a0 = sp + 0x7f
   344: 33 03 37                 t1 = 0x37
   347: 01                       fallthrough
      :                          @23
   348: 64 8b                    a4 = a1
   350: 98 ac 04                 a5 = a3 >> 0x4
   353: 84 aa 0f                 a3 = a3 & 0xf
   356: 88 a8 0a                 a1 = a3 <u 0xa
   359: 33 09 30                 a2 = 0x30
   362: da 83 09                 a2 = t1 if a1 == 0
   365: be a9 09                 i32 a2 = a2 + a3
   368: 78 79                    u8 [a0] = a2
   370: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   373: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   376: 64 ca                    a3 = a5
   378: 52 0c e2                 jump @23 if a5 != 0
      :                          @24
   381: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   384: 56 27 80 00 2b           jump @28 if a0 >u 128
      :                          @25
   389: 9a 8c 81 00              a5 = 0x81 - a1
   393: 64 1b                    a4 = sp
   395: c8 7b 0b                 a4 = a4 + a0
   398: 33 09 28 00 01           a2 = 0x10028
   403: 01                       fallthrough
      :                          @26
   404: 33 08 01                 a1 = 0x1
   407: 33 0a 02                 a3 = 0x2
   410: 64 27                    a0 = t0
   412: 50 10 08 49 08           ra = 8, jump @188
      :                          @27 [@dyn 4]
   417: 82 10 80 00              ra = u64 [sp + 0x80]
   421: 95 11 88 00              sp = sp + 0x88
   425: 32 00                    ret
      :                          @28
   427: 00                       trap
      :                          @29 [export #0: 'is_authorize']
   428: 95 11 48 ff              sp = sp + 0xffffffffffffff48
   432: 7b 10 b0 00              u64 [sp + 0xb0] = ra
   436: 7b 15 a8 00              u64 [sp + 0xa8] = s0
   440: 7b 16 a0 00              u64 [sp + 0xa0] = s1
   444: 49 11 20 ff ef           u64 [sp + 32] = 0xffffffffffffefff
   449: 48 11 2c                 u32 [sp + 44] = 0
   452: 0a                       ecalli 0 // 'gas'
   453: 7b 17 30                 u64 [sp + 0x30] = a0
   456: 95 17 2c                 a0 = sp + 0x2c
   459: 7b 17 80 00              u64 [sp + 0x80] = a0
   463: 33 07 02                 a0 = 0x2
   466: 7b 17 18                 u64 [sp + 0x18] = a0
   469: 7b 17 88 00              u64 [sp + 0x88] = a0
   473: 95 17 30                 a0 = sp + 0x30
   476: 7b 17 90 00              u64 [sp + 0x90] = a0
   480: 33 07 06                 a0 = 0x6
   483: 7b 17 10                 u64 [sp + 0x10] = a0
   486: 7b 17 98 00              u64 [sp + 0x98] = a0
   490: 33 07 f8 00 01           a0 = 0x100f8
   495: 7b 17 08                 u64 [sp + 0x8] = a0
   498: 7b 17 50                 u64 [sp + 0x50] = a0
   501: 49 11 58 02              u64 [sp + 88] = 0x2
   505: 49 11 70                 u64 [sp + 112] = 0
   508: 95 18 80 00              a1 = sp + 0x80
   512: 7b 18 60                 u64 [sp + 0x60] = a1
   515: 49 11 68 02              u64 [sp + 104] = 0x2
   519: 95 17 38                 a0 = sp + 0x38
   522: 95 18 50                 a1 = sp + 0x50
   525: 50 10 0a 9d 03           ra = 10, jump @109
      :                          @30 [@dyn 5]
   530: 82 15 40                 s0 = u64 [sp + 0x40]
   533: 82 1b 48                 a4 = u64 [sp + 0x48]
   536: 82 16 38                 s1 = u64 [sp + 0x38]
   539: 33 07 02                 a0 = 0x2
   542: 33 08                    a1 = 0
   544: 33 09                    a2 = 0
   546: 64 5a                    a3 = s0
   548: 33 00 0c                 ra = 0xc
   551: 0a 64                    ecalli 100 // 'log'
   553: 01                       fallthrough
      :                          @31 [@dyn 6]
   554: 82 17 20                 a0 = u64 [sp + 0x20]
   557: c8 67 07                 a0 = a0 + s1
   560: 33 08 10 00 03           a1 = 0x30010
   565: 7b 18                    u64 [sp] = a1
   567: 53 27 00 f0 20           jump @37 if a0 <u 4294963200
      :                          @32
   572: 82 18                    a1 = u64 [sp]
   574: 95 87 00 10              a0 = a1 + 0x1000
   578: 01                       fallthrough
      :                          @33
   579: 82 78                    a1 = u64 [a0]
   581: c9 87 09                 a2 = a0 - a1
   584: ab 59 0f                 jump @37 if a2 != s0
      :                          @34
   587: c9 68 09                 a2 = a1 - s1
   590: 01                       fallthrough
      :                          @35
   591: 82 7a                    a3 = u64 [a0]
   593: ab 8a f2                 jump @33 if a3 != a1
      :                          @36
   596: 7b 79                    u64 [a0] = a2
   598: 01                       fallthrough
      :                          @37
   599: 48 11 2c 01              u32 [sp + 44] = 0x1
   603: 0a                       ecalli 0 // 'gas'
   604: 7b 17 30                 u64 [sp + 0x30] = a0
   607: 95 17 2c                 a0 = sp + 0x2c
   610: 7b 17 80 00              u64 [sp + 0x80] = a0
   614: 82 17 18                 a0 = u64 [sp + 0x18]
   617: 7b 17 88 00              u64 [sp + 0x88] = a0
   621: 95 17 30                 a0 = sp + 0x30
   624: 7b 17 90 00              u64 [sp + 0x90] = a0
   628: 82 17 08                 a0 = u64 [sp + 0x8]
   631: 7b 17 50                 u64 [sp + 0x50] = a0
   634: 49 11 58 02              u64 [sp + 88] = 0x2
   638: 49 11 70                 u64 [sp + 112] = 0
   641: 95 18 80 00              a1 = sp + 0x80
   645: 7b 18 60                 u64 [sp + 0x60] = a1
   648: 49 11 68 02              u64 [sp + 104] = 0x2
   652: 82 17 10                 a0 = u64 [sp + 0x10]
   655: 7b 17 98 00              u64 [sp + 0x98] = a0
   659: 95 17 38                 a0 = sp + 0x38
   662: 95 18 50                 a1 = sp + 0x50
   665: 50 10 0e 11 03           ra = 14, jump @109
      :                          @38 [@dyn 7]
   670: 82 15 40                 s0 = u64 [sp + 0x40]
   673: 82 1b 48                 a4 = u64 [sp + 0x48]
   676: 82 16 38                 s1 = u64 [sp + 0x38]
   679: 33 07 02                 a0 = 0x2
   682: 33 08                    a1 = 0
   684: 33 09                    a2 = 0
   686: 64 5a                    a3 = s0
   688: 33 00 10                 ra = 0x10
   691: 0a 64                    ecalli 100 // 'log'
   693: 01                       fallthrough
      :                          @39 [@dyn 8]
   694: 82 17 20                 a0 = u64 [sp + 0x20]
   697: c8 67 07                 a0 = a0 + s1
   700: 53 27 00 f0 20           jump @45 if a0 <u 4294963200
      :                          @40
   705: 82 18                    a1 = u64 [sp]
   707: 95 87 00 10              a0 = a1 + 0x1000
   711: 01                       fallthrough
      :                          @41
   712: 82 78                    a1 = u64 [a0]
   714: c9 87 09                 a2 = a0 - a1
   717: ab 59 0f                 jump @45 if a2 != s0
      :                          @42
   720: c9 68 09                 a2 = a1 - s1
   723: 01                       fallthrough
      :                          @43
   724: 82 7a                    a3 = u64 [a0]
   726: ab 8a f2                 jump @41 if a3 != a1
      :                          @44
   729: 7b 79                    u64 [a0] = a2
   731: 01                       fallthrough
      :                          @45
   732: 33 05 02                 s0 = 0x2
   735: 7a 15 2c                 u32 [sp + 0x2c] = s0
   738: 0a                       ecalli 0 // 'gas'
   739: 7b 17 30                 u64 [sp + 0x30] = a0
   742: 95 17 2c                 a0 = sp + 0x2c
   745: 7b 17 80 00              u64 [sp + 0x80] = a0
   749: 82 17 18                 a0 = u64 [sp + 0x18]
   752: 7b 17 88 00              u64 [sp + 0x88] = a0
   756: 95 17 30                 a0 = sp + 0x30
   759: 7b 17 90 00              u64 [sp + 0x90] = a0
   763: 82 17 10                 a0 = u64 [sp + 0x10]
   766: 7b 17 98 00              u64 [sp + 0x98] = a0
   770: 82 17 08                 a0 = u64 [sp + 0x8]
   773: 7b 17 50                 u64 [sp + 0x50] = a0
   776: 7b 15 58                 u64 [sp + 0x58] = s0
   779: 49 11 70                 u64 [sp + 112] = 0
   782: 95 17 80 00              a0 = sp + 0x80
   786: 7b 17 60                 u64 [sp + 0x60] = a0
   789: 7b 15 68                 u64 [sp + 0x68] = s0
   792: 95 17 38                 a0 = sp + 0x38
   795: 95 18 50                 a1 = sp + 0x50
   798: 50 10 12 8c 02           ra = 18, jump @109
      :                          @46 [@dyn 9]
   803: 82 15 40                 s0 = u64 [sp + 0x40]
   806: 82 1b 48                 a4 = u64 [sp + 0x48]
   809: 82 16 38                 s1 = u64 [sp + 0x38]
   812: 33 07 02                 a0 = 0x2
   815: 33 08                    a1 = 0
   817: 33 09                    a2 = 0
   819: 64 5a                    a3 = s0
   821: 33 00 14                 ra = 0x14
   824: 0a 64                    ecalli 100 // 'log'
   826: 01                       fallthrough
      :                          @47 [@dyn 10]
   827: 82 17 20                 a0 = u64 [sp + 0x20]
   830: c8 67 07                 a0 = a0 + s1
   833: 53 27 00 f0 22           jump @53 if a0 <u 4294963200
      :                          @48
   838: 82 18                    a1 = u64 [sp]
   840: 95 87 00 10              a0 = a1 + 0x1000
   844: 01                       fallthrough
      :                          @49
   845: 82 78                    a1 = u64 [a0]
   847: c9 87 09                 a2 = a0 - a1
   850: ab 59 11                 jump @53 if a2 != s0
      :                          @50
   853: c9 68 09                 a2 = a1 - s1
   856: 01                       fallthrough
      :                          @51
   857: 82 7a                    a3 = u64 [a0]
   859: ab 8a f2                 jump @49 if a3 != a1
      :                          @52
   862: 7b 79                    u64 [a0] = a2
   864: 33 0b                    a4 = 0
   866: 01                       fallthrough
      :                          @53
   867: 33 07 00 00 01           a0 = 0x10000
   872: 33 08                    a1 = 0
   874: 82 10 b0 00              ra = u64 [sp + 0xb0]
   878: 82 15 a8 00              s0 = u64 [sp + 0xa8]
   882: 82 16 a0 00              s1 = u64 [sp + 0xa0]
   886: 95 11 b8 00              sp = sp + 0xb8
   890: 32 00                    ret
      :                          @54
   892: 00                       trap
      :                          @55
   893: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   896: 7b 10 40                 u64 [sp + 0x40] = ra
   899: 7b 15 38                 u64 [sp + 0x38] = s0
   902: 7b 16 30                 u64 [sp + 0x30] = s1
   905: c8 89 09                 a2 = a2 + a1
   908: ac 89 52                 jump @63 if a2 <u a1
      :                          @56
   911: 64 75                    s0 = a0
   913: 82 77                    a0 = u64 [a0]
   915: 97 78 01                 a1 = a0 << 0x1
   918: 33 0a 08                 a3 = 0x8
   921: e4 a9 09                 a2 = maxu(a2, a3)
   924: e4 98 06                 s1 = maxu(a1, a2)
   927: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
   930: 98 88 3f                 a1 = a1 >> 0x3f
   933: 51 07 12                 jump @58 if a0 == 0
      :                          @57
   936: 82 59 08                 a2 = u64 [s0 + 0x8]
   939: 7b 19 18                 u64 [sp + 0x18] = a2
   942: 49 11 20 01              u64 [sp + 32] = 0x1
   946: 7b 17 28                 u64 [sp + 0x28] = a0
   949: 28 06                    jump @59
      :                          @58
   951: 49 11 20                 u64 [sp + 32] = 0
   954: 01                       fallthrough
      :                          @59
   955: 64 17                    a0 = sp
   957: 95 1a 18                 a3 = sp + 0x18
   960: 64 69                    a2 = s1
   962: 50 10 16 31              ra = 22, jump @66
      :                          @60 [@dyn 11]
   966: 82 18                    a1 = u64 [sp]
   968: 82 17 08                 a0 = u64 [sp + 0x8]
   971: 51 08 14                 jump @64 if a1 == 0
      :                          @61
   974: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
   984: aa 87 0d                 jump @65 if a0 == a1
      :                          @62
   987: 52 07 a1                 jump @54 if a0 != 0
      :                          @63
   990: 00                       trap
      :                          @64
   991: 7b 57 08                 u64 [s0 + 0x8] = a0
   994: 7b 56                    u64 [s0] = s1
   996: 01                       fallthrough
      :                          @65
   997: 82 10 40                 ra = u64 [sp + 0x40]
  1000: 82 15 38                 s0 = u64 [sp + 0x38]
  1003: 82 16 30                 s1 = u64 [sp + 0x30]
  1006: 95 11 48                 sp = sp + 0x48
  1009: 32 00                    ret
      :                          @66
  1011: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1014: 7b 10 30                 u64 [sp + 0x30] = ra
  1017: 7b 15 28                 u64 [sp + 0x28] = s0
  1020: 7b 16 20                 u64 [sp + 0x20] = s1
  1023: 64 96                    s1 = a2
  1025: 64 73                    t1 = a0
  1027: 51 08 6e                 jump @76 if a1 == 0
      :                          @67
  1030: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1033: 51 07 71                 jump @77 if a0 == 0
      :                          @68
  1036: 82 a9 10                 a2 = u64 [a3 + 0x10]
  1039: 51 09 9e 00              jump @84 if a2 == 0
      :                          @69
  1043: 82 a8                    a1 = u64 [a3]
  1045: 33 02 00 10              t0 = 0x1000
  1049: 33 04 10 00 03           t2 = 0x30010
  1054: c8 24 07                 a0 = t2 + t0
  1057: 01                       fallthrough
      :                          @70
  1058: 82 7a                    a3 = u64 [a0]
  1060: c8 6a 05                 s0 = a3 + s1
  1063: ac a5 c2 00              jump @90 if s0 <u a3
      :                          @71
  1067: 95 5b 01                 a4 = s0 + 0x1
  1070: 88 bc 01                 a5 = a4 <u 0x1
  1073: d8 b2 0b                 a4 = t0 <u a4
  1076: d4 cb 0b                 a4 = a4 | a5
  1079: 52 0b b2 00              jump @90 if a4 != 0
      :                          @72
  1083: 82 7b                    a4 = u64 [a0]
  1085: ab ab e5                 jump @70 if a4 != a3
      :                          @73
  1088: 7b 75                    u64 [a0] = s0
  1090: 33 0c                    a5 = 0
  1092: 7b 13 18                 u64 [sp + 0x18] = t1
  1095: c9 54 07                 a0 = t2 - s0
  1098: 95 77 00 10              a0 = a0 + 0x1000
  1102: 7b 17 10                 u64 [sp + 0x10] = a0
  1105: 7b 18 08                 u64 [sp + 0x8] = a1
  1108: 64 95                    s0 = a2
  1110: 7b 14                    u64 [sp] = t2
  1112: 50 10 18 b5 03           ra = 24, jump @158
      :                          @74 [@dyn 12]
  1117: 54 25 00 10 94 00        jump @91 if s0 <=u 4096
      :                          @75
  1123: 82 13 18                 t1 = u64 [sp + 0x18]
  1126: 82 18 10                 a1 = u64 [sp + 0x10]
  1129: 33 07                    a0 = 0
  1131: 7b 38 08                 u64 [t1 + 0x8] = a1
  1134: 28 b1 00                 jump @97
      :                          @76
  1137: 49 13 08                 u64 [t1 + 8] = 0
  1140: 33 07 01                 a0 = 0x1
  1143: 28 a8 00                 jump @97
      :                          @77
  1146: 33 07 00 10              a0 = 0x1000
  1150: 33 02 10 00 03           t0 = 0x30010
  1155: c8 72 09                 a2 = t0 + a0
  1158: 01                       fallthrough
      :                          @78
  1159: 82 9b                    a4 = u64 [a2]
  1161: c8 6b 0a                 a3 = a4 + s1
  1164: ac ba 5d                 jump @90 if a3 <u a4
      :                          @79
  1167: 95 ac 01                 a5 = a3 + 0x1
  1170: 88 c8 01                 a1 = a5 <u 0x1
  1173: d8 c7 0c                 a5 = a0 <u a5
  1176: d4 c8 08                 a1 = a1 | a5
  1179: 52 08 4e                 jump @90 if a1 != 0
      :                          @80
  1182: 82 98                    a1 = u64 [a2]
  1184: ab b8 e7                 jump @78 if a1 != a4
      :                          @81
  1187: 7b 9a                    u64 [a2] = a3
  1189: 33 0c                    a5 = 0
  1191: 01                       fallthrough
      :                          @82
  1192: ab b8 df                 jump @78 if a1 != a4
      :                          @83
  1195: 28 30                    jump @89
      :                          @84
  1197: 33 07 00 10              a0 = 0x1000
  1201: 33 02 10 00 03           t0 = 0x30010
  1206: c8 72 09                 a2 = t0 + a0
  1209: 01                       fallthrough
      :                          @85
  1210: 82 9b                    a4 = u64 [a2]
  1212: c8 6b 0a                 a3 = a4 + s1
  1215: ac ba 2a                 jump @90 if a3 <u a4
      :                          @86
  1218: 95 ac 01                 a5 = a3 + 0x1
  1221: 88 c8 01                 a1 = a5 <u 0x1
  1224: d8 c7 0c                 a5 = a0 <u a5
  1227: d4 c8 08                 a1 = a1 | a5
  1230: 52 08 1b                 jump @90 if a1 != 0
      :                          @87
  1233: 82 98                    a1 = u64 [a2]
  1235: ab b8 e7                 jump @85 if a1 != a4
      :                          @88
  1238: 7b 9a                    u64 [a2] = a3
  1240: 33 0c                    a5 = 0
  1242: 01                       fallthrough
      :                          @89
  1243: c9 a2 07                 a0 = t0 - a3
  1246: 95 78 00 10              a1 = a0 + 0x1000
  1250: 33 07                    a0 = 0
  1252: 7b 38 08                 u64 [t1 + 0x8] = a1
  1255: 28 38                    jump @97
      :                          @90
  1257: 33 07 01                 a0 = 0x1
  1260: 7b 37 08                 u64 [t1 + 0x8] = a0
  1263: 28 30                    jump @97
      :                          @91
  1265: 64 5c                    a5 = s0
  1267: 82 18                    a1 = u64 [sp]
  1269: 95 87 00 10              a0 = a1 + 0x1000
  1273: 82 13 18                 t1 = u64 [sp + 0x18]
  1276: 82 15 08                 s0 = u64 [sp + 0x8]
  1279: 01                       fallthrough
      :                          @92
  1280: 82 78                    a1 = u64 [a0]
  1282: c9 87 09                 a2 = a0 - a1
  1285: ab 59 11                 jump @96 if a2 != s0
      :                          @93
  1288: c9 c8 09                 a2 = a1 - a5
  1291: 01                       fallthrough
      :                          @94
  1292: 82 7a                    a3 = u64 [a0]
  1294: ab 8a f2                 jump @92 if a3 != a1
      :                          @95
  1297: 7b 79                    u64 [a0] = a2
  1299: 33 0b                    a4 = 0
  1301: 01                       fallthrough
      :                          @96
  1302: 82 18 10                 a1 = u64 [sp + 0x10]
  1305: 33 07                    a0 = 0
  1307: 7b 38 08                 u64 [t1 + 0x8] = a1
  1310: 01                       fallthrough
      :                          @97
  1311: 7b 36 10                 u64 [t1 + 0x10] = s1
  1314: 7b 37                    u64 [t1] = a0
  1316: 82 10 30                 ra = u64 [sp + 0x30]
  1319: 82 15 28                 s0 = u64 [sp + 0x28]
  1322: 82 16 20                 s1 = u64 [sp + 0x20]
  1325: 95 11 38                 sp = sp + 0x38
  1328: 32 00                    ret
      :                          @98
  1330: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1333: 7b 10 40                 u64 [sp + 0x40] = ra
  1336: 7b 15 38                 u64 [sp + 0x38] = s0
  1339: 7b 16 30                 u64 [sp + 0x30] = s1
  1342: 95 88 01                 a1 = a1 + 0x1
  1345: 51 08 54                 jump @106 if a1 == 0
      :                          @99
  1348: 64 75                    s0 = a0
  1350: 82 77                    a0 = u64 [a0]
  1352: 97 79 01                 a2 = a0 << 0x1
  1355: 33 0a 08                 a3 = 0x8
  1358: e4 a8 08                 a1 = maxu(a1, a3)
  1361: e4 89 06                 s1 = maxu(a2, a1)
  1364: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1367: 98 88 3f                 a1 = a1 >> 0x3f
  1370: 51 07 12                 jump @101 if a0 == 0
      :                          @100
  1373: 82 59 08                 a2 = u64 [s0 + 0x8]
  1376: 7b 19 18                 u64 [sp + 0x18] = a2
  1379: 49 11 20 01              u64 [sp + 32] = 0x1
  1383: 7b 17 28                 u64 [sp + 0x28] = a0
  1386: 28 06                    jump @102
      :                          @101
  1388: 49 11 20                 u64 [sp + 32] = 0
  1391: 01                       fallthrough
      :                          @102
  1392: 64 17                    a0 = sp
  1394: 95 1a 18                 a3 = sp + 0x18
  1397: 64 69                    a2 = s1
  1399: 50 10 1a 7c fe           ra = 26, jump @66
      :                          @103 [@dyn 13]
  1404: 82 18                    a1 = u64 [sp]
  1406: 82 17 08                 a0 = u64 [sp + 0x8]
  1409: 51 08 15                 jump @107 if a1 == 0
      :                          @104
  1412: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1422: aa 87 0e                 jump @108 if a0 == a1
      :                          @105
  1425: 52 07 eb fd              jump @54 if a0 != 0
      :                          @106
  1429: 00                       trap
      :                          @107
  1430: 7b 57 08                 u64 [s0 + 0x8] = a0
  1433: 7b 56                    u64 [s0] = s1
  1435: 01                       fallthrough
      :                          @108
  1436: 82 10 40                 ra = u64 [sp + 0x40]
  1439: 82 15 38                 s0 = u64 [sp + 0x38]
  1442: 82 16 30                 s1 = u64 [sp + 0x30]
  1445: 95 11 48                 sp = sp + 0x48
  1448: 32 00                    ret
      :                          @109
  1450: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1453: 7b 10 30                 u64 [sp + 0x30] = ra
  1456: 7b 15 28                 u64 [sp + 0x28] = s0
  1459: 7b 16 20                 u64 [sp + 0x20] = s1
  1462: 82 8a 08                 a3 = u64 [a1 + 0x8]
  1465: 64 75                    s0 = a0
  1467: 51 0a 35                 jump @114 if a3 == 0
      :                          @110
  1470: 82 89                    a2 = u64 [a1]
  1472: 33 07                    a0 = 0
  1474: 95 9b 08                 a4 = a2 + 0x8
  1477: 01                       fallthrough
      :                          @111
  1478: 82 bc                    a5 = u64 [a4]
  1480: c8 c7 07                 a0 = a0 + a5
  1483: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1486: 95 bb 10                 a4 = a4 + 0x10
  1489: 52 0a f5                 jump @111 if a3 != 0
      :                          @112
  1492: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1495: 51 0a 24                 jump @116 if a3 == 0
      :                          @113
  1498: 82 99 08                 a2 = u64 [a2 + 0x8]
  1501: 8e 99                    a2 = a2 >u 0
  1503: 88 7a 10                 a3 = a0 <u 0x10
  1506: 85 aa 01                 a3 = a3 ^ 0x1
  1509: d4 a9 09                 a2 = a2 | a3
  1512: 89 7a                    a3 = a0 <s 0
  1514: e0 a9 09                 a2 = a2 & ~a3
  1517: 52 09 0a                 jump @115 if a2 != 0
      :                          @114
  1520: 33 07                    a0 = 0
  1522: 33 09 01                 a2 = 0x1
  1525: 28 4d                    jump @124
      :                          @115
  1527: 97 77 01                 a0 = a0 << 0x1
  1530: 01                       fallthrough
      :                          @116
  1531: 51 07 43                 jump @123 if a0 == 0
      :                          @117
  1534: 57 07 75                 jump @128 if a0 <s 0
      :                          @118
  1537: 64 53                    t1 = s0
  1539: 33 09 00 10              a2 = 0x1000
  1543: 33 02 10 00 03           t0 = 0x30010
  1548: c8 92 0b                 a4 = t0 + a2
  1551: 01                       fallthrough
      :                          @119
  1552: 82 bc                    a5 = u64 [a4]
  1554: c8 7c 0a                 a3 = a5 + a0
  1557: ac ca 67 fd              jump @54 if a3 <u a5
      :                          @120
  1561: 95 a5 01                 s0 = a3 + 0x1
  1564: 88 56 01                 s1 = s0 <u 0x1
  1567: d8 59 05                 s0 = a2 <u s0
  1570: d4 65 05                 s0 = s0 | s1
  1573: 52 05 57 fd              jump @54 if s0 != 0
      :                          @121
  1577: 82 b6                    s1 = u64 [a4]
  1579: ab c6 e5                 jump @119 if s1 != a5
      :                          @122
  1582: 7b ba                    u64 [a4] = a3
  1584: c9 a2 09                 a2 = t0 - a3
  1587: 33 0a 00 10              a3 = 0x1000
  1591: c8 a9 09                 a2 = a2 + a3
  1594: 64 35                    s0 = t1
  1596: 28 06                    jump @124
      :                          @123
  1598: 33 09 01                 a2 = 0x1
  1601: 01                       fallthrough
      :                          @124
  1602: 7b 17                    u64 [sp] = a0
  1604: 7b 19 08                 u64 [sp + 0x8] = a2
  1607: 49 11 10                 u64 [sp + 16] = 0
  1610: 64 17                    a0 = sp
  1612: 50 10 1c 1a 06           ra = 28, jump @242
      :                          @125 [@dyn 14]
  1617: 52 07 21                 jump @127 if a0 != 0
      :                          @126
  1620: 82 17 10                 a0 = u64 [sp + 0x10]
  1623: 82 18 08                 a1 = u64 [sp + 0x8]
  1626: 82 19                    a2 = u64 [sp]
  1628: 7b 57 10                 u64 [s0 + 0x10] = a0
  1631: 7b 58 08                 u64 [s0 + 0x8] = a1
  1634: 7b 59                    u64 [s0] = a2
  1636: 82 10 30                 ra = u64 [sp + 0x30]
  1639: 82 15 28                 s0 = u64 [sp + 0x28]
  1642: 82 16 20                 s1 = u64 [sp + 0x20]
  1645: 95 11 38                 sp = sp + 0x38
  1648: 32 00                    ret
      :                          @127
  1650: 00                       trap
      :                          @128
  1651: 00                       trap
      :                          @129 [@dyn 15]
  1652: 82 72                    t0 = u64 [a0]
  1654: 33 09 00 f0              a2 = 0xfffffffffffff000
  1658: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  1662: ac 9a 27                 jump @135 if a3 <u a2
      :                          @130
  1665: 82 77 08                 a0 = u64 [a0 + 0x8]
  1668: 33 09 10 00 03           a2 = 0x30010
  1673: 95 99 00 10              a2 = a2 + 0x1000
  1677: 01                       fallthrough
      :                          @131
  1678: 82 9a                    a3 = u64 [a2]
  1680: c9 a9 0b                 a4 = a2 - a3
  1683: ab 7b 12                 jump @135 if a4 != a0
      :                          @132
  1686: c9 2a 0b                 a4 = a3 - t0
  1689: 01                       fallthrough
      :                          @133
  1690: 82 9c                    a5 = u64 [a2]
  1692: ab ac f2                 jump @131 if a5 != a3
      :                          @134
  1695: 7b 9b                    u64 [a2] = a4
  1697: 33 08                    a1 = 0
  1699: 32 00                    ret
      :                          @135
  1701: 32 00                    ret
      :                          @136 [@dyn 16]
  1703: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1706: 7b 10 18                 u64 [sp + 0x18] = ra
  1709: 7b 15 10                 u64 [sp + 0x10] = s0
  1712: 7b 16 08                 u64 [sp + 0x8] = s1
  1715: 64 75                    s0 = a0
  1717: 82 7a 10                 a3 = u64 [a0 + 0x10]
  1720: 82 77                    a0 = u64 [a0]
  1722: c9 a7 07                 a0 = a0 - a3
  1725: 64 96                    s1 = a2
  1727: ac 97 2a                 jump @139 if a0 <u a2
      :                          @137
  1730: 7b 1a                    u64 [sp] = a3
  1732: 82 57 08                 a0 = u64 [s0 + 0x8]
  1735: c8 a7 07                 a0 = a0 + a3
  1738: 64 69                    a2 = s1
  1740: 50 10 22 41 01           ra = 34, jump @158
      :                          @138 [@dyn 17]
  1745: 82 17                    a0 = u64 [sp]
  1747: c8 76 06                 s1 = s1 + a0
  1750: 7b 56 10                 u64 [s0 + 0x10] = s1
  1753: 33 07                    a0 = 0
  1755: 82 10 18                 ra = u64 [sp + 0x18]
  1758: 82 15 10                 s0 = u64 [sp + 0x10]
  1761: 82 16 08                 s1 = u64 [sp + 0x8]
  1764: 95 11 20                 sp = sp + 0x20
  1767: 32 00                    ret
      :                          @139
  1769: 64 57                    a0 = s0
  1771: 7b 18                    u64 [sp] = a1
  1773: 64 a8                    a1 = a3
  1775: 64 69                    a2 = s1
  1777: 50 10 24 8c fc           ra = 36, jump @55
      :                          @140 [@dyn 18]
  1782: 82 18                    a1 = u64 [sp]
  1784: 82 5a 10                 a3 = u64 [s0 + 0x10]
  1787: 28 c7                    jump @137
      :                          @141 [@dyn 19]
  1789: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1792: 7b 10 20                 u64 [sp + 0x20] = ra
  1795: 7b 15 18                 u64 [sp + 0x18] = s0
  1798: 7b 16 10                 u64 [sp + 0x10] = s1
  1801: 64 86                    s1 = a1
  1803: 83 88                    i32 a1 = a1 + 0
  1805: 33 09 80 00              a2 = 0x80
  1809: 64 7a                    a3 = a0
  1811: ae 98 2b                 jump @146 if a1 >=u a2
      :                          @142
  1814: 82 a8 10                 a1 = u64 [a3 + 0x10]
  1817: 82 a7                    a0 = u64 [a3]
  1819: ab 78 12                 jump @145 if a1 != a0
      :                          @143
  1822: 64 a7                    a0 = a3
  1824: 64 a5                    s0 = a3
  1826: 50 10 28 10 fe           ra = 40, jump @98
      :                          @144 [@dyn 20]
  1831: 64 5a                    a3 = s0
  1833: 82 58 10                 a1 = u64 [s0 + 0x10]
  1836: 01                       fallthrough
      :                          @145
  1837: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1840: c8 87 07                 a0 = a0 + a1
  1843: 78 76                    u8 [a0] = s1
  1845: 95 88 01                 a1 = a1 + 0x1
  1848: 7b a8 10                 u64 [a3 + 0x10] = a1
  1851: 28 ab 00                 jump @154
      :                          @146
  1854: 8b 67 0b                 i32 a0 = s1 >> 0xb
  1857: 48 11 0c                 u32 [sp + 12] = 0
  1860: 52 07 1c                 jump @148 if a0 != 0
      :                          @147
  1863: 98 67 06                 a0 = s1 >> 0x6
  1866: 86 77 c0 00              a0 = a0 | 0xc0
  1870: 78 17 0c                 u8 [sp + 0xc] = a0
  1873: 84 67 3f                 a0 = s1 & 0x3f
  1876: 86 77 80 00              a0 = a0 | 0x80
  1880: 78 17 0d                 u8 [sp + 0xd] = a0
  1883: 33 06 02                 s1 = 0x2
  1886: 28 63                    jump @151
      :                          @148
  1888: 8b 67 10                 i32 a0 = s1 >> 0x10
  1891: 52 07 29                 jump @150 if a0 != 0
      :                          @149
  1894: 98 67 0c                 a0 = s1 >> 0xc
  1897: 86 77 e0 00              a0 = a0 | 0xe0
  1901: 78 17 0c                 u8 [sp + 0xc] = a0
  1904: 97 67 34                 a0 = s1 << 0x34
  1907: 98 77 3a                 a0 = a0 >> 0x3a
  1910: 95 77 80 00              a0 = a0 + 0x80
  1914: 78 17 0d                 u8 [sp + 0xd] = a0
  1917: 84 67 3f                 a0 = s1 & 0x3f
  1920: 86 77 80 00              a0 = a0 | 0x80
  1924: 78 17 0e                 u8 [sp + 0xe] = a0
  1927: 33 06 03                 s1 = 0x3
  1930: 28 37                    jump @151
      :                          @150
  1932: 97 67 2b                 a0 = s1 << 0x2b
  1935: 98 77 3d                 a0 = a0 >> 0x3d
  1938: 95 77 f0 00              a0 = a0 + 0xf0
  1942: 78 17 0c                 u8 [sp + 0xc] = a0
  1945: 97 67 2e                 a0 = s1 << 0x2e
  1948: 98 77 3a                 a0 = a0 >> 0x3a
  1951: 95 77 80 00              a0 = a0 + 0x80
  1955: 78 17 0d                 u8 [sp + 0xd] = a0
  1958: 97 67 34                 a0 = s1 << 0x34
  1961: 98 77 3a                 a0 = a0 >> 0x3a
  1964: 95 77 80 00              a0 = a0 + 0x80
  1968: 78 17 0e                 u8 [sp + 0xe] = a0
  1971: 84 67 3f                 a0 = s1 & 0x3f
  1974: 86 77 80 00              a0 = a0 | 0x80
  1978: 78 17 0f                 u8 [sp + 0xf] = a0
  1981: 33 06 04                 s1 = 0x4
  1984: 01                       fallthrough
      :                          @151
  1985: 82 a5 10                 s0 = u64 [a3 + 0x10]
  1988: 82 a7                    a0 = u64 [a3]
  1990: c9 57 07                 a0 = a0 - s0
  1993: ac 67 2d                 jump @155 if a0 <u s1
      :                          @152
  1996: 7b 1a                    u64 [sp] = a3
  1998: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2001: c8 57 07                 a0 = a0 + s0
  2004: 95 18 0c                 a1 = sp + 0xc
  2007: 64 69                    a2 = s1
  2009: 50 10 2a 34              ra = 42, jump @158
      :                          @153 [@dyn 21]
  2013: c8 56 06                 s1 = s1 + s0
  2016: 82 17                    a0 = u64 [sp]
  2018: 7b 76 10                 u64 [a0 + 0x10] = s1
  2021: 01                       fallthrough
      :                          @154
  2022: 33 07                    a0 = 0
  2024: 82 10 20                 ra = u64 [sp + 0x20]
  2027: 82 15 18                 s0 = u64 [sp + 0x18]
  2030: 82 16 10                 s1 = u64 [sp + 0x10]
  2033: 95 11 28                 sp = sp + 0x28
  2036: 32 00                    ret
      :                          @155
  2038: 64 a7                    a0 = a3
  2040: 64 58                    a1 = s0
  2042: 64 69                    a2 = s1
  2044: 64 a5                    s0 = a3
  2046: 50 10 2c 7f fb           ra = 44, jump @55
      :                          @156 [@dyn 22]
  2051: 64 5a                    a3 = s0
  2053: 82 55 10                 s0 = u64 [s0 + 0x10]
  2056: 28 c4                    jump @152
      :                          @157 [@dyn 23]
  2058: 28 5c 04                 jump @242
      :                          @158
  2061: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2064: 7b 10 18                 u64 [sp + 0x18] = ra
  2067: 7b 15 10                 u64 [sp + 0x10] = s0
  2070: 7b 16 08                 u64 [sp + 0x8] = s1
  2073: 53 19 10 64              jump @167 if a2 <u 16
      :                          @159
  2077: 8d 7a                    i32 a3 = -a0
  2079: 84 a2 07                 t0 = a3 & 0x7
  2082: c8 27 0b                 a4 = a0 + t0
  2085: 51 02 15                 jump @162 if t0 == 0
      :                          @160
  2088: 64 8c                    a5 = a1
  2090: 64 75                    s0 = a0
  2092: 01                       fallthrough
      :                          @161
  2093: 7c ca                    a3 = u8 [a5]
  2095: 78 5a                    u8 [s0] = a3
  2097: 95 55 01                 s0 = s0 + 0x1
  2100: 95 cc 01                 a5 = a5 + 0x1
  2103: ac b5 f6                 jump @161 if s0 <u a4
      :                          @162
  2106: c8 28 03                 t1 = a1 + t0
  2109: c9 29 02                 t0 = a2 - t0
  2112: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2115: 84 38 07                 a1 = t1 & 0x7
  2118: c8 4b 0a                 a3 = a4 + t2
  2121: 51 08 3b                 jump @169 if a1 == 0
      :                          @163
  2124: 58 04 4b                 jump @172 if t2 <=s 0
      :                          @164
  2127: 97 38 03                 a1 = t1 << 0x3
  2130: 84 80 38                 ra = a1 & 0x38
  2133: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2136: 82 c5                    s0 = u64 [a5]
  2138: 8d 88                    i32 a1 = -a1
  2140: 84 88 38                 a1 = a1 & 0x38
  2143: 95 cc 08                 a5 = a5 + 0x8
  2146: 01                       fallthrough
      :                          @165
  2147: 82 c6                    s1 = u64 [a5]
  2149: d0 05 05                 s0 = s0 >> ra
  2152: cf 86 09                 a2 = s1 << a1
  2155: d4 59 09                 a2 = a2 | s0
  2158: 7b b9                    u64 [a4] = a2
  2160: 95 bb 08                 a4 = a4 + 0x8
  2163: 95 cc 08                 a5 = a5 + 0x8
  2166: 64 65                    s0 = s1
  2168: ac ab eb                 jump @165 if a4 <u a3
      :                          @166
  2171: 28 1c                    jump @172
      :                          @167
  2173: 64 7a                    a3 = a0
  2175: 52 09 21                 jump @173 if a2 != 0
      :                          @168
  2178: 28 2f                    jump @175
      :                          @169
  2180: 58 04 13                 jump @172 if t2 <=s 0
      :                          @170
  2183: 64 38                    a1 = t1
  2185: 01                       fallthrough
      :                          @171
  2186: 82 89                    a2 = u64 [a1]
  2188: 7b b9                    u64 [a4] = a2
  2190: 95 bb 08                 a4 = a4 + 0x8
  2193: 95 88 08                 a1 = a1 + 0x8
  2196: ac ab f6                 jump @171 if a4 <u a3
      :                          @172
  2199: c8 43 08                 a1 = t1 + t2
  2202: 84 29 07                 a2 = t0 & 0x7
  2205: 51 09 14                 jump @175 if a2 == 0
      :                          @173
  2208: c8 a9 09                 a2 = a2 + a3
  2211: 01                       fallthrough
      :                          @174
  2212: 7c 8b                    a4 = u8 [a1]
  2214: 78 ab                    u8 [a3] = a4
  2216: 95 aa 01                 a3 = a3 + 0x1
  2219: 95 88 01                 a1 = a1 + 0x1
  2222: ac 9a f6                 jump @174 if a3 <u a2
      :                          @175
  2225: 82 10 18                 ra = u64 [sp + 0x18]
  2228: 82 15 10                 s0 = u64 [sp + 0x10]
  2231: 82 16 08                 s1 = u64 [sp + 0x8]
  2234: 95 11 20                 sp = sp + 0x20
  2237: 32 00                    ret
      :                          @176 [@dyn 24]
  2239: 82 77                    a0 = u64 [a0]
  2241: 01                       fallthrough
      :                          @177
  2242: 28                       jump @177
      :                          @178
  2243: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  2246: 7b 10 58                 u64 [sp + 0x58] = ra
  2249: 7b 15 50                 u64 [sp + 0x50] = s0
  2252: 7b 16 48                 u64 [sp + 0x48] = s1
  2255: 7b 19 08                 u64 [sp + 0x8] = a2
  2258: 7b 18                    u64 [sp] = a1
  2260: 98 7a 04                 a3 = a0 >> 0x4
  2263: 33 09 27                 a2 = 0x27
  2266: 33 0b 2a 00 01           a4 = 0x1002a
  2271: 53 2a 71 02 7b           jump @181 if a3 <u 625
      :                          @179
  2276: 33 09 27                 a2 = 0x27
  2279: 95 1c 46                 a5 = sp + 0x46
  2282: 3a 08 00 00 03           a1 = u64 [0x30000]
  2287: 7b 18 18                 u64 [sp + 0x18] = a1
  2290: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  2296: 33 03 7b 14              t1 = 0x147b
  2300: 33 04 ff e0 f5 05        t2 = 0x5f5e0ff
  2306: 01                       fallthrough
      :                          @180
  2307: 64 70                    ra = a0
  2309: 82 17 18                 a0 = u64 [sp + 0x18]
  2312: d6 70 07                 a0 = ra mulhu a0
  2315: 98 77 0b                 a0 = a0 >> 0xb
  2318: 82 18 10                 a1 = u64 [sp + 0x10]
  2321: c0 87 02                 i32 t0 = a0 * a1
  2324: c8 02 05                 s0 = t0 + ra
  2327: 97 52 30                 t0 = s0 << 0x30
  2330: 98 28 32                 a1 = t0 >> 0x32
  2333: ca 38 08                 a1 = a1 * t1
  2336: 98 8a 11                 a3 = a1 >> 0x11
  2339: 98 88 10                 a1 = a1 >> 0x10
  2342: 84 88 fe 07              a1 = a1 & 0x7fe
  2346: 96 aa 9c                 a3 = a3 * 0xffffffffffffff9c
  2349: c8 5a 0a                 a3 = a3 + s0
  2352: 97 aa 31                 a3 = a3 << 0x31
  2355: 98 aa 30                 a3 = a3 >> 0x30
  2358: c8 b8 08                 a1 = a1 + a4
  2361: 7c 85                    s0 = u8 [a1]
  2363: 7c 88 01                 a1 = u8 [a1 + 0x1]
  2366: c8 ba 0a                 a3 = a3 + a4
  2369: 7c a6 01                 s1 = u8 [a3 + 0x1]
  2372: 7c aa                    a3 = u8 [a3]
  2374: 78 c8 ff                 u8 [a5 + 0xffffffffffffffff] = a1
  2377: 78 c5 fe                 u8 [a5 + 0xfffffffffffffffe] = s0
  2380: 78 c6 01                 u8 [a5 + 0x1] = s1
  2383: 78 ca                    u8 [a5] = a3
  2385: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  2388: 95 cc fc                 a5 = a5 + 0xfffffffffffffffc
  2391: ac 04 ac                 jump @180 if t2 <u ra
      :                          @181
  2394: 54 17 63 36              jump @183 if a0 <=u 99
      :                          @182
  2398: 97 78 30                 a1 = a0 << 0x30
  2401: 98 88 32                 a1 = a1 >> 0x32
  2404: 96 88 7b 14              a1 = a1 * 0x147b
  2408: 98 88 11                 a1 = a1 >> 0x11
  2411: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  2414: c8 a7 07                 a0 = a0 + a3
  2417: 97 77 31                 a0 = a0 << 0x31
  2420: 98 77 30                 a0 = a0 >> 0x30
  2423: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2426: c8 b7 07                 a0 = a0 + a4
  2429: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  2432: 7c 77                    a0 = u8 [a0]
  2434: 95 1c 21                 a5 = sp + 0x21
  2437: c8 9c 0c                 a5 = a5 + a2
  2440: 78 ca 01                 u8 [a5 + 0x1] = a3
  2443: 78 c7                    u8 [a5] = a0
  2445: 64 87                    a0 = a1
  2447: 01                       fallthrough
      :                          @183
  2448: 55 17 0a 14              jump @185 if a0 >=u 10
      :                          @184
  2452: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  2455: 95 18 21                 a1 = sp + 0x21
  2458: c8 98 08                 a1 = a1 + a2
  2461: 83 77 30                 i32 a0 = a0 + 0x30
  2464: 78 87                    u8 [a1] = a0
  2466: 28 1c                    jump @186
      :                          @185
  2468: 97 77 01                 a0 = a0 << 0x1
  2471: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2474: c8 b7 07                 a0 = a0 + a4
  2477: 7c 78 01                 a1 = u8 [a0 + 0x1]
  2480: 7c 77                    a0 = u8 [a0]
  2482: 95 1a 21                 a3 = sp + 0x21
  2485: c8 9a 0a                 a3 = a3 + a2
  2488: 78 a8 01                 u8 [a3 + 0x1] = a1
  2491: 78 a7                    u8 [a3] = a0
  2493: 01                       fallthrough
      :                          @186
  2494: 95 1b 21                 a4 = sp + 0x21
  2497: c8 9b 0b                 a4 = a4 + a2
  2500: 9a 9c 27                 a5 = 0x27 - a2
  2503: 33 09 28 00 01           a2 = 0x10028
  2508: 82 17 08                 a0 = u64 [sp + 0x8]
  2511: 82 18                    a1 = u64 [sp]
  2513: 33 0a                    a3 = 0
  2515: 50 10 32 12              ra = 50, jump @188
      :                          @187 [@dyn 25]
  2519: 82 10 58                 ra = u64 [sp + 0x58]
  2522: 82 15 50                 s0 = u64 [sp + 0x50]
  2525: 82 16 48                 s1 = u64 [sp + 0x48]
  2528: 95 11 60                 sp = sp + 0x60
  2531: 32 00                    ret
      :                          @188
  2533: 95 11 98                 sp = sp + 0xffffffffffffff98
  2536: 7b 10 60                 u64 [sp + 0x60] = ra
  2539: 7b 15 58                 u64 [sp + 0x58] = s0
  2542: 7b 16 50                 u64 [sp + 0x50] = s1
  2545: 7b 1b 18                 u64 [sp + 0x18] = a4
  2548: 51 08 4f                 jump @195 if a1 == 0
      :                          @189
  2551: 80 76 34                 s1 = u32 [a0 + 0x34]
  2554: 84 68 01                 a1 = s1 & 0x1
  2557: 33 0b 2b                 a4 = 0x2b
  2560: 33 05 00 00 11           s0 = 0x110000
  2565: db 8b 05                 s0 = a4 if a1 != 0
  2568: 7b 15 28                 u64 [sp + 0x28] = s0
  2571: c8 c8 02                 t0 = a1 + a5
  2574: 84 68 04                 a1 = s1 & 0x4
  2577: 51 08 42                 jump @196 if a1 == 0
      :                          @190
  2580: 7b 19 30                 u64 [sp + 0x30] = a2
  2583: 33 08                    a1 = 0
  2585: 51 0a 1a                 jump @193 if a3 == 0
      :                          @191
  2588: 64 a5                    s0 = a3
  2590: 01                       fallthrough
      :                          @192
  2591: 7d 9b                    a4 = i8 [a2]
  2593: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  2596: 85 bb 01                 a4 = a4 ^ 0x1
  2599: c8 b8 08                 a1 = a1 + a4
  2602: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2605: 95 99 01                 a2 = a2 + 0x1
  2608: 52 05 ef                 jump @192 if s0 != 0
      :                          @193
  2611: c8 82 02                 t0 = t0 + a1
  2614: 7b 1a 38                 u64 [sp + 0x38] = a3
  2617: 82 78                    a1 = u64 [a0]
  2619: 7b 1c 20                 u64 [sp + 0x20] = a5
  2622: 52 08 23                 jump @197 if a1 != 0
      :                          @194
  2625: 28 41                    jump @202
      :                          @195
  2627: 81 76 34                 s1 = i32 [a0 + 0x34]
  2630: 95 c2 01                 t0 = a5 + 0x1
  2633: 49 11 28 2d              u64 [sp + 40] = 0x2d
  2637: 84 68 04                 a1 = s1 & 0x4
  2640: 52 08 c4                 jump @190 if a1 != 0
      :                          @196
  2643: 49 11 30                 u64 [sp + 48] = 0
  2646: 7b 1a 38                 u64 [sp + 0x38] = a3
  2649: 82 78                    a1 = u64 [a0]
  2651: 7b 1c 20                 u64 [sp + 0x20] = a5
  2654: 51 08 24                 jump @202 if a1 == 0
      :                          @197
  2657: 82 75 08                 s0 = u64 [a0 + 0x8]
  2660: ae 52 1e                 jump @202 if t0 >=u s0
      :                          @198
  2663: 84 66 08                 s1 = s1 & 0x8
  2666: 52 06 50                 jump @205 if s1 != 0
      :                          @199
  2669: 7c 79 38                 a2 = u8 [a0 + 0x38]
  2672: c9 25 0a                 a3 = s0 - t0
  2675: 5a 19 01 a1 00           jump @212 if a2 >s 1
      :                          @200
  2680: 52 09 ae 00              jump @214 if a2 != 0
      :                          @201
  2684: 7b 1a 10                 u64 [sp + 0x10] = a3
  2687: 28 ad 00                 jump @215
      :                          @202
  2690: 82 75 20                 s0 = u64 [a0 + 0x20]
  2693: 82 76 28                 s1 = u64 [a0 + 0x28]
  2696: 64 57                    a0 = s0
  2698: 64 68                    a1 = s1
  2700: 82 19 28                 a2 = u64 [sp + 0x28]
  2703: 82 1a 30                 a3 = u64 [sp + 0x30]
  2706: 82 1b 38                 a4 = u64 [sp + 0x38]
  2709: 50 10 34 6d 01           ra = 52, jump @235
      :                          @203 [@dyn 26]
  2714: 33 08 01                 a1 = 0x1
  2717: 52 07 bc 00              jump @220 if a0 != 0
      :                          @204
  2721: 82 6c 18                 a5 = u64 [s1 + 0x18]
  2724: 64 57                    a0 = s0
  2726: 82 18 18                 a1 = u64 [sp + 0x18]
  2729: 82 19 20                 a2 = u64 [sp + 0x20]
  2732: 82 10 60                 ra = u64 [sp + 0x60]
  2735: 82 15 58                 s0 = u64 [sp + 0x58]
  2738: 82 16 50                 s1 = u64 [sp + 0x50]
  2741: 95 11 68                 sp = sp + 0x68
  2744: 32 0c                    jump [a5]
      :                          @205
  2746: 7b 12 40                 u64 [sp + 0x40] = t0
  2749: 81 78 30                 a1 = i32 [a0 + 0x30]
  2752: 7b 18 08                 u64 [sp + 0x8] = a1
  2755: 7c 79 38                 a2 = u8 [a0 + 0x38]
  2758: 7b 19                    u64 [sp] = a2
  2760: 82 79 20                 a2 = u64 [a0 + 0x20]
  2763: 82 76 28                 s1 = u64 [a0 + 0x28]
  2766: 48 17 30 30              u32 [a0 + 48] = 0x30
  2770: 7b 17 10                 u64 [sp + 0x10] = a0
  2773: 46 17 38 01              u8 [a0 + 56] = 0x1
  2777: 7b 19 48                 u64 [sp + 0x48] = a2
  2780: 64 97                    a0 = a2
  2782: 64 68                    a1 = s1
  2784: 82 19 28                 a2 = u64 [sp + 0x28]
  2787: 82 1a 30                 a3 = u64 [sp + 0x30]
  2790: 82 1b 38                 a4 = u64 [sp + 0x38]
  2793: 50 10 36 19 01           ra = 54, jump @235
      :                          @206 [@dyn 27]
  2798: 52 07 67                 jump @219 if a0 != 0
      :                          @207
  2801: 82 17 40                 a0 = u64 [sp + 0x40]
  2804: c9 75 05                 s0 = s0 - a0
  2807: 95 55 01                 s0 = s0 + 0x1
  2810: 01                       fallthrough
      :                          @208
  2811: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2814: 51 05 c6 00              jump @230 if s0 == 0
      :                          @209
  2818: 82 69 20                 a2 = u64 [s1 + 0x20]
  2821: 33 08 30                 a1 = 0x30
  2824: 82 17 48                 a0 = u64 [sp + 0x48]
  2827: b4 90 01 38              ra = 56, jump [a2]
      :                          @210 [@dyn 28]
  2831: 51 07 ec                 jump @208 if a0 == 0
      :                          @211
  2834: 28 43                    jump @219
      :                          @212
  2836: 52 19 02 12              jump @214 if a2 != 2
      :                          @213
  2840: 98 a9 01                 a2 = a3 >> 0x1
  2843: 95 a8 01                 a1 = a3 + 0x1
  2846: 98 88 01                 a1 = a1 >> 0x1
  2849: 7b 18 10                 u64 [sp + 0x10] = a1
  2852: 28 08                    jump @215
      :                          @214
  2854: 64 a9                    a2 = a3
  2856: 49 11 10                 u64 [sp + 16] = 0
  2859: 01                       fallthrough
      :                          @215
  2860: 82 78 20                 a1 = u64 [a0 + 0x20]
  2863: 7b 18 48                 u64 [sp + 0x48] = a1
  2866: 82 76 28                 s1 = u64 [a0 + 0x28]
  2869: 81 77 30                 a0 = i32 [a0 + 0x30]
  2872: 7b 17 40                 u64 [sp + 0x40] = a0
  2875: 95 95 01                 s0 = a2 + 0x1
  2878: 01                       fallthrough
      :                          @216
  2879: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2882: 51 05 27                 jump @221 if s0 == 0
      :                          @217
  2885: 82 69 20                 a2 = u64 [s1 + 0x20]
  2888: 82 17 48                 a0 = u64 [sp + 0x48]
  2891: 82 18 40                 a1 = u64 [sp + 0x40]
  2894: b4 90 01 3a              ra = 58, jump [a2]
      :                          @218 [@dyn 29]
  2898: 51 07 ed                 jump @216 if a0 == 0
      :                          @219
  2901: 33 08 01                 a1 = 0x1
  2904: 01                       fallthrough
      :                          @220
  2905: 64 87                    a0 = a1
  2907: 82 10 60                 ra = u64 [sp + 0x60]
  2910: 82 15 58                 s0 = u64 [sp + 0x58]
  2913: 82 16 50                 s1 = u64 [sp + 0x50]
  2916: 95 11 68                 sp = sp + 0x68
  2919: 32 00                    ret
      :                          @221
  2921: 82 15 48                 s0 = u64 [sp + 0x48]
  2924: 64 57                    a0 = s0
  2926: 64 68                    a1 = s1
  2928: 82 19 28                 a2 = u64 [sp + 0x28]
  2931: 82 1a 30                 a3 = u64 [sp + 0x30]
  2934: 82 1b 38                 a4 = u64 [sp + 0x38]
  2937: 50 10 3c 89 00           ra = 60, jump @235
      :                          @222 [@dyn 30]
  2942: 33 08 01                 a1 = 0x1
  2945: 52 07 d8                 jump @220 if a0 != 0
      :                          @223
  2948: 82 6a 18                 a3 = u64 [s1 + 0x18]
  2951: 64 57                    a0 = s0
  2953: 82 18 18                 a1 = u64 [sp + 0x18]
  2956: 82 19 20                 a2 = u64 [sp + 0x20]
  2959: b4 a0 01 3e              ra = 62, jump [a3]
      :                          @224 [@dyn 31]
  2963: 33 08 01                 a1 = 0x1
  2966: 52 07 c3                 jump @220 if a0 != 0
      :                          @225
  2969: 82 17 10                 a0 = u64 [sp + 0x10]
  2972: 9a 77                    a0 = -a0
  2974: 7b 17 38                 u64 [sp + 0x38] = a0
  2977: 33 05 ff                 s0 = 0xffffffffffffffff
  2980: 01                       fallthrough
      :                          @226
  2981: 82 17 38                 a0 = u64 [sp + 0x38]
  2984: c8 57 07                 a0 = a0 + s0
  2987: 51 17 ff 42              jump @233 if a0 == 4294967295
      :                          @227
  2991: 82 69 20                 a2 = u64 [s1 + 0x20]
  2994: 82 17 48                 a0 = u64 [sp + 0x48]
  2997: 82 18 40                 a1 = u64 [sp + 0x40]
  3000: b4 90 01 40              ra = 64, jump [a2]
      :                          @228 [@dyn 32]
  3004: 95 55 01                 s0 = s0 + 0x1
  3007: 51 07 e6                 jump @226 if a0 == 0
      :                          @229
  3010: 28 37                    jump @234
      :                          @230
  3012: 82 6a 18                 a3 = u64 [s1 + 0x18]
  3015: 82 17 48                 a0 = u64 [sp + 0x48]
  3018: 82 18 18                 a1 = u64 [sp + 0x18]
  3021: 82 19 20                 a2 = u64 [sp + 0x20]
  3024: b4 a0 01 42              ra = 66, jump [a3]
      :                          @231 [@dyn 33]
  3028: 33 08 01                 a1 = 0x1
  3031: 52 07 82                 jump @220 if a0 != 0
      :                          @232
  3034: 33 08                    a1 = 0
  3036: 82 17 10                 a0 = u64 [sp + 0x10]
  3039: 82 19 08                 a2 = u64 [sp + 0x8]
  3042: 7a 79 30                 u32 [a0 + 0x30] = a2
  3045: 82 19                    a2 = u64 [sp]
  3047: 78 79 38                 u8 [a0 + 0x38] = a2
  3050: 28 6f ff                 jump @220
      :                          @233
  3053: 82 15 10                 s0 = u64 [sp + 0x10]
  3056: 82 17 10                 a0 = u64 [sp + 0x10]
  3059: d8 75 08                 a1 = s0 <u a0
  3062: 28 63 ff                 jump @220
      :                          @234
  3065: 82 17 10                 a0 = u64 [sp + 0x10]
  3068: d8 75 08                 a1 = s0 <u a0
  3071: 28 5a ff                 jump @220
      :                          @235
  3074: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3077: 7b 10 20                 u64 [sp + 0x20] = ra
  3080: 7b 15 18                 u64 [sp + 0x18] = s0
  3083: 7b 16 10                 u64 [sp + 0x10] = s1
  3086: 83 9c                    i32 a5 = a2 + 0
  3088: 33 02 00 00 11           t0 = 0x110000
  3093: 64 a6                    s1 = a3
  3095: 64 85                    s0 = a1
  3097: 64 7a                    a3 = a0
  3099: aa 2c 20                 jump @238 if a5 == t0
      :                          @236
  3102: 82 5c 20                 a5 = u64 [s0 + 0x20]
  3105: 64 a7                    a0 = a3
  3107: 64 98                    a1 = a2
  3109: 7b 1b 08                 u64 [sp + 0x8] = a4
  3112: 7b 1a                    u64 [sp] = a3
  3114: b4 c0 01 44              ra = 68, jump [a5]
      :                          @237 [@dyn 34]
  3118: 82 1a                    a3 = u64 [sp]
  3120: 82 1b 08                 a4 = u64 [sp + 0x8]
  3123: 64 78                    a1 = a0
  3125: 33 07 01                 a0 = 0x1
  3128: 52 08 20                 jump @241 if a1 != 0
      :                          @238
  3131: 51 06 1a                 jump @240 if s1 == 0
      :                          @239
  3134: 82 5c 18                 a5 = u64 [s0 + 0x18]
  3137: 64 a7                    a0 = a3
  3139: 64 68                    a1 = s1
  3141: 64 b9                    a2 = a4
  3143: 82 10 20                 ra = u64 [sp + 0x20]
  3146: 82 15 18                 s0 = u64 [sp + 0x18]
  3149: 82 16 10                 s1 = u64 [sp + 0x10]
  3152: 95 11 28                 sp = sp + 0x28
  3155: 32 0c                    jump [a5]
      :                          @240
  3157: 33 07                    a0 = 0
  3159: 01                       fallthrough
      :                          @241
  3160: 82 10 20                 ra = u64 [sp + 0x20]
  3163: 82 15 18                 s0 = u64 [sp + 0x18]
  3166: 82 16 10                 s1 = u64 [sp + 0x10]
  3169: 95 11 28                 sp = sp + 0x28
  3172: 32 00                    ret
      :                          @242
  3174: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  3178: 7b 10 80 00              u64 [sp + 0x80] = ra
  3182: 7b 15 78                 u64 [sp + 0x78] = s0
  3185: 7b 16 70                 u64 [sp + 0x70] = s1
  3188: 49 11 60 20              u64 [sp + 96] = 0x20
  3192: 33 09 03                 a2 = 0x3
  3195: 78 19 68                 u8 [sp + 0x68] = a2
  3198: 49 11 30                 u64 [sp + 48] = 0
  3201: 49 11 40                 u64 [sp + 64] = 0
  3204: 82 86 20                 s1 = u64 [a1 + 0x20]
  3207: 7b 17 50                 u64 [sp + 0x50] = a0
  3210: 33 07 18 01 01           a0 = 0x10118
  3215: 7b 17 58                 u64 [sp + 0x58] = a0
  3218: 51 06 06 01              jump @264 if s1 == 0
      :                          @243
  3222: 82 87 28                 a0 = u64 [a1 + 0x28]
  3225: 51 07 73 01              jump @274 if a0 == 0
      :                          @244
  3229: 33 09                    a2 = 0
  3231: 82 85                    s0 = u64 [a1]
  3233: 7b 18 08                 u64 [sp + 0x8] = a1
  3236: 82 88 10                 a1 = u64 [a1 + 0x10]
  3239: 7b 18 18                 u64 [sp + 0x18] = a1
  3242: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  3245: 97 88 03                 a1 = a1 << 0x3
  3248: 98 88 03                 a1 = a1 >> 0x3
  3251: 95 88 01                 a1 = a1 + 0x1
  3254: 7b 18                    u64 [sp] = a1
  3256: 95 55 08                 s0 = s0 + 0x8
  3259: 96 78 38                 a1 = a0 * 0x38
  3262: 95 66 18                 s1 = s1 + 0x18
  3265: 33 07 30                 a0 = 0x30
  3268: 7b 17 10                 u64 [sp + 0x10] = a0
  3271: 01                       fallthrough
      :                          @245
  3272: 7b 18 20                 u64 [sp + 0x20] = a1
  3275: 7b 19 28                 u64 [sp + 0x28] = a2
  3278: 82 59                    a2 = u64 [s0]
  3280: 51 09 17                 jump @248 if a2 == 0
      :                          @246
  3283: 82 1a 58                 a3 = u64 [sp + 0x58]
  3286: 82 17 50                 a0 = u64 [sp + 0x50]
  3289: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  3292: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3295: b4 a0 01 46              ra = 70, jump [a3]
      :                          @247 [@dyn 35]
  3299: 52 07 4e 01              jump @277 if a0 != 0
      :                          @248
  3303: 81 67 10                 a0 = i32 [s1 + 0x10]
  3306: 7a 17 60                 u32 [sp + 0x60] = a0
  3309: 7c 67 18                 a0 = u8 [s1 + 0x18]
  3312: 78 17 68                 u8 [sp + 0x68] = a0
  3315: 81 67 14                 a0 = i32 [s1 + 0x14]
  3318: 7a 17 64                 u32 [sp + 0x64] = a0
  3321: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3324: 82 67                    a0 = u64 [s1]
  3326: 51 08 26                 jump @253 if a1 == 0
      :                          @249
  3329: 52 18 01 16              jump @251 if a1 != 1
      :                          @250
  3333: 97 77 04                 a0 = a0 << 0x4
  3336: 82 18 18                 a1 = u64 [sp + 0x18]
  3339: c8 87 07                 a0 = a0 + a1
  3342: 82 78 08                 a1 = u64 [a0 + 0x8]
  3345: 82 19 10                 a2 = u64 [sp + 0x10]
  3348: aa 98 07                 jump @252 if a1 == a2
      :                          @251
  3351: 33 08                    a1 = 0
  3353: 28 0f                    jump @254
      :                          @252
  3355: 82 77                    a0 = u64 [a0]
  3357: 82 77                    a0 = u64 [a0]
  3359: 33 08 01                 a1 = 0x1
  3362: 28 06                    jump @254
      :                          @253
  3364: 33 08 01                 a1 = 0x1
  3367: 01                       fallthrough
      :                          @254
  3368: 7b 18 30                 u64 [sp + 0x30] = a1
  3371: 7b 17 38                 u64 [sp + 0x38] = a0
  3374: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  3377: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  3380: 51 08 26                 jump @259 if a1 == 0
      :                          @255
  3383: 52 18 01 16              jump @257 if a1 != 1
      :                          @256
  3387: 97 77 04                 a0 = a0 << 0x4
  3390: 82 18 18                 a1 = u64 [sp + 0x18]
  3393: c8 87 07                 a0 = a0 + a1
  3396: 82 78 08                 a1 = u64 [a0 + 0x8]
  3399: 82 19 10                 a2 = u64 [sp + 0x10]
  3402: aa 98 07                 jump @258 if a1 == a2
      :                          @257
  3405: 33 08                    a1 = 0
  3407: 28 0f                    jump @260
      :                          @258
  3409: 82 77                    a0 = u64 [a0]
  3411: 82 77                    a0 = u64 [a0]
  3413: 33 08 01                 a1 = 0x1
  3416: 28 06                    jump @260
      :                          @259
  3418: 33 08 01                 a1 = 0x1
  3421: 01                       fallthrough
      :                          @260
  3422: 7b 18 40                 u64 [sp + 0x40] = a1
  3425: 7b 17 48                 u64 [sp + 0x48] = a0
  3428: 82 67 08                 a0 = u64 [s1 + 0x8]
  3431: 97 77 04                 a0 = a0 << 0x4
  3434: 82 18 18                 a1 = u64 [sp + 0x18]
  3437: c8 78 08                 a1 = a1 + a0
  3440: 82 87                    a0 = u64 [a1]
  3442: 82 89 08                 a2 = u64 [a1 + 0x8]
  3445: 95 18 30                 a1 = sp + 0x30
  3448: b4 90 01 48              ra = 72, jump [a2]
      :                          @261 [@dyn 36]
  3452: 52 07 b5 00              jump @277 if a0 != 0
      :                          @262
  3456: 95 55 10                 s0 = s0 + 0x10
  3459: 82 18 20                 a1 = u64 [sp + 0x20]
  3462: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  3465: 95 66 38                 s1 = s1 + 0x38
  3468: 82 19 28                 a2 = u64 [sp + 0x28]
  3471: 95 99 01                 a2 = a2 + 0x1
  3474: 52 08 36 ff              jump @245 if a1 != 0
      :                          @263
  3478: 28 69                    jump @272
      :                          @264
  3480: 82 87 18                 a0 = u64 [a1 + 0x18]
  3483: 51 07 71                 jump @274 if a0 == 0
      :                          @265
  3486: 82 85 10                 s0 = u64 [a1 + 0x10]
  3489: 33 0a                    a3 = 0
  3491: 97 79 04                 a2 = a0 << 0x4
  3494: c8 59 09                 a2 = a2 + s0
  3497: 7b 19 20                 u64 [sp + 0x20] = a2
  3500: 7b 18 08                 u64 [sp + 0x8] = a1
  3503: 82 86                    s1 = u64 [a1]
  3505: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3508: 97 77 04                 a0 = a0 << 0x4
  3511: 98 77 04                 a0 = a0 >> 0x4
  3514: 95 77 01                 a0 = a0 + 0x1
  3517: 7b 17                    u64 [sp] = a0
  3519: 95 66 08                 s1 = s1 + 0x8
  3522: 01                       fallthrough
      :                          @266
  3523: 7b 1a 28                 u64 [sp + 0x28] = a3
  3526: 82 69                    a2 = u64 [s1]
  3528: 51 09 16                 jump @269 if a2 == 0
      :                          @267
  3531: 82 1a 58                 a3 = u64 [sp + 0x58]
  3534: 82 17 50                 a0 = u64 [sp + 0x50]
  3537: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3540: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3543: b4 a0 01 4a              ra = 74, jump [a3]
      :                          @268 [@dyn 37]
  3547: 52 07 56                 jump @277 if a0 != 0
      :                          @269
  3550: 82 57                    a0 = u64 [s0]
  3552: 82 59 08                 a2 = u64 [s0 + 0x8]
  3555: 95 18 30                 a1 = sp + 0x30
  3558: b4 90 01 4c              ra = 76, jump [a2]
      :                          @270 [@dyn 38]
  3562: 52 07 47                 jump @277 if a0 != 0
      :                          @271
  3565: 95 66 10                 s1 = s1 + 0x10
  3568: 95 55 10                 s0 = s0 + 0x10
  3571: 82 1a 28                 a3 = u64 [sp + 0x28]
  3574: 95 aa 01                 a3 = a3 + 0x1
  3577: 82 17 20                 a0 = u64 [sp + 0x20]
  3580: ab 75 c7                 jump @266 if s0 != a0
      :                          @272
  3583: 82 18 08                 a1 = u64 [sp + 0x8]
  3586: 82 1a                    a3 = u64 [sp]
  3588: 82 87 08                 a0 = u64 [a1 + 0x8]
  3591: ac 7a 0d                 jump @275 if a3 <u a0
      :                          @273
  3594: 28 2c                    jump @278
      :                          @274
  3596: 33 0a                    a3 = 0
  3598: 82 87 08                 a0 = u64 [a1 + 0x8]
  3601: 54 07 25                 jump @278 if a0 <=u 0
      :                          @275
  3604: 82 87                    a0 = u64 [a1]
  3606: 97 a8 04                 a1 = a3 << 0x4
  3609: c8 87 09                 a2 = a0 + a1
  3612: 82 1a 58                 a3 = u64 [sp + 0x58]
  3615: 82 17 50                 a0 = u64 [sp + 0x50]
  3618: 82 98                    a1 = u64 [a2]
  3620: 82 99 08                 a2 = u64 [a2 + 0x8]
  3623: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3626: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @276 [@dyn 39]
  3630: 51 07 08                 jump @278 if a0 == 0
      :                          @277
  3633: 33 07 01                 a0 = 0x1
  3636: 28 05                    jump @279
      :                          @278
  3638: 33 07                    a0 = 0
  3640: 01                       fallthrough
      :                          @279
  3641: 82 10 80 00              ra = u64 [sp + 0x80]
  3645: 82 15 78                 s0 = u64 [sp + 0x78]
  3648: 82 16 70                 s1 = u64 [sp + 0x70]
  3651: 95 11 88 00              sp = sp + 0x88
  3655: 32 00                    ret
