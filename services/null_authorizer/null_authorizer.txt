// RO data = 322/324 bytes
// RW data = 8/65568 bytes
// Stack size = 65536 bytes
// RO data = [110, 117, 108, 108, 95, 97, 117, 116, 104, 111, 114, 105, 122, 101, 114, 32, 103, 97, 115, 32, 99, 97, 108, 108, 32, 32, 103, 97, 115, 95, 114, 101, 115, 117, 108, 116, 58, 32, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 25, 0, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52]
// Instructions = 1271
// Code size = 3641 bytes

      :                          @0
     0: 28 7e 01                 jump @25
      :                          @1 [@dyn 1]
     3: 95 11 78 ff              sp = sp + 0xffffffffffffff78
     7: 7b 10 80 00              u64 [sp + 0x80] = ra
    11: 64 82                    t0 = a1
    13: 80 88 34                 a1 = u32 [a1 + 0x34]
    16: 84 89 10                 a2 = a1 & 0x10
    19: 52 09 28                 jump @4 if a2 != 0
      :                          @2
    22: 84 88 20                 a1 = a1 & 0x20
    25: 52 08 52                 jump @7 if a1 != 0
      :                          @3
    28: 81 77                    a0 = i32 [a0]
    30: 89 79                    a2 = a0 <s 0
    32: 85 98 01                 a1 = a2 ^ 0x1
    35: 97 7a 20                 a3 = a0 << 0x20
    38: 98 aa 20                 a3 = a3 >> 0x20
    41: 9a 77                    a0 = -a0
    43: da 9a 07                 a0 = a3 if a2 == 0
    46: 64 29                    a2 = t0
    48: 82 10 80 00              ra = u64 [sp + 0x80]
    52: 95 11 88 00              sp = sp + 0x88
    56: 28 70 08                 jump @176
      :                          @4
    59: 81 7a                    a3 = i32 [a0]
    61: 33 08 81 00              a1 = 0x81
    65: 95 17 7f                 a0 = sp + 0x7f
    68: 33 03 57                 t1 = 0x57
    71: 01                       fallthrough
      :                          @5
    72: 64 8b                    a4 = a1
    74: 8b ac 04                 i32 a5 = a3 >> 0x4
    77: 84 aa 0f                 a3 = a3 & 0xf
    80: 88 a8 0a                 a1 = a3 <u 0xa
    83: 33 09 30                 a2 = 0x30
    86: da 83 09                 a2 = t1 if a1 == 0
    89: be a9 09                 i32 a2 = a2 + a3
    92: 78 79                    u8 [a0] = a2
    94: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    97: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   100: 64 ca                    a3 = a5
   102: 52 0c e2                 jump @5 if a5 != 0
      :                          @6
   105: 28 30                    jump @9
      :                          @7
   107: 81 7a                    a3 = i32 [a0]
   109: 33 08 81 00              a1 = 0x81
   113: 95 17 7f                 a0 = sp + 0x7f
   116: 33 03 37                 t1 = 0x37
   119: 01                       fallthrough
      :                          @8
   120: 64 8b                    a4 = a1
   122: 8b ac 04                 i32 a5 = a3 >> 0x4
   125: 84 aa 0f                 a3 = a3 & 0xf
   128: 88 a8 0a                 a1 = a3 <u 0xa
   131: 33 09 30                 a2 = 0x30
   134: da 83 09                 a2 = t1 if a1 == 0
   137: be a9 09                 i32 a2 = a2 + a3
   140: 78 79                    u8 [a0] = a2
   142: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   145: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   148: 64 ca                    a3 = a5
   150: 52 0c e2                 jump @8 if a5 != 0
      :                          @9
   153: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   156: 56 27 80 00 2a           jump @12 if a0 >u 128
      :                          @10
   161: 9a 8c 81 00              a5 = 0x81 - a1
   165: 64 1b                    a4 = sp
   167: c8 7b 0b                 a4 = a4 + a0
   170: 33 09 78 00 01           a2 = 0x10078
   175: 33 08 01                 a1 = 0x1
   178: 33 0a 02                 a3 = 0x2
   181: 64 27                    a0 = t0
   183: 50 10 04 1e 09           ra = 4, jump @186
      :                          @11 [@dyn 2]
   188: 82 10 80 00              ra = u64 [sp + 0x80]
   192: 95 11 88 00              sp = sp + 0x88
   196: 32 00                    ret
      :                          @12
   198: 00                       trap
      :                          @13 [@dyn 3]
   199: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   203: 7b 10 80 00              u64 [sp + 0x80] = ra
   207: 64 82                    t0 = a1
   209: 80 88 34                 a1 = u32 [a1 + 0x34]
   212: 84 89 10                 a2 = a1 & 0x10
   215: 52 09 1b                 jump @16 if a2 != 0
      :                          @14
   218: 84 88 20                 a1 = a1 & 0x20
   221: 52 08 45                 jump @19 if a1 != 0
      :                          @15
   224: 82 77                    a0 = u64 [a0]
   226: 33 08 01                 a1 = 0x1
   229: 64 29                    a2 = t0
   231: 82 10 80 00              ra = u64 [sp + 0x80]
   235: 95 11 88 00              sp = sp + 0x88
   239: 28 b9 07                 jump @176
      :                          @16
   242: 82 7a                    a3 = u64 [a0]
   244: 33 08 81 00              a1 = 0x81
   248: 95 17 7f                 a0 = sp + 0x7f
   251: 33 03 57                 t1 = 0x57
   254: 01                       fallthrough
      :                          @17
   255: 64 8b                    a4 = a1
   257: 98 ac 04                 a5 = a3 >> 0x4
   260: 84 aa 0f                 a3 = a3 & 0xf
   263: 88 a8 0a                 a1 = a3 <u 0xa
   266: 33 09 30                 a2 = 0x30
   269: da 83 09                 a2 = t1 if a1 == 0
   272: be a9 09                 i32 a2 = a2 + a3
   275: 78 79                    u8 [a0] = a2
   277: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   280: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   283: 64 ca                    a3 = a5
   285: 52 0c e2                 jump @17 if a5 != 0
      :                          @18
   288: 28 30                    jump @21
      :                          @19
   290: 82 7a                    a3 = u64 [a0]
   292: 33 08 81 00              a1 = 0x81
   296: 95 17 7f                 a0 = sp + 0x7f
   299: 33 03 37                 t1 = 0x37
   302: 01                       fallthrough
      :                          @20
   303: 64 8b                    a4 = a1
   305: 98 ac 04                 a5 = a3 >> 0x4
   308: 84 aa 0f                 a3 = a3 & 0xf
   311: 88 a8 0a                 a1 = a3 <u 0xa
   314: 33 09 30                 a2 = 0x30
   317: da 83 09                 a2 = t1 if a1 == 0
   320: be a9 09                 i32 a2 = a2 + a3
   323: 78 79                    u8 [a0] = a2
   325: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   328: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   331: 64 ca                    a3 = a5
   333: 52 0c e2                 jump @20 if a5 != 0
      :                          @21
   336: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   339: 56 27 80 00 2a           jump @24 if a0 >u 128
      :                          @22
   344: 9a 8c 81 00              a5 = 0x81 - a1
   348: 64 1b                    a4 = sp
   350: c8 7b 0b                 a4 = a4 + a0
   353: 33 09 78 00 01           a2 = 0x10078
   358: 33 08 01                 a1 = 0x1
   361: 33 0a 02                 a3 = 0x2
   364: 64 27                    a0 = t0
   366: 50 10 08 67 08           ra = 8, jump @186
      :                          @23 [@dyn 4]
   371: 82 10 80 00              ra = u64 [sp + 0x80]
   375: 95 11 88 00              sp = sp + 0x88
   379: 32 00                    ret
      :                          @24
   381: 00                       trap
      :                          @25 [export #0: 'is_authorize']
   382: 95 11 50 ff              sp = sp + 0xffffffffffffff50
   386: 7b 10 a8 00              u64 [sp + 0xa8] = ra
   390: 7b 15 a0 00              u64 [sp + 0xa0] = s0
   394: 7b 16 98 00              u64 [sp + 0x98] = s1
   398: 49 11 18 ff ff fe        u64 [sp + 24] = 0xfffffffffffeffff
   404: 48 11 24                 u32 [sp + 36] = 0
   407: 0a                       ecalli 0 // 'gas'
   408: 7b 17 28                 u64 [sp + 0x28] = a0
   411: 95 17 24                 a0 = sp + 0x24
   414: 7b 17 78                 u64 [sp + 0x78] = a0
   417: 33 07 02                 a0 = 0x2
   420: 7b 17 10                 u64 [sp + 0x10] = a0
   423: 7b 17 80 00              u64 [sp + 0x80] = a0
   427: 95 17 28                 a0 = sp + 0x28
   430: 7b 17 88 00              u64 [sp + 0x88] = a0
   434: 33 07 06                 a0 = 0x6
   437: 7b 17 08                 u64 [sp + 0x8] = a0
   440: 7b 17 90 00              u64 [sp + 0x90] = a0
   444: 33 07 28 00 01           a0 = 0x10028
   449: 7b 17                    u64 [sp] = a0
   451: 7b 17 48                 u64 [sp + 0x48] = a0
   454: 49 11 50 02              u64 [sp + 80] = 0x2
   458: 49 11 68                 u64 [sp + 104] = 0
   461: 95 18 78                 a1 = sp + 0x78
   464: 7b 18 58                 u64 [sp + 0x58] = a1
   467: 49 11 60 02              u64 [sp + 96] = 0x2
   471: 95 17 30                 a0 = sp + 0x30
   474: 95 18 48                 a1 = sp + 0x48
   477: 50 10 0a b1 03           ra = 10, jump @106
      :                          @26 [@dyn 5]
   482: 82 15 38                 s0 = u64 [sp + 0x38]
   485: 82 1b 40                 a4 = u64 [sp + 0x40]
   488: 82 16 30                 s1 = u64 [sp + 0x30]
   491: 33 07 02                 a0 = 0x2
   494: 33 08                    a1 = 0
   496: 33 09                    a2 = 0
   498: 64 5a                    a3 = s0
   500: 33 00 0c                 ra = 0xc
   503: 0a 64                    ecalli 100 // 'log'
   505: 01                       fallthrough
      :                          @27 [@dyn 6]
   506: 82 17 18                 a0 = u64 [sp + 0x18]
   509: c8 67 07                 a0 = a0 + s1
   512: 53 37 00 00 ff 25        jump @33 if a0 <u 4294901760
      :                          @28
   518: 33 07 10 00 03           a0 = 0x30010
   523: 95 77 00 00 01           a0 = a0 + 0x10000
   528: 01                       fallthrough
      :                          @29
   529: 82 78                    a1 = u64 [a0]
   531: c9 87 09                 a2 = a0 - a1
   534: ab 59 0f                 jump @33 if a2 != s0
      :                          @30
   537: c9 68 09                 a2 = a1 - s1
   540: 01                       fallthrough
      :                          @31
   541: 82 7a                    a3 = u64 [a0]
   543: ab 8a f2                 jump @29 if a3 != a1
      :                          @32
   546: 7b 79                    u64 [a0] = a2
   548: 01                       fallthrough
      :                          @33
   549: 48 11 24 01              u32 [sp + 36] = 0x1
   553: 0a                       ecalli 0 // 'gas'
   554: 7b 17 28                 u64 [sp + 0x28] = a0
   557: 95 17 24                 a0 = sp + 0x24
   560: 7b 17 78                 u64 [sp + 0x78] = a0
   563: 82 17 10                 a0 = u64 [sp + 0x10]
   566: 7b 17 80 00              u64 [sp + 0x80] = a0
   570: 95 17 28                 a0 = sp + 0x28
   573: 7b 17 88 00              u64 [sp + 0x88] = a0
   577: 82 17 08                 a0 = u64 [sp + 0x8]
   580: 7b 17 90 00              u64 [sp + 0x90] = a0
   584: 82 17                    a0 = u64 [sp]
   586: 7b 17 48                 u64 [sp + 0x48] = a0
   589: 49 11 50 02              u64 [sp + 80] = 0x2
   593: 49 11 68                 u64 [sp + 104] = 0
   596: 95 18 78                 a1 = sp + 0x78
   599: 7b 18 58                 u64 [sp + 0x58] = a1
   602: 49 11 60 02              u64 [sp + 96] = 0x2
   606: 95 17 30                 a0 = sp + 0x30
   609: 95 18 48                 a1 = sp + 0x48
   612: 50 10 0e 2a 03           ra = 14, jump @106
      :                          @34 [@dyn 7]
   617: 82 15 38                 s0 = u64 [sp + 0x38]
   620: 82 1b 40                 a4 = u64 [sp + 0x40]
   623: 82 16 30                 s1 = u64 [sp + 0x30]
   626: 33 07 02                 a0 = 0x2
   629: 33 08                    a1 = 0
   631: 33 09                    a2 = 0
   633: 64 5a                    a3 = s0
   635: 33 00 10                 ra = 0x10
   638: 0a 64                    ecalli 100 // 'log'
   640: 01                       fallthrough
      :                          @35 [@dyn 8]
   641: 82 17 18                 a0 = u64 [sp + 0x18]
   644: c8 67 07                 a0 = a0 + s1
   647: 53 37 00 00 ff 25        jump @41 if a0 <u 4294901760
      :                          @36
   653: 33 07 10 00 03           a0 = 0x30010
   658: 95 77 00 00 01           a0 = a0 + 0x10000
   663: 01                       fallthrough
      :                          @37
   664: 82 78                    a1 = u64 [a0]
   666: c9 87 09                 a2 = a0 - a1
   669: ab 59 0f                 jump @41 if a2 != s0
      :                          @38
   672: c9 68 09                 a2 = a1 - s1
   675: 01                       fallthrough
      :                          @39
   676: 82 7a                    a3 = u64 [a0]
   678: ab 8a f2                 jump @37 if a3 != a1
      :                          @40
   681: 7b 79                    u64 [a0] = a2
   683: 01                       fallthrough
      :                          @41
   684: 33 05 02                 s0 = 0x2
   687: 7a 15 24                 u32 [sp + 0x24] = s0
   690: 0a                       ecalli 0 // 'gas'
   691: 7b 17 28                 u64 [sp + 0x28] = a0
   694: 95 17 24                 a0 = sp + 0x24
   697: 7b 17 78                 u64 [sp + 0x78] = a0
   700: 33 07 02                 a0 = 0x2
   703: 7b 17 80 00              u64 [sp + 0x80] = a0
   707: 95 17 28                 a0 = sp + 0x28
   710: 7b 17 88 00              u64 [sp + 0x88] = a0
   714: 33 07 06                 a0 = 0x6
   717: 7b 17 90 00              u64 [sp + 0x90] = a0
   721: 33 07 28 00 01           a0 = 0x10028
   726: 7b 17 48                 u64 [sp + 0x48] = a0
   729: 7b 15 50                 u64 [sp + 0x50] = s0
   732: 49 11 68                 u64 [sp + 104] = 0
   735: 95 17 78                 a0 = sp + 0x78
   738: 7b 17 58                 u64 [sp + 0x58] = a0
   741: 7b 15 60                 u64 [sp + 0x60] = s0
   744: 95 17 30                 a0 = sp + 0x30
   747: 95 18 48                 a1 = sp + 0x48
   750: 50 10 12 a0 02           ra = 18, jump @106
      :                          @42 [@dyn 9]
   755: 82 15 38                 s0 = u64 [sp + 0x38]
   758: 82 1b 40                 a4 = u64 [sp + 0x40]
   761: 82 16 30                 s1 = u64 [sp + 0x30]
   764: 33 07 02                 a0 = 0x2
   767: 33 08                    a1 = 0
   769: 33 09                    a2 = 0
   771: 64 5a                    a3 = s0
   773: 33 00 14                 ra = 0x14
   776: 0a 64                    ecalli 100 // 'log'
   778: 01                       fallthrough
      :                          @43 [@dyn 10]
   779: 82 17 18                 a0 = u64 [sp + 0x18]
   782: c8 67 07                 a0 = a0 + s1
   785: 53 37 00 00 ff 27        jump @49 if a0 <u 4294901760
      :                          @44
   791: 33 07 10 00 03           a0 = 0x30010
   796: 95 77 00 00 01           a0 = a0 + 0x10000
   801: 01                       fallthrough
      :                          @45
   802: 82 78                    a1 = u64 [a0]
   804: c9 87 09                 a2 = a0 - a1
   807: ab 59 11                 jump @49 if a2 != s0
      :                          @46
   810: c9 68 09                 a2 = a1 - s1
   813: 01                       fallthrough
      :                          @47
   814: 82 7a                    a3 = u64 [a0]
   816: ab 8a f2                 jump @45 if a3 != a1
      :                          @48
   819: 7b 79                    u64 [a0] = a2
   821: 33 0b                    a4 = 0
   823: 01                       fallthrough
      :                          @49
   824: 33 07 00 00 01           a0 = 0x10000
   829: 33 08                    a1 = 0
   831: 82 10 a8 00              ra = u64 [sp + 0xa8]
   835: 82 15 a0 00              s0 = u64 [sp + 0xa0]
   839: 82 16 98 00              s1 = u64 [sp + 0x98]
   843: 95 11 b0 00              sp = sp + 0xb0
   847: 32 00                    ret
      :                          @50
   849: 95 11 b8                 sp = sp + 0xffffffffffffffb8
   852: 7b 10 40                 u64 [sp + 0x40] = ra
   855: 7b 15 38                 u64 [sp + 0x38] = s0
   858: 7b 16 30                 u64 [sp + 0x30] = s1
   861: c8 89 09                 a2 = a2 + a1
   864: ac 89 52                 jump @58 if a2 <u a1
      :                          @51
   867: 64 75                    s0 = a0
   869: 82 77                    a0 = u64 [a0]
   871: 97 78 01                 a1 = a0 << 0x1
   874: 33 0a 08                 a3 = 0x8
   877: e4 a9 09                 a2 = maxu(a2, a3)
   880: e4 98 06                 s1 = maxu(a1, a2)
   883: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
   886: 98 88 3f                 a1 = a1 >> 0x3f
   889: 51 07 12                 jump @53 if a0 == 0
      :                          @52
   892: 82 59 08                 a2 = u64 [s0 + 0x8]
   895: 7b 19 18                 u64 [sp + 0x18] = a2
   898: 49 11 20 01              u64 [sp + 32] = 0x1
   902: 7b 17 28                 u64 [sp + 0x28] = a0
   905: 28 06                    jump @54
      :                          @53
   907: 49 11 20                 u64 [sp + 32] = 0
   910: 01                       fallthrough
      :                          @54
   911: 64 17                    a0 = sp
   913: 95 1a 18                 a3 = sp + 0x18
   916: 64 69                    a2 = s1
   918: 50 10 16 32              ra = 22, jump @62
      :                          @55 [@dyn 11]
   922: 82 18                    a1 = u64 [sp]
   924: 82 17 08                 a0 = u64 [sp + 0x8]
   927: 51 08 14                 jump @59 if a1 == 0
      :                          @56
   930: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
   940: aa 87 0d                 jump @60 if a0 == a1
      :                          @57
   943: 52 07 18                 jump @61 if a0 != 0
      :                          @58
   946: 00                       trap
      :                          @59
   947: 7b 57 08                 u64 [s0 + 0x8] = a0
   950: 7b 56                    u64 [s0] = s1
   952: 01                       fallthrough
      :                          @60
   953: 82 10 40                 ra = u64 [sp + 0x40]
   956: 82 15 38                 s0 = u64 [sp + 0x38]
   959: 82 16 30                 s1 = u64 [sp + 0x30]
   962: 95 11 48                 sp = sp + 0x48
   965: 32 00                    ret
      :                          @61
   967: 00                       trap
      :                          @62
   968: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   971: 7b 10 30                 u64 [sp + 0x30] = ra
   974: 7b 15 28                 u64 [sp + 0x28] = s0
   977: 7b 16 20                 u64 [sp + 0x20] = s1
   980: 64 95                    s0 = a2
   982: 64 72                    t0 = a0
   984: 51 08 79                 jump @72 if a1 == 0
      :                          @63
   987: 82 a7 08                 a0 = u64 [a3 + 0x8]
   990: 51 07 7c                 jump @73 if a0 == 0
      :                          @64
   993: 82 a9 10                 a2 = u64 [a3 + 0x10]
   996: 51 09 aa 00              jump @80 if a2 == 0
      :                          @65
  1000: 82 a8                    a1 = u64 [a3]
  1002: 33 06 10 00 03           s1 = 0x30010
  1007: 33 03 00 00 01           t1 = 0x10000
  1012: c8 36 06                 s1 = s1 + t1
  1015: 01                       fallthrough
      :                          @66
  1016: 82 6a                    a3 = u64 [s1]
  1018: c8 5a 07                 a0 = a3 + s0
  1021: ac a7 cf 00              jump @86 if a0 <u a3
      :                          @67
  1025: 95 7b 01                 a4 = a0 + 0x1
  1028: 88 bc 01                 a5 = a4 <u 0x1
  1031: d8 b3 0b                 a4 = t1 <u a4
  1034: d4 cb 0b                 a4 = a4 | a5
  1037: 52 0b bf 00              jump @86 if a4 != 0
      :                          @68
  1041: 82 6b                    a4 = u64 [s1]
  1043: ab ab e5                 jump @66 if a4 != a3
      :                          @69
  1046: 7b 67                    u64 [s1] = a0
  1048: 33 0c                    a5 = 0
  1050: 7b 12 18                 u64 [sp + 0x18] = t0
  1053: 33 0a 10 00 03           a3 = 0x30010
  1058: 33 0b 00 00 01           a4 = 0x10000
  1063: 7b 1a                    u64 [sp] = a3
  1065: c8 ba 0a                 a3 = a3 + a4
  1068: c9 7a 07                 a0 = a3 - a0
  1071: 7b 17 10                 u64 [sp + 0x10] = a0
  1074: 7b 18 08                 u64 [sp + 0x8] = a1
  1077: 64 96                    s1 = a2
  1079: 50 10 18 bb 03           ra = 24, jump @156
      :                          @70 [@dyn 12]
  1084: 54 36 00 00 01 98 00     jump @87 if s1 <=u 65536
      :                          @71
  1091: 82 12 18                 t0 = u64 [sp + 0x18]
  1094: 82 18 10                 a1 = u64 [sp + 0x10]
  1097: 33 07                    a0 = 0
  1099: 7b 28 08                 u64 [t0 + 0x8] = a1
  1102: 28 b5 00                 jump @93
      :                          @72
  1105: 49 12 08                 u64 [t0 + 8] = 0
  1108: 33 07 01                 a0 = 0x1
  1111: 28 ac 00                 jump @93
      :                          @73
  1114: 33 09 10 00 03           a2 = 0x30010
  1119: 33 07 00 00 01           a0 = 0x10000
  1124: c8 79 09                 a2 = a2 + a0
  1127: 01                       fallthrough
      :                          @74
  1128: 82 9a                    a3 = u64 [a2]
  1130: c8 5a 08                 a1 = a3 + s0
  1133: ac a8 5f                 jump @86 if a1 <u a3
      :                          @75
  1136: 95 8b 01                 a4 = a1 + 0x1
  1139: 88 bc 01                 a5 = a4 <u 0x1
  1142: d8 b7 0b                 a4 = a0 <u a4
  1145: d4 cb 0b                 a4 = a4 | a5
  1148: 52 0b 50                 jump @86 if a4 != 0
      :                          @76
  1151: 82 9b                    a4 = u64 [a2]
  1153: ab ab e7                 jump @74 if a4 != a3
      :                          @77
  1156: 7b 98                    u64 [a2] = a1
  1158: 33 0c                    a5 = 0
  1160: 01                       fallthrough
      :                          @78
  1161: ab ab df                 jump @74 if a4 != a3
      :                          @79
  1164: 28 31                    jump @85
      :                          @80
  1166: 33 09 10 00 03           a2 = 0x30010
  1171: 33 07 00 00 01           a0 = 0x10000
  1176: c8 79 09                 a2 = a2 + a0
  1179: 01                       fallthrough
      :                          @81
  1180: 82 9a                    a3 = u64 [a2]
  1182: c8 5a 08                 a1 = a3 + s0
  1185: ac a8 2b                 jump @86 if a1 <u a3
      :                          @82
  1188: 95 8b 01                 a4 = a1 + 0x1
  1191: 88 bc 01                 a5 = a4 <u 0x1
  1194: d8 b7 0b                 a4 = a0 <u a4
  1197: d4 cb 0b                 a4 = a4 | a5
  1200: 52 0b 1c                 jump @86 if a4 != 0
      :                          @83
  1203: 82 9b                    a4 = u64 [a2]
  1205: ab ab e7                 jump @81 if a4 != a3
      :                          @84
  1208: 7b 98                    u64 [a2] = a1
  1210: 33 0c                    a5 = 0
  1212: 01                       fallthrough
      :                          @85
  1213: 33 07 10 00 04           a0 = 0x40010
  1218: c9 87 08                 a1 = a0 - a1
  1221: 33 07                    a0 = 0
  1223: 7b 28 08                 u64 [t0 + 0x8] = a1
  1226: 28 39                    jump @93
      :                          @86
  1228: 33 07 01                 a0 = 0x1
  1231: 7b 27 08                 u64 [t0 + 0x8] = a0
  1234: 28 31                    jump @93
      :                          @87
  1236: 64 6c                    a5 = s1
  1238: 82 17                    a0 = u64 [sp]
  1240: 95 77 00 00 01           a0 = a0 + 0x10000
  1245: 82 12 18                 t0 = u64 [sp + 0x18]
  1248: 82 16 08                 s1 = u64 [sp + 0x8]
  1251: 01                       fallthrough
      :                          @88
  1252: 82 78                    a1 = u64 [a0]
  1254: c9 87 09                 a2 = a0 - a1
  1257: ab 69 11                 jump @92 if a2 != s1
      :                          @89
  1260: c9 c8 09                 a2 = a1 - a5
  1263: 01                       fallthrough
      :                          @90
  1264: 82 7a                    a3 = u64 [a0]
  1266: ab 8a f2                 jump @88 if a3 != a1
      :                          @91
  1269: 7b 79                    u64 [a0] = a2
  1271: 33 0b                    a4 = 0
  1273: 01                       fallthrough
      :                          @92
  1274: 82 18 10                 a1 = u64 [sp + 0x10]
  1277: 33 07                    a0 = 0
  1279: 7b 28 08                 u64 [t0 + 0x8] = a1
  1282: 01                       fallthrough
      :                          @93
  1283: 7b 25 10                 u64 [t0 + 0x10] = s0
  1286: 7b 27                    u64 [t0] = a0
  1288: 82 10 30                 ra = u64 [sp + 0x30]
  1291: 82 15 28                 s0 = u64 [sp + 0x28]
  1294: 82 16 20                 s1 = u64 [sp + 0x20]
  1297: 95 11 38                 sp = sp + 0x38
  1300: 32 00                    ret
      :                          @94
  1302: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  1305: 7b 10 40                 u64 [sp + 0x40] = ra
  1308: 7b 15 38                 u64 [sp + 0x38] = s0
  1311: 7b 16 30                 u64 [sp + 0x30] = s1
  1314: 95 88 01                 a1 = a1 + 0x1
  1317: 51 08 53                 jump @102 if a1 == 0
      :                          @95
  1320: 64 75                    s0 = a0
  1322: 82 77                    a0 = u64 [a0]
  1324: 97 79 01                 a2 = a0 << 0x1
  1327: 33 0a 08                 a3 = 0x8
  1330: e4 a8 08                 a1 = maxu(a1, a3)
  1333: e4 89 06                 s1 = maxu(a2, a1)
  1336: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  1339: 98 88 3f                 a1 = a1 >> 0x3f
  1342: 51 07 12                 jump @97 if a0 == 0
      :                          @96
  1345: 82 59 08                 a2 = u64 [s0 + 0x8]
  1348: 7b 19 18                 u64 [sp + 0x18] = a2
  1351: 49 11 20 01              u64 [sp + 32] = 0x1
  1355: 7b 17 28                 u64 [sp + 0x28] = a0
  1358: 28 06                    jump @98
      :                          @97
  1360: 49 11 20                 u64 [sp + 32] = 0
  1363: 01                       fallthrough
      :                          @98
  1364: 64 17                    a0 = sp
  1366: 95 1a 18                 a3 = sp + 0x18
  1369: 64 69                    a2 = s1
  1371: 50 10 1a 6d fe           ra = 26, jump @62
      :                          @99 [@dyn 13]
  1376: 82 18                    a1 = u64 [sp]
  1378: 82 17 08                 a0 = u64 [sp + 0x8]
  1381: 51 08 14                 jump @103 if a1 == 0
      :                          @100
  1384: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  1394: aa 87 0d                 jump @104 if a0 == a1
      :                          @101
  1397: 52 07 18                 jump @105 if a0 != 0
      :                          @102
  1400: 00                       trap
      :                          @103
  1401: 7b 57 08                 u64 [s0 + 0x8] = a0
  1404: 7b 56                    u64 [s0] = s1
  1406: 01                       fallthrough
      :                          @104
  1407: 82 10 40                 ra = u64 [sp + 0x40]
  1410: 82 15 38                 s0 = u64 [sp + 0x38]
  1413: 82 16 30                 s1 = u64 [sp + 0x30]
  1416: 95 11 48                 sp = sp + 0x48
  1419: 32 00                    ret
      :                          @105
  1421: 00                       trap
      :                          @106
  1422: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1425: 7b 10 30                 u64 [sp + 0x30] = ra
  1428: 7b 15 28                 u64 [sp + 0x28] = s0
  1431: 7b 16 20                 u64 [sp + 0x20] = s1
  1434: 82 8a 08                 a3 = u64 [a1 + 0x8]
  1437: 64 75                    s0 = a0
  1439: 51 0a 35                 jump @111 if a3 == 0
      :                          @107
  1442: 82 89                    a2 = u64 [a1]
  1444: 33 07                    a0 = 0
  1446: 95 9b 08                 a4 = a2 + 0x8
  1449: 01                       fallthrough
      :                          @108
  1450: 82 bc                    a5 = u64 [a4]
  1452: c8 c7 07                 a0 = a0 + a5
  1455: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1458: 95 bb 10                 a4 = a4 + 0x10
  1461: 52 0a f5                 jump @108 if a3 != 0
      :                          @109
  1464: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1467: 51 0a 24                 jump @113 if a3 == 0
      :                          @110
  1470: 82 99 08                 a2 = u64 [a2 + 0x8]
  1473: 8e 99                    a2 = a2 >u 0
  1475: 88 7a 10                 a3 = a0 <u 0x10
  1478: 85 aa 01                 a3 = a3 ^ 0x1
  1481: d4 a9 09                 a2 = a2 | a3
  1484: 89 7a                    a3 = a0 <s 0
  1486: e0 a9 09                 a2 = a2 & ~a3
  1489: 52 09 0a                 jump @112 if a2 != 0
      :                          @111
  1492: 33 07                    a0 = 0
  1494: 33 09 01                 a2 = 0x1
  1497: 28 4a                    jump @121
      :                          @112
  1499: 97 77 01                 a0 = a0 << 0x1
  1502: 01                       fallthrough
      :                          @113
  1503: 51 07 40                 jump @120 if a0 == 0
      :                          @114
  1506: 57 07 73                 jump @126 if a0 <s 0
      :                          @115
  1509: 64 52                    t0 = s0
  1511: 33 0b 10 00 03           a4 = 0x30010
  1516: 33 09 00 00 01           a2 = 0x10000
  1521: c8 9b 0b                 a4 = a4 + a2
  1524: 01                       fallthrough
      :                          @116
  1525: 82 bc                    a5 = u64 [a4]
  1527: c8 7c 0a                 a3 = a5 + a0
  1530: ac ca 59                 jump @124 if a3 <u a5
      :                          @117
  1533: 95 a5 01                 s0 = a3 + 0x1
  1536: 88 56 01                 s1 = s0 <u 0x1
  1539: d8 59 05                 s0 = a2 <u s0
  1542: d4 65 05                 s0 = s0 | s1
  1545: 52 05 4a                 jump @124 if s0 != 0
      :                          @118
  1548: 82 b6                    s1 = u64 [a4]
  1550: ab c6 e7                 jump @116 if s1 != a5
      :                          @119
  1553: 7b ba                    u64 [a4] = a3
  1555: 33 09 10 00 04           a2 = 0x40010
  1560: c9 a9 09                 a2 = a2 - a3
  1563: 64 25                    s0 = t0
  1565: 28 06                    jump @121
      :                          @120
  1567: 33 09 01                 a2 = 0x1
  1570: 01                       fallthrough
      :                          @121
  1571: 7b 17                    u64 [sp] = a0
  1573: 7b 19 08                 u64 [sp + 0x8] = a2
  1576: 49 11 10                 u64 [sp + 16] = 0
  1579: 64 17                    a0 = sp
  1581: 50 10 1c 29 06           ra = 28, jump @240
      :                          @122 [@dyn 14]
  1586: 52 07 22                 jump @125 if a0 != 0
      :                          @123
  1589: 82 17 10                 a0 = u64 [sp + 0x10]
  1592: 82 18 08                 a1 = u64 [sp + 0x8]
  1595: 82 19                    a2 = u64 [sp]
  1597: 7b 57 10                 u64 [s0 + 0x10] = a0
  1600: 7b 58 08                 u64 [s0 + 0x8] = a1
  1603: 7b 59                    u64 [s0] = a2
  1605: 82 10 30                 ra = u64 [sp + 0x30]
  1608: 82 15 28                 s0 = u64 [sp + 0x28]
  1611: 82 16 20                 s1 = u64 [sp + 0x20]
  1614: 95 11 38                 sp = sp + 0x38
  1617: 32 00                    ret
      :                          @124
  1619: 00                       trap
      :                          @125
  1620: 00                       trap
      :                          @126
  1621: 00                       trap
      :                          @127 [@dyn 15]
  1622: 82 72                    t0 = u64 [a0]
  1624: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  1629: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  1634: ac 9a 28                 jump @133 if a3 <u a2
      :                          @128
  1637: 82 77 08                 a0 = u64 [a0 + 0x8]
  1640: 33 09 10 00 03           a2 = 0x30010
  1645: 95 99 00 00 01           a2 = a2 + 0x10000
  1650: 01                       fallthrough
      :                          @129
  1651: 82 9a                    a3 = u64 [a2]
  1653: c9 a9 0b                 a4 = a2 - a3
  1656: ab 7b 12                 jump @133 if a4 != a0
      :                          @130
  1659: c9 2a 0b                 a4 = a3 - t0
  1662: 01                       fallthrough
      :                          @131
  1663: 82 9c                    a5 = u64 [a2]
  1665: ab ac f2                 jump @129 if a5 != a3
      :                          @132
  1668: 7b 9b                    u64 [a2] = a4
  1670: 33 08                    a1 = 0
  1672: 32 00                    ret
      :                          @133
  1674: 32 00                    ret
      :                          @134 [@dyn 16]
  1676: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  1679: 7b 10 18                 u64 [sp + 0x18] = ra
  1682: 7b 15 10                 u64 [sp + 0x10] = s0
  1685: 7b 16 08                 u64 [sp + 0x8] = s1
  1688: 64 75                    s0 = a0
  1690: 82 7a 10                 a3 = u64 [a0 + 0x10]
  1693: 82 77                    a0 = u64 [a0]
  1695: c9 a7 07                 a0 = a0 - a3
  1698: 64 96                    s1 = a2
  1700: ac 97 2a                 jump @137 if a0 <u a2
      :                          @135
  1703: 7b 1a                    u64 [sp] = a3
  1705: 82 57 08                 a0 = u64 [s0 + 0x8]
  1708: c8 a7 07                 a0 = a0 + a3
  1711: 64 69                    a2 = s1
  1713: 50 10 22 41 01           ra = 34, jump @156
      :                          @136 [@dyn 17]
  1718: 82 17                    a0 = u64 [sp]
  1720: c8 76 06                 s1 = s1 + a0
  1723: 7b 56 10                 u64 [s0 + 0x10] = s1
  1726: 33 07                    a0 = 0
  1728: 82 10 18                 ra = u64 [sp + 0x18]
  1731: 82 15 10                 s0 = u64 [sp + 0x10]
  1734: 82 16 08                 s1 = u64 [sp + 0x8]
  1737: 95 11 20                 sp = sp + 0x20
  1740: 32 00                    ret
      :                          @137
  1742: 64 57                    a0 = s0
  1744: 7b 18                    u64 [sp] = a1
  1746: 64 a8                    a1 = a3
  1748: 64 69                    a2 = s1
  1750: 50 10 24 7b fc           ra = 36, jump @50
      :                          @138 [@dyn 18]
  1755: 82 18                    a1 = u64 [sp]
  1757: 82 5a 10                 a3 = u64 [s0 + 0x10]
  1760: 28 c7                    jump @135
      :                          @139 [@dyn 19]
  1762: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  1765: 7b 10 20                 u64 [sp + 0x20] = ra
  1768: 7b 15 18                 u64 [sp + 0x18] = s0
  1771: 7b 16 10                 u64 [sp + 0x10] = s1
  1774: 64 86                    s1 = a1
  1776: 83 88                    i32 a1 = a1 + 0
  1778: 33 09 80 00              a2 = 0x80
  1782: 64 7a                    a3 = a0
  1784: ae 98 2b                 jump @144 if a1 >=u a2
      :                          @140
  1787: 82 a8 10                 a1 = u64 [a3 + 0x10]
  1790: 82 a7                    a0 = u64 [a3]
  1792: ab 78 12                 jump @143 if a1 != a0
      :                          @141
  1795: 64 a7                    a0 = a3
  1797: 64 a5                    s0 = a3
  1799: 50 10 28 0f fe           ra = 40, jump @94
      :                          @142 [@dyn 20]
  1804: 64 5a                    a3 = s0
  1806: 82 58 10                 a1 = u64 [s0 + 0x10]
  1809: 01                       fallthrough
      :                          @143
  1810: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1813: c8 87 07                 a0 = a0 + a1
  1816: 78 76                    u8 [a0] = s1
  1818: 95 88 01                 a1 = a1 + 0x1
  1821: 7b a8 10                 u64 [a3 + 0x10] = a1
  1824: 28 ab 00                 jump @152
      :                          @144
  1827: 8b 67 0b                 i32 a0 = s1 >> 0xb
  1830: 48 11 0c                 u32 [sp + 12] = 0
  1833: 52 07 1c                 jump @146 if a0 != 0
      :                          @145
  1836: 98 67 06                 a0 = s1 >> 0x6
  1839: 86 77 c0 00              a0 = a0 | 0xc0
  1843: 78 17 0c                 u8 [sp + 0xc] = a0
  1846: 84 67 3f                 a0 = s1 & 0x3f
  1849: 86 77 80 00              a0 = a0 | 0x80
  1853: 78 17 0d                 u8 [sp + 0xd] = a0
  1856: 33 06 02                 s1 = 0x2
  1859: 28 63                    jump @149
      :                          @146
  1861: 8b 67 10                 i32 a0 = s1 >> 0x10
  1864: 52 07 29                 jump @148 if a0 != 0
      :                          @147
  1867: 98 67 0c                 a0 = s1 >> 0xc
  1870: 86 77 e0 00              a0 = a0 | 0xe0
  1874: 78 17 0c                 u8 [sp + 0xc] = a0
  1877: 97 67 34                 a0 = s1 << 0x34
  1880: 98 77 3a                 a0 = a0 >> 0x3a
  1883: 95 77 80 00              a0 = a0 + 0x80
  1887: 78 17 0d                 u8 [sp + 0xd] = a0
  1890: 84 67 3f                 a0 = s1 & 0x3f
  1893: 86 77 80 00              a0 = a0 | 0x80
  1897: 78 17 0e                 u8 [sp + 0xe] = a0
  1900: 33 06 03                 s1 = 0x3
  1903: 28 37                    jump @149
      :                          @148
  1905: 97 67 2b                 a0 = s1 << 0x2b
  1908: 98 77 3d                 a0 = a0 >> 0x3d
  1911: 95 77 f0 00              a0 = a0 + 0xf0
  1915: 78 17 0c                 u8 [sp + 0xc] = a0
  1918: 97 67 2e                 a0 = s1 << 0x2e
  1921: 98 77 3a                 a0 = a0 >> 0x3a
  1924: 95 77 80 00              a0 = a0 + 0x80
  1928: 78 17 0d                 u8 [sp + 0xd] = a0
  1931: 97 67 34                 a0 = s1 << 0x34
  1934: 98 77 3a                 a0 = a0 >> 0x3a
  1937: 95 77 80 00              a0 = a0 + 0x80
  1941: 78 17 0e                 u8 [sp + 0xe] = a0
  1944: 84 67 3f                 a0 = s1 & 0x3f
  1947: 86 77 80 00              a0 = a0 | 0x80
  1951: 78 17 0f                 u8 [sp + 0xf] = a0
  1954: 33 06 04                 s1 = 0x4
  1957: 01                       fallthrough
      :                          @149
  1958: 82 a5 10                 s0 = u64 [a3 + 0x10]
  1961: 82 a7                    a0 = u64 [a3]
  1963: c9 57 07                 a0 = a0 - s0
  1966: ac 67 2d                 jump @153 if a0 <u s1
      :                          @150
  1969: 7b 1a                    u64 [sp] = a3
  1971: 82 a7 08                 a0 = u64 [a3 + 0x8]
  1974: c8 57 07                 a0 = a0 + s0
  1977: 95 18 0c                 a1 = sp + 0xc
  1980: 64 69                    a2 = s1
  1982: 50 10 2a 34              ra = 42, jump @156
      :                          @151 [@dyn 21]
  1986: c8 56 06                 s1 = s1 + s0
  1989: 82 17                    a0 = u64 [sp]
  1991: 7b 76 10                 u64 [a0 + 0x10] = s1
  1994: 01                       fallthrough
      :                          @152
  1995: 33 07                    a0 = 0
  1997: 82 10 20                 ra = u64 [sp + 0x20]
  2000: 82 15 18                 s0 = u64 [sp + 0x18]
  2003: 82 16 10                 s1 = u64 [sp + 0x10]
  2006: 95 11 28                 sp = sp + 0x28
  2009: 32 00                    ret
      :                          @153
  2011: 64 a7                    a0 = a3
  2013: 64 58                    a1 = s0
  2015: 64 69                    a2 = s1
  2017: 64 a5                    s0 = a3
  2019: 50 10 2c 6e fb           ra = 44, jump @50
      :                          @154 [@dyn 22]
  2024: 64 5a                    a3 = s0
  2026: 82 55 10                 s0 = u64 [s0 + 0x10]
  2029: 28 c4                    jump @150
      :                          @155 [@dyn 23]
  2031: 28 67 04                 jump @240
      :                          @156
  2034: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  2037: 7b 10 18                 u64 [sp + 0x18] = ra
  2040: 7b 15 10                 u64 [sp + 0x10] = s0
  2043: 7b 16 08                 u64 [sp + 0x8] = s1
  2046: 53 19 10 64              jump @165 if a2 <u 16
      :                          @157
  2050: 8d 7a                    i32 a3 = -a0
  2052: 84 a2 07                 t0 = a3 & 0x7
  2055: c8 27 0b                 a4 = a0 + t0
  2058: 51 02 15                 jump @160 if t0 == 0
      :                          @158
  2061: 64 8c                    a5 = a1
  2063: 64 75                    s0 = a0
  2065: 01                       fallthrough
      :                          @159
  2066: 7c ca                    a3 = u8 [a5]
  2068: 78 5a                    u8 [s0] = a3
  2070: 95 55 01                 s0 = s0 + 0x1
  2073: 95 cc 01                 a5 = a5 + 0x1
  2076: ac b5 f6                 jump @159 if s0 <u a4
      :                          @160
  2079: c8 28 03                 t1 = a1 + t0
  2082: c9 29 02                 t0 = a2 - t0
  2085: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  2088: 84 38 07                 a1 = t1 & 0x7
  2091: c8 4b 0a                 a3 = a4 + t2
  2094: 51 08 3b                 jump @167 if a1 == 0
      :                          @161
  2097: 58 04 4b                 jump @170 if t2 <=s 0
      :                          @162
  2100: 97 38 03                 a1 = t1 << 0x3
  2103: 84 80 38                 ra = a1 & 0x38
  2106: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  2109: 82 c5                    s0 = u64 [a5]
  2111: 8d 88                    i32 a1 = -a1
  2113: 84 88 38                 a1 = a1 & 0x38
  2116: 95 cc 08                 a5 = a5 + 0x8
  2119: 01                       fallthrough
      :                          @163
  2120: 82 c6                    s1 = u64 [a5]
  2122: d0 05 05                 s0 = s0 >> ra
  2125: cf 86 09                 a2 = s1 << a1
  2128: d4 59 09                 a2 = a2 | s0
  2131: 7b b9                    u64 [a4] = a2
  2133: 95 bb 08                 a4 = a4 + 0x8
  2136: 95 cc 08                 a5 = a5 + 0x8
  2139: 64 65                    s0 = s1
  2141: ac ab eb                 jump @163 if a4 <u a3
      :                          @164
  2144: 28 1c                    jump @170
      :                          @165
  2146: 64 7a                    a3 = a0
  2148: 52 09 21                 jump @171 if a2 != 0
      :                          @166
  2151: 28 2f                    jump @173
      :                          @167
  2153: 58 04 13                 jump @170 if t2 <=s 0
      :                          @168
  2156: 64 38                    a1 = t1
  2158: 01                       fallthrough
      :                          @169
  2159: 82 89                    a2 = u64 [a1]
  2161: 7b b9                    u64 [a4] = a2
  2163: 95 bb 08                 a4 = a4 + 0x8
  2166: 95 88 08                 a1 = a1 + 0x8
  2169: ac ab f6                 jump @169 if a4 <u a3
      :                          @170
  2172: c8 43 08                 a1 = t1 + t2
  2175: 84 29 07                 a2 = t0 & 0x7
  2178: 51 09 14                 jump @173 if a2 == 0
      :                          @171
  2181: c8 a9 09                 a2 = a2 + a3
  2184: 01                       fallthrough
      :                          @172
  2185: 7c 8b                    a4 = u8 [a1]
  2187: 78 ab                    u8 [a3] = a4
  2189: 95 aa 01                 a3 = a3 + 0x1
  2192: 95 88 01                 a1 = a1 + 0x1
  2195: ac 9a f6                 jump @172 if a3 <u a2
      :                          @173
  2198: 82 10 18                 ra = u64 [sp + 0x18]
  2201: 82 15 10                 s0 = u64 [sp + 0x10]
  2204: 82 16 08                 s1 = u64 [sp + 0x8]
  2207: 95 11 20                 sp = sp + 0x20
  2210: 32 00                    ret
      :                          @174 [@dyn 24]
  2212: 82 77                    a0 = u64 [a0]
  2214: 01                       fallthrough
      :                          @175
  2215: 28                       jump @175
      :                          @176
  2216: 95 11 a0                 sp = sp + 0xffffffffffffffa0
  2219: 7b 10 58                 u64 [sp + 0x58] = ra
  2222: 7b 15 50                 u64 [sp + 0x50] = s0
  2225: 7b 16 48                 u64 [sp + 0x48] = s1
  2228: 7b 19 08                 u64 [sp + 0x8] = a2
  2231: 7b 18                    u64 [sp] = a1
  2233: 98 7a 04                 a3 = a0 >> 0x4
  2236: 33 09 27                 a2 = 0x27
  2239: 53 2a 71 02 81 00        jump @179 if a3 <u 625
      :                          @177
  2245: 33 09 27                 a2 = 0x27
  2248: 95 1b 46                 a4 = sp + 0x46
  2251: 3a 08 00 00 03           a1 = u64 [0x30000]
  2256: 7b 18 18                 u64 [sp + 0x18] = a1
  2259: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
  2265: 33 03 7b 14              t1 = 0x147b
  2269: 33 05 7a 00 01           s0 = 0x1007a
  2274: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  2280: 01                       fallthrough
      :                          @178
  2281: 64 74                    t2 = a0
  2283: 82 17 18                 a0 = u64 [sp + 0x18]
  2286: d6 74 07                 a0 = t2 mulhu a0
  2289: 98 77 0b                 a0 = a0 >> 0xb
  2292: 82 18 10                 a1 = u64 [sp + 0x10]
  2295: c0 87 02                 i32 t0 = a0 * a1
  2298: c8 42 0a                 a3 = t0 + t2
  2301: 97 a2 30                 t0 = a3 << 0x30
  2304: 98 28 32                 a1 = t0 >> 0x32
  2307: ca 38 08                 a1 = a1 * t1
  2310: 98 8c 11                 a5 = a1 >> 0x11
  2313: 98 88 10                 a1 = a1 >> 0x10
  2316: 84 88 fe 07              a1 = a1 & 0x7fe
  2320: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
  2323: c8 ca 0a                 a3 = a3 + a5
  2326: 97 aa 31                 a3 = a3 << 0x31
  2329: 98 aa 30                 a3 = a3 >> 0x30
  2332: c8 58 08                 a1 = a1 + s0
  2335: 7c 8c                    a5 = u8 [a1]
  2337: 7c 88 01                 a1 = u8 [a1 + 0x1]
  2340: c8 5a 0a                 a3 = a3 + s0
  2343: 7c a6 01                 s1 = u8 [a3 + 0x1]
  2346: 7c aa                    a3 = u8 [a3]
  2348: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
  2351: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
  2354: 78 b6 01                 u8 [a4 + 0x1] = s1
  2357: 78 ba                    u8 [a4] = a3
  2359: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
  2362: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  2365: ac 40 ac                 jump @178 if ra <u t2
      :                          @179
  2368: 54 17 63 3b              jump @181 if a0 <=u 99
      :                          @180
  2372: 97 78 30                 a1 = a0 << 0x30
  2375: 98 88 32                 a1 = a1 >> 0x32
  2378: 96 88 7b 14              a1 = a1 * 0x147b
  2382: 98 88 11                 a1 = a1 >> 0x11
  2385: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
  2388: c8 a7 07                 a0 = a0 + a3
  2391: 97 77 31                 a0 = a0 << 0x31
  2394: 98 77 30                 a0 = a0 >> 0x30
  2397: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2400: 33 0a 7a 00 01           a3 = 0x1007a
  2405: c8 a7 07                 a0 = a0 + a3
  2408: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  2411: 7c 77                    a0 = u8 [a0]
  2413: 95 1b 21                 a4 = sp + 0x21
  2416: c8 9b 0b                 a4 = a4 + a2
  2419: 78 ba 01                 u8 [a4 + 0x1] = a3
  2422: 78 b7                    u8 [a4] = a0
  2424: 64 87                    a0 = a1
  2426: 01                       fallthrough
      :                          @181
  2427: 55 17 0a 14              jump @183 if a0 >=u 10
      :                          @182
  2431: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  2434: 95 18 21                 a1 = sp + 0x21
  2437: c8 98 08                 a1 = a1 + a2
  2440: 83 77 30                 i32 a0 = a0 + 0x30
  2443: 78 87                    u8 [a1] = a0
  2445: 28 21                    jump @184
      :                          @183
  2447: 97 77 01                 a0 = a0 << 0x1
  2450: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
  2453: 33 08 7a 00 01           a1 = 0x1007a
  2458: c8 87 07                 a0 = a0 + a1
  2461: 7c 78 01                 a1 = u8 [a0 + 0x1]
  2464: 7c 77                    a0 = u8 [a0]
  2466: 95 1a 21                 a3 = sp + 0x21
  2469: c8 9a 0a                 a3 = a3 + a2
  2472: 78 a8 01                 u8 [a3 + 0x1] = a1
  2475: 78 a7                    u8 [a3] = a0
  2477: 01                       fallthrough
      :                          @184
  2478: 95 1b 21                 a4 = sp + 0x21
  2481: c8 9b 0b                 a4 = a4 + a2
  2484: 9a 9c 27                 a5 = 0x27 - a2
  2487: 33 09 78 00 01           a2 = 0x10078
  2492: 82 17 08                 a0 = u64 [sp + 0x8]
  2495: 82 18                    a1 = u64 [sp]
  2497: 33 0a                    a3 = 0
  2499: 50 10 32 12              ra = 50, jump @186
      :                          @185 [@dyn 25]
  2503: 82 10 58                 ra = u64 [sp + 0x58]
  2506: 82 15 50                 s0 = u64 [sp + 0x50]
  2509: 82 16 48                 s1 = u64 [sp + 0x48]
  2512: 95 11 60                 sp = sp + 0x60
  2515: 32 00                    ret
      :                          @186
  2517: 95 11 98                 sp = sp + 0xffffffffffffff98
  2520: 7b 10 60                 u64 [sp + 0x60] = ra
  2523: 7b 15 58                 u64 [sp + 0x58] = s0
  2526: 7b 16 50                 u64 [sp + 0x50] = s1
  2529: 7b 1b 18                 u64 [sp + 0x18] = a4
  2532: 51 08 4f                 jump @193 if a1 == 0
      :                          @187
  2535: 80 76 34                 s1 = u32 [a0 + 0x34]
  2538: 84 68 01                 a1 = s1 & 0x1
  2541: 33 0b 2b                 a4 = 0x2b
  2544: 33 05 00 00 11           s0 = 0x110000
  2549: db 8b 05                 s0 = a4 if a1 != 0
  2552: 7b 15 28                 u64 [sp + 0x28] = s0
  2555: c8 c8 02                 t0 = a1 + a5
  2558: 84 68 04                 a1 = s1 & 0x4
  2561: 51 08 42                 jump @194 if a1 == 0
      :                          @188
  2564: 7b 19 30                 u64 [sp + 0x30] = a2
  2567: 33 08                    a1 = 0
  2569: 51 0a 1a                 jump @191 if a3 == 0
      :                          @189
  2572: 64 a5                    s0 = a3
  2574: 01                       fallthrough
      :                          @190
  2575: 7d 9b                    a4 = i8 [a2]
  2577: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
  2580: 85 bb 01                 a4 = a4 ^ 0x1
  2583: c8 b8 08                 a1 = a1 + a4
  2586: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2589: 95 99 01                 a2 = a2 + 0x1
  2592: 52 05 ef                 jump @190 if s0 != 0
      :                          @191
  2595: c8 82 02                 t0 = t0 + a1
  2598: 7b 1a 38                 u64 [sp + 0x38] = a3
  2601: 82 78                    a1 = u64 [a0]
  2603: 7b 1c 20                 u64 [sp + 0x20] = a5
  2606: 52 08 23                 jump @195 if a1 != 0
      :                          @192
  2609: 28 41                    jump @200
      :                          @193
  2611: 81 76 34                 s1 = i32 [a0 + 0x34]
  2614: 95 c2 01                 t0 = a5 + 0x1
  2617: 49 11 28 2d              u64 [sp + 40] = 0x2d
  2621: 84 68 04                 a1 = s1 & 0x4
  2624: 52 08 c4                 jump @188 if a1 != 0
      :                          @194
  2627: 49 11 30                 u64 [sp + 48] = 0
  2630: 7b 1a 38                 u64 [sp + 0x38] = a3
  2633: 82 78                    a1 = u64 [a0]
  2635: 7b 1c 20                 u64 [sp + 0x20] = a5
  2638: 51 08 24                 jump @200 if a1 == 0
      :                          @195
  2641: 82 75 08                 s0 = u64 [a0 + 0x8]
  2644: ae 52 1e                 jump @200 if t0 >=u s0
      :                          @196
  2647: 84 66 08                 s1 = s1 & 0x8
  2650: 52 06 50                 jump @203 if s1 != 0
      :                          @197
  2653: 7c 79 38                 a2 = u8 [a0 + 0x38]
  2656: c9 25 0a                 a3 = s0 - t0
  2659: 5a 19 01 a1 00           jump @210 if a2 >s 1
      :                          @198
  2664: 52 09 ae 00              jump @212 if a2 != 0
      :                          @199
  2668: 7b 1a 10                 u64 [sp + 0x10] = a3
  2671: 28 ad 00                 jump @213
      :                          @200
  2674: 82 75 20                 s0 = u64 [a0 + 0x20]
  2677: 82 76 28                 s1 = u64 [a0 + 0x28]
  2680: 64 57                    a0 = s0
  2682: 64 68                    a1 = s1
  2684: 82 19 28                 a2 = u64 [sp + 0x28]
  2687: 82 1a 30                 a3 = u64 [sp + 0x30]
  2690: 82 1b 38                 a4 = u64 [sp + 0x38]
  2693: 50 10 34 6d 01           ra = 52, jump @233
      :                          @201 [@dyn 26]
  2698: 33 08 01                 a1 = 0x1
  2701: 52 07 bc 00              jump @218 if a0 != 0
      :                          @202
  2705: 82 6c 18                 a5 = u64 [s1 + 0x18]
  2708: 64 57                    a0 = s0
  2710: 82 18 18                 a1 = u64 [sp + 0x18]
  2713: 82 19 20                 a2 = u64 [sp + 0x20]
  2716: 82 10 60                 ra = u64 [sp + 0x60]
  2719: 82 15 58                 s0 = u64 [sp + 0x58]
  2722: 82 16 50                 s1 = u64 [sp + 0x50]
  2725: 95 11 68                 sp = sp + 0x68
  2728: 32 0c                    jump [a5]
      :                          @203
  2730: 7b 12 40                 u64 [sp + 0x40] = t0
  2733: 81 78 30                 a1 = i32 [a0 + 0x30]
  2736: 7b 18 08                 u64 [sp + 0x8] = a1
  2739: 7c 79 38                 a2 = u8 [a0 + 0x38]
  2742: 7b 19                    u64 [sp] = a2
  2744: 82 79 20                 a2 = u64 [a0 + 0x20]
  2747: 82 76 28                 s1 = u64 [a0 + 0x28]
  2750: 48 17 30 30              u32 [a0 + 48] = 0x30
  2754: 7b 17 10                 u64 [sp + 0x10] = a0
  2757: 46 17 38 01              u8 [a0 + 56] = 0x1
  2761: 7b 19 48                 u64 [sp + 0x48] = a2
  2764: 64 97                    a0 = a2
  2766: 64 68                    a1 = s1
  2768: 82 19 28                 a2 = u64 [sp + 0x28]
  2771: 82 1a 30                 a3 = u64 [sp + 0x30]
  2774: 82 1b 38                 a4 = u64 [sp + 0x38]
  2777: 50 10 36 19 01           ra = 54, jump @233
      :                          @204 [@dyn 27]
  2782: 52 07 67                 jump @217 if a0 != 0
      :                          @205
  2785: 82 17 40                 a0 = u64 [sp + 0x40]
  2788: c9 75 05                 s0 = s0 - a0
  2791: 95 55 01                 s0 = s0 + 0x1
  2794: 01                       fallthrough
      :                          @206
  2795: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2798: 51 05 c6 00              jump @228 if s0 == 0
      :                          @207
  2802: 82 69 20                 a2 = u64 [s1 + 0x20]
  2805: 33 08 30                 a1 = 0x30
  2808: 82 17 48                 a0 = u64 [sp + 0x48]
  2811: b4 90 01 38              ra = 56, jump [a2]
      :                          @208 [@dyn 28]
  2815: 51 07 ec                 jump @206 if a0 == 0
      :                          @209
  2818: 28 43                    jump @217
      :                          @210
  2820: 52 19 02 12              jump @212 if a2 != 2
      :                          @211
  2824: 98 a9 01                 a2 = a3 >> 0x1
  2827: 95 a8 01                 a1 = a3 + 0x1
  2830: 98 88 01                 a1 = a1 >> 0x1
  2833: 7b 18 10                 u64 [sp + 0x10] = a1
  2836: 28 08                    jump @213
      :                          @212
  2838: 64 a9                    a2 = a3
  2840: 49 11 10                 u64 [sp + 16] = 0
  2843: 01                       fallthrough
      :                          @213
  2844: 82 78 20                 a1 = u64 [a0 + 0x20]
  2847: 7b 18 48                 u64 [sp + 0x48] = a1
  2850: 82 76 28                 s1 = u64 [a0 + 0x28]
  2853: 81 77 30                 a0 = i32 [a0 + 0x30]
  2856: 7b 17 40                 u64 [sp + 0x40] = a0
  2859: 95 95 01                 s0 = a2 + 0x1
  2862: 01                       fallthrough
      :                          @214
  2863: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  2866: 51 05 27                 jump @219 if s0 == 0
      :                          @215
  2869: 82 69 20                 a2 = u64 [s1 + 0x20]
  2872: 82 17 48                 a0 = u64 [sp + 0x48]
  2875: 82 18 40                 a1 = u64 [sp + 0x40]
  2878: b4 90 01 3a              ra = 58, jump [a2]
      :                          @216 [@dyn 29]
  2882: 51 07 ed                 jump @214 if a0 == 0
      :                          @217
  2885: 33 08 01                 a1 = 0x1
  2888: 01                       fallthrough
      :                          @218
  2889: 64 87                    a0 = a1
  2891: 82 10 60                 ra = u64 [sp + 0x60]
  2894: 82 15 58                 s0 = u64 [sp + 0x58]
  2897: 82 16 50                 s1 = u64 [sp + 0x50]
  2900: 95 11 68                 sp = sp + 0x68
  2903: 32 00                    ret
      :                          @219
  2905: 82 15 48                 s0 = u64 [sp + 0x48]
  2908: 64 57                    a0 = s0
  2910: 64 68                    a1 = s1
  2912: 82 19 28                 a2 = u64 [sp + 0x28]
  2915: 82 1a 30                 a3 = u64 [sp + 0x30]
  2918: 82 1b 38                 a4 = u64 [sp + 0x38]
  2921: 50 10 3c 89 00           ra = 60, jump @233
      :                          @220 [@dyn 30]
  2926: 33 08 01                 a1 = 0x1
  2929: 52 07 d8                 jump @218 if a0 != 0
      :                          @221
  2932: 82 6a 18                 a3 = u64 [s1 + 0x18]
  2935: 64 57                    a0 = s0
  2937: 82 18 18                 a1 = u64 [sp + 0x18]
  2940: 82 19 20                 a2 = u64 [sp + 0x20]
  2943: b4 a0 01 3e              ra = 62, jump [a3]
      :                          @222 [@dyn 31]
  2947: 33 08 01                 a1 = 0x1
  2950: 52 07 c3                 jump @218 if a0 != 0
      :                          @223
  2953: 82 17 10                 a0 = u64 [sp + 0x10]
  2956: 9a 77                    a0 = -a0
  2958: 7b 17 38                 u64 [sp + 0x38] = a0
  2961: 33 05 ff                 s0 = 0xffffffffffffffff
  2964: 01                       fallthrough
      :                          @224
  2965: 82 17 38                 a0 = u64 [sp + 0x38]
  2968: c8 57 07                 a0 = a0 + s0
  2971: 51 17 ff 42              jump @231 if a0 == 4294967295
      :                          @225
  2975: 82 69 20                 a2 = u64 [s1 + 0x20]
  2978: 82 17 48                 a0 = u64 [sp + 0x48]
  2981: 82 18 40                 a1 = u64 [sp + 0x40]
  2984: b4 90 01 40              ra = 64, jump [a2]
      :                          @226 [@dyn 32]
  2988: 95 55 01                 s0 = s0 + 0x1
  2991: 51 07 e6                 jump @224 if a0 == 0
      :                          @227
  2994: 28 37                    jump @232
      :                          @228
  2996: 82 6a 18                 a3 = u64 [s1 + 0x18]
  2999: 82 17 48                 a0 = u64 [sp + 0x48]
  3002: 82 18 18                 a1 = u64 [sp + 0x18]
  3005: 82 19 20                 a2 = u64 [sp + 0x20]
  3008: b4 a0 01 42              ra = 66, jump [a3]
      :                          @229 [@dyn 33]
  3012: 33 08 01                 a1 = 0x1
  3015: 52 07 82                 jump @218 if a0 != 0
      :                          @230
  3018: 33 08                    a1 = 0
  3020: 82 17 10                 a0 = u64 [sp + 0x10]
  3023: 82 19 08                 a2 = u64 [sp + 0x8]
  3026: 7a 79 30                 u32 [a0 + 0x30] = a2
  3029: 82 19                    a2 = u64 [sp]
  3031: 78 79 38                 u8 [a0 + 0x38] = a2
  3034: 28 6f ff                 jump @218
      :                          @231
  3037: 82 15 10                 s0 = u64 [sp + 0x10]
  3040: 82 17 10                 a0 = u64 [sp + 0x10]
  3043: d8 75 08                 a1 = s0 <u a0
  3046: 28 63 ff                 jump @218
      :                          @232
  3049: 82 17 10                 a0 = u64 [sp + 0x10]
  3052: d8 75 08                 a1 = s0 <u a0
  3055: 28 5a ff                 jump @218
      :                          @233
  3058: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3061: 7b 10 20                 u64 [sp + 0x20] = ra
  3064: 7b 15 18                 u64 [sp + 0x18] = s0
  3067: 7b 16 10                 u64 [sp + 0x10] = s1
  3070: 83 9c                    i32 a5 = a2 + 0
  3072: 33 02 00 00 11           t0 = 0x110000
  3077: 64 a6                    s1 = a3
  3079: 64 85                    s0 = a1
  3081: 64 7a                    a3 = a0
  3083: aa 2c 20                 jump @236 if a5 == t0
      :                          @234
  3086: 82 5c 20                 a5 = u64 [s0 + 0x20]
  3089: 64 a7                    a0 = a3
  3091: 64 98                    a1 = a2
  3093: 7b 1b 08                 u64 [sp + 0x8] = a4
  3096: 7b 1a                    u64 [sp] = a3
  3098: b4 c0 01 44              ra = 68, jump [a5]
      :                          @235 [@dyn 34]
  3102: 82 1a                    a3 = u64 [sp]
  3104: 82 1b 08                 a4 = u64 [sp + 0x8]
  3107: 64 78                    a1 = a0
  3109: 33 07 01                 a0 = 0x1
  3112: 52 08 20                 jump @239 if a1 != 0
      :                          @236
  3115: 51 06 1a                 jump @238 if s1 == 0
      :                          @237
  3118: 82 5c 18                 a5 = u64 [s0 + 0x18]
  3121: 64 a7                    a0 = a3
  3123: 64 68                    a1 = s1
  3125: 64 b9                    a2 = a4
  3127: 82 10 20                 ra = u64 [sp + 0x20]
  3130: 82 15 18                 s0 = u64 [sp + 0x18]
  3133: 82 16 10                 s1 = u64 [sp + 0x10]
  3136: 95 11 28                 sp = sp + 0x28
  3139: 32 0c                    jump [a5]
      :                          @238
  3141: 33 07                    a0 = 0
  3143: 01                       fallthrough
      :                          @239
  3144: 82 10 20                 ra = u64 [sp + 0x20]
  3147: 82 15 18                 s0 = u64 [sp + 0x18]
  3150: 82 16 10                 s1 = u64 [sp + 0x10]
  3153: 95 11 28                 sp = sp + 0x28
  3156: 32 00                    ret
      :                          @240
  3158: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  3162: 7b 10 80 00              u64 [sp + 0x80] = ra
  3166: 7b 15 78                 u64 [sp + 0x78] = s0
  3169: 7b 16 70                 u64 [sp + 0x70] = s1
  3172: 49 11 60 20              u64 [sp + 96] = 0x20
  3176: 33 09 03                 a2 = 0x3
  3179: 78 19 68                 u8 [sp + 0x68] = a2
  3182: 49 11 30                 u64 [sp + 48] = 0
  3185: 49 11 40                 u64 [sp + 64] = 0
  3188: 82 86 20                 s1 = u64 [a1 + 0x20]
  3191: 7b 17 50                 u64 [sp + 0x50] = a0
  3194: 33 07 48 00 01           a0 = 0x10048
  3199: 7b 17 58                 u64 [sp + 0x58] = a0
  3202: 51 06 06 01              jump @262 if s1 == 0
      :                          @241
  3206: 82 87 28                 a0 = u64 [a1 + 0x28]
  3209: 51 07 73 01              jump @272 if a0 == 0
      :                          @242
  3213: 33 09                    a2 = 0
  3215: 82 85                    s0 = u64 [a1]
  3217: 7b 18 08                 u64 [sp + 0x8] = a1
  3220: 82 88 10                 a1 = u64 [a1 + 0x10]
  3223: 7b 18 18                 u64 [sp + 0x18] = a1
  3226: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  3229: 97 88 03                 a1 = a1 << 0x3
  3232: 98 88 03                 a1 = a1 >> 0x3
  3235: 95 88 01                 a1 = a1 + 0x1
  3238: 7b 18                    u64 [sp] = a1
  3240: 95 55 08                 s0 = s0 + 0x8
  3243: 96 78 38                 a1 = a0 * 0x38
  3246: 95 66 18                 s1 = s1 + 0x18
  3249: 33 07 30                 a0 = 0x30
  3252: 7b 17 10                 u64 [sp + 0x10] = a0
  3255: 01                       fallthrough
      :                          @243
  3256: 7b 18 20                 u64 [sp + 0x20] = a1
  3259: 7b 19 28                 u64 [sp + 0x28] = a2
  3262: 82 59                    a2 = u64 [s0]
  3264: 51 09 17                 jump @246 if a2 == 0
      :                          @244
  3267: 82 1a 58                 a3 = u64 [sp + 0x58]
  3270: 82 17 50                 a0 = u64 [sp + 0x50]
  3273: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  3276: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3279: b4 a0 01 46              ra = 70, jump [a3]
      :                          @245 [@dyn 35]
  3283: 52 07 4e 01              jump @275 if a0 != 0
      :                          @246
  3287: 81 67 10                 a0 = i32 [s1 + 0x10]
  3290: 7a 17 60                 u32 [sp + 0x60] = a0
  3293: 7c 67 18                 a0 = u8 [s1 + 0x18]
  3296: 78 17 68                 u8 [sp + 0x68] = a0
  3299: 81 67 14                 a0 = i32 [s1 + 0x14]
  3302: 7a 17 64                 u32 [sp + 0x64] = a0
  3305: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3308: 82 67                    a0 = u64 [s1]
  3310: 51 08 26                 jump @251 if a1 == 0
      :                          @247
  3313: 52 18 01 16              jump @249 if a1 != 1
      :                          @248
  3317: 97 77 04                 a0 = a0 << 0x4
  3320: 82 18 18                 a1 = u64 [sp + 0x18]
  3323: c8 87 07                 a0 = a0 + a1
  3326: 82 78 08                 a1 = u64 [a0 + 0x8]
  3329: 82 19 10                 a2 = u64 [sp + 0x10]
  3332: aa 98 07                 jump @250 if a1 == a2
      :                          @249
  3335: 33 08                    a1 = 0
  3337: 28 0f                    jump @252
      :                          @250
  3339: 82 77                    a0 = u64 [a0]
  3341: 82 77                    a0 = u64 [a0]
  3343: 33 08 01                 a1 = 0x1
  3346: 28 06                    jump @252
      :                          @251
  3348: 33 08 01                 a1 = 0x1
  3351: 01                       fallthrough
      :                          @252
  3352: 7b 18 30                 u64 [sp + 0x30] = a1
  3355: 7b 17 38                 u64 [sp + 0x38] = a0
  3358: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  3361: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  3364: 51 08 26                 jump @257 if a1 == 0
      :                          @253
  3367: 52 18 01 16              jump @255 if a1 != 1
      :                          @254
  3371: 97 77 04                 a0 = a0 << 0x4
  3374: 82 18 18                 a1 = u64 [sp + 0x18]
  3377: c8 87 07                 a0 = a0 + a1
  3380: 82 78 08                 a1 = u64 [a0 + 0x8]
  3383: 82 19 10                 a2 = u64 [sp + 0x10]
  3386: aa 98 07                 jump @256 if a1 == a2
      :                          @255
  3389: 33 08                    a1 = 0
  3391: 28 0f                    jump @258
      :                          @256
  3393: 82 77                    a0 = u64 [a0]
  3395: 82 77                    a0 = u64 [a0]
  3397: 33 08 01                 a1 = 0x1
  3400: 28 06                    jump @258
      :                          @257
  3402: 33 08 01                 a1 = 0x1
  3405: 01                       fallthrough
      :                          @258
  3406: 7b 18 40                 u64 [sp + 0x40] = a1
  3409: 7b 17 48                 u64 [sp + 0x48] = a0
  3412: 82 67 08                 a0 = u64 [s1 + 0x8]
  3415: 97 77 04                 a0 = a0 << 0x4
  3418: 82 18 18                 a1 = u64 [sp + 0x18]
  3421: c8 78 08                 a1 = a1 + a0
  3424: 82 87                    a0 = u64 [a1]
  3426: 82 89 08                 a2 = u64 [a1 + 0x8]
  3429: 95 18 30                 a1 = sp + 0x30
  3432: b4 90 01 48              ra = 72, jump [a2]
      :                          @259 [@dyn 36]
  3436: 52 07 b5 00              jump @275 if a0 != 0
      :                          @260
  3440: 95 55 10                 s0 = s0 + 0x10
  3443: 82 18 20                 a1 = u64 [sp + 0x20]
  3446: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  3449: 95 66 38                 s1 = s1 + 0x38
  3452: 82 19 28                 a2 = u64 [sp + 0x28]
  3455: 95 99 01                 a2 = a2 + 0x1
  3458: 52 08 36 ff              jump @243 if a1 != 0
      :                          @261
  3462: 28 69                    jump @270
      :                          @262
  3464: 82 87 18                 a0 = u64 [a1 + 0x18]
  3467: 51 07 71                 jump @272 if a0 == 0
      :                          @263
  3470: 82 85 10                 s0 = u64 [a1 + 0x10]
  3473: 33 0a                    a3 = 0
  3475: 97 79 04                 a2 = a0 << 0x4
  3478: c8 59 09                 a2 = a2 + s0
  3481: 7b 19 20                 u64 [sp + 0x20] = a2
  3484: 7b 18 08                 u64 [sp + 0x8] = a1
  3487: 82 86                    s1 = u64 [a1]
  3489: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  3492: 97 77 04                 a0 = a0 << 0x4
  3495: 98 77 04                 a0 = a0 >> 0x4
  3498: 95 77 01                 a0 = a0 + 0x1
  3501: 7b 17                    u64 [sp] = a0
  3503: 95 66 08                 s1 = s1 + 0x8
  3506: 01                       fallthrough
      :                          @264
  3507: 7b 1a 28                 u64 [sp + 0x28] = a3
  3510: 82 69                    a2 = u64 [s1]
  3512: 51 09 16                 jump @267 if a2 == 0
      :                          @265
  3515: 82 1a 58                 a3 = u64 [sp + 0x58]
  3518: 82 17 50                 a0 = u64 [sp + 0x50]
  3521: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  3524: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3527: b4 a0 01 4a              ra = 74, jump [a3]
      :                          @266 [@dyn 37]
  3531: 52 07 56                 jump @275 if a0 != 0
      :                          @267
  3534: 82 57                    a0 = u64 [s0]
  3536: 82 59 08                 a2 = u64 [s0 + 0x8]
  3539: 95 18 30                 a1 = sp + 0x30
  3542: b4 90 01 4c              ra = 76, jump [a2]
      :                          @268 [@dyn 38]
  3546: 52 07 47                 jump @275 if a0 != 0
      :                          @269
  3549: 95 66 10                 s1 = s1 + 0x10
  3552: 95 55 10                 s0 = s0 + 0x10
  3555: 82 1a 28                 a3 = u64 [sp + 0x28]
  3558: 95 aa 01                 a3 = a3 + 0x1
  3561: 82 17 20                 a0 = u64 [sp + 0x20]
  3564: ab 75 c7                 jump @264 if s0 != a0
      :                          @270
  3567: 82 18 08                 a1 = u64 [sp + 0x8]
  3570: 82 1a                    a3 = u64 [sp]
  3572: 82 87 08                 a0 = u64 [a1 + 0x8]
  3575: ac 7a 0d                 jump @273 if a3 <u a0
      :                          @271
  3578: 28 2c                    jump @276
      :                          @272
  3580: 33 0a                    a3 = 0
  3582: 82 87 08                 a0 = u64 [a1 + 0x8]
  3585: 54 07 25                 jump @276 if a0 <=u 0
      :                          @273
  3588: 82 87                    a0 = u64 [a1]
  3590: 97 a8 04                 a1 = a3 << 0x4
  3593: c8 87 09                 a2 = a0 + a1
  3596: 82 1a 58                 a3 = u64 [sp + 0x58]
  3599: 82 17 50                 a0 = u64 [sp + 0x50]
  3602: 82 98                    a1 = u64 [a2]
  3604: 82 99 08                 a2 = u64 [a2 + 0x8]
  3607: 82 aa 18                 a3 = u64 [a3 + 0x18]
  3610: b4 a0 01 4e              ra = 78, jump [a3]
      :                          @274 [@dyn 39]
  3614: 51 07 08                 jump @276 if a0 == 0
      :                          @275
  3617: 33 07 01                 a0 = 0x1
  3620: 28 05                    jump @277
      :                          @276
  3622: 33 07                    a0 = 0
  3624: 01                       fallthrough
      :                          @277
  3625: 82 10 80 00              ra = u64 [sp + 0x80]
  3629: 82 15 78                 s0 = u64 [sp + 0x78]
  3632: 82 16 70                 s1 = u64 [sp + 0x70]
  3635: 95 11 88 00              sp = sp + 0x88
  3639: 32 00                    ret
