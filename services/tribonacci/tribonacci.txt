// RO data = 736/736 bytes
// RW data = 16/65632 bytes
// Stack size = 65536 bytes
// RO data = [84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 108, 101, 110, 103, 116, 104, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 66, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 76, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 82, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 208, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 234, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 112, 97, 114, 115, 101, 95, 97, 99, 99, 117, 109, 117, 108, 97, 116, 101, 95, 97, 114, 103, 115, 32, 115, 116, 97, 114, 116, 95, 97, 100, 100, 114, 101, 115, 115, 61, 92, 2, 1, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 58, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 0, 160, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 177, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2348
// Code size = 7057 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 65 02 00 00           jump @39
      :                          @2
    10: 28 ca 05                 jump @131
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 6c 10                 jump @308
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 92 01 01           a1 = 0x10192
   170: 50 10 04 17 11           ra = 4, jump @318
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 bf 0f                 jump @308
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 92 01 01           a1 = 0x10192
   343: 50 10 08 6a 10           ra = 8, jump @318
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 50 01 01           a1 = 0x10150
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 92 00              a0 = 0x92
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e e4 16           ra = 14, jump @462
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 91 01 01           a1 = 0x10191
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   493: 7b 10 10                 u64 [sp + 0x10] = ra
   496: 7b 15 08                 u64 [sp + 0x8] = s0
   499: 7b 16                    u64 [sp] = s1
   501: 33 05 14 00 03           s0 = 0x30014
   506: 33 09 10                 a2 = 0x10
   509: 33 0a 05                 a3 = 0x5
   512: 33 0b 01                 a4 = 0x1
   515: 33 07 14 00 03           a0 = 0x30014
   520: 33 08                    a1 = 0
   522: 33 0c                    a5 = 0
   524: 0a 12                    ecalli 18 // 'fetch'
   526: 01                       fallthrough
      :                          @35
   527: 33 09 01                 a2 = 0x1
   530: 51 17 ff 23              jump @37 if a0 == 4294967295
      :                          @36
   534: 39 07 18 00 03           a0 = i32 [0x30018]
   539: 39 08 1c 00 03           a1 = i32 [0x3001c]
   544: 39 09 20 00 03           a2 = i32 [0x30020]
   549: 39 0b 14 00 03           a4 = i32 [0x30014]
   554: c8 78 0a                 a3 = a1 + a0
   557: be 9a 0a                 i32 a3 = a3 + a2
   560: 83 b9 01                 i32 a2 = a4 + 0x1
   563: 28 0a                    jump @38
      :                          @37
   565: 33 07                    a0 = 0
   567: 33 08                    a1 = 0
   569: 33 0a 01                 a3 = 0x1
   572: 01                       fallthrough
      :                          @38
   573: 3d 09 14 00 03           u32 [0x30014] = a2
   578: 3d 0a 18 00 03           u32 [0x30018] = a3
   583: 3d 07 1c 00 03           u32 [0x3001c] = a0
   588: 3d 08 20 00 03           u32 [0x30020] = a1
   593: 33 08 10                 a1 = 0x10
   596: 64 57                    a0 = s0
   598: 0a 13                    ecalli 19 // 'export'
   600: 33 08 10                 a1 = 0x10
   603: 64 57                    a0 = s0
   605: 82 10 10                 ra = u64 [sp + 0x10]
   608: 82 15 08                 s0 = u64 [sp + 0x8]
   611: 82 16                    s1 = u64 [sp]
   613: 95 11 18                 sp = sp + 0x18
   616: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   618: 95 11 60 ff              sp = sp + 0xffffffffffffff60
   622: 7b 10 98 00              u64 [sp + 0x98] = ra
   626: 7b 15 90 00              u64 [sp + 0x90] = s0
   630: 7b 16 88 00              u64 [sp + 0x88] = s1
   634: 7b 17 10                 u64 [sp + 0x10] = a0
   637: 7b 18 18                 u64 [sp + 0x18] = a1
   640: 51 08 8d 02              jump @108 if a1 == 0
      :                          @40
   644: 7b 17 08                 u64 [sp + 0x8] = a0
   647: 7b 18                    u64 [sp] = a1
   649: 95 17 10                 a0 = sp + 0x10
   652: 7b 17 68                 u64 [sp + 0x68] = a0
   655: 33 07 52                 a0 = 0x52
   658: 7b 17 70                 u64 [sp + 0x70] = a0
   661: 95 18 18                 a1 = sp + 0x18
   664: 7b 18 78                 u64 [sp + 0x78] = a1
   667: 7b 17 80 00              u64 [sp + 0x80] = a0
   671: 33 07 80 02 01           a0 = 0x10280
   676: 7b 17 38                 u64 [sp + 0x38] = a0
   679: 49 11 40 02              u64 [sp + 64] = 0x2
   683: 49 11 58                 u64 [sp + 88] = 0
   686: 95 18 68                 a1 = sp + 0x68
   689: 7b 18 48                 u64 [sp + 0x48] = a1
   692: 49 11 50 02              u64 [sp + 80] = 0x2
   696: 95 17 20                 a0 = sp + 0x20
   699: 95 18 38                 a1 = sp + 0x38
   702: 50 10 12 af 0a           ra = 18, jump @237
      :                          @41 [@dyn 9]
   707: 82 16 28                 s1 = u64 [sp + 0x28]
   710: 82 1b 30                 a4 = u64 [sp + 0x30]
   713: 82 15 20                 s0 = u64 [sp + 0x20]
   716: 33 07 02                 a0 = 0x2
   719: 33 08                    a1 = 0
   721: 33 09                    a2 = 0
   723: 64 6a                    a3 = s1
   725: 33 00 14                 ra = 0x14
   728: 0a 64                    ecalli 100 // 'log'
   730: 01                       fallthrough
      :                          @42 [@dyn 10]
   731: 95 58 ff ff fe           a1 = s0 + 0xfffffffffffeffff
   736: 53 38 00 00 ff 27        jump @48 if a1 <u 4294901760
      :                          @43
   742: 33 07 50 00 03           a0 = 0x30050
   747: 95 77 00 00 01           a0 = a0 + 0x10000
   752: 01                       fallthrough
      :                          @44
   753: 82 78                    a1 = u64 [a0]
   755: c9 87 09                 a2 = a0 - a1
   758: ab 69 11                 jump @48 if a2 != s1
      :                          @45
   761: c9 58 09                 a2 = a1 - s0
   764: 01                       fallthrough
      :                          @46
   765: 82 7a                    a3 = u64 [a0]
   767: ab 8a f2                 jump @44 if a3 != a1
      :                          @47
   770: 7b 79                    u64 [a0] = a2
   772: 33 0b                    a4 = 0
   774: 01                       fallthrough
      :                          @48
   775: 82 17 08                 a0 = u64 [sp + 0x8]
   778: 7d 78                    a1 = i8 [a0]
   780: 33 06 01                 s1 = 0x1
   783: 59 08 37                 jump @55 if a1 >=s 0
      :                          @49
   786: 84 89 ff 00              a2 = a1 & 0xff
   790: 33 06 02                 s1 = 0x2
   793: 53 29 c0 00 2d           jump @55 if a2 <u 192
      :                          @50
   798: 33 06 03                 s1 = 0x3
   801: 53 29 e0 00 25           jump @55 if a2 <u 224
      :                          @51
   806: 33 06 04                 s1 = 0x4
   809: 53 29 f0 00 1d           jump @55 if a2 <u 240
      :                          @52
   814: 33 06 05                 s1 = 0x5
   817: 53 29 f8 00 15           jump @55 if a2 <u 248
      :                          @53
   822: 33 06 06                 s1 = 0x6
   825: 53 29 fc 00 0d           jump @55 if a2 <u 252
      :                          @54
   830: 88 98 fe 00              a1 = a2 <u 0xfe
   834: 9a 86 08                 s1 = 0x8 - a1
   837: 01                       fallthrough
      :                          @55
   838: 82 15                    s0 = u64 [sp]
   840: ac 65 c5 01              jump @108 if s0 <u s1
      :                          @56
   844: 64 68                    a1 = s1
   846: 50 10 16 82 16           ra = 22, jump @479
      :                          @57 [@dyn 11]
   851: 82 17 08                 a0 = u64 [sp + 0x8]
   854: aa 65 b7 01              jump @108 if s0 == s1
      :                          @58
   858: c8 67 07                 a0 = a0 + s1
   861: 7d 78                    a1 = i8 [a0]
   863: c9 65 05                 s0 = s0 - s1
   866: 33 06 01                 s1 = 0x1
   869: 59 08 37                 jump @65 if a1 >=s 0
      :                          @59
   872: 84 89 ff 00              a2 = a1 & 0xff
   876: 33 06 02                 s1 = 0x2
   879: 53 29 c0 00 2d           jump @65 if a2 <u 192
      :                          @60
   884: 33 06 03                 s1 = 0x3
   887: 53 29 e0 00 25           jump @65 if a2 <u 224
      :                          @61
   892: 33 06 04                 s1 = 0x4
   895: 53 29 f0 00 1d           jump @65 if a2 <u 240
      :                          @62
   900: 33 06 05                 s1 = 0x5
   903: 53 29 f8 00 15           jump @65 if a2 <u 248
      :                          @63
   908: 33 06 06                 s1 = 0x6
   911: 53 29 fc 00 0d           jump @65 if a2 <u 252
      :                          @64
   916: 88 98 fe 00              a1 = a2 <u 0xfe
   920: 9a 86 08                 s1 = 0x8 - a1
   923: 01                       fallthrough
      :                          @65
   924: ac 65 71 01              jump @108 if s0 <u s1
      :                          @66
   928: 64 68                    a1 = s1
   930: 7b 17 08                 u64 [sp + 0x8] = a0
   933: 50 10 18 2b 16           ra = 24, jump @479
      :                          @67 [@dyn 12]
   938: 82 17 08                 a0 = u64 [sp + 0x8]
   941: c8 67 07                 a0 = a0 + s1
   944: c9 65 0a                 a3 = s0 - s1
   947: 7b 1a 08                 u64 [sp + 0x8] = a3
   950: ab 65 07                 jump @69 if s0 != s1
      :                          @68
   953: 33 06                    s1 = 0
   955: 28 42                    jump @77
      :                          @69
   957: 7d 78                    a1 = i8 [a0]
   959: 33 06 01                 s1 = 0x1
   962: 59 08 37                 jump @76 if a1 >=s 0
      :                          @70
   965: 84 89 ff 00              a2 = a1 & 0xff
   969: 33 06 02                 s1 = 0x2
   972: 53 29 c0 00 2d           jump @76 if a2 <u 192
      :                          @71
   977: 33 06 03                 s1 = 0x3
   980: 53 29 e0 00 25           jump @76 if a2 <u 224
      :                          @72
   985: 33 06 04                 s1 = 0x4
   988: 53 29 f0 00 1d           jump @76 if a2 <u 240
      :                          @73
   993: 33 06 05                 s1 = 0x5
   996: 53 29 f8 00 15           jump @76 if a2 <u 248
      :                          @74
  1001: 33 06 06                 s1 = 0x6
  1004: 53 29 fc 00 0d           jump @76 if a2 <u 252
      :                          @75
  1009: 88 98 fe 00              a1 = a2 <u 0xfe
  1013: 9a 86 08                 s1 = 0x8 - a1
  1016: 01                       fallthrough
      :                          @76
  1017: ac 6a 14 01              jump @108 if a3 <u s1
      :                          @77
  1021: 64 68                    a1 = s1
  1023: 64 75                    s0 = a0
  1025: 50 10 1a cf 15           ra = 26, jump @479
      :                          @78 [@dyn 13]
  1030: 51 07 07 01              jump @108 if a0 == 0
      :                          @79
  1034: 82 17 08                 a0 = u64 [sp + 0x8]
  1037: e4 67 07                 a0 = maxu(a0, s1)
  1040: c9 67 07                 a0 = a0 - s1
  1043: 53 17 60 fa 00           jump @108 if a0 <u 96
      :                          @80
  1048: c8 56 08                 a1 = s1 + s0
  1051: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
  1054: 95 87 60                 a0 = a1 + 0x60
  1057: 7b 17 08                 u64 [sp + 0x8] = a0
  1060: 51 06 4c                 jump @91 if s1 == 0
      :                          @81
  1063: 7d 78                    a1 = i8 [a0]
  1065: 33 05 01                 s0 = 0x1
  1068: 59 08 37                 jump @88 if a1 >=s 0
      :                          @82
  1071: 84 89 ff 00              a2 = a1 & 0xff
  1075: 33 05 02                 s0 = 0x2
  1078: 53 29 c0 00 2d           jump @88 if a2 <u 192
      :                          @83
  1083: 33 05 03                 s0 = 0x3
  1086: 53 29 e0 00 25           jump @88 if a2 <u 224
      :                          @84
  1091: 33 05 04                 s0 = 0x4
  1094: 53 29 f0 00 1d           jump @88 if a2 <u 240
      :                          @85
  1099: 33 05 05                 s0 = 0x5
  1102: 53 29 f8 00 15           jump @88 if a2 <u 248
      :                          @86
  1107: 33 05 06                 s0 = 0x6
  1110: 53 29 fc 00 0d           jump @88 if a2 <u 252
      :                          @87
  1115: 88 98 fe 00              a1 = a2 <u 0xfe
  1119: 9a 85 08                 s0 = 0x8 - a1
  1122: 01                       fallthrough
      :                          @88
  1123: ac 56 6d 01              jump @127 if s1 <u s0
      :                          @89
  1127: 64 58                    a1 = s0
  1129: 50 10 1c 67 15           ra = 28, jump @479
      :                          @90 [@dyn 14]
  1134: 28 07                    jump @92
      :                          @91
  1136: 33 05                    s0 = 0
  1138: 33 07                    a0 = 0
  1140: 01                       fallthrough
      :                          @92
  1141: e4 56 08                 a1 = maxu(s1, s0)
  1144: c9 58 08                 a1 = a1 - s0
  1147: e4 78 08                 a1 = maxu(a1, a0)
  1150: c9 78 08                 a1 = a1 - a0
  1153: 33 09 20                 a2 = 0x20
  1156: ac 98 89 00              jump @108 if a1 <u a2
      :                          @93
  1160: 82 19 08                 a2 = u64 [sp + 0x8]
  1163: c8 95 05                 s0 = s0 + a2
  1166: c8 57 07                 a0 = a0 + s0
  1169: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
  1172: 95 77 20                 a0 = a0 + 0x20
  1175: 7b 17 08                 u64 [sp + 0x8] = a0
  1178: 51 05 4c                 jump @104 if s0 == 0
      :                          @94
  1181: 7d 78                    a1 = i8 [a0]
  1183: 33 06 01                 s1 = 0x1
  1186: 59 08 37                 jump @101 if a1 >=s 0
      :                          @95
  1189: 84 89 ff 00              a2 = a1 & 0xff
  1193: 33 06 02                 s1 = 0x2
  1196: 53 29 c0 00 2d           jump @101 if a2 <u 192
      :                          @96
  1201: 33 06 03                 s1 = 0x3
  1204: 53 29 e0 00 25           jump @101 if a2 <u 224
      :                          @97
  1209: 33 06 04                 s1 = 0x4
  1212: 53 29 f0 00 1d           jump @101 if a2 <u 240
      :                          @98
  1217: 33 06 05                 s1 = 0x5
  1220: 53 29 f8 00 15           jump @101 if a2 <u 248
      :                          @99
  1225: 33 06 06                 s1 = 0x6
  1228: 53 29 fc 00 0d           jump @101 if a2 <u 252
      :                          @100
  1233: 88 98 fe 00              a1 = a2 <u 0xfe
  1237: 9a 86 08                 s1 = 0x8 - a1
  1240: 01                       fallthrough
      :                          @101
  1241: ac 65 f8 00              jump @128 if s0 <u s1
      :                          @102
  1245: 64 68                    a1 = s1
  1247: 50 10 1e f1 14           ra = 30, jump @479
      :                          @103 [@dyn 15]
  1252: 28 05                    jump @105
      :                          @104
  1254: 33 06                    s1 = 0
  1256: 01                       fallthrough
      :                          @105
  1257: ae 56 24                 jump @108 if s1 >=u s0
      :                          @106
  1260: 82 17 08                 a0 = u64 [sp + 0x8]
  1263: c8 67 07                 a0 = a0 + s1
  1266: 7c 78                    a1 = u8 [a0]
  1268: 51 08 35                 jump @110 if a1 == 0
      :                          @107
  1271: 46 11 38                 u8 [sp + 56] = 0
  1274: 95 17 38                 a0 = sp + 0x38
  1277: 33 08 01                 a1 = 0x1
  1280: 33 09                    a2 = 0
  1282: 33 0a                    a3 = 0
  1284: 0a 03                    ecalli 3 // 'write'
  1286: 33 08                    a1 = 0
  1288: 33 05                    s0 = 0
  1290: 28 af 00                 jump @125
      :                          @108
  1293: 33 08                    a1 = 0
  1295: 33 06 00 00 01           s1 = 0x10000
  1300: 01                       fallthrough
      :                          @109
  1301: 64 67                    a0 = s1
  1303: 82 10 98 00              ra = u64 [sp + 0x98]
  1307: 82 15 90 00              s0 = u64 [sp + 0x90]
  1311: 82 16 88 00              s1 = u64 [sp + 0x88]
  1315: 95 11 a0 00              sp = sp + 0xa0
  1319: 32 00                    ret
      :                          @110
  1321: e4 65 08                 a1 = maxu(s0, s1)
  1324: c9 68 08                 a1 = a1 - s1
  1327: 95 76 01                 s1 = a0 + 0x1
  1330: 33 07 01                 a0 = 0x1
  1333: e4 78 07                 a0 = maxu(a1, a0)
  1336: 33 09 02                 a2 = 0x2
  1339: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1342: ae 98 09                 jump @112 if a1 >=u a2
      :                          @111
  1345: 33 05                    s0 = 0
  1347: 33 07                    a0 = 0
  1349: 28 51                    jump @122
      :                          @112
  1351: 7d 67                    a0 = i8 [s1]
  1353: 33 05 01                 s0 = 0x1
  1356: 59 07 37                 jump @119 if a0 >=s 0
      :                          @113
  1359: 84 77 ff 00              a0 = a0 & 0xff
  1363: 33 05 02                 s0 = 0x2
  1366: 53 27 c0 00 2d           jump @119 if a0 <u 192
      :                          @114
  1371: 33 05 03                 s0 = 0x3
  1374: 53 27 e0 00 25           jump @119 if a0 <u 224
      :                          @115
  1379: 33 05 04                 s0 = 0x4
  1382: 53 27 f0 00 1d           jump @119 if a0 <u 240
      :                          @116
  1387: 33 05 05                 s0 = 0x5
  1390: 53 27 f8 00 15           jump @119 if a0 <u 248
      :                          @117
  1395: 33 05 06                 s0 = 0x6
  1398: 53 27 fc 00 0d           jump @119 if a0 <u 252
      :                          @118
  1403: 88 77 fe 00              a0 = a0 <u 0xfe
  1407: 9a 75 08                 s0 = 0x8 - a0
  1410: 01                       fallthrough
      :                          @119
  1411: 7b 1a 08                 u64 [sp + 0x8] = a3
  1414: ac 5a 4d                 jump @130 if a3 <u s0
      :                          @120
  1417: 64 67                    a0 = s1
  1419: 64 58                    a1 = s0
  1421: 50 10 20 43 14           ra = 32, jump @479
      :                          @121 [@dyn 16]
  1426: 82 1a 08                 a3 = u64 [sp + 0x8]
  1429: 01                       fallthrough
      :                          @122
  1430: c8 56 09                 a2 = s1 + s0
  1433: e4 5a 08                 a1 = maxu(a3, s0)
  1436: c9 58 08                 a1 = a1 - s0
  1439: e6 78 05                 s0 = minu(a1, a0)
  1442: 46 11 38                 u8 [sp + 56] = 0
  1445: 95 17 38                 a0 = sp + 0x38
  1448: 33 08 01                 a1 = 0x1
  1451: 64 96                    s1 = a2
  1453: 64 5a                    a3 = s0
  1455: 0a 03                    ecalli 3 // 'write'
  1457: 01                       fallthrough
      :                          @123
  1458: 55 15 21 20              jump @129 if s0 >=u 33
      :                          @124
  1462: 64 68                    a1 = s1
  1464: 01                       fallthrough
      :                          @125
  1465: 33 06 24 00 03           s1 = 0x30024
  1470: 33 07 24 00 03           a0 = 0x30024
  1475: 64 59                    a2 = s0
  1477: 50 10 22 1c 0a           ra = 34, jump @287
      :                          @126 [@dyn 17]
  1482: 33 08 20                 a1 = 0x20
  1485: 28 48 ff                 jump @109
      :                          @127
  1488: 00                       trap
      :                          @128
  1489: 00                       trap
      :                          @129
  1490: 00                       trap
      :                          @130
  1491: 00                       trap
      :                          @131 [export #2: 'on_transfer']
  1492: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1496: 7b 10 88 02              u64 [sp + 0x288] = ra
  1500: 7b 15 80 02              u64 [sp + 0x280] = s0
  1504: 7b 16 78 02              u64 [sp + 0x278] = s1
  1508: 64 8c                    a5 = a1
  1510: 64 79                    a2 = a0
  1512: 33 02                    t0 = 0
  1514: 95 7b 04                 a4 = a0 + 0x4
  1517: 33 07 02                 a0 = 0x2
  1520: 7b 17 28                 u64 [sp + 0x28] = a0
  1523: 33 07 06                 a0 = 0x6
  1526: 7b 17 58                 u64 [sp + 0x58] = a0
  1529: 33 07 0a                 a0 = 0xa
  1532: 7b 17 20                 u64 [sp + 0x20] = a0
  1535: 33 07 60 00 01           a0 = 0x10060
  1540: 7b 17 18                 u64 [sp + 0x18] = a0
  1543: 33 07 8a 00              a0 = 0x8a
  1547: 7b 17 10                 u64 [sp + 0x10] = a0
  1550: 33 07 c0 02 01           a0 = 0x102c0
  1555: 7b 17 08                 u64 [sp + 0x8] = a0
  1558: 33 07 50 00 03           a0 = 0x30050
  1563: 95 77 00 00 01           a0 = a0 + 0x10000
  1568: 7b 17 50                 u64 [sp + 0x50] = a0
  1571: 33 07 00 01 01           a0 = 0x10100
  1576: 7b 17                    u64 [sp] = a0
  1578: 95 97 08                 a0 = a2 + 0x8
  1581: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1584: 95 98 0c                 a1 = a2 + 0xc
  1587: 7b 18 60                 u64 [sp + 0x60] = a1
  1590: 33 08 08                 a1 = 0x8
  1593: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1598: 7b 16 48                 u64 [sp + 0x48] = s1
  1601: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1605: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1609: 7b 1c 40                 u64 [sp + 0x40] = a5
  1612: 7b 19 38                 u64 [sp + 0x38] = a2
  1615: 7b 1b 30                 u64 [sp + 0x30] = a4
  1618: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1622: ac 8c c0 04              jump @179 if a5 <u a1
      :                          @132
  1626: 51 09 d5 04              jump @180 if a2 == 0
      :                          @133
  1630: 51 0b d1 04              jump @180 if a4 == 0
      :                          @134
  1634: 7c 97                    a0 = u8 [a2]
  1636: 7b 17 78                 u64 [sp + 0x78] = a0
  1639: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1642: 7b 17 68                 u64 [sp + 0x68] = a0
  1645: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1648: 7b 17 70                 u64 [sp + 0x70] = a0
  1651: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1654: 7b 17 80 00              u64 [sp + 0x80] = a0
  1658: 7c b7                    a0 = u8 [a4]
  1660: 7b 17 98 00              u64 [sp + 0x98] = a0
  1664: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1667: 7b 17 88 00              u64 [sp + 0x88] = a0
  1671: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1674: 7b 17 90 00              u64 [sp + 0x90] = a0
  1678: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1681: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1685: 51 0a 53                 jump @144 if a3 == 0
      :                          @135
  1688: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1692: 7d 77                    a0 = i8 [a0]
  1694: 33 05 01                 s0 = 0x1
  1697: 59 07 4a                 jump @145 if a0 >=s 0
      :                          @136
  1700: 84 77 ff 00              a0 = a0 & 0xff
  1704: 33 05 02                 s0 = 0x2
  1707: 33 06 c0 00              s1 = 0xc0
  1711: ac 67 33                 jump @142 if a0 <u s1
      :                          @137
  1714: 33 05 03                 s0 = 0x3
  1717: 33 06 e0 00              s1 = 0xe0
  1721: ac 67 29                 jump @142 if a0 <u s1
      :                          @138
  1724: 33 05 04                 s0 = 0x4
  1727: 33 06 f0 00              s1 = 0xf0
  1731: ac 67 1f                 jump @142 if a0 <u s1
      :                          @139
  1734: 33 05 05                 s0 = 0x5
  1737: 33 06 f8 00              s1 = 0xf8
  1741: ac 67 15                 jump @142 if a0 <u s1
      :                          @140
  1744: 33 05 06                 s0 = 0x6
  1747: 33 06 fc 00              s1 = 0xfc
  1751: ac 67 0b                 jump @142 if a0 <u s1
      :                          @141
  1754: 88 77 fe 00              a0 = a0 <u 0xfe
  1758: 9a 75 08                 s0 = 0x8 - a0
  1761: 01                       fallthrough
      :                          @142
  1762: ae 5a 09                 jump @145 if a3 >=u s0
      :                          @143
  1765: 28 31 04                 jump @179
      :                          @144
  1768: 33 05                    s0 = 0
  1770: 01                       fallthrough
      :                          @145
  1771: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1775: 64 58                    a1 = s0
  1777: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1781: 50 10 24 db 12           ra = 36, jump @479
      :                          @146 [@dyn 18]
  1786: 33 03 98 00              t1 = 0x98
  1790: 33 02 04                 t0 = 0x4
  1793: 33 06 08                 s1 = 0x8
  1796: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1800: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1804: ae 7b 0a 04              jump @179 if a4 >=u a0
      :                          @147
  1808: 82 18 68                 a1 = u64 [sp + 0x68]
  1811: 97 88 08                 a1 = a1 << 0x8
  1814: 82 19 78                 a2 = u64 [sp + 0x78]
  1817: d4 98 08                 a1 = a1 | a2
  1820: 82 19 70                 a2 = u64 [sp + 0x70]
  1823: 97 99 10                 a2 = a2 << 0x10
  1826: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1830: 97 aa 18                 a3 = a3 << 0x18
  1833: d4 a9 09                 a2 = a2 | a3
  1836: d4 89 04                 t2 = a2 | a1
  1839: 82 18 88 00              a1 = u64 [sp + 0x88]
  1843: 97 88 08                 a1 = a1 << 0x8
  1846: 82 19 98 00              a2 = u64 [sp + 0x98]
  1850: d4 98 08                 a1 = a1 | a2
  1853: 82 19 90 00              a2 = u64 [sp + 0x90]
  1857: 97 99 10                 a2 = a2 << 0x10
  1860: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1864: 97 aa 18                 a3 = a3 << 0x18
  1867: d4 a9 09                 a2 = a2 | a3
  1870: d4 89 00                 ra = a2 | a1
  1873: e4 5c 08                 a1 = maxu(a5, s0)
  1876: c9 58 08                 a1 = a1 - s0
  1879: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1883: c8 59 09                 a2 = a2 + s0
  1886: 82 1a 60                 a3 = u64 [sp + 0x60]
  1889: c8 a5 05                 s0 = s0 + a3
  1892: 64 ba                    a3 = a4
  1894: 01                       fallthrough
      :                          @148
  1895: ac 68 af 03              jump @179 if a1 <u s1
      :                          @149
  1899: aa 25 c4 03              jump @180 if s0 == t0
      :                          @150
  1903: 51 05 c0 03              jump @180 if s0 == 0
      :                          @151
  1907: ac 38 a3 03              jump @179 if a1 <u t1
      :                          @152
  1911: 51 0a 17                 jump @155 if a3 == 0
      :                          @153
  1914: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1918: 95 55 98 00              s0 = s0 + 0x98
  1922: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1925: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1928: 52 07 df                 jump @148 if a0 != 0
      :                          @154
  1931: 28 8b 03                 jump @179
      :                          @155
  1934: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1937: 7c 98                    a1 = u8 [a2]
  1939: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1942: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1945: 8a 77 08                 i32 a0 = a0 << 0x8
  1948: d4 87 07                 a0 = a0 | a1
  1951: 8a a8 10                 i32 a1 = a3 << 0x10
  1954: 8a ba 18                 i32 a3 = a4 << 0x18
  1957: d4 a8 08                 a1 = a1 | a3
  1960: d4 87 07                 a0 = a0 | a1
  1963: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1967: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1970: 7c 58                    a1 = u8 [s0]
  1972: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1975: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1978: 8a 77 08                 i32 a0 = a0 << 0x8
  1981: d4 87 07                 a0 = a0 | a1
  1984: 8a a8 10                 i32 a1 = a3 << 0x10
  1987: 8a ba 18                 i32 a3 = a4 << 0x18
  1990: d4 a8 08                 a1 = a1 | a3
  1993: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1996: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1999: d4 87 07                 a0 = a0 | a1
  2002: 7b 17 98 00              u64 [sp + 0x98] = a0
  2006: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  2009: 97 aa 10                 a3 = a3 << 0x10
  2012: 97 bb 08                 a4 = a4 << 0x8
  2015: d4 ba 0a                 a3 = a3 | a4
  2018: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  2021: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  2024: d4 a7 07                 a0 = a0 | a3
  2027: 97 77 10                 a0 = a0 << 0x10
  2030: 97 88 08                 a1 = a1 << 0x8
  2033: d4 b8 08                 a1 = a1 | a4
  2036: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  2039: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  2042: d4 87 07                 a0 = a0 | a1
  2045: 97 77 10                 a0 = a0 << 0x10
  2048: 97 aa 08                 a3 = a3 << 0x8
  2051: d4 ba 0a                 a3 = a3 | a4
  2054: d4 a7 07                 a0 = a0 | a3
  2057: 7c 98 08                 a1 = u8 [a2 + 0x8]
  2060: 97 77 08                 a0 = a0 << 0x8
  2063: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  2067: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  2071: d4 87 07                 a0 = a0 | a1
  2074: 7b 17 90 00              u64 [sp + 0x90] = a0
  2078: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  2082: 97 aa 10                 a3 = a3 << 0x10
  2085: 97 bb 08                 a4 = a4 << 0x8
  2088: d4 ba 0a                 a3 = a3 | a4
  2091: d4 a7 07                 a0 = a0 | a3
  2094: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  2098: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  2102: 95 98 10                 a1 = a2 + 0x10
  2105: 97 77 10                 a0 = a0 << 0x10
  2108: 97 aa 08                 a3 = a3 << 0x8
  2111: d4 ba 0a                 a3 = a3 | a4
  2114: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  2118: d4 a7 07                 a0 = a0 | a3
  2121: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  2125: 97 77 10                 a0 = a0 << 0x10
  2128: 97 bb 08                 a4 = a4 << 0x8
  2131: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  2135: d4 ba 0a                 a3 = a3 | a4
  2138: d4 a7 07                 a0 = a0 | a3
  2141: 97 77 08                 a0 = a0 << 0x8
  2144: d4 97 07                 a0 = a0 | a2
  2147: 7b 17 88 00              u64 [sp + 0x88] = a0
  2151: 95 17 68 01              a0 = sp + 0x168
  2155: 33 09 80 00              a2 = 0x80
  2159: 64 45                    s0 = t2
  2161: 64 06                    s1 = ra
  2163: 50 10 26 6e 07           ra = 38, jump @287
      :                          @156 [@dyn 19]
  2168: 95 17 e0 00              a0 = sp + 0xe0
  2172: 95 18 68 01              a1 = sp + 0x168
  2176: 33 09 80 00              a2 = 0x80
  2180: 50 10 28 5d 07           ra = 40, jump @287
      :                          @157 [@dyn 20]
  2185: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  2189: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  2193: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2197: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  2201: 82 17 98 00              a0 = u64 [sp + 0x98]
  2205: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  2209: 82 17 90 00              a0 = u64 [sp + 0x90]
  2213: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2217: 82 17 88 00              a0 = u64 [sp + 0x88]
  2221: 7b 17 60 01              u64 [sp + 0x160] = a0
  2225: 95 17 c8 00              a0 = sp + 0xc8
  2229: 7b 17 68 01              u64 [sp + 0x168] = a0
  2233: 82 17 28                 a0 = u64 [sp + 0x28]
  2236: 7b 17 70 01              u64 [sp + 0x170] = a0
  2240: 95 18 cc 00              a1 = sp + 0xcc
  2244: 7b 18 78 01              u64 [sp + 0x178] = a1
  2248: 7b 17 80 01              u64 [sp + 0x180] = a0
  2252: 95 18 d0 00              a1 = sp + 0xd0
  2256: 7b 18 88 01              u64 [sp + 0x188] = a1
  2260: 7b 17 90 01              u64 [sp + 0x190] = a0
  2264: 95 18 d4 00              a1 = sp + 0xd4
  2268: 7b 18 98 01              u64 [sp + 0x198] = a1
  2272: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2276: 95 17 d8 00              a0 = sp + 0xd8
  2280: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2284: 82 17 58                 a0 = u64 [sp + 0x58]
  2287: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2291: 95 18 e0 00              a1 = sp + 0xe0
  2295: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2299: 82 18 20                 a1 = u64 [sp + 0x20]
  2302: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2306: 95 18 60 01              a1 = sp + 0x160
  2310: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2314: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2318: 82 17 18                 a0 = u64 [sp + 0x18]
  2321: 7b 17 28 02              u64 [sp + 0x228] = a0
  2325: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2330: 49 21 48 02              u64 [sp + 584] = 0
  2334: 95 17 68 01              a0 = sp + 0x168
  2338: 7b 17 38 02              u64 [sp + 0x238] = a0
  2342: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2347: 95 17 58 02              a0 = sp + 0x258
  2351: 95 18 28 02              a1 = sp + 0x228
  2355: 50 10 2a 3a 04           ra = 42, jump @237
      :                          @158 [@dyn 21]
  2360: 82 15 60 02              s0 = u64 [sp + 0x260]
  2364: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2368: 82 16 58 02              s1 = u64 [sp + 0x258]
  2372: 33 07 02                 a0 = 0x2
  2375: 33 08                    a1 = 0
  2377: 33 09                    a2 = 0
  2379: 64 5a                    a3 = s0
  2381: 33 00 2c                 ra = 0x2c
  2384: 0a 64                    ecalli 100 // 'log'
  2386: 01                       fallthrough
      :                          @159 [@dyn 22]
  2387: 82 17 48                 a0 = u64 [sp + 0x48]
  2390: c8 67 07                 a0 = a0 + s1
  2393: 82 1b 50                 a4 = u64 [sp + 0x50]
  2396: 53 37 00 00 ff 1a        jump @164 if a0 <u 4294901760
      :                          @160
  2402: 82 b7                    a0 = u64 [a4]
  2404: c9 7b 08                 a1 = a4 - a0
  2407: ab 58 0f                 jump @164 if a1 != s0
      :                          @161
  2410: c9 67 08                 a1 = a0 - s1
  2413: 01                       fallthrough
      :                          @162
  2414: 82 b9                    a2 = u64 [a4]
  2416: ab 79 f2                 jump @160 if a2 != a0
      :                          @163
  2419: 7b b8                    u64 [a4] = a1
  2421: 01                       fallthrough
      :                          @164
  2422: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2426: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2430: 95 17 ec 01              a0 = sp + 0x1ec
  2434: 33 08 04                 a1 = 0x4
  2437: 95 19 e0 00              a2 = sp + 0xe0
  2441: 33 0a 80 00              a3 = 0x80
  2445: 0a 03                    ecalli 3 // 'write'
  2447: 0a                       ecalli 0 // 'gas'
  2448: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2452: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2456: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2461: 7b 17 08 02              u64 [sp + 0x208] = a0
  2465: 95 17 07 02              a0 = sp + 0x207
  2469: 33 08 01                 a1 = 0x1
  2472: 95 19 08 02              a2 = sp + 0x208
  2476: 33 0a 08                 a3 = 0x8
  2479: 0a 03                    ecalli 3 // 'write'
  2481: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2486: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2491: 49 21 88 01              u64 [sp + 392] = 0
  2495: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2505: 7b 17 90 01              u64 [sp + 0x190] = a0
  2509: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2514: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2519: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2524: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2529: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2533: 95 17 07 02              a0 = sp + 0x207
  2537: 7b 17 58 02              u64 [sp + 0x258] = a0
  2541: 82 17 10                 a0 = u64 [sp + 0x10]
  2544: 7b 17 60 02              u64 [sp + 0x260] = a0
  2548: 95 17 f8 01              a0 = sp + 0x1f8
  2552: 7b 17 68 02              u64 [sp + 0x268] = a0
  2556: 82 17 58                 a0 = u64 [sp + 0x58]
  2559: 7b 17 70 02              u64 [sp + 0x270] = a0
  2563: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2568: 82 17 08                 a0 = u64 [sp + 0x8]
  2571: 7b 17 28 02              u64 [sp + 0x228] = a0
  2575: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2580: 95 17 68 01              a0 = sp + 0x168
  2584: 7b 17 48 02              u64 [sp + 0x248] = a0
  2588: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2593: 95 17 58 02              a0 = sp + 0x258
  2597: 7b 17 38 02              u64 [sp + 0x238] = a0
  2601: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2606: 95 17 10 02              a0 = sp + 0x210
  2610: 95 18 28 02              a1 = sp + 0x228
  2614: 50 10 2e 37 03           ra = 46, jump @237
      :                          @165 [@dyn 23]
  2619: 82 15 18 02              s0 = u64 [sp + 0x218]
  2623: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2627: 82 16 10 02              s1 = u64 [sp + 0x210]
  2631: 33 07 02                 a0 = 0x2
  2634: 33 08                    a1 = 0
  2636: 33 09                    a2 = 0
  2638: 64 5a                    a3 = s0
  2640: 33 00 30                 ra = 0x30
  2643: 0a 64                    ecalli 100 // 'log'
  2645: 01                       fallthrough
      :                          @166 [@dyn 24]
  2646: 82 1b 50                 a4 = u64 [sp + 0x50]
  2649: 82 17 48                 a0 = u64 [sp + 0x48]
  2652: c8 67 07                 a0 = a0 + s1
  2655: 53 37 00 00 ff 1a        jump @171 if a0 <u 4294901760
      :                          @167
  2661: 82 b7                    a0 = u64 [a4]
  2663: c9 7b 08                 a1 = a4 - a0
  2666: ab 58 0f                 jump @171 if a1 != s0
      :                          @168
  2669: c9 67 08                 a1 = a0 - s1
  2672: 01                       fallthrough
      :                          @169
  2673: 82 b9                    a2 = u64 [a4]
  2675: ab 79 f2                 jump @167 if a2 != a0
      :                          @170
  2678: 7b b8                    u64 [a4] = a1
  2680: 01                       fallthrough
      :                          @171
  2681: 95 17 f0 01              a0 = sp + 0x1f0
  2685: 7b 17 58 02              u64 [sp + 0x258] = a0
  2689: 82 17 58                 a0 = u64 [sp + 0x58]
  2692: 7b 17 60 02              u64 [sp + 0x260] = a0
  2696: 82 17                    a0 = u64 [sp]
  2698: 7b 17 68 01              u64 [sp + 0x168] = a0
  2702: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2707: 49 21 88 01              u64 [sp + 392] = 0
  2711: 95 17 58 02              a0 = sp + 0x258
  2715: 7b 17 78 01              u64 [sp + 0x178] = a0
  2719: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2724: 95 17 28 02              a0 = sp + 0x228
  2728: 95 18 68 01              a1 = sp + 0x168
  2732: 50 10 32 c1 02           ra = 50, jump @237
      :                          @172 [@dyn 25]
  2737: 82 15 30 02              s0 = u64 [sp + 0x230]
  2741: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2745: 82 16 28 02              s1 = u64 [sp + 0x228]
  2749: 33 07 02                 a0 = 0x2
  2752: 33 08                    a1 = 0
  2754: 33 09                    a2 = 0
  2756: 64 5a                    a3 = s0
  2758: 33 00 34                 ra = 0x34
  2761: 0a 64                    ecalli 100 // 'log'
  2763: 01                       fallthrough
      :                          @173 [@dyn 26]
  2764: 82 1b 50                 a4 = u64 [sp + 0x50]
  2767: 82 17 48                 a0 = u64 [sp + 0x48]
  2770: c8 67 07                 a0 = a0 + s1
  2773: 53 37 00 00 ff 1a        jump @178 if a0 <u 4294901760
      :                          @174
  2779: 82 b7                    a0 = u64 [a4]
  2781: c9 7b 08                 a1 = a4 - a0
  2784: ab 58 0f                 jump @178 if a1 != s0
      :                          @175
  2787: c9 67 08                 a1 = a0 - s1
  2790: 01                       fallthrough
      :                          @176
  2791: 82 b9                    a2 = u64 [a4]
  2793: ab 79 f2                 jump @174 if a2 != a0
      :                          @177
  2796: 7b b8                    u64 [a4] = a1
  2798: 01                       fallthrough
      :                          @178
  2799: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2803: 95 22 01                 t0 = t0 + 0x1
  2806: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2810: 95 77 98 00              a0 = a0 + 0x98
  2814: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2818: 82 1c 40                 a5 = u64 [sp + 0x40]
  2821: 82 19 38                 a2 = u64 [sp + 0x38]
  2824: 82 1b 30                 a4 = u64 [sp + 0x30]
  2827: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2831: 33 08 08                 a1 = 0x8
  2834: ae 8c 48 fb              jump @132 if a5 >=u a1
      :                          @179
  2838: 33 07 00 00 01           a0 = 0x10000
  2843: 33 08                    a1 = 0
  2845: 82 10 88 02              ra = u64 [sp + 0x288]
  2849: 82 15 80 02              s0 = u64 [sp + 0x280]
  2853: 82 16 78 02              s1 = u64 [sp + 0x278]
  2857: 95 11 90 02              sp = sp + 0x290
  2861: 32 00                    ret
      :                          @180
  2863: 00                       trap
      :                          @181
  2864: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2867: 7b 10 40                 u64 [sp + 0x40] = ra
  2870: 7b 15 38                 u64 [sp + 0x38] = s0
  2873: 7b 16 30                 u64 [sp + 0x30] = s1
  2876: c8 89 09                 a2 = a2 + a1
  2879: ac 89 52                 jump @189 if a2 <u a1
      :                          @182
  2882: 64 75                    s0 = a0
  2884: 82 77                    a0 = u64 [a0]
  2886: 97 78 01                 a1 = a0 << 0x1
  2889: 33 0a 08                 a3 = 0x8
  2892: e4 a9 09                 a2 = maxu(a2, a3)
  2895: e4 98 06                 s1 = maxu(a1, a2)
  2898: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2901: 98 88 3f                 a1 = a1 >> 0x3f
  2904: 51 07 12                 jump @184 if a0 == 0
      :                          @183
  2907: 82 59 08                 a2 = u64 [s0 + 0x8]
  2910: 7b 19 18                 u64 [sp + 0x18] = a2
  2913: 49 11 20 01              u64 [sp + 32] = 0x1
  2917: 7b 17 28                 u64 [sp + 0x28] = a0
  2920: 28 06                    jump @185
      :                          @184
  2922: 49 11 20                 u64 [sp + 32] = 0
  2925: 01                       fallthrough
      :                          @185
  2926: 64 17                    a0 = sp
  2928: 95 1a 18                 a3 = sp + 0x18
  2931: 64 69                    a2 = s1
  2933: 50 10 36 32              ra = 54, jump @193
      :                          @186 [@dyn 27]
  2937: 82 18                    a1 = u64 [sp]
  2939: 82 17 08                 a0 = u64 [sp + 0x8]
  2942: 51 08 14                 jump @190 if a1 == 0
      :                          @187
  2945: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2955: aa 87 0d                 jump @191 if a0 == a1
      :                          @188
  2958: 52 07 18                 jump @192 if a0 != 0
      :                          @189
  2961: 00                       trap
      :                          @190
  2962: 7b 57 08                 u64 [s0 + 0x8] = a0
  2965: 7b 56                    u64 [s0] = s1
  2967: 01                       fallthrough
      :                          @191
  2968: 82 10 40                 ra = u64 [sp + 0x40]
  2971: 82 15 38                 s0 = u64 [sp + 0x38]
  2974: 82 16 30                 s1 = u64 [sp + 0x30]
  2977: 95 11 48                 sp = sp + 0x48
  2980: 32 00                    ret
      :                          @192
  2982: 00                       trap
      :                          @193
  2983: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2986: 7b 10 30                 u64 [sp + 0x30] = ra
  2989: 7b 15 28                 u64 [sp + 0x28] = s0
  2992: 7b 16 20                 u64 [sp + 0x20] = s1
  2995: 64 95                    s0 = a2
  2997: 64 72                    t0 = a0
  2999: 51 08 79                 jump @203 if a1 == 0
      :                          @194
  3002: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3005: 51 07 7c                 jump @204 if a0 == 0
      :                          @195
  3008: 82 a9 10                 a2 = u64 [a3 + 0x10]
  3011: 51 09 aa 00              jump @211 if a2 == 0
      :                          @196
  3015: 82 a8                    a1 = u64 [a3]
  3017: 33 06 50 00 03           s1 = 0x30050
  3022: 33 03 00 00 01           t1 = 0x10000
  3027: c8 36 06                 s1 = s1 + t1
  3030: 01                       fallthrough
      :                          @197
  3031: 82 6a                    a3 = u64 [s1]
  3033: c8 5a 07                 a0 = a3 + s0
  3036: ac a7 cf 00              jump @217 if a0 <u a3
      :                          @198
  3040: 95 7b 01                 a4 = a0 + 0x1
  3043: 88 bc 01                 a5 = a4 <u 0x1
  3046: d8 b3 0b                 a4 = t1 <u a4
  3049: d4 cb 0b                 a4 = a4 | a5
  3052: 52 0b bf 00              jump @217 if a4 != 0
      :                          @199
  3056: 82 6b                    a4 = u64 [s1]
  3058: ab ab e5                 jump @197 if a4 != a3
      :                          @200
  3061: 7b 67                    u64 [s1] = a0
  3063: 33 0c                    a5 = 0
  3065: 7b 12 18                 u64 [sp + 0x18] = t0
  3068: 33 0a 50 00 03           a3 = 0x30050
  3073: 33 0b 00 00 01           a4 = 0x10000
  3078: 7b 1a                    u64 [sp] = a3
  3080: c8 ba 0a                 a3 = a3 + a4
  3083: c9 7a 07                 a0 = a3 - a0
  3086: 7b 17 10                 u64 [sp + 0x10] = a0
  3089: 7b 18 08                 u64 [sp + 0x8] = a1
  3092: 64 96                    s1 = a2
  3094: 50 10 38 cb 03           ra = 56, jump @287
      :                          @201 [@dyn 28]
  3099: 54 36 00 00 01 98 00     jump @218 if s1 <=u 65536
      :                          @202
  3106: 82 12 18                 t0 = u64 [sp + 0x18]
  3109: 82 18 10                 a1 = u64 [sp + 0x10]
  3112: 33 07                    a0 = 0
  3114: 7b 28 08                 u64 [t0 + 0x8] = a1
  3117: 28 b5 00                 jump @224
      :                          @203
  3120: 49 12 08                 u64 [t0 + 8] = 0
  3123: 33 07 01                 a0 = 0x1
  3126: 28 ac 00                 jump @224
      :                          @204
  3129: 33 09 50 00 03           a2 = 0x30050
  3134: 33 07 00 00 01           a0 = 0x10000
  3139: c8 79 09                 a2 = a2 + a0
  3142: 01                       fallthrough
      :                          @205
  3143: 82 9a                    a3 = u64 [a2]
  3145: c8 5a 08                 a1 = a3 + s0
  3148: ac a8 5f                 jump @217 if a1 <u a3
      :                          @206
  3151: 95 8b 01                 a4 = a1 + 0x1
  3154: 88 bc 01                 a5 = a4 <u 0x1
  3157: d8 b7 0b                 a4 = a0 <u a4
  3160: d4 cb 0b                 a4 = a4 | a5
  3163: 52 0b 50                 jump @217 if a4 != 0
      :                          @207
  3166: 82 9b                    a4 = u64 [a2]
  3168: ab ab e7                 jump @205 if a4 != a3
      :                          @208
  3171: 7b 98                    u64 [a2] = a1
  3173: 33 0c                    a5 = 0
  3175: 01                       fallthrough
      :                          @209
  3176: ab ab df                 jump @205 if a4 != a3
      :                          @210
  3179: 28 31                    jump @216
      :                          @211
  3181: 33 09 50 00 03           a2 = 0x30050
  3186: 33 07 00 00 01           a0 = 0x10000
  3191: c8 79 09                 a2 = a2 + a0
  3194: 01                       fallthrough
      :                          @212
  3195: 82 9a                    a3 = u64 [a2]
  3197: c8 5a 08                 a1 = a3 + s0
  3200: ac a8 2b                 jump @217 if a1 <u a3
      :                          @213
  3203: 95 8b 01                 a4 = a1 + 0x1
  3206: 88 bc 01                 a5 = a4 <u 0x1
  3209: d8 b7 0b                 a4 = a0 <u a4
  3212: d4 cb 0b                 a4 = a4 | a5
  3215: 52 0b 1c                 jump @217 if a4 != 0
      :                          @214
  3218: 82 9b                    a4 = u64 [a2]
  3220: ab ab e7                 jump @212 if a4 != a3
      :                          @215
  3223: 7b 98                    u64 [a2] = a1
  3225: 33 0c                    a5 = 0
  3227: 01                       fallthrough
      :                          @216
  3228: 33 07 50 00 04           a0 = 0x40050
  3233: c9 87 08                 a1 = a0 - a1
  3236: 33 07                    a0 = 0
  3238: 7b 28 08                 u64 [t0 + 0x8] = a1
  3241: 28 39                    jump @224
      :                          @217
  3243: 33 07 01                 a0 = 0x1
  3246: 7b 27 08                 u64 [t0 + 0x8] = a0
  3249: 28 31                    jump @224
      :                          @218
  3251: 64 6c                    a5 = s1
  3253: 82 17                    a0 = u64 [sp]
  3255: 95 77 00 00 01           a0 = a0 + 0x10000
  3260: 82 12 18                 t0 = u64 [sp + 0x18]
  3263: 82 16 08                 s1 = u64 [sp + 0x8]
  3266: 01                       fallthrough
      :                          @219
  3267: 82 78                    a1 = u64 [a0]
  3269: c9 87 09                 a2 = a0 - a1
  3272: ab 69 11                 jump @223 if a2 != s1
      :                          @220
  3275: c9 c8 09                 a2 = a1 - a5
  3278: 01                       fallthrough
      :                          @221
  3279: 82 7a                    a3 = u64 [a0]
  3281: ab 8a f2                 jump @219 if a3 != a1
      :                          @222
  3284: 7b 79                    u64 [a0] = a2
  3286: 33 0b                    a4 = 0
  3288: 01                       fallthrough
      :                          @223
  3289: 82 18 10                 a1 = u64 [sp + 0x10]
  3292: 33 07                    a0 = 0
  3294: 7b 28 08                 u64 [t0 + 0x8] = a1
  3297: 01                       fallthrough
      :                          @224
  3298: 7b 25 10                 u64 [t0 + 0x10] = s0
  3301: 7b 27                    u64 [t0] = a0
  3303: 82 10 30                 ra = u64 [sp + 0x30]
  3306: 82 15 28                 s0 = u64 [sp + 0x28]
  3309: 82 16 20                 s1 = u64 [sp + 0x20]
  3312: 95 11 38                 sp = sp + 0x38
  3315: 32 00                    ret
      :                          @225
  3317: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3320: 7b 10 40                 u64 [sp + 0x40] = ra
  3323: 7b 15 38                 u64 [sp + 0x38] = s0
  3326: 7b 16 30                 u64 [sp + 0x30] = s1
  3329: 95 88 01                 a1 = a1 + 0x1
  3332: 51 08 53                 jump @233 if a1 == 0
      :                          @226
  3335: 64 75                    s0 = a0
  3337: 82 77                    a0 = u64 [a0]
  3339: 97 79 01                 a2 = a0 << 0x1
  3342: 33 0a 08                 a3 = 0x8
  3345: e4 a8 08                 a1 = maxu(a1, a3)
  3348: e4 89 06                 s1 = maxu(a2, a1)
  3351: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3354: 98 88 3f                 a1 = a1 >> 0x3f
  3357: 51 07 12                 jump @228 if a0 == 0
      :                          @227
  3360: 82 59 08                 a2 = u64 [s0 + 0x8]
  3363: 7b 19 18                 u64 [sp + 0x18] = a2
  3366: 49 11 20 01              u64 [sp + 32] = 0x1
  3370: 7b 17 28                 u64 [sp + 0x28] = a0
  3373: 28 06                    jump @229
      :                          @228
  3375: 49 11 20                 u64 [sp + 32] = 0
  3378: 01                       fallthrough
      :                          @229
  3379: 64 17                    a0 = sp
  3381: 95 1a 18                 a3 = sp + 0x18
  3384: 64 69                    a2 = s1
  3386: 50 10 3a 6d fe           ra = 58, jump @193
      :                          @230 [@dyn 29]
  3391: 82 18                    a1 = u64 [sp]
  3393: 82 17 08                 a0 = u64 [sp + 0x8]
  3396: 51 08 14                 jump @234 if a1 == 0
      :                          @231
  3399: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3409: aa 87 0d                 jump @235 if a0 == a1
      :                          @232
  3412: 52 07 18                 jump @236 if a0 != 0
      :                          @233
  3415: 00                       trap
      :                          @234
  3416: 7b 57 08                 u64 [s0 + 0x8] = a0
  3419: 7b 56                    u64 [s0] = s1
  3421: 01                       fallthrough
      :                          @235
  3422: 82 10 40                 ra = u64 [sp + 0x40]
  3425: 82 15 38                 s0 = u64 [sp + 0x38]
  3428: 82 16 30                 s1 = u64 [sp + 0x30]
  3431: 95 11 48                 sp = sp + 0x48
  3434: 32 00                    ret
      :                          @236
  3436: 00                       trap
      :                          @237
  3437: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3440: 7b 10 30                 u64 [sp + 0x30] = ra
  3443: 7b 15 28                 u64 [sp + 0x28] = s0
  3446: 7b 16 20                 u64 [sp + 0x20] = s1
  3449: 64 89                    a2 = a1
  3451: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3454: 64 75                    s0 = a0
  3456: 51 0a 35                 jump @242 if a3 == 0
      :                          @238
  3459: 82 98                    a1 = u64 [a2]
  3461: 33 07                    a0 = 0
  3463: 95 8b 08                 a4 = a1 + 0x8
  3466: 01                       fallthrough
      :                          @239
  3467: 82 bc                    a5 = u64 [a4]
  3469: c8 c7 07                 a0 = a0 + a5
  3472: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3475: 95 bb 10                 a4 = a4 + 0x10
  3478: 52 0a f5                 jump @239 if a3 != 0
      :                          @240
  3481: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3484: 51 0a 24                 jump @244 if a3 == 0
      :                          @241
  3487: 82 88 08                 a1 = u64 [a1 + 0x8]
  3490: 8e 88                    a1 = a1 >u 0
  3492: 88 7a 10                 a3 = a0 <u 0x10
  3495: 85 aa 01                 a3 = a3 ^ 0x1
  3498: d4 a8 08                 a1 = a1 | a3
  3501: 89 7a                    a3 = a0 <s 0
  3503: e0 a8 08                 a1 = a1 & ~a3
  3506: 52 08 0a                 jump @243 if a1 != 0
      :                          @242
  3509: 33 07                    a0 = 0
  3511: 33 08 01                 a1 = 0x1
  3514: 28 4a                    jump @252
      :                          @243
  3516: 97 77 01                 a0 = a0 << 0x1
  3519: 01                       fallthrough
      :                          @244
  3520: 51 07 40                 jump @251 if a0 == 0
      :                          @245
  3523: 57 07 78                 jump @257 if a0 <s 0
      :                          @246
  3526: 64 52                    t0 = s0
  3528: 33 0b 50 00 03           a4 = 0x30050
  3533: 33 08 00 00 01           a1 = 0x10000
  3538: c8 8b 0b                 a4 = a4 + a1
  3541: 01                       fallthrough
      :                          @247
  3542: 82 bc                    a5 = u64 [a4]
  3544: c8 7c 0a                 a3 = a5 + a0
  3547: ac ca 5e                 jump @255 if a3 <u a5
      :                          @248
  3550: 95 a5 01                 s0 = a3 + 0x1
  3553: 88 56 01                 s1 = s0 <u 0x1
  3556: d8 58 05                 s0 = a1 <u s0
  3559: d4 65 05                 s0 = s0 | s1
  3562: 52 05 4f                 jump @255 if s0 != 0
      :                          @249
  3565: 82 b6                    s1 = u64 [a4]
  3567: ab c6 e7                 jump @247 if s1 != a5
      :                          @250
  3570: 7b ba                    u64 [a4] = a3
  3572: 33 08 50 00 04           a1 = 0x40050
  3577: c9 a8 08                 a1 = a1 - a3
  3580: 64 25                    s0 = t0
  3582: 28 06                    jump @252
      :                          @251
  3584: 33 08 01                 a1 = 0x1
  3587: 01                       fallthrough
      :                          @252
  3588: 7b 17                    u64 [sp] = a0
  3590: 7b 18 08                 u64 [sp + 0x8] = a1
  3593: 49 11 10                 u64 [sp + 16] = 0
  3596: 33 08 20 01 01           a1 = 0x10120
  3601: 64 17                    a0 = sp
  3603: 50 10 3c 1d 06           ra = 60, jump @370
      :                          @253 [@dyn 30]
  3608: 52 07 22                 jump @256 if a0 != 0
      :                          @254
  3611: 82 17 10                 a0 = u64 [sp + 0x10]
  3614: 82 18 08                 a1 = u64 [sp + 0x8]
  3617: 82 19                    a2 = u64 [sp]
  3619: 7b 57 10                 u64 [s0 + 0x10] = a0
  3622: 7b 58 08                 u64 [s0 + 0x8] = a1
  3625: 7b 59                    u64 [s0] = a2
  3627: 82 10 30                 ra = u64 [sp + 0x30]
  3630: 82 15 28                 s0 = u64 [sp + 0x28]
  3633: 82 16 20                 s1 = u64 [sp + 0x20]
  3636: 95 11 38                 sp = sp + 0x38
  3639: 32 00                    ret
      :                          @255
  3641: 00                       trap
      :                          @256
  3642: 00                       trap
      :                          @257
  3643: 00                       trap
      :                          @258 [@dyn 31]
  3644: 82 72                    t0 = u64 [a0]
  3646: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3651: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3656: ac 9a 28                 jump @264 if a3 <u a2
      :                          @259
  3659: 82 77 08                 a0 = u64 [a0 + 0x8]
  3662: 33 09 50 00 03           a2 = 0x30050
  3667: 95 99 00 00 01           a2 = a2 + 0x10000
  3672: 01                       fallthrough
      :                          @260
  3673: 82 9a                    a3 = u64 [a2]
  3675: c9 a9 0b                 a4 = a2 - a3
  3678: ab 7b 12                 jump @264 if a4 != a0
      :                          @261
  3681: c9 2a 0b                 a4 = a3 - t0
  3684: 01                       fallthrough
      :                          @262
  3685: 82 9c                    a5 = u64 [a2]
  3687: ab ac f2                 jump @260 if a5 != a3
      :                          @263
  3690: 7b 9b                    u64 [a2] = a4
  3692: 33 08                    a1 = 0
  3694: 32 00                    ret
      :                          @264
  3696: 32 00                    ret
      :                          @265 [@dyn 32]
  3698: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3701: 7b 10 18                 u64 [sp + 0x18] = ra
  3704: 7b 15 10                 u64 [sp + 0x10] = s0
  3707: 7b 16 08                 u64 [sp + 0x8] = s1
  3710: 64 75                    s0 = a0
  3712: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3715: 82 77                    a0 = u64 [a0]
  3717: c9 a7 07                 a0 = a0 - a3
  3720: 64 96                    s1 = a2
  3722: ac 97 2a                 jump @268 if a0 <u a2
      :                          @266
  3725: 7b 1a                    u64 [sp] = a3
  3727: 82 57 08                 a0 = u64 [s0 + 0x8]
  3730: c8 a7 07                 a0 = a0 + a3
  3733: 64 69                    a2 = s1
  3735: 50 10 42 4a 01           ra = 66, jump @287
      :                          @267 [@dyn 33]
  3740: 82 17                    a0 = u64 [sp]
  3742: c8 76 06                 s1 = s1 + a0
  3745: 7b 56 10                 u64 [s0 + 0x10] = s1
  3748: 33 07                    a0 = 0
  3750: 82 10 18                 ra = u64 [sp + 0x18]
  3753: 82 15 10                 s0 = u64 [sp + 0x10]
  3756: 82 16 08                 s1 = u64 [sp + 0x8]
  3759: 95 11 20                 sp = sp + 0x20
  3762: 32 00                    ret
      :                          @268
  3764: 64 57                    a0 = s0
  3766: 7b 18                    u64 [sp] = a1
  3768: 64 a8                    a1 = a3
  3770: 64 69                    a2 = s1
  3772: 50 10 44 74 fc           ra = 68, jump @181
      :                          @269 [@dyn 34]
  3777: 82 18                    a1 = u64 [sp]
  3779: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3782: 28 c7                    jump @266
      :                          @270 [@dyn 35]
  3784: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3787: 7b 10 20                 u64 [sp + 0x20] = ra
  3790: 7b 15 18                 u64 [sp + 0x18] = s0
  3793: 7b 16 10                 u64 [sp + 0x10] = s1
  3796: 64 86                    s1 = a1
  3798: 83 88                    i32 a1 = a1 + 0
  3800: 33 09 80 00              a2 = 0x80
  3804: 64 7a                    a3 = a0
  3806: ae 98 2b                 jump @275 if a1 >=u a2
      :                          @271
  3809: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3812: 82 a7                    a0 = u64 [a3]
  3814: ab 78 12                 jump @274 if a1 != a0
      :                          @272
  3817: 64 a7                    a0 = a3
  3819: 64 a5                    s0 = a3
  3821: 50 10 48 08 fe           ra = 72, jump @225
      :                          @273 [@dyn 36]
  3826: 64 5a                    a3 = s0
  3828: 82 58 10                 a1 = u64 [s0 + 0x10]
  3831: 01                       fallthrough
      :                          @274
  3832: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3835: c8 87 07                 a0 = a0 + a1
  3838: 78 76                    u8 [a0] = s1
  3840: 95 88 01                 a1 = a1 + 0x1
  3843: 7b a8 10                 u64 [a3 + 0x10] = a1
  3846: 28 ab 00                 jump @283
      :                          @275
  3849: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3852: 48 11 0c                 u32 [sp + 12] = 0
  3855: 52 07 1c                 jump @277 if a0 != 0
      :                          @276
  3858: 98 67 06                 a0 = s1 >> 0x6
  3861: 86 77 c0 00              a0 = a0 | 0xc0
  3865: 78 17 0c                 u8 [sp + 0xc] = a0
  3868: 84 67 3f                 a0 = s1 & 0x3f
  3871: 86 77 80 00              a0 = a0 | 0x80
  3875: 78 17 0d                 u8 [sp + 0xd] = a0
  3878: 33 06 02                 s1 = 0x2
  3881: 28 63                    jump @280
      :                          @277
  3883: 8b 67 10                 i32 a0 = s1 >> 0x10
  3886: 52 07 29                 jump @279 if a0 != 0
      :                          @278
  3889: 98 67 0c                 a0 = s1 >> 0xc
  3892: 86 77 e0 00              a0 = a0 | 0xe0
  3896: 78 17 0c                 u8 [sp + 0xc] = a0
  3899: 97 67 34                 a0 = s1 << 0x34
  3902: 98 77 3a                 a0 = a0 >> 0x3a
  3905: 95 77 80 00              a0 = a0 + 0x80
  3909: 78 17 0d                 u8 [sp + 0xd] = a0
  3912: 84 67 3f                 a0 = s1 & 0x3f
  3915: 86 77 80 00              a0 = a0 | 0x80
  3919: 78 17 0e                 u8 [sp + 0xe] = a0
  3922: 33 06 03                 s1 = 0x3
  3925: 28 37                    jump @280
      :                          @279
  3927: 97 67 2b                 a0 = s1 << 0x2b
  3930: 98 77 3d                 a0 = a0 >> 0x3d
  3933: 95 77 f0 00              a0 = a0 + 0xf0
  3937: 78 17 0c                 u8 [sp + 0xc] = a0
  3940: 97 67 2e                 a0 = s1 << 0x2e
  3943: 98 77 3a                 a0 = a0 >> 0x3a
  3946: 95 77 80 00              a0 = a0 + 0x80
  3950: 78 17 0d                 u8 [sp + 0xd] = a0
  3953: 97 67 34                 a0 = s1 << 0x34
  3956: 98 77 3a                 a0 = a0 >> 0x3a
  3959: 95 77 80 00              a0 = a0 + 0x80
  3963: 78 17 0e                 u8 [sp + 0xe] = a0
  3966: 84 67 3f                 a0 = s1 & 0x3f
  3969: 86 77 80 00              a0 = a0 | 0x80
  3973: 78 17 0f                 u8 [sp + 0xf] = a0
  3976: 33 06 04                 s1 = 0x4
  3979: 01                       fallthrough
      :                          @280
  3980: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3983: 82 a7                    a0 = u64 [a3]
  3985: c9 57 07                 a0 = a0 - s0
  3988: ac 67 2d                 jump @284 if a0 <u s1
      :                          @281
  3991: 7b 1a                    u64 [sp] = a3
  3993: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3996: c8 57 07                 a0 = a0 + s0
  3999: 95 18 0c                 a1 = sp + 0xc
  4002: 64 69                    a2 = s1
  4004: 50 10 4a 3d              ra = 74, jump @287
      :                          @282 [@dyn 37]
  4008: c8 56 06                 s1 = s1 + s0
  4011: 82 17                    a0 = u64 [sp]
  4013: 7b 76 10                 u64 [a0 + 0x10] = s1
  4016: 01                       fallthrough
      :                          @283
  4017: 33 07                    a0 = 0
  4019: 82 10 20                 ra = u64 [sp + 0x20]
  4022: 82 15 18                 s0 = u64 [sp + 0x18]
  4025: 82 16 10                 s1 = u64 [sp + 0x10]
  4028: 95 11 28                 sp = sp + 0x28
  4031: 32 00                    ret
      :                          @284
  4033: 64 a7                    a0 = a3
  4035: 64 58                    a1 = s0
  4037: 64 69                    a2 = s1
  4039: 64 a5                    s0 = a3
  4041: 50 10 4c 67 fb           ra = 76, jump @181
      :                          @285 [@dyn 38]
  4046: 64 5a                    a3 = s0
  4048: 82 55 10                 s0 = u64 [s0 + 0x10]
  4051: 28 c4                    jump @281
      :                          @286 [@dyn 39]
  4053: 64 8a                    a3 = a1
  4055: 33 08 20 01 01           a1 = 0x10120
  4060: 64 a9                    a2 = a3
  4062: 28 52 04                 jump @370
      :                          @287
  4065: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  4068: 7b 10 18                 u64 [sp + 0x18] = ra
  4071: 7b 15 10                 u64 [sp + 0x10] = s0
  4074: 7b 16 08                 u64 [sp + 0x8] = s1
  4077: 53 19 10 64              jump @296 if a2 <u 16
      :                          @288
  4081: 8d 7a                    i32 a3 = -a0
  4083: 84 a2 07                 t0 = a3 & 0x7
  4086: c8 27 0b                 a4 = a0 + t0
  4089: 51 02 15                 jump @291 if t0 == 0
      :                          @289
  4092: 64 8c                    a5 = a1
  4094: 64 75                    s0 = a0
  4096: 01                       fallthrough
      :                          @290
  4097: 7c ca                    a3 = u8 [a5]
  4099: 78 5a                    u8 [s0] = a3
  4101: 95 55 01                 s0 = s0 + 0x1
  4104: 95 cc 01                 a5 = a5 + 0x1
  4107: ac b5 f6                 jump @290 if s0 <u a4
      :                          @291
  4110: c8 28 03                 t1 = a1 + t0
  4113: c9 29 02                 t0 = a2 - t0
  4116: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  4119: 84 38 07                 a1 = t1 & 0x7
  4122: c8 4b 0a                 a3 = a4 + t2
  4125: 51 08 3b                 jump @298 if a1 == 0
      :                          @292
  4128: 58 04 4b                 jump @301 if t2 <=s 0
      :                          @293
  4131: 97 38 03                 a1 = t1 << 0x3
  4134: 84 80 38                 ra = a1 & 0x38
  4137: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4140: 82 c5                    s0 = u64 [a5]
  4142: 8d 88                    i32 a1 = -a1
  4144: 84 88 38                 a1 = a1 & 0x38
  4147: 95 cc 08                 a5 = a5 + 0x8
  4150: 01                       fallthrough
      :                          @294
  4151: 82 c6                    s1 = u64 [a5]
  4153: d0 05 05                 s0 = s0 >> ra
  4156: cf 86 09                 a2 = s1 << a1
  4159: d4 59 09                 a2 = a2 | s0
  4162: 7b b9                    u64 [a4] = a2
  4164: 95 bb 08                 a4 = a4 + 0x8
  4167: 95 cc 08                 a5 = a5 + 0x8
  4170: 64 65                    s0 = s1
  4172: ac ab eb                 jump @294 if a4 <u a3
      :                          @295
  4175: 28 1c                    jump @301
      :                          @296
  4177: 64 7a                    a3 = a0
  4179: 52 09 21                 jump @302 if a2 != 0
      :                          @297
  4182: 28 2f                    jump @304
      :                          @298
  4184: 58 04 13                 jump @301 if t2 <=s 0
      :                          @299
  4187: 64 38                    a1 = t1
  4189: 01                       fallthrough
      :                          @300
  4190: 82 89                    a2 = u64 [a1]
  4192: 7b b9                    u64 [a4] = a2
  4194: 95 bb 08                 a4 = a4 + 0x8
  4197: 95 88 08                 a1 = a1 + 0x8
  4200: ac ab f6                 jump @300 if a4 <u a3
      :                          @301
  4203: c8 43 08                 a1 = t1 + t2
  4206: 84 29 07                 a2 = t0 & 0x7
  4209: 51 09 14                 jump @304 if a2 == 0
      :                          @302
  4212: c8 a9 09                 a2 = a2 + a3
  4215: 01                       fallthrough
      :                          @303
  4216: 7c 8b                    a4 = u8 [a1]
  4218: 78 ab                    u8 [a3] = a4
  4220: 95 aa 01                 a3 = a3 + 0x1
  4223: 95 88 01                 a1 = a1 + 0x1
  4226: ac 9a f6                 jump @303 if a3 <u a2
      :                          @304
  4229: 82 10 18                 ra = u64 [sp + 0x18]
  4232: 82 15 10                 s0 = u64 [sp + 0x10]
  4235: 82 16 08                 s1 = u64 [sp + 0x8]
  4238: 95 11 20                 sp = sp + 0x20
  4241: 32 00                    ret
      :                          @305 [@dyn 40]
  4243: 82 77                    a0 = u64 [a0]
  4245: 01                       fallthrough
      :                          @306
  4246: 28                       jump @306
      :                          @307 [@dyn 41]
  4247: 82 77                    a0 = u64 [a0]
  4249: 01                       fallthrough
      :                          @308
  4250: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4253: 7b 10 50                 u64 [sp + 0x50] = ra
  4256: 7b 15 48                 u64 [sp + 0x48] = s0
  4259: 7b 16 40                 u64 [sp + 0x40] = s1
  4262: 7b 18                    u64 [sp] = a1
  4264: 98 79 04                 a2 = a0 >> 0x4
  4267: 33 08 27                 a1 = 0x27
  4270: 53 29 71 02 81 00        jump @311 if a2 <u 625
      :                          @309
  4276: 33 08 27                 a1 = 0x27
  4279: 95 1a 3e                 a3 = sp + 0x3e
  4282: 3a 09 00 00 03           a2 = u64 [0x30000]
  4287: 7b 19 10                 u64 [sp + 0x10] = a2
  4290: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4296: 33 04 7b 14              t2 = 0x147b
  4300: 33 0b 94 01 01           a4 = 0x10194
  4305: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4311: 01                       fallthrough
      :                          @310
  4312: 64 72                    t0 = a0
  4314: 82 17 10                 a0 = u64 [sp + 0x10]
  4317: d6 72 07                 a0 = t0 mulhu a0
  4320: 98 77 0b                 a0 = a0 >> 0xb
  4323: 82 19 08                 a2 = u64 [sp + 0x8]
  4326: c0 97 0c                 i32 a5 = a0 * a2
  4329: c8 2c 06                 s1 = a5 + t0
  4332: 97 6c 30                 a5 = s1 << 0x30
  4335: 98 cc 32                 a5 = a5 >> 0x32
  4338: ca 4c 0c                 a5 = a5 * t2
  4341: 98 c3 11                 t1 = a5 >> 0x11
  4344: 98 cc 10                 a5 = a5 >> 0x10
  4347: 84 cc fe 07              a5 = a5 & 0x7fe
  4351: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4354: c8 69 09                 a2 = a2 + s1
  4357: 97 99 31                 a2 = a2 << 0x31
  4360: 98 99 30                 a2 = a2 >> 0x30
  4363: c8 bc 0c                 a5 = a5 + a4
  4366: 7c c6                    s1 = u8 [a5]
  4368: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4371: c8 b9 09                 a2 = a2 + a4
  4374: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4377: 7c 99                    a2 = u8 [a2]
  4379: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4382: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4385: 78 a5 01                 u8 [a3 + 0x1] = s0
  4388: 78 a9                    u8 [a3] = a2
  4390: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4393: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4396: ac 20 ac                 jump @310 if ra <u t0
      :                          @311
  4399: 54 17 63 3b              jump @313 if a0 <=u 99
      :                          @312
  4403: 97 79 30                 a2 = a0 << 0x30
  4406: 98 99 32                 a2 = a2 >> 0x32
  4409: 96 99 7b 14              a2 = a2 * 0x147b
  4413: 98 99 11                 a2 = a2 >> 0x11
  4416: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4419: c8 a7 07                 a0 = a0 + a3
  4422: 97 77 31                 a0 = a0 << 0x31
  4425: 98 77 30                 a0 = a0 >> 0x30
  4428: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4431: 33 0a 94 01 01           a3 = 0x10194
  4436: c8 a7 07                 a0 = a0 + a3
  4439: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4442: 7c 77                    a0 = u8 [a0]
  4444: 95 1b 19                 a4 = sp + 0x19
  4447: c8 8b 0b                 a4 = a4 + a1
  4450: 78 ba 01                 u8 [a4 + 0x1] = a3
  4453: 78 b7                    u8 [a4] = a0
  4455: 64 97                    a0 = a2
  4457: 01                       fallthrough
      :                          @313
  4458: 55 17 0a 14              jump @315 if a0 >=u 10
      :                          @314
  4462: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4465: 95 19 19                 a2 = sp + 0x19
  4468: c8 89 09                 a2 = a2 + a1
  4471: 83 77 30                 i32 a0 = a0 + 0x30
  4474: 78 97                    u8 [a2] = a0
  4476: 28 21                    jump @316
      :                          @315
  4478: 97 77 01                 a0 = a0 << 0x1
  4481: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4484: 33 09 94 01 01           a2 = 0x10194
  4489: c8 97 07                 a0 = a0 + a2
  4492: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4495: 7c 77                    a0 = u8 [a0]
  4497: 95 1a 19                 a3 = sp + 0x19
  4500: c8 8a 0a                 a3 = a3 + a1
  4503: 78 a9 01                 u8 [a3 + 0x1] = a2
  4506: 78 a7                    u8 [a3] = a0
  4508: 01                       fallthrough
      :                          @316
  4509: 95 1a 19                 a3 = sp + 0x19
  4512: c8 8a 0a                 a3 = a3 + a1
  4515: 9a 8b 27                 a4 = 0x27 - a1
  4518: 33 08 50 01 01           a1 = 0x10150
  4523: 82 17                    a0 = u64 [sp]
  4525: 33 09                    a2 = 0
  4527: 50 10 54 12              ra = 84, jump @318
      :                          @317 [@dyn 42]
  4531: 82 10 50                 ra = u64 [sp + 0x50]
  4534: 82 15 48                 s0 = u64 [sp + 0x48]
  4537: 82 16 40                 s1 = u64 [sp + 0x40]
  4540: 95 11 58                 sp = sp + 0x58
  4543: 32 00                    ret
      :                          @318
  4545: 95 11 98                 sp = sp + 0xffffffffffffff98
  4548: 7b 10 60                 u64 [sp + 0x60] = ra
  4551: 7b 15 58                 u64 [sp + 0x58] = s0
  4554: 7b 16 50                 u64 [sp + 0x50] = s1
  4557: 80 73 34                 t1 = u32 [a0 + 0x34]
  4560: 7b 1a 20                 u64 [sp + 0x20] = a3
  4563: 64 9c                    a5 = a2
  4565: 84 36 01                 s1 = t1 & 0x1
  4568: 33 02 2b                 t0 = 0x2b
  4571: 33 09 00 00 11           a2 = 0x110000
  4576: 84 3a 04                 a3 = t1 & 0x4
  4579: 7b 1b 28                 u64 [sp + 0x28] = a4
  4582: c8 b6 04                 t2 = s1 + a4
  4585: 7b 1c 30                 u64 [sp + 0x30] = a5
  4588: 52 0a 10                 jump @321 if a3 != 0
      :                          @319
  4591: 49 11 38                 u64 [sp + 56] = 0
  4594: 82 78                    a1 = u64 [a0]
  4596: 94 69 2b                 a2 = 0x2b if s1 != 0
  4599: 52 08 35                 jump @325 if a1 != 0
      :                          @320
  4602: 28 56                    jump @330
      :                          @321
  4604: 7b 18 38                 u64 [sp + 0x38] = a1
  4607: 33 09                    a2 = 0
  4609: 51 0c 1b                 jump @324 if a5 == 0
      :                          @322
  4612: 82 1b 38                 a4 = u64 [sp + 0x38]
  4615: 01                       fallthrough
      :                          @323
  4616: 7d b5                    s0 = i8 [a4]
  4618: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4621: 85 5a 01                 a3 = s0 ^ 0x1
  4624: c8 a9 09                 a2 = a2 + a3
  4627: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4630: 95 bb 01                 a4 = a4 + 0x1
  4633: 52 0c ef                 jump @323 if a5 != 0
      :                          @324
  4636: c8 94 04                 t2 = t2 + a2
  4639: 33 09 00 00 11           a2 = 0x110000
  4644: 82 78                    a1 = u64 [a0]
  4646: db 62 09                 a2 = t0 if s1 != 0
  4649: 51 08 27                 jump @330 if a1 == 0
      :                          @325
  4652: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4655: ae a4 21                 jump @330 if t2 >=u a3
      :                          @326
  4658: 84 38 08                 a1 = t1 & 0x8
  4661: 52 08 50                 jump @333 if a1 != 0
      :                          @327
  4664: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4667: c9 4a 0a                 a3 = a3 - t2
  4670: 7b 19 18                 u64 [sp + 0x18] = a2
  4673: 5a 16 01 9d 00           jump @340 if s1 >s 1
      :                          @328
  4678: 52 06 aa 00              jump @342 if s1 != 0
      :                          @329
  4682: 7b 1a 10                 u64 [sp + 0x10] = a3
  4685: 28 a9 00                 jump @343
      :                          @330
  4688: 82 75 20                 s0 = u64 [a0 + 0x20]
  4691: 82 76 28                 s1 = u64 [a0 + 0x28]
  4694: 64 57                    a0 = s0
  4696: 64 68                    a1 = s1
  4698: 82 1a 38                 a3 = u64 [sp + 0x38]
  4701: 82 1b 30                 a4 = u64 [sp + 0x30]
  4704: 50 10 56 6c 01           ra = 86, jump @363
      :                          @331 [@dyn 43]
  4709: 33 08 01                 a1 = 0x1
  4712: 52 07 bb 00              jump @348 if a0 != 0
      :                          @332
  4716: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4719: 64 57                    a0 = s0
  4721: 82 18 20                 a1 = u64 [sp + 0x20]
  4724: 82 19 28                 a2 = u64 [sp + 0x28]
  4727: 82 10 60                 ra = u64 [sp + 0x60]
  4730: 82 15 58                 s0 = u64 [sp + 0x58]
  4733: 82 16 50                 s1 = u64 [sp + 0x50]
  4736: 95 11 68                 sp = sp + 0x68
  4739: 32 0c                    jump [a5]
      :                          @333
  4741: 7b 1a 40                 u64 [sp + 0x40] = a3
  4744: 64 45                    s0 = t2
  4746: 81 78 30                 a1 = i32 [a0 + 0x30]
  4749: 7b 18 10                 u64 [sp + 0x10] = a1
  4752: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4755: 7b 1a 08                 u64 [sp + 0x8] = a3
  4758: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4761: 82 78 28                 a1 = u64 [a0 + 0x28]
  4764: 48 17 30 30              u32 [a0 + 48] = 0x30
  4768: 7b 17                    u64 [sp] = a0
  4770: 46 17 38 01              u8 [a0 + 56] = 0x1
  4774: 7b 1a 48                 u64 [sp + 0x48] = a3
  4777: 64 a7                    a0 = a3
  4779: 64 86                    s1 = a1
  4781: 82 1a 38                 a3 = u64 [sp + 0x38]
  4784: 82 1b 30                 a4 = u64 [sp + 0x30]
  4787: 50 10 58 19 01           ra = 88, jump @363
      :                          @334 [@dyn 44]
  4792: 52 07 67                 jump @347 if a0 != 0
      :                          @335
  4795: 82 17 40                 a0 = u64 [sp + 0x40]
  4798: c9 57 05                 s0 = a0 - s0
  4801: 95 55 01                 s0 = s0 + 0x1
  4804: 01                       fallthrough
      :                          @336
  4805: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4808: 51 05 c6 00              jump @358 if s0 == 0
      :                          @337
  4812: 82 69 20                 a2 = u64 [s1 + 0x20]
  4815: 33 08 30                 a1 = 0x30
  4818: 82 17 48                 a0 = u64 [sp + 0x48]
  4821: b4 90 01 5a              ra = 90, jump [a2]
      :                          @338 [@dyn 45]
  4825: 51 07 ec                 jump @336 if a0 == 0
      :                          @339
  4828: 28 43                    jump @347
      :                          @340
  4830: 52 16 02 12              jump @342 if s1 != 2
      :                          @341
  4834: 98 a6 01                 s1 = a3 >> 0x1
  4837: 95 a8 01                 a1 = a3 + 0x1
  4840: 98 88 01                 a1 = a1 >> 0x1
  4843: 7b 18 10                 u64 [sp + 0x10] = a1
  4846: 28 08                    jump @343
      :                          @342
  4848: 64 a6                    s1 = a3
  4850: 49 11 10                 u64 [sp + 16] = 0
  4853: 01                       fallthrough
      :                          @343
  4854: 82 78 20                 a1 = u64 [a0 + 0x20]
  4857: 7b 18 48                 u64 [sp + 0x48] = a1
  4860: 82 75 28                 s0 = u64 [a0 + 0x28]
  4863: 81 77 30                 a0 = i32 [a0 + 0x30]
  4866: 7b 17 40                 u64 [sp + 0x40] = a0
  4869: 95 66 01                 s1 = s1 + 0x1
  4872: 01                       fallthrough
      :                          @344
  4873: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4876: 51 06 27                 jump @349 if s1 == 0
      :                          @345
  4879: 82 59 20                 a2 = u64 [s0 + 0x20]
  4882: 82 17 48                 a0 = u64 [sp + 0x48]
  4885: 82 18 40                 a1 = u64 [sp + 0x40]
  4888: b4 90 01 5c              ra = 92, jump [a2]
      :                          @346 [@dyn 46]
  4892: 51 07 ed                 jump @344 if a0 == 0
      :                          @347
  4895: 33 08 01                 a1 = 0x1
  4898: 01                       fallthrough
      :                          @348
  4899: 64 87                    a0 = a1
  4901: 82 10 60                 ra = u64 [sp + 0x60]
  4904: 82 15 58                 s0 = u64 [sp + 0x58]
  4907: 82 16 50                 s1 = u64 [sp + 0x50]
  4910: 95 11 68                 sp = sp + 0x68
  4913: 32 00                    ret
      :                          @349
  4915: 82 16 48                 s1 = u64 [sp + 0x48]
  4918: 64 67                    a0 = s1
  4920: 64 58                    a1 = s0
  4922: 82 19 18                 a2 = u64 [sp + 0x18]
  4925: 82 1a 38                 a3 = u64 [sp + 0x38]
  4928: 82 1b 30                 a4 = u64 [sp + 0x30]
  4931: 50 10 5e 89 00           ra = 94, jump @363
      :                          @350 [@dyn 47]
  4936: 33 08 01                 a1 = 0x1
  4939: 52 07 d8                 jump @348 if a0 != 0
      :                          @351
  4942: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4945: 64 67                    a0 = s1
  4947: 82 18 20                 a1 = u64 [sp + 0x20]
  4950: 82 19 28                 a2 = u64 [sp + 0x28]
  4953: b4 a0 01 60              ra = 96, jump [a3]
      :                          @352 [@dyn 48]
  4957: 33 08 01                 a1 = 0x1
  4960: 52 07 c3                 jump @348 if a0 != 0
      :                          @353
  4963: 82 17 10                 a0 = u64 [sp + 0x10]
  4966: 9a 77                    a0 = -a0
  4968: 7b 17 38                 u64 [sp + 0x38] = a0
  4971: 33 06 ff                 s1 = 0xffffffffffffffff
  4974: 01                       fallthrough
      :                          @354
  4975: 82 17 38                 a0 = u64 [sp + 0x38]
  4978: c8 67 07                 a0 = a0 + s1
  4981: 51 17 ff 42              jump @361 if a0 == 4294967295
      :                          @355
  4985: 82 59 20                 a2 = u64 [s0 + 0x20]
  4988: 82 17 48                 a0 = u64 [sp + 0x48]
  4991: 82 18 40                 a1 = u64 [sp + 0x40]
  4994: b4 90 01 62              ra = 98, jump [a2]
      :                          @356 [@dyn 49]
  4998: 95 66 01                 s1 = s1 + 0x1
  5001: 51 07 e6                 jump @354 if a0 == 0
      :                          @357
  5004: 28 37                    jump @362
      :                          @358
  5006: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5009: 82 17 48                 a0 = u64 [sp + 0x48]
  5012: 82 18 20                 a1 = u64 [sp + 0x20]
  5015: 82 19 28                 a2 = u64 [sp + 0x28]
  5018: b4 a0 01 64              ra = 100, jump [a3]
      :                          @359 [@dyn 50]
  5022: 33 08 01                 a1 = 0x1
  5025: 52 07 82                 jump @348 if a0 != 0
      :                          @360
  5028: 33 08                    a1 = 0
  5030: 82 16                    s1 = u64 [sp]
  5032: 82 17 10                 a0 = u64 [sp + 0x10]
  5035: 7a 67 30                 u32 [s1 + 0x30] = a0
  5038: 82 17 08                 a0 = u64 [sp + 0x8]
  5041: 78 67 38                 u8 [s1 + 0x38] = a0
  5044: 28 6f ff                 jump @348
      :                          @361
  5047: 82 16 10                 s1 = u64 [sp + 0x10]
  5050: 82 17 10                 a0 = u64 [sp + 0x10]
  5053: d8 76 08                 a1 = s1 <u a0
  5056: 28 63 ff                 jump @348
      :                          @362
  5059: 82 17 10                 a0 = u64 [sp + 0x10]
  5062: d8 76 08                 a1 = s1 <u a0
  5065: 28 5a ff                 jump @348
      :                          @363
  5068: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5071: 7b 10 20                 u64 [sp + 0x20] = ra
  5074: 7b 15 18                 u64 [sp + 0x18] = s0
  5077: 7b 16 10                 u64 [sp + 0x10] = s1
  5080: 83 9c                    i32 a5 = a2 + 0
  5082: 33 02 00 00 11           t0 = 0x110000
  5087: 64 a6                    s1 = a3
  5089: 64 85                    s0 = a1
  5091: 64 7a                    a3 = a0
  5093: aa 2c 20                 jump @366 if a5 == t0
      :                          @364
  5096: 82 5c 20                 a5 = u64 [s0 + 0x20]
  5099: 64 a7                    a0 = a3
  5101: 64 98                    a1 = a2
  5103: 7b 1b 08                 u64 [sp + 0x8] = a4
  5106: 7b 1a                    u64 [sp] = a3
  5108: b4 c0 01 66              ra = 102, jump [a5]
      :                          @365 [@dyn 51]
  5112: 82 1a                    a3 = u64 [sp]
  5114: 82 1b 08                 a4 = u64 [sp + 0x8]
  5117: 64 78                    a1 = a0
  5119: 33 07 01                 a0 = 0x1
  5122: 52 08 20                 jump @369 if a1 != 0
      :                          @366
  5125: 51 06 1a                 jump @368 if s1 == 0
      :                          @367
  5128: 82 5c 18                 a5 = u64 [s0 + 0x18]
  5131: 64 a7                    a0 = a3
  5133: 64 68                    a1 = s1
  5135: 64 b9                    a2 = a4
  5137: 82 10 20                 ra = u64 [sp + 0x20]
  5140: 82 15 18                 s0 = u64 [sp + 0x18]
  5143: 82 16 10                 s1 = u64 [sp + 0x10]
  5146: 95 11 28                 sp = sp + 0x28
  5149: 32 0c                    jump [a5]
      :                          @368
  5151: 33 07                    a0 = 0
  5153: 01                       fallthrough
      :                          @369
  5154: 82 10 20                 ra = u64 [sp + 0x20]
  5157: 82 15 18                 s0 = u64 [sp + 0x18]
  5160: 82 16 10                 s1 = u64 [sp + 0x10]
  5163: 95 11 28                 sp = sp + 0x28
  5166: 32 00                    ret
      :                          @370
  5168: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5172: 7b 10 80 00              u64 [sp + 0x80] = ra
  5176: 7b 15 78                 u64 [sp + 0x78] = s0
  5179: 7b 16 70                 u64 [sp + 0x70] = s1
  5182: 49 11 60 20              u64 [sp + 96] = 0x20
  5186: 33 0a 03                 a3 = 0x3
  5189: 78 1a 68                 u8 [sp + 0x68] = a3
  5192: 82 96 20                 s1 = u64 [a2 + 0x20]
  5195: 49 11 30                 u64 [sp + 48] = 0
  5198: 49 11 40                 u64 [sp + 64] = 0
  5201: 7b 17 50                 u64 [sp + 0x50] = a0
  5204: 7b 18 58                 u64 [sp + 0x58] = a1
  5207: 51 06 07 01              jump @392 if s1 == 0
      :                          @371
  5211: 82 97 28                 a0 = u64 [a2 + 0x28]
  5214: 51 07 74 01              jump @402 if a0 == 0
      :                          @372
  5218: 49 11 28                 u64 [sp + 40] = 0
  5221: 82 95                    s0 = u64 [a2]
  5223: 7b 19 08                 u64 [sp + 0x8] = a2
  5226: 82 98 10                 a1 = u64 [a2 + 0x10]
  5229: 7b 18 18                 u64 [sp + 0x18] = a1
  5232: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5235: 97 88 03                 a1 = a1 << 0x3
  5238: 98 88 03                 a1 = a1 >> 0x3
  5241: 95 88 01                 a1 = a1 + 0x1
  5244: 7b 18                    u64 [sp] = a1
  5246: 95 55 08                 s0 = s0 + 0x8
  5249: 96 78 38                 a1 = a0 * 0x38
  5252: 95 66 18                 s1 = s1 + 0x18
  5255: 33 07 50                 a0 = 0x50
  5258: 7b 17 10                 u64 [sp + 0x10] = a0
  5261: 01                       fallthrough
      :                          @373
  5262: 7b 18 20                 u64 [sp + 0x20] = a1
  5265: 82 59                    a2 = u64 [s0]
  5267: 51 09 17                 jump @376 if a2 == 0
      :                          @374
  5270: 82 1a 58                 a3 = u64 [sp + 0x58]
  5273: 82 17 50                 a0 = u64 [sp + 0x50]
  5276: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5279: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5282: b4 a0 01 68              ra = 104, jump [a3]
      :                          @375 [@dyn 52]
  5286: 52 07 51 01              jump @405 if a0 != 0
      :                          @376
  5290: 81 67 10                 a0 = i32 [s1 + 0x10]
  5293: 7a 17 60                 u32 [sp + 0x60] = a0
  5296: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5299: 78 17 68                 u8 [sp + 0x68] = a0
  5302: 81 67 14                 a0 = i32 [s1 + 0x14]
  5305: 7a 17 64                 u32 [sp + 0x64] = a0
  5308: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5311: 82 67                    a0 = u64 [s1]
  5313: 51 08 26                 jump @381 if a1 == 0
      :                          @377
  5316: 52 18 01 16              jump @379 if a1 != 1
      :                          @378
  5320: 97 77 04                 a0 = a0 << 0x4
  5323: 82 18 18                 a1 = u64 [sp + 0x18]
  5326: c8 87 07                 a0 = a0 + a1
  5329: 82 78 08                 a1 = u64 [a0 + 0x8]
  5332: 82 19 10                 a2 = u64 [sp + 0x10]
  5335: aa 98 07                 jump @380 if a1 == a2
      :                          @379
  5338: 33 08                    a1 = 0
  5340: 28 0f                    jump @382
      :                          @380
  5342: 82 77                    a0 = u64 [a0]
  5344: 82 77                    a0 = u64 [a0]
  5346: 33 08 01                 a1 = 0x1
  5349: 28 06                    jump @382
      :                          @381
  5351: 33 08 01                 a1 = 0x1
  5354: 01                       fallthrough
      :                          @382
  5355: 7b 18 30                 u64 [sp + 0x30] = a1
  5358: 7b 17 38                 u64 [sp + 0x38] = a0
  5361: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5364: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5367: 51 08 26                 jump @387 if a1 == 0
      :                          @383
  5370: 52 18 01 16              jump @385 if a1 != 1
      :                          @384
  5374: 97 77 04                 a0 = a0 << 0x4
  5377: 82 18 18                 a1 = u64 [sp + 0x18]
  5380: c8 87 07                 a0 = a0 + a1
  5383: 82 78 08                 a1 = u64 [a0 + 0x8]
  5386: 82 19 10                 a2 = u64 [sp + 0x10]
  5389: aa 98 07                 jump @386 if a1 == a2
      :                          @385
  5392: 33 08                    a1 = 0
  5394: 28 0f                    jump @388
      :                          @386
  5396: 82 77                    a0 = u64 [a0]
  5398: 82 77                    a0 = u64 [a0]
  5400: 33 08 01                 a1 = 0x1
  5403: 28 06                    jump @388
      :                          @387
  5405: 33 08 01                 a1 = 0x1
  5408: 01                       fallthrough
      :                          @388
  5409: 7b 18 40                 u64 [sp + 0x40] = a1
  5412: 7b 17 48                 u64 [sp + 0x48] = a0
  5415: 82 67 08                 a0 = u64 [s1 + 0x8]
  5418: 97 77 04                 a0 = a0 << 0x4
  5421: 82 18 18                 a1 = u64 [sp + 0x18]
  5424: c8 78 08                 a1 = a1 + a0
  5427: 82 87                    a0 = u64 [a1]
  5429: 82 89 08                 a2 = u64 [a1 + 0x8]
  5432: 95 18 30                 a1 = sp + 0x30
  5435: b4 90 01 6a              ra = 106, jump [a2]
      :                          @389 [@dyn 53]
  5439: 52 07 b8 00              jump @405 if a0 != 0
      :                          @390
  5443: 95 55 10                 s0 = s0 + 0x10
  5446: 82 18 20                 a1 = u64 [sp + 0x20]
  5449: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5452: 95 66 38                 s1 = s1 + 0x38
  5455: 82 17 28                 a0 = u64 [sp + 0x28]
  5458: 95 77 01                 a0 = a0 + 0x1
  5461: 7b 17 28                 u64 [sp + 0x28] = a0
  5464: 52 08 36 ff              jump @373 if a1 != 0
      :                          @391
  5468: 28 69                    jump @400
      :                          @392
  5470: 82 97 18                 a0 = u64 [a2 + 0x18]
  5473: 51 07 71                 jump @402 if a0 == 0
      :                          @393
  5476: 82 95 10                 s0 = u64 [a2 + 0x10]
  5479: 33 0a                    a3 = 0
  5481: 97 78 04                 a1 = a0 << 0x4
  5484: c8 58 08                 a1 = a1 + s0
  5487: 7b 18 20                 u64 [sp + 0x20] = a1
  5490: 7b 19 08                 u64 [sp + 0x8] = a2
  5493: 82 96                    s1 = u64 [a2]
  5495: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5498: 97 77 04                 a0 = a0 << 0x4
  5501: 98 77 04                 a0 = a0 >> 0x4
  5504: 95 77 01                 a0 = a0 + 0x1
  5507: 7b 17                    u64 [sp] = a0
  5509: 95 66 08                 s1 = s1 + 0x8
  5512: 01                       fallthrough
      :                          @394
  5513: 7b 1a 28                 u64 [sp + 0x28] = a3
  5516: 82 69                    a2 = u64 [s1]
  5518: 51 09 16                 jump @397 if a2 == 0
      :                          @395
  5521: 82 1a 58                 a3 = u64 [sp + 0x58]
  5524: 82 17 50                 a0 = u64 [sp + 0x50]
  5527: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5530: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5533: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @396 [@dyn 54]
  5537: 52 07 56                 jump @405 if a0 != 0
      :                          @397
  5540: 82 57                    a0 = u64 [s0]
  5542: 82 59 08                 a2 = u64 [s0 + 0x8]
  5545: 95 18 30                 a1 = sp + 0x30
  5548: b4 90 01 6e              ra = 110, jump [a2]
      :                          @398 [@dyn 55]
  5552: 52 07 47                 jump @405 if a0 != 0
      :                          @399
  5555: 95 66 10                 s1 = s1 + 0x10
  5558: 95 55 10                 s0 = s0 + 0x10
  5561: 82 1a 28                 a3 = u64 [sp + 0x28]
  5564: 95 aa 01                 a3 = a3 + 0x1
  5567: 82 17 20                 a0 = u64 [sp + 0x20]
  5570: ab 75 c7                 jump @394 if s0 != a0
      :                          @400
  5573: 82 19 08                 a2 = u64 [sp + 0x8]
  5576: 82 1a                    a3 = u64 [sp]
  5578: 82 97 08                 a0 = u64 [a2 + 0x8]
  5581: ac 7a 0d                 jump @403 if a3 <u a0
      :                          @401
  5584: 28 2c                    jump @406
      :                          @402
  5586: 33 0a                    a3 = 0
  5588: 82 97 08                 a0 = u64 [a2 + 0x8]
  5591: 54 07 25                 jump @406 if a0 <=u 0
      :                          @403
  5594: 82 97                    a0 = u64 [a2]
  5596: 97 a8 04                 a1 = a3 << 0x4
  5599: c8 87 09                 a2 = a0 + a1
  5602: 82 1a 58                 a3 = u64 [sp + 0x58]
  5605: 82 17 50                 a0 = u64 [sp + 0x50]
  5608: 82 98                    a1 = u64 [a2]
  5610: 82 99 08                 a2 = u64 [a2 + 0x8]
  5613: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5616: b4 a0 01 70              ra = 112, jump [a3]
      :                          @404 [@dyn 56]
  5620: 51 07 08                 jump @406 if a0 == 0
      :                          @405
  5623: 33 07 01                 a0 = 0x1
  5626: 28 05                    jump @407
      :                          @406
  5628: 33 07                    a0 = 0
  5630: 01                       fallthrough
      :                          @407
  5631: 82 10 80 00              ra = u64 [sp + 0x80]
  5635: 82 15 78                 s0 = u64 [sp + 0x78]
  5638: 82 16 70                 s1 = u64 [sp + 0x70]
  5641: 95 11 88 00              sp = sp + 0x88
  5645: 32 00                    ret
      :                          @408 [@dyn 57]
  5647: 32 00                    ret
      :                          @409 [@dyn 58]
  5649: 95 11 80                 sp = sp + 0xffffffffffffff80
  5652: 7b 10 78                 u64 [sp + 0x78] = ra
  5655: 7b 15 70                 u64 [sp + 0x70] = s0
  5658: 7b 16 68                 u64 [sp + 0x68] = s1
  5661: 64 92                    t0 = a2
  5663: 33 00                    ra = 0
  5665: 33 0b                    a4 = 0
  5667: 33 05                    s0 = 0
  5669: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5679: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5685: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5695: 82 79 10                 a2 = u64 [a0 + 0x10]
  5698: 7b 19 48                 u64 [sp + 0x48] = a2
  5701: 82 79                    a2 = u64 [a0]
  5703: 7b 19 38                 u64 [sp + 0x38] = a2
  5706: 82 77 08                 a0 = u64 [a0 + 0x8]
  5709: 7b 17 30                 u64 [sp + 0x30] = a0
  5712: 33 07 88 01 01           a0 = 0x10188
  5717: 7b 17 08                 u64 [sp + 0x8] = a0
  5720: 3a 07 08 00 03           a0 = u64 [0x30008]
  5725: 7b 17 60                 u64 [sp + 0x60] = a0
  5728: 7b 18 58                 u64 [sp + 0x58] = a1
  5731: 95 88 08                 a1 = a1 + 0x8
  5734: 7b 18                    u64 [sp] = a1
  5736: 33 0c 0a                 a5 = 0xa
  5739: 7b 12 20                 u64 [sp + 0x20] = t0
  5742: 7b 13 18                 u64 [sp + 0x18] = t1
  5745: 7b 14 10                 u64 [sp + 0x10] = t2
  5748: 28 3a                    jump @413
      :                          @410
  5750: 64 06                    s1 = ra
  5752: c8 89 07                 a0 = a2 + a1
  5755: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5758: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5761: 88 77 01                 a0 = a0 <u 0x1
  5764: 01                       fallthrough
      :                          @411
  5765: 82 1a 48                 a3 = u64 [sp + 0x48]
  5768: 78 a7                    u8 [a3] = a0
  5770: 82 17 30                 a0 = u64 [sp + 0x30]
  5773: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5776: 82 17 38                 a0 = u64 [sp + 0x38]
  5779: b4 a0 01 76              ra = 118, jump [a3]
      :                          @412 [@dyn 59]
  5783: 64 5b                    a4 = s0
  5785: 82 12 20                 t0 = u64 [sp + 0x20]
  5788: 82 13 18                 t1 = u64 [sp + 0x18]
  5791: 82 14 10                 t2 = u64 [sp + 0x10]
  5794: 64 60                    ra = s1
  5796: 33 0c 0a                 a5 = 0xa
  5799: 82 15 40                 s0 = u64 [sp + 0x40]
  5802: 52 07 63 01              jump @454 if a0 != 0
      :                          @413
  5806: 84 57 ff 00              a0 = s0 & 0xff
  5810: 52 07 57 01              jump @453 if a0 != 0
      :                          @414
  5814: 7b 1b 50                 u64 [sp + 0x50] = a4
  5817: ae 02 0a                 jump @417 if t0 >=u ra
      :                          @415
  5820: 28 ef 00                 jump @444
      :                          @416
  5823: ac 02 ec 00              jump @444 if t0 <u ra
      :                          @417
  5827: c9 02 08                 a1 = t0 - ra
  5830: 82 16 58                 s1 = u64 [sp + 0x58]
  5833: c8 06 06                 s1 = s1 + ra
  5836: 55 18 10 1d              jump @423 if a1 >=u 16
      :                          @418
  5840: aa 02 d8 00              jump @443 if t0 == ra
      :                          @419
  5844: 33 0a                    a3 = 0
  5846: 01                       fallthrough
      :                          @420
  5847: c8 a6 07                 a0 = s1 + a3
  5850: 7c 77                    a0 = u8 [a0]
  5852: aa c7 a5 00              jump @438 if a0 == a5
      :                          @421
  5856: 95 aa 01                 a3 = a3 + 0x1
  5859: ab a8 f4                 jump @420 if a1 != a3
      :                          @422
  5862: 28 c2 00                 jump @443
      :                          @423
  5865: 95 69 07                 a2 = s1 + 0x7
  5868: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5871: c9 6a 07                 a0 = a3 - s1
  5874: d3 6a 0a                 a3 = a3 ^ s1
  5877: 88 aa 01                 a3 = a3 <u 0x1
  5880: 88 7b 01                 a4 = a0 <u 0x1
  5883: d4 ba 0a                 a3 = a3 | a4
  5886: 51 0a 45                 jump @429 if a3 == 0
      :                          @424
  5889: 33 07                    a0 = 0
  5891: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5894: 82 1b                    a4 = u64 [sp]
  5896: c8 0b 0b                 a4 = a4 + ra
  5899: 28 08                    jump @426
      :                          @425
  5901: 82 1b                    a4 = u64 [sp]
  5903: c8 0b 0b                 a4 = a4 + ra
  5906: 01                       fallthrough
      :                          @426
  5907: c8 76 0c                 a5 = s1 + a0
  5910: 82 cc                    a5 = u64 [a5]
  5912: c8 7b 09                 a2 = a4 + a0
  5915: 82 99                    a2 = u64 [a2]
  5917: d3 4c 05                 s0 = a5 ^ t2
  5920: c8 35 05                 s0 = s0 + t1
  5923: e0 c5 0c                 a5 = s0 & ~a5
  5926: d3 49 05                 s0 = a2 ^ t2
  5929: c8 35 05                 s0 = s0 + t1
  5932: e0 95 09                 a2 = s0 & ~a2
  5935: d4 c9 09                 a2 = a2 | a5
  5938: 82 1c 60                 a5 = u64 [sp + 0x60]
  5941: d2 c9 09                 a2 = a2 & a5
  5944: 52 09 1f                 jump @432 if a2 != 0
      :                          @427
  5947: 95 77 10                 a0 = a0 + 0x10
  5950: ae 7a d5                 jump @426 if a3 >=u a0
      :                          @428
  5953: 28 16                    jump @432
      :                          @429
  5955: c8 a6 0b                 a4 = s1 + a3
  5958: 7c bb                    a4 = u8 [a4]
  5960: aa cb 51                 jump @441 if a4 == a5
      :                          @430
  5963: 95 aa 01                 a3 = a3 + 0x1
  5966: ab a7 f5                 jump @429 if a0 != a3
      :                          @431
  5969: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5972: ae 7a b9                 jump @425 if a3 >=u a0
      :                          @432
  5975: aa 87 9a 00              jump @450 if a0 == a1
      :                          @433
  5979: 33 0a                    a3 = 0
  5981: c8 76 06                 s1 = s1 + a0
  5984: c9 72 08                 a1 = t0 - a0
  5987: c9 08 08                 a1 = a1 - ra
  5990: 33 0c 0a                 a5 = 0xa
  5993: 82 1b 50                 a4 = u64 [sp + 0x50]
  5996: 01                       fallthrough
      :                          @434
  5997: c8 a6 09                 a2 = s1 + a3
  6000: 7c 99                    a2 = u8 [a2]
  6002: aa c9 0b                 jump @437 if a2 == a5
      :                          @435
  6005: 95 aa 01                 a3 = a3 + 0x1
  6008: ab a8 f5                 jump @434 if a1 != a3
      :                          @436
  6011: 28 2d                    jump @443
      :                          @437
  6013: c8 7a 0a                 a3 = a3 + a0
  6016: 01                       fallthrough
      :                          @438
  6017: c8 0a 0a                 a3 = a3 + ra
  6020: 95 a0 01                 ra = a3 + 0x1
  6023: ae 2a 38 ff              jump @416 if a3 >=u t0
      :                          @439
  6027: 82 17 58                 a0 = u64 [sp + 0x58]
  6030: c8 7a 0a                 a3 = a3 + a0
  6033: 7c a7                    a0 = u8 [a3]
  6035: ab c7 2c ff              jump @416 if a0 != a5
      :                          @440
  6039: 28 61                    jump @451
      :                          @441
  6041: 82 1b 50                 a4 = u64 [sp + 0x50]
  6044: c8 0a 0a                 a3 = a3 + ra
  6047: 95 a0 01                 ra = a3 + 0x1
  6050: ac 2a e9                 jump @439 if a3 <u t0
      :                          @442
  6053: 28 1a ff                 jump @416
      :                          @443
  6056: 64 20                    ra = t0
  6058: 01                       fallthrough
      :                          @444
  6059: 49 11 40 01              u64 [sp + 64] = 0x1
  6063: 64 b5                    s0 = a4
  6065: 64 26                    s1 = t0
  6067: aa 2b 56                 jump @453 if a4 == t0
      :                          @445
  6070: 82 17 48                 a0 = u64 [sp + 0x48]
  6073: 7c 77                    a0 = u8 [a0]
  6075: 51 07 22                 jump @448 if a0 == 0
      :                          @446
  6078: 82 17 30                 a0 = u64 [sp + 0x30]
  6081: 82 7a 18                 a3 = u64 [a0 + 0x18]
  6084: 33 09 04                 a2 = 0x4
  6087: 82 17 38                 a0 = u64 [sp + 0x38]
  6090: 82 18 08                 a1 = u64 [sp + 0x8]
  6093: 7b 10 28                 u64 [sp + 0x28] = ra
  6096: b4 a0 01 78              ra = 120, jump [a3]
      :                          @447 [@dyn 60]
  6100: 82 1b 50                 a4 = u64 [sp + 0x50]
  6103: 82 10 28                 ra = u64 [sp + 0x28]
  6106: 52 07 33                 jump @454 if a0 != 0
      :                          @448
  6109: c9 b6 09                 a2 = s1 - a4
  6112: 82 18 58                 a1 = u64 [sp + 0x58]
  6115: c8 b8 08                 a1 = a1 + a4
  6118: ab b6 90 fe              jump @410 if s1 != a4
      :                          @449
  6122: 64 06                    s1 = ra
  6124: 33 07                    a0 = 0
  6126: 28 97 fe                 jump @411
      :                          @450
  6129: 64 20                    ra = t0
  6131: 82 1b 50                 a4 = u64 [sp + 0x50]
  6134: 28 b5                    jump @444
      :                          @451
  6136: 49 11 40                 u64 [sp + 64] = 0
  6139: 64 05                    s0 = ra
  6141: 64 06                    s1 = ra
  6143: 82 17 48                 a0 = u64 [sp + 0x48]
  6146: 7c 77                    a0 = u8 [a0]
  6148: 52 07 ba                 jump @446 if a0 != 0
      :                          @452
  6151: 28 d6                    jump @448
      :                          @453
  6153: 33 07                    a0 = 0
  6155: 28 06                    jump @455
      :                          @454
  6157: 33 07 01                 a0 = 0x1
  6160: 01                       fallthrough
      :                          @455
  6161: 82 10 78                 ra = u64 [sp + 0x78]
  6164: 82 15 70                 s0 = u64 [sp + 0x70]
  6167: 82 16 68                 s1 = u64 [sp + 0x68]
  6170: 95 11 80 00              sp = sp + 0x80
  6174: 32 00                    ret
      :                          @456 [@dyn 61]
  6176: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6179: 7b 10 20                 u64 [sp + 0x20] = ra
  6182: 7b 15 18                 u64 [sp + 0x18] = s0
  6185: 7b 16 10                 u64 [sp + 0x10] = s1
  6188: 82 75 10                 s0 = u64 [a0 + 0x10]
  6191: 7c 59                    a2 = u8 [s0]
  6193: 82 7b                    a4 = u64 [a0]
  6195: 82 76 08                 s1 = u64 [a0 + 0x8]
  6198: 51 09 32                 jump @460 if a2 == 0
      :                          @457
  6201: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6204: 7b 18 08                 u64 [sp + 0x8] = a1
  6207: 33 08 88 01 01           a1 = 0x10188
  6212: 33 09 04                 a2 = 0x4
  6215: 64 b7                    a0 = a4
  6217: 7b 1b                    u64 [sp] = a4
  6219: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @458 [@dyn 62]
  6223: 82 18 08                 a1 = u64 [sp + 0x8]
  6226: 82 1b                    a4 = u64 [sp]
  6228: 51 07 14                 jump @460 if a0 == 0
      :                          @459
  6231: 33 07 01                 a0 = 0x1
  6234: 82 10 20                 ra = u64 [sp + 0x20]
  6237: 82 15 18                 s0 = u64 [sp + 0x18]
  6240: 82 16 10                 s1 = u64 [sp + 0x10]
  6243: 95 11 28                 sp = sp + 0x28
  6246: 32 00                    ret
      :                          @460
  6248: 83 87                    i32 a0 = a1 + 0
  6250: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6253: 88 77 01                 a0 = a0 <u 0x1
  6256: 78 57                    u8 [s0] = a0
  6258: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6261: 64 b7                    a0 = a4
  6263: 82 10 20                 ra = u64 [sp + 0x20]
  6266: 82 15 18                 s0 = u64 [sp + 0x18]
  6269: 82 16 10                 s1 = u64 [sp + 0x10]
  6272: 95 11 28                 sp = sp + 0x28
  6275: 32 0c                    jump [a5]
      :                          @461 [@dyn 63]
  6277: 64 8a                    a3 = a1
  6279: 33 08 58 01 01           a1 = 0x10158
  6284: 64 a9                    a2 = a3
  6286: 28 a2 fb                 jump @370
      :                          @462
  6289: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6293: 7b 10 88 00              u64 [sp + 0x88] = ra
  6297: 7b 15 80 00              u64 [sp + 0x80] = s0
  6301: 7b 16 78                 u64 [sp + 0x78] = s1
  6304: 64 75                    s0 = a0
  6306: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6309: 64 8b                    a4 = a1
  6311: 33 08 01                 a1 = 0x1
  6314: 33 06 01                 s1 = 0x1
  6317: 51 07 1d                 jump @464 if a0 == 0
      :                          @463
  6320: 78 56 08                 u8 [s0 + 0x8] = s1
  6323: 46 15 09 01              u8 [s0 + 9] = 0x1
  6327: 64 57                    a0 = s0
  6329: 82 10 88 00              ra = u64 [sp + 0x88]
  6333: 82 15 80 00              s0 = u64 [sp + 0x80]
  6337: 82 16 78                 s1 = u64 [sp + 0x78]
  6340: 95 11 90 00              sp = sp + 0x90
  6344: 32 00                    ret
      :                          @464
  6346: 64 9a                    a3 = a2
  6348: 82 5c                    a5 = u64 [s0]
  6350: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6353: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6356: 84 79 04                 a2 = a0 & 0x4
  6359: 52 09 45                 jump @470 if a2 != 0
      :                          @465
  6362: 51 08 32                 jump @468 if a1 == 0
      :                          @466
  6365: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6368: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6371: 82 83 18                 t1 = u64 [a1 + 0x18]
  6374: 33 08 8c 01 01           a1 = 0x1018c
  6379: 33 09 02                 a2 = 0x2
  6382: 64 a6                    s1 = a3
  6384: 7b 1b 10                 u64 [sp + 0x10] = a4
  6387: 7b 1c 08                 u64 [sp + 0x8] = a5
  6390: b4 30 02 80 00           ra = 128, jump [t1]
      :                          @467 [@dyn 64]
  6395: 82 1c 08                 a5 = u64 [sp + 0x8]
  6398: 82 1b 10                 a4 = u64 [sp + 0x10]
  6401: 64 6a                    a3 = s1
  6403: 33 08 01                 a1 = 0x1
  6406: 33 06 01                 s1 = 0x1
  6409: 52 07 a7                 jump @463 if a0 != 0
      :                          @468
  6412: 64 b7                    a0 = a4
  6414: 64 c8                    a1 = a5
  6416: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @469 [@dyn 65]
  6421: 33 08 01                 a1 = 0x1
  6424: 64 76                    s1 = a0
  6426: 28 96                    jump @463
      :                          @470
  6428: 52 08 37                 jump @474 if a1 != 0
      :                          @471
  6431: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6434: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6437: 82 83 18                 t1 = u64 [a1 + 0x18]
  6440: 33 08 90 01 01           a1 = 0x10190
  6445: 33 09 01                 a2 = 0x1
  6448: 33 06 01                 s1 = 0x1
  6451: 7b 1a                    u64 [sp] = a3
  6453: 7b 1b 10                 u64 [sp + 0x10] = a4
  6456: 7b 1c 08                 u64 [sp + 0x8] = a5
  6459: b4 30 02 84 00           ra = 132, jump [t1]
      :                          @472 [@dyn 66]
  6464: 82 1c 08                 a5 = u64 [sp + 0x8]
  6467: 82 1b 10                 a4 = u64 [sp + 0x10]
  6470: 82 1a                    a3 = u64 [sp]
  6472: 33 08 01                 a1 = 0x1
  6475: 52 07 65 ff              jump @463 if a0 != 0
      :                          @473
  6479: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6482: 01                       fallthrough
      :                          @474
  6483: 33 06 01                 s1 = 0x1
  6486: 78 16 37                 u8 [sp + 0x37] = s1
  6489: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6492: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6495: 7b 18 18                 u64 [sp + 0x18] = a1
  6498: 7b 19 20                 u64 [sp + 0x20] = a2
  6501: 95 18 37                 a1 = sp + 0x37
  6504: 7b 18 28                 u64 [sp + 0x28] = a1
  6507: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6510: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6513: 82 c3                    t1 = u64 [a5]
  6515: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6518: 82 c0 10                 ra = u64 [a5 + 0x10]
  6521: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6524: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6527: 7a 18 68                 u32 [sp + 0x68] = a1
  6530: 78 19 70                 u8 [sp + 0x70] = a2
  6533: 7b 13 38                 u64 [sp + 0x38] = t1
  6536: 7b 14 40                 u64 [sp + 0x40] = t2
  6539: 7b 10 48                 u64 [sp + 0x48] = ra
  6542: 7b 12 50                 u64 [sp + 0x50] = t0
  6545: 95 17 18                 a0 = sp + 0x18
  6548: 7b 17 58                 u64 [sp + 0x58] = a0
  6551: 33 07 58 01 01           a0 = 0x10158
  6556: 7b 17 60                 u64 [sp + 0x60] = a0
  6559: 95 18 38                 a1 = sp + 0x38
  6562: 64 b7                    a0 = a4
  6564: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @475 [@dyn 67]
  6569: 52 07 21                 jump @478 if a0 != 0
      :                          @476
  6572: 82 18 60                 a1 = u64 [sp + 0x60]
  6575: 82 17 58                 a0 = u64 [sp + 0x58]
  6578: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6581: 33 08 8e 01 01           a1 = 0x1018e
  6586: 33 09 02                 a2 = 0x2
  6589: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @477 [@dyn 68]
  6594: 64 76                    s1 = a0
  6596: 33 08 01                 a1 = 0x1
  6599: 28 e9 fe                 jump @463
      :                          @478
  6602: 33 08 01                 a1 = 0x1
  6605: 28 e3 fe                 jump @463
      :                          @479
  6608: 51 08 9b 00              jump @500 if a1 == 0
      :                          @480
  6612: 64 79                    a2 = a0
  6614: 7c 77                    a0 = u8 [a0]
  6616: 51 07 91 00              jump @499 if a0 == 0
      :                          @481
  6620: 51 27 ff 00 90 00        jump @501 if a0 == 255
      :                          @482
  6626: 6c 7a                    a3 = sext.b a0
  6628: 57 0a 09                 jump @484 if a3 <s 0
      :                          @483
  6631: 33 0a                    a3 = 0
  6633: 33 08                    a1 = 0
  6635: 28 73                    jump @498
      :                          @484
  6637: 55 27 c0 00 0d           jump @486 if a0 >=u 192
      :                          @485
  6642: 33 0a 01                 a3 = 0x1
  6645: 33 0b 80                 a4 = 0xffffffffffffff80
  6648: 28 4a                    jump @495
      :                          @486
  6650: 55 27 e0 00 0e           jump @488 if a0 >=u 224
      :                          @487
  6655: 33 0a 02                 a3 = 0x2
  6658: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6662: 28 3c                    jump @495
      :                          @488
  6664: 55 27 f0 00 0e           jump @490 if a0 >=u 240
      :                          @489
  6669: 33 0a 03                 a3 = 0x3
  6672: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6676: 28 2e                    jump @495
      :                          @490
  6678: 55 27 f8 00 0e           jump @492 if a0 >=u 248
      :                          @491
  6683: 33 0a 04                 a3 = 0x4
  6686: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6690: 28 20                    jump @495
      :                          @492
  6692: 55 27 fc 00 0e           jump @494 if a0 >=u 252
      :                          @493
  6697: 33 0a 05                 a3 = 0x5
  6700: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6704: 28 12                    jump @495
      :                          @494
  6706: 88 7a fe 00              a3 = a0 <u 0xfe
  6710: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6714: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6718: 85 aa 07                 a3 = a3 ^ 0x7
  6721: 01                       fallthrough
      :                          @495
  6722: ae 8a 2b                 jump @502 if a3 >=u a1
      :                          @496
  6725: 33 08                    a1 = 0
  6727: c8 b7 07                 a0 = a0 + a4
  6730: 64 ab                    a4 = a3
  6732: 01                       fallthrough
      :                          @497
  6733: c8 b9 0c                 a5 = a2 + a4
  6736: 7c cc                    a5 = u8 [a5]
  6738: 97 88 08                 a1 = a1 << 0x8
  6741: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6744: d4 c8 08                 a1 = a1 | a5
  6747: 52 0b f2                 jump @497 if a4 != 0
      :                          @498
  6750: 8a a9 03                 i32 a2 = a3 << 0x3
  6753: cf 97 07                 a0 = a0 << a2
  6756: c8 87 07                 a0 = a0 + a1
  6759: 32 00                    ret
      :                          @499
  6761: 32 00                    ret
      :                          @500
  6763: 00                       trap
      :                          @501
  6764: 00                       trap
      :                          @502
  6765: 00                       trap
      :                          @503 [@dyn 69]
  6766: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6769: 7b 10 28                 u64 [sp + 0x28] = ra
  6772: 7b 15 20                 u64 [sp + 0x20] = s0
  6775: 7b 16 18                 u64 [sp + 0x18] = s1
  6778: 64 86                    s1 = a1
  6780: 82 88 28                 a1 = u64 [a1 + 0x28]
  6783: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6786: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6789: 64 75                    s0 = a0
  6791: 33 08 50 01 01           a1 = 0x10150
  6796: 33 09 01                 a2 = 0x1
  6799: 64 a7                    a0 = a3
  6801: b4 b0 02 8c 00           ra = 140, jump [a4]
      :                          @504 [@dyn 70]
  6806: 7b 16                    u64 [sp] = s1
  6808: 78 17 08                 u8 [sp + 0x8] = a0
  6811: 46 11 09                 u8 [sp + 9] = 0
  6814: 7b 15 10                 u64 [sp + 0x10] = s0
  6817: 33 09 92 00              a2 = 0x92
  6821: 64 17                    a0 = sp
  6823: 95 18 10                 a1 = sp + 0x10
  6826: 50 20 8e 00 e7 fd        ra = 142, jump @462
      :                          @505 [@dyn 71]
  6832: 33 07 01                 a0 = 0x1
  6835: 7c 18 08                 a1 = u8 [sp + 0x8]
  6838: 52 08 1b                 jump @507 if a1 != 0
      :                          @506
  6841: 82 17                    a0 = u64 [sp]
  6843: 82 78 28                 a1 = u64 [a0 + 0x28]
  6846: 82 77 20                 a0 = u64 [a0 + 0x20]
  6849: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6852: 33 08 91 01 01           a1 = 0x10191
  6857: 33 09 01                 a2 = 0x1
  6860: b4 a0 02 90 00           ra = 144, jump [a3]
      :                          @507 [@dyn 72]
  6865: 82 10 28                 ra = u64 [sp + 0x28]
  6868: 82 15 20                 s0 = u64 [sp + 0x20]
  6871: 82 16 18                 s1 = u64 [sp + 0x18]
  6874: 95 11 30                 sp = sp + 0x30
  6877: 32 00                    ret
      :                          @508 [@dyn 73]
  6879: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6883: 7b 10 80 00              u64 [sp + 0x80] = ra
  6887: 80 89 34                 a2 = u32 [a1 + 0x34]
  6890: 82 77                    a0 = u64 [a0]
  6892: 84 9a 10                 a3 = a2 & 0x10
  6895: 52 0a 16                 jump @511 if a3 != 0
      :                          @509
  6898: 84 99 20                 a2 = a2 & 0x20
  6901: 52 09 41                 jump @514 if a2 != 0
      :                          @510
  6904: 7c 77                    a0 = u8 [a0]
  6906: 82 10 80 00              ra = u64 [sp + 0x80]
  6910: 95 11 88 00              sp = sp + 0x88
  6914: 28 98 f5                 jump @308
      :                          @511
  6917: 7c 77                    a0 = u8 [a0]
  6919: 33 0b 81 00              a4 = 0x81
  6923: 95 19 7f                 a2 = sp + 0x7f
  6926: 33 02 57                 t0 = 0x57
  6929: 01                       fallthrough
      :                          @512
  6930: 64 bc                    a5 = a4
  6932: 84 7b 0f                 a4 = a0 & 0xf
  6935: 97 77 38                 a0 = a0 << 0x38
  6938: 98 77 3c                 a0 = a0 >> 0x3c
  6941: 88 b3 0a                 t1 = a4 <u 0xa
  6944: 33 0a 30                 a3 = 0x30
  6947: da 32 0a                 a3 = t0 if t1 == 0
  6950: be ba 0a                 i32 a3 = a3 + a4
  6953: 78 9a                    u8 [a2] = a3
  6955: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6958: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6961: 52 07 e1                 jump @512 if a0 != 0
      :                          @513
  6964: 28 31                    jump @516
      :                          @514
  6966: 7c 77                    a0 = u8 [a0]
  6968: 33 0b 81 00              a4 = 0x81
  6972: 95 19 7f                 a2 = sp + 0x7f
  6975: 33 02 37                 t0 = 0x37
  6978: 01                       fallthrough
      :                          @515
  6979: 64 bc                    a5 = a4
  6981: 84 7b 0f                 a4 = a0 & 0xf
  6984: 97 77 38                 a0 = a0 << 0x38
  6987: 98 77 3c                 a0 = a0 >> 0x3c
  6990: 88 b3 0a                 t1 = a4 <u 0xa
  6993: 33 0a 30                 a3 = 0x30
  6996: da 32 0a                 a3 = t0 if t1 == 0
  6999: be ba 0a                 i32 a3 = a3 + a4
  7002: 78 9a                    u8 [a2] = a3
  7004: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  7007: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  7010: 52 07 e1                 jump @515 if a0 != 0
      :                          @516
  7013: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  7016: 56 27 80 00 28           jump @519 if a0 >u 128
      :                          @517
  7021: 9a bb 81 00              a4 = 0x81 - a4
  7025: 64 1a                    a3 = sp
  7027: c8 7a 0a                 a3 = a3 + a0
  7030: 33 09 02                 a2 = 0x2
  7033: 64 87                    a0 = a1
  7035: 33 08 92 01 01           a1 = 0x10192
  7040: 50 20 94 00 41 f6        ra = 148, jump @318
      :                          @518 [@dyn 74]
  7046: 82 10 80 00              ra = u64 [sp + 0x80]
  7050: 95 11 88 00              sp = sp + 0x88
  7054: 32 00                    ret
      :                          @519
  7056: 00                       trap
