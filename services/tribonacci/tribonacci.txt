// RO data = 656/656 bytes
// RW data = 16/65632 bytes
// Stack size = 65536 bytes
// RO data = [84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 74, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 226, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2257
// Code size = 6746 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 65 02 00 00           jump @39
      :                          @2
    10: 28 9b 04                 jump @107
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 3a 0f                 jump @283
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 e5 0f           ra = 4, jump @293
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 8d 0e                 jump @283
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 38 0f           ra = 8, jump @293
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 88 00              a0 = 0x88
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e b2 15           ra = 14, jump @437
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   493: 7b 10 10                 u64 [sp + 0x10] = ra
   496: 7b 15 08                 u64 [sp + 0x8] = s0
   499: 7b 16                    u64 [sp] = s1
   501: 33 05 14 00 03           s0 = 0x30014
   506: 33 09 10                 a2 = 0x10
   509: 33 0a 05                 a3 = 0x5
   512: 33 0b 01                 a4 = 0x1
   515: 33 07 14 00 03           a0 = 0x30014
   520: 33 08                    a1 = 0
   522: 33 0c                    a5 = 0
   524: 0a 12                    ecalli 18 // 'fetch'
   526: 01                       fallthrough
      :                          @35
   527: 33 09 01                 a2 = 0x1
   530: 51 17 ff 23              jump @37 if a0 == 4294967295
      :                          @36
   534: 39 07 18 00 03           a0 = i32 [0x30018]
   539: 39 08 1c 00 03           a1 = i32 [0x3001c]
   544: 39 09 20 00 03           a2 = i32 [0x30020]
   549: 39 0b 14 00 03           a4 = i32 [0x30014]
   554: c8 78 0a                 a3 = a1 + a0
   557: be 9a 0a                 i32 a3 = a3 + a2
   560: 83 b9 01                 i32 a2 = a4 + 0x1
   563: 28 0a                    jump @38
      :                          @37
   565: 33 07                    a0 = 0
   567: 33 08                    a1 = 0
   569: 33 0a 01                 a3 = 0x1
   572: 01                       fallthrough
      :                          @38
   573: 3d 09 14 00 03           u32 [0x30014] = a2
   578: 3d 0a 18 00 03           u32 [0x30018] = a3
   583: 3d 07 1c 00 03           u32 [0x3001c] = a0
   588: 3d 08 20 00 03           u32 [0x30020] = a1
   593: 33 08 10                 a1 = 0x10
   596: 64 57                    a0 = s0
   598: 0a 13                    ecalli 19 // 'export'
   600: 33 08 10                 a1 = 0x10
   603: 64 57                    a0 = s0
   605: 82 10 10                 ra = u64 [sp + 0x10]
   608: 82 15 08                 s0 = u64 [sp + 0x8]
   611: 82 16                    s1 = u64 [sp]
   613: 95 11 18                 sp = sp + 0x18
   616: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   618: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   621: 7b 10 20                 u64 [sp + 0x20] = ra
   624: 7b 15 18                 u64 [sp + 0x18] = s0
   627: 7b 16 10                 u64 [sp + 0x10] = s1
   630: 33 09 08                 a2 = 0x8
   633: ac 98 6a 01              jump @83 if a1 <u a2
      :                          @40
   637: 51 17 fc 23 02           jump @102 if a0 == 4294967292
      :                          @41
   642: 51 07 1e 02              jump @102 if a0 == 0
      :                          @42
   646: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   649: 95 75 08                 s0 = a0 + 0x8
   652: 51 0a 45                 jump @52 if a3 == 0
      :                          @43
   655: 7d 58                    a1 = i8 [s0]
   657: 33 06 01                 s1 = 0x1
   660: 59 08 40                 jump @53 if a1 >=s 0
      :                          @44
   663: 84 89 ff 00              a2 = a1 & 0xff
   667: 33 06 02                 s1 = 0x2
   670: 53 29 c0 00 2d           jump @50 if a2 <u 192
      :                          @45
   675: 33 06 03                 s1 = 0x3
   678: 53 29 e0 00 25           jump @50 if a2 <u 224
      :                          @46
   683: 33 06 04                 s1 = 0x4
   686: 53 29 f0 00 1d           jump @50 if a2 <u 240
      :                          @47
   691: 33 06 05                 s1 = 0x5
   694: 53 29 f8 00 15           jump @50 if a2 <u 248
      :                          @48
   699: 33 06 06                 s1 = 0x6
   702: 53 29 fc 00 0d           jump @50 if a2 <u 252
      :                          @49
   707: 88 98 fe 00              a1 = a2 <u 0xfe
   711: 9a 86 08                 s1 = 0x8 - a1
   714: 01                       fallthrough
      :                          @50
   715: ae 6a 09                 jump @53 if a3 >=u s1
      :                          @51
   718: 28 15 01                 jump @83
      :                          @52
   721: 33 06                    s1 = 0
   723: 01                       fallthrough
      :                          @53
   724: 7b 16                    u64 [sp] = s1
   726: 64 57                    a0 = s0
   728: 64 68                    a1 = s1
   730: 64 a6                    s1 = a3
   732: 50 10 12 bd 15           ra = 18, jump @454
      :                          @54 [@dyn 9]
   737: 82 1a                    a3 = u64 [sp]
   739: 51 07 00 01              jump @83 if a0 == 0
      :                          @55
   743: e4 a6 07                 a0 = maxu(s1, a3)
   746: c9 a7 07                 a0 = a0 - a3
   749: 53 17 60 f6 00           jump @83 if a0 <u 96
      :                          @56
   754: c8 5a 08                 a1 = a3 + s0
   757: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   760: 95 87 60                 a0 = a1 + 0x60
   763: 7b 17                    u64 [sp] = a0
   765: 51 06 4c                 jump @67 if s1 == 0
      :                          @57
   768: 7d 78                    a1 = i8 [a0]
   770: 33 05 01                 s0 = 0x1
   773: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   776: 84 89 ff 00              a2 = a1 & 0xff
   780: 33 05 02                 s0 = 0x2
   783: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   788: 33 05 03                 s0 = 0x3
   791: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   796: 33 05 04                 s0 = 0x4
   799: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   804: 33 05 05                 s0 = 0x5
   807: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   812: 33 05 06                 s0 = 0x6
   815: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   820: 88 98 fe 00              a1 = a2 <u 0xfe
   824: 9a 85 08                 s0 = 0x8 - a1
   827: 01                       fallthrough
      :                          @64
   828: ac 56 65 01              jump @103 if s1 <u s0
      :                          @65
   832: 64 58                    a1 = s0
   834: 50 10 14 57 15           ra = 20, jump @454
      :                          @66 [@dyn 10]
   839: 28 07                    jump @68
      :                          @67
   841: 33 05                    s0 = 0
   843: 33 07                    a0 = 0
   845: 01                       fallthrough
      :                          @68
   846: e4 56 08                 a1 = maxu(s1, s0)
   849: c9 58 08                 a1 = a1 - s0
   852: e4 78 08                 a1 = maxu(a1, a0)
   855: c9 78 08                 a1 = a1 - a0
   858: 33 09 20                 a2 = 0x20
   861: ac 98 86 00              jump @83 if a1 <u a2
      :                          @69
   865: 82 19                    a2 = u64 [sp]
   867: c8 95 05                 s0 = s0 + a2
   870: c8 57 07                 a0 = a0 + s0
   873: 95 85 e0                 s0 = a1 + 0xffffffffffffffe0
   876: 95 77 20                 a0 = a0 + 0x20
   879: 7b 17                    u64 [sp] = a0
   881: 51 05 6d                 jump @82 if s0 == 0
      :                          @70
   884: 7d 78                    a1 = i8 [a0]
   886: 33 06 01                 s1 = 0x1
   889: 59 08 37                 jump @77 if a1 >=s 0
      :                          @71
   892: 84 89 ff 00              a2 = a1 & 0xff
   896: 33 06 02                 s1 = 0x2
   899: 53 29 c0 00 2d           jump @77 if a2 <u 192
      :                          @72
   904: 33 06 03                 s1 = 0x3
   907: 53 29 e0 00 25           jump @77 if a2 <u 224
      :                          @73
   912: 33 06 04                 s1 = 0x4
   915: 53 29 f0 00 1d           jump @77 if a2 <u 240
      :                          @74
   920: 33 06 05                 s1 = 0x5
   923: 53 29 f8 00 15           jump @77 if a2 <u 248
      :                          @75
   928: 33 06 06                 s1 = 0x6
   931: 53 29 fc 00 0d           jump @77 if a2 <u 252
      :                          @76
   936: 88 98 fe 00              a1 = a2 <u 0xfe
   940: 9a 86 08                 s1 = 0x8 - a1
   943: 01                       fallthrough
      :                          @77
   944: ac 65 f2 00              jump @104 if s0 <u s1
      :                          @78
   948: 64 68                    a1 = s1
   950: 50 10 16 e3 14           ra = 22, jump @454
      :                          @79 [@dyn 11]
   955: ae 56 28                 jump @83 if s1 >=u s0
      :                          @80
   958: 82 17                    a0 = u64 [sp]
   960: c8 67 07                 a0 = a0 + s1
   963: 7c 78                    a1 = u8 [a0]
   965: 51 08 36                 jump @85 if a1 == 0
      :                          @81
   968: 46 11 0e                 u8 [sp + 14] = 0
   971: 95 17 0e                 a0 = sp + 0xe
   974: 33 08 01                 a1 = 0x1
   977: 33 09                    a2 = 0
   979: 33 0a                    a3 = 0
   981: 0a 03                    ecalli 3 // 'write'
   983: 33 08                    a1 = 0
   985: 33 05                    s0 = 0
   987: 28 ae 00                 jump @100
      :                          @82
   990: 33 06                    s1 = 0
   992: 56 05 de                 jump @80 if s0 >u 0
      :                          @83
   995: 33 08                    a1 = 0
   997: 33 06 00 00 01           s1 = 0x10000
  1002: 01                       fallthrough
      :                          @84
  1003: 64 67                    a0 = s1
  1005: 82 10 20                 ra = u64 [sp + 0x20]
  1008: 82 15 18                 s0 = u64 [sp + 0x18]
  1011: 82 16 10                 s1 = u64 [sp + 0x10]
  1014: 95 11 28                 sp = sp + 0x28
  1017: 32 00                    ret
      :                          @85
  1019: e4 65 08                 a1 = maxu(s0, s1)
  1022: c9 68 08                 a1 = a1 - s1
  1025: 95 76 01                 s1 = a0 + 0x1
  1028: 33 07 01                 a0 = 0x1
  1031: e4 78 07                 a0 = maxu(a1, a0)
  1034: 33 09 02                 a2 = 0x2
  1037: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1040: ae 98 09                 jump @87 if a1 >=u a2
      :                          @86
  1043: 33 05                    s0 = 0
  1045: 33 07                    a0 = 0
  1047: 28 4f                    jump @97
      :                          @87
  1049: 7d 67                    a0 = i8 [s1]
  1051: 33 05 01                 s0 = 0x1
  1054: 59 07 37                 jump @94 if a0 >=s 0
      :                          @88
  1057: 84 77 ff 00              a0 = a0 & 0xff
  1061: 33 05 02                 s0 = 0x2
  1064: 53 27 c0 00 2d           jump @94 if a0 <u 192
      :                          @89
  1069: 33 05 03                 s0 = 0x3
  1072: 53 27 e0 00 25           jump @94 if a0 <u 224
      :                          @90
  1077: 33 05 04                 s0 = 0x4
  1080: 53 27 f0 00 1d           jump @94 if a0 <u 240
      :                          @91
  1085: 33 05 05                 s0 = 0x5
  1088: 53 27 f8 00 15           jump @94 if a0 <u 248
      :                          @92
  1093: 33 05 06                 s0 = 0x6
  1096: 53 27 fc 00 0d           jump @94 if a0 <u 252
      :                          @93
  1101: 88 77 fe 00              a0 = a0 <u 0xfe
  1105: 9a 75 08                 s0 = 0x8 - a0
  1108: 01                       fallthrough
      :                          @94
  1109: 7b 1a                    u64 [sp] = a3
  1111: ac 5a 4d                 jump @106 if a3 <u s0
      :                          @95
  1114: 64 67                    a0 = s1
  1116: 64 58                    a1 = s0
  1118: 50 10 18 3b 14           ra = 24, jump @454
      :                          @96 [@dyn 12]
  1123: 82 1a                    a3 = u64 [sp]
  1125: 01                       fallthrough
      :                          @97
  1126: c8 56 09                 a2 = s1 + s0
  1129: e4 5a 08                 a1 = maxu(a3, s0)
  1132: c9 58 08                 a1 = a1 - s0
  1135: e6 78 05                 s0 = minu(a1, a0)
  1138: 46 11 0e                 u8 [sp + 14] = 0
  1141: 95 17 0e                 a0 = sp + 0xe
  1144: 33 08 01                 a1 = 0x1
  1147: 64 96                    s1 = a2
  1149: 64 5a                    a3 = s0
  1151: 0a 03                    ecalli 3 // 'write'
  1153: 01                       fallthrough
      :                          @98
  1154: 55 15 21 21              jump @105 if s0 >=u 33
      :                          @99
  1158: 64 68                    a1 = s1
  1160: 01                       fallthrough
      :                          @100
  1161: 33 06 24 00 03           s1 = 0x30024
  1166: 33 07 24 00 03           a0 = 0x30024
  1171: 64 59                    a2 = s0
  1173: 50 10 1a 1d 0a           ra = 26, jump @263
      :                          @101 [@dyn 13]
  1178: 33 08 20                 a1 = 0x20
  1181: 28 4e ff                 jump @84
      :                          @102
  1184: 00                       trap
      :                          @103
  1185: 00                       trap
      :                          @104
  1186: 00                       trap
      :                          @105
  1187: 00                       trap
      :                          @106
  1188: 00                       trap
      :                          @107 [export #2: 'on_transfer']
  1189: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1193: 7b 10 88 02              u64 [sp + 0x288] = ra
  1197: 7b 15 80 02              u64 [sp + 0x280] = s0
  1201: 7b 16 78 02              u64 [sp + 0x278] = s1
  1205: 64 8c                    a5 = a1
  1207: 64 79                    a2 = a0
  1209: 33 02                    t0 = 0
  1211: 95 7b 04                 a4 = a0 + 0x4
  1214: 33 07 02                 a0 = 0x2
  1217: 7b 17 28                 u64 [sp + 0x28] = a0
  1220: 33 07 06                 a0 = 0x6
  1223: 7b 17 58                 u64 [sp + 0x58] = a0
  1226: 33 07 0a                 a0 = 0xa
  1229: 7b 17 20                 u64 [sp + 0x20] = a0
  1232: 33 07 58 00 01           a0 = 0x10058
  1237: 7b 17 18                 u64 [sp + 0x18] = a0
  1240: 33 07 80 00              a0 = 0x80
  1244: 7b 17 10                 u64 [sp + 0x10] = a0
  1247: 33 07 70 02 01           a0 = 0x10270
  1252: 7b 17 08                 u64 [sp + 0x8] = a0
  1255: 33 07 50 00 03           a0 = 0x30050
  1260: 95 77 00 00 01           a0 = a0 + 0x10000
  1265: 7b 17 50                 u64 [sp + 0x50] = a0
  1268: 33 07 f8 00 01           a0 = 0x100f8
  1273: 7b 17                    u64 [sp] = a0
  1275: 95 97 08                 a0 = a2 + 0x8
  1278: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1281: 95 98 0c                 a1 = a2 + 0xc
  1284: 7b 18 60                 u64 [sp + 0x60] = a1
  1287: 33 08 08                 a1 = 0x8
  1290: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1295: 7b 16 48                 u64 [sp + 0x48] = s1
  1298: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1302: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1306: 7b 1c 40                 u64 [sp + 0x40] = a5
  1309: 7b 19 38                 u64 [sp + 0x38] = a2
  1312: 7b 1b 30                 u64 [sp + 0x30] = a4
  1315: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1319: ac 8c c0 04              jump @155 if a5 <u a1
      :                          @108
  1323: 51 09 d5 04              jump @156 if a2 == 0
      :                          @109
  1327: 51 0b d1 04              jump @156 if a4 == 0
      :                          @110
  1331: 7c 97                    a0 = u8 [a2]
  1333: 7b 17 78                 u64 [sp + 0x78] = a0
  1336: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1339: 7b 17 68                 u64 [sp + 0x68] = a0
  1342: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1345: 7b 17 70                 u64 [sp + 0x70] = a0
  1348: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1351: 7b 17 80 00              u64 [sp + 0x80] = a0
  1355: 7c b7                    a0 = u8 [a4]
  1357: 7b 17 98 00              u64 [sp + 0x98] = a0
  1361: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1364: 7b 17 88 00              u64 [sp + 0x88] = a0
  1368: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1371: 7b 17 90 00              u64 [sp + 0x90] = a0
  1375: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1378: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1382: 51 0a 53                 jump @120 if a3 == 0
      :                          @111
  1385: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1389: 7d 77                    a0 = i8 [a0]
  1391: 33 05 01                 s0 = 0x1
  1394: 59 07 4a                 jump @121 if a0 >=s 0
      :                          @112
  1397: 84 77 ff 00              a0 = a0 & 0xff
  1401: 33 05 02                 s0 = 0x2
  1404: 33 06 c0 00              s1 = 0xc0
  1408: ac 67 33                 jump @118 if a0 <u s1
      :                          @113
  1411: 33 05 03                 s0 = 0x3
  1414: 33 06 e0 00              s1 = 0xe0
  1418: ac 67 29                 jump @118 if a0 <u s1
      :                          @114
  1421: 33 05 04                 s0 = 0x4
  1424: 33 06 f0 00              s1 = 0xf0
  1428: ac 67 1f                 jump @118 if a0 <u s1
      :                          @115
  1431: 33 05 05                 s0 = 0x5
  1434: 33 06 f8 00              s1 = 0xf8
  1438: ac 67 15                 jump @118 if a0 <u s1
      :                          @116
  1441: 33 05 06                 s0 = 0x6
  1444: 33 06 fc 00              s1 = 0xfc
  1448: ac 67 0b                 jump @118 if a0 <u s1
      :                          @117
  1451: 88 77 fe 00              a0 = a0 <u 0xfe
  1455: 9a 75 08                 s0 = 0x8 - a0
  1458: 01                       fallthrough
      :                          @118
  1459: ae 5a 09                 jump @121 if a3 >=u s0
      :                          @119
  1462: 28 31 04                 jump @155
      :                          @120
  1465: 33 05                    s0 = 0
  1467: 01                       fallthrough
      :                          @121
  1468: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1472: 64 58                    a1 = s0
  1474: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1478: 50 10 1c d3 12           ra = 28, jump @454
      :                          @122 [@dyn 14]
  1483: 33 03 98 00              t1 = 0x98
  1487: 33 02 04                 t0 = 0x4
  1490: 33 06 08                 s1 = 0x8
  1493: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1497: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1501: ae 7b 0a 04              jump @155 if a4 >=u a0
      :                          @123
  1505: 82 18 68                 a1 = u64 [sp + 0x68]
  1508: 97 88 08                 a1 = a1 << 0x8
  1511: 82 19 78                 a2 = u64 [sp + 0x78]
  1514: d4 98 08                 a1 = a1 | a2
  1517: 82 19 70                 a2 = u64 [sp + 0x70]
  1520: 97 99 10                 a2 = a2 << 0x10
  1523: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1527: 97 aa 18                 a3 = a3 << 0x18
  1530: d4 a9 09                 a2 = a2 | a3
  1533: d4 89 04                 t2 = a2 | a1
  1536: 82 18 88 00              a1 = u64 [sp + 0x88]
  1540: 97 88 08                 a1 = a1 << 0x8
  1543: 82 19 98 00              a2 = u64 [sp + 0x98]
  1547: d4 98 08                 a1 = a1 | a2
  1550: 82 19 90 00              a2 = u64 [sp + 0x90]
  1554: 97 99 10                 a2 = a2 << 0x10
  1557: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1561: 97 aa 18                 a3 = a3 << 0x18
  1564: d4 a9 09                 a2 = a2 | a3
  1567: d4 89 00                 ra = a2 | a1
  1570: e4 5c 08                 a1 = maxu(a5, s0)
  1573: c9 58 08                 a1 = a1 - s0
  1576: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1580: c8 59 09                 a2 = a2 + s0
  1583: 82 1a 60                 a3 = u64 [sp + 0x60]
  1586: c8 a5 05                 s0 = s0 + a3
  1589: 64 ba                    a3 = a4
  1591: 01                       fallthrough
      :                          @124
  1592: ac 68 af 03              jump @155 if a1 <u s1
      :                          @125
  1596: aa 25 c4 03              jump @156 if s0 == t0
      :                          @126
  1600: 51 05 c0 03              jump @156 if s0 == 0
      :                          @127
  1604: ac 38 a3 03              jump @155 if a1 <u t1
      :                          @128
  1608: 51 0a 17                 jump @131 if a3 == 0
      :                          @129
  1611: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1615: 95 55 98 00              s0 = s0 + 0x98
  1619: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1622: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1625: 52 07 df                 jump @124 if a0 != 0
      :                          @130
  1628: 28 8b 03                 jump @155
      :                          @131
  1631: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1634: 7c 98                    a1 = u8 [a2]
  1636: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1639: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1642: 8a 77 08                 i32 a0 = a0 << 0x8
  1645: d4 87 07                 a0 = a0 | a1
  1648: 8a a8 10                 i32 a1 = a3 << 0x10
  1651: 8a ba 18                 i32 a3 = a4 << 0x18
  1654: d4 a8 08                 a1 = a1 | a3
  1657: d4 87 07                 a0 = a0 | a1
  1660: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1664: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1667: 7c 58                    a1 = u8 [s0]
  1669: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1672: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1675: 8a 77 08                 i32 a0 = a0 << 0x8
  1678: d4 87 07                 a0 = a0 | a1
  1681: 8a a8 10                 i32 a1 = a3 << 0x10
  1684: 8a ba 18                 i32 a3 = a4 << 0x18
  1687: d4 a8 08                 a1 = a1 | a3
  1690: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1693: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1696: d4 87 07                 a0 = a0 | a1
  1699: 7b 17 98 00              u64 [sp + 0x98] = a0
  1703: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1706: 97 aa 10                 a3 = a3 << 0x10
  1709: 97 bb 08                 a4 = a4 << 0x8
  1712: d4 ba 0a                 a3 = a3 | a4
  1715: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1718: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1721: d4 a7 07                 a0 = a0 | a3
  1724: 97 77 10                 a0 = a0 << 0x10
  1727: 97 88 08                 a1 = a1 << 0x8
  1730: d4 b8 08                 a1 = a1 | a4
  1733: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1736: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1739: d4 87 07                 a0 = a0 | a1
  1742: 97 77 10                 a0 = a0 << 0x10
  1745: 97 aa 08                 a3 = a3 << 0x8
  1748: d4 ba 0a                 a3 = a3 | a4
  1751: d4 a7 07                 a0 = a0 | a3
  1754: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1757: 97 77 08                 a0 = a0 << 0x8
  1760: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1764: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1768: d4 87 07                 a0 = a0 | a1
  1771: 7b 17 90 00              u64 [sp + 0x90] = a0
  1775: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1779: 97 aa 10                 a3 = a3 << 0x10
  1782: 97 bb 08                 a4 = a4 << 0x8
  1785: d4 ba 0a                 a3 = a3 | a4
  1788: d4 a7 07                 a0 = a0 | a3
  1791: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1795: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1799: 95 98 10                 a1 = a2 + 0x10
  1802: 97 77 10                 a0 = a0 << 0x10
  1805: 97 aa 08                 a3 = a3 << 0x8
  1808: d4 ba 0a                 a3 = a3 | a4
  1811: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1815: d4 a7 07                 a0 = a0 | a3
  1818: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1822: 97 77 10                 a0 = a0 << 0x10
  1825: 97 bb 08                 a4 = a4 << 0x8
  1828: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1832: d4 ba 0a                 a3 = a3 | a4
  1835: d4 a7 07                 a0 = a0 | a3
  1838: 97 77 08                 a0 = a0 << 0x8
  1841: d4 97 07                 a0 = a0 | a2
  1844: 7b 17 88 00              u64 [sp + 0x88] = a0
  1848: 95 17 68 01              a0 = sp + 0x168
  1852: 33 09 80 00              a2 = 0x80
  1856: 64 45                    s0 = t2
  1858: 64 06                    s1 = ra
  1860: 50 10 1e 6e 07           ra = 30, jump @263
      :                          @132 [@dyn 15]
  1865: 95 17 e0 00              a0 = sp + 0xe0
  1869: 95 18 68 01              a1 = sp + 0x168
  1873: 33 09 80 00              a2 = 0x80
  1877: 50 10 20 5d 07           ra = 32, jump @263
      :                          @133 [@dyn 16]
  1882: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  1886: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  1890: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1894: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  1898: 82 17 98 00              a0 = u64 [sp + 0x98]
  1902: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  1906: 82 17 90 00              a0 = u64 [sp + 0x90]
  1910: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1914: 82 17 88 00              a0 = u64 [sp + 0x88]
  1918: 7b 17 60 01              u64 [sp + 0x160] = a0
  1922: 95 17 c8 00              a0 = sp + 0xc8
  1926: 7b 17 68 01              u64 [sp + 0x168] = a0
  1930: 82 17 28                 a0 = u64 [sp + 0x28]
  1933: 7b 17 70 01              u64 [sp + 0x170] = a0
  1937: 95 18 cc 00              a1 = sp + 0xcc
  1941: 7b 18 78 01              u64 [sp + 0x178] = a1
  1945: 7b 17 80 01              u64 [sp + 0x180] = a0
  1949: 95 18 d0 00              a1 = sp + 0xd0
  1953: 7b 18 88 01              u64 [sp + 0x188] = a1
  1957: 7b 17 90 01              u64 [sp + 0x190] = a0
  1961: 95 18 d4 00              a1 = sp + 0xd4
  1965: 7b 18 98 01              u64 [sp + 0x198] = a1
  1969: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1973: 95 17 d8 00              a0 = sp + 0xd8
  1977: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1981: 82 17 58                 a0 = u64 [sp + 0x58]
  1984: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  1988: 95 18 e0 00              a1 = sp + 0xe0
  1992: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1996: 82 18 20                 a1 = u64 [sp + 0x20]
  1999: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2003: 95 18 60 01              a1 = sp + 0x160
  2007: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2011: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2015: 82 17 18                 a0 = u64 [sp + 0x18]
  2018: 7b 17 28 02              u64 [sp + 0x228] = a0
  2022: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2027: 49 21 48 02              u64 [sp + 584] = 0
  2031: 95 17 68 01              a0 = sp + 0x168
  2035: 7b 17 38 02              u64 [sp + 0x238] = a0
  2039: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2044: 95 17 58 02              a0 = sp + 0x258
  2048: 95 18 28 02              a1 = sp + 0x228
  2052: 50 10 22 3a 04           ra = 34, jump @213
      :                          @134 [@dyn 17]
  2057: 82 15 60 02              s0 = u64 [sp + 0x260]
  2061: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2065: 82 16 58 02              s1 = u64 [sp + 0x258]
  2069: 33 07 02                 a0 = 0x2
  2072: 33 08                    a1 = 0
  2074: 33 09                    a2 = 0
  2076: 64 5a                    a3 = s0
  2078: 33 00 24                 ra = 0x24
  2081: 0a 64                    ecalli 100 // 'log'
  2083: 01                       fallthrough
      :                          @135 [@dyn 18]
  2084: 82 17 48                 a0 = u64 [sp + 0x48]
  2087: c8 67 07                 a0 = a0 + s1
  2090: 82 1b 50                 a4 = u64 [sp + 0x50]
  2093: 53 37 00 00 ff 1a        jump @140 if a0 <u 4294901760
      :                          @136
  2099: 82 b7                    a0 = u64 [a4]
  2101: c9 7b 08                 a1 = a4 - a0
  2104: ab 58 0f                 jump @140 if a1 != s0
      :                          @137
  2107: c9 67 08                 a1 = a0 - s1
  2110: 01                       fallthrough
      :                          @138
  2111: 82 b9                    a2 = u64 [a4]
  2113: ab 79 f2                 jump @136 if a2 != a0
      :                          @139
  2116: 7b b8                    u64 [a4] = a1
  2118: 01                       fallthrough
      :                          @140
  2119: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2123: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2127: 95 17 ec 01              a0 = sp + 0x1ec
  2131: 33 08 04                 a1 = 0x4
  2134: 95 19 e0 00              a2 = sp + 0xe0
  2138: 33 0a 80 00              a3 = 0x80
  2142: 0a 03                    ecalli 3 // 'write'
  2144: 0a                       ecalli 0 // 'gas'
  2145: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2149: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2153: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2158: 7b 17 08 02              u64 [sp + 0x208] = a0
  2162: 95 17 07 02              a0 = sp + 0x207
  2166: 33 08 01                 a1 = 0x1
  2169: 95 19 08 02              a2 = sp + 0x208
  2173: 33 0a 08                 a3 = 0x8
  2176: 0a 03                    ecalli 3 // 'write'
  2178: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2183: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2188: 49 21 88 01              u64 [sp + 392] = 0
  2192: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2202: 7b 17 90 01              u64 [sp + 0x190] = a0
  2206: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2211: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2216: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2221: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2226: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2230: 95 17 07 02              a0 = sp + 0x207
  2234: 7b 17 58 02              u64 [sp + 0x258] = a0
  2238: 82 17 10                 a0 = u64 [sp + 0x10]
  2241: 7b 17 60 02              u64 [sp + 0x260] = a0
  2245: 95 17 f8 01              a0 = sp + 0x1f8
  2249: 7b 17 68 02              u64 [sp + 0x268] = a0
  2253: 82 17 58                 a0 = u64 [sp + 0x58]
  2256: 7b 17 70 02              u64 [sp + 0x270] = a0
  2260: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2265: 82 17 08                 a0 = u64 [sp + 0x8]
  2268: 7b 17 28 02              u64 [sp + 0x228] = a0
  2272: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2277: 95 17 68 01              a0 = sp + 0x168
  2281: 7b 17 48 02              u64 [sp + 0x248] = a0
  2285: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2290: 95 17 58 02              a0 = sp + 0x258
  2294: 7b 17 38 02              u64 [sp + 0x238] = a0
  2298: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2303: 95 17 10 02              a0 = sp + 0x210
  2307: 95 18 28 02              a1 = sp + 0x228
  2311: 50 10 26 37 03           ra = 38, jump @213
      :                          @141 [@dyn 19]
  2316: 82 15 18 02              s0 = u64 [sp + 0x218]
  2320: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2324: 82 16 10 02              s1 = u64 [sp + 0x210]
  2328: 33 07 02                 a0 = 0x2
  2331: 33 08                    a1 = 0
  2333: 33 09                    a2 = 0
  2335: 64 5a                    a3 = s0
  2337: 33 00 28                 ra = 0x28
  2340: 0a 64                    ecalli 100 // 'log'
  2342: 01                       fallthrough
      :                          @142 [@dyn 20]
  2343: 82 1b 50                 a4 = u64 [sp + 0x50]
  2346: 82 17 48                 a0 = u64 [sp + 0x48]
  2349: c8 67 07                 a0 = a0 + s1
  2352: 53 37 00 00 ff 1a        jump @147 if a0 <u 4294901760
      :                          @143
  2358: 82 b7                    a0 = u64 [a4]
  2360: c9 7b 08                 a1 = a4 - a0
  2363: ab 58 0f                 jump @147 if a1 != s0
      :                          @144
  2366: c9 67 08                 a1 = a0 - s1
  2369: 01                       fallthrough
      :                          @145
  2370: 82 b9                    a2 = u64 [a4]
  2372: ab 79 f2                 jump @143 if a2 != a0
      :                          @146
  2375: 7b b8                    u64 [a4] = a1
  2377: 01                       fallthrough
      :                          @147
  2378: 95 17 f0 01              a0 = sp + 0x1f0
  2382: 7b 17 58 02              u64 [sp + 0x258] = a0
  2386: 82 17 58                 a0 = u64 [sp + 0x58]
  2389: 7b 17 60 02              u64 [sp + 0x260] = a0
  2393: 82 17                    a0 = u64 [sp]
  2395: 7b 17 68 01              u64 [sp + 0x168] = a0
  2399: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2404: 49 21 88 01              u64 [sp + 392] = 0
  2408: 95 17 58 02              a0 = sp + 0x258
  2412: 7b 17 78 01              u64 [sp + 0x178] = a0
  2416: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2421: 95 17 28 02              a0 = sp + 0x228
  2425: 95 18 68 01              a1 = sp + 0x168
  2429: 50 10 2a c1 02           ra = 42, jump @213
      :                          @148 [@dyn 21]
  2434: 82 15 30 02              s0 = u64 [sp + 0x230]
  2438: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2442: 82 16 28 02              s1 = u64 [sp + 0x228]
  2446: 33 07 02                 a0 = 0x2
  2449: 33 08                    a1 = 0
  2451: 33 09                    a2 = 0
  2453: 64 5a                    a3 = s0
  2455: 33 00 2c                 ra = 0x2c
  2458: 0a 64                    ecalli 100 // 'log'
  2460: 01                       fallthrough
      :                          @149 [@dyn 22]
  2461: 82 1b 50                 a4 = u64 [sp + 0x50]
  2464: 82 17 48                 a0 = u64 [sp + 0x48]
  2467: c8 67 07                 a0 = a0 + s1
  2470: 53 37 00 00 ff 1a        jump @154 if a0 <u 4294901760
      :                          @150
  2476: 82 b7                    a0 = u64 [a4]
  2478: c9 7b 08                 a1 = a4 - a0
  2481: ab 58 0f                 jump @154 if a1 != s0
      :                          @151
  2484: c9 67 08                 a1 = a0 - s1
  2487: 01                       fallthrough
      :                          @152
  2488: 82 b9                    a2 = u64 [a4]
  2490: ab 79 f2                 jump @150 if a2 != a0
      :                          @153
  2493: 7b b8                    u64 [a4] = a1
  2495: 01                       fallthrough
      :                          @154
  2496: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2500: 95 22 01                 t0 = t0 + 0x1
  2503: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2507: 95 77 98 00              a0 = a0 + 0x98
  2511: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2515: 82 1c 40                 a5 = u64 [sp + 0x40]
  2518: 82 19 38                 a2 = u64 [sp + 0x38]
  2521: 82 1b 30                 a4 = u64 [sp + 0x30]
  2524: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2528: 33 08 08                 a1 = 0x8
  2531: ae 8c 48 fb              jump @108 if a5 >=u a1
      :                          @155
  2535: 33 07 00 00 01           a0 = 0x10000
  2540: 33 08                    a1 = 0
  2542: 82 10 88 02              ra = u64 [sp + 0x288]
  2546: 82 15 80 02              s0 = u64 [sp + 0x280]
  2550: 82 16 78 02              s1 = u64 [sp + 0x278]
  2554: 95 11 90 02              sp = sp + 0x290
  2558: 32 00                    ret
      :                          @156
  2560: 00                       trap
      :                          @157
  2561: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2564: 7b 10 40                 u64 [sp + 0x40] = ra
  2567: 7b 15 38                 u64 [sp + 0x38] = s0
  2570: 7b 16 30                 u64 [sp + 0x30] = s1
  2573: c8 89 09                 a2 = a2 + a1
  2576: ac 89 52                 jump @165 if a2 <u a1
      :                          @158
  2579: 64 75                    s0 = a0
  2581: 82 77                    a0 = u64 [a0]
  2583: 97 78 01                 a1 = a0 << 0x1
  2586: 33 0a 08                 a3 = 0x8
  2589: e4 a9 09                 a2 = maxu(a2, a3)
  2592: e4 98 06                 s1 = maxu(a1, a2)
  2595: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2598: 98 88 3f                 a1 = a1 >> 0x3f
  2601: 51 07 12                 jump @160 if a0 == 0
      :                          @159
  2604: 82 59 08                 a2 = u64 [s0 + 0x8]
  2607: 7b 19 18                 u64 [sp + 0x18] = a2
  2610: 49 11 20 01              u64 [sp + 32] = 0x1
  2614: 7b 17 28                 u64 [sp + 0x28] = a0
  2617: 28 06                    jump @161
      :                          @160
  2619: 49 11 20                 u64 [sp + 32] = 0
  2622: 01                       fallthrough
      :                          @161
  2623: 64 17                    a0 = sp
  2625: 95 1a 18                 a3 = sp + 0x18
  2628: 64 69                    a2 = s1
  2630: 50 10 2e 32              ra = 46, jump @169
      :                          @162 [@dyn 23]
  2634: 82 18                    a1 = u64 [sp]
  2636: 82 17 08                 a0 = u64 [sp + 0x8]
  2639: 51 08 14                 jump @166 if a1 == 0
      :                          @163
  2642: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2652: aa 87 0d                 jump @167 if a0 == a1
      :                          @164
  2655: 52 07 18                 jump @168 if a0 != 0
      :                          @165
  2658: 00                       trap
      :                          @166
  2659: 7b 57 08                 u64 [s0 + 0x8] = a0
  2662: 7b 56                    u64 [s0] = s1
  2664: 01                       fallthrough
      :                          @167
  2665: 82 10 40                 ra = u64 [sp + 0x40]
  2668: 82 15 38                 s0 = u64 [sp + 0x38]
  2671: 82 16 30                 s1 = u64 [sp + 0x30]
  2674: 95 11 48                 sp = sp + 0x48
  2677: 32 00                    ret
      :                          @168
  2679: 00                       trap
      :                          @169
  2680: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2683: 7b 10 30                 u64 [sp + 0x30] = ra
  2686: 7b 15 28                 u64 [sp + 0x28] = s0
  2689: 7b 16 20                 u64 [sp + 0x20] = s1
  2692: 64 95                    s0 = a2
  2694: 64 72                    t0 = a0
  2696: 51 08 79                 jump @179 if a1 == 0
      :                          @170
  2699: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2702: 51 07 7c                 jump @180 if a0 == 0
      :                          @171
  2705: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2708: 51 09 aa 00              jump @187 if a2 == 0
      :                          @172
  2712: 82 a8                    a1 = u64 [a3]
  2714: 33 06 50 00 03           s1 = 0x30050
  2719: 33 03 00 00 01           t1 = 0x10000
  2724: c8 36 06                 s1 = s1 + t1
  2727: 01                       fallthrough
      :                          @173
  2728: 82 6a                    a3 = u64 [s1]
  2730: c8 5a 07                 a0 = a3 + s0
  2733: ac a7 cf 00              jump @193 if a0 <u a3
      :                          @174
  2737: 95 7b 01                 a4 = a0 + 0x1
  2740: 88 bc 01                 a5 = a4 <u 0x1
  2743: d8 b3 0b                 a4 = t1 <u a4
  2746: d4 cb 0b                 a4 = a4 | a5
  2749: 52 0b bf 00              jump @193 if a4 != 0
      :                          @175
  2753: 82 6b                    a4 = u64 [s1]
  2755: ab ab e5                 jump @173 if a4 != a3
      :                          @176
  2758: 7b 67                    u64 [s1] = a0
  2760: 33 0c                    a5 = 0
  2762: 7b 12 18                 u64 [sp + 0x18] = t0
  2765: 33 0a 50 00 03           a3 = 0x30050
  2770: 33 0b 00 00 01           a4 = 0x10000
  2775: 7b 1a                    u64 [sp] = a3
  2777: c8 ba 0a                 a3 = a3 + a4
  2780: c9 7a 07                 a0 = a3 - a0
  2783: 7b 17 10                 u64 [sp + 0x10] = a0
  2786: 7b 18 08                 u64 [sp + 0x8] = a1
  2789: 64 96                    s1 = a2
  2791: 50 10 30 cb 03           ra = 48, jump @263
      :                          @177 [@dyn 24]
  2796: 54 36 00 00 01 98 00     jump @194 if s1 <=u 65536
      :                          @178
  2803: 82 12 18                 t0 = u64 [sp + 0x18]
  2806: 82 18 10                 a1 = u64 [sp + 0x10]
  2809: 33 07                    a0 = 0
  2811: 7b 28 08                 u64 [t0 + 0x8] = a1
  2814: 28 b5 00                 jump @200
      :                          @179
  2817: 49 12 08                 u64 [t0 + 8] = 0
  2820: 33 07 01                 a0 = 0x1
  2823: 28 ac 00                 jump @200
      :                          @180
  2826: 33 09 50 00 03           a2 = 0x30050
  2831: 33 07 00 00 01           a0 = 0x10000
  2836: c8 79 09                 a2 = a2 + a0
  2839: 01                       fallthrough
      :                          @181
  2840: 82 9a                    a3 = u64 [a2]
  2842: c8 5a 08                 a1 = a3 + s0
  2845: ac a8 5f                 jump @193 if a1 <u a3
      :                          @182
  2848: 95 8b 01                 a4 = a1 + 0x1
  2851: 88 bc 01                 a5 = a4 <u 0x1
  2854: d8 b7 0b                 a4 = a0 <u a4
  2857: d4 cb 0b                 a4 = a4 | a5
  2860: 52 0b 50                 jump @193 if a4 != 0
      :                          @183
  2863: 82 9b                    a4 = u64 [a2]
  2865: ab ab e7                 jump @181 if a4 != a3
      :                          @184
  2868: 7b 98                    u64 [a2] = a1
  2870: 33 0c                    a5 = 0
  2872: 01                       fallthrough
      :                          @185
  2873: ab ab df                 jump @181 if a4 != a3
      :                          @186
  2876: 28 31                    jump @192
      :                          @187
  2878: 33 09 50 00 03           a2 = 0x30050
  2883: 33 07 00 00 01           a0 = 0x10000
  2888: c8 79 09                 a2 = a2 + a0
  2891: 01                       fallthrough
      :                          @188
  2892: 82 9a                    a3 = u64 [a2]
  2894: c8 5a 08                 a1 = a3 + s0
  2897: ac a8 2b                 jump @193 if a1 <u a3
      :                          @189
  2900: 95 8b 01                 a4 = a1 + 0x1
  2903: 88 bc 01                 a5 = a4 <u 0x1
  2906: d8 b7 0b                 a4 = a0 <u a4
  2909: d4 cb 0b                 a4 = a4 | a5
  2912: 52 0b 1c                 jump @193 if a4 != 0
      :                          @190
  2915: 82 9b                    a4 = u64 [a2]
  2917: ab ab e7                 jump @188 if a4 != a3
      :                          @191
  2920: 7b 98                    u64 [a2] = a1
  2922: 33 0c                    a5 = 0
  2924: 01                       fallthrough
      :                          @192
  2925: 33 07 50 00 04           a0 = 0x40050
  2930: c9 87 08                 a1 = a0 - a1
  2933: 33 07                    a0 = 0
  2935: 7b 28 08                 u64 [t0 + 0x8] = a1
  2938: 28 39                    jump @200
      :                          @193
  2940: 33 07 01                 a0 = 0x1
  2943: 7b 27 08                 u64 [t0 + 0x8] = a0
  2946: 28 31                    jump @200
      :                          @194
  2948: 64 6c                    a5 = s1
  2950: 82 17                    a0 = u64 [sp]
  2952: 95 77 00 00 01           a0 = a0 + 0x10000
  2957: 82 12 18                 t0 = u64 [sp + 0x18]
  2960: 82 16 08                 s1 = u64 [sp + 0x8]
  2963: 01                       fallthrough
      :                          @195
  2964: 82 78                    a1 = u64 [a0]
  2966: c9 87 09                 a2 = a0 - a1
  2969: ab 69 11                 jump @199 if a2 != s1
      :                          @196
  2972: c9 c8 09                 a2 = a1 - a5
  2975: 01                       fallthrough
      :                          @197
  2976: 82 7a                    a3 = u64 [a0]
  2978: ab 8a f2                 jump @195 if a3 != a1
      :                          @198
  2981: 7b 79                    u64 [a0] = a2
  2983: 33 0b                    a4 = 0
  2985: 01                       fallthrough
      :                          @199
  2986: 82 18 10                 a1 = u64 [sp + 0x10]
  2989: 33 07                    a0 = 0
  2991: 7b 28 08                 u64 [t0 + 0x8] = a1
  2994: 01                       fallthrough
      :                          @200
  2995: 7b 25 10                 u64 [t0 + 0x10] = s0
  2998: 7b 27                    u64 [t0] = a0
  3000: 82 10 30                 ra = u64 [sp + 0x30]
  3003: 82 15 28                 s0 = u64 [sp + 0x28]
  3006: 82 16 20                 s1 = u64 [sp + 0x20]
  3009: 95 11 38                 sp = sp + 0x38
  3012: 32 00                    ret
      :                          @201
  3014: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3017: 7b 10 40                 u64 [sp + 0x40] = ra
  3020: 7b 15 38                 u64 [sp + 0x38] = s0
  3023: 7b 16 30                 u64 [sp + 0x30] = s1
  3026: 95 88 01                 a1 = a1 + 0x1
  3029: 51 08 53                 jump @209 if a1 == 0
      :                          @202
  3032: 64 75                    s0 = a0
  3034: 82 77                    a0 = u64 [a0]
  3036: 97 79 01                 a2 = a0 << 0x1
  3039: 33 0a 08                 a3 = 0x8
  3042: e4 a8 08                 a1 = maxu(a1, a3)
  3045: e4 89 06                 s1 = maxu(a2, a1)
  3048: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3051: 98 88 3f                 a1 = a1 >> 0x3f
  3054: 51 07 12                 jump @204 if a0 == 0
      :                          @203
  3057: 82 59 08                 a2 = u64 [s0 + 0x8]
  3060: 7b 19 18                 u64 [sp + 0x18] = a2
  3063: 49 11 20 01              u64 [sp + 32] = 0x1
  3067: 7b 17 28                 u64 [sp + 0x28] = a0
  3070: 28 06                    jump @205
      :                          @204
  3072: 49 11 20                 u64 [sp + 32] = 0
  3075: 01                       fallthrough
      :                          @205
  3076: 64 17                    a0 = sp
  3078: 95 1a 18                 a3 = sp + 0x18
  3081: 64 69                    a2 = s1
  3083: 50 10 32 6d fe           ra = 50, jump @169
      :                          @206 [@dyn 25]
  3088: 82 18                    a1 = u64 [sp]
  3090: 82 17 08                 a0 = u64 [sp + 0x8]
  3093: 51 08 14                 jump @210 if a1 == 0
      :                          @207
  3096: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3106: aa 87 0d                 jump @211 if a0 == a1
      :                          @208
  3109: 52 07 18                 jump @212 if a0 != 0
      :                          @209
  3112: 00                       trap
      :                          @210
  3113: 7b 57 08                 u64 [s0 + 0x8] = a0
  3116: 7b 56                    u64 [s0] = s1
  3118: 01                       fallthrough
      :                          @211
  3119: 82 10 40                 ra = u64 [sp + 0x40]
  3122: 82 15 38                 s0 = u64 [sp + 0x38]
  3125: 82 16 30                 s1 = u64 [sp + 0x30]
  3128: 95 11 48                 sp = sp + 0x48
  3131: 32 00                    ret
      :                          @212
  3133: 00                       trap
      :                          @213
  3134: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3137: 7b 10 30                 u64 [sp + 0x30] = ra
  3140: 7b 15 28                 u64 [sp + 0x28] = s0
  3143: 7b 16 20                 u64 [sp + 0x20] = s1
  3146: 64 89                    a2 = a1
  3148: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3151: 64 75                    s0 = a0
  3153: 51 0a 35                 jump @218 if a3 == 0
      :                          @214
  3156: 82 98                    a1 = u64 [a2]
  3158: 33 07                    a0 = 0
  3160: 95 8b 08                 a4 = a1 + 0x8
  3163: 01                       fallthrough
      :                          @215
  3164: 82 bc                    a5 = u64 [a4]
  3166: c8 c7 07                 a0 = a0 + a5
  3169: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3172: 95 bb 10                 a4 = a4 + 0x10
  3175: 52 0a f5                 jump @215 if a3 != 0
      :                          @216
  3178: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3181: 51 0a 24                 jump @220 if a3 == 0
      :                          @217
  3184: 82 88 08                 a1 = u64 [a1 + 0x8]
  3187: 8e 88                    a1 = a1 >u 0
  3189: 88 7a 10                 a3 = a0 <u 0x10
  3192: 85 aa 01                 a3 = a3 ^ 0x1
  3195: d4 a8 08                 a1 = a1 | a3
  3198: 89 7a                    a3 = a0 <s 0
  3200: e0 a8 08                 a1 = a1 & ~a3
  3203: 52 08 0a                 jump @219 if a1 != 0
      :                          @218
  3206: 33 07                    a0 = 0
  3208: 33 08 01                 a1 = 0x1
  3211: 28 4a                    jump @228
      :                          @219
  3213: 97 77 01                 a0 = a0 << 0x1
  3216: 01                       fallthrough
      :                          @220
  3217: 51 07 40                 jump @227 if a0 == 0
      :                          @221
  3220: 57 07 78                 jump @233 if a0 <s 0
      :                          @222
  3223: 64 52                    t0 = s0
  3225: 33 0b 50 00 03           a4 = 0x30050
  3230: 33 08 00 00 01           a1 = 0x10000
  3235: c8 8b 0b                 a4 = a4 + a1
  3238: 01                       fallthrough
      :                          @223
  3239: 82 bc                    a5 = u64 [a4]
  3241: c8 7c 0a                 a3 = a5 + a0
  3244: ac ca 5e                 jump @231 if a3 <u a5
      :                          @224
  3247: 95 a5 01                 s0 = a3 + 0x1
  3250: 88 56 01                 s1 = s0 <u 0x1
  3253: d8 58 05                 s0 = a1 <u s0
  3256: d4 65 05                 s0 = s0 | s1
  3259: 52 05 4f                 jump @231 if s0 != 0
      :                          @225
  3262: 82 b6                    s1 = u64 [a4]
  3264: ab c6 e7                 jump @223 if s1 != a5
      :                          @226
  3267: 7b ba                    u64 [a4] = a3
  3269: 33 08 50 00 04           a1 = 0x40050
  3274: c9 a8 08                 a1 = a1 - a3
  3277: 64 25                    s0 = t0
  3279: 28 06                    jump @228
      :                          @227
  3281: 33 08 01                 a1 = 0x1
  3284: 01                       fallthrough
      :                          @228
  3285: 7b 17                    u64 [sp] = a0
  3287: 7b 18 08                 u64 [sp + 0x8] = a1
  3290: 49 11 10                 u64 [sp + 16] = 0
  3293: 33 08 18 01 01           a1 = 0x10118
  3298: 64 17                    a0 = sp
  3300: 50 10 34 1a 06           ra = 52, jump @345
      :                          @229 [@dyn 26]
  3305: 52 07 22                 jump @232 if a0 != 0
      :                          @230
  3308: 82 17 10                 a0 = u64 [sp + 0x10]
  3311: 82 18 08                 a1 = u64 [sp + 0x8]
  3314: 82 19                    a2 = u64 [sp]
  3316: 7b 57 10                 u64 [s0 + 0x10] = a0
  3319: 7b 58 08                 u64 [s0 + 0x8] = a1
  3322: 7b 59                    u64 [s0] = a2
  3324: 82 10 30                 ra = u64 [sp + 0x30]
  3327: 82 15 28                 s0 = u64 [sp + 0x28]
  3330: 82 16 20                 s1 = u64 [sp + 0x20]
  3333: 95 11 38                 sp = sp + 0x38
  3336: 32 00                    ret
      :                          @231
  3338: 00                       trap
      :                          @232
  3339: 00                       trap
      :                          @233
  3340: 00                       trap
      :                          @234 [@dyn 27]
  3341: 82 72                    t0 = u64 [a0]
  3343: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3348: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3353: ac 9a 28                 jump @240 if a3 <u a2
      :                          @235
  3356: 82 77 08                 a0 = u64 [a0 + 0x8]
  3359: 33 09 50 00 03           a2 = 0x30050
  3364: 95 99 00 00 01           a2 = a2 + 0x10000
  3369: 01                       fallthrough
      :                          @236
  3370: 82 9a                    a3 = u64 [a2]
  3372: c9 a9 0b                 a4 = a2 - a3
  3375: ab 7b 12                 jump @240 if a4 != a0
      :                          @237
  3378: c9 2a 0b                 a4 = a3 - t0
  3381: 01                       fallthrough
      :                          @238
  3382: 82 9c                    a5 = u64 [a2]
  3384: ab ac f2                 jump @236 if a5 != a3
      :                          @239
  3387: 7b 9b                    u64 [a2] = a4
  3389: 33 08                    a1 = 0
  3391: 32 00                    ret
      :                          @240
  3393: 32 00                    ret
      :                          @241 [@dyn 28]
  3395: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3398: 7b 10 18                 u64 [sp + 0x18] = ra
  3401: 7b 15 10                 u64 [sp + 0x10] = s0
  3404: 7b 16 08                 u64 [sp + 0x8] = s1
  3407: 64 75                    s0 = a0
  3409: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3412: 82 77                    a0 = u64 [a0]
  3414: c9 a7 07                 a0 = a0 - a3
  3417: 64 96                    s1 = a2
  3419: ac 97 2a                 jump @244 if a0 <u a2
      :                          @242
  3422: 7b 1a                    u64 [sp] = a3
  3424: 82 57 08                 a0 = u64 [s0 + 0x8]
  3427: c8 a7 07                 a0 = a0 + a3
  3430: 64 69                    a2 = s1
  3432: 50 10 3a 4a 01           ra = 58, jump @263
      :                          @243 [@dyn 29]
  3437: 82 17                    a0 = u64 [sp]
  3439: c8 76 06                 s1 = s1 + a0
  3442: 7b 56 10                 u64 [s0 + 0x10] = s1
  3445: 33 07                    a0 = 0
  3447: 82 10 18                 ra = u64 [sp + 0x18]
  3450: 82 15 10                 s0 = u64 [sp + 0x10]
  3453: 82 16 08                 s1 = u64 [sp + 0x8]
  3456: 95 11 20                 sp = sp + 0x20
  3459: 32 00                    ret
      :                          @244
  3461: 64 57                    a0 = s0
  3463: 7b 18                    u64 [sp] = a1
  3465: 64 a8                    a1 = a3
  3467: 64 69                    a2 = s1
  3469: 50 10 3c 74 fc           ra = 60, jump @157
      :                          @245 [@dyn 30]
  3474: 82 18                    a1 = u64 [sp]
  3476: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3479: 28 c7                    jump @242
      :                          @246 [@dyn 31]
  3481: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3484: 7b 10 20                 u64 [sp + 0x20] = ra
  3487: 7b 15 18                 u64 [sp + 0x18] = s0
  3490: 7b 16 10                 u64 [sp + 0x10] = s1
  3493: 64 86                    s1 = a1
  3495: 83 88                    i32 a1 = a1 + 0
  3497: 33 09 80 00              a2 = 0x80
  3501: 64 7a                    a3 = a0
  3503: ae 98 2b                 jump @251 if a1 >=u a2
      :                          @247
  3506: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3509: 82 a7                    a0 = u64 [a3]
  3511: ab 78 12                 jump @250 if a1 != a0
      :                          @248
  3514: 64 a7                    a0 = a3
  3516: 64 a5                    s0 = a3
  3518: 50 10 40 08 fe           ra = 64, jump @201
      :                          @249 [@dyn 32]
  3523: 64 5a                    a3 = s0
  3525: 82 58 10                 a1 = u64 [s0 + 0x10]
  3528: 01                       fallthrough
      :                          @250
  3529: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3532: c8 87 07                 a0 = a0 + a1
  3535: 78 76                    u8 [a0] = s1
  3537: 95 88 01                 a1 = a1 + 0x1
  3540: 7b a8 10                 u64 [a3 + 0x10] = a1
  3543: 28 ab 00                 jump @259
      :                          @251
  3546: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3549: 48 11 0c                 u32 [sp + 12] = 0
  3552: 52 07 1c                 jump @253 if a0 != 0
      :                          @252
  3555: 98 67 06                 a0 = s1 >> 0x6
  3558: 86 77 c0 00              a0 = a0 | 0xc0
  3562: 78 17 0c                 u8 [sp + 0xc] = a0
  3565: 84 67 3f                 a0 = s1 & 0x3f
  3568: 86 77 80 00              a0 = a0 | 0x80
  3572: 78 17 0d                 u8 [sp + 0xd] = a0
  3575: 33 06 02                 s1 = 0x2
  3578: 28 63                    jump @256
      :                          @253
  3580: 8b 67 10                 i32 a0 = s1 >> 0x10
  3583: 52 07 29                 jump @255 if a0 != 0
      :                          @254
  3586: 98 67 0c                 a0 = s1 >> 0xc
  3589: 86 77 e0 00              a0 = a0 | 0xe0
  3593: 78 17 0c                 u8 [sp + 0xc] = a0
  3596: 97 67 34                 a0 = s1 << 0x34
  3599: 98 77 3a                 a0 = a0 >> 0x3a
  3602: 95 77 80 00              a0 = a0 + 0x80
  3606: 78 17 0d                 u8 [sp + 0xd] = a0
  3609: 84 67 3f                 a0 = s1 & 0x3f
  3612: 86 77 80 00              a0 = a0 | 0x80
  3616: 78 17 0e                 u8 [sp + 0xe] = a0
  3619: 33 06 03                 s1 = 0x3
  3622: 28 37                    jump @256
      :                          @255
  3624: 97 67 2b                 a0 = s1 << 0x2b
  3627: 98 77 3d                 a0 = a0 >> 0x3d
  3630: 95 77 f0 00              a0 = a0 + 0xf0
  3634: 78 17 0c                 u8 [sp + 0xc] = a0
  3637: 97 67 2e                 a0 = s1 << 0x2e
  3640: 98 77 3a                 a0 = a0 >> 0x3a
  3643: 95 77 80 00              a0 = a0 + 0x80
  3647: 78 17 0d                 u8 [sp + 0xd] = a0
  3650: 97 67 34                 a0 = s1 << 0x34
  3653: 98 77 3a                 a0 = a0 >> 0x3a
  3656: 95 77 80 00              a0 = a0 + 0x80
  3660: 78 17 0e                 u8 [sp + 0xe] = a0
  3663: 84 67 3f                 a0 = s1 & 0x3f
  3666: 86 77 80 00              a0 = a0 | 0x80
  3670: 78 17 0f                 u8 [sp + 0xf] = a0
  3673: 33 06 04                 s1 = 0x4
  3676: 01                       fallthrough
      :                          @256
  3677: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3680: 82 a7                    a0 = u64 [a3]
  3682: c9 57 07                 a0 = a0 - s0
  3685: ac 67 2d                 jump @260 if a0 <u s1
      :                          @257
  3688: 7b 1a                    u64 [sp] = a3
  3690: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3693: c8 57 07                 a0 = a0 + s0
  3696: 95 18 0c                 a1 = sp + 0xc
  3699: 64 69                    a2 = s1
  3701: 50 10 42 3d              ra = 66, jump @263
      :                          @258 [@dyn 33]
  3705: c8 56 06                 s1 = s1 + s0
  3708: 82 17                    a0 = u64 [sp]
  3710: 7b 76 10                 u64 [a0 + 0x10] = s1
  3713: 01                       fallthrough
      :                          @259
  3714: 33 07                    a0 = 0
  3716: 82 10 20                 ra = u64 [sp + 0x20]
  3719: 82 15 18                 s0 = u64 [sp + 0x18]
  3722: 82 16 10                 s1 = u64 [sp + 0x10]
  3725: 95 11 28                 sp = sp + 0x28
  3728: 32 00                    ret
      :                          @260
  3730: 64 a7                    a0 = a3
  3732: 64 58                    a1 = s0
  3734: 64 69                    a2 = s1
  3736: 64 a5                    s0 = a3
  3738: 50 10 44 67 fb           ra = 68, jump @157
      :                          @261 [@dyn 34]
  3743: 64 5a                    a3 = s0
  3745: 82 55 10                 s0 = u64 [s0 + 0x10]
  3748: 28 c4                    jump @257
      :                          @262 [@dyn 35]
  3750: 64 8a                    a3 = a1
  3752: 33 08 18 01 01           a1 = 0x10118
  3757: 64 a9                    a2 = a3
  3759: 28 4f 04                 jump @345
      :                          @263
  3762: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3765: 7b 10 18                 u64 [sp + 0x18] = ra
  3768: 7b 15 10                 u64 [sp + 0x10] = s0
  3771: 7b 16 08                 u64 [sp + 0x8] = s1
  3774: 53 19 10 64              jump @272 if a2 <u 16
      :                          @264
  3778: 8d 7a                    i32 a3 = -a0
  3780: 84 a2 07                 t0 = a3 & 0x7
  3783: c8 27 0b                 a4 = a0 + t0
  3786: 51 02 15                 jump @267 if t0 == 0
      :                          @265
  3789: 64 8c                    a5 = a1
  3791: 64 75                    s0 = a0
  3793: 01                       fallthrough
      :                          @266
  3794: 7c ca                    a3 = u8 [a5]
  3796: 78 5a                    u8 [s0] = a3
  3798: 95 55 01                 s0 = s0 + 0x1
  3801: 95 cc 01                 a5 = a5 + 0x1
  3804: ac b5 f6                 jump @266 if s0 <u a4
      :                          @267
  3807: c8 28 03                 t1 = a1 + t0
  3810: c9 29 02                 t0 = a2 - t0
  3813: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3816: 84 38 07                 a1 = t1 & 0x7
  3819: c8 4b 0a                 a3 = a4 + t2
  3822: 51 08 3b                 jump @274 if a1 == 0
      :                          @268
  3825: 58 04 4b                 jump @277 if t2 <=s 0
      :                          @269
  3828: 97 38 03                 a1 = t1 << 0x3
  3831: 84 80 38                 ra = a1 & 0x38
  3834: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3837: 82 c5                    s0 = u64 [a5]
  3839: 8d 88                    i32 a1 = -a1
  3841: 84 88 38                 a1 = a1 & 0x38
  3844: 95 cc 08                 a5 = a5 + 0x8
  3847: 01                       fallthrough
      :                          @270
  3848: 82 c6                    s1 = u64 [a5]
  3850: d0 05 05                 s0 = s0 >> ra
  3853: cf 86 09                 a2 = s1 << a1
  3856: d4 59 09                 a2 = a2 | s0
  3859: 7b b9                    u64 [a4] = a2
  3861: 95 bb 08                 a4 = a4 + 0x8
  3864: 95 cc 08                 a5 = a5 + 0x8
  3867: 64 65                    s0 = s1
  3869: ac ab eb                 jump @270 if a4 <u a3
      :                          @271
  3872: 28 1c                    jump @277
      :                          @272
  3874: 64 7a                    a3 = a0
  3876: 52 09 21                 jump @278 if a2 != 0
      :                          @273
  3879: 28 2f                    jump @280
      :                          @274
  3881: 58 04 13                 jump @277 if t2 <=s 0
      :                          @275
  3884: 64 38                    a1 = t1
  3886: 01                       fallthrough
      :                          @276
  3887: 82 89                    a2 = u64 [a1]
  3889: 7b b9                    u64 [a4] = a2
  3891: 95 bb 08                 a4 = a4 + 0x8
  3894: 95 88 08                 a1 = a1 + 0x8
  3897: ac ab f6                 jump @276 if a4 <u a3
      :                          @277
  3900: c8 43 08                 a1 = t1 + t2
  3903: 84 29 07                 a2 = t0 & 0x7
  3906: 51 09 14                 jump @280 if a2 == 0
      :                          @278
  3909: c8 a9 09                 a2 = a2 + a3
  3912: 01                       fallthrough
      :                          @279
  3913: 7c 8b                    a4 = u8 [a1]
  3915: 78 ab                    u8 [a3] = a4
  3917: 95 aa 01                 a3 = a3 + 0x1
  3920: 95 88 01                 a1 = a1 + 0x1
  3923: ac 9a f6                 jump @279 if a3 <u a2
      :                          @280
  3926: 82 10 18                 ra = u64 [sp + 0x18]
  3929: 82 15 10                 s0 = u64 [sp + 0x10]
  3932: 82 16 08                 s1 = u64 [sp + 0x8]
  3935: 95 11 20                 sp = sp + 0x20
  3938: 32 00                    ret
      :                          @281 [@dyn 36]
  3940: 82 77                    a0 = u64 [a0]
  3942: 01                       fallthrough
      :                          @282
  3943: 28                       jump @282
      :                          @283
  3944: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3947: 7b 10 50                 u64 [sp + 0x50] = ra
  3950: 7b 15 48                 u64 [sp + 0x48] = s0
  3953: 7b 16 40                 u64 [sp + 0x40] = s1
  3956: 7b 18                    u64 [sp] = a1
  3958: 98 79 04                 a2 = a0 >> 0x4
  3961: 33 08 27                 a1 = 0x27
  3964: 53 29 71 02 81 00        jump @286 if a2 <u 625
      :                          @284
  3970: 33 08 27                 a1 = 0x27
  3973: 95 1a 3e                 a3 = sp + 0x3e
  3976: 3a 09 00 00 03           a2 = u64 [0x30000]
  3981: 7b 19 10                 u64 [sp + 0x10] = a2
  3984: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3990: 33 04 7b 14              t2 = 0x147b
  3994: 33 0b 8c 01 01           a4 = 0x1018c
  3999: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4005: 01                       fallthrough
      :                          @285
  4006: 64 72                    t0 = a0
  4008: 82 17 10                 a0 = u64 [sp + 0x10]
  4011: d6 72 07                 a0 = t0 mulhu a0
  4014: 98 77 0b                 a0 = a0 >> 0xb
  4017: 82 19 08                 a2 = u64 [sp + 0x8]
  4020: c0 97 0c                 i32 a5 = a0 * a2
  4023: c8 2c 06                 s1 = a5 + t0
  4026: 97 6c 30                 a5 = s1 << 0x30
  4029: 98 cc 32                 a5 = a5 >> 0x32
  4032: ca 4c 0c                 a5 = a5 * t2
  4035: 98 c3 11                 t1 = a5 >> 0x11
  4038: 98 cc 10                 a5 = a5 >> 0x10
  4041: 84 cc fe 07              a5 = a5 & 0x7fe
  4045: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4048: c8 69 09                 a2 = a2 + s1
  4051: 97 99 31                 a2 = a2 << 0x31
  4054: 98 99 30                 a2 = a2 >> 0x30
  4057: c8 bc 0c                 a5 = a5 + a4
  4060: 7c c6                    s1 = u8 [a5]
  4062: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4065: c8 b9 09                 a2 = a2 + a4
  4068: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4071: 7c 99                    a2 = u8 [a2]
  4073: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4076: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4079: 78 a5 01                 u8 [a3 + 0x1] = s0
  4082: 78 a9                    u8 [a3] = a2
  4084: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4087: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4090: ac 20 ac                 jump @285 if ra <u t0
      :                          @286
  4093: 54 17 63 3b              jump @288 if a0 <=u 99
      :                          @287
  4097: 97 79 30                 a2 = a0 << 0x30
  4100: 98 99 32                 a2 = a2 >> 0x32
  4103: 96 99 7b 14              a2 = a2 * 0x147b
  4107: 98 99 11                 a2 = a2 >> 0x11
  4110: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4113: c8 a7 07                 a0 = a0 + a3
  4116: 97 77 31                 a0 = a0 << 0x31
  4119: 98 77 30                 a0 = a0 >> 0x30
  4122: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4125: 33 0a 8c 01 01           a3 = 0x1018c
  4130: c8 a7 07                 a0 = a0 + a3
  4133: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4136: 7c 77                    a0 = u8 [a0]
  4138: 95 1b 19                 a4 = sp + 0x19
  4141: c8 8b 0b                 a4 = a4 + a1
  4144: 78 ba 01                 u8 [a4 + 0x1] = a3
  4147: 78 b7                    u8 [a4] = a0
  4149: 64 97                    a0 = a2
  4151: 01                       fallthrough
      :                          @288
  4152: 55 17 0a 14              jump @290 if a0 >=u 10
      :                          @289
  4156: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4159: 95 19 19                 a2 = sp + 0x19
  4162: c8 89 09                 a2 = a2 + a1
  4165: 83 77 30                 i32 a0 = a0 + 0x30
  4168: 78 97                    u8 [a2] = a0
  4170: 28 21                    jump @291
      :                          @290
  4172: 97 77 01                 a0 = a0 << 0x1
  4175: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4178: 33 09 8c 01 01           a2 = 0x1018c
  4183: c8 97 07                 a0 = a0 + a2
  4186: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4189: 7c 77                    a0 = u8 [a0]
  4191: 95 1a 19                 a3 = sp + 0x19
  4194: c8 8a 0a                 a3 = a3 + a1
  4197: 78 a9 01                 u8 [a3 + 0x1] = a2
  4200: 78 a7                    u8 [a3] = a0
  4202: 01                       fallthrough
      :                          @291
  4203: 95 1a 19                 a3 = sp + 0x19
  4206: c8 8a 0a                 a3 = a3 + a1
  4209: 9a 8b 27                 a4 = 0x27 - a1
  4212: 33 08 48 01 01           a1 = 0x10148
  4217: 82 17                    a0 = u64 [sp]
  4219: 33 09                    a2 = 0
  4221: 50 10 4a 12              ra = 74, jump @293
      :                          @292 [@dyn 37]
  4225: 82 10 50                 ra = u64 [sp + 0x50]
  4228: 82 15 48                 s0 = u64 [sp + 0x48]
  4231: 82 16 40                 s1 = u64 [sp + 0x40]
  4234: 95 11 58                 sp = sp + 0x58
  4237: 32 00                    ret
      :                          @293
  4239: 95 11 98                 sp = sp + 0xffffffffffffff98
  4242: 7b 10 60                 u64 [sp + 0x60] = ra
  4245: 7b 15 58                 u64 [sp + 0x58] = s0
  4248: 7b 16 50                 u64 [sp + 0x50] = s1
  4251: 80 73 34                 t1 = u32 [a0 + 0x34]
  4254: 7b 1a 20                 u64 [sp + 0x20] = a3
  4257: 64 9c                    a5 = a2
  4259: 84 36 01                 s1 = t1 & 0x1
  4262: 33 02 2b                 t0 = 0x2b
  4265: 33 09 00 00 11           a2 = 0x110000
  4270: 84 3a 04                 a3 = t1 & 0x4
  4273: 7b 1b 28                 u64 [sp + 0x28] = a4
  4276: c8 b6 04                 t2 = s1 + a4
  4279: 7b 1c 30                 u64 [sp + 0x30] = a5
  4282: 52 0a 10                 jump @296 if a3 != 0
      :                          @294
  4285: 49 11 38                 u64 [sp + 56] = 0
  4288: 82 78                    a1 = u64 [a0]
  4290: 94 69 2b                 a2 = 0x2b if s1 != 0
  4293: 52 08 35                 jump @300 if a1 != 0
      :                          @295
  4296: 28 56                    jump @305
      :                          @296
  4298: 7b 18 38                 u64 [sp + 0x38] = a1
  4301: 33 09                    a2 = 0
  4303: 51 0c 1b                 jump @299 if a5 == 0
      :                          @297
  4306: 82 1b 38                 a4 = u64 [sp + 0x38]
  4309: 01                       fallthrough
      :                          @298
  4310: 7d b5                    s0 = i8 [a4]
  4312: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4315: 85 5a 01                 a3 = s0 ^ 0x1
  4318: c8 a9 09                 a2 = a2 + a3
  4321: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4324: 95 bb 01                 a4 = a4 + 0x1
  4327: 52 0c ef                 jump @298 if a5 != 0
      :                          @299
  4330: c8 94 04                 t2 = t2 + a2
  4333: 33 09 00 00 11           a2 = 0x110000
  4338: 82 78                    a1 = u64 [a0]
  4340: db 62 09                 a2 = t0 if s1 != 0
  4343: 51 08 27                 jump @305 if a1 == 0
      :                          @300
  4346: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4349: ae a4 21                 jump @305 if t2 >=u a3
      :                          @301
  4352: 84 38 08                 a1 = t1 & 0x8
  4355: 52 08 50                 jump @308 if a1 != 0
      :                          @302
  4358: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4361: c9 4a 0a                 a3 = a3 - t2
  4364: 7b 19 18                 u64 [sp + 0x18] = a2
  4367: 5a 16 01 9d 00           jump @315 if s1 >s 1
      :                          @303
  4372: 52 06 aa 00              jump @317 if s1 != 0
      :                          @304
  4376: 7b 1a 10                 u64 [sp + 0x10] = a3
  4379: 28 a9 00                 jump @318
      :                          @305
  4382: 82 75 20                 s0 = u64 [a0 + 0x20]
  4385: 82 76 28                 s1 = u64 [a0 + 0x28]
  4388: 64 57                    a0 = s0
  4390: 64 68                    a1 = s1
  4392: 82 1a 38                 a3 = u64 [sp + 0x38]
  4395: 82 1b 30                 a4 = u64 [sp + 0x30]
  4398: 50 10 4c 6c 01           ra = 76, jump @338
      :                          @306 [@dyn 38]
  4403: 33 08 01                 a1 = 0x1
  4406: 52 07 bb 00              jump @323 if a0 != 0
      :                          @307
  4410: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4413: 64 57                    a0 = s0
  4415: 82 18 20                 a1 = u64 [sp + 0x20]
  4418: 82 19 28                 a2 = u64 [sp + 0x28]
  4421: 82 10 60                 ra = u64 [sp + 0x60]
  4424: 82 15 58                 s0 = u64 [sp + 0x58]
  4427: 82 16 50                 s1 = u64 [sp + 0x50]
  4430: 95 11 68                 sp = sp + 0x68
  4433: 32 0c                    jump [a5]
      :                          @308
  4435: 7b 1a 40                 u64 [sp + 0x40] = a3
  4438: 64 45                    s0 = t2
  4440: 81 78 30                 a1 = i32 [a0 + 0x30]
  4443: 7b 18 10                 u64 [sp + 0x10] = a1
  4446: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4449: 7b 1a 08                 u64 [sp + 0x8] = a3
  4452: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4455: 82 78 28                 a1 = u64 [a0 + 0x28]
  4458: 48 17 30 30              u32 [a0 + 48] = 0x30
  4462: 7b 17                    u64 [sp] = a0
  4464: 46 17 38 01              u8 [a0 + 56] = 0x1
  4468: 7b 1a 48                 u64 [sp + 0x48] = a3
  4471: 64 a7                    a0 = a3
  4473: 64 86                    s1 = a1
  4475: 82 1a 38                 a3 = u64 [sp + 0x38]
  4478: 82 1b 30                 a4 = u64 [sp + 0x30]
  4481: 50 10 4e 19 01           ra = 78, jump @338
      :                          @309 [@dyn 39]
  4486: 52 07 67                 jump @322 if a0 != 0
      :                          @310
  4489: 82 17 40                 a0 = u64 [sp + 0x40]
  4492: c9 57 05                 s0 = a0 - s0
  4495: 95 55 01                 s0 = s0 + 0x1
  4498: 01                       fallthrough
      :                          @311
  4499: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4502: 51 05 c6 00              jump @333 if s0 == 0
      :                          @312
  4506: 82 69 20                 a2 = u64 [s1 + 0x20]
  4509: 33 08 30                 a1 = 0x30
  4512: 82 17 48                 a0 = u64 [sp + 0x48]
  4515: b4 90 01 50              ra = 80, jump [a2]
      :                          @313 [@dyn 40]
  4519: 51 07 ec                 jump @311 if a0 == 0
      :                          @314
  4522: 28 43                    jump @322
      :                          @315
  4524: 52 16 02 12              jump @317 if s1 != 2
      :                          @316
  4528: 98 a6 01                 s1 = a3 >> 0x1
  4531: 95 a8 01                 a1 = a3 + 0x1
  4534: 98 88 01                 a1 = a1 >> 0x1
  4537: 7b 18 10                 u64 [sp + 0x10] = a1
  4540: 28 08                    jump @318
      :                          @317
  4542: 64 a6                    s1 = a3
  4544: 49 11 10                 u64 [sp + 16] = 0
  4547: 01                       fallthrough
      :                          @318
  4548: 82 78 20                 a1 = u64 [a0 + 0x20]
  4551: 7b 18 48                 u64 [sp + 0x48] = a1
  4554: 82 75 28                 s0 = u64 [a0 + 0x28]
  4557: 81 77 30                 a0 = i32 [a0 + 0x30]
  4560: 7b 17 40                 u64 [sp + 0x40] = a0
  4563: 95 66 01                 s1 = s1 + 0x1
  4566: 01                       fallthrough
      :                          @319
  4567: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4570: 51 06 27                 jump @324 if s1 == 0
      :                          @320
  4573: 82 59 20                 a2 = u64 [s0 + 0x20]
  4576: 82 17 48                 a0 = u64 [sp + 0x48]
  4579: 82 18 40                 a1 = u64 [sp + 0x40]
  4582: b4 90 01 52              ra = 82, jump [a2]
      :                          @321 [@dyn 41]
  4586: 51 07 ed                 jump @319 if a0 == 0
      :                          @322
  4589: 33 08 01                 a1 = 0x1
  4592: 01                       fallthrough
      :                          @323
  4593: 64 87                    a0 = a1
  4595: 82 10 60                 ra = u64 [sp + 0x60]
  4598: 82 15 58                 s0 = u64 [sp + 0x58]
  4601: 82 16 50                 s1 = u64 [sp + 0x50]
  4604: 95 11 68                 sp = sp + 0x68
  4607: 32 00                    ret
      :                          @324
  4609: 82 16 48                 s1 = u64 [sp + 0x48]
  4612: 64 67                    a0 = s1
  4614: 64 58                    a1 = s0
  4616: 82 19 18                 a2 = u64 [sp + 0x18]
  4619: 82 1a 38                 a3 = u64 [sp + 0x38]
  4622: 82 1b 30                 a4 = u64 [sp + 0x30]
  4625: 50 10 54 89 00           ra = 84, jump @338
      :                          @325 [@dyn 42]
  4630: 33 08 01                 a1 = 0x1
  4633: 52 07 d8                 jump @323 if a0 != 0
      :                          @326
  4636: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4639: 64 67                    a0 = s1
  4641: 82 18 20                 a1 = u64 [sp + 0x20]
  4644: 82 19 28                 a2 = u64 [sp + 0x28]
  4647: b4 a0 01 56              ra = 86, jump [a3]
      :                          @327 [@dyn 43]
  4651: 33 08 01                 a1 = 0x1
  4654: 52 07 c3                 jump @323 if a0 != 0
      :                          @328
  4657: 82 17 10                 a0 = u64 [sp + 0x10]
  4660: 9a 77                    a0 = -a0
  4662: 7b 17 38                 u64 [sp + 0x38] = a0
  4665: 33 06 ff                 s1 = 0xffffffffffffffff
  4668: 01                       fallthrough
      :                          @329
  4669: 82 17 38                 a0 = u64 [sp + 0x38]
  4672: c8 67 07                 a0 = a0 + s1
  4675: 51 17 ff 42              jump @336 if a0 == 4294967295
      :                          @330
  4679: 82 59 20                 a2 = u64 [s0 + 0x20]
  4682: 82 17 48                 a0 = u64 [sp + 0x48]
  4685: 82 18 40                 a1 = u64 [sp + 0x40]
  4688: b4 90 01 58              ra = 88, jump [a2]
      :                          @331 [@dyn 44]
  4692: 95 66 01                 s1 = s1 + 0x1
  4695: 51 07 e6                 jump @329 if a0 == 0
      :                          @332
  4698: 28 37                    jump @337
      :                          @333
  4700: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4703: 82 17 48                 a0 = u64 [sp + 0x48]
  4706: 82 18 20                 a1 = u64 [sp + 0x20]
  4709: 82 19 28                 a2 = u64 [sp + 0x28]
  4712: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @334 [@dyn 45]
  4716: 33 08 01                 a1 = 0x1
  4719: 52 07 82                 jump @323 if a0 != 0
      :                          @335
  4722: 33 08                    a1 = 0
  4724: 82 16                    s1 = u64 [sp]
  4726: 82 17 10                 a0 = u64 [sp + 0x10]
  4729: 7a 67 30                 u32 [s1 + 0x30] = a0
  4732: 82 17 08                 a0 = u64 [sp + 0x8]
  4735: 78 67 38                 u8 [s1 + 0x38] = a0
  4738: 28 6f ff                 jump @323
      :                          @336
  4741: 82 16 10                 s1 = u64 [sp + 0x10]
  4744: 82 17 10                 a0 = u64 [sp + 0x10]
  4747: d8 76 08                 a1 = s1 <u a0
  4750: 28 63 ff                 jump @323
      :                          @337
  4753: 82 17 10                 a0 = u64 [sp + 0x10]
  4756: d8 76 08                 a1 = s1 <u a0
  4759: 28 5a ff                 jump @323
      :                          @338
  4762: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4765: 7b 10 20                 u64 [sp + 0x20] = ra
  4768: 7b 15 18                 u64 [sp + 0x18] = s0
  4771: 7b 16 10                 u64 [sp + 0x10] = s1
  4774: 83 9c                    i32 a5 = a2 + 0
  4776: 33 02 00 00 11           t0 = 0x110000
  4781: 64 a6                    s1 = a3
  4783: 64 85                    s0 = a1
  4785: 64 7a                    a3 = a0
  4787: aa 2c 20                 jump @341 if a5 == t0
      :                          @339
  4790: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4793: 64 a7                    a0 = a3
  4795: 64 98                    a1 = a2
  4797: 7b 1b 08                 u64 [sp + 0x8] = a4
  4800: 7b 1a                    u64 [sp] = a3
  4802: b4 c0 01 5c              ra = 92, jump [a5]
      :                          @340 [@dyn 46]
  4806: 82 1a                    a3 = u64 [sp]
  4808: 82 1b 08                 a4 = u64 [sp + 0x8]
  4811: 64 78                    a1 = a0
  4813: 33 07 01                 a0 = 0x1
  4816: 52 08 20                 jump @344 if a1 != 0
      :                          @341
  4819: 51 06 1a                 jump @343 if s1 == 0
      :                          @342
  4822: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4825: 64 a7                    a0 = a3
  4827: 64 68                    a1 = s1
  4829: 64 b9                    a2 = a4
  4831: 82 10 20                 ra = u64 [sp + 0x20]
  4834: 82 15 18                 s0 = u64 [sp + 0x18]
  4837: 82 16 10                 s1 = u64 [sp + 0x10]
  4840: 95 11 28                 sp = sp + 0x28
  4843: 32 0c                    jump [a5]
      :                          @343
  4845: 33 07                    a0 = 0
  4847: 01                       fallthrough
      :                          @344
  4848: 82 10 20                 ra = u64 [sp + 0x20]
  4851: 82 15 18                 s0 = u64 [sp + 0x18]
  4854: 82 16 10                 s1 = u64 [sp + 0x10]
  4857: 95 11 28                 sp = sp + 0x28
  4860: 32 00                    ret
      :                          @345
  4862: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4866: 7b 10 80 00              u64 [sp + 0x80] = ra
  4870: 7b 15 78                 u64 [sp + 0x78] = s0
  4873: 7b 16 70                 u64 [sp + 0x70] = s1
  4876: 49 11 60 20              u64 [sp + 96] = 0x20
  4880: 33 0a 03                 a3 = 0x3
  4883: 78 1a 68                 u8 [sp + 0x68] = a3
  4886: 82 96 20                 s1 = u64 [a2 + 0x20]
  4889: 49 11 30                 u64 [sp + 48] = 0
  4892: 49 11 40                 u64 [sp + 64] = 0
  4895: 7b 17 50                 u64 [sp + 0x50] = a0
  4898: 7b 18 58                 u64 [sp + 0x58] = a1
  4901: 51 06 07 01              jump @367 if s1 == 0
      :                          @346
  4905: 82 97 28                 a0 = u64 [a2 + 0x28]
  4908: 51 07 74 01              jump @377 if a0 == 0
      :                          @347
  4912: 49 11 28                 u64 [sp + 40] = 0
  4915: 82 95                    s0 = u64 [a2]
  4917: 7b 19 08                 u64 [sp + 0x8] = a2
  4920: 82 98 10                 a1 = u64 [a2 + 0x10]
  4923: 7b 18 18                 u64 [sp + 0x18] = a1
  4926: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4929: 97 88 03                 a1 = a1 << 0x3
  4932: 98 88 03                 a1 = a1 >> 0x3
  4935: 95 88 01                 a1 = a1 + 0x1
  4938: 7b 18                    u64 [sp] = a1
  4940: 95 55 08                 s0 = s0 + 0x8
  4943: 96 78 38                 a1 = a0 * 0x38
  4946: 95 66 18                 s1 = s1 + 0x18
  4949: 33 07 48                 a0 = 0x48
  4952: 7b 17 10                 u64 [sp + 0x10] = a0
  4955: 01                       fallthrough
      :                          @348
  4956: 7b 18 20                 u64 [sp + 0x20] = a1
  4959: 82 59                    a2 = u64 [s0]
  4961: 51 09 17                 jump @351 if a2 == 0
      :                          @349
  4964: 82 1a 58                 a3 = u64 [sp + 0x58]
  4967: 82 17 50                 a0 = u64 [sp + 0x50]
  4970: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4973: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4976: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @350 [@dyn 47]
  4980: 52 07 51 01              jump @380 if a0 != 0
      :                          @351
  4984: 81 67 10                 a0 = i32 [s1 + 0x10]
  4987: 7a 17 60                 u32 [sp + 0x60] = a0
  4990: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4993: 78 17 68                 u8 [sp + 0x68] = a0
  4996: 81 67 14                 a0 = i32 [s1 + 0x14]
  4999: 7a 17 64                 u32 [sp + 0x64] = a0
  5002: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5005: 82 67                    a0 = u64 [s1]
  5007: 51 08 26                 jump @356 if a1 == 0
      :                          @352
  5010: 52 18 01 16              jump @354 if a1 != 1
      :                          @353
  5014: 97 77 04                 a0 = a0 << 0x4
  5017: 82 18 18                 a1 = u64 [sp + 0x18]
  5020: c8 87 07                 a0 = a0 + a1
  5023: 82 78 08                 a1 = u64 [a0 + 0x8]
  5026: 82 19 10                 a2 = u64 [sp + 0x10]
  5029: aa 98 07                 jump @355 if a1 == a2
      :                          @354
  5032: 33 08                    a1 = 0
  5034: 28 0f                    jump @357
      :                          @355
  5036: 82 77                    a0 = u64 [a0]
  5038: 82 77                    a0 = u64 [a0]
  5040: 33 08 01                 a1 = 0x1
  5043: 28 06                    jump @357
      :                          @356
  5045: 33 08 01                 a1 = 0x1
  5048: 01                       fallthrough
      :                          @357
  5049: 7b 18 30                 u64 [sp + 0x30] = a1
  5052: 7b 17 38                 u64 [sp + 0x38] = a0
  5055: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5058: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5061: 51 08 26                 jump @362 if a1 == 0
      :                          @358
  5064: 52 18 01 16              jump @360 if a1 != 1
      :                          @359
  5068: 97 77 04                 a0 = a0 << 0x4
  5071: 82 18 18                 a1 = u64 [sp + 0x18]
  5074: c8 87 07                 a0 = a0 + a1
  5077: 82 78 08                 a1 = u64 [a0 + 0x8]
  5080: 82 19 10                 a2 = u64 [sp + 0x10]
  5083: aa 98 07                 jump @361 if a1 == a2
      :                          @360
  5086: 33 08                    a1 = 0
  5088: 28 0f                    jump @363
      :                          @361
  5090: 82 77                    a0 = u64 [a0]
  5092: 82 77                    a0 = u64 [a0]
  5094: 33 08 01                 a1 = 0x1
  5097: 28 06                    jump @363
      :                          @362
  5099: 33 08 01                 a1 = 0x1
  5102: 01                       fallthrough
      :                          @363
  5103: 7b 18 40                 u64 [sp + 0x40] = a1
  5106: 7b 17 48                 u64 [sp + 0x48] = a0
  5109: 82 67 08                 a0 = u64 [s1 + 0x8]
  5112: 97 77 04                 a0 = a0 << 0x4
  5115: 82 18 18                 a1 = u64 [sp + 0x18]
  5118: c8 78 08                 a1 = a1 + a0
  5121: 82 87                    a0 = u64 [a1]
  5123: 82 89 08                 a2 = u64 [a1 + 0x8]
  5126: 95 18 30                 a1 = sp + 0x30
  5129: b4 90 01 60              ra = 96, jump [a2]
      :                          @364 [@dyn 48]
  5133: 52 07 b8 00              jump @380 if a0 != 0
      :                          @365
  5137: 95 55 10                 s0 = s0 + 0x10
  5140: 82 18 20                 a1 = u64 [sp + 0x20]
  5143: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5146: 95 66 38                 s1 = s1 + 0x38
  5149: 82 17 28                 a0 = u64 [sp + 0x28]
  5152: 95 77 01                 a0 = a0 + 0x1
  5155: 7b 17 28                 u64 [sp + 0x28] = a0
  5158: 52 08 36 ff              jump @348 if a1 != 0
      :                          @366
  5162: 28 69                    jump @375
      :                          @367
  5164: 82 97 18                 a0 = u64 [a2 + 0x18]
  5167: 51 07 71                 jump @377 if a0 == 0
      :                          @368
  5170: 82 95 10                 s0 = u64 [a2 + 0x10]
  5173: 33 0a                    a3 = 0
  5175: 97 78 04                 a1 = a0 << 0x4
  5178: c8 58 08                 a1 = a1 + s0
  5181: 7b 18 20                 u64 [sp + 0x20] = a1
  5184: 7b 19 08                 u64 [sp + 0x8] = a2
  5187: 82 96                    s1 = u64 [a2]
  5189: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5192: 97 77 04                 a0 = a0 << 0x4
  5195: 98 77 04                 a0 = a0 >> 0x4
  5198: 95 77 01                 a0 = a0 + 0x1
  5201: 7b 17                    u64 [sp] = a0
  5203: 95 66 08                 s1 = s1 + 0x8
  5206: 01                       fallthrough
      :                          @369
  5207: 7b 1a 28                 u64 [sp + 0x28] = a3
  5210: 82 69                    a2 = u64 [s1]
  5212: 51 09 16                 jump @372 if a2 == 0
      :                          @370
  5215: 82 1a 58                 a3 = u64 [sp + 0x58]
  5218: 82 17 50                 a0 = u64 [sp + 0x50]
  5221: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5224: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5227: b4 a0 01 62              ra = 98, jump [a3]
      :                          @371 [@dyn 49]
  5231: 52 07 56                 jump @380 if a0 != 0
      :                          @372
  5234: 82 57                    a0 = u64 [s0]
  5236: 82 59 08                 a2 = u64 [s0 + 0x8]
  5239: 95 18 30                 a1 = sp + 0x30
  5242: b4 90 01 64              ra = 100, jump [a2]
      :                          @373 [@dyn 50]
  5246: 52 07 47                 jump @380 if a0 != 0
      :                          @374
  5249: 95 66 10                 s1 = s1 + 0x10
  5252: 95 55 10                 s0 = s0 + 0x10
  5255: 82 1a 28                 a3 = u64 [sp + 0x28]
  5258: 95 aa 01                 a3 = a3 + 0x1
  5261: 82 17 20                 a0 = u64 [sp + 0x20]
  5264: ab 75 c7                 jump @369 if s0 != a0
      :                          @375
  5267: 82 19 08                 a2 = u64 [sp + 0x8]
  5270: 82 1a                    a3 = u64 [sp]
  5272: 82 97 08                 a0 = u64 [a2 + 0x8]
  5275: ac 7a 0d                 jump @378 if a3 <u a0
      :                          @376
  5278: 28 2c                    jump @381
      :                          @377
  5280: 33 0a                    a3 = 0
  5282: 82 97 08                 a0 = u64 [a2 + 0x8]
  5285: 54 07 25                 jump @381 if a0 <=u 0
      :                          @378
  5288: 82 97                    a0 = u64 [a2]
  5290: 97 a8 04                 a1 = a3 << 0x4
  5293: c8 87 09                 a2 = a0 + a1
  5296: 82 1a 58                 a3 = u64 [sp + 0x58]
  5299: 82 17 50                 a0 = u64 [sp + 0x50]
  5302: 82 98                    a1 = u64 [a2]
  5304: 82 99 08                 a2 = u64 [a2 + 0x8]
  5307: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5310: b4 a0 01 66              ra = 102, jump [a3]
      :                          @379 [@dyn 51]
  5314: 51 07 08                 jump @381 if a0 == 0
      :                          @380
  5317: 33 07 01                 a0 = 0x1
  5320: 28 05                    jump @382
      :                          @381
  5322: 33 07                    a0 = 0
  5324: 01                       fallthrough
      :                          @382
  5325: 82 10 80 00              ra = u64 [sp + 0x80]
  5329: 82 15 78                 s0 = u64 [sp + 0x78]
  5332: 82 16 70                 s1 = u64 [sp + 0x70]
  5335: 95 11 88 00              sp = sp + 0x88
  5339: 32 00                    ret
      :                          @383 [@dyn 52]
  5341: 32 00                    ret
      :                          @384 [@dyn 53]
  5343: 95 11 80                 sp = sp + 0xffffffffffffff80
  5346: 7b 10 78                 u64 [sp + 0x78] = ra
  5349: 7b 15 70                 u64 [sp + 0x70] = s0
  5352: 7b 16 68                 u64 [sp + 0x68] = s1
  5355: 64 92                    t0 = a2
  5357: 33 00                    ra = 0
  5359: 33 0b                    a4 = 0
  5361: 33 05                    s0 = 0
  5363: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5373: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5379: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5389: 82 79 10                 a2 = u64 [a0 + 0x10]
  5392: 7b 19 48                 u64 [sp + 0x48] = a2
  5395: 82 79                    a2 = u64 [a0]
  5397: 7b 19 38                 u64 [sp + 0x38] = a2
  5400: 82 77 08                 a0 = u64 [a0 + 0x8]
  5403: 7b 17 30                 u64 [sp + 0x30] = a0
  5406: 33 07 80 01 01           a0 = 0x10180
  5411: 7b 17 08                 u64 [sp + 0x8] = a0
  5414: 3a 07 08 00 03           a0 = u64 [0x30008]
  5419: 7b 17 60                 u64 [sp + 0x60] = a0
  5422: 7b 18 58                 u64 [sp + 0x58] = a1
  5425: 95 88 08                 a1 = a1 + 0x8
  5428: 7b 18                    u64 [sp] = a1
  5430: 33 0c 0a                 a5 = 0xa
  5433: 7b 12 20                 u64 [sp + 0x20] = t0
  5436: 7b 13 18                 u64 [sp + 0x18] = t1
  5439: 7b 14 10                 u64 [sp + 0x10] = t2
  5442: 28 3a                    jump @388
      :                          @385
  5444: 64 06                    s1 = ra
  5446: c8 89 07                 a0 = a2 + a1
  5449: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5452: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5455: 88 77 01                 a0 = a0 <u 0x1
  5458: 01                       fallthrough
      :                          @386
  5459: 82 1a 48                 a3 = u64 [sp + 0x48]
  5462: 78 a7                    u8 [a3] = a0
  5464: 82 17 30                 a0 = u64 [sp + 0x30]
  5467: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5470: 82 17 38                 a0 = u64 [sp + 0x38]
  5473: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @387 [@dyn 54]
  5477: 64 5b                    a4 = s0
  5479: 82 12 20                 t0 = u64 [sp + 0x20]
  5482: 82 13 18                 t1 = u64 [sp + 0x18]
  5485: 82 14 10                 t2 = u64 [sp + 0x10]
  5488: 64 60                    ra = s1
  5490: 33 0c 0a                 a5 = 0xa
  5493: 82 15 40                 s0 = u64 [sp + 0x40]
  5496: 52 07 63 01              jump @429 if a0 != 0
      :                          @388
  5500: 84 57 ff 00              a0 = s0 & 0xff
  5504: 52 07 57 01              jump @428 if a0 != 0
      :                          @389
  5508: 7b 1b 50                 u64 [sp + 0x50] = a4
  5511: ae 02 0a                 jump @392 if t0 >=u ra
      :                          @390
  5514: 28 ef 00                 jump @419
      :                          @391
  5517: ac 02 ec 00              jump @419 if t0 <u ra
      :                          @392
  5521: c9 02 08                 a1 = t0 - ra
  5524: 82 16 58                 s1 = u64 [sp + 0x58]
  5527: c8 06 06                 s1 = s1 + ra
  5530: 55 18 10 1d              jump @398 if a1 >=u 16
      :                          @393
  5534: aa 02 d8 00              jump @418 if t0 == ra
      :                          @394
  5538: 33 0a                    a3 = 0
  5540: 01                       fallthrough
      :                          @395
  5541: c8 a6 07                 a0 = s1 + a3
  5544: 7c 77                    a0 = u8 [a0]
  5546: aa c7 a5 00              jump @413 if a0 == a5
      :                          @396
  5550: 95 aa 01                 a3 = a3 + 0x1
  5553: ab a8 f4                 jump @395 if a1 != a3
      :                          @397
  5556: 28 c2 00                 jump @418
      :                          @398
  5559: 95 69 07                 a2 = s1 + 0x7
  5562: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5565: c9 6a 07                 a0 = a3 - s1
  5568: d3 6a 0a                 a3 = a3 ^ s1
  5571: 88 aa 01                 a3 = a3 <u 0x1
  5574: 88 7b 01                 a4 = a0 <u 0x1
  5577: d4 ba 0a                 a3 = a3 | a4
  5580: 51 0a 45                 jump @404 if a3 == 0
      :                          @399
  5583: 33 07                    a0 = 0
  5585: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5588: 82 1b                    a4 = u64 [sp]
  5590: c8 0b 0b                 a4 = a4 + ra
  5593: 28 08                    jump @401
      :                          @400
  5595: 82 1b                    a4 = u64 [sp]
  5597: c8 0b 0b                 a4 = a4 + ra
  5600: 01                       fallthrough
      :                          @401
  5601: c8 76 0c                 a5 = s1 + a0
  5604: 82 cc                    a5 = u64 [a5]
  5606: c8 7b 09                 a2 = a4 + a0
  5609: 82 99                    a2 = u64 [a2]
  5611: d3 4c 05                 s0 = a5 ^ t2
  5614: c8 35 05                 s0 = s0 + t1
  5617: e0 c5 0c                 a5 = s0 & ~a5
  5620: d3 49 05                 s0 = a2 ^ t2
  5623: c8 35 05                 s0 = s0 + t1
  5626: e0 95 09                 a2 = s0 & ~a2
  5629: d4 c9 09                 a2 = a2 | a5
  5632: 82 1c 60                 a5 = u64 [sp + 0x60]
  5635: d2 c9 09                 a2 = a2 & a5
  5638: 52 09 1f                 jump @407 if a2 != 0
      :                          @402
  5641: 95 77 10                 a0 = a0 + 0x10
  5644: ae 7a d5                 jump @401 if a3 >=u a0
      :                          @403
  5647: 28 16                    jump @407
      :                          @404
  5649: c8 a6 0b                 a4 = s1 + a3
  5652: 7c bb                    a4 = u8 [a4]
  5654: aa cb 51                 jump @416 if a4 == a5
      :                          @405
  5657: 95 aa 01                 a3 = a3 + 0x1
  5660: ab a7 f5                 jump @404 if a0 != a3
      :                          @406
  5663: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5666: ae 7a b9                 jump @400 if a3 >=u a0
      :                          @407
  5669: aa 87 9a 00              jump @425 if a0 == a1
      :                          @408
  5673: 33 0a                    a3 = 0
  5675: c8 76 06                 s1 = s1 + a0
  5678: c9 72 08                 a1 = t0 - a0
  5681: c9 08 08                 a1 = a1 - ra
  5684: 33 0c 0a                 a5 = 0xa
  5687: 82 1b 50                 a4 = u64 [sp + 0x50]
  5690: 01                       fallthrough
      :                          @409
  5691: c8 a6 09                 a2 = s1 + a3
  5694: 7c 99                    a2 = u8 [a2]
  5696: aa c9 0b                 jump @412 if a2 == a5
      :                          @410
  5699: 95 aa 01                 a3 = a3 + 0x1
  5702: ab a8 f5                 jump @409 if a1 != a3
      :                          @411
  5705: 28 2d                    jump @418
      :                          @412
  5707: c8 7a 0a                 a3 = a3 + a0
  5710: 01                       fallthrough
      :                          @413
  5711: c8 0a 0a                 a3 = a3 + ra
  5714: 95 a0 01                 ra = a3 + 0x1
  5717: ae 2a 38 ff              jump @391 if a3 >=u t0
      :                          @414
  5721: 82 17 58                 a0 = u64 [sp + 0x58]
  5724: c8 7a 0a                 a3 = a3 + a0
  5727: 7c a7                    a0 = u8 [a3]
  5729: ab c7 2c ff              jump @391 if a0 != a5
      :                          @415
  5733: 28 61                    jump @426
      :                          @416
  5735: 82 1b 50                 a4 = u64 [sp + 0x50]
  5738: c8 0a 0a                 a3 = a3 + ra
  5741: 95 a0 01                 ra = a3 + 0x1
  5744: ac 2a e9                 jump @414 if a3 <u t0
      :                          @417
  5747: 28 1a ff                 jump @391
      :                          @418
  5750: 64 20                    ra = t0
  5752: 01                       fallthrough
      :                          @419
  5753: 49 11 40 01              u64 [sp + 64] = 0x1
  5757: 64 b5                    s0 = a4
  5759: 64 26                    s1 = t0
  5761: aa 2b 56                 jump @428 if a4 == t0
      :                          @420
  5764: 82 17 48                 a0 = u64 [sp + 0x48]
  5767: 7c 77                    a0 = u8 [a0]
  5769: 51 07 22                 jump @423 if a0 == 0
      :                          @421
  5772: 82 17 30                 a0 = u64 [sp + 0x30]
  5775: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5778: 33 09 04                 a2 = 0x4
  5781: 82 17 38                 a0 = u64 [sp + 0x38]
  5784: 82 18 08                 a1 = u64 [sp + 0x8]
  5787: 7b 10 28                 u64 [sp + 0x28] = ra
  5790: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @422 [@dyn 55]
  5794: 82 1b 50                 a4 = u64 [sp + 0x50]
  5797: 82 10 28                 ra = u64 [sp + 0x28]
  5800: 52 07 33                 jump @429 if a0 != 0
      :                          @423
  5803: c9 b6 09                 a2 = s1 - a4
  5806: 82 18 58                 a1 = u64 [sp + 0x58]
  5809: c8 b8 08                 a1 = a1 + a4
  5812: ab b6 90 fe              jump @385 if s1 != a4
      :                          @424
  5816: 64 06                    s1 = ra
  5818: 33 07                    a0 = 0
  5820: 28 97 fe                 jump @386
      :                          @425
  5823: 64 20                    ra = t0
  5825: 82 1b 50                 a4 = u64 [sp + 0x50]
  5828: 28 b5                    jump @419
      :                          @426
  5830: 49 11 40                 u64 [sp + 64] = 0
  5833: 64 05                    s0 = ra
  5835: 64 06                    s1 = ra
  5837: 82 17 48                 a0 = u64 [sp + 0x48]
  5840: 7c 77                    a0 = u8 [a0]
  5842: 52 07 ba                 jump @421 if a0 != 0
      :                          @427
  5845: 28 d6                    jump @423
      :                          @428
  5847: 33 07                    a0 = 0
  5849: 28 06                    jump @430
      :                          @429
  5851: 33 07 01                 a0 = 0x1
  5854: 01                       fallthrough
      :                          @430
  5855: 82 10 78                 ra = u64 [sp + 0x78]
  5858: 82 15 70                 s0 = u64 [sp + 0x70]
  5861: 82 16 68                 s1 = u64 [sp + 0x68]
  5864: 95 11 80 00              sp = sp + 0x80
  5868: 32 00                    ret
      :                          @431 [@dyn 56]
  5870: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5873: 7b 10 20                 u64 [sp + 0x20] = ra
  5876: 7b 15 18                 u64 [sp + 0x18] = s0
  5879: 7b 16 10                 u64 [sp + 0x10] = s1
  5882: 82 75 10                 s0 = u64 [a0 + 0x10]
  5885: 7c 59                    a2 = u8 [s0]
  5887: 82 7b                    a4 = u64 [a0]
  5889: 82 76 08                 s1 = u64 [a0 + 0x8]
  5892: 51 09 32                 jump @435 if a2 == 0
      :                          @432
  5895: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5898: 7b 18 08                 u64 [sp + 0x8] = a1
  5901: 33 08 80 01 01           a1 = 0x10180
  5906: 33 09 04                 a2 = 0x4
  5909: 64 b7                    a0 = a4
  5911: 7b 1b                    u64 [sp] = a4
  5913: b4 a0 01 72              ra = 114, jump [a3]
      :                          @433 [@dyn 57]
  5917: 82 18 08                 a1 = u64 [sp + 0x8]
  5920: 82 1b                    a4 = u64 [sp]
  5922: 51 07 14                 jump @435 if a0 == 0
      :                          @434
  5925: 33 07 01                 a0 = 0x1
  5928: 82 10 20                 ra = u64 [sp + 0x20]
  5931: 82 15 18                 s0 = u64 [sp + 0x18]
  5934: 82 16 10                 s1 = u64 [sp + 0x10]
  5937: 95 11 28                 sp = sp + 0x28
  5940: 32 00                    ret
      :                          @435
  5942: 83 87                    i32 a0 = a1 + 0
  5944: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5947: 88 77 01                 a0 = a0 <u 0x1
  5950: 78 57                    u8 [s0] = a0
  5952: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5955: 64 b7                    a0 = a4
  5957: 82 10 20                 ra = u64 [sp + 0x20]
  5960: 82 15 18                 s0 = u64 [sp + 0x18]
  5963: 82 16 10                 s1 = u64 [sp + 0x10]
  5966: 95 11 28                 sp = sp + 0x28
  5969: 32 0c                    jump [a5]
      :                          @436 [@dyn 58]
  5971: 64 8a                    a3 = a1
  5973: 33 08 50 01 01           a1 = 0x10150
  5978: 64 a9                    a2 = a3
  5980: 28 a2 fb                 jump @345
      :                          @437
  5983: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5987: 7b 10 88 00              u64 [sp + 0x88] = ra
  5991: 7b 15 80 00              u64 [sp + 0x80] = s0
  5995: 7b 16 78                 u64 [sp + 0x78] = s1
  5998: 64 75                    s0 = a0
  6000: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6003: 64 8b                    a4 = a1
  6005: 33 08 01                 a1 = 0x1
  6008: 33 06 01                 s1 = 0x1
  6011: 51 07 1d                 jump @439 if a0 == 0
      :                          @438
  6014: 78 56 08                 u8 [s0 + 0x8] = s1
  6017: 46 15 09 01              u8 [s0 + 9] = 0x1
  6021: 64 57                    a0 = s0
  6023: 82 10 88 00              ra = u64 [sp + 0x88]
  6027: 82 15 80 00              s0 = u64 [sp + 0x80]
  6031: 82 16 78                 s1 = u64 [sp + 0x78]
  6034: 95 11 90 00              sp = sp + 0x90
  6038: 32 00                    ret
      :                          @439
  6040: 64 9a                    a3 = a2
  6042: 82 5c                    a5 = u64 [s0]
  6044: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6047: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6050: 84 79 04                 a2 = a0 & 0x4
  6053: 52 09 43                 jump @445 if a2 != 0
      :                          @440
  6056: 51 08 31                 jump @443 if a1 == 0
      :                          @441
  6059: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6062: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6065: 82 83 18                 t1 = u64 [a1 + 0x18]
  6068: 33 08 84 01 01           a1 = 0x10184
  6073: 33 09 02                 a2 = 0x2
  6076: 64 a6                    s1 = a3
  6078: 7b 1b 10                 u64 [sp + 0x10] = a4
  6081: 7b 1c 08                 u64 [sp + 0x8] = a5
  6084: b4 30 01 76              ra = 118, jump [t1]
      :                          @442 [@dyn 59]
  6088: 82 1c 08                 a5 = u64 [sp + 0x8]
  6091: 82 1b 10                 a4 = u64 [sp + 0x10]
  6094: 64 6a                    a3 = s1
  6096: 33 08 01                 a1 = 0x1
  6099: 33 06 01                 s1 = 0x1
  6102: 52 07 a8                 jump @438 if a0 != 0
      :                          @443
  6105: 64 b7                    a0 = a4
  6107: 64 c8                    a1 = a5
  6109: b4 a0 01 78              ra = 120, jump [a3]
      :                          @444 [@dyn 60]
  6113: 33 08 01                 a1 = 0x1
  6116: 64 76                    s1 = a0
  6118: 28 98                    jump @438
      :                          @445
  6120: 52 08 36                 jump @449 if a1 != 0
      :                          @446
  6123: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6126: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6129: 82 83 18                 t1 = u64 [a1 + 0x18]
  6132: 33 08 88 01 01           a1 = 0x10188
  6137: 33 09 01                 a2 = 0x1
  6140: 33 06 01                 s1 = 0x1
  6143: 7b 1a                    u64 [sp] = a3
  6145: 7b 1b 10                 u64 [sp + 0x10] = a4
  6148: 7b 1c 08                 u64 [sp + 0x8] = a5
  6151: b4 30 01 7a              ra = 122, jump [t1]
      :                          @447 [@dyn 61]
  6155: 82 1c 08                 a5 = u64 [sp + 0x8]
  6158: 82 1b 10                 a4 = u64 [sp + 0x10]
  6161: 82 1a                    a3 = u64 [sp]
  6163: 33 08 01                 a1 = 0x1
  6166: 52 07 68 ff              jump @438 if a0 != 0
      :                          @448
  6170: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6173: 01                       fallthrough
      :                          @449
  6174: 33 06 01                 s1 = 0x1
  6177: 78 16 37                 u8 [sp + 0x37] = s1
  6180: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6183: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6186: 7b 18 18                 u64 [sp + 0x18] = a1
  6189: 7b 19 20                 u64 [sp + 0x20] = a2
  6192: 95 18 37                 a1 = sp + 0x37
  6195: 7b 18 28                 u64 [sp + 0x28] = a1
  6198: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6201: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6204: 82 c3                    t1 = u64 [a5]
  6206: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6209: 82 c0 10                 ra = u64 [a5 + 0x10]
  6212: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6215: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6218: 7a 18 68                 u32 [sp + 0x68] = a1
  6221: 78 19 70                 u8 [sp + 0x70] = a2
  6224: 7b 13 38                 u64 [sp + 0x38] = t1
  6227: 7b 14 40                 u64 [sp + 0x40] = t2
  6230: 7b 10 48                 u64 [sp + 0x48] = ra
  6233: 7b 12 50                 u64 [sp + 0x50] = t0
  6236: 95 17 18                 a0 = sp + 0x18
  6239: 7b 17 58                 u64 [sp + 0x58] = a0
  6242: 33 07 50 01 01           a0 = 0x10150
  6247: 7b 17 60                 u64 [sp + 0x60] = a0
  6250: 95 18 38                 a1 = sp + 0x38
  6253: 64 b7                    a0 = a4
  6255: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @450 [@dyn 62]
  6259: 52 07 20                 jump @453 if a0 != 0
      :                          @451
  6262: 82 18 60                 a1 = u64 [sp + 0x60]
  6265: 82 17 58                 a0 = u64 [sp + 0x58]
  6268: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6271: 33 08 86 01 01           a1 = 0x10186
  6276: 33 09 02                 a2 = 0x2
  6279: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @452 [@dyn 63]
  6283: 64 76                    s1 = a0
  6285: 33 08 01                 a1 = 0x1
  6288: 28 ee fe                 jump @438
      :                          @453
  6291: 33 08 01                 a1 = 0x1
  6294: 28 e8 fe                 jump @438
      :                          @454
  6297: 51 08 9b 00              jump @475 if a1 == 0
      :                          @455
  6301: 64 79                    a2 = a0
  6303: 7c 77                    a0 = u8 [a0]
  6305: 51 07 91 00              jump @474 if a0 == 0
      :                          @456
  6309: 51 27 ff 00 90 00        jump @476 if a0 == 255
      :                          @457
  6315: 6c 7a                    a3 = sext.b a0
  6317: 57 0a 09                 jump @459 if a3 <s 0
      :                          @458
  6320: 33 0a                    a3 = 0
  6322: 33 08                    a1 = 0
  6324: 28 73                    jump @473
      :                          @459
  6326: 55 27 c0 00 0d           jump @461 if a0 >=u 192
      :                          @460
  6331: 33 0a 01                 a3 = 0x1
  6334: 33 0b 80                 a4 = 0xffffffffffffff80
  6337: 28 4a                    jump @470
      :                          @461
  6339: 55 27 e0 00 0e           jump @463 if a0 >=u 224
      :                          @462
  6344: 33 0a 02                 a3 = 0x2
  6347: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6351: 28 3c                    jump @470
      :                          @463
  6353: 55 27 f0 00 0e           jump @465 if a0 >=u 240
      :                          @464
  6358: 33 0a 03                 a3 = 0x3
  6361: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6365: 28 2e                    jump @470
      :                          @465
  6367: 55 27 f8 00 0e           jump @467 if a0 >=u 248
      :                          @466
  6372: 33 0a 04                 a3 = 0x4
  6375: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6379: 28 20                    jump @470
      :                          @467
  6381: 55 27 fc 00 0e           jump @469 if a0 >=u 252
      :                          @468
  6386: 33 0a 05                 a3 = 0x5
  6389: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6393: 28 12                    jump @470
      :                          @469
  6395: 88 7a fe 00              a3 = a0 <u 0xfe
  6399: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6403: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6407: 85 aa 07                 a3 = a3 ^ 0x7
  6410: 01                       fallthrough
      :                          @470
  6411: ae 8a 2b                 jump @477 if a3 >=u a1
      :                          @471
  6414: 33 08                    a1 = 0
  6416: c8 b7 07                 a0 = a0 + a4
  6419: 64 ab                    a4 = a3
  6421: 01                       fallthrough
      :                          @472
  6422: c8 b9 0c                 a5 = a2 + a4
  6425: 7c cc                    a5 = u8 [a5]
  6427: 97 88 08                 a1 = a1 << 0x8
  6430: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6433: d4 c8 08                 a1 = a1 | a5
  6436: 52 0b f2                 jump @472 if a4 != 0
      :                          @473
  6439: 8a a9 03                 i32 a2 = a3 << 0x3
  6442: cf 97 07                 a0 = a0 << a2
  6445: c8 87 07                 a0 = a0 + a1
  6448: 32 00                    ret
      :                          @474
  6450: 32 00                    ret
      :                          @475
  6452: 00                       trap
      :                          @476
  6453: 00                       trap
      :                          @477
  6454: 00                       trap
      :                          @478 [@dyn 64]
  6455: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6458: 7b 10 28                 u64 [sp + 0x28] = ra
  6461: 7b 15 20                 u64 [sp + 0x20] = s0
  6464: 7b 16 18                 u64 [sp + 0x18] = s1
  6467: 64 86                    s1 = a1
  6469: 82 88 28                 a1 = u64 [a1 + 0x28]
  6472: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6475: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6478: 64 75                    s0 = a0
  6480: 33 08 48 01 01           a1 = 0x10148
  6485: 33 09 01                 a2 = 0x1
  6488: 64 a7                    a0 = a3
  6490: b4 b0 02 82 00           ra = 130, jump [a4]
      :                          @479 [@dyn 65]
  6495: 7b 16                    u64 [sp] = s1
  6497: 78 17 08                 u8 [sp + 0x8] = a0
  6500: 46 11 09                 u8 [sp + 9] = 0
  6503: 7b 15 10                 u64 [sp + 0x10] = s0
  6506: 33 09 88 00              a2 = 0x88
  6510: 64 17                    a0 = sp
  6512: 95 18 10                 a1 = sp + 0x10
  6515: 50 20 84 00 ec fd        ra = 132, jump @437
      :                          @480 [@dyn 66]
  6521: 33 07 01                 a0 = 0x1
  6524: 7c 18 08                 a1 = u8 [sp + 0x8]
  6527: 52 08 1b                 jump @482 if a1 != 0
      :                          @481
  6530: 82 17                    a0 = u64 [sp]
  6532: 82 78 28                 a1 = u64 [a0 + 0x28]
  6535: 82 77 20                 a0 = u64 [a0 + 0x20]
  6538: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6541: 33 08 89 01 01           a1 = 0x10189
  6546: 33 09 01                 a2 = 0x1
  6549: b4 a0 02 86 00           ra = 134, jump [a3]
      :                          @482 [@dyn 67]
  6554: 82 10 28                 ra = u64 [sp + 0x28]
  6557: 82 15 20                 s0 = u64 [sp + 0x20]
  6560: 82 16 18                 s1 = u64 [sp + 0x18]
  6563: 95 11 30                 sp = sp + 0x30
  6566: 32 00                    ret
      :                          @483 [@dyn 68]
  6568: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6572: 7b 10 80 00              u64 [sp + 0x80] = ra
  6576: 80 89 34                 a2 = u32 [a1 + 0x34]
  6579: 82 77                    a0 = u64 [a0]
  6581: 84 9a 10                 a3 = a2 & 0x10
  6584: 52 0a 16                 jump @486 if a3 != 0
      :                          @484
  6587: 84 99 20                 a2 = a2 & 0x20
  6590: 52 09 41                 jump @489 if a2 != 0
      :                          @485
  6593: 7c 77                    a0 = u8 [a0]
  6595: 82 10 80 00              ra = u64 [sp + 0x80]
  6599: 95 11 88 00              sp = sp + 0x88
  6603: 28 9d f5                 jump @283
      :                          @486
  6606: 7c 77                    a0 = u8 [a0]
  6608: 33 0b 81 00              a4 = 0x81
  6612: 95 19 7f                 a2 = sp + 0x7f
  6615: 33 02 57                 t0 = 0x57
  6618: 01                       fallthrough
      :                          @487
  6619: 64 bc                    a5 = a4
  6621: 84 7b 0f                 a4 = a0 & 0xf
  6624: 97 77 38                 a0 = a0 << 0x38
  6627: 98 77 3c                 a0 = a0 >> 0x3c
  6630: 88 b3 0a                 t1 = a4 <u 0xa
  6633: 33 0a 30                 a3 = 0x30
  6636: da 32 0a                 a3 = t0 if t1 == 0
  6639: be ba 0a                 i32 a3 = a3 + a4
  6642: 78 9a                    u8 [a2] = a3
  6644: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6647: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6650: 52 07 e1                 jump @487 if a0 != 0
      :                          @488
  6653: 28 31                    jump @491
      :                          @489
  6655: 7c 77                    a0 = u8 [a0]
  6657: 33 0b 81 00              a4 = 0x81
  6661: 95 19 7f                 a2 = sp + 0x7f
  6664: 33 02 37                 t0 = 0x37
  6667: 01                       fallthrough
      :                          @490
  6668: 64 bc                    a5 = a4
  6670: 84 7b 0f                 a4 = a0 & 0xf
  6673: 97 77 38                 a0 = a0 << 0x38
  6676: 98 77 3c                 a0 = a0 >> 0x3c
  6679: 88 b3 0a                 t1 = a4 <u 0xa
  6682: 33 0a 30                 a3 = 0x30
  6685: da 32 0a                 a3 = t0 if t1 == 0
  6688: be ba 0a                 i32 a3 = a3 + a4
  6691: 78 9a                    u8 [a2] = a3
  6693: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6696: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6699: 52 07 e1                 jump @490 if a0 != 0
      :                          @491
  6702: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6705: 56 27 80 00 28           jump @494 if a0 >u 128
      :                          @492
  6710: 9a bb 81 00              a4 = 0x81 - a4
  6714: 64 1a                    a3 = sp
  6716: c8 7a 0a                 a3 = a3 + a0
  6719: 33 09 02                 a2 = 0x2
  6722: 64 87                    a0 = a1
  6724: 33 08 8a 01 01           a1 = 0x1018a
  6729: 50 20 8a 00 46 f6        ra = 138, jump @293
      :                          @493 [@dyn 69]
  6735: 82 10 80 00              ra = u64 [sp + 0x80]
  6739: 95 11 88 00              sp = sp + 0x88
  6743: 32 00                    ret
      :                          @494
  6745: 00                       trap
