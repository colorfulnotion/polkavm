// RO data = 656/656 bytes
// RW data = 16/65632 bytes
// Stack size = 65536 bytes
// RO data = [84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 74, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 226, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2305
// Code size = 6916 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 65 02 00 00           jump @39
      :                          @2
    10: 28 43 05                 jump @123
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 e2 0f                 jump @299
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 8d 10           ra = 4, jump @309
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 35 0f                 jump @299
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 e0 0f           ra = 8, jump @309
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 8c 00              a0 = 0x8c
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 5a 16           ra = 14, jump @453
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 e8                 sp = sp + 0xffffffffffffffe8
   493: 7b 10 10                 u64 [sp + 0x10] = ra
   496: 7b 15 08                 u64 [sp + 0x8] = s0
   499: 7b 16                    u64 [sp] = s1
   501: 33 05 14 00 03           s0 = 0x30014
   506: 33 09 10                 a2 = 0x10
   509: 33 0a 05                 a3 = 0x5
   512: 33 0b 01                 a4 = 0x1
   515: 33 07 14 00 03           a0 = 0x30014
   520: 33 08                    a1 = 0
   522: 33 0c                    a5 = 0
   524: 0a 01                    ecalli 1 // 'fetch'
   526: 01                       fallthrough
      :                          @35
   527: 33 09 01                 a2 = 0x1
   530: 51 17 ff 23              jump @37 if a0 == 4294967295
      :                          @36
   534: 39 07 18 00 03           a0 = i32 [0x30018]
   539: 39 08 1c 00 03           a1 = i32 [0x3001c]
   544: 39 09 20 00 03           a2 = i32 [0x30020]
   549: 39 0b 14 00 03           a4 = i32 [0x30014]
   554: c8 78 0a                 a3 = a1 + a0
   557: be 9a 0a                 i32 a3 = a3 + a2
   560: 83 b9 01                 i32 a2 = a4 + 0x1
   563: 28 0a                    jump @38
      :                          @37
   565: 33 07                    a0 = 0
   567: 33 08                    a1 = 0
   569: 33 0a 01                 a3 = 0x1
   572: 01                       fallthrough
      :                          @38
   573: 3d 09 14 00 03           u32 [0x30014] = a2
   578: 3d 0a 18 00 03           u32 [0x30018] = a3
   583: 3d 07 1c 00 03           u32 [0x3001c] = a0
   588: 3d 08 20 00 03           u32 [0x30020] = a1
   593: 33 08 10                 a1 = 0x10
   596: 64 57                    a0 = s0
   598: 0a 07                    ecalli 7 // 'export'
   600: 33 08 10                 a1 = 0x10
   603: 64 57                    a0 = s0
   605: 82 10 10                 ra = u64 [sp + 0x10]
   608: 82 15 08                 s0 = u64 [sp + 0x8]
   611: 82 16                    s1 = u64 [sp]
   613: 95 11 18                 sp = sp + 0x18
   616: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   618: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   621: 7b 10 20                 u64 [sp + 0x20] = ra
   624: 7b 15 18                 u64 [sp + 0x18] = s0
   627: 7b 16 10                 u64 [sp + 0x10] = s1
   630: 33 09 00 00 01           a2 = 0x10000
   635: 51 08 7a 01              jump @85 if a1 == 0
      :                          @40
   639: 64 86                    s1 = a1
   641: 7d 78                    a1 = i8 [a0]
   643: 33 05 01                 s0 = 0x1
   646: 59 08 37                 jump @47 if a1 >=s 0
      :                          @41
   649: 84 8a ff 00              a3 = a1 & 0xff
   653: 33 05 02                 s0 = 0x2
   656: 53 2a c0 00 2d           jump @47 if a3 <u 192
      :                          @42
   661: 33 05 03                 s0 = 0x3
   664: 53 2a e0 00 25           jump @47 if a3 <u 224
      :                          @43
   669: 33 05 04                 s0 = 0x4
   672: 53 2a f0 00 1d           jump @47 if a3 <u 240
      :                          @44
   677: 33 05 05                 s0 = 0x5
   680: 53 2a f8 00 15           jump @47 if a3 <u 248
      :                          @45
   685: 33 05 06                 s0 = 0x6
   688: 53 2a fc 00 0d           jump @47 if a3 <u 252
      :                          @46
   693: 88 a8 fe 00              a1 = a3 <u 0xfe
   697: 9a 85 08                 s0 = 0x8 - a1
   700: 01                       fallthrough
      :                          @47
   701: ae 56 08                 jump @49 if s1 >=u s0
      :                          @48
   704: 33 08                    a1 = 0
   706: 28 33 01                 jump @85
      :                          @49
   709: 64 58                    a1 = s0
   711: 7b 17                    u64 [sp] = a0
   713: 50 10 12 7a 16           ra = 18, jump @470
      :                          @50 [@dyn 9]
   718: aa 56 1f 01              jump @84 if s1 == s0
      :                          @51
   722: 82 17                    a0 = u64 [sp]
   724: c8 57 07                 a0 = a0 + s0
   727: 7d 78                    a1 = i8 [a0]
   729: c9 56 06                 s1 = s1 - s0
   732: 33 05 01                 s0 = 0x1
   735: 59 08 37                 jump @58 if a1 >=s 0
      :                          @52
   738: 84 89 ff 00              a2 = a1 & 0xff
   742: 33 05 02                 s0 = 0x2
   745: 53 29 c0 00 2d           jump @58 if a2 <u 192
      :                          @53
   750: 33 05 03                 s0 = 0x3
   753: 53 29 e0 00 25           jump @58 if a2 <u 224
      :                          @54
   758: 33 05 04                 s0 = 0x4
   761: 53 29 f0 00 1d           jump @58 if a2 <u 240
      :                          @55
   766: 33 05 05                 s0 = 0x5
   769: 53 29 f8 00 15           jump @58 if a2 <u 248
      :                          @56
   774: 33 05 06                 s0 = 0x6
   777: 53 29 fc 00 0d           jump @58 if a2 <u 252
      :                          @57
   782: 88 98 fe 00              a1 = a2 <u 0xfe
   786: 9a 85 08                 s0 = 0x8 - a1
   789: 01                       fallthrough
      :                          @58
   790: ac 56 d7 00              jump @84 if s1 <u s0
      :                          @59
   794: 64 58                    a1 = s0
   796: 7b 17                    u64 [sp] = a0
   798: 50 10 14 25 16           ra = 20, jump @470
      :                          @60 [@dyn 10]
   803: 82 17                    a0 = u64 [sp]
   805: c8 57 07                 a0 = a0 + s0
   808: c9 56 0a                 a3 = s1 - s0
   811: ab 56 07                 jump @62 if s1 != s0
      :                          @61
   814: 33 05                    s0 = 0
   816: 28 41                    jump @70
      :                          @62
   818: 7d 78                    a1 = i8 [a0]
   820: 33 05 01                 s0 = 0x1
   823: 59 08 37                 jump @69 if a1 >=s 0
      :                          @63
   826: 84 89 ff 00              a2 = a1 & 0xff
   830: 33 05 02                 s0 = 0x2
   833: 53 29 c0 00 2d           jump @69 if a2 <u 192
      :                          @64
   838: 33 05 03                 s0 = 0x3
   841: 53 29 e0 00 25           jump @69 if a2 <u 224
      :                          @65
   846: 33 05 04                 s0 = 0x4
   849: 53 29 f0 00 1d           jump @69 if a2 <u 240
      :                          @66
   854: 33 05 05                 s0 = 0x5
   857: 53 29 f8 00 15           jump @69 if a2 <u 248
      :                          @67
   862: 33 05 06                 s0 = 0x6
   865: 53 29 fc 00 0d           jump @69 if a2 <u 252
      :                          @68
   870: 88 98 fe 00              a1 = a2 <u 0xfe
   874: 9a 85 08                 s0 = 0x8 - a1
   877: 01                       fallthrough
      :                          @69
   878: ac 5a 7f                 jump @84 if a3 <u s0
      :                          @70
   881: 64 a6                    s1 = a3
   883: 7b 17                    u64 [sp] = a0
   885: 64 58                    a1 = s0
   887: 50 10 16 cc 15           ra = 22, jump @470
      :                          @71 [@dyn 11]
   892: 51 07 71                 jump @84 if a0 == 0
      :                          @72
   895: e4 56 07                 a0 = maxu(s1, s0)
   898: c9 57 07                 a0 = a0 - s0
   901: 33 09 00 00 01           a2 = 0x10000
   906: 53 17 60 36 ff           jump @48 if a0 <u 96
      :                          @73
   911: 82 18                    a1 = u64 [sp]
   913: c8 85 05                 s0 = s0 + a1
   916: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   919: 95 57 60                 a0 = s0 + 0x60
   922: 7b 17                    u64 [sp] = a0
   924: 51 06 69                 jump @86 if s1 == 0
      :                          @74
   927: 7d 78                    a1 = i8 [a0]
   929: 33 05 01                 s0 = 0x1
   932: 59 08 37                 jump @81 if a1 >=s 0
      :                          @75
   935: 84 89 ff 00              a2 = a1 & 0xff
   939: 33 05 02                 s0 = 0x2
   942: 53 29 c0 00 2d           jump @81 if a2 <u 192
      :                          @76
   947: 33 05 03                 s0 = 0x3
   950: 53 29 e0 00 25           jump @81 if a2 <u 224
      :                          @77
   955: 33 05 04                 s0 = 0x4
   958: 53 29 f0 00 1d           jump @81 if a2 <u 240
      :                          @78
   963: 33 05 05                 s0 = 0x5
   966: 53 29 f8 00 15           jump @81 if a2 <u 248
      :                          @79
   971: 33 05 06                 s0 = 0x6
   974: 53 29 fc 00 0d           jump @81 if a2 <u 252
      :                          @80
   979: 88 98 fe 00              a1 = a2 <u 0xfe
   983: 9a 85 08                 s0 = 0x8 - a1
   986: 01                       fallthrough
      :                          @81
   987: ac 56 6f 01              jump @120 if s1 <u s0
      :                          @82
   991: 64 58                    a1 = s0
   993: 50 10 18 62 15           ra = 24, jump @470
      :                          @83 [@dyn 12]
   998: 33 09 00 00 01           a2 = 0x10000
  1003: 28 1f                    jump @87
      :                          @84
  1005: 33 08                    a1 = 0
  1007: 33 09 00 00 01           a2 = 0x10000
  1012: 01                       fallthrough
      :                          @85
  1013: 64 97                    a0 = a2
  1015: 82 10 20                 ra = u64 [sp + 0x20]
  1018: 82 15 18                 s0 = u64 [sp + 0x18]
  1021: 82 16 10                 s1 = u64 [sp + 0x10]
  1024: 95 11 28                 sp = sp + 0x28
  1027: 32 00                    ret
      :                          @86
  1029: 33 05                    s0 = 0
  1031: 33 07                    a0 = 0
  1033: 01                       fallthrough
      :                          @87
  1034: e4 56 08                 a1 = maxu(s1, s0)
  1037: c9 58 08                 a1 = a1 - s0
  1040: e4 78 06                 s1 = maxu(a1, a0)
  1043: c9 76 06                 s1 = s1 - a0
  1046: 53 16 20 aa fe           jump @48 if s1 <u 32
      :                          @88
  1051: 82 18                    a1 = u64 [sp]
  1053: c8 85 05                 s0 = s0 + a1
  1056: c8 57 07                 a0 = a0 + s0
  1059: 95 66 e0                 s1 = s1 + 0xffffffffffffffe0
  1062: 95 77 20                 a0 = a0 + 0x20
  1065: 7b 17                    u64 [sp] = a0
  1067: 51 06 51                 jump @99 if s1 == 0
      :                          @89
  1070: 7d 78                    a1 = i8 [a0]
  1072: 33 05 01                 s0 = 0x1
  1075: 59 08 37                 jump @96 if a1 >=s 0
      :                          @90
  1078: 84 89 ff 00              a2 = a1 & 0xff
  1082: 33 05 02                 s0 = 0x2
  1085: 53 29 c0 00 2d           jump @96 if a2 <u 192
      :                          @91
  1090: 33 05 03                 s0 = 0x3
  1093: 53 29 e0 00 25           jump @96 if a2 <u 224
      :                          @92
  1098: 33 05 04                 s0 = 0x4
  1101: 53 29 f0 00 1d           jump @96 if a2 <u 240
      :                          @93
  1106: 33 05 05                 s0 = 0x5
  1109: 53 29 f8 00 15           jump @96 if a2 <u 248
      :                          @94
  1114: 33 05 06                 s0 = 0x6
  1117: 53 29 fc 00 0d           jump @96 if a2 <u 252
      :                          @95
  1122: 88 98 fe 00              a1 = a2 <u 0xfe
  1126: 9a 85 08                 s0 = 0x8 - a1
  1129: 01                       fallthrough
      :                          @96
  1130: ac 56 e0 00              jump @120 if s1 <u s0
      :                          @97
  1134: 64 58                    a1 = s0
  1136: 50 10 1a d3 14           ra = 26, jump @470
      :                          @98 [@dyn 13]
  1141: 33 09 00 00 01           a2 = 0x10000
  1146: 28 05                    jump @100
      :                          @99
  1148: 33 05                    s0 = 0
  1150: 01                       fallthrough
      :                          @100
  1151: ae 65 41 fe              jump @48 if s0 >=u s1
      :                          @101
  1155: 82 17                    a0 = u64 [sp]
  1157: c8 57 07                 a0 = a0 + s0
  1160: 7c 78                    a1 = u8 [a0]
  1162: 51 08 19                 jump @103 if a1 == 0
      :                          @102
  1165: 46 11 0f                 u8 [sp + 15] = 0
  1168: 95 17 0f                 a0 = sp + 0xf
  1171: 33 08 01                 a1 = 0x1
  1174: 33 09                    a2 = 0
  1176: 33 0a                    a3 = 0
  1178: 0a 04                    ecalli 4 // 'write'
  1180: 33 08                    a1 = 0
  1182: 33 05                    s0 = 0
  1184: 28 91 00                 jump @118
      :                          @103
  1187: e4 56 08                 a1 = maxu(s1, s0)
  1190: c9 58 08                 a1 = a1 - s0
  1193: 95 76 01                 s1 = a0 + 0x1
  1196: 33 07 01                 a0 = 0x1
  1199: e4 78 07                 a0 = maxu(a1, a0)
  1202: 33 09 02                 a2 = 0x2
  1205: 95 7a ff                 a3 = a0 + 0xffffffffffffffff
  1208: ae 98 09                 jump @105 if a1 >=u a2
      :                          @104
  1211: 33 05                    s0 = 0
  1213: 33 07                    a0 = 0
  1215: 28 4f                    jump @115
      :                          @105
  1217: 7d 67                    a0 = i8 [s1]
  1219: 33 05 01                 s0 = 0x1
  1222: 59 07 37                 jump @112 if a0 >=s 0
      :                          @106
  1225: 84 77 ff 00              a0 = a0 & 0xff
  1229: 33 05 02                 s0 = 0x2
  1232: 53 27 c0 00 2d           jump @112 if a0 <u 192
      :                          @107
  1237: 33 05 03                 s0 = 0x3
  1240: 53 27 e0 00 25           jump @112 if a0 <u 224
      :                          @108
  1245: 33 05 04                 s0 = 0x4
  1248: 53 27 f0 00 1d           jump @112 if a0 <u 240
      :                          @109
  1253: 33 05 05                 s0 = 0x5
  1256: 53 27 f8 00 15           jump @112 if a0 <u 248
      :                          @110
  1261: 33 05 06                 s0 = 0x6
  1264: 53 27 fc 00 0d           jump @112 if a0 <u 252
      :                          @111
  1269: 88 77 fe 00              a0 = a0 <u 0xfe
  1273: 9a 75 08                 s0 = 0x8 - a0
  1276: 01                       fallthrough
      :                          @112
  1277: 7b 1a                    u64 [sp] = a3
  1279: ac 5a 4d                 jump @122 if a3 <u s0
      :                          @113
  1282: 64 67                    a0 = s1
  1284: 64 58                    a1 = s0
  1286: 50 10 1c 3d 14           ra = 28, jump @470
      :                          @114 [@dyn 14]
  1291: 82 1a                    a3 = u64 [sp]
  1293: 01                       fallthrough
      :                          @115
  1294: c8 56 09                 a2 = s1 + s0
  1297: e4 5a 08                 a1 = maxu(a3, s0)
  1300: c9 58 08                 a1 = a1 - s0
  1303: e6 78 05                 s0 = minu(a1, a0)
  1306: 46 11 0f                 u8 [sp + 15] = 0
  1309: 95 17 0f                 a0 = sp + 0xf
  1312: 33 08 01                 a1 = 0x1
  1315: 64 96                    s1 = a2
  1317: 64 5a                    a3 = s0
  1319: 0a 04                    ecalli 4 // 'write'
  1321: 01                       fallthrough
      :                          @116
  1322: 55 15 21 21              jump @121 if s0 >=u 33
      :                          @117
  1326: 64 68                    a1 = s1
  1328: 01                       fallthrough
      :                          @118
  1329: 33 06 24 00 03           s1 = 0x30024
  1334: 33 07 24 00 03           a0 = 0x30024
  1339: 64 59                    a2 = s0
  1341: 50 10 1e 1d 0a           ra = 30, jump @279
      :                          @119 [@dyn 15]
  1346: 64 69                    a2 = s1
  1348: 33 08 20                 a1 = 0x20
  1351: 28 ae fe                 jump @85
      :                          @120
  1354: 00                       trap
      :                          @121
  1355: 00                       trap
      :                          @122
  1356: 00                       trap
      :                          @123 [export #2: 'on_transfer']
  1357: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1361: 7b 10 88 02              u64 [sp + 0x288] = ra
  1365: 7b 15 80 02              u64 [sp + 0x280] = s0
  1369: 7b 16 78 02              u64 [sp + 0x278] = s1
  1373: 64 8c                    a5 = a1
  1375: 64 79                    a2 = a0
  1377: 33 02                    t0 = 0
  1379: 95 7b 04                 a4 = a0 + 0x4
  1382: 33 07 02                 a0 = 0x2
  1385: 7b 17 28                 u64 [sp + 0x28] = a0
  1388: 33 07 06                 a0 = 0x6
  1391: 7b 17 58                 u64 [sp + 0x58] = a0
  1394: 33 07 0a                 a0 = 0xa
  1397: 7b 17 20                 u64 [sp + 0x20] = a0
  1400: 33 07 58 00 01           a0 = 0x10058
  1405: 7b 17 18                 u64 [sp + 0x18] = a0
  1408: 33 07 84 00              a0 = 0x84
  1412: 7b 17 10                 u64 [sp + 0x10] = a0
  1415: 33 07 70 02 01           a0 = 0x10270
  1420: 7b 17 08                 u64 [sp + 0x8] = a0
  1423: 33 07 50 00 03           a0 = 0x30050
  1428: 95 77 00 00 01           a0 = a0 + 0x10000
  1433: 7b 17 50                 u64 [sp + 0x50] = a0
  1436: 33 07 f8 00 01           a0 = 0x100f8
  1441: 7b 17                    u64 [sp] = a0
  1443: 95 97 08                 a0 = a2 + 0x8
  1446: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1449: 95 98 0c                 a1 = a2 + 0xc
  1452: 7b 18 60                 u64 [sp + 0x60] = a1
  1455: 33 08 08                 a1 = 0x8
  1458: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
  1463: 7b 16 48                 u64 [sp + 0x48] = s1
  1466: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1470: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1474: 7b 1c 40                 u64 [sp + 0x40] = a5
  1477: 7b 19 38                 u64 [sp + 0x38] = a2
  1480: 7b 1b 30                 u64 [sp + 0x30] = a4
  1483: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1487: ac 8c c0 04              jump @171 if a5 <u a1
      :                          @124
  1491: 51 09 d5 04              jump @172 if a2 == 0
      :                          @125
  1495: 51 0b d1 04              jump @172 if a4 == 0
      :                          @126
  1499: 7c 97                    a0 = u8 [a2]
  1501: 7b 17 78                 u64 [sp + 0x78] = a0
  1504: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1507: 7b 17 68                 u64 [sp + 0x68] = a0
  1510: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1513: 7b 17 70                 u64 [sp + 0x70] = a0
  1516: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1519: 7b 17 80 00              u64 [sp + 0x80] = a0
  1523: 7c b7                    a0 = u8 [a4]
  1525: 7b 17 98 00              u64 [sp + 0x98] = a0
  1529: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1532: 7b 17 88 00              u64 [sp + 0x88] = a0
  1536: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1539: 7b 17 90 00              u64 [sp + 0x90] = a0
  1543: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1546: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1550: 51 0a 53                 jump @136 if a3 == 0
      :                          @127
  1553: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1557: 7d 77                    a0 = i8 [a0]
  1559: 33 05 01                 s0 = 0x1
  1562: 59 07 4a                 jump @137 if a0 >=s 0
      :                          @128
  1565: 84 77 ff 00              a0 = a0 & 0xff
  1569: 33 05 02                 s0 = 0x2
  1572: 33 06 c0 00              s1 = 0xc0
  1576: ac 67 33                 jump @134 if a0 <u s1
      :                          @129
  1579: 33 05 03                 s0 = 0x3
  1582: 33 06 e0 00              s1 = 0xe0
  1586: ac 67 29                 jump @134 if a0 <u s1
      :                          @130
  1589: 33 05 04                 s0 = 0x4
  1592: 33 06 f0 00              s1 = 0xf0
  1596: ac 67 1f                 jump @134 if a0 <u s1
      :                          @131
  1599: 33 05 05                 s0 = 0x5
  1602: 33 06 f8 00              s1 = 0xf8
  1606: ac 67 15                 jump @134 if a0 <u s1
      :                          @132
  1609: 33 05 06                 s0 = 0x6
  1612: 33 06 fc 00              s1 = 0xfc
  1616: ac 67 0b                 jump @134 if a0 <u s1
      :                          @133
  1619: 88 77 fe 00              a0 = a0 <u 0xfe
  1623: 9a 75 08                 s0 = 0x8 - a0
  1626: 01                       fallthrough
      :                          @134
  1627: ae 5a 09                 jump @137 if a3 >=u s0
      :                          @135
  1630: 28 31 04                 jump @171
      :                          @136
  1633: 33 05                    s0 = 0
  1635: 01                       fallthrough
      :                          @137
  1636: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1640: 64 58                    a1 = s0
  1642: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1646: 50 10 20 d5 12           ra = 32, jump @470
      :                          @138 [@dyn 16]
  1651: 33 03 98 00              t1 = 0x98
  1655: 33 02 04                 t0 = 0x4
  1658: 33 06 08                 s1 = 0x8
  1661: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1665: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1669: ae 7b 0a 04              jump @171 if a4 >=u a0
      :                          @139
  1673: 82 18 68                 a1 = u64 [sp + 0x68]
  1676: 97 88 08                 a1 = a1 << 0x8
  1679: 82 19 78                 a2 = u64 [sp + 0x78]
  1682: d4 98 08                 a1 = a1 | a2
  1685: 82 19 70                 a2 = u64 [sp + 0x70]
  1688: 97 99 10                 a2 = a2 << 0x10
  1691: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1695: 97 aa 18                 a3 = a3 << 0x18
  1698: d4 a9 09                 a2 = a2 | a3
  1701: d4 89 04                 t2 = a2 | a1
  1704: 82 18 88 00              a1 = u64 [sp + 0x88]
  1708: 97 88 08                 a1 = a1 << 0x8
  1711: 82 19 98 00              a2 = u64 [sp + 0x98]
  1715: d4 98 08                 a1 = a1 | a2
  1718: 82 19 90 00              a2 = u64 [sp + 0x90]
  1722: 97 99 10                 a2 = a2 << 0x10
  1725: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1729: 97 aa 18                 a3 = a3 << 0x18
  1732: d4 a9 09                 a2 = a2 | a3
  1735: d4 89 00                 ra = a2 | a1
  1738: e4 5c 08                 a1 = maxu(a5, s0)
  1741: c9 58 08                 a1 = a1 - s0
  1744: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1748: c8 59 09                 a2 = a2 + s0
  1751: 82 1a 60                 a3 = u64 [sp + 0x60]
  1754: c8 a5 05                 s0 = s0 + a3
  1757: 64 ba                    a3 = a4
  1759: 01                       fallthrough
      :                          @140
  1760: ac 68 af 03              jump @171 if a1 <u s1
      :                          @141
  1764: aa 25 c4 03              jump @172 if s0 == t0
      :                          @142
  1768: 51 05 c0 03              jump @172 if s0 == 0
      :                          @143
  1772: ac 38 a3 03              jump @171 if a1 <u t1
      :                          @144
  1776: 51 0a 17                 jump @147 if a3 == 0
      :                          @145
  1779: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1783: 95 55 98 00              s0 = s0 + 0x98
  1787: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1790: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1793: 52 07 df                 jump @140 if a0 != 0
      :                          @146
  1796: 28 8b 03                 jump @171
      :                          @147
  1799: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1802: 7c 98                    a1 = u8 [a2]
  1804: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1807: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1810: 8a 77 08                 i32 a0 = a0 << 0x8
  1813: d4 87 07                 a0 = a0 | a1
  1816: 8a a8 10                 i32 a1 = a3 << 0x10
  1819: 8a ba 18                 i32 a3 = a4 << 0x18
  1822: d4 a8 08                 a1 = a1 | a3
  1825: d4 87 07                 a0 = a0 | a1
  1828: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1832: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1835: 7c 58                    a1 = u8 [s0]
  1837: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1840: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1843: 8a 77 08                 i32 a0 = a0 << 0x8
  1846: d4 87 07                 a0 = a0 | a1
  1849: 8a a8 10                 i32 a1 = a3 << 0x10
  1852: 8a ba 18                 i32 a3 = a4 << 0x18
  1855: d4 a8 08                 a1 = a1 | a3
  1858: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1861: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1864: d4 87 07                 a0 = a0 | a1
  1867: 7b 17 98 00              u64 [sp + 0x98] = a0
  1871: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1874: 97 aa 10                 a3 = a3 << 0x10
  1877: 97 bb 08                 a4 = a4 << 0x8
  1880: d4 ba 0a                 a3 = a3 | a4
  1883: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1886: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1889: d4 a7 07                 a0 = a0 | a3
  1892: 97 77 10                 a0 = a0 << 0x10
  1895: 97 88 08                 a1 = a1 << 0x8
  1898: d4 b8 08                 a1 = a1 | a4
  1901: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1904: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1907: d4 87 07                 a0 = a0 | a1
  1910: 97 77 10                 a0 = a0 << 0x10
  1913: 97 aa 08                 a3 = a3 << 0x8
  1916: d4 ba 0a                 a3 = a3 | a4
  1919: d4 a7 07                 a0 = a0 | a3
  1922: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1925: 97 77 08                 a0 = a0 << 0x8
  1928: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1932: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1936: d4 87 07                 a0 = a0 | a1
  1939: 7b 17 90 00              u64 [sp + 0x90] = a0
  1943: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1947: 97 aa 10                 a3 = a3 << 0x10
  1950: 97 bb 08                 a4 = a4 << 0x8
  1953: d4 ba 0a                 a3 = a3 | a4
  1956: d4 a7 07                 a0 = a0 | a3
  1959: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1963: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1967: 95 98 10                 a1 = a2 + 0x10
  1970: 97 77 10                 a0 = a0 << 0x10
  1973: 97 aa 08                 a3 = a3 << 0x8
  1976: d4 ba 0a                 a3 = a3 | a4
  1979: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1983: d4 a7 07                 a0 = a0 | a3
  1986: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1990: 97 77 10                 a0 = a0 << 0x10
  1993: 97 bb 08                 a4 = a4 << 0x8
  1996: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  2000: d4 ba 0a                 a3 = a3 | a4
  2003: d4 a7 07                 a0 = a0 | a3
  2006: 97 77 08                 a0 = a0 << 0x8
  2009: d4 97 07                 a0 = a0 | a2
  2012: 7b 17 88 00              u64 [sp + 0x88] = a0
  2016: 95 17 68 01              a0 = sp + 0x168
  2020: 33 09 80 00              a2 = 0x80
  2024: 64 45                    s0 = t2
  2026: 64 06                    s1 = ra
  2028: 50 10 22 6e 07           ra = 34, jump @279
      :                          @148 [@dyn 17]
  2033: 95 17 e0 00              a0 = sp + 0xe0
  2037: 95 18 68 01              a1 = sp + 0x168
  2041: 33 09 80 00              a2 = 0x80
  2045: 50 10 24 5d 07           ra = 36, jump @279
      :                          @149 [@dyn 18]
  2050: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  2054: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  2058: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  2062: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  2066: 82 17 98 00              a0 = u64 [sp + 0x98]
  2070: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  2074: 82 17 90 00              a0 = u64 [sp + 0x90]
  2078: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  2082: 82 17 88 00              a0 = u64 [sp + 0x88]
  2086: 7b 17 60 01              u64 [sp + 0x160] = a0
  2090: 95 17 c8 00              a0 = sp + 0xc8
  2094: 7b 17 68 01              u64 [sp + 0x168] = a0
  2098: 82 17 28                 a0 = u64 [sp + 0x28]
  2101: 7b 17 70 01              u64 [sp + 0x170] = a0
  2105: 95 18 cc 00              a1 = sp + 0xcc
  2109: 7b 18 78 01              u64 [sp + 0x178] = a1
  2113: 7b 17 80 01              u64 [sp + 0x180] = a0
  2117: 95 18 d0 00              a1 = sp + 0xd0
  2121: 7b 18 88 01              u64 [sp + 0x188] = a1
  2125: 7b 17 90 01              u64 [sp + 0x190] = a0
  2129: 95 18 d4 00              a1 = sp + 0xd4
  2133: 7b 18 98 01              u64 [sp + 0x198] = a1
  2137: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2141: 95 17 d8 00              a0 = sp + 0xd8
  2145: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2149: 82 17 58                 a0 = u64 [sp + 0x58]
  2152: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2156: 95 18 e0 00              a1 = sp + 0xe0
  2160: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2164: 82 18 20                 a1 = u64 [sp + 0x20]
  2167: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2171: 95 18 60 01              a1 = sp + 0x160
  2175: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2179: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2183: 82 17 18                 a0 = u64 [sp + 0x18]
  2186: 7b 17 28 02              u64 [sp + 0x228] = a0
  2190: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2195: 49 21 48 02              u64 [sp + 584] = 0
  2199: 95 17 68 01              a0 = sp + 0x168
  2203: 7b 17 38 02              u64 [sp + 0x238] = a0
  2207: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2212: 95 17 58 02              a0 = sp + 0x258
  2216: 95 18 28 02              a1 = sp + 0x228
  2220: 50 10 26 3a 04           ra = 38, jump @229
      :                          @150 [@dyn 19]
  2225: 82 15 60 02              s0 = u64 [sp + 0x260]
  2229: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2233: 82 16 58 02              s1 = u64 [sp + 0x258]
  2237: 33 07 02                 a0 = 0x2
  2240: 33 08                    a1 = 0
  2242: 33 09                    a2 = 0
  2244: 64 5a                    a3 = s0
  2246: 33 00 28                 ra = 0x28
  2249: 0a 64                    ecalli 100 // 'log'
  2251: 01                       fallthrough
      :                          @151 [@dyn 20]
  2252: 82 17 48                 a0 = u64 [sp + 0x48]
  2255: c8 67 07                 a0 = a0 + s1
  2258: 82 1b 50                 a4 = u64 [sp + 0x50]
  2261: 53 37 00 00 ff 1a        jump @156 if a0 <u 4294901760
      :                          @152
  2267: 82 b7                    a0 = u64 [a4]
  2269: c9 7b 08                 a1 = a4 - a0
  2272: ab 58 0f                 jump @156 if a1 != s0
      :                          @153
  2275: c9 67 08                 a1 = a0 - s1
  2278: 01                       fallthrough
      :                          @154
  2279: 82 b9                    a2 = u64 [a4]
  2281: ab 79 f2                 jump @152 if a2 != a0
      :                          @155
  2284: 7b b8                    u64 [a4] = a1
  2286: 01                       fallthrough
      :                          @156
  2287: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2291: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2295: 95 17 ec 01              a0 = sp + 0x1ec
  2299: 33 08 04                 a1 = 0x4
  2302: 95 19 e0 00              a2 = sp + 0xe0
  2306: 33 0a 80 00              a3 = 0x80
  2310: 0a 04                    ecalli 4 // 'write'
  2312: 0a                       ecalli 0 // 'gas'
  2313: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2317: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2321: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2326: 7b 17 08 02              u64 [sp + 0x208] = a0
  2330: 95 17 07 02              a0 = sp + 0x207
  2334: 33 08 01                 a1 = 0x1
  2337: 95 19 08 02              a2 = sp + 0x208
  2341: 33 0a 08                 a3 = 0x8
  2344: 0a 04                    ecalli 4 // 'write'
  2346: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2351: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2356: 49 21 88 01              u64 [sp + 392] = 0
  2360: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2370: 7b 17 90 01              u64 [sp + 0x190] = a0
  2374: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2379: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2384: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2389: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2394: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2398: 95 17 07 02              a0 = sp + 0x207
  2402: 7b 17 58 02              u64 [sp + 0x258] = a0
  2406: 82 17 10                 a0 = u64 [sp + 0x10]
  2409: 7b 17 60 02              u64 [sp + 0x260] = a0
  2413: 95 17 f8 01              a0 = sp + 0x1f8
  2417: 7b 17 68 02              u64 [sp + 0x268] = a0
  2421: 82 17 58                 a0 = u64 [sp + 0x58]
  2424: 7b 17 70 02              u64 [sp + 0x270] = a0
  2428: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2433: 82 17 08                 a0 = u64 [sp + 0x8]
  2436: 7b 17 28 02              u64 [sp + 0x228] = a0
  2440: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2445: 95 17 68 01              a0 = sp + 0x168
  2449: 7b 17 48 02              u64 [sp + 0x248] = a0
  2453: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2458: 95 17 58 02              a0 = sp + 0x258
  2462: 7b 17 38 02              u64 [sp + 0x238] = a0
  2466: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2471: 95 17 10 02              a0 = sp + 0x210
  2475: 95 18 28 02              a1 = sp + 0x228
  2479: 50 10 2a 37 03           ra = 42, jump @229
      :                          @157 [@dyn 21]
  2484: 82 15 18 02              s0 = u64 [sp + 0x218]
  2488: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2492: 82 16 10 02              s1 = u64 [sp + 0x210]
  2496: 33 07 02                 a0 = 0x2
  2499: 33 08                    a1 = 0
  2501: 33 09                    a2 = 0
  2503: 64 5a                    a3 = s0
  2505: 33 00 2c                 ra = 0x2c
  2508: 0a 64                    ecalli 100 // 'log'
  2510: 01                       fallthrough
      :                          @158 [@dyn 22]
  2511: 82 1b 50                 a4 = u64 [sp + 0x50]
  2514: 82 17 48                 a0 = u64 [sp + 0x48]
  2517: c8 67 07                 a0 = a0 + s1
  2520: 53 37 00 00 ff 1a        jump @163 if a0 <u 4294901760
      :                          @159
  2526: 82 b7                    a0 = u64 [a4]
  2528: c9 7b 08                 a1 = a4 - a0
  2531: ab 58 0f                 jump @163 if a1 != s0
      :                          @160
  2534: c9 67 08                 a1 = a0 - s1
  2537: 01                       fallthrough
      :                          @161
  2538: 82 b9                    a2 = u64 [a4]
  2540: ab 79 f2                 jump @159 if a2 != a0
      :                          @162
  2543: 7b b8                    u64 [a4] = a1
  2545: 01                       fallthrough
      :                          @163
  2546: 95 17 f0 01              a0 = sp + 0x1f0
  2550: 7b 17 58 02              u64 [sp + 0x258] = a0
  2554: 82 17 58                 a0 = u64 [sp + 0x58]
  2557: 7b 17 60 02              u64 [sp + 0x260] = a0
  2561: 82 17                    a0 = u64 [sp]
  2563: 7b 17 68 01              u64 [sp + 0x168] = a0
  2567: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2572: 49 21 88 01              u64 [sp + 392] = 0
  2576: 95 17 58 02              a0 = sp + 0x258
  2580: 7b 17 78 01              u64 [sp + 0x178] = a0
  2584: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2589: 95 17 28 02              a0 = sp + 0x228
  2593: 95 18 68 01              a1 = sp + 0x168
  2597: 50 10 2e c1 02           ra = 46, jump @229
      :                          @164 [@dyn 23]
  2602: 82 15 30 02              s0 = u64 [sp + 0x230]
  2606: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2610: 82 16 28 02              s1 = u64 [sp + 0x228]
  2614: 33 07 02                 a0 = 0x2
  2617: 33 08                    a1 = 0
  2619: 33 09                    a2 = 0
  2621: 64 5a                    a3 = s0
  2623: 33 00 30                 ra = 0x30
  2626: 0a 64                    ecalli 100 // 'log'
  2628: 01                       fallthrough
      :                          @165 [@dyn 24]
  2629: 82 1b 50                 a4 = u64 [sp + 0x50]
  2632: 82 17 48                 a0 = u64 [sp + 0x48]
  2635: c8 67 07                 a0 = a0 + s1
  2638: 53 37 00 00 ff 1a        jump @170 if a0 <u 4294901760
      :                          @166
  2644: 82 b7                    a0 = u64 [a4]
  2646: c9 7b 08                 a1 = a4 - a0
  2649: ab 58 0f                 jump @170 if a1 != s0
      :                          @167
  2652: c9 67 08                 a1 = a0 - s1
  2655: 01                       fallthrough
      :                          @168
  2656: 82 b9                    a2 = u64 [a4]
  2658: ab 79 f2                 jump @166 if a2 != a0
      :                          @169
  2661: 7b b8                    u64 [a4] = a1
  2663: 01                       fallthrough
      :                          @170
  2664: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2668: 95 22 01                 t0 = t0 + 0x1
  2671: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2675: 95 77 98 00              a0 = a0 + 0x98
  2679: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2683: 82 1c 40                 a5 = u64 [sp + 0x40]
  2686: 82 19 38                 a2 = u64 [sp + 0x38]
  2689: 82 1b 30                 a4 = u64 [sp + 0x30]
  2692: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2696: 33 08 08                 a1 = 0x8
  2699: ae 8c 48 fb              jump @124 if a5 >=u a1
      :                          @171
  2703: 33 07 00 00 01           a0 = 0x10000
  2708: 33 08                    a1 = 0
  2710: 82 10 88 02              ra = u64 [sp + 0x288]
  2714: 82 15 80 02              s0 = u64 [sp + 0x280]
  2718: 82 16 78 02              s1 = u64 [sp + 0x278]
  2722: 95 11 90 02              sp = sp + 0x290
  2726: 32 00                    ret
      :                          @172
  2728: 00                       trap
      :                          @173
  2729: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2732: 7b 10 40                 u64 [sp + 0x40] = ra
  2735: 7b 15 38                 u64 [sp + 0x38] = s0
  2738: 7b 16 30                 u64 [sp + 0x30] = s1
  2741: c8 89 09                 a2 = a2 + a1
  2744: ac 89 52                 jump @181 if a2 <u a1
      :                          @174
  2747: 64 75                    s0 = a0
  2749: 82 77                    a0 = u64 [a0]
  2751: 97 78 01                 a1 = a0 << 0x1
  2754: 33 0a 08                 a3 = 0x8
  2757: e4 a9 09                 a2 = maxu(a2, a3)
  2760: e4 98 06                 s1 = maxu(a1, a2)
  2763: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2766: 98 88 3f                 a1 = a1 >> 0x3f
  2769: 51 07 12                 jump @176 if a0 == 0
      :                          @175
  2772: 82 59 08                 a2 = u64 [s0 + 0x8]
  2775: 7b 19 18                 u64 [sp + 0x18] = a2
  2778: 49 11 20 01              u64 [sp + 32] = 0x1
  2782: 7b 17 28                 u64 [sp + 0x28] = a0
  2785: 28 06                    jump @177
      :                          @176
  2787: 49 11 20                 u64 [sp + 32] = 0
  2790: 01                       fallthrough
      :                          @177
  2791: 64 17                    a0 = sp
  2793: 95 1a 18                 a3 = sp + 0x18
  2796: 64 69                    a2 = s1
  2798: 50 10 32 32              ra = 50, jump @185
      :                          @178 [@dyn 25]
  2802: 82 18                    a1 = u64 [sp]
  2804: 82 17 08                 a0 = u64 [sp + 0x8]
  2807: 51 08 14                 jump @182 if a1 == 0
      :                          @179
  2810: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2820: aa 87 0d                 jump @183 if a0 == a1
      :                          @180
  2823: 52 07 18                 jump @184 if a0 != 0
      :                          @181
  2826: 00                       trap
      :                          @182
  2827: 7b 57 08                 u64 [s0 + 0x8] = a0
  2830: 7b 56                    u64 [s0] = s1
  2832: 01                       fallthrough
      :                          @183
  2833: 82 10 40                 ra = u64 [sp + 0x40]
  2836: 82 15 38                 s0 = u64 [sp + 0x38]
  2839: 82 16 30                 s1 = u64 [sp + 0x30]
  2842: 95 11 48                 sp = sp + 0x48
  2845: 32 00                    ret
      :                          @184
  2847: 00                       trap
      :                          @185
  2848: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2851: 7b 10 30                 u64 [sp + 0x30] = ra
  2854: 7b 15 28                 u64 [sp + 0x28] = s0
  2857: 7b 16 20                 u64 [sp + 0x20] = s1
  2860: 64 95                    s0 = a2
  2862: 64 72                    t0 = a0
  2864: 51 08 79                 jump @195 if a1 == 0
      :                          @186
  2867: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2870: 51 07 7c                 jump @196 if a0 == 0
      :                          @187
  2873: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2876: 51 09 aa 00              jump @203 if a2 == 0
      :                          @188
  2880: 82 a8                    a1 = u64 [a3]
  2882: 33 06 50 00 03           s1 = 0x30050
  2887: 33 03 00 00 01           t1 = 0x10000
  2892: c8 36 06                 s1 = s1 + t1
  2895: 01                       fallthrough
      :                          @189
  2896: 82 6a                    a3 = u64 [s1]
  2898: c8 5a 07                 a0 = a3 + s0
  2901: ac a7 cf 00              jump @209 if a0 <u a3
      :                          @190
  2905: 95 7b 01                 a4 = a0 + 0x1
  2908: 88 bc 01                 a5 = a4 <u 0x1
  2911: d8 b3 0b                 a4 = t1 <u a4
  2914: d4 cb 0b                 a4 = a4 | a5
  2917: 52 0b bf 00              jump @209 if a4 != 0
      :                          @191
  2921: 82 6b                    a4 = u64 [s1]
  2923: ab ab e5                 jump @189 if a4 != a3
      :                          @192
  2926: 7b 67                    u64 [s1] = a0
  2928: 33 0c                    a5 = 0
  2930: 7b 12 18                 u64 [sp + 0x18] = t0
  2933: 33 0a 50 00 03           a3 = 0x30050
  2938: 33 0b 00 00 01           a4 = 0x10000
  2943: 7b 1a                    u64 [sp] = a3
  2945: c8 ba 0a                 a3 = a3 + a4
  2948: c9 7a 07                 a0 = a3 - a0
  2951: 7b 17 10                 u64 [sp + 0x10] = a0
  2954: 7b 18 08                 u64 [sp + 0x8] = a1
  2957: 64 96                    s1 = a2
  2959: 50 10 34 cb 03           ra = 52, jump @279
      :                          @193 [@dyn 26]
  2964: 54 36 00 00 01 98 00     jump @210 if s1 <=u 65536
      :                          @194
  2971: 82 12 18                 t0 = u64 [sp + 0x18]
  2974: 82 18 10                 a1 = u64 [sp + 0x10]
  2977: 33 07                    a0 = 0
  2979: 7b 28 08                 u64 [t0 + 0x8] = a1
  2982: 28 b5 00                 jump @216
      :                          @195
  2985: 49 12 08                 u64 [t0 + 8] = 0
  2988: 33 07 01                 a0 = 0x1
  2991: 28 ac 00                 jump @216
      :                          @196
  2994: 33 09 50 00 03           a2 = 0x30050
  2999: 33 07 00 00 01           a0 = 0x10000
  3004: c8 79 09                 a2 = a2 + a0
  3007: 01                       fallthrough
      :                          @197
  3008: 82 9a                    a3 = u64 [a2]
  3010: c8 5a 08                 a1 = a3 + s0
  3013: ac a8 5f                 jump @209 if a1 <u a3
      :                          @198
  3016: 95 8b 01                 a4 = a1 + 0x1
  3019: 88 bc 01                 a5 = a4 <u 0x1
  3022: d8 b7 0b                 a4 = a0 <u a4
  3025: d4 cb 0b                 a4 = a4 | a5
  3028: 52 0b 50                 jump @209 if a4 != 0
      :                          @199
  3031: 82 9b                    a4 = u64 [a2]
  3033: ab ab e7                 jump @197 if a4 != a3
      :                          @200
  3036: 7b 98                    u64 [a2] = a1
  3038: 33 0c                    a5 = 0
  3040: 01                       fallthrough
      :                          @201
  3041: ab ab df                 jump @197 if a4 != a3
      :                          @202
  3044: 28 31                    jump @208
      :                          @203
  3046: 33 09 50 00 03           a2 = 0x30050
  3051: 33 07 00 00 01           a0 = 0x10000
  3056: c8 79 09                 a2 = a2 + a0
  3059: 01                       fallthrough
      :                          @204
  3060: 82 9a                    a3 = u64 [a2]
  3062: c8 5a 08                 a1 = a3 + s0
  3065: ac a8 2b                 jump @209 if a1 <u a3
      :                          @205
  3068: 95 8b 01                 a4 = a1 + 0x1
  3071: 88 bc 01                 a5 = a4 <u 0x1
  3074: d8 b7 0b                 a4 = a0 <u a4
  3077: d4 cb 0b                 a4 = a4 | a5
  3080: 52 0b 1c                 jump @209 if a4 != 0
      :                          @206
  3083: 82 9b                    a4 = u64 [a2]
  3085: ab ab e7                 jump @204 if a4 != a3
      :                          @207
  3088: 7b 98                    u64 [a2] = a1
  3090: 33 0c                    a5 = 0
  3092: 01                       fallthrough
      :                          @208
  3093: 33 07 50 00 04           a0 = 0x40050
  3098: c9 87 08                 a1 = a0 - a1
  3101: 33 07                    a0 = 0
  3103: 7b 28 08                 u64 [t0 + 0x8] = a1
  3106: 28 39                    jump @216
      :                          @209
  3108: 33 07 01                 a0 = 0x1
  3111: 7b 27 08                 u64 [t0 + 0x8] = a0
  3114: 28 31                    jump @216
      :                          @210
  3116: 64 6c                    a5 = s1
  3118: 82 17                    a0 = u64 [sp]
  3120: 95 77 00 00 01           a0 = a0 + 0x10000
  3125: 82 12 18                 t0 = u64 [sp + 0x18]
  3128: 82 16 08                 s1 = u64 [sp + 0x8]
  3131: 01                       fallthrough
      :                          @211
  3132: 82 78                    a1 = u64 [a0]
  3134: c9 87 09                 a2 = a0 - a1
  3137: ab 69 11                 jump @215 if a2 != s1
      :                          @212
  3140: c9 c8 09                 a2 = a1 - a5
  3143: 01                       fallthrough
      :                          @213
  3144: 82 7a                    a3 = u64 [a0]
  3146: ab 8a f2                 jump @211 if a3 != a1
      :                          @214
  3149: 7b 79                    u64 [a0] = a2
  3151: 33 0b                    a4 = 0
  3153: 01                       fallthrough
      :                          @215
  3154: 82 18 10                 a1 = u64 [sp + 0x10]
  3157: 33 07                    a0 = 0
  3159: 7b 28 08                 u64 [t0 + 0x8] = a1
  3162: 01                       fallthrough
      :                          @216
  3163: 7b 25 10                 u64 [t0 + 0x10] = s0
  3166: 7b 27                    u64 [t0] = a0
  3168: 82 10 30                 ra = u64 [sp + 0x30]
  3171: 82 15 28                 s0 = u64 [sp + 0x28]
  3174: 82 16 20                 s1 = u64 [sp + 0x20]
  3177: 95 11 38                 sp = sp + 0x38
  3180: 32 00                    ret
      :                          @217
  3182: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3185: 7b 10 40                 u64 [sp + 0x40] = ra
  3188: 7b 15 38                 u64 [sp + 0x38] = s0
  3191: 7b 16 30                 u64 [sp + 0x30] = s1
  3194: 95 88 01                 a1 = a1 + 0x1
  3197: 51 08 53                 jump @225 if a1 == 0
      :                          @218
  3200: 64 75                    s0 = a0
  3202: 82 77                    a0 = u64 [a0]
  3204: 97 79 01                 a2 = a0 << 0x1
  3207: 33 0a 08                 a3 = 0x8
  3210: e4 a8 08                 a1 = maxu(a1, a3)
  3213: e4 89 06                 s1 = maxu(a2, a1)
  3216: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3219: 98 88 3f                 a1 = a1 >> 0x3f
  3222: 51 07 12                 jump @220 if a0 == 0
      :                          @219
  3225: 82 59 08                 a2 = u64 [s0 + 0x8]
  3228: 7b 19 18                 u64 [sp + 0x18] = a2
  3231: 49 11 20 01              u64 [sp + 32] = 0x1
  3235: 7b 17 28                 u64 [sp + 0x28] = a0
  3238: 28 06                    jump @221
      :                          @220
  3240: 49 11 20                 u64 [sp + 32] = 0
  3243: 01                       fallthrough
      :                          @221
  3244: 64 17                    a0 = sp
  3246: 95 1a 18                 a3 = sp + 0x18
  3249: 64 69                    a2 = s1
  3251: 50 10 36 6d fe           ra = 54, jump @185
      :                          @222 [@dyn 27]
  3256: 82 18                    a1 = u64 [sp]
  3258: 82 17 08                 a0 = u64 [sp + 0x8]
  3261: 51 08 14                 jump @226 if a1 == 0
      :                          @223
  3264: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3274: aa 87 0d                 jump @227 if a0 == a1
      :                          @224
  3277: 52 07 18                 jump @228 if a0 != 0
      :                          @225
  3280: 00                       trap
      :                          @226
  3281: 7b 57 08                 u64 [s0 + 0x8] = a0
  3284: 7b 56                    u64 [s0] = s1
  3286: 01                       fallthrough
      :                          @227
  3287: 82 10 40                 ra = u64 [sp + 0x40]
  3290: 82 15 38                 s0 = u64 [sp + 0x38]
  3293: 82 16 30                 s1 = u64 [sp + 0x30]
  3296: 95 11 48                 sp = sp + 0x48
  3299: 32 00                    ret
      :                          @228
  3301: 00                       trap
      :                          @229
  3302: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3305: 7b 10 30                 u64 [sp + 0x30] = ra
  3308: 7b 15 28                 u64 [sp + 0x28] = s0
  3311: 7b 16 20                 u64 [sp + 0x20] = s1
  3314: 64 89                    a2 = a1
  3316: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3319: 64 75                    s0 = a0
  3321: 51 0a 35                 jump @234 if a3 == 0
      :                          @230
  3324: 82 98                    a1 = u64 [a2]
  3326: 33 07                    a0 = 0
  3328: 95 8b 08                 a4 = a1 + 0x8
  3331: 01                       fallthrough
      :                          @231
  3332: 82 bc                    a5 = u64 [a4]
  3334: c8 c7 07                 a0 = a0 + a5
  3337: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3340: 95 bb 10                 a4 = a4 + 0x10
  3343: 52 0a f5                 jump @231 if a3 != 0
      :                          @232
  3346: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3349: 51 0a 24                 jump @236 if a3 == 0
      :                          @233
  3352: 82 88 08                 a1 = u64 [a1 + 0x8]
  3355: 8e 88                    a1 = a1 >u 0
  3357: 88 7a 10                 a3 = a0 <u 0x10
  3360: 85 aa 01                 a3 = a3 ^ 0x1
  3363: d4 a8 08                 a1 = a1 | a3
  3366: 89 7a                    a3 = a0 <s 0
  3368: e0 a8 08                 a1 = a1 & ~a3
  3371: 52 08 0a                 jump @235 if a1 != 0
      :                          @234
  3374: 33 07                    a0 = 0
  3376: 33 08 01                 a1 = 0x1
  3379: 28 4a                    jump @244
      :                          @235
  3381: 97 77 01                 a0 = a0 << 0x1
  3384: 01                       fallthrough
      :                          @236
  3385: 51 07 40                 jump @243 if a0 == 0
      :                          @237
  3388: 57 07 78                 jump @249 if a0 <s 0
      :                          @238
  3391: 64 52                    t0 = s0
  3393: 33 0b 50 00 03           a4 = 0x30050
  3398: 33 08 00 00 01           a1 = 0x10000
  3403: c8 8b 0b                 a4 = a4 + a1
  3406: 01                       fallthrough
      :                          @239
  3407: 82 bc                    a5 = u64 [a4]
  3409: c8 7c 0a                 a3 = a5 + a0
  3412: ac ca 5e                 jump @247 if a3 <u a5
      :                          @240
  3415: 95 a5 01                 s0 = a3 + 0x1
  3418: 88 56 01                 s1 = s0 <u 0x1
  3421: d8 58 05                 s0 = a1 <u s0
  3424: d4 65 05                 s0 = s0 | s1
  3427: 52 05 4f                 jump @247 if s0 != 0
      :                          @241
  3430: 82 b6                    s1 = u64 [a4]
  3432: ab c6 e7                 jump @239 if s1 != a5
      :                          @242
  3435: 7b ba                    u64 [a4] = a3
  3437: 33 08 50 00 04           a1 = 0x40050
  3442: c9 a8 08                 a1 = a1 - a3
  3445: 64 25                    s0 = t0
  3447: 28 06                    jump @244
      :                          @243
  3449: 33 08 01                 a1 = 0x1
  3452: 01                       fallthrough
      :                          @244
  3453: 7b 17                    u64 [sp] = a0
  3455: 7b 18 08                 u64 [sp + 0x8] = a1
  3458: 49 11 10                 u64 [sp + 16] = 0
  3461: 33 08 18 01 01           a1 = 0x10118
  3466: 64 17                    a0 = sp
  3468: 50 10 38 1a 06           ra = 56, jump @361
      :                          @245 [@dyn 28]
  3473: 52 07 22                 jump @248 if a0 != 0
      :                          @246
  3476: 82 17 10                 a0 = u64 [sp + 0x10]
  3479: 82 18 08                 a1 = u64 [sp + 0x8]
  3482: 82 19                    a2 = u64 [sp]
  3484: 7b 57 10                 u64 [s0 + 0x10] = a0
  3487: 7b 58 08                 u64 [s0 + 0x8] = a1
  3490: 7b 59                    u64 [s0] = a2
  3492: 82 10 30                 ra = u64 [sp + 0x30]
  3495: 82 15 28                 s0 = u64 [sp + 0x28]
  3498: 82 16 20                 s1 = u64 [sp + 0x20]
  3501: 95 11 38                 sp = sp + 0x38
  3504: 32 00                    ret
      :                          @247
  3506: 00                       trap
      :                          @248
  3507: 00                       trap
      :                          @249
  3508: 00                       trap
      :                          @250 [@dyn 29]
  3509: 82 72                    t0 = u64 [a0]
  3511: 33 09 00 00 ff           a2 = 0xffffffffffff0000
  3516: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
  3521: ac 9a 28                 jump @256 if a3 <u a2
      :                          @251
  3524: 82 77 08                 a0 = u64 [a0 + 0x8]
  3527: 33 09 50 00 03           a2 = 0x30050
  3532: 95 99 00 00 01           a2 = a2 + 0x10000
  3537: 01                       fallthrough
      :                          @252
  3538: 82 9a                    a3 = u64 [a2]
  3540: c9 a9 0b                 a4 = a2 - a3
  3543: ab 7b 12                 jump @256 if a4 != a0
      :                          @253
  3546: c9 2a 0b                 a4 = a3 - t0
  3549: 01                       fallthrough
      :                          @254
  3550: 82 9c                    a5 = u64 [a2]
  3552: ab ac f2                 jump @252 if a5 != a3
      :                          @255
  3555: 7b 9b                    u64 [a2] = a4
  3557: 33 08                    a1 = 0
  3559: 32 00                    ret
      :                          @256
  3561: 32 00                    ret
      :                          @257 [@dyn 30]
  3563: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3566: 7b 10 18                 u64 [sp + 0x18] = ra
  3569: 7b 15 10                 u64 [sp + 0x10] = s0
  3572: 7b 16 08                 u64 [sp + 0x8] = s1
  3575: 64 75                    s0 = a0
  3577: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3580: 82 77                    a0 = u64 [a0]
  3582: c9 a7 07                 a0 = a0 - a3
  3585: 64 96                    s1 = a2
  3587: ac 97 2a                 jump @260 if a0 <u a2
      :                          @258
  3590: 7b 1a                    u64 [sp] = a3
  3592: 82 57 08                 a0 = u64 [s0 + 0x8]
  3595: c8 a7 07                 a0 = a0 + a3
  3598: 64 69                    a2 = s1
  3600: 50 10 3e 4a 01           ra = 62, jump @279
      :                          @259 [@dyn 31]
  3605: 82 17                    a0 = u64 [sp]
  3607: c8 76 06                 s1 = s1 + a0
  3610: 7b 56 10                 u64 [s0 + 0x10] = s1
  3613: 33 07                    a0 = 0
  3615: 82 10 18                 ra = u64 [sp + 0x18]
  3618: 82 15 10                 s0 = u64 [sp + 0x10]
  3621: 82 16 08                 s1 = u64 [sp + 0x8]
  3624: 95 11 20                 sp = sp + 0x20
  3627: 32 00                    ret
      :                          @260
  3629: 64 57                    a0 = s0
  3631: 7b 18                    u64 [sp] = a1
  3633: 64 a8                    a1 = a3
  3635: 64 69                    a2 = s1
  3637: 50 10 40 74 fc           ra = 64, jump @173
      :                          @261 [@dyn 32]
  3642: 82 18                    a1 = u64 [sp]
  3644: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3647: 28 c7                    jump @258
      :                          @262 [@dyn 33]
  3649: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3652: 7b 10 20                 u64 [sp + 0x20] = ra
  3655: 7b 15 18                 u64 [sp + 0x18] = s0
  3658: 7b 16 10                 u64 [sp + 0x10] = s1
  3661: 64 86                    s1 = a1
  3663: 83 88                    i32 a1 = a1 + 0
  3665: 33 09 80 00              a2 = 0x80
  3669: 64 7a                    a3 = a0
  3671: ae 98 2b                 jump @267 if a1 >=u a2
      :                          @263
  3674: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3677: 82 a7                    a0 = u64 [a3]
  3679: ab 78 12                 jump @266 if a1 != a0
      :                          @264
  3682: 64 a7                    a0 = a3
  3684: 64 a5                    s0 = a3
  3686: 50 10 44 08 fe           ra = 68, jump @217
      :                          @265 [@dyn 34]
  3691: 64 5a                    a3 = s0
  3693: 82 58 10                 a1 = u64 [s0 + 0x10]
  3696: 01                       fallthrough
      :                          @266
  3697: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3700: c8 87 07                 a0 = a0 + a1
  3703: 78 76                    u8 [a0] = s1
  3705: 95 88 01                 a1 = a1 + 0x1
  3708: 7b a8 10                 u64 [a3 + 0x10] = a1
  3711: 28 ab 00                 jump @275
      :                          @267
  3714: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3717: 48 11 0c                 u32 [sp + 12] = 0
  3720: 52 07 1c                 jump @269 if a0 != 0
      :                          @268
  3723: 98 67 06                 a0 = s1 >> 0x6
  3726: 86 77 c0 00              a0 = a0 | 0xc0
  3730: 78 17 0c                 u8 [sp + 0xc] = a0
  3733: 84 67 3f                 a0 = s1 & 0x3f
  3736: 86 77 80 00              a0 = a0 | 0x80
  3740: 78 17 0d                 u8 [sp + 0xd] = a0
  3743: 33 06 02                 s1 = 0x2
  3746: 28 63                    jump @272
      :                          @269
  3748: 8b 67 10                 i32 a0 = s1 >> 0x10
  3751: 52 07 29                 jump @271 if a0 != 0
      :                          @270
  3754: 98 67 0c                 a0 = s1 >> 0xc
  3757: 86 77 e0 00              a0 = a0 | 0xe0
  3761: 78 17 0c                 u8 [sp + 0xc] = a0
  3764: 97 67 34                 a0 = s1 << 0x34
  3767: 98 77 3a                 a0 = a0 >> 0x3a
  3770: 95 77 80 00              a0 = a0 + 0x80
  3774: 78 17 0d                 u8 [sp + 0xd] = a0
  3777: 84 67 3f                 a0 = s1 & 0x3f
  3780: 86 77 80 00              a0 = a0 | 0x80
  3784: 78 17 0e                 u8 [sp + 0xe] = a0
  3787: 33 06 03                 s1 = 0x3
  3790: 28 37                    jump @272
      :                          @271
  3792: 97 67 2b                 a0 = s1 << 0x2b
  3795: 98 77 3d                 a0 = a0 >> 0x3d
  3798: 95 77 f0 00              a0 = a0 + 0xf0
  3802: 78 17 0c                 u8 [sp + 0xc] = a0
  3805: 97 67 2e                 a0 = s1 << 0x2e
  3808: 98 77 3a                 a0 = a0 >> 0x3a
  3811: 95 77 80 00              a0 = a0 + 0x80
  3815: 78 17 0d                 u8 [sp + 0xd] = a0
  3818: 97 67 34                 a0 = s1 << 0x34
  3821: 98 77 3a                 a0 = a0 >> 0x3a
  3824: 95 77 80 00              a0 = a0 + 0x80
  3828: 78 17 0e                 u8 [sp + 0xe] = a0
  3831: 84 67 3f                 a0 = s1 & 0x3f
  3834: 86 77 80 00              a0 = a0 | 0x80
  3838: 78 17 0f                 u8 [sp + 0xf] = a0
  3841: 33 06 04                 s1 = 0x4
  3844: 01                       fallthrough
      :                          @272
  3845: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3848: 82 a7                    a0 = u64 [a3]
  3850: c9 57 07                 a0 = a0 - s0
  3853: ac 67 2d                 jump @276 if a0 <u s1
      :                          @273
  3856: 7b 1a                    u64 [sp] = a3
  3858: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3861: c8 57 07                 a0 = a0 + s0
  3864: 95 18 0c                 a1 = sp + 0xc
  3867: 64 69                    a2 = s1
  3869: 50 10 46 3d              ra = 70, jump @279
      :                          @274 [@dyn 35]
  3873: c8 56 06                 s1 = s1 + s0
  3876: 82 17                    a0 = u64 [sp]
  3878: 7b 76 10                 u64 [a0 + 0x10] = s1
  3881: 01                       fallthrough
      :                          @275
  3882: 33 07                    a0 = 0
  3884: 82 10 20                 ra = u64 [sp + 0x20]
  3887: 82 15 18                 s0 = u64 [sp + 0x18]
  3890: 82 16 10                 s1 = u64 [sp + 0x10]
  3893: 95 11 28                 sp = sp + 0x28
  3896: 32 00                    ret
      :                          @276
  3898: 64 a7                    a0 = a3
  3900: 64 58                    a1 = s0
  3902: 64 69                    a2 = s1
  3904: 64 a5                    s0 = a3
  3906: 50 10 48 67 fb           ra = 72, jump @173
      :                          @277 [@dyn 36]
  3911: 64 5a                    a3 = s0
  3913: 82 55 10                 s0 = u64 [s0 + 0x10]
  3916: 28 c4                    jump @273
      :                          @278 [@dyn 37]
  3918: 64 8a                    a3 = a1
  3920: 33 08 18 01 01           a1 = 0x10118
  3925: 64 a9                    a2 = a3
  3927: 28 4f 04                 jump @361
      :                          @279
  3930: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3933: 7b 10 18                 u64 [sp + 0x18] = ra
  3936: 7b 15 10                 u64 [sp + 0x10] = s0
  3939: 7b 16 08                 u64 [sp + 0x8] = s1
  3942: 53 19 10 64              jump @288 if a2 <u 16
      :                          @280
  3946: 8d 7a                    i32 a3 = -a0
  3948: 84 a2 07                 t0 = a3 & 0x7
  3951: c8 27 0b                 a4 = a0 + t0
  3954: 51 02 15                 jump @283 if t0 == 0
      :                          @281
  3957: 64 8c                    a5 = a1
  3959: 64 75                    s0 = a0
  3961: 01                       fallthrough
      :                          @282
  3962: 7c ca                    a3 = u8 [a5]
  3964: 78 5a                    u8 [s0] = a3
  3966: 95 55 01                 s0 = s0 + 0x1
  3969: 95 cc 01                 a5 = a5 + 0x1
  3972: ac b5 f6                 jump @282 if s0 <u a4
      :                          @283
  3975: c8 28 03                 t1 = a1 + t0
  3978: c9 29 02                 t0 = a2 - t0
  3981: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3984: 84 38 07                 a1 = t1 & 0x7
  3987: c8 4b 0a                 a3 = a4 + t2
  3990: 51 08 3b                 jump @290 if a1 == 0
      :                          @284
  3993: 58 04 4b                 jump @293 if t2 <=s 0
      :                          @285
  3996: 97 38 03                 a1 = t1 << 0x3
  3999: 84 80 38                 ra = a1 & 0x38
  4002: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  4005: 82 c5                    s0 = u64 [a5]
  4007: 8d 88                    i32 a1 = -a1
  4009: 84 88 38                 a1 = a1 & 0x38
  4012: 95 cc 08                 a5 = a5 + 0x8
  4015: 01                       fallthrough
      :                          @286
  4016: 82 c6                    s1 = u64 [a5]
  4018: d0 05 05                 s0 = s0 >> ra
  4021: cf 86 09                 a2 = s1 << a1
  4024: d4 59 09                 a2 = a2 | s0
  4027: 7b b9                    u64 [a4] = a2
  4029: 95 bb 08                 a4 = a4 + 0x8
  4032: 95 cc 08                 a5 = a5 + 0x8
  4035: 64 65                    s0 = s1
  4037: ac ab eb                 jump @286 if a4 <u a3
      :                          @287
  4040: 28 1c                    jump @293
      :                          @288
  4042: 64 7a                    a3 = a0
  4044: 52 09 21                 jump @294 if a2 != 0
      :                          @289
  4047: 28 2f                    jump @296
      :                          @290
  4049: 58 04 13                 jump @293 if t2 <=s 0
      :                          @291
  4052: 64 38                    a1 = t1
  4054: 01                       fallthrough
      :                          @292
  4055: 82 89                    a2 = u64 [a1]
  4057: 7b b9                    u64 [a4] = a2
  4059: 95 bb 08                 a4 = a4 + 0x8
  4062: 95 88 08                 a1 = a1 + 0x8
  4065: ac ab f6                 jump @292 if a4 <u a3
      :                          @293
  4068: c8 43 08                 a1 = t1 + t2
  4071: 84 29 07                 a2 = t0 & 0x7
  4074: 51 09 14                 jump @296 if a2 == 0
      :                          @294
  4077: c8 a9 09                 a2 = a2 + a3
  4080: 01                       fallthrough
      :                          @295
  4081: 7c 8b                    a4 = u8 [a1]
  4083: 78 ab                    u8 [a3] = a4
  4085: 95 aa 01                 a3 = a3 + 0x1
  4088: 95 88 01                 a1 = a1 + 0x1
  4091: ac 9a f6                 jump @295 if a3 <u a2
      :                          @296
  4094: 82 10 18                 ra = u64 [sp + 0x18]
  4097: 82 15 10                 s0 = u64 [sp + 0x10]
  4100: 82 16 08                 s1 = u64 [sp + 0x8]
  4103: 95 11 20                 sp = sp + 0x20
  4106: 32 00                    ret
      :                          @297 [@dyn 38]
  4108: 82 77                    a0 = u64 [a0]
  4110: 01                       fallthrough
      :                          @298
  4111: 28                       jump @298
      :                          @299
  4112: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  4115: 7b 10 50                 u64 [sp + 0x50] = ra
  4118: 7b 15 48                 u64 [sp + 0x48] = s0
  4121: 7b 16 40                 u64 [sp + 0x40] = s1
  4124: 7b 18                    u64 [sp] = a1
  4126: 98 79 04                 a2 = a0 >> 0x4
  4129: 33 08 27                 a1 = 0x27
  4132: 53 29 71 02 81 00        jump @302 if a2 <u 625
      :                          @300
  4138: 33 08 27                 a1 = 0x27
  4141: 95 1a 3e                 a3 = sp + 0x3e
  4144: 3a 09 00 00 03           a2 = u64 [0x30000]
  4149: 7b 19 10                 u64 [sp + 0x10] = a2
  4152: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4158: 33 04 7b 14              t2 = 0x147b
  4162: 33 0b 8c 01 01           a4 = 0x1018c
  4167: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4173: 01                       fallthrough
      :                          @301
  4174: 64 72                    t0 = a0
  4176: 82 17 10                 a0 = u64 [sp + 0x10]
  4179: d6 72 07                 a0 = t0 mulhu a0
  4182: 98 77 0b                 a0 = a0 >> 0xb
  4185: 82 19 08                 a2 = u64 [sp + 0x8]
  4188: c0 97 0c                 i32 a5 = a0 * a2
  4191: c8 2c 06                 s1 = a5 + t0
  4194: 97 6c 30                 a5 = s1 << 0x30
  4197: 98 cc 32                 a5 = a5 >> 0x32
  4200: ca 4c 0c                 a5 = a5 * t2
  4203: 98 c3 11                 t1 = a5 >> 0x11
  4206: 98 cc 10                 a5 = a5 >> 0x10
  4209: 84 cc fe 07              a5 = a5 & 0x7fe
  4213: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4216: c8 69 09                 a2 = a2 + s1
  4219: 97 99 31                 a2 = a2 << 0x31
  4222: 98 99 30                 a2 = a2 >> 0x30
  4225: c8 bc 0c                 a5 = a5 + a4
  4228: 7c c6                    s1 = u8 [a5]
  4230: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4233: c8 b9 09                 a2 = a2 + a4
  4236: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4239: 7c 99                    a2 = u8 [a2]
  4241: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4244: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4247: 78 a5 01                 u8 [a3 + 0x1] = s0
  4250: 78 a9                    u8 [a3] = a2
  4252: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4255: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4258: ac 20 ac                 jump @301 if ra <u t0
      :                          @302
  4261: 54 17 63 3b              jump @304 if a0 <=u 99
      :                          @303
  4265: 97 79 30                 a2 = a0 << 0x30
  4268: 98 99 32                 a2 = a2 >> 0x32
  4271: 96 99 7b 14              a2 = a2 * 0x147b
  4275: 98 99 11                 a2 = a2 >> 0x11
  4278: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4281: c8 a7 07                 a0 = a0 + a3
  4284: 97 77 31                 a0 = a0 << 0x31
  4287: 98 77 30                 a0 = a0 >> 0x30
  4290: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4293: 33 0a 8c 01 01           a3 = 0x1018c
  4298: c8 a7 07                 a0 = a0 + a3
  4301: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4304: 7c 77                    a0 = u8 [a0]
  4306: 95 1b 19                 a4 = sp + 0x19
  4309: c8 8b 0b                 a4 = a4 + a1
  4312: 78 ba 01                 u8 [a4 + 0x1] = a3
  4315: 78 b7                    u8 [a4] = a0
  4317: 64 97                    a0 = a2
  4319: 01                       fallthrough
      :                          @304
  4320: 55 17 0a 14              jump @306 if a0 >=u 10
      :                          @305
  4324: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4327: 95 19 19                 a2 = sp + 0x19
  4330: c8 89 09                 a2 = a2 + a1
  4333: 83 77 30                 i32 a0 = a0 + 0x30
  4336: 78 97                    u8 [a2] = a0
  4338: 28 21                    jump @307
      :                          @306
  4340: 97 77 01                 a0 = a0 << 0x1
  4343: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4346: 33 09 8c 01 01           a2 = 0x1018c
  4351: c8 97 07                 a0 = a0 + a2
  4354: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4357: 7c 77                    a0 = u8 [a0]
  4359: 95 1a 19                 a3 = sp + 0x19
  4362: c8 8a 0a                 a3 = a3 + a1
  4365: 78 a9 01                 u8 [a3 + 0x1] = a2
  4368: 78 a7                    u8 [a3] = a0
  4370: 01                       fallthrough
      :                          @307
  4371: 95 1a 19                 a3 = sp + 0x19
  4374: c8 8a 0a                 a3 = a3 + a1
  4377: 9a 8b 27                 a4 = 0x27 - a1
  4380: 33 08 48 01 01           a1 = 0x10148
  4385: 82 17                    a0 = u64 [sp]
  4387: 33 09                    a2 = 0
  4389: 50 10 4e 12              ra = 78, jump @309
      :                          @308 [@dyn 39]
  4393: 82 10 50                 ra = u64 [sp + 0x50]
  4396: 82 15 48                 s0 = u64 [sp + 0x48]
  4399: 82 16 40                 s1 = u64 [sp + 0x40]
  4402: 95 11 58                 sp = sp + 0x58
  4405: 32 00                    ret
      :                          @309
  4407: 95 11 98                 sp = sp + 0xffffffffffffff98
  4410: 7b 10 60                 u64 [sp + 0x60] = ra
  4413: 7b 15 58                 u64 [sp + 0x58] = s0
  4416: 7b 16 50                 u64 [sp + 0x50] = s1
  4419: 80 73 34                 t1 = u32 [a0 + 0x34]
  4422: 7b 1a 20                 u64 [sp + 0x20] = a3
  4425: 64 9c                    a5 = a2
  4427: 84 36 01                 s1 = t1 & 0x1
  4430: 33 02 2b                 t0 = 0x2b
  4433: 33 09 00 00 11           a2 = 0x110000
  4438: 84 3a 04                 a3 = t1 & 0x4
  4441: 7b 1b 28                 u64 [sp + 0x28] = a4
  4444: c8 b6 04                 t2 = s1 + a4
  4447: 7b 1c 30                 u64 [sp + 0x30] = a5
  4450: 52 0a 10                 jump @312 if a3 != 0
      :                          @310
  4453: 49 11 38                 u64 [sp + 56] = 0
  4456: 82 78                    a1 = u64 [a0]
  4458: 94 69 2b                 a2 = 0x2b if s1 != 0
  4461: 52 08 35                 jump @316 if a1 != 0
      :                          @311
  4464: 28 56                    jump @321
      :                          @312
  4466: 7b 18 38                 u64 [sp + 0x38] = a1
  4469: 33 09                    a2 = 0
  4471: 51 0c 1b                 jump @315 if a5 == 0
      :                          @313
  4474: 82 1b 38                 a4 = u64 [sp + 0x38]
  4477: 01                       fallthrough
      :                          @314
  4478: 7d b5                    s0 = i8 [a4]
  4480: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4483: 85 5a 01                 a3 = s0 ^ 0x1
  4486: c8 a9 09                 a2 = a2 + a3
  4489: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4492: 95 bb 01                 a4 = a4 + 0x1
  4495: 52 0c ef                 jump @314 if a5 != 0
      :                          @315
  4498: c8 94 04                 t2 = t2 + a2
  4501: 33 09 00 00 11           a2 = 0x110000
  4506: 82 78                    a1 = u64 [a0]
  4508: db 62 09                 a2 = t0 if s1 != 0
  4511: 51 08 27                 jump @321 if a1 == 0
      :                          @316
  4514: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4517: ae a4 21                 jump @321 if t2 >=u a3
      :                          @317
  4520: 84 38 08                 a1 = t1 & 0x8
  4523: 52 08 50                 jump @324 if a1 != 0
      :                          @318
  4526: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4529: c9 4a 0a                 a3 = a3 - t2
  4532: 7b 19 18                 u64 [sp + 0x18] = a2
  4535: 5a 16 01 9d 00           jump @331 if s1 >s 1
      :                          @319
  4540: 52 06 aa 00              jump @333 if s1 != 0
      :                          @320
  4544: 7b 1a 10                 u64 [sp + 0x10] = a3
  4547: 28 a9 00                 jump @334
      :                          @321
  4550: 82 75 20                 s0 = u64 [a0 + 0x20]
  4553: 82 76 28                 s1 = u64 [a0 + 0x28]
  4556: 64 57                    a0 = s0
  4558: 64 68                    a1 = s1
  4560: 82 1a 38                 a3 = u64 [sp + 0x38]
  4563: 82 1b 30                 a4 = u64 [sp + 0x30]
  4566: 50 10 50 6c 01           ra = 80, jump @354
      :                          @322 [@dyn 40]
  4571: 33 08 01                 a1 = 0x1
  4574: 52 07 bb 00              jump @339 if a0 != 0
      :                          @323
  4578: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4581: 64 57                    a0 = s0
  4583: 82 18 20                 a1 = u64 [sp + 0x20]
  4586: 82 19 28                 a2 = u64 [sp + 0x28]
  4589: 82 10 60                 ra = u64 [sp + 0x60]
  4592: 82 15 58                 s0 = u64 [sp + 0x58]
  4595: 82 16 50                 s1 = u64 [sp + 0x50]
  4598: 95 11 68                 sp = sp + 0x68
  4601: 32 0c                    jump [a5]
      :                          @324
  4603: 7b 1a 40                 u64 [sp + 0x40] = a3
  4606: 64 45                    s0 = t2
  4608: 81 78 30                 a1 = i32 [a0 + 0x30]
  4611: 7b 18 10                 u64 [sp + 0x10] = a1
  4614: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4617: 7b 1a 08                 u64 [sp + 0x8] = a3
  4620: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4623: 82 78 28                 a1 = u64 [a0 + 0x28]
  4626: 48 17 30 30              u32 [a0 + 48] = 0x30
  4630: 7b 17                    u64 [sp] = a0
  4632: 46 17 38 01              u8 [a0 + 56] = 0x1
  4636: 7b 1a 48                 u64 [sp + 0x48] = a3
  4639: 64 a7                    a0 = a3
  4641: 64 86                    s1 = a1
  4643: 82 1a 38                 a3 = u64 [sp + 0x38]
  4646: 82 1b 30                 a4 = u64 [sp + 0x30]
  4649: 50 10 52 19 01           ra = 82, jump @354
      :                          @325 [@dyn 41]
  4654: 52 07 67                 jump @338 if a0 != 0
      :                          @326
  4657: 82 17 40                 a0 = u64 [sp + 0x40]
  4660: c9 57 05                 s0 = a0 - s0
  4663: 95 55 01                 s0 = s0 + 0x1
  4666: 01                       fallthrough
      :                          @327
  4667: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4670: 51 05 c6 00              jump @349 if s0 == 0
      :                          @328
  4674: 82 69 20                 a2 = u64 [s1 + 0x20]
  4677: 33 08 30                 a1 = 0x30
  4680: 82 17 48                 a0 = u64 [sp + 0x48]
  4683: b4 90 01 54              ra = 84, jump [a2]
      :                          @329 [@dyn 42]
  4687: 51 07 ec                 jump @327 if a0 == 0
      :                          @330
  4690: 28 43                    jump @338
      :                          @331
  4692: 52 16 02 12              jump @333 if s1 != 2
      :                          @332
  4696: 98 a6 01                 s1 = a3 >> 0x1
  4699: 95 a8 01                 a1 = a3 + 0x1
  4702: 98 88 01                 a1 = a1 >> 0x1
  4705: 7b 18 10                 u64 [sp + 0x10] = a1
  4708: 28 08                    jump @334
      :                          @333
  4710: 64 a6                    s1 = a3
  4712: 49 11 10                 u64 [sp + 16] = 0
  4715: 01                       fallthrough
      :                          @334
  4716: 82 78 20                 a1 = u64 [a0 + 0x20]
  4719: 7b 18 48                 u64 [sp + 0x48] = a1
  4722: 82 75 28                 s0 = u64 [a0 + 0x28]
  4725: 81 77 30                 a0 = i32 [a0 + 0x30]
  4728: 7b 17 40                 u64 [sp + 0x40] = a0
  4731: 95 66 01                 s1 = s1 + 0x1
  4734: 01                       fallthrough
      :                          @335
  4735: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4738: 51 06 27                 jump @340 if s1 == 0
      :                          @336
  4741: 82 59 20                 a2 = u64 [s0 + 0x20]
  4744: 82 17 48                 a0 = u64 [sp + 0x48]
  4747: 82 18 40                 a1 = u64 [sp + 0x40]
  4750: b4 90 01 56              ra = 86, jump [a2]
      :                          @337 [@dyn 43]
  4754: 51 07 ed                 jump @335 if a0 == 0
      :                          @338
  4757: 33 08 01                 a1 = 0x1
  4760: 01                       fallthrough
      :                          @339
  4761: 64 87                    a0 = a1
  4763: 82 10 60                 ra = u64 [sp + 0x60]
  4766: 82 15 58                 s0 = u64 [sp + 0x58]
  4769: 82 16 50                 s1 = u64 [sp + 0x50]
  4772: 95 11 68                 sp = sp + 0x68
  4775: 32 00                    ret
      :                          @340
  4777: 82 16 48                 s1 = u64 [sp + 0x48]
  4780: 64 67                    a0 = s1
  4782: 64 58                    a1 = s0
  4784: 82 19 18                 a2 = u64 [sp + 0x18]
  4787: 82 1a 38                 a3 = u64 [sp + 0x38]
  4790: 82 1b 30                 a4 = u64 [sp + 0x30]
  4793: 50 10 58 89 00           ra = 88, jump @354
      :                          @341 [@dyn 44]
  4798: 33 08 01                 a1 = 0x1
  4801: 52 07 d8                 jump @339 if a0 != 0
      :                          @342
  4804: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4807: 64 67                    a0 = s1
  4809: 82 18 20                 a1 = u64 [sp + 0x20]
  4812: 82 19 28                 a2 = u64 [sp + 0x28]
  4815: b4 a0 01 5a              ra = 90, jump [a3]
      :                          @343 [@dyn 45]
  4819: 33 08 01                 a1 = 0x1
  4822: 52 07 c3                 jump @339 if a0 != 0
      :                          @344
  4825: 82 17 10                 a0 = u64 [sp + 0x10]
  4828: 9a 77                    a0 = -a0
  4830: 7b 17 38                 u64 [sp + 0x38] = a0
  4833: 33 06 ff                 s1 = 0xffffffffffffffff
  4836: 01                       fallthrough
      :                          @345
  4837: 82 17 38                 a0 = u64 [sp + 0x38]
  4840: c8 67 07                 a0 = a0 + s1
  4843: 51 17 ff 42              jump @352 if a0 == 4294967295
      :                          @346
  4847: 82 59 20                 a2 = u64 [s0 + 0x20]
  4850: 82 17 48                 a0 = u64 [sp + 0x48]
  4853: 82 18 40                 a1 = u64 [sp + 0x40]
  4856: b4 90 01 5c              ra = 92, jump [a2]
      :                          @347 [@dyn 46]
  4860: 95 66 01                 s1 = s1 + 0x1
  4863: 51 07 e6                 jump @345 if a0 == 0
      :                          @348
  4866: 28 37                    jump @353
      :                          @349
  4868: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4871: 82 17 48                 a0 = u64 [sp + 0x48]
  4874: 82 18 20                 a1 = u64 [sp + 0x20]
  4877: 82 19 28                 a2 = u64 [sp + 0x28]
  4880: b4 a0 01 5e              ra = 94, jump [a3]
      :                          @350 [@dyn 47]
  4884: 33 08 01                 a1 = 0x1
  4887: 52 07 82                 jump @339 if a0 != 0
      :                          @351
  4890: 33 08                    a1 = 0
  4892: 82 16                    s1 = u64 [sp]
  4894: 82 17 10                 a0 = u64 [sp + 0x10]
  4897: 7a 67 30                 u32 [s1 + 0x30] = a0
  4900: 82 17 08                 a0 = u64 [sp + 0x8]
  4903: 78 67 38                 u8 [s1 + 0x38] = a0
  4906: 28 6f ff                 jump @339
      :                          @352
  4909: 82 16 10                 s1 = u64 [sp + 0x10]
  4912: 82 17 10                 a0 = u64 [sp + 0x10]
  4915: d8 76 08                 a1 = s1 <u a0
  4918: 28 63 ff                 jump @339
      :                          @353
  4921: 82 17 10                 a0 = u64 [sp + 0x10]
  4924: d8 76 08                 a1 = s1 <u a0
  4927: 28 5a ff                 jump @339
      :                          @354
  4930: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4933: 7b 10 20                 u64 [sp + 0x20] = ra
  4936: 7b 15 18                 u64 [sp + 0x18] = s0
  4939: 7b 16 10                 u64 [sp + 0x10] = s1
  4942: 83 9c                    i32 a5 = a2 + 0
  4944: 33 02 00 00 11           t0 = 0x110000
  4949: 64 a6                    s1 = a3
  4951: 64 85                    s0 = a1
  4953: 64 7a                    a3 = a0
  4955: aa 2c 20                 jump @357 if a5 == t0
      :                          @355
  4958: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4961: 64 a7                    a0 = a3
  4963: 64 98                    a1 = a2
  4965: 7b 1b 08                 u64 [sp + 0x8] = a4
  4968: 7b 1a                    u64 [sp] = a3
  4970: b4 c0 01 60              ra = 96, jump [a5]
      :                          @356 [@dyn 48]
  4974: 82 1a                    a3 = u64 [sp]
  4976: 82 1b 08                 a4 = u64 [sp + 0x8]
  4979: 64 78                    a1 = a0
  4981: 33 07 01                 a0 = 0x1
  4984: 52 08 20                 jump @360 if a1 != 0
      :                          @357
  4987: 51 06 1a                 jump @359 if s1 == 0
      :                          @358
  4990: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4993: 64 a7                    a0 = a3
  4995: 64 68                    a1 = s1
  4997: 64 b9                    a2 = a4
  4999: 82 10 20                 ra = u64 [sp + 0x20]
  5002: 82 15 18                 s0 = u64 [sp + 0x18]
  5005: 82 16 10                 s1 = u64 [sp + 0x10]
  5008: 95 11 28                 sp = sp + 0x28
  5011: 32 0c                    jump [a5]
      :                          @359
  5013: 33 07                    a0 = 0
  5015: 01                       fallthrough
      :                          @360
  5016: 82 10 20                 ra = u64 [sp + 0x20]
  5019: 82 15 18                 s0 = u64 [sp + 0x18]
  5022: 82 16 10                 s1 = u64 [sp + 0x10]
  5025: 95 11 28                 sp = sp + 0x28
  5028: 32 00                    ret
      :                          @361
  5030: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  5034: 7b 10 80 00              u64 [sp + 0x80] = ra
  5038: 7b 15 78                 u64 [sp + 0x78] = s0
  5041: 7b 16 70                 u64 [sp + 0x70] = s1
  5044: 49 11 60 20              u64 [sp + 96] = 0x20
  5048: 33 0a 03                 a3 = 0x3
  5051: 78 1a 68                 u8 [sp + 0x68] = a3
  5054: 82 96 20                 s1 = u64 [a2 + 0x20]
  5057: 49 11 30                 u64 [sp + 48] = 0
  5060: 49 11 40                 u64 [sp + 64] = 0
  5063: 7b 17 50                 u64 [sp + 0x50] = a0
  5066: 7b 18 58                 u64 [sp + 0x58] = a1
  5069: 51 06 07 01              jump @383 if s1 == 0
      :                          @362
  5073: 82 97 28                 a0 = u64 [a2 + 0x28]
  5076: 51 07 74 01              jump @393 if a0 == 0
      :                          @363
  5080: 49 11 28                 u64 [sp + 40] = 0
  5083: 82 95                    s0 = u64 [a2]
  5085: 7b 19 08                 u64 [sp + 0x8] = a2
  5088: 82 98 10                 a1 = u64 [a2 + 0x10]
  5091: 7b 18 18                 u64 [sp + 0x18] = a1
  5094: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  5097: 97 88 03                 a1 = a1 << 0x3
  5100: 98 88 03                 a1 = a1 >> 0x3
  5103: 95 88 01                 a1 = a1 + 0x1
  5106: 7b 18                    u64 [sp] = a1
  5108: 95 55 08                 s0 = s0 + 0x8
  5111: 96 78 38                 a1 = a0 * 0x38
  5114: 95 66 18                 s1 = s1 + 0x18
  5117: 33 07 4c                 a0 = 0x4c
  5120: 7b 17 10                 u64 [sp + 0x10] = a0
  5123: 01                       fallthrough
      :                          @364
  5124: 7b 18 20                 u64 [sp + 0x20] = a1
  5127: 82 59                    a2 = u64 [s0]
  5129: 51 09 17                 jump @367 if a2 == 0
      :                          @365
  5132: 82 1a 58                 a3 = u64 [sp + 0x58]
  5135: 82 17 50                 a0 = u64 [sp + 0x50]
  5138: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5141: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5144: b4 a0 01 62              ra = 98, jump [a3]
      :                          @366 [@dyn 49]
  5148: 52 07 51 01              jump @396 if a0 != 0
      :                          @367
  5152: 81 67 10                 a0 = i32 [s1 + 0x10]
  5155: 7a 17 60                 u32 [sp + 0x60] = a0
  5158: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5161: 78 17 68                 u8 [sp + 0x68] = a0
  5164: 81 67 14                 a0 = i32 [s1 + 0x14]
  5167: 7a 17 64                 u32 [sp + 0x64] = a0
  5170: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5173: 82 67                    a0 = u64 [s1]
  5175: 51 08 26                 jump @372 if a1 == 0
      :                          @368
  5178: 52 18 01 16              jump @370 if a1 != 1
      :                          @369
  5182: 97 77 04                 a0 = a0 << 0x4
  5185: 82 18 18                 a1 = u64 [sp + 0x18]
  5188: c8 87 07                 a0 = a0 + a1
  5191: 82 78 08                 a1 = u64 [a0 + 0x8]
  5194: 82 19 10                 a2 = u64 [sp + 0x10]
  5197: aa 98 07                 jump @371 if a1 == a2
      :                          @370
  5200: 33 08                    a1 = 0
  5202: 28 0f                    jump @373
      :                          @371
  5204: 82 77                    a0 = u64 [a0]
  5206: 82 77                    a0 = u64 [a0]
  5208: 33 08 01                 a1 = 0x1
  5211: 28 06                    jump @373
      :                          @372
  5213: 33 08 01                 a1 = 0x1
  5216: 01                       fallthrough
      :                          @373
  5217: 7b 18 30                 u64 [sp + 0x30] = a1
  5220: 7b 17 38                 u64 [sp + 0x38] = a0
  5223: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5226: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5229: 51 08 26                 jump @378 if a1 == 0
      :                          @374
  5232: 52 18 01 16              jump @376 if a1 != 1
      :                          @375
  5236: 97 77 04                 a0 = a0 << 0x4
  5239: 82 18 18                 a1 = u64 [sp + 0x18]
  5242: c8 87 07                 a0 = a0 + a1
  5245: 82 78 08                 a1 = u64 [a0 + 0x8]
  5248: 82 19 10                 a2 = u64 [sp + 0x10]
  5251: aa 98 07                 jump @377 if a1 == a2
      :                          @376
  5254: 33 08                    a1 = 0
  5256: 28 0f                    jump @379
      :                          @377
  5258: 82 77                    a0 = u64 [a0]
  5260: 82 77                    a0 = u64 [a0]
  5262: 33 08 01                 a1 = 0x1
  5265: 28 06                    jump @379
      :                          @378
  5267: 33 08 01                 a1 = 0x1
  5270: 01                       fallthrough
      :                          @379
  5271: 7b 18 40                 u64 [sp + 0x40] = a1
  5274: 7b 17 48                 u64 [sp + 0x48] = a0
  5277: 82 67 08                 a0 = u64 [s1 + 0x8]
  5280: 97 77 04                 a0 = a0 << 0x4
  5283: 82 18 18                 a1 = u64 [sp + 0x18]
  5286: c8 78 08                 a1 = a1 + a0
  5289: 82 87                    a0 = u64 [a1]
  5291: 82 89 08                 a2 = u64 [a1 + 0x8]
  5294: 95 18 30                 a1 = sp + 0x30
  5297: b4 90 01 64              ra = 100, jump [a2]
      :                          @380 [@dyn 50]
  5301: 52 07 b8 00              jump @396 if a0 != 0
      :                          @381
  5305: 95 55 10                 s0 = s0 + 0x10
  5308: 82 18 20                 a1 = u64 [sp + 0x20]
  5311: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5314: 95 66 38                 s1 = s1 + 0x38
  5317: 82 17 28                 a0 = u64 [sp + 0x28]
  5320: 95 77 01                 a0 = a0 + 0x1
  5323: 7b 17 28                 u64 [sp + 0x28] = a0
  5326: 52 08 36 ff              jump @364 if a1 != 0
      :                          @382
  5330: 28 69                    jump @391
      :                          @383
  5332: 82 97 18                 a0 = u64 [a2 + 0x18]
  5335: 51 07 71                 jump @393 if a0 == 0
      :                          @384
  5338: 82 95 10                 s0 = u64 [a2 + 0x10]
  5341: 33 0a                    a3 = 0
  5343: 97 78 04                 a1 = a0 << 0x4
  5346: c8 58 08                 a1 = a1 + s0
  5349: 7b 18 20                 u64 [sp + 0x20] = a1
  5352: 7b 19 08                 u64 [sp + 0x8] = a2
  5355: 82 96                    s1 = u64 [a2]
  5357: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5360: 97 77 04                 a0 = a0 << 0x4
  5363: 98 77 04                 a0 = a0 >> 0x4
  5366: 95 77 01                 a0 = a0 + 0x1
  5369: 7b 17                    u64 [sp] = a0
  5371: 95 66 08                 s1 = s1 + 0x8
  5374: 01                       fallthrough
      :                          @385
  5375: 7b 1a 28                 u64 [sp + 0x28] = a3
  5378: 82 69                    a2 = u64 [s1]
  5380: 51 09 16                 jump @388 if a2 == 0
      :                          @386
  5383: 82 1a 58                 a3 = u64 [sp + 0x58]
  5386: 82 17 50                 a0 = u64 [sp + 0x50]
  5389: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5392: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5395: b4 a0 01 66              ra = 102, jump [a3]
      :                          @387 [@dyn 51]
  5399: 52 07 56                 jump @396 if a0 != 0
      :                          @388
  5402: 82 57                    a0 = u64 [s0]
  5404: 82 59 08                 a2 = u64 [s0 + 0x8]
  5407: 95 18 30                 a1 = sp + 0x30
  5410: b4 90 01 68              ra = 104, jump [a2]
      :                          @389 [@dyn 52]
  5414: 52 07 47                 jump @396 if a0 != 0
      :                          @390
  5417: 95 66 10                 s1 = s1 + 0x10
  5420: 95 55 10                 s0 = s0 + 0x10
  5423: 82 1a 28                 a3 = u64 [sp + 0x28]
  5426: 95 aa 01                 a3 = a3 + 0x1
  5429: 82 17 20                 a0 = u64 [sp + 0x20]
  5432: ab 75 c7                 jump @385 if s0 != a0
      :                          @391
  5435: 82 19 08                 a2 = u64 [sp + 0x8]
  5438: 82 1a                    a3 = u64 [sp]
  5440: 82 97 08                 a0 = u64 [a2 + 0x8]
  5443: ac 7a 0d                 jump @394 if a3 <u a0
      :                          @392
  5446: 28 2c                    jump @397
      :                          @393
  5448: 33 0a                    a3 = 0
  5450: 82 97 08                 a0 = u64 [a2 + 0x8]
  5453: 54 07 25                 jump @397 if a0 <=u 0
      :                          @394
  5456: 82 97                    a0 = u64 [a2]
  5458: 97 a8 04                 a1 = a3 << 0x4
  5461: c8 87 09                 a2 = a0 + a1
  5464: 82 1a 58                 a3 = u64 [sp + 0x58]
  5467: 82 17 50                 a0 = u64 [sp + 0x50]
  5470: 82 98                    a1 = u64 [a2]
  5472: 82 99 08                 a2 = u64 [a2 + 0x8]
  5475: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5478: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @395 [@dyn 53]
  5482: 51 07 08                 jump @397 if a0 == 0
      :                          @396
  5485: 33 07 01                 a0 = 0x1
  5488: 28 05                    jump @398
      :                          @397
  5490: 33 07                    a0 = 0
  5492: 01                       fallthrough
      :                          @398
  5493: 82 10 80 00              ra = u64 [sp + 0x80]
  5497: 82 15 78                 s0 = u64 [sp + 0x78]
  5500: 82 16 70                 s1 = u64 [sp + 0x70]
  5503: 95 11 88 00              sp = sp + 0x88
  5507: 32 00                    ret
      :                          @399 [@dyn 54]
  5509: 32 00                    ret
      :                          @400 [@dyn 55]
  5511: 95 11 80                 sp = sp + 0xffffffffffffff80
  5514: 7b 10 78                 u64 [sp + 0x78] = ra
  5517: 7b 15 70                 u64 [sp + 0x70] = s0
  5520: 7b 16 68                 u64 [sp + 0x68] = s1
  5523: 64 92                    t0 = a2
  5525: 33 00                    ra = 0
  5527: 33 0b                    a4 = 0
  5529: 33 05                    s0 = 0
  5531: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5541: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5547: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5557: 82 79 10                 a2 = u64 [a0 + 0x10]
  5560: 7b 19 48                 u64 [sp + 0x48] = a2
  5563: 82 79                    a2 = u64 [a0]
  5565: 7b 19 38                 u64 [sp + 0x38] = a2
  5568: 82 77 08                 a0 = u64 [a0 + 0x8]
  5571: 7b 17 30                 u64 [sp + 0x30] = a0
  5574: 33 07 80 01 01           a0 = 0x10180
  5579: 7b 17 08                 u64 [sp + 0x8] = a0
  5582: 3a 07 08 00 03           a0 = u64 [0x30008]
  5587: 7b 17 60                 u64 [sp + 0x60] = a0
  5590: 7b 18 58                 u64 [sp + 0x58] = a1
  5593: 95 88 08                 a1 = a1 + 0x8
  5596: 7b 18                    u64 [sp] = a1
  5598: 33 0c 0a                 a5 = 0xa
  5601: 7b 12 20                 u64 [sp + 0x20] = t0
  5604: 7b 13 18                 u64 [sp + 0x18] = t1
  5607: 7b 14 10                 u64 [sp + 0x10] = t2
  5610: 28 3a                    jump @404
      :                          @401
  5612: 64 06                    s1 = ra
  5614: c8 89 07                 a0 = a2 + a1
  5617: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5620: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5623: 88 77 01                 a0 = a0 <u 0x1
  5626: 01                       fallthrough
      :                          @402
  5627: 82 1a 48                 a3 = u64 [sp + 0x48]
  5630: 78 a7                    u8 [a3] = a0
  5632: 82 17 30                 a0 = u64 [sp + 0x30]
  5635: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5638: 82 17 38                 a0 = u64 [sp + 0x38]
  5641: b4 a0 01 70              ra = 112, jump [a3]
      :                          @403 [@dyn 56]
  5645: 64 5b                    a4 = s0
  5647: 82 12 20                 t0 = u64 [sp + 0x20]
  5650: 82 13 18                 t1 = u64 [sp + 0x18]
  5653: 82 14 10                 t2 = u64 [sp + 0x10]
  5656: 64 60                    ra = s1
  5658: 33 0c 0a                 a5 = 0xa
  5661: 82 15 40                 s0 = u64 [sp + 0x40]
  5664: 52 07 63 01              jump @445 if a0 != 0
      :                          @404
  5668: 84 57 ff 00              a0 = s0 & 0xff
  5672: 52 07 57 01              jump @444 if a0 != 0
      :                          @405
  5676: 7b 1b 50                 u64 [sp + 0x50] = a4
  5679: ae 02 0a                 jump @408 if t0 >=u ra
      :                          @406
  5682: 28 ef 00                 jump @435
      :                          @407
  5685: ac 02 ec 00              jump @435 if t0 <u ra
      :                          @408
  5689: c9 02 08                 a1 = t0 - ra
  5692: 82 16 58                 s1 = u64 [sp + 0x58]
  5695: c8 06 06                 s1 = s1 + ra
  5698: 55 18 10 1d              jump @414 if a1 >=u 16
      :                          @409
  5702: aa 02 d8 00              jump @434 if t0 == ra
      :                          @410
  5706: 33 0a                    a3 = 0
  5708: 01                       fallthrough
      :                          @411
  5709: c8 a6 07                 a0 = s1 + a3
  5712: 7c 77                    a0 = u8 [a0]
  5714: aa c7 a5 00              jump @429 if a0 == a5
      :                          @412
  5718: 95 aa 01                 a3 = a3 + 0x1
  5721: ab a8 f4                 jump @411 if a1 != a3
      :                          @413
  5724: 28 c2 00                 jump @434
      :                          @414
  5727: 95 69 07                 a2 = s1 + 0x7
  5730: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5733: c9 6a 07                 a0 = a3 - s1
  5736: d3 6a 0a                 a3 = a3 ^ s1
  5739: 88 aa 01                 a3 = a3 <u 0x1
  5742: 88 7b 01                 a4 = a0 <u 0x1
  5745: d4 ba 0a                 a3 = a3 | a4
  5748: 51 0a 45                 jump @420 if a3 == 0
      :                          @415
  5751: 33 07                    a0 = 0
  5753: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5756: 82 1b                    a4 = u64 [sp]
  5758: c8 0b 0b                 a4 = a4 + ra
  5761: 28 08                    jump @417
      :                          @416
  5763: 82 1b                    a4 = u64 [sp]
  5765: c8 0b 0b                 a4 = a4 + ra
  5768: 01                       fallthrough
      :                          @417
  5769: c8 76 0c                 a5 = s1 + a0
  5772: 82 cc                    a5 = u64 [a5]
  5774: c8 7b 09                 a2 = a4 + a0
  5777: 82 99                    a2 = u64 [a2]
  5779: d3 4c 05                 s0 = a5 ^ t2
  5782: c8 35 05                 s0 = s0 + t1
  5785: e0 c5 0c                 a5 = s0 & ~a5
  5788: d3 49 05                 s0 = a2 ^ t2
  5791: c8 35 05                 s0 = s0 + t1
  5794: e0 95 09                 a2 = s0 & ~a2
  5797: d4 c9 09                 a2 = a2 | a5
  5800: 82 1c 60                 a5 = u64 [sp + 0x60]
  5803: d2 c9 09                 a2 = a2 & a5
  5806: 52 09 1f                 jump @423 if a2 != 0
      :                          @418
  5809: 95 77 10                 a0 = a0 + 0x10
  5812: ae 7a d5                 jump @417 if a3 >=u a0
      :                          @419
  5815: 28 16                    jump @423
      :                          @420
  5817: c8 a6 0b                 a4 = s1 + a3
  5820: 7c bb                    a4 = u8 [a4]
  5822: aa cb 51                 jump @432 if a4 == a5
      :                          @421
  5825: 95 aa 01                 a3 = a3 + 0x1
  5828: ab a7 f5                 jump @420 if a0 != a3
      :                          @422
  5831: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5834: ae 7a b9                 jump @416 if a3 >=u a0
      :                          @423
  5837: aa 87 9a 00              jump @441 if a0 == a1
      :                          @424
  5841: 33 0a                    a3 = 0
  5843: c8 76 06                 s1 = s1 + a0
  5846: c9 72 08                 a1 = t0 - a0
  5849: c9 08 08                 a1 = a1 - ra
  5852: 33 0c 0a                 a5 = 0xa
  5855: 82 1b 50                 a4 = u64 [sp + 0x50]
  5858: 01                       fallthrough
      :                          @425
  5859: c8 a6 09                 a2 = s1 + a3
  5862: 7c 99                    a2 = u8 [a2]
  5864: aa c9 0b                 jump @428 if a2 == a5
      :                          @426
  5867: 95 aa 01                 a3 = a3 + 0x1
  5870: ab a8 f5                 jump @425 if a1 != a3
      :                          @427
  5873: 28 2d                    jump @434
      :                          @428
  5875: c8 7a 0a                 a3 = a3 + a0
  5878: 01                       fallthrough
      :                          @429
  5879: c8 0a 0a                 a3 = a3 + ra
  5882: 95 a0 01                 ra = a3 + 0x1
  5885: ae 2a 38 ff              jump @407 if a3 >=u t0
      :                          @430
  5889: 82 17 58                 a0 = u64 [sp + 0x58]
  5892: c8 7a 0a                 a3 = a3 + a0
  5895: 7c a7                    a0 = u8 [a3]
  5897: ab c7 2c ff              jump @407 if a0 != a5
      :                          @431
  5901: 28 61                    jump @442
      :                          @432
  5903: 82 1b 50                 a4 = u64 [sp + 0x50]
  5906: c8 0a 0a                 a3 = a3 + ra
  5909: 95 a0 01                 ra = a3 + 0x1
  5912: ac 2a e9                 jump @430 if a3 <u t0
      :                          @433
  5915: 28 1a ff                 jump @407
      :                          @434
  5918: 64 20                    ra = t0
  5920: 01                       fallthrough
      :                          @435
  5921: 49 11 40 01              u64 [sp + 64] = 0x1
  5925: 64 b5                    s0 = a4
  5927: 64 26                    s1 = t0
  5929: aa 2b 56                 jump @444 if a4 == t0
      :                          @436
  5932: 82 17 48                 a0 = u64 [sp + 0x48]
  5935: 7c 77                    a0 = u8 [a0]
  5937: 51 07 22                 jump @439 if a0 == 0
      :                          @437
  5940: 82 17 30                 a0 = u64 [sp + 0x30]
  5943: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5946: 33 09 04                 a2 = 0x4
  5949: 82 17 38                 a0 = u64 [sp + 0x38]
  5952: 82 18 08                 a1 = u64 [sp + 0x8]
  5955: 7b 10 28                 u64 [sp + 0x28] = ra
  5958: b4 a0 01 72              ra = 114, jump [a3]
      :                          @438 [@dyn 57]
  5962: 82 1b 50                 a4 = u64 [sp + 0x50]
  5965: 82 10 28                 ra = u64 [sp + 0x28]
  5968: 52 07 33                 jump @445 if a0 != 0
      :                          @439
  5971: c9 b6 09                 a2 = s1 - a4
  5974: 82 18 58                 a1 = u64 [sp + 0x58]
  5977: c8 b8 08                 a1 = a1 + a4
  5980: ab b6 90 fe              jump @401 if s1 != a4
      :                          @440
  5984: 64 06                    s1 = ra
  5986: 33 07                    a0 = 0
  5988: 28 97 fe                 jump @402
      :                          @441
  5991: 64 20                    ra = t0
  5993: 82 1b 50                 a4 = u64 [sp + 0x50]
  5996: 28 b5                    jump @435
      :                          @442
  5998: 49 11 40                 u64 [sp + 64] = 0
  6001: 64 05                    s0 = ra
  6003: 64 06                    s1 = ra
  6005: 82 17 48                 a0 = u64 [sp + 0x48]
  6008: 7c 77                    a0 = u8 [a0]
  6010: 52 07 ba                 jump @437 if a0 != 0
      :                          @443
  6013: 28 d6                    jump @439
      :                          @444
  6015: 33 07                    a0 = 0
  6017: 28 06                    jump @446
      :                          @445
  6019: 33 07 01                 a0 = 0x1
  6022: 01                       fallthrough
      :                          @446
  6023: 82 10 78                 ra = u64 [sp + 0x78]
  6026: 82 15 70                 s0 = u64 [sp + 0x70]
  6029: 82 16 68                 s1 = u64 [sp + 0x68]
  6032: 95 11 80 00              sp = sp + 0x80
  6036: 32 00                    ret
      :                          @447 [@dyn 58]
  6038: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  6041: 7b 10 20                 u64 [sp + 0x20] = ra
  6044: 7b 15 18                 u64 [sp + 0x18] = s0
  6047: 7b 16 10                 u64 [sp + 0x10] = s1
  6050: 82 75 10                 s0 = u64 [a0 + 0x10]
  6053: 7c 59                    a2 = u8 [s0]
  6055: 82 7b                    a4 = u64 [a0]
  6057: 82 76 08                 s1 = u64 [a0 + 0x8]
  6060: 51 09 32                 jump @451 if a2 == 0
      :                          @448
  6063: 82 6a 18                 a3 = u64 [s1 + 0x18]
  6066: 7b 18 08                 u64 [sp + 0x8] = a1
  6069: 33 08 80 01 01           a1 = 0x10180
  6074: 33 09 04                 a2 = 0x4
  6077: 64 b7                    a0 = a4
  6079: 7b 1b                    u64 [sp] = a4
  6081: b4 a0 01 76              ra = 118, jump [a3]
      :                          @449 [@dyn 59]
  6085: 82 18 08                 a1 = u64 [sp + 0x8]
  6088: 82 1b                    a4 = u64 [sp]
  6090: 51 07 14                 jump @451 if a0 == 0
      :                          @450
  6093: 33 07 01                 a0 = 0x1
  6096: 82 10 20                 ra = u64 [sp + 0x20]
  6099: 82 15 18                 s0 = u64 [sp + 0x18]
  6102: 82 16 10                 s1 = u64 [sp + 0x10]
  6105: 95 11 28                 sp = sp + 0x28
  6108: 32 00                    ret
      :                          @451
  6110: 83 87                    i32 a0 = a1 + 0
  6112: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  6115: 88 77 01                 a0 = a0 <u 0x1
  6118: 78 57                    u8 [s0] = a0
  6120: 82 6c 20                 a5 = u64 [s1 + 0x20]
  6123: 64 b7                    a0 = a4
  6125: 82 10 20                 ra = u64 [sp + 0x20]
  6128: 82 15 18                 s0 = u64 [sp + 0x18]
  6131: 82 16 10                 s1 = u64 [sp + 0x10]
  6134: 95 11 28                 sp = sp + 0x28
  6137: 32 0c                    jump [a5]
      :                          @452 [@dyn 60]
  6139: 64 8a                    a3 = a1
  6141: 33 08 50 01 01           a1 = 0x10150
  6146: 64 a9                    a2 = a3
  6148: 28 a2 fb                 jump @361
      :                          @453
  6151: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6155: 7b 10 88 00              u64 [sp + 0x88] = ra
  6159: 7b 15 80 00              u64 [sp + 0x80] = s0
  6163: 7b 16 78                 u64 [sp + 0x78] = s1
  6166: 64 75                    s0 = a0
  6168: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6171: 64 8b                    a4 = a1
  6173: 33 08 01                 a1 = 0x1
  6176: 33 06 01                 s1 = 0x1
  6179: 51 07 1d                 jump @455 if a0 == 0
      :                          @454
  6182: 78 56 08                 u8 [s0 + 0x8] = s1
  6185: 46 15 09 01              u8 [s0 + 9] = 0x1
  6189: 64 57                    a0 = s0
  6191: 82 10 88 00              ra = u64 [sp + 0x88]
  6195: 82 15 80 00              s0 = u64 [sp + 0x80]
  6199: 82 16 78                 s1 = u64 [sp + 0x78]
  6202: 95 11 90 00              sp = sp + 0x90
  6206: 32 00                    ret
      :                          @455
  6208: 64 9a                    a3 = a2
  6210: 82 5c                    a5 = u64 [s0]
  6212: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6215: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6218: 84 79 04                 a2 = a0 & 0x4
  6221: 52 09 43                 jump @461 if a2 != 0
      :                          @456
  6224: 51 08 31                 jump @459 if a1 == 0
      :                          @457
  6227: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6230: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6233: 82 83 18                 t1 = u64 [a1 + 0x18]
  6236: 33 08 84 01 01           a1 = 0x10184
  6241: 33 09 02                 a2 = 0x2
  6244: 64 a6                    s1 = a3
  6246: 7b 1b 10                 u64 [sp + 0x10] = a4
  6249: 7b 1c 08                 u64 [sp + 0x8] = a5
  6252: b4 30 01 7a              ra = 122, jump [t1]
      :                          @458 [@dyn 61]
  6256: 82 1c 08                 a5 = u64 [sp + 0x8]
  6259: 82 1b 10                 a4 = u64 [sp + 0x10]
  6262: 64 6a                    a3 = s1
  6264: 33 08 01                 a1 = 0x1
  6267: 33 06 01                 s1 = 0x1
  6270: 52 07 a8                 jump @454 if a0 != 0
      :                          @459
  6273: 64 b7                    a0 = a4
  6275: 64 c8                    a1 = a5
  6277: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @460 [@dyn 62]
  6281: 33 08 01                 a1 = 0x1
  6284: 64 76                    s1 = a0
  6286: 28 98                    jump @454
      :                          @461
  6288: 52 08 36                 jump @465 if a1 != 0
      :                          @462
  6291: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6294: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6297: 82 83 18                 t1 = u64 [a1 + 0x18]
  6300: 33 08 88 01 01           a1 = 0x10188
  6305: 33 09 01                 a2 = 0x1
  6308: 33 06 01                 s1 = 0x1
  6311: 7b 1a                    u64 [sp] = a3
  6313: 7b 1b 10                 u64 [sp + 0x10] = a4
  6316: 7b 1c 08                 u64 [sp + 0x8] = a5
  6319: b4 30 01 7e              ra = 126, jump [t1]
      :                          @463 [@dyn 63]
  6323: 82 1c 08                 a5 = u64 [sp + 0x8]
  6326: 82 1b 10                 a4 = u64 [sp + 0x10]
  6329: 82 1a                    a3 = u64 [sp]
  6331: 33 08 01                 a1 = 0x1
  6334: 52 07 68 ff              jump @454 if a0 != 0
      :                          @464
  6338: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6341: 01                       fallthrough
      :                          @465
  6342: 33 06 01                 s1 = 0x1
  6345: 78 16 37                 u8 [sp + 0x37] = s1
  6348: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6351: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6354: 7b 18 18                 u64 [sp + 0x18] = a1
  6357: 7b 19 20                 u64 [sp + 0x20] = a2
  6360: 95 18 37                 a1 = sp + 0x37
  6363: 7b 18 28                 u64 [sp + 0x28] = a1
  6366: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6369: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6372: 82 c3                    t1 = u64 [a5]
  6374: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6377: 82 c0 10                 ra = u64 [a5 + 0x10]
  6380: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6383: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6386: 7a 18 68                 u32 [sp + 0x68] = a1
  6389: 78 19 70                 u8 [sp + 0x70] = a2
  6392: 7b 13 38                 u64 [sp + 0x38] = t1
  6395: 7b 14 40                 u64 [sp + 0x40] = t2
  6398: 7b 10 48                 u64 [sp + 0x48] = ra
  6401: 7b 12 50                 u64 [sp + 0x50] = t0
  6404: 95 17 18                 a0 = sp + 0x18
  6407: 7b 17 58                 u64 [sp + 0x58] = a0
  6410: 33 07 50 01 01           a0 = 0x10150
  6415: 7b 17 60                 u64 [sp + 0x60] = a0
  6418: 95 18 38                 a1 = sp + 0x38
  6421: 64 b7                    a0 = a4
  6423: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @466 [@dyn 64]
  6428: 52 07 21                 jump @469 if a0 != 0
      :                          @467
  6431: 82 18 60                 a1 = u64 [sp + 0x60]
  6434: 82 17 58                 a0 = u64 [sp + 0x58]
  6437: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6440: 33 08 86 01 01           a1 = 0x10186
  6445: 33 09 02                 a2 = 0x2
  6448: b4 a0 02 82 00           ra = 130, jump [a3]
      :                          @468 [@dyn 65]
  6453: 64 76                    s1 = a0
  6455: 33 08 01                 a1 = 0x1
  6458: 28 ec fe                 jump @454
      :                          @469
  6461: 33 08 01                 a1 = 0x1
  6464: 28 e6 fe                 jump @454
      :                          @470
  6467: 51 08 9b 00              jump @491 if a1 == 0
      :                          @471
  6471: 64 79                    a2 = a0
  6473: 7c 77                    a0 = u8 [a0]
  6475: 51 07 91 00              jump @490 if a0 == 0
      :                          @472
  6479: 51 27 ff 00 90 00        jump @492 if a0 == 255
      :                          @473
  6485: 6c 7a                    a3 = sext.b a0
  6487: 57 0a 09                 jump @475 if a3 <s 0
      :                          @474
  6490: 33 0a                    a3 = 0
  6492: 33 08                    a1 = 0
  6494: 28 73                    jump @489
      :                          @475
  6496: 55 27 c0 00 0d           jump @477 if a0 >=u 192
      :                          @476
  6501: 33 0a 01                 a3 = 0x1
  6504: 33 0b 80                 a4 = 0xffffffffffffff80
  6507: 28 4a                    jump @486
      :                          @477
  6509: 55 27 e0 00 0e           jump @479 if a0 >=u 224
      :                          @478
  6514: 33 0a 02                 a3 = 0x2
  6517: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6521: 28 3c                    jump @486
      :                          @479
  6523: 55 27 f0 00 0e           jump @481 if a0 >=u 240
      :                          @480
  6528: 33 0a 03                 a3 = 0x3
  6531: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6535: 28 2e                    jump @486
      :                          @481
  6537: 55 27 f8 00 0e           jump @483 if a0 >=u 248
      :                          @482
  6542: 33 0a 04                 a3 = 0x4
  6545: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6549: 28 20                    jump @486
      :                          @483
  6551: 55 27 fc 00 0e           jump @485 if a0 >=u 252
      :                          @484
  6556: 33 0a 05                 a3 = 0x5
  6559: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6563: 28 12                    jump @486
      :                          @485
  6565: 88 7a fe 00              a3 = a0 <u 0xfe
  6569: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6573: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6577: 85 aa 07                 a3 = a3 ^ 0x7
  6580: 01                       fallthrough
      :                          @486
  6581: ae 8a 2b                 jump @493 if a3 >=u a1
      :                          @487
  6584: 33 08                    a1 = 0
  6586: c8 b7 07                 a0 = a0 + a4
  6589: 64 ab                    a4 = a3
  6591: 01                       fallthrough
      :                          @488
  6592: c8 b9 0c                 a5 = a2 + a4
  6595: 7c cc                    a5 = u8 [a5]
  6597: 97 88 08                 a1 = a1 << 0x8
  6600: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6603: d4 c8 08                 a1 = a1 | a5
  6606: 52 0b f2                 jump @488 if a4 != 0
      :                          @489
  6609: 8a a9 03                 i32 a2 = a3 << 0x3
  6612: cf 97 07                 a0 = a0 << a2
  6615: c8 87 07                 a0 = a0 + a1
  6618: 32 00                    ret
      :                          @490
  6620: 32 00                    ret
      :                          @491
  6622: 00                       trap
      :                          @492
  6623: 00                       trap
      :                          @493
  6624: 00                       trap
      :                          @494 [@dyn 66]
  6625: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6628: 7b 10 28                 u64 [sp + 0x28] = ra
  6631: 7b 15 20                 u64 [sp + 0x20] = s0
  6634: 7b 16 18                 u64 [sp + 0x18] = s1
  6637: 64 86                    s1 = a1
  6639: 82 88 28                 a1 = u64 [a1 + 0x28]
  6642: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6645: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6648: 64 75                    s0 = a0
  6650: 33 08 48 01 01           a1 = 0x10148
  6655: 33 09 01                 a2 = 0x1
  6658: 64 a7                    a0 = a3
  6660: b4 b0 02 86 00           ra = 134, jump [a4]
      :                          @495 [@dyn 67]
  6665: 7b 16                    u64 [sp] = s1
  6667: 78 17 08                 u8 [sp + 0x8] = a0
  6670: 46 11 09                 u8 [sp + 9] = 0
  6673: 7b 15 10                 u64 [sp + 0x10] = s0
  6676: 33 09 8c 00              a2 = 0x8c
  6680: 64 17                    a0 = sp
  6682: 95 18 10                 a1 = sp + 0x10
  6685: 50 20 88 00 ea fd        ra = 136, jump @453
      :                          @496 [@dyn 68]
  6691: 33 07 01                 a0 = 0x1
  6694: 7c 18 08                 a1 = u8 [sp + 0x8]
  6697: 52 08 1b                 jump @498 if a1 != 0
      :                          @497
  6700: 82 17                    a0 = u64 [sp]
  6702: 82 78 28                 a1 = u64 [a0 + 0x28]
  6705: 82 77 20                 a0 = u64 [a0 + 0x20]
  6708: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6711: 33 08 89 01 01           a1 = 0x10189
  6716: 33 09 01                 a2 = 0x1
  6719: b4 a0 02 8a 00           ra = 138, jump [a3]
      :                          @498 [@dyn 69]
  6724: 82 10 28                 ra = u64 [sp + 0x28]
  6727: 82 15 20                 s0 = u64 [sp + 0x20]
  6730: 82 16 18                 s1 = u64 [sp + 0x18]
  6733: 95 11 30                 sp = sp + 0x30
  6736: 32 00                    ret
      :                          @499 [@dyn 70]
  6738: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6742: 7b 10 80 00              u64 [sp + 0x80] = ra
  6746: 80 89 34                 a2 = u32 [a1 + 0x34]
  6749: 82 77                    a0 = u64 [a0]
  6751: 84 9a 10                 a3 = a2 & 0x10
  6754: 52 0a 16                 jump @502 if a3 != 0
      :                          @500
  6757: 84 99 20                 a2 = a2 & 0x20
  6760: 52 09 41                 jump @505 if a2 != 0
      :                          @501
  6763: 7c 77                    a0 = u8 [a0]
  6765: 82 10 80 00              ra = u64 [sp + 0x80]
  6769: 95 11 88 00              sp = sp + 0x88
  6773: 28 9b f5                 jump @299
      :                          @502
  6776: 7c 77                    a0 = u8 [a0]
  6778: 33 0b 81 00              a4 = 0x81
  6782: 95 19 7f                 a2 = sp + 0x7f
  6785: 33 02 57                 t0 = 0x57
  6788: 01                       fallthrough
      :                          @503
  6789: 64 bc                    a5 = a4
  6791: 84 7b 0f                 a4 = a0 & 0xf
  6794: 97 77 38                 a0 = a0 << 0x38
  6797: 98 77 3c                 a0 = a0 >> 0x3c
  6800: 88 b3 0a                 t1 = a4 <u 0xa
  6803: 33 0a 30                 a3 = 0x30
  6806: da 32 0a                 a3 = t0 if t1 == 0
  6809: be ba 0a                 i32 a3 = a3 + a4
  6812: 78 9a                    u8 [a2] = a3
  6814: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6817: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6820: 52 07 e1                 jump @503 if a0 != 0
      :                          @504
  6823: 28 31                    jump @507
      :                          @505
  6825: 7c 77                    a0 = u8 [a0]
  6827: 33 0b 81 00              a4 = 0x81
  6831: 95 19 7f                 a2 = sp + 0x7f
  6834: 33 02 37                 t0 = 0x37
  6837: 01                       fallthrough
      :                          @506
  6838: 64 bc                    a5 = a4
  6840: 84 7b 0f                 a4 = a0 & 0xf
  6843: 97 77 38                 a0 = a0 << 0x38
  6846: 98 77 3c                 a0 = a0 >> 0x3c
  6849: 88 b3 0a                 t1 = a4 <u 0xa
  6852: 33 0a 30                 a3 = 0x30
  6855: da 32 0a                 a3 = t0 if t1 == 0
  6858: be ba 0a                 i32 a3 = a3 + a4
  6861: 78 9a                    u8 [a2] = a3
  6863: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6866: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6869: 52 07 e1                 jump @506 if a0 != 0
      :                          @507
  6872: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6875: 56 27 80 00 28           jump @510 if a0 >u 128
      :                          @508
  6880: 9a bb 81 00              a4 = 0x81 - a4
  6884: 64 1a                    a3 = sp
  6886: c8 7a 0a                 a3 = a3 + a0
  6889: 33 09 02                 a2 = 0x2
  6892: 64 87                    a0 = a1
  6894: 33 08 8a 01 01           a1 = 0x1018a
  6899: 50 20 8e 00 44 f6        ra = 142, jump @309
      :                          @509 [@dyn 71]
  6905: 82 10 80 00              ra = u64 [sp + 0x80]
  6909: 95 11 88 00              sp = sp + 0x88
  6913: 32 00                    ret
      :                          @510
  6915: 00                       trap
