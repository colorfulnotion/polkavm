// RO data = 656/656 bytes
// RW data = 16/4176 bytes
// Stack size = 8192 bytes
// RO data = [84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 74, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 226, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2226
// Code size = 6610 bytes

      :                          @0
     0: 28 9a 02 00 00           jump @46
      :                          @1
     5: 28 02 03 00 00           jump @51
      :                          @2
    10: 28 d4 04                 jump @108
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 82 77                    a0 = u64 [a0]
    26: 84 9a 10                 a3 = a2 & 0x10
    29: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    32: 84 99 20                 a2 = a2 & 0x20
    35: 52 09 41                 jump @9 if a2 != 0
      :                          @5
    38: 7c 77                    a0 = u8 [a0]
    40: 82 10 80 00              ra = u64 [sp + 0x80]
    44: 95 11 88 00              sp = sp + 0x88
    48: 28 62 0f                 jump @284
      :                          @6
    51: 7c 77                    a0 = u8 [a0]
    53: 33 0b 81 00              a4 = 0x81
    57: 95 19 7f                 a2 = sp + 0x7f
    60: 33 02 57                 t0 = 0x57
    63: 01                       fallthrough
      :                          @7
    64: 64 bc                    a5 = a4
    66: 84 7b 0f                 a4 = a0 & 0xf
    69: 97 77 38                 a0 = a0 << 0x38
    72: 98 77 3c                 a0 = a0 >> 0x3c
    75: 88 b3 0a                 t1 = a4 <u 0xa
    78: 33 0a 30                 a3 = 0x30
    81: da 32 0a                 a3 = t0 if t1 == 0
    84: be ba 0a                 i32 a3 = a3 + a4
    87: 78 9a                    u8 [a2] = a3
    89: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
    92: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
    95: 52 07 e1                 jump @7 if a0 != 0
      :                          @8
    98: 28 31                    jump @11
      :                          @9
   100: 7c 77                    a0 = u8 [a0]
   102: 33 0b 81 00              a4 = 0x81
   106: 95 19 7f                 a2 = sp + 0x7f
   109: 33 02 37                 t0 = 0x37
   112: 01                       fallthrough
      :                          @10
   113: 64 bc                    a5 = a4
   115: 84 7b 0f                 a4 = a0 & 0xf
   118: 97 77 38                 a0 = a0 << 0x38
   121: 98 77 3c                 a0 = a0 >> 0x3c
   124: 88 b3 0a                 t1 = a4 <u 0xa
   127: 33 0a 30                 a3 = 0x30
   130: da 32 0a                 a3 = t0 if t1 == 0
   133: be ba 0a                 i32 a3 = a3 + a4
   136: 78 9a                    u8 [a2] = a3
   138: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
   141: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
   144: 52 07 e1                 jump @10 if a0 != 0
      :                          @11
   147: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   150: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   155: 9a bb 81 00              a4 = 0x81 - a4
   159: 64 1a                    a3 = sp
   161: c8 7a 0a                 a3 = a3 + a0
   164: 33 09 02                 a2 = 0x2
   167: 64 87                    a0 = a1
   169: 33 08 8a 01 01           a1 = 0x1018a
   174: 50 10 04 0b 10           ra = 4, jump @294
      :                          @13 [@dyn 2]
   179: 82 10 80 00              ra = u64 [sp + 0x80]
   183: 95 11 88 00              sp = sp + 0x88
   187: 32 00                    ret
      :                          @14
   189: 00                       trap
      :                          @15 [@dyn 3]
   190: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   194: 7b 10 80 00              u64 [sp + 0x80] = ra
   198: 80 89 34                 a2 = u32 [a1 + 0x34]
   201: 84 9a 10                 a3 = a2 & 0x10
   204: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   207: 84 99 20                 a2 = a2 & 0x20
   210: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   213: 80 77                    a0 = u32 [a0]
   215: 82 10 80 00              ra = u64 [sp + 0x80]
   219: 95 11 88 00              sp = sp + 0x88
   223: 28 b3 0e                 jump @284
      :                          @18
   226: 81 7b                    a4 = i32 [a0]
   228: 33 09 81 00              a2 = 0x81
   232: 95 17 7f                 a0 = sp + 0x7f
   235: 33 02 57                 t0 = 0x57
   238: 01                       fallthrough
      :                          @19
   239: 64 9c                    a5 = a2
   241: 8b ba 04                 i32 a3 = a4 >> 0x4
   244: 84 bb 0f                 a4 = a4 & 0xf
   247: 88 b3 0a                 t1 = a4 <u 0xa
   250: 33 09 30                 a2 = 0x30
   253: da 32 09                 a2 = t0 if t1 == 0
   256: be b9 09                 i32 a2 = a2 + a4
   259: 78 79                    u8 [a0] = a2
   261: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   264: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   267: 64 ab                    a4 = a3
   269: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   272: 28 30                    jump @23
      :                          @21
   274: 81 7b                    a4 = i32 [a0]
   276: 33 09 81 00              a2 = 0x81
   280: 95 17 7f                 a0 = sp + 0x7f
   283: 33 02 37                 t0 = 0x37
   286: 01                       fallthrough
      :                          @22
   287: 64 9c                    a5 = a2
   289: 8b ba 04                 i32 a3 = a4 >> 0x4
   292: 84 bb 0f                 a4 = a4 & 0xf
   295: 88 b3 0a                 t1 = a4 <u 0xa
   298: 33 09 30                 a2 = 0x30
   301: da 32 09                 a2 = t0 if t1 == 0
   304: be b9 09                 i32 a2 = a2 + a4
   307: 78 79                    u8 [a0] = a2
   309: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   312: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   315: 64 ab                    a4 = a3
   317: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   320: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   323: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   328: 9a 9b 81 00              a4 = 0x81 - a2
   332: 64 1a                    a3 = sp
   334: c8 7a 0a                 a3 = a3 + a0
   337: 33 09 02                 a2 = 0x2
   340: 64 87                    a0 = a1
   342: 33 08 8a 01 01           a1 = 0x1018a
   347: 50 10 08 5e 0f           ra = 8, jump @294
      :                          @25 [@dyn 4]
   352: 82 10 80 00              ra = u64 [sp + 0x80]
   356: 95 11 88 00              sp = sp + 0x88
   360: 32 00                    ret
      :                          @26
   362: 00                       trap
      :                          @27 [@dyn 5]
   363: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   367: 7b 10 80 00              u64 [sp + 0x80] = ra
   371: 80 89 34                 a2 = u32 [a1 + 0x34]
   374: 84 9a 10                 a3 = a2 & 0x10
   377: 52 0a 16                 jump @30 if a3 != 0
      :                          @28
   380: 84 99 20                 a2 = a2 & 0x20
   383: 52 09 40                 jump @33 if a2 != 0
      :                          @29
   386: 82 77                    a0 = u64 [a0]
   388: 82 10 80 00              ra = u64 [sp + 0x80]
   392: 95 11 88 00              sp = sp + 0x88
   396: 28 06 0e                 jump @284
      :                          @30
   399: 82 7b                    a4 = u64 [a0]
   401: 33 09 81 00              a2 = 0x81
   405: 95 17 7f                 a0 = sp + 0x7f
   408: 33 02 57                 t0 = 0x57
   411: 01                       fallthrough
      :                          @31
   412: 64 9c                    a5 = a2
   414: 98 ba 04                 a3 = a4 >> 0x4
   417: 84 bb 0f                 a4 = a4 & 0xf
   420: 88 b3 0a                 t1 = a4 <u 0xa
   423: 33 09 30                 a2 = 0x30
   426: da 32 09                 a2 = t0 if t1 == 0
   429: be b9 09                 i32 a2 = a2 + a4
   432: 78 79                    u8 [a0] = a2
   434: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   437: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   440: 64 ab                    a4 = a3
   442: 52 0a e2                 jump @31 if a3 != 0
      :                          @32
   445: 28 30                    jump @35
      :                          @33
   447: 82 7b                    a4 = u64 [a0]
   449: 33 09 81 00              a2 = 0x81
   453: 95 17 7f                 a0 = sp + 0x7f
   456: 33 02 37                 t0 = 0x37
   459: 01                       fallthrough
      :                          @34
   460: 64 9c                    a5 = a2
   462: 98 ba 04                 a3 = a4 >> 0x4
   465: 84 bb 0f                 a4 = a4 & 0xf
   468: 88 b3 0a                 t1 = a4 <u 0xa
   471: 33 09 30                 a2 = 0x30
   474: da 32 09                 a2 = t0 if t1 == 0
   477: be b9 09                 i32 a2 = a2 + a4
   480: 78 79                    u8 [a0] = a2
   482: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   485: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   488: 64 ab                    a4 = a3
   490: 52 0a e2                 jump @34 if a3 != 0
      :                          @35
   493: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   496: 56 27 80 00 27           jump @38 if a0 >u 128
      :                          @36
   501: 9a 9b 81 00              a4 = 0x81 - a2
   505: 64 1a                    a3 = sp
   507: c8 7a 0a                 a3 = a3 + a0
   510: 33 09 02                 a2 = 0x2
   513: 64 87                    a0 = a1
   515: 33 08 8a 01 01           a1 = 0x1018a
   520: 50 10 0c b1 0e           ra = 12, jump @294
      :                          @37 [@dyn 6]
   525: 82 10 80 00              ra = u64 [sp + 0x80]
   529: 95 11 88 00              sp = sp + 0x88
   533: 32 00                    ret
      :                          @38
   535: 00                       trap
      :                          @39 [@dyn 7]
   536: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   539: 7b 10 30                 u64 [sp + 0x30] = ra
   542: 7b 15 28                 u64 [sp + 0x28] = s0
   545: 7b 16 20                 u64 [sp + 0x20] = s1
   548: 64 86                    s1 = a1
   550: 82 88 28                 a1 = u64 [a1 + 0x28]
   553: 82 6a 20                 a3 = u64 [s1 + 0x20]
   556: 82 8b 18                 a4 = u64 [a1 + 0x18]
   559: 64 75                    s0 = a0
   561: 33 08 48 01 01           a1 = 0x10148
   566: 33 09 01                 a2 = 0x1
   569: 64 a7                    a0 = a3
   571: b4 b0 01 10              ra = 16, jump [a4]
      :                          @40 [@dyn 8]
   575: 7b 16 08                 u64 [sp + 0x8] = s1
   578: 78 17 10                 u8 [sp + 0x10] = a0
   581: 46 11 11                 u8 [sp + 17] = 0
   584: 33 06 80 00              s1 = 0x80
   588: 33 07 02                 a0 = 0x2
   591: 7b 17                    u64 [sp] = a0
   593: 01                       fallthrough
      :                          @41
   594: 7b 15 18                 u64 [sp + 0x18] = s0
   597: 95 17 08                 a0 = sp + 0x8
   600: 95 18 18                 a1 = sp + 0x18
   603: 82 19                    a2 = u64 [sp]
   605: 50 10 12 2c 15           ra = 18, jump @438
      :                          @42 [@dyn 9]
   610: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   613: 95 55 01                 s0 = s0 + 0x1
   616: 52 06 ea                 jump @41 if s1 != 0
      :                          @43
   619: 7c 18 10                 a1 = u8 [sp + 0x10]
   622: 33 07 01                 a0 = 0x1
   625: 52 08 1b                 jump @45 if a1 != 0
      :                          @44
   628: 82 17 08                 a0 = u64 [sp + 0x8]
   631: 82 78 28                 a1 = u64 [a0 + 0x28]
   634: 82 77 20                 a0 = u64 [a0 + 0x20]
   637: 82 8a 18                 a3 = u64 [a1 + 0x18]
   640: 33 08 89 01 01           a1 = 0x10189
   645: 33 09 01                 a2 = 0x1
   648: b4 a0 01 14              ra = 20, jump [a3]
      :                          @45 [@dyn 10]
   652: 82 10 30                 ra = u64 [sp + 0x30]
   655: 82 15 28                 s0 = u64 [sp + 0x28]
   658: 82 16 20                 s1 = u64 [sp + 0x20]
   661: 95 11 38                 sp = sp + 0x38
   664: 32 00                    ret
      :                          @46 [export #0: 'refine']
   666: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   669: 7b 10 20                 u64 [sp + 0x20] = ra
   672: 7b 15 18                 u64 [sp + 0x18] = s0
   675: 7b 16 10                 u64 [sp + 0x10] = s1
   678: 49 11 08                 u64 [sp + 8] = 0
   681: 49 01                    u64 [sp + 0] = 0
   683: 33 05 01                 s0 = 0x1
   686: 64 17                    a0 = sp
   688: 33 09 10                 a2 = 0x10
   691: 33 0a 05                 a3 = 0x5
   694: 33 0b 01                 a4 = 0x1
   697: 33 08                    a1 = 0
   699: 33 0c                    a5 = 0
   701: 0a 12                    ecalli 18 // 'fetch'
   703: 01                       fallthrough
      :                          @47
   704: 51 17 ff 1a              jump @49 if a0 == 4294967295
      :                          @48
   708: 81 17 04                 a0 = i32 [sp + 0x4]
   711: 81 18 08                 a1 = i32 [sp + 0x8]
   714: 81 19 0c                 a2 = i32 [sp + 0xc]
   717: 81 15                    s0 = i32 [sp]
   719: c8 78 0a                 a3 = a1 + a0
   722: be a9 09                 i32 a2 = a2 + a3
   725: 83 55 01                 i32 s0 = s0 + 0x1
   728: 28 0a                    jump @50
      :                          @49
   730: 33 07                    a0 = 0
   732: 33 08                    a1 = 0
   734: 33 09 01                 a2 = 0x1
   737: 01                       fallthrough
      :                          @50
   738: 7a 15                    u32 [sp] = s0
   740: 7a 19 04                 u32 [sp + 0x4] = a2
   743: 7a 17 08                 u32 [sp + 0x8] = a0
   746: 7a 18 0c                 u32 [sp + 0xc] = a1
   749: 64 17                    a0 = sp
   751: 33 08 10                 a1 = 0x10
   754: 0a 13                    ecalli 19 // 'export'
   756: 64 17                    a0 = sp
   758: 33 08 10                 a1 = 0x10
   761: 82 10 20                 ra = u64 [sp + 0x20]
   764: 82 15 18                 s0 = u64 [sp + 0x18]
   767: 82 16 10                 s1 = u64 [sp + 0x10]
   770: 95 11 28                 sp = sp + 0x28
   773: 32 00                    ret
      :                          @51 [export #1: 'accumulate']
   775: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   778: 7b 10 20                 u64 [sp + 0x20] = ra
   781: 7b 15 18                 u64 [sp + 0x18] = s0
   784: 7b 16 10                 u64 [sp + 0x10] = s1
   787: 33 09 08                 a2 = 0x8
   790: ac 98 fa 00              jump @83 if a1 <u a2
      :                          @52
   794: 51 17 fc c0 01           jump @104 if a0 == 4294967292
      :                          @53
   799: 51 07 bb 01              jump @104 if a0 == 0
      :                          @54
   803: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   806: 95 75 08                 s0 = a0 + 0x8
   809: 51 0a 45                 jump @64 if a3 == 0
      :                          @55
   812: 7d 58                    a1 = i8 [s0]
   814: 33 06 01                 s1 = 0x1
   817: 59 08 40                 jump @65 if a1 >=s 0
      :                          @56
   820: 84 89 ff 00              a2 = a1 & 0xff
   824: 33 06 02                 s1 = 0x2
   827: 53 29 c0 00 2d           jump @62 if a2 <u 192
      :                          @57
   832: 33 06 03                 s1 = 0x3
   835: 53 29 e0 00 25           jump @62 if a2 <u 224
      :                          @58
   840: 33 06 04                 s1 = 0x4
   843: 53 29 f0 00 1d           jump @62 if a2 <u 240
      :                          @59
   848: 33 06 05                 s1 = 0x5
   851: 53 29 f8 00 15           jump @62 if a2 <u 248
      :                          @60
   856: 33 06 06                 s1 = 0x6
   859: 53 29 fc 00 0d           jump @62 if a2 <u 252
      :                          @61
   864: 88 98 fe 00              a1 = a2 <u 0xfe
   868: 9a 86 08                 s1 = 0x8 - a1
   871: 01                       fallthrough
      :                          @62
   872: ae 6a 09                 jump @65 if a3 >=u s1
      :                          @63
   875: 28 a5 00                 jump @83
      :                          @64
   878: 33 06                    s1 = 0
   880: 01                       fallthrough
      :                          @65
   881: 7b 16                    u64 [sp] = s1
   883: 64 57                    a0 = s0
   885: 64 68                    a1 = s1
   887: 64 a6                    s1 = a3
   889: 50 10 16 4b 15           ra = 22, jump @455
      :                          @66 [@dyn 11]
   894: 82 1a                    a3 = u64 [sp]
   896: 51 07 90 00              jump @83 if a0 == 0
      :                          @67
   900: e4 a6 07                 a0 = maxu(s1, a3)
   903: c9 a7 07                 a0 = a0 - a3
   906: 53 17 60 86 00           jump @83 if a0 <u 96
      :                          @68
   911: c8 5a 08                 a1 = a3 + s0
   914: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   917: 95 87 60                 a0 = a1 + 0x60
   920: 7b 17                    u64 [sp] = a0
   922: 51 06 4c                 jump @79 if s1 == 0
      :                          @69
   925: 7d 78                    a1 = i8 [a0]
   927: 33 05 01                 s0 = 0x1
   930: 59 08 37                 jump @76 if a1 >=s 0
      :                          @70
   933: 84 89 ff 00              a2 = a1 & 0xff
   937: 33 05 02                 s0 = 0x2
   940: 53 29 c0 00 2d           jump @76 if a2 <u 192
      :                          @71
   945: 33 05 03                 s0 = 0x3
   948: 53 29 e0 00 25           jump @76 if a2 <u 224
      :                          @72
   953: 33 05 04                 s0 = 0x4
   956: 53 29 f0 00 1d           jump @76 if a2 <u 240
      :                          @73
   961: 33 05 05                 s0 = 0x5
   964: 53 29 f8 00 15           jump @76 if a2 <u 248
      :                          @74
   969: 33 05 06                 s0 = 0x6
   972: 53 29 fc 00 0d           jump @76 if a2 <u 252
      :                          @75
   977: 88 98 fe 00              a1 = a2 <u 0xfe
   981: 9a 85 08                 s0 = 0x8 - a1
   984: 01                       fallthrough
      :                          @76
   985: ac 56 02 01              jump @105 if s1 <u s0
      :                          @77
   989: 64 58                    a1 = s0
   991: 50 10 18 e5 14           ra = 24, jump @455
      :                          @78 [@dyn 12]
   996: 28 07                    jump @80
      :                          @79
   998: 33 05                    s0 = 0
  1000: 33 07                    a0 = 0
  1002: 01                       fallthrough
      :                          @80
  1003: e4 56 08                 a1 = maxu(s1, s0)
  1006: c9 58 08                 a1 = a1 - s0
  1009: e4 78 08                 a1 = maxu(a1, a0)
  1012: c9 78 08                 a1 = a1 - a0
  1015: 33 09 20                 a2 = 0x20
  1018: ac 98 16                 jump @83 if a1 <u a2
      :                          @81
  1021: 82 19                    a2 = u64 [sp]
  1023: c8 95 05                 s0 = s0 + a2
  1026: c8 57 07                 a0 = a0 + s0
  1029: 51 17 e0 d5 00           jump @104 if a0 == 4294967264
      :                          @82
  1034: 33 09 29                 a2 = 0x29
  1037: ae 98 1b                 jump @85 if a1 >=u a2
      :                          @83
  1040: 33 08                    a1 = 0
  1042: 33 06 00 00 01           s1 = 0x10000
  1047: 01                       fallthrough
      :                          @84
  1048: 64 67                    a0 = s1
  1050: 82 10 20                 ra = u64 [sp + 0x20]
  1053: 82 15 18                 s0 = u64 [sp + 0x18]
  1056: 82 16 10                 s1 = u64 [sp + 0x10]
  1059: 95 11 28                 sp = sp + 0x28
  1062: 32 00                    ret
      :                          @85
  1064: 7c 79 28                 a2 = u8 [a0 + 0x28]
  1067: 51 09 19                 jump @87 if a2 == 0
      :                          @86
  1070: 46 11 0e                 u8 [sp + 14] = 0
  1073: 95 17 0e                 a0 = sp + 0xe
  1076: 33 08 01                 a1 = 0x1
  1079: 33 09                    a2 = 0
  1081: 33 0a                    a3 = 0
  1083: 0a 03                    ecalli 3 // 'write'
  1085: 33 08                    a1 = 0
  1087: 33 05                    s0 = 0
  1089: 28 82 00                 jump @102
      :                          @87
  1092: 95 8a d7                 a3 = a1 + 0xffffffffffffffd7
  1095: 95 76 29                 s1 = a0 + 0x29
  1098: 51 0a 51                 jump @98 if a3 == 0
      :                          @88
  1101: 7d 67                    a0 = i8 [s1]
  1103: 33 05 01                 s0 = 0x1
  1106: 59 07 37                 jump @95 if a0 >=s 0
      :                          @89
  1109: 84 77 ff 00              a0 = a0 & 0xff
  1113: 33 05 02                 s0 = 0x2
  1116: 53 27 c0 00 2d           jump @95 if a0 <u 192
      :                          @90
  1121: 33 05 03                 s0 = 0x3
  1124: 53 27 e0 00 25           jump @95 if a0 <u 224
      :                          @91
  1129: 33 05 04                 s0 = 0x4
  1132: 53 27 f0 00 1d           jump @95 if a0 <u 240
      :                          @92
  1137: 33 05 05                 s0 = 0x5
  1140: 53 27 f8 00 15           jump @95 if a0 <u 248
      :                          @93
  1145: 33 05 06                 s0 = 0x6
  1148: 53 27 fc 00 0d           jump @95 if a0 <u 252
      :                          @94
  1153: 88 77 fe 00              a0 = a0 <u 0xfe
  1157: 9a 75 08                 s0 = 0x8 - a0
  1160: 01                       fallthrough
      :                          @95
  1161: 7b 1a                    u64 [sp] = a3
  1163: ac 5a 52                 jump @107 if a3 <u s0
      :                          @96
  1166: 64 67                    a0 = s1
  1168: 64 58                    a1 = s0
  1170: 50 10 1a 32 14           ra = 26, jump @455
      :                          @97 [@dyn 13]
  1175: 82 1a                    a3 = u64 [sp]
  1177: 28 07                    jump @99
      :                          @98
  1179: 33 05                    s0 = 0
  1181: 33 07                    a0 = 0
  1183: 01                       fallthrough
      :                          @99
  1184: c8 56 09                 a2 = s1 + s0
  1187: e4 5a 08                 a1 = maxu(a3, s0)
  1190: c9 58 08                 a1 = a1 - s0
  1193: e6 78 05                 s0 = minu(a1, a0)
  1196: 46 11 0e                 u8 [sp + 14] = 0
  1199: 95 17 0e                 a0 = sp + 0xe
  1202: 33 08 01                 a1 = 0x1
  1205: 64 96                    s1 = a2
  1207: 64 5a                    a3 = s0
  1209: 0a 03                    ecalli 3 // 'write'
  1211: 01                       fallthrough
      :                          @100
  1212: 55 15 21 20              jump @106 if s0 >=u 33
      :                          @101
  1216: 64 68                    a1 = s1
  1218: 01                       fallthrough
      :                          @102
  1219: 33 06 11 00 03           s1 = 0x30011
  1224: 33 07 11 00 03           a0 = 0x30011
  1229: 64 59                    a2 = s0
  1231: 50 10 1c 0d 0a           ra = 28, jump @264
      :                          @103 [@dyn 14]
  1236: 33 08 20                 a1 = 0x20
  1239: 28 41 ff                 jump @84
      :                          @104
  1242: 00                       trap
      :                          @105
  1243: 00                       trap
      :                          @106
  1244: 00                       trap
      :                          @107
  1245: 00                       trap
      :                          @108 [export #2: 'on_transfer']
  1246: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
  1250: 7b 10 88 02              u64 [sp + 0x288] = ra
  1254: 7b 15 80 02              u64 [sp + 0x280] = s0
  1258: 7b 16 78 02              u64 [sp + 0x278] = s1
  1262: 64 8c                    a5 = a1
  1264: 64 79                    a2 = a0
  1266: 33 02                    t0 = 0
  1268: 95 7b 04                 a4 = a0 + 0x4
  1271: 33 07 06                 a0 = 0x6
  1274: 7b 17 28                 u64 [sp + 0x28] = a0
  1277: 33 07 0a                 a0 = 0xa
  1280: 7b 17 58                 u64 [sp + 0x58] = a0
  1283: 33 07 0e                 a0 = 0xe
  1286: 7b 17 20                 u64 [sp + 0x20] = a0
  1289: 33 07 58 00 01           a0 = 0x10058
  1294: 7b 17 18                 u64 [sp + 0x18] = a0
  1297: 33 07 82 00              a0 = 0x82
  1301: 7b 17 10                 u64 [sp + 0x10] = a0
  1304: 33 07 70 02 01           a0 = 0x10270
  1309: 7b 17 08                 u64 [sp + 0x8] = a0
  1312: 33 07 40 00 03           a0 = 0x30040
  1317: 95 77 00 10              a0 = a0 + 0x1000
  1321: 7b 17 50                 u64 [sp + 0x50] = a0
  1324: 33 07 f8 00 01           a0 = 0x100f8
  1329: 7b 17                    u64 [sp] = a0
  1331: 95 97 08                 a0 = a2 + 0x8
  1334: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
  1337: 95 98 0c                 a1 = a2 + 0xc
  1340: 7b 18 60                 u64 [sp + 0x60] = a1
  1343: 33 08 08                 a1 = 0x8
  1346: 33 06 ff ef              s1 = 0xffffffffffffefff
  1350: 7b 16 48                 u64 [sp + 0x48] = s1
  1353: 7b 17 c0 00              u64 [sp + 0xc0] = a0
  1357: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1361: 7b 1c 40                 u64 [sp + 0x40] = a5
  1364: 7b 19 38                 u64 [sp + 0x38] = a2
  1367: 7b 1b 30                 u64 [sp + 0x30] = a4
  1370: 7b 1a a8 00              u64 [sp + 0xa8] = a3
  1374: ac 8c bd 04              jump @156 if a5 <u a1
      :                          @109
  1378: 51 09 d2 04              jump @157 if a2 == 0
      :                          @110
  1382: 51 0b ce 04              jump @157 if a4 == 0
      :                          @111
  1386: 7c 97                    a0 = u8 [a2]
  1388: 7b 17 78                 u64 [sp + 0x78] = a0
  1391: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1394: 7b 17 68                 u64 [sp + 0x68] = a0
  1397: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1400: 7b 17 70                 u64 [sp + 0x70] = a0
  1403: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1406: 7b 17 80 00              u64 [sp + 0x80] = a0
  1410: 7c b7                    a0 = u8 [a4]
  1412: 7b 17 98 00              u64 [sp + 0x98] = a0
  1416: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1419: 7b 17 88 00              u64 [sp + 0x88] = a0
  1423: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1426: 7b 17 90 00              u64 [sp + 0x90] = a0
  1430: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1433: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1437: 51 0a 53                 jump @121 if a3 == 0
      :                          @112
  1440: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1444: 7d 77                    a0 = i8 [a0]
  1446: 33 05 01                 s0 = 0x1
  1449: 59 07 4a                 jump @122 if a0 >=s 0
      :                          @113
  1452: 84 77 ff 00              a0 = a0 & 0xff
  1456: 33 05 02                 s0 = 0x2
  1459: 33 06 c0 00              s1 = 0xc0
  1463: ac 67 33                 jump @119 if a0 <u s1
      :                          @114
  1466: 33 05 03                 s0 = 0x3
  1469: 33 06 e0 00              s1 = 0xe0
  1473: ac 67 29                 jump @119 if a0 <u s1
      :                          @115
  1476: 33 05 04                 s0 = 0x4
  1479: 33 06 f0 00              s1 = 0xf0
  1483: ac 67 1f                 jump @119 if a0 <u s1
      :                          @116
  1486: 33 05 05                 s0 = 0x5
  1489: 33 06 f8 00              s1 = 0xf8
  1493: ac 67 15                 jump @119 if a0 <u s1
      :                          @117
  1496: 33 05 06                 s0 = 0x6
  1499: 33 06 fc 00              s1 = 0xfc
  1503: ac 67 0b                 jump @119 if a0 <u s1
      :                          @118
  1506: 88 77 fe 00              a0 = a0 <u 0xfe
  1510: 9a 75 08                 s0 = 0x8 - a0
  1513: 01                       fallthrough
      :                          @119
  1514: ae 5a 09                 jump @122 if a3 >=u s0
      :                          @120
  1517: 28 2e 04                 jump @156
      :                          @121
  1520: 33 05                    s0 = 0
  1522: 01                       fallthrough
      :                          @122
  1523: 82 17 c0 00              a0 = u64 [sp + 0xc0]
  1527: 64 58                    a1 = s0
  1529: 7b 12 b0 00              u64 [sp + 0xb0] = t0
  1533: 50 10 1e c7 12           ra = 30, jump @455
      :                          @123 [@dyn 15]
  1538: 33 03 98 00              t1 = 0x98
  1542: 33 02 04                 t0 = 0x4
  1545: 33 06 08                 s1 = 0x8
  1548: 82 1c a8 00              a5 = u64 [sp + 0xa8]
  1552: 82 1b b0 00              a4 = u64 [sp + 0xb0]
  1556: ae 7b 07 04              jump @156 if a4 >=u a0
      :                          @124
  1560: 82 18 68                 a1 = u64 [sp + 0x68]
  1563: 97 88 08                 a1 = a1 << 0x8
  1566: 82 19 78                 a2 = u64 [sp + 0x78]
  1569: d4 98 08                 a1 = a1 | a2
  1572: 82 19 70                 a2 = u64 [sp + 0x70]
  1575: 97 99 10                 a2 = a2 << 0x10
  1578: 82 1a 80 00              a3 = u64 [sp + 0x80]
  1582: 97 aa 18                 a3 = a3 << 0x18
  1585: d4 a9 09                 a2 = a2 | a3
  1588: d4 89 04                 t2 = a2 | a1
  1591: 82 18 88 00              a1 = u64 [sp + 0x88]
  1595: 97 88 08                 a1 = a1 << 0x8
  1598: 82 19 98 00              a2 = u64 [sp + 0x98]
  1602: d4 98 08                 a1 = a1 | a2
  1605: 82 19 90 00              a2 = u64 [sp + 0x90]
  1609: 97 99 10                 a2 = a2 << 0x10
  1612: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  1616: 97 aa 18                 a3 = a3 << 0x18
  1619: d4 a9 09                 a2 = a2 | a3
  1622: d4 89 00                 ra = a2 | a1
  1625: e4 5c 08                 a1 = maxu(a5, s0)
  1628: c9 58 08                 a1 = a1 - s0
  1631: 82 19 b8 00              a2 = u64 [sp + 0xb8]
  1635: c8 59 09                 a2 = a2 + s0
  1638: 82 1a 60                 a3 = u64 [sp + 0x60]
  1641: c8 a5 05                 s0 = s0 + a3
  1644: 64 ba                    a3 = a4
  1646: 01                       fallthrough
      :                          @125
  1647: ac 68 ac 03              jump @156 if a1 <u s1
      :                          @126
  1651: aa 25 c1 03              jump @157 if s0 == t0
      :                          @127
  1655: 51 05 bd 03              jump @157 if s0 == 0
      :                          @128
  1659: ac 38 a0 03              jump @156 if a1 <u t1
      :                          @129
  1663: 51 0a 17                 jump @132 if a3 == 0
      :                          @130
  1666: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1670: 95 55 98 00              s0 = s0 + 0x98
  1674: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1677: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1680: 52 07 df                 jump @125 if a0 != 0
      :                          @131
  1683: 28 88 03                 jump @156
      :                          @132
  1686: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1689: 7c 98                    a1 = u8 [a2]
  1691: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1694: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1697: 8a 77 08                 i32 a0 = a0 << 0x8
  1700: d4 87 07                 a0 = a0 | a1
  1703: 8a a8 10                 i32 a1 = a3 << 0x10
  1706: 8a ba 18                 i32 a3 = a4 << 0x18
  1709: d4 a8 08                 a1 = a1 | a3
  1712: d4 87 07                 a0 = a0 | a1
  1715: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1719: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1722: 7c 58                    a1 = u8 [s0]
  1724: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1727: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1730: 8a 77 08                 i32 a0 = a0 << 0x8
  1733: d4 87 07                 a0 = a0 | a1
  1736: 8a a8 10                 i32 a1 = a3 << 0x10
  1739: 8a ba 18                 i32 a3 = a4 << 0x18
  1742: d4 a8 08                 a1 = a1 | a3
  1745: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1748: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1751: d4 87 07                 a0 = a0 | a1
  1754: 7b 17 98 00              u64 [sp + 0x98] = a0
  1758: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1761: 97 aa 10                 a3 = a3 << 0x10
  1764: 97 bb 08                 a4 = a4 << 0x8
  1767: d4 ba 0a                 a3 = a3 | a4
  1770: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1773: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1776: d4 a7 07                 a0 = a0 | a3
  1779: 97 77 10                 a0 = a0 << 0x10
  1782: 97 88 08                 a1 = a1 << 0x8
  1785: d4 b8 08                 a1 = a1 | a4
  1788: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1791: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1794: d4 87 07                 a0 = a0 | a1
  1797: 97 77 10                 a0 = a0 << 0x10
  1800: 97 aa 08                 a3 = a3 << 0x8
  1803: d4 ba 0a                 a3 = a3 | a4
  1806: d4 a7 07                 a0 = a0 | a3
  1809: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1812: 97 77 08                 a0 = a0 << 0x8
  1815: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1819: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1823: d4 87 07                 a0 = a0 | a1
  1826: 7b 17 90 00              u64 [sp + 0x90] = a0
  1830: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1834: 97 aa 10                 a3 = a3 << 0x10
  1837: 97 bb 08                 a4 = a4 << 0x8
  1840: d4 ba 0a                 a3 = a3 | a4
  1843: d4 a7 07                 a0 = a0 | a3
  1846: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1850: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1854: 95 98 10                 a1 = a2 + 0x10
  1857: 97 77 10                 a0 = a0 << 0x10
  1860: 97 aa 08                 a3 = a3 << 0x8
  1863: d4 ba 0a                 a3 = a3 | a4
  1866: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1870: d4 a7 07                 a0 = a0 | a3
  1873: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1877: 97 77 10                 a0 = a0 << 0x10
  1880: 97 bb 08                 a4 = a4 << 0x8
  1883: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1887: d4 ba 0a                 a3 = a3 | a4
  1890: d4 a7 07                 a0 = a0 | a3
  1893: 97 77 08                 a0 = a0 << 0x8
  1896: d4 97 07                 a0 = a0 | a2
  1899: 7b 17 88 00              u64 [sp + 0x88] = a0
  1903: 95 17 68 01              a0 = sp + 0x168
  1907: 33 09 80 00              a2 = 0x80
  1911: 64 45                    s0 = t2
  1913: 64 06                    s1 = ra
  1915: 50 10 20 61 07           ra = 32, jump @264
      :                          @133 [@dyn 16]
  1920: 95 17 e0 00              a0 = sp + 0xe0
  1924: 95 18 68 01              a1 = sp + 0x168
  1928: 33 09 80 00              a2 = 0x80
  1932: 50 10 22 50 07           ra = 34, jump @264
      :                          @134 [@dyn 17]
  1937: 7a 15 c8 00              u32 [sp + 0xc8] = s0
  1941: 7a 16 cc 00              u32 [sp + 0xcc] = s1
  1945: 82 17 a0 00              a0 = u64 [sp + 0xa0]
  1949: 7a 17 d0 00              u32 [sp + 0xd0] = a0
  1953: 82 17 98 00              a0 = u64 [sp + 0x98]
  1957: 7a 17 d4 00              u32 [sp + 0xd4] = a0
  1961: 82 17 90 00              a0 = u64 [sp + 0x90]
  1965: 7b 17 d8 00              u64 [sp + 0xd8] = a0
  1969: 82 17 88 00              a0 = u64 [sp + 0x88]
  1973: 7b 17 60 01              u64 [sp + 0x160] = a0
  1977: 95 17 c8 00              a0 = sp + 0xc8
  1981: 7b 17 68 01              u64 [sp + 0x168] = a0
  1985: 82 17 28                 a0 = u64 [sp + 0x28]
  1988: 7b 17 70 01              u64 [sp + 0x170] = a0
  1992: 95 18 cc 00              a1 = sp + 0xcc
  1996: 7b 18 78 01              u64 [sp + 0x178] = a1
  2000: 7b 17 80 01              u64 [sp + 0x180] = a0
  2004: 95 18 d0 00              a1 = sp + 0xd0
  2008: 7b 18 88 01              u64 [sp + 0x188] = a1
  2012: 7b 17 90 01              u64 [sp + 0x190] = a0
  2016: 95 18 d4 00              a1 = sp + 0xd4
  2020: 7b 18 98 01              u64 [sp + 0x198] = a1
  2024: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  2028: 95 17 d8 00              a0 = sp + 0xd8
  2032: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  2036: 82 17 58                 a0 = u64 [sp + 0x58]
  2039: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
  2043: 95 18 e0 00              a1 = sp + 0xe0
  2047: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  2051: 82 18 20                 a1 = u64 [sp + 0x20]
  2054: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  2058: 95 18 60 01              a1 = sp + 0x160
  2062: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
  2066: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  2070: 82 17 18                 a0 = u64 [sp + 0x18]
  2073: 7b 17 28 02              u64 [sp + 0x228] = a0
  2077: 49 21 30 02 07           u64 [sp + 560] = 0x7
  2082: 49 21 48 02              u64 [sp + 584] = 0
  2086: 95 17 68 01              a0 = sp + 0x168
  2090: 7b 17 38 02              u64 [sp + 0x238] = a0
  2094: 49 21 40 02 07           u64 [sp + 576] = 0x7
  2099: 95 17 58 02              a0 = sp + 0x258
  2103: 95 18 28 02              a1 = sp + 0x228
  2107: 50 10 24 31 04           ra = 36, jump @214
      :                          @135 [@dyn 18]
  2112: 82 15 60 02              s0 = u64 [sp + 0x260]
  2116: 82 1b 68 02              a4 = u64 [sp + 0x268]
  2120: 82 16 58 02              s1 = u64 [sp + 0x258]
  2124: 33 07 02                 a0 = 0x2
  2127: 33 08                    a1 = 0
  2129: 33 09                    a2 = 0
  2131: 64 5a                    a3 = s0
  2133: 33 00 26                 ra = 0x26
  2136: 0a 64                    ecalli 100 // 'log'
  2138: 01                       fallthrough
      :                          @136 [@dyn 19]
  2139: 82 17 48                 a0 = u64 [sp + 0x48]
  2142: c8 67 07                 a0 = a0 + s1
  2145: 82 1b 50                 a4 = u64 [sp + 0x50]
  2148: 53 27 00 f0 19           jump @141 if a0 <u 4294963200
      :                          @137
  2153: 82 b7                    a0 = u64 [a4]
  2155: c9 7b 08                 a1 = a4 - a0
  2158: ab 58 0f                 jump @141 if a1 != s0
      :                          @138
  2161: c9 67 08                 a1 = a0 - s1
  2164: 01                       fallthrough
      :                          @139
  2165: 82 b9                    a2 = u64 [a4]
  2167: ab 79 f2                 jump @137 if a2 != a0
      :                          @140
  2170: 7b b8                    u64 [a4] = a1
  2172: 01                       fallthrough
      :                          @141
  2173: 81 17 cc 00              a0 = i32 [sp + 0xcc]
  2177: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
  2181: 95 17 ec 01              a0 = sp + 0x1ec
  2185: 33 08 04                 a1 = 0x4
  2188: 95 19 e0 00              a2 = sp + 0xe0
  2192: 33 0a 80 00              a3 = 0x80
  2196: 0a 03                    ecalli 3 // 'write'
  2198: 0a                       ecalli 0 // 'gas'
  2199: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2203: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
  2207: 46 21 07 02 04           u8 [sp + 519] = 0x4
  2212: 7b 17 08 02              u64 [sp + 0x208] = a0
  2216: 95 17 07 02              a0 = sp + 0x207
  2220: 33 08 01                 a1 = 0x1
  2223: 95 19 08 02              a2 = sp + 0x208
  2227: 33 0a 08                 a3 = 0x8
  2230: 0a 03                    ecalli 3 // 'write'
  2232: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2237: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2242: 49 21 88 01              u64 [sp + 392] = 0
  2246: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2256: 7b 17 90 01              u64 [sp + 0x190] = a0
  2260: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2265: 49 21 a0 01 02           u64 [sp + 416] = 0x2
  2270: 49 21 b0 01 02           u64 [sp + 432] = 0x2
  2275: 49 21 c0 01 01           u64 [sp + 448] = 0x1
  2280: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  2284: 95 17 07 02              a0 = sp + 0x207
  2288: 7b 17 58 02              u64 [sp + 0x258] = a0
  2292: 82 17 10                 a0 = u64 [sp + 0x10]
  2295: 7b 17 60 02              u64 [sp + 0x260] = a0
  2299: 95 17 f8 01              a0 = sp + 0x1f8
  2303: 7b 17 68 02              u64 [sp + 0x268] = a0
  2307: 82 17 58                 a0 = u64 [sp + 0x58]
  2310: 7b 17 70 02              u64 [sp + 0x270] = a0
  2314: 46 21 d0 01 03           u8 [sp + 464] = 0x3
  2319: 82 17 08                 a0 = u64 [sp + 0x8]
  2322: 7b 17 28 02              u64 [sp + 0x228] = a0
  2326: 49 21 30 02 02           u64 [sp + 560] = 0x2
  2331: 95 17 68 01              a0 = sp + 0x168
  2335: 7b 17 48 02              u64 [sp + 0x248] = a0
  2339: 49 21 50 02 02           u64 [sp + 592] = 0x2
  2344: 95 17 58 02              a0 = sp + 0x258
  2348: 7b 17 38 02              u64 [sp + 0x238] = a0
  2352: 49 21 40 02 02           u64 [sp + 576] = 0x2
  2357: 95 17 10 02              a0 = sp + 0x210
  2361: 95 18 28 02              a1 = sp + 0x228
  2365: 50 10 28 2f 03           ra = 40, jump @214
      :                          @142 [@dyn 20]
  2370: 82 15 18 02              s0 = u64 [sp + 0x218]
  2374: 82 1b 20 02              a4 = u64 [sp + 0x220]
  2378: 82 16 10 02              s1 = u64 [sp + 0x210]
  2382: 33 07 02                 a0 = 0x2
  2385: 33 08                    a1 = 0
  2387: 33 09                    a2 = 0
  2389: 64 5a                    a3 = s0
  2391: 33 00 2a                 ra = 0x2a
  2394: 0a 64                    ecalli 100 // 'log'
  2396: 01                       fallthrough
      :                          @143 [@dyn 21]
  2397: 82 1b 50                 a4 = u64 [sp + 0x50]
  2400: 82 17 48                 a0 = u64 [sp + 0x48]
  2403: c8 67 07                 a0 = a0 + s1
  2406: 53 27 00 f0 19           jump @148 if a0 <u 4294963200
      :                          @144
  2411: 82 b7                    a0 = u64 [a4]
  2413: c9 7b 08                 a1 = a4 - a0
  2416: ab 58 0f                 jump @148 if a1 != s0
      :                          @145
  2419: c9 67 08                 a1 = a0 - s1
  2422: 01                       fallthrough
      :                          @146
  2423: 82 b9                    a2 = u64 [a4]
  2425: ab 79 f2                 jump @144 if a2 != a0
      :                          @147
  2428: 7b b8                    u64 [a4] = a1
  2430: 01                       fallthrough
      :                          @148
  2431: 95 17 f0 01              a0 = sp + 0x1f0
  2435: 7b 17 58 02              u64 [sp + 0x258] = a0
  2439: 82 17 58                 a0 = u64 [sp + 0x58]
  2442: 7b 17 60 02              u64 [sp + 0x260] = a0
  2446: 82 17                    a0 = u64 [sp]
  2448: 7b 17 68 01              u64 [sp + 0x168] = a0
  2452: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2457: 49 21 88 01              u64 [sp + 392] = 0
  2461: 95 17 58 02              a0 = sp + 0x258
  2465: 7b 17 78 01              u64 [sp + 0x178] = a0
  2469: 49 21 80 01 01           u64 [sp + 384] = 0x1
  2474: 95 17 28 02              a0 = sp + 0x228
  2478: 95 18 68 01              a1 = sp + 0x168
  2482: 50 10 2c ba 02           ra = 44, jump @214
      :                          @149 [@dyn 22]
  2487: 82 15 30 02              s0 = u64 [sp + 0x230]
  2491: 82 1b 38 02              a4 = u64 [sp + 0x238]
  2495: 82 16 28 02              s1 = u64 [sp + 0x228]
  2499: 33 07 02                 a0 = 0x2
  2502: 33 08                    a1 = 0
  2504: 33 09                    a2 = 0
  2506: 64 5a                    a3 = s0
  2508: 33 00 2e                 ra = 0x2e
  2511: 0a 64                    ecalli 100 // 'log'
  2513: 01                       fallthrough
      :                          @150 [@dyn 23]
  2514: 82 1b 50                 a4 = u64 [sp + 0x50]
  2517: 82 17 48                 a0 = u64 [sp + 0x48]
  2520: c8 67 07                 a0 = a0 + s1
  2523: 53 27 00 f0 19           jump @155 if a0 <u 4294963200
      :                          @151
  2528: 82 b7                    a0 = u64 [a4]
  2530: c9 7b 08                 a1 = a4 - a0
  2533: ab 58 0f                 jump @155 if a1 != s0
      :                          @152
  2536: c9 67 08                 a1 = a0 - s1
  2539: 01                       fallthrough
      :                          @153
  2540: 82 b9                    a2 = u64 [a4]
  2542: ab 79 f2                 jump @151 if a2 != a0
      :                          @154
  2545: 7b b8                    u64 [a4] = a1
  2547: 01                       fallthrough
      :                          @155
  2548: 82 12 b0 00              t0 = u64 [sp + 0xb0]
  2552: 95 22 01                 t0 = t0 + 0x1
  2555: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  2559: 95 77 98 00              a0 = a0 + 0x98
  2563: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  2567: 82 1c 40                 a5 = u64 [sp + 0x40]
  2570: 82 19 38                 a2 = u64 [sp + 0x38]
  2573: 82 1b 30                 a4 = u64 [sp + 0x30]
  2576: 82 1a a8 00              a3 = u64 [sp + 0xa8]
  2580: 33 08 08                 a1 = 0x8
  2583: ae 8c 4b fb              jump @109 if a5 >=u a1
      :                          @156
  2587: 33 07 00 00 01           a0 = 0x10000
  2592: 33 08                    a1 = 0
  2594: 82 10 88 02              ra = u64 [sp + 0x288]
  2598: 82 15 80 02              s0 = u64 [sp + 0x280]
  2602: 82 16 78 02              s1 = u64 [sp + 0x278]
  2606: 95 11 90 02              sp = sp + 0x290
  2610: 32 00                    ret
      :                          @157
  2612: 00                       trap
      :                          @158
  2613: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2616: 7b 10 40                 u64 [sp + 0x40] = ra
  2619: 7b 15 38                 u64 [sp + 0x38] = s0
  2622: 7b 16 30                 u64 [sp + 0x30] = s1
  2625: c8 89 09                 a2 = a2 + a1
  2628: ac 89 52                 jump @166 if a2 <u a1
      :                          @159
  2631: 64 75                    s0 = a0
  2633: 82 77                    a0 = u64 [a0]
  2635: 97 78 01                 a1 = a0 << 0x1
  2638: 33 0a 08                 a3 = 0x8
  2641: e4 a9 09                 a2 = maxu(a2, a3)
  2644: e4 98 06                 s1 = maxu(a1, a2)
  2647: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2650: 98 88 3f                 a1 = a1 >> 0x3f
  2653: 51 07 12                 jump @161 if a0 == 0
      :                          @160
  2656: 82 59 08                 a2 = u64 [s0 + 0x8]
  2659: 7b 19 18                 u64 [sp + 0x18] = a2
  2662: 49 11 20 01              u64 [sp + 32] = 0x1
  2666: 7b 17 28                 u64 [sp + 0x28] = a0
  2669: 28 06                    jump @162
      :                          @161
  2671: 49 11 20                 u64 [sp + 32] = 0
  2674: 01                       fallthrough
      :                          @162
  2675: 64 17                    a0 = sp
  2677: 95 1a 18                 a3 = sp + 0x18
  2680: 64 69                    a2 = s1
  2682: 50 10 30 32              ra = 48, jump @170
      :                          @163 [@dyn 24]
  2686: 82 18                    a1 = u64 [sp]
  2688: 82 17 08                 a0 = u64 [sp + 0x8]
  2691: 51 08 14                 jump @167 if a1 == 0
      :                          @164
  2694: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2704: aa 87 0d                 jump @168 if a0 == a1
      :                          @165
  2707: 52 07 18                 jump @169 if a0 != 0
      :                          @166
  2710: 00                       trap
      :                          @167
  2711: 7b 57 08                 u64 [s0 + 0x8] = a0
  2714: 7b 56                    u64 [s0] = s1
  2716: 01                       fallthrough
      :                          @168
  2717: 82 10 40                 ra = u64 [sp + 0x40]
  2720: 82 15 38                 s0 = u64 [sp + 0x38]
  2723: 82 16 30                 s1 = u64 [sp + 0x30]
  2726: 95 11 48                 sp = sp + 0x48
  2729: 32 00                    ret
      :                          @169
  2731: 00                       trap
      :                          @170
  2732: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2735: 7b 10 30                 u64 [sp + 0x30] = ra
  2738: 7b 15 28                 u64 [sp + 0x28] = s0
  2741: 7b 16 20                 u64 [sp + 0x20] = s1
  2744: 64 95                    s0 = a2
  2746: 64 72                    t0 = a0
  2748: 51 08 76                 jump @180 if a1 == 0
      :                          @171
  2751: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2754: 51 07 79                 jump @181 if a0 == 0
      :                          @172
  2757: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2760: 51 09 a6 00              jump @188 if a2 == 0
      :                          @173
  2764: 82 a8                    a1 = u64 [a3]
  2766: 33 06 40 00 03           s1 = 0x30040
  2771: 33 03 00 10              t1 = 0x1000
  2775: c8 36 06                 s1 = s1 + t1
  2778: 01                       fallthrough
      :                          @174
  2779: 82 6a                    a3 = u64 [s1]
  2781: c8 5a 07                 a0 = a3 + s0
  2784: ac a7 cb 00              jump @194 if a0 <u a3
      :                          @175
  2788: 95 7b 01                 a4 = a0 + 0x1
  2791: 88 bc 01                 a5 = a4 <u 0x1
  2794: d8 b3 0b                 a4 = t1 <u a4
  2797: d4 cb 0b                 a4 = a4 | a5
  2800: 52 0b bb 00              jump @194 if a4 != 0
      :                          @176
  2804: 82 6b                    a4 = u64 [s1]
  2806: ab ab e5                 jump @174 if a4 != a3
      :                          @177
  2809: 7b 67                    u64 [s1] = a0
  2811: 33 0c                    a5 = 0
  2813: 7b 12 18                 u64 [sp + 0x18] = t0
  2816: 33 0a 40 00 03           a3 = 0x30040
  2821: 33 0b 00 10              a4 = 0x1000
  2825: 7b 1a                    u64 [sp] = a3
  2827: c8 ba 0a                 a3 = a3 + a4
  2830: c9 7a 07                 a0 = a3 - a0
  2833: 7b 17 10                 u64 [sp + 0x10] = a0
  2836: 7b 18 08                 u64 [sp + 0x8] = a1
  2839: 64 96                    s1 = a2
  2841: 50 10 32 c3 03           ra = 50, jump @264
      :                          @178 [@dyn 25]
  2846: 54 26 00 10 95 00        jump @195 if s1 <=u 4096
      :                          @179
  2852: 82 12 18                 t0 = u64 [sp + 0x18]
  2855: 82 18 10                 a1 = u64 [sp + 0x10]
  2858: 33 07                    a0 = 0
  2860: 7b 28 08                 u64 [t0 + 0x8] = a1
  2863: 28 b2 00                 jump @201
      :                          @180
  2866: 49 12 08                 u64 [t0 + 8] = 0
  2869: 33 07 01                 a0 = 0x1
  2872: 28 a9 00                 jump @201
      :                          @181
  2875: 33 09 40 00 03           a2 = 0x30040
  2880: 33 07 00 10              a0 = 0x1000
  2884: c8 79 09                 a2 = a2 + a0
  2887: 01                       fallthrough
      :                          @182
  2888: 82 9a                    a3 = u64 [a2]
  2890: c8 5a 08                 a1 = a3 + s0
  2893: ac a8 5e                 jump @194 if a1 <u a3
      :                          @183
  2896: 95 8b 01                 a4 = a1 + 0x1
  2899: 88 bc 01                 a5 = a4 <u 0x1
  2902: d8 b7 0b                 a4 = a0 <u a4
  2905: d4 cb 0b                 a4 = a4 | a5
  2908: 52 0b 4f                 jump @194 if a4 != 0
      :                          @184
  2911: 82 9b                    a4 = u64 [a2]
  2913: ab ab e7                 jump @182 if a4 != a3
      :                          @185
  2916: 7b 98                    u64 [a2] = a1
  2918: 33 0c                    a5 = 0
  2920: 01                       fallthrough
      :                          @186
  2921: ab ab df                 jump @182 if a4 != a3
      :                          @187
  2924: 28 30                    jump @193
      :                          @188
  2926: 33 09 40 00 03           a2 = 0x30040
  2931: 33 07 00 10              a0 = 0x1000
  2935: c8 79 09                 a2 = a2 + a0
  2938: 01                       fallthrough
      :                          @189
  2939: 82 9a                    a3 = u64 [a2]
  2941: c8 5a 08                 a1 = a3 + s0
  2944: ac a8 2b                 jump @194 if a1 <u a3
      :                          @190
  2947: 95 8b 01                 a4 = a1 + 0x1
  2950: 88 bc 01                 a5 = a4 <u 0x1
  2953: d8 b7 0b                 a4 = a0 <u a4
  2956: d4 cb 0b                 a4 = a4 | a5
  2959: 52 0b 1c                 jump @194 if a4 != 0
      :                          @191
  2962: 82 9b                    a4 = u64 [a2]
  2964: ab ab e7                 jump @189 if a4 != a3
      :                          @192
  2967: 7b 98                    u64 [a2] = a1
  2969: 33 0c                    a5 = 0
  2971: 01                       fallthrough
      :                          @193
  2972: 33 07 40 10 03           a0 = 0x31040
  2977: c9 87 08                 a1 = a0 - a1
  2980: 33 07                    a0 = 0
  2982: 7b 28 08                 u64 [t0 + 0x8] = a1
  2985: 28 38                    jump @201
      :                          @194
  2987: 33 07 01                 a0 = 0x1
  2990: 7b 27 08                 u64 [t0 + 0x8] = a0
  2993: 28 30                    jump @201
      :                          @195
  2995: 64 6c                    a5 = s1
  2997: 82 17                    a0 = u64 [sp]
  2999: 95 77 00 10              a0 = a0 + 0x1000
  3003: 82 12 18                 t0 = u64 [sp + 0x18]
  3006: 82 16 08                 s1 = u64 [sp + 0x8]
  3009: 01                       fallthrough
      :                          @196
  3010: 82 78                    a1 = u64 [a0]
  3012: c9 87 09                 a2 = a0 - a1
  3015: ab 69 11                 jump @200 if a2 != s1
      :                          @197
  3018: c9 c8 09                 a2 = a1 - a5
  3021: 01                       fallthrough
      :                          @198
  3022: 82 7a                    a3 = u64 [a0]
  3024: ab 8a f2                 jump @196 if a3 != a1
      :                          @199
  3027: 7b 79                    u64 [a0] = a2
  3029: 33 0b                    a4 = 0
  3031: 01                       fallthrough
      :                          @200
  3032: 82 18 10                 a1 = u64 [sp + 0x10]
  3035: 33 07                    a0 = 0
  3037: 7b 28 08                 u64 [t0 + 0x8] = a1
  3040: 01                       fallthrough
      :                          @201
  3041: 7b 25 10                 u64 [t0 + 0x10] = s0
  3044: 7b 27                    u64 [t0] = a0
  3046: 82 10 30                 ra = u64 [sp + 0x30]
  3049: 82 15 28                 s0 = u64 [sp + 0x28]
  3052: 82 16 20                 s1 = u64 [sp + 0x20]
  3055: 95 11 38                 sp = sp + 0x38
  3058: 32 00                    ret
      :                          @202
  3060: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  3063: 7b 10 40                 u64 [sp + 0x40] = ra
  3066: 7b 15 38                 u64 [sp + 0x38] = s0
  3069: 7b 16 30                 u64 [sp + 0x30] = s1
  3072: 95 88 01                 a1 = a1 + 0x1
  3075: 51 08 53                 jump @210 if a1 == 0
      :                          @203
  3078: 64 75                    s0 = a0
  3080: 82 77                    a0 = u64 [a0]
  3082: 97 79 01                 a2 = a0 << 0x1
  3085: 33 0a 08                 a3 = 0x8
  3088: e4 a8 08                 a1 = maxu(a1, a3)
  3091: e4 89 06                 s1 = maxu(a2, a1)
  3094: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3097: 98 88 3f                 a1 = a1 >> 0x3f
  3100: 51 07 12                 jump @205 if a0 == 0
      :                          @204
  3103: 82 59 08                 a2 = u64 [s0 + 0x8]
  3106: 7b 19 18                 u64 [sp + 0x18] = a2
  3109: 49 11 20 01              u64 [sp + 32] = 0x1
  3113: 7b 17 28                 u64 [sp + 0x28] = a0
  3116: 28 06                    jump @206
      :                          @205
  3118: 49 11 20                 u64 [sp + 32] = 0
  3121: 01                       fallthrough
      :                          @206
  3122: 64 17                    a0 = sp
  3124: 95 1a 18                 a3 = sp + 0x18
  3127: 64 69                    a2 = s1
  3129: 50 10 34 73 fe           ra = 52, jump @170
      :                          @207 [@dyn 26]
  3134: 82 18                    a1 = u64 [sp]
  3136: 82 17 08                 a0 = u64 [sp + 0x8]
  3139: 51 08 14                 jump @211 if a1 == 0
      :                          @208
  3142: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3152: aa 87 0d                 jump @212 if a0 == a1
      :                          @209
  3155: 52 07 18                 jump @213 if a0 != 0
      :                          @210
  3158: 00                       trap
      :                          @211
  3159: 7b 57 08                 u64 [s0 + 0x8] = a0
  3162: 7b 56                    u64 [s0] = s1
  3164: 01                       fallthrough
      :                          @212
  3165: 82 10 40                 ra = u64 [sp + 0x40]
  3168: 82 15 38                 s0 = u64 [sp + 0x38]
  3171: 82 16 30                 s1 = u64 [sp + 0x30]
  3174: 95 11 48                 sp = sp + 0x48
  3177: 32 00                    ret
      :                          @213
  3179: 00                       trap
      :                          @214
  3180: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3183: 7b 10 30                 u64 [sp + 0x30] = ra
  3186: 7b 15 28                 u64 [sp + 0x28] = s0
  3189: 7b 16 20                 u64 [sp + 0x20] = s1
  3192: 64 89                    a2 = a1
  3194: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3197: 64 75                    s0 = a0
  3199: 51 0a 35                 jump @219 if a3 == 0
      :                          @215
  3202: 82 98                    a1 = u64 [a2]
  3204: 33 07                    a0 = 0
  3206: 95 8b 08                 a4 = a1 + 0x8
  3209: 01                       fallthrough
      :                          @216
  3210: 82 bc                    a5 = u64 [a4]
  3212: c8 c7 07                 a0 = a0 + a5
  3215: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3218: 95 bb 10                 a4 = a4 + 0x10
  3221: 52 0a f5                 jump @216 if a3 != 0
      :                          @217
  3224: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3227: 51 0a 24                 jump @221 if a3 == 0
      :                          @218
  3230: 82 88 08                 a1 = u64 [a1 + 0x8]
  3233: 8e 88                    a1 = a1 >u 0
  3235: 88 7a 10                 a3 = a0 <u 0x10
  3238: 85 aa 01                 a3 = a3 ^ 0x1
  3241: d4 a8 08                 a1 = a1 | a3
  3244: 89 7a                    a3 = a0 <s 0
  3246: e0 a8 08                 a1 = a1 & ~a3
  3249: 52 08 0a                 jump @220 if a1 != 0
      :                          @219
  3252: 33 07                    a0 = 0
  3254: 33 08 01                 a1 = 0x1
  3257: 28 49                    jump @229
      :                          @220
  3259: 97 77 01                 a0 = a0 << 0x1
  3262: 01                       fallthrough
      :                          @221
  3263: 51 07 3f                 jump @228 if a0 == 0
      :                          @222
  3266: 57 07 77                 jump @234 if a0 <s 0
      :                          @223
  3269: 64 52                    t0 = s0
  3271: 33 0b 40 00 03           a4 = 0x30040
  3276: 33 08 00 10              a1 = 0x1000
  3280: c8 8b 0b                 a4 = a4 + a1
  3283: 01                       fallthrough
      :                          @224
  3284: 82 bc                    a5 = u64 [a4]
  3286: c8 7c 0a                 a3 = a5 + a0
  3289: ac ca 5e                 jump @232 if a3 <u a5
      :                          @225
  3292: 95 a5 01                 s0 = a3 + 0x1
  3295: 88 56 01                 s1 = s0 <u 0x1
  3298: d8 58 05                 s0 = a1 <u s0
  3301: d4 65 05                 s0 = s0 | s1
  3304: 52 05 4f                 jump @232 if s0 != 0
      :                          @226
  3307: 82 b6                    s1 = u64 [a4]
  3309: ab c6 e7                 jump @224 if s1 != a5
      :                          @227
  3312: 7b ba                    u64 [a4] = a3
  3314: 33 08 40 10 03           a1 = 0x31040
  3319: c9 a8 08                 a1 = a1 - a3
  3322: 64 25                    s0 = t0
  3324: 28 06                    jump @229
      :                          @228
  3326: 33 08 01                 a1 = 0x1
  3329: 01                       fallthrough
      :                          @229
  3330: 7b 17                    u64 [sp] = a0
  3332: 7b 18 08                 u64 [sp + 0x8] = a1
  3335: 49 11 10                 u64 [sp + 16] = 0
  3338: 33 08 18 01 01           a1 = 0x10118
  3343: 64 17                    a0 = sp
  3345: 50 10 36 17 06           ra = 54, jump @346
      :                          @230 [@dyn 27]
  3350: 52 07 22                 jump @233 if a0 != 0
      :                          @231
  3353: 82 17 10                 a0 = u64 [sp + 0x10]
  3356: 82 18 08                 a1 = u64 [sp + 0x8]
  3359: 82 19                    a2 = u64 [sp]
  3361: 7b 57 10                 u64 [s0 + 0x10] = a0
  3364: 7b 58 08                 u64 [s0 + 0x8] = a1
  3367: 7b 59                    u64 [s0] = a2
  3369: 82 10 30                 ra = u64 [sp + 0x30]
  3372: 82 15 28                 s0 = u64 [sp + 0x28]
  3375: 82 16 20                 s1 = u64 [sp + 0x20]
  3378: 95 11 38                 sp = sp + 0x38
  3381: 32 00                    ret
      :                          @232
  3383: 00                       trap
      :                          @233
  3384: 00                       trap
      :                          @234
  3385: 00                       trap
      :                          @235 [@dyn 28]
  3386: 82 72                    t0 = u64 [a0]
  3388: 33 09 00 f0              a2 = 0xfffffffffffff000
  3392: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  3396: ac 9a 27                 jump @241 if a3 <u a2
      :                          @236
  3399: 82 77 08                 a0 = u64 [a0 + 0x8]
  3402: 33 09 40 00 03           a2 = 0x30040
  3407: 95 99 00 10              a2 = a2 + 0x1000
  3411: 01                       fallthrough
      :                          @237
  3412: 82 9a                    a3 = u64 [a2]
  3414: c9 a9 0b                 a4 = a2 - a3
  3417: ab 7b 12                 jump @241 if a4 != a0
      :                          @238
  3420: c9 2a 0b                 a4 = a3 - t0
  3423: 01                       fallthrough
      :                          @239
  3424: 82 9c                    a5 = u64 [a2]
  3426: ab ac f2                 jump @237 if a5 != a3
      :                          @240
  3429: 7b 9b                    u64 [a2] = a4
  3431: 33 08                    a1 = 0
  3433: 32 00                    ret
      :                          @241
  3435: 32 00                    ret
      :                          @242 [@dyn 29]
  3437: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3440: 7b 10 18                 u64 [sp + 0x18] = ra
  3443: 7b 15 10                 u64 [sp + 0x10] = s0
  3446: 7b 16 08                 u64 [sp + 0x8] = s1
  3449: 64 75                    s0 = a0
  3451: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3454: 82 77                    a0 = u64 [a0]
  3456: c9 a7 07                 a0 = a0 - a3
  3459: 64 96                    s1 = a2
  3461: ac 97 2a                 jump @245 if a0 <u a2
      :                          @243
  3464: 7b 1a                    u64 [sp] = a3
  3466: 82 57 08                 a0 = u64 [s0 + 0x8]
  3469: c8 a7 07                 a0 = a0 + a3
  3472: 64 69                    a2 = s1
  3474: 50 10 3c 4a 01           ra = 60, jump @264
      :                          @244 [@dyn 30]
  3479: 82 17                    a0 = u64 [sp]
  3481: c8 76 06                 s1 = s1 + a0
  3484: 7b 56 10                 u64 [s0 + 0x10] = s1
  3487: 33 07                    a0 = 0
  3489: 82 10 18                 ra = u64 [sp + 0x18]
  3492: 82 15 10                 s0 = u64 [sp + 0x10]
  3495: 82 16 08                 s1 = u64 [sp + 0x8]
  3498: 95 11 20                 sp = sp + 0x20
  3501: 32 00                    ret
      :                          @245
  3503: 64 57                    a0 = s0
  3505: 7b 18                    u64 [sp] = a1
  3507: 64 a8                    a1 = a3
  3509: 64 69                    a2 = s1
  3511: 50 10 3e 7e fc           ra = 62, jump @158
      :                          @246 [@dyn 31]
  3516: 82 18                    a1 = u64 [sp]
  3518: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3521: 28 c7                    jump @243
      :                          @247 [@dyn 32]
  3523: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3526: 7b 10 20                 u64 [sp + 0x20] = ra
  3529: 7b 15 18                 u64 [sp + 0x18] = s0
  3532: 7b 16 10                 u64 [sp + 0x10] = s1
  3535: 64 86                    s1 = a1
  3537: 83 88                    i32 a1 = a1 + 0
  3539: 33 09 80 00              a2 = 0x80
  3543: 64 7a                    a3 = a0
  3545: ae 98 2b                 jump @252 if a1 >=u a2
      :                          @248
  3548: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3551: 82 a7                    a0 = u64 [a3]
  3553: ab 78 12                 jump @251 if a1 != a0
      :                          @249
  3556: 64 a7                    a0 = a3
  3558: 64 a5                    s0 = a3
  3560: 50 10 42 0c fe           ra = 66, jump @202
      :                          @250 [@dyn 33]
  3565: 64 5a                    a3 = s0
  3567: 82 58 10                 a1 = u64 [s0 + 0x10]
  3570: 01                       fallthrough
      :                          @251
  3571: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3574: c8 87 07                 a0 = a0 + a1
  3577: 78 76                    u8 [a0] = s1
  3579: 95 88 01                 a1 = a1 + 0x1
  3582: 7b a8 10                 u64 [a3 + 0x10] = a1
  3585: 28 ab 00                 jump @260
      :                          @252
  3588: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3591: 48 11 0c                 u32 [sp + 12] = 0
  3594: 52 07 1c                 jump @254 if a0 != 0
      :                          @253
  3597: 98 67 06                 a0 = s1 >> 0x6
  3600: 86 77 c0 00              a0 = a0 | 0xc0
  3604: 78 17 0c                 u8 [sp + 0xc] = a0
  3607: 84 67 3f                 a0 = s1 & 0x3f
  3610: 86 77 80 00              a0 = a0 | 0x80
  3614: 78 17 0d                 u8 [sp + 0xd] = a0
  3617: 33 06 02                 s1 = 0x2
  3620: 28 63                    jump @257
      :                          @254
  3622: 8b 67 10                 i32 a0 = s1 >> 0x10
  3625: 52 07 29                 jump @256 if a0 != 0
      :                          @255
  3628: 98 67 0c                 a0 = s1 >> 0xc
  3631: 86 77 e0 00              a0 = a0 | 0xe0
  3635: 78 17 0c                 u8 [sp + 0xc] = a0
  3638: 97 67 34                 a0 = s1 << 0x34
  3641: 98 77 3a                 a0 = a0 >> 0x3a
  3644: 95 77 80 00              a0 = a0 + 0x80
  3648: 78 17 0d                 u8 [sp + 0xd] = a0
  3651: 84 67 3f                 a0 = s1 & 0x3f
  3654: 86 77 80 00              a0 = a0 | 0x80
  3658: 78 17 0e                 u8 [sp + 0xe] = a0
  3661: 33 06 03                 s1 = 0x3
  3664: 28 37                    jump @257
      :                          @256
  3666: 97 67 2b                 a0 = s1 << 0x2b
  3669: 98 77 3d                 a0 = a0 >> 0x3d
  3672: 95 77 f0 00              a0 = a0 + 0xf0
  3676: 78 17 0c                 u8 [sp + 0xc] = a0
  3679: 97 67 2e                 a0 = s1 << 0x2e
  3682: 98 77 3a                 a0 = a0 >> 0x3a
  3685: 95 77 80 00              a0 = a0 + 0x80
  3689: 78 17 0d                 u8 [sp + 0xd] = a0
  3692: 97 67 34                 a0 = s1 << 0x34
  3695: 98 77 3a                 a0 = a0 >> 0x3a
  3698: 95 77 80 00              a0 = a0 + 0x80
  3702: 78 17 0e                 u8 [sp + 0xe] = a0
  3705: 84 67 3f                 a0 = s1 & 0x3f
  3708: 86 77 80 00              a0 = a0 | 0x80
  3712: 78 17 0f                 u8 [sp + 0xf] = a0
  3715: 33 06 04                 s1 = 0x4
  3718: 01                       fallthrough
      :                          @257
  3719: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3722: 82 a7                    a0 = u64 [a3]
  3724: c9 57 07                 a0 = a0 - s0
  3727: ac 67 2d                 jump @261 if a0 <u s1
      :                          @258
  3730: 7b 1a                    u64 [sp] = a3
  3732: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3735: c8 57 07                 a0 = a0 + s0
  3738: 95 18 0c                 a1 = sp + 0xc
  3741: 64 69                    a2 = s1
  3743: 50 10 44 3d              ra = 68, jump @264
      :                          @259 [@dyn 34]
  3747: c8 56 06                 s1 = s1 + s0
  3750: 82 17                    a0 = u64 [sp]
  3752: 7b 76 10                 u64 [a0 + 0x10] = s1
  3755: 01                       fallthrough
      :                          @260
  3756: 33 07                    a0 = 0
  3758: 82 10 20                 ra = u64 [sp + 0x20]
  3761: 82 15 18                 s0 = u64 [sp + 0x18]
  3764: 82 16 10                 s1 = u64 [sp + 0x10]
  3767: 95 11 28                 sp = sp + 0x28
  3770: 32 00                    ret
      :                          @261
  3772: 64 a7                    a0 = a3
  3774: 64 58                    a1 = s0
  3776: 64 69                    a2 = s1
  3778: 64 a5                    s0 = a3
  3780: 50 10 46 71 fb           ra = 70, jump @158
      :                          @262 [@dyn 35]
  3785: 64 5a                    a3 = s0
  3787: 82 55 10                 s0 = u64 [s0 + 0x10]
  3790: 28 c4                    jump @258
      :                          @263 [@dyn 36]
  3792: 64 8a                    a3 = a1
  3794: 33 08 18 01 01           a1 = 0x10118
  3799: 64 a9                    a2 = a3
  3801: 28 4f 04                 jump @346
      :                          @264
  3804: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3807: 7b 10 18                 u64 [sp + 0x18] = ra
  3810: 7b 15 10                 u64 [sp + 0x10] = s0
  3813: 7b 16 08                 u64 [sp + 0x8] = s1
  3816: 53 19 10 64              jump @273 if a2 <u 16
      :                          @265
  3820: 8d 7a                    i32 a3 = -a0
  3822: 84 a2 07                 t0 = a3 & 0x7
  3825: c8 27 0b                 a4 = a0 + t0
  3828: 51 02 15                 jump @268 if t0 == 0
      :                          @266
  3831: 64 8c                    a5 = a1
  3833: 64 75                    s0 = a0
  3835: 01                       fallthrough
      :                          @267
  3836: 7c ca                    a3 = u8 [a5]
  3838: 78 5a                    u8 [s0] = a3
  3840: 95 55 01                 s0 = s0 + 0x1
  3843: 95 cc 01                 a5 = a5 + 0x1
  3846: ac b5 f6                 jump @267 if s0 <u a4
      :                          @268
  3849: c8 28 03                 t1 = a1 + t0
  3852: c9 29 02                 t0 = a2 - t0
  3855: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3858: 84 38 07                 a1 = t1 & 0x7
  3861: c8 4b 0a                 a3 = a4 + t2
  3864: 51 08 3b                 jump @275 if a1 == 0
      :                          @269
  3867: 58 04 4b                 jump @278 if t2 <=s 0
      :                          @270
  3870: 97 38 03                 a1 = t1 << 0x3
  3873: 84 80 38                 ra = a1 & 0x38
  3876: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3879: 82 c5                    s0 = u64 [a5]
  3881: 8d 88                    i32 a1 = -a1
  3883: 84 88 38                 a1 = a1 & 0x38
  3886: 95 cc 08                 a5 = a5 + 0x8
  3889: 01                       fallthrough
      :                          @271
  3890: 82 c6                    s1 = u64 [a5]
  3892: d0 05 05                 s0 = s0 >> ra
  3895: cf 86 09                 a2 = s1 << a1
  3898: d4 59 09                 a2 = a2 | s0
  3901: 7b b9                    u64 [a4] = a2
  3903: 95 bb 08                 a4 = a4 + 0x8
  3906: 95 cc 08                 a5 = a5 + 0x8
  3909: 64 65                    s0 = s1
  3911: ac ab eb                 jump @271 if a4 <u a3
      :                          @272
  3914: 28 1c                    jump @278
      :                          @273
  3916: 64 7a                    a3 = a0
  3918: 52 09 21                 jump @279 if a2 != 0
      :                          @274
  3921: 28 2f                    jump @281
      :                          @275
  3923: 58 04 13                 jump @278 if t2 <=s 0
      :                          @276
  3926: 64 38                    a1 = t1
  3928: 01                       fallthrough
      :                          @277
  3929: 82 89                    a2 = u64 [a1]
  3931: 7b b9                    u64 [a4] = a2
  3933: 95 bb 08                 a4 = a4 + 0x8
  3936: 95 88 08                 a1 = a1 + 0x8
  3939: ac ab f6                 jump @277 if a4 <u a3
      :                          @278
  3942: c8 43 08                 a1 = t1 + t2
  3945: 84 29 07                 a2 = t0 & 0x7
  3948: 51 09 14                 jump @281 if a2 == 0
      :                          @279
  3951: c8 a9 09                 a2 = a2 + a3
  3954: 01                       fallthrough
      :                          @280
  3955: 7c 8b                    a4 = u8 [a1]
  3957: 78 ab                    u8 [a3] = a4
  3959: 95 aa 01                 a3 = a3 + 0x1
  3962: 95 88 01                 a1 = a1 + 0x1
  3965: ac 9a f6                 jump @280 if a3 <u a2
      :                          @281
  3968: 82 10 18                 ra = u64 [sp + 0x18]
  3971: 82 15 10                 s0 = u64 [sp + 0x10]
  3974: 82 16 08                 s1 = u64 [sp + 0x8]
  3977: 95 11 20                 sp = sp + 0x20
  3980: 32 00                    ret
      :                          @282 [@dyn 37]
  3982: 82 77                    a0 = u64 [a0]
  3984: 01                       fallthrough
      :                          @283
  3985: 28                       jump @283
      :                          @284
  3986: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3989: 7b 10 50                 u64 [sp + 0x50] = ra
  3992: 7b 15 48                 u64 [sp + 0x48] = s0
  3995: 7b 16 40                 u64 [sp + 0x40] = s1
  3998: 7b 18                    u64 [sp] = a1
  4000: 98 79 04                 a2 = a0 >> 0x4
  4003: 33 08 27                 a1 = 0x27
  4006: 53 29 71 02 81 00        jump @287 if a2 <u 625
      :                          @285
  4012: 33 08 27                 a1 = 0x27
  4015: 95 1a 3e                 a3 = sp + 0x3e
  4018: 3a 09 00 00 03           a2 = u64 [0x30000]
  4023: 7b 19 10                 u64 [sp + 0x10] = a2
  4026: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  4032: 33 04 7b 14              t2 = 0x147b
  4036: 33 0b 8c 01 01           a4 = 0x1018c
  4041: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  4047: 01                       fallthrough
      :                          @286
  4048: 64 72                    t0 = a0
  4050: 82 17 10                 a0 = u64 [sp + 0x10]
  4053: d6 72 07                 a0 = t0 mulhu a0
  4056: 98 77 0b                 a0 = a0 >> 0xb
  4059: 82 19 08                 a2 = u64 [sp + 0x8]
  4062: c0 97 0c                 i32 a5 = a0 * a2
  4065: c8 2c 06                 s1 = a5 + t0
  4068: 97 6c 30                 a5 = s1 << 0x30
  4071: 98 cc 32                 a5 = a5 >> 0x32
  4074: ca 4c 0c                 a5 = a5 * t2
  4077: 98 c3 11                 t1 = a5 >> 0x11
  4080: 98 cc 10                 a5 = a5 >> 0x10
  4083: 84 cc fe 07              a5 = a5 & 0x7fe
  4087: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4090: c8 69 09                 a2 = a2 + s1
  4093: 97 99 31                 a2 = a2 << 0x31
  4096: 98 99 30                 a2 = a2 >> 0x30
  4099: c8 bc 0c                 a5 = a5 + a4
  4102: 7c c6                    s1 = u8 [a5]
  4104: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4107: c8 b9 09                 a2 = a2 + a4
  4110: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4113: 7c 99                    a2 = u8 [a2]
  4115: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4118: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4121: 78 a5 01                 u8 [a3 + 0x1] = s0
  4124: 78 a9                    u8 [a3] = a2
  4126: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4129: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4132: ac 20 ac                 jump @286 if ra <u t0
      :                          @287
  4135: 54 17 63 3b              jump @289 if a0 <=u 99
      :                          @288
  4139: 97 79 30                 a2 = a0 << 0x30
  4142: 98 99 32                 a2 = a2 >> 0x32
  4145: 96 99 7b 14              a2 = a2 * 0x147b
  4149: 98 99 11                 a2 = a2 >> 0x11
  4152: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4155: c8 a7 07                 a0 = a0 + a3
  4158: 97 77 31                 a0 = a0 << 0x31
  4161: 98 77 30                 a0 = a0 >> 0x30
  4164: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4167: 33 0a 8c 01 01           a3 = 0x1018c
  4172: c8 a7 07                 a0 = a0 + a3
  4175: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4178: 7c 77                    a0 = u8 [a0]
  4180: 95 1b 19                 a4 = sp + 0x19
  4183: c8 8b 0b                 a4 = a4 + a1
  4186: 78 ba 01                 u8 [a4 + 0x1] = a3
  4189: 78 b7                    u8 [a4] = a0
  4191: 64 97                    a0 = a2
  4193: 01                       fallthrough
      :                          @289
  4194: 55 17 0a 14              jump @291 if a0 >=u 10
      :                          @290
  4198: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4201: 95 19 19                 a2 = sp + 0x19
  4204: c8 89 09                 a2 = a2 + a1
  4207: 83 77 30                 i32 a0 = a0 + 0x30
  4210: 78 97                    u8 [a2] = a0
  4212: 28 21                    jump @292
      :                          @291
  4214: 97 77 01                 a0 = a0 << 0x1
  4217: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4220: 33 09 8c 01 01           a2 = 0x1018c
  4225: c8 97 07                 a0 = a0 + a2
  4228: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4231: 7c 77                    a0 = u8 [a0]
  4233: 95 1a 19                 a3 = sp + 0x19
  4236: c8 8a 0a                 a3 = a3 + a1
  4239: 78 a9 01                 u8 [a3 + 0x1] = a2
  4242: 78 a7                    u8 [a3] = a0
  4244: 01                       fallthrough
      :                          @292
  4245: 95 1a 19                 a3 = sp + 0x19
  4248: c8 8a 0a                 a3 = a3 + a1
  4251: 9a 8b 27                 a4 = 0x27 - a1
  4254: 33 08 48 01 01           a1 = 0x10148
  4259: 82 17                    a0 = u64 [sp]
  4261: 33 09                    a2 = 0
  4263: 50 10 4c 12              ra = 76, jump @294
      :                          @293 [@dyn 38]
  4267: 82 10 50                 ra = u64 [sp + 0x50]
  4270: 82 15 48                 s0 = u64 [sp + 0x48]
  4273: 82 16 40                 s1 = u64 [sp + 0x40]
  4276: 95 11 58                 sp = sp + 0x58
  4279: 32 00                    ret
      :                          @294
  4281: 95 11 98                 sp = sp + 0xffffffffffffff98
  4284: 7b 10 60                 u64 [sp + 0x60] = ra
  4287: 7b 15 58                 u64 [sp + 0x58] = s0
  4290: 7b 16 50                 u64 [sp + 0x50] = s1
  4293: 80 73 34                 t1 = u32 [a0 + 0x34]
  4296: 7b 1a 20                 u64 [sp + 0x20] = a3
  4299: 64 9c                    a5 = a2
  4301: 84 36 01                 s1 = t1 & 0x1
  4304: 33 02 2b                 t0 = 0x2b
  4307: 33 09 00 00 11           a2 = 0x110000
  4312: 84 3a 04                 a3 = t1 & 0x4
  4315: 7b 1b 28                 u64 [sp + 0x28] = a4
  4318: c8 b6 04                 t2 = s1 + a4
  4321: 7b 1c 30                 u64 [sp + 0x30] = a5
  4324: 52 0a 10                 jump @297 if a3 != 0
      :                          @295
  4327: 49 11 38                 u64 [sp + 56] = 0
  4330: 82 78                    a1 = u64 [a0]
  4332: 94 69 2b                 a2 = 0x2b if s1 != 0
  4335: 52 08 35                 jump @301 if a1 != 0
      :                          @296
  4338: 28 56                    jump @306
      :                          @297
  4340: 7b 18 38                 u64 [sp + 0x38] = a1
  4343: 33 09                    a2 = 0
  4345: 51 0c 1b                 jump @300 if a5 == 0
      :                          @298
  4348: 82 1b 38                 a4 = u64 [sp + 0x38]
  4351: 01                       fallthrough
      :                          @299
  4352: 7d b5                    s0 = i8 [a4]
  4354: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4357: 85 5a 01                 a3 = s0 ^ 0x1
  4360: c8 a9 09                 a2 = a2 + a3
  4363: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4366: 95 bb 01                 a4 = a4 + 0x1
  4369: 52 0c ef                 jump @299 if a5 != 0
      :                          @300
  4372: c8 94 04                 t2 = t2 + a2
  4375: 33 09 00 00 11           a2 = 0x110000
  4380: 82 78                    a1 = u64 [a0]
  4382: db 62 09                 a2 = t0 if s1 != 0
  4385: 51 08 27                 jump @306 if a1 == 0
      :                          @301
  4388: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4391: ae a4 21                 jump @306 if t2 >=u a3
      :                          @302
  4394: 84 38 08                 a1 = t1 & 0x8
  4397: 52 08 50                 jump @309 if a1 != 0
      :                          @303
  4400: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4403: c9 4a 0a                 a3 = a3 - t2
  4406: 7b 19 18                 u64 [sp + 0x18] = a2
  4409: 5a 16 01 9d 00           jump @316 if s1 >s 1
      :                          @304
  4414: 52 06 aa 00              jump @318 if s1 != 0
      :                          @305
  4418: 7b 1a 10                 u64 [sp + 0x10] = a3
  4421: 28 a9 00                 jump @319
      :                          @306
  4424: 82 75 20                 s0 = u64 [a0 + 0x20]
  4427: 82 76 28                 s1 = u64 [a0 + 0x28]
  4430: 64 57                    a0 = s0
  4432: 64 68                    a1 = s1
  4434: 82 1a 38                 a3 = u64 [sp + 0x38]
  4437: 82 1b 30                 a4 = u64 [sp + 0x30]
  4440: 50 10 4e 6c 01           ra = 78, jump @339
      :                          @307 [@dyn 39]
  4445: 33 08 01                 a1 = 0x1
  4448: 52 07 bb 00              jump @324 if a0 != 0
      :                          @308
  4452: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4455: 64 57                    a0 = s0
  4457: 82 18 20                 a1 = u64 [sp + 0x20]
  4460: 82 19 28                 a2 = u64 [sp + 0x28]
  4463: 82 10 60                 ra = u64 [sp + 0x60]
  4466: 82 15 58                 s0 = u64 [sp + 0x58]
  4469: 82 16 50                 s1 = u64 [sp + 0x50]
  4472: 95 11 68                 sp = sp + 0x68
  4475: 32 0c                    jump [a5]
      :                          @309
  4477: 7b 1a 40                 u64 [sp + 0x40] = a3
  4480: 64 45                    s0 = t2
  4482: 81 78 30                 a1 = i32 [a0 + 0x30]
  4485: 7b 18 10                 u64 [sp + 0x10] = a1
  4488: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4491: 7b 1a 08                 u64 [sp + 0x8] = a3
  4494: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4497: 82 78 28                 a1 = u64 [a0 + 0x28]
  4500: 48 17 30 30              u32 [a0 + 48] = 0x30
  4504: 7b 17                    u64 [sp] = a0
  4506: 46 17 38 01              u8 [a0 + 56] = 0x1
  4510: 7b 1a 48                 u64 [sp + 0x48] = a3
  4513: 64 a7                    a0 = a3
  4515: 64 86                    s1 = a1
  4517: 82 1a 38                 a3 = u64 [sp + 0x38]
  4520: 82 1b 30                 a4 = u64 [sp + 0x30]
  4523: 50 10 50 19 01           ra = 80, jump @339
      :                          @310 [@dyn 40]
  4528: 52 07 67                 jump @323 if a0 != 0
      :                          @311
  4531: 82 17 40                 a0 = u64 [sp + 0x40]
  4534: c9 57 05                 s0 = a0 - s0
  4537: 95 55 01                 s0 = s0 + 0x1
  4540: 01                       fallthrough
      :                          @312
  4541: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4544: 51 05 c6 00              jump @334 if s0 == 0
      :                          @313
  4548: 82 69 20                 a2 = u64 [s1 + 0x20]
  4551: 33 08 30                 a1 = 0x30
  4554: 82 17 48                 a0 = u64 [sp + 0x48]
  4557: b4 90 01 52              ra = 82, jump [a2]
      :                          @314 [@dyn 41]
  4561: 51 07 ec                 jump @312 if a0 == 0
      :                          @315
  4564: 28 43                    jump @323
      :                          @316
  4566: 52 16 02 12              jump @318 if s1 != 2
      :                          @317
  4570: 98 a6 01                 s1 = a3 >> 0x1
  4573: 95 a8 01                 a1 = a3 + 0x1
  4576: 98 88 01                 a1 = a1 >> 0x1
  4579: 7b 18 10                 u64 [sp + 0x10] = a1
  4582: 28 08                    jump @319
      :                          @318
  4584: 64 a6                    s1 = a3
  4586: 49 11 10                 u64 [sp + 16] = 0
  4589: 01                       fallthrough
      :                          @319
  4590: 82 78 20                 a1 = u64 [a0 + 0x20]
  4593: 7b 18 48                 u64 [sp + 0x48] = a1
  4596: 82 75 28                 s0 = u64 [a0 + 0x28]
  4599: 81 77 30                 a0 = i32 [a0 + 0x30]
  4602: 7b 17 40                 u64 [sp + 0x40] = a0
  4605: 95 66 01                 s1 = s1 + 0x1
  4608: 01                       fallthrough
      :                          @320
  4609: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4612: 51 06 27                 jump @325 if s1 == 0
      :                          @321
  4615: 82 59 20                 a2 = u64 [s0 + 0x20]
  4618: 82 17 48                 a0 = u64 [sp + 0x48]
  4621: 82 18 40                 a1 = u64 [sp + 0x40]
  4624: b4 90 01 54              ra = 84, jump [a2]
      :                          @322 [@dyn 42]
  4628: 51 07 ed                 jump @320 if a0 == 0
      :                          @323
  4631: 33 08 01                 a1 = 0x1
  4634: 01                       fallthrough
      :                          @324
  4635: 64 87                    a0 = a1
  4637: 82 10 60                 ra = u64 [sp + 0x60]
  4640: 82 15 58                 s0 = u64 [sp + 0x58]
  4643: 82 16 50                 s1 = u64 [sp + 0x50]
  4646: 95 11 68                 sp = sp + 0x68
  4649: 32 00                    ret
      :                          @325
  4651: 82 16 48                 s1 = u64 [sp + 0x48]
  4654: 64 67                    a0 = s1
  4656: 64 58                    a1 = s0
  4658: 82 19 18                 a2 = u64 [sp + 0x18]
  4661: 82 1a 38                 a3 = u64 [sp + 0x38]
  4664: 82 1b 30                 a4 = u64 [sp + 0x30]
  4667: 50 10 56 89 00           ra = 86, jump @339
      :                          @326 [@dyn 43]
  4672: 33 08 01                 a1 = 0x1
  4675: 52 07 d8                 jump @324 if a0 != 0
      :                          @327
  4678: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4681: 64 67                    a0 = s1
  4683: 82 18 20                 a1 = u64 [sp + 0x20]
  4686: 82 19 28                 a2 = u64 [sp + 0x28]
  4689: b4 a0 01 58              ra = 88, jump [a3]
      :                          @328 [@dyn 44]
  4693: 33 08 01                 a1 = 0x1
  4696: 52 07 c3                 jump @324 if a0 != 0
      :                          @329
  4699: 82 17 10                 a0 = u64 [sp + 0x10]
  4702: 9a 77                    a0 = -a0
  4704: 7b 17 38                 u64 [sp + 0x38] = a0
  4707: 33 06 ff                 s1 = 0xffffffffffffffff
  4710: 01                       fallthrough
      :                          @330
  4711: 82 17 38                 a0 = u64 [sp + 0x38]
  4714: c8 67 07                 a0 = a0 + s1
  4717: 51 17 ff 42              jump @337 if a0 == 4294967295
      :                          @331
  4721: 82 59 20                 a2 = u64 [s0 + 0x20]
  4724: 82 17 48                 a0 = u64 [sp + 0x48]
  4727: 82 18 40                 a1 = u64 [sp + 0x40]
  4730: b4 90 01 5a              ra = 90, jump [a2]
      :                          @332 [@dyn 45]
  4734: 95 66 01                 s1 = s1 + 0x1
  4737: 51 07 e6                 jump @330 if a0 == 0
      :                          @333
  4740: 28 37                    jump @338
      :                          @334
  4742: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4745: 82 17 48                 a0 = u64 [sp + 0x48]
  4748: 82 18 20                 a1 = u64 [sp + 0x20]
  4751: 82 19 28                 a2 = u64 [sp + 0x28]
  4754: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @335 [@dyn 46]
  4758: 33 08 01                 a1 = 0x1
  4761: 52 07 82                 jump @324 if a0 != 0
      :                          @336
  4764: 33 08                    a1 = 0
  4766: 82 16                    s1 = u64 [sp]
  4768: 82 17 10                 a0 = u64 [sp + 0x10]
  4771: 7a 67 30                 u32 [s1 + 0x30] = a0
  4774: 82 17 08                 a0 = u64 [sp + 0x8]
  4777: 78 67 38                 u8 [s1 + 0x38] = a0
  4780: 28 6f ff                 jump @324
      :                          @337
  4783: 82 16 10                 s1 = u64 [sp + 0x10]
  4786: 82 17 10                 a0 = u64 [sp + 0x10]
  4789: d8 76 08                 a1 = s1 <u a0
  4792: 28 63 ff                 jump @324
      :                          @338
  4795: 82 17 10                 a0 = u64 [sp + 0x10]
  4798: d8 76 08                 a1 = s1 <u a0
  4801: 28 5a ff                 jump @324
      :                          @339
  4804: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4807: 7b 10 20                 u64 [sp + 0x20] = ra
  4810: 7b 15 18                 u64 [sp + 0x18] = s0
  4813: 7b 16 10                 u64 [sp + 0x10] = s1
  4816: 83 9c                    i32 a5 = a2 + 0
  4818: 33 02 00 00 11           t0 = 0x110000
  4823: 64 a6                    s1 = a3
  4825: 64 85                    s0 = a1
  4827: 64 7a                    a3 = a0
  4829: aa 2c 20                 jump @342 if a5 == t0
      :                          @340
  4832: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4835: 64 a7                    a0 = a3
  4837: 64 98                    a1 = a2
  4839: 7b 1b 08                 u64 [sp + 0x8] = a4
  4842: 7b 1a                    u64 [sp] = a3
  4844: b4 c0 01 5e              ra = 94, jump [a5]
      :                          @341 [@dyn 47]
  4848: 82 1a                    a3 = u64 [sp]
  4850: 82 1b 08                 a4 = u64 [sp + 0x8]
  4853: 64 78                    a1 = a0
  4855: 33 07 01                 a0 = 0x1
  4858: 52 08 20                 jump @345 if a1 != 0
      :                          @342
  4861: 51 06 1a                 jump @344 if s1 == 0
      :                          @343
  4864: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4867: 64 a7                    a0 = a3
  4869: 64 68                    a1 = s1
  4871: 64 b9                    a2 = a4
  4873: 82 10 20                 ra = u64 [sp + 0x20]
  4876: 82 15 18                 s0 = u64 [sp + 0x18]
  4879: 82 16 10                 s1 = u64 [sp + 0x10]
  4882: 95 11 28                 sp = sp + 0x28
  4885: 32 0c                    jump [a5]
      :                          @344
  4887: 33 07                    a0 = 0
  4889: 01                       fallthrough
      :                          @345
  4890: 82 10 20                 ra = u64 [sp + 0x20]
  4893: 82 15 18                 s0 = u64 [sp + 0x18]
  4896: 82 16 10                 s1 = u64 [sp + 0x10]
  4899: 95 11 28                 sp = sp + 0x28
  4902: 32 00                    ret
      :                          @346
  4904: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4908: 7b 10 80 00              u64 [sp + 0x80] = ra
  4912: 7b 15 78                 u64 [sp + 0x78] = s0
  4915: 7b 16 70                 u64 [sp + 0x70] = s1
  4918: 49 11 60 20              u64 [sp + 96] = 0x20
  4922: 33 0a 03                 a3 = 0x3
  4925: 78 1a 68                 u8 [sp + 0x68] = a3
  4928: 82 96 20                 s1 = u64 [a2 + 0x20]
  4931: 49 11 30                 u64 [sp + 48] = 0
  4934: 49 11 40                 u64 [sp + 64] = 0
  4937: 7b 17 50                 u64 [sp + 0x50] = a0
  4940: 7b 18 58                 u64 [sp + 0x58] = a1
  4943: 51 06 07 01              jump @368 if s1 == 0
      :                          @347
  4947: 82 97 28                 a0 = u64 [a2 + 0x28]
  4950: 51 07 74 01              jump @378 if a0 == 0
      :                          @348
  4954: 49 11 28                 u64 [sp + 40] = 0
  4957: 82 95                    s0 = u64 [a2]
  4959: 7b 19 08                 u64 [sp + 0x8] = a2
  4962: 82 98 10                 a1 = u64 [a2 + 0x10]
  4965: 7b 18 18                 u64 [sp + 0x18] = a1
  4968: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4971: 97 88 03                 a1 = a1 << 0x3
  4974: 98 88 03                 a1 = a1 >> 0x3
  4977: 95 88 01                 a1 = a1 + 0x1
  4980: 7b 18                    u64 [sp] = a1
  4982: 95 55 08                 s0 = s0 + 0x8
  4985: 96 78 38                 a1 = a0 * 0x38
  4988: 95 66 18                 s1 = s1 + 0x18
  4991: 33 07 4a                 a0 = 0x4a
  4994: 7b 17 10                 u64 [sp + 0x10] = a0
  4997: 01                       fallthrough
      :                          @349
  4998: 7b 18 20                 u64 [sp + 0x20] = a1
  5001: 82 59                    a2 = u64 [s0]
  5003: 51 09 17                 jump @352 if a2 == 0
      :                          @350
  5006: 82 1a 58                 a3 = u64 [sp + 0x58]
  5009: 82 17 50                 a0 = u64 [sp + 0x50]
  5012: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  5015: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5018: b4 a0 01 60              ra = 96, jump [a3]
      :                          @351 [@dyn 48]
  5022: 52 07 51 01              jump @381 if a0 != 0
      :                          @352
  5026: 81 67 10                 a0 = i32 [s1 + 0x10]
  5029: 7a 17 60                 u32 [sp + 0x60] = a0
  5032: 7c 67 18                 a0 = u8 [s1 + 0x18]
  5035: 78 17 68                 u8 [sp + 0x68] = a0
  5038: 81 67 14                 a0 = i32 [s1 + 0x14]
  5041: 7a 17 64                 u32 [sp + 0x64] = a0
  5044: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5047: 82 67                    a0 = u64 [s1]
  5049: 51 08 26                 jump @357 if a1 == 0
      :                          @353
  5052: 52 18 01 16              jump @355 if a1 != 1
      :                          @354
  5056: 97 77 04                 a0 = a0 << 0x4
  5059: 82 18 18                 a1 = u64 [sp + 0x18]
  5062: c8 87 07                 a0 = a0 + a1
  5065: 82 78 08                 a1 = u64 [a0 + 0x8]
  5068: 82 19 10                 a2 = u64 [sp + 0x10]
  5071: aa 98 07                 jump @356 if a1 == a2
      :                          @355
  5074: 33 08                    a1 = 0
  5076: 28 0f                    jump @358
      :                          @356
  5078: 82 77                    a0 = u64 [a0]
  5080: 82 77                    a0 = u64 [a0]
  5082: 33 08 01                 a1 = 0x1
  5085: 28 06                    jump @358
      :                          @357
  5087: 33 08 01                 a1 = 0x1
  5090: 01                       fallthrough
      :                          @358
  5091: 7b 18 30                 u64 [sp + 0x30] = a1
  5094: 7b 17 38                 u64 [sp + 0x38] = a0
  5097: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5100: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5103: 51 08 26                 jump @363 if a1 == 0
      :                          @359
  5106: 52 18 01 16              jump @361 if a1 != 1
      :                          @360
  5110: 97 77 04                 a0 = a0 << 0x4
  5113: 82 18 18                 a1 = u64 [sp + 0x18]
  5116: c8 87 07                 a0 = a0 + a1
  5119: 82 78 08                 a1 = u64 [a0 + 0x8]
  5122: 82 19 10                 a2 = u64 [sp + 0x10]
  5125: aa 98 07                 jump @362 if a1 == a2
      :                          @361
  5128: 33 08                    a1 = 0
  5130: 28 0f                    jump @364
      :                          @362
  5132: 82 77                    a0 = u64 [a0]
  5134: 82 77                    a0 = u64 [a0]
  5136: 33 08 01                 a1 = 0x1
  5139: 28 06                    jump @364
      :                          @363
  5141: 33 08 01                 a1 = 0x1
  5144: 01                       fallthrough
      :                          @364
  5145: 7b 18 40                 u64 [sp + 0x40] = a1
  5148: 7b 17 48                 u64 [sp + 0x48] = a0
  5151: 82 67 08                 a0 = u64 [s1 + 0x8]
  5154: 97 77 04                 a0 = a0 << 0x4
  5157: 82 18 18                 a1 = u64 [sp + 0x18]
  5160: c8 78 08                 a1 = a1 + a0
  5163: 82 87                    a0 = u64 [a1]
  5165: 82 89 08                 a2 = u64 [a1 + 0x8]
  5168: 95 18 30                 a1 = sp + 0x30
  5171: b4 90 01 62              ra = 98, jump [a2]
      :                          @365 [@dyn 49]
  5175: 52 07 b8 00              jump @381 if a0 != 0
      :                          @366
  5179: 95 55 10                 s0 = s0 + 0x10
  5182: 82 18 20                 a1 = u64 [sp + 0x20]
  5185: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5188: 95 66 38                 s1 = s1 + 0x38
  5191: 82 17 28                 a0 = u64 [sp + 0x28]
  5194: 95 77 01                 a0 = a0 + 0x1
  5197: 7b 17 28                 u64 [sp + 0x28] = a0
  5200: 52 08 36 ff              jump @349 if a1 != 0
      :                          @367
  5204: 28 69                    jump @376
      :                          @368
  5206: 82 97 18                 a0 = u64 [a2 + 0x18]
  5209: 51 07 71                 jump @378 if a0 == 0
      :                          @369
  5212: 82 95 10                 s0 = u64 [a2 + 0x10]
  5215: 33 0a                    a3 = 0
  5217: 97 78 04                 a1 = a0 << 0x4
  5220: c8 58 08                 a1 = a1 + s0
  5223: 7b 18 20                 u64 [sp + 0x20] = a1
  5226: 7b 19 08                 u64 [sp + 0x8] = a2
  5229: 82 96                    s1 = u64 [a2]
  5231: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5234: 97 77 04                 a0 = a0 << 0x4
  5237: 98 77 04                 a0 = a0 >> 0x4
  5240: 95 77 01                 a0 = a0 + 0x1
  5243: 7b 17                    u64 [sp] = a0
  5245: 95 66 08                 s1 = s1 + 0x8
  5248: 01                       fallthrough
      :                          @370
  5249: 7b 1a 28                 u64 [sp + 0x28] = a3
  5252: 82 69                    a2 = u64 [s1]
  5254: 51 09 16                 jump @373 if a2 == 0
      :                          @371
  5257: 82 1a 58                 a3 = u64 [sp + 0x58]
  5260: 82 17 50                 a0 = u64 [sp + 0x50]
  5263: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5266: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5269: b4 a0 01 64              ra = 100, jump [a3]
      :                          @372 [@dyn 50]
  5273: 52 07 56                 jump @381 if a0 != 0
      :                          @373
  5276: 82 57                    a0 = u64 [s0]
  5278: 82 59 08                 a2 = u64 [s0 + 0x8]
  5281: 95 18 30                 a1 = sp + 0x30
  5284: b4 90 01 66              ra = 102, jump [a2]
      :                          @374 [@dyn 51]
  5288: 52 07 47                 jump @381 if a0 != 0
      :                          @375
  5291: 95 66 10                 s1 = s1 + 0x10
  5294: 95 55 10                 s0 = s0 + 0x10
  5297: 82 1a 28                 a3 = u64 [sp + 0x28]
  5300: 95 aa 01                 a3 = a3 + 0x1
  5303: 82 17 20                 a0 = u64 [sp + 0x20]
  5306: ab 75 c7                 jump @370 if s0 != a0
      :                          @376
  5309: 82 19 08                 a2 = u64 [sp + 0x8]
  5312: 82 1a                    a3 = u64 [sp]
  5314: 82 97 08                 a0 = u64 [a2 + 0x8]
  5317: ac 7a 0d                 jump @379 if a3 <u a0
      :                          @377
  5320: 28 2c                    jump @382
      :                          @378
  5322: 33 0a                    a3 = 0
  5324: 82 97 08                 a0 = u64 [a2 + 0x8]
  5327: 54 07 25                 jump @382 if a0 <=u 0
      :                          @379
  5330: 82 97                    a0 = u64 [a2]
  5332: 97 a8 04                 a1 = a3 << 0x4
  5335: c8 87 09                 a2 = a0 + a1
  5338: 82 1a 58                 a3 = u64 [sp + 0x58]
  5341: 82 17 50                 a0 = u64 [sp + 0x50]
  5344: 82 98                    a1 = u64 [a2]
  5346: 82 99 08                 a2 = u64 [a2 + 0x8]
  5349: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5352: b4 a0 01 68              ra = 104, jump [a3]
      :                          @380 [@dyn 52]
  5356: 51 07 08                 jump @382 if a0 == 0
      :                          @381
  5359: 33 07 01                 a0 = 0x1
  5362: 28 05                    jump @383
      :                          @382
  5364: 33 07                    a0 = 0
  5366: 01                       fallthrough
      :                          @383
  5367: 82 10 80 00              ra = u64 [sp + 0x80]
  5371: 82 15 78                 s0 = u64 [sp + 0x78]
  5374: 82 16 70                 s1 = u64 [sp + 0x70]
  5377: 95 11 88 00              sp = sp + 0x88
  5381: 32 00                    ret
      :                          @384 [@dyn 53]
  5383: 32 00                    ret
      :                          @385 [@dyn 54]
  5385: 95 11 80                 sp = sp + 0xffffffffffffff80
  5388: 7b 10 78                 u64 [sp + 0x78] = ra
  5391: 7b 15 70                 u64 [sp + 0x70] = s0
  5394: 7b 16 68                 u64 [sp + 0x68] = s1
  5397: 64 92                    t0 = a2
  5399: 33 00                    ra = 0
  5401: 33 0b                    a4 = 0
  5403: 33 05                    s0 = 0
  5405: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5415: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5421: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5431: 82 79 10                 a2 = u64 [a0 + 0x10]
  5434: 7b 19 48                 u64 [sp + 0x48] = a2
  5437: 82 79                    a2 = u64 [a0]
  5439: 7b 19 38                 u64 [sp + 0x38] = a2
  5442: 82 77 08                 a0 = u64 [a0 + 0x8]
  5445: 7b 17 30                 u64 [sp + 0x30] = a0
  5448: 33 07 80 01 01           a0 = 0x10180
  5453: 7b 17 08                 u64 [sp + 0x8] = a0
  5456: 3a 07 08 00 03           a0 = u64 [0x30008]
  5461: 7b 17 60                 u64 [sp + 0x60] = a0
  5464: 7b 18 58                 u64 [sp + 0x58] = a1
  5467: 95 88 08                 a1 = a1 + 0x8
  5470: 7b 18                    u64 [sp] = a1
  5472: 33 0c 0a                 a5 = 0xa
  5475: 7b 12 20                 u64 [sp + 0x20] = t0
  5478: 7b 13 18                 u64 [sp + 0x18] = t1
  5481: 7b 14 10                 u64 [sp + 0x10] = t2
  5484: 28 3a                    jump @389
      :                          @386
  5486: 64 06                    s1 = ra
  5488: c8 89 07                 a0 = a2 + a1
  5491: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5494: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5497: 88 77 01                 a0 = a0 <u 0x1
  5500: 01                       fallthrough
      :                          @387
  5501: 82 1a 48                 a3 = u64 [sp + 0x48]
  5504: 78 a7                    u8 [a3] = a0
  5506: 82 17 30                 a0 = u64 [sp + 0x30]
  5509: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5512: 82 17 38                 a0 = u64 [sp + 0x38]
  5515: b4 a0 01 6e              ra = 110, jump [a3]
      :                          @388 [@dyn 55]
  5519: 64 5b                    a4 = s0
  5521: 82 12 20                 t0 = u64 [sp + 0x20]
  5524: 82 13 18                 t1 = u64 [sp + 0x18]
  5527: 82 14 10                 t2 = u64 [sp + 0x10]
  5530: 64 60                    ra = s1
  5532: 33 0c 0a                 a5 = 0xa
  5535: 82 15 40                 s0 = u64 [sp + 0x40]
  5538: 52 07 63 01              jump @430 if a0 != 0
      :                          @389
  5542: 84 57 ff 00              a0 = s0 & 0xff
  5546: 52 07 57 01              jump @429 if a0 != 0
      :                          @390
  5550: 7b 1b 50                 u64 [sp + 0x50] = a4
  5553: ae 02 0a                 jump @393 if t0 >=u ra
      :                          @391
  5556: 28 ef 00                 jump @420
      :                          @392
  5559: ac 02 ec 00              jump @420 if t0 <u ra
      :                          @393
  5563: c9 02 08                 a1 = t0 - ra
  5566: 82 16 58                 s1 = u64 [sp + 0x58]
  5569: c8 06 06                 s1 = s1 + ra
  5572: 55 18 10 1d              jump @399 if a1 >=u 16
      :                          @394
  5576: aa 02 d8 00              jump @419 if t0 == ra
      :                          @395
  5580: 33 0a                    a3 = 0
  5582: 01                       fallthrough
      :                          @396
  5583: c8 a6 07                 a0 = s1 + a3
  5586: 7c 77                    a0 = u8 [a0]
  5588: aa c7 a5 00              jump @414 if a0 == a5
      :                          @397
  5592: 95 aa 01                 a3 = a3 + 0x1
  5595: ab a8 f4                 jump @396 if a1 != a3
      :                          @398
  5598: 28 c2 00                 jump @419
      :                          @399
  5601: 95 69 07                 a2 = s1 + 0x7
  5604: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5607: c9 6a 07                 a0 = a3 - s1
  5610: d3 6a 0a                 a3 = a3 ^ s1
  5613: 88 aa 01                 a3 = a3 <u 0x1
  5616: 88 7b 01                 a4 = a0 <u 0x1
  5619: d4 ba 0a                 a3 = a3 | a4
  5622: 51 0a 45                 jump @405 if a3 == 0
      :                          @400
  5625: 33 07                    a0 = 0
  5627: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5630: 82 1b                    a4 = u64 [sp]
  5632: c8 0b 0b                 a4 = a4 + ra
  5635: 28 08                    jump @402
      :                          @401
  5637: 82 1b                    a4 = u64 [sp]
  5639: c8 0b 0b                 a4 = a4 + ra
  5642: 01                       fallthrough
      :                          @402
  5643: c8 76 0c                 a5 = s1 + a0
  5646: 82 cc                    a5 = u64 [a5]
  5648: c8 7b 09                 a2 = a4 + a0
  5651: 82 99                    a2 = u64 [a2]
  5653: d3 4c 05                 s0 = a5 ^ t2
  5656: c8 35 05                 s0 = s0 + t1
  5659: e0 c5 0c                 a5 = s0 & ~a5
  5662: d3 49 05                 s0 = a2 ^ t2
  5665: c8 35 05                 s0 = s0 + t1
  5668: e0 95 09                 a2 = s0 & ~a2
  5671: d4 c9 09                 a2 = a2 | a5
  5674: 82 1c 60                 a5 = u64 [sp + 0x60]
  5677: d2 c9 09                 a2 = a2 & a5
  5680: 52 09 1f                 jump @408 if a2 != 0
      :                          @403
  5683: 95 77 10                 a0 = a0 + 0x10
  5686: ae 7a d5                 jump @402 if a3 >=u a0
      :                          @404
  5689: 28 16                    jump @408
      :                          @405
  5691: c8 a6 0b                 a4 = s1 + a3
  5694: 7c bb                    a4 = u8 [a4]
  5696: aa cb 51                 jump @417 if a4 == a5
      :                          @406
  5699: 95 aa 01                 a3 = a3 + 0x1
  5702: ab a7 f5                 jump @405 if a0 != a3
      :                          @407
  5705: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5708: ae 7a b9                 jump @401 if a3 >=u a0
      :                          @408
  5711: aa 87 9a 00              jump @426 if a0 == a1
      :                          @409
  5715: 33 0a                    a3 = 0
  5717: c8 76 06                 s1 = s1 + a0
  5720: c9 72 08                 a1 = t0 - a0
  5723: c9 08 08                 a1 = a1 - ra
  5726: 33 0c 0a                 a5 = 0xa
  5729: 82 1b 50                 a4 = u64 [sp + 0x50]
  5732: 01                       fallthrough
      :                          @410
  5733: c8 a6 09                 a2 = s1 + a3
  5736: 7c 99                    a2 = u8 [a2]
  5738: aa c9 0b                 jump @413 if a2 == a5
      :                          @411
  5741: 95 aa 01                 a3 = a3 + 0x1
  5744: ab a8 f5                 jump @410 if a1 != a3
      :                          @412
  5747: 28 2d                    jump @419
      :                          @413
  5749: c8 7a 0a                 a3 = a3 + a0
  5752: 01                       fallthrough
      :                          @414
  5753: c8 0a 0a                 a3 = a3 + ra
  5756: 95 a0 01                 ra = a3 + 0x1
  5759: ae 2a 38 ff              jump @392 if a3 >=u t0
      :                          @415
  5763: 82 17 58                 a0 = u64 [sp + 0x58]
  5766: c8 7a 0a                 a3 = a3 + a0
  5769: 7c a7                    a0 = u8 [a3]
  5771: ab c7 2c ff              jump @392 if a0 != a5
      :                          @416
  5775: 28 61                    jump @427
      :                          @417
  5777: 82 1b 50                 a4 = u64 [sp + 0x50]
  5780: c8 0a 0a                 a3 = a3 + ra
  5783: 95 a0 01                 ra = a3 + 0x1
  5786: ac 2a e9                 jump @415 if a3 <u t0
      :                          @418
  5789: 28 1a ff                 jump @392
      :                          @419
  5792: 64 20                    ra = t0
  5794: 01                       fallthrough
      :                          @420
  5795: 49 11 40 01              u64 [sp + 64] = 0x1
  5799: 64 b5                    s0 = a4
  5801: 64 26                    s1 = t0
  5803: aa 2b 56                 jump @429 if a4 == t0
      :                          @421
  5806: 82 17 48                 a0 = u64 [sp + 0x48]
  5809: 7c 77                    a0 = u8 [a0]
  5811: 51 07 22                 jump @424 if a0 == 0
      :                          @422
  5814: 82 17 30                 a0 = u64 [sp + 0x30]
  5817: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5820: 33 09 04                 a2 = 0x4
  5823: 82 17 38                 a0 = u64 [sp + 0x38]
  5826: 82 18 08                 a1 = u64 [sp + 0x8]
  5829: 7b 10 28                 u64 [sp + 0x28] = ra
  5832: b4 a0 01 70              ra = 112, jump [a3]
      :                          @423 [@dyn 56]
  5836: 82 1b 50                 a4 = u64 [sp + 0x50]
  5839: 82 10 28                 ra = u64 [sp + 0x28]
  5842: 52 07 33                 jump @430 if a0 != 0
      :                          @424
  5845: c9 b6 09                 a2 = s1 - a4
  5848: 82 18 58                 a1 = u64 [sp + 0x58]
  5851: c8 b8 08                 a1 = a1 + a4
  5854: ab b6 90 fe              jump @386 if s1 != a4
      :                          @425
  5858: 64 06                    s1 = ra
  5860: 33 07                    a0 = 0
  5862: 28 97 fe                 jump @387
      :                          @426
  5865: 64 20                    ra = t0
  5867: 82 1b 50                 a4 = u64 [sp + 0x50]
  5870: 28 b5                    jump @420
      :                          @427
  5872: 49 11 40                 u64 [sp + 64] = 0
  5875: 64 05                    s0 = ra
  5877: 64 06                    s1 = ra
  5879: 82 17 48                 a0 = u64 [sp + 0x48]
  5882: 7c 77                    a0 = u8 [a0]
  5884: 52 07 ba                 jump @422 if a0 != 0
      :                          @428
  5887: 28 d6                    jump @424
      :                          @429
  5889: 33 07                    a0 = 0
  5891: 28 06                    jump @431
      :                          @430
  5893: 33 07 01                 a0 = 0x1
  5896: 01                       fallthrough
      :                          @431
  5897: 82 10 78                 ra = u64 [sp + 0x78]
  5900: 82 15 70                 s0 = u64 [sp + 0x70]
  5903: 82 16 68                 s1 = u64 [sp + 0x68]
  5906: 95 11 80 00              sp = sp + 0x80
  5910: 32 00                    ret
      :                          @432 [@dyn 57]
  5912: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5915: 7b 10 20                 u64 [sp + 0x20] = ra
  5918: 7b 15 18                 u64 [sp + 0x18] = s0
  5921: 7b 16 10                 u64 [sp + 0x10] = s1
  5924: 82 75 10                 s0 = u64 [a0 + 0x10]
  5927: 7c 59                    a2 = u8 [s0]
  5929: 82 7b                    a4 = u64 [a0]
  5931: 82 76 08                 s1 = u64 [a0 + 0x8]
  5934: 51 09 32                 jump @436 if a2 == 0
      :                          @433
  5937: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5940: 7b 18 08                 u64 [sp + 0x8] = a1
  5943: 33 08 80 01 01           a1 = 0x10180
  5948: 33 09 04                 a2 = 0x4
  5951: 64 b7                    a0 = a4
  5953: 7b 1b                    u64 [sp] = a4
  5955: b4 a0 01 74              ra = 116, jump [a3]
      :                          @434 [@dyn 58]
  5959: 82 18 08                 a1 = u64 [sp + 0x8]
  5962: 82 1b                    a4 = u64 [sp]
  5964: 51 07 14                 jump @436 if a0 == 0
      :                          @435
  5967: 33 07 01                 a0 = 0x1
  5970: 82 10 20                 ra = u64 [sp + 0x20]
  5973: 82 15 18                 s0 = u64 [sp + 0x18]
  5976: 82 16 10                 s1 = u64 [sp + 0x10]
  5979: 95 11 28                 sp = sp + 0x28
  5982: 32 00                    ret
      :                          @436
  5984: 83 87                    i32 a0 = a1 + 0
  5986: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5989: 88 77 01                 a0 = a0 <u 0x1
  5992: 78 57                    u8 [s0] = a0
  5994: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5997: 64 b7                    a0 = a4
  5999: 82 10 20                 ra = u64 [sp + 0x20]
  6002: 82 15 18                 s0 = u64 [sp + 0x18]
  6005: 82 16 10                 s1 = u64 [sp + 0x10]
  6008: 95 11 28                 sp = sp + 0x28
  6011: 32 0c                    jump [a5]
      :                          @437 [@dyn 59]
  6013: 64 8a                    a3 = a1
  6015: 33 08 50 01 01           a1 = 0x10150
  6020: 64 a9                    a2 = a3
  6022: 28 a2 fb                 jump @346
      :                          @438
  6025: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  6029: 7b 10 88 00              u64 [sp + 0x88] = ra
  6033: 7b 15 80 00              u64 [sp + 0x80] = s0
  6037: 7b 16 78                 u64 [sp + 0x78] = s1
  6040: 64 75                    s0 = a0
  6042: 7c 77 08                 a0 = u8 [a0 + 0x8]
  6045: 64 8b                    a4 = a1
  6047: 33 08 01                 a1 = 0x1
  6050: 33 06 01                 s1 = 0x1
  6053: 51 07 1d                 jump @440 if a0 == 0
      :                          @439
  6056: 78 56 08                 u8 [s0 + 0x8] = s1
  6059: 46 15 09 01              u8 [s0 + 9] = 0x1
  6063: 64 57                    a0 = s0
  6065: 82 10 88 00              ra = u64 [sp + 0x88]
  6069: 82 15 80 00              s0 = u64 [sp + 0x80]
  6073: 82 16 78                 s1 = u64 [sp + 0x78]
  6076: 95 11 90 00              sp = sp + 0x90
  6080: 32 00                    ret
      :                          @440
  6082: 64 9a                    a3 = a2
  6084: 82 5c                    a5 = u64 [s0]
  6086: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6089: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6092: 84 79 04                 a2 = a0 & 0x4
  6095: 52 09 43                 jump @446 if a2 != 0
      :                          @441
  6098: 51 08 31                 jump @444 if a1 == 0
      :                          @442
  6101: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6104: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6107: 82 83 18                 t1 = u64 [a1 + 0x18]
  6110: 33 08 84 01 01           a1 = 0x10184
  6115: 33 09 02                 a2 = 0x2
  6118: 64 a6                    s1 = a3
  6120: 7b 1b 10                 u64 [sp + 0x10] = a4
  6123: 7b 1c 08                 u64 [sp + 0x8] = a5
  6126: b4 30 01 78              ra = 120, jump [t1]
      :                          @443 [@dyn 60]
  6130: 82 1c 08                 a5 = u64 [sp + 0x8]
  6133: 82 1b 10                 a4 = u64 [sp + 0x10]
  6136: 64 6a                    a3 = s1
  6138: 33 08 01                 a1 = 0x1
  6141: 33 06 01                 s1 = 0x1
  6144: 52 07 a8                 jump @439 if a0 != 0
      :                          @444
  6147: 64 b7                    a0 = a4
  6149: 64 c8                    a1 = a5
  6151: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @445 [@dyn 61]
  6155: 33 08 01                 a1 = 0x1
  6158: 64 76                    s1 = a0
  6160: 28 98                    jump @439
      :                          @446
  6162: 52 08 36                 jump @450 if a1 != 0
      :                          @447
  6165: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6168: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6171: 82 83 18                 t1 = u64 [a1 + 0x18]
  6174: 33 08 88 01 01           a1 = 0x10188
  6179: 33 09 01                 a2 = 0x1
  6182: 33 06 01                 s1 = 0x1
  6185: 7b 1a                    u64 [sp] = a3
  6187: 7b 1b 10                 u64 [sp + 0x10] = a4
  6190: 7b 1c 08                 u64 [sp + 0x8] = a5
  6193: b4 30 01 7c              ra = 124, jump [t1]
      :                          @448 [@dyn 62]
  6197: 82 1c 08                 a5 = u64 [sp + 0x8]
  6200: 82 1b 10                 a4 = u64 [sp + 0x10]
  6203: 82 1a                    a3 = u64 [sp]
  6205: 33 08 01                 a1 = 0x1
  6208: 52 07 68 ff              jump @439 if a0 != 0
      :                          @449
  6212: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6215: 01                       fallthrough
      :                          @450
  6216: 33 06 01                 s1 = 0x1
  6219: 78 16 37                 u8 [sp + 0x37] = s1
  6222: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6225: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6228: 7b 18 18                 u64 [sp + 0x18] = a1
  6231: 7b 19 20                 u64 [sp + 0x20] = a2
  6234: 95 18 37                 a1 = sp + 0x37
  6237: 7b 18 28                 u64 [sp + 0x28] = a1
  6240: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6243: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6246: 82 c3                    t1 = u64 [a5]
  6248: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6251: 82 c0 10                 ra = u64 [a5 + 0x10]
  6254: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6257: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6260: 7a 18 68                 u32 [sp + 0x68] = a1
  6263: 78 19 70                 u8 [sp + 0x70] = a2
  6266: 7b 13 38                 u64 [sp + 0x38] = t1
  6269: 7b 14 40                 u64 [sp + 0x40] = t2
  6272: 7b 10 48                 u64 [sp + 0x48] = ra
  6275: 7b 12 50                 u64 [sp + 0x50] = t0
  6278: 95 17 18                 a0 = sp + 0x18
  6281: 7b 17 58                 u64 [sp + 0x58] = a0
  6284: 33 07 50 01 01           a0 = 0x10150
  6289: 7b 17 60                 u64 [sp + 0x60] = a0
  6292: 95 18 38                 a1 = sp + 0x38
  6295: 64 b7                    a0 = a4
  6297: b4 a0 01 7e              ra = 126, jump [a3]
      :                          @451 [@dyn 63]
  6301: 52 07 21                 jump @454 if a0 != 0
      :                          @452
  6304: 82 18 60                 a1 = u64 [sp + 0x60]
  6307: 82 17 58                 a0 = u64 [sp + 0x58]
  6310: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6313: 33 08 86 01 01           a1 = 0x10186
  6318: 33 09 02                 a2 = 0x2
  6321: b4 a0 02 80 00           ra = 128, jump [a3]
      :                          @453 [@dyn 64]
  6326: 64 76                    s1 = a0
  6328: 33 08 01                 a1 = 0x1
  6331: 28 ed fe                 jump @439
      :                          @454
  6334: 33 08 01                 a1 = 0x1
  6337: 28 e7 fe                 jump @439
      :                          @455
  6340: 51 08 9b 00              jump @476 if a1 == 0
      :                          @456
  6344: 64 79                    a2 = a0
  6346: 7c 77                    a0 = u8 [a0]
  6348: 51 07 91 00              jump @475 if a0 == 0
      :                          @457
  6352: 51 27 ff 00 90 00        jump @477 if a0 == 255
      :                          @458
  6358: 6c 7a                    a3 = sext.b a0
  6360: 57 0a 09                 jump @460 if a3 <s 0
      :                          @459
  6363: 33 0a                    a3 = 0
  6365: 33 08                    a1 = 0
  6367: 28 73                    jump @474
      :                          @460
  6369: 55 27 c0 00 0d           jump @462 if a0 >=u 192
      :                          @461
  6374: 33 0a 01                 a3 = 0x1
  6377: 33 0b 80                 a4 = 0xffffffffffffff80
  6380: 28 4a                    jump @471
      :                          @462
  6382: 55 27 e0 00 0e           jump @464 if a0 >=u 224
      :                          @463
  6387: 33 0a 02                 a3 = 0x2
  6390: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6394: 28 3c                    jump @471
      :                          @464
  6396: 55 27 f0 00 0e           jump @466 if a0 >=u 240
      :                          @465
  6401: 33 0a 03                 a3 = 0x3
  6404: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6408: 28 2e                    jump @471
      :                          @466
  6410: 55 27 f8 00 0e           jump @468 if a0 >=u 248
      :                          @467
  6415: 33 0a 04                 a3 = 0x4
  6418: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6422: 28 20                    jump @471
      :                          @468
  6424: 55 27 fc 00 0e           jump @470 if a0 >=u 252
      :                          @469
  6429: 33 0a 05                 a3 = 0x5
  6432: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6436: 28 12                    jump @471
      :                          @470
  6438: 88 7a fe 00              a3 = a0 <u 0xfe
  6442: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6446: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6450: 85 aa 07                 a3 = a3 ^ 0x7
  6453: 01                       fallthrough
      :                          @471
  6454: ae 8a 2b                 jump @478 if a3 >=u a1
      :                          @472
  6457: 33 08                    a1 = 0
  6459: c8 b7 07                 a0 = a0 + a4
  6462: 64 ab                    a4 = a3
  6464: 01                       fallthrough
      :                          @473
  6465: c8 b9 0c                 a5 = a2 + a4
  6468: 7c cc                    a5 = u8 [a5]
  6470: 97 88 08                 a1 = a1 << 0x8
  6473: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6476: d4 c8 08                 a1 = a1 | a5
  6479: 52 0b f2                 jump @473 if a4 != 0
      :                          @474
  6482: 8a a9 03                 i32 a2 = a3 << 0x3
  6485: cf 97 07                 a0 = a0 << a2
  6488: c8 87 07                 a0 = a0 + a1
  6491: 32 00                    ret
      :                          @475
  6493: 32 00                    ret
      :                          @476
  6495: 00                       trap
      :                          @477
  6496: 00                       trap
      :                          @478
  6497: 00                       trap
      :                          @479 [@dyn 65]
  6498: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6501: 7b 10 28                 u64 [sp + 0x28] = ra
  6504: 7b 15 20                 u64 [sp + 0x20] = s0
  6507: 7b 16 18                 u64 [sp + 0x18] = s1
  6510: 64 86                    s1 = a1
  6512: 82 88 28                 a1 = u64 [a1 + 0x28]
  6515: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6518: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6521: 64 75                    s0 = a0
  6523: 33 08 48 01 01           a1 = 0x10148
  6528: 33 09 01                 a2 = 0x1
  6531: 64 a7                    a0 = a3
  6533: b4 b0 02 84 00           ra = 132, jump [a4]
      :                          @480 [@dyn 66]
  6538: 7b 16                    u64 [sp] = s1
  6540: 78 17 08                 u8 [sp + 0x8] = a0
  6543: 46 11 09                 u8 [sp + 9] = 0
  6546: 7b 15 10                 u64 [sp + 0x10] = s0
  6549: 33 09 02                 a2 = 0x2
  6552: 64 17                    a0 = sp
  6554: 95 18 10                 a1 = sp + 0x10
  6557: 50 20 86 00 ec fd        ra = 134, jump @438
      :                          @481 [@dyn 67]
  6563: 33 07 01                 a0 = 0x1
  6566: 7c 18 08                 a1 = u8 [sp + 0x8]
  6569: 52 08 1b                 jump @483 if a1 != 0
      :                          @482
  6572: 82 17                    a0 = u64 [sp]
  6574: 82 78 28                 a1 = u64 [a0 + 0x28]
  6577: 82 77 20                 a0 = u64 [a0 + 0x20]
  6580: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6583: 33 08 89 01 01           a1 = 0x10189
  6588: 33 09 01                 a2 = 0x1
  6591: b4 a0 02 88 00           ra = 136, jump [a3]
      :                          @483 [@dyn 68]
  6596: 82 10 28                 ra = u64 [sp + 0x28]
  6599: 82 15 20                 s0 = u64 [sp + 0x20]
  6602: 82 16 18                 s1 = u64 [sp + 0x18]
  6605: 95 11 30                 sp = sp + 0x30
  6608: 32 00                    ret
