// RO data = 656/656 bytes
// RW data = 16/16773200 bytes
// Stack size = 16773120 bytes
// RO data = [84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 74, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 200, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 226, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 84, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 101, 2, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2241
// Code size = 6717 bytes

      :                          @0
     0: 28 ea 01 00 00           jump @34
      :                          @1
     5: 28 52 02 00 00           jump @39
      :                          @2
    10: 28 24 04                 jump @96
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 40                 jump @9 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 1d 0f                 jump @272
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 28 30                    jump @11
      :                          @9
    97: 81 7b                    a4 = i32 [a0]
    99: 33 09 81 00              a2 = 0x81
   103: 95 17 7f                 a0 = sp + 0x7f
   106: 33 02 37                 t0 = 0x37
   109: 01                       fallthrough
      :                          @10
   110: 64 9c                    a5 = a2
   112: 8b ba 04                 i32 a3 = a4 >> 0x4
   115: 84 bb 0f                 a4 = a4 & 0xf
   118: 88 b3 0a                 t1 = a4 <u 0xa
   121: 33 09 30                 a2 = 0x30
   124: da 32 09                 a2 = t0 if t1 == 0
   127: be b9 09                 i32 a2 = a2 + a4
   130: 78 79                    u8 [a0] = a2
   132: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   135: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   138: 64 ab                    a4 = a3
   140: 52 0a e2                 jump @10 if a3 != 0
      :                          @11
   143: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   146: 56 27 80 00 27           jump @14 if a0 >u 128
      :                          @12
   151: 9a 9b 81 00              a4 = 0x81 - a2
   155: 64 1a                    a3 = sp
   157: c8 7a 0a                 a3 = a3 + a0
   160: 33 09 02                 a2 = 0x2
   163: 64 87                    a0 = a1
   165: 33 08 8a 01 01           a1 = 0x1018a
   170: 50 10 04 c8 0f           ra = 4, jump @282
      :                          @13 [@dyn 2]
   175: 82 10 80 00              ra = u64 [sp + 0x80]
   179: 95 11 88 00              sp = sp + 0x88
   183: 32 00                    ret
      :                          @14
   185: 00                       trap
      :                          @15 [@dyn 3]
   186: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   190: 7b 10 80 00              u64 [sp + 0x80] = ra
   194: 80 89 34                 a2 = u32 [a1 + 0x34]
   197: 84 9a 10                 a3 = a2 & 0x10
   200: 52 0a 16                 jump @18 if a3 != 0
      :                          @16
   203: 84 99 20                 a2 = a2 & 0x20
   206: 52 09 40                 jump @21 if a2 != 0
      :                          @17
   209: 82 77                    a0 = u64 [a0]
   211: 82 10 80 00              ra = u64 [sp + 0x80]
   215: 95 11 88 00              sp = sp + 0x88
   219: 28 70 0e                 jump @272
      :                          @18
   222: 82 7b                    a4 = u64 [a0]
   224: 33 09 81 00              a2 = 0x81
   228: 95 17 7f                 a0 = sp + 0x7f
   231: 33 02 57                 t0 = 0x57
   234: 01                       fallthrough
      :                          @19
   235: 64 9c                    a5 = a2
   237: 98 ba 04                 a3 = a4 >> 0x4
   240: 84 bb 0f                 a4 = a4 & 0xf
   243: 88 b3 0a                 t1 = a4 <u 0xa
   246: 33 09 30                 a2 = 0x30
   249: da 32 09                 a2 = t0 if t1 == 0
   252: be b9 09                 i32 a2 = a2 + a4
   255: 78 79                    u8 [a0] = a2
   257: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   260: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   263: 64 ab                    a4 = a3
   265: 52 0a e2                 jump @19 if a3 != 0
      :                          @20
   268: 28 30                    jump @23
      :                          @21
   270: 82 7b                    a4 = u64 [a0]
   272: 33 09 81 00              a2 = 0x81
   276: 95 17 7f                 a0 = sp + 0x7f
   279: 33 02 37                 t0 = 0x37
   282: 01                       fallthrough
      :                          @22
   283: 64 9c                    a5 = a2
   285: 98 ba 04                 a3 = a4 >> 0x4
   288: 84 bb 0f                 a4 = a4 & 0xf
   291: 88 b3 0a                 t1 = a4 <u 0xa
   294: 33 09 30                 a2 = 0x30
   297: da 32 09                 a2 = t0 if t1 == 0
   300: be b9 09                 i32 a2 = a2 + a4
   303: 78 79                    u8 [a0] = a2
   305: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   308: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   311: 64 ab                    a4 = a3
   313: 52 0a e2                 jump @22 if a3 != 0
      :                          @23
   316: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   319: 56 27 80 00 27           jump @26 if a0 >u 128
      :                          @24
   324: 9a 9b 81 00              a4 = 0x81 - a2
   328: 64 1a                    a3 = sp
   330: c8 7a 0a                 a3 = a3 + a0
   333: 33 09 02                 a2 = 0x2
   336: 64 87                    a0 = a1
   338: 33 08 8a 01 01           a1 = 0x1018a
   343: 50 10 08 1b 0f           ra = 8, jump @282
      :                          @25 [@dyn 4]
   348: 82 10 80 00              ra = u64 [sp + 0x80]
   352: 95 11 88 00              sp = sp + 0x88
   356: 32 00                    ret
      :                          @26
   358: 00                       trap
      :                          @27 [@dyn 5]
   359: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   362: 7b 10 30                 u64 [sp + 0x30] = ra
   365: 7b 15 28                 u64 [sp + 0x28] = s0
   368: 7b 16 20                 u64 [sp + 0x20] = s1
   371: 64 86                    s1 = a1
   373: 82 88 28                 a1 = u64 [a1 + 0x28]
   376: 82 6a 20                 a3 = u64 [s1 + 0x20]
   379: 82 8b 18                 a4 = u64 [a1 + 0x18]
   382: 64 75                    s0 = a0
   384: 33 08 48 01 01           a1 = 0x10148
   389: 33 09 01                 a2 = 0x1
   392: 64 a7                    a0 = a3
   394: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @28 [@dyn 6]
   398: 7b 16 08                 u64 [sp + 0x8] = s1
   401: 78 17 10                 u8 [sp + 0x10] = a0
   404: 46 11 11                 u8 [sp + 17] = 0
   407: 33 06 80 00              s1 = 0x80
   411: 33 07 86 00              a0 = 0x86
   415: 7b 17                    u64 [sp] = a0
   417: 01                       fallthrough
      :                          @29
   418: 7b 15 18                 u64 [sp + 0x18] = s0
   421: 95 17 08                 a0 = sp + 0x8
   424: 95 18 18                 a1 = sp + 0x18
   427: 82 19                    a2 = u64 [sp]
   429: 50 10 0e 95 15           ra = 14, jump @426
      :                          @30 [@dyn 7]
   434: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   437: 95 55 01                 s0 = s0 + 0x1
   440: 52 06 ea                 jump @29 if s1 != 0
      :                          @31
   443: 7c 18 10                 a1 = u8 [sp + 0x10]
   446: 33 07 01                 a0 = 0x1
   449: 52 08 1b                 jump @33 if a1 != 0
      :                          @32
   452: 82 17 08                 a0 = u64 [sp + 0x8]
   455: 82 78 28                 a1 = u64 [a0 + 0x28]
   458: 82 77 20                 a0 = u64 [a0 + 0x20]
   461: 82 8a 18                 a3 = u64 [a1 + 0x18]
   464: 33 08 89 01 01           a1 = 0x10189
   469: 33 09 01                 a2 = 0x1
   472: b4 a0 01 10              ra = 16, jump [a3]
      :                          @33 [@dyn 8]
   476: 82 10 30                 ra = u64 [sp + 0x30]
   479: 82 15 28                 s0 = u64 [sp + 0x28]
   482: 82 16 20                 s1 = u64 [sp + 0x20]
   485: 95 11 38                 sp = sp + 0x38
   488: 32 00                    ret
      :                          @34 [export #0: 'refine']
   490: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   493: 7b 10 20                 u64 [sp + 0x20] = ra
   496: 7b 15 18                 u64 [sp + 0x18] = s0
   499: 7b 16 10                 u64 [sp + 0x10] = s1
   502: 49 11 08                 u64 [sp + 8] = 0
   505: 49 01                    u64 [sp + 0] = 0
   507: 33 05 01                 s0 = 0x1
   510: 64 17                    a0 = sp
   512: 33 09 10                 a2 = 0x10
   515: 33 0a 05                 a3 = 0x5
   518: 33 0b 01                 a4 = 0x1
   521: 33 08                    a1 = 0
   523: 33 0c                    a5 = 0
   525: 0a 12                    ecalli 18 // 'fetch'
   527: 01                       fallthrough
      :                          @35
   528: 51 17 ff 1a              jump @37 if a0 == 4294967295
      :                          @36
   532: 81 17 04                 a0 = i32 [sp + 0x4]
   535: 81 18 08                 a1 = i32 [sp + 0x8]
   538: 81 19 0c                 a2 = i32 [sp + 0xc]
   541: 81 15                    s0 = i32 [sp]
   543: c8 78 0a                 a3 = a1 + a0
   546: be a9 09                 i32 a2 = a2 + a3
   549: 83 55 01                 i32 s0 = s0 + 0x1
   552: 28 0a                    jump @38
      :                          @37
   554: 33 07                    a0 = 0
   556: 33 08                    a1 = 0
   558: 33 09 01                 a2 = 0x1
   561: 01                       fallthrough
      :                          @38
   562: 7a 15                    u32 [sp] = s0
   564: 7a 19 04                 u32 [sp + 0x4] = a2
   567: 7a 17 08                 u32 [sp + 0x8] = a0
   570: 7a 18 0c                 u32 [sp + 0xc] = a1
   573: 64 17                    a0 = sp
   575: 33 08 10                 a1 = 0x10
   578: 0a 13                    ecalli 19 // 'export'
   580: 64 17                    a0 = sp
   582: 33 08 10                 a1 = 0x10
   585: 82 10 20                 ra = u64 [sp + 0x20]
   588: 82 15 18                 s0 = u64 [sp + 0x18]
   591: 82 16 10                 s1 = u64 [sp + 0x10]
   594: 95 11 28                 sp = sp + 0x28
   597: 32 00                    ret
      :                          @39 [export #1: 'accumulate']
   599: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   602: 7b 10 20                 u64 [sp + 0x20] = ra
   605: 7b 15 18                 u64 [sp + 0x18] = s0
   608: 7b 16 10                 u64 [sp + 0x10] = s1
   611: 33 09 08                 a2 = 0x8
   614: ac 98 fa 00              jump @71 if a1 <u a2
      :                          @40
   618: 51 17 fc c0 01           jump @92 if a0 == 4294967292
      :                          @41
   623: 51 07 bb 01              jump @92 if a0 == 0
      :                          @42
   627: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   630: 95 75 08                 s0 = a0 + 0x8
   633: 51 0a 45                 jump @52 if a3 == 0
      :                          @43
   636: 7d 58                    a1 = i8 [s0]
   638: 33 06 01                 s1 = 0x1
   641: 59 08 40                 jump @53 if a1 >=s 0
      :                          @44
   644: 84 89 ff 00              a2 = a1 & 0xff
   648: 33 06 02                 s1 = 0x2
   651: 53 29 c0 00 2d           jump @50 if a2 <u 192
      :                          @45
   656: 33 06 03                 s1 = 0x3
   659: 53 29 e0 00 25           jump @50 if a2 <u 224
      :                          @46
   664: 33 06 04                 s1 = 0x4
   667: 53 29 f0 00 1d           jump @50 if a2 <u 240
      :                          @47
   672: 33 06 05                 s1 = 0x5
   675: 53 29 f8 00 15           jump @50 if a2 <u 248
      :                          @48
   680: 33 06 06                 s1 = 0x6
   683: 53 29 fc 00 0d           jump @50 if a2 <u 252
      :                          @49
   688: 88 98 fe 00              a1 = a2 <u 0xfe
   692: 9a 86 08                 s1 = 0x8 - a1
   695: 01                       fallthrough
      :                          @50
   696: ae 6a 09                 jump @53 if a3 >=u s1
      :                          @51
   699: 28 a5 00                 jump @71
      :                          @52
   702: 33 06                    s1 = 0
   704: 01                       fallthrough
      :                          @53
   705: 7b 16                    u64 [sp] = s1
   707: 64 57                    a0 = s0
   709: 64 68                    a1 = s1
   711: 64 a6                    s1 = a3
   713: 50 10 12 b3 15           ra = 18, jump @443
      :                          @54 [@dyn 9]
   718: 82 1a                    a3 = u64 [sp]
   720: 51 07 90 00              jump @71 if a0 == 0
      :                          @55
   724: e4 a6 07                 a0 = maxu(s1, a3)
   727: c9 a7 07                 a0 = a0 - a3
   730: 53 17 60 86 00           jump @71 if a0 <u 96
      :                          @56
   735: c8 5a 08                 a1 = a3 + s0
   738: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   741: 95 87 60                 a0 = a1 + 0x60
   744: 7b 17                    u64 [sp] = a0
   746: 51 06 4c                 jump @67 if s1 == 0
      :                          @57
   749: 7d 78                    a1 = i8 [a0]
   751: 33 05 01                 s0 = 0x1
   754: 59 08 37                 jump @64 if a1 >=s 0
      :                          @58
   757: 84 89 ff 00              a2 = a1 & 0xff
   761: 33 05 02                 s0 = 0x2
   764: 53 29 c0 00 2d           jump @64 if a2 <u 192
      :                          @59
   769: 33 05 03                 s0 = 0x3
   772: 53 29 e0 00 25           jump @64 if a2 <u 224
      :                          @60
   777: 33 05 04                 s0 = 0x4
   780: 53 29 f0 00 1d           jump @64 if a2 <u 240
      :                          @61
   785: 33 05 05                 s0 = 0x5
   788: 53 29 f8 00 15           jump @64 if a2 <u 248
      :                          @62
   793: 33 05 06                 s0 = 0x6
   796: 53 29 fc 00 0d           jump @64 if a2 <u 252
      :                          @63
   801: 88 98 fe 00              a1 = a2 <u 0xfe
   805: 9a 85 08                 s0 = 0x8 - a1
   808: 01                       fallthrough
      :                          @64
   809: ac 56 02 01              jump @93 if s1 <u s0
      :                          @65
   813: 64 58                    a1 = s0
   815: 50 10 14 4d 15           ra = 20, jump @443
      :                          @66 [@dyn 10]
   820: 28 07                    jump @68
      :                          @67
   822: 33 05                    s0 = 0
   824: 33 07                    a0 = 0
   826: 01                       fallthrough
      :                          @68
   827: e4 56 08                 a1 = maxu(s1, s0)
   830: c9 58 08                 a1 = a1 - s0
   833: e4 78 08                 a1 = maxu(a1, a0)
   836: c9 78 08                 a1 = a1 - a0
   839: 33 09 20                 a2 = 0x20
   842: ac 98 16                 jump @71 if a1 <u a2
      :                          @69
   845: 82 19                    a2 = u64 [sp]
   847: c8 95 05                 s0 = s0 + a2
   850: c8 57 07                 a0 = a0 + s0
   853: 51 17 e0 d5 00           jump @92 if a0 == 4294967264
      :                          @70
   858: 33 09 29                 a2 = 0x29
   861: ae 98 1b                 jump @73 if a1 >=u a2
      :                          @71
   864: 33 08                    a1 = 0
   866: 33 06 00 00 01           s1 = 0x10000
   871: 01                       fallthrough
      :                          @72
   872: 64 67                    a0 = s1
   874: 82 10 20                 ra = u64 [sp + 0x20]
   877: 82 15 18                 s0 = u64 [sp + 0x18]
   880: 82 16 10                 s1 = u64 [sp + 0x10]
   883: 95 11 28                 sp = sp + 0x28
   886: 32 00                    ret
      :                          @73
   888: 7c 79 28                 a2 = u8 [a0 + 0x28]
   891: 51 09 19                 jump @75 if a2 == 0
      :                          @74
   894: 46 11 0e                 u8 [sp + 14] = 0
   897: 95 17 0e                 a0 = sp + 0xe
   900: 33 08 01                 a1 = 0x1
   903: 33 09                    a2 = 0
   905: 33 0a                    a3 = 0
   907: 0a 03                    ecalli 3 // 'write'
   909: 33 08                    a1 = 0
   911: 33 05                    s0 = 0
   913: 28 82 00                 jump @90
      :                          @75
   916: 95 8a d7                 a3 = a1 + 0xffffffffffffffd7
   919: 95 76 29                 s1 = a0 + 0x29
   922: 51 0a 51                 jump @86 if a3 == 0
      :                          @76
   925: 7d 67                    a0 = i8 [s1]
   927: 33 05 01                 s0 = 0x1
   930: 59 07 37                 jump @83 if a0 >=s 0
      :                          @77
   933: 84 77 ff 00              a0 = a0 & 0xff
   937: 33 05 02                 s0 = 0x2
   940: 53 27 c0 00 2d           jump @83 if a0 <u 192
      :                          @78
   945: 33 05 03                 s0 = 0x3
   948: 53 27 e0 00 25           jump @83 if a0 <u 224
      :                          @79
   953: 33 05 04                 s0 = 0x4
   956: 53 27 f0 00 1d           jump @83 if a0 <u 240
      :                          @80
   961: 33 05 05                 s0 = 0x5
   964: 53 27 f8 00 15           jump @83 if a0 <u 248
      :                          @81
   969: 33 05 06                 s0 = 0x6
   972: 53 27 fc 00 0d           jump @83 if a0 <u 252
      :                          @82
   977: 88 77 fe 00              a0 = a0 <u 0xfe
   981: 9a 75 08                 s0 = 0x8 - a0
   984: 01                       fallthrough
      :                          @83
   985: 7b 1a                    u64 [sp] = a3
   987: ac 5a 52                 jump @95 if a3 <u s0
      :                          @84
   990: 64 67                    a0 = s1
   992: 64 58                    a1 = s0
   994: 50 10 16 9a 14           ra = 22, jump @443
      :                          @85 [@dyn 11]
   999: 82 1a                    a3 = u64 [sp]
  1001: 28 07                    jump @87
      :                          @86
  1003: 33 05                    s0 = 0
  1005: 33 07                    a0 = 0
  1007: 01                       fallthrough
      :                          @87
  1008: c8 56 09                 a2 = s1 + s0
  1011: e4 5a 08                 a1 = maxu(a3, s0)
  1014: c9 58 08                 a1 = a1 - s0
  1017: e6 78 05                 s0 = minu(a1, a0)
  1020: 46 11 0e                 u8 [sp + 14] = 0
  1023: 95 17 0e                 a0 = sp + 0xe
  1026: 33 08 01                 a1 = 0x1
  1029: 64 96                    s1 = a2
  1031: 64 5a                    a3 = s0
  1033: 0a 03                    ecalli 3 // 'write'
  1035: 01                       fallthrough
      :                          @88
  1036: 55 15 21 20              jump @94 if s0 >=u 33
      :                          @89
  1040: 64 68                    a1 = s1
  1042: 01                       fallthrough
      :                          @90
  1043: 33 06 11 00 03           s1 = 0x30011
  1048: 33 07 11 00 03           a0 = 0x30011
  1053: 64 59                    a2 = s0
  1055: 50 10 18 76 0a           ra = 24, jump @252
      :                          @91 [@dyn 12]
  1060: 33 08 20                 a1 = 0x20
  1063: 28 41 ff                 jump @72
      :                          @92
  1066: 00                       trap
      :                          @93
  1067: 00                       trap
      :                          @94
  1068: 00                       trap
      :                          @95
  1069: 00                       trap
      :                          @96 [export #2: 'on_transfer']
  1070: 95 11 78 fd              sp = sp + 0xfffffffffffffd78
  1074: 7b 10 80 02              u64 [sp + 0x280] = ra
  1078: 7b 15 78 02              u64 [sp + 0x278] = s0
  1082: 7b 16 70 02              u64 [sp + 0x270] = s1
  1086: 64 76                    s1 = a0
  1088: 33 02                    t0 = 0
  1090: 95 7b 04                 a4 = a0 + 0x4
  1093: 33 07 02                 a0 = 0x2
  1096: 7b 17 28                 u64 [sp + 0x28] = a0
  1099: 33 07 06                 a0 = 0x6
  1102: 7b 17 50                 u64 [sp + 0x50] = a0
  1105: 33 07 0a                 a0 = 0xa
  1108: 7b 17 20                 u64 [sp + 0x20] = a0
  1111: 33 07 58 00 01           a0 = 0x10058
  1116: 7b 17 18                 u64 [sp + 0x18] = a0
  1119: 33 07 7e                 a0 = 0x7e
  1122: 7b 17 10                 u64 [sp + 0x10] = a0
  1125: 33 07 70 02 01           a0 = 0x10270
  1130: 7b 17 08                 u64 [sp + 0x8] = a0
  1133: 33 07 f8 00 01           a0 = 0x100f8
  1138: 7b 17                    u64 [sp] = a0
  1140: 33 03 40 00 03           t1 = 0x30040
  1145: 95 67 08                 a0 = s1 + 0x8
  1148: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  1151: 95 69 0c                 a2 = s1 + 0xc
  1154: 7b 19 58                 u64 [sp + 0x58] = a2
  1157: 33 09 08                 a2 = 0x8
  1160: 7b 17 b8 00              u64 [sp + 0xb8] = a0
  1164: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  1168: 7b 18 40                 u64 [sp + 0x40] = a1
  1171: 7b 16 38                 u64 [sp + 0x38] = s1
  1174: 7b 1b 30                 u64 [sp + 0x30] = a4
  1177: 7b 13 48                 u64 [sp + 0x48] = t1
  1180: 7b 1a a0 00              u64 [sp + 0xa0] = a3
  1184: ac 98 fb 04              jump @144 if a1 <u a2
      :                          @97
  1188: 51 06 10 05              jump @145 if s1 == 0
      :                          @98
  1192: 51 0b 0c 05              jump @145 if a4 == 0
      :                          @99
  1196: 7c 67                    a0 = u8 [s1]
  1198: 7b 17 70                 u64 [sp + 0x70] = a0
  1201: 7c 67 01                 a0 = u8 [s1 + 0x1]
  1204: 7b 17 60                 u64 [sp + 0x60] = a0
  1207: 7c 67 02                 a0 = u8 [s1 + 0x2]
  1210: 7b 17 68                 u64 [sp + 0x68] = a0
  1213: 7c 67 03                 a0 = u8 [s1 + 0x3]
  1216: 7b 17 78                 u64 [sp + 0x78] = a0
  1219: 7c b7                    a0 = u8 [a4]
  1221: 7b 17 90 00              u64 [sp + 0x90] = a0
  1225: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1228: 7b 17 80 00              u64 [sp + 0x80] = a0
  1232: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1235: 7b 17 88 00              u64 [sp + 0x88] = a0
  1239: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1242: 7b 17 98 00              u64 [sp + 0x98] = a0
  1246: 51 0a 49                 jump @109 if a3 == 0
      :                          @100
  1249: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  1253: 7d 77                    a0 = i8 [a0]
  1255: 33 05 01                 s0 = 0x1
  1258: 59 07 40                 jump @110 if a0 >=s 0
      :                          @101
  1261: 84 77 ff 00              a0 = a0 & 0xff
  1265: 33 05 02                 s0 = 0x2
  1268: 53 27 c0 00 2d           jump @107 if a0 <u 192
      :                          @102
  1273: 33 05 03                 s0 = 0x3
  1276: 53 27 e0 00 25           jump @107 if a0 <u 224
      :                          @103
  1281: 33 05 04                 s0 = 0x4
  1284: 53 27 f0 00 1d           jump @107 if a0 <u 240
      :                          @104
  1289: 33 05 05                 s0 = 0x5
  1292: 53 27 f8 00 15           jump @107 if a0 <u 248
      :                          @105
  1297: 33 05 06                 s0 = 0x6
  1300: 53 27 fc 00 0d           jump @107 if a0 <u 252
      :                          @106
  1305: 88 77 fe 00              a0 = a0 <u 0xfe
  1309: 9a 75 08                 s0 = 0x8 - a0
  1312: 01                       fallthrough
      :                          @107
  1313: ae 5a 09                 jump @110 if a3 >=u s0
      :                          @108
  1316: 28 77 04                 jump @144
      :                          @109
  1319: 33 05                    s0 = 0
  1321: 01                       fallthrough
      :                          @110
  1322: 82 17 b8 00              a0 = u64 [sp + 0xb8]
  1326: 64 58                    a1 = s0
  1328: 7b 12 a8 00              u64 [sp + 0xa8] = t0
  1332: 50 10 1a 48 13           ra = 26, jump @443
      :                          @111 [@dyn 13]
  1337: 33 04 98 00              t2 = 0x98
  1341: 33 03 04                 t1 = 0x4
  1344: 33 02 08                 t0 = 0x8
  1347: 82 1c a0 00              a5 = u64 [sp + 0xa0]
  1351: 82 1b a8 00              a4 = u64 [sp + 0xa8]
  1355: ae 7b 50 04              jump @144 if a4 >=u a0
      :                          @112
  1359: 82 16 60                 s1 = u64 [sp + 0x60]
  1362: 97 66 08                 s1 = s1 << 0x8
  1365: 82 18 70                 a1 = u64 [sp + 0x70]
  1368: d4 68 08                 a1 = a1 | s1
  1371: 82 19 68                 a2 = u64 [sp + 0x68]
  1374: 97 99 10                 a2 = a2 << 0x10
  1377: 82 1a 78                 a3 = u64 [sp + 0x78]
  1380: 97 aa 18                 a3 = a3 << 0x18
  1383: d4 a9 09                 a2 = a2 | a3
  1386: d4 89 06                 s1 = a2 | a1
  1389: 82 18 80 00              a1 = u64 [sp + 0x80]
  1393: 97 88 08                 a1 = a1 << 0x8
  1396: 82 19 90 00              a2 = u64 [sp + 0x90]
  1400: d4 98 08                 a1 = a1 | a2
  1403: 82 19 88 00              a2 = u64 [sp + 0x88]
  1407: 97 99 10                 a2 = a2 << 0x10
  1410: 82 1a 98 00              a3 = u64 [sp + 0x98]
  1414: 97 aa 18                 a3 = a3 << 0x18
  1417: d4 a9 09                 a2 = a2 | a3
  1420: d4 89 00                 ra = a2 | a1
  1423: e4 5c 08                 a1 = maxu(a5, s0)
  1426: c9 58 08                 a1 = a1 - s0
  1429: 82 19 b0 00              a2 = u64 [sp + 0xb0]
  1433: c8 59 09                 a2 = a2 + s0
  1436: 82 1a 58                 a3 = u64 [sp + 0x58]
  1439: c8 a5 05                 s0 = s0 + a3
  1442: 64 ba                    a3 = a4
  1444: 01                       fallthrough
      :                          @113
  1445: ac 28 f6 03              jump @144 if a1 <u t0
      :                          @114
  1449: aa 35 0b 04              jump @145 if s0 == t1
      :                          @115
  1453: 51 05 07 04              jump @145 if s0 == 0
      :                          @116
  1457: ac 48 ea 03              jump @144 if a1 <u t2
      :                          @117
  1461: 51 0a 17                 jump @120 if a3 == 0
      :                          @118
  1464: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1468: 95 55 98 00              s0 = s0 + 0x98
  1472: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1475: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1478: 52 07 df                 jump @113 if a0 != 0
      :                          @119
  1481: 28 d2 03                 jump @144
      :                          @120
  1484: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1487: 7c 98                    a1 = u8 [a2]
  1489: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1492: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1495: 8a 77 08                 i32 a0 = a0 << 0x8
  1498: d4 87 07                 a0 = a0 | a1
  1501: 8a a8 10                 i32 a1 = a3 << 0x10
  1504: 8a ba 18                 i32 a3 = a4 << 0x18
  1507: d4 a8 08                 a1 = a1 | a3
  1510: d4 87 07                 a0 = a0 | a1
  1513: 7b 17 98 00              u64 [sp + 0x98] = a0
  1517: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1520: 7c 58                    a1 = u8 [s0]
  1522: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1525: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1528: 8a 77 08                 i32 a0 = a0 << 0x8
  1531: d4 87 07                 a0 = a0 | a1
  1534: 8a a8 10                 i32 a1 = a3 << 0x10
  1537: 8a ba 18                 i32 a3 = a4 << 0x18
  1540: d4 a8 08                 a1 = a1 | a3
  1543: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1546: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1549: d4 87 07                 a0 = a0 | a1
  1552: 7b 17 90 00              u64 [sp + 0x90] = a0
  1556: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1559: 97 aa 10                 a3 = a3 << 0x10
  1562: 97 bb 08                 a4 = a4 << 0x8
  1565: d4 ba 0a                 a3 = a3 | a4
  1568: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1571: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1574: d4 a7 07                 a0 = a0 | a3
  1577: 97 77 10                 a0 = a0 << 0x10
  1580: 97 88 08                 a1 = a1 << 0x8
  1583: d4 b8 08                 a1 = a1 | a4
  1586: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1589: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1592: d4 87 07                 a0 = a0 | a1
  1595: 97 77 10                 a0 = a0 << 0x10
  1598: 97 aa 08                 a3 = a3 << 0x8
  1601: d4 ba 0a                 a3 = a3 | a4
  1604: d4 a7 07                 a0 = a0 | a3
  1607: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1610: 97 77 08                 a0 = a0 << 0x8
  1613: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1617: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1621: d4 87 07                 a0 = a0 | a1
  1624: 7b 17 88 00              u64 [sp + 0x88] = a0
  1628: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1632: 97 aa 10                 a3 = a3 << 0x10
  1635: 97 bb 08                 a4 = a4 << 0x8
  1638: d4 ba 0a                 a3 = a3 | a4
  1641: d4 a7 07                 a0 = a0 | a3
  1644: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1648: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1652: 95 98 10                 a1 = a2 + 0x10
  1655: 97 77 10                 a0 = a0 << 0x10
  1658: 97 aa 08                 a3 = a3 << 0x8
  1661: d4 ba 0a                 a3 = a3 | a4
  1664: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1668: d4 a7 07                 a0 = a0 | a3
  1671: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1675: 97 77 10                 a0 = a0 << 0x10
  1678: 97 bb 08                 a4 = a4 << 0x8
  1681: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1685: d4 ba 0a                 a3 = a3 | a4
  1688: d4 a7 07                 a0 = a0 | a3
  1691: 97 77 08                 a0 = a0 << 0x8
  1694: d4 97 07                 a0 = a0 | a2
  1697: 7b 17 80 00              u64 [sp + 0x80] = a0
  1701: 95 17 60 01              a0 = sp + 0x160
  1705: 33 09 80 00              a2 = 0x80
  1709: 64 05                    s0 = ra
  1711: 50 10 1c e6 07           ra = 28, jump @252
      :                          @121 [@dyn 14]
  1716: 95 17 d8 00              a0 = sp + 0xd8
  1720: 95 18 60 01              a1 = sp + 0x160
  1724: 33 09 80 00              a2 = 0x80
  1728: 50 10 1e d5 07           ra = 30, jump @252
      :                          @122 [@dyn 15]
  1733: 7a 16 c0 00              u32 [sp + 0xc0] = s1
  1737: 7a 15 c4 00              u32 [sp + 0xc4] = s0
  1741: 82 17 98 00              a0 = u64 [sp + 0x98]
  1745: 7a 17 c8 00              u32 [sp + 0xc8] = a0
  1749: 82 17 90 00              a0 = u64 [sp + 0x90]
  1753: 7a 17 cc 00              u32 [sp + 0xcc] = a0
  1757: 82 17 88 00              a0 = u64 [sp + 0x88]
  1761: 7b 17 d0 00              u64 [sp + 0xd0] = a0
  1765: 82 17 80 00              a0 = u64 [sp + 0x80]
  1769: 7b 17 58 01              u64 [sp + 0x158] = a0
  1773: 95 17 c0 00              a0 = sp + 0xc0
  1777: 7b 17 60 01              u64 [sp + 0x160] = a0
  1781: 82 17 28                 a0 = u64 [sp + 0x28]
  1784: 7b 17 68 01              u64 [sp + 0x168] = a0
  1788: 95 18 c4 00              a1 = sp + 0xc4
  1792: 7b 18 70 01              u64 [sp + 0x170] = a1
  1796: 7b 17 78 01              u64 [sp + 0x178] = a0
  1800: 95 18 c8 00              a1 = sp + 0xc8
  1804: 7b 18 80 01              u64 [sp + 0x180] = a1
  1808: 7b 17 88 01              u64 [sp + 0x188] = a0
  1812: 95 18 cc 00              a1 = sp + 0xcc
  1816: 7b 18 90 01              u64 [sp + 0x190] = a1
  1820: 7b 17 98 01              u64 [sp + 0x198] = a0
  1824: 95 17 d0 00              a0 = sp + 0xd0
  1828: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
  1832: 82 17 50                 a0 = u64 [sp + 0x50]
  1835: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
  1839: 95 18 d8 00              a1 = sp + 0xd8
  1843: 7b 18 b0 01              u64 [sp + 0x1b0] = a1
  1847: 82 18 20                 a1 = u64 [sp + 0x20]
  1850: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
  1854: 95 18 58 01              a1 = sp + 0x158
  1858: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
  1862: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
  1866: 82 17 18                 a0 = u64 [sp + 0x18]
  1869: 7b 17 20 02              u64 [sp + 0x220] = a0
  1873: 49 21 28 02 07           u64 [sp + 552] = 0x7
  1878: 49 21 40 02              u64 [sp + 576] = 0
  1882: 95 17 60 01              a0 = sp + 0x160
  1886: 7b 17 30 02              u64 [sp + 0x230] = a0
  1890: 49 21 38 02 07           u64 [sp + 568] = 0x7
  1895: 95 17 50 02              a0 = sp + 0x250
  1899: 95 18 20 02              a1 = sp + 0x220
  1903: 50 10 20 a1 04           ra = 32, jump @202
      :                          @123 [@dyn 16]
  1908: 82 16 58 02              s1 = u64 [sp + 0x258]
  1912: 82 1b 60 02              a4 = u64 [sp + 0x260]
  1916: 82 15 50 02              s0 = u64 [sp + 0x250]
  1920: 33 07 02                 a0 = 0x2
  1923: 33 08                    a1 = 0
  1925: 33 09                    a2 = 0
  1927: 64 6a                    a3 = s1
  1929: 33 00 22                 ra = 0x22
  1932: 0a 64                    ecalli 100 // 'log'
  1934: 01                       fallthrough
      :                          @124 [@dyn 17]
  1935: 64 63                    t1 = s1
  1937: 82 1c 48                 a5 = u64 [sp + 0x48]
  1940: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  1946: 33 02 00 f0 ff 00        t0 = 0xfff000
  1952: 33 06 ff ef ff 00        s1 = 0xffefff
  1958: 49 21 90 00 01 10 00 ff  u64 [sp + 144] = 0xffffffffff001001
  1966: 53 47 01 10 00 ff 21     jump @129 if a0 <u 4278194177
      :                          @125
  1973: c8 2c 08                 a1 = a5 + t0
  1976: 82 87                    a0 = u64 [a1]
  1978: c8 6c 09                 a2 = a5 + s1
  1981: c9 79 09                 a2 = a2 - a0
  1984: ab 39 0f                 jump @129 if a2 != t1
      :                          @126
  1987: c9 57 09                 a2 = a0 - s0
  1990: 01                       fallthrough
      :                          @127
  1991: 82 8a                    a3 = u64 [a1]
  1993: ab 7a ec                 jump @125 if a3 != a0
      :                          @128
  1996: 7b 89                    u64 [a1] = a2
  1998: 01                       fallthrough
      :                          @129
  1999: 81 17 c4 00              a0 = i32 [sp + 0xc4]
  2003: 7a 17 e4 01              u32 [sp + 0x1e4] = a0
  2007: 95 17 e4 01              a0 = sp + 0x1e4
  2011: 33 08 04                 a1 = 0x4
  2014: 95 19 d8 00              a2 = sp + 0xd8
  2018: 33 0a 80 00              a3 = 0x80
  2022: 7b 16 98 00              u64 [sp + 0x98] = s1
  2026: 0a 03                    ecalli 3 // 'write'
  2028: 0a                       ecalli 0 // 'gas'
  2029: 7b 17 e8 01              u64 [sp + 0x1e8] = a0
  2033: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2037: 46 21 ff 01 04           u8 [sp + 511] = 0x4
  2042: 7b 17 00 02              u64 [sp + 0x200] = a0
  2046: 95 17 ff 01              a0 = sp + 0x1ff
  2050: 33 08 01                 a1 = 0x1
  2053: 95 19 00 02              a2 = sp + 0x200
  2057: 33 0a 08                 a3 = 0x8
  2060: 0a 03                    ecalli 3 // 'write'
  2062: 49 21 60 01 02           u64 [sp + 352] = 0x2
  2067: 49 21 70 01 02           u64 [sp + 368] = 0x2
  2072: 49 21 80 01              u64 [sp + 384] = 0
  2076: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2086: 7b 17 88 01              u64 [sp + 0x188] = a0
  2090: 46 21 90 01 03           u8 [sp + 400] = 0x3
  2095: 49 21 98 01 02           u64 [sp + 408] = 0x2
  2100: 49 21 a8 01 02           u64 [sp + 424] = 0x2
  2105: 49 21 b8 01 01           u64 [sp + 440] = 0x1
  2110: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  2114: 95 17 ff 01              a0 = sp + 0x1ff
  2118: 7b 17 50 02              u64 [sp + 0x250] = a0
  2122: 82 17 10                 a0 = u64 [sp + 0x10]
  2125: 7b 17 58 02              u64 [sp + 0x258] = a0
  2129: 95 17 f0 01              a0 = sp + 0x1f0
  2133: 7b 17 60 02              u64 [sp + 0x260] = a0
  2137: 82 17 50                 a0 = u64 [sp + 0x50]
  2140: 7b 17 68 02              u64 [sp + 0x268] = a0
  2144: 46 21 c8 01 03           u8 [sp + 456] = 0x3
  2149: 82 17 08                 a0 = u64 [sp + 0x8]
  2152: 7b 17 20 02              u64 [sp + 0x220] = a0
  2156: 49 21 28 02 02           u64 [sp + 552] = 0x2
  2161: 95 17 60 01              a0 = sp + 0x160
  2165: 7b 17 40 02              u64 [sp + 0x240] = a0
  2169: 49 21 48 02 02           u64 [sp + 584] = 0x2
  2174: 95 17 50 02              a0 = sp + 0x250
  2178: 7b 17 30 02              u64 [sp + 0x230] = a0
  2182: 49 21 38 02 02           u64 [sp + 568] = 0x2
  2187: 95 17 08 02              a0 = sp + 0x208
  2191: 95 18 20 02              a1 = sp + 0x220
  2195: 50 10 24 7d 03           ra = 36, jump @202
      :                          @130 [@dyn 18]
  2200: 82 16 10 02              s1 = u64 [sp + 0x210]
  2204: 82 1b 18 02              a4 = u64 [sp + 0x218]
  2208: 82 15 08 02              s0 = u64 [sp + 0x208]
  2212: 33 07 02                 a0 = 0x2
  2215: 33 08                    a1 = 0
  2217: 33 09                    a2 = 0
  2219: 64 6a                    a3 = s1
  2221: 33 00 26                 ra = 0x26
  2224: 0a 64                    ecalli 100 // 'log'
  2226: 01                       fallthrough
      :                          @131 [@dyn 19]
  2227: 64 63                    t1 = s1
  2229: 82 16 98 00              s1 = u64 [sp + 0x98]
  2233: 33 02 00 f0 ff 00        t0 = 0xfff000
  2239: 82 1c 48                 a5 = u64 [sp + 0x48]
  2242: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2248: 82 18 90 00              a1 = u64 [sp + 0x90]
  2252: ac 87 1f                 jump @136 if a0 <u a1
      :                          @132
  2255: c8 2c 08                 a1 = a5 + t0
  2258: 82 87                    a0 = u64 [a1]
  2260: c8 6c 09                 a2 = a5 + s1
  2263: c9 79 09                 a2 = a2 - a0
  2266: ab 39 11                 jump @136 if a2 != t1
      :                          @133
  2269: c9 57 09                 a2 = a0 - s0
  2272: 01                       fallthrough
      :                          @134
  2273: 82 8a                    a3 = u64 [a1]
  2275: ab 7a ec                 jump @132 if a3 != a0
      :                          @135
  2278: 7b 89                    u64 [a1] = a2
  2280: 33 0b                    a4 = 0
  2282: 01                       fallthrough
      :                          @136
  2283: 95 17 e8 01              a0 = sp + 0x1e8
  2287: 7b 17 50 02              u64 [sp + 0x250] = a0
  2291: 82 17 50                 a0 = u64 [sp + 0x50]
  2294: 7b 17 58 02              u64 [sp + 0x258] = a0
  2298: 82 17                    a0 = u64 [sp]
  2300: 7b 17 60 01              u64 [sp + 0x160] = a0
  2304: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2309: 49 21 80 01              u64 [sp + 384] = 0
  2313: 95 17 50 02              a0 = sp + 0x250
  2317: 7b 17 70 01              u64 [sp + 0x170] = a0
  2321: 49 21 78 01 01           u64 [sp + 376] = 0x1
  2326: 95 17 20 02              a0 = sp + 0x220
  2330: 95 18 60 01              a1 = sp + 0x160
  2334: 50 10 28 f2 02           ra = 40, jump @202
      :                          @137 [@dyn 20]
  2339: 82 16 28 02              s1 = u64 [sp + 0x228]
  2343: 82 1b 30 02              a4 = u64 [sp + 0x230]
  2347: 82 15 20 02              s0 = u64 [sp + 0x220]
  2351: 33 07 02                 a0 = 0x2
  2354: 33 08                    a1 = 0
  2356: 33 09                    a2 = 0
  2358: 64 6a                    a3 = s1
  2360: 33 00 2a                 ra = 0x2a
  2363: 0a 64                    ecalli 100 // 'log'
  2365: 01                       fallthrough
      :                          @138 [@dyn 21]
  2366: 64 6c                    a5 = s1
  2368: 82 16 98 00              s1 = u64 [sp + 0x98]
  2372: 33 02 00 f0 ff 00        t0 = 0xfff000
  2378: 82 13 48                 t1 = u64 [sp + 0x48]
  2381: 95 57 00 10 00 ff        a0 = s0 + 0xffffffffff001000
  2387: 82 18 90 00              a1 = u64 [sp + 0x90]
  2391: ac 87 1d                 jump @143 if a0 <u a1
      :                          @139
  2394: c8 23 08                 a1 = t1 + t0
  2397: 82 87                    a0 = u64 [a1]
  2399: c8 63 09                 a2 = t1 + s1
  2402: c9 79 09                 a2 = a2 - a0
  2405: ab c9 0f                 jump @143 if a2 != a5
      :                          @140
  2408: c9 57 09                 a2 = a0 - s0
  2411: 01                       fallthrough
      :                          @141
  2412: 82 8a                    a3 = u64 [a1]
  2414: ab 7a ec                 jump @139 if a3 != a0
      :                          @142
  2417: 7b 89                    u64 [a1] = a2
  2419: 01                       fallthrough
      :                          @143
  2420: 82 12 a8 00              t0 = u64 [sp + 0xa8]
  2424: 95 22 01                 t0 = t0 + 0x1
  2427: 82 17 b0 00              a0 = u64 [sp + 0xb0]
  2431: 95 77 98 00              a0 = a0 + 0x98
  2435: 7b 17 b0 00              u64 [sp + 0xb0] = a0
  2439: 82 18 40                 a1 = u64 [sp + 0x40]
  2442: 82 16 38                 s1 = u64 [sp + 0x38]
  2445: 82 1b 30                 a4 = u64 [sp + 0x30]
  2448: 82 1a a0 00              a3 = u64 [sp + 0xa0]
  2452: 33 09 08                 a2 = 0x8
  2455: ae 98 0d fb              jump @97 if a1 >=u a2
      :                          @144
  2459: 33 07 00 00 01           a0 = 0x10000
  2464: 33 08                    a1 = 0
  2466: 82 10 80 02              ra = u64 [sp + 0x280]
  2470: 82 15 78 02              s0 = u64 [sp + 0x278]
  2474: 82 16 70 02              s1 = u64 [sp + 0x270]
  2478: 95 11 88 02              sp = sp + 0x288
  2482: 32 00                    ret
      :                          @145
  2484: 00                       trap
      :                          @146
  2485: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2488: 7b 10 40                 u64 [sp + 0x40] = ra
  2491: 7b 15 38                 u64 [sp + 0x38] = s0
  2494: 7b 16 30                 u64 [sp + 0x30] = s1
  2497: c8 89 09                 a2 = a2 + a1
  2500: ac 89 52                 jump @154 if a2 <u a1
      :                          @147
  2503: 64 75                    s0 = a0
  2505: 82 77                    a0 = u64 [a0]
  2507: 97 78 01                 a1 = a0 << 0x1
  2510: 33 0a 08                 a3 = 0x8
  2513: e4 a9 09                 a2 = maxu(a2, a3)
  2516: e4 98 06                 s1 = maxu(a1, a2)
  2519: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2522: 98 88 3f                 a1 = a1 >> 0x3f
  2525: 51 07 12                 jump @149 if a0 == 0
      :                          @148
  2528: 82 59 08                 a2 = u64 [s0 + 0x8]
  2531: 7b 19 18                 u64 [sp + 0x18] = a2
  2534: 49 11 20 01              u64 [sp + 32] = 0x1
  2538: 7b 17 28                 u64 [sp + 0x28] = a0
  2541: 28 06                    jump @150
      :                          @149
  2543: 49 11 20                 u64 [sp + 32] = 0
  2546: 01                       fallthrough
      :                          @150
  2547: 64 17                    a0 = sp
  2549: 95 1a 18                 a3 = sp + 0x18
  2552: 64 69                    a2 = s1
  2554: 50 10 2c 32              ra = 44, jump @158
      :                          @151 [@dyn 22]
  2558: 82 18                    a1 = u64 [sp]
  2560: 82 17 08                 a0 = u64 [sp + 0x8]
  2563: 51 08 14                 jump @155 if a1 == 0
      :                          @152
  2566: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2576: aa 87 0d                 jump @156 if a0 == a1
      :                          @153
  2579: 52 07 18                 jump @157 if a0 != 0
      :                          @154
  2582: 00                       trap
      :                          @155
  2583: 7b 57 08                 u64 [s0 + 0x8] = a0
  2586: 7b 56                    u64 [s0] = s1
  2588: 01                       fallthrough
      :                          @156
  2589: 82 10 40                 ra = u64 [sp + 0x40]
  2592: 82 15 38                 s0 = u64 [sp + 0x38]
  2595: 82 16 30                 s1 = u64 [sp + 0x30]
  2598: 95 11 48                 sp = sp + 0x48
  2601: 32 00                    ret
      :                          @157
  2603: 00                       trap
      :                          @158
  2604: 64 93                    t1 = a2
  2606: 64 72                    t0 = a0
  2608: 51 08 8f 00              jump @168 if a1 == 0
      :                          @159
  2612: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  2615: 7b 10 38                 u64 [sp + 0x38] = ra
  2618: 7b 15 30                 u64 [sp + 0x30] = s0
  2621: 7b 16 28                 u64 [sp + 0x28] = s1
  2624: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2627: 51 07 89 00              jump @169 if a0 == 0
      :                          @160
  2631: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2634: 51 09 ba 00              jump @176 if a2 == 0
      :                          @161
  2638: 82 a8                    a1 = u64 [a3]
  2640: 33 06 40 00 03           s1 = 0x30040
  2645: 95 66 00 f0 ff 00        s1 = s1 + 0xfff000
  2651: 33 05 ff ef ff 00        s0 = 0xffefff
  2657: 01                       fallthrough
      :                          @162
  2658: 82 6a                    a3 = u64 [s1]
  2660: c8 3a 07                 a0 = a3 + t1
  2663: ac a7 e0 00              jump @182 if a0 <u a3
      :                          @163
  2667: 95 7b 01                 a4 = a0 + 0x1
  2670: 88 bc 01                 a5 = a4 <u 0x1
  2673: d8 b5 0b                 a4 = s0 <u a4
  2676: d4 cb 0b                 a4 = a4 | a5
  2679: 52 0b d0 00              jump @182 if a4 != 0
      :                          @164
  2683: 82 6b                    a4 = u64 [s1]
  2685: ab ab e5                 jump @162 if a4 != a3
      :                          @165
  2688: 7b 67                    u64 [s1] = a0
  2690: 33 0c                    a5 = 0
  2692: 7b 13 10                 u64 [sp + 0x10] = t1
  2695: 7b 12 20                 u64 [sp + 0x20] = t0
  2698: 33 05 ff ef ff 00        s0 = 0xffefff
  2704: 33 0a 40 00 03           a3 = 0x30040
  2709: 7b 1a                    u64 [sp] = a3
  2711: c8 5a 0a                 a3 = a3 + s0
  2714: c9 7a 07                 a0 = a3 - a0
  2717: 7b 17 18                 u64 [sp + 0x18] = a0
  2720: 7b 18 08                 u64 [sp + 0x8] = a1
  2723: 64 96                    s1 = a2
  2725: 50 10 2e f0 03           ra = 46, jump @252
      :                          @166 [@dyn 23]
  2730: ae 65 a5 00              jump @183 if s0 >=u s1
      :                          @167
  2734: 82 12 20                 t0 = u64 [sp + 0x20]
  2737: 82 13 10                 t1 = u64 [sp + 0x10]
  2740: 82 18 18                 a1 = u64 [sp + 0x18]
  2743: 33 07                    a0 = 0
  2745: 7b 28 08                 u64 [t0 + 0x8] = a1
  2748: 28 c9 00                 jump @189
      :                          @168
  2751: 49 12 08                 u64 [t0 + 8] = 0
  2754: 33 07 01                 a0 = 0x1
  2757: 7b 23 10                 u64 [t0 + 0x10] = t1
  2760: 7b 27                    u64 [t0] = a0
  2762: 32 00                    ret
      :                          @169
  2764: 33 07 40 00 03           a0 = 0x30040
  2769: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  2775: 33 09 ff ef ff 00        a2 = 0xffefff
  2781: 01                       fallthrough
      :                          @170
  2782: 82 7a                    a3 = u64 [a0]
  2784: c8 3a 08                 a1 = a3 + t1
  2787: ac a8 64                 jump @182 if a1 <u a3
      :                          @171
  2790: 95 8b 01                 a4 = a1 + 0x1
  2793: 88 bc 01                 a5 = a4 <u 0x1
  2796: d8 b9 0b                 a4 = a2 <u a4
  2799: d4 cb 0b                 a4 = a4 | a5
  2802: 52 0b 55                 jump @182 if a4 != 0
      :                          @172
  2805: 82 7b                    a4 = u64 [a0]
  2807: ab ab e7                 jump @170 if a4 != a3
      :                          @173
  2810: 7b 78                    u64 [a0] = a1
  2812: 33 0c                    a5 = 0
  2814: 01                       fallthrough
      :                          @174
  2815: ab ab df                 jump @170 if a4 != a3
      :                          @175
  2818: 28 35                    jump @181
      :                          @176
  2820: 33 07 40 00 03           a0 = 0x30040
  2825: 95 77 00 f0 ff 00        a0 = a0 + 0xfff000
  2831: 33 09 ff ef ff 00        a2 = 0xffefff
  2837: 01                       fallthrough
      :                          @177
  2838: 82 7a                    a3 = u64 [a0]
  2840: c8 3a 08                 a1 = a3 + t1
  2843: ac a8 2c                 jump @182 if a1 <u a3
      :                          @178
  2846: 95 8b 01                 a4 = a1 + 0x1
  2849: 88 bc 01                 a5 = a4 <u 0x1
  2852: d8 b9 0b                 a4 = a2 <u a4
  2855: d4 cb 0b                 a4 = a4 | a5
  2858: 52 0b 1d                 jump @182 if a4 != 0
      :                          @179
  2861: 82 7b                    a4 = u64 [a0]
  2863: ab ab e7                 jump @177 if a4 != a3
      :                          @180
  2866: 7b 78                    u64 [a0] = a1
  2868: 33 0c                    a5 = 0
  2870: 01                       fallthrough
      :                          @181
  2871: 33 07 3f f0 02 01        a0 = 0x102f03f
  2877: c9 87 08                 a1 = a0 - a1
  2880: 33 07                    a0 = 0
  2882: 7b 28 08                 u64 [t0 + 0x8] = a1
  2885: 28 40                    jump @189
      :                          @182
  2887: 33 07 01                 a0 = 0x1
  2890: 7b 27 08                 u64 [t0 + 0x8] = a0
  2893: 28 38                    jump @189
      :                          @183
  2895: 64 6c                    a5 = s1
  2897: 82 16                    s1 = u64 [sp]
  2899: 95 67 00 f0 ff 00        a0 = s1 + 0xfff000
  2905: 82 12 20                 t0 = u64 [sp + 0x20]
  2908: 82 14 08                 t2 = u64 [sp + 0x8]
  2911: 82 13 10                 t1 = u64 [sp + 0x10]
  2914: 01                       fallthrough
      :                          @184
  2915: 82 78                    a1 = u64 [a0]
  2917: c8 56 09                 a2 = s1 + s0
  2920: c9 89 09                 a2 = a2 - a1
  2923: ab 49 11                 jump @188 if a2 != t2
      :                          @185
  2926: c9 c8 09                 a2 = a1 - a5
  2929: 01                       fallthrough
      :                          @186
  2930: 82 7a                    a3 = u64 [a0]
  2932: ab 8a ef                 jump @184 if a3 != a1
      :                          @187
  2935: 7b 79                    u64 [a0] = a2
  2937: 33 0b                    a4 = 0
  2939: 01                       fallthrough
      :                          @188
  2940: 82 18 18                 a1 = u64 [sp + 0x18]
  2943: 33 07                    a0 = 0
  2945: 7b 28 08                 u64 [t0 + 0x8] = a1
  2948: 01                       fallthrough
      :                          @189
  2949: 82 10 38                 ra = u64 [sp + 0x38]
  2952: 82 15 30                 s0 = u64 [sp + 0x30]
  2955: 82 16 28                 s1 = u64 [sp + 0x28]
  2958: 95 11 40                 sp = sp + 0x40
  2961: 7b 23 10                 u64 [t0 + 0x10] = t1
  2964: 7b 27                    u64 [t0] = a0
  2966: 32 00                    ret
      :                          @190
  2968: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2971: 7b 10 40                 u64 [sp + 0x40] = ra
  2974: 7b 15 38                 u64 [sp + 0x38] = s0
  2977: 7b 16 30                 u64 [sp + 0x30] = s1
  2980: 95 88 01                 a1 = a1 + 0x1
  2983: 51 08 53                 jump @198 if a1 == 0
      :                          @191
  2986: 64 75                    s0 = a0
  2988: 82 77                    a0 = u64 [a0]
  2990: 97 79 01                 a2 = a0 << 0x1
  2993: 33 0a 08                 a3 = 0x8
  2996: e4 a8 08                 a1 = maxu(a1, a3)
  2999: e4 89 06                 s1 = maxu(a2, a1)
  3002: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  3005: 98 88 3f                 a1 = a1 >> 0x3f
  3008: 51 07 12                 jump @193 if a0 == 0
      :                          @192
  3011: 82 59 08                 a2 = u64 [s0 + 0x8]
  3014: 7b 19 18                 u64 [sp + 0x18] = a2
  3017: 49 11 20 01              u64 [sp + 32] = 0x1
  3021: 7b 17 28                 u64 [sp + 0x28] = a0
  3024: 28 06                    jump @194
      :                          @193
  3026: 49 11 20                 u64 [sp + 32] = 0
  3029: 01                       fallthrough
      :                          @194
  3030: 64 17                    a0 = sp
  3032: 95 1a 18                 a3 = sp + 0x18
  3035: 64 69                    a2 = s1
  3037: 50 10 30 4f fe           ra = 48, jump @158
      :                          @195 [@dyn 24]
  3042: 82 18                    a1 = u64 [sp]
  3044: 82 17 08                 a0 = u64 [sp + 0x8]
  3047: 51 08 14                 jump @199 if a1 == 0
      :                          @196
  3050: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  3060: aa 87 0d                 jump @200 if a0 == a1
      :                          @197
  3063: 52 07 18                 jump @201 if a0 != 0
      :                          @198
  3066: 00                       trap
      :                          @199
  3067: 7b 57 08                 u64 [s0 + 0x8] = a0
  3070: 7b 56                    u64 [s0] = s1
  3072: 01                       fallthrough
      :                          @200
  3073: 82 10 40                 ra = u64 [sp + 0x40]
  3076: 82 15 38                 s0 = u64 [sp + 0x38]
  3079: 82 16 30                 s1 = u64 [sp + 0x30]
  3082: 95 11 48                 sp = sp + 0x48
  3085: 32 00                    ret
      :                          @201
  3087: 00                       trap
      :                          @202
  3088: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  3091: 7b 10 30                 u64 [sp + 0x30] = ra
  3094: 7b 15 28                 u64 [sp + 0x28] = s0
  3097: 7b 16 20                 u64 [sp + 0x20] = s1
  3100: 64 89                    a2 = a1
  3102: 82 8a 08                 a3 = u64 [a1 + 0x8]
  3105: 64 75                    s0 = a0
  3107: 51 0a 35                 jump @207 if a3 == 0
      :                          @203
  3110: 82 98                    a1 = u64 [a2]
  3112: 33 07                    a0 = 0
  3114: 95 8b 08                 a4 = a1 + 0x8
  3117: 01                       fallthrough
      :                          @204
  3118: 82 bc                    a5 = u64 [a4]
  3120: c8 c7 07                 a0 = a0 + a5
  3123: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3126: 95 bb 10                 a4 = a4 + 0x10
  3129: 52 0a f5                 jump @204 if a3 != 0
      :                          @205
  3132: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3135: 51 0a 24                 jump @209 if a3 == 0
      :                          @206
  3138: 82 88 08                 a1 = u64 [a1 + 0x8]
  3141: 8e 88                    a1 = a1 >u 0
  3143: 88 7a 10                 a3 = a0 <u 0x10
  3146: 85 aa 01                 a3 = a3 ^ 0x1
  3149: d4 a8 08                 a1 = a1 | a3
  3152: 89 7a                    a3 = a0 <s 0
  3154: e0 a8 08                 a1 = a1 & ~a3
  3157: 52 08 0a                 jump @208 if a1 != 0
      :                          @207
  3160: 33 07                    a0 = 0
  3162: 33 08 01                 a1 = 0x1
  3165: 28 4f                    jump @217
      :                          @208
  3167: 97 77 01                 a0 = a0 << 0x1
  3170: 01                       fallthrough
      :                          @209
  3171: 51 07 45                 jump @216 if a0 == 0
      :                          @210
  3174: 57 07 7d                 jump @222 if a0 <s 0
      :                          @211
  3177: 64 52                    t0 = s0
  3179: 33 08 40 00 03           a1 = 0x30040
  3184: 95 88 00 f0 ff 00        a1 = a1 + 0xfff000
  3190: 33 0b ff ef ff 00        a4 = 0xffefff
  3196: 01                       fallthrough
      :                          @212
  3197: 82 8c                    a5 = u64 [a1]
  3199: c8 7c 0a                 a3 = a5 + a0
  3202: ac ca 5f                 jump @220 if a3 <u a5
      :                          @213
  3205: 95 a5 01                 s0 = a3 + 0x1
  3208: 88 56 01                 s1 = s0 <u 0x1
  3211: d8 5b 05                 s0 = a4 <u s0
  3214: d4 65 05                 s0 = s0 | s1
  3217: 52 05 50                 jump @220 if s0 != 0
      :                          @214
  3220: 82 86                    s1 = u64 [a1]
  3222: ab c6 e7                 jump @212 if s1 != a5
      :                          @215
  3225: 7b 8a                    u64 [a1] = a3
  3227: 33 08 3f f0 02 01        a1 = 0x102f03f
  3233: c9 a8 08                 a1 = a1 - a3
  3236: 64 25                    s0 = t0
  3238: 28 06                    jump @217
      :                          @216
  3240: 33 08 01                 a1 = 0x1
  3243: 01                       fallthrough
      :                          @217
  3244: 7b 17                    u64 [sp] = a0
  3246: 7b 18 08                 u64 [sp + 0x8] = a1
  3249: 49 11 10                 u64 [sp + 16] = 0
  3252: 33 08 18 01 01           a1 = 0x10118
  3257: 64 17                    a0 = sp
  3259: 50 10 32 26 06           ra = 50, jump @334
      :                          @218 [@dyn 25]
  3264: 52 07 22                 jump @221 if a0 != 0
      :                          @219
  3267: 82 17 10                 a0 = u64 [sp + 0x10]
  3270: 82 18 08                 a1 = u64 [sp + 0x8]
  3273: 82 19                    a2 = u64 [sp]
  3275: 7b 57 10                 u64 [s0 + 0x10] = a0
  3278: 7b 58 08                 u64 [s0 + 0x8] = a1
  3281: 7b 59                    u64 [s0] = a2
  3283: 82 10 30                 ra = u64 [sp + 0x30]
  3286: 82 15 28                 s0 = u64 [sp + 0x28]
  3289: 82 16 20                 s1 = u64 [sp + 0x20]
  3292: 95 11 38                 sp = sp + 0x38
  3295: 32 00                    ret
      :                          @220
  3297: 00                       trap
      :                          @221
  3298: 00                       trap
      :                          @222
  3299: 00                       trap
      :                          @223 [@dyn 26]
  3300: 82 72                    t0 = u64 [a0]
  3302: 95 2a 00 10 00 ff        a3 = t0 + 0xffffffffff001000
  3308: 33 09 01 10 00 ff        a2 = 0xffffffffff001001
  3314: ac 9a 32                 jump @229 if a3 <u a2
      :                          @224
  3317: 82 73 08                 t1 = u64 [a0 + 0x8]
  3320: 33 04 40 00 03           t2 = 0x30040
  3325: 95 4a 00 f0 ff 00        a3 = t2 + 0xfff000
  3331: 33 0b ff ef ff 00        a4 = 0xffefff
  3337: 01                       fallthrough
      :                          @225
  3338: 82 ac                    a5 = u64 [a3]
  3340: c8 b4 09                 a2 = t2 + a4
  3343: c9 c9 09                 a2 = a2 - a5
  3346: ab 39 12                 jump @229 if a2 != t1
      :                          @226
  3349: c9 2c 09                 a2 = a5 - t0
  3352: 01                       fallthrough
      :                          @227
  3353: 82 a7                    a0 = u64 [a3]
  3355: ab c7 ef                 jump @225 if a0 != a5
      :                          @228
  3358: 7b a9                    u64 [a3] = a2
  3360: 33 08                    a1 = 0
  3362: 32 00                    ret
      :                          @229
  3364: 32 00                    ret
      :                          @230 [@dyn 27]
  3366: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3369: 7b 10 18                 u64 [sp + 0x18] = ra
  3372: 7b 15 10                 u64 [sp + 0x10] = s0
  3375: 7b 16 08                 u64 [sp + 0x8] = s1
  3378: 64 75                    s0 = a0
  3380: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3383: 82 77                    a0 = u64 [a0]
  3385: c9 a7 07                 a0 = a0 - a3
  3388: 64 96                    s1 = a2
  3390: ac 97 2a                 jump @233 if a0 <u a2
      :                          @231
  3393: 7b 1a                    u64 [sp] = a3
  3395: 82 57 08                 a0 = u64 [s0 + 0x8]
  3398: c8 a7 07                 a0 = a0 + a3
  3401: 64 69                    a2 = s1
  3403: 50 10 38 4a 01           ra = 56, jump @252
      :                          @232 [@dyn 28]
  3408: 82 17                    a0 = u64 [sp]
  3410: c8 76 06                 s1 = s1 + a0
  3413: 7b 56 10                 u64 [s0 + 0x10] = s1
  3416: 33 07                    a0 = 0
  3418: 82 10 18                 ra = u64 [sp + 0x18]
  3421: 82 15 10                 s0 = u64 [sp + 0x10]
  3424: 82 16 08                 s1 = u64 [sp + 0x8]
  3427: 95 11 20                 sp = sp + 0x20
  3430: 32 00                    ret
      :                          @233
  3432: 64 57                    a0 = s0
  3434: 7b 18                    u64 [sp] = a1
  3436: 64 a8                    a1 = a3
  3438: 64 69                    a2 = s1
  3440: 50 10 3a 45 fc           ra = 58, jump @146
      :                          @234 [@dyn 29]
  3445: 82 18                    a1 = u64 [sp]
  3447: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3450: 28 c7                    jump @231
      :                          @235 [@dyn 30]
  3452: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3455: 7b 10 20                 u64 [sp + 0x20] = ra
  3458: 7b 15 18                 u64 [sp + 0x18] = s0
  3461: 7b 16 10                 u64 [sp + 0x10] = s1
  3464: 64 86                    s1 = a1
  3466: 83 88                    i32 a1 = a1 + 0
  3468: 33 09 80 00              a2 = 0x80
  3472: 64 7a                    a3 = a0
  3474: ae 98 2b                 jump @240 if a1 >=u a2
      :                          @236
  3477: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3480: 82 a7                    a0 = u64 [a3]
  3482: ab 78 12                 jump @239 if a1 != a0
      :                          @237
  3485: 64 a7                    a0 = a3
  3487: 64 a5                    s0 = a3
  3489: 50 10 3e f7 fd           ra = 62, jump @190
      :                          @238 [@dyn 31]
  3494: 64 5a                    a3 = s0
  3496: 82 58 10                 a1 = u64 [s0 + 0x10]
  3499: 01                       fallthrough
      :                          @239
  3500: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3503: c8 87 07                 a0 = a0 + a1
  3506: 78 76                    u8 [a0] = s1
  3508: 95 88 01                 a1 = a1 + 0x1
  3511: 7b a8 10                 u64 [a3 + 0x10] = a1
  3514: 28 ab 00                 jump @248
      :                          @240
  3517: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3520: 48 11 0c                 u32 [sp + 12] = 0
  3523: 52 07 1c                 jump @242 if a0 != 0
      :                          @241
  3526: 98 67 06                 a0 = s1 >> 0x6
  3529: 86 77 c0 00              a0 = a0 | 0xc0
  3533: 78 17 0c                 u8 [sp + 0xc] = a0
  3536: 84 67 3f                 a0 = s1 & 0x3f
  3539: 86 77 80 00              a0 = a0 | 0x80
  3543: 78 17 0d                 u8 [sp + 0xd] = a0
  3546: 33 06 02                 s1 = 0x2
  3549: 28 63                    jump @245
      :                          @242
  3551: 8b 67 10                 i32 a0 = s1 >> 0x10
  3554: 52 07 29                 jump @244 if a0 != 0
      :                          @243
  3557: 98 67 0c                 a0 = s1 >> 0xc
  3560: 86 77 e0 00              a0 = a0 | 0xe0
  3564: 78 17 0c                 u8 [sp + 0xc] = a0
  3567: 97 67 34                 a0 = s1 << 0x34
  3570: 98 77 3a                 a0 = a0 >> 0x3a
  3573: 95 77 80 00              a0 = a0 + 0x80
  3577: 78 17 0d                 u8 [sp + 0xd] = a0
  3580: 84 67 3f                 a0 = s1 & 0x3f
  3583: 86 77 80 00              a0 = a0 | 0x80
  3587: 78 17 0e                 u8 [sp + 0xe] = a0
  3590: 33 06 03                 s1 = 0x3
  3593: 28 37                    jump @245
      :                          @244
  3595: 97 67 2b                 a0 = s1 << 0x2b
  3598: 98 77 3d                 a0 = a0 >> 0x3d
  3601: 95 77 f0 00              a0 = a0 + 0xf0
  3605: 78 17 0c                 u8 [sp + 0xc] = a0
  3608: 97 67 2e                 a0 = s1 << 0x2e
  3611: 98 77 3a                 a0 = a0 >> 0x3a
  3614: 95 77 80 00              a0 = a0 + 0x80
  3618: 78 17 0d                 u8 [sp + 0xd] = a0
  3621: 97 67 34                 a0 = s1 << 0x34
  3624: 98 77 3a                 a0 = a0 >> 0x3a
  3627: 95 77 80 00              a0 = a0 + 0x80
  3631: 78 17 0e                 u8 [sp + 0xe] = a0
  3634: 84 67 3f                 a0 = s1 & 0x3f
  3637: 86 77 80 00              a0 = a0 | 0x80
  3641: 78 17 0f                 u8 [sp + 0xf] = a0
  3644: 33 06 04                 s1 = 0x4
  3647: 01                       fallthrough
      :                          @245
  3648: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3651: 82 a7                    a0 = u64 [a3]
  3653: c9 57 07                 a0 = a0 - s0
  3656: ac 67 2d                 jump @249 if a0 <u s1
      :                          @246
  3659: 7b 1a                    u64 [sp] = a3
  3661: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3664: c8 57 07                 a0 = a0 + s0
  3667: 95 18 0c                 a1 = sp + 0xc
  3670: 64 69                    a2 = s1
  3672: 50 10 40 3d              ra = 64, jump @252
      :                          @247 [@dyn 32]
  3676: c8 56 06                 s1 = s1 + s0
  3679: 82 17                    a0 = u64 [sp]
  3681: 7b 76 10                 u64 [a0 + 0x10] = s1
  3684: 01                       fallthrough
      :                          @248
  3685: 33 07                    a0 = 0
  3687: 82 10 20                 ra = u64 [sp + 0x20]
  3690: 82 15 18                 s0 = u64 [sp + 0x18]
  3693: 82 16 10                 s1 = u64 [sp + 0x10]
  3696: 95 11 28                 sp = sp + 0x28
  3699: 32 00                    ret
      :                          @249
  3701: 64 a7                    a0 = a3
  3703: 64 58                    a1 = s0
  3705: 64 69                    a2 = s1
  3707: 64 a5                    s0 = a3
  3709: 50 10 42 38 fb           ra = 66, jump @146
      :                          @250 [@dyn 33]
  3714: 64 5a                    a3 = s0
  3716: 82 55 10                 s0 = u64 [s0 + 0x10]
  3719: 28 c4                    jump @246
      :                          @251 [@dyn 34]
  3721: 64 8a                    a3 = a1
  3723: 33 08 18 01 01           a1 = 0x10118
  3728: 64 a9                    a2 = a3
  3730: 28 4f 04                 jump @334
      :                          @252
  3733: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3736: 7b 10 18                 u64 [sp + 0x18] = ra
  3739: 7b 15 10                 u64 [sp + 0x10] = s0
  3742: 7b 16 08                 u64 [sp + 0x8] = s1
  3745: 53 19 10 64              jump @261 if a2 <u 16
      :                          @253
  3749: 8d 7a                    i32 a3 = -a0
  3751: 84 a2 07                 t0 = a3 & 0x7
  3754: c8 27 0b                 a4 = a0 + t0
  3757: 51 02 15                 jump @256 if t0 == 0
      :                          @254
  3760: 64 8c                    a5 = a1
  3762: 64 75                    s0 = a0
  3764: 01                       fallthrough
      :                          @255
  3765: 7c ca                    a3 = u8 [a5]
  3767: 78 5a                    u8 [s0] = a3
  3769: 95 55 01                 s0 = s0 + 0x1
  3772: 95 cc 01                 a5 = a5 + 0x1
  3775: ac b5 f6                 jump @255 if s0 <u a4
      :                          @256
  3778: c8 28 03                 t1 = a1 + t0
  3781: c9 29 02                 t0 = a2 - t0
  3784: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3787: 84 38 07                 a1 = t1 & 0x7
  3790: c8 4b 0a                 a3 = a4 + t2
  3793: 51 08 3b                 jump @263 if a1 == 0
      :                          @257
  3796: 58 04 4b                 jump @266 if t2 <=s 0
      :                          @258
  3799: 97 38 03                 a1 = t1 << 0x3
  3802: 84 80 38                 ra = a1 & 0x38
  3805: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3808: 82 c5                    s0 = u64 [a5]
  3810: 8d 88                    i32 a1 = -a1
  3812: 84 88 38                 a1 = a1 & 0x38
  3815: 95 cc 08                 a5 = a5 + 0x8
  3818: 01                       fallthrough
      :                          @259
  3819: 82 c6                    s1 = u64 [a5]
  3821: d0 05 05                 s0 = s0 >> ra
  3824: cf 86 09                 a2 = s1 << a1
  3827: d4 59 09                 a2 = a2 | s0
  3830: 7b b9                    u64 [a4] = a2
  3832: 95 bb 08                 a4 = a4 + 0x8
  3835: 95 cc 08                 a5 = a5 + 0x8
  3838: 64 65                    s0 = s1
  3840: ac ab eb                 jump @259 if a4 <u a3
      :                          @260
  3843: 28 1c                    jump @266
      :                          @261
  3845: 64 7a                    a3 = a0
  3847: 52 09 21                 jump @267 if a2 != 0
      :                          @262
  3850: 28 2f                    jump @269
      :                          @263
  3852: 58 04 13                 jump @266 if t2 <=s 0
      :                          @264
  3855: 64 38                    a1 = t1
  3857: 01                       fallthrough
      :                          @265
  3858: 82 89                    a2 = u64 [a1]
  3860: 7b b9                    u64 [a4] = a2
  3862: 95 bb 08                 a4 = a4 + 0x8
  3865: 95 88 08                 a1 = a1 + 0x8
  3868: ac ab f6                 jump @265 if a4 <u a3
      :                          @266
  3871: c8 43 08                 a1 = t1 + t2
  3874: 84 29 07                 a2 = t0 & 0x7
  3877: 51 09 14                 jump @269 if a2 == 0
      :                          @267
  3880: c8 a9 09                 a2 = a2 + a3
  3883: 01                       fallthrough
      :                          @268
  3884: 7c 8b                    a4 = u8 [a1]
  3886: 78 ab                    u8 [a3] = a4
  3888: 95 aa 01                 a3 = a3 + 0x1
  3891: 95 88 01                 a1 = a1 + 0x1
  3894: ac 9a f6                 jump @268 if a3 <u a2
      :                          @269
  3897: 82 10 18                 ra = u64 [sp + 0x18]
  3900: 82 15 10                 s0 = u64 [sp + 0x10]
  3903: 82 16 08                 s1 = u64 [sp + 0x8]
  3906: 95 11 20                 sp = sp + 0x20
  3909: 32 00                    ret
      :                          @270 [@dyn 35]
  3911: 82 77                    a0 = u64 [a0]
  3913: 01                       fallthrough
      :                          @271
  3914: 28                       jump @271
      :                          @272
  3915: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3918: 7b 10 50                 u64 [sp + 0x50] = ra
  3921: 7b 15 48                 u64 [sp + 0x48] = s0
  3924: 7b 16 40                 u64 [sp + 0x40] = s1
  3927: 7b 18                    u64 [sp] = a1
  3929: 98 79 04                 a2 = a0 >> 0x4
  3932: 33 08 27                 a1 = 0x27
  3935: 53 29 71 02 81 00        jump @275 if a2 <u 625
      :                          @273
  3941: 33 08 27                 a1 = 0x27
  3944: 95 1a 3e                 a3 = sp + 0x3e
  3947: 3a 09 00 00 03           a2 = u64 [0x30000]
  3952: 7b 19 10                 u64 [sp + 0x10] = a2
  3955: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3961: 33 04 7b 14              t2 = 0x147b
  3965: 33 0b 8c 01 01           a4 = 0x1018c
  3970: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3976: 01                       fallthrough
      :                          @274
  3977: 64 72                    t0 = a0
  3979: 82 17 10                 a0 = u64 [sp + 0x10]
  3982: d6 72 07                 a0 = t0 mulhu a0
  3985: 98 77 0b                 a0 = a0 >> 0xb
  3988: 82 19 08                 a2 = u64 [sp + 0x8]
  3991: c0 97 0c                 i32 a5 = a0 * a2
  3994: c8 2c 06                 s1 = a5 + t0
  3997: 97 6c 30                 a5 = s1 << 0x30
  4000: 98 cc 32                 a5 = a5 >> 0x32
  4003: ca 4c 0c                 a5 = a5 * t2
  4006: 98 c3 11                 t1 = a5 >> 0x11
  4009: 98 cc 10                 a5 = a5 >> 0x10
  4012: 84 cc fe 07              a5 = a5 & 0x7fe
  4016: 96 39 9c                 a2 = t1 * 0xffffffffffffff9c
  4019: c8 69 09                 a2 = a2 + s1
  4022: 97 99 31                 a2 = a2 << 0x31
  4025: 98 99 30                 a2 = a2 >> 0x30
  4028: c8 bc 0c                 a5 = a5 + a4
  4031: 7c c6                    s1 = u8 [a5]
  4033: 7c cc 01                 a5 = u8 [a5 + 0x1]
  4036: c8 b9 09                 a2 = a2 + a4
  4039: 7c 95 01                 s0 = u8 [a2 + 0x1]
  4042: 7c 99                    a2 = u8 [a2]
  4044: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
  4047: 78 a6 fe                 u8 [a3 + 0xfffffffffffffffe] = s1
  4050: 78 a5 01                 u8 [a3 + 0x1] = s0
  4053: 78 a9                    u8 [a3] = a2
  4055: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  4058: 95 aa fc                 a3 = a3 + 0xfffffffffffffffc
  4061: ac 20 ac                 jump @274 if ra <u t0
      :                          @275
  4064: 54 17 63 3b              jump @277 if a0 <=u 99
      :                          @276
  4068: 97 79 30                 a2 = a0 << 0x30
  4071: 98 99 32                 a2 = a2 >> 0x32
  4074: 96 99 7b 14              a2 = a2 * 0x147b
  4078: 98 99 11                 a2 = a2 >> 0x11
  4081: 96 9a 9c                 a3 = a2 * 0xffffffffffffff9c
  4084: c8 a7 07                 a0 = a0 + a3
  4087: 97 77 31                 a0 = a0 << 0x31
  4090: 98 77 30                 a0 = a0 >> 0x30
  4093: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4096: 33 0a 8c 01 01           a3 = 0x1018c
  4101: c8 a7 07                 a0 = a0 + a3
  4104: 7c 7a 01                 a3 = u8 [a0 + 0x1]
  4107: 7c 77                    a0 = u8 [a0]
  4109: 95 1b 19                 a4 = sp + 0x19
  4112: c8 8b 0b                 a4 = a4 + a1
  4115: 78 ba 01                 u8 [a4 + 0x1] = a3
  4118: 78 b7                    u8 [a4] = a0
  4120: 64 97                    a0 = a2
  4122: 01                       fallthrough
      :                          @277
  4123: 55 17 0a 14              jump @279 if a0 >=u 10
      :                          @278
  4127: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4130: 95 19 19                 a2 = sp + 0x19
  4133: c8 89 09                 a2 = a2 + a1
  4136: 83 77 30                 i32 a0 = a0 + 0x30
  4139: 78 97                    u8 [a2] = a0
  4141: 28 21                    jump @280
      :                          @279
  4143: 97 77 01                 a0 = a0 << 0x1
  4146: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  4149: 33 09 8c 01 01           a2 = 0x1018c
  4154: c8 97 07                 a0 = a0 + a2
  4157: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4160: 7c 77                    a0 = u8 [a0]
  4162: 95 1a 19                 a3 = sp + 0x19
  4165: c8 8a 0a                 a3 = a3 + a1
  4168: 78 a9 01                 u8 [a3 + 0x1] = a2
  4171: 78 a7                    u8 [a3] = a0
  4173: 01                       fallthrough
      :                          @280
  4174: 95 1a 19                 a3 = sp + 0x19
  4177: c8 8a 0a                 a3 = a3 + a1
  4180: 9a 8b 27                 a4 = 0x27 - a1
  4183: 33 08 48 01 01           a1 = 0x10148
  4188: 82 17                    a0 = u64 [sp]
  4190: 33 09                    a2 = 0
  4192: 50 10 48 12              ra = 72, jump @282
      :                          @281 [@dyn 36]
  4196: 82 10 50                 ra = u64 [sp + 0x50]
  4199: 82 15 48                 s0 = u64 [sp + 0x48]
  4202: 82 16 40                 s1 = u64 [sp + 0x40]
  4205: 95 11 58                 sp = sp + 0x58
  4208: 32 00                    ret
      :                          @282
  4210: 95 11 98                 sp = sp + 0xffffffffffffff98
  4213: 7b 10 60                 u64 [sp + 0x60] = ra
  4216: 7b 15 58                 u64 [sp + 0x58] = s0
  4219: 7b 16 50                 u64 [sp + 0x50] = s1
  4222: 80 73 34                 t1 = u32 [a0 + 0x34]
  4225: 7b 1a 20                 u64 [sp + 0x20] = a3
  4228: 64 9c                    a5 = a2
  4230: 84 36 01                 s1 = t1 & 0x1
  4233: 33 02 2b                 t0 = 0x2b
  4236: 33 09 00 00 11           a2 = 0x110000
  4241: 84 3a 04                 a3 = t1 & 0x4
  4244: 7b 1b 28                 u64 [sp + 0x28] = a4
  4247: c8 b6 04                 t2 = s1 + a4
  4250: 7b 1c 30                 u64 [sp + 0x30] = a5
  4253: 52 0a 10                 jump @285 if a3 != 0
      :                          @283
  4256: 49 11 38                 u64 [sp + 56] = 0
  4259: 82 78                    a1 = u64 [a0]
  4261: 94 69 2b                 a2 = 0x2b if s1 != 0
  4264: 52 08 35                 jump @289 if a1 != 0
      :                          @284
  4267: 28 56                    jump @294
      :                          @285
  4269: 7b 18 38                 u64 [sp + 0x38] = a1
  4272: 33 09                    a2 = 0
  4274: 51 0c 1b                 jump @288 if a5 == 0
      :                          @286
  4277: 82 1b 38                 a4 = u64 [sp + 0x38]
  4280: 01                       fallthrough
      :                          @287
  4281: 7d b5                    s0 = i8 [a4]
  4283: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4286: 85 5a 01                 a3 = s0 ^ 0x1
  4289: c8 a9 09                 a2 = a2 + a3
  4292: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4295: 95 bb 01                 a4 = a4 + 0x1
  4298: 52 0c ef                 jump @287 if a5 != 0
      :                          @288
  4301: c8 94 04                 t2 = t2 + a2
  4304: 33 09 00 00 11           a2 = 0x110000
  4309: 82 78                    a1 = u64 [a0]
  4311: db 62 09                 a2 = t0 if s1 != 0
  4314: 51 08 27                 jump @294 if a1 == 0
      :                          @289
  4317: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4320: ae a4 21                 jump @294 if t2 >=u a3
      :                          @290
  4323: 84 38 08                 a1 = t1 & 0x8
  4326: 52 08 50                 jump @297 if a1 != 0
      :                          @291
  4329: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4332: c9 4a 0a                 a3 = a3 - t2
  4335: 7b 19 18                 u64 [sp + 0x18] = a2
  4338: 5a 16 01 9d 00           jump @304 if s1 >s 1
      :                          @292
  4343: 52 06 aa 00              jump @306 if s1 != 0
      :                          @293
  4347: 7b 1a 10                 u64 [sp + 0x10] = a3
  4350: 28 a9 00                 jump @307
      :                          @294
  4353: 82 75 20                 s0 = u64 [a0 + 0x20]
  4356: 82 76 28                 s1 = u64 [a0 + 0x28]
  4359: 64 57                    a0 = s0
  4361: 64 68                    a1 = s1
  4363: 82 1a 38                 a3 = u64 [sp + 0x38]
  4366: 82 1b 30                 a4 = u64 [sp + 0x30]
  4369: 50 10 4a 6c 01           ra = 74, jump @327
      :                          @295 [@dyn 37]
  4374: 33 08 01                 a1 = 0x1
  4377: 52 07 bb 00              jump @312 if a0 != 0
      :                          @296
  4381: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4384: 64 57                    a0 = s0
  4386: 82 18 20                 a1 = u64 [sp + 0x20]
  4389: 82 19 28                 a2 = u64 [sp + 0x28]
  4392: 82 10 60                 ra = u64 [sp + 0x60]
  4395: 82 15 58                 s0 = u64 [sp + 0x58]
  4398: 82 16 50                 s1 = u64 [sp + 0x50]
  4401: 95 11 68                 sp = sp + 0x68
  4404: 32 0c                    jump [a5]
      :                          @297
  4406: 7b 1a 40                 u64 [sp + 0x40] = a3
  4409: 64 45                    s0 = t2
  4411: 81 78 30                 a1 = i32 [a0 + 0x30]
  4414: 7b 18 10                 u64 [sp + 0x10] = a1
  4417: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4420: 7b 1a 08                 u64 [sp + 0x8] = a3
  4423: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4426: 82 78 28                 a1 = u64 [a0 + 0x28]
  4429: 48 17 30 30              u32 [a0 + 48] = 0x30
  4433: 7b 17                    u64 [sp] = a0
  4435: 46 17 38 01              u8 [a0 + 56] = 0x1
  4439: 7b 1a 48                 u64 [sp + 0x48] = a3
  4442: 64 a7                    a0 = a3
  4444: 64 86                    s1 = a1
  4446: 82 1a 38                 a3 = u64 [sp + 0x38]
  4449: 82 1b 30                 a4 = u64 [sp + 0x30]
  4452: 50 10 4c 19 01           ra = 76, jump @327
      :                          @298 [@dyn 38]
  4457: 52 07 67                 jump @311 if a0 != 0
      :                          @299
  4460: 82 17 40                 a0 = u64 [sp + 0x40]
  4463: c9 57 05                 s0 = a0 - s0
  4466: 95 55 01                 s0 = s0 + 0x1
  4469: 01                       fallthrough
      :                          @300
  4470: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4473: 51 05 c6 00              jump @322 if s0 == 0
      :                          @301
  4477: 82 69 20                 a2 = u64 [s1 + 0x20]
  4480: 33 08 30                 a1 = 0x30
  4483: 82 17 48                 a0 = u64 [sp + 0x48]
  4486: b4 90 01 4e              ra = 78, jump [a2]
      :                          @302 [@dyn 39]
  4490: 51 07 ec                 jump @300 if a0 == 0
      :                          @303
  4493: 28 43                    jump @311
      :                          @304
  4495: 52 16 02 12              jump @306 if s1 != 2
      :                          @305
  4499: 98 a6 01                 s1 = a3 >> 0x1
  4502: 95 a8 01                 a1 = a3 + 0x1
  4505: 98 88 01                 a1 = a1 >> 0x1
  4508: 7b 18 10                 u64 [sp + 0x10] = a1
  4511: 28 08                    jump @307
      :                          @306
  4513: 64 a6                    s1 = a3
  4515: 49 11 10                 u64 [sp + 16] = 0
  4518: 01                       fallthrough
      :                          @307
  4519: 82 78 20                 a1 = u64 [a0 + 0x20]
  4522: 7b 18 48                 u64 [sp + 0x48] = a1
  4525: 82 75 28                 s0 = u64 [a0 + 0x28]
  4528: 81 77 30                 a0 = i32 [a0 + 0x30]
  4531: 7b 17 40                 u64 [sp + 0x40] = a0
  4534: 95 66 01                 s1 = s1 + 0x1
  4537: 01                       fallthrough
      :                          @308
  4538: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4541: 51 06 27                 jump @313 if s1 == 0
      :                          @309
  4544: 82 59 20                 a2 = u64 [s0 + 0x20]
  4547: 82 17 48                 a0 = u64 [sp + 0x48]
  4550: 82 18 40                 a1 = u64 [sp + 0x40]
  4553: b4 90 01 50              ra = 80, jump [a2]
      :                          @310 [@dyn 40]
  4557: 51 07 ed                 jump @308 if a0 == 0
      :                          @311
  4560: 33 08 01                 a1 = 0x1
  4563: 01                       fallthrough
      :                          @312
  4564: 64 87                    a0 = a1
  4566: 82 10 60                 ra = u64 [sp + 0x60]
  4569: 82 15 58                 s0 = u64 [sp + 0x58]
  4572: 82 16 50                 s1 = u64 [sp + 0x50]
  4575: 95 11 68                 sp = sp + 0x68
  4578: 32 00                    ret
      :                          @313
  4580: 82 16 48                 s1 = u64 [sp + 0x48]
  4583: 64 67                    a0 = s1
  4585: 64 58                    a1 = s0
  4587: 82 19 18                 a2 = u64 [sp + 0x18]
  4590: 82 1a 38                 a3 = u64 [sp + 0x38]
  4593: 82 1b 30                 a4 = u64 [sp + 0x30]
  4596: 50 10 52 89 00           ra = 82, jump @327
      :                          @314 [@dyn 41]
  4601: 33 08 01                 a1 = 0x1
  4604: 52 07 d8                 jump @312 if a0 != 0
      :                          @315
  4607: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4610: 64 67                    a0 = s1
  4612: 82 18 20                 a1 = u64 [sp + 0x20]
  4615: 82 19 28                 a2 = u64 [sp + 0x28]
  4618: b4 a0 01 54              ra = 84, jump [a3]
      :                          @316 [@dyn 42]
  4622: 33 08 01                 a1 = 0x1
  4625: 52 07 c3                 jump @312 if a0 != 0
      :                          @317
  4628: 82 17 10                 a0 = u64 [sp + 0x10]
  4631: 9a 77                    a0 = -a0
  4633: 7b 17 38                 u64 [sp + 0x38] = a0
  4636: 33 06 ff                 s1 = 0xffffffffffffffff
  4639: 01                       fallthrough
      :                          @318
  4640: 82 17 38                 a0 = u64 [sp + 0x38]
  4643: c8 67 07                 a0 = a0 + s1
  4646: 51 17 ff 42              jump @325 if a0 == 4294967295
      :                          @319
  4650: 82 59 20                 a2 = u64 [s0 + 0x20]
  4653: 82 17 48                 a0 = u64 [sp + 0x48]
  4656: 82 18 40                 a1 = u64 [sp + 0x40]
  4659: b4 90 01 56              ra = 86, jump [a2]
      :                          @320 [@dyn 43]
  4663: 95 66 01                 s1 = s1 + 0x1
  4666: 51 07 e6                 jump @318 if a0 == 0
      :                          @321
  4669: 28 37                    jump @326
      :                          @322
  4671: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4674: 82 17 48                 a0 = u64 [sp + 0x48]
  4677: 82 18 20                 a1 = u64 [sp + 0x20]
  4680: 82 19 28                 a2 = u64 [sp + 0x28]
  4683: b4 a0 01 58              ra = 88, jump [a3]
      :                          @323 [@dyn 44]
  4687: 33 08 01                 a1 = 0x1
  4690: 52 07 82                 jump @312 if a0 != 0
      :                          @324
  4693: 33 08                    a1 = 0
  4695: 82 16                    s1 = u64 [sp]
  4697: 82 17 10                 a0 = u64 [sp + 0x10]
  4700: 7a 67 30                 u32 [s1 + 0x30] = a0
  4703: 82 17 08                 a0 = u64 [sp + 0x8]
  4706: 78 67 38                 u8 [s1 + 0x38] = a0
  4709: 28 6f ff                 jump @312
      :                          @325
  4712: 82 16 10                 s1 = u64 [sp + 0x10]
  4715: 82 17 10                 a0 = u64 [sp + 0x10]
  4718: d8 76 08                 a1 = s1 <u a0
  4721: 28 63 ff                 jump @312
      :                          @326
  4724: 82 17 10                 a0 = u64 [sp + 0x10]
  4727: d8 76 08                 a1 = s1 <u a0
  4730: 28 5a ff                 jump @312
      :                          @327
  4733: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4736: 7b 10 20                 u64 [sp + 0x20] = ra
  4739: 7b 15 18                 u64 [sp + 0x18] = s0
  4742: 7b 16 10                 u64 [sp + 0x10] = s1
  4745: 83 9c                    i32 a5 = a2 + 0
  4747: 33 02 00 00 11           t0 = 0x110000
  4752: 64 a6                    s1 = a3
  4754: 64 85                    s0 = a1
  4756: 64 7a                    a3 = a0
  4758: aa 2c 20                 jump @330 if a5 == t0
      :                          @328
  4761: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4764: 64 a7                    a0 = a3
  4766: 64 98                    a1 = a2
  4768: 7b 1b 08                 u64 [sp + 0x8] = a4
  4771: 7b 1a                    u64 [sp] = a3
  4773: b4 c0 01 5a              ra = 90, jump [a5]
      :                          @329 [@dyn 45]
  4777: 82 1a                    a3 = u64 [sp]
  4779: 82 1b 08                 a4 = u64 [sp + 0x8]
  4782: 64 78                    a1 = a0
  4784: 33 07 01                 a0 = 0x1
  4787: 52 08 20                 jump @333 if a1 != 0
      :                          @330
  4790: 51 06 1a                 jump @332 if s1 == 0
      :                          @331
  4793: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4796: 64 a7                    a0 = a3
  4798: 64 68                    a1 = s1
  4800: 64 b9                    a2 = a4
  4802: 82 10 20                 ra = u64 [sp + 0x20]
  4805: 82 15 18                 s0 = u64 [sp + 0x18]
  4808: 82 16 10                 s1 = u64 [sp + 0x10]
  4811: 95 11 28                 sp = sp + 0x28
  4814: 32 0c                    jump [a5]
      :                          @332
  4816: 33 07                    a0 = 0
  4818: 01                       fallthrough
      :                          @333
  4819: 82 10 20                 ra = u64 [sp + 0x20]
  4822: 82 15 18                 s0 = u64 [sp + 0x18]
  4825: 82 16 10                 s1 = u64 [sp + 0x10]
  4828: 95 11 28                 sp = sp + 0x28
  4831: 32 00                    ret
      :                          @334
  4833: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4837: 7b 10 80 00              u64 [sp + 0x80] = ra
  4841: 7b 15 78                 u64 [sp + 0x78] = s0
  4844: 7b 16 70                 u64 [sp + 0x70] = s1
  4847: 49 11 60 20              u64 [sp + 96] = 0x20
  4851: 33 0a 03                 a3 = 0x3
  4854: 78 1a 68                 u8 [sp + 0x68] = a3
  4857: 82 96 20                 s1 = u64 [a2 + 0x20]
  4860: 49 11 30                 u64 [sp + 48] = 0
  4863: 49 11 40                 u64 [sp + 64] = 0
  4866: 7b 17 50                 u64 [sp + 0x50] = a0
  4869: 7b 18 58                 u64 [sp + 0x58] = a1
  4872: 51 06 07 01              jump @356 if s1 == 0
      :                          @335
  4876: 82 97 28                 a0 = u64 [a2 + 0x28]
  4879: 51 07 74 01              jump @366 if a0 == 0
      :                          @336
  4883: 49 11 28                 u64 [sp + 40] = 0
  4886: 82 95                    s0 = u64 [a2]
  4888: 7b 19 08                 u64 [sp + 0x8] = a2
  4891: 82 98 10                 a1 = u64 [a2 + 0x10]
  4894: 7b 18 18                 u64 [sp + 0x18] = a1
  4897: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4900: 97 88 03                 a1 = a1 << 0x3
  4903: 98 88 03                 a1 = a1 >> 0x3
  4906: 95 88 01                 a1 = a1 + 0x1
  4909: 7b 18                    u64 [sp] = a1
  4911: 95 55 08                 s0 = s0 + 0x8
  4914: 96 78 38                 a1 = a0 * 0x38
  4917: 95 66 18                 s1 = s1 + 0x18
  4920: 33 07 46                 a0 = 0x46
  4923: 7b 17 10                 u64 [sp + 0x10] = a0
  4926: 01                       fallthrough
      :                          @337
  4927: 7b 18 20                 u64 [sp + 0x20] = a1
  4930: 82 59                    a2 = u64 [s0]
  4932: 51 09 17                 jump @340 if a2 == 0
      :                          @338
  4935: 82 1a 58                 a3 = u64 [sp + 0x58]
  4938: 82 17 50                 a0 = u64 [sp + 0x50]
  4941: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4944: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4947: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @339 [@dyn 46]
  4951: 52 07 51 01              jump @369 if a0 != 0
      :                          @340
  4955: 81 67 10                 a0 = i32 [s1 + 0x10]
  4958: 7a 17 60                 u32 [sp + 0x60] = a0
  4961: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4964: 78 17 68                 u8 [sp + 0x68] = a0
  4967: 81 67 14                 a0 = i32 [s1 + 0x14]
  4970: 7a 17 64                 u32 [sp + 0x64] = a0
  4973: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4976: 82 67                    a0 = u64 [s1]
  4978: 51 08 26                 jump @345 if a1 == 0
      :                          @341
  4981: 52 18 01 16              jump @343 if a1 != 1
      :                          @342
  4985: 97 77 04                 a0 = a0 << 0x4
  4988: 82 18 18                 a1 = u64 [sp + 0x18]
  4991: c8 87 07                 a0 = a0 + a1
  4994: 82 78 08                 a1 = u64 [a0 + 0x8]
  4997: 82 19 10                 a2 = u64 [sp + 0x10]
  5000: aa 98 07                 jump @344 if a1 == a2
      :                          @343
  5003: 33 08                    a1 = 0
  5005: 28 0f                    jump @346
      :                          @344
  5007: 82 77                    a0 = u64 [a0]
  5009: 82 77                    a0 = u64 [a0]
  5011: 33 08 01                 a1 = 0x1
  5014: 28 06                    jump @346
      :                          @345
  5016: 33 08 01                 a1 = 0x1
  5019: 01                       fallthrough
      :                          @346
  5020: 7b 18 30                 u64 [sp + 0x30] = a1
  5023: 7b 17 38                 u64 [sp + 0x38] = a0
  5026: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  5029: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  5032: 51 08 26                 jump @351 if a1 == 0
      :                          @347
  5035: 52 18 01 16              jump @349 if a1 != 1
      :                          @348
  5039: 97 77 04                 a0 = a0 << 0x4
  5042: 82 18 18                 a1 = u64 [sp + 0x18]
  5045: c8 87 07                 a0 = a0 + a1
  5048: 82 78 08                 a1 = u64 [a0 + 0x8]
  5051: 82 19 10                 a2 = u64 [sp + 0x10]
  5054: aa 98 07                 jump @350 if a1 == a2
      :                          @349
  5057: 33 08                    a1 = 0
  5059: 28 0f                    jump @352
      :                          @350
  5061: 82 77                    a0 = u64 [a0]
  5063: 82 77                    a0 = u64 [a0]
  5065: 33 08 01                 a1 = 0x1
  5068: 28 06                    jump @352
      :                          @351
  5070: 33 08 01                 a1 = 0x1
  5073: 01                       fallthrough
      :                          @352
  5074: 7b 18 40                 u64 [sp + 0x40] = a1
  5077: 7b 17 48                 u64 [sp + 0x48] = a0
  5080: 82 67 08                 a0 = u64 [s1 + 0x8]
  5083: 97 77 04                 a0 = a0 << 0x4
  5086: 82 18 18                 a1 = u64 [sp + 0x18]
  5089: c8 78 08                 a1 = a1 + a0
  5092: 82 87                    a0 = u64 [a1]
  5094: 82 89 08                 a2 = u64 [a1 + 0x8]
  5097: 95 18 30                 a1 = sp + 0x30
  5100: b4 90 01 5e              ra = 94, jump [a2]
      :                          @353 [@dyn 47]
  5104: 52 07 b8 00              jump @369 if a0 != 0
      :                          @354
  5108: 95 55 10                 s0 = s0 + 0x10
  5111: 82 18 20                 a1 = u64 [sp + 0x20]
  5114: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  5117: 95 66 38                 s1 = s1 + 0x38
  5120: 82 17 28                 a0 = u64 [sp + 0x28]
  5123: 95 77 01                 a0 = a0 + 0x1
  5126: 7b 17 28                 u64 [sp + 0x28] = a0
  5129: 52 08 36 ff              jump @337 if a1 != 0
      :                          @355
  5133: 28 69                    jump @364
      :                          @356
  5135: 82 97 18                 a0 = u64 [a2 + 0x18]
  5138: 51 07 71                 jump @366 if a0 == 0
      :                          @357
  5141: 82 95 10                 s0 = u64 [a2 + 0x10]
  5144: 33 0a                    a3 = 0
  5146: 97 78 04                 a1 = a0 << 0x4
  5149: c8 58 08                 a1 = a1 + s0
  5152: 7b 18 20                 u64 [sp + 0x20] = a1
  5155: 7b 19 08                 u64 [sp + 0x8] = a2
  5158: 82 96                    s1 = u64 [a2]
  5160: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5163: 97 77 04                 a0 = a0 << 0x4
  5166: 98 77 04                 a0 = a0 >> 0x4
  5169: 95 77 01                 a0 = a0 + 0x1
  5172: 7b 17                    u64 [sp] = a0
  5174: 95 66 08                 s1 = s1 + 0x8
  5177: 01                       fallthrough
      :                          @358
  5178: 7b 1a 28                 u64 [sp + 0x28] = a3
  5181: 82 69                    a2 = u64 [s1]
  5183: 51 09 16                 jump @361 if a2 == 0
      :                          @359
  5186: 82 1a 58                 a3 = u64 [sp + 0x58]
  5189: 82 17 50                 a0 = u64 [sp + 0x50]
  5192: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5195: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5198: b4 a0 01 60              ra = 96, jump [a3]
      :                          @360 [@dyn 48]
  5202: 52 07 56                 jump @369 if a0 != 0
      :                          @361
  5205: 82 57                    a0 = u64 [s0]
  5207: 82 59 08                 a2 = u64 [s0 + 0x8]
  5210: 95 18 30                 a1 = sp + 0x30
  5213: b4 90 01 62              ra = 98, jump [a2]
      :                          @362 [@dyn 49]
  5217: 52 07 47                 jump @369 if a0 != 0
      :                          @363
  5220: 95 66 10                 s1 = s1 + 0x10
  5223: 95 55 10                 s0 = s0 + 0x10
  5226: 82 1a 28                 a3 = u64 [sp + 0x28]
  5229: 95 aa 01                 a3 = a3 + 0x1
  5232: 82 17 20                 a0 = u64 [sp + 0x20]
  5235: ab 75 c7                 jump @358 if s0 != a0
      :                          @364
  5238: 82 19 08                 a2 = u64 [sp + 0x8]
  5241: 82 1a                    a3 = u64 [sp]
  5243: 82 97 08                 a0 = u64 [a2 + 0x8]
  5246: ac 7a 0d                 jump @367 if a3 <u a0
      :                          @365
  5249: 28 2c                    jump @370
      :                          @366
  5251: 33 0a                    a3 = 0
  5253: 82 97 08                 a0 = u64 [a2 + 0x8]
  5256: 54 07 25                 jump @370 if a0 <=u 0
      :                          @367
  5259: 82 97                    a0 = u64 [a2]
  5261: 97 a8 04                 a1 = a3 << 0x4
  5264: c8 87 09                 a2 = a0 + a1
  5267: 82 1a 58                 a3 = u64 [sp + 0x58]
  5270: 82 17 50                 a0 = u64 [sp + 0x50]
  5273: 82 98                    a1 = u64 [a2]
  5275: 82 99 08                 a2 = u64 [a2 + 0x8]
  5278: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5281: b4 a0 01 64              ra = 100, jump [a3]
      :                          @368 [@dyn 50]
  5285: 51 07 08                 jump @370 if a0 == 0
      :                          @369
  5288: 33 07 01                 a0 = 0x1
  5291: 28 05                    jump @371
      :                          @370
  5293: 33 07                    a0 = 0
  5295: 01                       fallthrough
      :                          @371
  5296: 82 10 80 00              ra = u64 [sp + 0x80]
  5300: 82 15 78                 s0 = u64 [sp + 0x78]
  5303: 82 16 70                 s1 = u64 [sp + 0x70]
  5306: 95 11 88 00              sp = sp + 0x88
  5310: 32 00                    ret
      :                          @372 [@dyn 51]
  5312: 32 00                    ret
      :                          @373 [@dyn 52]
  5314: 95 11 80                 sp = sp + 0xffffffffffffff80
  5317: 7b 10 78                 u64 [sp + 0x78] = ra
  5320: 7b 15 70                 u64 [sp + 0x70] = s0
  5323: 7b 16 68                 u64 [sp + 0x68] = s1
  5326: 64 92                    t0 = a2
  5328: 33 00                    ra = 0
  5330: 33 0b                    a4 = 0
  5332: 33 05                    s0 = 0
  5334: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
  5344: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5350: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
  5360: 82 79 10                 a2 = u64 [a0 + 0x10]
  5363: 7b 19 48                 u64 [sp + 0x48] = a2
  5366: 82 79                    a2 = u64 [a0]
  5368: 7b 19 38                 u64 [sp + 0x38] = a2
  5371: 82 77 08                 a0 = u64 [a0 + 0x8]
  5374: 7b 17 30                 u64 [sp + 0x30] = a0
  5377: 33 07 80 01 01           a0 = 0x10180
  5382: 7b 17 08                 u64 [sp + 0x8] = a0
  5385: 3a 07 08 00 03           a0 = u64 [0x30008]
  5390: 7b 17 60                 u64 [sp + 0x60] = a0
  5393: 7b 18 58                 u64 [sp + 0x58] = a1
  5396: 95 88 08                 a1 = a1 + 0x8
  5399: 7b 18                    u64 [sp] = a1
  5401: 33 0c 0a                 a5 = 0xa
  5404: 7b 12 20                 u64 [sp + 0x20] = t0
  5407: 7b 13 18                 u64 [sp + 0x18] = t1
  5410: 7b 14 10                 u64 [sp + 0x10] = t2
  5413: 28 3a                    jump @377
      :                          @374
  5415: 64 06                    s1 = ra
  5417: c8 89 07                 a0 = a2 + a1
  5420: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5423: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5426: 88 77 01                 a0 = a0 <u 0x1
  5429: 01                       fallthrough
      :                          @375
  5430: 82 1a 48                 a3 = u64 [sp + 0x48]
  5433: 78 a7                    u8 [a3] = a0
  5435: 82 17 30                 a0 = u64 [sp + 0x30]
  5438: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5441: 82 17 38                 a0 = u64 [sp + 0x38]
  5444: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @376 [@dyn 53]
  5448: 64 5b                    a4 = s0
  5450: 82 12 20                 t0 = u64 [sp + 0x20]
  5453: 82 13 18                 t1 = u64 [sp + 0x18]
  5456: 82 14 10                 t2 = u64 [sp + 0x10]
  5459: 64 60                    ra = s1
  5461: 33 0c 0a                 a5 = 0xa
  5464: 82 15 40                 s0 = u64 [sp + 0x40]
  5467: 52 07 63 01              jump @418 if a0 != 0
      :                          @377
  5471: 84 57 ff 00              a0 = s0 & 0xff
  5475: 52 07 57 01              jump @417 if a0 != 0
      :                          @378
  5479: 7b 1b 50                 u64 [sp + 0x50] = a4
  5482: ae 02 0a                 jump @381 if t0 >=u ra
      :                          @379
  5485: 28 ef 00                 jump @408
      :                          @380
  5488: ac 02 ec 00              jump @408 if t0 <u ra
      :                          @381
  5492: c9 02 08                 a1 = t0 - ra
  5495: 82 16 58                 s1 = u64 [sp + 0x58]
  5498: c8 06 06                 s1 = s1 + ra
  5501: 55 18 10 1d              jump @387 if a1 >=u 16
      :                          @382
  5505: aa 02 d8 00              jump @407 if t0 == ra
      :                          @383
  5509: 33 0a                    a3 = 0
  5511: 01                       fallthrough
      :                          @384
  5512: c8 a6 07                 a0 = s1 + a3
  5515: 7c 77                    a0 = u8 [a0]
  5517: aa c7 a5 00              jump @402 if a0 == a5
      :                          @385
  5521: 95 aa 01                 a3 = a3 + 0x1
  5524: ab a8 f4                 jump @384 if a1 != a3
      :                          @386
  5527: 28 c2 00                 jump @407
      :                          @387
  5530: 95 69 07                 a2 = s1 + 0x7
  5533: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5536: c9 6a 07                 a0 = a3 - s1
  5539: d3 6a 0a                 a3 = a3 ^ s1
  5542: 88 aa 01                 a3 = a3 <u 0x1
  5545: 88 7b 01                 a4 = a0 <u 0x1
  5548: d4 ba 0a                 a3 = a3 | a4
  5551: 51 0a 45                 jump @393 if a3 == 0
      :                          @388
  5554: 33 07                    a0 = 0
  5556: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5559: 82 1b                    a4 = u64 [sp]
  5561: c8 0b 0b                 a4 = a4 + ra
  5564: 28 08                    jump @390
      :                          @389
  5566: 82 1b                    a4 = u64 [sp]
  5568: c8 0b 0b                 a4 = a4 + ra
  5571: 01                       fallthrough
      :                          @390
  5572: c8 76 0c                 a5 = s1 + a0
  5575: 82 cc                    a5 = u64 [a5]
  5577: c8 7b 09                 a2 = a4 + a0
  5580: 82 99                    a2 = u64 [a2]
  5582: d3 4c 05                 s0 = a5 ^ t2
  5585: c8 35 05                 s0 = s0 + t1
  5588: e0 c5 0c                 a5 = s0 & ~a5
  5591: d3 49 05                 s0 = a2 ^ t2
  5594: c8 35 05                 s0 = s0 + t1
  5597: e0 95 09                 a2 = s0 & ~a2
  5600: d4 c9 09                 a2 = a2 | a5
  5603: 82 1c 60                 a5 = u64 [sp + 0x60]
  5606: d2 c9 09                 a2 = a2 & a5
  5609: 52 09 1f                 jump @396 if a2 != 0
      :                          @391
  5612: 95 77 10                 a0 = a0 + 0x10
  5615: ae 7a d5                 jump @390 if a3 >=u a0
      :                          @392
  5618: 28 16                    jump @396
      :                          @393
  5620: c8 a6 0b                 a4 = s1 + a3
  5623: 7c bb                    a4 = u8 [a4]
  5625: aa cb 51                 jump @405 if a4 == a5
      :                          @394
  5628: 95 aa 01                 a3 = a3 + 0x1
  5631: ab a7 f5                 jump @393 if a0 != a3
      :                          @395
  5634: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
  5637: ae 7a b9                 jump @389 if a3 >=u a0
      :                          @396
  5640: aa 87 9a 00              jump @414 if a0 == a1
      :                          @397
  5644: 33 0a                    a3 = 0
  5646: c8 76 06                 s1 = s1 + a0
  5649: c9 72 08                 a1 = t0 - a0
  5652: c9 08 08                 a1 = a1 - ra
  5655: 33 0c 0a                 a5 = 0xa
  5658: 82 1b 50                 a4 = u64 [sp + 0x50]
  5661: 01                       fallthrough
      :                          @398
  5662: c8 a6 09                 a2 = s1 + a3
  5665: 7c 99                    a2 = u8 [a2]
  5667: aa c9 0b                 jump @401 if a2 == a5
      :                          @399
  5670: 95 aa 01                 a3 = a3 + 0x1
  5673: ab a8 f5                 jump @398 if a1 != a3
      :                          @400
  5676: 28 2d                    jump @407
      :                          @401
  5678: c8 7a 0a                 a3 = a3 + a0
  5681: 01                       fallthrough
      :                          @402
  5682: c8 0a 0a                 a3 = a3 + ra
  5685: 95 a0 01                 ra = a3 + 0x1
  5688: ae 2a 38 ff              jump @380 if a3 >=u t0
      :                          @403
  5692: 82 17 58                 a0 = u64 [sp + 0x58]
  5695: c8 7a 0a                 a3 = a3 + a0
  5698: 7c a7                    a0 = u8 [a3]
  5700: ab c7 2c ff              jump @380 if a0 != a5
      :                          @404
  5704: 28 61                    jump @415
      :                          @405
  5706: 82 1b 50                 a4 = u64 [sp + 0x50]
  5709: c8 0a 0a                 a3 = a3 + ra
  5712: 95 a0 01                 ra = a3 + 0x1
  5715: ac 2a e9                 jump @403 if a3 <u t0
      :                          @406
  5718: 28 1a ff                 jump @380
      :                          @407
  5721: 64 20                    ra = t0
  5723: 01                       fallthrough
      :                          @408
  5724: 49 11 40 01              u64 [sp + 64] = 0x1
  5728: 64 b5                    s0 = a4
  5730: 64 26                    s1 = t0
  5732: aa 2b 56                 jump @417 if a4 == t0
      :                          @409
  5735: 82 17 48                 a0 = u64 [sp + 0x48]
  5738: 7c 77                    a0 = u8 [a0]
  5740: 51 07 22                 jump @412 if a0 == 0
      :                          @410
  5743: 82 17 30                 a0 = u64 [sp + 0x30]
  5746: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5749: 33 09 04                 a2 = 0x4
  5752: 82 17 38                 a0 = u64 [sp + 0x38]
  5755: 82 18 08                 a1 = u64 [sp + 0x8]
  5758: 7b 10 28                 u64 [sp + 0x28] = ra
  5761: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @411 [@dyn 54]
  5765: 82 1b 50                 a4 = u64 [sp + 0x50]
  5768: 82 10 28                 ra = u64 [sp + 0x28]
  5771: 52 07 33                 jump @418 if a0 != 0
      :                          @412
  5774: c9 b6 09                 a2 = s1 - a4
  5777: 82 18 58                 a1 = u64 [sp + 0x58]
  5780: c8 b8 08                 a1 = a1 + a4
  5783: ab b6 90 fe              jump @374 if s1 != a4
      :                          @413
  5787: 64 06                    s1 = ra
  5789: 33 07                    a0 = 0
  5791: 28 97 fe                 jump @375
      :                          @414
  5794: 64 20                    ra = t0
  5796: 82 1b 50                 a4 = u64 [sp + 0x50]
  5799: 28 b5                    jump @408
      :                          @415
  5801: 49 11 40                 u64 [sp + 64] = 0
  5804: 64 05                    s0 = ra
  5806: 64 06                    s1 = ra
  5808: 82 17 48                 a0 = u64 [sp + 0x48]
  5811: 7c 77                    a0 = u8 [a0]
  5813: 52 07 ba                 jump @410 if a0 != 0
      :                          @416
  5816: 28 d6                    jump @412
      :                          @417
  5818: 33 07                    a0 = 0
  5820: 28 06                    jump @419
      :                          @418
  5822: 33 07 01                 a0 = 0x1
  5825: 01                       fallthrough
      :                          @419
  5826: 82 10 78                 ra = u64 [sp + 0x78]
  5829: 82 15 70                 s0 = u64 [sp + 0x70]
  5832: 82 16 68                 s1 = u64 [sp + 0x68]
  5835: 95 11 80 00              sp = sp + 0x80
  5839: 32 00                    ret
      :                          @420 [@dyn 55]
  5841: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5844: 7b 10 20                 u64 [sp + 0x20] = ra
  5847: 7b 15 18                 u64 [sp + 0x18] = s0
  5850: 7b 16 10                 u64 [sp + 0x10] = s1
  5853: 82 75 10                 s0 = u64 [a0 + 0x10]
  5856: 7c 59                    a2 = u8 [s0]
  5858: 82 7b                    a4 = u64 [a0]
  5860: 82 76 08                 s1 = u64 [a0 + 0x8]
  5863: 51 09 32                 jump @424 if a2 == 0
      :                          @421
  5866: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5869: 7b 18 08                 u64 [sp + 0x8] = a1
  5872: 33 08 80 01 01           a1 = 0x10180
  5877: 33 09 04                 a2 = 0x4
  5880: 64 b7                    a0 = a4
  5882: 7b 1b                    u64 [sp] = a4
  5884: b4 a0 01 70              ra = 112, jump [a3]
      :                          @422 [@dyn 56]
  5888: 82 18 08                 a1 = u64 [sp + 0x8]
  5891: 82 1b                    a4 = u64 [sp]
  5893: 51 07 14                 jump @424 if a0 == 0
      :                          @423
  5896: 33 07 01                 a0 = 0x1
  5899: 82 10 20                 ra = u64 [sp + 0x20]
  5902: 82 15 18                 s0 = u64 [sp + 0x18]
  5905: 82 16 10                 s1 = u64 [sp + 0x10]
  5908: 95 11 28                 sp = sp + 0x28
  5911: 32 00                    ret
      :                          @424
  5913: 83 87                    i32 a0 = a1 + 0
  5915: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5918: 88 77 01                 a0 = a0 <u 0x1
  5921: 78 57                    u8 [s0] = a0
  5923: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5926: 64 b7                    a0 = a4
  5928: 82 10 20                 ra = u64 [sp + 0x20]
  5931: 82 15 18                 s0 = u64 [sp + 0x18]
  5934: 82 16 10                 s1 = u64 [sp + 0x10]
  5937: 95 11 28                 sp = sp + 0x28
  5940: 32 0c                    jump [a5]
      :                          @425 [@dyn 57]
  5942: 64 8a                    a3 = a1
  5944: 33 08 50 01 01           a1 = 0x10150
  5949: 64 a9                    a2 = a3
  5951: 28 a2 fb                 jump @334
      :                          @426
  5954: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5958: 7b 10 88 00              u64 [sp + 0x88] = ra
  5962: 7b 15 80 00              u64 [sp + 0x80] = s0
  5966: 7b 16 78                 u64 [sp + 0x78] = s1
  5969: 64 75                    s0 = a0
  5971: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5974: 64 8b                    a4 = a1
  5976: 33 08 01                 a1 = 0x1
  5979: 33 06 01                 s1 = 0x1
  5982: 51 07 1d                 jump @428 if a0 == 0
      :                          @427
  5985: 78 56 08                 u8 [s0 + 0x8] = s1
  5988: 46 15 09 01              u8 [s0 + 9] = 0x1
  5992: 64 57                    a0 = s0
  5994: 82 10 88 00              ra = u64 [sp + 0x88]
  5998: 82 15 80 00              s0 = u64 [sp + 0x80]
  6002: 82 16 78                 s1 = u64 [sp + 0x78]
  6005: 95 11 90 00              sp = sp + 0x90
  6009: 32 00                    ret
      :                          @428
  6011: 64 9a                    a3 = a2
  6013: 82 5c                    a5 = u64 [s0]
  6015: 80 c7 34                 a0 = u32 [a5 + 0x34]
  6018: 7c 58 09                 a1 = u8 [s0 + 0x9]
  6021: 84 79 04                 a2 = a0 & 0x4
  6024: 52 09 43                 jump @434 if a2 != 0
      :                          @429
  6027: 51 08 31                 jump @432 if a1 == 0
      :                          @430
  6030: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6033: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6036: 82 83 18                 t1 = u64 [a1 + 0x18]
  6039: 33 08 84 01 01           a1 = 0x10184
  6044: 33 09 02                 a2 = 0x2
  6047: 64 a6                    s1 = a3
  6049: 7b 1b 10                 u64 [sp + 0x10] = a4
  6052: 7b 1c 08                 u64 [sp + 0x8] = a5
  6055: b4 30 01 74              ra = 116, jump [t1]
      :                          @431 [@dyn 58]
  6059: 82 1c 08                 a5 = u64 [sp + 0x8]
  6062: 82 1b 10                 a4 = u64 [sp + 0x10]
  6065: 64 6a                    a3 = s1
  6067: 33 08 01                 a1 = 0x1
  6070: 33 06 01                 s1 = 0x1
  6073: 52 07 a8                 jump @427 if a0 != 0
      :                          @432
  6076: 64 b7                    a0 = a4
  6078: 64 c8                    a1 = a5
  6080: b4 a0 01 76              ra = 118, jump [a3]
      :                          @433 [@dyn 59]
  6084: 33 08 01                 a1 = 0x1
  6087: 64 76                    s1 = a0
  6089: 28 98                    jump @427
      :                          @434
  6091: 52 08 36                 jump @438 if a1 != 0
      :                          @435
  6094: 82 c8 28                 a1 = u64 [a5 + 0x28]
  6097: 82 c7 20                 a0 = u64 [a5 + 0x20]
  6100: 82 83 18                 t1 = u64 [a1 + 0x18]
  6103: 33 08 88 01 01           a1 = 0x10188
  6108: 33 09 01                 a2 = 0x1
  6111: 33 06 01                 s1 = 0x1
  6114: 7b 1a                    u64 [sp] = a3
  6116: 7b 1b 10                 u64 [sp + 0x10] = a4
  6119: 7b 1c 08                 u64 [sp + 0x8] = a5
  6122: b4 30 01 78              ra = 120, jump [t1]
      :                          @436 [@dyn 60]
  6126: 82 1c 08                 a5 = u64 [sp + 0x8]
  6129: 82 1b 10                 a4 = u64 [sp + 0x10]
  6132: 82 1a                    a3 = u64 [sp]
  6134: 33 08 01                 a1 = 0x1
  6137: 52 07 68 ff              jump @427 if a0 != 0
      :                          @437
  6141: 81 c7 34                 a0 = i32 [a5 + 0x34]
  6144: 01                       fallthrough
      :                          @438
  6145: 33 06 01                 s1 = 0x1
  6148: 78 16 37                 u8 [sp + 0x37] = s1
  6151: 82 c8 20                 a1 = u64 [a5 + 0x20]
  6154: 82 c9 28                 a2 = u64 [a5 + 0x28]
  6157: 7b 18 18                 u64 [sp + 0x18] = a1
  6160: 7b 19 20                 u64 [sp + 0x20] = a2
  6163: 95 18 37                 a1 = sp + 0x37
  6166: 7b 18 28                 u64 [sp + 0x28] = a1
  6169: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6172: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6175: 82 c3                    t1 = u64 [a5]
  6177: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6180: 82 c0 10                 ra = u64 [a5 + 0x10]
  6183: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6186: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6189: 7a 18 68                 u32 [sp + 0x68] = a1
  6192: 78 19 70                 u8 [sp + 0x70] = a2
  6195: 7b 13 38                 u64 [sp + 0x38] = t1
  6198: 7b 14 40                 u64 [sp + 0x40] = t2
  6201: 7b 10 48                 u64 [sp + 0x48] = ra
  6204: 7b 12 50                 u64 [sp + 0x50] = t0
  6207: 95 17 18                 a0 = sp + 0x18
  6210: 7b 17 58                 u64 [sp + 0x58] = a0
  6213: 33 07 50 01 01           a0 = 0x10150
  6218: 7b 17 60                 u64 [sp + 0x60] = a0
  6221: 95 18 38                 a1 = sp + 0x38
  6224: 64 b7                    a0 = a4
  6226: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @439 [@dyn 61]
  6230: 52 07 20                 jump @442 if a0 != 0
      :                          @440
  6233: 82 18 60                 a1 = u64 [sp + 0x60]
  6236: 82 17 58                 a0 = u64 [sp + 0x58]
  6239: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6242: 33 08 86 01 01           a1 = 0x10186
  6247: 33 09 02                 a2 = 0x2
  6250: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @441 [@dyn 62]
  6254: 64 76                    s1 = a0
  6256: 33 08 01                 a1 = 0x1
  6259: 28 ee fe                 jump @427
      :                          @442
  6262: 33 08 01                 a1 = 0x1
  6265: 28 e8 fe                 jump @427
      :                          @443
  6268: 51 08 9b 00              jump @464 if a1 == 0
      :                          @444
  6272: 64 79                    a2 = a0
  6274: 7c 77                    a0 = u8 [a0]
  6276: 51 07 91 00              jump @463 if a0 == 0
      :                          @445
  6280: 51 27 ff 00 90 00        jump @465 if a0 == 255
      :                          @446
  6286: 6c 7a                    a3 = sext.b a0
  6288: 57 0a 09                 jump @448 if a3 <s 0
      :                          @447
  6291: 33 0a                    a3 = 0
  6293: 33 08                    a1 = 0
  6295: 28 73                    jump @462
      :                          @448
  6297: 55 27 c0 00 0d           jump @450 if a0 >=u 192
      :                          @449
  6302: 33 0a 01                 a3 = 0x1
  6305: 33 0b 80                 a4 = 0xffffffffffffff80
  6308: 28 4a                    jump @459
      :                          @450
  6310: 55 27 e0 00 0e           jump @452 if a0 >=u 224
      :                          @451
  6315: 33 0a 02                 a3 = 0x2
  6318: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6322: 28 3c                    jump @459
      :                          @452
  6324: 55 27 f0 00 0e           jump @454 if a0 >=u 240
      :                          @453
  6329: 33 0a 03                 a3 = 0x3
  6332: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6336: 28 2e                    jump @459
      :                          @454
  6338: 55 27 f8 00 0e           jump @456 if a0 >=u 248
      :                          @455
  6343: 33 0a 04                 a3 = 0x4
  6346: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6350: 28 20                    jump @459
      :                          @456
  6352: 55 27 fc 00 0e           jump @458 if a0 >=u 252
      :                          @457
  6357: 33 0a 05                 a3 = 0x5
  6360: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6364: 28 12                    jump @459
      :                          @458
  6366: 88 7a fe 00              a3 = a0 <u 0xfe
  6370: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6374: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6378: 85 aa 07                 a3 = a3 ^ 0x7
  6381: 01                       fallthrough
      :                          @459
  6382: ae 8a 2b                 jump @466 if a3 >=u a1
      :                          @460
  6385: 33 08                    a1 = 0
  6387: c8 b7 07                 a0 = a0 + a4
  6390: 64 ab                    a4 = a3
  6392: 01                       fallthrough
      :                          @461
  6393: c8 b9 0c                 a5 = a2 + a4
  6396: 7c cc                    a5 = u8 [a5]
  6398: 97 88 08                 a1 = a1 << 0x8
  6401: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6404: d4 c8 08                 a1 = a1 | a5
  6407: 52 0b f2                 jump @461 if a4 != 0
      :                          @462
  6410: 8a a9 03                 i32 a2 = a3 << 0x3
  6413: cf 97 07                 a0 = a0 << a2
  6416: c8 87 07                 a0 = a0 + a1
  6419: 32 00                    ret
      :                          @463
  6421: 32 00                    ret
      :                          @464
  6423: 00                       trap
      :                          @465
  6424: 00                       trap
      :                          @466
  6425: 00                       trap
      :                          @467 [@dyn 63]
  6426: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6429: 7b 10 28                 u64 [sp + 0x28] = ra
  6432: 7b 15 20                 u64 [sp + 0x20] = s0
  6435: 7b 16 18                 u64 [sp + 0x18] = s1
  6438: 64 86                    s1 = a1
  6440: 82 88 28                 a1 = u64 [a1 + 0x28]
  6443: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6446: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6449: 64 75                    s0 = a0
  6451: 33 08 48 01 01           a1 = 0x10148
  6456: 33 09 01                 a2 = 0x1
  6459: 64 a7                    a0 = a3
  6461: b4 b0 02 80 00           ra = 128, jump [a4]
      :                          @468 [@dyn 64]
  6466: 7b 16                    u64 [sp] = s1
  6468: 78 17 08                 u8 [sp + 0x8] = a0
  6471: 46 11 09                 u8 [sp + 9] = 0
  6474: 7b 15 10                 u64 [sp + 0x10] = s0
  6477: 33 09 86 00              a2 = 0x86
  6481: 64 17                    a0 = sp
  6483: 95 18 10                 a1 = sp + 0x10
  6486: 50 20 82 00 ec fd        ra = 130, jump @426
      :                          @469 [@dyn 65]
  6492: 33 07 01                 a0 = 0x1
  6495: 7c 18 08                 a1 = u8 [sp + 0x8]
  6498: 52 08 1b                 jump @471 if a1 != 0
      :                          @470
  6501: 82 17                    a0 = u64 [sp]
  6503: 82 78 28                 a1 = u64 [a0 + 0x28]
  6506: 82 77 20                 a0 = u64 [a0 + 0x20]
  6509: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6512: 33 08 89 01 01           a1 = 0x10189
  6517: 33 09 01                 a2 = 0x1
  6520: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @471 [@dyn 66]
  6525: 82 10 28                 ra = u64 [sp + 0x28]
  6528: 82 15 20                 s0 = u64 [sp + 0x20]
  6531: 82 16 18                 s1 = u64 [sp + 0x18]
  6534: 95 11 30                 sp = sp + 0x30
  6537: 32 00                    ret
      :                          @472 [@dyn 67]
  6539: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6543: 7b 10 80 00              u64 [sp + 0x80] = ra
  6547: 80 89 34                 a2 = u32 [a1 + 0x34]
  6550: 82 77                    a0 = u64 [a0]
  6552: 84 9a 10                 a3 = a2 & 0x10
  6555: 52 0a 16                 jump @475 if a3 != 0
      :                          @473
  6558: 84 99 20                 a2 = a2 & 0x20
  6561: 52 09 41                 jump @478 if a2 != 0
      :                          @474
  6564: 7c 77                    a0 = u8 [a0]
  6566: 82 10 80 00              ra = u64 [sp + 0x80]
  6570: 95 11 88 00              sp = sp + 0x88
  6574: 28 9d f5                 jump @272
      :                          @475
  6577: 7c 77                    a0 = u8 [a0]
  6579: 33 0b 81 00              a4 = 0x81
  6583: 95 19 7f                 a2 = sp + 0x7f
  6586: 33 02 57                 t0 = 0x57
  6589: 01                       fallthrough
      :                          @476
  6590: 64 bc                    a5 = a4
  6592: 84 7b 0f                 a4 = a0 & 0xf
  6595: 97 77 38                 a0 = a0 << 0x38
  6598: 98 77 3c                 a0 = a0 >> 0x3c
  6601: 88 b3 0a                 t1 = a4 <u 0xa
  6604: 33 0a 30                 a3 = 0x30
  6607: da 32 0a                 a3 = t0 if t1 == 0
  6610: be ba 0a                 i32 a3 = a3 + a4
  6613: 78 9a                    u8 [a2] = a3
  6615: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6618: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6621: 52 07 e1                 jump @476 if a0 != 0
      :                          @477
  6624: 28 31                    jump @480
      :                          @478
  6626: 7c 77                    a0 = u8 [a0]
  6628: 33 0b 81 00              a4 = 0x81
  6632: 95 19 7f                 a2 = sp + 0x7f
  6635: 33 02 37                 t0 = 0x37
  6638: 01                       fallthrough
      :                          @479
  6639: 64 bc                    a5 = a4
  6641: 84 7b 0f                 a4 = a0 & 0xf
  6644: 97 77 38                 a0 = a0 << 0x38
  6647: 98 77 3c                 a0 = a0 >> 0x3c
  6650: 88 b3 0a                 t1 = a4 <u 0xa
  6653: 33 0a 30                 a3 = 0x30
  6656: da 32 0a                 a3 = t0 if t1 == 0
  6659: be ba 0a                 i32 a3 = a3 + a4
  6662: 78 9a                    u8 [a2] = a3
  6664: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6667: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6670: 52 07 e1                 jump @479 if a0 != 0
      :                          @480
  6673: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6676: 56 27 80 00 28           jump @483 if a0 >u 128
      :                          @481
  6681: 9a bb 81 00              a4 = 0x81 - a4
  6685: 64 1a                    a3 = sp
  6687: c8 7a 0a                 a3 = a3 + a0
  6690: 33 09 02                 a2 = 0x2
  6693: 64 87                    a0 = a1
  6695: 33 08 8a 01 01           a1 = 0x1018a
  6700: 50 20 88 00 46 f6        ra = 136, jump @282
      :                          @482 [@dyn 68]
  6706: 82 10 80 00              ra = u64 [sp + 0x80]
  6710: 95 11 88 00              sp = sp + 0x88
  6714: 32 00                    ret
      :                          @483
  6716: 00                       trap
