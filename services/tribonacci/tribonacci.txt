// RO data = 648/648 bytes
// RW data = 16/4176 bytes
// Stack size = 8192 bytes
// Jump table entry point size = 2 bytes
// RO data = [84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 115, 101, 110, 100, 101, 114, 61, 32, 97, 109, 111, 117, 110, 116, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 84, 82, 73, 66, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 0, 0, 0, 91, 32, 32, 32, 32, 44, 32, 44, 10, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 27, 0, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 42, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 58, 0, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 50, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 68, 0, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 74, 0, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 85, 0, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 111, 0, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 93, 1, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 110, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128]
// Instructions = 2224
// Code size = 6571 bytes

      :                          @0
     0: 28 0e 02 00 00           jump @38
      :                          @1
     5: 28 76 02 00 00           jump @43
      :                          @2
    10: 28 3c 04                 jump @99
      :                          @3 [@dyn 1]
    13: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    17: 7b 10 80 00              u64 [sp + 0x80] = ra
    21: 80 89 34                 a2 = u32 [a1 + 0x34]
    24: 84 9a 10                 a3 = a2 & 0x10
    27: 52 0a 16                 jump @6 if a3 != 0
      :                          @4
    30: 84 99 20                 a2 = a2 & 0x20
    33: 52 09 51                 jump @10 if a2 != 0
      :                          @5
    36: 80 77                    a0 = u32 [a0]
    38: 82 10 80 00              ra = u64 [sp + 0x80]
    42: 95 11 88 00              sp = sp + 0x88
    46: 28 8b 0e                 jump @278
      :                          @6
    49: 81 7b                    a4 = i32 [a0]
    51: 33 09 81 00              a2 = 0x81
    55: 95 17 7f                 a0 = sp + 0x7f
    58: 33 02 57                 t0 = 0x57
    61: 01                       fallthrough
      :                          @7
    62: 64 9c                    a5 = a2
    64: 8b ba 04                 i32 a3 = a4 >> 0x4
    67: 84 bb 0f                 a4 = a4 & 0xf
    70: 88 b3 0a                 t1 = a4 <u 0xa
    73: 33 09 30                 a2 = 0x30
    76: da 32 09                 a2 = t0 if t1 == 0
    79: be b9 09                 i32 a2 = a2 + a4
    82: 78 79                    u8 [a0] = a2
    84: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
    87: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
    90: 64 ab                    a4 = a3
    92: 52 0a e2                 jump @7 if a3 != 0
      :                          @8
    95: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
    98: 56 27 80 00 69           jump @16 if a0 >u 128
      :                          @9
   103: 9a 9b 81 00              a4 = 0x81 - a2
   107: 64 1a                    a3 = sp
   109: c8 7a 0a                 a3 = a3 + a0
   112: 28 42                    jump @14
      :                          @10
   114: 81 7b                    a4 = i32 [a0]
   116: 33 09 81 00              a2 = 0x81
   120: 95 17 7f                 a0 = sp + 0x7f
   123: 33 02 37                 t0 = 0x37
   126: 01                       fallthrough
      :                          @11
   127: 64 9c                    a5 = a2
   129: 8b ba 04                 i32 a3 = a4 >> 0x4
   132: 84 bb 0f                 a4 = a4 & 0xf
   135: 88 b3 0a                 t1 = a4 <u 0xa
   138: 33 09 30                 a2 = 0x30
   141: da 32 09                 a2 = t0 if t1 == 0
   144: be b9 09                 i32 a2 = a2 + a4
   147: 78 79                    u8 [a0] = a2
   149: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   152: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   155: 64 ab                    a4 = a3
   157: 52 0a e2                 jump @11 if a3 != 0
      :                          @12
   160: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   163: 56 27 80 00 28           jump @16 if a0 >u 128
      :                          @13
   168: 9a 9b 81 00              a4 = 0x81 - a2
   172: 64 1a                    a3 = sp
   174: c8 7a 0a                 a3 = a3 + a0
   177: 01                       fallthrough
      :                          @14
   178: 33 09 02                 a2 = 0x2
   181: 64 87                    a0 = a1
   183: 33 08 93 00 01           a1 = 0x10093
   188: 50 10 04 19 0f           ra = 4, jump @288
      :                          @15 [@dyn 2]
   193: 82 10 80 00              ra = u64 [sp + 0x80]
   197: 95 11 88 00              sp = sp + 0x88
   201: 32 00                    ret
      :                          @16
   203: 00                       trap
      :                          @17 [@dyn 3]
   204: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   208: 7b 10 80 00              u64 [sp + 0x80] = ra
   212: 80 89 34                 a2 = u32 [a1 + 0x34]
   215: 84 9a 10                 a3 = a2 & 0x10
   218: 52 0a 16                 jump @20 if a3 != 0
      :                          @18
   221: 84 99 20                 a2 = a2 & 0x20
   224: 52 09 51                 jump @24 if a2 != 0
      :                          @19
   227: 82 77                    a0 = u64 [a0]
   229: 82 10 80 00              ra = u64 [sp + 0x80]
   233: 95 11 88 00              sp = sp + 0x88
   237: 28 cc 0d                 jump @278
      :                          @20
   240: 82 7b                    a4 = u64 [a0]
   242: 33 09 81 00              a2 = 0x81
   246: 95 17 7f                 a0 = sp + 0x7f
   249: 33 02 57                 t0 = 0x57
   252: 01                       fallthrough
      :                          @21
   253: 64 9c                    a5 = a2
   255: 98 ba 04                 a3 = a4 >> 0x4
   258: 84 bb 0f                 a4 = a4 & 0xf
   261: 88 b3 0a                 t1 = a4 <u 0xa
   264: 33 09 30                 a2 = 0x30
   267: da 32 09                 a2 = t0 if t1 == 0
   270: be b9 09                 i32 a2 = a2 + a4
   273: 78 79                    u8 [a0] = a2
   275: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   278: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   281: 64 ab                    a4 = a3
   283: 52 0a e2                 jump @21 if a3 != 0
      :                          @22
   286: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   289: 56 27 80 00 69           jump @30 if a0 >u 128
      :                          @23
   294: 9a 9b 81 00              a4 = 0x81 - a2
   298: 64 1a                    a3 = sp
   300: c8 7a 0a                 a3 = a3 + a0
   303: 28 42                    jump @28
      :                          @24
   305: 82 7b                    a4 = u64 [a0]
   307: 33 09 81 00              a2 = 0x81
   311: 95 17 7f                 a0 = sp + 0x7f
   314: 33 02 37                 t0 = 0x37
   317: 01                       fallthrough
      :                          @25
   318: 64 9c                    a5 = a2
   320: 98 ba 04                 a3 = a4 >> 0x4
   323: 84 bb 0f                 a4 = a4 & 0xf
   326: 88 b3 0a                 t1 = a4 <u 0xa
   329: 33 09 30                 a2 = 0x30
   332: da 32 09                 a2 = t0 if t1 == 0
   335: be b9 09                 i32 a2 = a2 + a4
   338: 78 79                    u8 [a0] = a2
   340: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   343: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
   346: 64 ab                    a4 = a3
   348: 52 0a e2                 jump @25 if a3 != 0
      :                          @26
   351: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
   354: 56 27 80 00 28           jump @30 if a0 >u 128
      :                          @27
   359: 9a 9b 81 00              a4 = 0x81 - a2
   363: 64 1a                    a3 = sp
   365: c8 7a 0a                 a3 = a3 + a0
   368: 01                       fallthrough
      :                          @28
   369: 33 09 02                 a2 = 0x2
   372: 64 87                    a0 = a1
   374: 33 08 93 00 01           a1 = 0x10093
   379: 50 10 08 5a 0e           ra = 8, jump @288
      :                          @29 [@dyn 4]
   384: 82 10 80 00              ra = u64 [sp + 0x80]
   388: 95 11 88 00              sp = sp + 0x88
   392: 32 00                    ret
      :                          @30
   394: 00                       trap
      :                          @31 [@dyn 5]
   395: 95 11 c8                 sp = sp + 0xffffffffffffffc8
   398: 7b 10 30                 u64 [sp + 0x30] = ra
   401: 7b 15 28                 u64 [sp + 0x28] = s0
   404: 7b 16 20                 u64 [sp + 0x20] = s1
   407: 64 86                    s1 = a1
   409: 82 88 28                 a1 = u64 [a1 + 0x28]
   412: 82 6a 20                 a3 = u64 [s1 + 0x20]
   415: 82 8b 18                 a4 = u64 [a1 + 0x18]
   418: 64 75                    s0 = a0
   420: 33 08 88 00 01           a1 = 0x10088
   425: 33 09 01                 a2 = 0x1
   428: 64 a7                    a0 = a3
   430: b4 b0 01 0c              ra = 12, jump [a4]
      :                          @32 [@dyn 6]
   434: 7b 16 08                 u64 [sp + 0x8] = s1
   437: 78 17 10                 u8 [sp + 0x10] = a0
   440: 46 11 11                 u8 [sp + 17] = 0
   443: 33 06 80 00              s1 = 0x80
   447: 33 07 86 00              a0 = 0x86
   451: 7b 17                    u64 [sp] = a0
   453: 01                       fallthrough
      :                          @33
   454: 7b 15 18                 u64 [sp + 0x18] = s0
   457: 95 17 08                 a0 = sp + 0x8
   460: 95 18 18                 a1 = sp + 0x18
   463: 82 19                    a2 = u64 [sp]
   465: 50 10 0e cd 14           ra = 14, jump @432
      :                          @34 [@dyn 7]
   470: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
   473: 95 55 01                 s0 = s0 + 0x1
   476: 52 06 ea                 jump @33 if s1 != 0
      :                          @35
   479: 7c 18 10                 a1 = u8 [sp + 0x10]
   482: 33 07 01                 a0 = 0x1
   485: 52 08 1b                 jump @37 if a1 != 0
      :                          @36
   488: 82 17 08                 a0 = u64 [sp + 0x8]
   491: 82 78 28                 a1 = u64 [a0 + 0x28]
   494: 82 77 20                 a0 = u64 [a0 + 0x20]
   497: 82 8a 18                 a3 = u64 [a1 + 0x18]
   500: 33 08 92 00 01           a1 = 0x10092
   505: 33 09 01                 a2 = 0x1
   508: b4 a0 01 10              ra = 16, jump [a3]
      :                          @37 [@dyn 8]
   512: 82 10 30                 ra = u64 [sp + 0x30]
   515: 82 15 28                 s0 = u64 [sp + 0x28]
   518: 82 16 20                 s1 = u64 [sp + 0x20]
   521: 95 11 38                 sp = sp + 0x38
   524: 32 00                    ret
      :                          @38 [export #0: 'refine']
   526: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   529: 7b 10 20                 u64 [sp + 0x20] = ra
   532: 7b 15 18                 u64 [sp + 0x18] = s0
   535: 7b 16 10                 u64 [sp + 0x10] = s1
   538: 49 11 08                 u64 [sp + 8] = 0
   541: 49 01                    u64 [sp + 0] = 0
   543: 33 05 01                 s0 = 0x1
   546: 64 17                    a0 = sp
   548: 33 09 10                 a2 = 0x10
   551: 33 0a 05                 a3 = 0x5
   554: 33 0b 01                 a4 = 0x1
   557: 33 08                    a1 = 0
   559: 33 0c                    a5 = 0
   561: 0a 12                    ecalli 18 // 'fetch'
   563: 01                       fallthrough
      :                          @39
   564: 51 17 ff 1a              jump @41 if a0 == 4294967295
      :                          @40
   568: 81 17 04                 a0 = i32 [sp + 0x4]
   571: 81 18 08                 a1 = i32 [sp + 0x8]
   574: 81 19 0c                 a2 = i32 [sp + 0xc]
   577: 81 15                    s0 = i32 [sp]
   579: c8 78 0a                 a3 = a1 + a0
   582: be a9 09                 i32 a2 = a2 + a3
   585: 83 55 01                 i32 s0 = s0 + 0x1
   588: 28 0a                    jump @42
      :                          @41
   590: 33 07                    a0 = 0
   592: 33 08                    a1 = 0
   594: 33 09 01                 a2 = 0x1
   597: 01                       fallthrough
      :                          @42
   598: 7a 15                    u32 [sp] = s0
   600: 7a 19 04                 u32 [sp + 0x4] = a2
   603: 7a 17 08                 u32 [sp + 0x8] = a0
   606: 7a 18 0c                 u32 [sp + 0xc] = a1
   609: 64 17                    a0 = sp
   611: 33 08 10                 a1 = 0x10
   614: 0a 13                    ecalli 19 // 'export'
   616: 64 17                    a0 = sp
   618: 33 08 10                 a1 = 0x10
   621: 82 10 20                 ra = u64 [sp + 0x20]
   624: 82 15 18                 s0 = u64 [sp + 0x18]
   627: 82 16 10                 s1 = u64 [sp + 0x10]
   630: 95 11 28                 sp = sp + 0x28
   633: 32 00                    ret
      :                          @43 [export #1: 'accumulate']
   635: 95 11 d8                 sp = sp + 0xffffffffffffffd8
   638: 7b 10 20                 u64 [sp + 0x20] = ra
   641: 7b 15 18                 u64 [sp + 0x18] = s0
   644: 7b 16 10                 u64 [sp + 0x10] = s1
   647: 33 09 08                 a2 = 0x8
   650: ac 98 e5 00              jump @73 if a1 <u a2
      :                          @44
   654: 51 17 fc b3 01           jump @94 if a0 == 4294967292
      :                          @45
   659: 51 07 af 01              jump @95 if a0 == 0
      :                          @46
   663: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
   666: 95 75 08                 s0 = a0 + 0x8
   669: 51 0a 45                 jump @56 if a3 == 0
      :                          @47
   672: 7d 58                    a1 = i8 [s0]
   674: 33 06 01                 s1 = 0x1
   677: 59 08 40                 jump @57 if a1 >=s 0
      :                          @48
   680: 84 89 ff 00              a2 = a1 & 0xff
   684: 33 06 02                 s1 = 0x2
   687: 53 29 c0 00 2d           jump @54 if a2 <u 192
      :                          @49
   692: 33 06 03                 s1 = 0x3
   695: 53 29 e0 00 25           jump @54 if a2 <u 224
      :                          @50
   700: 33 06 04                 s1 = 0x4
   703: 53 29 f0 00 1d           jump @54 if a2 <u 240
      :                          @51
   708: 33 06 05                 s1 = 0x5
   711: 53 29 f8 00 15           jump @54 if a2 <u 248
      :                          @52
   716: 33 06 06                 s1 = 0x6
   719: 53 29 fc 00 0d           jump @54 if a2 <u 252
      :                          @53
   724: 88 98 fe 00              a1 = a2 <u 0xfe
   728: 9a 86 08                 s1 = 0x8 - a1
   731: 01                       fallthrough
      :                          @54
   732: ae 6a 09                 jump @57 if a3 >=u s1
      :                          @55
   735: 28 90 00                 jump @73
      :                          @56
   738: 33 06                    s1 = 0
   740: 01                       fallthrough
      :                          @57
   741: 7b 16                    u64 [sp] = s1
   743: 64 57                    a0 = s0
   745: 64 68                    a1 = s1
   747: 64 a6                    s1 = a3
   749: 50 10 12 eb 14           ra = 18, jump @449
      :                          @58 [@dyn 9]
   754: 82 1a                    a3 = u64 [sp]
   756: 51 07 7b                 jump @73 if a0 == 0
      :                          @59
   759: e4 a6 07                 a0 = maxu(s1, a3)
   762: c9 a7 07                 a0 = a0 - a3
   765: 53 17 60 72              jump @73 if a0 <u 96
      :                          @60
   769: c8 5a 08                 a1 = a3 + s0
   772: 95 76 a0                 s1 = a0 + 0xffffffffffffffa0
   775: 95 87 60                 a0 = a1 + 0x60
   778: 7b 17                    u64 [sp] = a0
   780: 51 06 4c                 jump @71 if s1 == 0
      :                          @61
   783: 7d 78                    a1 = i8 [a0]
   785: 33 05 01                 s0 = 0x1
   788: 59 08 37                 jump @68 if a1 >=s 0
      :                          @62
   791: 84 89 ff 00              a2 = a1 & 0xff
   795: 33 05 02                 s0 = 0x2
   798: 53 29 c0 00 2d           jump @68 if a2 <u 192
      :                          @63
   803: 33 05 03                 s0 = 0x3
   806: 53 29 e0 00 25           jump @68 if a2 <u 224
      :                          @64
   811: 33 05 04                 s0 = 0x4
   814: 53 29 f0 00 1d           jump @68 if a2 <u 240
      :                          @65
   819: 33 05 05                 s0 = 0x5
   822: 53 29 f8 00 15           jump @68 if a2 <u 248
      :                          @66
   827: 33 05 06                 s0 = 0x6
   830: 53 29 fc 00 0d           jump @68 if a2 <u 252
      :                          @67
   835: 88 98 fe 00              a1 = a2 <u 0xfe
   839: 9a 85 08                 s0 = 0x8 - a1
   842: 01                       fallthrough
      :                          @68
   843: ac 56 f8 00              jump @96 if s1 <u s0
      :                          @69
   847: 64 58                    a1 = s0
   849: 50 10 14 87 14           ra = 20, jump @449
      :                          @70 [@dyn 10]
   854: 28 07                    jump @72
      :                          @71
   856: 33 05                    s0 = 0
   858: 33 07                    a0 = 0
   860: 01                       fallthrough
      :                          @72
   861: e4 56 08                 a1 = maxu(s1, s0)
   864: c9 58 08                 a1 = a1 - s0
   867: e4 78 08                 a1 = maxu(a1, a0)
   870: c9 78 08                 a1 = a1 - a0
   873: 33 09 21                 a2 = 0x21
   876: ae 98 1b                 jump @75 if a1 >=u a2
      :                          @73
   879: 33 08                    a1 = 0
   881: 33 06 00 00 01           s1 = 0x10000
   886: 01                       fallthrough
      :                          @74
   887: 64 67                    a0 = s1
   889: 82 10 20                 ra = u64 [sp + 0x20]
   892: 82 15 18                 s0 = u64 [sp + 0x18]
   895: 82 16 10                 s1 = u64 [sp + 0x10]
   898: 95 11 28                 sp = sp + 0x28
   901: 32 00                    ret
      :                          @75
   903: 82 19                    a2 = u64 [sp]
   905: c8 95 05                 s0 = s0 + a2
   908: c8 57 07                 a0 = a0 + s0
   911: 7c 79 20                 a2 = u8 [a0 + 0x20]
   914: 51 09 19                 jump @77 if a2 == 0
      :                          @76
   917: 46 11 0e                 u8 [sp + 14] = 0
   920: 95 17 0e                 a0 = sp + 0xe
   923: 33 08 01                 a1 = 0x1
   926: 33 09                    a2 = 0
   928: 33 0a                    a3 = 0
   930: 0a 03                    ecalli 3 // 'write'
   932: 33 08                    a1 = 0
   934: 33 05                    s0 = 0
   936: 28 82 00                 jump @92
      :                          @77
   939: 95 8a df                 a3 = a1 + 0xffffffffffffffdf
   942: 95 76 21                 s1 = a0 + 0x21
   945: 51 0a 51                 jump @88 if a3 == 0
      :                          @78
   948: 7d 67                    a0 = i8 [s1]
   950: 33 05 01                 s0 = 0x1
   953: 59 07 37                 jump @85 if a0 >=s 0
      :                          @79
   956: 84 77 ff 00              a0 = a0 & 0xff
   960: 33 05 02                 s0 = 0x2
   963: 53 27 c0 00 2d           jump @85 if a0 <u 192
      :                          @80
   968: 33 05 03                 s0 = 0x3
   971: 53 27 e0 00 25           jump @85 if a0 <u 224
      :                          @81
   976: 33 05 04                 s0 = 0x4
   979: 53 27 f0 00 1d           jump @85 if a0 <u 240
      :                          @82
   984: 33 05 05                 s0 = 0x5
   987: 53 27 f8 00 15           jump @85 if a0 <u 248
      :                          @83
   992: 33 05 06                 s0 = 0x6
   995: 53 27 fc 00 0d           jump @85 if a0 <u 252
      :                          @84
  1000: 88 77 fe 00              a0 = a0 <u 0xfe
  1004: 9a 75 08                 s0 = 0x8 - a0
  1007: 01                       fallthrough
      :                          @85
  1008: 7b 1a                    u64 [sp] = a3
  1010: ac 5a 53                 jump @98 if a3 <u s0
      :                          @86
  1013: 64 67                    a0 = s1
  1015: 64 58                    a1 = s0
  1017: 50 10 16 df 13           ra = 22, jump @449
      :                          @87 [@dyn 11]
  1022: 82 1a                    a3 = u64 [sp]
  1024: 28 07                    jump @89
      :                          @88
  1026: 33 05                    s0 = 0
  1028: 33 07                    a0 = 0
  1030: 01                       fallthrough
      :                          @89
  1031: c8 56 09                 a2 = s1 + s0
  1034: e4 5a 08                 a1 = maxu(a3, s0)
  1037: c9 58 08                 a1 = a1 - s0
  1040: e6 78 05                 s0 = minu(a1, a0)
  1043: 46 11 0e                 u8 [sp + 14] = 0
  1046: 95 17 0e                 a0 = sp + 0xe
  1049: 33 08 01                 a1 = 0x1
  1052: 64 96                    s1 = a2
  1054: 64 5a                    a3 = s0
  1056: 0a 03                    ecalli 3 // 'write'
  1058: 01                       fallthrough
      :                          @90
  1059: 55 15 21 21              jump @97 if s0 >=u 33
      :                          @91
  1063: 64 68                    a1 = s1
  1065: 01                       fallthrough
      :                          @92
  1066: 33 06 11 00 03           s1 = 0x30011
  1071: 33 07 11 00 03           a0 = 0x30011
  1076: 64 59                    a2 = s0
  1078: 50 10 18 cd 09           ra = 24, jump @258
      :                          @93 [@dyn 12]
  1083: 33 08 20                 a1 = 0x20
  1086: 28 39 ff                 jump @74
      :                          @94
  1089: 00                       trap
      :                          @95
  1090: 00                       trap
      :                          @96
  1091: 00                       trap
      :                          @97
  1092: 00                       trap
      :                          @98
  1093: 00                       trap
      :                          @99 [export #2: 'on_transfer']
  1094: 95 11 a8 fd              sp = sp + 0xfffffffffffffda8
  1098: 7b 10 50 02              u64 [sp + 0x250] = ra
  1102: 7b 15 48 02              u64 [sp + 0x248] = s0
  1106: 7b 16 40 02              u64 [sp + 0x240] = s1
  1110: 64 79                    a2 = a0
  1112: 33 02                    t0 = 0
  1114: 95 7b 04                 a4 = a0 + 0x4
  1117: 95 7c 08                 a5 = a0 + 0x8
  1120: 95 86 f8                 s1 = a1 + 0xfffffffffffffff8
  1123: 95 77 0c                 a0 = a0 + 0xc
  1126: 7b 17 28                 u64 [sp + 0x28] = a0
  1129: 33 0a 08                 a3 = 0x8
  1132: 33 07 02                 a0 = 0x2
  1135: 7b 17                    u64 [sp] = a0
  1137: 49 11 20 ff ef           u64 [sp + 32] = 0xffffffffffffefff
  1142: 7b 1c 88 00              u64 [sp + 0x88] = a5
  1146: 7b 1c 80 00              u64 [sp + 0x80] = a5
  1150: 7b 18 18                 u64 [sp + 0x18] = a1
  1153: 7b 19 10                 u64 [sp + 0x10] = a2
  1156: 7b 1b 08                 u64 [sp + 0x8] = a4
  1159: 7b 16 70                 u64 [sp + 0x70] = s1
  1162: ac a8 bf 04              jump @147 if a1 <u a3
      :                          @100
  1166: 51 09 d6 04              jump @150 if a2 == 0
      :                          @101
  1170: 51 0b d3 04              jump @151 if a4 == 0
      :                          @102
  1174: 7c 97                    a0 = u8 [a2]
  1176: 7b 17 40                 u64 [sp + 0x40] = a0
  1179: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1182: 7b 17 30                 u64 [sp + 0x30] = a0
  1185: 7c 97 02                 a0 = u8 [a2 + 0x2]
  1188: 7b 17 38                 u64 [sp + 0x38] = a0
  1191: 7c 97 03                 a0 = u8 [a2 + 0x3]
  1194: 7b 17 48                 u64 [sp + 0x48] = a0
  1197: 7c b7                    a0 = u8 [a4]
  1199: 7b 17 68                 u64 [sp + 0x68] = a0
  1202: 7c b7 01                 a0 = u8 [a4 + 0x1]
  1205: 7b 17 50                 u64 [sp + 0x50] = a0
  1208: 7c b7 02                 a0 = u8 [a4 + 0x2]
  1211: 7b 17 60                 u64 [sp + 0x60] = a0
  1214: 7c b7 03                 a0 = u8 [a4 + 0x3]
  1217: 7b 17 58                 u64 [sp + 0x58] = a0
  1220: 51 06 49                 jump @112 if s1 == 0
      :                          @103
  1223: 82 17 88 00              a0 = u64 [sp + 0x88]
  1227: 7d 77                    a0 = i8 [a0]
  1229: 33 05 01                 s0 = 0x1
  1232: 59 07 40                 jump @113 if a0 >=s 0
      :                          @104
  1235: 84 77 ff 00              a0 = a0 & 0xff
  1239: 33 05 02                 s0 = 0x2
  1242: 53 27 c0 00 2d           jump @110 if a0 <u 192
      :                          @105
  1247: 33 05 03                 s0 = 0x3
  1250: 53 27 e0 00 25           jump @110 if a0 <u 224
      :                          @106
  1255: 33 05 04                 s0 = 0x4
  1258: 53 27 f0 00 1d           jump @110 if a0 <u 240
      :                          @107
  1263: 33 05 05                 s0 = 0x5
  1266: 53 27 f8 00 15           jump @110 if a0 <u 248
      :                          @108
  1271: 33 05 06                 s0 = 0x6
  1274: 53 27 fc 00 0d           jump @110 if a0 <u 252
      :                          @109
  1279: 88 77 fe 00              a0 = a0 <u 0xfe
  1283: 9a 75 08                 s0 = 0x8 - a0
  1286: 01                       fallthrough
      :                          @110
  1287: ae 56 09                 jump @113 if s1 >=u s0
      :                          @111
  1290: 28 3f 04                 jump @147
      :                          @112
  1293: 33 05                    s0 = 0
  1295: 01                       fallthrough
      :                          @113
  1296: 82 17 88 00              a0 = u64 [sp + 0x88]
  1300: 64 58                    a1 = s0
  1302: 7b 12 78                 u64 [sp + 0x78] = t0
  1305: 50 10 1a bf 12           ra = 26, jump @449
      :                          @114 [@dyn 13]
  1310: 33 04 98 00              t2 = 0x98
  1314: 33 03 04                 t1 = 0x4
  1317: 33 02 08                 t0 = 0x8
  1320: 82 1c 70                 a5 = u64 [sp + 0x70]
  1323: 82 1b 78                 a4 = u64 [sp + 0x78]
  1326: ae 7b 1b 04              jump @147 if a4 >=u a0
      :                          @115
  1330: 82 16 30                 s1 = u64 [sp + 0x30]
  1333: 97 66 08                 s1 = s1 << 0x8
  1336: 82 18 40                 a1 = u64 [sp + 0x40]
  1339: d4 68 08                 a1 = a1 | s1
  1342: 82 19 38                 a2 = u64 [sp + 0x38]
  1345: 97 99 10                 a2 = a2 << 0x10
  1348: 82 1a 48                 a3 = u64 [sp + 0x48]
  1351: 97 aa 18                 a3 = a3 << 0x18
  1354: d4 a9 09                 a2 = a2 | a3
  1357: d4 89 06                 s1 = a2 | a1
  1360: 82 18 50                 a1 = u64 [sp + 0x50]
  1363: 97 88 08                 a1 = a1 << 0x8
  1366: 82 19 68                 a2 = u64 [sp + 0x68]
  1369: d4 98 08                 a1 = a1 | a2
  1372: 82 19 60                 a2 = u64 [sp + 0x60]
  1375: 97 99 10                 a2 = a2 << 0x10
  1378: 82 1a 58                 a3 = u64 [sp + 0x58]
  1381: 97 aa 18                 a3 = a3 << 0x18
  1384: d4 a9 09                 a2 = a2 | a3
  1387: d4 89 00                 ra = a2 | a1
  1390: e4 5c 08                 a1 = maxu(a5, s0)
  1393: c9 58 08                 a1 = a1 - s0
  1396: 82 19 80 00              a2 = u64 [sp + 0x80]
  1400: c8 59 09                 a2 = a2 + s0
  1403: 82 1a 28                 a3 = u64 [sp + 0x28]
  1406: c8 a5 05                 s0 = s0 + a3
  1409: 64 ba                    a3 = a4
  1411: 01                       fallthrough
      :                          @116
  1412: ac 28 c5 03              jump @147 if a1 <u t0
      :                          @117
  1416: aa 35 da 03              jump @148 if s0 == t1
      :                          @118
  1420: 51 05 d7 03              jump @149 if s0 == 0
      :                          @119
  1424: ac 48 b9 03              jump @147 if a1 <u t2
      :                          @120
  1428: 51 0a 17                 jump @123 if a3 == 0
      :                          @121
  1431: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
  1435: 95 55 98 00              s0 = s0 + 0x98
  1439: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1442: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  1445: 52 07 df                 jump @116 if a0 != 0
      :                          @122
  1448: 28 a1 03                 jump @147
      :                          @123
  1451: 7c 97 01                 a0 = u8 [a2 + 0x1]
  1454: 7c 98                    a1 = u8 [a2]
  1456: 7c 9a 02                 a3 = u8 [a2 + 0x2]
  1459: 7d 9b 03                 a4 = i8 [a2 + 0x3]
  1462: 8a 77 08                 i32 a0 = a0 << 0x8
  1465: d4 87 07                 a0 = a0 | a1
  1468: 8a a8 10                 i32 a1 = a3 << 0x10
  1471: 8a ba 18                 i32 a3 = a4 << 0x18
  1474: d4 a8 08                 a1 = a1 | a3
  1477: d4 87 07                 a0 = a0 | a1
  1480: 7b 17 68                 u64 [sp + 0x68] = a0
  1483: 7c 57 01                 a0 = u8 [s0 + 0x1]
  1486: 7c 58                    a1 = u8 [s0]
  1488: 7c 5a 02                 a3 = u8 [s0 + 0x2]
  1491: 7d 5b 03                 a4 = i8 [s0 + 0x3]
  1494: 8a 77 08                 i32 a0 = a0 << 0x8
  1497: d4 87 07                 a0 = a0 | a1
  1500: 8a a8 10                 i32 a1 = a3 << 0x10
  1503: 8a ba 18                 i32 a3 = a4 << 0x18
  1506: d4 a8 08                 a1 = a1 | a3
  1509: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
  1512: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
  1515: d4 87 07                 a0 = a0 | a1
  1518: 7b 17 60                 u64 [sp + 0x60] = a0
  1521: 7c 97 0d                 a0 = u8 [a2 + 0xd]
  1524: 97 aa 10                 a3 = a3 << 0x10
  1527: 97 bb 08                 a4 = a4 << 0x8
  1530: d4 ba 0a                 a3 = a3 | a4
  1533: 7c 98 0c                 a1 = u8 [a2 + 0xc]
  1536: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
  1539: d4 a7 07                 a0 = a0 | a3
  1542: 97 77 10                 a0 = a0 << 0x10
  1545: 97 88 08                 a1 = a1 << 0x8
  1548: d4 b8 08                 a1 = a1 | a4
  1551: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
  1554: 7c 9b 09                 a4 = u8 [a2 + 0x9]
  1557: d4 87 07                 a0 = a0 | a1
  1560: 97 77 10                 a0 = a0 << 0x10
  1563: 97 aa 08                 a3 = a3 << 0x8
  1566: d4 ba 0a                 a3 = a3 | a4
  1569: d4 a7 07                 a0 = a0 | a3
  1572: 7c 98 08                 a1 = u8 [a2 + 0x8]
  1575: 97 77 08                 a0 = a0 << 0x8
  1578: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
  1582: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
  1586: d4 87 07                 a0 = a0 | a1
  1589: 7b 17 58                 u64 [sp + 0x58] = a0
  1592: 7c 97 95 00              a0 = u8 [a2 + 0x95]
  1596: 97 aa 10                 a3 = a3 << 0x10
  1599: 97 bb 08                 a4 = a4 << 0x8
  1602: d4 ba 0a                 a3 = a3 | a4
  1605: d4 a7 07                 a0 = a0 | a3
  1608: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
  1612: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
  1616: 95 98 10                 a1 = a2 + 0x10
  1619: 97 77 10                 a0 = a0 << 0x10
  1622: 97 aa 08                 a3 = a3 << 0x8
  1625: d4 ba 0a                 a3 = a3 | a4
  1628: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
  1632: d4 a7 07                 a0 = a0 | a3
  1635: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
  1639: 97 77 10                 a0 = a0 << 0x10
  1642: 97 bb 08                 a4 = a4 << 0x8
  1645: 7c 99 90 00              a2 = u8 [a2 + 0x90]
  1649: d4 ba 0a                 a3 = a3 | a4
  1652: d4 a7 07                 a0 = a0 | a3
  1655: 97 77 08                 a0 = a0 << 0x8
  1658: d4 97 07                 a0 = a0 | a2
  1661: 7b 17 50                 u64 [sp + 0x50] = a0
  1664: 95 17 30 01              a0 = sp + 0x130
  1668: 33 09 80 00              a2 = 0x80
  1672: 64 05                    s0 = ra
  1674: 50 10 1c 79 07           ra = 28, jump @258
      :                          @124 [@dyn 14]
  1679: 95 17 a8 00              a0 = sp + 0xa8
  1683: 95 18 30 01              a1 = sp + 0x130
  1687: 33 09 80 00              a2 = 0x80
  1691: 50 10 1e 68 07           ra = 30, jump @258
      :                          @125 [@dyn 15]
  1696: 7a 16 90 00              u32 [sp + 0x90] = s1
  1700: 7a 15 94 00              u32 [sp + 0x94] = s0
  1704: 82 17 68                 a0 = u64 [sp + 0x68]
  1707: 7a 17 98 00              u32 [sp + 0x98] = a0
  1711: 82 17 60                 a0 = u64 [sp + 0x60]
  1714: 7a 17 9c 00              u32 [sp + 0x9c] = a0
  1718: 82 17 58                 a0 = u64 [sp + 0x58]
  1721: 7b 17 a0 00              u64 [sp + 0xa0] = a0
  1725: 82 17 50                 a0 = u64 [sp + 0x50]
  1728: 7b 17 28 01              u64 [sp + 0x128] = a0
  1732: 95 17 90 00              a0 = sp + 0x90
  1736: 7b 17 30 01              u64 [sp + 0x130] = a0
  1740: 82 17                    a0 = u64 [sp]
  1742: 7b 17 38 01              u64 [sp + 0x138] = a0
  1746: 95 18 94 00              a1 = sp + 0x94
  1750: 7b 18 40 01              u64 [sp + 0x140] = a1
  1754: 7b 17 48 01              u64 [sp + 0x148] = a0
  1758: 95 18 98 00              a1 = sp + 0x98
  1762: 7b 18 50 01              u64 [sp + 0x150] = a1
  1766: 7b 17 58 01              u64 [sp + 0x158] = a0
  1770: 95 18 9c 00              a1 = sp + 0x9c
  1774: 7b 18 60 01              u64 [sp + 0x160] = a1
  1778: 7b 17 68 01              u64 [sp + 0x168] = a0
  1782: 95 17 a0 00              a0 = sp + 0xa0
  1786: 7b 17 70 01              u64 [sp + 0x170] = a0
  1790: 33 08 06                 a1 = 0x6
  1793: 7b 18 78 01              u64 [sp + 0x178] = a1
  1797: 95 17 a8 00              a0 = sp + 0xa8
  1801: 7b 17 80 01              u64 [sp + 0x180] = a0
  1805: 33 07 0a                 a0 = 0xa
  1808: 7b 17 88 01              u64 [sp + 0x188] = a0
  1812: 33 07 78 01 01           a0 = 0x10178
  1817: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  1821: 95 17 28 01              a0 = sp + 0x128
  1825: 7b 17 90 01              u64 [sp + 0x190] = a0
  1829: 7b 18 60                 u64 [sp + 0x60] = a1
  1832: 7b 18 98 01              u64 [sp + 0x198] = a1
  1836: 49 21 f8 01 07           u64 [sp + 504] = 0x7
  1841: 49 21 10 02              u64 [sp + 528] = 0
  1845: 95 17 30 01              a0 = sp + 0x130
  1849: 7b 17 00 02              u64 [sp + 0x200] = a0
  1853: 49 21 08 02 07           u64 [sp + 520] = 0x7
  1858: 95 17 20 02              a0 = sp + 0x220
  1862: 95 18 f0 01              a1 = sp + 0x1f0
  1866: 50 10 20 4a 04           ra = 32, jump @208
      :                          @126 [@dyn 16]
  1871: 82 15 28 02              s0 = u64 [sp + 0x228]
  1875: 82 1b 30 02              a4 = u64 [sp + 0x230]
  1879: 82 16 20 02              s1 = u64 [sp + 0x220]
  1883: 33 07 02                 a0 = 0x2
  1886: 33 08                    a1 = 0
  1888: 33 09                    a2 = 0
  1890: 64 5a                    a3 = s0
  1892: 33 00 22                 ra = 0x22
  1895: 0a 64                    ecalli 100 // 'log'
  1897: 01                       fallthrough
      :                          @127 [@dyn 17]
  1898: 82 17 20                 a0 = u64 [sp + 0x20]
  1901: c8 67 07                 a0 = a0 + s1
  1904: 33 0c 40 00 03           a5 = 0x30040
  1909: 33 02 00 10              t0 = 0x1000
  1913: 53 27 00 f0 1c           jump @132 if a0 <u 4294963200
      :                          @128
  1918: c8 2c 08                 a1 = a5 + t0
  1921: 82 87                    a0 = u64 [a1]
  1923: c9 78 09                 a2 = a1 - a0
  1926: ab 59 0f                 jump @132 if a2 != s0
      :                          @129
  1929: c9 67 09                 a2 = a0 - s1
  1932: 01                       fallthrough
      :                          @130
  1933: 82 8a                    a3 = u64 [a1]
  1935: ab 7a ef                 jump @128 if a3 != a0
      :                          @131
  1938: 7b 89                    u64 [a1] = a2
  1940: 01                       fallthrough
      :                          @132
  1941: 81 17 94 00              a0 = i32 [sp + 0x94]
  1945: 7a 17 b4 01              u32 [sp + 0x1b4] = a0
  1949: 95 17 b4 01              a0 = sp + 0x1b4
  1953: 33 08 04                 a1 = 0x4
  1956: 95 19 a8 00              a2 = sp + 0xa8
  1960: 33 0a 80 00              a3 = 0x80
  1964: 7b 1c 68                 u64 [sp + 0x68] = a5
  1967: 0a 03                    ecalli 3 // 'write'
  1969: 0a                       ecalli 0 // 'gas'
  1970: 7b 17 b8 01              u64 [sp + 0x1b8] = a0
  1974: 7b 17 c0 01              u64 [sp + 0x1c0] = a0
  1978: 46 21 cf 01 04           u8 [sp + 463] = 0x4
  1983: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
  1987: 95 17 cf 01              a0 = sp + 0x1cf
  1991: 33 08 01                 a1 = 0x1
  1994: 95 19 d0 01              a2 = sp + 0x1d0
  1998: 33 0a 08                 a3 = 0x8
  2001: 0a 03                    ecalli 3 // 'write'
  2003: 95 17 cf 01              a0 = sp + 0x1cf
  2007: 7b 17 20 02              u64 [sp + 0x220] = a0
  2011: 33 07 7e                 a0 = 0x7e
  2014: 7b 17 28 02              u64 [sp + 0x228] = a0
  2018: 49 21 30 01 02           u64 [sp + 304] = 0x2
  2023: 49 21 40 01 02           u64 [sp + 320] = 0x2
  2028: 49 21 50 01              u64 [sp + 336] = 0
  2032: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
  2042: 7b 17 58 01              u64 [sp + 0x158] = a0
  2046: 46 21 60 01 03           u8 [sp + 352] = 0x3
  2051: 49 21 68 01 02           u64 [sp + 360] = 0x2
  2056: 49 21 78 01 02           u64 [sp + 376] = 0x2
  2061: 49 21 88 01 01           u64 [sp + 392] = 0x1
  2066: 7b 17 90 01              u64 [sp + 0x190] = a0
  2070: 33 07 68 02 01           a0 = 0x10268
  2075: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
  2079: 95 17 c0 01              a0 = sp + 0x1c0
  2083: 7b 17 30 02              u64 [sp + 0x230] = a0
  2087: 82 17 60                 a0 = u64 [sp + 0x60]
  2090: 7b 17 38 02              u64 [sp + 0x238] = a0
  2094: 46 21 98 01 03           u8 [sp + 408] = 0x3
  2099: 49 21 f8 01 02           u64 [sp + 504] = 0x2
  2104: 95 17 30 01              a0 = sp + 0x130
  2108: 7b 17 10 02              u64 [sp + 0x210] = a0
  2112: 49 21 18 02 02           u64 [sp + 536] = 0x2
  2117: 95 17 20 02              a0 = sp + 0x220
  2121: 7b 17 00 02              u64 [sp + 0x200] = a0
  2125: 49 21 08 02 02           u64 [sp + 520] = 0x2
  2130: 95 17 d8 01              a0 = sp + 0x1d8
  2134: 95 18 f0 01              a1 = sp + 0x1f0
  2138: 50 10 24 3a 03           ra = 36, jump @208
      :                          @133 [@dyn 18]
  2143: 82 15 e0 01              s0 = u64 [sp + 0x1e0]
  2147: 82 1b e8 01              a4 = u64 [sp + 0x1e8]
  2151: 82 16 d8 01              s1 = u64 [sp + 0x1d8]
  2155: 33 07 02                 a0 = 0x2
  2158: 33 08                    a1 = 0
  2160: 33 09                    a2 = 0
  2162: 64 5a                    a3 = s0
  2164: 33 00 26                 ra = 0x26
  2167: 0a 64                    ecalli 100 // 'log'
  2169: 01                       fallthrough
      :                          @134 [@dyn 19]
  2170: 82 1c 68                 a5 = u64 [sp + 0x68]
  2173: 33 02 00 10              t0 = 0x1000
  2177: 82 17 20                 a0 = u64 [sp + 0x20]
  2180: c8 67 07                 a0 = a0 + s1
  2183: 53 27 00 f0 1e           jump @139 if a0 <u 4294963200
      :                          @135
  2188: c8 2c 08                 a1 = a5 + t0
  2191: 82 87                    a0 = u64 [a1]
  2193: c9 78 09                 a2 = a1 - a0
  2196: ab 59 11                 jump @139 if a2 != s0
      :                          @136
  2199: c9 67 09                 a2 = a0 - s1
  2202: 01                       fallthrough
      :                          @137
  2203: 82 8a                    a3 = u64 [a1]
  2205: ab 7a ef                 jump @135 if a3 != a0
      :                          @138
  2208: 7b 89                    u64 [a1] = a2
  2210: 33 0b                    a4 = 0
  2212: 01                       fallthrough
      :                          @139
  2213: 95 17 b8 01              a0 = sp + 0x1b8
  2217: 7b 17 20 02              u64 [sp + 0x220] = a0
  2221: 82 17 60                 a0 = u64 [sp + 0x60]
  2224: 7b 17 28 02              u64 [sp + 0x228] = a0
  2228: 33 07 e8 01 01           a0 = 0x101e8
  2233: 7b 17 30 01              u64 [sp + 0x130] = a0
  2237: 49 21 38 01 02           u64 [sp + 312] = 0x2
  2242: 49 21 50 01              u64 [sp + 336] = 0
  2246: 95 17 20 02              a0 = sp + 0x220
  2250: 7b 17 40 01              u64 [sp + 0x140] = a0
  2254: 49 21 48 01 01           u64 [sp + 328] = 0x1
  2259: 95 17 f0 01              a0 = sp + 0x1f0
  2263: 95 18 30 01              a1 = sp + 0x130
  2267: 50 10 28 b9 02           ra = 40, jump @208
      :                          @140 [@dyn 20]
  2272: 82 15 f8 01              s0 = u64 [sp + 0x1f8]
  2276: 82 1b 00 02              a4 = u64 [sp + 0x200]
  2280: 82 16 f0 01              s1 = u64 [sp + 0x1f0]
  2284: 33 07 02                 a0 = 0x2
  2287: 33 08                    a1 = 0
  2289: 33 09                    a2 = 0
  2291: 64 5a                    a3 = s0
  2293: 33 00 2a                 ra = 0x2a
  2296: 0a 64                    ecalli 100 // 'log'
  2298: 01                       fallthrough
      :                          @141 [@dyn 21]
  2299: 82 1c 68                 a5 = u64 [sp + 0x68]
  2302: 33 02 00 10              t0 = 0x1000
  2306: 82 17 20                 a0 = u64 [sp + 0x20]
  2309: c8 67 07                 a0 = a0 + s1
  2312: 53 27 00 f0 1c           jump @146 if a0 <u 4294963200
      :                          @142
  2317: c8 2c 08                 a1 = a5 + t0
  2320: 82 87                    a0 = u64 [a1]
  2322: c9 78 09                 a2 = a1 - a0
  2325: ab 59 0f                 jump @146 if a2 != s0
      :                          @143
  2328: c9 67 09                 a2 = a0 - s1
  2331: 01                       fallthrough
      :                          @144
  2332: 82 8a                    a3 = u64 [a1]
  2334: ab 7a ef                 jump @142 if a3 != a0
      :                          @145
  2337: 7b 89                    u64 [a1] = a2
  2339: 01                       fallthrough
      :                          @146
  2340: 82 12 78                 t0 = u64 [sp + 0x78]
  2343: 95 22 01                 t0 = t0 + 0x1
  2346: 82 17 80 00              a0 = u64 [sp + 0x80]
  2350: 95 77 98 00              a0 = a0 + 0x98
  2354: 7b 17 80 00              u64 [sp + 0x80] = a0
  2358: 82 18 18                 a1 = u64 [sp + 0x18]
  2361: 82 19 10                 a2 = u64 [sp + 0x10]
  2364: 82 1b 08                 a4 = u64 [sp + 0x8]
  2367: 82 16 70                 s1 = u64 [sp + 0x70]
  2370: 33 0a 08                 a3 = 0x8
  2373: ae a8 49 fb              jump @100 if a1 >=u a3
      :                          @147
  2377: 33 07 00 00 01           a0 = 0x10000
  2382: 33 08                    a1 = 0
  2384: 82 10 50 02              ra = u64 [sp + 0x250]
  2388: 82 15 48 02              s0 = u64 [sp + 0x248]
  2392: 82 16 40 02              s1 = u64 [sp + 0x240]
  2396: 95 11 58 02              sp = sp + 0x258
  2400: 32 00                    ret
      :                          @148
  2402: 00                       trap
      :                          @149
  2403: 00                       trap
      :                          @150
  2404: 00                       trap
      :                          @151
  2405: 00                       trap
      :                          @152
  2406: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2409: 7b 10 40                 u64 [sp + 0x40] = ra
  2412: 7b 15 38                 u64 [sp + 0x38] = s0
  2415: 7b 16 30                 u64 [sp + 0x30] = s1
  2418: c8 89 09                 a2 = a2 + a1
  2421: ac 89 52                 jump @160 if a2 <u a1
      :                          @153
  2424: 64 75                    s0 = a0
  2426: 82 77                    a0 = u64 [a0]
  2428: 97 78 01                 a1 = a0 << 0x1
  2431: 33 0a 08                 a3 = 0x8
  2434: e4 a9 09                 a2 = maxu(a2, a3)
  2437: e4 98 06                 s1 = maxu(a1, a2)
  2440: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2443: 98 88 3f                 a1 = a1 >> 0x3f
  2446: 51 07 12                 jump @155 if a0 == 0
      :                          @154
  2449: 82 59 08                 a2 = u64 [s0 + 0x8]
  2452: 7b 19 18                 u64 [sp + 0x18] = a2
  2455: 49 11 20 01              u64 [sp + 32] = 0x1
  2459: 7b 17 28                 u64 [sp + 0x28] = a0
  2462: 28 06                    jump @156
      :                          @155
  2464: 49 11 20                 u64 [sp + 32] = 0
  2467: 01                       fallthrough
      :                          @156
  2468: 64 17                    a0 = sp
  2470: 95 1a 18                 a3 = sp + 0x18
  2473: 64 69                    a2 = s1
  2475: 50 10 2c 32              ra = 44, jump @164
      :                          @157 [@dyn 22]
  2479: 82 18                    a1 = u64 [sp]
  2481: 82 17 08                 a0 = u64 [sp + 0x8]
  2484: 51 08 14                 jump @161 if a1 == 0
      :                          @158
  2487: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2497: aa 87 0d                 jump @162 if a0 == a1
      :                          @159
  2500: 52 07 18                 jump @163 if a0 != 0
      :                          @160
  2503: 00                       trap
      :                          @161
  2504: 7b 57 08                 u64 [s0 + 0x8] = a0
  2507: 7b 56                    u64 [s0] = s1
  2509: 01                       fallthrough
      :                          @162
  2510: 82 10 40                 ra = u64 [sp + 0x40]
  2513: 82 15 38                 s0 = u64 [sp + 0x38]
  2516: 82 16 30                 s1 = u64 [sp + 0x30]
  2519: 95 11 48                 sp = sp + 0x48
  2522: 32 00                    ret
      :                          @163
  2524: 00                       trap
      :                          @164
  2525: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2528: 7b 10 30                 u64 [sp + 0x30] = ra
  2531: 7b 15 28                 u64 [sp + 0x28] = s0
  2534: 7b 16 20                 u64 [sp + 0x20] = s1
  2537: 64 96                    s1 = a2
  2539: 64 73                    t1 = a0
  2541: 51 08 6e                 jump @174 if a1 == 0
      :                          @165
  2544: 82 a7 08                 a0 = u64 [a3 + 0x8]
  2547: 51 07 71                 jump @175 if a0 == 0
      :                          @166
  2550: 82 a9 10                 a2 = u64 [a3 + 0x10]
  2553: 51 09 9e 00              jump @182 if a2 == 0
      :                          @167
  2557: 82 a8                    a1 = u64 [a3]
  2559: 33 02 00 10              t0 = 0x1000
  2563: 33 04 40 00 03           t2 = 0x30040
  2568: c8 24 07                 a0 = t2 + t0
  2571: 01                       fallthrough
      :                          @168
  2572: 82 7a                    a3 = u64 [a0]
  2574: c8 6a 05                 s0 = a3 + s1
  2577: ac a5 c2 00              jump @188 if s0 <u a3
      :                          @169
  2581: 95 5b 01                 a4 = s0 + 0x1
  2584: 88 bc 01                 a5 = a4 <u 0x1
  2587: d8 b2 0b                 a4 = t0 <u a4
  2590: d4 cb 0b                 a4 = a4 | a5
  2593: 52 0b b2 00              jump @188 if a4 != 0
      :                          @170
  2597: 82 7b                    a4 = u64 [a0]
  2599: ab ab e5                 jump @168 if a4 != a3
      :                          @171
  2602: 7b 75                    u64 [a0] = s0
  2604: 33 0c                    a5 = 0
  2606: 7b 13 18                 u64 [sp + 0x18] = t1
  2609: c9 54 07                 a0 = t2 - s0
  2612: 95 77 00 10              a0 = a0 + 0x1000
  2616: 7b 17 10                 u64 [sp + 0x10] = a0
  2619: 7b 18 08                 u64 [sp + 0x8] = a1
  2622: 64 95                    s0 = a2
  2624: 7b 14                    u64 [sp] = t2
  2626: 50 10 2e c1 03           ra = 46, jump @258
      :                          @172 [@dyn 23]
  2631: 54 25 00 10 94 00        jump @189 if s0 <=u 4096
      :                          @173
  2637: 82 13 18                 t1 = u64 [sp + 0x18]
  2640: 82 18 10                 a1 = u64 [sp + 0x10]
  2643: 33 07                    a0 = 0
  2645: 7b 38 08                 u64 [t1 + 0x8] = a1
  2648: 28 b1 00                 jump @195
      :                          @174
  2651: 49 13 08                 u64 [t1 + 8] = 0
  2654: 33 07 01                 a0 = 0x1
  2657: 28 a8 00                 jump @195
      :                          @175
  2660: 33 07 00 10              a0 = 0x1000
  2664: 33 02 40 00 03           t0 = 0x30040
  2669: c8 72 09                 a2 = t0 + a0
  2672: 01                       fallthrough
      :                          @176
  2673: 82 9b                    a4 = u64 [a2]
  2675: c8 6b 0a                 a3 = a4 + s1
  2678: ac ba 5d                 jump @188 if a3 <u a4
      :                          @177
  2681: 95 ac 01                 a5 = a3 + 0x1
  2684: 88 c8 01                 a1 = a5 <u 0x1
  2687: d8 c7 0c                 a5 = a0 <u a5
  2690: d4 c8 08                 a1 = a1 | a5
  2693: 52 08 4e                 jump @188 if a1 != 0
      :                          @178
  2696: 82 98                    a1 = u64 [a2]
  2698: ab b8 e7                 jump @176 if a1 != a4
      :                          @179
  2701: 7b 9a                    u64 [a2] = a3
  2703: 33 0c                    a5 = 0
  2705: 01                       fallthrough
      :                          @180
  2706: ab b8 df                 jump @176 if a1 != a4
      :                          @181
  2709: 28 30                    jump @187
      :                          @182
  2711: 33 07 00 10              a0 = 0x1000
  2715: 33 02 40 00 03           t0 = 0x30040
  2720: c8 72 09                 a2 = t0 + a0
  2723: 01                       fallthrough
      :                          @183
  2724: 82 9b                    a4 = u64 [a2]
  2726: c8 6b 0a                 a3 = a4 + s1
  2729: ac ba 2a                 jump @188 if a3 <u a4
      :                          @184
  2732: 95 ac 01                 a5 = a3 + 0x1
  2735: 88 c8 01                 a1 = a5 <u 0x1
  2738: d8 c7 0c                 a5 = a0 <u a5
  2741: d4 c8 08                 a1 = a1 | a5
  2744: 52 08 1b                 jump @188 if a1 != 0
      :                          @185
  2747: 82 98                    a1 = u64 [a2]
  2749: ab b8 e7                 jump @183 if a1 != a4
      :                          @186
  2752: 7b 9a                    u64 [a2] = a3
  2754: 33 0c                    a5 = 0
  2756: 01                       fallthrough
      :                          @187
  2757: c9 a2 07                 a0 = t0 - a3
  2760: 95 78 00 10              a1 = a0 + 0x1000
  2764: 33 07                    a0 = 0
  2766: 7b 38 08                 u64 [t1 + 0x8] = a1
  2769: 28 38                    jump @195
      :                          @188
  2771: 33 07 01                 a0 = 0x1
  2774: 7b 37 08                 u64 [t1 + 0x8] = a0
  2777: 28 30                    jump @195
      :                          @189
  2779: 64 5c                    a5 = s0
  2781: 82 18                    a1 = u64 [sp]
  2783: 95 87 00 10              a0 = a1 + 0x1000
  2787: 82 13 18                 t1 = u64 [sp + 0x18]
  2790: 82 15 08                 s0 = u64 [sp + 0x8]
  2793: 01                       fallthrough
      :                          @190
  2794: 82 78                    a1 = u64 [a0]
  2796: c9 87 09                 a2 = a0 - a1
  2799: ab 59 11                 jump @194 if a2 != s0
      :                          @191
  2802: c9 c8 09                 a2 = a1 - a5
  2805: 01                       fallthrough
      :                          @192
  2806: 82 7a                    a3 = u64 [a0]
  2808: ab 8a f2                 jump @190 if a3 != a1
      :                          @193
  2811: 7b 79                    u64 [a0] = a2
  2813: 33 0b                    a4 = 0
  2815: 01                       fallthrough
      :                          @194
  2816: 82 18 10                 a1 = u64 [sp + 0x10]
  2819: 33 07                    a0 = 0
  2821: 7b 38 08                 u64 [t1 + 0x8] = a1
  2824: 01                       fallthrough
      :                          @195
  2825: 7b 36 10                 u64 [t1 + 0x10] = s1
  2828: 7b 37                    u64 [t1] = a0
  2830: 82 10 30                 ra = u64 [sp + 0x30]
  2833: 82 15 28                 s0 = u64 [sp + 0x28]
  2836: 82 16 20                 s1 = u64 [sp + 0x20]
  2839: 95 11 38                 sp = sp + 0x38
  2842: 32 00                    ret
      :                          @196
  2844: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  2847: 7b 10 40                 u64 [sp + 0x40] = ra
  2850: 7b 15 38                 u64 [sp + 0x38] = s0
  2853: 7b 16 30                 u64 [sp + 0x30] = s1
  2856: 95 88 01                 a1 = a1 + 0x1
  2859: 51 08 53                 jump @204 if a1 == 0
      :                          @197
  2862: 64 75                    s0 = a0
  2864: 82 77                    a0 = u64 [a0]
  2866: 97 79 01                 a2 = a0 << 0x1
  2869: 33 0a 08                 a3 = 0x8
  2872: e4 a8 08                 a1 = maxu(a1, a3)
  2875: e4 89 06                 s1 = maxu(a2, a1)
  2878: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  2881: 98 88 3f                 a1 = a1 >> 0x3f
  2884: 51 07 12                 jump @199 if a0 == 0
      :                          @198
  2887: 82 59 08                 a2 = u64 [s0 + 0x8]
  2890: 7b 19 18                 u64 [sp + 0x18] = a2
  2893: 49 11 20 01              u64 [sp + 32] = 0x1
  2897: 7b 17 28                 u64 [sp + 0x28] = a0
  2900: 28 06                    jump @200
      :                          @199
  2902: 49 11 20                 u64 [sp + 32] = 0
  2905: 01                       fallthrough
      :                          @200
  2906: 64 17                    a0 = sp
  2908: 95 1a 18                 a3 = sp + 0x18
  2911: 64 69                    a2 = s1
  2913: 50 10 30 7c fe           ra = 48, jump @164
      :                          @201 [@dyn 24]
  2918: 82 18                    a1 = u64 [sp]
  2920: 82 17 08                 a0 = u64 [sp + 0x8]
  2923: 51 08 14                 jump @205 if a1 == 0
      :                          @202
  2926: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  2936: aa 87 0d                 jump @206 if a0 == a1
      :                          @203
  2939: 52 07 18                 jump @207 if a0 != 0
      :                          @204
  2942: 00                       trap
      :                          @205
  2943: 7b 57 08                 u64 [s0 + 0x8] = a0
  2946: 7b 56                    u64 [s0] = s1
  2948: 01                       fallthrough
      :                          @206
  2949: 82 10 40                 ra = u64 [sp + 0x40]
  2952: 82 15 38                 s0 = u64 [sp + 0x38]
  2955: 82 16 30                 s1 = u64 [sp + 0x30]
  2958: 95 11 48                 sp = sp + 0x48
  2961: 32 00                    ret
      :                          @207
  2963: 00                       trap
      :                          @208
  2964: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  2967: 7b 10 30                 u64 [sp + 0x30] = ra
  2970: 7b 15 28                 u64 [sp + 0x28] = s0
  2973: 7b 16 20                 u64 [sp + 0x20] = s1
  2976: 64 89                    a2 = a1
  2978: 82 8a 08                 a3 = u64 [a1 + 0x8]
  2981: 64 75                    s0 = a0
  2983: 51 0a 35                 jump @213 if a3 == 0
      :                          @209
  2986: 82 98                    a1 = u64 [a2]
  2988: 33 07                    a0 = 0
  2990: 95 8b 08                 a4 = a1 + 0x8
  2993: 01                       fallthrough
      :                          @210
  2994: 82 bc                    a5 = u64 [a4]
  2996: c8 c7 07                 a0 = a0 + a5
  2999: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3002: 95 bb 10                 a4 = a4 + 0x10
  3005: 52 0a f5                 jump @210 if a3 != 0
      :                          @211
  3008: 82 9a 18                 a3 = u64 [a2 + 0x18]
  3011: 51 0a 24                 jump @215 if a3 == 0
      :                          @212
  3014: 82 88 08                 a1 = u64 [a1 + 0x8]
  3017: 8e 88                    a1 = a1 >u 0
  3019: 88 7a 10                 a3 = a0 <u 0x10
  3022: 85 aa 01                 a3 = a3 ^ 0x1
  3025: d4 a8 08                 a1 = a1 | a3
  3028: 89 7a                    a3 = a0 <s 0
  3030: e0 a8 08                 a1 = a1 & ~a3
  3033: 52 08 0a                 jump @214 if a1 != 0
      :                          @213
  3036: 33 07                    a0 = 0
  3038: 33 08 01                 a1 = 0x1
  3041: 28 48                    jump @223
      :                          @214
  3043: 97 77 01                 a0 = a0 << 0x1
  3046: 01                       fallthrough
      :                          @215
  3047: 51 07 3e                 jump @222 if a0 == 0
      :                          @216
  3050: 57 07 76                 jump @228 if a0 <s 0
      :                          @217
  3053: 64 53                    t1 = s0
  3055: 33 08 00 10              a1 = 0x1000
  3059: 33 02 40 00 03           t0 = 0x30040
  3064: c8 82 0b                 a4 = t0 + a1
  3067: 01                       fallthrough
      :                          @218
  3068: 82 bc                    a5 = u64 [a4]
  3070: c8 7c 0a                 a3 = a5 + a0
  3073: ac ca 5d                 jump @226 if a3 <u a5
      :                          @219
  3076: 95 a5 01                 s0 = a3 + 0x1
  3079: 88 56 01                 s1 = s0 <u 0x1
  3082: d8 58 05                 s0 = a1 <u s0
  3085: d4 65 05                 s0 = s0 | s1
  3088: 52 05 4e                 jump @226 if s0 != 0
      :                          @220
  3091: 82 b6                    s1 = u64 [a4]
  3093: ab c6 e7                 jump @218 if s1 != a5
      :                          @221
  3096: 7b ba                    u64 [a4] = a3
  3098: c9 a2 08                 a1 = t0 - a3
  3101: 95 88 00 10              a1 = a1 + 0x1000
  3105: 64 35                    s0 = t1
  3107: 28 06                    jump @223
      :                          @222
  3109: 33 08 01                 a1 = 0x1
  3112: 01                       fallthrough
      :                          @223
  3113: 7b 17                    u64 [sp] = a0
  3115: 7b 18 08                 u64 [sp + 0x8] = a1
  3118: 49 11 10                 u64 [sp + 16] = 0
  3121: 33 08 08 02 01           a1 = 0x10208
  3126: 64 17                    a0 = sp
  3128: 50 10 32 0c 06           ra = 50, jump @340
      :                          @224 [@dyn 25]
  3133: 52 07 22                 jump @227 if a0 != 0
      :                          @225
  3136: 82 17 10                 a0 = u64 [sp + 0x10]
  3139: 82 18 08                 a1 = u64 [sp + 0x8]
  3142: 82 19                    a2 = u64 [sp]
  3144: 7b 57 10                 u64 [s0 + 0x10] = a0
  3147: 7b 58 08                 u64 [s0 + 0x8] = a1
  3150: 7b 59                    u64 [s0] = a2
  3152: 82 10 30                 ra = u64 [sp + 0x30]
  3155: 82 15 28                 s0 = u64 [sp + 0x28]
  3158: 82 16 20                 s1 = u64 [sp + 0x20]
  3161: 95 11 38                 sp = sp + 0x38
  3164: 32 00                    ret
      :                          @226
  3166: 00                       trap
      :                          @227
  3167: 00                       trap
      :                          @228
  3168: 00                       trap
      :                          @229 [@dyn 26]
  3169: 82 72                    t0 = u64 [a0]
  3171: 33 09 00 f0              a2 = 0xfffffffffffff000
  3175: 95 2a ff ef              a3 = t0 + 0xffffffffffffefff
  3179: ac 9a 27                 jump @235 if a3 <u a2
      :                          @230
  3182: 82 77 08                 a0 = u64 [a0 + 0x8]
  3185: 33 09 40 00 03           a2 = 0x30040
  3190: 95 99 00 10              a2 = a2 + 0x1000
  3194: 01                       fallthrough
      :                          @231
  3195: 82 9a                    a3 = u64 [a2]
  3197: c9 a9 0b                 a4 = a2 - a3
  3200: ab 7b 12                 jump @235 if a4 != a0
      :                          @232
  3203: c9 2a 0b                 a4 = a3 - t0
  3206: 01                       fallthrough
      :                          @233
  3207: 82 9c                    a5 = u64 [a2]
  3209: ab ac f2                 jump @231 if a5 != a3
      :                          @234
  3212: 7b 9b                    u64 [a2] = a4
  3214: 33 08                    a1 = 0
  3216: 32 00                    ret
      :                          @235
  3218: 32 00                    ret
      :                          @236 [@dyn 27]
  3220: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3223: 7b 10 18                 u64 [sp + 0x18] = ra
  3226: 7b 15 10                 u64 [sp + 0x10] = s0
  3229: 7b 16 08                 u64 [sp + 0x8] = s1
  3232: 64 75                    s0 = a0
  3234: 82 7a 10                 a3 = u64 [a0 + 0x10]
  3237: 82 77                    a0 = u64 [a0]
  3239: c9 a7 07                 a0 = a0 - a3
  3242: 64 96                    s1 = a2
  3244: ac 97 2a                 jump @239 if a0 <u a2
      :                          @237
  3247: 7b 1a                    u64 [sp] = a3
  3249: 82 57 08                 a0 = u64 [s0 + 0x8]
  3252: c8 a7 07                 a0 = a0 + a3
  3255: 64 69                    a2 = s1
  3257: 50 10 38 4a 01           ra = 56, jump @258
      :                          @238 [@dyn 28]
  3262: 82 17                    a0 = u64 [sp]
  3264: c8 76 06                 s1 = s1 + a0
  3267: 7b 56 10                 u64 [s0 + 0x10] = s1
  3270: 33 07                    a0 = 0
  3272: 82 10 18                 ra = u64 [sp + 0x18]
  3275: 82 15 10                 s0 = u64 [sp + 0x10]
  3278: 82 16 08                 s1 = u64 [sp + 0x8]
  3281: 95 11 20                 sp = sp + 0x20
  3284: 32 00                    ret
      :                          @239
  3286: 64 57                    a0 = s0
  3288: 7b 18                    u64 [sp] = a1
  3290: 64 a8                    a1 = a3
  3292: 64 69                    a2 = s1
  3294: 50 10 3a 88 fc           ra = 58, jump @152
      :                          @240 [@dyn 29]
  3299: 82 18                    a1 = u64 [sp]
  3301: 82 5a 10                 a3 = u64 [s0 + 0x10]
  3304: 28 c7                    jump @237
      :                          @241 [@dyn 30]
  3306: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  3309: 7b 10 20                 u64 [sp + 0x20] = ra
  3312: 7b 15 18                 u64 [sp + 0x18] = s0
  3315: 7b 16 10                 u64 [sp + 0x10] = s1
  3318: 64 86                    s1 = a1
  3320: 83 88                    i32 a1 = a1 + 0
  3322: 33 09 80 00              a2 = 0x80
  3326: 64 7a                    a3 = a0
  3328: ae 98 2b                 jump @246 if a1 >=u a2
      :                          @242
  3331: 82 a8 10                 a1 = u64 [a3 + 0x10]
  3334: 82 a7                    a0 = u64 [a3]
  3336: ab 78 12                 jump @245 if a1 != a0
      :                          @243
  3339: 64 a7                    a0 = a3
  3341: 64 a5                    s0 = a3
  3343: 50 10 3e 0d fe           ra = 62, jump @196
      :                          @244 [@dyn 31]
  3348: 64 5a                    a3 = s0
  3350: 82 58 10                 a1 = u64 [s0 + 0x10]
  3353: 01                       fallthrough
      :                          @245
  3354: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3357: c8 87 07                 a0 = a0 + a1
  3360: 78 76                    u8 [a0] = s1
  3362: 95 88 01                 a1 = a1 + 0x1
  3365: 7b a8 10                 u64 [a3 + 0x10] = a1
  3368: 28 ab 00                 jump @254
      :                          @246
  3371: 8b 67 0b                 i32 a0 = s1 >> 0xb
  3374: 48 11 0c                 u32 [sp + 12] = 0
  3377: 52 07 1c                 jump @248 if a0 != 0
      :                          @247
  3380: 98 67 06                 a0 = s1 >> 0x6
  3383: 86 77 c0 00              a0 = a0 | 0xc0
  3387: 78 17 0c                 u8 [sp + 0xc] = a0
  3390: 84 67 3f                 a0 = s1 & 0x3f
  3393: 86 77 80 00              a0 = a0 | 0x80
  3397: 78 17 0d                 u8 [sp + 0xd] = a0
  3400: 33 06 02                 s1 = 0x2
  3403: 28 63                    jump @251
      :                          @248
  3405: 8b 67 10                 i32 a0 = s1 >> 0x10
  3408: 52 07 29                 jump @250 if a0 != 0
      :                          @249
  3411: 98 67 0c                 a0 = s1 >> 0xc
  3414: 86 77 e0 00              a0 = a0 | 0xe0
  3418: 78 17 0c                 u8 [sp + 0xc] = a0
  3421: 97 67 34                 a0 = s1 << 0x34
  3424: 98 77 3a                 a0 = a0 >> 0x3a
  3427: 95 77 80 00              a0 = a0 + 0x80
  3431: 78 17 0d                 u8 [sp + 0xd] = a0
  3434: 84 67 3f                 a0 = s1 & 0x3f
  3437: 86 77 80 00              a0 = a0 | 0x80
  3441: 78 17 0e                 u8 [sp + 0xe] = a0
  3444: 33 06 03                 s1 = 0x3
  3447: 28 37                    jump @251
      :                          @250
  3449: 97 67 2b                 a0 = s1 << 0x2b
  3452: 98 77 3d                 a0 = a0 >> 0x3d
  3455: 95 77 f0 00              a0 = a0 + 0xf0
  3459: 78 17 0c                 u8 [sp + 0xc] = a0
  3462: 97 67 2e                 a0 = s1 << 0x2e
  3465: 98 77 3a                 a0 = a0 >> 0x3a
  3468: 95 77 80 00              a0 = a0 + 0x80
  3472: 78 17 0d                 u8 [sp + 0xd] = a0
  3475: 97 67 34                 a0 = s1 << 0x34
  3478: 98 77 3a                 a0 = a0 >> 0x3a
  3481: 95 77 80 00              a0 = a0 + 0x80
  3485: 78 17 0e                 u8 [sp + 0xe] = a0
  3488: 84 67 3f                 a0 = s1 & 0x3f
  3491: 86 77 80 00              a0 = a0 | 0x80
  3495: 78 17 0f                 u8 [sp + 0xf] = a0
  3498: 33 06 04                 s1 = 0x4
  3501: 01                       fallthrough
      :                          @251
  3502: 82 a5 10                 s0 = u64 [a3 + 0x10]
  3505: 82 a7                    a0 = u64 [a3]
  3507: c9 57 07                 a0 = a0 - s0
  3510: ac 67 2d                 jump @255 if a0 <u s1
      :                          @252
  3513: 7b 1a                    u64 [sp] = a3
  3515: 82 a7 08                 a0 = u64 [a3 + 0x8]
  3518: c8 57 07                 a0 = a0 + s0
  3521: 95 18 0c                 a1 = sp + 0xc
  3524: 64 69                    a2 = s1
  3526: 50 10 40 3d              ra = 64, jump @258
      :                          @253 [@dyn 32]
  3530: c8 56 06                 s1 = s1 + s0
  3533: 82 17                    a0 = u64 [sp]
  3535: 7b 76 10                 u64 [a0 + 0x10] = s1
  3538: 01                       fallthrough
      :                          @254
  3539: 33 07                    a0 = 0
  3541: 82 10 20                 ra = u64 [sp + 0x20]
  3544: 82 15 18                 s0 = u64 [sp + 0x18]
  3547: 82 16 10                 s1 = u64 [sp + 0x10]
  3550: 95 11 28                 sp = sp + 0x28
  3553: 32 00                    ret
      :                          @255
  3555: 64 a7                    a0 = a3
  3557: 64 58                    a1 = s0
  3559: 64 69                    a2 = s1
  3561: 64 a5                    s0 = a3
  3563: 50 10 42 7b fb           ra = 66, jump @152
      :                          @256 [@dyn 33]
  3568: 64 5a                    a3 = s0
  3570: 82 55 10                 s0 = u64 [s0 + 0x10]
  3573: 28 c4                    jump @252
      :                          @257 [@dyn 34]
  3575: 64 8a                    a3 = a1
  3577: 33 08 08 02 01           a1 = 0x10208
  3582: 64 a9                    a2 = a3
  3584: 28 44 04                 jump @340
      :                          @258
  3587: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  3590: 7b 10 18                 u64 [sp + 0x18] = ra
  3593: 7b 15 10                 u64 [sp + 0x10] = s0
  3596: 7b 16 08                 u64 [sp + 0x8] = s1
  3599: 53 19 10 64              jump @267 if a2 <u 16
      :                          @259
  3603: 8d 7a                    i32 a3 = -a0
  3605: 84 a2 07                 t0 = a3 & 0x7
  3608: c8 27 0b                 a4 = a0 + t0
  3611: 51 02 15                 jump @262 if t0 == 0
      :                          @260
  3614: 64 8c                    a5 = a1
  3616: 64 75                    s0 = a0
  3618: 01                       fallthrough
      :                          @261
  3619: 7c ca                    a3 = u8 [a5]
  3621: 78 5a                    u8 [s0] = a3
  3623: 95 55 01                 s0 = s0 + 0x1
  3626: 95 cc 01                 a5 = a5 + 0x1
  3629: ac b5 f6                 jump @261 if s0 <u a4
      :                          @262
  3632: c8 28 03                 t1 = a1 + t0
  3635: c9 29 02                 t0 = a2 - t0
  3638: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
  3641: 84 38 07                 a1 = t1 & 0x7
  3644: c8 4b 0a                 a3 = a4 + t2
  3647: 51 08 3b                 jump @269 if a1 == 0
      :                          @263
  3650: 58 04 4b                 jump @272 if t2 <=s 0
      :                          @264
  3653: 97 38 03                 a1 = t1 << 0x3
  3656: 84 80 38                 ra = a1 & 0x38
  3659: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
  3662: 82 c5                    s0 = u64 [a5]
  3664: 8d 88                    i32 a1 = -a1
  3666: 84 88 38                 a1 = a1 & 0x38
  3669: 95 cc 08                 a5 = a5 + 0x8
  3672: 01                       fallthrough
      :                          @265
  3673: 82 c6                    s1 = u64 [a5]
  3675: d0 05 05                 s0 = s0 >> ra
  3678: cf 86 09                 a2 = s1 << a1
  3681: d4 59 09                 a2 = a2 | s0
  3684: 7b b9                    u64 [a4] = a2
  3686: 95 bb 08                 a4 = a4 + 0x8
  3689: 95 cc 08                 a5 = a5 + 0x8
  3692: 64 65                    s0 = s1
  3694: ac ab eb                 jump @265 if a4 <u a3
      :                          @266
  3697: 28 1c                    jump @272
      :                          @267
  3699: 64 7a                    a3 = a0
  3701: 52 09 21                 jump @273 if a2 != 0
      :                          @268
  3704: 28 2f                    jump @275
      :                          @269
  3706: 58 04 13                 jump @272 if t2 <=s 0
      :                          @270
  3709: 64 38                    a1 = t1
  3711: 01                       fallthrough
      :                          @271
  3712: 82 89                    a2 = u64 [a1]
  3714: 7b b9                    u64 [a4] = a2
  3716: 95 bb 08                 a4 = a4 + 0x8
  3719: 95 88 08                 a1 = a1 + 0x8
  3722: ac ab f6                 jump @271 if a4 <u a3
      :                          @272
  3725: c8 43 08                 a1 = t1 + t2
  3728: 84 29 07                 a2 = t0 & 0x7
  3731: 51 09 14                 jump @275 if a2 == 0
      :                          @273
  3734: c8 a9 09                 a2 = a2 + a3
  3737: 01                       fallthrough
      :                          @274
  3738: 7c 8b                    a4 = u8 [a1]
  3740: 78 ab                    u8 [a3] = a4
  3742: 95 aa 01                 a3 = a3 + 0x1
  3745: 95 88 01                 a1 = a1 + 0x1
  3748: ac 9a f6                 jump @274 if a3 <u a2
      :                          @275
  3751: 82 10 18                 ra = u64 [sp + 0x18]
  3754: 82 15 10                 s0 = u64 [sp + 0x10]
  3757: 82 16 08                 s1 = u64 [sp + 0x8]
  3760: 95 11 20                 sp = sp + 0x20
  3763: 32 00                    ret
      :                          @276 [@dyn 35]
  3765: 82 77                    a0 = u64 [a0]
  3767: 01                       fallthrough
      :                          @277
  3768: 28                       jump @277
      :                          @278
  3769: 95 11 a8                 sp = sp + 0xffffffffffffffa8
  3772: 7b 10 50                 u64 [sp + 0x50] = ra
  3775: 7b 15 48                 u64 [sp + 0x48] = s0
  3778: 7b 16 40                 u64 [sp + 0x40] = s1
  3781: 7b 18                    u64 [sp] = a1
  3783: 98 79 04                 a2 = a0 >> 0x4
  3786: 33 08 27                 a1 = 0x27
  3789: 33 0a 95 00 01           a3 = 0x10095
  3794: 53 29 71 02 7b           jump @281 if a2 <u 625
      :                          @279
  3799: 33 08 27                 a1 = 0x27
  3802: 95 1b 3e                 a4 = sp + 0x3e
  3805: 3a 09 00 00 03           a2 = u64 [0x30000]
  3810: 7b 19 10                 u64 [sp + 0x10] = a2
  3813: 49 11 08 f0 d8 00        u64 [sp + 8] = 0xd8f0
  3819: 33 03 7b 14              t1 = 0x147b
  3823: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
  3829: 01                       fallthrough
      :                          @280
  3830: 64 72                    t0 = a0
  3832: 82 17 10                 a0 = u64 [sp + 0x10]
  3835: d6 72 07                 a0 = t0 mulhu a0
  3838: 98 77 0b                 a0 = a0 >> 0xb
  3841: 82 19 08                 a2 = u64 [sp + 0x8]
  3844: c0 97 09                 i32 a2 = a0 * a2
  3847: c8 29 06                 s1 = a2 + t0
  3850: 97 69 30                 a2 = s1 << 0x30
  3853: 98 99 32                 a2 = a2 >> 0x32
  3856: ca 39 09                 a2 = a2 * t1
  3859: 98 94 11                 t2 = a2 >> 0x11
  3862: 98 99 10                 a2 = a2 >> 0x10
  3865: 84 99 fe 07              a2 = a2 & 0x7fe
  3869: 96 4c 9c                 a5 = t2 * 0xffffffffffffff9c
  3872: c8 6c 0c                 a5 = a5 + s1
  3875: 97 cc 31                 a5 = a5 << 0x31
  3878: 98 cc 30                 a5 = a5 >> 0x30
  3881: c8 a9 09                 a2 = a2 + a3
  3884: 7c 96                    s1 = u8 [a2]
  3886: 7c 99 01                 a2 = u8 [a2 + 0x1]
  3889: c8 ac 0c                 a5 = a5 + a3
  3892: 7c c5 01                 s0 = u8 [a5 + 0x1]
  3895: 7c cc                    a5 = u8 [a5]
  3897: 78 b9 ff                 u8 [a4 + 0xffffffffffffffff] = a2
  3900: 78 b6 fe                 u8 [a4 + 0xfffffffffffffffe] = s1
  3903: 78 b5 01                 u8 [a4 + 0x1] = s0
  3906: 78 bc                    u8 [a4] = a5
  3908: 95 88 fc                 a1 = a1 + 0xfffffffffffffffc
  3911: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
  3914: ac 20 ac                 jump @280 if ra <u t0
      :                          @281
  3917: 54 17 63 36              jump @283 if a0 <=u 99
      :                          @282
  3921: 97 79 30                 a2 = a0 << 0x30
  3924: 98 99 32                 a2 = a2 >> 0x32
  3927: 96 99 7b 14              a2 = a2 * 0x147b
  3931: 98 99 11                 a2 = a2 >> 0x11
  3934: 96 9b 9c                 a4 = a2 * 0xffffffffffffff9c
  3937: c8 b7 07                 a0 = a0 + a4
  3940: 97 77 31                 a0 = a0 << 0x31
  3943: 98 77 30                 a0 = a0 >> 0x30
  3946: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3949: c8 a7 07                 a0 = a0 + a3
  3952: 7c 7b 01                 a4 = u8 [a0 + 0x1]
  3955: 7c 77                    a0 = u8 [a0]
  3957: 95 1c 19                 a5 = sp + 0x19
  3960: c8 8c 0c                 a5 = a5 + a1
  3963: 78 cb 01                 u8 [a5 + 0x1] = a4
  3966: 78 c7                    u8 [a5] = a0
  3968: 64 97                    a0 = a2
  3970: 01                       fallthrough
      :                          @283
  3971: 55 17 0a 14              jump @285 if a0 >=u 10
      :                          @284
  3975: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  3978: 95 19 19                 a2 = sp + 0x19
  3981: c8 89 09                 a2 = a2 + a1
  3984: 83 77 30                 i32 a0 = a0 + 0x30
  3987: 78 97                    u8 [a2] = a0
  3989: 28 1c                    jump @286
      :                          @285
  3991: 97 77 01                 a0 = a0 << 0x1
  3994: 95 88 fe                 a1 = a1 + 0xfffffffffffffffe
  3997: c8 a7 07                 a0 = a0 + a3
  4000: 7c 79 01                 a2 = u8 [a0 + 0x1]
  4003: 7c 77                    a0 = u8 [a0]
  4005: 95 1a 19                 a3 = sp + 0x19
  4008: c8 8a 0a                 a3 = a3 + a1
  4011: 78 a9 01                 u8 [a3 + 0x1] = a2
  4014: 78 a7                    u8 [a3] = a0
  4016: 01                       fallthrough
      :                          @286
  4017: 95 1a 19                 a3 = sp + 0x19
  4020: c8 8a 0a                 a3 = a3 + a1
  4023: 9a 8b 27                 a4 = 0x27 - a1
  4026: 33 08 88 00 01           a1 = 0x10088
  4031: 82 17                    a0 = u64 [sp]
  4033: 33 09                    a2 = 0
  4035: 50 10 48 12              ra = 72, jump @288
      :                          @287 [@dyn 36]
  4039: 82 10 50                 ra = u64 [sp + 0x50]
  4042: 82 15 48                 s0 = u64 [sp + 0x48]
  4045: 82 16 40                 s1 = u64 [sp + 0x40]
  4048: 95 11 58                 sp = sp + 0x58
  4051: 32 00                    ret
      :                          @288
  4053: 95 11 98                 sp = sp + 0xffffffffffffff98
  4056: 7b 10 60                 u64 [sp + 0x60] = ra
  4059: 7b 15 58                 u64 [sp + 0x58] = s0
  4062: 7b 16 50                 u64 [sp + 0x50] = s1
  4065: 80 73 34                 t1 = u32 [a0 + 0x34]
  4068: 7b 1a 20                 u64 [sp + 0x20] = a3
  4071: 64 9c                    a5 = a2
  4073: 84 36 01                 s1 = t1 & 0x1
  4076: 33 02 2b                 t0 = 0x2b
  4079: 33 09 00 00 11           a2 = 0x110000
  4084: 84 3a 04                 a3 = t1 & 0x4
  4087: 7b 1b 28                 u64 [sp + 0x28] = a4
  4090: c8 b6 04                 t2 = s1 + a4
  4093: 7b 1c 30                 u64 [sp + 0x30] = a5
  4096: 52 0a 10                 jump @291 if a3 != 0
      :                          @289
  4099: 49 11 38                 u64 [sp + 56] = 0
  4102: 82 78                    a1 = u64 [a0]
  4104: 94 69 2b                 a2 = 0x2b if s1 != 0
  4107: 52 08 35                 jump @295 if a1 != 0
      :                          @290
  4110: 28 56                    jump @300
      :                          @291
  4112: 7b 18 38                 u64 [sp + 0x38] = a1
  4115: 33 09                    a2 = 0
  4117: 51 0c 1b                 jump @294 if a5 == 0
      :                          @292
  4120: 82 1b 38                 a4 = u64 [sp + 0x38]
  4123: 01                       fallthrough
      :                          @293
  4124: 7d b5                    s0 = i8 [a4]
  4126: 89 55 c0                 s0 = s0 <s 0xffffffffffffffc0
  4129: 85 5a 01                 a3 = s0 ^ 0x1
  4132: c8 a9 09                 a2 = a2 + a3
  4135: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
  4138: 95 bb 01                 a4 = a4 + 0x1
  4141: 52 0c ef                 jump @293 if a5 != 0
      :                          @294
  4144: c8 94 04                 t2 = t2 + a2
  4147: 33 09 00 00 11           a2 = 0x110000
  4152: 82 78                    a1 = u64 [a0]
  4154: db 62 09                 a2 = t0 if s1 != 0
  4157: 51 08 27                 jump @300 if a1 == 0
      :                          @295
  4160: 82 7a 08                 a3 = u64 [a0 + 0x8]
  4163: ae a4 21                 jump @300 if t2 >=u a3
      :                          @296
  4166: 84 38 08                 a1 = t1 & 0x8
  4169: 52 08 50                 jump @303 if a1 != 0
      :                          @297
  4172: 7c 76 38                 s1 = u8 [a0 + 0x38]
  4175: c9 4a 0a                 a3 = a3 - t2
  4178: 7b 19 18                 u64 [sp + 0x18] = a2
  4181: 5a 16 01 9d 00           jump @310 if s1 >s 1
      :                          @298
  4186: 52 06 aa 00              jump @312 if s1 != 0
      :                          @299
  4190: 7b 1a 10                 u64 [sp + 0x10] = a3
  4193: 28 a9 00                 jump @313
      :                          @300
  4196: 82 75 20                 s0 = u64 [a0 + 0x20]
  4199: 82 76 28                 s1 = u64 [a0 + 0x28]
  4202: 64 57                    a0 = s0
  4204: 64 68                    a1 = s1
  4206: 82 1a 38                 a3 = u64 [sp + 0x38]
  4209: 82 1b 30                 a4 = u64 [sp + 0x30]
  4212: 50 10 4a 6c 01           ra = 74, jump @333
      :                          @301 [@dyn 37]
  4217: 33 08 01                 a1 = 0x1
  4220: 52 07 bb 00              jump @318 if a0 != 0
      :                          @302
  4224: 82 6c 18                 a5 = u64 [s1 + 0x18]
  4227: 64 57                    a0 = s0
  4229: 82 18 20                 a1 = u64 [sp + 0x20]
  4232: 82 19 28                 a2 = u64 [sp + 0x28]
  4235: 82 10 60                 ra = u64 [sp + 0x60]
  4238: 82 15 58                 s0 = u64 [sp + 0x58]
  4241: 82 16 50                 s1 = u64 [sp + 0x50]
  4244: 95 11 68                 sp = sp + 0x68
  4247: 32 0c                    jump [a5]
      :                          @303
  4249: 7b 1a 40                 u64 [sp + 0x40] = a3
  4252: 64 45                    s0 = t2
  4254: 81 78 30                 a1 = i32 [a0 + 0x30]
  4257: 7b 18 10                 u64 [sp + 0x10] = a1
  4260: 7c 7a 38                 a3 = u8 [a0 + 0x38]
  4263: 7b 1a 08                 u64 [sp + 0x8] = a3
  4266: 82 7a 20                 a3 = u64 [a0 + 0x20]
  4269: 82 78 28                 a1 = u64 [a0 + 0x28]
  4272: 48 17 30 30              u32 [a0 + 48] = 0x30
  4276: 7b 17                    u64 [sp] = a0
  4278: 46 17 38 01              u8 [a0 + 56] = 0x1
  4282: 7b 1a 48                 u64 [sp + 0x48] = a3
  4285: 64 a7                    a0 = a3
  4287: 64 86                    s1 = a1
  4289: 82 1a 38                 a3 = u64 [sp + 0x38]
  4292: 82 1b 30                 a4 = u64 [sp + 0x30]
  4295: 50 10 4c 19 01           ra = 76, jump @333
      :                          @304 [@dyn 38]
  4300: 52 07 67                 jump @317 if a0 != 0
      :                          @305
  4303: 82 17 40                 a0 = u64 [sp + 0x40]
  4306: c9 57 05                 s0 = a0 - s0
  4309: 95 55 01                 s0 = s0 + 0x1
  4312: 01                       fallthrough
      :                          @306
  4313: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
  4316: 51 05 c6 00              jump @328 if s0 == 0
      :                          @307
  4320: 82 69 20                 a2 = u64 [s1 + 0x20]
  4323: 33 08 30                 a1 = 0x30
  4326: 82 17 48                 a0 = u64 [sp + 0x48]
  4329: b4 90 01 4e              ra = 78, jump [a2]
      :                          @308 [@dyn 39]
  4333: 51 07 ec                 jump @306 if a0 == 0
      :                          @309
  4336: 28 43                    jump @317
      :                          @310
  4338: 52 16 02 12              jump @312 if s1 != 2
      :                          @311
  4342: 98 a6 01                 s1 = a3 >> 0x1
  4345: 95 a8 01                 a1 = a3 + 0x1
  4348: 98 88 01                 a1 = a1 >> 0x1
  4351: 7b 18 10                 u64 [sp + 0x10] = a1
  4354: 28 08                    jump @313
      :                          @312
  4356: 64 a6                    s1 = a3
  4358: 49 11 10                 u64 [sp + 16] = 0
  4361: 01                       fallthrough
      :                          @313
  4362: 82 78 20                 a1 = u64 [a0 + 0x20]
  4365: 7b 18 48                 u64 [sp + 0x48] = a1
  4368: 82 75 28                 s0 = u64 [a0 + 0x28]
  4371: 81 77 30                 a0 = i32 [a0 + 0x30]
  4374: 7b 17 40                 u64 [sp + 0x40] = a0
  4377: 95 66 01                 s1 = s1 + 0x1
  4380: 01                       fallthrough
      :                          @314
  4381: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  4384: 51 06 27                 jump @319 if s1 == 0
      :                          @315
  4387: 82 59 20                 a2 = u64 [s0 + 0x20]
  4390: 82 17 48                 a0 = u64 [sp + 0x48]
  4393: 82 18 40                 a1 = u64 [sp + 0x40]
  4396: b4 90 01 50              ra = 80, jump [a2]
      :                          @316 [@dyn 40]
  4400: 51 07 ed                 jump @314 if a0 == 0
      :                          @317
  4403: 33 08 01                 a1 = 0x1
  4406: 01                       fallthrough
      :                          @318
  4407: 64 87                    a0 = a1
  4409: 82 10 60                 ra = u64 [sp + 0x60]
  4412: 82 15 58                 s0 = u64 [sp + 0x58]
  4415: 82 16 50                 s1 = u64 [sp + 0x50]
  4418: 95 11 68                 sp = sp + 0x68
  4421: 32 00                    ret
      :                          @319
  4423: 82 16 48                 s1 = u64 [sp + 0x48]
  4426: 64 67                    a0 = s1
  4428: 64 58                    a1 = s0
  4430: 82 19 18                 a2 = u64 [sp + 0x18]
  4433: 82 1a 38                 a3 = u64 [sp + 0x38]
  4436: 82 1b 30                 a4 = u64 [sp + 0x30]
  4439: 50 10 52 89 00           ra = 82, jump @333
      :                          @320 [@dyn 41]
  4444: 33 08 01                 a1 = 0x1
  4447: 52 07 d8                 jump @318 if a0 != 0
      :                          @321
  4450: 82 5a 18                 a3 = u64 [s0 + 0x18]
  4453: 64 67                    a0 = s1
  4455: 82 18 20                 a1 = u64 [sp + 0x20]
  4458: 82 19 28                 a2 = u64 [sp + 0x28]
  4461: b4 a0 01 54              ra = 84, jump [a3]
      :                          @322 [@dyn 42]
  4465: 33 08 01                 a1 = 0x1
  4468: 52 07 c3                 jump @318 if a0 != 0
      :                          @323
  4471: 82 17 10                 a0 = u64 [sp + 0x10]
  4474: 9a 77                    a0 = -a0
  4476: 7b 17 38                 u64 [sp + 0x38] = a0
  4479: 33 06 ff                 s1 = 0xffffffffffffffff
  4482: 01                       fallthrough
      :                          @324
  4483: 82 17 38                 a0 = u64 [sp + 0x38]
  4486: c8 67 07                 a0 = a0 + s1
  4489: 51 17 ff 42              jump @331 if a0 == 4294967295
      :                          @325
  4493: 82 59 20                 a2 = u64 [s0 + 0x20]
  4496: 82 17 48                 a0 = u64 [sp + 0x48]
  4499: 82 18 40                 a1 = u64 [sp + 0x40]
  4502: b4 90 01 56              ra = 86, jump [a2]
      :                          @326 [@dyn 43]
  4506: 95 66 01                 s1 = s1 + 0x1
  4509: 51 07 e6                 jump @324 if a0 == 0
      :                          @327
  4512: 28 37                    jump @332
      :                          @328
  4514: 82 6a 18                 a3 = u64 [s1 + 0x18]
  4517: 82 17 48                 a0 = u64 [sp + 0x48]
  4520: 82 18 20                 a1 = u64 [sp + 0x20]
  4523: 82 19 28                 a2 = u64 [sp + 0x28]
  4526: b4 a0 01 58              ra = 88, jump [a3]
      :                          @329 [@dyn 44]
  4530: 33 08 01                 a1 = 0x1
  4533: 52 07 82                 jump @318 if a0 != 0
      :                          @330
  4536: 33 08                    a1 = 0
  4538: 82 16                    s1 = u64 [sp]
  4540: 82 17 10                 a0 = u64 [sp + 0x10]
  4543: 7a 67 30                 u32 [s1 + 0x30] = a0
  4546: 82 17 08                 a0 = u64 [sp + 0x8]
  4549: 78 67 38                 u8 [s1 + 0x38] = a0
  4552: 28 6f ff                 jump @318
      :                          @331
  4555: 82 16 10                 s1 = u64 [sp + 0x10]
  4558: 82 17 10                 a0 = u64 [sp + 0x10]
  4561: d8 76 08                 a1 = s1 <u a0
  4564: 28 63 ff                 jump @318
      :                          @332
  4567: 82 17 10                 a0 = u64 [sp + 0x10]
  4570: d8 76 08                 a1 = s1 <u a0
  4573: 28 5a ff                 jump @318
      :                          @333
  4576: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  4579: 7b 10 20                 u64 [sp + 0x20] = ra
  4582: 7b 15 18                 u64 [sp + 0x18] = s0
  4585: 7b 16 10                 u64 [sp + 0x10] = s1
  4588: 83 9c                    i32 a5 = a2 + 0
  4590: 33 02 00 00 11           t0 = 0x110000
  4595: 64 a6                    s1 = a3
  4597: 64 85                    s0 = a1
  4599: 64 7a                    a3 = a0
  4601: aa 2c 20                 jump @336 if a5 == t0
      :                          @334
  4604: 82 5c 20                 a5 = u64 [s0 + 0x20]
  4607: 64 a7                    a0 = a3
  4609: 64 98                    a1 = a2
  4611: 7b 1b 08                 u64 [sp + 0x8] = a4
  4614: 7b 1a                    u64 [sp] = a3
  4616: b4 c0 01 5a              ra = 90, jump [a5]
      :                          @335 [@dyn 45]
  4620: 82 1a                    a3 = u64 [sp]
  4622: 82 1b 08                 a4 = u64 [sp + 0x8]
  4625: 64 78                    a1 = a0
  4627: 33 07 01                 a0 = 0x1
  4630: 52 08 20                 jump @339 if a1 != 0
      :                          @336
  4633: 51 06 1a                 jump @338 if s1 == 0
      :                          @337
  4636: 82 5c 18                 a5 = u64 [s0 + 0x18]
  4639: 64 a7                    a0 = a3
  4641: 64 68                    a1 = s1
  4643: 64 b9                    a2 = a4
  4645: 82 10 20                 ra = u64 [sp + 0x20]
  4648: 82 15 18                 s0 = u64 [sp + 0x18]
  4651: 82 16 10                 s1 = u64 [sp + 0x10]
  4654: 95 11 28                 sp = sp + 0x28
  4657: 32 0c                    jump [a5]
      :                          @338
  4659: 33 07                    a0 = 0
  4661: 01                       fallthrough
      :                          @339
  4662: 82 10 20                 ra = u64 [sp + 0x20]
  4665: 82 15 18                 s0 = u64 [sp + 0x18]
  4668: 82 16 10                 s1 = u64 [sp + 0x10]
  4671: 95 11 28                 sp = sp + 0x28
  4674: 32 00                    ret
      :                          @340
  4676: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  4680: 7b 10 80 00              u64 [sp + 0x80] = ra
  4684: 7b 15 78                 u64 [sp + 0x78] = s0
  4687: 7b 16 70                 u64 [sp + 0x70] = s1
  4690: 49 11 60 20              u64 [sp + 96] = 0x20
  4694: 33 0a 03                 a3 = 0x3
  4697: 78 1a 68                 u8 [sp + 0x68] = a3
  4700: 82 96 20                 s1 = u64 [a2 + 0x20]
  4703: 49 11 30                 u64 [sp + 48] = 0
  4706: 49 11 40                 u64 [sp + 64] = 0
  4709: 7b 17 50                 u64 [sp + 0x50] = a0
  4712: 7b 18 58                 u64 [sp + 0x58] = a1
  4715: 51 06 07 01              jump @362 if s1 == 0
      :                          @341
  4719: 82 97 28                 a0 = u64 [a2 + 0x28]
  4722: 51 07 74 01              jump @372 if a0 == 0
      :                          @342
  4726: 49 11 28                 u64 [sp + 40] = 0
  4729: 82 95                    s0 = u64 [a2]
  4731: 7b 19 08                 u64 [sp + 0x8] = a2
  4734: 82 98 10                 a1 = u64 [a2 + 0x10]
  4737: 7b 18 18                 u64 [sp + 0x18] = a1
  4740: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
  4743: 97 88 03                 a1 = a1 << 0x3
  4746: 98 88 03                 a1 = a1 >> 0x3
  4749: 95 88 01                 a1 = a1 + 0x1
  4752: 7b 18                    u64 [sp] = a1
  4754: 95 55 08                 s0 = s0 + 0x8
  4757: 96 78 38                 a1 = a0 * 0x38
  4760: 95 66 18                 s1 = s1 + 0x18
  4763: 33 07 46                 a0 = 0x46
  4766: 7b 17 10                 u64 [sp + 0x10] = a0
  4769: 01                       fallthrough
      :                          @343
  4770: 7b 18 20                 u64 [sp + 0x20] = a1
  4773: 82 59                    a2 = u64 [s0]
  4775: 51 09 17                 jump @346 if a2 == 0
      :                          @344
  4778: 82 1a 58                 a3 = u64 [sp + 0x58]
  4781: 82 17 50                 a0 = u64 [sp + 0x50]
  4784: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
  4787: 82 aa 18                 a3 = u64 [a3 + 0x18]
  4790: b4 a0 01 5c              ra = 92, jump [a3]
      :                          @345 [@dyn 46]
  4794: 52 07 51 01              jump @375 if a0 != 0
      :                          @346
  4798: 81 67 10                 a0 = i32 [s1 + 0x10]
  4801: 7a 17 60                 u32 [sp + 0x60] = a0
  4804: 7c 67 18                 a0 = u8 [s1 + 0x18]
  4807: 78 17 68                 u8 [sp + 0x68] = a0
  4810: 81 67 14                 a0 = i32 [s1 + 0x14]
  4813: 7a 17 64                 u32 [sp + 0x64] = a0
  4816: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  4819: 82 67                    a0 = u64 [s1]
  4821: 51 08 26                 jump @351 if a1 == 0
      :                          @347
  4824: 52 18 01 16              jump @349 if a1 != 1
      :                          @348
  4828: 97 77 04                 a0 = a0 << 0x4
  4831: 82 18 18                 a1 = u64 [sp + 0x18]
  4834: c8 87 07                 a0 = a0 + a1
  4837: 82 78 08                 a1 = u64 [a0 + 0x8]
  4840: 82 19 10                 a2 = u64 [sp + 0x10]
  4843: aa 98 07                 jump @350 if a1 == a2
      :                          @349
  4846: 33 08                    a1 = 0
  4848: 28 0f                    jump @352
      :                          @350
  4850: 82 77                    a0 = u64 [a0]
  4852: 82 77                    a0 = u64 [a0]
  4854: 33 08 01                 a1 = 0x1
  4857: 28 06                    jump @352
      :                          @351
  4859: 33 08 01                 a1 = 0x1
  4862: 01                       fallthrough
      :                          @352
  4863: 7b 18 30                 u64 [sp + 0x30] = a1
  4866: 7b 17 38                 u64 [sp + 0x38] = a0
  4869: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
  4872: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
  4875: 51 08 26                 jump @357 if a1 == 0
      :                          @353
  4878: 52 18 01 16              jump @355 if a1 != 1
      :                          @354
  4882: 97 77 04                 a0 = a0 << 0x4
  4885: 82 18 18                 a1 = u64 [sp + 0x18]
  4888: c8 87 07                 a0 = a0 + a1
  4891: 82 78 08                 a1 = u64 [a0 + 0x8]
  4894: 82 19 10                 a2 = u64 [sp + 0x10]
  4897: aa 98 07                 jump @356 if a1 == a2
      :                          @355
  4900: 33 08                    a1 = 0
  4902: 28 0f                    jump @358
      :                          @356
  4904: 82 77                    a0 = u64 [a0]
  4906: 82 77                    a0 = u64 [a0]
  4908: 33 08 01                 a1 = 0x1
  4911: 28 06                    jump @358
      :                          @357
  4913: 33 08 01                 a1 = 0x1
  4916: 01                       fallthrough
      :                          @358
  4917: 7b 18 40                 u64 [sp + 0x40] = a1
  4920: 7b 17 48                 u64 [sp + 0x48] = a0
  4923: 82 67 08                 a0 = u64 [s1 + 0x8]
  4926: 97 77 04                 a0 = a0 << 0x4
  4929: 82 18 18                 a1 = u64 [sp + 0x18]
  4932: c8 78 08                 a1 = a1 + a0
  4935: 82 87                    a0 = u64 [a1]
  4937: 82 89 08                 a2 = u64 [a1 + 0x8]
  4940: 95 18 30                 a1 = sp + 0x30
  4943: b4 90 01 5e              ra = 94, jump [a2]
      :                          @359 [@dyn 47]
  4947: 52 07 b8 00              jump @375 if a0 != 0
      :                          @360
  4951: 95 55 10                 s0 = s0 + 0x10
  4954: 82 18 20                 a1 = u64 [sp + 0x20]
  4957: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
  4960: 95 66 38                 s1 = s1 + 0x38
  4963: 82 17 28                 a0 = u64 [sp + 0x28]
  4966: 95 77 01                 a0 = a0 + 0x1
  4969: 7b 17 28                 u64 [sp + 0x28] = a0
  4972: 52 08 36 ff              jump @343 if a1 != 0
      :                          @361
  4976: 28 69                    jump @370
      :                          @362
  4978: 82 97 18                 a0 = u64 [a2 + 0x18]
  4981: 51 07 71                 jump @372 if a0 == 0
      :                          @363
  4984: 82 95 10                 s0 = u64 [a2 + 0x10]
  4987: 33 0a                    a3 = 0
  4989: 97 78 04                 a1 = a0 << 0x4
  4992: c8 58 08                 a1 = a1 + s0
  4995: 7b 18 20                 u64 [sp + 0x20] = a1
  4998: 7b 19 08                 u64 [sp + 0x8] = a2
  5001: 82 96                    s1 = u64 [a2]
  5003: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5006: 97 77 04                 a0 = a0 << 0x4
  5009: 98 77 04                 a0 = a0 >> 0x4
  5012: 95 77 01                 a0 = a0 + 0x1
  5015: 7b 17                    u64 [sp] = a0
  5017: 95 66 08                 s1 = s1 + 0x8
  5020: 01                       fallthrough
      :                          @364
  5021: 7b 1a 28                 u64 [sp + 0x28] = a3
  5024: 82 69                    a2 = u64 [s1]
  5026: 51 09 16                 jump @367 if a2 == 0
      :                          @365
  5029: 82 1a 58                 a3 = u64 [sp + 0x58]
  5032: 82 17 50                 a0 = u64 [sp + 0x50]
  5035: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
  5038: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5041: b4 a0 01 60              ra = 96, jump [a3]
      :                          @366 [@dyn 48]
  5045: 52 07 56                 jump @375 if a0 != 0
      :                          @367
  5048: 82 57                    a0 = u64 [s0]
  5050: 82 59 08                 a2 = u64 [s0 + 0x8]
  5053: 95 18 30                 a1 = sp + 0x30
  5056: b4 90 01 62              ra = 98, jump [a2]
      :                          @368 [@dyn 49]
  5060: 52 07 47                 jump @375 if a0 != 0
      :                          @369
  5063: 95 66 10                 s1 = s1 + 0x10
  5066: 95 55 10                 s0 = s0 + 0x10
  5069: 82 1a 28                 a3 = u64 [sp + 0x28]
  5072: 95 aa 01                 a3 = a3 + 0x1
  5075: 82 17 20                 a0 = u64 [sp + 0x20]
  5078: ab 75 c7                 jump @364 if s0 != a0
      :                          @370
  5081: 82 19 08                 a2 = u64 [sp + 0x8]
  5084: 82 1a                    a3 = u64 [sp]
  5086: 82 97 08                 a0 = u64 [a2 + 0x8]
  5089: ac 7a 0d                 jump @373 if a3 <u a0
      :                          @371
  5092: 28 2c                    jump @376
      :                          @372
  5094: 33 0a                    a3 = 0
  5096: 82 97 08                 a0 = u64 [a2 + 0x8]
  5099: 54 07 25                 jump @376 if a0 <=u 0
      :                          @373
  5102: 82 97                    a0 = u64 [a2]
  5104: 97 a8 04                 a1 = a3 << 0x4
  5107: c8 87 09                 a2 = a0 + a1
  5110: 82 1a 58                 a3 = u64 [sp + 0x58]
  5113: 82 17 50                 a0 = u64 [sp + 0x50]
  5116: 82 98                    a1 = u64 [a2]
  5118: 82 99 08                 a2 = u64 [a2 + 0x8]
  5121: 82 aa 18                 a3 = u64 [a3 + 0x18]
  5124: b4 a0 01 64              ra = 100, jump [a3]
      :                          @374 [@dyn 50]
  5128: 51 07 08                 jump @376 if a0 == 0
      :                          @375
  5131: 33 07 01                 a0 = 0x1
  5134: 28 05                    jump @377
      :                          @376
  5136: 33 07                    a0 = 0
  5138: 01                       fallthrough
      :                          @377
  5139: 82 10 80 00              ra = u64 [sp + 0x80]
  5143: 82 15 78                 s0 = u64 [sp + 0x78]
  5146: 82 16 70                 s1 = u64 [sp + 0x70]
  5149: 95 11 88 00              sp = sp + 0x88
  5153: 32 00                    ret
      :                          @378 [@dyn 51]
  5155: 32 00                    ret
      :                          @379 [@dyn 52]
  5157: 95 11 88                 sp = sp + 0xffffffffffffff88
  5160: 7b 10 70                 u64 [sp + 0x70] = ra
  5163: 7b 15 68                 u64 [sp + 0x68] = s0
  5166: 7b 16 60                 u64 [sp + 0x60] = s1
  5169: 64 93                    t1 = a2
  5171: 33 0c                    a5 = 0
  5173: 33 02                    t0 = 0
  5175: 33 0b                    a4 = 0
  5177: 14 04 ff fe fe fe fe fe fe fe t2 = 0xfefefefefefefeff
  5187: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
  5193: 14 00 0a 0a 0a 0a 0a 0a 0a 0a ra = 0xa0a0a0a0a0a0a0a
  5203: 82 79 10                 a2 = u64 [a0 + 0x10]
  5206: 7b 19 48                 u64 [sp + 0x48] = a2
  5209: 82 79                    a2 = u64 [a0]
  5211: 7b 19 30                 u64 [sp + 0x30] = a2
  5214: 82 77 08                 a0 = u64 [a0 + 0x8]
  5217: 7b 17 28                 u64 [sp + 0x28] = a0
  5220: 7b 18 50                 u64 [sp + 0x50] = a1
  5223: 95 88 08                 a1 = a1 + 0x8
  5226: 7b 18                    u64 [sp] = a1
  5228: 33 07 89 00 01           a0 = 0x10089
  5233: 7b 17 08                 u64 [sp + 0x8] = a0
  5236: 33 05 0a                 s0 = 0xa
  5239: 7b 13 20                 u64 [sp + 0x20] = t1
  5242: 7b 14 18                 u64 [sp + 0x18] = t2
  5245: 7b 10 10                 u64 [sp + 0x10] = ra
  5248: 28 39                    jump @383
      :                          @380
  5250: c8 89 07                 a0 = a2 + a1
  5253: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
  5256: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5259: 88 77 01                 a0 = a0 <u 0x1
  5262: 01                       fallthrough
      :                          @381
  5263: 82 1a 48                 a3 = u64 [sp + 0x48]
  5266: 78 a7                    u8 [a3] = a0
  5268: 82 17 28                 a0 = u64 [sp + 0x28]
  5271: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5274: 82 17 30                 a0 = u64 [sp + 0x30]
  5277: b4 a0 01 6a              ra = 106, jump [a3]
      :                          @382 [@dyn 53]
  5281: 64 52                    t0 = s0
  5283: 82 13 20                 t1 = u64 [sp + 0x20]
  5286: 82 14 18                 t2 = u64 [sp + 0x18]
  5289: 82 10 10                 ra = u64 [sp + 0x10]
  5292: 82 1c 58                 a5 = u64 [sp + 0x58]
  5295: 33 05 0a                 s0 = 0xa
  5298: 82 1b 38                 a4 = u64 [sp + 0x38]
  5301: 52 07 66 01              jump @424 if a0 != 0
      :                          @383
  5305: 84 b7 ff 00              a0 = a4 & 0xff
  5309: 52 07 5a 01              jump @423 if a0 != 0
      :                          @384
  5313: 7b 12 40                 u64 [sp + 0x40] = t0
  5316: ae c3 0a                 jump @387 if t1 >=u a5
      :                          @385
  5319: 28 f4 00                 jump @414
      :                          @386
  5322: ac c3 f1 00              jump @414 if t1 <u a5
      :                          @387
  5326: c9 c3 08                 a1 = t1 - a5
  5329: 82 16 50                 s1 = u64 [sp + 0x50]
  5332: c8 c6 06                 s1 = s1 + a5
  5335: 55 18 10 1d              jump @393 if a1 >=u 16
      :                          @388
  5339: aa c3 dd 00              jump @413 if t1 == a5
      :                          @389
  5343: 33 0a                    a3 = 0
  5345: 01                       fallthrough
      :                          @390
  5346: c8 a6 07                 a0 = s1 + a3
  5349: 7c 77                    a0 = u8 [a0]
  5351: aa 57 aa 00              jump @408 if a0 == s0
      :                          @391
  5355: 95 aa 01                 a3 = a3 + 0x1
  5358: ab a8 f4                 jump @390 if a1 != a3
      :                          @392
  5361: 28 c7 00                 jump @413
      :                          @393
  5364: 95 69 07                 a2 = s1 + 0x7
  5367: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
  5370: c9 6a 07                 a0 = a3 - s1
  5373: d3 6a 0a                 a3 = a3 ^ s1
  5376: 88 aa 01                 a3 = a3 <u 0x1
  5379: 88 7b 01                 a4 = a0 <u 0x1
  5382: d4 ba 0a                 a3 = a3 | a4
  5385: 7b 1c 58                 u64 [sp + 0x58] = a5
  5388: 51 0a 44                 jump @399 if a3 == 0
      :                          @394
  5391: 33 07                    a0 = 0
  5393: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  5396: 01                       fallthrough
      :                          @395
  5397: 82 1b 58                 a4 = u64 [sp + 0x58]
  5400: 82 19                    a2 = u64 [sp]
  5402: c8 9b 0b                 a4 = a4 + a2
  5405: 01                       fallthrough
      :                          @396
  5406: c8 76 0c                 a5 = s1 + a0
  5409: 82 cc                    a5 = u64 [a5]
  5411: c8 7b 09                 a2 = a4 + a0
  5414: 82 99                    a2 = u64 [a2]
  5416: d3 0c 05                 s0 = a5 ^ ra
  5419: c8 45 05                 s0 = s0 + t2
  5422: e0 c5 0c                 a5 = s0 & ~a5
  5425: d3 09 05                 s0 = a2 ^ ra
  5428: 3a 0a 08 00 03           a3 = u64 [0x30008]
  5433: c8 45 05                 s0 = s0 + t2
  5436: e0 95 09                 a2 = s0 & ~a2
  5439: d4 c9 09                 a2 = a2 | a5
  5442: d2 a9 09                 a2 = a2 & a3
  5445: 52 09 1f                 jump @402 if a2 != 0
      :                          @397
  5448: 95 77 10                 a0 = a0 + 0x10
  5451: ae 72 d3                 jump @396 if t0 >=u a0
      :                          @398
  5454: 28 16                    jump @402
      :                          @399
  5456: c8 a6 0b                 a4 = s1 + a3
  5459: 7c bb                    a4 = u8 [a4]
  5461: aa 5b 54                 jump @411 if a4 == s0
      :                          @400
  5464: 95 aa 01                 a3 = a3 + 0x1
  5467: ab a7 f5                 jump @399 if a0 != a3
      :                          @401
  5470: 95 82 f0                 t0 = a1 + 0xfffffffffffffff0
  5473: ae 72 b4                 jump @395 if t0 >=u a0
      :                          @402
  5476: aa 87 98 00              jump @420 if a0 == a1
      :                          @403
  5480: 33 0a                    a3 = 0
  5482: c8 76 06                 s1 = s1 + a0
  5485: c9 73 08                 a1 = t1 - a0
  5488: 82 1c 58                 a5 = u64 [sp + 0x58]
  5491: c9 c8 08                 a1 = a1 - a5
  5494: 33 05 0a                 s0 = 0xa
  5497: 82 12 40                 t0 = u64 [sp + 0x40]
  5500: 01                       fallthrough
      :                          @404
  5501: c8 a6 09                 a2 = s1 + a3
  5504: 7c 99                    a2 = u8 [a2]
  5506: aa 59 0b                 jump @407 if a2 == s0
      :                          @405
  5509: 95 aa 01                 a3 = a3 + 0x1
  5512: ab a8 f5                 jump @404 if a1 != a3
      :                          @406
  5515: 28 2d                    jump @413
      :                          @407
  5517: c8 7a 0a                 a3 = a3 + a0
  5520: 01                       fallthrough
      :                          @408
  5521: c8 ca 0a                 a3 = a3 + a5
  5524: 95 ac 01                 a5 = a3 + 0x1
  5527: ae 3a 33 ff              jump @386 if a3 >=u t1
      :                          @409
  5531: 82 17 50                 a0 = u64 [sp + 0x50]
  5534: c8 7a 0a                 a3 = a3 + a0
  5537: 7c a7                    a0 = u8 [a3]
  5539: ab 57 27 ff              jump @386 if a0 != s0
      :                          @410
  5543: 28 5c                    jump @421
      :                          @411
  5545: 82 1c 58                 a5 = u64 [sp + 0x58]
  5548: c8 ca 0a                 a3 = a3 + a5
  5551: 95 ac 01                 a5 = a3 + 0x1
  5554: ac 3a e9                 jump @409 if a3 <u t1
      :                          @412
  5557: 28 15 ff                 jump @386
      :                          @413
  5560: 64 3c                    a5 = t1
  5562: 01                       fallthrough
      :                          @414
  5563: 7b 1c 58                 u64 [sp + 0x58] = a5
  5566: 49 11 38 01              u64 [sp + 56] = 0x1
  5570: 64 25                    s0 = t0
  5572: 64 36                    s1 = t1
  5574: aa 32 51                 jump @423 if t0 == t1
      :                          @415
  5577: 82 17 48                 a0 = u64 [sp + 0x48]
  5580: 7c 77                    a0 = u8 [a0]
  5582: 51 07 1c                 jump @418 if a0 == 0
      :                          @416
  5585: 82 17 28                 a0 = u64 [sp + 0x28]
  5588: 82 7a 18                 a3 = u64 [a0 + 0x18]
  5591: 33 09 04                 a2 = 0x4
  5594: 82 17 30                 a0 = u64 [sp + 0x30]
  5597: 82 18 08                 a1 = u64 [sp + 0x8]
  5600: b4 a0 01 6c              ra = 108, jump [a3]
      :                          @417 [@dyn 54]
  5604: 82 12 40                 t0 = u64 [sp + 0x40]
  5607: 52 07 34                 jump @424 if a0 != 0
      :                          @418
  5610: c9 26 09                 a2 = s1 - t0
  5613: 82 18 50                 a1 = u64 [sp + 0x50]
  5616: c8 28 08                 a1 = a1 + t0
  5619: ab 26 8f fe              jump @380 if s1 != t0
      :                          @419
  5623: 33 07                    a0 = 0
  5625: 28 96 fe                 jump @381
      :                          @420
  5628: 64 3c                    a5 = t1
  5630: 82 12 40                 t0 = u64 [sp + 0x40]
  5633: 28 ba                    jump @414
      :                          @421
  5635: 49 11 38                 u64 [sp + 56] = 0
  5638: 64 c6                    s1 = a5
  5640: 64 c5                    s0 = a5
  5642: 7b 1c 58                 u64 [sp + 0x58] = a5
  5645: 82 17 48                 a0 = u64 [sp + 0x48]
  5648: 7c 77                    a0 = u8 [a0]
  5650: 52 07 bf                 jump @416 if a0 != 0
      :                          @422
  5653: 28 d5                    jump @418
      :                          @423
  5655: 33 07                    a0 = 0
  5657: 28 06                    jump @425
      :                          @424
  5659: 33 07 01                 a0 = 0x1
  5662: 01                       fallthrough
      :                          @425
  5663: 82 10 70                 ra = u64 [sp + 0x70]
  5666: 82 15 68                 s0 = u64 [sp + 0x68]
  5669: 82 16 60                 s1 = u64 [sp + 0x60]
  5672: 95 11 78                 sp = sp + 0x78
  5675: 32 00                    ret
      :                          @426 [@dyn 55]
  5677: 95 11 d8                 sp = sp + 0xffffffffffffffd8
  5680: 7b 10 20                 u64 [sp + 0x20] = ra
  5683: 7b 15 18                 u64 [sp + 0x18] = s0
  5686: 7b 16 10                 u64 [sp + 0x10] = s1
  5689: 82 75 10                 s0 = u64 [a0 + 0x10]
  5692: 7c 59                    a2 = u8 [s0]
  5694: 82 7b                    a4 = u64 [a0]
  5696: 82 76 08                 s1 = u64 [a0 + 0x8]
  5699: 51 09 32                 jump @430 if a2 == 0
      :                          @427
  5702: 82 6a 18                 a3 = u64 [s1 + 0x18]
  5705: 7b 18 08                 u64 [sp + 0x8] = a1
  5708: 33 08 89 00 01           a1 = 0x10089
  5713: 33 09 04                 a2 = 0x4
  5716: 64 b7                    a0 = a4
  5718: 7b 1b                    u64 [sp] = a4
  5720: b4 a0 01 70              ra = 112, jump [a3]
      :                          @428 [@dyn 56]
  5724: 82 18 08                 a1 = u64 [sp + 0x8]
  5727: 82 1b                    a4 = u64 [sp]
  5729: 51 07 14                 jump @430 if a0 == 0
      :                          @429
  5732: 33 07 01                 a0 = 0x1
  5735: 82 10 20                 ra = u64 [sp + 0x20]
  5738: 82 15 18                 s0 = u64 [sp + 0x18]
  5741: 82 16 10                 s1 = u64 [sp + 0x10]
  5744: 95 11 28                 sp = sp + 0x28
  5747: 32 00                    ret
      :                          @430
  5749: 83 87                    i32 a0 = a1 + 0
  5751: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
  5754: 88 77 01                 a0 = a0 <u 0x1
  5757: 78 57                    u8 [s0] = a0
  5759: 82 6c 20                 a5 = u64 [s1 + 0x20]
  5762: 64 b7                    a0 = a4
  5764: 82 10 20                 ra = u64 [sp + 0x20]
  5767: 82 15 18                 s0 = u64 [sp + 0x18]
  5770: 82 16 10                 s1 = u64 [sp + 0x10]
  5773: 95 11 28                 sp = sp + 0x28
  5776: 32 0c                    jump [a5]
      :                          @431 [@dyn 57]
  5778: 64 8a                    a3 = a1
  5780: 33 08 38 02 01           a1 = 0x10238
  5785: 64 a9                    a2 = a3
  5787: 28 a9 fb                 jump @340
      :                          @432
  5790: 95 11 70 ff              sp = sp + 0xffffffffffffff70
  5794: 7b 10 88 00              u64 [sp + 0x88] = ra
  5798: 7b 15 80 00              u64 [sp + 0x80] = s0
  5802: 7b 16 78                 u64 [sp + 0x78] = s1
  5805: 64 75                    s0 = a0
  5807: 7c 77 08                 a0 = u8 [a0 + 0x8]
  5810: 64 8b                    a4 = a1
  5812: 33 08 01                 a1 = 0x1
  5815: 33 06 01                 s1 = 0x1
  5818: 51 07 1d                 jump @434 if a0 == 0
      :                          @433
  5821: 78 56 08                 u8 [s0 + 0x8] = s1
  5824: 46 15 09 01              u8 [s0 + 9] = 0x1
  5828: 64 57                    a0 = s0
  5830: 82 10 88 00              ra = u64 [sp + 0x88]
  5834: 82 15 80 00              s0 = u64 [sp + 0x80]
  5838: 82 16 78                 s1 = u64 [sp + 0x78]
  5841: 95 11 90 00              sp = sp + 0x90
  5845: 32 00                    ret
      :                          @434
  5847: 64 9a                    a3 = a2
  5849: 82 5c                    a5 = u64 [s0]
  5851: 80 c7 34                 a0 = u32 [a5 + 0x34]
  5854: 7c 58 09                 a1 = u8 [s0 + 0x9]
  5857: 84 79 04                 a2 = a0 & 0x4
  5860: 52 09 43                 jump @440 if a2 != 0
      :                          @435
  5863: 51 08 31                 jump @438 if a1 == 0
      :                          @436
  5866: 82 c8 28                 a1 = u64 [a5 + 0x28]
  5869: 82 c7 20                 a0 = u64 [a5 + 0x20]
  5872: 82 83 18                 t1 = u64 [a1 + 0x18]
  5875: 33 08 8d 00 01           a1 = 0x1008d
  5880: 33 09 02                 a2 = 0x2
  5883: 64 a6                    s1 = a3
  5885: 7b 1b 10                 u64 [sp + 0x10] = a4
  5888: 7b 1c 08                 u64 [sp + 0x8] = a5
  5891: b4 30 01 74              ra = 116, jump [t1]
      :                          @437 [@dyn 58]
  5895: 82 1c 08                 a5 = u64 [sp + 0x8]
  5898: 82 1b 10                 a4 = u64 [sp + 0x10]
  5901: 64 6a                    a3 = s1
  5903: 33 08 01                 a1 = 0x1
  5906: 33 06 01                 s1 = 0x1
  5909: 52 07 a8                 jump @433 if a0 != 0
      :                          @438
  5912: 64 b7                    a0 = a4
  5914: 64 c8                    a1 = a5
  5916: b4 a0 01 76              ra = 118, jump [a3]
      :                          @439 [@dyn 59]
  5920: 33 08 01                 a1 = 0x1
  5923: 64 76                    s1 = a0
  5925: 28 98                    jump @433
      :                          @440
  5927: 52 08 36                 jump @444 if a1 != 0
      :                          @441
  5930: 82 c8 28                 a1 = u64 [a5 + 0x28]
  5933: 82 c7 20                 a0 = u64 [a5 + 0x20]
  5936: 82 83 18                 t1 = u64 [a1 + 0x18]
  5939: 33 08 91 00 01           a1 = 0x10091
  5944: 33 09 01                 a2 = 0x1
  5947: 33 06 01                 s1 = 0x1
  5950: 7b 1a                    u64 [sp] = a3
  5952: 7b 1b 10                 u64 [sp + 0x10] = a4
  5955: 7b 1c 08                 u64 [sp + 0x8] = a5
  5958: b4 30 01 78              ra = 120, jump [t1]
      :                          @442 [@dyn 60]
  5962: 82 1c 08                 a5 = u64 [sp + 0x8]
  5965: 82 1b 10                 a4 = u64 [sp + 0x10]
  5968: 82 1a                    a3 = u64 [sp]
  5970: 33 08 01                 a1 = 0x1
  5973: 52 07 68 ff              jump @433 if a0 != 0
      :                          @443
  5977: 81 c7 34                 a0 = i32 [a5 + 0x34]
  5980: 01                       fallthrough
      :                          @444
  5981: 33 06 01                 s1 = 0x1
  5984: 78 16 37                 u8 [sp + 0x37] = s1
  5987: 82 c8 20                 a1 = u64 [a5 + 0x20]
  5990: 82 c9 28                 a2 = u64 [a5 + 0x28]
  5993: 7b 18 18                 u64 [sp + 0x18] = a1
  5996: 7b 19 20                 u64 [sp + 0x20] = a2
  5999: 95 18 37                 a1 = sp + 0x37
  6002: 7b 18 28                 u64 [sp + 0x28] = a1
  6005: 81 c8 30                 a1 = i32 [a5 + 0x30]
  6008: 7c c9 38                 a2 = u8 [a5 + 0x38]
  6011: 82 c3                    t1 = u64 [a5]
  6013: 82 c4 08                 t2 = u64 [a5 + 0x8]
  6016: 82 c0 10                 ra = u64 [a5 + 0x10]
  6019: 82 c2 18                 t0 = u64 [a5 + 0x18]
  6022: 7a 17 6c                 u32 [sp + 0x6c] = a0
  6025: 7a 18 68                 u32 [sp + 0x68] = a1
  6028: 78 19 70                 u8 [sp + 0x70] = a2
  6031: 7b 13 38                 u64 [sp + 0x38] = t1
  6034: 7b 14 40                 u64 [sp + 0x40] = t2
  6037: 7b 10 48                 u64 [sp + 0x48] = ra
  6040: 7b 12 50                 u64 [sp + 0x50] = t0
  6043: 95 17 18                 a0 = sp + 0x18
  6046: 7b 17 58                 u64 [sp + 0x58] = a0
  6049: 33 07 38 02 01           a0 = 0x10238
  6054: 7b 17 60                 u64 [sp + 0x60] = a0
  6057: 95 18 38                 a1 = sp + 0x38
  6060: 64 b7                    a0 = a4
  6062: b4 a0 01 7a              ra = 122, jump [a3]
      :                          @445 [@dyn 61]
  6066: 52 07 20                 jump @448 if a0 != 0
      :                          @446
  6069: 82 18 60                 a1 = u64 [sp + 0x60]
  6072: 82 17 58                 a0 = u64 [sp + 0x58]
  6075: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6078: 33 08 8f 00 01           a1 = 0x1008f
  6083: 33 09 02                 a2 = 0x2
  6086: b4 a0 01 7c              ra = 124, jump [a3]
      :                          @447 [@dyn 62]
  6090: 64 76                    s1 = a0
  6092: 33 08 01                 a1 = 0x1
  6095: 28 ee fe                 jump @433
      :                          @448
  6098: 33 08 01                 a1 = 0x1
  6101: 28 e8 fe                 jump @433
      :                          @449
  6104: 51 08 9b 00              jump @470 if a1 == 0
      :                          @450
  6108: 64 79                    a2 = a0
  6110: 7c 77                    a0 = u8 [a0]
  6112: 51 07 91 00              jump @469 if a0 == 0
      :                          @451
  6116: 51 27 ff 00 90 00        jump @471 if a0 == 255
      :                          @452
  6122: 6c 7a                    a3 = sext.b a0
  6124: 57 0a 09                 jump @454 if a3 <s 0
      :                          @453
  6127: 33 0a                    a3 = 0
  6129: 33 08                    a1 = 0
  6131: 28 73                    jump @468
      :                          @454
  6133: 55 27 c0 00 0d           jump @456 if a0 >=u 192
      :                          @455
  6138: 33 0a 01                 a3 = 0x1
  6141: 33 0b 80                 a4 = 0xffffffffffffff80
  6144: 28 4a                    jump @465
      :                          @456
  6146: 55 27 e0 00 0e           jump @458 if a0 >=u 224
      :                          @457
  6151: 33 0a 02                 a3 = 0x2
  6154: 33 0b 40 ff              a4 = 0xffffffffffffff40
  6158: 28 3c                    jump @465
      :                          @458
  6160: 55 27 f0 00 0e           jump @460 if a0 >=u 240
      :                          @459
  6165: 33 0a 03                 a3 = 0x3
  6168: 33 0b 20 ff              a4 = 0xffffffffffffff20
  6172: 28 2e                    jump @465
      :                          @460
  6174: 55 27 f8 00 0e           jump @462 if a0 >=u 248
      :                          @461
  6179: 33 0a 04                 a3 = 0x4
  6182: 33 0b 10 ff              a4 = 0xffffffffffffff10
  6186: 28 20                    jump @465
      :                          @462
  6188: 55 27 fc 00 0e           jump @464 if a0 >=u 252
      :                          @463
  6193: 33 0a 05                 a3 = 0x5
  6196: 33 0b 08 ff              a4 = 0xffffffffffffff08
  6200: 28 12                    jump @465
      :                          @464
  6202: 88 7a fe 00              a3 = a0 <u 0xfe
  6206: 33 0b 04 ff              a4 = 0xffffffffffffff04
  6210: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
  6214: 85 aa 07                 a3 = a3 ^ 0x7
  6217: 01                       fallthrough
      :                          @465
  6218: ae 8a 2b                 jump @472 if a3 >=u a1
      :                          @466
  6221: 33 08                    a1 = 0
  6223: c8 b7 07                 a0 = a0 + a4
  6226: 64 ab                    a4 = a3
  6228: 01                       fallthrough
      :                          @467
  6229: c8 b9 0c                 a5 = a2 + a4
  6232: 7c cc                    a5 = u8 [a5]
  6234: 97 88 08                 a1 = a1 << 0x8
  6237: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
  6240: d4 c8 08                 a1 = a1 | a5
  6243: 52 0b f2                 jump @467 if a4 != 0
      :                          @468
  6246: 8a a9 03                 i32 a2 = a3 << 0x3
  6249: cf 97 07                 a0 = a0 << a2
  6252: c8 87 07                 a0 = a0 + a1
  6255: 32 00                    ret
      :                          @469
  6257: 32 00                    ret
      :                          @470
  6259: 00                       trap
      :                          @471
  6260: 00                       trap
      :                          @472
  6261: 00                       trap
      :                          @473 [@dyn 63]
  6262: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  6265: 7b 10 28                 u64 [sp + 0x28] = ra
  6268: 7b 15 20                 u64 [sp + 0x20] = s0
  6271: 7b 16 18                 u64 [sp + 0x18] = s1
  6274: 64 86                    s1 = a1
  6276: 82 88 28                 a1 = u64 [a1 + 0x28]
  6279: 82 6a 20                 a3 = u64 [s1 + 0x20]
  6282: 82 8b 18                 a4 = u64 [a1 + 0x18]
  6285: 64 75                    s0 = a0
  6287: 33 08 88 00 01           a1 = 0x10088
  6292: 33 09 01                 a2 = 0x1
  6295: 64 a7                    a0 = a3
  6297: b4 b0 02 80 00           ra = 128, jump [a4]
      :                          @474 [@dyn 64]
  6302: 7b 16                    u64 [sp] = s1
  6304: 78 17 08                 u8 [sp + 0x8] = a0
  6307: 46 11 09                 u8 [sp + 9] = 0
  6310: 7b 15 10                 u64 [sp + 0x10] = s0
  6313: 33 09 86 00              a2 = 0x86
  6317: 64 17                    a0 = sp
  6319: 95 18 10                 a1 = sp + 0x10
  6322: 50 20 82 00 ec fd        ra = 130, jump @432
      :                          @475 [@dyn 65]
  6328: 33 07 01                 a0 = 0x1
  6331: 7c 18 08                 a1 = u8 [sp + 0x8]
  6334: 52 08 1b                 jump @477 if a1 != 0
      :                          @476
  6337: 82 17                    a0 = u64 [sp]
  6339: 82 78 28                 a1 = u64 [a0 + 0x28]
  6342: 82 77 20                 a0 = u64 [a0 + 0x20]
  6345: 82 8a 18                 a3 = u64 [a1 + 0x18]
  6348: 33 08 92 00 01           a1 = 0x10092
  6353: 33 09 01                 a2 = 0x1
  6356: b4 a0 02 84 00           ra = 132, jump [a3]
      :                          @477 [@dyn 66]
  6361: 82 10 28                 ra = u64 [sp + 0x28]
  6364: 82 15 20                 s0 = u64 [sp + 0x20]
  6367: 82 16 18                 s1 = u64 [sp + 0x18]
  6370: 95 11 30                 sp = sp + 0x30
  6373: 32 00                    ret
      :                          @478 [@dyn 67]
  6375: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  6379: 7b 10 80 00              u64 [sp + 0x80] = ra
  6383: 80 89 34                 a2 = u32 [a1 + 0x34]
  6386: 82 77                    a0 = u64 [a0]
  6388: 84 9a 10                 a3 = a2 & 0x10
  6391: 52 0a 16                 jump @481 if a3 != 0
      :                          @479
  6394: 84 99 20                 a2 = a2 & 0x20
  6397: 52 09 52                 jump @485 if a2 != 0
      :                          @480
  6400: 7c 77                    a0 = u8 [a0]
  6402: 82 10 80 00              ra = u64 [sp + 0x80]
  6406: 95 11 88 00              sp = sp + 0x88
  6410: 28 af f5                 jump @278
      :                          @481
  6413: 7c 77                    a0 = u8 [a0]
  6415: 33 0b 81 00              a4 = 0x81
  6419: 95 19 7f                 a2 = sp + 0x7f
  6422: 33 02 57                 t0 = 0x57
  6425: 01                       fallthrough
      :                          @482
  6426: 64 bc                    a5 = a4
  6428: 84 7b 0f                 a4 = a0 & 0xf
  6431: 97 77 38                 a0 = a0 << 0x38
  6434: 98 77 3c                 a0 = a0 >> 0x3c
  6437: 88 b3 0a                 t1 = a4 <u 0xa
  6440: 33 0a 30                 a3 = 0x30
  6443: da 32 0a                 a3 = t0 if t1 == 0
  6446: be ba 0a                 i32 a3 = a3 + a4
  6449: 78 9a                    u8 [a2] = a3
  6451: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6454: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6457: 52 07 e1                 jump @482 if a0 != 0
      :                          @483
  6460: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6463: 56 27 80 00 6b           jump @491 if a0 >u 128
      :                          @484
  6468: 9a bb 81 00              a4 = 0x81 - a4
  6472: 64 1a                    a3 = sp
  6474: c8 7a 0a                 a3 = a3 + a0
  6477: 28 43                    jump @489
      :                          @485
  6479: 7c 77                    a0 = u8 [a0]
  6481: 33 0b 81 00              a4 = 0x81
  6485: 95 19 7f                 a2 = sp + 0x7f
  6488: 33 02 37                 t0 = 0x37
  6491: 01                       fallthrough
      :                          @486
  6492: 64 bc                    a5 = a4
  6494: 84 7b 0f                 a4 = a0 & 0xf
  6497: 97 77 38                 a0 = a0 << 0x38
  6500: 98 77 3c                 a0 = a0 >> 0x3c
  6503: 88 b3 0a                 t1 = a4 <u 0xa
  6506: 33 0a 30                 a3 = 0x30
  6509: da 32 0a                 a3 = t0 if t1 == 0
  6512: be ba 0a                 i32 a3 = a3 + a4
  6515: 78 9a                    u8 [a2] = a3
  6517: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
  6520: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
  6523: 52 07 e1                 jump @486 if a0 != 0
      :                          @487
  6526: 95 c7 fe                 a0 = a5 + 0xfffffffffffffffe
  6529: 56 27 80 00 29           jump @491 if a0 >u 128
      :                          @488
  6534: 9a bb 81 00              a4 = 0x81 - a4
  6538: 64 1a                    a3 = sp
  6540: c8 7a 0a                 a3 = a3 + a0
  6543: 01                       fallthrough
      :                          @489
  6544: 33 09 02                 a2 = 0x2
  6547: 64 87                    a0 = a1
  6549: 33 08 93 00 01           a1 = 0x10093
  6554: 50 20 88 00 3b f6        ra = 136, jump @288
      :                          @490 [@dyn 68]
  6560: 82 10 80 00              ra = u64 [sp + 0x80]
  6564: 95 11 88 00              sp = sp + 0x88
  6568: 32 00                    ret
      :                          @491
  6570: 00                       trap
