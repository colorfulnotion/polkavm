// RO data = 4864/4864 bytes
// RW data = 232/66304 bytes
// Stack size = 65536 bytes
// RO data = [4, 1, 0, 0, 6, 1, 0, 0, 14, 1, 0, 0, 22, 1, 0, 0, 30, 1, 0, 0, 36, 1, 0, 0, 44, 1, 0, 0, 52, 1, 0, 0, 60, 1, 0, 0, 66, 1, 0, 0, 72, 1, 0, 0, 82, 1, 0, 0, 90, 1, 0, 0, 98, 1, 0, 0, 104, 1, 0, 0, 112, 1, 0, 0, 120, 1, 0, 0, 126, 1, 0, 0, 134, 1, 0, 0, 146, 1, 0, 0, 154, 1, 0, 0, 162, 1, 0, 0, 174, 1, 0, 0, 182, 1, 0, 0, 190, 1, 0, 0, 198, 1, 0, 0, 206, 1, 0, 0, 214, 1, 0, 0, 220, 1, 0, 0, 228, 1, 0, 0, 236, 1, 0, 0, 244, 1, 0, 0, 250, 1, 0, 0, 2, 2, 0, 0, 4, 2, 0, 0, 10, 2, 0, 0, 16, 2, 0, 0, 22, 2, 0, 0, 30, 2, 0, 0, 38, 2, 0, 0, 40, 2, 0, 0, 60, 2, 0, 0, 68, 2, 0, 0, 74, 2, 0, 0, 92, 2, 0, 0, 100, 2, 0, 0, 108, 2, 0, 0, 116, 2, 0, 0, 124, 2, 0, 0, 132, 2, 0, 0, 140, 2, 0, 0, 148, 2, 0, 0, 156, 2, 0, 0, 41, 32, 61, 32, 44, 32, 115, 61, 110, 116, 116, 40, 32, 61, 32, 40, 83, 111, 109, 101, 93, 32, 61, 32, 116, 114, 117, 101, 110, 111, 110, 101, 78, 111, 110, 101, 44, 32, 101, 61, 44, 32, 114, 61, 32, 32, 32, 32, 44, 32, 100, 61, 2, 0, 0, 0, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 0, 0, 159, 36, 0, 0, 0, 0, 0, 0, 18, 110, 0, 0, 0, 0, 0, 0, 215, 224, 6, 0, 0, 0, 0, 0, 24, 61, 149, 0, 0, 0, 0, 0, 254, 145, 1, 107, 0, 0, 0, 0, 116, 114, 105, 98, 111, 110, 97, 99, 99, 105, 40, 0, 0, 0, 0, 0, 64, 1, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 110, 97, 114, 97, 121, 97, 110, 97, 40, 0, 0, 0, 0, 0, 0, 0, 112, 1, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 32, 115, 101, 110, 100, 101, 114, 61, 109, 111, 116, 122, 107, 105, 110, 40, 106, 97, 99, 111, 98, 105, 40, 32, 32, 97, 109, 111, 117, 110, 116, 61, 109, 111, 100, 95, 101, 120, 112, 40, 44, 32, 102, 110, 118, 49, 97, 61, 44, 32, 115, 105, 110, 226, 137, 136, 115, 117, 98, 95, 103, 99, 100, 40, 184, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 113, 117, 97, 100, 114, 97, 116, 105, 99, 95, 114, 101, 115, 105, 100, 117, 101, 40, 0, 0, 0, 16, 2, 1, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 100, 105, 118, 40, 97, 108, 103, 111, 32, 114, 117, 110, 95, 114, 101, 102, 105, 110, 101, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 32, 105, 115, 95, 119, 105, 108, 115, 111, 110, 95, 112, 114, 105, 109, 101, 40, 32, 35, 32, 111, 102, 32, 112, 114, 111, 103, 114, 97, 109, 115, 58, 32, 105, 110, 116, 101, 103, 101, 114, 95, 108, 111, 103, 95, 109, 117, 108, 40, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 109, 105, 110, 40, 136, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 111, 108, 111, 118, 97, 121, 95, 115, 116, 114, 97, 115, 115, 101, 110, 40, 0, 0, 0, 0, 0, 0, 0, 232, 2, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 102, 101, 114, 109, 97, 116, 95, 102, 97, 99, 116, 111, 114, 40, 0, 0, 32, 3, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 102, 102, 105, 101, 32, 104, 101, 108, 108, 109, 97, 110, 32, 0, 80, 3, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 108, 102, 115, 114, 32, 0, 0, 0, 112, 3, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 98, 98, 115, 95, 110, 101, 120, 116, 32, 0, 0, 0, 0, 0, 0, 0, 136, 3, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 98, 105, 110, 95, 112, 97, 99, 107, 105, 110, 103, 95, 102, 102, 100, 32, 61, 32, 0, 0, 0, 0, 0, 0, 168, 3, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 98, 117, 114, 110, 115, 105, 100, 101, 95, 110, 101, 99, 107, 108, 97, 99, 101, 32, 100, 105, 115, 116, 105, 110, 99, 116, 32, 99, 111, 108, 111, 114, 105, 110, 103, 115, 32, 61, 32, 0, 208, 3, 1, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 121, 111, 117, 110, 103, 95, 116, 97, 98, 108, 101, 97, 117, 120, 32, 195, 151, 32, 226, 134, 146, 32, 0, 0, 8, 4, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 23, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 25, 4, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 102, 114, 111, 98, 101, 110, 105, 117, 115, 40, 0, 0, 0, 0, 0, 0, 80, 4, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 112, 40, 41, 32, 109, 111, 100, 32, 32, 61, 32, 0, 0, 0, 0, 0, 144, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 146, 4, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 152, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 113, 95, 97, 110, 97, 108, 111, 103, 91, 93, 95, 0, 0, 0, 0, 0, 208, 4, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 217, 4, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 152, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 99, 111, 110, 100, 105, 116, 105, 111, 110, 95, 110, 117, 109, 98, 101, 114, 95, 50, 120, 50, 32, 65, 61, 32, 61, 0, 0, 0, 0, 0, 0, 0, 16, 5, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 39, 5, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 112, 111, 108, 108, 97, 114, 100, 95, 114, 104, 111, 95, 98, 114, 101, 110, 116, 32, 0, 0, 0, 0, 0, 0, 80, 5, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 79, 110, 101, 68, 82, 97, 110, 103, 101, 84, 114, 101, 101, 81, 117, 101, 114, 121, 32, 91, 93, 32, 226, 134, 146, 32, 0, 0, 0, 0, 0, 0, 120, 5, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 140, 5, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 114, 115, 97, 95, 107, 101, 121, 103, 101, 110, 32, 110, 61, 0, 0, 0, 200, 5, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 248, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 61, 44, 32, 111, 107, 61, 0, 8, 6, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 252, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 216, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 10, 6, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 103, 102, 95, 99, 111, 101, 102, 102, 91, 0, 0, 0, 0, 0, 0, 0, 80, 6, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 232, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 101, 103, 101, 110, 100, 114, 101, 95, 115, 121, 109, 98, 111, 108, 32, 40, 32, 47, 0, 0, 0, 0, 0, 128, 6, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 146, 6, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 108, 101, 104, 109, 101, 114, 32, 77, 95, 32, 105, 115, 32, 112, 114, 105, 109, 101, 63, 32, 0, 0, 0, 0, 0, 0, 200, 6, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 215, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 108, 117, 99, 97, 115, 95, 115, 101, 113, 117, 101, 110, 99, 101, 32, 85, 95, 44, 86, 95, 32, 109, 111, 100, 32, 0, 0, 0, 0, 0, 0, 0, 8, 7, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 25, 7, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 28, 7, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 224, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 176, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 98, 97, 105, 108, 108, 105, 101, 95, 112, 115, 119, 32, 0, 0, 0, 0, 136, 7, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 215, 6, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 110, 101, 119, 116, 111, 110, 95, 115, 113, 114, 116, 32, 0, 0, 0, 0, 184, 7, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 152, 4, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 100, 101, 116, 95, 98, 97, 114, 101, 105, 115, 115, 95, 51, 120, 51, 32, 100, 101, 116, 32, 61, 32, 0, 0, 232, 7, 1, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 115, 109, 105, 116, 104, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 100, 105, 97, 103, 40, 0, 0, 0, 0, 0, 16, 8, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 176, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 101, 114, 109, 105, 116, 101, 95, 110, 111, 114, 109, 97, 108, 95, 102, 111, 114, 109, 95, 50, 120, 50, 32, 72, 32, 61, 32, 91, 91, 93, 44, 91, 93, 93, 0, 0, 0, 0, 0, 96, 8, 1, 0, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 126, 8, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 129, 8, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 95, 114, 101, 100, 117, 99, 101, 95, 50, 100, 32, 98, 49, 61, 44, 32, 98, 50, 61, 0, 0, 216, 8, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 233, 8, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 109, 111, 100, 95, 101, 120, 112, 95, 108, 97, 100, 100, 101, 114, 40, 0, 16, 9, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 115, 116, 101, 105, 110, 95, 103, 99, 100, 40, 0, 0, 0, 0, 0, 0, 96, 9, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 232, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 168, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 88, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 232, 17, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 105, 115, 95, 112, 101, 114, 102, 101, 99, 116, 95, 115, 113, 117, 97, 114, 101, 40, 0, 0, 0, 0, 0, 0, 48, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 99, 111, 105, 110, 95, 99, 104, 97, 110, 103, 101, 95, 99, 111, 117, 110, 116, 40, 41, 61, 0, 0, 0, 0, 104, 10, 1, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 122, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 184, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 122, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 44, 32, 109, 111, 100, 95, 105, 110, 118, 61, 0, 0, 0, 0, 0, 0, 208, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 122, 10, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 192, 10, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 99, 114, 116, 50, 32, 61, 32, 0, 32, 11, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 103, 97, 114, 110, 101, 114, 32, 61, 32, 0, 0, 0, 0, 0, 0, 0, 56, 11, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 110, 116, 104, 95, 114, 111, 111, 116, 40, 0, 0, 0, 0, 0, 0, 0, 88, 11, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 239, 17, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 220, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 97, 110, 103, 108, 101, 61, 32, 226, 134, 146, 32, 99, 111, 115, 226, 137, 136, 0, 0, 0, 0, 0, 0, 0, 184, 11, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 190, 11, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 224, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 108, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 120, 111, 114, 115, 104, 105, 102, 116, 54, 52, 32, 61, 32, 0, 0, 0, 32, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 112, 99, 103, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 64, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 109, 119, 99, 46, 110, 101, 120, 116, 40, 41, 32, 61, 32, 0, 0, 0, 96, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 99, 114, 99, 51, 50, 61, 44, 32, 97, 100, 108, 101, 114, 51, 50, 61, 44, 32, 109, 117, 114, 109, 117, 114, 51, 61, 44, 32, 106, 101, 110, 107, 105, 110, 115, 61, 0, 0, 0, 0, 128, 12, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 134, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 216, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 144, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 154, 12, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 101, 117, 108, 101, 114, 84, 111, 116, 105, 101, 110, 116, 32, 112, 104, 105, 40, 0, 0, 0, 0, 0, 0, 0, 248, 12, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 108, 105, 110, 101, 97, 114, 95, 109, 117, 32, 110, 61, 44, 32, 91, 110, 93, 61, 0, 0, 0, 0, 0, 0, 48, 13, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 60, 13, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 83, 117, 109, 79, 102, 68, 105, 118, 105, 115, 111, 114, 115, 32, 115, 105, 103, 109, 97, 40, 0, 0, 0, 0, 104, 13, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 118, 105, 115, 111, 114, 95, 99, 111, 117, 110, 116, 40, 0, 0, 160, 13, 1, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 109, 111, 98, 105, 117, 115, 40, 0, 208, 13, 1, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 100, 105, 114, 105, 99, 104, 108, 101, 116, 95, 99, 111, 110, 118, 111, 108, 117, 116, 105, 111, 110, 32, 40, 49, 32, 42, 32, 105, 100, 41, 40, 0, 248, 13, 1, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 192, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 146, 6, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 212, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 240, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 176, 17, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 97, 108, 103, 111, 32, 114, 101, 102, 105, 110, 101, 32, 80, 65, 89, 76, 79, 65, 68, 32, 32, 0, 0, 0, 152, 14, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 172, 14, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 97, 108, 103, 111, 32, 114, 101, 102, 105, 110, 101, 32, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 32, 32, 73, 84, 69, 82, 65, 84, 73, 79, 78, 83, 32, 0, 0, 0, 0, 0, 208, 14, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 231, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 32, 103, 97, 115, 95, 117, 115, 101, 100, 32, 0, 0, 0, 0, 0, 0, 104, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 231, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 97, 108, 103, 111, 32, 0, 0, 0, 88, 15, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 152, 2, 1, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 32, 0, 0, 0, 0, 0, 128, 15, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 231, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 97, 108, 103, 111, 32, 114, 117, 110, 95, 97, 99, 99, 117, 109, 117, 108, 97, 116, 101, 32, 0, 0, 0, 0, 176, 15, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 231, 14, 1, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 24, 15, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 32, 112, 95, 105, 100, 61, 32, 103, 97, 115, 95, 117, 115, 101, 100, 61, 88, 15, 1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 248, 15, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 254, 15, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 112, 97, 121, 108, 111, 97, 100, 95, 108, 101, 110, 32, 116, 111, 111, 32, 115, 109, 97, 108, 108, 58, 32, 0, 56, 16, 1, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 65, 76, 71, 79, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 58, 32, 116, 105, 109, 101, 115, 108, 111, 116, 61, 32, 115, 101, 114, 118, 105, 99, 101, 95, 105, 110, 100, 101, 120, 61, 32, 114, 101, 99, 101, 105, 118, 101, 114, 61, 32, 109, 101, 109, 111, 61, 32, 103, 97, 115, 95, 108, 105, 109, 105, 116, 61, 0, 0, 0, 96, 16, 1, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 123, 16, 1, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 176, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 138, 16, 1, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 200, 1, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 148, 16, 1, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 154, 16, 1, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 65, 76, 71, 79, 32, 111, 110, 95, 116, 114, 97, 110, 115, 102, 101, 114, 32, 103, 97, 115, 58, 32, 103, 111, 116, 32, 32, 40, 114, 101, 99, 111, 114, 100, 101, 100, 32, 97, 116, 32, 107, 101, 121, 32, 52, 41, 0, 0, 24, 17, 1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 50, 17, 1, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 20, 3, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 22, 3, 0, 0, 0, 0, 0, 0, 28, 3, 0, 0, 0, 0, 0, 0, 36, 3, 0, 0, 0, 0, 0, 0, 41, 91, 0, 0, 0, 0, 0, 0, 78, 3, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 80, 3, 0, 0, 0, 0, 0, 0, 86, 3, 0, 0, 0, 0, 0, 0, 90, 3, 0, 0, 0, 0, 0, 0, 44, 32, 44, 10, 40, 40, 10, 44, 10, 93, 48, 120, 48, 48, 48, 49, 48, 50, 48, 51, 48, 52, 48, 53, 48, 54, 48, 55, 48, 56, 48, 57, 49, 48, 49, 49, 49, 50, 49, 51, 49, 52, 49, 53, 49, 54, 49, 55, 49, 56, 49, 57, 50, 48, 50, 49, 50, 50, 50, 51, 50, 52, 50, 53, 50, 54, 50, 55, 50, 56, 50, 57, 51, 48, 51, 49, 51, 50, 51, 51, 51, 52, 51, 53, 51, 54, 51, 55, 51, 56, 51, 57, 52, 48, 52, 49, 52, 50, 52, 51, 52, 52, 52, 53, 52, 54, 52, 55, 52, 56, 52, 57, 53, 48, 53, 49, 53, 50, 53, 51, 53, 52, 53, 53, 53, 54, 53, 55, 53, 56, 53, 57, 54, 48, 54, 49, 54, 50, 54, 51, 54, 52, 54, 53, 54, 54, 54, 55, 54, 56, 54, 57, 55, 48, 55, 49, 55, 50, 55, 51, 55, 52, 55, 53, 55, 54, 55, 55, 55, 56, 55, 57, 56, 48, 56, 49, 56, 50, 56, 51, 56, 52, 56, 53, 56, 54, 56, 55, 56, 56, 56, 57, 57, 48, 57, 49, 57, 50, 57, 51, 57, 52, 57, 53, 57, 54, 57, 55, 57, 56, 57, 57, 102, 97, 108, 115, 101, 119, 114, 105, 116, 101, 95, 114, 101, 115, 117, 108, 116, 32, 107, 101, 121, 61, 44, 32, 114, 101, 115, 117, 108, 116, 61, 0, 0, 0, 0, 0, 193, 18, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 210, 18, 1, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0]
// RW data = [29, 221, 108, 79, 145, 244, 69, 37, 11, 215, 163, 112, 61, 10, 215, 163, 29, 221, 108, 79, 145, 244, 69, 37, 195, 245, 40, 92, 143, 194, 245, 40, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 25, 134, 97, 24, 134, 97, 24, 134, 201, 66, 22, 178, 144, 133, 44, 100, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 29, 221, 108, 79, 145, 244, 69, 37, 29, 221, 108, 79, 145, 244, 69, 37, 207, 247, 83, 227, 165, 155, 196, 32, 165, 128, 102, 16, 64, 10, 104, 6, 67, 120, 180, 113, 196, 90, 124, 10, 0, 160, 163, 155, 237, 41, 146, 190, 243, 187, 108, 107, 170, 43, 62, 5, 225, 229, 20, 188, 156, 130, 151, 83, 195, 245, 40, 92, 143, 194, 245, 40, 219, 52, 182, 215, 130, 222, 27, 67, 143, 227, 56, 142, 227, 56, 142, 227, 229, 174, 159, 45, 86, 134, 111, 68, 75, 89, 134, 56, 214, 197, 109, 52, 11, 215, 163, 112, 61, 10, 215, 163, 37, 82, 6, 207, 112, 63, 80, 131, 75, 89, 134, 56, 214, 197, 109, 52, 128, 128, 128, 128, 128, 128, 128, 128, 241, 222, 188, 154, 120, 86, 52, 18]
// Instructions = 16438
// Code size = 50832 bytes

      :                          @0
     0: 28 6b 9e 00 00           jump @2533
      :                          @1
     5: 28 42 a2 00 00           jump @2605
      :                          @2
    10: 28 5c a8 00              jump @2711
      :                          @3 [@dyn 1]
    14: 95 11 78 ff              sp = sp + 0xffffffffffffff78
    18: 7b 10 80 00              u64 [sp + 0x80] = ra
    22: 64 82                    t0 = a1
    24: 80 88 34                 a1 = u32 [a1 + 0x34]
    27: 82 77                    a0 = u64 [a0]
    29: 84 89 10                 a2 = a1 & 0x10
    32: 52 09 24                 jump @6 if a2 != 0
      :                          @4
    35: 84 88 20                 a1 = a1 & 0x20
    38: 52 08 4e                 jump @9 if a1 != 0
      :                          @5
    41: 82 78                    a1 = u64 [a0]
    43: 9a 87                    a0 = -a1
    45: e3 78 07                 a0 = maxs(a1, a0)
    48: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
    51: 98 88 3f                 a1 = a1 >> 0x3f
    54: 64 29                    a2 = t0
    56: 82 10 80 00              ra = u64 [sp + 0x80]
    60: 95 11 88 00              sp = sp + 0x88
    64: 28 d9 b4 00              jump @2937
      :                          @6
    68: 82 7a                    a3 = u64 [a0]
    70: 33 08 81 00              a1 = 0x81
    74: 95 17 7f                 a0 = sp + 0x7f
    77: 33 03 57                 t1 = 0x57
    80: 01                       fallthrough
      :                          @7
    81: 64 8b                    a4 = a1
    83: 98 ac 04                 a5 = a3 >> 0x4
    86: 84 aa 0f                 a3 = a3 & 0xf
    89: 88 a8 0a                 a1 = a3 <u 0xa
    92: 33 09 30                 a2 = 0x30
    95: da 83 09                 a2 = t1 if a1 == 0
    98: be a9 09                 i32 a2 = a2 + a3
   101: 78 79                    u8 [a0] = a2
   103: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   106: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   109: 64 ca                    a3 = a5
   111: 52 0c e2                 jump @7 if a5 != 0
      :                          @8
   114: 28 30                    jump @11
      :                          @9
   116: 82 7a                    a3 = u64 [a0]
   118: 33 08 81 00              a1 = 0x81
   122: 95 17 7f                 a0 = sp + 0x7f
   125: 33 03 37                 t1 = 0x37
   128: 01                       fallthrough
      :                          @10
   129: 64 8b                    a4 = a1
   131: 98 ac 04                 a5 = a3 >> 0x4
   134: 84 aa 0f                 a3 = a3 & 0xf
   137: 88 a8 0a                 a1 = a3 <u 0xa
   140: 33 09 30                 a2 = 0x30
   143: da 83 09                 a2 = t1 if a1 == 0
   146: be a9 09                 i32 a2 = a2 + a3
   149: 78 79                    u8 [a0] = a2
   151: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   154: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   157: 64 ca                    a3 = a5
   159: 52 0c e2                 jump @10 if a5 != 0
      :                          @11
   162: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   165: 56 27 80 00 2b           jump @14 if a0 >u 128
      :                          @12
   170: 9a 8c 81 00              a5 = 0x81 - a1
   174: 64 1b                    a4 = sp
   176: c8 7b 0b                 a4 = a4 + a0
   179: 33 09 f2 11 01           a2 = 0x111f2
   184: 33 08 01                 a1 = 0x1
   187: 33 0a 02                 a3 = 0x2
   190: 64 27                    a0 = t0
   192: 50 10 04 87 b5 00        ra = 4, jump @2947
      :                          @13 [@dyn 2]
   198: 82 10 80 00              ra = u64 [sp + 0x80]
   202: 95 11 88 00              sp = sp + 0x88
   206: 32 00                    ret
      :                          @14
   208: 00                       trap
      :                          @15 [@dyn 3]
   209: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   212: 7b 10 38                 u64 [sp + 0x38] = ra
   215: 7b 15 30                 u64 [sp + 0x30] = s0
   218: 7b 16 28                 u64 [sp + 0x28] = s1
   221: 7b 18 08                 u64 [sp + 0x8] = a1
   224: 82 89 28                 a2 = u64 [a1 + 0x28]
   227: 82 76                    s1 = u64 [a0]
   229: 82 75 08                 s0 = u64 [a0 + 0x8]
   232: 82 87 20                 a0 = u64 [a1 + 0x20]
   235: 82 9a 18                 a3 = u64 [a2 + 0x18]
   238: 33 08 b1 11 01           a1 = 0x111b1
   243: 33 09 01                 a2 = 0x1
   246: b4 a0 01 08              ra = 8, jump [a3]
      :                          @16 [@dyn 4]
   250: 82 18 08                 a1 = u64 [sp + 0x8]
   253: 7b 18 10                 u64 [sp + 0x10] = a1
   256: 78 17 18                 u8 [sp + 0x18] = a0
   259: 46 11 19                 u8 [sp + 25] = 0
   262: 51 05 2e                 jump @21 if s0 == 0
      :                          @17
   265: 33 07 8a 03              a0 = 0x38a
   269: 7b 17                    u64 [sp] = a0
   271: 01                       fallthrough
      :                          @18
   272: 95 67 01                 a0 = s1 + 0x1
   275: 7b 17 08                 u64 [sp + 0x8] = a0
   278: 7b 16 20                 u64 [sp + 0x20] = s1
   281: 95 17 10                 a0 = sp + 0x10
   284: 95 18 20                 a1 = sp + 0x20
   287: 82 19                    a2 = u64 [sp]
   289: 50 10 0a 48 c1 00        ra = 10, jump @3184
      :                          @19 [@dyn 5]
   295: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
   298: 82 16 08                 s1 = u64 [sp + 0x8]
   301: 52 05 e3                 jump @18 if s0 != 0
      :                          @20
   304: 7c 17 18                 a0 = u8 [sp + 0x18]
   307: 01                       fallthrough
      :                          @21
   308: 33 08 01                 a1 = 0x1
   311: 52 07 1e                 jump @24 if a0 != 0
      :                          @22
   314: 82 17 10                 a0 = u64 [sp + 0x10]
   317: 82 78 28                 a1 = u64 [a0 + 0x28]
   320: 82 77 20                 a0 = u64 [a0 + 0x20]
   323: 82 8a 18                 a3 = u64 [a1 + 0x18]
   326: 33 08 f1 11 01           a1 = 0x111f1
   331: 33 09 01                 a2 = 0x1
   334: b4 a0 01 0c              ra = 12, jump [a3]
      :                          @23 [@dyn 6]
   338: 64 78                    a1 = a0
   340: 01                       fallthrough
      :                          @24
   341: 64 87                    a0 = a1
   343: 82 10 38                 ra = u64 [sp + 0x38]
   346: 82 15 30                 s0 = u64 [sp + 0x30]
   349: 82 16 28                 s1 = u64 [sp + 0x28]
   352: 95 11 40                 sp = sp + 0x40
   355: 32 00                    ret
      :                          @25 [@dyn 7]
   357: 95 11 d0                 sp = sp + 0xffffffffffffffd0
   360: 7b 10 28                 u64 [sp + 0x28] = ra
   363: 7b 15 20                 u64 [sp + 0x20] = s0
   366: 7b 16 18                 u64 [sp + 0x18] = s1
   369: 64 86                    s1 = a1
   371: 82 88 28                 a1 = u64 [a1 + 0x28]
   374: 82 75                    s0 = u64 [a0]
   376: 82 67 20                 a0 = u64 [s1 + 0x20]
   379: 82 8a 18                 a3 = u64 [a1 + 0x18]
   382: 33 08 b1 11 01           a1 = 0x111b1
   387: 33 09 01                 a2 = 0x1
   390: b4 a0 01 10              ra = 16, jump [a3]
      :                          @26 [@dyn 8]
   394: 7b 16                    u64 [sp] = s1
   396: 78 17 08                 u8 [sp + 0x8] = a0
   399: 46 11 09                 u8 [sp + 9] = 0
   402: 7b 15 10                 u64 [sp + 0x10] = s0
   405: 33 06 02                 s1 = 0x2
   408: 64 17                    a0 = sp
   410: 95 18 10                 a1 = sp + 0x10
   413: 33 09 02                 a2 = 0x2
   416: 50 10 12 c9 c0 00        ra = 18, jump @3184
      :                          @27 [@dyn 9]
   422: 95 55 08                 s0 = s0 + 0x8
   425: 7b 15 10                 u64 [sp + 0x10] = s0
   428: 64 17                    a0 = sp
   430: 95 18 10                 a1 = sp + 0x10
   433: 64 69                    a2 = s1
   435: 50 10 14 b6 c0 00        ra = 20, jump @3184
      :                          @28 [@dyn 10]
   441: 33 07 01                 a0 = 0x1
   444: 7c 18 08                 a1 = u8 [sp + 0x8]
   447: 52 08 1a                 jump @30 if a1 != 0
      :                          @29
   450: 82 17                    a0 = u64 [sp]
   452: 82 78 28                 a1 = u64 [a0 + 0x28]
   455: 82 77 20                 a0 = u64 [a0 + 0x20]
   458: 82 8a 18                 a3 = u64 [a1 + 0x18]
   461: 33 08 f1 11 01           a1 = 0x111f1
   466: 33 09 01                 a2 = 0x1
   469: b4 a0 01 16              ra = 22, jump [a3]
      :                          @30 [@dyn 11]
   473: 82 10 28                 ra = u64 [sp + 0x28]
   476: 82 15 20                 s0 = u64 [sp + 0x20]
   479: 82 16 18                 s1 = u64 [sp + 0x18]
   482: 95 11 30                 sp = sp + 0x30
   485: 32 00                    ret
      :                          @31 [@dyn 12]
   487: 95 11 c0                 sp = sp + 0xffffffffffffffc0
   490: 7b 10 38                 u64 [sp + 0x38] = ra
   493: 7b 15 30                 u64 [sp + 0x30] = s0
   496: 7b 16 28                 u64 [sp + 0x28] = s1
   499: 64 85                    s0 = a1
   501: 82 88 28                 a1 = u64 [a1 + 0x28]
   504: 82 76                    s1 = u64 [a0]
   506: 82 57 20                 a0 = u64 [s0 + 0x20]
   509: 82 8a 18                 a3 = u64 [a1 + 0x18]
   512: 33 08 b0 11 01           a1 = 0x111b0
   517: 33 09                    a2 = 0
   519: b4 a0 01 1a              ra = 26, jump [a3]
      :                          @32 [@dyn 13]
   523: 7b 15 08                 u64 [sp + 0x8] = s0
   526: 78 17 10                 u8 [sp + 0x10] = a0
   529: 49 01                    u64 [sp + 0] = 0
   531: 33 05 01                 s0 = 0x1
   534: 78 15 11                 u8 [sp + 0x11] = s0
   537: 7b 16 18                 u64 [sp + 0x18] = s1
   540: 95 66 08                 s1 = s1 + 0x8
   543: 7b 16 20                 u64 [sp + 0x20] = s1
   546: 33 06 24                 s1 = 0x24
   549: 64 17                    a0 = sp
   551: 95 18 18                 a1 = sp + 0x18
   554: 33 09 24                 a2 = 0x24
   557: 50 10 1c 00 bf 00        ra = 28, jump @3168
      :                          @33 [@dyn 14]
   563: 64 17                    a0 = sp
   565: 95 18 20                 a1 = sp + 0x20
   568: 64 69                    a2 = s1
   570: 50 10 1e f3 be 00        ra = 30, jump @3168
      :                          @34 [@dyn 15]
   576: 82 17                    a0 = u64 [sp]
   578: 7c 18 10                 a1 = u8 [sp + 0x10]
   581: 51 07 57                 jump @42 if a0 == 0
      :                          @35
   584: 52 08 57                 jump @43 if a1 != 0
      :                          @36
   587: 7c 18 11                 a1 = u8 [sp + 0x11]
   590: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   593: 8e 77                    a0 = a0 >u 0
   595: 82 16 08                 s1 = u64 [sp + 0x8]
   598: 88 88 01                 a1 = a1 <u 0x1
   601: d4 87 07                 a0 = a0 | a1
   604: 52 07 27                 jump @40 if a0 != 0
      :                          @37
   607: 7c 67 34                 a0 = u8 [s1 + 0x34]
   610: 84 77 04                 a0 = a0 & 0x4
   613: 52 07 1e                 jump @40 if a0 != 0
      :                          @38
   616: 82 68 28                 a1 = u64 [s1 + 0x28]
   619: 82 67 20                 a0 = u64 [s1 + 0x20]
   622: 82 8a 18                 a3 = u64 [a1 + 0x18]
   625: 33 08 ef 11 01           a1 = 0x111ef
   630: 33 09 01                 a2 = 0x1
   633: 33 05 01                 s0 = 0x1
   636: b4 a0 01 20              ra = 32, jump [a3]
      :                          @39 [@dyn 16]
   640: 52 07 1f                 jump @43 if a0 != 0
      :                          @40
   643: 82 68 28                 a1 = u64 [s1 + 0x28]
   646: 82 67 20                 a0 = u64 [s1 + 0x20]
   649: 82 8a 18                 a3 = u64 [a1 + 0x18]
   652: 33 08 b0 11 01           a1 = 0x111b0
   657: 33 09 01                 a2 = 0x1
   660: b4 a0 01 22              ra = 34, jump [a3]
      :                          @41 [@dyn 17]
   664: 64 75                    s0 = a0
   666: 28 05                    jump @43
      :                          @42
   668: 8e 85                    s0 = a1 >u 0
   670: 01                       fallthrough
      :                          @43
   671: 64 57                    a0 = s0
   673: 82 10 38                 ra = u64 [sp + 0x38]
   676: 82 15 30                 s0 = u64 [sp + 0x30]
   679: 82 16 28                 s1 = u64 [sp + 0x28]
   682: 95 11 40                 sp = sp + 0x40
   685: 32 00                    ret
      :                          @44 [@dyn 18]
   687: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   691: 7b 10 80 00              u64 [sp + 0x80] = ra
   695: 64 82                    t0 = a1
   697: 80 88 34                 a1 = u32 [a1 + 0x34]
   700: 82 77                    a0 = u64 [a0]
   702: 84 89 10                 a2 = a1 & 0x10
   705: 52 09 1c                 jump @47 if a2 != 0
      :                          @45
   708: 84 88 20                 a1 = a1 & 0x20
   711: 52 08 46                 jump @50 if a1 != 0
      :                          @46
   714: 82 77                    a0 = u64 [a0]
   716: 33 08 01                 a1 = 0x1
   719: 64 29                    a2 = t0
   721: 82 10 80 00              ra = u64 [sp + 0x80]
   725: 95 11 88 00              sp = sp + 0x88
   729: 28 40 b2 00              jump @2937
      :                          @47
   733: 82 7a                    a3 = u64 [a0]
   735: 33 08 81 00              a1 = 0x81
   739: 95 17 7f                 a0 = sp + 0x7f
   742: 33 03 57                 t1 = 0x57
   745: 01                       fallthrough
      :                          @48
   746: 64 8b                    a4 = a1
   748: 98 ac 04                 a5 = a3 >> 0x4
   751: 84 aa 0f                 a3 = a3 & 0xf
   754: 88 a8 0a                 a1 = a3 <u 0xa
   757: 33 09 30                 a2 = 0x30
   760: da 83 09                 a2 = t1 if a1 == 0
   763: be a9 09                 i32 a2 = a2 + a3
   766: 78 79                    u8 [a0] = a2
   768: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   771: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   774: 64 ca                    a3 = a5
   776: 52 0c e2                 jump @48 if a5 != 0
      :                          @49
   779: 28 30                    jump @52
      :                          @50
   781: 82 7a                    a3 = u64 [a0]
   783: 33 08 81 00              a1 = 0x81
   787: 95 17 7f                 a0 = sp + 0x7f
   790: 33 03 37                 t1 = 0x37
   793: 01                       fallthrough
      :                          @51
   794: 64 8b                    a4 = a1
   796: 98 ac 04                 a5 = a3 >> 0x4
   799: 84 aa 0f                 a3 = a3 & 0xf
   802: 88 a8 0a                 a1 = a3 <u 0xa
   805: 33 09 30                 a2 = 0x30
   808: da 83 09                 a2 = t1 if a1 == 0
   811: be a9 09                 i32 a2 = a2 + a3
   814: 78 79                    u8 [a0] = a2
   816: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   819: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   822: 64 ca                    a3 = a5
   824: 52 0c e2                 jump @51 if a5 != 0
      :                          @52
   827: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
   830: 56 27 80 00 2b           jump @55 if a0 >u 128
      :                          @53
   835: 9a 8c 81 00              a5 = 0x81 - a1
   839: 64 1b                    a4 = sp
   841: c8 7b 0b                 a4 = a4 + a0
   844: 33 09 f2 11 01           a2 = 0x111f2
   849: 33 08 01                 a1 = 0x1
   852: 33 0a 02                 a3 = 0x2
   855: 64 27                    a0 = t0
   857: 50 10 26 ee b2 00        ra = 38, jump @2947
      :                          @54 [@dyn 19]
   863: 82 10 80 00              ra = u64 [sp + 0x80]
   867: 95 11 88 00              sp = sp + 0x88
   871: 32 00                    ret
      :                          @55
   873: 00                       trap
      :                          @56 [@dyn 20]
   874: 95 11 78 ff              sp = sp + 0xffffffffffffff78
   878: 7b 10 80 00              u64 [sp + 0x80] = ra
   882: 64 82                    t0 = a1
   884: 80 88 34                 a1 = u32 [a1 + 0x34]
   887: 84 89 10                 a2 = a1 & 0x10
   890: 52 09 1c                 jump @59 if a2 != 0
      :                          @57
   893: 84 88 20                 a1 = a1 & 0x20
   896: 52 08 46                 jump @62 if a1 != 0
      :                          @58
   899: 80 77                    a0 = u32 [a0]
   901: 33 08 01                 a1 = 0x1
   904: 64 29                    a2 = t0
   906: 82 10 80 00              ra = u64 [sp + 0x80]
   910: 95 11 88 00              sp = sp + 0x88
   914: 28 87 b1 00              jump @2937
      :                          @59
   918: 81 7a                    a3 = i32 [a0]
   920: 33 08 81 00              a1 = 0x81
   924: 95 17 7f                 a0 = sp + 0x7f
   927: 33 03 57                 t1 = 0x57
   930: 01                       fallthrough
      :                          @60
   931: 64 8b                    a4 = a1
   933: 8b ac 04                 i32 a5 = a3 >> 0x4
   936: 84 aa 0f                 a3 = a3 & 0xf
   939: 88 a8 0a                 a1 = a3 <u 0xa
   942: 33 09 30                 a2 = 0x30
   945: da 83 09                 a2 = t1 if a1 == 0
   948: be a9 09                 i32 a2 = a2 + a3
   951: 78 79                    u8 [a0] = a2
   953: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
   956: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
   959: 64 ca                    a3 = a5
   961: 52 0c e2                 jump @60 if a5 != 0
      :                          @61
   964: 28 30                    jump @64
      :                          @62
   966: 81 7a                    a3 = i32 [a0]
   968: 33 08 81 00              a1 = 0x81
   972: 95 17 7f                 a0 = sp + 0x7f
   975: 33 03 37                 t1 = 0x37
   978: 01                       fallthrough
      :                          @63
   979: 64 8b                    a4 = a1
   981: 8b ac 04                 i32 a5 = a3 >> 0x4
   984: 84 aa 0f                 a3 = a3 & 0xf
   987: 88 a8 0a                 a1 = a3 <u 0xa
   990: 33 09 30                 a2 = 0x30
   993: da 83 09                 a2 = t1 if a1 == 0
   996: be a9 09                 i32 a2 = a2 + a3
   999: 78 79                    u8 [a0] = a2
  1001: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1004: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1007: 64 ca                    a3 = a5
  1009: 52 0c e2                 jump @63 if a5 != 0
      :                          @64
  1012: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1015: 56 27 80 00 2b           jump @67 if a0 >u 128
      :                          @65
  1020: 9a 8c 81 00              a5 = 0x81 - a1
  1024: 64 1b                    a4 = sp
  1026: c8 7b 0b                 a4 = a4 + a0
  1029: 33 09 f2 11 01           a2 = 0x111f2
  1034: 33 08 01                 a1 = 0x1
  1037: 33 0a 02                 a3 = 0x2
  1040: 64 27                    a0 = t0
  1042: 50 10 2a 35 b2 00        ra = 42, jump @2947
      :                          @66 [@dyn 21]
  1048: 82 10 80 00              ra = u64 [sp + 0x80]
  1052: 95 11 88 00              sp = sp + 0x88
  1056: 32 00                    ret
      :                          @67
  1058: 00                       trap
      :                          @68 [@dyn 22]
  1059: 95 11 78 ff              sp = sp + 0xffffffffffffff78
  1063: 7b 10 80 00              u64 [sp + 0x80] = ra
  1067: 64 82                    t0 = a1
  1069: 80 88 34                 a1 = u32 [a1 + 0x34]
  1072: 84 89 10                 a2 = a1 & 0x10
  1075: 52 09 1c                 jump @71 if a2 != 0
      :                          @69
  1078: 84 88 20                 a1 = a1 & 0x20
  1081: 52 08 46                 jump @74 if a1 != 0
      :                          @70
  1084: 82 77                    a0 = u64 [a0]
  1086: 33 08 01                 a1 = 0x1
  1089: 64 29                    a2 = t0
  1091: 82 10 80 00              ra = u64 [sp + 0x80]
  1095: 95 11 88 00              sp = sp + 0x88
  1099: 28 ce b0 00              jump @2937
      :                          @71
  1103: 82 7a                    a3 = u64 [a0]
  1105: 33 08 81 00              a1 = 0x81
  1109: 95 17 7f                 a0 = sp + 0x7f
  1112: 33 03 57                 t1 = 0x57
  1115: 01                       fallthrough
      :                          @72
  1116: 64 8b                    a4 = a1
  1118: 98 ac 04                 a5 = a3 >> 0x4
  1121: 84 aa 0f                 a3 = a3 & 0xf
  1124: 88 a8 0a                 a1 = a3 <u 0xa
  1127: 33 09 30                 a2 = 0x30
  1130: da 83 09                 a2 = t1 if a1 == 0
  1133: be a9 09                 i32 a2 = a2 + a3
  1136: 78 79                    u8 [a0] = a2
  1138: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1141: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1144: 64 ca                    a3 = a5
  1146: 52 0c e2                 jump @72 if a5 != 0
      :                          @73
  1149: 28 30                    jump @76
      :                          @74
  1151: 82 7a                    a3 = u64 [a0]
  1153: 33 08 81 00              a1 = 0x81
  1157: 95 17 7f                 a0 = sp + 0x7f
  1160: 33 03 37                 t1 = 0x37
  1163: 01                       fallthrough
      :                          @75
  1164: 64 8b                    a4 = a1
  1166: 98 ac 04                 a5 = a3 >> 0x4
  1169: 84 aa 0f                 a3 = a3 & 0xf
  1172: 88 a8 0a                 a1 = a3 <u 0xa
  1175: 33 09 30                 a2 = 0x30
  1178: da 83 09                 a2 = t1 if a1 == 0
  1181: be a9 09                 i32 a2 = a2 + a3
  1184: 78 79                    u8 [a0] = a2
  1186: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  1189: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  1192: 64 ca                    a3 = a5
  1194: 52 0c e2                 jump @75 if a5 != 0
      :                          @76
  1197: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
  1200: 56 27 80 00 2b           jump @79 if a0 >u 128
      :                          @77
  1205: 9a 8c 81 00              a5 = 0x81 - a1
  1209: 64 1b                    a4 = sp
  1211: c8 7b 0b                 a4 = a4 + a0
  1214: 33 09 f2 11 01           a2 = 0x111f2
  1219: 33 08 01                 a1 = 0x1
  1222: 33 0a 02                 a3 = 0x2
  1225: 64 27                    a0 = t0
  1227: 50 10 2e 7c b1 00        ra = 46, jump @2947
      :                          @78 [@dyn 23]
  1233: 82 10 80 00              ra = u64 [sp + 0x80]
  1237: 95 11 88 00              sp = sp + 0x88
  1241: 32 00                    ret
      :                          @79
  1243: 00                       trap
      :                          @80 [@dyn 24]
  1244: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1247: 7b 10 28                 u64 [sp + 0x28] = ra
  1250: 7b 15 20                 u64 [sp + 0x20] = s0
  1253: 7b 16 18                 u64 [sp + 0x18] = s1
  1256: 64 85                    s0 = a1
  1258: 82 88 28                 a1 = u64 [a1 + 0x28]
  1261: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1264: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1267: 64 76                    s1 = a0
  1269: 33 08 b1 11 01           a1 = 0x111b1
  1274: 33 09 01                 a2 = 0x1
  1277: 64 a7                    a0 = a3
  1279: b4 b0 01 32              ra = 50, jump [a4]
      :                          @81 [@dyn 25]
  1283: 7b 15                    u64 [sp] = s0
  1285: 78 17 08                 u8 [sp + 0x8] = a0
  1288: 46 11 09                 u8 [sp + 9] = 0
  1291: 7b 16 10                 u64 [sp + 0x10] = s1
  1294: 33 05 0e                 s0 = 0xe
  1297: 64 17                    a0 = sp
  1299: 95 18 10                 a1 = sp + 0x10
  1302: 33 09 0e                 a2 = 0xe
  1305: 50 10 34 50 bd 00        ra = 52, jump @3184
      :                          @82 [@dyn 26]
  1311: 95 66 10                 s1 = s1 + 0x10
  1314: 7b 16 10                 u64 [sp + 0x10] = s1
  1317: 64 17                    a0 = sp
  1319: 95 18 10                 a1 = sp + 0x10
  1322: 64 59                    a2 = s0
  1324: 50 10 36 3d bd 00        ra = 54, jump @3184
      :                          @83 [@dyn 27]
  1330: 33 07 01                 a0 = 0x1
  1333: 7c 18 08                 a1 = u8 [sp + 0x8]
  1336: 52 08 1a                 jump @85 if a1 != 0
      :                          @84
  1339: 82 17                    a0 = u64 [sp]
  1341: 82 78 28                 a1 = u64 [a0 + 0x28]
  1344: 82 77 20                 a0 = u64 [a0 + 0x20]
  1347: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1350: 33 08 f1 11 01           a1 = 0x111f1
  1355: 33 09 01                 a2 = 0x1
  1358: b4 a0 01 38              ra = 56, jump [a3]
      :                          @85 [@dyn 28]
  1362: 82 10 28                 ra = u64 [sp + 0x28]
  1365: 82 15 20                 s0 = u64 [sp + 0x20]
  1368: 82 16 18                 s1 = u64 [sp + 0x18]
  1371: 95 11 30                 sp = sp + 0x30
  1374: 32 00                    ret
      :                          @86 [@dyn 29]
  1376: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  1379: 7b 10 30                 u64 [sp + 0x30] = ra
  1382: 7b 15 28                 u64 [sp + 0x28] = s0
  1385: 7b 16 20                 u64 [sp + 0x20] = s1
  1388: 64 86                    s1 = a1
  1390: 82 88 28                 a1 = u64 [a1 + 0x28]
  1393: 82 6a 20                 a3 = u64 [s1 + 0x20]
  1396: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1399: 64 75                    s0 = a0
  1401: 33 08 b1 11 01           a1 = 0x111b1
  1406: 33 09 01                 a2 = 0x1
  1409: 64 a7                    a0 = a3
  1411: b4 b0 01 3c              ra = 60, jump [a4]
      :                          @87 [@dyn 30]
  1415: 7b 16 08                 u64 [sp + 0x8] = s1
  1418: 78 17 10                 u8 [sp + 0x10] = a0
  1421: 46 11 11                 u8 [sp + 17] = 0
  1424: 33 06 80 00              s1 = 0x80
  1428: 33 07 8a 03              a0 = 0x38a
  1432: 7b 17                    u64 [sp] = a0
  1434: 01                       fallthrough
      :                          @88
  1435: 7b 15 18                 u64 [sp + 0x18] = s0
  1438: 95 17 08                 a0 = sp + 0x8
  1441: 95 18 18                 a1 = sp + 0x18
  1444: 82 19                    a2 = u64 [sp]
  1446: 50 10 3e c3 bc 00        ra = 62, jump @3184
      :                          @89 [@dyn 31]
  1452: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
  1455: 95 55 01                 s0 = s0 + 0x1
  1458: 52 06 e9                 jump @88 if s1 != 0
      :                          @90
  1461: 7c 18 10                 a1 = u8 [sp + 0x10]
  1464: 33 07 01                 a0 = 0x1
  1467: 52 08 1b                 jump @92 if a1 != 0
      :                          @91
  1470: 82 17 08                 a0 = u64 [sp + 0x8]
  1473: 82 78 28                 a1 = u64 [a0 + 0x28]
  1476: 82 77 20                 a0 = u64 [a0 + 0x20]
  1479: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1482: 33 08 f1 11 01           a1 = 0x111f1
  1487: 33 09 01                 a2 = 0x1
  1490: b4 a0 01 40              ra = 64, jump [a3]
      :                          @92 [@dyn 32]
  1494: 82 10 30                 ra = u64 [sp + 0x30]
  1497: 82 15 28                 s0 = u64 [sp + 0x28]
  1500: 82 16 20                 s1 = u64 [sp + 0x20]
  1503: 95 11 38                 sp = sp + 0x38
  1506: 32 00                    ret
      :                          @93 [@dyn 33]
  1508: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1511: 7b 10 28                 u64 [sp + 0x28] = ra
  1514: 7b 15 20                 u64 [sp + 0x20] = s0
  1517: 7b 16 18                 u64 [sp + 0x18] = s1
  1520: 64 85                    s0 = a1
  1522: 82 88 28                 a1 = u64 [a1 + 0x28]
  1525: 82 5a 20                 a3 = u64 [s0 + 0x20]
  1528: 82 8b 18                 a4 = u64 [a1 + 0x18]
  1531: 64 76                    s1 = a0
  1533: 33 08 b1 11 01           a1 = 0x111b1
  1538: 33 09 01                 a2 = 0x1
  1541: 64 a7                    a0 = a3
  1543: b4 b0 01 44              ra = 68, jump [a4]
      :                          @94 [@dyn 34]
  1547: 7b 15                    u64 [sp] = s0
  1549: 78 17 08                 u8 [sp + 0x8] = a0
  1552: 46 11 09                 u8 [sp + 9] = 0
  1555: 7b 16 10                 u64 [sp + 0x10] = s1
  1558: 33 05 24                 s0 = 0x24
  1561: 64 17                    a0 = sp
  1563: 95 18 10                 a1 = sp + 0x10
  1566: 33 09 24                 a2 = 0x24
  1569: 50 10 46 48 bc 00        ra = 70, jump @3184
      :                          @95 [@dyn 35]
  1575: 95 67 08                 a0 = s1 + 0x8
  1578: 7b 17 10                 u64 [sp + 0x10] = a0
  1581: 64 17                    a0 = sp
  1583: 95 18 10                 a1 = sp + 0x10
  1586: 64 59                    a2 = s0
  1588: 50 10 48 35 bc 00        ra = 72, jump @3184
      :                          @96 [@dyn 36]
  1594: 95 67 10                 a0 = s1 + 0x10
  1597: 7b 17 10                 u64 [sp + 0x10] = a0
  1600: 64 17                    a0 = sp
  1602: 95 18 10                 a1 = sp + 0x10
  1605: 64 59                    a2 = s0
  1607: 50 10 4a 22 bc 00        ra = 74, jump @3184
      :                          @97 [@dyn 37]
  1613: 95 67 18                 a0 = s1 + 0x18
  1616: 7b 17 10                 u64 [sp + 0x10] = a0
  1619: 64 17                    a0 = sp
  1621: 95 18 10                 a1 = sp + 0x10
  1624: 64 59                    a2 = s0
  1626: 50 10 4c 0f bc 00        ra = 76, jump @3184
      :                          @98 [@dyn 38]
  1632: 95 67 20                 a0 = s1 + 0x20
  1635: 7b 17 10                 u64 [sp + 0x10] = a0
  1638: 64 17                    a0 = sp
  1640: 95 18 10                 a1 = sp + 0x10
  1643: 64 59                    a2 = s0
  1645: 50 10 4e fc bb 00        ra = 78, jump @3184
      :                          @99 [@dyn 39]
  1651: 95 67 28                 a0 = s1 + 0x28
  1654: 7b 17 10                 u64 [sp + 0x10] = a0
  1657: 64 17                    a0 = sp
  1659: 95 18 10                 a1 = sp + 0x10
  1662: 64 59                    a2 = s0
  1664: 50 10 50 e9 bb 00        ra = 80, jump @3184
      :                          @100 [@dyn 40]
  1670: 95 67 30                 a0 = s1 + 0x30
  1673: 7b 17 10                 u64 [sp + 0x10] = a0
  1676: 64 17                    a0 = sp
  1678: 95 18 10                 a1 = sp + 0x10
  1681: 64 59                    a2 = s0
  1683: 50 10 52 d6 bb 00        ra = 82, jump @3184
      :                          @101 [@dyn 41]
  1689: 95 67 38                 a0 = s1 + 0x38
  1692: 7b 17 10                 u64 [sp + 0x10] = a0
  1695: 64 17                    a0 = sp
  1697: 95 18 10                 a1 = sp + 0x10
  1700: 64 59                    a2 = s0
  1702: 50 10 54 c3 bb 00        ra = 84, jump @3184
      :                          @102 [@dyn 42]
  1708: 33 07 01                 a0 = 0x1
  1711: 7c 18 08                 a1 = u8 [sp + 0x8]
  1714: 52 08 1a                 jump @104 if a1 != 0
      :                          @103
  1717: 82 17                    a0 = u64 [sp]
  1719: 82 78 28                 a1 = u64 [a0 + 0x28]
  1722: 82 77 20                 a0 = u64 [a0 + 0x20]
  1725: 82 8a 18                 a3 = u64 [a1 + 0x18]
  1728: 33 08 f1 11 01           a1 = 0x111f1
  1733: 33 09 01                 a2 = 0x1
  1736: b4 a0 01 56              ra = 86, jump [a3]
      :                          @104 [@dyn 43]
  1740: 82 10 28                 ra = u64 [sp + 0x28]
  1743: 82 15 20                 s0 = u64 [sp + 0x20]
  1746: 82 16 18                 s1 = u64 [sp + 0x18]
  1749: 95 11 30                 sp = sp + 0x30
  1752: 32 00                    ret
      :                          @105
  1754: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  1757: 7b 15                    u64 [sp] = s0
  1759: 98 82 01                 t0 = a1 >> 0x1
  1762: 84 24 fe                 t2 = t0 & 0xfffffffffffffffe
  1765: 95 49 ff                 a2 = t2 + 0xffffffffffffffff
  1768: ae 89 c1 00              jump @114 if a2 >=u a1
      :                          @106
  1772: 95 8a ff                 a3 = a1 + 0xffffffffffffffff
  1775: 68 aa                    a3 = clz a3
  1777: 9c a3 ff                 t1 = 0xffffffffffffffff >> a3
  1780: 97 8a 0d                 a3 = a1 << 0xd
  1783: d3 8a 0a                 a3 = a3 ^ a1
  1786: 98 ab 07                 a4 = a3 >> 0x7
  1789: d3 ba 0a                 a3 = a3 ^ a4
  1792: 97 ab 11                 a4 = a3 << 0x11
  1795: d3 ab 0b                 a4 = a4 ^ a3
  1798: d2 3b 0a                 a3 = a4 & t1
  1801: d8 8a 0c                 a5 = a3 <u a1
  1804: 64 85                    s0 = a1
  1806: 94 c5                    s0 = 0 if a5 != 0
  1808: c9 5a 0a                 a3 = a3 - s0
  1811: ae 8a 94 00              jump @112 if a3 >=u a1
      :                          @107
  1815: 97 99 03                 a2 = a2 << 0x3
  1818: c8 79 09                 a2 = a2 + a0
  1821: 97 aa 03                 a3 = a3 << 0x3
  1824: c8 7a 0a                 a3 = a3 + a0
  1827: 82 ac                    a5 = u64 [a3]
  1829: 82 95                    s0 = u64 [a2]
  1831: 7b 9c                    u64 [a2] = a5
  1833: 7b a5                    u64 [a3] = s0
  1835: ae 84 7d                 jump @113 if t2 >=u a1
      :                          @108
  1838: 97 b9 0d                 a2 = a4 << 0xd
  1841: d3 b9 09                 a2 = a2 ^ a4
  1844: 98 9a 07                 a3 = a2 >> 0x7
  1847: d3 a9 09                 a2 = a2 ^ a3
  1850: 97 9b 11                 a4 = a2 << 0x11
  1853: d3 9b 0b                 a4 = a4 ^ a2
  1856: d2 3b 09                 a2 = a4 & t1
  1859: d8 89 0a                 a3 = a2 <u a1
  1862: 64 8c                    a5 = a1
  1864: 94 ac                    a5 = 0 if a3 != 0
  1866: c9 c9 0a                 a3 = a2 - a5
  1869: ae 8a 5a                 jump @112 if a3 >=u a1
      :                          @109
  1872: 97 44 03                 t2 = t2 << 0x3
  1875: 97 aa 03                 a3 = a3 << 0x3
  1878: c8 7a 0a                 a3 = a3 + a0
  1881: 82 a9                    a2 = u64 [a3]
  1883: c8 74 04                 t2 = t2 + a0
  1886: 82 4c                    a5 = u64 [t2]
  1888: 7b 49                    u64 [t2] = a2
  1890: 86 29 01                 a2 = t0 | 0x1
  1893: 7b ac                    u64 [a3] = a5
  1895: ae 89 42                 jump @114 if a2 >=u a1
      :                          @110
  1898: 97 ba 0d                 a3 = a4 << 0xd
  1901: d3 ba 0a                 a3 = a3 ^ a4
  1904: 98 ab 07                 a4 = a3 >> 0x7
  1907: d3 ba 0a                 a3 = a3 ^ a4
  1910: 97 ab 11                 a4 = a3 << 0x11
  1913: d3 ba 0a                 a3 = a3 ^ a4
  1916: d2 3a 0a                 a3 = a3 & t1
  1919: d8 8a 0b                 a4 = a3 <u a1
  1922: 64 8c                    a5 = a1
  1924: 94 bc                    a5 = 0 if a4 != 0
  1926: c9 ca 0a                 a3 = a3 - a5
  1929: ae 8a 1e                 jump @112 if a3 >=u a1
      :                          @111
  1932: 97 99 03                 a2 = a2 << 0x3
  1935: c8 79 09                 a2 = a2 + a0
  1938: 97 aa 03                 a3 = a3 << 0x3
  1941: c8 a7 07                 a0 = a0 + a3
  1944: 82 78                    a1 = u64 [a0]
  1946: 82 9a                    a3 = u64 [a2]
  1948: 7b 98                    u64 [a2] = a1
  1950: 7b 7a                    u64 [a0] = a3
  1952: 82 15                    s0 = u64 [sp]
  1954: 95 11 08                 sp = sp + 0x8
  1957: 32 00                    ret
      :                          @112
  1959: 00                       trap
      :                          @113
  1960: 00                       trap
      :                          @114
  1961: 00                       trap
      :                          @115
  1962: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  1965: 7b 10 28                 u64 [sp + 0x28] = ra
  1968: 7b 15 20                 u64 [sp + 0x20] = s0
  1971: 7b 16 18                 u64 [sp + 0x18] = s1
  1974: 33 09 32                 a2 = 0x32
  1977: 64 82                    t0 = a1
  1979: 64 73                    t1 = a0
  1981: ae 98 33                 jump @121 if a1 >=u a2
      :                          @116
  1984: 82 37 08                 a0 = u64 [t1 + 0x8]
  1987: 82 39                    a2 = u64 [t1]
  1989: 33 08 01                 a1 = 0x1
  1992: ac 79 5a 02              jump @184 if a2 <u a0
      :                          @117
  1996: 95 39 10                 a2 = t1 + 0x10
  1999: 9a 26 02                 s1 = 0x2 - t0
  2002: 33 0b 01                 a4 = 0x1
  2005: 33 08 01                 a1 = 0x1
  2008: 01                       fallthrough
      :                          @118
  2009: c8 86 0a                 a3 = s1 + a1
  2012: aa ba 3c 02              jump @183 if a3 == a4
      :                          @119
  2016: 64 7c                    a5 = a0
  2018: 82 97                    a0 = u64 [a2]
  2020: 95 88 01                 a1 = a1 + 0x1
  2023: 95 99 08                 a2 = a2 + 0x8
  2026: ae 7c ef                 jump @118 if a5 >=u a0
      :                          @120
  2029: 28 35 02                 jump @184
      :                          @121
  2032: 82 37                    a0 = u64 [t1]
  2034: 82 38 08                 a1 = u64 [t1 + 0x8]
  2037: ae 87 0f                 jump @124 if a0 >=u a1
      :                          @122
  2040: 33 07 01                 a0 = 0x1
  2043: 33 06 01                 s1 = 0x1
  2046: ab 62 2b                 jump @128 if t0 != s1
      :                          @123
  2049: 28 28 02                 jump @185
      :                          @124
  2052: 95 39 10                 a2 = t1 + 0x10
  2055: 9a 2a 02                 a3 = 0x2 - t0
  2058: 33 07 01                 a0 = 0x1
  2061: 33 06 01                 s1 = 0x1
  2064: 01                       fallthrough
      :                          @125
  2065: c8 6a 0c                 a5 = a3 + s1
  2068: aa 7c 15 02              jump @185 if a5 == a0
      :                          @126
  2072: 64 8b                    a4 = a1
  2074: 82 98                    a1 = u64 [a2]
  2076: 95 99 08                 a2 = a2 + 0x8
  2079: 95 66 01                 s1 = s1 + 0x1
  2082: ae 8b ef                 jump @125 if a4 >=u a1
      :                          @127
  2085: d8 26 07                 a0 = s1 <u t0
  2088: 01                       fallthrough
      :                          @128
  2089: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2092: ae 29 16 02              jump @189 if a2 >=u t0
      :                          @129
  2096: 51 07 11 02              jump @188 if a0 == 0
      :                          @130
  2100: 97 95 03                 s0 = a2 << 0x3
  2103: 97 67 03                 a0 = s1 << 0x3
  2106: c8 73 0a                 a3 = t1 + a0
  2109: 82 a7                    a0 = u64 [a3]
  2111: c8 35 05                 s0 = s0 + t1
  2114: 82 58                    a1 = u64 [s0]
  2116: 7b 57                    u64 [s0] = a0
  2118: 7b a8                    u64 [a3] = a1
  2120: 7b 12 08                 u64 [sp + 0x8] = t0
  2123: 7b 13 10                 u64 [sp + 0x10] = t1
  2126: 53 16 02 22              jump @134 if s1 <u 2
      :                          @131
  2130: 64 37                    a0 = t1
  2132: 64 68                    a1 = s1
  2134: 7b 1a                    u64 [sp] = a3
  2136: 50 10 58 dc 04           ra = 88, jump @278
      :                          @132 [@dyn 44]
  2141: 82 17 10                 a0 = u64 [sp + 0x10]
  2144: 64 68                    a1 = s1
  2146: 50 10 5a 84 05           ra = 90, jump @304
      :                          @133 [@dyn 45]
  2151: 82 1a                    a3 = u64 [sp]
  2153: 82 13 10                 t1 = u64 [sp + 0x10]
  2156: 82 12 08                 t0 = u64 [sp + 0x8]
  2159: 01                       fallthrough
      :                          @134
  2160: ae 26 cb 01              jump @187 if s1 >=u t0
      :                          @135
  2164: 82 59                    a2 = u64 [s0]
  2166: 82 a8                    a1 = u64 [a3]
  2168: 33 07 01                 a0 = 0x1
  2171: ac 89 1f                 jump @140 if a2 <u a1
      :                          @136
  2174: 95 a7 08                 a0 = a3 + 0x8
  2177: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2180: 01                       fallthrough
      :                          @137
  2181: aa 69 8e 01              jump @182 if a2 == s1
      :                          @138
  2185: 64 8a                    a3 = a1
  2187: 82 78                    a1 = u64 [a0]
  2189: 95 77 08                 a0 = a0 + 0x8
  2192: 95 66 01                 s1 = s1 + 0x1
  2195: ae 8a f2                 jump @137 if a3 >=u a1
      :                          @139
  2198: d8 26 07                 a0 = s1 <u t0
  2201: 01                       fallthrough
      :                          @140
  2202: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2205: ae 29 a5 01              jump @189 if a2 >=u t0
      :                          @141
  2209: 51 07 a0 01              jump @188 if a0 == 0
      :                          @142
  2213: 97 95 03                 s0 = a2 << 0x3
  2216: 97 67 03                 a0 = s1 << 0x3
  2219: c8 73 0a                 a3 = t1 + a0
  2222: 82 a7                    a0 = u64 [a3]
  2224: c8 35 05                 s0 = s0 + t1
  2227: 82 58                    a1 = u64 [s0]
  2229: 7b 57                    u64 [s0] = a0
  2231: 7b a8                    u64 [a3] = a1
  2233: 53 16 02 22              jump @146 if s1 <u 2
      :                          @143
  2237: 64 37                    a0 = t1
  2239: 64 68                    a1 = s1
  2241: 7b 1a                    u64 [sp] = a3
  2243: 50 10 5c 71 04           ra = 92, jump @278
      :                          @144 [@dyn 46]
  2248: 82 17 10                 a0 = u64 [sp + 0x10]
  2251: 64 68                    a1 = s1
  2253: 50 10 5e 19 05           ra = 94, jump @304
      :                          @145 [@dyn 47]
  2258: 82 1a                    a3 = u64 [sp]
  2260: 82 13 10                 t1 = u64 [sp + 0x10]
  2263: 82 12 08                 t0 = u64 [sp + 0x8]
  2266: 01                       fallthrough
      :                          @146
  2267: ae 26 60 01              jump @187 if s1 >=u t0
      :                          @147
  2271: 82 59                    a2 = u64 [s0]
  2273: 82 a8                    a1 = u64 [a3]
  2275: 33 07 01                 a0 = 0x1
  2278: ac 89 1f                 jump @152 if a2 <u a1
      :                          @148
  2281: 95 a7 08                 a0 = a3 + 0x8
  2284: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2287: 01                       fallthrough
      :                          @149
  2288: aa 69 23 01              jump @182 if a2 == s1
      :                          @150
  2292: 64 8a                    a3 = a1
  2294: 82 78                    a1 = u64 [a0]
  2296: 95 77 08                 a0 = a0 + 0x8
  2299: 95 66 01                 s1 = s1 + 0x1
  2302: ae 8a f2                 jump @149 if a3 >=u a1
      :                          @151
  2305: d8 26 07                 a0 = s1 <u t0
  2308: 01                       fallthrough
      :                          @152
  2309: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2312: ae 29 3a 01              jump @189 if a2 >=u t0
      :                          @153
  2316: 51 07 35 01              jump @188 if a0 == 0
      :                          @154
  2320: 97 95 03                 s0 = a2 << 0x3
  2323: 97 67 03                 a0 = s1 << 0x3
  2326: c8 73 0a                 a3 = t1 + a0
  2329: 82 a7                    a0 = u64 [a3]
  2331: c8 35 05                 s0 = s0 + t1
  2334: 82 58                    a1 = u64 [s0]
  2336: 7b 57                    u64 [s0] = a0
  2338: 7b a8                    u64 [a3] = a1
  2340: 53 16 02 22              jump @158 if s1 <u 2
      :                          @155
  2344: 64 37                    a0 = t1
  2346: 64 68                    a1 = s1
  2348: 7b 1a                    u64 [sp] = a3
  2350: 50 10 60 06 04           ra = 96, jump @278
      :                          @156 [@dyn 48]
  2355: 82 17 10                 a0 = u64 [sp + 0x10]
  2358: 64 68                    a1 = s1
  2360: 50 10 62 ae 04           ra = 98, jump @304
      :                          @157 [@dyn 49]
  2365: 82 1a                    a3 = u64 [sp]
  2367: 82 13 10                 t1 = u64 [sp + 0x10]
  2370: 82 12 08                 t0 = u64 [sp + 0x8]
  2373: 01                       fallthrough
      :                          @158
  2374: ae 26 f5 00              jump @187 if s1 >=u t0
      :                          @159
  2378: 82 59                    a2 = u64 [s0]
  2380: 82 a8                    a1 = u64 [a3]
  2382: 33 07 01                 a0 = 0x1
  2385: ac 89 1f                 jump @164 if a2 <u a1
      :                          @160
  2388: 95 a7 08                 a0 = a3 + 0x8
  2391: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2394: 01                       fallthrough
      :                          @161
  2395: aa 69 b8 00              jump @182 if a2 == s1
      :                          @162
  2399: 64 8a                    a3 = a1
  2401: 82 78                    a1 = u64 [a0]
  2403: 95 77 08                 a0 = a0 + 0x8
  2406: 95 66 01                 s1 = s1 + 0x1
  2409: ae 8a f2                 jump @161 if a3 >=u a1
      :                          @163
  2412: d8 26 07                 a0 = s1 <u t0
  2415: 01                       fallthrough
      :                          @164
  2416: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2419: ae 29 cf 00              jump @189 if a2 >=u t0
      :                          @165
  2423: 51 07 ca 00              jump @188 if a0 == 0
      :                          @166
  2427: 97 95 03                 s0 = a2 << 0x3
  2430: 97 67 03                 a0 = s1 << 0x3
  2433: c8 73 0a                 a3 = t1 + a0
  2436: 82 a7                    a0 = u64 [a3]
  2438: c8 35 05                 s0 = s0 + t1
  2441: 82 58                    a1 = u64 [s0]
  2443: 7b 57                    u64 [s0] = a0
  2445: 7b a8                    u64 [a3] = a1
  2447: 53 16 02 22              jump @170 if s1 <u 2
      :                          @167
  2451: 64 37                    a0 = t1
  2453: 64 68                    a1 = s1
  2455: 7b 1a                    u64 [sp] = a3
  2457: 50 10 64 9b 03           ra = 100, jump @278
      :                          @168 [@dyn 50]
  2462: 82 17 10                 a0 = u64 [sp + 0x10]
  2465: 64 68                    a1 = s1
  2467: 50 10 66 43 04           ra = 102, jump @304
      :                          @169 [@dyn 51]
  2472: 82 1a                    a3 = u64 [sp]
  2474: 82 13 10                 t1 = u64 [sp + 0x10]
  2477: 82 12 08                 t0 = u64 [sp + 0x8]
  2480: 01                       fallthrough
      :                          @170
  2481: ae 26 8a 00              jump @187 if s1 >=u t0
      :                          @171
  2485: 82 59                    a2 = u64 [s0]
  2487: 82 a8                    a1 = u64 [a3]
  2489: 33 07 01                 a0 = 0x1
  2492: ac 89 1e                 jump @176 if a2 <u a1
      :                          @172
  2495: 95 a7 08                 a0 = a3 + 0x8
  2498: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2501: 01                       fallthrough
      :                          @173
  2502: aa 69 4d                 jump @182 if a2 == s1
      :                          @174
  2505: 64 8a                    a3 = a1
  2507: 82 78                    a1 = u64 [a0]
  2509: 95 77 08                 a0 = a0 + 0x8
  2512: 95 66 01                 s1 = s1 + 0x1
  2515: ae 8a f3                 jump @173 if a3 >=u a1
      :                          @175
  2518: d8 26 07                 a0 = s1 <u t0
  2521: 01                       fallthrough
      :                          @176
  2522: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2525: ae 29 65                 jump @189 if a2 >=u t0
      :                          @177
  2528: 51 07 61                 jump @188 if a0 == 0
      :                          @178
  2531: 97 97 03                 a0 = a2 << 0x3
  2534: 97 68 03                 a1 = s1 << 0x3
  2537: c8 38 08                 a1 = a1 + t1
  2540: 82 8a                    a3 = u64 [a1]
  2542: c8 37 07                 a0 = a0 + t1
  2545: 82 7b                    a4 = u64 [a0]
  2547: 7b 7a                    u64 [a0] = a3
  2549: 7b 8b                    u64 [a1] = a4
  2551: 53 16 02 40              jump @186 if s1 <u 2
      :                          @179
  2555: 64 37                    a0 = t1
  2557: 64 68                    a1 = s1
  2559: 64 35                    s0 = t1
  2561: 50 10 68 33 03           ra = 104, jump @278
      :                          @180 [@dyn 52]
  2566: 64 57                    a0 = s0
  2568: 64 68                    a1 = s1
  2570: 50 10 6a dc 03           ra = 106, jump @304
      :                          @181 [@dyn 53]
  2575: 33 07                    a0 = 0
  2577: 28 18                    jump @185
      :                          @182
  2579: 33 07 01                 a0 = 0x1
  2582: 28 13                    jump @185
      :                          @183
  2584: 64 28                    a1 = t0
  2586: d3 28 07                 a0 = a1 ^ t0
  2589: 88 77 01                 a0 = a0 <u 0x1
  2592: 28 09                    jump @185
      :                          @184
  2594: d3 28 07                 a0 = a1 ^ t0
  2597: 88 77 01                 a0 = a0 <u 0x1
  2600: 01                       fallthrough
      :                          @185
  2601: 82 10 28                 ra = u64 [sp + 0x28]
  2604: 82 15 20                 s0 = u64 [sp + 0x20]
  2607: 82 16 18                 s1 = u64 [sp + 0x18]
  2610: 95 11 30                 sp = sp + 0x30
  2613: 32 00                    ret
      :                          @186
  2615: 33 07                    a0 = 0
  2617: 28 f0                    jump @185
      :                          @187
  2619: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2622: ae 29 04                 jump @189 if a2 >=u t0
      :                          @188
  2625: 00                       trap
      :                          @189
  2626: 00                       trap
      :                          @190
  2627: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  2630: 7b 10 28                 u64 [sp + 0x28] = ra
  2633: 7b 15 20                 u64 [sp + 0x20] = s0
  2636: 7b 16 18                 u64 [sp + 0x18] = s1
  2639: 33 09 32                 a2 = 0x32
  2642: 64 82                    t0 = a1
  2644: 64 73                    t1 = a0
  2646: ae 98 33                 jump @196 if a1 >=u a2
      :                          @191
  2649: 82 37 08                 a0 = u64 [t1 + 0x8]
  2652: 82 39                    a2 = u64 [t1]
  2654: 33 08 01                 a1 = 0x1
  2657: ad 97 59 02              jump @259 if a0 <s a2
      :                          @192
  2661: 95 39 10                 a2 = t1 + 0x10
  2664: 9a 26 02                 s1 = 0x2 - t0
  2667: 33 0b 01                 a4 = 0x1
  2670: 33 08 01                 a1 = 0x1
  2673: 01                       fallthrough
      :                          @193
  2674: c8 86 0a                 a3 = s1 + a1
  2677: aa ba 3b 02              jump @258 if a3 == a4
      :                          @194
  2681: 64 7c                    a5 = a0
  2683: 82 97                    a0 = u64 [a2]
  2685: 95 88 01                 a1 = a1 + 0x1
  2688: 95 99 08                 a2 = a2 + 0x8
  2691: af c7 ef                 jump @193 if a0 >=s a5
      :                          @195
  2694: 28 34 02                 jump @259
      :                          @196
  2697: 82 37                    a0 = u64 [t1]
  2699: 82 38 08                 a1 = u64 [t1 + 0x8]
  2702: af 78 0f                 jump @199 if a1 >=s a0
      :                          @197
  2705: 33 07 01                 a0 = 0x1
  2708: 33 06 01                 s1 = 0x1
  2711: ab 62 2b                 jump @203 if t0 != s1
      :                          @198
  2714: 28 27 02                 jump @260
      :                          @199
  2717: 95 39 10                 a2 = t1 + 0x10
  2720: 9a 2a 02                 a3 = 0x2 - t0
  2723: 33 07 01                 a0 = 0x1
  2726: 33 06 01                 s1 = 0x1
  2729: 01                       fallthrough
      :                          @200
  2730: c8 6a 0c                 a5 = a3 + s1
  2733: aa 7c 14 02              jump @260 if a5 == a0
      :                          @201
  2737: 64 8b                    a4 = a1
  2739: 82 98                    a1 = u64 [a2]
  2741: 95 99 08                 a2 = a2 + 0x8
  2744: 95 66 01                 s1 = s1 + 0x1
  2747: af b8 ef                 jump @200 if a1 >=s a4
      :                          @202
  2750: d8 26 07                 a0 = s1 <u t0
  2753: 01                       fallthrough
      :                          @203
  2754: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2757: ae 29 15 02              jump @264 if a2 >=u t0
      :                          @204
  2761: 51 07 10 02              jump @263 if a0 == 0
      :                          @205
  2765: 97 95 03                 s0 = a2 << 0x3
  2768: 97 67 03                 a0 = s1 << 0x3
  2771: c8 73 0a                 a3 = t1 + a0
  2774: 82 a7                    a0 = u64 [a3]
  2776: c8 35 05                 s0 = s0 + t1
  2779: 82 58                    a1 = u64 [s0]
  2781: 7b 57                    u64 [s0] = a0
  2783: 7b a8                    u64 [a3] = a1
  2785: 7b 12 08                 u64 [sp + 0x8] = t0
  2788: 7b 13 10                 u64 [sp + 0x10] = t1
  2791: 53 16 02 22              jump @209 if s1 <u 2
      :                          @206
  2795: 64 37                    a0 = t1
  2797: 64 68                    a1 = s1
  2799: 7b 1a                    u64 [sp] = a3
  2801: 50 10 6c ea 01           ra = 108, jump @265
      :                          @207 [@dyn 54]
  2806: 82 17 10                 a0 = u64 [sp + 0x10]
  2809: 64 68                    a1 = s1
  2811: 50 10 6e 42 03           ra = 110, jump @314
      :                          @208 [@dyn 55]
  2816: 82 1a                    a3 = u64 [sp]
  2818: 82 13 10                 t1 = u64 [sp + 0x10]
  2821: 82 12 08                 t0 = u64 [sp + 0x8]
  2824: 01                       fallthrough
      :                          @209
  2825: ae 26 ca 01              jump @262 if s1 >=u t0
      :                          @210
  2829: 82 59                    a2 = u64 [s0]
  2831: 82 a8                    a1 = u64 [a3]
  2833: 33 07 01                 a0 = 0x1
  2836: ad 98 1f                 jump @215 if a1 <s a2
      :                          @211
  2839: 95 a7 08                 a0 = a3 + 0x8
  2842: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2845: 01                       fallthrough
      :                          @212
  2846: aa 69 8d 01              jump @257 if a2 == s1
      :                          @213
  2850: 64 8a                    a3 = a1
  2852: 82 78                    a1 = u64 [a0]
  2854: 95 77 08                 a0 = a0 + 0x8
  2857: 95 66 01                 s1 = s1 + 0x1
  2860: af a8 f2                 jump @212 if a1 >=s a3
      :                          @214
  2863: d8 26 07                 a0 = s1 <u t0
  2866: 01                       fallthrough
      :                          @215
  2867: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2870: ae 29 a4 01              jump @264 if a2 >=u t0
      :                          @216
  2874: 51 07 9f 01              jump @263 if a0 == 0
      :                          @217
  2878: 97 95 03                 s0 = a2 << 0x3
  2881: 97 67 03                 a0 = s1 << 0x3
  2884: c8 73 0a                 a3 = t1 + a0
  2887: 82 a7                    a0 = u64 [a3]
  2889: c8 35 05                 s0 = s0 + t1
  2892: 82 58                    a1 = u64 [s0]
  2894: 7b 57                    u64 [s0] = a0
  2896: 7b a8                    u64 [a3] = a1
  2898: 53 16 02 22              jump @221 if s1 <u 2
      :                          @218
  2902: 64 37                    a0 = t1
  2904: 64 68                    a1 = s1
  2906: 7b 1a                    u64 [sp] = a3
  2908: 50 10 70 7f 01           ra = 112, jump @265
      :                          @219 [@dyn 56]
  2913: 82 17 10                 a0 = u64 [sp + 0x10]
  2916: 64 68                    a1 = s1
  2918: 50 10 72 d7 02           ra = 114, jump @314
      :                          @220 [@dyn 57]
  2923: 82 1a                    a3 = u64 [sp]
  2925: 82 13 10                 t1 = u64 [sp + 0x10]
  2928: 82 12 08                 t0 = u64 [sp + 0x8]
  2931: 01                       fallthrough
      :                          @221
  2932: ae 26 5f 01              jump @262 if s1 >=u t0
      :                          @222
  2936: 82 59                    a2 = u64 [s0]
  2938: 82 a8                    a1 = u64 [a3]
  2940: 33 07 01                 a0 = 0x1
  2943: ad 98 1f                 jump @227 if a1 <s a2
      :                          @223
  2946: 95 a7 08                 a0 = a3 + 0x8
  2949: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  2952: 01                       fallthrough
      :                          @224
  2953: aa 69 22 01              jump @257 if a2 == s1
      :                          @225
  2957: 64 8a                    a3 = a1
  2959: 82 78                    a1 = u64 [a0]
  2961: 95 77 08                 a0 = a0 + 0x8
  2964: 95 66 01                 s1 = s1 + 0x1
  2967: af a8 f2                 jump @224 if a1 >=s a3
      :                          @226
  2970: d8 26 07                 a0 = s1 <u t0
  2973: 01                       fallthrough
      :                          @227
  2974: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  2977: ae 29 39 01              jump @264 if a2 >=u t0
      :                          @228
  2981: 51 07 34 01              jump @263 if a0 == 0
      :                          @229
  2985: 97 95 03                 s0 = a2 << 0x3
  2988: 97 67 03                 a0 = s1 << 0x3
  2991: c8 73 0a                 a3 = t1 + a0
  2994: 82 a7                    a0 = u64 [a3]
  2996: c8 35 05                 s0 = s0 + t1
  2999: 82 58                    a1 = u64 [s0]
  3001: 7b 57                    u64 [s0] = a0
  3003: 7b a8                    u64 [a3] = a1
  3005: 53 16 02 22              jump @233 if s1 <u 2
      :                          @230
  3009: 64 37                    a0 = t1
  3011: 64 68                    a1 = s1
  3013: 7b 1a                    u64 [sp] = a3
  3015: 50 10 74 14 01           ra = 116, jump @265
      :                          @231 [@dyn 58]
  3020: 82 17 10                 a0 = u64 [sp + 0x10]
  3023: 64 68                    a1 = s1
  3025: 50 10 76 6c 02           ra = 118, jump @314
      :                          @232 [@dyn 59]
  3030: 82 1a                    a3 = u64 [sp]
  3032: 82 13 10                 t1 = u64 [sp + 0x10]
  3035: 82 12 08                 t0 = u64 [sp + 0x8]
  3038: 01                       fallthrough
      :                          @233
  3039: ae 26 f4 00              jump @262 if s1 >=u t0
      :                          @234
  3043: 82 59                    a2 = u64 [s0]
  3045: 82 a8                    a1 = u64 [a3]
  3047: 33 07 01                 a0 = 0x1
  3050: ad 98 1f                 jump @239 if a1 <s a2
      :                          @235
  3053: 95 a7 08                 a0 = a3 + 0x8
  3056: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3059: 01                       fallthrough
      :                          @236
  3060: aa 69 b7 00              jump @257 if a2 == s1
      :                          @237
  3064: 64 8a                    a3 = a1
  3066: 82 78                    a1 = u64 [a0]
  3068: 95 77 08                 a0 = a0 + 0x8
  3071: 95 66 01                 s1 = s1 + 0x1
  3074: af a8 f2                 jump @236 if a1 >=s a3
      :                          @238
  3077: d8 26 07                 a0 = s1 <u t0
  3080: 01                       fallthrough
      :                          @239
  3081: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3084: ae 29 ce 00              jump @264 if a2 >=u t0
      :                          @240
  3088: 51 07 c9 00              jump @263 if a0 == 0
      :                          @241
  3092: 97 95 03                 s0 = a2 << 0x3
  3095: 97 67 03                 a0 = s1 << 0x3
  3098: c8 73 0a                 a3 = t1 + a0
  3101: 82 a7                    a0 = u64 [a3]
  3103: c8 35 05                 s0 = s0 + t1
  3106: 82 58                    a1 = u64 [s0]
  3108: 7b 57                    u64 [s0] = a0
  3110: 7b a8                    u64 [a3] = a1
  3112: 53 16 02 22              jump @245 if s1 <u 2
      :                          @242
  3116: 64 37                    a0 = t1
  3118: 64 68                    a1 = s1
  3120: 7b 1a                    u64 [sp] = a3
  3122: 50 10 78 a9 00           ra = 120, jump @265
      :                          @243 [@dyn 60]
  3127: 82 17 10                 a0 = u64 [sp + 0x10]
  3130: 64 68                    a1 = s1
  3132: 50 10 7a 01 02           ra = 122, jump @314
      :                          @244 [@dyn 61]
  3137: 82 1a                    a3 = u64 [sp]
  3139: 82 13 10                 t1 = u64 [sp + 0x10]
  3142: 82 12 08                 t0 = u64 [sp + 0x8]
  3145: 01                       fallthrough
      :                          @245
  3146: ae 26 89 00              jump @262 if s1 >=u t0
      :                          @246
  3150: 82 59                    a2 = u64 [s0]
  3152: 82 a8                    a1 = u64 [a3]
  3154: 33 07 01                 a0 = 0x1
  3157: ad 98 1e                 jump @251 if a1 <s a2
      :                          @247
  3160: 95 a7 08                 a0 = a3 + 0x8
  3163: 95 29 ff                 a2 = t0 + 0xffffffffffffffff
  3166: 01                       fallthrough
      :                          @248
  3167: aa 69 4c                 jump @257 if a2 == s1
      :                          @249
  3170: 64 8a                    a3 = a1
  3172: 82 78                    a1 = u64 [a0]
  3174: 95 77 08                 a0 = a0 + 0x8
  3177: 95 66 01                 s1 = s1 + 0x1
  3180: af a8 f3                 jump @248 if a1 >=s a3
      :                          @250
  3183: d8 26 07                 a0 = s1 <u t0
  3186: 01                       fallthrough
      :                          @251
  3187: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3190: ae 29 64                 jump @264 if a2 >=u t0
      :                          @252
  3193: 51 07 60                 jump @263 if a0 == 0
      :                          @253
  3196: 97 97 03                 a0 = a2 << 0x3
  3199: 97 68 03                 a1 = s1 << 0x3
  3202: c8 38 08                 a1 = a1 + t1
  3205: 82 8a                    a3 = u64 [a1]
  3207: c8 37 07                 a0 = a0 + t1
  3210: 82 7b                    a4 = u64 [a0]
  3212: 7b 7a                    u64 [a0] = a3
  3214: 7b 8b                    u64 [a1] = a4
  3216: 53 16 02 3f              jump @261 if s1 <u 2
      :                          @254
  3220: 64 37                    a0 = t1
  3222: 64 68                    a1 = s1
  3224: 64 35                    s0 = t1
  3226: 50 10 7c 41              ra = 124, jump @265
      :                          @255 [@dyn 62]
  3230: 64 57                    a0 = s0
  3232: 64 68                    a1 = s1
  3234: 50 10 7e 9b 01           ra = 126, jump @314
      :                          @256 [@dyn 63]
  3239: 33 07                    a0 = 0
  3241: 28 18                    jump @260
      :                          @257
  3243: 33 07 01                 a0 = 0x1
  3246: 28 13                    jump @260
      :                          @258
  3248: 64 28                    a1 = t0
  3250: d3 28 07                 a0 = a1 ^ t0
  3253: 88 77 01                 a0 = a0 <u 0x1
  3256: 28 09                    jump @260
      :                          @259
  3258: d3 28 07                 a0 = a1 ^ t0
  3261: 88 77 01                 a0 = a0 <u 0x1
  3264: 01                       fallthrough
      :                          @260
  3265: 82 10 28                 ra = u64 [sp + 0x28]
  3268: 82 15 20                 s0 = u64 [sp + 0x20]
  3271: 82 16 18                 s1 = u64 [sp + 0x18]
  3274: 95 11 30                 sp = sp + 0x30
  3277: 32 00                    ret
      :                          @261
  3279: 33 07                    a0 = 0
  3281: 28 f0                    jump @260
      :                          @262
  3283: 95 69 ff                 a2 = s1 + 0xffffffffffffffff
  3286: ae 29 04                 jump @264 if a2 >=u t0
      :                          @263
  3289: 00                       trap
      :                          @264
  3290: 00                       trap
      :                          @265
  3291: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3294: ae 8a 55                 jump @277 if a3 >=u a1
      :                          @266
  3297: ae 89 50                 jump @276 if a2 >=u a1
      :                          @267
  3300: 97 9a 03                 a3 = a2 << 0x3
  3303: c8 7a 0a                 a3 = a3 + a0
  3306: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  3309: 28 15                    jump @271
      :                          @268
  3311: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  3314: 7b c4                    u64 [a5] = t2
  3316: 28 05                    jump @270
      :                          @269
  3318: 7b c4                    u64 [a5] = t2
  3320: 01                       fallthrough
      :                          @270
  3321: 95 99 01                 a2 = a2 + 0x1
  3324: 95 22 08                 t0 = t0 + 0x8
  3327: aa 89 32                 jump @276 if a2 == a1
      :                          @271
  3330: 97 93 03                 t1 = a2 << 0x3
  3333: c8 73 03                 t1 = t1 + a0
  3336: 82 34                    t2 = u64 [t1]
  3338: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  3341: af c4 ec                 jump @270 if t2 >=s a5
      :                          @272
  3344: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3347: 7b 3c                    u64 [t1] = a5
  3349: 64 2c                    a5 = t0
  3351: 51 0a d8                 jump @268 if a3 == 0
      :                          @273
  3354: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  3357: af b4 d9                 jump @269 if t2 >=s a4
      :                          @274
  3360: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3363: 7b cb                    u64 [a5] = a4
  3365: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  3368: 52 0a f2                 jump @273 if a3 != 0
      :                          @275
  3371: 64 7c                    a5 = a0
  3373: 7b c4                    u64 [a5] = t2
  3375: 28 ca                    jump @270
      :                          @276
  3377: 32 00                    ret
      :                          @277
  3379: 00                       trap
      :                          @278
  3380: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3383: ae 8a 55                 jump @290 if a3 >=u a1
      :                          @279
  3386: ae 89 50                 jump @289 if a2 >=u a1
      :                          @280
  3389: 97 9a 03                 a3 = a2 << 0x3
  3392: c8 7a 0a                 a3 = a3 + a0
  3395: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  3398: 28 15                    jump @284
      :                          @281
  3400: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  3403: 7b c4                    u64 [a5] = t2
  3405: 28 05                    jump @283
      :                          @282
  3407: 7b c4                    u64 [a5] = t2
  3409: 01                       fallthrough
      :                          @283
  3410: 95 99 01                 a2 = a2 + 0x1
  3413: 95 22 08                 t0 = t0 + 0x8
  3416: aa 89 32                 jump @289 if a2 == a1
      :                          @284
  3419: 97 93 03                 t1 = a2 << 0x3
  3422: c8 73 03                 t1 = t1 + a0
  3425: 82 34                    t2 = u64 [t1]
  3427: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  3430: ae 4c ec                 jump @283 if a5 >=u t2
      :                          @285
  3433: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3436: 7b 3c                    u64 [t1] = a5
  3438: 64 2c                    a5 = t0
  3440: 51 0a d8                 jump @281 if a3 == 0
      :                          @286
  3443: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  3446: ae 4b d9                 jump @282 if a4 >=u t2
      :                          @287
  3449: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3452: 7b cb                    u64 [a5] = a4
  3454: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  3457: 52 0a f2                 jump @286 if a3 != 0
      :                          @288
  3460: 64 7c                    a5 = a0
  3462: 7b c4                    u64 [a5] = t2
  3464: 28 ca                    jump @283
      :                          @289
  3466: 32 00                    ret
      :                          @290
  3468: 00                       trap
      :                          @291
  3469: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3472: ae 8a 55                 jump @303 if a3 >=u a1
      :                          @292
  3475: ae 89 50                 jump @302 if a2 >=u a1
      :                          @293
  3478: 97 9a 03                 a3 = a2 << 0x3
  3481: c8 7a 0a                 a3 = a3 + a0
  3484: 95 a2 f8                 t0 = a3 + 0xfffffffffffffff8
  3487: 28 15                    jump @297
      :                          @294
  3489: 95 3c f8                 a5 = t1 + 0xfffffffffffffff8
  3492: 7b c4                    u64 [a5] = t2
  3494: 28 05                    jump @296
      :                          @295
  3496: 7b c4                    u64 [a5] = t2
  3498: 01                       fallthrough
      :                          @296
  3499: 95 99 01                 a2 = a2 + 0x1
  3502: 95 22 08                 t0 = t0 + 0x8
  3505: aa 89 32                 jump @302 if a2 == a1
      :                          @297
  3508: 97 93 03                 t1 = a2 << 0x3
  3511: c8 73 03                 t1 = t1 + a0
  3514: 82 34                    t2 = u64 [t1]
  3516: 82 3c f8                 a5 = u64 [t1 + 0xfffffffffffffff8]
  3519: ae c4 ec                 jump @296 if t2 >=u a5
      :                          @298
  3522: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
  3525: 7b 3c                    u64 [t1] = a5
  3527: 64 2c                    a5 = t0
  3529: 51 0a d8                 jump @294 if a3 == 0
      :                          @299
  3532: 82 cb f8                 a4 = u64 [a5 + 0xfffffffffffffff8]
  3535: ae b4 d9                 jump @295 if t2 >=u a4
      :                          @300
  3538: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  3541: 7b cb                    u64 [a5] = a4
  3543: 95 cc f8                 a5 = a5 + 0xfffffffffffffff8
  3546: 52 0a f2                 jump @299 if a3 != 0
      :                          @301
  3549: 64 7c                    a5 = a0
  3551: 7b c4                    u64 [a5] = t2
  3553: 28 ca                    jump @296
      :                          @302
  3555: 32 00                    ret
      :                          @303
  3557: 00                       trap
      :                          @304
  3558: 82 7a 08                 a3 = u64 [a0 + 0x8]
  3561: 82 79                    a2 = u64 [a0]
  3563: ae a9 50                 jump @313 if a2 >=u a3
      :                          @305
  3566: 7b 7a                    u64 [a0] = a3
  3568: 33 0b 03                 a4 = 0x3
  3571: 95 7a 08                 a3 = a0 + 0x8
  3574: ac b8 41                 jump @312 if a1 <u a4
      :                          @306
  3577: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3580: ae b9 3b                 jump @312 if a2 >=u a4
      :                          @307
  3583: 97 8c 03                 a5 = a1 << 0x3
  3586: c8 7c 02                 t0 = a5 + a0
  3589: 7b ab                    u64 [a3] = a4
  3591: 33 0c 03                 a5 = 0x3
  3594: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
  3597: aa c8 24                 jump @311 if a1 == a5
      :                          @308
  3600: 95 7a 10                 a3 = a0 + 0x10
  3603: 9a 87 03                 a0 = 0x3 - a1
  3606: 33 08 04                 a1 = 0x4
  3609: 33 0c 04                 a5 = 0x4
  3612: 01                       fallthrough
      :                          @309
  3613: 82 ab 08                 a4 = u64 [a3 + 0x8]
  3616: ae b9 17                 jump @312 if a2 >=u a4
      :                          @310
  3619: 7b ab                    u64 [a3] = a4
  3621: 95 cc 01                 a5 = a5 + 0x1
  3624: c8 c7 0b                 a4 = a0 + a5
  3627: 95 aa 08                 a3 = a3 + 0x8
  3630: ab 8b ef                 jump @309 if a4 != a1
      :                          @311
  3633: 64 2a                    a3 = t0
  3635: 7b a9                    u64 [a3] = a2
  3637: 32 00                    ret
      :                          @312
  3639: 7b a9                    u64 [a3] = a2
  3641: 32 00                    ret
      :                          @313
  3643: 32 00                    ret
      :                          @314
  3645: 82 7a 08                 a3 = u64 [a0 + 0x8]
  3648: 82 79                    a2 = u64 [a0]
  3650: af 9a 50                 jump @323 if a3 >=s a2
      :                          @315
  3653: 7b 7a                    u64 [a0] = a3
  3655: 33 0b 03                 a4 = 0x3
  3658: 95 7a 08                 a3 = a0 + 0x8
  3661: ac b8 41                 jump @322 if a1 <u a4
      :                          @316
  3664: 82 7b 10                 a4 = u64 [a0 + 0x10]
  3667: af 9b 3b                 jump @322 if a4 >=s a2
      :                          @317
  3670: 97 8c 03                 a5 = a1 << 0x3
  3673: c8 7c 02                 t0 = a5 + a0
  3676: 7b ab                    u64 [a3] = a4
  3678: 33 0c 03                 a5 = 0x3
  3681: 95 22 f8                 t0 = t0 + 0xfffffffffffffff8
  3684: aa c8 24                 jump @321 if a1 == a5
      :                          @318
  3687: 95 7a 10                 a3 = a0 + 0x10
  3690: 9a 87 03                 a0 = 0x3 - a1
  3693: 33 08 04                 a1 = 0x4
  3696: 33 0c 04                 a5 = 0x4
  3699: 01                       fallthrough
      :                          @319
  3700: 82 ab 08                 a4 = u64 [a3 + 0x8]
  3703: af 9b 17                 jump @322 if a4 >=s a2
      :                          @320
  3706: 7b ab                    u64 [a3] = a4
  3708: 95 cc 01                 a5 = a5 + 0x1
  3711: c8 c7 0b                 a4 = a0 + a5
  3714: 95 aa 08                 a3 = a3 + 0x8
  3717: ab 8b ef                 jump @319 if a4 != a1
      :                          @321
  3720: 64 2a                    a3 = t0
  3722: 7b a9                    u64 [a3] = a2
  3724: 32 00                    ret
      :                          @322
  3726: 7b a9                    u64 [a3] = a2
  3728: 32 00                    ret
      :                          @323
  3730: 32 00                    ret
      :                          @324
  3732: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
  3736: 7b 10 98 01              u64 [sp + 0x198] = ra
  3740: 7b 15 90 01              u64 [sp + 0x190] = s0
  3744: 7b 16 88 01              u64 [sp + 0x188] = s1
  3748: 33 0b 15                 a4 = 0x15
  3751: 7b 1a 48                 u64 [sp + 0x48] = a3
  3754: 7b 19 58                 u64 [sp + 0x58] = a2
  3757: 64 80                    ra = a1
  3759: ae b8 2b                 jump @329 if a1 >=u a4
      :                          @325
  3762: 64 72                    t0 = a0
  3764: 01                       fallthrough
      :                          @326
  3765: 33 07 01                 a0 = 0x1
  3768: ae 07 10                 jump @328 if a0 >=u ra
      :                          @327
  3771: 33 09 01                 a2 = 0x1
  3774: 64 27                    a0 = t0
  3776: 64 08                    a1 = ra
  3778: 50 20 80 00 19 fe        ra = 128, jump @265
      :                          @328 [@dyn 64]
  3784: 82 10 98 01              ra = u64 [sp + 0x198]
  3788: 82 15 90 01              s0 = u64 [sp + 0x190]
  3792: 82 16 88 01              s1 = u64 [sp + 0x188]
  3796: 95 11 a0 01              sp = sp + 0x1a0
  3800: 32 00                    ret
      :                          @329
  3802: 7b 17 08                 u64 [sp + 0x8] = a0
  3805: 49 11 78 01              u64 [sp + 120] = 0x1
  3809: 33 05 01 01              s0 = 0x101
  3813: 33 07 01                 a0 = 0x1
  3816: 7b 10                    u64 [sp] = ra
  3818: 01                       fallthrough
      :                          @330
  3819: 82 18 78                 a1 = u64 [sp + 0x78]
  3822: d2 87 07                 a0 = a0 & a1
  3825: 7b 17 70                 u64 [sp + 0x70] = a0
  3828: 82 12 08                 t0 = u64 [sp + 0x8]
  3831: 01                       fallthrough
      :                          @331
  3832: 81 17 48                 a0 = i32 [sp + 0x48]
  3835: 51 07 b6 05              jump @427 if a0 == 0
      :                          @332
  3839: 82 17 78                 a0 = u64 [sp + 0x78]
  3842: 84 77 01                 a0 = a0 & 0x1
  3845: 7b 12 80 00              u64 [sp + 0x80] = t0
  3849: 51 07 74 02              jump @372 if a0 == 0
      :                          @333
  3853: 98 0b 02                 a4 = ra >> 0x2
  3856: 97 b6 01                 s1 = a4 << 0x1
  3859: c8 b6 03                 t1 = s1 + a4
  3862: 54 10 31 29              jump @336 if ra <=u 49
      :                          @334
  3866: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
  3869: 97 b7 03                 a0 = a4 << 0x3
  3872: c8 27 07                 a0 = a0 + t0
  3875: 97 58 03                 a1 = s0 << 0x3
  3878: c8 28 08                 a1 = a1 + t0
  3881: 82 79                    a2 = u64 [a0]
  3883: 82 88                    a1 = u64 [a1]
  3885: af 89 17                 jump @337 if a2 >=s a1
      :                          @335
  3888: 49 11 28 01              u64 [sp + 40] = 0x1
  3892: 64 94                    t2 = a2
  3894: 7b 15 50                 u64 [sp + 0x50] = s0
  3897: 64 b5                    s0 = a4
  3899: 64 89                    a2 = a1
  3901: 28 10                    jump @338
      :                          @336
  3903: 33 09                    a2 = 0
  3905: 28 1e 01                 jump @345
      :                          @337
  3908: 49 11 28                 u64 [sp + 40] = 0
  3911: 64 84                    t2 = a1
  3913: 7b 1b 50                 u64 [sp + 0x50] = a4
  3916: 01                       fallthrough
      :                          @338
  3917: 95 b8 01                 a1 = a4 + 0x1
  3920: 7b 18 40                 u64 [sp + 0x40] = a1
  3923: 97 88 03                 a1 = a1 << 0x3
  3926: 82 1b 80 00              a4 = u64 [sp + 0x80]
  3930: c8 b8 08                 a1 = a1 + a4
  3933: 82 87                    a0 = u64 [a1]
  3935: d9 97 02                 t0 = a0 <s a2
  3938: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  3941: 97 68 03                 a1 = s1 << 0x3
  3944: c8 b8 08                 a1 = a1 + a4
  3947: 97 ac 03                 a5 = a3 << 0x3
  3950: c8 cb 0b                 a4 = a4 + a5
  3953: 82 8c                    a5 = u64 [a1]
  3955: 82 b8                    a1 = u64 [a4]
  3957: e5 97 07                 a0 = mins(a0, a2)
  3960: d9 47 09                 a2 = a0 <s t2
  3963: 7b 12 38                 u64 [sp + 0x38] = t0
  3966: 82 17 28                 a0 = u64 [sp + 0x28]
  3969: c8 27 07                 a0 = a0 + t0
  3972: c8 97 07                 a0 = a0 + a2
  3975: 7b 10 68                 u64 [sp + 0x68] = ra
  3978: 7b 15 60                 u64 [sp + 0x60] = s0
  3981: 7b 19 30                 u64 [sp + 0x30] = a2
  3984: af 8c 13                 jump @340 if a5 >=s a1
      :                          @339
  3987: 95 77 01                 a0 = a0 + 0x1
  3990: 7b 17 18                 u64 [sp + 0x18] = a0
  3993: 7b 1c 20                 u64 [sp + 0x20] = a5
  3996: 7b 1a 28                 u64 [sp + 0x28] = a3
  3999: 64 6a                    a3 = s1
  4001: 28 0e                    jump @341
      :                          @340
  4003: 7b 18 20                 u64 [sp + 0x20] = a1
  4006: 7b 16 28                 u64 [sp + 0x28] = s1
  4009: 64 c8                    a1 = a5
  4011: 7b 17 18                 u64 [sp + 0x18] = a0
  4014: 01                       fallthrough
      :                          @341
  4015: 86 66 01                 s1 = s1 | 0x1
  4018: 97 6b 03                 a4 = s1 << 0x3
  4021: 82 15 80 00              s0 = u64 [sp + 0x80]
  4025: c8 5b 0b                 a4 = a4 + s0
  4028: 82 bb                    a4 = u64 [a4]
  4030: d9 8b 07                 a0 = a4 <s a1
  4033: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
  4036: 97 39 03                 a2 = t1 << 0x3
  4039: c8 59 09                 a2 = a2 + s0
  4042: 97 4c 03                 a5 = t2 << 0x3
  4045: c8 5c 0c                 a5 = a5 + s0
  4048: 82 92                    t0 = u64 [a2]
  4050: 82 c0                    ra = u64 [a5]
  4052: e5 8b 08                 a1 = mins(a4, a1)
  4055: 82 19 20                 a2 = u64 [sp + 0x20]
  4058: d9 98 09                 a2 = a1 <s a2
  4061: 7b 17 20                 u64 [sp + 0x20] = a0
  4064: 82 18 18                 a1 = u64 [sp + 0x18]
  4067: c8 87 07                 a0 = a0 + a1
  4070: c8 97 07                 a0 = a0 + a2
  4073: af 02 12                 jump @343 if t0 >=s ra
      :                          @342
  4076: 95 77 01                 a0 = a0 + 0x1
  4079: 7b 17 18                 u64 [sp + 0x18] = a0
  4082: 7b 12 10                 u64 [sp + 0x10] = t0
  4085: 64 47                    a0 = t2
  4087: 64 34                    t2 = t1
  4089: 28 0d                    jump @344
      :                          @343
  4091: 7b 10 10                 u64 [sp + 0x10] = ra
  4094: 7b 17 18                 u64 [sp + 0x18] = a0
  4097: 64 37                    a0 = t1
  4099: 64 20                    ra = t0
  4101: 01                       fallthrough
      :                          @344
  4102: 82 15 60                 s0 = u64 [sp + 0x60]
  4105: 82 1c 50                 a5 = u64 [sp + 0x50]
  4108: 82 18 40                 a1 = u64 [sp + 0x40]
  4111: 82 1b 38                 a4 = u64 [sp + 0x38]
  4114: da bc 08                 a1 = a5 if a4 == 0
  4117: 95 33 01                 t1 = t1 + 0x1
  4120: 97 3c 03                 a5 = t1 << 0x3
  4123: 82 12 80 00              t0 = u64 [sp + 0x80]
  4127: c8 2c 0c                 a5 = a5 + t0
  4130: 82 cc                    a5 = u64 [a5]
  4132: 82 1b 30                 a4 = u64 [sp + 0x30]
  4135: da b8 05                 s0 = a1 if a4 == 0
  4138: 82 18 28                 a1 = u64 [sp + 0x28]
  4141: 82 1b 20                 a4 = u64 [sp + 0x20]
  4144: da b8 06                 s1 = a1 if a4 == 0
  4147: da 96 0a                 a3 = s1 if a2 == 0
  4150: d9 0c 09                 a2 = a5 <s ra
  4153: db 93 07                 a0 = t1 if a2 != 0
  4156: e5 0c 0c                 a5 = mins(a5, ra)
  4159: 82 18 10                 a1 = u64 [sp + 0x10]
  4162: d9 8c 08                 a1 = a5 <s a1
  4165: db 84 07                 a0 = t2 if a1 != 0
  4168: c8 98 08                 a1 = a1 + a2
  4171: 82 19 18                 a2 = u64 [sp + 0x18]
  4174: c8 89 09                 a2 = a2 + a1
  4177: 64 73                    t1 = a0
  4179: 64 a6                    s1 = a3
  4181: 64 5b                    a4 = s0
  4183: 82 10 68                 ra = u64 [sp + 0x68]
  4186: 33 05 01 01              s0 = 0x101
  4190: 01                       fallthrough
      :                          @345
  4191: 97 67 03                 a0 = s1 << 0x3
  4194: c8 27 07                 a0 = a0 + t0
  4197: 97 b8 03                 a1 = a4 << 0x3
  4200: c8 82 0a                 a3 = t0 + a1
  4203: 82 78                    a1 = u64 [a0]
  4205: 82 a7                    a0 = u64 [a3]
  4207: af 78 0c                 jump @347 if a1 >=s a0
      :                          @346
  4210: 95 99 01                 a2 = a2 + 0x1
  4213: 64 8c                    a5 = a1
  4215: 64 ba                    a3 = a4
  4217: 28 0b                    jump @348
      :                          @347
  4219: 64 7c                    a5 = a0
  4221: 64 6a                    a3 = s1
  4223: 64 b6                    s1 = a4
  4225: 64 87                    a0 = a1
  4227: 01                       fallthrough
      :                          @348
  4228: 97 38 03                 a1 = t1 << 0x3
  4231: c8 28 08                 a1 = a1 + t0
  4234: 82 8b                    a4 = u64 [a1]
  4236: d9 7b 08                 a1 = a4 <s a0
  4239: e5 7b 07                 a0 = mins(a4, a0)
  4242: c8 89 09                 a2 = a2 + a1
  4245: af c7 09                 jump @351 if a0 >=s a5
      :                          @349
  4248: 55 19 0b 1a              jump @353 if a2 >=u 11
      :                          @350
  4252: 28 49                    jump @356
      :                          @351
  4254: da 8a 03                 t1 = a3 if a1 == 0
  4257: 64 36                    s1 = t1
  4259: 88 97 01                 a0 = a2 <u 0x1
  4262: 82 18 70                 a1 = u64 [sp + 0x70]
  4265: d2 87 07                 a0 = a0 & a1
  4268: 51 07 39                 jump @356 if a0 == 0
      :                          @352
  4271: 28 f0 00                 jump @374
      :                          @353
  4274: 98 07 01                 a0 = ra >> 0x1
  4277: 97 08 03                 a1 = ra << 0x3
  4280: c8 28 08                 a1 = a1 + t0
  4283: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  4286: 64 29                    a2 = t0
  4288: 01                       fallthrough
      :                          @354
  4289: 82 8a                    a3 = u64 [a1]
  4291: 82 9b                    a4 = u64 [a2]
  4293: 7b 9a                    u64 [a2] = a3
  4295: 7b 8b                    u64 [a1] = a4
  4297: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  4300: 95 99 08                 a2 = a2 + 0x8
  4303: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  4306: 52 07 ef                 jump @354 if a0 != 0
      :                          @355
  4309: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
  4312: c8 06 06                 s1 = s1 + ra
  4315: 82 18 70                 a1 = u64 [sp + 0x70]
  4318: 84 87 01                 a0 = a1 & 0x1
  4321: 52 07 be 00              jump @374 if a0 != 0
      :                          @356
  4325: 97 67 03                 a0 = s1 << 0x3
  4328: 82 18 58                 a1 = u64 [sp + 0x58]
  4331: 51 08 d1 00              jump @377 if a1 == 0
      :                          @357
  4335: ae 06 d3 03              jump @429 if s1 >=u ra
      :                          @358
  4339: c8 72 08                 a1 = t0 + a0
  4342: 82 19 58                 a2 = u64 [sp + 0x58]
  4345: 82 9a                    a3 = u64 [a2]
  4347: 82 89                    a2 = u64 [a1]
  4349: ad 9a c3 00              jump @378 if a3 <s a2
      :                          @359
  4353: 82 27                    a0 = u64 [t0]
  4355: 7b 29                    u64 [t0] = a2
  4357: 7b 87                    u64 [a1] = a0
  4359: 82 28                    a1 = u64 [t0]
  4361: 33 07                    a0 = 0
  4363: 95 29 08                 a2 = t0 + 0x8
  4366: 95 0a ff                 a3 = ra + 0xffffffffffffffff
  4369: 54 0a 22                 jump @364 if a3 <=u 0
      :                          @360
  4372: 97 7b 03                 a4 = a0 << 0x3
  4375: c8 9b 0b                 a4 = a4 + a2
  4378: 01                       fallthrough
      :                          @361
  4379: 82 bc                    a5 = u64 [a4]
  4381: ad c8 16                 jump @364 if a1 <s a5
      :                          @362
  4384: 95 77 01                 a0 = a0 + 0x1
  4387: 95 bb 08                 a4 = a4 + 0x8
  4390: ab 7a f5                 jump @361 if a3 != a0
      :                          @363
  4393: 64 a7                    a0 = a3
  4395: 97 ab 03                 a4 = a3 << 0x3
  4398: c8 9b 0b                 a4 = a4 + a2
  4401: 28 09                    jump @365
      :                          @364
  4403: 97 ab 03                 a4 = a3 << 0x3
  4406: c8 9b 0b                 a4 = a4 + a2
  4409: 01                       fallthrough
      :                          @365
  4410: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  4413: ae a7 26                 jump @369 if a0 >=u a3
      :                          @366
  4416: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
  4419: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
  4422: 64 cb                    a4 = a5
  4424: ad 68 f2                 jump @365 if a1 <s s1
      :                          @367
  4427: 97 7b 03                 a4 = a0 << 0x3
  4430: c8 9b 0b                 a4 = a4 + a2
  4433: 82 b5                    s0 = u64 [a4]
  4435: 7b b6                    u64 [a4] = s1
  4437: 7b c5                    u64 [a5] = s0
  4439: 33 05 01 01              s0 = 0x101
  4443: 95 77 01                 a0 = a0 + 0x1
  4446: ac a7 b6                 jump @360 if a0 <u a3
      :                          @368
  4449: 28 d2                    jump @364
      :                          @369
  4451: 95 77 01                 a0 = a0 + 0x1
  4454: 7b 28                    u64 [t0] = a1
  4456: ac 70 5c 03              jump @431 if ra <u a0
      :                          @370
  4460: c9 70 00                 ra = ra - a0
  4463: 97 77 03                 a0 = a0 << 0x3
  4466: c8 72 02                 t0 = t0 + a0
  4469: 55 10 15 83 fd           jump @331 if ra >=u 21
      :                          @371
  4474: 28 3b fd                 jump @326
      :                          @372
  4477: 64 27                    a0 = t0
  4479: 64 08                    a1 = ra
  4481: 64 05                    s0 = ra
  4483: 50 20 82 00 57 f5        ra = 130, jump @105
      :                          @373 [@dyn 65]
  4489: 82 12 80 00              t0 = u64 [sp + 0x80]
  4493: 64 50                    ra = s0
  4495: 33 05 01 01              s0 = 0x101
  4499: 82 17 48                 a0 = u64 [sp + 0x48]
  4502: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
  4505: 7b 17 48                 u64 [sp + 0x48] = a0
  4508: 28 71 fd                 jump @333
      :                          @374
  4511: 64 27                    a0 = t0
  4513: 64 08                    a1 = ra
  4515: 64 05                    s0 = ra
  4517: 50 20 84 00 9e f8        ra = 132, jump @190
      :                          @375 [@dyn 66]
  4523: 82 12 80 00              t0 = u64 [sp + 0x80]
  4527: 64 50                    ra = s0
  4529: 33 05 01 01              s0 = 0x101
  4533: 51 07 30 ff              jump @356 if a0 == 0
      :                          @376
  4537: 28 0f fd                 jump @328
      :                          @377
  4540: 82 18                    a1 = u64 [sp]
  4542: 28 08                    jump @379
      :                          @378
  4544: 7b 12 08                 u64 [sp + 0x8] = t0
  4547: 64 08                    a1 = ra
  4549: 01                       fallthrough
      :                          @379
  4550: ae 86 fd 02              jump @430 if s1 >=u a1
      :                          @380
  4554: 82 1b 08                 a4 = u64 [sp + 0x8]
  4557: c8 b7 07                 a0 = a0 + a4
  4560: 82 7a                    a3 = u64 [a0]
  4562: 82 b9                    a2 = u64 [a4]
  4564: 7b ba                    u64 [a4] = a3
  4566: 7b 79                    u64 [a0] = a2
  4568: 82 b0                    ra = u64 [a4]
  4570: 33 09                    a2 = 0
  4572: 95 b2 08                 t0 = a4 + 0x8
  4575: 7b 18                    u64 [sp] = a1
  4577: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  4580: 64 27                    a0 = t0
  4582: 01                       fallthrough
      :                          @381
  4583: 82 7a                    a3 = u64 [a0]
  4585: af 0a 0f                 jump @384 if a3 >=s ra
      :                          @382
  4588: 95 99 01                 a2 = a2 + 0x1
  4591: 95 77 08                 a0 = a0 + 0x8
  4594: ab 98 f5                 jump @381 if a1 != a2
      :                          @383
  4597: 64 89                    a2 = a1
  4599: 01                       fallthrough
      :                          @384
  4600: 82 17                    a0 = u64 [sp]
  4602: 97 77 03                 a0 = a0 << 0x3
  4605: 82 1a 08                 a3 = u64 [sp + 0x8]
  4608: c8 a7 07                 a0 = a0 + a3
  4611: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
  4614: 01                       fallthrough
      :                          @385
  4615: 64 8b                    a4 = a1
  4617: ae 89 0e                 jump @387 if a2 >=u a1
      :                          @386
  4620: 82 a7                    a0 = u64 [a3]
  4622: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  4625: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  4628: af 07 f3                 jump @385 if a0 >=s ra
      :                          @387
  4631: 64 b8                    a1 = a4
  4633: ac 9b ac 02              jump @432 if a4 <u a2
      :                          @388
  4637: 33 0b                    a4 = 0
  4639: 33 0c                    a5 = 0
  4641: 33 06                    s1 = 0
  4643: 33 03                    t1 = 0
  4645: 7b 19 40                 u64 [sp + 0x40] = a2
  4648: 97 97 03                 a0 = a2 << 0x3
  4651: c8 72 09                 a2 = t0 + a0
  4654: 7b 18 30                 u64 [sp + 0x30] = a1
  4657: 97 87 03                 a0 = a1 << 0x3
  4660: c8 72 08                 a1 = t0 + a0
  4663: 33 04 80 00              t2 = 0x80
  4667: 7b 19 38                 u64 [sp + 0x38] = a2
  4670: 64 9a                    a3 = a2
  4672: 33 02 80 00              t0 = 0x80
  4676: 7b 10 50                 u64 [sp + 0x50] = ra
  4679: 28 42                    jump @391
      :                          @389
  4681: 97 00 03                 ra = ra << 0x3
  4684: c8 80 00                 ra = ra + a1
  4687: 82 17 60                 a0 = u64 [sp + 0x60]
  4690: 7b 07                    u64 [ra] = a0
  4692: 95 bb 01                 a4 = a4 + 0x1
  4695: 95 66 01                 s1 = s1 + 0x1
  4698: 82 10 50                 ra = u64 [sp + 0x50]
  4701: 82 14 68                 t2 = u64 [sp + 0x68]
  4704: 01                       fallthrough
      :                          @390
  4705: d3 cb 07                 a0 = a4 ^ a5
  4708: 64 49                    a2 = t2
  4710: 94 79                    a2 = 0 if a0 != 0
  4712: 97 99 03                 a2 = a2 << 0x3
  4715: c8 9a 0a                 a3 = a3 + a2
  4718: d3 36 07                 a0 = s1 ^ t1
  4721: 82 12 70                 t0 = u64 [sp + 0x70]
  4724: 9a 29                    a2 = -t0
  4726: 94 79                    a2 = 0 if a0 != 0
  4728: 97 99 03                 a2 = a2 << 0x3
  4731: c8 98 08                 a1 = a1 + a2
  4734: 33 05 01 01              s0 = 0x101
  4738: 82 17 78                 a0 = u64 [sp + 0x78]
  4741: ac 57 3e 01              jump @413 if a0 <u s0
      :                          @391
  4745: c9 a8 07                 a0 = a1 - a3
  4748: 98 79 03                 a2 = a0 >> 0x3
  4751: 7b 1a 80 00              u64 [sp + 0x80] = a3
  4755: 7b 19 78                 u64 [sp + 0x78] = a2
  4758: ac 59 38                 jump @398 if a2 <u s0
      :                          @392
  4761: aa cb 71                 jump @402 if a4 == a5
      :                          @393
  4764: ab 36 b4 00              jump @409 if s1 != t1
      :                          @394
  4768: 51 02 9a 00              jump @407 if t0 == 0
      :                          @395
  4772: 33 07                    a0 = 0
  4774: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  4777: 95 16 08 01              s1 = sp + 0x108
  4781: 95 13 08 01              t1 = sp + 0x108
  4785: 01                       fallthrough
      :                          @396
  4786: 82 a9                    a2 = u64 [a3]
  4788: 78 37                    u8 [t1] = a0
  4790: 95 75 01                 s0 = a0 + 0x1
  4793: d9 09 07                 a0 = a2 <s ra
  4796: c8 73 03                 t1 = t1 + a0
  4799: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  4802: 64 57                    a0 = s0
  4804: ab 52 ee                 jump @396 if t0 != s0
      :                          @397
  4807: 82 1a 80 00              a3 = u64 [sp + 0x80]
  4811: 28 85 00                 jump @409
      :                          @398
  4814: 64 25                    s0 = t0
  4816: 64 49                    a2 = t2
  4818: d8 cb 04                 t2 = a4 <u a5
  4821: d8 36 0a                 a3 = s1 <u t1
  4824: d4 a4 02                 t0 = t2 | a3
  4827: 51 02 1f                 jump @401 if t0 == 0
      :                          @399
  4830: 82 1a 78                 a3 = u64 [sp + 0x78]
  4833: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
  4836: db 47 05                 s0 = a0 if t2 != 0
  4839: da 2a 07                 a0 = a3 if t0 == 0
  4842: 64 52                    t0 = s0
  4844: da 47 09                 a2 = a0 if t2 == 0
  4847: 64 94                    t2 = a2
  4849: 82 1a 80 00              a3 = u64 [sp + 0x80]
  4853: ab cb a7                 jump @393 if a4 != a5
      :                          @400
  4856: 28 12                    jump @402
      :                          @401
  4858: 98 74 04                 t2 = a0 >> 0x4
  4861: 82 17 78                 a0 = u64 [sp + 0x78]
  4864: c9 47 02                 t0 = a0 - t2
  4867: 82 1a 80 00              a3 = u64 [sp + 0x80]
  4871: ab cb 95                 jump @393 if a4 != a5
      :                          @402
  4874: 51 04 3a                 jump @408 if t2 == 0
      :                          @403
  4877: 33 07                    a0 = 0
  4879: 95 1b 88 00              a4 = sp + 0x88
  4883: 95 1c 88 00              a5 = sp + 0x88
  4887: 01                       fallthrough
      :                          @404
  4888: 82 a5                    s0 = u64 [a3]
  4890: 78 c7                    u8 [a5] = a0
  4892: 95 79 01                 a2 = a0 + 0x1
  4895: d9 05 07                 a0 = s0 <s ra
  4898: 85 77 01                 a0 = a0 ^ 0x1
  4901: c8 7c 0c                 a5 = a5 + a0
  4904: 95 aa 08                 a3 = a3 + 0x8
  4907: 64 97                    a0 = a2
  4909: ab 94 eb                 jump @404 if t2 != a2
      :                          @405
  4912: 82 1a 80 00              a3 = u64 [sp + 0x80]
  4916: ab 36 1c                 jump @409 if s1 != t1
      :                          @406
  4919: 28 69 ff                 jump @394
      :                          @407
  4922: 95 16 08 01              s1 = sp + 0x108
  4926: 95 13 08 01              t1 = sp + 0x108
  4930: 28 0e                    jump @409
      :                          @408
  4932: 95 1b 88 00              a4 = sp + 0x88
  4936: 95 1c 88 00              a5 = sp + 0x88
  4940: aa 36 54 ff              jump @394 if s1 == t1
      :                          @409
  4944: 7b 12 70                 u64 [sp + 0x70] = t0
  4947: c9 bc 07                 a0 = a5 - a4
  4950: c9 63 09                 a2 = t1 - s1
  4953: e6 97 02                 t0 = minu(a0, a2)
  4956: 51 02 05 ff              jump @390 if t0 == 0
      :                          @410
  4960: 7b 14 68                 u64 [sp + 0x68] = t2
  4963: 7c b7                    a0 = u8 [a4]
  4965: 7c 64                    t2 = u8 [s1]
  4967: 97 77 03                 a0 = a0 << 0x3
  4970: c8 a7 07                 a0 = a0 + a3
  4973: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  4976: 97 09 03                 a2 = ra << 0x3
  4979: c8 89 09                 a2 = a2 + a1
  4982: 82 99                    a2 = u64 [a2]
  4984: 82 75                    s0 = u64 [a0]
  4986: 7b 15 60                 u64 [sp + 0x60] = s0
  4989: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  4992: 7b 79                    u64 [a0] = a2
  4994: 51 02 c7 fe              jump @389 if t0 == 0
      :                          @411
  4998: 7c b7 01                 a0 = u8 [a4 + 0x1]
  5001: 97 77 03                 a0 = a0 << 0x3
  5004: c8 a7 07                 a0 = a0 + a3
  5007: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
  5010: 82 7a                    a3 = u64 [a0]
  5012: 97 99 03                 a2 = a2 << 0x3
  5015: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
  5019: c8 89 09                 a2 = a2 + a1
  5022: 7b 9a                    u64 [a2] = a3
  5024: 82 1a 80 00              a3 = u64 [sp + 0x80]
  5028: 7c 64 01                 t2 = u8 [s1 + 0x1]
  5031: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  5034: 97 09 03                 a2 = ra << 0x3
  5037: c8 89 09                 a2 = a2 + a1
  5040: 82 99                    a2 = u64 [a2]
  5042: 95 bb 01                 a4 = a4 + 0x1
  5045: 95 66 01                 s1 = s1 + 0x1
  5048: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  5051: 7b 79                    u64 [a0] = a2
  5053: 52 02 c9                 jump @411 if t0 != 0
      :                          @412
  5056: 28 89 fe                 jump @389
      :                          @413
  5059: ae cb 2b                 jump @417 if a4 >=u a5
      :                          @414
  5062: 82 12 08                 t0 = u64 [sp + 0x8]
  5065: 64 a3                    t1 = a3
  5067: 01                       fallthrough
      :                          @415
  5068: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
  5071: 97 77 03                 a0 = a0 << 0x3
  5074: c8 37 07                 a0 = a0 + t1
  5077: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
  5080: 82 79                    a2 = u64 [a0]
  5082: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
  5085: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  5088: 7b 75                    u64 [a0] = s0
  5090: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
  5093: 64 a8                    a1 = a3
  5095: 64 6c                    a5 = s1
  5097: ac 6b e3                 jump @415 if a4 <u s1
      :                          @416
  5100: 28 27                    jump @419
      :                          @417
  5102: 82 12 08                 t0 = u64 [sp + 0x8]
  5105: ae 36 22                 jump @419 if s1 >=u t1
      :                          @418
  5108: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
  5111: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  5114: 97 77 03                 a0 = a0 << 0x3
  5117: c8 87 07                 a0 = a0 + a1
  5120: 82 79                    a2 = u64 [a0]
  5122: 82 ab                    a4 = u64 [a3]
  5124: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
  5127: 7b a9                    u64 [a3] = a2
  5129: 7b 7b                    u64 [a0] = a4
  5131: 95 aa 08                 a3 = a3 + 0x8
  5134: 64 c3                    t1 = a5
  5136: ac c6 e4                 jump @418 if s1 <u a5
      :                          @419
  5139: 82 17 38                 a0 = u64 [sp + 0x38]
  5142: c9 7a 07                 a0 = a3 - a0
  5145: 98 77 03                 a0 = a0 >> 0x3
  5148: 82 16 40                 s1 = u64 [sp + 0x40]
  5151: c8 76 06                 s1 = s1 + a0
  5154: 7b 20                    u64 [t0] = ra
  5156: 82 18                    a1 = u64 [sp]
  5158: ae 86 9d 00              jump @430 if s1 >=u a1
      :                          @420
  5162: 97 67 03                 a0 = s1 << 0x3
  5165: c8 72 09                 a2 = t0 + a0
  5168: 82 97                    a0 = u64 [a2]
  5170: 7b 27                    u64 [t0] = a0
  5172: 7b 90                    u64 [a2] = ra
  5174: 64 25                    s0 = t0
  5176: c9 68 08                 a1 = a1 - s1
  5179: 7b 18 80 00              u64 [sp + 0x80] = a1
  5183: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
  5186: 95 97 08                 a0 = a2 + 0x8
  5189: ae b6 28                 jump @423 if s1 >=u a4
      :                          @421
  5192: 7b 17 78                 u64 [sp + 0x78] = a0
  5195: 64 57                    a0 = s0
  5197: 64 68                    a1 = s1
  5199: 7b 19 70                 u64 [sp + 0x70] = a2
  5202: 82 19 58                 a2 = u64 [sp + 0x58]
  5205: 82 1a 48                 a3 = u64 [sp + 0x48]
  5208: 64 b5                    s0 = a4
  5210: 50 20 86 00 3a fa        ra = 134, jump @324
      :                          @422 [@dyn 67]
  5216: 64 50                    ra = s0
  5218: 82 17 70                 a0 = u64 [sp + 0x70]
  5221: 7b 17 58                 u64 [sp + 0x58] = a0
  5224: 82 15 78                 s0 = u64 [sp + 0x78]
  5227: 28 10                    jump @425
      :                          @423
  5229: 64 b8                    a1 = a4
  5231: 82 1a 48                 a3 = u64 [sp + 0x48]
  5234: 50 20 88 00 22 fa        ra = 136, jump @324
      :                          @424 [@dyn 68]
  5240: 64 60                    ra = s1
  5242: 01                       fallthrough
      :                          @425
  5243: 82 17 40                 a0 = u64 [sp + 0x40]
  5246: 82 18 30                 a1 = u64 [sp + 0x30]
  5249: d8 87 07                 a0 = a0 <u a1
  5252: 85 77 01                 a0 = a0 ^ 0x1
  5255: 82 18 80 00              a1 = u64 [sp + 0x80]
  5259: e6 86 08                 a1 = minu(s1, a1)
  5262: 82 19                    a2 = u64 [sp]
  5264: 98 99 03                 a2 = a2 >> 0x3
  5267: d8 98 08                 a1 = a1 <u a2
  5270: 85 88 01                 a1 = a1 ^ 0x1
  5273: 7b 18 78                 u64 [sp + 0x78] = a1
  5276: 7b 10                    u64 [sp] = ra
  5278: 7b 15 08                 u64 [sp + 0x8] = s0
  5281: 64 52                    t0 = s0
  5283: 33 08 15                 a1 = 0x15
  5286: 33 05 01 01              s0 = 0x101
  5290: ae 80 41 fa              jump @330 if ra >=u a1
      :                          @426
  5294: 28 07 fa                 jump @326
      :                          @427
  5297: 64 27                    a0 = t0
  5299: 64 08                    a1 = ra
  5301: 33 00 8a 00              ra = 0x8a
  5305: 98 82 01                 t0 = a1 >> 0x1
  5308: 28 3f 06                 jump @543
      :                          @428 [@dyn 69]
  5311: 28 09 fa                 jump @328
      :                          @429
  5314: 00                       trap
      :                          @430
  5315: 00                       trap
      :                          @431
  5316: 00                       trap
      :                          @432
  5317: 00                       trap
      :                          @433
  5318: 95 11 60 fe              sp = sp + 0xfffffffffffffe60
  5322: 7b 10 98 01              u64 [sp + 0x198] = ra
  5326: 7b 15 90 01              u64 [sp + 0x190] = s0
  5330: 7b 16 88 01              u64 [sp + 0x188] = s1
  5334: 33 0b 15                 a4 = 0x15
  5337: 7b 1a 48                 u64 [sp + 0x48] = a3
  5340: 7b 19 58                 u64 [sp + 0x58] = a2
  5343: 64 80                    ra = a1
  5345: ae b8 2b                 jump @438 if a1 >=u a4
      :                          @434
  5348: 64 72                    t0 = a0
  5350: 01                       fallthrough
      :                          @435
  5351: 33 07 01                 a0 = 0x1
  5354: ae 07 10                 jump @437 if a0 >=u ra
      :                          @436
  5357: 33 09 01                 a2 = 0x1
  5360: 64 27                    a0 = t0
  5362: 64 08                    a1 = ra
  5364: 50 20 8c 00 40 f8        ra = 140, jump @278
      :                          @437 [@dyn 70]
  5370: 82 10 98 01              ra = u64 [sp + 0x198]
  5374: 82 15 90 01              s0 = u64 [sp + 0x190]
  5378: 82 16 88 01              s1 = u64 [sp + 0x188]
  5382: 95 11 a0 01              sp = sp + 0x1a0
  5386: 32 00                    ret
      :                          @438
  5388: 7b 17 08                 u64 [sp + 0x8] = a0
  5391: 49 11 78 01              u64 [sp + 120] = 0x1
  5395: 33 05 01 01              s0 = 0x101
  5399: 33 07 01                 a0 = 0x1
  5402: 7b 10                    u64 [sp] = ra
  5404: 01                       fallthrough
      :                          @439
  5405: 82 18 78                 a1 = u64 [sp + 0x78]
  5408: d2 87 07                 a0 = a0 & a1
  5411: 7b 17 70                 u64 [sp + 0x70] = a0
  5414: 82 12 08                 t0 = u64 [sp + 0x8]
  5417: 01                       fallthrough
      :                          @440
  5418: 81 17 48                 a0 = i32 [sp + 0x48]
  5421: 51 07 b6 05              jump @536 if a0 == 0
      :                          @441
  5425: 82 17 78                 a0 = u64 [sp + 0x78]
  5428: 84 77 01                 a0 = a0 & 0x1
  5431: 7b 12 80 00              u64 [sp + 0x80] = t0
  5435: 51 07 74 02              jump @481 if a0 == 0
      :                          @442
  5439: 98 0b 02                 a4 = ra >> 0x2
  5442: 97 b6 01                 s1 = a4 << 0x1
  5445: c8 b6 03                 t1 = s1 + a4
  5448: 54 10 31 29              jump @445 if ra <=u 49
      :                          @443
  5452: 95 b5 ff                 s0 = a4 + 0xffffffffffffffff
  5455: 97 b7 03                 a0 = a4 << 0x3
  5458: c8 27 07                 a0 = a0 + t0
  5461: 97 58 03                 a1 = s0 << 0x3
  5464: c8 28 08                 a1 = a1 + t0
  5467: 82 79                    a2 = u64 [a0]
  5469: 82 88                    a1 = u64 [a1]
  5471: ae 98 17                 jump @446 if a1 >=u a2
      :                          @444
  5474: 49 11 28 01              u64 [sp + 40] = 0x1
  5478: 64 94                    t2 = a2
  5480: 7b 15 50                 u64 [sp + 0x50] = s0
  5483: 64 b5                    s0 = a4
  5485: 64 89                    a2 = a1
  5487: 28 10                    jump @447
      :                          @445
  5489: 33 09                    a2 = 0
  5491: 28 1e 01                 jump @454
      :                          @446
  5494: 49 11 28                 u64 [sp + 40] = 0
  5497: 64 84                    t2 = a1
  5499: 7b 1b 50                 u64 [sp + 0x50] = a4
  5502: 01                       fallthrough
      :                          @447
  5503: 95 b8 01                 a1 = a4 + 0x1
  5506: 7b 18 40                 u64 [sp + 0x40] = a1
  5509: 97 88 03                 a1 = a1 << 0x3
  5512: 82 1b 80 00              a4 = u64 [sp + 0x80]
  5516: c8 b8 08                 a1 = a1 + a4
  5519: 82 87                    a0 = u64 [a1]
  5521: d8 79 02                 t0 = a2 <u a0
  5524: 95 6a ff                 a3 = s1 + 0xffffffffffffffff
  5527: 97 68 03                 a1 = s1 << 0x3
  5530: c8 b8 08                 a1 = a1 + a4
  5533: 97 ac 03                 a5 = a3 << 0x3
  5536: c8 cb 0b                 a4 = a4 + a5
  5539: 82 8c                    a5 = u64 [a1]
  5541: 82 b8                    a1 = u64 [a4]
  5543: e4 79 07                 a0 = maxu(a2, a0)
  5546: d8 74 09                 a2 = t2 <u a0
  5549: 7b 12 38                 u64 [sp + 0x38] = t0
  5552: 82 17 28                 a0 = u64 [sp + 0x28]
  5555: c8 27 07                 a0 = a0 + t0
  5558: c8 97 07                 a0 = a0 + a2
  5561: 7b 10 68                 u64 [sp + 0x68] = ra
  5564: 7b 15 60                 u64 [sp + 0x60] = s0
  5567: 7b 19 30                 u64 [sp + 0x30] = a2
  5570: ae c8 13                 jump @449 if a1 >=u a5
      :                          @448
  5573: 95 77 01                 a0 = a0 + 0x1
  5576: 7b 17 18                 u64 [sp + 0x18] = a0
  5579: 7b 1c 20                 u64 [sp + 0x20] = a5
  5582: 7b 1a 28                 u64 [sp + 0x28] = a3
  5585: 64 6a                    a3 = s1
  5587: 28 0e                    jump @450
      :                          @449
  5589: 7b 18 20                 u64 [sp + 0x20] = a1
  5592: 7b 16 28                 u64 [sp + 0x28] = s1
  5595: 64 c8                    a1 = a5
  5597: 7b 17 18                 u64 [sp + 0x18] = a0
  5600: 01                       fallthrough
      :                          @450
  5601: 86 66 01                 s1 = s1 | 0x1
  5604: 97 6b 03                 a4 = s1 << 0x3
  5607: 82 15 80 00              s0 = u64 [sp + 0x80]
  5611: c8 5b 0b                 a4 = a4 + s0
  5614: 82 bb                    a4 = u64 [a4]
  5616: d8 b8 07                 a0 = a1 <u a4
  5619: 95 34 ff                 t2 = t1 + 0xffffffffffffffff
  5622: 97 39 03                 a2 = t1 << 0x3
  5625: c8 59 09                 a2 = a2 + s0
  5628: 97 4c 03                 a5 = t2 << 0x3
  5631: c8 5c 0c                 a5 = a5 + s0
  5634: 82 92                    t0 = u64 [a2]
  5636: 82 c0                    ra = u64 [a5]
  5638: e4 b8 08                 a1 = maxu(a1, a4)
  5641: 82 19 20                 a2 = u64 [sp + 0x20]
  5644: d8 89 09                 a2 = a2 <u a1
  5647: 7b 17 20                 u64 [sp + 0x20] = a0
  5650: 82 18 18                 a1 = u64 [sp + 0x18]
  5653: c8 87 07                 a0 = a0 + a1
  5656: c8 97 07                 a0 = a0 + a2
  5659: ae 20 12                 jump @452 if ra >=u t0
      :                          @451
  5662: 95 77 01                 a0 = a0 + 0x1
  5665: 7b 17 18                 u64 [sp + 0x18] = a0
  5668: 7b 12 10                 u64 [sp + 0x10] = t0
  5671: 64 47                    a0 = t2
  5673: 64 34                    t2 = t1
  5675: 28 0d                    jump @453
      :                          @452
  5677: 7b 10 10                 u64 [sp + 0x10] = ra
  5680: 7b 17 18                 u64 [sp + 0x18] = a0
  5683: 64 37                    a0 = t1
  5685: 64 20                    ra = t0
  5687: 01                       fallthrough
      :                          @453
  5688: 82 15 60                 s0 = u64 [sp + 0x60]
  5691: 82 1c 50                 a5 = u64 [sp + 0x50]
  5694: 82 18 40                 a1 = u64 [sp + 0x40]
  5697: 82 1b 38                 a4 = u64 [sp + 0x38]
  5700: da bc 08                 a1 = a5 if a4 == 0
  5703: 95 33 01                 t1 = t1 + 0x1
  5706: 97 3c 03                 a5 = t1 << 0x3
  5709: 82 12 80 00              t0 = u64 [sp + 0x80]
  5713: c8 2c 0c                 a5 = a5 + t0
  5716: 82 cc                    a5 = u64 [a5]
  5718: 82 1b 30                 a4 = u64 [sp + 0x30]
  5721: da b8 05                 s0 = a1 if a4 == 0
  5724: 82 18 28                 a1 = u64 [sp + 0x28]
  5727: 82 1b 20                 a4 = u64 [sp + 0x20]
  5730: da b8 06                 s1 = a1 if a4 == 0
  5733: da 96 0a                 a3 = s1 if a2 == 0
  5736: d8 c0 09                 a2 = ra <u a5
  5739: db 93 07                 a0 = t1 if a2 != 0
  5742: e4 c0 0c                 a5 = maxu(ra, a5)
  5745: 82 18 10                 a1 = u64 [sp + 0x10]
  5748: d8 c8 08                 a1 = a1 <u a5
  5751: db 84 07                 a0 = t2 if a1 != 0
  5754: c8 98 08                 a1 = a1 + a2
  5757: 82 19 18                 a2 = u64 [sp + 0x18]
  5760: c8 89 09                 a2 = a2 + a1
  5763: 64 73                    t1 = a0
  5765: 64 a6                    s1 = a3
  5767: 64 5b                    a4 = s0
  5769: 82 10 68                 ra = u64 [sp + 0x68]
  5772: 33 05 01 01              s0 = 0x101
  5776: 01                       fallthrough
      :                          @454
  5777: 97 67 03                 a0 = s1 << 0x3
  5780: c8 27 07                 a0 = a0 + t0
  5783: 97 b8 03                 a1 = a4 << 0x3
  5786: c8 82 0a                 a3 = t0 + a1
  5789: 82 78                    a1 = u64 [a0]
  5791: 82 a7                    a0 = u64 [a3]
  5793: ae 87 0c                 jump @456 if a0 >=u a1
      :                          @455
  5796: 95 99 01                 a2 = a2 + 0x1
  5799: 64 8c                    a5 = a1
  5801: 64 ba                    a3 = a4
  5803: 28 0b                    jump @457
      :                          @456
  5805: 64 7c                    a5 = a0
  5807: 64 6a                    a3 = s1
  5809: 64 b6                    s1 = a4
  5811: 64 87                    a0 = a1
  5813: 01                       fallthrough
      :                          @457
  5814: 97 38 03                 a1 = t1 << 0x3
  5817: c8 28 08                 a1 = a1 + t0
  5820: 82 8b                    a4 = u64 [a1]
  5822: d8 b7 08                 a1 = a0 <u a4
  5825: e4 b7 07                 a0 = maxu(a0, a4)
  5828: c8 89 09                 a2 = a2 + a1
  5831: ae 7c 09                 jump @460 if a5 >=u a0
      :                          @458
  5834: 55 19 0b 1a              jump @462 if a2 >=u 11
      :                          @459
  5838: 28 49                    jump @465
      :                          @460
  5840: da 8a 03                 t1 = a3 if a1 == 0
  5843: 64 36                    s1 = t1
  5845: 88 97 01                 a0 = a2 <u 0x1
  5848: 82 18 70                 a1 = u64 [sp + 0x70]
  5851: d2 87 07                 a0 = a0 & a1
  5854: 51 07 39                 jump @465 if a0 == 0
      :                          @461
  5857: 28 f0 00                 jump @483
      :                          @462
  5860: 98 07 01                 a0 = ra >> 0x1
  5863: 97 08 03                 a1 = ra << 0x3
  5866: c8 28 08                 a1 = a1 + t0
  5869: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  5872: 64 29                    a2 = t0
  5874: 01                       fallthrough
      :                          @463
  5875: 82 8a                    a3 = u64 [a1]
  5877: 82 9b                    a4 = u64 [a2]
  5879: 7b 9a                    u64 [a2] = a3
  5881: 7b 8b                    u64 [a1] = a4
  5883: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  5886: 95 99 08                 a2 = a2 + 0x8
  5889: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
  5892: 52 07 ef                 jump @463 if a0 != 0
      :                          @464
  5895: 85 66 ff                 s1 = s1 ^ 0xffffffffffffffff
  5898: c8 06 06                 s1 = s1 + ra
  5901: 82 18 70                 a1 = u64 [sp + 0x70]
  5904: 84 87 01                 a0 = a1 & 0x1
  5907: 52 07 be 00              jump @483 if a0 != 0
      :                          @465
  5911: 97 67 03                 a0 = s1 << 0x3
  5914: 82 18 58                 a1 = u64 [sp + 0x58]
  5917: 51 08 d1 00              jump @486 if a1 == 0
      :                          @466
  5921: ae 06 d3 03              jump @538 if s1 >=u ra
      :                          @467
  5925: c8 72 08                 a1 = t0 + a0
  5928: 82 19 58                 a2 = u64 [sp + 0x58]
  5931: 82 9a                    a3 = u64 [a2]
  5933: 82 89                    a2 = u64 [a1]
  5935: ac a9 c3 00              jump @487 if a2 <u a3
      :                          @468
  5939: 82 27                    a0 = u64 [t0]
  5941: 7b 29                    u64 [t0] = a2
  5943: 7b 87                    u64 [a1] = a0
  5945: 82 28                    a1 = u64 [t0]
  5947: 33 07                    a0 = 0
  5949: 95 29 08                 a2 = t0 + 0x8
  5952: 95 0a ff                 a3 = ra + 0xffffffffffffffff
  5955: 54 0a 22                 jump @473 if a3 <=u 0
      :                          @469
  5958: 97 7b 03                 a4 = a0 << 0x3
  5961: c8 9b 0b                 a4 = a4 + a2
  5964: 01                       fallthrough
      :                          @470
  5965: 82 bc                    a5 = u64 [a4]
  5967: ac 8c 16                 jump @473 if a5 <u a1
      :                          @471
  5970: 95 77 01                 a0 = a0 + 0x1
  5973: 95 bb 08                 a4 = a4 + 0x8
  5976: ab 7a f5                 jump @470 if a3 != a0
      :                          @472
  5979: 64 a7                    a0 = a3
  5981: 97 ab 03                 a4 = a3 << 0x3
  5984: c8 9b 0b                 a4 = a4 + a2
  5987: 28 09                    jump @474
      :                          @473
  5989: 97 ab 03                 a4 = a3 << 0x3
  5992: c8 9b 0b                 a4 = a4 + a2
  5995: 01                       fallthrough
      :                          @474
  5996: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
  5999: ae a7 26                 jump @478 if a0 >=u a3
      :                          @475
  6002: 82 b6 f8                 s1 = u64 [a4 + 0xfffffffffffffff8]
  6005: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
  6008: 64 cb                    a4 = a5
  6010: ac 86 f2                 jump @474 if s1 <u a1
      :                          @476
  6013: 97 7b 03                 a4 = a0 << 0x3
  6016: c8 9b 0b                 a4 = a4 + a2
  6019: 82 b5                    s0 = u64 [a4]
  6021: 7b b6                    u64 [a4] = s1
  6023: 7b c5                    u64 [a5] = s0
  6025: 33 05 01 01              s0 = 0x101
  6029: 95 77 01                 a0 = a0 + 0x1
  6032: ac a7 b6                 jump @469 if a0 <u a3
      :                          @477
  6035: 28 d2                    jump @473
      :                          @478
  6037: 95 77 01                 a0 = a0 + 0x1
  6040: 7b 28                    u64 [t0] = a1
  6042: ac 70 5c 03              jump @540 if ra <u a0
      :                          @479
  6046: c9 70 00                 ra = ra - a0
  6049: 97 77 03                 a0 = a0 << 0x3
  6052: c8 72 02                 t0 = t0 + a0
  6055: 55 10 15 83 fd           jump @440 if ra >=u 21
      :                          @480
  6060: 28 3b fd                 jump @435
      :                          @481
  6063: 64 27                    a0 = t0
  6065: 64 08                    a1 = ra
  6067: 64 05                    s0 = ra
  6069: 50 20 8e 00 25 ef        ra = 142, jump @105
      :                          @482 [@dyn 71]
  6075: 82 12 80 00              t0 = u64 [sp + 0x80]
  6079: 64 50                    ra = s0
  6081: 33 05 01 01              s0 = 0x101
  6085: 82 17 48                 a0 = u64 [sp + 0x48]
  6088: 83 77 ff                 i32 a0 = a0 + 0xffffffffffffffff
  6091: 7b 17 48                 u64 [sp + 0x48] = a0
  6094: 28 71 fd                 jump @442
      :                          @483
  6097: 64 27                    a0 = t0
  6099: 64 08                    a1 = ra
  6101: 64 05                    s0 = ra
  6103: 50 20 90 00 d3 ef        ra = 144, jump @115
      :                          @484 [@dyn 72]
  6109: 82 12 80 00              t0 = u64 [sp + 0x80]
  6113: 64 50                    ra = s0
  6115: 33 05 01 01              s0 = 0x101
  6119: 51 07 30 ff              jump @465 if a0 == 0
      :                          @485
  6123: 28 0f fd                 jump @437
      :                          @486
  6126: 82 18                    a1 = u64 [sp]
  6128: 28 08                    jump @488
      :                          @487
  6130: 7b 12 08                 u64 [sp + 0x8] = t0
  6133: 64 08                    a1 = ra
  6135: 01                       fallthrough
      :                          @488
  6136: ae 86 fd 02              jump @539 if s1 >=u a1
      :                          @489
  6140: 82 1b 08                 a4 = u64 [sp + 0x8]
  6143: c8 b7 07                 a0 = a0 + a4
  6146: 82 7a                    a3 = u64 [a0]
  6148: 82 b9                    a2 = u64 [a4]
  6150: 7b ba                    u64 [a4] = a3
  6152: 7b 79                    u64 [a0] = a2
  6154: 82 b0                    ra = u64 [a4]
  6156: 33 09                    a2 = 0
  6158: 95 b2 08                 t0 = a4 + 0x8
  6161: 7b 18                    u64 [sp] = a1
  6163: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
  6166: 64 27                    a0 = t0
  6168: 01                       fallthrough
      :                          @490
  6169: 82 7a                    a3 = u64 [a0]
  6171: ae a0 0f                 jump @493 if ra >=u a3
      :                          @491
  6174: 95 99 01                 a2 = a2 + 0x1
  6177: 95 77 08                 a0 = a0 + 0x8
  6180: ab 98 f5                 jump @490 if a1 != a2
      :                          @492
  6183: 64 89                    a2 = a1
  6185: 01                       fallthrough
      :                          @493
  6186: 82 17                    a0 = u64 [sp]
  6188: 97 77 03                 a0 = a0 << 0x3
  6191: 82 1a 08                 a3 = u64 [sp + 0x8]
  6194: c8 a7 07                 a0 = a0 + a3
  6197: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
  6200: 01                       fallthrough
      :                          @494
  6201: 64 8b                    a4 = a1
  6203: ae 89 0e                 jump @496 if a2 >=u a1
      :                          @495
  6206: 82 a7                    a0 = u64 [a3]
  6208: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
  6211: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  6214: ae 70 f3                 jump @494 if ra >=u a0
      :                          @496
  6217: 64 b8                    a1 = a4
  6219: ac 9b ac 02              jump @541 if a4 <u a2
      :                          @497
  6223: 33 0b                    a4 = 0
  6225: 33 0c                    a5 = 0
  6227: 33 06                    s1 = 0
  6229: 33 03                    t1 = 0
  6231: 7b 19 40                 u64 [sp + 0x40] = a2
  6234: 97 97 03                 a0 = a2 << 0x3
  6237: c8 72 09                 a2 = t0 + a0
  6240: 7b 18 30                 u64 [sp + 0x30] = a1
  6243: 97 87 03                 a0 = a1 << 0x3
  6246: c8 72 08                 a1 = t0 + a0
  6249: 33 04 80 00              t2 = 0x80
  6253: 7b 19 38                 u64 [sp + 0x38] = a2
  6256: 64 9a                    a3 = a2
  6258: 33 02 80 00              t0 = 0x80
  6262: 7b 10 50                 u64 [sp + 0x50] = ra
  6265: 28 42                    jump @500
      :                          @498
  6267: 97 00 03                 ra = ra << 0x3
  6270: c8 80 00                 ra = ra + a1
  6273: 82 17 60                 a0 = u64 [sp + 0x60]
  6276: 7b 07                    u64 [ra] = a0
  6278: 95 bb 01                 a4 = a4 + 0x1
  6281: 95 66 01                 s1 = s1 + 0x1
  6284: 82 10 50                 ra = u64 [sp + 0x50]
  6287: 82 14 68                 t2 = u64 [sp + 0x68]
  6290: 01                       fallthrough
      :                          @499
  6291: d3 cb 07                 a0 = a4 ^ a5
  6294: 64 49                    a2 = t2
  6296: 94 79                    a2 = 0 if a0 != 0
  6298: 97 99 03                 a2 = a2 << 0x3
  6301: c8 9a 0a                 a3 = a3 + a2
  6304: d3 36 07                 a0 = s1 ^ t1
  6307: 82 12 70                 t0 = u64 [sp + 0x70]
  6310: 9a 29                    a2 = -t0
  6312: 94 79                    a2 = 0 if a0 != 0
  6314: 97 99 03                 a2 = a2 << 0x3
  6317: c8 98 08                 a1 = a1 + a2
  6320: 33 05 01 01              s0 = 0x101
  6324: 82 17 78                 a0 = u64 [sp + 0x78]
  6327: ac 57 3e 01              jump @522 if a0 <u s0
      :                          @500
  6331: c9 a8 07                 a0 = a1 - a3
  6334: 98 79 03                 a2 = a0 >> 0x3
  6337: 7b 1a 80 00              u64 [sp + 0x80] = a3
  6341: 7b 19 78                 u64 [sp + 0x78] = a2
  6344: ac 59 38                 jump @507 if a2 <u s0
      :                          @501
  6347: aa cb 71                 jump @511 if a4 == a5
      :                          @502
  6350: ab 36 b4 00              jump @518 if s1 != t1
      :                          @503
  6354: 51 02 9a 00              jump @516 if t0 == 0
      :                          @504
  6358: 33 07                    a0 = 0
  6360: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  6363: 95 16 08 01              s1 = sp + 0x108
  6367: 95 13 08 01              t1 = sp + 0x108
  6371: 01                       fallthrough
      :                          @505
  6372: 82 a9                    a2 = u64 [a3]
  6374: 78 37                    u8 [t1] = a0
  6376: 95 75 01                 s0 = a0 + 0x1
  6379: d8 90 07                 a0 = ra <u a2
  6382: c8 73 03                 t1 = t1 + a0
  6385: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
  6388: 64 57                    a0 = s0
  6390: ab 52 ee                 jump @505 if t0 != s0
      :                          @506
  6393: 82 1a 80 00              a3 = u64 [sp + 0x80]
  6397: 28 85 00                 jump @518
      :                          @507
  6400: 64 25                    s0 = t0
  6402: 64 49                    a2 = t2
  6404: d8 cb 04                 t2 = a4 <u a5
  6407: d8 36 0a                 a3 = s1 <u t1
  6410: d4 a4 02                 t0 = t2 | a3
  6413: 51 02 1f                 jump @510 if t0 == 0
      :                          @508
  6416: 82 1a 78                 a3 = u64 [sp + 0x78]
  6419: 95 a7 80                 a0 = a3 + 0xffffffffffffff80
  6422: db 47 05                 s0 = a0 if t2 != 0
  6425: da 2a 07                 a0 = a3 if t0 == 0
  6428: 64 52                    t0 = s0
  6430: da 47 09                 a2 = a0 if t2 == 0
  6433: 64 94                    t2 = a2
  6435: 82 1a 80 00              a3 = u64 [sp + 0x80]
  6439: ab cb a7                 jump @502 if a4 != a5
      :                          @509
  6442: 28 12                    jump @511
      :                          @510
  6444: 98 74 04                 t2 = a0 >> 0x4
  6447: 82 17 78                 a0 = u64 [sp + 0x78]
  6450: c9 47 02                 t0 = a0 - t2
  6453: 82 1a 80 00              a3 = u64 [sp + 0x80]
  6457: ab cb 95                 jump @502 if a4 != a5
      :                          @511
  6460: 51 04 3a                 jump @517 if t2 == 0
      :                          @512
  6463: 33 07                    a0 = 0
  6465: 95 1b 88 00              a4 = sp + 0x88
  6469: 95 1c 88 00              a5 = sp + 0x88
  6473: 01                       fallthrough
      :                          @513
  6474: 82 a5                    s0 = u64 [a3]
  6476: 78 c7                    u8 [a5] = a0
  6478: 95 79 01                 a2 = a0 + 0x1
  6481: d8 50 07                 a0 = ra <u s0
  6484: 85 77 01                 a0 = a0 ^ 0x1
  6487: c8 7c 0c                 a5 = a5 + a0
  6490: 95 aa 08                 a3 = a3 + 0x8
  6493: 64 97                    a0 = a2
  6495: ab 94 eb                 jump @513 if t2 != a2
      :                          @514
  6498: 82 1a 80 00              a3 = u64 [sp + 0x80]
  6502: ab 36 1c                 jump @518 if s1 != t1
      :                          @515
  6505: 28 69 ff                 jump @503
      :                          @516
  6508: 95 16 08 01              s1 = sp + 0x108
  6512: 95 13 08 01              t1 = sp + 0x108
  6516: 28 0e                    jump @518
      :                          @517
  6518: 95 1b 88 00              a4 = sp + 0x88
  6522: 95 1c 88 00              a5 = sp + 0x88
  6526: aa 36 54 ff              jump @503 if s1 == t1
      :                          @518
  6530: 7b 12 70                 u64 [sp + 0x70] = t0
  6533: c9 bc 07                 a0 = a5 - a4
  6536: c9 63 09                 a2 = t1 - s1
  6539: e6 97 02                 t0 = minu(a0, a2)
  6542: 51 02 05 ff              jump @499 if t0 == 0
      :                          @519
  6546: 7b 14 68                 u64 [sp + 0x68] = t2
  6549: 7c b7                    a0 = u8 [a4]
  6551: 7c 64                    t2 = u8 [s1]
  6553: 97 77 03                 a0 = a0 << 0x3
  6556: c8 a7 07                 a0 = a0 + a3
  6559: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  6562: 97 09 03                 a2 = ra << 0x3
  6565: c8 89 09                 a2 = a2 + a1
  6568: 82 99                    a2 = u64 [a2]
  6570: 82 75                    s0 = u64 [a0]
  6572: 7b 15 60                 u64 [sp + 0x60] = s0
  6575: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  6578: 7b 79                    u64 [a0] = a2
  6580: 51 02 c7 fe              jump @498 if t0 == 0
      :                          @520
  6584: 7c b7 01                 a0 = u8 [a4 + 0x1]
  6587: 97 77 03                 a0 = a0 << 0x3
  6590: c8 a7 07                 a0 = a0 + a3
  6593: 85 49 ff                 a2 = t2 ^ 0xffffffffffffffff
  6596: 82 7a                    a3 = u64 [a0]
  6598: 97 99 03                 a2 = a2 << 0x3
  6601: 86 99 00 f8              a2 = a2 | 0xfffffffffffff800
  6605: c8 89 09                 a2 = a2 + a1
  6608: 7b 9a                    u64 [a2] = a3
  6610: 82 1a 80 00              a3 = u64 [sp + 0x80]
  6614: 7c 64 01                 t2 = u8 [s1 + 0x1]
  6617: 85 40 ff                 ra = t2 ^ 0xffffffffffffffff
  6620: 97 09 03                 a2 = ra << 0x3
  6623: c8 89 09                 a2 = a2 + a1
  6626: 82 99                    a2 = u64 [a2]
  6628: 95 bb 01                 a4 = a4 + 0x1
  6631: 95 66 01                 s1 = s1 + 0x1
  6634: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  6637: 7b 79                    u64 [a0] = a2
  6639: 52 02 c9                 jump @520 if t0 != 0
      :                          @521
  6642: 28 89 fe                 jump @498
      :                          @522
  6645: ae cb 2b                 jump @526 if a4 >=u a5
      :                          @523
  6648: 82 12 08                 t0 = u64 [sp + 0x8]
  6651: 64 a3                    t1 = a3
  6653: 01                       fallthrough
      :                          @524
  6654: 7c c7 ff                 a0 = u8 [a5 + 0xffffffffffffffff]
  6657: 97 77 03                 a0 = a0 << 0x3
  6660: c8 37 07                 a0 = a0 + t1
  6663: 82 85 f8                 s0 = u64 [a1 + 0xfffffffffffffff8]
  6666: 82 79                    a2 = u64 [a0]
  6668: 95 c6 ff                 s1 = a5 + 0xffffffffffffffff
  6671: 95 8a f8                 a3 = a1 + 0xfffffffffffffff8
  6674: 7b 75                    u64 [a0] = s0
  6676: 7b 89 f8                 u64 [a1 + 0xfffffffffffffff8] = a2
  6679: 64 a8                    a1 = a3
  6681: 64 6c                    a5 = s1
  6683: ac 6b e3                 jump @524 if a4 <u s1
      :                          @525
  6686: 28 27                    jump @528
      :                          @526
  6688: 82 12 08                 t0 = u64 [sp + 0x8]
  6691: ae 36 22                 jump @528 if s1 >=u t1
      :                          @527
  6694: 7c 37 ff                 a0 = u8 [t1 + 0xffffffffffffffff]
  6697: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
  6700: 97 77 03                 a0 = a0 << 0x3
  6703: c8 87 07                 a0 = a0 + a1
  6706: 82 79                    a2 = u64 [a0]
  6708: 82 ab                    a4 = u64 [a3]
  6710: 95 3c ff                 a5 = t1 + 0xffffffffffffffff
  6713: 7b a9                    u64 [a3] = a2
  6715: 7b 7b                    u64 [a0] = a4
  6717: 95 aa 08                 a3 = a3 + 0x8
  6720: 64 c3                    t1 = a5
  6722: ac c6 e4                 jump @527 if s1 <u a5
      :                          @528
  6725: 82 17 38                 a0 = u64 [sp + 0x38]
  6728: c9 7a 07                 a0 = a3 - a0
  6731: 98 77 03                 a0 = a0 >> 0x3
  6734: 82 16 40                 s1 = u64 [sp + 0x40]
  6737: c8 76 06                 s1 = s1 + a0
  6740: 7b 20                    u64 [t0] = ra
  6742: 82 18                    a1 = u64 [sp]
  6744: ae 86 9d 00              jump @539 if s1 >=u a1
      :                          @529
  6748: 97 67 03                 a0 = s1 << 0x3
  6751: c8 72 09                 a2 = t0 + a0
  6754: 82 97                    a0 = u64 [a2]
  6756: 7b 27                    u64 [t0] = a0
  6758: 7b 90                    u64 [a2] = ra
  6760: 64 25                    s0 = t0
  6762: c9 68 08                 a1 = a1 - s1
  6765: 7b 18 80 00              u64 [sp + 0x80] = a1
  6769: 95 8b ff                 a4 = a1 + 0xffffffffffffffff
  6772: 95 97 08                 a0 = a2 + 0x8
  6775: ae b6 28                 jump @532 if s1 >=u a4
      :                          @530
  6778: 7b 17 78                 u64 [sp + 0x78] = a0
  6781: 64 57                    a0 = s0
  6783: 64 68                    a1 = s1
  6785: 7b 19 70                 u64 [sp + 0x70] = a2
  6788: 82 19 58                 a2 = u64 [sp + 0x58]
  6791: 82 1a 48                 a3 = u64 [sp + 0x48]
  6794: 64 b5                    s0 = a4
  6796: 50 20 92 00 3a fa        ra = 146, jump @433
      :                          @531 [@dyn 73]
  6802: 64 50                    ra = s0
  6804: 82 17 70                 a0 = u64 [sp + 0x70]
  6807: 7b 17 58                 u64 [sp + 0x58] = a0
  6810: 82 15 78                 s0 = u64 [sp + 0x78]
  6813: 28 10                    jump @534
      :                          @532
  6815: 64 b8                    a1 = a4
  6817: 82 1a 48                 a3 = u64 [sp + 0x48]
  6820: 50 20 94 00 22 fa        ra = 148, jump @433
      :                          @533 [@dyn 74]
  6826: 64 60                    ra = s1
  6828: 01                       fallthrough
      :                          @534
  6829: 82 17 40                 a0 = u64 [sp + 0x40]
  6832: 82 18 30                 a1 = u64 [sp + 0x30]
  6835: d8 87 07                 a0 = a0 <u a1
  6838: 85 77 01                 a0 = a0 ^ 0x1
  6841: 82 18 80 00              a1 = u64 [sp + 0x80]
  6845: e6 86 08                 a1 = minu(s1, a1)
  6848: 82 19                    a2 = u64 [sp]
  6850: 98 99 03                 a2 = a2 >> 0x3
  6853: d8 98 08                 a1 = a1 <u a2
  6856: 85 88 01                 a1 = a1 ^ 0x1
  6859: 7b 18 78                 u64 [sp + 0x78] = a1
  6862: 7b 10                    u64 [sp] = ra
  6864: 7b 15 08                 u64 [sp + 0x8] = s0
  6867: 64 52                    t0 = s0
  6869: 33 08 15                 a1 = 0x15
  6872: 33 05 01 01              s0 = 0x101
  6876: ae 80 41 fa              jump @439 if ra >=u a1
      :                          @535
  6880: 28 07 fa                 jump @435
      :                          @536
  6883: 64 27                    a0 = t0
  6885: 64 08                    a1 = ra
  6887: 33 00 96 00              ra = 0x96
  6891: 98 82 01                 t0 = a1 >> 0x1
  6894: 28 e7 00                 jump @571
      :                          @537 [@dyn 75]
  6897: 28 09 fa                 jump @437
      :                          @538
  6900: 00                       trap
      :                          @539
  6901: 00                       trap
      :                          @540
  6902: 00                       trap
      :                          @541
  6903: 00                       trap
      :                          @542
  6904: 51 02 62                 jump @553 if t0 == 0
      :                          @543
  6907: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  6910: 97 2a 01                 a3 = t0 << 0x1
  6913: 95 ac 01                 a5 = a3 + 0x1
  6916: ae 8c f4                 jump @542 if a5 >=u a1
      :                          @544
  6919: 64 2b                    a4 = t0
  6921: 01                       fallthrough
      :                          @545
  6922: 95 aa 02                 a3 = a3 + 0x2
  6925: ae 8a 1f                 jump @548 if a3 >=u a1
      :                          @546
  6928: 97 c9 03                 a2 = a5 << 0x3
  6931: c8 79 09                 a2 = a2 + a0
  6934: 97 aa 03                 a3 = a3 << 0x3
  6937: c8 7a 0a                 a3 = a3 + a0
  6940: 82 99                    a2 = u64 [a2]
  6942: 82 aa                    a3 = u64 [a3]
  6944: d9 a9 03                 t1 = a2 <s a3
  6947: c8 c3 03                 t1 = t1 + a5
  6950: ac 8b 0c                 jump @549 if a4 <u a1
      :                          @547
  6953: 28 a7 00                 jump @568
      :                          @548
  6956: 64 c3                    t1 = a5
  6958: ae 8b a2 00              jump @568 if a4 >=u a1
      :                          @549
  6962: ae 83 9f 00              jump @569 if t1 >=u a1
      :                          @550
  6966: 97 ba 03                 a3 = a4 << 0x3
  6969: c8 7a 0a                 a3 = a3 + a0
  6972: 97 3b 03                 a4 = t1 << 0x3
  6975: c8 7b 0b                 a4 = a4 + a0
  6978: 82 a9                    a2 = u64 [a3]
  6980: 82 bc                    a5 = u64 [a4]
  6982: af c9 b2                 jump @542 if a2 >=s a5
      :                          @551
  6985: 7b ac                    u64 [a3] = a5
  6987: 97 3a 01                 a3 = t1 << 0x1
  6990: 95 ac 01                 a5 = a3 + 0x1
  6993: 7b b9                    u64 [a4] = a2
  6995: 64 3b                    a4 = t1
  6997: ac 8c b5                 jump @545 if a5 <u a1
      :                          @552
  7000: 28 a0                    jump @542
      :                          @553
  7002: 33 02 02                 t0 = 0x2
  7005: 64 83                    t1 = a1
  7007: 01                       fallthrough
      :                          @554
  7008: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
  7011: ae 83 6e                 jump @569 if t1 >=u a1
      :                          @555
  7014: 97 39 03                 a2 = t1 << 0x3
  7017: c8 79 09                 a2 = a2 + a0
  7020: 82 9a                    a3 = u64 [a2]
  7022: 82 7b                    a4 = u64 [a0]
  7024: 7b 7a                    u64 [a0] = a3
  7026: 7b 9b                    u64 [a2] = a4
  7028: ac 23 58                 jump @565 if t1 <u t0
      :                          @556
  7031: 33 0a                    a3 = 0
  7033: 33 09                    a2 = 0
  7035: 33 0b 01                 a4 = 0x1
  7038: 01                       fallthrough
      :                          @557
  7039: 95 aa 02                 a3 = a3 + 0x2
  7042: ae 3a 1e                 jump @560 if a3 >=u t1
      :                          @558
  7045: 97 bc 03                 a5 = a4 << 0x3
  7048: c8 7c 0c                 a5 = a5 + a0
  7051: 97 aa 03                 a3 = a3 << 0x3
  7054: c8 7a 0a                 a3 = a3 + a0
  7057: 82 cc                    a5 = u64 [a5]
  7059: 82 aa                    a3 = u64 [a3]
  7061: d9 ac 04                 t2 = a5 <s a3
  7064: c8 b4 04                 t2 = t2 + a4
  7067: ac 39 0a                 jump @561 if a2 <u t1
      :                          @559
  7070: 28 30                    jump @566
      :                          @560
  7072: 64 b4                    t2 = a4
  7074: ae 39 2c                 jump @566 if a2 >=u t1
      :                          @561
  7077: ae 34 2a                 jump @567 if t2 >=u t1
      :                          @562
  7080: 97 99 03                 a2 = a2 << 0x3
  7083: c8 97 0a                 a3 = a0 + a2
  7086: 97 49 03                 a2 = t2 << 0x3
  7089: c8 79 09                 a2 = a2 + a0
  7092: 82 ac                    a5 = u64 [a3]
  7094: 82 9b                    a4 = u64 [a2]
  7096: af bc a8                 jump @554 if a5 >=s a4
      :                          @563
  7099: 7b ab                    u64 [a3] = a4
  7101: 97 4a 01                 a3 = t2 << 0x1
  7104: 95 ab 01                 a4 = a3 + 0x1
  7107: 7b 9c                    u64 [a2] = a5
  7109: 64 49                    a2 = t2
  7111: ac 3b b8                 jump @557 if a4 <u t1
      :                          @564
  7114: 28 96                    jump @554
      :                          @565
  7116: 32 00                    ret
      :                          @566
  7118: 00                       trap
      :                          @567
  7119: 00                       trap
      :                          @568
  7120: 00                       trap
      :                          @569
  7121: 00                       trap
      :                          @570
  7122: 51 02 62                 jump @581 if t0 == 0
      :                          @571
  7125: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
  7128: 97 2a 01                 a3 = t0 << 0x1
  7131: 95 ac 01                 a5 = a3 + 0x1
  7134: ae 8c f4                 jump @570 if a5 >=u a1
      :                          @572
  7137: 64 2b                    a4 = t0
  7139: 01                       fallthrough
      :                          @573
  7140: 95 aa 02                 a3 = a3 + 0x2
  7143: ae 8a 1f                 jump @576 if a3 >=u a1
      :                          @574
  7146: 97 c9 03                 a2 = a5 << 0x3
  7149: c8 79 09                 a2 = a2 + a0
  7152: 97 aa 03                 a3 = a3 << 0x3
  7155: c8 7a 0a                 a3 = a3 + a0
  7158: 82 99                    a2 = u64 [a2]
  7160: 82 aa                    a3 = u64 [a3]
  7162: d8 9a 03                 t1 = a3 <u a2
  7165: c8 c3 03                 t1 = t1 + a5
  7168: ac 8b 0c                 jump @577 if a4 <u a1
      :                          @575
  7171: 28 a7 00                 jump @596
      :                          @576
  7174: 64 c3                    t1 = a5
  7176: ae 8b a2 00              jump @596 if a4 >=u a1
      :                          @577
  7180: ae 83 9f 00              jump @597 if t1 >=u a1
      :                          @578
  7184: 97 ba 03                 a3 = a4 << 0x3
  7187: c8 7a 0a                 a3 = a3 + a0
  7190: 97 3b 03                 a4 = t1 << 0x3
  7193: c8 7b 0b                 a4 = a4 + a0
  7196: 82 a9                    a2 = u64 [a3]
  7198: 82 bc                    a5 = u64 [a4]
  7200: ae 9c b2                 jump @570 if a5 >=u a2
      :                          @579
  7203: 7b ac                    u64 [a3] = a5
  7205: 97 3a 01                 a3 = t1 << 0x1
  7208: 95 ac 01                 a5 = a3 + 0x1
  7211: 7b b9                    u64 [a4] = a2
  7213: 64 3b                    a4 = t1
  7215: ac 8c b5                 jump @573 if a5 <u a1
      :                          @580
  7218: 28 a0                    jump @570
      :                          @581
  7220: 33 02 02                 t0 = 0x2
  7223: 64 83                    t1 = a1
  7225: 01                       fallthrough
      :                          @582
  7226: 95 33 ff                 t1 = t1 + 0xffffffffffffffff
  7229: ae 83 6e                 jump @597 if t1 >=u a1
      :                          @583
  7232: 97 39 03                 a2 = t1 << 0x3
  7235: c8 79 09                 a2 = a2 + a0
  7238: 82 9a                    a3 = u64 [a2]
  7240: 82 7b                    a4 = u64 [a0]
  7242: 7b 7a                    u64 [a0] = a3
  7244: 7b 9b                    u64 [a2] = a4
  7246: ac 23 58                 jump @593 if t1 <u t0
      :                          @584
  7249: 33 0a                    a3 = 0
  7251: 33 09                    a2 = 0
  7253: 33 0b 01                 a4 = 0x1
  7256: 01                       fallthrough
      :                          @585
  7257: 95 aa 02                 a3 = a3 + 0x2
  7260: ae 3a 1e                 jump @588 if a3 >=u t1
      :                          @586
  7263: 97 bc 03                 a5 = a4 << 0x3
  7266: c8 7c 0c                 a5 = a5 + a0
  7269: 97 aa 03                 a3 = a3 << 0x3
  7272: c8 7a 0a                 a3 = a3 + a0
  7275: 82 cc                    a5 = u64 [a5]
  7277: 82 aa                    a3 = u64 [a3]
  7279: d8 ca 04                 t2 = a3 <u a5
  7282: c8 b4 04                 t2 = t2 + a4
  7285: ac 39 0a                 jump @589 if a2 <u t1
      :                          @587
  7288: 28 30                    jump @594
      :                          @588
  7290: 64 b4                    t2 = a4
  7292: ae 39 2c                 jump @594 if a2 >=u t1
      :                          @589
  7295: ae 34 2a                 jump @595 if t2 >=u t1
      :                          @590
  7298: 97 99 03                 a2 = a2 << 0x3
  7301: c8 97 0a                 a3 = a0 + a2
  7304: 97 49 03                 a2 = t2 << 0x3
  7307: c8 79 09                 a2 = a2 + a0
  7310: 82 ac                    a5 = u64 [a3]
  7312: 82 9b                    a4 = u64 [a2]
  7314: ae cb a8                 jump @582 if a4 >=u a5
      :                          @591
  7317: 7b ab                    u64 [a3] = a4
  7319: 97 4a 01                 a3 = t2 << 0x1
  7322: 95 ab 01                 a4 = a3 + 0x1
  7325: 7b 9c                    u64 [a2] = a5
  7327: 64 49                    a2 = t2
  7329: ac 3b b8                 jump @585 if a4 <u t1
      :                          @592
  7332: 28 96                    jump @582
      :                          @593
  7334: 32 00                    ret
      :                          @594
  7336: 00                       trap
      :                          @595
  7337: 00                       trap
      :                          @596
  7338: 00                       trap
      :                          @597
  7339: 00                       trap
      :                          @598 [@dyn 76]
  7340: 95 11 c0                 sp = sp + 0xffffffffffffffc0
  7343: 7b 10 38                 u64 [sp + 0x38] = ra
  7346: 7b 15 30                 u64 [sp + 0x30] = s0
  7349: 7b 16 28                 u64 [sp + 0x28] = s1
  7352: 64 85                    s0 = a1
  7354: 82 88 28                 a1 = u64 [a1 + 0x28]
  7357: 82 59 20                 a2 = u64 [s0 + 0x20]
  7360: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7363: 64 76                    s1 = a0
  7365: 33 08 b0 11 01           a1 = 0x111b0
  7370: 64 97                    a0 = a2
  7372: 33 09                    a2 = 0
  7374: b4 a0 02 9a 00           ra = 154, jump [a3]
      :                          @599 [@dyn 77]
  7379: 7b 15 08                 u64 [sp + 0x8] = s0
  7382: 78 17 10                 u8 [sp + 0x10] = a0
  7385: 49 01                    u64 [sp + 0] = 0
  7387: 33 05 01                 s0 = 0x1
  7390: 78 15 11                 u8 [sp + 0x11] = s0
  7393: 7b 16 18                 u64 [sp + 0x18] = s1
  7396: 95 66 08                 s1 = s1 + 0x8
  7399: 7b 16 20                 u64 [sp + 0x20] = s1
  7402: 33 06 02                 s1 = 0x2
  7405: 64 17                    a0 = sp
  7407: 95 18 18                 a1 = sp + 0x18
  7410: 33 09 02                 a2 = 0x2
  7413: 50 20 9c 00 38 a4 00     ra = 156, jump @3168
      :                          @600 [@dyn 78]
  7420: 64 17                    a0 = sp
  7422: 95 18 20                 a1 = sp + 0x20
  7425: 64 69                    a2 = s1
  7427: 50 20 9e 00 2a a4 00     ra = 158, jump @3168
      :                          @601 [@dyn 79]
  7434: 82 17                    a0 = u64 [sp]
  7436: 7c 18 10                 a1 = u8 [sp + 0x10]
  7439: 51 07 59                 jump @609 if a0 == 0
      :                          @602
  7442: 52 08 59                 jump @610 if a1 != 0
      :                          @603
  7445: 7c 18 11                 a1 = u8 [sp + 0x11]
  7448: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  7451: 8e 77                    a0 = a0 >u 0
  7453: 82 16 08                 s1 = u64 [sp + 0x8]
  7456: 88 88 01                 a1 = a1 <u 0x1
  7459: d4 87 07                 a0 = a0 | a1
  7462: 52 07 28                 jump @607 if a0 != 0
      :                          @604
  7465: 7c 67 34                 a0 = u8 [s1 + 0x34]
  7468: 84 77 04                 a0 = a0 & 0x4
  7471: 52 07 1f                 jump @607 if a0 != 0
      :                          @605
  7474: 82 68 28                 a1 = u64 [s1 + 0x28]
  7477: 82 67 20                 a0 = u64 [s1 + 0x20]
  7480: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7483: 33 08 ef 11 01           a1 = 0x111ef
  7488: 33 09 01                 a2 = 0x1
  7491: 33 05 01                 s0 = 0x1
  7494: b4 a0 02 a0 00           ra = 160, jump [a3]
      :                          @606 [@dyn 80]
  7499: 52 07 20                 jump @610 if a0 != 0
      :                          @607
  7502: 82 68 28                 a1 = u64 [s1 + 0x28]
  7505: 82 67 20                 a0 = u64 [s1 + 0x20]
  7508: 82 8a 18                 a3 = u64 [a1 + 0x18]
  7511: 33 08 b0 11 01           a1 = 0x111b0
  7516: 33 09 01                 a2 = 0x1
  7519: b4 a0 02 a2 00           ra = 162, jump [a3]
      :                          @608 [@dyn 81]
  7524: 64 75                    s0 = a0
  7526: 28 05                    jump @610
      :                          @609
  7528: 8e 85                    s0 = a1 >u 0
  7530: 01                       fallthrough
      :                          @610
  7531: 64 57                    a0 = s0
  7533: 82 10 38                 ra = u64 [sp + 0x38]
  7536: 82 15 30                 s0 = u64 [sp + 0x30]
  7539: 82 16 28                 s1 = u64 [sp + 0x28]
  7542: 95 11 40                 sp = sp + 0x40
  7545: 32 00                    ret
      :                          @611
  7547: 95 11 e0                 sp = sp + 0xffffffffffffffe0
  7550: 7b 10 18                 u64 [sp + 0x18] = ra
  7553: 7b 15 10                 u64 [sp + 0x10] = s0
  7556: 7b 16 08                 u64 [sp + 0x8] = s1
  7559: 82 8a 08                 a3 = u64 [a1 + 0x8]
  7562: 82 89 18                 a2 = u64 [a1 + 0x18]
  7565: 33 0b 01                 a4 = 0x1
  7568: 64 75                    s0 = a0
  7570: aa ba 15                 jump @615 if a3 == a4
      :                          @612
  7573: 52 0a 15                 jump @616 if a3 != 0
      :                          @613
  7576: 52 09 12                 jump @616 if a2 != 0
      :                          @614
  7579: 33 06                    s1 = 0
  7581: 33 08 b0 11 01           a1 = 0x111b0
  7586: 33 07 01                 a0 = 0x1
  7589: 28 67                    jump @625
      :                          @615
  7591: 51 09 15                 jump @617 if a2 == 0
      :                          @616
  7594: 64 57                    a0 = s0
  7596: 82 10 18                 ra = u64 [sp + 0x18]
  7599: 82 15 10                 s0 = u64 [sp + 0x10]
  7602: 82 16 08                 s1 = u64 [sp + 0x8]
  7605: 95 11 20                 sp = sp + 0x20
  7608: 28 53 92 00              jump @2817
      :                          @617
  7612: 82 87                    a0 = u64 [a1]
  7614: 82 76 08                 s1 = u64 [a0 + 0x8]
  7617: 82 78                    a1 = u64 [a0]
  7619: 51 06 45                 jump @624 if s1 == 0
      :                          @618
  7622: 57 06 6a                 jump @628 if s1 <s 0
      :                          @619
  7625: 64 53                    t1 = s0
  7627: 89 67                    a0 = s1 <s 0
  7629: 85 75 01                 s0 = a0 ^ 0x1
  7632: 33 0b f0 02 03           a4 = 0x302f0
  7637: 33 02 00 00 01           t0 = 0x10000
  7642: c8 2b 0b                 a4 = a4 + t0
  7645: 01                       fallthrough
      :                          @620
  7646: 82 bc                    a5 = u64 [a4]
  7648: c8 6c 0a                 a3 = a5 + s1
  7651: ac ca 4c                 jump @627 if a3 <u a5
      :                          @621
  7654: c8 5a 07                 a0 = a3 + s0
  7657: d8 a7 09                 a2 = a0 <u a3
  7660: d8 72 07                 a0 = t0 <u a0
  7663: d4 97 07                 a0 = a0 | a2
  7666: 52 07 3d                 jump @627 if a0 != 0
      :                          @622
  7669: 82 b7                    a0 = u64 [a4]
  7671: ab c7 e7                 jump @620 if a0 != a5
      :                          @623
  7674: 7b ba                    u64 [a4] = a3
  7676: 33 07 f0 02 04           a0 = 0x402f0
  7681: c9 a7 07                 a0 = a0 - a3
  7684: 64 35                    s0 = t1
  7686: 28 06                    jump @625
      :                          @624
  7688: 33 07 01                 a0 = 0x1
  7691: 01                       fallthrough
      :                          @625
  7692: 7b 17                    u64 [sp] = a0
  7694: 64 69                    a2 = s1
  7696: 50 20 a4 00 75 94 00     ra = 164, jump @2867
      :                          @626 [@dyn 82]
  7703: 7b 56                    u64 [s0] = s1
  7705: 82 17                    a0 = u64 [sp]
  7707: 7b 57 08                 u64 [s0 + 0x8] = a0
  7710: 7b 56 10                 u64 [s0 + 0x10] = s1
  7713: 82 10 18                 ra = u64 [sp + 0x18]
  7716: 82 15 10                 s0 = u64 [sp + 0x10]
  7719: 82 16 08                 s1 = u64 [sp + 0x8]
  7722: 95 11 20                 sp = sp + 0x20
  7725: 32 00                    ret
      :                          @627
  7727: 00                       trap
      :                          @628
  7728: 00                       trap
      :                          @629
  7729: 95 11 f8                 sp = sp + 0xfffffffffffffff8
  7732: 7b 15                    u64 [sp] = s0
  7734: 33 03 f0 02 03           t1 = 0x302f0
  7739: 33 02 00 00 01           t0 = 0x10000
  7744: c8 23 04                 t2 = t1 + t0
  7747: 01                       fallthrough
      :                          @630
  7748: 82 4b                    a4 = u64 [t2]
  7750: c8 7b 0c                 a5 = a4 + a0
  7753: ac bc 30                 jump @635 if a5 <u a4
      :                          @631
  7756: 95 c8 08                 a1 = a5 + 0x8
  7759: d8 c8 09                 a2 = a1 <u a5
  7762: d8 82 08                 a1 = t0 <u a1
  7765: d4 98 08                 a1 = a1 | a2
  7768: 52 08 21                 jump @635 if a1 != 0
      :                          @632
  7771: c9 c3 08                 a1 = t1 - a5
  7774: c8 28 08                 a1 = a1 + t0
  7777: 84 89 07                 a2 = a1 & 0x7
  7780: c8 9c 0c                 a5 = a5 + a2
  7783: 01                       fallthrough
      :                          @633
  7784: 82 4a                    a3 = u64 [t2]
  7786: ab ba da                 jump @630 if a3 != a4
      :                          @634
  7789: 7b 4c                    u64 [t2] = a5
  7791: c9 98 07                 a0 = a1 - a2
  7794: 82 15                    s0 = u64 [sp]
  7796: 95 11 08                 sp = sp + 0x8
  7799: 32 00                    ret
      :                          @635
  7801: 00                       trap
      :                          @636
  7802: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  7805: 7b 10 30                 u64 [sp + 0x30] = ra
  7808: 7b 15 28                 u64 [sp + 0x28] = s0
  7811: 7b 16 20                 u64 [sp + 0x20] = s1
  7814: 64 90                    ra = a2
  7816: 51 08 90 00              jump @648 if a1 == 0
      :                          @637
  7820: 64 86                    s1 = a1
  7822: 82 a8 08                 a1 = u64 [a3 + 0x8]
  7825: 51 08 90 00              jump @649 if a1 == 0
      :                          @638
  7829: 82 a8 10                 a1 = u64 [a3 + 0x10]
  7832: 51 08 e4 00              jump @657 if a1 == 0
      :                          @639
  7836: 7b 18 10                 u64 [sp + 0x10] = a1
  7839: 7b 17 18                 u64 [sp + 0x18] = a0
  7842: 66 67                    a0 = cpop s1
  7844: 33 08 01                 a1 = 0x1
  7847: ab 87 2d 01              jump @665 if a0 != a1
      :                          @640
  7851: 82 a7                    a0 = u64 [a3]
  7853: 7b 17 08                 u64 [sp + 0x8] = a0
  7856: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  7859: 33 04 f0 02 03           t2 = 0x302f0
  7864: 33 03 00 00 01           t1 = 0x10000
  7869: c8 34 0a                 a3 = t2 + t1
  7872: 01                       fallthrough
      :                          @641
  7873: 82 ab                    a4 = u64 [a3]
  7875: c8 0b 0c                 a5 = a4 + ra
  7878: ac bc 0e 01              jump @665 if a5 <u a4
      :                          @642
  7882: c8 6c 07                 a0 = a5 + s1
  7885: d8 c7 09                 a2 = a0 <u a5
  7888: d8 73 07                 a0 = t1 <u a0
  7891: d4 97 07                 a0 = a0 | a2
  7894: 52 07 fe 00              jump @665 if a0 != 0
      :                          @643
  7898: c9 c4 09                 a2 = t2 - a5
  7901: c8 39 09                 a2 = a2 + t1
  7904: d2 92 07                 a0 = t0 & a2
  7907: c8 7c 0c                 a5 = a5 + a0
  7910: 01                       fallthrough
      :                          @644
  7911: 82 a5                    s0 = u64 [a3]
  7913: ab b5 d8                 jump @641 if s0 != a4
      :                          @645
  7916: 7b ac                    u64 [a3] = a5
  7918: 7b 10                    u64 [sp] = ra
  7920: c9 79 06                 s1 = a2 - a0
  7923: 64 67                    a0 = s1
  7925: 82 18 08                 a1 = u64 [sp + 0x8]
  7928: 82 15 10                 s0 = u64 [sp + 0x10]
  7931: 64 59                    a2 = s0
  7933: 50 20 a6 00 88 93 00     ra = 166, jump @2867
      :                          @646 [@dyn 83]
  7940: 54 35 00 00 01 db 00     jump @666 if s0 <=u 65536
      :                          @647
  7947: 82 10                    ra = u64 [sp]
  7949: 82 17 18                 a0 = u64 [sp + 0x18]
  7952: 33 08                    a1 = 0
  7954: 7b 76 08                 u64 [a0 + 0x8] = s1
  7957: 28 03 01                 jump @673
      :                          @648
  7960: 49 17 08                 u64 [a0 + 8] = 0
  7963: 33 08 01                 a1 = 0x1
  7966: 28 fa 00                 jump @673
      :                          @649
  7969: 51 00 f1 00              jump @672 if ra == 0
      :                          @650
  7973: 7b 17 18                 u64 [sp + 0x18] = a0
  7976: 66 67                    a0 = cpop s1
  7978: 33 08 01                 a1 = 0x1
  7981: ab 87 a7 00              jump @665 if a0 != a1
      :                          @651
  7985: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  7988: 33 04 f0 02 03           t2 = 0x302f0
  7993: 33 03 00 00 01           t1 = 0x10000
  7998: c8 34 0a                 a3 = t2 + t1
  8001: 01                       fallthrough
      :                          @652
  8002: 82 ab                    a4 = u64 [a3]
  8004: c8 0b 0c                 a5 = a4 + ra
  8007: ac bc 8d 00              jump @665 if a5 <u a4
      :                          @653
  8011: c8 6c 07                 a0 = a5 + s1
  8014: d8 c7 09                 a2 = a0 <u a5
  8017: d8 73 07                 a0 = t1 <u a0
  8020: d4 97 07                 a0 = a0 | a2
  8023: 52 07 7d                 jump @665 if a0 != 0
      :                          @654
  8026: c9 c4 09                 a2 = t2 - a5
  8029: c8 39 09                 a2 = a2 + t1
  8032: d2 92 07                 a0 = t0 & a2
  8035: c8 7c 0c                 a5 = a5 + a0
  8038: 01                       fallthrough
      :                          @655
  8039: 82 a5                    s0 = u64 [a3]
  8041: ab b5 d9                 jump @652 if s0 != a4
      :                          @656
  8044: 7b ac                    u64 [a3] = a5
  8046: c9 79 06                 s1 = a2 - a0
  8049: 82 17 18                 a0 = u64 [sp + 0x18]
  8052: 33 08                    a1 = 0
  8054: 7b 76 08                 u64 [a0 + 0x8] = s1
  8057: 28 9f 00                 jump @673
      :                          @657
  8060: 51 00 96 00              jump @672 if ra == 0
      :                          @658
  8064: 7b 17 18                 u64 [sp + 0x18] = a0
  8067: 66 67                    a0 = cpop s1
  8069: 33 08 01                 a1 = 0x1
  8072: ab 87 4c                 jump @665 if a0 != a1
      :                          @659
  8075: 95 62 ff                 t0 = s1 + 0xffffffffffffffff
  8078: 33 04 f0 02 03           t2 = 0x302f0
  8083: 33 03 00 00 01           t1 = 0x10000
  8088: c8 34 0a                 a3 = t2 + t1
  8091: 01                       fallthrough
      :                          @660
  8092: 82 ab                    a4 = u64 [a3]
  8094: c8 0b 0c                 a5 = a4 + ra
  8097: ac bc 33                 jump @665 if a5 <u a4
      :                          @661
  8100: c8 6c 09                 a2 = a5 + s1
  8103: d8 c9 05                 s0 = a2 <u a5
  8106: d8 93 09                 a2 = t1 <u a2
  8109: d4 59 09                 a2 = a2 | s0
  8112: 52 09 24                 jump @665 if a2 != 0
      :                          @662
  8115: c9 c4 09                 a2 = t2 - a5
  8118: c8 39 09                 a2 = a2 + t1
  8121: d2 92 05                 s0 = t0 & a2
  8124: c8 5c 0c                 a5 = a5 + s0
  8127: 01                       fallthrough
      :                          @663
  8128: 82 a7                    a0 = u64 [a3]
  8130: ab b7 da                 jump @660 if a0 != a4
      :                          @664
  8133: 7b ac                    u64 [a3] = a5
  8135: c9 59 06                 s1 = a2 - s0
  8138: 82 17 18                 a0 = u64 [sp + 0x18]
  8141: 33 08                    a1 = 0
  8143: 7b 76 08                 u64 [a0 + 0x8] = s1
  8146: 28 46                    jump @673
      :                          @665
  8148: 82 17 18                 a0 = u64 [sp + 0x18]
  8151: 7b 76 08                 u64 [a0 + 0x8] = s1
  8154: 33 08 01                 a1 = 0x1
  8157: 28 3b                    jump @673
      :                          @666
  8159: 33 08 f0 02 03           a1 = 0x302f0
  8164: 95 87 00 00 01           a0 = a1 + 0x10000
  8169: 82 10                    ra = u64 [sp]
  8171: 82 1c 10                 a5 = u64 [sp + 0x10]
  8174: 82 15 08                 s0 = u64 [sp + 0x8]
  8177: 01                       fallthrough
      :                          @667
  8178: 82 78                    a1 = u64 [a0]
  8180: c9 87 09                 a2 = a0 - a1
  8183: ab 59 11                 jump @671 if a2 != s0
      :                          @668
  8186: c9 c8 09                 a2 = a1 - a5
  8189: 01                       fallthrough
      :                          @669
  8190: 82 7a                    a3 = u64 [a0]
  8192: ab 8a f2                 jump @667 if a3 != a1
      :                          @670
  8195: 7b 79                    u64 [a0] = a2
  8197: 33 0b                    a4 = 0
  8199: 01                       fallthrough
      :                          @671
  8200: 82 17 18                 a0 = u64 [sp + 0x18]
  8203: 33 08                    a1 = 0
  8205: 7b 76 08                 u64 [a0 + 0x8] = s1
  8208: 28 08                    jump @673
      :                          @672
  8210: 33 08                    a1 = 0
  8212: 7b 76 08                 u64 [a0 + 0x8] = s1
  8215: 01                       fallthrough
      :                          @673
  8216: 7b 70 10                 u64 [a0 + 0x10] = ra
  8219: 7b 78                    u64 [a0] = a1
  8221: 82 10 30                 ra = u64 [sp + 0x30]
  8224: 82 15 28                 s0 = u64 [sp + 0x28]
  8227: 82 16 20                 s1 = u64 [sp + 0x20]
  8230: 95 11 38                 sp = sp + 0x38
  8233: 32 00                    ret
      :                          @674
  8235: 51 07 3b                 jump @680 if a0 == 0
      :                          @675
  8238: 33 0a f0 02 03           a3 = 0x302f0
  8243: 33 02 00 00 01           t0 = 0x10000
  8248: c8 2a 0a                 a3 = a3 + t0
  8251: 01                       fallthrough
      :                          @676
  8252: 82 ab                    a4 = u64 [a3]
  8254: c8 7b 09                 a2 = a4 + a0
  8257: ac b9 2b                 jump @681 if a2 <u a4
      :                          @677
  8260: 95 9c 01                 a5 = a2 + 0x1
  8263: 88 c8 01                 a1 = a5 <u 0x1
  8266: d8 c2 0c                 a5 = t0 <u a5
  8269: d4 c8 08                 a1 = a1 | a5
  8272: 52 08 1c                 jump @681 if a1 != 0
      :                          @678
  8275: 82 a8                    a1 = u64 [a3]
  8277: ab b8 e7                 jump @676 if a1 != a4
      :                          @679
  8280: 7b a9                    u64 [a3] = a2
  8282: 33 0c                    a5 = 0
  8284: 33 08 f0 02 04           a1 = 0x402f0
  8289: c9 98 08                 a1 = a1 - a2
  8292: 32 00                    ret
      :                          @680
  8294: 33 08 01                 a1 = 0x1
  8297: 28 20 6e                 jump @2328
      :                          @681
  8300: 00                       trap
      :                          @682
  8301: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8304: 7b 10 40                 u64 [sp + 0x40] = ra
  8307: 7b 15 38                 u64 [sp + 0x38] = s0
  8310: 7b 16 30                 u64 [sp + 0x30] = s1
  8313: 95 88 01                 a1 = a1 + 0x1
  8316: 51 08 54                 jump @690 if a1 == 0
      :                          @683
  8319: 64 75                    s0 = a0
  8321: 82 77                    a0 = u64 [a0]
  8323: 97 79 01                 a2 = a0 << 0x1
  8326: 33 0a 08                 a3 = 0x8
  8329: e4 a8 08                 a1 = maxu(a1, a3)
  8332: e4 89 06                 s1 = maxu(a2, a1)
  8335: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
  8338: 98 88 3f                 a1 = a1 >> 0x3f
  8341: 51 07 12                 jump @685 if a0 == 0
      :                          @684
  8344: 82 59 08                 a2 = u64 [s0 + 0x8]
  8347: 7b 19 18                 u64 [sp + 0x18] = a2
  8350: 49 11 20 01              u64 [sp + 32] = 0x1
  8354: 7b 17 28                 u64 [sp + 0x28] = a0
  8357: 28 06                    jump @686
      :                          @685
  8359: 49 11 20                 u64 [sp + 32] = 0
  8362: 01                       fallthrough
      :                          @686
  8363: 64 17                    a0 = sp
  8365: 95 1a 18                 a3 = sp + 0x18
  8368: 64 69                    a2 = s1
  8370: 50 20 a8 00 c8 fd        ra = 168, jump @636
      :                          @687 [@dyn 84]
  8376: 82 18                    a1 = u64 [sp]
  8378: 82 17 08                 a0 = u64 [sp + 0x8]
  8381: 51 08 14                 jump @691 if a1 == 0
      :                          @688
  8384: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8394: aa 87 0d                 jump @692 if a0 == a1
      :                          @689
  8397: 52 07 18                 jump @693 if a0 != 0
      :                          @690
  8400: 00                       trap
      :                          @691
  8401: 7b 57 08                 u64 [s0 + 0x8] = a0
  8404: 7b 56                    u64 [s0] = s1
  8406: 01                       fallthrough
      :                          @692
  8407: 82 10 40                 ra = u64 [sp + 0x40]
  8410: 82 15 38                 s0 = u64 [sp + 0x38]
  8413: 82 16 30                 s1 = u64 [sp + 0x30]
  8416: 95 11 48                 sp = sp + 0x48
  8419: 32 00                    ret
      :                          @693
  8421: 00                       trap
      :                          @694
  8422: 95 11 b8                 sp = sp + 0xffffffffffffffb8
  8425: 7b 10 40                 u64 [sp + 0x40] = ra
  8428: 7b 15 38                 u64 [sp + 0x38] = s0
  8431: 7b 16 30                 u64 [sp + 0x30] = s1
  8434: 95 88 01                 a1 = a1 + 0x1
  8437: 51 08 5b                 jump @702 if a1 == 0
      :                          @695
  8440: 64 75                    s0 = a0
  8442: 82 77                    a0 = u64 [a0]
  8444: 97 79 01                 a2 = a0 << 0x1
  8447: 33 0a 04                 a3 = 0x4
  8450: e4 a8 08                 a1 = maxu(a1, a3)
  8453: e4 89 06                 s1 = maxu(a2, a1)
  8456: 98 68 3c                 a1 = s1 >> 0x3c
  8459: 88 88 01                 a1 = a1 <u 0x1
  8462: 97 69 03                 a2 = s1 << 0x3
  8465: 97 88 03                 a1 = a1 << 0x3
  8468: 51 07 15                 jump @697 if a0 == 0
      :                          @696
  8471: 82 5a 08                 a3 = u64 [s0 + 0x8]
  8474: 97 77 03                 a0 = a0 << 0x3
  8477: 7b 1a 18                 u64 [sp + 0x18] = a3
  8480: 49 11 20 08              u64 [sp + 32] = 0x8
  8484: 7b 17 28                 u64 [sp + 0x28] = a0
  8487: 28 06                    jump @698
      :                          @697
  8489: 49 11 20                 u64 [sp + 32] = 0
  8492: 01                       fallthrough
      :                          @698
  8493: 64 17                    a0 = sp
  8495: 95 1a 18                 a3 = sp + 0x18
  8498: 50 20 aa 00 48 fd        ra = 170, jump @636
      :                          @699 [@dyn 85]
  8504: 82 18                    a1 = u64 [sp]
  8506: 82 17 08                 a0 = u64 [sp + 0x8]
  8509: 51 08 14                 jump @703 if a1 == 0
      :                          @700
  8512: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
  8522: aa 87 0d                 jump @704 if a0 == a1
      :                          @701
  8525: 52 07 18                 jump @705 if a0 != 0
      :                          @702
  8528: 00                       trap
      :                          @703
  8529: 7b 57 08                 u64 [s0 + 0x8] = a0
  8532: 7b 56                    u64 [s0] = s1
  8534: 01                       fallthrough
      :                          @704
  8535: 82 10 40                 ra = u64 [sp + 0x40]
  8538: 82 15 38                 s0 = u64 [sp + 0x38]
  8541: 82 16 30                 s1 = u64 [sp + 0x30]
  8544: 95 11 48                 sp = sp + 0x48
  8547: 32 00                    ret
      :                          @705
  8549: 00                       trap
      :                          @706 [@dyn 86]
  8550: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8553: 7b 10 30                 u64 [sp + 0x30] = ra
  8556: 7b 15 28                 u64 [sp + 0x28] = s0
  8559: 7b 16 20                 u64 [sp + 0x20] = s1
  8562: 82 79                    a2 = u64 [a0]
  8564: 64 85                    s0 = a1
  8566: 51 09 9c 00              jump @717 if a2 == 0
      :                          @707
  8570: 82 58 28                 a1 = u64 [s0 + 0x28]
  8573: 95 77 08                 a0 = a0 + 0x8
  8576: 7b 17                    u64 [sp] = a0
  8578: 82 57 20                 a0 = u64 [s0 + 0x20]
  8581: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8584: 33 08 e4 00 01           a1 = 0x100e4
  8589: 33 09 04                 a2 = 0x4
  8592: b4 a0 02 ae 00           ra = 174, jump [a3]
      :                          @708 [@dyn 87]
  8597: 7b 15 10                 u64 [sp + 0x10] = s0
  8600: 78 17 18                 u8 [sp + 0x18] = a0
  8603: 49 11 08                 u64 [sp + 8] = 0
  8606: 46 11 19                 u8 [sp + 25] = 0
  8609: 33 09 02                 a2 = 0x2
  8612: 95 17 08                 a0 = sp + 0x8
  8615: 64 18                    a1 = sp
  8617: 50 20 b0 00 84 9f 00     ra = 176, jump @3168
      :                          @709 [@dyn 88]
  8624: 82 17 08                 a0 = u64 [sp + 0x8]
  8627: 7c 18 18                 a1 = u8 [sp + 0x18]
  8630: 51 07 7b                 jump @718 if a0 == 0
      :                          @710
  8633: 33 05 01                 s0 = 0x1
  8636: 52 08 78                 jump @719 if a1 != 0
      :                          @711
  8639: 7c 18 19                 a1 = u8 [sp + 0x19]
  8642: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8645: 8e 77                    a0 = a0 >u 0
  8647: 82 16 10                 s1 = u64 [sp + 0x10]
  8650: 88 88 01                 a1 = a1 <u 0x1
  8653: d4 87 07                 a0 = a0 | a1
  8656: 52 07 28                 jump @715 if a0 != 0
      :                          @712
  8659: 7c 67 34                 a0 = u8 [s1 + 0x34]
  8662: 84 77 04                 a0 = a0 & 0x4
  8665: 52 07 1f                 jump @715 if a0 != 0
      :                          @713
  8668: 82 68 28                 a1 = u64 [s1 + 0x28]
  8671: 82 67 20                 a0 = u64 [s1 + 0x20]
  8674: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8677: 33 08 ef 11 01           a1 = 0x111ef
  8682: 33 09 01                 a2 = 0x1
  8685: 33 05 01                 s0 = 0x1
  8688: b4 a0 02 b2 00           ra = 178, jump [a3]
      :                          @714 [@dyn 89]
  8693: 52 07 3f                 jump @719 if a0 != 0
      :                          @715
  8696: 82 68 28                 a1 = u64 [s1 + 0x28]
  8699: 82 67 20                 a0 = u64 [s1 + 0x20]
  8702: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8705: 33 08 b0 11 01           a1 = 0x111b0
  8710: 33 09 01                 a2 = 0x1
  8713: b4 a0 02 b4 00           ra = 180, jump [a3]
      :                          @716 [@dyn 90]
  8718: 64 75                    s0 = a0
  8720: 28 24                    jump @719
      :                          @717
  8722: 82 58 28                 a1 = u64 [s0 + 0x28]
  8725: 82 57 20                 a0 = u64 [s0 + 0x20]
  8728: 82 8c 18                 a5 = u64 [a1 + 0x18]
  8731: 33 08 f4 00 01           a1 = 0x100f4
  8736: 33 09 04                 a2 = 0x4
  8739: 82 10 30                 ra = u64 [sp + 0x30]
  8742: 82 15 28                 s0 = u64 [sp + 0x28]
  8745: 82 16 20                 s1 = u64 [sp + 0x20]
  8748: 95 11 38                 sp = sp + 0x38
  8751: 32 0c                    jump [a5]
      :                          @718
  8753: 8e 85                    s0 = a1 >u 0
  8755: 01                       fallthrough
      :                          @719
  8756: 64 57                    a0 = s0
  8758: 82 10 30                 ra = u64 [sp + 0x30]
  8761: 82 15 28                 s0 = u64 [sp + 0x28]
  8764: 82 16 20                 s1 = u64 [sp + 0x20]
  8767: 95 11 38                 sp = sp + 0x38
  8770: 32 00                    ret
      :                          @720 [@dyn 91]
  8772: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8775: 7b 10 30                 u64 [sp + 0x30] = ra
  8778: 7b 15 28                 u64 [sp + 0x28] = s0
  8781: 7b 16 20                 u64 [sp + 0x20] = s1
  8784: 82 79                    a2 = u64 [a0]
  8786: 64 85                    s0 = a1
  8788: 51 09 9c 00              jump @731 if a2 == 0
      :                          @721
  8792: 82 58 28                 a1 = u64 [s0 + 0x28]
  8795: 95 77 08                 a0 = a0 + 0x8
  8798: 7b 17                    u64 [sp] = a0
  8800: 82 57 20                 a0 = u64 [s0 + 0x20]
  8803: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8806: 33 08 e4 00 01           a1 = 0x100e4
  8811: 33 09 04                 a2 = 0x4
  8814: b4 a0 02 b8 00           ra = 184, jump [a3]
      :                          @722 [@dyn 92]
  8819: 7b 15 10                 u64 [sp + 0x10] = s0
  8822: 78 17 18                 u8 [sp + 0x18] = a0
  8825: 49 11 08                 u64 [sp + 8] = 0
  8828: 46 11 19                 u8 [sp + 25] = 0
  8831: 33 09 18                 a2 = 0x18
  8834: 95 17 08                 a0 = sp + 0x8
  8837: 64 18                    a1 = sp
  8839: 50 20 ba 00 a6 9e 00     ra = 186, jump @3168
      :                          @723 [@dyn 93]
  8846: 82 17 08                 a0 = u64 [sp + 0x8]
  8849: 7c 18 18                 a1 = u8 [sp + 0x18]
  8852: 51 07 7b                 jump @732 if a0 == 0
      :                          @724
  8855: 33 05 01                 s0 = 0x1
  8858: 52 08 78                 jump @733 if a1 != 0
      :                          @725
  8861: 7c 18 19                 a1 = u8 [sp + 0x19]
  8864: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  8867: 8e 77                    a0 = a0 >u 0
  8869: 82 16 10                 s1 = u64 [sp + 0x10]
  8872: 88 88 01                 a1 = a1 <u 0x1
  8875: d4 87 07                 a0 = a0 | a1
  8878: 52 07 28                 jump @729 if a0 != 0
      :                          @726
  8881: 7c 67 34                 a0 = u8 [s1 + 0x34]
  8884: 84 77 04                 a0 = a0 & 0x4
  8887: 52 07 1f                 jump @729 if a0 != 0
      :                          @727
  8890: 82 68 28                 a1 = u64 [s1 + 0x28]
  8893: 82 67 20                 a0 = u64 [s1 + 0x20]
  8896: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8899: 33 08 ef 11 01           a1 = 0x111ef
  8904: 33 09 01                 a2 = 0x1
  8907: 33 05 01                 s0 = 0x1
  8910: b4 a0 02 bc 00           ra = 188, jump [a3]
      :                          @728 [@dyn 94]
  8915: 52 07 3f                 jump @733 if a0 != 0
      :                          @729
  8918: 82 68 28                 a1 = u64 [s1 + 0x28]
  8921: 82 67 20                 a0 = u64 [s1 + 0x20]
  8924: 82 8a 18                 a3 = u64 [a1 + 0x18]
  8927: 33 08 b0 11 01           a1 = 0x111b0
  8932: 33 09 01                 a2 = 0x1
  8935: b4 a0 02 be 00           ra = 190, jump [a3]
      :                          @730 [@dyn 95]
  8940: 64 75                    s0 = a0
  8942: 28 24                    jump @733
      :                          @731
  8944: 82 58 28                 a1 = u64 [s0 + 0x28]
  8947: 82 57 20                 a0 = u64 [s0 + 0x20]
  8950: 82 8c 18                 a5 = u64 [a1 + 0x18]
  8953: 33 08 f4 00 01           a1 = 0x100f4
  8958: 33 09 04                 a2 = 0x4
  8961: 82 10 30                 ra = u64 [sp + 0x30]
  8964: 82 15 28                 s0 = u64 [sp + 0x28]
  8967: 82 16 20                 s1 = u64 [sp + 0x20]
  8970: 95 11 38                 sp = sp + 0x38
  8973: 32 0c                    jump [a5]
      :                          @732
  8975: 8e 85                    s0 = a1 >u 0
  8977: 01                       fallthrough
      :                          @733
  8978: 64 57                    a0 = s0
  8980: 82 10 30                 ra = u64 [sp + 0x30]
  8983: 82 15 28                 s0 = u64 [sp + 0x28]
  8986: 82 16 20                 s1 = u64 [sp + 0x20]
  8989: 95 11 38                 sp = sp + 0x38
  8992: 32 00                    ret
      :                          @734 [@dyn 96]
  8994: 95 11 c8                 sp = sp + 0xffffffffffffffc8
  8997: 7b 10 30                 u64 [sp + 0x30] = ra
  9000: 7b 15 28                 u64 [sp + 0x28] = s0
  9003: 7b 16 20                 u64 [sp + 0x20] = s1
  9006: 82 79                    a2 = u64 [a0]
  9008: 64 85                    s0 = a1
  9010: 51 09 9c 00              jump @745 if a2 == 0
      :                          @735
  9014: 82 58 28                 a1 = u64 [s0 + 0x28]
  9017: 95 77 08                 a0 = a0 + 0x8
  9020: 7b 17                    u64 [sp] = a0
  9022: 82 57 20                 a0 = u64 [s0 + 0x20]
  9025: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9028: 33 08 e4 00 01           a1 = 0x100e4
  9033: 33 09 04                 a2 = 0x4
  9036: b4 a0 02 c2 00           ra = 194, jump [a3]
      :                          @736 [@dyn 97]
  9041: 7b 15 10                 u64 [sp + 0x10] = s0
  9044: 78 17 18                 u8 [sp + 0x18] = a0
  9047: 49 11 08                 u64 [sp + 8] = 0
  9050: 46 11 19                 u8 [sp + 25] = 0
  9053: 33 09 24                 a2 = 0x24
  9056: 95 17 08                 a0 = sp + 0x8
  9059: 64 18                    a1 = sp
  9061: 50 20 c4 00 c8 9d 00     ra = 196, jump @3168
      :                          @737 [@dyn 98]
  9068: 82 17 08                 a0 = u64 [sp + 0x8]
  9071: 7c 18 18                 a1 = u8 [sp + 0x18]
  9074: 51 07 7b                 jump @746 if a0 == 0
      :                          @738
  9077: 33 05 01                 s0 = 0x1
  9080: 52 08 78                 jump @747 if a1 != 0
      :                          @739
  9083: 7c 18 19                 a1 = u8 [sp + 0x19]
  9086: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
  9089: 8e 77                    a0 = a0 >u 0
  9091: 82 16 10                 s1 = u64 [sp + 0x10]
  9094: 88 88 01                 a1 = a1 <u 0x1
  9097: d4 87 07                 a0 = a0 | a1
  9100: 52 07 28                 jump @743 if a0 != 0
      :                          @740
  9103: 7c 67 34                 a0 = u8 [s1 + 0x34]
  9106: 84 77 04                 a0 = a0 & 0x4
  9109: 52 07 1f                 jump @743 if a0 != 0
      :                          @741
  9112: 82 68 28                 a1 = u64 [s1 + 0x28]
  9115: 82 67 20                 a0 = u64 [s1 + 0x20]
  9118: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9121: 33 08 ef 11 01           a1 = 0x111ef
  9126: 33 09 01                 a2 = 0x1
  9129: 33 05 01                 s0 = 0x1
  9132: b4 a0 02 c6 00           ra = 198, jump [a3]
      :                          @742 [@dyn 99]
  9137: 52 07 3f                 jump @747 if a0 != 0
      :                          @743
  9140: 82 68 28                 a1 = u64 [s1 + 0x28]
  9143: 82 67 20                 a0 = u64 [s1 + 0x20]
  9146: 82 8a 18                 a3 = u64 [a1 + 0x18]
  9149: 33 08 b0 11 01           a1 = 0x111b0
  9154: 33 09 01                 a2 = 0x1
  9157: b4 a0 02 c8 00           ra = 200, jump [a3]
      :                          @744 [@dyn 100]
  9162: 64 75                    s0 = a0
  9164: 28 24                    jump @747
      :                          @745
  9166: 82 58 28                 a1 = u64 [s0 + 0x28]
  9169: 82 57 20                 a0 = u64 [s0 + 0x20]
  9172: 82 8c 18                 a5 = u64 [a1 + 0x18]
  9175: 33 08 f4 00 01           a1 = 0x100f4
  9180: 33 09 04                 a2 = 0x4
  9183: 82 10 30                 ra = u64 [sp + 0x30]
  9186: 82 15 28                 s0 = u64 [sp + 0x28]
  9189: 82 16 20                 s1 = u64 [sp + 0x20]
  9192: 95 11 38                 sp = sp + 0x38
  9195: 32 0c                    jump [a5]
      :                          @746
  9197: 8e 85                    s0 = a1 >u 0
  9199: 01                       fallthrough
      :                          @747
  9200: 64 57                    a0 = s0
  9202: 82 10 30                 ra = u64 [sp + 0x30]
  9205: 82 15 28                 s0 = u64 [sp + 0x28]
  9208: 82 16 20                 s1 = u64 [sp + 0x20]
  9211: 95 11 38                 sp = sp + 0x38
  9214: 32 00                    ret
      :                          @748
  9216: 82 4b                    a4 = u64 [t2]
  9218: 95 bc 50                 a5 = a4 + 0x50
  9221: ac bc 56 02              jump @753 if a5 <u a4
      :                          @749
  9225: 95 c8 08                 a1 = a5 + 0x8
  9228: d8 c8 09                 a2 = a1 <u a5
  9231: d8 82 08                 a1 = t0 <u a1
  9234: d4 98 08                 a1 = a1 | a2
  9237: 52 08 46 02              jump @753 if a1 != 0
      :                          @750
  9241: c9 c3 08                 a1 = t1 - a5
  9244: c8 28 08                 a1 = a1 + t0
  9247: 84 89 07                 a2 = a1 & 0x7
  9250: c8 9c 0c                 a5 = a5 + a2
  9253: 01                       fallthrough
      :                          @751
  9254: 82 4a                    a3 = u64 [t2]
  9256: ab ba d8                 jump @748 if a3 != a4
      :                          @752
  9259: 7b 4c                    u64 [t2] = a5
  9261: 33 0c e0 00 03           a5 = 0x300e0
  9266: 3a 0a e0 00 03           a3 = u64 [0x300e0]
  9271: c9 98 08                 a1 = a1 - a2
  9274: 97 a9 0d                 a2 = a3 << 0xd
  9277: d3 a9 09                 a2 = a2 ^ a3
  9280: 98 9b 07                 a4 = a2 >> 0x7
  9283: 3a 0a 00 00 03           a3 = u64 [0x30000]
  9288: d3 b9 09                 a2 = a2 ^ a4
  9291: 97 9b 11                 a4 = a2 << 0x11
  9294: d3 b9 09                 a2 = a2 ^ a4
  9297: ca a9 05                 s0 = a2 * a3
  9300: 3a 0b 08 00 03           a4 = u64 [0x30008]
  9305: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9310: 98 59 01                 a2 = s0 >> 0x1
  9313: d6 b9 09                 a2 = a2 mulhu a4
  9316: 98 99 04                 a2 = a2 >> 0x4
  9319: 33 02 32                 t0 = 0x32
  9322: ca 29 09                 a2 = a2 * t0
  9325: c9 95 05                 s0 = s0 - a2
  9328: 95 55 01                 s0 = s0 + 0x1
  9331: 7b 85                    u64 [a1] = s0
  9333: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9338: 97 59 0d                 a2 = s0 << 0xd
  9341: d3 95 05                 s0 = s0 ^ a2
  9344: 98 59 07                 a2 = s0 >> 0x7
  9347: d3 95 05                 s0 = s0 ^ a2
  9350: 97 59 11                 a2 = s0 << 0x11
  9353: d3 59 09                 a2 = a2 ^ s0
  9356: ca a9 05                 s0 = a2 * a3
  9359: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9364: 98 59 01                 a2 = s0 >> 0x1
  9367: d6 b9 09                 a2 = a2 mulhu a4
  9370: 98 99 04                 a2 = a2 >> 0x4
  9373: ca 29 09                 a2 = a2 * t0
  9376: c9 95 05                 s0 = s0 - a2
  9379: 95 55 01                 s0 = s0 + 0x1
  9382: 7b 85 08                 u64 [a1 + 0x8] = s0
  9385: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9390: 97 59 0d                 a2 = s0 << 0xd
  9393: d3 95 05                 s0 = s0 ^ a2
  9396: 98 59 07                 a2 = s0 >> 0x7
  9399: d3 95 05                 s0 = s0 ^ a2
  9402: 97 59 11                 a2 = s0 << 0x11
  9405: d3 59 09                 a2 = a2 ^ s0
  9408: ca a9 05                 s0 = a2 * a3
  9411: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9416: 98 59 01                 a2 = s0 >> 0x1
  9419: d6 b9 09                 a2 = a2 mulhu a4
  9422: 98 99 04                 a2 = a2 >> 0x4
  9425: ca 29 09                 a2 = a2 * t0
  9428: c9 95 05                 s0 = s0 - a2
  9431: 95 55 01                 s0 = s0 + 0x1
  9434: 7b 85 10                 u64 [a1 + 0x10] = s0
  9437: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9442: 97 59 0d                 a2 = s0 << 0xd
  9445: d3 95 05                 s0 = s0 ^ a2
  9448: 98 59 07                 a2 = s0 >> 0x7
  9451: d3 95 05                 s0 = s0 ^ a2
  9454: 97 59 11                 a2 = s0 << 0x11
  9457: d3 59 09                 a2 = a2 ^ s0
  9460: ca a9 05                 s0 = a2 * a3
  9463: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9468: 98 59 01                 a2 = s0 >> 0x1
  9471: d6 b9 09                 a2 = a2 mulhu a4
  9474: 98 99 04                 a2 = a2 >> 0x4
  9477: ca 29 09                 a2 = a2 * t0
  9480: c9 95 05                 s0 = s0 - a2
  9483: 95 55 01                 s0 = s0 + 0x1
  9486: 7b 85 18                 u64 [a1 + 0x18] = s0
  9489: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9494: 97 59 0d                 a2 = s0 << 0xd
  9497: d3 95 05                 s0 = s0 ^ a2
  9500: 98 59 07                 a2 = s0 >> 0x7
  9503: d3 95 05                 s0 = s0 ^ a2
  9506: 97 59 11                 a2 = s0 << 0x11
  9509: d3 59 09                 a2 = a2 ^ s0
  9512: ca a9 05                 s0 = a2 * a3
  9515: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9520: 98 59 01                 a2 = s0 >> 0x1
  9523: d6 b9 09                 a2 = a2 mulhu a4
  9526: 98 99 04                 a2 = a2 >> 0x4
  9529: ca 29 09                 a2 = a2 * t0
  9532: c9 95 05                 s0 = s0 - a2
  9535: 95 55 01                 s0 = s0 + 0x1
  9538: 7b 85 20                 u64 [a1 + 0x20] = s0
  9541: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9546: 97 59 0d                 a2 = s0 << 0xd
  9549: d3 95 05                 s0 = s0 ^ a2
  9552: 98 59 07                 a2 = s0 >> 0x7
  9555: d3 95 05                 s0 = s0 ^ a2
  9558: 97 59 11                 a2 = s0 << 0x11
  9561: d3 59 09                 a2 = a2 ^ s0
  9564: ca a9 05                 s0 = a2 * a3
  9567: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9572: 98 59 01                 a2 = s0 >> 0x1
  9575: d6 b9 09                 a2 = a2 mulhu a4
  9578: 98 99 04                 a2 = a2 >> 0x4
  9581: ca 29 09                 a2 = a2 * t0
  9584: c9 95 05                 s0 = s0 - a2
  9587: 95 55 01                 s0 = s0 + 0x1
  9590: 7b 85 28                 u64 [a1 + 0x28] = s0
  9593: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9598: 97 59 0d                 a2 = s0 << 0xd
  9601: d3 95 05                 s0 = s0 ^ a2
  9604: 98 59 07                 a2 = s0 >> 0x7
  9607: d3 95 05                 s0 = s0 ^ a2
  9610: 97 59 11                 a2 = s0 << 0x11
  9613: d3 59 09                 a2 = a2 ^ s0
  9616: ca a9 05                 s0 = a2 * a3
  9619: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9624: 98 59 01                 a2 = s0 >> 0x1
  9627: d6 b9 09                 a2 = a2 mulhu a4
  9630: 98 99 04                 a2 = a2 >> 0x4
  9633: ca 29 09                 a2 = a2 * t0
  9636: c9 95 05                 s0 = s0 - a2
  9639: 95 55 01                 s0 = s0 + 0x1
  9642: 7b 85 30                 u64 [a1 + 0x30] = s0
  9645: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9650: 97 59 0d                 a2 = s0 << 0xd
  9653: d3 95 05                 s0 = s0 ^ a2
  9656: 98 59 07                 a2 = s0 >> 0x7
  9659: d3 95 05                 s0 = s0 ^ a2
  9662: 97 59 11                 a2 = s0 << 0x11
  9665: d3 59 09                 a2 = a2 ^ s0
  9668: ca a9 05                 s0 = a2 * a3
  9671: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9676: 98 59 01                 a2 = s0 >> 0x1
  9679: d6 b9 09                 a2 = a2 mulhu a4
  9682: 98 99 04                 a2 = a2 >> 0x4
  9685: ca 29 09                 a2 = a2 * t0
  9688: c9 95 05                 s0 = s0 - a2
  9691: 95 55 01                 s0 = s0 + 0x1
  9694: 7b 85 38                 u64 [a1 + 0x38] = s0
  9697: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9702: 97 59 0d                 a2 = s0 << 0xd
  9705: d3 95 05                 s0 = s0 ^ a2
  9708: 98 59 07                 a2 = s0 >> 0x7
  9711: d3 95 05                 s0 = s0 ^ a2
  9714: 97 59 11                 a2 = s0 << 0x11
  9717: d3 59 09                 a2 = a2 ^ s0
  9720: ca a9 05                 s0 = a2 * a3
  9723: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9728: 98 59 01                 a2 = s0 >> 0x1
  9731: d6 b9 09                 a2 = a2 mulhu a4
  9734: 98 99 04                 a2 = a2 >> 0x4
  9737: ca 29 09                 a2 = a2 * t0
  9740: c9 95 05                 s0 = s0 - a2
  9743: 95 55 01                 s0 = s0 + 0x1
  9746: 7b 85 40                 u64 [a1 + 0x40] = s0
  9749: 3a 05 e0 00 03           s0 = u64 [0x300e0]
  9754: 97 59 0d                 a2 = s0 << 0xd
  9757: d3 95 05                 s0 = s0 ^ a2
  9760: 98 59 07                 a2 = s0 >> 0x7
  9763: d3 95 05                 s0 = s0 ^ a2
  9766: 97 59 11                 a2 = s0 << 0x11
  9769: d3 59 09                 a2 = a2 ^ s0
  9772: ca a9 0a                 a3 = a2 * a3
  9775: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9780: 98 a9 01                 a2 = a3 >> 0x1
  9783: d6 b9 09                 a2 = a2 mulhu a4
  9786: 98 99 04                 a2 = a2 >> 0x4
  9789: ca 29 09                 a2 = a2 * t0
  9792: c9 9a 0a                 a3 = a3 - a2
  9795: 95 aa 01                 a3 = a3 + 0x1
  9798: 7b 8a 48                 u64 [a1 + 0x48] = a3
  9801: 33 09 0a                 a2 = 0xa
  9804: 7b 79                    u64 [a0] = a2
  9806: 7b 78 08                 u64 [a0 + 0x8] = a1
  9809: 7b 79 10                 u64 [a0 + 0x10] = a2
  9812: 82 15                    s0 = u64 [sp]
  9814: 95 11 08                 sp = sp + 0x8
  9817: 32 00                    ret
      :                          @753
  9819: 00                       trap
      :                          @754
  9820: 82 4b                    a4 = u64 [t2]
  9822: 95 bc a0 00              a5 = a4 + 0xa0
  9826: ac bc 8d 00              jump @761 if a5 <u a4
      :                          @755
  9830: 95 c8 08                 a1 = a5 + 0x8
  9833: d8 c8 09                 a2 = a1 <u a5
  9836: d8 82 08                 a1 = t0 <u a1
  9839: d4 98 08                 a1 = a1 | a2
  9842: 52 08 7d                 jump @761 if a1 != 0
      :                          @756
  9845: c9 c3 08                 a1 = t1 - a5
  9848: c8 28 08                 a1 = a1 + t0
  9851: 84 89 07                 a2 = a1 & 0x7
  9854: c8 9c 0c                 a5 = a5 + a2
  9857: 01                       fallthrough
      :                          @757
  9858: 82 4a                    a3 = u64 [t2]
  9860: ab ba d8                 jump @754 if a3 != a4
      :                          @758
  9863: 7b 4c                    u64 [t2] = a5
  9865: c9 98 02                 t0 = a1 - a2
  9868: 3a 04 10 00 03           t2 = u64 [0x30010]
  9873: 3a 0a 18 00 03           a3 = u64 [0x30018]
  9878: 33 0b 14                 a4 = 0x14
  9881: 33 0c e0 00 03           a5 = 0x300e0
  9886: 33 03 64                 t1 = 0x64
  9889: 64 28                    a1 = t0
  9891: 01                       fallthrough
      :                          @759
  9892: 3a 09 e0 00 03           a2 = u64 [0x300e0]
  9897: 97 95 0d                 s0 = a2 << 0xd
  9900: d3 59 09                 a2 = a2 ^ s0
  9903: 98 95 07                 s0 = a2 >> 0x7
  9906: d3 59 09                 a2 = a2 ^ s0
  9909: 97 95 11                 s0 = a2 << 0x11
  9912: d3 59 09                 a2 = a2 ^ s0
  9915: ca 49 05                 s0 = a2 * t2
  9918: 3e 09 e0 00 03           u64 [0x300e0] = a2
  9923: 98 59 02                 a2 = s0 >> 0x2
  9926: d6 a9 09                 a2 = a2 mulhu a3
  9929: 98 99 02                 a2 = a2 >> 0x2
  9932: ca 39 09                 a2 = a2 * t1
  9935: c9 95 05                 s0 = s0 - a2
  9938: 7b 85                    u64 [a1] = s0
  9940: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
  9943: 95 88 08                 a1 = a1 + 0x8
  9946: 52 0b ca                 jump @759 if a4 != 0
      :                          @760
  9949: 33 08 14                 a1 = 0x14
  9952: 7b 78                    u64 [a0] = a1
  9954: 7b 72 08                 u64 [a0 + 0x8] = t0
  9957: 7b 78 10                 u64 [a0 + 0x10] = a1
  9960: 82 15                    s0 = u64 [sp]
  9962: 95 11 08                 sp = sp + 0x8
  9965: 32 00                    ret
      :                          @761
  9967: 00                       trap
      :                          @762
  9968: 95 11 d0                 sp = sp + 0xffffffffffffffd0
  9971: 7b 10 28                 u64 [sp + 0x28] = ra
  9974: 7b 15 20                 u64 [sp + 0x20] = s0
  9977: 7b 16 18                 u64 [sp + 0x18] = s1
  9980: 64 75                    s0 = a0
  9982: 51 09 3a                 jump @766 if a2 == 0
      :                          @763
  9985: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
  9995: d3 87 07                 a0 = a0 ^ a1
  9998: e1 97 07                 a0 = a0 | ~a2
 10001: 51 07 4d                 jump @768 if a0 == 0
      :                          @764
 10004: cc 98 06                 s1 = a1 /s a2
 10007: ca 96 07                 a0 = s1 * a2
 10010: c9 78 0a                 a3 = a1 - a0
 10013: 64 17                    a0 = sp
 10015: 64 98                    a1 = a2
 10017: 64 a9                    a2 = a3
 10019: 50 20 ca 00 cd           ra = 202, jump @762
      :                          @765 [@dyn 101]
 10024: 82 17 10                 a0 = u64 [sp + 0x10]
 10027: 82 19 08                 a2 = u64 [sp + 0x8]
 10030: 82 18                    a1 = u64 [sp]
 10032: ca 76 0a                 a3 = s1 * a0
 10035: c9 a9 09                 a2 = a2 - a3
 10038: 28 12                    jump @767
      :                          @766
 10040: 8e 8a                    a3 = a1 >u 0
 10042: 89 8b                    a4 = a1 <s 0
 10044: 33 07 ff                 a0 = 0xffffffffffffffff
 10047: da ba 07                 a0 = a3 if a4 == 0
 10050: 9a 8a                    a3 = -a1
 10052: e3 a8 08                 a1 = maxs(a1, a3)
 10055: 01                       fallthrough
      :                          @767
 10056: 7b 58                    u64 [s0] = a1
 10058: 7b 57 08                 u64 [s0 + 0x8] = a0
 10061: 7b 59 10                 u64 [s0 + 0x10] = a2
 10064: 82 10 28                 ra = u64 [sp + 0x28]
 10067: 82 15 20                 s0 = u64 [sp + 0x20]
 10070: 82 16 18                 s1 = u64 [sp + 0x18]
 10073: 95 11 30                 sp = sp + 0x30
 10076: 32 00                    ret
      :                          @768
 10078: 00                       trap
      :                          @769 [@dyn 102]
 10079: 82 18                    a1 = u64 [sp]
 10081: 33 07 01                 a0 = 0x1
 10084: ab 78 1a                 jump @771 if a1 != a0
      :                          @770
 10087: 82 18 08                 a1 = u64 [sp + 0x8]
 10090: ce 58 08                 a1 = a1 %s s0
 10093: c8 58 08                 a1 = a1 + s0
 10096: ce 58 08                 a1 = a1 %s s0
 10099: 82 10 20                 ra = u64 [sp + 0x20]
 10102: 82 15 18                 s0 = u64 [sp + 0x18]
 10105: 95 11 28                 sp = sp + 0x28
 10108: 32 00                    ret
      :                          @771
 10110: 33 07                    a0 = 0
 10112: 82 10 20                 ra = u64 [sp + 0x20]
 10115: 82 15 18                 s0 = u64 [sp + 0x18]
 10118: 95 11 28                 sp = sp + 0x28
 10121: 32 00                    ret
      :                          @772
 10123: d8 87 08                 a1 = a0 <u a1
 10126: 95 c9 ff                 a2 = a5 + 0xffffffffffffffff
 10129: db 89 04                 t2 = a2 if a1 != 0
 10132: da 8c 03                 t1 = a5 if a1 == 0
 10135: ae 43 26                 jump @777 if t1 >=u t2
      :                          @773
 10138: c8 34 08                 a1 = t2 + t1
 10141: 95 88 01                 a1 = a1 + 0x1
 10144: 98 8c 01                 a5 = a1 >> 0x1
 10147: 64 29                    a2 = t0
 10149: 33 08 01                 a1 = 0x1
 10152: 01                       fallthrough
      :                          @774
 10153: 83 99 ff                 i32 a2 = a2 + 0xffffffffffffffff
 10156: 51 09 df                 jump @772 if a2 == 0
      :                          @775
 10159: d6 c8 0a                 a3 = a1 mulhu a5
 10162: ca c8 08                 a1 = a1 * a5
 10165: db ab 08                 a1 = a4 if a3 != 0
 10168: ae 87 f1                 jump @774 if a0 >=u a1
      :                          @776
 10171: 28 d0                    jump @772
      :                          @777
 10173: 64 37                    a0 = t1
 10175: 32 00                    ret
      :                          @778
 10177: 84 89 01                 a2 = a1 & 0x1
 10180: 52 09 08                 jump @780 if a2 != 0
      :                          @779
 10183: 33 07                    a0 = 0
 10185: 28 00 6e                 jump @2419
      :                          @780
 10188: cd 87 0c                 a5 = a0 %u a1
 10191: 51 0c 4f                 jump @791 if a5 == 0
      :                          @781
 10194: 33 07 01                 a0 = 0x1
 10197: 33 03 03                 t1 = 0x3
 10200: 33 02 05                 t0 = 0x5
 10203: 64 8b                    a4 = a1
 10205: 28 18                    jump @784
      :                          @782
 10207: 64 c8                    a1 = a5
 10209: 01                       fallthrough
      :                          @783
 10210: d2 8b 0a                 a3 = a4 & a1
 10213: 84 aa 02                 a3 = a3 & 0x2
 10216: 9a 79                    a2 = -a0
 10218: cd 8b 0c                 a5 = a4 %u a1
 10221: db a9 07                 a0 = a2 if a3 != 0
 10224: 64 8b                    a4 = a1
 10226: 51 0c 37                 jump @792 if a5 == 0
      :                          @784
 10229: 84 c8 01                 a1 = a5 & 0x1
 10232: 52 08 e7                 jump @782 if a1 != 0
      :                          @785
 10235: 84 b8 07                 a1 = a4 & 0x7
 10238: aa 38 06                 jump @787 if a1 == t1
      :                          @786
 10241: ab 28 12                 jump @789 if a1 != t0
      :                          @787
 10244: 98 c8 01                 a1 = a5 >> 0x1
 10247: 84 ca 02                 a3 = a5 & 0x2
 10250: 9a 77                    a0 = -a0
 10252: 64 8c                    a5 = a1
 10254: 51 0a f6                 jump @787 if a3 == 0
      :                          @788
 10257: 28 d1                    jump @783
      :                          @789
 10259: 84 c8 02                 a1 = a5 & 0x2
 10262: 98 cc 01                 a5 = a5 >> 0x1
 10265: 51 08 fa                 jump @789 if a1 == 0
      :                          @790
 10268: 28 c3                    jump @782
      :                          @791
 10270: 33 07 01                 a0 = 0x1
 10273: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10276: 94 87                    a0 = 0 if a1 != 0
 10278: 28 a3 6d                 jump @2419
      :                          @792
 10281: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 10284: 94 87                    a0 = 0 if a1 != 0
 10286: 32 00                    ret
      :                          @793
 10288: 33 08 02                 a1 = 0x2
 10291: aa 87 2a                 jump @802 if a0 == a1
      :                          @794
 10294: 95 77 01                 a0 = a0 + 0x1
 10297: ac 97 fd                 jump @794 if a0 <u a2
      :                          @795
 10300: 84 78 01                 a1 = a0 & 0x1
 10303: 51 08 f1                 jump @793 if a1 == 0
      :                          @796
 10306: ac a7 20                 jump @803 if a0 <u a3
      :                          @797
 10309: 33 08 03                 a1 = 0x3
 10312: 01                       fallthrough
      :                          @798
 10313: 51 08 1b                 jump @804 if a1 == 0
      :                          @799
 10316: cd 87 0b                 a4 = a0 %u a1
 10319: 51 0b e7                 jump @794 if a4 == 0
      :                          @800
 10322: 95 88 02                 a1 = a1 + 0x2
 10325: ca 88 0b                 a4 = a1 * a1
 10328: ae b7 f1                 jump @798 if a0 >=u a4
      :                          @801
 10331: 32 00                    ret
      :                          @802
 10333: 33 07 02                 a0 = 0x2
 10336: 32 00                    ret
      :                          @803
 10338: 32 00                    ret
      :                          @804
 10340: 00                       trap
      :                          @805
 10341: 95 11 f8 fe              sp = sp + 0xfffffffffffffef8
 10345: 7b 10 00 01              u64 [sp + 0x100] = ra
 10349: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 10353: 7b 16 f0 00              u64 [sp + 0xf0] = s1
 10357: 64 73                    t1 = a0
 10359: 33 00                    ra = 0
 10361: 95 75 ff                 s0 = a0 + 0xffffffffffffffff
 10364: 49 21 d8 00              u64 [sp + 216] = 0
 10368: 33 07 08                 a0 = 0x8
 10371: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 10375: 84 58 01                 a1 = s0 & 0x1
 10378: 49 21 e8 00              u64 [sp + 232] = 0
 10382: 7b 15 38                 u64 [sp + 0x38] = s0
 10385: 7b 13 50                 u64 [sp + 0x50] = t1
 10388: 52 08 4a                 jump @811 if a1 != 0
      :                          @806
 10391: 33 00                    ra = 0
 10393: 33 09 02                 a2 = 0x2
 10396: 82 16 38                 s1 = u64 [sp + 0x38]
 10399: 28 1c                    jump @808
      :                          @807
 10401: 97 08 03                 a1 = ra << 0x3
 10404: c8 78 08                 a1 = a1 + a0
 10407: 7b 89                    u64 [a1] = a2
 10409: 95 00 01                 ra = ra + 0x1
 10412: 98 65 01                 s0 = s1 >> 0x1
 10415: 84 68 02                 a1 = s1 & 0x2
 10418: 7b 10 e8 00              u64 [sp + 0xe8] = ra
 10422: 64 56                    s1 = s0
 10424: 52 08 26                 jump @811 if a1 != 0
      :                          @808
 10427: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 10431: ab 80 e2                 jump @807 if ra != a1
      :                          @809
 10434: 95 17 d8 00              a0 = sp + 0xd8
 10438: 64 08                    a1 = ra
 10440: 50 20 ce 00 1e f8        ra = 206, jump @694
      :                          @810 [@dyn 103]
 10446: 33 09 02                 a2 = 0x2
 10449: 82 13 50                 t1 = u64 [sp + 0x50]
 10452: 82 10 e8 00              ra = u64 [sp + 0xe8]
 10456: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 10460: 28 c5                    jump @807
      :                          @811
 10462: 55 15 09 39              jump @817 if s0 >=u 9
      :                          @812
 10466: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 10470: 54 15 01 83 00           jump @826 if s0 <=u 1
      :                          @813
 10475: ab 80 1b                 jump @816 if ra != a1
      :                          @814
 10478: 95 17 d8 00              a0 = sp + 0xd8
 10482: 64 08                    a1 = ra
 10484: 50 20 d0 00 f2 f7        ra = 208, jump @694
      :                          @815 [@dyn 104]
 10490: 82 13 50                 t1 = u64 [sp + 0x50]
 10493: 82 10 e8 00              ra = u64 [sp + 0xe8]
 10497: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 10501: 01                       fallthrough
      :                          @816
 10502: 82 14 e0 00              t2 = u64 [sp + 0xe0]
 10506: 97 07 03                 a0 = ra << 0x3
 10509: c8 47 07                 a0 = a0 + t2
 10512: 7b 75                    u64 [a0] = s0
 10514: 95 00 01                 ra = ra + 0x1
 10517: 28 59                    jump @827
      :                          @817
 10519: 33 06 03                 s1 = 0x3
 10522: 28 0b                    jump @819
      :                          @818
 10524: 95 66 02                 s1 = s1 + 0x2
 10527: ca 66 07                 a0 = s1 * s1
 10530: ac 75 c0                 jump @812 if s0 <u a0
      :                          @819
 10533: 51 06 13 07              jump @972 if s1 == 0
      :                          @820
 10537: cd 65 07                 a0 = s0 %u s1
 10540: 52 07 f0                 jump @818 if a0 != 0
      :                          @821
 10543: 28 1e                    jump @823
      :                          @822
 10545: 82 17 e0 00              a0 = u64 [sp + 0xe0]
 10549: 97 08 03                 a1 = ra << 0x3
 10552: c8 87 07                 a0 = a0 + a1
 10555: 7b 76                    u64 [a0] = s1
 10557: 95 00 01                 ra = ra + 0x1
 10560: cb 65 05                 s0 = s0 /u s1
 10563: cd 65 07                 a0 = s0 %u s1
 10566: 7b 10 e8 00              u64 [sp + 0xe8] = ra
 10570: 52 07 d2                 jump @818 if a0 != 0
      :                          @823
 10573: 82 17 d8 00              a0 = u64 [sp + 0xd8]
 10577: ab 70 e0                 jump @822 if ra != a0
      :                          @824
 10580: 95 17 d8 00              a0 = sp + 0xd8
 10584: 64 08                    a1 = ra
 10586: 50 20 d2 00 8c f7        ra = 210, jump @694
      :                          @825 [@dyn 105]
 10592: 82 13 50                 t1 = u64 [sp + 0x50]
 10595: 82 10 e8 00              ra = u64 [sp + 0xe8]
 10599: 28 ca                    jump @822
      :                          @826
 10601: 82 14 e0 00              t2 = u64 [sp + 0xe0]
 10605: 01                       fallthrough
      :                          @827
 10606: 95 45 10                 s0 = t2 + 0x10
 10609: 7b 14 80 00              u64 [sp + 0x80] = t2
 10613: 7b 10 78                 u64 [sp + 0x78] = ra
 10616: 7b 18                    u64 [sp] = a1
 10618: 55 10 15 23              jump @831 if ra >=u 21
      :                          @828
 10622: 54 10 01 be 05           jump @938 if ra <=u 1
      :                          @829
 10627: 33 09 01                 a2 = 0x1
 10630: 64 47                    a0 = t2
 10632: 64 08                    a1 = ra
 10634: 50 20 d4 00 03 e4        ra = 212, jump @291
      :                          @830 [@dyn 106]
 10640: 82 10 78                 ra = u64 [sp + 0x78]
 10643: 82 14 80 00              t2 = u64 [sp + 0x80]
 10647: 82 13 50                 t1 = u64 [sp + 0x50]
 10650: 28 82 05                 jump @935
      :                          @831
 10653: 7b 15 08                 u64 [sp + 0x8] = s0
 10656: 97 07 02                 a0 = ra << 0x2
 10659: 14 08 f8 ff ff ff ff ff ff 7f a1 = 0x7ffffffffffffff8
 10669: d2 87 07                 a0 = a0 & a1
 10672: 7b 17 28                 u64 [sp + 0x28] = a0
 10675: 33 07 f0 02 03           a0 = 0x302f0
 10680: 33 02 00 00 01           t0 = 0x10000
 10685: c8 27 09                 a2 = a0 + t0
 10688: 01                       fallthrough
      :                          @832
 10689: 82 9a                    a3 = u64 [a2]
 10691: 82 1b 28                 a4 = u64 [sp + 0x28]
 10694: c8 ab 0b                 a4 = a4 + a3
 10697: ac ab 71 06              jump @974 if a4 <u a3
      :                          @833
 10701: 95 b8 08                 a1 = a4 + 0x8
 10704: d8 b8 0c                 a5 = a1 <u a4
 10707: d8 82 08                 a1 = t0 <u a1
 10710: d4 c8 08                 a1 = a1 | a5
 10713: 52 08 61 06              jump @974 if a1 != 0
      :                          @834
 10717: c9 b7 08                 a1 = a0 - a4
 10720: c8 28 08                 a1 = a1 + t0
 10723: 84 8c 07                 a5 = a1 & 0x7
 10726: c8 cb 0b                 a4 = a4 + a5
 10729: 01                       fallthrough
      :                          @835
 10730: 82 95                    s0 = u64 [a2]
 10732: ab a5 d5                 jump @832 if s0 != a3
      :                          @836
 10735: 7b 9b                    u64 [a2] = a4
 10737: c9 c8 08                 a1 = a1 - a5
 10740: 7b 18 c8 00              u64 [sp + 0xc8] = a1
 10744: 33 08 f0 02 03           a1 = 0x302f0
 10749: 33 02 00 00 01           t0 = 0x10000
 10754: c8 28 0b                 a4 = a1 + t0
 10757: 01                       fallthrough
      :                          @837
 10758: 82 bc                    a5 = u64 [a4]
 10760: 95 c6 00 01              s1 = a5 + 0x100
 10764: ac c6 2e 06              jump @974 if s1 <u a5
      :                          @838
 10768: 95 67 08                 a0 = s1 + 0x8
 10771: d8 67 09                 a2 = a0 <u s1
 10774: d8 72 07                 a0 = t0 <u a0
 10777: d4 97 07                 a0 = a0 | a2
 10780: 52 07 1e 06              jump @974 if a0 != 0
      :                          @839
 10784: c9 68 07                 a0 = a1 - s1
 10787: c8 27 07                 a0 = a0 + t0
 10790: 84 79 07                 a2 = a0 & 0x7
 10793: c8 96 06                 s1 = s1 + a2
 10796: 01                       fallthrough
      :                          @840
 10797: 82 b5                    s0 = u64 [a4]
 10799: ab c5 d7                 jump @837 if s0 != a5
      :                          @841
 10802: 7b b6                    u64 [a4] = s1
 10804: 33 0c                    a5 = 0
 10806: 33 0b                    a4 = 0
 10808: c9 97 02                 t0 = a0 - a2
 10811: 95 47 f8                 a0 = t2 + 0xfffffffffffffff8
 10814: 7b 17 48                 u64 [sp + 0x48] = a0
 10817: 49 11 30 10              u64 [sp + 48] = 0x10
 10821: 33 07 f0 02 03           a0 = 0x302f0
 10826: 7b 17 18                 u64 [sp + 0x18] = a0
 10829: 95 77 00 00 01           a0 = a0 + 0x10000
 10834: 7b 17 20                 u64 [sp + 0x20] = a0
 10837: 49 11 10 01 10           u64 [sp + 16] = 0x1001
 10842: 28 13                    jump @844
      :                          @842
 10844: 64 52                    t0 = s0
 10846: 82 13 50                 t1 = u64 [sp + 0x50]
 10849: 82 14 80 00              t2 = u64 [sp + 0x80]
 10853: 82 1c 40                 a5 = u64 [sp + 0x40]
 10856: 01                       fallthrough
      :                          @843
 10857: ae 0c 5b 04              jump @923 if a5 >=u ra
      :                          @844
 10861: 64 b6                    s1 = a4
 10863: 64 c5                    s0 = a5
 10865: c9 c0 09                 a2 = ra - a5
 10868: 97 cb 03                 a4 = a5 << 0x3
 10871: c8 b4 07                 a0 = t2 + a4
 10874: 7b 12 d0 00              u64 [sp + 0xd0] = t0
 10878: 55 19 02 67              jump @852 if a2 >=u 2
      :                          @845
 10882: 64 98                    a1 = a2
 10884: c8 58 0c                 a5 = a1 + s0
 10887: 64 6b                    a4 = s1
 10889: 28 08                    jump @847
      :                          @846
 10891: c8 58 0c                 a5 = a1 + s0
 10894: 64 6b                    a4 = s1
 10896: 01                       fallthrough
      :                          @847
 10897: d8 5c 09                 a2 = a5 <u s0
 10900: d8 c0 0a                 a3 = ra <u a5
 10903: d4 a9 09                 a2 = a2 | a3
 10906: 52 09 a4 05              jump @978 if a2 != 0
      :                          @848
 10910: 88 89 0a                 a2 = a1 <u 0xa
 10913: d8 0c 0a                 a3 = a5 <u ra
 10916: d2 a9 09                 a2 = a2 & a3
 10919: 7b 1b b8 00              u64 [sp + 0xb8] = a4
 10923: 51 09 b4 00              jump @864 if a2 == 0
      :                          @849
 10927: 95 59 0a                 a2 = s0 + 0xa
 10930: e6 09 0a                 a3 = minu(a2, ra)
 10933: ac 5a 8a 05              jump @979 if a3 <u s0
      :                          @850
 10937: 33 09 01                 a2 = 0x1
 10940: e4 98 09                 a2 = maxu(a1, a2)
 10943: c9 5a 06                 s1 = a3 - s0
 10946: 64 68                    a1 = s1
 10948: 7b 1a 40                 u64 [sp + 0x40] = a3
 10951: 50 20 d6 00 c6 e2        ra = 214, jump @291
      :                          @851 [@dyn 107]
 10957: 82 1c 40                 a5 = u64 [sp + 0x40]
 10960: 82 13 50                 t1 = u64 [sp + 0x50]
 10963: 82 14 80 00              t2 = u64 [sp + 0x80]
 10967: 82 10 78                 ra = u64 [sp + 0x78]
 10970: 82 12 d0 00              t0 = u64 [sp + 0xd0]
 10974: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 10978: 28 81 00                 jump @865
      :                          @852
 10981: 82 7a 08                 a3 = u64 [a0 + 0x8]
 10984: 82 78                    a1 = u64 [a0]
 10986: ae 8a 12 01              jump @874 if a3 >=u a1
      :                          @853
 10990: 33 08 02                 a1 = 0x2
 10993: aa 89 20                 jump @858 if a2 == a1
      :                          @854
 10996: 82 18 08                 a1 = u64 [sp + 0x8]
 10999: c8 8b 0b                 a4 = a4 + a1
 11002: 33 08 02                 a1 = 0x2
 11005: 01                       fallthrough
      :                          @855
 11006: 64 ac                    a5 = a3
 11008: 82 ba                    a3 = u64 [a4]
 11010: ae ca 0f                 jump @858 if a3 >=u a5
      :                          @856
 11013: 95 88 01                 a1 = a1 + 0x1
 11016: 95 bb 08                 a4 = a4 + 0x8
 11019: ab 89 f3                 jump @855 if a2 != a1
      :                          @857
 11022: 64 98                    a1 = a2
 11024: 01                       fallthrough
      :                          @858
 11025: c8 58 0c                 a5 = a1 + s0
 11028: ac 8c 2c 05              jump @980 if a5 <u a1
      :                          @859
 11032: ac c0 29 05              jump @981 if ra <u a5
      :                          @860
 11036: 64 6b                    a4 = s1
 11038: 98 89 01                 a2 = a1 >> 0x1
 11041: 51 09 70 ff              jump @847 if a2 == 0
      :                          @861
 11045: 64 b2                    t0 = a4
 11047: 64 c6                    s1 = a5
 11049: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 11053: c8 58 0a                 a3 = a1 + s0
 11056: 97 aa 03                 a3 = a3 << 0x3
 11059: 82 1b 48                 a4 = u64 [sp + 0x48]
 11062: c8 ba 0a                 a3 = a3 + a4
 11065: 64 7b                    a4 = a0
 11067: 01                       fallthrough
      :                          @862
 11068: 82 ac                    a5 = u64 [a3]
 11070: 82 b5                    s0 = u64 [a4]
 11072: 7b bc                    u64 [a4] = a5
 11074: 7b a5                    u64 [a3] = s0
 11076: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 11079: 95 bb 08                 a4 = a4 + 0x8
 11082: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 11085: 52 09 ef                 jump @862 if a2 != 0
      :                          @863
 11088: 64 6c                    a5 = s1
 11090: 64 2b                    a4 = t0
 11092: 82 12 d0 00              t0 = u64 [sp + 0xd0]
 11096: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 11100: 28 35 ff                 jump @847
      :                          @864
 11103: c9 5c 06                 s1 = a5 - s0
 11106: 01                       fallthrough
      :                          @865
 11107: 97 b7 04                 a0 = a4 << 0x4
 11110: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 11114: 82 17 30                 a0 = u64 [sp + 0x30]
 11117: 7b 1c 40                 u64 [sp + 0x40] = a5
 11120: ab 7b e9 00              jump @885 if a4 != a0
      :                          @866
 11124: 7b 16 a8 00              u64 [sp + 0xa8] = s1
 11128: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 11132: 97 b7 01                 a0 = a4 << 0x1
 11135: 7b 17 30                 u64 [sp + 0x30] = a0
 11138: 97 b2 05                 t0 = a4 << 0x5
 11141: 82 14 18                 t2 = u64 [sp + 0x18]
 11144: 33 03 00 00 01           t1 = 0x10000
 11149: 82 17 20                 a0 = u64 [sp + 0x20]
 11152: 82 19 c0 00              a2 = u64 [sp + 0xc0]
 11156: 01                       fallthrough
      :                          @867
 11157: 82 78                    a1 = u64 [a0]
 11159: c8 28 0c                 a5 = a1 + t0
 11162: ac 8c a0 04              jump @974 if a5 <u a1
      :                          @868
 11166: 95 ca 08                 a3 = a5 + 0x8
 11169: d8 ca 0b                 a4 = a3 <u a5
 11172: d8 a3 0a                 a3 = t1 <u a3
 11175: d4 ba 0a                 a3 = a3 | a4
 11178: 52 0a 90 04              jump @974 if a3 != 0
      :                          @869
 11182: c9 c4 0a                 a3 = t2 - a5
 11185: c8 3a 06                 s1 = a3 + t1
 11188: 84 6a 07                 a3 = s1 & 0x7
 11191: c8 ca 0b                 a4 = a3 + a5
 11194: 01                       fallthrough
      :                          @870
 11195: 82 7c                    a5 = u64 [a0]
 11197: ab 8c d8                 jump @867 if a5 != a1
      :                          @871
 11200: 7b 7b                    u64 [a0] = a4
 11202: c9 a6 05                 s0 = s1 - a3
 11205: 64 57                    a0 = s0
 11207: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 11211: 64 96                    s1 = a2
 11213: 50 20 d8 00 b8 86 00     ra = 216, jump @2867
      :                          @872 [@dyn 108]
 11220: 82 17 10                 a0 = u64 [sp + 0x10]
 11223: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11227: ac 7b 46                 jump @879 if a4 <u a0
      :                          @873
 11230: c8 65 07                 a0 = s0 + s1
 11233: 82 18 a8 00              a1 = u64 [sp + 0xa8]
 11237: 7b 78                    u64 [a0] = a1
 11239: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 11243: 7b 78 08                 u64 [a0 + 0x8] = a1
 11246: 95 bb 01                 a4 = a4 + 0x1
 11249: 82 10 78                 ra = u64 [sp + 0x78]
 11252: 64 b7                    a0 = a4
 11254: 7b 15 70                 u64 [sp + 0x70] = s0
 11257: 28 e2 00                 jump @891
      :                          @874
 11260: 33 08 02                 a1 = 0x2
 11263: aa 89 8c fe              jump @846 if a2 == a1
      :                          @875
 11267: 82 18 08                 a1 = u64 [sp + 0x8]
 11270: c8 8b 0b                 a4 = a4 + a1
 11273: 33 08 02                 a1 = 0x2
 11276: 01                       fallthrough
      :                          @876
 11277: 64 ac                    a5 = a3
 11279: 82 ba                    a3 = u64 [a4]
 11281: ac ca 7a fe              jump @846 if a3 <u a5
      :                          @877
 11285: 95 88 01                 a1 = a1 + 0x1
 11288: 95 bb 08                 a4 = a4 + 0x8
 11291: ab 89 f2                 jump @876 if a2 != a1
      :                          @878
 11294: 28 64 fe                 jump @845
      :                          @879
 11297: 64 52                    t0 = s0
 11299: 82 13 50                 t1 = u64 [sp + 0x50]
 11302: 82 1b 20                 a4 = u64 [sp + 0x20]
 11305: 82 1c 40                 a5 = u64 [sp + 0x40]
 11308: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 11312: 01                       fallthrough
      :                          @880
 11313: 82 b7                    a0 = u64 [a4]
 11315: c9 7b 08                 a1 = a4 - a0
 11318: ab 58 0f                 jump @884 if a1 != s0
      :                          @881
 11321: c9 67 08                 a1 = a0 - s1
 11324: 01                       fallthrough
      :                          @882
 11325: 82 b9                    a2 = u64 [a4]
 11327: ab 79 f2                 jump @880 if a2 != a0
      :                          @883
 11330: 7b b8                    u64 [a4] = a1
 11332: 01                       fallthrough
      :                          @884
 11333: 82 14 80 00              t2 = u64 [sp + 0x80]
 11337: 82 10 78                 ra = u64 [sp + 0x78]
 11340: 82 15 b0 00              s0 = u64 [sp + 0xb0]
 11344: 82 1b b8 00              a4 = u64 [sp + 0xb8]
 11348: 82 16 a8 00              s1 = u64 [sp + 0xa8]
 11352: 01                       fallthrough
      :                          @885
 11353: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 11357: c8 27 07                 a0 = a0 + t0
 11360: 7b 76                    u64 [a0] = s1
 11362: 95 bb 01                 a4 = a4 + 0x1
 11365: 7b 75 08                 u64 [a0 + 0x8] = s0
 11368: 64 25                    s0 = t0
 11370: 53 1b 02 ff fd           jump @843 if a4 <u 2
      :                          @886
 11375: 64 b7                    a0 = a4
 11377: 7b 15 70                 u64 [sp + 0x70] = s0
 11380: 28 67                    jump @891
      :                          @887
 11382: 64 65                    s0 = s1
 11384: 64 b8                    a1 = a4
 11386: 01                       fallthrough
      :                          @888
 11387: 82 16 c0 00              s1 = u64 [sp + 0xc0]
 11391: 95 67 08                 a0 = s1 + 0x8
 11394: 7b 17 88 00              u64 [sp + 0x88] = a0
 11398: c9 89 09                 a2 = a2 - a1
 11401: 64 57                    a0 = s0
 11403: 50 20 da 00 fa 85 00     ra = 218, jump @2867
      :                          @889 [@dyn 109]
 11410: 82 17 90 00              a0 = u64 [sp + 0x90]
 11414: 82 18 d0 00              a1 = u64 [sp + 0xd0]
 11418: c8 87 07                 a0 = a0 + a1
 11421: 7b 67                    u64 [s1] = a0
 11423: 82 17 98 00              a0 = u64 [sp + 0x98]
 11427: 82 18 88 00              a1 = u64 [sp + 0x88]
 11431: 7b 87                    u64 [a1] = a0
 11433: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 11437: 95 a8 10                 a1 = a3 + 0x10
 11440: 82 17 a8 00              a0 = u64 [sp + 0xa8]
 11444: 85 77 ff                 a0 = a0 ^ 0xffffffffffffffff
 11447: 82 19 b0 00              a2 = u64 [sp + 0xb0]
 11451: c8 97 07                 a0 = a0 + a2
 11454: 97 79 04                 a2 = a0 << 0x4
 11457: 64 a7                    a0 = a3
 11459: 50 20 dc 00 74 86 00     ra = 220, jump @2885
      :                          @890 [@dyn 110]
 11466: 33 0b 01                 a4 = 0x1
 11469: 82 10 78                 ra = u64 [sp + 0x78]
 11472: 82 15 70                 s0 = u64 [sp + 0x70]
 11475: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 11479: ae 7b 85 fd              jump @842 if a4 >=u a0
      :                          @891
 11483: 64 76                    s1 = a0
 11485: 95 72 ff                 t0 = a0 + 0xffffffffffffffff
 11488: 97 27 04                 a0 = t0 << 0x4
 11491: c8 57 07                 a0 = a0 + s0
 11494: 82 78 08                 a1 = u64 [a0 + 0x8]
 11497: 82 7c                    a5 = u64 [a0]
 11499: c8 c8 08                 a1 = a1 + a5
 11502: aa 08 4e                 jump @898 if a1 == ra
      :                          @892
 11505: 97 6a 04                 a3 = s1 << 0x4
 11508: c8 5a 0a                 a3 = a3 + s0
 11511: 82 a9 e0                 a2 = u64 [a3 + 0xffffffffffffffe0]
 11514: ae 9c 42                 jump @898 if a5 >=u a2
      :                          @893
 11517: 33 0b 02                 a4 = 0x2
 11520: 82 13 50                 t1 = u64 [sp + 0x50]
 11523: 82 14 80 00              t2 = u64 [sp + 0x80]
 11527: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 11531: ae 6b 93 01              jump @919 if a4 >=u s1
      :                          @894
 11535: 64 43                    t1 = t2
 11537: 95 68 fd                 a1 = s1 + 0xfffffffffffffffd
 11540: 64 84                    t2 = a1
 11542: 97 88 04                 a1 = a1 << 0x4
 11545: c8 58 08                 a1 = a1 + s0
 11548: 82 88                    a1 = u64 [a1]
 11550: c8 c9 0b                 a4 = a2 + a5
 11553: ae 8b 72 01              jump @917 if a4 >=u a1
      :                          @895
 11557: 33 0b 03                 a4 = 0x3
 11560: ae 6b 7e 01              jump @920 if a4 >=u s1
      :                          @896
 11564: 82 aa c0                 a3 = u64 [a3 + 0xffffffffffffffc0]
 11567: c8 89 09                 a2 = a2 + a1
 11570: 64 4b                    a4 = t2
 11572: 64 34                    t2 = t1
 11574: ae a9 1e                 jump @900 if a2 >=u a3
      :                          @897
 11577: 28 7d 01                 jump @922
      :                          @898
 11580: 82 14 80 00              t2 = u64 [sp + 0x80]
 11584: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 11588: 53 16 03 13              jump @901 if s1 <u 3
      :                          @899
 11592: 95 6b fd                 a4 = s1 + 0xfffffffffffffffd
 11595: 97 b8 04                 a1 = a4 << 0x4
 11598: c8 58 08                 a1 = a1 + s0
 11601: 82 88                    a1 = u64 [a1]
 11603: 01                       fallthrough
      :                          @900
 11604: ac c8 07                 jump @902 if a1 <u a5
      :                          @901
 11607: 95 6b fe                 a4 = s1 + 0xfffffffffffffffe
 11610: 01                       fallthrough
      :                          @902
 11611: ae 6b e0 02              jump @975 if a4 >=u s1
      :                          @903
 11615: 95 b9 01                 a2 = a4 + 0x1
 11618: ae 69 d9 02              jump @975 if a2 >=u s1
      :                          @904
 11622: 97 b8 04                 a1 = a4 << 0x4
 11625: c8 85 0a                 a3 = s0 + a1
 11628: 97 99 04                 a2 = a2 << 0x4
 11631: c8 59 09                 a2 = a2 + s0
 11634: 82 9c                    a5 = u64 [a2]
 11636: 7b 19 c0 00              u64 [sp + 0xc0] = a2
 11640: 82 98 08                 a1 = u64 [a2 + 0x8]
 11643: 82 a9 08                 a2 = u64 [a3 + 0x8]
 11646: c8 c8 08                 a1 = a1 + a5
 11649: ac 98 bb 02              jump @976 if a1 <u a2
      :                          @905
 11653: ac 80 b8 02              jump @977 if ra <u a1
      :                          @906
 11657: 7b 1c 90 00              u64 [sp + 0x90] = a5
 11661: 7b 1b a8 00              u64 [sp + 0xa8] = a4
 11665: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 11669: 7b 12 b8 00              u64 [sp + 0xb8] = t0
 11673: 7b 1a a0 00              u64 [sp + 0xa0] = a3
 11677: 82 aa                    a3 = u64 [a3]
 11679: c9 98 0b                 a4 = a1 - a2
 11682: 7b 19 98 00              u64 [sp + 0x98] = a2
 11686: 97 95 03                 s0 = a2 << 0x3
 11689: c8 45 05                 s0 = s0 + t2
 11692: 97 a9 03                 a2 = a3 << 0x3
 11695: c8 95 06                 s1 = s0 + a2
 11698: c9 ab 0c                 a5 = a4 - a3
 11701: 97 88 03                 a1 = a1 << 0x3
 11704: 7b 18 88 00              u64 [sp + 0x88] = a1
 11708: 7b 1a d0 00              u64 [sp + 0xd0] = a3
 11712: ae ac 68                 jump @912 if a5 >=u a3
      :                          @907
 11715: 97 c9 03                 a2 = a5 << 0x3
 11718: 7b 19 68                 u64 [sp + 0x68] = a2
 11721: 64 68                    a1 = s1
 11723: 7b 1c 60                 u64 [sp + 0x60] = a5
 11726: 50 20 de 00 b7 84 00     ra = 222, jump @2867
      :                          @908 [@dyn 111]
 11733: 82 1b c8 00              a4 = u64 [sp + 0xc8]
 11737: 82 18 60                 a1 = u64 [sp + 0x60]
 11740: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 11744: e5 87 07                 a0 = mins(a0, a1)
 11747: 82 19 68                 a2 = u64 [sp + 0x68]
 11750: c8 b9 09                 a2 = a2 + a4
 11753: 58 07 8d fe              jump @887 if a0 <=s 0
      :                          @909
 11757: 82 17 48                 a0 = u64 [sp + 0x48]
 11760: 82 18 88 00              a1 = u64 [sp + 0x88]
 11764: c8 87 07                 a0 = a0 + a1
 11767: 01                       fallthrough
      :                          @910
 11768: 82 98 f8                 a1 = u64 [a2 + 0xfffffffffffffff8]
 11771: 82 6a f8                 a3 = u64 [s1 + 0xfffffffffffffff8]
 11774: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 11777: d8 a8 08                 a1 = a1 <u a3
 11780: 97 8a 03                 a3 = a1 << 0x3
 11783: c9 a6 06                 s1 = s1 - a3
 11786: c8 a9 09                 a2 = a2 + a3
 11789: 64 6a                    a3 = s1
 11791: da 89 0a                 a3 = a2 if a1 == 0
 11794: 82 a8                    a1 = u64 [a3]
 11796: 7b 78                    u64 [a0] = a1
 11798: d8 65 08                 a1 = s0 <u s1
 11801: d8 9b 0a                 a3 = a4 <u a2
 11804: d2 a8 08                 a1 = a1 & a3
 11807: 95 77 f8                 a0 = a0 + 0xfffffffffffffff8
 11810: 52 08 d6                 jump @910 if a1 != 0
      :                          @911
 11813: 28 51 fe                 jump @887
      :                          @912
 11816: 8f a8                    a1 = a3 >s 0
 11818: 7b 18 68                 u64 [sp + 0x68] = a1
 11821: 64 58                    a1 = s0
 11823: 7b 19 60                 u64 [sp + 0x60] = a2
 11826: 7b 1b 58                 u64 [sp + 0x58] = a4
 11829: 50 20 e0 00 50 84 00     ra = 224, jump @2867
      :                          @913 [@dyn 112]
 11836: 82 18 c8 00              a1 = u64 [sp + 0xc8]
 11840: 82 19 58                 a2 = u64 [sp + 0x58]
 11843: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 11847: d9 97 07                 a0 = a0 <s a2
 11850: 82 19 68                 a2 = u64 [sp + 0x68]
 11853: d2 97 07                 a0 = a0 & a2
 11856: 82 19 60                 a2 = u64 [sp + 0x60]
 11859: c8 89 09                 a2 = a2 + a1
 11862: 51 07 25 fe              jump @888 if a0 == 0
      :                          @914
 11866: 82 12 80 00              t0 = u64 [sp + 0x80]
 11870: 82 17 88 00              a0 = u64 [sp + 0x88]
 11874: c8 72 02                 t0 = t0 + a0
 11877: 01                       fallthrough
      :                          @915
 11878: 82 6a                    a3 = u64 [s1]
 11880: 82 8b                    a4 = u64 [a1]
 11882: d8 ba 0c                 a5 = a3 <u a4
 11885: 85 c7 01                 a0 = a5 ^ 0x1
 11888: e6 ba 0a                 a3 = minu(a3, a4)
 11891: 7b 5a                    u64 [s0] = a3
 11893: 97 cc 03                 a5 = a5 << 0x3
 11896: c8 c6 06                 s1 = s1 + a5
 11899: 97 77 03                 a0 = a0 << 0x3
 11902: c8 78 08                 a1 = a1 + a0
 11905: d8 98 07                 a0 = a1 <u a2
 11908: d8 26 0a                 a3 = s1 <u t0
 11911: d2 a7 07                 a0 = a0 & a3
 11914: 95 55 08                 s0 = s0 + 0x8
 11917: 52 07 d9                 jump @915 if a0 != 0
      :                          @916
 11920: 28 eb fd                 jump @888
      :                          @917
 11923: 64 4b                    a4 = t2
 11925: 64 34                    t2 = t1
 11927: ae c8 c0 fe              jump @901 if a1 >=u a5
      :                          @918
 11931: 28 c0 fe                 jump @902
      :                          @919
 11934: 64 52                    t0 = s0
 11936: 82 1c 40                 a5 = u64 [sp + 0x40]
 11939: 28 c6 fb                 jump @843
      :                          @920
 11942: 64 52                    t0 = s0
 11944: 82 1c 40                 a5 = u64 [sp + 0x40]
 11947: 64 34                    t2 = t1
 11949: 82 13 50                 t1 = u64 [sp + 0x50]
 11952: ac 0c bd fb              jump @844 if a5 <u ra
      :                          @921
 11956: 28 10                    jump @923
      :                          @922
 11958: 64 6b                    a4 = s1
 11960: 64 52                    t0 = s0
 11962: 82 1c 40                 a5 = u64 [sp + 0x40]
 11965: 82 13 50                 t1 = u64 [sp + 0x50]
 11968: ac 0c ad fb              jump @844 if a5 <u ra
      :                          @923
 11972: 82 15 08                 s0 = u64 [sp + 0x8]
 11975: 82 18 30                 a1 = u64 [sp + 0x30]
 11978: 56 28 00 10 27           jump @929 if a1 >u 4096
      :                          @924
 11983: 97 87 04                 a0 = a1 << 0x4
 11986: 33 08 f0 02 03           a1 = 0x302f0
 11991: 95 88 00 00 01           a1 = a1 + 0x10000
 11996: 01                       fallthrough
      :                          @925
 11997: 82 89                    a2 = u64 [a1]
 11999: c9 98 0a                 a3 = a1 - a2
 12002: ab 2a 0f                 jump @929 if a3 != t0
      :                          @926
 12005: c9 79 0a                 a3 = a2 - a0
 12008: 01                       fallthrough
      :                          @927
 12009: 82 8b                    a4 = u64 [a1]
 12011: ab 9b f2                 jump @925 if a4 != a2
      :                          @928
 12014: 7b 8a                    u64 [a1] = a3
 12016: 01                       fallthrough
      :                          @929
 12017: 82 1c c8 00              a5 = u64 [sp + 0xc8]
 12021: 56 20 01 40 27           jump @935 if ra >u 16385
      :                          @930
 12026: 33 07 f0 02 03           a0 = 0x302f0
 12031: 95 77 00 00 01           a0 = a0 + 0x10000
 12036: 01                       fallthrough
      :                          @931
 12037: 82 78                    a1 = u64 [a0]
 12039: c9 87 09                 a2 = a0 - a1
 12042: ab c9 12                 jump @935 if a2 != a5
      :                          @932
 12045: 82 19 28                 a2 = u64 [sp + 0x28]
 12048: c9 98 09                 a2 = a1 - a2
 12051: 01                       fallthrough
      :                          @933
 12052: 82 7a                    a3 = u64 [a0]
 12054: ab 8a ef                 jump @931 if a3 != a1
      :                          @934
 12057: 7b 79                    u64 [a0] = a2
 12059: 01                       fallthrough
      :                          @935
 12060: 82 4a                    a3 = u64 [t2]
 12062: 9a 07 01                 a0 = 0x1 - ra
 12065: 33 09 02                 a2 = 0x2
 12068: 33 08 02                 a1 = 0x2
 12071: 01                       fallthrough
      :                          @936
 12072: 64 ab                    a4 = a3
 12074: 82 5a f8                 a3 = u64 [s0 + 0xfffffffffffffff8]
 12077: aa ba 13                 jump @939 if a3 == a4
      :                          @937
 12080: 95 88 01                 a1 = a1 + 0x1
 12083: c8 87 0b                 a4 = a0 + a1
 12086: 95 55 08                 s0 = s0 + 0x8
 12089: ab 9b ef                 jump @936 if a4 != a2
      :                          @938
 12092: 64 07                    a0 = ra
 12094: 28 2b                    jump @944
      :                          @939
 12096: 95 87 ff                 a0 = a1 + 0xffffffffffffffff
 12099: ae 08 26                 jump @944 if a1 >=u ra
      :                          @940
 12102: c9 80 08                 a1 = ra - a1
 12105: 28 0b                    jump @942
      :                          @941
 12107: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 12110: 95 55 08                 s0 = s0 + 0x8
 12113: 51 08 18                 jump @944 if a1 == 0
      :                          @942
 12116: 97 79 03                 a2 = a0 << 0x3
 12119: c8 49 09                 a2 = a2 + t2
 12122: 82 5a                    a3 = u64 [s0]
 12124: 82 9b f8                 a4 = u64 [a2 + 0xfffffffffffffff8]
 12127: aa ba ec                 jump @941 if a3 == a4
      :                          @943
 12130: 7b 9a                    u64 [a2] = a3
 12132: 95 77 01                 a0 = a0 + 0x1
 12135: 28 e4                    jump @941
      :                          @944
 12137: 53 13 03 5a              jump @956 if t1 <u 3
      :                          @945
 12141: 97 77 03                 a0 = a0 << 0x3
 12144: c8 74 08                 a1 = t2 + a0
 12147: 33 02 02                 t0 = 0x2
 12150: 33 0a 01                 a3 = 0x1
 12153: 28 05                    jump @947
      :                          @946
 12155: aa 32 48                 jump @956 if t0 == t1
      :                          @947
 12158: 64 27                    a0 = t0
 12160: 95 22 01                 t0 = t0 + 0x1
 12163: 64 4b                    a4 = t2
 12165: 28 05                    jump @949
      :                          @948
 12167: aa ac f4                 jump @946 if a5 == a3
      :                          @949
 12170: aa 8b 6e                 jump @964 if a4 == a1
      :                          @950
 12173: 82 bc                    a5 = u64 [a4]
 12175: 51 0c aa 00              jump @973 if a5 == 0
      :                          @951
 12179: 82 19 38                 a2 = u64 [sp + 0x38]
 12182: ac c9 e5                 jump @946 if a2 <u a5
      :                          @952
 12185: 95 bb 08                 a4 = a4 + 0x8
 12188: 82 19 38                 a2 = u64 [sp + 0x38]
 12191: cb c9 06                 s1 = a2 /u a5
 12194: 33 0c 01                 a5 = 0x1
 12197: 64 75                    s0 = a0
 12199: 28 0b                    jump @954
      :                          @953
 12201: 98 66 01                 s1 = s1 >> 0x1
 12204: ca 55 05                 s0 = s0 * s0
 12207: 51 06 d8                 jump @948 if s1 == 0
      :                          @954
 12210: 84 69 01                 a2 = s1 & 0x1
 12213: cd 35 05                 s0 = s0 %u t1
 12216: 51 09 f1                 jump @953 if a2 == 0
      :                          @955
 12219: ca c5 09                 a2 = s0 * a5
 12222: cd 39 0c                 a5 = a2 %u t1
 12225: 28 e8                    jump @953
      :                          @956
 12227: 82 18                    a1 = u64 [sp]
 12229: 51 08 2f                 jump @963 if a1 == 0
      :                          @957
 12232: 56 28 00 20 2c           jump @963 if a1 >u 8192
      :                          @958
 12237: 97 87 03                 a0 = a1 << 0x3
 12240: 33 08 f0 02 03           a1 = 0x302f0
 12245: 95 88 00 00 01           a1 = a1 + 0x10000
 12250: 01                       fallthrough
      :                          @959
 12251: 82 89                    a2 = u64 [a1]
 12253: c9 98 0a                 a3 = a1 - a2
 12256: ab 4a 14                 jump @963 if a3 != t2
      :                          @960
 12259: c9 79 0a                 a3 = a2 - a0
 12262: 01                       fallthrough
      :                          @961
 12263: 82 8b                    a4 = u64 [a1]
 12265: ab 9b f2                 jump @959 if a4 != a2
      :                          @962
 12268: 7b 8a                    u64 [a1] = a3
 12270: 33 0c                    a5 = 0
 12272: 33 07                    a0 = 0
 12274: 28 34                    jump @971
      :                          @963
 12276: 33 07                    a0 = 0
 12278: 28 30                    jump @971
      :                          @964
 12280: 82 19                    a2 = u64 [sp]
 12282: 51 09 2c                 jump @971 if a2 == 0
      :                          @965
 12285: 33 08 00 20              a1 = 0x2000
 12289: ac 98 25                 jump @971 if a1 <u a2
      :                          @966
 12292: 97 98 03                 a1 = a2 << 0x3
 12295: 33 09 f0 02 03           a2 = 0x302f0
 12300: 95 99 00 00 01           a2 = a2 + 0x10000
 12305: 01                       fallthrough
      :                          @967
 12306: 82 9a                    a3 = u64 [a2]
 12308: c9 a9 0b                 a4 = a2 - a3
 12311: ab 4b 0f                 jump @971 if a4 != t2
      :                          @968
 12314: c9 8a 0b                 a4 = a3 - a1
 12317: 01                       fallthrough
      :                          @969
 12318: 82 9c                    a5 = u64 [a2]
 12320: ab ac f2                 jump @967 if a5 != a3
      :                          @970
 12323: 7b 9b                    u64 [a2] = a4
 12325: 01                       fallthrough
      :                          @971
 12326: 82 10 00 01              ra = u64 [sp + 0x100]
 12330: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 12334: 82 16 f0 00              s1 = u64 [sp + 0xf0]
 12338: 95 11 08 01              sp = sp + 0x108
 12342: 32 00                    ret
      :                          @972
 12344: 00                       trap
      :                          @973
 12345: 00                       trap
      :                          @974
 12346: 00                       trap
      :                          @975
 12347: 00                       trap
      :                          @976
 12348: 00                       trap
      :                          @977
 12349: 00                       trap
      :                          @978
 12350: 00                       trap
      :                          @979
 12351: 00                       trap
      :                          @980
 12352: 00                       trap
      :                          @981
 12353: 00                       trap
      :                          @982 [@dyn 113]
 12354: 82 17 10                 a0 = u64 [sp + 0x10]
 12357: 52 17 01 4c              jump @984 if a0 != 1
      :                          @983
 12361: 82 17 18                 a0 = u64 [sp + 0x18]
 12364: 82 1b 08                 a4 = u64 [sp + 0x8]
 12367: 82 18                    a1 = u64 [sp]
 12369: c9 b8 08                 a1 = a1 - a4
 12372: ce 58 08                 a1 = a1 %s s0
 12375: 9a 59                    a2 = -s0
 12377: e3 95 09                 a2 = maxs(s0, a2)
 12380: 99 8a 3f                 a3 = a1 >>a 0x3f
 12383: d2 9a 0a                 a3 = a3 & a2
 12386: c8 a8 08                 a1 = a1 + a3
 12389: ce 57 07                 a0 = a0 %s s0
 12392: c8 57 07                 a0 = a0 + s0
 12395: ce 57 07                 a0 = a0 %s s0
 12398: ca 78 07                 a0 = a1 * a0
 12401: ce 57 07                 a0 = a0 %s s0
 12404: 99 78 3f                 a1 = a0 >>a 0x3f
 12407: d2 98 08                 a1 = a1 & a2
 12410: c8 87 07                 a0 = a0 + a1
 12413: ca 67 07                 a0 = a0 * s1
 12416: c8 b7 07                 a0 = a0 + a4
 12419: 82 10 38                 ra = u64 [sp + 0x38]
 12422: 82 15 30                 s0 = u64 [sp + 0x30]
 12425: 82 16 28                 s1 = u64 [sp + 0x28]
 12428: 95 11 40                 sp = sp + 0x40
 12431: 32 00                    ret
      :                          @984
 12433: 00                       trap
      :                          @985
 12434: 95 11 98                 sp = sp + 0xffffffffffffff98
 12437: 7b 10 60                 u64 [sp + 0x60] = ra
 12440: 7b 15 58                 u64 [sp + 0x58] = s0
 12443: 7b 16 50                 u64 [sp + 0x50] = s1
 12446: 82 86 08                 s1 = u64 [a1 + 0x8]
 12449: 51 06 a2 01              jump @1003 if s1 == 0
      :                          @986
 12453: 64 85                    s0 = a1
 12455: 82 89                    a2 = u64 [a1]
 12457: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 12467: d3 98 08                 a1 = a1 ^ a2
 12470: e1 68 08                 a1 = a1 | ~s1
 12473: 51 08 89 01              jump @1002 if a1 == 0
      :                          @987
 12477: 7b 17 30                 u64 [sp + 0x30] = a0
 12480: 82 77                    a0 = u64 [a0]
 12482: 7b 17 28                 u64 [sp + 0x28] = a0
 12485: 7b 19 18                 u64 [sp + 0x18] = a2
 12488: ce 69 08                 a1 = a2 %s s1
 12491: 9a 67                    a0 = -s1
 12493: e3 76 09                 a2 = maxs(s1, a0)
 12496: 99 87 3f                 a0 = a1 >>a 0x3f
 12499: 7b 19 20                 u64 [sp + 0x20] = a2
 12502: d2 97 07                 a0 = a0 & a2
 12505: c8 78 08                 a1 = a1 + a0
 12508: 95 17 38                 a0 = sp + 0x38
 12511: 64 69                    a2 = s1
 12513: 50 20 e4 00 0f f6        ra = 228, jump @762
      :                          @988 [@dyn 114]
 12519: 82 17 38                 a0 = u64 [sp + 0x38]
 12522: 52 17 01 5a 01           jump @1004 if a0 != 1
      :                          @989
 12527: 82 17 40                 a0 = u64 [sp + 0x40]
 12530: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 12540: d3 87 09                 a2 = a0 ^ a1
 12543: e1 69 09                 a2 = a2 | ~s1
 12546: 51 09 40 01              jump @1002 if a2 == 0
      :                          @990
 12550: ce 67 07                 a0 = a0 %s s1
 12553: c8 67 07                 a0 = a0 + s1
 12556: d3 78 08                 a1 = a1 ^ a0
 12559: e1 68 08                 a1 = a1 | ~s1
 12562: 51 08 30 01              jump @1002 if a1 == 0
      :                          @991
 12566: 82 18 30                 a1 = u64 [sp + 0x30]
 12569: 82 88 08                 a1 = u64 [a1 + 0x8]
 12572: 82 19 28                 a2 = u64 [sp + 0x28]
 12575: c9 98 09                 a2 = a1 - a2
 12578: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 12588: d3 89 0a                 a3 = a2 ^ a1
 12591: e1 6a 0a                 a3 = a3 | ~s1
 12594: 51 0a 10 01              jump @1002 if a3 == 0
      :                          @992
 12598: ce 67 07                 a0 = a0 %s s1
 12601: ce 69 09                 a2 = a2 %s s1
 12604: 99 9a 3f                 a3 = a2 >>a 0x3f
 12607: 82 1b 20                 a4 = u64 [sp + 0x20]
 12610: d2 ba 0a                 a3 = a3 & a4
 12613: c8 a9 09                 a2 = a2 + a3
 12616: ca 79 09                 a2 = a2 * a0
 12619: d3 89 07                 a0 = a2 ^ a1
 12622: e1 67 07                 a0 = a0 | ~s1
 12625: 51 07 f1 00              jump @1002 if a0 == 0
      :                          @993
 12629: 82 55 10                 s0 = u64 [s0 + 0x10]
 12632: 51 05 eb 00              jump @1003 if s0 == 0
      :                          @994
 12636: 82 17 18                 a0 = u64 [sp + 0x18]
 12639: ca 76 08                 a1 = s1 * a0
 12642: 14 07 00 00 00 00 00 00 00 80 a0 = 0x8000000000000000
 12652: d3 87 07                 a0 = a0 ^ a1
 12655: e1 57 07                 a0 = a0 | ~s0
 12658: 51 07 d0 00              jump @1002 if a0 == 0
      :                          @995
 12662: 7b 19 10                 u64 [sp + 0x10] = a2
 12665: 7b 18                    u64 [sp] = a1
 12667: ce 58 08                 a1 = a1 %s s0
 12670: 9a 57                    a0 = -s0
 12672: e3 75 09                 a2 = maxs(s0, a0)
 12675: 99 87 3f                 a0 = a1 >>a 0x3f
 12678: 7b 19 08                 u64 [sp + 0x8] = a2
 12681: d2 97 07                 a0 = a0 & a2
 12684: c8 78 08                 a1 = a1 + a0
 12687: 95 17 38                 a0 = sp + 0x38
 12690: 64 59                    a2 = s0
 12692: 50 20 e6 00 5c f5        ra = 230, jump @762
      :                          @996 [@dyn 115]
 12698: 82 17 38                 a0 = u64 [sp + 0x38]
 12701: 52 17 01 a7 00           jump @1004 if a0 != 1
      :                          @997
 12706: 82 17 40                 a0 = u64 [sp + 0x40]
 12709: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 12719: d3 97 08                 a1 = a0 ^ a2
 12722: e1 58 08                 a1 = a1 | ~s0
 12725: 51 08 8d 00              jump @1002 if a1 == 0
      :                          @998
 12729: ce 57 08                 a1 = a0 %s s0
 12732: c8 58 08                 a1 = a1 + s0
 12735: d3 89 09                 a2 = a2 ^ a1
 12738: e1 59 07                 a0 = a2 | ~s0
 12741: 51 07 7d                 jump @1002 if a0 == 0
      :                          @999
 12744: 82 17 10                 a0 = u64 [sp + 0x10]
 12747: ce 67 07                 a0 = a0 %s s1
 12750: 99 79 3f                 a2 = a0 >>a 0x3f
 12753: 82 1a 20                 a3 = u64 [sp + 0x20]
 12756: d2 a9 09                 a2 = a2 & a3
 12759: 82 1a 30                 a3 = u64 [sp + 0x30]
 12762: 82 aa 10                 a3 = u64 [a3 + 0x10]
 12765: c8 97 07                 a0 = a0 + a2
 12768: 82 19 18                 a2 = u64 [sp + 0x18]
 12771: ca 97 07                 a0 = a0 * a2
 12774: 82 19 28                 a2 = u64 [sp + 0x28]
 12777: c8 97 07                 a0 = a0 + a2
 12780: c9 7a 0a                 a3 = a3 - a0
 12783: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 12793: d3 9a 0b                 a4 = a3 ^ a2
 12796: e1 5b 0b                 a4 = a4 | ~s0
 12799: 51 0b 43                 jump @1002 if a4 == 0
      :                          @1000
 12802: ce 58 08                 a1 = a1 %s s0
 12805: ce 5a 0a                 a3 = a3 %s s0
 12808: 99 ab 3f                 a4 = a3 >>a 0x3f
 12811: 82 1c 08                 a5 = u64 [sp + 0x8]
 12814: d2 cb 0b                 a4 = a4 & a5
 12817: c8 ba 0a                 a3 = a3 + a4
 12820: ca 8a 08                 a1 = a3 * a1
 12823: d3 89 09                 a2 = a2 ^ a1
 12826: e1 59 09                 a2 = a2 | ~s0
 12829: 51 09 25                 jump @1002 if a2 == 0
      :                          @1001
 12832: ce 58 08                 a1 = a1 %s s0
 12835: 99 89 3f                 a2 = a1 >>a 0x3f
 12838: d2 c9 09                 a2 = a2 & a5
 12841: c8 98 08                 a1 = a1 + a2
 12844: 82 19                    a2 = u64 [sp]
 12846: ca 98 08                 a1 = a1 * a2
 12849: c8 87 07                 a0 = a0 + a1
 12852: 82 10 60                 ra = u64 [sp + 0x60]
 12855: 82 15 58                 s0 = u64 [sp + 0x58]
 12858: 82 16 50                 s1 = u64 [sp + 0x50]
 12861: 95 11 68                 sp = sp + 0x68
 12864: 32 00                    ret
      :                          @1002
 12866: 00                       trap
      :                          @1003
 12867: 00                       trap
      :                          @1004
 12868: 00                       trap
      :                          @1005
 12869: d6 a7 09                 a2 = a0 mulhu a3
 12872: 98 9b 04                 a4 = a2 >> 0x4
 12875: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 12878: c8 b9 09                 a2 = a2 + a4
 12881: c8 37 07                 a0 = a0 + t1
 12884: c9 97 07                 a0 = a0 - a2
 12887: 01                       fallthrough
      :                          @1006
 12888: d6 a7 09                 a2 = a0 mulhu a3
 12891: 98 9b 04                 a4 = a2 >> 0x4
 12894: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 12897: c8 b9 09                 a2 = a2 + a4
 12900: ca 82 0b                 a4 = t0 * a1
 12903: c8 b7 07                 a0 = a0 + a4
 12906: c9 97 07                 a0 = a0 - a2
 12909: d6 a7 09                 a2 = a0 mulhu a3
 12912: 98 9b 04                 a4 = a2 >> 0x4
 12915: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 12918: c8 b9 09                 a2 = a2 + a4
 12921: c9 97 07                 a0 = a0 - a2
 12924: 95 00 01                 ra = ra + 0x1
 12927: 95 19 48                 a2 = sp + 0x48
 12930: c8 94 04                 t2 = t2 + a2
 12933: 7b 47                    u64 [t2] = a0
 12935: 51 10 08 38 02           jump @1037 if ra == 8
      :                          @1007
 12940: 97 04 03                 t2 = ra << 0x3
 12943: 51 00 27 02              jump @1036 if ra == 0
      :                          @1008
 12947: 33 07 01                 a0 = 0x1
 12950: 33 0b 09                 a4 = 0x9
 12953: 64 09                    a2 = ra
 12955: 28 0b                    jump @1010
      :                          @1009
 12957: 98 99 01                 a2 = a2 >> 0x1
 12960: ca bb 0b                 a4 = a4 * a4
 12963: 51 09 2c                 jump @1012 if a2 == 0
      :                          @1010
 12966: d6 ab 0c                 a5 = a4 mulhu a3
 12969: 98 c5 04                 s0 = a5 >> 0x4
 12972: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 12975: c8 5c 0c                 a5 = a5 + s0
 12978: 84 95 01                 s0 = a2 & 0x1
 12981: c9 cb 0b                 a4 = a4 - a5
 12984: 51 05 e5                 jump @1009 if s0 == 0
      :                          @1011
 12987: ca b7 07                 a0 = a0 * a4
 12990: d6 a7 0c                 a5 = a0 mulhu a3
 12993: 98 c5 04                 s0 = a5 >> 0x4
 12996: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 12999: c8 5c 0c                 a5 = a5 + s0
 13002: c9 c7 07                 a0 = a0 - a5
 13005: 28 d0                    jump @1009
      :                          @1012
 13007: 82 19 38                 a2 = u64 [sp + 0x38]
 13010: ca 97 07                 a0 = a0 * a2
 13013: 82 19 40                 a2 = u64 [sp + 0x40]
 13016: c8 97 07                 a0 = a0 + a2
 13019: 97 09 01                 a2 = ra << 0x1
 13022: 33 0c 01                 a5 = 0x1
 13025: 33 0b 09                 a4 = 0x9
 13028: 28 0b                    jump @1014
      :                          @1013
 13030: 98 99 01                 a2 = a2 >> 0x1
 13033: ca bb 0b                 a4 = a4 * a4
 13036: 51 09 2c                 jump @1016 if a2 == 0
      :                          @1014
 13039: d6 ab 05                 s0 = a4 mulhu a3
 13042: 98 56 04                 s1 = s0 >> 0x4
 13045: 84 55 f0                 s0 = s0 & 0xfffffffffffffff0
 13048: c8 65 05                 s0 = s0 + s1
 13051: 84 96 01                 s1 = a2 & 0x1
 13054: c9 5b 0b                 a4 = a4 - s0
 13057: 51 06 e5                 jump @1013 if s1 == 0
      :                          @1015
 13060: ca bc 0c                 a5 = a5 * a4
 13063: d6 ac 06                 s1 = a5 mulhu a3
 13066: 98 65 04                 s0 = s1 >> 0x4
 13069: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13072: c8 65 05                 s0 = s0 + s1
 13075: c9 5c 0c                 a5 = a5 - s0
 13078: 28 d0                    jump @1013
      :                          @1016
 13080: d6 a7 09                 a2 = a0 mulhu a3
 13083: 98 9b 04                 a4 = a2 >> 0x4
 13086: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13089: c8 b9 09                 a2 = a2 + a4
 13092: 82 1b 30                 a4 = u64 [sp + 0x30]
 13095: ca bc 0b                 a4 = a5 * a4
 13098: c8 b7 07                 a0 = a0 + a4
 13101: c9 97 07                 a0 = a0 - a2
 13104: 97 09 01                 a2 = ra << 0x1
 13107: c8 09 09                 a2 = a2 + ra
 13110: 33 0c 01                 a5 = 0x1
 13113: 33 0b 09                 a4 = 0x9
 13116: 28 0b                    jump @1018
      :                          @1017
 13118: 98 99 01                 a2 = a2 >> 0x1
 13121: ca bb 0b                 a4 = a4 * a4
 13124: 51 09 2c                 jump @1020 if a2 == 0
      :                          @1018
 13127: d6 ab 06                 s1 = a4 mulhu a3
 13130: 98 65 04                 s0 = s1 >> 0x4
 13133: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13136: c8 65 05                 s0 = s0 + s1
 13139: 84 96 01                 s1 = a2 & 0x1
 13142: c9 5b 0b                 a4 = a4 - s0
 13145: 51 06 e5                 jump @1017 if s1 == 0
      :                          @1019
 13148: ca bc 0c                 a5 = a5 * a4
 13151: d6 ac 06                 s1 = a5 mulhu a3
 13154: 98 65 04                 s0 = s1 >> 0x4
 13157: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13160: c8 65 05                 s0 = s0 + s1
 13163: c9 5c 0c                 a5 = a5 - s0
 13166: 28 d0                    jump @1017
      :                          @1020
 13168: d6 a7 09                 a2 = a0 mulhu a3
 13171: 98 9b 04                 a4 = a2 >> 0x4
 13174: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13177: c8 b9 09                 a2 = a2 + a4
 13180: 82 1b 28                 a4 = u64 [sp + 0x28]
 13183: ca bc 0b                 a4 = a5 * a4
 13186: c8 b7 07                 a0 = a0 + a4
 13189: c9 97 07                 a0 = a0 - a2
 13192: 97 09 02                 a2 = ra << 0x2
 13195: 33 0c 01                 a5 = 0x1
 13198: 33 0b 09                 a4 = 0x9
 13201: 28 0b                    jump @1022
      :                          @1021
 13203: 98 99 01                 a2 = a2 >> 0x1
 13206: ca bb 0b                 a4 = a4 * a4
 13209: 51 09 2c                 jump @1024 if a2 == 0
      :                          @1022
 13212: d6 ab 06                 s1 = a4 mulhu a3
 13215: 98 65 04                 s0 = s1 >> 0x4
 13218: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13221: c8 65 05                 s0 = s0 + s1
 13224: 84 96 01                 s1 = a2 & 0x1
 13227: c9 5b 0b                 a4 = a4 - s0
 13230: 51 06 e5                 jump @1021 if s1 == 0
      :                          @1023
 13233: ca bc 0c                 a5 = a5 * a4
 13236: d6 ac 06                 s1 = a5 mulhu a3
 13239: 98 65 04                 s0 = s1 >> 0x4
 13242: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13245: c8 65 05                 s0 = s0 + s1
 13248: c9 5c 0c                 a5 = a5 - s0
 13251: 28 d0                    jump @1021
      :                          @1024
 13253: d6 a7 09                 a2 = a0 mulhu a3
 13256: 98 9b 04                 a4 = a2 >> 0x4
 13259: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13262: c8 b9 09                 a2 = a2 + a4
 13265: 82 1b 20                 a4 = u64 [sp + 0x20]
 13268: ca bc 0b                 a4 = a5 * a4
 13271: c8 b7 07                 a0 = a0 + a4
 13274: c9 97 07                 a0 = a0 - a2
 13277: 97 09 02                 a2 = ra << 0x2
 13280: c8 09 09                 a2 = a2 + ra
 13283: 33 0c 01                 a5 = 0x1
 13286: 33 0b 09                 a4 = 0x9
 13289: 28 0b                    jump @1026
      :                          @1025
 13291: 98 99 01                 a2 = a2 >> 0x1
 13294: ca bb 0b                 a4 = a4 * a4
 13297: 51 09 2c                 jump @1028 if a2 == 0
      :                          @1026
 13300: d6 ab 06                 s1 = a4 mulhu a3
 13303: 98 65 04                 s0 = s1 >> 0x4
 13306: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13309: c8 65 05                 s0 = s0 + s1
 13312: 84 96 01                 s1 = a2 & 0x1
 13315: c9 5b 0b                 a4 = a4 - s0
 13318: 51 06 e5                 jump @1025 if s1 == 0
      :                          @1027
 13321: ca bc 0c                 a5 = a5 * a4
 13324: d6 ac 06                 s1 = a5 mulhu a3
 13327: 98 65 04                 s0 = s1 >> 0x4
 13330: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13333: c8 65 05                 s0 = s0 + s1
 13336: c9 5c 0c                 a5 = a5 - s0
 13339: 28 d0                    jump @1025
      :                          @1028
 13341: d6 a7 09                 a2 = a0 mulhu a3
 13344: 98 9b 04                 a4 = a2 >> 0x4
 13347: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 13350: c8 b9 09                 a2 = a2 + a4
 13353: 82 1b 18                 a4 = u64 [sp + 0x18]
 13356: ca bc 0b                 a4 = a5 * a4
 13359: c8 b7 07                 a0 = a0 + a4
 13362: c9 97 07                 a0 = a0 - a2
 13365: 96 09 06                 a2 = ra * 0x6
 13368: 33 0c 01                 a5 = 0x1
 13371: 33 0b 09                 a4 = 0x9
 13374: 28 0b                    jump @1030
      :                          @1029
 13376: 98 99 01                 a2 = a2 >> 0x1
 13379: ca bb 0b                 a4 = a4 * a4
 13382: 51 09 2c                 jump @1032 if a2 == 0
      :                          @1030
 13385: d6 ab 06                 s1 = a4 mulhu a3
 13388: 98 65 04                 s0 = s1 >> 0x4
 13391: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13394: c8 65 05                 s0 = s0 + s1
 13397: 84 96 01                 s1 = a2 & 0x1
 13400: c9 5b 0b                 a4 = a4 - s0
 13403: 51 06 e5                 jump @1029 if s1 == 0
      :                          @1031
 13406: ca bc 0c                 a5 = a5 * a4
 13409: d6 ac 06                 s1 = a5 mulhu a3
 13412: 98 65 04                 s0 = s1 >> 0x4
 13415: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13418: c8 65 05                 s0 = s0 + s1
 13421: c9 5c 0c                 a5 = a5 - s0
 13424: 28 d0                    jump @1029
      :                          @1032
 13426: 82 19 10                 a2 = u64 [sp + 0x10]
 13429: ca 9c 03                 t1 = a5 * a2
 13432: c9 04 09                 a2 = t2 - ra
 13435: 33 02 01                 t0 = 0x1
 13438: 33 0b 09                 a4 = 0x9
 13441: 28 0c                    jump @1034
      :                          @1033
 13443: 98 99 01                 a2 = a2 >> 0x1
 13446: ca bb 0b                 a4 = a4 * a4
 13449: 51 09 bc fd              jump @1005 if a2 == 0
      :                          @1034
 13453: d6 ab 0c                 a5 = a4 mulhu a3
 13456: 98 c5 04                 s0 = a5 >> 0x4
 13459: 84 cc f0                 a5 = a5 & 0xfffffffffffffff0
 13462: c8 5c 0c                 a5 = a5 + s0
 13465: 84 95 01                 s0 = a2 & 0x1
 13468: c9 cb 0b                 a4 = a4 - a5
 13471: 51 05 e4                 jump @1033 if s0 == 0
      :                          @1035
 13474: ca b2 0c                 a5 = t0 * a4
 13477: d6 ac 06                 s1 = a5 mulhu a3
 13480: 98 65 04                 s0 = s1 >> 0x4
 13483: 84 66 f0                 s1 = s1 & 0xfffffffffffffff0
 13486: c8 65 05                 s0 = s0 + s1
 13489: c9 5c 02                 t0 = a5 - s0
 13492: 28 cf                    jump @1033
      :                          @1036
 13494: 33 02 01                 t0 = 0x1
 13497: 82 17 08                 a0 = u64 [sp + 0x8]
 13500: 28 9c fd                 jump @1006
      :                          @1037
 13503: 82 17 80 00              a0 = u64 [sp + 0x80]
 13507: 82 18 78                 a1 = u64 [sp + 0x78]
 13510: 82 19 70                 a2 = u64 [sp + 0x70]
 13513: 82 1a 68                 a3 = u64 [sp + 0x68]
 13516: 82 1b                    a4 = u64 [sp]
 13518: 7b b7 38                 u64 [a4 + 0x38] = a0
 13521: 7b b8 30                 u64 [a4 + 0x30] = a1
 13524: 7b b9 28                 u64 [a4 + 0x28] = a2
 13527: 7b ba 20                 u64 [a4 + 0x20] = a3
 13530: 82 17 60                 a0 = u64 [sp + 0x60]
 13533: 82 18 58                 a1 = u64 [sp + 0x58]
 13536: 82 19 50                 a2 = u64 [sp + 0x50]
 13539: 82 1a 48                 a3 = u64 [sp + 0x48]
 13542: 7b b7 18                 u64 [a4 + 0x18] = a0
 13545: 7b b8 10                 u64 [a4 + 0x10] = a1
 13548: 7b b9 08                 u64 [a4 + 0x8] = a2
 13551: 7b ba                    u64 [a4] = a3
 13553: 82 10 98 00              ra = u64 [sp + 0x98]
 13557: 82 15 90 00              s0 = u64 [sp + 0x90]
 13561: 82 16 88 00              s1 = u64 [sp + 0x88]
 13565: 95 11 a0 00              sp = sp + 0xa0
 13569: 32 00                    ret
      :                          @1038
 13571: 51 08 9a 00              jump @1042 if a1 == 0
      :                          @1039
 13575: 33 0a ff                 a3 = 0xffffffffffffffff
 13578: 33 09 20 83 b8 ed        a2 = 0xffffffffedb88320
 13584: 01                       fallthrough
      :                          @1040
 13585: 7c 7b                    a4 = u8 [a0]
 13587: d3 ba 0a                 a3 = a3 ^ a4
 13590: 97 ab 3f                 a4 = a3 << 0x3f
 13593: 99 bb 3f                 a4 = a4 >>a 0x3f
 13596: 8b aa 01                 i32 a3 = a3 >> 0x1
 13599: d2 9b 0b                 a4 = a4 & a2
 13602: d3 ba 0a                 a3 = a3 ^ a4
 13605: 97 ab 3f                 a4 = a3 << 0x3f
 13608: 99 bb 3f                 a4 = a4 >>a 0x3f
 13611: 8b aa 01                 i32 a3 = a3 >> 0x1
 13614: d2 9b 0b                 a4 = a4 & a2
 13617: d3 ba 0a                 a3 = a3 ^ a4
 13620: 97 ab 3f                 a4 = a3 << 0x3f
 13623: 99 bb 3f                 a4 = a4 >>a 0x3f
 13626: 8b aa 01                 i32 a3 = a3 >> 0x1
 13629: d2 9b 0b                 a4 = a4 & a2
 13632: d3 ba 0a                 a3 = a3 ^ a4
 13635: 97 ab 3f                 a4 = a3 << 0x3f
 13638: 99 bb 3f                 a4 = a4 >>a 0x3f
 13641: 8b aa 01                 i32 a3 = a3 >> 0x1
 13644: d2 9b 0b                 a4 = a4 & a2
 13647: d3 ba 0a                 a3 = a3 ^ a4
 13650: 97 ab 3f                 a4 = a3 << 0x3f
 13653: 99 bb 3f                 a4 = a4 >>a 0x3f
 13656: 8b aa 01                 i32 a3 = a3 >> 0x1
 13659: d2 9b 0b                 a4 = a4 & a2
 13662: d3 ba 0a                 a3 = a3 ^ a4
 13665: 97 ab 3f                 a4 = a3 << 0x3f
 13668: 99 bb 3f                 a4 = a4 >>a 0x3f
 13671: 8b aa 01                 i32 a3 = a3 >> 0x1
 13674: d2 9b 0b                 a4 = a4 & a2
 13677: d3 ba 0a                 a3 = a3 ^ a4
 13680: 97 ab 3f                 a4 = a3 << 0x3f
 13683: 99 bb 3f                 a4 = a4 >>a 0x3f
 13686: 8b aa 01                 i32 a3 = a3 >> 0x1
 13689: d2 9b 0b                 a4 = a4 & a2
 13692: d3 ba 0a                 a3 = a3 ^ a4
 13695: 97 ab 3f                 a4 = a3 << 0x3f
 13698: 99 bb 3f                 a4 = a4 >>a 0x3f
 13701: 8b aa 01                 i32 a3 = a3 >> 0x1
 13704: d2 9b 0b                 a4 = a4 & a2
 13707: d3 ba 0a                 a3 = a3 ^ a4
 13710: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 13713: 95 77 01                 a0 = a0 + 0x1
 13716: 52 08 7d ff              jump @1040 if a1 != 0
      :                          @1041
 13720: 85 a7 ff                 a0 = a3 ^ 0xffffffffffffffff
 13723: 32 00                    ret
      :                          @1042
 13725: 33 07                    a0 = 0
 13727: 28 0b 59                 jump @2331
      :                          @1043
 13730: 84 78 01                 a1 = a0 & 0x1
 13733: 52 08 1a                 jump @1048 if a1 != 0
      :                          @1044
 13736: 64 79                    a2 = a0
 13738: 01                       fallthrough
      :                          @1045
 13739: 64 98                    a1 = a2
 13741: 84 9a 01                 a3 = a2 & 0x1
 13744: 98 99 01                 a2 = a2 >> 0x1
 13747: 51 0a f8                 jump @1045 if a3 == 0
      :                          @1046
 13750: 98 77 01                 a0 = a0 >> 0x1
 13753: 53 18 09 0c              jump @1049 if a1 <u 9
      :                          @1047
 13757: 28 1b                    jump @1052
      :                          @1048
 13759: 64 78                    a1 = a0
 13761: 55 17 09 17              jump @1052 if a0 >=u 9
      :                          @1049
 13765: 33 09 01                 a2 = 0x1
 13768: ae 89 0e                 jump @1051 if a2 >=u a1
      :                          @1050
 13771: cb 87 07                 a0 = a0 /u a1
 13774: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 13777: ca 87 07                 a0 = a0 * a1
 13780: 32 00                    ret
      :                          @1051
 13782: 32 00                    ret
      :                          @1052
 13784: 33 09 03                 a2 = 0x3
 13787: 28 0b                    jump @1054
      :                          @1053
 13789: 95 99 02                 a2 = a2 + 0x2
 13792: ca 99 0a                 a3 = a2 * a2
 13795: ac a8 e2                 jump @1049 if a1 <u a3
      :                          @1054
 13798: 51 09 1e                 jump @1059 if a2 == 0
      :                          @1055
 13801: cd 98 0a                 a3 = a1 %u a2
 13804: 52 0a f1                 jump @1053 if a3 != 0
      :                          @1056
 13807: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 13810: 01                       fallthrough
      :                          @1057
 13811: cb 98 08                 a1 = a1 /u a2
 13814: cd 98 0b                 a4 = a1 %u a2
 13817: 51 0b fa                 jump @1057 if a4 == 0
      :                          @1058
 13820: cb 97 07                 a0 = a0 /u a2
 13823: ca a7 07                 a0 = a0 * a3
 13826: 28 db                    jump @1053
      :                          @1059
 13828: 00                       trap
      :                          @1060
 13829: 33 02 01                 t0 = 0x1
 13832: 55 17 04 16              jump @1063 if a0 >=u 4
      :                          @1061
 13836: 33 09 01                 a2 = 0x1
 13839: 01                       fallthrough
      :                          @1062
 13840: 88 7a 02                 a3 = a0 <u 0x2
 13843: 95 77 01                 a0 = a0 + 0x1
 13846: da a7 02                 t0 = a0 if a3 == 0
 13849: ca 92 07                 a0 = t0 * a2
 13852: 32 00                    ret
      :                          @1063
 13854: 33 0a 02                 a3 = 0x2
 13857: 33 09 01                 a2 = 0x1
 13860: 28 14                    jump @1065
      :                          @1064
 13862: 95 a8 fe                 a1 = a3 + 0xfffffffffffffffe
 13865: 88 88 01                 a1 = a1 <u 0x1
 13868: c9 8a 0a                 a3 = a3 - a1
 13871: 95 aa 02                 a3 = a3 + 0x2
 13874: ca aa 08                 a1 = a3 * a3
 13877: ac 87 db                 jump @1062 if a0 <u a1
      :                          @1065
 13880: 51 0a 24                 jump @1070 if a3 == 0
      :                          @1066
 13883: cd a7 0b                 a4 = a0 %u a3
 13886: 52 0b e8                 jump @1064 if a4 != 0
      :                          @1067
 13889: 33 0b 01                 a4 = 0x1
 13892: 33 0c 01                 a5 = 0x1
 13895: 01                       fallthrough
      :                          @1068
 13896: cb a7 07                 a0 = a0 /u a3
 13899: ca ac 0c                 a5 = a5 * a3
 13902: cd a7 08                 a1 = a0 %u a3
 13905: c8 cb 0b                 a4 = a4 + a5
 13908: 51 08 f4                 jump @1068 if a1 == 0
      :                          @1069
 13911: ca 9b 09                 a2 = a4 * a2
 13914: 28 cc                    jump @1064
      :                          @1070
 13916: 00                       trap
      :                          @1071
 13917: 33 09 04                 a2 = 0x4
 13920: 33 08 01                 a1 = 0x1
 13923: ae 97 0e                 jump @1073 if a0 >=u a2
      :                          @1072
 13926: 88 77 02                 a0 = a0 <u 0x2
 13929: 85 77 01                 a0 = a0 ^ 0x1
 13932: cf 78 07                 a0 = a1 << a0
 13935: 32 00                    ret
      :                          @1073
 13937: 33 09 02                 a2 = 0x2
 13940: 33 08 01                 a1 = 0x1
 13943: 28 14                    jump @1075
      :                          @1074
 13945: 95 9a fe                 a3 = a2 + 0xfffffffffffffffe
 13948: 88 aa 01                 a3 = a3 <u 0x1
 13951: c9 a9 09                 a2 = a2 - a3
 13954: 95 99 02                 a2 = a2 + 0x2
 13957: ca 99 0a                 a3 = a2 * a2
 13960: ac a7 de                 jump @1072 if a0 <u a3
      :                          @1075
 13963: 51 09 21                 jump @1080 if a2 == 0
      :                          @1076
 13966: cd 97 0a                 a3 = a0 %u a2
 13969: 52 0a e8                 jump @1074 if a3 != 0
      :                          @1077
 13972: 33 0a ff                 a3 = 0xffffffffffffffff
 13975: 01                       fallthrough
      :                          @1078
 13976: cb 97 07                 a0 = a0 /u a2
 13979: cd 97 0b                 a4 = a0 %u a2
 13982: 95 aa 01                 a3 = a3 + 0x1
 13985: 51 0b f7                 jump @1078 if a4 == 0
      :                          @1079
 13988: 95 aa 02                 a3 = a3 + 0x2
 13991: ca 8a 08                 a1 = a3 * a1
 13994: 28 cf                    jump @1074
      :                          @1080
 13996: 00                       trap
      :                          @1081
 13997: 33 08 01                 a1 = 0x1
 14000: 55 17 04 13              jump @1085 if a0 >=u 4
      :                          @1082
 14004: 64 7a                    a3 = a0
 14006: 01                       fallthrough
      :                          @1083
 14007: 88 a9 02                 a2 = a3 <u 0x2
 14010: 9a 87                    a0 = -a1
 14012: db 98 07                 a0 = a1 if a2 != 0
 14015: 32 00                    ret
      :                          @1084
 14017: 32 00                    ret
      :                          @1085
 14019: 33 09 02                 a2 = 0x2
 14022: 33 08 01                 a1 = 0x1
 14025: 28 17                    jump @1088
      :                          @1086
 14027: 64 7a                    a3 = a0
 14029: 01                       fallthrough
      :                          @1087
 14030: 95 9b fe                 a4 = a2 + 0xfffffffffffffffe
 14033: 88 bb 01                 a4 = a4 <u 0x1
 14036: c9 b9 09                 a2 = a2 - a4
 14039: 95 99 02                 a2 = a2 + 0x2
 14042: ca 99 0b                 a4 = a2 * a2
 14045: ac ba da                 jump @1083 if a3 <u a4
      :                          @1088
 14048: 51 09 18                 jump @1092 if a2 == 0
      :                          @1089
 14051: cb 97 0a                 a3 = a0 /u a2
 14054: ca 9a 0b                 a4 = a3 * a2
 14057: ab b7 e2                 jump @1086 if a0 != a4
      :                          @1090
 14060: cd 9a 07                 a0 = a3 %u a2
 14063: 51 07 d2                 jump @1084 if a0 == 0
      :                          @1091
 14066: 9a 88                    a1 = -a1
 14068: 64 a7                    a0 = a3
 14070: 28 d8                    jump @1087
      :                          @1092
 14072: 00                       trap
      :                          @1093
 14073: 82 9a                    a3 = u64 [a2]
 14075: c8 6a 05                 s0 = a3 + s1
 14078: ac a5 f9 01              jump @1138 if s0 <u a3
      :                          @1094
 14082: 95 5b 01                 a4 = s0 + 0x1
 14085: 88 bc 01                 a5 = a4 <u 0x1
 14088: d8 b2 0b                 a4 = t0 <u a4
 14091: d4 cb 0b                 a4 = a4 | a5
 14094: 52 0b e9 01              jump @1138 if a4 != 0
      :                          @1095
 14098: 82 9b                    a4 = u64 [a2]
 14100: ab ab e5                 jump @1093 if a4 != a3
      :                          @1096
 14103: 7b 95                    u64 [a2] = s0
 14105: 33 0c                    a5 = 0
 14107: 7b 18 10                 u64 [sp + 0x10] = a1
 14110: 7b 17                    u64 [sp] = a0
 14112: 33 07 f0 02 03           a0 = 0x302f0
 14117: 7b 17 20                 u64 [sp + 0x20] = a0
 14120: 95 78 00 00 01           a1 = a0 + 0x10000
 14125: c9 58 07                 a0 = a1 - s0
 14128: 7b 17 18                 u64 [sp + 0x18] = a0
 14131: 33 08                    a1 = 0
 14133: 64 69                    a2 = s1
 14135: 50 20 e8 00 7b 7d        ra = 232, jump @2921
      :                          @1097 [@dyn 116]
 14141: 33 03 00 00 01           t1 = 0x10000
 14146: 82 12 20                 t0 = u64 [sp + 0x20]
 14149: 49 11 28                 u64 [sp + 40] = 0
 14152: 49 11 30 08              u64 [sp + 48] = 0x8
 14156: 49 11 38                 u64 [sp + 56] = 0
 14159: 7b 16 08                 u64 [sp + 0x8] = s1
 14162: 97 69 02                 a2 = s1 << 0x2
 14165: c8 32 07                 a0 = t0 + t1
 14168: 01                       fallthrough
      :                          @1098
 14169: 82 78                    a1 = u64 [a0]
 14171: c8 98 0a                 a3 = a1 + a2
 14174: ac 8a 9a 01              jump @1139 if a3 <u a1
      :                          @1099
 14178: 95 ab 04                 a4 = a3 + 0x4
 14181: d8 ab 0c                 a5 = a4 <u a3
 14184: d8 b3 0b                 a4 = t1 <u a4
 14187: d4 cb 0b                 a4 = a4 | a5
 14190: 52 0b 8a 01              jump @1139 if a4 != 0
      :                          @1100
 14194: c9 a2 0b                 a4 = t0 - a3
 14197: c8 3b 0b                 a4 = a4 + t1
 14200: 84 bc 03                 a5 = a4 & 0x3
 14203: c8 ca 0a                 a3 = a3 + a5
 14206: 01                       fallthrough
      :                          @1101
 14207: 82 76                    s1 = u64 [a0]
 14209: ab 86 d8                 jump @1098 if s1 != a1
      :                          @1102
 14212: 7b 7a                    u64 [a0] = a3
 14214: c9 cb 05                 s0 = a4 - a5
 14217: 64 57                    a0 = s0
 14219: 33 08                    a1 = 0
 14221: 50 20 ea 00 25 7d        ra = 234, jump @2921
      :                          @1103 [@dyn 117]
 14227: 64 50                    ra = s0
 14229: 33 05 02                 s0 = 0x2
 14232: 48 10 04 01              u32 [ra + 4] = 0x1
 14236: 82 14 10                 t2 = u64 [sp + 0x10]
 14239: ae 54 20                 jump @1105 if t2 >=u s0
      :                          @1104
 14242: 82 16 08                 s1 = u64 [sp + 0x8]
 14245: 82 17                    a0 = u64 [sp]
 14247: 7b 76                    u64 [a0] = s1
 14249: 7b 70 08                 u64 [a0 + 0x8] = ra
 14252: 7b 76 10                 u64 [a0 + 0x10] = s1
 14255: 82 13 18                 t1 = u64 [sp + 0x18]
 14258: 33 07 f0 02 03           a0 = 0x302f0
 14263: 95 77 00 00 01           a0 = a0 + 0x10000
 14268: 28 15 01                 jump @1131
      :                          @1105
 14271: 33 08                    a1 = 0
 14273: 49 11 20 08              u64 [sp + 32] = 0x8
 14277: 82 13 18                 t1 = u64 [sp + 0x18]
 14280: 28 1e                    jump @1108
      :                          @1106
 14282: 97 66 02                 s1 = s1 << 0x2
 14285: c8 06 06                 s1 = s1 + ra
 14288: 48 06                    u32 [s1 + 0] = 0
 14290: 01                       fallthrough
      :                          @1107
 14291: d8 45 07                 a0 = s0 <u t2
 14294: c8 75 05                 s0 = s0 + a0
 14297: d8 54 09                 a2 = t2 <u s0
 14300: 85 99 01                 a2 = a2 ^ 0x1
 14303: d2 97 07                 a0 = a0 & a2
 14306: 51 07 9a 00              jump @1123 if a0 == 0
      :                          @1108
 14310: ac 54 10 01              jump @1137 if t2 <u s0
      :                          @1109
 14314: c8 53 07                 a0 = t1 + s0
 14317: 7c 77                    a0 = u8 [a0]
 14319: 51 07 08                 jump @1112 if a0 == 0
      :                          @1110
 14322: 52 08 4a                 jump @1117 if a1 != 0
      :                          @1111
 14325: 28 de                    jump @1107
      :                          @1112
 14327: 82 17 28                 a0 = u64 [sp + 0x28]
 14330: ab 78 1e                 jump @1115 if a1 != a0
      :                          @1113
 14333: 95 17 28                 a0 = sp + 0x28
 14336: 64 06                    s1 = ra
 14338: 50 20 ec 00 e4 e8        ra = 236, jump @694
      :                          @1114 [@dyn 118]
 14344: 64 60                    ra = s1
 14346: 82 14 10                 t2 = u64 [sp + 0x10]
 14349: 82 13 18                 t1 = u64 [sp + 0x18]
 14352: 82 18 38                 a1 = u64 [sp + 0x38]
 14355: 82 19 30                 a2 = u64 [sp + 0x30]
 14358: 28 06                    jump @1116
      :                          @1115
 14360: 82 19 20                 a2 = u64 [sp + 0x20]
 14363: 01                       fallthrough
      :                          @1116
 14364: 97 87 03                 a0 = a1 << 0x3
 14367: c8 97 07                 a0 = a0 + a2
 14370: 7b 75                    u64 [a0] = s0
 14372: 95 88 01                 a1 = a1 + 0x1
 14375: 7b 18 38                 u64 [sp + 0x38] = a1
 14378: 82 17 30                 a0 = u64 [sp + 0x30]
 14381: 7b 17 20                 u64 [sp + 0x20] = a0
 14384: 97 57 02                 a0 = s0 << 0x2
 14387: c8 07 07                 a0 = a0 + ra
 14390: 48 07 ff                 u32 [a0 + 0] = 0xffffffffffffffff
 14393: 51 08 9a                 jump @1107 if a1 == 0
      :                          @1117
 14396: 97 59 02                 a2 = s0 << 0x2
 14399: c8 09 09                 a2 = a2 + ra
 14402: 97 8a 03                 a3 = a1 << 0x3
 14405: 82 1b 20                 a4 = u64 [sp + 0x20]
 14408: 01                       fallthrough
      :                          @1118
 14409: 82 b7                    a0 = u64 [a4]
 14411: ca 57 06                 s1 = a0 * s0
 14414: ac 64 85                 jump @1107 if t2 <u s1
      :                          @1119
 14417: c8 63 0c                 a5 = t1 + s1
 14420: 33 02 01                 t0 = 0x1
 14423: 78 c2                    u8 [a5] = t0
 14425: 51 07 9c 00              jump @1136 if a0 == 0
      :                          @1120
 14429: cd 75 07                 a0 = s0 %u a0
 14432: 51 07 6a ff              jump @1106 if a0 == 0
      :                          @1121
 14436: 81 97                    a0 = i32 [a2]
 14438: 95 bb 08                 a4 = a4 + 0x8
 14441: 97 66 02                 s1 = s1 << 0x2
 14444: c8 06 06                 s1 = s1 + ra
 14447: 8d 77                    i32 a0 = -a0
 14449: 95 aa f8                 a3 = a3 + 0xfffffffffffffff8
 14452: 7a 67                    u32 [s1] = a0
 14454: 52 0a d3                 jump @1118 if a3 != 0
      :                          @1122
 14457: 28 5a ff                 jump @1107
      :                          @1123
 14460: 82 18 28                 a1 = u64 [sp + 0x28]
 14463: 82 16 08                 s1 = u64 [sp + 0x8]
 14466: 82 17                    a0 = u64 [sp]
 14468: 7b 76                    u64 [a0] = s1
 14470: 7b 70 08                 u64 [a0 + 0x8] = ra
 14473: 7b 76 10                 u64 [a0 + 0x10] = s1
 14476: 82 15 20                 s0 = u64 [sp + 0x20]
 14479: 51 08 37                 jump @1130 if a1 == 0
      :                          @1124
 14482: 56 28 00 20 34           jump @1130 if a1 >u 8192
      :                          @1125
 14487: 97 88 03                 a1 = a1 << 0x3
 14490: 33 09 f0 02 03           a2 = 0x302f0
 14495: 95 99 00 00 01           a2 = a2 + 0x10000
 14500: 01                       fallthrough
      :                          @1126
 14501: 82 97                    a0 = u64 [a2]
 14503: c9 79 0a                 a3 = a2 - a0
 14506: ab 5a 1c                 jump @1130 if a3 != s0
      :                          @1127
 14509: c9 87 0a                 a3 = a0 - a1
 14512: 01                       fallthrough
      :                          @1128
 14513: 82 9b                    a4 = u64 [a2]
 14515: ab 7b f2                 jump @1126 if a4 != a0
      :                          @1129
 14518: 7b 9a                    u64 [a2] = a3
 14520: 33 0c                    a5 = 0
 14522: 33 07 f0 02 03           a0 = 0x302f0
 14527: 95 77 00 00 01           a0 = a0 + 0x10000
 14532: 28 0d                    jump @1131
      :                          @1130
 14534: 33 07 f0 02 03           a0 = 0x302f0
 14539: 95 77 00 00 01           a0 = a0 + 0x10000
 14544: 01                       fallthrough
      :                          @1131
 14545: 82 78                    a1 = u64 [a0]
 14547: c9 87 09                 a2 = a0 - a1
 14550: ab 39 11                 jump @1135 if a2 != t1
      :                          @1132
 14553: c9 68 09                 a2 = a1 - s1
 14556: 01                       fallthrough
      :                          @1133
 14557: 82 7a                    a3 = u64 [a0]
 14559: ab 8a f2                 jump @1131 if a3 != a1
      :                          @1134
 14562: 7b 79                    u64 [a0] = a2
 14564: 33 0b                    a4 = 0
 14566: 01                       fallthrough
      :                          @1135
 14567: 82 10 50                 ra = u64 [sp + 0x50]
 14570: 82 15 48                 s0 = u64 [sp + 0x48]
 14573: 82 16 40                 s1 = u64 [sp + 0x40]
 14576: 95 11 58                 sp = sp + 0x58
 14579: 32 00                    ret
      :                          @1136
 14581: 00                       trap
      :                          @1137
 14582: 00                       trap
      :                          @1138
 14583: 00                       trap
      :                          @1139
 14584: 00                       trap
      :                          @1140
 14585: c8 98 08                 a1 = a1 + a2
 14588: 01                       fallthrough
      :                          @1141
 14589: 95 99 01                 a2 = a2 + 0x1
 14592: ca 99 0a                 a3 = a2 * a2
 14595: ac a7 1a                 jump @1146 if a0 <u a3
      :                          @1142
 14598: 51 09 1b                 jump @1147 if a2 == 0
      :                          @1143
 14601: cb 97 0a                 a3 = a0 /u a2
 14604: ca 9a 0b                 a4 = a3 * a2
 14607: ab 7b ee                 jump @1141 if a4 != a0
      :                          @1144
 14610: aa a9 e7                 jump @1140 if a2 == a3
      :                          @1145
 14613: c8 98 08                 a1 = a1 + a2
 14616: c8 a8 08                 a1 = a1 + a3
 14619: 28 e2                    jump @1141
      :                          @1146
 14621: 64 87                    a0 = a1
 14623: 32 00                    ret
      :                          @1147
 14625: 00                       trap
      :                          @1148
 14626: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 14636: d3 79 09                 a2 = a2 ^ a0
 14639: e1 89 09                 a2 = a2 | ~a1
 14642: 51 09 57                 jump @1155 if a2 == 0
      :                          @1149
 14645: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 14648: 33 0b 03                 a4 = 0x3
 14651: 8e 9a                    a3 = a2 >u 0
 14653: ae b8 16                 jump @1151 if a1 >=u a4
      :                          @1150
 14656: 95 a8 ff                 a1 = a3 + 0xffffffffffffffff
 14659: d3 a9 09                 a2 = a2 ^ a3
 14662: 8e 97                    a0 = a2 >u 0
 14664: 95 79 ff                 a2 = a0 + 0xffffffffffffffff
 14667: 33 07 01                 a0 = 0x1
 14670: db 89 07                 a0 = a2 if a1 != 0
 14673: 32 00                    ret
      :                          @1151
 14675: 98 9b 3f                 a4 = a2 >> 0x3f
 14678: c8 9b 0b                 a4 = a4 + a2
 14681: 99 bb 01                 a4 = a4 >>a 0x1
 14684: ce 87 02                 t0 = a0 %s a1
 14687: 9a 8c                    a5 = -a1
 14689: e3 c8 0c                 a5 = maxs(a1, a5)
 14692: 99 27 3f                 a0 = t0 >>a 0x3f
 14695: d2 c7 07                 a0 = a0 & a5
 14698: c8 27 07                 a0 = a0 + t0
 14701: 28 0b                    jump @1153
      :                          @1152
 14703: 98 bb 01                 a4 = a4 >> 0x1
 14706: ca 77 07                 a0 = a0 * a0
 14709: 51 0b cb                 jump @1150 if a4 == 0
      :                          @1153
 14712: 84 bc 01                 a5 = a4 & 0x1
 14715: cd 87 07                 a0 = a0 %u a1
 14718: 51 0c f1                 jump @1152 if a5 == 0
      :                          @1154
 14721: ca a7 0a                 a3 = a0 * a3
 14724: cd 8a 0a                 a3 = a3 %u a1
 14727: 28 e8                    jump @1152
      :                          @1155
 14729: 00                       trap
      :                          @1156
 14730: 51 07 eb 00              jump @1174 if a0 == 0
      :                          @1157
 14734: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 14737: 98 24 01                 t2 = t0 >> 0x1
 14740: 33 03 01                 t1 = 0x1
 14743: 64 7b                    a4 = a0
 14745: 64 4a                    a3 = t2
 14747: 28 0b                    jump @1159
      :                          @1158
 14749: 98 aa 01                 a3 = a3 >> 0x1
 14752: ca 99 0b                 a4 = a2 * a2
 14755: 51 0a 14                 jump @1161 if a3 == 0
      :                          @1159
 14758: 84 ac 01                 a5 = a3 & 0x1
 14761: cd 8b 09                 a2 = a4 %u a1
 14764: 51 0c f1                 jump @1158 if a5 == 0
      :                          @1160
 14767: ca 39 0b                 a4 = a2 * t1
 14770: cd 8b 03                 t1 = a4 %u a1
 14773: 28 e8                    jump @1158
      :                          @1161
 14775: 33 0a 01                 a3 = 0x1
 14778: ab a3 c3 00              jump @1175 if t1 != a3
      :                          @1162
 14782: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 14785: 7b 15 08                 u64 [sp + 0x8] = s0
 14788: 7b 16                    u64 [sp] = s1
 14790: cd 87 07                 a0 = a0 %u a1
 14793: 01                       fallthrough
      :                          @1163
 14794: ca aa 09                 a2 = a3 * a3
 14797: c8 89 09                 a2 = a2 + a1
 14800: c9 79 09                 a2 = a2 - a0
 14803: cd 89 03                 t1 = a2 %u a1
 14806: 33 0c 01                 a5 = 0x1
 14809: 64 39                    a2 = t1
 14811: 64 4b                    a4 = t2
 14813: 28 0b                    jump @1165
      :                          @1164
 14815: 98 bb 01                 a4 = a4 >> 0x1
 14818: ca 99 09                 a2 = a2 * a2
 14821: 51 0b 14                 jump @1167 if a4 == 0
      :                          @1165
 14824: 84 b5 01                 s0 = a4 & 0x1
 14827: cd 89 09                 a2 = a2 %u a1
 14830: 51 05 f1                 jump @1164 if s0 == 0
      :                          @1166
 14833: ca c9 0c                 a5 = a2 * a5
 14836: cd 8c 0c                 a5 = a5 %u a1
 14839: 28 e8                    jump @1164
      :                          @1167
 14841: aa 2c 0c                 jump @1170 if a5 == t0
      :                          @1168
 14844: 95 aa 01                 a3 = a3 + 0x1
 14847: ab 8a cb                 jump @1163 if a3 != a1
      :                          @1169
 14850: 33 0a                    a3 = 0
 14852: 01                       fallthrough
      :                          @1170
 14853: 33 0c                    a5 = 0
 14855: 95 87 01                 a0 = a1 + 0x1
 14858: 33 0b 01                 a4 = 0x1
 14861: 33 02 04                 t0 = 0x4
 14864: 33 04 01                 t2 = 0x1
 14867: 28 2e                    jump @1172
      :                          @1171
 14869: 98 97 01                 a0 = a2 >> 0x1
 14872: ca aa 05                 s0 = a3 * a3
 14875: cd 85 05                 s0 = s0 %u a1
 14878: ca bb 06                 s1 = a4 * a4
 14881: cd 86 06                 s1 = s1 %u a1
 14884: ca 36 06                 s1 = s1 * t1
 14887: cd 86 06                 s1 = s1 %u a1
 14890: c8 65 05                 s0 = s0 + s1
 14893: ca ba 0a                 a3 = a3 * a4
 14896: cd 85 05                 s0 = s0 %u a1
 14899: cd 8a 0a                 a3 = a3 %u a1
 14902: 97 aa 01                 a3 = a3 << 0x1
 14905: cd 8a 0b                 a4 = a3 %u a1
 14908: 64 5a                    a3 = s0
 14910: ac 29 45                 jump @1176 if a2 <u t0
      :                          @1172
 14913: 64 79                    a2 = a0
 14915: 84 77 02                 a0 = a0 & 0x2
 14918: 51 07 cf                 jump @1171 if a0 == 0
      :                          @1173
 14921: ca 4a 07                 a0 = a3 * t2
 14924: cd 87 07                 a0 = a0 %u a1
 14927: ca bc 05                 s0 = a5 * a4
 14930: cd 85 05                 s0 = s0 %u a1
 14933: ca 35 05                 s0 = s0 * t1
 14936: cd 85 05                 s0 = s0 %u a1
 14939: c8 57 07                 a0 = a0 + s0
 14942: ca b4 05                 s0 = t2 * a4
 14945: cd 87 04                 t2 = a0 %u a1
 14948: cd 85 07                 a0 = s0 %u a1
 14951: ca ca 0c                 a5 = a3 * a5
 14954: cd 8c 0c                 a5 = a5 %u a1
 14957: c8 c7 07                 a0 = a0 + a5
 14960: cd 87 0c                 a5 = a0 %u a1
 14963: 28 a2                    jump @1171
      :                          @1174
 14965: 33 07 01                 a0 = 0x1
 14968: 33 08                    a1 = 0
 14970: 28 63 5c                 jump @2430
      :                          @1175
 14973: 33 07                    a0 = 0
 14975: 64 48                    a1 = t2
 14977: 32 00                    ret
      :                          @1176
 14979: 33 07 01                 a0 = 0x1
 14982: 82 15 08                 s0 = u64 [sp + 0x8]
 14985: 82 16                    s1 = u64 [sp]
 14987: 95 11 10                 sp = sp + 0x10
 14990: 64 48                    a1 = t2
 14992: 32 00                    ret
      :                          @1177
 14994: 51 17 02 2d              jump @1182 if a0 == 2
      :                          @1178
 14998: 84 78 3f                 a1 = a0 & 0x3f
 15001: 51 08 2c                 jump @1183 if a1 == 0
      :                          @1179
 15004: 9b 78 ff                 a1 = 0xffffffffffffffff << a0
 15007: 85 88 ff                 a1 = a1 ^ 0xffffffffffffffff
 15010: 95 77 fe                 a0 = a0 + 0xfffffffffffffffe
 15013: 33 09 04                 a2 = 0x4
 15016: 01                       fallthrough
      :                          @1180
 15017: ca 99 09                 a2 = a2 * a2
 15020: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 15023: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 15026: cd 89 09                 a2 = a2 %u a1
 15029: 52 07 f4                 jump @1180 if a0 != 0
      :                          @1181
 15032: 88 98 01                 a1 = a2 <u 0x1
 15035: 64 87                    a0 = a1
 15037: 32 00                    ret
      :                          @1182
 15039: 33 07 01                 a0 = 0x1
 15042: 28 91 30                 jump @2021
      :                          @1183
 15045: 00                       trap
      :                          @1184
 15046: 51 17 01 14              jump @1187 if a0 == 1
      :                          @1185
 15050: 52 07 1e                 jump @1188 if a0 != 0
      :                          @1186
 15053: 33 07 02                 a0 = 0x2
 15056: cd 97 03                 t1 = a0 %u a2
 15059: 33 07                    a0 = 0
 15061: 64 38                    a1 = t1
 15063: 28 a6 31                 jump @2034
      :                          @1187
 15066: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 15069: 8e 93                    t1 = a2 >u 0
 15071: 64 3b                    a4 = t1
 15073: 64 b7                    a0 = a4
 15075: 64 38                    a1 = t1
 15077: 28 98 31                 jump @2034
      :                          @1188
 15080: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15083: 7b 10 18                 u64 [sp + 0x18] = ra
 15086: 7b 15 10                 u64 [sp + 0x10] = s0
 15089: 7b 16 08                 u64 [sp + 0x8] = s1
 15092: 33 04                    t2 = 0
 15094: 95 9a ff                 a3 = a2 + 0xffffffffffffffff
 15097: 8e a3                    t1 = a3 >u 0
 15099: 33 0c 02                 a5 = 0x2
 15102: cd 9c 05                 s0 = a5 %u a2
 15105: 9a 9a                    a3 = -a2
 15107: e3 a9 02                 t0 = maxs(a2, a3)
 15110: 64 3a                    a3 = t1
 15112: 01                       fallthrough
      :                          @1189
 15113: ca 85 0b                 a4 = s0 * a1
 15116: d8 7c 05                 s0 = a5 <u a0
 15119: 85 50 01                 ra = s0 ^ 0x1
 15122: c8 5c 0c                 a5 = a5 + s0
 15125: ca 84 05                 s0 = t2 * a1
 15128: c9 5a 05                 s0 = a3 - s0
 15131: c9 b3 06                 s1 = t1 - a4
 15134: ce 95 05                 s0 = s0 %s a2
 15137: 99 5b 3f                 a4 = s0 >>a 0x3f
 15140: d2 2b 0b                 a4 = a4 & t0
 15143: c8 5b 0b                 a4 = a4 + s0
 15146: ce 96 04                 t2 = s1 %s a2
 15149: d8 c7 05                 s0 = a0 <u a5
 15152: d4 50 00                 ra = ra | s0
 15155: 99 46 3f                 s1 = t2 >>a 0x3f
 15158: d2 26 06                 s1 = s1 & t0
 15161: 64 35                    s0 = t1
 15163: c8 46 03                 t1 = s1 + t2
 15166: 64 a4                    t2 = a3
 15168: 64 ba                    a3 = a4
 15170: 51 00 c7                 jump @1189 if ra == 0
      :                          @1190
 15173: 82 10 18                 ra = u64 [sp + 0x18]
 15176: 82 15 10                 s0 = u64 [sp + 0x10]
 15179: 82 16 08                 s1 = u64 [sp + 0x8]
 15182: 95 11 20                 sp = sp + 0x20
 15185: 64 b7                    a0 = a4
 15187: 64 38                    a1 = t1
 15189: 32 00                    ret
      :                          @1191
 15191: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 15194: 7b 10 18                 u64 [sp + 0x18] = ra
 15197: 7b 15 10                 u64 [sp + 0x10] = s0
 15200: 7b 16 08                 u64 [sp + 0x8] = s1
 15203: 95 74 ff                 t2 = a0 + 0xffffffffffffffff
 15206: 84 48 01                 a1 = t2 & 0x1
 15209: 52 08 81 00              jump @1206 if a1 != 0
      :                          @1192
 15213: 33 09 08 01 01           a2 = 0x10108
 15218: 95 93 38                 t1 = a2 + 0x38
 15221: 33 02 01                 t0 = 0x1
 15224: 28 06                    jump @1194
      :                          @1193
 15226: aa 39 27 02              jump @1249 if a2 == t1
      :                          @1194
 15230: 82 9a                    a3 = u64 [a2]
 15232: cd 7a 08                 a1 = a3 %u a0
 15235: 51 08 1e 02              jump @1249 if a1 == 0
      :                          @1195
 15239: 33 0c                    a5 = 0
 15241: 95 99 08                 a2 = a2 + 0x8
 15244: 33 05 01                 s0 = 0x1
 15247: 64 48                    a1 = t2
 15249: 01                       fallthrough
      :                          @1196
 15250: 64 5b                    a4 = s0
 15252: 84 86 02                 s1 = a1 & 0x2
 15255: 98 88 01                 a1 = a1 >> 0x1
 15258: 83 cc 01                 i32 a5 = a5 + 0x1
 15261: 83 55 01                 i32 s0 = s0 + 0x1
 15264: 51 06 f2                 jump @1196 if s1 == 0
      :                          @1197
 15267: 33 0c 01                 a5 = 0x1
 15270: 28 0b                    jump @1199
      :                          @1198
 15272: 98 88 01                 a1 = a1 >> 0x1
 15275: ca aa 0a                 a3 = a3 * a3
 15278: 51 08 14                 jump @1201 if a1 == 0
      :                          @1199
 15281: 84 85 01                 s0 = a1 & 0x1
 15284: cd 7a 0a                 a3 = a3 %u a0
 15287: 51 05 f1                 jump @1198 if s0 == 0
      :                          @1200
 15290: ca ca 0c                 a5 = a3 * a5
 15293: cd 7c 0c                 a5 = a5 %u a0
 15296: 28 e8                    jump @1198
      :                          @1201
 15298: 95 c8 ff                 a1 = a5 + 0xffffffffffffffff
 15301: 88 88 01                 a1 = a1 <u 0x1
 15304: d3 4c 0a                 a3 = a5 ^ t2
 15307: 88 aa 01                 a3 = a3 <u 0x1
 15310: d4 a8 08                 a1 = a1 | a3
 15313: 52 08 a9                 jump @1193 if a1 != 0
      :                          @1202
 15316: e3 2b 08                 a1 = maxs(a4, t0)
 15319: 01                       fallthrough
      :                          @1203
 15320: 83 88 ff                 i32 a1 = a1 + 0xffffffffffffffff
 15323: 51 08 b6 01              jump @1248 if a1 == 0
      :                          @1204
 15327: ca cc 0a                 a3 = a5 * a5
 15330: cd 7a 0c                 a5 = a3 %u a0
 15333: ab 4c f3                 jump @1203 if a5 != t2
      :                          @1205
 15336: 28 92                    jump @1193
      :                          @1206
 15338: 33 08 01                 a1 = 0x1
 15341: 33 0a 02                 a3 = 0x2
 15344: 64 49                    a2 = t2
 15346: 28 0b                    jump @1208
      :                          @1207
 15348: 98 99 01                 a2 = a2 >> 0x1
 15351: ca aa 0a                 a3 = a3 * a3
 15354: 51 09 14                 jump @1210 if a2 == 0
      :                          @1208
 15357: 84 9b 01                 a4 = a2 & 0x1
 15360: cd 7a 0a                 a3 = a3 %u a0
 15363: 51 0b f1                 jump @1207 if a4 == 0
      :                          @1209
 15366: ca 8a 08                 a1 = a3 * a1
 15369: cd 78 08                 a1 = a1 %u a0
 15372: 28 e8                    jump @1207
      :                          @1210
 15374: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15377: 8e 99                    a2 = a2 >u 0
 15379: d3 48 08                 a1 = a1 ^ t2
 15382: 8e 88                    a1 = a1 >u 0
 15384: d2 98 08                 a1 = a1 & a2
 15387: 52 08 73 01              jump @1247 if a1 != 0
      :                          @1211
 15391: 33 0a 45 01              a3 = 0x145
 15395: cd 7a 08                 a1 = a3 %u a0
 15398: 51 08 7b 01              jump @1249 if a1 == 0
      :                          @1212
 15402: 33 08 01                 a1 = 0x1
 15405: 64 49                    a2 = t2
 15407: 28 0b                    jump @1214
      :                          @1213
 15409: 98 99 01                 a2 = a2 >> 0x1
 15412: ca aa 0a                 a3 = a3 * a3
 15415: 51 09 14                 jump @1216 if a2 == 0
      :                          @1214
 15418: 84 9b 01                 a4 = a2 & 0x1
 15421: cd 7a 0a                 a3 = a3 %u a0
 15424: 51 0b f1                 jump @1213 if a4 == 0
      :                          @1215
 15427: ca 8a 08                 a1 = a3 * a1
 15430: cd 78 08                 a1 = a1 %u a0
 15433: 28 e8                    jump @1213
      :                          @1216
 15435: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15438: 8e 99                    a2 = a2 >u 0
 15440: d3 48 08                 a1 = a1 ^ t2
 15443: 8e 88                    a1 = a1 >u 0
 15445: d2 98 08                 a1 = a1 & a2
 15448: 52 08 36 01              jump @1247 if a1 != 0
      :                          @1217
 15452: 33 0a 9f 24              a3 = 0x249f
 15456: cd 7a 08                 a1 = a3 %u a0
 15459: 51 08 3e 01              jump @1249 if a1 == 0
      :                          @1218
 15463: 33 08 01                 a1 = 0x1
 15466: 64 49                    a2 = t2
 15468: 28 0b                    jump @1220
      :                          @1219
 15470: 98 99 01                 a2 = a2 >> 0x1
 15473: ca aa 0a                 a3 = a3 * a3
 15476: 51 09 14                 jump @1222 if a2 == 0
      :                          @1220
 15479: 84 9b 01                 a4 = a2 & 0x1
 15482: cd 7a 0a                 a3 = a3 %u a0
 15485: 51 0b f1                 jump @1219 if a4 == 0
      :                          @1221
 15488: ca 8a 08                 a1 = a3 * a1
 15491: cd 78 08                 a1 = a1 %u a0
 15494: 28 e8                    jump @1219
      :                          @1222
 15496: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15499: 8e 99                    a2 = a2 >u 0
 15501: d3 48 08                 a1 = a1 ^ t2
 15504: 8e 88                    a1 = a1 >u 0
 15506: d2 98 08                 a1 = a1 & a2
 15509: 52 08 f9 00              jump @1247 if a1 != 0
      :                          @1223
 15513: 33 0a 12 6e              a3 = 0x6e12
 15517: cd 7a 08                 a1 = a3 %u a0
 15520: 51 08 01 01              jump @1249 if a1 == 0
      :                          @1224
 15524: 33 08 01                 a1 = 0x1
 15527: 64 49                    a2 = t2
 15529: 28 0b                    jump @1226
      :                          @1225
 15531: 98 99 01                 a2 = a2 >> 0x1
 15534: ca aa 0a                 a3 = a3 * a3
 15537: 51 09 14                 jump @1228 if a2 == 0
      :                          @1226
 15540: 84 9b 01                 a4 = a2 & 0x1
 15543: cd 7a 0a                 a3 = a3 %u a0
 15546: 51 0b f1                 jump @1225 if a4 == 0
      :                          @1227
 15549: ca 8a 08                 a1 = a3 * a1
 15552: cd 78 08                 a1 = a1 %u a0
 15555: 28 e8                    jump @1225
      :                          @1228
 15557: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15560: 8e 99                    a2 = a2 >u 0
 15562: d3 48 08                 a1 = a1 ^ t2
 15565: 8e 88                    a1 = a1 >u 0
 15567: d2 98 08                 a1 = a1 & a2
 15570: 52 08 bc 00              jump @1247 if a1 != 0
      :                          @1229
 15574: 33 0a d7 e0 06           a3 = 0x6e0d7
 15579: cd 7a 08                 a1 = a3 %u a0
 15582: 51 08 c3 00              jump @1249 if a1 == 0
      :                          @1230
 15586: 33 08 01                 a1 = 0x1
 15589: 64 49                    a2 = t2
 15591: 28 0b                    jump @1232
      :                          @1231
 15593: 98 99 01                 a2 = a2 >> 0x1
 15596: ca aa 0a                 a3 = a3 * a3
 15599: 51 09 14                 jump @1234 if a2 == 0
      :                          @1232
 15602: 84 9b 01                 a4 = a2 & 0x1
 15605: cd 7a 0a                 a3 = a3 %u a0
 15608: 51 0b f1                 jump @1231 if a4 == 0
      :                          @1233
 15611: ca 8a 08                 a1 = a3 * a1
 15614: cd 78 08                 a1 = a1 %u a0
 15617: 28 e8                    jump @1231
      :                          @1234
 15619: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15622: 8e 99                    a2 = a2 >u 0
 15624: d3 48 08                 a1 = a1 ^ t2
 15627: 8e 88                    a1 = a1 >u 0
 15629: d2 98 08                 a1 = a1 & a2
 15632: 52 08 7e                 jump @1247 if a1 != 0
      :                          @1235
 15635: 33 0a 18 3d 95 00        a3 = 0x953d18
 15641: cd 7a 08                 a1 = a3 %u a0
 15644: 51 08 85 00              jump @1249 if a1 == 0
      :                          @1236
 15648: 33 08 01                 a1 = 0x1
 15651: 64 49                    a2 = t2
 15653: 28 0b                    jump @1238
      :                          @1237
 15655: 98 99 01                 a2 = a2 >> 0x1
 15658: ca aa 0a                 a3 = a3 * a3
 15661: 51 09 14                 jump @1240 if a2 == 0
      :                          @1238
 15664: 84 9b 01                 a4 = a2 & 0x1
 15667: cd 7a 0a                 a3 = a3 %u a0
 15670: 51 0b f1                 jump @1237 if a4 == 0
      :                          @1239
 15673: ca 8a 08                 a1 = a3 * a1
 15676: cd 78 08                 a1 = a1 %u a0
 15679: 28 e8                    jump @1237
      :                          @1240
 15681: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15684: 8e 99                    a2 = a2 >u 0
 15686: d3 48 08                 a1 = a1 ^ t2
 15689: 8e 88                    a1 = a1 >u 0
 15691: d2 98 08                 a1 = a1 & a2
 15694: 52 08 40                 jump @1247 if a1 != 0
      :                          @1241
 15697: 33 0a fe 91 01 6b        a3 = 0x6b0191fe
 15703: cd 7a 08                 a1 = a3 %u a0
 15706: 51 08 47                 jump @1249 if a1 == 0
      :                          @1242
 15709: 33 08 01                 a1 = 0x1
 15712: 64 49                    a2 = t2
 15714: 28 0b                    jump @1244
      :                          @1243
 15716: 98 99 01                 a2 = a2 >> 0x1
 15719: ca aa 0a                 a3 = a3 * a3
 15722: 51 09 14                 jump @1246 if a2 == 0
      :                          @1244
 15725: 84 9b 01                 a4 = a2 & 0x1
 15728: cd 7a 0a                 a3 = a3 %u a0
 15731: 51 0b f1                 jump @1243 if a4 == 0
      :                          @1245
 15734: ca 8a 08                 a1 = a3 * a1
 15737: cd 78 08                 a1 = a1 %u a0
 15740: 28 e8                    jump @1243
      :                          @1246
 15742: 95 89 ff                 a2 = a1 + 0xffffffffffffffff
 15745: 8e 99                    a2 = a2 >u 0
 15747: d3 48 08                 a1 = a1 ^ t2
 15750: 8e 88                    a1 = a1 >u 0
 15752: d2 98 08                 a1 = a1 & a2
 15755: 51 08 16                 jump @1249 if a1 == 0
      :                          @1247
 15758: 33 08                    a1 = 0
 15760: 01                       fallthrough
      :                          @1248
 15761: 64 87                    a0 = a1
 15763: 82 10 18                 ra = u64 [sp + 0x18]
 15766: 82 15 10                 s0 = u64 [sp + 0x10]
 15769: 82 16 08                 s1 = u64 [sp + 0x8]
 15772: 95 11 20                 sp = sp + 0x20
 15775: 32 00                    ret
      :                          @1249
 15777: 9a 78                    a1 = -a0
 15779: e3 87 02                 t0 = maxs(a0, a1)
 15782: 33 0b 01                 a4 = 0x1
 15785: 33 0a 05                 a3 = 0x5
 15788: 33 09 04                 a2 = 0x4
 15791: 01                       fallthrough
      :                          @1250
 15792: ce 7a 06                 s1 = a3 %s a0
 15795: 99 68 3f                 a1 = s1 >>a 0x3f
 15798: d2 28 08                 a1 = a1 & t0
 15801: c8 86 06                 s1 = s1 + a1
 15804: 64 4c                    a5 = t2
 15806: 33 08 01                 a1 = 0x1
 15809: 28 0b                    jump @1252
      :                          @1251
 15811: 98 5c 01                 a5 = s0 >> 0x1
 15814: ca 66 06                 s1 = s1 * s1
 15817: ac 95 16                 jump @1254 if s0 <u a2
      :                          @1252
 15820: 64 c5                    s0 = a5
 15822: 84 cc 02                 a5 = a5 & 0x2
 15825: cd 76 06                 s1 = s1 %u a0
 15828: 51 0c ef                 jump @1251 if a5 == 0
      :                          @1253
 15831: ca 86 08                 a1 = s1 * a1
 15834: cd 78 08                 a1 = a1 %u a0
 15837: 28 e6                    jump @1251
      :                          @1254
 15839: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 15842: 88 cc 01                 a5 = a5 <u 0x1
 15845: d3 48 08                 a1 = a1 ^ t2
 15848: 8e 88                    a1 = a1 >u 0
 15850: d4 c8 08                 a1 = a1 | a5
 15853: 51 08 0f                 jump @1256 if a1 == 0
      :                          @1255
 15856: 97 b8 01                 a1 = a4 << 0x1
 15859: 9a aa                    a3 = -a3
 15861: c9 8a 0a                 a3 = a3 - a1
 15864: 9a bb                    a4 = -a4
 15866: 28 b6                    jump @1250
      :                          @1256
 15868: 95 74 01                 t2 = a0 + 0x1
 15871: 33 0b                    a4 = 0
 15873: 84 48 01                 a1 = t2 & 0x1
 15876: 52 08 14                 jump @1259 if a1 != 0
      :                          @1257
 15879: 64 48                    a1 = t2
 15881: 01                       fallthrough
      :                          @1258
 15882: 98 84 01                 t2 = a1 >> 0x1
 15885: 84 89 02                 a2 = a1 & 0x2
 15888: 83 bb 01                 i32 a4 = a4 + 0x1
 15891: 64 48                    a1 = t2
 15893: 51 09 f5                 jump @1258 if a2 == 0
      :                          @1259
 15896: 33 08 01                 a1 = 0x1
 15899: 51 04 76 ff              jump @1248 if t2 == 0
      :                          @1260
 15903: 9a a8 01                 a1 = 0x1 - a3
 15906: 99 89 3f                 a2 = a1 >>a 0x3f
 15909: 98 99 3e                 a2 = a2 >> 0x3e
 15912: c8 98 08                 a1 = a1 + a2
 15915: 33 09 01                 a2 = 0x1
 15918: 99 83 02                 t1 = a1 >>a 0x2
 15921: ab 94 0c                 jump @1262 if t2 != a2
      :                          @1261
 15924: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 15927: 8e 8c                    a5 = a1 >u 0
 15929: 64 ca                    a3 = a5
 15931: 28 4e                    jump @1264
      :                          @1262
 15933: 33 05                    s0 = 0
 15935: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 15938: 8e 8c                    a5 = a1 >u 0
 15940: 33 08 02                 a1 = 0x2
 15943: cd 78 06                 s1 = a1 %u a0
 15946: 64 c9                    a2 = a5
 15948: 01                       fallthrough
      :                          @1263
 15949: ca 36 0a                 a3 = s1 * t1
 15952: 64 c6                    s1 = a5
 15954: d8 48 0c                 a5 = a1 <u t2
 15957: 85 c0 01                 ra = a5 ^ 0x1
 15960: c8 c8 08                 a1 = a1 + a5
 15963: ca 35 0c                 a5 = s0 * t1
 15966: c9 c9 0c                 a5 = a2 - a5
 15969: c9 a6 05                 s0 = s1 - a3
 15972: ce 7c 0a                 a3 = a5 %s a0
 15975: 99 ac 3f                 a5 = a3 >>a 0x3f
 15978: d2 2c 0c                 a5 = a5 & t0
 15981: c8 ca 0a                 a3 = a3 + a5
 15984: ce 75 0c                 a5 = s0 %s a0
 15987: d8 84 05                 s0 = t2 <u a1
 15990: d4 50 00                 ra = ra | s0
 15993: 99 c5 3f                 s0 = a5 >>a 0x3f
 15996: d2 25 05                 s0 = s0 & t0
 15999: c8 5c 0c                 a5 = a5 + s0
 16002: 64 95                    s0 = a2
 16004: 64 a9                    a2 = a3
 16006: 51 00 c7                 jump @1263 if ra == 0
      :                          @1264
 16009: 33 08 01                 a1 = 0x1
 16012: 51 0a 05 ff              jump @1248 if a3 == 0
      :                          @1265
 16016: e3 8b 0b                 a4 = maxs(a4, a1)
 16019: ce 73 08                 a1 = t1 %s a0
 16022: 99 89 3f                 a2 = a1 >>a 0x3f
 16025: d2 29 09                 a2 = a2 & t0
 16028: c8 98 08                 a1 = a1 + a2
 16031: cd 78 09                 a2 = a1 %u a0
 16034: 97 99 01                 a2 = a2 << 0x1
 16037: 01                       fallthrough
      :                          @1266
 16038: 83 bb ff                 i32 a4 = a4 + 0xffffffffffffffff
 16041: 8e b8                    a1 = a4 >u 0
 16043: 51 0b e6 fe              jump @1248 if a4 == 0
      :                          @1267
 16047: ca ca 0a                 a3 = a3 * a5
 16050: ce 7a 06                 s1 = a3 %s a0
 16053: 99 6a 3f                 a3 = s1 >>a 0x3f
 16056: d2 2a 0a                 a3 = a3 & t0
 16059: c8 6a 0a                 a3 = a3 + s1
 16062: ca cc 0c                 a5 = a5 * a5
 16065: c9 9c 0c                 a5 = a5 - a2
 16068: ce 7c 06                 s1 = a5 %s a0
 16071: 99 6c 3f                 a5 = s1 >>a 0x3f
 16074: d2 2c 0c                 a5 = a5 & t0
 16077: c8 6c 0c                 a5 = a5 + s1
 16080: 52 0a d6                 jump @1266 if a3 != 0
      :                          @1268
 16083: 28 be fe                 jump @1248
      :                          @1269
 16086: 55 17 02 07              jump @1271 if a0 >=u 2
      :                          @1270
 16090: 28 98 2f                 jump @2060
      :                          @1271
 16093: 64 79                    a2 = a0
 16095: 01                       fallthrough
      :                          @1272
 16096: 51 09 15                 jump @1275 if a2 == 0
      :                          @1273
 16099: 64 98                    a1 = a2
 16101: cb 97 09                 a2 = a0 /u a2
 16104: c8 89 09                 a2 = a2 + a1
 16107: 98 99 01                 a2 = a2 >> 0x1
 16110: ac 89 f2                 jump @1272 if a2 <u a1
      :                          @1274
 16113: 64 87                    a0 = a1
 16115: 32 00                    ret
      :                          @1275
 16117: 00                       trap
      :                          @1276
 16118: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 16121: 7b 15 08                 u64 [sp + 0x8] = s0
 16124: 7b 16                    u64 [sp] = s1
 16126: 82 78                    a1 = u64 [a0]
 16128: 82 73 08                 t1 = u64 [a0 + 0x8]
 16131: 82 72 10                 t0 = u64 [a0 + 0x10]
 16134: 82 7a 18                 a3 = u64 [a0 + 0x18]
 16137: 82 79 20                 a2 = u64 [a0 + 0x20]
 16140: 82 74 28                 t2 = u64 [a0 + 0x28]
 16143: 82 7c 30                 a5 = u64 [a0 + 0x30]
 16146: 82 7b 38                 a4 = u64 [a0 + 0x38]
 16149: 82 77 40                 a0 = u64 [a0 + 0x40]
 16152: 51 08 0c                 jump @1278 if a1 == 0
      :                          @1277
 16155: ca 89 05                 s0 = a2 * a1
 16158: ca a3 06                 s1 = t1 * a3
 16161: ab 65 38                 jump @1279 if s0 != s1
      :                          @1278
 16164: ca 97 05                 s0 = a0 * a2
 16167: ca 4b 06                 s1 = a4 * t2
 16170: c9 65 05                 s0 = s0 - s1
 16173: ca 85 08                 a1 = s0 * a1
 16176: ca a7 07                 a0 = a0 * a3
 16179: ca 4c 06                 s1 = a5 * t2
 16182: c9 76 06                 s1 = s1 - a0
 16185: ca 36 07                 a0 = s1 * t1
 16188: ca ab 0a                 a3 = a4 * a3
 16191: ca 9c 09                 a2 = a5 * a2
 16194: c9 9a 0a                 a3 = a3 - a2
 16197: ca 2a 09                 a2 = a3 * t0
 16200: c8 98 08                 a1 = a1 + a2
 16203: c8 87 07                 a0 = a0 + a1
 16206: 82 15 08                 s0 = u64 [sp + 0x8]
 16209: 82 16                    s1 = u64 [sp]
 16211: 95 11 10                 sp = sp + 0x10
 16214: 28 ed 31                 jump @2073
      :                          @1279
 16217: ca 87 07                 a0 = a0 * a1
 16220: ca c2 09                 a2 = t0 * a5
 16223: c9 97 07                 a0 = a0 - a2
 16226: ca 8b 09                 a2 = a4 * a1
 16229: ca c3 0b                 a4 = t1 * a5
 16232: c9 9b 0b                 a4 = a4 - a2
 16235: ca 84 09                 a2 = t2 * a1
 16238: ca a2 0a                 a3 = t0 * a3
 16241: c9 a9 09                 a2 = a2 - a3
 16244: c9 65 05                 s0 = s0 - s1
 16247: ca 57 07                 a0 = a0 * s0
 16250: ca 9b 0a                 a3 = a4 * a2
 16253: c8 a7 07                 a0 = a0 + a3
 16256: 51 18 ff 12              jump @1281 if a1 == 4294967295
      :                          @1280
 16260: cc 87 07                 a0 = a0 /s a1
 16263: 82 15 08                 s0 = u64 [sp + 0x8]
 16266: 82 16                    s1 = u64 [sp]
 16268: 95 11 10                 sp = sp + 0x10
 16271: 28 b4 31                 jump @2073
      :                          @1281
 16274: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 16284: aa 97 10                 jump @1283 if a0 == a2
      :                          @1282
 16287: 9a 77                    a0 = -a0
 16289: 82 15 08                 s0 = u64 [sp + 0x8]
 16292: 82 16                    s1 = u64 [sp]
 16294: 95 11 10                 sp = sp + 0x10
 16297: 28 9a 31                 jump @2073
      :                          @1283
 16300: 00                       trap
      :                          @1284
 16301: 82 72                    t0 = u64 [a0]
 16303: 82 79 08                 a2 = u64 [a0 + 0x8]
 16306: 82 7a 10                 a3 = u64 [a0 + 0x10]
 16309: 9a 28                    a1 = -t0
 16311: e3 82 0b                 a4 = maxs(t0, a1)
 16314: 51 09 40                 jump @1294 if a2 == 0
      :                          @1285
 16317: 9a 98                    a1 = -a2
 16319: e3 89 08                 a1 = maxs(a2, a1)
 16322: 01                       fallthrough
      :                          @1286
 16323: 64 8c                    a5 = a1
 16325: cd 8b 08                 a1 = a4 %u a1
 16328: 64 cb                    a4 = a5
 16330: 52 08 f9                 jump @1286 if a1 != 0
      :                          @1287
 16333: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16336: 51 0a 32                 jump @1295 if a3 == 0
      :                          @1288
 16339: 9a a7                    a0 = -a3
 16341: e3 7a 08                 a1 = maxs(a3, a0)
 16344: 01                       fallthrough
      :                          @1289
 16345: 64 87                    a0 = a1
 16347: cd 8c 08                 a1 = a5 %u a1
 16350: 64 7c                    a5 = a0
 16352: 52 08 f9                 jump @1289 if a1 != 0
      :                          @1290
 16355: 51 0b 24                 jump @1296 if a4 == 0
      :                          @1291
 16358: 9a b8                    a1 = -a4
 16360: e3 8b 0c                 a5 = maxs(a4, a1)
 16363: 64 78                    a1 = a0
 16365: 01                       fallthrough
      :                          @1292
 16366: 64 c7                    a0 = a5
 16368: cd c8 0c                 a5 = a1 %u a5
 16371: 64 78                    a1 = a0
 16373: 52 0c f9                 jump @1292 if a5 != 0
      :                          @1293
 16376: 28 12                    jump @1297
      :                          @1294
 16378: 64 bc                    a5 = a4
 16380: 82 7b 18                 a4 = u64 [a0 + 0x18]
 16383: 52 0a d4                 jump @1288 if a3 != 0
      :                          @1295
 16386: 64 c7                    a0 = a5
 16388: 52 0b e2                 jump @1291 if a4 != 0
      :                          @1296
 16391: 51 07 16                 jump @1298 if a0 == 0
      :                          @1297
 16394: ca 2b 08                 a1 = a4 * t0
 16397: ca 9a 09                 a2 = a3 * a2
 16400: c9 98 08                 a1 = a1 - a2
 16403: 9a 89                    a2 = -a1
 16405: e3 98 08                 a1 = maxs(a1, a2)
 16408: cb 78 08                 a1 = a1 /u a0
 16411: 32 00                    ret
      :                          @1298
 16413: 00                       trap
      :                          @1299
 16414: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 16417: 7b 10 40                 u64 [sp + 0x40] = ra
 16420: 7b 15 38                 u64 [sp + 0x38] = s0
 16423: 7b 16 30                 u64 [sp + 0x30] = s1
 16426: 82 86                    s1 = u64 [a1]
 16428: 82 89 10                 a2 = u64 [a1 + 0x10]
 16431: 82 8a 08                 a3 = u64 [a1 + 0x8]
 16434: 82 8b 18                 a4 = u64 [a1 + 0x18]
 16437: d4 69 08                 a1 = a2 | s1
 16440: 64 75                    s0 = a0
 16442: 51 08 89 00              jump @1307 if a1 == 0
      :                          @1300
 16446: 7b 1a                    u64 [sp] = a3
 16448: 7b 1b 08                 u64 [sp + 0x8] = a4
 16451: 95 17 18                 a0 = sp + 0x18
 16454: 64 68                    a1 = s1
 16456: 7b 19 10                 u64 [sp + 0x10] = a2
 16459: 50 20 ee 00 a5 e6        ra = 238, jump @762
      :                          @1301 [@dyn 119]
 16465: 82 17 18                 a0 = u64 [sp + 0x18]
 16468: 51 07 8d 00              jump @1311 if a0 == 0
      :                          @1302
 16472: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 16482: d3 86 09                 a2 = s1 ^ a1
 16485: e1 79 09                 a2 = a2 | ~a0
 16488: 51 09 77                 jump @1309 if a2 == 0
      :                          @1303
 16491: 82 12 10                 t0 = u64 [sp + 0x10]
 16494: d3 82 08                 a1 = t0 ^ a1
 16497: e1 78 08                 a1 = a1 | ~a0
 16500: 51 08 6b                 jump @1309 if a1 == 0
      :                          @1304
 16503: 82 18 20                 a1 = u64 [sp + 0x20]
 16506: 82 19 28                 a2 = u64 [sp + 0x28]
 16509: 82 1c                    a5 = u64 [sp]
 16511: ca c8 08                 a1 = a1 * a5
 16514: 82 1b 08                 a4 = u64 [sp + 0x8]
 16517: ca b9 09                 a2 = a2 * a4
 16520: c8 98 08                 a1 = a1 + a2
 16523: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 16533: d3 98 0a                 a3 = a1 ^ a2
 16536: e1 7a 0a                 a3 = a3 | ~a0
 16539: 51 0a 45                 jump @1310 if a3 == 0
      :                          @1305
 16542: ce 78 08                 a1 = a1 %s a0
 16545: c8 78 08                 a1 = a1 + a0
 16548: d3 89 09                 a2 = a2 ^ a1
 16551: e1 79 09                 a2 = a2 | ~a0
 16554: 51 09 36                 jump @1310 if a2 == 0
      :                          @1306
 16557: cc 76 09                 a2 = s1 /s a0
 16560: cc 72 0a                 a3 = t0 /s a0
 16563: ca ca 0a                 a3 = a3 * a5
 16566: ce 78 08                 a1 = a1 %s a0
 16569: ca b9 09                 a2 = a2 * a4
 16572: c9 a9 0b                 a4 = a2 - a3
 16575: 64 8a                    a3 = a1
 16577: 28 05                    jump @1308
      :                          @1307
 16579: 33 07                    a0 = 0
 16581: 01                       fallthrough
      :                          @1308
 16582: 7b 57                    u64 [s0] = a0
 16584: 7b 5a 08                 u64 [s0 + 0x8] = a3
 16587: 7b 5b 18                 u64 [s0 + 0x18] = a4
 16590: 49 15 10                 u64 [s0 + 16] = 0
 16593: 82 10 40                 ra = u64 [sp + 0x40]
 16596: 82 15 38                 s0 = u64 [sp + 0x38]
 16599: 82 16 30                 s1 = u64 [sp + 0x30]
 16602: 95 11 48                 sp = sp + 0x48
 16605: 32 00                    ret
      :                          @1309
 16607: 00                       trap
      :                          @1310
 16608: 00                       trap
      :                          @1311
 16609: 00                       trap
      :                          @1312
 16610: 64 82                    t0 = a1
 16612: 64 93                    t1 = a2
 16614: ca 88 0c                 a5 = a1 * a1
 16617: ca 99 08                 a1 = a2 * a2
 16620: c8 8c 0c                 a5 = a5 + a1
 16623: 51 0c 39                 jump @1316 if a5 == 0
      :                          @1313
 16626: 97 c8 01                 a1 = a5 << 0x1
 16629: 51 08 45                 jump @1318 if a1 == 0
      :                          @1314
 16632: ca a2 04                 t2 = t0 * a3
 16635: ca b3 09                 a2 = t1 * a4
 16638: c8 49 09                 a2 = a2 + t2
 16641: 97 99 01                 a2 = a2 << 0x1
 16644: c8 c9 09                 a2 = a2 + a5
 16647: cc 89 09                 a2 = a2 /s a1
 16650: ca 29 08                 a1 = a2 * t0
 16653: c9 8a 08                 a1 = a3 - a1
 16656: ca 39 09                 a2 = a2 * t1
 16659: c9 9b 09                 a2 = a4 - a2
 16662: ca 88 0a                 a3 = a1 * a1
 16665: ca 99 0b                 a4 = a2 * a2
 16668: c8 ba 04                 t2 = a3 + a4
 16671: 64 3b                    a4 = t1
 16673: 64 2a                    a3 = t0
 16675: ad c4 bf                 jump @1312 if t2 <s a5
      :                          @1315
 16678: 28 07                    jump @1317
      :                          @1316
 16680: 64 b9                    a2 = a4
 16682: 64 a8                    a1 = a3
 16684: 01                       fallthrough
      :                          @1317
 16685: 7b 72                    u64 [a0] = t0
 16687: 7b 73 08                 u64 [a0 + 0x8] = t1
 16690: 7b 78 10                 u64 [a0 + 0x10] = a1
 16693: 7b 79 18                 u64 [a0 + 0x18] = a2
 16696: 32 00                    ret
      :                          @1318
 16698: 00                       trap
      :                          @1319
 16699: 82 5a                    a3 = u64 [s0]
 16701: c8 9a 0b                 a4 = a3 + a2
 16704: ac ab 59 01              jump @1348 if a4 <u a3
      :                          @1320
 16708: 95 bc 08                 a5 = a4 + 0x8
 16711: d8 bc 06                 s1 = a5 <u a4
 16714: d8 c2 0c                 a5 = t0 <u a5
 16717: d4 6c 0c                 a5 = a5 | s1
 16720: 52 0c 49 01              jump @1348 if a5 != 0
      :                          @1321
 16724: c9 b3 06                 s1 = t1 - a4
 16727: c8 26 06                 s1 = s1 + t0
 16730: 84 6c 07                 a5 = s1 & 0x7
 16733: c8 cb 0b                 a4 = a4 + a5
 16736: 01                       fallthrough
      :                          @1322
 16737: 82 58                    a1 = u64 [s0]
 16739: ab a8 d8                 jump @1319 if a1 != a3
      :                          @1323
 16742: 7b 5b                    u64 [s0] = a4
 16744: c9 c6 06                 s1 = s1 - a5
 16747: 64 67                    a0 = s1
 16749: 33 08                    a1 = 0
 16751: 7b 19 08                 u64 [sp + 0x8] = a2
 16754: 50 20 f0 00 40 73        ra = 240, jump @2921
      :                          @1324 [@dyn 120]
 16760: 33 07 01                 a0 = 0x1
 16763: 7b 67                    u64 [s1] = a0
 16765: 82 15 10                 s0 = u64 [sp + 0x10]
 16768: 51 05 dd 00              jump @1340 if s0 == 0
      :                          @1325
 16772: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 16775: ac 85 10 01              jump @1346 if s0 <u a1
      :                          @1326
 16779: ac 75 0d 01              jump @1347 if s0 <u a0
      :                          @1327
 16783: 97 88 03                 a1 = a1 << 0x3
 16786: c8 68 08                 a1 = a1 + s1
 16789: 82 88                    a1 = u64 [a1]
 16791: 97 79 03                 a2 = a0 << 0x3
 16794: c8 69 09                 a2 = a2 + s1
 16797: 82 9a                    a3 = u64 [a2]
 16799: d8 57 0b                 a4 = a0 <u s0
 16802: c8 b7 07                 a0 = a0 + a4
 16805: c8 a8 08                 a1 = a1 + a3
 16808: d8 75 0a                 a3 = s0 <u a0
 16811: 85 aa 01                 a3 = a3 ^ 0x1
 16814: d2 ba 0a                 a3 = a3 & a4
 16817: 7b 98                    u64 [a2] = a1
 16819: 52 0a d1                 jump @1325 if a3 != 0
      :                          @1328
 16822: 33 07 05                 a0 = 0x5
 16825: ac 75 a4 00              jump @1340 if s0 <u a0
      :                          @1329
 16829: 95 78 fb                 a1 = a0 + 0xfffffffffffffffb
 16832: ac 85 d7 00              jump @1346 if s0 <u a1
      :                          @1330
 16836: ac 75 d4 00              jump @1347 if s0 <u a0
      :                          @1331
 16840: 97 88 03                 a1 = a1 << 0x3
 16843: c8 68 08                 a1 = a1 + s1
 16846: 82 88                    a1 = u64 [a1]
 16848: 97 79 03                 a2 = a0 << 0x3
 16851: c8 69 09                 a2 = a2 + s1
 16854: 82 9a                    a3 = u64 [a2]
 16856: d8 57 0b                 a4 = a0 <u s0
 16859: c8 b7 07                 a0 = a0 + a4
 16862: c8 a8 08                 a1 = a1 + a3
 16865: d8 75 0a                 a3 = s0 <u a0
 16868: 85 aa 01                 a3 = a3 ^ 0x1
 16871: d2 ba 0a                 a3 = a3 & a4
 16874: 7b 98                    u64 [a2] = a1
 16876: 52 0a d1                 jump @1329 if a3 != 0
      :                          @1332
 16879: 33 07 0a                 a0 = 0xa
 16882: ac 75 6b                 jump @1340 if s0 <u a0
      :                          @1333
 16885: 95 78 f6                 a1 = a0 + 0xfffffffffffffff6
 16888: ac 85 9f 00              jump @1346 if s0 <u a1
      :                          @1334
 16892: ac 75 9c 00              jump @1347 if s0 <u a0
      :                          @1335
 16896: 97 88 03                 a1 = a1 << 0x3
 16899: c8 68 08                 a1 = a1 + s1
 16902: 82 88                    a1 = u64 [a1]
 16904: 97 79 03                 a2 = a0 << 0x3
 16907: c8 69 09                 a2 = a2 + s1
 16910: 82 9a                    a3 = u64 [a2]
 16912: d8 57 0b                 a4 = a0 <u s0
 16915: c8 b7 07                 a0 = a0 + a4
 16918: c8 a8 08                 a1 = a1 + a3
 16921: d8 75 0a                 a3 = s0 <u a0
 16924: 85 aa 01                 a3 = a3 ^ 0x1
 16927: d2 ba 0a                 a3 = a3 & a4
 16930: 7b 98                    u64 [a2] = a1
 16932: 52 0a d1                 jump @1333 if a3 != 0
      :                          @1336
 16935: 33 07 19                 a0 = 0x19
 16938: ac 75 33                 jump @1340 if s0 <u a0
      :                          @1337
 16941: 95 78 e7                 a1 = a0 + 0xffffffffffffffe7
 16944: ac 85 67                 jump @1346 if s0 <u a1
      :                          @1338
 16947: ac 75 65                 jump @1347 if s0 <u a0
      :                          @1339
 16950: 97 88 03                 a1 = a1 << 0x3
 16953: c8 68 08                 a1 = a1 + s1
 16956: 82 88                    a1 = u64 [a1]
 16958: 97 79 03                 a2 = a0 << 0x3
 16961: c8 69 09                 a2 = a2 + s1
 16964: 82 9a                    a3 = u64 [a2]
 16966: d8 57 0b                 a4 = a0 <u s0
 16969: c8 b7 07                 a0 = a0 + a4
 16972: c8 a8 08                 a1 = a1 + a3
 16975: d8 75 0a                 a3 = s0 <u a0
 16978: 85 aa 01                 a3 = a3 ^ 0x1
 16981: d2 ba 0a                 a3 = a3 & a4
 16984: 7b 98                    u64 [a2] = a1
 16986: 52 0a d3                 jump @1337 if a3 != 0
      :                          @1340
 16989: 97 55 03                 s0 = s0 << 0x3
 16992: c8 65 05                 s0 = s0 + s1
 16995: 82 57                    a0 = u64 [s0]
 16997: 33 08 f0 02 03           a1 = 0x302f0
 17002: 95 88 00 00 01           a1 = a1 + 0x10000
 17007: 82 15 08                 s0 = u64 [sp + 0x8]
 17010: 01                       fallthrough
      :                          @1341
 17011: 82 89                    a2 = u64 [a1]
 17013: c9 98 0a                 a3 = a1 - a2
 17016: ab 6a 11                 jump @1345 if a3 != s1
      :                          @1342
 17019: c9 59 0a                 a3 = a2 - s0
 17022: 01                       fallthrough
      :                          @1343
 17023: 82 8b                    a4 = u64 [a1]
 17025: ab 9b f2                 jump @1341 if a4 != a2
      :                          @1344
 17028: 7b 8a                    u64 [a1] = a3
 17030: 33 0c                    a5 = 0
 17032: 01                       fallthrough
      :                          @1345
 17033: 82 10 28                 ra = u64 [sp + 0x28]
 17036: 82 15 20                 s0 = u64 [sp + 0x20]
 17039: 82 16 18                 s1 = u64 [sp + 0x18]
 17042: 95 11 30                 sp = sp + 0x30
 17045: 32 00                    ret
      :                          @1346
 17047: 00                       trap
      :                          @1347
 17048: 00                       trap
      :                          @1348
 17049: 00                       trap
      :                          @1349
 17050: 82 0b                    a4 = u64 [ra]
 17052: c8 7b 09                 a2 = a4 + a0
 17055: ac b9 c8 01              jump @1395 if a2 <u a4
      :                          @1350
 17059: 95 9a 08                 a3 = a2 + 0x8
 17062: d8 9a 05                 s0 = a3 <u a2
 17065: d8 a2 0a                 a3 = t0 <u a3
 17068: d4 5a 0a                 a3 = a3 | s0
 17071: 52 0a b8 01              jump @1395 if a3 != 0
      :                          @1351
 17075: c9 94 0a                 a3 = t2 - a2
 17078: c8 2a 0a                 a3 = a3 + t0
 17081: 84 a5 07                 s0 = a3 & 0x7
 17084: c8 59 09                 a2 = a2 + s0
 17087: 01                       fallthrough
      :                          @1352
 17088: 82 06                    s1 = u64 [ra]
 17090: ab b6 d8                 jump @1349 if s1 != a4
      :                          @1353
 17093: 7b 09                    u64 [ra] = a2
 17095: 01                       fallthrough
      :                          @1354
 17096: c9 5a 0c                 a5 = a3 - s0
 17099: 51 03 b6 00              jump @1371 if t1 == 0
      :                          @1355
 17103: 14 0a ff ff ff ff ff ff ff 7f a3 = 0x7fffffffffffffff
 17113: 64 3b                    a4 = t1
 17115: 64 c9                    a2 = a5
 17117: 01                       fallthrough
      :                          @1356
 17118: 7b 9a                    u64 [a2] = a3
 17120: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 17123: 95 99 08                 a2 = a2 + 0x8
 17126: 52 0b f8                 jump @1356 if a4 != 0
      :                          @1357
 17129: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17139: 7b 92                    u64 [a2] = t0
 17141: 49 0c                    u64 [a5 + 0] = 0
 17143: 33 0a 01                 a3 = 0x1
 17146: 28 14                    jump @1359
      :                          @1358
 17148: d8 3a 09                 a2 = a3 <u t1
 17151: c8 9a 0a                 a3 = a3 + a2
 17154: d8 a3 0b                 a4 = t1 <u a3
 17157: 85 bb 01                 a4 = a4 ^ 0x1
 17160: d2 b9 09                 a2 = a2 & a4
 17163: 51 09 2a                 jump @1363 if a2 == 0
      :                          @1359
 17166: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 17169: ac b3 55 01              jump @1394 if t1 <u a4
      :                          @1360
 17173: 97 bb 03                 a4 = a4 << 0x3
 17176: c8 cb 0b                 a4 = a4 + a5
 17179: 82 b9                    a2 = u64 [a4]
 17181: aa 29 df                 jump @1358 if a2 == t0
      :                          @1361
 17184: ac a3 60                 jump @1370 if t1 <u a3
      :                          @1362
 17187: 97 ab 03                 a4 = a3 << 0x3
 17190: c8 cb 0b                 a4 = a4 + a5
 17193: 82 b6                    s1 = u64 [a4]
 17195: 95 99 01                 a2 = a2 + 0x1
 17198: e5 96 09                 a2 = mins(s1, a2)
 17201: 7b b9                    u64 [a4] = a2
 17203: 28 c9                    jump @1358
      :                          @1363
 17205: 33 0a 05                 a3 = 0x5
 17208: ac a3 a0 00              jump @1380 if t1 <u a3
      :                          @1364
 17212: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17222: 28 25                    jump @1367
      :                          @1365
 17224: 97 ab 03                 a4 = a3 << 0x3
 17227: c8 cb 0b                 a4 = a4 + a5
 17230: 82 b6                    s1 = u64 [a4]
 17232: 95 99 01                 a2 = a2 + 0x1
 17235: e5 96 09                 a2 = mins(s1, a2)
 17238: 7b b9                    u64 [a4] = a2
 17240: 01                       fallthrough
      :                          @1366
 17241: d8 3a 09                 a2 = a3 <u t1
 17244: c8 9a 0a                 a3 = a3 + a2
 17247: d8 a3 0b                 a4 = t1 <u a3
 17250: 85 bb 01                 a4 = a4 ^ 0x1
 17253: d2 b9 09                 a2 = a2 & a4
 17256: 51 09 1f                 jump @1372 if a2 == 0
      :                          @1367
 17259: 95 ab fb                 a4 = a3 + 0xfffffffffffffffb
 17262: ac b3 f8 00              jump @1394 if t1 <u a4
      :                          @1368
 17266: 97 bb 03                 a4 = a4 << 0x3
 17269: c8 cb 0b                 a4 = a4 + a5
 17272: 82 b9                    a2 = u64 [a4]
 17274: aa 29 df                 jump @1366 if a2 == t0
      :                          @1369
 17277: ae a3 cb                 jump @1365 if t1 >=u a3
      :                          @1370
 17280: 00                       trap
      :                          @1371
 17281: 49 0c                    u64 [a5 + 0] = 0
 17283: 64 c8                    a1 = a5
 17285: 28 5a                    jump @1381
      :                          @1372
 17287: 33 0a 0a                 a3 = 0xa
 17290: ac a3 4e                 jump @1380 if t1 <u a3
      :                          @1373
 17293: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17303: 28 14                    jump @1375
      :                          @1374
 17305: d8 3a 09                 a2 = a3 <u t1
 17308: c8 9a 0a                 a3 = a3 + a2
 17311: d8 a3 0b                 a4 = t1 <u a3
 17314: 85 bb 01                 a4 = a4 ^ 0x1
 17317: d2 b9 09                 a2 = a2 & a4
 17320: 51 09 2a                 jump @1379 if a2 == 0
      :                          @1375
 17323: 95 ab f6                 a4 = a3 + 0xfffffffffffffff6
 17326: ac b3 b8 00              jump @1394 if t1 <u a4
      :                          @1376
 17330: 97 bb 03                 a4 = a4 << 0x3
 17333: c8 cb 0b                 a4 = a4 + a5
 17336: 82 b9                    a2 = u64 [a4]
 17338: aa 29 df                 jump @1374 if a2 == t0
      :                          @1377
 17341: ac a3 c3                 jump @1370 if t1 <u a3
      :                          @1378
 17344: 97 ab 03                 a4 = a3 << 0x3
 17347: c8 cb 0b                 a4 = a4 + a5
 17350: 82 b6                    s1 = u64 [a4]
 17352: 95 99 01                 a2 = a2 + 0x1
 17355: e5 96 09                 a2 = mins(s1, a2)
 17358: 7b b9                    u64 [a4] = a2
 17360: 28 c9                    jump @1374
      :                          @1379
 17362: 33 0a 19                 a3 = 0x19
 17365: ae a3 4b                 jump @1387 if t1 >=u a3
      :                          @1380
 17368: 97 38 03                 a1 = t1 << 0x3
 17371: c8 c8 08                 a1 = a1 + a5
 17374: 01                       fallthrough
      :                          @1381
 17375: 82 88                    a1 = u64 [a1]
 17377: 33 09 f0 02 03           a2 = 0x302f0
 17382: 95 99 00 00 01           a2 = a2 + 0x10000
 17387: 01                       fallthrough
      :                          @1382
 17388: 82 9a                    a3 = u64 [a2]
 17390: c9 a9 0b                 a4 = a2 - a3
 17393: ab cb 0f                 jump @1386 if a4 != a5
      :                          @1383
 17396: c9 7a 0b                 a4 = a3 - a0
 17399: 01                       fallthrough
      :                          @1384
 17400: 82 96                    s1 = u64 [a2]
 17402: ab a6 f2                 jump @1382 if s1 != a3
      :                          @1385
 17405: 7b 9b                    u64 [a2] = a4
 17407: 01                       fallthrough
      :                          @1386
 17408: 33 07 ff                 a0 = 0xffffffffffffffff
 17411: 14 09 ff ff ff ff ff ff ff 7f a2 = 0x7fffffffffffffff
 17421: d3 89 09                 a2 = a2 ^ a1
 17424: db 98 07                 a0 = a1 if a2 != 0
 17427: 82 10 10                 ra = u64 [sp + 0x10]
 17430: 82 15 08                 s0 = u64 [sp + 0x8]
 17433: 82 16                    s1 = u64 [sp]
 17435: 95 11 18                 sp = sp + 0x18
 17438: 32 00                    ret
      :                          @1387
 17440: 14 02 ff ff ff ff ff ff ff 7f t0 = 0x7fffffffffffffff
 17450: 28 25                    jump @1390
      :                          @1388
 17452: 97 ab 03                 a4 = a3 << 0x3
 17455: c8 cb 0b                 a4 = a4 + a5
 17458: 82 b6                    s1 = u64 [a4]
 17460: 95 99 01                 a2 = a2 + 0x1
 17463: e5 96 09                 a2 = mins(s1, a2)
 17466: 7b b9                    u64 [a4] = a2
 17468: 01                       fallthrough
      :                          @1389
 17469: d8 3a 09                 a2 = a3 <u t1
 17472: c8 9a 0a                 a3 = a3 + a2
 17475: d8 a3 0b                 a4 = t1 <u a3
 17478: 85 bb 01                 a4 = a4 ^ 0x1
 17481: d2 b9 09                 a2 = a2 & a4
 17484: 51 09 8c                 jump @1380 if a2 == 0
      :                          @1390
 17487: 95 ab e7                 a4 = a3 + 0xffffffffffffffe7
 17490: ac b3 14                 jump @1394 if t1 <u a4
      :                          @1391
 17493: 97 bb 03                 a4 = a4 << 0x3
 17496: c8 cb 0b                 a4 = a4 + a5
 17499: 82 b9                    a2 = u64 [a4]
 17501: aa 29 e0                 jump @1389 if a2 == t0
      :                          @1392
 17504: ae a3 cc                 jump @1388 if t1 >=u a3
      :                          @1393
 17507: 28 1d ff                 jump @1370
      :                          @1394
 17510: 00                       trap
      :                          @1395
 17511: 00                       trap
      :                          @1396
 17512: 51 07 30                 jump @1402 if a0 == 0
      :                          @1397
 17515: 51 08 26                 jump @1401 if a1 == 0
      :                          @1398
 17518: 6a 79                    a2 = ctz a0
 17520: d0 97 09                 a2 = a0 >> a2
 17523: 64 8a                    a3 = a1
 17525: 01                       fallthrough
      :                          @1399
 17526: 6a ab                    a4 = ctz a3
 17528: d0 ba 0a                 a3 = a3 >> a4
 17531: e4 a9 0b                 a4 = maxu(a2, a3)
 17534: e6 a9 09                 a2 = minu(a2, a3)
 17537: c9 9b 0a                 a3 = a4 - a2
 17540: ab 9b f2                 jump @1399 if a4 != a2
      :                          @1400
 17543: d4 87 07                 a0 = a0 | a1
 17546: 6a 77                    a0 = ctz a0
 17548: cf 7b 07                 a0 = a4 << a0
 17551: 32 00                    ret
      :                          @1401
 17553: 64 78                    a1 = a0
 17555: 64 87                    a0 = a1
 17557: 28 51 34                 jump @2139
      :                          @1402
 17560: 64 87                    a0 = a1
 17562: 28 4c 34                 jump @2139
      :                          @1403
 17565: 95 82 ff                 t0 = a1 + 0xffffffffffffffff
 17568: ae 72 7a                 jump @1411 if t0 >=u a0
      :                          @1404
 17571: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 17574: 7b 15 08                 u64 [sp + 0x8] = s0
 17577: c9 87 09                 a2 = a0 - a1
 17580: e6 98 04                 t2 = minu(a1, a2)
 17583: 33 09 01                 a2 = 0x1
 17586: c8 97 03                 t1 = a0 + a2
 17589: 33 0a 01                 a3 = 0x1
 17592: 51 04 27                 jump @1407 if t2 == 0
      :                          @1405
 17595: 33 0a 01                 a3 = 0x1
 17598: 33 0b 01                 a4 = 0x1
 17601: 01                       fallthrough
      :                          @1406
 17602: d8 4b 08                 a1 = a4 <u t2
 17605: 85 8c 01                 a5 = a1 ^ 0x1
 17608: c9 b3 05                 s0 = t1 - a4
 17611: c8 b8 08                 a1 = a1 + a4
 17614: ca a5 0a                 a3 = s0 * a3
 17617: d8 84 05                 s0 = t2 <u a1
 17620: d4 5c 0c                 a5 = a5 | s0
 17623: cb ba 0a                 a3 = a3 /u a4
 17626: 64 8b                    a4 = a1
 17628: 51 0c e6                 jump @1406 if a5 == 0
      :                          @1407
 17631: c9 27 08                 a1 = a0 - t0
 17634: e6 82 02                 t0 = minu(t0, a1)
 17637: 51 02 27                 jump @1410 if t0 == 0
      :                          @1408
 17640: 33 09 01                 a2 = 0x1
 17643: 33 0c 01                 a5 = 0x1
 17646: 01                       fallthrough
      :                          @1409
 17647: d8 2c 08                 a1 = a5 <u t0
 17650: 85 85 01                 s0 = a1 ^ 0x1
 17653: c9 c3 0b                 a4 = t1 - a5
 17656: c8 c8 08                 a1 = a1 + a5
 17659: ca 9b 09                 a2 = a4 * a2
 17662: d8 82 0b                 a4 = t0 <u a1
 17665: d4 5b 0b                 a4 = a4 | s0
 17668: cb c9 09                 a2 = a2 /u a5
 17671: 64 8c                    a5 = a1
 17673: 51 0b e6                 jump @1409 if a4 == 0
      :                          @1410
 17676: ca a9 08                 a1 = a2 * a3
 17679: cb 78 07                 a0 = a1 /u a0
 17682: 82 15 08                 s0 = u64 [sp + 0x8]
 17685: 95 11 10                 sp = sp + 0x10
 17688: 32 00                    ret
      :                          @1411
 17690: 33 07                    a0 = 0
 17692: 28 a5 0d                 jump @1693
      :                          @1412
 17695: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 17698: 7b 10 20                 u64 [sp + 0x20] = ra
 17701: 7b 15 18                 u64 [sp + 0x18] = s0
 17704: 7b 16 10                 u64 [sp + 0x10] = s1
 17707: 64 74                    t2 = a0
 17709: 33 08 02                 a1 = 0x2
 17712: 33 07 01                 a0 = 0x1
 17715: ac 84 f4 00              jump @1430 if t2 <u a1
      :                          @1413
 17719: 95 49 01                 a2 = t2 + 0x1
 17722: 7b 19                    u64 [sp] = a2
 17724: 97 99 03                 a2 = a2 << 0x3
 17727: 33 07 f0 02 03           a0 = 0x302f0
 17732: 33 03 f0 02 03           t1 = 0x302f0
 17737: 33 02 00 00 01           t0 = 0x10000
 17742: c8 23 06                 s1 = t1 + t0
 17745: 01                       fallthrough
      :                          @1414
 17746: 82 6a                    a3 = u64 [s1]
 17748: c8 9a 0b                 a4 = a3 + a2
 17751: ac ab e2 00              jump @1435 if a4 <u a3
      :                          @1415
 17755: 95 bc 08                 a5 = a4 + 0x8
 17758: d8 bc 05                 s0 = a5 <u a4
 17761: d8 c2 0c                 a5 = t0 <u a5
 17764: d4 5c 0c                 a5 = a5 | s0
 17767: 52 0c d2 00              jump @1435 if a5 != 0
      :                          @1416
 17771: c9 b3 05                 s0 = t1 - a4
 17774: c8 25 05                 s0 = s0 + t0
 17777: 84 5c 07                 a5 = s0 & 0x7
 17780: c8 cb 0b                 a4 = a4 + a5
 17783: 01                       fallthrough
      :                          @1417
 17784: 82 68                    a1 = u64 [s1]
 17786: ab a8 d8                 jump @1414 if a1 != a3
      :                          @1418
 17789: 7b 6b                    u64 [s1] = a4
 17791: c9 c5 06                 s1 = s0 - a5
 17794: 64 67                    a0 = s1
 17796: 33 08                    a1 = 0
 17798: 7b 19 08                 u64 [sp + 0x8] = a2
 17801: 64 45                    s0 = t2
 17803: 50 20 f2 00 27 6f        ra = 242, jump @2921
      :                          @1419 [@dyn 121]
 17809: 64 63                    t1 = s1
 17811: 64 5b                    a4 = s0
 17813: 49 06 01                 u64 [s1 + 0] = 0x1
 17816: 49 16 08 01              u64 [s1 + 8] = 0x1
 17820: 33 07 02                 a0 = 0x2
 17823: 01                       fallthrough
      :                          @1420
 17824: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 17827: ac 8b 92 00              jump @1431 if a4 <u a1
      :                          @1421
 17831: 95 79 fe                 a2 = a0 + 0xfffffffffffffffe
 17834: ac 9b 8c 00              jump @1432 if a4 <u a2
      :                          @1422
 17838: 95 7a 02                 a3 = a0 + 0x2
 17841: 51 0a 86 00              jump @1433 if a3 == 0
      :                          @1423
 17845: ac 7b 83 00              jump @1434 if a4 <u a0
      :                          @1424
 17849: d8 b7 02                 t0 = a0 <u a4
 17852: 97 7c 01                 a5 = a0 << 0x1
 17855: c8 7c 05                 s0 = a5 + a0
 17858: 97 76 03                 s1 = a0 << 0x3
 17861: c8 27 07                 a0 = a0 + t0
 17864: 97 88 03                 a1 = a1 << 0x3
 17867: c8 38 08                 a1 = a1 + t1
 17870: 82 88                    a1 = u64 [a1]
 17872: 97 99 03                 a2 = a2 << 0x3
 17875: c8 39 09                 a2 = a2 + t1
 17878: 82 99                    a2 = u64 [a2]
 17880: 95 55 fd                 s0 = s0 + 0xfffffffffffffffd
 17883: 95 cc 01                 a5 = a5 + 0x1
 17886: ca c8 08                 a1 = a1 * a5
 17889: ca 59 09                 a2 = a2 * s0
 17892: c8 98 08                 a1 = a1 + a2
 17895: c8 36 06                 s1 = s1 + t1
 17898: cb a8 08                 a1 = a1 /u a3
 17901: d8 7b 09                 a2 = a4 <u a0
 17904: 85 99 01                 a2 = a2 ^ 0x1
 17907: d2 92 09                 a2 = t0 & a2
 17910: 7b 68                    u64 [s1] = a1
 17912: 52 09 a8                 jump @1420 if a2 != 0
      :                          @1425
 17915: 97 b6 03                 s1 = a4 << 0x3
 17918: c8 36 06                 s1 = s1 + t1
 17921: 82 67                    a0 = u64 [s1]
 17923: 33 08 f0 02 03           a1 = 0x302f0
 17928: 95 88 00 00 01           a1 = a1 + 0x10000
 17933: 82 16 08                 s1 = u64 [sp + 0x8]
 17936: 01                       fallthrough
      :                          @1426
 17937: 82 89                    a2 = u64 [a1]
 17939: c9 98 0a                 a3 = a1 - a2
 17942: ab 3a 11                 jump @1430 if a3 != t1
      :                          @1427
 17945: c9 69 0a                 a3 = a2 - s1
 17948: 01                       fallthrough
      :                          @1428
 17949: 82 8b                    a4 = u64 [a1]
 17951: ab 9b f2                 jump @1426 if a4 != a2
      :                          @1429
 17954: 7b 8a                    u64 [a1] = a3
 17956: 33 0c                    a5 = 0
 17958: 01                       fallthrough
      :                          @1430
 17959: 82 10 20                 ra = u64 [sp + 0x20]
 17962: 82 15 18                 s0 = u64 [sp + 0x18]
 17965: 82 16 10                 s1 = u64 [sp + 0x10]
 17968: 95 11 28                 sp = sp + 0x28
 17971: 32 00                    ret
      :                          @1431
 17973: 00                       trap
      :                          @1432
 17974: 00                       trap
      :                          @1433
 17975: 00                       trap
      :                          @1434
 17976: 00                       trap
      :                          @1435
 17977: 00                       trap
      :                          @1436
 17978: cd 87 0a                 a3 = a0 %u a1
 17981: 51 0a 32                 jump @1442 if a3 == 0
      :                          @1437
 17984: 95 8c ff                 a5 = a1 + 0xffffffffffffffff
 17987: 33 09 03                 a2 = 0x3
 17990: 8e c7                    a0 = a5 >u 0
 17992: ae 98 14                 jump @1440 if a1 >=u a2
      :                          @1438
 17995: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 17998: 88 77 01                 a0 = a0 <u 0x1
 18001: 32 00                    ret
      :                          @1439
 18003: 98 bc 01                 a5 = a4 >> 0x1
 18006: ca aa 0a                 a3 = a3 * a3
 18009: ae b9 f2                 jump @1438 if a2 >=u a4
      :                          @1440
 18012: 64 cb                    a4 = a5
 18014: 84 cc 02                 a5 = a5 & 0x2
 18017: cd 8a 0a                 a3 = a3 %u a1
 18020: 51 0c ef                 jump @1439 if a5 == 0
      :                          @1441
 18023: ca 7a 07                 a0 = a3 * a0
 18026: cd 87 07                 a0 = a0 %u a1
 18029: 28 e6                    jump @1439
      :                          @1442
 18031: 33 07 01                 a0 = 0x1
 18034: 28 5c 0e                 jump @1721
      :                          @1443
 18037: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 18040: 7b 10 38                 u64 [sp + 0x38] = ra
 18043: 7b 15 30                 u64 [sp + 0x30] = s0
 18046: 7b 16 28                 u64 [sp + 0x28] = s1
 18049: 64 70                    ra = a0
 18051: 84 77 01                 a0 = a0 & 0x1
 18054: 52 07 25                 jump @1445 if a0 != 0
      :                          @1444
 18057: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 18062: 49 11 20                 u64 [sp + 32] = 0
 18065: 97 89 0d                 a2 = a1 << 0xd
 18068: d3 98 08                 a1 = a1 ^ a2
 18071: 98 89 07                 a2 = a1 >> 0x7
 18074: d3 98 08                 a1 = a1 ^ a2
 18077: 97 89 11                 a2 = a1 << 0x11
 18080: d3 98 08                 a1 = a1 ^ a2
 18083: 3e 08 e0 00 03           u64 [0x300e0] = a1
 18088: 28 e8 00                 jump @1464
      :                          @1445
 18091: 33 09                    a2 = 0
 18093: 95 07 fe                 a0 = ra + 0xfffffffffffffffe
 18096: 7b 17 18                 u64 [sp + 0x18] = a0
 18099: 95 07 ff                 a0 = ra + 0xffffffffffffffff
 18102: 7b 17 10                 u64 [sp + 0x10] = a0
 18105: 3a 07 20 00 03           a0 = u64 [0x30020]
 18110: 7b 17 08                 u64 [sp + 0x8] = a0
 18113: 33 0a 05                 a3 = 0x5
 18116: 33 0c 03                 a5 = 0x3
 18119: 01                       fallthrough
      :                          @1446
 18120: 95 97 fb                 a0 = a2 + 0xfffffffffffffffb
 18123: 88 77 01                 a0 = a0 <u 0x1
 18126: 7b 17 20                 u64 [sp + 0x20] = a0
 18129: aa a9 bf 00              jump @1464 if a2 == a3
      :                          @1447
 18133: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 18138: 97 78 0d                 a1 = a0 << 0xd
 18141: d3 87 07                 a0 = a0 ^ a1
 18144: 98 78 07                 a1 = a0 >> 0x7
 18147: d3 87 07                 a0 = a0 ^ a1
 18150: 97 78 11                 a1 = a0 << 0x11
 18153: d3 87 07                 a0 = a0 ^ a1
 18156: 3e 07 e0 00 03           u64 [0x300e0] = a0
 18161: 82 18 08                 a1 = u64 [sp + 0x8]
 18164: ca 87 07                 a0 = a0 * a1
 18167: 82 18 18                 a1 = u64 [sp + 0x18]
 18170: cd 87 0b                 a4 = a0 %u a1
 18173: 95 bb 02                 a4 = a4 + 0x2
 18176: cd 0b 07                 a0 = a4 %u ra
 18179: 33 05 01                 s0 = 0x1
 18182: 64 02                    t0 = ra
 18184: 33 06 01                 s1 = 0x1
 18187: 51 07 49                 jump @1458 if a0 == 0
      :                          @1448
 18190: 33 06 01                 s1 = 0x1
 18193: 64 03                    t1 = ra
 18195: 28 18                    jump @1451
      :                          @1449
 18197: 64 72                    t0 = a0
 18199: 01                       fallthrough
      :                          @1450
 18200: d2 23 07                 a0 = t1 & t0
 18203: 84 78 02                 a1 = a0 & 0x2
 18206: 9a 64                    t2 = -s1
 18208: cd 23 07                 a0 = t1 %u t0
 18211: db 84 06                 s1 = t2 if a1 != 0
 18214: 64 23                    t1 = t0
 18216: 51 07 2c                 jump @1458 if a0 == 0
      :                          @1451
 18219: 84 78 01                 a1 = a0 & 0x1
 18222: 52 08 e7                 jump @1449 if a1 != 0
      :                          @1452
 18225: 84 38 07                 a1 = t1 & 0x7
 18228: aa c8 06                 jump @1454 if a1 == a5
      :                          @1453
 18231: ab a8 12                 jump @1456 if a1 != a3
      :                          @1454
 18234: 98 72 01                 t0 = a0 >> 0x1
 18237: 84 78 02                 a1 = a0 & 0x2
 18240: 9a 66                    s1 = -s1
 18242: 64 27                    a0 = t0
 18244: 51 08 f6                 jump @1454 if a1 == 0
      :                          @1455
 18247: 28 d1                    jump @1450
      :                          @1456
 18249: 84 78 02                 a1 = a0 & 0x2
 18252: 98 77 01                 a0 = a0 >> 0x1
 18255: 51 08 fa                 jump @1456 if a1 == 0
      :                          @1457
 18258: 28 c3                    jump @1449
      :                          @1458
 18260: 83 99 01                 i32 a2 = a2 + 0x1
 18263: 82 17 10                 a0 = u64 [sp + 0x10]
 18266: 28 0b                    jump @1460
      :                          @1459
 18268: 98 87 01                 a0 = a1 >> 0x1
 18271: ca bb 0b                 a4 = a4 * a4
 18274: ae 8c 16                 jump @1462 if a5 >=u a1
      :                          @1460
 18277: 64 78                    a1 = a0
 18279: 84 77 02                 a0 = a0 & 0x2
 18282: cd 0b 0b                 a4 = a4 %u ra
 18285: 51 07 ef                 jump @1459 if a0 == 0
      :                          @1461
 18288: ca 5b 07                 a0 = a4 * s0
 18291: cd 07 05                 s0 = a0 %u ra
 18294: 28 e6                    jump @1459
      :                          @1462
 18296: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 18299: 8e 27                    a0 = t0 >u 0
 18301: 88 68 01                 a1 = s1 <u 0x1
 18304: d4 87 07                 a0 = a0 | a1
 18307: 52 07 0d                 jump @1464 if a0 != 0
      :                          @1463
 18310: c9 65 05                 s0 = s0 - s1
 18313: ce 05 07                 a0 = s0 %s ra
 18316: 51 07 3c ff              jump @1446 if a0 == 0
      :                          @1464
 18320: 82 17 20                 a0 = u64 [sp + 0x20]
 18323: 82 10 38                 ra = u64 [sp + 0x38]
 18326: 82 15 30                 s0 = u64 [sp + 0x30]
 18329: 82 16 28                 s1 = u64 [sp + 0x28]
 18332: 95 11 40                 sp = sp + 0x40
 18335: 32 00                    ret
      :                          @1465
 18337: c8 a2 09                 a2 = t0 + a3
 18340: 98 99 01                 a2 = a2 >> 0x1
 18343: d6 99 0b                 a4 = a2 mulhu a2
 18346: ca 99 0c                 a5 = a2 * a2
 18349: db b3 0c                 a5 = t1 if a4 != 0
 18352: aa 8c 17                 jump @1468 if a5 == a1
      :                          @1466
 18355: d8 8c 0b                 a4 = a5 <u a1
 18358: 95 9c 01                 a5 = a2 + 0x1
 18361: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 18364: da b9 02                 t0 = a2 if a4 == 0
 18367: db bc 0a                 a3 = a5 if a4 != 0
 18370: ae a2 df                 jump @1465 if t0 >=u a3
      :                          @1467
 18373: 28 0b                    jump @1470
      :                          @1468
 18375: 64 92                    t0 = a2
 18377: 28 07                    jump @1470
      :                          @1469
 18379: 64 ba                    a3 = a4
 18381: aa 34 3e                 jump @1474 if t2 == t1
      :                          @1470
 18384: 95 22 01                 t0 = t0 + 0x1
 18387: ca 22 09                 a2 = t0 * t0
 18390: c9 89 03                 t1 = a2 - a1
 18393: 33 0c                    a5 = 0
 18395: 64 3a                    a3 = t1
 18397: 01                       fallthrough
      :                          @1471
 18398: c8 ca 0b                 a4 = a3 + a5
 18401: 98 bb 01                 a4 = a4 >> 0x1
 18404: ca bb 04                 t2 = a4 * a4
 18407: d6 bb 05                 s0 = a4 mulhu a4
 18410: 33 09 ff                 a2 = 0xffffffffffffffff
 18413: da 54 09                 a2 = t2 if s0 == 0
 18416: aa 39 db                 jump @1469 if a2 == t1
      :                          @1472
 18419: d8 39 09                 a2 = a2 <u t1
 18422: 95 b5 01                 s0 = a4 + 0x1
 18425: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 18428: da 9b 0a                 a3 = a4 if a2 == 0
 18431: db 95 0c                 a5 = s0 if a2 != 0
 18434: ae ca dc                 jump @1471 if a3 >=u a5
      :                          @1473
 18437: ca aa 04                 t2 = a3 * a3
 18440: ab 34 c8                 jump @1470 if t2 != t1
      :                          @1474
 18443: c9 a2 08                 a1 = t0 - a3
 18446: c8 2a 0a                 a3 = a3 + t0
 18449: 7b 78 08                 u64 [a0 + 0x8] = a1
 18452: 7b 7a 10                 u64 [a0 + 0x10] = a3
 18455: 33 08 01                 a1 = 0x1
 18458: 7b 78                    u64 [a0] = a1
 18460: 82 15 08                 s0 = u64 [sp + 0x8]
 18463: 95 11 10                 sp = sp + 0x10
 18466: 32 00                    ret
      :                          @1475
 18468: 98 aa 01                 a3 = a3 >> 0x1
 18471: ca 77 0c                 a5 = a0 * a0
 18474: 51 0a 38                 jump @1478 if a3 == 0
      :                          @1476
 18477: d6 bc 09                 a2 = a5 mulhu a4
 18480: c9 9c 07                 a0 = a5 - a2
 18483: 98 77 01                 a0 = a0 >> 0x1
 18486: c8 97 07                 a0 = a0 + a2
 18489: 98 77 04                 a0 = a0 >> 0x4
 18492: ca 47 07                 a0 = a0 * t2
 18495: 84 a9 01                 a2 = a3 & 0x1
 18498: c9 7c 07                 a0 = a5 - a0
 18501: 51 09 df                 jump @1475 if a2 == 0
      :                          @1477
 18504: ca 75 08                 a1 = s0 * a0
 18507: d6 b8 09                 a2 = a1 mulhu a4
 18510: c9 98 0c                 a5 = a1 - a2
 18513: 98 cc 01                 a5 = a5 >> 0x1
 18516: c8 c9 09                 a2 = a2 + a5
 18519: 98 99 04                 a2 = a2 >> 0x4
 18522: ca 49 09                 a2 = a2 * t2
 18525: c9 98 05                 s0 = a1 - a2
 18528: 28 c4                    jump @1475
      :                          @1478
 18530: 3a 07 30 00 03           a0 = u64 [0x30030]
 18535: ca 32 09                 a2 = t0 * t1
 18538: d6 79 07                 a0 = a2 mulhu a0
 18541: c9 79 0a                 a3 = a2 - a0
 18544: 98 aa 01                 a3 = a3 >> 0x1
 18547: c8 a7 07                 a0 = a0 + a3
 18550: 98 77 04                 a0 = a0 >> 0x4
 18553: 96 77 15                 a0 = a0 * 0x15
 18556: c9 79 0a                 a3 = a2 - a0
 18559: 3a 09 38 00 03           a2 = u64 [0x30038]
 18564: 95 aa 01                 a3 = a3 + 0x1
 18567: 33 07 01                 a0 = 0x1
 18570: 33 0b 17                 a4 = 0x17
 18573: 28 0b                    jump @1480
      :                          @1479
 18575: 98 aa 01                 a3 = a3 >> 0x1
 18578: ca 88 05                 s0 = a1 * a1
 18581: 51 0a 38                 jump @1482 if a3 == 0
      :                          @1480
 18584: d6 95 0c                 a5 = s0 mulhu a2
 18587: c9 c5 08                 a1 = s0 - a5
 18590: 98 88 01                 a1 = a1 >> 0x1
 18593: c8 c8 08                 a1 = a1 + a5
 18596: 98 88 04                 a1 = a1 >> 0x4
 18599: ca b8 08                 a1 = a1 * a4
 18602: 84 ac 01                 a5 = a3 & 0x1
 18605: c9 85 08                 a1 = s0 - a1
 18608: 51 0c df                 jump @1479 if a5 == 0
      :                          @1481
 18611: ca 87 05                 s0 = a0 * a1
 18614: d6 95 0c                 a5 = s0 mulhu a2
 18617: c9 c5 07                 a0 = s0 - a5
 18620: 98 77 01                 a0 = a0 >> 0x1
 18623: c8 c7 07                 a0 = a0 + a5
 18626: 98 77 04                 a0 = a0 >> 0x4
 18629: ca b7 07                 a0 = a0 * a4
 18632: c9 75 07                 a0 = s0 - a0
 18635: 28 c4                    jump @1479
      :                          @1482
 18637: 82 15 08                 s0 = u64 [sp + 0x8]
 18640: 95 11 10                 sp = sp + 0x10
 18643: 32 00                    ret
      :                          @1483 [@dyn 122]
 18645: 49 11 10                 u64 [sp + 16] = 0
 18648: 33 07 08                 a0 = 0x8
 18651: 7b 17 18                 u64 [sp + 0x18] = a0
 18654: 49 11 20                 u64 [sp + 32] = 0
 18657: 51 06 a9 00              jump @1503 if s1 == 0
      :                          @1484
 18661: 97 66 03                 s1 = s1 << 0x3
 18664: c8 65 03                 t1 = s0 + s1
 18667: 33 06 64                 s1 = 0x64
 18670: 64 52                    t0 = s0
 18672: 7b 13                    u64 [sp] = t1
 18674: 28 13                    jump @1486
      :                          @1485
 18676: 97 89 03                 a2 = a1 << 0x3
 18679: c8 79 09                 a2 = a2 + a0
 18682: 7b 95                    u64 [a2] = s0
 18684: 95 88 01                 a1 = a1 + 0x1
 18687: 7b 18 20                 u64 [sp + 0x20] = a1
 18690: aa 32 4c                 jump @1494 if t0 == t1
      :                          @1486
 18693: 82 18 20                 a1 = u64 [sp + 0x20]
 18696: 82 25                    s0 = u64 [t0]
 18698: 95 22 08                 t0 = t0 + 0x8
 18701: 95 7a f8                 a3 = a0 + 0xfffffffffffffff8
 18704: 97 89 03                 a2 = a1 << 0x3
 18707: 01                       fallthrough
      :                          @1487
 18708: 51 09 1b                 jump @1491 if a2 == 0
      :                          @1488
 18711: 82 ac 08                 a5 = u64 [a3 + 0x8]
 18714: 95 ab 08                 a4 = a3 + 0x8
 18717: c8 5c 0c                 a5 = a5 + s0
 18720: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 18723: 64 ba                    a3 = a4
 18725: ac c6 ef                 jump @1487 if s1 <u a5
      :                          @1489
 18728: 7b bc                    u64 [a4] = a5
 18730: ab 32 db                 jump @1486 if t0 != t1
      :                          @1490
 18733: 28 21                    jump @1494
      :                          @1491
 18735: 82 19 10                 a2 = u64 [sp + 0x10]
 18738: ab 98 c2                 jump @1485 if a1 != a2
      :                          @1492
 18741: 95 17 10                 a0 = sp + 0x10
 18744: 7b 12 08                 u64 [sp + 0x8] = t0
 18747: 50 20 f6 00 ab d7        ra = 246, jump @694
      :                          @1493 [@dyn 123]
 18753: 82 13                    t1 = u64 [sp]
 18755: 82 12 08                 t0 = u64 [sp + 0x8]
 18758: 82 18 20                 a1 = u64 [sp + 0x20]
 18761: 82 17 18                 a0 = u64 [sp + 0x18]
 18764: 28 a8                    jump @1485
      :                          @1494
 18766: 82 19 10                 a2 = u64 [sp + 0x10]
 18769: 82 17 20                 a0 = u64 [sp + 0x20]
 18772: 51 09 39                 jump @1504 if a2 == 0
      :                          @1495
 18775: 33 08 00 20              a1 = 0x2000
 18779: ac 98 32                 jump @1504 if a1 <u a2
      :                          @1496
 18782: 82 18 18                 a1 = u64 [sp + 0x18]
 18785: 97 99 03                 a2 = a2 << 0x3
 18788: 33 0a f0 02 03           a3 = 0x302f0
 18793: 95 aa 00 00 01           a3 = a3 + 0x10000
 18798: 01                       fallthrough
      :                          @1497
 18799: 82 ab                    a4 = u64 [a3]
 18801: c9 ba 0c                 a5 = a3 - a4
 18804: ab 8c 19                 jump @1504 if a5 != a1
      :                          @1498
 18807: c9 9b 0c                 a5 = a4 - a2
 18810: 01                       fallthrough
      :                          @1499
 18811: 82 a6                    s1 = u64 [a3]
 18813: ab b6 f2                 jump @1497 if s1 != a4
      :                          @1500
 18816: 7b ac                    u64 [a3] = a5
 18818: 33 05                    s0 = 0
 18820: 01                       fallthrough
      :                          @1501
 18821: ab b6 ea                 jump @1497 if s1 != a4
      :                          @1502
 18824: 28 05                    jump @1504
      :                          @1503
 18826: 33 07                    a0 = 0
 18828: 01                       fallthrough
      :                          @1504
 18829: 82 10 38                 ra = u64 [sp + 0x38]
 18832: 82 15 30                 s0 = u64 [sp + 0x30]
 18835: 82 16 28                 s1 = u64 [sp + 0x28]
 18838: 95 11 40                 sp = sp + 0x40
 18841: 32 00                    ret
      :                          @1505
 18843: ca c9 09                 a2 = a2 * a5
 18846: 95 00 01                 ra = ra + 0x1
 18849: c8 94 04                 t2 = t2 + a2
 18852: aa 70 47                 jump @1514 if ra == a0
      :                          @1506
 18855: 64 09                    a2 = ra
 18857: 64 7c                    a5 = a0
 18859: 01                       fallthrough
      :                          @1507
 18860: 64 cb                    a4 = a5
 18862: cd c9 0c                 a5 = a2 %u a5
 18865: 64 b9                    a2 = a4
 18867: 52 0c f9                 jump @1507 if a5 != 0
      :                          @1508
 18870: 83 bc                    i32 a5 = a4 + 0
 18872: 51 0c 27                 jump @1513 if a5 == 0
      :                          @1509
 18875: 64 89                    a2 = a1
 18877: aa 2c de                 jump @1505 if a5 == t0
      :                          @1510
 18880: 33 0c 01                 a5 = 0x1
 18883: 64 89                    a2 = a1
 18885: 01                       fallthrough
      :                          @1511
 18886: 83 b5                    i32 s0 = a4 + 0
 18888: 84 b6 01                 s1 = a4 & 0x1
 18891: 33 0a 01                 a3 = 0x1
 18894: db 69 0a                 a3 = a2 if s1 != 0
 18897: ca ca 0c                 a5 = a3 * a5
 18900: 8b bb 01                 i32 a4 = a4 >> 0x1
 18903: ca 99 09                 a2 = a2 * a2
 18906: ac 53 ec                 jump @1511 if t1 <u s0
      :                          @1512
 18909: 28 be                    jump @1505
      :                          @1513
 18911: 33 09 01                 a2 = 0x1
 18914: c8 90 00                 ra = ra + a2
 18917: c8 94 04                 t2 = t2 + a2
 18920: ab 70 bf                 jump @1506 if ra != a0
      :                          @1514
 18923: cb 74 07                 a0 = t2 /u a0
 18926: 82 10 18                 ra = u64 [sp + 0x18]
 18929: 82 15 10                 s0 = u64 [sp + 0x10]
 18932: 82 16 08                 s1 = u64 [sp + 0x8]
 18935: 95 11 20                 sp = sp + 0x20
 18938: 32 00                    ret
      :                          @1515
 18940: 51 07 4f                 jump @1526 if a0 == 0
      :                          @1516
 18943: 33 03                    t1 = 0
 18945: ca 78 02                 t0 = a1 * a0
 18948: 95 7b ff                 a4 = a0 + 0xffffffffffffffff
 18951: 33 09 01                 a2 = 0x1
 18954: 64 8a                    a3 = a1
 18956: 28 05                    jump @1518
      :                          @1517
 18958: 64 8a                    a3 = a1
 18960: 01                       fallthrough
      :                          @1518
 18961: c8 ab 0c                 a5 = a4 + a3
 18964: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 18967: ca c9 09                 a2 = a2 * a5
 18970: 52 0a f7                 jump @1518 if a3 != 0
      :                          @1519
 18973: 95 33 01                 t1 = t1 + 0x1
 18976: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 18979: ab 73 eb                 jump @1517 if t1 != a0
      :                          @1520
 18982: 51 02 2b                 jump @1527 if t0 == 0
      :                          @1521
 18985: 33 08 01                 a1 = 0x1
 18988: 64 27                    a0 = t0
 18990: aa 82 12                 jump @1524 if t0 == a1
      :                          @1522
 18993: 33 07 01                 a0 = 0x1
 18996: 01                       fallthrough
      :                          @1523
 18997: 95 8a 01                 a3 = a1 + 0x1
 19000: ca 78 07                 a0 = a1 * a0
 19003: 64 a8                    a1 = a3
 19005: ab a2 f8                 jump @1523 if t0 != a3
      :                          @1524
 19008: ca 27 07                 a0 = a0 * t0
 19011: 51 09 14                 jump @1528 if a2 == 0
      :                          @1525
 19014: cb 97 07                 a0 = a0 /u a2
 19017: 32 00                    ret
      :                          @1526
 19019: 33 07 01                 a0 = 0x1
 19022: 28 bc 13                 jump @1850
      :                          @1527
 19025: 33 07 01                 a0 = 0x1
 19028: 52 09 f2                 jump @1525 if a2 != 0
      :                          @1528
 19031: 00                       trap
      :                          @1529
 19032: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 19035: 7b 10 40                 u64 [sp + 0x40] = ra
 19038: 7b 15 38                 u64 [sp + 0x38] = s0
 19041: 7b 16 30                 u64 [sp + 0x30] = s1
 19044: 95 79 01                 a2 = a0 + 0x1
 19047: 51 09 6f 01              jump @1558 if a2 == 0
      :                          @1530
 19051: 64 85                    s0 = a1
 19053: 98 98 3c                 a1 = a2 >> 0x3c
 19056: 52 08 67 01              jump @1559 if a1 != 0
      :                          @1531
 19060: 7b 17 08                 u64 [sp + 0x8] = a0
 19063: 88 82 01                 t0 = a1 <u 0x1
 19066: 7b 19 28                 u64 [sp + 0x28] = a2
 19069: 97 99 03                 a2 = a2 << 0x3
 19072: 97 22 03                 t0 = t0 << 0x3
 19075: 33 04 f0 02 03           t2 = 0x302f0
 19080: 33 03 00 00 01           t1 = 0x10000
 19085: c8 34 00                 ra = t2 + t1
 19088: 01                       fallthrough
      :                          @1532
 19089: 82 0b                    a4 = u64 [ra]
 19091: c8 9b 0c                 a5 = a4 + a2
 19094: ac bc 3f 01              jump @1557 if a5 <u a4
      :                          @1533
 19098: c8 2c 07                 a0 = a5 + t0
 19101: d8 c7 06                 s1 = a0 <u a5
 19104: d8 73 07                 a0 = t1 <u a0
 19107: d4 67 07                 a0 = a0 | s1
 19110: 52 07 2f 01              jump @1557 if a0 != 0
      :                          @1534
 19114: c9 c4 06                 s1 = t2 - a5
 19117: c8 36 0a                 a3 = s1 + t1
 19120: 84 a6 07                 s1 = a3 & 0x7
 19123: c8 6c 0c                 a5 = a5 + s1
 19126: 01                       fallthrough
      :                          @1535
 19127: 82 07                    a0 = u64 [ra]
 19129: ab b7 d8                 jump @1532 if a0 != a4
      :                          @1536
 19132: 7b 0c                    u64 [ra] = a5
 19134: c9 6a 06                 s1 = a3 - s1
 19137: 64 67                    a0 = s1
 19139: 33 08                    a1 = 0
 19141: 7b 19                    u64 [sp] = a2
 19143: 50 20 f8 00 eb 69        ra = 248, jump @2921
      :                          @1537 [@dyn 124]
 19149: 33 07 01                 a0 = 0x1
 19152: 64 64                    t2 = s1
 19154: 7b 67                    u64 [s1] = a0
 19156: 82 19 08                 a2 = u64 [sp + 0x8]
 19159: 51 09 cb 00              jump @1549 if a2 == 0
      :                          @1538
 19163: 95 57 ff                 a0 = s0 + 0xffffffffffffffff
 19166: 7b 17 20                 u64 [sp + 0x20] = a0
 19169: 33 07 01                 a0 = 0x1
 19172: 82 1c 28                 a5 = u64 [sp + 0x28]
 19175: 33 02 01                 t0 = 0x1
 19178: 28 1a                    jump @1540
      :                          @1539
 19180: 82 19 08                 a2 = u64 [sp + 0x8]
 19183: 82 1a 18                 a3 = u64 [sp + 0x18]
 19186: d8 a9 07                 a0 = a2 <u a3
 19189: 85 77 01                 a0 = a0 ^ 0x1
 19192: 82 18 10                 a1 = u64 [sp + 0x10]
 19195: d2 78 08                 a1 = a1 & a0
 19198: 64 a7                    a0 = a3
 19200: 51 08 93 00              jump @1548 if a1 == 0
      :                          @1540
 19204: ae c7 d0 00              jump @1556 if a0 >=u a5
      :                          @1541
 19208: d8 97 08                 a1 = a0 <u a2
 19211: 7b 18 10                 u64 [sp + 0x10] = a1
 19214: c8 78 08                 a1 = a1 + a0
 19217: 7b 18 18                 u64 [sp + 0x18] = a1
 19220: 97 76 03                 s1 = a0 << 0x3
 19223: c8 46 06                 s1 = s1 + t2
 19226: 82 6b                    a4 = u64 [s1]
 19228: 33 08 01                 a1 = 0x1
 19231: 33 03 02                 t1 = 0x2
 19234: 33 0a 05                 a3 = 0x5
 19237: 33 09 02                 a2 = 0x2
 19240: 28 1e                    jump @1544
      :                          @1542
 19242: 82 1c 28                 a5 = u64 [sp + 0x28]
 19245: 01                       fallthrough
      :                          @1543
 19246: ca 3a 08                 a1 = a3 * t1
 19249: 98 88 01                 a1 = a1 >> 0x1
 19252: 95 a9 02                 a2 = a3 + 0x2
 19255: ca 39 09                 a2 = a2 * t1
 19258: 98 99 01                 a2 = a2 >> 0x1
 19261: 95 33 01                 t1 = t1 + 0x1
 19264: 95 aa 03                 a3 = a3 + 0x3
 19267: ac 87 a9                 jump @1539 if a0 <u a1
      :                          @1544
 19270: c9 87 08                 a1 = a0 - a1
 19273: ae c8 8a 00              jump @1555 if a1 >=u a5
      :                          @1545
 19277: 97 88 03                 a1 = a1 << 0x3
 19280: c8 48 08                 a1 = a1 + t2
 19283: 82 88                    a1 = u64 [a1]
 19285: 83 3c ff                 i32 a5 = t1 + 0xffffffffffffffff
 19288: 84 cc 01                 a5 = a5 & 0x1
 19291: 82 10 20                 ra = u64 [sp + 0x20]
 19294: db c2 00                 ra = t0 if a5 != 0
 19297: ca 08 08                 a1 = a1 * ra
 19300: cd 58 08                 a1 = a1 %u s0
 19303: c8 b8 08                 a1 = a1 + a4
 19306: cd 58 0b                 a4 = a1 %u s0
 19309: 7b 6b                    u64 [s1] = a4
 19311: ac 97 bb                 jump @1542 if a0 <u a2
      :                          @1546
 19314: c9 97 08                 a1 = a0 - a2
 19317: 82 1c 28                 a5 = u64 [sp + 0x28]
 19320: ae c8 5b                 jump @1555 if a1 >=u a5
      :                          @1547
 19323: 97 88 03                 a1 = a1 << 0x3
 19326: c8 48 08                 a1 = a1 + t2
 19329: 82 88                    a1 = u64 [a1]
 19331: ca 08 08                 a1 = a1 * ra
 19334: cd 58 08                 a1 = a1 %u s0
 19337: c8 b8 08                 a1 = a1 + a4
 19340: cd 58 0b                 a4 = a1 %u s0
 19343: 7b 6b                    u64 [s1] = a4
 19345: 28 9d                    jump @1543
      :                          @1548
 19347: 97 97 03                 a0 = a2 << 0x3
 19350: c8 47 07                 a0 = a0 + t2
 19353: 82 77                    a0 = u64 [a0]
 19355: 33 08 00 20              a1 = 0x2000
 19359: ac c8 26                 jump @1554 if a1 <u a5
      :                          @1549
 19362: 33 08 f0 02 03           a1 = 0x302f0
 19367: 95 88 00 00 01           a1 = a1 + 0x10000
 19372: 82 16                    s1 = u64 [sp]
 19374: 01                       fallthrough
      :                          @1550
 19375: 82 89                    a2 = u64 [a1]
 19377: c9 98 0a                 a3 = a1 - a2
 19380: ab 4a 11                 jump @1554 if a3 != t2
      :                          @1551
 19383: c9 69 0a                 a3 = a2 - s1
 19386: 01                       fallthrough
      :                          @1552
 19387: 82 8b                    a4 = u64 [a1]
 19389: ab 9b f2                 jump @1550 if a4 != a2
      :                          @1553
 19392: 7b 8a                    u64 [a1] = a3
 19394: 33 0c                    a5 = 0
 19396: 01                       fallthrough
      :                          @1554
 19397: 82 10 40                 ra = u64 [sp + 0x40]
 19400: 82 15 38                 s0 = u64 [sp + 0x38]
 19403: 82 16 30                 s1 = u64 [sp + 0x30]
 19406: 95 11 48                 sp = sp + 0x48
 19409: 32 00                    ret
      :                          @1555
 19411: 00                       trap
      :                          @1556
 19412: 00                       trap
      :                          @1557
 19413: 00                       trap
      :                          @1558
 19414: 00                       trap
      :                          @1559
 19415: 00                       trap
      :                          @1560
 19416: 51 18 01 cd 15           jump @1890 if a1 == 1
      :                          @1561
 19421: 83 79                    i32 a2 = a0 + 0
 19423: 51 09 39                 jump @1566 if a2 == 0
      :                          @1562
 19426: 33 0b 01                 a4 = 0x1
 19429: 64 8a                    a3 = a1
 19431: aa b9 23                 jump @1565 if a2 == a4
      :                          @1563
 19434: 33 02 03                 t0 = 0x3
 19437: 64 8a                    a3 = a1
 19439: 33 09 01                 a2 = 0x1
 19442: 01                       fallthrough
      :                          @1564
 19443: 83 73                    i32 t1 = a0 + 0
 19445: 84 7b 01                 a4 = a0 & 0x1
 19448: 33 0c 01                 a5 = 0x1
 19451: db ba 0c                 a5 = a3 if a4 != 0
 19454: ca 9c 09                 a2 = a5 * a2
 19457: 8b 77 01                 i32 a0 = a0 >> 0x1
 19460: ca aa 0a                 a3 = a3 * a3
 19463: ac 32 ec                 jump @1564 if t0 <u t1
      :                          @1565
 19466: ca 9a 09                 a2 = a3 * a2
 19469: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 19472: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 19475: cb 89 07                 a0 = a2 /u a1
 19478: 32 00                    ret
      :                          @1566
 19480: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 19483: cb 89 07                 a0 = a2 /u a1
 19486: 28 87 15                 jump @1890
      :                          @1567
 19489: 82 7b                    a4 = u64 [a0]
 19491: 82 7a 08                 a3 = u64 [a0 + 0x8]
 19494: 82 72 18                 t0 = u64 [a0 + 0x18]
 19497: 82 79 10                 a2 = u64 [a0 + 0x10]
 19500: ca b2 0c                 a5 = t0 * a4
 19503: ca a9 08                 a1 = a2 * a3
 19506: 33 07 ff                 a0 = 0xffffffffffffffff
 19509: aa 8c 21 17              jump @1903 if a5 == a1
      :                          @1568
 19513: c9 8c 0c                 a5 = a5 - a1
 19516: 9a b7                    a0 = -a4
 19518: e3 7b 07                 a0 = maxs(a4, a0)
 19521: 9a a8                    a1 = -a3
 19523: e3 8a 08                 a1 = maxs(a3, a1)
 19526: c8 78 03                 t1 = a1 + a0
 19529: 9a 9b                    a4 = -a2
 19531: e3 b9 0a                 a3 = maxs(a2, a4)
 19534: 9a 2b                    a4 = -t0
 19536: e3 b2 0b                 a4 = maxs(t0, a4)
 19539: c8 ab 09                 a2 = a4 + a3
 19542: e3 93 09                 a2 = maxs(t1, a2)
 19545: c8 b8 08                 a1 = a1 + a4
 19548: c8 a7 07                 a0 = a0 + a3
 19551: e3 78 07                 a0 = maxs(a1, a0)
 19554: ca 79 07                 a0 = a2 * a0
 19557: 9a c8                    a1 = -a5
 19559: e3 8c 08                 a1 = maxs(a5, a1)
 19562: cb 87 07                 a0 = a0 /u a1
 19565: 28 e9 16                 jump @1903
      :                          @1569
 19568: 55 17 02 0b              jump @1571 if a0 >=u 2
      :                          @1570
 19572: 33 07                    a0 = 0
 19574: 64 c8                    a1 = a5
 19576: 28 c0 17                 jump @1916
      :                          @1571
 19579: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 19582: 7b 10 18                 u64 [sp + 0x18] = ra
 19585: 7b 15 10                 u64 [sp + 0x10] = s0
 19588: 7b 16 08                 u64 [sp + 0x8] = s1
 19591: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 19596: 97 9a 0d                 a3 = a2 << 0xd
 19599: d3 a9 09                 a2 = a2 ^ a3
 19602: 98 9a 07                 a3 = a2 >> 0x7
 19605: d3 a9 09                 a2 = a2 ^ a3
 19608: 97 9a 11                 a3 = a2 << 0x11
 19611: d3 a9 09                 a2 = a2 ^ a3
 19614: 3a 0a 40 00 03           a3 = u64 [0x30040]
 19619: 3e 09 e0 00 03           u64 [0x300e0] = a2
 19624: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 19629: 49 01                    u64 [sp + 0] = 0
 19631: ca a9 0c                 a5 = a2 * a3
 19634: 97 b9 0d                 a2 = a4 << 0xd
 19637: d3 b9 09                 a2 = a2 ^ a4
 19640: 98 9b 07                 a4 = a2 >> 0x7
 19643: d3 b9 09                 a2 = a2 ^ a4
 19646: 97 9b 11                 a4 = a2 << 0x11
 19649: d3 b9 09                 a2 = a2 ^ a4
 19652: 3e 09 e0 00 03           u64 [0x300e0] = a2
 19657: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 19662: ca a9 09                 a2 = a2 * a3
 19665: cd 79 09                 a2 = a2 %u a0
 19668: 97 6b 0d                 a4 = s1 << 0xd
 19671: d3 b6 06                 s1 = s1 ^ a4
 19674: 98 6b 07                 a4 = s1 >> 0x7
 19677: d3 b6 06                 s1 = s1 ^ a4
 19680: 97 6b 11                 a4 = s1 << 0x11
 19683: d3 6b 0b                 a4 = a4 ^ s1
 19686: ca ab 0a                 a3 = a4 * a3
 19689: 3e 0b e0 00 03           u64 [0x300e0] = a4
 19694: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 19697: cd 7c 03                 t1 = a5 %u a0
 19700: cd 8a 00                 ra = a3 %u a1
 19703: 95 00 01                 ra = ra + 0x1
 19706: 33 04 01                 t2 = 0x1
 19709: 33 02 01                 t0 = 0x1
 19712: 28 0f                    jump @1574
      :                          @1572
 19714: 33 0c 01                 a5 = 0x1
 19717: 64 a3                    t1 = a3
 19719: 01                       fallthrough
      :                          @1573
 19720: 97 44 01                 t2 = t2 << 0x1
 19723: 52 1c 01 6b              jump @1583 if a5 != 1
      :                          @1574
 19727: 64 3a                    a3 = t1
 19729: 64 48                    a1 = t2
 19731: 51 04 ef                 jump @1572 if t2 == 0
      :                          @1575
 19734: ca 33 0b                 a4 = t1 * t1
 19737: c8 9b 0b                 a4 = a4 + a2
 19740: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 19743: cd 7b 03                 t1 = a4 %u a0
 19746: 52 08 f4                 jump @1575 if a1 != 0
      :                          @1576
 19749: 33 06                    s1 = 0
 19751: 7b 13                    u64 [sp] = t1
 19753: 64 08                    a1 = ra
 19755: 28 07                    jump @1578
      :                          @1577
 19757: 7b 13                    u64 [sp] = t1
 19759: 64 08                    a1 = ra
 19761: 01                       fallthrough
      :                          @1578
 19762: ca 33 0b                 a4 = t1 * t1
 19765: c8 9b 0b                 a4 = a4 + a2
 19768: cd 7b 03                 t1 = a4 %u a0
 19771: d8 a3 0b                 a4 = t1 <u a3
 19774: c9 3a 0c                 a5 = a3 - t1
 19777: c9 a3 05                 s0 = t1 - a3
 19780: db bc 05                 s0 = a5 if a4 != 0
 19783: ca 25 0b                 a4 = s0 * t0
 19786: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 19789: cd 7b 02                 t0 = a4 %u a0
 19792: 52 08 e2                 jump @1578 if a1 != 0
      :                          @1579
 19795: 64 2b                    a4 = t0
 19797: 64 78                    a1 = a0
 19799: 01                       fallthrough
      :                          @1580
 19800: 64 8c                    a5 = a1
 19802: cd 8b 08                 a1 = a4 %u a1
 19805: 64 cb                    a4 = a5
 19807: 52 08 f9                 jump @1580 if a1 != 0
      :                          @1581
 19810: c8 06 06                 s1 = s1 + ra
 19813: d8 46 08                 a1 = s1 <u t2
 19816: 95 cb ff                 a4 = a5 + 0xffffffffffffffff
 19819: 88 bb 01                 a4 = a4 <u 0x1
 19822: d2 b8 08                 a1 = a1 & a4
 19825: 52 08 bc                 jump @1577 if a1 != 0
      :                          @1582
 19828: 28 94                    jump @1573
      :                          @1583
 19830: 82 15                    s0 = u64 [sp]
 19832: ab 7c 2c                 jump @1588 if a5 != a0
      :                          @1584
 19835: 33 0b 01                 a4 = 0x1
 19838: 01                       fallthrough
      :                          @1585
 19839: ca 55 08                 a1 = s0 * s0
 19842: c8 98 08                 a1 = a1 + a2
 19845: cd 78 05                 s0 = a1 %u a0
 19848: d8 a5 0c                 a5 = s0 <u a3
 19851: c9 5a 06                 s1 = a3 - s0
 19854: c9 a5 08                 a1 = s0 - a3
 19857: db c6 08                 a1 = s1 if a5 != 0
 19860: 64 76                    s1 = a0
 19862: 01                       fallthrough
      :                          @1586
 19863: 64 6c                    a5 = s1
 19865: cd 68 06                 s1 = a1 %u s1
 19868: 64 c8                    a1 = a5
 19870: 52 06 f9                 jump @1586 if s1 != 0
      :                          @1587
 19873: ae cb de                 jump @1585 if a4 >=u a5
      :                          @1588
 19876: d3 c7 07                 a0 = a0 ^ a5
 19879: 8e 77                    a0 = a0 >u 0
 19881: 82 10 18                 ra = u64 [sp + 0x18]
 19884: 82 15 10                 s0 = u64 [sp + 0x10]
 19887: 82 16 08                 s1 = u64 [sp + 0x8]
 19890: 95 11 20                 sp = sp + 0x20
 19893: 64 c8                    a1 = a5
 19895: 32 00                    ret
      :                          @1589
 19897: 33 0b 02                 a4 = 0x2
 19900: aa b9 2e                 jump @1598 if a2 == a4
      :                          @1590
 19903: 64 98                    a1 = a2
 19905: 95 99 01                 a2 = a2 + 0x1
 19908: ac 79 fb                 jump @1590 if a2 <u a0
      :                          @1591
 19911: 84 9b 01                 a4 = a2 & 0x1
 19914: 51 0b ef                 jump @1589 if a4 == 0
      :                          @1592
 19917: ac a9 1a                 jump @1597 if a2 <u a3
      :                          @1593
 19920: 33 0b 03                 a4 = 0x3
 19923: 01                       fallthrough
      :                          @1594
 19924: 51 0b 03 01              jump @1616 if a4 == 0
      :                          @1595
 19928: cd b9 0c                 a5 = a2 %u a4
 19931: 51 0c e4                 jump @1590 if a5 == 0
      :                          @1596
 19934: 95 bb 02                 a4 = a4 + 0x2
 19937: ca bb 0c                 a5 = a4 * a4
 19940: ae c9 f0                 jump @1594 if a2 >=u a5
      :                          @1597
 19943: 64 9b                    a4 = a2
 19945: 01                       fallthrough
      :                          @1598
 19946: 7b 1b 10                 u64 [sp + 0x10] = a4
 19949: 33 09 e0 00 03           a2 = 0x300e0
 19954: 3a 0a 50 00 03           a3 = u64 [0x30050]
 19959: 33 02 e8 03              t0 = 0x3e8
 19963: 33 0c 02                 a5 = 0x2
 19966: 33 04 09                 t2 = 0x9
 19969: 01                       fallthrough
      :                          @1599
 19970: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 19975: 97 7b 0d                 a4 = a0 << 0xd
 19978: d3 b7 07                 a0 = a0 ^ a4
 19981: 98 7b 07                 a4 = a0 >> 0x7
 19984: d3 b7 07                 a0 = a0 ^ a4
 19987: 97 7b 11                 a4 = a0 << 0x11
 19990: d3 b7 07                 a0 = a0 ^ a4
 19993: ca 37 0b                 a4 = a0 * t1
 19996: 3e 07 e0 00 03           u64 [0x300e0] = a0
 20001: 98 b7 03                 a0 = a4 >> 0x3
 20004: d6 a7 07                 a0 = a0 mulhu a3
 20007: 98 77 04                 a0 = a0 >> 0x4
 20010: ca 27 07                 a0 = a0 * t0
 20013: c9 7b 0b                 a4 = a4 - a0
 20016: 95 b7 64                 a0 = a4 + 0x64
 20019: 28 08                    jump @1601
      :                          @1600
 20021: 33 05 02                 s0 = 0x2
 20024: aa 57 2e                 jump @1609 if a0 == s0
      :                          @1601
 20027: 64 76                    s1 = a0
 20029: 95 77 01                 a0 = a0 + 0x1
 20032: ac c7 fb                 jump @1601 if a0 <u a5
      :                          @1602
 20035: 84 7b 01                 a4 = a0 & 0x1
 20038: 51 0b ef                 jump @1600 if a4 == 0
      :                          @1603
 20041: ac 47 1a                 jump @1608 if a0 <u t2
      :                          @1604
 20044: 33 05 03                 s0 = 0x3
 20047: 01                       fallthrough
      :                          @1605
 20048: 51 05 87 00              jump @1616 if s0 == 0
      :                          @1606
 20052: cd 57 0b                 a4 = a0 %u s0
 20055: 51 0b e4                 jump @1601 if a4 == 0
      :                          @1607
 20058: 95 55 02                 s0 = s0 + 0x2
 20061: ca 55 0b                 a4 = s0 * s0
 20064: ae b7 f0                 jump @1605 if a0 >=u a4
      :                          @1608
 20067: 64 75                    s0 = a0
 20069: 01                       fallthrough
      :                          @1609
 20070: aa 86 9c                 jump @1599 if s1 == a1
      :                          @1610
 20073: ca 86 06                 s1 = s1 * a1
 20076: 51 06 6b                 jump @1616 if s1 == 0
      :                          @1611
 20079: 7b 10 08                 u64 [sp + 0x8] = ra
 20082: 33 07 01 00 01           a0 = 0x10001
 20087: cd 67 08                 a1 = a0 %u s1
 20090: 95 17 18                 a0 = sp + 0x18
 20093: 7b 18                    u64 [sp] = a1
 20095: 64 69                    a2 = s1
 20097: 50 20 fa 00 6f d8        ra = 250, jump @762
      :                          @1612 [@dyn 125]
 20103: 82 17 18                 a0 = u64 [sp + 0x18]
 20106: 52 17 01 4f              jump @1618 if a0 != 1
      :                          @1613
 20110: 82 17 20                 a0 = u64 [sp + 0x20]
 20113: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20123: d3 87 09                 a2 = a0 ^ a1
 20126: e1 69 09                 a2 = a2 | ~s1
 20129: 82 1a 08                 a3 = u64 [sp + 0x8]
 20132: 51 09 34                 jump @1617 if a2 == 0
      :                          @1614
 20135: ce 67 07                 a0 = a0 %s s1
 20138: c8 67 07                 a0 = a0 + s1
 20141: d3 78 08                 a1 = a1 ^ a0
 20144: e1 68 08                 a1 = a1 | ~s1
 20147: 51 08 25                 jump @1617 if a1 == 0
      :                          @1615
 20150: ce 67 07                 a0 = a0 %s s1
 20153: 82 18 10                 a1 = u64 [sp + 0x10]
 20156: ca 85 08                 a1 = s0 * a1
 20159: 7b a8                    u64 [a3] = a1
 20161: 82 18                    a1 = u64 [sp]
 20163: 7b a8 08                 u64 [a3 + 0x8] = a1
 20166: 7b a7 10                 u64 [a3 + 0x10] = a0
 20169: 82 10 40                 ra = u64 [sp + 0x40]
 20172: 82 15 38                 s0 = u64 [sp + 0x38]
 20175: 82 16 30                 s1 = u64 [sp + 0x30]
 20178: 95 11 48                 sp = sp + 0x48
 20181: 32 00                    ret
      :                          @1616
 20183: 00                       trap
      :                          @1617
 20184: 00                       trap
      :                          @1618
 20185: 00                       trap
      :                          @1619
 20186: 98 77 01                 a0 = a0 >> 0x1
 20189: ca aa 0a                 a3 = a3 * a3
 20192: 51 07 14                 jump @1622 if a0 == 0
      :                          @1620
 20195: 84 7b 01                 a4 = a0 & 0x1
 20198: cd 8a 0a                 a3 = a3 %u a1
 20201: 51 0b f1                 jump @1619 if a4 == 0
      :                          @1621
 20204: ca 6a 0b                 a4 = a3 * s1
 20207: cd 8b 06                 s1 = a4 %u a1
 20210: 28 e8                    jump @1619
      :                          @1622
 20212: 95 17 10                 a0 = sp + 0x10
 20215: 64 98                    a1 = a2
 20217: 64 59                    a2 = s0
 20219: 50 20 fc 00 f5 d7        ra = 252, jump @762
      :                          @1623 [@dyn 126]
 20225: 82 17 10                 a0 = u64 [sp + 0x10]
 20228: 52 17 01 52              jump @1628 if a0 != 1
      :                          @1624
 20232: 82 17 18                 a0 = u64 [sp + 0x18]
 20235: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20245: d3 87 09                 a2 = a0 ^ a1
 20248: e1 59 09                 a2 = a2 | ~s0
 20251: 51 09 3a                 jump @1627 if a2 == 0
      :                          @1625
 20254: ce 57 07                 a0 = a0 %s s0
 20257: c8 57 07                 a0 = a0 + s0
 20260: d3 78 08                 a1 = a1 ^ a0
 20263: e1 58 08                 a1 = a1 | ~s0
 20266: 51 08 2b                 jump @1627 if a1 == 0
      :                          @1626
 20269: ce 57 08                 a1 = a0 %s s0
 20272: cd 56 07                 a0 = s1 %u s0
 20275: 82 19 08                 a2 = u64 [sp + 0x8]
 20278: ca 97 09                 a2 = a0 * a2
 20281: 82 1a                    a3 = u64 [sp]
 20283: c8 a9 09                 a2 = a2 + a3
 20286: cd 59 09                 a2 = a2 %u s0
 20289: ca 89 08                 a1 = a2 * a1
 20292: cd 58 08                 a1 = a1 %u s0
 20295: 82 10 38                 ra = u64 [sp + 0x38]
 20298: 82 15 30                 s0 = u64 [sp + 0x30]
 20301: 82 16 28                 s1 = u64 [sp + 0x28]
 20304: 95 11 40                 sp = sp + 0x40
 20307: 32 00                    ret
      :                          @1627
 20309: 00                       trap
      :                          @1628
 20310: 00                       trap
      :                          @1629
 20311: 95 11 b0                 sp = sp + 0xffffffffffffffb0
 20314: 7b 10 48                 u64 [sp + 0x48] = ra
 20317: 7b 15 40                 u64 [sp + 0x40] = s0
 20320: 7b 16 38                 u64 [sp + 0x38] = s1
 20323: 88 82 01                 t0 = a1 <u 0x1
 20326: d8 b8 06                 s1 = a1 <u a4
 20329: 85 63 01                 t1 = s1 ^ 0x1
 20332: 88 96 01                 s1 = a2 <u 0x1
 20335: d4 26 05                 s0 = s1 | t0
 20338: d4 35 05                 s0 = s0 | t1
 20341: d8 b9 06                 s1 = a2 <u a4
 20344: 85 66 01                 s1 = s1 ^ 0x1
 20347: d4 56 02                 t0 = s1 | s0
 20350: 51 02 08                 jump @1631 if t0 == 0
      :                          @1630
 20353: 33 07                    a0 = 0
 20355: 28 c2 00                 jump @1646
      :                          @1631
 20358: 64 45                    s0 = t2
 20360: 64 c6                    s1 = a5
 20362: 7b 17                    u64 [sp] = a0
 20364: 7b 1a 08                 u64 [sp + 0x8] = a3
 20367: 7b 18 10                 u64 [sp + 0x10] = a1
 20370: 95 17 20                 a0 = sp + 0x20
 20373: 64 98                    a1 = a2
 20375: 64 b9                    a2 = a4
 20377: 7b 1b 18                 u64 [sp + 0x18] = a4
 20380: 50 20 fe 00 54 d7        ra = 254, jump @762
      :                          @1632 [@dyn 127]
 20386: 82 17 20                 a0 = u64 [sp + 0x20]
 20389: 52 17 01 af 00           jump @1648 if a0 != 1
      :                          @1633
 20394: 82 17 28                 a0 = u64 [sp + 0x28]
 20397: 14 08 00 00 00 00 00 00 00 80 a1 = 0x8000000000000000
 20407: d3 87 09                 a2 = a0 ^ a1
 20410: 82 12 18                 t0 = u64 [sp + 0x18]
 20413: e1 29 09                 a2 = a2 | ~t0
 20416: 51 09 93 00              jump @1647 if a2 == 0
      :                          @1634
 20420: ce 27 07                 a0 = a0 %s t0
 20423: c8 27 07                 a0 = a0 + t0
 20426: d3 78 08                 a1 = a1 ^ a0
 20429: e1 28 08                 a1 = a1 | ~t0
 20432: 51 08 83 00              jump @1647 if a1 == 0
      :                          @1635
 20436: ce 27 08                 a1 = a0 %s t0
 20439: 82 13 10                 t1 = u64 [sp + 0x10]
 20442: ca 38 07                 a0 = a1 * t1
 20445: cd 27 07                 a0 = a0 %u t0
 20448: 82 19                    a2 = u64 [sp]
 20450: ca 98 08                 a1 = a1 * a2
 20453: cd 28 0a                 a3 = a1 %u t0
 20456: 33 08 01                 a1 = 0x1
 20459: 33 09 01                 a2 = 0x1
 20462: 82 14 08                 t2 = u64 [sp + 0x8]
 20465: 51 0a 22                 jump @1640 if a3 == 0
      :                          @1636
 20468: 33 09 01                 a2 = 0x1
 20471: 28 0b                    jump @1638
      :                          @1637
 20473: 98 aa 01                 a3 = a3 >> 0x1
 20476: ca bb 06                 s1 = a4 * a4
 20479: 51 0a 14                 jump @1640 if a3 == 0
      :                          @1638
 20482: 84 ac 01                 a5 = a3 & 0x1
 20485: cd 46 0b                 a4 = s1 %u t2
 20488: 51 0c f1                 jump @1637 if a5 == 0
      :                          @1639
 20491: ca 9b 09                 a2 = a4 * a2
 20494: cd 49 09                 a2 = a2 %u t2
 20497: 28 e8                    jump @1637
      :                          @1640
 20499: 51 07 22                 jump @1645 if a0 == 0
      :                          @1641
 20502: 33 08 01                 a1 = 0x1
 20505: 28 0b                    jump @1643
      :                          @1642
 20507: 98 77 01                 a0 = a0 >> 0x1
 20510: ca aa 05                 s0 = a3 * a3
 20513: 51 07 14                 jump @1645 if a0 == 0
      :                          @1643
 20516: 84 7b 01                 a4 = a0 & 0x1
 20519: cd 45 0a                 a3 = s0 %u t2
 20522: 51 0b f1                 jump @1642 if a4 == 0
      :                          @1644
 20525: ca 8a 08                 a1 = a3 * a1
 20528: cd 48 08                 a1 = a1 %u t2
 20531: 28 e8                    jump @1642
      :                          @1645
 20533: ca 98 07                 a0 = a1 * a2
 20536: cd 47 07                 a0 = a0 %u t2
 20539: cd 27 07                 a0 = a0 %u t0
 20542: d3 37 07                 a0 = a0 ^ t1
 20545: 88 77 01                 a0 = a0 <u 0x1
 20548: 01                       fallthrough
      :                          @1646
 20549: 82 10 48                 ra = u64 [sp + 0x48]
 20552: 82 15 40                 s0 = u64 [sp + 0x40]
 20555: 82 16 38                 s1 = u64 [sp + 0x38]
 20558: 95 11 50                 sp = sp + 0x50
 20561: 32 00                    ret
      :                          @1647
 20563: 00                       trap
      :                          @1648
 20564: 00                       trap
      :                          @1649
 20565: 82 4b                    a4 = u64 [t2]
 20567: c8 9b 0c                 a5 = a4 + a2
 20570: ac bc d9 00              jump @1670 if a5 <u a4
      :                          @1650
 20574: 95 c8 08                 a1 = a5 + 0x8
 20577: d8 c8 06                 s1 = a1 <u a5
 20580: d8 82 08                 a1 = t0 <u a1
 20583: d4 68 08                 a1 = a1 | s1
 20586: 52 08 c9 00              jump @1670 if a1 != 0
      :                          @1651
 20590: c9 c3 06                 s1 = t1 - a5
 20593: c8 26 06                 s1 = s1 + t0
 20596: 84 68 07                 a1 = s1 & 0x7
 20599: c8 8c 0c                 a5 = a5 + a1
 20602: 01                       fallthrough
      :                          @1652
 20603: 82 47                    a0 = u64 [t2]
 20605: ab b7 d8                 jump @1649 if a0 != a4
      :                          @1653
 20608: 7b 4c                    u64 [t2] = a5
 20610: c9 86 06                 s1 = s1 - a1
 20613: 64 67                    a0 = s1
 20615: 33 08                    a1 = 0
 20617: 7b 1a 10                 u64 [sp + 0x10] = a3
 20620: 64 05                    s0 = ra
 20622: 50 20 00 01 24 64        ra = 256, jump @2921
      :                          @1654 [@dyn 128]
 20628: 64 64                    t2 = s1
 20630: 64 56                    s1 = s0
 20632: 82 1a 10                 a3 = u64 [sp + 0x10]
 20635: 33 07                    a0 = 0
 20637: 14 09 00 00 00 00 00 00 00 80 a2 = 0x8000000000000000
 20647: 33 02 02                 t0 = 0x2
 20650: 82 13 18                 t1 = u64 [sp + 0x18]
 20653: 01                       fallthrough
      :                          @1655
 20654: 51 07 35                 jump @1660 if a0 == 0
      :                          @1656
 20657: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 20660: ac 8a 7e                 jump @1669 if a3 <u a1
      :                          @1657
 20663: 97 88 03                 a1 = a1 << 0x3
 20666: c8 48 08                 a1 = a1 + t2
 20669: 82 88                    a1 = u64 [a1]
 20671: 82 6b 08                 a4 = u64 [s1 + 0x8]
 20674: ca 8b 08                 a1 = a4 * a1
 20677: 9a 8b                    a4 = -a1
 20679: ac 27 1f                 jump @1661 if a0 <u t0
      :                          @1658
 20682: 95 78 fe                 a1 = a0 + 0xfffffffffffffffe
 20685: ac 8a 65                 jump @1669 if a3 <u a1
      :                          @1659
 20688: 97 88 03                 a1 = a1 << 0x3
 20691: c8 48 08                 a1 = a1 + t2
 20694: 82 88                    a1 = u64 [a1]
 20696: 82 6c 10                 a5 = u64 [s1 + 0x10]
 20699: ca 8c 08                 a1 = a5 * a1
 20702: c9 8b 0b                 a4 = a4 - a1
 20705: 28 05                    jump @1661
      :                          @1660
 20707: 82 3b                    a4 = u64 [t1]
 20709: 01                       fallthrough
      :                          @1661
 20710: 82 68                    a1 = u64 [s1]
 20712: 51 08 47                 jump @1666 if a1 == 0
      :                          @1662
 20715: d3 9b 0c                 a5 = a4 ^ a2
 20718: e1 8c 0c                 a5 = a5 | ~a1
 20721: 51 0c 3f                 jump @1667 if a5 == 0
      :                          @1663
 20724: ac 7a 3d                 jump @1668 if a3 <u a0
      :                          @1664
 20727: d8 a7 0c                 a5 = a0 <u a3
 20730: 97 75 03                 s0 = a0 << 0x3
 20733: c8 c7 07                 a0 = a0 + a5
 20736: c8 45 05                 s0 = s0 + t2
 20739: cc 8b 08                 a1 = a4 /s a1
 20742: d8 7a 0b                 a4 = a3 <u a0
 20745: 85 bb 01                 a4 = a4 ^ 0x1
 20748: d2 cb 0b                 a4 = a4 & a5
 20751: 7b 58                    u64 [s0] = a1
 20753: 52 0b 9d                 jump @1655 if a4 != 0
      :                          @1665
 20756: 82 17 08                 a0 = u64 [sp + 0x8]
 20759: 82 18                    a1 = u64 [sp]
 20761: 7b 87                    u64 [a1] = a0
 20763: 7b 84 08                 u64 [a1 + 0x8] = t2
 20766: 7b 87 10                 u64 [a1 + 0x10] = a0
 20769: 82 10 30                 ra = u64 [sp + 0x30]
 20772: 82 15 28                 s0 = u64 [sp + 0x28]
 20775: 82 16 20                 s1 = u64 [sp + 0x20]
 20778: 95 11 38                 sp = sp + 0x38
 20781: 32 00                    ret
      :                          @1666
 20783: 00                       trap
      :                          @1667
 20784: 00                       trap
      :                          @1668
 20785: 00                       trap
      :                          @1669
 20786: 00                       trap
      :                          @1670
 20787: 00                       trap
      :                          @1671
 20788: 33 02                    t0 = 0
 20790: 51 08 30                 jump @1676 if a1 == 0
      :                          @1672
 20793: 64 83                    t1 = a1
 20795: 64 8b                    a4 = a1
 20797: 01                       fallthrough
      :                          @1673
 20798: 98 bb 01                 a4 = a4 >> 0x1
 20801: c8 2b 0b                 a4 = a4 + t0
 20804: 97 bc 03                 a5 = a4 << 0x3
 20807: c8 7c 0c                 a5 = a5 + a0
 20810: 82 cc                    a5 = u64 [a5]
 20812: aa 9c 29                 jump @1678 if a5 == a2
      :                          @1674
 20815: d9 9c 04                 t2 = a5 <s a2
 20818: d9 c9 0c                 a5 = a2 <s a5
 20821: db cb 03                 t1 = a4 if a5 != 0
 20824: 95 bb 01                 a4 = a4 + 0x1
 20827: db 4b 02                 t0 = a4 if t2 != 0
 20830: c9 23 0b                 a4 = t1 - t0
 20833: ac 32 dd                 jump @1673 if t0 <u t1
      :                          @1675
 20836: 28 19                    jump @1679
      :                          @1676
 20838: 33 0c                    a5 = 0
 20840: 33 07                    a0 = 0
 20842: 28 21 14                 jump @1931
      :                          @1677
 20845: e4 2c 07                 a0 = maxu(a5, t0)
 20848: c9 27 07                 a0 = a0 - t0
 20851: 32 00                    ret
      :                          @1678
 20853: 64 b2                    t0 = a4
 20855: 33 09                    a2 = 0
 20857: 64 8b                    a4 = a1
 20859: 28 07                    jump @1680
      :                          @1679
 20861: 33 09                    a2 = 0
 20863: 64 8b                    a4 = a1
 20865: 01                       fallthrough
      :                          @1680
 20866: 98 bb 01                 a4 = a4 >> 0x1
 20869: c8 9b 0c                 a5 = a4 + a2
 20872: 97 cb 03                 a4 = a5 << 0x3
 20875: c8 7b 0b                 a4 = a4 + a0
 20878: 82 bb                    a4 = u64 [a4]
 20880: aa ab dd                 jump @1677 if a4 == a3
      :                          @1681
 20883: d9 ab 03                 t1 = a4 <s a3
 20886: d9 ba 0b                 a4 = a3 <s a4
 20889: db bc 08                 a1 = a5 if a4 != 0
 20892: 95 cc 01                 a5 = a5 + 0x1
 20895: db 3c 09                 a2 = a5 if t1 != 0
 20898: c9 98 0b                 a4 = a1 - a2
 20901: ac 89 dd                 jump @1680 if a2 <u a1
      :                          @1682
 20904: e4 29 07                 a0 = maxu(a2, t0)
 20907: c9 27 07                 a0 = a0 - t0
 20910: 32 00                    ret
      :                          @1683
 20912: 95 11 78 fd              sp = sp + 0xfffffffffffffd78
 20916: 7b 10 80 02              u64 [sp + 0x280] = ra
 20920: 7b 15 78 02              u64 [sp + 0x278] = s0
 20924: 7b 16 70 02              u64 [sp + 0x270] = s1
 20928: 78 17 27                 u8 [sp + 0x27] = a0
 20931: 84 75 ff 00              s0 = a0 & 0xff
 20935: 33 06 34                 s1 = 0x34
 20938: 33 00 02 01              ra = 0x102
 20942: 0a                       ecalli 0 // 'gas'
 20943: 01                       fallthrough
      :                          @1684 [@dyn 129]
 20944: 64 72                    t0 = a0
 20946: 7b 17 18                 u64 [sp + 0x18] = a0
 20949: ae 56 06                 jump @1686 if s1 >=u s0
      :                          @1685
 20952: 28 e1 47                 jump @2464
      :                          @1686
 20955: 97 55 02                 s0 = s0 << 0x2
 20958: 33 07 00 00 01           a0 = 0x10000
 20963: c8 57 07                 a0 = a0 + s0
 20966: 81 77                    a0 = i32 [a0]
 20968: 32 07                    jump [a0]
      :                          @1687 [@dyn 130]
 20970: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 20975: 97 89 0d                 a2 = a1 << 0xd
 20978: d3 98 08                 a1 = a1 ^ a2
 20981: 98 89 07                 a2 = a1 >> 0x7
 20984: d3 98 08                 a1 = a1 ^ a2
 20987: 3a 09 60 00 03           a2 = u64 [0x30060]
 20992: 97 8a 11                 a3 = a1 << 0x11
 20995: d3 a8 08                 a1 = a1 ^ a3
 20998: ca 98 09                 a2 = a1 * a2
 21001: 3e 08 e0 00 03           u64 [0x300e0] = a1
 21006: 14 07 89 88 88 88 88 88 88 88 a0 = 0x8888888888888889
 21016: d6 79 07                 a0 = a2 mulhu a0
 21019: 98 77 04                 a0 = a0 >> 0x4
 21022: 96 77 1e                 a0 = a0 * 0x1e
 21025: c9 79 08                 a1 = a2 - a0
 21028: bf 79 09                 i32 a2 = a2 - a0
 21031: 33 07 03                 a0 = 0x3
 21034: 7a 18 b0 00              u32 [sp + 0xb0] = a1
 21038: ac 79 06                 jump @1689 if a2 <u a0
      :                          @1688
 21041: 28 14 48                 jump @2474
      :                          @1689
 21044: 97 88 03                 a1 = a1 << 0x3
 21047: 33 07 68 11 01           a0 = 0x11168
 21052: c8 87 07                 a0 = a0 + a1
 21055: 82 7b                    a4 = u64 [a0]
 21057: 28 2b 48                 jump @2476
      :                          @1690 [@dyn 131]
 21060: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21065: 3a 08 60 00 03           a1 = u64 [0x30060]
 21070: 97 9a 0d                 a3 = a2 << 0xd
 21073: d3 a9 09                 a2 = a2 ^ a3
 21076: 98 9a 07                 a3 = a2 >> 0x7
 21079: d3 a9 09                 a2 = a2 ^ a3
 21082: 97 9a 11                 a3 = a2 << 0x11
 21085: d3 a9 09                 a2 = a2 ^ a3
 21088: ca 89 0a                 a3 = a2 * a1
 21091: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21096: 14 09 cd cc cc cc cc cc cc cc a2 = 0xcccccccccccccccd
 21106: d6 9a 09                 a2 = a3 mulhu a2
 21109: 98 99 04                 a2 = a2 >> 0x4
 21112: 33 0b 14                 a4 = 0x14
 21115: ca b9 09                 a2 = a2 * a4
 21118: c9 9a 0a                 a3 = a3 - a2
 21121: 95 aa 01                 a3 = a3 + 0x1
 21124: 7b 1a 68 02              u64 [sp + 0x268] = a3
 21128: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21133: 97 9a 0d                 a3 = a2 << 0xd
 21136: d3 a9 09                 a2 = a2 ^ a3
 21139: 98 9a 07                 a3 = a2 >> 0x7
 21142: d3 a9 09                 a2 = a2 ^ a3
 21145: 97 9a 11                 a3 = a2 << 0x11
 21148: d3 a9 09                 a2 = a2 ^ a3
 21151: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21156: 82 17 68 02              a0 = u64 [sp + 0x268]
 21160: 52 07 06                 jump @1692 if a0 != 0
      :                          @1691
 21163: 28 bc 4b                 jump @2529
      :                          @1692
 21166: ca 89 08                 a1 = a2 * a1
 21169: cd 78 08                 a1 = a1 %u a0
 21172: 95 88 01                 a1 = a1 + 0x1
 21175: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 21179: 50 20 08 01 e2 f1        ra = 264, jump @1403
      :                          @1693 [@dyn 132]
 21185: 7b 17 90 00              u64 [sp + 0x90] = a0
 21189: 95 17 68 02              a0 = sp + 0x268
 21193: 7b 17 50 01              u64 [sp + 0x150] = a0
 21197: 33 07 28 03              a0 = 0x328
 21201: 7b 17 58 01              u64 [sp + 0x158] = a0
 21205: 95 18 b0 00              a1 = sp + 0xb0
 21209: 7b 18 60 01              u64 [sp + 0x160] = a1
 21213: 7b 17 68 01              u64 [sp + 0x168] = a0
 21217: 95 18 90 00              a1 = sp + 0x90
 21221: 7b 18 70 01              u64 [sp + 0x170] = a1
 21225: 7b 17 78 01              u64 [sp + 0x178] = a0
 21229: 33 07 80 01 01           a0 = 0x10180
 21234: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 21238: 49 21 00 01 03           u64 [sp + 256] = 0x3
 21243: 49 21 18 01              u64 [sp + 280] = 0
 21247: 95 18 50 01              a1 = sp + 0x150
 21251: 7b 18 08 01              u64 [sp + 0x108] = a1
 21255: 49 21 10 01 03           u64 [sp + 272] = 0x3
 21260: 95 17 c8 00              a0 = sp + 0xc8
 21264: 95 18 f8 00              a1 = sp + 0xf8
 21268: 50 20 0a 01 67 ca        ra = 266, jump @611
      :                          @1694 [@dyn 133]
 21274: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 21278: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 21282: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 21286: 33 07 03                 a0 = 0x3
 21289: 33 08                    a1 = 0
 21291: 33 09                    a2 = 0
 21293: 64 5a                    a3 = s0
 21295: 33 00 0c 01              ra = 0x10c
 21299: 0a 64                    ecalli 100 // 'log'
 21301: 01                       fallthrough
      :                          @1695 [@dyn 134]
 21302: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 21307: 55 38 00 00 ff 09        jump @1697 if a1 >=u 4294901760
      :                          @1696
 21313: 28 0c 4b                 jump @2527
      :                          @1697
 21316: 33 07 f0 02 03           a0 = 0x302f0
 21321: 95 77 00 00 01           a0 = a0 + 0x10000
 21326: 01                       fallthrough
      :                          @1698
 21327: 82 78                    a1 = u64 [a0]
 21329: c9 87 09                 a2 = a0 - a1
 21332: aa 59 06                 jump @1700 if a2 == s0
      :                          @1699
 21335: 28 f6 4a                 jump @2527
      :                          @1700
 21338: c9 68 09                 a2 = a1 - s1
 21341: 01                       fallthrough
      :                          @1701
 21342: 82 7a                    a3 = u64 [a0]
 21344: ab 8a ef                 jump @1698 if a3 != a1
      :                          @1702
 21347: 7b 79                    u64 [a0] = a2
 21349: 33 0b                    a4 = 0
 21351: 01                       fallthrough
      :                          @1703
 21352: ab 8a e7                 jump @1698 if a3 != a1
      :                          @1704
 21355: 28 e2 4a                 jump @2527
      :                          @1705 [@dyn 135]
 21358: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 21363: 97 89 0d                 a2 = a1 << 0xd
 21366: d3 98 08                 a1 = a1 ^ a2
 21369: 98 89 07                 a2 = a1 >> 0x7
 21372: d3 98 08                 a1 = a1 ^ a2
 21375: 3a 09 60 00 03           a2 = u64 [0x30060]
 21380: 97 8a 11                 a3 = a1 << 0x11
 21383: d3 a8 08                 a1 = a1 ^ a3
 21386: ca 98 09                 a2 = a1 * a2
 21389: 3e 08 e0 00 03           u64 [0x300e0] = a1
 21394: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 21404: d6 79 07                 a0 = a2 mulhu a0
 21407: 98 77 04                 a0 = a0 >> 0x4
 21410: 96 77 14                 a0 = a0 * 0x14
 21413: c9 79 07                 a0 = a2 - a0
 21416: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 21420: 50 20 10 01 73 f1        ra = 272, jump @1412
      :                          @1706 [@dyn 136]
 21426: 7b 17 90 00              u64 [sp + 0x90] = a0
 21430: 95 17 b0 00              a0 = sp + 0xb0
 21434: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 21438: 33 07 28 03              a0 = 0x328
 21442: 7b 17 00 01              u64 [sp + 0x100] = a0
 21446: 95 18 90 00              a1 = sp + 0x90
 21450: 7b 18 08 01              u64 [sp + 0x108] = a1
 21454: 7b 17 10 01              u64 [sp + 0x110] = a0
 21458: 33 07 f0 01 01           a0 = 0x101f0
 21463: 7b 17 50 01              u64 [sp + 0x150] = a0
 21467: 49 21 58 01 02           u64 [sp + 344] = 0x2
 21472: 49 21 70 01              u64 [sp + 368] = 0
 21476: 95 18 f8 00              a1 = sp + 0xf8
 21480: 7b 18 60 01              u64 [sp + 0x160] = a1
 21484: 49 21 68 01 02           u64 [sp + 360] = 0x2
 21489: 95 17 c8 00              a0 = sp + 0xc8
 21493: 95 18 50 01              a1 = sp + 0x150
 21497: 50 20 12 01 82 c9        ra = 274, jump @611
      :                          @1707 [@dyn 137]
 21503: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 21507: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 21511: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 21515: 33 07 03                 a0 = 0x3
 21518: 33 08                    a1 = 0
 21520: 33 09                    a2 = 0
 21522: 64 5a                    a3 = s0
 21524: 33 00 14 01              ra = 0x114
 21528: 0a 64                    ecalli 100 // 'log'
 21530: 01                       fallthrough
      :                          @1708 [@dyn 138]
 21531: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 21536: 55 38 00 00 ff 09        jump @1710 if a1 >=u 4294901760
      :                          @1709
 21542: 28 27 4a                 jump @2527
      :                          @1710
 21545: 33 07 f0 02 03           a0 = 0x302f0
 21550: 95 77 00 00 01           a0 = a0 + 0x10000
 21555: 01                       fallthrough
      :                          @1711
 21556: 82 78                    a1 = u64 [a0]
 21558: c9 87 09                 a2 = a0 - a1
 21561: aa 59 06                 jump @1713 if a2 == s0
      :                          @1712
 21564: 28 11 4a                 jump @2527
      :                          @1713
 21567: c9 68 09                 a2 = a1 - s1
 21570: 01                       fallthrough
      :                          @1714
 21571: 82 7a                    a3 = u64 [a0]
 21573: ab 8a ef                 jump @1711 if a3 != a1
      :                          @1715
 21576: 7b 79                    u64 [a0] = a2
 21578: 33 0b                    a4 = 0
 21580: 01                       fallthrough
      :                          @1716
 21581: ab 8a e7                 jump @1711 if a3 != a1
      :                          @1717
 21584: 28 fd 49                 jump @2527
      :                          @1718 [@dyn 139]
 21587: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21592: 3a 07 60 00 03           a0 = u64 [0x30060]
 21597: 97 9a 0d                 a3 = a2 << 0xd
 21600: d3 a9 09                 a2 = a2 ^ a3
 21603: 98 9a 07                 a3 = a2 >> 0x7
 21606: d3 a9 09                 a2 = a2 ^ a3
 21609: 97 9a 11                 a3 = a2 << 0x11
 21612: d3 a9 09                 a2 = a2 ^ a3
 21615: ca 79 0a                 a3 = a2 * a0
 21618: 3a 0b c0 00 03           a4 = u64 [0x300c0]
 21623: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21628: 98 a9 01                 a2 = a3 >> 0x1
 21631: d6 b9 09                 a2 = a2 mulhu a4
 21634: 98 99 04                 a2 = a2 >> 0x4
 21637: 33 0b 32                 a4 = 0x32
 21640: ca b9 09                 a2 = a2 * a4
 21643: c9 9a 0a                 a3 = a3 - a2
 21646: 86 a9 01                 a2 = a3 | 0x1
 21649: 95 99 02                 a2 = a2 + 0x2
 21652: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 21656: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 21661: 97 9a 0d                 a3 = a2 << 0xd
 21664: d3 a9 09                 a2 = a2 ^ a3
 21667: 98 9a 07                 a3 = a2 >> 0x7
 21670: d3 a9 09                 a2 = a2 ^ a3
 21673: 97 9a 11                 a3 = a2 << 0x11
 21676: d3 a9 09                 a2 = a2 ^ a3
 21679: 3e 09 e0 00 03           u64 [0x300e0] = a2
 21684: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 21688: 52 08 06                 jump @1720 if a1 != 0
      :                          @1719
 21691: 28 ac 49                 jump @2529
      :                          @1720
 21694: ca 79 07                 a0 = a2 * a0
 21697: cd 87 07                 a0 = a0 %u a1
 21700: 7b 17 90 00              u64 [sp + 0x90] = a0
 21704: 50 20 18 01 72 f1        ra = 280, jump @1436
      :                          @1721 [@dyn 140]
 21710: 78 17 68 02              u8 [sp + 0x268] = a0
 21714: 95 17 90 00              a0 = sp + 0x90
 21718: 7b 17 50 01              u64 [sp + 0x150] = a0
 21722: 33 07 28 03              a0 = 0x328
 21726: 7b 17 58 01              u64 [sp + 0x158] = a0
 21730: 95 18 b0 00              a1 = sp + 0xb0
 21734: 7b 18 60 01              u64 [sp + 0x160] = a1
 21738: 7b 17 68 01              u64 [sp + 0x168] = a0
 21742: 95 17 68 02              a0 = sp + 0x268
 21746: 7b 17 70 01              u64 [sp + 0x170] = a0
 21750: 33 07 74 03              a0 = 0x374
 21754: 7b 17 78 01              u64 [sp + 0x178] = a0
 21758: 33 07 28 02 01           a0 = 0x10228
 21763: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 21767: 49 21 00 01 03           u64 [sp + 256] = 0x3
 21772: 49 21 18 01              u64 [sp + 280] = 0
 21776: 95 18 50 01              a1 = sp + 0x150
 21780: 7b 18 08 01              u64 [sp + 0x108] = a1
 21784: 49 21 10 01 03           u64 [sp + 272] = 0x3
 21789: 95 17 c8 00              a0 = sp + 0xc8
 21793: 95 18 f8 00              a1 = sp + 0xf8
 21797: 50 20 1a 01 56 c8        ra = 282, jump @611
      :                          @1722 [@dyn 141]
 21803: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 21807: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 21811: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 21815: 33 07 03                 a0 = 0x3
 21818: 33 08                    a1 = 0
 21820: 33 09                    a2 = 0
 21822: 64 5a                    a3 = s0
 21824: 33 00 1c 01              ra = 0x11c
 21828: 0a 64                    ecalli 100 // 'log'
 21830: 01                       fallthrough
      :                          @1723 [@dyn 142]
 21831: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 21836: 55 38 00 00 ff 09        jump @1725 if a1 >=u 4294901760
      :                          @1724
 21842: 28 fb 48                 jump @2527
      :                          @1725
 21845: 33 07 f0 02 03           a0 = 0x302f0
 21850: 95 77 00 00 01           a0 = a0 + 0x10000
 21855: 01                       fallthrough
      :                          @1726
 21856: 82 78                    a1 = u64 [a0]
 21858: c9 87 09                 a2 = a0 - a1
 21861: aa 59 06                 jump @1728 if a2 == s0
      :                          @1727
 21864: 28 e5 48                 jump @2527
      :                          @1728
 21867: c9 68 09                 a2 = a1 - s1
 21870: 01                       fallthrough
      :                          @1729
 21871: 82 7a                    a3 = u64 [a0]
 21873: ab 8a ef                 jump @1726 if a3 != a1
      :                          @1730
 21876: 7b 79                    u64 [a0] = a2
 21878: 33 0b                    a4 = 0
 21880: 01                       fallthrough
      :                          @1731
 21881: ab 8a e7                 jump @1726 if a3 != a1
      :                          @1732
 21884: 28 d1 48                 jump @2527
      :                          @1733 [@dyn 143]
 21887: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 21892: 97 89 0d                 a2 = a1 << 0xd
 21895: d3 98 08                 a1 = a1 ^ a2
 21898: 98 89 07                 a2 = a1 >> 0x7
 21901: 3a 0a 60 00 03           a3 = u64 [0x30060]
 21906: d3 98 08                 a1 = a1 ^ a2
 21909: 97 89 11                 a2 = a1 << 0x11
 21912: d3 98 08                 a1 = a1 ^ a2
 21915: ca a8 09                 a2 = a1 * a3
 21918: 3a 0a c0 00 03           a3 = u64 [0x300c0]
 21923: 3e 08 e0 00 03           u64 [0x300e0] = a1
 21928: 98 97 01                 a0 = a2 >> 0x1
 21931: d6 a7 07                 a0 = a0 mulhu a3
 21934: 98 77 04                 a0 = a0 >> 0x4
 21937: 96 77 32                 a0 = a0 * 0x32
 21940: c9 79 09                 a2 = a2 - a0
 21943: 86 97 01                 a0 = a2 | 0x1
 21946: 95 78 02                 a1 = a0 + 0x2
 21949: 7b 18 90 00              u64 [sp + 0x90] = a1
 21953: 9a 76                    s1 = -a0
 21955: 33 0a 01                 a3 = 0x1
 21958: 33 0b 02                 a4 = 0x2
 21961: 33 0c 01                 a5 = 0x1
 21964: 01                       fallthrough
      :                          @1734
 21965: ca ac 0a                 a3 = a5 * a3
 21968: 95 cc 01                 a5 = a5 + 0x1
 21971: c8 c6 09                 a2 = s1 + a5
 21974: cd 8a 0a                 a3 = a3 %u a1
 21977: ab b9 f4                 jump @1734 if a2 != a4
      :                          @1735
 21980: 95 77 01                 a0 = a0 + 0x1
 21983: d3 a7 07                 a0 = a0 ^ a3
 21986: 88 77 01                 a0 = a0 <u 0x1
 21989: 78 17 b0 00              u8 [sp + 0xb0] = a0
 21993: 95 17 90 00              a0 = sp + 0x90
 21997: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22001: 33 07 28 03              a0 = 0x328
 22005: 7b 17 00 01              u64 [sp + 0x100] = a0
 22009: 95 17 b0 00              a0 = sp + 0xb0
 22013: 7b 17 08 01              u64 [sp + 0x108] = a0
 22017: 33 07 74 03              a0 = 0x374
 22021: 7b 17 10 01              u64 [sp + 0x110] = a0
 22025: 33 07 c8 02 01           a0 = 0x102c8
 22030: 7b 17 50 01              u64 [sp + 0x150] = a0
 22034: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22039: 49 21 70 01              u64 [sp + 368] = 0
 22043: 95 18 f8 00              a1 = sp + 0xf8
 22047: 7b 18 60 01              u64 [sp + 0x160] = a1
 22051: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22056: 95 17 c8 00              a0 = sp + 0xc8
 22060: 95 18 50 01              a1 = sp + 0x150
 22064: 50 20 20 01 4b c7        ra = 288, jump @611
      :                          @1736 [@dyn 144]
 22070: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22074: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22078: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22082: 33 07 03                 a0 = 0x3
 22085: 33 08                    a1 = 0
 22087: 33 09                    a2 = 0
 22089: 64 5a                    a3 = s0
 22091: 33 00 22 01              ra = 0x122
 22095: 0a 64                    ecalli 100 // 'log'
 22097: 01                       fallthrough
      :                          @1737 [@dyn 145]
 22098: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22103: 55 38 00 00 ff 09        jump @1739 if a1 >=u 4294901760
      :                          @1738
 22109: 28 f0 47                 jump @2527
      :                          @1739
 22112: 33 07 f0 02 03           a0 = 0x302f0
 22117: 95 77 00 00 01           a0 = a0 + 0x10000
 22122: 01                       fallthrough
      :                          @1740
 22123: 82 78                    a1 = u64 [a0]
 22125: c9 87 09                 a2 = a0 - a1
 22128: aa 59 06                 jump @1742 if a2 == s0
      :                          @1741
 22131: 28 da 47                 jump @2527
      :                          @1742
 22134: c9 68 09                 a2 = a1 - s1
 22137: 01                       fallthrough
      :                          @1743
 22138: 82 7a                    a3 = u64 [a0]
 22140: ab 8a ef                 jump @1740 if a3 != a1
      :                          @1744
 22143: 7b 79                    u64 [a0] = a2
 22145: 33 0b                    a4 = 0
 22147: 01                       fallthrough
      :                          @1745
 22148: ab 8a e7                 jump @1740 if a3 != a1
      :                          @1746
 22151: 28 c6 47                 jump @2527
      :                          @1747 [@dyn 146]
 22154: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22159: 97 89 0d                 a2 = a1 << 0xd
 22162: d3 98 08                 a1 = a1 ^ a2
 22165: 98 89 07                 a2 = a1 >> 0x7
 22168: d3 98 08                 a1 = a1 ^ a2
 22171: 97 89 11                 a2 = a1 << 0x11
 22174: d3 98 08                 a1 = a1 ^ a2
 22177: 3a 09 60 00 03           a2 = u64 [0x30060]
 22182: 3a 0a 68 00 03           a3 = u64 [0x30068]
 22187: 3e 08 e0 00 03           u64 [0x300e0] = a1
 22192: ca 98 07                 a0 = a1 * a2
 22195: 98 78 03                 a1 = a0 >> 0x3
 22198: d6 a8 08                 a1 = a1 mulhu a3
 22201: 98 88 04                 a1 = a1 >> 0x4
 22204: 96 88 e8 03              a1 = a1 * 0x3e8
 22208: c9 87 07                 a0 = a0 - a1
 22211: 95 77 03                 a0 = a0 + 0x3
 22214: 86 77 01                 a0 = a0 | 0x1
 22217: 7b 17 90 00              u64 [sp + 0x90] = a0
 22221: 50 20 26 01 a8 ef        ra = 294, jump @1443
      :                          @1748 [@dyn 147]
 22227: 78 17 b0 00              u8 [sp + 0xb0] = a0
 22231: 95 17 90 00              a0 = sp + 0x90
 22235: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22239: 33 07 28 03              a0 = 0x328
 22243: 7b 17 00 01              u64 [sp + 0x100] = a0
 22247: 95 17 b0 00              a0 = sp + 0xb0
 22251: 7b 17 08 01              u64 [sp + 0x108] = a0
 22255: 33 07 74 03              a0 = 0x374
 22259: 7b 17 10 01              u64 [sp + 0x110] = a0
 22263: 33 07 00 03 01           a0 = 0x10300
 22268: 7b 17 50 01              u64 [sp + 0x150] = a0
 22272: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22277: 49 21 70 01              u64 [sp + 368] = 0
 22281: 95 18 f8 00              a1 = sp + 0xf8
 22285: 7b 18 60 01              u64 [sp + 0x160] = a1
 22289: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22294: 95 17 c8 00              a0 = sp + 0xc8
 22298: 95 18 50 01              a1 = sp + 0x150
 22302: 50 20 28 01 5d c6        ra = 296, jump @611
      :                          @1749 [@dyn 148]
 22308: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 22312: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 22316: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 22320: 33 07 03                 a0 = 0x3
 22323: 33 08                    a1 = 0
 22325: 33 09                    a2 = 0
 22327: 64 5a                    a3 = s0
 22329: 33 00 2a 01              ra = 0x12a
 22333: 0a 64                    ecalli 100 // 'log'
 22335: 01                       fallthrough
      :                          @1750 [@dyn 149]
 22336: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22341: 55 38 00 00 ff 09        jump @1752 if a1 >=u 4294901760
      :                          @1751
 22347: 28 02 47                 jump @2527
      :                          @1752
 22350: 33 07 f0 02 03           a0 = 0x302f0
 22355: 95 77 00 00 01           a0 = a0 + 0x10000
 22360: 01                       fallthrough
      :                          @1753
 22361: 82 78                    a1 = u64 [a0]
 22363: c9 87 09                 a2 = a0 - a1
 22366: aa 59 06                 jump @1755 if a2 == s0
      :                          @1754
 22369: 28 ec 46                 jump @2527
      :                          @1755
 22372: c9 68 09                 a2 = a1 - s1
 22375: 01                       fallthrough
      :                          @1756
 22376: 82 7a                    a3 = u64 [a0]
 22378: ab 8a ef                 jump @1753 if a3 != a1
      :                          @1757
 22381: 7b 79                    u64 [a0] = a2
 22383: 33 0b                    a4 = 0
 22385: 01                       fallthrough
      :                          @1758
 22386: ab 8a e7                 jump @1753 if a3 != a1
      :                          @1759
 22389: 28 d8 46                 jump @2527
      :                          @1760 [@dyn 150]
 22392: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22397: 97 89 0d                 a2 = a1 << 0xd
 22400: d3 98 08                 a1 = a1 ^ a2
 22403: 98 89 07                 a2 = a1 >> 0x7
 22406: d3 98 08                 a1 = a1 ^ a2
 22409: 97 89 11                 a2 = a1 << 0x11
 22412: d3 98 08                 a1 = a1 ^ a2
 22415: 3a 09 60 00 03           a2 = u64 [0x30060]
 22420: 3a 0a 68 00 03           a3 = u64 [0x30068]
 22425: 3e 08 e0 00 03           u64 [0x300e0] = a1
 22430: ca 98 07                 a0 = a1 * a2
 22433: 98 78 02                 a1 = a0 >> 0x2
 22436: d6 a8 08                 a1 = a1 mulhu a3
 22439: 98 88 04                 a1 = a1 >> 0x4
 22442: 96 88 f4 01              a1 = a1 * 0x1f4
 22446: c9 87 07                 a0 = a0 - a1
 22449: 97 77 01                 a0 = a0 << 0x1
 22452: 95 78 09                 a1 = a0 + 0x9
 22455: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 22459: 95 17 c8 00              a0 = sp + 0xc8
 22463: 95 15 c8 00              s0 = sp + 0xc8
 22467: 33 00 2e 01              ra = 0x12e
 22471: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 22474: 7b 15 08                 u64 [sp + 0x8] = s0
 22477: 33 0a                    a3 = 0
 22479: 33 03 ff                 t1 = 0xffffffffffffffff
 22482: 64 82                    t0 = a1
 22484: 28 cd ef                 jump @1465
      :                          @1761 [@dyn 151]
 22487: 95 17 b0 00              a0 = sp + 0xb0
 22491: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 22495: 33 07 28 03              a0 = 0x328
 22499: 7b 17 00 01              u64 [sp + 0x100] = a0
 22503: 7b 15 08 01              u64 [sp + 0x108] = s0
 22507: 33 07 b6 00              a0 = 0xb6
 22511: 7b 17 10 01              u64 [sp + 0x110] = a0
 22515: 33 07 30 03 01           a0 = 0x10330
 22520: 7b 17 50 01              u64 [sp + 0x150] = a0
 22524: 49 21 58 01 02           u64 [sp + 344] = 0x2
 22529: 49 21 70 01              u64 [sp + 368] = 0
 22533: 95 18 f8 00              a1 = sp + 0xf8
 22537: 7b 18 60 01              u64 [sp + 0x160] = a1
 22541: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22546: 95 17 90 00              a0 = sp + 0x90
 22550: 95 18 50 01              a1 = sp + 0x150
 22554: 50 20 30 01 61 c5        ra = 304, jump @611
      :                          @1762 [@dyn 152]
 22560: 82 15 98 00              s0 = u64 [sp + 0x98]
 22564: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 22568: 82 16 90 00              s1 = u64 [sp + 0x90]
 22572: 33 07 03                 a0 = 0x3
 22575: 33 08                    a1 = 0
 22577: 33 09                    a2 = 0
 22579: 64 5a                    a3 = s0
 22581: 33 00 32 01              ra = 0x132
 22585: 0a 64                    ecalli 100 // 'log'
 22587: 01                       fallthrough
      :                          @1763 [@dyn 153]
 22588: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22593: 55 38 00 00 ff 09        jump @1765 if a1 >=u 4294901760
      :                          @1764
 22599: 28 06 46                 jump @2527
      :                          @1765
 22602: 33 07 f0 02 03           a0 = 0x302f0
 22607: 95 77 00 00 01           a0 = a0 + 0x10000
 22612: 01                       fallthrough
      :                          @1766
 22613: 82 78                    a1 = u64 [a0]
 22615: c9 87 09                 a2 = a0 - a1
 22618: aa 59 06                 jump @1768 if a2 == s0
      :                          @1767
 22621: 28 f0 45                 jump @2527
      :                          @1768
 22624: c9 68 09                 a2 = a1 - s1
 22627: 01                       fallthrough
      :                          @1769
 22628: 82 7a                    a3 = u64 [a0]
 22630: ab 8a ef                 jump @1766 if a3 != a1
      :                          @1770
 22633: 7b 79                    u64 [a0] = a2
 22635: 33 0b                    a4 = 0
 22637: 01                       fallthrough
      :                          @1771
 22638: ab 8a e7                 jump @1766 if a3 != a1
      :                          @1772
 22641: 28 dc 45                 jump @2527
      :                          @1773 [@dyn 154]
 22644: 33 00 36 01              ra = 0x136
 22648: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 22651: 7b 15 08                 u64 [sp + 0x8] = s0
 22654: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 22659: 97 79 0d                 a2 = a0 << 0xd
 22662: d3 97 07                 a0 = a0 ^ a2
 22665: 98 79 07                 a2 = a0 >> 0x7
 22668: d3 97 07                 a0 = a0 ^ a2
 22671: 97 79 11                 a2 = a0 << 0x11
 22674: d3 79 02                 t0 = a2 ^ a0
 22677: 3e 02 e0 00 03           u64 [0x300e0] = t0
 22682: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 22687: 3a 03 28 00 03           t1 = u64 [0x30028]
 22692: 97 7a 0d                 a3 = a0 << 0xd
 22695: d3 a7 07                 a0 = a0 ^ a3
 22698: 98 7a 07                 a3 = a0 >> 0x7
 22701: d3 a7 07                 a0 = a0 ^ a3
 22704: 97 7a 11                 a3 = a0 << 0x11
 22707: d3 a7 07                 a0 = a0 ^ a3
 22710: 3a 0a 30 00 03           a3 = u64 [0x30030]
 22715: ca 37 0b                 a4 = a0 * t1
 22718: 3e 07 e0 00 03           u64 [0x300e0] = a0
 22723: d6 ab 07                 a0 = a4 mulhu a3
 22726: c9 7b 08                 a1 = a4 - a0
 22729: 98 88 01                 a1 = a1 >> 0x1
 22732: c8 87 07                 a0 = a0 + a1
 22735: 98 77 04                 a0 = a0 >> 0x4
 22738: 33 08 15                 a1 = 0x15
 22741: ca 87 07                 a0 = a0 * a1
 22744: c9 7b 0a                 a3 = a4 - a0
 22747: 95 aa 01                 a3 = a3 + 0x1
 22750: 3a 0b 38 00 03           a4 = u64 [0x30038]
 22755: 33 05 01                 s0 = 0x1
 22758: 33 0c 05                 a5 = 0x5
 22761: 33 04 17                 t2 = 0x17
 22764: 28 41 ef                 jump @1476
      :                          @1774 [@dyn 155]
 22767: 7b 17 90 00              u64 [sp + 0x90] = a0
 22771: 95 17 90 00              a0 = sp + 0x90
 22775: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 22779: 33 07 28 03              a0 = 0x328
 22783: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 22787: 33 07 60 03 01           a0 = 0x10360
 22792: 7b 17 50 01              u64 [sp + 0x150] = a0
 22796: 49 21 58 01 01           u64 [sp + 344] = 0x1
 22801: 49 21 70 01              u64 [sp + 368] = 0
 22805: 95 18 c8 00              a1 = sp + 0xc8
 22809: 7b 18 60 01              u64 [sp + 0x160] = a1
 22813: 49 21 68 01 01           u64 [sp + 360] = 0x1
 22818: 95 17 f8 00              a0 = sp + 0xf8
 22822: 95 18 50 01              a1 = sp + 0x150
 22826: 50 20 38 01 51 c4        ra = 312, jump @611
      :                          @1775 [@dyn 156]
 22832: 82 15 00 01              s0 = u64 [sp + 0x100]
 22836: 82 1b 08 01              a4 = u64 [sp + 0x108]
 22840: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 22844: 33 07 03                 a0 = 0x3
 22847: 33 08                    a1 = 0
 22849: 33 09                    a2 = 0
 22851: 64 5a                    a3 = s0
 22853: 33 00 3a 01              ra = 0x13a
 22857: 0a 64                    ecalli 100 // 'log'
 22859: 01                       fallthrough
      :                          @1776 [@dyn 157]
 22860: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 22865: 55 38 00 00 ff 09        jump @1778 if a1 >=u 4294901760
      :                          @1777
 22871: 28 f6 44                 jump @2527
      :                          @1778
 22874: 33 07 f0 02 03           a0 = 0x302f0
 22879: 95 77 00 00 01           a0 = a0 + 0x10000
 22884: 01                       fallthrough
      :                          @1779
 22885: 82 78                    a1 = u64 [a0]
 22887: c9 87 09                 a2 = a0 - a1
 22890: aa 59 06                 jump @1781 if a2 == s0
      :                          @1780
 22893: 28 e0 44                 jump @2527
      :                          @1781
 22896: c9 68 09                 a2 = a1 - s1
 22899: 01                       fallthrough
      :                          @1782
 22900: 82 7a                    a3 = u64 [a0]
 22902: ab 8a ef                 jump @1779 if a3 != a1
      :                          @1783
 22905: 7b 79                    u64 [a0] = a2
 22907: 33 0b                    a4 = 0
 22909: 01                       fallthrough
      :                          @1784
 22910: ab 8a e7                 jump @1779 if a3 != a1
      :                          @1785
 22913: 28 cc 44                 jump @2527
      :                          @1786 [@dyn 158]
 22916: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 22921: 97 89 0d                 a2 = a1 << 0xd
 22924: d3 98 08                 a1 = a1 ^ a2
 22927: 98 89 07                 a2 = a1 >> 0x7
 22930: d3 98 08                 a1 = a1 ^ a2
 22933: 97 89 11                 a2 = a1 << 0x11
 22936: d3 89 09                 a2 = a2 ^ a1
 22939: 3e 09 e0 00 03           u64 [0x300e0] = a2
 22944: 87 87 1d dd              i32 a0 = a1 * 0xffffffffffffdd1d
 22948: 97 78 38                 a1 = a0 << 0x38
 22951: 98 88 39                 a1 = a1 >> 0x39
 22954: 98 77 01                 a0 = a0 >> 0x1
 22957: 84 77 80 00              a0 = a0 & 0x80
 22961: d4 87 07                 a0 = a0 | a1
 22964: 78 17 b0 00              u8 [sp + 0xb0] = a0
 22968: 95 17 b0 00              a0 = sp + 0xb0
 22972: 7b 17 90 00              u64 [sp + 0x90] = a0
 22976: 33 07 76 03              a0 = 0x376
 22980: 7b 17 98 00              u64 [sp + 0x98] = a0
 22984: 49 21 50 01 02           u64 [sp + 336] = 0x2
 22989: 49 21 60 01              u64 [sp + 352] = 0
 22993: 49 21 68 01 02           u64 [sp + 360] = 0x2
 22998: 49 21 70 01              u64 [sp + 368] = 0
 23002: 14 08 20 00 00 00 08 00 00 00 a1 = 0x800000020
 23012: 7b 18 78 01              u64 [sp + 0x178] = a1
 23016: 46 21 80 01 03           u8 [sp + 384] = 0x3
 23021: 33 08 78 03 01           a1 = 0x10378
 23026: 7b 18 f8 00              u64 [sp + 0xf8] = a1
 23030: 49 21 00 01 01           u64 [sp + 256] = 0x1
 23035: 95 18 50 01              a1 = sp + 0x150
 23039: 7b 18 18 01              u64 [sp + 0x118] = a1
 23043: 49 21 20 01 01           u64 [sp + 288] = 0x1
 23048: 95 18 90 00              a1 = sp + 0x90
 23052: 7b 18 08 01              u64 [sp + 0x108] = a1
 23056: 49 21 10 01 01           u64 [sp + 272] = 0x1
 23061: 95 17 c8 00              a0 = sp + 0xc8
 23065: 95 18 f8 00              a1 = sp + 0xf8
 23069: 50 20 3e 01 5e c3        ra = 318, jump @611
      :                          @1787 [@dyn 159]
 23075: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 23079: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 23083: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 23087: 33 07 03                 a0 = 0x3
 23090: 33 08                    a1 = 0
 23092: 33 09                    a2 = 0
 23094: 64 5a                    a3 = s0
 23096: 33 00 40 01              ra = 0x140
 23100: 0a 64                    ecalli 100 // 'log'
 23102: 01                       fallthrough
      :                          @1788 [@dyn 160]
 23103: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 23108: 55 38 00 00 ff 09        jump @1790 if a1 >=u 4294901760
      :                          @1789
 23114: 28 03 44                 jump @2527
      :                          @1790
 23117: 33 07 f0 02 03           a0 = 0x302f0
 23122: 95 77 00 00 01           a0 = a0 + 0x10000
 23127: 01                       fallthrough
      :                          @1791
 23128: 82 78                    a1 = u64 [a0]
 23130: c9 87 09                 a2 = a0 - a1
 23133: aa 59 06                 jump @1793 if a2 == s0
      :                          @1792
 23136: 28 ed 43                 jump @2527
      :                          @1793
 23139: c9 68 09                 a2 = a1 - s1
 23142: 01                       fallthrough
      :                          @1794
 23143: 82 7a                    a3 = u64 [a0]
 23145: ab 8a ef                 jump @1791 if a3 != a1
      :                          @1795
 23148: 7b 79                    u64 [a0] = a2
 23150: 33 0b                    a4 = 0
 23152: 01                       fallthrough
      :                          @1796
 23153: ab 8a e7                 jump @1791 if a3 != a1
      :                          @1797
 23156: 28 d9 43                 jump @2527
      :                          @1798 [@dyn 161]
 23159: 3a 07 60 00 03           a0 = u64 [0x30060]
 23164: 33 08 e0 00 03           a1 = 0x300e0
 23169: 3a 09 c8 00 03           a2 = u64 [0x300c8]
 23174: 33 0a a5 98 0f           a3 = 0xf98a5
 23179: 33 02 01                 t0 = 0x1
 23182: 01                       fallthrough
      :                          @1799
 23183: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 23188: 97 bc 0d                 a5 = a4 << 0xd
 23191: d3 cb 0b                 a4 = a4 ^ a5
 23194: 98 bc 07                 a5 = a4 >> 0x7
 23197: d3 cb 0b                 a4 = a4 ^ a5
 23200: 97 bc 11                 a5 = a4 << 0x11
 23203: d3 cb 0b                 a4 = a4 ^ a5
 23206: 3e 0b e0 00 03           u64 [0x300e0] = a4
 23211: ca 7b 0b                 a4 = a4 * a0
 23214: d6 9b 0c                 a5 = a4 mulhu a2
 23217: 98 cc 13                 a5 = a5 >> 0x13
 23220: ca ac 0c                 a5 = a5 * a3
 23223: c9 cb 0b                 a4 = a4 - a5
 23226: 7b 1b 90 00              u64 [sp + 0x90] = a4
 23230: 64 b5                    s0 = a4
 23232: 64 ac                    a5 = a3
 23234: 01                       fallthrough
      :                          @1800
 23235: 64 c6                    s1 = a5
 23237: cd c5 0c                 a5 = s0 %u a5
 23240: 64 65                    s0 = s1
 23242: 52 0c f9                 jump @1800 if a5 != 0
      :                          @1801
 23245: ab 26 c2                 jump @1799 if s1 != t0
      :                          @1802
 23248: 3a 07 c8 00 03           a0 = u64 [0x300c8]
 23253: ca bb 08                 a1 = a4 * a4
 23256: d6 78 07                 a0 = a1 mulhu a0
 23259: 98 77 13                 a0 = a0 >> 0x13
 23262: 96 77 a5 98 0f           a0 = a0 * 0xf98a5
 23267: c9 78 08                 a1 = a1 - a0
 23270: 7b 18 90 00              u64 [sp + 0x90] = a1
 23274: 95 17 90 00              a0 = sp + 0x90
 23278: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 23282: 33 07 28 03              a0 = 0x328
 23286: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 23290: 33 07 98 03 01           a0 = 0x10398
 23295: 7b 17 50 01              u64 [sp + 0x150] = a0
 23299: 49 21 58 01 01           u64 [sp + 344] = 0x1
 23304: 49 21 70 01              u64 [sp + 368] = 0
 23308: 95 18 c8 00              a1 = sp + 0xc8
 23312: 7b 18 60 01              u64 [sp + 0x160] = a1
 23316: 49 21 68 01 01           u64 [sp + 360] = 0x1
 23321: 95 17 f8 00              a0 = sp + 0xf8
 23325: 95 18 50 01              a1 = sp + 0x150
 23329: 50 20 44 01 5a c2        ra = 324, jump @611
      :                          @1803 [@dyn 162]
 23335: 82 15 00 01              s0 = u64 [sp + 0x100]
 23339: 82 1b 08 01              a4 = u64 [sp + 0x108]
 23343: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 23347: 33 07 03                 a0 = 0x3
 23350: 33 08                    a1 = 0
 23352: 33 09                    a2 = 0
 23354: 64 5a                    a3 = s0
 23356: 33 00 46 01              ra = 0x146
 23360: 0a 64                    ecalli 100 // 'log'
 23362: 01                       fallthrough
      :                          @1804 [@dyn 163]
 23363: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 23368: 55 38 00 00 ff 09        jump @1806 if a1 >=u 4294901760
      :                          @1805
 23374: 28 ff 42                 jump @2527
      :                          @1806
 23377: 33 07 f0 02 03           a0 = 0x302f0
 23382: 95 77 00 00 01           a0 = a0 + 0x10000
 23387: 01                       fallthrough
      :                          @1807
 23388: 82 78                    a1 = u64 [a0]
 23390: c9 87 09                 a2 = a0 - a1
 23393: aa 59 06                 jump @1809 if a2 == s0
      :                          @1808
 23396: 28 e9 42                 jump @2527
      :                          @1809
 23399: c9 68 09                 a2 = a1 - s1
 23402: 01                       fallthrough
      :                          @1810
 23403: 82 7a                    a3 = u64 [a0]
 23405: ab 8a ef                 jump @1807 if a3 != a1
      :                          @1811
 23408: 7b 79                    u64 [a0] = a2
 23410: 33 0b                    a4 = 0
 23412: 01                       fallthrough
      :                          @1812
 23413: ab 8a e7                 jump @1807 if a3 != a1
      :                          @1813
 23416: 28 d5 42                 jump @2527
      :                          @1814 [@dyn 164]
 23419: 95 17 c8 00              a0 = sp + 0xc8
 23423: 33 00 4a 01              ra = 0x14a
 23427: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 23430: 7b 15                    u64 [sp] = s0
 23432: 33 03 f0 02 03           t1 = 0x302f0
 23437: 33 02 00 00 01           t0 = 0x10000
 23442: c8 23 04                 t2 = t1 + t0
 23445: 28 6b c8                 jump @748
      :                          @1815 [@dyn 165]
 23448: 82 17 d0 00              a0 = u64 [sp + 0xd0]
 23452: 82 18 d8 00              a1 = u64 [sp + 0xd8]
 23456: 7b 17 10                 u64 [sp + 0x10] = a0
 23459: 33 00 4c 01              ra = 0x14c
 23463: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 23466: 7b 10 38                 u64 [sp + 0x38] = ra
 23469: 7b 15 30                 u64 [sp + 0x30] = s0
 23472: 7b 16 28                 u64 [sp + 0x28] = s1
 23475: 64 86                    s1 = a1
 23477: 64 75                    s0 = a0
 23479: 68 87                    a0 = clz a1
 23481: 9a 7a 40                 a3 = 0x40 - a0
 23484: 64 57                    a0 = s0
 23486: 33 09                    a2 = 0
 23488: 33 00 f4 00              ra = 0xf4
 23492: 28 02 b9                 jump @433
      :                          @1816 [@dyn 166]
 23495: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 23499: 95 17 b0 00              a0 = sp + 0xb0
 23503: 7b 17 90 00              u64 [sp + 0x90] = a0
 23507: 33 07 28 03              a0 = 0x328
 23511: 7b 17 98 00              u64 [sp + 0x98] = a0
 23515: 33 07 c0 03 01           a0 = 0x103c0
 23520: 7b 17 50 01              u64 [sp + 0x150] = a0
 23524: 49 21 58 01 01           u64 [sp + 344] = 0x1
 23529: 49 21 70 01              u64 [sp + 368] = 0
 23533: 95 18 90 00              a1 = sp + 0x90
 23537: 7b 18 60 01              u64 [sp + 0x160] = a1
 23541: 49 21 68 01 01           u64 [sp + 360] = 0x1
 23546: 95 17 f8 00              a0 = sp + 0xf8
 23550: 95 18 50 01              a1 = sp + 0x150
 23554: 50 20 4e 01 79 c1        ra = 334, jump @611
      :                          @1817 [@dyn 167]
 23560: 82 16 00 01              s1 = u64 [sp + 0x100]
 23564: 82 1b 08 01              a4 = u64 [sp + 0x108]
 23568: 82 15 f8 00              s0 = u64 [sp + 0xf8]
 23572: 33 07 03                 a0 = 0x3
 23575: 33 08                    a1 = 0
 23577: 33 09                    a2 = 0
 23579: 64 6a                    a3 = s1
 23581: 33 00 50 01              ra = 0x150
 23585: 0a 64                    ecalli 100 // 'log'
 23587: 01                       fallthrough
      :                          @1818 [@dyn 168]
 23588: 95 58 ff ff fe           a1 = s0 + 0xfffffffffffeffff
 23593: 53 38 00 00 ff 25        jump @1824 if a1 <u 4294901760
      :                          @1819
 23599: 33 07 f0 02 03           a0 = 0x302f0
 23604: 95 77 00 00 01           a0 = a0 + 0x10000
 23609: 01                       fallthrough
      :                          @1820
 23610: 82 78                    a1 = u64 [a0]
 23612: c9 87 09                 a2 = a0 - a1
 23615: ab 69 0f                 jump @1824 if a2 != s1
      :                          @1821
 23618: c9 58 09                 a2 = a1 - s0
 23621: 01                       fallthrough
      :                          @1822
 23622: 82 7a                    a3 = u64 [a0]
 23624: ab 8a f2                 jump @1820 if a3 != a1
      :                          @1823
 23627: 7b 79                    u64 [a0] = a2
 23629: 01                       fallthrough
      :                          @1824
 23630: 82 17 c8 00              a0 = u64 [sp + 0xc8]
 23634: 82 16 10                 s1 = u64 [sp + 0x10]
 23637: 52 07 06                 jump @1826 if a0 != 0
      :                          @1825
 23640: 28 f5 41                 jump @2527
      :                          @1826
 23643: 54 27 00 20 08           jump @1828 if a0 <=u 8192
      :                          @1827
 23648: 28 ed 41                 jump @2527
      :                          @1828
 23651: 97 77 03                 a0 = a0 << 0x3
 23654: 33 08 f0 02 03           a1 = 0x302f0
 23659: 95 88 00 00 01           a1 = a1 + 0x10000
 23664: 01                       fallthrough
      :                          @1829
 23665: 82 89                    a2 = u64 [a1]
 23667: c9 98 0a                 a3 = a1 - a2
 23670: aa 6a 06                 jump @1831 if a3 == s1
      :                          @1830
 23673: 28 d4 41                 jump @2527
      :                          @1831
 23676: c9 79 0a                 a3 = a2 - a0
 23679: 01                       fallthrough
      :                          @1832
 23680: 82 8b                    a4 = u64 [a1]
 23682: ab 9b ef                 jump @1829 if a4 != a2
      :                          @1833
 23685: 7b 8a                    u64 [a1] = a3
 23687: 33 0c                    a5 = 0
 23689: 01                       fallthrough
      :                          @1834
 23690: ab 9b e7                 jump @1829 if a4 != a2
      :                          @1835
 23693: 28 c0 41                 jump @2527
      :                          @1836 [@dyn 169]
 23696: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 23701: 97 79 0d                 a2 = a0 << 0xd
 23704: d3 97 07                 a0 = a0 ^ a2
 23707: 98 79 07                 a2 = a0 >> 0x7
 23710: 3a 0a 60 00 03           a3 = u64 [0x30060]
 23715: d3 97 07                 a0 = a0 ^ a2
 23718: 97 79 11                 a2 = a0 << 0x11
 23721: d3 97 07                 a0 = a0 ^ a2
 23724: ca a7 09                 a2 = a0 * a3
 23727: 3e 07 e0 00 03           u64 [0x300e0] = a0
 23732: 14 0b cd cc cc cc cc cc cc cc a4 = 0xcccccccccccccccd
 23742: d6 b9 07                 a0 = a2 mulhu a4
 23745: 98 77 03                 a0 = a0 >> 0x3
 23748: 96 77 0a                 a0 = a0 * 0xa
 23751: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 23756: c9 79 07                 a0 = a2 - a0
 23759: 95 77 01                 a0 = a0 + 0x1
 23762: 97 c9 0d                 a2 = a5 << 0xd
 23765: d3 c9 09                 a2 = a2 ^ a5
 23768: 98 9c 07                 a5 = a2 >> 0x7
 23771: d3 c9 09                 a2 = a2 ^ a5
 23774: 97 9c 11                 a5 = a2 << 0x11
 23777: d3 c9 09                 a2 = a2 ^ a5
 23780: ca a9 0a                 a3 = a2 * a3
 23783: 3e 09 e0 00 03           u64 [0x300e0] = a2
 23788: d6 ba 08                 a1 = a3 mulhu a4
 23791: 98 89 02                 a2 = a1 >> 0x2
 23794: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
 23797: c8 98 08                 a1 = a1 + a2
 23800: c9 8a 08                 a1 = a3 - a1
 23803: 95 88 02                 a1 = a1 + 0x2
 23806: 33 00 54 01              ra = 0x154
 23810: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 23813: 7b 10 18                 u64 [sp + 0x18] = ra
 23816: 7b 15 10                 u64 [sp + 0x10] = s0
 23819: 7b 16 08                 u64 [sp + 0x8] = s1
 23822: 33 04                    t2 = 0
 23824: 33 00                    ra = 0
 23826: 33 02 01                 t0 = 0x1
 23829: 33 03 03                 t1 = 0x3
 23832: 33 09                    a2 = 0
 23834: 64 7c                    a5 = a0
 23836: 28 90 ec                 jump @1507
      :                          @1837 [@dyn 170]
 23839: 7b 17 90 00              u64 [sp + 0x90] = a0
 23843: 95 17 90 00              a0 = sp + 0x90
 23847: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 23851: 33 07 28 03              a0 = 0x328
 23855: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 23859: 33 07 f8 03 01           a0 = 0x103f8
 23864: 7b 17 50 01              u64 [sp + 0x150] = a0
 23868: 49 21 58 01 01           u64 [sp + 344] = 0x1
 23873: 49 21 70 01              u64 [sp + 368] = 0
 23877: 95 18 c8 00              a1 = sp + 0xc8
 23881: 7b 18 60 01              u64 [sp + 0x160] = a1
 23885: 49 21 68 01 01           u64 [sp + 360] = 0x1
 23890: 95 17 f8 00              a0 = sp + 0xf8
 23894: 95 18 50 01              a1 = sp + 0x150
 23898: 50 20 56 01 21 c0        ra = 342, jump @611
      :                          @1838 [@dyn 171]
 23904: 82 15 00 01              s0 = u64 [sp + 0x100]
 23908: 82 1b 08 01              a4 = u64 [sp + 0x108]
 23912: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 23916: 33 07 03                 a0 = 0x3
 23919: 33 08                    a1 = 0
 23921: 33 09                    a2 = 0
 23923: 64 5a                    a3 = s0
 23925: 33 00 58 01              ra = 0x158
 23929: 0a 64                    ecalli 100 // 'log'
 23931: 01                       fallthrough
      :                          @1839 [@dyn 172]
 23932: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 23937: 55 38 00 00 ff 09        jump @1841 if a1 >=u 4294901760
      :                          @1840
 23943: 28 c6 40                 jump @2527
      :                          @1841
 23946: 33 07 f0 02 03           a0 = 0x302f0
 23951: 95 77 00 00 01           a0 = a0 + 0x10000
 23956: 01                       fallthrough
      :                          @1842
 23957: 82 78                    a1 = u64 [a0]
 23959: c9 87 09                 a2 = a0 - a1
 23962: aa 59 06                 jump @1844 if a2 == s0
      :                          @1843
 23965: 28 b0 40                 jump @2527
      :                          @1844
 23968: c9 68 09                 a2 = a1 - s1
 23971: 01                       fallthrough
      :                          @1845
 23972: 82 7a                    a3 = u64 [a0]
 23974: ab 8a ef                 jump @1842 if a3 != a1
      :                          @1846
 23977: 7b 79                    u64 [a0] = a2
 23979: 33 0b                    a4 = 0
 23981: 01                       fallthrough
      :                          @1847
 23982: ab 8a e7                 jump @1842 if a3 != a1
      :                          @1848
 23985: 28 9c 40                 jump @2527
      :                          @1849 [@dyn 173]
 23988: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 23993: 97 89 0d                 a2 = a1 << 0xd
 23996: d3 98 08                 a1 = a1 ^ a2
 23999: 98 89 07                 a2 = a1 >> 0x7
 24002: d3 98 08                 a1 = a1 ^ a2
 24005: 97 89 11                 a2 = a1 << 0x11
 24008: d3 89 09                 a2 = a2 ^ a1
 24011: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24016: 84 88 03                 a1 = a1 & 0x3
 24019: 95 88 01                 a1 = a1 + 0x1
 24022: 7b 18 68 02              u64 [sp + 0x268] = a1
 24026: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24031: 97 89 0d                 a2 = a1 << 0xd
 24034: d3 98 08                 a1 = a1 ^ a2
 24037: 98 89 07                 a2 = a1 >> 0x7
 24040: d3 98 08                 a1 = a1 ^ a2
 24043: 97 89 11                 a2 = a1 << 0x11
 24046: d3 89 09                 a2 = a2 ^ a1
 24049: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24054: 82 17 68 02              a0 = u64 [sp + 0x268]
 24058: 84 88 03                 a1 = a1 & 0x3
 24061: 95 88 01                 a1 = a1 + 0x1
 24064: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 24068: 50 20 5c 01 f8 eb        ra = 348, jump @1515
      :                          @1850 [@dyn 174]
 24074: 7b 17 90 00              u64 [sp + 0x90] = a0
 24078: 95 17 68 02              a0 = sp + 0x268
 24082: 7b 17 50 01              u64 [sp + 0x150] = a0
 24086: 33 07 28 03              a0 = 0x328
 24090: 7b 17 58 01              u64 [sp + 0x158] = a0
 24094: 95 18 b0 00              a1 = sp + 0xb0
 24098: 7b 18 60 01              u64 [sp + 0x160] = a1
 24102: 7b 17 68 01              u64 [sp + 0x168] = a0
 24106: 95 18 90 00              a1 = sp + 0x90
 24110: 7b 18 70 01              u64 [sp + 0x170] = a1
 24114: 7b 17 78 01              u64 [sp + 0x178] = a0
 24118: 33 07 20 04 01           a0 = 0x10420
 24123: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 24127: 49 21 00 01 03           u64 [sp + 256] = 0x3
 24132: 49 21 18 01              u64 [sp + 280] = 0
 24136: 95 18 50 01              a1 = sp + 0x150
 24140: 7b 18 08 01              u64 [sp + 0x108] = a1
 24144: 49 21 10 01 03           u64 [sp + 272] = 0x3
 24149: 95 17 c8 00              a0 = sp + 0xc8
 24153: 95 18 f8 00              a1 = sp + 0xf8
 24157: 50 20 5e 01 1e bf        ra = 350, jump @611
      :                          @1851 [@dyn 175]
 24163: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 24167: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 24171: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 24175: 33 07 03                 a0 = 0x3
 24178: 33 08                    a1 = 0
 24180: 33 09                    a2 = 0
 24182: 64 5a                    a3 = s0
 24184: 33 00 60 01              ra = 0x160
 24188: 0a 64                    ecalli 100 // 'log'
 24190: 01                       fallthrough
      :                          @1852 [@dyn 176]
 24191: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 24196: 55 38 00 00 ff 09        jump @1854 if a1 >=u 4294901760
      :                          @1853
 24202: 28 c3 3f                 jump @2527
      :                          @1854
 24205: 33 07 f0 02 03           a0 = 0x302f0
 24210: 95 77 00 00 01           a0 = a0 + 0x10000
 24215: 01                       fallthrough
      :                          @1855
 24216: 82 78                    a1 = u64 [a0]
 24218: c9 87 09                 a2 = a0 - a1
 24221: aa 59 06                 jump @1857 if a2 == s0
      :                          @1856
 24224: 28 ad 3f                 jump @2527
      :                          @1857
 24227: c9 68 09                 a2 = a1 - s1
 24230: 01                       fallthrough
      :                          @1858
 24231: 82 7a                    a3 = u64 [a0]
 24233: ab 8a ef                 jump @1855 if a3 != a1
      :                          @1859
 24236: 7b 79                    u64 [a0] = a2
 24238: 33 0b                    a4 = 0
 24240: 01                       fallthrough
      :                          @1860
 24241: ab 8a e7                 jump @1855 if a3 != a1
      :                          @1861
 24244: 28 99 3f                 jump @2527
      :                          @1862 [@dyn 177]
 24247: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24252: 97 89 0d                 a2 = a1 << 0xd
 24255: d3 98 08                 a1 = a1 ^ a2
 24258: 98 89 07                 a2 = a1 >> 0x7
 24261: 3a 0a 60 00 03           a3 = u64 [0x30060]
 24266: d3 98 08                 a1 = a1 ^ a2
 24269: 97 89 11                 a2 = a1 << 0x11
 24272: d3 98 08                 a1 = a1 ^ a2
 24275: ca a8 09                 a2 = a1 * a3
 24278: 3e 08 e0 00 03           u64 [0x300e0] = a1
 24283: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 24293: d6 89 0b                 a4 = a2 mulhu a1
 24296: 98 bb 04                 a4 = a4 >> 0x4
 24299: 96 bb 14                 a4 = a4 * 0x14
 24302: c9 b9 09                 a2 = a2 - a4
 24305: 95 99 02                 a2 = a2 + 0x2
 24308: 7b 19 68 02              u64 [sp + 0x268] = a2
 24312: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 24317: 97 9b 0d                 a4 = a2 << 0xd
 24320: d3 b9 09                 a2 = a2 ^ a4
 24323: 98 9b 07                 a4 = a2 >> 0x7
 24326: d3 b9 09                 a2 = a2 ^ a4
 24329: 97 9b 11                 a4 = a2 << 0x11
 24332: d3 b9 09                 a2 = a2 ^ a4
 24335: ca a9 0a                 a3 = a2 * a3
 24338: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24343: d6 8a 07                 a0 = a3 mulhu a1
 24346: 98 77 04                 a0 = a0 >> 0x4
 24349: 82 18 68 02              a1 = u64 [sp + 0x268]
 24353: 96 77 14                 a0 = a0 * 0x14
 24356: c9 7a 09                 a2 = a3 - a0
 24359: 95 97 02                 a0 = a2 + 0x2
 24362: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 24366: 64 8b                    a4 = a1
 24368: 64 7c                    a5 = a0
 24370: 01                       fallthrough
      :                          @1863
 24371: 64 ca                    a3 = a5
 24373: cd cb 0c                 a5 = a4 %u a5
 24376: 64 ab                    a4 = a3
 24378: 52 0c f9                 jump @1863 if a5 != 0
      :                          @1864
 24381: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 24384: 95 99 01                 a2 = a2 + 0x1
 24387: ca 89 08                 a1 = a2 * a1
 24390: c9 78 08                 a1 = a1 - a0
 24393: 94 a8                    a1 = 0 if a3 != 0
 24395: 7b 18 90 00              u64 [sp + 0x90] = a1
 24399: 95 17 68 02              a0 = sp + 0x268
 24403: 7b 17 50 01              u64 [sp + 0x150] = a0
 24407: 33 07 28 03              a0 = 0x328
 24411: 7b 17 58 01              u64 [sp + 0x158] = a0
 24415: 95 18 b0 00              a1 = sp + 0xb0
 24419: 7b 18 60 01              u64 [sp + 0x160] = a1
 24423: 7b 17 68 01              u64 [sp + 0x168] = a0
 24427: 95 18 90 00              a1 = sp + 0x90
 24431: 7b 18 70 01              u64 [sp + 0x170] = a1
 24435: 7b 17 78 01              u64 [sp + 0x178] = a0
 24439: 33 07 60 04 01           a0 = 0x10460
 24444: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 24448: 49 21 00 01 03           u64 [sp + 256] = 0x3
 24453: 49 21 18 01              u64 [sp + 280] = 0
 24457: 95 18 50 01              a1 = sp + 0x150
 24461: 7b 18 08 01              u64 [sp + 0x108] = a1
 24465: 49 21 10 01 03           u64 [sp + 272] = 0x3
 24470: 95 17 c8 00              a0 = sp + 0xc8
 24474: 95 18 f8 00              a1 = sp + 0xf8
 24478: 50 20 64 01 dd bd        ra = 356, jump @611
      :                          @1865 [@dyn 178]
 24484: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 24488: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 24492: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 24496: 33 07 03                 a0 = 0x3
 24499: 33 08                    a1 = 0
 24501: 33 09                    a2 = 0
 24503: 64 5a                    a3 = s0
 24505: 33 00 66 01              ra = 0x166
 24509: 0a 64                    ecalli 100 // 'log'
 24511: 01                       fallthrough
      :                          @1866 [@dyn 179]
 24512: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 24517: 55 38 00 00 ff 09        jump @1868 if a1 >=u 4294901760
      :                          @1867
 24523: 28 82 3e                 jump @2527
      :                          @1868
 24526: 33 07 f0 02 03           a0 = 0x302f0
 24531: 95 77 00 00 01           a0 = a0 + 0x10000
 24536: 01                       fallthrough
      :                          @1869
 24537: 82 78                    a1 = u64 [a0]
 24539: c9 87 09                 a2 = a0 - a1
 24542: aa 59 06                 jump @1871 if a2 == s0
      :                          @1870
 24545: 28 6c 3e                 jump @2527
      :                          @1871
 24548: c9 68 09                 a2 = a1 - s1
 24551: 01                       fallthrough
      :                          @1872
 24552: 82 7a                    a3 = u64 [a0]
 24554: ab 8a ef                 jump @1869 if a3 != a1
      :                          @1873
 24557: 7b 79                    u64 [a0] = a2
 24559: 33 0b                    a4 = 0
 24561: 01                       fallthrough
      :                          @1874
 24562: ab 8a e7                 jump @1869 if a3 != a1
      :                          @1875
 24565: 28 58 3e                 jump @2527
      :                          @1876 [@dyn 180]
 24568: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24573: 97 89 0d                 a2 = a1 << 0xd
 24576: d3 98 08                 a1 = a1 ^ a2
 24579: 98 89 07                 a2 = a1 >> 0x7
 24582: 3a 0a 60 00 03           a3 = u64 [0x30060]
 24587: d3 98 08                 a1 = a1 ^ a2
 24590: 97 89 11                 a2 = a1 << 0x11
 24593: d3 98 08                 a1 = a1 ^ a2
 24596: ca a8 09                 a2 = a1 * a3
 24599: 3a 0b c0 00 03           a4 = u64 [0x300c0]
 24604: 3e 08 e0 00 03           u64 [0x300e0] = a1
 24609: 98 98 01                 a1 = a2 >> 0x1
 24612: d6 b8 08                 a1 = a1 mulhu a4
 24615: 98 88 04                 a1 = a1 >> 0x4
 24618: 96 88 32                 a1 = a1 * 0x32
 24621: c9 89 09                 a2 = a2 - a1
 24624: 7b 19 68 02              u64 [sp + 0x268] = a2
 24628: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24633: 97 89 0d                 a2 = a1 << 0xd
 24636: d3 98 08                 a1 = a1 ^ a2
 24639: 98 89 07                 a2 = a1 >> 0x7
 24642: d3 98 08                 a1 = a1 ^ a2
 24645: 97 89 11                 a2 = a1 << 0x11
 24648: d3 98 08                 a1 = a1 ^ a2
 24651: ca a8 09                 a2 = a1 * a3
 24654: 3a 0a 98 00 03           a3 = u64 [0x30098]
 24659: 3e 08 e0 00 03           u64 [0x300e0] = a1
 24664: 98 97 02                 a0 = a2 >> 0x2
 24667: d6 a7 07                 a0 = a0 mulhu a3
 24670: 98 77 02                 a0 = a0 >> 0x2
 24673: 96 78 64                 a1 = a0 * 0x64
 24676: 82 17 68 02              a0 = u64 [sp + 0x268]
 24680: c9 89 08                 a1 = a2 - a1
 24683: 95 88 01                 a1 = a1 + 0x1
 24686: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 24690: 50 20 6a 01 e6 e9        ra = 362, jump @1529
      :                          @1877 [@dyn 181]
 24696: 7b 17 90 00              u64 [sp + 0x90] = a0
 24700: 95 17 68 02              a0 = sp + 0x268
 24704: 7b 17 50 01              u64 [sp + 0x150] = a0
 24708: 33 07 28 03              a0 = 0x328
 24712: 7b 17 58 01              u64 [sp + 0x158] = a0
 24716: 95 18 b0 00              a1 = sp + 0xb0
 24720: 7b 18 60 01              u64 [sp + 0x160] = a1
 24724: 7b 17 68 01              u64 [sp + 0x168] = a0
 24728: 95 18 90 00              a1 = sp + 0x90
 24732: 7b 18 70 01              u64 [sp + 0x170] = a1
 24736: 7b 17 78 01              u64 [sp + 0x178] = a0
 24740: 33 07 a0 04 01           a0 = 0x104a0
 24745: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 24749: 49 21 00 01 03           u64 [sp + 256] = 0x3
 24754: 49 21 18 01              u64 [sp + 280] = 0
 24758: 95 18 50 01              a1 = sp + 0x150
 24762: 7b 18 08 01              u64 [sp + 0x108] = a1
 24766: 49 21 10 01 03           u64 [sp + 272] = 0x3
 24771: 95 17 c8 00              a0 = sp + 0xc8
 24775: 95 18 f8 00              a1 = sp + 0xf8
 24779: 50 20 6c 01 b0 bc        ra = 364, jump @611
      :                          @1878 [@dyn 182]
 24785: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 24789: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 24793: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 24797: 33 07 03                 a0 = 0x3
 24800: 33 08                    a1 = 0
 24802: 33 09                    a2 = 0
 24804: 64 5a                    a3 = s0
 24806: 33 00 6e 01              ra = 0x16e
 24810: 0a 64                    ecalli 100 // 'log'
 24812: 01                       fallthrough
      :                          @1879 [@dyn 183]
 24813: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 24818: 55 38 00 00 ff 09        jump @1881 if a1 >=u 4294901760
      :                          @1880
 24824: 28 55 3d                 jump @2527
      :                          @1881
 24827: 33 07 f0 02 03           a0 = 0x302f0
 24832: 95 77 00 00 01           a0 = a0 + 0x10000
 24837: 01                       fallthrough
      :                          @1882
 24838: 82 78                    a1 = u64 [a0]
 24840: c9 87 09                 a2 = a0 - a1
 24843: aa 59 06                 jump @1884 if a2 == s0
      :                          @1883
 24846: 28 3f 3d                 jump @2527
      :                          @1884
 24849: c9 68 09                 a2 = a1 - s1
 24852: 01                       fallthrough
      :                          @1885
 24853: 82 7a                    a3 = u64 [a0]
 24855: ab 8a ef                 jump @1882 if a3 != a1
      :                          @1886
 24858: 7b 79                    u64 [a0] = a2
 24860: 33 0b                    a4 = 0
 24862: 01                       fallthrough
      :                          @1887
 24863: ab 8a e7                 jump @1882 if a3 != a1
      :                          @1888
 24866: 28 2b 3d                 jump @2527
      :                          @1889 [@dyn 184]
 24869: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 24874: 97 89 0d                 a2 = a1 << 0xd
 24877: d3 98 08                 a1 = a1 ^ a2
 24880: 98 89 07                 a2 = a1 >> 0x7
 24883: 3a 0a 60 00 03           a3 = u64 [0x30060]
 24888: d3 98 08                 a1 = a1 ^ a2
 24891: 97 89 11                 a2 = a1 << 0x11
 24894: d3 98 08                 a1 = a1 ^ a2
 24897: ca a8 09                 a2 = a1 * a3
 24900: 3e 08 e0 00 03           u64 [0x300e0] = a1
 24905: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 24915: d6 89 0b                 a4 = a2 mulhu a1
 24918: 98 bb 04                 a4 = a4 >> 0x4
 24921: 33 0c 14                 a5 = 0x14
 24924: ca cb 0b                 a4 = a4 * a5
 24927: c9 b9 09                 a2 = a2 - a4
 24930: 7b 19 68 02              u64 [sp + 0x268] = a2
 24934: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 24939: 97 9b 0d                 a4 = a2 << 0xd
 24942: d3 b9 09                 a2 = a2 ^ a4
 24945: 98 9b 07                 a4 = a2 >> 0x7
 24948: d3 b9 09                 a2 = a2 ^ a4
 24951: 97 9b 11                 a4 = a2 << 0x11
 24954: d3 b9 09                 a2 = a2 ^ a4
 24957: ca a9 0a                 a3 = a2 * a3
 24960: 3e 09 e0 00 03           u64 [0x300e0] = a2
 24965: d6 8a 07                 a0 = a3 mulhu a1
 24968: 98 78 02                 a1 = a0 >> 0x2
 24971: 84 77 fc                 a0 = a0 & 0xfffffffffffffffc
 24974: c8 78 08                 a1 = a1 + a0
 24977: 82 17 68 02              a0 = u64 [sp + 0x268]
 24981: c9 8a 08                 a1 = a3 - a1
 24984: 95 88 01                 a1 = a1 + 0x1
 24987: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 24991: 50 20 72 01 39 ea        ra = 370, jump @1560
      :                          @1890 [@dyn 185]
 24997: 7b 17 90 00              u64 [sp + 0x90] = a0
 25001: 95 17 68 02              a0 = sp + 0x268
 25005: 7b 17 50 01              u64 [sp + 0x150] = a0
 25009: 33 07 28 03              a0 = 0x328
 25013: 7b 17 58 01              u64 [sp + 0x158] = a0
 25017: 95 18 b0 00              a1 = sp + 0xb0
 25021: 7b 18 60 01              u64 [sp + 0x160] = a1
 25025: 7b 17 68 01              u64 [sp + 0x168] = a0
 25029: 95 18 90 00              a1 = sp + 0x90
 25033: 7b 18 70 01              u64 [sp + 0x170] = a1
 25037: 7b 17 78 01              u64 [sp + 0x178] = a0
 25041: 33 07 e0 04 01           a0 = 0x104e0
 25046: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 25050: 49 21 00 01 03           u64 [sp + 256] = 0x3
 25055: 49 21 18 01              u64 [sp + 280] = 0
 25059: 95 18 50 01              a1 = sp + 0x150
 25063: 7b 18 08 01              u64 [sp + 0x108] = a1
 25067: 49 21 10 01 03           u64 [sp + 272] = 0x3
 25072: 95 17 c8 00              a0 = sp + 0xc8
 25076: 95 18 f8 00              a1 = sp + 0xf8
 25080: 50 20 74 01 83 bb        ra = 372, jump @611
      :                          @1891 [@dyn 186]
 25086: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 25090: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 25094: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 25098: 33 07 03                 a0 = 0x3
 25101: 33 08                    a1 = 0
 25103: 33 09                    a2 = 0
 25105: 64 5a                    a3 = s0
 25107: 33 00 76 01              ra = 0x176
 25111: 0a 64                    ecalli 100 // 'log'
 25113: 01                       fallthrough
      :                          @1892 [@dyn 187]
 25114: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 25119: 55 38 00 00 ff 09        jump @1894 if a1 >=u 4294901760
      :                          @1893
 25125: 28 28 3c                 jump @2527
      :                          @1894
 25128: 33 07 f0 02 03           a0 = 0x302f0
 25133: 95 77 00 00 01           a0 = a0 + 0x10000
 25138: 01                       fallthrough
      :                          @1895
 25139: 82 78                    a1 = u64 [a0]
 25141: c9 87 09                 a2 = a0 - a1
 25144: aa 59 06                 jump @1897 if a2 == s0
      :                          @1896
 25147: 28 12 3c                 jump @2527
      :                          @1897
 25150: c9 68 09                 a2 = a1 - s1
 25153: 01                       fallthrough
      :                          @1898
 25154: 82 7a                    a3 = u64 [a0]
 25156: ab 8a ef                 jump @1895 if a3 != a1
      :                          @1899
 25159: 7b 79                    u64 [a0] = a2
 25161: 33 0b                    a4 = 0
 25163: 01                       fallthrough
      :                          @1900
 25164: ab 8a e7                 jump @1895 if a3 != a1
      :                          @1901
 25167: 28 fe 3b                 jump @2527
      :                          @1902 [@dyn 188]
 25170: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25175: 97 89 0d                 a2 = a1 << 0xd
 25178: d3 98 08                 a1 = a1 ^ a2
 25181: 98 89 07                 a2 = a1 >> 0x7
 25184: d3 89 09                 a2 = a2 ^ a1
 25187: 97 9a 11                 a3 = a2 << 0x11
 25190: 3a 08 60 00 03           a1 = u64 [0x30060]
 25195: d3 9a 0a                 a3 = a3 ^ a2
 25198: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 25203: ca 8a 0b                 a4 = a3 * a1
 25206: 3e 0a e0 00 03           u64 [0x300e0] = a3
 25211: d6 9b 0a                 a3 = a4 mulhu a2
 25214: c9 ab 0c                 a5 = a4 - a3
 25217: 98 cc 01                 a5 = a5 >> 0x1
 25220: c8 ca 0a                 a3 = a3 + a5
 25223: 98 ac 06                 a5 = a3 >> 0x6
 25226: 33 03 65                 t1 = 0x65
 25229: ca 3c 0c                 a5 = a5 * t1
 25232: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 25237: c9 cb 0b                 a4 = a4 - a5
 25240: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 25243: 97 6c 0d                 a5 = s1 << 0xd
 25246: d3 c6 06                 s1 = s1 ^ a5
 25249: 98 6c 07                 a5 = s1 >> 0x7
 25252: d3 c6 06                 s1 = s1 ^ a5
 25255: 97 6c 11                 a5 = s1 << 0x11
 25258: d3 6c 0c                 a5 = a5 ^ s1
 25261: ca 8c 05                 s0 = a5 * a1
 25264: 3e 0c e0 00 03           u64 [0x300e0] = a5
 25269: d6 95 0c                 a5 = s0 mulhu a2
 25272: c9 c5 06                 s1 = s0 - a5
 25275: 98 66 01                 s1 = s1 >> 0x1
 25278: c8 6c 0c                 a5 = a5 + s1
 25281: 98 cc 06                 a5 = a5 >> 0x6
 25284: ca 3c 0c                 a5 = a5 * t1
 25287: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 25292: c9 c5 05                 s0 = s0 - a5
 25295: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 25298: 97 b6 0d                 s1 = a4 << 0xd
 25301: d3 b6 06                 s1 = s1 ^ a4
 25304: 98 6b 07                 a4 = s1 >> 0x7
 25307: d3 b6 06                 s1 = s1 ^ a4
 25310: 97 6b 11                 a4 = s1 << 0x11
 25313: d3 6b 0b                 a4 = a4 ^ s1
 25316: ca 8b 05                 s0 = a4 * a1
 25319: 3e 0b e0 00 03           u64 [0x300e0] = a4
 25324: d6 95 0b                 a4 = s0 mulhu a2
 25327: c9 b5 06                 s1 = s0 - a4
 25330: 98 66 01                 s1 = s1 >> 0x1
 25333: c8 6b 0b                 a4 = a4 + s1
 25336: 98 bb 06                 a4 = a4 >> 0x6
 25339: ca 3b 0b                 a4 = a4 * t1
 25342: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 25347: c9 b5 05                 s0 = s0 - a4
 25350: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 25353: 97 a6 0d                 s1 = a3 << 0xd
 25356: d3 a6 06                 s1 = s1 ^ a3
 25359: 98 6a 07                 a3 = s1 >> 0x7
 25362: d3 a6 06                 s1 = s1 ^ a3
 25365: 97 6a 11                 a3 = s1 << 0x11
 25368: d3 6a 0a                 a3 = a3 ^ s1
 25371: ca 8a 08                 a1 = a3 * a1
 25374: 3e 0a e0 00 03           u64 [0x300e0] = a3
 25379: d6 98 07                 a0 = a1 mulhu a2
 25382: c9 78 09                 a2 = a1 - a0
 25385: 98 99 01                 a2 = a2 >> 0x1
 25388: c8 97 07                 a0 = a0 + a2
 25391: 98 77 06                 a0 = a0 >> 0x6
 25394: ca 37 07                 a0 = a0 * t1
 25397: c9 78 08                 a1 = a1 - a0
 25400: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 25403: 7b 1c d0 00              u64 [sp + 0xd0] = a5
 25407: 7b 12 c8 00              u64 [sp + 0xc8] = t0
 25411: 7b 1b d8 00              u64 [sp + 0xd8] = a4
 25415: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 25419: 95 17 c8 00              a0 = sp + 0xc8
 25423: 95 15 c8 00              s0 = sp + 0xc8
 25427: 28 ce e8                 jump @1567
      :                          @1903
 25430: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 25434: 7b 15 f8 00              u64 [sp + 0xf8] = s0
 25438: 33 07 30                 a0 = 0x30
 25441: 7b 17 00 01              u64 [sp + 0x100] = a0
 25445: 95 17 b0 00              a0 = sp + 0xb0
 25449: 7b 17 08 01              u64 [sp + 0x108] = a0
 25453: 33 07 28 03              a0 = 0x328
 25457: 7b 17 10 01              u64 [sp + 0x110] = a0
 25461: 33 07 30 05 01           a0 = 0x10530
 25466: 7b 17 50 01              u64 [sp + 0x150] = a0
 25470: 49 21 58 01 02           u64 [sp + 344] = 0x2
 25475: 49 21 70 01              u64 [sp + 368] = 0
 25479: 95 18 f8 00              a1 = sp + 0xf8
 25483: 7b 18 60 01              u64 [sp + 0x160] = a1
 25487: 49 21 68 01 02           u64 [sp + 360] = 0x2
 25492: 95 17 90 00              a0 = sp + 0x90
 25496: 95 18 50 01              a1 = sp + 0x150
 25500: 50 20 7a 01 df b9        ra = 378, jump @611
      :                          @1904 [@dyn 189]
 25506: 82 15 98 00              s0 = u64 [sp + 0x98]
 25510: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 25514: 82 16 90 00              s1 = u64 [sp + 0x90]
 25518: 33 07 03                 a0 = 0x3
 25521: 33 08                    a1 = 0
 25523: 33 09                    a2 = 0
 25525: 64 5a                    a3 = s0
 25527: 33 00 7c 01              ra = 0x17c
 25531: 0a 64                    ecalli 100 // 'log'
 25533: 01                       fallthrough
      :                          @1905 [@dyn 190]
 25534: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 25539: 55 38 00 00 ff 09        jump @1907 if a1 >=u 4294901760
      :                          @1906
 25545: 28 84 3a                 jump @2527
      :                          @1907
 25548: 33 07 f0 02 03           a0 = 0x302f0
 25553: 95 77 00 00 01           a0 = a0 + 0x10000
 25558: 01                       fallthrough
      :                          @1908
 25559: 82 78                    a1 = u64 [a0]
 25561: c9 87 09                 a2 = a0 - a1
 25564: aa 59 06                 jump @1910 if a2 == s0
      :                          @1909
 25567: 28 6e 3a                 jump @2527
      :                          @1910
 25570: c9 68 09                 a2 = a1 - s1
 25573: 01                       fallthrough
      :                          @1911
 25574: 82 7a                    a3 = u64 [a0]
 25576: ab 8a ef                 jump @1908 if a3 != a1
      :                          @1912
 25579: 7b 79                    u64 [a0] = a2
 25581: 33 0b                    a4 = 0
 25583: 01                       fallthrough
      :                          @1913
 25584: ab 8a e7                 jump @1908 if a3 != a1
      :                          @1914
 25587: 28 5a 3a                 jump @2527
      :                          @1915 [@dyn 191]
 25590: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25595: 97 89 0d                 a2 = a1 << 0xd
 25598: d3 98 08                 a1 = a1 ^ a2
 25601: 98 89 07                 a2 = a1 >> 0x7
 25604: d3 98 08                 a1 = a1 ^ a2
 25607: 97 89 11                 a2 = a1 << 0x11
 25610: d3 98 08                 a1 = a1 ^ a2
 25613: 3a 09 60 00 03           a2 = u64 [0x30060]
 25618: 3a 0a 68 00 03           a3 = u64 [0x30068]
 25623: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25628: ca 98 07                 a0 = a1 * a2
 25631: 98 78 03                 a1 = a0 >> 0x3
 25634: d6 a8 08                 a1 = a1 mulhu a3
 25637: 98 88 04                 a1 = a1 >> 0x4
 25640: 96 88 e8 03              a1 = a1 * 0x3e8
 25644: c9 87 07                 a0 = a0 - a1
 25647: 86 77 01                 a0 = a0 | 0x1
 25650: 50 20 80 01 3e e8        ra = 384, jump @1569
      :                          @1916 [@dyn 192]
 25656: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 25660: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 25664: 95 17 c8 00              a0 = sp + 0xc8
 25668: 7b 17 90 00              u64 [sp + 0x90] = a0
 25672: 33 07 c0 00              a0 = 0xc0
 25676: 7b 17 98 00              u64 [sp + 0x98] = a0
 25680: 33 07 68 05 01           a0 = 0x10568
 25685: 7b 17 50 01              u64 [sp + 0x150] = a0
 25689: 49 21 58 01 01           u64 [sp + 344] = 0x1
 25694: 49 21 70 01              u64 [sp + 368] = 0
 25698: 95 18 90 00              a1 = sp + 0x90
 25702: 7b 18 60 01              u64 [sp + 0x160] = a1
 25706: 49 21 68 01 01           u64 [sp + 360] = 0x1
 25711: 95 17 f8 00              a0 = sp + 0xf8
 25715: 95 18 50 01              a1 = sp + 0x150
 25719: 50 20 82 01 04 b9        ra = 386, jump @611
      :                          @1917 [@dyn 193]
 25725: 82 15 00 01              s0 = u64 [sp + 0x100]
 25729: 82 1b 08 01              a4 = u64 [sp + 0x108]
 25733: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 25737: 33 07 03                 a0 = 0x3
 25740: 33 08                    a1 = 0
 25742: 33 09                    a2 = 0
 25744: 64 5a                    a3 = s0
 25746: 33 00 84 01              ra = 0x184
 25750: 0a 64                    ecalli 100 // 'log'
 25752: 01                       fallthrough
      :                          @1918 [@dyn 194]
 25753: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 25758: 55 38 00 00 ff 09        jump @1920 if a1 >=u 4294901760
      :                          @1919
 25764: 28 a9 39                 jump @2527
      :                          @1920
 25767: 33 07 f0 02 03           a0 = 0x302f0
 25772: 95 77 00 00 01           a0 = a0 + 0x10000
 25777: 01                       fallthrough
      :                          @1921
 25778: 82 78                    a1 = u64 [a0]
 25780: c9 87 09                 a2 = a0 - a1
 25783: aa 59 06                 jump @1923 if a2 == s0
      :                          @1922
 25786: 28 93 39                 jump @2527
      :                          @1923
 25789: c9 68 09                 a2 = a1 - s1
 25792: 01                       fallthrough
      :                          @1924
 25793: 82 7a                    a3 = u64 [a0]
 25795: ab 8a ef                 jump @1921 if a3 != a1
      :                          @1925
 25798: 7b 79                    u64 [a0] = a2
 25800: 33 0b                    a4 = 0
 25802: 01                       fallthrough
      :                          @1926
 25803: ab 8a e7                 jump @1921 if a3 != a1
      :                          @1927
 25806: 28 7f 39                 jump @2527
      :                          @1928 [@dyn 195]
 25809: 95 17 28                 a0 = sp + 0x28
 25812: 33 00 88 01              ra = 0x188
 25816: 95 11 f8                 sp = sp + 0xfffffffffffffff8
 25819: 7b 15                    u64 [sp] = s0
 25821: 33 03 f0 02 03           t1 = 0x302f0
 25826: 33 02 00 00 01           t0 = 0x10000
 25831: c8 23 04                 t2 = t1 + t0
 25834: 28 72 c1                 jump @754
      :                          @1929 [@dyn 196]
 25837: 82 18 38                 a1 = u64 [sp + 0x38]
 25840: 7b 18                    u64 [sp] = a1
 25842: 82 15 30                 s0 = u64 [sp + 0x30]
 25845: 68 87                    a0 = clz a1
 25847: 9a 7a 40                 a3 = 0x40 - a0
 25850: 64 57                    a0 = s0
 25852: 33 09                    a2 = 0
 25854: 50 20 8a 01 96 a9        ra = 394, jump @324
      :                          @1930 [@dyn 197]
 25860: 82 17 28                 a0 = u64 [sp + 0x28]
 25863: 7b 17 08                 u64 [sp + 0x8] = a0
 25866: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 25871: 97 89 0d                 a2 = a1 << 0xd
 25874: d3 98 08                 a1 = a1 ^ a2
 25877: 98 89 07                 a2 = a1 >> 0x7
 25880: 3a 0a 60 00 03           a3 = u64 [0x30060]
 25885: d3 98 08                 a1 = a1 ^ a2
 25888: 97 89 11                 a2 = a1 << 0x11
 25891: d3 98 08                 a1 = a1 ^ a2
 25894: ca a8 09                 a2 = a1 * a3
 25897: 3a 0b 98 00 03           a4 = u64 [0x30098]
 25902: 3e 08 e0 00 03           u64 [0x300e0] = a1
 25907: 98 98 02                 a1 = a2 >> 0x2
 25910: d6 b8 08                 a1 = a1 mulhu a4
 25913: 98 88 02                 a1 = a1 >> 0x2
 25916: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 25921: 96 88 64                 a1 = a1 * 0x64
 25924: c9 89 08                 a1 = a2 - a1
 25927: 97 69 0d                 a2 = s1 << 0xd
 25930: d3 96 06                 s1 = s1 ^ a2
 25933: 98 69 07                 a2 = s1 >> 0x7
 25936: d3 96 06                 s1 = s1 ^ a2
 25939: 97 69 11                 a2 = s1 << 0x11
 25942: d3 69 09                 a2 = a2 ^ s1
 25945: ca a9 0a                 a3 = a2 * a3
 25948: 3e 09 e0 00 03           u64 [0x300e0] = a2
 25953: 98 a7 02                 a0 = a3 >> 0x2
 25956: d6 b7 07                 a0 = a0 mulhu a4
 25959: 98 77 02                 a0 = a0 >> 0x2
 25962: 96 77 64                 a0 = a0 * 0x64
 25965: c9 7a 0a                 a3 = a3 - a0
 25968: e6 a8 09                 a2 = minu(a1, a3)
 25971: e4 a8 0a                 a3 = maxu(a1, a3)
 25974: 7b 19 68 02              u64 [sp + 0x268] = a2
 25978: 7b 1a b0 00              u64 [sp + 0xb0] = a3
 25982: 7b 15 10                 u64 [sp + 0x10] = s0
 25985: 64 57                    a0 = s0
 25987: 82 18                    a1 = u64 [sp]
 25989: 50 20 8c 01 af eb        ra = 396, jump @1671
      :                          @1931 [@dyn 198]
 25995: 7b 17 90 00              u64 [sp + 0x90] = a0
 25999: 95 17 68 02              a0 = sp + 0x268
 26003: 7b 17 50 01              u64 [sp + 0x150] = a0
 26007: 33 07 80 03              a0 = 0x380
 26011: 7b 17 58 01              u64 [sp + 0x158] = a0
 26015: 95 18 b0 00              a1 = sp + 0xb0
 26019: 7b 18 60 01              u64 [sp + 0x160] = a1
 26023: 7b 17 68 01              u64 [sp + 0x168] = a0
 26027: 95 17 90 00              a0 = sp + 0x90
 26031: 7b 17 70 01              u64 [sp + 0x170] = a0
 26035: 33 07 28 03              a0 = 0x328
 26039: 7b 17 78 01              u64 [sp + 0x178] = a0
 26043: 33 07 98 05 01           a0 = 0x10598
 26048: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 26052: 49 21 00 01 03           u64 [sp + 256] = 0x3
 26057: 49 21 18 01              u64 [sp + 280] = 0
 26061: 95 18 50 01              a1 = sp + 0x150
 26065: 7b 18 08 01              u64 [sp + 0x108] = a1
 26069: 49 21 10 01 03           u64 [sp + 272] = 0x3
 26074: 95 17 c8 00              a0 = sp + 0xc8
 26078: 95 18 f8 00              a1 = sp + 0xf8
 26082: 50 20 8e 01 99 b7        ra = 398, jump @611
      :                          @1932 [@dyn 199]
 26088: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 26092: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 26096: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 26100: 33 07 03                 a0 = 0x3
 26103: 33 08                    a1 = 0
 26105: 33 09                    a2 = 0
 26107: 64 5a                    a3 = s0
 26109: 33 00 90 01              ra = 0x190
 26113: 0a 64                    ecalli 100 // 'log'
 26115: 01                       fallthrough
      :                          @1933 [@dyn 200]
 26116: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 26121: 53 38 00 00 ff 25        jump @1939 if a1 <u 4294901760
      :                          @1934
 26127: 33 07 f0 02 03           a0 = 0x302f0
 26132: 95 77 00 00 01           a0 = a0 + 0x10000
 26137: 01                       fallthrough
      :                          @1935
 26138: 82 78                    a1 = u64 [a0]
 26140: c9 87 09                 a2 = a0 - a1
 26143: ab 59 0f                 jump @1939 if a2 != s0
      :                          @1936
 26146: c9 68 09                 a2 = a1 - s1
 26149: 01                       fallthrough
      :                          @1937
 26150: 82 7a                    a3 = u64 [a0]
 26152: ab 8a f2                 jump @1935 if a3 != a1
      :                          @1938
 26155: 7b 79                    u64 [a0] = a2
 26157: 01                       fallthrough
      :                          @1939
 26158: 82 16 10                 s1 = u64 [sp + 0x10]
 26161: 82 18 08                 a1 = u64 [sp + 0x8]
 26164: 52 08 06                 jump @1941 if a1 != 0
      :                          @1940
 26167: 28 16 38                 jump @2527
      :                          @1941
 26170: 54 28 00 20 08           jump @1943 if a1 <=u 8192
      :                          @1942
 26175: 28 0e 38                 jump @2527
      :                          @1943
 26178: 97 87 03                 a0 = a1 << 0x3
 26181: 33 08 f0 02 03           a1 = 0x302f0
 26186: 95 88 00 00 01           a1 = a1 + 0x10000
 26191: 01                       fallthrough
      :                          @1944
 26192: 82 89                    a2 = u64 [a1]
 26194: c9 98 0a                 a3 = a1 - a2
 26197: aa 6a 06                 jump @1946 if a3 == s1
      :                          @1945
 26200: 28 f5 37                 jump @2527
      :                          @1946
 26203: c9 79 0a                 a3 = a2 - a0
 26206: 01                       fallthrough
      :                          @1947
 26207: 82 8b                    a4 = u64 [a1]
 26209: ab 9b ef                 jump @1944 if a4 != a2
      :                          @1948
 26212: 7b 8a                    u64 [a1] = a3
 26214: 33 0c                    a5 = 0
 26216: 01                       fallthrough
      :                          @1949
 26217: ab 9b e7                 jump @1944 if a4 != a2
      :                          @1950
 26220: 28 e1 37                 jump @2527
      :                          @1951 [@dyn 201]
 26223: 95 17 50 01              a0 = sp + 0x150
 26227: 95 15 50 01              s0 = sp + 0x150
 26231: 33 00 94 01              ra = 0x194
 26235: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 26238: 7b 10 40                 u64 [sp + 0x40] = ra
 26241: 7b 15 38                 u64 [sp + 0x38] = s0
 26244: 7b 16 30                 u64 [sp + 0x30] = s1
 26247: 64 70                    ra = a0
 26249: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26254: 3a 03 48 00 03           t1 = u64 [0x30048]
 26259: 97 89 0d                 a2 = a1 << 0xd
 26262: d3 98 08                 a1 = a1 ^ a2
 26265: 98 89 07                 a2 = a1 >> 0x7
 26268: d3 98 08                 a1 = a1 ^ a2
 26271: 97 89 11                 a2 = a1 << 0x11
 26274: d3 98 08                 a1 = a1 ^ a2
 26277: 3a 09 50 00 03           a2 = u64 [0x30050]
 26282: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26287: ca 38 07                 a0 = a1 * t1
 26290: 98 78 03                 a1 = a0 >> 0x3
 26293: d6 98 08                 a1 = a1 mulhu a2
 26296: 98 88 04                 a1 = a1 >> 0x4
 26299: 96 88 e8 03              a1 = a1 * 0x3e8
 26303: c9 87 07                 a0 = a0 - a1
 26306: 95 79 64                 a2 = a0 + 0x64
 26309: 33 07 02                 a0 = 0x2
 26312: 33 0a 09                 a3 = 0x9
 26315: 28 f4 e6                 jump @1590
      :                          @1952 [@dyn 202]
 26318: 82 17 50 01              a0 = u64 [sp + 0x150]
 26322: 82 18 58 01              a1 = u64 [sp + 0x158]
 26326: 82 19 60 01              a2 = u64 [sp + 0x160]
 26330: 7b 17 68 02              u64 [sp + 0x268] = a0
 26334: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 26338: 7b 19 90 00              u64 [sp + 0x90] = a2
 26342: 95 17 68 02              a0 = sp + 0x268
 26346: 7b 17 50 01              u64 [sp + 0x150] = a0
 26350: 33 07 28 03              a0 = 0x328
 26354: 7b 17 58 01              u64 [sp + 0x158] = a0
 26358: 95 18 b0 00              a1 = sp + 0xb0
 26362: 7b 18 60 01              u64 [sp + 0x160] = a1
 26366: 7b 17 68 01              u64 [sp + 0x168] = a0
 26370: 95 18 90 00              a1 = sp + 0x90
 26374: 7b 18 70 01              u64 [sp + 0x170] = a1
 26378: 7b 17 78 01              u64 [sp + 0x178] = a0
 26382: 33 07 d8 05 01           a0 = 0x105d8
 26387: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 26391: 49 21 00 01 03           u64 [sp + 256] = 0x3
 26396: 49 21 18 01              u64 [sp + 280] = 0
 26400: 7b 15 08 01              u64 [sp + 0x108] = s0
 26404: 49 21 10 01 03           u64 [sp + 272] = 0x3
 26409: 95 17 c8 00              a0 = sp + 0xc8
 26413: 95 18 f8 00              a1 = sp + 0xf8
 26417: 50 20 96 01 4a b6        ra = 406, jump @611
      :                          @1953 [@dyn 203]
 26423: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 26427: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 26431: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 26435: 33 07 03                 a0 = 0x3
 26438: 33 08                    a1 = 0
 26440: 33 09                    a2 = 0
 26442: 64 5a                    a3 = s0
 26444: 33 00 98 01              ra = 0x198
 26448: 0a 64                    ecalli 100 // 'log'
 26450: 01                       fallthrough
      :                          @1954 [@dyn 204]
 26451: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 26456: 55 38 00 00 ff 09        jump @1956 if a1 >=u 4294901760
      :                          @1955
 26462: 28 ef 36                 jump @2527
      :                          @1956
 26465: 33 07 f0 02 03           a0 = 0x302f0
 26470: 95 77 00 00 01           a0 = a0 + 0x10000
 26475: 01                       fallthrough
      :                          @1957
 26476: 82 78                    a1 = u64 [a0]
 26478: c9 87 09                 a2 = a0 - a1
 26481: aa 59 06                 jump @1959 if a2 == s0
      :                          @1958
 26484: 28 d9 36                 jump @2527
      :                          @1959
 26487: c9 68 09                 a2 = a1 - s1
 26490: 01                       fallthrough
      :                          @1960
 26491: 82 7a                    a3 = u64 [a0]
 26493: ab 8a ef                 jump @1957 if a3 != a1
      :                          @1961
 26496: 7b 79                    u64 [a0] = a2
 26498: 33 0b                    a4 = 0
 26500: 01                       fallthrough
      :                          @1962
 26501: ab 8a e7                 jump @1957 if a3 != a1
      :                          @1963
 26504: 28 c5 36                 jump @2527
      :                          @1964 [@dyn 205]
 26507: 3a 07 60 00 03           a0 = u64 [0x30060]
 26512: 7b 17 10                 u64 [sp + 0x10] = a0
 26515: 33 07 f4 01              a0 = 0x1f4
 26519: 33 00 9c 01              ra = 0x19c
 26523: 33 09 02                 a2 = 0x2
 26526: 33 0a 09                 a3 = 0x9
 26529: 28 95 c0                 jump @794
      :                          @1965 [@dyn 206]
 26532: 64 75                    s0 = a0
 26534: 33 07 64                 a0 = 0x64
 26537: 33 00 9e 01              ra = 0x19e
 26541: 33 09 02                 a2 = 0x2
 26544: 33 0a 09                 a3 = 0x9
 26547: 28 83 c0                 jump @794
      :                          @1966 [@dyn 207]
 26550: 64 76                    s1 = a0
 26552: 64 57                    a0 = s0
 26554: 50 20 a0 01 ab c0        ra = 416, jump @805
      :                          @1967 [@dyn 208]
 26560: 82 1c 10                 a5 = u64 [sp + 0x10]
 26563: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 26568: 64 7a                    a3 = a0
 26570: 97 97 0d                 a0 = a2 << 0xd
 26573: d3 97 07                 a0 = a0 ^ a2
 26576: 98 79 07                 a2 = a0 >> 0x7
 26579: d3 97 07                 a0 = a0 ^ a2
 26582: 97 79 11                 a2 = a0 << 0x11
 26585: d3 97 07                 a0 = a0 ^ a2
 26588: 3e 07 e0 00 03           u64 [0x300e0] = a0
 26593: 64 62                    t0 = s1
 26595: 95 68 ff                 a1 = s1 + 0xffffffffffffffff
 26598: ca c7 07                 a0 = a0 * a5
 26601: cd 87 0b                 a4 = a0 %u a1
 26604: 95 bb 01                 a4 = a4 + 0x1
 26607: 33 06 01                 s1 = 0x1
 26610: 64 a8                    a1 = a3
 26612: 64 b7                    a0 = a4
 26614: 28 0e                    jump @1970
      :                          @1968
 26616: 98 77 01                 a0 = a0 >> 0x1
 26619: ca 88 08                 a1 = a1 * a1
 26622: 52 07 06                 jump @1970 if a0 != 0
      :                          @1969
 26625: 28 71 2f                 jump @2441
      :                          @1970
 26628: 84 79 01                 a2 = a0 & 0x1
 26631: cd 58 08                 a1 = a1 %u s0
 26634: 51 09 ee                 jump @1968 if a2 == 0
      :                          @1971
 26637: ca 68 09                 a2 = a1 * s1
 26640: cd 59 06                 s1 = a2 %u s0
 26643: 28 e5                    jump @1968
      :                          @1972 [@dyn 209]
 26645: 33 07 08                 a0 = 0x8
 26648: 50 20 a4 01 19 b6        ra = 420, jump @629
      :                          @1973 [@dyn 210]
 26654: 64 75                    s0 = a0
 26656: 33 06 01                 s1 = 0x1
 26659: 7b 76                    u64 [a0] = s1
 26661: 33 07 18                 a0 = 0x18
 26664: 50 20 a6 01 09 b6        ra = 422, jump @629
      :                          @1974 [@dyn 211]
 26670: 64 7b                    a4 = a0
 26672: 7b 76                    u64 [a0] = s1
 26674: 49 1b 08 ff              u64 [a4 + 8] = 0xffffffffffffffff
 26678: 49 1b 10 ff              u64 [a4 + 16] = 0xffffffffffffffff
 26682: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 26687: 97 89 0d                 a2 = a1 << 0xd
 26690: d3 98 08                 a1 = a1 ^ a2
 26693: 98 89 07                 a2 = a1 >> 0x7
 26696: d3 98 08                 a1 = a1 ^ a2
 26699: 3a 09 60 00 03           a2 = u64 [0x30060]
 26704: 97 8a 11                 a3 = a1 << 0x11
 26707: d3 a8 08                 a1 = a1 ^ a3
 26710: ca 98 09                 a2 = a1 * a2
 26713: 3e 08 e0 00 03           u64 [0x300e0] = a1
 26718: 14 07 cd cc cc cc cc cc cc cc a0 = 0xcccccccccccccccd
 26728: d6 79 07                 a0 = a2 mulhu a0
 26731: 98 77 04                 a0 = a0 >> 0x4
 26734: 96 77 14                 a0 = a0 * 0x14
 26737: c9 79 06                 s1 = a2 - a0
 26740: 7b 16 b0 00              u64 [sp + 0xb0] = s1
 26744: 95 17 90 00              a0 = sp + 0x90
 26748: 7b 15 10                 u64 [sp + 0x10] = s0
 26751: 64 58                    a1 = s0
 26753: 7b 1b 08                 u64 [sp + 0x8] = a4
 26756: 64 b9                    a2 = a4
 26758: 64 6a                    a3 = s1
 26760: 33 00 a8 01              ra = 0x1a8
 26764: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 26767: 7b 10 30                 u64 [sp + 0x30] = ra
 26770: 7b 15 28                 u64 [sp + 0x28] = s0
 26773: 7b 16 20                 u64 [sp + 0x20] = s1
 26776: 64 90                    ra = a2
 26778: 7b 18 18                 u64 [sp + 0x18] = a1
 26781: 7b 17                    u64 [sp] = a0
 26783: 95 a9 01                 a2 = a3 + 0x1
 26786: 7b 19 08                 u64 [sp + 0x8] = a2
 26789: 97 99 03                 a2 = a2 << 0x3
 26792: 33 03 f0 02 03           t1 = 0x302f0
 26797: 33 02 00 00 01           t0 = 0x10000
 26802: c8 23 04                 t2 = t1 + t0
 26805: 28 a0 e7                 jump @1649
      :                          @1975 [@dyn 212]
 26808: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 26812: ac 86 06                 jump @1977 if s1 <u a1
      :                          @1976
 26815: 28 a9 35                 jump @2530
      :                          @1977
 26818: 82 17 98 00              a0 = u64 [sp + 0x98]
 26822: 97 66 03                 s1 = s1 << 0x3
 26825: 7b 17                    u64 [sp] = a0
 26827: c8 76 06                 s1 = s1 + a0
 26830: 95 17 b0 00              a0 = sp + 0xb0
 26834: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 26838: 33 07 28 03              a0 = 0x328
 26842: 7b 17 00 01              u64 [sp + 0x100] = a0
 26846: 7b 16 08 01              u64 [sp + 0x108] = s1
 26850: 33 07 80 03              a0 = 0x380
 26854: 7b 17 10 01              u64 [sp + 0x110] = a0
 26858: 33 07 60 06 01           a0 = 0x10660
 26863: 7b 17 50 01              u64 [sp + 0x150] = a0
 26867: 49 21 58 01 02           u64 [sp + 344] = 0x2
 26872: 49 21 70 01              u64 [sp + 368] = 0
 26876: 95 18 f8 00              a1 = sp + 0xf8
 26880: 7b 18 60 01              u64 [sp + 0x160] = a1
 26884: 49 21 68 01 02           u64 [sp + 360] = 0x2
 26889: 95 17 c8 00              a0 = sp + 0xc8
 26893: 95 18 50 01              a1 = sp + 0x150
 26897: 50 20 aa 01 6a b4        ra = 426, jump @611
      :                          @1978 [@dyn 213]
 26903: 82 16 d0 00              s1 = u64 [sp + 0xd0]
 26907: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 26911: 82 15 c8 00              s0 = u64 [sp + 0xc8]
 26915: 33 07 03                 a0 = 0x3
 26918: 33 08                    a1 = 0
 26920: 33 09                    a2 = 0
 26922: 64 6a                    a3 = s1
 26924: 33 00 ac 01              ra = 0x1ac
 26928: 0a 64                    ecalli 100 // 'log'
 26930: 01                       fallthrough
      :                          @1979 [@dyn 214]
 26931: 95 58 ff ff fe           a1 = s0 + 0xfffffffffffeffff
 26936: 53 38 00 00 ff 27        jump @1985 if a1 <u 4294901760
      :                          @1980
 26942: 33 07 f0 02 03           a0 = 0x302f0
 26947: 95 77 00 00 01           a0 = a0 + 0x10000
 26952: 01                       fallthrough
      :                          @1981
 26953: 82 78                    a1 = u64 [a0]
 26955: c9 87 09                 a2 = a0 - a1
 26958: ab 69 11                 jump @1985 if a2 != s1
      :                          @1982
 26961: c9 58 09                 a2 = a1 - s0
 26964: 01                       fallthrough
      :                          @1983
 26965: 82 7a                    a3 = u64 [a0]
 26967: ab 8a f2                 jump @1981 if a3 != a1
      :                          @1984
 26970: 7b 79                    u64 [a0] = a2
 26972: 33 0b                    a4 = 0
 26974: 01                       fallthrough
      :                          @1985
 26975: 82 17 90 00              a0 = u64 [sp + 0x90]
 26979: 82 16                    s1 = u64 [sp]
 26981: 51 07 2a                 jump @1992 if a0 == 0
      :                          @1986
 26984: 56 27 00 20 27           jump @1992 if a0 >u 8192
      :                          @1987
 26989: 97 77 03                 a0 = a0 << 0x3
 26992: 33 08 f0 02 03           a1 = 0x302f0
 26997: 95 88 00 00 01           a1 = a1 + 0x10000
 27002: 01                       fallthrough
      :                          @1988
 27003: 82 89                    a2 = u64 [a1]
 27005: c9 98 0a                 a3 = a1 - a2
 27008: ab 6a 0f                 jump @1992 if a3 != s1
      :                          @1989
 27011: c9 79 0a                 a3 = a2 - a0
 27014: 01                       fallthrough
      :                          @1990
 27015: 82 8b                    a4 = u64 [a1]
 27017: ab 9b f2                 jump @1988 if a4 != a2
      :                          @1991
 27020: 7b 8a                    u64 [a1] = a3
 27022: 01                       fallthrough
      :                          @1992
 27023: 33 07 f0 02 03           a0 = 0x302f0
 27028: 95 77 00 00 01           a0 = a0 + 0x10000
 27033: 82 1c 08                 a5 = u64 [sp + 0x8]
 27036: 01                       fallthrough
      :                          @1993
 27037: 82 78                    a1 = u64 [a0]
 27039: c9 87 09                 a2 = a0 - a1
 27042: ab c9 11                 jump @1997 if a2 != a5
      :                          @1994
 27045: 95 89 e8                 a2 = a1 + 0xffffffffffffffe8
 27048: 01                       fallthrough
      :                          @1995
 27049: 82 7a                    a3 = u64 [a0]
 27051: ab 8a f2                 jump @1993 if a3 != a1
      :                          @1996
 27054: 7b 79                    u64 [a0] = a2
 27056: 33 0b                    a4 = 0
 27058: 01                       fallthrough
      :                          @1997
 27059: 33 07 f0 02 03           a0 = 0x302f0
 27064: 95 77 00 00 01           a0 = a0 + 0x10000
 27069: 82 1c 10                 a5 = u64 [sp + 0x10]
 27072: 01                       fallthrough
      :                          @1998
 27073: 82 78                    a1 = u64 [a0]
 27075: c9 87 09                 a2 = a0 - a1
 27078: aa c9 06                 jump @2000 if a2 == a5
      :                          @1999
 27081: 28 84 34                 jump @2527
      :                          @2000
 27084: 95 89 f8                 a2 = a1 + 0xfffffffffffffff8
 27087: 01                       fallthrough
      :                          @2001
 27088: 82 7a                    a3 = u64 [a0]
 27090: ab 8a ef                 jump @1998 if a3 != a1
      :                          @2002
 27093: 7b 79                    u64 [a0] = a2
 27095: 33 0b                    a4 = 0
 27097: 01                       fallthrough
      :                          @2003
 27098: ab 8a e7                 jump @1998 if a3 != a1
      :                          @2004
 27101: 28 70 34                 jump @2527
      :                          @2005 [@dyn 215]
 27104: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27109: 3a 07 60 00 03           a0 = u64 [0x30060]
 27114: 97 9a 0d                 a3 = a2 << 0xd
 27117: d3 a9 09                 a2 = a2 ^ a3
 27120: 98 9a 07                 a3 = a2 >> 0x7
 27123: d3 a9 09                 a2 = a2 ^ a3
 27126: 97 9a 11                 a3 = a2 << 0x11
 27129: d3 a9 09                 a2 = a2 ^ a3
 27132: ca 79 0a                 a3 = a2 * a0
 27135: 3a 0b 68 00 03           a4 = u64 [0x30068]
 27140: 3e 09 e0 00 03           u64 [0x300e0] = a2
 27145: 98 a9 03                 a2 = a3 >> 0x3
 27148: d6 b9 09                 a2 = a2 mulhu a4
 27151: 98 99 04                 a2 = a2 >> 0x4
 27154: 96 99 e8 03              a2 = a2 * 0x3e8
 27158: c9 9a 0a                 a3 = a3 - a2
 27161: 86 a9 01                 a2 = a3 | 0x1
 27164: 95 99 02                 a2 = a2 + 0x2
 27167: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 27171: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 27176: 97 9a 0d                 a3 = a2 << 0xd
 27179: d3 a9 09                 a2 = a2 ^ a3
 27182: 98 9a 07                 a3 = a2 >> 0x7
 27185: d3 a9 09                 a2 = a2 ^ a3
 27188: 97 9a 11                 a3 = a2 << 0x11
 27191: d3 a9 09                 a2 = a2 ^ a3
 27194: 3e 09 e0 00 03           u64 [0x300e0] = a2
 27199: 82 18 b0 00              a1 = u64 [sp + 0xb0]
 27203: 52 08 06                 jump @2007 if a1 != 0
      :                          @2006
 27206: 28 21 34                 jump @2529
      :                          @2007
 27209: ca 79 07                 a0 = a2 * a0
 27212: cd 87 07                 a0 = a0 %u a1
 27215: 7b 17 90 00              u64 [sp + 0x90] = a0
 27219: 50 20 b0 01 cf ce        ra = 432, jump @1148
      :                          @2008 [@dyn 216]
 27225: 7a 17 68 02              u32 [sp + 0x268] = a0
 27229: 95 17 90 00              a0 = sp + 0x90
 27233: 7b 17 50 01              u64 [sp + 0x150] = a0
 27237: 33 07 80 03              a0 = 0x380
 27241: 7b 17 58 01              u64 [sp + 0x158] = a0
 27245: 95 17 b0 00              a0 = sp + 0xb0
 27249: 7b 17 60 01              u64 [sp + 0x160] = a0
 27253: 33 07 28 03              a0 = 0x328
 27257: 7b 17 68 01              u64 [sp + 0x168] = a0
 27261: 95 17 68 02              a0 = sp + 0x268
 27265: 7b 17 70 01              u64 [sp + 0x170] = a0
 27269: 33 07 7e 03              a0 = 0x37e
 27273: 7b 17 78 01              u64 [sp + 0x178] = a0
 27277: 33 07 98 06 01           a0 = 0x10698
 27282: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 27286: 49 21 00 01 03           u64 [sp + 256] = 0x3
 27291: 49 21 18 01              u64 [sp + 280] = 0
 27295: 95 18 50 01              a1 = sp + 0x150
 27299: 7b 18 08 01              u64 [sp + 0x108] = a1
 27303: 49 21 10 01 03           u64 [sp + 272] = 0x3
 27308: 95 17 c8 00              a0 = sp + 0xc8
 27312: 95 18 f8 00              a1 = sp + 0xf8
 27316: 50 20 b2 01 c7 b2        ra = 434, jump @611
      :                          @2009 [@dyn 217]
 27322: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 27326: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27330: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 27334: 33 07 03                 a0 = 0x3
 27337: 33 08                    a1 = 0
 27339: 33 09                    a2 = 0
 27341: 64 5a                    a3 = s0
 27343: 33 00 b4 01              ra = 0x1b4
 27347: 0a 64                    ecalli 100 // 'log'
 27349: 01                       fallthrough
      :                          @2010 [@dyn 218]
 27350: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 27355: 55 38 00 00 ff 09        jump @2012 if a1 >=u 4294901760
      :                          @2011
 27361: 28 6c 33                 jump @2527
      :                          @2012
 27364: 33 07 f0 02 03           a0 = 0x302f0
 27369: 95 77 00 00 01           a0 = a0 + 0x10000
 27374: 01                       fallthrough
      :                          @2013
 27375: 82 78                    a1 = u64 [a0]
 27377: c9 87 09                 a2 = a0 - a1
 27380: aa 59 06                 jump @2015 if a2 == s0
      :                          @2014
 27383: 28 56 33                 jump @2527
      :                          @2015
 27386: c9 68 09                 a2 = a1 - s1
 27389: 01                       fallthrough
      :                          @2016
 27390: 82 7a                    a3 = u64 [a0]
 27392: ab 8a ef                 jump @2013 if a3 != a1
      :                          @2017
 27395: 7b 79                    u64 [a0] = a2
 27397: 33 0b                    a4 = 0
 27399: 01                       fallthrough
      :                          @2018
 27400: ab 8a e7                 jump @2013 if a3 != a1
      :                          @2019
 27403: 28 42 33                 jump @2527
      :                          @2020 [@dyn 219]
 27406: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 27411: 97 89 0d                 a2 = a1 << 0xd
 27414: d3 98 08                 a1 = a1 ^ a2
 27417: 98 89 07                 a2 = a1 >> 0x7
 27420: d3 98 08                 a1 = a1 ^ a2
 27423: 97 89 11                 a2 = a1 << 0x11
 27426: d3 98 08                 a1 = a1 ^ a2
 27429: 3a 09 60 00 03           a2 = u64 [0x30060]
 27434: 3a 0a c0 00 03           a3 = u64 [0x300c0]
 27439: 3e 08 e0 00 03           u64 [0x300e0] = a1
 27444: ca 98 07                 a0 = a1 * a2
 27447: 98 78 01                 a1 = a0 >> 0x1
 27450: d6 a8 08                 a1 = a1 mulhu a3
 27453: 98 88 04                 a1 = a1 >> 0x4
 27456: 96 88 32                 a1 = a1 * 0x32
 27459: c9 87 07                 a0 = a0 - a1
 27462: 95 77 02                 a0 = a0 + 0x2
 27465: 7b 17 90 00              u64 [sp + 0x90] = a0
 27469: 50 20 b8 01 45 cf        ra = 440, jump @1177
      :                          @2021 [@dyn 220]
 27475: 78 17 b0 00              u8 [sp + 0xb0] = a0
 27479: 95 17 90 00              a0 = sp + 0x90
 27483: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 27487: 33 07 28 03              a0 = 0x328
 27491: 7b 17 00 01              u64 [sp + 0x100] = a0
 27495: 95 17 b0 00              a0 = sp + 0xb0
 27499: 7b 17 08 01              u64 [sp + 0x108] = a0
 27503: 33 07 74 03              a0 = 0x374
 27507: 7b 17 10 01              u64 [sp + 0x110] = a0
 27511: 33 07 e8 06 01           a0 = 0x106e8
 27516: 7b 17 50 01              u64 [sp + 0x150] = a0
 27520: 49 21 58 01 02           u64 [sp + 344] = 0x2
 27525: 49 21 70 01              u64 [sp + 368] = 0
 27529: 95 18 f8 00              a1 = sp + 0xf8
 27533: 7b 18 60 01              u64 [sp + 0x160] = a1
 27537: 49 21 68 01 02           u64 [sp + 360] = 0x2
 27542: 95 17 c8 00              a0 = sp + 0xc8
 27546: 95 18 50 01              a1 = sp + 0x150
 27550: 50 20 ba 01 dd b1        ra = 442, jump @611
      :                          @2022 [@dyn 221]
 27556: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 27560: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27564: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 27568: 33 07 03                 a0 = 0x3
 27571: 33 08                    a1 = 0
 27573: 33 09                    a2 = 0
 27575: 64 5a                    a3 = s0
 27577: 33 00 bc 01              ra = 0x1bc
 27581: 0a 64                    ecalli 100 // 'log'
 27583: 01                       fallthrough
      :                          @2023 [@dyn 222]
 27584: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 27589: 55 38 00 00 ff 09        jump @2025 if a1 >=u 4294901760
      :                          @2024
 27595: 28 82 32                 jump @2527
      :                          @2025
 27598: 33 07 f0 02 03           a0 = 0x302f0
 27603: 95 77 00 00 01           a0 = a0 + 0x10000
 27608: 01                       fallthrough
      :                          @2026
 27609: 82 78                    a1 = u64 [a0]
 27611: c9 87 09                 a2 = a0 - a1
 27614: aa 59 06                 jump @2028 if a2 == s0
      :                          @2027
 27617: 28 6c 32                 jump @2527
      :                          @2028
 27620: c9 68 09                 a2 = a1 - s1
 27623: 01                       fallthrough
      :                          @2029
 27624: 82 7a                    a3 = u64 [a0]
 27626: ab 8a ef                 jump @2026 if a3 != a1
      :                          @2030
 27629: 7b 79                    u64 [a0] = a2
 27631: 33 0b                    a4 = 0
 27633: 01                       fallthrough
      :                          @2031
 27634: ab 8a e7                 jump @2026 if a3 != a1
      :                          @2032
 27637: 28 58 32                 jump @2527
      :                          @2033 [@dyn 223]
 27640: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 27645: 97 89 0d                 a2 = a1 << 0xd
 27648: d3 98 08                 a1 = a1 ^ a2
 27651: 98 89 07                 a2 = a1 >> 0x7
 27654: 3a 0a 60 00 03           a3 = u64 [0x30060]
 27659: d3 98 08                 a1 = a1 ^ a2
 27662: 97 89 11                 a2 = a1 << 0x11
 27665: d3 98 08                 a1 = a1 ^ a2
 27668: ca a8 09                 a2 = a1 * a3
 27671: 3e 08 e0 00 03           u64 [0x300e0] = a1
 27676: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 27686: d6 89 08                 a1 = a2 mulhu a1
 27689: 98 88 04                 a1 = a1 >> 0x4
 27692: 96 88 14                 a1 = a1 * 0x14
 27695: c9 89 09                 a2 = a2 - a1
 27698: 7b 19 88 00              u64 [sp + 0x88] = a2
 27702: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 27707: 97 89 0d                 a2 = a1 << 0xd
 27710: d3 98 08                 a1 = a1 ^ a2
 27713: 98 89 07                 a2 = a1 >> 0x7
 27716: d3 98 08                 a1 = a1 ^ a2
 27719: 97 89 11                 a2 = a1 << 0x11
 27722: d3 98 08                 a1 = a1 ^ a2
 27725: ca a8 09                 a2 = a1 * a3
 27728: 3a 0a 98 00 03           a3 = u64 [0x30098]
 27733: 3e 08 e0 00 03           u64 [0x300e0] = a1
 27738: 98 97 02                 a0 = a2 >> 0x2
 27741: d6 a7 07                 a0 = a0 mulhu a3
 27744: 98 77 02                 a0 = a0 >> 0x2
 27747: 96 78 64                 a1 = a0 * 0x64
 27750: 82 17 88 00              a0 = u64 [sp + 0x88]
 27754: c9 89 09                 a2 = a2 - a1
 27757: 95 99 01                 a2 = a2 + 0x1
 27760: 7b 19 68 02              u64 [sp + 0x268] = a2
 27764: 33 08 01                 a1 = 0x1
 27767: 50 20 c0 01 4f ce        ra = 448, jump @1184
      :                          @2034 [@dyn 224]
 27773: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 27777: 7b 18 90 00              u64 [sp + 0x90] = a1
 27781: 95 17 88 00              a0 = sp + 0x88
 27785: 7b 17 50 01              u64 [sp + 0x150] = a0
 27789: 33 08 28 03              a1 = 0x328
 27793: 7b 18 58 01              u64 [sp + 0x158] = a1
 27797: 7b 17 60 01              u64 [sp + 0x160] = a0
 27801: 7b 18 68 01              u64 [sp + 0x168] = a1
 27805: 95 17 68 02              a0 = sp + 0x268
 27809: 7b 17 70 01              u64 [sp + 0x170] = a0
 27813: 33 07 80 03              a0 = 0x380
 27817: 7b 17 78 01              u64 [sp + 0x178] = a0
 27821: 95 18 b0 00              a1 = sp + 0xb0
 27825: 7b 18 80 01              u64 [sp + 0x180] = a1
 27829: 7b 17 88 01              u64 [sp + 0x188] = a0
 27833: 95 18 90 00              a1 = sp + 0x90
 27837: 7b 18 90 01              u64 [sp + 0x190] = a1
 27841: 7b 17 98 01              u64 [sp + 0x198] = a0
 27845: 33 07 28 07 01           a0 = 0x10728
 27850: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 27854: 49 21 00 01 06           u64 [sp + 256] = 0x6
 27859: 49 21 18 01              u64 [sp + 280] = 0
 27863: 95 17 50 01              a0 = sp + 0x150
 27867: 7b 17 08 01              u64 [sp + 0x108] = a0
 27871: 49 21 10 01 05           u64 [sp + 272] = 0x5
 27876: 95 17 c8 00              a0 = sp + 0xc8
 27880: 95 18 f8 00              a1 = sp + 0xf8
 27884: 50 20 c2 01 8f b0        ra = 450, jump @611
      :                          @2035 [@dyn 225]
 27890: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 27894: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 27898: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 27902: 33 07 03                 a0 = 0x3
 27905: 33 08                    a1 = 0
 27907: 33 09                    a2 = 0
 27909: 64 5a                    a3 = s0
 27911: 33 00 c4 01              ra = 0x1c4
 27915: 0a 64                    ecalli 100 // 'log'
 27917: 01                       fallthrough
      :                          @2036 [@dyn 226]
 27918: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 27923: 55 38 00 00 ff 09        jump @2038 if a1 >=u 4294901760
      :                          @2037
 27929: 28 34 31                 jump @2527
      :                          @2038
 27932: 33 07 f0 02 03           a0 = 0x302f0
 27937: 95 77 00 00 01           a0 = a0 + 0x10000
 27942: 01                       fallthrough
      :                          @2039
 27943: 82 78                    a1 = u64 [a0]
 27945: c9 87 09                 a2 = a0 - a1
 27948: aa 59 06                 jump @2041 if a2 == s0
      :                          @2040
 27951: 28 1e 31                 jump @2527
      :                          @2041
 27954: c9 68 09                 a2 = a1 - s1
 27957: 01                       fallthrough
      :                          @2042
 27958: 82 7a                    a3 = u64 [a0]
 27960: ab 8a ef                 jump @2039 if a3 != a1
      :                          @2043
 27963: 7b 79                    u64 [a0] = a2
 27965: 33 0b                    a4 = 0
 27967: 01                       fallthrough
      :                          @2044
 27968: ab 8a e7                 jump @2039 if a3 != a1
      :                          @2045
 27971: 28 0a 31                 jump @2527
      :                          @2046 [@dyn 227]
 27974: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 27979: 97 89 0d                 a2 = a1 << 0xd
 27982: d3 98 08                 a1 = a1 ^ a2
 27985: 98 89 07                 a2 = a1 >> 0x7
 27988: d3 98 08                 a1 = a1 ^ a2
 27991: 97 89 11                 a2 = a1 << 0x11
 27994: d3 98 08                 a1 = a1 ^ a2
 27997: 3a 09 60 00 03           a2 = u64 [0x30060]
 28002: 3a 0a b8 00 03           a3 = u64 [0x300b8]
 28007: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28012: ca 98 07                 a0 = a1 * a2
 28015: d6 a7 08                 a1 = a0 mulhu a3
 28018: 98 88 0b                 a1 = a1 >> 0xb
 28021: 96 88 10 27              a1 = a1 * 0x2710
 28025: c9 87 07                 a0 = a0 - a1
 28028: 86 77 01                 a0 = a0 | 0x1
 28031: 95 77 02                 a0 = a0 + 0x2
 28034: 7b 17 90 00              u64 [sp + 0x90] = a0
 28038: 50 20 c8 01 d1 cd        ra = 456, jump @1191
      :                          @2047 [@dyn 228]
 28044: 78 17 b0 00              u8 [sp + 0xb0] = a0
 28048: 95 17 90 00              a0 = sp + 0x90
 28052: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28056: 33 07 28 03              a0 = 0x328
 28060: 7b 17 00 01              u64 [sp + 0x100] = a0
 28064: 95 17 b0 00              a0 = sp + 0xb0
 28068: 7b 17 08 01              u64 [sp + 0x108] = a0
 28072: 33 07 74 03              a0 = 0x374
 28076: 7b 17 10 01              u64 [sp + 0x110] = a0
 28080: 33 07 98 07 01           a0 = 0x10798
 28085: 7b 17 50 01              u64 [sp + 0x150] = a0
 28089: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28094: 49 21 70 01              u64 [sp + 368] = 0
 28098: 95 18 f8 00              a1 = sp + 0xf8
 28102: 7b 18 60 01              u64 [sp + 0x160] = a1
 28106: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28111: 95 17 c8 00              a0 = sp + 0xc8
 28115: 95 18 50 01              a1 = sp + 0x150
 28119: 50 20 ca 01 a4 af        ra = 458, jump @611
      :                          @2048 [@dyn 229]
 28125: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28129: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28133: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28137: 33 07 03                 a0 = 0x3
 28140: 33 08                    a1 = 0
 28142: 33 09                    a2 = 0
 28144: 64 5a                    a3 = s0
 28146: 33 00 cc 01              ra = 0x1cc
 28150: 0a 64                    ecalli 100 // 'log'
 28152: 01                       fallthrough
      :                          @2049 [@dyn 230]
 28153: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 28158: 55 38 00 00 ff 09        jump @2051 if a1 >=u 4294901760
      :                          @2050
 28164: 28 49 30                 jump @2527
      :                          @2051
 28167: 33 07 f0 02 03           a0 = 0x302f0
 28172: 95 77 00 00 01           a0 = a0 + 0x10000
 28177: 01                       fallthrough
      :                          @2052
 28178: 82 78                    a1 = u64 [a0]
 28180: c9 87 09                 a2 = a0 - a1
 28183: aa 59 06                 jump @2054 if a2 == s0
      :                          @2053
 28186: 28 33 30                 jump @2527
      :                          @2054
 28189: c9 68 09                 a2 = a1 - s1
 28192: 01                       fallthrough
      :                          @2055
 28193: 82 7a                    a3 = u64 [a0]
 28195: ab 8a ef                 jump @2052 if a3 != a1
      :                          @2056
 28198: 7b 79                    u64 [a0] = a2
 28200: 33 0b                    a4 = 0
 28202: 01                       fallthrough
      :                          @2057
 28203: ab 8a e7                 jump @2052 if a3 != a1
      :                          @2058
 28206: 28 1f 30                 jump @2527
      :                          @2059 [@dyn 231]
 28209: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28214: 97 89 0d                 a2 = a1 << 0xd
 28217: d3 98 08                 a1 = a1 ^ a2
 28220: 98 89 07                 a2 = a1 >> 0x7
 28223: d3 98 08                 a1 = a1 ^ a2
 28226: 97 89 11                 a2 = a1 << 0x11
 28229: d3 98 08                 a1 = a1 ^ a2
 28232: 3a 09 60 00 03           a2 = u64 [0x30060]
 28237: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 28242: 3e 08 e0 00 03           u64 [0x300e0] = a1
 28247: ca 98 07                 a0 = a1 * a2
 28250: d6 a7 08                 a1 = a0 mulhu a3
 28253: 98 88 12                 a1 = a1 >> 0x12
 28256: 96 88 40 42 0f           a1 = a1 * 0xf4240
 28261: c9 87 07                 a0 = a0 - a1
 28264: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 28268: 50 20 d0 01 6a d0        ra = 464, jump @1269
      :                          @2060 [@dyn 232]
 28274: 7b 17 90 00              u64 [sp + 0x90] = a0
 28278: 95 17 b0 00              a0 = sp + 0xb0
 28282: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 28286: 33 07 28 03              a0 = 0x328
 28290: 7b 17 00 01              u64 [sp + 0x100] = a0
 28294: 95 18 90 00              a1 = sp + 0x90
 28298: 7b 18 08 01              u64 [sp + 0x108] = a1
 28302: 7b 17 10 01              u64 [sp + 0x110] = a0
 28306: 33 07 c8 07 01           a0 = 0x107c8
 28311: 7b 17 50 01              u64 [sp + 0x150] = a0
 28315: 49 21 58 01 02           u64 [sp + 344] = 0x2
 28320: 49 21 70 01              u64 [sp + 368] = 0
 28324: 95 18 f8 00              a1 = sp + 0xf8
 28328: 7b 18 60 01              u64 [sp + 0x160] = a1
 28332: 49 21 68 01 02           u64 [sp + 360] = 0x2
 28337: 95 17 c8 00              a0 = sp + 0xc8
 28341: 95 18 50 01              a1 = sp + 0x150
 28345: 50 20 d2 01 c2 ae        ra = 466, jump @611
      :                          @2061 [@dyn 233]
 28351: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 28355: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 28359: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 28363: 33 07 03                 a0 = 0x3
 28366: 33 08                    a1 = 0
 28368: 33 09                    a2 = 0
 28370: 64 5a                    a3 = s0
 28372: 33 00 d4 01              ra = 0x1d4
 28376: 0a 64                    ecalli 100 // 'log'
 28378: 01                       fallthrough
      :                          @2062 [@dyn 234]
 28379: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 28384: 55 38 00 00 ff 09        jump @2064 if a1 >=u 4294901760
      :                          @2063
 28390: 28 67 2f                 jump @2527
      :                          @2064
 28393: 33 07 f0 02 03           a0 = 0x302f0
 28398: 95 77 00 00 01           a0 = a0 + 0x10000
 28403: 01                       fallthrough
      :                          @2065
 28404: 82 78                    a1 = u64 [a0]
 28406: c9 87 09                 a2 = a0 - a1
 28409: aa 59 06                 jump @2067 if a2 == s0
      :                          @2066
 28412: 28 51 2f                 jump @2527
      :                          @2067
 28415: c9 68 09                 a2 = a1 - s1
 28418: 01                       fallthrough
      :                          @2068
 28419: 82 7a                    a3 = u64 [a0]
 28421: ab 8a ef                 jump @2065 if a3 != a1
      :                          @2069
 28424: 7b 79                    u64 [a0] = a2
 28426: 33 0b                    a4 = 0
 28428: 01                       fallthrough
      :                          @2070
 28429: ab 8a e7                 jump @2065 if a3 != a1
      :                          @2071
 28432: 28 3d 2f                 jump @2527
      :                          @2072 [@dyn 235]
 28435: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 28440: 97 89 0d                 a2 = a1 << 0xd
 28443: d3 98 08                 a1 = a1 ^ a2
 28446: 98 89 07                 a2 = a1 >> 0x7
 28449: d3 89 09                 a2 = a2 ^ a1
 28452: 97 9a 11                 a3 = a2 << 0x11
 28455: 3a 08 60 00 03           a1 = u64 [0x30060]
 28460: d3 9a 0a                 a3 = a3 ^ a2
 28463: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 28468: ca 8a 0b                 a4 = a3 * a1
 28471: 3e 0a e0 00 03           u64 [0x300e0] = a3
 28476: d6 9b 0a                 a3 = a4 mulhu a2
 28479: c9 ab 0c                 a5 = a4 - a3
 28482: 98 cc 01                 a5 = a5 >> 0x1
 28485: c8 ca 0a                 a3 = a3 + a5
 28488: 98 ac 06                 a5 = a3 >> 0x6
 28491: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 28496: 96 cc 65                 a5 = a5 * 0x65
 28499: c9 cb 0b                 a4 = a4 - a5
 28502: 7b 1b 10                 u64 [sp + 0x10] = a4
 28505: 97 6b 0d                 a4 = s1 << 0xd
 28508: d3 6b 0b                 a4 = a4 ^ s1
 28511: 98 bc 07                 a5 = a4 >> 0x7
 28514: d3 cb 0b                 a4 = a4 ^ a5
 28517: 97 bc 11                 a5 = a4 << 0x11
 28520: d3 cb 0b                 a4 = a4 ^ a5
 28523: ca 8b 06                 s1 = a4 * a1
 28526: 3e 0b e0 00 03           u64 [0x300e0] = a4
 28531: d6 96 0b                 a4 = s1 mulhu a2
 28534: c9 b6 0c                 a5 = s1 - a4
 28537: 98 cc 01                 a5 = a5 >> 0x1
 28540: c8 cb 0b                 a4 = a4 + a5
 28543: 98 bb 06                 a4 = a4 >> 0x6
 28546: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 28551: 96 bb 65                 a4 = a4 * 0x65
 28554: c9 b6 06                 s1 = s1 - a4
 28557: 7b 16 08                 u64 [sp + 0x8] = s1
 28560: 97 cb 0d                 a4 = a5 << 0xd
 28563: d3 cb 0b                 a4 = a4 ^ a5
 28566: 98 bc 07                 a5 = a4 >> 0x7
 28569: d3 cb 0b                 a4 = a4 ^ a5
 28572: 97 bc 11                 a5 = a4 << 0x11
 28575: d3 cb 0b                 a4 = a4 ^ a5
 28578: ca 8b 06                 s1 = a4 * a1
 28581: 3e 0b e0 00 03           u64 [0x300e0] = a4
 28586: d6 96 0b                 a4 = s1 mulhu a2
 28589: c9 b6 0c                 a5 = s1 - a4
 28592: 98 cc 01                 a5 = a5 >> 0x1
 28595: c8 cb 0b                 a4 = a4 + a5
 28598: 98 bb 06                 a4 = a4 >> 0x6
 28601: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 28606: 96 bb 65                 a4 = a4 * 0x65
 28609: c9 b6 04                 t2 = s1 - a4
 28612: 97 cb 0d                 a4 = a5 << 0xd
 28615: d3 cb 0b                 a4 = a4 ^ a5
 28618: 98 bc 07                 a5 = a4 >> 0x7
 28621: d3 cb 0b                 a4 = a4 ^ a5
 28624: 97 bc 11                 a5 = a4 << 0x11
 28627: d3 cb 0b                 a4 = a4 ^ a5
 28630: ca 8b 0c                 a5 = a4 * a1
 28633: 3e 0b e0 00 03           u64 [0x300e0] = a4
 28638: d6 9c 0b                 a4 = a5 mulhu a2
 28641: c9 bc 05                 s0 = a5 - a4
 28644: 98 55 01                 s0 = s0 >> 0x1
 28647: c8 5b 0b                 a4 = a4 + s0
 28650: 98 bb 06                 a4 = a4 >> 0x6
 28653: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 28658: 96 bb 65                 a4 = a4 * 0x65
 28661: c9 bc 00                 ra = a5 - a4
 28664: 97 6b 0d                 a4 = s1 << 0xd
 28667: d3 6b 0b                 a4 = a4 ^ s1
 28670: 98 bc 07                 a5 = a4 >> 0x7
 28673: d3 cb 0b                 a4 = a4 ^ a5
 28676: 97 bc 11                 a5 = a4 << 0x11
 28679: d3 cb 0b                 a4 = a4 ^ a5
 28682: ca 8b 0c                 a5 = a4 * a1
 28685: 3e 0b e0 00 03           u64 [0x300e0] = a4
 28690: d6 9c 0b                 a4 = a5 mulhu a2
 28693: c9 bc 06                 s1 = a5 - a4
 28696: 98 66 01                 s1 = s1 >> 0x1
 28699: c8 6b 0b                 a4 = a4 + s1
 28702: 98 bb 06                 a4 = a4 >> 0x6
 28705: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 28710: 96 bb 65                 a4 = a4 * 0x65
 28713: c9 bc 0b                 a4 = a5 - a4
 28716: 97 6c 0d                 a5 = s1 << 0xd
 28719: d3 6c 0c                 a5 = a5 ^ s1
 28722: 98 c6 07                 s1 = a5 >> 0x7
 28725: d3 6c 0c                 a5 = a5 ^ s1
 28728: 97 c6 11                 s1 = a5 << 0x11
 28731: d3 6c 0c                 a5 = a5 ^ s1
 28734: ca 8c 05                 s0 = a5 * a1
 28737: 3e 0c e0 00 03           u64 [0x300e0] = a5
 28742: d6 95 0c                 a5 = s0 mulhu a2
 28745: c9 c5 06                 s1 = s0 - a5
 28748: 98 66 01                 s1 = s1 >> 0x1
 28751: c8 6c 0c                 a5 = a5 + s1
 28754: 98 cc 06                 a5 = a5 >> 0x6
 28757: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 28762: 96 cc 65                 a5 = a5 * 0x65
 28765: c9 c5 0c                 a5 = s0 - a5
 28768: 97 65 0d                 s0 = s1 << 0xd
 28771: d3 65 05                 s0 = s0 ^ s1
 28774: 98 56 07                 s1 = s0 >> 0x7
 28777: d3 65 05                 s0 = s0 ^ s1
 28780: 97 56 11                 s1 = s0 << 0x11
 28783: d3 65 05                 s0 = s0 ^ s1
 28786: ca 85 07                 a0 = s0 * a1
 28789: 3e 05 e0 00 03           u64 [0x300e0] = s0
 28794: d6 97 05                 s0 = a0 mulhu a2
 28797: c9 57 06                 s1 = a0 - s0
 28800: 98 66 01                 s1 = s1 >> 0x1
 28803: c8 65 05                 s0 = s0 + s1
 28806: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 28811: 98 55 06                 s0 = s0 >> 0x6
 28814: 96 55 65                 s0 = s0 * 0x65
 28817: c9 57 0a                 a3 = a0 - s0
 28820: 97 65 0d                 s0 = s1 << 0xd
 28823: d3 65 05                 s0 = s0 ^ s1
 28826: 98 56 07                 s1 = s0 >> 0x7
 28829: d3 65 05                 s0 = s0 ^ s1
 28832: 97 56 11                 s1 = s0 << 0x11
 28835: d3 65 05                 s0 = s0 ^ s1
 28838: 3e 05 e0 00 03           u64 [0x300e0] = s0
 28843: ca 85 07                 a0 = s0 * a1
 28846: d6 97 06                 s1 = a0 mulhu a2
 28849: c9 67 05                 s0 = a0 - s1
 28852: 98 55 01                 s0 = s0 >> 0x1
 28855: c8 65 05                 s0 = s0 + s1
 28858: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 28863: 98 55 06                 s0 = s0 >> 0x6
 28866: 96 55 65                 s0 = s0 * 0x65
 28869: c9 57 07                 a0 = a0 - s0
 28872: 97 65 0d                 s0 = s1 << 0xd
 28875: d3 65 05                 s0 = s0 ^ s1
 28878: 98 56 07                 s1 = s0 >> 0x7
 28881: d3 65 05                 s0 = s0 ^ s1
 28884: 97 56 11                 s1 = s0 << 0x11
 28887: d3 65 05                 s0 = s0 ^ s1
 28890: 3e 05 e0 00 03           u64 [0x300e0] = s0
 28895: ca 85 06                 s1 = s0 * a1
 28898: d6 96 09                 a2 = s1 mulhu a2
 28901: c9 96 08                 a1 = s1 - a2
 28904: 98 88 01                 a1 = a1 >> 0x1
 28907: c8 98 08                 a1 = a1 + a2
 28910: 98 88 06                 a1 = a1 >> 0x6
 28913: 96 88 65                 a1 = a1 * 0x65
 28916: c9 86 06                 s1 = s1 - a1
 28919: 82 18 10                 a1 = u64 [sp + 0x10]
 28922: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
 28925: 7b 18 50 01              u64 [sp + 0x150] = a1
 28929: 82 18 08                 a1 = u64 [sp + 0x8]
 28932: 95 88 ce                 a1 = a1 + 0xffffffffffffffce
 28935: 7b 18 58 01              u64 [sp + 0x158] = a1
 28939: 95 48 ce                 a1 = t2 + 0xffffffffffffffce
 28942: 7b 18 60 01              u64 [sp + 0x160] = a1
 28946: 95 08 ce                 a1 = ra + 0xffffffffffffffce
 28949: 7b 18 68 01              u64 [sp + 0x168] = a1
 28953: 95 b8 ce                 a1 = a4 + 0xffffffffffffffce
 28956: 7b 18 70 01              u64 [sp + 0x170] = a1
 28960: 95 c8 ce                 a1 = a5 + 0xffffffffffffffce
 28963: 7b 18 78 01              u64 [sp + 0x178] = a1
 28967: 95 a8 ce                 a1 = a3 + 0xffffffffffffffce
 28970: 7b 18 80 01              u64 [sp + 0x180] = a1
 28974: 95 77 ce                 a0 = a0 + 0xffffffffffffffce
 28977: 7b 17 88 01              u64 [sp + 0x188] = a0
 28981: 95 67 ce                 a0 = s1 + 0xffffffffffffffce
 28984: 7b 17 90 01              u64 [sp + 0x190] = a0
 28988: 95 17 50 01              a0 = sp + 0x150
 28992: 28 b6 cd                 jump @1276
      :                          @2073
 28995: 7b 17 90 00              u64 [sp + 0x90] = a0
 28999: 95 17 90 00              a0 = sp + 0x90
 29003: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 29007: 33 07 80 03              a0 = 0x380
 29011: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 29015: 33 07 00 08 01           a0 = 0x10800
 29020: 7b 17 50 01              u64 [sp + 0x150] = a0
 29024: 49 21 58 01 01           u64 [sp + 344] = 0x1
 29029: 49 21 70 01              u64 [sp + 368] = 0
 29033: 95 18 c8 00              a1 = sp + 0xc8
 29037: 7b 18 60 01              u64 [sp + 0x160] = a1
 29041: 49 21 68 01 01           u64 [sp + 360] = 0x1
 29046: 95 17 f8 00              a0 = sp + 0xf8
 29050: 95 18 50 01              a1 = sp + 0x150
 29054: 50 20 d8 01 fd ab        ra = 472, jump @611
      :                          @2074 [@dyn 236]
 29060: 82 15 00 01              s0 = u64 [sp + 0x100]
 29064: 82 1b 08 01              a4 = u64 [sp + 0x108]
 29068: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 29072: 33 07 03                 a0 = 0x3
 29075: 33 08                    a1 = 0
 29077: 33 09                    a2 = 0
 29079: 64 5a                    a3 = s0
 29081: 33 00 da 01              ra = 0x1da
 29085: 0a 64                    ecalli 100 // 'log'
 29087: 01                       fallthrough
      :                          @2075 [@dyn 237]
 29088: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 29093: 55 38 00 00 ff 09        jump @2077 if a1 >=u 4294901760
      :                          @2076
 29099: 28 a2 2c                 jump @2527
      :                          @2077
 29102: 33 07 f0 02 03           a0 = 0x302f0
 29107: 95 77 00 00 01           a0 = a0 + 0x10000
 29112: 01                       fallthrough
      :                          @2078
 29113: 82 78                    a1 = u64 [a0]
 29115: c9 87 09                 a2 = a0 - a1
 29118: aa 59 06                 jump @2080 if a2 == s0
      :                          @2079
 29121: 28 8c 2c                 jump @2527
      :                          @2080
 29124: c9 68 09                 a2 = a1 - s1
 29127: 01                       fallthrough
      :                          @2081
 29128: 82 7a                    a3 = u64 [a0]
 29130: ab 8a ef                 jump @2078 if a3 != a1
      :                          @2082
 29133: 7b 79                    u64 [a0] = a2
 29135: 33 0b                    a4 = 0
 29137: 01                       fallthrough
      :                          @2083
 29138: ab 8a e7                 jump @2078 if a3 != a1
      :                          @2084
 29141: 28 78 2c                 jump @2527
      :                          @2085 [@dyn 238]
 29144: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 29149: 97 89 0d                 a2 = a1 << 0xd
 29152: d3 98 08                 a1 = a1 ^ a2
 29155: 98 89 07                 a2 = a1 >> 0x7
 29158: d3 89 09                 a2 = a2 ^ a1
 29161: 97 9a 11                 a3 = a2 << 0x11
 29164: 3a 08 60 00 03           a1 = u64 [0x30060]
 29169: d3 9a 0a                 a3 = a3 ^ a2
 29172: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 29177: ca 8a 0b                 a4 = a3 * a1
 29180: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29185: d6 9b 0a                 a3 = a4 mulhu a2
 29188: c9 ab 0c                 a5 = a4 - a3
 29191: 98 cc 01                 a5 = a5 >> 0x1
 29194: c8 ca 0a                 a3 = a3 + a5
 29197: 98 ac 06                 a5 = a3 >> 0x6
 29200: 33 03 65                 t1 = 0x65
 29203: ca 3c 0c                 a5 = a5 * t1
 29206: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29211: c9 cb 0b                 a4 = a4 - a5
 29214: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 29217: 97 6c 0d                 a5 = s1 << 0xd
 29220: d3 c6 06                 s1 = s1 ^ a5
 29223: 98 6c 07                 a5 = s1 >> 0x7
 29226: d3 c6 06                 s1 = s1 ^ a5
 29229: 97 6c 11                 a5 = s1 << 0x11
 29232: d3 6c 0c                 a5 = a5 ^ s1
 29235: ca 8c 05                 s0 = a5 * a1
 29238: 3e 0c e0 00 03           u64 [0x300e0] = a5
 29243: d6 95 0c                 a5 = s0 mulhu a2
 29246: c9 c5 06                 s1 = s0 - a5
 29249: 98 66 01                 s1 = s1 >> 0x1
 29252: c8 6c 0c                 a5 = a5 + s1
 29255: 98 cc 06                 a5 = a5 >> 0x6
 29258: ca 3c 0c                 a5 = a5 * t1
 29261: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 29266: c9 c5 05                 s0 = s0 - a5
 29269: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 29272: 97 b6 0d                 s1 = a4 << 0xd
 29275: d3 b6 06                 s1 = s1 ^ a4
 29278: 98 6b 07                 a4 = s1 >> 0x7
 29281: d3 b6 06                 s1 = s1 ^ a4
 29284: 97 6b 11                 a4 = s1 << 0x11
 29287: d3 6b 0b                 a4 = a4 ^ s1
 29290: ca 8b 05                 s0 = a4 * a1
 29293: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29298: d6 95 0b                 a4 = s0 mulhu a2
 29301: c9 b5 06                 s1 = s0 - a4
 29304: 98 66 01                 s1 = s1 >> 0x1
 29307: c8 6b 0b                 a4 = a4 + s1
 29310: 98 bb 06                 a4 = a4 >> 0x6
 29313: ca 3b 0b                 a4 = a4 * t1
 29316: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 29321: c9 b5 05                 s0 = s0 - a4
 29324: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 29327: 97 a6 0d                 s1 = a3 << 0xd
 29330: d3 a6 06                 s1 = s1 ^ a3
 29333: 98 6a 07                 a3 = s1 >> 0x7
 29336: d3 a6 06                 s1 = s1 ^ a3
 29339: 97 6a 11                 a3 = s1 << 0x11
 29342: d3 6a 0a                 a3 = a3 ^ s1
 29345: ca 8a 08                 a1 = a3 * a1
 29348: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29353: d6 98 07                 a0 = a1 mulhu a2
 29356: c9 78 09                 a2 = a1 - a0
 29359: 98 99 01                 a2 = a2 >> 0x1
 29362: c8 97 07                 a0 = a0 + a2
 29365: 98 77 06                 a0 = a0 >> 0x6
 29368: ca 37 07                 a0 = a0 * t1
 29371: c9 78 08                 a1 = a1 - a0
 29374: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 29377: 7b 1c 48                 u64 [sp + 0x48] = a5
 29380: 7b 12 40                 u64 [sp + 0x40] = t0
 29383: 7b 1b 50                 u64 [sp + 0x50] = a4
 29386: 7b 17 58                 u64 [sp + 0x58] = a0
 29389: 95 17 40                 a0 = sp + 0x40
 29392: 50 20 de 01 dd cc        ra = 478, jump @1284
      :                          @2086 [@dyn 239]
 29398: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 29402: 7b 18 90 00              u64 [sp + 0x90] = a1
 29406: 95 17 b0 00              a0 = sp + 0xb0
 29410: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 29414: 33 07 80 03              a0 = 0x380
 29418: 7b 17 00 01              u64 [sp + 0x100] = a0
 29422: 95 18 90 00              a1 = sp + 0x90
 29426: 7b 18 08 01              u64 [sp + 0x108] = a1
 29430: 7b 17 10 01              u64 [sp + 0x110] = a0
 29434: 33 07 30 08 01           a0 = 0x10830
 29439: 7b 17 50 01              u64 [sp + 0x150] = a0
 29443: 49 21 58 01 03           u64 [sp + 344] = 0x3
 29448: 49 21 70 01              u64 [sp + 368] = 0
 29452: 95 17 f8 00              a0 = sp + 0xf8
 29456: 7b 17 60 01              u64 [sp + 0x160] = a0
 29460: 49 21 68 01 02           u64 [sp + 360] = 0x2
 29465: 95 17 c8 00              a0 = sp + 0xc8
 29469: 95 18 50 01              a1 = sp + 0x150
 29473: 50 20 e0 01 5a aa        ra = 480, jump @611
      :                          @2087 [@dyn 240]
 29479: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 29483: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 29487: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 29491: 33 07 03                 a0 = 0x3
 29494: 33 08                    a1 = 0
 29496: 33 09                    a2 = 0
 29498: 64 5a                    a3 = s0
 29500: 33 00 e2 01              ra = 0x1e2
 29504: 0a 64                    ecalli 100 // 'log'
 29506: 01                       fallthrough
      :                          @2088 [@dyn 241]
 29507: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 29512: 55 38 00 00 ff 09        jump @2090 if a1 >=u 4294901760
      :                          @2089
 29518: 28 ff 2a                 jump @2527
      :                          @2090
 29521: 33 07 f0 02 03           a0 = 0x302f0
 29526: 95 77 00 00 01           a0 = a0 + 0x10000
 29531: 01                       fallthrough
      :                          @2091
 29532: 82 78                    a1 = u64 [a0]
 29534: c9 87 09                 a2 = a0 - a1
 29537: aa 59 06                 jump @2093 if a2 == s0
      :                          @2092
 29540: 28 e9 2a                 jump @2527
      :                          @2093
 29543: c9 68 09                 a2 = a1 - s1
 29546: 01                       fallthrough
      :                          @2094
 29547: 82 7a                    a3 = u64 [a0]
 29549: ab 8a ef                 jump @2091 if a3 != a1
      :                          @2095
 29552: 7b 79                    u64 [a0] = a2
 29554: 33 0b                    a4 = 0
 29556: 01                       fallthrough
      :                          @2096
 29557: ab 8a e7                 jump @2091 if a3 != a1
      :                          @2097
 29560: 28 d5 2a                 jump @2527
      :                          @2098 [@dyn 242]
 29563: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 29568: 97 89 0d                 a2 = a1 << 0xd
 29571: d3 98 08                 a1 = a1 ^ a2
 29574: 98 89 07                 a2 = a1 >> 0x7
 29577: d3 89 09                 a2 = a2 ^ a1
 29580: 97 9a 11                 a3 = a2 << 0x11
 29583: 3a 08 60 00 03           a1 = u64 [0x30060]
 29588: d3 9a 0a                 a3 = a3 ^ a2
 29591: 3a 09 b0 00 03           a2 = u64 [0x300b0]
 29596: ca 8a 0b                 a4 = a3 * a1
 29599: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29604: d6 9b 0a                 a3 = a4 mulhu a2
 29607: c9 ab 0c                 a5 = a4 - a3
 29610: 98 cc 01                 a5 = a5 >> 0x1
 29613: c8 ca 0a                 a3 = a3 + a5
 29616: 98 ac 06                 a5 = a3 >> 0x6
 29619: 33 03 65                 t1 = 0x65
 29622: ca 3c 0c                 a5 = a5 * t1
 29625: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 29630: c9 cb 0b                 a4 = a4 - a5
 29633: 95 b2 ce                 t0 = a4 + 0xffffffffffffffce
 29636: 97 6c 0d                 a5 = s1 << 0xd
 29639: d3 c6 06                 s1 = s1 ^ a5
 29642: 98 6c 07                 a5 = s1 >> 0x7
 29645: d3 c6 06                 s1 = s1 ^ a5
 29648: 97 6c 11                 a5 = s1 << 0x11
 29651: d3 6c 0c                 a5 = a5 ^ s1
 29654: ca 8c 05                 s0 = a5 * a1
 29657: 3e 0c e0 00 03           u64 [0x300e0] = a5
 29662: d6 95 0c                 a5 = s0 mulhu a2
 29665: c9 c5 06                 s1 = s0 - a5
 29668: 98 66 01                 s1 = s1 >> 0x1
 29671: c8 6c 0c                 a5 = a5 + s1
 29674: 98 cc 06                 a5 = a5 >> 0x6
 29677: ca 3c 0c                 a5 = a5 * t1
 29680: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 29685: c9 c5 05                 s0 = s0 - a5
 29688: 95 5c ce                 a5 = s0 + 0xffffffffffffffce
 29691: 97 b6 0d                 s1 = a4 << 0xd
 29694: d3 b6 06                 s1 = s1 ^ a4
 29697: 98 6b 07                 a4 = s1 >> 0x7
 29700: d3 b6 06                 s1 = s1 ^ a4
 29703: 97 6b 11                 a4 = s1 << 0x11
 29706: d3 6b 0b                 a4 = a4 ^ s1
 29709: ca 8b 05                 s0 = a4 * a1
 29712: 3e 0b e0 00 03           u64 [0x300e0] = a4
 29717: d6 95 0b                 a4 = s0 mulhu a2
 29720: c9 b5 06                 s1 = s0 - a4
 29723: 98 66 01                 s1 = s1 >> 0x1
 29726: c8 6b 0b                 a4 = a4 + s1
 29729: 98 bb 06                 a4 = a4 >> 0x6
 29732: ca 3b 0b                 a4 = a4 * t1
 29735: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 29740: c9 b5 05                 s0 = s0 - a4
 29743: 95 5b ce                 a4 = s0 + 0xffffffffffffffce
 29746: 97 a6 0d                 s1 = a3 << 0xd
 29749: d3 a6 06                 s1 = s1 ^ a3
 29752: 98 6a 07                 a3 = s1 >> 0x7
 29755: d3 a6 06                 s1 = s1 ^ a3
 29758: 97 6a 11                 a3 = s1 << 0x11
 29761: d3 6a 0a                 a3 = a3 ^ s1
 29764: ca 8a 08                 a1 = a3 * a1
 29767: 3e 0a e0 00 03           u64 [0x300e0] = a3
 29772: d6 98 07                 a0 = a1 mulhu a2
 29775: c9 78 09                 a2 = a1 - a0
 29778: 98 99 01                 a2 = a2 >> 0x1
 29781: c8 97 07                 a0 = a0 + a2
 29784: 98 77 06                 a0 = a0 >> 0x6
 29787: ca 37 07                 a0 = a0 * t1
 29790: c9 78 08                 a1 = a1 - a0
 29793: 95 87 ce                 a0 = a1 + 0xffffffffffffffce
 29796: 7b 1c 68                 u64 [sp + 0x68] = a5
 29799: 7b 12 60                 u64 [sp + 0x60] = t0
 29802: 7b 1b 70                 u64 [sp + 0x70] = a4
 29805: 7b 17 78                 u64 [sp + 0x78] = a0
 29808: 95 17 c8 00              a0 = sp + 0xc8
 29812: 95 18 60                 a1 = sp + 0x60
 29815: 95 15 c8 00              s0 = sp + 0xc8
 29819: 50 20 e6 01 a3 cb        ra = 486, jump @1299
      :                          @2099 [@dyn 243]
 29825: 95 17 d0 00              a0 = sp + 0xd0
 29829: 95 18 d8 00              a1 = sp + 0xd8
 29833: 95 19 e0 00              a2 = sp + 0xe0
 29837: 7b 15 50 01              u64 [sp + 0x150] = s0
 29841: 33 0a 80 03              a3 = 0x380
 29845: 7b 1a 58 01              u64 [sp + 0x158] = a3
 29849: 7b 17 60 01              u64 [sp + 0x160] = a0
 29853: 7b 1a 68 01              u64 [sp + 0x168] = a3
 29857: 7b 18 70 01              u64 [sp + 0x170] = a1
 29861: 7b 1a 78 01              u64 [sp + 0x178] = a3
 29865: 7b 19 80 01              u64 [sp + 0x180] = a2
 29869: 7b 1a 88 01              u64 [sp + 0x188] = a3
 29873: 33 07 88 08 01           a0 = 0x10888
 29878: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 29882: 49 21 00 01 05           u64 [sp + 256] = 0x5
 29887: 49 21 18 01              u64 [sp + 280] = 0
 29891: 95 17 50 01              a0 = sp + 0x150
 29895: 7b 17 08 01              u64 [sp + 0x108] = a0
 29899: 49 21 10 01 04           u64 [sp + 272] = 0x4
 29904: 95 17 90 00              a0 = sp + 0x90
 29908: 95 18 f8 00              a1 = sp + 0xf8
 29912: 50 20 e8 01 a3 a8        ra = 488, jump @611
      :                          @2100 [@dyn 244]
 29918: 82 15 98 00              s0 = u64 [sp + 0x98]
 29922: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 29926: 82 16 90 00              s1 = u64 [sp + 0x90]
 29930: 33 07 03                 a0 = 0x3
 29933: 33 08                    a1 = 0
 29935: 33 09                    a2 = 0
 29937: 64 5a                    a3 = s0
 29939: 33 00 ea 01              ra = 0x1ea
 29943: 0a 64                    ecalli 100 // 'log'
 29945: 01                       fallthrough
      :                          @2101 [@dyn 245]
 29946: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 29951: 55 38 00 00 ff 09        jump @2103 if a1 >=u 4294901760
      :                          @2102
 29957: 28 48 29                 jump @2527
      :                          @2103
 29960: 33 07 f0 02 03           a0 = 0x302f0
 29965: 95 77 00 00 01           a0 = a0 + 0x10000
 29970: 01                       fallthrough
      :                          @2104
 29971: 82 78                    a1 = u64 [a0]
 29973: c9 87 09                 a2 = a0 - a1
 29976: aa 59 06                 jump @2106 if a2 == s0
      :                          @2105
 29979: 28 32 29                 jump @2527
      :                          @2106
 29982: c9 68 09                 a2 = a1 - s1
 29985: 01                       fallthrough
      :                          @2107
 29986: 82 7a                    a3 = u64 [a0]
 29988: ab 8a ef                 jump @2104 if a3 != a1
      :                          @2108
 29991: 7b 79                    u64 [a0] = a2
 29993: 33 0b                    a4 = 0
 29995: 01                       fallthrough
      :                          @2109
 29996: ab 8a e7                 jump @2104 if a3 != a1
      :                          @2110
 29999: 28 1e 29                 jump @2527
      :                          @2111 [@dyn 246]
 30002: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30007: 97 89 0d                 a2 = a1 << 0xd
 30010: d3 98 08                 a1 = a1 ^ a2
 30013: 98 89 07                 a2 = a1 >> 0x7
 30016: d3 98 08                 a1 = a1 ^ a2
 30019: 97 89 11                 a2 = a1 << 0x11
 30022: 3a 0b 60 00 03           a4 = u64 [0x30060]
 30027: d3 98 08                 a1 = a1 ^ a2
 30030: 3a 0c b0 00 03           a5 = u64 [0x300b0]
 30035: ca b8 09                 a2 = a1 * a4
 30038: 3e 08 e0 00 03           u64 [0x300e0] = a1
 30043: d6 c9 08                 a1 = a2 mulhu a5
 30046: c9 89 0a                 a3 = a2 - a1
 30049: 98 aa 01                 a3 = a3 >> 0x1
 30052: c8 a8 08                 a1 = a1 + a3
 30055: 98 88 06                 a1 = a1 >> 0x6
 30058: 96 88 65                 a1 = a1 * 0x65
 30061: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 30066: c9 89 09                 a2 = a2 - a1
 30069: 95 98 ce                 a1 = a2 + 0xffffffffffffffce
 30072: 97 a9 0d                 a2 = a3 << 0xd
 30075: d3 a9 09                 a2 = a2 ^ a3
 30078: 98 9a 07                 a3 = a2 >> 0x7
 30081: d3 a9 09                 a2 = a2 ^ a3
 30084: 97 9a 11                 a3 = a2 << 0x11
 30087: d3 a9 09                 a2 = a2 ^ a3
 30090: ca b9 05                 s0 = a2 * a4
 30093: 3e 09 e0 00 03           u64 [0x300e0] = a2
 30098: d6 c5 09                 a2 = s0 mulhu a5
 30101: c9 95 0a                 a3 = s0 - a2
 30104: 98 aa 01                 a3 = a3 >> 0x1
 30107: c8 a9 09                 a2 = a2 + a3
 30110: 98 99 06                 a2 = a2 >> 0x6
 30113: 96 99 65                 a2 = a2 * 0x65
 30116: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 30121: c9 95 05                 s0 = s0 - a2
 30124: 95 59 ce                 a2 = s0 + 0xffffffffffffffce
 30127: 97 6a 0d                 a3 = s1 << 0xd
 30130: d3 a6 06                 s1 = s1 ^ a3
 30133: 98 6a 07                 a3 = s1 >> 0x7
 30136: d3 a6 06                 s1 = s1 ^ a3
 30139: 97 6a 11                 a3 = s1 << 0x11
 30142: d3 6a 0a                 a3 = a3 ^ s1
 30145: ca ba 05                 s0 = a3 * a4
 30148: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30153: d6 c5 0a                 a3 = s0 mulhu a5
 30156: c9 a5 06                 s1 = s0 - a3
 30159: 98 66 01                 s1 = s1 >> 0x1
 30162: c8 6a 0a                 a3 = a3 + s1
 30165: 98 aa 06                 a3 = a3 >> 0x6
 30168: 96 aa 65                 a3 = a3 * 0x65
 30171: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 30176: c9 a5 05                 s0 = s0 - a3
 30179: 95 5a ce                 a3 = s0 + 0xffffffffffffffce
 30182: 97 76 0d                 s1 = a0 << 0xd
 30185: d3 76 06                 s1 = s1 ^ a0
 30188: 98 67 07                 a0 = s1 >> 0x7
 30191: d3 76 06                 s1 = s1 ^ a0
 30194: 97 67 11                 a0 = s1 << 0x11
 30197: d3 67 07                 a0 = a0 ^ s1
 30200: ca b7 0b                 a4 = a0 * a4
 30203: 3e 07 e0 00 03           u64 [0x300e0] = a0
 30208: d6 cb 07                 a0 = a4 mulhu a5
 30211: c9 7b 0c                 a5 = a4 - a0
 30214: 98 cc 01                 a5 = a5 >> 0x1
 30217: c8 c7 07                 a0 = a0 + a5
 30220: 98 77 06                 a0 = a0 >> 0x6
 30223: 96 77 65                 a0 = a0 * 0x65
 30226: c9 7b 0b                 a4 = a4 - a0
 30229: 95 bb ce                 a4 = a4 + 0xffffffffffffffce
 30232: 95 17 50 01              a0 = sp + 0x150
 30236: 50 20 ee 01 c6 ca        ra = 494, jump @1312
      :                          @2112 [@dyn 247]
 30242: 82 17 50 01              a0 = u64 [sp + 0x150]
 30246: 82 18 58 01              a1 = u64 [sp + 0x158]
 30250: 82 19 60 01              a2 = u64 [sp + 0x160]
 30254: 82 1a 68 01              a3 = u64 [sp + 0x168]
 30258: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 30262: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 30266: 7b 19 90 00              u64 [sp + 0x90] = a2
 30270: 7b 1a 98 00              u64 [sp + 0x98] = a3
 30274: 95 17 b0 00              a0 = sp + 0xb0
 30278: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30282: 33 07 98 00              a0 = 0x98
 30286: 7b 17 00 01              u64 [sp + 0x100] = a0
 30290: 95 18 90 00              a1 = sp + 0x90
 30294: 7b 18 08 01              u64 [sp + 0x108] = a1
 30298: 7b 17 10 01              u64 [sp + 0x110] = a0
 30302: 33 07 f0 08 01           a0 = 0x108f0
 30307: 7b 17 50 01              u64 [sp + 0x150] = a0
 30311: 49 21 58 01 02           u64 [sp + 344] = 0x2
 30316: 49 21 70 01              u64 [sp + 368] = 0
 30320: 95 18 f8 00              a1 = sp + 0xf8
 30324: 7b 18 60 01              u64 [sp + 0x160] = a1
 30328: 49 21 68 01 02           u64 [sp + 360] = 0x2
 30333: 95 17 c8 00              a0 = sp + 0xc8
 30337: 95 18 50 01              a1 = sp + 0x150
 30341: 50 20 f0 01 f6 a6        ra = 496, jump @611
      :                          @2113 [@dyn 248]
 30347: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 30351: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 30355: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 30359: 33 07 03                 a0 = 0x3
 30362: 33 08                    a1 = 0
 30364: 33 09                    a2 = 0
 30366: 64 5a                    a3 = s0
 30368: 33 00 f2 01              ra = 0x1f2
 30372: 0a 64                    ecalli 100 // 'log'
 30374: 01                       fallthrough
      :                          @2114 [@dyn 249]
 30375: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 30380: 55 38 00 00 ff 09        jump @2116 if a1 >=u 4294901760
      :                          @2115
 30386: 28 9b 27                 jump @2527
      :                          @2116
 30389: 33 07 f0 02 03           a0 = 0x302f0
 30394: 95 77 00 00 01           a0 = a0 + 0x10000
 30399: 01                       fallthrough
      :                          @2117
 30400: 82 78                    a1 = u64 [a0]
 30402: c9 87 09                 a2 = a0 - a1
 30405: aa 59 06                 jump @2119 if a2 == s0
      :                          @2118
 30408: 28 85 27                 jump @2527
      :                          @2119
 30411: c9 68 09                 a2 = a1 - s1
 30414: 01                       fallthrough
      :                          @2120
 30415: 82 7a                    a3 = u64 [a0]
 30417: ab 8a ef                 jump @2117 if a3 != a1
      :                          @2121
 30420: 7b 79                    u64 [a0] = a2
 30422: 33 0b                    a4 = 0
 30424: 01                       fallthrough
      :                          @2122
 30425: ab 8a e7                 jump @2117 if a3 != a1
      :                          @2123
 30428: 28 71 27                 jump @2527
      :                          @2124 [@dyn 250]
 30431: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30436: 97 89 0d                 a2 = a1 << 0xd
 30439: d3 89 09                 a2 = a2 ^ a1
 30442: 98 9a 07                 a3 = a2 >> 0x7
 30445: 3a 08 60 00 03           a1 = u64 [0x30060]
 30450: d3 a9 09                 a2 = a2 ^ a3
 30453: 97 9a 11                 a3 = a2 << 0x11
 30456: d3 9a 0a                 a3 = a3 ^ a2
 30459: ca 8a 0b                 a4 = a3 * a1
 30462: 3a 09 68 00 03           a2 = u64 [0x30068]
 30467: 3e 0a e0 00 03           u64 [0x300e0] = a3
 30472: 98 ba 03                 a3 = a4 >> 0x3
 30475: d6 9a 0a                 a3 = a3 mulhu a2
 30478: 98 ac 04                 a5 = a3 >> 0x4
 30481: 96 cc e8 03              a5 = a5 * 0x3e8
 30485: c9 cb 0b                 a4 = a4 - a5
 30488: 7b 1b 88 00              u64 [sp + 0x88] = a4
 30492: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 30497: 97 bc 0d                 a5 = a4 << 0xd
 30500: d3 cb 0b                 a4 = a4 ^ a5
 30503: 98 bc 07                 a5 = a4 >> 0x7
 30506: d3 cb 0b                 a4 = a4 ^ a5
 30509: 97 bc 11                 a5 = a4 << 0x11
 30512: d3 cb 0b                 a4 = a4 ^ a5
 30515: ca 8b 0c                 a5 = a4 * a1
 30518: 3e 0b e0 00 03           u64 [0x300e0] = a4
 30523: 98 cb 03                 a4 = a5 >> 0x3
 30526: d6 9b 0b                 a4 = a4 mulhu a2
 30529: 98 bb 04                 a4 = a4 >> 0x4
 30532: 96 bb e8 03              a4 = a4 * 0x3e8
 30536: c9 bc 0c                 a5 = a5 - a4
 30539: 7b 1c 68 02              u64 [sp + 0x268] = a5
 30543: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 30548: 97 bc 0d                 a5 = a4 << 0xd
 30551: d3 cb 0b                 a4 = a4 ^ a5
 30554: 98 bc 07                 a5 = a4 >> 0x7
 30557: d3 cb 0b                 a4 = a4 ^ a5
 30560: 97 bc 11                 a5 = a4 << 0x11
 30563: d3 cb 0b                 a4 = a4 ^ a5
 30566: ca 8b 08                 a1 = a4 * a1
 30569: 3e 0b e0 00 03           u64 [0x300e0] = a4
 30574: 98 87 03                 a0 = a1 >> 0x3
 30577: d6 97 07                 a0 = a0 mulhu a2
 30580: 98 77 04                 a0 = a0 >> 0x4
 30583: 96 77 e8 03              a0 = a0 * 0x3e8
 30587: c9 78 09                 a2 = a1 - a0
 30590: 95 97 01                 a0 = a2 + 0x1
 30593: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 30597: 82 1c 88 00              a5 = u64 [sp + 0x88]
 30601: 82 18 68 02              a1 = u64 [sp + 0x268]
 30605: 8e 95                    s0 = a2 >u 0
 30607: 33 06 41                 s1 = 0x41
 30610: 33 0b 01                 a4 = 0x1
 30613: 01                       fallthrough
      :                          @2125
 30614: cd 7c 0c                 a5 = a5 %u a0
 30617: 83 69 fe                 i32 a2 = s1 + 0xfffffffffffffffe
 30620: d0 98 09                 a2 = a1 >> a2
 30623: 84 99 01                 a2 = a2 & 0x1
 30626: 64 5a                    a3 = s0
 30628: db 9c 0a                 a3 = a5 if a2 != 0
 30631: ca ca 0c                 a5 = a3 * a5
 30634: ca 5a 09                 a2 = a3 * s0
 30637: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 30640: cd 79 05                 s0 = a2 %u a0
 30643: ac 6b e3                 jump @2125 if a4 <u s1
      :                          @2126
 30646: 7b 15 90 00              u64 [sp + 0x90] = s0
 30650: 95 17 88 00              a0 = sp + 0x88
 30654: 7b 17 50 01              u64 [sp + 0x150] = a0
 30658: 33 07 28 03              a0 = 0x328
 30662: 7b 17 58 01              u64 [sp + 0x158] = a0
 30666: 95 18 68 02              a1 = sp + 0x268
 30670: 7b 18 60 01              u64 [sp + 0x160] = a1
 30674: 7b 17 68 01              u64 [sp + 0x168] = a0
 30678: 95 18 b0 00              a1 = sp + 0xb0
 30682: 7b 18 70 01              u64 [sp + 0x170] = a1
 30686: 7b 17 78 01              u64 [sp + 0x178] = a0
 30690: 95 18 90 00              a1 = sp + 0x90
 30694: 7b 18 80 01              u64 [sp + 0x180] = a1
 30698: 7b 17 88 01              u64 [sp + 0x188] = a0
 30702: 33 07 20 09 01           a0 = 0x10920
 30707: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 30711: 49 21 00 01 04           u64 [sp + 256] = 0x4
 30716: 49 21 18 01              u64 [sp + 280] = 0
 30720: 95 18 50 01              a1 = sp + 0x150
 30724: 7b 18 08 01              u64 [sp + 0x108] = a1
 30728: 49 21 10 01 04           u64 [sp + 272] = 0x4
 30733: 95 17 c8 00              a0 = sp + 0xc8
 30737: 95 18 f8 00              a1 = sp + 0xf8
 30741: 50 20 f6 01 66 a5        ra = 502, jump @611
      :                          @2127 [@dyn 251]
 30747: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 30751: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 30755: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 30759: 33 07 03                 a0 = 0x3
 30762: 33 08                    a1 = 0
 30764: 33 09                    a2 = 0
 30766: 64 5a                    a3 = s0
 30768: 33 00 f8 01              ra = 0x1f8
 30772: 0a 64                    ecalli 100 // 'log'
 30774: 01                       fallthrough
      :                          @2128 [@dyn 252]
 30775: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 30780: 55 38 00 00 ff 09        jump @2130 if a1 >=u 4294901760
      :                          @2129
 30786: 28 0b 26                 jump @2527
      :                          @2130
 30789: 33 07 f0 02 03           a0 = 0x302f0
 30794: 95 77 00 00 01           a0 = a0 + 0x10000
 30799: 01                       fallthrough
      :                          @2131
 30800: 82 78                    a1 = u64 [a0]
 30802: c9 87 09                 a2 = a0 - a1
 30805: aa 59 06                 jump @2133 if a2 == s0
      :                          @2132
 30808: 28 f5 25                 jump @2527
      :                          @2133
 30811: c9 68 09                 a2 = a1 - s1
 30814: 01                       fallthrough
      :                          @2134
 30815: 82 7a                    a3 = u64 [a0]
 30817: ab 8a ef                 jump @2131 if a3 != a1
      :                          @2135
 30820: 7b 79                    u64 [a0] = a2
 30822: 33 0b                    a4 = 0
 30824: 01                       fallthrough
      :                          @2136
 30825: ab 8a e7                 jump @2131 if a3 != a1
      :                          @2137
 30828: 28 e1 25                 jump @2527
      :                          @2138 [@dyn 253]
 30831: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30836: 97 89 0d                 a2 = a1 << 0xd
 30839: d3 98 08                 a1 = a1 ^ a2
 30842: 98 89 07                 a2 = a1 >> 0x7
 30845: d3 98 08                 a1 = a1 ^ a2
 30848: 97 89 11                 a2 = a1 << 0x11
 30851: 3a 0a 60 00 03           a3 = u64 [0x30060]
 30856: d3 98 08                 a1 = a1 ^ a2
 30859: 3a 09 a0 00 03           a2 = u64 [0x300a0]
 30864: ca a8 0b                 a4 = a1 * a3
 30867: 3e 08 e0 00 03           u64 [0x300e0] = a1
 30872: d6 9b 08                 a1 = a4 mulhu a2
 30875: 98 88 12                 a1 = a1 >> 0x12
 30878: 33 0c 40 42 0f           a5 = 0xf4240
 30883: ca c8 08                 a1 = a1 * a5
 30886: c9 8b 0b                 a4 = a4 - a1
 30889: 7b 1b 68 02              u64 [sp + 0x268] = a4
 30893: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 30898: 97 8b 0d                 a4 = a1 << 0xd
 30901: d3 b8 08                 a1 = a1 ^ a4
 30904: 98 8b 07                 a4 = a1 >> 0x7
 30907: d3 b8 08                 a1 = a1 ^ a4
 30910: 97 8b 11                 a4 = a1 << 0x11
 30913: d3 b8 08                 a1 = a1 ^ a4
 30916: ca a8 0a                 a3 = a1 * a3
 30919: 3e 08 e0 00 03           u64 [0x300e0] = a1
 30924: d6 9a 07                 a0 = a3 mulhu a2
 30927: 98 78 12                 a1 = a0 >> 0x12
 30930: 82 17 68 02              a0 = u64 [sp + 0x268]
 30934: ca c8 08                 a1 = a1 * a5
 30937: c9 8a 08                 a1 = a3 - a1
 30940: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 30944: 50 20 fc 01 88 cb        ra = 508, jump @1396
      :                          @2139 [@dyn 254]
 30950: 7b 17 90 00              u64 [sp + 0x90] = a0
 30954: 95 17 68 02              a0 = sp + 0x268
 30958: 7b 17 50 01              u64 [sp + 0x150] = a0
 30962: 33 07 28 03              a0 = 0x328
 30966: 7b 17 58 01              u64 [sp + 0x158] = a0
 30970: 95 18 b0 00              a1 = sp + 0xb0
 30974: 7b 18 60 01              u64 [sp + 0x160] = a1
 30978: 7b 17 68 01              u64 [sp + 0x168] = a0
 30982: 95 18 90 00              a1 = sp + 0x90
 30986: 7b 18 70 01              u64 [sp + 0x170] = a1
 30990: 7b 17 78 01              u64 [sp + 0x178] = a0
 30994: 33 07 70 09 01           a0 = 0x10970
 30999: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 31003: 49 21 00 01 03           u64 [sp + 256] = 0x3
 31008: 49 21 18 01              u64 [sp + 280] = 0
 31012: 95 18 50 01              a1 = sp + 0x150
 31016: 7b 18 08 01              u64 [sp + 0x108] = a1
 31020: 49 21 10 01 03           u64 [sp + 272] = 0x3
 31025: 95 17 c8 00              a0 = sp + 0xc8
 31029: 95 18 f8 00              a1 = sp + 0xf8
 31033: 50 20 fe 01 42 a4        ra = 510, jump @611
      :                          @2140 [@dyn 255]
 31039: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 31043: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 31047: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 31051: 33 07 03                 a0 = 0x3
 31054: 33 08                    a1 = 0
 31056: 33 09                    a2 = 0
 31058: 64 5a                    a3 = s0
 31060: 33 00 00 02              ra = 0x200
 31064: 0a 64                    ecalli 100 // 'log'
 31066: 01                       fallthrough
      :                          @2141 [@dyn 256]
 31067: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 31072: 55 38 00 00 ff 09        jump @2143 if a1 >=u 4294901760
      :                          @2142
 31078: 28 e7 24                 jump @2527
      :                          @2143
 31081: 33 07 f0 02 03           a0 = 0x302f0
 31086: 95 77 00 00 01           a0 = a0 + 0x10000
 31091: 01                       fallthrough
      :                          @2144
 31092: 82 78                    a1 = u64 [a0]
 31094: c9 87 09                 a2 = a0 - a1
 31097: aa 59 06                 jump @2146 if a2 == s0
      :                          @2145
 31100: 28 d1 24                 jump @2527
      :                          @2146
 31103: c9 68 09                 a2 = a1 - s1
 31106: 01                       fallthrough
      :                          @2147
 31107: 82 7a                    a3 = u64 [a0]
 31109: ab 8a ef                 jump @2144 if a3 != a1
      :                          @2148
 31112: 7b 79                    u64 [a0] = a2
 31114: 33 0b                    a4 = 0
 31116: 01                       fallthrough
      :                          @2149
 31117: ab 8a e7                 jump @2144 if a3 != a1
      :                          @2150
 31120: 28 bd 24                 jump @2527
      :                          @2151 [@dyn 257]
 31123: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31128: 97 89 0d                 a2 = a1 << 0xd
 31131: d3 98 08                 a1 = a1 ^ a2
 31134: 98 89 07                 a2 = a1 >> 0x7
 31137: d3 98 08                 a1 = a1 ^ a2
 31140: 97 89 11                 a2 = a1 << 0x11
 31143: 3a 0a 60 00 03           a3 = u64 [0x30060]
 31148: d3 98 08                 a1 = a1 ^ a2
 31151: 3a 09 a0 00 03           a2 = u64 [0x300a0]
 31156: ca a8 0b                 a4 = a1 * a3
 31159: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31164: d6 9b 08                 a1 = a4 mulhu a2
 31167: 98 88 12                 a1 = a1 >> 0x12
 31170: 33 0c 40 42 0f           a5 = 0xf4240
 31175: ca c8 08                 a1 = a1 * a5
 31178: c9 8b 0b                 a4 = a4 - a1
 31181: 7b 1b 68 02              u64 [sp + 0x268] = a4
 31185: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31190: 97 8b 0d                 a4 = a1 << 0xd
 31193: d3 b8 08                 a1 = a1 ^ a4
 31196: 98 8b 07                 a4 = a1 >> 0x7
 31199: d3 b8 08                 a1 = a1 ^ a4
 31202: 97 8b 11                 a4 = a1 << 0x11
 31205: d3 b8 08                 a1 = a1 ^ a4
 31208: ca a8 0a                 a3 = a1 * a3
 31211: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31216: d6 9a 08                 a1 = a3 mulhu a2
 31219: 82 17 68 02              a0 = u64 [sp + 0x268]
 31223: 98 88 12                 a1 = a1 >> 0x12
 31226: ca c8 08                 a1 = a1 * a5
 31229: c9 8a 08                 a1 = a3 - a1
 31232: 7b 18 b0 00              u64 [sp + 0xb0] = a1
 31236: 52 07 06                 jump @2153 if a0 != 0
      :                          @2152
 31239: 28 06 21                 jump @2486
      :                          @2153
 31242: 88 89 01                 a2 = a1 <u 0x1
 31245: d3 87 0a                 a3 = a0 ^ a1
 31248: 88 aa 01                 a3 = a3 <u 0x1
 31251: d4 a9 09                 a2 = a2 | a3
 31254: 51 09 08                 jump @2155 if a2 == 0
      :                          @2154
 31257: 64 79                    a2 = a0
 31259: 28 f5 20                 jump @2487
      :                          @2155
 31262: d8 78 0a                 a3 = a1 <u a0
 31265: 64 79                    a2 = a0
 31267: 94 a9                    a2 = 0 if a3 != 0
 31269: c9 98 09                 a2 = a1 - a2
 31272: 93 a8                    a1 = 0 if a3 == 0
 31274: c9 87 07                 a0 = a0 - a1
 31277: 64 98                    a1 = a2
 31279: ab 97 ef                 jump @2155 if a0 != a2
      :                          @2156
 31282: 28 de 20                 jump @2487
      :                          @2157 [@dyn 258]
 31285: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31290: 97 89 0d                 a2 = a1 << 0xd
 31293: d3 98 08                 a1 = a1 ^ a2
 31296: 98 89 07                 a2 = a1 >> 0x7
 31299: d3 89 09                 a2 = a2 ^ a1
 31302: 97 9a 11                 a3 = a2 << 0x11
 31305: 3a 08 60 00 03           a1 = u64 [0x30060]
 31310: d3 a9 09                 a2 = a2 ^ a3
 31313: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 31318: ca 89 0b                 a4 = a2 * a1
 31321: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31326: d6 ab 09                 a2 = a4 mulhu a3
 31329: 98 99 12                 a2 = a2 >> 0x12
 31332: 96 99 40 42 0f           a2 = a2 * 0xf4240
 31337: c9 9b 0b                 a4 = a4 - a2
 31340: 95 bb 01                 a4 = a4 + 0x1
 31343: 7b 1b b0 00              u64 [sp + 0xb0] = a4
 31347: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 31352: 97 9a 0d                 a3 = a2 << 0xd
 31355: d3 a9 09                 a2 = a2 ^ a3
 31358: 98 9a 07                 a3 = a2 >> 0x7
 31361: d3 a9 09                 a2 = a2 ^ a3
 31364: 97 9a 11                 a3 = a2 << 0x11
 31367: d3 a9 09                 a2 = a2 ^ a3
 31370: 3a 0a a8 00 03           a3 = u64 [0x300a8]
 31375: ca 89 08                 a1 = a2 * a1
 31378: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31383: d6 a8 07                 a0 = a1 mulhu a3
 31386: 98 79 03                 a2 = a0 >> 0x3
 31389: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 31392: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 31396: c8 a9 09                 a2 = a2 + a3
 31399: c9 98 08                 a1 = a1 - a2
 31402: 95 88 02                 a1 = a1 + 0x2
 31405: 7b 18 90 00              u64 [sp + 0x90] = a1
 31409: 33 09                    a2 = 0
 31411: ac 87 18                 jump @2160 if a0 <u a1
      :                          @2158
 31414: 33 0a ff                 a3 = 0xffffffffffffffff
 31417: 64 8b                    a4 = a1
 31419: 01                       fallthrough
      :                          @2159
 31420: d6 8b 0c                 a5 = a4 mulhu a1
 31423: ca 8b 0b                 a4 = a4 * a1
 31426: db ca 0b                 a4 = a3 if a5 != 0
 31429: 83 99 01                 i32 a2 = a2 + 0x1
 31432: ae b7 f4                 jump @2159 if a0 >=u a4
      :                          @2160
 31435: 7a 19 68 02              u32 [sp + 0x268] = a2
 31439: 95 17 b0 00              a0 = sp + 0xb0
 31443: 7b 17 50 01              u64 [sp + 0x150] = a0
 31447: 33 07 28 03              a0 = 0x328
 31451: 7b 17 58 01              u64 [sp + 0x158] = a0
 31455: 95 18 90 00              a1 = sp + 0x90
 31459: 7b 18 60 01              u64 [sp + 0x160] = a1
 31463: 7b 17 68 01              u64 [sp + 0x168] = a0
 31467: 95 17 68 02              a0 = sp + 0x268
 31471: 7b 17 70 01              u64 [sp + 0x170] = a0
 31475: 33 07 5e 03              a0 = 0x35e
 31479: 7b 17 78 01              u64 [sp + 0x178] = a0
 31483: 33 07 d0 09 01           a0 = 0x109d0
 31488: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 31492: 49 21 00 01 03           u64 [sp + 256] = 0x3
 31497: 49 21 18 01              u64 [sp + 280] = 0
 31501: 95 18 50 01              a1 = sp + 0x150
 31505: 7b 18 08 01              u64 [sp + 0x108] = a1
 31509: 49 21 10 01 03           u64 [sp + 272] = 0x3
 31514: 95 17 c8 00              a0 = sp + 0xc8
 31518: 95 18 f8 00              a1 = sp + 0xf8
 31522: 50 20 06 02 59 a2        ra = 518, jump @611
      :                          @2161 [@dyn 259]
 31528: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 31532: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 31536: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 31540: 33 07 03                 a0 = 0x3
 31543: 33 08                    a1 = 0
 31545: 33 09                    a2 = 0
 31547: 64 5a                    a3 = s0
 31549: 33 00 08 02              ra = 0x208
 31553: 0a 64                    ecalli 100 // 'log'
 31555: 01                       fallthrough
      :                          @2162 [@dyn 260]
 31556: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 31561: 55 38 00 00 ff 09        jump @2164 if a1 >=u 4294901760
      :                          @2163
 31567: 28 fe 22                 jump @2527
      :                          @2164
 31570: 33 07 f0 02 03           a0 = 0x302f0
 31575: 95 77 00 00 01           a0 = a0 + 0x10000
 31580: 01                       fallthrough
      :                          @2165
 31581: 82 78                    a1 = u64 [a0]
 31583: c9 87 09                 a2 = a0 - a1
 31586: aa 59 06                 jump @2167 if a2 == s0
      :                          @2166
 31589: 28 e8 22                 jump @2527
      :                          @2167
 31592: c9 68 09                 a2 = a1 - s1
 31595: 01                       fallthrough
      :                          @2168
 31596: 82 7a                    a3 = u64 [a0]
 31598: ab 8a ef                 jump @2165 if a3 != a1
      :                          @2169
 31601: 7b 79                    u64 [a0] = a2
 31603: 33 0b                    a4 = 0
 31605: 01                       fallthrough
      :                          @2170
 31606: ab 8a e7                 jump @2165 if a3 != a1
      :                          @2171
 31609: 28 d4 22                 jump @2527
      :                          @2172 [@dyn 261]
 31612: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31617: 97 89 0d                 a2 = a1 << 0xd
 31620: d3 98 08                 a1 = a1 ^ a2
 31623: 98 89 07                 a2 = a1 >> 0x7
 31626: d3 89 09                 a2 = a2 ^ a1
 31629: 97 9a 11                 a3 = a2 << 0x11
 31632: 3a 08 60 00 03           a1 = u64 [0x30060]
 31637: d3 a9 09                 a2 = a2 ^ a3
 31640: 3a 0a a0 00 03           a3 = u64 [0x300a0]
 31645: ca 89 0b                 a4 = a2 * a1
 31648: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31653: d6 ab 09                 a2 = a4 mulhu a3
 31656: 98 99 12                 a2 = a2 >> 0x12
 31659: 96 99 40 42 0f           a2 = a2 * 0xf4240
 31664: c9 9b 0b                 a4 = a4 - a2
 31667: 95 bb 01                 a4 = a4 + 0x1
 31670: 7b 1b b0 00              u64 [sp + 0xb0] = a4
 31674: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 31679: 97 9a 0d                 a3 = a2 << 0xd
 31682: d3 a9 09                 a2 = a2 ^ a3
 31685: 98 9a 07                 a3 = a2 >> 0x7
 31688: d3 a9 09                 a2 = a2 ^ a3
 31691: 97 9a 11                 a3 = a2 << 0x11
 31694: d3 a9 09                 a2 = a2 ^ a3
 31697: 3a 0a a8 00 03           a3 = u64 [0x300a8]
 31702: ca 89 08                 a1 = a2 * a1
 31705: 3e 09 e0 00 03           u64 [0x300e0] = a2
 31710: d6 a8 07                 a0 = a1 mulhu a3
 31713: 98 79 03                 a2 = a0 >> 0x3
 31716: 84 7a f8                 a3 = a0 & 0xfffffffffffffff8
 31719: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 31723: c8 a9 09                 a2 = a2 + a3
 31726: c9 98 08                 a1 = a1 - a2
 31729: 95 88 02                 a1 = a1 + 0x2
 31732: 7b 18 90 00              u64 [sp + 0x90] = a1
 31736: 33 09                    a2 = 0
 31738: ac 87 0c                 jump @2174 if a0 <u a1
      :                          @2173
 31741: cb 87 07                 a0 = a0 /u a1
 31744: 83 99 01                 i32 a2 = a2 + 0x1
 31747: ae 87 fa                 jump @2173 if a0 >=u a1
      :                          @2174
 31750: 7a 19 68 02              u32 [sp + 0x268] = a2
 31754: 95 17 b0 00              a0 = sp + 0xb0
 31758: 7b 17 50 01              u64 [sp + 0x150] = a0
 31762: 33 07 28 03              a0 = 0x328
 31766: 7b 17 58 01              u64 [sp + 0x158] = a0
 31770: 95 18 90 00              a1 = sp + 0x90
 31774: 7b 18 60 01              u64 [sp + 0x160] = a1
 31778: 7b 17 68 01              u64 [sp + 0x168] = a0
 31782: 95 17 68 02              a0 = sp + 0x268
 31786: 7b 17 70 01              u64 [sp + 0x170] = a0
 31790: 33 07 5e 03              a0 = 0x35e
 31794: 7b 17 78 01              u64 [sp + 0x178] = a0
 31798: 33 07 00 0a 01           a0 = 0x10a00
 31803: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 31807: 49 21 00 01 03           u64 [sp + 256] = 0x3
 31812: 49 21 18 01              u64 [sp + 280] = 0
 31816: 95 18 50 01              a1 = sp + 0x150
 31820: 7b 18 08 01              u64 [sp + 0x108] = a1
 31824: 49 21 10 01 03           u64 [sp + 272] = 0x3
 31829: 95 17 c8 00              a0 = sp + 0xc8
 31833: 95 18 f8 00              a1 = sp + 0xf8
 31837: 50 20 0c 02 1e a1        ra = 524, jump @611
      :                          @2175 [@dyn 262]
 31843: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 31847: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 31851: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 31855: 33 07 03                 a0 = 0x3
 31858: 33 08                    a1 = 0
 31860: 33 09                    a2 = 0
 31862: 64 5a                    a3 = s0
 31864: 33 00 0e 02              ra = 0x20e
 31868: 0a 64                    ecalli 100 // 'log'
 31870: 01                       fallthrough
      :                          @2176 [@dyn 263]
 31871: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 31876: 55 38 00 00 ff 09        jump @2178 if a1 >=u 4294901760
      :                          @2177
 31882: 28 c3 21                 jump @2527
      :                          @2178
 31885: 33 07 f0 02 03           a0 = 0x302f0
 31890: 95 77 00 00 01           a0 = a0 + 0x10000
 31895: 01                       fallthrough
      :                          @2179
 31896: 82 78                    a1 = u64 [a0]
 31898: c9 87 09                 a2 = a0 - a1
 31901: aa 59 06                 jump @2181 if a2 == s0
      :                          @2180
 31904: 28 ad 21                 jump @2527
      :                          @2181
 31907: c9 68 09                 a2 = a1 - s1
 31910: 01                       fallthrough
      :                          @2182
 31911: 82 7a                    a3 = u64 [a0]
 31913: ab 8a ef                 jump @2179 if a3 != a1
      :                          @2183
 31916: 7b 79                    u64 [a0] = a2
 31918: 33 0b                    a4 = 0
 31920: 01                       fallthrough
      :                          @2184
 31921: ab 8a e7                 jump @2179 if a3 != a1
      :                          @2185
 31924: 28 99 21                 jump @2527
      :                          @2186 [@dyn 264]
 31927: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 31932: 33 09                    a2 = 0
 31934: 97 8a 0d                 a3 = a1 << 0xd
 31937: d3 a8 08                 a1 = a1 ^ a3
 31940: 98 8a 07                 a3 = a1 >> 0x7
 31943: d3 a8 08                 a1 = a1 ^ a3
 31946: 97 8a 11                 a3 = a1 << 0x11
 31949: d3 a8 08                 a1 = a1 ^ a3
 31952: 3a 0a 60 00 03           a3 = u64 [0x30060]
 31957: 3a 0b a0 00 03           a4 = u64 [0x300a0]
 31962: 3e 08 e0 00 03           u64 [0x300e0] = a1
 31967: ca a8 07                 a0 = a1 * a3
 31970: d6 b7 08                 a1 = a0 mulhu a4
 31973: 98 88 12                 a1 = a1 >> 0x12
 31976: 96 88 40 42 0f           a1 = a1 * 0xf4240
 31981: c9 87 07                 a0 = a0 - a1
 31984: 7b 17 90 00              u64 [sp + 0x90] = a0
 31988: 98 78 01                 a1 = a0 >> 0x1
 31991: 95 88 01                 a1 = a1 + 0x1
 31994: 33 0a ff                 a3 = 0xffffffffffffffff
 31997: 01                       fallthrough
      :                          @2187
 31998: c8 98 0c                 a5 = a1 + a2
 32001: 98 cc 01                 a5 = a5 >> 0x1
 32004: d6 cc 06                 s1 = a5 mulhu a5
 32007: ca cc 0b                 a4 = a5 * a5
 32010: db 6a 0b                 a4 = a3 if s1 != 0
 32013: aa 7b 15                 jump @2189 if a4 == a0
      :                          @2188
 32016: d8 7b 06                 s1 = a4 <u a0
 32019: 95 c5 01                 s0 = a5 + 0x1
 32022: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 32025: da 6c 08                 a1 = a5 if s1 == 0
 32028: db 65 09                 a2 = s0 if s1 != 0
 32031: ae 98 df                 jump @2187 if a1 >=u a2
      :                          @2189
 32034: d3 b7 07                 a0 = a0 ^ a4
 32037: 88 77 01                 a0 = a0 <u 0x1
 32040: 78 17 b0 00              u8 [sp + 0xb0] = a0
 32044: 95 17 90 00              a0 = sp + 0x90
 32048: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32052: 33 07 28 03              a0 = 0x328
 32056: 7b 17 00 01              u64 [sp + 0x100] = a0
 32060: 95 17 b0 00              a0 = sp + 0xb0
 32064: 7b 17 08 01              u64 [sp + 0x108] = a0
 32068: 33 07 74 03              a0 = 0x374
 32072: 7b 17 10 01              u64 [sp + 0x110] = a0
 32076: 33 07 48 0a 01           a0 = 0x10a48
 32081: 7b 17 50 01              u64 [sp + 0x150] = a0
 32085: 49 21 58 01 02           u64 [sp + 344] = 0x2
 32090: 49 21 70 01              u64 [sp + 368] = 0
 32094: 95 18 f8 00              a1 = sp + 0xf8
 32098: 7b 18 60 01              u64 [sp + 0x160] = a1
 32102: 49 21 68 01 02           u64 [sp + 360] = 0x2
 32107: 95 17 c8 00              a0 = sp + 0xc8
 32111: 95 18 50 01              a1 = sp + 0x150
 32115: 50 20 12 02 08 a0        ra = 530, jump @611
      :                          @2190 [@dyn 265]
 32121: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32125: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32129: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32133: 33 07 03                 a0 = 0x3
 32136: 33 08                    a1 = 0
 32138: 33 09                    a2 = 0
 32140: 64 5a                    a3 = s0
 32142: 33 00 14 02              ra = 0x214
 32146: 0a 64                    ecalli 100 // 'log'
 32148: 01                       fallthrough
      :                          @2191 [@dyn 266]
 32149: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 32154: 55 38 00 00 ff 09        jump @2193 if a1 >=u 4294901760
      :                          @2192
 32160: 28 ad 20                 jump @2527
      :                          @2193
 32163: 33 07 f0 02 03           a0 = 0x302f0
 32168: 95 77 00 00 01           a0 = a0 + 0x10000
 32173: 01                       fallthrough
      :                          @2194
 32174: 82 78                    a1 = u64 [a0]
 32176: c9 87 09                 a2 = a0 - a1
 32179: aa 59 06                 jump @2196 if a2 == s0
      :                          @2195
 32182: 28 97 20                 jump @2527
      :                          @2196
 32185: c9 68 09                 a2 = a1 - s1
 32188: 01                       fallthrough
      :                          @2197
 32189: 82 7a                    a3 = u64 [a0]
 32191: ab 8a ef                 jump @2194 if a3 != a1
      :                          @2198
 32194: 7b 79                    u64 [a0] = a2
 32196: 33 0b                    a4 = 0
 32198: 01                       fallthrough
      :                          @2199
 32199: ab 8a e7                 jump @2194 if a3 != a1
      :                          @2200
 32202: 28 83 20                 jump @2527
      :                          @2201 [@dyn 267]
 32205: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32210: 97 89 0d                 a2 = a1 << 0xd
 32213: d3 98 08                 a1 = a1 ^ a2
 32216: 98 89 07                 a2 = a1 >> 0x7
 32219: d3 98 08                 a1 = a1 ^ a2
 32222: 97 89 11                 a2 = a1 << 0x11
 32225: d3 98 08                 a1 = a1 ^ a2
 32228: 3a 09 60 00 03           a2 = u64 [0x30060]
 32233: 3a 0a 98 00 03           a3 = u64 [0x30098]
 32238: 3e 08 e0 00 03           u64 [0x300e0] = a1
 32243: ca 98 07                 a0 = a1 * a2
 32246: 98 78 02                 a1 = a0 >> 0x2
 32249: d6 a8 08                 a1 = a1 mulhu a3
 32252: 98 88 02                 a1 = a1 >> 0x2
 32255: 96 88 64                 a1 = a1 * 0x64
 32258: c9 87 07                 a0 = a0 - a1
 32261: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 32265: 33 00 18 02              ra = 0x218
 32269: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 32272: 7b 10 28                 u64 [sp + 0x28] = ra
 32275: 7b 15 20                 u64 [sp + 0x20] = s0
 32278: 7b 16 18                 u64 [sp + 0x18] = s1
 32281: 7b 17 10                 u64 [sp + 0x10] = a0
 32284: 95 77 01                 a0 = a0 + 0x1
 32287: 7b 17                    u64 [sp] = a0
 32289: 97 79 03                 a2 = a0 << 0x3
 32292: 33 07 f0 02 03           a0 = 0x302f0
 32297: 33 03 f0 02 03           t1 = 0x302f0
 32302: 33 02 00 00 01           t0 = 0x10000
 32307: c8 23 05                 s0 = t1 + t0
 32310: 28 05 c3                 jump @1319
      :                          @2202 [@dyn 268]
 32313: 7b 17 90 00              u64 [sp + 0x90] = a0
 32317: 95 17 b0 00              a0 = sp + 0xb0
 32321: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32325: 33 07 28 03              a0 = 0x328
 32329: 7b 17 00 01              u64 [sp + 0x100] = a0
 32333: 95 18 90 00              a1 = sp + 0x90
 32337: 7b 18 08 01              u64 [sp + 0x108] = a1
 32341: 7b 17 10 01              u64 [sp + 0x110] = a0
 32345: 33 07 80 0a 01           a0 = 0x10a80
 32350: 7b 17 50 01              u64 [sp + 0x150] = a0
 32354: 49 21 58 01 02           u64 [sp + 344] = 0x2
 32359: 49 21 70 01              u64 [sp + 368] = 0
 32363: 95 18 f8 00              a1 = sp + 0xf8
 32367: 7b 18 60 01              u64 [sp + 0x160] = a1
 32371: 49 21 68 01 02           u64 [sp + 360] = 0x2
 32376: 95 17 c8 00              a0 = sp + 0xc8
 32380: 95 18 50 01              a1 = sp + 0x150
 32384: 50 20 1a 02 fb 9e        ra = 538, jump @611
      :                          @2203 [@dyn 269]
 32390: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32394: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32398: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32402: 33 07 03                 a0 = 0x3
 32405: 33 08                    a1 = 0
 32407: 33 09                    a2 = 0
 32409: 64 5a                    a3 = s0
 32411: 33 00 1c 02              ra = 0x21c
 32415: 0a 64                    ecalli 100 // 'log'
 32417: 01                       fallthrough
      :                          @2204 [@dyn 270]
 32418: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 32423: 55 38 00 00 ff 09        jump @2206 if a1 >=u 4294901760
      :                          @2205
 32429: 28 a0 1f                 jump @2527
      :                          @2206
 32432: 33 07 f0 02 03           a0 = 0x302f0
 32437: 95 77 00 00 01           a0 = a0 + 0x10000
 32442: 01                       fallthrough
      :                          @2207
 32443: 82 78                    a1 = u64 [a0]
 32445: c9 87 09                 a2 = a0 - a1
 32448: aa 59 06                 jump @2209 if a2 == s0
      :                          @2208
 32451: 28 8a 1f                 jump @2527
      :                          @2209
 32454: c9 68 09                 a2 = a1 - s1
 32457: 01                       fallthrough
      :                          @2210
 32458: 82 7a                    a3 = u64 [a0]
 32460: ab 8a ef                 jump @2207 if a3 != a1
      :                          @2211
 32463: 7b 79                    u64 [a0] = a2
 32465: 33 0b                    a4 = 0
 32467: 01                       fallthrough
      :                          @2212
 32468: ab 8a e7                 jump @2207 if a3 != a1
      :                          @2213
 32471: 28 76 1f                 jump @2527
      :                          @2214 [@dyn 271]
 32474: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32479: 97 89 0d                 a2 = a1 << 0xd
 32482: d3 98 08                 a1 = a1 ^ a2
 32485: 98 89 07                 a2 = a1 >> 0x7
 32488: d3 98 08                 a1 = a1 ^ a2
 32491: 97 89 11                 a2 = a1 << 0x11
 32494: d3 98 08                 a1 = a1 ^ a2
 32497: 3a 09 60 00 03           a2 = u64 [0x30060]
 32502: 3a 0a 98 00 03           a3 = u64 [0x30098]
 32507: 3e 08 e0 00 03           u64 [0x300e0] = a1
 32512: ca 98 07                 a0 = a1 * a2
 32515: 98 78 02                 a1 = a0 >> 0x2
 32518: d6 a8 08                 a1 = a1 mulhu a3
 32521: 98 88 02                 a1 = a1 >> 0x2
 32524: 96 88 64                 a1 = a1 * 0x64
 32527: c9 87 07                 a0 = a0 - a1
 32530: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 32534: 33 00 20 02              ra = 0x220
 32538: 95 11 e8                 sp = sp + 0xffffffffffffffe8
 32541: 7b 10 10                 u64 [sp + 0x10] = ra
 32544: 7b 15 08                 u64 [sp + 0x8] = s0
 32547: 7b 16                    u64 [sp] = s1
 32549: 64 73                    t1 = a0
 32551: 95 78 01                 a1 = a0 + 0x1
 32554: 97 87 03                 a0 = a1 << 0x3
 32557: 33 04 f0 02 03           t2 = 0x302f0
 32562: 33 02 00 00 01           t0 = 0x10000
 32567: c8 24 00                 ra = t2 + t0
 32570: 28 60 c3                 jump @1349
      :                          @2215 [@dyn 272]
 32573: 7b 17 90 00              u64 [sp + 0x90] = a0
 32577: 95 17 b0 00              a0 = sp + 0xb0
 32581: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 32585: 33 07 28 03              a0 = 0x328
 32589: 7b 17 00 01              u64 [sp + 0x100] = a0
 32593: 95 17 90 00              a0 = sp + 0x90
 32597: 7b 17 08 01              u64 [sp + 0x108] = a0
 32601: 33 07 80 03              a0 = 0x380
 32605: 7b 17 10 01              u64 [sp + 0x110] = a0
 32609: 33 07 a0 0a 01           a0 = 0x10aa0
 32614: 7b 17 50 01              u64 [sp + 0x150] = a0
 32618: 49 21 58 01 02           u64 [sp + 344] = 0x2
 32623: 49 21 70 01              u64 [sp + 368] = 0
 32627: 95 18 f8 00              a1 = sp + 0xf8
 32631: 7b 18 60 01              u64 [sp + 0x160] = a1
 32635: 49 21 68 01 02           u64 [sp + 360] = 0x2
 32640: 95 17 c8 00              a0 = sp + 0xc8
 32644: 95 18 50 01              a1 = sp + 0x150
 32648: 50 20 22 02 f3 9d        ra = 546, jump @611
      :                          @2216 [@dyn 273]
 32654: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 32658: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 32662: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 32666: 33 07 03                 a0 = 0x3
 32669: 33 08                    a1 = 0
 32671: 33 09                    a2 = 0
 32673: 64 5a                    a3 = s0
 32675: 33 00 24 02              ra = 0x224
 32679: 0a 64                    ecalli 100 // 'log'
 32681: 01                       fallthrough
      :                          @2217 [@dyn 274]
 32682: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 32687: 55 38 00 00 ff 09        jump @2219 if a1 >=u 4294901760
      :                          @2218
 32693: 28 98 1e                 jump @2527
      :                          @2219
 32696: 33 07 f0 02 03           a0 = 0x302f0
 32701: 95 77 00 00 01           a0 = a0 + 0x10000
 32706: 01                       fallthrough
      :                          @2220
 32707: 82 78                    a1 = u64 [a0]
 32709: c9 87 09                 a2 = a0 - a1
 32712: aa 59 06                 jump @2222 if a2 == s0
      :                          @2221
 32715: 28 82 1e                 jump @2527
      :                          @2222
 32718: c9 68 09                 a2 = a1 - s1
 32721: 01                       fallthrough
      :                          @2223
 32722: 82 7a                    a3 = u64 [a0]
 32724: ab 8a ef                 jump @2220 if a3 != a1
      :                          @2224
 32727: 7b 79                    u64 [a0] = a2
 32729: 33 0b                    a4 = 0
 32731: 01                       fallthrough
      :                          @2225
 32732: ab 8a e7                 jump @2220 if a3 != a1
      :                          @2226
 32735: 28 6e 1e                 jump @2527
      :                          @2227 [@dyn 275]
 32738: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 32743: 97 89 0d                 a2 = a1 << 0xd
 32746: d3 89 09                 a2 = a2 ^ a1
 32749: 98 9a 07                 a3 = a2 >> 0x7
 32752: 3a 08 60 00 03           a1 = u64 [0x30060]
 32757: d3 a9 09                 a2 = a2 ^ a3
 32760: 97 9a 11                 a3 = a2 << 0x11
 32763: d3 a9 09                 a2 = a2 ^ a3
 32766: ca 89 0a                 a3 = a2 * a1
 32769: 3a 0b 68 00 03           a4 = u64 [0x30068]
 32774: 3e 09 e0 00 03           u64 [0x300e0] = a2
 32779: 98 a9 03                 a2 = a3 >> 0x3
 32782: d6 b9 09                 a2 = a2 mulhu a4
 32785: 98 99 04                 a2 = a2 >> 0x4
 32788: 33 0c e8 03              a5 = 0x3e8
 32792: ca c9 09                 a2 = a2 * a5
 32795: c9 9a 0a                 a3 = a3 - a2
 32798: 95 aa 01                 a3 = a3 + 0x1
 32801: 7b 1a 80 00              u64 [sp + 0x80] = a3
 32805: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 32810: 97 9a 0d                 a3 = a2 << 0xd
 32813: d3 a9 09                 a2 = a2 ^ a3
 32816: 98 9a 07                 a3 = a2 >> 0x7
 32819: d3 a9 09                 a2 = a2 ^ a3
 32822: 97 9a 11                 a3 = a2 << 0x11
 32825: d3 a9 09                 a2 = a2 ^ a3
 32828: ca 89 0a                 a3 = a2 * a1
 32831: 3e 09 e0 00 03           u64 [0x300e0] = a2
 32836: 98 a9 03                 a2 = a3 >> 0x3
 32839: d6 b9 09                 a2 = a2 mulhu a4
 32842: 98 99 04                 a2 = a2 >> 0x4
 32845: ca c9 09                 a2 = a2 * a5
 32848: c9 9a 0a                 a3 = a3 - a2
 32851: 7b 1a 88 00              u64 [sp + 0x88] = a3
 32855: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 32860: 97 9a 0d                 a3 = a2 << 0xd
 32863: d3 a9 09                 a2 = a2 ^ a3
 32866: 98 9a 07                 a3 = a2 >> 0x7
 32869: d3 a9 09                 a2 = a2 ^ a3
 32872: 97 9a 11                 a3 = a2 << 0x11
 32875: d3 a9 09                 a2 = a2 ^ a3
 32878: 3a 0a 70 00 03           a3 = u64 [0x30070]
 32883: ca 89 08                 a1 = a2 * a1
 32886: 3e 09 e0 00 03           u64 [0x300e0] = a2
 32891: d6 a8 07                 a0 = a1 mulhu a3
 32894: c9 78 09                 a2 = a1 - a0
 32897: 98 99 01                 a2 = a2 >> 0x1
 32900: c8 97 07                 a0 = a0 + a2
 32903: 98 77 09                 a0 = a0 >> 0x9
 32906: 96 77 e7 03              a0 = a0 * 0x3e7
 32910: c9 78 09                 a2 = a1 - a0
 32913: 82 1a 88 00              a3 = u64 [sp + 0x88]
 32917: 82 17 80 00              a0 = u64 [sp + 0x80]
 32921: 95 98 01                 a1 = a2 + 0x1
 32924: 7b 18 68 02              u64 [sp + 0x268] = a1
 32928: 8e 99                    a2 = a2 >u 0
 32930: 52 0a 06                 jump @2229 if a3 != 0
      :                          @2228
 32933: 28 2b 18                 jump @2453
      :                          @2229
 32936: 64 7b                    a4 = a0
 32938: 28 0e                    jump @2232
      :                          @2230
 32940: 98 aa 01                 a3 = a3 >> 0x1
 32943: ca bb 0b                 a4 = a4 * a4
 32946: 52 0a 06                 jump @2232 if a3 != 0
      :                          @2231
 32949: 28 1b 18                 jump @2453
      :                          @2232
 32952: 84 ac 01                 a5 = a3 & 0x1
 32955: cd 8b 0b                 a4 = a4 %u a1
 32958: 51 0c ee                 jump @2230 if a5 == 0
      :                          @2233
 32961: ca 9b 09                 a2 = a4 * a2
 32964: cd 89 09                 a2 = a2 %u a1
 32967: 28 e5                    jump @2230
      :                          @2234 [@dyn 276]
 32969: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 32974: 97 78 0d                 a1 = a0 << 0xd
 32977: d3 87 07                 a0 = a0 ^ a1
 32980: 98 78 07                 a1 = a0 >> 0x7
 32983: d3 87 07                 a0 = a0 ^ a1
 32986: 97 78 11                 a1 = a0 << 0x11
 32989: d3 78 02                 t0 = a1 ^ a0
 32992: 3e 02 e0 00 03           u64 [0x300e0] = t0
 32997: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33002: 3a 03 60 00 03           t1 = u64 [0x30060]
 33007: 97 8a 0d                 a3 = a1 << 0xd
 33010: d3 a8 08                 a1 = a1 ^ a3
 33013: 98 8a 07                 a3 = a1 >> 0x7
 33016: d3 a8 08                 a1 = a1 ^ a3
 33019: 97 8a 11                 a3 = a1 << 0x11
 33022: d3 a8 08                 a1 = a1 ^ a3
 33025: ca 38 0a                 a3 = a1 * t1
 33028: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33033: 3a 08 90 00 03           a1 = u64 [0x30090]
 33038: 98 ab 01                 a4 = a3 >> 0x1
 33041: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 33046: d6 8b 0b                 a4 = a4 mulhu a1
 33049: 98 bb 04                 a4 = a4 >> 0x4
 33052: 97 6c 0d                 a5 = s1 << 0xd
 33055: d3 c6 06                 s1 = s1 ^ a5
 33058: 98 6c 07                 a5 = s1 >> 0x7
 33061: d3 6c 0c                 a5 = a5 ^ s1
 33064: 97 c5 11                 s0 = a5 << 0x11
 33067: d3 c5 05                 s0 = s0 ^ a5
 33070: 3e 05 e0 00 03           u64 [0x300e0] = s0
 33075: 3a 0c e0 00 03           a5 = u64 [0x300e0]
 33080: 96 bb 62                 a4 = a4 * 0x62
 33083: c9 ba 0a                 a3 = a3 - a4
 33086: 97 cb 0d                 a4 = a5 << 0xd
 33089: d3 cb 0b                 a4 = a4 ^ a5
 33092: 98 bc 07                 a5 = a4 >> 0x7
 33095: d3 cb 0b                 a4 = a4 ^ a5
 33098: 97 bc 11                 a5 = a4 << 0x11
 33101: d3 cb 0b                 a4 = a4 ^ a5
 33104: ca 3b 07                 a0 = a4 * t1
 33107: 98 7c 01                 a5 = a0 >> 0x1
 33110: d6 8c 0c                 a5 = a5 mulhu a1
 33113: 95 a8 02                 a1 = a3 + 0x2
 33116: 98 cc 04                 a5 = a5 >> 0x4
 33119: 96 ca 62                 a3 = a5 * 0x62
 33122: c9 a7 07                 a0 = a0 - a3
 33125: 95 7a 02                 a3 = a0 + 0x2
 33128: 3e 0b e0 00 03           u64 [0x300e0] = a4
 33133: 64 86                    s1 = a1
 33135: 64 a9                    a2 = a3
 33137: 01                       fallthrough
      :                          @2235
 33138: 64 9c                    a5 = a2
 33140: cd 96 09                 a2 = s1 %u a2
 33143: 64 c6                    s1 = a5
 33145: 52 09 f9                 jump @2235 if a2 != 0
      :                          @2236
 33148: 49 11 10 ff ff fe        u64 [sp + 16] = 0xfffffffffffeffff
 33154: 7b 13 08                 u64 [sp + 0x8] = t1
 33157: 52 1c 01 df 00           jump @2246 if a5 != 1
      :                          @2237
 33162: 3a 07 98 00 03           a0 = u64 [0x30098]
 33167: ca 35 09                 a2 = s0 * t1
 33170: ca 32 0b                 a4 = t0 * t1
 33173: 98 9c 02                 a5 = a2 >> 0x2
 33176: d6 7c 0c                 a5 = a5 mulhu a0
 33179: 98 cc 02                 a5 = a5 >> 0x2
 33182: 96 cc 64                 a5 = a5 * 0x64
 33185: c9 c9 09                 a2 = a2 - a5
 33188: 98 bc 02                 a5 = a4 >> 0x2
 33191: d6 7c 07                 a0 = a5 mulhu a0
 33194: 98 77 02                 a0 = a0 >> 0x2
 33197: 96 77 64                 a0 = a0 * 0x64
 33200: c9 7b 07                 a0 = a4 - a0
 33203: 33 00 2a 02              ra = 0x22a
 33207: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 33210: 7b 10 38                 u64 [sp + 0x38] = ra
 33213: 7b 15 30                 u64 [sp + 0x30] = s0
 33216: 49 11 28 64              u64 [sp + 40] = 0x64
 33220: 64 a5                    s0 = a3
 33222: 7b 19                    u64 [sp] = a2
 33224: 64 86                    s1 = a1
 33226: 7b 17 08                 u64 [sp + 0x8] = a0
 33229: 95 17 10                 a0 = sp + 0x10
 33232: 64 a9                    a2 = a3
 33234: 33 00 e2 00              ra = 0xe2
 33238: 28 1a a5                 jump @762
      :                          @2238 [@dyn 277]
 33241: 7b 17 90 00              u64 [sp + 0x90] = a0
 33245: 95 17 90 00              a0 = sp + 0x90
 33249: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 33253: 33 07 80 03              a0 = 0x380
 33257: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 33261: 33 07 28 0b 01           a0 = 0x10b28
 33266: 7b 17 50 01              u64 [sp + 0x150] = a0
 33270: 49 21 58 01 01           u64 [sp + 344] = 0x1
 33275: 49 21 70 01              u64 [sp + 368] = 0
 33279: 95 17 c8 00              a0 = sp + 0xc8
 33283: 7b 17 60 01              u64 [sp + 0x160] = a0
 33287: 49 21 68 01 01           u64 [sp + 360] = 0x1
 33292: 95 17 f8 00              a0 = sp + 0xf8
 33296: 95 18 50 01              a1 = sp + 0x150
 33300: 50 20 2c 02 67 9b        ra = 556, jump @611
      :                          @2239 [@dyn 278]
 33306: 82 15 00 01              s0 = u64 [sp + 0x100]
 33310: 82 1b 08 01              a4 = u64 [sp + 0x108]
 33314: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 33318: 33 07 03                 a0 = 0x3
 33321: 33 08                    a1 = 0
 33323: 33 09                    a2 = 0
 33325: 64 5a                    a3 = s0
 33327: 33 00 2e 02              ra = 0x22e
 33331: 0a 64                    ecalli 100 // 'log'
 33333: 01                       fallthrough
      :                          @2240 [@dyn 279]
 33334: 82 13 08                 t1 = u64 [sp + 0x8]
 33337: 82 17 10                 a0 = u64 [sp + 0x10]
 33340: c8 67 07                 a0 = a0 + s1
 33343: 53 37 00 00 ff 25        jump @2246 if a0 <u 4294901760
      :                          @2241
 33349: 33 07 f0 02 03           a0 = 0x302f0
 33354: 95 77 00 00 01           a0 = a0 + 0x10000
 33359: 01                       fallthrough
      :                          @2242
 33360: 82 78                    a1 = u64 [a0]
 33362: c9 87 09                 a2 = a0 - a1
 33365: ab 59 0f                 jump @2246 if a2 != s0
      :                          @2243
 33368: c9 68 09                 a2 = a1 - s1
 33371: 01                       fallthrough
      :                          @2244
 33372: 82 7a                    a3 = u64 [a0]
 33374: ab 8a f2                 jump @2242 if a3 != a1
      :                          @2245
 33377: 7b 79                    u64 [a0] = a2
 33379: 01                       fallthrough
      :                          @2246
 33380: 49 21 b0 00 02           u64 [sp + 176] = 0x2
 33385: 49 21 b8 00 03           u64 [sp + 184] = 0x3
 33390: 49 21 c0 00 05           u64 [sp + 192] = 0x5
 33395: 33 0c e0 00 03           a5 = 0x300e0
 33400: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 33405: 97 78 0d                 a1 = a0 << 0xd
 33408: d3 87 07                 a0 = a0 ^ a1
 33411: 98 78 07                 a1 = a0 >> 0x7
 33414: d3 87 07                 a0 = a0 ^ a1
 33417: 97 78 11                 a1 = a0 << 0x11
 33420: d3 78 08                 a1 = a1 ^ a0
 33423: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33428: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 33433: 84 77 01                 a0 = a0 & 0x1
 33436: 97 89 0d                 a2 = a1 << 0xd
 33439: d3 98 08                 a1 = a1 ^ a2
 33442: 98 89 07                 a2 = a1 >> 0x7
 33445: d3 98 08                 a1 = a1 ^ a2
 33448: 97 89 11                 a2 = a1 << 0x11
 33451: d3 98 08                 a1 = a1 ^ a2
 33454: ca 38 09                 a2 = a1 * t1
 33457: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33462: 14 08 ab aa aa aa aa aa aa aa a1 = 0xaaaaaaaaaaaaaaab
 33472: d6 89 08                 a1 = a2 mulhu a1
 33475: 98 8a 01                 a3 = a1 >> 0x1
 33478: 84 88 fe                 a1 = a1 & 0xfffffffffffffffe
 33481: 3a 0b e0 00 03           a4 = u64 [0x300e0]
 33486: c8 a8 08                 a1 = a1 + a3
 33489: c9 89 09                 a2 = a2 - a1
 33492: 97 b8 0d                 a1 = a4 << 0xd
 33495: d3 b8 08                 a1 = a1 ^ a4
 33498: 98 8a 07                 a3 = a1 >> 0x7
 33501: d3 a8 08                 a1 = a1 ^ a3
 33504: 97 8a 11                 a3 = a1 << 0x11
 33507: d3 a8 08                 a1 = a1 ^ a3
 33510: ca 38 0a                 a3 = a1 * t1
 33513: 3e 08 e0 00 03           u64 [0x300e0] = a1
 33518: 14 08 cd cc cc cc cc cc cc cc a1 = 0xcccccccccccccccd
 33528: d6 8a 08                 a1 = a3 mulhu a1
 33531: 98 8b 02                 a4 = a1 >> 0x2
 33534: 84 88 fc                 a1 = a1 & 0xfffffffffffffffc
 33537: c8 b8 08                 a1 = a1 + a4
 33540: c9 8a 0a                 a3 = a3 - a1
 33543: 7b 17 90 00              u64 [sp + 0x90] = a0
 33547: 7b 19 98 00              u64 [sp + 0x98] = a2
 33551: 7b 1a a0 00              u64 [sp + 0xa0] = a3
 33555: 95 17 90 00              a0 = sp + 0x90
 33559: 95 18 b0 00              a1 = sp + 0xb0
 33563: 50 20 30 02 77 ad        ra = 560, jump @985
      :                          @2247 [@dyn 280]
 33569: 7b 17 68 02              u64 [sp + 0x268] = a0
 33573: 95 17 68 02              a0 = sp + 0x268
 33577: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 33581: 33 07 80 03              a0 = 0x380
 33585: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 33589: 33 07 48 0b 01           a0 = 0x10b48
 33594: 7b 17 50 01              u64 [sp + 0x150] = a0
 33598: 49 21 58 01 01           u64 [sp + 344] = 0x1
 33603: 49 21 70 01              u64 [sp + 368] = 0
 33607: 95 17 c8 00              a0 = sp + 0xc8
 33611: 7b 17 60 01              u64 [sp + 0x160] = a0
 33615: 49 21 68 01 01           u64 [sp + 360] = 0x1
 33620: 95 17 f8 00              a0 = sp + 0xf8
 33624: 95 18 50 01              a1 = sp + 0x150
 33628: 50 20 32 02 1f 9a        ra = 562, jump @611
      :                          @2248 [@dyn 281]
 33634: 82 15 00 01              s0 = u64 [sp + 0x100]
 33638: 82 1b 08 01              a4 = u64 [sp + 0x108]
 33642: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 33646: 33 07 03                 a0 = 0x3
 33649: 33 08                    a1 = 0
 33651: 33 09                    a2 = 0
 33653: 64 5a                    a3 = s0
 33655: 33 00 34 02              ra = 0x234
 33659: 0a 64                    ecalli 100 // 'log'
 33661: 01                       fallthrough
      :                          @2249 [@dyn 282]
 33662: 82 17 10                 a0 = u64 [sp + 0x10]
 33665: c8 67 07                 a0 = a0 + s1
 33668: 53 37 00 00 ff 25        jump @2255 if a0 <u 4294901760
      :                          @2250
 33674: 33 07 f0 02 03           a0 = 0x302f0
 33679: 95 77 00 00 01           a0 = a0 + 0x10000
 33684: 01                       fallthrough
      :                          @2251
 33685: 82 78                    a1 = u64 [a0]
 33687: c9 87 09                 a2 = a0 - a1
 33690: ab 59 0f                 jump @2255 if a2 != s0
      :                          @2252
 33693: c9 68 09                 a2 = a1 - s1
 33696: 01                       fallthrough
      :                          @2253
 33697: 82 7a                    a3 = u64 [a0]
 33699: ab 8a f2                 jump @2251 if a3 != a1
      :                          @2254
 33702: 7b 79                    u64 [a0] = a2
 33704: 01                       fallthrough
      :                          @2255
 33705: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 33710: 97 78 0d                 a1 = a0 << 0xd
 33713: d3 87 07                 a0 = a0 ^ a1
 33716: 98 78 07                 a1 = a0 >> 0x7
 33719: d3 87 07                 a0 = a0 ^ a1
 33722: 97 78 11                 a1 = a0 << 0x11
 33725: d3 87 07                 a0 = a0 ^ a1
 33728: 3a 08 a0 00 03           a1 = u64 [0x300a0]
 33733: 82 19 08                 a2 = u64 [sp + 0x8]
 33736: ca 97 09                 a2 = a0 * a2
 33739: 3e 07 e0 00 03           u64 [0x300e0] = a0
 33744: d6 89 07                 a0 = a2 mulhu a1
 33747: 98 77 12                 a0 = a0 >> 0x12
 33750: 96 77 40 42 0f           a0 = a0 * 0xf4240
 33755: c9 79 09                 a2 = a2 - a0
 33758: 7b 19 80 00              u64 [sp + 0x80] = a2
 33762: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 33767: 97 78 0d                 a1 = a0 << 0xd
 33770: d3 87 07                 a0 = a0 ^ a1
 33773: 98 78 07                 a1 = a0 >> 0x7
 33776: d3 78 08                 a1 = a1 ^ a0
 33779: 97 87 11                 a0 = a1 << 0x11
 33782: d3 87 07                 a0 = a0 ^ a1
 33785: 3e 07 e0 00 03           u64 [0x300e0] = a0
 33790: 82 17 80 00              a0 = u64 [sp + 0x80]
 33794: 84 88 03                 a1 = a1 & 0x3
 33797: 95 88 02                 a1 = a1 + 0x2
 33800: 7b 18 88 00              u64 [sp + 0x88] = a1
 33804: 33 00 36 02              ra = 0x236
 33808: 33 03                    t1 = 0
 33810: 33 09 40                 a2 = 0x40
 33813: c1 89 09                 i32 a2 = a2 /u a1
 33816: 9b 99 01                 a2 = 0x1 << a2
 33819: e6 97 0a                 a3 = minu(a0, a2)
 33822: 95 a4 01                 t2 = a3 + 0x1
 33825: 83 82 01                 i32 t0 = a1 + 0x1
 33828: 33 0b ff                 a4 = 0xffffffffffffffff
 33831: 28 73 a3                 jump @773
      :                          @2256 [@dyn 283]
 33834: 7b 17 68 02              u64 [sp + 0x268] = a0
 33838: 95 17 80 00              a0 = sp + 0x80
 33842: 7b 17 50 01              u64 [sp + 0x150] = a0
 33846: 33 07 28 03              a0 = 0x328
 33850: 7b 17 58 01              u64 [sp + 0x158] = a0
 33854: 95 18 88 00              a1 = sp + 0x88
 33858: 7b 18 60 01              u64 [sp + 0x160] = a1
 33862: 7b 17 68 01              u64 [sp + 0x168] = a0
 33866: 95 18 68 02              a1 = sp + 0x268
 33870: 7b 18 70 01              u64 [sp + 0x170] = a1
 33874: 7b 17 78 01              u64 [sp + 0x178] = a0
 33878: 33 07 68 0b 01           a0 = 0x10b68
 33883: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 33887: 49 21 00 01 03           u64 [sp + 256] = 0x3
 33892: 49 21 18 01              u64 [sp + 280] = 0
 33896: 95 18 50 01              a1 = sp + 0x150
 33900: 7b 18 08 01              u64 [sp + 0x108] = a1
 33904: 49 21 10 01 03           u64 [sp + 272] = 0x3
 33909: 95 17 c8 00              a0 = sp + 0xc8
 33913: 95 18 f8 00              a1 = sp + 0xf8
 33917: 50 20 38 02 fe 98        ra = 568, jump @611
      :                          @2257 [@dyn 284]
 33923: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 33927: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 33931: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 33935: 33 07 03                 a0 = 0x3
 33938: 33 08                    a1 = 0
 33940: 33 09                    a2 = 0
 33942: 64 5a                    a3 = s0
 33944: 33 00 3a 02              ra = 0x23a
 33948: 0a 64                    ecalli 100 // 'log'
 33950: 01                       fallthrough
      :                          @2258 [@dyn 285]
 33951: 82 17 10                 a0 = u64 [sp + 0x10]
 33954: c8 67 07                 a0 = a0 + s1
 33957: 55 37 00 00 ff 09        jump @2260 if a0 >=u 4294901760
      :                          @2259
 33963: 28 a2 19                 jump @2527
      :                          @2260
 33966: 33 07 f0 02 03           a0 = 0x302f0
 33971: 95 77 00 00 01           a0 = a0 + 0x10000
 33976: 01                       fallthrough
      :                          @2261
 33977: 82 78                    a1 = u64 [a0]
 33979: c9 87 09                 a2 = a0 - a1
 33982: aa 59 06                 jump @2263 if a2 == s0
      :                          @2262
 33985: 28 8c 19                 jump @2527
      :                          @2263
 33988: c9 68 09                 a2 = a1 - s1
 33991: 01                       fallthrough
      :                          @2264
 33992: 82 7a                    a3 = u64 [a0]
 33994: ab 8a ef                 jump @2261 if a3 != a1
      :                          @2265
 33997: 7b 79                    u64 [a0] = a2
 33999: 33 0b                    a4 = 0
 34001: 01                       fallthrough
      :                          @2266
 34002: ab 8a e7                 jump @2261 if a3 != a1
      :                          @2267
 34005: 28 78 19                 jump @2527
      :                          @2268 [@dyn 286]
 34008: 49 21 30 01              u64 [sp + 304] = 0
 34012: 49 21 28 01              u64 [sp + 296] = 0
 34016: 49 21 20 01              u64 [sp + 288] = 0
 34020: 49 21 18 01              u64 [sp + 280] = 0
 34024: 49 21 10 01              u64 [sp + 272] = 0
 34028: 49 21 08 01              u64 [sp + 264] = 0
 34032: 49 21 00 01              u64 [sp + 256] = 0
 34036: 49 21 f8 00              u64 [sp + 248] = 0
 34040: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 34045: 97 89 0d                 a2 = a1 << 0xd
 34048: d3 89 09                 a2 = a2 ^ a1
 34051: 98 9a 07                 a3 = a2 >> 0x7
 34054: 3a 08 60 00 03           a1 = u64 [0x30060]
 34059: d3 a9 09                 a2 = a2 ^ a3
 34062: 97 9a 11                 a3 = a2 << 0x11
 34065: d3 a9 09                 a2 = a2 ^ a3
 34068: ca 89 0a                 a3 = a2 * a1
 34071: 3e 09 e0 00 03           u64 [0x300e0] = a2
 34076: 14 09 f1 f0 f0 f0 f0 f0 f0 f0 a2 = 0xf0f0f0f0f0f0f0f1
 34086: d6 9a 0b                 a4 = a3 mulhu a2
 34089: 98 bc 04                 a5 = a4 >> 0x4
 34092: 84 bb f0                 a4 = a4 & 0xfffffffffffffff0
 34095: c8 cb 0b                 a4 = a4 + a5
 34098: c9 ba 0a                 a3 = a3 - a4
 34101: 7b 1a f8 00              u64 [sp + 0xf8] = a3
 34105: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34110: 97 ab 0d                 a4 = a3 << 0xd
 34113: d3 ba 0a                 a3 = a3 ^ a4
 34116: 98 ab 07                 a4 = a3 >> 0x7
 34119: d3 ba 0a                 a3 = a3 ^ a4
 34122: 97 ab 11                 a4 = a3 << 0x11
 34125: d3 ba 0a                 a3 = a3 ^ a4
 34128: ca 8a 0b                 a4 = a3 * a1
 34131: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34136: d6 9b 0a                 a3 = a4 mulhu a2
 34139: 98 ac 04                 a5 = a3 >> 0x4
 34142: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34145: c8 ca 0a                 a3 = a3 + a5
 34148: c9 ab 0b                 a4 = a4 - a3
 34151: 7b 1b 00 01              u64 [sp + 0x100] = a4
 34155: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34160: 97 ab 0d                 a4 = a3 << 0xd
 34163: d3 ba 0a                 a3 = a3 ^ a4
 34166: 98 ab 07                 a4 = a3 >> 0x7
 34169: d3 ba 0a                 a3 = a3 ^ a4
 34172: 97 ab 11                 a4 = a3 << 0x11
 34175: d3 ba 0a                 a3 = a3 ^ a4
 34178: ca 8a 0b                 a4 = a3 * a1
 34181: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34186: d6 9b 0a                 a3 = a4 mulhu a2
 34189: 98 ac 04                 a5 = a3 >> 0x4
 34192: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34195: c8 ca 0a                 a3 = a3 + a5
 34198: c9 ab 0b                 a4 = a4 - a3
 34201: 7b 1b 08 01              u64 [sp + 0x108] = a4
 34205: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34210: 97 ab 0d                 a4 = a3 << 0xd
 34213: d3 ba 0a                 a3 = a3 ^ a4
 34216: 98 ab 07                 a4 = a3 >> 0x7
 34219: d3 ba 0a                 a3 = a3 ^ a4
 34222: 97 ab 11                 a4 = a3 << 0x11
 34225: d3 ba 0a                 a3 = a3 ^ a4
 34228: ca 8a 0b                 a4 = a3 * a1
 34231: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34236: d6 9b 0a                 a3 = a4 mulhu a2
 34239: 98 ac 04                 a5 = a3 >> 0x4
 34242: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34245: c8 ca 0a                 a3 = a3 + a5
 34248: c9 ab 0b                 a4 = a4 - a3
 34251: 7b 1b 10 01              u64 [sp + 0x110] = a4
 34255: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34260: 97 ab 0d                 a4 = a3 << 0xd
 34263: d3 ba 0a                 a3 = a3 ^ a4
 34266: 98 ab 07                 a4 = a3 >> 0x7
 34269: d3 ba 0a                 a3 = a3 ^ a4
 34272: 97 ab 11                 a4 = a3 << 0x11
 34275: d3 ba 0a                 a3 = a3 ^ a4
 34278: ca 8a 0b                 a4 = a3 * a1
 34281: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34286: d6 9b 0a                 a3 = a4 mulhu a2
 34289: 98 ac 04                 a5 = a3 >> 0x4
 34292: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34295: c8 ca 0a                 a3 = a3 + a5
 34298: c9 ab 0b                 a4 = a4 - a3
 34301: 7b 1b 18 01              u64 [sp + 0x118] = a4
 34305: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34310: 97 ab 0d                 a4 = a3 << 0xd
 34313: d3 ba 0a                 a3 = a3 ^ a4
 34316: 98 ab 07                 a4 = a3 >> 0x7
 34319: d3 ba 0a                 a3 = a3 ^ a4
 34322: 97 ab 11                 a4 = a3 << 0x11
 34325: d3 ba 0a                 a3 = a3 ^ a4
 34328: ca 8a 0b                 a4 = a3 * a1
 34331: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34336: d6 9b 0a                 a3 = a4 mulhu a2
 34339: 98 ac 04                 a5 = a3 >> 0x4
 34342: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34345: c8 ca 0a                 a3 = a3 + a5
 34348: c9 ab 0b                 a4 = a4 - a3
 34351: 7b 1b 20 01              u64 [sp + 0x120] = a4
 34355: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34360: 97 ab 0d                 a4 = a3 << 0xd
 34363: d3 ba 0a                 a3 = a3 ^ a4
 34366: 98 ab 07                 a4 = a3 >> 0x7
 34369: d3 ba 0a                 a3 = a3 ^ a4
 34372: 97 ab 11                 a4 = a3 << 0x11
 34375: d3 ba 0a                 a3 = a3 ^ a4
 34378: ca 8a 0b                 a4 = a3 * a1
 34381: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34386: d6 9b 0a                 a3 = a4 mulhu a2
 34389: 98 ac 04                 a5 = a3 >> 0x4
 34392: 84 aa f0                 a3 = a3 & 0xfffffffffffffff0
 34395: c8 ca 0a                 a3 = a3 + a5
 34398: c9 ab 0b                 a4 = a4 - a3
 34401: 7b 1b 28 01              u64 [sp + 0x128] = a4
 34405: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 34410: 97 ab 0d                 a4 = a3 << 0xd
 34413: d3 ba 0a                 a3 = a3 ^ a4
 34416: 98 ab 07                 a4 = a3 >> 0x7
 34419: d3 ba 0a                 a3 = a3 ^ a4
 34422: 97 ab 11                 a4 = a3 << 0x11
 34425: d3 ba 0a                 a3 = a3 ^ a4
 34428: ca 8a 08                 a1 = a3 * a1
 34431: 3e 0a e0 00 03           u64 [0x300e0] = a3
 34436: d6 98 07                 a0 = a1 mulhu a2
 34439: 98 79 04                 a2 = a0 >> 0x4
 34442: 84 77 f0                 a0 = a0 & 0xfffffffffffffff0
 34445: c8 97 07                 a0 = a0 + a2
 34448: c9 78 08                 a1 = a1 - a0
 34451: 7b 18 30 01              u64 [sp + 0x130] = a1
 34455: 95 15 50 01              s0 = sp + 0x150
 34459: 95 17 50 01              a0 = sp + 0x150
 34463: 95 18 f8 00              a1 = sp + 0xf8
 34467: 95 16 f8 00              s1 = sp + 0xf8
 34471: 33 00 3e 02              ra = 0x23e
 34475: 95 11 60 ff              sp = sp + 0xffffffffffffff60
 34479: 7b 10 98 00              u64 [sp + 0x98] = ra
 34483: 7b 15 90 00              u64 [sp + 0x90] = s0
 34487: 7b 16 88 00              u64 [sp + 0x88] = s1
 34491: 7b 17                    u64 [sp] = a0
 34493: 33 00                    ra = 0
 34495: 82 87                    a0 = u64 [a1]
 34497: 14 0a f1 f0 f0 f0 f0 f0 f0 f0 a3 = 0xf0f0f0f0f0f0f0f1
 34507: d6 a7 09                 a2 = a0 mulhu a3
 34510: 98 9b 04                 a4 = a2 >> 0x4
 34513: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 34516: c8 b9 09                 a2 = a2 + a4
 34519: c9 97 07                 a0 = a0 - a2
 34522: 82 89 08                 a2 = u64 [a1 + 0x8]
 34525: 82 8c 10                 a5 = u64 [a1 + 0x10]
 34528: 82 86 18                 s1 = u64 [a1 + 0x18]
 34531: 82 85 20                 s0 = u64 [a1 + 0x20]
 34534: 7b 17 40                 u64 [sp + 0x40] = a0
 34537: 7b 19 38                 u64 [sp + 0x38] = a2
 34540: c8 97 07                 a0 = a0 + a2
 34543: d6 a7 09                 a2 = a0 mulhu a3
 34546: 98 9b 04                 a4 = a2 >> 0x4
 34549: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 34552: c8 b9 09                 a2 = a2 + a4
 34555: 7b 1c 30                 u64 [sp + 0x30] = a5
 34558: c8 c7 07                 a0 = a0 + a5
 34561: c9 97 07                 a0 = a0 - a2
 34564: d6 a7 09                 a2 = a0 mulhu a3
 34567: 98 9b 04                 a4 = a2 >> 0x4
 34570: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 34573: c8 b9 09                 a2 = a2 + a4
 34576: 7b 16 28                 u64 [sp + 0x28] = s1
 34579: c8 67 07                 a0 = a0 + s1
 34582: c9 97 07                 a0 = a0 - a2
 34585: d6 a7 09                 a2 = a0 mulhu a3
 34588: 98 9b 04                 a4 = a2 >> 0x4
 34591: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 34594: c8 b9 09                 a2 = a2 + a4
 34597: 82 8c 28                 a5 = u64 [a1 + 0x28]
 34600: 7b 15 20                 u64 [sp + 0x20] = s0
 34603: c8 57 07                 a0 = a0 + s0
 34606: c9 97 07                 a0 = a0 - a2
 34609: d6 a7 09                 a2 = a0 mulhu a3
 34612: 98 9b 04                 a4 = a2 >> 0x4
 34615: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 34618: c8 b9 09                 a2 = a2 + a4
 34621: 7b 1c 18                 u64 [sp + 0x18] = a5
 34624: c8 c7 07                 a0 = a0 + a5
 34627: c9 97 07                 a0 = a0 - a2
 34630: 82 8c 30                 a5 = u64 [a1 + 0x30]
 34633: d6 a7 09                 a2 = a0 mulhu a3
 34636: 98 9b 04                 a4 = a2 >> 0x4
 34639: 84 99 f0                 a2 = a2 & 0xfffffffffffffff0
 34642: c8 b9 09                 a2 = a2 + a4
 34645: 7b 1c 10                 u64 [sp + 0x10] = a5
 34648: c8 c7 07                 a0 = a0 + a5
 34651: c9 97 07                 a0 = a0 - a2
 34654: 7b 17 08                 u64 [sp + 0x8] = a0
 34657: 49 21 80 00              u64 [sp + 128] = 0
 34661: 49 11 78                 u64 [sp + 120] = 0
 34664: 49 11 70                 u64 [sp + 112] = 0
 34667: 49 11 68                 u64 [sp + 104] = 0
 34670: 49 11 60                 u64 [sp + 96] = 0
 34673: 49 11 58                 u64 [sp + 88] = 0
 34676: 49 11 50                 u64 [sp + 80] = 0
 34679: 49 11 48                 u64 [sp + 72] = 0
 34682: 82 88 38                 a1 = u64 [a1 + 0x38]
 34685: 28 0f ab                 jump @1007
      :                          @2269 [@dyn 287]
 34688: 7b 16 90 00              u64 [sp + 0x90] = s1
 34692: 33 07 42                 a0 = 0x42
 34695: 7b 17 98 00              u64 [sp + 0x98] = a0
 34699: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 34703: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 34707: 33 07 98 0b 01           a0 = 0x10b98
 34712: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 34716: 49 21 d0 00 02           u64 [sp + 208] = 0x2
 34721: 49 21 e8 00              u64 [sp + 232] = 0
 34725: 95 18 90 00              a1 = sp + 0x90
 34729: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 34733: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 34738: 95 17 b0 00              a0 = sp + 0xb0
 34742: 95 18 c8 00              a1 = sp + 0xc8
 34746: 50 20 40 02 c1 95        ra = 576, jump @611
      :                          @2270 [@dyn 288]
 34752: 82 15 b8 00              s0 = u64 [sp + 0xb8]
 34756: 82 1b c0 00              a4 = u64 [sp + 0xc0]
 34760: 82 16 b0 00              s1 = u64 [sp + 0xb0]
 34764: 33 07 03                 a0 = 0x3
 34767: 33 08                    a1 = 0
 34769: 33 09                    a2 = 0
 34771: 64 5a                    a3 = s0
 34773: 33 00 42 02              ra = 0x242
 34777: 0a 64                    ecalli 100 // 'log'
 34779: 01                       fallthrough
      :                          @2271 [@dyn 289]
 34780: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 34785: 55 38 00 00 ff 09        jump @2273 if a1 >=u 4294901760
      :                          @2272
 34791: 28 66 16                 jump @2527
      :                          @2273
 34794: 33 07 f0 02 03           a0 = 0x302f0
 34799: 95 77 00 00 01           a0 = a0 + 0x10000
 34804: 01                       fallthrough
      :                          @2274
 34805: 82 78                    a1 = u64 [a0]
 34807: c9 87 09                 a2 = a0 - a1
 34810: aa 59 06                 jump @2276 if a2 == s0
      :                          @2275
 34813: 28 50 16                 jump @2527
      :                          @2276
 34816: c9 68 09                 a2 = a1 - s1
 34819: 01                       fallthrough
      :                          @2277
 34820: 82 7a                    a3 = u64 [a0]
 34822: ab 8a ef                 jump @2274 if a3 != a1
      :                          @2278
 34825: 7b 79                    u64 [a0] = a2
 34827: 33 0b                    a4 = 0
 34829: 01                       fallthrough
      :                          @2279
 34830: ab 8a e7                 jump @2274 if a3 != a1
      :                          @2280
 34833: 28 3c 16                 jump @2527
      :                          @2281 [@dyn 290]
 34836: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 34841: 97 89 0d                 a2 = a1 << 0xd
 34844: d3 98 08                 a1 = a1 ^ a2
 34847: 98 89 07                 a2 = a1 >> 0x7
 34850: d3 98 08                 a1 = a1 ^ a2
 34853: 97 89 11                 a2 = a1 << 0x11
 34856: d3 98 08                 a1 = a1 ^ a2
 34859: 3a 09 60 00 03           a2 = u64 [0x30060]
 34864: 3a 0a 88 00 03           a3 = u64 [0x30088]
 34869: 3e 08 e0 00 03           u64 [0x300e0] = a1
 34874: ca 98 07                 a0 = a1 * a2
 34877: d6 a7 08                 a1 = a0 mulhu a3
 34880: 98 88 0c                 a1 = a1 >> 0xc
 34883: 96 88 41 0d 03           a1 = a1 * 0x30d41
 34888: 95 77 60 79 fe           a0 = a0 + 0xfffffffffffe7960
 34893: bf 87 07                 i32 a0 = a0 - a1
 34896: 7a 17 68 02              u32 [sp + 0x268] = a0
 34900: 95 11 f0                 sp = sp + 0xfffffffffffffff0
 34903: 7b 15 08                 u64 [sp + 0x8] = s0
 34906: 7b 16                    u64 [sp] = s1
 34908: 83 78                    i32 a1 = a0 + 0
 34910: 89 88                    a1 = a1 <s 0
 34912: 33 0a 0f c9 00           a3 = 0xc90f
 34917: 93 8a f1 36 ff           a3 = 0xffffffffffff36f1 if a1 == 0
 34922: 33 0b 8b 64 ff           a4 = 0xffffffffffff648b
 34927: 93 8b 75 9b 00           a4 = 0x9b75 if a1 == 0
 34932: be 7a 02                 i32 t0 = a3 + a0
 34935: 99 b8 01                 a1 = a4 >>a 0x1
 34938: 89 2a                    a3 = t0 <s 0
 34940: 33 07 b1 76              a0 = 0x76b1
 34944: 93 a7 4f 89              a0 = 0xffffffffffff894f if a3 == 0
 34948: 9a 8c                    a5 = -a1
 34950: db a8 0c                 a5 = a1 if a3 != 0
 34953: 83 c3 75 9b 00           i32 t1 = a5 + 0x9b75
 34958: 33 0c 46 b2              a5 = 0xffffffffffffb246
 34962: 93 ac ba 4d              a5 = 0x4dba if a3 == 0
 34966: c8 cb 0b                 a4 = a4 + a5
 34969: be 72 04                 i32 t2 = t0 + a0
 34972: 8b 38 02                 i32 a1 = t1 >> 0x2
 34975: 99 ba 02                 a3 = a4 >>a 0x2
 34978: 89 4c                    a5 = t2 <s 0
 34980: 33 09 b6 3e              a2 = 0x3eb6
 34984: 93 c9 4a c1              a2 = 0xffffffffffffc14a if a5 == 0
 34988: 9a a7                    a0 = -a3
 34990: db ca 07                 a0 = a3 if a5 != 0
 34993: be 73 02                 i32 t0 = t1 + a0
 34996: 9a 8a                    a3 = -a1
 34998: da c8 0a                 a3 = a1 if a5 == 0
 35001: c8 ba 0a                 a3 = a3 + a4
 35004: be 94 04                 i32 t2 = t2 + a2
 35007: 8b 29 03                 i32 a2 = t0 >> 0x3
 35010: 99 ab 03                 a4 = a3 >>a 0x3
 35013: 89 4c                    a5 = t2 <s 0
 35015: 33 07 d9 1f              a0 = 0x1fd9
 35019: 93 c7 27 e0              a0 = 0xffffffffffffe027 if a5 == 0
 35023: 9a b8                    a1 = -a4
 35025: db cb 08                 a1 = a4 if a5 != 0
 35028: c8 28 08                 a1 = a1 + t0
 35031: 9a 9b                    a4 = -a2
 35033: da c9 0b                 a4 = a2 if a5 == 0
 35036: be ba 0a                 i32 a3 = a3 + a4
 35039: be 74 06                 i32 s1 = t2 + a0
 35042: 8c 89 04                 i32 a2 = a1 >>a 0x4
 35045: 8c ab 04                 i32 a4 = a3 >>a 0x4
 35048: 89 6c                    a5 = s1 <s 0
 35050: 33 02 00 f0              t0 = 0xfffffffffffff000
 35054: 33 03 ff ef              t1 = 0xffffffffffffefff
 35058: 33 04 00 10              t2 = 0x1000
 35062: 33 05 01 10              s0 = 0x1001
 35066: da c3 05                 s0 = t1 if a5 == 0
 35069: 9a b7                    a0 = -a4
 35071: db cb 07                 a0 = a4 if a5 != 0
 35074: c8 87 07                 a0 = a0 + a1
 35077: 9a 98                    a1 = -a2
 35079: da c9 08                 a1 = a2 if a5 == 0
 35082: be a8 08                 i32 a1 = a1 + a3
 35085: be 65 05                 i32 s0 = s0 + s1
 35088: 8c 79 05                 i32 a2 = a0 >>a 0x5
 35091: 8c 8a 05                 i32 a3 = a1 >>a 0x5
 35094: 89 5b                    a4 = s0 <s 0
 35096: 33 06 01 08              s1 = 0x801
 35100: 93 b6 ff f7              s1 = 0xfffffffffffff7ff if a4 == 0
 35104: 9a ac                    a5 = -a3
 35106: db ba 0c                 a5 = a3 if a4 != 0
 35109: c8 c7 07                 a0 = a0 + a5
 35112: 9a 9a                    a3 = -a2
 35114: da b9 0a                 a3 = a2 if a4 == 0
 35117: be a8 08                 i32 a1 = a1 + a3
 35120: be 65 05                 i32 s0 = s0 + s1
 35123: 8c 79 06                 i32 a2 = a0 >>a 0x6
 35126: 8c 8a 06                 i32 a3 = a1 >>a 0x6
 35129: 89 5b                    a4 = s0 <s 0
 35131: 33 06 01 04              s1 = 0x401
 35135: 93 b6 ff fb              s1 = 0xfffffffffffffbff if a4 == 0
 35139: 9a ac                    a5 = -a3
 35141: db ba 0c                 a5 = a3 if a4 != 0
 35144: c8 c7 07                 a0 = a0 + a5
 35147: 9a 9a                    a3 = -a2
 35149: da b9 0a                 a3 = a2 if a4 == 0
 35152: be a8 08                 i32 a1 = a1 + a3
 35155: be 65 05                 i32 s0 = s0 + s1
 35158: 8c 79 07                 i32 a2 = a0 >>a 0x7
 35161: 8c 8a 07                 i32 a3 = a1 >>a 0x7
 35164: 89 5b                    a4 = s0 <s 0
 35166: 33 06 00 02              s1 = 0x200
 35170: 93 b6 00 fe              s1 = 0xfffffffffffffe00 if a4 == 0
 35174: 9a ac                    a5 = -a3
 35176: db ba 0c                 a5 = a3 if a4 != 0
 35179: c8 c7 07                 a0 = a0 + a5
 35182: 9a 9a                    a3 = -a2
 35184: da b9 0a                 a3 = a2 if a4 == 0
 35187: be a8 08                 i32 a1 = a1 + a3
 35190: be 65 05                 i32 s0 = s0 + s1
 35193: 8c 79 08                 i32 a2 = a0 >>a 0x8
 35196: 8c 8a 08                 i32 a3 = a1 >>a 0x8
 35199: 89 5b                    a4 = s0 <s 0
 35201: 33 06 00 01              s1 = 0x100
 35205: 93 b6 00 ff              s1 = 0xffffffffffffff00 if a4 == 0
 35209: 9a ac                    a5 = -a3
 35211: db ba 0c                 a5 = a3 if a4 != 0
 35214: c8 c7 07                 a0 = a0 + a5
 35217: 9a 9a                    a3 = -a2
 35219: da b9 0a                 a3 = a2 if a4 == 0
 35222: be a8 08                 i32 a1 = a1 + a3
 35225: be 65 05                 i32 s0 = s0 + s1
 35228: 8c 79 09                 i32 a2 = a0 >>a 0x9
 35231: 8c 8a 09                 i32 a3 = a1 >>a 0x9
 35234: 89 5b                    a4 = s0 <s 0
 35236: 33 06 80 00              s1 = 0x80
 35240: 93 b6 80                 s1 = 0xffffffffffffff80 if a4 == 0
 35243: 9a ac                    a5 = -a3
 35245: db ba 0c                 a5 = a3 if a4 != 0
 35248: c8 c7 07                 a0 = a0 + a5
 35251: 9a 9a                    a3 = -a2
 35253: da b9 0a                 a3 = a2 if a4 == 0
 35256: be a8 08                 i32 a1 = a1 + a3
 35259: be 65 05                 i32 s0 = s0 + s1
 35262: 8c 79 0a                 i32 a2 = a0 >>a 0xa
 35265: 8c 8a 0a                 i32 a3 = a1 >>a 0xa
 35268: 89 5b                    a4 = s0 <s 0
 35270: 33 06 40                 s1 = 0x40
 35273: 93 b6 c0                 s1 = 0xffffffffffffffc0 if a4 == 0
 35276: 9a ac                    a5 = -a3
 35278: db ba 0c                 a5 = a3 if a4 != 0
 35281: c8 c7 07                 a0 = a0 + a5
 35284: 9a 9a                    a3 = -a2
 35286: da b9 0a                 a3 = a2 if a4 == 0
 35289: be a8 08                 i32 a1 = a1 + a3
 35292: be 65 05                 i32 s0 = s0 + s1
 35295: 8c 79 0b                 i32 a2 = a0 >>a 0xb
 35298: 8c 8a 0b                 i32 a3 = a1 >>a 0xb
 35301: 89 5b                    a4 = s0 <s 0
 35303: 33 06 20                 s1 = 0x20
 35306: 93 b6 e0                 s1 = 0xffffffffffffffe0 if a4 == 0
 35309: 9a ac                    a5 = -a3
 35311: db ba 0c                 a5 = a3 if a4 != 0
 35314: c8 c7 07                 a0 = a0 + a5
 35317: 9a 9a                    a3 = -a2
 35319: da b9 0a                 a3 = a2 if a4 == 0
 35322: be a8 08                 i32 a1 = a1 + a3
 35325: be 65 05                 i32 s0 = s0 + s1
 35328: 8c 79 0c                 i32 a2 = a0 >>a 0xc
 35331: 8c 8a 0c                 i32 a3 = a1 >>a 0xc
 35334: 89 5b                    a4 = s0 <s 0
 35336: 33 06 10                 s1 = 0x10
 35339: 93 b6 f0                 s1 = 0xfffffffffffffff0 if a4 == 0
 35342: 9a ac                    a5 = -a3
 35344: db ba 0c                 a5 = a3 if a4 != 0
 35347: c8 c7 07                 a0 = a0 + a5
 35350: 9a 9a                    a3 = -a2
 35352: da b9 0a                 a3 = a2 if a4 == 0
 35355: be a8 08                 i32 a1 = a1 + a3
 35358: be 65 05                 i32 s0 = s0 + s1
 35361: 8c 79 0d                 i32 a2 = a0 >>a 0xd
 35364: 8c 8a 0d                 i32 a3 = a1 >>a 0xd
 35367: 89 5b                    a4 = s0 <s 0
 35369: 33 06 08                 s1 = 0x8
 35372: 93 b6 f8                 s1 = 0xfffffffffffffff8 if a4 == 0
 35375: 9a ac                    a5 = -a3
 35377: db ba 0c                 a5 = a3 if a4 != 0
 35380: c8 c7 07                 a0 = a0 + a5
 35383: 9a 9a                    a3 = -a2
 35385: da b9 0a                 a3 = a2 if a4 == 0
 35388: be a8 08                 i32 a1 = a1 + a3
 35391: be 65 05                 i32 s0 = s0 + s1
 35394: 8c 79 0e                 i32 a2 = a0 >>a 0xe
 35397: 8c 8a 0e                 i32 a3 = a1 >>a 0xe
 35400: 89 5b                    a4 = s0 <s 0
 35402: 33 06 04                 s1 = 0x4
 35405: 93 b6 fc                 s1 = 0xfffffffffffffffc if a4 == 0
 35408: 9a ac                    a5 = -a3
 35410: db ba 0c                 a5 = a3 if a4 != 0
 35413: c8 c7 07                 a0 = a0 + a5
 35416: 9a 9a                    a3 = -a2
 35418: da b9 0a                 a3 = a2 if a4 == 0
 35421: be a8 08                 i32 a1 = a1 + a3
 35424: be 65 05                 i32 s0 = s0 + s1
 35427: 8c 79 0f                 i32 a2 = a0 >>a 0xf
 35430: 8c 8a 0f                 i32 a3 = a1 >>a 0xf
 35433: 89 5b                    a4 = s0 <s 0
 35435: 9a ac                    a5 = -a3
 35437: db ba 0c                 a5 = a3 if a4 != 0
 35440: be c7 07                 i32 a0 = a0 + a5
 35443: 9a 9a                    a3 = -a2
 35445: da b9 0a                 a3 = a2 if a4 == 0
 35448: be a8 08                 i32 a1 = a1 + a3
 35451: 82 15 08                 s0 = u64 [sp + 0x8]
 35454: 82 16                    s1 = u64 [sp]
 35456: 95 11 10                 sp = sp + 0x10
 35459: 7a 17 b0 00              u32 [sp + 0xb0] = a0
 35463: 7a 18 90 00              u32 [sp + 0x90] = a1
 35467: 95 17 68 02              a0 = sp + 0x268
 35471: 7b 17 50 01              u64 [sp + 0x150] = a0
 35475: 33 07 7e 03              a0 = 0x37e
 35479: 7b 17 58 01              u64 [sp + 0x158] = a0
 35483: 95 18 b0 00              a1 = sp + 0xb0
 35487: 7b 18 60 01              u64 [sp + 0x160] = a1
 35491: 7b 17 68 01              u64 [sp + 0x168] = a0
 35495: 95 18 90 00              a1 = sp + 0x90
 35499: 7b 18 70 01              u64 [sp + 0x170] = a1
 35503: 7b 17 78 01              u64 [sp + 0x178] = a0
 35507: 33 07 d0 0b 01           a0 = 0x10bd0
 35512: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 35516: 49 21 00 01 03           u64 [sp + 256] = 0x3
 35521: 49 21 18 01              u64 [sp + 280] = 0
 35525: 95 18 50 01              a1 = sp + 0x150
 35529: 7b 18 08 01              u64 [sp + 0x108] = a1
 35533: 49 21 10 01 03           u64 [sp + 272] = 0x3
 35538: 95 17 c8 00              a0 = sp + 0xc8
 35542: 95 18 f8 00              a1 = sp + 0xf8
 35546: 50 20 46 02 a1 92        ra = 582, jump @611
      :                          @2282 [@dyn 291]
 35552: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 35556: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 35560: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 35564: 33 07 03                 a0 = 0x3
 35567: 33 08                    a1 = 0
 35569: 33 09                    a2 = 0
 35571: 64 5a                    a3 = s0
 35573: 33 00 48 02              ra = 0x248
 35577: 0a 64                    ecalli 100 // 'log'
 35579: 01                       fallthrough
      :                          @2283 [@dyn 292]
 35580: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 35585: 55 38 00 00 ff 09        jump @2285 if a1 >=u 4294901760
      :                          @2284
 35591: 28 46 13                 jump @2527
      :                          @2285
 35594: 33 07 f0 02 03           a0 = 0x302f0
 35599: 95 77 00 00 01           a0 = a0 + 0x10000
 35604: 01                       fallthrough
      :                          @2286
 35605: 82 78                    a1 = u64 [a0]
 35607: c9 87 09                 a2 = a0 - a1
 35610: aa 59 06                 jump @2288 if a2 == s0
      :                          @2287
 35613: 28 30 13                 jump @2527
      :                          @2288
 35616: c9 68 09                 a2 = a1 - s1
 35619: 01                       fallthrough
      :                          @2289
 35620: 82 7a                    a3 = u64 [a0]
 35622: ab 8a ef                 jump @2286 if a3 != a1
      :                          @2290
 35625: 7b 79                    u64 [a0] = a2
 35627: 33 0b                    a4 = 0
 35629: 01                       fallthrough
      :                          @2291
 35630: ab 8a e7                 jump @2286 if a3 != a1
      :                          @2292
 35633: 28 1c 13                 jump @2527
      :                          @2293 [@dyn 293]
 35636: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 35641: 49 11 10 ff ff fe        u64 [sp + 16] = 0xfffffffffffeffff
 35647: 97 78 0d                 a1 = a0 << 0xd
 35650: d3 87 07                 a0 = a0 ^ a1
 35653: 98 78 07                 a1 = a0 >> 0x7
 35656: d3 87 07                 a0 = a0 ^ a1
 35659: 97 78 11                 a1 = a0 << 0x11
 35662: d3 87 07                 a0 = a0 ^ a1
 35665: 3e 07 e0 00 03           u64 [0x300e0] = a0
 35670: 87 77 79 c8 75           i32 a0 = a0 * 0x75c879
 35675: 83 77 5f f3 6e 3c        i32 a0 = a0 + 0x3c6ef35f
 35681: 7a 17 90 00              u32 [sp + 0x90] = a0
 35685: 95 17 90 00              a0 = sp + 0x90
 35689: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 35693: 33 07 5e 03              a0 = 0x35e
 35697: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 35701: 33 07 10 0c 01           a0 = 0x10c10
 35706: 7b 17 50 01              u64 [sp + 0x150] = a0
 35710: 49 21 58 01 01           u64 [sp + 344] = 0x1
 35715: 49 21 70 01              u64 [sp + 368] = 0
 35719: 95 18 c8 00              a1 = sp + 0xc8
 35723: 7b 18 60 01              u64 [sp + 0x160] = a1
 35727: 49 21 68 01 01           u64 [sp + 360] = 0x1
 35732: 95 17 f8 00              a0 = sp + 0xf8
 35736: 95 18 50 01              a1 = sp + 0x150
 35740: 50 20 4c 02 df 91        ra = 588, jump @611
      :                          @2294 [@dyn 294]
 35746: 82 15 00 01              s0 = u64 [sp + 0x100]
 35750: 82 1b 08 01              a4 = u64 [sp + 0x108]
 35754: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 35758: 33 07 03                 a0 = 0x3
 35761: 33 08                    a1 = 0
 35763: 33 09                    a2 = 0
 35765: 64 5a                    a3 = s0
 35767: 33 00 4e 02              ra = 0x24e
 35771: 0a 64                    ecalli 100 // 'log'
 35773: 01                       fallthrough
      :                          @2295 [@dyn 295]
 35774: 82 17 10                 a0 = u64 [sp + 0x10]
 35777: c8 67 07                 a0 = a0 + s1
 35780: 53 37 00 00 ff 25        jump @2301 if a0 <u 4294901760
      :                          @2296
 35786: 33 07 f0 02 03           a0 = 0x302f0
 35791: 95 77 00 00 01           a0 = a0 + 0x10000
 35796: 01                       fallthrough
      :                          @2297
 35797: 82 78                    a1 = u64 [a0]
 35799: c9 87 09                 a2 = a0 - a1
 35802: ab 59 0f                 jump @2301 if a2 != s0
      :                          @2298
 35805: c9 68 09                 a2 = a1 - s1
 35808: 01                       fallthrough
      :                          @2299
 35809: 82 7a                    a3 = u64 [a0]
 35811: ab 8a f2                 jump @2297 if a3 != a1
      :                          @2300
 35814: 7b 79                    u64 [a0] = a2
 35816: 01                       fallthrough
      :                          @2301
 35817: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 35822: 3a 0a 60 00 03           a3 = u64 [0x30060]
 35827: 97 78 0d                 a1 = a0 << 0xd
 35830: d3 87 07                 a0 = a0 ^ a1
 35833: 98 78 07                 a1 = a0 >> 0x7
 35836: d3 87 07                 a0 = a0 ^ a1
 35839: 97 78 11                 a1 = a0 << 0x11
 35842: d3 87 07                 a0 = a0 ^ a1
 35845: 3a 08 80 00 03           a1 = u64 [0x30080]
 35850: 3e 07 e0 00 03           u64 [0x300e0] = a0
 35855: 7b 1a 08                 u64 [sp + 0x8] = a3
 35858: ca a7 09                 a2 = a0 * a3
 35861: ca 87 07                 a0 = a0 * a1
 35864: d3 97 07                 a0 = a0 ^ a2
 35867: 98 78 07                 a1 = a0 >> 0x7
 35870: d3 87 07                 a0 = a0 ^ a1
 35873: 97 78 11                 a1 = a0 << 0x11
 35876: d3 87 07                 a0 = a0 ^ a1
 35879: 7b 17 90 00              u64 [sp + 0x90] = a0
 35883: 95 17 90 00              a0 = sp + 0x90
 35887: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 35891: 33 07 28 03              a0 = 0x328
 35895: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 35899: 33 07 30 0c 01           a0 = 0x10c30
 35904: 7b 17 50 01              u64 [sp + 0x150] = a0
 35908: 49 21 58 01 01           u64 [sp + 344] = 0x1
 35913: 49 21 70 01              u64 [sp + 368] = 0
 35917: 95 18 c8 00              a1 = sp + 0xc8
 35921: 7b 18 60 01              u64 [sp + 0x160] = a1
 35925: 49 21 68 01 01           u64 [sp + 360] = 0x1
 35930: 95 17 f8 00              a0 = sp + 0xf8
 35934: 95 18 50 01              a1 = sp + 0x150
 35938: 50 20 50 02 19 91        ra = 592, jump @611
      :                          @2302 [@dyn 296]
 35944: 82 15 00 01              s0 = u64 [sp + 0x100]
 35948: 82 1b 08 01              a4 = u64 [sp + 0x108]
 35952: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 35956: 33 07 03                 a0 = 0x3
 35959: 33 08                    a1 = 0
 35961: 33 09                    a2 = 0
 35963: 64 5a                    a3 = s0
 35965: 33 00 52 02              ra = 0x252
 35969: 0a 64                    ecalli 100 // 'log'
 35971: 01                       fallthrough
      :                          @2303 [@dyn 297]
 35972: 82 17 10                 a0 = u64 [sp + 0x10]
 35975: c8 67 07                 a0 = a0 + s1
 35978: 53 37 00 00 ff 25        jump @2309 if a0 <u 4294901760
      :                          @2304
 35984: 33 07 f0 02 03           a0 = 0x302f0
 35989: 95 77 00 00 01           a0 = a0 + 0x10000
 35994: 01                       fallthrough
      :                          @2305
 35995: 82 78                    a1 = u64 [a0]
 35997: c9 87 09                 a2 = a0 - a1
 36000: ab 59 0f                 jump @2309 if a2 != s0
      :                          @2306
 36003: c9 68 09                 a2 = a1 - s1
 36006: 01                       fallthrough
      :                          @2307
 36007: 82 7a                    a3 = u64 [a0]
 36009: ab 8a f2                 jump @2305 if a3 != a1
      :                          @2308
 36012: 7b 79                    u64 [a0] = a2
 36014: 01                       fallthrough
      :                          @2309
 36015: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36020: 97 78 0d                 a1 = a0 << 0xd
 36023: d3 87 07                 a0 = a0 ^ a1
 36026: 98 78 07                 a1 = a0 >> 0x7
 36029: d3 87 07                 a0 = a0 ^ a1
 36032: 97 78 11                 a1 = a0 << 0x11
 36035: d3 87 07                 a0 = a0 ^ a1
 36038: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36043: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36048: 82 19 08                 a2 = u64 [sp + 0x8]
 36051: ca 97 07                 a0 = a0 * a2
 36054: 97 89 0d                 a2 = a1 << 0xd
 36057: d3 98 08                 a1 = a1 ^ a2
 36060: 98 89 07                 a2 = a1 >> 0x7
 36063: d3 98 08                 a1 = a1 ^ a2
 36066: 97 89 11                 a2 = a1 << 0x11
 36069: d3 98 08                 a1 = a1 ^ a2
 36072: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36077: 98 78 2d                 a1 = a0 >> 0x2d
 36080: 98 79 1b                 a2 = a0 >> 0x1b
 36083: d3 98 08                 a1 = a1 ^ a2
 36086: 98 77 3b                 a0 = a0 >> 0x3b
 36089: df 78 07                 i32 a0 = a1 >>r a0
 36092: 7a 17 90 00              u32 [sp + 0x90] = a0
 36096: 95 17 90 00              a0 = sp + 0x90
 36100: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36104: 33 07 5e 03              a0 = 0x35e
 36108: 7b 17 08                 u64 [sp + 0x8] = a0
 36111: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36115: 33 07 50 0c 01           a0 = 0x10c50
 36120: 7b 17 50 01              u64 [sp + 0x150] = a0
 36124: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36129: 49 21 70 01              u64 [sp + 368] = 0
 36133: 95 18 c8 00              a1 = sp + 0xc8
 36137: 7b 18 60 01              u64 [sp + 0x160] = a1
 36141: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36146: 95 17 f8 00              a0 = sp + 0xf8
 36150: 95 18 50 01              a1 = sp + 0x150
 36154: 50 20 54 02 41 90        ra = 596, jump @611
      :                          @2310 [@dyn 298]
 36160: 82 15 00 01              s0 = u64 [sp + 0x100]
 36164: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36168: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36172: 33 07 03                 a0 = 0x3
 36175: 33 08                    a1 = 0
 36177: 33 09                    a2 = 0
 36179: 64 5a                    a3 = s0
 36181: 33 00 56 02              ra = 0x256
 36185: 0a 64                    ecalli 100 // 'log'
 36187: 01                       fallthrough
      :                          @2311 [@dyn 299]
 36188: 82 17 10                 a0 = u64 [sp + 0x10]
 36191: c8 67 07                 a0 = a0 + s1
 36194: 53 37 00 00 ff 25        jump @2317 if a0 <u 4294901760
      :                          @2312
 36200: 33 07 f0 02 03           a0 = 0x302f0
 36205: 95 77 00 00 01           a0 = a0 + 0x10000
 36210: 01                       fallthrough
      :                          @2313
 36211: 82 78                    a1 = u64 [a0]
 36213: c9 87 09                 a2 = a0 - a1
 36216: ab 59 0f                 jump @2317 if a2 != s0
      :                          @2314
 36219: c9 68 09                 a2 = a1 - s1
 36222: 01                       fallthrough
      :                          @2315
 36223: 82 7a                    a3 = u64 [a0]
 36225: ab 8a f2                 jump @2313 if a3 != a1
      :                          @2316
 36228: 7b 79                    u64 [a0] = a2
 36230: 01                       fallthrough
      :                          @2317
 36231: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36236: 97 78 0d                 a1 = a0 << 0xd
 36239: d3 87 07                 a0 = a0 ^ a1
 36242: 98 78 07                 a1 = a0 >> 0x7
 36245: d3 87 07                 a0 = a0 ^ a1
 36248: 97 78 11                 a1 = a0 << 0x11
 36251: d3 87 07                 a0 = a0 ^ a1
 36254: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36259: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36264: 97 89 0d                 a2 = a1 << 0xd
 36267: d3 98 08                 a1 = a1 ^ a2
 36270: 98 89 07                 a2 = a1 >> 0x7
 36273: d3 98 08                 a1 = a1 ^ a2
 36276: 97 89 11                 a2 = a1 << 0x11
 36279: d3 98 08                 a1 = a1 ^ a2
 36282: 87 89 1d dd 6c 4f        i32 a2 = a1 * 0x4f6cdd1d
 36288: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36293: 96 77 fd 79 6d ef        a0 = a0 * 0xffffffffef6d79fd
 36299: c8 97 07                 a0 = a0 + a2
 36302: 7a 17 90 00              u32 [sp + 0x90] = a0
 36306: 95 17 90 00              a0 = sp + 0x90
 36310: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 36314: 82 17 08                 a0 = u64 [sp + 0x8]
 36317: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 36321: 33 07 70 0c 01           a0 = 0x10c70
 36326: 7b 17 50 01              u64 [sp + 0x150] = a0
 36330: 49 21 58 01 01           u64 [sp + 344] = 0x1
 36335: 49 21 70 01              u64 [sp + 368] = 0
 36339: 95 18 c8 00              a1 = sp + 0xc8
 36343: 7b 18 60 01              u64 [sp + 0x160] = a1
 36347: 49 21 68 01 01           u64 [sp + 360] = 0x1
 36352: 95 17 f8 00              a0 = sp + 0xf8
 36356: 95 18 50 01              a1 = sp + 0x150
 36360: 50 20 58 02 73 8f        ra = 600, jump @611
      :                          @2318 [@dyn 300]
 36366: 82 15 00 01              s0 = u64 [sp + 0x100]
 36370: 82 1b 08 01              a4 = u64 [sp + 0x108]
 36374: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 36378: 33 07 03                 a0 = 0x3
 36381: 33 08                    a1 = 0
 36383: 33 09                    a2 = 0
 36385: 64 5a                    a3 = s0
 36387: 33 00 5a 02              ra = 0x25a
 36391: 0a 64                    ecalli 100 // 'log'
 36393: 01                       fallthrough
      :                          @2319 [@dyn 301]
 36394: 82 17 10                 a0 = u64 [sp + 0x10]
 36397: c8 67 07                 a0 = a0 + s1
 36400: 53 37 00 00 ff 1d 10     jump @2527 if a0 <u 4294901760
      :                          @2320
 36407: 33 07 f0 02 03           a0 = 0x302f0
 36412: 95 77 00 00 01           a0 = a0 + 0x10000
 36417: 01                       fallthrough
      :                          @2321
 36418: 82 78                    a1 = u64 [a0]
 36420: c9 87 09                 a2 = a0 - a1
 36423: ab 59 06 10              jump @2527 if a2 != s0
      :                          @2322
 36427: c9 68 09                 a2 = a1 - s1
 36430: 01                       fallthrough
      :                          @2323
 36431: 82 7a                    a3 = u64 [a0]
 36433: ab 8a f1                 jump @2321 if a3 != a1
      :                          @2324
 36436: 7b 79                    u64 [a0] = a2
 36438: 33 0b                    a4 = 0
 36440: 01                       fallthrough
      :                          @2325
 36441: ab 8a e9                 jump @2321 if a3 != a1
      :                          @2326
 36444: 28 f1 0f                 jump @2527
      :                          @2327 [@dyn 302]
 36447: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36452: 97 78 0d                 a1 = a0 << 0xd
 36455: d3 87 07                 a0 = a0 ^ a1
 36458: 98 78 07                 a1 = a0 >> 0x7
 36461: d3 87 07                 a0 = a0 ^ a1
 36464: 97 78 11                 a1 = a0 << 0x11
 36467: d3 78 08                 a1 = a1 ^ a0
 36470: 96 75 1d                 s0 = a0 * 0x1d
 36473: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36478: 84 55 1f                 s0 = s0 & 0x1f
 36481: 64 57                    a0 = s0
 36483: 50 20 5e 02 a8 91        ra = 606, jump @674
      :                          @2328 [@dyn 303]
 36489: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 36493: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 36497: 49 21 c0 00              u64 [sp + 192] = 0
 36501: 52 05 b2 00              jump @2338 if s0 != 0
      :                          @2329
 36505: 64 8a                    a3 = a1
 36507: 33 06                    s1 = 0
 36509: 01                       fallthrough
      :                          @2330
 36510: 64 a7                    a0 = a3
 36512: 64 68                    a1 = s1
 36514: 64 a5                    s0 = a3
 36516: 50 20 60 02 5f a6        ra = 608, jump @1038
      :                          @2331 [@dyn 304]
 36522: 7a 17 48 01              u32 [sp + 0x148] = a0
 36526: 51 06 0b 0d              jump @2497 if s1 == 0
      :                          @2332
 36530: 33 0b                    a4 = 0
 36532: 33 0a 01                 a3 = 0x1
 36535: 14 07 71 80 07 80 00 00 00 00 a0 = 0x80078071
 36545: 33 08 f1 ff 00           a1 = 0xfff1
 36550: 64 69                    a2 = s1
 36552: 64 5c                    a5 = s0
 36554: 64 52                    t0 = s0
 36556: 01                       fallthrough
      :                          @2333
 36557: 7c c5                    s0 = u8 [a5]
 36559: 95 cc 01                 a5 = a5 + 0x1
 36562: c8 a5 05                 s0 = s0 + a3
 36565: 97 5a 20                 a3 = s0 << 0x20
 36568: 98 aa 20                 a3 = a3 >> 0x20
 36571: ca 7a 0a                 a3 = a3 * a0
 36574: 98 aa 2f                 a3 = a3 >> 0x2f
 36577: ca 8a 0a                 a3 = a3 * a1
 36580: bf a5 0a                 i32 a3 = s0 - a3
 36583: c8 ba 05                 s0 = a3 + a4
 36586: 97 5b 20                 a4 = s0 << 0x20
 36589: 98 bb 20                 a4 = a4 >> 0x20
 36592: ca 7b 0b                 a4 = a4 * a0
 36595: 98 bb 2f                 a4 = a4 >> 0x2f
 36598: ca 8b 0b                 a4 = a4 * a1
 36601: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 36604: bf b5 0b                 i32 a4 = s0 - a4
 36607: 52 09 ce                 jump @2333 if a2 != 0
      :                          @2334
 36610: 97 bb 10                 a4 = a4 << 0x10
 36613: d4 ba 0a                 a3 = a3 | a4
 36616: 7a 1a 4c 01              u32 [sp + 0x14c] = a3
 36620: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
 36626: 33 08 93 01 00 01        a1 = 0x1000193
 36632: 01                       fallthrough
      :                          @2335
 36633: 7c 29                    a2 = u8 [t0]
 36635: 95 22 01                 t0 = t0 + 0x1
 36638: d3 97 07                 a0 = a0 ^ a2
 36641: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 36644: c0 87 07                 i32 a0 = a0 * a1
 36647: 52 06 f2                 jump @2335 if s1 != 0
      :                          @2336
 36650: 28 9b 0c                 jump @2498
      :                          @2337
 36653: 82 1a b8 00              a3 = u64 [sp + 0xb8]
 36657: 96 67 1d                 a0 = s1 * 0x1d
 36660: c8 8a 09                 a2 = a3 + a1
 36663: 78 97                    u8 [a2] = a0
 36665: 95 86 01                 s1 = a1 + 0x1
 36668: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 36671: 7b 16 c0 00              u64 [sp + 0xc0] = s1
 36675: 51 05 5b ff              jump @2330 if s0 == 0
      :                          @2338
 36679: 3a 07 e0 00 03           a0 = u64 [0x300e0]
 36684: 97 78 0d                 a1 = a0 << 0xd
 36687: d3 87 07                 a0 = a0 ^ a1
 36690: 98 76 07                 s1 = a0 >> 0x7
 36693: d3 76 06                 s1 = s1 ^ a0
 36696: 97 67 11                 a0 = s1 << 0x11
 36699: d3 67 07                 a0 = a0 ^ s1
 36702: 3e 07 e0 00 03           u64 [0x300e0] = a0
 36707: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 36711: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 36715: ab 78 c2                 jump @2337 if a1 != a0
      :                          @2339
 36718: 95 17 b0 00              a0 = sp + 0xb0
 36722: 50 20 62 02 fb 90        ra = 610, jump @682
      :                          @2340 [@dyn 305]
 36728: 82 18 c0 00              a1 = u64 [sp + 0xc0]
 36732: 28 b1                    jump @2337
      :                          @2341 [@dyn 306]
 36734: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36739: 97 89 0d                 a2 = a1 << 0xd
 36742: d3 98 08                 a1 = a1 ^ a2
 36745: 98 89 07                 a2 = a1 >> 0x7
 36748: d3 98 08                 a1 = a1 ^ a2
 36751: 97 89 11                 a2 = a1 << 0x11
 36754: d3 98 08                 a1 = a1 ^ a2
 36757: 3a 09 60 00 03           a2 = u64 [0x30060]
 36762: 3a 0a 78 00 03           a3 = u64 [0x30078]
 36767: 3e 08 e0 00 03           u64 [0x300e0] = a1
 36772: ca 98 07                 a0 = a1 * a2
 36775: 98 78 05                 a1 = a0 >> 0x5
 36778: d6 a8 08                 a1 = a1 mulhu a3
 36781: 98 88 07                 a1 = a1 >> 0x7
 36784: 96 88 a0 86 01           a1 = a1 * 0x186a0
 36789: c9 87 07                 a0 = a0 - a1
 36792: 95 77 01                 a0 = a0 + 0x1
 36795: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 36799: 50 20 66 02 e3 a5        ra = 614, jump @1043
      :                          @2342 [@dyn 307]
 36805: 7b 17 90 00              u64 [sp + 0x90] = a0
 36809: 95 17 b0 00              a0 = sp + 0xb0
 36813: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 36817: 33 07 28 03              a0 = 0x328
 36821: 7b 17 00 01              u64 [sp + 0x100] = a0
 36825: 95 18 90 00              a1 = sp + 0x90
 36829: 7b 18 08 01              u64 [sp + 0x108] = a1
 36833: 7b 17 10 01              u64 [sp + 0x110] = a0
 36837: 33 07 10 0d 01           a0 = 0x10d10
 36842: 7b 17 50 01              u64 [sp + 0x150] = a0
 36846: 49 21 58 01 02           u64 [sp + 344] = 0x2
 36851: 49 21 70 01              u64 [sp + 368] = 0
 36855: 95 18 f8 00              a1 = sp + 0xf8
 36859: 7b 18 60 01              u64 [sp + 0x160] = a1
 36863: 49 21 68 01 02           u64 [sp + 360] = 0x2
 36868: 95 17 c8 00              a0 = sp + 0xc8
 36872: 95 18 50 01              a1 = sp + 0x150
 36876: 50 20 68 02 6f 8d        ra = 616, jump @611
      :                          @2343 [@dyn 308]
 36882: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 36886: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 36890: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 36894: 33 07 03                 a0 = 0x3
 36897: 33 08                    a1 = 0
 36899: 33 09                    a2 = 0
 36901: 64 5a                    a3 = s0
 36903: 33 00 6a 02              ra = 0x26a
 36907: 0a 64                    ecalli 100 // 'log'
 36909: 01                       fallthrough
      :                          @2344 [@dyn 309]
 36910: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 36915: 53 38 00 00 ff 1a 0e     jump @2527 if a1 <u 4294901760
      :                          @2345
 36922: 33 07 f0 02 03           a0 = 0x302f0
 36927: 95 77 00 00 01           a0 = a0 + 0x10000
 36932: 01                       fallthrough
      :                          @2346
 36933: 82 78                    a1 = u64 [a0]
 36935: c9 87 09                 a2 = a0 - a1
 36938: ab 59 03 0e              jump @2527 if a2 != s0
      :                          @2347
 36942: c9 68 09                 a2 = a1 - s1
 36945: 01                       fallthrough
      :                          @2348
 36946: 82 7a                    a3 = u64 [a0]
 36948: ab 8a f1                 jump @2346 if a3 != a1
      :                          @2349
 36951: 7b 79                    u64 [a0] = a2
 36953: 33 0b                    a4 = 0
 36955: 01                       fallthrough
      :                          @2350
 36956: ab 8a e9                 jump @2346 if a3 != a1
      :                          @2351
 36959: 28 ee 0d                 jump @2527
      :                          @2352 [@dyn 310]
 36962: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 36967: 97 89 0d                 a2 = a1 << 0xd
 36970: d3 98 08                 a1 = a1 ^ a2
 36973: 98 89 07                 a2 = a1 >> 0x7
 36976: d3 98 08                 a1 = a1 ^ a2
 36979: 97 89 11                 a2 = a1 << 0x11
 36982: d3 98 08                 a1 = a1 ^ a2
 36985: 3a 09 60 00 03           a2 = u64 [0x30060]
 36990: 3a 0a 68 00 03           a3 = u64 [0x30068]
 36995: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37000: ca 98 07                 a0 = a1 * a2
 37003: 98 78 03                 a1 = a0 >> 0x3
 37006: d6 a8 08                 a1 = a1 mulhu a3
 37009: 98 88 04                 a1 = a1 >> 0x4
 37012: 96 88 e8 03              a1 = a1 * 0x3e8
 37016: c9 87 07                 a0 = a0 - a1
 37019: 95 75 01                 s0 = a0 + 0x1
 37022: 7b 15 b0 00              u64 [sp + 0xb0] = s0
 37026: 95 17 90 00              a0 = sp + 0x90
 37030: 64 58                    a1 = s0
 37032: 33 00 6e 02              ra = 0x26e
 37036: 95 11 a8                 sp = sp + 0xffffffffffffffa8
 37039: 7b 10 50                 u64 [sp + 0x50] = ra
 37042: 7b 15 48                 u64 [sp + 0x48] = s0
 37045: 7b 16 40                 u64 [sp + 0x40] = s1
 37048: 95 86 01                 s1 = a1 + 0x1
 37051: 33 09 f0 02 03           a2 = 0x302f0
 37056: 33 02 00 00 01           t0 = 0x10000
 37061: c8 29 09                 a2 = a2 + t0
 37064: 28 31 a6                 jump @1093
      :                          @2353 [@dyn 311]
 37067: 82 18 a0 00              a1 = u64 [sp + 0xa0]
 37071: ae 85 9a 0d              jump @2531 if s0 >=u a1
      :                          @2354
 37075: 82 17 98 00              a0 = u64 [sp + 0x98]
 37079: 97 55 02                 s0 = s0 << 0x2
 37082: 7b 17 10                 u64 [sp + 0x10] = a0
 37085: c8 75 05                 s0 = s0 + a0
 37088: 95 17 b0 00              a0 = sp + 0xb0
 37092: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37096: 33 07 28 03              a0 = 0x328
 37100: 7b 17 00 01              u64 [sp + 0x100] = a0
 37104: 7b 15 08 01              u64 [sp + 0x108] = s0
 37108: 33 07 7e 03              a0 = 0x37e
 37112: 7b 17 10 01              u64 [sp + 0x110] = a0
 37116: 33 07 48 0d 01           a0 = 0x10d48
 37121: 7b 17 50 01              u64 [sp + 0x150] = a0
 37125: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37130: 49 21 70 01              u64 [sp + 368] = 0
 37134: 95 18 f8 00              a1 = sp + 0xf8
 37138: 7b 18 60 01              u64 [sp + 0x160] = a1
 37142: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37147: 95 17 c8 00              a0 = sp + 0xc8
 37151: 95 18 50 01              a1 = sp + 0x150
 37155: 50 20 70 02 58 8c        ra = 624, jump @611
      :                          @2355 [@dyn 312]
 37161: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37165: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37169: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37173: 33 07 03                 a0 = 0x3
 37176: 33 08                    a1 = 0
 37178: 33 09                    a2 = 0
 37180: 64 5a                    a3 = s0
 37182: 33 00 72 02              ra = 0x272
 37186: 0a 64                    ecalli 100 // 'log'
 37188: 01                       fallthrough
      :                          @2356 [@dyn 313]
 37189: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 37194: 53 38 00 00 ff 25        jump @2362 if a1 <u 4294901760
      :                          @2357
 37200: 33 07 f0 02 03           a0 = 0x302f0
 37205: 95 77 00 00 01           a0 = a0 + 0x10000
 37210: 01                       fallthrough
      :                          @2358
 37211: 82 78                    a1 = u64 [a0]
 37213: c9 87 09                 a2 = a0 - a1
 37216: ab 59 0f                 jump @2362 if a2 != s0
      :                          @2359
 37219: c9 68 09                 a2 = a1 - s1
 37222: 01                       fallthrough
      :                          @2360
 37223: 82 7a                    a3 = u64 [a0]
 37225: ab 8a f2                 jump @2358 if a3 != a1
      :                          @2361
 37228: 7b 79                    u64 [a0] = a2
 37230: 01                       fallthrough
      :                          @2362
 37231: 82 17 90 00              a0 = u64 [sp + 0x90]
 37235: 82 16 10                 s1 = u64 [sp + 0x10]
 37238: 51 07 d7 0c              jump @2527 if a0 == 0
      :                          @2363
 37242: 56 27 00 40 d3 0c        jump @2527 if a0 >u 16384
      :                          @2364
 37248: 97 77 02                 a0 = a0 << 0x2
 37251: 33 08 f0 02 03           a1 = 0x302f0
 37256: 95 88 00 00 01           a1 = a1 + 0x10000
 37261: 01                       fallthrough
      :                          @2365
 37262: 82 89                    a2 = u64 [a1]
 37264: c9 98 0a                 a3 = a1 - a2
 37267: ab 6a ba 0c              jump @2527 if a3 != s1
      :                          @2366
 37271: c9 79 0a                 a3 = a2 - a0
 37274: 01                       fallthrough
      :                          @2367
 37275: 82 8b                    a4 = u64 [a1]
 37277: ab 9b f1                 jump @2365 if a4 != a2
      :                          @2368
 37280: 7b 8a                    u64 [a1] = a3
 37282: 33 0c                    a5 = 0
 37284: 01                       fallthrough
      :                          @2369
 37285: ab 9b e9                 jump @2365 if a4 != a2
      :                          @2370
 37288: 28 a5 0c                 jump @2527
      :                          @2371 [@dyn 314]
 37291: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37296: 97 89 0d                 a2 = a1 << 0xd
 37299: d3 98 08                 a1 = a1 ^ a2
 37302: 98 89 07                 a2 = a1 >> 0x7
 37305: d3 98 08                 a1 = a1 ^ a2
 37308: 97 89 11                 a2 = a1 << 0x11
 37311: d3 98 08                 a1 = a1 ^ a2
 37314: 3a 09 60 00 03           a2 = u64 [0x30060]
 37319: 3a 0a 78 00 03           a3 = u64 [0x30078]
 37324: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37329: ca 98 07                 a0 = a1 * a2
 37332: 98 78 05                 a1 = a0 >> 0x5
 37335: d6 a8 08                 a1 = a1 mulhu a3
 37338: 98 88 07                 a1 = a1 >> 0x7
 37341: 96 88 a0 86 01           a1 = a1 * 0x186a0
 37346: c9 87 07                 a0 = a0 - a1
 37349: 95 77 01                 a0 = a0 + 0x1
 37352: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37356: 50 20 76 02 19 a4        ra = 630, jump @1060
      :                          @2372 [@dyn 315]
 37362: 7b 17 90 00              u64 [sp + 0x90] = a0
 37366: 95 17 b0 00              a0 = sp + 0xb0
 37370: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37374: 33 07 28 03              a0 = 0x328
 37378: 7b 17 00 01              u64 [sp + 0x100] = a0
 37382: 95 18 90 00              a1 = sp + 0x90
 37386: 7b 18 08 01              u64 [sp + 0x108] = a1
 37390: 7b 17 10 01              u64 [sp + 0x110] = a0
 37394: 33 07 80 0d 01           a0 = 0x10d80
 37399: 7b 17 50 01              u64 [sp + 0x150] = a0
 37403: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37408: 49 21 70 01              u64 [sp + 368] = 0
 37412: 95 18 f8 00              a1 = sp + 0xf8
 37416: 7b 18 60 01              u64 [sp + 0x160] = a1
 37420: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37425: 95 17 c8 00              a0 = sp + 0xc8
 37429: 95 18 50 01              a1 = sp + 0x150
 37433: 50 20 78 02 42 8b        ra = 632, jump @611
      :                          @2373 [@dyn 316]
 37439: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37443: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37447: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37451: 33 07 03                 a0 = 0x3
 37454: 33 08                    a1 = 0
 37456: 33 09                    a2 = 0
 37458: 64 5a                    a3 = s0
 37460: 33 00 7a 02              ra = 0x27a
 37464: 0a 64                    ecalli 100 // 'log'
 37466: 01                       fallthrough
      :                          @2374 [@dyn 317]
 37467: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 37472: 53 38 00 00 ff ed 0b     jump @2527 if a1 <u 4294901760
      :                          @2375
 37479: 33 07 f0 02 03           a0 = 0x302f0
 37484: 95 77 00 00 01           a0 = a0 + 0x10000
 37489: 01                       fallthrough
      :                          @2376
 37490: 82 78                    a1 = u64 [a0]
 37492: c9 87 09                 a2 = a0 - a1
 37495: ab 59 d6 0b              jump @2527 if a2 != s0
      :                          @2377
 37499: c9 68 09                 a2 = a1 - s1
 37502: 01                       fallthrough
      :                          @2378
 37503: 82 7a                    a3 = u64 [a0]
 37505: ab 8a f1                 jump @2376 if a3 != a1
      :                          @2379
 37508: 7b 79                    u64 [a0] = a2
 37510: 33 0b                    a4 = 0
 37512: 01                       fallthrough
      :                          @2380
 37513: ab 8a e9                 jump @2376 if a3 != a1
      :                          @2381
 37516: 28 c1 0b                 jump @2527
      :                          @2382 [@dyn 318]
 37519: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37524: 97 89 0d                 a2 = a1 << 0xd
 37527: d3 98 08                 a1 = a1 ^ a2
 37530: 98 89 07                 a2 = a1 >> 0x7
 37533: d3 98 08                 a1 = a1 ^ a2
 37536: 97 89 11                 a2 = a1 << 0x11
 37539: d3 98 08                 a1 = a1 ^ a2
 37542: 3a 09 60 00 03           a2 = u64 [0x30060]
 37547: 3a 0a 78 00 03           a3 = u64 [0x30078]
 37552: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37557: ca 98 07                 a0 = a1 * a2
 37560: 98 78 05                 a1 = a0 >> 0x5
 37563: d6 a8 08                 a1 = a1 mulhu a3
 37566: 98 88 07                 a1 = a1 >> 0x7
 37569: 96 88 a0 86 01           a1 = a1 * 0x186a0
 37574: c9 87 07                 a0 = a0 - a1
 37577: 95 77 01                 a0 = a0 + 0x1
 37580: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37584: 50 20 7e 02 8d a3        ra = 638, jump @1071
      :                          @2383 [@dyn 319]
 37590: 7b 17 90 00              u64 [sp + 0x90] = a0
 37594: 95 17 b0 00              a0 = sp + 0xb0
 37598: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37602: 33 07 28 03              a0 = 0x328
 37606: 7b 17 00 01              u64 [sp + 0x100] = a0
 37610: 95 18 90 00              a1 = sp + 0x90
 37614: 7b 18 08 01              u64 [sp + 0x108] = a1
 37618: 7b 17 10 01              u64 [sp + 0x110] = a0
 37622: 33 07 b0 0d 01           a0 = 0x10db0
 37627: 7b 17 50 01              u64 [sp + 0x150] = a0
 37631: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37636: 49 21 70 01              u64 [sp + 368] = 0
 37640: 95 18 f8 00              a1 = sp + 0xf8
 37644: 7b 18 60 01              u64 [sp + 0x160] = a1
 37648: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37653: 95 17 c8 00              a0 = sp + 0xc8
 37657: 95 18 50 01              a1 = sp + 0x150
 37661: 50 20 80 02 5e 8a        ra = 640, jump @611
      :                          @2384 [@dyn 320]
 37667: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37671: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37675: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37679: 33 07 03                 a0 = 0x3
 37682: 33 08                    a1 = 0
 37684: 33 09                    a2 = 0
 37686: 64 5a                    a3 = s0
 37688: 33 00 82 02              ra = 0x282
 37692: 0a 64                    ecalli 100 // 'log'
 37694: 01                       fallthrough
      :                          @2385 [@dyn 321]
 37695: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 37700: 53 38 00 00 ff 09 0b     jump @2527 if a1 <u 4294901760
      :                          @2386
 37707: 33 07 f0 02 03           a0 = 0x302f0
 37712: 95 77 00 00 01           a0 = a0 + 0x10000
 37717: 01                       fallthrough
      :                          @2387
 37718: 82 78                    a1 = u64 [a0]
 37720: c9 87 09                 a2 = a0 - a1
 37723: ab 59 f2 0a              jump @2527 if a2 != s0
      :                          @2388
 37727: c9 68 09                 a2 = a1 - s1
 37730: 01                       fallthrough
      :                          @2389
 37731: 82 7a                    a3 = u64 [a0]
 37733: ab 8a f1                 jump @2387 if a3 != a1
      :                          @2390
 37736: 7b 79                    u64 [a0] = a2
 37738: 33 0b                    a4 = 0
 37740: 01                       fallthrough
      :                          @2391
 37741: ab 8a e9                 jump @2387 if a3 != a1
      :                          @2392
 37744: 28 dd 0a                 jump @2527
      :                          @2393 [@dyn 322]
 37747: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37752: 97 89 0d                 a2 = a1 << 0xd
 37755: d3 98 08                 a1 = a1 ^ a2
 37758: 98 89 07                 a2 = a1 >> 0x7
 37761: d3 98 08                 a1 = a1 ^ a2
 37764: 97 89 11                 a2 = a1 << 0x11
 37767: d3 98 08                 a1 = a1 ^ a2
 37770: 3a 09 60 00 03           a2 = u64 [0x30060]
 37775: 3a 0a 78 00 03           a3 = u64 [0x30078]
 37780: 3e 08 e0 00 03           u64 [0x300e0] = a1
 37785: ca 98 07                 a0 = a1 * a2
 37788: 98 78 05                 a1 = a0 >> 0x5
 37791: d6 a8 08                 a1 = a1 mulhu a3
 37794: 98 88 07                 a1 = a1 >> 0x7
 37797: 96 88 a0 86 01           a1 = a1 * 0x186a0
 37802: c9 87 07                 a0 = a0 - a1
 37805: 95 77 01                 a0 = a0 + 0x1
 37808: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 37812: 50 20 86 02 f9 a2        ra = 646, jump @1081
      :                          @2394 [@dyn 323]
 37818: 7b 17 90 00              u64 [sp + 0x90] = a0
 37822: 95 17 b0 00              a0 = sp + 0xb0
 37826: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 37830: 33 07 28 03              a0 = 0x328
 37834: 7b 17 00 01              u64 [sp + 0x100] = a0
 37838: 95 17 90 00              a0 = sp + 0x90
 37842: 7b 17 08 01              u64 [sp + 0x108] = a0
 37846: 33 07 80 03              a0 = 0x380
 37850: 7b 17 10 01              u64 [sp + 0x110] = a0
 37854: 33 07 d8 0d 01           a0 = 0x10dd8
 37859: 7b 17 50 01              u64 [sp + 0x150] = a0
 37863: 49 21 58 01 02           u64 [sp + 344] = 0x2
 37868: 49 21 70 01              u64 [sp + 368] = 0
 37872: 95 18 f8 00              a1 = sp + 0xf8
 37876: 7b 18 60 01              u64 [sp + 0x160] = a1
 37880: 49 21 68 01 02           u64 [sp + 360] = 0x2
 37885: 95 17 c8 00              a0 = sp + 0xc8
 37889: 95 18 50 01              a1 = sp + 0x150
 37893: 50 20 88 02 76 89        ra = 648, jump @611
      :                          @2395 [@dyn 324]
 37899: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 37903: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 37907: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 37911: 33 07 03                 a0 = 0x3
 37914: 33 08                    a1 = 0
 37916: 33 09                    a2 = 0
 37918: 64 5a                    a3 = s0
 37920: 33 00 8a 02              ra = 0x28a
 37924: 0a 64                    ecalli 100 // 'log'
 37926: 01                       fallthrough
      :                          @2396 [@dyn 325]
 37927: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 37932: 53 38 00 00 ff 21 0a     jump @2527 if a1 <u 4294901760
      :                          @2397
 37939: 33 07 f0 02 03           a0 = 0x302f0
 37944: 95 77 00 00 01           a0 = a0 + 0x10000
 37949: 01                       fallthrough
      :                          @2398
 37950: 82 78                    a1 = u64 [a0]
 37952: c9 87 09                 a2 = a0 - a1
 37955: ab 59 0a 0a              jump @2527 if a2 != s0
      :                          @2399
 37959: c9 68 09                 a2 = a1 - s1
 37962: 01                       fallthrough
      :                          @2400
 37963: 82 7a                    a3 = u64 [a0]
 37965: ab 8a f1                 jump @2398 if a3 != a1
      :                          @2401
 37968: 7b 79                    u64 [a0] = a2
 37970: 33 0b                    a4 = 0
 37972: 01                       fallthrough
      :                          @2402
 37973: ab 8a e9                 jump @2398 if a3 != a1
      :                          @2403
 37976: 28 f5 09                 jump @2527
      :                          @2404 [@dyn 326]
 37979: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 37984: 97 89 0d                 a2 = a1 << 0xd
 37987: d3 98 08                 a1 = a1 ^ a2
 37990: 98 89 07                 a2 = a1 >> 0x7
 37993: d3 98 08                 a1 = a1 ^ a2
 37996: 97 89 11                 a2 = a1 << 0x11
 37999: d3 98 08                 a1 = a1 ^ a2
 38002: 3a 09 60 00 03           a2 = u64 [0x30060]
 38007: 3a 0a 68 00 03           a3 = u64 [0x30068]
 38012: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38017: ca 98 07                 a0 = a1 * a2
 38020: 98 78 03                 a1 = a0 >> 0x3
 38023: d6 a8 08                 a1 = a1 mulhu a3
 38026: 98 88 04                 a1 = a1 >> 0x4
 38029: 96 88 e8 03              a1 = a1 * 0x3e8
 38033: c9 87 07                 a0 = a0 - a1
 38036: 95 77 01                 a0 = a0 + 0x1
 38039: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38043: 33 00 8e 02              ra = 0x28e
 38047: 33 08                    a1 = 0
 38049: 33 09 01                 a2 = 0x1
 38052: 28 62 a4                 jump @1142
      :                          @2405 [@dyn 327]
 38055: 7b 17 90 00              u64 [sp + 0x90] = a0
 38059: 95 17 b0 00              a0 = sp + 0xb0
 38063: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38067: 33 07 28 03              a0 = 0x328
 38071: 7b 17 00 01              u64 [sp + 0x100] = a0
 38075: 95 18 90 00              a1 = sp + 0x90
 38079: 7b 18 08 01              u64 [sp + 0x108] = a1
 38083: 7b 17 10 01              u64 [sp + 0x110] = a0
 38087: 33 07 18 0e 01           a0 = 0x10e18
 38092: 7b 17 50 01              u64 [sp + 0x150] = a0
 38096: 49 21 58 01 02           u64 [sp + 344] = 0x2
 38101: 49 21 70 01              u64 [sp + 368] = 0
 38105: 95 18 f8 00              a1 = sp + 0xf8
 38109: 7b 18 60 01              u64 [sp + 0x160] = a1
 38113: 49 21 68 01 02           u64 [sp + 360] = 0x2
 38118: 95 17 c8 00              a0 = sp + 0xc8
 38122: 95 18 50 01              a1 = sp + 0x150
 38126: 50 20 90 02 8d 88        ra = 656, jump @611
      :                          @2406 [@dyn 328]
 38132: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38136: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38140: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38144: 33 07 03                 a0 = 0x3
 38147: 33 08                    a1 = 0
 38149: 33 09                    a2 = 0
 38151: 64 5a                    a3 = s0
 38153: 33 00 92 02              ra = 0x292
 38157: 0a 64                    ecalli 100 // 'log'
 38159: 01                       fallthrough
      :                          @2407 [@dyn 329]
 38160: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 38165: 53 38 00 00 ff 38 09     jump @2527 if a1 <u 4294901760
      :                          @2408
 38172: 33 07 f0 02 03           a0 = 0x302f0
 38177: 95 77 00 00 01           a0 = a0 + 0x10000
 38182: 01                       fallthrough
      :                          @2409
 38183: 82 78                    a1 = u64 [a0]
 38185: c9 87 09                 a2 = a0 - a1
 38188: ab 59 21 09              jump @2527 if a2 != s0
      :                          @2410
 38192: c9 68 09                 a2 = a1 - s1
 38195: 01                       fallthrough
      :                          @2411
 38196: 82 7a                    a3 = u64 [a0]
 38198: ab 8a f1                 jump @2409 if a3 != a1
      :                          @2412
 38201: 7b 79                    u64 [a0] = a2
 38203: 33 0b                    a4 = 0
 38205: 01                       fallthrough
      :                          @2413
 38206: ab 8a e9                 jump @2409 if a3 != a1
      :                          @2414
 38209: 28 0c 09                 jump @2527
      :                          @2415 [@dyn 330]
 38212: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 38217: 3a 07 60 00 03           a0 = u64 [0x30060]
 38222: 97 9a 0d                 a3 = a2 << 0xd
 38225: d3 a9 09                 a2 = a2 ^ a3
 38228: 98 9a 07                 a3 = a2 >> 0x7
 38231: d3 a9 09                 a2 = a2 ^ a3
 38234: 97 9a 11                 a3 = a2 << 0x11
 38237: d3 a9 09                 a2 = a2 ^ a3
 38240: 3a 0a 70 00 03           a3 = u64 [0x30070]
 38245: ca 79 0b                 a4 = a2 * a0
 38248: 3e 09 e0 00 03           u64 [0x300e0] = a2
 38253: d6 ab 09                 a2 = a4 mulhu a3
 38256: c9 9b 0a                 a3 = a4 - a2
 38259: 98 aa 01                 a3 = a3 >> 0x1
 38262: c8 a9 09                 a2 = a2 + a3
 38265: 98 99 09                 a2 = a2 >> 0x9
 38268: 96 99 e7 03              a2 = a2 * 0x3e7
 38272: c9 9b 0b                 a4 = a4 - a2
 38275: 86 b9 01                 a2 = a4 | 0x1
 38278: 95 99 02                 a2 = a2 + 0x2
 38281: 7b 19 68 02              u64 [sp + 0x268] = a2
 38285: 3a 09 e0 00 03           a2 = u64 [0x300e0]
 38290: 97 9a 0d                 a3 = a2 << 0xd
 38293: d3 a9 09                 a2 = a2 ^ a3
 38296: 98 9a 07                 a3 = a2 >> 0x7
 38299: d3 a9 09                 a2 = a2 ^ a3
 38302: 97 9a 11                 a3 = a2 << 0x11
 38305: d3 a9 09                 a2 = a2 ^ a3
 38308: 3e 09 e0 00 03           u64 [0x300e0] = a2
 38313: 82 18 68 02              a1 = u64 [sp + 0x268]
 38317: 51 08 ba 08              jump @2529 if a1 == 0
      :                          @2416
 38321: ca 79 07                 a0 = a2 * a0
 38324: cd 87 07                 a0 = a0 %u a1
 38327: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38331: 57 07 af 08              jump @2532 if a0 <s 0
      :                          @2417
 38335: 57 08 ab 08              jump @2532 if a1 <s 0
      :                          @2418
 38339: 50 20 96 02 fe 91        ra = 662, jump @778
      :                          @2419 [@dyn 331]
 38345: 7b 17 90 00              u64 [sp + 0x90] = a0
 38349: 95 17 b0 00              a0 = sp + 0xb0
 38353: 7b 17 50 01              u64 [sp + 0x150] = a0
 38357: 33 07 80 03              a0 = 0x380
 38361: 7b 17 58 01              u64 [sp + 0x158] = a0
 38365: 95 18 68 02              a1 = sp + 0x268
 38369: 7b 18 60 01              u64 [sp + 0x160] = a1
 38373: 33 08 28 03              a1 = 0x328
 38377: 7b 18 68 01              u64 [sp + 0x168] = a1
 38381: 95 18 90 00              a1 = sp + 0x90
 38385: 7b 18 70 01              u64 [sp + 0x170] = a1
 38389: 7b 17 78 01              u64 [sp + 0x178] = a0
 38393: 33 07 38 0e 01           a0 = 0x10e38
 38398: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 38402: 49 21 00 01 03           u64 [sp + 256] = 0x3
 38407: 49 21 18 01              u64 [sp + 280] = 0
 38411: 95 18 50 01              a1 = sp + 0x150
 38415: 7b 18 08 01              u64 [sp + 0x108] = a1
 38419: 49 21 10 01 03           u64 [sp + 272] = 0x3
 38424: 95 17 c8 00              a0 = sp + 0xc8
 38428: 95 18 f8 00              a1 = sp + 0xf8
 38432: 50 20 98 02 5b 87        ra = 664, jump @611
      :                          @2420 [@dyn 332]
 38438: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 38442: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 38446: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 38450: 33 07 02                 a0 = 0x2
 38453: 33 08                    a1 = 0
 38455: 33 09                    a2 = 0
 38457: 64 5a                    a3 = s0
 38459: 33 00 9a 02              ra = 0x29a
 38463: 0a 64                    ecalli 100 // 'log'
 38465: 01                       fallthrough
      :                          @2421 [@dyn 333]
 38466: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 38471: 53 38 00 00 ff 06 08     jump @2527 if a1 <u 4294901760
      :                          @2422
 38478: 33 07 f0 02 03           a0 = 0x302f0
 38483: 95 77 00 00 01           a0 = a0 + 0x10000
 38488: 01                       fallthrough
      :                          @2423
 38489: 82 78                    a1 = u64 [a0]
 38491: c9 87 09                 a2 = a0 - a1
 38494: ab 59 ef 07              jump @2527 if a2 != s0
      :                          @2424
 38498: c9 68 09                 a2 = a1 - s1
 38501: 01                       fallthrough
      :                          @2425
 38502: 82 7a                    a3 = u64 [a0]
 38504: ab 8a f1                 jump @2423 if a3 != a1
      :                          @2426
 38507: 7b 79                    u64 [a0] = a2
 38509: 33 0b                    a4 = 0
 38511: 01                       fallthrough
      :                          @2427
 38512: ab 8a e9                 jump @2423 if a3 != a1
      :                          @2428
 38515: 28 da 07                 jump @2527
      :                          @2429 [@dyn 334]
 38518: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38523: 97 89 0d                 a2 = a1 << 0xd
 38526: d3 98 08                 a1 = a1 ^ a2
 38529: 98 89 07                 a2 = a1 >> 0x7
 38532: d3 98 08                 a1 = a1 ^ a2
 38535: 97 89 11                 a2 = a1 << 0x11
 38538: d3 98 08                 a1 = a1 ^ a2
 38541: 3a 09 60 00 03           a2 = u64 [0x30060]
 38546: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38551: 3a 0a e0 00 03           a3 = u64 [0x300e0]
 38556: ca 98 08                 a1 = a1 * a2
 38559: 97 ab 0d                 a4 = a3 << 0xd
 38562: d3 ba 0a                 a3 = a3 ^ a4
 38565: 98 ab 07                 a4 = a3 >> 0x7
 38568: d3 ba 0a                 a3 = a3 ^ a4
 38571: 97 ab 11                 a4 = a3 << 0x11
 38574: d3 ba 0a                 a3 = a3 ^ a4
 38577: ca 9a 09                 a2 = a3 * a2
 38580: 3a 0b 68 00 03           a4 = u64 [0x30068]
 38585: 3e 0a e0 00 03           u64 [0x300e0] = a3
 38590: 98 87 03                 a0 = a1 >> 0x3
 38593: d6 b7 07                 a0 = a0 mulhu a4
 38596: 98 77 04                 a0 = a0 >> 0x4
 38599: 96 77 e8 03              a0 = a0 * 0x3e8
 38603: c9 78 08                 a1 = a1 - a0
 38606: 86 88 01                 a1 = a1 | 0x1
 38609: 95 88 02                 a1 = a1 + 0x2
 38612: cd 89 07                 a0 = a2 %u a1
 38615: 50 20 9e 02 b3 a2        ra = 670, jump @1156
      :                          @2430 [@dyn 335]
 38621: 51 07 fa 06              jump @2519 if a0 == 0
      :                          @2431
 38625: 7b 18 90 00              u64 [sp + 0x90] = a1
 38629: 95 17 90 00              a0 = sp + 0x90
 38633: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 38637: 33 07 28 03              a0 = 0x328
 38641: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 38645: 33 07 78 0e 01           a0 = 0x10e78
 38650: 7b 17 50 01              u64 [sp + 0x150] = a0
 38654: 49 21 58 01 01           u64 [sp + 344] = 0x1
 38659: 49 21 70 01              u64 [sp + 368] = 0
 38663: 95 18 c8 00              a1 = sp + 0xc8
 38667: 7b 18 60 01              u64 [sp + 0x160] = a1
 38671: 49 21 68 01 01           u64 [sp + 360] = 0x1
 38676: 95 17 f8 00              a0 = sp + 0xf8
 38680: 95 18 50 01              a1 = sp + 0x150
 38684: 50 20 a0 02 5f 86        ra = 672, jump @611
      :                          @2432 [@dyn 336]
 38690: 82 15 00 01              s0 = u64 [sp + 0x100]
 38694: 82 1b 08 01              a4 = u64 [sp + 0x108]
 38698: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 38702: 33 07 03                 a0 = 0x3
 38705: 33 08                    a1 = 0
 38707: 33 09                    a2 = 0
 38709: 64 5a                    a3 = s0
 38711: 33 00 a2 02              ra = 0x2a2
 38715: 0a 64                    ecalli 100 // 'log'
 38717: 01                       fallthrough
      :                          @2433 [@dyn 337]
 38718: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 38723: 53 38 00 00 ff 0a 07     jump @2527 if a1 <u 4294901760
      :                          @2434
 38730: 33 07 f0 02 03           a0 = 0x302f0
 38735: 95 77 00 00 01           a0 = a0 + 0x10000
 38740: 01                       fallthrough
      :                          @2435
 38741: 82 78                    a1 = u64 [a0]
 38743: c9 87 09                 a2 = a0 - a1
 38746: ab 59 f3 06              jump @2527 if a2 != s0
      :                          @2436
 38750: c9 68 09                 a2 = a1 - s1
 38753: 01                       fallthrough
      :                          @2437
 38754: 82 7a                    a3 = u64 [a0]
 38756: ab 8a f1                 jump @2435 if a3 != a1
      :                          @2438
 38759: 7b 79                    u64 [a0] = a2
 38761: 33 0b                    a4 = 0
 38763: 01                       fallthrough
      :                          @2439
 38764: ab 8a e9                 jump @2435 if a3 != a1
      :                          @2440
 38767: 28 de 06                 jump @2527
      :                          @2441
 38770: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 38775: 97 89 0d                 a2 = a1 << 0xd
 38778: d3 98 08                 a1 = a1 ^ a2
 38781: 98 89 07                 a2 = a1 >> 0x7
 38784: d3 98 08                 a1 = a1 ^ a2
 38787: 97 89 11                 a2 = a1 << 0x11
 38790: d3 98 08                 a1 = a1 ^ a2
 38793: 3e 08 e0 00 03           u64 [0x300e0] = a1
 38798: ca c8 07                 a0 = a1 * a5
 38801: 64 29                    a2 = t0
 38803: 7b 12 08                 u64 [sp + 0x8] = t0
 38806: cd 27 07                 a0 = a0 %u t0
 38809: 7b 17                    u64 [sp] = a0
 38811: 7b 17 68 02              u64 [sp + 0x268] = a0
 38815: 64 58                    a1 = s0
 38817: 7b 1a 10                 u64 [sp + 0x10] = a3
 38820: 33 00 a4 02              ra = 0x2a4
 38824: 95 11 c0                 sp = sp + 0xffffffffffffffc0
 38827: 7b 10 38                 u64 [sp + 0x38] = ra
 38830: 7b 15 30                 u64 [sp + 0x30] = s0
 38833: 7b 16 28                 u64 [sp + 0x28] = s1
 38836: 33 0c e0 00 03           a5 = 0x300e0
 38841: 3a 06 e0 00 03           s1 = u64 [0x300e0]
 38846: 7b 1b 08                 u64 [sp + 0x8] = a4
 38849: 64 95                    s0 = a2
 38851: 7b 17                    u64 [sp] = a0
 38853: 97 67 0d                 a0 = s1 << 0xd
 38856: d3 67 07                 a0 = a0 ^ s1
 38859: 98 79 07                 a2 = a0 >> 0x7
 38862: d3 97 07                 a0 = a0 ^ a2
 38865: 97 79 11                 a2 = a0 << 0x11
 38868: d3 97 07                 a0 = a0 ^ a2
 38871: 3a 09 58 00 03           a2 = u64 [0x30058]
 38876: 3e 07 e0 00 03           u64 [0x300e0] = a0
 38881: 95 5b ff                 a4 = s0 + 0xffffffffffffffff
 38884: ca 97 07                 a0 = a0 * a2
 38887: cd b7 09                 a2 = a0 %u a4
 38890: 95 99 01                 a2 = a2 + 0x1
 38893: 33 06 01                 s1 = 0x1
 38896: 64 97                    a0 = a2
 38898: 28 f1 b6                 jump @1620
      :                          @2442 [@dyn 338]
 38901: 64 79                    a2 = a0
 38903: 64 8a                    a3 = a1
 38905: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 38909: 7b 18 90 00              u64 [sp + 0x90] = a1
 38913: 82 17                    a0 = u64 [sp]
 38915: 64 98                    a1 = a2
 38917: 64 a9                    a2 = a3
 38919: 64 5a                    a3 = s0
 38921: 82 1b 08                 a4 = u64 [sp + 0x8]
 38924: 82 1c 10                 a5 = u64 [sp + 0x10]
 38927: 64 64                    t2 = s1
 38929: 50 20 a6 02 46 b7        ra = 678, jump @1629
      :                          @2443 [@dyn 339]
 38935: 78 17 88 00              u8 [sp + 0x88] = a0
 38939: 95 17 68 02              a0 = sp + 0x268
 38943: 7b 17 50 01              u64 [sp + 0x150] = a0
 38947: 33 07 28 03              a0 = 0x328
 38951: 7b 17 58 01              u64 [sp + 0x158] = a0
 38955: 95 18 b0 00              a1 = sp + 0xb0
 38959: 7b 18 60 01              u64 [sp + 0x160] = a1
 38963: 7b 17 68 01              u64 [sp + 0x168] = a0
 38967: 95 18 90 00              a1 = sp + 0x90
 38971: 7b 18 70 01              u64 [sp + 0x170] = a1
 38975: 7b 17 78 01              u64 [sp + 0x178] = a0
 38979: 95 17 88 00              a0 = sp + 0x88
 38983: 7b 17 80 01              u64 [sp + 0x180] = a0
 38987: 33 07 74 03              a0 = 0x374
 38991: 7b 17 88 01              u64 [sp + 0x188] = a0
 38995: 33 07 10 06 01           a0 = 0x10610
 39000: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39004: 49 21 00 01 04           u64 [sp + 256] = 0x4
 39009: 49 21 18 01              u64 [sp + 280] = 0
 39013: 95 18 50 01              a1 = sp + 0x150
 39017: 7b 18 08 01              u64 [sp + 0x108] = a1
 39021: 49 21 10 01 04           u64 [sp + 272] = 0x4
 39026: 95 17 c8 00              a0 = sp + 0xc8
 39030: 95 18 f8 00              a1 = sp + 0xf8
 39034: 50 20 a8 02 01 85        ra = 680, jump @611
      :                          @2444 [@dyn 340]
 39040: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39044: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39048: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39052: 33 07 03                 a0 = 0x3
 39055: 33 08                    a1 = 0
 39057: 33 09                    a2 = 0
 39059: 64 5a                    a3 = s0
 39061: 33 00 aa 02              ra = 0x2aa
 39065: 0a 64                    ecalli 100 // 'log'
 39067: 01                       fallthrough
      :                          @2445 [@dyn 341]
 39068: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39073: 53 38 00 00 ff ac 05     jump @2527 if a1 <u 4294901760
      :                          @2446
 39080: 33 07 f0 02 03           a0 = 0x302f0
 39085: 95 77 00 00 01           a0 = a0 + 0x10000
 39090: 01                       fallthrough
      :                          @2447
 39091: 82 78                    a1 = u64 [a0]
 39093: c9 87 09                 a2 = a0 - a1
 39096: ab 59 95 05              jump @2527 if a2 != s0
      :                          @2448
 39100: c9 68 09                 a2 = a1 - s1
 39103: 01                       fallthrough
      :                          @2449
 39104: 82 7a                    a3 = u64 [a0]
 39106: ab 8a f1                 jump @2447 if a3 != a1
      :                          @2450
 39109: 7b 79                    u64 [a0] = a2
 39111: 33 0b                    a4 = 0
 39113: 01                       fallthrough
      :                          @2451
 39114: ab 8a e9                 jump @2447 if a3 != a1
      :                          @2452
 39117: 28 80 05                 jump @2527
      :                          @2453
 39120: 7b 19 b0 00              u64 [sp + 0xb0] = a2
 39124: 33 00 ac 02              ra = 0x2ac
 39128: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 39131: 7b 10 20                 u64 [sp + 0x20] = ra
 39134: 7b 15 18                 u64 [sp + 0x18] = s0
 39137: 64 85                    s0 = a1
 39139: 64 78                    a1 = a0
 39141: 64 17                    a0 = sp
 39143: 64 59                    a2 = s0
 39145: 33 00 cc 00              ra = 0xcc
 39149: 28 03 8e                 jump @762
      :                          @2454 [@dyn 342]
 39152: 7b 17 90 00              u64 [sp + 0x90] = a0
 39156: 7b 18 98 00              u64 [sp + 0x98] = a1
 39160: 95 17 80 00              a0 = sp + 0x80
 39164: 7b 17 50 01              u64 [sp + 0x150] = a0
 39168: 33 07 28 03              a0 = 0x328
 39172: 7b 17 58 01              u64 [sp + 0x158] = a0
 39176: 95 18 88 00              a1 = sp + 0x88
 39180: 7b 18 60 01              u64 [sp + 0x160] = a1
 39184: 7b 17 68 01              u64 [sp + 0x168] = a0
 39188: 95 18 68 02              a1 = sp + 0x268
 39192: 7b 18 70 01              u64 [sp + 0x170] = a1
 39196: 7b 17 78 01              u64 [sp + 0x178] = a0
 39200: 95 18 b0 00              a1 = sp + 0xb0
 39204: 7b 18 80 01              u64 [sp + 0x180] = a1
 39208: 7b 17 88 01              u64 [sp + 0x188] = a0
 39212: 95 17 90 00              a0 = sp + 0x90
 39216: 7b 17 90 01              u64 [sp + 0x190] = a0
 39220: 33 07 ac 00              a0 = 0xac
 39224: 7b 17 98 01              u64 [sp + 0x198] = a0
 39228: 33 07 d0 0a 01           a0 = 0x10ad0
 39233: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39237: 49 21 00 01 05           u64 [sp + 256] = 0x5
 39242: 49 21 18 01              u64 [sp + 280] = 0
 39246: 95 18 50 01              a1 = sp + 0x150
 39250: 7b 18 08 01              u64 [sp + 0x108] = a1
 39254: 49 21 10 01 05           u64 [sp + 272] = 0x5
 39259: 95 17 c8 00              a0 = sp + 0xc8
 39263: 95 18 f8 00              a1 = sp + 0xf8
 39267: 50 20 ae 02 18 84        ra = 686, jump @611
      :                          @2455 [@dyn 343]
 39273: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39277: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39281: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39285: 33 07 03                 a0 = 0x3
 39288: 33 08                    a1 = 0
 39290: 33 09                    a2 = 0
 39292: 64 5a                    a3 = s0
 39294: 33 00 b0 02              ra = 0x2b0
 39298: 0a 64                    ecalli 100 // 'log'
 39300: 01                       fallthrough
      :                          @2456 [@dyn 344]
 39301: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39306: 53 38 00 00 ff c3 04     jump @2527 if a1 <u 4294901760
      :                          @2457
 39313: 33 07 f0 02 03           a0 = 0x302f0
 39318: 95 77 00 00 01           a0 = a0 + 0x10000
 39323: 01                       fallthrough
      :                          @2458
 39324: 82 78                    a1 = u64 [a0]
 39326: c9 87 09                 a2 = a0 - a1
 39329: ab 59 ac 04              jump @2527 if a2 != s0
      :                          @2459
 39333: c9 68 09                 a2 = a1 - s1
 39336: 01                       fallthrough
      :                          @2460
 39337: 82 7a                    a3 = u64 [a0]
 39339: ab 8a f1                 jump @2458 if a3 != a1
      :                          @2461
 39342: 7b 79                    u64 [a0] = a2
 39344: 33 0b                    a4 = 0
 39346: 01                       fallthrough
      :                          @2462
 39347: ab 8a e9                 jump @2458 if a3 != a1
      :                          @2463
 39350: 28 97 04                 jump @2527
      :                          @2464
 39353: 95 17 27                 a0 = sp + 0x27
 39356: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 39360: 33 07 5c 03              a0 = 0x35c
 39364: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 39368: 33 07 88 0e 01           a0 = 0x10e88
 39373: 7b 17 50 01              u64 [sp + 0x150] = a0
 39377: 49 21 58 01 01           u64 [sp + 344] = 0x1
 39382: 49 21 70 01              u64 [sp + 368] = 0
 39386: 95 18 c8 00              a1 = sp + 0xc8
 39390: 7b 18 60 01              u64 [sp + 0x160] = a1
 39394: 49 21 68 01 01           u64 [sp + 360] = 0x1
 39399: 95 17 f8 00              a0 = sp + 0xf8
 39403: 95 18 50 01              a1 = sp + 0x150
 39407: 50 20 b2 02 8c 83        ra = 690, jump @611
      :                          @2465 [@dyn 345]
 39413: 82 15 00 01              s0 = u64 [sp + 0x100]
 39417: 82 1b 08 01              a4 = u64 [sp + 0x108]
 39421: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 39425: 33 07 02                 a0 = 0x2
 39428: 33 08                    a1 = 0
 39430: 33 09                    a2 = 0
 39432: 64 5a                    a3 = s0
 39434: 33 00 b4 02              ra = 0x2b4
 39438: 0a 64                    ecalli 100 // 'log'
 39440: 01                       fallthrough
      :                          @2466 [@dyn 346]
 39441: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39446: 53 38 00 00 ff 37 04     jump @2527 if a1 <u 4294901760
      :                          @2467
 39453: 33 07 f0 02 03           a0 = 0x302f0
 39458: 95 77 00 00 01           a0 = a0 + 0x10000
 39463: 01                       fallthrough
      :                          @2468
 39464: 82 78                    a1 = u64 [a0]
 39466: c9 87 09                 a2 = a0 - a1
 39469: ab 59 20 04              jump @2527 if a2 != s0
      :                          @2469
 39473: c9 68 09                 a2 = a1 - s1
 39476: 01                       fallthrough
      :                          @2470
 39477: 82 7a                    a3 = u64 [a0]
 39479: ab 8a f1                 jump @2468 if a3 != a1
      :                          @2471
 39482: 7b 79                    u64 [a0] = a2
 39484: 33 0b                    a4 = 0
 39486: 01                       fallthrough
      :                          @2472
 39487: ab 8a e9                 jump @2468 if a3 != a1
      :                          @2473
 39490: 28 0b 04                 jump @2527
      :                          @2474
 39493: 33 0a                    a3 = 0
 39495: 33 0b 01                 a4 = 0x1
 39498: 83 88                    i32 a1 = a1 + 0
 39500: 33 09 01                 a2 = 0x1
 39503: 01                       fallthrough
      :                          @2475
 39504: d8 87 0c                 a5 = a0 <u a1
 39507: 85 c6 01                 s1 = a5 ^ 0x1
 39510: be c7 07                 i32 a0 = a0 + a5
 39513: c8 9a 0c                 a5 = a3 + a2
 39516: d8 78 0a                 a3 = a1 <u a0
 39519: d4 a6 06                 s1 = s1 | a3
 39522: 64 9a                    a3 = a2
 39524: 64 b9                    a2 = a4
 39526: c8 cb 0b                 a4 = a4 + a5
 39529: 51 06 e7                 jump @2475 if s1 == 0
      :                          @2476
 39532: 7b 1b 90 00              u64 [sp + 0x90] = a4
 39536: 95 17 b0 00              a0 = sp + 0xb0
 39540: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39544: 33 07 5e 03              a0 = 0x35e
 39548: 7b 17 00 01              u64 [sp + 0x100] = a0
 39552: 95 17 90 00              a0 = sp + 0x90
 39556: 7b 17 08 01              u64 [sp + 0x108] = a0
 39560: 33 07 28 03              a0 = 0x328
 39564: 7b 17 10 01              u64 [sp + 0x110] = a0
 39568: 33 07 50 01 01           a0 = 0x10150
 39573: 7b 17 50 01              u64 [sp + 0x150] = a0
 39577: 49 21 58 01 02           u64 [sp + 344] = 0x2
 39582: 49 21 70 01              u64 [sp + 368] = 0
 39586: 95 18 f8 00              a1 = sp + 0xf8
 39590: 7b 18 60 01              u64 [sp + 0x160] = a1
 39594: 49 21 68 01 02           u64 [sp + 360] = 0x2
 39599: 95 17 c8 00              a0 = sp + 0xc8
 39603: 95 18 50 01              a1 = sp + 0x150
 39607: 50 20 b6 02 c4 82        ra = 694, jump @611
      :                          @2477 [@dyn 347]
 39613: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39617: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39621: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39625: 33 07 03                 a0 = 0x3
 39628: 33 08                    a1 = 0
 39630: 33 09                    a2 = 0
 39632: 64 5a                    a3 = s0
 39634: 33 00 b8 02              ra = 0x2b8
 39638: 0a 64                    ecalli 100 // 'log'
 39640: 01                       fallthrough
      :                          @2478 [@dyn 348]
 39641: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39646: 53 38 00 00 ff 6f 03     jump @2527 if a1 <u 4294901760
      :                          @2479
 39653: 33 07 f0 02 03           a0 = 0x302f0
 39658: 95 77 00 00 01           a0 = a0 + 0x10000
 39663: 01                       fallthrough
      :                          @2480
 39664: 82 78                    a1 = u64 [a0]
 39666: c9 87 09                 a2 = a0 - a1
 39669: ab 59 58 03              jump @2527 if a2 != s0
      :                          @2481
 39673: c9 68 09                 a2 = a1 - s1
 39676: 01                       fallthrough
      :                          @2482
 39677: 82 7a                    a3 = u64 [a0]
 39679: ab 8a f1                 jump @2480 if a3 != a1
      :                          @2483
 39682: 7b 79                    u64 [a0] = a2
 39684: 33 0b                    a4 = 0
 39686: 01                       fallthrough
      :                          @2484
 39687: ab 8a e9                 jump @2480 if a3 != a1
      :                          @2485
 39690: 28 43 03                 jump @2527
      :                          @2486
 39693: 64 89                    a2 = a1
 39695: 01                       fallthrough
      :                          @2487
 39696: 7b 19 90 00              u64 [sp + 0x90] = a2
 39700: 95 17 68 02              a0 = sp + 0x268
 39704: 7b 17 50 01              u64 [sp + 0x150] = a0
 39708: 33 07 28 03              a0 = 0x328
 39712: 7b 17 58 01              u64 [sp + 0x158] = a0
 39716: 95 18 b0 00              a1 = sp + 0xb0
 39720: 7b 18 60 01              u64 [sp + 0x160] = a1
 39724: 7b 17 68 01              u64 [sp + 0x168] = a0
 39728: 95 18 90 00              a1 = sp + 0x90
 39732: 7b 18 70 01              u64 [sp + 0x170] = a1
 39736: 7b 17 78 01              u64 [sp + 0x178] = a0
 39740: 33 07 a0 09 01           a0 = 0x109a0
 39745: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 39749: 49 21 00 01 03           u64 [sp + 256] = 0x3
 39754: 49 21 18 01              u64 [sp + 280] = 0
 39758: 95 18 50 01              a1 = sp + 0x150
 39762: 7b 18 08 01              u64 [sp + 0x108] = a1
 39766: 49 21 10 01 03           u64 [sp + 272] = 0x3
 39771: 95 17 c8 00              a0 = sp + 0xc8
 39775: 95 18 f8 00              a1 = sp + 0xf8
 39779: 50 20 ba 02 18 82        ra = 698, jump @611
      :                          @2488 [@dyn 349]
 39785: 82 15 d0 00              s0 = u64 [sp + 0xd0]
 39789: 82 1b d8 00              a4 = u64 [sp + 0xd8]
 39793: 82 16 c8 00              s1 = u64 [sp + 0xc8]
 39797: 33 07 03                 a0 = 0x3
 39800: 33 08                    a1 = 0
 39802: 33 09                    a2 = 0
 39804: 64 5a                    a3 = s0
 39806: 33 00 bc 02              ra = 0x2bc
 39810: 0a 64                    ecalli 100 // 'log'
 39812: 01                       fallthrough
      :                          @2489 [@dyn 350]
 39813: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 39818: 53 38 00 00 ff c3 02     jump @2527 if a1 <u 4294901760
      :                          @2490
 39825: 33 07 f0 02 03           a0 = 0x302f0
 39830: 95 77 00 00 01           a0 = a0 + 0x10000
 39835: 01                       fallthrough
      :                          @2491
 39836: 82 78                    a1 = u64 [a0]
 39838: c9 87 09                 a2 = a0 - a1
 39841: ab 59 ac 02              jump @2527 if a2 != s0
      :                          @2492
 39845: c9 68 09                 a2 = a1 - s1
 39848: 01                       fallthrough
      :                          @2493
 39849: 82 7a                    a3 = u64 [a0]
 39851: ab 8a f1                 jump @2491 if a3 != a1
      :                          @2494
 39854: 7b 79                    u64 [a0] = a2
 39856: 33 0b                    a4 = 0
 39858: 01                       fallthrough
      :                          @2495
 39859: ab 8a e9                 jump @2491 if a3 != a1
      :                          @2496
 39862: 28 97 02                 jump @2527
      :                          @2497
 39865: 48 21 4c 01 01           u32 [sp + 332] = 0x1
 39870: 33 07 c5 9d 1c 81        a0 = 0xffffffff811c9dc5
 39876: 01                       fallthrough
      :                          @2498
 39877: 7a 17 80 00              u32 [sp + 0x80] = a0
 39881: 3a 08 e0 00 03           a1 = u64 [0x300e0]
 39886: 97 89 0d                 a2 = a1 << 0xd
 39889: d3 98 08                 a1 = a1 ^ a2
 39892: 98 89 07                 a2 = a1 >> 0x7
 39895: d3 98 08                 a1 = a1 ^ a2
 39898: 97 89 11                 a2 = a1 << 0x11
 39901: d3 98 08                 a1 = a1 ^ a2
 39904: 3e 08 e0 00 03           u64 [0x300e0] = a1
 39909: 87 87 1d dd 6c 4f        i32 a0 = a1 * 0x4f6cdd1d
 39915: 8b 78 10                 i32 a1 = a0 >> 0x10
 39918: d3 87 07                 a0 = a0 ^ a1
 39921: 87 77 6b ca eb 85        i32 a0 = a0 * 0xffffffff85ebca6b
 39927: 8b 78 0d                 i32 a1 = a0 >> 0xd
 39930: d3 78 08                 a1 = a1 ^ a0
 39933: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 39937: 87 88 35 ae b2 c2        i32 a1 = a1 * 0xffffffffc2b2ae35
 39943: 8b 89 10                 i32 a2 = a1 >> 0x10
 39946: d3 98 08                 a1 = a1 ^ a2
 39949: 7a 18 88 00              u32 [sp + 0x88] = a1
 39953: 51 07 2b                 jump @2502 if a0 == 0
      :                          @2499
 39956: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 39960: 33 08                    a1 = 0
 39962: 01                       fallthrough
      :                          @2500
 39963: 7c 9a                    a3 = u8 [a2]
 39965: 95 99 01                 a2 = a2 + 0x1
 39968: be a8 08                 i32 a1 = a1 + a3
 39971: 97 8a 0a                 a3 = a1 << 0xa
 39974: be a8 08                 i32 a1 = a1 + a3
 39977: 8b 8a 06                 i32 a3 = a1 >> 0x6
 39980: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 39983: d3 a8 08                 a1 = a1 ^ a3
 39986: 52 07 e9                 jump @2500 if a0 != 0
      :                          @2501
 39989: 97 87 03                 a0 = a1 << 0x3
 39992: be 87 07                 i32 a0 = a0 + a1
 39995: 01                       fallthrough
      :                          @2502
 39996: 8b 78 0b                 i32 a1 = a0 >> 0xb
 39999: d3 87 07                 a0 = a0 ^ a1
 40002: 97 78 0f                 a1 = a0 << 0xf
 40005: be 87 07                 i32 a0 = a0 + a1
 40008: 7a 17 68 02              u32 [sp + 0x268] = a0
 40012: 95 17 48 01              a0 = sp + 0x148
 40016: 7b 17 f8 00              u64 [sp + 0xf8] = a0
 40020: 33 07 7a 03              a0 = 0x37a
 40024: 7b 17 00 01              u64 [sp + 0x100] = a0
 40028: 95 18 4c 01              a1 = sp + 0x14c
 40032: 7b 18 08 01              u64 [sp + 0x108] = a1
 40036: 7b 17 10 01              u64 [sp + 0x110] = a0
 40040: 95 18 80 00              a1 = sp + 0x80
 40044: 7b 18 18 01              u64 [sp + 0x118] = a1
 40048: 7b 17 20 01              u64 [sp + 0x120] = a0
 40052: 95 18 88 00              a1 = sp + 0x88
 40056: 7b 18 28 01              u64 [sp + 0x128] = a1
 40060: 7b 17 30 01              u64 [sp + 0x130] = a0
 40064: 95 18 68 02              a1 = sp + 0x268
 40068: 7b 18 38 01              u64 [sp + 0x138] = a1
 40072: 7b 17 40 01              u64 [sp + 0x140] = a0
 40076: 49 21 50 01 02           u64 [sp + 336] = 0x2
 40081: 49 21 60 01              u64 [sp + 352] = 0
 40085: 49 21 68 01 08           u64 [sp + 360] = 0x8
 40090: 49 21 70 01              u64 [sp + 368] = 0
 40094: 14 09 20 00 00 00 08 00 00 00 a2 = 0x800000020
 40104: 7b 19 78 01              u64 [sp + 0x178] = a2
 40108: 46 21 80 01 03           u8 [sp + 384] = 0x3
 40113: 49 21 88 01 02           u64 [sp + 392] = 0x2
 40118: 49 21 98 01              u64 [sp + 408] = 0
 40122: 49 21 a0 01 08           u64 [sp + 416] = 0x8
 40127: 49 21 a8 01 01           u64 [sp + 424] = 0x1
 40132: 7b 19 b0 01              u64 [sp + 0x1b0] = a2
 40136: 46 21 b8 01 03           u8 [sp + 440] = 0x3
 40141: 49 21 c0 01 02           u64 [sp + 448] = 0x2
 40146: 49 21 d0 01              u64 [sp + 464] = 0
 40150: 49 21 d8 01 08           u64 [sp + 472] = 0x8
 40155: 49 21 e0 01 02           u64 [sp + 480] = 0x2
 40160: 7b 19 e8 01              u64 [sp + 0x1e8] = a2
 40164: 46 21 f0 01 03           u8 [sp + 496] = 0x3
 40169: 49 21 f8 01 02           u64 [sp + 504] = 0x2
 40174: 49 21 08 02              u64 [sp + 520] = 0
 40178: 49 21 10 02 08           u64 [sp + 528] = 0x8
 40183: 49 21 18 02 03           u64 [sp + 536] = 0x3
 40188: 7b 19 20 02              u64 [sp + 0x220] = a2
 40192: 46 21 28 02 03           u8 [sp + 552] = 0x3
 40197: 49 21 30 02 02           u64 [sp + 560] = 0x2
 40202: 49 21 40 02              u64 [sp + 576] = 0
 40206: 49 21 48 02 08           u64 [sp + 584] = 0x8
 40211: 49 21 50 02 04           u64 [sp + 592] = 0x4
 40216: 7b 19 58 02              u64 [sp + 0x258] = a2
 40220: 46 21 60 02 03           u8 [sp + 608] = 0x3
 40225: 33 07 a8 0c 01           a0 = 0x10ca8
 40230: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 40234: 49 21 d0 00 05           u64 [sp + 208] = 0x5
 40239: 95 18 50 01              a1 = sp + 0x150
 40243: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 40247: 49 21 f0 00 05           u64 [sp + 240] = 0x5
 40252: 95 18 f8 00              a1 = sp + 0xf8
 40256: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 40260: 49 21 e0 00 05           u64 [sp + 224] = 0x5
 40265: 95 17 90 00              a0 = sp + 0x90
 40269: 95 18 c8 00              a1 = sp + 0xc8
 40273: 50 20 be 02 2a 80        ra = 702, jump @611
      :                          @2503 [@dyn 351]
 40279: 82 15 98 00              s0 = u64 [sp + 0x98]
 40283: 82 1b a0 00              a4 = u64 [sp + 0xa0]
 40287: 82 16 90 00              s1 = u64 [sp + 0x90]
 40291: 33 07 03                 a0 = 0x3
 40294: 33 08                    a1 = 0
 40296: 33 09                    a2 = 0
 40298: 64 5a                    a3 = s0
 40300: 33 00 c0 02              ra = 0x2c0
 40304: 0a 64                    ecalli 100 // 'log'
 40306: 01                       fallthrough
      :                          @2504 [@dyn 352]
 40307: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 40312: 53 38 00 00 ff 25        jump @2510 if a1 <u 4294901760
      :                          @2505
 40318: 33 07 f0 02 03           a0 = 0x302f0
 40323: 95 77 00 00 01           a0 = a0 + 0x10000
 40328: 01                       fallthrough
      :                          @2506
 40329: 82 78                    a1 = u64 [a0]
 40331: c9 87 09                 a2 = a0 - a1
 40334: ab 59 0f                 jump @2510 if a2 != s0
      :                          @2507
 40337: c9 68 09                 a2 = a1 - s1
 40340: 01                       fallthrough
      :                          @2508
 40341: 82 7a                    a3 = u64 [a0]
 40343: ab 8a f2                 jump @2506 if a3 != a1
      :                          @2509
 40346: 7b 79                    u64 [a0] = a2
 40348: 01                       fallthrough
      :                          @2510
 40349: 82 17 b0 00              a0 = u64 [sp + 0xb0]
 40353: 51 07 ac 00              jump @2527 if a0 == 0
      :                          @2511
 40357: 56 37 00 00 01 a8 00     jump @2527 if a0 >u 65536
      :                          @2512
 40364: 82 18 b8 00              a1 = u64 [sp + 0xb8]
 40368: 33 0a f0 02 03           a3 = 0x302f0
 40373: 95 a9 00 00 01           a2 = a3 + 0x10000
 40378: 01                       fallthrough
      :                          @2513
 40379: 82 9a                    a3 = u64 [a2]
 40381: c9 a9 0b                 a4 = a2 - a3
 40384: ab 8b 8d 00              jump @2527 if a4 != a1
      :                          @2514
 40388: c9 7a 0b                 a4 = a3 - a0
 40391: 01                       fallthrough
      :                          @2515
 40392: 82 9c                    a5 = u64 [a2]
 40394: ab ac f1                 jump @2513 if a5 != a3
      :                          @2516
 40397: 7b 9b                    u64 [a2] = a4
 40399: 33 06                    s1 = 0
 40401: 01                       fallthrough
      :                          @2517
 40402: ab ac e9                 jump @2513 if a5 != a3
      :                          @2518
 40405: 28 78                    jump @2527
      :                          @2519
 40407: 33 07 68 0e 01           a0 = 0x10e68
 40412: 7b 17 50 01              u64 [sp + 0x150] = a0
 40416: 49 21 58 01 01           u64 [sp + 344] = 0x1
 40421: 49 21 70 01              u64 [sp + 368] = 0
 40425: 33 07 b0 11 01           a0 = 0x111b0
 40430: 7b 17 60 01              u64 [sp + 0x160] = a0
 40434: 49 21 68 01              u64 [sp + 360] = 0
 40438: 95 17 f8 00              a0 = sp + 0xf8
 40442: 95 18 50 01              a1 = sp + 0x150
 40446: 50 20 c2 02 7d 7f ff     ra = 706, jump @611
      :                          @2520 [@dyn 353]
 40453: 82 15 00 01              s0 = u64 [sp + 0x100]
 40457: 82 1b 08 01              a4 = u64 [sp + 0x108]
 40461: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 40465: 33 07 03                 a0 = 0x3
 40468: 33 08                    a1 = 0
 40470: 33 09                    a2 = 0
 40472: 64 5a                    a3 = s0
 40474: 33 00 c4 02              ra = 0x2c4
 40478: 0a 64                    ecalli 100 // 'log'
 40480: 01                       fallthrough
      :                          @2521 [@dyn 354]
 40481: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 40486: 53 38 00 00 ff 27        jump @2527 if a1 <u 4294901760
      :                          @2522
 40492: 33 07 f0 02 03           a0 = 0x302f0
 40497: 95 77 00 00 01           a0 = a0 + 0x10000
 40502: 01                       fallthrough
      :                          @2523
 40503: 82 78                    a1 = u64 [a0]
 40505: c9 87 09                 a2 = a0 - a1
 40508: ab 59 11                 jump @2527 if a2 != s0
      :                          @2524
 40511: c9 68 09                 a2 = a1 - s1
 40514: 01                       fallthrough
      :                          @2525
 40515: 82 7a                    a3 = u64 [a0]
 40517: ab 8a f2                 jump @2523 if a3 != a1
      :                          @2526
 40520: 7b 79                    u64 [a0] = a2
 40522: 0a                       ecalli 0 // 'gas'
 40523: 28 04                    jump @2528
      :                          @2527
 40525: 0a                       ecalli 0 // 'gas'
 40526: 01                       fallthrough
      :                          @2528
 40527: 82 18 18                 a1 = u64 [sp + 0x18]
 40530: c9 78 07                 a0 = a1 - a0
 40533: 82 10 80 02              ra = u64 [sp + 0x280]
 40537: 82 15 78 02              s0 = u64 [sp + 0x278]
 40541: 82 16 70 02              s1 = u64 [sp + 0x270]
 40545: 95 11 88 02              sp = sp + 0x288
 40549: 32 00                    ret
      :                          @2529
 40551: 00                       trap
      :                          @2530
 40552: 00                       trap
      :                          @2531
 40553: 00                       trap
      :                          @2532
 40554: 00                       trap
      :                          @2533 [export #0: 'refine']
 40555: 95 11 f0 fe              sp = sp + 0xfffffffffffffef0
 40559: 7b 10 08 01              u64 [sp + 0x108] = ra
 40563: 7b 15 00 01              u64 [sp + 0x100] = s0
 40567: 7b 16 f8 00              u64 [sp + 0xf8] = s1
 40571: 64 86                    s1 = a1
 40573: 33 09 00 00 01           a2 = 0x10000
 40578: 53 16 04 43              jump @2542 if s1 <u 4
      :                          @2534
 40582: 7d 78                    a1 = i8 [a0]
 40584: 33 05 01                 s0 = 0x1
 40587: 59 08 37                 jump @2541 if a1 >=s 0
      :                          @2535
 40590: 84 8a ff 00              a3 = a1 & 0xff
 40594: 33 05 02                 s0 = 0x2
 40597: 53 2a c0 00 2d           jump @2541 if a3 <u 192
      :                          @2536
 40602: 33 05 03                 s0 = 0x3
 40605: 53 2a e0 00 25           jump @2541 if a3 <u 224
      :                          @2537
 40610: 33 05 04                 s0 = 0x4
 40613: 53 2a f0 00 1d           jump @2541 if a3 <u 240
      :                          @2538
 40618: 33 05 05                 s0 = 0x5
 40621: 53 2a f8 00 15           jump @2541 if a3 <u 248
      :                          @2539
 40626: 33 05 06                 s0 = 0x6
 40629: 53 2a fc 00 0d           jump @2541 if a3 <u 252
      :                          @2540
 40634: 88 a8 fe 00              a1 = a3 <u 0xfe
 40638: 9a 85 08                 s0 = 0x8 - a1
 40641: 01                       fallthrough
      :                          @2541
 40642: ae 56 07                 jump @2543 if s1 >=u s0
      :                          @2542
 40645: 33 08                    a1 = 0
 40647: 28 60                    jump @2554
      :                          @2543
 40649: 64 58                    a1 = s0
 40651: 7b 17 50                 u64 [sp + 0x50] = a0
 40654: 50 20 c6 02 f7 25        ra = 710, jump @3218
      :                          @2544 [@dyn 355]
 40660: aa 56 4b                 jump @2553 if s1 == s0
      :                          @2545
 40663: 82 17 50                 a0 = u64 [sp + 0x50]
 40666: c8 57 07                 a0 = a0 + s0
 40669: 7d 78                    a1 = i8 [a0]
 40671: c9 56 06                 s1 = s1 - s0
 40674: 33 05 01                 s0 = 0x1
 40677: 59 08 37                 jump @2552 if a1 >=s 0
      :                          @2546
 40680: 84 89 ff 00              a2 = a1 & 0xff
 40684: 33 05 02                 s0 = 0x2
 40687: 53 29 c0 00 2d           jump @2552 if a2 <u 192
      :                          @2547
 40692: 33 05 03                 s0 = 0x3
 40695: 53 29 e0 00 25           jump @2552 if a2 <u 224
      :                          @2548
 40700: 33 05 04                 s0 = 0x4
 40703: 53 29 f0 00 1d           jump @2552 if a2 <u 240
      :                          @2549
 40708: 33 05 05                 s0 = 0x5
 40711: 53 29 f8 00 15           jump @2552 if a2 <u 248
      :                          @2550
 40716: 33 05 06                 s0 = 0x6
 40719: 53 29 fc 00 0d           jump @2552 if a2 <u 252
      :                          @2551
 40724: 88 98 fe 00              a1 = a2 <u 0xfe
 40728: 9a 85 08                 s0 = 0x8 - a1
 40731: 01                       fallthrough
      :                          @2552
 40732: ae 56 1f                 jump @2555 if s1 >=u s0
      :                          @2553
 40735: 33 08                    a1 = 0
 40737: 33 09 00 00 01           a2 = 0x10000
 40742: 01                       fallthrough
      :                          @2554
 40743: 64 97                    a0 = a2
 40745: 82 10 08 01              ra = u64 [sp + 0x108]
 40749: 82 15 00 01              s0 = u64 [sp + 0x100]
 40753: 82 16 f8 00              s1 = u64 [sp + 0xf8]
 40757: 95 11 10 01              sp = sp + 0x110
 40761: 32 00                    ret
      :                          @2555
 40763: 64 58                    a1 = s0
 40765: 7b 16 50                 u64 [sp + 0x50] = s1
 40768: 64 76                    s1 = a0
 40770: 50 20 c8 02 83 25        ra = 712, jump @3218
      :                          @2556 [@dyn 356]
 40776: c8 65 07                 a0 = s0 + s1
 40779: 82 19 50                 a2 = u64 [sp + 0x50]
 40782: 7b 17 48                 u64 [sp + 0x48] = a0
 40785: ab 59 0b                 jump @2558 if a2 != s0
      :                          @2557
 40788: 33 08                    a1 = 0
 40790: 33 06                    s1 = 0
 40792: 33 07                    a0 = 0
 40794: 28 57                    jump @2568
      :                          @2558
 40796: 7d 78                    a1 = i8 [a0]
 40798: c9 59 05                 s0 = a2 - s0
 40801: 33 06 01                 s1 = 0x1
 40804: 59 08 37                 jump @2565 if a1 >=s 0
      :                          @2559
 40807: 84 89 ff 00              a2 = a1 & 0xff
 40811: 33 06 02                 s1 = 0x2
 40814: 53 29 c0 00 2d           jump @2565 if a2 <u 192
      :                          @2560
 40819: 33 06 03                 s1 = 0x3
 40822: 53 29 e0 00 25           jump @2565 if a2 <u 224
      :                          @2561
 40827: 33 06 04                 s1 = 0x4
 40830: 53 29 f0 00 1d           jump @2565 if a2 <u 240
      :                          @2562
 40835: 33 06 05                 s1 = 0x5
 40838: 53 29 f8 00 15           jump @2565 if a2 <u 248
      :                          @2563
 40843: 33 06 06                 s1 = 0x6
 40846: 53 29 fc 00 0d           jump @2565 if a2 <u 252
      :                          @2564
 40851: 88 99 fe 00              a2 = a2 <u 0xfe
 40855: 9a 96 08                 s1 = 0x8 - a2
 40858: 01                       fallthrough
      :                          @2565
 40859: ac 65 ab 02              jump @2604 if s0 <u s1
      :                          @2566
 40863: 64 68                    a1 = s1
 40865: 50 20 ca 02 24 25        ra = 714, jump @3218
      :                          @2567 [@dyn 357]
 40871: e4 65 08                 a1 = maxu(s0, s1)
 40874: c9 68 08                 a1 = a1 - s1
 40877: ac 78 72 ff              jump @2553 if a1 <u a0
      :                          @2568
 40881: e4 78 08                 a1 = maxu(a1, a0)
 40884: c9 78 0a                 a3 = a1 - a0
 40887: 33 09 00 00 01           a2 = 0x10000
 40892: 53 1a 20 09 ff           jump @2542 if a3 <u 32
      :                          @2569
 40897: 7b 16 40                 u64 [sp + 0x40] = s1
 40900: 49 11 50 ff ff fe        u64 [sp + 80] = 0xfffffffffffeffff
 40906: 7b 17 58                 u64 [sp + 0x58] = a0
 40909: 7b 17 20                 u64 [sp + 0x20] = a0
 40912: 98 77 01                 a0 = a0 >> 0x1
 40915: 7b 17 60                 u64 [sp + 0x60] = a0
 40918: 95 17 58                 a0 = sp + 0x58
 40921: 7b 17 98 00              u64 [sp + 0x98] = a0
 40925: 33 07 28 03              a0 = 0x328
 40929: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 40933: 95 18 60                 a1 = sp + 0x60
 40936: 7b 18 a8 00              u64 [sp + 0xa8] = a1
 40940: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 40944: 33 07 b0 0e 01           a0 = 0x10eb0
 40949: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 40953: 49 21 d0 00 02           u64 [sp + 208] = 0x2
 40958: 49 21 e8 00              u64 [sp + 232] = 0
 40962: 95 18 98 00              a1 = sp + 0x98
 40966: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 40970: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 40975: 95 17 80 00              a0 = sp + 0x80
 40979: 95 18 c8 00              a1 = sp + 0xc8
 40983: 50 20 cc 02 f4 0f        ra = 716, jump @2817
      :                          @2570 [@dyn 358]
 40989: 82 15 88 00              s0 = u64 [sp + 0x88]
 40993: 82 1b 90 00              a4 = u64 [sp + 0x90]
 40997: 82 16 80 00              s1 = u64 [sp + 0x80]
 41001: 33 07 02                 a0 = 0x2
 41004: 33 08                    a1 = 0
 41006: 33 09                    a2 = 0
 41008: 64 5a                    a3 = s0
 41010: 33 00 ce 02              ra = 0x2ce
 41014: 0a 64                    ecalli 100 // 'log'
 41016: 01                       fallthrough
      :                          @2571 [@dyn 359]
 41017: 82 17 50                 a0 = u64 [sp + 0x50]
 41020: c8 67 07                 a0 = a0 + s1
 41023: 53 37 00 00 ff 27        jump @2577 if a0 <u 4294901760
      :                          @2572
 41029: 33 07 f0 02 03           a0 = 0x302f0
 41034: 95 77 00 00 01           a0 = a0 + 0x10000
 41039: 01                       fallthrough
      :                          @2573
 41040: 82 78                    a1 = u64 [a0]
 41042: c9 87 09                 a2 = a0 - a1
 41045: ab 59 11                 jump @2577 if a2 != s0
      :                          @2574
 41048: c9 68 09                 a2 = a1 - s1
 41051: 01                       fallthrough
      :                          @2575
 41052: 82 7a                    a3 = u64 [a0]
 41054: ab 8a f2                 jump @2573 if a3 != a1
      :                          @2576
 41057: 7b 79                    u64 [a0] = a2
 41059: 33 0b                    a4 = 0
 41061: 01                       fallthrough
      :                          @2577
 41062: 82 17 60                 a0 = u64 [sp + 0x60]
 41065: 82 19 48                 a2 = u64 [sp + 0x48]
 41068: 82 18 40                 a1 = u64 [sp + 0x40]
 41071: c8 89 09                 a2 = a2 + a1
 41074: 7b 17 18                 u64 [sp + 0x18] = a0
 41077: 51 07 ca 01              jump @2602 if a0 == 0
      :                          @2578
 41081: 33 0b                    a4 = 0
 41083: 33 07 5c 03              a0 = 0x35c
 41087: 7b 17 48                 u64 [sp + 0x48] = a0
 41090: 33 07 28 03              a0 = 0x328
 41094: 7b 17 40                 u64 [sp + 0x40] = a0
 41097: 33 07 f8 0e 01           a0 = 0x10ef8
 41102: 7b 17 08                 u64 [sp + 0x8] = a0
 41105: 33 07 f0 02 03           a0 = 0x302f0
 41110: 95 7c 00 00 01           a5 = a0 + 0x10000
 41115: 33 07 28 0f 01           a0 = 0x10f28
 41120: 7b 17                    u64 [sp] = a0
 41122: 7b 19 10                 u64 [sp + 0x10] = a2
 41125: 7b 1c 38                 u64 [sp + 0x38] = a5
 41128: 28 12                    jump @2580
      :                          @2579
 41130: 82 1b 30                 a4 = u64 [sp + 0x30]
 41133: 95 bb 01                 a4 = a4 + 0x1
 41136: 82 19 10                 a2 = u64 [sp + 0x10]
 41139: 82 17 18                 a0 = u64 [sp + 0x18]
 41142: aa 7b 89 01              jump @2602 if a4 == a0
      :                          @2580
 41146: 97 b7 01                 a0 = a4 << 0x1
 41149: 82 18 20                 a1 = u64 [sp + 0x20]
 41152: ae 87 85 01              jump @2603 if a0 >=u a1
      :                          @2581
 41156: c8 79 0a                 a3 = a2 + a0
 41159: 7c aa                    a3 = u8 [a3]
 41161: 86 77 01                 a0 = a0 | 0x1
 41164: 78 1a 6f                 u8 [sp + 0x6f] = a3
 41167: ae 87 76 01              jump @2603 if a0 >=u a1
      :                          @2582
 41171: 7b 1a 28                 u64 [sp + 0x28] = a3
 41174: 7b 1b 30                 u64 [sp + 0x30] = a4
 41177: c8 97 07                 a0 = a0 + a2
 41180: 7c 77                    a0 = u8 [a0]
 41182: ca 77 08                 a1 = a0 * a0
 41185: ca 78 07                 a0 = a1 * a0
 41188: 7b 17 70                 u64 [sp + 0x70] = a0
 41191: 95 17 6f                 a0 = sp + 0x6f
 41194: 7b 17 98 00              u64 [sp + 0x98] = a0
 41198: 82 17 48                 a0 = u64 [sp + 0x48]
 41201: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 41205: 95 17 70                 a0 = sp + 0x70
 41208: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 41212: 82 17 40                 a0 = u64 [sp + 0x40]
 41215: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 41219: 82 17 08                 a0 = u64 [sp + 0x8]
 41222: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 41226: 49 21 d0 00 02           u64 [sp + 208] = 0x2
 41231: 49 21 e8 00              u64 [sp + 232] = 0
 41235: 95 18 98 00              a1 = sp + 0x98
 41239: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 41243: 49 21 e0 00 02           u64 [sp + 224] = 0x2
 41248: 95 17 80 00              a0 = sp + 0x80
 41252: 95 18 c8 00              a1 = sp + 0xc8
 41256: 50 20 d0 02 e3 0e        ra = 720, jump @2817
      :                          @2583 [@dyn 360]
 41262: 82 15 88 00              s0 = u64 [sp + 0x88]
 41266: 82 1b 90 00              a4 = u64 [sp + 0x90]
 41270: 82 16 80 00              s1 = u64 [sp + 0x80]
 41274: 33 07 02                 a0 = 0x2
 41277: 33 08                    a1 = 0
 41279: 33 09                    a2 = 0
 41281: 64 5a                    a3 = s0
 41283: 33 00 d2 02              ra = 0x2d2
 41287: 0a 64                    ecalli 100 // 'log'
 41289: 01                       fallthrough
      :                          @2584 [@dyn 361]
 41290: 82 1b 38                 a4 = u64 [sp + 0x38]
 41293: 82 17 50                 a0 = u64 [sp + 0x50]
 41296: c8 67 07                 a0 = a0 + s1
 41299: 53 37 00 00 ff 1a        jump @2589 if a0 <u 4294901760
      :                          @2585
 41305: 82 b7                    a0 = u64 [a4]
 41307: c9 7b 08                 a1 = a4 - a0
 41310: ab 58 0f                 jump @2589 if a1 != s0
      :                          @2586
 41313: c9 67 08                 a1 = a0 - s1
 41316: 01                       fallthrough
      :                          @2587
 41317: 82 b9                    a2 = u64 [a4]
 41319: ab 79 f2                 jump @2585 if a2 != a0
      :                          @2588
 41322: 7b b8                    u64 [a4] = a1
 41324: 01                       fallthrough
      :                          @2589
 41325: 82 16 70                 s1 = u64 [sp + 0x70]
 41328: 49 11 78                 u64 [sp + 120] = 0
 41331: 51 06 32                 jump @2593 if s1 == 0
      :                          @2590
 41334: 82 18 28                 a1 = u64 [sp + 0x28]
 41337: 88 87 aa 00              a0 = a1 <u 0xaa
 41341: 33 05 56                 s0 = 0x56
 41344: 94 75                    s0 = 0 if a0 != 0
 41346: c8 85 05                 s0 = s0 + a1
 41349: 64 57                    a0 = s0
 41351: 33 00 d4 02              ra = 0x2d4
 41355: 28 25 b0                 jump @1683
      :                          @2591
 41358: 64 57                    a0 = s0
 41360: 50 20 d4 02 20 b0        ra = 724, jump @1683
      :                          @2592 [@dyn 362]
 41366: 82 18 78                 a1 = u64 [sp + 0x78]
 41369: c8 87 07                 a0 = a0 + a1
 41372: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 41375: 7b 17 78                 u64 [sp + 0x78] = a0
 41378: 52 06 ec                 jump @2591 if s1 != 0
      :                          @2593
 41381: 95 17 6f                 a0 = sp + 0x6f
 41384: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 41388: 82 17 48                 a0 = u64 [sp + 0x48]
 41391: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 41395: 95 17 70                 a0 = sp + 0x70
 41398: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 41402: 82 17 40                 a0 = u64 [sp + 0x40]
 41405: 7b 17 e0 00              u64 [sp + 0xe0] = a0
 41409: 95 18 78                 a1 = sp + 0x78
 41412: 7b 18 e8 00              u64 [sp + 0xe8] = a1
 41416: 7b 17 f0 00              u64 [sp + 0xf0] = a0
 41420: 82 17                    a0 = u64 [sp]
 41422: 7b 17 98 00              u64 [sp + 0x98] = a0
 41426: 49 21 a0 00 03           u64 [sp + 160] = 0x3
 41431: 49 21 b8 00              u64 [sp + 184] = 0
 41435: 95 17 c8 00              a0 = sp + 0xc8
 41439: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 41443: 49 21 b0 00 03           u64 [sp + 176] = 0x3
 41448: 95 17 80 00              a0 = sp + 0x80
 41452: 95 18 98 00              a1 = sp + 0x98
 41456: 50 20 d6 02 1b 0e        ra = 726, jump @2817
      :                          @2594 [@dyn 363]
 41462: 82 15 88 00              s0 = u64 [sp + 0x88]
 41466: 82 1b 90 00              a4 = u64 [sp + 0x90]
 41470: 82 16 80 00              s1 = u64 [sp + 0x80]
 41474: 33 07 02                 a0 = 0x2
 41477: 33 08                    a1 = 0
 41479: 33 09                    a2 = 0
 41481: 64 5a                    a3 = s0
 41483: 33 00 d8 02              ra = 0x2d8
 41487: 0a 64                    ecalli 100 // 'log'
 41489: 01                       fallthrough
      :                          @2595 [@dyn 364]
 41490: 82 17 50                 a0 = u64 [sp + 0x50]
 41493: c8 67 07                 a0 = a0 + s1
 41496: 82 1c 38                 a5 = u64 [sp + 0x38]
 41499: 53 37 00 00 ff 8f fe     jump @2579 if a0 <u 4294901760
      :                          @2596
 41506: 82 c7                    a0 = u64 [a5]
 41508: c9 7c 08                 a1 = a5 - a0
 41511: ab 58 83 fe              jump @2579 if a1 != s0
      :                          @2597
 41515: c9 67 08                 a1 = a0 - s1
 41518: 01                       fallthrough
      :                          @2598
 41519: 82 c9                    a2 = u64 [a5]
 41521: ab 79 f1                 jump @2596 if a2 != a0
      :                          @2599
 41524: 7b c8                    u64 [a5] = a1
 41526: 33 0a                    a3 = 0
 41528: 01                       fallthrough
      :                          @2600
 41529: ab 79 e9                 jump @2596 if a2 != a0
      :                          @2601
 41532: 28 6e fe                 jump @2579
      :                          @2602
 41535: 82 18 58                 a1 = u64 [sp + 0x58]
 41538: 28 e5 fc                 jump @2554
      :                          @2603
 41541: 00                       trap
      :                          @2604
 41542: 00                       trap
      :                          @2605 [export #1: 'accumulate']
 41543: 95 11 88 fe              sp = sp + 0xfffffffffffffe88
 41547: 7b 10 70 01              u64 [sp + 0x170] = ra
 41551: 7b 15 68 01              u64 [sp + 0x168] = s0
 41555: 7b 16 60 01              u64 [sp + 0x160] = s1
 41559: 33 0a 00 00 01           a3 = 0x10000
 41564: 51 08 f4 05              jump @2708 if a1 == 0
      :                          @2606
 41568: 64 86                    s1 = a1
 41570: 7d 78                    a1 = i8 [a0]
 41572: 33 05 01                 s0 = 0x1
 41575: 59 08 37                 jump @2613 if a1 >=s 0
      :                          @2607
 41578: 84 89 ff 00              a2 = a1 & 0xff
 41582: 33 05 02                 s0 = 0x2
 41585: 53 29 c0 00 2d           jump @2613 if a2 <u 192
      :                          @2608
 41590: 33 05 03                 s0 = 0x3
 41593: 53 29 e0 00 25           jump @2613 if a2 <u 224
      :                          @2609
 41598: 33 05 04                 s0 = 0x4
 41601: 53 29 f0 00 1d           jump @2613 if a2 <u 240
      :                          @2610
 41606: 33 05 05                 s0 = 0x5
 41609: 53 29 f8 00 15           jump @2613 if a2 <u 248
      :                          @2611
 41614: 33 05 06                 s0 = 0x6
 41617: 53 29 fc 00 0d           jump @2613 if a2 <u 252
      :                          @2612
 41622: 88 98 fe 00              a1 = a2 <u 0xfe
 41626: 9a 85 08                 s0 = 0x8 - a1
 41629: 01                       fallthrough
      :                          @2613
 41630: ae 56 08                 jump @2615 if s1 >=u s0
      :                          @2614
 41633: 33 08                    a1 = 0
 41635: 28 ad 05                 jump @2708
      :                          @2615
 41638: 64 58                    a1 = s0
 41640: 7b 17 50                 u64 [sp + 0x50] = a0
 41643: 50 20 da 02 1a 22        ra = 730, jump @3218
      :                          @2616 [@dyn 365]
 41649: aa 56 97 05              jump @2707 if s1 == s0
      :                          @2617
 41653: 82 17 50                 a0 = u64 [sp + 0x50]
 41656: c8 57 07                 a0 = a0 + s0
 41659: 7d 78                    a1 = i8 [a0]
 41661: c9 56 06                 s1 = s1 - s0
 41664: 33 05 01                 s0 = 0x1
 41667: 59 08 37                 jump @2624 if a1 >=s 0
      :                          @2618
 41670: 84 89 ff 00              a2 = a1 & 0xff
 41674: 33 05 02                 s0 = 0x2
 41677: 53 29 c0 00 2d           jump @2624 if a2 <u 192
      :                          @2619
 41682: 33 05 03                 s0 = 0x3
 41685: 53 29 e0 00 25           jump @2624 if a2 <u 224
      :                          @2620
 41690: 33 05 04                 s0 = 0x4
 41693: 53 29 f0 00 1d           jump @2624 if a2 <u 240
      :                          @2621
 41698: 33 05 05                 s0 = 0x5
 41701: 53 29 f8 00 15           jump @2624 if a2 <u 248
      :                          @2622
 41706: 33 05 06                 s0 = 0x6
 41709: 53 29 fc 00 0d           jump @2624 if a2 <u 252
      :                          @2623
 41714: 88 98 fe 00              a1 = a2 <u 0xfe
 41718: 9a 85 08                 s0 = 0x8 - a1
 41721: 01                       fallthrough
      :                          @2624
 41722: ac 56 4e 05              jump @2707 if s1 <u s0
      :                          @2625
 41726: 64 58                    a1 = s0
 41728: 7b 16 50                 u64 [sp + 0x50] = s1
 41731: 64 76                    s1 = a0
 41733: 50 20 dc 02 c0 21        ra = 732, jump @3218
      :                          @2626 [@dyn 366]
 41739: c8 65 07                 a0 = s0 + s1
 41742: 82 16 50                 s1 = u64 [sp + 0x50]
 41745: ab 56 0c                 jump @2628 if s1 != s0
      :                          @2627
 41748: 33 08                    a1 = 0
 41750: 33 00 de 02              ra = 0x2de
 41754: 28 ab 21                 jump @3218
      :                          @2628
 41757: 7d 79                    a2 = i8 [a0]
 41759: c9 56 06                 s1 = s1 - s0
 41762: 33 08 01                 a1 = 0x1
 41765: 59 09 44                 jump @2635 if a2 >=s 0
      :                          @2629
 41768: 84 99 ff 00              a2 = a2 & 0xff
 41772: 33 0a c0 00              a3 = 0xc0
 41776: 33 08 02                 a1 = 0x2
 41779: ac a9 36                 jump @2635 if a2 <u a3
      :                          @2630
 41782: 33 0a e0 00              a3 = 0xe0
 41786: 33 08 03                 a1 = 0x3
 41789: ac a9 2c                 jump @2635 if a2 <u a3
      :                          @2631
 41792: 33 0a f0 00              a3 = 0xf0
 41796: 33 08 04                 a1 = 0x4
 41799: ac a9 22                 jump @2635 if a2 <u a3
      :                          @2632
 41802: 33 0a f8 00              a3 = 0xf8
 41806: 33 08 05                 a1 = 0x5
 41809: ac a9 18                 jump @2635 if a2 <u a3
      :                          @2633
 41812: 33 0a fc 00              a3 = 0xfc
 41816: 33 08 06                 a1 = 0x6
 41819: ac a9 0e                 jump @2635 if a2 <u a3
      :                          @2634
 41822: 88 98 fe 00              a1 = a2 <u 0xfe
 41826: 33 09 08                 a2 = 0x8
 41829: c9 89 08                 a1 = a2 - a1
 41832: 01                       fallthrough
      :                          @2635
 41833: ac 86 df 04              jump @2707 if s1 <u a1
      :                          @2636
 41837: 50 20 de 02 58 21        ra = 734, jump @3218
      :                          @2637 [@dyn 367]
 41843: 33 07 e9 00 03           a0 = 0x300e9
 41848: 33 09 00 02              a2 = 0x200
 41852: 33 0a 0f                 a3 = 0xf
 41855: 33 08                    a1 = 0
 41857: 33 0b                    a4 = 0
 41859: 33 0c                    a5 = 0
 41861: 0a 01                    ecalli 1 // 'fetch'
 41863: 01                       fallthrough
      :                          @2638
 41864: 51 07 c0 04              jump @2707 if a0 == 0
      :                          @2639
 41868: 95 76 80                 s1 = a0 + 0xffffffffffffff80
 41871: 33 0a 00 00 01           a3 = 0x10000
 41876: 51 06 0d ff              jump @2614 if s1 == 0
      :                          @2640
 41880: 35 07 69 01 03           a0 = i8 [0x30169]
 41885: 33 05 01                 s0 = 0x1
 41888: 59 07 37                 jump @2647 if a0 >=s 0
      :                          @2641
 41891: 84 77 ff 00              a0 = a0 & 0xff
 41895: 33 05 02                 s0 = 0x2
 41898: 53 27 c0 00 2d           jump @2647 if a0 <u 192
      :                          @2642
 41903: 33 05 03                 s0 = 0x3
 41906: 53 27 e0 00 25           jump @2647 if a0 <u 224
      :                          @2643
 41911: 33 05 04                 s0 = 0x4
 41914: 53 27 f0 00 1d           jump @2647 if a0 <u 240
      :                          @2644
 41919: 33 05 05                 s0 = 0x5
 41922: 53 27 f8 00 15           jump @2647 if a0 <u 248
      :                          @2645
 41927: 33 05 06                 s0 = 0x6
 41930: 53 27 fc 00 0d           jump @2647 if a0 <u 252
      :                          @2646
 41935: 88 77 fe 00              a0 = a0 <u 0xfe
 41939: 9a 75 08                 s0 = 0x8 - a0
 41942: 01                       fallthrough
      :                          @2647
 41943: ac 56 ca fe              jump @2614 if s1 <u s0
      :                          @2648
 41947: 33 07 e9 00 03           a0 = 0x300e9
 41952: 7b 17 50                 u64 [sp + 0x50] = a0
 41955: 95 77 80 00              a0 = a0 + 0x80
 41959: 64 58                    a1 = s0
 41961: 50 20 e0 02 dc 20        ra = 736, jump @3218
      :                          @2649 [@dyn 368]
 41967: 85 57 ff                 a0 = s0 ^ 0xffffffffffffffff
 41970: c8 76 06                 s1 = s1 + a0
 41973: 51 06 53 04              jump @2707 if s1 == 0
      :                          @2650
 41977: 82 17 50                 a0 = u64 [sp + 0x50]
 41980: c8 75 05                 s0 = s0 + a0
 41983: 95 57 81 00              a0 = s0 + 0x81
 41987: 7d 78                    a1 = i8 [a0]
 41989: 33 05 01                 s0 = 0x1
 41992: 33 0a 00 00 01           a3 = 0x10000
 41997: 59 08 3b                 jump @2658 if a1 >=s 0
      :                          @2651
 42000: 84 89 ff 00              a2 = a1 & 0xff
 42004: 33 05 02                 s0 = 0x2
 42007: 53 29 c0 00 2d           jump @2657 if a2 <u 192
      :                          @2652
 42012: 33 05 03                 s0 = 0x3
 42015: 53 29 e0 00 25           jump @2657 if a2 <u 224
      :                          @2653
 42020: 33 05 04                 s0 = 0x4
 42023: 53 29 f0 00 1d           jump @2657 if a2 <u 240
      :                          @2654
 42028: 33 05 05                 s0 = 0x5
 42031: 53 29 f8 00 15           jump @2657 if a2 <u 248
      :                          @2655
 42036: 33 05 06                 s0 = 0x6
 42039: 53 29 fc 00 0d           jump @2657 if a2 <u 252
      :                          @2656
 42044: 88 98 fe 00              a1 = a2 <u 0xfe
 42048: 9a 85 08                 s0 = 0x8 - a1
 42051: 01                       fallthrough
      :                          @2657
 42052: ac 56 5d fe              jump @2614 if s1 <u s0
      :                          @2658
 42056: 64 58                    a1 = s0
 42058: 64 76                    s1 = a0
 42060: 50 20 e2 02 79 20        ra = 738, jump @3218
      :                          @2659 [@dyn 369]
 42066: 98 78 01                 a1 = a0 >> 0x1
 42069: 7b 17 58                 u64 [sp + 0x58] = a0
 42072: 51 08 64 03              jump @2699 if a1 == 0
      :                          @2660
 42076: c8 65 05                 s0 = s0 + s1
 42079: 49 11 50 ff ff fe        u64 [sp + 80] = 0xfffffffffffeffff
 42085: 7b 18 60                 u64 [sp + 0x60] = a1
 42088: 7b 15 20                 u64 [sp + 0x20] = s0
 42091: 7b 15 a0 00              u64 [sp + 0xa0] = s0
 42095: 7b 17 28                 u64 [sp + 0x28] = a0
 42098: 7b 17 a8 00              u64 [sp + 0xa8] = a0
 42102: 95 17 a0 00              a0 = sp + 0xa0
 42106: 7b 17 80 00              u64 [sp + 0x80] = a0
 42110: 33 07 06                 a0 = 0x6
 42113: 7b 17 88 00              u64 [sp + 0x88] = a0
 42117: 95 17 60                 a0 = sp + 0x60
 42120: 7b 17 90 00              u64 [sp + 0x90] = a0
 42124: 33 07 28 03              a0 = 0x328
 42128: 7b 17 98 00              u64 [sp + 0x98] = a0
 42132: 49 21 b0 00 02           u64 [sp + 176] = 0x2
 42137: 49 21 c0 00 02           u64 [sp + 192] = 0x2
 42142: 49 21 d0 00              u64 [sp + 208] = 0
 42146: 14 09 20 00 00 00 10 00 00 00 a2 = 0x1000000020
 42156: 7b 19 d8 00              u64 [sp + 0xd8] = a2
 42160: 46 21 e0 00 03           u8 [sp + 224] = 0x3
 42165: 49 21 e8 00 02           u64 [sp + 232] = 0x2
 42170: 49 21 f8 00 02           u64 [sp + 248] = 0x2
 42175: 49 21 08 01 01           u64 [sp + 264] = 0x1
 42180: 49 21 10 01 20           u64 [sp + 272] = 0x20
 42185: 46 21 18 01 03           u8 [sp + 280] = 0x3
 42190: 33 08 60 0f 01           a1 = 0x10f60
 42195: 7b 18 30 01              u64 [sp + 0x130] = a1
 42199: 49 21 38 01 02           u64 [sp + 312] = 0x2
 42204: 95 18 b0 00              a1 = sp + 0xb0
 42208: 7b 18 50 01              u64 [sp + 0x150] = a1
 42212: 49 21 58 01 02           u64 [sp + 344] = 0x2
 42217: 95 18 80 00              a1 = sp + 0x80
 42221: 7b 18 40 01              u64 [sp + 0x140] = a1
 42225: 49 21 48 01 02           u64 [sp + 328] = 0x2
 42230: 95 17 68                 a0 = sp + 0x68
 42233: 95 18 30 01              a1 = sp + 0x130
 42237: 50 20 e4 02 0e 0b        ra = 740, jump @2817
      :                          @2661 [@dyn 370]
 42243: 82 15 70                 s0 = u64 [sp + 0x70]
 42246: 82 1b 78                 a4 = u64 [sp + 0x78]
 42249: 82 16 68                 s1 = u64 [sp + 0x68]
 42252: 33 07 02                 a0 = 0x2
 42255: 33 08                    a1 = 0
 42257: 33 09                    a2 = 0
 42259: 64 5a                    a3 = s0
 42261: 33 00 e6 02              ra = 0x2e6
 42265: 0a 64                    ecalli 100 // 'log'
 42267: 01                       fallthrough
      :                          @2662 [@dyn 371]
 42268: 82 17 50                 a0 = u64 [sp + 0x50]
 42271: c8 67 07                 a0 = a0 + s1
 42274: 53 37 00 00 ff 27        jump @2668 if a0 <u 4294901760
      :                          @2663
 42280: 33 07 f0 02 03           a0 = 0x302f0
 42285: 95 77 00 00 01           a0 = a0 + 0x10000
 42290: 01                       fallthrough
      :                          @2664
 42291: 82 78                    a1 = u64 [a0]
 42293: c9 87 09                 a2 = a0 - a1
 42296: ab 59 11                 jump @2668 if a2 != s0
      :                          @2665
 42299: c9 68 09                 a2 = a1 - s1
 42302: 01                       fallthrough
      :                          @2666
 42303: 82 7a                    a3 = u64 [a0]
 42305: ab 8a f2                 jump @2664 if a3 != a1
      :                          @2667
 42308: 7b 79                    u64 [a0] = a2
 42310: 33 0b                    a4 = 0
 42312: 01                       fallthrough
      :                          @2668
 42313: 82 17 60                 a0 = u64 [sp + 0x60]
 42316: 82 1a 20                 a3 = u64 [sp + 0x20]
 42319: 82 18 28                 a1 = u64 [sp + 0x28]
 42322: 7b 17 18                 u64 [sp + 0x18] = a0
 42325: 51 07 fb 02              jump @2708 if a0 == 0
      :                          @2669
 42329: 33 09                    a2 = 0
 42331: 33 07 5c 03              a0 = 0x35c
 42335: 7b 17 48                 u64 [sp + 0x48] = a0
 42338: 33 07 28 03              a0 = 0x328
 42342: 7b 17 40                 u64 [sp + 0x40] = a0
 42345: 33 07 90 0f 01           a0 = 0x10f90
 42350: 7b 17 10                 u64 [sp + 0x10] = a0
 42353: 33 07 c8 0f 01           a0 = 0x10fc8
 42358: 7b 17 08                 u64 [sp + 0x8] = a0
 42361: 33 06 f0 02 03           s1 = 0x302f0
 42366: 95 66 00 00 01           s1 = s1 + 0x10000
 42371: 33 07 08 10 01           a0 = 0x11008
 42376: 7b 17                    u64 [sp] = a0
 42378: 28 15                    jump @2671
      :                          @2670
 42380: 82 19 38                 a2 = u64 [sp + 0x38]
 42383: 95 99 01                 a2 = a2 + 0x1
 42386: 82 1a 20                 a3 = u64 [sp + 0x20]
 42389: 82 18 28                 a1 = u64 [sp + 0x28]
 42392: 82 17 18                 a0 = u64 [sp + 0x18]
 42395: aa 79 b5 02              jump @2708 if a2 == a0
      :                          @2671
 42399: 97 97 01                 a0 = a2 << 0x1
 42402: 7b 19 20 01              u64 [sp + 0x120] = a2
 42406: ae 87 be 02              jump @2709 if a0 >=u a1
      :                          @2672
 42410: 7b 19 38                 u64 [sp + 0x38] = a2
 42413: c8 7a 09                 a2 = a3 + a0
 42416: 7c 9b                    a4 = u8 [a2]
 42418: 96 b9 9b 00              a2 = a4 * 0x9b
 42422: 98 99 0d                 a2 = a2 >> 0xd
 42425: 33 0c 35                 a5 = 0x35
 42428: ca c9 09                 a2 = a2 * a5
 42431: bf 9b 0b                 i32 a4 = a4 - a2
 42434: 86 77 01                 a0 = a0 | 0x1
 42437: 78 1b 2f 01              u8 [sp + 0x12f] = a4
 42441: ae 87 9c 02              jump @2710 if a0 >=u a1
      :                          @2673
 42445: c8 a7 07                 a0 = a0 + a3
 42448: 7c 77                    a0 = u8 [a0]
 42450: ca 77 07                 a0 = a0 * a0
 42453: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 42457: 95 17 2f 01              a0 = sp + 0x12f
 42461: 7b 17 30 01              u64 [sp + 0x130] = a0
 42465: 82 17 48                 a0 = u64 [sp + 0x48]
 42468: 7b 17 38 01              u64 [sp + 0x138] = a0
 42472: 95 17 a0 00              a0 = sp + 0xa0
 42476: 7b 17 40 01              u64 [sp + 0x140] = a0
 42480: 82 17 40                 a0 = u64 [sp + 0x40]
 42483: 7b 17 48 01              u64 [sp + 0x148] = a0
 42487: 82 17 10                 a0 = u64 [sp + 0x10]
 42490: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 42494: 49 21 b8 00 02           u64 [sp + 184] = 0x2
 42499: 49 21 d0 00              u64 [sp + 208] = 0
 42503: 95 18 30 01              a1 = sp + 0x130
 42507: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 42511: 49 21 c8 00 02           u64 [sp + 200] = 0x2
 42516: 95 17 80 00              a0 = sp + 0x80
 42520: 95 18 b0 00              a1 = sp + 0xb0
 42524: 50 20 e8 02 ef 09        ra = 744, jump @2817
      :                          @2674 [@dyn 372]
 42530: 82 15 88 00              s0 = u64 [sp + 0x88]
 42534: 82 1b 90 00              a4 = u64 [sp + 0x90]
 42538: 82 17 80 00              a0 = u64 [sp + 0x80]
 42542: 7b 17 30                 u64 [sp + 0x30] = a0
 42545: 33 07 02                 a0 = 0x2
 42548: 33 08                    a1 = 0
 42550: 33 09                    a2 = 0
 42552: 64 5a                    a3 = s0
 42554: 33 00 ea 02              ra = 0x2ea
 42558: 0a 64                    ecalli 100 // 'log'
 42560: 01                       fallthrough
      :                          @2675 [@dyn 373]
 42561: 82 1b 30                 a4 = u64 [sp + 0x30]
 42564: 82 17 50                 a0 = u64 [sp + 0x50]
 42567: c8 b7 07                 a0 = a0 + a4
 42570: 53 37 00 00 ff 1a        jump @2680 if a0 <u 4294901760
      :                          @2676
 42576: 82 67                    a0 = u64 [s1]
 42578: c9 76 08                 a1 = s1 - a0
 42581: ab 58 0f                 jump @2680 if a1 != s0
      :                          @2677
 42584: c9 b7 08                 a1 = a0 - a4
 42587: 01                       fallthrough
      :                          @2678
 42588: 82 69                    a2 = u64 [s1]
 42590: ab 79 f2                 jump @2676 if a2 != a0
      :                          @2679
 42593: 7b 68                    u64 [s1] = a1
 42595: 01                       fallthrough
      :                          @2680
 42596: 82 15 a0 00              s0 = u64 [sp + 0xa0]
 42600: 49 11 68                 u64 [sp + 104] = 0
 42603: 51 05 1c                 jump @2683 if s0 == 0
      :                          @2681
 42606: 7c 17 2f 01              a0 = u8 [sp + 0x12f]
 42610: 50 20 ec 02 3e ab        ra = 748, jump @1683
      :                          @2682 [@dyn 374]
 42616: 82 18 68                 a1 = u64 [sp + 0x68]
 42619: c8 87 07                 a0 = a0 + a1
 42622: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 42625: 7b 17 68                 u64 [sp + 0x68] = a0
 42628: 52 05 ea                 jump @2681 if s0 != 0
      :                          @2683
 42631: 95 17 2f 01              a0 = sp + 0x12f
 42635: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 42639: 82 17 48                 a0 = u64 [sp + 0x48]
 42642: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 42646: 95 17 a0 00              a0 = sp + 0xa0
 42650: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 42654: 82 17 40                 a0 = u64 [sp + 0x40]
 42657: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 42661: 95 18 68                 a1 = sp + 0x68
 42664: 7b 18 d0 00              u64 [sp + 0xd0] = a1
 42668: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 42672: 82 17 08                 a0 = u64 [sp + 0x8]
 42675: 7b 17 30 01              u64 [sp + 0x130] = a0
 42679: 49 21 38 01 03           u64 [sp + 312] = 0x3
 42684: 49 21 50 01              u64 [sp + 336] = 0
 42688: 95 17 b0 00              a0 = sp + 0xb0
 42692: 7b 17 40 01              u64 [sp + 0x140] = a0
 42696: 49 21 48 01 03           u64 [sp + 328] = 0x3
 42701: 95 17 80 00              a0 = sp + 0x80
 42705: 95 18 30 01              a1 = sp + 0x130
 42709: 50 20 ee 02 36 09        ra = 750, jump @2817
      :                          @2684 [@dyn 375]
 42715: 82 15 88 00              s0 = u64 [sp + 0x88]
 42719: 82 1b 90 00              a4 = u64 [sp + 0x90]
 42723: 82 17 80 00              a0 = u64 [sp + 0x80]
 42727: 7b 17 30                 u64 [sp + 0x30] = a0
 42730: 33 07 02                 a0 = 0x2
 42733: 33 08                    a1 = 0
 42735: 33 09                    a2 = 0
 42737: 64 5a                    a3 = s0
 42739: 33 00 f0 02              ra = 0x2f0
 42743: 0a 64                    ecalli 100 // 'log'
 42745: 01                       fallthrough
      :                          @2685 [@dyn 376]
 42746: 82 1b 30                 a4 = u64 [sp + 0x30]
 42749: 82 17 50                 a0 = u64 [sp + 0x50]
 42752: c8 b7 07                 a0 = a0 + a4
 42755: 53 37 00 00 ff 1a        jump @2690 if a0 <u 4294901760
      :                          @2686
 42761: 82 67                    a0 = u64 [s1]
 42763: c9 76 08                 a1 = s1 - a0
 42766: ab 58 0f                 jump @2690 if a1 != s0
      :                          @2687
 42769: c9 b7 08                 a1 = a0 - a4
 42772: 01                       fallthrough
      :                          @2688
 42773: 82 69                    a2 = u64 [s1]
 42775: ab 79 f2                 jump @2686 if a2 != a0
      :                          @2689
 42778: 7b 68                    u64 [s1] = a1
 42780: 01                       fallthrough
      :                          @2690
 42781: 95 17 20 01              a0 = sp + 0x120
 42785: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 42789: 82 18 40                 a1 = u64 [sp + 0x40]
 42792: 7b 18 b8 00              u64 [sp + 0xb8] = a1
 42796: 95 17 2f 01              a0 = sp + 0x12f
 42800: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 42804: 82 17 48                 a0 = u64 [sp + 0x48]
 42807: 7b 17 c8 00              u64 [sp + 0xc8] = a0
 42811: 95 17 68                 a0 = sp + 0x68
 42814: 7b 17 d0 00              u64 [sp + 0xd0] = a0
 42818: 7b 18 d8 00              u64 [sp + 0xd8] = a1
 42822: 82 17                    a0 = u64 [sp]
 42824: 7b 17 30 01              u64 [sp + 0x130] = a0
 42828: 49 21 38 01 03           u64 [sp + 312] = 0x3
 42833: 49 21 50 01              u64 [sp + 336] = 0
 42837: 95 17 b0 00              a0 = sp + 0xb0
 42841: 7b 17 40 01              u64 [sp + 0x140] = a0
 42845: 49 21 48 01 03           u64 [sp + 328] = 0x3
 42850: 95 17 80 00              a0 = sp + 0x80
 42854: 95 18 30 01              a1 = sp + 0x130
 42858: 50 20 f2 02 a1 08        ra = 754, jump @2817
      :                          @2691 [@dyn 377]
 42864: 82 15 88 00              s0 = u64 [sp + 0x88]
 42868: 82 1b 90 00              a4 = u64 [sp + 0x90]
 42872: 82 17 80 00              a0 = u64 [sp + 0x80]
 42876: 7b 17 30                 u64 [sp + 0x30] = a0
 42879: 33 07 02                 a0 = 0x2
 42882: 33 08                    a1 = 0
 42884: 33 09                    a2 = 0
 42886: 64 5a                    a3 = s0
 42888: 33 00 f4 02              ra = 0x2f4
 42892: 0a 64                    ecalli 100 // 'log'
 42894: 01                       fallthrough
      :                          @2692 [@dyn 378]
 42895: 82 1b 30                 a4 = u64 [sp + 0x30]
 42898: 82 17 50                 a0 = u64 [sp + 0x50]
 42901: c8 b7 07                 a0 = a0 + a4
 42904: 53 37 00 00 ff f4 fd     jump @2670 if a0 <u 4294901760
      :                          @2693
 42911: 82 67                    a0 = u64 [s1]
 42913: c9 76 08                 a1 = s1 - a0
 42916: ab 58 e8 fd              jump @2670 if a1 != s0
      :                          @2694
 42920: c9 b7 08                 a1 = a0 - a4
 42923: 01                       fallthrough
      :                          @2695
 42924: 82 69                    a2 = u64 [s1]
 42926: ab 79 f1                 jump @2693 if a2 != a0
      :                          @2696
 42929: 7b 68                    u64 [s1] = a1
 42931: 33 0a                    a3 = 0
 42933: 01                       fallthrough
      :                          @2697
 42934: ab 79 e9                 jump @2693 if a2 != a0
      :                          @2698
 42937: 28 d3 fd                 jump @2670
      :                          @2699
 42940: 95 17 58                 a0 = sp + 0x58
 42943: 7b 17 80 00              u64 [sp + 0x80] = a0
 42947: 33 07 28 03              a0 = 0x328
 42951: 7b 17 88 00              u64 [sp + 0x88] = a0
 42955: 33 07 50 10 01           a0 = 0x11050
 42960: 7b 17 b0 00              u64 [sp + 0xb0] = a0
 42964: 49 21 b8 00 01           u64 [sp + 184] = 0x1
 42969: 49 21 d0 00              u64 [sp + 208] = 0
 42973: 95 18 80 00              a1 = sp + 0x80
 42977: 7b 18 c0 00              u64 [sp + 0xc0] = a1
 42981: 49 21 c8 00 01           u64 [sp + 200] = 0x1
 42986: 95 17 30 01              a0 = sp + 0x130
 42990: 95 18 b0 00              a1 = sp + 0xb0
 42994: 50 20 f6 02 19 08        ra = 758, jump @2817
      :                          @2700 [@dyn 379]
 43000: 82 15 38 01              s0 = u64 [sp + 0x138]
 43004: 82 1b 40 01              a4 = u64 [sp + 0x140]
 43008: 82 16 30 01              s1 = u64 [sp + 0x130]
 43012: 33 07 02                 a0 = 0x2
 43015: 33 08                    a1 = 0
 43017: 33 09                    a2 = 0
 43019: 64 5a                    a3 = s0
 43021: 33 00 f8 02              ra = 0x2f8
 43025: 0a 64                    ecalli 100 // 'log'
 43027: 01                       fallthrough
      :                          @2701 [@dyn 380]
 43028: 95 68 ff ff fe           a1 = s1 + 0xfffffffffffeffff
 43033: 53 38 00 00 ff 2f        jump @2707 if a1 <u 4294901760
      :                          @2702
 43039: 33 07 f0 02 03           a0 = 0x302f0
 43044: 95 77 00 00 01           a0 = a0 + 0x10000
 43049: 01                       fallthrough
      :                          @2703
 43050: 82 78                    a1 = u64 [a0]
 43052: c9 87 09                 a2 = a0 - a1
 43055: ab 59 19                 jump @2707 if a2 != s0
      :                          @2704
 43058: c9 68 09                 a2 = a1 - s1
 43061: 01                       fallthrough
      :                          @2705
 43062: 82 7a                    a3 = u64 [a0]
 43064: ab 8a f2                 jump @2703 if a3 != a1
      :                          @2706
 43067: 7b 79                    u64 [a0] = a2
 43069: 33 0b                    a4 = 0
 43071: 33 08                    a1 = 0
 43073: 33 0a 00 00 01           a3 = 0x10000
 43078: 28 0a                    jump @2708
      :                          @2707
 43080: 33 08                    a1 = 0
 43082: 33 0a 00 00 01           a3 = 0x10000
 43087: 01                       fallthrough
      :                          @2708
 43088: 64 a7                    a0 = a3
 43090: 82 10 70 01              ra = u64 [sp + 0x170]
 43094: 82 15 68 01              s0 = u64 [sp + 0x168]
 43098: 82 16 60 01              s1 = u64 [sp + 0x160]
 43102: 95 11 78 01              sp = sp + 0x178
 43106: 32 00                    ret
      :                          @2709
 43108: 00                       trap
      :                          @2710
 43109: 00                       trap
      :                          @2711 [export #2: 'on_transfer']
 43110: 95 11 70 fd              sp = sp + 0xfffffffffffffd70
 43114: 7b 10 88 02              u64 [sp + 0x288] = ra
 43118: 7b 15 80 02              u64 [sp + 0x280] = s0
 43122: 7b 16 78 02              u64 [sp + 0x278] = s1
 43126: 64 8c                    a5 = a1
 43128: 64 79                    a2 = a0
 43130: 33 02                    t0 = 0
 43132: 95 7b 04                 a4 = a0 + 0x4
 43135: 33 07 28                 a0 = 0x28
 43138: 7b 17 28                 u64 [sp + 0x28] = a0
 43141: 33 07 2c                 a0 = 0x2c
 43144: 7b 17 58                 u64 [sp + 0x58] = a0
 43147: 33 07 3a                 a0 = 0x3a
 43150: 7b 17 20                 u64 [sp + 0x20] = a0
 43153: 33 07 a8 10 01           a0 = 0x110a8
 43158: 7b 17 18                 u64 [sp + 0x18] = a0
 43161: 33 07 82 03              a0 = 0x382
 43165: 7b 17 10                 u64 [sp + 0x10] = a0
 43168: 33 07 e0 12 01           a0 = 0x112e0
 43173: 7b 17 08                 u64 [sp + 0x8] = a0
 43176: 33 07 f0 02 03           a0 = 0x302f0
 43181: 95 77 00 00 01           a0 = a0 + 0x10000
 43186: 7b 17 50                 u64 [sp + 0x50] = a0
 43189: 33 07 48 11 01           a0 = 0x11148
 43194: 7b 17                    u64 [sp] = a0
 43196: 95 97 08                 a0 = a2 + 0x8
 43199: 95 ca f8                 a3 = a5 + 0xfffffffffffffff8
 43202: 95 98 0c                 a1 = a2 + 0xc
 43205: 7b 18 60                 u64 [sp + 0x60] = a1
 43208: 33 08 08                 a1 = 0x8
 43211: 33 06 ff ff fe           s1 = 0xfffffffffffeffff
 43216: 7b 16 48                 u64 [sp + 0x48] = s1
 43219: 7b 17 c0 00              u64 [sp + 0xc0] = a0
 43223: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 43227: 7b 1c 40                 u64 [sp + 0x40] = a5
 43230: 7b 19 38                 u64 [sp + 0x38] = a2
 43233: 7b 1b 30                 u64 [sp + 0x30] = a4
 43236: 7b 1a a8 00              u64 [sp + 0xa8] = a3
 43240: ac 8c c9 04              jump @2759 if a5 <u a1
      :                          @2712
 43244: 51 09 de 04              jump @2760 if a2 == 0
      :                          @2713
 43248: 51 0b da 04              jump @2760 if a4 == 0
      :                          @2714
 43252: 7c 97                    a0 = u8 [a2]
 43254: 7b 17 78                 u64 [sp + 0x78] = a0
 43257: 7c 97 01                 a0 = u8 [a2 + 0x1]
 43260: 7b 17 68                 u64 [sp + 0x68] = a0
 43263: 7c 97 02                 a0 = u8 [a2 + 0x2]
 43266: 7b 17 70                 u64 [sp + 0x70] = a0
 43269: 7c 97 03                 a0 = u8 [a2 + 0x3]
 43272: 7b 17 80 00              u64 [sp + 0x80] = a0
 43276: 7c b7                    a0 = u8 [a4]
 43278: 7b 17 98 00              u64 [sp + 0x98] = a0
 43282: 7c b7 01                 a0 = u8 [a4 + 0x1]
 43285: 7b 17 88 00              u64 [sp + 0x88] = a0
 43289: 7c b7 02                 a0 = u8 [a4 + 0x2]
 43292: 7b 17 90 00              u64 [sp + 0x90] = a0
 43296: 7c b7 03                 a0 = u8 [a4 + 0x3]
 43299: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 43303: 51 0a 53                 jump @2724 if a3 == 0
      :                          @2715
 43306: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 43310: 7d 77                    a0 = i8 [a0]
 43312: 33 05 01                 s0 = 0x1
 43315: 59 07 4a                 jump @2725 if a0 >=s 0
      :                          @2716
 43318: 84 77 ff 00              a0 = a0 & 0xff
 43322: 33 05 02                 s0 = 0x2
 43325: 33 06 c0 00              s1 = 0xc0
 43329: ac 67 33                 jump @2722 if a0 <u s1
      :                          @2717
 43332: 33 05 03                 s0 = 0x3
 43335: 33 06 e0 00              s1 = 0xe0
 43339: ac 67 29                 jump @2722 if a0 <u s1
      :                          @2718
 43342: 33 05 04                 s0 = 0x4
 43345: 33 06 f0 00              s1 = 0xf0
 43349: ac 67 1f                 jump @2722 if a0 <u s1
      :                          @2719
 43352: 33 05 05                 s0 = 0x5
 43355: 33 06 f8 00              s1 = 0xf8
 43359: ac 67 15                 jump @2722 if a0 <u s1
      :                          @2720
 43362: 33 05 06                 s0 = 0x6
 43365: 33 06 fc 00              s1 = 0xfc
 43369: ac 67 0b                 jump @2722 if a0 <u s1
      :                          @2721
 43372: 88 77 fe 00              a0 = a0 <u 0xfe
 43376: 9a 75 08                 s0 = 0x8 - a0
 43379: 01                       fallthrough
      :                          @2722
 43380: ae 5a 09                 jump @2725 if a3 >=u s0
      :                          @2723
 43383: 28 3a 04                 jump @2759
      :                          @2724
 43386: 33 05                    s0 = 0
 43388: 01                       fallthrough
      :                          @2725
 43389: 82 17 c0 00              a0 = u64 [sp + 0xc0]
 43393: 64 58                    a1 = s0
 43395: 7b 12 b0 00              u64 [sp + 0xb0] = t0
 43399: 50 20 fa 02 3e 1b        ra = 762, jump @3218
      :                          @2726 [@dyn 381]
 43405: 33 03 98 00              t1 = 0x98
 43409: 33 02 04                 t0 = 0x4
 43412: 33 06 08                 s1 = 0x8
 43415: 82 1c a8 00              a5 = u64 [sp + 0xa8]
 43419: 82 1b b0 00              a4 = u64 [sp + 0xb0]
 43423: ae 7b 12 04              jump @2759 if a4 >=u a0
      :                          @2727
 43427: 82 18 68                 a1 = u64 [sp + 0x68]
 43430: 97 88 08                 a1 = a1 << 0x8
 43433: 82 19 78                 a2 = u64 [sp + 0x78]
 43436: d4 98 08                 a1 = a1 | a2
 43439: 82 19 70                 a2 = u64 [sp + 0x70]
 43442: 97 99 10                 a2 = a2 << 0x10
 43445: 82 1a 80 00              a3 = u64 [sp + 0x80]
 43449: 97 aa 18                 a3 = a3 << 0x18
 43452: d4 a9 09                 a2 = a2 | a3
 43455: d4 89 04                 t2 = a2 | a1
 43458: 82 18 88 00              a1 = u64 [sp + 0x88]
 43462: 97 88 08                 a1 = a1 << 0x8
 43465: 82 19 98 00              a2 = u64 [sp + 0x98]
 43469: d4 98 08                 a1 = a1 | a2
 43472: 82 19 90 00              a2 = u64 [sp + 0x90]
 43476: 97 99 10                 a2 = a2 << 0x10
 43479: 82 1a a0 00              a3 = u64 [sp + 0xa0]
 43483: 97 aa 18                 a3 = a3 << 0x18
 43486: d4 a9 09                 a2 = a2 | a3
 43489: d4 89 00                 ra = a2 | a1
 43492: e4 5c 08                 a1 = maxu(a5, s0)
 43495: c9 58 08                 a1 = a1 - s0
 43498: 82 19 b8 00              a2 = u64 [sp + 0xb8]
 43502: c8 59 09                 a2 = a2 + s0
 43505: 82 1a 60                 a3 = u64 [sp + 0x60]
 43508: c8 a5 05                 s0 = s0 + a3
 43511: 64 ba                    a3 = a4
 43513: 01                       fallthrough
      :                          @2728
 43514: ac 68 b7 03              jump @2759 if a1 <u s1
      :                          @2729
 43518: aa 25 cc 03              jump @2760 if s0 == t0
      :                          @2730
 43522: 51 05 c8 03              jump @2760 if s0 == 0
      :                          @2731
 43526: ac 38 ab 03              jump @2759 if a1 <u t1
      :                          @2732
 43530: 51 0a 17                 jump @2735 if a3 == 0
      :                          @2733
 43533: 95 88 68 ff              a1 = a1 + 0xffffffffffffff68
 43537: 95 55 98 00              s0 = s0 + 0x98
 43541: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 43544: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 43547: 52 07 df                 jump @2728 if a0 != 0
      :                          @2734
 43550: 28 93 03                 jump @2759
      :                          @2735
 43553: 7c 97 01                 a0 = u8 [a2 + 0x1]
 43556: 7c 98                    a1 = u8 [a2]
 43558: 7c 9a 02                 a3 = u8 [a2 + 0x2]
 43561: 7d 9b 03                 a4 = i8 [a2 + 0x3]
 43564: 8a 77 08                 i32 a0 = a0 << 0x8
 43567: d4 87 07                 a0 = a0 | a1
 43570: 8a a8 10                 i32 a1 = a3 << 0x10
 43573: 8a ba 18                 i32 a3 = a4 << 0x18
 43576: d4 a8 08                 a1 = a1 | a3
 43579: d4 87 07                 a0 = a0 | a1
 43582: 7b 17 a0 00              u64 [sp + 0xa0] = a0
 43586: 7c 57 01                 a0 = u8 [s0 + 0x1]
 43589: 7c 58                    a1 = u8 [s0]
 43591: 7c 5a 02                 a3 = u8 [s0 + 0x2]
 43594: 7d 5b 03                 a4 = i8 [s0 + 0x3]
 43597: 8a 77 08                 i32 a0 = a0 << 0x8
 43600: d4 87 07                 a0 = a0 | a1
 43603: 8a a8 10                 i32 a1 = a3 << 0x10
 43606: 8a ba 18                 i32 a3 = a4 << 0x18
 43609: d4 a8 08                 a1 = a1 | a3
 43612: 7c 9a 0f                 a3 = u8 [a2 + 0xf]
 43615: 7c 9b 0e                 a4 = u8 [a2 + 0xe]
 43618: d4 87 07                 a0 = a0 | a1
 43621: 7b 17 98 00              u64 [sp + 0x98] = a0
 43625: 7c 97 0d                 a0 = u8 [a2 + 0xd]
 43628: 97 aa 10                 a3 = a3 << 0x10
 43631: 97 bb 08                 a4 = a4 << 0x8
 43634: d4 ba 0a                 a3 = a3 | a4
 43637: 7c 98 0c                 a1 = u8 [a2 + 0xc]
 43640: 7c 9b 0b                 a4 = u8 [a2 + 0xb]
 43643: d4 a7 07                 a0 = a0 | a3
 43646: 97 77 10                 a0 = a0 << 0x10
 43649: 97 88 08                 a1 = a1 << 0x8
 43652: d4 b8 08                 a1 = a1 | a4
 43655: 7c 9a 0a                 a3 = u8 [a2 + 0xa]
 43658: 7c 9b 09                 a4 = u8 [a2 + 0x9]
 43661: d4 87 07                 a0 = a0 | a1
 43664: 97 77 10                 a0 = a0 << 0x10
 43667: 97 aa 08                 a3 = a3 << 0x8
 43670: d4 ba 0a                 a3 = a3 | a4
 43673: d4 a7 07                 a0 = a0 | a3
 43676: 7c 98 08                 a1 = u8 [a2 + 0x8]
 43679: 97 77 08                 a0 = a0 << 0x8
 43682: 7c 9a 97 00              a3 = u8 [a2 + 0x97]
 43686: 7c 9b 96 00              a4 = u8 [a2 + 0x96]
 43690: d4 87 07                 a0 = a0 | a1
 43693: 7b 17 90 00              u64 [sp + 0x90] = a0
 43697: 7c 97 95 00              a0 = u8 [a2 + 0x95]
 43701: 97 aa 10                 a3 = a3 << 0x10
 43704: 97 bb 08                 a4 = a4 << 0x8
 43707: d4 ba 0a                 a3 = a3 | a4
 43710: d4 a7 07                 a0 = a0 | a3
 43713: 7c 9a 94 00              a3 = u8 [a2 + 0x94]
 43717: 7c 9b 93 00              a4 = u8 [a2 + 0x93]
 43721: 95 98 10                 a1 = a2 + 0x10
 43724: 97 77 10                 a0 = a0 << 0x10
 43727: 97 aa 08                 a3 = a3 << 0x8
 43730: d4 ba 0a                 a3 = a3 | a4
 43733: 7c 9b 92 00              a4 = u8 [a2 + 0x92]
 43737: d4 a7 07                 a0 = a0 | a3
 43740: 7c 9a 91 00              a3 = u8 [a2 + 0x91]
 43744: 97 77 10                 a0 = a0 << 0x10
 43747: 97 bb 08                 a4 = a4 << 0x8
 43750: 7c 99 90 00              a2 = u8 [a2 + 0x90]
 43754: d4 ba 0a                 a3 = a3 | a4
 43757: d4 a7 07                 a0 = a0 | a3
 43760: 97 77 08                 a0 = a0 << 0x8
 43763: d4 97 07                 a0 = a0 | a2
 43766: 7b 17 88 00              u64 [sp + 0x88] = a0
 43770: 95 17 68 01              a0 = sp + 0x168
 43774: 33 09 80 00              a2 = 0x80
 43778: 64 45                    s0 = t2
 43780: 64 06                    s1 = ra
 43782: 50 20 fc 02 7f 07        ra = 764, jump @2867
      :                          @2736 [@dyn 382]
 43788: 95 17 e0 00              a0 = sp + 0xe0
 43792: 95 18 68 01              a1 = sp + 0x168
 43796: 33 09 80 00              a2 = 0x80
 43800: 50 20 fe 02 6d 07        ra = 766, jump @2867
      :                          @2737 [@dyn 383]
 43806: 7a 15 c8 00              u32 [sp + 0xc8] = s0
 43810: 7a 16 cc 00              u32 [sp + 0xcc] = s1
 43814: 82 17 a0 00              a0 = u64 [sp + 0xa0]
 43818: 7a 17 d0 00              u32 [sp + 0xd0] = a0
 43822: 82 17 98 00              a0 = u64 [sp + 0x98]
 43826: 7a 17 d4 00              u32 [sp + 0xd4] = a0
 43830: 82 17 90 00              a0 = u64 [sp + 0x90]
 43834: 7b 17 d8 00              u64 [sp + 0xd8] = a0
 43838: 82 17 88 00              a0 = u64 [sp + 0x88]
 43842: 7b 17 60 01              u64 [sp + 0x160] = a0
 43846: 95 17 c8 00              a0 = sp + 0xc8
 43850: 7b 17 68 01              u64 [sp + 0x168] = a0
 43854: 82 17 28                 a0 = u64 [sp + 0x28]
 43857: 7b 17 70 01              u64 [sp + 0x170] = a0
 43861: 95 18 cc 00              a1 = sp + 0xcc
 43865: 7b 18 78 01              u64 [sp + 0x178] = a1
 43869: 7b 17 80 01              u64 [sp + 0x180] = a0
 43873: 95 18 d0 00              a1 = sp + 0xd0
 43877: 7b 18 88 01              u64 [sp + 0x188] = a1
 43881: 7b 17 90 01              u64 [sp + 0x190] = a0
 43885: 95 18 d4 00              a1 = sp + 0xd4
 43889: 7b 18 98 01              u64 [sp + 0x198] = a1
 43893: 7b 17 a0 01              u64 [sp + 0x1a0] = a0
 43897: 95 17 d8 00              a0 = sp + 0xd8
 43901: 7b 17 a8 01              u64 [sp + 0x1a8] = a0
 43905: 82 17 58                 a0 = u64 [sp + 0x58]
 43908: 7b 17 b0 01              u64 [sp + 0x1b0] = a0
 43912: 95 18 e0 00              a1 = sp + 0xe0
 43916: 7b 18 b8 01              u64 [sp + 0x1b8] = a1
 43920: 82 18 20                 a1 = u64 [sp + 0x20]
 43923: 7b 18 c0 01              u64 [sp + 0x1c0] = a1
 43927: 95 18 60 01              a1 = sp + 0x160
 43931: 7b 18 c8 01              u64 [sp + 0x1c8] = a1
 43935: 7b 17 d0 01              u64 [sp + 0x1d0] = a0
 43939: 82 17 18                 a0 = u64 [sp + 0x18]
 43942: 7b 17 28 02              u64 [sp + 0x228] = a0
 43946: 49 21 30 02 07           u64 [sp + 560] = 0x7
 43951: 49 21 48 02              u64 [sp + 584] = 0
 43955: 95 17 68 01              a0 = sp + 0x168
 43959: 7b 17 38 02              u64 [sp + 0x238] = a0
 43963: 49 21 40 02 07           u64 [sp + 576] = 0x7
 43968: 95 17 58 02              a0 = sp + 0x258
 43972: 95 18 28 02              a1 = sp + 0x228
 43976: 50 20 00 03 43 04        ra = 768, jump @2817
      :                          @2738 [@dyn 384]
 43982: 82 15 60 02              s0 = u64 [sp + 0x260]
 43986: 82 1b 68 02              a4 = u64 [sp + 0x268]
 43990: 82 16 58 02              s1 = u64 [sp + 0x258]
 43994: 33 07 02                 a0 = 0x2
 43997: 33 08                    a1 = 0
 43999: 33 09                    a2 = 0
 44001: 64 5a                    a3 = s0
 44003: 33 00 02 03              ra = 0x302
 44007: 0a 64                    ecalli 100 // 'log'
 44009: 01                       fallthrough
      :                          @2739 [@dyn 385]
 44010: 82 17 48                 a0 = u64 [sp + 0x48]
 44013: c8 67 07                 a0 = a0 + s1
 44016: 82 1b 50                 a4 = u64 [sp + 0x50]
 44019: 53 37 00 00 ff 1a        jump @2744 if a0 <u 4294901760
      :                          @2740
 44025: 82 b7                    a0 = u64 [a4]
 44027: c9 7b 08                 a1 = a4 - a0
 44030: ab 58 0f                 jump @2744 if a1 != s0
      :                          @2741
 44033: c9 67 08                 a1 = a0 - s1
 44036: 01                       fallthrough
      :                          @2742
 44037: 82 b9                    a2 = u64 [a4]
 44039: ab 79 f2                 jump @2740 if a2 != a0
      :                          @2743
 44042: 7b b8                    u64 [a4] = a1
 44044: 01                       fallthrough
      :                          @2744
 44045: 81 17 cc 00              a0 = i32 [sp + 0xcc]
 44049: 7a 17 ec 01              u32 [sp + 0x1ec] = a0
 44053: 95 17 ec 01              a0 = sp + 0x1ec
 44057: 33 08 04                 a1 = 0x4
 44060: 95 19 e0 00              a2 = sp + 0xe0
 44064: 33 0a 80 00              a3 = 0x80
 44068: 0a 04                    ecalli 4 // 'write'
 44070: 0a                       ecalli 0 // 'gas'
 44071: 7b 17 f0 01              u64 [sp + 0x1f0] = a0
 44075: 7b 17 f8 01              u64 [sp + 0x1f8] = a0
 44079: 46 21 07 02 04           u8 [sp + 519] = 0x4
 44084: 7b 17 08 02              u64 [sp + 0x208] = a0
 44088: 95 17 07 02              a0 = sp + 0x207
 44092: 33 08 01                 a1 = 0x1
 44095: 95 19 08 02              a2 = sp + 0x208
 44099: 33 0a 08                 a3 = 0x8
 44102: 0a 04                    ecalli 4 // 'write'
 44104: 49 21 68 01 02           u64 [sp + 360] = 0x2
 44109: 49 21 78 01 02           u64 [sp + 376] = 0x2
 44114: 49 21 88 01              u64 [sp + 392] = 0
 44118: 14 07 20 00 00 00 10 00 00 00 a0 = 0x1000000020
 44128: 7b 17 90 01              u64 [sp + 0x190] = a0
 44132: 46 21 98 01 03           u8 [sp + 408] = 0x3
 44137: 49 21 a0 01 02           u64 [sp + 416] = 0x2
 44142: 49 21 b0 01 02           u64 [sp + 432] = 0x2
 44147: 49 21 c0 01 01           u64 [sp + 448] = 0x1
 44152: 7b 17 c8 01              u64 [sp + 0x1c8] = a0
 44156: 95 17 07 02              a0 = sp + 0x207
 44160: 7b 17 58 02              u64 [sp + 0x258] = a0
 44164: 82 17 10                 a0 = u64 [sp + 0x10]
 44167: 7b 17 60 02              u64 [sp + 0x260] = a0
 44171: 95 17 f8 01              a0 = sp + 0x1f8
 44175: 7b 17 68 02              u64 [sp + 0x268] = a0
 44179: 82 17 58                 a0 = u64 [sp + 0x58]
 44182: 7b 17 70 02              u64 [sp + 0x270] = a0
 44186: 46 21 d0 01 03           u8 [sp + 464] = 0x3
 44191: 82 17 08                 a0 = u64 [sp + 0x8]
 44194: 7b 17 28 02              u64 [sp + 0x228] = a0
 44198: 49 21 30 02 02           u64 [sp + 560] = 0x2
 44203: 95 17 68 01              a0 = sp + 0x168
 44207: 7b 17 48 02              u64 [sp + 0x248] = a0
 44211: 49 21 50 02 02           u64 [sp + 592] = 0x2
 44216: 95 17 58 02              a0 = sp + 0x258
 44220: 7b 17 38 02              u64 [sp + 0x238] = a0
 44224: 49 21 40 02 02           u64 [sp + 576] = 0x2
 44229: 95 17 10 02              a0 = sp + 0x210
 44233: 95 18 28 02              a1 = sp + 0x228
 44237: 50 20 04 03 3e 03        ra = 772, jump @2817
      :                          @2745 [@dyn 386]
 44243: 82 15 18 02              s0 = u64 [sp + 0x218]
 44247: 82 1b 20 02              a4 = u64 [sp + 0x220]
 44251: 82 16 10 02              s1 = u64 [sp + 0x210]
 44255: 33 07 02                 a0 = 0x2
 44258: 33 08                    a1 = 0
 44260: 33 09                    a2 = 0
 44262: 64 5a                    a3 = s0
 44264: 33 00 06 03              ra = 0x306
 44268: 0a 64                    ecalli 100 // 'log'
 44270: 01                       fallthrough
      :                          @2746 [@dyn 387]
 44271: 82 1b 50                 a4 = u64 [sp + 0x50]
 44274: 82 17 48                 a0 = u64 [sp + 0x48]
 44277: c8 67 07                 a0 = a0 + s1
 44280: 53 37 00 00 ff 1a        jump @2751 if a0 <u 4294901760
      :                          @2747
 44286: 82 b7                    a0 = u64 [a4]
 44288: c9 7b 08                 a1 = a4 - a0
 44291: ab 58 0f                 jump @2751 if a1 != s0
      :                          @2748
 44294: c9 67 08                 a1 = a0 - s1
 44297: 01                       fallthrough
      :                          @2749
 44298: 82 b9                    a2 = u64 [a4]
 44300: ab 79 f2                 jump @2747 if a2 != a0
      :                          @2750
 44303: 7b b8                    u64 [a4] = a1
 44305: 01                       fallthrough
      :                          @2751
 44306: 95 17 f0 01              a0 = sp + 0x1f0
 44310: 7b 17 58 02              u64 [sp + 0x258] = a0
 44314: 82 17 58                 a0 = u64 [sp + 0x58]
 44317: 7b 17 60 02              u64 [sp + 0x260] = a0
 44321: 82 17                    a0 = u64 [sp]
 44323: 7b 17 68 01              u64 [sp + 0x168] = a0
 44327: 49 21 70 01 02           u64 [sp + 368] = 0x2
 44332: 49 21 88 01              u64 [sp + 392] = 0
 44336: 95 17 58 02              a0 = sp + 0x258
 44340: 7b 17 78 01              u64 [sp + 0x178] = a0
 44344: 49 21 80 01 01           u64 [sp + 384] = 0x1
 44349: 95 17 28 02              a0 = sp + 0x228
 44353: 95 18 68 01              a1 = sp + 0x168
 44357: 50 20 08 03 c6 02        ra = 776, jump @2817
      :                          @2752 [@dyn 388]
 44363: 82 15 30 02              s0 = u64 [sp + 0x230]
 44367: 82 1b 38 02              a4 = u64 [sp + 0x238]
 44371: 82 16 28 02              s1 = u64 [sp + 0x228]
 44375: 33 07 02                 a0 = 0x2
 44378: 33 08                    a1 = 0
 44380: 33 09                    a2 = 0
 44382: 64 5a                    a3 = s0
 44384: 33 00 0a 03              ra = 0x30a
 44388: 0a 64                    ecalli 100 // 'log'
 44390: 01                       fallthrough
      :                          @2753 [@dyn 389]
 44391: 82 1b 50                 a4 = u64 [sp + 0x50]
 44394: 82 17 48                 a0 = u64 [sp + 0x48]
 44397: c8 67 07                 a0 = a0 + s1
 44400: 53 37 00 00 ff 1a        jump @2758 if a0 <u 4294901760
      :                          @2754
 44406: 82 b7                    a0 = u64 [a4]
 44408: c9 7b 08                 a1 = a4 - a0
 44411: ab 58 0f                 jump @2758 if a1 != s0
      :                          @2755
 44414: c9 67 08                 a1 = a0 - s1
 44417: 01                       fallthrough
      :                          @2756
 44418: 82 b9                    a2 = u64 [a4]
 44420: ab 79 f2                 jump @2754 if a2 != a0
      :                          @2757
 44423: 7b b8                    u64 [a4] = a1
 44425: 01                       fallthrough
      :                          @2758
 44426: 82 12 b0 00              t0 = u64 [sp + 0xb0]
 44430: 95 22 01                 t0 = t0 + 0x1
 44433: 82 17 b8 00              a0 = u64 [sp + 0xb8]
 44437: 95 77 98 00              a0 = a0 + 0x98
 44441: 7b 17 b8 00              u64 [sp + 0xb8] = a0
 44445: 82 1c 40                 a5 = u64 [sp + 0x40]
 44448: 82 19 38                 a2 = u64 [sp + 0x38]
 44451: 82 1b 30                 a4 = u64 [sp + 0x30]
 44454: 82 1a a8 00              a3 = u64 [sp + 0xa8]
 44458: 33 08 08                 a1 = 0x8
 44461: ae 8c 3f fb              jump @2712 if a5 >=u a1
      :                          @2759
 44465: 33 07 00 00 01           a0 = 0x10000
 44470: 33 08                    a1 = 0
 44472: 82 10 88 02              ra = u64 [sp + 0x288]
 44476: 82 15 80 02              s0 = u64 [sp + 0x280]
 44480: 82 16 78 02              s1 = u64 [sp + 0x278]
 44484: 95 11 90 02              sp = sp + 0x290
 44488: 32 00                    ret
      :                          @2760
 44490: 00                       trap
      :                          @2761
 44491: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 44494: 7b 10 40                 u64 [sp + 0x40] = ra
 44497: 7b 15 38                 u64 [sp + 0x38] = s0
 44500: 7b 16 30                 u64 [sp + 0x30] = s1
 44503: c8 89 09                 a2 = a2 + a1
 44506: ac 89 53                 jump @2769 if a2 <u a1
      :                          @2762
 44509: 64 75                    s0 = a0
 44511: 82 77                    a0 = u64 [a0]
 44513: 97 78 01                 a1 = a0 << 0x1
 44516: 33 0a 08                 a3 = 0x8
 44519: e4 a9 09                 a2 = maxu(a2, a3)
 44522: e4 98 06                 s1 = maxu(a1, a2)
 44525: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 44528: 98 88 3f                 a1 = a1 >> 0x3f
 44531: 51 07 12                 jump @2764 if a0 == 0
      :                          @2763
 44534: 82 59 08                 a2 = u64 [s0 + 0x8]
 44537: 7b 19 18                 u64 [sp + 0x18] = a2
 44540: 49 11 20 01              u64 [sp + 32] = 0x1
 44544: 7b 17 28                 u64 [sp + 0x28] = a0
 44547: 28 06                    jump @2765
      :                          @2764
 44549: 49 11 20                 u64 [sp + 32] = 0
 44552: 01                       fallthrough
      :                          @2765
 44553: 64 17                    a0 = sp
 44555: 95 1a 18                 a3 = sp + 0x18
 44558: 64 69                    a2 = s1
 44560: 50 20 0c 03 33           ra = 780, jump @2773
      :                          @2766 [@dyn 390]
 44565: 82 18                    a1 = u64 [sp]
 44567: 82 17 08                 a0 = u64 [sp + 0x8]
 44570: 51 08 14                 jump @2770 if a1 == 0
      :                          @2767
 44573: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 44583: aa 87 0d                 jump @2771 if a0 == a1
      :                          @2768
 44586: 52 07 18                 jump @2772 if a0 != 0
      :                          @2769
 44589: 00                       trap
      :                          @2770
 44590: 7b 57 08                 u64 [s0 + 0x8] = a0
 44593: 7b 56                    u64 [s0] = s1
 44595: 01                       fallthrough
      :                          @2771
 44596: 82 10 40                 ra = u64 [sp + 0x40]
 44599: 82 15 38                 s0 = u64 [sp + 0x38]
 44602: 82 16 30                 s1 = u64 [sp + 0x30]
 44605: 95 11 48                 sp = sp + 0x48
 44608: 32 00                    ret
      :                          @2772
 44610: 00                       trap
      :                          @2773
 44611: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 44614: 7b 10 30                 u64 [sp + 0x30] = ra
 44617: 7b 15 28                 u64 [sp + 0x28] = s0
 44620: 7b 16 20                 u64 [sp + 0x20] = s1
 44623: 64 95                    s0 = a2
 44625: 64 72                    t0 = a0
 44627: 51 08 7a                 jump @2783 if a1 == 0
      :                          @2774
 44630: 82 a7 08                 a0 = u64 [a3 + 0x8]
 44633: 51 07 7d                 jump @2784 if a0 == 0
      :                          @2775
 44636: 82 a9 10                 a2 = u64 [a3 + 0x10]
 44639: 51 09 ab 00              jump @2791 if a2 == 0
      :                          @2776
 44643: 82 a8                    a1 = u64 [a3]
 44645: 33 06 f0 02 03           s1 = 0x302f0
 44650: 33 03 00 00 01           t1 = 0x10000
 44655: c8 36 06                 s1 = s1 + t1
 44658: 01                       fallthrough
      :                          @2777
 44659: 82 6a                    a3 = u64 [s1]
 44661: c8 5a 07                 a0 = a3 + s0
 44664: ac a7 d0 00              jump @2797 if a0 <u a3
      :                          @2778
 44668: 95 7b 01                 a4 = a0 + 0x1
 44671: 88 bc 01                 a5 = a4 <u 0x1
 44674: d8 b3 0b                 a4 = t1 <u a4
 44677: d4 cb 0b                 a4 = a4 | a5
 44680: 52 0b c0 00              jump @2797 if a4 != 0
      :                          @2779
 44684: 82 6b                    a4 = u64 [s1]
 44686: ab ab e5                 jump @2777 if a4 != a3
      :                          @2780
 44689: 7b 67                    u64 [s1] = a0
 44691: 33 0c                    a5 = 0
 44693: 7b 12 18                 u64 [sp + 0x18] = t0
 44696: 33 0a f0 02 03           a3 = 0x302f0
 44701: 33 0b 00 00 01           a4 = 0x10000
 44706: 7b 1a                    u64 [sp] = a3
 44708: c8 ba 0a                 a3 = a3 + a4
 44711: c9 7a 07                 a0 = a3 - a0
 44714: 7b 17 10                 u64 [sp + 0x10] = a0
 44717: 7b 18 08                 u64 [sp + 0x8] = a1
 44720: 64 96                    s1 = a2
 44722: 50 20 0e 03 d3 03        ra = 782, jump @2867
      :                          @2781 [@dyn 391]
 44728: 54 36 00 00 01 98 00     jump @2798 if s1 <=u 65536
      :                          @2782
 44735: 82 12 18                 t0 = u64 [sp + 0x18]
 44738: 82 18 10                 a1 = u64 [sp + 0x10]
 44741: 33 07                    a0 = 0
 44743: 7b 28 08                 u64 [t0 + 0x8] = a1
 44746: 28 b5 00                 jump @2804
      :                          @2783
 44749: 49 12 08                 u64 [t0 + 8] = 0
 44752: 33 07 01                 a0 = 0x1
 44755: 28 ac 00                 jump @2804
      :                          @2784
 44758: 33 09 f0 02 03           a2 = 0x302f0
 44763: 33 07 00 00 01           a0 = 0x10000
 44768: c8 79 09                 a2 = a2 + a0
 44771: 01                       fallthrough
      :                          @2785
 44772: 82 9a                    a3 = u64 [a2]
 44774: c8 5a 08                 a1 = a3 + s0
 44777: ac a8 5f                 jump @2797 if a1 <u a3
      :                          @2786
 44780: 95 8b 01                 a4 = a1 + 0x1
 44783: 88 bc 01                 a5 = a4 <u 0x1
 44786: d8 b7 0b                 a4 = a0 <u a4
 44789: d4 cb 0b                 a4 = a4 | a5
 44792: 52 0b 50                 jump @2797 if a4 != 0
      :                          @2787
 44795: 82 9b                    a4 = u64 [a2]
 44797: ab ab e7                 jump @2785 if a4 != a3
      :                          @2788
 44800: 7b 98                    u64 [a2] = a1
 44802: 33 0c                    a5 = 0
 44804: 01                       fallthrough
      :                          @2789
 44805: ab ab df                 jump @2785 if a4 != a3
      :                          @2790
 44808: 28 31                    jump @2796
      :                          @2791
 44810: 33 09 f0 02 03           a2 = 0x302f0
 44815: 33 07 00 00 01           a0 = 0x10000
 44820: c8 79 09                 a2 = a2 + a0
 44823: 01                       fallthrough
      :                          @2792
 44824: 82 9a                    a3 = u64 [a2]
 44826: c8 5a 08                 a1 = a3 + s0
 44829: ac a8 2b                 jump @2797 if a1 <u a3
      :                          @2793
 44832: 95 8b 01                 a4 = a1 + 0x1
 44835: 88 bc 01                 a5 = a4 <u 0x1
 44838: d8 b7 0b                 a4 = a0 <u a4
 44841: d4 cb 0b                 a4 = a4 | a5
 44844: 52 0b 1c                 jump @2797 if a4 != 0
      :                          @2794
 44847: 82 9b                    a4 = u64 [a2]
 44849: ab ab e7                 jump @2792 if a4 != a3
      :                          @2795
 44852: 7b 98                    u64 [a2] = a1
 44854: 33 0c                    a5 = 0
 44856: 01                       fallthrough
      :                          @2796
 44857: 33 07 f0 02 04           a0 = 0x402f0
 44862: c9 87 08                 a1 = a0 - a1
 44865: 33 07                    a0 = 0
 44867: 7b 28 08                 u64 [t0 + 0x8] = a1
 44870: 28 39                    jump @2804
      :                          @2797
 44872: 33 07 01                 a0 = 0x1
 44875: 7b 27 08                 u64 [t0 + 0x8] = a0
 44878: 28 31                    jump @2804
      :                          @2798
 44880: 64 6c                    a5 = s1
 44882: 82 17                    a0 = u64 [sp]
 44884: 95 77 00 00 01           a0 = a0 + 0x10000
 44889: 82 12 18                 t0 = u64 [sp + 0x18]
 44892: 82 16 08                 s1 = u64 [sp + 0x8]
 44895: 01                       fallthrough
      :                          @2799
 44896: 82 78                    a1 = u64 [a0]
 44898: c9 87 09                 a2 = a0 - a1
 44901: ab 69 11                 jump @2803 if a2 != s1
      :                          @2800
 44904: c9 c8 09                 a2 = a1 - a5
 44907: 01                       fallthrough
      :                          @2801
 44908: 82 7a                    a3 = u64 [a0]
 44910: ab 8a f2                 jump @2799 if a3 != a1
      :                          @2802
 44913: 7b 79                    u64 [a0] = a2
 44915: 33 0b                    a4 = 0
 44917: 01                       fallthrough
      :                          @2803
 44918: 82 18 10                 a1 = u64 [sp + 0x10]
 44921: 33 07                    a0 = 0
 44923: 7b 28 08                 u64 [t0 + 0x8] = a1
 44926: 01                       fallthrough
      :                          @2804
 44927: 7b 25 10                 u64 [t0 + 0x10] = s0
 44930: 7b 27                    u64 [t0] = a0
 44932: 82 10 30                 ra = u64 [sp + 0x30]
 44935: 82 15 28                 s0 = u64 [sp + 0x28]
 44938: 82 16 20                 s1 = u64 [sp + 0x20]
 44941: 95 11 38                 sp = sp + 0x38
 44944: 32 00                    ret
      :                          @2805
 44946: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 44949: 7b 10 40                 u64 [sp + 0x40] = ra
 44952: 7b 15 38                 u64 [sp + 0x38] = s0
 44955: 7b 16 30                 u64 [sp + 0x30] = s1
 44958: 95 88 01                 a1 = a1 + 0x1
 44961: 51 08 54                 jump @2813 if a1 == 0
      :                          @2806
 44964: 64 75                    s0 = a0
 44966: 82 77                    a0 = u64 [a0]
 44968: 97 79 01                 a2 = a0 << 0x1
 44971: 33 0a 08                 a3 = 0x8
 44974: e4 a8 08                 a1 = maxu(a1, a3)
 44977: e4 89 06                 s1 = maxu(a2, a1)
 44980: 85 68 ff                 a1 = s1 ^ 0xffffffffffffffff
 44983: 98 88 3f                 a1 = a1 >> 0x3f
 44986: 51 07 12                 jump @2808 if a0 == 0
      :                          @2807
 44989: 82 59 08                 a2 = u64 [s0 + 0x8]
 44992: 7b 19 18                 u64 [sp + 0x18] = a2
 44995: 49 11 20 01              u64 [sp + 32] = 0x1
 44999: 7b 17 28                 u64 [sp + 0x28] = a0
 45002: 28 06                    jump @2809
      :                          @2808
 45004: 49 11 20                 u64 [sp + 32] = 0
 45007: 01                       fallthrough
      :                          @2809
 45008: 64 17                    a0 = sp
 45010: 95 1a 18                 a3 = sp + 0x18
 45013: 64 69                    a2 = s1
 45015: 50 20 10 03 6c fe        ra = 784, jump @2773
      :                          @2810 [@dyn 392]
 45021: 82 18                    a1 = u64 [sp]
 45023: 82 17 08                 a0 = u64 [sp + 0x8]
 45026: 51 08 14                 jump @2814 if a1 == 0
      :                          @2811
 45029: 14 08 01 00 00 00 00 00 00 80 a1 = 0x8000000000000001
 45039: aa 87 0d                 jump @2815 if a0 == a1
      :                          @2812
 45042: 52 07 18                 jump @2816 if a0 != 0
      :                          @2813
 45045: 00                       trap
      :                          @2814
 45046: 7b 57 08                 u64 [s0 + 0x8] = a0
 45049: 7b 56                    u64 [s0] = s1
 45051: 01                       fallthrough
      :                          @2815
 45052: 82 10 40                 ra = u64 [sp + 0x40]
 45055: 82 15 38                 s0 = u64 [sp + 0x38]
 45058: 82 16 30                 s1 = u64 [sp + 0x30]
 45061: 95 11 48                 sp = sp + 0x48
 45064: 32 00                    ret
      :                          @2816
 45066: 00                       trap
      :                          @2817
 45067: 95 11 c8                 sp = sp + 0xffffffffffffffc8
 45070: 7b 10 30                 u64 [sp + 0x30] = ra
 45073: 7b 15 28                 u64 [sp + 0x28] = s0
 45076: 7b 16 20                 u64 [sp + 0x20] = s1
 45079: 64 89                    a2 = a1
 45081: 82 8a 08                 a3 = u64 [a1 + 0x8]
 45084: 64 75                    s0 = a0
 45086: 51 0a 35                 jump @2822 if a3 == 0
      :                          @2818
 45089: 82 98                    a1 = u64 [a2]
 45091: 33 07                    a0 = 0
 45093: 95 8b 08                 a4 = a1 + 0x8
 45096: 01                       fallthrough
      :                          @2819
 45097: 82 bc                    a5 = u64 [a4]
 45099: c8 c7 07                 a0 = a0 + a5
 45102: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 45105: 95 bb 10                 a4 = a4 + 0x10
 45108: 52 0a f5                 jump @2819 if a3 != 0
      :                          @2820
 45111: 82 9a 18                 a3 = u64 [a2 + 0x18]
 45114: 51 0a 24                 jump @2824 if a3 == 0
      :                          @2821
 45117: 82 88 08                 a1 = u64 [a1 + 0x8]
 45120: 8e 88                    a1 = a1 >u 0
 45122: 88 7a 10                 a3 = a0 <u 0x10
 45125: 85 aa 01                 a3 = a3 ^ 0x1
 45128: d4 a8 08                 a1 = a1 | a3
 45131: 89 7a                    a3 = a0 <s 0
 45133: e0 a8 08                 a1 = a1 & ~a3
 45136: 52 08 0a                 jump @2823 if a1 != 0
      :                          @2822
 45139: 33 07                    a0 = 0
 45141: 33 08 01                 a1 = 0x1
 45144: 28 4a                    jump @2832
      :                          @2823
 45146: 97 77 01                 a0 = a0 << 0x1
 45149: 01                       fallthrough
      :                          @2824
 45150: 51 07 40                 jump @2831 if a0 == 0
      :                          @2825
 45153: 57 07 79                 jump @2837 if a0 <s 0
      :                          @2826
 45156: 64 52                    t0 = s0
 45158: 33 0b f0 02 03           a4 = 0x302f0
 45163: 33 08 00 00 01           a1 = 0x10000
 45168: c8 8b 0b                 a4 = a4 + a1
 45171: 01                       fallthrough
      :                          @2827
 45172: 82 bc                    a5 = u64 [a4]
 45174: c8 7c 0a                 a3 = a5 + a0
 45177: ac ca 5f                 jump @2835 if a3 <u a5
      :                          @2828
 45180: 95 a5 01                 s0 = a3 + 0x1
 45183: 88 56 01                 s1 = s0 <u 0x1
 45186: d8 58 05                 s0 = a1 <u s0
 45189: d4 65 05                 s0 = s0 | s1
 45192: 52 05 50                 jump @2835 if s0 != 0
      :                          @2829
 45195: 82 b6                    s1 = u64 [a4]
 45197: ab c6 e7                 jump @2827 if s1 != a5
      :                          @2830
 45200: 7b ba                    u64 [a4] = a3
 45202: 33 08 f0 02 04           a1 = 0x402f0
 45207: c9 a8 08                 a1 = a1 - a3
 45210: 64 25                    s0 = t0
 45212: 28 06                    jump @2832
      :                          @2831
 45214: 33 08 01                 a1 = 0x1
 45217: 01                       fallthrough
      :                          @2832
 45218: 7b 17                    u64 [sp] = a0
 45220: 7b 18 08                 u64 [sp + 0x8] = a1
 45223: 49 11 10                 u64 [sp + 16] = 0
 45226: 33 08 80 11 01           a1 = 0x11180
 45231: 64 17                    a0 = sp
 45233: 50 20 12 03 fe 0b        ra = 786, jump @3074
      :                          @2833 [@dyn 393]
 45239: 52 07 22                 jump @2836 if a0 != 0
      :                          @2834
 45242: 82 17 10                 a0 = u64 [sp + 0x10]
 45245: 82 18 08                 a1 = u64 [sp + 0x8]
 45248: 82 19                    a2 = u64 [sp]
 45250: 7b 57 10                 u64 [s0 + 0x10] = a0
 45253: 7b 58 08                 u64 [s0 + 0x8] = a1
 45256: 7b 59                    u64 [s0] = a2
 45258: 82 10 30                 ra = u64 [sp + 0x30]
 45261: 82 15 28                 s0 = u64 [sp + 0x28]
 45264: 82 16 20                 s1 = u64 [sp + 0x20]
 45267: 95 11 38                 sp = sp + 0x38
 45270: 32 00                    ret
      :                          @2835
 45272: 00                       trap
      :                          @2836
 45273: 00                       trap
      :                          @2837
 45274: 00                       trap
      :                          @2838 [@dyn 394]
 45275: 82 72                    t0 = u64 [a0]
 45277: 33 09 00 00 ff           a2 = 0xffffffffffff0000
 45282: 95 2a ff ff fe           a3 = t0 + 0xfffffffffffeffff
 45287: ac 9a 28                 jump @2844 if a3 <u a2
      :                          @2839
 45290: 82 77 08                 a0 = u64 [a0 + 0x8]
 45293: 33 09 f0 02 03           a2 = 0x302f0
 45298: 95 99 00 00 01           a2 = a2 + 0x10000
 45303: 01                       fallthrough
      :                          @2840
 45304: 82 9a                    a3 = u64 [a2]
 45306: c9 a9 0b                 a4 = a2 - a3
 45309: ab 7b 12                 jump @2844 if a4 != a0
      :                          @2841
 45312: c9 2a 0b                 a4 = a3 - t0
 45315: 01                       fallthrough
      :                          @2842
 45316: 82 9c                    a5 = u64 [a2]
 45318: ab ac f2                 jump @2840 if a5 != a3
      :                          @2843
 45321: 7b 9b                    u64 [a2] = a4
 45323: 33 08                    a1 = 0
 45325: 32 00                    ret
      :                          @2844
 45327: 32 00                    ret
      :                          @2845 [@dyn 395]
 45329: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45332: 7b 10 18                 u64 [sp + 0x18] = ra
 45335: 7b 15 10                 u64 [sp + 0x10] = s0
 45338: 7b 16 08                 u64 [sp + 0x8] = s1
 45341: 64 75                    s0 = a0
 45343: 82 7a 10                 a3 = u64 [a0 + 0x10]
 45346: 82 77                    a0 = u64 [a0]
 45348: c9 a7 07                 a0 = a0 - a3
 45351: 64 96                    s1 = a2
 45353: ac 97 2b                 jump @2848 if a0 <u a2
      :                          @2846
 45356: 7b 1a                    u64 [sp] = a3
 45358: 82 57 08                 a0 = u64 [s0 + 0x8]
 45361: c8 a7 07                 a0 = a0 + a3
 45364: 64 69                    a2 = s1
 45366: 50 20 18 03 4f 01        ra = 792, jump @2867
      :                          @2847 [@dyn 396]
 45372: 82 17                    a0 = u64 [sp]
 45374: c8 76 06                 s1 = s1 + a0
 45377: 7b 56 10                 u64 [s0 + 0x10] = s1
 45380: 33 07                    a0 = 0
 45382: 82 10 18                 ra = u64 [sp + 0x18]
 45385: 82 15 10                 s0 = u64 [sp + 0x10]
 45388: 82 16 08                 s1 = u64 [sp + 0x8]
 45391: 95 11 20                 sp = sp + 0x20
 45394: 32 00                    ret
      :                          @2848
 45396: 64 57                    a0 = s0
 45398: 7b 18                    u64 [sp] = a1
 45400: 64 a8                    a1 = a3
 45402: 64 69                    a2 = s1
 45404: 50 20 1a 03 6f fc        ra = 794, jump @2761
      :                          @2849 [@dyn 397]
 45410: 82 18                    a1 = u64 [sp]
 45412: 82 5a 10                 a3 = u64 [s0 + 0x10]
 45415: 28 c5                    jump @2846
      :                          @2850 [@dyn 398]
 45417: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 45420: 7b 10 20                 u64 [sp + 0x20] = ra
 45423: 7b 15 18                 u64 [sp + 0x18] = s0
 45426: 7b 16 10                 u64 [sp + 0x10] = s1
 45429: 64 86                    s1 = a1
 45431: 83 88                    i32 a1 = a1 + 0
 45433: 33 09 80 00              a2 = 0x80
 45437: 64 7a                    a3 = a0
 45439: ae 98 2c                 jump @2855 if a1 >=u a2
      :                          @2851
 45442: 82 a8 10                 a1 = u64 [a3 + 0x10]
 45445: 82 a7                    a0 = u64 [a3]
 45447: ab 78 13                 jump @2854 if a1 != a0
      :                          @2852
 45450: 64 a7                    a0 = a3
 45452: 64 a5                    s0 = a3
 45454: 50 20 1e 03 04 fe        ra = 798, jump @2805
      :                          @2853 [@dyn 399]
 45460: 64 5a                    a3 = s0
 45462: 82 58 10                 a1 = u64 [s0 + 0x10]
 45465: 01                       fallthrough
      :                          @2854
 45466: 82 a7 08                 a0 = u64 [a3 + 0x8]
 45469: c8 87 07                 a0 = a0 + a1
 45472: 78 76                    u8 [a0] = s1
 45474: 95 88 01                 a1 = a1 + 0x1
 45477: 7b a8 10                 u64 [a3 + 0x10] = a1
 45480: 28 ac 00                 jump @2863
      :                          @2855
 45483: 8b 67 0b                 i32 a0 = s1 >> 0xb
 45486: 48 11 0c                 u32 [sp + 12] = 0
 45489: 52 07 1c                 jump @2857 if a0 != 0
      :                          @2856
 45492: 98 67 06                 a0 = s1 >> 0x6
 45495: 86 77 c0 00              a0 = a0 | 0xc0
 45499: 78 17 0c                 u8 [sp + 0xc] = a0
 45502: 84 67 3f                 a0 = s1 & 0x3f
 45505: 86 77 80 00              a0 = a0 | 0x80
 45509: 78 17 0d                 u8 [sp + 0xd] = a0
 45512: 33 06 02                 s1 = 0x2
 45515: 28 63                    jump @2860
      :                          @2857
 45517: 8b 67 10                 i32 a0 = s1 >> 0x10
 45520: 52 07 29                 jump @2859 if a0 != 0
      :                          @2858
 45523: 98 67 0c                 a0 = s1 >> 0xc
 45526: 86 77 e0 00              a0 = a0 | 0xe0
 45530: 78 17 0c                 u8 [sp + 0xc] = a0
 45533: 97 67 34                 a0 = s1 << 0x34
 45536: 98 77 3a                 a0 = a0 >> 0x3a
 45539: 95 77 80 00              a0 = a0 + 0x80
 45543: 78 17 0d                 u8 [sp + 0xd] = a0
 45546: 84 67 3f                 a0 = s1 & 0x3f
 45549: 86 77 80 00              a0 = a0 | 0x80
 45553: 78 17 0e                 u8 [sp + 0xe] = a0
 45556: 33 06 03                 s1 = 0x3
 45559: 28 37                    jump @2860
      :                          @2859
 45561: 97 67 2b                 a0 = s1 << 0x2b
 45564: 98 77 3d                 a0 = a0 >> 0x3d
 45567: 95 77 f0 00              a0 = a0 + 0xf0
 45571: 78 17 0c                 u8 [sp + 0xc] = a0
 45574: 97 67 2e                 a0 = s1 << 0x2e
 45577: 98 77 3a                 a0 = a0 >> 0x3a
 45580: 95 77 80 00              a0 = a0 + 0x80
 45584: 78 17 0d                 u8 [sp + 0xd] = a0
 45587: 97 67 34                 a0 = s1 << 0x34
 45590: 98 77 3a                 a0 = a0 >> 0x3a
 45593: 95 77 80 00              a0 = a0 + 0x80
 45597: 78 17 0e                 u8 [sp + 0xe] = a0
 45600: 84 67 3f                 a0 = s1 & 0x3f
 45603: 86 77 80 00              a0 = a0 | 0x80
 45607: 78 17 0f                 u8 [sp + 0xf] = a0
 45610: 33 06 04                 s1 = 0x4
 45613: 01                       fallthrough
      :                          @2860
 45614: 82 a5 10                 s0 = u64 [a3 + 0x10]
 45617: 82 a7                    a0 = u64 [a3]
 45619: c9 57 07                 a0 = a0 - s0
 45622: ac 67 2e                 jump @2864 if a0 <u s1
      :                          @2861
 45625: 7b 1a                    u64 [sp] = a3
 45627: 82 a7 08                 a0 = u64 [a3 + 0x8]
 45630: c8 57 07                 a0 = a0 + s0
 45633: 95 18 0c                 a1 = sp + 0xc
 45636: 64 69                    a2 = s1
 45638: 50 20 20 03 3f           ra = 800, jump @2867
      :                          @2862 [@dyn 400]
 45643: c8 56 06                 s1 = s1 + s0
 45646: 82 17                    a0 = u64 [sp]
 45648: 7b 76 10                 u64 [a0 + 0x10] = s1
 45651: 01                       fallthrough
      :                          @2863
 45652: 33 07                    a0 = 0
 45654: 82 10 20                 ra = u64 [sp + 0x20]
 45657: 82 15 18                 s0 = u64 [sp + 0x18]
 45660: 82 16 10                 s1 = u64 [sp + 0x10]
 45663: 95 11 28                 sp = sp + 0x28
 45666: 32 00                    ret
      :                          @2864
 45668: 64 a7                    a0 = a3
 45670: 64 58                    a1 = s0
 45672: 64 69                    a2 = s1
 45674: 64 a5                    s0 = a3
 45676: 50 20 22 03 5f fb        ra = 802, jump @2761
      :                          @2865 [@dyn 401]
 45682: 64 5a                    a3 = s0
 45684: 82 55 10                 s0 = u64 [s0 + 0x10]
 45687: 28 c2                    jump @2861
      :                          @2866 [@dyn 402]
 45689: 64 8a                    a3 = a1
 45691: 33 08 80 11 01           a1 = 0x11180
 45696: 64 a9                    a2 = a3
 45698: 28 2d 0a                 jump @3074
      :                          @2867
 45701: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45704: 7b 10 18                 u64 [sp + 0x18] = ra
 45707: 7b 15 10                 u64 [sp + 0x10] = s0
 45710: 7b 16 08                 u64 [sp + 0x8] = s1
 45713: 53 19 10 64              jump @2876 if a2 <u 16
      :                          @2868
 45717: 8d 7a                    i32 a3 = -a0
 45719: 84 a2 07                 t0 = a3 & 0x7
 45722: c8 27 0b                 a4 = a0 + t0
 45725: 51 02 15                 jump @2871 if t0 == 0
      :                          @2869
 45728: 64 8c                    a5 = a1
 45730: 64 75                    s0 = a0
 45732: 01                       fallthrough
      :                          @2870
 45733: 7c ca                    a3 = u8 [a5]
 45735: 78 5a                    u8 [s0] = a3
 45737: 95 55 01                 s0 = s0 + 0x1
 45740: 95 cc 01                 a5 = a5 + 0x1
 45743: ac b5 f6                 jump @2870 if s0 <u a4
      :                          @2871
 45746: c8 28 03                 t1 = a1 + t0
 45749: c9 29 02                 t0 = a2 - t0
 45752: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 45755: 84 38 07                 a1 = t1 & 0x7
 45758: c8 4b 0a                 a3 = a4 + t2
 45761: 51 08 3b                 jump @2878 if a1 == 0
      :                          @2872
 45764: 58 04 4b                 jump @2881 if t2 <=s 0
      :                          @2873
 45767: 97 38 03                 a1 = t1 << 0x3
 45770: 84 80 38                 ra = a1 & 0x38
 45773: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 45776: 82 c5                    s0 = u64 [a5]
 45778: 8d 88                    i32 a1 = -a1
 45780: 84 88 38                 a1 = a1 & 0x38
 45783: 95 cc 08                 a5 = a5 + 0x8
 45786: 01                       fallthrough
      :                          @2874
 45787: 82 c6                    s1 = u64 [a5]
 45789: d0 05 05                 s0 = s0 >> ra
 45792: cf 86 09                 a2 = s1 << a1
 45795: d4 59 09                 a2 = a2 | s0
 45798: 7b b9                    u64 [a4] = a2
 45800: 95 bb 08                 a4 = a4 + 0x8
 45803: 95 cc 08                 a5 = a5 + 0x8
 45806: 64 65                    s0 = s1
 45808: ac ab eb                 jump @2874 if a4 <u a3
      :                          @2875
 45811: 28 1c                    jump @2881
      :                          @2876
 45813: 64 7a                    a3 = a0
 45815: 52 09 21                 jump @2882 if a2 != 0
      :                          @2877
 45818: 28 2f                    jump @2884
      :                          @2878
 45820: 58 04 13                 jump @2881 if t2 <=s 0
      :                          @2879
 45823: 64 38                    a1 = t1
 45825: 01                       fallthrough
      :                          @2880
 45826: 82 89                    a2 = u64 [a1]
 45828: 7b b9                    u64 [a4] = a2
 45830: 95 bb 08                 a4 = a4 + 0x8
 45833: 95 88 08                 a1 = a1 + 0x8
 45836: ac ab f6                 jump @2880 if a4 <u a3
      :                          @2881
 45839: c8 43 08                 a1 = t1 + t2
 45842: 84 29 07                 a2 = t0 & 0x7
 45845: 51 09 14                 jump @2884 if a2 == 0
      :                          @2882
 45848: c8 a9 09                 a2 = a2 + a3
 45851: 01                       fallthrough
      :                          @2883
 45852: 7c 8b                    a4 = u8 [a1]
 45854: 78 ab                    u8 [a3] = a4
 45856: 95 aa 01                 a3 = a3 + 0x1
 45859: 95 88 01                 a1 = a1 + 0x1
 45862: ac 9a f6                 jump @2883 if a3 <u a2
      :                          @2884
 45865: 82 10 18                 ra = u64 [sp + 0x18]
 45868: 82 15 10                 s0 = u64 [sp + 0x10]
 45871: 82 16 08                 s1 = u64 [sp + 0x8]
 45874: 95 11 20                 sp = sp + 0x20
 45877: 32 00                    ret
      :                          @2885
 45879: 95 11 e0                 sp = sp + 0xffffffffffffffe0
 45882: 7b 10 18                 u64 [sp + 0x18] = ra
 45885: 7b 15 10                 u64 [sp + 0x10] = s0
 45888: 7b 16 08                 u64 [sp + 0x8] = s1
 45891: c9 87 0a                 a3 = a0 - a1
 45894: ae 9a 7d                 jump @2895 if a3 >=u a2
      :                          @2886
 45897: c8 97 0a                 a3 = a0 + a2
 45900: c8 98 02                 t0 = a1 + a2
 45903: 53 19 10 da 00           jump @2904 if a2 <u 16
      :                          @2887
 45908: 84 a4 07                 t2 = a3 & 0x7
 45911: 9a 43                    t1 = -t2
 45913: 84 ab f8                 a4 = a3 & 0xfffffffffffffff8
 45916: 51 04 1a                 jump @2890 if t2 == 0
      :                          @2888
 45919: c8 98 05                 s0 = a1 + a2
 45922: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45925: 01                       fallthrough
      :                          @2889
 45926: 7c 5c                    a5 = u8 [s0]
 45928: 95 a6 ff                 s1 = a3 + 0xffffffffffffffff
 45931: 78 ac ff                 u8 [a3 + 0xffffffffffffffff] = a5
 45934: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 45937: 64 6a                    a3 = s1
 45939: ac 6b f3                 jump @2889 if a4 <u s1
      :                          @2890
 45942: c8 32 02                 t0 = t0 + t1
 45945: c9 49 03                 t1 = a2 - t2
 45948: 84 34 f8                 t2 = t1 & 0xfffffffffffffff8
 45951: 7b 12                    u64 [sp] = t0
 45953: 84 29 07                 a2 = t0 & 0x7
 45956: c9 4b 0a                 a3 = a4 - t2
 45959: 51 09 b0 00              jump @2907 if a2 == 0
      :                          @2891
 45963: 58 04 c6 00              jump @2910 if t2 <=s 0
      :                          @2892
 45967: 82 16                    s1 = u64 [sp]
 45969: 97 69 03                 a2 = s1 << 0x3
 45972: 84 90 38                 ra = a2 & 0x38
 45975: 84 66 f8                 s1 = s1 & 0xfffffffffffffff8
 45978: 82 65                    s0 = u64 [s1]
 45980: 8d 99                    i32 a2 = -a2
 45982: 84 9c 38                 a5 = a2 & 0x38
 45985: 95 69 f8                 a2 = s1 + 0xfffffffffffffff8
 45988: 01                       fallthrough
      :                          @2893
 45989: 82 96                    s1 = u64 [a2]
 45991: cf c5 05                 s0 = s0 << a5
 45994: d0 06 08                 a1 = s1 >> ra
 45997: d4 58 08                 a1 = a1 | s0
 46000: 95 b2 f8                 t0 = a4 + 0xfffffffffffffff8
 46003: 7b b8 f8                 u64 [a4 + 0xfffffffffffffff8] = a1
 46006: 95 99 f8                 a2 = a2 + 0xfffffffffffffff8
 46009: 64 65                    s0 = s1
 46011: 64 2b                    a4 = t0
 46013: ac 2a e8                 jump @2893 if a3 <u t0
      :                          @2894
 46016: 28 91 00                 jump @2910
      :                          @2895
 46019: 53 19 10 6d              jump @2905 if a2 <u 16
      :                          @2896
 46023: 8d 7a                    i32 a3 = -a0
 46025: 84 aa 07                 a3 = a3 & 0x7
 46028: c8 a7 0b                 a4 = a0 + a3
 46031: 51 0a 15                 jump @2899 if a3 == 0
      :                          @2897
 46034: 64 8c                    a5 = a1
 46036: 64 75                    s0 = a0
 46038: 01                       fallthrough
      :                          @2898
 46039: 7c c6                    s1 = u8 [a5]
 46041: 78 56                    u8 [s0] = s1
 46043: 95 55 01                 s0 = s0 + 0x1
 46046: 95 cc 01                 a5 = a5 + 0x1
 46049: ac b5 f6                 jump @2898 if s0 <u a4
      :                          @2899
 46052: c8 a8 03                 t1 = a1 + a3
 46055: c9 a9 02                 t0 = a2 - a3
 46058: 84 24 f8                 t2 = t0 & 0xfffffffffffffff8
 46061: 84 38 07                 a1 = t1 & 0x7
 46064: c8 4b 0a                 a3 = a4 + t2
 46067: 51 08 84 00              jump @2914 if a1 == 0
      :                          @2900
 46071: 58 04 93 00              jump @2917 if t2 <=s 0
      :                          @2901
 46075: 97 38 03                 a1 = t1 << 0x3
 46078: 84 80 38                 ra = a1 & 0x38
 46081: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 46084: 82 c5                    s0 = u64 [a5]
 46086: 8d 88                    i32 a1 = -a1
 46088: 84 88 38                 a1 = a1 & 0x38
 46091: 95 cc 08                 a5 = a5 + 0x8
 46094: 01                       fallthrough
      :                          @2902
 46095: 82 c6                    s1 = u64 [a5]
 46097: d0 05 05                 s0 = s0 >> ra
 46100: cf 86 09                 a2 = s1 << a1
 46103: d4 59 09                 a2 = a2 | s0
 46106: 7b b9                    u64 [a4] = a2
 46108: 95 bb 08                 a4 = a4 + 0x8
 46111: 95 cc 08                 a5 = a5 + 0x8
 46114: 64 65                    s0 = s1
 46116: ac ab eb                 jump @2902 if a4 <u a3
      :                          @2903
 46119: 28 63                    jump @2917
      :                          @2904
 46121: 64 78                    a1 = a0
 46123: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 46126: 28 37                    jump @2912
      :                          @2905
 46128: 64 7a                    a3 = a0
 46130: 52 09 61                 jump @2918 if a2 != 0
      :                          @2906
 46133: 28 6f                    jump @2920
      :                          @2907
 46135: 58 04 1a                 jump @2910 if t2 <=s 0
      :                          @2908
 46138: c8 38 08                 a1 = a1 + t1
 46141: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 46144: 01                       fallthrough
      :                          @2909
 46145: 82 89                    a2 = u64 [a1]
 46147: 95 bc f8                 a5 = a4 + 0xfffffffffffffff8
 46150: 7b b9 f8                 u64 [a4 + 0xfffffffffffffff8] = a2
 46153: 95 88 f8                 a1 = a1 + 0xfffffffffffffff8
 46156: 64 cb                    a4 = a5
 46158: ac ca f3                 jump @2909 if a3 <u a5
      :                          @2910
 46161: 84 38 07                 a1 = t1 & 0x7
 46164: 51 08 50                 jump @2920 if a1 == 0
      :                          @2911
 46167: 9a 49                    a2 = -t2
 46169: 82 12                    t0 = u64 [sp]
 46171: c8 92 02                 t0 = t0 + a2
 46174: c9 8a 08                 a1 = a3 - a1
 46177: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 46180: 01                       fallthrough
      :                          @2912
 46181: 7c 29                    a2 = u8 [t0]
 46183: 95 ab ff                 a4 = a3 + 0xffffffffffffffff
 46186: 78 a9 ff                 u8 [a3 + 0xffffffffffffffff] = a2
 46189: 95 22 ff                 t0 = t0 + 0xffffffffffffffff
 46192: 64 ba                    a3 = a4
 46194: ac b8 f3                 jump @2912 if a1 <u a4
      :                          @2913
 46197: 28 2f                    jump @2920
      :                          @2914
 46199: 58 04 13                 jump @2917 if t2 <=s 0
      :                          @2915
 46202: 64 38                    a1 = t1
 46204: 01                       fallthrough
      :                          @2916
 46205: 82 89                    a2 = u64 [a1]
 46207: 7b b9                    u64 [a4] = a2
 46209: 95 bb 08                 a4 = a4 + 0x8
 46212: 95 88 08                 a1 = a1 + 0x8
 46215: ac ab f6                 jump @2916 if a4 <u a3
      :                          @2917
 46218: c8 43 08                 a1 = t1 + t2
 46221: 84 29 07                 a2 = t0 & 0x7
 46224: 51 09 14                 jump @2920 if a2 == 0
      :                          @2918
 46227: c8 a9 09                 a2 = a2 + a3
 46230: 01                       fallthrough
      :                          @2919
 46231: 7c 8b                    a4 = u8 [a1]
 46233: 78 ab                    u8 [a3] = a4
 46235: 95 aa 01                 a3 = a3 + 0x1
 46238: 95 88 01                 a1 = a1 + 0x1
 46241: ac 9a f6                 jump @2919 if a3 <u a2
      :                          @2920
 46244: 82 10 18                 ra = u64 [sp + 0x18]
 46247: 82 15 10                 s0 = u64 [sp + 0x10]
 46250: 82 16 08                 s1 = u64 [sp + 0x8]
 46253: 95 11 20                 sp = sp + 0x20
 46256: 32 00                    ret
      :                          @2921
 46258: 53 19 10 48              jump @2930 if a2 <u 16
      :                          @2922
 46262: 8d 7a                    i32 a3 = -a0
 46264: 84 aa 07                 a3 = a3 & 0x7
 46267: c8 a7 0b                 a4 = a0 + a3
 46270: 51 0a 0e                 jump @2925 if a3 == 0
      :                          @2923
 46273: 64 7c                    a5 = a0
 46275: 01                       fallthrough
      :                          @2924
 46276: 78 c8                    u8 [a5] = a1
 46278: 95 cc 01                 a5 = a5 + 0x1
 46281: ac bc fb                 jump @2924 if a5 <u a4
      :                          @2925
 46284: c9 a9 03                 t1 = a2 - a3
 46287: 84 3c f8                 a5 = t1 & 0xfffffffffffffff8
 46290: c8 cb 0a                 a3 = a4 + a5
 46293: 58 0c 1d                 jump @2928 if a5 <=s 0
      :                          @2926
 46296: 84 82 ff 00              t0 = a1 & 0xff
 46300: 14 09 01 01 01 01 01 01 01 01 a2 = 0x101010101010101
 46310: ca 92 0c                 a5 = t0 * a2
 46313: 01                       fallthrough
      :                          @2927
 46314: 7b bc                    u64 [a4] = a5
 46316: 95 bb 08                 a4 = a4 + 0x8
 46319: ac ab fb                 jump @2927 if a4 <u a3
      :                          @2928
 46322: 84 39 07                 a2 = t1 & 0x7
 46325: 52 09 0a                 jump @2931 if a2 != 0
      :                          @2929
 46328: 28 13                    jump @2933
      :                          @2930
 46330: 64 7a                    a3 = a0
 46332: 51 09 0f                 jump @2933 if a2 == 0
      :                          @2931
 46335: c8 a9 09                 a2 = a2 + a3
 46338: 01                       fallthrough
      :                          @2932
 46339: 78 a8                    u8 [a3] = a1
 46341: 95 aa 01                 a3 = a3 + 0x1
 46344: ac 9a fb                 jump @2932 if a3 <u a2
      :                          @2933
 46347: 32 00                    ret
      :                          @2934 [@dyn 403]
 46349: 82 77                    a0 = u64 [a0]
 46351: 01                       fallthrough
      :                          @2935
 46352: 28                       jump @2935
      :                          @2936 [@dyn 404]
 46353: 82 77                    a0 = u64 [a0]
 46355: 64 89                    a2 = a1
 46357: 33 08 01                 a1 = 0x1
 46360: 01                       fallthrough
      :                          @2937
 46361: 95 11 a0                 sp = sp + 0xffffffffffffffa0
 46364: 7b 10 58                 u64 [sp + 0x58] = ra
 46367: 7b 15 50                 u64 [sp + 0x50] = s0
 46370: 7b 16 48                 u64 [sp + 0x48] = s1
 46373: 7b 19 08                 u64 [sp + 0x8] = a2
 46376: 7b 18                    u64 [sp] = a1
 46378: 98 7a 04                 a3 = a0 >> 0x4
 46381: 33 09 27                 a2 = 0x27
 46384: 53 2a 71 02 81 00        jump @2940 if a3 <u 625
      :                          @2938
 46390: 33 09 27                 a2 = 0x27
 46393: 95 1b 46                 a4 = sp + 0x46
 46396: 3a 08 d0 00 03           a1 = u64 [0x300d0]
 46401: 7b 18 18                 u64 [sp + 0x18] = a1
 46404: 49 11 10 f0 d8 00        u64 [sp + 16] = 0xd8f0
 46410: 33 03 7b 14              t1 = 0x147b
 46414: 33 05 f4 11 01           s0 = 0x111f4
 46419: 33 00 ff e0 f5 05        ra = 0x5f5e0ff
 46425: 01                       fallthrough
      :                          @2939
 46426: 64 74                    t2 = a0
 46428: 82 17 18                 a0 = u64 [sp + 0x18]
 46431: d6 74 07                 a0 = t2 mulhu a0
 46434: 98 77 0b                 a0 = a0 >> 0xb
 46437: 82 18 10                 a1 = u64 [sp + 0x10]
 46440: c0 87 02                 i32 t0 = a0 * a1
 46443: c8 42 0a                 a3 = t0 + t2
 46446: 97 a2 30                 t0 = a3 << 0x30
 46449: 98 28 32                 a1 = t0 >> 0x32
 46452: ca 38 08                 a1 = a1 * t1
 46455: 98 8c 11                 a5 = a1 >> 0x11
 46458: 98 88 10                 a1 = a1 >> 0x10
 46461: 84 88 fe 07              a1 = a1 & 0x7fe
 46465: 96 cc 9c                 a5 = a5 * 0xffffffffffffff9c
 46468: c8 ca 0a                 a3 = a3 + a5
 46471: 97 aa 31                 a3 = a3 << 0x31
 46474: 98 aa 30                 a3 = a3 >> 0x30
 46477: c8 58 08                 a1 = a1 + s0
 46480: 7c 8c                    a5 = u8 [a1]
 46482: 7c 88 01                 a1 = u8 [a1 + 0x1]
 46485: c8 5a 0a                 a3 = a3 + s0
 46488: 7c a6 01                 s1 = u8 [a3 + 0x1]
 46491: 7c aa                    a3 = u8 [a3]
 46493: 78 b8 ff                 u8 [a4 + 0xffffffffffffffff] = a1
 46496: 78 bc fe                 u8 [a4 + 0xfffffffffffffffe] = a5
 46499: 78 b6 01                 u8 [a4 + 0x1] = s1
 46502: 78 ba                    u8 [a4] = a3
 46504: 95 99 fc                 a2 = a2 + 0xfffffffffffffffc
 46507: 95 bb fc                 a4 = a4 + 0xfffffffffffffffc
 46510: ac 40 ac                 jump @2939 if ra <u t2
      :                          @2940
 46513: 54 17 63 3b              jump @2942 if a0 <=u 99
      :                          @2941
 46517: 97 78 30                 a1 = a0 << 0x30
 46520: 98 88 32                 a1 = a1 >> 0x32
 46523: 96 88 7b 14              a1 = a1 * 0x147b
 46527: 98 88 11                 a1 = a1 >> 0x11
 46530: 96 8a 9c                 a3 = a1 * 0xffffffffffffff9c
 46533: c8 a7 07                 a0 = a0 + a3
 46536: 97 77 31                 a0 = a0 << 0x31
 46539: 98 77 30                 a0 = a0 >> 0x30
 46542: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 46545: 33 0a f4 11 01           a3 = 0x111f4
 46550: c8 a7 07                 a0 = a0 + a3
 46553: 7c 7a 01                 a3 = u8 [a0 + 0x1]
 46556: 7c 77                    a0 = u8 [a0]
 46558: 95 1b 21                 a4 = sp + 0x21
 46561: c8 9b 0b                 a4 = a4 + a2
 46564: 78 ba 01                 u8 [a4 + 0x1] = a3
 46567: 78 b7                    u8 [a4] = a0
 46569: 64 87                    a0 = a1
 46571: 01                       fallthrough
      :                          @2942
 46572: 55 17 0a 14              jump @2944 if a0 >=u 10
      :                          @2943
 46576: 95 99 ff                 a2 = a2 + 0xffffffffffffffff
 46579: 95 18 21                 a1 = sp + 0x21
 46582: c8 98 08                 a1 = a1 + a2
 46585: 83 77 30                 i32 a0 = a0 + 0x30
 46588: 78 87                    u8 [a1] = a0
 46590: 28 21                    jump @2945
      :                          @2944
 46592: 97 77 01                 a0 = a0 << 0x1
 46595: 95 99 fe                 a2 = a2 + 0xfffffffffffffffe
 46598: 33 08 f4 11 01           a1 = 0x111f4
 46603: c8 87 07                 a0 = a0 + a1
 46606: 7c 78 01                 a1 = u8 [a0 + 0x1]
 46609: 7c 77                    a0 = u8 [a0]
 46611: 95 1a 21                 a3 = sp + 0x21
 46614: c8 9a 0a                 a3 = a3 + a2
 46617: 78 a8 01                 u8 [a3 + 0x1] = a1
 46620: 78 a7                    u8 [a3] = a0
 46622: 01                       fallthrough
      :                          @2945
 46623: 95 1b 21                 a4 = sp + 0x21
 46626: c8 9b 0b                 a4 = a4 + a2
 46629: 9a 9c 27                 a5 = 0x27 - a2
 46632: 33 09 b0 11 01           a2 = 0x111b0
 46637: 82 17 08                 a0 = u64 [sp + 0x8]
 46640: 82 18                    a1 = u64 [sp]
 46642: 33 0a                    a3 = 0
 46644: 50 20 2a 03 13           ra = 810, jump @2947
      :                          @2946 [@dyn 405]
 46649: 82 10 58                 ra = u64 [sp + 0x58]
 46652: 82 15 50                 s0 = u64 [sp + 0x50]
 46655: 82 16 48                 s1 = u64 [sp + 0x48]
 46658: 95 11 60                 sp = sp + 0x60
 46661: 32 00                    ret
      :                          @2947
 46663: 95 11 98                 sp = sp + 0xffffffffffffff98
 46666: 7b 10 60                 u64 [sp + 0x60] = ra
 46669: 7b 15 58                 u64 [sp + 0x58] = s0
 46672: 7b 16 50                 u64 [sp + 0x50] = s1
 46675: 7b 1b 18                 u64 [sp + 0x18] = a4
 46678: 51 08 4f                 jump @2954 if a1 == 0
      :                          @2948
 46681: 80 76 34                 s1 = u32 [a0 + 0x34]
 46684: 84 68 01                 a1 = s1 & 0x1
 46687: 33 0b 2b                 a4 = 0x2b
 46690: 33 05 00 00 11           s0 = 0x110000
 46695: db 8b 05                 s0 = a4 if a1 != 0
 46698: 7b 15 28                 u64 [sp + 0x28] = s0
 46701: c8 c8 02                 t0 = a1 + a5
 46704: 84 68 04                 a1 = s1 & 0x4
 46707: 51 08 42                 jump @2955 if a1 == 0
      :                          @2949
 46710: 7b 19 30                 u64 [sp + 0x30] = a2
 46713: 33 08                    a1 = 0
 46715: 51 0a 1a                 jump @2952 if a3 == 0
      :                          @2950
 46718: 64 a5                    s0 = a3
 46720: 01                       fallthrough
      :                          @2951
 46721: 7d 9b                    a4 = i8 [a2]
 46723: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 46726: 85 bb 01                 a4 = a4 ^ 0x1
 46729: c8 b8 08                 a1 = a1 + a4
 46732: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46735: 95 99 01                 a2 = a2 + 0x1
 46738: 52 05 ef                 jump @2951 if s0 != 0
      :                          @2952
 46741: c8 82 02                 t0 = t0 + a1
 46744: 7b 1a 38                 u64 [sp + 0x38] = a3
 46747: 82 78                    a1 = u64 [a0]
 46749: 7b 1c 20                 u64 [sp + 0x20] = a5
 46752: 52 08 23                 jump @2956 if a1 != 0
      :                          @2953
 46755: 28 41                    jump @2961
      :                          @2954
 46757: 81 76 34                 s1 = i32 [a0 + 0x34]
 46760: 95 c2 01                 t0 = a5 + 0x1
 46763: 49 11 28 2d              u64 [sp + 40] = 0x2d
 46767: 84 68 04                 a1 = s1 & 0x4
 46770: 52 08 c4                 jump @2949 if a1 != 0
      :                          @2955
 46773: 49 11 30                 u64 [sp + 48] = 0
 46776: 7b 1a 38                 u64 [sp + 0x38] = a3
 46779: 82 78                    a1 = u64 [a0]
 46781: 7b 1c 20                 u64 [sp + 0x20] = a5
 46784: 51 08 24                 jump @2961 if a1 == 0
      :                          @2956
 46787: 82 75 08                 s0 = u64 [a0 + 0x8]
 46790: ae 52 1e                 jump @2961 if t0 >=u s0
      :                          @2957
 46793: 84 66 08                 s1 = s1 & 0x8
 46796: 52 06 51                 jump @2964 if s1 != 0
      :                          @2958
 46799: 7c 79 38                 a2 = u8 [a0 + 0x38]
 46802: c9 25 0a                 a3 = s0 - t0
 46805: 5a 19 01 a4 00           jump @2971 if a2 >s 1
      :                          @2959
 46810: 52 09 b1 00              jump @2973 if a2 != 0
      :                          @2960
 46814: 7b 1a 10                 u64 [sp + 0x10] = a3
 46817: 28 b0 00                 jump @2974
      :                          @2961
 46820: 82 75 20                 s0 = u64 [a0 + 0x20]
 46823: 82 76 28                 s1 = u64 [a0 + 0x28]
 46826: 64 57                    a0 = s0
 46828: 64 68                    a1 = s1
 46830: 82 19 28                 a2 = u64 [sp + 0x28]
 46833: 82 1a 30                 a3 = u64 [sp + 0x30]
 46836: 82 1b 38                 a4 = u64 [sp + 0x38]
 46839: 50 20 2c 03 76 01        ra = 812, jump @2994
      :                          @2962 [@dyn 406]
 46845: 33 08 01                 a1 = 0x1
 46848: 52 07 bf 00              jump @2979 if a0 != 0
      :                          @2963
 46852: 82 6c 18                 a5 = u64 [s1 + 0x18]
 46855: 64 57                    a0 = s0
 46857: 82 18 18                 a1 = u64 [sp + 0x18]
 46860: 82 19 20                 a2 = u64 [sp + 0x20]
 46863: 82 10 60                 ra = u64 [sp + 0x60]
 46866: 82 15 58                 s0 = u64 [sp + 0x58]
 46869: 82 16 50                 s1 = u64 [sp + 0x50]
 46872: 95 11 68                 sp = sp + 0x68
 46875: 32 0c                    jump [a5]
      :                          @2964
 46877: 7b 12 40                 u64 [sp + 0x40] = t0
 46880: 81 78 30                 a1 = i32 [a0 + 0x30]
 46883: 7b 18 08                 u64 [sp + 0x8] = a1
 46886: 7c 79 38                 a2 = u8 [a0 + 0x38]
 46889: 7b 19                    u64 [sp] = a2
 46891: 82 79 20                 a2 = u64 [a0 + 0x20]
 46894: 82 76 28                 s1 = u64 [a0 + 0x28]
 46897: 48 17 30 30              u32 [a0 + 48] = 0x30
 46901: 7b 17 10                 u64 [sp + 0x10] = a0
 46904: 46 17 38 01              u8 [a0 + 56] = 0x1
 46908: 7b 19 48                 u64 [sp + 0x48] = a2
 46911: 64 97                    a0 = a2
 46913: 64 68                    a1 = s1
 46915: 82 19 28                 a2 = u64 [sp + 0x28]
 46918: 82 1a 30                 a3 = u64 [sp + 0x30]
 46921: 82 1b 38                 a4 = u64 [sp + 0x38]
 46924: 50 20 2e 03 21 01        ra = 814, jump @2994
      :                          @2965 [@dyn 407]
 46930: 52 07 69                 jump @2978 if a0 != 0
      :                          @2966
 46933: 82 17 40                 a0 = u64 [sp + 0x40]
 46936: c9 75 05                 s0 = s0 - a0
 46939: 95 55 01                 s0 = s0 + 0x1
 46942: 01                       fallthrough
      :                          @2967
 46943: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 46946: 51 05 cb 00              jump @2989 if s0 == 0
      :                          @2968
 46950: 82 69 20                 a2 = u64 [s1 + 0x20]
 46953: 33 08 30                 a1 = 0x30
 46956: 82 17 48                 a0 = u64 [sp + 0x48]
 46959: b4 90 02 30 03           ra = 816, jump [a2]
      :                          @2969 [@dyn 408]
 46964: 51 07 eb                 jump @2967 if a0 == 0
      :                          @2970
 46967: 28 44                    jump @2978
      :                          @2971
 46969: 52 19 02 12              jump @2973 if a2 != 2
      :                          @2972
 46973: 98 a9 01                 a2 = a3 >> 0x1
 46976: 95 a8 01                 a1 = a3 + 0x1
 46979: 98 88 01                 a1 = a1 >> 0x1
 46982: 7b 18 10                 u64 [sp + 0x10] = a1
 46985: 28 08                    jump @2974
      :                          @2973
 46987: 64 a9                    a2 = a3
 46989: 49 11 10                 u64 [sp + 16] = 0
 46992: 01                       fallthrough
      :                          @2974
 46993: 82 78 20                 a1 = u64 [a0 + 0x20]
 46996: 7b 18 48                 u64 [sp + 0x48] = a1
 46999: 82 76 28                 s1 = u64 [a0 + 0x28]
 47002: 81 77 30                 a0 = i32 [a0 + 0x30]
 47005: 7b 17 40                 u64 [sp + 0x40] = a0
 47008: 95 95 01                 s0 = a2 + 0x1
 47011: 01                       fallthrough
      :                          @2975
 47012: 95 55 ff                 s0 = s0 + 0xffffffffffffffff
 47015: 51 05 28                 jump @2980 if s0 == 0
      :                          @2976
 47018: 82 69 20                 a2 = u64 [s1 + 0x20]
 47021: 82 17 48                 a0 = u64 [sp + 0x48]
 47024: 82 18 40                 a1 = u64 [sp + 0x40]
 47027: b4 90 02 32 03           ra = 818, jump [a2]
      :                          @2977 [@dyn 409]
 47032: 51 07 ec                 jump @2975 if a0 == 0
      :                          @2978
 47035: 33 08 01                 a1 = 0x1
 47038: 01                       fallthrough
      :                          @2979
 47039: 64 87                    a0 = a1
 47041: 82 10 60                 ra = u64 [sp + 0x60]
 47044: 82 15 58                 s0 = u64 [sp + 0x58]
 47047: 82 16 50                 s1 = u64 [sp + 0x50]
 47050: 95 11 68                 sp = sp + 0x68
 47053: 32 00                    ret
      :                          @2980
 47055: 82 15 48                 s0 = u64 [sp + 0x48]
 47058: 64 57                    a0 = s0
 47060: 64 68                    a1 = s1
 47062: 82 19 28                 a2 = u64 [sp + 0x28]
 47065: 82 1a 30                 a3 = u64 [sp + 0x30]
 47068: 82 1b 38                 a4 = u64 [sp + 0x38]
 47071: 50 20 34 03 8e 00        ra = 820, jump @2994
      :                          @2981 [@dyn 410]
 47077: 33 08 01                 a1 = 0x1
 47080: 52 07 d7                 jump @2979 if a0 != 0
      :                          @2982
 47083: 82 6a 18                 a3 = u64 [s1 + 0x18]
 47086: 64 57                    a0 = s0
 47088: 82 18 18                 a1 = u64 [sp + 0x18]
 47091: 82 19 20                 a2 = u64 [sp + 0x20]
 47094: b4 a0 02 36 03           ra = 822, jump [a3]
      :                          @2983 [@dyn 411]
 47099: 33 08 01                 a1 = 0x1
 47102: 52 07 c1                 jump @2979 if a0 != 0
      :                          @2984
 47105: 82 17 10                 a0 = u64 [sp + 0x10]
 47108: 9a 77                    a0 = -a0
 47110: 7b 17 38                 u64 [sp + 0x38] = a0
 47113: 33 05 ff                 s0 = 0xffffffffffffffff
 47116: 01                       fallthrough
      :                          @2985
 47117: 82 17 38                 a0 = u64 [sp + 0x38]
 47120: c8 57 07                 a0 = a0 + s0
 47123: 51 17 ff 45              jump @2992 if a0 == 4294967295
      :                          @2986
 47127: 82 69 20                 a2 = u64 [s1 + 0x20]
 47130: 82 17 48                 a0 = u64 [sp + 0x48]
 47133: 82 18 40                 a1 = u64 [sp + 0x40]
 47136: b4 90 02 38 03           ra = 824, jump [a2]
      :                          @2987 [@dyn 412]
 47141: 95 55 01                 s0 = s0 + 0x1
 47144: 51 07 e5                 jump @2985 if a0 == 0
      :                          @2988
 47147: 28 39                    jump @2993
      :                          @2989
 47149: 82 6a 18                 a3 = u64 [s1 + 0x18]
 47152: 82 17 48                 a0 = u64 [sp + 0x48]
 47155: 82 18 18                 a1 = u64 [sp + 0x18]
 47158: 82 19 20                 a2 = u64 [sp + 0x20]
 47161: b4 a0 02 3a 03           ra = 826, jump [a3]
      :                          @2990 [@dyn 413]
 47166: 33 08 01                 a1 = 0x1
 47169: 52 07 7e ff              jump @2979 if a0 != 0
      :                          @2991
 47173: 33 08                    a1 = 0
 47175: 82 17 10                 a0 = u64 [sp + 0x10]
 47178: 82 19 08                 a2 = u64 [sp + 0x8]
 47181: 7a 79 30                 u32 [a0 + 0x30] = a2
 47184: 82 19                    a2 = u64 [sp]
 47186: 78 79 38                 u8 [a0 + 0x38] = a2
 47189: 28 6a ff                 jump @2979
      :                          @2992
 47192: 82 15 10                 s0 = u64 [sp + 0x10]
 47195: 82 17 10                 a0 = u64 [sp + 0x10]
 47198: d8 75 08                 a1 = s0 <u a0
 47201: 28 5e ff                 jump @2979
      :                          @2993
 47204: 82 17 10                 a0 = u64 [sp + 0x10]
 47207: d8 75 08                 a1 = s0 <u a0
 47210: 28 55 ff                 jump @2979
      :                          @2994
 47213: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 47216: 7b 10 20                 u64 [sp + 0x20] = ra
 47219: 7b 15 18                 u64 [sp + 0x18] = s0
 47222: 7b 16 10                 u64 [sp + 0x10] = s1
 47225: 83 9c                    i32 a5 = a2 + 0
 47227: 33 02 00 00 11           t0 = 0x110000
 47232: 64 a6                    s1 = a3
 47234: 64 85                    s0 = a1
 47236: 64 7a                    a3 = a0
 47238: aa 2c 21                 jump @2997 if a5 == t0
      :                          @2995
 47241: 82 5c 20                 a5 = u64 [s0 + 0x20]
 47244: 64 a7                    a0 = a3
 47246: 64 98                    a1 = a2
 47248: 7b 1b 08                 u64 [sp + 0x8] = a4
 47251: 7b 1a                    u64 [sp] = a3
 47253: b4 c0 02 3c 03           ra = 828, jump [a5]
      :                          @2996 [@dyn 414]
 47258: 82 1a                    a3 = u64 [sp]
 47260: 82 1b 08                 a4 = u64 [sp + 0x8]
 47263: 64 78                    a1 = a0
 47265: 33 07 01                 a0 = 0x1
 47268: 52 08 20                 jump @3000 if a1 != 0
      :                          @2997
 47271: 51 06 1a                 jump @2999 if s1 == 0
      :                          @2998
 47274: 82 5c 18                 a5 = u64 [s0 + 0x18]
 47277: 64 a7                    a0 = a3
 47279: 64 68                    a1 = s1
 47281: 64 b9                    a2 = a4
 47283: 82 10 20                 ra = u64 [sp + 0x20]
 47286: 82 15 18                 s0 = u64 [sp + 0x18]
 47289: 82 16 10                 s1 = u64 [sp + 0x10]
 47292: 95 11 28                 sp = sp + 0x28
 47295: 32 0c                    jump [a5]
      :                          @2999
 47297: 33 07                    a0 = 0
 47299: 01                       fallthrough
      :                          @3000
 47300: 82 10 20                 ra = u64 [sp + 0x20]
 47303: 82 15 18                 s0 = u64 [sp + 0x18]
 47306: 82 16 10                 s1 = u64 [sp + 0x10]
 47309: 95 11 28                 sp = sp + 0x28
 47312: 32 00                    ret
      :                          @3001
 47314: 95 11 b8                 sp = sp + 0xffffffffffffffb8
 47317: 7b 10 40                 u64 [sp + 0x40] = ra
 47320: 7b 15 38                 u64 [sp + 0x38] = s0
 47323: 7b 16 30                 u64 [sp + 0x30] = s1
 47326: 82 74                    t2 = u64 [a0]
 47328: 82 7a 10                 a3 = u64 [a0 + 0x10]
 47331: d4 a4 0b                 a4 = t2 | a3
 47334: 64 93                    t1 = a2
 47336: 64 85                    s0 = a1
 47338: 51 0b aa 03              jump @3073 if a4 == 0
      :                          @3002
 47342: 7b 17 08                 u64 [sp + 0x8] = a0
 47345: 51 0a f4 00              jump @3021 if a3 == 0
      :                          @3003
 47349: 82 7c 18                 a5 = u64 [a0 + 0x18]
 47352: 33 0a                    a3 = 0
 47354: 7b 13 18                 u64 [sp + 0x18] = t1
 47357: c8 53 03                 t1 = t1 + s0
 47360: 95 cc 01                 a5 = a5 + 0x1
 47363: 33 00 00 00 11           ra = 0x110000
 47368: 33 07 df 00              a0 = 0xdf
 47372: 7b 15 10                 u64 [sp + 0x10] = s0
 47375: 64 59                    a2 = s0
 47377: 28 12                    jump @3006
      :                          @3004
 47379: 95 98 01                 a1 = a2 + 0x1
 47382: 01                       fallthrough
      :                          @3005
 47383: c9 9a 0a                 a3 = a3 - a2
 47386: c8 8a 0a                 a3 = a3 + a1
 47389: 64 89                    a2 = a1
 47391: aa 05 bc 00              jump @3020 if s0 == ra
      :                          @3006
 47395: 95 cc ff                 a5 = a5 + 0xffffffffffffffff
 47398: 51 0c 68                 jump @3015 if a5 == 0
      :                          @3007
 47401: aa 39 b2 00              jump @3020 if a2 == t1
      :                          @3008
 47405: 7d 98                    a1 = i8 [a2]
 47407: 84 85 ff 00              s0 = a1 & 0xff
 47411: 59 08 e0                 jump @3004 if a1 >=s 0
      :                          @3009
 47414: 7c 98 01                 a1 = u8 [a2 + 0x1]
 47417: 84 56 1f                 s1 = s0 & 0x1f
 47420: 84 8b 3f                 a4 = a1 & 0x3f
 47423: ae 57 35                 jump @3013 if a0 >=u s0
      :                          @3010
 47426: 7c 98 02                 a1 = u8 [a2 + 0x2]
 47429: 97 bb 06                 a4 = a4 << 0x6
 47432: 84 88 3f                 a1 = a1 & 0x3f
 47435: d4 8b 02                 t0 = a4 | a1
 47438: 53 25 f0 00 31           jump @3014 if s0 <u 240
      :                          @3011
 47443: 7c 98 03                 a1 = u8 [a2 + 0x3]
 47446: 97 66 3d                 s1 = s1 << 0x3d
 47449: 98 66 2b                 s1 = s1 >> 0x2b
 47452: 97 22 06                 t0 = t0 << 0x6
 47455: 84 88 3f                 a1 = a1 & 0x3f
 47458: d4 82 05                 s0 = t0 | a1
 47461: d4 65 05                 s0 = s0 | s1
 47464: aa 05 73                 jump @3020 if s0 == ra
      :                          @3012
 47467: 95 98 04                 a1 = a2 + 0x4
 47470: 33 07 df 00              a0 = 0xdf
 47474: 28 a5                    jump @3005
      :                          @3013
 47476: 95 98 02                 a1 = a2 + 0x2
 47479: 97 65 06                 s0 = s1 << 0x6
 47482: d4 b5 05                 s0 = s0 | a4
 47485: 28 9a                    jump @3005
      :                          @3014
 47487: 95 98 03                 a1 = a2 + 0x3
 47490: 97 66 0c                 s1 = s1 << 0xc
 47493: d4 62 05                 s0 = t0 | s1
 47496: 33 07 df 00              a0 = 0xdf
 47500: 28 8b                    jump @3005
      :                          @3015
 47502: aa 39 4d                 jump @3020 if a2 == t1
      :                          @3016
 47505: 7d 98                    a1 = i8 [a2]
 47507: 59 08 b6 02              jump @3063 if a1 >=s 0
      :                          @3017
 47511: 84 88 ff 00              a1 = a1 & 0xff
 47515: 33 0b e0 00              a4 = 0xe0
 47519: ac b8 aa 02              jump @3063 if a1 <u a4
      :                          @3018
 47523: 33 0b f0 00              a4 = 0xf0
 47527: ac b8 a2 02              jump @3063 if a1 <u a4
      :                          @3019
 47531: 7c 9b 01                 a4 = u8 [a2 + 0x1]
 47534: 7c 9c 02                 a5 = u8 [a2 + 0x2]
 47537: 84 bb 3f                 a4 = a4 & 0x3f
 47540: 84 cc 3f                 a5 = a5 & 0x3f
 47543: 7c 99 03                 a2 = u8 [a2 + 0x3]
 47546: 97 88 3d                 a1 = a1 << 0x3d
 47549: 98 88 2b                 a1 = a1 >> 0x2b
 47552: 97 bb 0c                 a4 = a4 << 0xc
 47555: 97 cc 06                 a5 = a5 << 0x6
 47558: d4 cb 0b                 a4 = a4 | a5
 47561: 84 99 3f                 a2 = a2 & 0x3f
 47564: d4 b9 09                 a2 = a2 | a4
 47567: d4 98 08                 a1 = a1 | a2
 47570: 33 09 00 00 11           a2 = 0x110000
 47575: ab 98 72 02              jump @3063 if a1 != a2
      :                          @3020
 47579: 82 13 18                 t1 = u64 [sp + 0x18]
 47582: 82 15 10                 s0 = u64 [sp + 0x10]
 47585: 82 17 08                 a0 = u64 [sp + 0x8]
 47588: 01                       fallthrough
      :                          @3021
 47589: 51 04 af 02              jump @3073 if t2 == 0
      :                          @3022
 47593: 82 7c 08                 a5 = u64 [a0 + 0x8]
 47596: 7b 13 18                 u64 [sp + 0x18] = t1
 47599: 7b 15 10                 u64 [sp + 0x10] = s0
 47602: 55 13 20 29              jump @3028 if t1 >=u 32
      :                          @3023
 47606: 33 09                    a2 = 0
 47608: 51 03 1c                 jump @3026 if t1 == 0
      :                          @3024
 47611: 64 58                    a1 = s0
 47613: 64 3a                    a3 = t1
 47615: 01                       fallthrough
      :                          @3025
 47616: 7d 8b                    a4 = i8 [a1]
 47618: 89 bb c0                 a4 = a4 <s 0xffffffffffffffc0
 47621: 85 bb 01                 a4 = a4 ^ 0x1
 47624: c8 b9 09                 a2 = a2 + a4
 47627: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 47630: 95 88 01                 a1 = a1 + 0x1
 47633: 52 0a ef                 jump @3025 if a3 != 0
      :                          @3026
 47636: ac c9 95 01              jump @3045 if a2 <u a5
      :                          @3027
 47640: 28 7c 02                 jump @3073
      :                          @3028
 47643: 7b 1c                    u64 [sp] = a5
 47645: 95 58 07                 a1 = s0 + 0x7
 47648: 64 5c                    a5 = s0
 47650: 84 85 f8                 s0 = a1 & 0xfffffffffffffff8
 47653: c9 5c 0b                 a4 = a5 - s0
 47656: c8 b3 02                 t0 = t1 + a4
 47659: 84 2a 07                 a3 = t0 & 0x7
 47662: 33 08                    a1 = 0
 47664: aa c5 17                 jump @3030 if s0 == a5
      :                          @3029
 47667: 7d c6                    s1 = i8 [a5]
 47669: 89 66 c0                 s1 = s1 <s 0xffffffffffffffc0
 47672: 85 69 01                 a2 = s1 ^ 0x1
 47675: c8 98 08                 a1 = a1 + a2
 47678: 95 bb 01                 a4 = a4 + 0x1
 47681: 95 cc 01                 a5 = a5 + 0x1
 47684: 52 0b ef                 jump @3029 if a4 != 0
      :                          @3030
 47687: 33 0b                    a4 = 0
 47689: 51 0a 1e                 jump @3033 if a3 == 0
      :                          @3031
 47692: 84 2c f8                 a5 = t0 & 0xfffffffffffffff8
 47695: c8 5c 0c                 a5 = a5 + s0
 47698: 01                       fallthrough
      :                          @3032
 47699: 7d c7                    a0 = i8 [a5]
 47701: 89 77 c0                 a0 = a0 <s 0xffffffffffffffc0
 47704: 85 77 01                 a0 = a0 ^ 0x1
 47707: c8 7b 0b                 a4 = a4 + a0
 47710: 95 aa ff                 a3 = a3 + 0xffffffffffffffff
 47713: 95 cc 01                 a5 = a5 + 0x1
 47716: 52 0a ef                 jump @3032 if a3 != 0
      :                          @3033
 47719: 98 20 03                 ra = t0 >> 0x3
 47722: 14 0a 01 01 01 01 01 01 01 01 a3 = 0x101010101010101
 47732: 14 07 ff 00 ff 00 ff 00 ff 00 a0 = 0xff00ff00ff00ff
 47742: 7b 17 28                 u64 [sp + 0x28] = a0
 47745: 14 04 00 00 00 00 01 00 01 00 t2 = 0x1000100000000
 47755: 14 07 01 00 01 00 01 00 01 00 a0 = 0x1000100010001
 47765: 7b 17 20                 u64 [sp + 0x20] = a0
 47768: c8 8b 09                 a2 = a4 + a1
 47771: 28 2d                    jump @3035
      :                          @3034
 47773: 97 45 03                 s0 = t2 << 0x3
 47776: c8 35 05                 s0 = s0 + t1
 47779: c9 40 00                 ra = ra - t2
 47782: 84 46 03                 s1 = t2 & 0x3
 47785: 82 1b 28                 a4 = u64 [sp + 0x28]
 47788: d2 b2 07                 a0 = t0 & a4
 47791: 98 28 08                 a1 = t0 >> 0x8
 47794: d2 b8 08                 a1 = a1 & a4
 47797: c8 87 07                 a0 = a0 + a1
 47800: 82 18 20                 a1 = u64 [sp + 0x20]
 47803: ca 87 07                 a0 = a0 * a1
 47806: 98 77 30                 a0 = a0 >> 0x30
 47809: c8 79 09                 a2 = a2 + a0
 47812: 52 06 8e 00              jump @3042 if s1 != 0
      :                          @3035
 47816: 51 00 79                 jump @3040 if ra == 0
      :                          @3036
 47819: 64 53                    t1 = s0
 47821: 33 07 c0 00              a0 = 0xc0
 47825: e6 70 04                 t2 = minu(ra, a0)
 47828: 33 02                    t0 = 0
 47830: 98 48 02                 a1 = t2 >> 0x2
 47833: 51 08 c4                 jump @3034 if a1 == 0
      :                          @3037
 47836: 97 88 05                 a1 = a1 << 0x5
 47839: c8 38 08                 a1 = a1 + t1
 47842: 64 36                    s1 = t1
 47844: 01                       fallthrough
      :                          @3038
 47845: 82 67                    a0 = u64 [s1]
 47847: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 47850: 98 cc 07                 a5 = a5 >> 0x7
 47853: 98 77 06                 a0 = a0 >> 0x6
 47856: 82 6b 08                 a4 = u64 [s1 + 0x8]
 47859: d4 c7 07                 a0 = a0 | a5
 47862: d2 a7 07                 a0 = a0 & a3
 47865: c8 27 07                 a0 = a0 + t0
 47868: 85 bc ff                 a5 = a4 ^ 0xffffffffffffffff
 47871: 98 cc 07                 a5 = a5 >> 0x7
 47874: 82 65 10                 s0 = u64 [s1 + 0x10]
 47877: 98 bb 06                 a4 = a4 >> 0x6
 47880: d4 cb 0b                 a4 = a4 | a5
 47883: d2 ab 0b                 a4 = a4 & a3
 47886: 85 5c ff                 a5 = s0 ^ 0xffffffffffffffff
 47889: 98 cc 07                 a5 = a5 >> 0x7
 47892: 98 55 06                 s0 = s0 >> 0x6
 47895: d4 5c 0c                 a5 = a5 | s0
 47898: 82 65 18                 s0 = u64 [s1 + 0x18]
 47901: d2 ac 0c                 a5 = a5 & a3
 47904: c8 cb 0b                 a4 = a4 + a5
 47907: c8 b7 07                 a0 = a0 + a4
 47910: 85 5b ff                 a4 = s0 ^ 0xffffffffffffffff
 47913: 98 bb 07                 a4 = a4 >> 0x7
 47916: 98 55 06                 s0 = s0 >> 0x6
 47919: d4 5b 0b                 a4 = a4 | s0
 47922: d2 ab 0b                 a4 = a4 & a3
 47925: 95 66 20                 s1 = s1 + 0x20
 47928: c8 7b 02                 t0 = a4 + a0
 47931: ab 86 aa                 jump @3038 if s1 != a1
      :                          @3039
 47934: 28 5f ff                 jump @3034
      :                          @3040
 47937: 82 13 18                 t1 = u64 [sp + 0x18]
 47940: 82 15 10                 s0 = u64 [sp + 0x10]
 47943: 82 17 08                 a0 = u64 [sp + 0x8]
 47946: 82 1c                    a5 = u64 [sp]
 47948: ac c9 5d                 jump @3045 if a2 <u a5
      :                          @3041
 47951: 28 45 01                 jump @3073
      :                          @3042
 47954: 33 08                    a1 = 0
 47956: 84 47 fc 00              a0 = t2 & 0xfc
 47960: 97 77 03                 a0 = a0 << 0x3
 47963: c8 73 0b                 a4 = t1 + a0
 47966: 97 66 03                 s1 = s1 << 0x3
 47969: 82 13 18                 t1 = u64 [sp + 0x18]
 47972: 82 15 10                 s0 = u64 [sp + 0x10]
 47975: 01                       fallthrough
      :                          @3043
 47976: 82 b7                    a0 = u64 [a4]
 47978: 95 bb 08                 a4 = a4 + 0x8
 47981: 85 7c ff                 a5 = a0 ^ 0xffffffffffffffff
 47984: 98 cc 07                 a5 = a5 >> 0x7
 47987: 98 77 06                 a0 = a0 >> 0x6
 47990: d4 c7 07                 a0 = a0 | a5
 47993: d2 a7 07                 a0 = a0 & a3
 47996: 95 66 f8                 s1 = s1 + 0xfffffffffffffff8
 47999: c8 78 08                 a1 = a1 + a0
 48002: 52 06 e6                 jump @3043 if s1 != 0
      :                          @3044
 48005: 82 1a 28                 a3 = u64 [sp + 0x28]
 48008: d2 a8 07                 a0 = a1 & a3
 48011: 98 88 08                 a1 = a1 >> 0x8
 48014: d2 a8 08                 a1 = a1 & a3
 48017: c8 87 07                 a0 = a0 + a1
 48020: 82 18 20                 a1 = u64 [sp + 0x20]
 48023: ca 87 07                 a0 = a0 * a1
 48026: 98 77 30                 a0 = a0 >> 0x30
 48029: c8 79 09                 a2 = a2 + a0
 48032: 82 17 08                 a0 = u64 [sp + 0x8]
 48035: 82 1c                    a5 = u64 [sp]
 48037: ae c9 ef 00              jump @3073 if a2 >=u a5
      :                          @3045
 48041: 7c 7a 38                 a3 = u8 [a0 + 0x38]
 48044: 33 08                    a1 = 0
 48046: 33 0b 01                 a4 = 0x1
 48049: c9 9c 0c                 a5 = a5 - a2
 48052: ad ab 0c                 jump @3048 if a4 <s a3
      :                          @3046
 48055: 51 0a 1a                 jump @3050 if a3 == 0
      :                          @3047
 48058: 64 c8                    a1 = a5
 48060: 49 01                    u64 [sp + 0] = 0
 48062: 28 16                    jump @3051
      :                          @3048
 48064: 52 1a 02 11              jump @3050 if a3 != 2
      :                          @3049
 48068: 98 c8 01                 a1 = a5 >> 0x1
 48071: 95 c9 01                 a2 = a5 + 0x1
 48074: 98 99 01                 a2 = a2 >> 0x1
 48077: 7b 19                    u64 [sp] = a2
 48079: 28 05                    jump @3051
      :                          @3050
 48081: 7b 1c                    u64 [sp] = a5
 48083: 01                       fallthrough
      :                          @3051
 48084: 82 79 20                 a2 = u64 [a0 + 0x20]
 48087: 7b 19 28                 u64 [sp + 0x28] = a2
 48090: 82 75 28                 s0 = u64 [a0 + 0x28]
 48093: 81 77 30                 a0 = i32 [a0 + 0x30]
 48096: 7b 17 20                 u64 [sp + 0x20] = a0
 48099: 95 86 01                 s1 = a1 + 0x1
 48102: 01                       fallthrough
      :                          @3052
 48103: 95 66 ff                 s1 = s1 + 0xffffffffffffffff
 48106: 51 06 19                 jump @3056 if s1 == 0
      :                          @3053
 48109: 82 59 20                 a2 = u64 [s0 + 0x20]
 48112: 82 17 28                 a0 = u64 [sp + 0x28]
 48115: 82 18 20                 a1 = u64 [sp + 0x20]
 48118: b4 90 02 3e 03           ra = 830, jump [a2]
      :                          @3054 [@dyn 415]
 48123: 51 07 ec                 jump @3052 if a0 == 0
      :                          @3055
 48126: 33 07 01                 a0 = 0x1
 48129: 28 72                    jump @3069
      :                          @3056
 48131: 82 5a 18                 a3 = u64 [s0 + 0x18]
 48134: 82 17 28                 a0 = u64 [sp + 0x28]
 48137: 82 18 10                 a1 = u64 [sp + 0x10]
 48140: 82 19 18                 a2 = u64 [sp + 0x18]
 48143: b4 a0 02 40 03           ra = 832, jump [a3]
      :                          @3057 [@dyn 416]
 48148: 64 78                    a1 = a0
 48150: 33 07 01                 a0 = 0x1
 48153: 52 08 5a                 jump @3069 if a1 != 0
      :                          @3058
 48156: 82 17                    a0 = u64 [sp]
 48158: 9a 77                    a0 = -a0
 48160: 7b 17 18                 u64 [sp + 0x18] = a0
 48163: 33 06 ff                 s1 = 0xffffffffffffffff
 48166: 01                       fallthrough
      :                          @3059
 48167: 82 17 18                 a0 = u64 [sp + 0x18]
 48170: c8 67 07                 a0 = a0 + s1
 48173: 33 08 ff                 a1 = 0xffffffffffffffff
 48176: aa 87 34                 jump @3067 if a0 == a1
      :                          @3060
 48179: 82 59 20                 a2 = u64 [s0 + 0x20]
 48182: 82 17 28                 a0 = u64 [sp + 0x28]
 48185: 82 18 20                 a1 = u64 [sp + 0x20]
 48188: b4 90 02 42 03           ra = 834, jump [a2]
      :                          @3061 [@dyn 417]
 48193: 95 66 01                 s1 = s1 + 0x1
 48196: 51 07 e3                 jump @3059 if a0 == 0
      :                          @3062
 48199: 28 26                    jump @3068
      :                          @3063
 48201: 82 13 18                 t1 = u64 [sp + 0x18]
 48204: 82 15 10                 s0 = u64 [sp + 0x10]
 48207: 51 0a 35                 jump @3071 if a3 == 0
      :                          @3064
 48210: ae 3a 2f                 jump @3070 if a3 >=u t1
      :                          @3065
 48213: c8 a5 08                 a1 = s0 + a3
 48216: 7d 88                    a1 = i8 [a1]
 48218: 33 09 c0                 a2 = 0xffffffffffffffc0
 48221: af 98 27                 jump @3071 if a1 >=s a2
      :                          @3066
 48224: 33 08                    a1 = 0
 48226: 28 25                    jump @3072
      :                          @3067
 48228: 82 16                    s1 = u64 [sp]
 48230: 82 17                    a0 = u64 [sp]
 48232: d8 76 07                 a0 = s1 <u a0
 48235: 28 08                    jump @3069
      :                          @3068
 48237: 82 17                    a0 = u64 [sp]
 48239: d8 76 07                 a0 = s1 <u a0
 48242: 01                       fallthrough
      :                          @3069
 48243: 82 10 40                 ra = u64 [sp + 0x40]
 48246: 82 15 38                 s0 = u64 [sp + 0x38]
 48249: 82 16 30                 s1 = u64 [sp + 0x30]
 48252: 95 11 48                 sp = sp + 0x48
 48255: 32 00                    ret
      :                          @3070
 48257: ab 3a df                 jump @3066 if a3 != t1
      :                          @3071
 48260: 64 58                    a1 = s0
 48262: 01                       fallthrough
      :                          @3072
 48263: 82 17 08                 a0 = u64 [sp + 0x8]
 48266: db 8a 03                 t1 = a3 if a1 != 0
 48269: db 88 05                 s0 = a1 if a1 != 0
 48272: 52 04 59 fd              jump @3022 if t2 != 0
      :                          @3073
 48276: 82 78 28                 a1 = u64 [a0 + 0x28]
 48279: 82 77 20                 a0 = u64 [a0 + 0x20]
 48282: 82 8c 18                 a5 = u64 [a1 + 0x18]
 48285: 64 58                    a1 = s0
 48287: 64 39                    a2 = t1
 48289: 82 10 40                 ra = u64 [sp + 0x40]
 48292: 82 15 38                 s0 = u64 [sp + 0x38]
 48295: 82 16 30                 s1 = u64 [sp + 0x30]
 48298: 95 11 48                 sp = sp + 0x48
 48301: 32 0c                    jump [a5]
      :                          @3074
 48303: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 48307: 7b 10 80 00              u64 [sp + 0x80] = ra
 48311: 7b 15 78                 u64 [sp + 0x78] = s0
 48314: 7b 16 70                 u64 [sp + 0x70] = s1
 48317: 49 11 60 20              u64 [sp + 96] = 0x20
 48321: 33 0a 03                 a3 = 0x3
 48324: 78 1a 68                 u8 [sp + 0x68] = a3
 48327: 82 96 20                 s1 = u64 [a2 + 0x20]
 48330: 49 11 30                 u64 [sp + 48] = 0
 48333: 49 11 40                 u64 [sp + 64] = 0
 48336: 7b 17 50                 u64 [sp + 0x50] = a0
 48339: 7b 18 58                 u64 [sp + 0x58] = a1
 48342: 51 06 0a 01              jump @3096 if s1 == 0
      :                          @3075
 48346: 82 97 28                 a0 = u64 [a2 + 0x28]
 48349: 51 07 79 01              jump @3106 if a0 == 0
      :                          @3076
 48353: 49 11 28                 u64 [sp + 40] = 0
 48356: 82 95                    s0 = u64 [a2]
 48358: 7b 19 08                 u64 [sp + 0x8] = a2
 48361: 82 98 10                 a1 = u64 [a2 + 0x10]
 48364: 7b 18 18                 u64 [sp + 0x18] = a1
 48367: 95 78 ff                 a1 = a0 + 0xffffffffffffffff
 48370: 97 88 03                 a1 = a1 << 0x3
 48373: 98 88 03                 a1 = a1 >> 0x3
 48376: 95 88 01                 a1 = a1 + 0x1
 48379: 7b 18                    u64 [sp] = a1
 48381: 95 55 08                 s0 = s0 + 0x8
 48384: 96 78 38                 a1 = a0 * 0x38
 48387: 95 66 18                 s1 = s1 + 0x18
 48390: 33 07 26 03              a0 = 0x326
 48394: 7b 17 10                 u64 [sp + 0x10] = a0
 48397: 01                       fallthrough
      :                          @3077
 48398: 7b 18 20                 u64 [sp + 0x20] = a1
 48401: 82 59                    a2 = u64 [s0]
 48403: 51 09 18                 jump @3080 if a2 == 0
      :                          @3078
 48406: 82 1a 58                 a3 = u64 [sp + 0x58]
 48409: 82 17 50                 a0 = u64 [sp + 0x50]
 48412: 82 58 f8                 a1 = u64 [s0 + 0xfffffffffffffff8]
 48415: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48418: b4 a0 02 44 03           ra = 836, jump [a3]
      :                          @3079 [@dyn 418]
 48423: 52 07 55 01              jump @3109 if a0 != 0
      :                          @3080
 48427: 81 67 10                 a0 = i32 [s1 + 0x10]
 48430: 7a 17 60                 u32 [sp + 0x60] = a0
 48433: 7c 67 18                 a0 = u8 [s1 + 0x18]
 48436: 78 17 68                 u8 [sp + 0x68] = a0
 48439: 81 67 14                 a0 = i32 [s1 + 0x14]
 48442: 7a 17 64                 u32 [sp + 0x64] = a0
 48445: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 48448: 82 67                    a0 = u64 [s1]
 48450: 51 08 26                 jump @3085 if a1 == 0
      :                          @3081
 48453: 52 18 01 16              jump @3083 if a1 != 1
      :                          @3082
 48457: 97 77 04                 a0 = a0 << 0x4
 48460: 82 18 18                 a1 = u64 [sp + 0x18]
 48463: c8 87 07                 a0 = a0 + a1
 48466: 82 78 08                 a1 = u64 [a0 + 0x8]
 48469: 82 19 10                 a2 = u64 [sp + 0x10]
 48472: aa 98 07                 jump @3084 if a1 == a2
      :                          @3083
 48475: 33 08                    a1 = 0
 48477: 28 0f                    jump @3086
      :                          @3084
 48479: 82 77                    a0 = u64 [a0]
 48481: 82 77                    a0 = u64 [a0]
 48483: 33 08 01                 a1 = 0x1
 48486: 28 06                    jump @3086
      :                          @3085
 48488: 33 08 01                 a1 = 0x1
 48491: 01                       fallthrough
      :                          @3086
 48492: 7b 18 30                 u64 [sp + 0x30] = a1
 48495: 7b 17 38                 u64 [sp + 0x38] = a0
 48498: 82 68 e8                 a1 = u64 [s1 + 0xffffffffffffffe8]
 48501: 82 67 f0                 a0 = u64 [s1 + 0xfffffffffffffff0]
 48504: 51 08 26                 jump @3091 if a1 == 0
      :                          @3087
 48507: 52 18 01 16              jump @3089 if a1 != 1
      :                          @3088
 48511: 97 77 04                 a0 = a0 << 0x4
 48514: 82 18 18                 a1 = u64 [sp + 0x18]
 48517: c8 87 07                 a0 = a0 + a1
 48520: 82 78 08                 a1 = u64 [a0 + 0x8]
 48523: 82 19 10                 a2 = u64 [sp + 0x10]
 48526: aa 98 07                 jump @3090 if a1 == a2
      :                          @3089
 48529: 33 08                    a1 = 0
 48531: 28 0f                    jump @3092
      :                          @3090
 48533: 82 77                    a0 = u64 [a0]
 48535: 82 77                    a0 = u64 [a0]
 48537: 33 08 01                 a1 = 0x1
 48540: 28 06                    jump @3092
      :                          @3091
 48542: 33 08 01                 a1 = 0x1
 48545: 01                       fallthrough
      :                          @3092
 48546: 7b 18 40                 u64 [sp + 0x40] = a1
 48549: 7b 17 48                 u64 [sp + 0x48] = a0
 48552: 82 67 08                 a0 = u64 [s1 + 0x8]
 48555: 97 77 04                 a0 = a0 << 0x4
 48558: 82 18 18                 a1 = u64 [sp + 0x18]
 48561: c8 78 08                 a1 = a1 + a0
 48564: 82 87                    a0 = u64 [a1]
 48566: 82 89 08                 a2 = u64 [a1 + 0x8]
 48569: 95 18 30                 a1 = sp + 0x30
 48572: b4 90 02 46 03           ra = 838, jump [a2]
      :                          @3093 [@dyn 419]
 48577: 52 07 bb 00              jump @3109 if a0 != 0
      :                          @3094
 48581: 95 55 10                 s0 = s0 + 0x10
 48584: 82 18 20                 a1 = u64 [sp + 0x20]
 48587: 95 88 c8                 a1 = a1 + 0xffffffffffffffc8
 48590: 95 66 38                 s1 = s1 + 0x38
 48593: 82 17 28                 a0 = u64 [sp + 0x28]
 48596: 95 77 01                 a0 = a0 + 0x1
 48599: 7b 17 28                 u64 [sp + 0x28] = a0
 48602: 52 08 34 ff              jump @3077 if a1 != 0
      :                          @3095
 48606: 28 6b                    jump @3104
      :                          @3096
 48608: 82 97 18                 a0 = u64 [a2 + 0x18]
 48611: 51 07 73                 jump @3106 if a0 == 0
      :                          @3097
 48614: 82 95 10                 s0 = u64 [a2 + 0x10]
 48617: 33 0a                    a3 = 0
 48619: 97 78 04                 a1 = a0 << 0x4
 48622: c8 58 08                 a1 = a1 + s0
 48625: 7b 18 20                 u64 [sp + 0x20] = a1
 48628: 7b 19 08                 u64 [sp + 0x8] = a2
 48631: 82 96                    s1 = u64 [a2]
 48633: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 48636: 97 77 04                 a0 = a0 << 0x4
 48639: 98 77 04                 a0 = a0 >> 0x4
 48642: 95 77 01                 a0 = a0 + 0x1
 48645: 7b 17                    u64 [sp] = a0
 48647: 95 66 08                 s1 = s1 + 0x8
 48650: 01                       fallthrough
      :                          @3098
 48651: 7b 1a 28                 u64 [sp + 0x28] = a3
 48654: 82 69                    a2 = u64 [s1]
 48656: 51 09 17                 jump @3101 if a2 == 0
      :                          @3099
 48659: 82 1a 58                 a3 = u64 [sp + 0x58]
 48662: 82 17 50                 a0 = u64 [sp + 0x50]
 48665: 82 68 f8                 a1 = u64 [s1 + 0xfffffffffffffff8]
 48668: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48671: b4 a0 02 48 03           ra = 840, jump [a3]
      :                          @3100 [@dyn 420]
 48676: 52 07 58                 jump @3109 if a0 != 0
      :                          @3101
 48679: 82 57                    a0 = u64 [s0]
 48681: 82 59 08                 a2 = u64 [s0 + 0x8]
 48684: 95 18 30                 a1 = sp + 0x30
 48687: b4 90 02 4a 03           ra = 842, jump [a2]
      :                          @3102 [@dyn 421]
 48692: 52 07 48                 jump @3109 if a0 != 0
      :                          @3103
 48695: 95 66 10                 s1 = s1 + 0x10
 48698: 95 55 10                 s0 = s0 + 0x10
 48701: 82 1a 28                 a3 = u64 [sp + 0x28]
 48704: 95 aa 01                 a3 = a3 + 0x1
 48707: 82 17 20                 a0 = u64 [sp + 0x20]
 48710: ab 75 c5                 jump @3098 if s0 != a0
      :                          @3104
 48713: 82 19 08                 a2 = u64 [sp + 0x8]
 48716: 82 1a                    a3 = u64 [sp]
 48718: 82 97 08                 a0 = u64 [a2 + 0x8]
 48721: ac 7a 0d                 jump @3107 if a3 <u a0
      :                          @3105
 48724: 28 2d                    jump @3110
      :                          @3106
 48726: 33 0a                    a3 = 0
 48728: 82 97 08                 a0 = u64 [a2 + 0x8]
 48731: 54 07 26                 jump @3110 if a0 <=u 0
      :                          @3107
 48734: 82 97                    a0 = u64 [a2]
 48736: 97 a8 04                 a1 = a3 << 0x4
 48739: c8 87 09                 a2 = a0 + a1
 48742: 82 1a 58                 a3 = u64 [sp + 0x58]
 48745: 82 17 50                 a0 = u64 [sp + 0x50]
 48748: 82 98                    a1 = u64 [a2]
 48750: 82 99 08                 a2 = u64 [a2 + 0x8]
 48753: 82 aa 18                 a3 = u64 [a3 + 0x18]
 48756: b4 a0 02 4c 03           ra = 844, jump [a3]
      :                          @3108 [@dyn 422]
 48761: 51 07 08                 jump @3110 if a0 == 0
      :                          @3109
 48764: 33 07 01                 a0 = 0x1
 48767: 28 05                    jump @3111
      :                          @3110
 48769: 33 07                    a0 = 0
 48771: 01                       fallthrough
      :                          @3111
 48772: 82 10 80 00              ra = u64 [sp + 0x80]
 48776: 82 15 78                 s0 = u64 [sp + 0x78]
 48779: 82 16 70                 s1 = u64 [sp + 0x70]
 48782: 95 11 88 00              sp = sp + 0x88
 48786: 32 00                    ret
      :                          @3112 [@dyn 423]
 48788: 32 00                    ret
      :                          @3113 [@dyn 424]
 48790: 95 11 80                 sp = sp + 0xffffffffffffff80
 48793: 7b 10 78                 u64 [sp + 0x78] = ra
 48796: 7b 15 70                 u64 [sp + 0x70] = s0
 48799: 7b 16 68                 u64 [sp + 0x68] = s1
 48802: 64 92                    t0 = a2
 48804: 33 00                    ra = 0
 48806: 33 0b                    a4 = 0
 48808: 33 05                    s0 = 0
 48810: 14 03 ff fe fe fe fe fe fe fe t1 = 0xfefefefefefefeff
 48820: 33 0a 0a 0a 0a 0a        a3 = 0xa0a0a0a
 48826: 14 04 0a 0a 0a 0a 0a 0a 0a 0a t2 = 0xa0a0a0a0a0a0a0a
 48836: 82 79 10                 a2 = u64 [a0 + 0x10]
 48839: 7b 19 48                 u64 [sp + 0x48] = a2
 48842: 82 79                    a2 = u64 [a0]
 48844: 7b 19 38                 u64 [sp + 0x38] = a2
 48847: 82 77 08                 a0 = u64 [a0 + 0x8]
 48850: 7b 17 30                 u64 [sp + 0x30] = a0
 48853: 33 07 00 01 01           a0 = 0x10100
 48858: 7b 17 08                 u64 [sp + 0x8] = a0
 48861: 3a 07 d8 00 03           a0 = u64 [0x300d8]
 48866: 7b 17 60                 u64 [sp + 0x60] = a0
 48869: 7b 18 58                 u64 [sp + 0x58] = a1
 48872: 95 88 08                 a1 = a1 + 0x8
 48875: 7b 18                    u64 [sp] = a1
 48877: 33 0c 0a                 a5 = 0xa
 48880: 7b 12 20                 u64 [sp + 0x20] = t0
 48883: 7b 13 18                 u64 [sp + 0x18] = t1
 48886: 7b 14 10                 u64 [sp + 0x10] = t2
 48889: 28 3b                    jump @3117
      :                          @3114
 48891: 64 06                    s1 = ra
 48893: c8 89 07                 a0 = a2 + a1
 48896: 7c 77 ff                 a0 = u8 [a0 + 0xffffffffffffffff]
 48899: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 48902: 88 77 01                 a0 = a0 <u 0x1
 48905: 01                       fallthrough
      :                          @3115
 48906: 82 1a 48                 a3 = u64 [sp + 0x48]
 48909: 78 a7                    u8 [a3] = a0
 48911: 82 17 30                 a0 = u64 [sp + 0x30]
 48914: 82 7a 18                 a3 = u64 [a0 + 0x18]
 48917: 82 17 38                 a0 = u64 [sp + 0x38]
 48920: b4 a0 02 52 03           ra = 850, jump [a3]
      :                          @3116 [@dyn 425]
 48925: 64 5b                    a4 = s0
 48927: 82 12 20                 t0 = u64 [sp + 0x20]
 48930: 82 13 18                 t1 = u64 [sp + 0x18]
 48933: 82 14 10                 t2 = u64 [sp + 0x10]
 48936: 64 60                    ra = s1
 48938: 33 0c 0a                 a5 = 0xa
 48941: 82 15 40                 s0 = u64 [sp + 0x40]
 48944: 52 07 64 01              jump @3158 if a0 != 0
      :                          @3117
 48948: 84 57 ff 00              a0 = s0 & 0xff
 48952: 52 07 58 01              jump @3157 if a0 != 0
      :                          @3118
 48956: 7b 1b 50                 u64 [sp + 0x50] = a4
 48959: ae 02 0a                 jump @3121 if t0 >=u ra
      :                          @3119
 48962: 28 ef 00                 jump @3148
      :                          @3120
 48965: ac 02 ec 00              jump @3148 if t0 <u ra
      :                          @3121
 48969: c9 02 08                 a1 = t0 - ra
 48972: 82 16 58                 s1 = u64 [sp + 0x58]
 48975: c8 06 06                 s1 = s1 + ra
 48978: 55 18 10 1d              jump @3127 if a1 >=u 16
      :                          @3122
 48982: aa 02 d8 00              jump @3147 if t0 == ra
      :                          @3123
 48986: 33 0a                    a3 = 0
 48988: 01                       fallthrough
      :                          @3124
 48989: c8 a6 07                 a0 = s1 + a3
 48992: 7c 77                    a0 = u8 [a0]
 48994: aa c7 a5 00              jump @3142 if a0 == a5
      :                          @3125
 48998: 95 aa 01                 a3 = a3 + 0x1
 49001: ab a8 f4                 jump @3124 if a1 != a3
      :                          @3126
 49004: 28 c2 00                 jump @3147
      :                          @3127
 49007: 95 69 07                 a2 = s1 + 0x7
 49010: 84 9a f8                 a3 = a2 & 0xfffffffffffffff8
 49013: c9 6a 07                 a0 = a3 - s1
 49016: d3 6a 0a                 a3 = a3 ^ s1
 49019: 88 aa 01                 a3 = a3 <u 0x1
 49022: 88 7b 01                 a4 = a0 <u 0x1
 49025: d4 ba 0a                 a3 = a3 | a4
 49028: 51 0a 45                 jump @3133 if a3 == 0
      :                          @3128
 49031: 33 07                    a0 = 0
 49033: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 49036: 82 1b                    a4 = u64 [sp]
 49038: c8 0b 0b                 a4 = a4 + ra
 49041: 28 08                    jump @3130
      :                          @3129
 49043: 82 1b                    a4 = u64 [sp]
 49045: c8 0b 0b                 a4 = a4 + ra
 49048: 01                       fallthrough
      :                          @3130
 49049: c8 76 0c                 a5 = s1 + a0
 49052: 82 cc                    a5 = u64 [a5]
 49054: c8 7b 09                 a2 = a4 + a0
 49057: 82 99                    a2 = u64 [a2]
 49059: d3 4c 05                 s0 = a5 ^ t2
 49062: c8 35 05                 s0 = s0 + t1
 49065: e0 c5 0c                 a5 = s0 & ~a5
 49068: d3 49 05                 s0 = a2 ^ t2
 49071: c8 35 05                 s0 = s0 + t1
 49074: e0 95 09                 a2 = s0 & ~a2
 49077: d4 c9 09                 a2 = a2 | a5
 49080: 82 1c 60                 a5 = u64 [sp + 0x60]
 49083: d2 c9 09                 a2 = a2 & a5
 49086: 52 09 1f                 jump @3136 if a2 != 0
      :                          @3131
 49089: 95 77 10                 a0 = a0 + 0x10
 49092: ae 7a d5                 jump @3130 if a3 >=u a0
      :                          @3132
 49095: 28 16                    jump @3136
      :                          @3133
 49097: c8 a6 0b                 a4 = s1 + a3
 49100: 7c bb                    a4 = u8 [a4]
 49102: aa cb 51                 jump @3145 if a4 == a5
      :                          @3134
 49105: 95 aa 01                 a3 = a3 + 0x1
 49108: ab a7 f5                 jump @3133 if a0 != a3
      :                          @3135
 49111: 95 8a f0                 a3 = a1 + 0xfffffffffffffff0
 49114: ae 7a b9                 jump @3129 if a3 >=u a0
      :                          @3136
 49117: aa 87 9b 00              jump @3154 if a0 == a1
      :                          @3137
 49121: 33 0a                    a3 = 0
 49123: c8 76 06                 s1 = s1 + a0
 49126: c9 72 08                 a1 = t0 - a0
 49129: c9 08 08                 a1 = a1 - ra
 49132: 33 0c 0a                 a5 = 0xa
 49135: 82 1b 50                 a4 = u64 [sp + 0x50]
 49138: 01                       fallthrough
      :                          @3138
 49139: c8 a6 09                 a2 = s1 + a3
 49142: 7c 99                    a2 = u8 [a2]
 49144: aa c9 0b                 jump @3141 if a2 == a5
      :                          @3139
 49147: 95 aa 01                 a3 = a3 + 0x1
 49150: ab a8 f5                 jump @3138 if a1 != a3
      :                          @3140
 49153: 28 2d                    jump @3147
      :                          @3141
 49155: c8 7a 0a                 a3 = a3 + a0
 49158: 01                       fallthrough
      :                          @3142
 49159: c8 0a 0a                 a3 = a3 + ra
 49162: 95 a0 01                 ra = a3 + 0x1
 49165: ae 2a 38 ff              jump @3120 if a3 >=u t0
      :                          @3143
 49169: 82 17 58                 a0 = u64 [sp + 0x58]
 49172: c8 7a 0a                 a3 = a3 + a0
 49175: 7c a7                    a0 = u8 [a3]
 49177: ab c7 2c ff              jump @3120 if a0 != a5
      :                          @3144
 49181: 28 62                    jump @3155
      :                          @3145
 49183: 82 1b 50                 a4 = u64 [sp + 0x50]
 49186: c8 0a 0a                 a3 = a3 + ra
 49189: 95 a0 01                 ra = a3 + 0x1
 49192: ac 2a e9                 jump @3143 if a3 <u t0
      :                          @3146
 49195: 28 1a ff                 jump @3120
      :                          @3147
 49198: 64 20                    ra = t0
 49200: 01                       fallthrough
      :                          @3148
 49201: 49 11 40 01              u64 [sp + 64] = 0x1
 49205: 64 b5                    s0 = a4
 49207: 64 26                    s1 = t0
 49209: aa 2b 57                 jump @3157 if a4 == t0
      :                          @3149
 49212: 82 17 48                 a0 = u64 [sp + 0x48]
 49215: 7c 77                    a0 = u8 [a0]
 49217: 51 07 23                 jump @3152 if a0 == 0
      :                          @3150
 49220: 82 17 30                 a0 = u64 [sp + 0x30]
 49223: 82 7a 18                 a3 = u64 [a0 + 0x18]
 49226: 33 09 04                 a2 = 0x4
 49229: 82 17 38                 a0 = u64 [sp + 0x38]
 49232: 82 18 08                 a1 = u64 [sp + 0x8]
 49235: 7b 10 28                 u64 [sp + 0x28] = ra
 49238: b4 a0 02 54 03           ra = 852, jump [a3]
      :                          @3151 [@dyn 426]
 49243: 82 1b 50                 a4 = u64 [sp + 0x50]
 49246: 82 10 28                 ra = u64 [sp + 0x28]
 49249: 52 07 33                 jump @3158 if a0 != 0
      :                          @3152
 49252: c9 b6 09                 a2 = s1 - a4
 49255: 82 18 58                 a1 = u64 [sp + 0x58]
 49258: c8 b8 08                 a1 = a1 + a4
 49261: ab b6 8e fe              jump @3114 if s1 != a4
      :                          @3153
 49265: 64 06                    s1 = ra
 49267: 33 07                    a0 = 0
 49269: 28 95 fe                 jump @3115
      :                          @3154
 49272: 64 20                    ra = t0
 49274: 82 1b 50                 a4 = u64 [sp + 0x50]
 49277: 28 b4                    jump @3148
      :                          @3155
 49279: 49 11 40                 u64 [sp + 64] = 0
 49282: 64 05                    s0 = ra
 49284: 64 06                    s1 = ra
 49286: 82 17 48                 a0 = u64 [sp + 0x48]
 49289: 7c 77                    a0 = u8 [a0]
 49291: 52 07 b9                 jump @3150 if a0 != 0
      :                          @3156
 49294: 28 d6                    jump @3152
      :                          @3157
 49296: 33 07                    a0 = 0
 49298: 28 06                    jump @3159
      :                          @3158
 49300: 33 07 01                 a0 = 0x1
 49303: 01                       fallthrough
      :                          @3159
 49304: 82 10 78                 ra = u64 [sp + 0x78]
 49307: 82 15 70                 s0 = u64 [sp + 0x70]
 49310: 82 16 68                 s1 = u64 [sp + 0x68]
 49313: 95 11 80 00              sp = sp + 0x80
 49317: 32 00                    ret
      :                          @3160 [@dyn 427]
 49319: 95 11 d8                 sp = sp + 0xffffffffffffffd8
 49322: 7b 10 20                 u64 [sp + 0x20] = ra
 49325: 7b 15 18                 u64 [sp + 0x18] = s0
 49328: 7b 16 10                 u64 [sp + 0x10] = s1
 49331: 82 75 10                 s0 = u64 [a0 + 0x10]
 49334: 7c 59                    a2 = u8 [s0]
 49336: 82 7b                    a4 = u64 [a0]
 49338: 82 76 08                 s1 = u64 [a0 + 0x8]
 49341: 51 09 33                 jump @3164 if a2 == 0
      :                          @3161
 49344: 82 6a 18                 a3 = u64 [s1 + 0x18]
 49347: 7b 18 08                 u64 [sp + 0x8] = a1
 49350: 33 08 00 01 01           a1 = 0x10100
 49355: 33 09 04                 a2 = 0x4
 49358: 64 b7                    a0 = a4
 49360: 7b 1b                    u64 [sp] = a4
 49362: b4 a0 02 58 03           ra = 856, jump [a3]
      :                          @3162 [@dyn 428]
 49367: 82 18 08                 a1 = u64 [sp + 0x8]
 49370: 82 1b                    a4 = u64 [sp]
 49372: 51 07 14                 jump @3164 if a0 == 0
      :                          @3163
 49375: 33 07 01                 a0 = 0x1
 49378: 82 10 20                 ra = u64 [sp + 0x20]
 49381: 82 15 18                 s0 = u64 [sp + 0x18]
 49384: 82 16 10                 s1 = u64 [sp + 0x10]
 49387: 95 11 28                 sp = sp + 0x28
 49390: 32 00                    ret
      :                          @3164
 49392: 83 87                    i32 a0 = a1 + 0
 49394: 95 77 f6                 a0 = a0 + 0xfffffffffffffff6
 49397: 88 77 01                 a0 = a0 <u 0x1
 49400: 78 57                    u8 [s0] = a0
 49402: 82 6c 20                 a5 = u64 [s1 + 0x20]
 49405: 64 b7                    a0 = a4
 49407: 82 10 20                 ra = u64 [sp + 0x20]
 49410: 82 15 18                 s0 = u64 [sp + 0x18]
 49413: 82 16 10                 s1 = u64 [sp + 0x10]
 49416: 95 11 28                 sp = sp + 0x28
 49419: 32 0c                    jump [a5]
      :                          @3165 [@dyn 429]
 49421: 64 8a                    a3 = a1
 49423: 33 08 b8 11 01           a1 = 0x111b8
 49428: 64 a9                    a2 = a3
 49430: 28 99 fb                 jump @3074
      :                          @3166 [@dyn 430]
 49433: 7c 77                    a0 = u8 [a0]
 49435: 64 89                    a2 = a1
 49437: 33 08 01                 a1 = 0x1
 49440: 28 f9 f3                 jump @2937
      :                          @3167 [@dyn 431]
 49443: 80 77                    a0 = u32 [a0]
 49445: 64 89                    a2 = a1
 49447: 33 08 01                 a1 = 0x1
 49450: 28 ef f3                 jump @2937
      :                          @3168
 49453: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 49457: 7b 10 88 00              u64 [sp + 0x88] = ra
 49461: 7b 15 80 00              u64 [sp + 0x80] = s0
 49465: 7b 16 78                 u64 [sp + 0x78] = s1
 49468: 64 75                    s0 = a0
 49470: 7c 77 10                 a0 = u8 [a0 + 0x10]
 49473: 82 5c                    a5 = u64 [s0]
 49475: 64 8b                    a4 = a1
 49477: 33 08 01                 a1 = 0x1
 49480: 51 07 1e                 jump @3170 if a0 == 0
      :                          @3169
 49483: 78 58 10                 u8 [s0 + 0x10] = a1
 49486: 95 c7 01                 a0 = a5 + 0x1
 49489: 7b 57                    u64 [s0] = a0
 49491: 64 57                    a0 = s0
 49493: 82 10 88 00              ra = u64 [sp + 0x88]
 49497: 82 15 80 00              s0 = u64 [sp + 0x80]
 49501: 82 16 78                 s1 = u64 [sp + 0x78]
 49504: 95 11 90 00              sp = sp + 0x90
 49508: 32 00                    ret
      :                          @3170
 49510: 82 56 08                 s1 = u64 [s0 + 0x8]
 49513: 80 67 34                 a0 = u32 [s1 + 0x34]
 49516: 84 78 04                 a1 = a0 & 0x4
 49519: 7b 1c 10                 u64 [sp + 0x10] = a5
 49522: 52 08 48                 jump @3175 if a1 != 0
      :                          @3171
 49525: 7b 1b                    u64 [sp] = a4
 49527: 7b 19 08                 u64 [sp + 0x8] = a2
 49530: 88 c9 01                 a2 = a5 <u 0x1
 49533: 33 0a e8 11 01           a3 = 0x111e8
 49538: 82 6b 28                 a4 = u64 [s1 + 0x28]
 49541: 33 08 ec 11 01           a1 = 0x111ec
 49546: 82 67 20                 a0 = u64 [s1 + 0x20]
 49549: 82 bb 18                 a4 = u64 [a4 + 0x18]
 49552: db ca 08                 a1 = a3 if a5 != 0
 49555: 33 0a 02                 a3 = 0x2
 49558: c9 9a 09                 a2 = a3 - a2
 49561: b4 b0 02 60 03           ra = 864, jump [a4]
      :                          @3172 [@dyn 432]
 49566: 33 08 01                 a1 = 0x1
 49569: 82 1c 10                 a5 = u64 [sp + 0x10]
 49572: 52 07 a7                 jump @3169 if a0 != 0
      :                          @3173
 49575: 82 17                    a0 = u64 [sp]
 49577: 64 68                    a1 = s1
 49579: 82 19 08                 a2 = u64 [sp + 0x8]
 49582: b4 90 02 62 03           ra = 866, jump [a2]
      :                          @3174 [@dyn 433]
 49587: 82 1c 10                 a5 = u64 [sp + 0x10]
 49590: 64 78                    a1 = a0
 49592: 28 93                    jump @3169
      :                          @3175
 49594: 52 0c 31                 jump @3179 if a5 != 0
      :                          @3176
 49597: 7b 1b                    u64 [sp] = a4
 49599: 7b 19 08                 u64 [sp + 0x8] = a2
 49602: 82 68 28                 a1 = u64 [s1 + 0x28]
 49605: 82 67 20                 a0 = u64 [s1 + 0x20]
 49608: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49611: 33 08 ed 11 01           a1 = 0x111ed
 49616: 33 09 02                 a2 = 0x2
 49619: b4 a0 02 64 03           ra = 868, jump [a3]
      :                          @3177 [@dyn 434]
 49624: 33 08 01                 a1 = 0x1
 49627: 82 1c 10                 a5 = u64 [sp + 0x10]
 49630: 52 07 6d ff              jump @3169 if a0 != 0
      :                          @3178
 49634: 81 67 34                 a0 = i32 [s1 + 0x34]
 49637: 82 19 08                 a2 = u64 [sp + 0x8]
 49640: 82 1b                    a4 = u64 [sp]
 49642: 01                       fallthrough
      :                          @3179
 49643: 46 11 37 01              u8 [sp + 55] = 0x1
 49647: 82 68 20                 a1 = u64 [s1 + 0x20]
 49650: 82 6a 28                 a3 = u64 [s1 + 0x28]
 49653: 7b 18 18                 u64 [sp + 0x18] = a1
 49656: 7b 1a 20                 u64 [sp + 0x20] = a3
 49659: 95 18 37                 a1 = sp + 0x37
 49662: 7b 18 28                 u64 [sp + 0x28] = a1
 49665: 81 68 30                 a1 = i32 [s1 + 0x30]
 49668: 7c 62 38                 t0 = u8 [s1 + 0x38]
 49671: 82 6a                    a3 = u64 [s1]
 49673: 82 63 08                 t1 = u64 [s1 + 0x8]
 49676: 82 6c 10                 a5 = u64 [s1 + 0x10]
 49679: 82 66 18                 s1 = u64 [s1 + 0x18]
 49682: 7a 17 6c                 u32 [sp + 0x6c] = a0
 49685: 7a 18 68                 u32 [sp + 0x68] = a1
 49688: 78 12 70                 u8 [sp + 0x70] = t0
 49691: 7b 1a 38                 u64 [sp + 0x38] = a3
 49694: 7b 13 40                 u64 [sp + 0x40] = t1
 49697: 7b 1c 48                 u64 [sp + 0x48] = a5
 49700: 7b 16 50                 u64 [sp + 0x50] = s1
 49703: 95 17 18                 a0 = sp + 0x18
 49706: 7b 17 58                 u64 [sp + 0x58] = a0
 49709: 33 07 b8 11 01           a0 = 0x111b8
 49714: 7b 17 60                 u64 [sp + 0x60] = a0
 49717: 95 18 38                 a1 = sp + 0x38
 49720: 64 b7                    a0 = a4
 49722: b4 90 02 66 03           ra = 870, jump [a2]
      :                          @3180 [@dyn 435]
 49727: 51 07 0c                 jump @3182 if a0 == 0
      :                          @3181
 49730: 82 1c 10                 a5 = u64 [sp + 0x10]
 49733: 33 08 01                 a1 = 0x1
 49736: 28 03 ff                 jump @3169
      :                          @3182
 49739: 82 18 60                 a1 = u64 [sp + 0x60]
 49742: 82 17 58                 a0 = u64 [sp + 0x58]
 49745: 82 8a 18                 a3 = u64 [a1 + 0x18]
 49748: 33 08 ea 11 01           a1 = 0x111ea
 49753: 33 09 02                 a2 = 0x2
 49756: b4 a0 02 68 03           ra = 872, jump [a3]
      :                          @3183 [@dyn 436]
 49761: 64 78                    a1 = a0
 49763: 82 1c 10                 a5 = u64 [sp + 0x10]
 49766: 28 e5 fe                 jump @3169
      :                          @3184
 49769: 95 11 70 ff              sp = sp + 0xffffffffffffff70
 49773: 7b 10 88 00              u64 [sp + 0x88] = ra
 49777: 7b 15 80 00              u64 [sp + 0x80] = s0
 49781: 7b 16 78                 u64 [sp + 0x78] = s1
 49784: 64 75                    s0 = a0
 49786: 7c 77 08                 a0 = u8 [a0 + 0x8]
 49789: 64 8b                    a4 = a1
 49791: 33 08 01                 a1 = 0x1
 49794: 33 06 01                 s1 = 0x1
 49797: 51 07 1d                 jump @3186 if a0 == 0
      :                          @3185
 49800: 78 56 08                 u8 [s0 + 0x8] = s1
 49803: 46 15 09 01              u8 [s0 + 9] = 0x1
 49807: 64 57                    a0 = s0
 49809: 82 10 88 00              ra = u64 [sp + 0x88]
 49813: 82 15 80 00              s0 = u64 [sp + 0x80]
 49817: 82 16 78                 s1 = u64 [sp + 0x78]
 49820: 95 11 90 00              sp = sp + 0x90
 49824: 32 00                    ret
      :                          @3186
 49826: 64 9a                    a3 = a2
 49828: 82 5c                    a5 = u64 [s0]
 49830: 80 c7 34                 a0 = u32 [a5 + 0x34]
 49833: 7c 58 09                 a1 = u8 [s0 + 0x9]
 49836: 84 79 04                 a2 = a0 & 0x4
 49839: 52 09 45                 jump @3192 if a2 != 0
      :                          @3187
 49842: 51 08 32                 jump @3190 if a1 == 0
      :                          @3188
 49845: 82 c8 28                 a1 = u64 [a5 + 0x28]
 49848: 82 c7 20                 a0 = u64 [a5 + 0x20]
 49851: 82 83 18                 t1 = u64 [a1 + 0x18]
 49854: 33 08 e8 11 01           a1 = 0x111e8
 49859: 33 09 02                 a2 = 0x2
 49862: 64 a6                    s1 = a3
 49864: 7b 1b 10                 u64 [sp + 0x10] = a4
 49867: 7b 1c 08                 u64 [sp + 0x8] = a5
 49870: b4 30 02 6a 03           ra = 874, jump [t1]
      :                          @3189 [@dyn 437]
 49875: 82 1c 08                 a5 = u64 [sp + 0x8]
 49878: 82 1b 10                 a4 = u64 [sp + 0x10]
 49881: 64 6a                    a3 = s1
 49883: 33 08 01                 a1 = 0x1
 49886: 33 06 01                 s1 = 0x1
 49889: 52 07 a7                 jump @3185 if a0 != 0
      :                          @3190
 49892: 64 b7                    a0 = a4
 49894: 64 c8                    a1 = a5
 49896: b4 a0 02 6c 03           ra = 876, jump [a3]
      :                          @3191 [@dyn 438]
 49901: 33 08 01                 a1 = 0x1
 49904: 64 76                    s1 = a0
 49906: 28 96                    jump @3185
      :                          @3192
 49908: 52 08 37                 jump @3196 if a1 != 0
      :                          @3193
 49911: 82 c8 28                 a1 = u64 [a5 + 0x28]
 49914: 82 c7 20                 a0 = u64 [a5 + 0x20]
 49917: 82 83 18                 t1 = u64 [a1 + 0x18]
 49920: 33 08 f0 11 01           a1 = 0x111f0
 49925: 33 09 01                 a2 = 0x1
 49928: 33 06 01                 s1 = 0x1
 49931: 7b 1a                    u64 [sp] = a3
 49933: 7b 1b 10                 u64 [sp + 0x10] = a4
 49936: 7b 1c 08                 u64 [sp + 0x8] = a5
 49939: b4 30 02 6e 03           ra = 878, jump [t1]
      :                          @3194 [@dyn 439]
 49944: 82 1c 08                 a5 = u64 [sp + 0x8]
 49947: 82 1b 10                 a4 = u64 [sp + 0x10]
 49950: 82 1a                    a3 = u64 [sp]
 49952: 33 08 01                 a1 = 0x1
 49955: 52 07 65 ff              jump @3185 if a0 != 0
      :                          @3195
 49959: 81 c7 34                 a0 = i32 [a5 + 0x34]
 49962: 01                       fallthrough
      :                          @3196
 49963: 33 06 01                 s1 = 0x1
 49966: 78 16 37                 u8 [sp + 0x37] = s1
 49969: 82 c8 20                 a1 = u64 [a5 + 0x20]
 49972: 82 c9 28                 a2 = u64 [a5 + 0x28]
 49975: 7b 18 18                 u64 [sp + 0x18] = a1
 49978: 7b 19 20                 u64 [sp + 0x20] = a2
 49981: 95 18 37                 a1 = sp + 0x37
 49984: 7b 18 28                 u64 [sp + 0x28] = a1
 49987: 81 c8 30                 a1 = i32 [a5 + 0x30]
 49990: 7c c9 38                 a2 = u8 [a5 + 0x38]
 49993: 82 c3                    t1 = u64 [a5]
 49995: 82 c4 08                 t2 = u64 [a5 + 0x8]
 49998: 82 c0 10                 ra = u64 [a5 + 0x10]
 50001: 82 c2 18                 t0 = u64 [a5 + 0x18]
 50004: 7a 17 6c                 u32 [sp + 0x6c] = a0
 50007: 7a 18 68                 u32 [sp + 0x68] = a1
 50010: 78 19 70                 u8 [sp + 0x70] = a2
 50013: 7b 13 38                 u64 [sp + 0x38] = t1
 50016: 7b 14 40                 u64 [sp + 0x40] = t2
 50019: 7b 10 48                 u64 [sp + 0x48] = ra
 50022: 7b 12 50                 u64 [sp + 0x50] = t0
 50025: 95 17 18                 a0 = sp + 0x18
 50028: 7b 17 58                 u64 [sp + 0x58] = a0
 50031: 33 07 b8 11 01           a0 = 0x111b8
 50036: 7b 17 60                 u64 [sp + 0x60] = a0
 50039: 95 18 38                 a1 = sp + 0x38
 50042: 64 b7                    a0 = a4
 50044: b4 a0 02 70 03           ra = 880, jump [a3]
      :                          @3197 [@dyn 440]
 50049: 52 07 21                 jump @3200 if a0 != 0
      :                          @3198
 50052: 82 18 60                 a1 = u64 [sp + 0x60]
 50055: 82 17 58                 a0 = u64 [sp + 0x58]
 50058: 82 8a 18                 a3 = u64 [a1 + 0x18]
 50061: 33 08 ea 11 01           a1 = 0x111ea
 50066: 33 09 02                 a2 = 0x2
 50069: b4 a0 02 72 03           ra = 882, jump [a3]
      :                          @3199 [@dyn 441]
 50074: 64 76                    s1 = a0
 50076: 33 08 01                 a1 = 0x1
 50079: 28 e9 fe                 jump @3185
      :                          @3200
 50082: 33 08 01                 a1 = 0x1
 50085: 28 e3 fe                 jump @3185
      :                          @3201 [@dyn 442]
 50088: 7c 79                    a2 = u8 [a0]
 50090: 64 87                    a0 = a1
 50092: 51 09 0e                 jump @3203 if a2 == 0
      :                          @3202
 50095: 33 08 ec 00 01           a1 = 0x100ec
 50100: 33 09 04                 a2 = 0x4
 50103: 28 1b f5                 jump @3001
      :                          @3203
 50106: 33 08 bc 12 01           a1 = 0x112bc
 50111: 33 09 05                 a2 = 0x5
 50114: 28 10 f5                 jump @3001
      :                          @3204 [@dyn 443]
 50117: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 50121: 7b 10 80 00              u64 [sp + 0x80] = ra
 50125: 64 82                    t0 = a1
 50127: 7c 77                    a0 = u8 [a0]
 50129: 33 0a 81 00              a3 = 0x81
 50133: 95 18 7f                 a1 = sp + 0x7f
 50136: 33 03 37                 t1 = 0x37
 50139: 01                       fallthrough
      :                          @3205
 50140: 64 ab                    a4 = a3
 50142: 84 7a 0f                 a3 = a0 & 0xf
 50145: 97 77 38                 a0 = a0 << 0x38
 50148: 98 77 3c                 a0 = a0 >> 0x3c
 50151: 88 ac 0a                 a5 = a3 <u 0xa
 50154: 33 09 30                 a2 = 0x30
 50157: da c3 09                 a2 = t1 if a5 == 0
 50160: be a9 09                 i32 a2 = a2 + a3
 50163: 78 89                    u8 [a1] = a2
 50165: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 50168: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 50171: 52 07 e1                 jump @3205 if a0 != 0
      :                          @3206
 50174: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 50177: 56 27 80 00 2b           jump @3209 if a0 >u 128
      :                          @3207
 50182: 9a ac 81 00              a5 = 0x81 - a3
 50186: 64 1b                    a4 = sp
 50188: c8 7b 0b                 a4 = a4 + a0
 50191: 33 09 f2 11 01           a2 = 0x111f2
 50196: 33 08 01                 a1 = 0x1
 50199: 33 0a 02                 a3 = 0x2
 50202: 64 27                    a0 = t0
 50204: 50 20 78 03 2b f2        ra = 888, jump @2947
      :                          @3208 [@dyn 444]
 50210: 82 10 80 00              ra = u64 [sp + 0x80]
 50214: 95 11 88 00              sp = sp + 0x88
 50218: 32 00                    ret
      :                          @3209
 50220: 00                       trap
      :                          @3210 [@dyn 445]
 50221: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 50225: 7b 10 80 00              u64 [sp + 0x80] = ra
 50229: 64 82                    t0 = a1
 50231: 81 7a                    a3 = i32 [a0]
 50233: 33 08 81 00              a1 = 0x81
 50237: 95 17 7f                 a0 = sp + 0x7f
 50240: 33 03 57                 t1 = 0x57
 50243: 01                       fallthrough
      :                          @3211
 50244: 64 8b                    a4 = a1
 50246: 8b ac 04                 i32 a5 = a3 >> 0x4
 50249: 84 aa 0f                 a3 = a3 & 0xf
 50252: 88 a8 0a                 a1 = a3 <u 0xa
 50255: 33 09 30                 a2 = 0x30
 50258: da 83 09                 a2 = t1 if a1 == 0
 50261: be a9 09                 i32 a2 = a2 + a3
 50264: 78 79                    u8 [a0] = a2
 50266: 95 77 ff                 a0 = a0 + 0xffffffffffffffff
 50269: 95 b8 ff                 a1 = a4 + 0xffffffffffffffff
 50272: 64 ca                    a3 = a5
 50274: 52 0c e2                 jump @3211 if a5 != 0
      :                          @3212
 50277: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 50280: 56 27 80 00 2b           jump @3215 if a0 >u 128
      :                          @3213
 50285: 9a 8c 81 00              a5 = 0x81 - a1
 50289: 64 1b                    a4 = sp
 50291: c8 7b 0b                 a4 = a4 + a0
 50294: 33 09 f2 11 01           a2 = 0x111f2
 50299: 33 08 01                 a1 = 0x1
 50302: 33 0a 02                 a3 = 0x2
 50305: 64 27                    a0 = t0
 50307: 50 20 7c 03 c4 f1        ra = 892, jump @2947
      :                          @3214 [@dyn 446]
 50313: 82 10 80 00              ra = u64 [sp + 0x80]
 50317: 95 11 88 00              sp = sp + 0x88
 50321: 32 00                    ret
      :                          @3215
 50323: 00                       trap
      :                          @3216 [@dyn 447]
 50324: 81 77                    a0 = i32 [a0]
 50326: 89 7a                    a3 = a0 <s 0
 50328: 85 a9 01                 a2 = a3 ^ 0x1
 50331: 97 7b 20                 a4 = a0 << 0x20
 50334: 98 bb 20                 a4 = a4 >> 0x20
 50337: 9a 77                    a0 = -a0
 50339: da ab 07                 a0 = a4 if a3 == 0
 50342: 64 8a                    a3 = a1
 50344: 64 98                    a1 = a2
 50346: 64 a9                    a2 = a3
 50348: 28 6d f0                 jump @2937
      :                          @3217 [@dyn 448]
 50351: 82 79                    a2 = u64 [a0]
 50353: 9a 97                    a0 = -a2
 50355: e3 79 07                 a0 = maxs(a2, a0)
 50358: 85 99 ff                 a2 = a2 ^ 0xffffffffffffffff
 50361: 98 99 3f                 a2 = a2 >> 0x3f
 50364: 64 8a                    a3 = a1
 50366: 64 98                    a1 = a2
 50368: 64 a9                    a2 = a3
 50370: 28 57 f0                 jump @2937
      :                          @3218
 50373: 51 08 9b 00              jump @3239 if a1 == 0
      :                          @3219
 50377: 64 79                    a2 = a0
 50379: 7c 77                    a0 = u8 [a0]
 50381: 51 07 91 00              jump @3238 if a0 == 0
      :                          @3220
 50385: 51 27 ff 00 90 00        jump @3240 if a0 == 255
      :                          @3221
 50391: 6c 7a                    a3 = sext.b a0
 50393: 57 0a 09                 jump @3223 if a3 <s 0
      :                          @3222
 50396: 33 0a                    a3 = 0
 50398: 33 08                    a1 = 0
 50400: 28 73                    jump @3237
      :                          @3223
 50402: 55 27 c0 00 0d           jump @3225 if a0 >=u 192
      :                          @3224
 50407: 33 0a 01                 a3 = 0x1
 50410: 33 0b 80                 a4 = 0xffffffffffffff80
 50413: 28 4a                    jump @3234
      :                          @3225
 50415: 55 27 e0 00 0e           jump @3227 if a0 >=u 224
      :                          @3226
 50420: 33 0a 02                 a3 = 0x2
 50423: 33 0b 40 ff              a4 = 0xffffffffffffff40
 50427: 28 3c                    jump @3234
      :                          @3227
 50429: 55 27 f0 00 0e           jump @3229 if a0 >=u 240
      :                          @3228
 50434: 33 0a 03                 a3 = 0x3
 50437: 33 0b 20 ff              a4 = 0xffffffffffffff20
 50441: 28 2e                    jump @3234
      :                          @3229
 50443: 55 27 f8 00 0e           jump @3231 if a0 >=u 248
      :                          @3230
 50448: 33 0a 04                 a3 = 0x4
 50451: 33 0b 10 ff              a4 = 0xffffffffffffff10
 50455: 28 20                    jump @3234
      :                          @3231
 50457: 55 27 fc 00 0e           jump @3233 if a0 >=u 252
      :                          @3232
 50462: 33 0a 05                 a3 = 0x5
 50465: 33 0b 08 ff              a4 = 0xffffffffffffff08
 50469: 28 12                    jump @3234
      :                          @3233
 50471: 88 7a fe 00              a3 = a0 <u 0xfe
 50475: 33 0b 04 ff              a4 = 0xffffffffffffff04
 50479: 93 ab 02 ff              a4 = 0xffffffffffffff02 if a3 == 0
 50483: 85 aa 07                 a3 = a3 ^ 0x7
 50486: 01                       fallthrough
      :                          @3234
 50487: ae 8a 2b                 jump @3241 if a3 >=u a1
      :                          @3235
 50490: 33 08                    a1 = 0
 50492: c8 b7 07                 a0 = a0 + a4
 50495: 64 ab                    a4 = a3
 50497: 01                       fallthrough
      :                          @3236
 50498: c8 b9 0c                 a5 = a2 + a4
 50501: 7c cc                    a5 = u8 [a5]
 50503: 97 88 08                 a1 = a1 << 0x8
 50506: 95 bb ff                 a4 = a4 + 0xffffffffffffffff
 50509: d4 c8 08                 a1 = a1 | a5
 50512: 52 0b f2                 jump @3236 if a4 != 0
      :                          @3237
 50515: 8a a9 03                 i32 a2 = a3 << 0x3
 50518: cf 97 07                 a0 = a0 << a2
 50521: c8 87 07                 a0 = a0 + a1
 50524: 32 00                    ret
      :                          @3238
 50526: 32 00                    ret
      :                          @3239
 50528: 00                       trap
      :                          @3240
 50529: 00                       trap
      :                          @3241
 50530: 00                       trap
      :                          @3242 [@dyn 449]
 50531: 95 11 d0                 sp = sp + 0xffffffffffffffd0
 50534: 7b 10 28                 u64 [sp + 0x28] = ra
 50537: 7b 15 20                 u64 [sp + 0x20] = s0
 50540: 7b 16 18                 u64 [sp + 0x18] = s1
 50543: 64 86                    s1 = a1
 50545: 82 88 28                 a1 = u64 [a1 + 0x28]
 50548: 82 6a 20                 a3 = u64 [s1 + 0x20]
 50551: 82 8b 18                 a4 = u64 [a1 + 0x18]
 50554: 64 75                    s0 = a0
 50556: 33 08 b1 11 01           a1 = 0x111b1
 50561: 33 09 01                 a2 = 0x1
 50564: 64 a7                    a0 = a3
 50566: b4 b0 02 84 03           ra = 900, jump [a4]
      :                          @3243 [@dyn 450]
 50571: 7b 16                    u64 [sp] = s1
 50573: 78 17 08                 u8 [sp + 0x8] = a0
 50576: 46 11 09                 u8 [sp + 9] = 0
 50579: 7b 15 10                 u64 [sp + 0x10] = s0
 50582: 33 09 8a 03              a2 = 0x38a
 50586: 64 17                    a0 = sp
 50588: 95 18 10                 a1 = sp + 0x10
 50591: 50 20 86 03 ca fc        ra = 902, jump @3184
      :                          @3244 [@dyn 451]
 50597: 33 07 01                 a0 = 0x1
 50600: 7c 18 08                 a1 = u8 [sp + 0x8]
 50603: 52 08 1b                 jump @3246 if a1 != 0
      :                          @3245
 50606: 82 17                    a0 = u64 [sp]
 50608: 82 78 28                 a1 = u64 [a0 + 0x28]
 50611: 82 77 20                 a0 = u64 [a0 + 0x20]
 50614: 82 8a 18                 a3 = u64 [a1 + 0x18]
 50617: 33 08 f1 11 01           a1 = 0x111f1
 50622: 33 09 01                 a2 = 0x1
 50625: b4 a0 02 88 03           ra = 904, jump [a3]
      :                          @3246 [@dyn 452]
 50630: 82 10 28                 ra = u64 [sp + 0x28]
 50633: 82 15 20                 s0 = u64 [sp + 0x20]
 50636: 82 16 18                 s1 = u64 [sp + 0x18]
 50639: 95 11 30                 sp = sp + 0x30
 50642: 32 00                    ret
      :                          @3247 [@dyn 453]
 50644: 95 11 78 ff              sp = sp + 0xffffffffffffff78
 50648: 7b 10 80 00              u64 [sp + 0x80] = ra
 50652: 64 82                    t0 = a1
 50654: 80 88 34                 a1 = u32 [a1 + 0x34]
 50657: 82 77                    a0 = u64 [a0]
 50659: 84 89 10                 a2 = a1 & 0x10
 50662: 52 09 1b                 jump @3250 if a2 != 0
      :                          @3248
 50665: 84 88 20                 a1 = a1 & 0x20
 50668: 52 08 46                 jump @3253 if a1 != 0
      :                          @3249
 50671: 7c 77                    a0 = u8 [a0]
 50673: 33 08 01                 a1 = 0x1
 50676: 64 29                    a2 = t0
 50678: 82 10 80 00              ra = u64 [sp + 0x80]
 50682: 95 11 88 00              sp = sp + 0x88
 50686: 28 1b ef                 jump @2937
      :                          @3250
 50689: 7c 77                    a0 = u8 [a0]
 50691: 33 0a 81 00              a3 = 0x81
 50695: 95 18 7f                 a1 = sp + 0x7f
 50698: 33 03 57                 t1 = 0x57
 50701: 01                       fallthrough
      :                          @3251
 50702: 64 ab                    a4 = a3
 50704: 84 7a 0f                 a3 = a0 & 0xf
 50707: 97 77 38                 a0 = a0 << 0x38
 50710: 98 77 3c                 a0 = a0 >> 0x3c
 50713: 88 ac 0a                 a5 = a3 <u 0xa
 50716: 33 09 30                 a2 = 0x30
 50719: da c3 09                 a2 = t1 if a5 == 0
 50722: be a9 09                 i32 a2 = a2 + a3
 50725: 78 89                    u8 [a1] = a2
 50727: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 50730: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 50733: 52 07 e1                 jump @3251 if a0 != 0
      :                          @3252
 50736: 28 31                    jump @3255
      :                          @3253
 50738: 7c 77                    a0 = u8 [a0]
 50740: 33 0a 81 00              a3 = 0x81
 50744: 95 18 7f                 a1 = sp + 0x7f
 50747: 33 03 37                 t1 = 0x37
 50750: 01                       fallthrough
      :                          @3254
 50751: 64 ab                    a4 = a3
 50753: 84 7a 0f                 a3 = a0 & 0xf
 50756: 97 77 38                 a0 = a0 << 0x38
 50759: 98 77 3c                 a0 = a0 >> 0x3c
 50762: 88 ac 0a                 a5 = a3 <u 0xa
 50765: 33 09 30                 a2 = 0x30
 50768: da c3 09                 a2 = t1 if a5 == 0
 50771: be a9 09                 i32 a2 = a2 + a3
 50774: 78 89                    u8 [a1] = a2
 50776: 95 88 ff                 a1 = a1 + 0xffffffffffffffff
 50779: 95 ba ff                 a3 = a4 + 0xffffffffffffffff
 50782: 52 07 e1                 jump @3254 if a0 != 0
      :                          @3255
 50785: 95 b7 fe                 a0 = a4 + 0xfffffffffffffffe
 50788: 56 27 80 00 2b           jump @3258 if a0 >u 128
      :                          @3256
 50793: 9a ac 81 00              a5 = 0x81 - a3
 50797: 64 1b                    a4 = sp
 50799: c8 7b 0b                 a4 = a4 + a0
 50802: 33 09 f2 11 01           a2 = 0x111f2
 50807: 33 08 01                 a1 = 0x1
 50810: 33 0a 02                 a3 = 0x2
 50813: 64 27                    a0 = t0
 50815: 50 20 8c 03 c8 ef        ra = 908, jump @2947
      :                          @3257 [@dyn 454]
 50821: 82 10 80 00              ra = u64 [sp + 0x80]
 50825: 95 11 88 00              sp = sp + 0x88
 50829: 32 00                    ret
      :                          @3258
 50831: 00                       trap
